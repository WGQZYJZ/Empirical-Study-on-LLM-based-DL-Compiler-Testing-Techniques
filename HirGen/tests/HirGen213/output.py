import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_205 = relay.var("var_205", dtype = "float64", shape = (4, 10, 12))#candidate|205|(4, 10, 12)|var|float64
uop_206 = relay.log10(var_205.astype('float64')) # shape=(4, 10, 12)
output = relay.Tuple([uop_206,])
output2 = relay.Tuple([uop_206,])
func_221 = relay.Function([var_205,], output)
mod['func_221'] = func_221
mod = relay.transform.InferType()(mod)
var_222 = relay.var("var_222", dtype = "float64", shape = (4, 10, 12))#candidate|222|(4, 10, 12)|var|float64
output = func_221(var_222)
func_223 = relay.Function([var_222], output)
mutated_mod['func_223'] = func_223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_418 = relay.var("var_418", dtype = "uint8", shape = (16, 1, 16))#candidate|418|(16, 1, 16)|var|uint8
var_419 = relay.var("var_419", dtype = "uint8", shape = (16, 5, 16))#candidate|419|(16, 5, 16)|var|uint8
bop_420 = relay.logical_xor(var_418.astype('uint8'), var_419.astype('uint8')) # shape=(16, 5, 16)
func_221_call = mod.get_global_var('func_221')
func_223_call = mutated_mod.get_global_var('func_223')
const_424 = relay.const([-8.388768,-5.279551,9.092982,2.532857,9.226707,-7.420265,-8.650292,7.892885,-9.428163,9.488492,3.633803,1.156621,0.830402,-4.945734,9.725140,7.987999,8.510213,-3.127810,-2.944884,-6.792181,-6.517465,1.783196,8.136679,-1.144901,3.344790,-7.203680,1.456129,-6.082643,-6.997849,7.719921,-1.215691,1.239524,2.572473,-4.769307,4.572594,7.022436,5.461240,-3.599992,5.425624,5.560003,6.999517,2.396636,8.970623,7.929810,-2.587805,6.686378,8.779811,-8.815601,0.616063,4.805917,3.538417,-0.907511,5.077683,-3.016643,-1.562072,-3.415707,0.327938,-7.717658,8.675106,-2.856109,2.285919,-1.841944,-8.360353,2.920420,-7.416694,-4.380593,2.917607,-2.797739,3.314462,7.835232,-7.502458,1.872464,-2.474285,1.884863,-3.719919,0.999980,9.266821,-4.629492,7.802399,6.373048,-7.768697,6.814132,9.282028,7.715688,-9.318648,-3.746848,-3.649211,-5.126396,8.661135,-1.116719,6.665758,1.846086,7.902510,-9.065264,2.755100,-3.117603,9.213283,0.642948,-0.826409,-5.467172,-3.831908,6.708950,-8.112588,7.821205,3.015109,3.721459,5.224693,-0.629015,0.011783,8.730380,-7.749885,-3.318874,-7.418703,-8.301710,-8.176804,9.285495,4.739263,3.904496,5.290563,-7.884420,-3.652070,6.541180,-3.552139,9.298940,9.887583,8.668696,-6.229316,5.522250,0.001832,6.546067,-0.386147,-7.305484,-8.147755,-0.635108,-8.760673,-5.617184,-4.002121,9.607753,1.440897,-9.472187,9.769566,4.056323,-1.659942,-3.531366,-9.785627,1.752271,1.271228,8.545117,-3.569988,8.402934,-5.634310,5.312207,9.029843,3.263275,6.927898,9.861094,6.357823,8.958317,-4.296034,-0.992694,9.000149,7.342295,8.536583,-4.607615,-0.566898,7.999157,-6.830617,-5.214565,0.236275,-2.379742,5.778531,9.499661,-8.417750,-8.667530,1.773391,-4.974276,0.011072,2.354365,-0.112617,-5.786762,9.948064,8.483222,-1.048836,1.714622,7.747648,6.952800,-4.577060,-5.459845,5.123889,5.065499,6.474859,5.578610,5.844712,0.537482,7.740401,0.431423,1.541383,-0.499694,-8.909801,5.547251,4.313910,-3.641420,-6.648790,2.806540,-8.435989,-3.448354,-0.550684,-2.330121,-8.338284,3.771844,7.251012,-0.990683,4.615686,-2.748348,-2.531094,2.548542,-0.016815,2.433905,-1.323918,-8.095951,9.476990,-0.709596,2.000031,-3.080395,8.565924,5.163644,-1.450543,9.663352,-2.799098,6.812476,-9.451693,-4.544205,-0.858599,5.268958,-6.960151,6.638690,-3.307347,4.322704,-6.211264,4.320946,8.183695,-0.248622,-6.878995,8.916874,-1.533106,9.246779,-2.020780,0.753808,-8.593908,9.159438,5.238556,-3.600045,5.542053,2.773215,4.642897,4.347210,4.347863,-9.893696,8.813756,-9.793319,-7.529936,-4.797729,4.400679,-6.504278,-2.322177,0.694910,-9.010843,0.243096,1.576350,-0.540820,5.051990,-6.743698,4.225091,-4.915133,-4.942902,-1.086524,9.364385,4.358458,7.223052,-1.003768,-3.097773,9.009633,8.114083,-9.647823,6.085963,-1.105473,-1.378639,7.534274,8.693497,-1.134360,-6.063053,2.241064,-2.911815,-0.438939,-7.688187,3.603013,-3.581640,7.275748,-5.821878,7.181421,-0.688991,-9.528594,-1.436859,6.106510,-7.024797,2.159417,-7.420671,-1.899778,-5.381710,-3.663150,6.948013,7.217094,-6.795575,5.121170,-5.557563,-4.137954,-7.516651,9.098332,-5.478486,8.471469,-2.819789,6.795806,4.598298,9.290352,3.932743,-7.771729,-2.709388,-6.398461,-2.661831,5.447211,-6.179188,-6.285790,-8.092306,4.787986,-9.543800,4.867755,-9.062042,9.742549,-3.168442,5.963555,8.554704,-3.939693,7.322484,-5.493292,6.621783,-9.031581,-8.000984,-9.819544,-5.151212,6.156687,-8.253659,2.138456,-2.080442,-5.408992,-7.814150,-1.816971,9.798609,7.450333,5.302428,4.238016,8.037762,4.742686,-2.162864,-0.102388,1.145483,5.047320,6.581236,-5.954962,6.644531,-9.302151,-3.552201,5.922563,-7.466911,-0.808222,2.530402,-3.598024,9.153791,-4.602400,4.978413,-5.312901,-7.734491,6.019913,4.225865,2.994416,-4.905002,-7.941099,-3.589889,3.059157,-2.419442,3.516065,8.938754,-8.248465,0.150175,-7.606006,0.718994,2.468091,-9.674326,1.570947,0.072894,-4.756417,2.587684,-0.248318,3.884020,-2.421165,-0.935972,5.610421,0.354223,-7.549699,-8.215969,3.973183,-9.301758,5.804372,3.142661,-8.763588,-4.886071,2.928542,7.313293,6.207861,5.032104,-6.701184,5.085664,4.375936,4.336165,4.075445,-2.054320,3.612211,-9.068408,5.611754,-0.792814,-3.363490,-5.394164,-6.433816,2.058427,-6.911991,5.489371,-6.465004,-7.654818,8.195626,-7.469727,3.386970,8.850837,5.750840,-4.340663,-1.966738,-9.171065,6.243666,-0.035626,-7.570465,8.788269,-9.906125,0.969340,-7.870590,-5.871726,7.143692,-4.138821,5.311928,0.886357,9.503607,5.040088,-9.472206,-5.629049,-6.717538,2.066609,2.361640,-1.377330,3.821015,-8.944398,7.645315,2.593953,1.206808,-6.249122,-2.279213,3.710807,1.855053,3.658994,-9.140613,9.336558,-0.512632,6.557942,5.703665], dtype = "float64")#candidate|424|(480,)|const|float64
call_423 = relay.TupleGetItem(func_221_call(relay.reshape(const_424.astype('float64'), [4, 10, 12])), 0)
call_425 = relay.TupleGetItem(func_223_call(relay.reshape(const_424.astype('float64'), [4, 10, 12])), 0)
uop_432 = relay.acosh(var_419.astype('float64')) # shape=(16, 5, 16)
var_435 = relay.var("var_435", dtype = "float64", shape = (16, 5, 16))#candidate|435|(16, 5, 16)|var|float64
bop_436 = relay.power(uop_432.astype('float64'), relay.reshape(var_435.astype('float64'), relay.shape_of(uop_432))) # shape=(16, 5, 16)
func_221_call = mod.get_global_var('func_221')
func_223_call = mutated_mod.get_global_var('func_223')
call_442 = relay.TupleGetItem(func_221_call(relay.reshape(call_423.astype('float64'), [4, 10, 12])), 0)
call_443 = relay.TupleGetItem(func_223_call(relay.reshape(call_423.astype('float64'), [4, 10, 12])), 0)
var_457 = relay.var("var_457", dtype = "float64", shape = (16, 5, 16))#candidate|457|(16, 5, 16)|var|float64
bop_458 = relay.greater_equal(bop_436.astype('bool'), relay.reshape(var_457.astype('bool'), relay.shape_of(bop_436))) # shape=(16, 5, 16)
bop_466 = relay.add(bop_458.astype('int16'), relay.reshape(bop_436.astype('int16'), relay.shape_of(bop_458))) # shape=(16, 5, 16)
var_470 = relay.var("var_470", dtype = "bool", shape = (16, 5, 16))#candidate|470|(16, 5, 16)|var|bool
bop_471 = relay.maximum(bop_458.astype('uint16'), relay.reshape(var_470.astype('uint16'), relay.shape_of(bop_458))) # shape=(16, 5, 16)
func_221_call = mod.get_global_var('func_221')
func_223_call = mutated_mod.get_global_var('func_223')
call_475 = relay.TupleGetItem(func_221_call(relay.reshape(const_424.astype('float64'), [4, 10, 12])), 0)
call_476 = relay.TupleGetItem(func_223_call(relay.reshape(const_424.astype('float64'), [4, 10, 12])), 0)
func_221_call = mod.get_global_var('func_221')
func_223_call = mutated_mod.get_global_var('func_223')
call_481 = relay.TupleGetItem(func_221_call(relay.reshape(const_424.astype('float64'), [4, 10, 12])), 0)
call_482 = relay.TupleGetItem(func_223_call(relay.reshape(const_424.astype('float64'), [4, 10, 12])), 0)
output = relay.Tuple([bop_420,call_423,const_424,call_442,bop_466,bop_471,call_475,call_481,])
output2 = relay.Tuple([bop_420,call_425,const_424,call_443,bop_466,bop_471,call_476,call_482,])
func_490 = relay.Function([var_418,var_419,var_435,var_457,var_470,], output)
mod['func_490'] = func_490
mod = relay.transform.InferType()(mod)
mutated_mod['func_490'] = func_490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_490_call = mutated_mod.get_global_var('func_490')
var_492 = relay.var("var_492", dtype = "uint8", shape = (16, 1, 16))#candidate|492|(16, 1, 16)|var|uint8
var_493 = relay.var("var_493", dtype = "uint8", shape = (16, 5, 16))#candidate|493|(16, 5, 16)|var|uint8
var_494 = relay.var("var_494", dtype = "float64", shape = (16, 5, 16))#candidate|494|(16, 5, 16)|var|float64
var_495 = relay.var("var_495", dtype = "float64", shape = (16, 5, 16))#candidate|495|(16, 5, 16)|var|float64
var_496 = relay.var("var_496", dtype = "bool", shape = (16, 5, 16))#candidate|496|(16, 5, 16)|var|bool
call_491 = func_490_call(var_492,var_493,var_494,var_495,var_496,)
output = call_491
func_497 = relay.Function([var_492,var_493,var_494,var_495,var_496,], output)
mutated_mod['func_497'] = func_497
mutated_mod = relay.transform.InferType()(mutated_mod)
var_650 = relay.var("var_650", dtype = "float32", shape = (12, 9, 7))#candidate|650|(12, 9, 7)|var|float32
const_651 = relay.const([[[-8.983426,7.935345,8.597680,-4.404016,-1.839296,3.037059,1.843832],[-8.589219,0.137301,-0.250923,0.650213,-0.251858,-6.793641,0.176158],[3.014200,5.034765,4.962862,-4.606062,-6.777327,4.298821,0.582752],[-9.075808,-4.894520,-0.785886,-0.660616,1.608778,-1.980779,-4.744659],[4.719710,2.544079,3.088938,6.360070,0.615700,3.543302,-7.059241],[-2.422621,0.538135,0.596130,2.358465,7.722246,-4.321817,-1.751980],[7.600060,-6.908500,-9.527494,4.476290,-9.274350,-7.763528,-0.757096],[3.859497,-0.904102,-4.560054,3.680840,2.721393,-4.133884,-9.967678],[0.361393,2.367425,2.853023,0.458915,8.259842,8.844700,7.144030]],[[1.345176,2.178243,8.916096,-5.144432,-3.472222,1.248975,-7.330130],[-3.697311,-3.805708,5.170357,-6.997841,3.171523,-6.843556,5.894557],[-3.374283,0.257377,-0.136696,6.101510,-5.479647,-3.854534,8.744943],[-3.407819,8.085939,-7.408913,-2.016200,2.074772,-9.120822,0.650243],[5.139755,2.083728,1.041256,9.685830,1.972694,4.263498,-4.959820],[-6.512168,9.920499,9.249171,-3.254479,5.478684,-4.873369,0.079357],[3.130054,5.685019,7.016667,1.167524,-2.336057,7.942013,7.496511],[7.647152,-5.150216,4.808220,4.845070,-4.440479,-8.723291,-4.125064],[-6.962606,3.858500,-0.444031,-3.472972,0.016017,4.101437,-8.444744]],[[-4.339028,8.497892,1.489845,0.345960,-1.226206,4.569400,-0.037615],[-6.259546,-8.980548,1.665614,-1.266644,0.758375,1.106281,-9.490957],[-6.083416,7.026401,-9.401718,-3.850969,-6.190234,-3.580753,-6.631261],[6.566013,1.557129,-7.565195,-0.141942,-9.108316,6.982529,5.111297],[-8.812407,4.873651,-7.257387,9.916823,-4.814320,-3.678411,-2.663740],[0.791880,4.968608,5.437391,-5.655809,-8.298175,0.184493,1.425431],[-9.840460,-7.921900,1.585485,3.072854,-7.902237,-7.806312,1.974169],[-5.314161,-8.682811,-1.771200,-5.447789,-3.276521,3.550989,-0.085893],[4.565938,-3.960655,-7.723720,6.158735,-6.601031,-7.982499,1.461137]],[[8.011148,6.224377,-0.117718,6.365227,5.647011,5.987632,-6.866917],[7.263197,4.986878,6.161016,-9.838297,-6.250252,1.752005,3.306394],[-0.457441,-7.398521,3.403603,7.423525,5.538451,-2.483875,-4.769827],[3.367262,7.719633,1.882073,4.102960,-4.026873,6.230283,9.132822],[1.870328,-3.158354,-9.999608,-2.755704,-9.140065,7.228159,-8.144895],[3.072395,5.861347,-5.981415,5.949628,-3.401991,-8.865309,-3.565138],[9.510899,-2.269390,-2.902988,-6.406788,3.498165,-5.768097,-6.496857],[-0.878823,-3.431171,-5.287721,-9.350656,-4.989995,-3.736125,-4.753617],[4.930363,-2.911688,6.678013,3.412415,9.860811,-6.730212,-5.322540]],[[7.055537,-2.175063,-7.568525,1.843271,9.183339,9.171494,0.510227],[-3.585333,-9.106604,-7.268290,-6.865597,8.436808,-6.344033,-8.538531],[5.290628,0.556066,4.505844,-0.668323,-9.955189,-1.457173,3.783864],[0.226182,-1.186302,0.067076,9.918610,1.369874,2.414365,-8.035740],[-7.968223,-6.305246,4.524673,-8.189900,5.807740,-0.906483,-0.761890],[3.938996,-8.568302,-0.372930,-0.430968,2.823720,4.425046,-4.717333],[8.660889,-9.277912,7.959532,-1.960430,9.482215,0.312737,2.204367],[-5.523880,8.564308,-2.195312,6.486426,-3.099848,-9.569811,9.576779],[-9.993671,-7.144908,-8.112277,1.421856,1.715403,8.218899,-9.886628]],[[7.423406,-6.669683,8.792896,-7.991119,-5.855358,-6.728851,8.877736],[-6.022592,4.600329,-2.636895,2.213309,-8.664714,-4.774261,-8.720494],[-9.127956,7.341625,-4.926780,-4.985843,4.905359,6.108525,-6.807152],[-3.308556,-3.864379,-6.782984,7.204027,9.845773,-5.355928,-5.127901],[9.073399,-2.985744,7.847818,-6.869376,2.515068,-8.978052,2.104115],[-5.683420,6.525791,3.951829,-1.130752,0.460627,1.583770,-5.698313],[4.870493,-3.326689,0.095092,-0.411053,-7.599370,-6.024524,4.024308],[-2.301837,9.389910,-2.438532,9.238163,-8.082655,-1.526842,-3.290608],[0.317530,7.961970,2.047316,6.792425,-9.654318,0.313998,-5.989325]],[[-0.323765,-4.544265,-9.557650,-8.773532,9.463179,2.046917,4.447788],[1.332040,1.258159,-8.497833,8.603792,-8.662529,-8.343047,5.068016],[-9.748204,3.674270,2.528617,0.165707,4.410996,9.071278,-5.110093],[6.373133,-8.130660,2.818777,5.820674,-5.193059,4.780197,4.166408],[6.431933,1.158617,4.762875,-6.546665,6.809631,-8.337964,1.400925],[0.864127,-2.215675,4.135104,9.005440,-6.555981,-7.945331,-1.369401],[-5.098902,5.405476,-6.826226,4.608021,-7.949678,-1.122650,9.256358],[-5.272107,-9.010077,-6.562200,-9.770649,0.114048,-7.471077,-9.309464],[-2.363111,-4.547651,4.472957,-2.057134,4.877586,7.158633,-5.086384]],[[2.053190,-6.959139,-8.164672,4.866846,-6.310735,1.303830,6.090904],[9.355388,-4.820360,-3.396037,-9.523827,2.209753,3.223470,-3.302264],[-8.844639,9.854254,2.886543,0.050588,-5.024906,-2.251697,3.096877],[4.646644,-6.918449,-1.089626,-5.199488,3.303208,-4.033931,-6.411732],[3.689291,-2.928146,4.246009,4.346877,-7.897909,-2.351358,9.634037],[8.161853,-9.958184,-1.770071,0.417193,-6.973560,5.477718,6.190173],[-2.755551,-4.648830,-5.705776,6.335852,-2.352504,-8.490691,5.398345],[5.516304,-4.293866,6.549590,9.640127,4.574425,2.333632,4.785094],[1.257265,-7.595368,-8.264929,-2.834075,-3.762563,-2.833208,-4.269469]],[[5.442746,7.968453,7.145634,6.750999,8.780517,-3.955198,7.029455],[-1.422513,-2.604330,0.173461,4.690645,7.634281,5.576649,2.652642],[-7.659865,-7.683345,0.958436,4.300142,8.027724,-0.107389,2.288024],[7.962595,-9.476991,1.617071,-5.033542,7.398575,-3.006701,2.220560],[-2.425643,3.256817,-6.267034,-1.920993,-4.824613,-8.703994,-7.060636],[-9.480433,2.024294,5.049576,1.447963,4.340476,8.745335,4.671310],[9.628459,1.052809,7.938448,4.624702,0.651997,0.248654,6.189177],[7.811654,-1.206349,6.220951,-9.158337,7.881414,-5.245802,9.951932],[-0.867975,8.006349,6.282328,2.302376,-7.161426,-4.512925,4.341391]],[[7.406037,-3.691843,-1.674934,-8.079827,-1.940944,-9.341477,-6.095442],[-8.016170,0.579652,-8.624650,0.200113,2.861529,-8.342865,3.180187],[6.336489,-2.694341,0.980802,-4.794313,-8.788147,6.037898,7.491171],[-8.786619,-1.719515,4.880967,3.009925,0.103435,7.143919,-5.693506],[-8.680301,-7.437910,-8.778025,-0.562954,6.308108,1.612447,8.006166],[5.628394,2.044752,-3.498492,-5.075275,9.944127,2.057890,-9.577219],[6.753347,-1.279381,-4.502879,-8.808707,6.076905,-5.538383,3.701656],[-6.368655,5.117715,8.652914,-0.603818,-1.763524,0.630613,-3.300315],[-9.237590,5.202498,7.439547,8.349824,-2.115870,-9.676890,-6.008003]],[[1.548566,7.685584,-0.552315,6.900427,6.774189,3.841668,-1.851036],[3.091489,5.965877,-7.280887,4.409236,-3.795612,4.134889,-6.859468],[6.873966,4.061627,-7.481620,-6.852352,4.862283,-6.765972,5.105681],[-5.483647,-5.013227,7.629227,-4.309257,-9.071827,2.823471,-7.817291],[-7.811685,4.683445,-4.630327,-0.083504,8.059104,8.406000,-7.191261],[1.337478,-7.008453,9.773497,8.561156,-7.880777,-3.319801,3.202788],[-7.539504,4.598020,2.932963,-1.211660,6.801654,-9.692110,8.297095],[8.269756,-4.139877,-2.320955,-8.764003,8.432089,-5.962319,7.413958],[3.123134,-4.600178,2.427664,-7.830896,-0.797052,-2.079468,1.999910]],[[-0.574493,-1.859723,-9.502819,-3.926042,1.378542,-9.334376,-8.934343],[8.034152,-1.795052,9.267567,-5.653340,-4.597521,6.308265,7.678834],[-2.311295,-1.771838,3.717710,-6.270262,3.803541,-0.371664,6.486796],[-7.543238,1.335893,-1.438543,-9.023860,2.894243,-5.040188,0.113381],[-3.280152,6.348213,7.520068,-5.080038,-4.965973,-0.123403,4.578961],[9.968802,5.967648,4.172790,8.900671,-3.089599,1.555098,-0.316745],[6.998735,5.786167,-1.102129,-4.940441,-1.509668,-1.751253,1.793117],[2.002283,-1.731586,-9.083693,-1.115302,-7.208129,9.944893,3.577822],[-4.710694,-7.677526,4.425681,-6.199153,-1.038726,3.197408,3.563920]]], dtype = "float32")#candidate|651|(12, 9, 7)|const|float32
bop_652 = relay.floor_divide(var_650.astype('float32'), relay.reshape(const_651.astype('float32'), relay.shape_of(var_650))) # shape=(12, 9, 7)
output = relay.Tuple([bop_652,])
output2 = relay.Tuple([bop_652,])
func_662 = relay.Function([var_650,], output)
mod['func_662'] = func_662
mod = relay.transform.InferType()(mod)
mutated_mod['func_662'] = func_662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_663 = relay.var("var_663", dtype = "float32", shape = (12, 9, 7))#candidate|663|(12, 9, 7)|var|float32
func_662_call = mutated_mod.get_global_var('func_662')
call_664 = func_662_call(var_663)
output = call_664
func_665 = relay.Function([var_663], output)
mutated_mod['func_665'] = func_665
mutated_mod = relay.transform.InferType()(mutated_mod)
var_960 = relay.var("var_960", dtype = "uint32", shape = ())#candidate|960|()|var|uint32
var_961 = relay.var("var_961", dtype = "uint32", shape = (7, 6, 1))#candidate|961|(7, 6, 1)|var|uint32
bop_962 = relay.greater_equal(var_960.astype('bool'), var_961.astype('bool')) # shape=(7, 6, 1)
uop_965 = relay.atanh(bop_962.astype('float32')) # shape=(7, 6, 1)
output = relay.Tuple([uop_965,])
output2 = relay.Tuple([uop_965,])
func_971 = relay.Function([var_960,var_961,], output)
mod['func_971'] = func_971
mod = relay.transform.InferType()(mod)
var_972 = relay.var("var_972", dtype = "uint32", shape = ())#candidate|972|()|var|uint32
var_973 = relay.var("var_973", dtype = "uint32", shape = (7, 6, 1))#candidate|973|(7, 6, 1)|var|uint32
output = func_971(var_972,var_973,)
func_974 = relay.Function([var_972,var_973,], output)
mutated_mod['func_974'] = func_974
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1017 = relay.var("var_1017", dtype = "bool", shape = (11, 8, 2))#candidate|1017|(11, 8, 2)|var|bool
const_1018 = relay.const([[[True,False],[True,False],[False,True],[True,True],[True,True],[True,True],[True,False],[False,True]],[[False,True],[False,False],[True,True],[False,True],[False,True],[True,True],[False,False],[True,True]],[[True,False],[True,True],[False,False],[False,True],[False,True],[False,True],[False,False],[True,False]],[[True,True],[False,True],[False,False],[False,False],[True,True],[True,True],[False,True],[False,True]],[[True,False],[False,True],[False,False],[True,False],[True,True],[False,True],[False,True],[True,True]],[[False,True],[False,False],[True,False],[False,False],[False,True],[True,False],[False,False],[True,False]],[[False,True],[True,False],[True,False],[True,False],[False,True],[False,False],[False,True],[True,False]],[[True,False],[False,False],[False,False],[True,False],[True,False],[False,False],[False,True],[False,False]],[[False,True],[True,True],[False,False],[False,False],[True,False],[False,True],[True,True],[True,False]],[[True,True],[True,False],[True,False],[False,False],[False,True],[False,True],[False,False],[True,True]],[[False,False],[False,False],[False,False],[False,True],[False,False],[False,False],[True,True],[False,True]]], dtype = "bool")#candidate|1018|(11, 8, 2)|const|bool
bop_1019 = relay.logical_and(var_1017.astype('bool'), relay.reshape(const_1018.astype('bool'), relay.shape_of(var_1017))) # shape=(11, 8, 2)
output = relay.Tuple([bop_1019,])
output2 = relay.Tuple([bop_1019,])
func_1022 = relay.Function([var_1017,], output)
mod['func_1022'] = func_1022
mod = relay.transform.InferType()(mod)
var_1023 = relay.var("var_1023", dtype = "bool", shape = (11, 8, 2))#candidate|1023|(11, 8, 2)|var|bool
output = func_1022(var_1023)
func_1024 = relay.Function([var_1023], output)
mutated_mod['func_1024'] = func_1024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1033 = relay.var("var_1033", dtype = "float32", shape = (1, 9, 6))#candidate|1033|(1, 9, 6)|var|float32
uop_1034 = relay.asinh(var_1033.astype('float32')) # shape=(1, 9, 6)
output = uop_1034
output2 = uop_1034
func_1042 = relay.Function([var_1033,], output)
mod['func_1042'] = func_1042
mod = relay.transform.InferType()(mod)
var_1043 = relay.var("var_1043", dtype = "float32", shape = (1, 9, 6))#candidate|1043|(1, 9, 6)|var|float32
output = func_1042(var_1043)
func_1044 = relay.Function([var_1043], output)
mutated_mod['func_1044'] = func_1044
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1198 = relay.const(-4.328897, dtype = "float64")#candidate|1198|()|const|float64
const_1199 = relay.const([[[-5.617530,-5.840064,-6.757124,9.008530,-0.171644,2.472717],[0.662229,9.658931,9.095823,-8.466293,-4.990871,-6.481345],[3.693424,-2.946288,4.788619,5.193861,-9.444310,-4.391599],[-1.030303,6.771510,4.561699,-2.105689,5.709572,7.291855],[-2.449942,3.821212,2.166173,-0.388487,5.292851,-6.508175],[7.067294,-5.615367,-1.507993,-6.803397,-7.970907,9.669821],[-9.958083,-1.010025,2.512278,-1.017441,1.468053,4.356383],[0.756707,5.070997,-4.420873,-1.473338,-9.819971,4.001859],[3.534505,1.903885,1.257073,2.358828,6.192223,-6.060060],[-2.240435,-5.075630,-3.641000,-1.968859,-7.011492,-3.330915],[2.945203,-1.441671,9.149439,-0.505383,7.063931,-0.648397],[-8.220347,-4.832933,-1.128861,8.503613,-9.391834,-4.006849],[9.221483,-2.332919,8.422567,-7.022170,3.271428,-0.032148],[-3.376443,2.290310,-7.514825,-4.490004,-5.761532,-1.075314],[3.088799,4.074901,-8.334398,-8.980288,-3.490255,1.626596]]], dtype = "float64")#candidate|1199|(1, 15, 6)|const|float64
bop_1200 = relay.floor_divide(const_1198.astype('float64'), const_1199.astype('float64')) # shape=(1, 15, 6)
output = bop_1200
output2 = bop_1200
func_1212 = relay.Function([], output)
mod['func_1212'] = func_1212
mod = relay.transform.InferType()(mod)
mutated_mod['func_1212'] = func_1212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mutated_mod.get_global_var('func_1212')
call_1213 = func_1212_call()
output = call_1213
func_1214 = relay.Function([], output)
mutated_mod['func_1214'] = func_1214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_1254 = func_1212_call()
call_1255 = func_1212_call()
func_490_call = mod.get_global_var('func_490')
func_497_call = mutated_mod.get_global_var('func_497')
var_1260 = relay.var("var_1260", dtype = "uint8", shape = (256,))#candidate|1260|(256,)|var|uint8
const_1261 = relay.const([-8,-7,8,7,9,-4,1,2,-5,-9,5,-5,4,3,7,5,-1,-10,-10,-6,10,-3,-8,-10,-1,3,5,-10,-7,-6,3,2,2,4,-9,-10,-4,2,9,4,-1,5,-6,6,10,-8,5,-8,9,10,4,-7,-4,-10,-2,-2,-3,10,2,1,-10,-6,6,-2,7,3,2,2,10,9,-8,3,-8,3,9,-3,-4,3,-2,-6,-7,-10,8,4,-6,10,-6,7,7,5,5,-6,6,8,-4,-6,-3,7,10,1,-8,10,-5,-9,7,8,-3,-1,-4,8,-3,-7,3,-10,-9,1,-4,-3,-7,1,8,8,-6,2,-7,-7,7,9,-10,-4,-3,-6,5,-8,-4,8,10,7,6,5,-2,-8,-6,8,7,3,-7,9,-10,4,-7,8,-10,-3,-4,2,1,-4,6,-3,6,-6,-6,-4,-3,-10,3,-8,-1,-1,-1,1,-4,1,7,-4,-9,-5,-7,-1,1,9,-9,1,1,-7,7,-6,-2,-3,-2,-3,9,-8,-9,5,10,6,-4,-1,8,-7,5,8,-2,-8,1,-7,-9,7,6,10,9,-5,-4,5,-4,9,-8,7,-9,8,6,10,-2,7,-8,-4,-4,9,-7,10,-1,-1,5,10,-6,-3,4,10,-10,-2,4,7,-6,4,3,3,2,-2,5,-10,-10,3,-6,-10,8,5,9,-9,-8,-6,-8,6,6,-6,2,2,-9,-8,8,1,1,9,10,6,-5,-1,-5,5,-7,-2,9,10,1,-4,7,8,-3,-9,6,-1,10,-6,-10,-6,-1,5,4,-9,3,-7,-9,10,1,5,7,-10,9,-1,6,8,-6,9,-10,9,10,-6,9,2,-5,7,2,-8,1,4,7,-5,6,-4,-2,10,7,2,-1,-5,-9,10,-10,-4,8,-10,-1,7,-1,-2,4,-5,-9,8,-1,-8,-7,-4,7,-10,8,-9,7,4,8,10,-9,2,4,-8,3,7,-4,-7,-9,-5,8,-5,1,4,-9,-1,1,-6,3,2,-10,6,-10,-5,1,-9,6,-4,5,-8,4,3,-3,2,5,-2,5,-10,-10,-7,5,-9,-9,-1,3,-9,9,2,-10,-7,-2,-1,4,3,6,-4,5,-5,-10,-9,4,-10,9,-6,-10,-4,-10,9,-6,-10,4,7,-9,4,-7,-2,10,-5,-4,7,-3,-6,10,7,-2,10,2,7,-8,-1,-5,-7,5,-3,-4,-4,-5,-8,-8,1,-3,-7,-10,6,-5,-4,-10,-5,-4,5,-3,3,-1,-3,7,8,6,-6,-10,-6,-1,-7,-1,9,3,1,3,3,4,-3,-1,2,-8,6,3,5,10,9,4,-5,2,-2,8,8,-1,-3,-4,2,5,2,-7,4,-8,-9,2,1,1,-8,-9,3,7,-4,2,3,-3,-7,-1,-10,-5,3,-4,-1,10,-6,-4,-10,-4,2,-2,5,-9,6,3,-8,4,8,-8,4,8,6,6,5,-4,-6,-3,2,3,-9,-3,-9,-8,8,7,3,-2,1,9,-8,4,-9,-6,6,-8,-8,-2,9,-5,8,-9,-9,-2,-8,8,-3,-3,9,3,1,-2,2,7,6,10,-5,-6,9,5,-8,5,-5,-2,-10,-10,6,-1,6,2,9,7,-1,8,-9,-9,-6,-8,3,-7,-7,-3,9,-1,-1,8,-7,3,5,7,-6,3,-1,5,3,6,-9,2,2,-4,6,-10,-4,-10,6,-5,6,-4,-10,-2,1,4,-6,9,-8,8,2,9,-4,-6,-10,3,-10,-4,8,-5,3,-10,-4,6,9,-9,3,8,9,-8,-5,-7,-9,-5,-9,9,-10,3,-7,9,5,8,6,-7,-10,-5,5,-9,-7,5,-7,-9,3,-10,-5,8,-6,9,-4,8,9,-8,7,3,4,-9,-10,5,-4,-6,5,-8,10,-5,-2,-6,-8,9,4,1,-10,8,-1,-5,-1,4,3,-8,-7,-7,8,2,-10,3,-3,-3,-7,2,7,2,8,-3,-6,-4,-6,4,4,9,-6,-1,9,1,6,-1,-3,-10,-1,-4,8,1,-10,-7,2,-10,10,-9,-7,4,-6,-8,-10,-1,-3,-9,4,-4,-7,-9,-1,-9,-10,2,9,-3,-1,-7,9,-1,5,-5,1,1,2,-9,1,-6,6,-10,-3,1,2,-4,-8,-5,-6,1,-10,7,4,-7,-4,8,2,-5,1,-9,-6,5,-10,8,-9,-5,-5,10,-8,6,1,-2,-2,-10,-2,7,1,-5,-10,-7,4,-7,4,-10,-8,4,10,4,2,-6,-10,6,3,-2,-6,4,-1,-1,-10,-9,5,8,1,9,6,10,8,-9,7,6,10,-3,8,-8,-3,9,-2,7,-10,7,-2,4,-10,3,-4,-1,6,7,-8,-4,-4,10,1,7,4,7,-10,-7,4,10,-8,2,6,10,6,4,-9,4,-4,1,-7,-7,9,-7,-6,1,-7,8,4,-5,3,10,8,2,-7,3,9,-8,3,-1,10,3,-7,-1,8,-1,9,-3,-5,2,-5,-3,4,5,7,-6,-10,-6,-9,-7,-3,10,-10,-1,-7,7,8,10,-3,9,3,-7,-6,1,8,-6,8,6,-10,-3,10,3,-1,-9,-8,-4,-8,5,2,3,5,4,5,1,7,-4,-5,-6,-10,3,-5,-8,-6,7,10,-1,-9,-6,4,-2,3,-7,-5,-7,8,-2,6,6,-4,1,4,8,-6,-10,2,-1,-1,3,1,-8,9,4,9,-7,-6,6,-10,-5,-9,-7,10,7,-4,5,2,8,5,-7,3,-9,2,-1,10,-9,3,-1,1,2,10,-5,-3,4,-5,4,2,-7,1,-9,5,1,3,1,-3,3,10,-6,1,5,-8,3,4,-8,-9,-7,4,-10,-3,-3,4,10,4,-1,5,-8,-6,-6,-1,7,-9,4,-4,2,-7,-2,1,-7,7,7,-5,-6,5,1,-4,8,3,-1,-8,4,8,-8,-7,1,4,-5,-4,-10,-5,-7,-9,4,-8,-9,-8,2,9,4,-5,-2,-4,8,10,-6,-10,3,9,3,4,4,7,7,-5,1,-5,-1,-2,4,-8,6,-5,-9,-8,-4,4,-4,3,6,10,10,-2,2,-1,-3,-1,8,8,2,10,8,-3,5,-2,6,8,-7,8,-2,10,-1,-6,6,-8,2,6,2,-4,7,-5,10,-10,4,8,8,-3,8,-10,3,-5,-6,7,-2,4,-7,-2,-4,5,10,-4,-1,9,-6,4,-7,-8,-3,2,6,-5,-6,-1,9,10,9,-2,-3,-10,8,-10,-4,-9,-3,-2,-6,3,4,-4,-10,-6,10,-9,-7,-2,2,1,2,3,-10,4,2,7,3,-10,-8,4,-4,-1,-2,7,6,-10,-7,-4,7,-2,9,-4,-3,-7,-1,-8,-4,6,-3,1,-1,2,3,-7,-5,-9], dtype = "uint8")#candidate|1261|(1280,)|const|uint8
call_1259 = relay.TupleGetItem(func_490_call(relay.reshape(var_1260.astype('uint8'), [16, 1, 16]), relay.reshape(const_1261.astype('uint8'), [16, 5, 16]), relay.reshape(const_1261.astype('float64'), [16, 5, 16]), relay.reshape(const_1261.astype('float64'), [16, 5, 16]), relay.reshape(const_1261.astype('bool'), [16, 5, 16]), ), 4)
call_1262 = relay.TupleGetItem(func_497_call(relay.reshape(var_1260.astype('uint8'), [16, 1, 16]), relay.reshape(const_1261.astype('uint8'), [16, 5, 16]), relay.reshape(const_1261.astype('float64'), [16, 5, 16]), relay.reshape(const_1261.astype('float64'), [16, 5, 16]), relay.reshape(const_1261.astype('bool'), [16, 5, 16]), ), 4)
output = relay.Tuple([call_1254,call_1259,var_1260,const_1261,])
output2 = relay.Tuple([call_1255,call_1262,var_1260,const_1261,])
func_1275 = relay.Function([var_1260,], output)
mod['func_1275'] = func_1275
mod = relay.transform.InferType()(mod)
mutated_mod['func_1275'] = func_1275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1276 = relay.var("var_1276", dtype = "uint8", shape = (256,))#candidate|1276|(256,)|var|uint8
func_1275_call = mutated_mod.get_global_var('func_1275')
call_1277 = func_1275_call(var_1276)
output = call_1277
func_1278 = relay.Function([var_1276], output)
mutated_mod['func_1278'] = func_1278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_1319 = func_1212_call()
call_1320 = func_1212_call()
func_221_call = mod.get_global_var('func_221')
func_223_call = mutated_mod.get_global_var('func_223')
const_1327 = relay.const([[-8.005043,3.717205,0.558966,8.624264,-8.979553,-4.981240,7.984001,5.507519,-5.503886,-6.978145,3.408784,-3.135844,5.777048,5.030703,-0.350541,-4.558925,0.416165,-3.505276,-5.219843,-9.727865,3.823034,1.851844,0.728213,-1.647111,-3.853929,-2.696898,-9.836484,-1.912185,5.440390,-2.002307,8.014941,-2.994906,-5.145402,8.550778,-6.480137,7.909059,4.475982,-2.512533,7.126195,-7.988779,-5.662615,2.020824,2.974425,-2.711162,3.579875,9.815389,4.739839,7.061366,-5.506882,-0.784142,-7.994403,-9.145133,2.823310,0.610268,6.802025,-2.037599,-5.515851,4.942007,-6.217895,-4.660150],[-2.956721,-0.288321,-0.971477,6.099343,4.839132,6.727241,5.064656,0.453758,8.703668,8.772086,-3.553810,-2.093316,8.470743,7.801344,5.871251,-8.602331,6.651397,-8.388659,-6.127641,-9.733841,2.342241,-6.522475,-5.218481,9.354562,-0.013458,-9.699628,4.167456,1.702655,-2.103729,-3.450410,0.391965,6.157428,4.248890,-0.731119,5.082880,0.626710,-0.291288,5.773698,4.085445,-5.317741,7.980423,6.323992,9.705935,-6.888039,0.459177,-0.177094,5.098138,3.841311,4.340420,-0.048006,-4.732372,1.969151,2.389594,8.563744,-3.757379,-7.731586,3.607657,-9.084324,1.876319,-8.682927],[0.622793,1.864054,2.315841,4.600605,-4.336917,2.377564,-5.446517,4.666684,-1.270819,-6.744686,3.205595,-0.168646,-7.347509,0.815116,0.170514,-3.735022,-1.909710,9.414096,-0.919920,-1.943151,8.941190,-7.513263,7.219079,2.404054,-7.330183,-2.416061,8.872323,-6.084225,1.183985,6.962050,-6.927821,0.644872,8.664720,-3.006203,2.332827,-6.245452,-2.762450,-1.557771,-0.562354,1.144586,-9.983161,-0.696855,7.492860,0.124522,8.088662,8.811342,4.643546,-2.593352,-0.366300,-0.961477,-4.141518,-9.468946,2.860035,-3.109310,-7.884865,3.445933,5.473833,-4.966213,-9.594268,4.835485],[-7.301351,6.811485,0.526181,-6.710123,-5.821356,8.949013,9.713647,-9.390599,1.595058,1.023027,-6.307512,-4.366935,-5.080267,-7.385503,-4.460802,-6.082695,1.513411,-7.139079,-4.715829,-2.977902,-6.770101,6.050100,1.382445,-8.902980,-4.751772,-6.176154,-5.003241,-2.573707,-8.863524,-1.961426,-6.784627,1.834156,-7.271766,-2.792936,4.705403,-3.766380,-9.721979,7.512013,7.400387,-5.148952,6.846932,-9.969339,3.065466,7.679992,-8.244343,5.200474,-3.233821,-2.444650,-0.578136,2.470801,7.048271,0.593935,5.992606,4.919278,8.395051,-3.891792,-3.039459,-8.063289,8.691557,5.290031],[7.928060,-2.545774,-6.547824,1.234763,9.233113,-9.050064,-1.197543,4.329773,-8.784293,-3.005059,-4.757722,0.396067,6.298616,2.601373,2.094283,-6.221390,9.039072,-3.496133,6.559612,-2.590732,0.793988,2.542298,7.360804,8.083483,3.509668,9.045105,3.671844,1.916523,-7.069943,8.607474,5.366818,1.603935,4.678448,-5.372813,2.306455,4.831251,7.592064,-2.749373,7.994970,9.243487,8.849394,7.427899,1.642141,7.902656,0.717393,7.611787,5.791655,4.475694,-0.551455,2.646873,-8.885425,-9.533476,-6.594060,-9.494924,2.686744,-6.189547,-3.059846,1.220539,-1.744907,-3.305085],[3.065966,8.423043,-8.196723,8.343841,-9.611651,-3.277355,-2.008620,1.241205,6.688552,-4.409598,6.680988,0.891020,-3.435237,8.485045,2.560717,-5.446223,6.335379,3.087893,-5.769367,-9.329416,-7.234882,-0.514075,-2.174503,9.422294,4.194360,-5.535129,-4.510942,7.994663,-7.605548,-8.266536,-5.178250,-5.837691,-4.794161,5.113003,3.889464,2.078898,-2.104152,-2.379028,4.971020,-6.912727,4.967537,6.483409,-5.518477,2.657902,1.426802,-4.974401,-2.387507,1.928662,5.942851,-2.150383,9.263411,-4.047514,0.690713,-0.268546,-3.815688,4.520443,5.124783,9.118680,5.727392,-1.374218],[-8.823726,-8.141117,5.862719,3.305003,-0.721995,4.430949,-5.505133,3.201192,-8.250806,-4.261940,-4.040556,5.129210,7.872198,8.791078,2.502587,6.928794,1.440031,-3.578920,-1.257711,0.055659,4.264564,-2.132961,-1.585831,0.274593,1.506935,4.073924,-7.619276,7.299033,6.290726,-2.509256,-1.853206,0.908045,-9.997092,-3.697101,4.521187,5.767533,1.586976,-4.699569,-6.733946,-5.179893,-7.394686,3.807856,-3.816660,-0.970067,-5.237570,-3.334279,-9.211699,-2.560782,-6.693688,2.840127,-8.411327,-6.526145,-2.495913,8.073705,9.440636,-2.320943,8.446049,-7.815548,-1.577169,9.701735],[1.348963,0.314185,9.008893,-7.740053,1.161754,-7.555355,6.844693,2.991248,6.821899,-3.957715,-3.050159,-8.250995,-1.675717,-8.903941,5.938996,4.192388,6.762784,5.734944,-4.071106,-0.837540,1.429710,5.327168,-8.535467,9.308358,1.959325,-7.163245,-2.910790,1.355515,9.159966,-6.115573,-5.381219,4.618900,-4.348027,-7.184704,4.380845,-7.651758,5.047433,6.185711,-4.509890,-6.456155,-1.291224,-9.218667,7.883346,1.591387,2.263672,-2.947438,-6.843681,6.167006,-1.917979,2.759611,8.502950,-7.851349,-9.765898,-1.992524,-8.224775,-9.450655,4.721275,-8.426630,8.069806,4.481473]], dtype = "float64")#candidate|1327|(8, 60)|const|float64
call_1326 = relay.TupleGetItem(func_221_call(relay.reshape(const_1327.astype('float64'), [4, 10, 12])), 0)
call_1328 = relay.TupleGetItem(func_223_call(relay.reshape(const_1327.astype('float64'), [4, 10, 12])), 0)
func_1275_call = mod.get_global_var('func_1275')
func_1278_call = mutated_mod.get_global_var('func_1278')
var_1339 = relay.var("var_1339", dtype = "uint8", shape = (256,))#candidate|1339|(256,)|var|uint8
call_1338 = relay.TupleGetItem(func_1275_call(relay.reshape(var_1339.astype('uint8'), [256,])), 0)
call_1340 = relay.TupleGetItem(func_1278_call(relay.reshape(var_1339.astype('uint8'), [256,])), 0)
bop_1364 = relay.greater_equal(call_1338.astype('bool'), relay.reshape(call_1319.astype('bool'), relay.shape_of(call_1338))) # shape=(1, 15, 6)
bop_1367 = relay.greater_equal(call_1340.astype('bool'), relay.reshape(call_1320.astype('bool'), relay.shape_of(call_1340))) # shape=(1, 15, 6)
func_490_call = mod.get_global_var('func_490')
func_497_call = mutated_mod.get_global_var('func_497')
var_1381 = relay.var("var_1381", dtype = "uint8", shape = (640, 2))#candidate|1381|(640, 2)|var|uint8
call_1380 = relay.TupleGetItem(func_490_call(relay.reshape(var_1339.astype('uint8'), [16, 1, 16]), relay.reshape(var_1381.astype('uint8'), [16, 5, 16]), relay.reshape(var_1381.astype('float64'), [16, 5, 16]), relay.reshape(var_1381.astype('float64'), [16, 5, 16]), relay.reshape(var_1381.astype('bool'), [16, 5, 16]), ), 6)
call_1382 = relay.TupleGetItem(func_497_call(relay.reshape(var_1339.astype('uint8'), [16, 1, 16]), relay.reshape(var_1381.astype('uint8'), [16, 5, 16]), relay.reshape(var_1381.astype('float64'), [16, 5, 16]), relay.reshape(var_1381.astype('float64'), [16, 5, 16]), relay.reshape(var_1381.astype('bool'), [16, 5, 16]), ), 6)
func_662_call = mod.get_global_var('func_662')
func_665_call = mutated_mod.get_global_var('func_665')
var_1384 = relay.var("var_1384", dtype = "float32", shape = (756,))#candidate|1384|(756,)|var|float32
call_1383 = relay.TupleGetItem(func_662_call(relay.reshape(var_1384.astype('float32'), [12, 9, 7])), 0)
call_1385 = relay.TupleGetItem(func_665_call(relay.reshape(var_1384.astype('float32'), [12, 9, 7])), 0)
func_1042_call = mod.get_global_var('func_1042')
func_1044_call = mutated_mod.get_global_var('func_1044')
var_1392 = relay.var("var_1392", dtype = "float32", shape = (54,))#candidate|1392|(54,)|var|float32
call_1391 = func_1042_call(relay.reshape(var_1392.astype('float32'), [1, 9, 6]))
call_1393 = func_1042_call(relay.reshape(var_1392.astype('float32'), [1, 9, 6]))
output = relay.Tuple([call_1326,const_1327,var_1339,bop_1364,call_1380,var_1381,call_1383,var_1384,call_1391,var_1392,])
output2 = relay.Tuple([call_1328,const_1327,var_1339,bop_1367,call_1382,var_1381,call_1385,var_1384,call_1393,var_1392,])
func_1394 = relay.Function([var_1339,var_1381,var_1384,var_1392,], output)
mod['func_1394'] = func_1394
mod = relay.transform.InferType()(mod)
var_1395 = relay.var("var_1395", dtype = "uint8", shape = (256,))#candidate|1395|(256,)|var|uint8
var_1396 = relay.var("var_1396", dtype = "uint8", shape = (640, 2))#candidate|1396|(640, 2)|var|uint8
var_1397 = relay.var("var_1397", dtype = "float32", shape = (756,))#candidate|1397|(756,)|var|float32
var_1398 = relay.var("var_1398", dtype = "float32", shape = (54,))#candidate|1398|(54,)|var|float32
output = func_1394(var_1395,var_1396,var_1397,var_1398,)
func_1399 = relay.Function([var_1395,var_1396,var_1397,var_1398,], output)
mutated_mod['func_1399'] = func_1399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_1427 = func_1212_call()
call_1428 = func_1212_call()
func_971_call = mod.get_global_var('func_971')
func_974_call = mutated_mod.get_global_var('func_974')
const_1430 = relay.const(-6, dtype = "uint32")#candidate|1430|()|const|uint32
var_1431 = relay.var("var_1431", dtype = "uint32", shape = (42,))#candidate|1431|(42,)|var|uint32
call_1429 = relay.TupleGetItem(func_971_call(relay.reshape(const_1430.astype('uint32'), []), relay.reshape(var_1431.astype('uint32'), [7, 6, 1]), ), 0)
call_1432 = relay.TupleGetItem(func_974_call(relay.reshape(const_1430.astype('uint32'), []), relay.reshape(var_1431.astype('uint32'), [7, 6, 1]), ), 0)
output = relay.Tuple([call_1427,call_1429,const_1430,var_1431,])
output2 = relay.Tuple([call_1428,call_1432,const_1430,var_1431,])
func_1433 = relay.Function([var_1431,], output)
mod['func_1433'] = func_1433
mod = relay.transform.InferType()(mod)
mutated_mod['func_1433'] = func_1433
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1434 = relay.var("var_1434", dtype = "uint32", shape = (42,))#candidate|1434|(42,)|var|uint32
func_1433_call = mutated_mod.get_global_var('func_1433')
call_1435 = func_1433_call(var_1434)
output = call_1435
func_1436 = relay.Function([var_1434], output)
mutated_mod['func_1436'] = func_1436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_1591 = func_1212_call()
call_1592 = func_1212_call()
var_1598 = relay.var("var_1598", dtype = "float64", shape = (14, 15, 6))#candidate|1598|(14, 15, 6)|var|float64
bop_1599 = relay.maximum(call_1591.astype('int32'), var_1598.astype('int32')) # shape=(14, 15, 6)
bop_1602 = relay.maximum(call_1592.astype('int32'), var_1598.astype('int32')) # shape=(14, 15, 6)
output = bop_1599
output2 = bop_1602
func_1604 = relay.Function([var_1598,], output)
mod['func_1604'] = func_1604
mod = relay.transform.InferType()(mod)
mutated_mod['func_1604'] = func_1604
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1605 = relay.var("var_1605", dtype = "float64", shape = (14, 15, 6))#candidate|1605|(14, 15, 6)|var|float64
func_1604_call = mutated_mod.get_global_var('func_1604')
call_1606 = func_1604_call(var_1605)
output = call_1606
func_1607 = relay.Function([var_1605], output)
mutated_mod['func_1607'] = func_1607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_1614 = func_1212_call()
call_1615 = func_1212_call()
uop_1617 = relay.cosh(call_1614.astype('float32')) # shape=(1, 15, 6)
uop_1619 = relay.cosh(call_1615.astype('float32')) # shape=(1, 15, 6)
bop_1633 = relay.right_shift(call_1614.astype('int64'), relay.reshape(uop_1617.astype('int64'), relay.shape_of(call_1614))) # shape=(1, 15, 6)
bop_1636 = relay.right_shift(call_1615.astype('int64'), relay.reshape(uop_1619.astype('int64'), relay.shape_of(call_1615))) # shape=(1, 15, 6)
output = relay.Tuple([bop_1633,])
output2 = relay.Tuple([bop_1636,])
func_1639 = relay.Function([], output)
mod['func_1639'] = func_1639
mod = relay.transform.InferType()(mod)
mutated_mod['func_1639'] = func_1639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mutated_mod.get_global_var('func_1639')
call_1640 = func_1639_call()
output = call_1640
func_1641 = relay.Function([], output)
mutated_mod['func_1641'] = func_1641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_1670 = relay.TupleGetItem(func_1639_call(), 0)
call_1671 = relay.TupleGetItem(func_1641_call(), 0)
output = relay.Tuple([call_1670,])
output2 = relay.Tuple([call_1671,])
func_1697 = relay.Function([], output)
mod['func_1697'] = func_1697
mod = relay.transform.InferType()(mod)
output = func_1697()
func_1698 = relay.Function([], output)
mutated_mod['func_1698'] = func_1698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_1707 = relay.TupleGetItem(func_1639_call(), 0)
call_1708 = relay.TupleGetItem(func_1641_call(), 0)
const_1709 = relay.const([[[3,-2,-8,2,4,3],[7,-10,-8,-7,-1,6],[-9,-8,-3,2,1,-1],[-3,-2,-6,5,-9,-4],[-5,5,10,-5,10,-5],[-4,-9,3,3,6,-6],[-4,-6,5,9,-2,8],[-10,3,6,-5,7,7],[-5,-9,-8,3,-6,-5],[2,-3,-10,6,-3,2],[-9,10,-10,-9,7,-5],[-2,7,9,1,5,6],[6,-7,-3,8,5,-7],[5,9,-3,-7,3,5],[5,3,-1,-7,-1,5]],[[3,-5,3,5,-9,2],[-9,8,-2,-3,-2,-4],[7,1,-6,-3,2,-1],[-9,5,-1,9,3,-9],[2,-1,-10,7,-8,7],[-7,-7,6,3,4,-5],[-4,-2,-2,3,7,-10],[9,-6,8,-3,2,3],[7,7,-6,6,-7,-7],[3,6,-4,-7,-4,1],[6,8,-5,-10,-8,4],[9,4,-8,6,-2,1],[9,-10,1,-6,7,-7],[-4,5,-3,-6,8,-8],[-4,8,-9,2,5,2]],[[3,-4,-1,-3,7,-8],[6,1,-7,-10,5,7],[-5,1,-10,7,-2,-4],[-2,-9,4,9,1,-3],[1,9,9,2,-4,-5],[8,10,5,-3,2,7],[-7,-5,6,-9,1,-3],[-4,4,9,-4,3,7],[7,-6,1,-4,-8,1],[9,1,7,-10,-10,-9],[-8,-8,-7,9,-6,-3],[-6,7,8,-10,-7,-8],[-4,7,7,-4,1,3],[8,1,7,-3,3,-1],[-10,-9,-1,-3,-7,10]],[[8,-6,8,6,5,2],[-1,9,6,4,-10,-5],[10,-7,-8,-1,-2,5],[10,8,7,7,8,2],[5,-2,-9,-5,2,-7],[10,-9,5,-2,3,10],[1,-10,3,-5,-9,3],[-1,-10,2,-5,3,3],[-8,-5,-7,5,-10,9],[8,-2,-10,-9,-5,5],[-4,10,-6,9,9,9],[9,-6,-8,4,10,6],[-3,10,-2,5,-5,7],[-9,-5,10,-6,7,-8],[8,2,-8,-7,-1,-8]],[[10,-3,10,6,4,-8],[5,-3,-6,7,1,-4],[-8,-1,-8,4,-4,-4],[-4,-6,2,-5,9,-9],[-9,1,-6,10,-7,-4],[9,4,-4,-2,7,-1],[3,5,-5,9,1,-3],[-6,-2,3,-10,4,10],[2,-8,-9,9,-6,5],[1,5,-3,-10,3,-2],[7,-1,-5,9,-4,-6],[8,6,-2,-3,-5,4],[9,9,-5,8,-2,-3],[3,-6,-10,9,-10,2],[-8,-2,5,10,-9,4]],[[9,-3,3,10,7,3],[10,5,-7,-1,-2,-7],[-10,-9,-8,-10,6,-10],[9,-5,7,6,-9,7],[-6,2,-3,4,-10,2],[-7,4,6,-4,-5,-3],[-8,2,-10,5,9,-3],[-10,8,2,-7,2,2],[-7,-5,7,9,-9,-3],[1,-4,-9,7,-3,-9],[-4,-4,10,-4,-4,3],[1,5,4,8,7,-8],[-8,-6,-9,-8,3,-9],[9,4,-6,-5,1,-6],[9,10,5,-4,2,-6]],[[7,6,-5,5,-2,-9],[7,5,5,1,-5,-2],[1,-3,-10,-6,2,-8],[-8,-3,3,-7,6,-8],[-5,-5,-2,-3,6,7],[-7,-2,-6,-8,-7,-5],[4,3,-5,-1,2,3],[4,8,-1,6,2,7],[-2,2,-7,-2,-10,1],[5,-8,-9,-2,6,-4],[9,-5,10,8,-10,-1],[-9,7,7,-7,-9,1],[7,-10,-5,9,4,4],[-9,-6,-3,5,-10,-1],[8,9,-2,-5,4,-1]]], dtype = "int64")#candidate|1709|(7, 15, 6)|const|int64
bop_1710 = relay.maximum(call_1707.astype('int64'), const_1709.astype('int64')) # shape=(7, 15, 6)
bop_1713 = relay.maximum(call_1708.astype('int64'), const_1709.astype('int64')) # shape=(7, 15, 6)
bop_1719 = relay.logical_xor(bop_1710.astype('int16'), call_1707.astype('int16')) # shape=(7, 15, 6)
bop_1722 = relay.logical_xor(bop_1713.astype('int16'), call_1708.astype('int16')) # shape=(7, 15, 6)
func_1394_call = mod.get_global_var('func_1394')
func_1399_call = mutated_mod.get_global_var('func_1399')
const_1749 = relay.const([[-2,2,3,9,-5,10,9,10,-6,-3,6,9,-9,6,7,-6,10,-7,1,-2,10,6,7,-7,-1,-1,4,2,7,1,-7,-10,-9,9,-4,-6,10,-4,-8,-10,-3,7,-3,1,5,3,-1,9,2,9,7,-10,7,-6,7,7,10,-9,3,2,-4,-1,10,6,-8,-7,10,5,-1,4,8,-2,-5,1,3,-7,-8,1,-8,7,-1,2,2,-1,-8,-5,-6,5,5,1,-7,4,-9,-3,-3,-3,-7,-6,-2,-3,1,7,2,3,7,-7,4,-2,-8,8,-5,6,7,10,8,-2,-9,8,-2,-3,5,-5,-1,10,2,-1,-2,-9],[-10,10,2,6,-2,5,5,1,7,-7,-5,-8,-8,3,9,-8,-1,-6,2,-6,-6,6,-10,1,5,6,8,6,-6,-3,1,3,-2,6,-2,-8,-5,2,-3,1,-3,-7,-2,5,10,-10,-1,-6,3,-7,-6,5,-9,-7,10,-10,4,3,8,3,-6,-2,9,10,-10,6,1,-5,8,3,-9,-10,10,-2,-3,-8,-9,8,6,7,4,-2,-7,-7,1,3,-5,-5,-8,3,2,-10,4,7,5,-8,9,6,-6,-9,7,7,6,-6,10,4,3,-1,2,-6,3,-6,3,8,-8,-6,-10,-4,-6,-9,-10,-8,-8,9,-8,5,-1,4]], dtype = "uint8")#candidate|1749|(2, 128)|const|uint8
var_1750 = relay.var("var_1750", dtype = "uint8", shape = (1280,))#candidate|1750|(1280,)|var|uint8
const_1751 = relay.const([0.141994,0.553093,5.060773,-6.634976,-2.711196,-1.048299,5.371514,-7.044099,4.150568,9.214468,7.027538,-1.222028,-7.376424,-9.330396,0.296791,-2.982470,-3.803919,8.413209,-3.164393,9.942335,5.772895,-1.414889,3.926522,3.629663,0.965888,-9.666785,4.018095,-5.605021,9.994109,-8.878010,2.795737,1.572601,-5.226107,3.476589,-1.256551,9.115172,-4.300385,1.659316,-4.543306,9.069645,6.788583,-5.871015,-5.051492,2.057756,-1.008653,0.410890,-6.904430,8.277807,0.936250,4.357189,7.914310,9.927514,2.183770,-7.965735,2.595066,6.353509,1.026405,-9.896480,8.726381,9.612868,4.701754,4.210752,6.491034,-1.901783,9.154328,5.125109,-9.567763,-3.937374,9.794744,-5.112233,-2.506439,7.367285,9.799256,-0.394262,2.945333,-3.424223,-5.601345,-1.395088,-6.037794,-4.920699,3.418210,5.885651,1.933626,0.065275,-0.740627,4.166809,4.490285,-3.531173,-0.112073,8.411766,4.465738,-8.983278,7.358100,6.996778,7.772964,9.885597,3.870745,0.006358,5.905189,1.858159,-3.869962,-0.094871,-4.349339,-8.836625,3.433276,-0.960605,-1.906622,-7.481601,-2.659022,2.009465,-7.350193,-7.784165,4.890255,-1.267989,-7.702337,-9.489583,-8.101751,-4.704198,-0.551793,-1.246623,9.281759,-9.811423,6.398763,7.047797,-4.241641,-4.823756,-4.154662,6.104760,-8.658314,-7.748555,6.543761,9.662469,7.267159,-3.473591,-9.357775,-6.503767,-2.694956,8.694825,6.215918,4.336329,-2.281380,-0.029760,-4.906688,-4.806380,1.190282,7.371200,-4.945812,9.161118,-4.356366,6.162861,-0.977196,-2.863425,-0.586766,-9.001741,9.491913,8.976955,9.279613,-8.580055,0.575814,-6.325232,5.573554,-3.652339,-1.818418,6.161329,6.617932,-6.888655,-0.446712,-6.967132,-6.437962,7.730905,-5.507523,9.673429,-5.611793,6.253382,9.265592,8.537907,5.969397,-0.279022,0.912745,6.992851,-9.936524,-1.886853,-8.038787,2.111468,6.047014,-0.128531,7.962048,-2.135193,9.965362,-7.900068,2.660134,8.744272,2.291077,0.875483,-4.969771,8.070265,-5.472574,0.561940,0.332563,3.309000,8.630461,-5.044356,-4.978051,7.925745,6.552257,-5.784038,4.085644,2.057693,5.933833,7.900098,4.923364,-1.788319,-5.887094,3.656502,-6.390346,-7.655933,-4.731875,-8.291079,1.288280,6.193262,4.121147,-4.876254,4.877121,5.954996,-4.845733,-6.019879,-9.316336,4.399578,1.780040,-8.478793,5.233013,6.645018,6.887499,-5.123329,6.802803,5.740218,7.836266,1.103046,-2.920867,8.047641,0.638068,-6.684141,-7.342467,-6.499465,-2.997181,4.540466,-7.462045,-2.341864,0.147408,-7.995586,-9.234757,7.673462,3.497969,-1.340989,-2.291481,-6.105630,-6.216013,9.641121,-0.141232,-1.818177,-4.067115,0.971269,-5.235915,-6.774026,-0.585490,7.507030,3.798966,3.095450,1.094116,-0.364010,4.091753,-7.900054,1.134811,9.321241,7.931990,3.848989,2.551130,-5.486995,-6.280346,5.136276,-4.721623,5.155599,-4.849510,-3.820455,-9.209321,5.706675,-4.584486,6.378066,3.487975,4.327111,-6.927792,-5.727099,0.503222,-3.452723,9.902604,9.344036,-7.172689,8.160869,2.185621,-1.589094,-2.265393,8.583509,0.685025,9.771604,0.793231,-7.447324,1.311073,-1.765413,8.326870,-9.148590,-7.790055,-8.091682,-1.574629,9.764920,-1.444572,0.620198,0.097017,6.148249,-7.425904,3.167618,0.180552,8.906868,-4.472716,-2.736968,-4.809805,2.171011,-1.289881,2.082662,4.825245,-9.541718,8.931642,5.222002,-4.123240,8.225579,3.570594,3.303834,-3.209719,8.927454,-2.095777,9.004346,-4.564052,1.604612,-9.605739,4.860945,-3.413136,3.830801,6.456219,-1.504235,2.221275,-7.623448,9.162288,-7.119344,3.406047,-2.324759,5.903405,-3.448676,-2.380466,-6.783386,1.764542,2.099095,2.610367,6.704451,9.183446,-9.153655,3.011404,0.885328,-0.918125,8.555950,1.199486,1.576606,1.398213,-1.104691,-7.668005,-9.216952,-1.333563,1.277284,2.159181,-0.591518,-9.887572,0.188890,-1.643791,-4.205062,-5.924167,-5.961064,-0.936924,-7.926635,7.531411,7.338190,2.294724,3.150181,5.955957,5.637357,5.560419,9.513630,6.791881,-2.031814,5.714779,-9.585204,-2.444461,8.824665,9.456162,-2.515472,-0.516160,-7.986147,5.269676,7.346215,-2.124542,1.678254,1.340624,4.348786,-0.948532,-8.118697,3.083796,7.351284,5.803611,-5.362325,2.399880,6.088348,-2.590936,0.295322,-7.391356,7.986241,-8.913656,-1.791423,7.427874,-6.333760,5.199552,-1.785004,3.384459,-3.413179,-3.471111,5.253494,1.883014,-2.764017,-3.676567,-7.965993,-7.116082,2.149088,-4.401543,-1.960894,-9.759735,4.410585,1.608881,-7.935189,-5.948250,1.456651,0.368992,-1.925040,-9.967651,-7.674460,-4.234016,6.492175,-0.028045,4.646895,-9.197664,7.956569,-6.524381,9.184147,-7.804235,6.442989,-5.265778,6.750949,2.049211,4.510200,-2.327483,9.760499,-8.881340,-2.377532,8.991836,1.307414,8.241004,-7.354706,-7.381068,-3.999957,9.480751,4.517474,-7.388501,7.070281,-9.215111,3.181327,4.157586,0.309460,3.519596,-6.783909,-2.974432,9.141309,-1.569648,2.376038,4.806768,5.119320,7.124590,-6.722637,-4.088364,-6.981365,-2.801057,7.449739,-6.109741,8.624064,-7.961591,-2.215060,-7.089967,5.360597,-0.008726,8.442091,-9.486141,-4.905364,7.076018,5.939086,3.922322,-1.073823,-8.450848,9.092327,-5.581871,-4.006631,-1.311162,0.208985,-2.144122,-4.446497,-8.774854,-6.808810,-1.430543,-8.398410,-7.368047,1.037411,0.178554,4.601716,-6.958334,-4.661769,-9.058872,6.113700,-7.120867,1.356457,7.369246,2.079290,0.861383,-6.788854,-9.260586,4.807057,7.473720,-9.957088,-8.896638,-6.587942,-7.570683,2.612702,9.849602,-3.461963,-2.301772,7.471831,7.355105,2.283486,-9.962706,-5.649091,-1.202904,2.426105,4.676076,2.166683,-4.318200,-8.086993,-6.457863,7.622793,-9.718455,1.299357,4.916391,0.831265,5.226487,6.444088,-6.068657,6.354874,5.526542,-5.976933,-1.290944,-0.002577,5.624416,-6.767451,-3.421450,-7.995516,7.376466,5.587760,-5.901717,9.958242,7.908144,0.090361,-5.787984,9.469242,-0.609553,-1.346384,5.716674,3.541698,9.249164,-4.347121,8.281247,9.409066,7.516250,4.234322,2.514613,3.575721,6.087997,-6.269789,8.264522,8.507188,-4.355471,0.564291,-6.489428,-9.287933,-7.242427,4.866164,9.459895,-9.726401,-5.616220,-4.195847,-4.646235,-5.981394,8.089742,4.443849,-7.132391,-4.116824,9.586001,-1.134530,-4.578869,0.697736,-7.991187,-2.071520,6.016851,-0.173260,-8.965444,4.523580,-1.077984,-4.482925,7.017333,8.630452,-3.422167,-0.590778,3.934723,9.909670,9.815717,-7.770315,1.549954,-2.403898,4.259882,-2.499355,7.507184,-0.293804,-5.946240,1.157782,-8.485675,4.242472,-9.570193,-1.015318,0.905850,2.434291,2.880075,-0.272839,-0.601981,5.327693,0.461349,0.942926,-3.296823,-7.541762,-3.725264,-5.600235,-4.260634,9.046955,4.672116,-4.528743,4.753282,1.586974,3.660840,-9.352691,-1.845949,8.221451,5.643796,7.213415,-5.387757,-3.268486,5.812672,-3.374401,8.392965,2.858117,3.201696,5.145768,2.118285,7.840428,-9.131366,1.572014,-1.602988,-1.956745,1.004159,4.865318,6.760546,2.183529,-1.385819,9.199847,6.264934,-8.250197,-8.236687,-2.049218,-3.031196,2.146596,8.983799,-8.043904,2.830871,5.980217,-4.301981,2.838379,2.919327,-3.115381,-0.202311,8.425904,-5.701219,-9.871992,6.789593,1.200791,0.464927,-8.548188,2.218821,-5.989068,6.899352,2.586531,-7.874789,6.022342,4.115967,8.511542,9.744515,-8.056341,-8.075424,9.639159,4.208402,8.653751,4.363693,0.022884,-1.590537,2.803500,1.222718,7.365909,1.010133,2.164692,0.856657,-8.063232,8.185102,-5.963247,-0.362462,7.715701,-5.601140,-7.658222,-0.830291,-5.001226,4.880760,-6.205478,5.891904,-4.770892,6.556743,7.213888,-3.994880,9.332493,-0.638447,9.234067], dtype = "float32")#candidate|1751|(756,)|const|float32
const_1752 = relay.const([6.538191,3.182070,-3.489933,7.828037,-5.481164,9.755037,7.200682,-5.480366,3.006191,3.197358,-1.648906,-8.934493,9.397036,4.715004,-4.182089,-3.642389,-2.360185,-5.966619,-9.286053,-1.189362,9.256103,-0.122456,0.069919,1.471467,-6.337275,-8.688026,-5.725676,-1.298405,-7.565483,-0.211027,0.253014,-0.645388,3.284418,7.811381,-0.694027,-9.782494,4.196915,2.752206,6.872907,7.828297,7.235074,-4.459137,-6.545085,4.512044,-5.688723,-6.403345,5.516326,3.713653,7.093498,-6.085652,-0.691159,2.571175,8.532168,-6.148328], dtype = "float32")#candidate|1752|(54,)|const|float32
call_1748 = relay.TupleGetItem(func_1394_call(relay.reshape(const_1749.astype('uint8'), [256,]), relay.reshape(var_1750.astype('uint8'), [640, 2]), relay.reshape(const_1751.astype('float32'), [756,]), relay.reshape(const_1752.astype('float32'), [54,]), ), 8)
call_1753 = relay.TupleGetItem(func_1399_call(relay.reshape(const_1749.astype('uint8'), [256,]), relay.reshape(var_1750.astype('uint8'), [640, 2]), relay.reshape(const_1751.astype('float32'), [756,]), relay.reshape(const_1752.astype('float32'), [54,]), ), 8)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_1755 = relay.TupleGetItem(func_1639_call(), 0)
call_1756 = relay.TupleGetItem(func_1641_call(), 0)
func_1275_call = mod.get_global_var('func_1275')
func_1278_call = mutated_mod.get_global_var('func_1278')
call_1765 = relay.TupleGetItem(func_1275_call(relay.reshape(const_1749.astype('uint8'), [256,])), 0)
call_1766 = relay.TupleGetItem(func_1278_call(relay.reshape(const_1749.astype('uint8'), [256,])), 0)
output = relay.Tuple([bop_1719,call_1748,const_1749,var_1750,const_1751,const_1752,call_1755,call_1765,])
output2 = relay.Tuple([bop_1722,call_1753,const_1749,var_1750,const_1751,const_1752,call_1756,call_1766,])
func_1769 = relay.Function([var_1750,], output)
mod['func_1769'] = func_1769
mod = relay.transform.InferType()(mod)
var_1770 = relay.var("var_1770", dtype = "uint8", shape = (1280,))#candidate|1770|(1280,)|var|uint8
output = func_1769(var_1770)
func_1771 = relay.Function([var_1770], output)
mutated_mod['func_1771'] = func_1771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1697_call = mod.get_global_var('func_1697')
func_1698_call = mutated_mod.get_global_var('func_1698')
call_1796 = relay.TupleGetItem(func_1697_call(), 0)
call_1797 = relay.TupleGetItem(func_1698_call(), 0)
func_1697_call = mod.get_global_var('func_1697')
func_1698_call = mutated_mod.get_global_var('func_1698')
call_1812 = relay.TupleGetItem(func_1697_call(), 0)
call_1813 = relay.TupleGetItem(func_1698_call(), 0)
uop_1814 = relay.asinh(call_1812.astype('float32')) # shape=(1, 15, 6)
uop_1816 = relay.asinh(call_1813.astype('float32')) # shape=(1, 15, 6)
uop_1824 = relay.acos(uop_1814.astype('float64')) # shape=(1, 15, 6)
uop_1826 = relay.acos(uop_1816.astype('float64')) # shape=(1, 15, 6)
output = relay.Tuple([call_1796,uop_1824,])
output2 = relay.Tuple([call_1797,uop_1826,])
func_1828 = relay.Function([], output)
mod['func_1828'] = func_1828
mod = relay.transform.InferType()(mod)
mutated_mod['func_1828'] = func_1828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1828_call = mutated_mod.get_global_var('func_1828')
call_1829 = func_1828_call()
output = call_1829
func_1830 = relay.Function([], output)
mutated_mod['func_1830'] = func_1830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_1843 = relay.TupleGetItem(func_1639_call(), 0)
call_1844 = relay.TupleGetItem(func_1641_call(), 0)
func_221_call = mod.get_global_var('func_221')
func_223_call = mutated_mod.get_global_var('func_223')
var_1849 = relay.var("var_1849", dtype = "float64", shape = (240, 2))#candidate|1849|(240, 2)|var|float64
call_1848 = relay.TupleGetItem(func_221_call(relay.reshape(var_1849.astype('float64'), [4, 10, 12])), 0)
call_1850 = relay.TupleGetItem(func_223_call(relay.reshape(var_1849.astype('float64'), [4, 10, 12])), 0)
output = relay.Tuple([call_1843,call_1848,var_1849,])
output2 = relay.Tuple([call_1844,call_1850,var_1849,])
func_1854 = relay.Function([var_1849,], output)
mod['func_1854'] = func_1854
mod = relay.transform.InferType()(mod)
mutated_mod['func_1854'] = func_1854
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1855 = relay.var("var_1855", dtype = "float64", shape = (240, 2))#candidate|1855|(240, 2)|var|float64
func_1854_call = mutated_mod.get_global_var('func_1854')
call_1856 = func_1854_call(var_1855)
output = call_1856
func_1857 = relay.Function([var_1855], output)
mutated_mod['func_1857'] = func_1857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_1884 = func_1212_call()
call_1885 = func_1212_call()
output = relay.Tuple([call_1884,])
output2 = relay.Tuple([call_1885,])
func_1889 = relay.Function([], output)
mod['func_1889'] = func_1889
mod = relay.transform.InferType()(mod)
output = func_1889()
func_1890 = relay.Function([], output)
mutated_mod['func_1890'] = func_1890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1828_call = mod.get_global_var('func_1828')
func_1830_call = mutated_mod.get_global_var('func_1830')
call_1935 = relay.TupleGetItem(func_1828_call(), 0)
call_1936 = relay.TupleGetItem(func_1830_call(), 0)
func_1769_call = mod.get_global_var('func_1769')
func_1771_call = mutated_mod.get_global_var('func_1771')
const_1970 = relay.const([6,-5,7,-9,-4,-2,9,3,-4,8,8,-3,-8,-6,2,7,3,-10,-1,-9,-9,-1,1,-2,10,-1,2,3,-9,-7,2,8,5,-8,-10,3,-8,-8,8,-5,1,-9,2,-3,2,-1,-3,10,8,6,4,7,-6,2,6,6,-5,-10,-8,-7,4,-3,-6,7,-10,2,-4,8,4,8,9,-9,1,-1,-4,-7,8,-7,4,10,9,-10,1,-7,-7,-6,8,-1,5,-6,-10,-1,-7,-3,-2,-5,-3,8,-2,-10,9,-7,1,6,8,7,6,-6,-4,-4,-2,-1,-5,-10,5,7,-3,-1,-2,10,-10,8,5,-1,-3,-9,-7,1,-1,-10,-8,-10,-1,7,9,-3,-6,-7,7,2,-4,-6,-1,-2,7,-9,-8,9,-10,-5,6,8,-1,5,-4,1,-7,-8,5,1,1,-8,-6,8,-3,-7,-3,3,1,-5,2,-2,2,-7,9,8,7,6,-2,1,9,6,-4,-7,6,7,-7,-7,6,-5,-4,-4,-10,-6,5,10,7,8,-5,-4,9,7,10,-7,1,-3,7,-4,6,-1,-7,-8,5,6,3,8,-9,9,2,8,-8,-6,6,3,-2,-4,-5,5,-10,-9,1,6,6,-1,-1,-2,8,5,-2,8,3,4,8,-10,-10,-1,8,-1,5,5,-1,-7,6,4,2,-3,8,5,-7,-4,3,10,-5,8,-2,-7,1,-3,10,7,3,-7,7,9,-4,-3,-8,-10,3,-6,10,-10,-9,-10,-2,1,8,6,-9,-9,8,9,2,-3,-7,2,2,10,4,-10,-8,-2,8,-2,-3,-9,-3,-8,-10,-2,10,4,-5,-3,4,-5,-6,-1,-5,1,-3,2,1,-1,-3,-7,6,-4,8,7,-3,-6,-9,3,-9,-3,-7,8,-7,8,-3,-10,8,9,-1,8,1,3,1,6,-10,-4,-6,-4,1,-10,9,-5,-5,-1,-1,2,-2,-1,-3,-5,-8,10,1,-6,8,-9,7,1,8,-2,-2,-10,1,9,10,7,-3,3,-2,6,-4,-6,9,-7,-1,4,5,-10,-7,2,-1,9,-7,5,9,1,6,-6,-9,10,4,-5,-1,-5,2,-10,-6,8,-9,-5,6,-6,7,7,-7,-6,-4,9,-6,4,4,4,10,5,4,-2,8,-5,1,1,-1,-8,9,-10,4,6,7,7,-1,1,-4,8,-2,-7,4,-1,-6,-10,6,4,4,-7,-10,-10,-7,-8,3,-3,8,-6,-1,-7,-7,3,-7,-5,-9,-1,7,1,2,6,-5,8,2,-6,-2,9,-2,-3,1,1,10,-10,3,2,-9,9,-7,9,-3,-2,10,4,-6,-10,-7,-9,-2,4,8,-1,4,3,8,-1,-7,-8,6,6,1,9,6,4,6,-3,6,3,5,1,6,-6,7,-9,-6,-5,10,4,3,-3,-6,5,-2,9,-4,5,-6,-4,-5,-8,-7,-9,-8,-4,8,1,-6,5,-5,-9,9,-3,-5,10,10,-2,-10,4,3,-8,-7,-7,5,3,6,-1,6,-10,10,10,7,-7,-4,-4,10,7,8,10,-6,5,7,-9,-9,5,-10,-1,8,3,-8,-8,-6,6,1,-9,-1,2,-10,2,-1,-1,1,-7,10,10,4,6,6,-8,-10,-5,1,10,8,3,8,-2,5,-9,-9,3,-8,5,-5,-3,10,-5,-7,2,-6,7,-10,4,-8,10,-3,-1,6,-6,-9,-3,9,9,2,3,8,-3,-1,-4,1,6,-9,-4,5,3,9,4,-5,-5,-8,-6,-10,-7,-5,10,6,-9,-5,9,4,-7,-1,2,5,2,4,2,-6,-7,-9,-8,-4,-2,-1,2,-7,10,-9,-4,8,8,4,7,8,-3,-10,-5,-10,-7,10,-8,-6,4,9,-10,6,8,-9,-1,9,-5,5,-5,-7,-7,2,1,-4,-3,-3,-9,-2,-10,-3,7,3,5,2,-2,-4,3,4,4,-10,-10,-2,3,-7,-5,4,-4,-4,4,9,-4,-6,-9,-2,10,-9,-9,9,-7,7,-9,-3,-7,-2,-10,8,3,2,6,-4,10,-7,8,-2,-2,-6,7,4,4,-4,8,-10,-6,3,-6,8,-2,-4,-1,-5,5,-6,1,-6,-5,-9,4,3,2,2,5,-6,3,9,-8,6,6,-6,1,1,-4,-10,2,6,3,3,-10,-7,1,-6,2,2,6,-4,8,5,-8,10,-10,3,6,1,7,8,6,8,-10,8,6,4,-9,-8,6,6,-4,-1,-5,8,-4,9,-4,8,5,1,7,-7,-6,3,3,-10,-6,-9,7,2,-4,1,-8,-2,-6,4,8,-2,-8,-6,4,-10,-1,3,6,9,-6,10,9,7,-6,-1,-2,-9,-5,1,-3,2,-10,9,-10,-8,9,10,-9,-5,8,9,8,2,3,5,-6,9,3,4,8,-2,7,7,1,-2,10,10,-9,1,8,9,4,2,8,1,-7,3,6,-1,-1,-3,6,7,6,1,-6,9,-8,5,8,-2,-10,-10,-4,-1,-6,6,-8,9,-2,1,1,-8,-3,-7,-1,-8,5,-7,-1,-3,-3,-8,1,8,-10,-1,-8,-3,2,-6,10,-5,-1,5,-9,8,-7,-4,8,4,-10,10,-4,1,-5,-10,-2,-2,-7,7,-5,-9,-3,-3,-6,10,1,-4,-5,4,3,-6,9,9,5,2,-1,2,-4,7,-1,-6,9,9,6,-3,-7,5,7,4,8,-3,8,4,-10,2,8,-4,-9,-10,-6,5,3,1,-3,-3,-2,-1,4,2,4,5,-5,8,4,8,-10,5,-4,3,-3,8,5,-8,5,-2,8,-1,-8,5,-7,-2,-10,8,5,-1,10,-8,1,1,-5,-4,-10,-6,-6,-10,5,-9,3,9,1,-8,9,3,1,-5,6,-1,-8,5,-7,-6,9,9,3,9,8,-2,-5,-7,10,5,5,2,-3,9,4,-4,1,6,-1,-9,-4,6,-7,-8,-6,2,-8,-5,5,-1,-9,5,-8,7,8,8,6,-3,-4,-1,1,2,-10,-10,-2,6,-6,3,-2,3,6,-1,-5,5,-5,-2,10,8,4,8,9,-7,-5,-10,3,-8,-7,9,-3,-3,-1,-5,-2,4,10,-2,-6,-7,1,9,-5,3,5,-5,-8,-7,5,3,-6,3,-7,-7,4,-3,3,1,8,-9,-7,1,3,8,9,-7,-6,-1,3,-7,3,-2,-3,-4,6,-4,-8,-8,-3,10,8,7,8,-9,7,8,8,-6,-2,2,4,10,-2,-2,7,-7,1,-8,-3,10,5,-1,9,-3,-8,10,4,-3,-10,-9,6,9,3,6,6,-7,-5,5,-6,4,5,9,4,6,-6,1,3,1,9,2,-5,-8,7,-4,-2,-10,-4,8,10,4,-9,10,-4,9,-8,1,-4,-6,10], dtype = "uint8")#candidate|1970|(1280,)|const|uint8
call_1969 = relay.TupleGetItem(func_1769_call(relay.reshape(const_1970.astype('uint8'), [1280,])), 7)
call_1971 = relay.TupleGetItem(func_1771_call(relay.reshape(const_1970.astype('uint8'), [1280,])), 7)
func_221_call = mod.get_global_var('func_221')
func_223_call = mutated_mod.get_global_var('func_223')
const_2005 = relay.const([1.799632,-2.177049,0.117467,-7.933159,-6.942445,-6.443275,9.581270,8.238615,0.266766,-1.365275,-4.124209,-9.067854,-2.527996,-4.511146,-2.593137,5.200187,-8.956663,-4.501255,-1.973108,2.190913,2.505556,3.702392,-0.292552,1.070750,5.434773,0.522114,7.206011,7.259194,3.695386,2.602691,4.324406,-3.299406,-0.068572,7.607085,5.009494,2.114905,-6.233640,0.524155,7.335557,7.297382,-4.389765,-2.247527,-0.350851,-2.164152,-5.166885,3.191708,-7.927474,1.069947,-5.689852,8.411204,0.319793,1.736976,-2.591915,-0.056273,4.498830,-1.621748,-9.466729,6.164610,-9.837672,3.093437,6.526822,-1.072353,-8.860039,-1.669427,3.464223,-7.058244,-5.607322,-9.546980,-3.699361,4.600307,-2.305896,6.215000,-2.696995,6.489491,-3.475296,5.532050,-1.951264,0.902177,0.035362,3.806470,-4.975122,-6.795998,6.216216,7.782207,4.624404,5.867065,-3.233758,9.339450,3.244164,1.499977,7.362833,6.345414,1.732049,-8.518387,-4.362704,1.825938,5.610287,-0.382810,-7.975557,-7.436709,-2.970710,-8.233632,-1.034380,2.822166,-1.959294,-7.602713,-9.836338,4.604195,-4.673727,-4.024754,-0.222179,6.045029,1.750087,-8.224234,9.971335,-3.652930,3.914633,-6.433481,-0.152316,6.768867,5.820778,-9.762410,-7.213721,0.468369,8.938234,6.096010,6.699504,8.151074,-8.082147,-8.989072,-5.426478,5.484340,4.239733,9.037898,-1.632959,4.028823,-7.134325,6.796057,6.167948,-1.470634,-0.880531,-2.216688,-8.747990,3.495294,-9.932964,8.011296,-1.048031,-9.149951,-7.588497,9.999537,-9.988561,-1.858454,-1.589403,5.013743,-9.591687,-4.821618,-6.709884,-4.975433,-4.172888,0.361118,-4.740515,3.861994,-0.219963,-2.583465,1.877809,0.995835,-2.657310,2.530066,9.146452,5.588993,-1.849965,-5.320721,-6.822881,0.181760,-2.837747,9.682141,8.344659,5.680666,-3.025028,4.679414,6.069314,-9.308342,-4.981924,-7.937078,-0.699757,-1.436939,2.969006,8.361149,2.354930,-8.590904,-5.160059,-6.429459,-1.729334,0.297461,-1.370960,4.396355,4.619424,5.685932,7.762287,0.278093,9.766020,-8.211417,-8.169902,9.462788,-3.770960,-3.313213,4.193243,1.093961,-1.753229,3.119492,7.704793,4.593233,-9.534597,-6.357277,-1.152374,3.583886,3.983639,1.554450,-8.155954,-1.176172,-5.746796,6.626740,6.892018,-2.000055,6.799103,-0.625468,-3.087788,8.413525,6.407914,-3.573036,5.882668,9.816033,2.222511,-5.059609,0.756585,-7.831553,7.472433,-2.857573,-0.635906,4.458564,-1.606718,-0.500762,7.226202,8.002125,-7.087844,-2.823549,9.975691,-5.615133,-8.786856,-4.462455,1.030207,-3.458051,-8.802473,-7.393543,4.666253,-1.422443,4.799197,-9.924599,-8.955462,3.369546,5.293759,-1.995466,-4.239253,1.041729,-3.943578,-9.217076,-1.499733,-7.686547,3.683045,-2.246624,-3.314765,-7.106863,1.194659,-1.296895,-2.285421,-7.732387,-3.883248,9.187306,-7.153332,4.153314,-4.775185,-9.387362,-1.122483,-5.459695,3.114052,-2.861372,8.259668,-9.127535,6.198221,8.332669,-7.520281,3.167827,-9.443782,9.751438,8.509841,7.719983,1.847363,8.877988,1.547589,1.975690,-7.896834,-4.549819,9.728562,-3.277366,-5.543788,-7.319881,-5.690554,2.197810,-7.570667,8.621913,5.105747,-8.039909,-1.226586,5.234970,0.238517,7.535689,-1.716537,2.315380,-7.693821,4.652161,3.631867,0.292838,5.820742,4.596659,-1.780538,-0.065998,4.340749,-5.676598,-8.403253,6.442050,-4.185030,1.552419,6.583099,-6.750785,-6.172121,-7.183229,-4.288558,3.224762,-7.622066,1.548352,4.224799,-2.823132,-3.052833,9.813113,-4.261220,-6.182251,8.830686,-2.145454,0.778159,-2.047113,-6.077102,4.466442,-5.395572,-8.347954,0.606741,0.877384,3.053100,-9.795402,-7.639794,-1.612654,-1.907912,-3.981370,-4.495190,-5.097012,1.010048,-8.885067,2.424486,-8.356581,-1.657215,-2.039432,8.878227,8.872001,-9.791903,-6.856334,3.643480,1.918283,-8.105260,6.867617,-4.329940,-9.422316,-6.565943,3.514463,-3.875021,2.008779,8.572448,6.303642,-4.692592,1.169619,-2.389474,5.570512,3.400049,3.306100,-1.132422,-1.065525,4.591178,7.431575,0.435819,3.000044,-3.494032,4.917805,5.788694,-8.892103,6.159950,-9.613893,-6.279211,8.770590,-3.645793,9.652605,9.585266,-4.882509,-7.839933,-5.556820,-5.328959,5.888299,-6.575569,-5.301134,9.866222,7.207694,2.717625,-5.313507,-7.958226,2.311458,5.125736,4.929431,-4.443459,0.105023,7.637897,4.149148,0.446199,6.855118,3.061061,5.714363,-6.494669,2.473107,-1.051457,5.789438,4.593073,-5.657650,2.066700,5.555196,0.453340,-8.695172,-5.824629,-1.306800,9.784866,8.279761,-0.844522,4.740758,-6.552549,-4.245241,8.964364,3.853629,-3.030273,3.032554,1.439382,1.039841,1.483615,-6.211655,4.057634,6.911118,-3.101522,0.367191,-7.208384,7.879452,1.360929,3.427391,-9.324436,6.863417,-5.798074,-9.845526,4.235609,-9.547079,-5.054432,-0.497099,-3.702141,-8.270374,7.452124,6.569129,-2.924033,-0.415725], dtype = "float64")#candidate|2005|(480,)|const|float64
call_2004 = relay.TupleGetItem(func_221_call(relay.reshape(const_2005.astype('float64'), [4, 10, 12])), 0)
call_2006 = relay.TupleGetItem(func_223_call(relay.reshape(const_2005.astype('float64'), [4, 10, 12])), 0)
const_2012 = relay.const([[[2,4,-9,-7,5,9],[-7,8,-2,2,-5,6],[-4,-3,-1,-6,-7,7],[3,10,-5,2,8,7],[-6,-5,-2,7,10,-2],[-2,-7,7,7,-9,-9],[-6,6,9,-3,-2,8],[-9,-1,4,3,-10,-7],[4,8,-10,8,8,-1],[-9,3,-3,7,-7,-1],[10,9,4,-8,1,-4],[2,9,9,-8,4,-2],[-4,9,5,-2,-5,6],[10,-10,1,4,-7,5],[4,-4,5,-5,3,10]],[[-5,-7,-5,2,7,6],[9,1,-2,-1,10,-5],[1,3,8,-4,-8,-5],[-3,8,-2,-10,-6,-6],[9,-5,3,3,-3,-8],[2,4,-4,-2,-10,1],[-7,-3,-3,-3,4,-3],[-9,-1,-5,-3,-2,6],[10,6,-8,-9,7,-10],[-1,-5,3,4,-6,-6],[5,-9,-8,4,3,-5],[-9,10,8,-8,-2,-6],[3,-7,-4,-2,-4,-7],[-4,-10,2,-9,-2,7],[-8,-1,-10,-7,6,3]],[[-7,-10,-4,3,1,-6],[-1,-4,-6,4,-9,-6],[3,-3,-7,10,9,-5],[10,-10,3,4,3,-6],[-2,-2,-7,-10,-2,-9],[7,-3,1,9,7,-2],[7,4,-5,-8,-3,8],[1,-10,10,9,1,8],[-1,-5,8,1,-3,-7],[9,7,-8,-2,2,-9],[1,4,2,-6,-8,-3],[8,4,-1,2,-8,2],[4,4,-5,-2,5,-10],[7,9,-7,-4,6,-8],[8,-7,-1,-10,-10,-2]],[[-1,3,2,10,1,7],[-2,5,-8,5,3,10],[-8,8,9,4,8,-4],[3,2,-3,-4,-1,-3],[1,4,-9,-9,-7,6],[9,-5,-9,9,-3,10],[1,3,2,-10,-3,9],[1,8,7,5,5,-2],[9,10,2,7,1,-5],[5,8,-4,-9,-4,-4],[-2,6,-8,-4,2,8],[4,-9,-7,-10,4,2],[4,2,8,-1,-6,8],[9,-1,-7,-9,4,6],[4,6,5,-5,-7,8]],[[-4,8,10,-2,-9,2],[-1,5,-6,-9,-8,-8],[2,1,-2,-7,-10,4],[2,-8,10,6,-10,-7],[3,-9,-2,3,2,-3],[5,-9,-6,6,1,-10],[-6,10,-9,-2,-6,3],[-8,2,-2,-4,-7,-3],[-6,-3,-5,-7,9,-6],[-8,-1,1,-2,4,-9],[-9,3,-6,10,-5,10],[-8,-2,-6,-5,9,7],[-4,9,3,2,10,9],[-4,-9,-6,3,-8,2],[3,8,-5,-2,-4,-5]],[[-8,10,-6,4,-1,-3],[4,10,-8,3,2,-5],[-6,6,-7,-10,9,5],[-10,7,3,-6,-5,6],[1,-7,3,-9,-9,1],[-5,-5,1,-4,-8,-2],[-3,8,7,3,5,10],[-4,-7,2,-10,-10,-3],[-4,2,10,-3,-4,-10],[6,8,3,-9,7,-9],[5,7,-4,-6,9,-10],[-4,1,5,9,-5,3],[5,5,8,-10,-5,8],[-1,-10,4,9,-5,6],[-2,-1,9,4,-6,5]],[[-5,4,-6,-1,-7,-5],[-1,9,-5,-7,-7,3],[-4,2,-6,-1,6,10],[10,-8,2,-9,10,-10],[4,-3,8,1,-4,2],[-1,-10,-10,10,-2,10],[2,9,-1,8,-8,8],[-8,8,1,-2,2,-9],[4,4,-8,2,-6,-1],[-1,2,-1,-3,-9,-10],[8,-3,6,3,-1,-10],[3,-8,-4,-6,9,2],[10,8,-6,-8,-10,7],[2,8,6,2,-9,-8],[9,-7,4,8,-5,-1]],[[-5,-9,9,1,-5,7],[-6,-1,-1,-7,5,-1],[-3,10,5,1,2,5],[6,-5,6,10,-2,6],[-2,-6,-6,3,-5,-7],[6,-2,-8,10,-4,4],[-8,1,-7,-3,-1,5],[5,-5,3,-3,-2,7],[-4,5,-5,-2,-3,-5],[2,-9,-7,8,-4,-6],[-9,-8,-6,2,-4,-1],[-7,-4,-6,1,6,-8],[-6,-7,-3,9,-2,2],[2,9,2,6,1,-8],[-6,-4,2,-5,10,1]]], dtype = "int64")#candidate|2012|(8, 15, 6)|const|int64
bop_2013 = relay.power(call_1935.astype('float64'), const_2012.astype('float64')) # shape=(8, 15, 6)
bop_2016 = relay.power(call_1936.astype('float64'), const_2012.astype('float64')) # shape=(8, 15, 6)
func_971_call = mod.get_global_var('func_971')
func_974_call = mutated_mod.get_global_var('func_974')
var_2022 = relay.var("var_2022", dtype = "uint32", shape = ())#candidate|2022|()|var|uint32
const_2023 = relay.const([-9,10,-5,-8,-5,9,-10,-8,9,7,7,7,-5,7,5,2,2,-3,4,-4,-4,-10,-3,5,-8,10,-6,-9,3,-8,2,4,3,1,-9,-6,-7,7,-7,-4,7,-2], dtype = "uint32")#candidate|2023|(42,)|const|uint32
call_2021 = relay.TupleGetItem(func_971_call(relay.reshape(var_2022.astype('uint32'), []), relay.reshape(const_2023.astype('uint32'), [7, 6, 1]), ), 0)
call_2024 = relay.TupleGetItem(func_974_call(relay.reshape(var_2022.astype('uint32'), []), relay.reshape(const_2023.astype('uint32'), [7, 6, 1]), ), 0)
output = relay.Tuple([call_1969,const_1970,call_2004,const_2005,bop_2013,call_2021,var_2022,const_2023,])
output2 = relay.Tuple([call_1971,const_1970,call_2006,const_2005,bop_2016,call_2024,var_2022,const_2023,])
func_2025 = relay.Function([var_2022,], output)
mod['func_2025'] = func_2025
mod = relay.transform.InferType()(mod)
mutated_mod['func_2025'] = func_2025
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2026 = relay.var("var_2026", dtype = "uint32", shape = ())#candidate|2026|()|var|uint32
func_2025_call = mutated_mod.get_global_var('func_2025')
call_2027 = func_2025_call(var_2026)
output = call_2027
func_2028 = relay.Function([var_2026], output)
mutated_mod['func_2028'] = func_2028
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2043 = relay.var("var_2043", dtype = "uint8", shape = (11, 2, 16))#candidate|2043|(11, 2, 16)|var|uint8
var_2044 = relay.var("var_2044", dtype = "uint8", shape = (11, 2, 16))#candidate|2044|(11, 2, 16)|var|uint8
bop_2045 = relay.add(var_2043.astype('uint8'), relay.reshape(var_2044.astype('uint8'), relay.shape_of(var_2043))) # shape=(11, 2, 16)
output = bop_2045
output2 = bop_2045
func_2058 = relay.Function([var_2043,var_2044,], output)
mod['func_2058'] = func_2058
mod = relay.transform.InferType()(mod)
mutated_mod['func_2058'] = func_2058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2058_call = mutated_mod.get_global_var('func_2058')
var_2060 = relay.var("var_2060", dtype = "uint8", shape = (11, 2, 16))#candidate|2060|(11, 2, 16)|var|uint8
var_2061 = relay.var("var_2061", dtype = "uint8", shape = (11, 2, 16))#candidate|2061|(11, 2, 16)|var|uint8
call_2059 = func_2058_call(var_2060,var_2061,)
output = call_2059
func_2062 = relay.Function([var_2060,var_2061,], output)
mutated_mod['func_2062'] = func_2062
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2109 = relay.var("var_2109", dtype = "float64", shape = (9, 13, 16))#candidate|2109|(9, 13, 16)|var|float64
var_2110 = relay.var("var_2110", dtype = "float64", shape = (9, 13, 16))#candidate|2110|(9, 13, 16)|var|float64
bop_2111 = relay.minimum(var_2109.astype('float64'), relay.reshape(var_2110.astype('float64'), relay.shape_of(var_2109))) # shape=(9, 13, 16)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_2115 = relay.TupleGetItem(func_1639_call(), 0)
call_2116 = relay.TupleGetItem(func_1641_call(), 0)
output = relay.Tuple([bop_2111,call_2115,])
output2 = relay.Tuple([bop_2111,call_2116,])
func_2119 = relay.Function([var_2109,var_2110,], output)
mod['func_2119'] = func_2119
mod = relay.transform.InferType()(mod)
mutated_mod['func_2119'] = func_2119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2119_call = mutated_mod.get_global_var('func_2119')
var_2121 = relay.var("var_2121", dtype = "float64", shape = (9, 13, 16))#candidate|2121|(9, 13, 16)|var|float64
var_2122 = relay.var("var_2122", dtype = "float64", shape = (9, 13, 16))#candidate|2122|(9, 13, 16)|var|float64
call_2120 = func_2119_call(var_2121,var_2122,)
output = call_2120
func_2123 = relay.Function([var_2121,var_2122,], output)
mutated_mod['func_2123'] = func_2123
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2128 = relay.var("var_2128", dtype = "float64", shape = (11, 1, 14))#candidate|2128|(11, 1, 14)|var|float64
uop_2129 = relay.log10(var_2128.astype('float64')) # shape=(11, 1, 14)
func_2025_call = mod.get_global_var('func_2025')
func_2028_call = mutated_mod.get_global_var('func_2028')
const_2132 = relay.const(2, dtype = "uint32")#candidate|2132|()|const|uint32
call_2131 = relay.TupleGetItem(func_2025_call(relay.reshape(const_2132.astype('uint32'), [])), 6)
call_2133 = relay.TupleGetItem(func_2028_call(relay.reshape(const_2132.astype('uint32'), [])), 6)
output = relay.Tuple([uop_2129,call_2131,const_2132,])
output2 = relay.Tuple([uop_2129,call_2133,const_2132,])
func_2137 = relay.Function([var_2128,], output)
mod['func_2137'] = func_2137
mod = relay.transform.InferType()(mod)
mutated_mod['func_2137'] = func_2137
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2138 = relay.var("var_2138", dtype = "float64", shape = (11, 1, 14))#candidate|2138|(11, 1, 14)|var|float64
func_2137_call = mutated_mod.get_global_var('func_2137')
call_2139 = func_2137_call(var_2138)
output = call_2139
func_2140 = relay.Function([var_2138], output)
mutated_mod['func_2140'] = func_2140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1828_call = mod.get_global_var('func_1828')
func_1830_call = mutated_mod.get_global_var('func_1830')
call_2172 = relay.TupleGetItem(func_1828_call(), 1)
call_2173 = relay.TupleGetItem(func_1830_call(), 1)
output = call_2172
output2 = call_2173
func_2174 = relay.Function([], output)
mod['func_2174'] = func_2174
mod = relay.transform.InferType()(mod)
output = func_2174()
func_2175 = relay.Function([], output)
mutated_mod['func_2175'] = func_2175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2196 = relay.var("var_2196", dtype = "int32", shape = ())#candidate|2196|()|var|int32
var_2197 = relay.var("var_2197", dtype = "int32", shape = (3, 4, 5))#candidate|2197|(3, 4, 5)|var|int32
bop_2198 = relay.left_shift(var_2196.astype('int32'), var_2197.astype('int32')) # shape=(3, 4, 5)
output = bop_2198
output2 = bop_2198
func_2214 = relay.Function([var_2196,var_2197,], output)
mod['func_2214'] = func_2214
mod = relay.transform.InferType()(mod)
mutated_mod['func_2214'] = func_2214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2214_call = mutated_mod.get_global_var('func_2214')
var_2216 = relay.var("var_2216", dtype = "int32", shape = ())#candidate|2216|()|var|int32
var_2217 = relay.var("var_2217", dtype = "int32", shape = (3, 4, 5))#candidate|2217|(3, 4, 5)|var|int32
call_2215 = func_2214_call(var_2216,var_2217,)
output = call_2215
func_2218 = relay.Function([var_2216,var_2217,], output)
mutated_mod['func_2218'] = func_2218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_2249 = func_1212_call()
call_2250 = func_1212_call()
var_2252 = relay.var("var_2252", dtype = "float64", shape = (8, 15, 6))#candidate|2252|(8, 15, 6)|var|float64
bop_2253 = relay.minimum(call_2249.astype('uint64'), var_2252.astype('uint64')) # shape=(8, 15, 6)
bop_2256 = relay.minimum(call_2250.astype('uint64'), var_2252.astype('uint64')) # shape=(8, 15, 6)
func_1828_call = mod.get_global_var('func_1828')
func_1830_call = mutated_mod.get_global_var('func_1830')
call_2269 = relay.TupleGetItem(func_1828_call(), 1)
call_2270 = relay.TupleGetItem(func_1830_call(), 1)
output = relay.Tuple([bop_2253,call_2269,])
output2 = relay.Tuple([bop_2256,call_2270,])
func_2271 = relay.Function([var_2252,], output)
mod['func_2271'] = func_2271
mod = relay.transform.InferType()(mod)
var_2272 = relay.var("var_2272", dtype = "float64", shape = (8, 15, 6))#candidate|2272|(8, 15, 6)|var|float64
output = func_2271(var_2272)
func_2273 = relay.Function([var_2272], output)
mutated_mod['func_2273'] = func_2273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_2284 = func_1212_call()
call_2285 = func_1212_call()
output = call_2284
output2 = call_2285
func_2292 = relay.Function([], output)
mod['func_2292'] = func_2292
mod = relay.transform.InferType()(mod)
mutated_mod['func_2292'] = func_2292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2292_call = mutated_mod.get_global_var('func_2292')
call_2293 = func_2292_call()
output = call_2293
func_2294 = relay.Function([], output)
mutated_mod['func_2294'] = func_2294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2292_call = mod.get_global_var('func_2292')
func_2294_call = mutated_mod.get_global_var('func_2294')
call_2316 = func_2292_call()
call_2317 = func_2292_call()
func_1433_call = mod.get_global_var('func_1433')
func_1436_call = mutated_mod.get_global_var('func_1436')
const_2324 = relay.const([-2,-1,-5,4,3,10,10,-8,9,2,1,3,7,-5,1,-1,2,6,4,5,-2,3,-6,-7,-9,9,2,-5,7,5,1,-3,-8,10,8,9,-2,-4,-1,5,9,1], dtype = "uint32")#candidate|2324|(42,)|const|uint32
call_2323 = relay.TupleGetItem(func_1433_call(relay.reshape(const_2324.astype('uint32'), [42,])), 2)
call_2325 = relay.TupleGetItem(func_1436_call(relay.reshape(const_2324.astype('uint32'), [42,])), 2)
bop_2330 = relay.not_equal(call_2316.astype('bool'), call_2323.astype('bool')) # shape=(1, 15, 6)
bop_2333 = relay.not_equal(call_2317.astype('bool'), call_2325.astype('bool')) # shape=(1, 15, 6)
func_1697_call = mod.get_global_var('func_1697')
func_1698_call = mutated_mod.get_global_var('func_1698')
call_2340 = relay.TupleGetItem(func_1697_call(), 0)
call_2341 = relay.TupleGetItem(func_1698_call(), 0)
bop_2346 = relay.multiply(bop_2330.astype('uint16'), relay.reshape(call_2340.astype('uint16'), relay.shape_of(bop_2330))) # shape=(1, 15, 6)
bop_2349 = relay.multiply(bop_2333.astype('uint16'), relay.reshape(call_2341.astype('uint16'), relay.shape_of(bop_2333))) # shape=(1, 15, 6)
output = relay.Tuple([const_2324,bop_2346,])
output2 = relay.Tuple([const_2324,bop_2349,])
func_2350 = relay.Function([], output)
mod['func_2350'] = func_2350
mod = relay.transform.InferType()(mod)
mutated_mod['func_2350'] = func_2350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2350_call = mutated_mod.get_global_var('func_2350')
call_2351 = func_2350_call()
output = call_2351
func_2352 = relay.Function([], output)
mutated_mod['func_2352'] = func_2352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2292_call = mod.get_global_var('func_2292')
func_2294_call = mutated_mod.get_global_var('func_2294')
call_2374 = func_2292_call()
call_2375 = func_2292_call()
output = call_2374
output2 = call_2375
func_2377 = relay.Function([], output)
mod['func_2377'] = func_2377
mod = relay.transform.InferType()(mod)
mutated_mod['func_2377'] = func_2377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2377_call = mutated_mod.get_global_var('func_2377')
call_2378 = func_2377_call()
output = call_2378
func_2379 = relay.Function([], output)
mutated_mod['func_2379'] = func_2379
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2411 = relay.const(2, dtype = "uint8")#candidate|2411|()|const|uint8
var_2412 = relay.var("var_2412", dtype = "uint8", shape = (6, 9, 8))#candidate|2412|(6, 9, 8)|var|uint8
bop_2413 = relay.bitwise_xor(const_2411.astype('uint8'), var_2412.astype('uint8')) # shape=(6, 9, 8)
output = bop_2413
output2 = bop_2413
func_2419 = relay.Function([var_2412,], output)
mod['func_2419'] = func_2419
mod = relay.transform.InferType()(mod)
mutated_mod['func_2419'] = func_2419
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2420 = relay.var("var_2420", dtype = "uint8", shape = (6, 9, 8))#candidate|2420|(6, 9, 8)|var|uint8
func_2419_call = mutated_mod.get_global_var('func_2419')
call_2421 = func_2419_call(var_2420)
output = call_2421
func_2422 = relay.Function([var_2420], output)
mutated_mod['func_2422'] = func_2422
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2427 = relay.const([[[7.241092],[5.185371],[2.663443],[3.299442],[1.805735],[-9.504604],[-2.094052],[-6.925431],[-7.736744],[-9.885643],[1.797287],[9.855360],[-7.812862],[1.210910],[-1.983365],[-6.839491]],[[0.512288],[4.594273],[5.750986],[0.309029],[6.423059],[-6.101797],[-1.769956],[-1.301313],[2.240717],[-5.436485],[-7.440870],[5.938984],[5.820983],[-8.324687],[-2.011560],[9.363500]],[[4.265882],[-5.444173],[6.687546],[3.452887],[6.452222],[0.325479],[4.858631],[-7.958065],[-6.175906],[0.342398],[-1.320904],[-7.569486],[-3.367639],[-7.949164],[0.523973],[-2.802470]],[[-0.083419],[-0.483319],[-7.094598],[-6.180580],[3.916816],[7.372226],[5.009847],[1.481798],[-3.047721],[-3.872323],[4.679259],[7.798612],[-7.394255],[-2.082888],[5.018231],[-7.828761]],[[6.674067],[-4.172871],[-4.534093],[-6.012886],[-9.849819],[-6.139243],[3.044498],[3.879204],[2.603114],[8.910643],[-0.235244],[-5.515806],[-4.106678],[1.790194],[8.540692],[0.889793]]], dtype = "float64")#candidate|2427|(5, 16, 1)|const|float64
uop_2428 = relay.atanh(const_2427.astype('float64')) # shape=(5, 16, 1)
uop_2447 = relay.acos(uop_2428.astype('float32')) # shape=(5, 16, 1)
uop_2449 = relay.cosh(const_2427.astype('float64')) # shape=(5, 16, 1)
bop_2453 = relay.floor_divide(uop_2447.astype('float64'), relay.reshape(uop_2449.astype('float64'), relay.shape_of(uop_2447))) # shape=(5, 16, 1)
bop_2462 = relay.logical_xor(bop_2453.astype('uint32'), relay.reshape(uop_2449.astype('uint32'), relay.shape_of(bop_2453))) # shape=(5, 16, 1)
output = bop_2462
output2 = bop_2462
func_2465 = relay.Function([], output)
mod['func_2465'] = func_2465
mod = relay.transform.InferType()(mod)
mutated_mod['func_2465'] = func_2465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2465_call = mutated_mod.get_global_var('func_2465')
call_2466 = func_2465_call()
output = call_2466
func_2467 = relay.Function([], output)
mutated_mod['func_2467'] = func_2467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_2499 = relay.TupleGetItem(func_1639_call(), 0)
call_2500 = relay.TupleGetItem(func_1641_call(), 0)
output = call_2499
output2 = call_2500
func_2510 = relay.Function([], output)
mod['func_2510'] = func_2510
mod = relay.transform.InferType()(mod)
output = func_2510()
func_2511 = relay.Function([], output)
mutated_mod['func_2511'] = func_2511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1889_call = mod.get_global_var('func_1889')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_2536 = relay.TupleGetItem(func_1889_call(), 0)
call_2537 = relay.TupleGetItem(func_1890_call(), 0)
func_2377_call = mod.get_global_var('func_2377')
func_2379_call = mutated_mod.get_global_var('func_2379')
call_2548 = func_2377_call()
call_2549 = func_2377_call()
func_1042_call = mod.get_global_var('func_1042')
func_1044_call = mutated_mod.get_global_var('func_1044')
var_2559 = relay.var("var_2559", dtype = "float32", shape = (54,))#candidate|2559|(54,)|var|float32
call_2558 = func_1042_call(relay.reshape(var_2559.astype('float32'), [1, 9, 6]))
call_2560 = func_1042_call(relay.reshape(var_2559.astype('float32'), [1, 9, 6]))
func_2174_call = mod.get_global_var('func_2174')
func_2175_call = mutated_mod.get_global_var('func_2175')
call_2565 = func_2174_call()
call_2566 = func_2174_call()
func_2025_call = mod.get_global_var('func_2025')
func_2028_call = mutated_mod.get_global_var('func_2028')
const_2571 = relay.const(-9, dtype = "uint32")#candidate|2571|()|const|uint32
call_2570 = relay.TupleGetItem(func_2025_call(relay.reshape(const_2571.astype('uint32'), [])), 4)
call_2572 = relay.TupleGetItem(func_2028_call(relay.reshape(const_2571.astype('uint32'), [])), 4)
output = relay.Tuple([call_2536,call_2548,call_2558,var_2559,call_2565,call_2570,const_2571,])
output2 = relay.Tuple([call_2537,call_2549,call_2560,var_2559,call_2566,call_2572,const_2571,])
func_2576 = relay.Function([var_2559,], output)
mod['func_2576'] = func_2576
mod = relay.transform.InferType()(mod)
var_2577 = relay.var("var_2577", dtype = "float32", shape = (54,))#candidate|2577|(54,)|var|float32
output = func_2576(var_2577)
func_2578 = relay.Function([var_2577], output)
mutated_mod['func_2578'] = func_2578
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2580 = relay.const([[[1.634179,-3.155553,3.774739,-2.764891,2.236568,0.872193,6.005689,7.384364,-3.883339,-6.217485,9.526985,-7.325586],[-5.682384,2.849446,7.377272,9.960645,2.187556,4.206920,2.937265,5.323019,7.293196,4.085311,8.547020,-5.975871],[-6.813426,6.919376,1.853609,1.845207,5.293250,-6.762406,-9.377218,-7.120829,-2.529541,-3.873853,9.968723,-2.879653],[-9.898029,3.268454,-0.458746,4.939508,-4.855378,8.157229,-1.197311,1.170844,9.142208,6.426914,5.706780,8.850934],[7.513265,1.719665,3.366574,-9.017260,4.913189,9.067773,1.615150,-9.916013,-5.204970,-8.227589,7.558137,-8.036560],[6.123138,-7.825268,5.754826,-2.959466,1.751778,2.124761,9.831231,-1.143224,7.414787,4.277898,-0.380337,7.418280],[3.992764,-6.064440,7.114433,8.712908,-3.976444,-9.623851,3.597668,-3.991764,-6.734579,-2.075839,8.304839,9.738708],[-5.022987,-8.892737,-0.901448,4.353884,8.210862,-1.435423,1.741647,4.423954,6.126263,1.493728,9.490569,2.271836],[-5.841375,8.318441,-1.698094,-9.415393,1.554605,-9.867488,-2.420937,5.109186,0.803928,9.174072,1.830872,-2.802740],[-3.374270,-0.077979,9.165062,8.940378,2.088401,-3.327698,6.025331,-2.986440,7.840935,7.747535,0.724013,4.114698],[-1.691786,1.124081,9.302142,4.337112,4.340405,7.970680,0.291956,-7.845122,-2.846715,7.651633,-9.278826,-4.610050],[-6.731656,2.915975,5.058141,-5.520659,1.723634,3.793933,2.310145,-2.270970,-4.229283,4.639337,8.133123,-8.769578],[-6.467735,9.861342,-9.023837,-7.217829,9.594528,-4.046340,-4.203606,9.174760,-9.515835,5.769838,3.902647,-6.116006]],[[7.397809,8.375475,-3.277633,-6.584045,0.626700,7.769827,-9.172061,-5.345604,0.851466,-8.697606,0.135464,-1.581585],[-1.695362,7.298284,9.771628,-0.311166,-0.140454,5.993408,8.618317,2.615941,-4.348855,-4.115651,6.974905,-1.776192],[3.632846,-6.577590,-6.949291,-3.925329,-3.471135,-5.694414,-5.273758,7.447227,1.239821,7.028000,-2.287977,7.259760],[1.292429,9.442466,1.390722,9.590477,-0.892069,7.172150,-0.409864,-4.278370,-1.911739,6.372865,4.076471,6.875485],[0.729824,8.690338,5.943138,-7.115841,0.952523,3.149623,-4.926510,5.281795,0.717711,6.289471,8.879590,-0.776838],[4.250160,-6.873192,-4.543600,7.498262,-3.399243,-7.192215,3.163528,-1.745767,-0.924720,6.400694,-7.396294,-9.350534],[-9.770287,-3.095727,6.106178,7.157926,-7.746816,9.311023,1.066965,-6.970861,8.711430,3.022877,-6.225962,3.079180],[-3.048485,2.231092,-7.120652,-2.524217,9.817249,-1.986986,3.472685,0.190306,1.433396,8.450737,9.062523,-1.057653],[-4.541818,-4.822357,6.809085,7.763777,-6.981488,-8.504585,-2.285120,3.660326,4.344538,-3.283015,0.924533,-3.954482],[-6.840139,4.723366,-2.855208,2.853504,-3.975880,2.946160,4.032829,7.532903,5.391534,-8.777134,-3.931118,9.110103],[3.572074,-6.381105,-5.133369,7.141675,-4.913496,-8.601948,-6.359386,3.063397,1.886221,-6.056270,-9.772410,1.821876],[-6.810683,0.206287,8.529989,-3.062990,4.132966,-0.089829,-9.556830,-8.034695,-2.740929,9.999396,-3.957916,9.890886],[9.840805,8.312281,6.950701,1.787470,-2.279580,-9.456221,0.498905,6.817334,-7.033040,-9.814302,0.529998,5.577260]],[[-1.820990,7.194635,-6.144286,-7.268883,-5.655759,8.286086,-4.894854,6.060952,6.094449,8.807668,8.640351,7.962712],[-0.116671,-6.201541,3.865806,0.563455,-8.249262,-4.231836,-6.809377,-1.987689,-7.998138,-6.209700,-4.452789,-3.270883],[-5.335172,-1.022928,-8.603152,2.393953,-2.969632,-5.524399,6.917899,6.679700,-7.626063,-3.463479,-4.663876,-0.990920],[-4.903545,-6.745137,-9.307720,6.219323,-1.839361,-6.901144,0.671268,3.466097,3.394160,7.984087,0.073257,-2.649702],[2.960709,-5.622115,5.714251,-5.591292,-5.659857,-4.021655,1.232406,7.798147,-0.606541,-2.975099,8.223401,7.143629],[-7.774723,5.598723,1.750874,1.423144,9.658401,-0.252241,-8.262584,-0.583504,9.107000,-4.238611,-2.350469,-8.370709],[6.083527,3.938529,-0.465799,-3.819782,6.359062,5.332154,2.281650,0.246761,-6.314342,-3.417336,5.593280,7.276691],[5.209136,1.305553,8.925347,-1.248530,0.211333,4.979660,-5.423196,-0.465011,-2.696816,-4.754070,-6.454915,-3.805985],[-6.971262,-1.967170,9.824607,-9.172299,2.086898,1.778928,-6.125089,9.825533,8.299184,6.878235,-1.012251,2.202391],[9.353838,3.265992,-7.438724,1.135503,-1.935264,-5.088212,8.062048,-7.107128,-6.726054,-8.093276,-8.925921,-9.001624],[-8.036651,3.417461,2.111971,2.785854,1.333116,7.699807,-1.798315,-9.391865,-2.790985,3.409856,4.561742,-2.215762],[1.416608,-3.144266,-2.820249,9.459038,6.658511,-9.393717,2.789720,0.412901,-0.411804,-4.716719,8.500964,2.419792],[9.168398,-9.668169,-7.636462,8.995102,1.541139,0.045472,-2.876505,-4.141581,-0.135105,9.448831,2.329771,-3.394236]],[[0.856541,-9.459421,9.704384,-6.518712,-1.656289,1.191483,2.497434,-1.978577,6.978115,-6.443748,-0.379455,6.299267],[5.017763,3.342562,2.260914,-9.832847,-9.943602,-0.770599,-8.651543,5.115833,0.731511,-7.827723,7.522786,3.417840],[-8.699801,-0.786129,-0.941784,9.078794,-0.728719,-3.702188,-8.742608,-4.953102,-1.902792,-5.978721,1.401810,0.747174],[1.971908,4.451214,4.431063,8.099619,4.658258,-1.256608,9.524997,1.704552,-1.514914,7.427633,5.100431,-2.954953],[-8.352762,-2.401256,-8.903907,-1.401466,4.267791,-6.345835,-8.914813,8.748649,0.087097,-4.813471,4.967704,1.763832],[8.882730,2.405391,-8.446373,-4.336388,-2.237276,6.744989,9.735570,-2.338942,5.655062,9.468232,-0.618887,0.228158],[-8.954350,-7.147013,-6.406399,-0.100404,2.025471,-1.434692,6.587327,-3.855440,0.330156,-1.500308,-4.464571,-5.176126],[4.708906,0.210944,-2.279419,1.941189,-9.069016,-8.583771,0.365096,3.319392,-9.267485,0.966353,-0.704706,-7.377899],[0.698659,-8.846574,7.926784,3.227354,-3.424810,4.822615,-9.848137,-0.687665,-2.953957,7.272534,7.702734,-1.550994],[-8.342175,0.511574,-3.011587,-3.498280,-5.860329,3.204390,3.707022,-8.411561,3.446388,-4.060405,-5.638824,5.143269],[-8.810039,0.118842,9.509058,5.829543,9.105646,-4.954621,-2.740648,4.892334,-1.216051,4.715500,8.936959,3.495464],[9.317910,-2.140613,-6.864922,-5.801121,-5.481388,-7.782874,-4.451286,3.089781,-3.305927,6.817608,7.840561,7.378107],[4.196422,0.356409,-4.309289,9.295872,4.824423,-1.983691,0.178942,-6.285154,-2.759946,2.980754,-8.720097,-3.718987]]], dtype = "float64")#candidate|2580|(4, 13, 12)|const|float64
uop_2581 = relay.acosh(const_2580.astype('float64')) # shape=(4, 13, 12)
output = relay.Tuple([uop_2581,])
output2 = relay.Tuple([uop_2581,])
func_2594 = relay.Function([], output)
mod['func_2594'] = func_2594
mod = relay.transform.InferType()(mod)
mutated_mod['func_2594'] = func_2594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2594_call = mutated_mod.get_global_var('func_2594')
call_2595 = func_2594_call()
output = call_2595
func_2596 = relay.Function([], output)
mutated_mod['func_2596'] = func_2596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2292_call = mod.get_global_var('func_2292')
func_2294_call = mutated_mod.get_global_var('func_2294')
call_2631 = func_2292_call()
call_2632 = func_2292_call()
output = call_2631
output2 = call_2632
func_2635 = relay.Function([], output)
mod['func_2635'] = func_2635
mod = relay.transform.InferType()(mod)
mutated_mod['func_2635'] = func_2635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2635_call = mutated_mod.get_global_var('func_2635')
call_2636 = func_2635_call()
output = call_2636
func_2637 = relay.Function([], output)
mutated_mod['func_2637'] = func_2637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2292_call = mod.get_global_var('func_2292')
func_2294_call = mutated_mod.get_global_var('func_2294')
call_2662 = func_2292_call()
call_2663 = func_2292_call()
uop_2670 = relay.sinh(call_2662.astype('float64')) # shape=(1, 15, 6)
uop_2672 = relay.sinh(call_2663.astype('float64')) # shape=(1, 15, 6)
bop_2676 = relay.bitwise_xor(call_2662.astype('int16'), relay.reshape(uop_2670.astype('int16'), relay.shape_of(call_2662))) # shape=(1, 15, 6)
bop_2679 = relay.bitwise_xor(call_2663.astype('int16'), relay.reshape(uop_2672.astype('int16'), relay.shape_of(call_2663))) # shape=(1, 15, 6)
uop_2685 = relay.sqrt(call_2662.astype('float64')) # shape=(1, 15, 6)
uop_2687 = relay.sqrt(call_2663.astype('float64')) # shape=(1, 15, 6)
bop_2697 = relay.less(uop_2670.astype('bool'), relay.reshape(call_2662.astype('bool'), relay.shape_of(uop_2670))) # shape=(1, 15, 6)
bop_2700 = relay.less(uop_2672.astype('bool'), relay.reshape(call_2663.astype('bool'), relay.shape_of(uop_2672))) # shape=(1, 15, 6)
output = relay.Tuple([bop_2676,uop_2685,bop_2697,])
output2 = relay.Tuple([bop_2679,uop_2687,bop_2700,])
func_2704 = relay.Function([], output)
mod['func_2704'] = func_2704
mod = relay.transform.InferType()(mod)
mutated_mod['func_2704'] = func_2704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2704_call = mutated_mod.get_global_var('func_2704')
call_2705 = func_2704_call()
output = call_2705
func_2706 = relay.Function([], output)
mutated_mod['func_2706'] = func_2706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2174_call = mod.get_global_var('func_2174')
func_2175_call = mutated_mod.get_global_var('func_2175')
call_2719 = func_2174_call()
call_2720 = func_2174_call()
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_2721 = func_1212_call()
call_2722 = func_1212_call()
const_2732 = relay.const([[[-5.602317,5.875555,-3.737998,8.522543,-4.070314,4.636956],[-1.450650,0.689209,-8.187600,-2.414333,6.575228,5.327481],[5.216299,-3.710052,3.015404,-3.897327,1.316713,-3.904409],[6.227250,5.090745,-8.457290,4.416879,9.922430,2.350320],[5.430573,-8.685589,6.980586,-5.943100,2.113483,-9.267328],[-8.063603,-3.801100,3.973484,9.586004,-7.089325,-0.035051],[5.714156,0.981851,-2.777591,7.747391,-4.817639,-3.016047],[1.390208,-5.216565,-8.483359,4.285314,-3.324525,-5.129185],[0.071219,-5.506493,-1.523289,-6.594043,3.841683,-2.708589],[-5.856208,0.984728,0.679399,5.634369,2.656421,0.200420],[-2.712943,-7.903563,8.915347,-5.734123,8.962685,-1.632563],[8.389906,7.914556,0.408528,-0.479912,6.278339,-3.531045],[-1.736528,-2.157632,-2.706089,0.991669,-9.378239,3.092150],[-7.887394,-8.515059,-5.921922,2.877700,-4.988388,-4.597638],[-1.094726,9.871717,6.073657,6.044820,0.188399,1.479258]],[[2.899995,1.696165,-7.934644,3.564226,-2.080004,-5.535408],[1.744995,3.593757,9.557864,1.612912,-7.242822,7.845268],[-6.549435,8.754315,-8.271689,9.473224,5.464871,-3.621382],[9.277603,-1.673146,5.117549,0.112829,-5.325169,-5.443241],[-5.810009,-7.751796,4.823845,-6.532143,-4.058035,1.808381],[-4.940775,-2.246167,4.013965,-4.387260,5.416423,7.456315],[9.135596,1.449396,6.182426,4.363919,9.976080,-2.252826],[-7.384180,-6.129999,9.546206,9.542658,5.181525,3.080091],[-3.274717,5.481988,2.000351,7.670821,9.070259,-3.651495],[-8.307015,0.251741,9.248391,-1.885255,-0.919771,-7.605834],[1.989281,-1.818714,-4.650868,8.300009,6.448096,-2.947862],[2.520845,6.799013,-3.279384,8.025314,-4.244017,-7.927901],[5.546494,1.151906,8.262786,0.084941,6.924371,1.036964],[1.888679,8.596344,-1.522092,9.269489,4.229246,-8.862995],[4.272580,-0.202116,-4.689704,1.309146,-3.230487,-5.893829]],[[6.045437,-9.103029,3.963914,-0.646384,-8.593568,8.154628],[6.064903,3.341336,8.062054,-2.370121,3.768675,-5.384960],[0.620818,9.006240,-0.714767,0.966843,3.931591,7.759969],[-0.785087,-6.993729,1.749265,5.616622,-8.256700,9.962989],[-1.262763,-5.208072,-1.088326,-8.178718,1.919953,2.109682],[7.482134,7.355274,-1.176875,4.906809,-4.328869,-3.456722],[6.546667,-9.484323,-4.993298,2.067579,4.539813,-9.883039],[1.728116,1.687055,6.120075,-1.518395,5.469681,7.266579],[-1.222094,-2.167308,-6.085470,-2.126752,-4.834895,-5.651641],[-7.631401,-0.872993,7.013812,-6.405841,2.354538,4.014010],[-9.879422,0.650867,1.268714,-9.004246,9.585083,-6.985207],[2.271790,3.386839,1.580922,-0.979116,9.088841,8.604482],[5.987103,8.516025,9.852755,5.725005,7.550462,-8.499630],[-8.554862,-1.418899,8.740169,6.199320,-7.688447,2.807492],[-3.787808,9.907941,-3.622050,7.362243,-7.938475,-3.335091]],[[0.033506,-9.693266,-0.742435,-8.674056,7.769635,-5.774955],[8.917501,1.476010,-3.223486,-9.677963,-7.265468,-3.040731],[-0.953246,-9.886042,6.343832,8.468122,6.916773,5.143861],[-2.591333,-3.588130,-0.914636,-5.987288,-6.079569,3.067006],[-5.238972,-0.507517,-8.219417,9.648927,-6.334138,2.597657],[-6.018252,-1.295010,-4.021711,5.219976,4.573574,-6.695236],[-0.203060,-4.246008,-6.810941,2.152844,4.345859,9.383476],[8.319559,-3.664798,5.010087,8.238020,-7.456212,5.772820],[4.425587,8.369642,-4.088876,-3.120359,0.884894,8.705980],[7.261493,-7.351290,-6.919241,-9.817556,1.622490,4.172119],[-2.792660,-2.727748,7.831284,-8.861836,2.424800,3.507998],[7.635619,-5.773768,-3.297233,3.607405,9.935595,-2.978993],[1.280607,3.312078,-9.235892,1.750266,0.076554,7.650540],[3.107749,2.990954,-9.772714,-6.683394,-4.916843,-8.121792],[4.123858,-0.867319,3.424346,-5.712712,2.552277,9.268013]],[[4.293917,1.192244,2.749336,0.411921,-2.876274,5.184872],[5.651583,-8.733947,-5.502129,6.705108,-5.486262,-1.181270],[-5.474167,5.513206,-7.006450,8.239379,1.435225,-9.335481],[-8.187399,-8.867283,-9.184913,9.181898,2.116966,-6.986608],[-9.514512,8.633625,7.737458,-3.443326,3.626693,-7.917689],[2.251766,4.132521,-4.395055,1.637432,3.929338,7.989522],[5.703424,9.225413,-6.593342,-2.710519,5.254460,-6.804037],[-0.739096,1.007927,-1.275278,7.707979,8.366307,-2.645009],[3.178080,-7.452010,0.768914,-0.213211,-9.958708,-0.392056],[5.266243,7.774971,-7.454946,-5.388572,6.175018,-0.185728],[0.711372,7.852087,-5.502475,-4.172602,1.706216,-9.245879],[-0.613055,9.548718,8.439532,9.906226,-4.976315,9.474739],[-2.106607,5.698415,7.610195,8.942067,-4.557719,-4.706145],[6.117060,-9.206426,3.737449,9.467080,3.112925,0.665439],[-0.291564,-9.816728,6.042423,-6.788975,5.984766,7.902307]],[[0.001688,6.497332,2.766112,2.625083,-5.291777,2.889909],[-6.972016,3.353080,0.930980,-4.263269,0.022847,3.385402],[4.081166,1.898384,8.762336,7.097509,9.574560,-8.359024],[-5.111154,2.961140,4.673003,8.724927,-2.802917,-9.919859],[4.016974,9.497257,4.614941,7.947610,-6.305917,0.169573],[-3.659074,9.155050,1.803138,-1.803665,1.970537,-1.247100],[0.375888,-2.638232,-1.891712,9.668450,-5.811078,-0.288619],[4.584180,-0.910776,-1.385659,-1.896634,-2.267934,7.376424],[3.910564,-2.643505,4.378784,-0.095568,-2.820529,-5.051868],[7.535613,-9.902984,1.917623,5.228788,-7.044234,-5.624588],[5.883908,5.493022,-7.092980,2.827729,5.355888,-1.482172],[-8.865860,2.858386,-9.011367,5.517276,5.164626,9.973049],[-4.116304,-2.813224,-7.808737,-7.491713,2.627697,6.055186],[-1.107648,8.547633,-1.883562,-0.209894,-5.018959,9.227986],[-8.334568,-1.769028,-2.490836,-0.235509,-1.978027,-7.977624]],[[3.537909,-3.948409,-7.969713,8.282986,-9.996273,-2.092372],[-5.905421,3.179625,-8.618446,9.915230,9.310512,6.224773],[7.546459,5.100799,-9.033527,-2.992030,-7.868325,-9.534596],[1.586412,7.019161,-2.425353,-1.738628,-2.753672,-5.900526],[2.973987,7.519755,4.999378,-8.729442,-8.006481,1.510282],[8.671383,1.284944,-3.452158,3.313053,6.289407,-6.672003],[-5.548977,-7.194010,-1.131671,-1.274798,0.080683,0.351384],[-6.384144,7.225533,6.937609,5.094874,0.378081,-9.385726],[-6.350466,7.337494,-4.036043,9.636861,-3.966896,4.053330],[-3.199176,-7.747932,-0.912662,7.430859,-1.367373,8.592188],[1.077510,-6.277577,7.225978,-4.326595,-4.127524,4.977580],[4.204514,-7.923128,1.417632,8.817309,0.625480,3.192291],[6.700869,-3.477659,7.174246,0.006213,-2.771615,1.437378],[-9.127021,3.969098,7.210109,4.227873,6.313332,1.672527],[3.044968,9.565250,-8.719662,-3.370096,1.809207,5.654646]],[[4.517582,2.193303,8.611356,5.331228,-4.820266,-6.255956],[-9.254003,6.530739,4.020525,-6.565117,5.630439,8.744915],[-2.070482,3.848236,-8.164621,-7.099182,8.468870,4.620280],[0.844324,-9.921479,4.646851,5.432551,-7.533679,-6.583305],[5.607703,-8.994767,-9.628382,2.754807,-2.143526,-1.201853],[0.450317,-0.941603,-9.313873,7.333216,-6.138567,4.719042],[5.974755,8.088712,1.774346,3.980247,-8.127826,6.207382],[-5.083543,8.823880,2.368057,2.301941,0.730868,7.931979],[-0.156678,3.004222,-8.760361,-8.977318,8.362153,2.746315],[4.279038,-0.987523,4.212006,-4.868839,-4.635942,-9.832116],[7.991211,-8.211284,1.768826,-5.658314,7.936220,-0.616718],[2.035654,2.419727,5.599351,1.273449,7.959686,-9.409455],[-5.515231,-6.536967,2.563673,-1.450530,7.001110,7.015335],[0.904605,-4.992013,0.932045,-6.583403,1.621168,6.489926],[5.767353,-2.218152,-4.401393,7.020459,9.335744,7.965497]],[[-2.921535,-1.500711,8.821694,-5.411029,0.308445,3.595682],[1.508966,7.077414,1.656493,5.941396,-4.016134,5.165752],[1.502942,9.916511,8.813000,1.803317,-0.987692,1.176403],[8.603229,-4.523730,-8.645225,0.289440,-4.744384,-5.695350],[6.253628,-8.139676,1.372989,6.465526,-3.328473,-4.044753],[3.941393,9.175113,8.554228,2.721435,-8.965604,4.171352],[3.687292,-8.726595,-0.394767,3.305043,5.625755,5.639119],[-3.581331,6.602846,1.943342,-2.771016,9.558557,-2.185945],[-1.792999,6.812484,-2.732189,6.955437,7.261389,9.943578],[-4.637357,6.787524,-4.685341,0.931123,3.919772,8.651164],[-2.594106,-9.172727,4.183549,-5.761753,-7.701672,-4.120562],[-1.840303,7.549429,9.583076,4.662076,5.350082,0.190344],[1.442601,-4.991305,4.748585,4.928402,8.875740,2.507718],[2.102755,-4.721851,9.866654,-0.942899,-5.635628,3.708555],[-2.130047,-7.635900,-4.294522,6.214829,-6.171287,-0.257784]],[[5.734314,9.239751,7.911827,1.323584,-4.858865,4.375727],[-2.792774,9.028191,9.977845,-4.796341,-1.953448,6.695635],[6.820793,-3.433860,9.167207,9.458784,8.612240,2.069640],[-3.276294,7.815649,3.776789,-5.977449,-5.381540,-7.941017],[6.756478,5.671065,9.555324,-6.081643,1.568532,-0.721647],[6.425104,2.248631,-7.759170,-2.650056,3.646202,8.797025],[-7.639931,-2.891526,-1.351430,-7.546401,1.424794,5.990393],[-8.962300,2.201646,-9.812870,-0.508975,-1.445367,-4.241174],[1.742575,6.636870,-1.702063,4.063254,-7.009136,3.280629],[-2.040700,-1.892582,5.604279,1.783425,8.169479,3.796796],[-2.645957,-8.811829,9.782362,-4.916937,8.698889,1.742824],[-6.700687,-9.836474,-2.547498,2.228133,7.823549,5.554251],[8.879974,-4.348313,8.389659,3.572013,-8.003565,-1.250605],[-5.956864,-2.261636,-7.925024,-6.739459,-0.446564,-5.392525],[-8.637270,5.582620,4.470112,4.200642,6.869634,-8.744568]],[[5.168362,8.946433,2.298261,-6.205440,-5.912311,1.352409],[-8.030486,8.097552,-6.406703,-1.080640,-9.079126,-0.467293],[-0.750487,-5.475944,3.207712,-8.444578,-0.375245,-4.446411],[-4.883731,-4.718256,6.195470,6.434456,5.932470,-5.417372],[-8.802988,-1.097982,0.164324,3.702462,-6.843581,8.681522],[-3.995601,6.389625,4.915600,-7.078389,-1.714174,-5.124965],[-9.787681,4.342824,4.238599,0.171605,-6.881517,-2.630232],[-6.496096,1.384993,3.320181,-2.001517,6.419316,7.973399],[-5.347523,-8.899052,-7.943081,-2.476137,-0.915857,-5.859808],[-1.060114,-7.098114,6.407289,-2.234840,-4.739452,4.236749],[-1.647118,3.852026,5.137055,7.991598,-0.836104,-8.603744],[-1.677873,5.452446,-3.274156,-5.592225,4.532112,-9.183446],[2.501382,-5.786573,-6.519540,-0.895795,6.856432,-2.731549],[-3.252767,-5.237221,7.641674,8.721207,-9.709027,5.576893],[-2.225733,2.261052,-3.692652,-8.398432,-2.309471,0.568367]],[[-5.887058,9.210197,5.526859,-3.303721,6.933160,-8.804518],[1.966310,8.782390,-2.341275,0.099107,-9.412243,-0.245564],[-6.701108,1.384502,6.943055,0.358233,-3.885742,6.254595],[0.927260,5.396144,1.439853,6.129315,4.806652,-7.970081],[0.852227,-6.184205,-5.441460,-7.920752,5.901156,3.491056],[-8.417178,3.113353,8.426167,-6.516454,-8.959980,-0.093201],[1.247635,5.219344,-6.025392,-6.014790,3.913433,9.150189],[0.536689,-5.839895,9.134314,2.910334,-8.680087,-2.053433],[-8.964204,-1.964098,-1.539448,-0.327080,6.198087,-3.141005],[9.735119,4.906807,1.776706,-1.858332,4.512259,-4.924460],[-9.643848,-2.600709,-8.078630,-4.674163,-7.170481,7.740006],[4.624177,-6.962698,1.656524,-1.420188,-7.323061,9.414146],[4.905777,-1.283087,-3.000855,7.775903,4.821043,-4.928464],[5.621514,-0.655084,2.716560,-4.331819,5.023484,5.825521],[-5.732328,6.038933,-1.825271,-2.269971,-3.681134,-9.842089]],[[4.983923,8.013391,2.400476,-1.653657,-9.715484,-9.807427],[2.676117,5.350883,-1.250849,3.897531,-1.280419,1.063518],[-9.011029,-8.574931,-5.150727,9.373018,1.798763,-3.644677],[-2.551128,2.486517,1.594274,3.762170,-6.251946,5.113218],[2.403672,3.444756,9.136376,-5.872189,1.935287,-2.584332],[1.716412,0.820921,-2.983598,-0.325412,6.588552,-8.287136],[3.129189,2.258739,-5.561825,-4.676784,6.034724,9.490228],[-5.097970,-3.462881,7.809410,-3.834504,8.443779,0.594115],[3.106061,-6.660542,4.778333,-8.063858,-6.581803,-0.581394],[-1.145654,5.891568,1.347788,4.525869,-9.481629,7.554963],[-3.124883,7.742298,2.824167,-1.617101,-2.995699,2.203844],[3.538222,-7.364723,0.283594,-0.360583,-9.265921,-8.110227],[-6.152084,8.983605,9.930984,-8.532334,-8.500154,4.518929],[-4.458146,5.129739,2.205985,-0.696858,-3.003296,-0.798135],[-8.809747,7.723699,-6.706719,-9.805840,5.288744,-8.518734]],[[-7.344668,3.631758,-9.396637,-8.338924,-4.955796,9.401388],[7.889811,-8.554990,-4.551686,3.244730,8.277462,6.513085],[-9.042151,-1.755712,-1.403097,0.231869,-0.709686,5.487788],[0.737675,2.174280,9.559184,9.822874,8.605127,-1.294066],[0.603641,-3.826377,2.552112,-1.082564,5.884031,3.479266],[0.932103,-2.329925,9.281781,-1.575779,7.352438,-0.989009],[-2.281995,4.796354,8.027103,-4.467353,-2.293480,0.546793],[-6.734057,5.268669,5.864587,0.882736,6.394079,-9.902964],[-7.057215,-3.305865,-8.151981,-3.274615,-5.834407,-9.249984],[-8.962509,-3.503402,9.265961,-7.185290,-9.487165,8.912526],[-4.334736,-6.246906,-5.103455,6.924505,-9.793442,8.865035],[-2.041687,0.248698,8.230234,3.955738,-3.821337,-1.125971],[9.032405,-3.630929,4.156496,1.611394,-5.638024,6.810555],[-3.050170,0.933687,-7.872338,-2.469026,3.884597,-5.195084],[8.952981,-6.429588,5.524545,-2.346068,4.692608,-3.846970]]], dtype = "float64")#candidate|2732|(14, 15, 6)|const|float64
bop_2733 = relay.logical_or(call_2721.astype('bool'), const_2732.astype('bool')) # shape=(14, 15, 6)
bop_2736 = relay.logical_or(call_2722.astype('bool'), const_2732.astype('bool')) # shape=(14, 15, 6)
bop_2738 = relay.multiply(call_2721.astype('float32'), const_2732.astype('float32')) # shape=(14, 15, 6)
bop_2741 = relay.multiply(call_2722.astype('float32'), const_2732.astype('float32')) # shape=(14, 15, 6)
func_2704_call = mod.get_global_var('func_2704')
func_2706_call = mutated_mod.get_global_var('func_2706')
call_2743 = relay.TupleGetItem(func_2704_call(), 1)
call_2744 = relay.TupleGetItem(func_2706_call(), 1)
bop_2745 = relay.add(call_2719.astype('int64'), bop_2733.astype('int64')) # shape=(14, 15, 6)
bop_2748 = relay.add(call_2720.astype('int64'), bop_2736.astype('int64')) # shape=(14, 15, 6)
uop_2749 = relay.log10(bop_2733.astype('float64')) # shape=(14, 15, 6)
uop_2751 = relay.log10(bop_2736.astype('float64')) # shape=(14, 15, 6)
func_2119_call = mod.get_global_var('func_2119')
func_2123_call = mutated_mod.get_global_var('func_2123')
var_2757 = relay.var("var_2757", dtype = "float64", shape = (1872,))#candidate|2757|(1872,)|var|float64
call_2756 = relay.TupleGetItem(func_2119_call(relay.reshape(var_2757.astype('float64'), [9, 13, 16]), relay.reshape(var_2757.astype('float64'), [9, 13, 16]), ), 1)
call_2758 = relay.TupleGetItem(func_2123_call(relay.reshape(var_2757.astype('float64'), [9, 13, 16]), relay.reshape(var_2757.astype('float64'), [9, 13, 16]), ), 1)
bop_2768 = relay.bitwise_or(uop_2749.astype('int32'), call_2743.astype('int32')) # shape=(14, 15, 6)
bop_2771 = relay.bitwise_or(uop_2751.astype('int32'), call_2744.astype('int32')) # shape=(14, 15, 6)
func_1394_call = mod.get_global_var('func_1394')
func_1399_call = mutated_mod.get_global_var('func_1399')
const_2776 = relay.const([4,-9,-8,1,-9,3,-8,-5,3,-10,-7,-8,6,5,8,3,7,6,10,9,4,-1,4,3,-6,-2,-5,5,-2,9,10,3,5,-5,7,-4,-9,5,1,-1,-10,9,7,-9,2,-10,9,2,-5,10,-2,-2,9,4,-5,6,-10,-1,7,-8,7,1,-3,1,-1,-9,5,-4,9,4,-5,-1,5,3,-3,1,1,7,7,4,-1,1,-4,-2,-4,-7,9,5,-2,-6,-3,7,10,-10,4,-5,4,-2,-4,1,3,9,8,5,-4,4,-7,1,-5,-4,-2,-7,-8,5,5,10,-6,9,-4,-1,-7,-8,-4,-4,10,1,9,-2,-6,9,-5,-7,-7,-2,-5,1,-7,-6,8,1,8,-3,7,5,2,-3,2,-7,-10,-2,-1,-5,-2,1,-3,-1,2,9,7,3,6,10,7,9,-6,2,-5,-10,-10,-10,-1,5,3,5,5,-3,3,3,1,-9,4,-8,10,10,7,4,-9,3,2,3,-5,2,-10,-10,-6,7,2,-3,-3,2,-10,-8,-7,10,7,9,-2,2,6,2,-10,-4,-6,5,-9,-9,-7,-8,8,-4,-5,-8,3,-8,1,3,-1,-6,-5,6,1,-2,2,3,-2,-4,-1,4,2,3,6,-7,-2,-5,5,10,7,-4,-2,9,-3,10,9,8,-8,5], dtype = "uint8")#candidate|2776|(256,)|const|uint8
var_2777 = relay.var("var_2777", dtype = "uint8", shape = (1280,))#candidate|2777|(1280,)|var|uint8
var_2778 = relay.var("var_2778", dtype = "float32", shape = (756,))#candidate|2778|(756,)|var|float32
var_2779 = relay.var("var_2779", dtype = "float32", shape = (54,))#candidate|2779|(54,)|var|float32
call_2775 = relay.TupleGetItem(func_1394_call(relay.reshape(const_2776.astype('uint8'), [256,]), relay.reshape(var_2777.astype('uint8'), [640, 2]), relay.reshape(var_2778.astype('float32'), [756,]), relay.reshape(var_2779.astype('float32'), [54,]), ), 7)
call_2780 = relay.TupleGetItem(func_1399_call(relay.reshape(const_2776.astype('uint8'), [256,]), relay.reshape(var_2777.astype('uint8'), [640, 2]), relay.reshape(var_2778.astype('float32'), [756,]), relay.reshape(var_2779.astype('float32'), [54,]), ), 7)
output = relay.Tuple([bop_2738,bop_2745,call_2756,var_2757,bop_2768,call_2775,const_2776,var_2777,var_2778,var_2779,])
output2 = relay.Tuple([bop_2741,bop_2748,call_2758,var_2757,bop_2771,call_2780,const_2776,var_2777,var_2778,var_2779,])
func_2783 = relay.Function([var_2757,var_2777,var_2778,var_2779,], output)
mod['func_2783'] = func_2783
mod = relay.transform.InferType()(mod)
var_2784 = relay.var("var_2784", dtype = "float64", shape = (1872,))#candidate|2784|(1872,)|var|float64
var_2785 = relay.var("var_2785", dtype = "uint8", shape = (1280,))#candidate|2785|(1280,)|var|uint8
var_2786 = relay.var("var_2786", dtype = "float32", shape = (756,))#candidate|2786|(756,)|var|float32
var_2787 = relay.var("var_2787", dtype = "float32", shape = (54,))#candidate|2787|(54,)|var|float32
output = func_2783(var_2784,var_2785,var_2786,var_2787,)
func_2788 = relay.Function([var_2784,var_2785,var_2786,var_2787,], output)
mutated_mod['func_2788'] = func_2788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2635_call = mod.get_global_var('func_2635')
func_2637_call = mutated_mod.get_global_var('func_2637')
call_2843 = func_2635_call()
call_2844 = func_2635_call()
uop_2864 = relay.asin(call_2843.astype('float64')) # shape=(1, 15, 6)
uop_2866 = relay.asin(call_2844.astype('float64')) # shape=(1, 15, 6)
func_2214_call = mod.get_global_var('func_2214')
func_2218_call = mutated_mod.get_global_var('func_2218')
var_2875 = relay.var("var_2875", dtype = "int32", shape = ())#candidate|2875|()|var|int32
var_2876 = relay.var("var_2876", dtype = "int32", shape = (60,))#candidate|2876|(60,)|var|int32
call_2874 = func_2214_call(relay.reshape(var_2875.astype('int32'), []), relay.reshape(var_2876.astype('int32'), [3, 4, 5]), )
call_2877 = func_2214_call(relay.reshape(var_2875.astype('int32'), []), relay.reshape(var_2876.astype('int32'), [3, 4, 5]), )
output = relay.Tuple([uop_2864,call_2874,var_2875,var_2876,])
output2 = relay.Tuple([uop_2866,call_2877,var_2875,var_2876,])
func_2878 = relay.Function([var_2875,var_2876,], output)
mod['func_2878'] = func_2878
mod = relay.transform.InferType()(mod)
mutated_mod['func_2878'] = func_2878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2878_call = mutated_mod.get_global_var('func_2878')
var_2880 = relay.var("var_2880", dtype = "int32", shape = ())#candidate|2880|()|var|int32
var_2881 = relay.var("var_2881", dtype = "int32", shape = (60,))#candidate|2881|(60,)|var|int32
call_2879 = func_2878_call(var_2880,var_2881,)
output = call_2879
func_2882 = relay.Function([var_2880,var_2881,], output)
mutated_mod['func_2882'] = func_2882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2594_call = mod.get_global_var('func_2594')
func_2596_call = mutated_mod.get_global_var('func_2596')
call_2938 = relay.TupleGetItem(func_2594_call(), 0)
call_2939 = relay.TupleGetItem(func_2596_call(), 0)
output = relay.Tuple([call_2938,])
output2 = relay.Tuple([call_2939,])
func_2940 = relay.Function([], output)
mod['func_2940'] = func_2940
mod = relay.transform.InferType()(mod)
output = func_2940()
func_2941 = relay.Function([], output)
mutated_mod['func_2941'] = func_2941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2962 = relay.var("var_2962", dtype = "float64", shape = (3, 4, 4))#candidate|2962|(3, 4, 4)|var|float64
uop_2963 = relay.cos(var_2962.astype('float64')) # shape=(3, 4, 4)
func_2510_call = mod.get_global_var('func_2510')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_2987 = func_2510_call()
call_2988 = func_2510_call()
bop_2992 = relay.greater(uop_2963.astype('bool'), relay.reshape(var_2962.astype('bool'), relay.shape_of(uop_2963))) # shape=(3, 4, 4)
output = relay.Tuple([call_2987,bop_2992,])
output2 = relay.Tuple([call_2988,bop_2992,])
func_2995 = relay.Function([var_2962,], output)
mod['func_2995'] = func_2995
mod = relay.transform.InferType()(mod)
mutated_mod['func_2995'] = func_2995
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2996 = relay.var("var_2996", dtype = "float64", shape = (3, 4, 4))#candidate|2996|(3, 4, 4)|var|float64
func_2995_call = mutated_mod.get_global_var('func_2995')
call_2997 = func_2995_call(var_2996)
output = call_2997
func_2998 = relay.Function([var_2996], output)
mutated_mod['func_2998'] = func_2998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_3006 = func_2510_call()
call_3007 = func_2510_call()
func_2878_call = mod.get_global_var('func_2878')
func_2882_call = mutated_mod.get_global_var('func_2882')
const_3016 = relay.const(-1, dtype = "int32")#candidate|3016|()|const|int32
const_3017 = relay.const([2,10,4,-6,9,1,5,1,8,3,2,10,-6,8,-4,9,4,9,9,4,-3,10,-6,6,-6,10,4,-2,9,-10,-4,10,6,7,-5,5,-5,8,7,-7,-2,-3,-7,9,-6,8,7,9,7,3,6,-10,5,6,3,-5,10,-3,2,2], dtype = "int32")#candidate|3017|(60,)|const|int32
call_3015 = relay.TupleGetItem(func_2878_call(relay.reshape(const_3016.astype('int32'), []), relay.reshape(const_3017.astype('int32'), [60,]), ), 0)
call_3018 = relay.TupleGetItem(func_2882_call(relay.reshape(const_3016.astype('int32'), []), relay.reshape(const_3017.astype('int32'), [60,]), ), 0)
func_1854_call = mod.get_global_var('func_1854')
func_1857_call = mutated_mod.get_global_var('func_1857')
var_3024 = relay.var("var_3024", dtype = "float64", shape = (480,))#candidate|3024|(480,)|var|float64
call_3023 = relay.TupleGetItem(func_1854_call(relay.reshape(var_3024.astype('float64'), [240, 2])), 1)
call_3025 = relay.TupleGetItem(func_1857_call(relay.reshape(var_3024.astype('float64'), [240, 2])), 1)
func_2174_call = mod.get_global_var('func_2174')
func_2175_call = mutated_mod.get_global_var('func_2175')
call_3028 = func_2174_call()
call_3029 = func_2174_call()
func_2878_call = mod.get_global_var('func_2878')
func_2882_call = mutated_mod.get_global_var('func_2882')
call_3037 = relay.TupleGetItem(func_2878_call(relay.reshape(const_3016.astype('int32'), []), relay.reshape(const_3017.astype('int32'), [60,]), ), 2)
call_3038 = relay.TupleGetItem(func_2882_call(relay.reshape(const_3016.astype('int32'), []), relay.reshape(const_3017.astype('int32'), [60,]), ), 2)
func_1394_call = mod.get_global_var('func_1394')
func_1399_call = mutated_mod.get_global_var('func_1399')
const_3041 = relay.const([9,-1,8,6,4,10,8,-4,4,7,10,3,-2,2,-5,-2,-10,1,8,5,-5,-9,4,3,3,-7,10,1,-3,5,-2,10,1,-2,-1,1,10,10,1,4,-7,-7,3,9,10,1,3,6,5,3,2,3,-1,-10,8,8,-4,-2,-2,-2,5,8,5,1,9,5,9,-5,-2,-7,-8,-6,10,1,1,6,-7,5,8,1,2,-1,5,-3,3,-7,-5,-5,-1,8,-10,-9,1,-10,-9,-6,-6,-4,-5,5,-9,10,5,10,4,9,4,-2,9,-4,10,1,-7,8,-4,-1,-7,-8,6,10,5,3,-7,-4,6,7,8,-3,-3,-8,-6,-1,-9,3,6,-5,-5,10,-5,10,-2,7,-5,4,3,-8,-10,10,-7,-7,10,-3,4,7,-10,1,4,-10,10,8,4,4,4,-5,9,-3,8,4,-1,-9,5,-1,-10,7,-4,5,2,4,-3,6,-5,-3,-3,2,7,3,3,-1,6,3,5,-8,7,-3,-4,-4,-6,-1,3,4,-7,2,-2,3,2,-8,5,-6,-1,-7,-7,-4,-10,-5,8,-5,-6,-7,1,-8,7,10,3,8,-6,-9,-6,8,-7,8,-2,-10,-9,9,-6,-3,-5,7,-10,6,-10,10,7,9,-3,-9,2,-5,6,-1,3,5,8,9,-9,-5], dtype = "uint8")#candidate|3041|(256,)|const|uint8
const_3042 = relay.const([4,-5,10,-1,-4,8,-4,-3,7,8,3,-6,-7,7,-3,-8,-10,1,2,-9,-5,-4,-1,3,-3,10,10,-10,10,-8,4,1,9,-6,-5,7,-1,-8,-8,-8,3,-6,-3,-9,-4,7,3,1,-3,-2,1,-6,-10,5,-7,-6,-1,5,-9,-7,9,10,-6,-3,10,-5,5,-5,8,-1,-3,7,-9,7,7,10,10,8,-3,-4,8,-5,-3,-8,-2,-7,-7,-8,9,6,-1,-1,-6,-6,-2,5,-10,-5,-3,-3,3,10,8,-8,-3,-2,1,-5,4,10,-4,8,-5,8,-5,1,-2,-9,8,7,4,-8,-3,-3,-8,3,-6,-7,-1,9,5,3,2,8,-1,-5,-6,-9,-8,6,-5,-8,-9,4,-10,-7,6,4,3,-9,-9,-9,-7,-2,1,3,-6,-9,-5,-6,-7,-2,2,-10,-8,-9,-3,-1,-7,7,2,5,10,2,6,-4,10,5,-2,5,6,-6,-4,-1,-10,8,10,-10,7,10,2,8,10,2,-10,1,-2,-5,1,-7,6,-5,-1,1,-8,3,4,2,7,-7,2,1,2,2,3,8,-9,10,-7,9,-1,-5,-8,-1,10,1,6,8,9,-5,3,4,6,3,-4,-7,9,-1,7,-1,2,1,-4,-7,-2,5,-6,7,-2,3,5,10,2,-10,-3,-9,2,2,10,-1,2,8,-7,-1,-7,5,-6,7,-8,8,7,6,-7,7,8,10,6,-9,4,3,4,-5,-5,-8,-9,-4,-6,-10,-1,-10,7,-10,-7,7,10,-3,10,-7,-8,9,3,-6,6,-4,2,-5,-2,-3,7,-10,-2,3,1,-8,-7,8,4,1,-1,6,-6,4,9,9,-9,-3,2,-2,6,-3,9,-2,-7,-3,-7,4,4,-3,5,-7,3,-5,7,-9,7,5,3,-3,10,1,-6,3,2,1,2,-2,-9,1,4,9,3,-1,3,1,9,3,4,5,3,-3,-5,9,4,2,-1,-9,-8,5,4,5,5,-1,5,6,2,-3,4,5,-4,-6,-1,-3,7,8,-1,7,2,-6,-5,-5,2,6,-1,-6,9,2,-6,6,-1,9,9,2,5,8,-2,7,-10,2,5,6,9,-3,-1,2,-5,-5,-6,-8,7,-1,9,-3,-2,-2,-2,-2,-6,-7,5,-2,8,-7,-6,-5,10,-10,-5,-2,7,-3,-4,-1,1,-1,7,7,1,-2,-10,8,5,3,-10,-7,8,-7,7,5,5,-4,-7,2,6,5,-2,-8,-10,9,5,-8,-7,7,10,-4,8,-9,-9,-5,4,-9,-2,7,7,3,-3,-4,3,-6,3,-9,-8,-10,-9,9,4,4,-6,-1,7,4,-4,-4,-2,-1,2,8,8,4,2,5,-3,5,9,4,-9,-8,1,-9,4,-9,-9,4,-4,9,4,-3,2,-10,-3,7,-7,2,-8,-2,-10,9,-8,9,3,-10,-1,-8,3,1,4,-6,4,-10,9,-7,3,-8,-10,2,4,-2,7,5,-10,5,-6,-9,-9,7,1,6,-9,-4,1,2,-10,-10,6,6,-2,4,-2,-10,-9,8,10,-3,-10,8,5,-1,-6,-1,-6,2,9,-6,6,3,-3,-7,-7,-4,9,2,-3,8,-4,6,7,-8,2,9,-1,5,-3,9,-7,9,-4,-2,6,8,1,7,-10,6,8,1,-6,-3,1,1,4,5,-2,7,-9,5,-7,-5,7,10,-7,-5,9,3,2,9,-5,8,-3,5,-7,9,-5,2,8,-9,5,9,2,4,-8,-3,-7,-2,5,-10,2,-8,-6,10,4,-10,-1,-1,-10,10,7,-3,-6,5,-6,4,6,4,-4,-7,-4,-7,5,2,2,5,7,4,-5,-5,-3,7,-2,-3,-5,-5,7,-6,8,8,-9,-9,-1,8,-1,-6,-1,-8,-6,-9,1,-2,4,3,-3,5,-5,6,9,-3,6,-7,-2,10,-5,-9,-3,-9,8,-2,-4,-2,-1,-5,6,-1,7,1,-2,-7,2,-5,6,3,-5,-4,-9,-8,-9,-1,10,7,-9,-7,1,-9,-10,7,8,10,4,2,4,-4,-2,-8,-6,-10,-3,-5,8,5,-8,-4,2,-10,9,10,4,6,10,10,9,10,-6,-4,8,-4,4,3,-3,-4,6,8,9,-6,8,-6,8,8,-10,-10,-4,5,4,7,2,2,7,-8,3,-7,1,-7,9,3,-8,8,-9,3,2,3,-9,-9,-4,-5,2,8,-5,-2,-2,2,10,-3,4,4,-4,-9,1,-1,7,-2,8,-2,-6,-5,-1,-8,8,2,7,-7,3,6,-6,-1,-5,-1,4,3,-10,-8,-7,2,10,-7,-9,10,10,10,-4,-10,3,-1,-7,-6,-5,7,-5,-7,-4,1,-1,-7,-8,-9,-7,1,-2,-6,-9,7,-9,5,-5,8,-9,3,2,10,-9,4,8,8,10,-1,8,-10,-2,10,1,7,9,-9,1,2,-10,8,4,10,-9,10,6,-4,-8,8,-4,-9,-4,-5,10,7,-6,10,2,-3,-10,8,-6,6,7,-3,-8,6,-3,-9,10,4,2,7,5,-4,-4,5,-7,4,-5,-6,1,5,5,-6,-1,-3,8,8,10,10,-6,-6,8,-6,-10,5,4,-5,5,4,-4,10,6,7,2,2,4,1,-1,-4,9,10,1,-2,7,-4,-2,-4,2,4,9,-10,-7,5,-7,-7,-8,2,4,-6,10,3,2,-10,-9,8,4,4,-8,9,8,6,7,-3,-1,-4,-9,-3,-6,-7,1,4,-3,9,7,-1,-6,-1,2,-5,-5,4,-6,8,3,-7,-3,2,-1,-1,8,5,8,8,2,-5,-2,4,7,10,-9,4,9,-10,-6,-9,3,-10,-2,1,2,10,4,-2,5,-10,-8,-8,2,-5,7,3,-2,10,-1,-5,-4,9,-10,-8,-2,1,5,-6,7,5,9,-5,3,2,-6,-9,1,-10,-8,8,-9,1,-6,2,8,9,-7,8,-8,4,-7,-4,-10,1,-5,7,6,9,-4,-7,-8,2,1,-5,-10,2,-1,-6,-3,8,-4,3,4,-3,-2,-5,-7,8,-6,-6,4,-4,6,-8,6,8,-3,-9,-10,-7,3,5,-8,-7,-7,-3,-10,-8,8,7,3,4,-6,-3,5,1,4,9,8,-8,-6,-8,1,-5,1,3,-7,10,-1,-2,-4,6,8,2,9,10,5,4,-3,5,10,10,4,-1,-4,1,5,-8,3,8,9,7,-6,-10,-9,5,-2,9,2,2,4,-3,-3,1,-10,7,-6,5,-7,-3,9,-8,-10,8,-8,9,6,-10,-5,-6,-9,-6,7,-9,8,1,-9,-10,-5,-2,-3,-4,4,-9,-6,-4,7,-1,3,9,3,1,-8,-2,3,7,-6,-4,-6,1,-7,-6], dtype = "uint8")#candidate|3042|(1280,)|const|uint8
const_3043 = relay.const([[9.473489],[8.910849],[0.409694],[6.369863],[5.427931],[9.255696],[5.686417],[-0.911448],[-9.075638],[3.956953],[2.164073],[7.051598],[2.059083],[-2.573706],[4.396632],[-8.378874],[3.746166],[-4.225204],[0.206928],[-9.442942],[6.031374],[7.467600],[8.804849],[4.587994],[9.177830],[-4.933918],[-5.740300],[-4.580088],[-3.555684],[8.506435],[-5.457969],[8.923756],[8.183275],[-9.043772],[0.893879],[-0.972216],[-1.102093],[-1.127767],[4.944751],[3.349229],[-8.345175],[7.568453],[2.888612],[-8.220562],[-9.973618],[1.310023],[4.730777],[6.527423],[-1.987213],[-9.957829],[-0.890057],[-2.857127],[-0.676574],[-1.115939],[-7.720602],[-2.981950],[-7.277822],[4.850113],[-7.818153],[2.696009],[-9.684202],[7.818783],[9.455940],[-7.675139],[8.814241],[-8.332948],[1.409133],[-3.146574],[0.154812],[9.682776],[0.793305],[-0.166493],[-0.620046],[5.451339],[5.322332],[9.595478],[-6.233642],[-1.982988],[7.206481],[3.788956],[7.397547],[0.548715],[0.936131],[-2.549007],[-7.391199],[-7.708404],[2.954225],[7.277118],[2.722774],[-9.992022],[-6.388696],[-1.411928],[8.859747],[-0.143707],[9.850586],[3.447734],[2.968874],[-0.765494],[-9.531086],[8.858873],[-3.342056],[-3.123955],[-4.898078],[2.269264],[0.282779],[8.792478],[-2.502410],[-3.502103],[-7.962753],[-6.991351],[-6.726017],[-6.590645],[-0.763012],[-0.981020],[0.722616],[-9.085584],[-5.854852],[6.050400],[-6.994675],[-4.463796],[3.962122],[4.109393],[6.562321],[7.408585],[7.577088],[9.866577],[0.633752],[2.859170],[-3.416665],[-2.214022],[-0.779813],[-8.362598],[-0.854207],[9.945768],[-4.590897],[-8.433441],[1.191210],[3.168100],[0.778051],[-7.407534],[3.556895],[-6.873337],[1.145619],[-2.782342],[-0.483778],[8.724776],[6.555761],[7.034517],[-8.563410],[8.925260],[-3.574657],[-2.381128],[3.279892],[-4.678196],[-8.541817],[2.612536],[-3.139764],[-9.489549],[-9.855872],[-4.019692],[9.984857],[4.050131],[3.957363],[-3.913675],[4.203245],[-6.771584],[1.086569],[-0.355742],[1.349613],[0.851535],[5.118668],[5.343515],[5.450222],[-3.943902],[-2.826276],[-4.387300],[-1.849345],[6.625856],[-1.442449],[6.914176],[2.386240],[9.843251],[-6.991530],[7.046778],[-0.787161],[2.146128],[-5.862994],[4.361755],[-2.734538],[7.505648],[-1.293483],[0.319459],[6.272294],[-8.550401],[-9.017445],[8.224426],[-4.104421],[8.924487],[-1.104119],[-1.176666],[7.710610],[2.477650],[-0.170414],[8.990043],[-2.484968],[0.042225],[-0.257016],[4.395795],[2.039610],[0.514895],[-9.385467],[4.684508],[4.367895],[7.757103],[-5.404087],[-4.003126],[-3.316865],[9.194325],[1.444027],[7.136030],[5.397537],[-2.760506],[9.869156],[3.639862],[-9.829986],[5.787692],[7.836875],[1.519300],[7.748833],[2.399767],[-7.794882],[0.784715],[3.644370],[4.781110],[-4.839004],[-7.002418],[7.713824],[2.679057],[-4.223515],[-4.281057],[-4.026262],[2.118353],[-5.864693],[-1.600925],[-4.336511],[2.137118],[-6.912905],[6.451006],[5.644193],[-6.899787],[1.018958],[2.116225],[7.572565],[-7.956503],[1.875547],[-8.698819],[-1.156111],[-9.370754],[-0.327204],[-9.132830],[-4.897526],[5.212958],[-8.476628],[-6.615400],[7.953480],[8.411482],[4.535010],[-8.576680],[-1.688823],[-0.198025],[5.381522],[4.990441],[4.599578],[-5.998945],[-4.199633],[-9.742606],[3.751840],[8.406023],[-9.938590],[0.059324],[-3.534097],[-6.086811],[-4.260244],[9.513793],[6.656721],[-7.876573],[-8.540260],[-0.616161],[0.204845],[-4.991331],[1.701040],[-2.653623],[-7.104194],[4.169574],[9.807539],[1.045043],[4.950959],[2.425233],[-5.609011],[-5.208675],[2.710283],[-7.141143],[-4.532854],[5.209156],[8.054836],[-5.981345],[-8.334728],[0.471680],[-1.232370],[3.756350],[-3.581925],[-1.551992],[-7.993466],[6.705805],[-0.173432],[2.321875],[-0.466564],[1.928240],[-0.725286],[5.935311],[-4.045901],[5.778186],[-4.665178],[-3.907656],[7.741211],[2.171478],[-4.908951],[7.783060],[5.391749],[1.216472],[3.359349],[0.819120],[-6.560362],[-2.947081],[1.218812],[-0.837584],[5.999966],[-6.434120],[7.022465],[0.052962],[-1.539335],[-9.936645],[-5.706377],[-0.407715],[-5.770677],[0.843580],[-7.911889],[4.261080],[6.751484],[7.651786],[0.756493],[4.361434],[3.328063],[3.079475],[-3.281473],[4.316126],[2.639260],[8.151222],[-9.439394],[6.849532],[5.289538],[-1.244722],[-2.324472],[-9.866485],[5.244513],[-7.494412],[2.964840],[-3.402615],[-3.036187],[7.212797],[-0.069260],[7.089816],[-0.750100],[9.721930],[-7.867011],[4.095617],[1.193155],[8.680171],[-1.375747],[2.330013],[-8.203859],[-2.630115],[5.696543],[-9.498152],[-4.303413],[-6.348192],[6.663546],[-6.240012],[-9.706066],[-5.758970],[9.486380],[-2.181941],[9.917787],[-7.183471],[6.720688],[7.403375],[8.053776],[-3.580404],[-7.982257],[-5.943065],[-2.006727],[0.125439],[9.650303],[-0.913751],[4.039138],[-7.351282],[-5.812332],[1.140602],[8.328197],[9.933186],[-5.922581],[-2.649437],[6.626679],[-3.927702],[1.076781],[-0.657304],[-2.797237],[8.415342],[-8.480161],[1.534965],[-3.890130],[-6.159285],[2.792934],[-1.065432],[9.333146],[6.884694],[7.458342],[1.766712],[-2.887384],[-0.544277],[6.171540],[-5.158809],[2.004077],[4.483660],[1.410099],[5.025028],[-7.821274],[-6.031239],[-2.775521],[-8.463626],[3.891101],[8.254210],[8.364605],[8.052601],[-4.132958],[-8.872534],[-2.892175],[8.822849],[-2.926079],[3.111168],[-4.781637],[-5.150711],[-9.293728],[-2.746375],[4.816424],[-5.281046],[-3.507874],[9.310893],[6.679998],[-5.320214],[8.360405],[6.111160],[1.182777],[6.925093],[9.963976],[2.570940],[3.926116],[-8.204301],[-3.906538],[-4.326273],[-8.903431],[-4.373649],[-8.422031],[-6.187131],[-1.806882],[-3.514786],[4.430608],[-7.208711],[-6.355658],[5.908606],[-5.581547],[1.959978],[-4.258592],[-4.799663],[-3.606789],[-8.952261],[7.992657],[-9.493104],[2.600004],[2.130577],[8.717269],[8.101829],[7.529880],[7.756830],[5.552342],[6.533081],[1.996877],[2.500581],[2.642733],[-1.257251],[1.245061],[-5.553837],[-0.273905],[-3.427453],[8.640378],[2.057777],[4.463601],[-9.448570],[-3.091905],[0.190733],[-4.002501],[-1.972322],[9.376336],[2.678988],[5.487224],[0.477926],[-9.468120],[7.074103],[-9.426844],[-8.919104],[-0.082211],[-2.945694],[-4.165986],[-9.480974],[-9.289185],[-8.782636],[5.478013],[-9.723381],[0.672084],[6.800006],[8.057263],[3.373436],[-5.128694],[-0.413851],[-6.998522],[-8.854281],[4.267927],[5.073808],[5.546693],[-4.427869],[9.520341],[-9.248951],[5.636521],[1.910243],[-3.038388],[9.765103],[0.351193],[-8.973331],[-2.417513],[-2.131324],[2.317237],[2.357098],[4.921730],[5.269442],[-6.720953],[-6.495938],[-6.358125],[-4.488487],[9.445377],[-9.065820],[-9.449038],[-5.315064],[-3.249860],[8.916691],[7.142267],[-6.763125],[0.397980],[7.624873],[-0.339492],[7.703845],[9.816562],[-4.486354],[0.539365],[1.154967],[-7.792122],[-5.166818],[-3.385148],[7.658171],[2.211757],[6.036163],[-5.412982],[-4.087921],[9.126806],[5.884972],[-4.449180],[-3.544124],[-5.424816],[6.136013],[-7.673388],[2.490526],[7.667573],[8.253288],[-0.834429],[-5.394477],[-2.021878],[-9.744945],[9.365094],[-6.665996],[1.692208],[-7.717273],[-1.034238],[0.609460],[1.080890],[-1.138377],[3.074801],[4.795727],[-9.892725],[-6.243049],[4.614608],[-6.001161],[-2.475352],[-4.801548],[4.397432],[-1.602166],[-0.356921],[-1.420627],[-4.696245],[-7.505851],[5.792331],[3.395854],[-2.618449],[0.557253],[3.621315],[1.579770],[-2.803545],[-7.239673],[-0.682293],[7.809225],[9.131437],[-3.598665],[-3.690076],[0.442625],[-3.799154],[3.183673],[-3.863705],[7.024177],[7.702561],[8.165290],[-2.445905],[1.224179],[8.226834],[-6.239399],[-0.563862],[3.096652],[2.772957],[-7.781097],[8.557764],[-2.904719],[8.480735],[3.551786],[-2.770918],[-8.587496],[7.465255],[9.945168],[-7.749970],[-2.325431],[-4.968272],[7.090028],[-7.365352],[7.209687],[4.398886],[-7.534467],[5.611367],[-5.801697],[-9.311484],[-7.046606],[-2.803529],[-4.037270],[1.651836],[-0.315515],[-1.301511],[2.579084],[2.018325],[1.554117],[7.170529],[1.583624],[-4.083051],[0.087445],[0.162349],[-8.034966],[2.902614],[-2.160352],[5.360226],[3.058332],[-3.227382],[-6.102947],[9.884547],[-1.849044],[7.137404],[-1.530166],[-5.896238],[0.343918],[5.571218],[-6.398603],[-2.819945],[-5.644000],[9.758262],[-2.663997],[5.258798],[2.808153],[9.151829],[-8.810181],[3.326935],[2.724197],[2.239362],[-9.136521],[3.102857],[-1.966828],[-3.627133],[8.154332],[-5.220833],[5.652360],[4.213729],[-8.669364],[1.922956],[-8.412446],[-2.228411],[0.314349],[1.729218],[-7.563629],[3.468175],[-6.626951],[-4.504374],[8.792314],[2.689328],[2.756249],[5.358275],[-6.338353],[-2.381010],[1.457432],[-8.797750],[-3.130354],[2.181814],[9.878872],[-9.382576],[5.635154],[-4.592847],[2.796216],[-2.956168],[6.446608],[0.299303],[7.405478],[9.498186],[9.585133],[7.647914],[-4.073446],[1.960842],[-3.545996],[-4.007350],[8.095106],[9.898096],[-3.325425],[0.259161],[-2.543318],[9.504265],[6.063029]], dtype = "float32")#candidate|3043|(756, 1)|const|float32
var_3044 = relay.var("var_3044", dtype = "float32", shape = (54,))#candidate|3044|(54,)|var|float32
call_3040 = relay.TupleGetItem(func_1394_call(relay.reshape(const_3041.astype('uint8'), [256,]), relay.reshape(const_3042.astype('uint8'), [640, 2]), relay.reshape(const_3043.astype('float32'), [756,]), relay.reshape(var_3044.astype('float32'), [54,]), ), 1)
call_3045 = relay.TupleGetItem(func_1399_call(relay.reshape(const_3041.astype('uint8'), [256,]), relay.reshape(const_3042.astype('uint8'), [640, 2]), relay.reshape(const_3043.astype('float32'), [756,]), relay.reshape(var_3044.astype('float32'), [54,]), ), 1)
func_2419_call = mod.get_global_var('func_2419')
func_2422_call = mutated_mod.get_global_var('func_2422')
const_3047 = relay.const([[-3,7,5,5,1,-10,1,-8,-10,-2,6,8,-7,-4,2,2,-4,-1,8,1,-10,-2,6,6,6,-4,6,-2,10,-1,-2,10,-4,9,9,-1,-2,9,-4,-5,3,-1,-3,1,10,8,6,8,-10,-2,-6,9,-8,7,5,10,-1,-4,-5,10,6,-7,-5,-10,1,-6,-5,-6,-5,-4,-3,6,-7,-8,5,8,-3,4,10,-5,-8,-10,9,-5,-9,5,-5,-5,3,-7,-1,-10,9,-4,-7,-2,3,-7,9,7,5,1,-4,4,-10,-8,3,-7],[3,3,-2,5,8,8,-8,-7,-6,2,-5,-9,-5,-5,-6,-5,4,9,5,-1,-7,-2,3,-7,8,-1,6,-7,9,-1,4,2,-4,-4,-4,-1,6,-8,-5,-10,-4,5,2,-1,5,4,10,9,-8,2,-10,4,6,-2,9,-3,2,-3,1,-5,-7,-8,-8,10,10,9,5,-5,-7,2,-9,-9,3,9,-7,2,5,1,-7,-9,-3,6,-4,-6,7,7,3,1,9,1,4,9,3,3,1,6,2,9,-2,7,5,7,1,5,8,5,1,-1],[2,-4,-8,4,-10,-4,-9,2,-6,-1,7,-6,-4,-6,2,1,1,-6,4,9,-4,10,5,-9,-1,9,-8,2,5,-9,5,-1,-5,-5,1,-7,-8,-10,7,5,10,7,-8,-2,-8,10,-10,2,-9,6,-3,-5,-8,-8,-4,4,-9,-4,3,-10,8,6,10,-5,7,7,2,4,8,-4,5,10,10,-10,1,-6,7,-9,4,-6,-3,2,6,5,8,-8,-1,8,4,6,8,-6,-8,4,9,10,2,9,-9,-5,8,-9,-4,10,-5,-5,10,9],[-8,-7,-10,1,10,3,-8,6,2,7,-4,-5,-5,1,-4,3,-3,1,9,9,-5,9,-1,-1,2,-10,-5,5,-5,-5,-9,1,9,7,-5,9,9,3,-5,-2,2,-3,-6,9,7,10,-2,-7,-4,-3,1,7,10,-1,-4,-3,-4,5,5,3,8,9,6,-5,2,-9,7,-4,-8,3,-7,-8,3,3,7,-1,1,5,5,10,-5,2,-7,-1,1,-8,-2,-1,10,-4,-4,-2,-4,4,8,-9,-5,6,-9,-8,5,-1,2,2,10,1,-1,-8]], dtype = "uint8")#candidate|3047|(4, 108)|const|uint8
call_3046 = func_2419_call(relay.reshape(const_3047.astype('uint8'), [6, 9, 8]))
call_3048 = func_2419_call(relay.reshape(const_3047.astype('uint8'), [6, 9, 8]))
func_1854_call = mod.get_global_var('func_1854')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_3051 = relay.TupleGetItem(func_1854_call(relay.reshape(call_3040.astype('float64'), [240, 2])), 1)
call_3052 = relay.TupleGetItem(func_1857_call(relay.reshape(call_3040.astype('float64'), [240, 2])), 1)
func_2377_call = mod.get_global_var('func_2377')
func_2379_call = mutated_mod.get_global_var('func_2379')
call_3059 = func_2377_call()
call_3060 = func_2377_call()
output = relay.Tuple([call_3006,call_3015,const_3016,const_3017,call_3023,var_3024,call_3028,call_3037,call_3040,const_3041,const_3042,const_3043,var_3044,call_3046,const_3047,call_3051,call_3059,])
output2 = relay.Tuple([call_3007,call_3018,const_3016,const_3017,call_3025,var_3024,call_3029,call_3038,call_3045,const_3041,const_3042,const_3043,var_3044,call_3048,const_3047,call_3052,call_3060,])
func_3065 = relay.Function([var_3024,var_3044,], output)
mod['func_3065'] = func_3065
mod = relay.transform.InferType()(mod)
mutated_mod['func_3065'] = func_3065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3065_call = mutated_mod.get_global_var('func_3065')
var_3067 = relay.var("var_3067", dtype = "float64", shape = (480,))#candidate|3067|(480,)|var|float64
var_3068 = relay.var("var_3068", dtype = "float32", shape = (54,))#candidate|3068|(54,)|var|float32
call_3066 = func_3065_call(var_3067,var_3068,)
output = call_3066
func_3069 = relay.Function([var_3067,var_3068,], output)
mutated_mod['func_3069'] = func_3069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2174_call = mod.get_global_var('func_2174')
func_2175_call = mutated_mod.get_global_var('func_2175')
call_3078 = func_2174_call()
call_3079 = func_2174_call()
func_2995_call = mod.get_global_var('func_2995')
func_2998_call = mutated_mod.get_global_var('func_2998')
var_3094 = relay.var("var_3094", dtype = "float64", shape = (48,))#candidate|3094|(48,)|var|float64
call_3093 = relay.TupleGetItem(func_2995_call(relay.reshape(var_3094.astype('float64'), [3, 4, 4])), 0)
call_3095 = relay.TupleGetItem(func_2998_call(relay.reshape(var_3094.astype('float64'), [3, 4, 4])), 0)
func_2350_call = mod.get_global_var('func_2350')
func_2352_call = mutated_mod.get_global_var('func_2352')
call_3103 = relay.TupleGetItem(func_2350_call(), 1)
call_3104 = relay.TupleGetItem(func_2352_call(), 1)
bop_3107 = relay.left_shift(call_3093.astype('int16'), relay.reshape(call_3103.astype('int16'), relay.shape_of(call_3093))) # shape=(1, 15, 6)
bop_3110 = relay.left_shift(call_3095.astype('int16'), relay.reshape(call_3104.astype('int16'), relay.shape_of(call_3095))) # shape=(1, 15, 6)
output = relay.Tuple([call_3078,var_3094,bop_3107,])
output2 = relay.Tuple([call_3079,var_3094,bop_3110,])
func_3127 = relay.Function([var_3094,], output)
mod['func_3127'] = func_3127
mod = relay.transform.InferType()(mod)
var_3128 = relay.var("var_3128", dtype = "float64", shape = (48,))#candidate|3128|(48,)|var|float64
output = func_3127(var_3128)
func_3129 = relay.Function([var_3128], output)
mutated_mod['func_3129'] = func_3129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3157 = relay.var("var_3157", dtype = "int64", shape = (5, 2, 14))#candidate|3157|(5, 2, 14)|var|int64
const_3158 = relay.const([[[6,10,-4,-7,5,3,1,7,-4,-2,4,-4,5,-6],[-10,-1,-7,-6,-9,1,6,-9,10,5,-7,-5,-2,3]],[[-6,-8,-8,-5,-7,7,5,-2,-2,1,9,7,3,-8],[10,-4,-2,3,1,-6,-10,-6,3,-7,9,8,-4,-5]],[[-9,-3,6,-7,10,-8,-9,-9,7,3,3,4,8,3],[1,8,-3,-8,8,5,5,-9,8,-3,-5,-5,-6,4]],[[3,3,-5,3,-2,5,8,8,-3,-10,-4,6,-9,10],[3,7,-1,-1,3,-6,-5,-5,-1,8,9,-7,-1,4]],[[5,3,-10,-6,-5,9,9,3,6,-8,-2,-3,2,-5],[4,-3,5,-8,8,-8,-9,1,2,-3,-3,-7,7,7]]], dtype = "int64")#candidate|3158|(5, 2, 14)|const|int64
bop_3159 = relay.logical_xor(var_3157.astype('int64'), relay.reshape(const_3158.astype('int64'), relay.shape_of(var_3157))) # shape=(5, 2, 14)
output = relay.Tuple([bop_3159,])
output2 = relay.Tuple([bop_3159,])
func_3165 = relay.Function([var_3157,], output)
mod['func_3165'] = func_3165
mod = relay.transform.InferType()(mod)
mutated_mod['func_3165'] = func_3165
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3166 = relay.var("var_3166", dtype = "int64", shape = (5, 2, 14))#candidate|3166|(5, 2, 14)|var|int64
func_3165_call = mutated_mod.get_global_var('func_3165')
call_3167 = func_3165_call(var_3166)
output = call_3167
func_3168 = relay.Function([var_3166], output)
mutated_mod['func_3168'] = func_3168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2704_call = mod.get_global_var('func_2704')
func_2706_call = mutated_mod.get_global_var('func_2706')
call_3194 = relay.TupleGetItem(func_2704_call(), 2)
call_3195 = relay.TupleGetItem(func_2706_call(), 2)
var_3196 = relay.var("var_3196", dtype = "bool", shape = (14, 15, 6))#candidate|3196|(14, 15, 6)|var|bool
bop_3197 = relay.not_equal(call_3194.astype('bool'), var_3196.astype('bool')) # shape=(14, 15, 6)
bop_3200 = relay.not_equal(call_3195.astype('bool'), var_3196.astype('bool')) # shape=(14, 15, 6)
bop_3201 = relay.logical_xor(var_3196.astype('int16'), call_3194.astype('int16')) # shape=(14, 15, 6)
bop_3204 = relay.logical_xor(var_3196.astype('int16'), call_3195.astype('int16')) # shape=(14, 15, 6)
output = relay.Tuple([bop_3197,bop_3201,])
output2 = relay.Tuple([bop_3200,bop_3204,])
func_3210 = relay.Function([var_3196,], output)
mod['func_3210'] = func_3210
mod = relay.transform.InferType()(mod)
var_3211 = relay.var("var_3211", dtype = "bool", shape = (14, 15, 6))#candidate|3211|(14, 15, 6)|var|bool
output = func_3210(var_3211)
func_3212 = relay.Function([var_3211], output)
mutated_mod['func_3212'] = func_3212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2350_call = mod.get_global_var('func_2350')
func_2352_call = mutated_mod.get_global_var('func_2352')
call_3237 = relay.TupleGetItem(func_2350_call(), 1)
call_3238 = relay.TupleGetItem(func_2352_call(), 1)
func_2465_call = mod.get_global_var('func_2465')
func_2467_call = mutated_mod.get_global_var('func_2467')
call_3258 = func_2465_call()
call_3259 = func_2465_call()
func_3165_call = mod.get_global_var('func_3165')
func_3168_call = mutated_mod.get_global_var('func_3168')
const_3280 = relay.const([-7,-10,-6,-10,3,8,3,-5,7,8,-6,-7,-9,10,-10,-9,10,6,10,-8,-4,-5,6,-5,-7,8,-1,-10,9,6,3,-8,3,-10,-4,10,-5,-6,-6,5,-4,-7,-5,7,9,3,7,4,7,-4,2,-10,8,-9,7,-10,-6,-3,-5,5,4,-5,-3,-8,5,-3,6,6,-9,10,9,-4,8,8,-10,7,-2,2,5,6,-3,-9,-2,5,-1,7,5,-7,-1,-6,7,-2,8,-4,7,3,1,-9,8,-6,8,-9,5,8,8,-4,9,-3,3,10,-9,9,6,5,-1,10,-4,-6,4,4,10,-4,7,6,5,9,-8,6,-6,7,-3,7,-8,8,-7,-4,4,5,-5,1], dtype = "int64")#candidate|3280|(140,)|const|int64
call_3279 = relay.TupleGetItem(func_3165_call(relay.reshape(const_3280.astype('int64'), [5, 2, 14])), 0)
call_3281 = relay.TupleGetItem(func_3168_call(relay.reshape(const_3280.astype('int64'), [5, 2, 14])), 0)
var_3294 = relay.var("var_3294", dtype = "uint16", shape = (1, 15, 6))#candidate|3294|(1, 15, 6)|var|uint16
bop_3295 = relay.minimum(call_3237.astype('int64'), relay.reshape(var_3294.astype('int64'), relay.shape_of(call_3237))) # shape=(1, 15, 6)
bop_3298 = relay.minimum(call_3238.astype('int64'), relay.reshape(var_3294.astype('int64'), relay.shape_of(call_3238))) # shape=(1, 15, 6)
func_2576_call = mod.get_global_var('func_2576')
func_2578_call = mutated_mod.get_global_var('func_2578')
var_3313 = relay.var("var_3313", dtype = "float32", shape = (27, 2))#candidate|3313|(27, 2)|var|float32
call_3312 = relay.TupleGetItem(func_2576_call(relay.reshape(var_3313.astype('float32'), [54,])), 1)
call_3314 = relay.TupleGetItem(func_2578_call(relay.reshape(var_3313.astype('float32'), [54,])), 1)
output = relay.Tuple([call_3258,call_3279,const_3280,bop_3295,call_3312,var_3313,])
output2 = relay.Tuple([call_3259,call_3281,const_3280,bop_3298,call_3314,var_3313,])
func_3322 = relay.Function([var_3294,var_3313,], output)
mod['func_3322'] = func_3322
mod = relay.transform.InferType()(mod)
var_3323 = relay.var("var_3323", dtype = "uint16", shape = (1, 15, 6))#candidate|3323|(1, 15, 6)|var|uint16
var_3324 = relay.var("var_3324", dtype = "float32", shape = (27, 2))#candidate|3324|(27, 2)|var|float32
output = func_3322(var_3323,var_3324,)
func_3325 = relay.Function([var_3323,var_3324,], output)
mutated_mod['func_3325'] = func_3325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1697_call = mod.get_global_var('func_1697')
func_1698_call = mutated_mod.get_global_var('func_1698')
call_3345 = relay.TupleGetItem(func_1697_call(), 0)
call_3346 = relay.TupleGetItem(func_1698_call(), 0)
output = relay.Tuple([call_3345,])
output2 = relay.Tuple([call_3346,])
func_3352 = relay.Function([], output)
mod['func_3352'] = func_3352
mod = relay.transform.InferType()(mod)
mutated_mod['func_3352'] = func_3352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mutated_mod.get_global_var('func_3352')
call_3353 = func_3352_call()
output = call_3353
func_3354 = relay.Function([], output)
mutated_mod['func_3354'] = func_3354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2465_call = mod.get_global_var('func_2465')
func_2467_call = mutated_mod.get_global_var('func_2467')
call_3378 = func_2465_call()
call_3379 = func_2465_call()
func_1697_call = mod.get_global_var('func_1697')
func_1698_call = mutated_mod.get_global_var('func_1698')
call_3388 = relay.TupleGetItem(func_1697_call(), 0)
call_3389 = relay.TupleGetItem(func_1698_call(), 0)
uop_3391 = relay.sigmoid(call_3378.astype('float64')) # shape=(5, 16, 1)
uop_3393 = relay.sigmoid(call_3379.astype('float64')) # shape=(5, 16, 1)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_3398 = relay.TupleGetItem(func_3352_call(), 0)
call_3399 = relay.TupleGetItem(func_3354_call(), 0)
output = relay.Tuple([call_3388,uop_3391,call_3398,])
output2 = relay.Tuple([call_3389,uop_3393,call_3399,])
func_3405 = relay.Function([], output)
mod['func_3405'] = func_3405
mod = relay.transform.InferType()(mod)
output = func_3405()
func_3406 = relay.Function([], output)
mutated_mod['func_3406'] = func_3406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2594_call = mod.get_global_var('func_2594')
func_2596_call = mutated_mod.get_global_var('func_2596')
call_3433 = relay.TupleGetItem(func_2594_call(), 0)
call_3434 = relay.TupleGetItem(func_2596_call(), 0)
output = call_3433
output2 = call_3434
func_3440 = relay.Function([], output)
mod['func_3440'] = func_3440
mod = relay.transform.InferType()(mod)
mutated_mod['func_3440'] = func_3440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3440_call = mutated_mod.get_global_var('func_3440')
call_3441 = func_3440_call()
output = call_3441
func_3442 = relay.Function([], output)
mutated_mod['func_3442'] = func_3442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3440_call = mod.get_global_var('func_3440')
func_3442_call = mutated_mod.get_global_var('func_3442')
call_3460 = func_3440_call()
call_3461 = func_3440_call()
func_2783_call = mod.get_global_var('func_2783')
func_2788_call = mutated_mod.get_global_var('func_2788')
var_3472 = relay.var("var_3472", dtype = "float64", shape = (1872,))#candidate|3472|(1872,)|var|float64
const_3473 = relay.const([[-9,10,-9,10,-7,-5,8,8,-8,-5,-6,-2,-7,4,10,-6,-9,1,-3,-4,-7,-1,-2,-4,-10,3,-5,5,-5,-5,8,-4,-8,-5,-5,3,7,-8,3,-3,-2,-8,-1,-9,1,1,-7,-8,-9,6,-1,7,-5,9,8,2,8,7,3,8,-1,-5,4,-3,-6,1,10,-5,3,-2,6,1,5,7,-5,4,-6,6,10,-6,-10,4,-3,4,3,-10,-1,-6,10,-6,10,3,-7,-7,8,-5,-8,-8,-8,-10,-10,9,-1,10,8,-6,-6,-4,8,3,-3,-4,-7,-4,7,-5,2,2,9,-3,-10,5,8,8,-1,1,9,-4,10,-1,-10,5,2,-5,9,-10,-9,-2,6,-2,-3,10,-10,8,2,6,8,4,-7,1,-9,5,-5,4,9,8,-2,-3,3,-2,-3,-7,-10,-10,-9,4,-1,-7,-8,-10,10,-10,-6,-3,-8,-4,-3,-3,1,1,4,10,-6,6,10,4,5,10,-9,-2,10,-8,-6,-8,-4,-9,-8,-8,7,-10,-9,5,-8,-5,10,4,5,4,2,-10,-5,-7,-9,-7,8,-5,2,10,7,-7,-7,8,4,3,6,-2,-2,3,-5,-10,-8,9,5,9,9,10,8,5,-9,-8,2,5,-1,7,-9,-9,4,-6,-1,10,3,-3,-7,5,-9,-1,6,-6,8,-5,4,3,-3,-6,6,-2,5,3,6,-8,-2,-7,-8,-5,10,-1,-3,-2,-5,-1,-4,1,-2,1,-2,-4,-7,3,8,2,-8,-2,-9,-9,1,-7,-5,-4,3,-5,-4,1,2,9,-2,7,5,-2,4,-1,1,9,6,-3,1,-6,-8,6,-1,-1,-7,-4,8,9,9,-6,-7,8,-10,-6,10,-6,9,10,1,2,8,10,-3,-7,-8,3,-9,3,-2,2,1,10,-2,-7,-10,10,-4,-5,1,9,4,-7,5,-4,-8,-6,-6,8,-7,-2,-3,-4,-5,8,-10,5,1,8,-5,2,1,-4,-6,-9,-7,-9,-5,1,-1,-6,-6,-4,-7,2,7,5,1,6,-2,-10,8,-1,-2,3,-9,-4,-1,1,-3,8,-4,9,-2,3,-2,1,10,-2,-4,6,3,-8,2,-2,2,-6,-3,-2,-4,9,9,5,-1,4,4,-9,-1,1,6,-10,-3,5,-3,-1,3,2,-9,1,-8,5,4,6,3,-1,-1,5,9,-10,-8,-9,10,-3,2,8,1,-1,9,2,-7,1,4,-1,-8,5,-3,-9,10,1,7,4,-5,3,-4,-6,-8,10,4,2,4,8,-2,8,8,-3,-9,3,2,7,-2,7,-1,9,6,-7,-9,-6,3,-2,-3,6,-2,7,-8,7,9,-10,-9,-8,-2,-7,-2,-1,-9,6,8,6,-4,1,7,-1,-2,-9,-10,7,-3,-3,7,2,7,-2,1,-4,-2,4,-4,8,-6,8,5,7,10,-5,-2,-5,-6,-3,-6,9,-3,-7,-9,-5,-1,10,8,6,-7,-5,9,-9,8,1,2,-1,-4,-4,-1,-10,1,10,7,-5,8,-5,-1,-3,8,-2,5,-5,-2,-4,7,-7,3,-8,-3,7,5,8,8,-7,-5,-9,4,1,-5,9,6,2,5,-2,-5,10,2,-7,1,-9,5,-9,5,3,3,-4,9,-10,8,-3,-10,-4,-2,3,7,2,-3,10,-10,-8,6,6,7,-10,-10,9],[-5,-2,-8,-2,10,-6,6,-1,-9,-3,-10,-10,7,-4,-4,-8,-10,6,7,2,4,2,-5,10,9,-1,-4,-6,3,-7,4,6,6,-9,-1,-4,-10,9,-7,-1,4,-5,-3,9,-10,-4,4,6,1,-4,-8,-1,5,4,-1,-8,7,3,-4,-9,-3,-9,-1,6,2,-8,10,-9,-3,5,-9,1,6,-9,8,-5,9,7,-10,-5,5,-3,5,10,-8,-2,-7,5,6,-6,-2,-7,-4,2,-7,6,-2,-7,-2,7,-1,9,3,-5,-9,-5,-9,-3,-7,9,-4,8,-6,5,3,10,-2,-5,-4,-3,-9,-6,-5,5,4,7,-9,-3,1,4,9,-9,-4,5,-5,3,-1,4,9,-7,3,2,1,8,-5,-6,-6,-5,-9,8,-1,8,3,-5,1,-7,5,6,-9,8,7,-8,10,3,4,-3,-4,4,-3,10,-2,-8,-8,-3,-9,1,-6,10,2,3,-3,-8,7,4,2,6,1,-1,8,-8,-6,4,-7,5,-6,-3,7,7,7,8,3,5,5,5,-1,-2,-3,8,1,-7,-4,-7,6,-6,5,-2,5,-4,-5,-6,3,3,2,-4,-5,-9,3,-1,-10,-2,1,3,3,-8,8,7,2,5,-3,7,4,-8,-2,6,6,-6,3,-4,-7,-5,8,6,1,-4,-4,4,-10,3,-1,-5,8,-3,1,7,4,4,-3,-2,4,1,-10,4,-5,-2,-7,-3,-6,-5,-8,8,-4,1,-3,-4,-10,4,7,-8,6,-9,6,-7,-10,1,5,-9,-2,-8,5,3,-4,7,-5,-6,-6,-4,-8,-5,5,8,7,-1,-8,-3,9,-8,3,6,10,-8,6,-9,3,3,-9,-10,-8,5,-9,7,-6,-3,-10,-6,-1,-9,4,-1,9,5,-5,-6,5,9,10,4,-10,-3,-7,5,3,3,1,4,-8,-9,3,7,5,-4,1,10,-6,-6,-4,-1,4,-4,-7,-4,-7,-1,-8,-10,4,7,5,-7,-2,4,-3,-3,-8,-9,-5,-2,-5,3,-1,6,1,1,3,-9,-10,-1,9,-9,10,3,-2,-8,-8,-2,-7,6,-4,-4,-2,1,5,6,-7,10,-2,5,-10,3,-5,8,-3,-10,9,3,-8,-7,6,6,6,-3,10,4,-10,-9,2,-8,2,-2,-3,-4,1,3,-5,-3,6,-1,3,-8,10,9,-5,-7,-5,9,5,-7,5,4,-1,-10,2,-5,7,-7,3,1,2,-8,-8,-5,10,-1,-3,4,-3,-1,8,-9,1,3,3,5,-3,-2,-10,6,-10,5,-4,-7,5,-4,-4,-9,-1,3,6,9,1,-10,10,-10,-5,-6,-4,-7,-1,-4,-4,-1,5,8,2,-1,-9,-3,-7,3,-8,2,-4,-2,10,1,7,10,6,3,5,10,-5,7,7,-5,-9,-6,-5,-7,2,-10,9,-3,10,-2,10,-1,6,10,-7,6,-1,8,-1,-3,-2,6,-3,-6,-2,7,10,-8,5,-10,2,-8,-10,-1,1,6,4,-5,-8,1,-1,6,8,10,4,6,5,1,10,6,3,-5,3,-6,-2,5,-7,7,-6,7,-6,-8,-6,-6,-8,-8,-6,9,-2,4,-4,-9,1,6,-4,9,-7,3,-3,-2,5,3,-2,3,-9,-7,-8,-6,4,-8,9,10,-4,1,-4,-10,4,10,-6,-9,-2,10,5,-8,-9,7]], dtype = "uint8")#candidate|3473|(2, 640)|const|uint8
var_3474 = relay.var("var_3474", dtype = "float32", shape = (756,))#candidate|3474|(756,)|var|float32
var_3475 = relay.var("var_3475", dtype = "float32", shape = (54,))#candidate|3475|(54,)|var|float32
call_3471 = relay.TupleGetItem(func_2783_call(relay.reshape(var_3472.astype('float64'), [1872,]), relay.reshape(const_3473.astype('uint8'), [1280,]), relay.reshape(var_3474.astype('float32'), [756,]), relay.reshape(var_3475.astype('float32'), [54,]), ), 6)
call_3476 = relay.TupleGetItem(func_2788_call(relay.reshape(var_3472.astype('float64'), [1872,]), relay.reshape(const_3473.astype('uint8'), [1280,]), relay.reshape(var_3474.astype('float32'), [756,]), relay.reshape(var_3475.astype('float32'), [54,]), ), 6)
func_1828_call = mod.get_global_var('func_1828')
func_1830_call = mutated_mod.get_global_var('func_1830')
call_3481 = relay.TupleGetItem(func_1828_call(), 0)
call_3482 = relay.TupleGetItem(func_1830_call(), 0)
output = relay.Tuple([call_3460,call_3471,var_3472,const_3473,var_3474,var_3475,call_3481,])
output2 = relay.Tuple([call_3461,call_3476,var_3472,const_3473,var_3474,var_3475,call_3482,])
func_3506 = relay.Function([var_3472,var_3474,var_3475,], output)
mod['func_3506'] = func_3506
mod = relay.transform.InferType()(mod)
mutated_mod['func_3506'] = func_3506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3506_call = mutated_mod.get_global_var('func_3506')
var_3508 = relay.var("var_3508", dtype = "float64", shape = (1872,))#candidate|3508|(1872,)|var|float64
var_3509 = relay.var("var_3509", dtype = "float32", shape = (756,))#candidate|3509|(756,)|var|float32
var_3510 = relay.var("var_3510", dtype = "float32", shape = (54,))#candidate|3510|(54,)|var|float32
call_3507 = func_3506_call(var_3508,var_3509,var_3510,)
output = call_3507
func_3511 = relay.Function([var_3508,var_3509,var_3510,], output)
mutated_mod['func_3511'] = func_3511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1889_call = mod.get_global_var('func_1889')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_3532 = relay.TupleGetItem(func_1889_call(), 0)
call_3533 = relay.TupleGetItem(func_1890_call(), 0)
func_3440_call = mod.get_global_var('func_3440')
func_3442_call = mutated_mod.get_global_var('func_3442')
call_3540 = func_3440_call()
call_3541 = func_3440_call()
output = relay.Tuple([call_3532,call_3540,])
output2 = relay.Tuple([call_3533,call_3541,])
func_3561 = relay.Function([], output)
mod['func_3561'] = func_3561
mod = relay.transform.InferType()(mod)
output = func_3561()
func_3562 = relay.Function([], output)
mutated_mod['func_3562'] = func_3562
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3571 = relay.var("var_3571", dtype = "int8", shape = ())#candidate|3571|()|var|int8
var_3572 = relay.var("var_3572", dtype = "int8", shape = (1, 15, 4))#candidate|3572|(1, 15, 4)|var|int8
bop_3573 = relay.subtract(var_3571.astype('int8'), var_3572.astype('int8')) # shape=(1, 15, 4)
func_2137_call = mod.get_global_var('func_2137')
func_2140_call = mutated_mod.get_global_var('func_2140')
var_3592 = relay.var("var_3592", dtype = "float64", shape = (154,))#candidate|3592|(154,)|var|float64
call_3591 = relay.TupleGetItem(func_2137_call(relay.reshape(var_3592.astype('float64'), [11, 1, 14])), 1)
call_3593 = relay.TupleGetItem(func_2140_call(relay.reshape(var_3592.astype('float64'), [11, 1, 14])), 1)
output = relay.Tuple([bop_3573,call_3591,var_3592,])
output2 = relay.Tuple([bop_3573,call_3593,var_3592,])
func_3606 = relay.Function([var_3571,var_3572,var_3592,], output)
mod['func_3606'] = func_3606
mod = relay.transform.InferType()(mod)
mutated_mod['func_3606'] = func_3606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3606_call = mutated_mod.get_global_var('func_3606')
var_3608 = relay.var("var_3608", dtype = "int8", shape = ())#candidate|3608|()|var|int8
var_3609 = relay.var("var_3609", dtype = "int8", shape = (1, 15, 4))#candidate|3609|(1, 15, 4)|var|int8
var_3610 = relay.var("var_3610", dtype = "float64", shape = (154,))#candidate|3610|(154,)|var|float64
call_3607 = func_3606_call(var_3608,var_3609,var_3610,)
output = call_3607
func_3611 = relay.Function([var_3608,var_3609,var_3610,], output)
mutated_mod['func_3611'] = func_3611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2174_call = mod.get_global_var('func_2174')
func_2175_call = mutated_mod.get_global_var('func_2175')
call_3726 = func_2174_call()
call_3727 = func_2174_call()
func_490_call = mod.get_global_var('func_490')
func_497_call = mutated_mod.get_global_var('func_497')
const_3735 = relay.const([-6,-1,3,-4,-3,6,-7,-9,4,-8,5,5,3,-10,-2,1,-1,4,-2,-7,-1,10,10,4,-7,10,2,-3,-5,-6,-2,-4,-9,7,7,8,-10,6,8,-2,2,7,7,1,-3,-8,-3,-9,3,6,1,9,-4,9,-3,-7,5,1,1,4,2,-10,8,-9,-5,-2,1,-8,-6,-5,10,-6,-3,8,2,10,6,8,9,-7,-2,-3,-4,-6,-7,-9,-2,-1,5,-2,1,-10,-2,-5,6,7,2,-1,-10,7,9,-2,5,9,-3,7,-1,-5,5,-7,-1,-1,4,-1,2,-2,6,-3,9,10,-10,-10,-4,-7,-4,-2,-9,-7,-6,1,-6,8,-9,2,-4,4,9,-7,8,4,10,-6,-10,4,-1,5,-8,-1,7,-4,6,-4,-1,-8,7,-10,9,-6,9,6,-4,9,-5,8,-6,2,2,6,7,2,-5,10,10,-2,5,1,10,-3,2,8,6,9,6,-1,9,-6,10,8,-2,-9,2,-8,1,9,5,-3,-9,-10,10,-7,-7,-3,1,-6,-6,1,8,10,3,5,9,10,10,3,3,9,5,6,-7,-10,-1,9,-2,-9,10,-4,9,9,6,-1,3,9,-4,-7,-1,-4,-8,10,-3,5,-2,-4,-7,-4,4,3,7,-9,-9,2,1,-2,10,-7,2,6], dtype = "uint8")#candidate|3735|(256,)|const|uint8
var_3736 = relay.var("var_3736", dtype = "uint8", shape = (16, 80))#candidate|3736|(16, 80)|var|uint8
call_3734 = relay.TupleGetItem(func_490_call(relay.reshape(const_3735.astype('uint8'), [16, 1, 16]), relay.reshape(var_3736.astype('uint8'), [16, 5, 16]), relay.reshape(var_3736.astype('float64'), [16, 5, 16]), relay.reshape(var_3736.astype('float64'), [16, 5, 16]), relay.reshape(var_3736.astype('bool'), [16, 5, 16]), ), 7)
call_3737 = relay.TupleGetItem(func_497_call(relay.reshape(const_3735.astype('uint8'), [16, 1, 16]), relay.reshape(var_3736.astype('uint8'), [16, 5, 16]), relay.reshape(var_3736.astype('float64'), [16, 5, 16]), relay.reshape(var_3736.astype('float64'), [16, 5, 16]), relay.reshape(var_3736.astype('bool'), [16, 5, 16]), ), 7)
output = relay.Tuple([call_3726,call_3734,const_3735,var_3736,])
output2 = relay.Tuple([call_3727,call_3737,const_3735,var_3736,])
func_3738 = relay.Function([var_3736,], output)
mod['func_3738'] = func_3738
mod = relay.transform.InferType()(mod)
mutated_mod['func_3738'] = func_3738
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3739 = relay.var("var_3739", dtype = "uint8", shape = (16, 80))#candidate|3739|(16, 80)|var|uint8
func_3738_call = mutated_mod.get_global_var('func_3738')
call_3740 = func_3738_call(var_3739)
output = call_3740
func_3741 = relay.Function([var_3739], output)
mutated_mod['func_3741'] = func_3741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2465_call = mod.get_global_var('func_2465')
func_2467_call = mutated_mod.get_global_var('func_2467')
call_3746 = func_2465_call()
call_3747 = func_2465_call()
func_1433_call = mod.get_global_var('func_1433')
func_1436_call = mutated_mod.get_global_var('func_1436')
var_3755 = relay.var("var_3755", dtype = "uint32", shape = (42,))#candidate|3755|(42,)|var|uint32
call_3754 = relay.TupleGetItem(func_1433_call(relay.reshape(var_3755.astype('uint32'), [42,])), 2)
call_3756 = relay.TupleGetItem(func_1436_call(relay.reshape(var_3755.astype('uint32'), [42,])), 2)
func_3210_call = mod.get_global_var('func_3210')
func_3212_call = mutated_mod.get_global_var('func_3212')
var_3758 = relay.var("var_3758", dtype = "bool", shape = (1260,))#candidate|3758|(1260,)|var|bool
call_3757 = relay.TupleGetItem(func_3210_call(relay.reshape(var_3758.astype('bool'), [14, 15, 6])), 1)
call_3759 = relay.TupleGetItem(func_3212_call(relay.reshape(var_3758.astype('bool'), [14, 15, 6])), 1)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_3766 = relay.TupleGetItem(func_1639_call(), 0)
call_3767 = relay.TupleGetItem(func_1641_call(), 0)
output = relay.Tuple([call_3746,call_3754,var_3755,call_3757,var_3758,call_3766,])
output2 = relay.Tuple([call_3747,call_3756,var_3755,call_3759,var_3758,call_3767,])
func_3768 = relay.Function([var_3755,var_3758,], output)
mod['func_3768'] = func_3768
mod = relay.transform.InferType()(mod)
var_3769 = relay.var("var_3769", dtype = "uint32", shape = (42,))#candidate|3769|(42,)|var|uint32
var_3770 = relay.var("var_3770", dtype = "bool", shape = (1260,))#candidate|3770|(1260,)|var|bool
output = func_3768(var_3769,var_3770,)
func_3771 = relay.Function([var_3769,var_3770,], output)
mutated_mod['func_3771'] = func_3771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_3864 = relay.TupleGetItem(func_1639_call(), 0)
call_3865 = relay.TupleGetItem(func_1641_call(), 0)
func_2271_call = mod.get_global_var('func_2271')
func_2273_call = mutated_mod.get_global_var('func_2273')
var_3871 = relay.var("var_3871", dtype = "float64", shape = (4, 180))#candidate|3871|(4, 180)|var|float64
call_3870 = relay.TupleGetItem(func_2271_call(relay.reshape(var_3871.astype('float64'), [8, 15, 6])), 1)
call_3872 = relay.TupleGetItem(func_2273_call(relay.reshape(var_3871.astype('float64'), [8, 15, 6])), 1)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_3873 = relay.TupleGetItem(func_3352_call(), 0)
call_3874 = relay.TupleGetItem(func_3354_call(), 0)
output = relay.Tuple([call_3864,call_3870,var_3871,call_3873,])
output2 = relay.Tuple([call_3865,call_3872,var_3871,call_3874,])
func_3879 = relay.Function([var_3871,], output)
mod['func_3879'] = func_3879
mod = relay.transform.InferType()(mod)
var_3880 = relay.var("var_3880", dtype = "float64", shape = (4, 180))#candidate|3880|(4, 180)|var|float64
output = func_3879(var_3880)
func_3881 = relay.Function([var_3880], output)
mutated_mod['func_3881'] = func_3881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_3895 = func_2510_call()
call_3896 = func_2510_call()
const_3903 = relay.const([[[5,-10,-1,2,1,-10],[-10,9,9,1,-6,-4],[-1,-4,-8,-2,-4,-7],[3,3,-5,-8,-7,-4],[-7,-6,3,9,1,-8],[-2,-3,-7,3,2,-5],[-7,1,9,2,-10,8],[10,-5,1,-1,-8,-9],[-7,-4,-6,-5,1,9],[-1,6,9,5,3,2],[7,-5,10,-9,-6,-3],[1,5,5,-4,5,10],[-7,-5,4,2,-3,-6],[3,-9,8,9,-1,3],[-10,-2,8,1,6,-6]],[[7,2,7,2,-3,8],[2,-3,6,7,-7,-1],[1,-2,9,-7,-6,-6],[-7,4,7,3,3,-2],[-6,-5,10,-7,7,9],[-7,-4,-7,7,-9,6],[-7,7,9,-9,8,5],[9,10,3,-5,8,-5],[-10,-9,-7,4,5,6],[-1,-6,-10,-9,-7,8],[-10,10,2,1,10,-10],[-4,-1,-8,-3,-1,-1],[2,-1,-1,-8,-9,7],[6,3,9,-2,-2,1],[1,10,-3,-2,-1,3]],[[-1,-10,-1,-2,-8,-2],[-2,7,-9,-3,-4,-2],[-2,-3,9,-4,9,1],[-3,-9,-1,6,-7,-5],[-5,9,-9,-6,7,-5],[-5,7,3,6,-2,-6],[7,-4,9,3,8,-3],[4,10,-9,8,-4,-10],[4,4,2,-6,-4,-3],[10,6,9,4,1,5],[-1,-3,-9,-3,-10,6],[6,1,2,4,-10,-9],[2,-10,-7,10,-9,4],[-10,8,3,4,-8,1],[6,2,-8,5,-2,10]]], dtype = "int64")#candidate|3903|(3, 15, 6)|const|int64
bop_3904 = relay.mod(call_3895.astype('float64'), const_3903.astype('float64')) # shape=(3, 15, 6)
bop_3907 = relay.mod(call_3896.astype('float64'), const_3903.astype('float64')) # shape=(3, 15, 6)
func_3322_call = mod.get_global_var('func_3322')
func_3325_call = mutated_mod.get_global_var('func_3325')
const_3909 = relay.const([4.131551,-7.602706,-8.468179,-5.805572,7.901526,5.462518,5.670563,0.219704,-5.426358,-2.927001,3.324084,-2.304406,9.223330,6.524146,1.808928,-5.869337,-2.395472,1.747111,-9.030953,-0.220571,-2.036965,8.619128,4.324351,-0.851056,-4.227819,1.147079,5.642447,-8.465530,0.929593,5.006249,-3.831535,2.692416,-2.317827,3.118382,-6.427502,-2.739419,5.882307,-5.497281,-4.286270,-1.489765,8.609848,9.560729,-9.386996,-3.354283,8.458658,-4.854751,3.957680,2.297038,-2.337600,-0.009039,-1.774298,-2.936345,-5.251639,6.723201], dtype = "float32")#candidate|3909|(54,)|const|float32
call_3908 = relay.TupleGetItem(func_3322_call(relay.reshape(call_3895.astype('uint16'), [1, 15, 6]), relay.reshape(const_3909.astype('float32'), [27, 2]), ), 5)
call_3910 = relay.TupleGetItem(func_3325_call(relay.reshape(call_3895.astype('uint16'), [1, 15, 6]), relay.reshape(const_3909.astype('float32'), [27, 2]), ), 5)
output = relay.Tuple([bop_3904,call_3908,const_3909,])
output2 = relay.Tuple([bop_3907,call_3910,const_3909,])
func_3915 = relay.Function([], output)
mod['func_3915'] = func_3915
mod = relay.transform.InferType()(mod)
output = func_3915()
func_3916 = relay.Function([], output)
mutated_mod['func_3916'] = func_3916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2292_call = mod.get_global_var('func_2292')
func_2294_call = mutated_mod.get_global_var('func_2294')
call_3925 = func_2292_call()
call_3926 = func_2292_call()
const_3927 = relay.const([[[-9.098655,-5.038169,8.155672,-9.507413,5.936550,-5.092583],[6.614392,8.908000,1.521145,-9.456354,0.923291,-4.057194],[-8.477550,-1.406505,0.966171,7.065460,2.939930,-0.707636],[-1.397678,5.732577,4.999330,-8.409976,-7.791518,-7.654016],[-7.828167,2.567578,-6.962392,-7.746129,-7.252002,-4.711462],[-6.114467,-6.956354,0.921260,-0.468293,3.635709,9.530824],[-7.907907,6.868082,1.489315,-7.830865,4.248203,9.588932],[9.761200,-7.726159,0.590550,-0.713665,-6.060016,7.477262],[6.343616,-4.878880,1.406532,4.359683,9.239327,0.728723],[-5.438150,-6.137387,3.197764,3.842373,-3.519492,-3.990837],[-2.000767,8.973562,9.073628,-6.666101,5.668556,6.454295],[0.488014,-7.735475,-5.086455,5.422620,1.431362,-9.245683],[-1.180908,0.499222,1.445992,-5.458393,-2.735421,-7.374522],[-7.548509,-3.189628,8.100535,5.366444,9.435854,8.140378],[6.376773,-1.750964,3.285446,4.010902,4.358426,-5.007183]]], dtype = "float64")#candidate|3927|(1, 15, 6)|const|float64
bop_3928 = relay.floor_mod(call_3925.astype('float64'), relay.reshape(const_3927.astype('float64'), relay.shape_of(call_3925))) # shape=(1, 15, 6)
bop_3931 = relay.floor_mod(call_3926.astype('float64'), relay.reshape(const_3927.astype('float64'), relay.shape_of(call_3926))) # shape=(1, 15, 6)
output = relay.Tuple([bop_3928,])
output2 = relay.Tuple([bop_3931,])
func_3932 = relay.Function([], output)
mod['func_3932'] = func_3932
mod = relay.transform.InferType()(mod)
mutated_mod['func_3932'] = func_3932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3932_call = mutated_mod.get_global_var('func_3932')
call_3933 = func_3932_call()
output = call_3933
func_3934 = relay.Function([], output)
mutated_mod['func_3934'] = func_3934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2594_call = mod.get_global_var('func_2594')
func_2596_call = mutated_mod.get_global_var('func_2596')
call_3937 = relay.TupleGetItem(func_2594_call(), 0)
call_3938 = relay.TupleGetItem(func_2596_call(), 0)
func_3440_call = mod.get_global_var('func_3440')
func_3442_call = mutated_mod.get_global_var('func_3442')
call_3943 = func_3440_call()
call_3944 = func_3440_call()
func_1769_call = mod.get_global_var('func_1769')
func_1771_call = mutated_mod.get_global_var('func_1771')
var_3949 = relay.var("var_3949", dtype = "uint8", shape = (1280,))#candidate|3949|(1280,)|var|uint8
call_3948 = relay.TupleGetItem(func_1769_call(relay.reshape(var_3949.astype('uint8'), [1280,])), 7)
call_3950 = relay.TupleGetItem(func_1771_call(relay.reshape(var_3949.astype('uint8'), [1280,])), 7)
output = relay.Tuple([call_3937,call_3943,call_3948,var_3949,])
output2 = relay.Tuple([call_3938,call_3944,call_3950,var_3949,])
func_3956 = relay.Function([var_3949,], output)
mod['func_3956'] = func_3956
mod = relay.transform.InferType()(mod)
var_3957 = relay.var("var_3957", dtype = "uint8", shape = (1280,))#candidate|3957|(1280,)|var|uint8
output = func_3956(var_3957)
func_3958 = relay.Function([var_3957], output)
mutated_mod['func_3958'] = func_3958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3440_call = mod.get_global_var('func_3440')
func_3442_call = mutated_mod.get_global_var('func_3442')
call_3980 = func_3440_call()
call_3981 = func_3440_call()
output = call_3980
output2 = call_3981
func_3982 = relay.Function([], output)
mod['func_3982'] = func_3982
mod = relay.transform.InferType()(mod)
output = func_3982()
func_3983 = relay.Function([], output)
mutated_mod['func_3983'] = func_3983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2350_call = mod.get_global_var('func_2350')
func_2352_call = mutated_mod.get_global_var('func_2352')
call_3998 = relay.TupleGetItem(func_2350_call(), 1)
call_3999 = relay.TupleGetItem(func_2352_call(), 1)
func_1042_call = mod.get_global_var('func_1042')
func_1044_call = mutated_mod.get_global_var('func_1044')
var_4006 = relay.var("var_4006", dtype = "float32", shape = (54, 1))#candidate|4006|(54, 1)|var|float32
call_4005 = func_1042_call(relay.reshape(var_4006.astype('float32'), [1, 9, 6]))
call_4007 = func_1042_call(relay.reshape(var_4006.astype('float32'), [1, 9, 6]))
bop_4008 = relay.greater(call_4005.astype('bool'), relay.reshape(var_4006.astype('bool'), relay.shape_of(call_4005))) # shape=(1, 9, 6)
bop_4011 = relay.greater(call_4007.astype('bool'), relay.reshape(var_4006.astype('bool'), relay.shape_of(call_4007))) # shape=(1, 9, 6)
output = relay.Tuple([call_3998,bop_4008,])
output2 = relay.Tuple([call_3999,bop_4011,])
func_4024 = relay.Function([var_4006,], output)
mod['func_4024'] = func_4024
mod = relay.transform.InferType()(mod)
mutated_mod['func_4024'] = func_4024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4025 = relay.var("var_4025", dtype = "float32", shape = (54, 1))#candidate|4025|(54, 1)|var|float32
func_4024_call = mutated_mod.get_global_var('func_4024')
call_4026 = func_4024_call(var_4025)
output = call_4026
func_4027 = relay.Function([var_4025], output)
mutated_mod['func_4027'] = func_4027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3982_call = mod.get_global_var('func_3982')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_4035 = func_3982_call()
call_4036 = func_3982_call()
func_1275_call = mod.get_global_var('func_1275')
func_1278_call = mutated_mod.get_global_var('func_1278')
var_4040 = relay.var("var_4040", dtype = "uint8", shape = (256,))#candidate|4040|(256,)|var|uint8
call_4039 = relay.TupleGetItem(func_1275_call(relay.reshape(var_4040.astype('uint8'), [256,])), 0)
call_4041 = relay.TupleGetItem(func_1278_call(relay.reshape(var_4040.astype('uint8'), [256,])), 0)
func_1042_call = mod.get_global_var('func_1042')
func_1044_call = mutated_mod.get_global_var('func_1044')
const_4043 = relay.const([[-9.254145,1.870501],[3.576531,-1.218760],[-4.786353,9.457079],[1.245721,-8.305999],[1.691430,3.260815],[-9.935642,-7.668328],[4.070619,6.078060],[2.225645,3.128759],[9.064677,-0.511016],[4.467970,-4.906631],[2.276241,-0.439741],[-0.788097,6.842519],[6.517756,-4.819421],[-3.789871,7.319465],[5.529158,-4.232856],[0.856213,-1.424600],[-4.739999,5.426467],[7.282137,6.455002],[3.472078,-2.442685],[-7.102666,-0.403319],[-5.571034,3.512402],[2.493634,-8.933430],[-2.762259,5.365207],[5.164991,-3.119500],[-6.245952,9.356120],[0.570689,-5.561890],[-7.709149,-8.311330]], dtype = "float32")#candidate|4043|(27, 2)|const|float32
call_4042 = func_1042_call(relay.reshape(const_4043.astype('float32'), [1, 9, 6]))
call_4044 = func_1042_call(relay.reshape(const_4043.astype('float32'), [1, 9, 6]))
output = relay.Tuple([call_4035,call_4039,var_4040,call_4042,const_4043,])
output2 = relay.Tuple([call_4036,call_4041,var_4040,call_4044,const_4043,])
func_4058 = relay.Function([var_4040,], output)
mod['func_4058'] = func_4058
mod = relay.transform.InferType()(mod)
mutated_mod['func_4058'] = func_4058
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4059 = relay.var("var_4059", dtype = "uint8", shape = (256,))#candidate|4059|(256,)|var|uint8
func_4058_call = mutated_mod.get_global_var('func_4058')
call_4060 = func_4058_call(var_4059)
output = call_4060
func_4061 = relay.Function([var_4059], output)
mutated_mod['func_4061'] = func_4061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2635_call = mod.get_global_var('func_2635')
func_2637_call = mutated_mod.get_global_var('func_2637')
call_4093 = func_2635_call()
call_4094 = func_2635_call()
func_2510_call = mod.get_global_var('func_2510')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_4120 = func_2510_call()
call_4121 = func_2510_call()
bop_4131 = relay.bitwise_and(call_4120.astype('uint8'), relay.reshape(call_4093.astype('uint8'), relay.shape_of(call_4120))) # shape=(1, 15, 6)
bop_4134 = relay.bitwise_and(call_4121.astype('uint8'), relay.reshape(call_4094.astype('uint8'), relay.shape_of(call_4121))) # shape=(1, 15, 6)
output = relay.Tuple([bop_4131,])
output2 = relay.Tuple([bop_4134,])
func_4142 = relay.Function([], output)
mod['func_4142'] = func_4142
mod = relay.transform.InferType()(mod)
output = func_4142()
func_4143 = relay.Function([], output)
mutated_mod['func_4143'] = func_4143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_4163 = func_2510_call()
call_4164 = func_2510_call()
var_4166 = relay.var("var_4166", dtype = "int64", shape = (12, 15, 6))#candidate|4166|(12, 15, 6)|var|int64
bop_4167 = relay.right_shift(call_4163.astype('uint16'), var_4166.astype('uint16')) # shape=(12, 15, 6)
bop_4170 = relay.right_shift(call_4164.astype('uint16'), var_4166.astype('uint16')) # shape=(12, 15, 6)
func_2119_call = mod.get_global_var('func_2119')
func_2123_call = mutated_mod.get_global_var('func_2123')
const_4173 = relay.const([[-4.404778,0.105276],[-3.776281,4.607912],[4.076890,4.538797],[-6.061080,9.703146],[1.208504,5.028896],[3.039025,4.368486],[6.028263,7.703894],[2.849302,-8.143954],[0.352629,-3.099366],[0.610533,-4.532594],[9.660907,-5.116952],[0.645188,1.731037],[-3.315822,8.928817],[3.268511,-3.258468],[2.706083,-8.835680],[0.910977,-0.252157],[-3.768737,-8.099653],[-5.808227,3.165258],[-9.891058,7.729678],[9.371563,-9.844215],[-2.373047,2.175947],[3.323745,-4.339674],[1.937732,0.939114],[8.712590,5.596940],[-8.472300,-6.796608],[-9.368752,-7.294363],[6.860157,-7.884297],[3.772838,-1.471538],[-4.378362,7.645384],[-3.467583,-0.463174],[-6.363761,-2.439876],[6.057110,5.759538],[7.669740,-0.417828],[7.029097,-7.963342],[9.545390,3.861508],[4.002450,-5.574294],[9.820135,0.361471],[2.883005,6.672686],[4.683823,-1.312881],[6.734574,7.896726],[3.688304,1.769146],[-6.199034,8.468906],[-5.267201,-4.637268],[-5.385311,-0.945535],[-3.715807,1.670766],[8.937530,4.159911],[-0.319071,-0.508413],[-4.596180,-2.187959],[4.588629,-8.581520],[9.297465,3.874299],[0.371892,-0.835779],[-2.124713,2.062835],[-3.294731,8.884641],[-2.450309,1.942934],[-3.382164,-3.991193],[4.746115,-4.812696],[-9.444512,-9.371487],[-6.550931,-3.524382],[-9.072599,4.764700],[8.884495,4.721366],[-4.833927,7.917807],[-3.505123,4.730366],[-3.898710,9.189250],[3.806496,2.792640],[-4.430161,7.502654],[2.536590,-5.098382],[-5.967118,2.338700],[2.035212,-1.676300],[1.747218,-8.759722],[-8.638660,-8.503630],[5.984129,-6.719389],[7.432156,8.280152],[0.941223,-5.454518],[-3.955636,-8.700899],[-4.532908,-7.298913],[2.033051,8.454443],[-1.141150,-0.061657],[-0.727517,-7.631189],[-4.213572,-1.226644],[-7.621944,0.186870],[-8.722770,-9.976941],[4.235756,-6.155706],[-0.837774,5.710451],[6.361776,-9.892034],[-0.997742,-4.085603],[2.257126,-4.268105],[3.750468,1.603385],[-0.497359,2.288791],[-4.180728,4.890808],[2.264161,-2.849801],[-5.894095,4.157640],[-8.452676,-8.765388],[-0.732532,6.654985],[3.611039,7.776647],[-0.005984,-8.568174],[0.530233,-5.886971],[7.380151,1.558041],[8.824568,4.261881],[3.755656,2.709250],[-2.364334,-0.693998],[-6.299409,9.479651],[-5.700250,-0.272631],[5.413548,1.091281],[-0.732565,8.981920],[-1.361100,-0.351059],[-7.325841,1.465644],[-0.840074,1.800483],[-4.252427,7.243141],[-9.828605,-1.096103],[1.704987,7.819212],[3.693326,-0.233568],[-9.044284,-5.517671],[-0.712800,-7.202214],[-4.001378,1.459899],[-3.799928,2.279226],[-7.153799,2.628570],[8.373303,6.922724],[-1.444680,-4.347091],[-2.286607,-9.487548],[-7.525450,2.706911],[8.278328,6.818746],[9.785834,4.035120],[5.453391,2.178363],[7.201169,-0.298645],[-6.083113,-6.438968],[5.662085,6.252550],[0.445654,-1.884166],[-3.184820,-7.092956],[-3.632731,6.770800],[-3.897454,4.887217],[4.873090,-9.750180],[-1.743200,-2.196545],[-2.990765,5.697775],[4.132018,0.939043],[-5.362093,-6.051981],[6.868558,4.911128],[-5.073901,-8.216182],[6.959244,-2.538809],[-4.521248,5.471604],[-5.439879,3.608020],[-3.506368,-8.038016],[5.539820,-7.778757],[4.098380,-2.376719],[-4.337075,-2.257830],[-9.384078,7.860394],[7.947255,6.261661],[-7.751715,-4.964033],[-0.842840,-5.599917],[-8.666002,-9.191953],[-5.501992,-7.238296],[8.388173,4.043495],[-0.350767,-6.197450],[-8.201951,-7.896666],[7.091383,5.010059],[-3.050674,-6.245153],[8.517134,-9.162697],[3.474604,-8.311772],[6.767333,-8.152083],[3.522780,-6.907090],[7.672724,3.016999],[5.889964,3.042431],[4.229150,-2.625252],[-1.426650,-6.115739],[1.601011,-6.556212],[3.290067,3.566158],[3.199398,6.989147],[1.151921,-5.453333],[-4.424778,-4.292903],[3.697956,-2.161947],[-5.186463,-7.208143],[-1.972414,-1.971457],[3.925025,-7.452994],[6.698015,-4.728881],[1.693816,-0.564596],[8.252147,-4.864271],[-3.324088,1.776537],[-6.777338,-9.414983],[8.872849,-3.510664],[7.685189,2.578661],[8.542136,5.440730],[4.036284,4.830924],[1.258577,7.742027],[-3.774457,-3.126922],[-5.689231,-2.019785],[1.094680,2.100146],[9.696214,-5.188075],[8.088886,-8.588029],[-2.193330,1.919457],[0.471123,-9.137404],[-5.498141,7.938884],[3.645586,7.986008],[-7.308185,9.700059],[-4.834520,-0.394443],[-4.916367,-9.276584],[-9.998419,-1.447887],[-0.910113,8.084809],[-6.521605,-3.963188],[9.196837,4.068857],[9.568477,4.378319],[-0.385085,-4.317296],[3.140315,-9.664466],[9.057771,2.616444],[0.525131,-1.059019],[-1.312255,8.815917],[-5.555099,5.475695],[-5.017779,-6.199471],[-9.266250,6.643591],[-8.898472,3.345603],[-8.209100,2.026743],[3.405301,1.568495],[-4.419878,-0.649556],[6.445124,0.613732],[-9.290003,-9.191928],[0.346251,-7.838761],[-4.108470,-8.946025],[0.482377,-1.282167],[-5.103344,-8.218151],[6.929425,-2.575611],[5.469700,-6.196108],[0.476144,-7.948540],[-7.547494,-7.583791],[-4.648200,7.776867],[-6.527933,0.896678],[-0.886601,5.386305],[-7.695194,-6.183203],[4.476662,6.758934],[1.309380,-4.542681],[-3.430255,-9.247833],[2.892392,-1.433140],[-0.844206,-2.487941],[-3.295604,-1.748477],[4.783631,1.491656],[4.504449,5.136712],[-5.188067,-6.165231],[-8.720822,-3.262248],[9.968163,-9.758200],[3.091832,-1.635387],[-0.005486,-8.762364],[3.994024,9.995110],[-9.833991,-9.391462],[-3.241079,1.978651],[-0.477718,4.765654],[-6.436148,6.791325],[-0.459204,-0.101779],[6.079771,8.577732],[8.073124,-0.968743],[5.267457,4.597084],[-2.650623,3.083724],[-7.291055,0.707184],[-4.712027,6.194377],[7.509548,4.797265],[-9.051272,1.918395],[-9.306261,-7.147670],[0.346276,-0.563098],[-2.255256,-2.817697],[0.234074,-6.294052],[-5.257253,2.648100],[-0.675078,9.833599],[0.747306,3.589021],[-0.578896,9.630324],[-0.931137,-0.822463],[-0.547146,-3.825515],[5.339878,4.037707],[-0.777140,-6.210483],[-8.267434,-8.689051],[-9.841160,-9.810950],[-0.692640,-3.066617],[-1.130701,9.196209],[2.409153,-9.909477],[5.216921,-8.669312],[-9.640622,3.878371],[8.432644,2.450859],[9.532050,-3.678666],[-3.039861,-8.984386],[2.770902,8.359827],[-2.537231,-0.425878],[4.053342,-7.727071],[8.594656,6.075864],[-0.776537,-1.724168],[-5.596699,0.203286],[7.944621,1.861600],[-1.573932,-2.547873],[-3.368991,-5.272669],[1.026608,-3.121266],[7.347223,8.881683],[-4.289304,-6.108850],[0.261363,-9.183282],[5.638093,-3.906304],[-5.696660,-8.616638],[4.109679,-6.932478],[-7.370535,-4.737294],[3.878268,-9.079498],[8.983571,5.646082],[-3.448734,6.324469],[-7.244569,6.646768],[0.029333,5.480641],[-3.178163,9.027677],[-5.453570,8.028284],[-4.989260,-0.523111],[8.838558,-3.299258],[-8.885290,-6.334207],[-3.173815,4.672504],[8.832998,-6.702618],[-3.177271,-4.924250],[3.223585,-1.843857],[5.311754,-5.169020],[1.175897,2.379810],[-0.423944,-6.732107],[1.483406,5.968704],[-1.811053,4.852622],[-3.505552,-2.050100],[9.474727,1.814291],[-7.874171,-2.149965],[3.670075,4.729664],[-8.222244,2.010498],[0.850043,8.869452],[-4.911412,-6.122360],[4.403659,5.655938],[0.022941,-3.567316],[-8.585378,1.530307],[0.439046,3.440442],[-9.577957,-3.563928],[1.178027,7.466368],[0.933665,-4.835758],[-6.178617,-6.495339],[-9.021491,5.511390],[1.274820,-8.801549],[6.317167,8.402057],[8.606547,3.068124],[9.816870,-2.877166],[-6.033047,2.043409],[1.245747,0.659579],[-8.019203,2.592896],[0.014814,-9.221356],[2.429138,6.685803],[-1.017069,4.123617],[5.547400,-3.116503],[-9.388228,5.628907],[-2.466841,-3.412073],[-1.690955,4.235902],[0.823770,1.777655],[9.211730,-9.413377],[-7.485581,4.075141],[-2.513192,8.825317],[-5.279803,-9.518722],[-0.711955,4.221598],[7.793411,-1.181379],[6.204109,-5.378253],[4.733997,-7.592406],[-1.408623,4.409975],[-6.076853,9.673998],[3.217928,-9.874888],[-6.767848,0.244681],[-1.705517,-9.242288],[-4.610071,-0.835741],[-7.701772,3.660142],[-9.410875,6.320224],[-5.701559,-5.654844],[9.155845,2.012082],[-7.907546,-5.152560],[-7.957797,7.927502],[-7.966905,-3.526852],[1.647609,6.953346],[-4.717849,3.149952],[-4.108148,2.689811],[0.015347,1.484569],[1.559557,0.798034],[-0.355794,9.979016],[8.145045,5.765454],[-5.078423,6.288490],[-5.326119,5.433222],[1.676490,-4.373940],[8.665433,-5.262367],[9.613984,-5.259369],[-5.178854,-7.200623],[8.091212,8.077293],[-9.563441,3.752010],[2.709422,-6.011755],[8.709833,-2.384475],[-9.337239,-4.719047],[-3.608759,-2.659932],[-3.795022,-5.179123],[8.552649,8.989612],[-1.171048,1.648663],[0.326059,3.438496],[6.977910,0.899786],[-0.597838,6.795963],[-1.496291,-2.863548],[-1.435317,-1.397442],[9.823829,5.928566],[2.945068,-0.618488],[-9.892591,-7.072773],[-2.225600,-1.041446],[-7.508620,-6.623295],[3.259876,9.218504],[0.947070,-2.674626],[5.261037,-5.979108],[9.109730,1.037681],[-5.769856,3.710778],[0.650887,-3.064274],[0.674760,-1.899082],[-8.762829,-0.075090],[-2.577605,6.142953],[-0.214992,-7.418782],[-4.098546,-7.493603],[-8.603803,-2.086931],[9.224575,9.532300],[-0.688195,-2.214892],[-9.551596,0.056075],[7.234244,-0.170244],[4.634823,4.644141],[8.793806,0.084837],[-9.249850,-7.588663],[1.407870,1.512861],[-3.980161,-8.116762],[7.685929,-1.584339],[0.911693,-0.002633],[-2.349491,-5.621533],[0.193344,9.158475],[3.159873,-7.915662],[-4.754169,7.926887],[-3.568071,9.129217],[9.501654,4.050037],[-5.544440,0.203755],[8.374344,8.097416],[-9.527104,1.228609],[8.622199,8.061138],[-3.858259,4.834476],[-7.275295,-9.567414],[2.765124,6.377769],[7.933514,1.043859],[-9.736937,9.687231],[6.334046,1.622138],[9.594027,7.685792],[5.863125,1.442703],[-5.985549,7.386502],[6.826648,2.444844],[9.687486,-2.016707],[3.559044,-7.592916],[-6.609427,8.149565],[-2.259414,8.150262],[-0.129601,3.795336],[0.076112,3.722807],[5.377879,-1.935854],[-6.184408,4.938134],[-0.963521,9.746279],[-4.050621,-4.924377],[2.355341,-3.771115],[-5.779968,1.240380],[-4.464078,2.348645],[-7.027601,2.119386],[7.919490,-2.797512],[-8.272345,4.825436],[5.596156,-3.349316],[-7.046103,-3.086121],[2.848633,-8.624107],[8.608996,-1.364404],[-9.189517,5.477167],[-2.812150,-8.587000],[5.021418,1.432180],[-3.888117,-6.045901],[7.016508,8.918216],[5.990545,-6.946126],[-4.108120,0.813515],[-0.417953,0.630506],[7.126021,5.037892],[-5.848247,7.541107],[8.399763,3.844558],[0.393710,9.553152],[-3.145352,-7.422007],[8.397478,-3.633554],[9.333728,0.495772],[5.428172,-0.465268],[6.460608,-8.498497],[4.412866,4.461291],[6.406401,4.890164],[0.232319,3.079133],[5.358832,8.618807],[-7.916522,9.469832],[1.668155,-3.692419],[3.357703,3.239018],[-4.035150,-7.393779],[7.823578,-4.926888],[-7.653872,8.790007],[8.831188,-7.126582],[7.677620,6.669725],[8.413162,4.909049],[5.734445,-7.852341],[3.105237,0.932225],[4.322798,7.332081],[-6.027257,9.774752],[9.223062,-2.929874],[-5.761816,-3.009592],[-9.728650,3.558365],[-6.604406,9.063826],[-7.909180,-0.783387],[0.161884,-7.787823],[-2.757055,-7.103537],[0.382508,6.184000],[-6.092992,9.771631],[-1.016903,-1.126382],[3.832038,7.291434],[6.500192,3.238249],[-1.733594,1.510522],[-6.769394,-2.887568],[1.803886,0.189231],[0.492401,-9.534538],[-9.968954,-8.376852],[7.882042,7.142310],[-8.196553,-5.964455],[5.360183,-7.096487],[9.883361,-5.212088],[5.371087,-4.436616],[4.656514,7.136336],[6.684448,-9.609664],[-7.805578,-1.350680],[-5.776451,-5.440750],[-9.296340,-3.666721],[0.650804,0.996430],[-5.790383,-3.000435],[2.125501,-0.810499],[-9.076939,0.662928],[6.658588,9.740845],[-2.603087,0.911162],[3.160737,7.814530],[-0.803065,-1.998800],[-6.866781,1.168587],[3.703469,-1.587457],[-5.522223,8.001982],[7.183259,-1.518596],[-3.554202,-6.612927],[-6.613626,4.018619],[9.440974,3.125228],[-5.400398,4.905519],[-8.139293,0.068036],[-8.052594,-1.359293],[6.711417,7.211369],[-8.074652,0.121164],[6.705028,7.929636],[-7.442232,-6.213243],[8.788978,2.784220],[1.711271,2.408855],[6.972172,9.629830],[-7.482364,6.902134],[4.783455,-2.746670],[-8.000151,-2.814263],[6.996515,3.894750],[1.506961,-4.857412],[-4.860335,-8.846327],[-2.816655,8.311180],[3.125384,-3.355793],[-3.981198,9.985343],[-6.920308,7.613082],[2.820033,0.001609],[9.837411,-4.851620],[-8.398836,0.592075],[1.347740,-7.054981],[1.233948,7.041998],[-0.885180,1.911149],[1.156914,-9.702807],[-6.405471,4.908044],[3.496378,0.564716],[1.345841,7.571876],[-9.982752,-6.407598],[0.293153,7.307757],[-7.869100,4.596051],[-5.318428,8.212187],[7.680243,-3.663424],[1.300413,7.846388],[-6.656004,4.622719],[6.887169,1.129259],[-5.235292,2.504559],[-9.384194,-1.988586],[7.950314,4.639506],[-3.717902,-5.250493],[-7.701035,-8.150408],[-5.949197,-4.209996],[-8.485819,-0.933864],[7.806348,9.455978],[-0.456587,4.342976],[3.075329,3.802896],[5.596034,7.965863],[-9.408254,5.415044],[-5.771893,-1.612006],[8.526557,0.820055],[8.414990,0.630808],[2.277400,-5.693054],[8.004161,-6.581745],[8.388949,-4.081806],[-1.526223,1.720034],[4.711237,0.668107],[-1.533838,-4.488479],[-2.777186,2.242586],[5.259160,-4.448878],[2.875556,-9.280284],[-5.781460,3.985416],[7.444226,-8.447994],[8.222338,-0.010308],[-2.767729,-5.406693],[9.904766,8.246894],[-9.024772,0.076870],[7.958129,-3.444034],[-3.485169,-7.745626],[2.059748,8.497809],[8.971324,-2.059909],[3.884815,4.473529],[-5.802015,-2.621735],[-4.097808,-5.964430],[-6.514415,-9.662034],[2.727668,-3.467026],[-6.761666,2.900924],[-4.544401,-2.123401],[-2.634520,0.089523],[8.061555,-2.873562],[-1.317610,7.592803],[-1.320014,-6.693496],[-8.785797,-4.259253],[5.747775,8.073169],[1.538386,-2.932904],[1.592005,5.661379],[2.212250,1.947024],[0.729169,8.729431],[-6.036615,-3.684363],[-9.915473,8.985801],[-6.097429,-3.974738],[-5.266115,8.607906],[-3.919508,-8.827242],[-4.436878,-9.826880],[-4.436148,-8.593007],[6.067849,5.553264],[-7.313076,-4.351598],[-2.530605,0.308557],[1.107023,8.471901],[-3.784348,-3.377669],[-8.311737,-5.841600],[-1.173404,-3.843949],[5.239091,6.467852],[-8.648243,-9.797978],[-6.865611,6.400162],[5.463050,2.215052],[7.634337,-5.390809],[6.704929,-2.142158],[5.580715,-8.755430],[1.020482,-6.950998],[5.548569,3.687749],[2.334576,5.732727],[-8.503026,-5.871531],[1.503644,1.814078],[-8.420815,-5.772242],[-7.394130,4.994090],[-9.091546,2.385120],[5.126465,-4.361481],[9.253634,-3.561885],[4.077106,4.209692],[1.333187,9.028917],[4.382787,5.634006],[7.076882,-7.072288],[-5.862133,4.122913],[9.948020,9.897110],[5.318964,-1.998785],[5.499598,5.468486],[-6.298846,1.515600],[-1.007921,-9.964171],[4.403970,-8.792443],[-0.619278,-8.044054],[-3.936115,6.720169],[-8.315856,-2.737898],[-0.197056,0.702700],[-6.704490,-6.085136],[3.245386,-6.833038],[1.132026,6.814810],[-3.322687,8.367574],[-2.032880,8.823069],[0.916301,9.825523],[4.253206,3.239715],[-2.393358,-9.474736],[4.516925,8.981405],[-0.524320,0.608122],[-0.078683,-6.442169],[-9.216868,4.030070],[8.999873,7.883829],[2.405925,-7.325397],[4.561850,-9.641218],[-1.417237,-1.712673],[-7.734538,-5.211243],[5.663019,-2.669025],[9.200380,-9.519605],[-8.676668,-8.411947],[-4.290790,-3.108187],[-3.134628,9.545698],[2.940678,6.273618],[-8.735046,7.358361],[7.302303,2.607964],[5.120972,8.426983],[-0.299964,-4.374515],[6.048705,-3.156230],[6.254142,-4.782306],[7.407980,0.935952],[6.699789,5.385246],[-6.554168,-5.401585],[-4.993572,-2.683486],[0.220261,-0.852448],[2.471541,-0.160864],[-1.721291,-7.563918],[-8.039970,9.361795],[-3.047056,-5.370761],[-4.656543,0.514205],[-7.492935,-4.547559],[5.630783,6.636278],[-5.856806,-8.145296],[-7.439472,8.514523],[4.033753,-6.599811],[-5.834578,-2.702584],[-6.070490,-2.421503],[-3.032127,8.624959],[-3.506257,9.900483],[-7.753027,-5.580838],[5.056185,-8.957821],[-5.712223,-0.396651],[-6.064579,7.492294],[-4.546084,1.972740],[-7.765634,9.760943],[-0.064766,9.753602],[5.983924,-8.703843],[3.667948,-4.411985],[-4.182756,7.884197],[-6.812027,-4.261320],[-9.780914,3.849627],[1.091362,-8.860047],[5.167292,-4.930995],[-7.013160,-0.209315],[7.100805,-6.140041],[9.503948,1.347119],[6.503731,-9.769556],[-3.210483,-6.059105],[-6.347759,8.133635],[2.921785,2.821635],[-1.419124,-5.541046],[-0.711050,-5.755869],[7.812630,-4.338100],[3.224008,-2.017080],[-8.221806,6.129110],[-2.736522,-6.577581],[9.744615,-1.005977],[8.737630,0.298025],[-0.249041,-6.517622],[-8.991142,-5.887550],[3.898339,2.581624],[-6.435204,-2.247225],[-8.859034,6.739406],[6.440028,-2.300572],[2.866372,8.057782],[-0.087868,-0.998685],[-9.825640,9.099068],[2.277144,3.942345],[0.903905,-1.289819],[-0.104436,-7.087137],[-4.101225,8.954795],[3.111494,-7.564351],[1.730003,5.271479],[2.296315,-4.518779],[8.026615,-2.770219],[0.278351,4.755450],[-2.352975,-2.846750],[-9.037604,-8.804515],[-1.492185,3.776407],[5.055670,-8.141072],[5.394766,-4.540186],[-1.505376,3.914954],[7.572807,-6.675254],[3.345680,9.004406],[3.001130,-5.612994],[-9.873981,-1.479731],[5.998862,4.359318],[-5.864058,2.124936],[6.025391,-9.980364],[-9.551978,4.697808],[8.771518,-7.226070],[-2.519864,3.786472],[8.907435,5.481821],[-4.125488,-2.641220],[1.757229,-3.218744],[9.731443,-1.950226],[6.570685,-8.828438],[-7.821485,2.448561],[-7.487001,-7.658309],[9.541914,-6.556006],[6.963246,8.930961],[-4.724368,8.179343],[6.390757,7.461732],[3.562774,4.197898],[-2.662842,-3.685742],[-7.802655,-4.219774],[2.510640,0.120383],[-0.714564,9.778035],[8.110191,6.536030],[-2.490045,-6.986455],[-7.412662,2.514216],[7.762895,7.088364],[-0.087744,-6.233809],[5.252818,9.596367],[2.394406,-9.579234],[2.676214,6.466697],[-5.379314,-2.691136],[-1.287973,-3.158354],[-5.847133,-6.477232],[-5.891344,5.407574],[-2.232066,8.127003],[-4.089369,-9.114305],[7.046076,-6.026892],[6.408863,-3.903400],[-6.474547,-0.163297],[3.705364,-5.295101],[-1.480516,8.693697],[-7.602857,-5.961202],[-5.483636,-8.156731],[-0.088480,-1.425818],[8.331047,-1.998717],[-3.093550,-3.242518],[9.263056,1.443773],[7.323136,-6.937564],[6.355302,0.949434],[-2.217414,-1.088537],[3.306995,-4.695363],[6.331303,-9.746107],[1.478100,6.055508],[4.231296,-6.133186],[7.761444,4.323275],[6.588060,-0.391092],[5.091617,-6.582047],[1.841029,-0.108454],[-2.482699,4.177787],[0.098569,-2.252581],[-8.434652,-4.104777],[-1.990523,8.388469],[7.599493,-5.712158],[-9.311596,0.272431],[-0.702785,-5.567923],[-8.171292,6.936186],[0.573818,-1.203836],[-4.319119,3.382073],[6.587748,-7.472896],[-7.952576,4.471704],[-1.837980,8.979072],[-6.368941,-7.996173],[-9.200437,5.993376],[6.096589,2.350386],[5.201998,7.786722],[6.267531,-3.629417],[-4.503505,-1.071865],[-9.956393,-9.290054],[1.777447,-0.151580],[-9.444438,5.064345],[4.094995,1.454720],[8.852509,7.556340],[5.787023,-4.830678],[9.207501,6.600045],[1.754048,-9.921197],[3.376158,-6.527574],[-9.949053,-9.562689],[2.326252,-3.803103],[-0.212826,6.906121],[-1.741153,-6.669512],[3.285635,-9.371701],[-8.322951,-5.842505],[8.667878,4.522924],[-5.866125,-9.653349],[-2.192109,3.860649],[-6.857732,-6.361534],[-2.104699,-6.303748],[-6.444639,-1.803701],[6.909642,-1.720524],[-0.196412,2.811833],[-2.105520,-5.631809],[-6.507768,1.665708],[8.875216,-7.692850],[-5.805280,9.768874],[-6.291436,-7.519263],[-4.551994,-0.053484],[9.871509,4.427346],[4.738639,-5.745274],[-6.017709,-3.184308],[7.759889,8.369954],[9.764419,-4.999212],[0.918839,-3.891675],[8.073653,-3.673064],[1.707160,7.245287],[-7.729041,-1.476524],[3.862167,4.864602],[7.967193,-7.657821],[5.903816,5.303310],[6.597637,4.774585],[0.465908,-1.965777],[-2.831716,1.014020],[8.020200,-1.376958],[9.678552,7.303697],[7.291605,-4.779501],[5.867106,2.822080],[2.590110,8.096828],[-0.917791,4.729283],[-9.200400,-8.775444],[-9.372101,-3.649496],[-9.382364,8.126843],[4.291484,-8.009027],[0.606252,2.463454],[0.952393,-4.991811],[4.634122,7.802663],[-9.284308,-4.495755],[-4.623963,3.127195],[-7.462288,-4.880994],[-3.095338,-3.755257],[7.779231,9.060638],[-2.518401,5.733014],[8.929489,-6.035159],[2.888131,9.768776],[-7.986048,-3.242525],[-0.306165,7.148361],[9.694807,-7.491290],[-7.170681,5.170463],[1.786945,-2.625209],[7.953474,-6.179873],[9.092735,5.453663],[-4.002510,-8.372315],[-9.234242,-7.516079],[-0.666354,9.081986],[2.046601,-6.640736],[4.171665,8.057129],[-8.266897,-6.080722],[7.417767,-5.768892],[4.424899,1.791242],[-6.241742,-6.295555],[-7.093026,-7.089169],[-1.839038,-5.223373],[0.959583,1.750688],[-4.609504,6.733412],[9.000562,-8.387683]], dtype = "float64")#candidate|4173|(936, 2)|const|float64
call_4172 = relay.TupleGetItem(func_2119_call(relay.reshape(const_4173.astype('float64'), [9, 13, 16]), relay.reshape(const_4173.astype('float64'), [9, 13, 16]), ), 0)
call_4174 = relay.TupleGetItem(func_2123_call(relay.reshape(const_4173.astype('float64'), [9, 13, 16]), relay.reshape(const_4173.astype('float64'), [9, 13, 16]), ), 0)
output = relay.Tuple([bop_4167,call_4172,const_4173,])
output2 = relay.Tuple([bop_4170,call_4174,const_4173,])
func_4184 = relay.Function([var_4166,], output)
mod['func_4184'] = func_4184
mod = relay.transform.InferType()(mod)
mutated_mod['func_4184'] = func_4184
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4185 = relay.var("var_4185", dtype = "int64", shape = (12, 15, 6))#candidate|4185|(12, 15, 6)|var|int64
func_4184_call = mutated_mod.get_global_var('func_4184')
call_4186 = func_4184_call(var_4185)
output = call_4186
func_4187 = relay.Function([var_4185], output)
mutated_mod['func_4187'] = func_4187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3405_call = mod.get_global_var('func_3405')
func_3406_call = mutated_mod.get_global_var('func_3406')
call_4223 = relay.TupleGetItem(func_3405_call(), 0)
call_4224 = relay.TupleGetItem(func_3406_call(), 0)
uop_4236 = relay.sin(call_4223.astype('float64')) # shape=(1, 15, 6)
uop_4238 = relay.sin(call_4224.astype('float64')) # shape=(1, 15, 6)
func_971_call = mod.get_global_var('func_971')
func_974_call = mutated_mod.get_global_var('func_974')
var_4243 = relay.var("var_4243", dtype = "uint32", shape = ())#candidate|4243|()|var|uint32
const_4244 = relay.const([-4,-3,-3,-3,-9,-8,1,-8,9,-2,6,7,2,-3,8,1,10,10,-9,6,3,7,-1,10,-2,-8,-10,6,-6,8,-6,-3,-3,2,5,-9,1,2,-10,-1,9,-3], dtype = "uint32")#candidate|4244|(42,)|const|uint32
call_4242 = relay.TupleGetItem(func_971_call(relay.reshape(var_4243.astype('uint32'), []), relay.reshape(const_4244.astype('uint32'), [7, 6, 1]), ), 0)
call_4245 = relay.TupleGetItem(func_974_call(relay.reshape(var_4243.astype('uint32'), []), relay.reshape(const_4244.astype('uint32'), [7, 6, 1]), ), 0)
var_4250 = relay.var("var_4250", dtype = "int64", shape = (15, 15, 6))#candidate|4250|(15, 15, 6)|var|int64
bop_4251 = relay.right_shift(call_4223.astype('int64'), var_4250.astype('int64')) # shape=(15, 15, 6)
bop_4254 = relay.right_shift(call_4224.astype('int64'), var_4250.astype('int64')) # shape=(15, 15, 6)
func_2174_call = mod.get_global_var('func_2174')
func_2175_call = mutated_mod.get_global_var('func_2175')
call_4255 = func_2174_call()
call_4256 = func_2174_call()
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
const_4265 = relay.const([True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,False,True], dtype = "bool")#candidate|4265|(176,)|const|bool
call_4264 = relay.TupleGetItem(func_1022_call(relay.reshape(const_4265.astype('bool'), [11, 8, 2])), 0)
call_4266 = relay.TupleGetItem(func_1024_call(relay.reshape(const_4265.astype('bool'), [11, 8, 2])), 0)
func_2137_call = mod.get_global_var('func_2137')
func_2140_call = mutated_mod.get_global_var('func_2140')
const_4282 = relay.const([-4.909364,2.695293,8.745495,5.981247,-5.778542,-2.755313,-6.740832,3.996715,1.690977,-3.520176,-1.714911,-1.521826,8.571539,7.911136,-1.658944,2.880325,-8.865756,0.961829,-3.463503,4.654898,-0.650845,6.009346,-4.105138,-6.067968,8.345289,5.628622,-8.219065,2.932442,-5.861540,8.217107,-8.771080,6.198818,6.857956,-4.999746,-6.303689,7.315377,8.019799,3.882769,7.671497,-2.743437,0.376886,-6.332318,2.432089,3.069611,-0.713398,-4.620423,8.072615,-7.811397,-0.756235,1.163568,-8.157007,-5.863370,1.265530,7.144103,2.548361,5.133491,0.297983,7.506851,4.026461,-4.447683,7.190875,-4.919165,8.522846,0.061364,-7.209208,-5.674008,1.350710,-8.924387,-6.440134,9.315601,0.805859,-6.947191,4.629062,2.042594,-4.520634,-9.341230,8.610919,5.647199,2.477410,-3.668442,6.355034,-3.914616,2.617042,3.558543,0.764015,-8.228203,-5.674150,1.165498,-2.267404,-1.714670,2.738042,-7.988009,-8.399791,5.809793,-7.757347,7.506205,-6.357407,0.504378,-1.463073,1.503333,4.990085,0.891227,9.662724,4.908802,0.576590,-1.474454,9.580485,8.770319,-2.454778,2.211745,4.294417,-5.934024,0.167029,4.700247,9.229030,0.454195,-0.785190,-2.200079,3.235981,1.448401,1.878333,2.124545,-2.518182,-8.889588,6.997187,-3.023459,-3.896261,-9.706926,-1.202857,-8.027946,4.040260,-6.473202,-3.959921,1.578405,0.754177,-9.371174,-4.484707,3.222618,6.640671,-9.243412,1.945432,7.028610,9.218297,8.829957,6.258576,9.162141,3.128842,4.115992,-8.002776,-1.938047,8.455866,1.826856,-7.108405,0.838377], dtype = "float64")#candidate|4282|(154,)|const|float64
call_4281 = relay.TupleGetItem(func_2137_call(relay.reshape(const_4282.astype('float64'), [11, 1, 14])), 0)
call_4283 = relay.TupleGetItem(func_2140_call(relay.reshape(const_4282.astype('float64'), [11, 1, 14])), 0)
output = relay.Tuple([uop_4236,call_4242,var_4243,const_4244,bop_4251,call_4255,call_4264,const_4265,call_4281,const_4282,])
output2 = relay.Tuple([uop_4238,call_4245,var_4243,const_4244,bop_4254,call_4256,call_4266,const_4265,call_4283,const_4282,])
func_4307 = relay.Function([var_4243,var_4250,], output)
mod['func_4307'] = func_4307
mod = relay.transform.InferType()(mod)
var_4308 = relay.var("var_4308", dtype = "uint32", shape = ())#candidate|4308|()|var|uint32
var_4309 = relay.var("var_4309", dtype = "int64", shape = (15, 15, 6))#candidate|4309|(15, 15, 6)|var|int64
output = func_4307(var_4308,var_4309,)
func_4310 = relay.Function([var_4308,var_4309,], output)
mutated_mod['func_4310'] = func_4310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2292_call = mod.get_global_var('func_2292')
func_2294_call = mutated_mod.get_global_var('func_2294')
call_4317 = func_2292_call()
call_4318 = func_2292_call()
func_3738_call = mod.get_global_var('func_3738')
func_3741_call = mutated_mod.get_global_var('func_3741')
const_4320 = relay.const([7,4,-9,-4,3,3,1,1,-10,8,-9,-6,-4,-9,-7,-5,-2,8,5,-4,-3,6,-8,-3,3,8,2,10,4,-8,-8,9,-4,-1,8,9,-2,-7,-1,1,-6,3,2,1,-5,-10,1,-2,6,-6,-9,-6,-10,-3,7,-5,4,10,-3,3,1,-10,-3,-9,-6,-5,-2,3,-6,-2,-10,-8,7,2,1,10,9,4,4,2,10,2,8,3,4,9,-2,-10,-6,-9,-8,-7,-8,-10,6,-2,-1,8,4,7,7,-3,4,-10,-6,7,7,-2,7,-9,7,-1,10,10,-3,1,5,-10,9,-1,-8,-10,2,-2,-3,-4,-4,9,-8,-7,7,10,-4,-3,10,-10,10,-3,-2,-3,-6,5,6,6,-2,5,-3,-1,7,1,-8,8,-1,-2,8,7,-4,5,-4,-4,-4,-6,-5,-3,1,-2,7,8,-10,2,-8,1,-1,4,9,-4,6,-1,8,-1,-10,-9,2,-4,10,10,4,9,-2,-1,-10,6,-6,5,1,-3,1,-7,-1,-5,8,6,1,-5,8,-3,-2,4,-6,-2,-7,9,8,2,8,10,-5,5,-4,8,-10,-2,-2,2,7,6,-10,-3,10,10,3,3,8,3,-2,-6,3,-7,-6,10,5,-7,-10,5,-4,-9,5,-4,-2,7,-7,8,-2,-3,-4,-4,-1,-3,-1,-1,3,3,-2,3,3,9,4,10,-2,6,9,4,3,9,8,-1,1,-1,3,8,5,-6,5,-4,-2,-3,-2,-9,6,1,1,7,7,7,-5,4,4,-8,9,-4,-6,-1,5,5,9,7,7,-4,-5,4,5,9,-1,8,1,-10,10,7,-1,-7,8,2,8,-2,6,3,6,-1,-1,7,-1,-10,6,6,-10,10,9,-5,-8,9,3,-7,6,-7,9,10,1,-2,-9,-4,3,7,6,8,9,1,-3,-10,-6,-7,-1,6,-9,8,-9,7,8,4,5,1,-3,-5,-9,-5,-4,-2,1,6,8,-10,-10,-9,-2,-4,6,3,8,-6,-7,-3,-5,-7,-5,-8,8,-10,-6,7,-1,-9,6,8,1,2,3,8,-2,-4,-9,2,2,-6,-2,-8,-5,1,8,7,1,7,7,-4,2,10,2,-1,-5,-3,-1,9,8,1,-7,-5,-10,-4,2,7,-8,5,8,-6,-4,-9,10,3,8,-3,-2,5,3,-10,9,-8,4,-9,-1,5,-4,2,-2,3,9,-7,4,-5,-1,-3,2,-7,7,9,9,-5,10,-6,-2,-2,-4,-4,-1,7,-5,10,4,-4,-1,10,6,-2,3,-9,-8,-8,10,-3,2,-2,-2,2,10,-6,-8,-3,-4,-1,7,-3,-10,9,4,2,-4,1,-7,-2,1,-9,6,5,9,8,3,2,4,-5,3,-2,-2,-3,-10,-7,6,-1,-10,-4,-10,6,6,7,9,-8,-9,-7,5,-1,6,-5,-6,5,-1,-8,3,-6,-3,-9,-7,5,7,-9,2,9,-8,2,-1,3,-8,-6,-6,-10,-5,1,3,-10,-8,7,6,9,2,-9,8,6,-4,9,-5,1,5,4,10,2,-2,9,5,-4,-1,10,7,-7,8,-1,4,-5,-5,-9,-2,2,-10,-1,-9,3,-10,-1,-9,-9,4,-4,-3,-7,7,-1,7,-4,-4,-3,2,5,9,10,-2,-8,1,5,10,-2,8,-7,-9,-3,6,6,-3,1,-6,-1,1,7,3,8,3,-10,3,5,8,5,-3,-5,3,-8,8,9,3,3,-7,-9,1,1,-9,-8,-2,3,5,2,4,8,1,3,-1,-10,-9,1,8,-8,8,-4,-10,-8,4,4,1,-10,-7,-8,1,-1,7,-2,5,2,5,-6,2,1,-5,4,7,2,-6,6,-8,-10,8,2,2,-7,-1,-4,-6,-10,2,-8,-7,6,-1,-3,-9,8,2,1,3,3,-10,6,3,-8,10,-7,8,-2,-6,-2,7,2,-9,5,4,5,-4,1,-8,6,9,-7,-7,-10,4,-7,1,10,6,-1,1,4,10,7,-6,-8,-4,-4,3,-3,-5,6,2,5,1,-6,-5,-10,-8,4,9,1,-8,6,8,-8,2,8,-2,-1,10,-5,-10,1,-3,-1,9,-6,6,6,-1,-6,8,6,6,3,7,-2,-5,6,-10,-8,1,-3,6,-1,-4,10,1,-2,-5,3,-2,-2,10,3,-7,6,-7,-4,-8,9,-4,-4,7,1,8,6,1,-7,6,-10,2,-10,6,-3,-3,-6,1,1,5,-10,6,-3,3,-7,-1,-3,-6,4,-1,6,-9,-10,-2,10,2,10,-7,-2,-4,-1,-9,-10,9,7,-2,3,-7,2,5,9,-2,-5,4,9,-8,5,-7,2,-10,6,-4,-3,-6,-10,-7,-8,8,7,-3,-9,9,10,-10,1,-1,-2,-10,6,10,-8,-5,-5,2,-6,-10,-5,1,-6,8,-3,-6,4,1,-3,7,7,8,6,8,4,-7,7,-4,8,-2,-1,-7,-6,6,-9,-3,-5,-2,2,3,6,-4,-7,-7,10,-8,-10,7,-3,-9,8,-1,-2,5,3,-9,7,3,6,3,-1,-9,7,-1,1,-5,10,3,8,-8,-8,-9,4,1,6,-6,-4,-10,-10,-1,10,1,1,4,4,10,10,-8,-3,-4,2,6,4,-9,8,7,-6,-8,4,6,-3,-1,8,-7,8,-2,1,6,-7,-10,-5,-2,7,7,1,1,-2,9,10,4,9,-8,-5,6,1,8,-2,8,10,1,9,-5,6,10,10,-4,10,-9,-10,9,-2,-9,7,4,-1,9,10,-8,10,2,1,-10,10,8,-6,-1,-5,-3,-6,-2,-5,-6,8,9,3,7,7,-9,-9,-7,5,5,10,6,6,-4,10,-4,-5,6,4,4,-3,10,-9,8,9,-7,1,5,-1,6,9,2,7,-4,1,4,-2,-7,3,6,-9,9,8,5,4,-3,-5,9,-2,5,-2,9,-3,-4,4,-8,-4,-10,2,-4,-1,9,1,-10,-2,8,1,-5,-4,1,-10,-10,8,7,-9,6,7,6,5,10,-10,-9,-6,5,5,9,-7,-2,-10,4,-1,7,-8,-5,-10,8,5,-1,6,-2,-6,-6,1,9,-6,-1,5,-4,-3,-4,8,-5,1,-6,3,-8,1,1,4,3,5,9,-2,-3,-6,1,10,6,1,-10,10,-3,-6,4,8,-3,3,-3,7,-1,-4,4,8,9,4,6,-1,-6,5,8,7,-6,-3,7,-6,10,1,-6,-8,10,6,3,-5,4,-10,1,2,-10,-6,-5,-3,4,1,-7,-5,-8,-3,8,-3,-5,-3,-10,6,9,5,6,-9,4,-10,-10,7,8,10,-7,-6,-5,1,-5,-3,10,-8,-6,9,-8,2,-4,7,-9,7,9,-8], dtype = "uint8")#candidate|4320|(1280,)|const|uint8
call_4319 = relay.TupleGetItem(func_3738_call(relay.reshape(const_4320.astype('uint8'), [16, 80])), 1)
call_4321 = relay.TupleGetItem(func_3741_call(relay.reshape(const_4320.astype('uint8'), [16, 80])), 1)
func_971_call = mod.get_global_var('func_971')
func_974_call = mutated_mod.get_global_var('func_974')
const_4325 = relay.const(-6, dtype = "uint32")#candidate|4325|()|const|uint32
const_4326 = relay.const([-8,3,-9,10,-10,3,5,-1,-8,4,-2,9,10,10,-6,2,9,5,-4,-4,-2,-2,-8,-1,-7,4,-8,7,-4,6,7,-5,5,4,3,-4,4,-5,8,-1,-3,-6], dtype = "uint32")#candidate|4326|(42,)|const|uint32
call_4324 = relay.TupleGetItem(func_971_call(relay.reshape(const_4325.astype('uint32'), []), relay.reshape(const_4326.astype('uint32'), [7, 6, 1]), ), 0)
call_4327 = relay.TupleGetItem(func_974_call(relay.reshape(const_4325.astype('uint32'), []), relay.reshape(const_4326.astype('uint32'), [7, 6, 1]), ), 0)
output = relay.Tuple([call_4317,call_4319,const_4320,call_4324,const_4325,const_4326,])
output2 = relay.Tuple([call_4318,call_4321,const_4320,call_4327,const_4325,const_4326,])
func_4328 = relay.Function([], output)
mod['func_4328'] = func_4328
mod = relay.transform.InferType()(mod)
mutated_mod['func_4328'] = func_4328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mutated_mod.get_global_var('func_4328')
call_4329 = func_4328_call()
output = call_4329
func_4330 = relay.Function([], output)
mutated_mod['func_4330'] = func_4330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3440_call = mod.get_global_var('func_3440')
func_3442_call = mutated_mod.get_global_var('func_3442')
call_4341 = func_3440_call()
call_4342 = func_3440_call()
output = relay.Tuple([call_4341,])
output2 = relay.Tuple([call_4342,])
func_4344 = relay.Function([], output)
mod['func_4344'] = func_4344
mod = relay.transform.InferType()(mod)
mutated_mod['func_4344'] = func_4344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4344_call = mutated_mod.get_global_var('func_4344')
call_4345 = func_4344_call()
output = call_4345
func_4346 = relay.Function([], output)
mutated_mod['func_4346'] = func_4346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3915_call = mod.get_global_var('func_3915')
func_3916_call = mutated_mod.get_global_var('func_3916')
call_4353 = relay.TupleGetItem(func_3915_call(), 1)
call_4354 = relay.TupleGetItem(func_3916_call(), 1)
var_4367 = relay.var("var_4367", dtype = "float32", shape = (27, 2))#candidate|4367|(27, 2)|var|float32
bop_4368 = relay.greater_equal(call_4353.astype('bool'), relay.reshape(var_4367.astype('bool'), relay.shape_of(call_4353))) # shape=(27, 2)
bop_4371 = relay.greater_equal(call_4354.astype('bool'), relay.reshape(var_4367.astype('bool'), relay.shape_of(call_4354))) # shape=(27, 2)
bop_4372 = relay.greater(bop_4368.astype('bool'), relay.reshape(call_4353.astype('bool'), relay.shape_of(bop_4368))) # shape=(27, 2)
bop_4375 = relay.greater(bop_4371.astype('bool'), relay.reshape(call_4354.astype('bool'), relay.shape_of(bop_4371))) # shape=(27, 2)
bop_4377 = relay.logical_and(bop_4368.astype('bool'), relay.reshape(bop_4372.astype('bool'), relay.shape_of(bop_4368))) # shape=(27, 2)
bop_4380 = relay.logical_and(bop_4371.astype('bool'), relay.reshape(bop_4375.astype('bool'), relay.shape_of(bop_4371))) # shape=(27, 2)
func_1889_call = mod.get_global_var('func_1889')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_4388 = relay.TupleGetItem(func_1889_call(), 0)
call_4389 = relay.TupleGetItem(func_1890_call(), 0)
output = relay.Tuple([bop_4377,call_4388,])
output2 = relay.Tuple([bop_4380,call_4389,])
func_4395 = relay.Function([var_4367,], output)
mod['func_4395'] = func_4395
mod = relay.transform.InferType()(mod)
var_4396 = relay.var("var_4396", dtype = "float32", shape = (27, 2))#candidate|4396|(27, 2)|var|float32
output = func_4395(var_4396)
func_4397 = relay.Function([var_4396], output)
mutated_mod['func_4397'] = func_4397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2377_call = mod.get_global_var('func_2377')
func_2379_call = mutated_mod.get_global_var('func_2379')
call_4422 = func_2377_call()
call_4423 = func_2377_call()
func_2271_call = mod.get_global_var('func_2271')
func_2273_call = mutated_mod.get_global_var('func_2273')
const_4428 = relay.const([1.054050,8.395190,-8.241504,1.069080,4.307938,-8.354387,7.133246,9.738386,0.085347,-0.668681,9.092614,-0.324195,-7.224928,-8.626235,4.459143,8.480558,3.262082,-9.721463,1.432196,8.647294,2.310098,1.870643,3.729086,9.468405,7.884302,4.950130,1.740533,-6.677568,-3.130085,-9.312804,-3.989908,-2.024884,-8.414946,9.362796,7.143420,-6.273845,9.856305,0.019315,-0.878165,6.942108,-5.413311,-2.690991,-8.091446,5.847017,-8.598951,-3.248691,-6.157066,-9.996337,5.549332,-8.195050,-2.775524,-8.570683,-9.627604,-9.756914,-6.163135,-6.243425,2.345836,2.727324,3.335059,-7.080727,-7.412837,-2.013824,-3.995311,6.734623,9.517214,-9.699073,0.991081,6.387913,-3.680379,-0.035794,9.979983,-2.581820,-5.363624,-9.808650,-5.165984,7.472939,1.828561,1.164710,-9.948535,-5.410165,-2.930444,-1.758925,2.478056,3.451638,3.587883,-7.313435,-4.680581,5.909838,-3.930740,-2.528425,5.441887,9.270236,-8.631789,-5.200013,-2.888035,-5.010458,6.870082,-9.976992,-2.308512,-6.227370,7.735208,-1.344109,5.151450,-3.159041,6.466233,5.269468,-9.793469,1.986972,2.651898,-3.138543,-1.839384,4.779249,5.142127,-2.101841,8.862372,5.931523,-1.868122,0.174436,-7.394010,4.976727,-3.926425,-0.419591,-1.880319,9.486463,6.356860,7.483492,-2.449829,3.430893,-6.770558,3.410420,-4.355166,-4.506074,-8.597544,1.024076,-0.835289,-9.178817,4.123837,2.477234,7.826088,7.015950,-5.041648,-2.536499,9.647576,-6.695091,-6.131819,-0.756178,5.393971,7.428587,-5.918704,-9.771665,8.968665,2.496618,3.004567,-8.336608,-3.153879,0.332089,-8.689648,8.776398,8.658466,1.422085,-4.263720,-2.250628,9.542308,9.961676,-8.454179,-3.022969,6.777244,-7.346659,-7.985339,5.039396,4.857621,-2.484416,-0.850793,6.601598,9.333696,8.758184,-4.731383,4.593713,0.661514,1.371567,-2.596634,-9.936442,-1.964195,-0.256085,5.073094,1.294022,-2.587756,5.572402,5.512228,-5.585577,6.996114,-7.623433,-9.029952,2.456550,9.279268,4.962130,-1.883049,3.078735,0.176994,-6.335505,8.970490,5.198502,5.962496,-6.158922,1.918814,6.010979,5.707806,5.145273,-5.354443,3.172818,5.277411,8.194103,-1.848763,-1.366698,8.942523,0.820832,-6.449119,-0.620262,4.724066,2.083710,-5.227593,6.412348,-3.744312,2.851087,-3.959593,-0.428841,9.209834,2.395836,-6.531313,3.951418,-2.884055,-4.452830,4.470507,-9.556909,-2.028043,-1.858025,7.653753,-5.073724,-2.467070,-5.434070,-5.551533,-0.194720,-6.755023,-7.750575,-2.938419,-2.784175,-8.836887,0.977154,-8.111187,-8.257750,4.111940,3.223352,-9.623541,4.455095,6.122491,8.917414,-0.881846,5.615663,-0.781122,-8.938628,-8.029584,4.728161,1.403527,-2.390154,7.329653,-5.670553,1.261097,1.433385,5.163733,-4.580678,-5.035007,2.763846,-3.781132,2.906105,-3.310191,9.642838,7.651771,4.545899,4.491303,-2.145045,-1.491246,-4.809461,-7.754742,1.740058,-4.385501,-7.885350,-1.483476,2.626897,-7.009006,9.159513,-8.394574,6.942930,6.570970,2.197781,3.462236,4.710528,-6.112040,8.317255,0.335933,0.470333,9.443260,-3.513610,3.064482,-0.752449,9.519066,-0.991013,-6.833166,7.118769,-2.792142,-2.641253,-9.238738,7.892648,7.603404,2.781899,1.285677,-0.900549,-4.051436,-8.699241,0.680256,8.104287,-8.463434,-1.467285,-0.494953,0.679005,-2.785845,-8.671562,6.486361,-5.200911,-3.032757,-0.207870,-3.940201,-3.316132,3.234075,-1.744919,7.134324,7.337520,9.590096,-4.460331,2.935172,-2.762852,-9.943238,-1.556890,-4.842948,-9.377643,-0.466620,-0.480440,-2.363428,8.319807,-8.222576,-3.797142,-3.494690,6.224947,8.258550,1.847467,1.442060,0.642780,-3.898484,-0.442498,-2.834447,6.133798,4.238316,1.247334,7.616546,3.639299,-8.366229,2.526026,-3.762711,-8.734730,4.301134,-8.716298,5.557514,-2.979678,-6.375710,-4.970416,3.793179,1.537316,9.682212,-6.481884,-6.569959,-7.701402,8.553189,8.652151,3.474988,-7.105891,2.029183,0.255819,-2.756497,-6.890304,-4.074779,3.907726,-8.017052,-1.478633,9.910221,-9.378354,9.508520,-5.730931,2.103936,-5.246373,2.449055,7.722494,0.505966,5.888413,-0.249010,-0.777025,-7.284352,-5.427525,8.658746,-4.408705,-3.410577,-4.750572,-8.032636,-2.556465,-2.293102,-3.416313,0.746760,-5.926529,-6.577874,-5.960260,7.044428,-7.822875,-9.952735,-2.188331,5.235497,-8.421470,-4.153118,2.493019,6.286177,-2.712632,-3.176642,2.340019,-0.114382,7.279859,5.023011,6.041888,-9.904016,-3.749215,-5.122219,-6.523374,-5.360593,8.339593,7.516168,5.114188,9.600613,-9.763093,-3.388670,7.260978,9.685906,0.958425,3.471289,0.579422,-0.173565,-3.658934,1.063169,3.457693,-4.471166,-0.447460,4.425445,-2.756769,0.733433,4.564680,4.836840,-6.092464,8.968725,7.114681,-9.298593,-5.602984,3.989382,0.263766,-7.783048,-9.446183,-8.622176,-6.066379,-8.459546,-3.117128,-8.654654,9.636169,-1.995806,-7.987969,7.586503,-6.818088,4.465380,7.887279,-0.454355,5.444484,9.153000,1.286333,-7.561444,5.219749,-4.229025,-2.215367,6.784009,-3.910709,7.648207,9.093258,4.002691,-2.136776,6.272077,6.096984,-8.350499,-4.657754,-5.910156,7.213458,6.195595,0.586820,-6.480828,-8.077607,9.736643,-8.071939,-8.569545,6.961313,9.616532,-9.539414,6.811586,-7.595982,-0.072287,6.363926,-4.679529,0.398262,-5.210155,-1.976503,-4.646906,-7.501776,3.402577,-5.122975,0.742345,2.690369,3.408673,7.356490,9.407290,-4.441140,-7.600901,-2.276535,7.530391,-7.331171,-2.536943,-5.588398,-3.858072,-5.037021,9.889265,2.512000,8.886060,-7.779581,-3.329160,9.873182,0.515271,1.555065,-8.182777,1.987280,1.566850,9.141222,-0.478995,-3.963429,-1.322380,-3.094622,6.272002,-8.789951,3.845201,4.825609,-5.298490,5.048527,-8.257834,1.240508,1.297012,-5.992299,0.101100,-5.021378,-0.022966,-6.981900,-3.771257,-8.572238,-0.923122,-6.614415,5.643923,3.738410,-3.614076,-2.878848,4.317598,1.215186,-8.080743,9.783820,6.999151,0.553576,-8.185283,7.997931,-4.691245,-9.400494,-4.451499,-3.796134,-6.151432,-2.349887,7.954185,1.762046,-2.820884,1.104833,6.223453,-8.265095,-7.366593,-0.450441,9.694569,0.056996,0.384063,-5.641558,-3.699695,-3.192440,-0.744034,-1.822384,8.923448,-3.317949,-2.493682,-4.015194,-5.606332,0.371647,-2.452455,5.138259,0.572364,7.967465,-7.908012,-5.310354,8.335969,3.011370,3.033211,7.752141,-6.244219,1.208761,5.620692,-4.086219,-8.017103,-1.162466,1.588228,7.233097,3.229159,2.416274,-2.056932,-4.570039,-3.331489,-9.179063,2.076095,-6.940313,5.828070,7.699674,8.906259,0.660755,0.968348,-7.091826,7.370619,7.658904,0.096300,5.623910,-1.504941,5.969364,2.614986,2.500405,3.104157,-7.031196,5.697066,0.951757,4.915339,-0.282117,-8.635086,8.662136,-7.173470,-8.666656,-8.413126,-0.268948,-8.959877,9.392979,2.615260,-4.910667,9.048066,1.365032,-3.383516,5.509490,8.193989,-2.497250,3.988537,-6.173252,-4.423375,2.612933,-6.311680,-8.878333,2.208227,-1.701671,-7.745885,3.641028,-5.601145,-3.763887,1.925711,-7.748660,7.019752,-5.546624,2.370859,9.854926,-7.926962,-8.689107,-3.582749,4.402991,-9.587640,-6.499002,-2.668127,-0.847967,-8.015991,-5.916903,8.854419,3.792473,2.775862,8.240180,-2.362266,4.468019,8.317550,5.049586,-0.130960,0.858454,-4.737107,5.402208,4.828392,8.765317,-0.117165,8.965096,6.470696,-4.728799], dtype = "float64")#candidate|4428|(720,)|const|float64
call_4427 = relay.TupleGetItem(func_2271_call(relay.reshape(const_4428.astype('float64'), [8, 15, 6])), 1)
call_4429 = relay.TupleGetItem(func_2273_call(relay.reshape(const_4428.astype('float64'), [8, 15, 6])), 1)
uop_4434 = relay.tan(call_4422.astype('float32')) # shape=(1, 15, 6)
uop_4436 = relay.tan(call_4423.astype('float32')) # shape=(1, 15, 6)
uop_4453 = relay.erf(uop_4434.astype('float32')) # shape=(1, 15, 6)
uop_4455 = relay.erf(uop_4436.astype('float32')) # shape=(1, 15, 6)
output = relay.Tuple([call_4427,const_4428,uop_4453,])
output2 = relay.Tuple([call_4429,const_4428,uop_4455,])
func_4459 = relay.Function([], output)
mod['func_4459'] = func_4459
mod = relay.transform.InferType()(mod)
output = func_4459()
func_4460 = relay.Function([], output)
mutated_mod['func_4460'] = func_4460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3915_call = mod.get_global_var('func_3915')
func_3916_call = mutated_mod.get_global_var('func_3916')
call_4466 = relay.TupleGetItem(func_3915_call(), 0)
call_4467 = relay.TupleGetItem(func_3916_call(), 0)
output = relay.Tuple([call_4466,])
output2 = relay.Tuple([call_4467,])
func_4471 = relay.Function([], output)
mod['func_4471'] = func_4471
mod = relay.transform.InferType()(mod)
output = func_4471()
func_4472 = relay.Function([], output)
mutated_mod['func_4472'] = func_4472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_4483 = func_1212_call()
call_4484 = func_1212_call()
uop_4495 = relay.exp(call_4483.astype('float32')) # shape=(1, 15, 6)
uop_4497 = relay.exp(call_4484.astype('float32')) # shape=(1, 15, 6)
output = relay.Tuple([uop_4495,])
output2 = relay.Tuple([uop_4497,])
func_4502 = relay.Function([], output)
mod['func_4502'] = func_4502
mod = relay.transform.InferType()(mod)
output = func_4502()
func_4503 = relay.Function([], output)
mutated_mod['func_4503'] = func_4503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2510_call = mod.get_global_var('func_2510')
func_2511_call = mutated_mod.get_global_var('func_2511')
call_4517 = func_2510_call()
call_4518 = func_2510_call()
output = call_4517
output2 = call_4518
func_4535 = relay.Function([], output)
mod['func_4535'] = func_4535
mod = relay.transform.InferType()(mod)
output = func_4535()
func_4536 = relay.Function([], output)
mutated_mod['func_4536'] = func_4536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_4537 = relay.TupleGetItem(func_3352_call(), 0)
call_4538 = relay.TupleGetItem(func_3354_call(), 0)
var_4545 = relay.var("var_4545", dtype = "int64", shape = (7, 15, 6))#candidate|4545|(7, 15, 6)|var|int64
bop_4546 = relay.not_equal(call_4537.astype('bool'), var_4545.astype('bool')) # shape=(7, 15, 6)
bop_4549 = relay.not_equal(call_4538.astype('bool'), var_4545.astype('bool')) # shape=(7, 15, 6)
output = relay.Tuple([bop_4546,])
output2 = relay.Tuple([bop_4549,])
func_4557 = relay.Function([var_4545,], output)
mod['func_4557'] = func_4557
mod = relay.transform.InferType()(mod)
mutated_mod['func_4557'] = func_4557
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4558 = relay.var("var_4558", dtype = "int64", shape = (7, 15, 6))#candidate|4558|(7, 15, 6)|var|int64
func_4557_call = mutated_mod.get_global_var('func_4557')
call_4559 = func_4557_call(var_4558)
output = call_4559
func_4560 = relay.Function([var_4558], output)
mutated_mod['func_4560'] = func_4560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_4568 = relay.TupleGetItem(func_3352_call(), 0)
call_4569 = relay.TupleGetItem(func_3354_call(), 0)
output = call_4568
output2 = call_4569
func_4570 = relay.Function([], output)
mod['func_4570'] = func_4570
mod = relay.transform.InferType()(mod)
output = func_4570()
func_4571 = relay.Function([], output)
mutated_mod['func_4571'] = func_4571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4597 = relay.var("var_4597", dtype = "float32", shape = (1, 3))#candidate|4597|(1, 3)|var|float32
var_4598 = relay.var("var_4598", dtype = "float32", shape = (1, 3))#candidate|4598|(1, 3)|var|float32
bop_4599 = relay.not_equal(var_4597.astype('bool'), relay.reshape(var_4598.astype('bool'), relay.shape_of(var_4597))) # shape=(1, 3)
output = relay.Tuple([bop_4599,])
output2 = relay.Tuple([bop_4599,])
func_4616 = relay.Function([var_4597,var_4598,], output)
mod['func_4616'] = func_4616
mod = relay.transform.InferType()(mod)
var_4617 = relay.var("var_4617", dtype = "float32", shape = (1, 3))#candidate|4617|(1, 3)|var|float32
var_4618 = relay.var("var_4618", dtype = "float32", shape = (1, 3))#candidate|4618|(1, 3)|var|float32
output = func_4616(var_4617,var_4618,)
func_4619 = relay.Function([var_4617,var_4618,], output)
mutated_mod['func_4619'] = func_4619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2174_call = mod.get_global_var('func_2174')
func_2175_call = mutated_mod.get_global_var('func_2175')
call_4703 = func_2174_call()
call_4704 = func_2174_call()
func_2594_call = mod.get_global_var('func_2594')
func_2596_call = mutated_mod.get_global_var('func_2596')
call_4714 = relay.TupleGetItem(func_2594_call(), 0)
call_4715 = relay.TupleGetItem(func_2596_call(), 0)
uop_4731 = relay.log10(call_4703.astype('float64')) # shape=(1, 15, 6)
uop_4733 = relay.log10(call_4704.astype('float64')) # shape=(1, 15, 6)
func_4307_call = mod.get_global_var('func_4307')
func_4310_call = mutated_mod.get_global_var('func_4310')
var_4737 = relay.var("var_4737", dtype = "uint32", shape = ())#candidate|4737|()|var|uint32
const_4738 = relay.const([[5,4],[-3,-1],[-8,-7],[1,-1],[1,-5],[-7,-4],[5,-4],[-4,-5],[6,-9],[4,3],[9,9],[1,6],[-1,4],[-7,8],[4,7],[2,9],[1,-6],[-9,9],[1,7],[-9,6],[3,7],[-6,-2],[-8,-2],[-10,6],[-10,8],[-3,7],[-6,-8],[7,-6],[-1,2],[9,2],[4,-6],[5,-8],[8,4],[5,-5],[-8,-10],[6,7],[1,7],[-5,7],[-4,-4],[7,-4],[7,8],[3,-5],[-6,-6],[-8,-2],[-4,9],[9,-9],[-1,2],[4,-4],[-7,-3],[6,9],[-10,6],[8,9],[8,-1],[5,10],[2,3],[1,7],[10,8],[7,-9],[4,6],[-3,6],[-4,8],[7,-5],[-9,7],[8,8],[3,3],[5,8],[7,-1],[-1,-2],[4,-4],[8,-3],[8,9],[-3,1],[2,7],[-7,-7],[9,5],[-7,-4],[-6,3],[6,1],[8,-7],[6,9],[5,5],[3,6],[-2,-3],[-7,9],[5,-5],[9,-6],[-5,-10],[-2,-9],[6,-9],[-8,2],[-4,-8],[-4,-4],[2,-2],[7,-10],[1,-3],[8,2],[-8,3],[-3,-5],[-2,10],[3,-6],[7,-5],[-4,-9],[4,9],[-6,8],[-9,-9],[7,-1],[-10,-6],[-7,5],[8,8],[-7,-8],[1,-5],[-6,10],[-3,8],[-4,1],[-10,-6],[-9,10],[-4,-1],[5,2],[-5,-2],[9,6],[2,3],[3,-1],[-3,9],[-9,9],[-9,-4],[10,-2],[-4,-7],[8,-6],[7,6],[5,2],[-6,8],[-4,-9],[-1,-9],[9,-7],[-6,8],[8,-4],[-3,-7],[-10,6],[2,1],[3,8],[3,7],[9,-4],[10,8],[-6,-5],[7,-9],[10,4],[7,7],[5,6],[-1,9],[6,-4],[5,-6],[-8,-2],[-2,-1],[4,4],[9,5],[-5,4],[-3,7],[-6,8],[6,-6],[5,-7],[-9,-7],[4,-8],[3,8],[4,5],[5,-1],[-4,6],[-2,-4],[10,-2],[-10,4],[2,-6],[5,2],[-6,-9],[10,3],[6,4],[2,5],[-9,-3],[-9,4],[8,4],[-6,3],[5,4],[-9,-9],[-8,4],[-3,4],[-9,-3],[-3,-8],[9,-4],[-2,8],[6,-1],[10,-1],[3,10],[6,9],[10,-4],[1,4],[5,4],[5,-5],[1,-6],[-3,1],[4,-3],[-3,6],[4,-6],[1,2],[10,-5],[7,3],[-5,-1],[8,6],[3,-4],[10,2],[1,9],[-10,2],[-9,2],[-7,6],[-8,10],[-8,9],[6,10],[5,-3],[1,-10],[5,8],[1,1],[-7,-9],[5,10],[-10,7],[-4,3],[8,-6],[8,-10],[10,-10],[-10,-8],[-10,-3],[-10,10],[-5,5],[3,-9],[-4,10],[2,6],[9,-2],[8,7],[7,-5],[-4,7],[10,-9],[8,4],[4,5],[-5,8],[10,1],[10,-8],[-10,5],[5,-5],[2,10],[3,-5],[9,3],[-4,5],[2,1],[-6,10],[9,-1],[-7,-1],[-2,2],[-4,-2],[-6,4],[5,1],[-5,-1],[1,-8],[9,5],[8,7],[-7,-7],[4,2],[4,10],[-5,-9],[3,-1],[1,5],[1,-6],[-7,10],[1,-5],[-9,-5],[-4,4],[-7,-10],[-3,5],[2,-4],[1,3],[2,-4],[-3,8],[-7,-6],[-9,10],[5,6],[-3,-2],[4,-8],[-5,-5],[-4,-9],[-7,10],[-9,4],[-1,4],[4,-4],[3,-2],[1,2],[-10,-2],[-5,3],[8,-5],[-2,-5],[-5,8],[10,-8],[7,10],[9,3],[-10,-6],[-8,6],[-4,2],[-3,-8],[-5,10],[8,8],[8,-5],[-1,-8],[5,-5],[-5,-8],[-3,-7],[-7,-5],[-3,8],[10,9],[6,-5],[-4,6],[-9,4],[-2,-4],[-5,1],[6,-4],[8,-2],[-8,8],[-7,-10],[8,-4],[-7,-10],[3,5],[-5,-9],[10,-1],[5,-9],[-6,-8],[-10,6],[4,-4],[8,-1],[-9,10],[3,-6],[3,1],[1,-5],[-7,-10],[9,4],[7,6],[5,8],[-6,-8],[10,-1],[-1,2],[-4,-9],[-10,-9],[-6,-2],[-2,-10],[-8,1],[-9,-2],[-4,1],[-7,7],[2,2],[4,8],[-6,-7],[-1,-7],[5,4],[8,-2],[-8,6],[-8,7],[-9,-9],[-2,-7],[1,9],[8,2],[6,7],[1,6],[2,5],[7,9],[2,-8],[-7,3],[8,-2],[7,-10],[-2,-9],[-8,-4],[-7,2],[2,-9],[-1,7],[4,8],[1,6],[7,-3],[5,-2],[6,-3],[9,-6],[-9,5],[4,8],[3,7],[7,4],[-1,3],[-8,9],[4,-7],[-9,2],[-10,8],[9,1],[3,6],[5,-3],[8,4],[-2,-1],[9,7],[-3,-6],[8,-6],[-9,10],[8,1],[7,-10],[2,10],[9,10],[9,7],[-10,4],[6,-4],[-10,-6],[-10,10],[3,-2],[-5,8],[-6,-3],[-10,7],[-3,6],[5,-6],[-4,-3],[-9,2],[6,4],[-6,7],[-5,-7],[3,4],[8,-7],[10,10],[-6,-6],[8,5],[-2,5],[-5,2],[-5,4],[-4,5],[-8,7],[-8,2],[9,-6],[-10,9],[2,-9],[-6,-9],[-1,-10],[3,9],[10,1],[-2,-9],[-5,-6],[-8,6],[-8,-8],[-8,-5],[10,-4],[-3,-6],[8,10],[-2,-10],[3,-1],[-10,-2],[-2,5],[7,-8],[5,2],[4,10],[5,3],[8,6],[1,4],[-4,2],[-7,5],[6,1],[-5,1],[10,5],[-1,5],[-4,-3],[-10,-6],[3,2],[4,-4],[-3,4],[-5,-1],[-4,2],[-5,-7],[10,1],[10,6],[-7,5],[-6,-2],[1,8],[8,-3],[-6,-2],[-2,9],[10,3],[9,-3],[-8,6],[7,-6],[3,-4],[-3,-7],[-2,9],[7,-9],[8,-9],[3,-1],[-2,6],[8,-6],[6,-4],[-9,-10],[-2,-6],[-7,-8],[-8,3],[-10,-2],[-5,2],[10,4],[9,9],[-1,-10],[7,3],[-2,-2],[9,10],[10,-4],[2,-6],[-5,10],[-2,-4],[5,-7],[-2,10],[-1,-4],[8,10],[8,2],[-9,2],[-1,-9],[-1,-8],[-7,-1],[-5,-4],[-3,-5],[-4,8],[-8,-4],[1,2],[-8,6],[2,-8],[-9,1],[-1,-8],[-3,5],[9,-3],[-6,-5],[-3,-8],[8,4],[8,-2],[-10,8],[-5,-6],[-1,-10],[-6,9],[-10,-8],[3,-7],[10,2],[1,4],[4,1],[-10,2],[7,4],[-4,7],[9,-8],[1,-5],[5,10],[1,7],[6,7],[-4,7],[-10,7],[4,-10],[7,-7],[-1,1],[2,-4],[-5,-6],[-1,-7],[3,-6],[-7,-9],[-5,5],[-4,4],[7,-5],[-9,1],[10,-5],[2,5],[9,8],[-4,-6],[5,5],[-6,-7],[4,-3],[1,-7],[1,1],[7,9],[-7,10],[4,-2],[-9,-10],[-4,9],[9,1],[4,-10],[-1,10],[-6,1],[-6,5],[-9,10],[-4,1],[7,7],[2,3],[-7,2],[-3,5],[-3,-3],[9,10],[-4,6],[-3,7],[-8,6],[-4,7],[4,-1],[-4,-6],[-7,6],[6,-6],[10,-10],[2,5],[-2,10],[-1,-1],[-8,2],[1,9],[-5,-5],[-4,-1],[4,7],[9,-4],[2,10],[4,-8],[4,-6],[-8,-2],[-1,3],[-8,10],[-10,-6],[1,-1],[-7,-8],[-2,3],[8,10],[6,10],[1,-5],[-2,10],[5,10],[-9,1],[-3,7],[7,3],[3,3],[7,9],[9,-8],[-2,-10],[8,1],[10,-3],[10,8],[4,-7],[7,6],[-5,4],[10,4],[2,-7],[3,-6],[-1,-6],[1,-2],[-7,9],[1,8],[10,-10],[3,2],[-8,-4],[10,-4],[10,-6],[5,-3],[-7,8],[10,3],[-7,-2],[-5,-6],[5,3],[-1,-8],[6,2],[-2,-6],[9,-6],[-10,-9],[-2,-9],[-5,-1],[6,-6],[1,-10],[8,8],[6,10],[8,2],[-6,4],[10,-8],[-10,-5],[-5,5],[-7,-4],[-4,-6],[8,6],[3,-3],[9,-1],[-3,-5],[-10,-9]], dtype = "int64")#candidate|4738|(675, 2)|const|int64
call_4736 = relay.TupleGetItem(func_4307_call(relay.reshape(var_4737.astype('uint32'), []), relay.reshape(const_4738.astype('int64'), [15, 15, 6]), ), 2)
call_4739 = relay.TupleGetItem(func_4310_call(relay.reshape(var_4737.astype('uint32'), []), relay.reshape(const_4738.astype('int64'), [15, 15, 6]), ), 2)
bop_4743 = relay.power(const_4738.astype('float64'), var_4737.astype('float64')) # shape=(675, 2)
bop_4752 = relay.left_shift(call_4736.astype('int8'), bop_4743.astype('int8')) # shape=(675, 2)
bop_4755 = relay.left_shift(call_4739.astype('int8'), bop_4743.astype('int8')) # shape=(675, 2)
output = relay.Tuple([call_4714,uop_4731,bop_4752,])
output2 = relay.Tuple([call_4715,uop_4733,bop_4755,])
func_4759 = relay.Function([var_4737,], output)
mod['func_4759'] = func_4759
mod = relay.transform.InferType()(mod)
var_4760 = relay.var("var_4760", dtype = "uint32", shape = ())#candidate|4760|()|var|uint32
output = func_4759(var_4760)
func_4761 = relay.Function([var_4760], output)
mutated_mod['func_4761'] = func_4761
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4763 = relay.const(-6.607609, dtype = "float32")#candidate|4763|()|const|float32
var_4764 = relay.var("var_4764", dtype = "float32", shape = (2, 1, 13))#candidate|4764|(2, 1, 13)|var|float32
bop_4765 = relay.power(const_4763.astype('float32'), var_4764.astype('float32')) # shape=(2, 1, 13)
output = bop_4765
output2 = bop_4765
func_4768 = relay.Function([var_4764,], output)
mod['func_4768'] = func_4768
mod = relay.transform.InferType()(mod)
var_4769 = relay.var("var_4769", dtype = "float32", shape = (2, 1, 13))#candidate|4769|(2, 1, 13)|var|float32
output = func_4768(var_4769)
func_4770 = relay.Function([var_4769], output)
mutated_mod['func_4770'] = func_4770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1697_call = mod.get_global_var('func_1697')
func_1698_call = mutated_mod.get_global_var('func_1698')
call_4790 = relay.TupleGetItem(func_1697_call(), 0)
call_4791 = relay.TupleGetItem(func_1698_call(), 0)
output = call_4790
output2 = call_4791
func_4810 = relay.Function([], output)
mod['func_4810'] = func_4810
mod = relay.transform.InferType()(mod)
output = func_4810()
func_4811 = relay.Function([], output)
mutated_mod['func_4811'] = func_4811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4142_call = mod.get_global_var('func_4142')
func_4143_call = mutated_mod.get_global_var('func_4143')
call_4821 = relay.TupleGetItem(func_4142_call(), 0)
call_4822 = relay.TupleGetItem(func_4143_call(), 0)
func_4344_call = mod.get_global_var('func_4344')
func_4346_call = mutated_mod.get_global_var('func_4346')
call_4829 = relay.TupleGetItem(func_4344_call(), 0)
call_4830 = relay.TupleGetItem(func_4346_call(), 0)
output = relay.Tuple([call_4821,call_4829,])
output2 = relay.Tuple([call_4822,call_4830,])
func_4855 = relay.Function([], output)
mod['func_4855'] = func_4855
mod = relay.transform.InferType()(mod)
output = func_4855()
func_4856 = relay.Function([], output)
mutated_mod['func_4856'] = func_4856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_4863 = func_1212_call()
call_4864 = func_1212_call()
output = call_4863
output2 = call_4864
func_4870 = relay.Function([], output)
mod['func_4870'] = func_4870
mod = relay.transform.InferType()(mod)
output = func_4870()
func_4871 = relay.Function([], output)
mutated_mod['func_4871'] = func_4871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mod.get_global_var('func_4535')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_4891 = func_4535_call()
call_4892 = func_4535_call()
var_4893 = relay.var("var_4893", dtype = "int64", shape = (4, 15, 6))#candidate|4893|(4, 15, 6)|var|int64
bop_4894 = relay.right_shift(call_4891.astype('uint32'), var_4893.astype('uint32')) # shape=(4, 15, 6)
bop_4897 = relay.right_shift(call_4892.astype('uint32'), var_4893.astype('uint32')) # shape=(4, 15, 6)
output = relay.Tuple([bop_4894,])
output2 = relay.Tuple([bop_4897,])
func_4903 = relay.Function([var_4893,], output)
mod['func_4903'] = func_4903
mod = relay.transform.InferType()(mod)
var_4904 = relay.var("var_4904", dtype = "int64", shape = (4, 15, 6))#candidate|4904|(4, 15, 6)|var|int64
output = func_4903(var_4904)
func_4905 = relay.Function([var_4904], output)
mutated_mod['func_4905'] = func_4905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3915_call = mod.get_global_var('func_3915')
func_3916_call = mutated_mod.get_global_var('func_3916')
call_4924 = relay.TupleGetItem(func_3915_call(), 1)
call_4925 = relay.TupleGetItem(func_3916_call(), 1)
output = relay.Tuple([call_4924,])
output2 = relay.Tuple([call_4925,])
func_4932 = relay.Function([], output)
mod['func_4932'] = func_4932
mod = relay.transform.InferType()(mod)
output = func_4932()
func_4933 = relay.Function([], output)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4502_call = mod.get_global_var('func_4502')
func_4503_call = mutated_mod.get_global_var('func_4503')
call_4959 = relay.TupleGetItem(func_4502_call(), 0)
call_4960 = relay.TupleGetItem(func_4503_call(), 0)
func_4768_call = mod.get_global_var('func_4768')
func_4770_call = mutated_mod.get_global_var('func_4770')
const_4968 = relay.const([-7.026347,-8.281431,-4.435876,-2.896852,-7.053422,4.750894,-1.553833,-6.972536,7.637350,-5.389085,8.509179,3.191604,-0.740724,3.550211,6.400281,4.531810,8.169348,-8.439021,1.702096,6.064333,5.709568,-5.431134,5.822327,2.803027,-1.206613,8.729227], dtype = "float32")#candidate|4968|(26,)|const|float32
call_4967 = func_4768_call(relay.reshape(const_4968.astype('float32'), [2, 1, 13]))
call_4969 = func_4768_call(relay.reshape(const_4968.astype('float32'), [2, 1, 13]))
var_4977 = relay.var("var_4977", dtype = "float32", shape = (26,))#candidate|4977|(26,)|var|float32
bop_4978 = relay.maximum(const_4968.astype('uint64'), relay.reshape(var_4977.astype('uint64'), relay.shape_of(const_4968))) # shape=(26,)
const_4988 = relay.const([-0.834336,-9.422567,-5.607322,-8.963468,-8.042040,3.555269,-0.573228,2.464737,-9.771235,-1.489258,-1.607381,-3.531524,7.637316,4.328923,-4.932337,-9.069994,8.069919,4.903853,8.891489,0.085715,0.933252,7.027433,-0.858696,1.309692,-0.054779,-1.777823], dtype = "float32")#candidate|4988|(26,)|const|float32
bop_4989 = relay.bitwise_or(const_4968.astype('int8'), relay.reshape(const_4988.astype('int8'), relay.shape_of(const_4968))) # shape=(26,)
output = relay.Tuple([call_4959,call_4967,bop_4978,bop_4989,])
output2 = relay.Tuple([call_4960,call_4969,bop_4978,bop_4989,])
func_4992 = relay.Function([var_4977,], output)
mod['func_4992'] = func_4992
mod = relay.transform.InferType()(mod)
var_4993 = relay.var("var_4993", dtype = "float32", shape = (26,))#candidate|4993|(26,)|var|float32
output = func_4992(var_4993)
func_4994 = relay.Function([var_4993], output)
mutated_mod['func_4994'] = func_4994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_5038 = func_1212_call()
call_5039 = func_1212_call()
output = relay.Tuple([call_5038,])
output2 = relay.Tuple([call_5039,])
func_5053 = relay.Function([], output)
mod['func_5053'] = func_5053
mod = relay.transform.InferType()(mod)
mutated_mod['func_5053'] = func_5053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5053_call = mutated_mod.get_global_var('func_5053')
call_5054 = func_5053_call()
output = call_5054
func_5055 = relay.Function([], output)
mutated_mod['func_5055'] = func_5055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mod.get_global_var('func_4328')
func_4330_call = mutated_mod.get_global_var('func_4330')
call_5070 = relay.TupleGetItem(func_4328_call(), 2)
call_5071 = relay.TupleGetItem(func_4330_call(), 2)
var_5079 = relay.var("var_5079", dtype = "uint8", shape = (1280,))#candidate|5079|(1280,)|var|uint8
bop_5080 = relay.less(call_5070.astype('bool'), relay.reshape(var_5079.astype('bool'), relay.shape_of(call_5070))) # shape=(1280,)
bop_5083 = relay.less(call_5071.astype('bool'), relay.reshape(var_5079.astype('bool'), relay.shape_of(call_5071))) # shape=(1280,)
func_1697_call = mod.get_global_var('func_1697')
func_1698_call = mutated_mod.get_global_var('func_1698')
call_5089 = relay.TupleGetItem(func_1697_call(), 0)
call_5090 = relay.TupleGetItem(func_1698_call(), 0)
var_5093 = relay.var("var_5093", dtype = "int64", shape = (10, 15, 6))#candidate|5093|(10, 15, 6)|var|int64
bop_5094 = relay.divide(call_5089.astype('float32'), var_5093.astype('float32')) # shape=(10, 15, 6)
bop_5097 = relay.divide(call_5090.astype('float32'), var_5093.astype('float32')) # shape=(10, 15, 6)
output = relay.Tuple([bop_5080,bop_5094,])
output2 = relay.Tuple([bop_5083,bop_5097,])
func_5101 = relay.Function([var_5079,var_5093,], output)
mod['func_5101'] = func_5101
mod = relay.transform.InferType()(mod)
var_5102 = relay.var("var_5102", dtype = "uint8", shape = (1280,))#candidate|5102|(1280,)|var|uint8
var_5103 = relay.var("var_5103", dtype = "int64", shape = (10, 15, 6))#candidate|5103|(10, 15, 6)|var|int64
output = func_5101(var_5102,var_5103,)
func_5104 = relay.Function([var_5102,var_5103,], output)
mutated_mod['func_5104'] = func_5104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3915_call = mod.get_global_var('func_3915')
func_3916_call = mutated_mod.get_global_var('func_3916')
call_5122 = relay.TupleGetItem(func_3915_call(), 0)
call_5123 = relay.TupleGetItem(func_3916_call(), 0)
uop_5145 = relay.rsqrt(call_5122.astype('float64')) # shape=(3, 15, 6)
uop_5147 = relay.rsqrt(call_5123.astype('float64')) # shape=(3, 15, 6)
output = relay.Tuple([uop_5145,])
output2 = relay.Tuple([uop_5147,])
func_5153 = relay.Function([], output)
mod['func_5153'] = func_5153
mod = relay.transform.InferType()(mod)
output = func_5153()
func_5154 = relay.Function([], output)
mutated_mod['func_5154'] = func_5154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_5193 = relay.TupleGetItem(func_3352_call(), 0)
call_5194 = relay.TupleGetItem(func_3354_call(), 0)
func_3982_call = mod.get_global_var('func_3982')
func_3983_call = mutated_mod.get_global_var('func_3983')
call_5217 = func_3982_call()
call_5218 = func_3982_call()
const_5239 = relay.const([[[-5,6,7,4,7,9],[2,6,-7,-6,10,9],[1,4,7,-9,-4,-6],[7,10,-6,5,-2,-9],[-5,1,5,9,5,-3],[-1,-3,-1,5,-8,10],[-5,-6,-6,-9,2,-8],[9,4,-3,4,-1,-10],[-5,10,1,1,-7,-4],[-2,5,2,-10,1,4],[-2,9,-7,-6,3,8],[-8,-1,-6,7,7,-3],[-5,9,-6,9,1,-1],[-8,-3,-3,-6,-1,-5],[3,6,-3,-10,-1,-4]],[[4,-7,3,3,7,2],[-6,2,-5,-4,-8,-10],[-1,-9,9,-3,9,8],[-8,-1,7,-6,2,-2],[-4,7,9,4,8,-4],[9,10,7,-9,-10,-1],[-6,2,6,6,2,-3],[3,-3,-5,7,-4,3],[6,-6,4,3,-6,-7],[1,-2,1,4,-7,4],[-3,7,10,1,-1,4],[6,-5,-6,-5,-10,-8],[4,-4,10,-2,-10,2],[-6,10,10,7,3,10],[-6,6,2,6,7,-7]],[[-9,10,6,1,-3,-3],[5,10,-2,7,5,-6],[7,-3,4,-1,-8,4],[1,10,-6,-8,3,-9],[8,4,1,-10,-4,5],[6,-2,-5,10,2,9],[-5,9,6,-6,7,-8],[2,7,5,-5,-5,5],[5,-7,7,7,4,-3],[-7,5,-9,-2,-2,-8],[-2,6,-1,-9,-8,7],[2,-9,-1,5,9,4],[2,10,5,-1,-10,4],[9,2,-10,3,3,8],[-4,4,2,3,3,8]],[[-9,7,-7,5,-6,3],[3,10,10,2,1,-9],[-5,7,-4,-8,-7,4],[-9,9,-5,-3,-10,4],[9,6,-3,2,-5,-6],[7,4,2,-7,-9,6],[9,-2,-2,-3,-4,2],[-3,-7,-5,-7,-8,8],[1,3,-10,-5,10,-1],[6,5,10,9,-4,-4],[-9,5,4,-9,7,-6],[-1,-7,8,5,-2,6],[-10,7,-9,-4,2,8],[-1,10,1,4,-8,-4],[8,2,10,2,-1,3]],[[-10,2,4,-5,-9,2],[4,5,-8,-10,-8,6],[2,-9,9,-5,-9,-8],[-7,10,1,-7,10,8],[-2,-4,-3,-10,10,-8],[-1,7,-1,5,-7,5],[8,2,-5,6,9,8],[2,-6,9,-3,-10,2],[-5,-9,-3,10,-6,7],[-5,9,-5,-7,-8,9],[-1,-2,3,10,3,10],[-2,7,-5,1,9,5],[10,-1,6,-8,4,-8],[3,5,-7,-4,-7,9],[5,-3,2,8,-1,10]],[[1,-6,7,-2,-4,-8],[3,-10,-3,2,10,2],[-5,-6,1,6,4,-7],[-8,3,7,2,5,8],[-2,-6,6,-6,10,7],[-8,5,7,-4,10,-6],[3,7,-10,6,5,-6],[-1,4,-4,5,6,-3],[10,7,-7,9,8,7],[-2,2,4,10,2,-7],[7,-8,9,-5,1,1],[4,9,7,-2,1,-6],[-5,10,-2,-4,6,3],[5,4,-1,-7,4,-7],[-4,-10,4,-9,2,-6]],[[4,-7,-4,-6,10,7],[7,-4,-10,4,9,-8],[-9,4,4,-10,-2,1],[-7,4,-8,-9,-5,-10],[6,-8,7,10,2,-9],[-5,-7,6,-4,-6,10],[-9,1,-4,8,4,-4],[1,8,9,-10,-6,3],[4,5,-6,-3,8,1],[-6,9,-5,10,-9,1],[-8,2,7,-6,-5,-2],[9,-7,1,6,-7,7],[10,-1,-10,6,-1,-1],[-8,-3,9,-3,1,5],[8,-1,-10,10,-10,10]]], dtype = "int64")#candidate|5239|(7, 15, 6)|const|int64
bop_5240 = relay.logical_and(call_5193.astype('bool'), const_5239.astype('bool')) # shape=(7, 15, 6)
bop_5243 = relay.logical_and(call_5194.astype('bool'), const_5239.astype('bool')) # shape=(7, 15, 6)
func_2137_call = mod.get_global_var('func_2137')
func_2140_call = mutated_mod.get_global_var('func_2140')
const_5252 = relay.const([7.940625,8.433062,-6.115812,9.796081,-8.890597,-3.850052,2.785229,-3.348481,-0.177007,7.880159,4.106348,2.274058,6.745051,-7.979711,-4.685679,0.064941,3.165459,8.120468,-9.698815,-3.036378,-6.041479,-0.112744,7.933649,2.023566,-0.270442,2.151414,6.387190,-7.222727,-5.008853,5.715879,0.941935,-9.321953,-9.949711,-1.885392,-4.437145,8.239961,-2.980673,2.283616,-3.907160,6.816625,1.313270,-0.625836,7.262043,2.575096,9.807196,7.623332,9.069599,-3.894538,1.719456,-9.838107,6.837590,-7.032900,-0.160439,4.032209,9.324202,2.682551,0.794039,4.308098,-7.441251,5.116048,7.309612,-3.554764,-8.997051,-1.912798,-8.164383,-8.869711,-4.392423,2.096735,-4.364402,-4.454343,9.975189,-1.927170,7.784111,-5.299948,-9.945316,-9.203176,-3.001008,-1.005629,2.991723,-8.394619,8.544539,1.509848,6.446375,-1.581376,8.279036,7.427526,-4.857968,-1.149061,8.143768,-5.134042,-9.584607,-9.496859,2.024056,5.477942,1.481844,-4.966911,-3.929724,7.951872,-3.403845,4.700626,-5.857299,0.188859,-5.382918,-8.340891,-3.787642,7.246360,9.371955,9.807717,-7.572841,7.225963,-8.627588,3.670208,3.383682,-8.256127,-9.548989,-3.503480,4.563965,-6.579324,8.141736,7.723166,6.787302,-6.332788,-7.026896,5.122080,-6.060104,3.560485,3.492131,-5.859653,8.738941,-9.502893,-8.895706,-5.175702,-5.429199,-7.924215,3.427707,4.555618,-7.377336,-6.359758,2.604383,-1.534794,-7.994014,-9.326446,-0.905820,4.960986,-8.430205,8.368117,-6.371069,-0.885924,-0.111638,-4.980001,-8.274546,-9.916978,2.758721,-3.401915], dtype = "float64")#candidate|5252|(154,)|const|float64
call_5251 = relay.TupleGetItem(func_2137_call(relay.reshape(const_5252.astype('float64'), [11, 1, 14])), 0)
call_5253 = relay.TupleGetItem(func_2140_call(relay.reshape(const_5252.astype('float64'), [11, 1, 14])), 0)
output = relay.Tuple([call_5217,bop_5240,call_5251,const_5252,])
output2 = relay.Tuple([call_5218,bop_5243,call_5253,const_5252,])
func_5280 = relay.Function([], output)
mod['func_5280'] = func_5280
mod = relay.transform.InferType()(mod)
mutated_mod['func_5280'] = func_5280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5280_call = mutated_mod.get_global_var('func_5280')
call_5281 = func_5280_call()
output = call_5281
func_5282 = relay.Function([], output)
mutated_mod['func_5282'] = func_5282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mod.get_global_var('func_4535')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_5341 = func_4535_call()
call_5342 = func_4535_call()
func_4535_call = mod.get_global_var('func_4535')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_5343 = func_4535_call()
call_5344 = func_4535_call()
func_2783_call = mod.get_global_var('func_2783')
func_2788_call = mutated_mod.get_global_var('func_2788')
const_5351 = relay.const([-2.696148,-5.459254,-9.954837,-1.844797,-1.760986,2.424351,-1.950066,0.102495,-3.989530,2.103845,9.847643,9.559081,-9.236209,-6.599762,7.304013,3.292984,2.134074,-1.313454,2.412414,2.065348,4.069065,5.526425,3.435619,-2.775463,-7.049125,-0.466685,9.929111,-1.645463,-6.933323,6.641346,4.905083,1.094368,-1.259602,-2.756343,7.796297,0.815744,-3.095007,-7.953050,8.129453,2.048773,5.471807,-5.921113,0.094329,-1.009033,0.018090,5.434261,-4.394389,8.408791,-8.779599,-2.519378,4.932573,-9.221447,-8.864371,-6.232687,6.712350,-3.796913,2.465315,3.671273,5.736807,-0.514757,8.748692,4.627174,9.452392,-1.978069,-3.506227,4.798176,-2.364263,4.875424,-6.006171,-7.445284,2.164354,-7.729898,1.284659,6.247908,8.598061,1.403957,0.457153,-8.489911,-6.025880,-7.859176,8.538671,-0.935047,1.103838,5.215517,3.090472,6.044310,-6.743922,1.067187,7.234927,-7.952219,1.287871,9.416020,4.148681,2.482053,-9.290814,-3.661095,6.053786,7.000907,4.686490,-0.406407,5.793721,5.042095,-2.082812,1.227200,-3.897063,-5.252123,-3.144221,-7.532774,-9.942489,3.071497,-0.577360,-3.294160,-0.593829,-2.047609,-8.950973,8.539691,0.289700,5.891989,6.367268,2.246815,6.342412,8.882167,-6.374841,7.993288,6.723670,3.897398,-7.918259,7.309164,-0.557731,-3.996876,0.536961,-1.041785,1.608450,-8.773064,-4.615906,-6.129660,3.720156,7.488095,9.327815,-3.335681,5.751354,-1.275367,-4.084795,0.769007,-2.026700,8.677674,9.525995,-1.363096,-5.526374,1.066392,-7.246243,-4.358550,-1.916852,5.526885,-3.830056,-4.106774,-6.545263,2.476587,4.396139,8.814666,4.476893,2.722117,-7.660957,6.948116,-8.213873,7.855270,-6.184620,-2.730111,-7.093724,-1.828168,-8.216435,-5.615363,-2.119518,0.919713,-0.796097,1.680403,5.899660,-7.253370,-8.355194,-0.799345,6.140661,7.927024,7.269895,-3.988038,-5.237813,-9.937619,1.377519,4.713147,8.298794,3.844689,5.697007,7.567447,1.584119,-6.078954,7.997330,-1.223245,-3.075025,-4.978595,-6.424261,1.916989,9.095436,7.315215,0.295847,-7.643386,2.655824,-6.867145,-5.304135,1.116471,-9.119991,4.908942,1.162359,-5.813569,-9.796344,4.620332,8.094350,5.425538,0.830444,6.149222,2.527880,1.240183,-5.056748,6.851746,4.289655,-2.321249,-9.881941,7.041239,-2.942786,9.028911,-0.529515,7.445768,-8.494369,-6.427204,9.469615,-5.605493,-8.711403,7.181064,6.324755,3.928326,9.035855,-8.352611,-4.416890,1.632109,6.371641,2.336174,-4.129379,9.904485,6.600160,-5.281552,-0.461371,4.236470,-8.547656,5.016104,4.644756,-4.400556,-3.383810,-4.121705,-9.829230,5.793665,-9.769446,5.454001,0.804605,5.370150,-9.252322,3.839681,-3.614924,5.970815,8.487038,2.863562,-7.305867,-3.557497,-2.336734,4.364806,-8.962735,8.731688,9.603838,7.310099,9.258448,7.071228,-1.707438,-9.010709,0.597846,6.041979,-2.843137,5.334873,-4.613816,-8.965340,-3.147453,2.459361,-8.589921,2.573397,7.464336,9.780898,-7.770249,4.047927,5.146992,0.148547,6.954436,-9.519240,9.230100,-1.985160,3.009107,9.978082,-3.604729,-5.192551,9.246706,-2.398962,3.593368,9.794630,-1.780709,-2.114215,1.631822,-3.013926,0.734777,-3.379622,-1.912690,-5.227794,6.305940,5.849311,2.251925,4.820264,-3.942036,9.127666,2.423874,9.909799,1.534979,8.465240,5.911876,-0.731763,-6.173363,-7.235038,4.050130,-1.682903,-4.517894,4.845022,-8.368618,-2.496595,-3.699061,-4.813121,-3.441002,-6.440298,3.035759,-0.888674,3.301460,8.420114,-0.190286,5.635672,1.060757,-7.613443,3.505836,7.454979,-8.063526,-3.218456,7.867744,-4.996959,-6.882757,-7.047863,6.433644,7.106071,2.486535,-7.468218,-0.740270,5.491616,-7.287459,0.655958,3.818992,4.765370,-6.871516,7.553452,-6.190896,9.691770,-2.774471,-5.552464,1.129598,-1.781388,2.179701,-6.420993,-0.081123,4.296496,4.488454,3.751526,6.599534,3.869440,-9.732971,0.033869,-7.113875,-0.272524,-3.980149,-2.475146,-9.755842,-7.144148,-9.603841,9.745901,8.670191,8.572052,2.987291,9.828138,8.980454,-2.407690,2.912564,-1.907595,-9.487178,-7.136754,7.338291,-8.324482,-0.416518,0.170642,4.324641,4.551045,2.706724,-2.959864,6.055042,1.754382,-5.410732,3.355590,-0.356483,8.593843,-9.123955,5.447397,9.944211,3.727236,6.271582,-3.233833,5.748111,2.898253,-5.523485,0.123501,3.311838,-9.016334,-3.668758,-1.940091,3.867113,3.262966,4.193588,4.116769,4.008011,-3.295839,-6.555222,7.309986,5.695528,-6.100488,-3.239505,0.351606,4.176956,2.718312,8.377633,-5.743254,-0.644034,-7.905378,-9.270277,-2.961800,-7.876132,-4.627843,9.372190,-1.027403,-8.448595,-5.991738,-9.033800,5.671194,5.960474,9.798109,-5.381391,0.591846,-9.888890,-9.021284,7.747066,-1.136109,-1.416842,-0.365255,-1.916455,-1.792693,-5.688633,-7.977303,-4.345120,-9.163925,-3.859497,3.318792,2.150130,7.128130,-8.820534,-1.350075,-4.132719,-1.594384,-8.337134,-2.113344,9.427981,2.176945,8.038822,8.516081,6.399773,5.393941,8.826601,-9.725438,9.897777,-0.940768,-3.459088,-3.848285,0.815984,0.576000,3.850047,3.179152,-5.194420,-7.413965,-7.547551,5.317253,7.558161,6.616181,0.465343,3.046581,-8.581526,3.199936,3.441907,1.244936,-0.449899,-2.334264,8.416154,-1.461081,-3.961438,8.675619,-5.113454,9.923625,-9.982672,0.962309,-0.111831,-9.963015,-3.036968,9.545945,2.083216,9.539336,7.790523,-9.709812,4.401358,-0.141019,3.777378,-1.487346,0.096147,-8.196235,-6.082489,9.037248,-5.390791,7.163325,9.713370,-0.441683,-9.201900,-4.017286,9.266740,-8.904428,-0.967342,2.597092,-2.541788,4.241457,4.249386,0.937278,9.213514,-5.289512,1.117505,2.779805,5.726586,9.351301,0.059591,1.490234,-6.559792,3.571948,6.183587,5.575586,-1.564549,2.878784,-2.729480,3.660777,6.967149,1.344622,-6.644178,-4.940049,7.516637,1.655804,0.069192,6.157876,-3.274416,-8.625208,2.747313,3.541636,7.638516,0.811044,-1.852956,7.760505,4.887712,-2.549389,9.652057,4.066995,-8.969687,0.380826,2.956761,-2.117181,0.671843,8.674627,-5.231796,-1.657959,0.369659,3.372090,8.175725,-3.955232,2.533679,-6.558097,0.364573,1.360913,-9.563338,8.479274,-3.228961,1.164711,4.812268,-0.809158,6.415205,2.031584,0.048097,-5.507370,6.802278,5.619589,6.187158,-1.096804,5.327406,8.872839,-3.638606,0.843122,-7.127990,4.172937,-7.254149,5.948099,-4.596679,-3.551868,0.658354,-1.488148,7.269538,4.517651,4.174902,0.855009,-9.026219,-8.162130,-9.186926,7.491265,-6.191315,-6.567719,-2.928064,5.891203,-6.688592,-0.732089,-1.031975,-5.217743,-3.160091,9.510835,5.233804,-0.613480,2.486444,2.430178,6.625215,-5.382492,1.365275,-4.928128,-7.651778,-9.948364,0.920899,-6.834464,-7.912474,-6.512701,-1.350495,-9.254440,-5.294018,0.842589,-0.321552,9.544490,6.995967,8.475941,-8.329110,2.848454,9.607702,0.567467,-0.036363,0.090263,8.975883,-4.684506,2.081580,8.017553,4.333147,1.715386,4.329778,3.594801,-3.018697,5.206981,-6.478202,1.335902,6.664053,5.928850,-5.092128,-9.462275,-8.499073,5.568891,3.759644,7.176252,-3.265336,-6.583648,-5.015011,-4.295272,7.941228,7.812445,-6.677946,1.573273,-4.169532,-2.189397,1.987326,-2.688457,1.013974,8.445653,-2.922682,2.382249,8.865777,6.354606,-1.509500,-7.654189,8.380753,2.691783,-8.179797,4.533703,3.377045,9.574529,-5.583670,-9.312650,-3.251856,1.608342,8.147590,6.696867,-3.066176,-4.799972,-9.391902,-7.189023,-1.433081,-2.842198,7.356279,9.800983,0.030560,5.736240,-2.221744,4.397443,-5.302096,-9.687945,6.291483,-2.796809,-7.446047,-1.990979,-3.089121,-1.438886,5.818237,2.108640,5.254967,0.075692,-3.171959,-7.915450,6.701520,6.449612,-0.070535,3.825447,9.639398,-3.118556,-5.579513,-8.377725,0.625243,6.677560,0.839743,3.672408,-2.106236,0.266083,-1.310827,8.293948,4.831518,9.518308,-1.292900,-8.516767,-7.425735,8.757734,0.363232,1.913649,8.865337,7.623102,-2.182268,5.734359,-8.125096,7.332361,-6.330380,-5.855242,5.116124,-0.620181,-0.500190,3.970282,2.653052,7.580555,-1.737030,4.593869,5.294951,3.551388,-5.309074,-3.052360,0.104491,6.200065,0.209651,-3.730702,3.755662,-2.499987,2.369702,-1.505818,8.093996,2.169775,4.109477,7.459051,-6.083449,-2.014416,6.558068,8.629063,-3.966768,-4.073413,-2.157140,-4.913119,8.566929,3.699095,-1.987325,0.468556,7.878235,3.066601,-2.599847,7.785742,3.746370,1.785958,7.519093,-5.822180,7.703562,8.582894,9.644112,8.654033,-1.870173,1.864204,-8.043571,-6.350735,0.123244,-3.239480,-3.741331,-7.142957,6.832685,-3.650866,-0.939829,-7.710351,-5.239213,5.150299,5.011140,-8.640318,5.826834,-4.275953,5.042519,7.236886,4.226638,-0.325038,-6.925623,7.079016,-1.156642,-1.269827,-5.724867,-7.619797,-4.285733,-7.867952,-6.535863,9.705538,-3.082260,6.596656,7.097030,6.863093,7.867335,-8.076554,-0.215659,4.498481,-7.736607,-0.800042,5.620141,4.402440,-7.225808,7.067768,-7.825422,4.466832,4.667874,-2.693179,2.401721,7.272065,5.926263,-6.637682,1.558451,-4.012031,8.756174,3.150017,8.216370,-0.420540,-1.884983,-5.967272,6.619026,-4.637301,8.488866,5.014325,-1.748732,3.005252,-0.784422,6.842680,2.433450,5.294769,-1.018889,4.855507,8.611029,-0.326449,-4.967560,8.309768,-9.233043,-8.709958,-0.758925,-1.844504,-2.852072,1.668244,-5.177301,-1.058990,-6.453296,-7.490800,-0.878995,5.841089,-2.956452,-6.022147,-2.967827,-1.043545,2.942295,-6.024046,-0.749442,-0.028045,-1.822036,0.666500,-4.986128,6.541899,-9.609625,-5.663749,4.701905,-6.419294,2.986471,-4.639967,-6.088846,-1.232925,6.095913,-6.227295,8.986518,-4.120033,-5.657484,-0.201951,-8.988836,6.843517,-9.152235,1.539077,9.879990,0.089959,-0.356101,6.441581,-7.023057,-3.878042,-4.156790,0.449258,9.353149,-6.346467,0.377427,4.177886,-9.924694,-0.380699,-4.013407,-3.194808,-2.944790,-5.256695,-7.988851,9.803271,3.769326,-7.347049,-7.606787,9.004523,-9.176027,3.637828,5.469223,9.388888,-2.966705,-1.108920,1.044575,-7.450998,-8.056139,6.665102,-0.107783,0.321184,-0.365848,-4.255124,8.913266,8.499685,7.282658,0.564273,0.640990,-4.702414,4.228529,-2.087350,5.379247,-1.013391,9.656104,-7.071542,-0.687246,6.655419,-5.989779,-0.233159,1.491632,4.880167,-2.952886,2.883006,0.081856,4.179592,-5.053682,3.055242,6.400673,5.822555,4.572090,-7.284375,7.394965,4.446520,9.287316,3.785771,6.090889,3.338991,-0.819602,7.974210,-1.052161,-8.298941,-9.859709,7.363791,3.935209,-4.526629,-8.989104,-1.162238,-6.275006,8.834902,7.744157,-2.848205,6.537531,9.406125,3.787214,5.192753,7.177265,-6.156091,-6.256212,8.217125,1.652055,-6.449421,4.875229,0.098171,-0.681857,5.266862,-6.389106,-8.848124,-2.394944,8.491957,-2.098409,1.143295,-8.272717,6.283032,3.049261,-6.034532,-6.994118,9.134476,9.361840,3.538886,2.396269,-7.286746,7.594705,-2.689802,-4.367914,9.460599,-1.031991,-4.003579,-4.670322,3.763006,8.886921,-2.894967,3.854796,3.172164,2.175253,-6.741365,7.889524,-3.910062,-1.445178,-9.068800,-6.826464,5.694279,2.891791,9.508824,-3.663745,9.821726,-0.791764,8.010369,2.955079,-3.942278,-0.246221,-1.025433,3.897457,-2.531124,5.738362,-1.119578,-2.906733,-6.406810,-7.625446,0.174062,9.375336,-3.559120,8.570108,2.163944,-7.382074,5.901055,-6.649112,-2.865595,-4.821823,0.481465,-4.221166,9.931006,-9.410324,-8.380203,3.683881,5.644632,-4.116814,-2.727163,3.736733,4.004558,1.775918,-7.324254,-6.014485,-9.006607,4.276141,-0.503075,4.295219,-1.361243,9.530696,-6.651640,6.346422,1.953500,2.298885,6.997042,0.539472,-0.544621,2.417348,3.706535,-6.285138,-8.984512,5.484260,5.780575,-7.402591,-4.752709,-8.764665,-3.215470,-2.529789,8.236699,4.462781,5.405416,6.139661,2.502863,-4.768600,-8.459584,-6.204949,6.103088,6.511181,5.891599,-0.185534,-1.594438,-4.028126,-1.795003,-5.996928,5.872878,-7.910356,4.563346,-4.472347,-2.621923,7.234688,2.626702,6.745656,9.382518,1.649464,-2.692834,3.797866,-8.596289,2.239165,-4.134698,5.602742,5.900229,-4.103197,3.511656,-0.980051,-0.881231,6.675061,0.606948,-7.139821,2.019964,2.964792,7.765942,-6.865309,6.387700,4.352396,-6.546121,6.107514,-5.415127,-6.383870,-7.486005,-1.137909,-6.803577,8.921097,-3.616460,-4.183227,6.216548,-1.996246,-2.415778,3.664616,-1.867689,-4.103457,1.450141,2.412787,8.118577,4.367884,-1.808966,-8.417243,3.163215,-1.120313,0.810165,-9.908332,9.000323,-4.408451,1.368891,1.168840,-5.935810,-0.484703,6.857513,3.304591,3.142059,-4.886498,-6.836539,-8.350941,-7.631005,-5.751262,-3.682287,4.358290,4.281085,6.723919,8.283588,-6.569930,-9.240979,5.168840,-4.232090,1.437700,4.763743,6.045234,-9.747553,-0.706982,5.113765,9.574354,6.917645,5.840796,-0.248929,0.229140,0.084241,7.829905,9.734545,8.198684,9.697015,2.542634,-3.500137,9.468608,4.626500,-3.632070,-6.118013,-0.185779,-1.456530,-6.903171,-9.499323,-2.863265,6.645644,-7.789142,-7.608685,5.850835,-0.155439,-4.027436,4.079615,8.596891,9.117861,0.142365,9.521298,5.852178,1.490656,-7.412282,-2.024281,8.985368,-1.583014,-7.859052,3.325475,7.729775,-5.029538,0.559367,4.607136,-1.509563,-8.513041,-9.777961,3.756707,8.917421,4.632358,7.682530,-5.743603,6.330615,-2.544611,3.247757,5.659525,7.688052,-5.155245,-7.476571,2.667730,7.685478,-5.059998,-9.712403,6.906391,0.792204,7.624238,-3.719926,1.074329,4.791430,4.201355,-4.106285,1.049336,9.317055,-7.893573,2.516999,-8.390957,2.092107,-4.108178,4.772099,7.599665,-8.395872,6.832037,-5.892149,-4.407850,-8.942580,-2.787619,9.762236,-6.622626,5.119169,-9.934063,-9.616825,0.708870,9.498908,6.491981,-2.244855,5.317916,-9.657111,1.449209,-7.515379,-5.149373,-2.475468,8.459054,-7.728536,-0.298595,-6.709987,-3.084051,4.863533,-5.964526,9.731280,2.465285,-6.339054,-4.319689,9.358466,0.567464,2.084786,-1.014048,-7.969507,4.591494,7.752448,-5.205911,-7.510139,8.726669,6.647690,2.552314,2.351600,-0.847074,7.717771,-8.653092,-4.433060,-7.211359,6.051433,1.661308,-8.291322,-5.101230,-4.889102,8.540524,2.424973,9.330415,-0.750496,9.453722,9.853512,7.797022,-9.158971,-7.390307,8.330318,3.710662,6.120417,-7.745469,2.435167,-4.624486,-9.715616,9.367596,-1.409819,-4.111134,4.848659,-8.099126,4.138283,6.188885,-8.436202,-3.439265,7.456493,-5.213132,0.052089,-3.576956,-7.573001,-1.093498,9.682115,-5.488537,-6.660962,-6.264083,4.391931,1.067406,6.386290,-9.488075,-3.044840,4.374892,-0.635959,-7.796489,3.700921,9.029611,1.809117,-7.657696,9.342648,-0.579709,8.153254,0.030025,-2.202924,0.237281,5.722764,1.348121,-8.199540,5.758925,-3.431135,-3.571253,9.745846,7.228630,-6.153184,0.956155,0.236518,5.343731,-6.108384,8.415562,9.592802,-6.027671,-9.004022,-9.869765,8.914234,-8.278332,-1.504089,5.616210,-9.335998,-7.614968,-5.959874,-7.486792,-6.866223,-7.387954,-9.044830,0.246120,-3.632061,-2.581610,6.835344,5.918309,1.973119,-6.831399,5.251038,7.143195,6.451393,-7.574500,8.694983,7.605388,-5.748836,-8.629497,7.745861,5.382213,-2.122714,-9.827089,-3.884302,-2.492771,5.801615,1.783309,-4.139241,-1.395322,3.071166,4.508786,1.424871,-8.440674,-7.652820,-4.773809,-9.651346,6.555700,-1.794197,-0.259865,5.455336,-2.404143,4.325246,8.378899,-2.981961,2.344866,-0.959487,-1.069558,1.683530,-0.740261,6.543965,6.064799,-2.114122,-6.806464,0.301733,7.348691,7.151858,8.584076,-5.402483,-7.794467,5.420794,-1.979967,-9.905420,5.127307,2.867244,0.636177,1.549624,-1.253856,6.375077,-7.658270,6.556295,-1.985804,6.325875,6.322212,-3.386739,-4.752465,-0.369186,-6.368299,9.185805,-5.562515,0.411049,6.913271,3.614776,-2.830475,7.109914,8.042015,-3.554928,6.032958,1.951996,0.802899,0.967419,6.772444,-9.501437,-6.248281,-9.146436,-0.903912,0.067364,-6.178028,1.514315,5.286917,9.686732,4.753496,-4.255432,6.429257,-9.597237,-7.918982,-9.864319,0.704124,0.786650,-9.642606,-9.030140,2.285201,-9.058094,-8.197787,-6.295518,-2.688520,-3.444278,2.271310,1.961133,6.905045,-3.203259,4.340939,4.712396,6.818757,-8.547935,-3.432833,0.592412,-8.620019,8.427988,1.549922,3.921608,1.508016,-3.429786,-7.460608,9.302964,4.680216,3.521055,-9.022590,0.471535,7.801754,4.555944,-2.569400,7.355895,7.692559,-1.389080,-1.431903,-5.871138,8.735076,2.947476,-1.286610,2.692046,-3.478458,-7.766468,-6.387104,-7.001023,-7.404684,4.104172,-1.877298,7.075226,-6.960772,9.833506,0.413560,-5.760182,-7.396201,8.547830,5.568874,-7.415021,4.781839,-6.657584,-3.997744,-3.207413,7.946085,9.170497,-6.083260,4.982530,-5.229261,-8.953848,-7.023499,7.002072,-8.474163,-7.537115,7.704594,6.709158,8.179864,-1.668666,-1.339128,-0.235713,6.008858,-9.143745,2.182752,-0.090862,-1.972893,9.633014,1.419089,4.575139,0.247123,5.165447,-8.036733,-0.183042,0.431011,3.928885,1.708782,8.892348,6.175249,-8.761128,4.453786,9.532650,1.443001,-7.783272,2.529082,-8.958480,3.761663,2.149639,-1.215005,-2.918187,3.284854,-5.217636,2.165112,4.158545,0.922221,4.828076,-5.057809,-5.302271,-8.307760,-5.602748,-5.784975,-1.909858,4.003034,0.451198,2.807728,0.504201,0.819550,9.577843,3.932913,5.238577,3.381748,0.991822,5.611751,0.823068,-6.510574,0.368169,0.184112,3.078247,-7.619610,-6.283062,-6.426794,-2.106223,8.524906,-7.340624,-0.549203,3.126595,5.237223,1.830662,-4.052395,-4.801072,-6.621706,7.171624,0.541284,-5.804103,1.009285,-0.574911,-3.861319,9.520328,-5.924400,-9.235068,-2.647825,-7.464529,-8.785308,-2.193384,6.860332,-1.240645,9.711244,0.508651,-3.289162,-0.290328,-4.076734,3.690238,6.962731,9.065443,-7.540449,-8.012097,8.343420,-7.477014,-9.963939,1.641801,5.237015,1.542238,1.878099,-9.421064,1.039110,-0.811992,2.895839,-9.562256,-8.655470,-5.727186,-6.038178,8.387478,-4.838587,8.747865,2.447532,-4.435060,-8.140781,9.980317,-6.458489,3.366276,-5.199063,4.926548,2.077069,-2.579518,7.967413,3.152742,8.726607,-9.829276,-9.504491,-6.342472,-4.678852,4.729727,-4.748382,-0.282100,-9.865597,-3.765034,2.897997,-0.103634,-5.321372,2.858433,4.402237,3.414857,3.437820,-6.720637,8.700508,7.281130,8.977714,4.224349,6.600732,-5.328492,2.429365,-9.339366,8.357876,-4.793703,6.558318,0.593953,-1.282607,0.577863,-0.778117,9.253261,-3.316364,1.974099,7.676412,-8.400092,7.632407,-0.897464,6.268602,9.283905,4.188187,-4.635300,9.663477,-0.015630,-1.654299,-9.936117,9.834973,8.687348,-8.329367,-2.914274,4.021085,8.416646,2.293798,7.638193,-7.965210,3.668516,-3.032746,8.700540,-4.920735,6.439681,3.876144,9.216352,-3.023758,7.886715,-8.021122,-3.690875,-8.228056,-3.578262,-3.883843,-6.259493,-5.098721,-8.386550,-6.638925,4.649749,3.687605,4.331407,-2.773203,-1.919915,8.626745,9.004773,0.957051,2.688157,6.738157,3.575975,-0.636607,6.935114,-7.561359,2.234000,2.235917,3.857109,-0.025848], dtype = "float64")#candidate|5351|(1872,)|const|float64
const_5352 = relay.const([9,-2,10,-5,1,5,5,-2,-4,-4,5,5,-4,-1,7,4,-10,4,4,-4,-7,10,3,-9,-7,3,-10,1,5,10,-7,-9,-1,-7,-2,-2,8,-1,2,-9,2,-2,-10,-6,-2,-8,-9,6,-10,4,3,-3,6,3,7,-8,4,1,10,1,-4,-10,6,2,8,9,2,6,9,7,-3,-5,4,1,3,-5,-8,1,-3,-9,-1,-4,-2,2,-10,-7,3,-10,-8,-10,-2,10,-1,6,-4,-7,-5,9,-1,-1,1,4,2,2,6,2,8,-9,-5,-5,10,-5,2,4,-4,-6,3,-10,5,-6,1,-8,2,-9,2,5,7,7,-5,-5,-6,-3,-3,5,-4,-1,-8,5,8,-4,-8,-2,-10,-6,-10,3,4,-6,-10,6,-1,-8,-10,9,-9,-10,-4,3,3,-9,10,10,2,10,-8,-6,7,-10,-9,7,-1,-4,-9,-9,6,-5,1,-10,-3,5,-9,2,6,-3,10,2,6,6,-5,-6,-2,7,10,6,-8,-7,-1,2,-3,-2,-4,-4,-2,-4,7,8,-4,-3,-2,8,-2,-6,-3,10,-3,9,-9,-6,5,-10,3,-2,-4,-1,-5,-6,-3,-10,3,2,-4,-3,-4,-6,2,-1,-5,-10,-7,-3,10,-7,-6,-7,9,-4,10,8,8,-3,9,3,-7,2,6,6,7,-8,2,-1,-7,-4,2,-1,5,1,9,9,-9,-2,6,-2,3,5,7,8,3,-1,3,7,9,1,4,-6,1,-9,-7,-8,-2,6,1,3,6,-10,7,7,5,-4,8,-1,7,5,-2,-4,8,-4,-6,4,1,10,-9,-2,7,-3,-3,5,8,-3,3,-7,-7,-1,-7,6,-8,6,5,4,-3,6,-5,7,9,4,-9,-4,-1,1,9,-6,4,-8,9,1,-1,7,8,-9,-3,-10,3,9,8,-4,7,-5,3,10,-5,3,7,-4,-3,3,-6,-10,-8,7,-1,2,2,-7,-1,6,-7,4,8,-9,10,6,-7,-7,7,1,-4,6,-10,-10,9,1,-4,9,4,2,10,-10,-6,1,2,3,-3,-1,-9,8,-8,5,-3,-5,-2,10,6,-8,8,8,-9,5,10,-7,-8,9,3,9,10,-2,2,-4,-2,3,-10,-2,-3,-3,5,-2,-6,-1,6,-4,6,9,-9,-6,-3,-3,-3,-2,-3,9,-4,1,3,8,1,-8,-1,3,-9,-3,2,-7,-2,-1,-5,-3,3,-10,3,10,1,1,6,-4,-4,7,-4,1,5,-10,-4,9,6,-8,7,-5,7,-2,1,-7,-2,3,1,3,7,4,8,-1,-3,5,8,-10,-5,5,10,-1,8,-10,7,5,-7,-5,4,-9,-6,9,-4,8,-3,5,7,-8,9,6,-3,10,-1,7,3,-2,-10,-5,-2,-6,-6,-8,7,9,-8,-2,5,-1,8,-2,5,2,-7,-2,7,-3,8,-7,-9,-1,-1,-8,-8,5,-8,-7,-2,-8,3,7,-5,5,2,-8,-10,10,5,-10,-8,7,1,-6,-2,-2,-4,6,-9,-5,-3,-6,4,-6,3,-2,-2,-6,4,8,8,-2,8,4,-9,10,1,-6,-1,4,10,-4,6,9,-4,7,-8,-4,4,-6,6,6,-4,-2,5,-9,-3,-1,-5,-8,-7,2,-3,4,6,-2,-9,-10,1,8,-8,-2,1,10,4,-8,-5,10,7,-9,5,-5,-2,-5,-7,-10,1,-7,-5,-2,-7,4,9,3,-8,-10,6,5,-10,-10,7,-3,-1,-3,-7,9,-5,7,-5,-1,3,-5,-5,-6,3,4,-5,8,-9,-4,6,-2,6,-5,2,-3,-5,3,-1,7,-2,-3,9,-4,-2,7,-2,9,10,1,9,-6,-4,-6,-7,-8,3,-7,3,-5,10,3,2,-9,3,6,-4,6,-1,-3,-5,-7,-10,-5,6,8,-9,-7,10,-5,6,6,-4,-7,7,5,-1,-10,-9,-4,4,-8,-2,6,-10,6,2,5,-6,-3,2,-3,-10,-4,10,3,-1,-9,-5,4,5,9,-1,5,7,-8,-6,4,6,5,7,1,9,10,4,9,-3,1,5,1,4,2,2,5,5,5,-8,-1,-6,-10,6,-2,-8,-5,8,6,7,9,-6,-7,-4,5,9,-8,-9,-5,-8,8,-1,10,10,1,-1,-7,7,-8,-6,-3,-10,-10,-1,-8,6,-6,10,8,9,-9,2,-9,-2,9,3,5,-7,2,3,-9,-5,-8,1,5,7,-2,2,9,-2,3,2,-7,-4,9,1,4,2,-1,10,-3,-9,-8,-8,-4,7,4,-5,8,-3,5,-4,-8,-3,-9,4,-1,-7,-2,8,-5,-3,-4,-3,-6,-1,8,1,10,-6,8,1,3,-10,4,2,3,-2,4,9,-10,10,-6,6,7,-4,-4,-4,-4,-3,-4,-10,10,4,-7,-1,-3,-7,-4,-4,-6,5,5,6,-6,10,2,7,-3,-4,-3,-1,8,5,10,-2,-10,-6,-8,6,9,-6,-7,-3,-5,5,3,-6,2,4,3,-10,-5,-7,9,9,-7,-1,1,7,2,-5,5,-6,3,1,-6,-8,-9,3,6,10,-10,-2,-4,6,10,-10,3,6,-8,3,-9,-6,-5,8,5,-9,-8,4,9,-9,1,7,-9,-9,9,-2,2,9,-9,3,7,-6,2,-9,2,-1,7,-5,1,3,6,10,-5,9,8,-7,3,-7,5,-5,4,-10,-4,-9,-8,6,-10,-6,-5,-9,7,5,-1,-5,10,5,-6,5,9,8,8,3,-8,3,4,-4,7,-10,-4,5,5,-6,-3,4,6,-1,-5,2,-3,-7,-6,9,2,10,-4,-8,4,-3,-6,1,8,8,-6,7,7,8,6,-5,-5,-2,1,-2,-5,-6,-2,5,-10,-5,3,-6,7,4,-1,2,5,7,-4,-2,3,-10,-6,-7,5,-3,-6,-1,-4,8,3,1,2,5,-8,4,7,-8,-8,1,9,-6,-6,-9,1,6,-7,-1,7,-6,-4,-6,-6,-6,-9,10,3,-4,2,-9,-3,6,-4,-9,-4,7,7,9,-10,-10,1,9,-5,-1,8,-9,-5,-1,3,-1,6,4,-3,-9,-7,-4,-8,-10,-5,9,1,4,-4,-6,-4,-3,-8,6,-10,-6,3,-3,2,3,4,-1,-9,-2,10,9,6,-6,8,6,6,-3,4,7,1,3,1,10,-1,-4,-10,-6,-4,-3,-4,-10,-2,9,-1,2,-8,7,9,1,10,10,10,-8,-8,-7,-9,5,10,-7,-2,-2,2,-2,-7,-10,10,-6,-5,7,5,-8,-2,6,-8,-4,-2,3,-4,-6,9,7,-7,2,-9,-7,-4,9,-1,10,9,-2,-8,4,9,4,-7,9,-6,-6,-1,-9,2,-3,-2,2,4,-2,-6,-8,-8,3,5,-9,-5], dtype = "uint8")#candidate|5352|(1280,)|const|uint8
var_5353 = relay.var("var_5353", dtype = "float32", shape = (756,))#candidate|5353|(756,)|var|float32
var_5354 = relay.var("var_5354", dtype = "float32", shape = (1, 54))#candidate|5354|(1, 54)|var|float32
call_5350 = relay.TupleGetItem(func_2783_call(relay.reshape(const_5351.astype('float64'), [1872,]), relay.reshape(const_5352.astype('uint8'), [1280,]), relay.reshape(var_5353.astype('float32'), [756,]), relay.reshape(var_5354.astype('float32'), [54,]), ), 6)
call_5355 = relay.TupleGetItem(func_2788_call(relay.reshape(const_5351.astype('float64'), [1872,]), relay.reshape(const_5352.astype('uint8'), [1280,]), relay.reshape(var_5353.astype('float32'), [756,]), relay.reshape(var_5354.astype('float32'), [54,]), ), 6)
uop_5361 = relay.log(call_5350.astype('float64')) # shape=(256,)
uop_5363 = relay.log(call_5355.astype('float64')) # shape=(256,)
func_4307_call = mod.get_global_var('func_4307')
func_4310_call = mutated_mod.get_global_var('func_4310')
var_5365 = relay.var("var_5365", dtype = "uint32", shape = ())#candidate|5365|()|var|uint32
const_5366 = relay.const([6,-7,1,-3,-2,3,-7,-3,7,2,4,-6,3,-4,-3,-4,9,8,-5,-8,-5,-3,8,-1,7,6,-7,10,10,-2,7,2,7,7,-2,1,5,-2,-9,-9,8,-2,2,4,8,-7,-4,-2,-8,5,3,9,-9,1,4,6,9,-7,-10,5,9,-2,10,5,2,-7,-7,2,-7,-4,5,5,8,7,4,-5,-3,-7,-8,2,-4,4,7,-7,-9,7,3,-9,3,8,-7,10,9,-4,2,8,7,7,-7,8,9,1,-7,-2,8,8,2,-7,7,-7,-9,7,6,2,10,1,-7,-1,3,-5,-5,8,10,8,9,8,-2,-6,1,-4,-9,-2,7,1,9,3,-8,3,6,-7,1,-3,-2,-3,-8,-6,2,-3,1,9,9,-8,-10,-5,6,-1,7,10,-4,2,10,1,6,-10,-8,-9,-10,-4,-9,7,8,2,4,7,-5,-2,-7,-8,6,9,7,-1,-6,7,1,-1,-6,6,-5,7,-2,-8,1,1,5,1,10,9,4,-3,2,4,7,7,3,-3,-7,3,8,-5,-3,-5,8,-9,1,-9,-6,-2,-5,6,-5,2,-3,-9,-10,-3,3,-8,-3,-5,-10,9,9,10,2,-1,-8,-10,9,-9,-8,-4,2,3,-10,10,-5,6,2,-8,-4,3,2,-3,5,-4,6,-3,9,-2,8,-8,10,-7,-2,7,3,-9,3,10,6,10,-1,8,9,-10,1,10,-6,4,-3,5,10,5,-8,1,10,-3,4,-2,3,-2,3,-10,10,-6,-6,2,-7,-1,-5,-6,-6,7,-4,5,-2,6,10,4,-9,-6,3,2,7,4,10,7,3,-5,3,-6,8,2,-7,7,-1,2,-1,6,2,9,10,-7,2,-9,4,1,7,-8,-4,-10,-8,-10,1,-6,-4,4,-5,-8,-2,3,4,6,9,-6,10,9,2,-6,5,-5,-1,6,7,2,-3,-3,-8,8,6,-4,4,6,-5,9,6,-1,-1,2,1,7,-8,-10,-3,8,6,8,7,4,-6,-2,-6,-1,1,5,9,7,6,8,8,9,-7,-2,10,-6,10,3,4,3,9,-7,-1,10,2,7,5,5,-4,6,-4,2,-2,-10,-1,10,-2,-10,3,-2,-9,8,6,6,10,-6,4,-10,3,3,-4,3,3,-1,-5,-3,10,8,5,-8,8,1,1,10,-3,9,-7,-5,8,-7,7,-9,1,4,3,-1,7,-3,-3,-4,6,-4,-8,1,5,10,8,-10,7,7,8,-9,9,-3,4,1,-1,-1,5,4,10,1,-1,10,-5,-6,-4,7,-6,8,-6,-10,-3,5,-2,8,-4,1,10,-5,-8,-7,7,-8,2,5,-6,-6,-3,-6,3,9,3,-3,1,7,1,2,7,1,7,-9,10,-1,-10,9,1,9,8,-8,-1,8,10,-10,-1,8,6,10,-5,-8,-10,-6,-7,-6,10,3,10,5,-3,-6,-5,-4,-2,-8,7,-1,5,9,-6,-6,-10,10,-10,9,2,-10,8,10,8,6,-6,-2,6,-4,8,-9,-8,-8,5,-4,1,-6,7,10,5,-1,-2,-3,-6,-1,6,-3,-10,-7,-10,-4,4,-1,-5,6,-6,-1,10,9,3,-2,-3,-5,8,9,-2,9,10,-7,-1,-7,10,7,3,7,7,7,4,2,4,10,-2,-4,-8,-9,5,-6,-3,-6,9,4,-5,-6,3,-3,-9,4,1,-8,-8,8,5,8,-8,-6,-8,-5,-9,3,10,8,-6,-3,-10,-6,7,4,9,-10,8,4,-6,10,1,-7,7,10,-10,2,1,-10,3,10,8,7,-6,4,1,7,-7,-10,-2,10,3,-1,2,-3,-7,-7,3,-3,-8,-8,2,8,10,6,10,3,9,-6,-7,-8,-3,1,2,2,-2,-6,6,4,5,7,7,7,-5,-9,-5,9,3,-4,4,4,8,2,7,1,5,7,9,-8,-8,-9,5,1,-5,-4,10,-7,-1,4,5,9,-3,-4,10,-9,10,-3,3,4,10,-1,7,1,-8,-5,10,7,-10,-6,-2,3,2,-6,2,4,-7,6,-2,-1,4,5,9,7,-2,2,-9,-5,-10,5,2,-6,4,-4,-9,-9,2,6,4,1,-6,10,-7,-6,10,1,-1,-3,-8,-1,6,1,4,9,3,-5,-4,-4,-2,8,-2,-5,5,-7,-7,-4,-8,2,4,-1,-3,6,1,-6,2,4,2,-8,7,2,6,8,-2,-8,-4,-3,-3,-2,-1,-7,2,-1,-3,1,-6,6,8,-8,6,5,4,7,-7,4,-5,2,-4,-2,-4,9,-4,4,10,-2,-9,-8,-5,2,2,-1,-9,-6,8,2,-1,-1,-5,-8,-8,-3,7,2,4,5,2,-5,-1,-5,-1,10,-7,8,10,7,6,7,-1,5,-4,3,6,-8,1,7,-2,3,-10,1,4,-7,8,-4,-4,-6,9,4,-1,4,8,3,8,9,-6,-7,-8,3,-10,-7,-5,-1,-4,10,9,-7,-3,7,8,-9,-6,-7,3,-10,-6,-5,2,5,-5,3,-9,3,5,-3,-7,7,1,8,5,-8,7,-2,-1,8,2,-2,-4,-2,6,-9,-10,-8,2,8,6,-8,9,-3,-9,-8,2,1,-4,4,8,3,-2,2,7,-5,6,-5,5,5,10,-4,-1,10,-8,5,10,8,1,7,-10,10,-6,-10,4,7,-9,8,-8,5,-5,-5,-2,-6,-3,-10,7,-10,4,6,-5,4,3,-4,-4,-10,1,3,-8,-6,-4,-5,-6,-4,5,10,2,-2,10,10,6,3,3,3,-7,-2,5,3,-4,-2,8,9,-8,9,-8,9,6,3,2,-1,-5,1,4,-9,-3,-7,3,-1,10,6,-8,4,-1,-3,3,1,1,-5,-5,3,-5,7,10,-6,9,-8,9,10,9,10,-9,7,2,-5,6,3,10,-7,1,1,-7,6,1,5,-9,-1,5,-8,-9,4,-1,-7,8,-3,9,-6,5,2,7,-5,2,3,-1,4,4,-7,4,7,-2,-8,6,-9,5,-4,-9,-9,2,-10,-2,7,2,-10,2,8,-8,6,2,3,-9,2,-8,10,-2,5,5,-2,7,-5,9,-2,-2,3,4,-1,-4,10,3,-2,-2,-9,-10,-6,-4,8,6,2,-8,2,-10,-4,6,-8,6,2,-8,5,-3,-9,-3,2,-4,-7,-9,4,-10,6,4,4,6,8,-8,-4,-5,10,7,-5,-6,5,1,-9,-10,8,-8,6,8,-8,6,-1,-4,-8,5,-3,-6,-8,-10,10,1,3,-8,-5,-2,7,6,2,-1,10,4,8,-2,8,5,-1,4,10,-5,-2,-10,9,-9,8,9,-7,-1,-4,-3,-4,-8,7,-1,6,1,-4,-7,1,-4,-5,6,8,6,10,-4,-6,-1,4,9,9,8,-5,6,10,-2,5,-6,5,4,-9,-2,-1,-9,7,5,-10,-9,7,-10,9,1,-9,-6,-8,2,1,2,6,-8,-9,-9,7,5,-5,-2,-8,8,-1,4,7,5,-7,-9,-8,8,-10,-10,4,3,-10,-6,8,-6,8,-8,-5], dtype = "int64")#candidate|5366|(1350,)|const|int64
call_5364 = relay.TupleGetItem(func_4307_call(relay.reshape(var_5365.astype('uint32'), []), relay.reshape(const_5366.astype('int64'), [15, 15, 6]), ), 7)
call_5367 = relay.TupleGetItem(func_4310_call(relay.reshape(var_5365.astype('uint32'), []), relay.reshape(const_5366.astype('int64'), [15, 15, 6]), ), 7)
func_4870_call = mod.get_global_var('func_4870')
func_4871_call = mutated_mod.get_global_var('func_4871')
call_5383 = func_4870_call()
call_5384 = func_4870_call()
func_2635_call = mod.get_global_var('func_2635')
func_2637_call = mutated_mod.get_global_var('func_2637')
call_5398 = func_2635_call()
call_5399 = func_2635_call()
output = relay.Tuple([call_5341,call_5343,const_5351,const_5352,var_5353,var_5354,uop_5361,call_5364,var_5365,const_5366,call_5383,call_5398,])
output2 = relay.Tuple([call_5342,call_5344,const_5351,const_5352,var_5353,var_5354,uop_5363,call_5367,var_5365,const_5366,call_5384,call_5399,])
func_5420 = relay.Function([var_5353,var_5354,var_5365,], output)
mod['func_5420'] = func_5420
mod = relay.transform.InferType()(mod)
mutated_mod['func_5420'] = func_5420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5420_call = mutated_mod.get_global_var('func_5420')
var_5422 = relay.var("var_5422", dtype = "float32", shape = (756,))#candidate|5422|(756,)|var|float32
var_5423 = relay.var("var_5423", dtype = "float32", shape = (1, 54))#candidate|5423|(1, 54)|var|float32
var_5424 = relay.var("var_5424", dtype = "uint32", shape = ())#candidate|5424|()|var|uint32
call_5421 = func_5420_call(var_5422,var_5423,var_5424,)
output = call_5421
func_5425 = relay.Function([var_5422,var_5423,var_5424,], output)
mutated_mod['func_5425'] = func_5425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mod.get_global_var('func_4535')
func_4536_call = mutated_mod.get_global_var('func_4536')
call_5456 = func_4535_call()
call_5457 = func_4535_call()
func_3065_call = mod.get_global_var('func_3065')
func_3069_call = mutated_mod.get_global_var('func_3069')
const_5471 = relay.const([-9.108224,-7.946029,-0.145894,-1.258312,4.239269,9.791015,4.684391,2.800590,8.271834,1.484074,1.816924,-6.056532,5.500129,2.115156,-0.927369,6.709254,1.375594,5.558549,8.476783,-4.451608,-3.927692,-6.261541,-5.787630,-8.600800,-3.306954,-4.111410,8.312322,-8.518868,6.449665,4.487457,0.837476,-8.269613,1.641429,-1.998847,-9.578258,1.246511,8.051274,-4.033439,8.013077,1.294513,-3.796868,5.762062,-8.576969,5.483133,-0.375608,3.118967,8.986524,-2.922914,8.579491,1.030485,9.542044,8.291663,-3.925444,-5.280425,-1.100588,0.039485,9.038391,-5.995275,-7.214857,9.387232,1.304567,8.565268,-9.417304,7.422362,-8.129800,8.964597,3.903730,-9.692981,-6.045388,-0.732958,-0.846819,-5.763746,-8.363066,4.315050,-6.396646,7.721643,-1.683580,-3.487359,-7.585904,-0.260905,-0.210698,-8.250885,-7.192685,-9.777503,2.388407,-0.550531,-9.826763,9.961092,4.332008,-0.915107,9.237155,8.430295,-5.980595,6.070705,8.909151,9.944524,6.965316,-1.196059,6.376492,8.452479,9.043015,-9.443435,-0.653162,-3.553880,3.206835,0.768436,9.474133,-3.431250,-9.945537,-5.038777,3.187073,6.457897,-1.096016,3.656136,-3.235215,-0.931446,-7.321726,-6.732310,7.126053,-4.809434,8.345441,2.391305,3.384622,-4.360606,2.494425,8.836519,-1.845985,-0.479595,-7.944200,-4.304094,-1.171025,-7.518920,-9.919395,3.454429,-4.473310,-3.836235,3.276578,-1.149923,3.274560,-3.414455,6.163972,1.945075,-2.432688,-0.759017,2.151424,-9.141513,-5.023944,-7.312861,7.292019,-6.160620,-9.532078,4.936719,-1.912849,-2.542461,-6.078966,4.308600,-0.308858,6.733430,-0.591108,-6.853940,9.163107,6.939096,1.935212,-8.638301,2.706334,-7.881675,6.884160,0.753086,9.823055,8.456553,-1.156546,-7.233149,6.240438,7.267009,8.206614,-2.766502,-3.717131,-5.474199,2.700783,-2.814235,8.324841,-5.811124,-8.735536,9.324476,5.202580,8.676779,0.832814,7.702466,-5.179933,-2.922185,-2.530526,-1.303168,-8.500649,-7.496740,6.213537,-6.211423,-1.631375,4.113035,-9.820300,-4.505058,5.615757,4.975979,8.123851,6.535852,8.481315,-0.351837,-3.837904,2.599945,3.493597,2.143595,-2.139000,-5.614818,-5.103752,-0.051422,-4.819940,4.821473,-9.289161,-0.457624,5.354426,8.709866,1.727340,-1.574283,-9.549942,-1.583909,8.223260,-7.208194,4.031060,-2.911184,-6.366116,-6.671759,-0.860162,-8.515335,-4.210274,-3.032870,0.842216,-2.834798,1.304500,-5.388292,-6.020117,-1.113166,-3.896778,-1.387645,9.576982,-6.960614,0.795198,-2.691299,-8.817569,-0.168529,3.024440,-1.484337,6.581100,2.498482,9.883953,-8.017118,-9.541440,9.833005,-5.485790,-9.808727,9.959298,1.844274,1.527985,-3.833031,4.365801,-2.777117,4.840072,6.610434,1.965186,-5.939835,-2.558580,1.375847,5.018907,-5.554693,-6.262320,3.876527,8.938794,-5.029738,-7.950878,-9.125146,0.313899,-6.678558,9.628862,8.654539,-9.943118,9.810179,4.433534,1.575595,7.951438,-7.216928,-7.382164,0.831991,-5.140682,-7.218015,-2.079340,-0.987785,8.337610,7.380391,-3.713800,2.294775,-2.134342,-2.391391,4.941910,-9.481220,6.339990,-4.550080,-8.105873,1.238921,5.796383,3.817000,-7.641588,-0.179772,-2.112811,-8.312730,-5.682357,0.828744,-9.976340,-0.345250,2.186417,-2.065329,4.055900,-3.971368,3.565331,1.271021,5.266666,-2.389096,-9.615827,9.315087,-2.281689,-4.736049,6.342052,0.547952,8.055662,-1.171297,-6.344795,4.363800,3.165211,3.607728,6.018510,-5.773415,8.187216,-9.422337,8.484328,-5.095773,0.260987,-1.781295,-6.796264,-2.342787,-3.977473,-5.305337,6.383674,-0.483061,8.624025,1.155731,-7.450552,6.680018,0.002073,-1.182909,9.269329,-8.210240,6.673848,-0.116517,0.230223,2.988467,7.433368,-5.412158,3.672244,9.651364,5.127276,8.911724,-0.968645,1.253899,-7.471643,-0.865295,5.117801,-8.657243,-6.541711,-7.398270,3.466967,7.681136,-3.579324,1.561322,-9.310834,-1.392871,-8.431544,-8.170247,0.133527,-2.558656,2.226919,0.016811,3.472376,1.664973,-4.924270,8.718836,4.542278,-0.335395,6.759027,2.652686,6.130268,5.390940,4.259474,-7.506527,3.304188,-3.710333,-9.357183,7.322759,5.956111,9.837703,2.849212,8.509699,7.020286,-6.799954,4.840299,-1.658737,1.279613,-1.952117,5.222804,9.173624,8.219511,8.529672,-5.712023,-9.202701,5.015200,7.913035,-3.190278,2.733537,9.285602,-0.069907,1.371229,5.791565,-2.235688,8.358794,-1.731066,3.191304,-3.655642,4.939781,0.860363,-4.048836,4.133167,9.049657,-9.220387,5.994175,-5.231377,4.166937,2.444212,5.551477,-3.463158,1.074756,7.448797,1.520318,-0.011118,-6.663834,-9.573291,-5.701425,1.908462,2.257072,0.680749,7.621473,8.860915,4.467395,3.792469,-7.462919,-4.419951,-3.422619,-1.996908,9.091939,8.184944,6.174553,3.833903,9.143506,7.600034,-0.605289,-6.989462,0.547515,-7.847796,-6.125527,3.773643,-7.863399,-8.461015,5.319921,-6.654548,1.560848], dtype = "float64")#candidate|5471|(480,)|const|float64
const_5472 = relay.const([9.388239,7.577123,6.853310,4.069387,8.870189,4.150020,8.890686,3.987929,3.913841,-4.323122,-5.414646,-8.490457,3.531351,-9.919985,-6.403621,2.077736,1.376295,5.183889,-8.857087,-5.203431,4.098083,-7.959129,3.873823,3.272967,5.091013,-2.711227,5.141141,-2.497074,3.741230,9.402906,-1.817840,4.406596,1.988863,-0.806783,9.930489,4.088125,3.107709,6.755662,7.371974,2.031145,4.647085,8.545954,-1.085237,5.257132,-7.372510,-8.537812,8.932697,-3.863196,-4.947201,-6.213933,5.393082,-3.963618,0.770034,4.328037], dtype = "float32")#candidate|5472|(54,)|const|float32
call_5470 = relay.TupleGetItem(func_3065_call(relay.reshape(const_5471.astype('float64'), [480,]), relay.reshape(const_5472.astype('float32'), [54,]), ), 12)
call_5473 = relay.TupleGetItem(func_3069_call(relay.reshape(const_5471.astype('float64'), [480,]), relay.reshape(const_5472.astype('float32'), [54,]), ), 12)
output = relay.Tuple([call_5456,call_5470,const_5471,const_5472,])
output2 = relay.Tuple([call_5457,call_5473,const_5471,const_5472,])
func_5498 = relay.Function([], output)
mod['func_5498'] = func_5498
mod = relay.transform.InferType()(mod)
mutated_mod['func_5498'] = func_5498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5498_call = mutated_mod.get_global_var('func_5498')
call_5499 = func_5498_call()
output = call_5499
func_5500 = relay.Function([], output)
mutated_mod['func_5500'] = func_5500
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5514 = relay.const([[[-9.076405,0.741684,-0.798236,2.275729,-6.451027,-0.048703],[3.374774,-2.053376,2.543092,-8.235462,2.123544,6.543823],[4.729878,-0.105989,5.763271,5.489688,6.181299,9.675751],[-2.336164,-7.925270,4.572743,2.055087,-1.224454,1.463197],[-2.676674,1.609301,-6.673412,-8.260477,-3.417677,7.726414],[-1.326917,1.401200,8.099637,4.803703,0.176992,-1.668529],[-3.963507,1.371698,5.578920,5.086092,5.395201,-9.055515],[9.020803,6.895726,2.761187,-9.864974,6.102803,1.057712],[-8.589066,-0.769642,-6.484463,-7.400040,-8.868031,2.702070],[-7.645713,-0.205960,-9.893378,4.728850,9.448361,0.051195]],[[2.342829,-2.293942,-2.229434,-4.503904,-1.777494,-6.190773],[1.566128,5.712993,2.710859,-1.729263,4.239419,3.113820],[9.153012,-3.591343,9.928506,5.633388,2.850933,8.959602],[-1.671885,-3.353593,3.917264,0.190024,9.540985,-8.794848],[-2.998417,-4.916263,6.105015,5.983995,-2.409447,0.072529],[5.226301,-2.321381,-6.172539,-1.127607,2.743332,8.552289],[-2.304902,-3.737573,-7.376121,-9.079641,6.692265,-1.817710],[-8.884933,7.374971,2.037962,-1.670272,4.726170,0.444009],[-7.155185,-9.854751,-7.358897,-0.003593,4.705906,-5.945052],[-1.608849,-9.231248,6.851685,-8.196474,-7.804766,-2.577676]],[[6.262518,-4.410729,-8.056696,-2.984153,-6.684895,-0.056239],[3.280565,5.228416,3.818117,-9.592434,-5.202786,9.933528],[9.634718,3.697652,1.302617,-5.192626,-2.728958,-5.732665],[-9.056622,3.197432,9.385334,-4.197448,1.847399,1.768558],[5.957924,-2.231226,-4.590506,-2.288660,0.434325,7.755673],[9.591747,2.529598,1.954019,-0.264546,2.660437,-9.155923],[-1.035682,3.845641,-2.220019,-5.754831,-0.744958,9.928893],[5.378580,-3.816164,4.498311,3.134433,7.454510,-1.317057],[-7.596481,0.330605,-9.974880,3.779295,-9.108199,-3.258797],[9.403436,-9.754568,8.480637,2.380488,2.860656,-1.187159]],[[0.535700,-4.139857,-3.311934,4.079039,2.264228,-2.778166],[-0.638797,-7.809732,-0.262285,2.642029,-4.695070,4.923488],[0.636706,-0.016500,8.601752,6.773980,-4.309104,3.439381],[-3.428733,-7.752237,7.987395,-6.503123,-9.860963,-9.738287],[1.802034,-7.987852,-7.806978,-1.556934,-1.085742,-9.426759],[8.266929,2.932574,8.617166,-5.269684,2.811490,-2.375169],[-2.704729,8.666269,0.533840,8.372434,1.527518,-9.914937],[-1.357463,-3.773252,5.960075,-1.457365,-4.392769,9.626716],[-0.066277,-1.994000,-1.148811,0.436286,5.623598,4.297548],[-7.135694,8.837510,-7.525115,3.854934,-3.384937,-5.727087]],[[1.346969,-5.946095,-9.243853,3.194618,-2.622896,-8.513014],[-6.877865,0.344704,-3.260522,1.678832,9.519496,8.991613],[-0.365285,-8.845835,-8.884202,7.721673,9.337210,7.146077],[7.388457,1.929265,-9.674086,-7.821633,0.463030,-3.600802],[-8.292873,-8.732593,7.750118,5.942899,7.624687,-5.299516],[-5.014157,8.689628,-3.952215,1.349786,9.178379,7.043063],[2.689630,7.188870,6.620476,-4.188543,8.780481,7.142858],[-6.550226,-6.274768,2.292848,9.912065,-8.185358,7.130438],[-3.027619,-7.744716,5.065512,0.248564,7.160992,7.058875],[8.152217,-5.070976,4.116063,8.840886,3.636879,5.624316]],[[-4.055120,-8.323473,0.082941,5.849607,8.928269,0.381590],[1.406272,6.311268,0.973771,5.101513,-8.379402,4.949095],[-8.047066,-7.414393,9.721814,-8.352185,-7.437399,-6.023272],[-6.510599,5.332945,-4.704706,3.759361,-5.362687,-1.809060],[3.323798,-2.917570,-7.643098,8.728056,-4.190318,-6.097164],[1.854602,3.265398,2.900718,7.044158,-9.708123,2.819769],[-5.636145,-8.868965,3.463512,-6.643268,6.624432,6.677778],[7.457073,-6.111430,-1.466310,2.617885,7.779540,9.491515],[-3.004321,-0.818122,-4.433342,9.795053,-5.699664,4.478327],[4.053054,8.578350,-9.277745,-9.280365,6.656603,7.193298]],[[5.716825,-9.450088,7.697622,7.678700,-8.989798,-1.480684],[-3.175988,7.656012,-9.342220,-7.346305,2.188519,-8.181416],[-8.676251,8.029905,4.781908,2.757799,9.155073,7.181861],[-8.868643,-8.009192,-6.639214,7.842786,8.208680,-5.549589],[4.920318,4.846135,-4.667406,-9.717062,-3.665566,-8.249791],[-0.954252,-4.194752,9.307775,-9.267399,-1.740731,4.960953],[-0.156937,9.822863,3.442512,0.205317,2.846822,2.935148],[-9.341768,-3.940858,6.885375,-7.579839,7.033657,5.049774],[-4.981579,-1.446363,4.867417,0.101964,-5.130909,8.273849],[-0.370378,-9.888884,2.178363,8.397826,1.518462,-7.653473]],[[6.528181,-3.723374,1.149550,8.898693,0.085882,-3.123997],[2.581096,-4.046690,9.108490,-2.337265,-2.019459,3.070104],[-3.968312,5.216595,-5.841695,2.331727,-6.143171,-0.192543],[8.481574,0.394047,5.897579,6.458623,-8.589130,-6.656731],[7.979869,4.963275,4.735450,0.436778,-1.609705,5.431800],[-3.493900,-0.726626,-7.030990,-6.495557,-9.525605,1.874584],[-3.329058,6.034373,-3.363297,-5.439323,-6.158833,-9.511713],[-1.144306,4.888850,-1.425083,5.705890,3.984550,-7.118242],[1.780853,-6.557828,-5.423041,9.677996,-7.207667,7.952329],[2.927278,9.310674,-4.527615,4.989780,7.119550,0.939560]],[[-8.603974,6.246127,-8.361171,2.424836,-4.746132,8.026042],[7.709424,8.266013,0.119257,2.694758,-4.927483,-9.498733],[-1.812015,4.117099,8.305272,0.015619,-6.464864,5.192607],[-6.013250,-5.099924,-2.229629,-3.450561,-0.765247,-8.443911],[-4.162456,-1.856755,-3.585552,2.694151,7.298328,-6.600246],[2.265333,-9.923984,-4.602184,-3.568732,-7.939033,-1.344718],[5.436939,9.844135,-8.917640,4.879591,5.229582,-7.651086],[9.708210,-4.203712,-9.131174,6.257921,-2.910572,3.570082],[4.720697,-3.112542,-5.005916,2.084637,5.543548,-7.021920],[-2.234550,-6.029204,4.999851,7.863519,0.070140,4.190056]],[[-5.790956,9.752901,-1.045862,-0.137294,3.842144,-6.848232],[1.416901,0.794347,-0.957782,-9.350589,3.459537,-1.488434],[2.607917,3.862126,8.762196,0.377440,9.515330,-5.770957],[1.152633,-0.995563,8.452116,0.608281,-9.176405,4.844572],[-7.996882,3.768252,8.049534,-1.049537,4.546838,5.990329],[5.695662,-1.735980,3.841615,-4.443356,2.394313,9.585606],[1.797475,6.287220,2.752185,-4.744951,1.898105,-5.001055],[1.775219,8.084151,-2.891622,0.196746,0.720004,3.817332],[0.599742,-4.662677,-1.008355,1.016194,-9.854130,9.131521],[-2.899659,8.019583,2.077463,-9.573639,-9.822906,7.290932]]], dtype = "float32")#candidate|5514|(10, 10, 6)|const|float32
uop_5515 = relay.tan(const_5514.astype('float32')) # shape=(10, 10, 6)
output = uop_5515
output2 = uop_5515
func_5521 = relay.Function([], output)
mod['func_5521'] = func_5521
mod = relay.transform.InferType()(mod)
output = func_5521()
func_5522 = relay.Function([], output)
mutated_mod['func_5522'] = func_5522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2350_call = mod.get_global_var('func_2350')
func_2352_call = mutated_mod.get_global_var('func_2352')
call_5564 = relay.TupleGetItem(func_2350_call(), 0)
call_5565 = relay.TupleGetItem(func_2352_call(), 0)
output = relay.Tuple([call_5564,])
output2 = relay.Tuple([call_5565,])
func_5580 = relay.Function([], output)
mod['func_5580'] = func_5580
mod = relay.transform.InferType()(mod)
mutated_mod['func_5580'] = func_5580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5580_call = mutated_mod.get_global_var('func_5580')
call_5581 = func_5580_call()
output = call_5581
func_5582 = relay.Function([], output)
mutated_mod['func_5582'] = func_5582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5583 = relay.var("var_5583", dtype = "uint64", shape = (9, 10, 11))#candidate|5583|(9, 10, 11)|var|uint64
const_5584 = relay.const([[[-9,3,8,-9,6,-10,-7,-8,-2,-4,-4],[-9,-7,-4,10,2,6,9,5,-1,-10,-7],[-5,-10,2,6,-8,-1,-3,6,1,-5,5],[3,1,-10,6,-8,2,8,3,4,-8,-8],[9,8,-4,-9,8,1,-5,-2,10,-3,-9],[-8,4,4,6,5,-8,7,6,2,-7,5],[4,4,9,-6,-8,-1,-6,-6,-8,10,-6],[7,3,7,-2,2,2,-10,3,9,2,-6],[6,-3,-5,-10,9,4,-7,-10,5,-5,-9],[-8,-4,-8,7,-9,7,7,4,-4,7,5]],[[-3,2,-10,-5,-5,3,-1,8,-4,3,6],[5,9,4,-9,9,7,-10,-2,8,-9,7],[-2,10,-9,-7,-4,6,2,-9,-3,3,-4],[9,-7,3,7,-9,-2,-5,3,7,-4,1],[7,9,2,1,4,-2,-6,10,-5,-2,-8],[-10,-1,-8,-2,-3,9,-8,-5,-9,-1,-1],[-7,2,-9,-9,-1,8,7,-9,3,7,-5],[4,-6,-8,-3,-3,7,2,-10,-3,-1,-5],[6,-7,-5,4,-9,-9,-1,-1,-3,7,-2],[7,2,-4,-2,-3,-4,-9,5,8,-2,-1]],[[1,1,6,5,-7,-9,4,-1,-4,-7,5],[7,1,-5,4,10,-6,1,-7,2,-3,-4],[-8,-5,1,3,2,-7,-7,10,6,9,8],[-8,10,-10,4,-10,-9,5,1,-6,-9,-7],[-5,8,-4,-5,-8,-9,4,-1,-3,1,10],[-2,5,3,2,8,7,-1,6,-5,-1,-5],[4,-3,9,-9,-9,9,2,6,1,3,4],[1,2,-4,-2,5,-7,5,2,4,-8,7],[-2,-5,-9,-5,4,10,-3,6,5,3,2],[7,-3,-9,-3,-10,9,10,-4,8,-10,-4]],[[7,10,3,-4,-1,-3,2,-5,6,10,1],[-1,6,4,2,-10,-10,-10,6,-10,-5,-3],[-2,-1,-4,-4,-4,9,-8,7,3,-8,-10],[5,-2,-4,7,3,-4,10,7,2,-10,-1],[-5,10,-8,10,9,-5,-10,8,-4,7,-7],[-5,-10,6,-7,-10,-7,-2,-1,4,-8,10],[6,3,1,8,-6,2,2,-8,5,3,10],[-9,-8,8,-10,3,-6,-7,-8,-5,-10,2],[3,10,10,3,1,-9,-3,-6,-7,10,-7],[2,-2,2,2,-5,-6,6,-10,-3,9,9]],[[-1,6,6,-5,2,8,4,7,6,4,7],[-5,9,8,-2,-1,-4,4,10,10,-7,-6],[-2,7,-5,9,1,6,6,7,3,-2,4],[4,5,7,-4,-3,8,-6,10,-4,3,-10],[-6,-6,8,3,-4,-7,-2,-3,1,-5,-5],[-1,-8,8,9,-8,-9,-3,4,9,4,9],[2,2,-7,2,10,8,2,-7,8,-5,4],[3,5,-6,-8,7,-8,-5,8,8,3,-3],[-4,4,-10,8,-9,9,-5,-5,1,-4,10],[3,-7,5,-7,-2,1,-4,7,2,-2,-9]],[[6,-1,5,6,-5,3,-10,-9,-9,7,-9],[8,2,9,10,3,2,-5,-9,2,1,-5],[6,-7,7,2,4,1,1,-2,-7,-1,8],[8,8,-1,-7,-8,-2,-7,-9,-4,-10,-1],[-4,6,-9,-4,2,6,2,-8,6,10,-3],[5,-6,8,-4,1,-5,3,3,-3,-9,-6],[8,8,4,-10,-6,2,5,-10,-1,1,7],[10,-1,-4,3,1,-7,-5,-8,-9,-1,-8],[1,9,8,-7,-4,-4,1,-7,-1,-6,-9],[9,-6,-4,9,5,-10,3,-4,5,-9,-5]],[[1,3,-2,8,7,-1,-6,-2,-6,7,3],[6,-10,9,1,10,-8,4,1,3,1,-3],[-10,-4,-5,-4,10,-10,-2,2,3,-7,-4],[-2,3,2,-1,3,-1,-8,7,-7,-6,1],[-5,3,-4,10,-1,10,-8,-10,-9,-8,9],[9,2,6,4,-5,-10,-9,-9,2,-9,-6],[5,4,8,-6,-10,4,2,9,9,7,10],[-4,4,1,-8,-2,2,9,-10,8,2,3],[3,-2,-3,2,8,6,-1,7,3,-2,-5],[-6,8,6,-7,-3,-10,3,-7,-9,-10,-7]],[[2,-8,-3,-2,3,-3,4,-8,10,-1,10],[6,-8,10,-1,-7,-9,10,7,-10,1,-1],[5,-6,-3,-5,-1,-8,-7,-7,5,9,-10],[8,2,8,-3,8,8,-5,1,4,3,10],[-4,6,10,-5,-8,-8,5,2,6,-10,-4],[-5,-6,-6,5,-1,-3,-10,6,-3,-10,-3],[-10,-5,-6,9,9,-4,7,6,-8,-10,-3],[3,-6,2,-1,3,1,-6,-10,-7,-10,-3],[-1,-8,-5,-9,1,-10,10,4,-8,-1,-4],[3,1,-4,1,10,6,2,-8,-2,4,-7]],[[3,-4,-10,-7,3,2,-2,-6,4,6,4],[1,-8,3,4,-6,1,5,6,-8,6,2],[-6,10,2,10,-3,-10,-6,4,-2,7,2],[-7,-6,5,6,-9,-6,10,4,-6,1,-1],[-8,6,-7,3,5,-8,-4,-4,-2,3,-1],[-6,3,3,9,-2,10,6,3,5,-1,10],[7,8,-6,-5,-3,3,4,-3,-9,-1,5],[6,-9,5,-5,-7,-8,10,-5,-10,-8,6],[8,-5,6,-7,5,8,-4,6,-9,-2,10],[-10,8,3,2,8,-9,-8,10,8,7,-1]]], dtype = "uint64")#candidate|5584|(9, 10, 11)|const|uint64
bop_5585 = relay.add(var_5583.astype('uint64'), relay.reshape(const_5584.astype('uint64'), relay.shape_of(var_5583))) # shape=(9, 10, 11)
func_4502_call = mod.get_global_var('func_4502')
func_4503_call = mutated_mod.get_global_var('func_4503')
call_5588 = relay.TupleGetItem(func_4502_call(), 0)
call_5589 = relay.TupleGetItem(func_4503_call(), 0)
func_3879_call = mod.get_global_var('func_3879')
func_3881_call = mutated_mod.get_global_var('func_3881')
const_5601 = relay.const([-4.442490,5.104694,5.387130,8.887987,3.460964,8.084186,9.788712,-2.289243,-3.485902,-0.043846,9.173963,-6.574107,4.249972,-2.864526,5.398958,-6.159109,-2.367056,1.506727,9.970370,0.206610,0.452636,5.778920,1.153148,2.130755,9.162259,1.370628,3.451136,5.226656,-1.227213,9.284657,-3.938072,5.270801,0.969867,-2.065095,-3.708554,-4.017141,-7.409486,-8.290554,4.819129,-7.470468,9.058552,-0.891006,3.477481,-1.949581,0.270250,1.758001,1.571651,-4.610673,-7.557993,5.492205,-9.904053,-1.403415,-9.450167,2.124066,-6.263472,-0.767405,6.166077,-9.534295,-5.870825,-1.061164,-5.896188,9.160731,8.594661,-3.373377,-4.666875,-1.732222,7.666799,-0.310458,9.600233,-4.181573,8.932538,9.097355,2.408714,2.009564,-1.559410,6.582797,5.727917,6.131869,-3.388618,-8.944069,2.742499,-1.218929,4.204586,-1.609528,-4.516628,-9.281502,-0.079854,-0.547197,9.529565,2.053507,-8.475408,-7.256847,-3.088793,-8.032016,-7.589296,3.861540,4.627089,-0.407174,-7.860178,7.585502,0.931590,-6.933470,4.260540,3.372008,-7.565923,0.846911,0.536577,3.879054,5.533885,0.678334,-9.019594,5.869706,-6.521947,5.253930,8.902086,6.322750,-3.856062,-7.012942,-5.886355,4.561502,-5.467996,5.157556,-8.035828,0.901983,-9.118612,9.980580,-2.909686,-2.721892,8.917114,0.476329,-4.071845,0.864709,1.000437,6.286944,-2.607505,-1.919481,2.431719,-6.490635,-0.899702,4.495227,-8.627496,-2.063258,2.226581,8.585650,-4.695791,7.437098,8.091191,5.725765,-2.567995,9.850914,0.799654,-6.745346,6.950332,4.654077,-8.327472,5.721837,3.897015,3.484911,-2.837825,9.655103,-4.460252,-2.519371,-0.342440,-9.477672,-6.153537,8.042971,9.643688,-4.092704,-4.729435,1.265694,-2.063357,-7.241943,-0.651394,-6.589218,-9.754337,7.224294,0.204085,5.049812,4.224771,-4.164051,7.431432,-9.009435,3.807908,6.452299,-2.141609,3.176490,2.886509,-5.959754,7.191535,2.715368,4.647853,-8.999348,-4.045443,-7.648497,4.698293,9.726484,-1.300827,-4.862967,-4.914801,4.816308,-3.987489,1.697605,-2.647196,9.133983,-7.681292,-6.836191,3.750008,-3.546034,-3.758001,1.626839,-5.235404,-7.981268,-7.397305,-7.622256,-2.214068,4.215375,-1.109101,0.108006,2.468642,6.764856,0.970549,5.611232,-6.963520,-3.084629,-7.115651,5.812747,-2.715279,4.957834,-4.096487,6.040358,6.138556,5.394513,4.072746,2.332025,6.551774,-8.838013,-4.368648,2.058881,-0.232277,9.059037,8.245559,6.858851,-0.453543,2.753005,-0.556146,6.809831,0.327520,-9.458676,0.095802,7.790629,-3.789930,0.844584,7.213311,7.755984,-7.205901,-0.212686,0.571383,2.635931,-3.279012,-6.793115,5.159684,6.421449,-8.360226,0.657753,3.774104,-2.080086,2.533915,-8.646940,-3.656488,-1.549408,-3.612101,4.254368,-1.706513,0.882757,5.690966,4.599910,7.225000,9.712377,-9.964629,-0.991942,-3.437506,0.090806,-8.462892,-4.285850,-4.295536,-0.087767,-5.444932,-8.944584,-6.627054,4.794073,-2.191112,0.474885,4.031946,5.049226,7.833963,5.198790,3.483345,7.909768,-4.463537,-9.292575,-3.101826,9.552049,-7.126624,3.219312,6.253774,-5.766591,-1.480154,-3.599178,5.848208,6.588551,9.154078,-2.409128,-7.990842,-1.175824,7.677672,1.641424,5.828478,-8.133236,-7.358297,5.877290,6.327692,0.877232,4.579819,0.824585,-9.851733,2.648721,-6.250071,-0.914021,-0.708502,0.317380,9.087684,3.221301,-9.027073,6.801813,-1.605132,-9.047326,-7.098791,6.077816,1.356636,-4.203721,2.705423,9.093910,8.122826,-3.821474,0.549002,-4.993288,-1.376292,1.067497,4.340571,-1.210753,6.423859,4.665734,-0.473281,8.553471,-0.889992,9.286752,-3.300712,1.307667,-6.147307,9.581603,3.273723,1.899734,9.326029,-1.235716,9.908177,-7.735089,-0.046268,-2.542284,-6.679438,-1.877722,-9.322879,5.842178,4.021812,-0.783396,-3.899486,0.109871,9.068351,-6.900473,1.030226,-0.132033,7.809530,-3.226630,-6.824128,-2.034839,-6.613250,5.229148,7.156998,5.083324,7.142101,-5.133858,5.781865,-0.656323,-9.466438,-1.368062,4.896765,-8.346567,3.668342,-2.162319,-2.326313,6.619412,-8.123776,8.691382,1.876444,-5.480078,-0.601245,-0.916219,-8.080851,7.650643,2.744401,-5.789464,-8.436061,6.813067,2.290743,9.934416,6.780190,0.822908,-6.829121,8.545391,0.066510,-2.969052,-5.998318,-7.709188,4.640665,-9.841796,2.166090,-0.300705,6.204834,2.686949,2.189482,-5.397520,2.081324,-2.413644,-9.750672,8.545064,5.778662,-1.500922,6.361668,-5.888742,-1.411700,9.043554,-0.933667,3.356520,-7.873976,-1.564230,9.947710,-4.292711,-1.649199,-4.400775,-9.355130,7.790268,-8.115536,0.805546,-8.907156,-3.558877,-0.202996,-6.827527,7.398902,9.239683,-3.752672,-0.316059,-5.128264,8.585364,3.898615,-4.155471,2.909909,-0.391446,6.018279,9.055477,9.983829,-7.575338,-6.714876,-6.465998,-9.808510,0.702016,-2.938941,-4.761000,-4.478964,2.705834,-5.577582,4.856908,0.208449,7.790666,9.841917,-8.404845,-2.538199,0.522175,7.304722,2.290723,5.898641,5.074524,-6.066234,-5.387950,2.436852,-6.145181,6.373939,6.389118,6.180578,1.927151,-0.271656,-9.427027,-8.989603,2.892806,8.582759,0.375093,7.874386,-2.764319,1.555919,-8.434465,4.616160,-8.515279,-3.243496,7.699342,-5.916295,-5.047769,0.314114,7.620311,-2.519969,8.964288,5.894896,-5.794150,9.729575,-3.773552,-7.488488,0.730214,-5.619351,-6.823774,-6.719790,-9.191685,6.056254,4.307294,9.303548,-3.623725,1.742655,-6.269104,1.850183,2.209127,5.873827,8.463995,-4.339782,2.822707,-8.220786,3.340267,-4.183608,5.581029,-7.771380,-8.597602,5.397459,-8.582115,-8.735696,-2.861628,1.984295,8.101184,9.043249,-5.336130,5.945418,-3.382251,-7.701030,-1.355678,-6.405833,-2.215975,-6.627781,-0.836313,0.816466,-9.336274,2.011785,3.282403,-4.771494,-1.469522,7.890868,5.948238,-8.435386,-9.100933,7.956367,4.542522,-8.810631,9.165921,-7.228196,1.860416,-2.344877,-3.137688,-2.566578,-8.498324,-4.023152,-0.421762,-3.992048,-4.162676,-3.446117,6.380882,-4.809646,4.598607,-5.770450,6.915270,-5.681500,-1.847630,1.456290,6.462649,5.096785,-0.112306,-0.897703,2.799298,8.429505,6.530421,3.797996,7.928983,-9.631956,-4.517842,6.508210,2.286593,-0.283884,-2.640409,-4.559440,7.637810,-3.503257,0.198990,2.165337,1.678747,2.152940,-3.987660,5.891130,-9.717658,-2.512632,-6.310972,-0.652101,8.265900,3.255893,-3.956878,6.278714,5.064953,-8.408327,-8.301188,-4.928696,-7.538122,0.460044,-5.896801,-1.664478,-4.186946,9.558045,6.371239,-2.044987,9.739595,-8.232564,-1.574037,8.100378,0.657219,-4.301381,2.325392,6.446318,-6.581081,-6.587908,7.415370,7.563748,6.684890,-5.777963,1.615728,-9.253564,4.590013,-8.249232,-3.897245,0.853427,0.394663,-8.342271,-2.626373,-7.478402,-2.789711,5.848490,-3.198383,8.975822,-6.217422,-5.734473,-1.067352,-3.227292,4.128683,5.219644,-2.975976,-2.530672,8.329679,6.180654,-4.432978,-9.975782,-1.592651,8.448321,6.808635,3.916364,-4.025406,2.505912,-2.383285,-9.969893,-4.173216,1.775946,4.504653,4.288044,-8.474252,-5.008798,-1.713114,2.133388,7.315571,9.864344,9.010778,-8.853708,-5.528951,5.582935,0.911854,6.816619,5.740640,-1.135942,-9.895501,2.180740,-6.880934,5.002014,6.607969,-7.642563,1.330995,8.877481,-1.627981,3.768268,5.134526,4.868829,-3.810940,-8.600516,9.593916], dtype = "float64")#candidate|5601|(720,)|const|float64
call_5600 = relay.TupleGetItem(func_3879_call(relay.reshape(const_5601.astype('float64'), [4, 180])), 0)
call_5602 = relay.TupleGetItem(func_3881_call(relay.reshape(const_5601.astype('float64'), [4, 180])), 0)
output = relay.Tuple([bop_5585,call_5588,call_5600,const_5601,])
output2 = relay.Tuple([bop_5585,call_5589,call_5602,const_5601,])
func_5608 = relay.Function([var_5583,], output)
mod['func_5608'] = func_5608
mod = relay.transform.InferType()(mod)
mutated_mod['func_5608'] = func_5608
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5609 = relay.var("var_5609", dtype = "uint64", shape = (9, 10, 11))#candidate|5609|(9, 10, 11)|var|uint64
func_5608_call = mutated_mod.get_global_var('func_5608')
call_5610 = func_5608_call(var_5609)
output = call_5610
func_5611 = relay.Function([var_5609], output)
mutated_mod['func_5611'] = func_5611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4855_call = mod.get_global_var('func_4855')
func_4856_call = mutated_mod.get_global_var('func_4856')
call_5684 = relay.TupleGetItem(func_4855_call(), 0)
call_5685 = relay.TupleGetItem(func_4856_call(), 0)
func_4616_call = mod.get_global_var('func_4616')
func_4619_call = mutated_mod.get_global_var('func_4619')
var_5688 = relay.var("var_5688", dtype = "float32", shape = (3,))#candidate|5688|(3,)|var|float32
call_5687 = relay.TupleGetItem(func_4616_call(relay.reshape(var_5688.astype('float32'), [1, 3]), relay.reshape(var_5688.astype('float32'), [1, 3]), ), 0)
call_5689 = relay.TupleGetItem(func_4619_call(relay.reshape(var_5688.astype('float32'), [1, 3]), relay.reshape(var_5688.astype('float32'), [1, 3]), ), 0)
func_4616_call = mod.get_global_var('func_4616')
func_4619_call = mutated_mod.get_global_var('func_4619')
call_5694 = relay.TupleGetItem(func_4616_call(relay.reshape(call_5687.astype('float32'), [1, 3]), relay.reshape(var_5688.astype('float32'), [1, 3]), ), 0)
call_5695 = relay.TupleGetItem(func_4619_call(relay.reshape(call_5687.astype('float32'), [1, 3]), relay.reshape(var_5688.astype('float32'), [1, 3]), ), 0)
output = relay.Tuple([call_5684,call_5687,var_5688,call_5694,])
output2 = relay.Tuple([call_5685,call_5689,var_5688,call_5695,])
func_5729 = relay.Function([var_5688,], output)
mod['func_5729'] = func_5729
mod = relay.transform.InferType()(mod)
mutated_mod['func_5729'] = func_5729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5730 = relay.var("var_5730", dtype = "float32", shape = (3,))#candidate|5730|(3,)|var|float32
func_5729_call = mutated_mod.get_global_var('func_5729')
call_5731 = func_5729_call(var_5730)
output = call_5731
func_5732 = relay.Function([var_5730], output)
mutated_mod['func_5732'] = func_5732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2465_call = mod.get_global_var('func_2465')
func_2467_call = mutated_mod.get_global_var('func_2467')
call_5770 = func_2465_call()
call_5771 = func_2465_call()
func_2940_call = mod.get_global_var('func_2940')
func_2941_call = mutated_mod.get_global_var('func_2941')
call_5774 = relay.TupleGetItem(func_2940_call(), 0)
call_5775 = relay.TupleGetItem(func_2941_call(), 0)
output = relay.Tuple([call_5770,call_5774,])
output2 = relay.Tuple([call_5771,call_5775,])
func_5779 = relay.Function([], output)
mod['func_5779'] = func_5779
mod = relay.transform.InferType()(mod)
output = func_5779()
func_5780 = relay.Function([], output)
mutated_mod['func_5780'] = func_5780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2174_call = mod.get_global_var('func_2174')
func_2175_call = mutated_mod.get_global_var('func_2175')
call_5790 = func_2174_call()
call_5791 = func_2174_call()
func_2783_call = mod.get_global_var('func_2783')
func_2788_call = mutated_mod.get_global_var('func_2788')
var_5816 = relay.var("var_5816", dtype = "float64", shape = (2, 936))#candidate|5816|(2, 936)|var|float64
const_5817 = relay.const([[-4,9,-4,2,5,6,4,-8,-1,-1,7,4,7,-8,4,9,4,-5,-5,4,-7,-9,-10,3,10,-6,5,-10,6,7,5,7,4,-10,10,-8,-2,-9,4,6,6,-2,3,-3,-1,8,-6,5,-8,-8,7,-7,-5,-3,-8,2,2,5,7,4,-10,-1,-7,8,-1,6,-4,-9,9,9,-3,-1,6,-8,-8,8,5,4,-8,-9],[-1,-9,10,-6,-1,6,6,7,-7,-5,-9,3,-6,8,-9,5,6,5,-3,4,-5,-8,-2,-3,1,-4,-2,-4,3,-10,-3,-2,-10,-4,9,-7,-2,5,9,3,-5,8,-3,6,8,-8,-3,-1,-9,-4,-5,-7,5,1,10,-3,2,-4,8,8,-8,-9,7,1,-5,8,-7,8,-7,-5,-4,5,2,8,-1,-5,5,7,-4,-9],[5,-10,4,-4,7,-7,-10,7,-4,-1,3,2,-10,1,-7,-10,10,7,-7,5,2,7,6,5,8,3,-2,1,-3,-5,-5,-5,6,-10,-2,-9,9,-10,9,-3,3,-2,10,-6,-8,-7,5,-9,-5,6,-6,-4,10,-1,9,-9,1,-7,5,-6,-6,5,5,4,6,7,-4,8,7,6,3,-10,5,7,-5,-2,-6,-2,-4,10],[6,-4,10,-6,-3,-7,-8,-3,6,-4,1,-10,4,9,-10,-9,-8,-9,-7,7,1,-6,-1,-1,-7,6,10,6,-1,5,-3,10,-7,2,-7,-4,3,7,-9,10,3,7,-5,-1,-9,8,1,3,-10,-4,4,-5,-7,10,1,3,8,-9,-2,-9,-9,3,6,7,-3,-3,8,5,-8,-9,-6,5,2,-7,6,-5,3,-2,6,-5],[2,-5,3,6,-6,2,-7,6,-3,-4,-10,-2,7,-2,-7,1,4,-10,7,-10,-10,4,1,7,-4,-1,-9,7,-8,8,-7,-7,-6,-8,4,5,2,3,9,5,2,6,-10,-7,2,-6,-4,-10,1,-1,-7,8,6,-3,3,6,4,7,5,-4,9,7,-2,-2,-6,7,1,-3,7,2,3,-5,10,-3,-4,-3,5,-6,9,-2],[-5,8,-4,-5,-6,1,4,6,-8,10,-4,-6,-5,7,-2,-8,-8,3,7,1,4,3,-9,-6,6,10,-1,10,-1,-9,-6,10,-5,-3,2,6,-9,-5,-7,-7,7,2,6,-5,7,-1,-2,8,-5,-10,9,4,6,-6,10,-4,3,-6,-6,-7,4,-9,-9,4,9,1,-1,-6,4,-7,-7,5,7,-10,-4,-7,7,7,-2,-1],[4,-9,-7,-9,8,9,-7,7,8,8,-6,-10,-2,10,9,-6,-3,7,1,3,4,-5,6,6,3,6,8,4,-5,3,-4,-7,4,-7,2,4,-1,10,3,1,-9,-5,3,6,-4,1,7,-6,-2,8,4,3,-3,5,8,-3,-3,5,-8,3,9,1,-10,1,-10,9,10,-1,6,10,2,-2,-2,8,-7,3,2,3,10,5],[2,-6,-7,-7,1,-6,9,-5,-4,-10,-3,-6,8,9,5,8,2,-2,-8,-2,6,-3,6,5,-2,-9,-9,-4,-8,5,-10,3,-6,1,-5,7,10,6,10,6,-6,9,-1,4,-7,-3,1,-9,2,-3,2,8,-1,-10,4,3,10,-9,6,-2,-10,1,2,10,-9,-1,-4,5,-3,-6,-8,1,2,10,-1,4,7,7,-3,-5],[2,5,5,3,2,9,10,-9,7,-2,-2,-2,-2,-10,5,-9,-1,7,4,-8,-1,8,4,-4,9,-1,-4,3,1,-1,1,7,4,-2,4,-7,-6,4,6,-2,6,7,-6,6,-6,-8,-6,-10,9,-1,1,-7,6,-8,-1,-7,-4,9,-7,-9,-1,-1,-4,-1,5,5,1,5,-3,-8,-3,-3,1,9,8,-2,-7,-10,-4,-3],[3,4,-7,-9,-2,-7,4,-4,-6,3,-2,-5,-6,9,5,8,9,-10,-1,-9,6,1,-9,-4,-7,9,10,10,10,-7,-3,-3,-8,-9,3,-5,-5,10,-1,-9,1,-10,1,-8,-1,-7,3,7,4,2,7,6,-4,-5,1,3,-1,3,-3,4,8,-10,-3,2,-6,-3,-2,6,5,10,5,-6,-6,-10,-9,-5,-8,-10,6,8],[-6,5,-10,-5,2,1,-9,-6,5,4,-2,3,-7,-3,-2,-3,4,8,10,-8,-9,10,5,2,3,4,-8,7,7,-6,-5,-1,8,-2,3,1,-9,1,-8,-2,1,-6,2,-4,-5,9,-1,6,10,-10,-8,-8,-3,-10,3,9,7,-5,-9,9,-1,-6,9,-6,10,5,-8,-6,1,1,8,-10,-5,6,-3,-2,3,9,-9,-4],[-2,8,1,10,-2,8,10,6,10,-3,-9,9,2,6,2,2,-1,3,-6,6,3,9,9,-3,9,3,-1,-2,10,-4,-9,6,9,-2,4,3,1,3,9,-8,-9,8,3,5,-7,-6,7,8,5,1,1,5,7,-9,-3,7,-10,-4,-3,6,1,-10,-8,-4,-2,10,-10,3,-4,-6,-3,-1,-7,6,5,2,4,4,-4,-4],[-5,10,-1,5,-9,-2,-5,3,-9,2,1,-10,9,6,4,10,4,7,4,1,-6,-6,-6,-2,8,-9,-1,-3,-6,-4,10,-2,-5,-8,-2,2,1,-8,7,-2,-4,-5,3,-5,-8,9,-4,-10,1,-10,6,10,10,-6,8,3,10,-8,5,-4,-4,-2,-6,-9,-2,-10,1,-8,8,9,4,9,-9,9,-10,-10,5,-3,4,-8],[1,7,-1,-4,-8,6,-4,-6,-10,10,7,4,-9,3,-3,2,-2,-7,-5,-2,3,-7,-1,-3,-9,2,-10,-7,7,4,2,3,6,-7,-10,-4,-6,-3,5,9,6,7,10,-7,-4,5,9,-10,-8,6,5,-3,2,-10,-10,10,-2,2,-10,9,1,10,3,-7,-6,-9,6,1,-7,-6,10,3,-2,6,-5,8,2,-8,-9,-8],[-7,-5,8,-2,7,-2,-1,-10,1,8,4,3,-5,1,-5,8,-5,-6,9,9,-3,4,7,10,-4,3,-4,2,-9,-3,1,6,-4,-10,-10,10,2,-9,2,7,8,3,-8,1,-7,10,8,7,-10,-7,-6,2,-5,-4,-10,2,-3,-10,-10,-6,7,-9,6,9,1,-4,4,-4,9,-5,-1,5,-2,4,-5,-10,-10,9,3,10],[3,2,4,-8,7,1,10,3,2,5,10,2,-2,-4,9,10,9,-1,7,-5,-1,-4,2,-5,5,-2,5,2,4,-2,-1,-5,4,3,-3,8,5,-7,9,3,-3,-8,-8,-6,10,5,10,-2,-4,-8,5,3,7,-9,3,4,-7,-2,5,-9,-6,6,4,2,5,7,5,-4,-9,3,-4,-7,9,8,-9,-1,-3,3,-7,7]], dtype = "uint8")#candidate|5817|(16, 80)|const|uint8
const_5818 = relay.const([6.824155,6.979824,4.565580,-1.683987,-0.771795,7.348342,5.191548,-7.059699,3.405623,6.780535,-7.976671,-6.571375,-7.963819,-9.351515,-9.300497,2.341683,7.607632,-2.764754,1.554564,6.701983,-6.126913,6.379040,-7.246748,-8.228581,7.586370,-8.839789,1.641109,-0.332436,-0.329107,4.157644,-4.109463,2.393786,-7.642530,3.328480,-8.930023,1.500455,1.198291,7.977229,9.538009,-8.392828,9.415989,-6.058422,0.443724,-5.930759,4.134365,-7.351829,0.905412,1.810971,2.722082,4.174927,6.935109,-3.985336,5.852323,7.848408,8.083445,-5.722892,-9.214423,-1.570731,7.347588,-5.250371,-5.295671,-2.189091,-8.684946,8.278587,-5.450198,9.388782,-5.792935,1.512612,7.750475,-1.486523,-4.171324,9.542196,4.189007,-5.758029,6.599582,8.166363,7.254790,3.348389,-6.819317,8.700550,3.200449,-0.861931,8.980216,8.822662,-5.499342,8.185121,-2.854573,-7.813943,-4.347607,-8.095200,2.092927,-2.478281,-4.399415,-7.215308,-2.252762,9.998565,-3.702155,8.457440,5.727039,8.484490,-2.295351,-4.532578,9.070737,-9.341778,4.925132,0.188485,3.492467,5.790182,3.083359,-3.863390,-3.918641,3.299506,0.864913,-2.796442,-8.855188,8.623016,-0.733434,4.303074,-0.105007,-8.647402,6.390505,-4.684702,4.041050,-7.599269,1.282682,-1.363709,-5.105534,-2.901026,0.122714,9.563371,-4.730388,-7.635136,-5.980055,3.841965,-4.234083,8.565429,9.874073,-6.838558,6.277466,-5.167952,1.080100,-3.533614,-8.467728,4.435910,3.857304,6.463870,6.764960,3.201468,-6.232325,-9.269336,-3.872560,-7.428253,4.741340,-4.508109,8.379321,8.727214,2.938175,-3.222270,8.476342,6.724944,-7.798742,-7.798841,2.965038,-1.248404,-5.522186,-3.349917,-4.060490,0.261660,3.452789,-0.562477,-3.972274,5.958873,-4.998200,3.585842,5.856081,-6.396670,-9.538754,-6.342073,-8.797822,8.142097,4.147043,4.489097,-3.126001,-3.010390,-3.133927,-9.960611,-5.046171,2.906516,3.435902,-6.005615,5.783479,5.106189,-4.497818,3.900073,-7.903143,9.132948,-9.526571,9.617390,8.659051,-9.780559,-1.694588,-8.824756,-0.641246,4.374942,2.776420,2.936432,3.934467,-1.340990,-5.790064,-9.915178,-5.263449,-0.461820,4.135552,3.657382,6.816235,-0.700976,-3.375013,3.287771,-9.145511,-0.974292,-6.182487,2.147615,-2.855577,5.217855,9.259474,1.952418,-5.604866,8.018203,1.243966,-6.665128,-2.543913,5.601236,-3.010930,-7.097845,8.420827,-5.508367,-4.015771,8.676229,9.813642,4.994407,7.043949,-2.319466,-2.013662,4.305295,-0.275836,9.734882,-1.728873,9.658242,9.060461,-1.881680,-2.642633,-6.512291,-7.887529,-2.393851,5.818046,-6.882567,-7.806099,-0.586485,-0.749184,9.477830,0.192634,-0.946861,3.325270,-5.326484,7.078572,5.509370,5.585882,-5.827846,-6.140309,5.040650,-1.412719,-9.805417,-9.250872,7.525961,-9.095109,6.173370,4.169095,3.468272,3.103693,0.964546,-9.487835,6.152241,9.993971,7.538722,-0.899128,7.193027,0.777056,3.059504,-8.623126,-2.722518,3.449012,-7.087396,0.180381,9.915568,-3.384765,3.235737,-0.941513,-1.430423,-2.438124,6.038298,9.989856,2.238748,-2.349152,-5.567699,-3.599918,1.006513,7.375592,-3.192079,0.814074,3.050627,5.896870,9.390142,2.850868,2.872534,6.414257,-9.177313,6.549966,6.752667,5.567586,-0.259885,9.300586,7.898972,1.682226,2.250134,-4.074956,-2.543548,-3.658949,3.702434,-2.959568,1.205598,8.987757,-1.103986,-4.020474,-6.256822,4.335688,9.818003,-0.429621,6.784156,-4.893374,-1.508423,-9.427921,-5.432008,-5.388520,-5.901015,-9.197743,8.131411,-3.461899,-6.393251,2.130530,-9.263230,0.754838,7.139564,-0.198940,-3.452509,-8.784608,6.905220,8.355310,4.382437,1.633744,-4.438737,2.268345,9.272267,4.748737,-0.583991,-4.020060,-6.520297,-1.715770,2.837871,-4.313446,-1.457206,5.444169,8.166807,2.579046,-6.291895,3.255794,7.879212,-6.273638,-7.958173,-5.601508,8.825449,4.795835,6.670781,4.523214,-7.189975,-5.749713,-2.843145,7.654564,-5.110369,-9.623659,7.492269,-1.769543,2.040212,-5.557800,-2.157425,-7.472957,4.903197,6.853910,-4.039660,-2.126601,2.416288,5.921161,-3.567297,6.729992,4.224145,0.828918,0.596951,6.235492,3.289652,-0.108507,8.408473,8.854159,-2.970922,3.518429,4.170776,-6.208217,-9.569270,5.482945,-0.777832,6.877934,-6.398072,-3.519368,-4.351416,-7.176256,4.206433,-1.965991,-4.663411,-9.887007,-5.364841,3.833742,2.251410,-0.324254,7.156283,-3.507739,9.510387,2.819896,-7.697840,6.971086,-5.488687,-8.743890,9.944050,-5.460662,-0.953119,-4.498948,-7.854611,0.067689,8.605982,0.392976,2.173492,-1.931381,8.383719,-3.693451,-7.367099,3.954747,-6.698401,-6.060441,-8.012458,6.366148,7.771223,1.011161,5.536260,7.358093,4.332158,0.486072,-6.438785,8.721217,4.539287,-9.167957,0.537748,-5.110501,0.126051,3.778202,4.032882,4.515964,2.503667,-3.841815,3.013308,1.376550,-6.777040,8.174217,4.429191,5.379742,-9.710850,-1.008580,8.027440,7.718286,5.277659,-0.811889,5.933951,-5.185932,-5.159844,8.827801,-6.195043,-9.950624,2.740259,-4.630929,-7.029966,-2.529477,5.367035,3.099913,9.951794,8.427889,0.975777,-4.393100,3.434800,8.279030,6.858027,6.468818,-5.821885,0.947551,8.713184,-7.350275,8.763126,0.549275,2.266782,2.896304,5.087654,4.171566,-0.748488,-5.163750,-9.624303,8.011687,-4.840451,-5.502382,2.282075,2.731084,7.628233,-2.545728,-8.718993,5.810616,-6.535797,-9.765364,3.111358,4.673905,9.268391,-6.454776,7.245100,-2.670930,-5.148148,-8.540252,-9.753856,8.290503,3.063634,-6.124176,2.169283,9.337788,-6.295369,4.687102,-7.293650,9.366943,-3.329413,6.448662,1.252005,-8.449813,-9.786751,9.232096,-3.339777,-8.881758,9.053118,5.116575,-7.544185,-9.988278,-1.150413,5.294312,-4.477001,4.642820,-1.307529,4.555366,-1.120381,9.393103,-5.387075,1.460392,8.826207,8.277364,-3.244781,4.124372,9.802114,1.539139,-6.029524,-3.751013,8.090821,6.246525,8.482572,1.215467,-0.754470,-4.522549,-2.190329,8.606074,-3.375150,-8.261694,3.355830,6.527021,3.488793,1.838183,6.209496,8.063109,7.858241,-7.931020,7.288268,-4.533037,7.303521,-0.793226,-3.580826,7.104082,-5.036323,8.868838,-1.835914,3.602203,9.048006,2.298707,-9.538335,1.481420,3.594924,-8.516308,7.616636,1.782093,-8.437866,-2.928434,4.501403,2.879876,9.287260,-6.308525,3.563984,-4.145006,-6.204136,-0.567497,-6.712252,-8.002538,1.171129,-1.376768,2.732091,1.951396,1.358347,-0.939376,-7.389354,9.813556,-3.564238,2.825577,7.142875,-5.852375,4.541209,-5.818264,-9.499279,1.797059,-5.138326,-4.049737,8.732315,1.939690,-8.477863,-8.256084,1.781464,-0.858125,1.416973,9.472545,0.558022,-8.449195,-1.767204,-2.035719,8.179927,4.709542,0.810505,0.966411,5.486046,-8.236176,-1.110833,-0.541621,-2.295782,4.220046,-0.672862,-2.572938,-0.996671,-0.955536,6.901225,9.976117,8.175001,-3.872338,-3.105718,7.204839,-3.750174,6.572571,-8.235198,-3.669473,9.859218,-8.750536,9.618201,1.045782,0.686637,-0.933129,5.430945,9.616081,-7.553122,5.089987,1.296617,4.084680,-6.145385,-6.838728,-8.332683,5.724728,-6.332892,-1.125634,-1.359721,2.993795,1.543713,3.881459,5.549829,1.369401,-5.998445,2.616705,-0.283658,-8.058557,0.807019,4.420859,4.254343,9.212278,3.011909,9.699734,-2.183789,2.119966,3.629650,-4.802637,-3.423337,-4.532699,-3.108151,-6.350162,-4.354788,-2.558999,-9.442940,-6.244375,-0.534932,0.189461,4.588341,-9.446764,-7.034981,2.848426,-8.671444,-8.766968,-6.569749,0.581598,-3.205598,5.681736,-2.652820,2.427142,9.443139,1.669251,0.784674,7.198011,1.650435,-5.070658,-6.384052,7.864710,0.620757,3.893241,7.344544,1.180795,-9.616353,-9.488769,-8.483278], dtype = "float32")#candidate|5818|(756,)|const|float32
const_5819 = relay.const([5.025416,-7.090008,4.805423,-9.911393,3.171413,-1.491870,2.686235,-9.178597,9.829942,-4.535833,-0.478263,4.478593,4.901821,-7.434553,7.170014,9.116598,-9.155742,-7.177532,-1.737722,-1.555702,2.239657,-3.006291,-7.652833,4.770176,-8.550378,-6.576929,-6.742241,-8.879933,2.635791,8.605441,-7.598709,-6.582004,-2.725555,8.898083,7.159186,-8.995968,-4.938166,-4.667539,2.217064,-6.235520,1.139564,-1.053822,-7.752644,6.261315,4.524077,-4.381306,-4.206758,7.055999,9.441789,6.499630,-3.832664,3.397872,-9.092433,0.752074], dtype = "float32")#candidate|5819|(54,)|const|float32
call_5815 = relay.TupleGetItem(func_2783_call(relay.reshape(var_5816.astype('float64'), [1872,]), relay.reshape(const_5817.astype('uint8'), [1280,]), relay.reshape(const_5818.astype('float32'), [756,]), relay.reshape(const_5819.astype('float32'), [54,]), ), 6)
call_5820 = relay.TupleGetItem(func_2788_call(relay.reshape(var_5816.astype('float64'), [1872,]), relay.reshape(const_5817.astype('uint8'), [1280,]), relay.reshape(const_5818.astype('float32'), [756,]), relay.reshape(const_5819.astype('float32'), [54,]), ), 6)
var_5839 = relay.var("var_5839", dtype = "float32", shape = (54,))#candidate|5839|(54,)|var|float32
bop_5840 = relay.minimum(const_5819.astype('int16'), relay.reshape(var_5839.astype('int16'), relay.shape_of(const_5819))) # shape=(54,)
output = relay.Tuple([call_5790,call_5815,var_5816,const_5817,const_5818,bop_5840,])
output2 = relay.Tuple([call_5791,call_5820,var_5816,const_5817,const_5818,bop_5840,])
func_5845 = relay.Function([var_5816,var_5839,], output)
mod['func_5845'] = func_5845
mod = relay.transform.InferType()(mod)
var_5846 = relay.var("var_5846", dtype = "float64", shape = (2, 936))#candidate|5846|(2, 936)|var|float64
var_5847 = relay.var("var_5847", dtype = "float32", shape = (54,))#candidate|5847|(54,)|var|float32
output = func_5845(var_5846,var_5847,)
func_5848 = relay.Function([var_5846,var_5847,], output)
mutated_mod['func_5848'] = func_5848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3915_call = mod.get_global_var('func_3915')
func_3916_call = mutated_mod.get_global_var('func_3916')
call_5852 = relay.TupleGetItem(func_3915_call(), 1)
call_5853 = relay.TupleGetItem(func_3916_call(), 1)
output = call_5852
output2 = call_5853
func_5860 = relay.Function([], output)
mod['func_5860'] = func_5860
mod = relay.transform.InferType()(mod)
mutated_mod['func_5860'] = func_5860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5860_call = mutated_mod.get_global_var('func_5860')
call_5861 = func_5860_call()
output = call_5861
func_5862 = relay.Function([], output)
mutated_mod['func_5862'] = func_5862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4855_call = mod.get_global_var('func_4855')
func_4856_call = mutated_mod.get_global_var('func_4856')
call_5926 = relay.TupleGetItem(func_4855_call(), 1)
call_5927 = relay.TupleGetItem(func_4856_call(), 1)
var_5935 = relay.var("var_5935", dtype = "float64", shape = (4, 13, 12))#candidate|5935|(4, 13, 12)|var|float64
bop_5936 = relay.logical_or(call_5926.astype('bool'), relay.reshape(var_5935.astype('bool'), relay.shape_of(call_5926))) # shape=(4, 13, 12)
bop_5939 = relay.logical_or(call_5927.astype('bool'), relay.reshape(var_5935.astype('bool'), relay.shape_of(call_5927))) # shape=(4, 13, 12)
output = bop_5936
output2 = bop_5939
func_5948 = relay.Function([var_5935,], output)
mod['func_5948'] = func_5948
mod = relay.transform.InferType()(mod)
mutated_mod['func_5948'] = func_5948
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5949 = relay.var("var_5949", dtype = "float64", shape = (4, 13, 12))#candidate|5949|(4, 13, 12)|var|float64
func_5948_call = mutated_mod.get_global_var('func_5948')
call_5950 = func_5948_call(var_5949)
output = call_5950
func_5951 = relay.Function([var_5949], output)
mutated_mod['func_5951'] = func_5951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4570_call = mod.get_global_var('func_4570')
func_4571_call = mutated_mod.get_global_var('func_4571')
call_5974 = func_4570_call()
call_5975 = func_4570_call()
func_4810_call = mod.get_global_var('func_4810')
func_4811_call = mutated_mod.get_global_var('func_4811')
call_5997 = func_4810_call()
call_5998 = func_4810_call()
func_3405_call = mod.get_global_var('func_3405')
func_3406_call = mutated_mod.get_global_var('func_3406')
call_6004 = relay.TupleGetItem(func_3405_call(), 0)
call_6005 = relay.TupleGetItem(func_3406_call(), 0)
func_971_call = mod.get_global_var('func_971')
func_974_call = mutated_mod.get_global_var('func_974')
const_6018 = relay.const(6, dtype = "uint32")#candidate|6018|()|const|uint32
const_6019 = relay.const([5,-6,-6,-7,-10,2,4,-8,-3,-8,-7,8,9,8,-10,-9,-8,-9,7,-3,-8,-4,-4,-1,-1,10,10,-10,9,-2,-6,5,7,10,-10,10,-7,10,-7,10,10,7], dtype = "uint32")#candidate|6019|(42,)|const|uint32
call_6017 = relay.TupleGetItem(func_971_call(relay.reshape(const_6018.astype('uint32'), []), relay.reshape(const_6019.astype('uint32'), [7, 6, 1]), ), 0)
call_6020 = relay.TupleGetItem(func_974_call(relay.reshape(const_6018.astype('uint32'), []), relay.reshape(const_6019.astype('uint32'), [7, 6, 1]), ), 0)
output = relay.Tuple([call_5974,call_5997,call_6004,call_6017,const_6018,const_6019,])
output2 = relay.Tuple([call_5975,call_5998,call_6005,call_6020,const_6018,const_6019,])
func_6024 = relay.Function([], output)
mod['func_6024'] = func_6024
mod = relay.transform.InferType()(mod)
mutated_mod['func_6024'] = func_6024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6024_call = mutated_mod.get_global_var('func_6024')
call_6025 = func_6024_call()
output = call_6025
func_6026 = relay.Function([], output)
mutated_mod['func_6026'] = func_6026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4471_call = mod.get_global_var('func_4471')
func_4472_call = mutated_mod.get_global_var('func_4472')
call_6033 = relay.TupleGetItem(func_4471_call(), 0)
call_6034 = relay.TupleGetItem(func_4472_call(), 0)
var_6044 = relay.var("var_6044", dtype = "float64", shape = (3, 15, 6))#candidate|6044|(3, 15, 6)|var|float64
bop_6045 = relay.not_equal(call_6033.astype('bool'), relay.reshape(var_6044.astype('bool'), relay.shape_of(call_6033))) # shape=(3, 15, 6)
bop_6048 = relay.not_equal(call_6034.astype('bool'), relay.reshape(var_6044.astype('bool'), relay.shape_of(call_6034))) # shape=(3, 15, 6)
func_1854_call = mod.get_global_var('func_1854')
func_1857_call = mutated_mod.get_global_var('func_1857')
var_6064 = relay.var("var_6064", dtype = "float64", shape = (480,))#candidate|6064|(480,)|var|float64
call_6063 = relay.TupleGetItem(func_1854_call(relay.reshape(var_6064.astype('float64'), [240, 2])), 2)
call_6065 = relay.TupleGetItem(func_1857_call(relay.reshape(var_6064.astype('float64'), [240, 2])), 2)
func_4328_call = mod.get_global_var('func_4328')
func_4330_call = mutated_mod.get_global_var('func_4330')
call_6074 = relay.TupleGetItem(func_4328_call(), 2)
call_6075 = relay.TupleGetItem(func_4330_call(), 2)
output = relay.Tuple([bop_6045,call_6063,var_6064,call_6074,])
output2 = relay.Tuple([bop_6048,call_6065,var_6064,call_6075,])
func_6077 = relay.Function([var_6044,var_6064,], output)
mod['func_6077'] = func_6077
mod = relay.transform.InferType()(mod)
var_6078 = relay.var("var_6078", dtype = "float64", shape = (3, 15, 6))#candidate|6078|(3, 15, 6)|var|float64
var_6079 = relay.var("var_6079", dtype = "float64", shape = (480,))#candidate|6079|(480,)|var|float64
output = func_6077(var_6078,var_6079,)
func_6080 = relay.Function([var_6078,var_6079,], output)
mutated_mod['func_6080'] = func_6080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6168 = relay.var("var_6168", dtype = "float32", shape = (14, 2, 16))#candidate|6168|(14, 2, 16)|var|float32
uop_6169 = relay.log(var_6168.astype('float32')) # shape=(14, 2, 16)
output = relay.Tuple([uop_6169,])
output2 = relay.Tuple([uop_6169,])
func_6196 = relay.Function([var_6168,], output)
mod['func_6196'] = func_6196
mod = relay.transform.InferType()(mod)
var_6197 = relay.var("var_6197", dtype = "float32", shape = (14, 2, 16))#candidate|6197|(14, 2, 16)|var|float32
output = func_6196(var_6197)
func_6198 = relay.Function([var_6197], output)
mutated_mod['func_6198'] = func_6198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5521_call = mod.get_global_var('func_5521')
func_5522_call = mutated_mod.get_global_var('func_5522')
call_6237 = func_5521_call()
call_6238 = func_5521_call()
func_1275_call = mod.get_global_var('func_1275')
func_1278_call = mutated_mod.get_global_var('func_1278')
var_6240 = relay.var("var_6240", dtype = "uint8", shape = (256,))#candidate|6240|(256,)|var|uint8
call_6239 = relay.TupleGetItem(func_1275_call(relay.reshape(var_6240.astype('uint8'), [256,])), 0)
call_6241 = relay.TupleGetItem(func_1278_call(relay.reshape(var_6240.astype('uint8'), [256,])), 0)
func_4570_call = mod.get_global_var('func_4570')
func_4571_call = mutated_mod.get_global_var('func_4571')
call_6244 = func_4570_call()
call_6245 = func_4570_call()
const_6252 = relay.const([[[-0.225544,-5.524874,3.776807,4.817588,7.194829,5.661620],[-8.027378,8.900921,0.912956,4.866095,5.666863,-2.408594],[-7.582624,0.157907,-5.556907,-0.015623,-9.595151,9.609945],[3.800911,-7.019772,4.227520,-5.199675,1.763761,5.490147],[-0.104667,3.622060,-2.281194,9.105799,3.694893,-5.541413],[1.427492,-6.217800,0.233609,-9.280682,-8.672806,-1.902385],[-6.019900,8.962495,-1.096168,-6.450391,9.247455,-9.227461],[-4.499839,1.712622,6.311196,3.055693,-0.182384,-7.507340],[4.968002,9.467530,3.405501,6.473657,-8.102324,6.538062],[-5.592413,-4.787688,-7.290379,9.355259,-5.917900,-3.208057],[-7.311878,-2.615405,8.525162,-4.570776,7.210286,-5.829537],[7.178205,9.803335,0.968227,7.900895,-7.040700,8.299396],[-3.499211,5.644273,1.418756,-7.430623,9.355144,7.792841],[-4.315377,7.066948,5.988913,-4.028946,-9.967788,-5.110741],[3.908374,2.888811,0.469136,-3.301244,5.940362,-9.078286]],[[2.254303,-5.098606,-0.838304,5.684950,4.702153,-7.738951],[-9.669976,-2.393004,-8.744506,-9.030465,-8.270872,-1.240986],[0.688581,1.692134,-8.532134,0.832412,5.566175,7.898276],[9.040919,-9.234517,0.773099,8.766962,2.976432,-2.145157],[4.166175,3.692689,-9.142464,3.684770,-9.961684,-0.179493],[0.159233,-4.316871,6.479365,-6.522524,-5.568290,-5.711657],[0.011157,-5.550070,5.031295,8.594843,7.429105,-0.837925],[-8.282125,7.471210,-6.001632,5.787365,-0.087095,-6.162183],[0.897545,-5.700996,7.501500,-6.805334,6.905798,-1.588447],[0.872483,7.763704,-8.810653,0.357805,5.539742,-5.131380],[-4.375992,1.979899,0.486078,6.490429,-8.206989,3.157243],[-4.759602,9.387903,-5.322752,-4.189373,5.404312,-0.104300],[3.795373,-0.553702,1.677374,-6.329941,-1.659268,-5.283670],[-5.316707,3.922784,3.090621,-8.042467,-4.713467,0.164506],[5.389193,-4.509521,2.614322,0.795231,-3.697068,-2.268026]],[[-0.503716,-8.665501,-4.942271,-6.171413,-0.531455,-1.520583],[-6.438523,4.856485,-2.328779,4.482026,-3.768884,-8.139253],[0.509979,-2.870806,3.419915,8.696219,0.864639,-7.060959],[-9.305099,-0.812224,-3.732048,-7.042680,-8.195985,5.610742],[4.492619,-2.934721,7.040495,7.142182,-3.134151,-1.082449],[-2.982111,0.973792,0.382687,-5.446939,0.739185,-1.359896],[0.435742,-4.036139,-9.078830,-9.466547,4.484282,9.630926],[9.367178,6.115811,-5.225113,5.012451,7.954087,8.931814],[-4.121678,-6.368462,-4.579513,-5.965065,4.974916,8.635247],[-1.690461,9.909364,4.706551,-9.023396,-2.089261,-3.067216],[-0.645762,6.867386,7.623254,-2.630918,-0.570215,8.105948],[-7.006898,-1.398219,-7.419594,5.199544,4.456708,-9.565551],[-0.459313,3.510900,-1.003909,6.552542,2.455167,-5.248138],[3.103241,9.263803,8.079499,9.691425,-4.354223,-0.489708],[0.111241,9.199499,-2.717324,4.500288,5.346685,5.127842]]], dtype = "float64")#candidate|6252|(3, 15, 6)|const|float64
bop_6253 = relay.logical_or(call_6239.astype('bool'), const_6252.astype('bool')) # shape=(3, 15, 6)
bop_6256 = relay.logical_or(call_6241.astype('bool'), const_6252.astype('bool')) # shape=(3, 15, 6)
func_662_call = mod.get_global_var('func_662')
func_665_call = mutated_mod.get_global_var('func_665')
var_6267 = relay.var("var_6267", dtype = "float32", shape = (756,))#candidate|6267|(756,)|var|float32
call_6266 = relay.TupleGetItem(func_662_call(relay.reshape(var_6267.astype('float32'), [12, 9, 7])), 0)
call_6268 = relay.TupleGetItem(func_665_call(relay.reshape(var_6267.astype('float32'), [12, 9, 7])), 0)
func_6024_call = mod.get_global_var('func_6024')
func_6026_call = mutated_mod.get_global_var('func_6026')
call_6269 = relay.TupleGetItem(func_6024_call(), 3)
call_6270 = relay.TupleGetItem(func_6026_call(), 3)
func_662_call = mod.get_global_var('func_662')
func_665_call = mutated_mod.get_global_var('func_665')
call_6275 = relay.TupleGetItem(func_662_call(relay.reshape(call_6266.astype('float32'), [12, 9, 7])), 0)
call_6276 = relay.TupleGetItem(func_665_call(relay.reshape(call_6266.astype('float32'), [12, 9, 7])), 0)
func_4502_call = mod.get_global_var('func_4502')
func_4503_call = mutated_mod.get_global_var('func_4503')
call_6283 = relay.TupleGetItem(func_4502_call(), 0)
call_6284 = relay.TupleGetItem(func_4503_call(), 0)
bop_6286 = relay.logical_xor(call_6266.astype('int32'), relay.reshape(call_6275.astype('int32'), relay.shape_of(call_6266))) # shape=(12, 9, 7)
bop_6289 = relay.logical_xor(call_6268.astype('int32'), relay.reshape(call_6276.astype('int32'), relay.shape_of(call_6268))) # shape=(12, 9, 7)
output = relay.Tuple([call_6237,var_6240,call_6244,bop_6253,var_6267,call_6269,call_6283,bop_6286,])
output2 = relay.Tuple([call_6238,var_6240,call_6245,bop_6256,var_6267,call_6270,call_6284,bop_6289,])
func_6293 = relay.Function([var_6240,var_6267,], output)
mod['func_6293'] = func_6293
mod = relay.transform.InferType()(mod)
mutated_mod['func_6293'] = func_6293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6293_call = mutated_mod.get_global_var('func_6293')
var_6295 = relay.var("var_6295", dtype = "uint8", shape = (256,))#candidate|6295|(256,)|var|uint8
var_6296 = relay.var("var_6296", dtype = "float32", shape = (756,))#candidate|6296|(756,)|var|float32
call_6294 = func_6293_call(var_6295,var_6296,)
output = call_6294
func_6297 = relay.Function([var_6295,var_6296,], output)
mutated_mod['func_6297'] = func_6297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6024_call = mod.get_global_var('func_6024')
func_6026_call = mutated_mod.get_global_var('func_6026')
call_6365 = relay.TupleGetItem(func_6024_call(), 4)
call_6366 = relay.TupleGetItem(func_6026_call(), 4)
output = relay.Tuple([call_6365,])
output2 = relay.Tuple([call_6366,])
func_6367 = relay.Function([], output)
mod['func_6367'] = func_6367
mod = relay.transform.InferType()(mod)
output = func_6367()
func_6368 = relay.Function([], output)
mutated_mod['func_6368'] = func_6368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4459_call = mod.get_global_var('func_4459')
func_4460_call = mutated_mod.get_global_var('func_4460')
call_6434 = relay.TupleGetItem(func_4459_call(), 1)
call_6435 = relay.TupleGetItem(func_4460_call(), 1)
output = relay.Tuple([call_6434,])
output2 = relay.Tuple([call_6435,])
func_6452 = relay.Function([], output)
mod['func_6452'] = func_6452
mod = relay.transform.InferType()(mod)
mutated_mod['func_6452'] = func_6452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6452_call = mutated_mod.get_global_var('func_6452')
call_6453 = func_6452_call()
output = call_6453
func_6454 = relay.Function([], output)
mutated_mod['func_6454'] = func_6454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2377_call = mod.get_global_var('func_2377')
func_2379_call = mutated_mod.get_global_var('func_2379')
call_6455 = func_2377_call()
call_6456 = func_2377_call()
func_4024_call = mod.get_global_var('func_4024')
func_4027_call = mutated_mod.get_global_var('func_4027')
var_6493 = relay.var("var_6493", dtype = "float32", shape = (54,))#candidate|6493|(54,)|var|float32
call_6492 = relay.TupleGetItem(func_4024_call(relay.reshape(var_6493.astype('float32'), [54, 1])), 1)
call_6494 = relay.TupleGetItem(func_4027_call(relay.reshape(var_6493.astype('float32'), [54, 1])), 1)
output = relay.Tuple([call_6455,call_6492,var_6493,])
output2 = relay.Tuple([call_6456,call_6494,var_6493,])
func_6498 = relay.Function([var_6493,], output)
mod['func_6498'] = func_6498
mod = relay.transform.InferType()(mod)
mutated_mod['func_6498'] = func_6498
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6499 = relay.var("var_6499", dtype = "float32", shape = (54,))#candidate|6499|(54,)|var|float32
func_6498_call = mutated_mod.get_global_var('func_6498')
call_6500 = func_6498_call(var_6499)
output = call_6500
func_6501 = relay.Function([var_6499], output)
mutated_mod['func_6501'] = func_6501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_6568 = relay.TupleGetItem(func_1639_call(), 0)
call_6569 = relay.TupleGetItem(func_1641_call(), 0)
output = call_6568
output2 = call_6569
func_6582 = relay.Function([], output)
mod['func_6582'] = func_6582
mod = relay.transform.InferType()(mod)
mutated_mod['func_6582'] = func_6582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6582_call = mutated_mod.get_global_var('func_6582')
call_6583 = func_6582_call()
output = call_6583
func_6584 = relay.Function([], output)
mutated_mod['func_6584'] = func_6584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4855_call = mod.get_global_var('func_4855')
func_4856_call = mutated_mod.get_global_var('func_4856')
call_6652 = relay.TupleGetItem(func_4855_call(), 0)
call_6653 = relay.TupleGetItem(func_4856_call(), 0)
output = relay.Tuple([call_6652,])
output2 = relay.Tuple([call_6653,])
func_6661 = relay.Function([], output)
mod['func_6661'] = func_6661
mod = relay.transform.InferType()(mod)
output = func_6661()
func_6662 = relay.Function([], output)
mutated_mod['func_6662'] = func_6662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2594_call = mod.get_global_var('func_2594')
func_2596_call = mutated_mod.get_global_var('func_2596')
call_6712 = relay.TupleGetItem(func_2594_call(), 0)
call_6713 = relay.TupleGetItem(func_2596_call(), 0)
func_2214_call = mod.get_global_var('func_2214')
func_2218_call = mutated_mod.get_global_var('func_2218')
const_6720 = relay.const(-5, dtype = "int32")#candidate|6720|()|const|int32
const_6721 = relay.const([4,1,3,-10,-9,4,-9,-1,6,8,-5,5,-5,9,7,-10,8,-8,-1,8,3,5,7,-2,-5,6,3,9,2,-7,8,1,9,6,8,-9,6,-5,-1,5,-7,5,2,7,-3,-2,2,-8,-3,-10,-8,3,2,-4,-5,10,-10,2,-10,-6], dtype = "int32")#candidate|6721|(60,)|const|int32
call_6719 = func_2214_call(relay.reshape(const_6720.astype('int32'), []), relay.reshape(const_6721.astype('int32'), [3, 4, 5]), )
call_6722 = func_2214_call(relay.reshape(const_6720.astype('int32'), []), relay.reshape(const_6721.astype('int32'), [3, 4, 5]), )
output = relay.Tuple([call_6712,call_6719,const_6720,const_6721,])
output2 = relay.Tuple([call_6713,call_6722,const_6720,const_6721,])
func_6726 = relay.Function([], output)
mod['func_6726'] = func_6726
mod = relay.transform.InferType()(mod)
output = func_6726()
func_6727 = relay.Function([], output)
mutated_mod['func_6727'] = func_6727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4932_call = mod.get_global_var('func_4932')
func_4933_call = mutated_mod.get_global_var('func_4933')
call_6755 = relay.TupleGetItem(func_4932_call(), 0)
call_6756 = relay.TupleGetItem(func_4933_call(), 0)
output = relay.Tuple([call_6755,])
output2 = relay.Tuple([call_6756,])
func_6766 = relay.Function([], output)
mod['func_6766'] = func_6766
mod = relay.transform.InferType()(mod)
mutated_mod['func_6766'] = func_6766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6766_call = mutated_mod.get_global_var('func_6766')
call_6767 = func_6766_call()
output = call_6767
func_6768 = relay.Function([], output)
mutated_mod['func_6768'] = func_6768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4471_call = mod.get_global_var('func_4471')
func_4472_call = mutated_mod.get_global_var('func_4472')
call_6783 = relay.TupleGetItem(func_4471_call(), 0)
call_6784 = relay.TupleGetItem(func_4472_call(), 0)
func_5948_call = mod.get_global_var('func_5948')
func_5951_call = mutated_mod.get_global_var('func_5951')
const_6800 = relay.const([1.238240,4.949963,-4.095444,3.115900,5.208078,6.033700,-9.164374,-0.201485,8.857877,1.955234,2.417191,6.838546,-7.870146,-7.220058,7.333281,5.442807,5.434234,-4.124478,1.851950,9.019140,1.518484,-7.803143,7.682894,-3.850967,9.920392,2.118319,-3.229578,4.214436,5.688033,-6.297749,-0.922677,6.561823,-0.715115,9.339719,-7.143993,8.778346,-3.925573,4.589887,-3.005167,-5.814606,-7.353715,-8.655920,-4.542944,1.314307,5.805115,-3.403366,1.921524,6.687313,1.741746,0.353762,-1.760091,8.400205,-5.409714,-0.639868,-1.863370,-6.676748,-2.184952,3.995110,1.621367,-0.865817,-1.742389,-5.752812,-3.495735,-5.668716,8.545960,0.070400,-1.458247,-2.927991,-4.763921,4.905458,8.807082,5.607183,3.739616,-2.099296,0.308554,0.299922,8.855002,-8.461167,-2.533336,1.493031,-9.410035,6.846979,4.705019,-5.465835,-4.728957,5.631733,6.278766,1.057314,5.389884,7.401078,-7.558573,7.312696,5.538615,5.130807,-6.265662,3.912750,-2.299566,1.307800,-0.952440,8.311536,4.579551,-8.403931,1.565875,0.598038,4.873736,3.038110,-9.227669,7.493493,-0.025985,7.332322,5.012615,-6.729461,1.620890,2.314444,3.741346,-9.653882,1.192114,8.887184,-5.822124,-7.038965,-2.377271,1.481872,-1.486046,-3.135042,2.955396,2.943868,-2.246878,-5.517905,0.647274,5.143618,-8.881006,4.276972,-2.640871,-9.600095,-1.387225,-9.200051,7.796366,4.998322,-3.735118,-1.556874,3.136425,-8.371853,6.612014,9.640026,-3.362607,4.086612,-0.877694,7.355088,-8.069005,1.125030,-9.892543,6.181347,0.798964,0.304507,-7.395614,4.452407,2.764277,5.531458,2.596533,4.639663,6.140253,-3.061099,1.584950,-7.322773,-6.663152,-9.256536,4.547206,-4.154722,-4.159632,-8.474964,6.943861,-3.974383,4.776905,-7.031558,-8.172013,-1.844301,-3.377150,3.201405,-5.055606,5.197380,6.309504,5.522815,2.451386,6.931169,9.200407,-3.246134,-9.265708,1.225813,-1.700806,-2.015928,1.295124,-4.765489,8.641377,-2.106606,8.198207,-2.625397,8.083353,8.374577,0.975214,7.255528,-5.464741,-3.042177,-0.575963,-2.432941,4.468362,-0.160419,-4.585799,-2.708681,-7.336660,3.876366,5.310985,6.070879,-3.182588,2.750257,7.618129,-9.468909,7.732990,-2.163633,5.782051,-8.978603,2.416187,6.896918,-3.262818,-2.777460,-6.723102,-0.513775,9.533490,9.795589,3.393148,-4.676529,9.942425,-8.015423,6.848449,-4.593221,-5.757731,7.597832,4.506615,9.685276,-8.752296,5.578247,4.306590,-7.974053,0.345254,-7.420525,7.916597,8.975665,-8.551267,7.750213,9.357430,-8.784024,-9.536519,5.535879,-5.502169,9.436774,-9.362549,-7.376384,5.478837,2.595574,-0.005174,8.735878,-0.497616,-1.938030,-7.004800,-9.493882,2.491394,5.301886,-8.961856,-5.959543,9.164442,7.300010,-1.618222,-2.926731,2.712092,-2.076738,1.416364,4.436410,-5.056181,-1.297059,1.606696,-5.889441,0.772067,-5.835426,7.179074,0.387509,2.657917,-6.120751,-5.979825,8.906129,-4.857126,8.420613,2.847915,5.634166,-9.303792,-0.781115,-1.653280,-2.290784,9.387632,2.742393,6.793473,9.822062,-3.432042,-0.642817,-2.571305,-1.175708,6.704061,3.762294,-7.398934,8.390028,-3.690662,-6.172546,-4.027651,4.882255,8.217666,-6.590267,6.386312,5.815085,-1.235393,-5.859667,6.038429,5.712859,-9.214727,5.014286,-9.886682,5.759903,3.209902,2.986929,-1.832603,1.495834,-9.754715,9.871058,9.038242,1.287708,-6.187104,1.618073,-1.652877,3.998691,6.393801,1.697808,8.032752,-8.503321,-0.748549,-0.649835,-9.257250,-9.250406,-8.769747,-8.126086,6.025651,3.721597,1.367661,4.081530,4.945816,-3.047056,-4.400702,-2.492043,-1.311801,-2.961852,4.299979,-1.496784,-6.162291,-5.069078,-4.953207,-6.404801,-8.089375,9.613289,-7.401576,4.980645,8.685096,-7.371039,4.002062,7.832102,-7.414578,-4.339155,1.578889,8.853488,1.892753,-6.133855,7.572318,6.077630,-7.473923,5.763434,-2.858373,-7.118214,1.671545,9.849041,-5.390073,-4.874905,-8.546988,-0.486401,5.282788,8.064134,6.941700,-5.052499,-2.029026,-9.112583,6.825654,-9.454405,-0.706582,2.301594,5.436424,-0.874484,-9.267954,-0.289449,4.024935,-7.859953,9.507429,2.215429,6.613117,1.700149,-5.764997,-9.462589,3.052814,9.335601,7.254540,0.350387,6.673067,-0.642572,9.448989,-5.244758,4.831476,2.484453,-6.955785,7.673479,2.503782,6.117343,-7.320824,6.997034,-3.353932,9.940526,5.291790,6.337253,-6.608595,-1.959129,-2.900335,-9.306305,2.966804,-6.207456,4.877593,6.507155,-6.784106,-0.377152,-3.568660,9.718828,-0.763110,7.244447,2.218190,-0.070297,-0.876962,6.805184,5.197338,8.532926,-8.486927,-5.707216,3.676304,-0.066823,-8.387920,2.637393,-6.304138,-2.182782,8.369614,-3.269426,-4.910363,7.956897,-3.640936,8.479011,-8.679643,-6.628455,9.674692,-4.309355,6.830958,-3.385341,8.745435,-1.447912,-0.048019,-5.199220,-7.853302,2.251605,3.631470,-6.430991,1.120245,3.953684,-9.799434,-3.134683,-3.533945,-1.249167,0.843956,-8.875288,-2.895994,-5.612119,3.371493,7.607922,-3.208976,-9.142598,8.353531,5.217715,-0.259723,-9.121295,-6.696514,-0.199840,-4.438984,-7.852885,-8.623509,-6.157343,-7.921545,8.040848,-1.157928,0.532385,9.608448,-9.713178,-1.916276,-6.654779,3.326698,6.347832,7.666206,-8.403594,4.793970,-1.931812,7.077386,-6.308829,8.513368,6.133598,-0.706664,-1.058972,-6.559250,-9.486714,-6.741514,-0.133190,-7.030226,-6.649803,9.883090,5.447267,1.012245,-4.294969,-6.546065,-3.917029,8.104079,3.441148,1.013069,5.719698,1.755743,-5.279554,-5.077998,4.686426,8.913144,0.572255,-5.793497,8.351145,-5.226283,8.873363,-8.177776,-4.206866,6.508420,-2.571005,-9.349690,8.816815,1.169214,6.813179,-3.405472,-8.349592,-5.408978,-2.468602,-6.861025,9.626669,-0.824671,-6.118551,-2.769258,-3.612775,-5.975545,-9.033112,-7.395021,-0.842489,-4.753799,-5.977901,-6.111538,-8.888270,-5.313203,-8.428783,-6.931861,4.513697,-7.326816,6.209831,-3.944806,-1.782173,-1.221809,2.773551,-4.162620,8.371921,-4.980028,3.334355,-7.443110,5.751825,1.258046,-0.942731,1.467722,-8.000691,0.390218,3.922900,1.413333,-7.094625,-8.694993,-0.749759,-5.984063,1.513564,8.568126,1.597311,-3.548377,-6.031090,-9.916086,7.544041,-4.854832,3.438027,-8.613482,-2.439193,4.949836,2.211186,-0.239362,-9.825436,3.947266,5.165491,4.453141,1.847390,-4.793017,9.036419,-2.076695,-1.264127], dtype = "float64")#candidate|6800|(624,)|const|float64
call_6799 = func_5948_call(relay.reshape(const_6800.astype('float64'), [4, 13, 12]))
call_6801 = func_5948_call(relay.reshape(const_6800.astype('float64'), [4, 13, 12]))
bop_6803 = relay.logical_or(const_6800.astype('bool'), relay.reshape(call_6799.astype('bool'), relay.shape_of(const_6800))) # shape=(624,)
bop_6806 = relay.logical_or(const_6800.astype('bool'), relay.reshape(call_6801.astype('bool'), relay.shape_of(const_6800))) # shape=(624,)
func_4395_call = mod.get_global_var('func_4395')
func_4397_call = mutated_mod.get_global_var('func_4397')
var_6808 = relay.var("var_6808", dtype = "float32", shape = (54,))#candidate|6808|(54,)|var|float32
call_6807 = relay.TupleGetItem(func_4395_call(relay.reshape(var_6808.astype('float32'), [27, 2])), 0)
call_6809 = relay.TupleGetItem(func_4397_call(relay.reshape(var_6808.astype('float32'), [27, 2])), 0)
func_4395_call = mod.get_global_var('func_4395')
func_4397_call = mutated_mod.get_global_var('func_4397')
call_6814 = relay.TupleGetItem(func_4395_call(relay.reshape(call_6807.astype('float32'), [27, 2])), 0)
call_6815 = relay.TupleGetItem(func_4397_call(relay.reshape(call_6807.astype('float32'), [27, 2])), 0)
func_5153_call = mod.get_global_var('func_5153')
func_5154_call = mutated_mod.get_global_var('func_5154')
call_6816 = relay.TupleGetItem(func_5153_call(), 0)
call_6817 = relay.TupleGetItem(func_5154_call(), 0)
output = relay.Tuple([call_6783,bop_6803,call_6807,var_6808,call_6814,call_6816,])
output2 = relay.Tuple([call_6784,bop_6806,call_6809,var_6808,call_6815,call_6817,])
func_6822 = relay.Function([var_6808,], output)
mod['func_6822'] = func_6822
mod = relay.transform.InferType()(mod)
var_6823 = relay.var("var_6823", dtype = "float32", shape = (54,))#candidate|6823|(54,)|var|float32
output = func_6822(var_6823)
func_6824 = relay.Function([var_6823], output)
mutated_mod['func_6824'] = func_6824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3932_call = mod.get_global_var('func_3932')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_6844 = relay.TupleGetItem(func_3932_call(), 0)
call_6845 = relay.TupleGetItem(func_3934_call(), 0)
output = relay.Tuple([call_6844,])
output2 = relay.Tuple([call_6845,])
func_6846 = relay.Function([], output)
mod['func_6846'] = func_6846
mod = relay.transform.InferType()(mod)
output = func_6846()
func_6847 = relay.Function([], output)
mutated_mod['func_6847'] = func_6847
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6891 = relay.var("var_6891", dtype = "float64", shape = (14, 8, 12))#candidate|6891|(14, 8, 12)|var|float64
var_6892 = relay.var("var_6892", dtype = "float64", shape = (14, 8, 12))#candidate|6892|(14, 8, 12)|var|float64
bop_6893 = relay.power(var_6891.astype('float64'), relay.reshape(var_6892.astype('float64'), relay.shape_of(var_6891))) # shape=(14, 8, 12)
output = bop_6893
output2 = bop_6893
func_6902 = relay.Function([var_6891,var_6892,], output)
mod['func_6902'] = func_6902
mod = relay.transform.InferType()(mod)
mutated_mod['func_6902'] = func_6902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6902_call = mutated_mod.get_global_var('func_6902')
var_6904 = relay.var("var_6904", dtype = "float64", shape = (14, 8, 12))#candidate|6904|(14, 8, 12)|var|float64
var_6905 = relay.var("var_6905", dtype = "float64", shape = (14, 8, 12))#candidate|6905|(14, 8, 12)|var|float64
call_6903 = func_6902_call(var_6904,var_6905,)
output = call_6903
func_6906 = relay.Function([var_6904,var_6905,], output)
mutated_mod['func_6906'] = func_6906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_6908 = relay.TupleGetItem(func_3352_call(), 0)
call_6909 = relay.TupleGetItem(func_3354_call(), 0)
output = relay.Tuple([call_6908,])
output2 = relay.Tuple([call_6909,])
func_6915 = relay.Function([], output)
mod['func_6915'] = func_6915
mod = relay.transform.InferType()(mod)
mutated_mod['func_6915'] = func_6915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6915_call = mutated_mod.get_global_var('func_6915')
call_6916 = func_6915_call()
output = call_6916
func_6917 = relay.Function([], output)
mutated_mod['func_6917'] = func_6917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2377_call = mod.get_global_var('func_2377')
func_2379_call = mutated_mod.get_global_var('func_2379')
call_6918 = func_2377_call()
call_6919 = func_2377_call()
output = relay.Tuple([call_6918,])
output2 = relay.Tuple([call_6919,])
func_6923 = relay.Function([], output)
mod['func_6923'] = func_6923
mod = relay.transform.InferType()(mod)
output = func_6923()
func_6924 = relay.Function([], output)
mutated_mod['func_6924'] = func_6924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6367_call = mod.get_global_var('func_6367')
func_6368_call = mutated_mod.get_global_var('func_6368')
call_6957 = relay.TupleGetItem(func_6367_call(), 0)
call_6958 = relay.TupleGetItem(func_6368_call(), 0)
output = relay.Tuple([call_6957,])
output2 = relay.Tuple([call_6958,])
func_6975 = relay.Function([], output)
mod['func_6975'] = func_6975
mod = relay.transform.InferType()(mod)
mutated_mod['func_6975'] = func_6975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6975_call = mutated_mod.get_global_var('func_6975')
call_6976 = func_6975_call()
output = call_6976
func_6977 = relay.Function([], output)
mutated_mod['func_6977'] = func_6977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4328_call = mod.get_global_var('func_4328')
func_4330_call = mutated_mod.get_global_var('func_4330')
call_6978 = relay.TupleGetItem(func_4328_call(), 1)
call_6979 = relay.TupleGetItem(func_4330_call(), 1)
uop_6980 = relay.exp(call_6978.astype('float64')) # shape=(4, 10, 12)
uop_6982 = relay.exp(call_6979.astype('float64')) # shape=(4, 10, 12)
func_6661_call = mod.get_global_var('func_6661')
func_6662_call = mutated_mod.get_global_var('func_6662')
call_6986 = relay.TupleGetItem(func_6661_call(), 0)
call_6987 = relay.TupleGetItem(func_6662_call(), 0)
output = relay.Tuple([uop_6980,call_6986,])
output2 = relay.Tuple([uop_6982,call_6987,])
func_6993 = relay.Function([], output)
mod['func_6993'] = func_6993
mod = relay.transform.InferType()(mod)
output = func_6993()
func_6994 = relay.Function([], output)
mutated_mod['func_6994'] = func_6994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1889_call = mod.get_global_var('func_1889')
func_1890_call = mutated_mod.get_global_var('func_1890')
call_6995 = relay.TupleGetItem(func_1889_call(), 0)
call_6996 = relay.TupleGetItem(func_1890_call(), 0)
func_2704_call = mod.get_global_var('func_2704')
func_2706_call = mutated_mod.get_global_var('func_2706')
call_7007 = relay.TupleGetItem(func_2704_call(), 1)
call_7008 = relay.TupleGetItem(func_2706_call(), 1)
output = relay.Tuple([call_6995,call_7007,])
output2 = relay.Tuple([call_6996,call_7008,])
func_7033 = relay.Function([], output)
mod['func_7033'] = func_7033
mod = relay.transform.InferType()(mod)
output = func_7033()
func_7034 = relay.Function([], output)
mutated_mod['func_7034'] = func_7034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4855_call = mod.get_global_var('func_4855')
func_4856_call = mutated_mod.get_global_var('func_4856')
call_7043 = relay.TupleGetItem(func_4855_call(), 0)
call_7044 = relay.TupleGetItem(func_4856_call(), 0)
output = relay.Tuple([call_7043,])
output2 = relay.Tuple([call_7044,])
func_7047 = relay.Function([], output)
mod['func_7047'] = func_7047
mod = relay.transform.InferType()(mod)
output = func_7047()
func_7048 = relay.Function([], output)
mutated_mod['func_7048'] = func_7048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_7059 = relay.TupleGetItem(func_1639_call(), 0)
call_7060 = relay.TupleGetItem(func_1641_call(), 0)
output = call_7059
output2 = call_7060
func_7064 = relay.Function([], output)
mod['func_7064'] = func_7064
mod = relay.transform.InferType()(mod)
mutated_mod['func_7064'] = func_7064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7064_call = mutated_mod.get_global_var('func_7064')
call_7065 = func_7064_call()
output = call_7065
func_7066 = relay.Function([], output)
mutated_mod['func_7066'] = func_7066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4932_call = mod.get_global_var('func_4932')
func_4933_call = mutated_mod.get_global_var('func_4933')
call_7079 = relay.TupleGetItem(func_4932_call(), 0)
call_7080 = relay.TupleGetItem(func_4933_call(), 0)
output = call_7079
output2 = call_7080
func_7085 = relay.Function([], output)
mod['func_7085'] = func_7085
mod = relay.transform.InferType()(mod)
mutated_mod['func_7085'] = func_7085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7085_call = mutated_mod.get_global_var('func_7085')
call_7086 = func_7085_call()
output = call_7086
func_7087 = relay.Function([], output)
mutated_mod['func_7087'] = func_7087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1639_call = mod.get_global_var('func_1639')
func_1641_call = mutated_mod.get_global_var('func_1641')
call_7125 = relay.TupleGetItem(func_1639_call(), 0)
call_7126 = relay.TupleGetItem(func_1641_call(), 0)
output = call_7125
output2 = call_7126
func_7130 = relay.Function([], output)
mod['func_7130'] = func_7130
mod = relay.transform.InferType()(mod)
output = func_7130()
func_7131 = relay.Function([], output)
mutated_mod['func_7131'] = func_7131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3932_call = mod.get_global_var('func_3932')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_7171 = relay.TupleGetItem(func_3932_call(), 0)
call_7172 = relay.TupleGetItem(func_3934_call(), 0)
func_4759_call = mod.get_global_var('func_4759')
func_4761_call = mutated_mod.get_global_var('func_4761')
const_7174 = relay.const(10, dtype = "uint32")#candidate|7174|()|const|uint32
call_7173 = relay.TupleGetItem(func_4759_call(relay.reshape(const_7174.astype('uint32'), [])), 2)
call_7175 = relay.TupleGetItem(func_4761_call(relay.reshape(const_7174.astype('uint32'), [])), 2)
output = relay.Tuple([call_7171,call_7173,const_7174,])
output2 = relay.Tuple([call_7172,call_7175,const_7174,])
func_7178 = relay.Function([], output)
mod['func_7178'] = func_7178
mod = relay.transform.InferType()(mod)
output = func_7178()
func_7179 = relay.Function([], output)
mutated_mod['func_7179'] = func_7179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4344_call = mod.get_global_var('func_4344')
func_4346_call = mutated_mod.get_global_var('func_4346')
call_7221 = relay.TupleGetItem(func_4344_call(), 0)
call_7222 = relay.TupleGetItem(func_4346_call(), 0)
output = call_7221
output2 = call_7222
func_7244 = relay.Function([], output)
mod['func_7244'] = func_7244
mod = relay.transform.InferType()(mod)
output = func_7244()
func_7245 = relay.Function([], output)
mutated_mod['func_7245'] = func_7245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5280_call = mod.get_global_var('func_5280')
func_5282_call = mutated_mod.get_global_var('func_5282')
call_7316 = relay.TupleGetItem(func_5280_call(), 0)
call_7317 = relay.TupleGetItem(func_5282_call(), 0)
func_6846_call = mod.get_global_var('func_6846')
func_6847_call = mutated_mod.get_global_var('func_6847')
call_7341 = relay.TupleGetItem(func_6846_call(), 0)
call_7342 = relay.TupleGetItem(func_6847_call(), 0)
output = relay.Tuple([call_7316,call_7341,])
output2 = relay.Tuple([call_7317,call_7342,])
func_7353 = relay.Function([], output)
mod['func_7353'] = func_7353
mod = relay.transform.InferType()(mod)
output = func_7353()
func_7354 = relay.Function([], output)
mutated_mod['func_7354'] = func_7354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1212_call = mod.get_global_var('func_1212')
func_1214_call = mutated_mod.get_global_var('func_1214')
call_7385 = func_1212_call()
call_7386 = func_1212_call()
func_4142_call = mod.get_global_var('func_4142')
func_4143_call = mutated_mod.get_global_var('func_4143')
call_7401 = relay.TupleGetItem(func_4142_call(), 0)
call_7402 = relay.TupleGetItem(func_4143_call(), 0)
func_4855_call = mod.get_global_var('func_4855')
func_4856_call = mutated_mod.get_global_var('func_4856')
call_7407 = relay.TupleGetItem(func_4855_call(), 1)
call_7408 = relay.TupleGetItem(func_4856_call(), 1)
func_2878_call = mod.get_global_var('func_2878')
func_2882_call = mutated_mod.get_global_var('func_2882')
const_7411 = relay.const(10, dtype = "int32")#candidate|7411|()|const|int32
const_7412 = relay.const([-3,2,-3,3,-4,6,5,1,-10,8,3,-1,-6,8,-9,6,1,-3,1,-4,8,-2,-1,-6,-9,-3,6,7,-4,-10,1,2,-4,-8,10,7,-1,2,-3,5,3,-6,-1,-1,-9,6,6,4,3,-2,-6,-3,-1,1,1,6,3,3,5,6], dtype = "int32")#candidate|7412|(60,)|const|int32
call_7410 = relay.TupleGetItem(func_2878_call(relay.reshape(const_7411.astype('int32'), []), relay.reshape(const_7412.astype('int32'), [60,]), ), 1)
call_7413 = relay.TupleGetItem(func_2882_call(relay.reshape(const_7411.astype('int32'), []), relay.reshape(const_7412.astype('int32'), [60,]), ), 1)
bop_7416 = relay.logical_and(call_7410.astype('bool'), const_7411.astype('bool')) # shape=(3, 4, 5)
bop_7419 = relay.logical_and(call_7413.astype('bool'), const_7411.astype('bool')) # shape=(3, 4, 5)
output = relay.Tuple([call_7385,call_7401,call_7407,const_7412,bop_7416,])
output2 = relay.Tuple([call_7386,call_7402,call_7408,const_7412,bop_7419,])
func_7421 = relay.Function([], output)
mod['func_7421'] = func_7421
mod = relay.transform.InferType()(mod)
output = func_7421()
func_7422 = relay.Function([], output)
mutated_mod['func_7422'] = func_7422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7538 = relay.var("var_7538", dtype = "float32", shape = (5, 4, 5))#candidate|7538|(5, 4, 5)|var|float32
uop_7539 = relay.log(var_7538.astype('float32')) # shape=(5, 4, 5)
output = relay.Tuple([uop_7539,])
output2 = relay.Tuple([uop_7539,])
func_7548 = relay.Function([var_7538,], output)
mod['func_7548'] = func_7548
mod = relay.transform.InferType()(mod)
mutated_mod['func_7548'] = func_7548
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7549 = relay.var("var_7549", dtype = "float32", shape = (5, 4, 5))#candidate|7549|(5, 4, 5)|var|float32
func_7548_call = mutated_mod.get_global_var('func_7548')
call_7550 = func_7548_call(var_7549)
output = call_7550
func_7551 = relay.Function([var_7549], output)
mutated_mod['func_7551'] = func_7551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7567 = relay.var("var_7567", dtype = "float64", shape = (2, 13, 3))#candidate|7567|(2, 13, 3)|var|float64
var_7568 = relay.var("var_7568", dtype = "float64", shape = (2, 13, 3))#candidate|7568|(2, 13, 3)|var|float64
bop_7569 = relay.less_equal(var_7567.astype('bool'), relay.reshape(var_7568.astype('bool'), relay.shape_of(var_7567))) # shape=(2, 13, 3)
uop_7582 = relay.acos(var_7568.astype('float32')) # shape=(2, 13, 3)
bop_7586 = relay.bitwise_or(uop_7582.astype('uint32'), relay.reshape(bop_7569.astype('uint32'), relay.shape_of(uop_7582))) # shape=(2, 13, 3)
func_2174_call = mod.get_global_var('func_2174')
func_2175_call = mutated_mod.get_global_var('func_2175')
call_7592 = func_2174_call()
call_7593 = func_2174_call()
output = relay.Tuple([bop_7586,call_7592,])
output2 = relay.Tuple([bop_7586,call_7593,])
func_7602 = relay.Function([var_7567,var_7568,], output)
mod['func_7602'] = func_7602
mod = relay.transform.InferType()(mod)
mutated_mod['func_7602'] = func_7602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7602_call = mutated_mod.get_global_var('func_7602')
var_7604 = relay.var("var_7604", dtype = "float64", shape = (2, 13, 3))#candidate|7604|(2, 13, 3)|var|float64
var_7605 = relay.var("var_7605", dtype = "float64", shape = (2, 13, 3))#candidate|7605|(2, 13, 3)|var|float64
call_7603 = func_7602_call(var_7604,var_7605,)
output = call_7603
func_7606 = relay.Function([var_7604,var_7605,], output)
mutated_mod['func_7606'] = func_7606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2465_call = mod.get_global_var('func_2465')
func_2467_call = mutated_mod.get_global_var('func_2467')
call_7677 = func_2465_call()
call_7678 = func_2465_call()
func_6293_call = mod.get_global_var('func_6293')
func_6297_call = mutated_mod.get_global_var('func_6297')
var_7682 = relay.var("var_7682", dtype = "uint8", shape = (256,))#candidate|7682|(256,)|var|uint8
const_7683 = relay.const([-1.074405,-3.531377,4.177556,2.284647,7.854168,-1.315776,1.085460,-4.197025,3.315480,1.402613,4.058011,8.945425,-3.809696,9.170704,5.969696,-7.232317,-4.174199,-9.493291,-1.506861,2.250316,0.934813,-8.856864,1.189802,-4.323321,3.143888,-7.077312,9.789346,-8.362022,-9.515895,1.207808,-6.927609,5.541162,-2.397500,4.398418,5.213924,-3.957619,-6.457073,6.525480,4.292313,-8.169759,5.786745,-4.346516,1.783207,6.339552,-2.738662,4.937857,-2.945914,1.671487,-0.769051,1.648044,-9.751919,-9.127614,-4.988382,-6.634369,-0.967354,-7.321971,5.401704,-3.344858,-3.088305,-7.634556,-3.860923,4.529547,-8.921119,-4.109698,4.013434,-6.259083,3.144988,-5.622456,3.471599,-4.519482,-3.199057,2.703051,3.106176,-6.953115,5.826407,-4.178037,-7.764539,-9.808610,6.524061,8.610886,-0.471721,-9.105275,-6.430516,-5.849611,8.255944,6.154663,4.334372,-6.332657,-4.172905,-7.519568,6.223165,-5.066234,7.116578,2.745509,2.260806,2.865918,-1.631724,6.040584,2.619733,-1.988133,-4.556260,-3.725074,3.432907,-8.566143,0.998094,5.809969,-2.940006,-7.280574,9.579398,-7.739151,-9.719344,-6.533769,4.726719,9.486928,6.886447,5.071771,-2.831397,-3.465349,-8.966684,8.263308,5.910960,6.930762,-9.653387,5.319722,9.668754,-3.050745,-9.509484,-8.523090,2.574143,-5.314362,-2.206705,-6.805796,3.330700,-9.691039,-9.528588,9.633636,-8.873526,9.374566,-8.470748,-9.130064,-6.958775,9.807782,-8.575664,-4.922424,6.163147,-1.248164,-0.989751,-6.399568,3.038685,-5.729119,9.654121,-1.237679,-8.346469,-4.140969,-4.721700,-8.601686,-6.834308,3.828060,1.757445,-5.557322,-6.546277,-4.167405,7.965171,-4.168606,9.469832,-9.064749,-2.855721,0.051622,-2.986670,0.510843,-7.516814,0.111387,8.321781,5.926726,-8.467120,-9.680724,6.962169,-4.564818,9.138634,8.375780,5.012193,6.277490,-6.944645,-0.386589,7.770780,-5.193055,6.484175,-7.959707,-6.063762,5.578643,6.651520,-5.774212,1.253913,0.765656,9.517065,4.895203,7.368516,8.533403,0.050000,-4.808752,6.832855,3.276401,6.997137,-6.542214,3.305097,-4.788332,8.731692,4.937502,4.768744,8.185285,-3.979003,6.299593,-4.402653,4.260148,-8.216652,-2.956898,-0.625115,-4.129090,4.726400,-1.340261,8.375781,5.221304,3.987638,3.208138,2.541539,3.809077,0.698849,0.151222,9.543540,-6.695535,6.257146,-4.790518,-7.964725,1.741609,2.974194,-5.019884,-0.409403,1.658823,0.140382,0.828199,4.167720,-5.879756,8.381710,-6.557230,-9.391971,1.131061,4.056068,-9.507833,-4.108482,4.289706,9.349982,-8.588432,6.347614,6.349479,-5.419791,-0.453820,7.190433,6.803980,-7.618685,-4.591301,-2.606344,-6.375455,9.467328,9.474986,-9.941091,0.123395,-0.525947,-5.448821,7.779413,-7.534599,-9.970193,3.289588,3.599769,-1.795144,6.154796,2.406076,-9.764383,5.821850,-4.584568,-9.246845,-6.555777,-4.315826,1.319986,-5.913935,-6.710945,1.127113,8.382126,-9.800035,0.469971,1.401056,2.543492,-8.578004,-2.294735,0.970928,-2.699382,-0.172261,9.955103,0.376417,1.364982,2.055819,2.627352,-8.273114,-2.540081,6.657894,8.112364,-2.495450,0.017119,7.439664,-4.553982,-8.290309,-5.350699,9.366154,8.930141,-7.314142,1.424701,-9.829014,-0.263718,6.404742,-9.205609,-1.088851,8.913894,-0.073711,5.368346,1.735165,7.365209,-7.592499,-1.708469,1.885684,3.498253,-2.579947,-3.450212,7.897827,4.454358,1.868627,5.559363,4.487646,-0.399920,-6.957641,4.030737,3.224087,4.889429,-9.981681,-1.723332,-0.886298,-3.438562,-4.465348,2.387117,0.960072,-3.931012,-1.987405,5.246371,3.175378,-7.337351,0.293775,5.304369,-7.529765,9.026854,-0.148695,-2.443558,2.921729,7.631041,7.442621,7.035303,5.663697,4.981088,5.672109,8.441151,-5.747408,-5.922481,-5.522461,8.381378,4.402994,3.930647,-6.885009,-5.706698,-2.913247,9.271544,-4.374573,5.020454,-0.463384,-9.192392,7.604163,-5.872533,6.457603,5.723113,-7.257671,-9.198666,9.469646,5.787209,3.428356,9.827492,9.739370,-9.335879,3.120097,5.245917,-4.450662,-4.816133,-3.160835,-5.129041,8.275273,1.779698,-0.476685,8.950570,9.700519,5.708299,-9.391376,7.685279,2.851626,-1.842200,4.055615,-5.718910,9.736635,9.710808,-5.149101,7.676736,4.074290,5.331488,-6.911950,-6.428447,-8.046129,-5.448067,-3.685973,-2.161406,1.457654,2.438835,1.719850,5.327215,-0.630110,-5.538002,-7.534111,-7.307946,-8.314040,2.118646,2.467308,-1.389312,9.140069,-3.095526,-6.600213,2.753789,8.836117,-0.937174,-4.666268,5.296091,-9.210886,8.153255,9.887851,5.219098,-1.715090,-3.472922,-1.874596,4.246922,-5.808380,6.344657,-7.548845,-2.418297,1.009474,-2.089213,-0.969669,-4.014464,5.051044,1.423817,-7.912401,-3.090867,2.261426,-4.136318,-2.986637,3.915444,1.001116,5.566347,2.351543,-7.021918,4.879180,4.967596,-5.177155,-4.663531,5.298084,6.239624,-0.029828,-3.206799,-3.032285,6.076614,-9.392650,9.801970,-1.857243,-3.867445,2.549756,-9.956316,8.276044,-4.136715,-4.256671,-2.479994,1.897883,9.145132,4.003383,4.715699,-0.158591,-7.155609,-5.998021,-1.382004,2.935448,-6.463905,0.340096,5.890832,-1.072655,6.935861,-5.764793,2.239477,9.667221,-0.432613,-4.768671,-9.447475,-6.714503,-6.076985,5.100931,0.127290,5.830334,3.479216,6.366835,6.682262,-3.590940,-5.967955,-4.871527,-2.721122,-3.527432,5.991533,7.125834,6.874082,-4.321703,-2.308716,-5.250784,-7.351136,7.085787,4.784667,-0.768298,6.980314,6.044222,-8.419097,8.090731,6.292731,2.523495,-1.600360,-6.417083,-0.263689,2.226151,-3.289672,7.048426,5.505553,-0.063659,5.787078,-8.347796,-2.377660,-8.527175,4.908889,4.697496,0.560768,8.824263,2.687774,6.828586,0.696255,-0.053624,-8.685925,-0.438835,3.762406,-0.763070,-7.056894,2.463342,-1.096517,5.674021,6.666824,-9.857270,8.700000,-8.651384,-1.070025,-7.239130,1.848285,7.296279,-8.302147,9.810290,1.112528,-5.891401,-5.851992,-9.728319,8.731211,2.716873,-0.306391,9.249813,6.730934,7.549514,0.998648,0.108462,-0.844832,5.511868,4.101506,-0.973141,-3.355747,-3.090089,-6.113678,-2.286168,-9.056160,-9.075296,2.652193,-3.831184,-7.945072,-7.604691,1.686356,-8.956777,0.451314,1.757292,-0.929840,6.415681,-2.551147,-2.878465,-8.686509,6.838729,-7.157612,4.779405,6.376784,-4.860176,4.528895,-4.789358,6.583862,3.372574,-1.386756,5.404088,-5.745027,4.510243,-8.399525,-4.806149,-7.312602,6.075056,2.472639,9.420393,-2.004901,-9.234397,-4.714187,-8.939631,8.689398,-7.808210,-6.283679,7.736049,-8.332823,-1.162053,-6.122599,0.407079,-5.912712,0.246855,-8.487886,-8.807439,-1.727588,-7.622429,8.140129,-4.855023,-9.358180,-5.920187,-5.755457,-7.764595,5.067250,2.581749,1.923723,-3.277149,6.429343,9.482771,-5.076727,-6.371041,6.386740,-8.137786,-3.986035,5.715713,0.877647,4.402971,6.565713,7.760964,-6.996992,-9.523894,0.198369,6.489780,-3.409596,-9.722237,0.346092,-3.711980,-4.371119,7.490360,3.091869,3.999075,5.432208,9.001485,-0.943312,1.935384,6.874803,-9.276961,-5.295706,-1.271415,8.770221,-5.181629,8.816456,9.072547,6.700004,-1.996891,3.657272,0.315351,7.184081,-6.431491,1.012150,-9.963316,8.797683,-8.280127,7.451769,6.727947,8.006838,4.500971,-1.507066,-4.954417,4.427339,-6.565497,4.416127,2.733735,-3.414873,-5.827271,5.511533,2.011954,-4.178354,9.201990,-0.040186,-3.278010,-7.195330,-0.993619,-3.191911,-1.248885,-3.205076,-5.711390,-8.542232,-3.558662,0.023798,1.739590,9.852043,-8.011494,-3.628426,1.379991,-7.631978,-3.261317,9.816681,0.559663,-7.074994,-7.157440,-8.642130,-0.050013,-3.795119,-8.833910,3.995816,4.121332,-3.127608,-5.540896,7.626272,2.159869,4.309393,-9.975401], dtype = "float32")#candidate|7683|(756,)|const|float32
call_7681 = relay.TupleGetItem(func_6293_call(relay.reshape(var_7682.astype('uint8'), [256,]), relay.reshape(const_7683.astype('float32'), [756,]), ), 6)
call_7684 = relay.TupleGetItem(func_6297_call(relay.reshape(var_7682.astype('uint8'), [256,]), relay.reshape(const_7683.astype('float32'), [756,]), ), 6)
output = relay.Tuple([call_7677,call_7681,var_7682,const_7683,])
output2 = relay.Tuple([call_7678,call_7684,var_7682,const_7683,])
func_7697 = relay.Function([var_7682,], output)
mod['func_7697'] = func_7697
mod = relay.transform.InferType()(mod)
mutated_mod['func_7697'] = func_7697
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7698 = relay.var("var_7698", dtype = "uint8", shape = (256,))#candidate|7698|(256,)|var|uint8
func_7697_call = mutated_mod.get_global_var('func_7697')
call_7699 = func_7697_call(var_7698)
output = call_7699
func_7700 = relay.Function([var_7698], output)
mutated_mod['func_7700'] = func_7700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3932_call = mod.get_global_var('func_3932')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_7719 = relay.TupleGetItem(func_3932_call(), 0)
call_7720 = relay.TupleGetItem(func_3934_call(), 0)
func_5498_call = mod.get_global_var('func_5498')
func_5500_call = mutated_mod.get_global_var('func_5500')
call_7721 = relay.TupleGetItem(func_5498_call(), 2)
call_7722 = relay.TupleGetItem(func_5500_call(), 2)
output = relay.Tuple([call_7719,call_7721,])
output2 = relay.Tuple([call_7720,call_7722,])
func_7778 = relay.Function([], output)
mod['func_7778'] = func_7778
mod = relay.transform.InferType()(mod)
output = func_7778()
func_7779 = relay.Function([], output)
mutated_mod['func_7779'] = func_7779
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7782 = relay.var("var_7782", dtype = "uint8", shape = (15, 3, 4))#candidate|7782|(15, 3, 4)|var|uint8
const_7783 = relay.const([[[-4,1,-5,9],[9,-8,9,8],[2,-10,8,2]],[[7,3,1,-5],[9,10,3,7],[-9,6,6,4]],[[1,3,-9,9],[-3,5,-10,-2],[-10,-3,2,-5]],[[-7,-9,-5,1],[6,-3,-8,-3],[7,-6,-10,-6]],[[-1,-1,10,-3],[7,10,-4,5],[-4,7,3,5]],[[-7,8,9,8],[-4,-4,5,1],[-9,3,3,-5]],[[8,-9,1,-4],[-4,8,6,-7],[6,-5,9,4]],[[-9,3,-5,-9],[10,8,3,-2],[2,-2,7,-9]],[[1,6,7,7],[-7,8,-9,-6],[6,-2,6,5]],[[7,6,-9,9],[-6,9,4,-1],[-6,-4,-9,-8]],[[6,3,-8,-8],[8,-9,9,-8],[-10,10,4,-7]],[[-2,9,-1,6],[9,-7,-8,1],[1,6,5,-4]],[[-2,3,6,10],[8,1,8,-9],[7,-5,-3,2]],[[6,3,-3,-8],[-9,-2,-10,-5],[4,10,-3,1]],[[4,-2,2,-10],[-3,10,8,-10],[-1,-4,-7,-9]]], dtype = "uint8")#candidate|7783|(15, 3, 4)|const|uint8
bop_7784 = relay.subtract(var_7782.astype('uint8'), relay.reshape(const_7783.astype('uint8'), relay.shape_of(var_7782))) # shape=(15, 3, 4)
output = relay.Tuple([bop_7784,])
output2 = relay.Tuple([bop_7784,])
func_7792 = relay.Function([var_7782,], output)
mod['func_7792'] = func_7792
mod = relay.transform.InferType()(mod)
mutated_mod['func_7792'] = func_7792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7793 = relay.var("var_7793", dtype = "uint8", shape = (15, 3, 4))#candidate|7793|(15, 3, 4)|var|uint8
func_7792_call = mutated_mod.get_global_var('func_7792')
call_7794 = func_7792_call(var_7793)
output = call_7794
func_7795 = relay.Function([var_7793], output)
mutated_mod['func_7795'] = func_7795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7353_call = mod.get_global_var('func_7353')
func_7354_call = mutated_mod.get_global_var('func_7354')
call_7797 = relay.TupleGetItem(func_7353_call(), 0)
call_7798 = relay.TupleGetItem(func_7354_call(), 0)
output = call_7797
output2 = call_7798
func_7799 = relay.Function([], output)
mod['func_7799'] = func_7799
mod = relay.transform.InferType()(mod)
mutated_mod['func_7799'] = func_7799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7799_call = mutated_mod.get_global_var('func_7799')
call_7800 = func_7799_call()
output = call_7800
func_7801 = relay.Function([], output)
mutated_mod['func_7801'] = func_7801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3352_call = mod.get_global_var('func_3352')
func_3354_call = mutated_mod.get_global_var('func_3354')
call_7887 = relay.TupleGetItem(func_3352_call(), 0)
call_7888 = relay.TupleGetItem(func_3354_call(), 0)
output = call_7887
output2 = call_7888
func_7914 = relay.Function([], output)
mod['func_7914'] = func_7914
mod = relay.transform.InferType()(mod)
mutated_mod['func_7914'] = func_7914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7914_call = mutated_mod.get_global_var('func_7914')
call_7915 = func_7914_call()
output = call_7915
func_7916 = relay.Function([], output)
mutated_mod['func_7916'] = func_7916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4570_call = mod.get_global_var('func_4570')
func_4571_call = mutated_mod.get_global_var('func_4571')
call_7935 = func_4570_call()
call_7936 = func_4570_call()
func_7697_call = mod.get_global_var('func_7697')
func_7700_call = mutated_mod.get_global_var('func_7700')
const_7942 = relay.const([-9,6,4,1,5,-10,-7,6,-3,2,-3,-4,8,-7,-3,10,5,-1,9,5,-9,3,-5,4,10,-6,3,-6,-8,-9,-1,-4,-6,-5,8,9,6,-3,-8,1,-5,3,-6,10,-3,-6,9,-1,6,-9,6,2,-7,5,4,-5,4,8,6,4,10,-4,-2,5,8,2,2,-8,-3,-6,10,7,-7,1,-4,3,-7,-2,-9,-6,-10,3,-6,-1,-5,-7,8,6,-10,9,6,-7,-8,-1,-7,3,9,1,8,-6,1,-5,-7,6,-10,1,-8,10,-1,-10,9,-8,-1,6,3,2,3,-4,-10,8,-5,9,-9,-7,9,-9,-5,9,-7,7,4,3,1,-8,8,-3,6,6,1,8,-3,8,-5,5,-9,2,-4,-1,-2,5,8,5,-2,-1,-4,-2,-9,6,7,-6,4,10,-2,-10,-1,-6,-5,-2,2,1,-6,3,-3,-9,-8,5,-2,-9,-7,1,-6,-6,8,9,5,5,2,7,7,-4,-1,-7,5,9,7,-7,-7,-5,2,6,-5,-9,9,2,1,2,-6,-7,7,10,-4,-6,-1,7,-6,-1,5,7,5,1,7,8,-2,-2,-8,10,3,-4,-8,8,-5,-6,8,-4,5,10,9,-5,2,-10,4,-4,-10,1,-1,-4,7,-7,-5,1,8,-4,-7,10,10,4], dtype = "uint8")#candidate|7942|(256,)|const|uint8
call_7941 = relay.TupleGetItem(func_7697_call(relay.reshape(const_7942.astype('uint8'), [256,])), 1)
call_7943 = relay.TupleGetItem(func_7700_call(relay.reshape(const_7942.astype('uint8'), [256,])), 1)
func_3768_call = mod.get_global_var('func_3768')
func_3771_call = mutated_mod.get_global_var('func_3771')
const_7954 = relay.const([9,4,-4,8,6,-5,-3,-2,5,-4,-3,-9,9,-10,-6,-4,1,-2,-8,10,-10,-5,-3,-8,5,5,-3,8,-10,6,5,2,5,-4,4,-8,-7,7,-2,-10,9,2], dtype = "uint32")#candidate|7954|(42,)|const|uint32
var_7955 = relay.var("var_7955", dtype = "bool", shape = (630, 2))#candidate|7955|(630, 2)|var|bool
call_7953 = relay.TupleGetItem(func_3768_call(relay.reshape(const_7954.astype('uint32'), [42,]), relay.reshape(var_7955.astype('bool'), [1260,]), ), 5)
call_7956 = relay.TupleGetItem(func_3771_call(relay.reshape(const_7954.astype('uint32'), [42,]), relay.reshape(var_7955.astype('bool'), [1260,]), ), 5)
uop_7963 = relay.rsqrt(var_7955.astype('float32')) # shape=(630, 2)
output = relay.Tuple([call_7935,call_7941,const_7942,call_7953,const_7954,uop_7963,])
output2 = relay.Tuple([call_7936,call_7943,const_7942,call_7956,const_7954,uop_7963,])
F = relay.Function([var_7955,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7955,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

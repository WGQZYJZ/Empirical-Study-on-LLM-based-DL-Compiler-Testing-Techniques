import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_394 = relay.var("var_394", dtype = "bool", shape = (7, 12, 6))#candidate|394|(7, 12, 6)|var|bool
var_395 = relay.var("var_395", dtype = "bool", shape = (7, 12, 6))#candidate|395|(7, 12, 6)|var|bool
bop_396 = relay.logical_or(var_394.astype('bool'), relay.reshape(var_395.astype('bool'), relay.shape_of(var_394))) # shape=(7, 12, 6)
output = relay.Tuple([bop_396,])
output2 = relay.Tuple([bop_396,])
func_411 = relay.Function([var_394,var_395,], output)
mod['func_411'] = func_411
mod = relay.transform.InferType()(mod)
var_412 = relay.var("var_412", dtype = "bool", shape = (7, 12, 6))#candidate|412|(7, 12, 6)|var|bool
var_413 = relay.var("var_413", dtype = "bool", shape = (7, 12, 6))#candidate|413|(7, 12, 6)|var|bool
output = func_411(var_412,var_413,)
func_414 = relay.Function([var_412,var_413,], output)
mutated_mod['func_414'] = func_414
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1546 = relay.var("var_1546", dtype = "float32", shape = (1, 9, 6))#candidate|1546|(1, 9, 6)|var|float32
uop_1547 = relay.atanh(var_1546.astype('float32')) # shape=(1, 9, 6)
const_1550 = relay.const([[[-4.859905,7.027136,-1.873009,-8.540096,-6.731961,-6.790819],[8.531361,-4.757887,4.444804,-7.754384,-6.354933,-1.645082],[1.009009,0.065935,-6.335777,9.616234,1.156199,-8.441726],[-2.796127,-2.939720,-1.450119,4.033205,-6.864307,-5.546543],[-8.761964,5.007152,-5.173647,8.419171,-4.585970,1.556447],[0.950264,1.261213,8.463862,-6.537607,-7.667370,-6.087257],[0.239287,-4.108964,0.399744,7.260148,0.464019,-3.647270],[-4.593167,-5.175650,-0.551587,-4.001572,-9.385519,1.865413],[4.932382,3.176193,-0.337830,-8.759758,7.502618,-9.649933]],[[-6.397568,-3.192771,-1.367073,5.676167,-7.450811,5.385423],[8.046296,8.404369,4.820229,3.821780,-2.753864,-5.510928],[-5.794994,8.958250,-7.720235,-7.455139,8.932058,-3.595230],[8.487857,3.968918,4.128769,9.970545,-1.190307,-4.668055],[3.369128,-3.387184,5.857081,-0.293561,-3.919442,4.950680],[8.144298,9.629536,3.507952,3.355317,3.027835,-8.845060],[9.065205,8.311094,-6.947248,-8.986375,7.219694,-3.899446],[3.567009,-4.410910,-2.995556,-1.865956,6.487220,-3.689677],[-6.355183,1.063237,-3.604782,-9.130314,5.975445,9.364526]],[[-5.832063,2.803133,0.402983,-3.200932,8.137120,-9.704029],[-0.931507,5.146047,-8.460840,-3.112121,6.923005,-0.810421],[-9.979328,-9.811608,-1.666456,4.479423,6.740135,-1.324375],[-1.617127,4.175463,2.231727,7.192874,5.592166,8.148008],[7.856318,-6.135141,7.074677,-5.799360,2.914625,-6.741378],[2.258124,-9.683242,-0.393084,9.310438,3.324817,-2.125643],[-5.490226,9.664390,7.119903,4.207487,-2.532290,9.603754],[-8.108224,1.768797,-7.548905,4.298750,-9.184996,-8.461484],[-2.946557,2.991766,7.388227,-2.212464,-7.064413,6.000150]],[[-1.904245,-5.181690,-1.369241,-7.428509,8.610154,-0.778304],[2.351907,4.396161,-5.925917,0.965824,4.358476,-2.364207],[-8.192602,-3.412300,-4.747537,-2.476217,-7.187255,-5.119138],[5.314894,6.468312,-6.716562,-6.703255,3.018217,0.858360],[-3.501737,-6.362448,-4.330498,-6.109196,6.693291,2.970405],[-9.864003,-6.033235,-4.761094,5.865615,-8.778676,-3.095179],[-3.678503,-1.012912,5.072095,8.911461,-1.555795,5.680065],[3.573280,-0.826163,4.848855,-3.463466,6.078750,-0.048427],[8.795938,8.379213,5.429778,0.916680,9.978682,6.725435]],[[4.628918,-9.357161,8.874656,-3.594508,0.391398,8.918142],[-1.572051,-4.080754,4.857052,1.633210,-5.867115,-3.556737],[2.037119,0.058244,0.606888,2.254077,-7.482601,5.176011],[2.595601,-2.902611,-5.240799,4.074711,1.544665,-6.953383],[8.949501,-2.004990,6.878805,9.383688,-6.016791,5.251897],[9.640263,-5.073370,-7.476668,1.925854,-8.827962,-4.218421],[-7.844247,6.811467,4.303428,-1.399517,-9.972290,-3.505111],[2.069228,-2.307479,-3.552351,6.430209,-9.270003,9.560429],[6.849199,-3.405321,-4.924978,-4.736687,4.820383,6.672456]],[[-3.922923,0.530560,-6.661199,-0.789289,0.894869,4.294387],[-4.999822,0.956454,-5.015062,1.908387,-2.778275,7.267889],[-4.135074,2.569061,-1.675389,-9.384031,-6.365559,4.296855],[1.577542,-0.219203,-0.528422,-8.640826,-4.525901,2.619380],[5.217240,6.733917,-1.486738,-0.771178,-3.437959,-1.840233],[-3.874941,4.321678,-1.841353,6.954916,-5.477155,-7.009773],[4.952181,8.952426,3.407243,7.006562,1.595820,-3.798519],[9.221928,-9.306686,-6.101322,-1.390023,8.269135,9.043445],[-1.078777,3.270614,-2.603277,1.675038,3.616911,6.799384]],[[6.657861,7.974172,9.810512,6.910054,-2.544028,0.399741],[-3.821250,-2.797755,5.923347,-0.253358,-1.124072,8.309432],[2.700798,2.474444,2.613264,9.944193,0.757937,-2.844452],[-2.489280,6.570148,4.718514,4.500843,1.005239,-2.920547],[3.907153,-0.068450,-7.733679,-0.128167,1.121372,-7.213263],[5.829093,2.127304,-3.024165,2.411580,9.878650,-7.973964],[1.551368,7.875746,6.474530,-5.885867,-1.430967,-5.111114],[-7.180031,-9.454650,-3.898516,-5.123402,7.809350,-2.661765],[6.892772,-5.270434,8.425025,-3.785013,9.790993,4.020194]],[[2.501478,1.181723,-4.233573,-9.816305,1.977725,-0.215458],[-4.071170,9.232045,0.461942,0.804289,7.100941,6.845222],[-4.417344,-4.275708,2.318826,-0.883955,5.970401,-8.066846],[-5.097249,-9.458250,-5.201157,7.223250,0.431972,-0.422860],[8.048513,-3.077804,4.907291,3.413107,7.975021,5.587968],[2.275179,0.581360,-3.391806,-7.948354,-4.940558,-8.332245],[-5.236680,5.117425,-0.275069,-0.759696,-9.401396,-3.124869],[-4.500516,1.261339,6.883747,8.954876,7.095733,3.433807],[-5.508173,-2.285667,-0.740110,7.735927,-7.871989,4.439297]],[[-2.988472,-3.836162,-9.959302,6.867679,-8.351609,-5.544096],[3.120959,-7.210449,-0.353009,-4.355614,-3.102428,7.490466],[5.832321,0.437221,-8.483252,-1.180627,-0.814087,3.215675],[-2.150454,7.742189,8.794156,-1.711416,8.982756,1.209717],[3.889088,0.387501,-1.814460,-5.762067,8.915829,-3.410817],[-2.919673,7.319325,8.359505,3.517851,2.101322,5.918610],[-7.567141,1.704526,-5.256281,3.199465,0.064597,8.759733],[-7.587461,9.532694,7.745211,7.440990,6.688669,-9.750228],[0.758511,-7.954293,7.499540,9.593009,8.056545,0.448258]],[[-1.467942,3.032031,5.875131,6.242525,2.489657,-4.946183],[-9.574299,-2.146894,-6.666296,8.770714,2.025346,-3.927028],[7.095644,-5.727477,-2.312874,-1.596272,5.113781,-8.340387],[4.414363,-5.894072,9.816780,6.818964,-0.318759,6.353814],[9.095764,-5.023693,-7.850416,9.429958,-3.312300,-8.512801],[9.374298,2.729946,9.880866,-0.483206,-6.133671,5.820396],[9.367176,3.579498,-3.691684,-6.138469,6.400992,-0.450414],[2.018914,5.311017,-1.100774,-3.282979,0.066438,-6.769827],[-1.321195,0.214768,0.571297,-0.264196,0.646537,-1.435778]],[[-8.540612,0.146051,6.212450,2.988691,7.332686,-3.812942],[-9.698908,-1.603049,4.700057,-5.023019,6.088548,-9.464297],[-3.925034,5.544479,-3.763937,-4.060652,-5.621961,1.697605],[4.813762,-4.542765,3.482980,-6.947041,1.049149,3.783454],[8.646319,-4.485614,9.060102,4.620504,8.325661,-6.606018],[-6.492330,-0.259697,-5.305895,-0.342610,-1.131901,1.998998],[-2.052788,-9.500630,-3.761669,-4.658808,9.599789,-4.746436],[5.652011,7.816469,-3.908948,-2.336191,-8.727164,4.798351],[-3.327697,-7.582977,-7.387844,1.550824,-6.643321,-2.476631]],[[4.600300,-9.725230,-2.247062,-4.137161,2.429896,-3.242742],[4.895791,-8.506556,-3.796551,-1.198710,-6.812659,9.352077],[-8.025445,8.687707,-4.479515,5.049011,-5.125415,3.635092],[-2.471890,-5.648345,3.873744,0.144435,6.298913,-2.357129],[2.171449,8.678936,5.924374,-2.584632,4.881473,-8.979403],[-9.401397,5.796730,-3.508146,2.717829,-4.865184,-1.473272],[-7.643912,-9.123622,9.742779,3.806223,-5.704643,-1.523604],[-8.812508,2.625125,-0.747642,9.701033,-4.955082,5.690786],[9.451099,4.675018,-4.248569,3.034462,-4.802279,0.360664]]], dtype = "float32")#candidate|1550|(12, 9, 6)|const|float32
bop_1551 = relay.greater_equal(var_1546.astype('bool'), const_1550.astype('bool')) # shape=(12, 9, 6)
bop_1559 = relay.bitwise_xor(uop_1547.astype('uint32'), relay.reshape(var_1546.astype('uint32'), relay.shape_of(uop_1547))) # shape=(1, 9, 6)
func_411_call = mod.get_global_var('func_411')
func_414_call = mutated_mod.get_global_var('func_414')
var_1564 = relay.var("var_1564", dtype = "bool", shape = (504,))#candidate|1564|(504,)|var|bool
call_1563 = relay.TupleGetItem(func_411_call(relay.reshape(var_1564.astype('bool'), [7, 12, 6]), relay.reshape(var_1564.astype('bool'), [7, 12, 6]), ), 0)
call_1565 = relay.TupleGetItem(func_414_call(relay.reshape(var_1564.astype('bool'), [7, 12, 6]), relay.reshape(var_1564.astype('bool'), [7, 12, 6]), ), 0)
uop_1576 = relay.exp(uop_1547.astype('float32')) # shape=(1, 9, 6)
output = relay.Tuple([bop_1551,bop_1559,call_1563,var_1564,uop_1576,])
output2 = relay.Tuple([bop_1551,bop_1559,call_1565,var_1564,uop_1576,])
func_1582 = relay.Function([var_1546,var_1564,], output)
mod['func_1582'] = func_1582
mod = relay.transform.InferType()(mod)
var_1583 = relay.var("var_1583", dtype = "float32", shape = (1, 9, 6))#candidate|1583|(1, 9, 6)|var|float32
var_1584 = relay.var("var_1584", dtype = "bool", shape = (504,))#candidate|1584|(504,)|var|bool
output = func_1582(var_1583,var_1584,)
func_1585 = relay.Function([var_1583,var_1584,], output)
mutated_mod['func_1585'] = func_1585
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1625 = relay.const(False, dtype = "bool")#candidate|1625|()|const|bool
var_1626 = relay.var("var_1626", dtype = "bool", shape = (12, 3, 7))#candidate|1626|(12, 3, 7)|var|bool
bop_1627 = relay.logical_and(const_1625.astype('bool'), var_1626.astype('bool')) # shape=(12, 3, 7)
bop_1639 = relay.logical_xor(var_1626.astype('uint8'), relay.reshape(bop_1627.astype('uint8'), relay.shape_of(var_1626))) # shape=(12, 3, 7)
func_411_call = mod.get_global_var('func_411')
func_414_call = mutated_mod.get_global_var('func_414')
var_1656 = relay.var("var_1656", dtype = "bool", shape = (504,))#candidate|1656|(504,)|var|bool
call_1655 = relay.TupleGetItem(func_411_call(relay.reshape(var_1656.astype('bool'), [7, 12, 6]), relay.reshape(var_1656.astype('bool'), [7, 12, 6]), ), 0)
call_1657 = relay.TupleGetItem(func_414_call(relay.reshape(var_1656.astype('bool'), [7, 12, 6]), relay.reshape(var_1656.astype('bool'), [7, 12, 6]), ), 0)
func_1582_call = mod.get_global_var('func_1582')
func_1585_call = mutated_mod.get_global_var('func_1585')
var_1668 = relay.var("var_1668", dtype = "float32", shape = (54,))#candidate|1668|(54,)|var|float32
call_1667 = relay.TupleGetItem(func_1582_call(relay.reshape(var_1668.astype('float32'), [1, 9, 6]), relay.reshape(var_1656.astype('bool'), [504,]), ), 4)
call_1669 = relay.TupleGetItem(func_1585_call(relay.reshape(var_1668.astype('float32'), [1, 9, 6]), relay.reshape(var_1656.astype('bool'), [504,]), ), 4)
bop_1670 = relay.multiply(bop_1627.astype('uint32'), relay.reshape(bop_1639.astype('uint32'), relay.shape_of(bop_1627))) # shape=(12, 3, 7)
output = relay.Tuple([call_1655,var_1656,call_1667,var_1668,bop_1670,])
output2 = relay.Tuple([call_1657,var_1656,call_1669,var_1668,bop_1670,])
func_1674 = relay.Function([var_1626,var_1656,var_1668,], output)
mod['func_1674'] = func_1674
mod = relay.transform.InferType()(mod)
mutated_mod['func_1674'] = func_1674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1674_call = mutated_mod.get_global_var('func_1674')
var_1676 = relay.var("var_1676", dtype = "bool", shape = (12, 3, 7))#candidate|1676|(12, 3, 7)|var|bool
var_1677 = relay.var("var_1677", dtype = "bool", shape = (504,))#candidate|1677|(504,)|var|bool
var_1678 = relay.var("var_1678", dtype = "float32", shape = (54,))#candidate|1678|(54,)|var|float32
call_1675 = func_1674_call(var_1676,var_1677,var_1678,)
output = call_1675
func_1679 = relay.Function([var_1676,var_1677,var_1678,], output)
mutated_mod['func_1679'] = func_1679
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2299 = relay.var("var_2299", dtype = "uint8", shape = (11, 1, 10))#candidate|2299|(11, 1, 10)|var|uint8
var_2300 = relay.var("var_2300", dtype = "uint8", shape = (11, 3, 10))#candidate|2300|(11, 3, 10)|var|uint8
bop_2301 = relay.bitwise_and(var_2299.astype('uint8'), var_2300.astype('uint8')) # shape=(11, 3, 10)
output = bop_2301
output2 = bop_2301
func_2342 = relay.Function([var_2299,var_2300,], output)
mod['func_2342'] = func_2342
mod = relay.transform.InferType()(mod)
mutated_mod['func_2342'] = func_2342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2342_call = mutated_mod.get_global_var('func_2342')
var_2344 = relay.var("var_2344", dtype = "uint8", shape = (11, 1, 10))#candidate|2344|(11, 1, 10)|var|uint8
var_2345 = relay.var("var_2345", dtype = "uint8", shape = (11, 3, 10))#candidate|2345|(11, 3, 10)|var|uint8
call_2343 = func_2342_call(var_2344,var_2345,)
output = call_2343
func_2346 = relay.Function([var_2344,var_2345,], output)
mutated_mod['func_2346'] = func_2346
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2471 = relay.var("var_2471", dtype = "uint32", shape = (2, 5, 10))#candidate|2471|(2, 5, 10)|var|uint32
var_2472 = relay.var("var_2472", dtype = "uint32", shape = (2, 5, 10))#candidate|2472|(2, 5, 10)|var|uint32
bop_2473 = relay.greater(var_2471.astype('bool'), relay.reshape(var_2472.astype('bool'), relay.shape_of(var_2471))) # shape=(2, 5, 10)
uop_2492 = relay.rsqrt(bop_2473.astype('float64')) # shape=(2, 5, 10)
uop_2498 = relay.asinh(uop_2492.astype('float64')) # shape=(2, 5, 10)
func_2342_call = mod.get_global_var('func_2342')
func_2346_call = mutated_mod.get_global_var('func_2346')
const_2512 = relay.const([-9,9,-5,2,-2,-4,7,1,1,3,-7,-8,-1,-9,9,4,-8,4,5,-7,-6,-7,2,-5,10,-6,10,5,-2,-6,6,-1,-2,-8,-10,5,-5,-1,2,9,-5,-3,10,8,2,-4,-3,-3,-9,-1,-5,5,1,-6,-5,7,9,-4,-7,2,4,8,-1,4,1,9,4,-5,-1,9,5,5,-7,-4,9,4,1,5,-4,-2,-4,2,-6,-4,9,4,-1,-9,-7,-3,-8,-2,-2,3,-5,2,7,-9,4,-1,-9,8,-3,10,-1,-8,1,-9,6,10], dtype = "uint8")#candidate|2512|(110,)|const|uint8
var_2513 = relay.var("var_2513", dtype = "uint8", shape = (330,))#candidate|2513|(330,)|var|uint8
call_2511 = func_2342_call(relay.reshape(const_2512.astype('uint8'), [11, 1, 10]), relay.reshape(var_2513.astype('uint8'), [11, 3, 10]), )
call_2514 = func_2342_call(relay.reshape(const_2512.astype('uint8'), [11, 1, 10]), relay.reshape(var_2513.astype('uint8'), [11, 3, 10]), )
var_2515 = relay.var("var_2515", dtype = "float64", shape = (2, 5, 10))#candidate|2515|(2, 5, 10)|var|float64
bop_2516 = relay.mod(uop_2492.astype('float32'), relay.reshape(var_2515.astype('float32'), relay.shape_of(uop_2492))) # shape=(2, 5, 10)
output = relay.Tuple([uop_2498,call_2511,const_2512,var_2513,bop_2516,])
output2 = relay.Tuple([uop_2498,call_2514,const_2512,var_2513,bop_2516,])
func_2522 = relay.Function([var_2471,var_2472,var_2513,var_2515,], output)
mod['func_2522'] = func_2522
mod = relay.transform.InferType()(mod)
mutated_mod['func_2522'] = func_2522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2522_call = mutated_mod.get_global_var('func_2522')
var_2524 = relay.var("var_2524", dtype = "uint32", shape = (2, 5, 10))#candidate|2524|(2, 5, 10)|var|uint32
var_2525 = relay.var("var_2525", dtype = "uint32", shape = (2, 5, 10))#candidate|2525|(2, 5, 10)|var|uint32
var_2526 = relay.var("var_2526", dtype = "uint8", shape = (330,))#candidate|2526|(330,)|var|uint8
var_2527 = relay.var("var_2527", dtype = "float64", shape = (2, 5, 10))#candidate|2527|(2, 5, 10)|var|float64
call_2523 = func_2522_call(var_2524,var_2525,var_2526,var_2527,)
output = call_2523
func_2528 = relay.Function([var_2524,var_2525,var_2526,var_2527,], output)
mutated_mod['func_2528'] = func_2528
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2743 = relay.var("var_2743", dtype = "uint16", shape = ())#candidate|2743|()|var|uint16
var_2744 = relay.var("var_2744", dtype = "uint16", shape = (7, 4, 1))#candidate|2744|(7, 4, 1)|var|uint16
bop_2745 = relay.less(var_2743.astype('bool'), var_2744.astype('bool')) # shape=(7, 4, 1)
func_411_call = mod.get_global_var('func_411')
func_414_call = mutated_mod.get_global_var('func_414')
const_2761 = relay.const([False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False], dtype = "bool")#candidate|2761|(504,)|const|bool
call_2760 = relay.TupleGetItem(func_411_call(relay.reshape(const_2761.astype('bool'), [7, 12, 6]), relay.reshape(const_2761.astype('bool'), [7, 12, 6]), ), 0)
call_2762 = relay.TupleGetItem(func_414_call(relay.reshape(const_2761.astype('bool'), [7, 12, 6]), relay.reshape(const_2761.astype('bool'), [7, 12, 6]), ), 0)
output = relay.Tuple([bop_2745,call_2760,const_2761,])
output2 = relay.Tuple([bop_2745,call_2762,const_2761,])
func_2803 = relay.Function([var_2743,var_2744,], output)
mod['func_2803'] = func_2803
mod = relay.transform.InferType()(mod)
mutated_mod['func_2803'] = func_2803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2803_call = mutated_mod.get_global_var('func_2803')
var_2805 = relay.var("var_2805", dtype = "uint16", shape = ())#candidate|2805|()|var|uint16
var_2806 = relay.var("var_2806", dtype = "uint16", shape = (7, 4, 1))#candidate|2806|(7, 4, 1)|var|uint16
call_2804 = func_2803_call(var_2805,var_2806,)
output = call_2804
func_2807 = relay.Function([var_2805,var_2806,], output)
mutated_mod['func_2807'] = func_2807
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3360 = relay.var("var_3360", dtype = "float32", shape = (6, 8, 8))#candidate|3360|(6, 8, 8)|var|float32
uop_3361 = relay.cosh(var_3360.astype('float32')) # shape=(6, 8, 8)
func_1582_call = mod.get_global_var('func_1582')
func_1585_call = mutated_mod.get_global_var('func_1585')
const_3374 = relay.const([0.356046,8.583703,-7.959308,-9.226510,1.217626,5.493964,2.735236,8.198942,-1.492251,-3.655313,-0.113415,-6.787753,5.269102,-6.950584,-0.598706,3.485187,0.478272,4.988397,6.049695,-2.866237,-9.750762,-6.555339,-1.413581,-2.271457,0.822674,8.762351,-9.377514,-4.563734,7.275434,-1.777932,7.495197,4.086231,7.625716,-9.822518,-1.699752,6.464697,-1.961731,7.578605,5.337574,4.619596,-5.121453,-8.648429,-1.910841,-7.350749,5.212277,-0.391358,5.100699,-4.381263,-8.691398,0.693555,1.956189,4.917916,2.598892,-8.819077], dtype = "float32")#candidate|3374|(54,)|const|float32
var_3375 = relay.var("var_3375", dtype = "bool", shape = (504,))#candidate|3375|(504,)|var|bool
call_3373 = relay.TupleGetItem(func_1582_call(relay.reshape(const_3374.astype('float32'), [1, 9, 6]), relay.reshape(var_3375.astype('bool'), [504,]), ), 2)
call_3376 = relay.TupleGetItem(func_1585_call(relay.reshape(const_3374.astype('float32'), [1, 9, 6]), relay.reshape(var_3375.astype('bool'), [504,]), ), 2)
func_411_call = mod.get_global_var('func_411')
func_414_call = mutated_mod.get_global_var('func_414')
call_3379 = relay.TupleGetItem(func_411_call(relay.reshape(call_3373.astype('bool'), [7, 12, 6]), relay.reshape(var_3375.astype('bool'), [7, 12, 6]), ), 0)
call_3380 = relay.TupleGetItem(func_414_call(relay.reshape(call_3373.astype('bool'), [7, 12, 6]), relay.reshape(var_3375.astype('bool'), [7, 12, 6]), ), 0)
output = relay.Tuple([uop_3361,call_3373,const_3374,var_3375,call_3379,])
output2 = relay.Tuple([uop_3361,call_3376,const_3374,var_3375,call_3380,])
func_3388 = relay.Function([var_3360,var_3375,], output)
mod['func_3388'] = func_3388
mod = relay.transform.InferType()(mod)
var_3389 = relay.var("var_3389", dtype = "float32", shape = (6, 8, 8))#candidate|3389|(6, 8, 8)|var|float32
var_3390 = relay.var("var_3390", dtype = "bool", shape = (504,))#candidate|3390|(504,)|var|bool
output = func_3388(var_3389,var_3390,)
func_3391 = relay.Function([var_3389,var_3390,], output)
mutated_mod['func_3391'] = func_3391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3603 = relay.var("var_3603", dtype = "uint8", shape = (4, 13, 1))#candidate|3603|(4, 13, 1)|var|uint8
var_3604 = relay.var("var_3604", dtype = "uint8", shape = (4, 13, 1))#candidate|3604|(4, 13, 1)|var|uint8
bop_3605 = relay.multiply(var_3603.astype('uint8'), relay.reshape(var_3604.astype('uint8'), relay.shape_of(var_3603))) # shape=(4, 13, 1)
var_3614 = relay.var("var_3614", dtype = "uint8", shape = (4, 13, 12))#candidate|3614|(4, 13, 12)|var|uint8
bop_3615 = relay.floor_mod(var_3604.astype('float64'), var_3614.astype('float64')) # shape=(4, 13, 12)
output = relay.Tuple([bop_3605,bop_3615,])
output2 = relay.Tuple([bop_3605,bop_3615,])
func_3624 = relay.Function([var_3603,var_3604,var_3614,], output)
mod['func_3624'] = func_3624
mod = relay.transform.InferType()(mod)
mutated_mod['func_3624'] = func_3624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3624_call = mutated_mod.get_global_var('func_3624')
var_3626 = relay.var("var_3626", dtype = "uint8", shape = (4, 13, 1))#candidate|3626|(4, 13, 1)|var|uint8
var_3627 = relay.var("var_3627", dtype = "uint8", shape = (4, 13, 1))#candidate|3627|(4, 13, 1)|var|uint8
var_3628 = relay.var("var_3628", dtype = "uint8", shape = (4, 13, 12))#candidate|3628|(4, 13, 12)|var|uint8
call_3625 = func_3624_call(var_3626,var_3627,var_3628,)
output = call_3625
func_3629 = relay.Function([var_3626,var_3627,var_3628,], output)
mutated_mod['func_3629'] = func_3629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3762 = relay.var("var_3762", dtype = "float32", shape = (8, 6, 4))#candidate|3762|(8, 6, 4)|var|float32
uop_3763 = relay.asin(var_3762.astype('float32')) # shape=(8, 6, 4)
var_3771 = relay.var("var_3771", dtype = "float32", shape = (8, 6, 4))#candidate|3771|(8, 6, 4)|var|float32
bop_3772 = relay.maximum(uop_3763.astype('float64'), relay.reshape(var_3771.astype('float64'), relay.shape_of(uop_3763))) # shape=(8, 6, 4)
output = relay.Tuple([bop_3772,])
output2 = relay.Tuple([bop_3772,])
func_3785 = relay.Function([var_3762,var_3771,], output)
mod['func_3785'] = func_3785
mod = relay.transform.InferType()(mod)
mutated_mod['func_3785'] = func_3785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3785_call = mutated_mod.get_global_var('func_3785')
var_3787 = relay.var("var_3787", dtype = "float32", shape = (8, 6, 4))#candidate|3787|(8, 6, 4)|var|float32
var_3788 = relay.var("var_3788", dtype = "float32", shape = (8, 6, 4))#candidate|3788|(8, 6, 4)|var|float32
call_3786 = func_3785_call(var_3787,var_3788,)
output = call_3786
func_3789 = relay.Function([var_3787,var_3788,], output)
mutated_mod['func_3789'] = func_3789
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3865 = relay.const([[[6.013141,-4.978055,-2.983374,3.934758,-3.679517,-2.207700,-5.818745,-9.450885,-2.887406,-0.745263,-4.001723,-4.286898,-7.562562,-8.727388,0.342307],[8.708297,-5.934887,-7.654619,7.880755,7.908828,-7.546960,-4.475308,-9.394759,2.818649,7.621767,4.090372,-2.937990,5.210672,3.754051,-0.451739],[2.903316,4.226570,-1.446565,0.133328,4.280026,9.774517,-7.711276,-3.122964,-1.420694,3.266379,4.977352,-3.801402,2.522236,7.083377,7.885668],[1.796818,4.360155,-5.901517,-9.817202,0.688591,-6.852685,-8.670678,-1.269183,9.979089,-3.423802,4.525760,4.883918,-4.799377,0.380226,-1.060603],[0.721485,-7.058000,-6.515554,-6.137855,-0.137581,4.459106,-9.550537,7.483874,-3.814646,-6.311882,-5.673410,5.951088,3.612929,-1.462162,3.265244],[4.283263,-0.365759,5.646413,3.692835,-6.692128,1.783292,-5.759389,9.858464,0.276312,8.216040,-5.712219,1.432838,0.008186,2.601429,0.613069],[-1.676850,-8.514290,-0.965012,-1.780756,0.919579,3.843020,-7.394446,1.653778,-3.386513,7.093376,-6.297112,0.772097,5.133416,-0.659469,-3.691732],[7.848315,-7.643805,7.768405,1.365989,-8.897366,-6.177034,-6.212919,-9.680882,-3.807692,-9.492595,-4.136438,-0.654874,-5.536604,-9.345849,-8.799791],[-9.462466,-9.757854,7.846510,-5.009983,8.175052,-6.090849,-3.190145,-5.917796,-3.783745,8.863353,-2.580452,2.371313,6.300747,1.707438,-4.518957],[-7.229375,6.630586,0.511667,5.160084,-8.603336,6.060385,-8.826810,9.626007,-1.690377,-5.804717,-9.718135,2.313636,6.183436,8.104148,-8.194776],[-8.065515,-2.769060,5.791579,4.355489,6.910927,8.547702,-4.188207,7.404421,-4.548634,7.577477,7.520631,-7.134419,4.051909,-6.849469,-0.601831],[-8.178640,2.130334,-1.127260,-7.017783,6.809473,1.861624,-9.242662,2.693202,8.360127,0.692472,-2.417000,-1.453672,0.123256,-9.882976,-2.068762],[3.886141,3.376310,-2.657543,7.421999,8.868665,-6.881547,-1.172465,-1.412183,-2.875079,5.566741,-7.289162,3.366376,-3.360272,-4.357959,-2.389190],[3.514572,4.738773,-0.915479,5.918449,0.932548,5.055335,4.759692,-6.029640,0.982280,-4.438034,5.587846,-5.330942,4.037946,7.157501,1.323634],[7.616659,2.507083,3.194420,-1.873572,-7.551187,-5.138086,1.441895,0.923345,3.160005,3.460175,4.589868,4.296349,9.036768,4.930215,-5.197029]],[[-0.639283,8.235583,4.333537,6.304218,6.842175,0.979953,1.386692,-8.260127,-6.062302,7.760704,8.790832,-6.335400,-5.509964,4.644855,8.452951],[-4.607080,4.843380,9.886044,7.779597,-6.589329,-0.751224,-7.362644,5.340901,-9.476909,-1.365454,3.183801,9.852444,-9.170104,1.944624,1.293765],[-3.363464,-0.597357,0.016093,-9.037701,-9.309879,-2.768755,-9.669761,7.896231,2.496768,7.356940,3.716023,0.918449,9.328458,4.040229,0.506756],[9.874877,-0.892654,-3.649126,0.112509,-8.421180,1.120138,0.996652,2.230698,5.325834,-4.811665,3.580820,5.458729,-5.927730,-3.598462,8.678490],[-2.899604,5.293336,-6.141225,2.081609,-4.160212,-5.033548,-1.202710,2.483830,-2.645360,-2.574323,-1.923014,-7.188386,-8.832573,-1.363986,-3.720001],[-9.363442,-2.973239,-4.493744,2.943211,-3.358478,2.724272,-0.687006,-4.206972,-6.417493,-0.450089,-5.904015,-8.797123,9.740262,9.893528,2.320283],[4.737745,2.317497,-7.260624,6.763688,9.464723,2.139537,-2.463560,-2.772627,-7.009534,5.840506,8.781587,2.133918,-5.663715,-6.675464,-1.504408],[-6.933349,2.781692,6.509133,8.283476,-8.321466,-1.158350,1.031744,4.279819,-4.629522,-9.314360,-7.785168,3.261213,1.516097,-4.548638,8.325380],[-3.553773,0.349642,9.154937,5.576716,6.208370,0.859104,1.904314,-1.322161,-5.754944,-3.354333,-5.114830,-0.040069,-2.948166,2.078269,2.327829],[5.602744,-8.889481,-8.583933,3.805528,-1.050061,6.972342,1.569072,7.016002,2.385572,-1.731548,-2.466519,-9.891664,-9.945988,8.779503,-4.568337],[-5.736745,-7.561427,-3.369556,0.805083,-1.145328,-7.450643,5.962720,-7.792593,1.678803,3.448002,-1.229091,-3.997514,-4.145050,0.825495,-1.300457],[7.448079,-4.412153,-6.820262,-4.881883,-4.746369,0.894923,-4.923633,-0.188445,5.227910,-6.817866,7.624965,9.551737,4.657975,-3.243506,7.855560],[-3.829734,-3.908679,-0.073004,0.555443,-9.260853,4.861135,-9.901316,-5.235919,-1.508202,-6.045576,-8.678557,3.560635,6.171412,-1.455211,-5.886189],[5.060063,-7.332418,7.046450,-1.620760,4.811047,-9.788284,-6.468688,-2.654029,-6.121099,3.198473,3.651131,-9.851909,6.357863,2.177258,-9.957859],[0.591910,9.009051,9.228917,-5.099154,9.925153,-0.750085,-3.863410,5.747156,6.535364,7.783985,-0.528282,1.806112,-0.941966,8.945210,-5.637046]],[[0.751967,2.709096,1.652450,3.772490,-8.600341,4.017909,-5.204331,0.381709,-8.200055,7.899136,7.715501,-1.882054,5.879987,4.410872,-8.755770],[-4.770722,6.621687,-9.853400,-7.204954,-2.364140,1.712583,5.155953,2.469818,5.215209,0.475316,-9.292517,-0.776870,8.276287,1.949617,-8.797103],[-1.257971,5.410861,-0.156059,-3.435155,4.896096,7.504695,-8.018077,-5.979559,-7.289623,0.452720,0.669612,-3.483464,-6.374738,6.614019,6.400848],[-3.660767,-6.738410,3.370608,8.661826,3.393967,4.688103,8.539471,8.578944,5.905548,1.891273,3.332610,-1.216394,7.392401,-1.716069,-7.566796],[-4.076373,4.050179,-5.957783,-2.164657,2.386665,-9.078944,-3.731927,-2.902620,-6.254563,7.019932,7.934631,-7.638483,8.706269,-6.588831,-4.887741],[6.195122,7.584890,2.520055,3.938403,-5.619624,2.007276,2.907750,-1.325308,1.729433,-8.933042,8.064099,8.652619,4.005540,9.149905,-2.101228],[0.207695,-0.363062,7.252572,-4.156646,4.157939,4.111668,-4.184057,6.967125,-8.196683,2.360292,6.276559,-4.859148,-5.595764,5.833638,-3.930138],[6.520994,5.915934,-1.042286,3.614265,-2.318329,0.279050,4.145603,-8.688442,4.141872,1.061841,6.876295,5.425012,3.023663,-6.328576,3.120739],[4.161697,-3.993914,-6.480190,6.626694,7.550799,6.880898,3.091660,-0.374637,4.280036,-3.014961,-5.910584,4.308259,-5.286271,3.422313,-7.601742],[4.790308,2.337492,-8.342864,-8.768227,8.768149,5.552343,9.612462,5.451867,3.168236,7.603106,1.209158,1.435270,4.567272,-4.816836,-0.469166],[0.932465,-7.658634,6.135734,-0.008109,-8.071322,-9.257609,-1.566182,-0.146571,0.126664,-3.682940,4.833471,9.832229,2.593194,-5.467934,6.742016],[-2.586519,-1.691351,-9.284081,0.483815,-1.385474,-1.194591,-1.894205,-8.383036,8.022664,-4.479054,-7.508618,2.753725,-3.276910,-0.016532,-8.004120],[-7.765117,-2.897831,1.974710,-3.960278,4.849098,-3.942839,0.024861,8.385423,7.869611,-9.064960,-7.264990,-5.775770,-8.674162,-7.914865,1.254240],[-4.198765,6.170344,4.651857,3.725445,-8.646146,-8.969935,2.532486,3.086110,5.948396,8.543471,-8.975680,-4.473708,5.308350,3.052048,2.589771],[7.962498,-4.077758,-4.965974,7.664057,-4.930478,-0.282032,5.460334,-2.135205,-4.084171,8.903140,4.321886,-6.898350,-7.468282,-9.098106,4.184268]],[[0.372831,-4.162375,-4.770765,9.226127,-1.974487,2.517269,-0.815145,-4.110333,3.520515,-1.300788,-6.801708,-7.834901,3.995559,3.824950,-3.440258],[1.760242,4.467250,-8.263619,-5.999592,2.811267,1.112985,6.550394,3.606952,-1.968757,8.619201,-7.696854,6.548526,-1.630292,0.905284,-4.739008],[-9.510901,1.882218,1.486483,3.557953,3.343950,0.447968,6.054748,-0.804767,-5.916571,5.987660,5.042130,-9.525484,-3.428641,4.843936,-2.039432],[-5.128074,6.826251,-4.389237,0.150246,-2.799598,-2.150273,8.094526,3.989648,5.551340,-0.004333,4.163690,-5.020854,-3.864399,-0.358320,-7.910809],[-5.468690,6.194313,4.052320,-9.583954,-4.493624,9.375845,-9.075013,-5.664228,9.421555,-5.871141,3.489252,5.303607,9.846820,-9.859270,-1.877924],[-1.478463,7.534087,-6.005493,8.610770,0.945526,-1.243893,-2.211558,6.181816,-6.802158,-6.168973,8.755833,-6.224279,2.447759,-7.771007,6.649738],[0.827501,9.377912,1.364725,0.118865,0.127539,-4.615431,8.764604,-2.695832,-4.713484,3.125285,4.368652,-7.805683,-0.681320,1.775336,7.320926],[4.372129,-4.642615,-0.210553,-9.307059,-5.094823,-0.727792,5.027430,-6.512998,9.771177,-7.160979,7.649832,6.354198,4.354728,-7.507656,-6.440199],[4.120510,-2.877953,4.521400,-5.712924,-3.341592,4.146047,4.963239,-0.991213,-1.193194,-3.365315,4.890369,2.162636,7.482240,-7.082157,8.073374],[-8.889294,-8.605762,5.060357,1.711410,6.410338,-9.169072,-6.525334,-9.924461,2.702078,-8.794558,1.696235,-5.671133,-0.355755,-8.144073,2.927651],[-4.684945,-6.628342,-2.773901,-1.533833,0.484898,0.635337,-5.521891,-7.577919,-9.707718,1.378942,0.140276,-8.833256,8.906835,-2.192243,6.677553],[-7.587532,2.726093,-0.817562,-2.930555,5.064433,5.902401,8.750077,-0.702577,-7.100404,-0.737935,-3.501885,-6.038849,2.751315,1.559411,8.897890],[8.931194,-6.025539,3.179812,-7.162930,0.259442,5.644540,-9.860918,-4.870596,-5.718764,2.567835,8.351642,4.251457,1.351624,1.719081,-4.090280],[0.957894,-8.155120,-1.136290,4.870606,3.808305,-9.201846,8.155025,-1.070823,5.787620,-3.887955,1.939862,-4.925028,5.086174,9.885026,7.223278],[-1.164433,8.312271,-7.000797,-7.383036,-9.856153,5.994013,-5.694140,2.860109,-7.904153,-9.830479,4.154194,-2.430131,-5.076626,4.599875,0.451451]],[[8.887150,-4.973484,-5.636649,-5.601018,-7.168520,3.551460,9.208494,-4.890690,-3.971660,0.732433,8.923164,-5.540801,9.004663,1.989889,-6.878660],[6.867120,-7.418285,-0.412698,-7.202355,5.249626,6.917013,-1.609388,8.872686,4.653217,-8.992385,-5.516999,7.127839,6.724261,7.078236,-1.613462],[5.008753,6.225179,1.094493,4.024743,-8.568689,-8.018933,5.133065,-7.406449,9.137431,-3.616117,-3.544590,5.132595,0.509156,-0.699440,5.029611],[-7.733336,-6.194054,3.031662,4.128043,-3.247019,1.139993,4.517416,4.838178,8.090343,3.208221,-1.973437,-0.129320,0.861326,5.927021,-1.153435],[-1.266107,6.706351,-8.793159,-0.306418,6.944035,5.085186,1.118052,1.959556,-2.823141,6.405586,-3.644838,-2.402717,5.551128,-1.086164,1.912233],[-1.548761,2.250944,6.650219,-1.294790,0.785438,-9.926859,-1.858492,1.396796,-8.890214,7.465915,8.968742,-1.259415,-7.313621,-6.378722,-3.402899],[-3.352492,0.013550,-2.894052,2.643798,0.404989,0.633835,-3.433463,8.780162,6.732318,8.997641,-0.924790,2.514405,-1.617503,-7.063691,-1.484288],[0.120553,4.558733,5.717809,6.194893,-3.047936,4.600973,-7.532508,-5.491481,-2.074884,2.362186,-1.562019,-3.961388,-6.412965,5.959434,2.659870],[8.945918,-2.249293,-3.809831,6.214873,3.205847,-9.328082,9.324880,-2.395633,-0.015406,7.748520,-8.366146,7.305082,1.337902,-3.093526,2.944313],[0.746953,-5.322943,3.112984,2.923974,-0.122348,5.650304,2.200545,1.614217,-5.584789,-9.689764,3.478262,7.127417,-8.708571,3.731328,9.423042],[-0.600836,3.204689,4.672780,8.478757,3.554325,4.143314,-2.484437,3.414778,-0.252179,-7.985153,-4.950123,8.241952,-7.040331,-8.333849,-8.751099],[-7.789806,-5.158240,8.933781,4.896240,-8.758868,-1.325009,6.392512,0.887751,-1.714734,-2.106163,-9.107107,9.341597,-1.821042,5.235619,5.167516],[-2.890351,6.848836,7.251045,-0.250470,6.756932,-1.746052,-3.600534,5.022103,-3.061669,1.150433,-3.273580,3.672148,-3.073500,1.120534,5.378440],[5.277878,8.093952,-8.248298,-0.500545,1.003148,-8.435941,6.282754,7.606625,-2.080134,8.026211,-1.936450,7.422340,5.671856,6.059583,-5.819349],[8.021376,-7.945056,-9.199649,1.879256,-9.646840,-7.156138,-6.704401,3.179864,-6.772966,-4.760634,-5.760273,3.729301,-2.603705,8.267617,-4.622977]],[[-1.278479,7.528427,-4.326748,-0.194615,-0.791324,-8.724043,7.992272,6.393042,-0.272311,-6.758413,5.641041,9.264129,-8.877684,9.341996,0.135152],[0.842517,6.531988,-3.524116,-0.434452,2.635758,8.401187,-0.343101,2.602456,-5.452309,2.776150,-5.756689,7.564075,-6.955293,7.334210,7.377743],[3.134388,7.733030,5.947859,-2.599206,-5.371210,0.013937,0.118743,-2.182596,6.522317,-2.620954,9.462083,8.971186,-5.765401,-0.807052,9.553602],[-6.376714,6.725315,4.922203,6.358816,-9.865001,7.686325,-4.391364,8.434878,0.375427,1.376265,-7.841318,-7.306893,2.988992,9.361553,2.405152],[4.648052,8.845388,8.526386,9.526362,-9.322272,-7.516684,4.510257,-1.622306,7.931955,8.130995,5.925372,9.832843,7.454741,-5.623389,-1.601137],[7.129426,1.527751,-3.734667,7.699475,5.701293,-0.638375,-9.006714,-4.011132,-2.585362,-2.538274,-4.033675,0.717594,-7.497898,-3.713281,1.279114],[-2.810378,-4.789942,9.600583,-9.274557,8.660745,-6.157270,9.362401,7.021290,3.161261,9.559205,-1.684525,9.445059,9.157401,-0.315687,-3.231976],[-7.515782,7.435581,-5.830315,-7.458484,1.636153,8.566925,1.055149,-0.952797,-1.394035,-2.277178,-6.861843,-4.368558,6.997984,8.139396,1.947905],[7.535439,-3.051311,2.011786,-9.508719,5.486967,1.203943,1.842889,6.008014,6.009471,-1.704778,2.552997,-0.085122,-6.432986,4.751513,-1.765888],[-3.679702,-2.981451,-7.032453,7.951956,0.733766,-5.169224,1.198810,6.992064,-9.041969,2.305143,5.150711,7.530549,-9.431218,8.988776,1.371360],[-1.183179,6.326675,-5.796192,-9.196191,-8.132594,-1.540571,-8.738784,5.000223,-3.359591,8.716334,-4.420060,-2.282052,-6.999943,1.204828,-0.908445],[0.948122,-9.095677,2.083284,-4.901332,0.433046,-1.049232,-5.179509,4.314974,-0.041519,4.446218,2.006668,-2.109098,1.463448,-1.609726,-8.535588],[8.354475,-5.098625,4.613953,-1.985380,8.608839,-2.061006,7.773631,2.224605,-2.167797,-4.144114,6.786195,5.036070,5.848965,-4.314436,-4.274194],[-6.228877,3.702843,8.722537,-2.069387,-4.993447,7.198143,1.098635,5.990453,-6.177631,4.760623,3.268500,-3.697053,-1.025630,8.633898,-3.206073],[-1.103736,2.083157,7.243839,-1.395525,-6.991490,7.059740,0.174468,-8.734571,8.524681,0.395788,0.991188,4.469534,8.306338,9.523737,4.320132]],[[-6.635023,-2.495140,6.637248,6.003981,-3.068162,-2.965686,9.584825,-5.910568,4.092630,-3.233321,-1.911587,6.196012,-6.758545,-8.922279,-1.876551],[8.538777,9.688440,-5.196206,7.135809,-7.059717,-5.267667,1.698056,-6.466251,4.468429,-6.841804,-1.764181,-6.630702,-5.524555,8.858764,-9.325155],[-5.918928,-8.965500,-2.070145,-3.937111,-6.965343,9.415224,-3.696026,8.743440,-6.646973,-8.495995,-2.289903,-9.558129,-0.519358,2.612624,8.623822],[6.781927,2.166211,3.600570,1.638602,8.943688,-9.694213,-9.211861,-9.854359,8.063248,-7.407885,5.801482,1.971596,1.235822,-1.153462,8.262578],[6.626797,-2.676268,-9.305378,-4.815670,9.045499,-7.250055,-9.225518,-2.128963,-5.853353,2.663531,1.632324,8.810263,-1.391683,0.956604,-4.370852],[-9.426153,2.267185,-8.062786,-5.538908,0.595120,5.642255,2.064143,-4.722728,-0.028553,-3.626607,-3.772234,-2.258372,-9.793896,-4.248412,4.040650],[-2.785017,-1.801677,-7.413121,8.238307,1.621718,1.714905,-4.103284,-5.773044,-8.819138,2.095001,4.611368,8.716051,-8.498080,-0.240022,6.837096],[1.720501,-4.227497,3.854581,-5.076679,5.587058,-5.516580,-4.022809,-3.937839,0.033815,6.881709,9.433640,-5.457210,-0.713397,-2.103472,-1.284447],[8.315377,3.613432,8.559319,-5.657779,5.392035,-0.155958,-6.246179,1.401706,9.425230,-3.506921,0.290429,0.801461,-9.470593,-6.135177,5.049337],[-4.234439,-5.299637,-1.981462,-0.868224,-3.065722,-5.377147,6.661643,2.789208,8.246975,-0.162480,-2.808819,9.798339,0.239571,8.612438,-3.009319],[-8.232141,2.499163,-0.336303,9.823892,1.317801,9.616261,-3.322604,-9.148762,1.731810,-7.189559,4.968503,1.707482,4.530696,-9.112958,4.396920],[6.682912,3.441290,-6.489220,-0.617164,0.551349,0.626728,8.117153,8.325744,-4.387866,-0.098570,-2.879096,5.366547,-6.027909,4.312926,9.314204],[-5.112463,-7.688971,-1.532860,7.096860,-2.867576,-2.224967,0.087489,2.935879,0.307761,1.466926,3.371000,-5.349170,-1.722145,7.783913,5.834361],[-4.665346,0.555597,-3.750696,8.494172,-2.196666,-8.682402,-3.205557,-6.896181,-6.192304,8.829131,2.140213,-7.784254,3.215010,7.415379,-6.419316],[0.008147,-8.191688,4.330430,-7.792920,-4.484056,9.896486,7.196523,6.654198,0.135469,-1.582487,1.824230,5.245397,5.258290,-7.210734,6.837193]],[[0.273866,5.001283,1.550387,-5.063662,-1.954548,-1.047109,0.655345,7.114925,-9.562731,4.004520,0.525909,-6.866710,-0.236684,7.651235,-5.851814],[8.192797,9.102333,1.775642,7.579292,1.063995,2.847810,8.111794,8.153413,5.672539,-1.338806,-6.990213,4.394640,-2.049504,-5.279314,7.031426],[3.097876,0.720022,2.519587,7.133301,-7.828064,-6.457730,0.738193,0.461771,-5.496851,-2.827718,1.552787,-5.351308,9.740562,-1.619197,-1.684522],[8.191542,-4.292722,2.322308,7.583003,-3.593886,0.851419,9.912093,0.460464,0.486989,3.011725,-2.393113,5.712429,-6.911132,7.795302,-8.213708],[-7.051457,7.946901,-9.008329,-0.912500,-8.516457,-5.198294,-9.528044,-9.916434,-2.429838,3.598132,9.391435,-2.882435,2.805875,9.353539,6.276674],[-2.465327,9.698298,-4.059835,-9.976042,-4.477975,8.097326,-9.652323,-4.114151,5.380565,1.456329,2.301455,-6.903415,4.751369,-1.439063,7.957449],[-5.412303,9.058616,2.519685,-0.853717,-8.418266,-9.528642,2.441012,3.220022,8.017075,-0.331246,-4.718069,0.526490,8.245304,-2.768374,-8.531062],[8.438596,1.575687,-8.708911,-6.713011,0.001152,8.851219,-3.808975,-9.618438,5.563594,5.524587,-9.846964,0.319747,-8.713640,-8.505588,-7.274765],[-3.920696,-4.051021,-6.006992,5.666934,6.112354,3.280130,-9.420331,1.970259,-1.424974,6.379373,-4.475220,2.686967,7.618555,-6.456878,-8.987920],[-3.912338,-5.096158,-3.303909,-0.720014,7.032188,-0.204079,-8.242131,-9.242806,-3.415309,-2.912473,-5.984280,8.372405,-5.997597,-7.202546,7.192977],[9.467253,2.532137,-5.512762,-8.494272,4.418117,-0.613277,8.623781,5.203662,-8.203875,-3.515653,7.710519,0.612738,-5.409234,0.367233,-0.397099],[5.171564,6.334776,7.534535,-5.160215,-2.382859,3.068556,-4.732461,3.819609,-4.022748,0.597860,8.054931,-9.210039,3.509660,-3.522935,4.509127],[3.687912,5.248005,1.110740,-7.583244,-6.773368,-8.911161,3.672480,-4.013273,-2.238987,-9.524909,9.867597,-2.711030,-3.756962,-5.570806,-9.378918],[2.423185,-3.769716,-2.210403,3.071524,-0.721950,9.794612,2.960184,3.359630,-6.062709,3.934629,4.494134,-8.712340,-2.546759,4.539423,7.954831],[-0.068957,-9.237343,9.564987,-8.499893,7.161986,8.676540,3.607244,-5.787536,-2.954921,-4.469733,6.372695,7.198233,3.197500,5.337072,-1.480674]],[[1.031776,5.157839,-5.594725,-9.977311,-1.296514,8.765204,0.445450,-0.544659,8.986734,-4.182094,-4.839907,5.070999,6.552553,7.345592,1.980507],[1.460197,-1.887914,-2.565839,-2.868550,-5.920788,6.622033,-5.897712,-4.017569,-0.933314,6.293259,-6.009424,-7.876868,8.487990,-6.133395,-2.223048],[4.438352,-4.933629,6.714813,-1.021251,-8.637174,-4.590579,-6.516391,-6.821239,1.922461,-8.875945,4.945181,5.250524,-5.855456,7.945705,4.512135],[-4.402863,2.686185,4.888547,-9.912115,-2.322769,-7.510185,-7.166577,0.181248,1.329676,7.710449,-6.010928,-4.571070,-8.000225,-4.217261,-2.010154],[-7.829217,-9.482098,6.643013,-4.757171,4.805608,-5.193933,4.515968,-4.201379,0.446762,6.810710,5.091928,1.256131,3.829248,-1.729163,7.624086],[-5.916881,-3.206590,-9.325761,-2.999886,2.170526,4.174581,4.226712,-3.817474,-3.928914,6.714887,-2.188590,5.979536,1.504103,7.820645,-3.050070],[-3.199657,-5.074391,-4.031511,-8.774278,7.477887,-5.963517,-8.128642,9.382971,-2.062536,-9.539012,-2.695001,-3.568676,7.581624,-8.868482,-2.253192],[4.191578,8.210844,1.639373,-5.093895,-4.773668,7.684125,9.975809,-2.846957,-5.969936,-0.033460,6.459573,1.203964,-1.577766,3.524362,7.750319],[8.060564,-7.719406,2.280866,-4.973949,7.061435,3.312170,-5.768201,-9.241763,-5.342184,3.810785,-3.727302,7.366629,-4.888232,-6.385410,-5.347432],[0.685829,-0.139966,8.441122,3.313758,-8.854016,-7.167821,5.955422,-1.359722,-5.929882,-3.297933,7.456241,-3.119675,-6.881315,-6.836646,-3.174817],[5.547194,-0.765034,5.541241,0.196971,-6.807573,7.587357,1.887134,9.364878,7.337974,-4.883523,9.060396,-6.750661,-2.434866,-1.191249,5.448645],[-1.378605,1.696506,-5.428501,-9.608909,4.128745,8.777094,7.100420,-3.802359,-6.195772,-4.632984,7.588423,-5.701343,3.095161,2.368531,9.355930],[-4.162824,1.554578,1.884586,-3.875546,7.936953,-6.278074,6.294381,3.529158,-1.155192,0.608475,1.628758,-1.481291,-8.773773,-7.753850,1.888671],[-3.324039,7.565445,7.799925,0.036239,-8.031838,-7.563624,-3.621324,0.885014,9.526412,9.044932,-1.000567,5.676414,6.820539,5.879844,4.248197],[5.599541,-2.479163,6.992282,1.188532,-7.728094,2.848226,-0.400618,-9.891695,-2.914395,9.936705,-9.475345,-0.727068,-5.773133,0.557555,8.856564]],[[3.243783,-8.977806,-1.575327,4.445296,-1.619900,3.767793,-1.467006,7.078036,0.547755,-4.717604,-3.445281,9.449601,2.690905,-5.114995,6.114510],[8.038965,-8.340813,-5.971838,-0.852635,7.584978,8.657210,-1.300755,-7.919478,-9.005174,0.972091,1.634217,4.453772,-1.959257,-0.083080,0.676011],[4.147832,-9.484024,-9.868326,-4.693569,4.011089,-1.282439,-5.243413,-9.186826,-7.492740,7.801995,-1.492308,2.677688,2.622508,-8.836262,-6.805451],[9.072507,-9.511065,-2.003549,-4.445249,5.091395,-9.140037,6.733817,7.272533,9.949507,-0.224793,1.058965,1.532314,3.784356,0.148075,7.885995],[9.224905,4.571212,-4.623278,6.010055,-4.497834,-7.587487,-4.250857,0.512536,-1.503926,5.687280,0.587406,5.738324,-1.787518,3.445910,-7.461609],[7.116385,7.813529,7.389074,-0.796583,8.153092,-7.585619,6.147687,6.426250,-2.187576,-9.302804,-6.186097,-4.606693,-9.368604,-1.386503,-7.378030],[-5.322215,9.175244,-0.901124,-8.000495,4.858245,6.487864,0.315461,-9.490652,-0.512235,-1.680233,-8.874607,-9.276358,-0.404922,7.158717,5.189265],[4.283892,-1.142177,0.699981,-6.182908,9.473349,3.337377,5.384802,-7.667940,0.476270,-1.466796,1.528170,5.207682,0.720807,-9.079043,-9.152211],[9.498474,-5.000056,-3.319346,-5.076658,2.490306,-3.789909,7.324336,3.932822,6.595497,-9.965923,2.231626,5.996858,9.374953,-6.137829,2.837279],[7.143814,1.655773,-9.616619,-5.148073,-0.162765,8.840796,-1.077560,-5.747676,-4.914470,8.677270,9.572137,-3.455201,2.364829,5.594530,6.799919],[-0.070493,4.745741,-5.164396,-4.593633,3.289702,-2.539231,3.379804,7.739355,2.322825,-3.188147,-6.293027,9.950864,-6.117191,-7.950773,-8.114805],[-2.170345,3.738343,-5.009174,-9.676395,-5.932973,8.350500,-8.064674,1.692846,-1.905105,0.369247,4.799321,-0.624853,-1.723726,1.472812,5.413164],[-6.360833,0.710186,2.874141,-6.526441,-8.098540,6.546591,9.880716,-4.731253,8.937563,6.676775,4.835217,-8.321632,5.248870,-0.650711,-7.371769],[9.879886,-6.319044,-9.890803,-9.252845,2.748559,8.280456,2.609510,-8.609340,5.382542,-8.461035,-5.257557,-3.282973,-7.151990,0.302083,-5.088392],[-2.487183,-2.841481,-5.015603,-9.413524,7.154439,1.155648,3.045063,-2.278499,5.709321,8.779443,-3.696244,2.668523,5.390981,8.659619,9.005804]],[[-3.055440,6.531467,-4.370322,8.373056,-8.143944,-1.570255,2.246339,-4.349444,3.776234,9.882618,-2.745197,-3.794960,-7.256799,0.750057,-3.291166],[-7.022060,-8.880102,5.554406,1.611427,2.567230,-3.240841,-5.398667,2.652929,3.944504,-2.802132,-5.894184,-8.937078,-7.720897,-5.604171,-5.127278],[-1.581469,0.312866,-8.738529,1.328709,4.375242,-5.204922,-9.009455,1.300568,9.231465,-4.088943,5.355434,-0.297895,0.017108,3.951363,-1.836139],[-8.169281,-2.424824,7.570073,8.111942,-8.840878,-9.214365,-5.139507,8.760276,-5.265276,-8.915725,-3.305967,9.484788,0.526511,-5.198845,-6.336479],[4.861705,6.404887,-6.081472,-1.409196,-8.892951,-9.755032,7.267449,6.463732,-5.743772,-5.143852,6.684869,8.278047,1.414885,0.393872,5.969956],[2.693995,3.398880,-2.213899,2.762486,7.976911,6.544153,-8.535829,-0.315153,-1.805813,-7.987843,6.999845,2.869208,-2.706441,6.631810,-5.918446],[-5.341830,7.541410,2.557095,7.128934,1.524880,-9.956912,0.703433,1.511542,-3.634966,-2.930267,-4.924045,-8.031520,-8.712317,8.876847,3.104015],[-0.365753,5.192874,4.651376,0.376535,1.508845,4.369346,-6.956365,4.657221,-3.217864,8.185302,-5.871682,-9.979877,9.470101,4.118073,-4.795572],[3.221808,-3.023079,0.784455,6.985444,1.992348,9.338186,-0.814315,4.015341,6.370151,3.790444,-3.604932,7.233270,6.904690,-2.810757,6.755760],[4.302445,2.508993,7.545417,7.781195,-9.047247,5.460352,4.890691,3.871607,3.105802,-7.642583,7.880948,-7.501906,8.313048,4.296059,7.819703],[-7.858746,2.976742,-2.401651,-4.267143,5.060864,-8.582899,-0.420100,-0.472107,-1.862189,2.443541,2.314450,-1.421892,9.033420,6.862714,9.431277],[4.094529,2.673247,1.947660,9.898965,4.012555,-6.931174,8.528342,4.919270,-5.449848,-9.052617,-0.609000,-4.411434,8.344707,-2.791025,8.054953],[2.169769,5.917845,3.656332,1.051550,3.174215,-0.238013,-6.945895,-3.025955,6.283322,-6.444729,-1.859095,0.974938,1.662161,-8.762289,7.129623],[2.413110,-2.089426,2.708873,0.163158,-9.381132,1.455306,3.044327,7.136356,4.902781,-5.439509,-9.887375,-4.858606,-6.417949,-2.614606,5.222354],[-1.434789,1.487664,-3.860325,-7.745319,3.417620,-4.412349,5.704221,-1.013813,4.776347,-0.491563,1.445022,2.175662,-3.759535,2.399546,-5.500791]]], dtype = "float32")#candidate|3865|(11, 15, 15)|const|float32
uop_3866 = relay.erf(const_3865.astype('float32')) # shape=(11, 15, 15)
output = relay.Tuple([uop_3866,])
output2 = relay.Tuple([uop_3866,])
func_3892 = relay.Function([], output)
mod['func_3892'] = func_3892
mod = relay.transform.InferType()(mod)
output = func_3892()
func_3893 = relay.Function([], output)
mutated_mod['func_3893'] = func_3893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3892_call = mod.get_global_var('func_3892')
func_3893_call = mutated_mod.get_global_var('func_3893')
call_3902 = relay.TupleGetItem(func_3892_call(), 0)
call_3903 = relay.TupleGetItem(func_3893_call(), 0)
output = relay.Tuple([call_3902,])
output2 = relay.Tuple([call_3903,])
func_3909 = relay.Function([], output)
mod['func_3909'] = func_3909
mod = relay.transform.InferType()(mod)
output = func_3909()
func_3910 = relay.Function([], output)
mutated_mod['func_3910'] = func_3910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3892_call = mod.get_global_var('func_3892')
func_3893_call = mutated_mod.get_global_var('func_3893')
call_3919 = relay.TupleGetItem(func_3892_call(), 0)
call_3920 = relay.TupleGetItem(func_3893_call(), 0)
output = relay.Tuple([call_3919,])
output2 = relay.Tuple([call_3920,])
func_3924 = relay.Function([], output)
mod['func_3924'] = func_3924
mod = relay.transform.InferType()(mod)
output = func_3924()
func_3925 = relay.Function([], output)
mutated_mod['func_3925'] = func_3925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3892_call = mod.get_global_var('func_3892')
func_3893_call = mutated_mod.get_global_var('func_3893')
call_3929 = relay.TupleGetItem(func_3892_call(), 0)
call_3930 = relay.TupleGetItem(func_3893_call(), 0)
output = call_3929
output2 = call_3930
func_3932 = relay.Function([], output)
mod['func_3932'] = func_3932
mod = relay.transform.InferType()(mod)
mutated_mod['func_3932'] = func_3932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3932_call = mutated_mod.get_global_var('func_3932')
call_3933 = func_3932_call()
output = call_3933
func_3934 = relay.Function([], output)
mutated_mod['func_3934'] = func_3934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3932_call = mod.get_global_var('func_3932')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_3976 = func_3932_call()
call_3977 = func_3932_call()
var_3991 = relay.var("var_3991", dtype = "float32", shape = (11, 15, 15))#candidate|3991|(11, 15, 15)|var|float32
bop_3992 = relay.greater(call_3976.astype('bool'), relay.reshape(var_3991.astype('bool'), relay.shape_of(call_3976))) # shape=(11, 15, 15)
bop_3995 = relay.greater(call_3977.astype('bool'), relay.reshape(var_3991.astype('bool'), relay.shape_of(call_3977))) # shape=(11, 15, 15)
var_4001 = relay.var("var_4001", dtype = "bool", shape = (11, 15, 15))#candidate|4001|(11, 15, 15)|var|bool
bop_4002 = relay.floor_mod(bop_3992.astype('float32'), relay.reshape(var_4001.astype('float32'), relay.shape_of(bop_3992))) # shape=(11, 15, 15)
bop_4005 = relay.floor_mod(bop_3995.astype('float32'), relay.reshape(var_4001.astype('float32'), relay.shape_of(bop_3995))) # shape=(11, 15, 15)
func_3624_call = mod.get_global_var('func_3624')
func_3629_call = mutated_mod.get_global_var('func_3629')
const_4010 = relay.const([-4,-8,5,-8,-9,5,8,3,-3,-9,-4,8,-3,-5,4,7,2,-3,-7,2,-9,-3,10,-10,2,-7,-10,2,3,2,-9,7,6,8,4,-1,-8,10,2,-1,1,1,-1,7,-10,3,-7,9,-2,-9,9,-7], dtype = "uint8")#candidate|4010|(52,)|const|uint8
var_4011 = relay.var("var_4011", dtype = "uint8", shape = (624,))#candidate|4011|(624,)|var|uint8
call_4009 = relay.TupleGetItem(func_3624_call(relay.reshape(const_4010.astype('uint8'), [4, 13, 1]), relay.reshape(const_4010.astype('uint8'), [4, 13, 1]), relay.reshape(var_4011.astype('uint8'), [4, 13, 12]), ), 0)
call_4012 = relay.TupleGetItem(func_3629_call(relay.reshape(const_4010.astype('uint8'), [4, 13, 1]), relay.reshape(const_4010.astype('uint8'), [4, 13, 1]), relay.reshape(var_4011.astype('uint8'), [4, 13, 12]), ), 0)
func_411_call = mod.get_global_var('func_411')
func_414_call = mutated_mod.get_global_var('func_414')
var_4019 = relay.var("var_4019", dtype = "bool", shape = (504,))#candidate|4019|(504,)|var|bool
call_4018 = relay.TupleGetItem(func_411_call(relay.reshape(var_4019.astype('bool'), [7, 12, 6]), relay.reshape(var_4019.astype('bool'), [7, 12, 6]), ), 0)
call_4020 = relay.TupleGetItem(func_414_call(relay.reshape(var_4019.astype('bool'), [7, 12, 6]), relay.reshape(var_4019.astype('bool'), [7, 12, 6]), ), 0)
output = relay.Tuple([bop_4002,call_4009,const_4010,var_4011,call_4018,var_4019,])
output2 = relay.Tuple([bop_4005,call_4012,const_4010,var_4011,call_4020,var_4019,])
func_4029 = relay.Function([var_3991,var_4001,var_4011,var_4019,], output)
mod['func_4029'] = func_4029
mod = relay.transform.InferType()(mod)
mutated_mod['func_4029'] = func_4029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4029_call = mutated_mod.get_global_var('func_4029')
var_4031 = relay.var("var_4031", dtype = "float32", shape = (11, 15, 15))#candidate|4031|(11, 15, 15)|var|float32
var_4032 = relay.var("var_4032", dtype = "bool", shape = (11, 15, 15))#candidate|4032|(11, 15, 15)|var|bool
var_4033 = relay.var("var_4033", dtype = "uint8", shape = (624,))#candidate|4033|(624,)|var|uint8
var_4034 = relay.var("var_4034", dtype = "bool", shape = (504,))#candidate|4034|(504,)|var|bool
call_4030 = func_4029_call(var_4031,var_4032,var_4033,var_4034,)
output = call_4030
func_4035 = relay.Function([var_4031,var_4032,var_4033,var_4034,], output)
mutated_mod['func_4035'] = func_4035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mod.get_global_var('func_3924')
func_3925_call = mutated_mod.get_global_var('func_3925')
call_4082 = relay.TupleGetItem(func_3924_call(), 0)
call_4083 = relay.TupleGetItem(func_3925_call(), 0)
func_3909_call = mod.get_global_var('func_3909')
func_3910_call = mutated_mod.get_global_var('func_3910')
call_4091 = relay.TupleGetItem(func_3909_call(), 0)
call_4092 = relay.TupleGetItem(func_3910_call(), 0)
output = relay.Tuple([call_4082,call_4091,])
output2 = relay.Tuple([call_4083,call_4092,])
func_4093 = relay.Function([], output)
mod['func_4093'] = func_4093
mod = relay.transform.InferType()(mod)
output = func_4093()
func_4094 = relay.Function([], output)
mutated_mod['func_4094'] = func_4094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3892_call = mod.get_global_var('func_3892')
func_3893_call = mutated_mod.get_global_var('func_3893')
call_4155 = relay.TupleGetItem(func_3892_call(), 0)
call_4156 = relay.TupleGetItem(func_3893_call(), 0)
output = call_4155
output2 = call_4156
func_4158 = relay.Function([], output)
mod['func_4158'] = func_4158
mod = relay.transform.InferType()(mod)
mutated_mod['func_4158'] = func_4158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4158_call = mutated_mod.get_global_var('func_4158')
call_4159 = func_4158_call()
output = call_4159
func_4160 = relay.Function([], output)
mutated_mod['func_4160'] = func_4160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3909_call = mod.get_global_var('func_3909')
func_3910_call = mutated_mod.get_global_var('func_3910')
call_4163 = relay.TupleGetItem(func_3909_call(), 0)
call_4164 = relay.TupleGetItem(func_3910_call(), 0)
uop_4165 = relay.log(call_4163.astype('float64')) # shape=(11, 15, 15)
uop_4167 = relay.log(call_4164.astype('float64')) # shape=(11, 15, 15)
output = relay.Tuple([uop_4165,])
output2 = relay.Tuple([uop_4167,])
func_4175 = relay.Function([], output)
mod['func_4175'] = func_4175
mod = relay.transform.InferType()(mod)
output = func_4175()
func_4176 = relay.Function([], output)
mutated_mod['func_4176'] = func_4176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_4273 = relay.TupleGetItem(func_4175_call(), 0)
call_4274 = relay.TupleGetItem(func_4176_call(), 0)
uop_4281 = relay.sigmoid(call_4273.astype('float32')) # shape=(11, 15, 15)
uop_4283 = relay.sigmoid(call_4274.astype('float32')) # shape=(11, 15, 15)
output = relay.Tuple([uop_4281,])
output2 = relay.Tuple([uop_4283,])
func_4287 = relay.Function([], output)
mod['func_4287'] = func_4287
mod = relay.transform.InferType()(mod)
mutated_mod['func_4287'] = func_4287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4287_call = mutated_mod.get_global_var('func_4287')
call_4288 = func_4287_call()
output = call_4288
func_4289 = relay.Function([], output)
mutated_mod['func_4289'] = func_4289
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4339 = relay.var("var_4339", dtype = "int8", shape = ())#candidate|4339|()|var|int8
var_4340 = relay.var("var_4340", dtype = "int8", shape = (16, 10, 12))#candidate|4340|(16, 10, 12)|var|int8
bop_4341 = relay.less(var_4339.astype('bool'), var_4340.astype('bool')) # shape=(16, 10, 12)
func_3892_call = mod.get_global_var('func_3892')
func_3893_call = mutated_mod.get_global_var('func_3893')
call_4345 = relay.TupleGetItem(func_3892_call(), 0)
call_4346 = relay.TupleGetItem(func_3893_call(), 0)
func_3624_call = mod.get_global_var('func_3624')
func_3629_call = mutated_mod.get_global_var('func_3629')
const_4362 = relay.const([[7,9,2,1],[1,-3,-4,10],[1,10,6,6],[1,3,-3,3],[2,7,9,7],[-8,2,-3,1],[-6,7,-3,6],[-8,5,9,3],[-9,3,-8,8],[3,7,-4,-9],[1,2,2,-9],[-6,2,-2,7],[3,9,-2,-7]], dtype = "uint8")#candidate|4362|(13, 4)|const|uint8
var_4363 = relay.var("var_4363", dtype = "uint8", shape = (624,))#candidate|4363|(624,)|var|uint8
call_4361 = relay.TupleGetItem(func_3624_call(relay.reshape(const_4362.astype('uint8'), [4, 13, 1]), relay.reshape(const_4362.astype('uint8'), [4, 13, 1]), relay.reshape(var_4363.astype('uint8'), [4, 13, 12]), ), 0)
call_4364 = relay.TupleGetItem(func_3629_call(relay.reshape(const_4362.astype('uint8'), [4, 13, 1]), relay.reshape(const_4362.astype('uint8'), [4, 13, 1]), relay.reshape(var_4363.astype('uint8'), [4, 13, 12]), ), 0)
output = relay.Tuple([bop_4341,call_4345,call_4361,const_4362,var_4363,])
output2 = relay.Tuple([bop_4341,call_4346,call_4364,const_4362,var_4363,])
func_4365 = relay.Function([var_4339,var_4340,var_4363,], output)
mod['func_4365'] = func_4365
mod = relay.transform.InferType()(mod)
mutated_mod['func_4365'] = func_4365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4365_call = mutated_mod.get_global_var('func_4365')
var_4367 = relay.var("var_4367", dtype = "int8", shape = ())#candidate|4367|()|var|int8
var_4368 = relay.var("var_4368", dtype = "int8", shape = (16, 10, 12))#candidate|4368|(16, 10, 12)|var|int8
var_4369 = relay.var("var_4369", dtype = "uint8", shape = (624,))#candidate|4369|(624,)|var|uint8
call_4366 = func_4365_call(var_4367,var_4368,var_4369,)
output = call_4366
func_4370 = relay.Function([var_4367,var_4368,var_4369,], output)
mutated_mod['func_4370'] = func_4370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4158_call = mod.get_global_var('func_4158')
func_4160_call = mutated_mod.get_global_var('func_4160')
call_4501 = func_4158_call()
call_4502 = func_4158_call()
output = relay.Tuple([call_4501,])
output2 = relay.Tuple([call_4502,])
func_4505 = relay.Function([], output)
mod['func_4505'] = func_4505
mod = relay.transform.InferType()(mod)
mutated_mod['func_4505'] = func_4505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4505_call = mutated_mod.get_global_var('func_4505')
call_4506 = func_4505_call()
output = call_4506
func_4507 = relay.Function([], output)
mutated_mod['func_4507'] = func_4507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mod.get_global_var('func_3924')
func_3925_call = mutated_mod.get_global_var('func_3925')
call_4516 = relay.TupleGetItem(func_3924_call(), 0)
call_4517 = relay.TupleGetItem(func_3925_call(), 0)
uop_4552 = relay.asinh(call_4516.astype('float64')) # shape=(11, 15, 15)
uop_4554 = relay.asinh(call_4517.astype('float64')) # shape=(11, 15, 15)
uop_4562 = relay.sqrt(call_4516.astype('float64')) # shape=(11, 15, 15)
uop_4564 = relay.sqrt(call_4517.astype('float64')) # shape=(11, 15, 15)
uop_4565 = relay.exp(uop_4562.astype('float64')) # shape=(11, 15, 15)
uop_4567 = relay.exp(uop_4564.astype('float64')) # shape=(11, 15, 15)
func_3932_call = mod.get_global_var('func_3932')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_4580 = func_3932_call()
call_4581 = func_3932_call()
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_4584 = relay.TupleGetItem(func_4175_call(), 0)
call_4585 = relay.TupleGetItem(func_4176_call(), 0)
func_3785_call = mod.get_global_var('func_3785')
func_3789_call = mutated_mod.get_global_var('func_3789')
const_4593 = relay.const([5.568461,-5.798579,7.839158,-7.728081,4.025006,-3.099986,5.791188,1.727069,9.399196,-3.319663,-9.162956,9.101650,0.548667,-4.029115,8.248129,-0.944411,-4.467915,-3.502175,2.846874,6.349788,9.085640,8.112410,-1.084894,-6.868564,-3.844550,-9.904412,-9.708642,-6.105540,0.992745,1.925064,-8.507441,0.526945,-9.475690,-0.430879,-3.365536,-3.907011,7.747513,-2.220224,4.306240,4.354882,0.685274,-2.215228,5.934109,2.338638,9.587706,2.201796,-8.803866,-4.899989,-5.218261,-2.282898,-7.901486,-7.886182,-5.233410,6.708477,8.199775,9.582144,5.482443,1.616838,3.281339,5.625431,1.337519,-6.598177,7.208724,-7.846571,5.492275,-0.687818,-4.250047,0.365485,1.502229,-9.186230,6.036510,3.617367,0.918417,4.025899,4.781116,5.753473,6.593065,-0.292081,-6.971441,-7.515446,3.878338,-2.367631,1.286636,-4.230204,-6.786432,-7.773016,5.865418,-1.888690,-4.296910,1.884566,-6.567051,-0.150440,-3.189271,-4.199437,0.542487,-8.739309,3.856324,-0.209040,-9.612895,5.497514,6.058483,-6.633980,1.965392,0.440938,-7.755068,8.589121,6.879430,-5.106754,-4.811191,0.204826,8.757739,-5.300109,-2.136262,5.238428,-7.908835,6.763118,-8.153982,-6.161396,1.064429,6.989943,-5.125482,-0.936592,-5.351614,8.455084,-0.076601,8.605414,-0.964038,-7.817652,-4.592210,4.146837,0.526360,2.459184,-7.978202,1.368081,7.234038,5.143849,-6.362725,-4.090593,-5.715020,9.451970,-3.486679,-8.523990,5.107479,5.873482,-4.891927,-8.287270,1.159159,-7.314260,6.635900,8.908212,-9.778837,-3.014810,9.031866,-7.812468,-4.462028,-9.524718,-9.637925,0.626518,2.617359,3.372997,5.822147,3.561006,0.867649,-2.138304,-8.047284,-4.361427,-9.951875,8.949673,3.200980,8.059528,7.422902,-3.714433,-5.358229,6.202950,-7.986777,2.201746,-4.682359,-0.205854,-1.845865,-2.237926,3.136561,-5.171840,3.331982,5.379386,3.691821,-4.711602,-0.899083,-2.974287,-3.491751,-5.115166,-0.341949,-8.273056], dtype = "float32")#candidate|4593|(192,)|const|float32
call_4592 = relay.TupleGetItem(func_3785_call(relay.reshape(const_4593.astype('float32'), [8, 6, 4]), relay.reshape(const_4593.astype('float32'), [8, 6, 4]), ), 0)
call_4594 = relay.TupleGetItem(func_3789_call(relay.reshape(const_4593.astype('float32'), [8, 6, 4]), relay.reshape(const_4593.astype('float32'), [8, 6, 4]), ), 0)
func_1582_call = mod.get_global_var('func_1582')
func_1585_call = mutated_mod.get_global_var('func_1585')
var_4608 = relay.var("var_4608", dtype = "float32", shape = (54,))#candidate|4608|(54,)|var|float32
const_4609 = relay.const([True,False,True,False,True,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,True,False,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,True,False,False], dtype = "bool")#candidate|4609|(504,)|const|bool
call_4607 = relay.TupleGetItem(func_1582_call(relay.reshape(var_4608.astype('float32'), [1, 9, 6]), relay.reshape(const_4609.astype('bool'), [504,]), ), 3)
call_4610 = relay.TupleGetItem(func_1585_call(relay.reshape(var_4608.astype('float32'), [1, 9, 6]), relay.reshape(const_4609.astype('bool'), [504,]), ), 3)
output = relay.Tuple([uop_4552,uop_4565,call_4580,call_4584,call_4592,const_4593,call_4607,var_4608,const_4609,])
output2 = relay.Tuple([uop_4554,uop_4567,call_4581,call_4585,call_4594,const_4593,call_4610,var_4608,const_4609,])
func_4611 = relay.Function([var_4608,], output)
mod['func_4611'] = func_4611
mod = relay.transform.InferType()(mod)
var_4612 = relay.var("var_4612", dtype = "float32", shape = (54,))#candidate|4612|(54,)|var|float32
output = func_4611(var_4612)
func_4613 = relay.Function([var_4612], output)
mutated_mod['func_4613'] = func_4613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4505_call = mod.get_global_var('func_4505')
func_4507_call = mutated_mod.get_global_var('func_4507')
call_4671 = relay.TupleGetItem(func_4505_call(), 0)
call_4672 = relay.TupleGetItem(func_4507_call(), 0)
func_4505_call = mod.get_global_var('func_4505')
func_4507_call = mutated_mod.get_global_var('func_4507')
call_4691 = relay.TupleGetItem(func_4505_call(), 0)
call_4692 = relay.TupleGetItem(func_4507_call(), 0)
output = relay.Tuple([call_4671,call_4691,])
output2 = relay.Tuple([call_4672,call_4692,])
func_4701 = relay.Function([], output)
mod['func_4701'] = func_4701
mod = relay.transform.InferType()(mod)
output = func_4701()
func_4702 = relay.Function([], output)
mutated_mod['func_4702'] = func_4702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mod.get_global_var('func_3924')
func_3925_call = mutated_mod.get_global_var('func_3925')
call_4703 = relay.TupleGetItem(func_3924_call(), 0)
call_4704 = relay.TupleGetItem(func_3925_call(), 0)
func_4701_call = mod.get_global_var('func_4701')
func_4702_call = mutated_mod.get_global_var('func_4702')
call_4706 = relay.TupleGetItem(func_4701_call(), 0)
call_4707 = relay.TupleGetItem(func_4702_call(), 0)
func_411_call = mod.get_global_var('func_411')
func_414_call = mutated_mod.get_global_var('func_414')
const_4709 = relay.const([True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,True,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,True,False,False,False,True,False,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,True,True,False,True,True,True], dtype = "bool")#candidate|4709|(504,)|const|bool
call_4708 = relay.TupleGetItem(func_411_call(relay.reshape(const_4709.astype('bool'), [7, 12, 6]), relay.reshape(const_4709.astype('bool'), [7, 12, 6]), ), 0)
call_4710 = relay.TupleGetItem(func_414_call(relay.reshape(const_4709.astype('bool'), [7, 12, 6]), relay.reshape(const_4709.astype('bool'), [7, 12, 6]), ), 0)
func_3892_call = mod.get_global_var('func_3892')
func_3893_call = mutated_mod.get_global_var('func_3893')
call_4715 = relay.TupleGetItem(func_3892_call(), 0)
call_4716 = relay.TupleGetItem(func_3893_call(), 0)
func_2803_call = mod.get_global_var('func_2803')
func_2807_call = mutated_mod.get_global_var('func_2807')
var_4726 = relay.var("var_4726", dtype = "uint16", shape = ())#candidate|4726|()|var|uint16
const_4727 = relay.const([-10,5,1,-1,3,9,-7,-3,2,-3,-2,-8,-2,1,8,2,-10,10,-4,-10,-5,4,4,8,-9,3,-4,8], dtype = "uint16")#candidate|4727|(28,)|const|uint16
call_4725 = relay.TupleGetItem(func_2803_call(relay.reshape(var_4726.astype('uint16'), []), relay.reshape(const_4727.astype('uint16'), [7, 4, 1]), ), 0)
call_4728 = relay.TupleGetItem(func_2807_call(relay.reshape(var_4726.astype('uint16'), []), relay.reshape(const_4727.astype('uint16'), [7, 4, 1]), ), 0)
output = relay.Tuple([call_4703,call_4706,call_4708,const_4709,call_4715,call_4725,var_4726,const_4727,])
output2 = relay.Tuple([call_4704,call_4707,call_4710,const_4709,call_4716,call_4728,var_4726,const_4727,])
func_4729 = relay.Function([var_4726,], output)
mod['func_4729'] = func_4729
mod = relay.transform.InferType()(mod)
var_4730 = relay.var("var_4730", dtype = "uint16", shape = ())#candidate|4730|()|var|uint16
output = func_4729(var_4730)
func_4731 = relay.Function([var_4730], output)
mutated_mod['func_4731'] = func_4731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4093_call = mod.get_global_var('func_4093')
func_4094_call = mutated_mod.get_global_var('func_4094')
call_4733 = relay.TupleGetItem(func_4093_call(), 1)
call_4734 = relay.TupleGetItem(func_4094_call(), 1)
output = call_4733
output2 = call_4734
func_4735 = relay.Function([], output)
mod['func_4735'] = func_4735
mod = relay.transform.InferType()(mod)
mutated_mod['func_4735'] = func_4735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4735_call = mutated_mod.get_global_var('func_4735')
call_4736 = func_4735_call()
output = call_4736
func_4737 = relay.Function([], output)
mutated_mod['func_4737'] = func_4737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4158_call = mod.get_global_var('func_4158')
func_4160_call = mutated_mod.get_global_var('func_4160')
call_4756 = func_4158_call()
call_4757 = func_4158_call()
func_4735_call = mod.get_global_var('func_4735')
func_4737_call = mutated_mod.get_global_var('func_4737')
call_4763 = func_4735_call()
call_4764 = func_4735_call()
func_4365_call = mod.get_global_var('func_4365')
func_4370_call = mutated_mod.get_global_var('func_4370')
const_4769 = relay.const(4, dtype = "int8")#candidate|4769|()|const|int8
const_4770 = relay.const([5,-7,3,-6,-10,-7,-8,-1,7,-7,-1,8,10,7,-9,-3,6,-5,-1,-9,1,-4,-5,4,-6,-4,-1,-3,6,5,4,-10,-10,-1,-7,-6,4,-7,-4,-3,-2,-7,1,2,-2,1,-8,8,7,3,-10,10,8,3,8,4,2,1,-1,-1,3,-1,-4,-1,8,2,-2,2,-10,3,10,8,-1,5,3,7,7,-6,-6,-9,8,4,6,1,-10,3,-4,-4,-9,6,-5,7,2,-3,8,-5,-5,-8,5,-6,6,7,-2,6,9,5,-7,-8,-4,7,4,10,-1,10,-10,2,-8,7,-9,-3,-4,-2,1,-10,-10,-8,-9,4,9,-7,-10,6,-8,-8,-5,-7,9,10,1,4,-6,-8,3,4,-5,10,10,5,-8,-6,4,-1,-7,1,-10,-1,-9,1,10,1,-4,5,8,3,1,-10,5,7,2,-9,-5,1,7,6,-7,5,10,7,-9,6,10,-6,7,6,-3,6,-3,-4,8,2,-4,7,6,-6,4,7,-9,-8,6,8,9,9,-10,6,10,-1,4,2,2,7,9,-2,6,-5,-6,-4,-8,10,-6,5,-4,-2,-6,10,-10,6,10,-8,-7,-1,-5,-9,9,-10,-6,1,-3,8,-7,7,-5,9,-10,6,-7,2,3,6,1,-7,2,6,-2,5,3,9,5,-5,-4,-4,-9,4,10,-4,-7,-9,-10,4,-1,3,1,4,-1,-2,-2,-7,-5,-3,-2,-7,9,-8,10,2,1,5,-1,-7,-8,9,-9,2,-1,10,-1,2,2,-10,-4,-2,-10,-6,-6,3,-3,-5,-3,8,-2,-7,7,5,-1,-10,9,-9,-10,10,-7,-3,9,5,-7,-6,-3,-3,2,8,3,8,3,-3,-10,1,7,-10,-4,-8,9,-7,5,-3,-8,-10,-2,-4,-6,7,9,-5,-6,3,-3,-8,-5,5,6,10,-10,6,-1,-6,-7,-4,5,-5,8,8,10,-2,-2,8,-8,4,9,1,-10,6,1,6,-1,6,8,9,-1,-5,-1,-3,-9,6,-6,-7,-3,8,5,10,6,5,2,-1,6,-6,-9,3,-5,-6,-5,9,-8,-4,10,8,1,-9,-7,6,6,-8,10,-5,-2,5,-5,-9,-9,7,8,5,-9,2,5,-9,1,-8,-1,-5,-3,4,3,3,6,-3,-7,4,3,4,-6,-8,2,-8,-10,-8,1,1,3,8,-5,-4,9,8,5,-9,7,-8,5,2,8,8,-1,-5,-4,6,6,-10,7,7,2,-5,-3,-5,-10,6,10,9,-3,-8,9,-6,5,2,-6,5,4,4,-4,10,10,2,-7,1,-3,-9,-6,-9,-1,-4,9,2,1,3,-8,9,-8,-8,-10,-7,2,7,-8,-9,-5,-5,-4,8,-4,-3,3,-2,1,-7,3,-5,-9,10,-7,6,4,8,8,-7,6,-9,-2,-1,-3,5,2,8,10,-9,-9,-3,-6,-2,7,-1,9,-4,-8,-5,5,6,10,1,2,-9,4,-5,-2,-7,6,2,7,-8,2,8,5,-7,8,3,7,-2,-3,-3,3,4,1,9,-1,-3,-2,2,-4,10,-8,-3,-6,-8,-1,-6,5,6,-5,4,-1,10,-9,-9,-3,7,4,8,5,1,-1,10,8,-1,-10,10,1,5,4,5,4,1,-1,10,-7,2,7,-5,10,7,-3,1,6,-6,-1,8,-2,-5,-9,1,-3,3,6,6,-6,-8,-9,2,7,8,8,5,-6,-3,3,-1,6,8,-4,10,9,-8,8,-6,10,5,1,-8,-8,1,6,10,8,5,-4,3,-2,-4,2,5,5,8,8,4,-8,1,-9,-5,1,-2,-5,-10,7,-7,-3,1,-2,7,-6,10,-8,-7,2,-7,-9,9,3,3,3,-8,-4,-6,7,-8,4,6,-9,-10,-4,5,5,9,3,-7,2,5,-4,2,-6,-6,-10,-4,-5,1,1,-3,2,-4,2,3,9,-9,1,-6,-2,9,5,1,8,-7,8,7,2,4,3,9,7,6,-1,-7,5,5,1,-7,-7,-10,-6,6,-8,-5,2,-4,-4,-7,3,8,-1,-7,10,-1,-10,-6,8,6,4,9,-7,-5,5,8,7,7,10,8,8,6,10,6,-4,4,-6,-6,-7,-4,2,-2,9,-4,-3,-8,2,1,-6,10,9,-9,-8,-8,5,-1,5,7,5,2,6,1,1,-9,-8,8,4,4,4,1,5,8,5,3,-9,-6,-2,2,-10,4,-10,7,2,8,-3,-7,8,10,3,3,-8,-4,7,-8,8,5,6,4,3,-6,-2,7,-8,-3,-10,-10,7,-1,-1,9,2,-9,-6,-6,4,5,5,-6,-1,-4,7,-1,2,-9,2,-4,4,3,-4,-8,1,6,7,10,5,9,10,8,-4,4,-7,-2,-10,10,4,-6,-3,-4,6,-8,-6,5,-9,-7,-2,-10,-7,-9,-5,-5,-8,7,-3,2,3,-2,-9,6,-2,2,3,-2,-2,1,3,-10,5,2,8,-9,4,-3,-10,10,1,-7,-3,7,1,5,-2,-5,-2,-8,9,-3,-1,-5,-5,-3,8,-3,9,4,-9,-6,-4,1,9,6,7,2,-6,-8,-3,-9,1,10,5,-3,-3,-7,-1,-4,-6,-10,-10,10,9,-8,9,1,-3,-3,5,3,7,6,6,10,-10,6,1,9,4,-10,7,4,-2,-8,-2,-6,9,-9,-2,9,-9,4,-9,-10,10,-5,-3,7,-5,-2,-6,-6,-10,9,3,-4,1,4,10,-4,-6,-9,7,6,-3,-6,7,-3,8,9,-8,-6,10,10,4,2,2,-10,-7,8,5,8,-8,10,-3,-7,-1,-1,-1,-3,-4,6,6,2,4,-5,5,-10,-6,-7,9,-9,5,3,8,4,3,-7,-7,6,2,10,-7,-8,-3,10,-9,4,7,-3,-5,9,6,-9,-9,-4,-6,-8,-7,8,3,3,6,-7,5,2,-4,10,-10,-3,-5,10,3,8,4,1,-3,9,-2,-4,6,-8,8,-10,-10,7,-4,-1,-5,-9,5,4,4,7,10,2,-1,8,-10,-8,-3,-6,-4,-4,-5,7,2,-8,-7,-4,-8,4,-7,-9,-1,9,-3,-9,-3,-5,-5,-8,4,-5,1,-7,-6,-8,-3,1,-5,-6,-5,-7,-1,9,-7,-4,5,1,9,-6,-10,9,3,-7,-10,9,1,6,-10,-5,3,7,9,3,7,2,-4,-3,10,-7,3,8,2,4,-10,-9,10,-9,6,-6,1,-2,-8,-6,-3,9,-9,-9,-2,4,-6,4,-1,-5,-7,9,1,-7,-6,-5,3,6,10,4,-10,3,1,2,-4,-8,7,1,1,-7,10,-6,6,7,-9,10,-9,-5,-2,-4,-1,-9,10,-8,-9,-7,-7,-2,-7,2,1,-5,-7,-3,-5,-7,-9,-9,-6,1,-2,-4,5,5,-6,8,-9,8,-3,-4,7,-7,8,7,-2,9,9,6,-9,6,8,-3,-6,2,9,8,-9,-2,10,3,8,-10,7,-8,5,-2,-7,9,-3,3,-8,9,7,-4,-1,-10,1,3,-6,-4,7,5,2,-1,6,10,6,-1,9,9,4,-8,-3,-3,-3,1,5,-8,-9,-4,3,-9,3,2,-5,3,-4,2,-1,-4,2,-6,1,-5,-1,5,5,4,4,-10,-7,-8,-2,-8,-5,-7,10,-7,-5,1,-3,3,2,6,1,7,-8,1,-5,-5,1,-9,-5,-2,-9,10,3,10,9,3,1,-2,-3,3,1,-8,1,-3,-4,-1,-10,-4,4,-8,9,7,-1,1,1,4,1,4,1,-8,-4,7,10,7,-5,-9,8,6,-4,-5,-10,-4,-3,3,-8,9,2,6,-9,-7,9,1,-1,-9,2,7,3,3,2,9,8,9,-6,-1,-9,-9,4,10,-7,-10,10,-10,-1,-10,8,-10,-7,-6,6,-8,-6,7,-7,5,3,2,3,8,-7,-6,6,-3,4,6,7,-7,10,-2,9,10,3,7,8,-1,-2,3,-4,2,8,-10,-1,7,-2,-8,-8,-5,2,8,-5,-6,7,-6,-6,1,-4,8,-9,-9,-5,2,-5,6,-6,1,5,-8,-7,-5,3,-6,6,-4,-10,-4,10,-10,-2,4,3,9,3,2,4,-2,5,3,1,-4,10,7,5,-5,-6,-5,6,-8,-3,-8,10,-3,-9,4,-4,2,10,2,-7,-2,-7,1,-1,2,-9,-1,10,4,10,9,8,-8,1,4,8,-10,-5,8,-9,-1,1,-7,-6,10,9,-10,1,7,-7,-9,-1,1,1,1,10,-10,6,9,10,-7,-1,8,-4,-5,10,-7,-4,-6,-6,6,-10,6,-4,5,-6,-3,-1,10,-7,-6,10,7,-2,10,-9,5,-3,-3,-7,10,-3,10,-5,-9,5,1,-1,-1,9,-4,-8,-8,-1,9,-9,1,4,-8,-2,-5,-6,-4,5,1,-7,-4,5,5,3,4,-4,8,6,9,4,-7,-10,-7,-8,-1,-5,-9,7,6,9,3,-5,-9,6,-9,2,9,8,-7,6,1,-4,-2,4,2,10,-7,6,-3,6,3,9,9,9,6,-5,7,-7,2,-8,7,10,10,1,-8,-7,-6,4,6,3,-9,10,8,6,1,4,2,3,10,9,-3,-9,-5,-2,6,-4,4,2,1,1,4,9,9,-9,-4,-9,7,5,10,-4,5,-3,1,-10,-3,-4,8,2,3,-8,-2,-5,-2,-10,10,-1,1,3,-1,-6,-5,3,4,-3,-9,-8,-6,9,-5,-4,-2,-9,1,4,-6,6,1,-7,7,1,-10,8,-2,-6,5,-2,-5,7,-3,-7,1,10,-5,6,6,-7,-8,4,1,7,-10,-10,-9,10,-9,-9,-2,-4,-8,8,-10,2,-9,8,-4,5,-5,8,3,-6,-5,-5,-5,-6,1,-7,-1,9,-3,10,-3,3,10,-1,-9,7,3,-3,-1,1,4,-3,7,5,-8,-9,-1,-10,-4,-4,-10,-9,3,1,-2,5,4,-3,1,-3,4,-1,-6,6,2,5,10,-4,5,-6,10,2,-3,-5,2,3,-1,1,-5,-9,6,8,-7,1,-8,8,-2,3,5,8,-5,-3,7], dtype = "int8")#candidate|4770|(1920,)|const|int8
var_4771 = relay.var("var_4771", dtype = "uint8", shape = (624,))#candidate|4771|(624,)|var|uint8
call_4768 = relay.TupleGetItem(func_4365_call(relay.reshape(const_4769.astype('int8'), []), relay.reshape(const_4770.astype('int8'), [16, 10, 12]), relay.reshape(var_4771.astype('uint8'), [624,]), ), 3)
call_4772 = relay.TupleGetItem(func_4370_call(relay.reshape(const_4769.astype('int8'), []), relay.reshape(const_4770.astype('int8'), [16, 10, 12]), relay.reshape(var_4771.astype('uint8'), [624,]), ), 3)
func_2522_call = mod.get_global_var('func_2522')
func_2528_call = mutated_mod.get_global_var('func_2528')
const_4775 = relay.const([-8,3,9,-7,5,-5,2,8,5,-10,6,-3,-7,8,-9,-2,-9,-2,-8,7,4,6,3,-8,4,1,3,4,8,-8,9,5,7,-6,10,-8,5,-8,10,9,5,1,7,10,7,4,7,6,1,-7,-5,-5,9,-1,1,-10,-1,6,8,3,1,-3,-1,2,-1,10,6,-8,-9,3,-10,-6,-5,9,8,1,3,10,5,3,5,-3,1,5,2,-9,2,-3,10,4,-8,-9,-1,3,3,3,1,8,-1,1], dtype = "uint32")#candidate|4775|(100,)|const|uint32
var_4776 = relay.var("var_4776", dtype = "uint8", shape = (330, 1))#candidate|4776|(330, 1)|var|uint8
call_4774 = relay.TupleGetItem(func_2522_call(relay.reshape(const_4775.astype('uint32'), [2, 5, 10]), relay.reshape(const_4775.astype('uint32'), [2, 5, 10]), relay.reshape(var_4776.astype('uint8'), [330,]), relay.reshape(const_4775.astype('float64'), [2, 5, 10]), ), 0)
call_4777 = relay.TupleGetItem(func_2528_call(relay.reshape(const_4775.astype('uint32'), [2, 5, 10]), relay.reshape(const_4775.astype('uint32'), [2, 5, 10]), relay.reshape(var_4776.astype('uint8'), [330,]), relay.reshape(const_4775.astype('float64'), [2, 5, 10]), ), 0)
func_3924_call = mod.get_global_var('func_3924')
func_3925_call = mutated_mod.get_global_var('func_3925')
call_4778 = relay.TupleGetItem(func_3924_call(), 0)
call_4779 = relay.TupleGetItem(func_3925_call(), 0)
func_4029_call = mod.get_global_var('func_4029')
func_4035_call = mutated_mod.get_global_var('func_4035')
const_4781 = relay.const([False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,False,True,True,False,True,False,False,True,True,False,False,True,True,True,True,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True], dtype = "bool")#candidate|4781|(504,)|const|bool
call_4780 = relay.TupleGetItem(func_4029_call(relay.reshape(call_4763.astype('float32'), [11, 15, 15]), relay.reshape(call_4763.astype('bool'), [11, 15, 15]), relay.reshape(var_4771.astype('uint8'), [624,]), relay.reshape(const_4781.astype('bool'), [504,]), ), 2)
call_4782 = relay.TupleGetItem(func_4035_call(relay.reshape(call_4763.astype('float32'), [11, 15, 15]), relay.reshape(call_4763.astype('bool'), [11, 15, 15]), relay.reshape(var_4771.astype('uint8'), [624,]), relay.reshape(const_4781.astype('bool'), [504,]), ), 2)
bop_4783 = relay.less(call_4774.astype('bool'), const_4769.astype('bool')) # shape=(2, 5, 10)
bop_4786 = relay.less(call_4777.astype('bool'), const_4769.astype('bool')) # shape=(2, 5, 10)
output = relay.Tuple([call_4756,call_4763,call_4768,const_4770,var_4771,const_4775,var_4776,call_4778,call_4780,const_4781,bop_4783,])
output2 = relay.Tuple([call_4757,call_4764,call_4772,const_4770,var_4771,const_4775,var_4776,call_4779,call_4782,const_4781,bop_4786,])
func_4791 = relay.Function([var_4771,var_4776,], output)
mod['func_4791'] = func_4791
mod = relay.transform.InferType()(mod)
mutated_mod['func_4791'] = func_4791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4791_call = mutated_mod.get_global_var('func_4791')
var_4793 = relay.var("var_4793", dtype = "uint8", shape = (624,))#candidate|4793|(624,)|var|uint8
var_4794 = relay.var("var_4794", dtype = "uint8", shape = (330, 1))#candidate|4794|(330, 1)|var|uint8
call_4792 = func_4791_call(var_4793,var_4794,)
output = call_4792
func_4795 = relay.Function([var_4793,var_4794,], output)
mutated_mod['func_4795'] = func_4795
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4814 = relay.const([[[-3,-5,-6,-5,10,-7,-1,-9,-8,-3,-8,9,6],[6,-4,-9,-6,2,-3,9,10,-6,-5,-10,-5,-7],[6,10,-7,-1,-9,-10,5,9,10,-1,-5,1,-4],[-4,-6,10,6,-5,6,6,6,-2,-7,-1,10,7],[-1,-5,9,-1,-10,-6,-3,-1,-9,-6,-2,-6,-1],[6,-8,-7,1,-3,-1,5,5,2,-4,-1,-2,8],[7,-3,-2,10,-3,-1,6,3,8,1,-9,3,7],[-8,1,3,1,-6,6,-5,10,-5,7,6,-8,-9],[1,2,-8,-5,8,8,-5,-2,-8,-1,-10,7,-4],[5,1,9,-7,-7,3,3,1,1,-6,6,10,4],[-2,9,3,8,-7,-5,-9,-9,-6,4,-6,3,9],[-5,7,-1,10,6,6,-9,-2,9,-1,-6,5,-6],[6,-4,-9,4,-10,-6,6,6,-8,7,3,5,-8],[-1,-10,5,-8,-1,-8,2,1,-8,2,1,1,9]],[[-5,8,-5,8,7,3,10,2,-10,-4,4,10,-6],[-5,-10,-4,1,10,-2,1,-10,7,-2,-8,7,5],[-3,-9,-7,-9,1,4,5,5,-4,1,5,-6,8],[9,-5,7,1,-9,10,-5,-1,-2,7,-8,-8,-5],[-6,9,-2,-9,3,6,-6,2,3,9,-10,-2,8],[6,-10,8,9,-2,-6,-9,-1,-2,-10,-2,-4,8],[-10,9,-2,-6,7,8,9,-8,-3,3,3,-8,10],[5,1,-7,6,10,4,-2,-8,-6,2,-4,-2,8],[2,6,8,-7,-7,-9,-2,-2,-3,-7,5,-9,-5],[2,10,1,-6,6,-2,-2,-9,3,7,10,-10,-10],[8,1,-2,1,5,-4,10,-6,4,3,-6,-5,-10],[5,-9,6,-4,-1,2,-8,5,-9,-3,9,-2,1],[7,-2,-10,-10,2,6,-2,4,-10,-2,-6,2,-5],[-7,3,6,-3,-8,7,-1,3,7,-6,-1,3,3]],[[-6,9,4,-10,-3,7,-7,6,-5,3,6,-5,-2],[9,2,5,7,-9,1,7,6,-7,-3,6,-1,7],[-10,-10,-1,-8,-2,-10,8,-9,-9,-10,-4,-9,-3],[6,2,1,-8,-4,1,1,-4,2,10,-10,10,7],[8,-1,-9,-5,2,4,-9,8,-10,-3,10,8,-7],[-1,8,-8,-2,-7,8,3,-2,-10,7,10,9,-4],[9,8,-8,-10,7,-3,9,-1,4,8,2,6,8],[-9,-9,5,-2,-1,-2,-7,1,9,1,-10,5,-2],[6,8,-4,-2,-7,9,1,-2,-3,3,10,-5,-1],[10,2,3,-10,3,-6,-4,-3,-4,5,7,-6,3],[2,1,-4,9,10,6,-1,-3,6,-1,2,-3,-3],[6,-1,-7,6,6,8,-6,5,10,2,6,3,-9],[3,6,2,-7,-9,-6,2,-5,-7,-1,-2,2,-4],[-4,-4,-6,4,-4,1,1,-6,7,1,10,-4,2]],[[-2,1,-1,-5,-5,3,-10,-6,-10,5,4,-8,5],[-4,-9,-6,-9,6,-10,-4,-9,-6,7,2,-1,-5],[-8,-1,-1,1,-9,10,3,-9,-5,10,1,-3,-10],[-6,-1,-5,6,-1,8,6,6,-7,-9,2,9,-8],[-9,-1,-5,9,1,-4,-9,1,-6,7,2,10,2],[7,-7,-4,-7,7,-5,9,-10,1,7,-9,9,-4],[-1,4,8,7,-6,4,-9,7,-7,7,7,-1,10],[-7,7,1,6,3,7,-1,-2,-8,8,-2,2,-6],[-9,-3,-6,-9,-2,1,8,-1,-4,1,9,-5,-7],[-4,6,7,-5,-6,1,-2,-8,10,-6,4,-7,-4],[-6,-5,-7,1,-7,1,-9,4,2,2,10,-7,-4],[6,6,8,-10,7,10,-3,6,-2,10,-4,4,2],[9,10,-10,5,-6,-2,-5,-6,-6,-5,-2,9,3],[-4,-1,-10,-6,4,-7,-4,3,1,-4,3,7,-4]],[[5,3,-7,6,5,-8,6,-9,-4,-6,-8,5,8],[-1,7,6,-9,1,-7,-5,3,-5,7,10,6,8],[-6,5,-2,9,-4,-3,-3,8,-1,4,6,1,-1],[9,-8,1,-2,8,-3,-3,-9,9,-1,3,1,4],[-5,5,7,-5,-10,10,3,6,-2,-4,-7,4,1],[10,5,1,10,-7,-7,3,-1,9,-1,-1,-6,-6],[9,3,-7,3,-6,3,-8,4,-5,5,9,9,1],[-5,-6,-1,10,4,-6,1,-9,9,-7,5,9,-9],[5,2,-9,-2,7,7,-9,7,7,-9,-2,-6,-3],[-4,-2,-5,-2,-3,-2,-7,10,8,-6,7,1,-8],[6,6,6,4,-3,-4,-3,-8,-4,8,1,-5,9],[8,10,6,1,-7,-2,-4,-7,-1,-7,-9,-6,-7],[1,3,6,3,-9,-3,-1,-7,9,-7,2,-1,9],[-10,-5,1,8,7,5,-9,-8,-5,3,9,7,-10]],[[-4,-10,1,9,6,5,3,-10,-1,-3,3,8,-1],[-8,5,-9,-9,3,8,9,1,10,5,4,-10,4],[8,7,-1,10,-3,4,-6,3,8,-6,3,6,-7],[-3,-9,8,1,7,-8,-7,-3,-4,-9,-3,-6,-7],[-6,-6,-3,-7,8,-10,-1,-2,-5,2,3,7,1],[-8,-10,8,9,-6,-7,-7,-10,-5,-7,10,9,9],[5,3,-7,-5,-7,10,10,-2,-3,-1,7,2,6],[-5,-3,6,-2,6,-9,6,-5,-4,6,-2,-5,10],[9,-10,-3,10,1,5,-3,7,-3,10,1,5,-9],[6,9,10,9,3,-6,9,-10,-3,7,-7,-4,10],[-10,-5,-9,-7,-9,6,-8,2,-5,1,7,-8,-5],[5,-1,-5,8,-2,-2,-7,7,-9,-4,8,1,-5],[-5,-1,8,-10,-10,10,6,5,2,-9,5,1,-8],[-1,8,7,8,6,5,3,-2,1,4,7,10,-4]],[[-5,-8,-5,2,-4,-9,-9,8,-10,7,-3,-3,8],[4,8,-7,-4,6,4,5,8,-10,-8,1,9,-1],[10,-3,5,-8,-7,6,10,3,1,-1,1,-8,-2],[-8,-8,-5,-4,-9,-8,-2,2,8,-1,3,6,-2],[7,-7,-10,-10,-3,-7,5,-4,2,8,5,5,5],[-9,-4,-10,-3,-10,10,-1,4,8,5,2,9,1],[-4,-9,4,1,-8,-9,-8,4,-6,2,5,1,3],[5,-1,-7,5,-5,-3,7,7,-4,4,4,-5,1],[-8,7,-6,-5,-1,4,-8,6,-3,-5,-10,7,9],[5,-8,1,1,-9,-2,-5,-9,-10,-8,-8,-9,3],[-4,-5,-2,4,-9,7,-4,-8,-3,9,4,8,-4],[-2,9,-4,8,5,-10,-1,5,2,6,-6,-4,10],[-2,7,5,1,-7,-9,4,4,-3,4,2,-9,-5],[7,8,5,-4,-6,-4,-2,-1,5,-5,9,3,-9]],[[-1,-3,-3,-6,-6,1,-5,-10,3,9,5,9,-2],[-9,4,-10,-6,1,-3,-10,-8,-10,9,2,-2,-8],[-5,-8,-7,-4,4,-6,-6,2,6,8,-3,6,8],[4,1,8,10,4,4,-8,9,1,-3,-5,-4,-2],[3,1,-8,-3,8,6,9,3,6,-2,-5,4,-7],[-6,4,-10,-8,8,7,-6,5,2,1,-9,-9,6],[5,4,9,-5,-8,9,7,5,-1,10,4,-3,-1],[4,3,-4,9,2,-7,-10,3,4,-1,5,-1,-9],[1,10,4,2,3,8,3,10,9,9,-1,4,-2],[-3,6,-8,6,8,3,1,-5,9,-1,2,-1,3],[-3,-6,-6,10,3,-10,9,2,10,-1,4,-5,-1],[6,7,7,-6,7,-2,-5,-8,-7,-5,-8,-4,-1],[10,-7,10,-4,3,-7,4,3,2,2,-5,4,10],[6,-4,4,3,-5,-5,10,-2,-8,-2,2,-1,1]],[[-5,-7,-10,9,-9,7,2,-5,-1,-6,-5,-9,5],[10,-8,-1,9,-8,-10,2,-9,1,1,10,-4,-6],[1,5,-9,-4,-7,9,-3,-4,3,-2,5,4,1],[7,-10,-4,8,-9,-2,3,-7,5,7,-3,-5,3],[-10,5,10,-7,-5,-3,8,-10,-2,2,-5,-9,8],[3,7,-5,-2,8,-2,-4,6,2,7,8,6,9],[9,-2,-10,-2,10,5,8,3,10,7,-3,4,2],[1,2,-7,-10,9,5,-8,-9,-6,10,-6,-7,8],[3,-1,-4,1,2,10,-9,3,-2,-9,-6,9,4],[-6,-10,2,8,8,-6,1,-7,2,-2,9,8,7],[5,-9,5,2,4,1,-7,-6,-6,-1,-8,10,-9],[-5,1,10,10,-6,7,-2,-2,-4,10,2,-9,-2],[7,8,-2,-1,-5,-10,-10,-3,4,9,6,5,-3],[5,-9,8,8,-1,9,5,1,-2,-4,8,-8,-4]],[[-10,4,5,3,4,-1,7,7,2,-1,-9,-5,-8],[1,-2,4,-5,3,-6,5,10,-6,-7,-5,5,3],[-9,-7,1,-4,-2,-5,5,-8,-6,4,-10,-5,3],[8,-7,2,-9,-2,-8,5,5,8,8,2,10,2],[-6,8,6,-7,-7,9,-7,-8,9,6,5,-3,-9],[-9,-1,-2,-7,-4,6,-7,10,1,-1,4,-4,4],[-4,2,-2,-4,-3,9,7,-4,5,-8,-1,4,-9],[4,9,-5,-6,6,-10,-2,7,3,-5,6,2,6],[-4,7,-3,9,8,-6,-10,2,-5,3,6,-5,-4],[-2,9,-2,-2,-6,-8,6,-10,-10,-5,10,-9,-1],[10,-7,-8,-3,-10,-10,3,-7,5,-9,-6,-3,5],[2,-8,-8,-8,3,7,5,-10,-10,-4,-6,-2,4],[-5,-10,2,-4,-4,9,9,-2,-7,-4,3,-1,-10],[-8,3,-2,-8,-1,-4,-3,9,-2,3,5,-10,-8]],[[-2,2,6,-6,-1,-9,3,-1,5,7,7,2,-3],[1,-7,-10,8,1,-3,2,7,5,3,9,2,-2],[7,-9,3,8,9,-9,10,-10,8,7,5,-7,7],[-6,4,-10,-4,-3,-8,-8,-9,-3,-6,-9,7,2],[-7,-2,-7,-5,-10,3,-3,2,-9,10,5,6,8],[-8,3,-9,-10,-7,3,1,-7,7,3,1,10,-2],[5,-10,7,-8,-9,3,1,-8,3,6,-4,-10,-4],[8,4,-1,-10,-2,9,9,8,-7,3,-3,-5,-6],[2,3,-9,-10,-5,-2,1,3,-5,-8,-4,3,-8],[-4,5,-9,8,-5,-7,9,-7,8,-2,-10,3,1],[-10,-7,-9,1,-2,1,6,-6,10,-6,6,-4,5],[7,-1,7,1,10,-6,-3,5,10,-9,-6,-4,5],[8,-8,5,-3,4,-6,6,4,-10,10,-1,9,-9],[-9,9,10,-3,-2,-6,3,-7,-4,8,4,-4,-3]],[[7,5,9,8,5,-5,8,7,4,-5,-2,3,6],[-7,-2,-5,4,-4,3,-1,1,9,5,3,-9,-10],[7,10,-1,-4,-1,3,-9,10,-10,-2,-9,10,8],[-5,2,-5,-1,2,4,-6,-7,10,-7,-9,1,7],[10,-4,-1,-3,-4,-1,5,-8,1,2,4,-5,-2],[7,-4,3,-10,-4,8,3,8,-9,-9,-10,1,-10],[5,4,-8,1,5,-7,3,-5,9,-4,-2,-9,-8],[-5,2,3,-1,-5,10,-4,-3,10,-2,-8,-3,-9],[-3,-7,-9,1,-10,-1,5,-1,-3,2,5,2,8],[-8,2,7,-6,-6,9,-8,-4,-9,4,-6,6,-5],[-9,-10,-8,-10,-6,6,3,8,-3,-10,-7,6,10],[2,-9,9,-5,4,9,-6,1,10,-5,-6,7,5],[-7,-7,4,-7,4,10,-6,5,-8,-10,-2,-5,-9],[5,-8,-9,-3,4,-4,10,-6,1,7,-7,4,6]],[[-8,-5,1,-4,-10,6,1,-3,-10,5,5,9,-2],[7,-4,4,-3,10,8,-6,6,4,-1,-2,-3,-8],[5,-8,-4,2,9,9,-4,-7,2,3,-5,-7,7],[9,8,-6,-5,-1,3,-6,-1,4,3,-10,-5,2],[1,6,1,-5,3,4,-10,-8,10,3,6,-9,-9],[3,-1,5,8,-7,9,8,5,-1,-6,-8,-10,10],[-8,-8,-5,10,9,7,7,4,9,-7,3,1,-6],[8,8,5,-6,-3,-3,6,-8,-7,10,-10,-3,-3],[-6,8,1,-9,5,-7,8,-1,-2,-3,1,-5,3],[-9,-4,-5,-7,4,2,-9,9,7,5,-8,-6,-9],[-3,9,2,2,-10,-8,-1,-5,6,-7,1,4,-1],[-6,3,5,10,2,10,9,1,7,8,3,7,10],[-4,-5,-7,6,-6,8,3,-9,-1,4,-4,2,-2],[-7,-6,6,-1,9,-4,2,3,6,-9,10,-1,-2]],[[5,6,-10,6,-10,-6,-5,-3,-7,7,-4,-8,7],[-2,4,3,9,-9,-4,5,-7,-9,7,9,6,5],[-10,2,3,-6,-8,-8,-10,-6,-2,-2,-3,1,-2],[5,8,-9,-5,6,5,-4,-2,-9,-9,-9,-5,2],[-2,7,7,6,-2,-6,6,-4,3,-3,10,7,7],[2,7,-8,-1,6,7,-3,-5,-5,-10,-3,4,-10],[-9,8,5,8,8,-4,2,-4,10,-7,6,-7,8],[-3,-7,1,-2,-2,10,10,7,-4,-1,-6,-6,7],[5,-10,5,7,6,10,6,-4,3,2,-7,-6,5],[-1,-7,4,-4,2,10,1,-7,6,4,-10,6,-4],[-8,-5,-4,-5,7,-10,-4,8,4,-1,-10,-6,9],[-1,6,9,-8,9,1,3,-3,-6,-9,-4,6,6],[2,-2,8,5,-1,-9,9,2,-4,-7,-10,-8,1],[-4,7,5,-3,-10,2,-4,10,-1,5,-10,-6,8]],[[1,-7,-9,-9,2,-4,3,-8,1,-6,-7,-1,-8],[-3,-9,-4,-8,5,3,-4,10,-2,3,-5,-3,-5],[-8,5,9,-4,-1,-9,9,-8,7,-9,-9,-9,-2],[7,7,-8,-10,3,-10,-10,-5,-2,2,-7,2,-8],[-1,-5,1,-8,8,3,8,-9,-5,1,-7,-2,-5],[-2,9,9,-6,10,-8,8,-8,-4,-9,7,2,-1],[3,10,6,-4,-1,-2,-7,6,5,-1,-5,9,10],[7,6,-10,5,4,1,4,-8,9,-1,3,7,8],[1,-7,3,-10,3,-7,-10,-8,6,-3,10,-4,-6],[-4,-10,-6,-10,-9,-6,4,-1,-6,10,1,7,4],[5,8,-4,-4,-7,-5,-1,1,-5,7,-4,6,8],[-3,3,-4,-5,10,5,6,-4,8,-7,-5,4,8],[-6,3,6,-10,-5,-9,-7,2,5,-1,-8,8,-7],[-8,4,8,-4,5,1,1,2,-6,3,8,-7,8]],[[-9,1,-9,7,-8,-5,-10,-4,-8,4,-9,8,10],[1,-6,-5,7,-2,-6,2,-8,8,-9,-6,1,6],[2,-3,9,-2,-3,3,4,6,6,5,7,9,-8],[-3,-7,-1,5,3,-8,-3,3,-10,-1,6,6,-1],[-7,-9,7,5,2,-5,10,1,5,8,7,-5,-6],[-8,-6,-5,1,-7,-5,4,-10,2,-7,9,-6,1],[7,-4,1,-7,-2,8,-6,2,9,9,-5,1,-6],[5,9,7,-4,-1,4,-9,-2,-10,4,-2,-7,2],[3,-5,6,-1,8,1,1,-4,-1,3,-10,6,4],[6,-10,-5,-6,2,-2,4,-2,-1,-8,10,-10,5],[-6,3,-8,1,-1,-10,7,-8,-6,-1,9,3,-9],[-7,8,8,-2,3,-3,-7,-1,3,3,-8,-8,-9],[-3,2,-7,-10,10,10,2,-1,8,-1,-7,6,8],[10,3,2,-2,-9,-5,6,8,9,-1,-4,8,-5]]], dtype = "int16")#candidate|4814|(16, 14, 13)|const|int16
var_4815 = relay.var("var_4815", dtype = "int16", shape = (16, 14, 13))#candidate|4815|(16, 14, 13)|var|int16
bop_4816 = relay.right_shift(const_4814.astype('int16'), relay.reshape(var_4815.astype('int16'), relay.shape_of(const_4814))) # shape=(16, 14, 13)
uop_4830 = relay.tan(var_4815.astype('float64')) # shape=(16, 14, 13)
uop_4845 = relay.cos(uop_4830.astype('float64')) # shape=(16, 14, 13)
func_4729_call = mod.get_global_var('func_4729')
func_4731_call = mutated_mod.get_global_var('func_4731')
var_4848 = relay.var("var_4848", dtype = "uint16", shape = ())#candidate|4848|()|var|uint16
call_4847 = relay.TupleGetItem(func_4729_call(relay.reshape(var_4848.astype('uint16'), [])), 0)
call_4849 = relay.TupleGetItem(func_4731_call(relay.reshape(var_4848.astype('uint16'), [])), 0)
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_4859 = relay.TupleGetItem(func_4175_call(), 0)
call_4860 = relay.TupleGetItem(func_4176_call(), 0)
uop_4868 = relay.acos(uop_4830.astype('float32')) # shape=(16, 14, 13)
func_1674_call = mod.get_global_var('func_1674')
func_1679_call = mutated_mod.get_global_var('func_1679')
const_4880 = relay.const([False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,False,False,False,True,False,True,True], dtype = "bool")#candidate|4880|(252,)|const|bool
var_4881 = relay.var("var_4881", dtype = "bool", shape = (504,))#candidate|4881|(504,)|var|bool
const_4882 = relay.const([-8.934207,6.921811,9.191855,5.505213,6.651200,3.318825,-1.402573,9.240157,-4.829300,6.450864,-0.272907,-4.383108,9.939427,-9.973574,-9.395461,-1.450311,8.946651,-1.644262,-8.520179,9.765920,-3.125567,2.735599,4.682406,-0.591036,7.311832,-4.196626,9.236343,8.819123,2.288409,-3.148779,0.928251,-3.122320,-7.802767,5.519399,-6.121631,-2.911641,-7.188214,0.120872,-7.203481,0.497723,4.967040,1.704740,-2.819082,-8.913809,-0.635004,2.130853,6.880235,7.776728,-6.076051,6.513128,5.026089,7.214584,9.001314,8.619809], dtype = "float32")#candidate|4882|(54,)|const|float32
call_4879 = relay.TupleGetItem(func_1674_call(relay.reshape(const_4880.astype('bool'), [12, 3, 7]), relay.reshape(var_4881.astype('bool'), [504,]), relay.reshape(const_4882.astype('float32'), [54,]), ), 2)
call_4883 = relay.TupleGetItem(func_1679_call(relay.reshape(const_4880.astype('bool'), [12, 3, 7]), relay.reshape(var_4881.astype('bool'), [504,]), relay.reshape(const_4882.astype('float32'), [54,]), ), 2)
func_1582_call = mod.get_global_var('func_1582')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_4886 = relay.TupleGetItem(func_1582_call(relay.reshape(const_4882.astype('float32'), [1, 9, 6]), relay.reshape(var_4881.astype('bool'), [504,]), ), 0)
call_4887 = relay.TupleGetItem(func_1585_call(relay.reshape(const_4882.astype('float32'), [1, 9, 6]), relay.reshape(var_4881.astype('bool'), [504,]), ), 0)
output = relay.Tuple([bop_4816,uop_4845,call_4847,var_4848,call_4859,uop_4868,call_4879,const_4880,var_4881,const_4882,call_4886,])
output2 = relay.Tuple([bop_4816,uop_4845,call_4849,var_4848,call_4860,uop_4868,call_4883,const_4880,var_4881,const_4882,call_4887,])
func_4897 = relay.Function([var_4815,var_4848,var_4881,], output)
mod['func_4897'] = func_4897
mod = relay.transform.InferType()(mod)
var_4898 = relay.var("var_4898", dtype = "int16", shape = (16, 14, 13))#candidate|4898|(16, 14, 13)|var|int16
var_4899 = relay.var("var_4899", dtype = "uint16", shape = ())#candidate|4899|()|var|uint16
var_4900 = relay.var("var_4900", dtype = "bool", shape = (504,))#candidate|4900|(504,)|var|bool
output = func_4897(var_4898,var_4899,var_4900,)
func_4901 = relay.Function([var_4898,var_4899,var_4900,], output)
mutated_mod['func_4901'] = func_4901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mod.get_global_var('func_3924')
func_3925_call = mutated_mod.get_global_var('func_3925')
call_4906 = relay.TupleGetItem(func_3924_call(), 0)
call_4907 = relay.TupleGetItem(func_3925_call(), 0)
output = relay.Tuple([call_4906,])
output2 = relay.Tuple([call_4907,])
func_4910 = relay.Function([], output)
mod['func_4910'] = func_4910
mod = relay.transform.InferType()(mod)
mutated_mod['func_4910'] = func_4910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4910_call = mutated_mod.get_global_var('func_4910')
call_4911 = func_4910_call()
output = call_4911
func_4912 = relay.Function([], output)
mutated_mod['func_4912'] = func_4912
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4949 = relay.var("var_4949", dtype = "float64", shape = (2, 8, 2))#candidate|4949|(2, 8, 2)|var|float64
uop_4950 = relay.sin(var_4949.astype('float64')) # shape=(2, 8, 2)
bop_4953 = relay.minimum(var_4949.astype('uint8'), relay.reshape(uop_4950.astype('uint8'), relay.shape_of(var_4949))) # shape=(2, 8, 2)
bop_4962 = relay.logical_xor(bop_4953.astype('uint8'), relay.reshape(uop_4950.astype('uint8'), relay.shape_of(bop_4953))) # shape=(2, 8, 2)
func_1674_call = mod.get_global_var('func_1674')
func_1679_call = mutated_mod.get_global_var('func_1679')
const_4971 = relay.const([False,True,True,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,True,False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False], dtype = "bool")#candidate|4971|(252,)|const|bool
const_4972 = relay.const([False,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,False,False,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,False,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,False,True,False,True,False,True,False,False], dtype = "bool")#candidate|4972|(504,)|const|bool
var_4973 = relay.var("var_4973", dtype = "float32", shape = (9, 6))#candidate|4973|(9, 6)|var|float32
call_4970 = relay.TupleGetItem(func_1674_call(relay.reshape(const_4971.astype('bool'), [12, 3, 7]), relay.reshape(const_4972.astype('bool'), [504,]), relay.reshape(var_4973.astype('float32'), [54,]), ), 4)
call_4974 = relay.TupleGetItem(func_1679_call(relay.reshape(const_4971.astype('bool'), [12, 3, 7]), relay.reshape(const_4972.astype('bool'), [504,]), relay.reshape(var_4973.astype('float32'), [54,]), ), 4)
uop_4986 = relay.log2(bop_4953.astype('float32')) # shape=(2, 8, 2)
output = relay.Tuple([bop_4962,call_4970,const_4971,const_4972,var_4973,uop_4986,])
output2 = relay.Tuple([bop_4962,call_4974,const_4971,const_4972,var_4973,uop_4986,])
func_4989 = relay.Function([var_4949,var_4973,], output)
mod['func_4989'] = func_4989
mod = relay.transform.InferType()(mod)
mutated_mod['func_4989'] = func_4989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4989_call = mutated_mod.get_global_var('func_4989')
var_4991 = relay.var("var_4991", dtype = "float64", shape = (2, 8, 2))#candidate|4991|(2, 8, 2)|var|float64
var_4992 = relay.var("var_4992", dtype = "float32", shape = (9, 6))#candidate|4992|(9, 6)|var|float32
call_4990 = func_4989_call(var_4991,var_4992,)
output = call_4990
func_4993 = relay.Function([var_4991,var_4992,], output)
mutated_mod['func_4993'] = func_4993
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5038 = relay.const([[[9.929665,-5.193935],[-0.565168,0.533580],[7.217959,3.235689],[6.997289,0.254189],[8.826649,-3.777120],[8.662159,1.289961],[4.196860,9.209116],[-6.307122,-9.290821],[-7.571233,2.775411],[-5.361928,2.454815]],[[-8.812942,4.051799],[-3.939486,-4.939190],[0.471962,7.102668],[8.700104,0.836198],[-6.902473,-2.095852],[4.704325,0.815402],[0.840909,4.489526],[3.474940,-5.534142],[2.073548,-0.014503],[-2.258017,-8.367319]],[[7.637494,-8.698274],[-4.471972,4.176341],[9.998990,2.756548],[3.870972,-2.761378],[-4.882278,-7.864135],[-6.086982,0.895286],[-1.620861,8.284464],[-3.029830,-5.843326],[2.683605,-5.241894],[-3.553007,-2.007892]],[[8.777228,5.951340],[-8.907972,-4.138407],[1.710596,9.018022],[8.790594,7.006359],[-5.555817,-8.516463],[-2.283976,-3.477108],[-2.184879,9.640308],[5.483747,-5.287930],[-3.412742,0.083559],[3.494375,0.184713]],[[-1.627069,-0.119385],[3.346878,7.740845],[-4.239024,1.273472],[-6.699724,-0.803644],[-1.566923,5.582285],[0.424357,8.983964],[4.612847,0.179520],[-1.312963,4.290327],[4.941556,-1.801282],[-2.649250,-8.746299]],[[6.571740,8.127017],[1.465993,-4.471112],[-5.796433,4.455690],[5.963749,7.796733],[7.195950,2.127592],[1.431690,-7.793124],[-9.451150,1.514098],[-1.985121,2.560793],[6.639060,6.841819],[-0.699191,6.350188]],[[-9.648282,7.013640],[2.320876,-3.552059],[4.687100,-6.641189],[0.591411,0.914921],[4.685060,-7.076778],[-2.176669,9.019482],[-5.525111,-8.753199],[0.440947,4.296814],[0.479922,8.375209],[3.191788,4.784239]],[[-1.510975,6.968262],[6.157072,6.365198],[-3.892871,-3.476752],[-7.708010,-5.406322],[2.826559,0.852045],[-8.812734,-7.196628],[5.275331,-8.145518],[3.497621,4.756553],[0.256783,5.540623],[1.853885,5.542225]],[[-2.328841,-8.641783],[-1.290095,-4.120048],[-6.821578,-4.883777],[-3.401390,-3.524961],[-4.938150,8.953245],[-6.860965,9.598764],[8.633769,-1.319892],[-5.672490,-6.515297],[-2.249721,2.668847],[-7.191182,-1.643213]],[[9.941159,8.474741],[2.143788,-7.469772],[3.826141,9.015146],[-0.455215,5.271869],[-4.327663,2.395871],[-7.361130,1.406259],[-4.844111,5.412203],[-7.016361,6.935840],[-5.421029,-4.252886],[-0.790564,6.249958]],[[-3.319432,-8.173466],[-2.268510,-1.532357],[3.114248,7.635581],[-2.439848,-8.080759],[0.947727,6.467917],[5.802000,8.958155],[1.071123,8.648412],[-6.660779,4.063507],[-9.785580,-6.011242],[-7.484753,0.422368]]], dtype = "float32")#candidate|5038|(11, 10, 2)|const|float32
uop_5039 = relay.acosh(const_5038.astype('float32')) # shape=(11, 10, 2)
func_4505_call = mod.get_global_var('func_4505')
func_4507_call = mutated_mod.get_global_var('func_4507')
call_5043 = relay.TupleGetItem(func_4505_call(), 0)
call_5044 = relay.TupleGetItem(func_4507_call(), 0)
bop_5055 = relay.greater_equal(uop_5039.astype('bool'), relay.reshape(const_5038.astype('bool'), relay.shape_of(uop_5039))) # shape=(11, 10, 2)
output = relay.Tuple([call_5043,bop_5055,])
output2 = relay.Tuple([call_5044,bop_5055,])
func_5065 = relay.Function([], output)
mod['func_5065'] = func_5065
mod = relay.transform.InferType()(mod)
mutated_mod['func_5065'] = func_5065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5065_call = mutated_mod.get_global_var('func_5065')
call_5066 = func_5065_call()
output = call_5066
func_5067 = relay.Function([], output)
mutated_mod['func_5067'] = func_5067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3892_call = mod.get_global_var('func_3892')
func_3893_call = mutated_mod.get_global_var('func_3893')
call_5068 = relay.TupleGetItem(func_3892_call(), 0)
call_5069 = relay.TupleGetItem(func_3893_call(), 0)
func_1582_call = mod.get_global_var('func_1582')
func_1585_call = mutated_mod.get_global_var('func_1585')
var_5081 = relay.var("var_5081", dtype = "float32", shape = (54,))#candidate|5081|(54,)|var|float32
var_5082 = relay.var("var_5082", dtype = "bool", shape = (504,))#candidate|5082|(504,)|var|bool
call_5080 = relay.TupleGetItem(func_1582_call(relay.reshape(var_5081.astype('float32'), [1, 9, 6]), relay.reshape(var_5082.astype('bool'), [504,]), ), 4)
call_5083 = relay.TupleGetItem(func_1585_call(relay.reshape(var_5081.astype('float32'), [1, 9, 6]), relay.reshape(var_5082.astype('bool'), [504,]), ), 4)
output = relay.Tuple([call_5068,call_5080,var_5081,var_5082,])
output2 = relay.Tuple([call_5069,call_5083,var_5081,var_5082,])
func_5096 = relay.Function([var_5081,var_5082,], output)
mod['func_5096'] = func_5096
mod = relay.transform.InferType()(mod)
mutated_mod['func_5096'] = func_5096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5096_call = mutated_mod.get_global_var('func_5096')
var_5098 = relay.var("var_5098", dtype = "float32", shape = (54,))#candidate|5098|(54,)|var|float32
var_5099 = relay.var("var_5099", dtype = "bool", shape = (504,))#candidate|5099|(504,)|var|bool
call_5097 = func_5096_call(var_5098,var_5099,)
output = call_5097
func_5100 = relay.Function([var_5098,var_5099,], output)
mutated_mod['func_5100'] = func_5100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4287_call = mod.get_global_var('func_4287')
func_4289_call = mutated_mod.get_global_var('func_4289')
call_5113 = relay.TupleGetItem(func_4287_call(), 0)
call_5114 = relay.TupleGetItem(func_4289_call(), 0)
uop_5179 = relay.rsqrt(call_5113.astype('float64')) # shape=(11, 15, 15)
uop_5181 = relay.rsqrt(call_5114.astype('float64')) # shape=(11, 15, 15)
output = relay.Tuple([uop_5179,])
output2 = relay.Tuple([uop_5181,])
func_5182 = relay.Function([], output)
mod['func_5182'] = func_5182
mod = relay.transform.InferType()(mod)
output = func_5182()
func_5183 = relay.Function([], output)
mutated_mod['func_5183'] = func_5183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5187 = relay.var("var_5187", dtype = "float32", shape = (11, 6, 3))#candidate|5187|(11, 6, 3)|var|float32
uop_5188 = relay.acos(var_5187.astype('float32')) # shape=(11, 6, 3)
uop_5207 = relay.sin(uop_5188.astype('float32')) # shape=(11, 6, 3)
uop_5209 = relay.rsqrt(uop_5207.astype('float64')) # shape=(11, 6, 3)
output = uop_5209
output2 = uop_5209
func_5223 = relay.Function([var_5187,], output)
mod['func_5223'] = func_5223
mod = relay.transform.InferType()(mod)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5224 = relay.var("var_5224", dtype = "float32", shape = (11, 6, 3))#candidate|5224|(11, 6, 3)|var|float32
func_5223_call = mutated_mod.get_global_var('func_5223')
call_5225 = func_5223_call(var_5224)
output = call_5225
func_5226 = relay.Function([var_5224], output)
mutated_mod['func_5226'] = func_5226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4735_call = mod.get_global_var('func_4735')
func_4737_call = mutated_mod.get_global_var('func_4737')
call_5282 = func_4735_call()
call_5283 = func_4735_call()
output = call_5282
output2 = call_5283
func_5285 = relay.Function([], output)
mod['func_5285'] = func_5285
mod = relay.transform.InferType()(mod)
output = func_5285()
func_5286 = relay.Function([], output)
mutated_mod['func_5286'] = func_5286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4505_call = mod.get_global_var('func_4505')
func_4507_call = mutated_mod.get_global_var('func_4507')
call_5306 = relay.TupleGetItem(func_4505_call(), 0)
call_5307 = relay.TupleGetItem(func_4507_call(), 0)
output = relay.Tuple([call_5306,])
output2 = relay.Tuple([call_5307,])
func_5323 = relay.Function([], output)
mod['func_5323'] = func_5323
mod = relay.transform.InferType()(mod)
output = func_5323()
func_5324 = relay.Function([], output)
mutated_mod['func_5324'] = func_5324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5285_call = mod.get_global_var('func_5285')
func_5286_call = mutated_mod.get_global_var('func_5286')
call_5336 = func_5285_call()
call_5337 = func_5285_call()
output = relay.Tuple([call_5336,])
output2 = relay.Tuple([call_5337,])
func_5366 = relay.Function([], output)
mod['func_5366'] = func_5366
mod = relay.transform.InferType()(mod)
output = func_5366()
func_5367 = relay.Function([], output)
mutated_mod['func_5367'] = func_5367
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5380 = relay.var("var_5380", dtype = "uint8", shape = (1, 5, 8))#candidate|5380|(1, 5, 8)|var|uint8
const_5381 = relay.const([[[8,-4,-5,-8,9,-10,1,9],[-5,6,-1,-5,-1,6,7,-3],[-9,-1,9,3,-3,6,-10,-10],[9,4,2,4,8,-1,8,-1],[10,-9,1,6,4,-8,9,1]],[[3,6,5,-1,10,9,7,-2],[3,-7,-3,8,4,-4,-3,-1],[-10,-4,-6,9,6,-3,9,-1],[9,7,-10,1,-3,9,10,4],[6,7,2,8,-6,-2,-6,-7]],[[10,9,1,6,-7,-1,2,8],[-3,9,-3,-3,6,5,-8,-9],[8,-8,9,4,8,4,-3,7],[-9,1,-3,-2,10,3,2,6],[-7,9,-10,-2,10,-10,10,7]],[[6,-3,2,8,-3,-10,10,-4],[-2,-4,8,1,-2,1,8,1],[-7,1,-10,-3,-9,-7,-9,-7],[-6,3,9,-1,5,-4,9,-7],[10,8,-8,-4,-4,-7,3,-3]],[[-6,-4,2,-7,9,-10,-9,-7],[-4,8,5,-10,-2,-1,-10,6],[3,-3,7,-2,3,9,8,10],[10,-5,-9,-4,-9,-8,1,6],[-5,-9,-3,3,10,8,7,-9]],[[6,-3,-8,-8,2,-7,-3,7],[4,-2,-4,2,6,-3,8,9],[-7,-10,7,-3,5,4,-2,6],[8,4,-5,-9,6,2,-5,7],[1,-8,-5,-1,-10,10,9,-10]],[[6,-8,-10,-1,-8,-8,4,-6],[1,7,-6,8,-5,-8,4,9],[9,2,6,-4,8,7,9,9],[9,8,2,1,-2,-10,-4,8],[-8,-5,-6,9,2,4,-1,-1]],[[-6,-8,-5,-8,8,5,8,-7],[6,1,2,-5,-5,-6,-1,1],[-8,-10,9,-1,-5,-9,4,9],[10,3,7,-6,7,1,1,-9],[-10,-3,6,-6,-2,6,-4,7]]], dtype = "uint8")#candidate|5381|(8, 5, 8)|const|uint8
bop_5382 = relay.logical_xor(var_5380.astype('uint8'), const_5381.astype('uint8')) # shape=(8, 5, 8)
output = relay.Tuple([bop_5382,])
output2 = relay.Tuple([bop_5382,])
func_5389 = relay.Function([var_5380,], output)
mod['func_5389'] = func_5389
mod = relay.transform.InferType()(mod)
mutated_mod['func_5389'] = func_5389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5390 = relay.var("var_5390", dtype = "uint8", shape = (1, 5, 8))#candidate|5390|(1, 5, 8)|var|uint8
func_5389_call = mutated_mod.get_global_var('func_5389')
call_5391 = func_5389_call(var_5390)
output = call_5391
func_5392 = relay.Function([var_5390], output)
mutated_mod['func_5392'] = func_5392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5065_call = mod.get_global_var('func_5065')
func_5067_call = mutated_mod.get_global_var('func_5067')
call_5394 = relay.TupleGetItem(func_5065_call(), 1)
call_5395 = relay.TupleGetItem(func_5067_call(), 1)
var_5403 = relay.var("var_5403", dtype = "bool", shape = (11, 10, 2))#candidate|5403|(11, 10, 2)|var|bool
bop_5404 = relay.floor_mod(call_5394.astype('float32'), relay.reshape(var_5403.astype('float32'), relay.shape_of(call_5394))) # shape=(11, 10, 2)
bop_5407 = relay.floor_mod(call_5395.astype('float32'), relay.reshape(var_5403.astype('float32'), relay.shape_of(call_5395))) # shape=(11, 10, 2)
const_5411 = relay.const([[[True,True],[False,False],[False,True],[True,True],[False,False],[False,True],[False,True],[True,False],[True,False],[False,False]],[[False,True],[False,True],[False,True],[False,True],[True,True],[True,False],[False,False],[False,True],[True,False],[False,True]],[[False,False],[True,True],[False,False],[True,True],[False,True],[True,False],[False,False],[True,True],[True,True],[False,False]],[[True,True],[False,True],[True,True],[False,False],[True,False],[False,True],[True,True],[False,True],[True,True],[False,True]],[[False,False],[True,True],[False,False],[False,True],[True,False],[False,False],[True,False],[False,True],[True,False],[True,False]],[[True,True],[False,False],[False,False],[True,True],[False,True],[False,False],[True,True],[True,True],[True,True],[True,True]],[[True,True],[True,True],[True,True],[False,True],[False,True],[True,True],[True,True],[True,True],[False,False],[True,False]],[[True,True],[False,True],[True,False],[False,False],[True,True],[True,True],[False,True],[False,False],[False,False],[True,False]],[[True,False],[True,False],[False,False],[False,False],[False,True],[False,False],[False,False],[True,True],[False,True],[False,False]],[[True,True],[True,True],[False,True],[True,True],[True,False],[True,False],[True,True],[True,True],[True,True],[True,False]],[[False,True],[False,False],[True,True],[False,False],[False,False],[False,True],[True,True],[True,False],[False,False],[True,True]]], dtype = "bool")#candidate|5411|(11, 10, 2)|const|bool
bop_5412 = relay.right_shift(call_5394.astype('uint16'), relay.reshape(const_5411.astype('uint16'), relay.shape_of(call_5394))) # shape=(11, 10, 2)
bop_5415 = relay.right_shift(call_5395.astype('uint16'), relay.reshape(const_5411.astype('uint16'), relay.shape_of(call_5395))) # shape=(11, 10, 2)
func_4093_call = mod.get_global_var('func_4093')
func_4094_call = mutated_mod.get_global_var('func_4094')
call_5420 = relay.TupleGetItem(func_4093_call(), 0)
call_5421 = relay.TupleGetItem(func_4094_call(), 0)
func_4029_call = mod.get_global_var('func_4029')
func_4035_call = mutated_mod.get_global_var('func_4035')
var_5431 = relay.var("var_5431", dtype = "uint8", shape = (624,))#candidate|5431|(624,)|var|uint8
var_5432 = relay.var("var_5432", dtype = "bool", shape = (504,))#candidate|5432|(504,)|var|bool
call_5430 = relay.TupleGetItem(func_4029_call(relay.reshape(call_5420.astype('float32'), [11, 15, 15]), relay.reshape(call_5420.astype('bool'), [11, 15, 15]), relay.reshape(var_5431.astype('uint8'), [624,]), relay.reshape(var_5432.astype('bool'), [504,]), ), 4)
call_5433 = relay.TupleGetItem(func_4035_call(relay.reshape(call_5420.astype('float32'), [11, 15, 15]), relay.reshape(call_5420.astype('bool'), [11, 15, 15]), relay.reshape(var_5431.astype('uint8'), [624,]), relay.reshape(var_5432.astype('bool'), [504,]), ), 4)
output = relay.Tuple([bop_5404,bop_5412,call_5420,call_5430,var_5431,var_5432,])
output2 = relay.Tuple([bop_5407,bop_5415,call_5421,call_5433,var_5431,var_5432,])
func_5435 = relay.Function([var_5403,var_5431,var_5432,], output)
mod['func_5435'] = func_5435
mod = relay.transform.InferType()(mod)
var_5436 = relay.var("var_5436", dtype = "bool", shape = (11, 10, 2))#candidate|5436|(11, 10, 2)|var|bool
var_5437 = relay.var("var_5437", dtype = "uint8", shape = (624,))#candidate|5437|(624,)|var|uint8
var_5438 = relay.var("var_5438", dtype = "bool", shape = (504,))#candidate|5438|(504,)|var|bool
output = func_5435(var_5436,var_5437,var_5438,)
func_5439 = relay.Function([var_5436,var_5437,var_5438,], output)
mutated_mod['func_5439'] = func_5439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5445 = relay.var("var_5445", dtype = "float32", shape = (3, 2, 1))#candidate|5445|(3, 2, 1)|var|float32
uop_5446 = relay.cosh(var_5445.astype('float32')) # shape=(3, 2, 1)
output = uop_5446
output2 = uop_5446
func_5448 = relay.Function([var_5445,], output)
mod['func_5448'] = func_5448
mod = relay.transform.InferType()(mod)
mutated_mod['func_5448'] = func_5448
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5449 = relay.var("var_5449", dtype = "float32", shape = (3, 2, 1))#candidate|5449|(3, 2, 1)|var|float32
func_5448_call = mutated_mod.get_global_var('func_5448')
call_5450 = func_5448_call(var_5449)
output = call_5450
func_5451 = relay.Function([var_5449], output)
mutated_mod['func_5451'] = func_5451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4287_call = mod.get_global_var('func_4287')
func_4289_call = mutated_mod.get_global_var('func_4289')
call_5508 = relay.TupleGetItem(func_4287_call(), 0)
call_5509 = relay.TupleGetItem(func_4289_call(), 0)
func_2342_call = mod.get_global_var('func_2342')
func_2346_call = mutated_mod.get_global_var('func_2346')
var_5514 = relay.var("var_5514", dtype = "uint8", shape = (1, 110))#candidate|5514|(1, 110)|var|uint8
const_5515 = relay.const([-1,3,-7,2,-3,2,-9,-6,-2,3,9,-9,-3,5,-9,3,3,-5,3,6,-10,-3,-1,-1,-5,8,-2,-1,4,-6,-2,6,-5,6,6,-5,2,-7,-7,7,5,-6,-2,3,2,-10,8,-10,7,-2,-9,1,-5,6,1,5,-7,-2,-7,5,-4,-4,3,7,1,2,8,-3,4,-4,3,10,10,8,-8,-7,-10,-7,4,-4,3,6,1,-4,-1,1,-10,3,-4,-7,6,5,4,10,5,-4,-1,-2,2,-1,-6,6,-3,6,-9,-10,-9,-10,6,-1,-5,-1,-5,-1,9,-7,-6,1,-1,-7,-1,3,1,-1,5,-9,-6,7,3,8,3,7,10,9,4,-2,-2,-3,10,1,7,-6,-10,6,-2,-5,2,4,-9,-3,-8,6,-2,4,-4,-7,-5,-7,5,-10,10,2,9,-5,-9,-1,-5,-5,-7,-9,4,-5,-9,5,6,1,-3,1,10,-2,6,4,-2,10,-9,-2,7,1,-10,9,4,-5,2,-8,-1,9,-4,9,-3,-7,10,-3,-7,-2,-3,-4,-9,-3,-2,-3,-1,-10,-7,-5,10,3,1,6,2,-6,8,-3,8,10,-7,5,-7,-5,6,7,1,-5,-7,2,-8,6,8,-3,-5,6,-5,-10,-6,1,6,-7,7,1,10,5,10,3,3,4,-8,10,1,-10,-8,10,-6,-2,8,8,5,-7,-5,2,-8,-3,-7,2,4,9,-10,5,8,10,9,6,-1,10,7,1,-8,-2,9,5,5,-3,-4,4,6,-8,1,-2,10,8,5,1,-4,-10,-8,-4,10,-1,-8,4,8,-2,9,1,5,5,9,-3,2,5,10,-4,-1,-5,-9,-4,3,5,-9,1,8,-5], dtype = "uint8")#candidate|5515|(330,)|const|uint8
call_5513 = func_2342_call(relay.reshape(var_5514.astype('uint8'), [11, 1, 10]), relay.reshape(const_5515.astype('uint8'), [11, 3, 10]), )
call_5516 = func_2342_call(relay.reshape(var_5514.astype('uint8'), [11, 1, 10]), relay.reshape(const_5515.astype('uint8'), [11, 3, 10]), )
var_5518 = relay.var("var_5518", dtype = "uint8", shape = (4, 110))#candidate|5518|(4, 110)|var|uint8
bop_5519 = relay.divide(var_5514.astype('float64'), var_5518.astype('float64')) # shape=(4, 110)
uop_5527 = relay.log10(bop_5519.astype('float64')) # shape=(4, 110)
output = relay.Tuple([call_5508,call_5513,const_5515,uop_5527,])
output2 = relay.Tuple([call_5509,call_5516,const_5515,uop_5527,])
func_5529 = relay.Function([var_5514,var_5518,], output)
mod['func_5529'] = func_5529
mod = relay.transform.InferType()(mod)
mutated_mod['func_5529'] = func_5529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5529_call = mutated_mod.get_global_var('func_5529')
var_5531 = relay.var("var_5531", dtype = "uint8", shape = (1, 110))#candidate|5531|(1, 110)|var|uint8
var_5532 = relay.var("var_5532", dtype = "uint8", shape = (4, 110))#candidate|5532|(4, 110)|var|uint8
call_5530 = func_5529_call(var_5531,var_5532,)
output = call_5530
func_5533 = relay.Function([var_5531,var_5532,], output)
mutated_mod['func_5533'] = func_5533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3892_call = mod.get_global_var('func_3892')
func_3893_call = mutated_mod.get_global_var('func_3893')
call_5535 = relay.TupleGetItem(func_3892_call(), 0)
call_5536 = relay.TupleGetItem(func_3893_call(), 0)
func_5389_call = mod.get_global_var('func_5389')
func_5392_call = mutated_mod.get_global_var('func_5392')
var_5547 = relay.var("var_5547", dtype = "uint8", shape = (40,))#candidate|5547|(40,)|var|uint8
call_5546 = relay.TupleGetItem(func_5389_call(relay.reshape(var_5547.astype('uint8'), [1, 5, 8])), 0)
call_5548 = relay.TupleGetItem(func_5392_call(relay.reshape(var_5547.astype('uint8'), [1, 5, 8])), 0)
func_4029_call = mod.get_global_var('func_4029')
func_4035_call = mutated_mod.get_global_var('func_4035')
var_5555 = relay.var("var_5555", dtype = "uint8", shape = (624,))#candidate|5555|(624,)|var|uint8
var_5556 = relay.var("var_5556", dtype = "bool", shape = (36, 14))#candidate|5556|(36, 14)|var|bool
call_5554 = relay.TupleGetItem(func_4029_call(relay.reshape(call_5535.astype('float32'), [11, 15, 15]), relay.reshape(call_5535.astype('bool'), [11, 15, 15]), relay.reshape(var_5555.astype('uint8'), [624,]), relay.reshape(var_5556.astype('bool'), [504,]), ), 1)
call_5557 = relay.TupleGetItem(func_4035_call(relay.reshape(call_5535.astype('float32'), [11, 15, 15]), relay.reshape(call_5535.astype('bool'), [11, 15, 15]), relay.reshape(var_5555.astype('uint8'), [624,]), relay.reshape(var_5556.astype('bool'), [504,]), ), 1)
output = relay.Tuple([call_5535,call_5546,var_5547,call_5554,var_5555,var_5556,])
output2 = relay.Tuple([call_5536,call_5548,var_5547,call_5557,var_5555,var_5556,])
func_5558 = relay.Function([var_5547,var_5555,var_5556,], output)
mod['func_5558'] = func_5558
mod = relay.transform.InferType()(mod)
mutated_mod['func_5558'] = func_5558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5558_call = mutated_mod.get_global_var('func_5558')
var_5560 = relay.var("var_5560", dtype = "uint8", shape = (40,))#candidate|5560|(40,)|var|uint8
var_5561 = relay.var("var_5561", dtype = "uint8", shape = (624,))#candidate|5561|(624,)|var|uint8
var_5562 = relay.var("var_5562", dtype = "bool", shape = (36, 14))#candidate|5562|(36, 14)|var|bool
call_5559 = func_5558_call(var_5560,var_5561,var_5562,)
output = call_5559
func_5563 = relay.Function([var_5560,var_5561,var_5562,], output)
mutated_mod['func_5563'] = func_5563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5285_call = mod.get_global_var('func_5285')
func_5286_call = mutated_mod.get_global_var('func_5286')
call_5567 = func_5285_call()
call_5568 = func_5285_call()
output = relay.Tuple([call_5567,])
output2 = relay.Tuple([call_5568,])
func_5569 = relay.Function([], output)
mod['func_5569'] = func_5569
mod = relay.transform.InferType()(mod)
mutated_mod['func_5569'] = func_5569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5569_call = mutated_mod.get_global_var('func_5569')
call_5570 = func_5569_call()
output = call_5570
func_5571 = relay.Function([], output)
mutated_mod['func_5571'] = func_5571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5584 = relay.var("var_5584", dtype = "float64", shape = (3, 8, 13))#candidate|5584|(3, 8, 13)|var|float64
uop_5585 = relay.sinh(var_5584.astype('float64')) # shape=(3, 8, 13)
output = uop_5585
output2 = uop_5585
func_5600 = relay.Function([var_5584,], output)
mod['func_5600'] = func_5600
mod = relay.transform.InferType()(mod)
mutated_mod['func_5600'] = func_5600
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5601 = relay.var("var_5601", dtype = "float64", shape = (3, 8, 13))#candidate|5601|(3, 8, 13)|var|float64
func_5600_call = mutated_mod.get_global_var('func_5600')
call_5602 = func_5600_call(var_5601)
output = call_5602
func_5603 = relay.Function([var_5601], output)
mutated_mod['func_5603'] = func_5603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4505_call = mod.get_global_var('func_4505')
func_4507_call = mutated_mod.get_global_var('func_4507')
call_5619 = relay.TupleGetItem(func_4505_call(), 0)
call_5620 = relay.TupleGetItem(func_4507_call(), 0)
output = relay.Tuple([call_5619,])
output2 = relay.Tuple([call_5620,])
func_5621 = relay.Function([], output)
mod['func_5621'] = func_5621
mod = relay.transform.InferType()(mod)
mutated_mod['func_5621'] = func_5621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5621_call = mutated_mod.get_global_var('func_5621')
call_5622 = func_5621_call()
output = call_5622
func_5623 = relay.Function([], output)
mutated_mod['func_5623'] = func_5623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3909_call = mod.get_global_var('func_3909')
func_3910_call = mutated_mod.get_global_var('func_3910')
call_5626 = relay.TupleGetItem(func_3909_call(), 0)
call_5627 = relay.TupleGetItem(func_3910_call(), 0)
output = relay.Tuple([call_5626,])
output2 = relay.Tuple([call_5627,])
func_5643 = relay.Function([], output)
mod['func_5643'] = func_5643
mod = relay.transform.InferType()(mod)
mutated_mod['func_5643'] = func_5643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5643_call = mutated_mod.get_global_var('func_5643')
call_5644 = func_5643_call()
output = call_5644
func_5645 = relay.Function([], output)
mutated_mod['func_5645'] = func_5645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4287_call = mod.get_global_var('func_4287')
func_4289_call = mutated_mod.get_global_var('func_4289')
call_5664 = relay.TupleGetItem(func_4287_call(), 0)
call_5665 = relay.TupleGetItem(func_4289_call(), 0)
output = call_5664
output2 = call_5665
func_5666 = relay.Function([], output)
mod['func_5666'] = func_5666
mod = relay.transform.InferType()(mod)
output = func_5666()
func_5667 = relay.Function([], output)
mutated_mod['func_5667'] = func_5667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5065_call = mod.get_global_var('func_5065')
func_5067_call = mutated_mod.get_global_var('func_5067')
call_5673 = relay.TupleGetItem(func_5065_call(), 1)
call_5674 = relay.TupleGetItem(func_5067_call(), 1)
output = relay.Tuple([call_5673,])
output2 = relay.Tuple([call_5674,])
func_5683 = relay.Function([], output)
mod['func_5683'] = func_5683
mod = relay.transform.InferType()(mod)
mutated_mod['func_5683'] = func_5683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5683_call = mutated_mod.get_global_var('func_5683')
call_5684 = func_5683_call()
output = call_5684
func_5685 = relay.Function([], output)
mutated_mod['func_5685'] = func_5685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5065_call = mod.get_global_var('func_5065')
func_5067_call = mutated_mod.get_global_var('func_5067')
call_5689 = relay.TupleGetItem(func_5065_call(), 1)
call_5690 = relay.TupleGetItem(func_5067_call(), 1)
func_4989_call = mod.get_global_var('func_4989')
func_4993_call = mutated_mod.get_global_var('func_4993')
const_5702 = relay.const([0.818322,5.137768,-7.590431,-8.308051,-1.944743,-5.233230,-3.441241,2.424835,0.770697,-8.540753,9.339585,-1.847994,-4.893901,4.443093,4.501951,3.047051,0.351019,-6.984666,-2.082851,9.658324,5.391595,2.307124,5.219335,8.785033,-2.094331,5.279823,3.425833,7.710079,-7.752521,2.223666,5.898651,-1.602120], dtype = "float64")#candidate|5702|(32,)|const|float64
const_5703 = relay.const([0.577533,7.190991,-3.371300,-9.056645,8.573912,-9.565623,-7.247121,-0.927898,8.136693,4.036444,-0.363753,3.543247,3.628121,-1.031556,-7.528754,-0.762000,-6.726406,0.144828,6.213323,-7.345549,0.099246,-0.699870,-0.458939,-7.218357,-3.002810,8.521341,-2.503586,-7.000441,-7.888233,9.376639,9.109814,-4.377496,8.509229,-3.558344,-0.468136,1.421029,1.060465,6.301697,-1.603436,9.392356,1.993760,0.870030,9.005088,4.638200,2.257210,5.187658,-8.565970,-9.102310,6.546647,-9.252192,-6.602275,5.874134,2.284918,8.616502], dtype = "float32")#candidate|5703|(54,)|const|float32
call_5701 = relay.TupleGetItem(func_4989_call(relay.reshape(const_5702.astype('float64'), [2, 8, 2]), relay.reshape(const_5703.astype('float32'), [9, 6]), ), 5)
call_5704 = relay.TupleGetItem(func_4993_call(relay.reshape(const_5702.astype('float64'), [2, 8, 2]), relay.reshape(const_5703.astype('float32'), [9, 6]), ), 5)
output = relay.Tuple([call_5689,call_5701,const_5702,const_5703,])
output2 = relay.Tuple([call_5690,call_5704,const_5702,const_5703,])
func_5710 = relay.Function([], output)
mod['func_5710'] = func_5710
mod = relay.transform.InferType()(mod)
mutated_mod['func_5710'] = func_5710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5710_call = mutated_mod.get_global_var('func_5710')
call_5711 = func_5710_call()
output = call_5711
func_5712 = relay.Function([], output)
mutated_mod['func_5712'] = func_5712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4505_call = mod.get_global_var('func_4505')
func_4507_call = mutated_mod.get_global_var('func_4507')
call_5784 = relay.TupleGetItem(func_4505_call(), 0)
call_5785 = relay.TupleGetItem(func_4507_call(), 0)
var_5790 = relay.var("var_5790", dtype = "float32", shape = (11, 15, 15))#candidate|5790|(11, 15, 15)|var|float32
bop_5791 = relay.power(call_5784.astype('float32'), relay.reshape(var_5790.astype('float32'), relay.shape_of(call_5784))) # shape=(11, 15, 15)
bop_5794 = relay.power(call_5785.astype('float32'), relay.reshape(var_5790.astype('float32'), relay.shape_of(call_5785))) # shape=(11, 15, 15)
func_5096_call = mod.get_global_var('func_5096')
func_5100_call = mutated_mod.get_global_var('func_5100')
const_5829 = relay.const([-3.608910,1.647084,0.913946,9.856198,0.992964,-6.154585,8.406153,-1.857330,3.238870,0.794524,-3.769541,-3.820052,3.201104,-1.291414,2.231739,8.752512,-8.780113,7.118716,-5.670361,-8.860702,8.557334,1.340626,3.192469,4.186896,-0.760599,4.134750,-0.320292,0.860113,-9.938315,-0.555468,-3.105741,-4.463605,-1.703290,2.154053,-5.548102,6.713049,-3.125996,2.200942,-6.097773,-3.504315,7.011690,-9.289507,4.486833,5.982957,7.403834,0.247065,6.170663,-9.742746,-4.233563,-6.969140,-4.252440,-8.354139,-1.341900,-4.713213], dtype = "float32")#candidate|5829|(54,)|const|float32
const_5830 = relay.const([False,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,False], dtype = "bool")#candidate|5830|(504,)|const|bool
call_5828 = relay.TupleGetItem(func_5096_call(relay.reshape(const_5829.astype('float32'), [54,]), relay.reshape(const_5830.astype('bool'), [504,]), ), 1)
call_5831 = relay.TupleGetItem(func_5100_call(relay.reshape(const_5829.astype('float32'), [54,]), relay.reshape(const_5830.astype('bool'), [504,]), ), 1)
func_411_call = mod.get_global_var('func_411')
func_414_call = mutated_mod.get_global_var('func_414')
call_5832 = relay.TupleGetItem(func_411_call(relay.reshape(const_5830.astype('bool'), [7, 12, 6]), relay.reshape(const_5830.astype('bool'), [7, 12, 6]), ), 0)
call_5833 = relay.TupleGetItem(func_414_call(relay.reshape(const_5830.astype('bool'), [7, 12, 6]), relay.reshape(const_5830.astype('bool'), [7, 12, 6]), ), 0)
output = relay.Tuple([bop_5791,call_5828,const_5829,const_5830,call_5832,])
output2 = relay.Tuple([bop_5794,call_5831,const_5829,const_5830,call_5833,])
func_5838 = relay.Function([var_5790,], output)
mod['func_5838'] = func_5838
mod = relay.transform.InferType()(mod)
var_5839 = relay.var("var_5839", dtype = "float32", shape = (11, 15, 15))#candidate|5839|(11, 15, 15)|var|float32
output = func_5838(var_5839)
func_5840 = relay.Function([var_5839], output)
mutated_mod['func_5840'] = func_5840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5182_call = mod.get_global_var('func_5182')
func_5183_call = mutated_mod.get_global_var('func_5183')
call_5862 = relay.TupleGetItem(func_5182_call(), 0)
call_5863 = relay.TupleGetItem(func_5183_call(), 0)
func_3892_call = mod.get_global_var('func_3892')
func_3893_call = mutated_mod.get_global_var('func_3893')
call_5865 = relay.TupleGetItem(func_3892_call(), 0)
call_5866 = relay.TupleGetItem(func_3893_call(), 0)
output = relay.Tuple([call_5862,call_5865,])
output2 = relay.Tuple([call_5863,call_5866,])
func_5872 = relay.Function([], output)
mod['func_5872'] = func_5872
mod = relay.transform.InferType()(mod)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mutated_mod.get_global_var('func_5872')
call_5873 = func_5872_call()
output = call_5873
func_5874 = relay.Function([], output)
mutated_mod['func_5874'] = func_5874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4910_call = mod.get_global_var('func_4910')
func_4912_call = mutated_mod.get_global_var('func_4912')
call_5910 = relay.TupleGetItem(func_4910_call(), 0)
call_5911 = relay.TupleGetItem(func_4912_call(), 0)
func_3909_call = mod.get_global_var('func_3909')
func_3910_call = mutated_mod.get_global_var('func_3910')
call_5914 = relay.TupleGetItem(func_3909_call(), 0)
call_5915 = relay.TupleGetItem(func_3910_call(), 0)
func_5366_call = mod.get_global_var('func_5366')
func_5367_call = mutated_mod.get_global_var('func_5367')
call_5925 = relay.TupleGetItem(func_5366_call(), 0)
call_5926 = relay.TupleGetItem(func_5367_call(), 0)
func_4735_call = mod.get_global_var('func_4735')
func_4737_call = mutated_mod.get_global_var('func_4737')
call_5929 = func_4735_call()
call_5930 = func_4735_call()
output = relay.Tuple([call_5910,call_5914,call_5925,call_5929,])
output2 = relay.Tuple([call_5911,call_5915,call_5926,call_5930,])
func_5943 = relay.Function([], output)
mod['func_5943'] = func_5943
mod = relay.transform.InferType()(mod)
mutated_mod['func_5943'] = func_5943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5943_call = mutated_mod.get_global_var('func_5943')
call_5944 = func_5943_call()
output = call_5944
func_5945 = relay.Function([], output)
mutated_mod['func_5945'] = func_5945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_5956 = relay.TupleGetItem(func_5872_call(), 1)
call_5957 = relay.TupleGetItem(func_5874_call(), 1)
func_5096_call = mod.get_global_var('func_5096')
func_5100_call = mutated_mod.get_global_var('func_5100')
var_5961 = relay.var("var_5961", dtype = "float32", shape = (54,))#candidate|5961|(54,)|var|float32
var_5962 = relay.var("var_5962", dtype = "bool", shape = (504,))#candidate|5962|(504,)|var|bool
call_5960 = relay.TupleGetItem(func_5096_call(relay.reshape(var_5961.astype('float32'), [54,]), relay.reshape(var_5962.astype('bool'), [504,]), ), 0)
call_5963 = relay.TupleGetItem(func_5100_call(relay.reshape(var_5961.astype('float32'), [54,]), relay.reshape(var_5962.astype('bool'), [504,]), ), 0)
func_1674_call = mod.get_global_var('func_1674')
func_1679_call = mutated_mod.get_global_var('func_1679')
const_5975 = relay.const([[False,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False]], dtype = "bool")#candidate|5975|(1, 252)|const|bool
call_5974 = relay.TupleGetItem(func_1674_call(relay.reshape(const_5975.astype('bool'), [12, 3, 7]), relay.reshape(var_5962.astype('bool'), [504,]), relay.reshape(var_5961.astype('float32'), [54,]), ), 0)
call_5976 = relay.TupleGetItem(func_1679_call(relay.reshape(const_5975.astype('bool'), [12, 3, 7]), relay.reshape(var_5962.astype('bool'), [504,]), relay.reshape(var_5961.astype('float32'), [54,]), ), 0)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_6006 = relay.TupleGetItem(func_5872_call(), 0)
call_6007 = relay.TupleGetItem(func_5874_call(), 0)
func_4505_call = mod.get_global_var('func_4505')
func_4507_call = mutated_mod.get_global_var('func_4507')
call_6011 = relay.TupleGetItem(func_4505_call(), 0)
call_6012 = relay.TupleGetItem(func_4507_call(), 0)
func_2342_call = mod.get_global_var('func_2342')
func_2346_call = mutated_mod.get_global_var('func_2346')
var_6019 = relay.var("var_6019", dtype = "uint8", shape = (110,))#candidate|6019|(110,)|var|uint8
var_6020 = relay.var("var_6020", dtype = "uint8", shape = (330,))#candidate|6020|(330,)|var|uint8
call_6018 = func_2342_call(relay.reshape(var_6019.astype('uint8'), [11, 1, 10]), relay.reshape(var_6020.astype('uint8'), [11, 3, 10]), )
call_6021 = func_2342_call(relay.reshape(var_6019.astype('uint8'), [11, 1, 10]), relay.reshape(var_6020.astype('uint8'), [11, 3, 10]), )
func_1582_call = mod.get_global_var('func_1582')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_6033 = relay.TupleGetItem(func_1582_call(relay.reshape(var_5961.astype('float32'), [1, 9, 6]), relay.reshape(var_5962.astype('bool'), [504,]), ), 1)
call_6034 = relay.TupleGetItem(func_1585_call(relay.reshape(var_5961.astype('float32'), [1, 9, 6]), relay.reshape(var_5962.astype('bool'), [504,]), ), 1)
uop_6044 = relay.cosh(call_5974.astype('float32')) # shape=(7, 12, 6)
uop_6046 = relay.cosh(call_5976.astype('float32')) # shape=(7, 12, 6)
func_5643_call = mod.get_global_var('func_5643')
func_5645_call = mutated_mod.get_global_var('func_5645')
call_6054 = relay.TupleGetItem(func_5643_call(), 0)
call_6055 = relay.TupleGetItem(func_5645_call(), 0)
func_2342_call = mod.get_global_var('func_2342')
func_2346_call = mutated_mod.get_global_var('func_2346')
call_6059 = func_2342_call(relay.reshape(var_6019.astype('uint8'), [11, 1, 10]), relay.reshape(var_6020.astype('uint8'), [11, 3, 10]), )
call_6060 = func_2342_call(relay.reshape(var_6019.astype('uint8'), [11, 1, 10]), relay.reshape(var_6020.astype('uint8'), [11, 3, 10]), )
output = relay.Tuple([call_5956,call_5960,var_5961,var_5962,const_5975,call_6006,call_6011,call_6018,var_6019,var_6020,call_6033,uop_6044,call_6054,call_6059,])
output2 = relay.Tuple([call_5957,call_5963,var_5961,var_5962,const_5975,call_6007,call_6012,call_6021,var_6019,var_6020,call_6034,uop_6046,call_6055,call_6060,])
func_6062 = relay.Function([var_5961,var_5962,var_6019,var_6020,], output)
mod['func_6062'] = func_6062
mod = relay.transform.InferType()(mod)
var_6063 = relay.var("var_6063", dtype = "float32", shape = (54,))#candidate|6063|(54,)|var|float32
var_6064 = relay.var("var_6064", dtype = "bool", shape = (504,))#candidate|6064|(504,)|var|bool
var_6065 = relay.var("var_6065", dtype = "uint8", shape = (110,))#candidate|6065|(110,)|var|uint8
var_6066 = relay.var("var_6066", dtype = "uint8", shape = (330,))#candidate|6066|(330,)|var|uint8
output = func_6062(var_6063,var_6064,var_6065,var_6066,)
func_6067 = relay.Function([var_6063,var_6064,var_6065,var_6066,], output)
mutated_mod['func_6067'] = func_6067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5710_call = mod.get_global_var('func_5710')
func_5712_call = mutated_mod.get_global_var('func_5712')
call_6072 = relay.TupleGetItem(func_5710_call(), 1)
call_6073 = relay.TupleGetItem(func_5712_call(), 1)
var_6077 = relay.var("var_6077", dtype = "float32", shape = (2, 8, 2))#candidate|6077|(2, 8, 2)|var|float32
bop_6078 = relay.floor_divide(call_6072.astype('float32'), relay.reshape(var_6077.astype('float32'), relay.shape_of(call_6072))) # shape=(2, 8, 2)
bop_6081 = relay.floor_divide(call_6073.astype('float32'), relay.reshape(var_6077.astype('float32'), relay.shape_of(call_6073))) # shape=(2, 8, 2)
func_5065_call = mod.get_global_var('func_5065')
func_5067_call = mutated_mod.get_global_var('func_5067')
call_6100 = relay.TupleGetItem(func_5065_call(), 0)
call_6101 = relay.TupleGetItem(func_5067_call(), 0)
const_6106 = relay.const([[[5.354201,6.372076],[3.049737,-6.877765],[6.271748,-9.820695],[-1.117315,0.912990],[-8.286209,-2.655754],[-9.662149,-8.147923],[-4.724212,8.062673],[-3.738384,-6.672846]],[[8.088485,-6.580614],[-6.150123,4.030155],[6.604585,-2.068264],[4.577118,-1.359344],[-6.385179,-1.278045],[-0.589289,2.832692],[-3.632067,1.933635],[3.092306,-0.432157]]], dtype = "float32")#candidate|6106|(2, 8, 2)|const|float32
bop_6107 = relay.divide(bop_6078.astype('float32'), relay.reshape(const_6106.astype('float32'), relay.shape_of(bop_6078))) # shape=(2, 8, 2)
bop_6110 = relay.divide(bop_6081.astype('float32'), relay.reshape(const_6106.astype('float32'), relay.shape_of(bop_6081))) # shape=(2, 8, 2)
output = relay.Tuple([call_6100,bop_6107,])
output2 = relay.Tuple([call_6101,bop_6110,])
func_6123 = relay.Function([var_6077,], output)
mod['func_6123'] = func_6123
mod = relay.transform.InferType()(mod)
mutated_mod['func_6123'] = func_6123
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6124 = relay.var("var_6124", dtype = "float32", shape = (2, 8, 2))#candidate|6124|(2, 8, 2)|var|float32
func_6123_call = mutated_mod.get_global_var('func_6123')
call_6125 = func_6123_call(var_6124)
output = call_6125
func_6126 = relay.Function([var_6124], output)
mutated_mod['func_6126'] = func_6126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5621_call = mod.get_global_var('func_5621')
func_5623_call = mutated_mod.get_global_var('func_5623')
call_6140 = relay.TupleGetItem(func_5621_call(), 0)
call_6141 = relay.TupleGetItem(func_5623_call(), 0)
func_1582_call = mod.get_global_var('func_1582')
func_1585_call = mutated_mod.get_global_var('func_1585')
var_6149 = relay.var("var_6149", dtype = "float32", shape = (54,))#candidate|6149|(54,)|var|float32
const_6150 = relay.const([True,True,False,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,False,False,True,False,True,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,False,False,False,False,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False], dtype = "bool")#candidate|6150|(504,)|const|bool
call_6148 = relay.TupleGetItem(func_1582_call(relay.reshape(var_6149.astype('float32'), [1, 9, 6]), relay.reshape(const_6150.astype('bool'), [504,]), ), 3)
call_6151 = relay.TupleGetItem(func_1585_call(relay.reshape(var_6149.astype('float32'), [1, 9, 6]), relay.reshape(const_6150.astype('bool'), [504,]), ), 3)
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_6159 = relay.TupleGetItem(func_4175_call(), 0)
call_6160 = relay.TupleGetItem(func_4176_call(), 0)
func_4897_call = mod.get_global_var('func_4897')
func_4901_call = mutated_mod.get_global_var('func_4901')
const_6163 = relay.const([[8,-7,3,-8,7,7,8,-5,-6,-9,-7,5,-2,-5,-9,-10,-10,-2,8,-6,-7,-5,4,9,4,1,1,-9,2,-1,-5,-8,7,-2,1,9,2,-4,-4,6,-2,-1,-2,-7,4,-7,-8,-8,8,-9,-9,-8,10,7,4,-2,-2,-1,-3,1,8,-10,7,-1,-9,4,9,-9,2,3,-1,4,1,-8,-8,6,8,-4,6,-10,6,-3,3,-5,9,-3,-6,4,4,2,2,10,3,-7,-9,-4,-10,-1,-10,-10,-4,-7,-1,8,4,9,-7,10,-1,9,-3,-9,1,-5,-6,-7,-7,-3,-9,4,-10,-1,-2,-6,-7,4,-9,2,3,-10,4,1,6,-2,6,8,8,2,-2,4,-5,-1,1,4,-5,-5,4,10,2,2,-7,4,2,7,4,5,-10,-6,4,-7,6,7,9,-9,1,-1,-4,6,-2,-3,-4,8,7,-5,5,9,5,1,-3,-7,4,3,-6,5,3,4,6,-1,7,-5,7,6,-10,-6,-7,-9,4,8,-10,5,1,-1,5,-4,-8,-7,-3,-9,-9,-7,-1,-9,8,-2,-2,-4,-8,4,6,8,-4,-1,9,1,-6,-8,5,-1,-7,-3,-9,4,1,3,-3,-3,7,8,-7,-5,7,9,1,5,2,8,5,3,9,5,-10,-1,-6,4,-7,-6,2,-8,-7,2,-3,5,2,5,-5,-3,1,-1,-4,10,-3,6,2,-10,-9,10,-5,-9,10,-6,6,-9,5,6,4,3,-10,5,-4,-1,-9,2,-4,9,-7,-1,6,2,10,3,1,9,4,3,9,1,-5,-2,-6,-6,-7,7,-5,-7,4,8,5,-9,3,8,-8,-2,4,3,-4,-2,-6,-4,-8,7,-10,-9,4,5,10,9,-2,10,-4,5,-3,-9,-6,9,4,5,-3,-9,2,2,7,7,-2,-5,-1,-6,-7,-3,-8,6,10,-5,6,8,8,-8,-3,6,6,-4,2,-1,-5,-4,9,-6,-1,-2,5,-5,-1,-7,1,-2,5,-4,-5,9,-9,4,5,7,-1,5,8,-8,-6,-3,-10,-4,10,5,-4,7,7,3,3,8,-8,9,-4,9,4,6,7,-3,9,4,2,7,7,1,-2,2,-3,-8,-8,4,-8,-9,10,6,8,3,5,9,-1,-10,1,-5,-2,9,1,-3,-6,6,4,7,3,-2,-1,-8,3,-7,9,1,6,-3,-5,-6,1,-7,5,7,-4,-6,-1,-1,-2,3,10,-7,3,-3,-8,-9,10,-6,-2,3,-1,2,3,10,-2,1,6,10,7,8,-2,-6,5,-7,4,-2,9,9,-9,-9,4,7,-7,-7,-10,-2,2,-5,8,3,-2,-9,10,4,8,10,-5,-2,-4,9,-6,8,-6,6,-5,-10,-3,-9,-6,2,-8,6,1,-10,-8,1,-9,-1,-10,-3,-3,1,9,-9,-2,-8,3,-8,3,9,6,-5,-7,-1,3,-1,6,-4,-3,-9,4,-9,-3,-1,-2,8,-10,-4,9,-5,9,1,-1,8,6,1,7,6,5,-8,10,7,-1,1,4,4,-4,-9,-8,9,6,-5,-9,5,-10,3,3,4,-10,-5,10,10,-2,1,5,5,1,4,-3,-4,-4,-5,-6,10,-3,-4,4,-7,2,8,9,9,-5,9,-6,3,9,-6,6,-5,-10,-1,3,-1,-7,2,-4,5,-8,7,7,-1,-7,-3,2,3,-7,6,-4,2,-8,9,-7,-1,-9,6,-10,2,5,-2,5,9,-10,9,6,7,-8,-5,-1,10,9,-5,3,8,-3,5,6,10,-2,1,-2,1,-7,5,-5,9,10,-4,-3,3,3,-6,3,-6,-4,-1,7,6,-8,-5,7,8,-2,-2,-5,1,-2,-8,10,8,-2,10,-10,-7,-9,-1,8,4,4,-5,1,-8,2,8,3,-7,4,6],[4,-2,8,9,-5,-6,-1,9,-6,8,4,-1,1,-1,5,-1,-3,-4,-8,-6,10,-3,4,6,8,9,10,-8,8,-8,-7,4,3,10,4,6,2,6,9,8,-4,9,1,-4,5,3,-2,1,-8,-7,-6,6,-2,6,4,9,2,-3,3,3,-1,9,5,9,10,-6,10,-6,4,-2,-5,8,8,2,9,9,-2,-3,10,-10,9,9,-8,10,7,2,-4,1,2,-5,-9,-4,5,-7,1,-7,1,-10,5,1,-5,-5,-3,-2,2,-7,2,-1,9,3,-3,-10,10,-3,1,6,7,4,-8,7,4,8,-7,2,-6,8,7,6,-10,-2,-3,7,-8,1,9,-5,-2,-6,3,-5,-5,10,2,9,5,5,10,9,4,5,6,6,-6,-8,-10,-9,7,9,5,1,9,-9,9,8,-6,7,-4,3,-5,8,6,-2,-9,4,9,6,-3,-9,-3,-6,-10,2,-5,-4,7,-10,1,8,5,6,7,-3,8,-3,-1,-9,-1,6,7,-8,2,-7,-10,-3,-7,8,-2,6,-7,9,9,10,1,8,4,2,6,10,-6,-2,1,-9,-4,-3,6,-8,9,5,-2,8,10,5,-3,3,-8,-4,-8,-2,-8,1,8,-8,-7,-9,-5,6,-8,3,-6,3,-3,2,10,2,-10,1,-4,5,2,-10,-10,2,9,-1,2,-6,-1,-8,4,-8,-5,-2,-7,-10,-10,6,9,10,-3,-1,-5,4,7,4,2,-6,10,-7,5,-8,10,-5,-1,-8,-5,1,-8,-3,-5,-8,10,5,4,-9,-1,-3,10,-3,4,3,-10,9,-7,5,-1,10,-7,-3,9,9,10,5,2,9,7,7,-6,7,1,9,5,5,-6,-4,-2,-7,6,10,-7,-8,-3,-4,-1,6,3,4,-5,-3,-7,6,-1,-2,4,-9,-3,7,-1,-4,-2,-4,4,-6,-7,1,-7,7,-1,-6,-1,8,-1,-9,-8,5,-1,-6,7,5,-10,-1,-5,-4,5,3,-5,1,8,8,-1,5,-2,-9,2,4,-4,10,3,-8,-5,8,4,8,9,7,9,-4,-2,1,-10,-9,-1,-4,4,-5,-4,1,-10,1,4,-1,-1,-5,9,10,-2,4,9,-10,-1,-4,-7,5,5,-9,8,-2,-5,2,5,-3,-3,2,6,-7,-6,6,-9,1,8,10,7,5,-9,8,-10,-10,-10,7,4,-7,-6,-2,-3,-6,2,-7,8,-3,-10,2,1,-3,4,-1,3,-9,-8,-3,-5,-1,4,7,9,-2,10,9,6,6,-3,10,-2,6,-3,8,7,-6,7,-7,-3,7,3,-7,-1,10,-8,1,-3,-10,7,6,-9,-7,4,-7,2,-2,-10,-5,2,7,10,-1,-5,9,1,8,-8,8,-8,10,-9,-9,9,-1,1,-2,6,-4,-4,-4,10,7,-6,1,2,-6,-2,-1,8,4,10,10,1,8,1,-2,-2,9,4,2,1,-6,-4,8,8,3,9,-3,-9,6,3,-1,7,-2,1,-8,3,-7,-10,1,6,8,-7,-6,2,-6,-1,9,-6,8,9,10,-9,-1,2,7,-3,-3,-5,-7,-4,3,10,1,7,3,-5,-7,10,1,9,-9,-4,5,5,8,6,5,5,4,-5,-7,-2,3,2,3,4,6,-6,7,2,1,9,6,1,-6,-6,7,7,9,5,-1,-6,7,5,-3,1,6,1,-6,1,9,4,5,-7,1,6,1,8,-4,-3,-1,-5,6,1,8,-3,7,-4,-7,7,-3,9,-7,-1,1,9,8,-10,-10,8,1,7,-9,4,-2,-3,6,-6,-8,-3,10,-10,6,5,-1,1,4,-3,9,-8,-8,5,-2,6,-9,-8,1,-7,8,-2,-7,-2,-1,6,2,-2,-7,-6,-7,9,-3,4,5,-2,7,3,-7],[7,-1,9,-10,-6,7,6,-6,9,-1,7,6,10,-5,9,9,-1,10,-4,10,-7,-5,10,-9,-3,4,10,-1,-5,-3,-10,2,-3,-1,5,8,-8,-7,4,-9,-8,-9,7,9,8,-8,-4,-10,-3,3,-4,-1,6,1,4,9,5,2,-9,5,5,-6,2,-8,-8,-4,-4,5,3,-9,7,10,-7,-5,-7,6,4,3,-1,-2,3,-9,10,-6,9,-9,7,-10,6,-3,-6,5,2,-5,-8,-9,-4,8,2,7,1,-10,9,-3,5,-8,-4,10,-10,8,-3,-6,7,1,8,-3,-3,-9,4,7,-9,-2,-7,-8,7,-4,-5,7,4,3,5,-5,10,-3,10,-4,7,2,8,3,-8,-8,-7,6,3,7,5,6,-10,2,1,8,1,1,2,7,-1,2,9,3,-9,-10,4,2,7,3,9,7,3,-1,4,-4,2,4,6,-3,-10,9,-1,10,-4,-7,6,5,1,-2,-2,9,2,5,-3,-3,1,8,5,-1,9,-4,-3,-4,-2,9,-3,-8,-4,-3,1,-1,-9,6,5,5,-7,-10,-5,-5,1,1,-4,6,-1,-6,-8,7,-6,-1,2,4,4,-10,-8,-4,-10,-10,-5,4,-9,10,-7,-5,2,3,-4,5,-3,-7,-3,10,7,8,10,5,4,7,4,4,1,-2,-6,-5,6,-8,2,-2,9,8,-4,1,10,-9,1,2,3,-1,3,-6,5,-7,3,5,-1,-3,7,5,1,4,7,8,-10,-9,-4,-3,10,-7,3,-6,6,-1,5,-2,8,-10,4,7,6,10,-2,8,-4,4,8,2,-1,-9,-9,-3,-1,-5,1,-10,9,-9,-10,10,4,1,-6,-8,-8,-5,1,5,1,6,2,-10,-3,-2,6,9,8,3,-5,-4,9,-1,5,2,-5,-9,2,10,10,8,-7,-7,-9,10,-3,-8,-2,-3,-4,-5,1,10,5,9,-3,1,-6,-5,-1,8,1,-6,-6,2,-4,-10,2,8,-1,3,4,4,-2,-4,7,-7,-9,-1,-2,4,9,10,-6,-9,5,-3,-5,10,7,2,-7,2,2,10,6,7,-2,7,5,-6,-5,3,5,9,9,-6,10,4,-1,3,2,3,9,3,5,8,8,1,-7,5,-2,4,-1,6,-3,-7,1,1,9,3,3,3,-3,7,5,-5,5,10,8,-7,-5,7,4,5,2,-5,-1,6,-3,3,-7,6,8,7,2,-8,-8,-2,-3,-6,-6,9,1,1,-10,-3,-3,-8,-5,-8,9,-5,-10,-9,-5,-7,-10,-8,4,7,2,-1,-9,7,-4,-10,-10,9,-1,5,7,-6,-10,10,-2,8,-6,-10,-7,-8,1,-5,-4,-4,-5,2,-3,-1,-3,-9,-7,-10,5,8,6,-5,8,1,-4,-9,-6,-5,1,3,6,-10,8,-7,-1,-7,3,-7,1,2,-5,-6,-4,-9,6,1,-4,6,3,7,8,-5,5,9,2,-1,4,7,8,-3,9,-8,-4,-7,6,5,9,5,3,-1,-7,1,2,9,5,-6,-3,7,7,-6,-7,6,-10,1,-7,8,7,-5,-1,-8,-4,9,9,7,-10,-8,6,5,7,9,10,-5,-1,5,5,-6,-10,-8,-1,-4,10,7,7,1,-8,7,-2,-5,5,4,-5,-6,-5,5,-1,-6,10,6,5,-9,-10,3,1,4,9,-3,-8,1,-5,-1,3,7,1,1,3,-1,8,-4,1,2,-5,4,6,-7,2,-9,-5,10,-2,-4,-1,-7,-8,-8,8,-8,-7,-6,-2,5,-1,10,-1,-6,1,7,4,3,-4,10,2,-4,-2,1,-3,7,1,4,10,-4,-9,-5,4,2,10,9,-9,1,3,-5,-10,-2,10,4,5,10,-8,6,6,9,9,-10,-1,2,-2,-2,-9,-5,10,8],[-7,1,7,7,-5,-9,-4,-7,-9,1,-5,-6,-7,5,10,7,4,-1,5,-4,6,-7,4,5,4,-7,-1,3,-5,9,2,1,4,-6,-3,1,4,8,-3,-1,3,6,-2,1,-9,-3,4,8,-7,9,5,-9,-8,-8,2,-8,9,8,-2,9,7,2,-7,3,5,5,-2,10,1,-2,7,-7,-3,8,-4,-7,-10,-4,1,2,-9,-7,-9,-10,-5,3,-2,8,7,-1,4,2,8,10,5,-7,-7,5,3,6,8,2,2,-5,8,10,5,6,9,-5,6,-7,8,10,-9,-1,-10,9,3,-2,2,-2,3,-10,-2,5,9,-4,5,-2,2,3,6,-3,8,1,7,-6,-9,-3,1,2,1,1,-10,4,6,-6,-1,-3,-6,8,-6,-4,-9,8,6,-4,-6,6,-5,9,-8,-4,-4,6,1,-3,-8,-4,5,-9,-3,-9,5,4,6,3,-8,2,4,-2,-2,2,2,-7,9,8,-8,-9,-2,4,6,-1,2,6,1,-1,-3,-5,8,-1,-7,-6,-8,9,-10,10,-8,-2,-2,8,-8,-8,-1,-7,-4,-5,9,-7,8,9,-7,-8,7,7,10,-5,-4,1,-4,6,9,1,1,-5,2,-9,-2,-5,-6,-10,-10,9,8,3,10,-1,9,7,10,10,-5,-2,-7,5,1,-4,-10,9,2,-1,-9,1,4,9,9,5,-10,10,6,-3,-3,-2,-7,-3,2,3,-6,-1,-2,4,10,5,8,9,3,3,-6,-10,-3,-4,-7,-8,1,5,10,5,9,-1,-5,1,4,-7,6,-5,-2,-7,8,-4,-3,-4,-8,-4,-7,4,-9,4,-10,4,-8,-8,-10,9,-8,-10,-4,5,-3,9,-8,-4,1,-8,6,-6,3,-5,8,-4,9,-9,-8,4,-7,-1,-7,10,2,-8,4,-5,9,1,-3,4,-10,-4,-9,-8,-3,-1,-6,10,-1,-8,-4,1,10,3,-10,5,9,-6,10,-7,5,-3,9,8,-2,6,-9,1,10,3,10,7,7,-2,-9,10,-4,-6,-6,4,1,6,-6,9,3,-5,-10,-6,8,-4,4,-3,-6,-3,3,2,5,4,-9,7,-7,-6,-7,-3,-8,-1,2,-3,3,3,-3,-10,3,2,-10,-3,-1,1,-1,2,3,4,-9,6,-4,8,1,8,3,-5,8,8,-9,7,5,-9,-3,6,3,4,8,-7,-1,5,6,8,10,-3,-7,8,10,-10,2,6,7,-5,1,4,-8,7,10,7,-1,8,-1,-10,4,5,-8,-3,1,10,1,-6,-4,2,8,6,2,-7,-2,3,1,-6,-6,-5,-9,9,-10,9,-7,10,2,5,3,6,-1,3,-6,-2,-6,-9,4,4,-4,10,4,9,7,10,5,5,-5,-1,-7,-3,-2,9,2,-9,-6,10,-10,-6,2,-9,3,7,4,7,1,-4,4,-10,-7,-5,-10,3,-5,-7,6,-3,1,5,8,-7,-3,5,-4,-6,-5,-4,-7,5,3,-8,-7,7,3,-3,3,-9,1,-6,8,-6,4,-10,-4,-2,6,-9,10,-2,6,-3,5,9,-7,-1,-8,10,8,2,4,2,-3,2,4,8,1,-1,5,-2,-7,-9,-1,-7,-10,2,3,1,-4,-3,9,8,-5,6,-1,4,3,-2,-4,-7,8,-6,3,10,2,-4,7,3,-3,3,9,-5,-3,-1,6,1,5,-6,7,-6,1,2,-3,1,-5,-3,2,-9,5,-1,-7,-6,10,-3,-9,-5,-10,-10,3,-3,6,5,4,-4,-3,1,-5,-4,-10,-1,-5,-1,7,-10,-1,-1,8,4,1,2,-2,5,1,-4,4,10,-4,-6,10,-1,10,-7,-9,4,-10,-3,-1,-2,6,1,-3,-3,2,8,-9,3,3,10,3,-2,-10,5,-1,-2,-3,1,6,3]], dtype = "int16")#candidate|6163|(4, 728)|const|int16
const_6164 = relay.const(2, dtype = "uint16")#candidate|6164|()|const|uint16
call_6162 = relay.TupleGetItem(func_4897_call(relay.reshape(const_6163.astype('int16'), [16, 14, 13]), relay.reshape(const_6164.astype('uint16'), []), relay.reshape(call_6148.astype('bool'), [504,]), ), 8)
call_6165 = relay.TupleGetItem(func_4901_call(relay.reshape(const_6163.astype('int16'), [16, 14, 13]), relay.reshape(const_6164.astype('uint16'), []), relay.reshape(call_6148.astype('bool'), [504,]), ), 8)
func_5838_call = mod.get_global_var('func_5838')
func_5840_call = mutated_mod.get_global_var('func_5840')
call_6173 = relay.TupleGetItem(func_5838_call(relay.reshape(call_6140.astype('float32'), [11, 15, 15])), 4)
call_6174 = relay.TupleGetItem(func_5840_call(relay.reshape(call_6140.astype('float32'), [11, 15, 15])), 4)
output = relay.Tuple([call_6140,call_6148,var_6149,const_6150,call_6159,call_6162,const_6163,const_6164,call_6173,])
output2 = relay.Tuple([call_6141,call_6151,var_6149,const_6150,call_6160,call_6165,const_6163,const_6164,call_6174,])
func_6193 = relay.Function([var_6149,], output)
mod['func_6193'] = func_6193
mod = relay.transform.InferType()(mod)
mutated_mod['func_6193'] = func_6193
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6194 = relay.var("var_6194", dtype = "float32", shape = (54,))#candidate|6194|(54,)|var|float32
func_6193_call = mutated_mod.get_global_var('func_6193')
call_6195 = func_6193_call(var_6194)
output = call_6195
func_6196 = relay.Function([var_6194], output)
mutated_mod['func_6196'] = func_6196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5710_call = mod.get_global_var('func_5710')
func_5712_call = mutated_mod.get_global_var('func_5712')
call_6308 = relay.TupleGetItem(func_5710_call(), 2)
call_6309 = relay.TupleGetItem(func_5712_call(), 2)
output = call_6308
output2 = call_6309
func_6332 = relay.Function([], output)
mod['func_6332'] = func_6332
mod = relay.transform.InferType()(mod)
output = func_6332()
func_6333 = relay.Function([], output)
mutated_mod['func_6333'] = func_6333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5323_call = mod.get_global_var('func_5323')
func_5324_call = mutated_mod.get_global_var('func_5324')
call_6366 = relay.TupleGetItem(func_5323_call(), 0)
call_6367 = relay.TupleGetItem(func_5324_call(), 0)
output = relay.Tuple([call_6366,])
output2 = relay.Tuple([call_6367,])
func_6389 = relay.Function([], output)
mod['func_6389'] = func_6389
mod = relay.transform.InferType()(mod)
mutated_mod['func_6389'] = func_6389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6389_call = mutated_mod.get_global_var('func_6389')
call_6390 = func_6389_call()
output = call_6390
func_6391 = relay.Function([], output)
mutated_mod['func_6391'] = func_6391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4158_call = mod.get_global_var('func_4158')
func_4160_call = mutated_mod.get_global_var('func_4160')
call_6397 = func_4158_call()
call_6398 = func_4158_call()
output = call_6397
output2 = call_6398
func_6406 = relay.Function([], output)
mod['func_6406'] = func_6406
mod = relay.transform.InferType()(mod)
output = func_6406()
func_6407 = relay.Function([], output)
mutated_mod['func_6407'] = func_6407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6389_call = mod.get_global_var('func_6389')
func_6391_call = mutated_mod.get_global_var('func_6391')
call_6410 = relay.TupleGetItem(func_6389_call(), 0)
call_6411 = relay.TupleGetItem(func_6391_call(), 0)
func_3892_call = mod.get_global_var('func_3892')
func_3893_call = mutated_mod.get_global_var('func_3893')
call_6444 = relay.TupleGetItem(func_3892_call(), 0)
call_6445 = relay.TupleGetItem(func_3893_call(), 0)
output = relay.Tuple([call_6410,call_6444,])
output2 = relay.Tuple([call_6411,call_6445,])
func_6453 = relay.Function([], output)
mod['func_6453'] = func_6453
mod = relay.transform.InferType()(mod)
output = func_6453()
func_6454 = relay.Function([], output)
mutated_mod['func_6454'] = func_6454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6389_call = mod.get_global_var('func_6389')
func_6391_call = mutated_mod.get_global_var('func_6391')
call_6461 = relay.TupleGetItem(func_6389_call(), 0)
call_6462 = relay.TupleGetItem(func_6391_call(), 0)
output = call_6461
output2 = call_6462
func_6469 = relay.Function([], output)
mod['func_6469'] = func_6469
mod = relay.transform.InferType()(mod)
output = func_6469()
func_6470 = relay.Function([], output)
mutated_mod['func_6470'] = func_6470
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6492 = relay.const([[[5.274325,0.713224,0.180142],[8.891796,-9.931168,-7.872673],[-4.872407,7.176774,5.146581],[3.841167,9.980314,8.994045],[2.551084,6.335430,8.321727],[1.847882,3.409363,-1.849237],[8.213951,-9.388142,-2.710316],[2.977882,7.483626,1.547730],[-0.337367,-8.098271,-1.510113],[-1.267735,-9.873265,5.228098],[-8.991678,-5.543241,7.968830],[-2.665118,7.196356,-9.139146],[2.346271,-1.482545,1.536447]]], dtype = "float64")#candidate|6492|(1, 13, 3)|const|float64
uop_6493 = relay.cos(const_6492.astype('float64')) # shape=(1, 13, 3)
func_5666_call = mod.get_global_var('func_5666')
func_5667_call = mutated_mod.get_global_var('func_5667')
call_6496 = func_5666_call()
call_6497 = func_5666_call()
func_5065_call = mod.get_global_var('func_5065')
func_5067_call = mutated_mod.get_global_var('func_5067')
call_6503 = relay.TupleGetItem(func_5065_call(), 1)
call_6504 = relay.TupleGetItem(func_5067_call(), 1)
func_5223_call = mod.get_global_var('func_5223')
func_5226_call = mutated_mod.get_global_var('func_5226')
const_6512 = relay.const([6.863984,2.470170,1.759686,-8.606605,-2.343880,-5.684705,-4.354585,-7.869949,0.987178,8.653965,-1.039909,-4.226517,-9.232451,1.469896,-3.508661,-7.241305,8.128740,-2.026218,7.405333,6.037220,2.697671,-0.320188,-4.193889,-0.182097,1.973201,-2.964027,9.799179,4.072566,-0.185726,2.392706,-6.993143,-6.418355,-2.744149,-4.400796,-8.550537,1.187092,-4.990578,7.090756,1.321635,-5.104883,6.857581,-5.882736,2.795336,9.062755,5.572718,-5.682487,-5.929606,0.116532,0.111130,-4.731207,0.423620,-3.168490,-5.803370,-1.672517,2.458025,-6.996280,-2.839864,-5.261404,-0.897331,4.649316,-8.280523,5.783255,-9.819237,4.313697,4.072041,0.560984,-7.653482,-7.170375,3.893886,-8.611800,9.768198,-0.764569,8.914978,-8.186518,-5.026725,3.340703,1.843649,7.858492,6.822963,-6.209438,0.329724,2.874377,9.074070,-8.841002,6.527840,4.114953,1.459941,-2.681225,-1.248821,5.089796,-5.521607,-8.575514,1.874890,4.672714,-8.069784,3.248522,-1.307974,9.896143,-2.355393,-2.896224,-5.525831,4.235733,1.013147,7.074676,-7.008646,-5.809892,3.413921,-5.467481,4.728350,-1.897136,3.648825,6.929718,-5.187360,0.518061,-8.848638,-7.898277,-6.293060,-3.148786,0.454465,3.843037,-9.287913,-1.137476,-6.947967,7.593631,1.940545,-1.422845,0.704897,-1.760696,-7.275313,8.483734,4.846490,-8.179803,9.266429,-8.063332,-6.632483,-2.431000,1.726080,-2.513427,3.074256,9.211503,7.170701,-8.494819,2.669417,8.480665,-1.731518,-6.727887,-5.438287,6.943090,-9.176796,0.865261,-2.480006,3.853615,-9.990042,1.389841,2.404556,-4.367155,-2.219498,-2.697877,4.159307,-7.654043,-0.126837,-6.644381,7.857658,-2.878123,3.629761,-8.809387,1.123062,6.631160,3.885646,0.905181,-0.330393,-8.150811,-7.740621,-3.267574,-5.848767,-8.453921,-6.118040,7.126657,-8.270753,1.197908,1.772087,2.211073,2.548745,8.659958,-6.679921,-3.715031,-0.860981,1.503441,2.494356,5.150105,-9.359082,-9.295653,-2.847978,-0.282932,4.768020,-0.030956,9.081856,4.968850], dtype = "float32")#candidate|6512|(198,)|const|float32
call_6511 = func_5223_call(relay.reshape(const_6512.astype('float32'), [11, 6, 3]))
call_6513 = func_5223_call(relay.reshape(const_6512.astype('float32'), [11, 6, 3]))
func_6453_call = mod.get_global_var('func_6453')
func_6454_call = mutated_mod.get_global_var('func_6454')
call_6515 = relay.TupleGetItem(func_6453_call(), 1)
call_6516 = relay.TupleGetItem(func_6454_call(), 1)
uop_6525 = relay.exp(uop_6493.astype('float64')) # shape=(1, 13, 3)
func_2522_call = mod.get_global_var('func_2522')
func_2528_call = mutated_mod.get_global_var('func_2528')
const_6533 = relay.const([-10,-9,-9,-2,2,2,-6,3,-7,-9,-5,-1,9,-1,-2,4,-1,8,-10,3,-10,5,5,3,1,7,8,4,1,-2,6,-5,-9,-6,-3,-10,-5,6,-2,-2,-1,-10,-8,-8,2,4,-8,-6,1,-5,-1,7,1,-6,4,-8,6,6,4,4,4,3,-6,8,-1,2,-1,9,-4,-6,4,5,-6,5,5,-6,-7,2,10,-1,-6,-4,-5,10,10,10,-4,6,-8,-7,-10,3,-6,3,8,6,8,-10,4,4], dtype = "uint32")#candidate|6533|(100,)|const|uint32
const_6534 = relay.const([10,-3,-10,9,-6,-7,-7,8,-1,8,-1,-4,-4,-10,-2,-5,6,3,5,-9,5,5,-8,-6,5,2,5,-10,2,-5,-7,-1,2,-9,6,-7,6,4,6,-5,-4,-8,-5,-9,10,-3,6,-10,-10,5,-10,8,6,-2,-2,7,3,6,-6,7,8,-5,-6,5,7,-1,-2,-3,-2,5,1,1,-9,-2,-1,3,8,6,-4,-9,8,-5,10,-3,2,-4,1,-9,-2,3,1,-5,-5,-5,1,-7,-4,3,2,-6,-5,-9,8,5,10,-5,6,-10,-2,-10,-10,4,-1,8,5,10,-6,4,-9,-4,-9,-8,1,-5,-6,8,4,-8,2,-10,1,7,-1,1,-10,-6,6,-3,5,-3,-5,-5,-4,-5,2,-5,7,10,3,-5,8,3,9,-2,5,5,6,-10,4,9,3,9,-6,-8,-4,-3,6,6,-1,10,-4,10,7,-2,-7,7,5,-10,8,-1,10,-5,-9,4,1,-7,-10,-5,-9,8,-6,-6,4,3,5,-6,-7,3,-4,-5,2,-8,-1,9,-9,-3,-5,-7,6,-3,-5,6,-10,5,8,6,4,-4,8,2,-2,2,8,6,-3,-7,-8,10,3,-9,-7,-1,-1,-5,-10,-6,-4,2,2,-7,7,-3,6,2,-9,10,-7,7,8,9,-9,-10,5,-6,-10,-10,-7,-5,-6,-2,-9,1,3,-4,-9,9,-7,-2,3,-9,-1,3,4,10,-4,-5,5,6,7,1,2,6,10,-4,-6,-7,2,6,5,-5,10,-1,7,5,7,10,5,-3,-3,-10,-7,-7,-7,4,3,-3,9,-10,-1,-2,10,-10,-9,-1,-9,1,-6,-5,-3,6,-6,9,-3,4,5,-10,10,-1,4,-9], dtype = "uint8")#candidate|6534|(330,)|const|uint8
call_6532 = relay.TupleGetItem(func_2522_call(relay.reshape(const_6533.astype('uint32'), [2, 5, 10]), relay.reshape(const_6533.astype('uint32'), [2, 5, 10]), relay.reshape(const_6534.astype('uint8'), [330,]), relay.reshape(const_6533.astype('float64'), [2, 5, 10]), ), 1)
call_6535 = relay.TupleGetItem(func_2528_call(relay.reshape(const_6533.astype('uint32'), [2, 5, 10]), relay.reshape(const_6533.astype('uint32'), [2, 5, 10]), relay.reshape(const_6534.astype('uint8'), [330,]), relay.reshape(const_6533.astype('float64'), [2, 5, 10]), ), 1)
func_5065_call = mod.get_global_var('func_5065')
func_5067_call = mutated_mod.get_global_var('func_5067')
call_6547 = relay.TupleGetItem(func_5065_call(), 0)
call_6548 = relay.TupleGetItem(func_5067_call(), 0)
uop_6552 = relay.sinh(uop_6525.astype('float64')) # shape=(1, 13, 3)
bop_6555 = relay.multiply(uop_6552.astype('float32'), relay.reshape(uop_6525.astype('float32'), relay.shape_of(uop_6552))) # shape=(1, 13, 3)
func_4729_call = mod.get_global_var('func_4729')
func_4731_call = mutated_mod.get_global_var('func_4731')
var_6563 = relay.var("var_6563", dtype = "uint16", shape = ())#candidate|6563|()|var|uint16
call_6562 = relay.TupleGetItem(func_4729_call(relay.reshape(var_6563.astype('uint16'), [])), 6)
call_6564 = relay.TupleGetItem(func_4731_call(relay.reshape(var_6563.astype('uint16'), [])), 6)
bop_6569 = relay.greater_equal(uop_6493.astype('bool'), relay.reshape(bop_6555.astype('bool'), relay.shape_of(uop_6493))) # shape=(1, 13, 3)
func_5435_call = mod.get_global_var('func_5435')
func_5439_call = mutated_mod.get_global_var('func_5439')
var_6573 = relay.var("var_6573", dtype = "uint8", shape = (624,))#candidate|6573|(624,)|var|uint8
const_6574 = relay.const([True,False,True,True,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,False,True,True,True,False,True,False,False,True,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,False,True], dtype = "bool")#candidate|6574|(504,)|const|bool
call_6572 = relay.TupleGetItem(func_5435_call(relay.reshape(call_6503.astype('bool'), [11, 10, 2]), relay.reshape(var_6573.astype('uint8'), [624,]), relay.reshape(const_6574.astype('bool'), [504,]), ), 3)
call_6575 = relay.TupleGetItem(func_5439_call(relay.reshape(call_6503.astype('bool'), [11, 10, 2]), relay.reshape(var_6573.astype('uint8'), [624,]), relay.reshape(const_6574.astype('bool'), [504,]), ), 3)
bop_6580 = relay.bitwise_or(bop_6569.astype('uint8'), relay.reshape(uop_6552.astype('uint8'), relay.shape_of(bop_6569))) # shape=(1, 13, 3)
bop_6595 = relay.logical_or(uop_6552.astype('bool'), relay.reshape(bop_6555.astype('bool'), relay.shape_of(uop_6552))) # shape=(1, 13, 3)
uop_6598 = relay.acosh(bop_6555.astype('float64')) # shape=(1, 13, 3)
output = relay.Tuple([call_6496,call_6503,call_6511,const_6512,call_6515,call_6532,const_6533,const_6534,call_6547,call_6562,var_6563,call_6572,var_6573,const_6574,bop_6580,bop_6595,uop_6598,])
output2 = relay.Tuple([call_6497,call_6504,call_6513,const_6512,call_6516,call_6535,const_6533,const_6534,call_6548,call_6564,var_6563,call_6575,var_6573,const_6574,bop_6580,bop_6595,uop_6598,])
func_6600 = relay.Function([var_6563,var_6573,], output)
mod['func_6600'] = func_6600
mod = relay.transform.InferType()(mod)
var_6601 = relay.var("var_6601", dtype = "uint16", shape = ())#candidate|6601|()|var|uint16
var_6602 = relay.var("var_6602", dtype = "uint8", shape = (624,))#candidate|6602|(624,)|var|uint8
output = func_6600(var_6601,var_6602,)
func_6603 = relay.Function([var_6601,var_6602,], output)
mutated_mod['func_6603'] = func_6603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4735_call = mod.get_global_var('func_4735')
func_4737_call = mutated_mod.get_global_var('func_4737')
call_6667 = func_4735_call()
call_6668 = func_4735_call()
output = call_6667
output2 = call_6668
func_6685 = relay.Function([], output)
mod['func_6685'] = func_6685
mod = relay.transform.InferType()(mod)
mutated_mod['func_6685'] = func_6685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6685_call = mutated_mod.get_global_var('func_6685')
call_6686 = func_6685_call()
output = call_6686
func_6687 = relay.Function([], output)
mutated_mod['func_6687'] = func_6687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3909_call = mod.get_global_var('func_3909')
func_3910_call = mutated_mod.get_global_var('func_3910')
call_6760 = relay.TupleGetItem(func_3909_call(), 0)
call_6761 = relay.TupleGetItem(func_3910_call(), 0)
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_6764 = relay.TupleGetItem(func_4175_call(), 0)
call_6765 = relay.TupleGetItem(func_4176_call(), 0)
output = relay.Tuple([call_6760,call_6764,])
output2 = relay.Tuple([call_6761,call_6765,])
func_6784 = relay.Function([], output)
mod['func_6784'] = func_6784
mod = relay.transform.InferType()(mod)
mutated_mod['func_6784'] = func_6784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6784_call = mutated_mod.get_global_var('func_6784')
call_6785 = func_6784_call()
output = call_6785
func_6786 = relay.Function([], output)
mutated_mod['func_6786'] = func_6786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3909_call = mod.get_global_var('func_3909')
func_3910_call = mutated_mod.get_global_var('func_3910')
call_6808 = relay.TupleGetItem(func_3909_call(), 0)
call_6809 = relay.TupleGetItem(func_3910_call(), 0)
func_5448_call = mod.get_global_var('func_5448')
func_5451_call = mutated_mod.get_global_var('func_5451')
var_6817 = relay.var("var_6817", dtype = "float32", shape = (1, 6))#candidate|6817|(1, 6)|var|float32
call_6816 = func_5448_call(relay.reshape(var_6817.astype('float32'), [3, 2, 1]))
call_6818 = func_5448_call(relay.reshape(var_6817.astype('float32'), [3, 2, 1]))
bop_6825 = relay.bitwise_or(var_6817.astype('int8'), relay.reshape(call_6816.astype('int8'), relay.shape_of(var_6817))) # shape=(1, 6)
bop_6828 = relay.bitwise_or(var_6817.astype('int8'), relay.reshape(call_6818.astype('int8'), relay.shape_of(var_6817))) # shape=(1, 6)
bop_6844 = relay.divide(call_6816.astype('float32'), relay.reshape(var_6817.astype('float32'), relay.shape_of(call_6816))) # shape=(3, 2, 1)
bop_6847 = relay.divide(call_6818.astype('float32'), relay.reshape(var_6817.astype('float32'), relay.shape_of(call_6818))) # shape=(3, 2, 1)
output = relay.Tuple([call_6808,bop_6825,bop_6844,])
output2 = relay.Tuple([call_6809,bop_6828,bop_6847,])
func_6863 = relay.Function([var_6817,], output)
mod['func_6863'] = func_6863
mod = relay.transform.InferType()(mod)
mutated_mod['func_6863'] = func_6863
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6864 = relay.var("var_6864", dtype = "float32", shape = (1, 6))#candidate|6864|(1, 6)|var|float32
func_6863_call = mutated_mod.get_global_var('func_6863')
call_6865 = func_6863_call(var_6864)
output = call_6865
func_6866 = relay.Function([var_6864], output)
mutated_mod['func_6866'] = func_6866
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6871 = relay.var("var_6871", dtype = "int16", shape = (15, 11, 2))#candidate|6871|(15, 11, 2)|var|int16
var_6872 = relay.var("var_6872", dtype = "int16", shape = (15, 11, 2))#candidate|6872|(15, 11, 2)|var|int16
bop_6873 = relay.not_equal(var_6871.astype('bool'), relay.reshape(var_6872.astype('bool'), relay.shape_of(var_6871))) # shape=(15, 11, 2)
output = bop_6873
output2 = bop_6873
func_6883 = relay.Function([var_6871,var_6872,], output)
mod['func_6883'] = func_6883
mod = relay.transform.InferType()(mod)
mutated_mod['func_6883'] = func_6883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6883_call = mutated_mod.get_global_var('func_6883')
var_6885 = relay.var("var_6885", dtype = "int16", shape = (15, 11, 2))#candidate|6885|(15, 11, 2)|var|int16
var_6886 = relay.var("var_6886", dtype = "int16", shape = (15, 11, 2))#candidate|6886|(15, 11, 2)|var|int16
call_6884 = func_6883_call(var_6885,var_6886,)
output = call_6884
func_6887 = relay.Function([var_6885,var_6886,], output)
mutated_mod['func_6887'] = func_6887
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6935 = relay.constdtype = "float32")#candidate|6935|(12, 10, 14)|const|float32
uop_6936 = relay.asin(const_6935.astype('float32')) # shape=(12, 10, 14)
output = relay.Tuple([uop_6936,])
output2 = relay.Tuple([uop_6936,])
func_6942 = relay.Function([], output)
mod['func_6942'] = func_6942
mod = relay.transform.InferType()(mod)
output = func_6942()
func_6943 = relay.Function([], output)
mutated_mod['func_6943'] = func_6943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5943_call = mod.get_global_var('func_5943')
func_5945_call = mutated_mod.get_global_var('func_5945')
call_6949 = relay.TupleGetItem(func_5943_call(), 1)
call_6950 = relay.TupleGetItem(func_5945_call(), 1)
output = relay.Tuple([call_6949,])
output2 = relay.Tuple([call_6950,])
func_6951 = relay.Function([], output)
mod['func_6951'] = func_6951
mod = relay.transform.InferType()(mod)
mutated_mod['func_6951'] = func_6951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6951_call = mutated_mod.get_global_var('func_6951')
call_6952 = func_6951_call()
output = call_6952
func_6953 = relay.Function([], output)
mutated_mod['func_6953'] = func_6953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6957 = relay.var("var_6957", dtype = "float32", shape = (13, 1, 8))#candidate|6957|(13, 1, 8)|var|float32
uop_6958 = relay.tan(var_6957.astype('float32')) # shape=(13, 1, 8)
output = uop_6958
output2 = uop_6958
func_6973 = relay.Function([var_6957,], output)
mod['func_6973'] = func_6973
mod = relay.transform.InferType()(mod)
var_6974 = relay.var("var_6974", dtype = "float32", shape = (13, 1, 8))#candidate|6974|(13, 1, 8)|var|float32
output = func_6973(var_6974)
func_6975 = relay.Function([var_6974], output)
mutated_mod['func_6975'] = func_6975
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6980 = relay.var("var_6980", dtype = "float64", shape = (14, 5, 14))#candidate|6980|(14, 5, 14)|var|float64
uop_6981 = relay.atan(var_6980.astype('float64')) # shape=(14, 5, 14)
bop_7003 = relay.right_shift(uop_6981.astype('uint32'), relay.reshape(var_6980.astype('uint32'), relay.shape_of(uop_6981))) # shape=(14, 5, 14)
output = bop_7003
output2 = bop_7003
func_7010 = relay.Function([var_6980,], output)
mod['func_7010'] = func_7010
mod = relay.transform.InferType()(mod)
var_7011 = relay.var("var_7011", dtype = "float64", shape = (14, 5, 14))#candidate|7011|(14, 5, 14)|var|float64
output = func_7010(var_7011)
func_7012 = relay.Function([var_7011], output)
mutated_mod['func_7012'] = func_7012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4505_call = mod.get_global_var('func_4505')
func_4507_call = mutated_mod.get_global_var('func_4507')
call_7042 = relay.TupleGetItem(func_4505_call(), 0)
call_7043 = relay.TupleGetItem(func_4507_call(), 0)
func_1674_call = mod.get_global_var('func_1674')
func_1679_call = mutated_mod.get_global_var('func_1679')
var_7051 = relay.var("var_7051", dtype = "bool", shape = (3, 84))#candidate|7051|(3, 84)|var|bool
var_7052 = relay.var("var_7052", dtype = "bool", shape = (504,))#candidate|7052|(504,)|var|bool
const_7053 = relay.const([-3.762661,0.308454,-1.250187,-8.476519,-5.843444,-0.766015,-8.641897,-0.264777,7.065350,-1.128107,-1.007666,2.926240,7.075391,8.897425,8.702249,2.817674,-3.647857,-7.049121,-2.852734,-5.429503,-7.063713,-9.139667,-9.937729,-5.663030,2.838463,5.709524,6.965674,-0.691060,2.019309,5.900107,2.584241,-7.317094,-7.876418,-6.222948,-5.205535,8.558203,-1.858245,4.508256,-0.369436,-7.055285,-1.282821,-6.122071,-8.112166,2.610188,-9.064222,-4.168617,0.057821,1.831109,6.255464,-3.721017,-8.663870,3.625688,-3.356839,0.204738], dtype = "float32")#candidate|7053|(54,)|const|float32
call_7050 = relay.TupleGetItem(func_1674_call(relay.reshape(var_7051.astype('bool'), [12, 3, 7]), relay.reshape(var_7052.astype('bool'), [504,]), relay.reshape(const_7053.astype('float32'), [54,]), ), 3)
call_7054 = relay.TupleGetItem(func_1679_call(relay.reshape(var_7051.astype('bool'), [12, 3, 7]), relay.reshape(var_7052.astype('bool'), [504,]), relay.reshape(const_7053.astype('float32'), [54,]), ), 3)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_7057 = relay.TupleGetItem(func_5872_call(), 0)
call_7058 = relay.TupleGetItem(func_5874_call(), 0)
output = relay.Tuple([call_7042,call_7050,var_7051,var_7052,const_7053,call_7057,])
output2 = relay.Tuple([call_7043,call_7054,var_7051,var_7052,const_7053,call_7058,])
func_7061 = relay.Function([var_7051,var_7052,], output)
mod['func_7061'] = func_7061
mod = relay.transform.InferType()(mod)
var_7062 = relay.var("var_7062", dtype = "bool", shape = (3, 84))#candidate|7062|(3, 84)|var|bool
var_7063 = relay.var("var_7063", dtype = "bool", shape = (504,))#candidate|7063|(504,)|var|bool
output = func_7061(var_7062,var_7063,)
func_7064 = relay.Function([var_7062,var_7063,], output)
mutated_mod['func_7064'] = func_7064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4287_call = mod.get_global_var('func_4287')
func_4289_call = mutated_mod.get_global_var('func_4289')
call_7066 = relay.TupleGetItem(func_4287_call(), 0)
call_7067 = relay.TupleGetItem(func_4289_call(), 0)
func_7061_call = mod.get_global_var('func_7061')
func_7064_call = mutated_mod.get_global_var('func_7064')
var_7077 = relay.var("var_7077", dtype = "bool", shape = (252,))#candidate|7077|(252,)|var|bool
const_7078 = relay.const([[True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,True],[False,False,False,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False],[True,False,False,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False],[True,False,True,False,False,False,False,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,True],[False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False],[True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,True,False,True,True,True],[True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,True],[False,False,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,False],[True,True,True,False,False,True,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,True],[False,True,False,False,True,True,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,True,False],[False,True,True,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False],[False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True]], dtype = "bool")#candidate|7078|(12, 42)|const|bool
call_7076 = relay.TupleGetItem(func_7061_call(relay.reshape(var_7077.astype('bool'), [3, 84]), relay.reshape(const_7078.astype('bool'), [504,]), ), 4)
call_7079 = relay.TupleGetItem(func_7064_call(relay.reshape(var_7077.astype('bool'), [3, 84]), relay.reshape(const_7078.astype('bool'), [504,]), ), 4)
func_6332_call = mod.get_global_var('func_6332')
func_6333_call = mutated_mod.get_global_var('func_6333')
call_7080 = func_6332_call()
call_7081 = func_6332_call()
func_6062_call = mod.get_global_var('func_6062')
func_6067_call = mutated_mod.get_global_var('func_6067')
const_7106 = relay.const([9,-10,-10,-3,-2,-3,5,-3,10,4,6,7,4,3,6,3,-5,-10,-7,10,-5,8,4,-6,1,-10,-10,4,-8,-9,10,-2,7,10,6,-5,4,10,5,2,7,-6,2,-3,9,-7,-6,-4,10,6,5,-8,5,4,-3,7,-10,-9,2,-5,5,-10,10,3,7,7,-3,10,10,-9,2,-6,-10,7,8,5,-3,-2,8,-2,-7,8,3,-9,1,9,-3,-8,-10,6,-8,-9,5,-3,-9,7,-5,7,2,2,-3,9,-5,-10,5,-1,7,3,3,5], dtype = "uint8")#candidate|7106|(110,)|const|uint8
var_7107 = relay.var("var_7107", dtype = "uint8", shape = (330,))#candidate|7107|(330,)|var|uint8
call_7105 = relay.TupleGetItem(func_6062_call(relay.reshape(call_7076.astype('float32'), [54,]), relay.reshape(const_7078.astype('bool'), [504,]), relay.reshape(const_7106.astype('uint8'), [110,]), relay.reshape(var_7107.astype('uint8'), [330,]), ), 7)
call_7108 = relay.TupleGetItem(func_6067_call(relay.reshape(call_7076.astype('float32'), [54,]), relay.reshape(const_7078.astype('bool'), [504,]), relay.reshape(const_7106.astype('uint8'), [110,]), relay.reshape(var_7107.astype('uint8'), [330,]), ), 7)
var_7127 = relay.var("var_7127", dtype = "bool", shape = (12, 42))#candidate|7127|(12, 42)|var|bool
bop_7128 = relay.logical_or(const_7078.astype('bool'), relay.reshape(var_7127.astype('bool'), relay.shape_of(const_7078))) # shape=(12, 42)
var_7131 = relay.var("var_7131", dtype = "float32", shape = (54,))#candidate|7131|(54,)|var|float32
bop_7132 = relay.floor_mod(call_7076.astype('float32'), relay.reshape(var_7131.astype('float32'), relay.shape_of(call_7076))) # shape=(54,)
bop_7135 = relay.floor_mod(call_7079.astype('float32'), relay.reshape(var_7131.astype('float32'), relay.shape_of(call_7079))) # shape=(54,)
output = relay.Tuple([call_7066,var_7077,call_7080,call_7105,const_7106,var_7107,bop_7128,bop_7132,])
output2 = relay.Tuple([call_7067,var_7077,call_7081,call_7108,const_7106,var_7107,bop_7128,bop_7135,])
func_7143 = relay.Function([var_7077,var_7107,var_7127,var_7131,], output)
mod['func_7143'] = func_7143
mod = relay.transform.InferType()(mod)
mutated_mod['func_7143'] = func_7143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7143_call = mutated_mod.get_global_var('func_7143')
var_7145 = relay.var("var_7145", dtype = "bool", shape = (252,))#candidate|7145|(252,)|var|bool
var_7146 = relay.var("var_7146", dtype = "uint8", shape = (330,))#candidate|7146|(330,)|var|uint8
var_7147 = relay.var("var_7147", dtype = "bool", shape = (12, 42))#candidate|7147|(12, 42)|var|bool
var_7148 = relay.var("var_7148", dtype = "float32", shape = (54,))#candidate|7148|(54,)|var|float32
call_7144 = func_7143_call(var_7145,var_7146,var_7147,var_7148,)
output = call_7144
func_7149 = relay.Function([var_7145,var_7146,var_7147,var_7148,], output)
mutated_mod['func_7149'] = func_7149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6951_call = mod.get_global_var('func_6951')
func_6953_call = mutated_mod.get_global_var('func_6953')
call_7177 = relay.TupleGetItem(func_6951_call(), 0)
call_7178 = relay.TupleGetItem(func_6953_call(), 0)
output = call_7177
output2 = call_7178
func_7183 = relay.Function([], output)
mod['func_7183'] = func_7183
mod = relay.transform.InferType()(mod)
mutated_mod['func_7183'] = func_7183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7183_call = mutated_mod.get_global_var('func_7183')
call_7184 = func_7183_call()
output = call_7184
func_7185 = relay.Function([], output)
mutated_mod['func_7185'] = func_7185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6784_call = mod.get_global_var('func_6784')
func_6786_call = mutated_mod.get_global_var('func_6786')
call_7190 = relay.TupleGetItem(func_6784_call(), 1)
call_7191 = relay.TupleGetItem(func_6786_call(), 1)
func_3388_call = mod.get_global_var('func_3388')
func_3391_call = mutated_mod.get_global_var('func_3391')
var_7195 = relay.var("var_7195", dtype = "float32", shape = (384,))#candidate|7195|(384,)|var|float32
const_7196 = relay.const([True,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False], dtype = "bool")#candidate|7196|(504,)|const|bool
call_7194 = relay.TupleGetItem(func_3388_call(relay.reshape(var_7195.astype('float32'), [6, 8, 8]), relay.reshape(const_7196.astype('bool'), [504,]), ), 4)
call_7197 = relay.TupleGetItem(func_3391_call(relay.reshape(var_7195.astype('float32'), [6, 8, 8]), relay.reshape(const_7196.astype('bool'), [504,]), ), 4)
output = relay.Tuple([call_7190,call_7194,var_7195,const_7196,])
output2 = relay.Tuple([call_7191,call_7197,var_7195,const_7196,])
func_7205 = relay.Function([var_7195,], output)
mod['func_7205'] = func_7205
mod = relay.transform.InferType()(mod)
var_7206 = relay.var("var_7206", dtype = "float32", shape = (384,))#candidate|7206|(384,)|var|float32
output = func_7205(var_7206)
func_7207 = relay.Function([var_7206], output)
mutated_mod['func_7207'] = func_7207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6784_call = mod.get_global_var('func_6784')
func_6786_call = mutated_mod.get_global_var('func_6786')
call_7239 = relay.TupleGetItem(func_6784_call(), 1)
call_7240 = relay.TupleGetItem(func_6786_call(), 1)
func_5600_call = mod.get_global_var('func_5600')
func_5603_call = mutated_mod.get_global_var('func_5603')
const_7248 = relay.const([0.695209,-1.253478,6.759725,8.780564,6.685131,-6.270747,-0.607141,-4.396609,-0.568915,-1.740800,2.711320,-8.287751,1.794237,-4.469635,1.933589,6.539169,-9.271948,8.046662,9.269716,5.612083,5.419911,5.796102,-4.583294,-6.558452,1.463414,9.951520,-9.574459,8.142181,5.176260,-8.667462,-8.829375,0.680599,5.167475,-9.210644,6.122763,2.151405,5.500070,-0.198584,-7.342082,-6.598566,6.411459,2.883025,2.686418,-3.435615,-8.566274,-1.264666,-7.491136,-5.241476,-4.176754,-9.735125,-8.572965,8.021453,-2.693507,9.715941,-9.601301,-8.447035,7.047403,9.163850,3.344450,5.156885,-1.408457,-4.808661,6.390834,-7.338334,5.643194,3.127963,2.241157,7.484818,6.535765,-8.323646,-3.022245,5.863275,-5.248623,-6.830119,-0.686365,-4.501261,4.754883,7.254512,6.835055,2.366339,-0.505078,-9.767519,2.655247,1.950936,-1.202253,-0.837282,2.128339,-8.408391,8.748979,1.932236,3.561692,-7.927235,-2.690949,7.829762,-4.158608,-6.766214,-5.937376,-3.177467,-7.152614,-2.922934,3.563327,0.384931,-7.685785,5.520276,-2.721831,-3.584216,-3.362141,8.189348,-5.404867,-7.725693,4.199562,-4.555082,6.093375,8.815761,-0.735948,-8.276115,-2.235885,-5.300271,4.484418,-3.187760,-9.551218,1.324980,-7.588052,6.802259,-1.927426,2.694425,-6.906871,6.513098,-3.349246,1.922053,-9.844999,-9.183467,0.643423,0.355601,-6.173494,6.915054,-6.909365,2.434886,4.916674,-1.577736,-8.716433,1.833416,7.250129,-2.062315,2.992974,-7.501843,9.374505,-4.869203,-4.472964,-4.957187,-9.687334,6.500198,-9.986058,0.830375,-9.400727,7.078972,1.630565,8.681350,4.132181,-4.341359,-7.762673,-2.595944,8.914813,-9.362973,0.212906,5.184509,-8.529728,-5.249501,2.870167,-5.621839,1.652584,3.777763,-2.792500,7.051797,-2.245987,-6.959465,1.298809,4.413724,-1.185707,-6.142729,-7.336927,0.534643,-1.112209,9.379396,1.853044,8.340337,-3.358812,9.174099,-3.939531,-8.449451,-4.811116,9.571156,-7.756324,-2.803082,-6.234365,-6.407895,-6.645543,-3.112646,3.863470,2.129842,4.455154,-0.072556,9.905376,4.486287,-3.723884,-2.434788,-6.124631,-8.893339,-8.922214,0.460850,5.563784,1.093038,7.262326,3.557427,-9.043810,2.845628,2.860563,5.905402,7.979816,-9.410266,-4.820288,-1.944728,-7.104079,0.861625,-1.208373,-2.674934,-2.991023,1.767054,0.465419,2.950755,7.626720,0.423601,-8.598273,0.728536,7.772988,5.128511,0.354341,6.329823,2.521569,-6.444217,2.789679,7.946221,8.190617,-2.209454,9.906684,-6.026999,-6.470151,-5.876912,-3.485023,3.890383,8.796905,7.250282,-8.953321,4.866427,-1.570082,8.953505,-4.415587,9.447713,-6.351544,-5.055506,6.911915,-9.049039,-5.674791,-6.277804,0.339610,0.984270,4.759307,2.715182,2.853980,2.155226,-6.078565,4.901210,4.534471,-2.909347,-0.442175,-3.914421,1.644086,-6.452208,8.960047,-7.380185,-1.743266,6.305367,7.548200,7.833215,2.089660,-0.120833,-0.179686,-2.275203,-4.831615,4.614453,4.122263,9.680909,-8.150945,6.455750,-4.321313,-8.510325,7.735981,-9.241576,-3.687152,7.925030,-3.972003,-7.133886,3.241263,0.507711,8.219462,6.206592,-2.069246,-0.605620,-3.558454,-1.374216,8.566793,6.336426], dtype = "float64")#candidate|7248|(312,)|const|float64
call_7247 = func_5600_call(relay.reshape(const_7248.astype('float64'), [3, 8, 13]))
call_7249 = func_5600_call(relay.reshape(const_7248.astype('float64'), [3, 8, 13]))
func_6883_call = mod.get_global_var('func_6883')
func_6887_call = mutated_mod.get_global_var('func_6887')
var_7260 = relay.var("var_7260", dtype = "int16", shape = (330,))#candidate|7260|(330,)|var|int16
call_7259 = func_6883_call(relay.reshape(var_7260.astype('int16'), [15, 11, 2]), relay.reshape(var_7260.astype('int16'), [15, 11, 2]), )
call_7261 = func_6883_call(relay.reshape(var_7260.astype('int16'), [15, 11, 2]), relay.reshape(var_7260.astype('int16'), [15, 11, 2]), )
uop_7267 = relay.asin(const_7248.astype('float64')) # shape=(312,)
output = relay.Tuple([call_7239,call_7247,call_7259,var_7260,uop_7267,])
output2 = relay.Tuple([call_7240,call_7249,call_7261,var_7260,uop_7267,])
func_7273 = relay.Function([var_7260,], output)
mod['func_7273'] = func_7273
mod = relay.transform.InferType()(mod)
mutated_mod['func_7273'] = func_7273
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7274 = relay.var("var_7274", dtype = "int16", shape = (330,))#candidate|7274|(330,)|var|int16
func_7273_call = mutated_mod.get_global_var('func_7273')
call_7275 = func_7273_call(var_7274)
output = call_7275
func_7276 = relay.Function([var_7274], output)
mutated_mod['func_7276'] = func_7276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7288 = relay.var("var_7288", dtype = "bool", shape = (16, 8, 5))#candidate|7288|(16, 8, 5)|var|bool
const_7289 = relay.const([[[False,True,False,True,False],[False,False,False,False,False],[False,True,True,True,False],[True,False,False,True,False],[True,True,True,False,True],[False,False,False,False,False],[False,True,True,False,False],[True,True,False,False,True]],[[True,False,False,False,False],[False,False,False,False,True],[False,False,False,True,False],[True,True,False,True,False],[False,False,True,False,False],[True,True,True,False,True],[False,True,False,False,True],[False,False,True,False,True]],[[True,True,True,True,False],[True,True,False,False,False],[False,False,False,True,False],[True,False,False,False,False],[True,True,True,True,True],[True,True,False,False,False],[True,True,True,False,True],[True,True,False,True,True]],[[False,True,False,True,False],[False,False,True,False,False],[True,False,True,True,True],[True,False,True,True,False],[True,False,False,False,False],[True,True,True,True,True],[True,True,False,True,False],[True,True,False,False,False]],[[True,True,False,False,False],[True,True,False,False,False],[True,True,False,True,True],[False,False,True,False,True],[False,True,False,False,False],[True,True,True,True,True],[True,False,True,True,True],[True,True,False,False,True]],[[True,True,True,True,False],[False,False,False,True,False],[True,True,True,True,False],[True,False,True,False,False],[True,False,False,False,True],[True,True,False,False,True],[False,True,False,True,False],[False,True,False,False,True]],[[False,True,False,True,True],[False,False,True,False,True],[True,True,True,False,True],[False,True,False,True,True],[False,True,False,False,False],[True,True,True,True,True],[False,False,True,True,True],[False,True,False,True,True]],[[True,True,False,False,True],[True,False,False,False,True],[False,False,False,False,False],[False,True,True,False,True],[True,False,True,False,True],[False,False,True,False,True],[False,True,False,True,True],[True,False,False,False,False]],[[True,False,False,False,False],[True,False,False,False,False],[True,True,True,False,True],[False,False,True,True,True],[True,False,False,True,True],[False,True,True,False,True],[False,True,True,False,True],[True,True,False,True,False]],[[False,False,True,True,False],[True,False,True,False,True],[False,True,True,False,True],[False,False,False,False,False],[True,False,False,False,False],[True,True,False,True,True],[False,False,True,True,True],[False,False,True,True,True]],[[True,True,False,False,True],[True,True,False,True,True],[False,False,True,False,False],[True,False,False,True,True],[True,True,True,False,True],[True,False,True,False,True],[False,True,False,True,False],[False,False,True,False,False]],[[False,False,False,True,True],[True,False,True,True,False],[False,False,True,False,False],[False,True,True,False,True],[False,False,True,True,True],[True,True,False,False,True],[False,False,True,False,True],[False,True,True,True,False]],[[True,False,False,True,False],[True,True,True,False,True],[False,False,False,True,True],[True,False,False,True,False],[True,True,False,True,False],[True,True,True,True,True],[False,False,True,False,True],[True,True,True,False,True]],[[False,False,False,False,False],[True,False,False,False,True],[True,True,True,True,False],[True,True,False,False,False],[True,False,False,False,True],[False,True,False,True,True],[False,True,True,False,False],[True,True,False,False,True]],[[True,True,True,False,False],[True,True,True,True,False],[True,False,False,False,False],[True,False,True,False,True],[False,False,False,False,False],[False,True,True,False,True],[True,False,False,False,False],[True,True,False,False,True]],[[False,False,True,False,False],[False,False,False,True,False],[True,False,False,True,False],[False,False,True,True,False],[True,False,False,True,False],[True,False,False,True,True],[True,True,True,False,True],[True,False,True,True,False]]], dtype = "bool")#candidate|7289|(16, 8, 5)|const|bool
bop_7290 = relay.logical_or(var_7288.astype('bool'), relay.reshape(const_7289.astype('bool'), relay.shape_of(var_7288))) # shape=(16, 8, 5)
func_6469_call = mod.get_global_var('func_6469')
func_6470_call = mutated_mod.get_global_var('func_6470')
call_7296 = func_6469_call()
call_7297 = func_6469_call()
func_3388_call = mod.get_global_var('func_3388')
func_3391_call = mutated_mod.get_global_var('func_3391')
var_7299 = relay.var("var_7299", dtype = "float32", shape = (384,))#candidate|7299|(384,)|var|float32
const_7300 = relay.const([True,True,True,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False], dtype = "bool")#candidate|7300|(504,)|const|bool
call_7298 = relay.TupleGetItem(func_3388_call(relay.reshape(var_7299.astype('float32'), [6, 8, 8]), relay.reshape(const_7300.astype('bool'), [504,]), ), 2)
call_7301 = relay.TupleGetItem(func_3391_call(relay.reshape(var_7299.astype('float32'), [6, 8, 8]), relay.reshape(const_7300.astype('bool'), [504,]), ), 2)
output = relay.Tuple([bop_7290,call_7296,call_7298,var_7299,const_7300,])
output2 = relay.Tuple([bop_7290,call_7297,call_7301,var_7299,const_7300,])
func_7305 = relay.Function([var_7288,var_7299,], output)
mod['func_7305'] = func_7305
mod = relay.transform.InferType()(mod)
mutated_mod['func_7305'] = func_7305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7305_call = mutated_mod.get_global_var('func_7305')
var_7307 = relay.var("var_7307", dtype = "bool", shape = (16, 8, 5))#candidate|7307|(16, 8, 5)|var|bool
var_7308 = relay.var("var_7308", dtype = "float32", shape = (384,))#candidate|7308|(384,)|var|float32
call_7306 = func_7305_call(var_7307,var_7308,)
output = call_7306
func_7309 = relay.Function([var_7307,var_7308,], output)
mutated_mod['func_7309'] = func_7309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3932_call = mod.get_global_var('func_3932')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_7314 = func_3932_call()
call_7315 = func_3932_call()
output = relay.Tuple([call_7314,])
output2 = relay.Tuple([call_7315,])
func_7320 = relay.Function([], output)
mod['func_7320'] = func_7320
mod = relay.transform.InferType()(mod)
output = func_7320()
func_7321 = relay.Function([], output)
mutated_mod['func_7321'] = func_7321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6469_call = mod.get_global_var('func_6469')
func_6470_call = mutated_mod.get_global_var('func_6470')
call_7335 = func_6469_call()
call_7336 = func_6469_call()
output = call_7335
output2 = call_7336
func_7347 = relay.Function([], output)
mod['func_7347'] = func_7347
mod = relay.transform.InferType()(mod)
mutated_mod['func_7347'] = func_7347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7347_call = mutated_mod.get_global_var('func_7347')
call_7348 = func_7347_call()
output = call_7348
func_7349 = relay.Function([], output)
mutated_mod['func_7349'] = func_7349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6389_call = mod.get_global_var('func_6389')
func_6391_call = mutated_mod.get_global_var('func_6391')
call_7369 = relay.TupleGetItem(func_6389_call(), 0)
call_7370 = relay.TupleGetItem(func_6391_call(), 0)
func_7273_call = mod.get_global_var('func_7273')
func_7276_call = mutated_mod.get_global_var('func_7276')
const_7396 = relay.const([[1,7,-3,10,8,3,-2,-7,9,-6,6,8,4,-5,-4,-7,-10,6,-9,-5,8,8,2,-9,-5,-4,8,-2,-8,7,-4,8,9,1,-2,7,-6,-10,-10,-1,-5,7,-9,-6,-6,2,7,7,-5,8,-7,-7,-1,1,-5,-6,9,6,2,8,4,1,-9,-1,-7,2],[-5,-6,6,-8,10,-3,-9,7,-2,-1,-3,10,-1,8,2,-3,-7,-5,-4,3,-9,3,7,1,-4,-8,7,1,-10,7,9,1,6,-10,-9,6,-1,-7,-8,-8,3,1,5,-7,1,7,1,-5,-3,9,7,-9,-6,-9,-7,7,4,-9,10,-1,7,10,-7,-6,1,10],[3,-10,-8,-3,5,-6,-10,5,-10,-10,6,4,8,-4,7,10,-5,-1,7,-9,-8,1,-9,-7,-7,-5,-8,6,3,4,4,-2,-4,2,-10,6,-8,-5,5,6,-6,5,-4,-9,-3,-6,7,-5,-2,-2,2,8,5,4,5,4,-3,-5,-1,3,-9,10,5,-9,-4,9],[9,3,3,7,-1,7,-9,-2,-9,4,-2,-6,-10,3,-3,2,-2,-7,-4,10,5,-1,2,-7,-6,10,7,-4,8,3,-2,5,-9,6,9,1,3,-2,-5,7,4,-9,3,8,-3,-3,5,8,4,-9,9,-1,-4,-9,-4,10,6,-6,5,8,-4,-4,3,-3,7,2],[-2,2,5,-4,-10,6,-6,-4,-8,-10,5,1,7,7,-8,3,1,5,-7,-5,-3,-4,3,9,-2,4,-4,-7,1,-6,2,-6,-5,9,9,-10,4,3,-3,9,-3,3,7,8,-6,6,6,-3,4,2,7,-8,-9,8,-5,-7,1,-4,2,6,-10,5,4,-6,1,4]], dtype = "int16")#candidate|7396|(5, 66)|const|int16
call_7395 = relay.TupleGetItem(func_7273_call(relay.reshape(const_7396.astype('int16'), [330,])), 0)
call_7397 = relay.TupleGetItem(func_7276_call(relay.reshape(const_7396.astype('int16'), [330,])), 0)
func_6600_call = mod.get_global_var('func_6600')
func_6603_call = mutated_mod.get_global_var('func_6603')
const_7427 = relay.const(-7, dtype = "uint16")#candidate|7427|()|const|uint16
var_7428 = relay.var("var_7428", dtype = "uint8", shape = (624,))#candidate|7428|(624,)|var|uint8
call_7426 = relay.TupleGetItem(func_6600_call(relay.reshape(const_7427.astype('uint16'), []), relay.reshape(var_7428.astype('uint8'), [624,]), ), 15)
call_7429 = relay.TupleGetItem(func_6603_call(relay.reshape(const_7427.astype('uint16'), []), relay.reshape(var_7428.astype('uint8'), [624,]), ), 15)
func_7205_call = mod.get_global_var('func_7205')
func_7207_call = mutated_mod.get_global_var('func_7207')
var_7433 = relay.var("var_7433", dtype = "float32", shape = (192, 2))#candidate|7433|(192, 2)|var|float32
call_7432 = relay.TupleGetItem(func_7205_call(relay.reshape(var_7433.astype('float32'), [384,])), 3)
call_7434 = relay.TupleGetItem(func_7207_call(relay.reshape(var_7433.astype('float32'), [384,])), 3)
uop_7438 = relay.rsqrt(const_7396.astype('float32')) # shape=(5, 66)
var_7442 = relay.var("var_7442", dtype = "float32", shape = (5, 66))#candidate|7442|(5, 66)|var|float32
bop_7443 = relay.mod(uop_7438.astype('float32'), relay.reshape(var_7442.astype('float32'), relay.shape_of(uop_7438))) # shape=(5, 66)
func_5285_call = mod.get_global_var('func_5285')
func_5286_call = mutated_mod.get_global_var('func_5286')
call_7452 = func_5285_call()
call_7453 = func_5285_call()
func_6784_call = mod.get_global_var('func_6784')
func_6786_call = mutated_mod.get_global_var('func_6786')
call_7457 = relay.TupleGetItem(func_6784_call(), 0)
call_7458 = relay.TupleGetItem(func_6786_call(), 0)
func_5096_call = mod.get_global_var('func_5096')
func_5100_call = mutated_mod.get_global_var('func_5100')
var_7472 = relay.var("var_7472", dtype = "float32", shape = (54,))#candidate|7472|(54,)|var|float32
call_7471 = relay.TupleGetItem(func_5096_call(relay.reshape(var_7472.astype('float32'), [54,]), relay.reshape(call_7432.astype('bool'), [504,]), ), 2)
call_7473 = relay.TupleGetItem(func_5100_call(relay.reshape(var_7472.astype('float32'), [54,]), relay.reshape(call_7432.astype('bool'), [504,]), ), 2)
var_7522 = relay.var("var_7522", dtype = "float32", shape = (5, 66))#candidate|7522|(5, 66)|var|float32
bop_7523 = relay.logical_or(bop_7443.astype('bool'), relay.reshape(var_7522.astype('bool'), relay.shape_of(bop_7443))) # shape=(5, 66)
output = relay.Tuple([call_7369,call_7395,call_7426,const_7427,var_7428,call_7432,var_7433,call_7452,call_7457,call_7471,var_7472,bop_7523,])
output2 = relay.Tuple([call_7370,call_7397,call_7429,const_7427,var_7428,call_7434,var_7433,call_7453,call_7458,call_7473,var_7472,bop_7523,])
func_7527 = relay.Function([var_7428,var_7433,var_7442,var_7472,var_7522,], output)
mod['func_7527'] = func_7527
mod = relay.transform.InferType()(mod)
mutated_mod['func_7527'] = func_7527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7527_call = mutated_mod.get_global_var('func_7527')
var_7529 = relay.var("var_7529", dtype = "uint8", shape = (624,))#candidate|7529|(624,)|var|uint8
var_7530 = relay.var("var_7530", dtype = "float32", shape = (192, 2))#candidate|7530|(192, 2)|var|float32
var_7531 = relay.var("var_7531", dtype = "float32", shape = (5, 66))#candidate|7531|(5, 66)|var|float32
var_7532 = relay.var("var_7532", dtype = "float32", shape = (54,))#candidate|7532|(54,)|var|float32
var_7533 = relay.var("var_7533", dtype = "float32", shape = (5, 66))#candidate|7533|(5, 66)|var|float32
call_7528 = func_7527_call(var_7529,var_7530,var_7531,var_7532,var_7533,)
output = call_7528
func_7534 = relay.Function([var_7529,var_7530,var_7531,var_7532,var_7533,], output)
mutated_mod['func_7534'] = func_7534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4158_call = mod.get_global_var('func_4158')
func_4160_call = mutated_mod.get_global_var('func_4160')
call_7558 = func_4158_call()
call_7559 = func_4158_call()
output = call_7558
output2 = call_7559
func_7562 = relay.Function([], output)
mod['func_7562'] = func_7562
mod = relay.transform.InferType()(mod)
mutated_mod['func_7562'] = func_7562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7562_call = mutated_mod.get_global_var('func_7562')
call_7563 = func_7562_call()
output = call_7563
func_7564 = relay.Function([], output)
mutated_mod['func_7564'] = func_7564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6685_call = mod.get_global_var('func_6685')
func_6687_call = mutated_mod.get_global_var('func_6687')
call_7565 = func_6685_call()
call_7566 = func_6685_call()
output = call_7565
output2 = call_7566
func_7587 = relay.Function([], output)
mod['func_7587'] = func_7587
mod = relay.transform.InferType()(mod)
output = func_7587()
func_7588 = relay.Function([], output)
mutated_mod['func_7588'] = func_7588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3909_call = mod.get_global_var('func_3909')
func_3910_call = mutated_mod.get_global_var('func_3910')
call_7592 = relay.TupleGetItem(func_3909_call(), 0)
call_7593 = relay.TupleGetItem(func_3910_call(), 0)
func_4158_call = mod.get_global_var('func_4158')
func_4160_call = mutated_mod.get_global_var('func_4160')
call_7603 = func_4158_call()
call_7604 = func_4158_call()
func_5838_call = mod.get_global_var('func_5838')
func_5840_call = mutated_mod.get_global_var('func_5840')
call_7613 = relay.TupleGetItem(func_5838_call(relay.reshape(call_7592.astype('float32'), [11, 15, 15])), 4)
call_7614 = relay.TupleGetItem(func_5840_call(relay.reshape(call_7592.astype('float32'), [11, 15, 15])), 4)
func_7010_call = mod.get_global_var('func_7010')
func_7012_call = mutated_mod.get_global_var('func_7012')
var_7624 = relay.var("var_7624", dtype = "float64", shape = (980,))#candidate|7624|(980,)|var|float64
call_7623 = func_7010_call(relay.reshape(var_7624.astype('float64'), [14, 5, 14]))
call_7625 = func_7010_call(relay.reshape(var_7624.astype('float64'), [14, 5, 14]))
output = relay.Tuple([call_7592,call_7603,call_7613,call_7623,var_7624,])
output2 = relay.Tuple([call_7593,call_7604,call_7614,call_7625,var_7624,])
func_7659 = relay.Function([var_7624,], output)
mod['func_7659'] = func_7659
mod = relay.transform.InferType()(mod)
mutated_mod['func_7659'] = func_7659
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7660 = relay.var("var_7660", dtype = "float64", shape = (980,))#candidate|7660|(980,)|var|float64
func_7659_call = mutated_mod.get_global_var('func_7659')
call_7661 = func_7659_call(var_7660)
output = call_7661
func_7662 = relay.Function([var_7660], output)
mutated_mod['func_7662'] = func_7662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7562_call = mod.get_global_var('func_7562')
func_7564_call = mutated_mod.get_global_var('func_7564')
call_7672 = func_7562_call()
call_7673 = func_7562_call()
func_7347_call = mod.get_global_var('func_7347')
func_7349_call = mutated_mod.get_global_var('func_7349')
call_7678 = func_7347_call()
call_7679 = func_7347_call()
func_4093_call = mod.get_global_var('func_4093')
func_4094_call = mutated_mod.get_global_var('func_4094')
call_7692 = relay.TupleGetItem(func_4093_call(), 0)
call_7693 = relay.TupleGetItem(func_4094_call(), 0)
func_6685_call = mod.get_global_var('func_6685')
func_6687_call = mutated_mod.get_global_var('func_6687')
call_7731 = func_6685_call()
call_7732 = func_6685_call()
output = relay.Tuple([call_7672,call_7678,call_7692,call_7731,])
output2 = relay.Tuple([call_7673,call_7679,call_7693,call_7732,])
func_7736 = relay.Function([], output)
mod['func_7736'] = func_7736
mod = relay.transform.InferType()(mod)
mutated_mod['func_7736'] = func_7736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7736_call = mutated_mod.get_global_var('func_7736')
call_7737 = func_7736_call()
output = call_7737
func_7738 = relay.Function([], output)
mutated_mod['func_7738'] = func_7738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5366_call = mod.get_global_var('func_5366')
func_5367_call = mutated_mod.get_global_var('func_5367')
call_7797 = relay.TupleGetItem(func_5366_call(), 0)
call_7798 = relay.TupleGetItem(func_5367_call(), 0)
output = call_7797
output2 = call_7798
func_7799 = relay.Function([], output)
mod['func_7799'] = func_7799
mod = relay.transform.InferType()(mod)
mutated_mod['func_7799'] = func_7799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7799_call = mutated_mod.get_global_var('func_7799')
call_7800 = func_7799_call()
output = call_7800
func_7801 = relay.Function([], output)
mutated_mod['func_7801'] = func_7801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5366_call = mod.get_global_var('func_5366')
func_5367_call = mutated_mod.get_global_var('func_5367')
call_7888 = relay.TupleGetItem(func_5366_call(), 0)
call_7889 = relay.TupleGetItem(func_5367_call(), 0)
func_6942_call = mod.get_global_var('func_6942')
func_6943_call = mutated_mod.get_global_var('func_6943')
call_7900 = relay.TupleGetItem(func_6942_call(), 0)
call_7901 = relay.TupleGetItem(func_6943_call(), 0)
output = relay.Tuple([call_7888,call_7900,])
output2 = relay.Tuple([call_7889,call_7901,])
func_7902 = relay.Function([], output)
mod['func_7902'] = func_7902
mod = relay.transform.InferType()(mod)
output = func_7902()
func_7903 = relay.Function([], output)
mutated_mod['func_7903'] = func_7903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6469_call = mod.get_global_var('func_6469')
func_6470_call = mutated_mod.get_global_var('func_6470')
call_7957 = func_6469_call()
call_7958 = func_6469_call()
output = relay.Tuple([call_7957,])
output2 = relay.Tuple([call_7958,])
func_7962 = relay.Function([], output)
mod['func_7962'] = func_7962
mod = relay.transform.InferType()(mod)
output = func_7962()
func_7963 = relay.Function([], output)
mutated_mod['func_7963'] = func_7963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5182_call = mod.get_global_var('func_5182')
func_5183_call = mutated_mod.get_global_var('func_5183')
call_7971 = relay.TupleGetItem(func_5182_call(), 0)
call_7972 = relay.TupleGetItem(func_5183_call(), 0)
output = call_7971
output2 = call_7972
func_7977 = relay.Function([], output)
mod['func_7977'] = func_7977
mod = relay.transform.InferType()(mod)
output = func_7977()
func_7978 = relay.Function([], output)
mutated_mod['func_7978'] = func_7978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7987 = relay.var("var_7987", dtype = "int64", shape = ())#candidate|7987|()|var|int64
var_7988 = relay.var("var_7988", dtype = "int64", shape = (1, 9))#candidate|7988|(1, 9)|var|int64
bop_7989 = relay.bitwise_xor(var_7987.astype('int64'), var_7988.astype('int64')) # shape=(1, 9)
output = bop_7989
output2 = bop_7989
func_7995 = relay.Function([var_7987,var_7988,], output)
mod['func_7995'] = func_7995
mod = relay.transform.InferType()(mod)
mutated_mod['func_7995'] = func_7995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7995_call = mutated_mod.get_global_var('func_7995')
var_7997 = relay.var("var_7997", dtype = "int64", shape = ())#candidate|7997|()|var|int64
var_7998 = relay.var("var_7998", dtype = "int64", shape = (1, 9))#candidate|7998|(1, 9)|var|int64
call_7996 = func_7995_call(var_7997,var_7998,)
output = call_7996
func_7999 = relay.Function([var_7997,var_7998,], output)
mutated_mod['func_7999'] = func_7999
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8130 = relay.var("var_8130", dtype = "float32", shape = (8, 6, 12))#candidate|8130|(8, 6, 12)|var|float32
var_8131 = relay.var("var_8131", dtype = "float32", shape = (8, 6, 12))#candidate|8131|(8, 6, 12)|var|float32
bop_8132 = relay.divide(var_8130.astype('float32'), relay.reshape(var_8131.astype('float32'), relay.shape_of(var_8130))) # shape=(8, 6, 12)
func_3785_call = mod.get_global_var('func_3785')
func_3789_call = mutated_mod.get_global_var('func_3789')
var_8142 = relay.var("var_8142", dtype = "float32", shape = (192,))#candidate|8142|(192,)|var|float32
call_8141 = relay.TupleGetItem(func_3785_call(relay.reshape(var_8142.astype('float32'), [8, 6, 4]), relay.reshape(var_8142.astype('float32'), [8, 6, 4]), ), 0)
call_8143 = relay.TupleGetItem(func_3789_call(relay.reshape(var_8142.astype('float32'), [8, 6, 4]), relay.reshape(var_8142.astype('float32'), [8, 6, 4]), ), 0)
output = relay.Tuple([bop_8132,call_8141,var_8142,])
output2 = relay.Tuple([bop_8132,call_8143,var_8142,])
func_8148 = relay.Function([var_8130,var_8131,var_8142,], output)
mod['func_8148'] = func_8148
mod = relay.transform.InferType()(mod)
var_8149 = relay.var("var_8149", dtype = "float32", shape = (8, 6, 12))#candidate|8149|(8, 6, 12)|var|float32
var_8150 = relay.var("var_8150", dtype = "float32", shape = (8, 6, 12))#candidate|8150|(8, 6, 12)|var|float32
var_8151 = relay.var("var_8151", dtype = "float32", shape = (192,))#candidate|8151|(192,)|var|float32
output = func_8148(var_8149,var_8150,var_8151,)
func_8152 = relay.Function([var_8149,var_8150,var_8151,], output)
mutated_mod['func_8152'] = func_8152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7962_call = mod.get_global_var('func_7962')
func_7963_call = mutated_mod.get_global_var('func_7963')
call_8154 = relay.TupleGetItem(func_7962_call(), 0)
call_8155 = relay.TupleGetItem(func_7963_call(), 0)
func_7061_call = mod.get_global_var('func_7061')
func_7064_call = mutated_mod.get_global_var('func_7064')
const_8190 = relay.const([[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[True],[False]], dtype = "bool")#candidate|8190|(252, 1)|const|bool
var_8191 = relay.var("var_8191", dtype = "bool", shape = (504,))#candidate|8191|(504,)|var|bool
call_8189 = relay.TupleGetItem(func_7061_call(relay.reshape(const_8190.astype('bool'), [3, 84]), relay.reshape(var_8191.astype('bool'), [504,]), ), 4)
call_8192 = relay.TupleGetItem(func_7064_call(relay.reshape(const_8190.astype('bool'), [3, 84]), relay.reshape(var_8191.astype('bool'), [504,]), ), 4)
output = relay.Tuple([call_8154,call_8189,const_8190,var_8191,])
output2 = relay.Tuple([call_8155,call_8192,const_8190,var_8191,])
func_8201 = relay.Function([var_8191,], output)
mod['func_8201'] = func_8201
mod = relay.transform.InferType()(mod)
var_8202 = relay.var("var_8202", dtype = "bool", shape = (504,))#candidate|8202|(504,)|var|bool
output = func_8201(var_8202)
func_8203 = relay.Function([var_8202], output)
mutated_mod['func_8203'] = func_8203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7562_call = mod.get_global_var('func_7562')
func_7564_call = mutated_mod.get_global_var('func_7564')
call_8219 = func_7562_call()
call_8220 = func_7562_call()
func_5838_call = mod.get_global_var('func_5838')
func_5840_call = mutated_mod.get_global_var('func_5840')
call_8242 = relay.TupleGetItem(func_5838_call(relay.reshape(call_8219.astype('float32'), [11, 15, 15])), 3)
call_8243 = relay.TupleGetItem(func_5840_call(relay.reshape(call_8219.astype('float32'), [11, 15, 15])), 3)
output = relay.Tuple([call_8219,call_8242,])
output2 = relay.Tuple([call_8220,call_8243,])
func_8270 = relay.Function([], output)
mod['func_8270'] = func_8270
mod = relay.transform.InferType()(mod)
output = func_8270()
func_8271 = relay.Function([], output)
mutated_mod['func_8271'] = func_8271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6453_call = mod.get_global_var('func_6453')
func_6454_call = mutated_mod.get_global_var('func_6454')
call_8297 = relay.TupleGetItem(func_6453_call(), 1)
call_8298 = relay.TupleGetItem(func_6454_call(), 1)
output = call_8297
output2 = call_8298
func_8299 = relay.Function([], output)
mod['func_8299'] = func_8299
mod = relay.transform.InferType()(mod)
output = func_8299()
func_8300 = relay.Function([], output)
mutated_mod['func_8300'] = func_8300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4910_call = mod.get_global_var('func_4910')
func_4912_call = mutated_mod.get_global_var('func_4912')
call_8366 = relay.TupleGetItem(func_4910_call(), 0)
call_8367 = relay.TupleGetItem(func_4912_call(), 0)
output = call_8366
output2 = call_8367
func_8368 = relay.Function([], output)
mod['func_8368'] = func_8368
mod = relay.transform.InferType()(mod)
output = func_8368()
func_8369 = relay.Function([], output)
mutated_mod['func_8369'] = func_8369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7962_call = mod.get_global_var('func_7962')
func_7963_call = mutated_mod.get_global_var('func_7963')
call_8432 = relay.TupleGetItem(func_7962_call(), 0)
call_8433 = relay.TupleGetItem(func_7963_call(), 0)
output = relay.Tuple([call_8432,])
output2 = relay.Tuple([call_8433,])
func_8459 = relay.Function([], output)
mod['func_8459'] = func_8459
mod = relay.transform.InferType()(mod)
output = func_8459()
func_8460 = relay.Function([], output)
mutated_mod['func_8460'] = func_8460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6332_call = mod.get_global_var('func_6332')
func_6333_call = mutated_mod.get_global_var('func_6333')
call_8505 = func_6332_call()
call_8506 = func_6332_call()
func_4365_call = mod.get_global_var('func_4365')
func_4370_call = mutated_mod.get_global_var('func_4370')
var_8511 = relay.var("var_8511", dtype = "int8", shape = ())#candidate|8511|()|var|int8
const_8512 = relay.const([2,6,6,10,-1,9,-5,4,4,-8,-2,-7,4,8,-9,-7,-1,-10,-2,1,3,1,-7,-8,8,-6,-8,-9,-9,2,-9,10,-9,9,3,9,7,3,-4,-7,-9,-3,7,1,-8,-5,1,-9,10,-4,-5,8,-2,10,-4,-10,-1,1,-4,6,-5,-3,8,7,-7,10,5,-7,-9,-2,-5,7,7,6,2,7,4,-4,-9,10,-3,1,-8,-2,7,-1,8,8,8,7,5,7,-4,-2,1,1,2,-1,-10,7,-9,-10,6,2,-2,-6,-5,-8,6,-1,4,1,4,6,5,3,-2,2,-1,-4,5,3,2,10,3,-5,3,-1,-9,3,10,7,7,2,4,-2,-5,-1,-8,5,4,6,-7,4,-6,8,-3,10,6,9,-7,1,7,8,-2,-7,-2,-4,4,3,-7,7,-9,9,10,-5,10,-6,-5,2,-7,6,4,8,-1,7,5,-7,3,-8,-5,-8,9,2,8,3,-5,-7,-2,4,-8,-1,-6,-7,-6,10,10,-6,3,2,2,-9,8,-5,-10,4,-1,-3,5,6,5,-1,-5,3,-5,-1,10,-3,9,9,-6,-9,9,-3,-2,-4,-6,-1,5,1,8,-6,-6,-1,8,4,4,-2,5,-7,-6,-3,9,-3,9,2,-8,10,-9,6,-10,1,4,-6,1,-6,-4,9,-5,8,8,3,-10,7,1,-9,6,2,-5,10,10,3,7,9,-4,-5,-7,-8,9,-8,-1,-1,7,6,2,8,-4,-7,-2,-2,-3,1,-5,-9,-4,-5,2,-1,-9,-10,3,-4,8,-5,-10,-7,3,-5,6,-3,10,5,-3,-2,-3,3,4,-2,-1,-3,5,-5,9,-7,3,5,-7,9,7,4,8,8,7,2,-9,8,-6,-4,-3,2,-10,-1,-9,9,-2,8,2,-1,5,6,10,-8,5,3,-3,-3,-2,-2,-7,-9,-3,10,-2,-4,-4,-1,-4,-3,10,-8,1,-8,8,-5,10,-3,-8,8,-3,7,5,-2,-6,10,2,-1,-1,-7,-8,3,6,-10,-10,6,-3,9,-10,8,7,-6,-8,-2,-5,-8,-1,10,1,-4,8,-2,-3,-10,-3,1,-6,9,-5,3,-9,-4,5,8,1,7,-1,2,-2,-9,1,-5,8,-1,4,-2,8,-3,-9,9,4,1,2,1,6,-9,1,-3,9,-1,-1,-7,-10,-2,-3,1,4,7,7,-2,-8,-1,-8,-8,-2,1,2,2,10,1,2,5,7,-6,7,-9,-10,6,7,-4,-2,10,-4,-8,-6,-10,-2,-6,4,-3,-9,-10,5,6,9,-10,-6,-7,-5,-5,-3,-9,9,-5,-9,-7,-3,9,2,-9,-7,2,-1,4,-1,5,5,10,-3,-8,-3,3,2,3,9,-3,-3,2,3,8,-8,-9,-8,8,1,-4,-2,10,10,8,-5,10,9,2,9,-5,4,1,-2,-3,-8,7,5,6,1,5,-6,-6,6,-6,-9,-5,6,6,6,10,8,3,-7,7,4,5,-8,4,10,-2,-4,3,10,7,1,-9,7,2,-3,-1,4,7,-7,-7,-3,-8,-3,-7,10,-10,-3,10,3,3,3,-10,-2,-9,10,-7,-5,1,6,3,-2,-7,-6,-5,10,-4,4,10,-3,-8,-6,-7,10,1,4,1,10,10,-8,-4,5,-3,-4,-6,3,9,8,2,-3,-5,-8,-2,-8,-2,-9,5,4,2,3,4,-3,7,10,1,-2,-10,-5,-9,-7,7,9,2,2,-1,6,-10,2,-2,7,-4,2,-3,8,-9,-5,3,-10,7,-10,4,-8,5,-2,-10,10,1,-10,8,6,-5,4,5,4,4,2,2,-4,8,3,8,4,5,4,1,1,-1,5,-8,7,3,-4,9,-1,6,7,-9,-3,-4,-10,-7,3,5,-3,7,9,-9,-6,-10,5,10,8,-2,4,8,-3,4,-2,-3,5,6,9,-4,-6,-9,10,3,-1,-1,-3,10,3,-9,4,-1,-2,-3,-4,4,-3,1,6,-3,10,-1,-2,-8,-4,1,1,-9,1,-1,-10,5,2,9,1,-5,8,6,7,-5,1,1,10,-4,-1,-7,4,6,-7,3,9,-9,-4,-6,-8,-3,9,-2,3,1,3,-9,-8,-4,-10,-3,5,-5,-6,1,2,-5,-8,-1,3,9,9,-4,10,4,-4,-10,-10,9,4,1,4,6,-3,4,-8,-3,-8,-4,4,10,-4,7,5,-1,6,2,8,-1,-4,4,-8,7,-3,-8,-8,4,-1,7,9,-3,-9,-6,-7,-5,-3,-3,5,9,-2,4,-7,5,3,4,-9,8,3,5,10,1,9,4,-3,-2,2,-6,-8,7,-2,-3,7,8,-5,2,-1,9,-6,-5,-6,5,-5,-6,-1,-4,1,3,-9,8,4,-9,2,6,-1,-6,-10,-4,3,7,1,6,-9,10,1,-3,-7,-1,-10,-4,10,7,-4,-4,-9,10,2,-3,-8,-10,10,-4,-6,5,-2,7,2,9,-5,2,3,5,9,-10,-3,-6,6,2,-4,9,10,9,10,-6,2,10,-2,-3,-6,-10,5,-4,7,-2,6,9,7,-6,6,3,-1,-3,9,6,3,4,3,7,-5,2,-2,5,-1,-8,6,4,6,2,7,3,-3,8,-5,7,5,1,-10,-7,-9,7,8,-3,-3,10,-3,10,9,4,-2,-4,-10,-6,-3,-1,-8,10,-2,-10,9,4,4,10,1,-7,-4,-4,8,-3,3,-7,-2,8,-1,-8,-10,-2,8,6,-3,6,6,10,-10,-8,8,-5,-2,6,-1,4,9,-6,6,-8,-4,6,4,5,10,-8,-7,-1,-8,-2,5,2,2,3,-7,6,-7,3,-10,-7,10,-1,10,7,2,9,-7,-3,9,6,-9,9,-7,-7,-9,-9,2,7,3,2,-3,-5,1,9,4,-6,-10,-8,9,3,-2,8,-4,7,-9,7,9,-2,7,-10,9,-5,5,5,1,-2,2,-8,-5,8,-4,-5,4,-5,1,4,-3,8,-2,-2,4,-7,-5,5,-10,3,-5,-8,6,-1,-9,8,4,2,10,1,9,10,-3,-6,-5,8,7,-10,7,1,-6,10,4,8,-7,8,10,-1,-1,7,-8,-10,3,10,-1,8,2,7,-9,10,7,3,3,2,3,-4,6,-5,-3,-9,-8,2,-6,-3,-8,-2,-2,2,-10,-1,-4,3,-8,9,3,-6,6,8,8,6,6,-1,-2,4,-9,-5,2,5,6,3,-3,-8,-8,-10,10,2,-5,-4,10,-10,-5,-4,-3,-8,2,-8,-2,-1,-5,-7,-8,-2,-4,1,-6,-2,8,-9,4,1,1,-8,-8,-3,1,-1,-1,-3,1,10,9,-2,10,9,1,8,1,-4,7,3,7,9,9,6,10,-9,10,5,5,3,-3,-7,-9,3,-8,5,2,-5,8,3,7,-6,-3,8,6,-5,4,-3,-3,-8,5,-8,7,-10,-5,2,4,1,-10,9,-10,-5,6,-5,4,-10,9,6,1,1,-10,8,-1,-5,-7,7,7,-10,-7,2,2,-10,9,-5,3,-8,8,-9,6,2,-6,-1,-10,-6,9,10,-9,10,-6,2,-2,-4,-6,-3,-5,-6,-3,-6,7,2,1,7,10,-9,4,-10,10,1,7,8,9,4,10,-5,-1,3,6,-1,-7,7,-4,2,-10,-1,6,-10,-3,7,4,10,-6,9,-5,10,-5,-5,-5,2,-1,4,-2,2,-9,-1,-8,2,4,-8,4,-10,7,5,-4,9,1,5,-8,-3,4,1,4,10,5,-6,-7,9,6,8,-2,-7,8,8,-9,-4,4,-6,1,6,-3,-6,-1,-6,8,8,9,-4,-9,7,-3,10,-6,-4,2,2,2,-6,4,3,6,-3,9,5,10,-4,1,-10,8,-6,4,6,8,3,3,-4,-5,3,-4,2,10,-5,-9,10,9,-10,5,-10,-7,7,-7,1,7,8,4,-3,5,5,-5,1,-2,8,6,-10,-9,5,7,-9,-9,6,-6,-6,-1,5,6,1,-5,-5,4,-4,-2,10,2,-4,4,-4,10,-1,3,-8,-2,-8,7,7,-9,-6,-1,-10,6,6,5,2,2,-8,-1,-3,-7,-9,-2,-8,1,-4,10,5,-10,-8,1,-2,-5,-7,9,9,-10,-10,9,5,-2,2,3,-8,8,-7,7,-3,2,-9,9,6,-8,-6,-2,7,-10,-6,6,-7,1,5,-3,-8,-8,5,5,-9,-6,2,-5,-2,7,9,3,10,-2,-1,3,10,-6,-1,4,8,4,-10,8,-6,-1,10,3,-9,7,9,-9,1,4,10,1,-10,7,-6,3,2,6,-1,2,-5,-7,-8,3,-2,1,-7,-10,-9,-8,-2,6,-6,-3,-3,-4,-5,3,9,-3,5,5,-10,6,1,-6,-4,6,7,6,6,8,-4,7,9,4,-5,3,-3,-7,-4,7,5,9,-5,-2,8,4,-3,5,10,5,10,3,8,10,-2,1,2,-1,-8,8,5,9,-1,-1,4,6,-3,-7,-8,-4,-4,2,-6,3,-8,-1,10,-2,-4,4,8,-4,-9,-3,-8,1,-1,-9,6,4,-2,-8,4,-5,-2,8,1,2,-5,-8,1,6,-2,10,7,-5,-8,1,-4,2,-7,7,-4,-7,1,1,-7,-5,-2,-1,8,7,-9,-2,5,9,6,-10,-3,1,-4,-8,-9,-10,-8,1,-6,-4,5,8,-1,3,-10,-2,-2,1,-5,-7,-1,-7,-9,-7,-7,8,8,-3,2,8,1,-9,3,8,-8,-4,1,8,-2,-3,-5,-10,-8,1,10,-3,7,3,1,-8,4,8,5,-5,10,-5,-10,7,9,1,-7,-10,8,6,3,-10,10,-4,5,-4,-7,1,8,-9,-8,-6,-5,-3,10,-2,-5,-1,2,2,5,4,6,9,-3,-1,-9,8,-5,-4,-10,9,-9,-4,6,-8,-1,2,8,-3,2,-4,3,2,2,-3,4,-2,2,6,10,-10,-8,2,6,9,-9,8,4,8,-7,2,2,-6,10,6,-6,2,-1,-2,-8,-6,3,-9,-7,4,-9,-7,10,7,5,-9,2,-7,-6,9,-9,2,-10,-10,9], dtype = "int8")#candidate|8512|(1920,)|const|int8
var_8513 = relay.var("var_8513", dtype = "uint8", shape = (624,))#candidate|8513|(624,)|var|uint8
call_8510 = relay.TupleGetItem(func_4365_call(relay.reshape(var_8511.astype('int8'), []), relay.reshape(const_8512.astype('int8'), [16, 10, 12]), relay.reshape(var_8513.astype('uint8'), [624,]), ), 2)
call_8514 = relay.TupleGetItem(func_4370_call(relay.reshape(var_8511.astype('int8'), []), relay.reshape(const_8512.astype('int8'), [16, 10, 12]), relay.reshape(var_8513.astype('uint8'), [624,]), ), 2)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_8520 = relay.TupleGetItem(func_5872_call(), 1)
call_8521 = relay.TupleGetItem(func_5874_call(), 1)
output = relay.Tuple([call_8505,call_8510,var_8511,const_8512,var_8513,call_8520,])
output2 = relay.Tuple([call_8506,call_8514,var_8511,const_8512,var_8513,call_8521,])
func_8527 = relay.Function([var_8511,var_8513,], output)
mod['func_8527'] = func_8527
mod = relay.transform.InferType()(mod)
mutated_mod['func_8527'] = func_8527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8527_call = mutated_mod.get_global_var('func_8527')
var_8529 = relay.var("var_8529", dtype = "int8", shape = ())#candidate|8529|()|var|int8
var_8530 = relay.var("var_8530", dtype = "uint8", shape = (624,))#candidate|8530|(624,)|var|uint8
call_8528 = func_8527_call(var_8529,var_8530,)
output = call_8528
func_8531 = relay.Function([var_8529,var_8530,], output)
mutated_mod['func_8531'] = func_8531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8368_call = mod.get_global_var('func_8368')
func_8369_call = mutated_mod.get_global_var('func_8369')
call_8542 = func_8368_call()
call_8543 = func_8368_call()
output = relay.Tuple([call_8542,])
output2 = relay.Tuple([call_8543,])
func_8566 = relay.Function([], output)
mod['func_8566'] = func_8566
mod = relay.transform.InferType()(mod)
mutated_mod['func_8566'] = func_8566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8566_call = mutated_mod.get_global_var('func_8566')
call_8567 = func_8566_call()
output = call_8567
func_8568 = relay.Function([], output)
mutated_mod['func_8568'] = func_8568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6951_call = mod.get_global_var('func_6951')
func_6953_call = mutated_mod.get_global_var('func_6953')
call_8577 = relay.TupleGetItem(func_6951_call(), 0)
call_8578 = relay.TupleGetItem(func_6953_call(), 0)
func_6389_call = mod.get_global_var('func_6389')
func_6391_call = mutated_mod.get_global_var('func_6391')
call_8610 = relay.TupleGetItem(func_6389_call(), 0)
call_8611 = relay.TupleGetItem(func_6391_call(), 0)
func_5065_call = mod.get_global_var('func_5065')
func_5067_call = mutated_mod.get_global_var('func_5067')
call_8622 = relay.TupleGetItem(func_5065_call(), 1)
call_8623 = relay.TupleGetItem(func_5067_call(), 1)
func_8270_call = mod.get_global_var('func_8270')
func_8271_call = mutated_mod.get_global_var('func_8271')
call_8625 = relay.TupleGetItem(func_8270_call(), 0)
call_8626 = relay.TupleGetItem(func_8271_call(), 0)
output = relay.Tuple([call_8577,call_8610,call_8622,call_8625,])
output2 = relay.Tuple([call_8578,call_8611,call_8623,call_8626,])
func_8648 = relay.Function([], output)
mod['func_8648'] = func_8648
mod = relay.transform.InferType()(mod)
output = func_8648()
func_8649 = relay.Function([], output)
mutated_mod['func_8649'] = func_8649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8299_call = mod.get_global_var('func_8299')
func_8300_call = mutated_mod.get_global_var('func_8300')
call_8653 = func_8299_call()
call_8654 = func_8299_call()
uop_8672 = relay.atanh(call_8653.astype('float32')) # shape=(11, 15, 15)
uop_8674 = relay.atanh(call_8654.astype('float32')) # shape=(11, 15, 15)
output = uop_8672
output2 = uop_8674
func_8686 = relay.Function([], output)
mod['func_8686'] = func_8686
mod = relay.transform.InferType()(mod)
mutated_mod['func_8686'] = func_8686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8686_call = mutated_mod.get_global_var('func_8686')
call_8687 = func_8686_call()
output = call_8687
func_8688 = relay.Function([], output)
mutated_mod['func_8688'] = func_8688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6942_call = mod.get_global_var('func_6942')
func_6943_call = mutated_mod.get_global_var('func_6943')
call_8689 = relay.TupleGetItem(func_6942_call(), 0)
call_8690 = relay.TupleGetItem(func_6943_call(), 0)
func_4729_call = mod.get_global_var('func_4729')
func_4731_call = mutated_mod.get_global_var('func_4731')
var_8698 = relay.var("var_8698", dtype = "uint16", shape = ())#candidate|8698|()|var|uint16
call_8697 = relay.TupleGetItem(func_4729_call(relay.reshape(var_8698.astype('uint16'), [])), 0)
call_8699 = relay.TupleGetItem(func_4731_call(relay.reshape(var_8698.astype('uint16'), [])), 0)
func_1674_call = mod.get_global_var('func_1674')
func_1679_call = mutated_mod.get_global_var('func_1679')
var_8721 = relay.var("var_8721", dtype = "bool", shape = (252,))#candidate|8721|(252,)|var|bool
var_8722 = relay.var("var_8722", dtype = "bool", shape = (504,))#candidate|8722|(504,)|var|bool
var_8723 = relay.var("var_8723", dtype = "float32", shape = (3, 18))#candidate|8723|(3, 18)|var|float32
call_8720 = relay.TupleGetItem(func_1674_call(relay.reshape(var_8721.astype('bool'), [12, 3, 7]), relay.reshape(var_8722.astype('bool'), [504,]), relay.reshape(var_8723.astype('float32'), [54,]), ), 4)
call_8724 = relay.TupleGetItem(func_1679_call(relay.reshape(var_8721.astype('bool'), [12, 3, 7]), relay.reshape(var_8722.astype('bool'), [504,]), relay.reshape(var_8723.astype('float32'), [54,]), ), 4)
bop_8738 = relay.greater_equal(var_8723.astype('bool'), var_8698.astype('bool')) # shape=(3, 18)
uop_8741 = relay.atan(call_8720.astype('float64')) # shape=(12, 3, 7)
uop_8743 = relay.atan(call_8724.astype('float64')) # shape=(12, 3, 7)
func_2342_call = mod.get_global_var('func_2342')
func_2346_call = mutated_mod.get_global_var('func_2346')
const_8745 = relay.const([[3,1,-10,1,-1],[2,-7,1,-5,7],[10,-9,9,2,-8],[-3,-2,-4,-3,10],[1,5,-10,-3,5],[-4,-5,-7,10,10],[-6,8,7,10,4],[-3,-1,-2,7,3],[-7,-6,1,9,-3],[-9,1,-4,-9,10],[4,10,-2,-6,8],[-10,10,9,1,3],[8,10,-9,-2,1],[-2,5,-10,-4,7],[-8,9,5,9,8],[8,4,-7,-6,-3],[-1,2,7,-3,2],[3,9,10,-1,-9],[-1,-7,9,-1,-5],[10,7,1,5,5],[6,-7,-3,10,-6],[-5,8,-3,7,1]], dtype = "uint8")#candidate|8745|(22, 5)|const|uint8
var_8746 = relay.var("var_8746", dtype = "uint8", shape = (5, 66))#candidate|8746|(5, 66)|var|uint8
call_8744 = func_2342_call(relay.reshape(const_8745.astype('uint8'), [11, 1, 10]), relay.reshape(var_8746.astype('uint8'), [11, 3, 10]), )
call_8747 = func_2342_call(relay.reshape(const_8745.astype('uint8'), [11, 1, 10]), relay.reshape(var_8746.astype('uint8'), [11, 3, 10]), )
output = relay.Tuple([call_8689,call_8697,var_8721,var_8722,bop_8738,uop_8741,call_8744,const_8745,var_8746,])
output2 = relay.Tuple([call_8690,call_8699,var_8721,var_8722,bop_8738,uop_8743,call_8747,const_8745,var_8746,])
func_8759 = relay.Function([var_8698,var_8721,var_8722,var_8723,var_8746,], output)
mod['func_8759'] = func_8759
mod = relay.transform.InferType()(mod)
var_8760 = relay.var("var_8760", dtype = "uint16", shape = ())#candidate|8760|()|var|uint16
var_8761 = relay.var("var_8761", dtype = "bool", shape = (252,))#candidate|8761|(252,)|var|bool
var_8762 = relay.var("var_8762", dtype = "bool", shape = (504,))#candidate|8762|(504,)|var|bool
var_8763 = relay.var("var_8763", dtype = "float32", shape = (3, 18))#candidate|8763|(3, 18)|var|float32
var_8764 = relay.var("var_8764", dtype = "uint8", shape = (5, 66))#candidate|8764|(5, 66)|var|uint8
output = func_8759(var_8760,var_8761,var_8762,var_8763,var_8764,)
func_8765 = relay.Function([var_8760,var_8761,var_8762,var_8763,var_8764,], output)
mutated_mod['func_8765'] = func_8765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7736_call = mod.get_global_var('func_7736')
func_7738_call = mutated_mod.get_global_var('func_7738')
call_8816 = relay.TupleGetItem(func_7736_call(), 0)
call_8817 = relay.TupleGetItem(func_7738_call(), 0)
func_7183_call = mod.get_global_var('func_7183')
func_7185_call = mutated_mod.get_global_var('func_7185')
call_8857 = func_7183_call()
call_8858 = func_7183_call()
output = relay.Tuple([call_8816,call_8857,])
output2 = relay.Tuple([call_8817,call_8858,])
func_8860 = relay.Function([], output)
mod['func_8860'] = func_8860
mod = relay.transform.InferType()(mod)
mutated_mod['func_8860'] = func_8860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8860_call = mutated_mod.get_global_var('func_8860')
call_8861 = func_8860_call()
output = call_8861
func_8862 = relay.Function([], output)
mutated_mod['func_8862'] = func_8862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6453_call = mod.get_global_var('func_6453')
func_6454_call = mutated_mod.get_global_var('func_6454')
call_8871 = relay.TupleGetItem(func_6453_call(), 0)
call_8872 = relay.TupleGetItem(func_6454_call(), 0)
output = relay.Tuple([call_8871,])
output2 = relay.Tuple([call_8872,])
func_8877 = relay.Function([], output)
mod['func_8877'] = func_8877
mod = relay.transform.InferType()(mod)
mutated_mod['func_8877'] = func_8877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8877_call = mutated_mod.get_global_var('func_8877')
call_8878 = func_8877_call()
output = call_8878
func_8879 = relay.Function([], output)
mutated_mod['func_8879'] = func_8879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4505_call = mod.get_global_var('func_4505')
func_4507_call = mutated_mod.get_global_var('func_4507')
call_8912 = relay.TupleGetItem(func_4505_call(), 0)
call_8913 = relay.TupleGetItem(func_4507_call(), 0)
func_7305_call = mod.get_global_var('func_7305')
func_7309_call = mutated_mod.get_global_var('func_7309')
const_8928 = relay.const([True,False,False,False,True,True,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False,False,False,True,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,False,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,True,True,True,True], dtype = "bool")#candidate|8928|(640,)|const|bool
const_8929 = relay.const([[-9.169811,8.508465,5.414625,-5.630300],[9.568485,3.978648,-0.223095,-9.218792],[-9.096366,2.356757,-2.085988,-0.580223],[7.283051,4.961075,-2.126151,9.482143],[1.411195,2.967301,-2.303381,7.727500],[8.370755,1.809333,0.394927,3.324939],[-7.973451,2.595759,8.733973,-8.020087],[0.282213,-0.267068,-6.559635,-9.409894],[5.982244,3.517325,2.549916,1.836337],[0.546879,-1.313324,-1.566921,3.172626],[4.165536,1.656480,-6.492144,2.141089],[0.711279,5.293545,2.757827,-6.102605],[-6.038946,2.516734,-9.795677,-9.719159],[5.148622,3.714700,-4.438390,-5.691863],[3.781229,-9.752070,9.073710,8.939639],[-6.511259,5.375852,-6.657697,-3.979221],[5.638874,-7.653954,-6.384591,4.853141],[-8.402626,0.646552,6.554793,-3.705052],[8.340703,-9.397620,-7.503625,8.660722],[8.043004,-0.379572,-2.857221,-9.398797],[-3.604812,-5.122739,4.441494,-3.357536],[-4.190446,-5.022181,-3.662679,-8.654370],[-2.762896,-8.576399,-3.896802,1.490064],[-3.010159,7.217809,-1.168775,-2.342891],[-5.975038,8.307145,8.761902,2.332845],[0.549380,2.088990,-7.550033,4.357465],[6.660088,9.912565,5.464187,6.028038],[7.216105,6.412821,-6.922765,-0.902764],[-9.550446,-6.532078,-1.671280,4.575812],[9.996551,6.108603,-5.506147,-1.328436],[-8.629808,8.788325,-4.220169,-4.616591],[3.232300,1.424737,8.716607,-8.565139],[3.912774,6.240494,9.431780,7.050741],[-1.961124,-5.016450,2.103599,-1.031426],[6.450592,-6.627323,-2.891473,1.197285],[-4.895245,9.428614,-3.950701,2.046942],[-5.452892,5.242490,7.431134,-5.439327],[0.455031,-4.150961,-6.870672,9.627307],[-9.469639,6.289710,-0.807501,-9.596054],[-3.785474,-5.194302,0.162299,-1.986930],[1.681900,7.350231,5.475149,-0.165633],[8.210831,8.302256,1.310205,6.001981],[-8.722573,-7.184642,8.145391,8.557976],[-5.805676,-5.591456,5.708113,9.966800],[5.409723,6.316571,-0.493561,3.395281],[-1.064130,7.642789,8.993834,4.072866],[-6.539990,-6.285361,-4.198346,2.946819],[-4.018730,5.726390,-8.433997,-5.960163],[3.890399,-4.161258,6.873755,1.474607],[4.384310,2.542074,5.371457,-2.978329],[-6.208527,5.154547,5.144177,0.067267],[2.630657,1.949292,0.409024,6.705124],[-2.783868,-3.766063,6.265983,4.799375],[2.632241,-9.576459,-1.274154,-3.429014],[9.243835,1.424333,-0.602230,-6.279917],[4.295154,5.700124,5.846087,-4.218681],[2.042936,2.459660,-5.453427,8.106320],[2.184183,7.884322,-3.786928,-8.383889],[8.531531,-1.292763,-2.592385,8.656792],[9.206669,-3.796208,1.430089,-1.810055],[-0.140067,-4.887209,-2.344608,-4.839893],[7.510371,5.958431,2.416002,0.957666],[-3.533215,-2.455567,9.420479,-5.408209],[-4.030419,8.408123,6.406355,-6.342589],[-8.476793,7.593082,-9.224175,-3.501722],[7.195389,-7.435621,-9.876009,7.835427],[3.506117,8.937912,-4.296955,0.705646],[6.590395,-4.318221,-4.819285,-0.629933],[6.890991,-9.559036,9.711835,3.106909],[-1.611642,6.731771,-6.282883,6.528730],[-0.585131,-4.926166,9.596398,4.701687],[-7.515435,1.896769,9.619828,1.874488],[7.895690,-3.670657,5.047953,1.276114],[8.107241,-0.805670,-9.880857,-0.293138],[-4.719889,4.035272,-0.152529,-6.064095],[-2.778490,-9.688616,0.919561,8.371922],[4.090952,8.905619,5.267085,-0.934120],[1.707704,-5.408896,0.872607,-1.833955],[3.959875,9.953618,3.229106,9.486862],[0.902223,5.584301,1.528095,-3.498195],[-0.663969,2.271978,-6.131846,8.014762],[-6.896911,6.143271,-5.925971,-6.381595],[8.661148,2.002179,9.323070,8.385325],[-5.270688,-7.563166,0.256805,-5.499973],[-8.712212,7.778983,-2.613249,0.663573],[9.343635,-8.404753,-3.424934,5.784066],[-4.173151,-1.764553,8.063322,-6.092556],[-9.842167,-7.683397,4.887954,-4.854083],[-8.063957,6.018728,-6.552917,-7.300274],[1.658188,5.861825,3.071985,-8.146448],[3.560659,7.172573,-9.522113,9.378101],[-6.006717,-7.341419,-1.301010,-7.463050],[-4.903610,8.419456,-7.897489,-5.961840],[-1.017553,6.046344,7.086929,3.575664],[4.800857,9.968269,7.724886,-6.017331],[-1.128164,7.366269,6.719890,-6.146078]], dtype = "float32")#candidate|8929|(96, 4)|const|float32
call_8927 = relay.TupleGetItem(func_7305_call(relay.reshape(const_8928.astype('bool'), [16, 8, 5]), relay.reshape(const_8929.astype('float32'), [384,]), ), 3)
call_8930 = relay.TupleGetItem(func_7309_call(relay.reshape(const_8928.astype('bool'), [16, 8, 5]), relay.reshape(const_8929.astype('float32'), [384,]), ), 3)
func_5223_call = mod.get_global_var('func_5223')
func_5226_call = mutated_mod.get_global_var('func_5226')
const_8932 = relay.const([-8.150684,6.375710,6.785983,9.538304,6.544731,-0.292552,6.966266,0.669257,6.753705,-2.656773,-0.661318,-5.922267,2.907272,3.253182,-3.637514,-3.727145,0.827976,-4.104321,4.457141,4.013743,-7.367464,1.463456,4.867020,-5.086260,7.848514,0.775826,5.464077,-5.243396,6.159782,3.044887,3.624763,-6.195390,3.240981,4.039047,-3.148084,9.552718,-3.681172,-9.480823,7.695387,-2.563421,-1.722640,-5.188149,9.842010,-7.813850,-8.197770,-0.088081,6.979222,8.668250,0.266148,7.847184,4.041392,3.239984,0.525491,1.902439,-5.909641,-7.876862,-2.131295,-6.177133,8.071747,-5.153637,-4.045306,0.358416,8.128739,-1.604236,8.369364,5.865154,-7.286049,-6.356749,-0.585578,0.579112,9.018685,9.277265,-8.929788,8.258975,-7.533035,-0.497957,9.539871,2.799243,-5.299946,6.546541,3.468977,-4.779308,6.969628,-6.071535,1.491770,-8.945486,1.225779,-8.877056,4.626515,2.843401,2.463996,-6.519876,0.986338,5.707845,3.810247,4.841509,6.573871,3.127748,-0.087072,2.334732,9.699666,-0.818682,1.821390,-9.981257,-9.839461,7.778095,4.998215,-9.246482,7.691752,-3.752263,5.669600,2.774241,-0.027211,8.171681,-6.957726,-7.491042,2.764284,-2.452352,7.348953,0.701452,-1.571945,6.519184,4.408038,-8.875014,1.214596,1.432148,-9.394634,-1.009701,6.547548,8.690267,-8.174753,8.046152,-0.679863,-8.114212,9.326439,-7.084912,-8.697247,7.234362,5.045003,-1.439915,2.756743,2.241504,6.376564,-5.056555,-5.325412,-2.908009,6.713086,-9.727674,-8.972054,2.067812,-2.931739,8.816664,8.072618,-8.328942,1.410813,2.014105,4.836697,-2.285723,-1.028100,4.336224,0.148391,5.482924,-5.683760,-0.323842,5.152330,-1.105148,4.203547,-4.460785,-1.326711,-5.907234,-5.574887,-1.765362,-3.056260,-9.314799,6.091639,5.087416,9.822779,3.282372,-8.117585,-4.655121,3.820869,-5.425645,5.066889,3.576950,6.680030,6.185318,-9.889222,6.782936,-0.916746,5.807075,-4.785564,-2.991158,-6.547315,3.982426,-3.623806,-7.856403,-9.578370,-8.687335], dtype = "float32")#candidate|8932|(198,)|const|float32
call_8931 = func_5223_call(relay.reshape(const_8932.astype('float32'), [11, 6, 3]))
call_8933 = func_5223_call(relay.reshape(const_8932.astype('float32'), [11, 6, 3]))
func_5285_call = mod.get_global_var('func_5285')
func_5286_call = mutated_mod.get_global_var('func_5286')
call_8943 = func_5285_call()
call_8944 = func_5285_call()
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_8947 = relay.TupleGetItem(func_4175_call(), 0)
call_8948 = relay.TupleGetItem(func_4176_call(), 0)
bop_8957 = relay.multiply(const_8929.astype('float64'), relay.reshape(call_8927.astype('float64'), relay.shape_of(const_8929))) # shape=(96, 4)
bop_8960 = relay.multiply(const_8929.astype('float64'), relay.reshape(call_8930.astype('float64'), relay.shape_of(const_8929))) # shape=(96, 4)
func_4175_call = mod.get_global_var('func_4175')
func_4176_call = mutated_mod.get_global_var('func_4176')
call_8961 = relay.TupleGetItem(func_4175_call(), 0)
call_8962 = relay.TupleGetItem(func_4176_call(), 0)
bop_8963 = relay.mod(call_8931.astype('float32'), relay.reshape(const_8932.astype('float32'), relay.shape_of(call_8931))) # shape=(11, 6, 3)
bop_8966 = relay.mod(call_8933.astype('float32'), relay.reshape(const_8932.astype('float32'), relay.shape_of(call_8933))) # shape=(11, 6, 3)
output = relay.Tuple([call_8912,const_8928,call_8943,call_8947,bop_8957,call_8961,bop_8963,])
output2 = relay.Tuple([call_8913,const_8928,call_8944,call_8948,bop_8960,call_8962,bop_8966,])
func_8983 = relay.Function([], output)
mod['func_8983'] = func_8983
mod = relay.transform.InferType()(mod)
output = func_8983()
func_8984 = relay.Function([], output)
mutated_mod['func_8984'] = func_8984
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9016 = relay.const([[[-9.276395,4.534196,-4.517022,6.057263,3.274566,9.375555,-3.884203,5.444166]],[[-6.381345,8.847910,6.560647,4.264714,1.859636,7.521720,9.857234,-2.105733]],[[-1.544089,9.157669,1.492349,-6.828523,0.083132,4.039952,5.313591,4.371774]],[[2.372788,-5.947659,-4.856183,-3.729183,-4.433934,3.807552,0.312043,-7.103744]],[[5.115657,-3.983764,-1.280478,8.316035,-7.975420,8.002808,2.971271,-5.530579]],[[7.314771,3.947508,-3.174087,3.045046,7.751896,-5.670844,-6.868898,-3.541468]],[[-7.678651,6.314461,3.321674,0.266106,5.538610,-3.308431,1.189749,5.985342]],[[5.240669,1.020516,2.030846,6.636877,0.831729,6.189509,-6.906602,-0.144580]]], dtype = "float32")#candidate|9016|(8, 1, 8)|const|float32
uop_9017 = relay.acos(const_9016.astype('float32')) # shape=(8, 1, 8)
func_4897_call = mod.get_global_var('func_4897')
func_4901_call = mutated_mod.get_global_var('func_4901')
var_9035 = relay.var("var_9035", dtype = "int16", shape = (2912,))#candidate|9035|(2912,)|var|int16
var_9036 = relay.var("var_9036", dtype = "uint16", shape = ())#candidate|9036|()|var|uint16
const_9037 = relay.const([False,False,False,True,False,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False], dtype = "bool")#candidate|9037|(504,)|const|bool
call_9034 = relay.TupleGetItem(func_4897_call(relay.reshape(var_9035.astype('int16'), [16, 14, 13]), relay.reshape(var_9036.astype('uint16'), []), relay.reshape(const_9037.astype('bool'), [504,]), ), 6)
call_9038 = relay.TupleGetItem(func_4901_call(relay.reshape(var_9035.astype('int16'), [16, 14, 13]), relay.reshape(var_9036.astype('uint16'), []), relay.reshape(const_9037.astype('bool'), [504,]), ), 6)
func_7205_call = mod.get_global_var('func_7205')
func_7207_call = mutated_mod.get_global_var('func_7207')
var_9040 = relay.var("var_9040", dtype = "float32", shape = (384,))#candidate|9040|(384,)|var|float32
call_9039 = relay.TupleGetItem(func_7205_call(relay.reshape(var_9040.astype('float32'), [384,])), 2)
call_9041 = relay.TupleGetItem(func_7207_call(relay.reshape(var_9040.astype('float32'), [384,])), 2)
output = relay.Tuple([uop_9017,call_9034,var_9035,var_9036,const_9037,call_9039,var_9040,])
output2 = relay.Tuple([uop_9017,call_9038,var_9035,var_9036,const_9037,call_9041,var_9040,])
func_9045 = relay.Function([var_9035,var_9036,var_9040,], output)
mod['func_9045'] = func_9045
mod = relay.transform.InferType()(mod)
mutated_mod['func_9045'] = func_9045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9045_call = mutated_mod.get_global_var('func_9045')
var_9047 = relay.var("var_9047", dtype = "int16", shape = (2912,))#candidate|9047|(2912,)|var|int16
var_9048 = relay.var("var_9048", dtype = "uint16", shape = ())#candidate|9048|()|var|uint16
var_9049 = relay.var("var_9049", dtype = "float32", shape = (384,))#candidate|9049|(384,)|var|float32
call_9046 = func_9045_call(var_9047,var_9048,var_9049,)
output = call_9046
func_9050 = relay.Function([var_9047,var_9048,var_9049,], output)
mutated_mod['func_9050'] = func_9050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4158_call = mod.get_global_var('func_4158')
func_4160_call = mutated_mod.get_global_var('func_4160')
call_9072 = func_4158_call()
call_9073 = func_4158_call()
uop_9116 = relay.sinh(call_9072.astype('float32')) # shape=(11, 15, 15)
uop_9118 = relay.sinh(call_9073.astype('float32')) # shape=(11, 15, 15)
output = uop_9116
output2 = uop_9118
func_9122 = relay.Function([], output)
mod['func_9122'] = func_9122
mod = relay.transform.InferType()(mod)
mutated_mod['func_9122'] = func_9122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9122_call = mutated_mod.get_global_var('func_9122')
call_9123 = func_9122_call()
output = call_9123
func_9124 = relay.Function([], output)
mutated_mod['func_9124'] = func_9124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4158_call = mod.get_global_var('func_4158')
func_4160_call = mutated_mod.get_global_var('func_4160')
call_9148 = func_4158_call()
call_9149 = func_4158_call()
output = call_9148
output2 = call_9149
func_9154 = relay.Function([], output)
mod['func_9154'] = func_9154
mod = relay.transform.InferType()(mod)
output = func_9154()
func_9155 = relay.Function([], output)
mutated_mod['func_9155'] = func_9155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8860_call = mod.get_global_var('func_8860')
func_8862_call = mutated_mod.get_global_var('func_8862')
call_9173 = relay.TupleGetItem(func_8860_call(), 0)
call_9174 = relay.TupleGetItem(func_8862_call(), 0)
output = call_9173
output2 = call_9174
func_9216 = relay.Function([], output)
mod['func_9216'] = func_9216
mod = relay.transform.InferType()(mod)
mutated_mod['func_9216'] = func_9216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9216_call = mutated_mod.get_global_var('func_9216')
call_9217 = func_9216_call()
output = call_9217
func_9218 = relay.Function([], output)
mutated_mod['func_9218'] = func_9218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7183_call = mod.get_global_var('func_7183')
func_7185_call = mutated_mod.get_global_var('func_7185')
call_9280 = func_7183_call()
call_9281 = func_7183_call()
func_7305_call = mod.get_global_var('func_7305')
func_7309_call = mutated_mod.get_global_var('func_7309')
const_9291 = relay.const([[True,True],[True,True],[False,False],[False,False],[False,False],[True,True],[False,True],[True,True],[False,True],[False,False],[True,True],[True,True],[True,True],[False,False],[False,True],[True,True],[False,False],[False,False],[True,True],[True,True],[True,False],[False,False],[False,False],[True,False],[True,False],[False,False],[True,True],[True,False],[True,True],[False,True],[False,True],[False,False],[False,True],[True,True],[False,False],[False,True],[False,False],[True,False],[False,True],[True,True],[True,True],[True,False],[True,True],[False,False],[False,False],[True,True],[True,True],[True,True],[False,False],[False,False],[False,False],[False,True],[True,True],[True,True],[False,False],[True,True],[False,False],[True,True],[True,True],[True,False],[True,False],[True,True],[True,False],[False,False],[True,True],[False,True],[True,False],[False,False],[False,False],[False,False],[False,True],[False,False],[True,True],[True,True],[True,False],[True,False],[False,False],[True,False],[False,False],[False,True],[True,False],[True,False],[True,True],[True,True],[True,True],[True,False],[False,True],[False,True],[True,False],[False,False],[False,True],[False,True],[True,False],[True,False],[False,True],[True,True],[True,False],[True,False],[False,False],[True,True],[True,True],[True,True],[False,False],[True,True],[False,True],[True,False],[True,False],[True,False],[False,False],[False,False],[True,False],[True,True],[False,False],[True,False],[True,True],[False,False],[False,True],[False,False],[True,True],[False,True],[False,True],[False,True],[True,True],[False,True],[False,False],[True,True],[False,False],[False,True],[True,False],[True,False],[True,True],[False,True],[True,False],[True,False],[True,True],[False,False],[True,False],[True,False],[True,True],[False,True],[False,True],[True,False],[False,True],[True,True],[True,True],[True,False],[False,True],[True,True],[False,True],[False,True],[False,False],[True,True],[False,True],[False,True],[False,False],[True,False],[True,False],[True,True],[True,False],[False,True],[True,True],[True,False],[True,True],[True,True],[False,True],[False,False],[True,False],[False,True],[True,False],[True,True],[False,False],[False,True],[False,True],[True,True],[True,True],[False,True],[True,False],[True,False],[True,False],[True,True],[False,True],[True,True],[True,True],[True,False],[True,False],[False,True],[False,False],[True,False],[True,False],[True,False],[True,False],[True,False],[False,False],[False,True],[True,True],[False,True],[True,True],[False,False],[True,True],[True,False],[True,True],[False,True],[True,True],[True,False],[True,True],[False,False],[True,False],[True,True],[False,True],[False,True],[True,False],[False,False],[True,True],[False,False],[False,True],[True,False],[False,True],[True,True],[False,True],[True,True],[False,False],[True,True],[False,False],[False,False],[False,False],[False,True],[False,False],[True,True],[True,True],[False,False],[True,True],[False,True],[False,True],[True,False],[False,False],[True,False],[False,False],[True,False],[True,True],[True,True],[True,True],[False,True],[True,True],[True,True],[False,True],[True,True],[False,True],[True,False],[False,False],[False,True],[False,True],[True,True],[True,True],[True,False],[False,False],[True,False],[True,True],[True,True],[False,False],[False,True],[True,True],[False,True],[False,True],[True,False],[True,True],[True,False],[False,True],[True,False],[False,False],[False,False],[True,False],[False,False],[True,False],[True,False],[False,True],[True,False],[False,True],[True,False],[True,True],[True,False],[False,False],[False,True],[True,True],[True,True],[False,True],[False,True],[True,False],[True,True],[False,True],[True,True],[False,False],[True,True],[True,False],[True,False],[True,False],[True,False],[True,True],[True,False],[True,False],[False,True],[True,False],[False,True],[False,True],[False,True],[False,True],[False,True],[True,True],[False,False],[True,True],[True,True],[False,False],[True,True],[True,False],[True,False],[False,True],[True,True],[True,True],[False,False],[True,False],[True,True]], dtype = "bool")#candidate|9291|(320, 2)|const|bool
var_9292 = relay.var("var_9292", dtype = "float32", shape = (2, 192))#candidate|9292|(2, 192)|var|float32
call_9290 = relay.TupleGetItem(func_7305_call(relay.reshape(const_9291.astype('bool'), [16, 8, 5]), relay.reshape(var_9292.astype('float32'), [384,]), ), 3)
call_9293 = relay.TupleGetItem(func_7309_call(relay.reshape(const_9291.astype('bool'), [16, 8, 5]), relay.reshape(var_9292.astype('float32'), [384,]), ), 3)
func_4029_call = mod.get_global_var('func_4029')
func_4035_call = mutated_mod.get_global_var('func_4035')
var_9299 = relay.var("var_9299", dtype = "uint8", shape = (624,))#candidate|9299|(624,)|var|uint8
var_9300 = relay.var("var_9300", dtype = "bool", shape = (6, 84))#candidate|9300|(6, 84)|var|bool
call_9298 = relay.TupleGetItem(func_4029_call(relay.reshape(call_9280.astype('float32'), [11, 15, 15]), relay.reshape(call_9280.astype('bool'), [11, 15, 15]), relay.reshape(var_9299.astype('uint8'), [624,]), relay.reshape(var_9300.astype('bool'), [504,]), ), 3)
call_9301 = relay.TupleGetItem(func_4035_call(relay.reshape(call_9280.astype('float32'), [11, 15, 15]), relay.reshape(call_9280.astype('bool'), [11, 15, 15]), relay.reshape(var_9299.astype('uint8'), [624,]), relay.reshape(var_9300.astype('bool'), [504,]), ), 3)
func_4989_call = mod.get_global_var('func_4989')
func_4993_call = mutated_mod.get_global_var('func_4993')
const_9303 = relay.const([9.859971,-6.916656,-8.346352,-9.790482,3.738340,1.261726,-8.180448,7.116091,-1.704861,-2.024532,1.246494,-6.438715,-3.226573,6.500953,-5.877686,-4.374823,-2.442602,6.811276,2.773362,5.743052,5.349182,9.950352,9.564536,6.650399,-8.078700,-9.630781,-2.602361,0.211759,-4.531970,-3.911317,5.086091,-0.209554], dtype = "float64")#candidate|9303|(32,)|const|float64
const_9304 = relay.const([-1.921782,6.055908,5.086409,5.104440,-4.541419,-6.235145,-9.600882,-0.470843,3.928807,-7.696874,0.007760,-9.231365,1.148325,-3.069941,-4.050080,1.537934,-4.825223,9.171325,7.502718,-3.938611,9.503403,-7.254942,-4.366612,-4.062385,3.639917,8.020146,8.869952,4.431377,-5.238790,6.486256,7.330324,4.917302,-7.135830,0.302066,-6.319485,9.286862,-7.708308,9.548474,-6.091656,-2.444304,-2.312198,-3.270407,2.960798,-4.568500,-5.949311,1.692027,8.573827,0.248324,9.449495,0.146101,8.231788,5.548299,6.657672,-2.974346], dtype = "float32")#candidate|9304|(54,)|const|float32
call_9302 = relay.TupleGetItem(func_4989_call(relay.reshape(const_9303.astype('float64'), [2, 8, 2]), relay.reshape(const_9304.astype('float32'), [9, 6]), ), 1)
call_9305 = relay.TupleGetItem(func_4993_call(relay.reshape(const_9303.astype('float64'), [2, 8, 2]), relay.reshape(const_9304.astype('float32'), [9, 6]), ), 1)
func_7995_call = mod.get_global_var('func_7995')
func_7999_call = mutated_mod.get_global_var('func_7999')
var_9321 = relay.var("var_9321", dtype = "int64", shape = ())#candidate|9321|()|var|int64
var_9322 = relay.var("var_9322", dtype = "int64", shape = (9,))#candidate|9322|(9,)|var|int64
call_9320 = func_7995_call(relay.reshape(var_9321.astype('int64'), []), relay.reshape(var_9322.astype('int64'), [1, 9]), )
call_9323 = func_7995_call(relay.reshape(var_9321.astype('int64'), []), relay.reshape(var_9322.astype('int64'), [1, 9]), )
output = relay.Tuple([call_9280,call_9290,const_9291,var_9292,call_9298,var_9299,var_9300,call_9302,const_9303,const_9304,call_9320,var_9321,var_9322,])
output2 = relay.Tuple([call_9281,call_9293,const_9291,var_9292,call_9301,var_9299,var_9300,call_9305,const_9303,const_9304,call_9323,var_9321,var_9322,])
func_9372 = relay.Function([var_9292,var_9299,var_9300,var_9321,var_9322,], output)
mod['func_9372'] = func_9372
mod = relay.transform.InferType()(mod)
var_9373 = relay.var("var_9373", dtype = "float32", shape = (2, 192))#candidate|9373|(2, 192)|var|float32
var_9374 = relay.var("var_9374", dtype = "uint8", shape = (624,))#candidate|9374|(624,)|var|uint8
var_9375 = relay.var("var_9375", dtype = "bool", shape = (6, 84))#candidate|9375|(6, 84)|var|bool
var_9376 = relay.var("var_9376", dtype = "int64", shape = ())#candidate|9376|()|var|int64
var_9377 = relay.var("var_9377", dtype = "int64", shape = (9,))#candidate|9377|(9,)|var|int64
output = func_9372(var_9373,var_9374,var_9375,var_9376,var_9377,)
func_9378 = relay.Function([var_9373,var_9374,var_9375,var_9376,var_9377,], output)
mutated_mod['func_9378'] = func_9378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8368_call = mod.get_global_var('func_8368')
func_8369_call = mutated_mod.get_global_var('func_8369')
call_9400 = func_8368_call()
call_9401 = func_8368_call()
func_6942_call = mod.get_global_var('func_6942')
func_6943_call = mutated_mod.get_global_var('func_6943')
call_9402 = relay.TupleGetItem(func_6942_call(), 0)
call_9403 = relay.TupleGetItem(func_6943_call(), 0)
output = relay.Tuple([call_9400,call_9402,])
output2 = relay.Tuple([call_9401,call_9403,])
func_9408 = relay.Function([], output)
mod['func_9408'] = func_9408
mod = relay.transform.InferType()(mod)
mutated_mod['func_9408'] = func_9408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9408_call = mutated_mod.get_global_var('func_9408')
call_9409 = func_9408_call()
output = call_9409
func_9410 = relay.Function([], output)
mutated_mod['func_9410'] = func_9410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_9414 = relay.TupleGetItem(func_5872_call(), 1)
call_9415 = relay.TupleGetItem(func_5874_call(), 1)
output = relay.Tuple([call_9414,])
output2 = relay.Tuple([call_9415,])
func_9416 = relay.Function([], output)
mod['func_9416'] = func_9416
mod = relay.transform.InferType()(mod)
output = func_9416()
func_9417 = relay.Function([], output)
mutated_mod['func_9417'] = func_9417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7902_call = mod.get_global_var('func_7902')
func_7903_call = mutated_mod.get_global_var('func_7903')
call_9444 = relay.TupleGetItem(func_7902_call(), 1)
call_9445 = relay.TupleGetItem(func_7903_call(), 1)
func_6951_call = mod.get_global_var('func_6951')
func_6953_call = mutated_mod.get_global_var('func_6953')
call_9451 = relay.TupleGetItem(func_6951_call(), 0)
call_9452 = relay.TupleGetItem(func_6953_call(), 0)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_9455 = relay.TupleGetItem(func_5872_call(), 1)
call_9456 = relay.TupleGetItem(func_5874_call(), 1)
output = relay.Tuple([call_9444,call_9451,call_9455,])
output2 = relay.Tuple([call_9445,call_9452,call_9456,])
func_9467 = relay.Function([], output)
mod['func_9467'] = func_9467
mod = relay.transform.InferType()(mod)
output = func_9467()
func_9468 = relay.Function([], output)
mutated_mod['func_9468'] = func_9468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3924_call = mod.get_global_var('func_3924')
func_3925_call = mutated_mod.get_global_var('func_3925')
call_9489 = relay.TupleGetItem(func_3924_call(), 0)
call_9490 = relay.TupleGetItem(func_3925_call(), 0)
output = call_9489
output2 = call_9490
func_9494 = relay.Function([], output)
mod['func_9494'] = func_9494
mod = relay.transform.InferType()(mod)
mutated_mod['func_9494'] = func_9494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9494_call = mutated_mod.get_global_var('func_9494')
call_9495 = func_9494_call()
output = call_9495
func_9496 = relay.Function([], output)
mutated_mod['func_9496'] = func_9496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7736_call = mod.get_global_var('func_7736')
func_7738_call = mutated_mod.get_global_var('func_7738')
call_9606 = relay.TupleGetItem(func_7736_call(), 2)
call_9607 = relay.TupleGetItem(func_7738_call(), 2)
output = call_9606
output2 = call_9607
func_9612 = relay.Function([], output)
mod['func_9612'] = func_9612
mod = relay.transform.InferType()(mod)
mutated_mod['func_9612'] = func_9612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9612_call = mutated_mod.get_global_var('func_9612')
call_9613 = func_9612_call()
output = call_9613
func_9614 = relay.Function([], output)
mutated_mod['func_9614'] = func_9614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9154_call = mod.get_global_var('func_9154')
func_9155_call = mutated_mod.get_global_var('func_9155')
call_9652 = func_9154_call()
call_9653 = func_9154_call()
func_8983_call = mod.get_global_var('func_8983')
func_8984_call = mutated_mod.get_global_var('func_8984')
call_9686 = relay.TupleGetItem(func_8983_call(), 6)
call_9687 = relay.TupleGetItem(func_8984_call(), 6)
func_8148_call = mod.get_global_var('func_8148')
func_8152_call = mutated_mod.get_global_var('func_8152')
var_9689 = relay.var("var_9689", dtype = "float32", shape = (576,))#candidate|9689|(576,)|var|float32
const_9690 = relay.const([3.517084,-5.061916,3.335326,8.009272,-3.193028,7.976238,-1.340245,4.234743,-6.656958,9.951349,3.879995,-5.713882,2.839693,-2.685517,-5.372738,-0.578031,-2.970277,-2.663090,-7.903193,-8.323783,-3.542223,4.029260,0.402977,3.246581,-4.373267,-5.066086,-3.408531,-3.153675,3.363433,-6.090198,3.564478,-6.086305,2.934066,2.911205,-8.872380,-9.849961,4.133780,9.234492,1.699151,-9.715901,6.498579,1.437214,-2.155109,-7.459957,5.472611,2.674986,2.064629,-3.711283,5.978173,-0.417261,3.248436,-6.049704,-5.295302,-4.931954,-6.815566,-7.441622,2.992252,8.479030,8.105992,9.473132,8.720502,8.544689,-8.550346,6.681059,2.600942,6.481480,5.153410,-1.548016,0.712363,2.292373,1.229066,-5.146118,0.670264,-8.212303,6.416787,0.618272,2.674284,6.997233,-8.556945,0.138005,5.795267,0.546990,-1.412674,-4.306321,-5.294679,5.153691,4.542466,-0.076755,5.486100,3.662154,-1.609741,5.838405,2.572176,-7.944589,-4.309520,-0.995661,-2.070866,-5.281285,8.455999,5.526400,-9.010301,1.783863,-9.701396,-9.536714,4.732236,-9.718865,4.618135,1.436914,-0.265680,-3.796065,9.184228,-9.722970,-1.739425,-2.783278,-1.272998,0.825491,-6.908475,-4.391998,-2.680334,-2.995805,4.441766,-3.287044,0.874005,1.994090,3.800815,-9.906342,-2.967949,-8.990075,1.536239,-8.792794,-6.560950,-5.615007,0.754273,4.185317,9.145395,7.525175,-4.322462,2.837421,8.888504,-0.505308,3.445518,8.361046,1.200824,-5.544745,-1.473956,-7.769664,5.501186,3.991322,-9.615549,-3.282843,-0.583801,-8.241515,2.380190,-4.663811,-2.311092,8.795424,5.729883,-3.165531,0.590156,6.652761,3.161199,-1.903017,-8.475522,0.558977,2.055793,4.786051,8.529968,-8.868291,2.342354,4.115043,6.290780,5.809369,5.573103,-7.086339,5.168836,-3.336725,7.172178,0.999366,-6.423886,-5.358890,-7.412981,-3.791636,4.071071,6.618777,0.968399,1.733840,6.153250,-8.042752,-3.736418,6.918386,-6.210804,-3.559030], dtype = "float32")#candidate|9690|(192,)|const|float32
call_9688 = relay.TupleGetItem(func_8148_call(relay.reshape(var_9689.astype('float32'), [8, 6, 12]), relay.reshape(var_9689.astype('float32'), [8, 6, 12]), relay.reshape(const_9690.astype('float32'), [192,]), ), 1)
call_9691 = relay.TupleGetItem(func_8152_call(relay.reshape(var_9689.astype('float32'), [8, 6, 12]), relay.reshape(var_9689.astype('float32'), [8, 6, 12]), relay.reshape(const_9690.astype('float32'), [192,]), ), 1)
func_7143_call = mod.get_global_var('func_7143')
func_7149_call = mutated_mod.get_global_var('func_7149')
var_9710 = relay.var("var_9710", dtype = "bool", shape = (252,))#candidate|9710|(252,)|var|bool
var_9711 = relay.var("var_9711", dtype = "uint8", shape = (330,))#candidate|9711|(330,)|var|uint8
const_9712 = relay.const([False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,False,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True], dtype = "bool")#candidate|9712|(504,)|const|bool
var_9713 = relay.var("var_9713", dtype = "float32", shape = (54,))#candidate|9713|(54,)|var|float32
call_9709 = relay.TupleGetItem(func_7143_call(relay.reshape(var_9710.astype('bool'), [252,]), relay.reshape(var_9711.astype('uint8'), [330,]), relay.reshape(const_9712.astype('bool'), [12, 42]), relay.reshape(var_9713.astype('float32'), [54,]), ), 0)
call_9714 = relay.TupleGetItem(func_7149_call(relay.reshape(var_9710.astype('bool'), [252,]), relay.reshape(var_9711.astype('uint8'), [330,]), relay.reshape(const_9712.astype('bool'), [12, 42]), relay.reshape(var_9713.astype('float32'), [54,]), ), 0)
func_8368_call = mod.get_global_var('func_8368')
func_8369_call = mutated_mod.get_global_var('func_8369')
call_9725 = func_8368_call()
call_9726 = func_8368_call()
output = relay.Tuple([call_9652,call_9686,call_9688,var_9689,const_9690,call_9709,var_9710,var_9711,const_9712,var_9713,call_9725,])
output2 = relay.Tuple([call_9653,call_9687,call_9691,var_9689,const_9690,call_9714,var_9710,var_9711,const_9712,var_9713,call_9726,])
func_9739 = relay.Function([var_9689,var_9710,var_9711,var_9713,], output)
mod['func_9739'] = func_9739
mod = relay.transform.InferType()(mod)
var_9740 = relay.var("var_9740", dtype = "float32", shape = (576,))#candidate|9740|(576,)|var|float32
var_9741 = relay.var("var_9741", dtype = "bool", shape = (252,))#candidate|9741|(252,)|var|bool
var_9742 = relay.var("var_9742", dtype = "uint8", shape = (330,))#candidate|9742|(330,)|var|uint8
var_9743 = relay.var("var_9743", dtype = "float32", shape = (54,))#candidate|9743|(54,)|var|float32
output = func_9739(var_9740,var_9741,var_9742,var_9743,)
func_9744 = relay.Function([var_9740,var_9741,var_9742,var_9743,], output)
mutated_mod['func_9744'] = func_9744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3909_call = mod.get_global_var('func_3909')
func_3910_call = mutated_mod.get_global_var('func_3910')
call_9870 = relay.TupleGetItem(func_3909_call(), 0)
call_9871 = relay.TupleGetItem(func_3910_call(), 0)
func_7995_call = mod.get_global_var('func_7995')
func_7999_call = mutated_mod.get_global_var('func_7999')
const_9911 = relay.const(-10, dtype = "int64")#candidate|9911|()|const|int64
var_9912 = relay.var("var_9912", dtype = "int64", shape = (9,))#candidate|9912|(9,)|var|int64
call_9910 = func_7995_call(relay.reshape(const_9911.astype('int64'), []), relay.reshape(var_9912.astype('int64'), [1, 9]), )
call_9913 = func_7995_call(relay.reshape(const_9911.astype('int64'), []), relay.reshape(var_9912.astype('int64'), [1, 9]), )
output = relay.Tuple([call_9870,call_9910,const_9911,var_9912,])
output2 = relay.Tuple([call_9871,call_9913,const_9911,var_9912,])
func_9916 = relay.Function([var_9912,], output)
mod['func_9916'] = func_9916
mod = relay.transform.InferType()(mod)
var_9917 = relay.var("var_9917", dtype = "int64", shape = (9,))#candidate|9917|(9,)|var|int64
output = func_9916(var_9917)
func_9918 = relay.Function([var_9917], output)
mutated_mod['func_9918'] = func_9918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7736_call = mod.get_global_var('func_7736')
func_7738_call = mutated_mod.get_global_var('func_7738')
call_9923 = relay.TupleGetItem(func_7736_call(), 2)
call_9924 = relay.TupleGetItem(func_7738_call(), 2)
output = call_9923
output2 = call_9924
func_9930 = relay.Function([], output)
mod['func_9930'] = func_9930
mod = relay.transform.InferType()(mod)
mutated_mod['func_9930'] = func_9930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9930_call = mutated_mod.get_global_var('func_9930')
call_9931 = func_9930_call()
output = call_9931
func_9932 = relay.Function([], output)
mutated_mod['func_9932'] = func_9932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5666_call = mod.get_global_var('func_5666')
func_5667_call = mutated_mod.get_global_var('func_5667')
call_10008 = func_5666_call()
call_10009 = func_5666_call()
func_8201_call = mod.get_global_var('func_8201')
func_8203_call = mutated_mod.get_global_var('func_8203')
const_10013 = relay.const([[False,True,True,True,False,True,False,True,True,False,False,False,True,True],[True,False,True,True,False,False,False,False,False,False,True,True,False,False],[True,True,True,True,False,False,True,False,True,True,True,True,False,False],[True,True,True,False,True,False,True,True,True,True,True,True,True,True],[False,True,True,False,False,True,True,False,True,False,True,True,False,False],[False,False,False,True,True,True,False,False,False,True,True,True,True,False],[False,False,True,False,False,True,False,False,False,False,True,True,False,False],[False,False,False,False,False,True,False,True,False,False,True,False,True,False],[True,False,True,True,True,False,False,True,True,False,True,True,False,False],[True,True,False,True,True,True,False,False,False,False,True,False,False,True],[True,True,True,False,False,False,False,True,True,False,False,False,False,True],[False,True,False,True,False,False,False,True,True,False,True,True,False,True],[False,False,False,True,False,True,True,False,False,True,True,True,True,True],[True,False,False,True,True,False,False,True,True,True,False,False,True,False],[False,False,True,False,False,True,True,False,False,False,False,False,False,True],[True,True,False,True,True,True,False,False,True,True,True,False,False,False],[True,True,False,True,True,True,True,False,False,False,False,False,False,True],[True,False,False,False,False,True,True,True,False,False,False,True,True,True],[False,True,True,True,False,True,False,False,False,True,False,False,True,False],[True,True,True,False,False,False,False,False,True,False,True,True,False,True],[False,True,True,False,False,False,True,False,False,True,False,False,False,False],[True,True,True,False,True,False,False,True,False,False,True,True,False,False],[False,False,False,True,True,True,True,True,True,True,False,True,False,False],[False,True,True,True,False,False,True,True,False,True,False,True,True,True],[False,False,False,True,False,False,False,False,True,True,True,False,False,True],[False,True,False,False,False,True,True,False,True,False,False,True,True,False],[False,False,False,True,False,False,False,True,False,False,True,True,True,False],[True,False,False,True,True,False,True,True,True,False,True,False,False,True],[True,True,False,False,False,False,True,False,False,True,True,False,True,False],[True,False,True,False,False,True,False,True,True,True,False,False,False,False],[False,False,True,True,False,True,True,False,True,False,False,True,True,False],[True,False,False,False,True,True,True,True,False,True,True,True,False,True],[True,False,True,True,True,True,True,True,False,False,True,False,True,True],[True,False,True,True,True,False,True,False,True,False,True,False,True,False],[True,False,False,True,False,True,False,True,False,True,False,True,False,True],[True,True,True,False,True,False,True,False,False,True,False,False,True,False]], dtype = "bool")#candidate|10013|(36, 14)|const|bool
call_10012 = relay.TupleGetItem(func_8201_call(relay.reshape(const_10013.astype('bool'), [504,])), 3)
call_10014 = relay.TupleGetItem(func_8203_call(relay.reshape(const_10013.astype('bool'), [504,])), 3)
func_4365_call = mod.get_global_var('func_4365')
func_4370_call = mutated_mod.get_global_var('func_4370')
var_10022 = relay.var("var_10022", dtype = "int8", shape = ())#candidate|10022|()|var|int8
var_10023 = relay.var("var_10023", dtype = "int8", shape = (1920,))#candidate|10023|(1920,)|var|int8
var_10024 = relay.var("var_10024", dtype = "uint8", shape = (624,))#candidate|10024|(624,)|var|uint8
call_10021 = relay.TupleGetItem(func_4365_call(relay.reshape(var_10022.astype('int8'), []), relay.reshape(var_10023.astype('int8'), [16, 10, 12]), relay.reshape(var_10024.astype('uint8'), [624,]), ), 3)
call_10025 = relay.TupleGetItem(func_4370_call(relay.reshape(var_10022.astype('int8'), []), relay.reshape(var_10023.astype('int8'), [16, 10, 12]), relay.reshape(var_10024.astype('uint8'), [624,]), ), 3)
func_5389_call = mod.get_global_var('func_5389')
func_5392_call = mutated_mod.get_global_var('func_5392')
var_10028 = relay.var("var_10028", dtype = "uint8", shape = (40,))#candidate|10028|(40,)|var|uint8
call_10027 = relay.TupleGetItem(func_5389_call(relay.reshape(var_10028.astype('uint8'), [1, 5, 8])), 0)
call_10029 = relay.TupleGetItem(func_5392_call(relay.reshape(var_10028.astype('uint8'), [1, 5, 8])), 0)
func_4735_call = mod.get_global_var('func_4735')
func_4737_call = mutated_mod.get_global_var('func_4737')
call_10030 = func_4735_call()
call_10031 = func_4735_call()
output = relay.Tuple([call_10008,call_10012,const_10013,call_10021,var_10022,var_10023,var_10024,call_10027,var_10028,call_10030,])
output2 = relay.Tuple([call_10009,call_10014,const_10013,call_10025,var_10022,var_10023,var_10024,call_10029,var_10028,call_10031,])
func_10033 = relay.Function([var_10022,var_10023,var_10024,var_10028,], output)
mod['func_10033'] = func_10033
mod = relay.transform.InferType()(mod)
mutated_mod['func_10033'] = func_10033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10033_call = mutated_mod.get_global_var('func_10033')
var_10035 = relay.var("var_10035", dtype = "int8", shape = ())#candidate|10035|()|var|int8
var_10036 = relay.var("var_10036", dtype = "int8", shape = (1920,))#candidate|10036|(1920,)|var|int8
var_10037 = relay.var("var_10037", dtype = "uint8", shape = (624,))#candidate|10037|(624,)|var|uint8
var_10038 = relay.var("var_10038", dtype = "uint8", shape = (40,))#candidate|10038|(40,)|var|uint8
call_10034 = func_10033_call(var_10035,var_10036,var_10037,var_10038,)
output = call_10034
func_10039 = relay.Function([var_10035,var_10036,var_10037,var_10038,], output)
mutated_mod['func_10039'] = func_10039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5285_call = mod.get_global_var('func_5285')
func_5286_call = mutated_mod.get_global_var('func_5286')
call_10056 = func_5285_call()
call_10057 = func_5285_call()
func_7962_call = mod.get_global_var('func_7962')
func_7963_call = mutated_mod.get_global_var('func_7963')
call_10058 = relay.TupleGetItem(func_7962_call(), 0)
call_10059 = relay.TupleGetItem(func_7963_call(), 0)
output = relay.Tuple([call_10056,call_10058,])
output2 = relay.Tuple([call_10057,call_10059,])
func_10065 = relay.Function([], output)
mod['func_10065'] = func_10065
mod = relay.transform.InferType()(mod)
output = func_10065()
func_10066 = relay.Function([], output)
mutated_mod['func_10066'] = func_10066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9612_call = mod.get_global_var('func_9612')
func_9614_call = mutated_mod.get_global_var('func_9614')
call_10099 = func_9612_call()
call_10100 = func_9612_call()
func_6406_call = mod.get_global_var('func_6406')
func_6407_call = mutated_mod.get_global_var('func_6407')
call_10104 = func_6406_call()
call_10105 = func_6406_call()
output = relay.Tuple([call_10099,call_10104,])
output2 = relay.Tuple([call_10100,call_10105,])
func_10111 = relay.Function([], output)
mod['func_10111'] = func_10111
mod = relay.transform.InferType()(mod)
output = func_10111()
func_10112 = relay.Function([], output)
mutated_mod['func_10112'] = func_10112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7902_call = mod.get_global_var('func_7902')
func_7903_call = mutated_mod.get_global_var('func_7903')
call_10118 = relay.TupleGetItem(func_7902_call(), 1)
call_10119 = relay.TupleGetItem(func_7903_call(), 1)
output = relay.Tuple([call_10118,])
output2 = relay.Tuple([call_10119,])
func_10130 = relay.Function([], output)
mod['func_10130'] = func_10130
mod = relay.transform.InferType()(mod)
mutated_mod['func_10130'] = func_10130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10130_call = mutated_mod.get_global_var('func_10130')
call_10131 = func_10130_call()
output = call_10131
func_10132 = relay.Function([], output)
mutated_mod['func_10132'] = func_10132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6332_call = mod.get_global_var('func_6332')
func_6333_call = mutated_mod.get_global_var('func_6333')
call_10161 = func_6332_call()
call_10162 = func_6332_call()
func_9216_call = mod.get_global_var('func_9216')
func_9218_call = mutated_mod.get_global_var('func_9218')
call_10163 = func_9216_call()
call_10164 = func_9216_call()
output = relay.Tuple([call_10161,call_10163,])
output2 = relay.Tuple([call_10162,call_10164,])
func_10169 = relay.Function([], output)
mod['func_10169'] = func_10169
mod = relay.transform.InferType()(mod)
mutated_mod['func_10169'] = func_10169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10169_call = mutated_mod.get_global_var('func_10169')
call_10170 = func_10169_call()
output = call_10170
func_10171 = relay.Function([], output)
mutated_mod['func_10171'] = func_10171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5323_call = mod.get_global_var('func_5323')
func_5324_call = mutated_mod.get_global_var('func_5324')
call_10184 = relay.TupleGetItem(func_5323_call(), 0)
call_10185 = relay.TupleGetItem(func_5324_call(), 0)
output = relay.Tuple([call_10184,])
output2 = relay.Tuple([call_10185,])
func_10186 = relay.Function([], output)
mod['func_10186'] = func_10186
mod = relay.transform.InferType()(mod)
output = func_10186()
func_10187 = relay.Function([], output)
mutated_mod['func_10187'] = func_10187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8566_call = mod.get_global_var('func_8566')
func_8568_call = mutated_mod.get_global_var('func_8568')
call_10224 = relay.TupleGetItem(func_8566_call(), 0)
call_10225 = relay.TupleGetItem(func_8568_call(), 0)
func_5683_call = mod.get_global_var('func_5683')
func_5685_call = mutated_mod.get_global_var('func_5685')
call_10237 = relay.TupleGetItem(func_5683_call(), 0)
call_10238 = relay.TupleGetItem(func_5685_call(), 0)
uop_10242 = relay.sqrt(call_10237.astype('float32')) # shape=(11, 10, 2)
uop_10244 = relay.sqrt(call_10238.astype('float32')) # shape=(11, 10, 2)
func_8527_call = mod.get_global_var('func_8527')
func_8531_call = mutated_mod.get_global_var('func_8531')
const_10250 = relay.const(2, dtype = "int8")#candidate|10250|()|const|int8
const_10251 = relay.const([-8,5,-10,-4,7,-9,5,3,4,4,3,6,-3,-4,-10,2,2,1,4,2,-1,6,-2,7,-8,-9,1,7,-10,10,9,-10,-1,5,-6,-9,-8,5,4,8,-7,3,2,3,-8,-2,4,8,-10,-1,1,-7,4,1,-8,-10,-3,2,-10,7,-7,-6,8,-6,-8,9,8,-10,-8,2,9,-10,4,10,-4,-3,6,1,3,4,-6,-3,-9,-9,-6,-2,5,-1,-3,-3,10,7,7,-1,9,4,-6,-2,-1,-1,-3,4,-6,-7,6,5,7,-3,4,-5,-7,10,7,10,2,7,-8,-3,5,-5,-9,-6,-4,3,3,3,-8,-5,3,-2,-7,-2,9,-1,-5,-3,7,-3,10,-9,5,-3,4,-5,-3,4,8,-7,1,-9,-2,-3,6,10,-3,1,2,8,-1,-3,-1,-6,-10,6,-1,-10,-9,-2,8,-3,2,8,7,9,10,-4,-8,-2,5,2,4,9,-4,8,-4,2,4,-9,5,-1,-2,7,-7,-8,6,-6,-1,-4,7,-6,5,-4,-9,10,-3,-10,5,-2,-6,-5,-10,5,-6,-6,-2,-4,2,6,3,5,8,-10,3,-7,4,-3,3,-8,8,-3,-8,-7,-5,2,-10,3,-2,-3,4,-6,-10,-3,-9,-1,6,-9,-1,7,-3,3,5,3,8,4,6,2,-1,8,-7,8,4,-10,-6,-2,-5,4,2,7,3,-6,3,4,5,5,2,-7,-5,-5,5,1,4,-10,-1,8,10,3,-2,-9,-1,-10,2,-1,-8,7,6,5,-3,6,-6,10,-10,1,-1,2,-7,-5,2,5,6,5,-1,-2,7,-8,6,-9,2,10,-10,-7,5,-7,10,6,5,-8,2,-1,-9,10,-9,-2,8,-8,6,-9,-7,-7,10,5,-5,-2,-4,-5,-3,10,5,5,-4,2,-8,1,7,2,-3,3,-1,-6,7,10,8,2,-2,7,-1,7,1,-3,-6,-8,-4,-7,-5,10,8,-3,-9,-2,-3,-6,9,2,-1,-10,1,-6,-8,-8,7,8,7,2,6,7,-2,-2,6,10,-10,-4,8,-4,4,1,9,9,-1,-3,6,4,5,-8,1,-10,-10,-10,6,-7,7,6,-9,3,7,-7,-8,-10,9,5,9,1,-4,10,-6,-2,6,8,-2,-5,6,1,-3,8,10,1,1,-9,-4,6,-5,-10,6,-6,8,-9,-3,8,-3,9,-10,-5,4,-5,-2,-8,-9,7,8,-6,-5,9,-7,-8,-3,-4,-9,5,4,4,1,4,-2,-7,-4,-7,10,-1,-4,7,-3,-2,1,-8,7,10,5,10,-5,-10,-2,2,-4,8,9,7,6,6,7,2,-7,-4,8,-2,10,4,10,3,6,-9,-5,-6,-6,-10,-8,6,9,-10,3,10,5,-7,-7,-6,-10,-7,-3,-9,7,1,6,-3,-7,-1,-6,-6,-2,-5,-3,-3,5,-1,-5,7,-2,1,6,-2,-8,5,-4,4,-6,-7,9,-4,-2,-3,5,-2,8,4,9,7,9,-1,5,-10,-4,9,-9,-8,-8,-1,-2,-10,8,4,-10,-5,3,3,-3,10,-10,-3,-4,3,3,-4,6,-7,8,2,-2,-10,-4,4,7,-5,3,-7,8,-8,3,9,-8,6,6,7,-8,5,-9,7,3,3], dtype = "uint8")#candidate|10251|(624,)|const|uint8
call_10249 = relay.TupleGetItem(func_8527_call(relay.reshape(const_10250.astype('int8'), []), relay.reshape(const_10251.astype('uint8'), [624,]), ), 3)
call_10252 = relay.TupleGetItem(func_8531_call(relay.reshape(const_10250.astype('int8'), []), relay.reshape(const_10251.astype('uint8'), [624,]), ), 3)
func_6685_call = mod.get_global_var('func_6685')
func_6687_call = mutated_mod.get_global_var('func_6687')
call_10260 = func_6685_call()
call_10261 = func_6685_call()
output = relay.Tuple([call_10224,uop_10242,call_10249,const_10250,const_10251,call_10260,])
output2 = relay.Tuple([call_10225,uop_10244,call_10252,const_10250,const_10251,call_10261,])
func_10271 = relay.Function([], output)
mod['func_10271'] = func_10271
mod = relay.transform.InferType()(mod)
output = func_10271()
func_10272 = relay.Function([], output)
mutated_mod['func_10272'] = func_10272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8877_call = mod.get_global_var('func_8877')
func_8879_call = mutated_mod.get_global_var('func_8879')
call_10282 = relay.TupleGetItem(func_8877_call(), 0)
call_10283 = relay.TupleGetItem(func_8879_call(), 0)
const_10290 = relay.constdtype = "float32")#candidate|10290|(11, 15, 15)|const|float32
bop_10291 = relay.equal(call_10282.astype('bool'), relay.reshape(const_10290.astype('bool'), relay.shape_of(call_10282))) # shape=(11, 15, 15)
bop_10294 = relay.equal(call_10283.astype('bool'), relay.reshape(const_10290.astype('bool'), relay.shape_of(call_10283))) # shape=(11, 15, 15)
func_6784_call = mod.get_global_var('func_6784')
func_6786_call = mutated_mod.get_global_var('func_6786')
call_10303 = relay.TupleGetItem(func_6784_call(), 1)
call_10304 = relay.TupleGetItem(func_6786_call(), 1)
output = relay.Tuple([bop_10291,call_10303,])
output2 = relay.Tuple([bop_10294,call_10304,])
func_10324 = relay.Function([], output)
mod['func_10324'] = func_10324
mod = relay.transform.InferType()(mod)
output = func_10324()
func_10325 = relay.Function([], output)
mutated_mod['func_10325'] = func_10325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8686_call = mod.get_global_var('func_8686')
func_8688_call = mutated_mod.get_global_var('func_8688')
call_10386 = func_8686_call()
call_10387 = func_8686_call()
func_4910_call = mod.get_global_var('func_4910')
func_4912_call = mutated_mod.get_global_var('func_4912')
call_10394 = relay.TupleGetItem(func_4910_call(), 0)
call_10395 = relay.TupleGetItem(func_4912_call(), 0)
output = relay.Tuple([call_10386,call_10394,])
output2 = relay.Tuple([call_10387,call_10395,])
func_10410 = relay.Function([], output)
mod['func_10410'] = func_10410
mod = relay.transform.InferType()(mod)
output = func_10410()
func_10411 = relay.Function([], output)
mutated_mod['func_10411'] = func_10411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7962_call = mod.get_global_var('func_7962')
func_7963_call = mutated_mod.get_global_var('func_7963')
call_10435 = relay.TupleGetItem(func_7962_call(), 0)
call_10436 = relay.TupleGetItem(func_7963_call(), 0)
output = relay.Tuple([call_10435,])
output2 = relay.Tuple([call_10436,])
func_10451 = relay.Function([], output)
mod['func_10451'] = func_10451
mod = relay.transform.InferType()(mod)
mutated_mod['func_10451'] = func_10451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10451_call = mutated_mod.get_global_var('func_10451')
call_10452 = func_10451_call()
output = call_10452
func_10453 = relay.Function([], output)
mutated_mod['func_10453'] = func_10453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7736_call = mod.get_global_var('func_7736')
func_7738_call = mutated_mod.get_global_var('func_7738')
call_10490 = relay.TupleGetItem(func_7736_call(), 3)
call_10491 = relay.TupleGetItem(func_7738_call(), 3)
output = call_10490
output2 = call_10491
func_10536 = relay.Function([], output)
mod['func_10536'] = func_10536
mod = relay.transform.InferType()(mod)
output = func_10536()
func_10537 = relay.Function([], output)
mutated_mod['func_10537'] = func_10537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10271_call = mod.get_global_var('func_10271')
func_10272_call = mutated_mod.get_global_var('func_10272')
call_10549 = relay.TupleGetItem(func_10271_call(), 5)
call_10550 = relay.TupleGetItem(func_10272_call(), 5)
output = call_10549
output2 = call_10550
func_10564 = relay.Function([], output)
mod['func_10564'] = func_10564
mod = relay.transform.InferType()(mod)
mutated_mod['func_10564'] = func_10564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10564_call = mutated_mod.get_global_var('func_10564')
call_10565 = func_10564_call()
output = call_10565
func_10566 = relay.Function([], output)
mutated_mod['func_10566'] = func_10566
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10636 = relay.var("var_10636", dtype = "float32", shape = (2, 8, 6))#candidate|10636|(2, 8, 6)|var|float32
uop_10637 = relay.log(var_10636.astype('float32')) # shape=(2, 8, 6)
func_5389_call = mod.get_global_var('func_5389')
func_5392_call = mutated_mod.get_global_var('func_5392')
var_10644 = relay.var("var_10644", dtype = "uint8", shape = (40,))#candidate|10644|(40,)|var|uint8
call_10643 = relay.TupleGetItem(func_5389_call(relay.reshape(var_10644.astype('uint8'), [1, 5, 8])), 0)
call_10645 = relay.TupleGetItem(func_5392_call(relay.reshape(var_10644.astype('uint8'), [1, 5, 8])), 0)
bop_10651 = relay.greater(var_10636.astype('bool'), relay.reshape(uop_10637.astype('bool'), relay.shape_of(var_10636))) # shape=(2, 8, 6)
uop_10660 = relay.log10(uop_10637.astype('float64')) # shape=(2, 8, 6)
uop_10684 = relay.sin(uop_10660.astype('float64')) # shape=(2, 8, 6)
output = relay.Tuple([call_10643,var_10644,bop_10651,uop_10684,])
output2 = relay.Tuple([call_10645,var_10644,bop_10651,uop_10684,])
func_10708 = relay.Function([var_10636,var_10644,], output)
mod['func_10708'] = func_10708
mod = relay.transform.InferType()(mod)
var_10709 = relay.var("var_10709", dtype = "float32", shape = (2, 8, 6))#candidate|10709|(2, 8, 6)|var|float32
var_10710 = relay.var("var_10710", dtype = "uint8", shape = (40,))#candidate|10710|(40,)|var|uint8
output = func_10708(var_10709,var_10710,)
func_10711 = relay.Function([var_10709,var_10710,], output)
mutated_mod['func_10711'] = func_10711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7902_call = mod.get_global_var('func_7902')
func_7903_call = mutated_mod.get_global_var('func_7903')
call_10771 = relay.TupleGetItem(func_7902_call(), 0)
call_10772 = relay.TupleGetItem(func_7903_call(), 0)
output = call_10771
output2 = call_10772
func_10773 = relay.Function([], output)
mod['func_10773'] = func_10773
mod = relay.transform.InferType()(mod)
output = func_10773()
func_10774 = relay.Function([], output)
mutated_mod['func_10774'] = func_10774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8860_call = mod.get_global_var('func_8860')
func_8862_call = mutated_mod.get_global_var('func_8862')
call_10780 = relay.TupleGetItem(func_8860_call(), 1)
call_10781 = relay.TupleGetItem(func_8862_call(), 1)
func_8877_call = mod.get_global_var('func_8877')
func_8879_call = mutated_mod.get_global_var('func_8879')
call_10792 = relay.TupleGetItem(func_8877_call(), 0)
call_10793 = relay.TupleGetItem(func_8879_call(), 0)
func_4365_call = mod.get_global_var('func_4365')
func_4370_call = mutated_mod.get_global_var('func_4370')
const_10797 = relay.const(8, dtype = "int8")#candidate|10797|()|const|int8
const_10798 = relay.const([[7,-7,1,3,-9,6,-10,-3,3,-10,-5,-2,-9,-9,-10,-2,-6,-1,6,-6],[1,-4,-8,-5,8,7,-10,-6,-1,-3,-7,-7,3,-2,4,-5,-8,7,-6,7],[10,9,-5,10,9,5,10,9,-10,2,8,8,-6,4,-7,-8,-8,-6,-2,-9],[2,9,5,-5,10,8,7,-6,1,7,-4,7,-3,-5,1,-6,-7,3,4,9],[-7,1,-5,7,8,5,10,-4,-7,8,2,-9,8,2,-9,-5,10,-10,-3,-4],[-2,3,-3,3,-5,-7,4,5,-7,-5,10,3,-3,6,10,7,8,-4,-8,-10],[9,-9,3,-6,-4,7,10,-3,-4,9,10,-6,9,-3,6,-9,3,7,-5,-6],[-3,-3,4,-5,7,-10,1,9,-5,-6,-6,-5,2,-4,-4,-6,-3,9,-6,-4],[8,2,-2,-1,3,-10,-2,-7,9,-3,-2,-2,-7,2,5,8,2,5,1,2],[3,5,1,10,-5,-4,4,-2,7,6,-8,5,4,-5,-6,-1,3,2,1,-1],[-7,-3,-1,3,7,-9,-2,6,-4,1,9,7,-1,5,3,6,3,2,-4,-1],[2,7,-4,-2,-5,-8,-6,-8,6,-8,-1,10,6,5,6,-1,8,6,3,2],[-2,4,-7,-6,-8,-3,-9,-1,6,-4,-6,3,-5,7,7,-7,10,-7,-6,2],[-7,2,-8,10,-1,-6,-1,8,-8,-3,-4,3,4,3,-5,3,-9,-8,8,-1],[-2,3,-8,9,-5,2,-5,-5,7,8,-2,3,-5,-8,-7,-9,8,4,2,3],[-8,-9,1,3,-2,1,-1,5,3,7,4,3,-6,9,10,7,8,4,-10,9],[-7,7,-5,2,-6,10,-2,2,-9,10,-3,-1,5,-10,2,8,-10,-5,-9,-4],[5,5,-8,7,-9,9,6,-3,-3,7,-2,5,1,-10,-7,7,10,-9,-10,6],[-7,-1,4,3,7,-5,6,3,-9,10,-7,8,-9,-8,7,-8,10,5,-3,3],[2,-1,9,-8,8,6,4,-5,-3,2,6,2,1,-1,-10,8,-6,8,2,-4],[3,6,-4,-10,3,-6,-4,-6,-8,3,3,7,10,-5,-3,-1,-8,6,9,10],[-10,10,5,-2,4,10,-7,-9,6,9,4,10,8,-6,1,-6,4,-6,-3,3],[-4,-7,2,7,-9,-9,-6,-4,4,1,8,8,-3,-3,3,-4,-9,-7,6,-2],[10,-7,-2,-3,1,-4,1,-2,-8,-3,-1,7,7,-2,8,9,5,6,-4,-4],[1,7,1,6,-4,-10,5,4,1,-8,-10,-7,-10,-4,2,-3,-7,-6,-2,10],[1,-1,-7,-2,-3,-9,7,1,9,-4,-3,-5,-7,-9,-3,-5,8,5,-2,-6],[-7,-1,-1,10,8,-2,-10,9,9,-6,-6,-9,8,-8,8,7,-8,-10,3,-8],[5,-1,-8,4,-8,-8,-3,9,-10,4,-2,5,-1,7,-4,-2,7,-4,4,10],[8,8,-6,5,-5,-6,-9,-5,6,2,-8,-1,-10,10,4,-9,10,6,-4,4],[9,6,-10,6,-4,-8,-5,-1,-5,-10,-1,-1,-6,-8,7,2,3,4,1,-1],[-10,-9,-7,1,-1,1,10,4,-1,8,6,6,8,-1,9,3,-3,6,5,4],[-10,10,8,-10,6,-9,-8,10,-2,-6,-4,-4,-3,7,-10,6,7,-4,9,4],[-1,-8,5,-6,2,1,3,3,6,6,4,-5,-7,3,-2,3,-9,2,-10,4],[2,-10,-1,-1,-6,2,-6,-8,-6,10,10,-1,4,-7,-2,8,6,-7,2,3],[-4,5,-4,4,6,9,-7,8,-2,8,4,7,6,9,3,-6,-9,-8,8,4],[-6,-1,-1,-6,4,8,4,1,3,-9,-4,-5,10,7,-7,-1,3,-8,2,9],[10,5,-7,3,6,8,7,-2,-9,4,-9,-9,-8,7,10,8,-5,3,1,2],[8,-9,3,3,-10,10,-3,-2,-5,-2,4,9,5,1,-8,5,-3,4,-6,10],[5,7,-8,-8,9,9,10,-5,10,2,9,7,-4,7,-7,7,-6,9,-5,-6],[6,8,-5,-2,-8,-6,-6,8,3,9,2,-3,2,10,-8,-2,4,-2,-2,4],[3,-7,-3,6,-10,-8,-4,-1,-3,-6,7,-9,1,-10,8,-2,-3,9,-4,4],[3,-6,-2,-5,-8,-10,-10,-8,10,5,1,10,-8,2,3,6,7,-3,7,-6],[9,-1,-4,-2,-6,-4,-4,-1,-1,-4,10,-2,-10,-7,-3,3,8,-10,3,-7],[-9,-6,-5,-5,1,-1,-7,-7,8,-7,5,-2,6,-7,4,-7,-5,7,-1,6],[-2,-2,-2,10,-1,10,5,-10,3,-1,3,3,-3,10,5,-6,5,-7,-5,8],[2,-3,-9,9,4,1,9,7,-4,-6,5,5,-9,8,9,-3,3,9,1,-3],[9,-2,8,10,6,-9,7,-10,6,4,3,6,3,5,-5,-9,-4,3,-2,-4],[-9,1,6,-4,-9,-10,6,-8,5,-5,4,7,6,-10,2,-9,6,9,-3,-6],[3,-7,-4,-10,-8,9,6,10,5,2,-1,-10,-3,8,-2,-10,-2,6,2,5],[8,2,10,-7,1,6,-2,-8,3,-3,-2,-2,10,8,-1,-1,-9,-4,-4,-7],[2,-6,8,-1,10,10,9,-6,-9,10,-9,10,4,8,2,-3,-7,-9,3,-9],[-6,-4,-10,-5,-5,8,7,-4,9,1,7,8,-2,-10,8,5,8,-2,-2,-5],[1,-2,1,-1,8,-6,7,9,-2,2,10,-8,9,-5,5,9,-5,-6,5,-9],[-1,-7,10,8,5,-1,-7,3,7,8,-8,-9,8,-1,7,5,6,8,8,-5],[-4,-9,-5,1,-10,5,-6,3,2,-6,-6,6,-4,6,-10,6,9,-7,10,6],[8,2,-6,9,-8,6,7,6,6,-3,4,10,-7,-8,8,-8,5,-10,4,-10],[6,8,8,5,5,2,-9,5,-1,2,-6,6,10,-4,-7,7,-10,7,9,4],[1,-7,8,4,-2,-1,-9,-2,4,1,2,-7,5,2,7,9,-2,8,-8,-1],[1,9,-10,-8,8,-10,-9,3,-2,-7,-1,-8,-5,-2,9,3,9,1,-4,-6],[8,3,2,9,-2,-4,7,5,8,-4,3,10,-9,1,-8,6,-2,3,-6,9],[-1,9,5,-9,-3,2,8,10,-1,-1,-10,6,7,-8,-2,-8,-10,-10,-3,7],[-1,2,1,7,2,2,6,-4,7,-3,-8,3,-10,-2,3,-6,10,-2,-9,2],[8,1,-4,-6,-6,-2,-1,-4,-10,-3,8,5,-9,-9,-7,-8,-7,-2,6,1],[-8,8,-2,2,9,-4,7,2,-8,2,2,-4,-9,-9,4,-6,-5,-2,7,8],[9,2,1,10,5,-7,-2,-7,7,7,-5,2,9,6,7,-1,-6,-2,9,8],[-6,2,-8,-2,-4,-4,1,-9,-9,-6,1,-3,-2,-5,9,-6,10,4,8,1],[-2,-9,1,5,2,-6,-3,-9,-4,-8,2,7,-2,10,-4,10,-7,10,6,8],[9,1,3,-6,8,9,8,2,4,9,-4,-5,-9,-1,-2,-5,2,-2,-7,1],[4,5,-5,-1,-10,8,-1,-7,8,5,4,1,-7,-1,5,2,-2,-1,-6,6],[3,2,-5,-4,4,4,-1,-5,2,-5,-10,4,3,-8,8,-7,-8,-4,-5,-7],[-10,-10,-8,1,5,-4,-10,6,6,4,-6,4,9,8,-8,6,5,-1,3,2],[-6,2,9,-1,9,-8,8,2,1,3,4,7,5,4,-10,7,-3,3,-6,6],[2,2,-7,9,-4,-9,-4,-8,4,9,6,-9,-5,-2,7,-6,-3,10,5,-10],[-6,5,-7,10,-5,-7,-5,4,9,2,-6,-8,9,1,-9,-2,1,-4,-10,-2],[-3,8,5,1,7,-1,-2,-2,-7,6,7,3,-5,8,1,-2,7,4,1,-8],[-9,-1,-10,-3,-7,4,-4,4,4,-7,-2,-1,9,2,3,8,9,-4,-2,7],[-3,-5,-10,8,-1,-10,4,-1,-1,4,-3,7,-2,2,-5,3,-1,-6,-7,6],[-1,-2,-10,-9,6,-4,-8,10,1,1,-2,-5,-5,4,7,-2,8,3,-7,-10],[8,1,-4,-5,4,10,-2,-8,8,-9,-4,5,-6,-10,3,-5,4,8,-8,5],[-10,-9,2,9,1,-6,8,-7,-10,-7,-6,7,-10,-10,-7,-4,9,-9,-9,10],[-6,-5,8,1,8,2,-2,-6,3,5,-8,-8,10,-8,6,1,4,6,-9,-9],[-5,-2,9,1,5,-1,5,-2,7,-6,-7,2,-2,-5,-5,9,-7,-9,1,8],[8,-1,-1,7,-2,-10,7,-2,2,1,2,-9,5,5,10,3,7,10,-4,5],[-10,-5,-6,-8,-2,6,-3,5,5,-3,5,4,8,7,10,8,-6,-7,-9,3],[-7,7,5,5,2,-6,4,9,3,5,-10,3,7,-10,-8,8,-1,-5,-7,-6],[-10,5,2,7,-10,1,9,-5,8,3,-6,1,-7,4,7,-2,4,-1,9,-4],[-2,8,10,8,-7,-4,-3,10,9,6,6,1,5,-8,1,5,8,-5,-5,6],[5,4,-5,1,-10,8,-5,6,2,-8,8,6,-5,6,-5,3,-4,-9,-3,1],[-7,7,-1,-4,9,-5,5,2,-4,1,3,-9,-1,4,-9,7,-7,8,9,10],[-5,-4,-8,-10,5,2,-5,4,9,10,-4,-4,1,-8,5,8,-5,-8,-7,7],[-10,-1,-10,-9,-3,-9,-7,-8,4,-9,-6,-6,-7,5,-3,-9,1,-7,7,2],[-6,8,1,-2,-4,1,-7,-10,-3,10,9,-8,1,1,-1,7,3,1,-9,-8],[-3,2,8,-6,-9,7,-8,-6,10,5,2,1,7,-9,4,-9,8,10,-5,9],[5,-10,10,-3,7,4,-2,-5,6,5,-3,8,8,-1,4,-5,-3,3,-4,8],[4,9,6,5,9,-1,-4,6,-8,-5,5,3,-8,5,-5,-1,4,7,5,-1],[1,9,-2,-7,1,3,3,-8,-4,-1,8,8,-6,-2,-6,-7,7,-2,2,9]], dtype = "int8")#candidate|10798|(96, 20)|const|int8
const_10799 = relay.const([-3,-2,5,6,7,-10,5,-1,-6,2,-3,1,9,-5,7,2,2,3,-2,-5,-2,-3,2,-6,10,-4,-8,-8,-8,-5,3,-7,3,-4,8,1,6,-8,7,-7,-3,-10,3,6,-5,8,-8,2,-4,6,6,1,3,-8,-3,-7,-3,-7,-9,10,2,9,-3,-1,7,-9,5,3,-9,-8,4,-9,6,-7,-9,-6,-7,2,8,-8,-1,6,-7,3,9,-8,-1,-2,-5,10,6,-6,5,-2,1,5,-7,7,-9,-9,6,-3,-8,-1,-6,6,1,4,8,-8,-7,1,4,-7,-2,1,-6,4,1,-5,-10,-8,5,-8,9,-3,9,-8,4,5,-4,6,5,1,9,3,-1,2,-1,8,-6,-6,-5,-7,-2,6,1,5,4,-1,4,-10,-3,10,3,-5,10,-4,-6,3,3,3,3,-9,-3,-8,2,-3,-2,-8,2,-6,5,-7,-8,8,-4,-5,-8,-4,5,-10,-1,2,6,2,5,2,7,10,4,9,10,4,8,-1,-9,-10,1,-6,3,-9,-6,-8,-2,8,-10,-3,3,-10,-3,-6,9,-3,-9,9,6,8,-9,-5,-7,-7,4,-7,7,-7,-8,3,10,-8,-4,9,-5,2,-5,6,-3,-1,3,1,-5,10,-3,1,-8,2,-5,2,10,-5,4,-9,4,-2,-9,-9,-3,-8,-2,2,7,2,7,-2,-9,-3,6,-7,-3,-9,4,-7,-7,-7,-5,8,3,3,-3,6,-10,2,5,8,10,2,-5,5,5,10,-9,1,-8,1,-9,-5,7,7,-9,-2,2,5,3,7,1,10,-8,1,5,-9,-2,3,4,-3,-5,-3,7,2,9,-9,-1,-10,8,-6,7,7,-2,9,10,-10,-5,10,3,3,5,4,-1,-4,-8,-3,-6,4,-3,-5,-5,8,9,3,3,-6,9,6,-6,2,3,-1,-8,-8,-8,-5,-7,2,-4,10,2,-8,7,5,-6,-1,2,9,-9,-2,9,1,-2,-4,9,-6,1,5,9,3,-5,-4,6,-7,-10,3,8,-9,-6,-9,-8,-7,-8,-7,10,-2,-4,-2,-2,7,-9,3,-6,-8,-5,9,-1,-2,-1,-5,9,-8,8,7,-10,-3,-7,-4,1,7,-8,-9,7,7,-2,-8,4,6,-5,-1,9,2,10,-1,8,7,6,-5,1,10,-6,4,4,1,5,2,6,10,-10,9,8,-5,3,-9,4,8,10,2,-4,-1,5,-2,7,-8,-2,-4,2,9,9,-2,9,-5,-3,-1,9,7,7,-6,-3,1,1,8,-7,1,-4,3,2,-2,-6,-4,-7,1,-2,6,3,-3,-7,8,-7,-1,9,-6,-1,-5,-9,2,-10,10,1,-7,5,9,-10,-5,-3,10,2,4,-2,2,10,9,-8,3,-5,4,-2,-4,-7,1,-7,3,-9,-5,-5,-6,1,-4,4,-8,10,1,-4,-6,3,-4,-10,-10,-3,-2,1,3,3,1,-7,-6,-3,-10,-1,-2,6,5,-3,7,-1,4,4,4,-7,5,-5,4,10,-5,-10,5,2,-2,-6,-9,-7,-7,-10,-10,-7,2,10,8,-10,10,9,-6,9,6,-8,-2,-7,7,1,4,-4,8,2,3,10,-10,3,1,-7,-7,1,-9,10,6,5,9,-6,-5,-4,10], dtype = "uint8")#candidate|10799|(624,)|const|uint8
call_10796 = relay.TupleGetItem(func_4365_call(relay.reshape(const_10797.astype('int8'), []), relay.reshape(const_10798.astype('int8'), [16, 10, 12]), relay.reshape(const_10799.astype('uint8'), [624,]), ), 3)
call_10800 = relay.TupleGetItem(func_4370_call(relay.reshape(const_10797.astype('int8'), []), relay.reshape(const_10798.astype('int8'), [16, 10, 12]), relay.reshape(const_10799.astype('uint8'), [624,]), ), 3)
func_10186_call = mod.get_global_var('func_10186')
func_10187_call = mutated_mod.get_global_var('func_10187')
call_10806 = relay.TupleGetItem(func_10186_call(), 0)
call_10807 = relay.TupleGetItem(func_10187_call(), 0)
func_8368_call = mod.get_global_var('func_8368')
func_8369_call = mutated_mod.get_global_var('func_8369')
call_10816 = func_8368_call()
call_10817 = func_8368_call()
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_10831 = relay.TupleGetItem(func_5872_call(), 0)
call_10832 = relay.TupleGetItem(func_5874_call(), 0)
output = relay.Tuple([call_10780,call_10792,call_10796,const_10797,const_10798,const_10799,call_10806,call_10816,call_10831,])
output2 = relay.Tuple([call_10781,call_10793,call_10800,const_10797,const_10798,const_10799,call_10807,call_10817,call_10832,])
func_10836 = relay.Function([], output)
mod['func_10836'] = func_10836
mod = relay.transform.InferType()(mod)
output = func_10836()
func_10837 = relay.Function([], output)
mutated_mod['func_10837'] = func_10837
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10852 = relay.const([[[-1.069063,-4.243582]],[[2.791195,-5.516259]],[[-5.535227,-5.054054]],[[6.271004,0.108653]],[[4.097216,4.755813]],[[-6.142615,9.295067]],[[-4.902081,6.009996]],[[-7.686969,0.936967]],[[-9.442091,5.169225]],[[-4.227838,1.156191]]], dtype = "float64")#candidate|10852|(10, 1, 2)|const|float64
const_10853 = relay.const([[[6.666275,6.861384],[7.964294,5.590491],[-5.640398,0.021615],[-7.129347,8.468380],[5.538683,7.012307],[-1.906723,0.802036],[-0.095743,8.270827],[-9.800480,-9.863341],[6.259060,1.441222]],[[6.301363,7.160911],[3.412191,-1.661033],[3.886257,-5.959270],[-2.329047,-9.108462],[3.573730,2.531498],[-3.275088,9.294650],[-5.958749,-5.438301],[3.185933,-6.632211],[0.951399,-1.889632]],[[-3.377374,-4.753617],[-5.452786,-3.058244],[-6.431761,7.445151],[-1.104185,7.950155],[9.752848,-2.231420],[-5.289081,-6.266720],[-6.267630,-7.707928],[-4.645474,-2.194154],[4.842180,-6.984429]],[[-4.811825,6.855062],[-3.333186,-1.308368],[8.061973,0.961596],[-0.571688,-6.321779],[0.775998,-9.841163],[-9.558461,0.900803],[6.747066,7.023256],[-1.289972,-3.537889],[4.749808,2.251308]],[[-3.551226,-9.051338],[3.729614,-4.768108],[4.868869,-0.978110],[0.207093,-7.878266],[-6.299071,-2.498857],[-8.833888,-9.635352],[-3.164672,9.706238],[-5.379908,9.818362],[-6.538931,3.906154]],[[6.876589,1.796479],[-4.989005,2.939978],[-2.576425,0.866703],[0.075651,-2.305602],[-2.378048,-7.576838],[7.324983,-7.108309],[-0.789503,-0.802620],[7.994995,-2.401207],[3.148741,-7.618427]],[[-3.386306,-8.159598],[6.323839,2.505670],[8.742446,-6.714335],[-2.661339,-2.245975],[-1.136868,-3.176222],[-8.495039,5.380201],[-8.716856,6.803656],[5.650768,9.788987],[6.326447,-2.641340]],[[-3.356583,-5.624879],[4.725781,8.745565],[9.313015,8.065756],[-8.839076,7.625364],[-2.347162,-5.926619],[-3.362391,1.566567],[4.426114,8.432742],[-0.909784,-0.185305],[6.244101,-5.557070]],[[9.972455,9.363076],[-3.134999,0.784281],[-6.626339,3.139363],[0.127914,3.120476],[8.916888,-7.846353],[9.563725,-4.637903],[6.630838,-7.944397],[3.483841,-1.014402],[-3.276654,4.991646]],[[-7.837974,4.336837],[5.979465,-1.026865],[0.915986,7.219472],[-1.263627,0.734052],[0.340576,0.429138],[-4.735079,-8.013293],[-5.778814,6.592244],[-3.569279,0.297115],[2.595833,0.708876]]], dtype = "float64")#candidate|10853|(10, 9, 2)|const|float64
bop_10854 = relay.power(const_10852.astype('float64'), const_10853.astype('float64')) # shape=(10, 9, 2)
output = bop_10854
output2 = bop_10854
func_10858 = relay.Function([], output)
mod['func_10858'] = func_10858
mod = relay.transform.InferType()(mod)
mutated_mod['func_10858'] = func_10858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10858_call = mutated_mod.get_global_var('func_10858')
call_10859 = func_10858_call()
output = call_10859
func_10860 = relay.Function([], output)
mutated_mod['func_10860'] = func_10860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7587_call = mod.get_global_var('func_7587')
func_7588_call = mutated_mod.get_global_var('func_7588')
call_10877 = func_7587_call()
call_10878 = func_7587_call()
output = call_10877
output2 = call_10878
func_10890 = relay.Function([], output)
mod['func_10890'] = func_10890
mod = relay.transform.InferType()(mod)
output = func_10890()
func_10891 = relay.Function([], output)
mutated_mod['func_10891'] = func_10891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7587_call = mod.get_global_var('func_7587')
func_7588_call = mutated_mod.get_global_var('func_7588')
call_10895 = func_7587_call()
call_10896 = func_7587_call()
func_6600_call = mod.get_global_var('func_6600')
func_6603_call = mutated_mod.get_global_var('func_6603')
var_10908 = relay.var("var_10908", dtype = "uint16", shape = ())#candidate|10908|()|var|uint16
var_10909 = relay.var("var_10909", dtype = "uint8", shape = (624,))#candidate|10909|(624,)|var|uint8
call_10907 = relay.TupleGetItem(func_6600_call(relay.reshape(var_10908.astype('uint16'), []), relay.reshape(var_10909.astype('uint8'), [624,]), ), 11)
call_10910 = relay.TupleGetItem(func_6603_call(relay.reshape(var_10908.astype('uint16'), []), relay.reshape(var_10909.astype('uint8'), [624,]), ), 11)
uop_10919 = relay.sinh(call_10907.astype('float32')) # shape=(7, 12, 6)
uop_10921 = relay.sinh(call_10910.astype('float32')) # shape=(7, 12, 6)
uop_10925 = relay.tan(call_10907.astype('float32')) # shape=(7, 12, 6)
uop_10927 = relay.tan(call_10910.astype('float32')) # shape=(7, 12, 6)
func_9416_call = mod.get_global_var('func_9416')
func_9417_call = mutated_mod.get_global_var('func_9417')
call_10928 = relay.TupleGetItem(func_9416_call(), 0)
call_10929 = relay.TupleGetItem(func_9417_call(), 0)
output = relay.Tuple([call_10895,var_10908,var_10909,uop_10919,uop_10925,call_10928,])
output2 = relay.Tuple([call_10896,var_10908,var_10909,uop_10921,uop_10927,call_10929,])
func_10936 = relay.Function([var_10908,var_10909,], output)
mod['func_10936'] = func_10936
mod = relay.transform.InferType()(mod)
var_10937 = relay.var("var_10937", dtype = "uint16", shape = ())#candidate|10937|()|var|uint16
var_10938 = relay.var("var_10938", dtype = "uint8", shape = (624,))#candidate|10938|(624,)|var|uint8
output = func_10936(var_10937,var_10938,)
func_10939 = relay.Function([var_10937,var_10938,], output)
mutated_mod['func_10939'] = func_10939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9612_call = mod.get_global_var('func_9612')
func_9614_call = mutated_mod.get_global_var('func_9614')
call_10963 = func_9612_call()
call_10964 = func_9612_call()
output = call_10963
output2 = call_10964
func_10993 = relay.Function([], output)
mod['func_10993'] = func_10993
mod = relay.transform.InferType()(mod)
mutated_mod['func_10993'] = func_10993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10993_call = mutated_mod.get_global_var('func_10993')
call_10994 = func_10993_call()
output = call_10994
func_10995 = relay.Function([], output)
mutated_mod['func_10995'] = func_10995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5323_call = mod.get_global_var('func_5323')
func_5324_call = mutated_mod.get_global_var('func_5324')
call_11009 = relay.TupleGetItem(func_5323_call(), 0)
call_11010 = relay.TupleGetItem(func_5324_call(), 0)
output = relay.Tuple([call_11009,])
output2 = relay.Tuple([call_11010,])
func_11031 = relay.Function([], output)
mod['func_11031'] = func_11031
mod = relay.transform.InferType()(mod)
output = func_11031()
func_11032 = relay.Function([], output)
mutated_mod['func_11032'] = func_11032
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11072 = relay.var("var_11072", dtype = "int32", shape = ())#candidate|11072|()|var|int32
const_11073 = relay.const([[[10,-4,6,-6,-2,-3,-2,8,1,-3],[7,4,8,-9,-2,6,3,-3,-7,3],[-7,-10,9,2,10,-6,3,-9,1,1],[-4,-7,7,6,-10,-1,-7,7,9,-8],[7,7,6,-1,3,2,9,4,1,1],[-1,10,5,6,9,4,1,-7,5,-4],[2,-6,5,-8,-2,-8,3,-2,7,4],[-3,-3,-8,-1,-10,3,-1,2,1,-4],[1,5,-10,-4,-5,3,5,-4,6,-7],[-8,-8,-3,9,-2,-6,-5,-9,-10,-3]],[[3,6,-2,2,4,6,-2,-3,5,-9],[-4,-2,-10,5,-7,-6,4,6,-2,8],[10,10,-8,-6,-6,2,2,9,8,-1],[-2,-3,10,-4,10,8,6,1,-2,9],[-2,8,-6,3,8,-8,2,7,-5,-4],[-3,-6,-2,-2,-3,-10,1,-8,-4,-2],[-8,5,4,-2,2,-5,-8,-3,5,5],[-6,5,-5,-4,-6,1,9,-4,7,3],[1,4,8,-2,-3,-2,-1,4,-2,5],[9,3,-2,-2,-2,8,-4,3,-10,-6]],[[1,1,9,-10,-8,-8,-10,4,8,3],[-2,1,5,-9,-8,-9,-6,-3,-8,5],[-7,-2,4,1,3,-1,-8,2,-8,-10],[9,-5,2,10,-10,-7,-8,6,-4,-3],[2,1,-6,-3,7,1,5,-10,6,6],[-7,-5,-1,-6,-7,-3,4,-8,8,-5],[7,10,3,-6,2,-7,6,-1,-10,-1],[7,-5,-9,-1,6,-1,-3,-2,2,7],[1,-2,-5,-3,1,3,7,9,1,-2],[-8,-10,5,7,-10,-1,10,8,-8,2]],[[5,9,3,10,10,1,-9,8,2,1],[-2,5,-8,7,5,5,-5,4,4,2],[-7,1,3,-10,-7,-9,5,-2,8,-1],[1,3,-10,-1,-10,-8,5,3,-1,3],[5,-8,5,-5,1,5,2,5,-4,8],[-1,-1,6,-6,-8,-6,2,-3,-3,-9],[-4,6,4,-10,10,-2,-4,9,6,8],[4,-7,7,-3,-8,-7,-9,-8,4,1],[4,7,6,-8,1,8,-10,-4,-5,-7],[1,3,7,-5,7,-7,9,9,-9,-10]],[[4,8,3,9,10,8,2,-5,5,1],[8,-3,3,-4,2,5,-2,-8,-6,2],[4,7,-3,6,2,10,-7,-9,-8,3],[9,-3,-2,7,-7,1,-10,7,3,-1],[-3,7,5,-10,-8,-2,2,7,4,1],[-2,-5,3,8,-5,2,-2,-8,2,-2],[3,-7,-7,1,10,-7,4,-7,-3,-4],[-5,-6,3,6,4,-8,-9,-1,3,2],[-4,8,-8,-5,-3,9,5,-5,-1,-6],[8,-1,-2,7,-4,1,-7,-6,-5,6]],[[-1,-5,4,5,-2,10,8,9,4,7],[3,8,6,-5,-6,-10,9,3,5,9],[-2,7,10,10,-2,-4,5,-4,-5,-4],[1,-9,-9,-6,-2,-4,-5,4,7,-1],[-3,3,-8,-10,8,-5,-8,-1,-9,-1],[-9,-7,6,-2,-7,3,10,9,4,3],[3,-1,2,-8,-7,2,-6,4,10,8],[-9,-9,-8,6,-10,-4,-7,-4,8,-10],[2,5,-10,-1,-3,2,-1,-2,1,-1],[-9,4,3,-6,9,-6,-9,1,9,2]],[[3,5,-4,5,5,6,2,-9,-7,5],[-1,7,1,-9,-1,2,6,-8,-4,-6],[8,4,-4,-6,-10,-9,2,-2,3,3],[4,-8,3,-1,-8,8,2,7,-9,-9],[3,-1,-3,8,-4,-9,-6,-9,4,8],[8,9,1,6,-2,8,-10,-10,10,10],[-1,-2,-8,8,10,6,-5,6,3,-4],[6,10,-1,-10,10,-4,-8,8,7,10],[3,5,-10,-1,-4,10,1,7,-10,-2],[6,-1,-4,2,4,-1,7,2,9,-2]],[[2,-5,10,4,9,-4,2,3,4,-7],[7,-5,4,-4,5,-5,6,10,2,-9],[10,7,-7,-7,-6,-9,-2,9,-4,-8],[7,-5,-5,-10,-9,-7,-10,-10,-7,-8],[-1,7,-3,-9,9,7,-3,10,9,5],[7,-6,10,-6,3,7,-2,7,-3,4],[6,-10,4,-8,-10,-1,-7,-7,-5,4],[-6,-3,-7,6,9,-2,1,-5,-3,-10],[-8,-3,-9,3,-1,3,-8,-8,9,5],[-3,-6,-10,-1,-5,-10,-3,-9,-3,-8]],[[7,-4,10,-2,-5,10,5,-2,8,-9],[-8,8,-2,-4,9,-1,-5,-3,-6,-3],[-3,7,-10,4,6,-1,-4,4,3,-3],[1,-9,9,-1,-9,4,-9,10,1,7],[9,2,4,9,7,10,-6,-6,2,-9],[-4,-3,-5,-4,6,6,7,9,5,9],[-4,1,9,-6,-5,-2,-8,-1,9,-3],[-7,2,-8,-5,1,-6,4,-6,5,4],[6,6,-2,-9,2,-5,3,-3,8,-6],[4,5,-9,1,-2,-1,-2,4,-6,4]],[[-5,9,6,-8,1,-5,-6,-5,3,9],[4,4,9,-9,-1,2,-1,5,-4,10],[-9,-2,-7,-1,6,6,4,-5,7,7],[-8,3,2,5,-3,1,3,-8,-4,-9],[-3,-10,4,-7,3,9,4,1,2,-2],[-2,-10,10,-5,8,-5,-10,5,4,7],[7,9,7,-7,-7,-7,-4,5,-4,-8],[-4,-3,-10,8,-10,3,10,9,1,10],[7,-8,4,-2,-2,3,5,-10,-4,-9],[5,4,-4,-5,-10,-5,-2,-7,4,7]],[[2,-4,3,10,-4,2,2,7,10,3],[6,-7,10,-7,3,-2,3,2,10,3],[-2,3,2,2,-1,4,-10,8,-6,4],[-8,-6,2,6,1,-6,-8,-9,-1,4],[3,-9,-10,-4,-3,-8,7,-3,2,-1],[-3,-8,-7,1,7,10,-7,4,8,-6],[8,-4,-7,-4,-10,-4,3,4,-8,-8],[2,2,6,9,-5,7,-6,-8,9,6],[8,-2,1,-3,-3,-1,-6,6,-10,-8],[-7,-8,-5,10,8,-5,3,9,3,2]],[[-10,3,-7,-10,2,-1,4,-4,6,4],[9,2,9,7,-3,10,-1,1,-1,-4],[-2,4,6,4,-3,8,2,-5,3,-4],[10,-10,-8,8,6,4,10,-2,7,10],[8,1,8,-10,-7,-7,-10,-7,-10,10],[8,-1,-10,-5,-3,-7,3,-1,-6,-3],[-9,2,-7,-10,4,2,1,-10,-10,-10],[-10,-4,-8,5,9,-9,-8,10,9,-4],[-9,5,-4,3,-2,7,-1,-4,-9,5],[8,-6,4,-6,5,8,-8,4,-9,-8]],[[-9,2,5,8,-8,-1,6,5,-5,-5],[-2,-4,7,4,2,-9,-6,-10,-1,-6],[1,5,7,7,2,-2,-6,-7,-4,-1],[3,-9,2,-2,8,-2,-7,6,1,-6],[5,9,6,-4,-7,7,4,-2,7,-1],[-4,-4,2,-3,-5,-5,-8,-4,10,-3],[3,-10,-7,-5,-6,9,-9,-9,7,3],[-2,4,3,-4,-6,-2,8,9,-2,-2],[-3,6,-8,-3,8,6,-4,-2,8,10],[3,-4,1,10,8,-2,5,-2,-5,-7]],[[-1,-5,-5,2,10,-7,3,6,3,-9],[-8,-3,-1,7,10,-10,-8,5,-1,5],[8,-6,3,7,8,8,-9,10,-6,5],[-10,6,-10,-1,10,2,-8,-1,10,7],[-5,7,-8,1,3,-9,-1,-1,9,-1],[8,7,2,6,-7,2,-10,8,-6,-1],[7,4,-8,-10,-8,4,-4,3,10,-10],[4,2,10,3,9,7,-5,-5,-5,-8],[7,1,4,7,-3,2,8,-3,-4,-6],[-10,8,-1,8,9,1,9,-7,-5,-8]],[[3,6,-4,2,5,10,1,1,-4,-10],[-7,8,4,-1,-10,-5,-9,-4,10,-10],[4,-10,-9,-6,2,-3,-8,6,-6,9],[6,-9,-7,-7,-1,-1,6,-1,-2,5],[5,-4,-10,-5,9,-4,-1,9,8,-4],[10,3,5,-8,-10,-1,-4,-10,-5,-3],[-10,-9,-10,9,-2,-6,-6,-8,-4,8],[-3,1,-3,-4,-5,-3,5,-5,8,-4],[7,-5,-10,4,1,-8,-2,-4,9,3],[6,-8,-8,8,9,8,-2,10,8,-6]]], dtype = "int32")#candidate|11073|(15, 10, 10)|const|int32
bop_11074 = relay.bitwise_xor(var_11072.astype('int32'), const_11073.astype('int32')) # shape=(15, 10, 10)
func_4029_call = mod.get_global_var('func_4029')
func_4035_call = mutated_mod.get_global_var('func_4035')
var_11083 = relay.var("var_11083", dtype = "float32", shape = (2475,))#candidate|11083|(2475,)|var|float32
var_11084 = relay.var("var_11084", dtype = "uint8", shape = (4, 156))#candidate|11084|(4, 156)|var|uint8
var_11085 = relay.var("var_11085", dtype = "bool", shape = (504,))#candidate|11085|(504,)|var|bool
call_11082 = relay.TupleGetItem(func_4029_call(relay.reshape(var_11083.astype('float32'), [11, 15, 15]), relay.reshape(var_11083.astype('bool'), [11, 15, 15]), relay.reshape(var_11084.astype('uint8'), [624,]), relay.reshape(var_11085.astype('bool'), [504,]), ), 2)
call_11086 = relay.TupleGetItem(func_4035_call(relay.reshape(var_11083.astype('float32'), [11, 15, 15]), relay.reshape(var_11083.astype('bool'), [11, 15, 15]), relay.reshape(var_11084.astype('uint8'), [624,]), relay.reshape(var_11085.astype('bool'), [504,]), ), 2)
var_11087 = relay.var("var_11087", dtype = "int32", shape = (15, 10, 10))#candidate|11087|(15, 10, 10)|var|int32
bop_11088 = relay.divide(bop_11074.astype('float64'), relay.reshape(var_11087.astype('float64'), relay.shape_of(bop_11074))) # shape=(15, 10, 10)
output = relay.Tuple([call_11082,var_11083,var_11084,var_11085,bop_11088,])
output2 = relay.Tuple([call_11086,var_11083,var_11084,var_11085,bop_11088,])
func_11098 = relay.Function([var_11072,var_11083,var_11084,var_11085,var_11087,], output)
mod['func_11098'] = func_11098
mod = relay.transform.InferType()(mod)
var_11099 = relay.var("var_11099", dtype = "int32", shape = ())#candidate|11099|()|var|int32
var_11100 = relay.var("var_11100", dtype = "float32", shape = (2475,))#candidate|11100|(2475,)|var|float32
var_11101 = relay.var("var_11101", dtype = "uint8", shape = (4, 156))#candidate|11101|(4, 156)|var|uint8
var_11102 = relay.var("var_11102", dtype = "bool", shape = (504,))#candidate|11102|(504,)|var|bool
var_11103 = relay.var("var_11103", dtype = "int32", shape = (15, 10, 10))#candidate|11103|(15, 10, 10)|var|int32
output = func_11098(var_11099,var_11100,var_11101,var_11102,var_11103,)
func_11104 = relay.Function([var_11099,var_11100,var_11101,var_11102,var_11103,], output)
mutated_mod['func_11104'] = func_11104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7799_call = mod.get_global_var('func_7799')
func_7801_call = mutated_mod.get_global_var('func_7801')
call_11123 = func_7799_call()
call_11124 = func_7799_call()
func_6685_call = mod.get_global_var('func_6685')
func_6687_call = mutated_mod.get_global_var('func_6687')
call_11131 = func_6685_call()
call_11132 = func_6685_call()
func_9045_call = mod.get_global_var('func_9045')
func_9050_call = mutated_mod.get_global_var('func_9050')
const_11136 = relay.const([[-9,3,4,-3,4,3,9,2,3,10,-8,-5,-1,8,10,-3,8,7,6,5,4,-9,-4,-9,-7,-5,5,8,8,10,-1,-9,10,1,5,-5,3,-2,-7,6,-1,8,2,6,3,9,10,5,5,-6,-1,9,-9,3,-3,1,-9,-2,7,10,-3,-6,-9,2,4,-2,3,10,-4,7,1,1,-6,-2,10,-3,-3,5,9,-5,7,7,-1,-3,10,-4,9,5,-10,-8,-3,5,-1,7,10,-2,-1,9,6,9,-2,-8,-8,-6,-2,-9,7,-10,-4,8,-10,3,9,-5,3,-2,-5,-6,7,-1,6,3,-4,4,3,2,-4,7,4,-2,-6,-2,7,5,-9,5,4,1,-3,6,8,-1,2,8,10,4,4,-8,-3,-7,7,8,-9,1,-3,-8,-6,5,-7,-3,3,-4,3,-2,-4,9,-10,-7,5,3,-7,-10,1,1,8,-4,3,-10,9,3,10,7,10,-10,-1,4,5,-1,7,2,-5,-8,6,5,7,-1,1,-8,-9,7,-1,-8,-4,3,-8,-9,-3,1,3,5,3,9,-3,8,-7,-1,-5,7,7,-1,4,10,-6,-7,7,1,7,8,8,1,9,6,-1,3,2,3,-3,3,3,8,-1,2,10,-7,3,6,10,-8,-4,8,-7,9,-3,-1,2,6,10,-1,-7,-9,-8,4,6,10,-7,3,9,-5,-6,-7,-8,2,-1,10,-1,8,-5,-7,6,-10,-6,-8,7,-5,10,1,-7,7,6,-3,8,6,4,2,-1,-5,-5,9,-4,7,10,-3,-3,-2,10,3,5,-1,3,10,-8,-2,-8,7,7,8,-3,2,-5,-2,10,-3,9,3,-7,-7,-8,8,-9,-9,-10,-4,10,-7,-2,10,-8,-6,-6,8,-4,10,3,-9,4,1,-5,-5,2,-7,-4,-6,-9,9,3,-1,-4,10,-9,-2,-7,9,7,-6,-7,-3,10,-5,-4,-4,-4,4,6,-7,-5,9,9,5,-1,5,3,-1,9,-2,2,2,1,-6,-1,1,10,-1,8,-5,6,7,7,-4,5,1,-6,-5,-10,3,2,9,-3,-2,-6,-10,-6,4,8,-2,-8,2,8,10,-8,1,-6,-3,1,-2,10,-1,-2,10,7,-2,-8,8,2,6,-10,10,-7,6,8,-5,3,-5,-3,2,-8,4,1,-4,9,-2,4,6,7,-9,4,-3,2,-10,4,4,8,-10,9,3,1,-8,9,8,7,-3,3,-8,6,3,-3,4,4,-2,5,2,1,2,-5,-8,-10,-5,-6,2,-4,2,2,9,-7,1,-4,-1,-7,5,-5,-6,3,-10,6,-1,-4,8,-8,-4,-5,10,-1,4,-5,-8,3,7,-5,7,6,-4,4,8,6,-8,8,2,-10,-5,-7,-7,-7,10,-9,5,-6,8,8,1,-8,9,-8,5,-9,-5,1,9,-4,2,-6,1,-6,4,-6,10,-6,10,-1,-6,-5,-7,2,-6,4,2,-5,-4,3,-4,4,3,-4,6,9,-4,-2,1,-6,10,3,10,8,-6,3,-10,-4,7,-7,3,-6,8,-5,-1,4,-1,-5,6,6,-4,3,-3,6,-7,6,7,-7,7,-2,5,10,-4,6,8,-1,10,-6,-1,5,-5,7,3,5,-6,-8,4,6,5,-7,3,-7,1,5,6,-1,-1,3,2,3,6,8,1,9,5,1,5,10,1,-2,-5,10,-3,9,-10,5,6,-9,9,-3,5,4,-1,-7,-10,-1,-4,-1,1,-4,2,8,-5,5,4,-2,-1,8,1,-4,4,3,4,5,-4,8,-10,-4,-1,1,-6,-4,-9,8,-8,8,8,2,-5,-9,7,7,-2,-2,-1,-10,-8,-3,-9,-5,-1,-10,6,1,10,4,-7,-7,-1,4,4,10,-2,-8,-2,-9,8,4,-3,7,4,5,2,10,10,7,10,7,8,3,8,5,-1,-10,-5,-10,-8,-10,-6,4,-8,4,-8,-2,-6,-8,-8,10,3,6,9,-7,-10,7,-9,3,-4,7,-8,8,-3,8,-1,-1,-10,-10,-2,6,-4,-9,6,2,9,-3,8,10,-10,-3,9,-3,10,8,10,5,8,1,-7,5,-2,-4,-10,2,-5,8,8,2,7,-9,3,1,1,5,-6,-6,9,-1,-4,-10,9,-2,-1,4,-4,3,10,-1,7,-6,8,-1,2,7,-6,-7,-7,1,-5,4,-7,-9,2,-7,7,3,-5,-4,8,-3,10,-9,-8,5,-3,-5,7,-9,-5,9,10,-7,6,-2,-7,-9,4,6,-6,7,9,2,-5,4,-7,-10,-4,-4,2,-7,10,8,3,7,-4,-1,-6,10,5,-1,-8,1,-10,4,-10,3,-6,5,-6,1,9,-4,4,-6,7,-3,-8,6,-1,2,-1,1,-7,-9,3,2,1,-6,-9,5,-2,2,5,10,2,7,-10,-3,7,7,-3,1,-4,-10,-3,-2,5,7,-5,6,-2,1,1,6,-7,9,1,-3,-1,1,-9,-1,10,-4,6,10,-3,7,-6,-4,-7,10,-3,6,-7,-9,1,-1,-5,-3,5,8,-6,-1,-9,5,6,-3,-8,4,-5,2,-1,6,7,9,-5,-7,-2,-3,-1,-5,4,9,-9,9,-6,-10,5,-4,-5,2,8,1,10,-8,-4,10,-3,4,-2,5,-6,-4,1,1,1,-6,-5,-8,4,-7,-3,10,6,9,7,-7,-1,5,-10,-1,-2,-1,-5,3,9,10,7,-9,4,-2,-3,5,1,-9,-8,2,-7,-8,-4,-4,1,4,-3,-2,10,-9,4,-9,6,5,-6,4,10,8,1,6,5,1,-2,7,10,4,-10,8,-3,-9,-2,4,3,7,-1,7,10,6,-2,3,-8,5,-4,-3,-7,-5,5,10,-3,-3,7,-2,9,-10,-10,-2,-4,6,1,-4,-4,-7,10,7,4,8,10,-2,-8,10,7,-4,-1,8,10,2,1,-4,-7,-4,1,-4,-2,9,-1,7,5,1,-2,9,1,7,-1,6,-2,-8,-4,3,9,7,-3,7,6,5,9,1,5,3,-8,3,1,2,-4,-5,-7,4,-7,-7,1,2,-5,-9,10,6,2,8,1,-1,3,9,-8,-9,5,9,-9,5,3,-4,-7,1,-10,-7,6,-5,5,10,-8,-10,8,-9,2,1,-10,-6,-5,-8,-5,3,2,4,-3,-1,-5,4,-10,-2,-8,8,8,-5,-3,6,-8,1,9,5,10,-3,-7,-2,-3,-1,-5,-1,5,6,10,7,-2,-6,-4,3,9,2,-6,-4,7,1,4,-9,-7,10,6,5,-6,7,6,-7,-7,-8,3,1,7,4,-4,-4,-7,-10,2,10,-8,9,8,-8,4,9,10,-9,-2,10,-7,6,-9,-6,-4,8,-3,8,4,8,2,7,-7,-8,-9,-4,-3,10,-9,-2,3,6,6,9,10,9,-5,5,-3,1,-3,10,-7,9,-9,10,-8,1,-2,5,-10,-5,1,8,-3,5,8,-4,-8,-1,-2,2,-7,6,-3,-1,-5,9,6,-7,-10,7,-2,3,3,-8,4,7,-2,1,5,-2,10,-6,1,-9,8,9,6,1,-5,-4,-10,10,-7,-9,5,-5,-3,5,-4,6,-10,-3,8,-6,2,10,5,4,-3,4,-6,-4,10,6,-4,6,-9,10,3,-8,6,-7,-10,-2,-7,10,5,-4,-5,-9,-3,3,-5,9,7,-3,5,-3,-2,-7,-1,-2,-3,1,7,5,4,1,-10,-7,10,-9,1,-2,-7,2,6,-4,10,-6,-7,6,10,-1,10,7,-2,-4,8,-6,5,-5,-1,1,-6,6,-10,5,10,2,5,-1,-4,10,3,9,3,10,-4,-3,9],[-4,-4,3,-4,-5,2,8,10,-2,-5,2,6,1,-4,8,8,6,-10,5,2,5,-7,-2,2,-2,4,6,-6,7,5,-5,9,4,-8,3,10,-4,2,4,9,-2,9,-10,-7,5,4,5,-9,3,8,9,-4,3,-10,-2,2,-1,-4,-6,-8,2,-8,5,6,7,4,1,9,-5,-10,8,-5,-5,-10,9,-9,-3,-10,6,-6,1,9,9,-4,8,3,8,-5,-6,-3,6,-8,2,-7,7,1,5,-7,-9,9,7,-5,10,7,6,3,-3,-9,2,-3,-9,-4,-6,9,2,-5,9,-3,10,7,1,8,-4,8,2,2,6,8,-8,9,2,-8,-6,4,-2,-1,-2,6,-7,1,-6,5,-10,5,-7,-8,10,3,-1,-1,-7,-8,5,-6,-8,6,-9,-7,-1,9,-9,-10,-4,-7,10,-8,2,8,9,2,1,5,-6,-1,7,8,6,4,-10,7,-9,-1,-2,-10,2,-10,9,-5,10,-3,-5,-10,8,-2,-7,10,-5,-8,-9,8,2,8,-5,-4,8,-1,-8,-3,9,7,-6,3,-8,-8,1,2,-6,-3,-1,8,-6,-2,10,-1,5,-4,-4,2,-7,-1,-6,2,-1,-3,-3,4,9,-4,-3,7,-2,9,-7,-10,-1,5,-1,-7,1,7,-2,3,-6,10,1,-9,8,9,-1,2,-9,9,-3,4,-8,-9,-1,2,7,-1,9,1,10,-5,-10,-4,5,9,-10,3,4,-8,2,4,-2,-10,-5,-8,-3,-7,-3,2,-4,5,5,-2,2,6,10,5,-7,10,-6,-8,-5,-1,-5,6,5,-3,-1,-1,-3,-7,7,2,7,-5,-4,1,9,6,9,5,-3,-4,1,7,2,-6,6,-4,-4,5,3,5,-1,6,-5,4,9,-2,3,4,-5,-6,-10,3,1,-10,-7,-6,8,-6,5,10,-8,-4,-4,-8,-1,-10,-5,5,-3,10,-1,-8,-10,-3,4,9,-8,5,-1,10,9,3,7,2,4,-1,8,-6,-4,3,4,4,-3,3,3,-6,-7,8,4,3,-2,4,4,10,1,-9,-3,7,1,-2,3,-7,-4,4,7,-7,-4,8,-3,7,2,-8,-7,3,-5,2,-10,10,-6,-3,4,1,-2,-5,9,-8,-7,6,-3,2,1,-10,7,-6,-6,5,8,9,6,5,-5,-4,9,-8,8,-2,6,-1,-4,5,5,-2,-5,-5,5,6,-2,2,-10,-6,2,9,-4,10,-7,-7,-4,-7,2,-10,1,6,-6,-7,-1,-7,4,1,-6,5,-4,6,-3,-7,-7,1,2,-3,8,-9,6,-1,3,8,1,-5,-6,-4,-5,6,-7,10,-4,2,-5,-2,8,-1,5,10,-3,-2,-5,-9,-7,-2,2,6,5,10,8,10,5,-6,-1,8,-3,-2,-9,1,-6,2,5,3,-5,-1,-7,10,-2,-6,-5,4,7,10,-7,-1,6,-8,-1,-2,-8,-1,3,8,-8,-8,-9,2,-10,-3,3,-7,-7,-9,-10,7,5,-4,1,-6,8,-3,10,-4,-10,-7,-1,2,-3,-8,-4,-10,5,9,-8,7,3,-5,-7,-3,-4,-2,7,2,-6,3,-7,3,1,-10,-9,4,-8,4,8,4,10,-6,1,8,-8,9,8,-9,-4,-7,-7,6,2,3,-9,-9,-7,7,2,-5,-8,8,-6,4,-6,-4,4,8,-2,-5,2,-2,-10,4,8,-4,4,4,-7,-10,1,-3,6,2,-4,10,2,4,-3,-4,8,9,10,-1,-2,-9,9,-10,5,10,9,-5,4,-3,-8,9,-8,7,10,4,-3,6,5,4,8,-9,-5,-9,4,5,-2,-9,3,-6,-5,6,3,9,-10,8,-10,6,-3,-6,9,-10,-8,-1,6,3,-10,-1,-4,3,-7,1,-7,-5,-4,-9,2,3,-8,-10,-4,6,-3,6,-9,-1,-9,-4,-1,-9,7,7,-5,9,7,-8,2,4,2,3,1,8,8,8,-8,-6,3,4,6,-3,-3,-5,-8,-2,-10,-10,1,-3,-9,-10,-6,-1,10,10,1,10,-6,-10,-3,-5,-1,6,-4,-3,-9,-9,1,-7,5,8,1,-1,2,-3,8,-2,4,1,6,-10,-8,2,-9,2,-6,-2,-8,-6,-6,9,-7,-1,8,9,-7,-9,-8,-4,-1,10,7,-2,5,-7,-7,5,7,6,-9,9,4,10,-2,8,9,9,-10,-2,1,7,8,-3,-7,2,4,1,3,3,-6,-7,10,2,8,-6,3,-8,-3,-10,10,8,5,-5,3,-4,-8,5,-10,8,10,9,-7,-6,8,3,-8,-3,2,-3,-3,-3,9,-8,4,-7,2,-10,2,9,4,7,5,-6,9,4,-6,4,-5,-2,-10,3,-2,-3,1,-4,6,-6,5,-9,-1,6,-10,-1,-3,-3,-2,7,1,10,-1,-6,10,-7,-4,-7,1,-2,-4,-5,-6,9,9,3,5,-2,10,1,-10,2,9,8,-5,-1,5,-5,8,-10,2,-7,-7,-1,-4,6,5,7,9,3,8,-10,-2,4,1,-7,7,7,-2,2,3,10,-6,-1,2,9,-8,1,-6,-1,8,9,3,-9,6,-9,-1,-8,-5,4,-1,-7,1,-8,-2,-3,7,4,-10,5,6,7,-4,-6,2,-6,10,1,-1,10,9,4,7,-6,-2,-3,6,8,4,6,-2,10,-8,-5,1,-4,9,6,5,3,4,8,5,-7,9,-7,-10,5,10,-6,-7,3,8,2,-5,1,-2,-9,-6,-7,2,6,-3,-9,-2,5,-7,5,-2,-9,3,-4,10,1,-10,10,2,-5,8,-7,-10,10,-3,-1,2,-1,9,-2,-1,-6,1,4,-4,8,10,4,10,-7,9,-7,9,9,-5,8,4,-6,10,8,-6,5,2,8,-5,6,-3,6,2,10,4,1,2,3,-7,3,9,-1,-1,-4,2,-10,-2,-8,10,10,-6,2,-10,7,7,-3,1,-7,1,-9,-1,9,-3,-8,5,-7,-10,-8,-5,2,-6,-8,6,-1,9,1,7,3,-9,5,8,-6,2,-3,-10,10,-9,-4,8,-2,-3,8,7,2,-4,-1,-8,3,10,8,2,-5,-10,5,-2,4,-2,-7,-6,6,-5,-4,-3,-4,4,2,-2,6,5,10,10,5,8,2,3,6,4,-1,-7,-9,-7,-9,-9,-10,10,-4,-6,4,-2,-10,4,-3,7,5,-8,-7,5,-3,4,-9,-5,-5,-3,-9,-3,2,-6,-6,-10,7,5,-5,3,-7,5,-1,10,-3,3,1,-10,7,-9,-9,6,-1,3,3,5,-2,9,-3,9,3,-8,10,-7,-8,-10,9,4,-6,5,-2,3,-1,7,-1,-1,-8,9,1,-5,-4,5,-2,1,-5,-9,-9,10,3,5,4,8,-5,10,-3,-4,-1,-10,7,10,10,-10,2,-8,-9,-10,-10,-3,-7,10,7,9,-2,-8,2,10,9,-10,2,-7,2,-2,-8,-7,7,7,3,1,-4,-2,-8,8,-4,8,8,-7,-5,-3,3,7,9,-5,9,6,4,2,2,-9,8,-2,-3,5,7,2,-9,-1,5,1,-9,-9,-6,-7,1,-5,-3,3,8,-5,-7,-5,6,-7,2,-6,4,8,-6,-8,-8,6,-2,9,-9,4,-1,-4,-7,-9,6,1,-3,-10,3,8,1,-5,2,-2,8,7,-5,8,4,2,-5,2,4,-8,7,8,-7,10,7,-10,-8,-6,-2,4,2,-5,-8,6,8,9,-8,-5,2,-4,-9,-5,3,-9,-6,10,8,-6,2,-10,-5,-8,-8,8,10,10,-8,6,6,8,-10,-1,-4,7,-8,8,6,6,1,-3,-8,2,-7,1,6,9,-10,4,-7]], dtype = "int16")#candidate|11136|(2, 1456)|const|int16
const_11137 = relay.const(-7, dtype = "uint16")#candidate|11137|()|const|uint16
const_11138 = relay.const([7.027591,6.519733,-2.221153,9.341016,7.696711,4.269769,8.016472,1.468085,-7.417311,-9.679790,-1.957119,-3.926763,-7.711362,3.553049,3.689837,-3.217044,-6.647691,6.558045,1.860328,5.812690,-5.884216,-7.371020,-6.349047,-6.885781,-0.466833,-8.598051,-2.027237,-7.647029,2.053414,-5.935891,-8.608736,6.428090,5.225275,-1.974342,1.288429,9.419084,-8.127431,0.732211,5.767277,1.695398,-1.279990,8.844149,-2.644153,0.253748,9.584191,-4.422498,6.115033,4.714095,-1.047717,5.146546,7.500127,9.823819,-5.528524,-8.172114,-4.433702,2.408274,0.314529,-0.990432,8.702852,8.493355,6.392212,-5.615100,3.385891,9.153391,8.295981,2.152662,-0.342718,-0.634814,1.108110,-7.470416,-9.718678,-8.475295,-4.517453,-3.834008,8.757032,6.891320,8.680326,7.033068,3.708266,4.317151,6.825153,3.808962,8.255287,-8.234877,-8.226332,5.785127,-4.767229,5.690222,-3.216824,-7.162100,1.552475,-3.088228,-6.249681,-2.096063,3.768074,-2.072770,-2.561216,-7.409689,-8.446341,6.890218,8.535789,5.884442,-5.232946,9.299390,-3.664028,-4.567004,9.155184,6.881588,-7.562286,1.372939,1.155014,-3.482276,3.885394,2.048767,3.781483,-3.599859,1.507053,3.659921,-4.658072,-2.842265,-1.026231,1.084118,-8.484164,4.099645,-4.973879,-9.012470,9.299058,1.399164,7.145389,-7.285997,4.936123,7.463940,-5.052813,1.433136,0.744430,-9.082807,-2.183086,2.107406,-3.503186,-3.077389,8.043628,-4.384337,8.701142,8.661388,-3.965984,-6.889751,3.351553,9.658970,-2.179689,-1.357401,-3.395380,3.025922,-5.171880,0.514061,-3.637529,0.369965,-4.073491,-0.019917,-0.028909,-1.023613,0.625863,-1.902388,2.938874,-0.579406,-1.145734,2.171897,7.860568,-5.960040,-8.447911,-9.253242,5.805278,-9.253625,8.445827,6.572036,2.832951,4.351326,-2.028213,1.365927,1.154279,5.123642,-0.638735,-7.222128,-4.599237,-4.107160,0.473179,7.854025,-7.443020,-5.164811,-6.063392,1.874400,-7.158311,-2.573964,9.614979,-9.469946,0.218660,-3.990195,-7.093686,-7.946904,9.696114,9.335679,9.302463,8.495641,6.026772,-2.000444,-4.587644,9.657348,-0.876706,9.381494,8.071148,-9.834773,-3.082297,-2.034393,5.632511,2.873308,7.967417,0.322426,0.116119,1.891814,4.201289,-8.851052,8.233204,-8.007702,2.654526,6.416609,0.125502,0.103317,6.429224,-2.893382,-7.206435,3.319172,5.841663,7.498655,-5.889142,1.179490,-1.685137,8.294929,3.557260,9.486737,1.333539,5.324652,-0.388054,-2.174129,-0.316210,-8.835901,-5.975289,8.247835,8.974612,-1.955429,6.790075,4.735286,4.583481,9.293354,-5.701074,7.205045,-7.844004,-8.628589,-9.388639,-7.784890,8.349888,6.627617,-2.377417,3.223175,9.947972,9.194540,6.204617,-4.991917,9.871512,2.968364,-0.612668,-8.446256,2.380212,6.614617,5.780421,0.986572,8.818311,7.900161,6.424678,4.141880,-6.608885,7.691846,4.190961,3.996689,1.968183,-5.789583,7.064281,-8.433847,6.988663,-4.293047,7.372598,0.069470,2.120246,5.950755,-8.471442,7.671492,8.437231,-1.318620,9.660070,-8.776000,6.739502,-6.116795,0.274902,2.034179,9.091813,1.389919,1.753650,6.164153,3.371727,4.650270,6.711886,5.327918,4.967657,8.358982,3.273671,-1.009934,-5.954234,6.394085,0.038300,-4.013310,8.782545,-5.873276,-2.311063,7.601100,-1.537866,3.462617,3.130437,-4.197792,4.657665,6.987753,1.808538,4.911030,5.308817,5.244652,7.904897,7.151982,-3.463683,-2.561633,8.643027,-3.143557,-4.764825,9.813639,-1.284703,1.347730,8.311191,-0.292069,-6.233554,-7.189443,9.581681,-6.078927,2.627589,0.701963,9.593387,-5.031047,9.337570,-6.745956,1.618183,6.346552,-8.698333,8.470343,-1.258025,-6.569985,1.378474,-7.925089,6.423412,5.299862,-0.345110,-9.529696,-0.545753,-5.190532,2.305800,-6.182153,-8.368135,9.371841,-0.687254,-8.249498,-6.457566,4.586710,8.655756,-1.555160,-3.930362,1.148229,-8.159342,6.239128,-9.042545,-0.679563], dtype = "float32")#candidate|11138|(384,)|const|float32
call_11135 = relay.TupleGetItem(func_9045_call(relay.reshape(const_11136.astype('int16'), [2912,]), relay.reshape(const_11137.astype('uint16'), []), relay.reshape(const_11138.astype('float32'), [384,]), ), 1)
call_11139 = relay.TupleGetItem(func_9050_call(relay.reshape(const_11136.astype('int16'), [2912,]), relay.reshape(const_11137.astype('uint16'), []), relay.reshape(const_11138.astype('float32'), [384,]), ), 1)
bop_11141 = relay.minimum(call_11135.astype('float32'), const_11137.astype('float32')) # shape=(1, 9, 6)
bop_11144 = relay.minimum(call_11139.astype('float32'), const_11137.astype('float32')) # shape=(1, 9, 6)
bop_11145 = relay.equal(bop_11141.astype('bool'), const_11137.astype('bool')) # shape=(1, 9, 6)
bop_11148 = relay.equal(bop_11144.astype('bool'), const_11137.astype('bool')) # shape=(1, 9, 6)
func_10033_call = mod.get_global_var('func_10033')
func_10039_call = mutated_mod.get_global_var('func_10039')
var_11155 = relay.var("var_11155", dtype = "int8", shape = (1920, 1))#candidate|11155|(1920, 1)|var|int8
const_11156 = relay.const([-4,3,8,7,1,2,-5,-10,-1,-9,6,-7,5,-6,-7,-1,9,-4,-2,-10,5,8,1,6,-9,-3,1,8,6,-6,-10,-3,-9,-8,7,5,8,-5,1,2,-6,-5,-5,-4,-10,3,7,8,4,-8,2,7,9,10,3,2,-7,6,-1,-4,-3,10,4,4,4,10,-5,9,-1,6,10,-1,4,-10,10,-5,-2,10,4,5,8,-5,4,-9,-10,-7,10,1,7,-8,-7,9,9,-7,-7,-1,8,8,-10,9,9,-2,5,-4,7,1,-8,-5,-4,-1,3,-4,10,4,-10,-9,8,9,-7,8,-6,9,-1,-10,-5,6,3,-8,5,-2,-5,-3,4,-6,6,4,5,5,-8,-3,-5,10,10,-2,1,7,7,-1,-1,-10,3,8,-9,-3,7,9,-4,4,8,8,-2,-5,4,-7,-3,3,-5,3,3,3,2,4,3,-2,5,-8,5,-5,-9,6,-3,7,10,-4,-6,3,-10,-5,-4,-2,7,6,-5,-10,7,-6,7,-10,5,-7,10,-8,6,3,-10,-9,-7,8,-9,-6,-6,-7,-8,-9,-1,-4,6,-3,-5,2,-1,2,-9,-2,1,-3,2,10,-8,-5,-5,10,-10,6,9,-3,-3,8,7,8,-10,5,-2,-4,-5,-9,-7,-6,2,-4,-1,9,4,-4,1,-9,3,-3,-10,-7,-5,7,-5,-6,-4,6,-9,-7,-6,4,-3,8,-6,2,7,10,6,-1,10,-8,10,-8,-2,-2,6,-6,6,4,5,7,-5,-4,-6,-4,4,1,-7,-3,-3,-7,-8,7,-9,7,5,7,-10,-5,-8,3,10,-6,-2,-5,-5,-6,-7,8,-2,-1,-6,10,-1,-4,-3,-1,-2,1,-7,3,-1,4,1,-4,-6,1,7,-9,8,7,2,-6,6,-10,-6,-4,1,-2,1,-7,-5,8,2,10,5,-1,7,3,5,-6,-8,5,-10,4,-7,8,-9,-3,8,-1,1,9,-9,1,8,6,-2,5,-10,-5,10,-10,-4,2,-4,-2,-6,3,3,-1,5,-7,10,1,3,-8,1,-3,-1,-4,9,10,-9,1,10,5,1,2,-5,3,9,4,9,5,-4,5,-5,9,1,-5,3,-8,-1,-8,-5,6,-2,4,-10,1,7,7,10,-5,-7,-4,10,7,-2,10,7,1,-8,1,5,-2,-6,4,7,1,-2,6,-6,-5,-1,-8,-3,-6,-6,-9,-6,5,1,2,-1,-4,7,-4,7,1,-6,-4,8,10,-6,-6,1,8,1,2,2,-2,9,2,-9,2,10,6,6,3,-6,-8,-10,-1,-6,-10,2,-7,-2,-5,-2,8,-2,1,10,-2,2,-3,6,-3,8,1,9,-1,7,-4,2,10,-6,-4,4,3,7,10,2,6,-9,10,-6,-1,-8,3,-6,-5,-5,-9,8,7,-9,-1,-8,-1,-5,-5,5,-6,-10,2,-4,-8,-8,8,-10,3,1,10,-10,-6,-5,6,6,2,2,2,3,-5,-9,-8,9,10,-3,9,5,-10,8,-2,-7,10,8,-5,4,-1,4,-1,1,5,2,-9,9,7,5,-2,4,4,-4,3,1,-10,-5,2,-2,2,-8,1,8,5,-9,-8,8,5,10,-1,-5,-10,2,8,6,10,-9,-3,10,2,6,-2], dtype = "uint8")#candidate|11156|(624,)|const|uint8
const_11157 = relay.const([8,6,6,2,4,7,-10,10,-7,10,9,8,1,3,-8,-10,-10,10,8,4,-6,3,-2,-5,-3,-8,4,6,-2,9,-5,-8,5,-5,-10,6,7,-1,4,9], dtype = "uint8")#candidate|11157|(40,)|const|uint8
call_11154 = relay.TupleGetItem(func_10033_call(relay.reshape(const_11137.astype('int8'), []), relay.reshape(var_11155.astype('int8'), [1920,]), relay.reshape(const_11156.astype('uint8'), [624,]), relay.reshape(const_11157.astype('uint8'), [40,]), ), 7)
call_11158 = relay.TupleGetItem(func_10039_call(relay.reshape(const_11137.astype('int8'), []), relay.reshape(var_11155.astype('int8'), [1920,]), relay.reshape(const_11156.astype('uint8'), [624,]), relay.reshape(const_11157.astype('uint8'), [40,]), ), 7)
func_6453_call = mod.get_global_var('func_6453')
func_6454_call = mutated_mod.get_global_var('func_6454')
call_11160 = relay.TupleGetItem(func_6453_call(), 0)
call_11161 = relay.TupleGetItem(func_6454_call(), 0)
output = relay.Tuple([call_11123,call_11131,const_11136,const_11138,bop_11145,call_11154,var_11155,const_11156,const_11157,call_11160,])
output2 = relay.Tuple([call_11124,call_11132,const_11136,const_11138,bop_11148,call_11158,var_11155,const_11156,const_11157,call_11161,])
func_11166 = relay.Function([var_11155,], output)
mod['func_11166'] = func_11166
mod = relay.transform.InferType()(mod)
mutated_mod['func_11166'] = func_11166
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11167 = relay.var("var_11167", dtype = "int8", shape = (1920, 1))#candidate|11167|(1920, 1)|var|int8
func_11166_call = mutated_mod.get_global_var('func_11166')
call_11168 = func_11166_call(var_11167)
output = call_11168
func_11169 = relay.Function([var_11167], output)
mutated_mod['func_11169'] = func_11169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9467_call = mod.get_global_var('func_9467')
func_9468_call = mutated_mod.get_global_var('func_9468')
call_11176 = relay.TupleGetItem(func_9467_call(), 0)
call_11177 = relay.TupleGetItem(func_9468_call(), 0)
func_9154_call = mod.get_global_var('func_9154')
func_9155_call = mutated_mod.get_global_var('func_9155')
call_11184 = func_9154_call()
call_11185 = func_9154_call()
output = relay.Tuple([call_11176,call_11184,])
output2 = relay.Tuple([call_11177,call_11185,])
func_11190 = relay.Function([], output)
mod['func_11190'] = func_11190
mod = relay.transform.InferType()(mod)
output = func_11190()
func_11191 = relay.Function([], output)
mutated_mod['func_11191'] = func_11191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10564_call = mod.get_global_var('func_10564')
func_10566_call = mutated_mod.get_global_var('func_10566')
call_11228 = func_10564_call()
call_11229 = func_10564_call()
func_10836_call = mod.get_global_var('func_10836')
func_10837_call = mutated_mod.get_global_var('func_10837')
call_11230 = relay.TupleGetItem(func_10836_call(), 5)
call_11231 = relay.TupleGetItem(func_10837_call(), 5)
const_11250 = relay.const([-3,-3,-6,3,-4,-2,-2,-3,-4,-5,-2,10,10,5,8,1,7,-6,-10,-2,10,1,9,-10,1,-4,2,-5,4,6,3,5,-3,4,-10,6,-10,-3,-3,2,10,-8,-1,-5,-2,9,10,9,5,-5,-10,4,-9,9,-9,5,6,-4,-4,-4,-9,6,-6,-3,8,5,-10,-8,-7,-1,7,-8,7,1,-10,-2,9,2,-2,-8,4,10,2,5,4,-6,9,-3,-7,-10,1,-9,1,-6,6,-5,7,4,-5,9,-4,10,2,-2,10,-7,5,9,-5,8,9,2,1,5,5,-3,2,4,9,-2,-7,7,-5,7,3,1,-1,6,-1,7,-7,-6,-6,-3,-4,3,4,-5,-8,10,10,-1,-6,-4,-2,-4,-3,-7,9,-3,7,-6,8,1,-6,7,-4,-8,9,-7,4,9,-2,-6,8,-5,7,-7,7,-3,1,-10,2,7,-1,-4,8,2,-2,10,-10,-7,10,-4,-4,-1,-10,-9,-8,-6,3,-8,3,-8,10,7,6,-9,-7,-5,-1,-7,-7,5,-3,8,1,6,6,1,3,-6,-1,7,-9,3,1,2,6,-3,8,-4,7,-5,3,9,-3,7,1,5,10,-1,-6,7,10,-1,-3,-9,7,3,1,8,-6,-9,-10,-8,-10,9,2,10,-10,-2,7,5,-9,-4,10,-2,8,5,6,10,2,6,9,-6,6,-2,-1,-7,-5,1,-4,6,-6,3,6,-10,3,10,9,-1,-6,-7,9,-9,6,2,3,-5,-8,-9,-10,-1,-4,-6,-9,-9,7,-3,-2,3,-10,-2,-2,10,-5,-2,-9,-9,6,-7,2,1,3,-8,-4,-5,-5,-7,-3,-6,-9,3,-3,-2,-10,5,6,1,-10,6,-1,8,7,-2,-4,9,7,1,8,3,2,-8,-4,10,10,-7,7,7,-1,-6,-7,6,1,-6,-1,-5,-8,3,-5,-7,-1,6,-10,-3,1,-3,8,-4,9,8,-10,-2,7,10,10,-7,-10,10,5,10,-7,-4,-4,-4,8,-2,-4,-5,-4,2,-10,7,-1,1,-10,-2,4,2,2,-1,-7,-9,9,-3,-6,-7,6,-10,8,-5,-10,7,-4,-2,-6,-9,5,-7,9,-5,7,-5,5,3,5,-4,-6,-1,-2,9,5,3,3,4,10,-8,3,-1,9,2,2,2,-8,10,-5,8,-4,-2,10,8,-7,-6,-2,-9,-9,-6,8,10,-9,6,9,4,4,10,-1,-2,7,-1,5,9,-2,6,10,-7,-6,5,-6,9,-4,-4,9,5,3,6,-7,-3,-1,10,5,-4,-10,-6,-7,-8,6,-8,-7,-5,-9,10,8,-5,-2,-4,-4,-8,5,-3,-1,-5,-1,3,8,-10,-9,-4,-4,7,6,3,-10,-6,-6,-7,-10,-5,-7,-10,-8,-3,1,-5,-6,2,-6,4,5,10,7,-10,2,-9,-8,4,-7,3,2,-4,-2,2,1,-3,6,-10,1,-9,9,-9,-6,1,10,3,3,2,-6,-3,-2,5,-8,-10,-7,1,8,-1,5,-8,-7,8,-2,3,-7,-5,3,-7,-5,1,6,7,3,6,1,2,-9,-8,-3,9,9,8,-5,4,-10,3,-6,9,10,7,1,3,-10,-3,2,-2,7,5,-7,-2,-6,2,-7,3,-8,3], dtype = "uint8")#candidate|11250|(624,)|const|uint8
bop_11251 = relay.subtract(call_11230.astype('int32'), relay.reshape(const_11250.astype('int32'), relay.shape_of(call_11230))) # shape=(624,)
bop_11254 = relay.subtract(call_11231.astype('int32'), relay.reshape(const_11250.astype('int32'), relay.shape_of(call_11231))) # shape=(624,)
func_6784_call = mod.get_global_var('func_6784')
func_6786_call = mutated_mod.get_global_var('func_6786')
call_11266 = relay.TupleGetItem(func_6784_call(), 0)
call_11267 = relay.TupleGetItem(func_6786_call(), 0)
output = relay.Tuple([call_11228,bop_11251,call_11266,])
output2 = relay.Tuple([call_11229,bop_11254,call_11267,])
func_11271 = relay.Function([], output)
mod['func_11271'] = func_11271
mod = relay.transform.InferType()(mod)
output = func_11271()
func_11272 = relay.Function([], output)
mutated_mod['func_11272'] = func_11272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9930_call = mod.get_global_var('func_9930')
func_9932_call = mutated_mod.get_global_var('func_9932')
call_11333 = func_9930_call()
call_11334 = func_9930_call()
func_8566_call = mod.get_global_var('func_8566')
func_8568_call = mutated_mod.get_global_var('func_8568')
call_11337 = relay.TupleGetItem(func_8566_call(), 0)
call_11338 = relay.TupleGetItem(func_8568_call(), 0)
output = relay.Tuple([call_11333,call_11337,])
output2 = relay.Tuple([call_11334,call_11338,])
func_11340 = relay.Function([], output)
mod['func_11340'] = func_11340
mod = relay.transform.InferType()(mod)
output = func_11340()
func_11341 = relay.Function([], output)
mutated_mod['func_11341'] = func_11341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8566_call = mod.get_global_var('func_8566')
func_8568_call = mutated_mod.get_global_var('func_8568')
call_11352 = relay.TupleGetItem(func_8566_call(), 0)
call_11353 = relay.TupleGetItem(func_8568_call(), 0)
output = relay.Tuple([call_11352,])
output2 = relay.Tuple([call_11353,])
func_11358 = relay.Function([], output)
mod['func_11358'] = func_11358
mod = relay.transform.InferType()(mod)
output = func_11358()
func_11359 = relay.Function([], output)
mutated_mod['func_11359'] = func_11359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7736_call = mod.get_global_var('func_7736')
func_7738_call = mutated_mod.get_global_var('func_7738')
call_11376 = relay.TupleGetItem(func_7736_call(), 3)
call_11377 = relay.TupleGetItem(func_7738_call(), 3)
output = call_11376
output2 = call_11377
func_11393 = relay.Function([], output)
mod['func_11393'] = func_11393
mod = relay.transform.InferType()(mod)
output = func_11393()
func_11394 = relay.Function([], output)
mutated_mod['func_11394'] = func_11394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10451_call = mod.get_global_var('func_10451')
func_10453_call = mutated_mod.get_global_var('func_10453')
call_11397 = relay.TupleGetItem(func_10451_call(), 0)
call_11398 = relay.TupleGetItem(func_10453_call(), 0)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_11409 = relay.TupleGetItem(func_5872_call(), 0)
call_11410 = relay.TupleGetItem(func_5874_call(), 0)
output = relay.Tuple([call_11397,call_11409,])
output2 = relay.Tuple([call_11398,call_11410,])
func_11452 = relay.Function([], output)
mod['func_11452'] = func_11452
mod = relay.transform.InferType()(mod)
mutated_mod['func_11452'] = func_11452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11452_call = mutated_mod.get_global_var('func_11452')
call_11453 = func_11452_call()
output = call_11453
func_11454 = relay.Function([], output)
mutated_mod['func_11454'] = func_11454
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11461 = relay.var("var_11461", dtype = "float64", shape = ())#candidate|11461|()|var|float64
var_11462 = relay.var("var_11462", dtype = "float64", shape = (1, 2, 2))#candidate|11462|(1, 2, 2)|var|float64
bop_11463 = relay.not_equal(var_11461.astype('bool'), var_11462.astype('bool')) # shape=(1, 2, 2)
output = relay.Tuple([bop_11463,])
output2 = relay.Tuple([bop_11463,])
F = relay.Function([var_11461,var_11462,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_11461,var_11462,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

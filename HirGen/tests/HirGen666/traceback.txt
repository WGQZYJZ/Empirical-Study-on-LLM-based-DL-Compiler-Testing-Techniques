==========mod==========
#[version = "0.0.5"]
def @func_10836() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(13, 4), uint8], int8, Tensor[(96, 20), int8], Tensor[(624), uint8], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) {
  %0 = @func_8860() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %1 = @func_8877() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %2 = cast(meta[relay.Constant][0] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %3 = cast(meta[relay.Constant][1] /* ty=Tensor[(96, 20), int8] */, dtype="int8") /* ty=Tensor[(96, 20), int8] */;
  %4 = cast(meta[relay.Constant][2] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %5 = reshape(%2, newshape=[]) /* ty=int8 */;
  %6 = reshape(%3, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), int8] */;
  %7 = reshape(%4, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %8 = @func_4365(%5, %6, %7) /* ty=(Tensor[(16, 10, 12), bool], Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(13, 4), uint8], Tensor[(624), uint8]) */;
  %9 = @func_10186() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %10 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
  %11 = %0.1;
  %12 = %1.0;
  %13 = %8.3;
  %14 = %9.0;
  %15 = @func_8368() /* ty=Tensor[(11, 15, 15), float32] */;
  %16 = %10.0;
  (%11, %12, %13, meta[relay.Constant][0] /* ty=int8 */, meta[relay.Constant][1] /* ty=Tensor[(96, 20), int8] */, meta[relay.Constant][2] /* ty=Tensor[(624), uint8] */, %14, %15, %16)
}

def @func_7320() -> (Tensor[(11, 15, 15), float32],) {
  %17 = @func_3932() /* ty=Tensor[(11, 15, 15), float32] */;
  (%17,)
}

def @func_2342(%var_2299: Tensor[(11, 1, 10), uint8], %var_2300: Tensor[(11, 3, 10), uint8]) -> Tensor[(11, 3, 10), uint8] {
  %18 = cast(%var_2299, dtype="uint8") /* ty=Tensor[(11, 1, 10), uint8] */;
  %19 = cast(%var_2300, dtype="uint8") /* ty=Tensor[(11, 3, 10), uint8] */;
  bitwise_and(%18, %19) /* ty=Tensor[(11, 3, 10), uint8] */
}

def @func_5838(%var_5790: Tensor[(11, 15, 15), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) {
  %20 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %21 = %20.0;
  %22 = cast(%var_5790, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%21, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %26 = cast(meta[relay.Constant][3] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %27 = cast(meta[relay.Constant][4] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %28 = reshape(%26, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %29 = reshape(%27, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %30 = @func_5096(%28, %29) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool]) */;
  %31 = cast(meta[relay.Constant][4] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %32 = cast(meta[relay.Constant][4] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %33 = reshape(%31, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %34 = reshape(%32, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %35 = @func_411(%33, %34) /* ty=(Tensor[(7, 12, 6), bool],) */;
  %36 = power(%24, %25) /* ty=Tensor[(11, 15, 15), float32] */;
  %37 = %30.1;
  %38 = %35.0;
  (%36, %37, meta[relay.Constant][3] /* ty=Tensor[(54), float32] */, meta[relay.Constant][4] /* ty=Tensor[(504), bool] */, %38)
}

def @func_5710() -> (Tensor[(11, 10, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(32), float64], Tensor[(54), float32]) {
  %39 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
  %40 = cast(meta[relay.Constant][5] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %41 = cast(meta[relay.Constant][6] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %42 = reshape(%40, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), float64] */;
  %43 = reshape(%41, newshape=[9, 6]) /* ty=Tensor[(9, 6), float32] */;
  %44 = @func_4989(%42, %43) /* ty=(Tensor[(2, 8, 2), uint8], Tensor[(12, 3, 7), uint32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(9, 6), float32], Tensor[(2, 8, 2), float32]) */;
  %45 = %39.1;
  %46 = %44.5;
  (%45, %46, meta[relay.Constant][5] /* ty=Tensor[(32), float64] */, meta[relay.Constant][6] /* ty=Tensor[(54), float32] */)
}

def @func_3892() -> (Tensor[(11, 15, 15), float32],) {
  %47 = cast(meta[relay.Constant][7] /* ty=Tensor[(11, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %48 = erf(%47) /* ty=Tensor[(11, 15, 15), float32] */;
  (%48,)
}

def @func_4175() -> (Tensor[(11, 15, 15), float64],) {
  %49 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %50 = %49.0;
  %51 = cast(%50, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %52 = log(%51) /* ty=Tensor[(11, 15, 15), float64] */;
  (%52,)
}

def @func_8459() -> (Tensor[(11, 15, 15), float32],) {
  %53 = @func_7962() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %54 = %53.0;
  (%54,)
}

def @func_9416() -> (Tensor[(11, 15, 15), float32],) {
  %55 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
  %56 = %55.1;
  (%56,)
}

def @func_3909() -> (Tensor[(11, 15, 15), float32],) {
  %57 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %58 = %57.0;
  (%58,)
}

def @func_5558(%var_5547: Tensor[(40), uint8], %var_5555: Tensor[(624), uint8], %var_5556: Tensor[(36, 14), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(4, 13, ?), uint8], Tensor[(624), uint8], Tensor[(36, 14), bool]) {
  %59 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %60 = cast(%var_5547, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %61 = reshape(%60, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %62 = @func_5389(%61) /* ty=(Tensor[(8, 5, 8), uint8],) */;
  %63 = %59.0;
  %64 = cast(%63, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %65 = cast(%63, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %66 = cast(%var_5555, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %67 = cast(%var_5556, dtype="bool") /* ty=Tensor[(36, 14), bool] */;
  %68 = reshape(%64, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %69 = reshape(%65, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), bool] */;
  %70 = reshape(%66, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %71 = reshape(%67, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %72 = @func_4029(%68, %69, %70, %71) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */;
  %73 = %62.0;
  %74 = %72.1;
  (%63, %73, %var_5547, %74, %var_5555, %var_5556)
}

def @func_8877() -> (Tensor[(11, 15, 15), float32],) {
  %75 = @func_6453() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %76 = %75.0;
  (%76,)
}

def @func_7183() -> Tensor[(11, 15, 15), float32] {
  %77 = @func_6951() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %77.0
}

def @func_6685() -> Tensor[(11, 15, 15), float32] {
  @func_4735() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_5643() -> (Tensor[(11, 15, 15), float32],) {
  %78 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %79 = %78.0;
  (%79,)
}

def @func_7902() -> (Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) {
  %80 = @func_5366() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %81 = @func_6942() /* ty=(Tensor[(12, 10, 14), float32],) */;
  %82 = %80.0;
  %83 = %81.0;
  (%82, %83)
}

def @func_6123(%var_6077: Tensor[(2, 8, 2), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(2, 8, 2), float32]) {
  %84 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
  %85 = @func_5710() /* ty=(Tensor[(11, 10, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(32), float64], Tensor[(54), float32]) */;
  %86 = %85.1;
  %87 = cast(%var_6077, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %91 = floor_divide(%89, %90) /* ty=Tensor[(2, 8, 2), float32] */;
  %92 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 8, 2), float32] */, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %93 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%91, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %96 = %84.0;
  %97 = divide(%94, %95) /* ty=Tensor[(2, 8, 2), float32] */;
  (%96, %97)
}

def @func_10773() -> Tensor[(11, 15, 15), float32] {
  %98 = @func_7902() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) */;
  %98.0
}

def @func_8860() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %99 = @func_7736() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %100 = %99.0;
  %101 = @func_7183() /* ty=Tensor[(11, 15, 15), float32] */;
  (%100, %101)
}

def @func_4611(%var_4608: Tensor[(54), float32]) -> (Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(8, 6, 4), float64], Tensor[(192), float32], Tensor[(504), bool], Tensor[(54), float32], Tensor[(504), bool]) {
  %102 = @func_3924() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %103 = %102.0;
  %104 = cast(%103, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %105 = cast(%103, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %106 = sqrt(%105) /* ty=Tensor[(11, 15, 15), float64] */;
  %107 = cast(%106, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %108 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %109 = cast(meta[relay.Constant][9] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %110 = cast(meta[relay.Constant][9] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %111 = reshape(%109, newshape=[8, 6, 4]) /* ty=Tensor[(8, 6, 4), float32] */;
  %112 = reshape(%110, newshape=[8, 6, 4]) /* ty=Tensor[(8, 6, 4), float32] */;
  %113 = @func_3785(%111, %112) /* ty=(Tensor[(8, 6, 4), float64],) */;
  %114 = cast(%var_4608, dtype="float32") /* ty=Tensor[(54), float32] */;
  %115 = cast(meta[relay.Constant][10] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %116 = reshape(%114, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
  %117 = reshape(%115, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %118 = @func_1582(%116, %117) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
  %119 = asinh(%104) /* ty=Tensor[(11, 15, 15), float64] */;
  %120 = exp(%107) /* ty=Tensor[(11, 15, 15), float64] */;
  %121 = @func_3932() /* ty=Tensor[(11, 15, 15), float32] */;
  %122 = %108.0;
  %123 = %113.0;
  %124 = %118.3;
  (%119, %120, %121, %122, %123, meta[relay.Constant][9] /* ty=Tensor[(192), float32] */, %124, %var_4608, meta[relay.Constant][10] /* ty=Tensor[(504), bool] */)
}

def @func_5323() -> (Tensor[(11, 15, 15), float32],) {
  %125 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %126 = %125.0;
  (%126,)
}

def @func_7659(%var_7624: Tensor[(980), float64]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(14, 5, 14), uint32], Tensor[(980), float64]) {
  %127 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %128 = %127.0;
  %129 = cast(%128, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %130 = reshape(%129, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %131 = @func_5838(%130) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) */;
  %132 = cast(%var_7624, dtype="float64") /* ty=Tensor[(980), float64] */;
  %133 = reshape(%132, newshape=[14, 5, 14]) /* ty=Tensor[(14, 5, 14), float64] */;
  %134 = @func_4158() /* ty=Tensor[(11, 15, 15), float32] */;
  %135 = %131.4;
  %136 = @func_7010(%133) /* ty=Tensor[(14, 5, 14), uint32] */;
  (%128, %134, %135, %136, %var_7624)
}

def @func_11166(%var_11155: Tensor[(1920, 1), int8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(2, 1456), int16], Tensor[(384), float32], Tensor[(1, 9, 6), bool], Tensor[(8, 5, 8), uint8], Tensor[(1920, 1), int8], Tensor[(624), uint8], Tensor[(40), uint8], Tensor[(11, 15, 15), float32]) {
  %137 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 1456), int16] */, dtype="int16") /* ty=Tensor[(2, 1456), int16] */;
  %138 = cast(meta[relay.Constant][13] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %139 = cast(meta[relay.Constant][12] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %140 = reshape(%137, newshape=[2912]) /* ty=Tensor[(2912), int16] */;
  %141 = reshape(%138, newshape=[]) /* ty=uint16 */;
  %142 = reshape(%139, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %143 = @func_9045(%140, %141, %142) /* ty=(Tensor[(8, 1, 8), float32], Tensor[(1, 9, 6), float32], Tensor[(2912), int16], uint16, Tensor[(504), bool], Tensor[(384), float32], Tensor[(384), float32]) */;
  %144 = %143.1;
  %145 = cast(%144, dtype="float32") /* ty=Tensor[(1, 9, 6), float32] */;
  %146 = cast(meta[relay.Constant][13] /* ty=uint16 */, dtype="float32") /* ty=float32 */;
  %147 = minimum(%145, %146) /* ty=Tensor[(1, 9, 6), float32] */;
  %148 = cast(%147, dtype="bool") /* ty=Tensor[(1, 9, 6), bool] */;
  %149 = cast(meta[relay.Constant][13] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %150 = cast(meta[relay.Constant][13] /* ty=uint16 */, dtype="int8") /* ty=int8 */;
  %151 = cast(%var_11155, dtype="int8") /* ty=Tensor[(1920, 1), int8] */;
  %152 = cast(meta[relay.Constant][14] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %153 = cast(meta[relay.Constant][15] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %154 = reshape(%150, newshape=[]) /* ty=int8 */;
  %155 = reshape(%151, newshape=[1920]) /* ty=Tensor[(1920), int8] */;
  %156 = reshape(%152, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %157 = reshape(%153, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %158 = @func_10033(%154, %155, %156, %157) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(504), bool], Tensor[(36, 14), bool], Tensor[(13, 4), uint8], int8, Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(11, 15, 15), float32]) */;
  %159 = @func_6453() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %160 = @func_7799() /* ty=Tensor[(11, 15, 15), float32] */;
  %161 = @func_6685() /* ty=Tensor[(11, 15, 15), float32] */;
  %162 = equal(%148, %149) /* ty=Tensor[(1, 9, 6), bool] */;
  %163 = %158.7;
  %164 = %159.0;
  (%160, %161, meta[relay.Constant][11] /* ty=Tensor[(2, 1456), int16] */, meta[relay.Constant][12] /* ty=Tensor[(384), float32] */, %162, %163, %var_11155, meta[relay.Constant][14] /* ty=Tensor[(624), uint8] */, meta[relay.Constant][15] /* ty=Tensor[(40), uint8] */, %164)
}

def @func_9408() -> (Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) {
  %165 = @func_6942() /* ty=(Tensor[(12, 10, 14), float32],) */;
  %166 = @func_8368() /* ty=Tensor[(11, 15, 15), float32] */;
  %167 = %165.0;
  (%166, %167)
}

def @func_4365(%var_4339: int8, %var_4340: Tensor[(16, 10, 12), int8], %var_4363: Tensor[(624), uint8]) -> (Tensor[(16, 10, 12), bool], Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(13, 4), uint8], Tensor[(624), uint8]) {
  %168 = cast(%var_4339, dtype="bool") /* ty=bool */;
  %169 = cast(%var_4340, dtype="bool") /* ty=Tensor[(16, 10, 12), bool] */;
  %170 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %171 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 4), uint8] */, dtype="uint8") /* ty=Tensor[(13, 4), uint8] */;
  %172 = cast(meta[relay.Constant][16] /* ty=Tensor[(13, 4), uint8] */, dtype="uint8") /* ty=Tensor[(13, 4), uint8] */;
  %173 = cast(%var_4363, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %174 = reshape(%171, newshape=[4, 13, 1]) /* ty=Tensor[(4, 13, 1), uint8] */;
  %175 = reshape(%172, newshape=[4, 13, 1]) /* ty=Tensor[(4, 13, 1), uint8] */;
  %176 = reshape(%173, newshape=[4, 13, 12]) /* ty=Tensor[(4, 13, 12), uint8] */;
  %177 = @func_3624(%174, %175, %176) /* ty=(Tensor[(4, 13, ?), uint8], Tensor[(4, 13, 12), float64]) */;
  %178 = less(%168, %169) /* ty=Tensor[(16, 10, 12), bool] */;
  %179 = %170.0;
  %180 = %177.0;
  (%178, %179, %180, meta[relay.Constant][16] /* ty=Tensor[(13, 4), uint8] */, %var_4363)
}

def @func_6784() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) {
  %181 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %182 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %183 = %181.0;
  %184 = %182.0;
  (%183, %184)
}

def @func_5943() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %185 = @func_4910() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %186 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %187 = @func_5366() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %188 = %185.0;
  %189 = %186.0;
  %190 = %187.0;
  %191 = @func_4735() /* ty=Tensor[(11, 15, 15), float32] */;
  (%188, %189, %190, %191)
}

def @func_9467() -> (Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %192 = @func_7902() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) */;
  %193 = @func_6951() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %194 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
  %195 = %192.1;
  %196 = %193.0;
  %197 = %194.1;
  (%195, %196, %197)
}

def @func_5621() -> (Tensor[(11, 15, 15), float32],) {
  %198 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %199 = %198.0;
  (%199,)
}

def @func_10130() -> (Tensor[(12, 10, 14), float32],) {
  %200 = @func_7902() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) */;
  %201 = %200.1;
  (%201,)
}

def @func_11452() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) {
  %202 = @func_10451() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %203 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
  %204 = %202.0;
  %205 = %203.0;
  (%204, %205)
}

def @func_4989(%var_4949: Tensor[(2, 8, 2), float64], %var_4973: Tensor[(9, 6), float32]) -> (Tensor[(2, 8, 2), uint8], Tensor[(12, 3, 7), uint32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(9, 6), float32], Tensor[(2, 8, 2), float32]) {
  %206 = cast(%var_4949, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
  %207 = sin(%206) /* ty=Tensor[(2, 8, 2), float64] */;
  %208 = cast(%207, dtype="uint8") /* ty=Tensor[(2, 8, 2), uint8] */;
  %209 = shape_of(%var_4949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%var_4949, dtype="uint8") /* ty=Tensor[(2, 8, 2), uint8] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %212 = minimum(%210, %211) /* ty=Tensor[(2, 8, 2), uint8] */;
  %213 = cast(%207, dtype="uint8") /* ty=Tensor[(2, 8, 2), uint8] */;
  %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%212, dtype="uint8") /* ty=Tensor[(2, 8, 2), uint8] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %217 = cast(meta[relay.Constant][17] /* ty=Tensor[(252), bool] */, dtype="bool") /* ty=Tensor[(252), bool] */;
  %218 = cast(meta[relay.Constant][18] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %219 = cast(%var_4973, dtype="float32") /* ty=Tensor[(9, 6), float32] */;
  %220 = reshape(%217, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), bool] */;
  %221 = reshape(%218, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %222 = reshape(%219, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %223 = @func_1674(%220, %221, %222) /* ty=(Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) */;
  %224 = cast(%212, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %225 = logical_xor(%215, %216) /* ty=Tensor[(2, 8, 2), uint8] */;
  %226 = %223.4;
  %227 = log2(%224) /* ty=Tensor[(2, 8, 2), float32] */;
  (%225, %226, meta[relay.Constant][17] /* ty=Tensor[(252), bool] */, meta[relay.Constant][18] /* ty=Tensor[(504), bool] */, %var_4973, %227)
}

def @func_5666() -> Tensor[(11, 15, 15), float32] {
  %228 = @func_4287() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %228.0
}

def @func_9930() -> Tensor[(11, 15, 15), float32] {
  %229 = @func_7736() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %229.2
}

def @func_5529(%var_5514: Tensor[(1, 110), uint8], %var_5518: Tensor[(4, 110), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(330), uint8], Tensor[(4, 110), float64]) {
  %230 = @func_4287() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %231 = cast(%var_5514, dtype="uint8") /* ty=Tensor[(1, 110), uint8] */;
  %232 = cast(meta[relay.Constant][19] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %233 = reshape(%231, newshape=[11, 1, 10]) /* ty=Tensor[(11, 1, 10), uint8] */;
  %234 = reshape(%232, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), uint8] */;
  %235 = cast(%var_5514, dtype="float64") /* ty=Tensor[(1, 110), float64] */;
  %236 = cast(%var_5518, dtype="float64") /* ty=Tensor[(4, 110), float64] */;
  %237 = divide(%235, %236) /* ty=Tensor[(4, 110), float64] */;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(4, 110), float64] */;
  %239 = %230.0;
  %240 = @func_2342(%233, %234) /* ty=Tensor[(11, 3, 10), uint8] */;
  %241 = log10(%238) /* ty=Tensor[(4, 110), float64] */;
  (%239, %240, meta[relay.Constant][19] /* ty=Tensor[(330), uint8] */, %241)
}

def @func_10890() -> Tensor[(11, 15, 15), float32] {
  @func_7587() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_11340() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %242 = @func_8566() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %243 = @func_9930() /* ty=Tensor[(11, 15, 15), float32] */;
  %244 = %242.0;
  (%243, %244)
}

def @func_7962() -> (Tensor[(11, 15, 15), float32],) {
  %245 = @func_6469() /* ty=Tensor[(11, 15, 15), float32] */;
  (%245,)
}

def @func_9045(%var_9035: Tensor[(2912), int16], %var_9036: uint16, %var_9040: Tensor[(384), float32]) -> (Tensor[(8, 1, 8), float32], Tensor[(1, 9, 6), float32], Tensor[(2912), int16], uint16, Tensor[(504), bool], Tensor[(384), float32], Tensor[(384), float32]) {
  %246 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 1, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 8), float32] */;
  %247 = cast(%var_9035, dtype="int16") /* ty=Tensor[(2912), int16] */;
  %248 = cast(%var_9036, dtype="uint16") /* ty=uint16 */;
  %249 = cast(meta[relay.Constant][21] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %250 = reshape(%247, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), int16] */;
  %251 = reshape(%248, newshape=[]) /* ty=uint16 */;
  %252 = reshape(%249, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %253 = @func_4897(%250, %251, %252) /* ty=(Tensor[(16, 14, 13), int16], Tensor[(16, 14, 13), float64], Tensor[(11, 15, 15), float32], uint16, Tensor[(11, 15, 15), float64], Tensor[(16, 14, 13), float32], Tensor[(1, 9, 6), float32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(12, 9, 6), bool]) */;
  %254 = cast(%var_9040, dtype="float32") /* ty=Tensor[(384), float32] */;
  %255 = reshape(%254, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %256 = @func_7205(%255) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(7, 12, 6), bool], Tensor[(384), float32], Tensor[(504), bool]) */;
  %257 = acos(%246) /* ty=Tensor[(8, 1, 8), float32] */;
  %258 = %253.6;
  %259 = %256.2;
  (%257, %258, %var_9035, %var_9036, meta[relay.Constant][21] /* ty=Tensor[(504), bool] */, %259, %var_9040)
}

def @func_6406() -> Tensor[(11, 15, 15), float32] {
  @func_4158() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_7736() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %260 = @func_4093() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %261 = @func_7562() /* ty=Tensor[(11, 15, 15), float32] */;
  %262 = @func_7347() /* ty=Tensor[(11, 15, 15), float32] */;
  %263 = %260.0;
  %264 = @func_6685() /* ty=Tensor[(11, 15, 15), float32] */;
  (%261, %262, %263, %264)
}

def @func_6942() -> (Tensor[(12, 10, 14), float32],) {
  %265 = cast(meta[relay.Constant][22] /* ty=Tensor[(12, 10, 14), float32] */, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
  %266 = asin(%265) /* ty=Tensor[(12, 10, 14), float32] */;
  (%266,)
}

def @func_10993() -> Tensor[(11, 15, 15), float32] {
  @func_9612() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_5065() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) {
  %267 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %268 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 10, 2), float32] */, dtype="float32") /* ty=Tensor[(11, 10, 2), float32] */;
  %269 = acosh(%268) /* ty=Tensor[(11, 10, 2), float32] */;
  %270 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 10, 2), float32] */, dtype="bool") /* ty=Tensor[(11, 10, 2), bool] */;
  %271 = shape_of(%269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %272 = cast(%269, dtype="bool") /* ty=Tensor[(11, 10, 2), bool] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %274 = %267.0;
  %275 = greater_equal(%272, %273) /* ty=Tensor[(11, 10, 2), bool] */;
  (%274, %275)
}

def @func_6389() -> (Tensor[(11, 15, 15), float32],) {
  %276 = @func_5323() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %277 = %276.0;
  (%277,)
}

def @func_3624(%var_3603: Tensor[(4, 13, 1), uint8], %var_3604: Tensor[(4, 13, 1), uint8], %var_3614: Tensor[(4, 13, 12), uint8]) -> (Tensor[(4, 13, ?), uint8], Tensor[(4, 13, 12), float64]) {
  %278 = cast(%var_3604, dtype="uint8") /* ty=Tensor[(4, 13, 1), uint8] */;
  %279 = shape_of(%var_3603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %280 = cast(%var_3603, dtype="uint8") /* ty=Tensor[(4, 13, 1), uint8] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %282 = cast(%var_3604, dtype="float64") /* ty=Tensor[(4, 13, 1), float64] */;
  %283 = cast(%var_3614, dtype="float64") /* ty=Tensor[(4, 13, 12), float64] */;
  %284 = multiply(%280, %281) /* ty=Tensor[(4, 13, ?), uint8] */;
  %285 = floor_mod(%282, %283) /* ty=Tensor[(4, 13, 12), float64] */;
  (%284, %285)
}

def @func_7305(%var_7288: Tensor[(16, 8, 5), bool], %var_7299: Tensor[(384), float32]) -> (Tensor[(16, 8, 5), bool], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(384), float32], Tensor[(504), bool]) {
  %286 = cast(meta[relay.Constant][24] /* ty=Tensor[(16, 8, 5), bool] */, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %287 = shape_of(%var_7288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%var_7288, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %290 = cast(%var_7299, dtype="float32") /* ty=Tensor[(384), float32] */;
  %291 = cast(meta[relay.Constant][25] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %292 = reshape(%290, newshape=[6, 8, 8]) /* ty=Tensor[(6, 8, 8), float32] */;
  %293 = reshape(%291, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %294 = @func_3388(%292, %293) /* ty=(Tensor[(6, 8, 8), float32], Tensor[(7, 12, 6), bool], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) */;
  %295 = logical_or(%288, %289) /* ty=Tensor[(16, 8, 5), bool] */;
  %296 = @func_6469() /* ty=Tensor[(11, 15, 15), float32] */;
  %297 = %294.2;
  (%295, %296, %297, %var_7299, meta[relay.Constant][25] /* ty=Tensor[(504), bool] */)
}

def @func_5285() -> Tensor[(11, 15, 15), float32] {
  @func_4735() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_8201(%var_8191: Tensor[(504), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(252, 1), bool], Tensor[(504), bool]) {
  %298 = @func_7962() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %299 = cast(meta[relay.Constant][26] /* ty=Tensor[(252, 1), bool] */, dtype="bool") /* ty=Tensor[(252, 1), bool] */;
  %300 = cast(%var_8191, dtype="bool") /* ty=Tensor[(504), bool] */;
  %301 = reshape(%299, newshape=[3, 84]) /* ty=Tensor[(3, 84), bool] */;
  %302 = reshape(%300, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %303 = @func_7061(%301, %302) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(3, 84), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(11, 15, 15), float64]) */;
  %304 = %298.0;
  %305 = %303.4;
  (%304, %305, meta[relay.Constant][26] /* ty=Tensor[(252, 1), bool] */, %var_8191)
}

def @func_8527(%var_8511: int8, %var_8513: Tensor[(624), uint8]) -> (Tensor[(32), float64], Tensor[(4, 13, ?), uint8], int8, Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(11, 15, 15), float32]) {
  %306 = cast(%var_8511, dtype="int8") /* ty=int8 */;
  %307 = cast(meta[relay.Constant][27] /* ty=Tensor[(1920), int8] */, dtype="int8") /* ty=Tensor[(1920), int8] */;
  %308 = cast(%var_8513, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %309 = reshape(%306, newshape=[]) /* ty=int8 */;
  %310 = reshape(%307, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), int8] */;
  %311 = reshape(%308, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %312 = @func_4365(%309, %310, %311) /* ty=(Tensor[(16, 10, 12), bool], Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(13, 4), uint8], Tensor[(624), uint8]) */;
  %313 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
  %314 = @func_6332() /* ty=Tensor[(32), float64] */;
  %315 = %312.2;
  %316 = %313.1;
  (%314, %315, %var_8511, meta[relay.Constant][27] /* ty=Tensor[(1920), int8] */, %var_8513, %316)
}

def @func_4505() -> (Tensor[(11, 15, 15), float32],) {
  %317 = @func_4158() /* ty=Tensor[(11, 15, 15), float32] */;
  (%317,)
}

def @func_10410() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %318 = @func_4910() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %319 = @func_8686() /* ty=Tensor[(11, 15, 15), float32] */;
  %320 = %318.0;
  (%319, %320)
}

def @func_8983() -> (Tensor[(11, 15, 15), float32], Tensor[(640), bool], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(96, 4), float64], Tensor[(11, 15, 15), float64], Tensor[(11, 6, 3), float32]) {
  %321 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %322 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %323 = cast(meta[relay.Constant][28] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
  %324 = cast(meta[relay.Constant][29] /* ty=Tensor[(96, 4), float32] */, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
  %325 = reshape(%323, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), bool] */;
  %326 = reshape(%324, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %327 = @func_7305(%325, %326) /* ty=(Tensor[(16, 8, 5), bool], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(384), float32], Tensor[(504), bool]) */;
  %328 = %327.3;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(384), float64] */;
  %330 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(96, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %331 = cast(meta[relay.Constant][29] /* ty=Tensor[(96, 4), float32] */, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %333 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %334 = cast(meta[relay.Constant][30] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %335 = reshape(%334, newshape=[11, 6, 3]) /* ty=Tensor[(11, 6, 3), float32] */;
  %336 = @func_5223(%335) /* ty=Tensor[(11, 6, 3), float64] */;
  %337 = cast(meta[relay.Constant][30] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %338 = shape_of(%336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %339 = cast(%336, dtype="float32") /* ty=Tensor[(11, 6, 3), float32] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %341 = %321.0;
  %342 = @func_5285() /* ty=Tensor[(11, 15, 15), float32] */;
  %343 = %322.0;
  %344 = multiply(%331, %332) /* ty=Tensor[(96, 4), float64] */;
  %345 = %333.0;
  %346 = mod(%339, %340) /* ty=Tensor[(11, 6, 3), float32] */;
  (%341, meta[relay.Constant][28] /* ty=Tensor[(640), bool] */, %342, %343, %344, %345, %346)
}

def @func_7205(%var_7195: Tensor[(384), float32]) -> (Tensor[(11, 15, 15), float64], Tensor[(7, 12, 6), bool], Tensor[(384), float32], Tensor[(504), bool]) {
  %347 = @func_6784() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */;
  %348 = cast(%var_7195, dtype="float32") /* ty=Tensor[(384), float32] */;
  %349 = cast(meta[relay.Constant][31] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %350 = reshape(%348, newshape=[6, 8, 8]) /* ty=Tensor[(6, 8, 8), float32] */;
  %351 = reshape(%349, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %352 = @func_3388(%350, %351) /* ty=(Tensor[(6, 8, 8), float32], Tensor[(7, 12, 6), bool], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) */;
  %353 = %347.1;
  %354 = %352.4;
  (%353, %354, %var_7195, meta[relay.Constant][31] /* ty=Tensor[(504), bool] */)
}

def @func_4897(%var_4815: Tensor[(16, 14, 13), int16], %var_4848: uint16, %var_4881: Tensor[(504), bool]) -> (Tensor[(16, 14, 13), int16], Tensor[(16, 14, 13), float64], Tensor[(11, 15, 15), float32], uint16, Tensor[(11, 15, 15), float64], Tensor[(16, 14, 13), float32], Tensor[(1, 9, 6), float32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(12, 9, 6), bool]) {
  %355 = cast(%var_4815, dtype="int16") /* ty=Tensor[(16, 14, 13), int16] */;
  %356 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(16, 14, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 14, 13), int16] */, dtype="int16") /* ty=Tensor[(16, 14, 13), int16] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %359 = cast(%var_4815, dtype="float64") /* ty=Tensor[(16, 14, 13), float64] */;
  %360 = tan(%359) /* ty=Tensor[(16, 14, 13), float64] */;
  %361 = cast(%360, dtype="float64") /* ty=Tensor[(16, 14, 13), float64] */;
  %362 = cast(%var_4848, dtype="uint16") /* ty=uint16 */;
  %363 = reshape(%362, newshape=[]) /* ty=uint16 */;
  %364 = @func_4729(%363) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(11, 15, 15), float32], Tensor[(7, 4, 1), bool], uint16, Tensor[(28), uint16]) */;
  %365 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %366 = cast(%360, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
  %367 = cast(meta[relay.Constant][33] /* ty=Tensor[(252), bool] */, dtype="bool") /* ty=Tensor[(252), bool] */;
  %368 = cast(%var_4881, dtype="bool") /* ty=Tensor[(504), bool] */;
  %369 = cast(meta[relay.Constant][34] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %370 = reshape(%367, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), bool] */;
  %371 = reshape(%368, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %372 = reshape(%369, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %373 = @func_1674(%370, %371, %372) /* ty=(Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) */;
  %374 = cast(meta[relay.Constant][34] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %375 = cast(%var_4881, dtype="bool") /* ty=Tensor[(504), bool] */;
  %376 = reshape(%374, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
  %377 = reshape(%375, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %378 = @func_1582(%376, %377) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
  %379 = right_shift(%357, %358) /* ty=Tensor[(16, 14, 13), int16] */;
  %380 = cos(%361) /* ty=Tensor[(16, 14, 13), float64] */;
  %381 = %364.0;
  %382 = %365.0;
  %383 = acos(%366) /* ty=Tensor[(16, 14, 13), float32] */;
  %384 = %373.2;
  %385 = %378.0;
  (%379, %380, %381, %var_4848, %382, %383, %384, meta[relay.Constant][33] /* ty=Tensor[(252), bool] */, %var_4881, meta[relay.Constant][34] /* ty=Tensor[(54), float32] */, %385)
}

def @func_7273(%var_7260: Tensor[(330), int16]) -> (Tensor[(11, 15, 15), float64], Tensor[(3, 8, 13), float64], Tensor[(15, 11, 2), bool], Tensor[(330), int16], Tensor[(312), float64]) {
  %386 = @func_6784() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */;
  %387 = cast(meta[relay.Constant][35] /* ty=Tensor[(312), float64] */, dtype="float64") /* ty=Tensor[(312), float64] */;
  %388 = reshape(%387, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), float64] */;
  %389 = cast(%var_7260, dtype="int16") /* ty=Tensor[(330), int16] */;
  %390 = cast(%var_7260, dtype="int16") /* ty=Tensor[(330), int16] */;
  %391 = reshape(%389, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), int16] */;
  %392 = reshape(%390, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), int16] */;
  %393 = cast(meta[relay.Constant][35] /* ty=Tensor[(312), float64] */, dtype="float64") /* ty=Tensor[(312), float64] */;
  %394 = %386.1;
  %395 = @func_5600(%388) /* ty=Tensor[(3, 8, 13), float64] */;
  %396 = @func_6883(%391, %392) /* ty=Tensor[(15, 11, 2), bool] */;
  %397 = asin(%393) /* ty=Tensor[(312), float64] */;
  (%394, %395, %396, %var_7260, %397)
}

def @func_11098(%var_11072: int32, %var_11083: Tensor[(2475), float32], %var_11084: Tensor[(4, 156), uint8], %var_11085: Tensor[(504), bool], %var_11087: Tensor[(15, 10, 10), int32]) -> (Tensor[(52), uint8], Tensor[(2475), float32], Tensor[(4, 156), uint8], Tensor[(504), bool], Tensor[(15, 10, 10), float64]) {
  %398 = cast(%var_11083, dtype="float32") /* ty=Tensor[(2475), float32] */;
  %399 = cast(%var_11083, dtype="bool") /* ty=Tensor[(2475), bool] */;
  %400 = cast(%var_11084, dtype="uint8") /* ty=Tensor[(4, 156), uint8] */;
  %401 = cast(%var_11085, dtype="bool") /* ty=Tensor[(504), bool] */;
  %402 = reshape(%398, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %403 = reshape(%399, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), bool] */;
  %404 = reshape(%400, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %405 = reshape(%401, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %406 = @func_4029(%402, %403, %404, %405) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */;
  %407 = cast(%var_11072, dtype="int32") /* ty=int32 */;
  %408 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 10, 10), int32] */, dtype="int32") /* ty=Tensor[(15, 10, 10), int32] */;
  %409 = bitwise_xor(%407, %408) /* ty=Tensor[(15, 10, 10), int32] */;
  %410 = cast(%var_11087, dtype="float64") /* ty=Tensor[(15, 10, 10), float64] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%409, dtype="float64") /* ty=Tensor[(15, 10, 10), float64] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %414 = %406.2;
  %415 = divide(%412, %413) /* ty=Tensor[(15, 10, 10), float64] */;
  (%414, %var_11083, %var_11084, %var_11085, %415)
}

def @func_6453() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %416 = @func_6389() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %417 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %418 = %416.0;
  %419 = %417.0;
  (%418, %419)
}

def @func_1674(%var_1626: Tensor[(12, 3, 7), bool], %var_1656: Tensor[(504), bool], %var_1668: Tensor[(54), float32]) -> (Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) {
  %420 = cast(%var_1656, dtype="bool") /* ty=Tensor[(504), bool] */;
  %421 = cast(%var_1656, dtype="bool") /* ty=Tensor[(504), bool] */;
  %422 = reshape(%420, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %423 = reshape(%421, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %424 = @func_411(%422, %423) /* ty=(Tensor[(7, 12, 6), bool],) */;
  %425 = cast(%var_1668, dtype="float32") /* ty=Tensor[(54), float32] */;
  %426 = cast(%var_1656, dtype="bool") /* ty=Tensor[(504), bool] */;
  %427 = reshape(%425, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
  %428 = reshape(%426, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %429 = @func_1582(%427, %428) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
  %430 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %431 = cast(%var_1626, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %432 = logical_and(%430, %431) /* ty=Tensor[(12, 3, 7), bool] */;
  %433 = cast(%432, dtype="uint8") /* ty=Tensor[(12, 3, 7), uint8] */;
  %434 = shape_of(%var_1626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%var_1626, dtype="uint8") /* ty=Tensor[(12, 3, 7), uint8] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %437 = logical_xor(%435, %436) /* ty=Tensor[(12, 3, 7), uint8] */;
  %438 = cast(%437, dtype="uint32") /* ty=Tensor[(12, 3, 7), uint32] */;
  %439 = shape_of(%432, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%432, dtype="uint32") /* ty=Tensor[(12, 3, 7), uint32] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %442 = %424.0;
  %443 = %429.4;
  %444 = multiply(%440, %441) /* ty=Tensor[(12, 3, 7), uint32] */;
  (%442, %var_1656, %443, %var_1668, %444)
}

def @func_10708(%var_10636: Tensor[(2, 8, 6), float32], %var_10644: Tensor[(40), uint8]) -> (Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(2, 8, 6), bool], Tensor[(2, 8, 6), float64]) {
  %445 = cast(%var_10644, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %446 = reshape(%445, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %447 = @func_5389(%446) /* ty=(Tensor[(8, 5, 8), uint8],) */;
  %448 = cast(%var_10636, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
  %449 = log(%448) /* ty=Tensor[(2, 8, 6), float32] */;
  %450 = cast(%449, dtype="bool") /* ty=Tensor[(2, 8, 6), bool] */;
  %451 = shape_of(%var_10636, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%var_10636, dtype="bool") /* ty=Tensor[(2, 8, 6), bool] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %454 = cast(%449, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
  %455 = log10(%454) /* ty=Tensor[(2, 8, 6), float64] */;
  %456 = cast(%455, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
  %457 = %447.0;
  %458 = greater(%452, %453) /* ty=Tensor[(2, 8, 6), bool] */;
  %459 = sin(%456) /* ty=Tensor[(2, 8, 6), float64] */;
  (%457, %var_10644, %458, %459)
}

def @func_11393() -> Tensor[(11, 15, 15), float32] {
  %460 = @func_7736() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %460.3
}

def @func_3388(%var_3360: Tensor[(6, 8, 8), float32], %var_3375: Tensor[(504), bool]) -> (Tensor[(6, 8, 8), float32], Tensor[(7, 12, 6), bool], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) {
  %461 = cast(%var_3360, dtype="float32") /* ty=Tensor[(6, 8, 8), float32] */;
  %462 = cast(meta[relay.Constant][37] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %463 = cast(%var_3375, dtype="bool") /* ty=Tensor[(504), bool] */;
  %464 = reshape(%462, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
  %465 = reshape(%463, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %466 = @func_1582(%464, %465) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
  %467 = %466.2;
  %468 = cast(%467, dtype="bool") /* ty=Tensor[(7, 12, 6), bool] */;
  %469 = cast(%var_3375, dtype="bool") /* ty=Tensor[(504), bool] */;
  %470 = reshape(%468, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %471 = reshape(%469, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %472 = @func_411(%470, %471) /* ty=(Tensor[(7, 12, 6), bool],) */;
  %473 = cosh(%461) /* ty=Tensor[(6, 8, 8), float32] */;
  %474 = %472.0;
  (%473, %467, meta[relay.Constant][37] /* ty=Tensor[(54), float32] */, %var_3375, %474)
}

def @func_9154() -> Tensor[(11, 15, 15), float32] {
  @func_4158() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_9739(%var_9689: Tensor[(576), float32], %var_9710: Tensor[(252), bool], %var_9711: Tensor[(330), uint8], %var_9713: Tensor[(54), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 6, 3), float32], Tensor[(8, 6, 4), float64], Tensor[(576), float32], Tensor[(192), float32], Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(330), uint8], Tensor[(504), bool], Tensor[(54), float32], Tensor[(11, 15, 15), float32]) {
  %475 = @func_8983() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(640), bool], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(96, 4), float64], Tensor[(11, 15, 15), float64], Tensor[(11, 6, 3), float32]) */;
  %476 = cast(%var_9689, dtype="float32") /* ty=Tensor[(576), float32] */;
  %477 = cast(%var_9689, dtype="float32") /* ty=Tensor[(576), float32] */;
  %478 = cast(meta[relay.Constant][38] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %479 = reshape(%476, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), float32] */;
  %480 = reshape(%477, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), float32] */;
  %481 = reshape(%478, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %482 = @func_8148(%479, %480, %481) /* ty=(Tensor[(8, 6, 12), float32], Tensor[(8, 6, 4), float64], Tensor[(192), float32]) */;
  %483 = cast(%var_9710, dtype="bool") /* ty=Tensor[(252), bool] */;
  %484 = cast(%var_9711, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %485 = cast(meta[relay.Constant][39] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %486 = cast(%var_9713, dtype="float32") /* ty=Tensor[(54), float32] */;
  %487 = reshape(%483, newshape=[252]) /* ty=Tensor[(252), bool] */;
  %488 = reshape(%484, newshape=[330]) /* ty=Tensor[(330), uint8] */;
  %489 = reshape(%485, newshape=[12, 42]) /* ty=Tensor[(12, 42), bool] */;
  %490 = reshape(%486, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %491 = @func_7143(%487, %488, %489, %490) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(32), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(12, 42), bool], Tensor[(54), float32]) */;
  %492 = @func_9154() /* ty=Tensor[(11, 15, 15), float32] */;
  %493 = %475.6;
  %494 = %482.1;
  %495 = %491.0;
  %496 = @func_8368() /* ty=Tensor[(11, 15, 15), float32] */;
  (%492, %493, %494, %var_9689, meta[relay.Constant][38] /* ty=Tensor[(192), float32] */, %495, %var_9710, %var_9711, meta[relay.Constant][39] /* ty=Tensor[(504), bool] */, %var_9713, %496)
}

def @func_9372(%var_9292: Tensor[(2, 192), float32], %var_9299: Tensor[(624), uint8], %var_9300: Tensor[(6, 84), bool], %var_9321: int64, %var_9322: Tensor[(9), int64]) -> (Tensor[(11, 15, 15), float32], Tensor[(384), float32], Tensor[(320, 2), bool], Tensor[(2, 192), float32], Tensor[(624), uint8], Tensor[(624), uint8], Tensor[(6, 84), bool], Tensor[(12, 3, 7), uint32], Tensor[(32), float64], Tensor[(54), float32], Tensor[(1, 9), int64], int64, Tensor[(9), int64]) {
  %497 = cast(meta[relay.Constant][40] /* ty=Tensor[(320, 2), bool] */, dtype="bool") /* ty=Tensor[(320, 2), bool] */;
  %498 = cast(%var_9292, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %499 = reshape(%497, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), bool] */;
  %500 = reshape(%498, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %501 = @func_7305(%499, %500) /* ty=(Tensor[(16, 8, 5), bool], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(384), float32], Tensor[(504), bool]) */;
  %502 = @func_7183() /* ty=Tensor[(11, 15, 15), float32] */;
  %503 = cast(%502, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %504 = cast(%502, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %505 = cast(%var_9299, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %506 = cast(%var_9300, dtype="bool") /* ty=Tensor[(6, 84), bool] */;
  %507 = reshape(%503, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %508 = reshape(%504, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), bool] */;
  %509 = reshape(%505, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %510 = reshape(%506, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %511 = @func_4029(%507, %508, %509, %510) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */;
  %512 = cast(meta[relay.Constant][41] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %513 = cast(meta[relay.Constant][42] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %514 = reshape(%512, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), float64] */;
  %515 = reshape(%513, newshape=[9, 6]) /* ty=Tensor[(9, 6), float32] */;
  %516 = @func_4989(%514, %515) /* ty=(Tensor[(2, 8, 2), uint8], Tensor[(12, 3, 7), uint32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(9, 6), float32], Tensor[(2, 8, 2), float32]) */;
  %517 = cast(%var_9321, dtype="int64") /* ty=int64 */;
  %518 = cast(%var_9322, dtype="int64") /* ty=Tensor[(9), int64] */;
  %519 = reshape(%517, newshape=[]) /* ty=int64 */;
  %520 = reshape(%518, newshape=[1, 9]) /* ty=Tensor[(1, 9), int64] */;
  %521 = %501.3;
  %522 = %511.3;
  %523 = %516.1;
  %524 = @func_7995(%519, %520) /* ty=Tensor[(1, 9), int64] */;
  (%502, %521, meta[relay.Constant][40] /* ty=Tensor[(320, 2), bool] */, %var_9292, %522, %var_9299, %var_9300, %523, meta[relay.Constant][41] /* ty=Tensor[(32), float64] */, meta[relay.Constant][42] /* ty=Tensor[(54), float32] */, %524, %var_9321, %var_9322)
}

def @func_3785(%var_3762: Tensor[(8, 6, 4), float32], %var_3771: Tensor[(8, 6, 4), float32]) -> (Tensor[(8, 6, 4), float64],) {
  %525 = cast(%var_3762, dtype="float32") /* ty=Tensor[(8, 6, 4), float32] */;
  %526 = asin(%525) /* ty=Tensor[(8, 6, 4), float32] */;
  %527 = cast(%var_3771, dtype="float64") /* ty=Tensor[(8, 6, 4), float64] */;
  %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%526, dtype="float64") /* ty=Tensor[(8, 6, 4), float64] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %531 = maximum(%529, %530) /* ty=Tensor[(8, 6, 4), float64] */;
  (%531,)
}

def @func_6193(%var_6149: Tensor[(54), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(504), bool], Tensor[(54), float32], Tensor[(504), bool], Tensor[(11, 15, 15), float64], Tensor[(504), bool], Tensor[(4, 728), int16], uint16, Tensor[(7, 12, 6), bool]) {
  %532 = @func_5621() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %533 = cast(%var_6149, dtype="float32") /* ty=Tensor[(54), float32] */;
  %534 = cast(meta[relay.Constant][43] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %535 = reshape(%533, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
  %536 = reshape(%534, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %537 = @func_1582(%535, %536) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
  %538 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %539 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 728), int16] */, dtype="int16") /* ty=Tensor[(4, 728), int16] */;
  %540 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %541 = %537.3;
  %542 = cast(%541, dtype="bool") /* ty=Tensor[(504), bool] */;
  %543 = reshape(%539, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), int16] */;
  %544 = reshape(%540, newshape=[]) /* ty=uint16 */;
  %545 = reshape(%542, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %546 = @func_4897(%543, %544, %545) /* ty=(Tensor[(16, 14, 13), int16], Tensor[(16, 14, 13), float64], Tensor[(11, 15, 15), float32], uint16, Tensor[(11, 15, 15), float64], Tensor[(16, 14, 13), float32], Tensor[(1, 9, 6), float32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(12, 9, 6), bool]) */;
  %547 = %532.0;
  %548 = cast(%547, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %549 = reshape(%548, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %550 = @func_5838(%549) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) */;
  %551 = %538.0;
  %552 = %546.8;
  %553 = %550.4;
  (%547, %541, %var_6149, meta[relay.Constant][43] /* ty=Tensor[(504), bool] */, %551, %552, meta[relay.Constant][44] /* ty=Tensor[(4, 728), int16] */, meta[relay.Constant][45] /* ty=uint16 */, %553)
}

def @func_10111() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %554 = @func_9612() /* ty=Tensor[(11, 15, 15), float32] */;
  %555 = @func_6406() /* ty=Tensor[(11, 15, 15), float32] */;
  (%554, %555)
}

def @func_6951() -> (Tensor[(11, 15, 15), float32],) {
  %556 = @func_5943() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %557 = %556.1;
  (%557,)
}

def @func_9494() -> Tensor[(11, 15, 15), float32] {
  %558 = @func_3924() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %558.0
}

def @func_9122() -> Tensor[(11, 15, 15), float32] {
  %559 = @func_4158() /* ty=Tensor[(11, 15, 15), float32] */;
  %560 = cast(%559, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  sinh(%560) /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_3932() -> Tensor[(11, 15, 15), float32] {
  %561 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %561.0
}

def @func_4287() -> (Tensor[(11, 15, 15), float32],) {
  %562 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %563 = %562.0;
  %564 = cast(%563, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %565 = sigmoid(%564) /* ty=Tensor[(11, 15, 15), float32] */;
  (%565,)
}

def @func_8299() -> Tensor[(11, 15, 15), float32] {
  %566 = @func_6453() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %566.1
}

def @func_10936(%var_10908: uint16, %var_10909: Tensor[(624), uint8]) -> (Tensor[(11, 15, 15), float32], uint16, Tensor[(624), uint8], Tensor[(7, 12, 6), float32], Tensor[(7, 12, 6), float32], Tensor[(11, 15, 15), float32]) {
  %567 = cast(%var_10908, dtype="uint16") /* ty=uint16 */;
  %568 = cast(%var_10909, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %569 = reshape(%567, newshape=[]) /* ty=uint16 */;
  %570 = reshape(%568, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %571 = @func_6600(%569, %570) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool], Tensor[(11, 6, 3), float64], Tensor[(198), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(100), uint32], Tensor[(330), uint8], Tensor[(11, 15, 15), float32], uint16, uint16, Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool], Tensor[(?, 13, 3), uint8], Tensor[(?, 13, 3), bool], Tensor[(?, 13, 3), float64]) */;
  %572 = %571.11;
  %573 = cast(%572, dtype="float32") /* ty=Tensor[(7, 12, 6), float32] */;
  %574 = cast(%572, dtype="float32") /* ty=Tensor[(7, 12, 6), float32] */;
  %575 = @func_9416() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %576 = @func_7587() /* ty=Tensor[(11, 15, 15), float32] */;
  %577 = sinh(%573) /* ty=Tensor[(7, 12, 6), float32] */;
  %578 = tan(%574) /* ty=Tensor[(7, 12, 6), float32] */;
  %579 = %575.0;
  (%576, %var_10908, %var_10909, %577, %578, %579)
}

def @func_5600(%var_5584: Tensor[(3, 8, 13), float64]) -> Tensor[(3, 8, 13), float64] {
  %580 = cast(%var_5584, dtype="float64") /* ty=Tensor[(3, 8, 13), float64] */;
  sinh(%580) /* ty=Tensor[(3, 8, 13), float64] */
}

def @func_6600(%var_6563: uint16, %var_6573: Tensor[(624), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool], Tensor[(11, 6, 3), float64], Tensor[(198), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(100), uint32], Tensor[(330), uint8], Tensor[(11, 15, 15), float32], uint16, uint16, Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool], Tensor[(?, 13, 3), uint8], Tensor[(?, 13, 3), bool], Tensor[(?, 13, 3), float64]) {
  %581 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
  %582 = cast(meta[relay.Constant][46] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
  %583 = reshape(%582, newshape=[11, 6, 3]) /* ty=Tensor[(11, 6, 3), float32] */;
  %584 = @func_6453() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %585 = cast(meta[relay.Constant][47] /* ty=Tensor[(100), uint32] */, dtype="uint32") /* ty=Tensor[(100), uint32] */;
  %586 = cast(meta[relay.Constant][47] /* ty=Tensor[(100), uint32] */, dtype="uint32") /* ty=Tensor[(100), uint32] */;
  %587 = cast(meta[relay.Constant][48] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %588 = cast(meta[relay.Constant][47] /* ty=Tensor[(100), uint32] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %589 = reshape(%585, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), uint32] */;
  %590 = reshape(%586, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), uint32] */;
  %591 = reshape(%587, newshape=[330]) /* ty=Tensor[(330), uint8] */;
  %592 = reshape(%588, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), float64] */;
  %593 = @func_2522(%589, %590, %591, %592) /* ty=(Tensor[(2, 5, 10), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(2, 5, 10), float32]) */;
  %594 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
  %595 = cast(%var_6563, dtype="uint16") /* ty=uint16 */;
  %596 = reshape(%595, newshape=[]) /* ty=uint16 */;
  %597 = @func_4729(%596) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(11, 15, 15), float32], Tensor[(7, 4, 1), bool], uint16, Tensor[(28), uint16]) */;
  %598 = %581.1;
  %599 = cast(%598, dtype="bool") /* ty=Tensor[(11, 10, 2), bool] */;
  %600 = cast(%var_6573, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %601 = cast(meta[relay.Constant][49] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %602 = reshape(%599, newshape=[11, 10, 2]) /* ty=Tensor[(11, 10, 2), bool] */;
  %603 = reshape(%600, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %604 = reshape(%601, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %605 = @func_5435(%602, %603, %604) /* ty=(Tensor[(11, 10, 2), float32], Tensor[(11, 10, 2), uint16], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool]) */;
  %606 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 13, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
  %607 = cos(%606) /* ty=Tensor[(1, 13, 3), float64] */;
  %608 = cast(%607, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
  %609 = exp(%608) /* ty=Tensor[(1, 13, 3), float64] */;
  %610 = cast(%609, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
  %611 = sinh(%610) /* ty=Tensor[(1, 13, 3), float64] */;
  %612 = cast(%609, dtype="float32") /* ty=Tensor[(1, 13, 3), float32] */;
  %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%611, dtype="float32") /* ty=Tensor[(1, 13, 3), float32] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %616 = multiply(%614, %615) /* ty=Tensor[(?, 13, 3), float32] */;
  %617 = cast(%616, dtype="bool") /* ty=Tensor[(?, 13, 3), bool] */;
  %618 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%607, dtype="bool") /* ty=Tensor[(1, 13, 3), bool] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %621 = greater_equal(%619, %620) /* ty=Tensor[(?, 13, 3), bool] */;
  %622 = cast(%611, dtype="uint8") /* ty=Tensor[(1, 13, 3), uint8] */;
  %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%621, dtype="uint8") /* ty=Tensor[(?, 13, 3), uint8] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %626 = cast(%616, dtype="bool") /* ty=Tensor[(?, 13, 3), bool] */;
  %627 = shape_of(%611, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(%611, dtype="bool") /* ty=Tensor[(1, 13, 3), bool] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %630 = cast(%616, dtype="float64") /* ty=Tensor[(?, 13, 3), float64] */;
  %631 = @func_5666() /* ty=Tensor[(11, 15, 15), float32] */;
  %632 = @func_5223(%583) /* ty=Tensor[(11, 6, 3), float64] */;
  %633 = %584.1;
  %634 = %593.1;
  %635 = %594.0;
  %636 = %597.6;
  %637 = %605.3;
  %638 = bitwise_or(%624, %625) /* ty=Tensor[(?, 13, 3), uint8] */;
  %639 = logical_or(%628, %629) /* ty=Tensor[(?, 13, 3), bool] */;
  %640 = acosh(%630) /* ty=Tensor[(?, 13, 3), float64] */;
  (%631, %598, %632, meta[relay.Constant][46] /* ty=Tensor[(198), float32] */, %633, %634, meta[relay.Constant][47] /* ty=Tensor[(100), uint32] */, meta[relay.Constant][48] /* ty=Tensor[(330), uint8] */, %635, %636, %var_6563, %637, %var_6573, meta[relay.Constant][49] /* ty=Tensor[(504), bool] */, %638, %639, %640)
}

def @func_10271() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), float32], Tensor[(1920), int8], int8, Tensor[(624), uint8], Tensor[(11, 15, 15), float32]) {
  %641 = @func_8566() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %642 = @func_5683() /* ty=(Tensor[(11, 10, 2), bool],) */;
  %643 = %642.0;
  %644 = cast(%643, dtype="float32") /* ty=Tensor[(11, 10, 2), float32] */;
  %645 = cast(meta[relay.Constant][51] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %646 = cast(meta[relay.Constant][52] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %647 = reshape(%645, newshape=[]) /* ty=int8 */;
  %648 = reshape(%646, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %649 = @func_8527(%647, %648) /* ty=(Tensor[(32), float64], Tensor[(4, 13, ?), uint8], int8, Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(11, 15, 15), float32]) */;
  %650 = %641.0;
  %651 = sqrt(%644) /* ty=Tensor[(11, 10, 2), float32] */;
  %652 = %649.3;
  %653 = @func_6685() /* ty=Tensor[(11, 15, 15), float32] */;
  (%650, %651, %652, meta[relay.Constant][51] /* ty=int8 */, meta[relay.Constant][52] /* ty=Tensor[(624), uint8] */, %653)
}

def @func_6863(%var_6817: Tensor[(1, 6), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(?, 6), int8], Tensor[(3, 2, ?), float32]) {
  %654 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %655 = cast(%var_6817, dtype="float32") /* ty=Tensor[(1, 6), float32] */;
  %656 = reshape(%655, newshape=[3, 2, 1]) /* ty=Tensor[(3, 2, 1), float32] */;
  %657 = @func_5448(%656) /* ty=Tensor[(3, 2, 1), float32] */;
  %658 = cast(%657, dtype="int8") /* ty=Tensor[(3, 2, 1), int8] */;
  %659 = shape_of(%var_6817, dtype="int32") /* ty=Tensor[(2), int32] */;
  %660 = cast(%var_6817, dtype="int8") /* ty=Tensor[(1, 6), int8] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %662 = cast(%var_6817, dtype="float32") /* ty=Tensor[(1, 6), float32] */;
  %663 = shape_of(%657, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(%657, dtype="float32") /* ty=Tensor[(3, 2, 1), float32] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %666 = %654.0;
  %667 = bitwise_or(%660, %661) /* ty=Tensor[(?, 6), int8] */;
  %668 = divide(%664, %665) /* ty=Tensor[(3, 2, ?), float32] */;
  (%666, %667, %668)
}

def @func_6469() -> Tensor[(11, 15, 15), float32] {
  %669 = @func_6389() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %669.0
}

def @func_6332() -> Tensor[(32), float64] {
  %670 = @func_5710() /* ty=(Tensor[(11, 10, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(32), float64], Tensor[(54), float32]) */;
  %670.2
}

def @func_5683() -> (Tensor[(11, 10, 2), bool],) {
  %671 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
  %672 = %671.1;
  (%672,)
}

def @func_7347() -> Tensor[(11, 15, 15), float32] {
  @func_6469() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_4735() -> Tensor[(11, 15, 15), float32] {
  %673 = @func_4093() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %673.1
}

def @func_8566() -> (Tensor[(11, 15, 15), float32],) {
  %674 = @func_8368() /* ty=Tensor[(11, 15, 15), float32] */;
  (%674,)
}

def @func_5569() -> (Tensor[(11, 15, 15), float32],) {
  %675 = @func_5285() /* ty=Tensor[(11, 15, 15), float32] */;
  (%675,)
}

def @func_2522(%var_2471: Tensor[(2, 5, 10), uint32], %var_2472: Tensor[(2, 5, 10), uint32], %var_2513: Tensor[(330), uint8], %var_2515: Tensor[(2, 5, 10), float64]) -> (Tensor[(2, 5, 10), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(2, 5, 10), float32]) {
  %676 = cast(%var_2472, dtype="bool") /* ty=Tensor[(2, 5, 10), bool] */;
  %677 = shape_of(%var_2471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%var_2471, dtype="bool") /* ty=Tensor[(2, 5, 10), bool] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %680 = greater(%678, %679) /* ty=Tensor[(2, 5, 10), bool] */;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
  %682 = rsqrt(%681) /* ty=Tensor[(2, 5, 10), float64] */;
  %683 = cast(%682, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
  %684 = cast(meta[relay.Constant][53] /* ty=Tensor[(110), uint8] */, dtype="uint8") /* ty=Tensor[(110), uint8] */;
  %685 = cast(%var_2513, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %686 = reshape(%684, newshape=[11, 1, 10]) /* ty=Tensor[(11, 1, 10), uint8] */;
  %687 = reshape(%685, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), uint8] */;
  %688 = cast(%var_2515, dtype="float32") /* ty=Tensor[(2, 5, 10), float32] */;
  %689 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%682, dtype="float32") /* ty=Tensor[(2, 5, 10), float32] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %692 = asinh(%683) /* ty=Tensor[(2, 5, 10), float64] */;
  %693 = @func_2342(%686, %687) /* ty=Tensor[(11, 3, 10), uint8] */;
  %694 = mod(%690, %691) /* ty=Tensor[(2, 5, 10), float32] */;
  (%692, %693, meta[relay.Constant][53] /* ty=Tensor[(110), uint8] */, %var_2513, %694)
}

def @func_10169() -> (Tensor[(32), float64], Tensor[(11, 15, 15), float32]) {
  %695 = @func_6332() /* ty=Tensor[(32), float64] */;
  %696 = @func_9216() /* ty=Tensor[(11, 15, 15), float32] */;
  (%695, %696)
}

def @func_5389(%var_5380: Tensor[(1, 5, 8), uint8]) -> (Tensor[(8, 5, 8), uint8],) {
  %697 = cast(%var_5380, dtype="uint8") /* ty=Tensor[(1, 5, 8), uint8] */;
  %698 = cast(meta[relay.Constant][54] /* ty=Tensor[(8, 5, 8), uint8] */, dtype="uint8") /* ty=Tensor[(8, 5, 8), uint8] */;
  %699 = logical_xor(%697, %698) /* ty=Tensor[(8, 5, 8), uint8] */;
  (%699,)
}

def @func_10536() -> Tensor[(11, 15, 15), float32] {
  %700 = @func_7736() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %700.3
}

def @func_4729(%var_4726: uint16) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(11, 15, 15), float32], Tensor[(7, 4, 1), bool], uint16, Tensor[(28), uint16]) {
  %701 = @func_3924() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %702 = @func_4701() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %703 = cast(meta[relay.Constant][55] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %704 = cast(meta[relay.Constant][55] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %705 = reshape(%703, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %706 = reshape(%704, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %707 = @func_411(%705, %706) /* ty=(Tensor[(7, 12, 6), bool],) */;
  %708 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %709 = cast(%var_4726, dtype="uint16") /* ty=uint16 */;
  %710 = cast(meta[relay.Constant][56] /* ty=Tensor[(28), uint16] */, dtype="uint16") /* ty=Tensor[(28), uint16] */;
  %711 = reshape(%709, newshape=[]) /* ty=uint16 */;
  %712 = reshape(%710, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), uint16] */;
  %713 = @func_2803(%711, %712) /* ty=(Tensor[(7, 4, 1), bool], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */;
  %714 = %701.0;
  %715 = %702.0;
  %716 = %707.0;
  %717 = %708.0;
  %718 = %713.0;
  (%714, %715, %716, meta[relay.Constant][55] /* ty=Tensor[(504), bool] */, %717, %718, %var_4726, meta[relay.Constant][56] /* ty=Tensor[(28), uint16] */)
}

def @func_5872() -> (Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) {
  %719 = @func_5182() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %720 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %721 = %719.0;
  %722 = %720.0;
  (%721, %722)
}

def @func_5435(%var_5403: Tensor[(11, 10, 2), bool], %var_5431: Tensor[(624), uint8], %var_5432: Tensor[(504), bool]) -> (Tensor[(11, 10, 2), float32], Tensor[(11, 10, 2), uint16], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool]) {
  %723 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
  %724 = %723.1;
  %725 = cast(%var_5403, dtype="float32") /* ty=Tensor[(11, 10, 2), float32] */;
  %726 = shape_of(%724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%724, dtype="float32") /* ty=Tensor[(11, 10, 2), float32] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %729 = cast(meta[relay.Constant][57] /* ty=Tensor[(11, 10, 2), bool] */, dtype="uint16") /* ty=Tensor[(11, 10, 2), uint16] */;
  %730 = shape_of(%724, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%724, dtype="uint16") /* ty=Tensor[(11, 10, 2), uint16] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %733 = @func_4093() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %734 = %733.0;
  %735 = cast(%734, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %736 = cast(%734, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %737 = cast(%var_5431, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %738 = cast(%var_5432, dtype="bool") /* ty=Tensor[(504), bool] */;
  %739 = reshape(%735, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %740 = reshape(%736, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), bool] */;
  %741 = reshape(%737, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %742 = reshape(%738, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %743 = @func_4029(%739, %740, %741, %742) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */;
  %744 = floor_mod(%727, %728) /* ty=Tensor[(11, 10, 2), float32] */;
  %745 = right_shift(%731, %732) /* ty=Tensor[(11, 10, 2), uint16] */;
  %746 = %743.4;
  (%744, %745, %734, %746, %var_5431, %var_5432)
}

def @func_7010(%var_6980: Tensor[(14, 5, 14), float64]) -> Tensor[(14, 5, 14), uint32] {
  %747 = cast(%var_6980, dtype="float64") /* ty=Tensor[(14, 5, 14), float64] */;
  %748 = atan(%747) /* ty=Tensor[(14, 5, 14), float64] */;
  %749 = cast(%var_6980, dtype="uint32") /* ty=Tensor[(14, 5, 14), uint32] */;
  %750 = shape_of(%748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(%748, dtype="uint32") /* ty=Tensor[(14, 5, 14), uint32] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%751, %752) /* ty=Tensor[(14, 5, 14), uint32] */
}

def @func_7061(%var_7051: Tensor[(3, 84), bool], %var_7052: Tensor[(504), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(3, 84), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(11, 15, 15), float64]) {
  %753 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %754 = cast(%var_7051, dtype="bool") /* ty=Tensor[(3, 84), bool] */;
  %755 = cast(%var_7052, dtype="bool") /* ty=Tensor[(504), bool] */;
  %756 = cast(meta[relay.Constant][58] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %757 = reshape(%754, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), bool] */;
  %758 = reshape(%755, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %759 = reshape(%756, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %760 = @func_1674(%757, %758, %759) /* ty=(Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) */;
  %761 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
  %762 = %753.0;
  %763 = %760.3;
  %764 = %761.0;
  (%762, %763, %var_7051, %var_7052, meta[relay.Constant][58] /* ty=Tensor[(54), float32] */, %764)
}

def @func_6062(%var_5961: Tensor[(54), float32], %var_5962: Tensor[(504), bool], %var_6019: Tensor[(110), uint8], %var_6020: Tensor[(330), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(1, 252), bool], Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8]) {
  %765 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
  %766 = cast(%var_5961, dtype="float32") /* ty=Tensor[(54), float32] */;
  %767 = cast(%var_5962, dtype="bool") /* ty=Tensor[(504), bool] */;
  %768 = reshape(%766, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %769 = reshape(%767, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %770 = @func_5096(%768, %769) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool]) */;
  %771 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
  %772 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %773 = cast(%var_6019, dtype="uint8") /* ty=Tensor[(110), uint8] */;
  %774 = cast(%var_6020, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %775 = reshape(%773, newshape=[11, 1, 10]) /* ty=Tensor[(11, 1, 10), uint8] */;
  %776 = reshape(%774, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), uint8] */;
  %777 = cast(%var_5961, dtype="float32") /* ty=Tensor[(54), float32] */;
  %778 = cast(%var_5962, dtype="bool") /* ty=Tensor[(504), bool] */;
  %779 = reshape(%777, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
  %780 = reshape(%778, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %781 = @func_1582(%779, %780) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
  %782 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 252), bool] */, dtype="bool") /* ty=Tensor[(1, 252), bool] */;
  %783 = cast(%var_5962, dtype="bool") /* ty=Tensor[(504), bool] */;
  %784 = cast(%var_5961, dtype="float32") /* ty=Tensor[(54), float32] */;
  %785 = reshape(%782, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), bool] */;
  %786 = reshape(%783, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %787 = reshape(%784, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %788 = @func_1674(%785, %786, %787) /* ty=(Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) */;
  %789 = %788.0;
  %790 = cast(%789, dtype="float32") /* ty=Tensor[(7, 12, 6), float32] */;
  %791 = @func_5643() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %792 = cast(%var_6019, dtype="uint8") /* ty=Tensor[(110), uint8] */;
  %793 = cast(%var_6020, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %794 = reshape(%792, newshape=[11, 1, 10]) /* ty=Tensor[(11, 1, 10), uint8] */;
  %795 = reshape(%793, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), uint8] */;
  %796 = %765.1;
  %797 = %770.0;
  %798 = %771.0;
  %799 = %772.0;
  %800 = @func_2342(%775, %776) /* ty=Tensor[(11, 3, 10), uint8] */;
  %801 = %781.1;
  %802 = cosh(%790) /* ty=Tensor[(7, 12, 6), float32] */;
  %803 = %791.0;
  %804 = @func_2342(%794, %795) /* ty=Tensor[(11, 3, 10), uint8] */;
  (%796, %797, %var_5961, %var_5962, meta[relay.Constant][59] /* ty=Tensor[(1, 252), bool] */, %798, %799, %800, %var_6019, %var_6020, %801, %802, %803, %804)
}

def @func_8648() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool], Tensor[(11, 15, 15), float32]) {
  %805 = @func_6951() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %806 = @func_6389() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %807 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
  %808 = @func_8270() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(504), bool]) */;
  %809 = %805.0;
  %810 = %806.0;
  %811 = %807.1;
  %812 = %808.0;
  (%809, %810, %811, %812)
}

def @func_11031() -> (Tensor[(11, 15, 15), float32],) {
  %813 = @func_5323() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %814 = %813.0;
  (%814,)
}

def @func_5182() -> (Tensor[(11, 15, 15), float64],) {
  %815 = @func_4287() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %816 = %815.0;
  %817 = cast(%816, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %818 = rsqrt(%817) /* ty=Tensor[(11, 15, 15), float64] */;
  (%818,)
}

def @func_10186() -> (Tensor[(11, 15, 15), float32],) {
  %819 = @func_5323() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %820 = %819.0;
  (%820,)
}

def @func_10324() -> (Tensor[(11, 15, 15), bool], Tensor[(11, 15, 15), float64]) {
  %821 = @func_8877() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %822 = %821.0;
  %823 = cast(meta[relay.Constant][60] /* ty=Tensor[(11, 15, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%822, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %827 = @func_6784() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */;
  %828 = equal(%825, %826) /* ty=Tensor[(11, 15, 15), bool] */;
  %829 = %827.1;
  (%828, %829)
}

def @func_9612() -> Tensor[(11, 15, 15), float32] {
  %830 = @func_7736() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %830.2
}

def @func_4093() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %831 = @func_3924() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %832 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %833 = %831.0;
  %834 = %832.0;
  (%833, %834)
}

def @func_10451() -> (Tensor[(11, 15, 15), float32],) {
  %835 = @func_7962() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %836 = %835.0;
  (%836,)
}

def @func_4910() -> (Tensor[(11, 15, 15), float32],) {
  %837 = @func_3924() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %838 = %837.0;
  (%838,)
}

def @func_10033(%var_10022: int8, %var_10023: Tensor[(1920), int8], %var_10024: Tensor[(624), uint8], %var_10028: Tensor[(40), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(504), bool], Tensor[(36, 14), bool], Tensor[(13, 4), uint8], int8, Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(11, 15, 15), float32]) {
  %839 = cast(meta[relay.Constant][61] /* ty=Tensor[(36, 14), bool] */, dtype="bool") /* ty=Tensor[(36, 14), bool] */;
  %840 = reshape(%839, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %841 = @func_8201(%840) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(252, 1), bool], Tensor[(504), bool]) */;
  %842 = cast(%var_10022, dtype="int8") /* ty=int8 */;
  %843 = cast(%var_10023, dtype="int8") /* ty=Tensor[(1920), int8] */;
  %844 = cast(%var_10024, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %845 = reshape(%842, newshape=[]) /* ty=int8 */;
  %846 = reshape(%843, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), int8] */;
  %847 = reshape(%844, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %848 = @func_4365(%845, %846, %847) /* ty=(Tensor[(16, 10, 12), bool], Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(13, 4), uint8], Tensor[(624), uint8]) */;
  %849 = cast(%var_10028, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %850 = reshape(%849, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %851 = @func_5389(%850) /* ty=(Tensor[(8, 5, 8), uint8],) */;
  %852 = @func_5666() /* ty=Tensor[(11, 15, 15), float32] */;
  %853 = %841.3;
  %854 = %848.3;
  %855 = %851.0;
  %856 = @func_4735() /* ty=Tensor[(11, 15, 15), float32] */;
  (%852, %853, meta[relay.Constant][61] /* ty=Tensor[(36, 14), bool] */, %854, %var_10022, %var_10023, %var_10024, %855, %var_10028, %856)
}

def @func_411(%var_394: Tensor[(7, 12, 6), bool], %var_395: Tensor[(7, 12, 6), bool]) -> (Tensor[(7, 12, 6), bool],) {
  %857 = cast(%var_395, dtype="bool") /* ty=Tensor[(7, 12, 6), bool] */;
  %858 = shape_of(%var_394, dtype="int32") /* ty=Tensor[(3), int32] */;
  %859 = cast(%var_394, dtype="bool") /* ty=Tensor[(7, 12, 6), bool] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %861 = logical_or(%859, %860) /* ty=Tensor[(7, 12, 6), bool] */;
  (%861,)
}

def @func_7587() -> Tensor[(11, 15, 15), float32] {
  @func_6685() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_9916(%var_9912: Tensor[(9), int64]) -> (Tensor[(11, 15, 15), float32], Tensor[(1, 9), int64], int64, Tensor[(9), int64]) {
  %862 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %863 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %864 = cast(%var_9912, dtype="int64") /* ty=Tensor[(9), int64] */;
  %865 = reshape(%863, newshape=[]) /* ty=int64 */;
  %866 = reshape(%864, newshape=[1, 9]) /* ty=Tensor[(1, 9), int64] */;
  %867 = %862.0;
  %868 = @func_7995(%865, %866) /* ty=Tensor[(1, 9), int64] */;
  (%867, %868, -10 /* ty=int64 */, %var_9912)
}

def @func_7143(%var_7077: Tensor[(252), bool], %var_7107: Tensor[(330), uint8], %var_7127: Tensor[(12, 42), bool], %var_7131: Tensor[(54), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(32), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(12, 42), bool], Tensor[(54), float32]) {
  %869 = @func_4287() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %870 = cast(%var_7077, dtype="bool") /* ty=Tensor[(252), bool] */;
  %871 = cast(meta[relay.Constant][62] /* ty=Tensor[(12, 42), bool] */, dtype="bool") /* ty=Tensor[(12, 42), bool] */;
  %872 = reshape(%870, newshape=[3, 84]) /* ty=Tensor[(3, 84), bool] */;
  %873 = reshape(%871, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %874 = @func_7061(%872, %873) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(3, 84), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(11, 15, 15), float64]) */;
  %875 = %874.4;
  %876 = cast(%875, dtype="float32") /* ty=Tensor[(54), float32] */;
  %877 = cast(meta[relay.Constant][62] /* ty=Tensor[(12, 42), bool] */, dtype="bool") /* ty=Tensor[(12, 42), bool] */;
  %878 = cast(meta[relay.Constant][63] /* ty=Tensor[(110), uint8] */, dtype="uint8") /* ty=Tensor[(110), uint8] */;
  %879 = cast(%var_7107, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %880 = reshape(%876, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %881 = reshape(%877, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %882 = reshape(%878, newshape=[110]) /* ty=Tensor[(110), uint8] */;
  %883 = reshape(%879, newshape=[330]) /* ty=Tensor[(330), uint8] */;
  %884 = @func_6062(%880, %881, %882, %883) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(1, 252), bool], Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8]) */;
  %885 = cast(%var_7127, dtype="bool") /* ty=Tensor[(12, 42), bool] */;
  %886 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(12, 42), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %887 = cast(meta[relay.Constant][62] /* ty=Tensor[(12, 42), bool] */, dtype="bool") /* ty=Tensor[(12, 42), bool] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %889 = cast(%var_7131, dtype="float32") /* ty=Tensor[(54), float32] */;
  %890 = shape_of(%875, dtype="int32") /* ty=Tensor[(1), int32] */;
  %891 = cast(%875, dtype="float32") /* ty=Tensor[(54), float32] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?), float32] */;
  %893 = %869.0;
  %894 = @func_6332() /* ty=Tensor[(32), float64] */;
  %895 = %884.7;
  %896 = logical_or(%887, %888) /* ty=Tensor[(12, 42), bool] */;
  %897 = floor_mod(%891, %892) /* ty=Tensor[(54), float32] */;
  (%893, %var_7077, %894, %895, meta[relay.Constant][63] /* ty=Tensor[(110), uint8] */, %var_7107, %896, %897)
}

def @func_8148(%var_8130: Tensor[(8, 6, 12), float32], %var_8131: Tensor[(8, 6, 12), float32], %var_8142: Tensor[(192), float32]) -> (Tensor[(8, 6, 12), float32], Tensor[(8, 6, 4), float64], Tensor[(192), float32]) {
  %898 = cast(%var_8131, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
  %899 = shape_of(%var_8130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%var_8130, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %902 = cast(%var_8142, dtype="float32") /* ty=Tensor[(192), float32] */;
  %903 = cast(%var_8142, dtype="float32") /* ty=Tensor[(192), float32] */;
  %904 = reshape(%902, newshape=[8, 6, 4]) /* ty=Tensor[(8, 6, 4), float32] */;
  %905 = reshape(%903, newshape=[8, 6, 4]) /* ty=Tensor[(8, 6, 4), float32] */;
  %906 = @func_3785(%904, %905) /* ty=(Tensor[(8, 6, 4), float64],) */;
  %907 = divide(%900, %901) /* ty=Tensor[(8, 6, 12), float32] */;
  %908 = %906.0;
  (%907, %908, %var_8142)
}

def @func_3924() -> (Tensor[(11, 15, 15), float32],) {
  %909 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %910 = %909.0;
  (%910,)
}

def @main(%var_11461: float64, %var_11462: Tensor[(1, 2, 2), float64]) -> (Tensor[(1, 2, 2), bool],) {
  %911 = cast(%var_11461, dtype="bool") /* ty=bool */;
  %912 = cast(%var_11462, dtype="bool") /* ty=Tensor[(1, 2, 2), bool] */;
  %913 = not_equal(%911, %912) /* ty=Tensor[(1, 2, 2), bool] */;
  (%913,)
}

def @func_4701() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %914 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %915 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %916 = %914.0;
  %917 = %915.0;
  (%916, %917)
}

def @func_8686() -> Tensor[(11, 15, 15), float32] {
  %918 = @func_8299() /* ty=Tensor[(11, 15, 15), float32] */;
  %919 = cast(%918, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  atanh(%919) /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_7977() -> Tensor[(11, 15, 15), float64] {
  %920 = @func_5182() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %920.0
}

def @func_7562() -> Tensor[(11, 15, 15), float32] {
  @func_4158() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_4158() -> Tensor[(11, 15, 15), float32] {
  %921 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %921.0
}

def @func_4029(%var_3991: Tensor[(11, 15, 15), float32], %var_4001: Tensor[(11, 15, 15), bool], %var_4011: Tensor[(624), uint8], %var_4019: Tensor[(504), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) {
  %922 = @func_3932() /* ty=Tensor[(11, 15, 15), float32] */;
  %923 = cast(%var_3991, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %924 = shape_of(%922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %925 = cast(%922, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %927 = greater(%925, %926) /* ty=Tensor[(11, 15, 15), bool] */;
  %928 = cast(%var_4001, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %929 = shape_of(%927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %930 = cast(%927, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %932 = cast(meta[relay.Constant][64] /* ty=Tensor[(52), uint8] */, dtype="uint8") /* ty=Tensor[(52), uint8] */;
  %933 = cast(meta[relay.Constant][64] /* ty=Tensor[(52), uint8] */, dtype="uint8") /* ty=Tensor[(52), uint8] */;
  %934 = cast(%var_4011, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %935 = reshape(%932, newshape=[4, 13, 1]) /* ty=Tensor[(4, 13, 1), uint8] */;
  %936 = reshape(%933, newshape=[4, 13, 1]) /* ty=Tensor[(4, 13, 1), uint8] */;
  %937 = reshape(%934, newshape=[4, 13, 12]) /* ty=Tensor[(4, 13, 12), uint8] */;
  %938 = @func_3624(%935, %936, %937) /* ty=(Tensor[(4, 13, ?), uint8], Tensor[(4, 13, 12), float64]) */;
  %939 = cast(%var_4019, dtype="bool") /* ty=Tensor[(504), bool] */;
  %940 = cast(%var_4019, dtype="bool") /* ty=Tensor[(504), bool] */;
  %941 = reshape(%939, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %942 = reshape(%940, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %943 = @func_411(%941, %942) /* ty=(Tensor[(7, 12, 6), bool],) */;
  %944 = floor_mod(%930, %931) /* ty=Tensor[(11, 15, 15), float32] */;
  %945 = %938.0;
  %946 = %943.0;
  (%944, %945, meta[relay.Constant][64] /* ty=Tensor[(52), uint8] */, %var_4011, %946, %var_4019)
}

def @func_5448(%var_5445: Tensor[(3, 2, 1), float32]) -> Tensor[(3, 2, 1), float32] {
  %947 = cast(%var_5445, dtype="float32") /* ty=Tensor[(3, 2, 1), float32] */;
  cosh(%947) /* ty=Tensor[(3, 2, 1), float32] */
}

def @func_11190() -> (Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32]) {
  %948 = @func_9467() /* ty=(Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %949 = %948.0;
  %950 = @func_9154() /* ty=Tensor[(11, 15, 15), float32] */;
  (%949, %950)
}

def @func_1582(%var_1546: Tensor[(1, 9, 6), float32], %var_1564: Tensor[(504), bool]) -> (Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) {
  %951 = cast(%var_1546, dtype="bool") /* ty=Tensor[(1, 9, 6), bool] */;
  %952 = cast(meta[relay.Constant][65] /* ty=Tensor[(12, 9, 6), float32] */, dtype="bool") /* ty=Tensor[(12, 9, 6), bool] */;
  %953 = cast(%var_1546, dtype="float32") /* ty=Tensor[(1, 9, 6), float32] */;
  %954 = atanh(%953) /* ty=Tensor[(1, 9, 6), float32] */;
  %955 = cast(%var_1546, dtype="uint32") /* ty=Tensor[(1, 9, 6), uint32] */;
  %956 = shape_of(%954, dtype="int32") /* ty=Tensor[(3), int32] */;
  %957 = cast(%954, dtype="uint32") /* ty=Tensor[(1, 9, 6), uint32] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %959 = cast(%var_1564, dtype="bool") /* ty=Tensor[(504), bool] */;
  %960 = cast(%var_1564, dtype="bool") /* ty=Tensor[(504), bool] */;
  %961 = reshape(%959, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %962 = reshape(%960, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %963 = @func_411(%961, %962) /* ty=(Tensor[(7, 12, 6), bool],) */;
  %964 = cast(%954, dtype="float32") /* ty=Tensor[(1, 9, 6), float32] */;
  %965 = greater_equal(%951, %952) /* ty=Tensor[(12, 9, 6), bool] */;
  %966 = bitwise_xor(%957, %958) /* ty=Tensor[(?, 9, 6), uint32] */;
  %967 = %963.0;
  %968 = exp(%964) /* ty=Tensor[(1, 9, 6), float32] */;
  (%965, %966, %967, %var_1564, %968)
}

def @func_10564() -> Tensor[(11, 15, 15), float32] {
  %969 = @func_10271() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), float32], Tensor[(1920), int8], int8, Tensor[(624), uint8], Tensor[(11, 15, 15), float32]) */;
  %969.5
}

def @func_9216() -> Tensor[(11, 15, 15), float32] {
  %970 = @func_8860() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %970.0
}

def @func_8759(%var_8698: uint16, %var_8721: Tensor[(252), bool], %var_8722: Tensor[(504), bool], %var_8723: Tensor[(3, 18), float32], %var_8746: Tensor[(5, 66), uint8]) -> (Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(3, 18), bool], Tensor[(12, 3, 7), float64], Tensor[(11, 3, 10), uint8], Tensor[(22, 5), uint8], Tensor[(5, 66), uint8]) {
  %971 = @func_6942() /* ty=(Tensor[(12, 10, 14), float32],) */;
  %972 = cast(%var_8698, dtype="uint16") /* ty=uint16 */;
  %973 = reshape(%972, newshape=[]) /* ty=uint16 */;
  %974 = @func_4729(%973) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(11, 15, 15), float32], Tensor[(7, 4, 1), bool], uint16, Tensor[(28), uint16]) */;
  %975 = cast(%var_8723, dtype="bool") /* ty=Tensor[(3, 18), bool] */;
  %976 = cast(%var_8698, dtype="bool") /* ty=bool */;
  %977 = cast(%var_8721, dtype="bool") /* ty=Tensor[(252), bool] */;
  %978 = cast(%var_8722, dtype="bool") /* ty=Tensor[(504), bool] */;
  %979 = cast(%var_8723, dtype="float32") /* ty=Tensor[(3, 18), float32] */;
  %980 = reshape(%977, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), bool] */;
  %981 = reshape(%978, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %982 = reshape(%979, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %983 = @func_1674(%980, %981, %982) /* ty=(Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) */;
  %984 = %983.4;
  %985 = cast(%984, dtype="float64") /* ty=Tensor[(12, 3, 7), float64] */;
  %986 = cast(meta[relay.Constant][66] /* ty=Tensor[(22, 5), uint8] */, dtype="uint8") /* ty=Tensor[(22, 5), uint8] */;
  %987 = cast(%var_8746, dtype="uint8") /* ty=Tensor[(5, 66), uint8] */;
  %988 = reshape(%986, newshape=[11, 1, 10]) /* ty=Tensor[(11, 1, 10), uint8] */;
  %989 = reshape(%987, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), uint8] */;
  %990 = %971.0;
  %991 = %974.0;
  %992 = greater_equal(%975, %976) /* ty=Tensor[(3, 18), bool] */;
  %993 = atan(%985) /* ty=Tensor[(12, 3, 7), float64] */;
  %994 = @func_2342(%988, %989) /* ty=Tensor[(11, 3, 10), uint8] */;
  (%990, %991, %var_8721, %var_8722, %992, %993, %994, meta[relay.Constant][66] /* ty=Tensor[(22, 5), uint8] */, %var_8746)
}

def @func_4791(%var_4771: Tensor[(624), uint8], %var_4776: Tensor[(330, 1), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(13, 4), uint8], Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(100), uint32], Tensor[(330, 1), uint8], Tensor[(11, 15, 15), float32], Tensor[(52), uint8], Tensor[(504), bool], Tensor[(2, 5, 10), bool]) {
  %995 = cast(meta[relay.Constant][67] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %996 = cast(meta[relay.Constant][68] /* ty=Tensor[(1920), int8] */, dtype="int8") /* ty=Tensor[(1920), int8] */;
  %997 = cast(%var_4771, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %998 = reshape(%995, newshape=[]) /* ty=int8 */;
  %999 = reshape(%996, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), int8] */;
  %1000 = reshape(%997, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %1001 = @func_4365(%998, %999, %1000) /* ty=(Tensor[(16, 10, 12), bool], Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(13, 4), uint8], Tensor[(624), uint8]) */;
  %1002 = @func_3924() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1003 = @func_4735() /* ty=Tensor[(11, 15, 15), float32] */;
  %1004 = cast(%1003, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %1005 = cast(%1003, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %1006 = cast(%var_4771, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %1007 = cast(meta[relay.Constant][70] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %1008 = reshape(%1004, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %1009 = reshape(%1005, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), bool] */;
  %1010 = reshape(%1006, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %1011 = reshape(%1007, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %1012 = @func_4029(%1008, %1009, %1010, %1011) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */;
  %1013 = cast(meta[relay.Constant][69] /* ty=Tensor[(100), uint32] */, dtype="uint32") /* ty=Tensor[(100), uint32] */;
  %1014 = cast(meta[relay.Constant][69] /* ty=Tensor[(100), uint32] */, dtype="uint32") /* ty=Tensor[(100), uint32] */;
  %1015 = cast(%var_4776, dtype="uint8") /* ty=Tensor[(330, 1), uint8] */;
  %1016 = cast(meta[relay.Constant][69] /* ty=Tensor[(100), uint32] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %1017 = reshape(%1013, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), uint32] */;
  %1018 = reshape(%1014, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), uint32] */;
  %1019 = reshape(%1015, newshape=[330]) /* ty=Tensor[(330), uint8] */;
  %1020 = reshape(%1016, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), float64] */;
  %1021 = @func_2522(%1017, %1018, %1019, %1020) /* ty=(Tensor[(2, 5, 10), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(2, 5, 10), float32]) */;
  %1022 = %1021.0;
  %1023 = cast(%1022, dtype="bool") /* ty=Tensor[(2, 5, 10), bool] */;
  %1024 = cast(meta[relay.Constant][67] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %1025 = @func_4158() /* ty=Tensor[(11, 15, 15), float32] */;
  %1026 = %1001.3;
  %1027 = %1002.0;
  %1028 = %1012.2;
  %1029 = less(%1023, %1024) /* ty=Tensor[(2, 5, 10), bool] */;
  (%1025, %1003, %1026, meta[relay.Constant][68] /* ty=Tensor[(1920), int8] */, %var_4771, meta[relay.Constant][69] /* ty=Tensor[(100), uint32] */, %var_4776, %1027, %1028, meta[relay.Constant][70] /* ty=Tensor[(504), bool] */, %1029)
}

def @func_8368() -> Tensor[(11, 15, 15), float32] {
  %1030 = @func_4910() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1030.0
}

def @func_8270() -> (Tensor[(11, 15, 15), float32], Tensor[(504), bool]) {
  %1031 = @func_7562() /* ty=Tensor[(11, 15, 15), float32] */;
  %1032 = cast(%1031, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %1033 = reshape(%1032, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %1034 = @func_5838(%1033) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) */;
  %1035 = %1034.3;
  (%1031, %1035)
}

def @func_7995(%var_7987: int64, %var_7988: Tensor[(1, 9), int64]) -> Tensor[(1, 9), int64] {
  %1036 = cast(%var_7987, dtype="int64") /* ty=int64 */;
  %1037 = cast(%var_7988, dtype="int64") /* ty=Tensor[(1, 9), int64] */;
  bitwise_xor(%1036, %1037) /* ty=Tensor[(1, 9), int64] */
}

def @func_6973(%var_6957: Tensor[(13, 1, 8), float32]) -> Tensor[(13, 1, 8), float32] {
  %1038 = cast(%var_6957, dtype="float32") /* ty=Tensor[(13, 1, 8), float32] */;
  tan(%1038) /* ty=Tensor[(13, 1, 8), float32] */
}

def @func_6883(%var_6871: Tensor[(15, 11, 2), int16], %var_6872: Tensor[(15, 11, 2), int16]) -> Tensor[(15, 11, 2), bool] {
  %1039 = cast(%var_6872, dtype="bool") /* ty=Tensor[(15, 11, 2), bool] */;
  %1040 = shape_of(%var_6871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1041 = cast(%var_6871, dtype="bool") /* ty=Tensor[(15, 11, 2), bool] */;
  %1042 = dyn.reshape(%1039, %1040, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1041, %1042) /* ty=Tensor[(15, 11, 2), bool] */
}

def @func_7527(%var_7428: Tensor[(624), uint8], %var_7433: Tensor[(192, 2), float32], %var_7442: Tensor[(5, 66), float32], %var_7472: Tensor[(54), float32], %var_7522: Tensor[(5, 66), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(?, 13, 3), bool], uint16, Tensor[(624), uint8], Tensor[(504), bool], Tensor[(192, 2), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(5, 66), bool]) {
  %1043 = @func_6389() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1044 = cast(meta[relay.Constant][71] /* ty=Tensor[(5, 66), int16] */, dtype="int16") /* ty=Tensor[(5, 66), int16] */;
  %1045 = reshape(%1044, newshape=[330]) /* ty=Tensor[(330), int16] */;
  %1046 = @func_7273(%1045) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(3, 8, 13), float64], Tensor[(15, 11, 2), bool], Tensor[(330), int16], Tensor[(312), float64]) */;
  %1047 = cast(meta[relay.Constant][72] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1048 = cast(%var_7428, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %1049 = reshape(%1047, newshape=[]) /* ty=uint16 */;
  %1050 = reshape(%1048, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %1051 = @func_6600(%1049, %1050) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool], Tensor[(11, 6, 3), float64], Tensor[(198), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(100), uint32], Tensor[(330), uint8], Tensor[(11, 15, 15), float32], uint16, uint16, Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool], Tensor[(?, 13, 3), uint8], Tensor[(?, 13, 3), bool], Tensor[(?, 13, 3), float64]) */;
  %1052 = cast(%var_7433, dtype="float32") /* ty=Tensor[(192, 2), float32] */;
  %1053 = reshape(%1052, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %1054 = @func_7205(%1053) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(7, 12, 6), bool], Tensor[(384), float32], Tensor[(504), bool]) */;
  %1055 = @func_6784() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */;
  %1056 = cast(%var_7472, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1057 = %1054.3;
  %1058 = cast(%1057, dtype="bool") /* ty=Tensor[(504), bool] */;
  %1059 = reshape(%1056, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %1060 = reshape(%1058, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %1061 = @func_5096(%1059, %1060) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool]) */;
  %1062 = cast(meta[relay.Constant][71] /* ty=Tensor[(5, 66), int16] */, dtype="float32") /* ty=Tensor[(5, 66), float32] */;
  %1063 = rsqrt(%1062) /* ty=Tensor[(5, 66), float32] */;
  %1064 = cast(%var_7442, dtype="float32") /* ty=Tensor[(5, 66), float32] */;
  %1065 = shape_of(%1063, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1066 = cast(%1063, dtype="float32") /* ty=Tensor[(5, 66), float32] */;
  %1067 = dyn.reshape(%1064, %1065, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1068 = mod(%1066, %1067) /* ty=Tensor[(5, 66), float32] */;
  %1069 = cast(%var_7522, dtype="bool") /* ty=Tensor[(5, 66), bool] */;
  %1070 = shape_of(%1068, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1071 = cast(%1068, dtype="bool") /* ty=Tensor[(5, 66), bool] */;
  %1072 = dyn.reshape(%1069, %1070, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1073 = %1043.0;
  %1074 = %1046.0;
  %1075 = %1051.15;
  %1076 = @func_5285() /* ty=Tensor[(11, 15, 15), float32] */;
  %1077 = %1055.0;
  %1078 = %1061.2;
  %1079 = logical_or(%1071, %1072) /* ty=Tensor[(5, 66), bool] */;
  (%1073, %1074, %1075, meta[relay.Constant][72] /* ty=uint16 */, %var_7428, %1057, %var_7433, %1076, %1077, %1078, %var_7472, %1079)
}

def @func_10858() -> Tensor[(10, 9, 2), float64] {
  %1080 = cast(meta[relay.Constant][73] /* ty=Tensor[(10, 1, 2), float64] */, dtype="float64") /* ty=Tensor[(10, 1, 2), float64] */;
  %1081 = cast(meta[relay.Constant][74] /* ty=Tensor[(10, 9, 2), float64] */, dtype="float64") /* ty=Tensor[(10, 9, 2), float64] */;
  power(%1080, %1081) /* ty=Tensor[(10, 9, 2), float64] */
}

def @func_2803(%var_2743: uint16, %var_2744: Tensor[(7, 4, 1), uint16]) -> (Tensor[(7, 4, 1), bool], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) {
  %1082 = cast(%var_2743, dtype="bool") /* ty=bool */;
  %1083 = cast(%var_2744, dtype="bool") /* ty=Tensor[(7, 4, 1), bool] */;
  %1084 = cast(meta[relay.Constant][75] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %1085 = cast(meta[relay.Constant][75] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %1086 = reshape(%1084, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %1087 = reshape(%1085, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %1088 = @func_411(%1086, %1087) /* ty=(Tensor[(7, 12, 6), bool],) */;
  %1089 = less(%1082, %1083) /* ty=Tensor[(7, 4, 1), bool] */;
  %1090 = %1088.0;
  (%1089, %1090, meta[relay.Constant][75] /* ty=Tensor[(504), bool] */)
}

def @func_10065() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %1091 = @func_7962() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1092 = @func_5285() /* ty=Tensor[(11, 15, 15), float32] */;
  %1093 = %1091.0;
  (%1092, %1093)
}

def @func_5096(%var_5081: Tensor[(54), float32], %var_5082: Tensor[(504), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool]) {
  %1094 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1095 = cast(%var_5081, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1096 = cast(%var_5082, dtype="bool") /* ty=Tensor[(504), bool] */;
  %1097 = reshape(%1095, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
  %1098 = reshape(%1096, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %1099 = @func_1582(%1097, %1098) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
  %1100 = %1094.0;
  %1101 = %1099.4;
  (%1100, %1101, %var_5081, %var_5082)
}

def @func_11271() -> (Tensor[(11, 15, 15), float32], Tensor[(624), int32], Tensor[(11, 15, 15), float32]) {
  %1102 = @func_10836() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(13, 4), uint8], int8, Tensor[(96, 20), int8], Tensor[(624), uint8], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */;
  %1103 = %1102.5;
  %1104 = cast(meta[relay.Constant][76] /* ty=Tensor[(624), uint8] */, dtype="int32") /* ty=Tensor[(624), int32] */;
  %1105 = shape_of(%1103, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1106 = cast(%1103, dtype="int32") /* ty=Tensor[(624), int32] */;
  %1107 = dyn.reshape(%1104, %1105, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1108 = @func_6784() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */;
  %1109 = @func_10564() /* ty=Tensor[(11, 15, 15), float32] */;
  %1110 = subtract(%1106, %1107) /* ty=Tensor[(624), int32] */;
  %1111 = %1108.0;
  (%1109, %1110, %1111)
}

def @func_5366() -> (Tensor[(11, 15, 15), float32],) {
  %1112 = @func_5285() /* ty=Tensor[(11, 15, 15), float32] */;
  (%1112,)
}

def @func_11358() -> (Tensor[(11, 15, 15), float32],) {
  %1113 = @func_8566() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1114 = %1113.0;
  (%1114,)
}

def @func_7799() -> Tensor[(11, 15, 15), float32] {
  %1115 = @func_5366() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1115.0
}

def @func_5223(%var_5187: Tensor[(11, 6, 3), float32]) -> Tensor[(11, 6, 3), float64] {
  %1116 = cast(%var_5187, dtype="float32") /* ty=Tensor[(11, 6, 3), float32] */;
  %1117 = acos(%1116) /* ty=Tensor[(11, 6, 3), float32] */;
  %1118 = cast(%1117, dtype="float32") /* ty=Tensor[(11, 6, 3), float32] */;
  %1119 = sin(%1118) /* ty=Tensor[(11, 6, 3), float32] */;
  %1120 = cast(%1119, dtype="float64") /* ty=Tensor[(11, 6, 3), float64] */;
  rsqrt(%1120) /* ty=Tensor[(11, 6, 3), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6389() -> (Tensor[(11, 15, 15), float32],) {
  %0 = @func_5323() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1 = %0.0;
  (%1,)
}

def @func_4989(%var_4949: Tensor[(2, 8, 2), float64], %var_4973: Tensor[(9, 6), float32]) -> (Tensor[(2, 8, 2), uint8], Tensor[(12, 3, 7), uint32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(9, 6), float32], Tensor[(2, 8, 2), float32]) {
  %2 = cast(%var_4949, dtype="float64") /* ty=Tensor[(2, 8, 2), float64] */;
  %3 = sin(%2) /* ty=Tensor[(2, 8, 2), float64] */;
  %4 = cast(%3, dtype="uint8") /* ty=Tensor[(2, 8, 2), uint8] */;
  %5 = shape_of(%var_4949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%var_4949, dtype="uint8") /* ty=Tensor[(2, 8, 2), uint8] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %8 = minimum(%6, %7) /* ty=Tensor[(2, 8, 2), uint8] */;
  %9 = cast(%3, dtype="uint8") /* ty=Tensor[(2, 8, 2), uint8] */;
  %10 = shape_of(%8, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%8, dtype="uint8") /* ty=Tensor[(2, 8, 2), uint8] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(252), bool] */, dtype="bool") /* ty=Tensor[(252), bool] */;
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %15 = cast(%var_4973, dtype="float32") /* ty=Tensor[(9, 6), float32] */;
  %16 = reshape(%13, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), bool] */;
  %17 = reshape(%14, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %18 = reshape(%15, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %19 = @func_1674(%16, %17, %18) /* ty=(Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) */;
  %20 = cast(%8, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %21 = logical_xor(%11, %12) /* ty=Tensor[(2, 8, 2), uint8] */;
  %22 = %19.4;
  %23 = log2(%20) /* ty=Tensor[(2, 8, 2), float32] */;
  (%21, %22, meta[relay.Constant][0] /* ty=Tensor[(252), bool] */, meta[relay.Constant][1] /* ty=Tensor[(504), bool] */, %var_4973, %23)
}

def @func_8369() -> Tensor[(11, 15, 15), float32] {
  %25 = fn () -> Tensor[(11, 15, 15), float32] {
    %24 = @func_4910() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %24.0
  };
  %25() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_5367() -> (Tensor[(11, 15, 15), float32],) {
  %27 = fn () -> (Tensor[(11, 15, 15), float32],) {
    %26 = @func_5285() /* ty=Tensor[(11, 15, 15), float32] */;
    (%26,)
  };
  %27() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_9122() -> Tensor[(11, 15, 15), float32] {
  %28 = @func_4158() /* ty=Tensor[(11, 15, 15), float32] */;
  %29 = cast(%28, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  sinh(%29) /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_4993(%var_4991: Tensor[(2, 8, 2), float64], %var_4992: Tensor[(9, 6), float32]) -> (Tensor[(2, 8, 2), uint8], Tensor[(12, 3, 7), uint32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(9, 6), float32], Tensor[(2, 8, 2), float32]) {
  @func_4989(%var_4991, %var_4992) /* ty=(Tensor[(2, 8, 2), uint8], Tensor[(12, 3, 7), uint32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(9, 6), float32], Tensor[(2, 8, 2), float32]) */
}

def @func_6123(%var_6077: Tensor[(2, 8, 2), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(2, 8, 2), float32]) {
  %30 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
  %31 = @func_5710() /* ty=(Tensor[(11, 10, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(32), float64], Tensor[(54), float32]) */;
  %32 = %31.1;
  %33 = cast(%var_6077, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %34 = shape_of(%32, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%32, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %37 = floor_divide(%35, %36) /* ty=Tensor[(2, 8, 2), float32] */;
  %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 8, 2), float32] */, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %39 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%37, dtype="float32") /* ty=Tensor[(2, 8, 2), float32] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %42 = %30.0;
  %43 = divide(%40, %41) /* ty=Tensor[(2, 8, 2), float32] */;
  (%42, %43)
}

def @func_5685() -> (Tensor[(11, 10, 2), bool],) {
  @func_5683() /* ty=(Tensor[(11, 10, 2), bool],) */
}

def @func_5569() -> (Tensor[(11, 15, 15), float32],) {
  %44 = @func_5285() /* ty=Tensor[(11, 15, 15), float32] */;
  (%44,)
}

def @func_5223(%var_5187: Tensor[(11, 6, 3), float32]) -> Tensor[(11, 6, 3), float64] {
  %45 = cast(%var_5187, dtype="float32") /* ty=Tensor[(11, 6, 3), float32] */;
  %46 = acos(%45) /* ty=Tensor[(11, 6, 3), float32] */;
  %47 = cast(%46, dtype="float32") /* ty=Tensor[(11, 6, 3), float32] */;
  %48 = sin(%47) /* ty=Tensor[(11, 6, 3), float32] */;
  %49 = cast(%48, dtype="float64") /* ty=Tensor[(11, 6, 3), float64] */;
  rsqrt(%49) /* ty=Tensor[(11, 6, 3), float64] */
}

def @func_6193(%var_6149: Tensor[(54), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(504), bool], Tensor[(54), float32], Tensor[(504), bool], Tensor[(11, 15, 15), float64], Tensor[(504), bool], Tensor[(4, 728), int16], uint16, Tensor[(7, 12, 6), bool]) {
  %50 = @func_5621() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %51 = cast(%var_6149, dtype="float32") /* ty=Tensor[(54), float32] */;
  %52 = cast(meta[relay.Constant][3] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %53 = reshape(%51, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
  %54 = reshape(%52, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %55 = @func_1582(%53, %54) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
  %56 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %57 = cast(meta[relay.Constant][4] /* ty=Tensor[(4, 728), int16] */, dtype="int16") /* ty=Tensor[(4, 728), int16] */;
  %58 = cast(meta[relay.Constant][5] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %59 = %55.3;
  %60 = cast(%59, dtype="bool") /* ty=Tensor[(504), bool] */;
  %61 = reshape(%57, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), int16] */;
  %62 = reshape(%58, newshape=[]) /* ty=uint16 */;
  %63 = reshape(%60, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %64 = @func_4897(%61, %62, %63) /* ty=(Tensor[(16, 14, 13), int16], Tensor[(16, 14, 13), float64], Tensor[(11, 15, 15), float32], uint16, Tensor[(11, 15, 15), float64], Tensor[(16, 14, 13), float32], Tensor[(1, 9, 6), float32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(12, 9, 6), bool]) */;
  %65 = %50.0;
  %66 = cast(%65, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %67 = reshape(%66, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %68 = @func_5838(%67) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) */;
  %69 = %56.0;
  %70 = %64.8;
  %71 = %68.4;
  (%65, %59, %var_6149, meta[relay.Constant][3] /* ty=Tensor[(504), bool] */, %69, %70, meta[relay.Constant][4] /* ty=Tensor[(4, 728), int16] */, meta[relay.Constant][5] /* ty=uint16 */, %71)
}

def @func_7185() -> Tensor[(11, 15, 15), float32] {
  @func_7183() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_7562() -> Tensor[(11, 15, 15), float32] {
  @func_4158() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_6126(%var_6124: Tensor[(2, 8, 2), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(2, 8, 2), float32]) {
  @func_6123(%var_6124) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(2, 8, 2), float32]) */
}

def @func_5571() -> (Tensor[(11, 15, 15), float32],) {
  @func_5569() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_9494() -> Tensor[(11, 15, 15), float32] {
  %72 = @func_3924() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %72.0
}

def @func_4735() -> Tensor[(11, 15, 15), float32] {
  %73 = @func_4093() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %73.1
}

def @func_9050(%var_9047: Tensor[(2912), int16], %var_9048: uint16, %var_9049: Tensor[(384), float32]) -> (Tensor[(8, 1, 8), float32], Tensor[(1, 9, 6), float32], Tensor[(2912), int16], uint16, Tensor[(504), bool], Tensor[(384), float32], Tensor[(384), float32]) {
  @func_9045(%var_9047, %var_9048, %var_9049) /* ty=(Tensor[(8, 1, 8), float32], Tensor[(1, 9, 6), float32], Tensor[(2912), int16], uint16, Tensor[(504), bool], Tensor[(384), float32], Tensor[(384), float32]) */
}

def @func_8531(%var_8529: int8, %var_8530: Tensor[(624), uint8]) -> (Tensor[(32), float64], Tensor[(4, 13, ?), uint8], int8, Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(11, 15, 15), float32]) {
  @func_8527(%var_8529, %var_8530) /* ty=(Tensor[(32), float64], Tensor[(4, 13, ?), uint8], int8, Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(11, 15, 15), float32]) */
}

def @func_9614() -> Tensor[(11, 15, 15), float32] {
  @func_9612() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_10566() -> Tensor[(11, 15, 15), float32] {
  @func_10564() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_5563(%var_5560: Tensor[(40), uint8], %var_5561: Tensor[(624), uint8], %var_5562: Tensor[(36, 14), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(4, 13, ?), uint8], Tensor[(624), uint8], Tensor[(36, 14), bool]) {
  @func_5558(%var_5560, %var_5561, %var_5562) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(4, 13, ?), uint8], Tensor[(624), uint8], Tensor[(36, 14), bool]) */
}

def @func_10891() -> Tensor[(11, 15, 15), float32] {
  %74 = fn () -> Tensor[(11, 15, 15), float32] {
    @func_7587() /* ty=Tensor[(11, 15, 15), float32] */
  };
  %74() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_9744(%var_9740: Tensor[(576), float32], %var_9741: Tensor[(252), bool], %var_9742: Tensor[(330), uint8], %var_9743: Tensor[(54), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 6, 3), float32], Tensor[(8, 6, 4), float64], Tensor[(576), float32], Tensor[(192), float32], Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(330), uint8], Tensor[(504), bool], Tensor[(54), float32], Tensor[(11, 15, 15), float32]) {
  %97 = fn (%var_9689: Tensor[(576), float32], %var_9710: Tensor[(252), bool], %var_9711: Tensor[(330), uint8], %var_9713: Tensor[(54), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 6, 3), float32], Tensor[(8, 6, 4), float64], Tensor[(576), float32], Tensor[(192), float32], Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(330), uint8], Tensor[(504), bool], Tensor[(54), float32], Tensor[(11, 15, 15), float32]) {
    %75 = @func_8983() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(640), bool], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(96, 4), float64], Tensor[(11, 15, 15), float64], Tensor[(11, 6, 3), float32]) */;
    %76 = cast(%var_9689, dtype="float32") /* ty=Tensor[(576), float32] */;
    %77 = cast(%var_9689, dtype="float32") /* ty=Tensor[(576), float32] */;
    %78 = cast(meta[relay.Constant][6] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %79 = reshape(%76, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), float32] */;
    %80 = reshape(%77, newshape=[8, 6, 12]) /* ty=Tensor[(8, 6, 12), float32] */;
    %81 = reshape(%78, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %82 = @func_8148(%79, %80, %81) /* ty=(Tensor[(8, 6, 12), float32], Tensor[(8, 6, 4), float64], Tensor[(192), float32]) */;
    %83 = cast(%var_9710, dtype="bool") /* ty=Tensor[(252), bool] */;
    %84 = cast(%var_9711, dtype="uint8") /* ty=Tensor[(330), uint8] */;
    %85 = cast(meta[relay.Constant][7] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
    %86 = cast(%var_9713, dtype="float32") /* ty=Tensor[(54), float32] */;
    %87 = reshape(%83, newshape=[252]) /* ty=Tensor[(252), bool] */;
    %88 = reshape(%84, newshape=[330]) /* ty=Tensor[(330), uint8] */;
    %89 = reshape(%85, newshape=[12, 42]) /* ty=Tensor[(12, 42), bool] */;
    %90 = reshape(%86, newshape=[54]) /* ty=Tensor[(54), float32] */;
    %91 = @func_7143(%87, %88, %89, %90) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(32), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(12, 42), bool], Tensor[(54), float32]) */;
    %92 = @func_9154() /* ty=Tensor[(11, 15, 15), float32] */;
    %93 = %75.6;
    %94 = %82.1;
    %95 = %91.0;
    %96 = @func_8368() /* ty=Tensor[(11, 15, 15), float32] */;
    (%92, %93, %94, %var_9689, meta[relay.Constant][6] /* ty=Tensor[(192), float32] */, %95, %var_9710, %var_9711, meta[relay.Constant][7] /* ty=Tensor[(504), bool] */, %var_9713, %96)
  };
  %97(%var_9740, %var_9741, %var_9742, %var_9743) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 6, 3), float32], Tensor[(8, 6, 4), float64], Tensor[(576), float32], Tensor[(192), float32], Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(330), uint8], Tensor[(504), bool], Tensor[(54), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_9612() -> Tensor[(11, 15, 15), float32] {
  %98 = @func_7736() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %98.2
}

def @func_2803(%var_2743: uint16, %var_2744: Tensor[(7, 4, 1), uint16]) -> (Tensor[(7, 4, 1), bool], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) {
  %99 = cast(%var_2743, dtype="bool") /* ty=bool */;
  %100 = cast(%var_2744, dtype="bool") /* ty=Tensor[(7, 4, 1), bool] */;
  %101 = cast(meta[relay.Constant][8] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %102 = cast(meta[relay.Constant][8] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %103 = reshape(%101, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %104 = reshape(%102, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %105 = @func_411(%103, %104) /* ty=(Tensor[(7, 12, 6), bool],) */;
  %106 = less(%99, %100) /* ty=Tensor[(7, 4, 1), bool] */;
  %107 = %105.0;
  (%106, %107, meta[relay.Constant][8] /* ty=Tensor[(504), bool] */)
}

def @func_4912() -> (Tensor[(11, 15, 15), float32],) {
  @func_4910() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_10130() -> (Tensor[(12, 10, 14), float32],) {
  %108 = @func_7902() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) */;
  %109 = %108.1;
  (%109,)
}

def @func_11166(%var_11155: Tensor[(1920, 1), int8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(2, 1456), int16], Tensor[(384), float32], Tensor[(1, 9, 6), bool], Tensor[(8, 5, 8), uint8], Tensor[(1920, 1), int8], Tensor[(624), uint8], Tensor[(40), uint8], Tensor[(11, 15, 15), float32]) {
  %110 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 1456), int16] */, dtype="int16") /* ty=Tensor[(2, 1456), int16] */;
  %111 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %112 = cast(meta[relay.Constant][10] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %113 = reshape(%110, newshape=[2912]) /* ty=Tensor[(2912), int16] */;
  %114 = reshape(%111, newshape=[]) /* ty=uint16 */;
  %115 = reshape(%112, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %116 = @func_9045(%113, %114, %115) /* ty=(Tensor[(8, 1, 8), float32], Tensor[(1, 9, 6), float32], Tensor[(2912), int16], uint16, Tensor[(504), bool], Tensor[(384), float32], Tensor[(384), float32]) */;
  %117 = %116.1;
  %118 = cast(%117, dtype="float32") /* ty=Tensor[(1, 9, 6), float32] */;
  %119 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="float32") /* ty=float32 */;
  %120 = minimum(%118, %119) /* ty=Tensor[(1, 9, 6), float32] */;
  %121 = cast(%120, dtype="bool") /* ty=Tensor[(1, 9, 6), bool] */;
  %122 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %123 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="int8") /* ty=int8 */;
  %124 = cast(%var_11155, dtype="int8") /* ty=Tensor[(1920, 1), int8] */;
  %125 = cast(meta[relay.Constant][12] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %126 = cast(meta[relay.Constant][13] /* ty=Tensor[(40), uint8] */, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %127 = reshape(%123, newshape=[]) /* ty=int8 */;
  %128 = reshape(%124, newshape=[1920]) /* ty=Tensor[(1920), int8] */;
  %129 = reshape(%125, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %130 = reshape(%126, newshape=[40]) /* ty=Tensor[(40), uint8] */;
  %131 = @func_10033(%127, %128, %129, %130) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(504), bool], Tensor[(36, 14), bool], Tensor[(13, 4), uint8], int8, Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(11, 15, 15), float32]) */;
  %132 = @func_6453() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %133 = @func_7799() /* ty=Tensor[(11, 15, 15), float32] */;
  %134 = @func_6685() /* ty=Tensor[(11, 15, 15), float32] */;
  %135 = equal(%121, %122) /* ty=Tensor[(1, 9, 6), bool] */;
  %136 = %131.7;
  %137 = %132.0;
  (%133, %134, meta[relay.Constant][9] /* ty=Tensor[(2, 1456), int16] */, meta[relay.Constant][10] /* ty=Tensor[(384), float32] */, %135, %136, %var_11155, meta[relay.Constant][12] /* ty=Tensor[(624), uint8] */, meta[relay.Constant][13] /* ty=Tensor[(40), uint8] */, %137)
}

def @func_7588() -> Tensor[(11, 15, 15), float32] {
  %138 = fn () -> Tensor[(11, 15, 15), float32] {
    @func_6685() /* ty=Tensor[(11, 15, 15), float32] */
  };
  %138() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_5067() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) {
  @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */
}

def @func_3893() -> (Tensor[(11, 15, 15), float32],) {
  %141 = fn () -> (Tensor[(11, 15, 15), float32],) {
    %139 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 15, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
    %140 = erf(%139) /* ty=Tensor[(11, 15, 15), float32] */;
    (%140,)
  };
  %141() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_2528(%var_2524: Tensor[(2, 5, 10), uint32], %var_2525: Tensor[(2, 5, 10), uint32], %var_2526: Tensor[(330), uint8], %var_2527: Tensor[(2, 5, 10), float64]) -> (Tensor[(2, 5, 10), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(2, 5, 10), float32]) {
  @func_2522(%var_2524, %var_2525, %var_2526, %var_2527) /* ty=(Tensor[(2, 5, 10), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(2, 5, 10), float32]) */
}

def @func_10564() -> Tensor[(11, 15, 15), float32] {
  %142 = @func_10271() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), float32], Tensor[(1920), int8], int8, Tensor[(624), uint8], Tensor[(11, 15, 15), float32]) */;
  %142.5
}

def @func_3391(%var_3389: Tensor[(6, 8, 8), float32], %var_3390: Tensor[(504), bool]) -> (Tensor[(6, 8, 8), float32], Tensor[(7, 12, 6), bool], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) {
  %157 = fn (%var_3360: Tensor[(6, 8, 8), float32], %var_3375: Tensor[(504), bool]) -> (Tensor[(6, 8, 8), float32], Tensor[(7, 12, 6), bool], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) {
    %143 = cast(%var_3360, dtype="float32") /* ty=Tensor[(6, 8, 8), float32] */;
    %144 = cast(meta[relay.Constant][15] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
    %145 = cast(%var_3375, dtype="bool") /* ty=Tensor[(504), bool] */;
    %146 = reshape(%144, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
    %147 = reshape(%145, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %148 = @func_1582(%146, %147) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
    %149 = %148.2;
    %150 = cast(%149, dtype="bool") /* ty=Tensor[(7, 12, 6), bool] */;
    %151 = cast(%var_3375, dtype="bool") /* ty=Tensor[(504), bool] */;
    %152 = reshape(%150, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
    %153 = reshape(%151, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
    %154 = @func_411(%152, %153) /* ty=(Tensor[(7, 12, 6), bool],) */;
    %155 = cosh(%143) /* ty=Tensor[(6, 8, 8), float32] */;
    %156 = %154.0;
    (%155, %149, meta[relay.Constant][15] /* ty=Tensor[(54), float32] */, %var_3375, %156)
  };
  %157(%var_3389, %var_3390) /* ty=(Tensor[(6, 8, 8), float32], Tensor[(7, 12, 6), bool], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) */
}

def @func_10837() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(13, 4), uint8], int8, Tensor[(96, 20), int8], Tensor[(624), uint8], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) {
  %175 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(13, 4), uint8], int8, Tensor[(96, 20), int8], Tensor[(624), uint8], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) {
    %158 = @func_8860() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
    %159 = @func_8877() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %160 = cast(meta[relay.Constant][16] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %161 = cast(meta[relay.Constant][17] /* ty=Tensor[(96, 20), int8] */, dtype="int8") /* ty=Tensor[(96, 20), int8] */;
    %162 = cast(meta[relay.Constant][18] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
    %163 = reshape(%160, newshape=[]) /* ty=int8 */;
    %164 = reshape(%161, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), int8] */;
    %165 = reshape(%162, newshape=[624]) /* ty=Tensor[(624), uint8] */;
    %166 = @func_4365(%163, %164, %165) /* ty=(Tensor[(16, 10, 12), bool], Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(13, 4), uint8], Tensor[(624), uint8]) */;
    %167 = @func_10186() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %168 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
    %169 = %158.1;
    %170 = %159.0;
    %171 = %166.3;
    %172 = %167.0;
    %173 = @func_8368() /* ty=Tensor[(11, 15, 15), float32] */;
    %174 = %168.0;
    (%169, %170, %171, meta[relay.Constant][16] /* ty=int8 */, meta[relay.Constant][17] /* ty=Tensor[(96, 20), int8] */, meta[relay.Constant][18] /* ty=Tensor[(624), uint8] */, %172, %173, %174)
  };
  %175() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(13, 4), uint8], int8, Tensor[(96, 20), int8], Tensor[(624), uint8], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */
}

def @func_2522(%var_2471: Tensor[(2, 5, 10), uint32], %var_2472: Tensor[(2, 5, 10), uint32], %var_2513: Tensor[(330), uint8], %var_2515: Tensor[(2, 5, 10), float64]) -> (Tensor[(2, 5, 10), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(2, 5, 10), float32]) {
  %176 = cast(%var_2472, dtype="bool") /* ty=Tensor[(2, 5, 10), bool] */;
  %177 = shape_of(%var_2471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%var_2471, dtype="bool") /* ty=Tensor[(2, 5, 10), bool] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %180 = greater(%178, %179) /* ty=Tensor[(2, 5, 10), bool] */;
  %181 = cast(%180, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
  %182 = rsqrt(%181) /* ty=Tensor[(2, 5, 10), float64] */;
  %183 = cast(%182, dtype="float64") /* ty=Tensor[(2, 5, 10), float64] */;
  %184 = cast(meta[relay.Constant][19] /* ty=Tensor[(110), uint8] */, dtype="uint8") /* ty=Tensor[(110), uint8] */;
  %185 = cast(%var_2513, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %186 = reshape(%184, newshape=[11, 1, 10]) /* ty=Tensor[(11, 1, 10), uint8] */;
  %187 = reshape(%185, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), uint8] */;
  %188 = cast(%var_2515, dtype="float32") /* ty=Tensor[(2, 5, 10), float32] */;
  %189 = shape_of(%182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%182, dtype="float32") /* ty=Tensor[(2, 5, 10), float32] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %192 = asinh(%183) /* ty=Tensor[(2, 5, 10), float64] */;
  %193 = @func_2342(%186, %187) /* ty=Tensor[(11, 3, 10), uint8] */;
  %194 = mod(%190, %191) /* ty=Tensor[(2, 5, 10), float32] */;
  (%192, %193, meta[relay.Constant][19] /* ty=Tensor[(110), uint8] */, %var_2513, %194)
}

def @func_10411() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %198 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
    %195 = @func_4910() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %196 = @func_8686() /* ty=Tensor[(11, 15, 15), float32] */;
    %197 = %195.0;
    (%196, %197)
  };
  %198() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_7662(%var_7660: Tensor[(980), float64]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(14, 5, 14), uint32], Tensor[(980), float64]) {
  @func_7659(%var_7660) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(14, 5, 14), uint32], Tensor[(980), float64]) */
}

def @func_11359() -> (Tensor[(11, 15, 15), float32],) {
  %201 = fn () -> (Tensor[(11, 15, 15), float32],) {
    %199 = @func_8566() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %200 = %199.0;
    (%200,)
  };
  %201() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_8527(%var_8511: int8, %var_8513: Tensor[(624), uint8]) -> (Tensor[(32), float64], Tensor[(4, 13, ?), uint8], int8, Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(11, 15, 15), float32]) {
  %202 = cast(%var_8511, dtype="int8") /* ty=int8 */;
  %203 = cast(meta[relay.Constant][20] /* ty=Tensor[(1920), int8] */, dtype="int8") /* ty=Tensor[(1920), int8] */;
  %204 = cast(%var_8513, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %205 = reshape(%202, newshape=[]) /* ty=int8 */;
  %206 = reshape(%203, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), int8] */;
  %207 = reshape(%204, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %208 = @func_4365(%205, %206, %207) /* ty=(Tensor[(16, 10, 12), bool], Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(13, 4), uint8], Tensor[(624), uint8]) */;
  %209 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
  %210 = @func_6332() /* ty=Tensor[(32), float64] */;
  %211 = %208.2;
  %212 = %209.1;
  (%210, %211, %var_8511, meta[relay.Constant][20] /* ty=Tensor[(1920), int8] */, %var_8513, %212)
}

def @func_10858() -> Tensor[(10, 9, 2), float64] {
  %213 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 1, 2), float64] */, dtype="float64") /* ty=Tensor[(10, 1, 2), float64] */;
  %214 = cast(meta[relay.Constant][22] /* ty=Tensor[(10, 9, 2), float64] */, dtype="float64") /* ty=Tensor[(10, 9, 2), float64] */;
  power(%213, %214) /* ty=Tensor[(10, 9, 2), float64] */
}

def @func_10453() -> (Tensor[(11, 15, 15), float32],) {
  @func_10451() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_4158() -> Tensor[(11, 15, 15), float32] {
  %215 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %215.0
}

def @func_6391() -> (Tensor[(11, 15, 15), float32],) {
  @func_6389() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_11032() -> (Tensor[(11, 15, 15), float32],) {
  %218 = fn () -> (Tensor[(11, 15, 15), float32],) {
    %216 = @func_5323() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %217 = %216.0;
    (%217,)
  };
  %218() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_4791(%var_4771: Tensor[(624), uint8], %var_4776: Tensor[(330, 1), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(13, 4), uint8], Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(100), uint32], Tensor[(330, 1), uint8], Tensor[(11, 15, 15), float32], Tensor[(52), uint8], Tensor[(504), bool], Tensor[(2, 5, 10), bool]) {
  %219 = cast(meta[relay.Constant][23] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %220 = cast(meta[relay.Constant][24] /* ty=Tensor[(1920), int8] */, dtype="int8") /* ty=Tensor[(1920), int8] */;
  %221 = cast(%var_4771, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %222 = reshape(%219, newshape=[]) /* ty=int8 */;
  %223 = reshape(%220, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), int8] */;
  %224 = reshape(%221, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %225 = @func_4365(%222, %223, %224) /* ty=(Tensor[(16, 10, 12), bool], Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(13, 4), uint8], Tensor[(624), uint8]) */;
  %226 = @func_3924() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %227 = @func_4735() /* ty=Tensor[(11, 15, 15), float32] */;
  %228 = cast(%227, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %229 = cast(%227, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %230 = cast(%var_4771, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %231 = cast(meta[relay.Constant][26] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %232 = reshape(%228, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %233 = reshape(%229, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), bool] */;
  %234 = reshape(%230, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %235 = reshape(%231, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %236 = @func_4029(%232, %233, %234, %235) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */;
  %237 = cast(meta[relay.Constant][25] /* ty=Tensor[(100), uint32] */, dtype="uint32") /* ty=Tensor[(100), uint32] */;
  %238 = cast(meta[relay.Constant][25] /* ty=Tensor[(100), uint32] */, dtype="uint32") /* ty=Tensor[(100), uint32] */;
  %239 = cast(%var_4776, dtype="uint8") /* ty=Tensor[(330, 1), uint8] */;
  %240 = cast(meta[relay.Constant][25] /* ty=Tensor[(100), uint32] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %241 = reshape(%237, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), uint32] */;
  %242 = reshape(%238, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), uint32] */;
  %243 = reshape(%239, newshape=[330]) /* ty=Tensor[(330), uint8] */;
  %244 = reshape(%240, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), float64] */;
  %245 = @func_2522(%241, %242, %243, %244) /* ty=(Tensor[(2, 5, 10), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(2, 5, 10), float32]) */;
  %246 = %245.0;
  %247 = cast(%246, dtype="bool") /* ty=Tensor[(2, 5, 10), bool] */;
  %248 = cast(meta[relay.Constant][23] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %249 = @func_4158() /* ty=Tensor[(11, 15, 15), float32] */;
  %250 = %225.3;
  %251 = %226.0;
  %252 = %236.2;
  %253 = less(%247, %248) /* ty=Tensor[(2, 5, 10), bool] */;
  (%249, %227, %250, meta[relay.Constant][24] /* ty=Tensor[(1920), int8] */, %var_4771, meta[relay.Constant][25] /* ty=Tensor[(100), uint32] */, %var_4776, %251, %252, meta[relay.Constant][26] /* ty=Tensor[(504), bool] */, %253)
}

def @func_10993() -> Tensor[(11, 15, 15), float32] {
  @func_9612() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_11191() -> (Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32]) {
  %257 = fn () -> (Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32]) {
    %254 = @func_9467() /* ty=(Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
    %255 = %254.0;
    %256 = @func_9154() /* ty=Tensor[(11, 15, 15), float32] */;
    (%255, %256)
  };
  %257() /* ty=(Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_6863(%var_6817: Tensor[(1, 6), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(?, 6), int8], Tensor[(3, 2, ?), float32]) {
  %258 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %259 = cast(%var_6817, dtype="float32") /* ty=Tensor[(1, 6), float32] */;
  %260 = reshape(%259, newshape=[3, 2, 1]) /* ty=Tensor[(3, 2, 1), float32] */;
  %261 = @func_5448(%260) /* ty=Tensor[(3, 2, 1), float32] */;
  %262 = cast(%261, dtype="int8") /* ty=Tensor[(3, 2, 1), int8] */;
  %263 = shape_of(%var_6817, dtype="int32") /* ty=Tensor[(2), int32] */;
  %264 = cast(%var_6817, dtype="int8") /* ty=Tensor[(1, 6), int8] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %266 = cast(%var_6817, dtype="float32") /* ty=Tensor[(1, 6), float32] */;
  %267 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%261, dtype="float32") /* ty=Tensor[(3, 2, 1), float32] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %270 = %258.0;
  %271 = bitwise_or(%264, %265) /* ty=Tensor[(?, 6), int8] */;
  %272 = divide(%268, %269) /* ty=Tensor[(3, 2, ?), float32] */;
  (%270, %271, %272)
}

def @func_7534(%var_7529: Tensor[(624), uint8], %var_7530: Tensor[(192, 2), float32], %var_7531: Tensor[(5, 66), float32], %var_7532: Tensor[(54), float32], %var_7533: Tensor[(5, 66), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(?, 13, 3), bool], uint16, Tensor[(624), uint8], Tensor[(504), bool], Tensor[(192, 2), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(5, 66), bool]) {
  @func_7527(%var_7529, %var_7530, %var_7531, %var_7532, %var_7533) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(?, 13, 3), bool], uint16, Tensor[(624), uint8], Tensor[(504), bool], Tensor[(192, 2), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(5, 66), bool]) */
}

def @func_9378(%var_9373: Tensor[(2, 192), float32], %var_9374: Tensor[(624), uint8], %var_9375: Tensor[(6, 84), bool], %var_9376: int64, %var_9377: Tensor[(9), int64]) -> (Tensor[(11, 15, 15), float32], Tensor[(384), float32], Tensor[(320, 2), bool], Tensor[(2, 192), float32], Tensor[(624), uint8], Tensor[(624), uint8], Tensor[(6, 84), bool], Tensor[(12, 3, 7), uint32], Tensor[(32), float64], Tensor[(54), float32], Tensor[(1, 9), int64], int64, Tensor[(9), int64]) {
  %301 = fn (%var_9292: Tensor[(2, 192), float32], %var_9299: Tensor[(624), uint8], %var_9300: Tensor[(6, 84), bool], %var_9321: int64, %var_9322: Tensor[(9), int64]) -> (Tensor[(11, 15, 15), float32], Tensor[(384), float32], Tensor[(320, 2), bool], Tensor[(2, 192), float32], Tensor[(624), uint8], Tensor[(624), uint8], Tensor[(6, 84), bool], Tensor[(12, 3, 7), uint32], Tensor[(32), float64], Tensor[(54), float32], Tensor[(1, 9), int64], int64, Tensor[(9), int64]) {
    %273 = cast(meta[relay.Constant][27] /* ty=Tensor[(320, 2), bool] */, dtype="bool") /* ty=Tensor[(320, 2), bool] */;
    %274 = cast(%var_9292, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
    %275 = reshape(%273, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), bool] */;
    %276 = reshape(%274, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %277 = @func_7305(%275, %276) /* ty=(Tensor[(16, 8, 5), bool], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(384), float32], Tensor[(504), bool]) */;
    %278 = @func_7183() /* ty=Tensor[(11, 15, 15), float32] */;
    %279 = cast(%278, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
    %280 = cast(%278, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
    %281 = cast(%var_9299, dtype="uint8") /* ty=Tensor[(624), uint8] */;
    %282 = cast(%var_9300, dtype="bool") /* ty=Tensor[(6, 84), bool] */;
    %283 = reshape(%279, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
    %284 = reshape(%280, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), bool] */;
    %285 = reshape(%281, newshape=[624]) /* ty=Tensor[(624), uint8] */;
    %286 = reshape(%282, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %287 = @func_4029(%283, %284, %285, %286) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */;
    %288 = cast(meta[relay.Constant][28] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
    %289 = cast(meta[relay.Constant][29] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
    %290 = reshape(%288, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), float64] */;
    %291 = reshape(%289, newshape=[9, 6]) /* ty=Tensor[(9, 6), float32] */;
    %292 = @func_4989(%290, %291) /* ty=(Tensor[(2, 8, 2), uint8], Tensor[(12, 3, 7), uint32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(9, 6), float32], Tensor[(2, 8, 2), float32]) */;
    %293 = cast(%var_9321, dtype="int64") /* ty=int64 */;
    %294 = cast(%var_9322, dtype="int64") /* ty=Tensor[(9), int64] */;
    %295 = reshape(%293, newshape=[]) /* ty=int64 */;
    %296 = reshape(%294, newshape=[1, 9]) /* ty=Tensor[(1, 9), int64] */;
    %297 = %277.3;
    %298 = %287.3;
    %299 = %292.1;
    %300 = @func_7995(%295, %296) /* ty=Tensor[(1, 9), int64] */;
    (%278, %297, meta[relay.Constant][27] /* ty=Tensor[(320, 2), bool] */, %var_9292, %298, %var_9299, %var_9300, %299, meta[relay.Constant][28] /* ty=Tensor[(32), float64] */, meta[relay.Constant][29] /* ty=Tensor[(54), float32] */, %300, %var_9321, %var_9322)
  };
  %301(%var_9373, %var_9374, %var_9375, %var_9376, %var_9377) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(384), float32], Tensor[(320, 2), bool], Tensor[(2, 192), float32], Tensor[(624), uint8], Tensor[(624), uint8], Tensor[(6, 84), bool], Tensor[(12, 3, 7), uint32], Tensor[(32), float64], Tensor[(54), float32], Tensor[(1, 9), int64], int64, Tensor[(9), int64]) */
}

def @func_1585(%var_1583: Tensor[(1, 9, 6), float32], %var_1584: Tensor[(504), bool]) -> (Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) {
  %320 = fn (%var_1546: Tensor[(1, 9, 6), float32], %var_1564: Tensor[(504), bool]) -> (Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) {
    %302 = cast(%var_1546, dtype="bool") /* ty=Tensor[(1, 9, 6), bool] */;
    %303 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 9, 6), float32] */, dtype="bool") /* ty=Tensor[(12, 9, 6), bool] */;
    %304 = cast(%var_1546, dtype="float32") /* ty=Tensor[(1, 9, 6), float32] */;
    %305 = atanh(%304) /* ty=Tensor[(1, 9, 6), float32] */;
    %306 = cast(%var_1546, dtype="uint32") /* ty=Tensor[(1, 9, 6), uint32] */;
    %307 = shape_of(%305, dtype="int32") /* ty=Tensor[(3), int32] */;
    %308 = cast(%305, dtype="uint32") /* ty=Tensor[(1, 9, 6), uint32] */;
    %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %310 = cast(%var_1564, dtype="bool") /* ty=Tensor[(504), bool] */;
    %311 = cast(%var_1564, dtype="bool") /* ty=Tensor[(504), bool] */;
    %312 = reshape(%310, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
    %313 = reshape(%311, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
    %314 = @func_411(%312, %313) /* ty=(Tensor[(7, 12, 6), bool],) */;
    %315 = cast(%305, dtype="float32") /* ty=Tensor[(1, 9, 6), float32] */;
    %316 = greater_equal(%302, %303) /* ty=Tensor[(12, 9, 6), bool] */;
    %317 = bitwise_xor(%308, %309) /* ty=Tensor[(?, 9, 6), uint32] */;
    %318 = %314.0;
    %319 = exp(%315) /* ty=Tensor[(1, 9, 6), float32] */;
    (%316, %317, %318, %var_1564, %319)
  };
  %320(%var_1583, %var_1584) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */
}

def @func_8688() -> Tensor[(11, 15, 15), float32] {
  @func_8686() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_9496() -> Tensor[(11, 15, 15), float32] {
  @func_9494() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_2342(%var_2299: Tensor[(11, 1, 10), uint8], %var_2300: Tensor[(11, 3, 10), uint8]) -> Tensor[(11, 3, 10), uint8] {
  %321 = cast(%var_2299, dtype="uint8") /* ty=Tensor[(11, 1, 10), uint8] */;
  %322 = cast(%var_2300, dtype="uint8") /* ty=Tensor[(11, 3, 10), uint8] */;
  bitwise_and(%321, %322) /* ty=Tensor[(11, 3, 10), uint8] */
}

def @func_5065() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) {
  %323 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %324 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 10, 2), float32] */, dtype="float32") /* ty=Tensor[(11, 10, 2), float32] */;
  %325 = acosh(%324) /* ty=Tensor[(11, 10, 2), float32] */;
  %326 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 10, 2), float32] */, dtype="bool") /* ty=Tensor[(11, 10, 2), bool] */;
  %327 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%325, dtype="bool") /* ty=Tensor[(11, 10, 2), bool] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %330 = %323.0;
  %331 = greater_equal(%328, %329) /* ty=Tensor[(11, 10, 2), bool] */;
  (%330, %331)
}

def @func_4094() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %336 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
    %332 = @func_3924() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %333 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %334 = %332.0;
    %335 = %333.0;
    (%334, %335)
  };
  %336() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_4910() -> (Tensor[(11, 15, 15), float32],) {
  %337 = @func_3924() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %338 = %337.0;
  (%338,)
}

def @func_11394() -> Tensor[(11, 15, 15), float32] {
  %340 = fn () -> Tensor[(11, 15, 15), float32] {
    %339 = @func_7736() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
    %339.3
  };
  %340() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_6887(%var_6885: Tensor[(15, 11, 2), int16], %var_6886: Tensor[(15, 11, 2), int16]) -> Tensor[(15, 11, 2), bool] {
  @func_6883(%var_6885, %var_6886) /* ty=Tensor[(15, 11, 2), bool] */
}

def @func_5872() -> (Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) {
  %341 = @func_5182() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %342 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %343 = %341.0;
  %344 = %342.0;
  (%343, %344)
}

def @func_5874() -> (Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) {
  @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */
}

def @func_4289() -> (Tensor[(11, 15, 15), float32],) {
  @func_4287() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_5448(%var_5445: Tensor[(3, 2, 1), float32]) -> Tensor[(3, 2, 1), float32] {
  %345 = cast(%var_5445, dtype="float32") /* ty=Tensor[(3, 2, 1), float32] */;
  cosh(%345) /* ty=Tensor[(3, 2, 1), float32] */
}

def @func_6953() -> (Tensor[(11, 15, 15), float32],) {
  @func_6951() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_6943() -> (Tensor[(12, 10, 14), float32],) {
  %348 = fn () -> (Tensor[(12, 10, 14), float32],) {
    %346 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 10, 14), float32] */, dtype="float32") /* ty=Tensor[(12, 10, 14), float32] */;
    %347 = asin(%346) /* ty=Tensor[(12, 10, 14), float32] */;
    (%347,)
  };
  %348() /* ty=(Tensor[(12, 10, 14), float32],) */
}

def @func_2807(%var_2805: uint16, %var_2806: Tensor[(7, 4, 1), uint16]) -> (Tensor[(7, 4, 1), bool], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) {
  @func_2803(%var_2805, %var_2806) /* ty=(Tensor[(7, 4, 1), bool], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */
}

def @func_9930() -> Tensor[(11, 15, 15), float32] {
  %349 = @func_7736() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %349.2
}

def @func_3629(%var_3626: Tensor[(4, 13, 1), uint8], %var_3627: Tensor[(4, 13, 1), uint8], %var_3628: Tensor[(4, 13, 12), uint8]) -> (Tensor[(4, 13, ?), uint8], Tensor[(4, 13, 12), float64]) {
  @func_3624(%var_3626, %var_3627, %var_3628) /* ty=(Tensor[(4, 13, ?), uint8], Tensor[(4, 13, 12), float64]) */
}

def @func_8877() -> (Tensor[(11, 15, 15), float32],) {
  %350 = @func_6453() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %351 = %350.0;
  (%351,)
}

def @func_5840(%var_5839: Tensor[(11, 15, 15), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) {
  %371 = fn (%var_5790: Tensor[(11, 15, 15), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) {
    %352 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %353 = %352.0;
    %354 = cast(%var_5790, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
    %355 = shape_of(%353, dtype="int32") /* ty=Tensor[(3), int32] */;
    %356 = cast(%353, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
    %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %358 = cast(meta[relay.Constant][33] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
    %359 = cast(meta[relay.Constant][34] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
    %360 = reshape(%358, newshape=[54]) /* ty=Tensor[(54), float32] */;
    %361 = reshape(%359, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %362 = @func_5096(%360, %361) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool]) */;
    %363 = cast(meta[relay.Constant][34] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
    %364 = cast(meta[relay.Constant][34] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
    %365 = reshape(%363, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
    %366 = reshape(%364, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
    %367 = @func_411(%365, %366) /* ty=(Tensor[(7, 12, 6), bool],) */;
    %368 = power(%356, %357) /* ty=Tensor[(11, 15, 15), float32] */;
    %369 = %362.1;
    %370 = %367.0;
    (%368, %369, meta[relay.Constant][33] /* ty=Tensor[(54), float32] */, meta[relay.Constant][34] /* ty=Tensor[(504), bool] */, %370)
  };
  %371(%var_5839) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) */
}

def @func_5533(%var_5531: Tensor[(1, 110), uint8], %var_5532: Tensor[(4, 110), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(330), uint8], Tensor[(4, 110), float64]) {
  @func_5529(%var_5531, %var_5532) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(330), uint8], Tensor[(4, 110), float64]) */
}

def @func_5600(%var_5584: Tensor[(3, 8, 13), float64]) -> Tensor[(3, 8, 13), float64] {
  %372 = cast(%var_5584, dtype="float64") /* ty=Tensor[(3, 8, 13), float64] */;
  sinh(%372) /* ty=Tensor[(3, 8, 13), float64] */
}

def @func_10039(%var_10035: int8, %var_10036: Tensor[(1920), int8], %var_10037: Tensor[(624), uint8], %var_10038: Tensor[(40), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(504), bool], Tensor[(36, 14), bool], Tensor[(13, 4), uint8], int8, Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(11, 15, 15), float32]) {
  @func_10033(%var_10035, %var_10036, %var_10037, %var_10038) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(504), bool], Tensor[(36, 14), bool], Tensor[(13, 4), uint8], int8, Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(11, 15, 15), float32]) */
}

def @func_11104(%var_11099: int32, %var_11100: Tensor[(2475), float32], %var_11101: Tensor[(4, 156), uint8], %var_11102: Tensor[(504), bool], %var_11103: Tensor[(15, 10, 10), int32]) -> (Tensor[(52), uint8], Tensor[(2475), float32], Tensor[(4, 156), uint8], Tensor[(504), bool], Tensor[(15, 10, 10), float64]) {
  %391 = fn (%var_11072: int32, %var_11083: Tensor[(2475), float32], %var_11084: Tensor[(4, 156), uint8], %var_11085: Tensor[(504), bool], %var_11087: Tensor[(15, 10, 10), int32]) -> (Tensor[(52), uint8], Tensor[(2475), float32], Tensor[(4, 156), uint8], Tensor[(504), bool], Tensor[(15, 10, 10), float64]) {
    %373 = cast(%var_11083, dtype="float32") /* ty=Tensor[(2475), float32] */;
    %374 = cast(%var_11083, dtype="bool") /* ty=Tensor[(2475), bool] */;
    %375 = cast(%var_11084, dtype="uint8") /* ty=Tensor[(4, 156), uint8] */;
    %376 = cast(%var_11085, dtype="bool") /* ty=Tensor[(504), bool] */;
    %377 = reshape(%373, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
    %378 = reshape(%374, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), bool] */;
    %379 = reshape(%375, newshape=[624]) /* ty=Tensor[(624), uint8] */;
    %380 = reshape(%376, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %381 = @func_4029(%377, %378, %379, %380) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */;
    %382 = cast(%var_11072, dtype="int32") /* ty=int32 */;
    %383 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 10, 10), int32] */, dtype="int32") /* ty=Tensor[(15, 10, 10), int32] */;
    %384 = bitwise_xor(%382, %383) /* ty=Tensor[(15, 10, 10), int32] */;
    %385 = cast(%var_11087, dtype="float64") /* ty=Tensor[(15, 10, 10), float64] */;
    %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(3), int32] */;
    %387 = cast(%384, dtype="float64") /* ty=Tensor[(15, 10, 10), float64] */;
    %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %389 = %381.2;
    %390 = divide(%387, %388) /* ty=Tensor[(15, 10, 10), float64] */;
    (%389, %var_11083, %var_11084, %var_11085, %390)
  };
  %391(%var_11099, %var_11100, %var_11101, %var_11102, %var_11103) /* ty=(Tensor[(52), uint8], Tensor[(2475), float32], Tensor[(4, 156), uint8], Tensor[(504), bool], Tensor[(15, 10, 10), float64]) */
}

def @func_3785(%var_3762: Tensor[(8, 6, 4), float32], %var_3771: Tensor[(8, 6, 4), float32]) -> (Tensor[(8, 6, 4), float64],) {
  %392 = cast(%var_3762, dtype="float32") /* ty=Tensor[(8, 6, 4), float32] */;
  %393 = asin(%392) /* ty=Tensor[(8, 6, 4), float32] */;
  %394 = cast(%var_3771, dtype="float64") /* ty=Tensor[(8, 6, 4), float64] */;
  %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%393, dtype="float64") /* ty=Tensor[(8, 6, 4), float64] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %398 = maximum(%396, %397) /* ty=Tensor[(8, 6, 4), float64] */;
  (%398,)
}

def @func_4029(%var_3991: Tensor[(11, 15, 15), float32], %var_4001: Tensor[(11, 15, 15), bool], %var_4011: Tensor[(624), uint8], %var_4019: Tensor[(504), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) {
  %399 = @func_3932() /* ty=Tensor[(11, 15, 15), float32] */;
  %400 = cast(%var_3991, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%399, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %404 = greater(%402, %403) /* ty=Tensor[(11, 15, 15), bool] */;
  %405 = cast(%var_4001, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %406 = shape_of(%404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(%404, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %409 = cast(meta[relay.Constant][36] /* ty=Tensor[(52), uint8] */, dtype="uint8") /* ty=Tensor[(52), uint8] */;
  %410 = cast(meta[relay.Constant][36] /* ty=Tensor[(52), uint8] */, dtype="uint8") /* ty=Tensor[(52), uint8] */;
  %411 = cast(%var_4011, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %412 = reshape(%409, newshape=[4, 13, 1]) /* ty=Tensor[(4, 13, 1), uint8] */;
  %413 = reshape(%410, newshape=[4, 13, 1]) /* ty=Tensor[(4, 13, 1), uint8] */;
  %414 = reshape(%411, newshape=[4, 13, 12]) /* ty=Tensor[(4, 13, 12), uint8] */;
  %415 = @func_3624(%412, %413, %414) /* ty=(Tensor[(4, 13, ?), uint8], Tensor[(4, 13, 12), float64]) */;
  %416 = cast(%var_4019, dtype="bool") /* ty=Tensor[(504), bool] */;
  %417 = cast(%var_4019, dtype="bool") /* ty=Tensor[(504), bool] */;
  %418 = reshape(%416, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %419 = reshape(%417, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %420 = @func_411(%418, %419) /* ty=(Tensor[(7, 12, 6), bool],) */;
  %421 = floor_mod(%407, %408) /* ty=Tensor[(11, 15, 15), float32] */;
  %422 = %415.0;
  %423 = %420.0;
  (%421, %422, meta[relay.Constant][36] /* ty=Tensor[(52), uint8] */, %var_4011, %423, %var_4019)
}

def @func_5451(%var_5449: Tensor[(3, 2, 1), float32]) -> Tensor[(3, 2, 1), float32] {
  @func_5448(%var_5449) /* ty=Tensor[(3, 2, 1), float32] */
}

def @func_6883(%var_6871: Tensor[(15, 11, 2), int16], %var_6872: Tensor[(15, 11, 2), int16]) -> Tensor[(15, 11, 2), bool] {
  %424 = cast(%var_6872, dtype="bool") /* ty=Tensor[(15, 11, 2), bool] */;
  %425 = shape_of(%var_6871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%var_6871, dtype="bool") /* ty=Tensor[(15, 11, 2), bool] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%426, %427) /* ty=Tensor[(15, 11, 2), bool] */
}

def @func_6786() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) {
  @func_6784() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */
}

def @func_7305(%var_7288: Tensor[(16, 8, 5), bool], %var_7299: Tensor[(384), float32]) -> (Tensor[(16, 8, 5), bool], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(384), float32], Tensor[(504), bool]) {
  %428 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 8, 5), bool] */, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %429 = shape_of(%var_7288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %430 = cast(%var_7288, dtype="bool") /* ty=Tensor[(16, 8, 5), bool] */;
  %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %432 = cast(%var_7299, dtype="float32") /* ty=Tensor[(384), float32] */;
  %433 = cast(meta[relay.Constant][38] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %434 = reshape(%432, newshape=[6, 8, 8]) /* ty=Tensor[(6, 8, 8), float32] */;
  %435 = reshape(%433, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %436 = @func_3388(%434, %435) /* ty=(Tensor[(6, 8, 8), float32], Tensor[(7, 12, 6), bool], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) */;
  %437 = logical_or(%430, %431) /* ty=Tensor[(16, 8, 5), bool] */;
  %438 = @func_6469() /* ty=Tensor[(11, 15, 15), float32] */;
  %439 = %436.2;
  (%437, %438, %439, %var_7299, meta[relay.Constant][38] /* ty=Tensor[(504), bool] */)
}

def @func_5645() -> (Tensor[(11, 15, 15), float32],) {
  @func_5643() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_6333() -> Tensor[(32), float64] {
  %441 = fn () -> Tensor[(32), float64] {
    %440 = @func_5710() /* ty=(Tensor[(11, 10, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(32), float64], Tensor[(54), float32]) */;
    %440.2
  };
  %441() /* ty=Tensor[(32), float64] */
}

def @func_7309(%var_7307: Tensor[(16, 8, 5), bool], %var_7308: Tensor[(384), float32]) -> (Tensor[(16, 8, 5), bool], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(384), float32], Tensor[(504), bool]) {
  @func_7305(%var_7307, %var_7308) /* ty=(Tensor[(16, 8, 5), bool], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(384), float32], Tensor[(504), bool]) */
}

def @func_10711(%var_10709: Tensor[(2, 8, 6), float32], %var_10710: Tensor[(40), uint8]) -> (Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(2, 8, 6), bool], Tensor[(2, 8, 6), float64]) {
  %457 = fn (%var_10636: Tensor[(2, 8, 6), float32], %var_10644: Tensor[(40), uint8]) -> (Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(2, 8, 6), bool], Tensor[(2, 8, 6), float64]) {
    %442 = cast(%var_10644, dtype="uint8") /* ty=Tensor[(40), uint8] */;
    %443 = reshape(%442, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
    %444 = @func_5389(%443) /* ty=(Tensor[(8, 5, 8), uint8],) */;
    %445 = cast(%var_10636, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
    %446 = log(%445) /* ty=Tensor[(2, 8, 6), float32] */;
    %447 = cast(%446, dtype="bool") /* ty=Tensor[(2, 8, 6), bool] */;
    %448 = shape_of(%var_10636, dtype="int32") /* ty=Tensor[(3), int32] */;
    %449 = cast(%var_10636, dtype="bool") /* ty=Tensor[(2, 8, 6), bool] */;
    %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %451 = cast(%446, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
    %452 = log10(%451) /* ty=Tensor[(2, 8, 6), float64] */;
    %453 = cast(%452, dtype="float64") /* ty=Tensor[(2, 8, 6), float64] */;
    %454 = %444.0;
    %455 = greater(%449, %450) /* ty=Tensor[(2, 8, 6), bool] */;
    %456 = sin(%453) /* ty=Tensor[(2, 8, 6), float64] */;
    (%454, %var_10644, %455, %456)
  };
  %457(%var_10709, %var_10710) /* ty=(Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(2, 8, 6), bool], Tensor[(2, 8, 6), float64]) */
}

def @func_5603(%var_5601: Tensor[(3, 8, 13), float64]) -> Tensor[(3, 8, 13), float64] {
  @func_5600(%var_5601) /* ty=Tensor[(3, 8, 13), float64] */
}

def @func_8460() -> (Tensor[(11, 15, 15), float32],) {
  %460 = fn () -> (Tensor[(11, 15, 15), float32],) {
    %458 = @func_7962() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %459 = %458.0;
    (%459,)
  };
  %460() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_8686() -> Tensor[(11, 15, 15), float32] {
  %461 = @func_8299() /* ty=Tensor[(11, 15, 15), float32] */;
  %462 = cast(%461, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  atanh(%462) /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_5226(%var_5224: Tensor[(11, 6, 3), float32]) -> Tensor[(11, 6, 3), float64] {
  @func_5223(%var_5224) /* ty=Tensor[(11, 6, 3), float64] */
}

def @func_4176() -> (Tensor[(11, 15, 15), float64],) {
  %467 = fn () -> (Tensor[(11, 15, 15), float64],) {
    %463 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %464 = %463.0;
    %465 = cast(%464, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
    %466 = log(%465) /* ty=Tensor[(11, 15, 15), float64] */;
    (%466,)
  };
  %467() /* ty=(Tensor[(11, 15, 15), float64],) */
}

def @func_5529(%var_5514: Tensor[(1, 110), uint8], %var_5518: Tensor[(4, 110), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(330), uint8], Tensor[(4, 110), float64]) {
  %468 = @func_4287() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %469 = cast(%var_5514, dtype="uint8") /* ty=Tensor[(1, 110), uint8] */;
  %470 = cast(meta[relay.Constant][39] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %471 = reshape(%469, newshape=[11, 1, 10]) /* ty=Tensor[(11, 1, 10), uint8] */;
  %472 = reshape(%470, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), uint8] */;
  %473 = cast(%var_5514, dtype="float64") /* ty=Tensor[(1, 110), float64] */;
  %474 = cast(%var_5518, dtype="float64") /* ty=Tensor[(4, 110), float64] */;
  %475 = divide(%473, %474) /* ty=Tensor[(4, 110), float64] */;
  %476 = cast(%475, dtype="float64") /* ty=Tensor[(4, 110), float64] */;
  %477 = %468.0;
  %478 = @func_2342(%471, %472) /* ty=Tensor[(11, 3, 10), uint8] */;
  %479 = log10(%476) /* ty=Tensor[(4, 110), float64] */;
  (%477, %478, meta[relay.Constant][39] /* ty=Tensor[(330), uint8] */, %479)
}

def @func_6067(%var_6063: Tensor[(54), float32], %var_6064: Tensor[(504), bool], %var_6065: Tensor[(110), uint8], %var_6066: Tensor[(330), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(1, 252), bool], Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8]) {
  %520 = fn (%var_5961: Tensor[(54), float32], %var_5962: Tensor[(504), bool], %var_6019: Tensor[(110), uint8], %var_6020: Tensor[(330), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(1, 252), bool], Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8]) {
    %480 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
    %481 = cast(%var_5961, dtype="float32") /* ty=Tensor[(54), float32] */;
    %482 = cast(%var_5962, dtype="bool") /* ty=Tensor[(504), bool] */;
    %483 = reshape(%481, newshape=[54]) /* ty=Tensor[(54), float32] */;
    %484 = reshape(%482, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %485 = @func_5096(%483, %484) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool]) */;
    %486 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
    %487 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %488 = cast(%var_6019, dtype="uint8") /* ty=Tensor[(110), uint8] */;
    %489 = cast(%var_6020, dtype="uint8") /* ty=Tensor[(330), uint8] */;
    %490 = reshape(%488, newshape=[11, 1, 10]) /* ty=Tensor[(11, 1, 10), uint8] */;
    %491 = reshape(%489, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), uint8] */;
    %492 = cast(%var_5961, dtype="float32") /* ty=Tensor[(54), float32] */;
    %493 = cast(%var_5962, dtype="bool") /* ty=Tensor[(504), bool] */;
    %494 = reshape(%492, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
    %495 = reshape(%493, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %496 = @func_1582(%494, %495) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
    %497 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 252), bool] */, dtype="bool") /* ty=Tensor[(1, 252), bool] */;
    %498 = cast(%var_5962, dtype="bool") /* ty=Tensor[(504), bool] */;
    %499 = cast(%var_5961, dtype="float32") /* ty=Tensor[(54), float32] */;
    %500 = reshape(%497, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), bool] */;
    %501 = reshape(%498, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %502 = reshape(%499, newshape=[54]) /* ty=Tensor[(54), float32] */;
    %503 = @func_1674(%500, %501, %502) /* ty=(Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) */;
    %504 = %503.0;
    %505 = cast(%504, dtype="float32") /* ty=Tensor[(7, 12, 6), float32] */;
    %506 = @func_5643() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %507 = cast(%var_6019, dtype="uint8") /* ty=Tensor[(110), uint8] */;
    %508 = cast(%var_6020, dtype="uint8") /* ty=Tensor[(330), uint8] */;
    %509 = reshape(%507, newshape=[11, 1, 10]) /* ty=Tensor[(11, 1, 10), uint8] */;
    %510 = reshape(%508, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), uint8] */;
    %511 = %480.1;
    %512 = %485.0;
    %513 = %486.0;
    %514 = %487.0;
    %515 = @func_2342(%490, %491) /* ty=Tensor[(11, 3, 10), uint8] */;
    %516 = %496.1;
    %517 = cosh(%505) /* ty=Tensor[(7, 12, 6), float32] */;
    %518 = %506.0;
    %519 = @func_2342(%509, %510) /* ty=Tensor[(11, 3, 10), uint8] */;
    (%511, %512, %var_5961, %var_5962, meta[relay.Constant][40] /* ty=Tensor[(1, 252), bool] */, %513, %514, %515, %var_6019, %var_6020, %516, %517, %518, %519)
  };
  %520(%var_6063, %var_6064, %var_6065, %var_6066) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(1, 252), bool], Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8]) */
}

def @func_6196(%var_6194: Tensor[(54), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(504), bool], Tensor[(54), float32], Tensor[(504), bool], Tensor[(11, 15, 15), float64], Tensor[(504), bool], Tensor[(4, 728), int16], uint16, Tensor[(7, 12, 6), bool]) {
  @func_6193(%var_6194) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(504), bool], Tensor[(54), float32], Tensor[(504), bool], Tensor[(11, 15, 15), float64], Tensor[(504), bool], Tensor[(4, 728), int16], uint16, Tensor[(7, 12, 6), bool]) */
}

def @func_10112() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %523 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
    %521 = @func_9612() /* ty=Tensor[(11, 15, 15), float32] */;
    %522 = @func_6406() /* ty=Tensor[(11, 15, 15), float32] */;
    (%521, %522)
  };
  %523() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_10272() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), float32], Tensor[(1920), int8], int8, Tensor[(624), uint8], Tensor[(11, 15, 15), float32]) {
  %537 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), float32], Tensor[(1920), int8], int8, Tensor[(624), uint8], Tensor[(11, 15, 15), float32]) {
    %524 = @func_8566() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %525 = @func_5683() /* ty=(Tensor[(11, 10, 2), bool],) */;
    %526 = %525.0;
    %527 = cast(%526, dtype="float32") /* ty=Tensor[(11, 10, 2), float32] */;
    %528 = cast(meta[relay.Constant][41] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %529 = cast(meta[relay.Constant][42] /* ty=Tensor[(624), uint8] */, dtype="uint8") /* ty=Tensor[(624), uint8] */;
    %530 = reshape(%528, newshape=[]) /* ty=int8 */;
    %531 = reshape(%529, newshape=[624]) /* ty=Tensor[(624), uint8] */;
    %532 = @func_8527(%530, %531) /* ty=(Tensor[(32), float64], Tensor[(4, 13, ?), uint8], int8, Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(11, 15, 15), float32]) */;
    %533 = %524.0;
    %534 = sqrt(%527) /* ty=Tensor[(11, 10, 2), float32] */;
    %535 = %532.3;
    %536 = @func_6685() /* ty=Tensor[(11, 15, 15), float32] */;
    (%533, %534, %535, meta[relay.Constant][41] /* ty=int8 */, meta[relay.Constant][42] /* ty=Tensor[(624), uint8] */, %536)
  };
  %537() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), float32], Tensor[(1920), int8], int8, Tensor[(624), uint8], Tensor[(11, 15, 15), float32]) */
}

def @func_9410() -> (Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) {
  @func_9408() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) */
}

def @func_7801() -> Tensor[(11, 15, 15), float32] {
  @func_7799() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_10066() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %541 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
    %538 = @func_7962() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %539 = @func_5285() /* ty=Tensor[(11, 15, 15), float32] */;
    %540 = %538.0;
    (%539, %540)
  };
  %541() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_3789(%var_3787: Tensor[(8, 6, 4), float32], %var_3788: Tensor[(8, 6, 4), float32]) -> (Tensor[(8, 6, 4), float64],) {
  @func_3785(%var_3787, %var_3788) /* ty=(Tensor[(8, 6, 4), float64],) */
}

def @func_6975(%var_6974: Tensor[(13, 1, 8), float32]) -> Tensor[(13, 1, 8), float32] {
  %543 = fn (%var_6957: Tensor[(13, 1, 8), float32]) -> Tensor[(13, 1, 8), float32] {
    %542 = cast(%var_6957, dtype="float32") /* ty=Tensor[(13, 1, 8), float32] */;
    tan(%542) /* ty=Tensor[(13, 1, 8), float32] */
  };
  %543(%var_6974) /* ty=Tensor[(13, 1, 8), float32] */
}

def @func_11341() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %547 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
    %544 = @func_8566() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %545 = @func_9930() /* ty=Tensor[(11, 15, 15), float32] */;
    %546 = %544.0;
    (%545, %546)
  };
  %547() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_6407() -> Tensor[(11, 15, 15), float32] {
  %548 = fn () -> Tensor[(11, 15, 15), float32] {
    @func_4158() /* ty=Tensor[(11, 15, 15), float32] */
  };
  %548() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_7799() -> Tensor[(11, 15, 15), float32] {
  %549 = @func_5366() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %549.0
}

def @func_6603(%var_6601: uint16, %var_6602: Tensor[(624), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool], Tensor[(11, 6, 3), float64], Tensor[(198), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(100), uint32], Tensor[(330), uint8], Tensor[(11, 15, 15), float32], uint16, uint16, Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool], Tensor[(?, 13, 3), uint8], Tensor[(?, 13, 3), bool], Tensor[(?, 13, 3), float64]) {
  %610 = fn (%var_6563: uint16, %var_6573: Tensor[(624), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool], Tensor[(11, 6, 3), float64], Tensor[(198), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(100), uint32], Tensor[(330), uint8], Tensor[(11, 15, 15), float32], uint16, uint16, Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool], Tensor[(?, 13, 3), uint8], Tensor[(?, 13, 3), bool], Tensor[(?, 13, 3), float64]) {
    %550 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
    %551 = cast(meta[relay.Constant][43] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
    %552 = reshape(%551, newshape=[11, 6, 3]) /* ty=Tensor[(11, 6, 3), float32] */;
    %553 = @func_6453() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
    %554 = cast(meta[relay.Constant][44] /* ty=Tensor[(100), uint32] */, dtype="uint32") /* ty=Tensor[(100), uint32] */;
    %555 = cast(meta[relay.Constant][44] /* ty=Tensor[(100), uint32] */, dtype="uint32") /* ty=Tensor[(100), uint32] */;
    %556 = cast(meta[relay.Constant][45] /* ty=Tensor[(330), uint8] */, dtype="uint8") /* ty=Tensor[(330), uint8] */;
    %557 = cast(meta[relay.Constant][44] /* ty=Tensor[(100), uint32] */, dtype="float64") /* ty=Tensor[(100), float64] */;
    %558 = reshape(%554, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), uint32] */;
    %559 = reshape(%555, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), uint32] */;
    %560 = reshape(%556, newshape=[330]) /* ty=Tensor[(330), uint8] */;
    %561 = reshape(%557, newshape=[2, 5, 10]) /* ty=Tensor[(2, 5, 10), float64] */;
    %562 = @func_2522(%558, %559, %560, %561) /* ty=(Tensor[(2, 5, 10), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(2, 5, 10), float32]) */;
    %563 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
    %564 = cast(%var_6563, dtype="uint16") /* ty=uint16 */;
    %565 = reshape(%564, newshape=[]) /* ty=uint16 */;
    %566 = @func_4729(%565) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(11, 15, 15), float32], Tensor[(7, 4, 1), bool], uint16, Tensor[(28), uint16]) */;
    %567 = %550.1;
    %568 = cast(%567, dtype="bool") /* ty=Tensor[(11, 10, 2), bool] */;
    %569 = cast(%var_6573, dtype="uint8") /* ty=Tensor[(624), uint8] */;
    %570 = cast(meta[relay.Constant][46] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
    %571 = reshape(%568, newshape=[11, 10, 2]) /* ty=Tensor[(11, 10, 2), bool] */;
    %572 = reshape(%569, newshape=[624]) /* ty=Tensor[(624), uint8] */;
    %573 = reshape(%570, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %574 = @func_5435(%571, %572, %573) /* ty=(Tensor[(11, 10, 2), float32], Tensor[(11, 10, 2), uint16], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool]) */;
    %575 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 13, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
    %576 = cos(%575) /* ty=Tensor[(1, 13, 3), float64] */;
    %577 = cast(%576, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
    %578 = exp(%577) /* ty=Tensor[(1, 13, 3), float64] */;
    %579 = cast(%578, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
    %580 = sinh(%579) /* ty=Tensor[(1, 13, 3), float64] */;
    %581 = cast(%578, dtype="float32") /* ty=Tensor[(1, 13, 3), float32] */;
    %582 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
    %583 = cast(%580, dtype="float32") /* ty=Tensor[(1, 13, 3), float32] */;
    %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %585 = multiply(%583, %584) /* ty=Tensor[(?, 13, 3), float32] */;
    %586 = cast(%585, dtype="bool") /* ty=Tensor[(?, 13, 3), bool] */;
    %587 = shape_of(%576, dtype="int32") /* ty=Tensor[(3), int32] */;
    %588 = cast(%576, dtype="bool") /* ty=Tensor[(1, 13, 3), bool] */;
    %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %590 = greater_equal(%588, %589) /* ty=Tensor[(?, 13, 3), bool] */;
    %591 = cast(%580, dtype="uint8") /* ty=Tensor[(1, 13, 3), uint8] */;
    %592 = shape_of(%590, dtype="int32") /* ty=Tensor[(3), int32] */;
    %593 = cast(%590, dtype="uint8") /* ty=Tensor[(?, 13, 3), uint8] */;
    %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %595 = cast(%585, dtype="bool") /* ty=Tensor[(?, 13, 3), bool] */;
    %596 = shape_of(%580, dtype="int32") /* ty=Tensor[(3), int32] */;
    %597 = cast(%580, dtype="bool") /* ty=Tensor[(1, 13, 3), bool] */;
    %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %599 = cast(%585, dtype="float64") /* ty=Tensor[(?, 13, 3), float64] */;
    %600 = @func_5666() /* ty=Tensor[(11, 15, 15), float32] */;
    %601 = @func_5223(%552) /* ty=Tensor[(11, 6, 3), float64] */;
    %602 = %553.1;
    %603 = %562.1;
    %604 = %563.0;
    %605 = %566.6;
    %606 = %574.3;
    %607 = bitwise_or(%593, %594) /* ty=Tensor[(?, 13, 3), uint8] */;
    %608 = logical_or(%597, %598) /* ty=Tensor[(?, 13, 3), bool] */;
    %609 = acosh(%599) /* ty=Tensor[(?, 13, 3), float64] */;
    (%600, %567, %601, meta[relay.Constant][43] /* ty=Tensor[(198), float32] */, %602, %603, meta[relay.Constant][44] /* ty=Tensor[(100), uint32] */, meta[relay.Constant][45] /* ty=Tensor[(330), uint8] */, %604, %605, %var_6563, %606, %var_6573, meta[relay.Constant][46] /* ty=Tensor[(504), bool] */, %607, %608, %609)
  };
  %610(%var_6601, %var_6602) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool], Tensor[(11, 6, 3), float64], Tensor[(198), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(100), uint32], Tensor[(330), uint8], Tensor[(11, 15, 15), float32], uint16, uint16, Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool], Tensor[(?, 13, 3), uint8], Tensor[(?, 13, 3), bool], Tensor[(?, 13, 3), float64]) */
}

def @func_4035(%var_4031: Tensor[(11, 15, 15), float32], %var_4032: Tensor[(11, 15, 15), bool], %var_4033: Tensor[(624), uint8], %var_4034: Tensor[(504), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) {
  @func_4029(%var_4031, %var_4032, %var_4033, %var_4034) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */
}

def @func_7736() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %611 = @func_4093() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %612 = @func_7562() /* ty=Tensor[(11, 15, 15), float32] */;
  %613 = @func_7347() /* ty=Tensor[(11, 15, 15), float32] */;
  %614 = %611.0;
  %615 = @func_6685() /* ty=Tensor[(11, 15, 15), float32] */;
  (%612, %613, %614, %615)
}

def @func_414(%var_412: Tensor[(7, 12, 6), bool], %var_413: Tensor[(7, 12, 6), bool]) -> (Tensor[(7, 12, 6), bool],) {
  %621 = fn (%var_394: Tensor[(7, 12, 6), bool], %var_395: Tensor[(7, 12, 6), bool]) -> (Tensor[(7, 12, 6), bool],) {
    %616 = cast(%var_395, dtype="bool") /* ty=Tensor[(7, 12, 6), bool] */;
    %617 = shape_of(%var_394, dtype="int32") /* ty=Tensor[(3), int32] */;
    %618 = cast(%var_394, dtype="bool") /* ty=Tensor[(7, 12, 6), bool] */;
    %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %620 = logical_or(%618, %619) /* ty=Tensor[(7, 12, 6), bool] */;
    (%620,)
  };
  %621(%var_412, %var_413) /* ty=(Tensor[(7, 12, 6), bool],) */
}

def @func_5621() -> (Tensor[(11, 15, 15), float32],) {
  %622 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %623 = %622.0;
  (%623,)
}

def @func_8860() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %624 = @func_7736() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %625 = %624.0;
  %626 = @func_7183() /* ty=Tensor[(11, 15, 15), float32] */;
  (%625, %626)
}

def @func_4901(%var_4898: Tensor[(16, 14, 13), int16], %var_4899: uint16, %var_4900: Tensor[(504), bool]) -> (Tensor[(16, 14, 13), int16], Tensor[(16, 14, 13), float64], Tensor[(11, 15, 15), float32], uint16, Tensor[(11, 15, 15), float64], Tensor[(16, 14, 13), float32], Tensor[(1, 9, 6), float32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(12, 9, 6), bool]) {
  %658 = fn (%var_4815: Tensor[(16, 14, 13), int16], %var_4848: uint16, %var_4881: Tensor[(504), bool]) -> (Tensor[(16, 14, 13), int16], Tensor[(16, 14, 13), float64], Tensor[(11, 15, 15), float32], uint16, Tensor[(11, 15, 15), float64], Tensor[(16, 14, 13), float32], Tensor[(1, 9, 6), float32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(12, 9, 6), bool]) {
    %627 = cast(%var_4815, dtype="int16") /* ty=Tensor[(16, 14, 13), int16] */;
    %628 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(16, 14, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %629 = cast(meta[relay.Constant][48] /* ty=Tensor[(16, 14, 13), int16] */, dtype="int16") /* ty=Tensor[(16, 14, 13), int16] */;
    %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %631 = cast(%var_4815, dtype="float64") /* ty=Tensor[(16, 14, 13), float64] */;
    %632 = tan(%631) /* ty=Tensor[(16, 14, 13), float64] */;
    %633 = cast(%632, dtype="float64") /* ty=Tensor[(16, 14, 13), float64] */;
    %634 = cast(%var_4848, dtype="uint16") /* ty=uint16 */;
    %635 = reshape(%634, newshape=[]) /* ty=uint16 */;
    %636 = @func_4729(%635) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(11, 15, 15), float32], Tensor[(7, 4, 1), bool], uint16, Tensor[(28), uint16]) */;
    %637 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
    %638 = cast(%632, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
    %639 = cast(meta[relay.Constant][49] /* ty=Tensor[(252), bool] */, dtype="bool") /* ty=Tensor[(252), bool] */;
    %640 = cast(%var_4881, dtype="bool") /* ty=Tensor[(504), bool] */;
    %641 = cast(meta[relay.Constant][50] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
    %642 = reshape(%639, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), bool] */;
    %643 = reshape(%640, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %644 = reshape(%641, newshape=[54]) /* ty=Tensor[(54), float32] */;
    %645 = @func_1674(%642, %643, %644) /* ty=(Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) */;
    %646 = cast(meta[relay.Constant][50] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
    %647 = cast(%var_4881, dtype="bool") /* ty=Tensor[(504), bool] */;
    %648 = reshape(%646, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
    %649 = reshape(%647, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %650 = @func_1582(%648, %649) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
    %651 = right_shift(%629, %630) /* ty=Tensor[(16, 14, 13), int16] */;
    %652 = cos(%633) /* ty=Tensor[(16, 14, 13), float64] */;
    %653 = %636.0;
    %654 = %637.0;
    %655 = acos(%638) /* ty=Tensor[(16, 14, 13), float32] */;
    %656 = %645.2;
    %657 = %650.0;
    (%651, %652, %653, %var_4848, %654, %655, %656, meta[relay.Constant][49] /* ty=Tensor[(252), bool] */, %var_4881, meta[relay.Constant][50] /* ty=Tensor[(54), float32] */, %657)
  };
  %658(%var_4898, %var_4899, %var_4900) /* ty=(Tensor[(16, 14, 13), int16], Tensor[(16, 14, 13), float64], Tensor[(11, 15, 15), float32], uint16, Tensor[(11, 15, 15), float64], Tensor[(16, 14, 13), float32], Tensor[(1, 9, 6), float32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(12, 9, 6), bool]) */
}

def @func_7527(%var_7428: Tensor[(624), uint8], %var_7433: Tensor[(192, 2), float32], %var_7442: Tensor[(5, 66), float32], %var_7472: Tensor[(54), float32], %var_7522: Tensor[(5, 66), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(?, 13, 3), bool], uint16, Tensor[(624), uint8], Tensor[(504), bool], Tensor[(192, 2), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(54), float32], Tensor[(5, 66), bool]) {
  %659 = @func_6389() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %660 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 66), int16] */, dtype="int16") /* ty=Tensor[(5, 66), int16] */;
  %661 = reshape(%660, newshape=[330]) /* ty=Tensor[(330), int16] */;
  %662 = @func_7273(%661) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(3, 8, 13), float64], Tensor[(15, 11, 2), bool], Tensor[(330), int16], Tensor[(312), float64]) */;
  %663 = cast(meta[relay.Constant][52] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %664 = cast(%var_7428, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %665 = reshape(%663, newshape=[]) /* ty=uint16 */;
  %666 = reshape(%664, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %667 = @func_6600(%665, %666) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool], Tensor[(11, 6, 3), float64], Tensor[(198), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(100), uint32], Tensor[(330), uint8], Tensor[(11, 15, 15), float32], uint16, uint16, Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool], Tensor[(?, 13, 3), uint8], Tensor[(?, 13, 3), bool], Tensor[(?, 13, 3), float64]) */;
  %668 = cast(%var_7433, dtype="float32") /* ty=Tensor[(192, 2), float32] */;
  %669 = reshape(%668, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %670 = @func_7205(%669) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(7, 12, 6), bool], Tensor[(384), float32], Tensor[(504), bool]) */;
  %671 = @func_6784() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */;
  %672 = cast(%var_7472, dtype="float32") /* ty=Tensor[(54), float32] */;
  %673 = %670.3;
  %674 = cast(%673, dtype="bool") /* ty=Tensor[(504), bool] */;
  %675 = reshape(%672, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %676 = reshape(%674, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %677 = @func_5096(%675, %676) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool]) */;
  %678 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 66), int16] */, dtype="float32") /* ty=Tensor[(5, 66), float32] */;
  %679 = rsqrt(%678) /* ty=Tensor[(5, 66), float32] */;
  %680 = cast(%var_7442, dtype="float32") /* ty=Tensor[(5, 66), float32] */;
  %681 = shape_of(%679, dtype="int32") /* ty=Tensor[(2), int32] */;
  %682 = cast(%679, dtype="float32") /* ty=Tensor[(5, 66), float32] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %684 = mod(%682, %683) /* ty=Tensor[(5, 66), float32] */;
  %685 = cast(%var_7522, dtype="bool") /* ty=Tensor[(5, 66), bool] */;
  %686 = shape_of(%684, dtype="int32") /* ty=Tensor[(2), int32] */;
  %687 = cast(%684, dtype="bool") /* ty=Tensor[(5, 66), bool] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %689 = %659.0;
  %690 = %662.0;
  %691 = %667.15;
  %692 = @func_5285() /* ty=Tensor[(11, 15, 15), float32] */;
  %693 = %671.0;
  %694 = %677.2;
  %695 = logical_or(%687, %688) /* ty=Tensor[(5, 66), bool] */;
  (%689, %690, %691, meta[relay.Constant][52] /* ty=uint16 */, %var_7428, %673, %var_7433, %692, %693, %694, %var_7472, %695)
}

def @func_7149(%var_7145: Tensor[(252), bool], %var_7146: Tensor[(330), uint8], %var_7147: Tensor[(12, 42), bool], %var_7148: Tensor[(54), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(32), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(12, 42), bool], Tensor[(54), float32]) {
  @func_7143(%var_7145, %var_7146, %var_7147, %var_7148) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(32), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(12, 42), bool], Tensor[(54), float32]) */
}

def @func_6470() -> Tensor[(11, 15, 15), float32] {
  %697 = fn () -> Tensor[(11, 15, 15), float32] {
    %696 = @func_6389() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %696.0
  };
  %697() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_4365(%var_4339: int8, %var_4340: Tensor[(16, 10, 12), int8], %var_4363: Tensor[(624), uint8]) -> (Tensor[(16, 10, 12), bool], Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(13, 4), uint8], Tensor[(624), uint8]) {
  %698 = cast(%var_4339, dtype="bool") /* ty=bool */;
  %699 = cast(%var_4340, dtype="bool") /* ty=Tensor[(16, 10, 12), bool] */;
  %700 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %701 = cast(meta[relay.Constant][53] /* ty=Tensor[(13, 4), uint8] */, dtype="uint8") /* ty=Tensor[(13, 4), uint8] */;
  %702 = cast(meta[relay.Constant][53] /* ty=Tensor[(13, 4), uint8] */, dtype="uint8") /* ty=Tensor[(13, 4), uint8] */;
  %703 = cast(%var_4363, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %704 = reshape(%701, newshape=[4, 13, 1]) /* ty=Tensor[(4, 13, 1), uint8] */;
  %705 = reshape(%702, newshape=[4, 13, 1]) /* ty=Tensor[(4, 13, 1), uint8] */;
  %706 = reshape(%703, newshape=[4, 13, 12]) /* ty=Tensor[(4, 13, 12), uint8] */;
  %707 = @func_3624(%704, %705, %706) /* ty=(Tensor[(4, 13, ?), uint8], Tensor[(4, 13, 12), float64]) */;
  %708 = less(%698, %699) /* ty=Tensor[(16, 10, 12), bool] */;
  %709 = %700.0;
  %710 = %707.0;
  (%708, %709, %710, meta[relay.Constant][53] /* ty=Tensor[(13, 4), uint8] */, %var_4363)
}

def @func_5683() -> (Tensor[(11, 10, 2), bool],) {
  %711 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
  %712 = %711.1;
  (%712,)
}

def @func_4613(%var_4612: Tensor[(54), float32]) -> (Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(8, 6, 4), float64], Tensor[(192), float32], Tensor[(504), bool], Tensor[(54), float32], Tensor[(504), bool]) {
  %736 = fn (%var_4608: Tensor[(54), float32]) -> (Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(8, 6, 4), float64], Tensor[(192), float32], Tensor[(504), bool], Tensor[(54), float32], Tensor[(504), bool]) {
    %713 = @func_3924() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %714 = %713.0;
    %715 = cast(%714, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
    %716 = cast(%714, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
    %717 = sqrt(%716) /* ty=Tensor[(11, 15, 15), float64] */;
    %718 = cast(%717, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
    %719 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
    %720 = cast(meta[relay.Constant][54] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %721 = cast(meta[relay.Constant][54] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %722 = reshape(%720, newshape=[8, 6, 4]) /* ty=Tensor[(8, 6, 4), float32] */;
    %723 = reshape(%721, newshape=[8, 6, 4]) /* ty=Tensor[(8, 6, 4), float32] */;
    %724 = @func_3785(%722, %723) /* ty=(Tensor[(8, 6, 4), float64],) */;
    %725 = cast(%var_4608, dtype="float32") /* ty=Tensor[(54), float32] */;
    %726 = cast(meta[relay.Constant][55] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
    %727 = reshape(%725, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
    %728 = reshape(%726, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %729 = @func_1582(%727, %728) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
    %730 = asinh(%715) /* ty=Tensor[(11, 15, 15), float64] */;
    %731 = exp(%718) /* ty=Tensor[(11, 15, 15), float64] */;
    %732 = @func_3932() /* ty=Tensor[(11, 15, 15), float32] */;
    %733 = %719.0;
    %734 = %724.0;
    %735 = %729.3;
    (%730, %731, %732, %733, %734, meta[relay.Constant][54] /* ty=Tensor[(192), float32] */, %735, %var_4608, meta[relay.Constant][55] /* ty=Tensor[(504), bool] */)
  };
  %736(%var_4612) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(8, 6, 4), float64], Tensor[(192), float32], Tensor[(504), bool], Tensor[(54), float32], Tensor[(504), bool]) */
}

def @func_5643() -> (Tensor[(11, 15, 15), float32],) {
  %737 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %738 = %737.0;
  (%738,)
}

def @func_2346(%var_2344: Tensor[(11, 1, 10), uint8], %var_2345: Tensor[(11, 3, 10), uint8]) -> Tensor[(11, 3, 10), uint8] {
  @func_2342(%var_2344, %var_2345) /* ty=Tensor[(11, 3, 10), uint8] */
}

def @func_5392(%var_5390: Tensor[(1, 5, 8), uint8]) -> (Tensor[(8, 5, 8), uint8],) {
  @func_5389(%var_5390) /* ty=(Tensor[(8, 5, 8), uint8],) */
}

def @func_7321() -> (Tensor[(11, 15, 15), float32],) {
  %740 = fn () -> (Tensor[(11, 15, 15), float32],) {
    %739 = @func_3932() /* ty=Tensor[(11, 15, 15), float32] */;
    (%739,)
  };
  %740() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_6784() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) {
  %741 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %742 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %743 = %741.0;
  %744 = %742.0;
  (%743, %744)
}

def @func_7064(%var_7062: Tensor[(3, 84), bool], %var_7063: Tensor[(504), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(3, 84), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(11, 15, 15), float64]) {
  %757 = fn (%var_7051: Tensor[(3, 84), bool], %var_7052: Tensor[(504), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(3, 84), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(11, 15, 15), float64]) {
    %745 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %746 = cast(%var_7051, dtype="bool") /* ty=Tensor[(3, 84), bool] */;
    %747 = cast(%var_7052, dtype="bool") /* ty=Tensor[(504), bool] */;
    %748 = cast(meta[relay.Constant][56] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
    %749 = reshape(%746, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), bool] */;
    %750 = reshape(%747, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %751 = reshape(%748, newshape=[54]) /* ty=Tensor[(54), float32] */;
    %752 = @func_1674(%749, %750, %751) /* ty=(Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) */;
    %753 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
    %754 = %745.0;
    %755 = %752.3;
    %756 = %753.0;
    (%754, %755, %var_7051, %var_7052, meta[relay.Constant][56] /* ty=Tensor[(54), float32] */, %756)
  };
  %757(%var_7062, %var_7063) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(3, 84), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(11, 15, 15), float64]) */
}

def @func_4731(%var_4730: uint16) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(11, 15, 15), float32], Tensor[(7, 4, 1), bool], uint16, Tensor[(28), uint16]) {
  %776 = fn (%var_4726: uint16) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(11, 15, 15), float32], Tensor[(7, 4, 1), bool], uint16, Tensor[(28), uint16]) {
    %758 = @func_3924() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %759 = @func_4701() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
    %760 = cast(meta[relay.Constant][57] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
    %761 = cast(meta[relay.Constant][57] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
    %762 = reshape(%760, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
    %763 = reshape(%761, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
    %764 = @func_411(%762, %763) /* ty=(Tensor[(7, 12, 6), bool],) */;
    %765 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %766 = cast(%var_4726, dtype="uint16") /* ty=uint16 */;
    %767 = cast(meta[relay.Constant][58] /* ty=Tensor[(28), uint16] */, dtype="uint16") /* ty=Tensor[(28), uint16] */;
    %768 = reshape(%766, newshape=[]) /* ty=uint16 */;
    %769 = reshape(%767, newshape=[7, 4, 1]) /* ty=Tensor[(7, 4, 1), uint16] */;
    %770 = @func_2803(%768, %769) /* ty=(Tensor[(7, 4, 1), bool], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */;
    %771 = %758.0;
    %772 = %759.0;
    %773 = %764.0;
    %774 = %765.0;
    %775 = %770.0;
    (%771, %772, %773, meta[relay.Constant][57] /* ty=Tensor[(504), bool] */, %774, %775, %var_4726, meta[relay.Constant][58] /* ty=Tensor[(28), uint16] */)
  };
  %776(%var_4730) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(11, 15, 15), float32], Tensor[(7, 4, 1), bool], uint16, Tensor[(28), uint16]) */
}

def @func_1679(%var_1676: Tensor[(12, 3, 7), bool], %var_1677: Tensor[(504), bool], %var_1678: Tensor[(54), float32]) -> (Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) {
  @func_1674(%var_1676, %var_1677, %var_1678) /* ty=(Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) */
}

def @func_8649() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool], Tensor[(11, 15, 15), float32]) {
  %785 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool], Tensor[(11, 15, 15), float32]) {
    %777 = @func_6951() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %778 = @func_6389() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %779 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
    %780 = @func_8270() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(504), bool]) */;
    %781 = %777.0;
    %782 = %778.0;
    %783 = %779.1;
    %784 = %780.0;
    (%781, %782, %783, %784)
  };
  %785() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool], Tensor[(11, 15, 15), float32]) */
}

def @func_6454() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %790 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
    %786 = @func_6389() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %787 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %788 = %786.0;
    %789 = %787.0;
    (%788, %789)
  };
  %790() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_5286() -> Tensor[(11, 15, 15), float32] {
  %791 = fn () -> Tensor[(11, 15, 15), float32] {
    @func_4735() /* ty=Tensor[(11, 15, 15), float32] */
  };
  %791() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_10187() -> (Tensor[(11, 15, 15), float32],) {
  %794 = fn () -> (Tensor[(11, 15, 15), float32],) {
    %792 = @func_5323() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %793 = %792.0;
    (%793,)
  };
  %794() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_4370(%var_4367: int8, %var_4368: Tensor[(16, 10, 12), int8], %var_4369: Tensor[(624), uint8]) -> (Tensor[(16, 10, 12), bool], Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(13, 4), uint8], Tensor[(624), uint8]) {
  @func_4365(%var_4367, %var_4368, %var_4369) /* ty=(Tensor[(16, 10, 12), bool], Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(13, 4), uint8], Tensor[(624), uint8]) */
}

def @func_4160() -> Tensor[(11, 15, 15), float32] {
  @func_4158() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_8152(%var_8149: Tensor[(8, 6, 12), float32], %var_8150: Tensor[(8, 6, 12), float32], %var_8151: Tensor[(192), float32]) -> (Tensor[(8, 6, 12), float32], Tensor[(8, 6, 4), float64], Tensor[(192), float32]) {
  %806 = fn (%var_8130: Tensor[(8, 6, 12), float32], %var_8131: Tensor[(8, 6, 12), float32], %var_8142: Tensor[(192), float32]) -> (Tensor[(8, 6, 12), float32], Tensor[(8, 6, 4), float64], Tensor[(192), float32]) {
    %795 = cast(%var_8131, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
    %796 = shape_of(%var_8130, dtype="int32") /* ty=Tensor[(3), int32] */;
    %797 = cast(%var_8130, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
    %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %799 = cast(%var_8142, dtype="float32") /* ty=Tensor[(192), float32] */;
    %800 = cast(%var_8142, dtype="float32") /* ty=Tensor[(192), float32] */;
    %801 = reshape(%799, newshape=[8, 6, 4]) /* ty=Tensor[(8, 6, 4), float32] */;
    %802 = reshape(%800, newshape=[8, 6, 4]) /* ty=Tensor[(8, 6, 4), float32] */;
    %803 = @func_3785(%801, %802) /* ty=(Tensor[(8, 6, 4), float64],) */;
    %804 = divide(%797, %798) /* ty=Tensor[(8, 6, 12), float32] */;
    %805 = %803.0;
    (%804, %805, %var_8142)
  };
  %806(%var_8149, %var_8150, %var_8151) /* ty=(Tensor[(8, 6, 12), float32], Tensor[(8, 6, 4), float64], Tensor[(192), float32]) */
}

def @func_10171() -> (Tensor[(32), float64], Tensor[(11, 15, 15), float32]) {
  @func_10169() /* ty=(Tensor[(32), float64], Tensor[(11, 15, 15), float32]) */
}

def @func_9155() -> Tensor[(11, 15, 15), float32] {
  %807 = fn () -> Tensor[(11, 15, 15), float32] {
    @func_4158() /* ty=Tensor[(11, 15, 15), float32] */
  };
  %807() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_9045(%var_9035: Tensor[(2912), int16], %var_9036: uint16, %var_9040: Tensor[(384), float32]) -> (Tensor[(8, 1, 8), float32], Tensor[(1, 9, 6), float32], Tensor[(2912), int16], uint16, Tensor[(504), bool], Tensor[(384), float32], Tensor[(384), float32]) {
  %808 = cast(meta[relay.Constant][59] /* ty=Tensor[(8, 1, 8), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 8), float32] */;
  %809 = cast(%var_9035, dtype="int16") /* ty=Tensor[(2912), int16] */;
  %810 = cast(%var_9036, dtype="uint16") /* ty=uint16 */;
  %811 = cast(meta[relay.Constant][60] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
  %812 = reshape(%809, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), int16] */;
  %813 = reshape(%810, newshape=[]) /* ty=uint16 */;
  %814 = reshape(%811, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %815 = @func_4897(%812, %813, %814) /* ty=(Tensor[(16, 14, 13), int16], Tensor[(16, 14, 13), float64], Tensor[(11, 15, 15), float32], uint16, Tensor[(11, 15, 15), float64], Tensor[(16, 14, 13), float32], Tensor[(1, 9, 6), float32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(12, 9, 6), bool]) */;
  %816 = cast(%var_9040, dtype="float32") /* ty=Tensor[(384), float32] */;
  %817 = reshape(%816, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %818 = @func_7205(%817) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(7, 12, 6), bool], Tensor[(384), float32], Tensor[(504), bool]) */;
  %819 = acos(%808) /* ty=Tensor[(8, 1, 8), float32] */;
  %820 = %815.6;
  %821 = %818.2;
  (%819, %820, %var_9035, %var_9036, meta[relay.Constant][60] /* ty=Tensor[(504), bool] */, %821, %var_9040)
}

def @func_7963() -> (Tensor[(11, 15, 15), float32],) {
  %823 = fn () -> (Tensor[(11, 15, 15), float32],) {
    %822 = @func_6469() /* ty=Tensor[(11, 15, 15), float32] */;
    (%822,)
  };
  %823() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_8566() -> (Tensor[(11, 15, 15), float32],) {
  %824 = @func_8368() /* ty=Tensor[(11, 15, 15), float32] */;
  (%824,)
}

def @func_8568() -> (Tensor[(11, 15, 15), float32],) {
  @func_8566() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_7349() -> Tensor[(11, 15, 15), float32] {
  @func_7347() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_6951() -> (Tensor[(11, 15, 15), float32],) {
  %825 = @func_5943() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %826 = %825.1;
  (%826,)
}

def @func_4507() -> (Tensor[(11, 15, 15), float32],) {
  @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_9918(%var_9917: Tensor[(9), int64]) -> (Tensor[(11, 15, 15), float32], Tensor[(1, 9), int64], int64, Tensor[(9), int64]) {
  %834 = fn (%var_9912: Tensor[(9), int64]) -> (Tensor[(11, 15, 15), float32], Tensor[(1, 9), int64], int64, Tensor[(9), int64]) {
    %827 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %828 = cast(-10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %829 = cast(%var_9912, dtype="int64") /* ty=Tensor[(9), int64] */;
    %830 = reshape(%828, newshape=[]) /* ty=int64 */;
    %831 = reshape(%829, newshape=[1, 9]) /* ty=Tensor[(1, 9), int64] */;
    %832 = %827.0;
    %833 = @func_7995(%830, %831) /* ty=Tensor[(1, 9), int64] */;
    (%832, %833, -10 /* ty=int64 */, %var_9912)
  };
  %834(%var_9917) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9), int64], int64, Tensor[(9), int64]) */
}

def @func_4795(%var_4793: Tensor[(624), uint8], %var_4794: Tensor[(330, 1), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(13, 4), uint8], Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(100), uint32], Tensor[(330, 1), uint8], Tensor[(11, 15, 15), float32], Tensor[(52), uint8], Tensor[(504), bool], Tensor[(2, 5, 10), bool]) {
  @func_4791(%var_4793, %var_4794) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(13, 4), uint8], Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(100), uint32], Tensor[(330, 1), uint8], Tensor[(11, 15, 15), float32], Tensor[(52), uint8], Tensor[(504), bool], Tensor[(2, 5, 10), bool]) */
}

def @func_5324() -> (Tensor[(11, 15, 15), float32],) {
  %837 = fn () -> (Tensor[(11, 15, 15), float32],) {
    %835 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %836 = %835.0;
    (%836,)
  };
  %837() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_8765(%var_8760: uint16, %var_8761: Tensor[(252), bool], %var_8762: Tensor[(504), bool], %var_8763: Tensor[(3, 18), float32], %var_8764: Tensor[(5, 66), uint8]) -> (Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(3, 18), bool], Tensor[(12, 3, 7), float64], Tensor[(11, 3, 10), uint8], Tensor[(22, 5), uint8], Tensor[(5, 66), uint8]) {
  %862 = fn (%var_8698: uint16, %var_8721: Tensor[(252), bool], %var_8722: Tensor[(504), bool], %var_8723: Tensor[(3, 18), float32], %var_8746: Tensor[(5, 66), uint8]) -> (Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(3, 18), bool], Tensor[(12, 3, 7), float64], Tensor[(11, 3, 10), uint8], Tensor[(22, 5), uint8], Tensor[(5, 66), uint8]) {
    %838 = @func_6942() /* ty=(Tensor[(12, 10, 14), float32],) */;
    %839 = cast(%var_8698, dtype="uint16") /* ty=uint16 */;
    %840 = reshape(%839, newshape=[]) /* ty=uint16 */;
    %841 = @func_4729(%840) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(11, 15, 15), float32], Tensor[(7, 4, 1), bool], uint16, Tensor[(28), uint16]) */;
    %842 = cast(%var_8723, dtype="bool") /* ty=Tensor[(3, 18), bool] */;
    %843 = cast(%var_8698, dtype="bool") /* ty=bool */;
    %844 = cast(%var_8721, dtype="bool") /* ty=Tensor[(252), bool] */;
    %845 = cast(%var_8722, dtype="bool") /* ty=Tensor[(504), bool] */;
    %846 = cast(%var_8723, dtype="float32") /* ty=Tensor[(3, 18), float32] */;
    %847 = reshape(%844, newshape=[12, 3, 7]) /* ty=Tensor[(12, 3, 7), bool] */;
    %848 = reshape(%845, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %849 = reshape(%846, newshape=[54]) /* ty=Tensor[(54), float32] */;
    %850 = @func_1674(%847, %848, %849) /* ty=(Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) */;
    %851 = %850.4;
    %852 = cast(%851, dtype="float64") /* ty=Tensor[(12, 3, 7), float64] */;
    %853 = cast(meta[relay.Constant][61] /* ty=Tensor[(22, 5), uint8] */, dtype="uint8") /* ty=Tensor[(22, 5), uint8] */;
    %854 = cast(%var_8746, dtype="uint8") /* ty=Tensor[(5, 66), uint8] */;
    %855 = reshape(%853, newshape=[11, 1, 10]) /* ty=Tensor[(11, 1, 10), uint8] */;
    %856 = reshape(%854, newshape=[11, 3, 10]) /* ty=Tensor[(11, 3, 10), uint8] */;
    %857 = %838.0;
    %858 = %841.0;
    %859 = greater_equal(%842, %843) /* ty=Tensor[(3, 18), bool] */;
    %860 = atan(%852) /* ty=Tensor[(12, 3, 7), float64] */;
    %861 = @func_2342(%855, %856) /* ty=Tensor[(11, 3, 10), uint8] */;
    (%857, %858, %var_8721, %var_8722, %859, %860, %861, meta[relay.Constant][61] /* ty=Tensor[(22, 5), uint8] */, %var_8746)
  };
  %862(%var_8760, %var_8761, %var_8762, %var_8763, %var_8764) /* ty=(Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(3, 18), bool], Tensor[(12, 3, 7), float64], Tensor[(11, 3, 10), uint8], Tensor[(22, 5), uint8], Tensor[(5, 66), uint8]) */
}

def @func_11272() -> (Tensor[(11, 15, 15), float32], Tensor[(624), int32], Tensor[(11, 15, 15), float32]) {
  %873 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(624), int32], Tensor[(11, 15, 15), float32]) {
    %863 = @func_10836() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(13, 4), uint8], int8, Tensor[(96, 20), int8], Tensor[(624), uint8], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */;
    %864 = %863.5;
    %865 = cast(meta[relay.Constant][62] /* ty=Tensor[(624), uint8] */, dtype="int32") /* ty=Tensor[(624), int32] */;
    %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(1), int32] */;
    %867 = cast(%864, dtype="int32") /* ty=Tensor[(624), int32] */;
    %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?), int32] */;
    %869 = @func_6784() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */;
    %870 = @func_10564() /* ty=Tensor[(11, 15, 15), float32] */;
    %871 = subtract(%867, %868) /* ty=Tensor[(624), int32] */;
    %872 = %869.0;
    (%870, %871, %872)
  };
  %873() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(624), int32], Tensor[(11, 15, 15), float32]) */
}

def @func_10033(%var_10022: int8, %var_10023: Tensor[(1920), int8], %var_10024: Tensor[(624), uint8], %var_10028: Tensor[(40), uint8]) -> (Tensor[(11, 15, 15), float32], Tensor[(504), bool], Tensor[(36, 14), bool], Tensor[(13, 4), uint8], int8, Tensor[(1920), int8], Tensor[(624), uint8], Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(11, 15, 15), float32]) {
  %874 = cast(meta[relay.Constant][63] /* ty=Tensor[(36, 14), bool] */, dtype="bool") /* ty=Tensor[(36, 14), bool] */;
  %875 = reshape(%874, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %876 = @func_8201(%875) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(252, 1), bool], Tensor[(504), bool]) */;
  %877 = cast(%var_10022, dtype="int8") /* ty=int8 */;
  %878 = cast(%var_10023, dtype="int8") /* ty=Tensor[(1920), int8] */;
  %879 = cast(%var_10024, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %880 = reshape(%877, newshape=[]) /* ty=int8 */;
  %881 = reshape(%878, newshape=[16, 10, 12]) /* ty=Tensor[(16, 10, 12), int8] */;
  %882 = reshape(%879, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %883 = @func_4365(%880, %881, %882) /* ty=(Tensor[(16, 10, 12), bool], Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(13, 4), uint8], Tensor[(624), uint8]) */;
  %884 = cast(%var_10028, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %885 = reshape(%884, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %886 = @func_5389(%885) /* ty=(Tensor[(8, 5, 8), uint8],) */;
  %887 = @func_5666() /* ty=Tensor[(11, 15, 15), float32] */;
  %888 = %876.3;
  %889 = %883.3;
  %890 = %886.0;
  %891 = @func_4735() /* ty=Tensor[(11, 15, 15), float32] */;
  (%887, %888, meta[relay.Constant][63] /* ty=Tensor[(36, 14), bool] */, %889, %var_10022, %var_10023, %var_10024, %890, %var_10028, %891)
}

def @func_7347() -> Tensor[(11, 15, 15), float32] {
  @func_6469() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_7273(%var_7260: Tensor[(330), int16]) -> (Tensor[(11, 15, 15), float64], Tensor[(3, 8, 13), float64], Tensor[(15, 11, 2), bool], Tensor[(330), int16], Tensor[(312), float64]) {
  %892 = @func_6784() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */;
  %893 = cast(meta[relay.Constant][64] /* ty=Tensor[(312), float64] */, dtype="float64") /* ty=Tensor[(312), float64] */;
  %894 = reshape(%893, newshape=[3, 8, 13]) /* ty=Tensor[(3, 8, 13), float64] */;
  %895 = cast(%var_7260, dtype="int16") /* ty=Tensor[(330), int16] */;
  %896 = cast(%var_7260, dtype="int16") /* ty=Tensor[(330), int16] */;
  %897 = reshape(%895, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), int16] */;
  %898 = reshape(%896, newshape=[15, 11, 2]) /* ty=Tensor[(15, 11, 2), int16] */;
  %899 = cast(meta[relay.Constant][64] /* ty=Tensor[(312), float64] */, dtype="float64") /* ty=Tensor[(312), float64] */;
  %900 = %892.1;
  %901 = @func_5600(%894) /* ty=Tensor[(3, 8, 13), float64] */;
  %902 = @func_6883(%897, %898) /* ty=Tensor[(15, 11, 2), bool] */;
  %903 = asin(%899) /* ty=Tensor[(312), float64] */;
  (%900, %901, %902, %var_7260, %903)
}

def @func_4505() -> (Tensor[(11, 15, 15), float32],) {
  %904 = @func_4158() /* ty=Tensor[(11, 15, 15), float32] */;
  (%904,)
}

def @func_5943() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %905 = @func_4910() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %906 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %907 = @func_5366() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %908 = %905.0;
  %909 = %906.0;
  %910 = %907.0;
  %911 = @func_4735() /* ty=Tensor[(11, 15, 15), float32] */;
  (%908, %909, %910, %911)
}

def @func_9124() -> Tensor[(11, 15, 15), float32] {
  @func_9122() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_3925() -> (Tensor[(11, 15, 15), float32],) {
  %914 = fn () -> (Tensor[(11, 15, 15), float32],) {
    %912 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %913 = %912.0;
    (%913,)
  };
  %914() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_7738() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  @func_7736() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_3932() -> Tensor[(11, 15, 15), float32] {
  %915 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %915.0
}

def @func_3934() -> Tensor[(11, 15, 15), float32] {
  @func_3932() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_9218() -> Tensor[(11, 15, 15), float32] {
  @func_9216() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_5710() -> (Tensor[(11, 10, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(32), float64], Tensor[(54), float32]) {
  %916 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
  %917 = cast(meta[relay.Constant][65] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %918 = cast(meta[relay.Constant][66] /* ty=Tensor[(54), float32] */, dtype="float32") /* ty=Tensor[(54), float32] */;
  %919 = reshape(%917, newshape=[2, 8, 2]) /* ty=Tensor[(2, 8, 2), float64] */;
  %920 = reshape(%918, newshape=[9, 6]) /* ty=Tensor[(9, 6), float32] */;
  %921 = @func_4989(%919, %920) /* ty=(Tensor[(2, 8, 2), uint8], Tensor[(12, 3, 7), uint32], Tensor[(252), bool], Tensor[(504), bool], Tensor[(9, 6), float32], Tensor[(2, 8, 2), float32]) */;
  %922 = %916.1;
  %923 = %921.5;
  (%922, %923, meta[relay.Constant][65] /* ty=Tensor[(32), float64] */, meta[relay.Constant][66] /* ty=Tensor[(54), float32] */)
}

def @func_5439(%var_5436: Tensor[(11, 10, 2), bool], %var_5437: Tensor[(624), uint8], %var_5438: Tensor[(504), bool]) -> (Tensor[(11, 10, 2), float32], Tensor[(11, 10, 2), uint16], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool]) {
  %948 = fn (%var_5403: Tensor[(11, 10, 2), bool], %var_5431: Tensor[(624), uint8], %var_5432: Tensor[(504), bool]) -> (Tensor[(11, 10, 2), float32], Tensor[(11, 10, 2), uint16], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool]) {
    %924 = @func_5065() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool]) */;
    %925 = %924.1;
    %926 = cast(%var_5403, dtype="float32") /* ty=Tensor[(11, 10, 2), float32] */;
    %927 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
    %928 = cast(%925, dtype="float32") /* ty=Tensor[(11, 10, 2), float32] */;
    %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %930 = cast(meta[relay.Constant][67] /* ty=Tensor[(11, 10, 2), bool] */, dtype="uint16") /* ty=Tensor[(11, 10, 2), uint16] */;
    %931 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
    %932 = cast(%925, dtype="uint16") /* ty=Tensor[(11, 10, 2), uint16] */;
    %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %934 = @func_4093() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
    %935 = %934.0;
    %936 = cast(%935, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
    %937 = cast(%935, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
    %938 = cast(%var_5431, dtype="uint8") /* ty=Tensor[(624), uint8] */;
    %939 = cast(%var_5432, dtype="bool") /* ty=Tensor[(504), bool] */;
    %940 = reshape(%936, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
    %941 = reshape(%937, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), bool] */;
    %942 = reshape(%938, newshape=[624]) /* ty=Tensor[(624), uint8] */;
    %943 = reshape(%939, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %944 = @func_4029(%940, %941, %942, %943) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */;
    %945 = floor_mod(%928, %929) /* ty=Tensor[(11, 10, 2), float32] */;
    %946 = right_shift(%932, %933) /* ty=Tensor[(11, 10, 2), uint16] */;
    %947 = %944.4;
    (%945, %946, %935, %947, %var_5431, %var_5432)
  };
  %948(%var_5436, %var_5437, %var_5438) /* ty=(Tensor[(11, 10, 2), float32], Tensor[(11, 10, 2), uint16], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool]) */
}

def @func_3624(%var_3603: Tensor[(4, 13, 1), uint8], %var_3604: Tensor[(4, 13, 1), uint8], %var_3614: Tensor[(4, 13, 12), uint8]) -> (Tensor[(4, 13, ?), uint8], Tensor[(4, 13, 12), float64]) {
  %949 = cast(%var_3604, dtype="uint8") /* ty=Tensor[(4, 13, 1), uint8] */;
  %950 = shape_of(%var_3603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %951 = cast(%var_3603, dtype="uint8") /* ty=Tensor[(4, 13, 1), uint8] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %953 = cast(%var_3604, dtype="float64") /* ty=Tensor[(4, 13, 1), float64] */;
  %954 = cast(%var_3614, dtype="float64") /* ty=Tensor[(4, 13, 12), float64] */;
  %955 = multiply(%951, %952) /* ty=Tensor[(4, 13, ?), uint8] */;
  %956 = floor_mod(%953, %954) /* ty=Tensor[(4, 13, 12), float64] */;
  (%955, %956)
}

def @func_5667() -> Tensor[(11, 15, 15), float32] {
  %958 = fn () -> Tensor[(11, 15, 15), float32] {
    %957 = @func_4287() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %957.0
  };
  %958() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_6687() -> Tensor[(11, 15, 15), float32] {
  @func_6685() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_5945() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  @func_5943() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_7903() -> (Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) {
  %963 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) {
    %959 = @func_5366() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %960 = @func_6942() /* ty=(Tensor[(12, 10, 14), float32],) */;
    %961 = %959.0;
    %962 = %960.0;
    (%961, %962)
  };
  %963() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) */
}

def @func_10860() -> Tensor[(10, 9, 2), float64] {
  @func_10858() /* ty=Tensor[(10, 9, 2), float64] */
}

def @func_10132() -> (Tensor[(12, 10, 14), float32],) {
  @func_10130() /* ty=(Tensor[(12, 10, 14), float32],) */
}

def @func_10325() -> (Tensor[(11, 15, 15), bool], Tensor[(11, 15, 15), float64]) {
  %973 = fn () -> (Tensor[(11, 15, 15), bool], Tensor[(11, 15, 15), float64]) {
    %964 = @func_8877() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %965 = %964.0;
    %966 = cast(meta[relay.Constant][68] /* ty=Tensor[(11, 15, 15), float32] */, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
    %967 = shape_of(%965, dtype="int32") /* ty=Tensor[(3), int32] */;
    %968 = cast(%965, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
    %969 = dyn.reshape(%966, %967, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %970 = @func_6784() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */;
    %971 = equal(%968, %969) /* ty=Tensor[(11, 15, 15), bool] */;
    %972 = %970.1;
    (%971, %972)
  };
  %973() /* ty=(Tensor[(11, 15, 15), bool], Tensor[(11, 15, 15), float64]) */
}

def @func_8300() -> Tensor[(11, 15, 15), float32] {
  %975 = fn () -> Tensor[(11, 15, 15), float32] {
    %974 = @func_6453() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
    %974.1
  };
  %975() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_7978() -> Tensor[(11, 15, 15), float64] {
  %977 = fn () -> Tensor[(11, 15, 15), float64] {
    %976 = @func_5182() /* ty=(Tensor[(11, 15, 15), float64],) */;
    %976.0
  };
  %977() /* ty=Tensor[(11, 15, 15), float64] */
}

def @func_10774() -> Tensor[(11, 15, 15), float32] {
  %979 = fn () -> Tensor[(11, 15, 15), float32] {
    %978 = @func_7902() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) */;
    %978.0
  };
  %979() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_7183() -> Tensor[(11, 15, 15), float32] {
  %980 = @func_6951() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %980.0
}

def @func_7995(%var_7987: int64, %var_7988: Tensor[(1, 9), int64]) -> Tensor[(1, 9), int64] {
  %981 = cast(%var_7987, dtype="int64") /* ty=int64 */;
  %982 = cast(%var_7988, dtype="int64") /* ty=Tensor[(1, 9), int64] */;
  bitwise_xor(%981, %982) /* ty=Tensor[(1, 9), int64] */
}

def @func_8271() -> (Tensor[(11, 15, 15), float32], Tensor[(504), bool]) {
  %988 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(504), bool]) {
    %983 = @func_7562() /* ty=Tensor[(11, 15, 15), float32] */;
    %984 = cast(%983, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
    %985 = reshape(%984, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
    %986 = @func_5838(%985) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) */;
    %987 = %986.3;
    (%983, %987)
  };
  %988() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(504), bool]) */
}

def @func_9216() -> Tensor[(11, 15, 15), float32] {
  %989 = @func_8860() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
  %989.0
}

def @func_7659(%var_7624: Tensor[(980), float64]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(7, 12, 6), bool], Tensor[(14, 5, 14), uint32], Tensor[(980), float64]) {
  %990 = @func_3909() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %991 = %990.0;
  %992 = cast(%991, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %993 = reshape(%992, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %994 = @func_5838(%993) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) */;
  %995 = cast(%var_7624, dtype="float64") /* ty=Tensor[(980), float64] */;
  %996 = reshape(%995, newshape=[14, 5, 14]) /* ty=Tensor[(14, 5, 14), float64] */;
  %997 = @func_4158() /* ty=Tensor[(11, 15, 15), float32] */;
  %998 = %994.4;
  %999 = @func_7010(%996) /* ty=Tensor[(14, 5, 14), uint32] */;
  (%991, %997, %998, %999, %var_7624)
}

def @func_10451() -> (Tensor[(11, 15, 15), float32],) {
  %1000 = @func_7962() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1001 = %1000.0;
  (%1001,)
}

def @func_4702() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %1006 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
    %1002 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %1003 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %1004 = %1002.0;
    %1005 = %1003.0;
    (%1004, %1005)
  };
  %1006() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_7143(%var_7077: Tensor[(252), bool], %var_7107: Tensor[(330), uint8], %var_7127: Tensor[(12, 42), bool], %var_7131: Tensor[(54), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(252), bool], Tensor[(32), float64], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(12, 42), bool], Tensor[(54), float32]) {
  %1007 = @func_4287() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1008 = cast(%var_7077, dtype="bool") /* ty=Tensor[(252), bool] */;
  %1009 = cast(meta[relay.Constant][69] /* ty=Tensor[(12, 42), bool] */, dtype="bool") /* ty=Tensor[(12, 42), bool] */;
  %1010 = reshape(%1008, newshape=[3, 84]) /* ty=Tensor[(3, 84), bool] */;
  %1011 = reshape(%1009, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %1012 = @func_7061(%1010, %1011) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(3, 84), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(11, 15, 15), float64]) */;
  %1013 = %1012.4;
  %1014 = cast(%1013, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1015 = cast(meta[relay.Constant][69] /* ty=Tensor[(12, 42), bool] */, dtype="bool") /* ty=Tensor[(12, 42), bool] */;
  %1016 = cast(meta[relay.Constant][70] /* ty=Tensor[(110), uint8] */, dtype="uint8") /* ty=Tensor[(110), uint8] */;
  %1017 = cast(%var_7107, dtype="uint8") /* ty=Tensor[(330), uint8] */;
  %1018 = reshape(%1014, newshape=[54]) /* ty=Tensor[(54), float32] */;
  %1019 = reshape(%1015, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %1020 = reshape(%1016, newshape=[110]) /* ty=Tensor[(110), uint8] */;
  %1021 = reshape(%1017, newshape=[330]) /* ty=Tensor[(330), uint8] */;
  %1022 = @func_6062(%1018, %1019, %1020, %1021) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(504), bool], Tensor[(1, 252), bool], Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(110), uint8], Tensor[(330), uint8], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8]) */;
  %1023 = cast(%var_7127, dtype="bool") /* ty=Tensor[(12, 42), bool] */;
  %1024 = shape_of(meta[relay.Constant][69] /* ty=Tensor[(12, 42), bool] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1025 = cast(meta[relay.Constant][69] /* ty=Tensor[(12, 42), bool] */, dtype="bool") /* ty=Tensor[(12, 42), bool] */;
  %1026 = dyn.reshape(%1023, %1024, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1027 = cast(%var_7131, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1028 = shape_of(%1013, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1029 = cast(%1013, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1030 = dyn.reshape(%1027, %1028, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1031 = %1007.0;
  %1032 = @func_6332() /* ty=Tensor[(32), float64] */;
  %1033 = %1022.7;
  %1034 = logical_or(%1025, %1026) /* ty=Tensor[(12, 42), bool] */;
  %1035 = floor_mod(%1029, %1030) /* ty=Tensor[(54), float32] */;
  (%1031, %var_7077, %1032, %1033, meta[relay.Constant][70] /* ty=Tensor[(110), uint8] */, %var_7107, %1034, %1035)
}

def @func_8879() -> (Tensor[(11, 15, 15), float32],) {
  @func_8877() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_9408() -> (Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) {
  %1036 = @func_6942() /* ty=(Tensor[(12, 10, 14), float32],) */;
  %1037 = @func_8368() /* ty=Tensor[(11, 15, 15), float32] */;
  %1038 = %1036.0;
  (%1037, %1038)
}

def @func_7207(%var_7206: Tensor[(384), float32]) -> (Tensor[(11, 15, 15), float64], Tensor[(7, 12, 6), bool], Tensor[(384), float32], Tensor[(504), bool]) {
  %1047 = fn (%var_7195: Tensor[(384), float32]) -> (Tensor[(11, 15, 15), float64], Tensor[(7, 12, 6), bool], Tensor[(384), float32], Tensor[(504), bool]) {
    %1039 = @func_6784() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */;
    %1040 = cast(%var_7195, dtype="float32") /* ty=Tensor[(384), float32] */;
    %1041 = cast(meta[relay.Constant][71] /* ty=Tensor[(504), bool] */, dtype="bool") /* ty=Tensor[(504), bool] */;
    %1042 = reshape(%1040, newshape=[6, 8, 8]) /* ty=Tensor[(6, 8, 8), float32] */;
    %1043 = reshape(%1041, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %1044 = @func_3388(%1042, %1043) /* ty=(Tensor[(6, 8, 8), float32], Tensor[(7, 12, 6), bool], Tensor[(54), float32], Tensor[(504), bool], Tensor[(7, 12, 6), bool]) */;
    %1045 = %1039.1;
    %1046 = %1044.4;
    (%1045, %1046, %var_7195, meta[relay.Constant][71] /* ty=Tensor[(504), bool] */)
  };
  %1047(%var_7206) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(7, 12, 6), bool], Tensor[(384), float32], Tensor[(504), bool]) */
}

def @func_8984() -> (Tensor[(11, 15, 15), float32], Tensor[(640), bool], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(96, 4), float64], Tensor[(11, 15, 15), float64], Tensor[(11, 6, 3), float32]) {
  %1074 = fn () -> (Tensor[(11, 15, 15), float32], Tensor[(640), bool], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(96, 4), float64], Tensor[(11, 15, 15), float64], Tensor[(11, 6, 3), float32]) {
    %1048 = @func_4505() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %1049 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
    %1050 = cast(meta[relay.Constant][72] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
    %1051 = cast(meta[relay.Constant][73] /* ty=Tensor[(96, 4), float32] */, dtype="float32") /* ty=Tensor[(96, 4), float32] */;
    %1052 = reshape(%1050, newshape=[16, 8, 5]) /* ty=Tensor[(16, 8, 5), bool] */;
    %1053 = reshape(%1051, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %1054 = @func_7305(%1052, %1053) /* ty=(Tensor[(16, 8, 5), bool], Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(384), float32], Tensor[(504), bool]) */;
    %1055 = %1054.3;
    %1056 = cast(%1055, dtype="float64") /* ty=Tensor[(384), float64] */;
    %1057 = shape_of(meta[relay.Constant][73] /* ty=Tensor[(96, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1058 = cast(meta[relay.Constant][73] /* ty=Tensor[(96, 4), float32] */, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
    %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1060 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
    %1061 = cast(meta[relay.Constant][74] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
    %1062 = reshape(%1061, newshape=[11, 6, 3]) /* ty=Tensor[(11, 6, 3), float32] */;
    %1063 = @func_5223(%1062) /* ty=Tensor[(11, 6, 3), float64] */;
    %1064 = cast(meta[relay.Constant][74] /* ty=Tensor[(198), float32] */, dtype="float32") /* ty=Tensor[(198), float32] */;
    %1065 = shape_of(%1063, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1066 = cast(%1063, dtype="float32") /* ty=Tensor[(11, 6, 3), float32] */;
    %1067 = dyn.reshape(%1064, %1065, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1068 = %1048.0;
    %1069 = @func_5285() /* ty=Tensor[(11, 15, 15), float32] */;
    %1070 = %1049.0;
    %1071 = multiply(%1058, %1059) /* ty=Tensor[(96, 4), float64] */;
    %1072 = %1060.0;
    %1073 = mod(%1066, %1067) /* ty=Tensor[(11, 6, 3), float32] */;
    (%1068, meta[relay.Constant][72] /* ty=Tensor[(640), bool] */, %1069, %1070, %1071, %1072, %1073)
  };
  %1074() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(640), bool], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64], Tensor[(96, 4), float64], Tensor[(11, 15, 15), float64], Tensor[(11, 6, 3), float32]) */
}

def @func_10169() -> (Tensor[(32), float64], Tensor[(11, 15, 15), float32]) {
  %1075 = @func_6332() /* ty=Tensor[(32), float64] */;
  %1076 = @func_9216() /* ty=Tensor[(11, 15, 15), float32] */;
  (%1075, %1076)
}

def @func_3910() -> (Tensor[(11, 15, 15), float32],) {
  %1079 = fn () -> (Tensor[(11, 15, 15), float32],) {
    %1077 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %1078 = %1077.0;
    (%1078,)
  };
  %1079() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_10537() -> Tensor[(11, 15, 15), float32] {
  %1081 = fn () -> Tensor[(11, 15, 15), float32] {
    %1080 = @func_7736() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */;
    %1080.3
  };
  %1081() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_5623() -> (Tensor[(11, 15, 15), float32],) {
  @func_5621() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_11454() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) {
  @func_11452() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) */
}

def @func_5389(%var_5380: Tensor[(1, 5, 8), uint8]) -> (Tensor[(8, 5, 8), uint8],) {
  %1082 = cast(%var_5380, dtype="uint8") /* ty=Tensor[(1, 5, 8), uint8] */;
  %1083 = cast(meta[relay.Constant][75] /* ty=Tensor[(8, 5, 8), uint8] */, dtype="uint8") /* ty=Tensor[(8, 5, 8), uint8] */;
  %1084 = logical_xor(%1082, %1083) /* ty=Tensor[(8, 5, 8), uint8] */;
  (%1084,)
}

def @func_7999(%var_7997: int64, %var_7998: Tensor[(1, 9), int64]) -> Tensor[(1, 9), int64] {
  @func_7995(%var_7997, %var_7998) /* ty=Tensor[(1, 9), int64] */
}

def @main(%var_11461: float64, %var_11462: Tensor[(1, 2, 2), float64]) -> (Tensor[(1, 2, 2), bool],) {
  %1085 = cast(%var_11461, dtype="bool") /* ty=bool */;
  %1086 = cast(%var_11462, dtype="bool") /* ty=Tensor[(1, 2, 2), bool] */;
  %1087 = not_equal(%1085, %1086) /* ty=Tensor[(1, 2, 2), bool] */;
  (%1087,)
}

def @func_11452() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float64]) {
  %1088 = @func_10451() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1089 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
  %1090 = %1088.0;
  %1091 = %1089.0;
  (%1090, %1091)
}

def @func_5712() -> (Tensor[(11, 10, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(32), float64], Tensor[(54), float32]) {
  @func_5710() /* ty=(Tensor[(11, 10, 2), bool], Tensor[(2, 8, 2), float32], Tensor[(32), float64], Tensor[(54), float32]) */
}

def @func_7276(%var_7274: Tensor[(330), int16]) -> (Tensor[(11, 15, 15), float64], Tensor[(3, 8, 13), float64], Tensor[(15, 11, 2), bool], Tensor[(330), int16], Tensor[(312), float64]) {
  @func_7273(%var_7274) /* ty=(Tensor[(11, 15, 15), float64], Tensor[(3, 8, 13), float64], Tensor[(15, 11, 2), bool], Tensor[(330), int16], Tensor[(312), float64]) */
}

def @func_11169(%var_11167: Tensor[(1920, 1), int8]) -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(2, 1456), int16], Tensor[(384), float32], Tensor[(1, 9, 6), bool], Tensor[(8, 5, 8), uint8], Tensor[(1920, 1), int8], Tensor[(624), uint8], Tensor[(40), uint8], Tensor[(11, 15, 15), float32]) {
  @func_11166(%var_11167) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32], Tensor[(2, 1456), int16], Tensor[(384), float32], Tensor[(1, 9, 6), bool], Tensor[(8, 5, 8), uint8], Tensor[(1920, 1), int8], Tensor[(624), uint8], Tensor[(40), uint8], Tensor[(11, 15, 15), float32]) */
}

def @func_7012(%var_7011: Tensor[(14, 5, 14), float64]) -> Tensor[(14, 5, 14), uint32] {
  %1098 = fn (%var_6980: Tensor[(14, 5, 14), float64]) -> Tensor[(14, 5, 14), uint32] {
    %1092 = cast(%var_6980, dtype="float64") /* ty=Tensor[(14, 5, 14), float64] */;
    %1093 = atan(%1092) /* ty=Tensor[(14, 5, 14), float64] */;
    %1094 = cast(%var_6980, dtype="uint32") /* ty=Tensor[(14, 5, 14), uint32] */;
    %1095 = shape_of(%1093, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1096 = cast(%1093, dtype="uint32") /* ty=Tensor[(14, 5, 14), uint32] */;
    %1097 = dyn.reshape(%1094, %1095, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    right_shift(%1096, %1097) /* ty=Tensor[(14, 5, 14), uint32] */
  };
  %1098(%var_7011) /* ty=Tensor[(14, 5, 14), uint32] */
}

def @func_9932() -> Tensor[(11, 15, 15), float32] {
  @func_9930() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_4287() -> (Tensor[(11, 15, 15), float32],) {
  %1099 = @func_4175() /* ty=(Tensor[(11, 15, 15), float64],) */;
  %1100 = %1099.0;
  %1101 = cast(%1100, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %1102 = sigmoid(%1101) /* ty=Tensor[(11, 15, 15), float32] */;
  (%1102,)
}

def @func_8862() -> (Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  @func_8860() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_10939(%var_10937: uint16, %var_10938: Tensor[(624), uint8]) -> (Tensor[(11, 15, 15), float32], uint16, Tensor[(624), uint8], Tensor[(7, 12, 6), float32], Tensor[(7, 12, 6), float32], Tensor[(11, 15, 15), float32]) {
  %1116 = fn (%var_10908: uint16, %var_10909: Tensor[(624), uint8]) -> (Tensor[(11, 15, 15), float32], uint16, Tensor[(624), uint8], Tensor[(7, 12, 6), float32], Tensor[(7, 12, 6), float32], Tensor[(11, 15, 15), float32]) {
    %1103 = cast(%var_10908, dtype="uint16") /* ty=uint16 */;
    %1104 = cast(%var_10909, dtype="uint8") /* ty=Tensor[(624), uint8] */;
    %1105 = reshape(%1103, newshape=[]) /* ty=uint16 */;
    %1106 = reshape(%1104, newshape=[624]) /* ty=Tensor[(624), uint8] */;
    %1107 = @func_6600(%1105, %1106) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(11, 10, 2), bool], Tensor[(11, 6, 3), float64], Tensor[(198), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 3, 10), uint8], Tensor[(100), uint32], Tensor[(330), uint8], Tensor[(11, 15, 15), float32], uint16, uint16, Tensor[(7, 12, 6), bool], Tensor[(624), uint8], Tensor[(504), bool], Tensor[(?, 13, 3), uint8], Tensor[(?, 13, 3), bool], Tensor[(?, 13, 3), float64]) */;
    %1108 = %1107.11;
    %1109 = cast(%1108, dtype="float32") /* ty=Tensor[(7, 12, 6), float32] */;
    %1110 = cast(%1108, dtype="float32") /* ty=Tensor[(7, 12, 6), float32] */;
    %1111 = @func_9416() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %1112 = @func_7587() /* ty=Tensor[(11, 15, 15), float32] */;
    %1113 = sinh(%1109) /* ty=Tensor[(7, 12, 6), float32] */;
    %1114 = tan(%1110) /* ty=Tensor[(7, 12, 6), float32] */;
    %1115 = %1111.0;
    (%1112, %var_10908, %var_10909, %1113, %1114, %1115)
  };
  %1116(%var_10937, %var_10938) /* ty=(Tensor[(11, 15, 15), float32], uint16, Tensor[(624), uint8], Tensor[(7, 12, 6), float32], Tensor[(7, 12, 6), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_10995() -> Tensor[(11, 15, 15), float32] {
  @func_10993() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_5558(%var_5547: Tensor[(40), uint8], %var_5555: Tensor[(624), uint8], %var_5556: Tensor[(36, 14), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(8, 5, 8), uint8], Tensor[(40), uint8], Tensor[(4, 13, ?), uint8], Tensor[(624), uint8], Tensor[(36, 14), bool]) {
  %1117 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1118 = cast(%var_5547, dtype="uint8") /* ty=Tensor[(40), uint8] */;
  %1119 = reshape(%1118, newshape=[1, 5, 8]) /* ty=Tensor[(1, 5, 8), uint8] */;
  %1120 = @func_5389(%1119) /* ty=(Tensor[(8, 5, 8), uint8],) */;
  %1121 = %1117.0;
  %1122 = cast(%1121, dtype="float32") /* ty=Tensor[(11, 15, 15), float32] */;
  %1123 = cast(%1121, dtype="bool") /* ty=Tensor[(11, 15, 15), bool] */;
  %1124 = cast(%var_5555, dtype="uint8") /* ty=Tensor[(624), uint8] */;
  %1125 = cast(%var_5556, dtype="bool") /* ty=Tensor[(36, 14), bool] */;
  %1126 = reshape(%1122, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float32] */;
  %1127 = reshape(%1123, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), bool] */;
  %1128 = reshape(%1124, newshape=[624]) /* ty=Tensor[(624), uint8] */;
  %1129 = reshape(%1125, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %1130 = @func_4029(%1126, %1127, %1128, %1129) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(4, 13, ?), uint8], Tensor[(52), uint8], Tensor[(624), uint8], Tensor[(7, 12, 6), bool], Tensor[(504), bool]) */;
  %1131 = %1120.0;
  %1132 = %1130.1;
  (%1121, %1131, %var_5547, %1132, %var_5555, %var_5556)
}

def @func_9468() -> (Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
  %1139 = fn () -> (Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) {
    %1133 = @func_7902() /* ty=(Tensor[(11, 15, 15), float32], Tensor[(12, 10, 14), float32]) */;
    %1134 = @func_6951() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %1135 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
    %1136 = %1133.1;
    %1137 = %1134.0;
    %1138 = %1135.1;
    (%1136, %1137, %1138)
  };
  %1139() /* ty=(Tensor[(12, 10, 14), float32], Tensor[(11, 15, 15), float32], Tensor[(11, 15, 15), float32]) */
}

def @func_4737() -> Tensor[(11, 15, 15), float32] {
  @func_4735() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_7564() -> Tensor[(11, 15, 15), float32] {
  @func_7562() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_6866(%var_6864: Tensor[(1, 6), float32]) -> (Tensor[(11, 15, 15), float32], Tensor[(?, 6), int8], Tensor[(3, 2, ?), float32]) {
  @func_6863(%var_6864) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(?, 6), int8], Tensor[(3, 2, ?), float32]) */
}

def @func_5096(%var_5081: Tensor[(54), float32], %var_5082: Tensor[(504), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool]) {
  %1140 = @func_3892() /* ty=(Tensor[(11, 15, 15), float32],) */;
  %1141 = cast(%var_5081, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1142 = cast(%var_5082, dtype="bool") /* ty=Tensor[(504), bool] */;
  %1143 = reshape(%1141, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
  %1144 = reshape(%1142, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %1145 = @func_1582(%1143, %1144) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
  %1146 = %1140.0;
  %1147 = %1145.4;
  (%1146, %1147, %var_5081, %var_5082)
}

def @func_5183() -> (Tensor[(11, 15, 15), float64],) {
  %1152 = fn () -> (Tensor[(11, 15, 15), float64],) {
    %1148 = @func_4287() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %1149 = %1148.0;
    %1150 = cast(%1149, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
    %1151 = rsqrt(%1150) /* ty=Tensor[(11, 15, 15), float64] */;
    (%1151,)
  };
  %1152() /* ty=(Tensor[(11, 15, 15), float64],) */
}

def @func_9417() -> (Tensor[(11, 15, 15), float32],) {
  %1155 = fn () -> (Tensor[(11, 15, 15), float32],) {
    %1153 = @func_5872() /* ty=(Tensor[(11, 15, 15), float64], Tensor[(11, 15, 15), float32]) */;
    %1154 = %1153.1;
    (%1154,)
  };
  %1155() /* ty=(Tensor[(11, 15, 15), float32],) */
}

def @func_6685() -> Tensor[(11, 15, 15), float32] {
  @func_4735() /* ty=Tensor[(11, 15, 15), float32] */
}

def @func_5100(%var_5098: Tensor[(54), float32], %var_5099: Tensor[(504), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool]) {
  @func_5096(%var_5098, %var_5099) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(504), bool]) */
}

def @func_8203(%var_8202: Tensor[(504), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(252, 1), bool], Tensor[(504), bool]) {
  %1164 = fn (%var_8191: Tensor[(504), bool]) -> (Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(252, 1), bool], Tensor[(504), bool]) {
    %1156 = @func_7962() /* ty=(Tensor[(11, 15, 15), float32],) */;
    %1157 = cast(meta[relay.Constant][76] /* ty=Tensor[(252, 1), bool] */, dtype="bool") /* ty=Tensor[(252, 1), bool] */;
    %1158 = cast(%var_8191, dtype="bool") /* ty=Tensor[(504), bool] */;
    %1159 = reshape(%1157, newshape=[3, 84]) /* ty=Tensor[(3, 84), bool] */;
    %1160 = reshape(%1158, newshape=[504]) /* ty=Tensor[(504), bool] */;
    %1161 = @func_7061(%1159, %1160) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(3, 84), bool], Tensor[(504), bool], Tensor[(54), float32], Tensor[(11, 15, 15), float64]) */;
    %1162 = %1156.0;
    %1163 = %1161.4;
    (%1162, %1163, meta[relay.Constant][76] /* ty=Tensor[(252, 1), bool] */, %var_8191)
  };
  %1164(%var_8202) /* ty=(Tensor[(11, 15, 15), float32], Tensor[(54), float32], Tensor[(252, 1), bool], Tensor[(504), bool]) */
}

def @func_1674(%var_1626: Tensor[(12, 3, 7), bool], %var_1656: Tensor[(504), bool], %var_1668: Tensor[(54), float32]) -> (Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32], Tensor[(54), float32], Tensor[(12, 3, 7), uint32]) {
  %1165 = cast(%var_1656, dtype="bool") /* ty=Tensor[(504), bool] */;
  %1166 = cast(%var_1656, dtype="bool") /* ty=Tensor[(504), bool] */;
  %1167 = reshape(%1165, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %1168 = reshape(%1166, newshape=[7, 12, 6]) /* ty=Tensor[(7, 12, 6), bool] */;
  %1169 = @func_411(%1167, %1168) /* ty=(Tensor[(7, 12, 6), bool],) */;
  %1170 = cast(%var_1668, dtype="float32") /* ty=Tensor[(54), float32] */;
  %1171 = cast(%var_1656, dtype="bool") /* ty=Tensor[(504), bool] */;
  %1172 = reshape(%1170, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), float32] */;
  %1173 = reshape(%1171, newshape=[504]) /* ty=Tensor[(504), bool] */;
  %1174 = @func_1582(%1172, %1173) /* ty=(Tensor[(12, 9, 6), bool], Tensor[(?, 9, 6), uint32], Tensor[(7, 12, 6), bool], Tensor[(504), bool], Tensor[(1, 9, 6), float32]) */;
  %1175 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1176 = cast(%var_1626, dtype="bool") /* ty=Tensor[(12, 3, 7), bool] */;
  %1177 = logical_and(%1175, %1176) /* ty=Tensor[(12, 3, 7), bool] */;
  %1178 = cast(%1177, dtype="uint8") /* ty=Tensor[(12, 3, 7), uint8] */;
  %1179 = shape_of(%var_1626, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1180 = cast(%var_1626, dtype="uint8") /* ty=Tensor[(12, 3, 7), uint8] */;
  %1181 = dyn.reshape(%1178, %1179, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1182 = logical_xor(%1180, %1181) /* ty=Tensor[(12, 3, 7), uint8] */;
  %1183 = cast(%1182, dtype="uint32") /* ty=Tensor[(12, 3, 7), uint32] */;
  %1184 = shape_of(%1177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1185 = cast(%1177, dtype="uint32") /* ty=Tensor[(12, 3, 7), uint32] */;
  %1186 = dyn.reshape(%1183, %1184, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1187 = %1169.0;
  %1188 = %1174.4;
  %1189 = multiply(%1185, %1186) /* ty=Tensor[(12, 3, 7), uint32] */;
  (%1187, %var_1656, %1188, %var_1668, %1189)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen666/build/output.py:3073: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen666/build/output.py", line 3078, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(4) tvmgen_default_fused_cast_cast_not_equal_kernel0(signed char* __restrict__ T_not_equal, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_not_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(0)]) != ((bool)placeholder1[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_1681(%var_1657: Tensor[(2002), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) {
  %0 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %2 = cast(%var_1657, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %3 = reshape(%2, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %4 = @func_1274(%3) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %5 = %0.2;
  %6 = %1.0;
  %7 = %4.4;
  %8 = @func_777() /* ty=Tensor[(10, 9, 7), float32] */;
  (%5, %6, %7, %var_1657, %8)
}

def @func_15173(%var_15162: Tensor[(825), uint64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], uint64, Tensor[(825), uint64], Tensor[(1, 225), float64]) {
  %9 = @func_8414() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %10 = cast(meta[relay.Constant][0] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %11 = cast(%var_15162, dtype="uint64") /* ty=Tensor[(825), uint64] */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 225), float64] */, dtype="float64") /* ty=Tensor[(1, 225), float64] */;
  %13 = reshape(%10, newshape=[]) /* ty=uint64 */;
  %14 = reshape(%11, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), uint64] */;
  %15 = reshape(%12, newshape=[5, 45]) /* ty=Tensor[(5, 45), float64] */;
  %16 = @func_10278(%13, %14, %15) /* ty=(Tensor[(5, 11, 15), bool], Tensor[(5, 11, 15), float32], Tensor[(192, 12), uint16], Tensor[(1, 7, 13), float32], Tensor[(5, 45), float64], Tensor[(10, 9, 7), float64], Tensor[(6, 4, 7), bool]) */;
  %17 = %9.0;
  %18 = @func_3044() /* ty=Tensor[(10, 9, 7), float32] */;
  %19 = %16.3;
  (%17, %18, %19, meta[relay.Constant][0] /* ty=uint64 */, %var_15162, meta[relay.Constant][1] /* ty=Tensor[(1, 225), float64] */)
}

def @func_12049(%var_12020: Tensor[(15, 16, 3), uint16], %var_12021: Tensor[(15, 16, 3), uint16]) -> (Tensor[(15, 16, 3), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %20 = cast(%var_12021, dtype="uint16") /* ty=Tensor[(15, 16, 3), uint16] */;
  %21 = shape_of(%var_12020, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(%var_12020, dtype="uint16") /* ty=Tensor[(15, 16, 3), uint16] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %24 = @func_7354() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %25 = bitwise_xor(%22, %23) /* ty=Tensor[(15, 16, 3), uint16] */;
  %26 = %24.0;
  %27 = @func_3068() /* ty=Tensor[(10, 9, 7), float32] */;
  (%25, %26, %27)
}

def @func_8388(%var_8361: Tensor[(42, 4), float32]) -> (Tensor[(10, 9, 7), float32], float64, Tensor[(42, 4), float32], Tensor[(6, 4, 7), float64]) {
  %28 = @func_6057() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %29 = cast(-4.62009f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %30 = cast(%var_8361, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %31 = reshape(%29, newshape=[]) /* ty=float64 */;
  %32 = reshape(%30, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %33 = @func_4175(%31, %32) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], float64, Tensor[(10, 9, 7), float32], Tensor[(25, 9), float32], float64, Tensor[(300), int64], Tensor[(10, 9, 7), float32], Tensor[(25, 9), float64], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */;
  %34 = %33.9;
  %35 = cast(%34, dtype="float64") /* ty=Tensor[(6, 4, 7), float64] */;
  %36 = %28.0;
  %37 = erf(%35) /* ty=Tensor[(6, 4, 7), float64] */;
  (%36, -4.62009f64 /* ty=float64 */, %var_8361, %37)
}

def @func_13099() -> (Tensor[(10, 9, 7), float32], Tensor[(11, 6, 7), float64]) {
  %38 = @func_9888() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %39 = @func_12140() /* ty=(Tensor[(11, 6, 7), float64],) */;
  %40 = %38.0;
  %41 = %39.0;
  (%40, %41)
}

def @func_8159(%var_8121: Tensor[(260), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) {
  %42 = @func_7114() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(143, 14), float64]) */;
  %43 = @func_6067() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %44 = cast(meta[relay.Constant][2] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %45 = cast(%var_8121, dtype="float64") /* ty=Tensor[(260), float64] */;
  %46 = reshape(%44, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %47 = reshape(%45, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %48 = @func_1521(%46, %47) /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64]) */;
  %49 = %42.0;
  %50 = %43.0;
  %51 = %48.2;
  (%49, %50, %51, meta[relay.Constant][2] /* ty=Tensor[(130), float64] */, %var_8121)
}

def @func_12822() -> (Tensor[(10, 9, 7), bool], Tensor[(260), float64], Tensor[(260), float64]) {
  %52 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %53 = cast(meta[relay.Constant][3] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %54 = reshape(%53, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %55 = @func_8159(%54) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) */;
  %56 = %52.2;
  %57 = %55.4;
  (%56, %57, meta[relay.Constant][3] /* ty=Tensor[(260), float64] */)
}

def @func_16488() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %58 = @func_4052() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %59 = @func_9507() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %60 = %58.0;
  %61 = @func_15378() /* ty=Tensor[(10, 9, 7), float32] */;
  %62 = %59.0;
  (%60, %61, %62)
}

def @func_15851() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %63 = @func_14756() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %64 = @func_11887() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %65 = %63.1;
  %66 = %64.0;
  (%65, %66)
}

def @func_8639() -> Tensor[(10, 9, 7), float32] {
  @func_1881() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_3695(%var_3693: Tensor[(14, 130), float64]) -> (Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(14, 130), float64]) {
  %67 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %68 = cast(%var_3693, dtype="float64") /* ty=Tensor[(14, 130), float64] */;
  %69 = reshape(%68, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), float64] */;
  %70 = @func_3237(%69) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */;
  %71 = %67.1;
  %72 = %70.0;
  (%71, %72, %var_3693)
}

def @func_13510() -> Tensor[(260), float64] {
  %73 = @func_7024() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130), float64], Tensor[(130, 2), float64], float64) */;
  %73.1
}

def @func_359() -> (Tensor[(10, 9, 7), float32],) {
  %74 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  (%74,)
}

def @func_16441() -> Tensor[(10, 9, 7), float32] {
  @func_16287() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_6506() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %75 = @func_6057() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %76 = %75.0;
  %77 = cast(%76, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
  %78 = reshape(%77, newshape=[10, 9, 7]) /* ty=Tensor[(10, 9, 7), float32] */;
  %79 = @func_3807(%78) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %80 = %79.1;
  (%76, %80)
}

def @func_6957() -> Tensor[(10, 9, 7), float32] {
  %81 = @func_1071() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %81.0
}

def @func_4175(%var_4146: float64, %var_4170: Tensor[(168), float32]) -> (Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], float64, Tensor[(10, 9, 7), float32], Tensor[(25, 9), float32], float64, Tensor[(300), int64], Tensor[(10, 9, 7), float32], Tensor[(25, 9), float64], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) {
  %82 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %83 = cast(meta[relay.Constant][4] /* ty=Tensor[(25, 9), float64] */, dtype="float64") /* ty=Tensor[(25, 9), float64] */;
  %84 = cast(%var_4146, dtype="float64") /* ty=float64 */;
  %85 = reshape(%83, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float64] */;
  %86 = reshape(%84, newshape=[]) /* ty=float64 */;
  %87 = @func_3903(%85, %86) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */;
  %88 = @func_4052() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %89 = cast(meta[relay.Constant][4] /* ty=Tensor[(25, 9), float64] */, dtype="float64") /* ty=Tensor[(25, 9), float64] */;
  %90 = rsqrt(%89) /* ty=Tensor[(25, 9), float64] */;
  %91 = cast(meta[relay.Constant][4] /* ty=Tensor[(25, 9), float64] */, dtype="float32") /* ty=Tensor[(25, 9), float32] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(2), int32] */;
  %93 = cast(%90, dtype="float32") /* ty=Tensor[(25, 9), float32] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %95 = cast(meta[relay.Constant][5] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
  %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
  %97 = reshape(%95, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), int64] */;
  %98 = reshape(%96, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), int64] */;
  %99 = @func_3580(%97, %98) /* ty=(Tensor[(4, 5, 15), int64], Tensor[(10, 13, 2), bool], float64, Tensor[(4, 5, 15), float64]) */;
  %100 = @func_2763() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %101 = cast(%90, dtype="float64") /* ty=Tensor[(25, 9), float64] */;
  %102 = cast(%var_4170, dtype="float32") /* ty=Tensor[(168), float32] */;
  %103 = reshape(%102, newshape=[6, 4, 7]) /* ty=Tensor[(6, 4, 7), float32] */;
  %104 = @func_1817() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %105 = %82.0;
  %106 = %87.5;
  %107 = %88.0;
  %108 = floor_divide(%93, %94) /* ty=Tensor[(25, 9), float32] */;
  %109 = %99.2;
  %110 = %100.0;
  %111 = atanh(%101) /* ty=Tensor[(25, 9), float64] */;
  %112 = @func_3442(%103) /* ty=Tensor[(6, 4, 7), bool] */;
  %113 = %104.0;
  (%105, %106, %var_4146, %107, %108, %109, meta[relay.Constant][5] /* ty=Tensor[(300), int64] */, %110, %111, %112, %var_4170, %113)
}

def @func_3580(%var_3533: Tensor[(4, 5, 15), int64], %var_3534: Tensor[(4, 5, 15), int64]) -> (Tensor[(4, 5, 15), int64], Tensor[(10, 13, 2), bool], float64, Tensor[(4, 5, 15), float64]) {
  %114 = cast(%var_3534, dtype="int64") /* ty=Tensor[(4, 5, 15), int64] */;
  %115 = shape_of(%var_3533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %116 = cast(%var_3533, dtype="int64") /* ty=Tensor[(4, 5, 15), int64] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %118 = cast(6.58254f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %119 = reshape(%118, newshape=[]) /* ty=float64 */;
  %120 = @func_2432(%119) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(130), float64], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 13, 2), bool], Tensor[(10, 9, 7), float32], Tensor[(65, 4), bool], Tensor[(65, 4), uint16], Tensor[(65, 4), float32], Tensor[(65, 4), float64], Tensor[(10, 9, 7), float32]) */;
  %121 = cast(%var_3533, dtype="float64") /* ty=Tensor[(4, 5, 15), float64] */;
  %122 = logical_xor(%116, %117) /* ty=Tensor[(4, 5, 15), int64] */;
  %123 = %120.10;
  %124 = erf(%121) /* ty=Tensor[(4, 5, 15), float64] */;
  (%122, %123, 6.58254f64 /* ty=float64 */, %124)
}

def @func_4792() -> (Tensor[(10, 9, 7), float32],) {
  %125 = @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %126 = %125.0;
  (%126,)
}

def @func_636() -> (Tensor[(10, 9, 7), float32],) {
  %127 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  (%127,)
}

def @func_7798() -> Tensor[(10, 9, 7), float64] {
  %128 = @func_5512() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %128.0
}

def @func_4052() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %129 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %130 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
  %131 = %129.0;
  %132 = %130.2;
  %133 = @func_994() /* ty=Tensor[(10, 9, 7), float32] */;
  (%131, %132, %133)
}

def @func_8661() -> Tensor[(10, 9, 7), float32] {
  %134 = @func_7867() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %134.0
}

def @func_7066() -> Tensor[(10, 9, 7), float64] {
  %135 = @func_2959() /* ty=(Tensor[(10, 9, 7), float64],) */;
  %135.0
}

def @func_10883(%var_10859: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float32]) {
  %136 = @func_7626() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %137 = @func_9768() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %138 = @func_5326() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %139 = @func_4052() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %140 = cast(%var_10859, dtype="float64") /* ty=float64 */;
  %141 = reshape(%140, newshape=[]) /* ty=float64 */;
  %142 = @func_7538(%141) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %143 = @func_8822() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %144 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
  %145 = %136.1;
  %146 = %137.1;
  %147 = %138.0;
  %148 = %139.2;
  %149 = %142.0;
  %150 = @func_7066() /* ty=Tensor[(10, 9, 7), float64] */;
  %151 = %143.0;
  %152 = %144.3;
  %153 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  (%145, %146, %147, %148, %149, %var_10859, %150, %151, %152, %153)
}

def @func_9995(%var_9962: Tensor[(77, 4), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(77, 4), float64], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32], Tensor[(10, 9, 7), float32]) {
  %154 = cast(%var_9962, dtype="float64") /* ty=Tensor[(77, 4), float64] */;
  %155 = cast(%var_9962, dtype="float64") /* ty=Tensor[(77, 4), float64] */;
  %156 = reshape(%154, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %157 = reshape(%155, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %158 = @func_3372(%156, %157) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(10, 9, 7), float32]) */;
  %159 = %158.0;
  %160 = cast(%159, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %161 = cos(%160) /* ty=Tensor[(7, 11, 4), float64] */;
  %162 = cast(%161, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %163 = cast(%161, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %164 = acos(%163) /* ty=Tensor[(7, 11, 4), float64] */;
  %165 = cast(%164, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %166 = @func_6506() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %167 = @func_2537() /* ty=Tensor[(10, 9, 7), float32] */;
  %168 = asinh(%162) /* ty=Tensor[(7, 11, 4), float64] */;
  %169 = exp(%165) /* ty=Tensor[(7, 11, 4), float32] */;
  %170 = %166.0;
  (%167, %var_9962, %168, %169, %170)
}

def @func_16287() -> Tensor[(10, 9, 7), float32] {
  @func_5298() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_11228(%var_11194: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) {
  %171 = cast(%var_11194, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %172 = reshape(%171, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), float64] */;
  %173 = @func_3237(%172) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */;
  %174 = @func_6740() /* ty=Tensor[(10, 9, 7), float32] */;
  %175 = %173.0;
  (%174, %175, %var_11194)
}

def @func_2785() -> (Tensor[(10, 9, 7), float32],) {
  %176 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %177 = %176.0;
  (%177,)
}

def @func_713() -> (Tensor[(10, 9, 7), float32],) {
  %178 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %179 = %178.1;
  (%179,)
}

def @func_16505() -> Tensor[(10, 9, 7), float32] {
  %180 = @func_16306() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %180.1
}

def @func_8849() -> Tensor[(225), float64] {
  %181 = @func_7851() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64) */;
  %181.2
}

def @func_12528() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float32], Tensor[(910, 2), float64]) {
  %182 = @func_11359() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %183 = cast(meta[relay.Constant][6] /* ty=Tensor[(910, 2), float64] */, dtype="float64") /* ty=Tensor[(910, 2), float64] */;
  %184 = reshape(%183, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), float64] */;
  %185 = @func_3237(%184) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */;
  %186 = @func_3044() /* ty=Tensor[(10, 9, 7), float32] */;
  %187 = %182.1;
  %188 = %185.1;
  (%186, %187, %188, meta[relay.Constant][6] /* ty=Tensor[(910, 2), float64] */)
}

def @func_13429() -> (Tensor[(10, 9, 7), bool],) {
  %189 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %190 = %189.0;
  (%190,)
}

def @func_13960() -> Tensor[(10, 9, 7), float32] {
  @func_3044() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_7449(%var_7414: Tensor[(130, 1), float64], %var_7446: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(130, 1), float64], float64, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130, 2), float64], Tensor[(10, 9, 7), float64], Tensor[(1820), float64]) {
  %191 = @func_2785() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %192 = cast(%var_7414, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %193 = cast(4.96549f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %194 = reshape(%192, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %195 = reshape(%193, newshape=[]) /* ty=float64 */;
  %196 = @func_5858(%194, %195) /* ty=(Tensor[(10, 9, 7), float64], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(2304), uint16]) */;
  %197 = @func_5326() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %198 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
  %199 = cast(%var_7414, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %200 = cast(meta[relay.Constant][7] /* ty=Tensor[(130, 2), float64] */, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
  %201 = cast(4.96549f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %202 = reshape(%199, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %203 = reshape(%200, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %204 = reshape(%201, newshape=[]) /* ty=float64 */;
  %205 = @func_2254(%202, %203, %204) /* ty=(Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %206 = cast(%var_7446, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %207 = reshape(%206, newshape=[1820]) /* ty=Tensor[(1820), float64] */;
  %208 = @func_4843(%207) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) */;
  %209 = %191.0;
  %210 = %196.0;
  %211 = %197.0;
  %212 = %198.0;
  %213 = %205.3;
  %214 = %208.0;
  (%209, %210, %var_7414, 4.96549f64 /* ty=float64 */, %211, %212, %213, meta[relay.Constant][7] /* ty=Tensor[(130, 2), float64] */, %214, %var_7446)
}

def @func_11729() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %215 = @func_2785() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %216 = @func_8344() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %217 = @func_9001() /* ty=Tensor[(10, 9, 7), float32] */;
  %218 = %215.0;
  %219 = %216.0;
  (%217, %218, %219)
}

def @func_14954() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %220 = @func_13807() /* ty=Tensor[(10, 9, 7), float32] */;
  %221 = @func_14610() /* ty=Tensor[(10, 9, 7), float32] */;
  (%220, %221)
}

def @func_1358() -> (Tensor[(10, 9, 7), float32],) {
  %222 = @func_577() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %223 = %222.0;
  (%223,)
}

def @func_6740() -> Tensor[(10, 9, 7), float32] {
  %224 = @func_6067() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %224.0
}

def @func_14282() -> (Tensor[(10, 9, 7), float32],) {
  %225 = @func_8596() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %226 = %225.0;
  (%226,)
}

def @func_16306() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %227 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %228 = @func_1396() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %229 = %227.0;
  %230 = %228.0;
  (%229, %230)
}

def @func_11800() -> (Tensor[(10, 9, 7), float32],) {
  %231 = @func_8344() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %232 = %231.0;
  (%232,)
}

def @func_1297(%var_1279: Tensor[(10, 13, 1), float64], %var_1280: Tensor[(10, 13, 2), float64]) -> (Tensor[(10, 13, 2), bool],) {
  %233 = cast(%var_1279, dtype="bool") /* ty=Tensor[(10, 13, 1), bool] */;
  %234 = cast(%var_1280, dtype="bool") /* ty=Tensor[(10, 13, 2), bool] */;
  %235 = not_equal(%233, %234) /* ty=Tensor[(10, 13, 2), bool] */;
  (%235,)
}

def @func_2729() -> (Tensor[(10, 9, 7), float32],) {
  %236 = @func_577() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %237 = %236.0;
  (%237,)
}

def @func_1521(%var_1517: Tensor[(130), float64], %var_1518: Tensor[(260), float64]) -> (Tensor[(10, 9, 7), bool], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64]) {
  %238 = @func_1373() /* ty=(Tensor[(10, 9, 7), bool],) */;
  %239 = cast(%var_1517, dtype="float64") /* ty=Tensor[(130), float64] */;
  %240 = cast(%var_1518, dtype="float64") /* ty=Tensor[(260), float64] */;
  %241 = reshape(%239, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %242 = reshape(%240, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
  %243 = @func_1297(%241, %242) /* ty=(Tensor[(10, 13, 2), bool],) */;
  %244 = %238.0;
  %245 = %243.0;
  (%244, %245, %var_1517, %var_1518)
}

def @func_334() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) {
  %246 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %247 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %248 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %249 = %248.3;
  %250 = cast(%249, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %251 = %246.4;
  %252 = %247.2;
  %253 = sqrt(%250) /* ty=Tensor[(10, 9, 7), float64] */;
  (%251, %252, %253)
}

def @func_11645() -> Tensor[(10, 9, 7), float32] {
  %254 = @func_2852() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %254.0
}

def @func_12503(%var_12467: Tensor[(8, 7, 15), uint8]) -> (Tensor[(8, 7, 15), uint8], Tensor[(8, 7, 15), float64], Tensor[(10, 9, 7), float32]) {
  %255 = cast(%var_12467, dtype="uint8") /* ty=Tensor[(8, 7, 15), uint8] */;
  %256 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(8, 7, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %257 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 7, 15), uint8] */, dtype="uint8") /* ty=Tensor[(8, 7, 15), uint8] */;
  %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %259 = bitwise_or(%257, %258) /* ty=Tensor[(8, 7, 15), uint8] */;
  %260 = cast(%var_12467, dtype="uint8") /* ty=Tensor[(8, 7, 15), uint8] */;
  %261 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %262 = cast(%259, dtype="uint8") /* ty=Tensor[(8, 7, 15), uint8] */;
  %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %264 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 7, 15), uint8] */, dtype="float64") /* ty=Tensor[(8, 7, 15), float64] */;
  %265 = @func_4302() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %266 = logical_xor(%262, %263) /* ty=Tensor[(8, 7, 15), uint8] */;
  %267 = log2(%264) /* ty=Tensor[(8, 7, 15), float64] */;
  %268 = %265.0;
  (%266, %267, %268)
}

def @func_16823() -> (Tensor[(10, 9, 7), float32], float64) {
  %269 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %270 = %269.0;
  %271 = @func_14437() /* ty=float64 */;
  (%270, %271)
}

def @func_5563() -> (Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) {
  %272 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %273 = %272.2;
  %274 = @func_3947() /* ty=Tensor[(10, 9, 7), float32] */;
  (%273, %274)
}

def @func_4264() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %275 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %276 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %277 = %275.0;
  %278 = %276.0;
  (%277, %278)
}

def @func_5200() -> (Tensor[(10, 9, 7), float32],) {
  %279 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %280 = %279.0;
  (%280,)
}

def @func_5486() -> Tensor[(10, 9, 7), float32] {
  %281 = @func_5234() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %281.0
}

def @func_13807() -> Tensor[(10, 9, 7), float32] {
  %282 = @func_5563() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %282.1
}

def @func_7354() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %283 = @func_5200() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %284 = @func_2924() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %285 = %283.0;
  %286 = %284.1;
  (%285, %286)
}

def @func_8923() -> (Tensor[(10, 9, 7), float64],) {
  %287 = @func_7066() /* ty=Tensor[(10, 9, 7), float64] */;
  (%287,)
}

def @func_16881(%var_16878: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32], Tensor[(1820), float64]) {
  %288 = @func_2924() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %289 = @func_13429() /* ty=(Tensor[(10, 9, 7), bool],) */;
  %290 = cast(%var_16878, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %291 = reshape(%290, newshape=[1820]) /* ty=Tensor[(1820), float64] */;
  %292 = @func_6866(%291) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %293 = %288.0;
  %294 = %289.0;
  %295 = %292.4;
  (%293, %294, %295, %var_16878)
}

def @func_3237(%var_3199: Tensor[(14, 13, 10), float64]) -> (Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) {
  %296 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 1, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 1, 10), float64] */;
  %297 = cast(%var_3199, dtype="float64") /* ty=Tensor[(14, 13, 10), float64] */;
  %298 = cast(%var_3199, dtype="float32") /* ty=Tensor[(14, 13, 10), float32] */;
  %299 = floor_mod(%296, %297) /* ty=Tensor[(14, 13, 10), float64] */;
  %300 = sqrt(%298) /* ty=Tensor[(14, 13, 10), float32] */;
  (%299, %300)
}

def @func_14815() -> (Tensor[(10, 9, 7), float32],) {
  %301 = @func_9844() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %302 = %301.0;
  (%302,)
}

def @func_5377(%var_5341: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float32], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %303 = @func_4865() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %304 = cast(%var_5341, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %305 = reshape(%304, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), float64] */;
  %306 = @func_3237(%305) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */;
  %307 = @func_5234() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %308 = %303.0;
  %309 = @func_1881() /* ty=Tensor[(10, 9, 7), float32] */;
  %310 = %306.1;
  %311 = %307.0;
  %312 = @func_777() /* ty=Tensor[(10, 9, 7), float32] */;
  (%308, %309, %310, %var_5341, %311, %312)
}

def @func_5326() -> (Tensor[(10, 9, 7), float32],) {
  %313 = @func_5028() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) */;
  %314 = %313.0;
  (%314,)
}

def @func_5858(%var_5842: Tensor[(130), float64], %var_5844: float64) -> (Tensor[(10, 9, 7), float64], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(2304), uint16]) {
  %315 = @func_5716() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %316 = %315.0;
  %317 = cast(%316, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %318 = cast(%var_5842, dtype="float64") /* ty=Tensor[(130), float64] */;
  %319 = cast(meta[relay.Constant][10] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %320 = cast(%var_5844, dtype="float64") /* ty=float64 */;
  %321 = reshape(%318, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %322 = reshape(%319, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %323 = reshape(%320, newshape=[]) /* ty=float64 */;
  %324 = @func_2254(%321, %322, %323) /* ty=(Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %325 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
  %326 = cosh(%317) /* ty=Tensor[(10, 9, 7), float64] */;
  %327 = %324.5;
  %328 = %325.1;
  (%326, %327, %var_5842, meta[relay.Constant][10] /* ty=Tensor[(260), float64] */, %var_5844, %328)
}

def @func_8667() -> Tensor[(10, 9, 7), float32] {
  %329 = @func_5716() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %329.0
}

def @func_1071() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %330 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %331 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %332 = %330.0;
  %333 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %334 = %331.0;
  (%332, %333, %334)
}

def @func_4865() -> (Tensor[(10, 9, 7), float32],) {
  %335 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %336 = %335.0;
  (%336,)
}

def @func_16578(%var_16512: Tensor[(3, 12, 1), float32]) -> (Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(3, 12, ?), bool], Tensor[(3, 12, 1), float32]) {
  %337 = @func_2924() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %338 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
  %339 = @func_5028() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) */;
  %340 = cast(%var_16512, dtype="float32") /* ty=Tensor[(3, 12, 1), float32] */;
  %341 = exp(%340) /* ty=Tensor[(3, 12, 1), float32] */;
  %342 = cast(%var_16512, dtype="bool") /* ty=Tensor[(3, 12, 1), bool] */;
  %343 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %344 = cast(%341, dtype="bool") /* ty=Tensor[(3, 12, 1), bool] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %346 = cast(%341, dtype="float32") /* ty=Tensor[(3, 12, 1), float32] */;
  %347 = %337.0;
  %348 = %338.1;
  %349 = %339.0;
  %350 = less_equal(%344, %345) /* ty=Tensor[(3, 12, ?), bool] */;
  %351 = log2(%346) /* ty=Tensor[(3, 12, 1), float32] */;
  (%347, %348, %349, %350, %351)
}

def @func_4679(%var_4675: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(14, 13, 10), float32]) {
  %352 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %353 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %354 = @func_3634() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %355 = cast(%var_4675, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %356 = reshape(%355, newshape=[14, 130]) /* ty=Tensor[(14, 130), float64] */;
  %357 = @func_3695(%356) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(14, 130), float64]) */;
  %358 = %357.1;
  %359 = cast(%358, dtype="float64") /* ty=Tensor[(14, 13, 10), float64] */;
  %360 = reshape(%359, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), float64] */;
  %361 = @func_3237(%360) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */;
  %362 = %352.0;
  %363 = %353.0;
  %364 = %354.0;
  %365 = %361.1;
  (%362, %363, %364, %358, %var_4675, %365)
}

def @func_13544() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %366 = @func_5512() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %367 = @func_2763() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %368 = %366.1;
  %369 = %367.0;
  (%368, %369)
}

def @func_9281() -> (Tensor[(192, 12), uint16],) {
  %370 = @func_6369() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(192, 12), uint16], float64, Tensor[(600), int32]) */;
  %371 = %370.3;
  (%371,)
}

def @func_9821() -> (Tensor[(10, 9, 7), float32],) {
  %372 = @func_8515() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */;
  %373 = %372.0;
  (%373,)
}

def @func_10140() -> (Tensor[(168), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) {
  %374 = @func_8515() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */;
  %375 = @func_5716() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %376 = @func_5563() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %377 = %374.2;
  %378 = %375.0;
  %379 = %376.0;
  (%377, %378, %379)
}

def @func_7867() -> (Tensor[(10, 9, 7), float32],) {
  %380 = @func_3287() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %381 = %380.0;
  (%381,)
}

def @func_4761() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16]) {
  %382 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %383 = cast(meta[relay.Constant][11] /* ty=Tensor[(2304), uint16] */, dtype="uint16") /* ty=Tensor[(2304), uint16] */;
  %384 = cast(meta[relay.Constant][11] /* ty=Tensor[(2304), uint16] */, dtype="uint16") /* ty=Tensor[(2304), uint16] */;
  %385 = reshape(%383, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
  %386 = reshape(%384, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
  %387 = @func_971(%385, %386) /* ty=(Tensor[(12, 12, 16), uint16], Tensor[(12, 12, 16), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %388 = %382.0;
  %389 = %387.2;
  (%388, %389, meta[relay.Constant][11] /* ty=Tensor[(2304), uint16] */)
}

def @func_14128(%var_14081: Tensor[(4, 6, 10), float64], %var_14091: Tensor[(600), int32]) -> (Tensor[(4, 6, 10), float64], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(1, 1820), float64], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64]) {
  %390 = cast(%var_14081, dtype="float64") /* ty=Tensor[(4, 6, 10), float64] */;
  %391 = cast(%var_14091, dtype="int32") /* ty=Tensor[(600), int32] */;
  %392 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 1820), float64] */, dtype="float64") /* ty=Tensor[(1, 1820), float64] */;
  %393 = reshape(%391, newshape=[600]) /* ty=Tensor[(600), int32] */;
  %394 = reshape(%392, newshape=[7, 260]) /* ty=Tensor[(7, 260), float64] */;
  %395 = @func_9102(%393, %394) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float32], Tensor[(7, 260), float64], Tensor[(10, 9, 7), float32], Tensor[(65, 4), float32], Tensor[(10, 9, 7), float64]) */;
  %396 = @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %397 = cast(meta[relay.Constant][13] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %398 = reshape(%397, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %399 = @func_1681(%398) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
  %400 = tan(%390) /* ty=Tensor[(4, 6, 10), float64] */;
  %401 = %395.7;
  %402 = %396.0;
  %403 = %399.2;
  (%400, %401, %var_14091, meta[relay.Constant][12] /* ty=Tensor[(1, 1820), float64] */, %402, %403, meta[relay.Constant][13] /* ty=Tensor[(2002), float64] */)
}

def @func_8515() -> (Tensor[(10, 9, 7), float32], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) {
  %404 = @func_5908() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %405 = cast(meta[relay.Constant][14] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %406 = reshape(%405, newshape=[6, 4, 7]) /* ty=Tensor[(6, 4, 7), float32] */;
  %407 = @func_4490() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %408 = %404.2;
  %409 = @func_3442(%406) /* ty=Tensor[(6, 4, 7), bool] */;
  %410 = %407.1;
  (%408, %409, meta[relay.Constant][14] /* ty=Tensor[(168), float32] */, %410)
}

def @func_10361() -> (Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %411 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %412 = @func_8231() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %413 = @func_4865() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %414 = %411.2;
  %415 = @func_9547() /* ty=Tensor[(10, 9, 7), float32] */;
  %416 = %412.0;
  %417 = %413.0;
  (%414, %415, %416, %417)
}

def @func_16770(%var_16738: Tensor[(260), float64]) -> (float64, Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32]) {
  %418 = cast(meta[relay.Constant][15] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %419 = cast(%var_16738, dtype="float64") /* ty=Tensor[(260), float64] */;
  %420 = reshape(%418, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %421 = reshape(%419, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
  %422 = @func_1297(%420, %421) /* ty=(Tensor[(10, 13, 2), bool],) */;
  %423 = @func_11485() /* ty=float64 */;
  %424 = cast(%423, dtype="float64") /* ty=float64 */;
  %425 = reshape(%424, newshape=[]) /* ty=float64 */;
  %426 = @func_7538(%425) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %427 = %422.0;
  %428 = %426.1;
  (%423, %427, meta[relay.Constant][15] /* ty=Tensor[(130), float64] */, %var_16738, %428)
}

def @func_4302() -> (Tensor[(10, 9, 7), float32],) {
  %429 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %430 = %429.0;
  (%430,)
}

def @func_15978() -> (float64, Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) {
  %431 = @func_7851() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64) */;
  %432 = cast(meta[relay.Constant][16] /* ty=Tensor[(1820), float64] */, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %433 = reshape(%432, newshape=[1820]) /* ty=Tensor[(1820), float64] */;
  %434 = @func_6866(%433) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %435 = @func_14437() /* ty=float64 */;
  %436 = %431.1;
  %437 = %434.2;
  (%435, %436, %437, meta[relay.Constant][16] /* ty=Tensor[(1820), float64] */)
}

def @func_8231() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %438 = @func_4264() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %439 = @func_7354() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %440 = %438.1;
  %441 = %439.0;
  (%440, %441)
}

def @func_6806() -> Tensor[(10, 9, 7), float32] {
  %442 = @func_6369() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(192, 12), uint16], float64, Tensor[(600), int32]) */;
  %442.2
}

def @main(%var_17163: int32, %var_17164: Tensor[(1, 8, 5), int32]) -> (Tensor[(1, 8, 5), bool],) {
  %443 = cast(%var_17163, dtype="bool") /* ty=bool */;
  %444 = cast(%var_17164, dtype="bool") /* ty=Tensor[(1, 8, 5), bool] */;
  %445 = greater_equal(%443, %444) /* ty=Tensor[(1, 8, 5), bool] */;
  (%445,)
}

def @func_7319() -> (Tensor[(10, 9, 7), float32], Tensor[(2304), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %446 = @func_5716() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %447 = @func_4761() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16]) */;
  %448 = %447.2;
  %449 = cast(%448, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %450 = @func_2785() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %451 = %446.0;
  %452 = asinh(%449) /* ty=Tensor[(2304), float32] */;
  %453 = %450.0;
  %454 = @func_6740() /* ty=Tensor[(10, 9, 7), float32] */;
  %455 = @func_5765() /* ty=Tensor[(10, 9, 7), float32] */;
  %456 = @func_6323() /* ty=Tensor[(10, 9, 7), float32] */;
  (%451, %452, %453, %454, %455, %456)
}

def @func_9507() -> (Tensor[(10, 9, 7), float32],) {
  %457 = @func_1770() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %458 = %457.0;
  (%458,)
}

def @func_2222() -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float64]) {
  %459 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %460 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %461 = %460.1;
  %462 = cast(%461, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %463 = %459.2;
  %464 = acosh(%462) /* ty=Tensor[(10, 9, 7), float64] */;
  (%463, %464)
}

def @func_3947() -> Tensor[(10, 9, 7), float32] {
  %465 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %465.0
}

def @func_4593(%var_4512: Tensor[(600), int32]) -> (Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(14, 11, 13), float64], float64, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %466 = @func_2924() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %467 = cast(%var_4512, dtype="int32") /* ty=Tensor[(600), int32] */;
  %468 = cast(%var_4512, dtype="int32") /* ty=Tensor[(600), int32] */;
  %469 = reshape(%467, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), int32] */;
  %470 = reshape(%468, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), int32] */;
  %471 = @func_3509(%469, %470) /* ty=(Tensor[(4, 10, 15), float64], Tensor[(4, 10, 15), uint8], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) */;
  %472 = @func_2729() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %473 = @func_1770() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %474 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
  %475 = cast(-4.17311f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %476 = reshape(%475, newshape=[]) /* ty=float64 */;
  %477 = @func_2899(%476) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(143, 14), float64], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64) */;
  %478 = @func_1235() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %479 = @func_2263() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %480 = %466.1;
  %481 = %471.3;
  %482 = %472.0;
  %483 = %473.0;
  %484 = %474.1;
  %485 = %477.6;
  %486 = %478.0;
  %487 = %479.0;
  (%480, %481, %var_4512, %482, %483, %484, %485, -4.17311f64 /* ty=float64 */, %486, %487)
}

def @func_8059() -> (Tensor[(10, 9, 7), float32],) {
  %488 = @func_4865() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %489 = %488.0;
  (%489,)
}

def @func_7024() -> (Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130), float64], Tensor[(130, 2), float64], float64) {
  %490 = cast(meta[relay.Constant][17] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %491 = cast(meta[relay.Constant][18] /* ty=Tensor[(130, 2), float64] */, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
  %492 = cast(-4.65325f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %493 = reshape(%490, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %494 = reshape(%491, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %495 = reshape(%492, newshape=[]) /* ty=float64 */;
  %496 = @func_2254(%493, %494, %495) /* ty=(Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %497 = @func_6957() /* ty=Tensor[(10, 9, 7), float32] */;
  %498 = %496.3;
  (%497, %498, meta[relay.Constant][17] /* ty=Tensor[(130), float64] */, meta[relay.Constant][18] /* ty=Tensor[(130, 2), float64] */, -4.65325f64 /* ty=float64 */)
}

def @func_10633() -> float64 {
  %499 = @func_7024() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130), float64], Tensor[(130, 2), float64], float64) */;
  %499.4
}

def @func_9350() -> (Tensor[(10, 9, 7), float32],) {
  %500 = @func_1235() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %501 = %500.1;
  (%501,)
}

def @func_2712() -> (Tensor[(10, 9, 7), float32],) {
  %502 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
  %503 = %502.2;
  (%503,)
}

def @func_11867() -> (Tensor[(10, 9, 7), float32],) {
  %504 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %505 = %504.0;
  (%505,)
}

def @func_14190(%var_14176: int64, %var_14177: Tensor[(3, 6, 6), int64]) -> (Tensor[(3, 6, 6), bool], Tensor[(10, 9, 7), float32]) {
  %506 = cast(%var_14176, dtype="bool") /* ty=bool */;
  %507 = cast(%var_14177, dtype="bool") /* ty=Tensor[(3, 6, 6), bool] */;
  %508 = @func_11515() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %509 = equal(%506, %507) /* ty=Tensor[(3, 6, 6), bool] */;
  %510 = %508.0;
  (%509, %510)
}

def @func_14458() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %511 = @func_8059() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %512 = @func_8639() /* ty=Tensor[(10, 9, 7), float32] */;
  %513 = %511.0;
  (%512, %513)
}

def @func_3044() -> Tensor[(10, 9, 7), float32] {
  %514 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %514.0
}

def @func_11592(%var_11575: Tensor[(225), float64]) -> (Tensor[(225), bool],) {
  %515 = @func_8911() /* ty=Tensor[(225), float64] */;
  %516 = cast(%var_11575, dtype="bool") /* ty=Tensor[(225), bool] */;
  %517 = shape_of(%515, dtype="int32") /* ty=Tensor[(1), int32] */;
  %518 = cast(%515, dtype="bool") /* ty=Tensor[(225), bool] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?), bool] */;
  %520 = equal(%518, %519) /* ty=Tensor[(225), bool] */;
  (%520,)
}

def @func_9102(%var_9059: Tensor[(600), int32], %var_9076: Tensor[(7, 260), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float32], Tensor[(7, 260), float64], Tensor[(10, 9, 7), float32], Tensor[(65, 4), float32], Tensor[(10, 9, 7), float64]) {
  %521 = @func_2852() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %522 = cast(meta[relay.Constant][19] /* ty=Tensor[(65, 4), float64] */, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
  %523 = reshape(%522, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %524 = @func_8159(%523) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) */;
  %525 = cast(%var_9059, dtype="int32") /* ty=Tensor[(600), int32] */;
  %526 = reshape(%525, newshape=[60, 10]) /* ty=Tensor[(60, 10), int32] */;
  %527 = @func_7968(%526) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(60, 10), int32]) */;
  %528 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %529 = cast(%var_9076, dtype="float64") /* ty=Tensor[(7, 260), float64] */;
  %530 = reshape(%529, newshape=[1820]) /* ty=Tensor[(1820), float64] */;
  %531 = @func_4679(%530) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(14, 13, 10), float32]) */;
  %532 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
  %533 = cast(meta[relay.Constant][19] /* ty=Tensor[(65, 4), float64] */, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
  %534 = log10(%533) /* ty=Tensor[(65, 4), float32] */;
  %535 = cast(meta[relay.Constant][19] /* ty=Tensor[(65, 4), float64] */, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
  %536 = shape_of(%534, dtype="int32") /* ty=Tensor[(2), int32] */;
  %537 = cast(%534, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
  %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %539 = @func_8923() /* ty=(Tensor[(10, 9, 7), float64],) */;
  %540 = %521.0;
  %541 = %524.1;
  %542 = %527.1;
  %543 = %528.2;
  %544 = %531.5;
  %545 = %532.0;
  %546 = power(%537, %538) /* ty=Tensor[(65, 4), float32] */;
  %547 = %539.0;
  (%540, %541, %542, %var_9059, %543, %544, %var_9076, %545, %546, %547)
}

def @func_5512() -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) {
  %548 = @func_5116() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float32], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %549 = %548.0;
  %550 = @func_777() /* ty=Tensor[(10, 9, 7), float32] */;
  (%549, %550)
}

def @func_7726(%var_7689: Tensor[(260), float64], %var_7690: float64) -> (Tensor[(10, 9, 7), float32], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) {
  %551 = @func_7354() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %552 = cast(meta[relay.Constant][20] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %553 = cast(%var_7689, dtype="float64") /* ty=Tensor[(260), float64] */;
  %554 = cast(%var_7690, dtype="float64") /* ty=float64 */;
  %555 = reshape(%552, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %556 = reshape(%553, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %557 = reshape(%554, newshape=[]) /* ty=float64 */;
  %558 = @func_2254(%555, %556, %557) /* ty=(Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %559 = @func_2959() /* ty=(Tensor[(10, 9, 7), float64],) */;
  %560 = @func_2763() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %561 = %551.1;
  %562 = %558.5;
  %563 = %559.0;
  %564 = %560.0;
  (%561, %562, meta[relay.Constant][20] /* ty=Tensor[(130), float64] */, %var_7689, %var_7690, %563, %564)
}

def @func_9768() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %565 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
  %566 = @func_8414() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %567 = @func_8414() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %568 = %565.1;
  %569 = %566.0;
  %570 = %567.0;
  (%568, %569, %570)
}

def @func_15429() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) {
  %571 = @func_9428() /* ty=(Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), bool]) */;
  %572 = %571.0;
  %573 = @func_10406() /* ty=Tensor[(10, 9, 7), bool] */;
  (%572, %573)
}

def @func_16259() -> (Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float32]) {
  %574 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %575 = @func_14823() /* ty=(float64,) */;
  %576 = @func_5716() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %577 = %574.0;
  %578 = %575.0;
  %579 = %576.0;
  (%577, %578, %579)
}

def @func_15611() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %580 = @func_5028() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) */;
  %581 = @func_13342() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(14, 5, 10), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %582 = %580.0;
  %583 = %581.4;
  (%582, %583)
}

def @func_6679() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64]) {
  %584 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %585 = @func_2222() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float64]) */;
  %586 = %585.0;
  %587 = @func_2537() /* ty=Tensor[(10, 9, 7), float32] */;
  %588 = cast(%587, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %589 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%586, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %592 = @func_5234() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %593 = cast(meta[relay.Constant][21] /* ty=Tensor[(600), int32] */, dtype="int32") /* ty=Tensor[(600), int32] */;
  %594 = reshape(%593, newshape=[600]) /* ty=Tensor[(600), int32] */;
  %595 = @func_4593(%594) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(14, 11, 13), float64], float64, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %596 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %597 = cast(meta[relay.Constant][22] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %598 = reshape(%597, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %599 = @func_1681(%598) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
  %600 = %584.0;
  %601 = divide(%590, %591) /* ty=Tensor[(10, 9, 7), float64] */;
  %602 = %592.0;
  %603 = %595.3;
  %604 = %596.1;
  %605 = @func_3947() /* ty=Tensor[(10, 9, 7), float32] */;
  %606 = %599.0;
  (%600, %601, %602, %603, meta[relay.Constant][21] /* ty=Tensor[(600), int32] */, %604, %605, %606, meta[relay.Constant][22] /* ty=Tensor[(2002), float64] */)
}

def @func_11553() -> (Tensor[(10, 9, 7), float32],) {
  %607 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  (%607,)
}

def @func_10703() -> (Tensor[(10, 9, 7), float32],) {
  %608 = @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %609 = %608.0;
  (%609,)
}

def @func_14700(%var_14695: Tensor[(600), int32]) -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64, Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(1820), float64]) {
  %610 = @func_2222() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float64]) */;
  %611 = cast(meta[relay.Constant][23] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %612 = cast(0.293378f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %613 = reshape(%611, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float64] */;
  %614 = reshape(%612, newshape=[]) /* ty=float64 */;
  %615 = @func_3903(%613, %614) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */;
  %616 = cast(%var_14695, dtype="int32") /* ty=Tensor[(600), int32] */;
  %617 = cast(meta[relay.Constant][24] /* ty=Tensor[(1820), float64] */, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %618 = reshape(%616, newshape=[600]) /* ty=Tensor[(600), int32] */;
  %619 = reshape(%617, newshape=[7, 260]) /* ty=Tensor[(7, 260), float64] */;
  %620 = @func_9102(%618, %619) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float32], Tensor[(7, 260), float64], Tensor[(10, 9, 7), float32], Tensor[(65, 4), float32], Tensor[(10, 9, 7), float64]) */;
  %621 = %610.0;
  %622 = %615.3;
  %623 = %620.2;
  (%621, %622, meta[relay.Constant][23] /* ty=Tensor[(225), float64] */, 0.293378f64 /* ty=float64 */, %623, %var_14695, meta[relay.Constant][24] /* ty=Tensor[(1820), float64] */)
}

def @func_13891() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %624 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %625 = @func_10230() /* ty=Tensor[(10, 9, 7), float32] */;
  %626 = @func_6323() /* ty=Tensor[(10, 9, 7), float32] */;
  %627 = %624.0;
  (%625, %626, %627)
}

def @func_6026(%var_5992: Tensor[(300), int64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 5, 15), int64], Tensor[(300), int64], Tensor[(10, 9, 7), float32]) {
  %628 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %629 = @func_2852() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %630 = @func_2852() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %631 = cast(%var_5992, dtype="int64") /* ty=Tensor[(300), int64] */;
  %632 = cast(%var_5992, dtype="int64") /* ty=Tensor[(300), int64] */;
  %633 = reshape(%631, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), int64] */;
  %634 = reshape(%632, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), int64] */;
  %635 = @func_3580(%633, %634) /* ty=(Tensor[(4, 5, 15), int64], Tensor[(10, 13, 2), bool], float64, Tensor[(4, 5, 15), float64]) */;
  %636 = @func_4052() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %637 = %628.1;
  %638 = %629.0;
  %639 = %630.0;
  %640 = %635.0;
  %641 = %636.1;
  (%637, %638, %639, %640, %var_5992, %641)
}

def @func_8822() -> (Tensor[(10, 9, 7), float32],) {
  %642 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
  %643 = %642.2;
  (%643,)
}

def @func_9428() -> (Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), bool]) {
  %644 = @func_2712() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %645 = @func_7851() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64) */;
  %646 = %644.0;
  %647 = cast(%646, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
  %648 = reshape(%647, newshape=[10, 9, 7]) /* ty=Tensor[(10, 9, 7), float32] */;
  %649 = @func_3807(%648) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %650 = %645.3;
  %651 = %649.2;
  (%646, %650, %651)
}

def @func_14346(%var_14337: Tensor[(8, 2, 6), uint64], %var_14338: Tensor[(8, 2, 6), uint64]) -> (Tensor[(8, 2, 6), uint64], Tensor[(8, 2, 6), float32]) {
  %652 = cast(%var_14338, dtype="uint64") /* ty=Tensor[(8, 2, 6), uint64] */;
  %653 = shape_of(%var_14337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%var_14337, dtype="uint64") /* ty=Tensor[(8, 2, 6), uint64] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %656 = cast(%var_14338, dtype="float32") /* ty=Tensor[(8, 2, 6), float32] */;
  %657 = shape_of(%var_14337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%var_14337, dtype="float32") /* ty=Tensor[(8, 2, 6), float32] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %660 = logical_xor(%654, %655) /* ty=Tensor[(8, 2, 6), uint64] */;
  %661 = floor_mod(%658, %659) /* ty=Tensor[(8, 2, 6), float32] */;
  (%660, %661)
}

def @func_14022() -> (Tensor[(10, 9, 7), float64],) {
  %662 = @func_8923() /* ty=(Tensor[(10, 9, 7), float64],) */;
  %663 = %662.0;
  (%663,)
}

def @func_11453() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 5, 10), float32], Tensor[(10, 9, 7), float32]) {
  %664 = @func_7403() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2002), float64]) */;
  %665 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %666 = @func_7765() /* ty=(Tensor[(14, 5, 10), float64], Tensor[(14, 5, 10), float32]) */;
  %667 = @func_8596() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %668 = %664.0;
  %669 = %665.3;
  %670 = %666.1;
  %671 = %667.2;
  (%668, %669, %670, %671)
}

def @func_15456() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %672 = @func_4865() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %673 = @func_3947() /* ty=Tensor[(10, 9, 7), float32] */;
  %674 = %672.0;
  (%673, %674)
}

def @func_2959() -> (Tensor[(10, 9, 7), float64],) {
  %675 = @func_2924() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %676 = %675.2;
  (%676,)
}

def @func_12068() -> Tensor[(10, 9, 7), float64] {
  %677 = @func_4490() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %677.0
}

def @func_15770() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %678 = @func_14923() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %679 = @func_5028() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) */;
  %680 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %681 = @func_13621() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %682 = @func_14282() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %683 = %678.2;
  %684 = %679.1;
  %685 = %680.2;
  %686 = %681.2;
  %687 = %682.0;
  (%683, %684, %685, %686, %687)
}

def @func_14528() -> (Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) {
  %688 = @func_5116() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float32], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %689 = @func_2959() /* ty=(Tensor[(10, 9, 7), float64],) */;
  %690 = @func_12528() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float32], Tensor[(910, 2), float64]) */;
  %691 = %688.1;
  %692 = %689.0;
  %693 = %690.1;
  (%691, %692, %693)
}

def @func_6866(%var_6849: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %694 = @func_4761() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16]) */;
  %695 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %696 = cast(%var_6849, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %697 = reshape(%696, newshape=[14, 130]) /* ty=Tensor[(14, 130), float64] */;
  %698 = @func_3695(%697) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(14, 130), float64]) */;
  %699 = @func_5326() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %700 = %694.0;
  %701 = %695.1;
  %702 = %698.1;
  %703 = @func_4331() /* ty=Tensor[(10, 9, 7), float32] */;
  %704 = %699.0;
  (%700, %701, %702, %var_6849, %703, %704)
}

def @func_3287() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %705 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %706 = %705.0;
  %707 = @func_2537() /* ty=Tensor[(10, 9, 7), float32] */;
  (%706, %707)
}

def @func_11887() -> (Tensor[(10, 9, 7), float32],) {
  %708 = @func_1770() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %709 = %708.0;
  (%709,)
}

def @func_5664(%var_5645: float64, %var_5646: Tensor[(11, 10, 8), float64]) -> (Tensor[(11, 10, 8), float64],) {
  %710 = cast(%var_5645, dtype="float64") /* ty=float64 */;
  %711 = cast(%var_5646, dtype="float64") /* ty=Tensor[(11, 10, 8), float64] */;
  %712 = divide(%710, %711) /* ty=Tensor[(11, 10, 8), float64] */;
  (%712,)
}

def @func_3068() -> Tensor[(10, 9, 7), float32] {
  %713 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %714 = %713.0;
  %715 = cast(%714, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
  sin(%715) /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_11359() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %716 = @func_5200() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %717 = %716.0;
  %718 = @func_10230() /* ty=Tensor[(10, 9, 7), float32] */;
  (%717, %718)
}

def @func_16205() -> Tensor[(10, 9, 7), float32] {
  @func_13807() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_16126() -> (Tensor[(192, 12), uint16],) {
  %719 = @func_9281() /* ty=(Tensor[(192, 12), uint16],) */;
  %720 = %719.0;
  (%720,)
}

def @func_15281() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %721 = @func_9888() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %722 = @func_2763() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %723 = %721.0;
  %724 = %722.0;
  (%723, %724)
}

def @func_12392(%var_12381: Tensor[(15, 4, 15), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(15, 4, 15), uint32]) {
  %725 = @func_4792() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %726 = @func_8036() /* ty=(Tensor[(15, 4, 15), float64],) */;
  %727 = %726.0;
  %728 = cast(%var_12381, dtype="uint32") /* ty=Tensor[(15, 4, 15), uint32] */;
  %729 = shape_of(%727, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%727, dtype="uint32") /* ty=Tensor[(15, 4, 15), uint32] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %732 = %725.0;
  %733 = left_shift(%730, %731) /* ty=Tensor[(15, 4, 15), uint32] */;
  (%732, %733)
}

def @func_596(%var_585: float64, %var_586: Tensor[(14, 11, 13), float64]) -> Tensor[(14, 11, 13), float64] {
  %734 = cast(%var_585, dtype="float64") /* ty=float64 */;
  %735 = cast(%var_586, dtype="float64") /* ty=Tensor[(14, 11, 13), float64] */;
  floor_divide(%734, %735) /* ty=Tensor[(14, 11, 13), float64] */
}

def @func_15941(%var_15894: Tensor[(2002), float64], %var_15907: Tensor[(825), uint64], %var_15917: Tensor[(14, 130), float64], %var_15934: Tensor[(825), uint64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 130), float64], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(825), bool], Tensor[(10, 9, 7), bool]) {
  %736 = @func_14815() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %737 = cast(%var_15894, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %738 = reshape(%737, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %739 = @func_1274(%738) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %740 = cast(%var_15907, dtype="uint64") /* ty=Tensor[(825), uint64] */;
  %741 = reshape(%740, newshape=[825]) /* ty=Tensor[(825), uint64] */;
  %742 = @func_15173(%741) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], uint64, Tensor[(825), uint64], Tensor[(1, 225), float64]) */;
  %743 = cast(%var_15917, dtype="float64") /* ty=Tensor[(14, 130), float64] */;
  %744 = reshape(%743, newshape=[1820]) /* ty=Tensor[(1820), float64] */;
  %745 = @func_4679(%744) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(14, 13, 10), float32]) */;
  %746 = cast(meta[relay.Constant][25] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %747 = reshape(%746, newshape=[6, 4, 7]) /* ty=Tensor[(6, 4, 7), float32] */;
  %748 = cast(%var_15934, dtype="bool") /* ty=Tensor[(825), bool] */;
  %749 = shape_of(%var_15907, dtype="int32") /* ty=Tensor[(1), int32] */;
  %750 = cast(%var_15907, dtype="bool") /* ty=Tensor[(825), bool] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?), bool] */;
  %752 = @func_10140() /* ty=(Tensor[(168), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %753 = %736.0;
  %754 = @func_10158() /* ty=Tensor[(10, 9, 7), float32] */;
  %755 = %739.0;
  %756 = @func_6957() /* ty=Tensor[(10, 9, 7), float32] */;
  %757 = %742.2;
  %758 = %745.1;
  %759 = @func_3442(%747) /* ty=Tensor[(6, 4, 7), bool] */;
  %760 = greater_equal(%750, %751) /* ty=Tensor[(825), bool] */;
  %761 = %752.2;
  (%753, %754, %755, %var_15894, %756, %757, %758, %var_15917, %759, meta[relay.Constant][25] /* ty=Tensor[(168), float32] */, %760, %761)
}

def @func_1235() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %762 = @func_994() /* ty=Tensor[(10, 9, 7), float32] */;
  %763 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  (%762, %763)
}

def @func_9001() -> Tensor[(10, 9, 7), float32] {
  @func_3068() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_5116() -> (Tensor[(10, 9, 7), float64], Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float32], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(10, 9, 7), float32]) {
  %764 = @func_4490() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %765 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 7), float64] */;
  %766 = atanh(%765) /* ty=Tensor[(16, 16, 7), float64] */;
  %767 = cast(%766, dtype="int64") /* ty=Tensor[(16, 16, 7), int64] */;
  %768 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(16, 16, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 16, 7), float64] */, dtype="int64") /* ty=Tensor[(16, 16, 7), int64] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %771 = @func_1396() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %772 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 7), float64] */;
  %773 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 7), float64] */;
  %774 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(16, 16, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 7), float64] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %777 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 16, 7), float64] */, dtype="uint8") /* ty=Tensor[(16, 16, 7), uint8] */;
  %778 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%766, dtype="uint8") /* ty=Tensor[(16, 16, 7), uint8] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %781 = subtract(%779, %780) /* ty=Tensor[(16, 16, 7), uint8] */;
  %782 = cast(meta[relay.Constant][28] /* ty=Tensor[(16, 16, 7), uint8] */, dtype="float64") /* ty=Tensor[(16, 16, 7), float64] */;
  %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%781, dtype="float64") /* ty=Tensor[(16, 16, 7), float64] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %786 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %787 = %764.0;
  %788 = add(%769, %770) /* ty=Tensor[(16, 16, 7), int64] */;
  %789 = %771.0;
  %790 = rsqrt(%772) /* ty=Tensor[(16, 16, 7), float64] */;
  %791 = power(%775, %776) /* ty=Tensor[(16, 16, 7), float64] */;
  %792 = floor_mod(%784, %785) /* ty=Tensor[(16, 16, 7), float64] */;
  %793 = %786.0;
  (%787, %788, %789, %790, %791, %792, %793)
}

def @func_485() -> (Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) {
  %794 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %795 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %796 = cast(%795, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
  %797 = shape_of(%794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%794, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %800 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %801 = greater_equal(%798, %799) /* ty=Tensor[(10, 9, 7), bool] */;
  %802 = %800.0;
  (%801, %802)
}

def @func_9844() -> (Tensor[(10, 9, 7), float32],) {
  %803 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %804 = %803.0;
  (%804,)
}

def @func_13927() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %805 = @func_9821() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %806 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %807 = %805.0;
  %808 = @func_9933() /* ty=Tensor[(10, 9, 7), float32] */;
  %809 = %806.1;
  %810 = @func_9454() /* ty=Tensor[(10, 9, 7), float32] */;
  %811 = @func_7229() /* ty=Tensor[(10, 9, 7), float32] */;
  (%807, %808, %809, %810, %811)
}

def @func_7968(%var_7961: Tensor[(60, 10), int32]) -> (Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(60, 10), int32]) {
  %812 = @func_6067() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %813 = cast(%var_7961, dtype="int32") /* ty=Tensor[(60, 10), int32] */;
  %814 = cast(%var_7961, dtype="int32") /* ty=Tensor[(60, 10), int32] */;
  %815 = reshape(%813, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), int32] */;
  %816 = reshape(%814, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), int32] */;
  %817 = @func_3509(%815, %816) /* ty=(Tensor[(4, 10, 15), float64], Tensor[(4, 10, 15), uint8], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) */;
  %818 = %812.1;
  %819 = %817.1;
  (%818, %819, %var_7961)
}

def @func_12267() -> Tensor[(10, 9, 7), float32] {
  %820 = @func_6506() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %820.0
}

def @func_188() -> Tensor[(10, 9, 7), float32] {
  %821 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 9, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
  erf(%821) /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_15586(%var_15582: Tensor[(8, 8, 8), float32]) -> Tensor[(8, 8, 8), float32] {
  %822 = cast(%var_15582, dtype="float32") /* ty=Tensor[(8, 8, 8), float32] */;
  erf(%822) /* ty=Tensor[(8, 8, 8), float32] */
}

def @func_3019() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %823 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %824 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %825 = %823.0;
  %826 = %824.0;
  (%825, %826)
}

def @func_12140() -> (Tensor[(11, 6, 7), float64],) {
  %827 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 7), float64] */;
  %828 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(11, 6, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %829 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 7), float64] */;
  %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %831 = mod(%829, %830) /* ty=Tensor[(11, 6, 7), float64] */;
  (%831,)
}

def @func_6369() -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(192, 12), uint16], float64, Tensor[(600), int32]) {
  %832 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %833 = @func_2729() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %834 = cast(meta[relay.Constant][32] /* ty=Tensor[(192, 12), uint16] */, dtype="uint16") /* ty=Tensor[(192, 12), uint16] */;
  %835 = cast(meta[relay.Constant][32] /* ty=Tensor[(192, 12), uint16] */, dtype="uint16") /* ty=Tensor[(192, 12), uint16] */;
  %836 = reshape(%834, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
  %837 = reshape(%835, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
  %838 = @func_971(%836, %837) /* ty=(Tensor[(12, 12, 16), uint16], Tensor[(12, 12, 16), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %839 = cast(meta[relay.Constant][33] /* ty=Tensor[(600), int32] */, dtype="int32") /* ty=Tensor[(600), int32] */;
  %840 = reshape(%839, newshape=[600]) /* ty=Tensor[(600), int32] */;
  %841 = @func_4593(%840) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(14, 11, 13), float64], float64, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %842 = %832.2;
  %843 = %833.0;
  %844 = %838.3;
  %845 = %841.7;
  (%842, %843, %844, meta[relay.Constant][32] /* ty=Tensor[(192, 12), uint16] */, %845, meta[relay.Constant][33] /* ty=Tensor[(600), int32] */)
}

def @func_4346() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %846 = @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %847 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %848 = %846.0;
  %849 = %847.0;
  (%848, %849)
}

def @func_1274(%var_1266: Tensor[(2002), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) {
  %850 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %851 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %852 = cast(-0.989134f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %853 = cast(%var_1266, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %854 = reshape(%852, newshape=[]) /* ty=float64 */;
  %855 = reshape(%853, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), float64] */;
  %856 = %850.0;
  %857 = %851.1;
  %858 = @func_596(%854, %855) /* ty=Tensor[(14, 11, 13), float64] */;
  (%856, %857, %858, -0.989134f64 /* ty=float64 */, %var_1266)
}

def @func_5028() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) {
  %859 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %860 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %861 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 2002), float64] */, dtype="float64") /* ty=Tensor[(1, 2002), float64] */;
  %862 = reshape(%861, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %863 = @func_1681(%862) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
  %864 = %859.0;
  %865 = %860.0;
  %866 = %863.2;
  (%864, %865, %866, meta[relay.Constant][34] /* ty=Tensor[(1, 2002), float64] */)
}

def @func_15378() -> Tensor[(10, 9, 7), float32] {
  @func_5298() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_15564() -> (Tensor[(10, 9, 7), float32],) {
  %867 = @func_8596() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %868 = %867.2;
  (%868,)
}

def @func_4957(%var_4948: Tensor[(11, 1, 2), float64]) -> Tensor[(11, 1, 2), float64] {
  %869 = cast(%var_4948, dtype="float64") /* ty=Tensor[(11, 1, 2), float64] */;
  cos(%869) /* ty=Tensor[(11, 1, 2), float64] */
}

def @func_8414() -> (Tensor[(10, 9, 7), float32],) {
  %870 = @func_994() /* ty=Tensor[(10, 9, 7), float32] */;
  (%870,)
}

def @func_17156() -> (float64, Tensor[(10, 9, 7), float32]) {
  %871 = @func_14823() /* ty=(float64,) */;
  %872 = @func_5116() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float32], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %873 = %871.0;
  %874 = %872.2;
  (%873, %874)
}

def @func_13621() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %875 = @func_11729() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %876 = @func_4792() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %877 = @func_5486() /* ty=Tensor[(10, 9, 7), float32] */;
  %878 = %875.1;
  %879 = %876.0;
  (%877, %878, %879)
}

def @func_7114() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(143, 14), float64]) {
  %880 = cast(meta[relay.Constant][35] /* ty=Tensor[(143, 14), float64] */, dtype="float64") /* ty=Tensor[(143, 14), float64] */;
  %881 = reshape(%880, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %882 = @func_1681(%881) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
  %883 = @func_5765() /* ty=Tensor[(10, 9, 7), float32] */;
  %884 = %882.1;
  (%883, %884, meta[relay.Constant][35] /* ty=Tensor[(143, 14), float64] */)
}

def @func_5234() -> (Tensor[(10, 9, 7), float32],) {
  %885 = @func_4264() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %886 = %885.0;
  (%886,)
}

def @func_577() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %887 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %888 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %889 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %890 = %887.0;
  %891 = %888.1;
  %892 = %889.3;
  (%890, %891, %892)
}

def @func_14874(%var_14853: Tensor[(13, 5, 14), int8], %var_14854: Tensor[(13, 5, 14), int8]) -> (Tensor[(13, 5, 14), int8], Tensor[(10, 9, 7), float32]) {
  %893 = cast(%var_14854, dtype="int8") /* ty=Tensor[(13, 5, 14), int8] */;
  %894 = shape_of(%var_14853, dtype="int32") /* ty=Tensor[(3), int32] */;
  %895 = cast(%var_14853, dtype="int8") /* ty=Tensor[(13, 5, 14), int8] */;
  %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %897 = right_shift(%895, %896) /* ty=Tensor[(13, 5, 14), int8] */;
  %898 = @func_6323() /* ty=Tensor[(10, 9, 7), float32] */;
  (%897, %898)
}

def @func_9888() -> (Tensor[(10, 9, 7), float32],) {
  %899 = @func_6806() /* ty=Tensor[(10, 9, 7), float32] */;
  (%899,)
}

def @func_1396() -> (Tensor[(10, 9, 7), float32],) {
  %900 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  (%900,)
}

def @func_10290(%var_10285: Tensor[(6, 5, 6), float32]) -> (Tensor[(6, 5, 6), float32],) {
  %901 = cast(%var_10285, dtype="float32") /* ty=Tensor[(6, 5, 6), float32] */;
  %902 = tan(%901) /* ty=Tensor[(6, 5, 6), float32] */;
  (%902,)
}

def @func_15824() -> Tensor[(10, 9, 7), float32] {
  @func_5486() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_6323() -> Tensor[(10, 9, 7), float32] {
  %903 = @func_5512() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %903.1
}

def @func_3398(%var_3385: Tensor[(1, 13, 13), float64]) -> (Tensor[(1, 13, 13), float64],) {
  %904 = cast(%var_3385, dtype="float64") /* ty=Tensor[(1, 13, 13), float64] */;
  %905 = erf(%904) /* ty=Tensor[(1, 13, 13), float64] */;
  (%905,)
}

def @func_7626() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %906 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %907 = %906.0;
  %908 = @func_6957() /* ty=Tensor[(10, 9, 7), float32] */;
  (%907, %908)
}

def @func_10584(%var_10553: Tensor[(600), int32], %var_10554: Tensor[(7, 260), float64]) -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(7, 260), bool], Tensor[(260), float64], Tensor[(225), float64], float64) {
  %909 = @func_2222() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float64]) */;
  %910 = @func_1396() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %911 = @func_6234() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %912 = cast(%var_10553, dtype="int32") /* ty=Tensor[(600), int32] */;
  %913 = cast(%var_10554, dtype="float64") /* ty=Tensor[(7, 260), float64] */;
  %914 = reshape(%912, newshape=[600]) /* ty=Tensor[(600), int32] */;
  %915 = reshape(%913, newshape=[7, 260]) /* ty=Tensor[(7, 260), float64] */;
  %916 = @func_9102(%914, %915) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float32], Tensor[(7, 260), float64], Tensor[(10, 9, 7), float32], Tensor[(65, 4), float32], Tensor[(10, 9, 7), float64]) */;
  %917 = %916.6;
  %918 = cast(%917, dtype="bool") /* ty=Tensor[(7, 260), bool] */;
  %919 = shape_of(%var_10554, dtype="int32") /* ty=Tensor[(2), int32] */;
  %920 = cast(%var_10554, dtype="bool") /* ty=Tensor[(7, 260), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %922 = cast(meta[relay.Constant][36] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %923 = cast(0.637661f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %924 = reshape(%922, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float64] */;
  %925 = reshape(%923, newshape=[]) /* ty=float64 */;
  %926 = @func_3903(%924, %925) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */;
  %927 = %909.0;
  %928 = %910.0;
  %929 = %911.1;
  %930 = less_equal(%920, %921) /* ty=Tensor[(7, 260), bool] */;
  %931 = %926.2;
  (%927, %928, %929, %var_10553, %930, %931, meta[relay.Constant][36] /* ty=Tensor[(225), float64] */, 0.637661f64 /* ty=float64 */)
}

def @func_2263() -> (Tensor[(10, 9, 7), float32],) {
  %932 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %933 = %932.0;
  (%933,)
}

def @func_10038(%var_10022: int16, %var_10023: Tensor[(16, 15, 11), int16]) -> (Tensor[(16, 15, 11), int16],) {
  %934 = cast(%var_10022, dtype="int16") /* ty=int16 */;
  %935 = cast(%var_10023, dtype="int16") /* ty=Tensor[(16, 15, 11), int16] */;
  %936 = add(%934, %935) /* ty=Tensor[(16, 15, 11), int16] */;
  (%936,)
}

def @func_2160(%var_2149: Tensor[(10, 9, 7), float32]) -> (Tensor[(10, 9, 7), bool],) {
  %937 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %938 = %937.0;
  %939 = cast(%var_2149, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
  %940 = shape_of(%938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %941 = cast(%938, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
  %942 = dyn.reshape(%939, %940, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %943 = logical_or(%941, %942) /* ty=Tensor[(10, 9, 7), bool] */;
  (%943,)
}

def @func_11303(%var_11297: Tensor[(26, 5), float64], %var_11298: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(26, 5), float64], float64) {
  %944 = @func_8414() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %945 = cast(%var_11297, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %946 = cast(%var_11298, dtype="float64") /* ty=float64 */;
  %947 = reshape(%945, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %948 = reshape(%946, newshape=[]) /* ty=float64 */;
  %949 = @func_5858(%947, %948) /* ty=(Tensor[(10, 9, 7), float64], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(2304), uint16]) */;
  %950 = %944.0;
  %951 = %949.0;
  (%950, %951, %var_11297, %var_11298)
}

def @func_13740() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(2002), float64], Tensor[(14, 13, 10), float32], Tensor[(182, 10), float64], Tensor[(10, 9, 7), bool]) {
  %952 = @func_6057() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %953 = @func_13099() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(11, 6, 7), float64]) */;
  %954 = @func_8059() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %955 = @func_7024() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130), float64], Tensor[(130, 2), float64], float64) */;
  %956 = @func_4278() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], Tensor[(2002), float64]) */;
  %957 = cast(meta[relay.Constant][37] /* ty=Tensor[(182, 10), float64] */, dtype="float64") /* ty=Tensor[(182, 10), float64] */;
  %958 = reshape(%957, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), float64] */;
  %959 = @func_3237(%958) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */;
  %960 = @func_13429() /* ty=(Tensor[(10, 9, 7), bool],) */;
  %961 = %952.0;
  %962 = %953.0;
  %963 = @func_6323() /* ty=Tensor[(10, 9, 7), float32] */;
  %964 = %954.0;
  %965 = %955.2;
  %966 = %956.2;
  %967 = %959.1;
  %968 = %960.0;
  (%961, %962, %963, %964, %965, %966, %967, meta[relay.Constant][37] /* ty=Tensor[(182, 10), float64] */, %968)
}

def @func_5908() -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %969 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %970 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %971 = @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %972 = %969.2;
  %973 = %970.0;
  %974 = %971.0;
  (%972, %973, %974)
}

def @func_6067() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %975 = @func_1396() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %976 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %977 = %975.0;
  %978 = %976.0;
  (%977, %978)
}

def @func_2700() -> (Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) {
  %979 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
  %980 = cast(meta[relay.Constant][38] /* ty=Tensor[(2304), uint16] */, dtype="uint16") /* ty=Tensor[(2304), uint16] */;
  %981 = cast(meta[relay.Constant][38] /* ty=Tensor[(2304), uint16] */, dtype="uint16") /* ty=Tensor[(2304), uint16] */;
  %982 = reshape(%980, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
  %983 = reshape(%981, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
  %984 = @func_971(%982, %983) /* ty=(Tensor[(12, 12, 16), uint16], Tensor[(12, 12, 16), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %985 = %984.3;
  %986 = cast(%985, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
  %987 = %979.1;
  %988 = sigmoid(%986) /* ty=Tensor[(10, 9, 7), float32] */;
  (%987, meta[relay.Constant][38] /* ty=Tensor[(2304), uint16] */, %988)
}

def @func_1499() -> (Tensor[(10, 9, 7), float32],) {
  %989 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %990 = %989.0;
  (%990,)
}

def @func_7851() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64) {
  %991 = @func_2712() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %992 = cast(meta[relay.Constant][39] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %993 = cast(-3.92108f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %994 = reshape(%992, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float64] */;
  %995 = reshape(%993, newshape=[]) /* ty=float64 */;
  %996 = @func_3903(%994, %995) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */;
  %997 = %991.0;
  %998 = %996.3;
  (%997, %998, meta[relay.Constant][39] /* ty=Tensor[(225), float64] */, -3.92108f64 /* ty=float64 */)
}

def @func_15057() -> (Tensor[(10, 9, 7), float32],) {
  %999 = @func_2537() /* ty=Tensor[(10, 9, 7), float32] */;
  (%999,)
}

def @func_6057() -> (Tensor[(10, 9, 7), float32],) {
  %1000 = @func_5200() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1001 = %1000.0;
  (%1001,)
}

def @func_14437() -> float64 {
  @func_7918() /* ty=float64 */
}

def @func_4843(%var_4837: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) {
  %1002 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %1003 = %1002.2;
  %1004 = cast(%1003, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %1005 = cast(%var_4837, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %1006 = reshape(%1005, newshape=[14, 130]) /* ty=Tensor[(14, 130), float64] */;
  %1007 = @func_3695(%1006) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(14, 130), float64]) */;
  %1008 = cos(%1004) /* ty=Tensor[(10, 9, 7), float64] */;
  %1009 = %1007.1;
  (%1008, %1009, %var_4837)
}

def @func_12594(%var_12568: Tensor[(7, 2002), float64], %var_12591: Tensor[(1, 1820), float64]) -> (Tensor[(7, 2002), float64], Tensor[(10, 9, 7), float32], Tensor[(1, 1820), float64]) {
  %1010 = @func_5028() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) */;
  %1011 = %1010.3;
  %1012 = cast(%1011, dtype="float64") /* ty=Tensor[(1, 2002), float64] */;
  %1013 = cast(%var_12568, dtype="float64") /* ty=Tensor[(7, 2002), float64] */;
  %1014 = floor_mod(%1012, %1013) /* ty=Tensor[(7, 2002), float64] */;
  %1015 = cast(%1014, dtype="float64") /* ty=Tensor[(7, 2002), float64] */;
  %1016 = cast(%var_12591, dtype="float64") /* ty=Tensor[(1, 1820), float64] */;
  %1017 = reshape(%1016, newshape=[1820]) /* ty=Tensor[(1820), float64] */;
  %1018 = @func_6866(%1017) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1019 = log2(%1015) /* ty=Tensor[(7, 2002), float64] */;
  %1020 = %1018.4;
  (%1019, %1020, %var_12591)
}

def @func_14315() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1021 = @func_3634() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %1022 = @func_5512() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %1023 = %1021.1;
  %1024 = %1022.1;
  (%1023, %1024)
}

def @func_7918() -> float64 {
  %1025 = @func_6369() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(192, 12), uint16], float64, Tensor[(600), int32]) */;
  %1025.4
}

def @func_2800() -> (Tensor[(10, 9, 7), float32],) {
  %1026 = @func_1396() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1027 = %1026.0;
  (%1027,)
}

def @func_4410() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) {
  %1028 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1029 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %1030 = %1028.0;
  %1031 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %1032 = %1029.0;
  (%1030, %1031, %1032)
}

def @func_15636() -> (Tensor[(225), float64],) {
  %1033 = @func_8911() /* ty=Tensor[(225), float64] */;
  (%1033,)
}

def @func_10158() -> Tensor[(10, 9, 7), float32] {
  %1034 = @func_2729() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1034.0
}

def @func_2537() -> Tensor[(10, 9, 7), float32] {
  %1035 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
  %1035.0
}

def @func_13342() -> (Tensor[(10, 9, 7), float32], Tensor[(14, 5, 10), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1036 = @func_4792() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1037 = @func_11098() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(2304), uint16], Tensor[(14, 5, 10), float64]) */;
  %1038 = @func_9768() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1039 = @func_3287() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1040 = %1036.0;
  %1041 = %1037.4;
  %1042 = @func_4350() /* ty=Tensor[(10, 9, 7), float32] */;
  %1043 = %1038.1;
  %1044 = %1039.1;
  (%1040, %1041, %1042, %1043, %1044)
}

def @func_2062() -> (Tensor[(10, 9, 7), float32],) {
  %1045 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1046 = %1045.0;
  (%1046,)
}

def @func_11775() -> (Tensor[(10, 9, 7), float32],) {
  %1047 = @func_8822() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1048 = %1047.0;
  (%1048,)
}

def @func_1881() -> Tensor[(10, 9, 7), float32] {
  %1049 = @func_1499() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1049.0
}

def @func_1817() -> (Tensor[(10, 9, 7), float32],) {
  %1050 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1051 = %1050.0;
  (%1051,)
}

def @func_10406() -> Tensor[(10, 9, 7), bool] {
  %1052 = @func_3634() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %1052.0
}

def @func_12906(%var_12854: Tensor[(2002), float64], %var_12861: float32) -> (Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], float32, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1053 = @func_8414() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1054 = cast(%var_12854, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %1055 = reshape(%1054, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %1056 = @func_1681(%1055) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
  %1057 = cast(%var_12861, dtype="float32") /* ty=float32 */;
  %1058 = reshape(%1057, newshape=[]) /* ty=float32 */;
  %1059 = @func_11933(%1058) /* ty=(Tensor[(12, 1, 12), float32], float64, Tensor[(10, 9, 7), float32]) */;
  %1060 = @func_8515() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */;
  %1061 = %1053.0;
  %1062 = %1056.2;
  %1063 = %1059.2;
  %1064 = %1060.3;
  %1065 = @func_9547() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1061, %1062, %var_12854, %1063, %var_12861, %1064, %1065)
}

def @func_4490() -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) {
  %1066 = @func_994() /* ty=Tensor[(10, 9, 7), float32] */;
  %1067 = cast(%1066, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %1068 = cast(%1066, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
  %1069 = atanh(%1067) /* ty=Tensor[(10, 9, 7), float64] */;
  %1070 = asinh(%1068) /* ty=Tensor[(10, 9, 7), float32] */;
  (%1069, %1070)
}

def @func_14659() -> (Tensor[(10, 9, 7), float32],) {
  %1071 = @func_10158() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1071,)
}

def @func_16393() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1072 = @func_15281() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1073 = %1072.1;
  %1074 = @func_6740() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1073, %1074)
}

def @func_15810() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1075 = @func_11161() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1076 = @func_15378() /* ty=Tensor[(10, 9, 7), float32] */;
  %1077 = %1075.0;
  (%1076, %1077)
}

def @func_2763() -> (Tensor[(10, 9, 7), float32],) {
  %1078 = @func_777() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1078,)
}

def @func_4331() -> Tensor[(10, 9, 7), float32] {
  %1079 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1079.0
}

def @func_3807(%var_3798: Tensor[(10, 9, 7), float32]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) {
  %1080 = @func_1817() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1081 = @func_1770() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1082 = %1081.0;
  %1083 = cast(%var_3798, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
  %1084 = shape_of(%1082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1085 = cast(%1082, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
  %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1087 = %1080.0;
  %1088 = @func_994() /* ty=Tensor[(10, 9, 7), float32] */;
  %1089 = logical_and(%1085, %1086) /* ty=Tensor[(10, 9, 7), bool] */;
  (%1087, %1088, %1089)
}

def @func_4278() -> (Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], Tensor[(2002), float64]) {
  %1090 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1091 = cast(meta[relay.Constant][40] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %1092 = reshape(%1091, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %1093 = @func_1274(%1092) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %1094 = %1090.0;
  %1095 = %1093.2;
  (%1094, %1095, meta[relay.Constant][40] /* ty=Tensor[(2002), float64] */)
}

def @func_9585(%var_9569: Tensor[(15, 14, 5), float64]) -> (Tensor[(15, 14, 5), bool],) {
  %1096 = cast(%var_9569, dtype="float64") /* ty=Tensor[(15, 14, 5), float64] */;
  %1097 = acosh(%1096) /* ty=Tensor[(15, 14, 5), float64] */;
  %1098 = cast(%var_9569, dtype="bool") /* ty=Tensor[(15, 14, 5), bool] */;
  %1099 = shape_of(%1097, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1100 = cast(%1097, dtype="bool") /* ty=Tensor[(15, 14, 5), bool] */;
  %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1102 = greater(%1100, %1101) /* ty=Tensor[(15, 14, 5), bool] */;
  (%1102,)
}

def @func_3728(%var_3706: Tensor[(10, 9, 7), float32], %var_3721: Tensor[(260), float64]) -> (Tensor[(10, 9, 7), uint16], Tensor[(10, 9, 7), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32]) {
  %1103 = @func_2729() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1104 = %1103.0;
  %1105 = cast(%var_3706, dtype="uint16") /* ty=Tensor[(10, 9, 7), uint16] */;
  %1106 = shape_of(%1104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1107 = cast(%1104, dtype="uint16") /* ty=Tensor[(10, 9, 7), uint16] */;
  %1108 = dyn.reshape(%1105, %1106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1109 = cast(meta[relay.Constant][41] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1110 = cast(%var_3721, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1111 = reshape(%1109, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %1112 = reshape(%1110, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1113 = @func_1521(%1111, %1112) /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64]) */;
  %1114 = cast(%1104, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
  %1115 = bitwise_or(%1107, %1108) /* ty=Tensor[(10, 9, 7), uint16] */;
  %1116 = %1113.0;
  %1117 = log2(%1114) /* ty=Tensor[(10, 9, 7), float32] */;
  (%1115, %1116, meta[relay.Constant][41] /* ty=Tensor[(130), float64] */, %var_3721, %1117)
}

def @func_10755() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1118 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
  %1119 = @func_3947() /* ty=Tensor[(10, 9, 7), float32] */;
  %1120 = %1118.0;
  (%1119, %1120)
}

def @func_5643() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64]) {
  %1121 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %1122 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1123 = @func_1235() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1124 = cast(meta[relay.Constant][42] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %1125 = reshape(%1124, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %1126 = @func_1681(%1125) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
  %1127 = %1121.1;
  %1128 = %1122.0;
  %1129 = %1123.0;
  %1130 = @func_777() /* ty=Tensor[(10, 9, 7), float32] */;
  %1131 = %1126.2;
  (%1127, %1128, %1129, %1130, %1131, meta[relay.Constant][42] /* ty=Tensor[(2002), float64] */)
}

def @func_13589() -> (Tensor[(10, 9, 7), float32],) {
  %1132 = @func_11266() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1133 = %1132.1;
  (%1133,)
}

def @func_14756() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1134 = @func_11359() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1135 = @func_11775() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1136 = @func_11645() /* ty=Tensor[(10, 9, 7), float32] */;
  %1137 = %1134.1;
  %1138 = %1135.0;
  (%1136, %1137, %1138)
}

def @func_16011() -> (Tensor[(225), float64],) {
  %1139 = @func_8911() /* ty=Tensor[(225), float64] */;
  (%1139,)
}

def @func_1770() -> (Tensor[(10, 9, 7), float32],) {
  %1140 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1141 = %1140.0;
  (%1141,)
}

def @func_3509(%var_3475: Tensor[(4, 10, 15), int32], %var_3476: Tensor[(4, 10, 15), int32]) -> (Tensor[(4, 10, 15), float64], Tensor[(4, 10, 15), uint8], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) {
  %1142 = cast(%var_3476, dtype="float64") /* ty=Tensor[(4, 10, 15), float64] */;
  %1143 = cast(%var_3476, dtype="int32") /* ty=Tensor[(4, 10, 15), int32] */;
  %1144 = shape_of(%var_3475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1145 = cast(%var_3475, dtype="int32") /* ty=Tensor[(4, 10, 15), int32] */;
  %1146 = dyn.reshape(%1143, %1144, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1147 = add(%1145, %1146) /* ty=Tensor[(4, 10, 15), int32] */;
  %1148 = cast(%var_3476, dtype="uint8") /* ty=Tensor[(4, 10, 15), uint8] */;
  %1149 = shape_of(%1147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1150 = cast(%1147, dtype="uint8") /* ty=Tensor[(4, 10, 15), uint8] */;
  %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1152 = cast(meta[relay.Constant][43] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1153 = cast(meta[relay.Constant][44] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1154 = reshape(%1152, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %1155 = reshape(%1153, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1156 = @func_1521(%1154, %1155) /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64]) */;
  %1157 = sinh(%1142) /* ty=Tensor[(4, 10, 15), float64] */;
  %1158 = multiply(%1150, %1151) /* ty=Tensor[(4, 10, 15), uint8] */;
  %1159 = %1156.2;
  (%1157, %1158, %1159, meta[relay.Constant][43] /* ty=Tensor[(130), float64] */, meta[relay.Constant][44] /* ty=Tensor[(260), float64] */)
}

def @func_4350() -> Tensor[(10, 9, 7), float32] {
  %1160 = @func_2729() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1160.0
}

def @func_8911() -> Tensor[(225), float64] {
  %1161 = @func_7851() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64) */;
  %1161.2
}

def @func_3442(%var_3436: Tensor[(6, 4, 7), float32]) -> Tensor[(6, 4, 7), bool] {
  %1162 = cast(meta[relay.Constant][45] /* ty=Tensor[(6, 4, 7), float32] */, dtype="bool") /* ty=Tensor[(6, 4, 7), bool] */;
  %1163 = shape_of(%var_3436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1164 = cast(%var_3436, dtype="bool") /* ty=Tensor[(6, 4, 7), bool] */;
  %1165 = dyn.reshape(%1162, %1163, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1164, %1165) /* ty=Tensor[(6, 4, 7), bool] */
}

def @func_2051() -> (Tensor[(10, 9, 7), float32],) {
  %1166 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1167 = %1166.0;
  (%1167,)
}

def @func_7229() -> Tensor[(10, 9, 7), float32] {
  %1168 = @func_4052() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1168.1
}

def @func_8344() -> (Tensor[(10, 9, 7), float32],) {
  %1169 = @func_1235() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1170 = %1169.0;
  (%1170,)
}

def @func_2924() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) {
  %1171 = @func_2785() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1172 = @func_2222() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float64]) */;
  %1173 = @func_1881() /* ty=Tensor[(10, 9, 7), float32] */;
  %1174 = %1171.0;
  %1175 = %1172.1;
  (%1173, %1174, %1175)
}

def @func_994() -> Tensor[(10, 9, 7), float32] {
  %1176 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1176.0
}

def @func_7403() -> (Tensor[(10, 9, 7), float32], Tensor[(2002), float64]) {
  %1177 = @func_6679() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64]) */;
  %1178 = @func_6740() /* ty=Tensor[(10, 9, 7), float32] */;
  %1179 = %1177.8;
  (%1178, %1179)
}

def @func_14823() -> (float64,) {
  %1180 = @func_10633() /* ty=float64 */;
  (%1180,)
}

def @func_11933(%var_11901: float32) -> (Tensor[(12, 1, 12), float32], float64, Tensor[(10, 9, 7), float32]) {
  %1181 = cast(%var_11901, dtype="float32") /* ty=float32 */;
  %1182 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 1, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 1, 12), float32] */;
  %1183 = floor_divide(%1181, %1182) /* ty=Tensor[(12, 1, 12), float32] */;
  %1184 = @func_7918() /* ty=float64 */;
  %1185 = @func_9547() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1183, %1184, %1185)
}

def @func_11485() -> float64 {
  %1186 = @func_9428() /* ty=(Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), bool]) */;
  %1186.1
}

def @func_14923() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1187 = @func_6067() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1188 = @func_9888() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1189 = %1187.0;
  %1190 = @func_3947() /* ty=Tensor[(10, 9, 7), float32] */;
  %1191 = %1188.0;
  (%1189, %1190, %1191)
}

def @func_17028(%var_16976: Tensor[(8, 6, 9), float32], %var_17002: Tensor[(8, 6, 9), float32]) -> (Tensor[(8, 6, 9), float32], Tensor[(8, 6, 9), float32], Tensor[(8, 6, 9), bool], Tensor[(10, 9, 7), float32]) {
  %1192 = cast(%var_16976, dtype="float32") /* ty=Tensor[(8, 6, 9), float32] */;
  %1193 = cast(%var_16976, dtype="float32") /* ty=Tensor[(8, 6, 9), float32] */;
  %1194 = cast(%var_17002, dtype="bool") /* ty=Tensor[(8, 6, 9), bool] */;
  %1195 = shape_of(%var_16976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1196 = cast(%var_16976, dtype="bool") /* ty=Tensor[(8, 6, 9), bool] */;
  %1197 = dyn.reshape(%1194, %1195, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1198 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %1199 = acosh(%1192) /* ty=Tensor[(8, 6, 9), float32] */;
  %1200 = cos(%1193) /* ty=Tensor[(8, 6, 9), float32] */;
  %1201 = greater_equal(%1196, %1197) /* ty=Tensor[(8, 6, 9), bool] */;
  %1202 = %1198.1;
  (%1199, %1200, %1201, %1202)
}

def @func_6234() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1203 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
  %1204 = @func_4346() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1205 = %1203.0;
  %1206 = %1204.1;
  (%1205, %1206)
}

def @func_5153() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1207 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1208 = @func_1071() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1209 = %1207.0;
  %1210 = %1208.2;
  (%1209, %1210)
}

def @func_7765() -> (Tensor[(14, 5, 10), float64], Tensor[(14, 5, 10), float32]) {
  %1211 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 5, 10), float64] */;
  %1212 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 5, 10), float64] */, dtype="float32") /* ty=Tensor[(14, 5, 10), float32] */;
  %1213 = atan(%1211) /* ty=Tensor[(14, 5, 10), float64] */;
  %1214 = acos(%1212) /* ty=Tensor[(14, 5, 10), float32] */;
  (%1213, %1214)
}

def @func_5765() -> Tensor[(10, 9, 7), float32] {
  @func_777() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_5716() -> (Tensor[(10, 9, 7), float32],) {
  %1215 = @func_1770() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1216 = %1215.0;
  (%1216,)
}

def @func_8020() -> (Tensor[(10, 9, 7), float32],) {
  %1217 = @func_1817() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1218 = %1217.0;
  (%1218,)
}

def @func_8445(%var_8424: float32) -> Tensor[(10, 9, 1), float32] {
  %1219 = cast(%var_8424, dtype="float32") /* ty=float32 */;
  %1220 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 9, 1), float32] */, dtype="float32") /* ty=Tensor[(10, 9, 1), float32] */;
  floor_mod(%1219, %1220) /* ty=Tensor[(10, 9, 1), float32] */
}

def @func_8596() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1221 = @func_2924() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %1222 = %1221.1;
  %1223 = @func_6323() /* ty=Tensor[(10, 9, 7), float32] */;
  %1224 = @func_7229() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1222, %1223, %1224)
}

def @func_14610() -> Tensor[(10, 9, 7), float32] {
  %1225 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1225.1
}

def @func_13244() -> Tensor[(10, 9, 7), float32] {
  %1226 = @func_11887() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1226.0
}

def @func_10230() -> Tensor[(10, 9, 7), float32] {
  %1227 = @func_5200() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1227.0
}

def @func_2852() -> (Tensor[(10, 9, 7), float32],) {
  %1228 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1229 = %1228.0;
  %1230 = cast(%1229, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %1231 = asin(%1230) /* ty=Tensor[(10, 9, 7), float64] */;
  %1232 = cast(%1231, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
  %1233 = log(%1232) /* ty=Tensor[(10, 9, 7), float32] */;
  (%1233,)
}

def @func_11098() -> (Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(2304), uint16], Tensor[(14, 5, 10), float64]) {
  %1234 = @func_9821() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1235 = cast(meta[relay.Constant][49] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1236 = reshape(%1235, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1237 = @func_8159(%1236) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) */;
  %1238 = @func_4761() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16]) */;
  %1239 = @func_7765() /* ty=(Tensor[(14, 5, 10), float64], Tensor[(14, 5, 10), float32]) */;
  %1240 = %1234.0;
  %1241 = %1237.2;
  %1242 = %1238.2;
  %1243 = %1239.0;
  (%1240, %1241, meta[relay.Constant][49] /* ty=Tensor[(260), float64] */, %1242, %1243)
}

def @func_7538(%var_7494: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) {
  %1244 = @func_1071() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1245 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1246 = cast(%var_7494, dtype="float64") /* ty=float64 */;
  %1247 = cast(meta[relay.Constant][50] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %1248 = reshape(%1246, newshape=[]) /* ty=float64 */;
  %1249 = reshape(%1247, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), float64] */;
  %1250 = %1244.2;
  %1251 = %1245.0;
  %1252 = @func_596(%1248, %1249) /* ty=Tensor[(14, 11, 13), float64] */;
  (%1250, %1251, %1252, %var_7494, meta[relay.Constant][50] /* ty=Tensor[(2002), float64] */)
}

def @func_777() -> Tensor[(10, 9, 7), float32] {
  %1253 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1253.0
}

def @func_12762() -> Tensor[(10, 9, 7), float32] {
  %1254 = @func_11453() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 5, 10), float32], Tensor[(10, 9, 7), float32]) */;
  %1254.1
}

def @func_8036() -> (Tensor[(15, 4, 15), float64],) {
  %1255 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 4, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 4, 15), float64] */;
  %1256 = erf(%1255) /* ty=Tensor[(15, 4, 15), float64] */;
  (%1256,)
}

def @func_10278(%var_10238: uint64, %var_10239: Tensor[(5, 11, 15), uint64], %var_10254: Tensor[(5, 45), float64]) -> (Tensor[(5, 11, 15), bool], Tensor[(5, 11, 15), float32], Tensor[(192, 12), uint16], Tensor[(1, 7, 13), float32], Tensor[(5, 45), float64], Tensor[(10, 9, 7), float64], Tensor[(6, 4, 7), bool]) {
  %1257 = cast(%var_10238, dtype="bool") /* ty=bool */;
  %1258 = cast(%var_10239, dtype="bool") /* ty=Tensor[(5, 11, 15), bool] */;
  %1259 = cast(%var_10239, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %1260 = @func_9281() /* ty=(Tensor[(192, 12), uint16],) */;
  %1261 = cast(%var_10254, dtype="float64") /* ty=Tensor[(5, 45), float64] */;
  %1262 = cast(%var_10238, dtype="float64") /* ty=float64 */;
  %1263 = reshape(%1261, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float64] */;
  %1264 = reshape(%1262, newshape=[]) /* ty=float64 */;
  %1265 = @func_3903(%1263, %1264) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */;
  %1266 = @func_5116() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float32], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %1267 = @func_8515() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */;
  %1268 = less_equal(%1257, %1258) /* ty=Tensor[(5, 11, 15), bool] */;
  %1269 = asinh(%1259) /* ty=Tensor[(5, 11, 15), float32] */;
  %1270 = %1260.0;
  %1271 = %1265.5;
  %1272 = %1266.0;
  %1273 = %1267.1;
  (%1268, %1269, %1270, %1271, %var_10254, %1272, %1273)
}

def @func_9933() -> Tensor[(10, 9, 7), float32] {
  %1274 = @func_9768() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1274.2
}

def @func_257() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1275 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %1276 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %1277 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %1278 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %1279 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %1280 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1275, %1276, %1277, %1278, %1279, %1280)
}

def @func_1373() -> (Tensor[(10, 9, 7), bool],) {
  %1281 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %1282 = %1281.0;
  (%1282,)
}

def @func_9547() -> Tensor[(10, 9, 7), float32] {
  %1283 = @func_6067() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1283.1
}

def @func_5408() -> Tensor[(10, 9, 7), float32] {
  %1284 = @func_4346() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1284.0
}

def @func_1609() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) {
  %1285 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1286 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1287 = %1286.0;
  %1288 = cast(%1287, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %1289 = %1285.0;
  %1290 = sinh(%1288) /* ty=Tensor[(10, 9, 7), float64] */;
  (%1289, %1290)
}

def @func_11161() -> (Tensor[(10, 9, 7), float32],) {
  %1291 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1292 = %1291.0;
  (%1292,)
}

def @func_3372(%var_3365: Tensor[(7, 11, 4), float64], %var_3366: Tensor[(7, 11, 4), float64]) -> (Tensor[(7, 11, 4), float64], Tensor[(10, 9, 7), float32]) {
  %1293 = cast(%var_3366, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %1294 = shape_of(%var_3365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1295 = cast(%var_3365, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %1296 = dyn.reshape(%1293, %1294, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1297 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1298 = multiply(%1295, %1296) /* ty=Tensor[(7, 11, 4), float64] */;
  %1299 = %1297.0;
  (%1298, %1299)
}

def @func_5395() -> Tensor[(10, 9, 7), float32] {
  %1300 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %1300.0
}

def @func_3903(%var_3830: Tensor[(5, 9, 5), float64], %var_3901: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) {
  %1301 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1302 = %1301.0;
  %1303 = cast(%1302, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
  %1304 = cast(meta[relay.Constant][52] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1305 = reshape(%1303, newshape=[10, 9, 7]) /* ty=Tensor[(10, 9, 7), float32] */;
  %1306 = reshape(%1304, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1307 = @func_3728(%1305, %1306) /* ty=(Tensor[(10, 9, 7), uint16], Tensor[(10, 9, 7), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32]) */;
  %1308 = @func_2852() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1309 = cast(%var_3830, dtype="float64") /* ty=Tensor[(5, 9, 5), float64] */;
  %1310 = tan(%1309) /* ty=Tensor[(5, 9, 5), float64] */;
  %1311 = cast(%1310, dtype="float32") /* ty=Tensor[(5, 9, 5), float32] */;
  %1312 = asin(%1311) /* ty=Tensor[(5, 9, 5), float32] */;
  %1313 = cast(%1310, dtype="float64") /* ty=Tensor[(5, 9, 5), float64] */;
  %1314 = shape_of(%1312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1315 = cast(%1312, dtype="float64") /* ty=Tensor[(5, 9, 5), float64] */;
  %1316 = dyn.reshape(%1313, %1314, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1317 = power(%1315, %1316) /* ty=Tensor[(5, 9, 5), float64] */;
  %1318 = cast(%1312, dtype="int32") /* ty=Tensor[(5, 9, 5), int32] */;
  %1319 = shape_of(%1317, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1320 = cast(%1317, dtype="int32") /* ty=Tensor[(5, 9, 5), int32] */;
  %1321 = dyn.reshape(%1318, %1319, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1322 = cast(%var_3901, dtype="float64") /* ty=float64 */;
  %1323 = reshape(%1322, newshape=[]) /* ty=float64 */;
  %1324 = @func_2432(%1323) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(130), float64], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 13, 2), bool], Tensor[(10, 9, 7), float32], Tensor[(65, 4), bool], Tensor[(65, 4), uint16], Tensor[(65, 4), float32], Tensor[(65, 4), float64], Tensor[(10, 9, 7), float32]) */;
  %1325 = %1307.2;
  %1326 = %1308.0;
  %1327 = right_shift(%1320, %1321) /* ty=Tensor[(5, 9, 5), int32] */;
  %1328 = %1324.2;
  (%1302, %1325, meta[relay.Constant][52] /* ty=Tensor[(260), float64] */, %1326, %1327, %1328, %var_3901)
}

def @func_16968() -> (Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(225), float64], float64, Tensor[(10, 9, 7), float32]) {
  %1329 = @func_14923() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1330 = cast(meta[relay.Constant][53] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %1331 = cast(1.27009f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1332 = reshape(%1330, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float64] */;
  %1333 = reshape(%1331, newshape=[]) /* ty=float64 */;
  %1334 = @func_3903(%1332, %1333) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */;
  %1335 = @func_7354() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1336 = %1329.2;
  %1337 = %1334.2;
  %1338 = %1335.0;
  (%1336, %1337, meta[relay.Constant][53] /* ty=Tensor[(225), float64] */, 1.27009f64 /* ty=float64 */, %1338)
}

def @func_9454() -> Tensor[(10, 9, 7), float32] {
  %1339 = @func_9350() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1339.0
}

def @func_15516() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float32]) {
  %1340 = @func_2263() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1341 = @func_5234() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1342 = cast(9.06988f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1343 = reshape(%1342, newshape=[]) /* ty=float64 */;
  %1344 = @func_2432(%1343) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(130), float64], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 13, 2), bool], Tensor[(10, 9, 7), float32], Tensor[(65, 4), bool], Tensor[(65, 4), uint16], Tensor[(65, 4), float32], Tensor[(65, 4), float64], Tensor[(10, 9, 7), float32]) */;
  %1345 = %1340.0;
  %1346 = %1341.0;
  %1347 = @func_4350() /* ty=Tensor[(10, 9, 7), float32] */;
  %1348 = %1344.16;
  %1349 = @func_12267() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1345, %1346, %1347, %1348, 9.06988f64 /* ty=float64 */, %1349)
}

def @func_2432(%var_2303: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(130), float64], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 13, 2), bool], Tensor[(10, 9, 7), float32], Tensor[(65, 4), bool], Tensor[(65, 4), uint16], Tensor[(65, 4), float32], Tensor[(65, 4), float64], Tensor[(10, 9, 7), float32]) {
  %1350 = @func_1499() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1351 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %1352 = cast(meta[relay.Constant][54] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1353 = cast(meta[relay.Constant][55] /* ty=Tensor[(65, 4), float64] */, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
  %1354 = cast(%var_2303, dtype="float64") /* ty=float64 */;
  %1355 = reshape(%1352, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %1356 = reshape(%1353, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1357 = reshape(%1354, newshape=[]) /* ty=float64 */;
  %1358 = @func_2254(%1355, %1356, %1357) /* ty=(Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %1359 = cast(meta[relay.Constant][56] /* ty=Tensor[(2304), uint16] */, dtype="uint16") /* ty=Tensor[(2304), uint16] */;
  %1360 = cast(meta[relay.Constant][56] /* ty=Tensor[(2304), uint16] */, dtype="uint16") /* ty=Tensor[(2304), uint16] */;
  %1361 = reshape(%1359, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
  %1362 = reshape(%1360, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
  %1363 = @func_971(%1361, %1362) /* ty=(Tensor[(12, 12, 16), uint16], Tensor[(12, 12, 16), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1364 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1365 = @func_1817() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1366 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %1367 = cast(meta[relay.Constant][54] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1368 = cast(meta[relay.Constant][55] /* ty=Tensor[(65, 4), float64] */, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
  %1369 = cosh(%1368) /* ty=Tensor[(65, 4), float64] */;
  %1370 = cast(%1369, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
  %1371 = reshape(%1367, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %1372 = reshape(%1370, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
  %1373 = @func_1297(%1371, %1372) /* ty=(Tensor[(10, 13, 2), bool],) */;
  %1374 = @func_1499() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1375 = cast(%1369, dtype="bool") /* ty=Tensor[(65, 4), bool] */;
  %1376 = cast(%var_2303, dtype="bool") /* ty=bool */;
  %1377 = cast(%1369, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
  %1378 = sin(%1377) /* ty=Tensor[(65, 4), float32] */;
  %1379 = cast(%1369, dtype="uint16") /* ty=Tensor[(65, 4), uint16] */;
  %1380 = shape_of(%1378, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1381 = cast(%1378, dtype="uint16") /* ty=Tensor[(65, 4), uint16] */;
  %1382 = dyn.reshape(%1379, %1380, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1383 = cast(%1369, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
  %1384 = cast(%1378, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
  %1385 = @func_1396() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1386 = %1350.0;
  %1387 = %1351.1;
  %1388 = %1358.0;
  %1389 = %1363.3;
  %1390 = %1364.0;
  %1391 = %1365.0;
  %1392 = %1366.2;
  %1393 = @func_994() /* ty=Tensor[(10, 9, 7), float32] */;
  %1394 = %1373.0;
  %1395 = %1374.0;
  %1396 = equal(%1375, %1376) /* ty=Tensor[(65, 4), bool] */;
  %1397 = bitwise_and(%1381, %1382) /* ty=Tensor[(65, 4), uint16] */;
  %1398 = acos(%1383) /* ty=Tensor[(65, 4), float32] */;
  %1399 = tan(%1384) /* ty=Tensor[(65, 4), float64] */;
  %1400 = %1385.0;
  (%1386, %1387, %1388, meta[relay.Constant][54] /* ty=Tensor[(130), float64] */, %1389, meta[relay.Constant][56] /* ty=Tensor[(2304), uint16] */, %1390, %1391, %1392, %1393, %1394, %1395, %1396, %1397, %1398, %1399, %1400)
}

def @func_2254(%var_2245: Tensor[(130), float64], %var_2246: Tensor[(260), float64], %var_2249: float64) -> (Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) {
  %1401 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 7, 13), float32] */, dtype="float32") /* ty=Tensor[(1, 7, 13), float32] */;
  %1402 = cast(%var_2245, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1403 = cast(%var_2246, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1404 = reshape(%1402, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %1405 = reshape(%1403, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
  %1406 = @func_1297(%1404, %1405) /* ty=(Tensor[(10, 13, 2), bool],) */;
  %1407 = cast(%var_2249, dtype="float64") /* ty=float64 */;
  %1408 = cast(meta[relay.Constant][58] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %1409 = reshape(%1407, newshape=[]) /* ty=float64 */;
  %1410 = reshape(%1408, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), float64] */;
  %1411 = sigmoid(%1401) /* ty=Tensor[(1, 7, 13), float32] */;
  %1412 = %1406.0;
  %1413 = @func_596(%1409, %1410) /* ty=Tensor[(14, 11, 13), float64] */;
  (%1411, %1412, %var_2245, %var_2246, %1413, %var_2249, meta[relay.Constant][58] /* ty=Tensor[(2002), float64] */)
}

def @func_971(%var_951: Tensor[(12, 12, 16), uint16], %var_952: Tensor[(12, 12, 16), uint16]) -> (Tensor[(12, 12, 16), uint16], Tensor[(12, 12, 16), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1414 = cast(%var_952, dtype="uint16") /* ty=Tensor[(12, 12, 16), uint16] */;
  %1415 = shape_of(%var_951, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1416 = cast(%var_951, dtype="uint16") /* ty=Tensor[(12, 12, 16), uint16] */;
  %1417 = dyn.reshape(%1414, %1415, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1418 = cast(%var_951, dtype="float64") /* ty=Tensor[(12, 12, 16), float64] */;
  %1419 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %1420 = bitwise_xor(%1416, %1417) /* ty=Tensor[(12, 12, 16), uint16] */;
  %1421 = atanh(%1418) /* ty=Tensor[(12, 12, 16), float64] */;
  %1422 = %1419.1;
  %1423 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1420, %1421, %1422, %1423)
}

def @func_2492() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) {
  %1424 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1425 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1426 = cast(3.48451f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1427 = reshape(%1426, newshape=[]) /* ty=float64 */;
  %1428 = @func_2432(%1427) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(130), float64], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 13, 2), bool], Tensor[(10, 9, 7), float32], Tensor[(65, 4), bool], Tensor[(65, 4), uint16], Tensor[(65, 4), float32], Tensor[(65, 4), float64], Tensor[(10, 9, 7), float32]) */;
  %1429 = %1424.0;
  %1430 = %1425.0;
  %1431 = %1428.6;
  (%1429, %1430, %1431, 3.48451f64 /* ty=float64 */)
}

def @func_12673() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1432 = @func_9844() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1433 = %1432.0;
  %1434 = @func_2537() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1433, %1434)
}

def @func_17068(%var_17058: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(168), float32], Tensor[(2002), float64], Tensor[(1, 825), uint64], Tensor[(1820), float64]) {
  %1435 = @func_16306() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1436 = cast(meta[relay.Constant][59] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %1437 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 825), uint64] */, dtype="uint64") /* ty=Tensor[(1, 825), uint64] */;
  %1438 = cast(%var_17058, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %1439 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 825), uint64] */, dtype="uint64") /* ty=Tensor[(1, 825), uint64] */;
  %1440 = reshape(%1436, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %1441 = reshape(%1437, newshape=[825]) /* ty=Tensor[(825), uint64] */;
  %1442 = reshape(%1438, newshape=[14, 130]) /* ty=Tensor[(14, 130), float64] */;
  %1443 = reshape(%1439, newshape=[825]) /* ty=Tensor[(825), uint64] */;
  %1444 = @func_15941(%1440, %1441, %1442, %1443) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 130), float64], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(825), bool], Tensor[(10, 9, 7), bool]) */;
  %1445 = %1435.0;
  %1446 = %1444.9;
  (%1445, %1446, meta[relay.Constant][59] /* ty=Tensor[(2002), float64] */, meta[relay.Constant][60] /* ty=Tensor[(1, 825), uint64] */, %var_17058)
}

def @func_14432() -> (Tensor[(10, 9, 7), float32],) {
  %1447 = @func_12267() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1447,)
}

def @func_9179() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(300), int64]) {
  %1448 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1449 = cast(meta[relay.Constant][61] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
  %1450 = reshape(%1449, newshape=[300]) /* ty=Tensor[(300), int64] */;
  %1451 = @func_6026(%1450) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 5, 15), int64], Tensor[(300), int64], Tensor[(10, 9, 7), float32]) */;
  %1452 = %1448.0;
  %1453 = %1451.1;
  (%1452, %1453, meta[relay.Constant][61] /* ty=Tensor[(300), int64] */)
}

def @func_12963() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1454 = @func_5643() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64]) */;
  %1455 = @func_5395() /* ty=Tensor[(10, 9, 7), float32] */;
  %1456 = %1454.3;
  (%1455, %1456)
}

def @func_14245(%var_14220: int32, %var_14221: Tensor[(3, 1, 13), int32]) -> (Tensor[(3, 1, 13), int32], Tensor[(10, 9, 7), float32]) {
  %1457 = cast(%var_14220, dtype="int32") /* ty=int32 */;
  %1458 = cast(%var_14221, dtype="int32") /* ty=Tensor[(3, 1, 13), int32] */;
  %1459 = @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1460 = left_shift(%1457, %1458) /* ty=Tensor[(3, 1, 13), int32] */;
  %1461 = %1459.0;
  (%1460, %1461)
}

def @func_11266() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1462 = @func_8059() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1463 = @func_8661() /* ty=Tensor[(10, 9, 7), float32] */;
  %1464 = %1462.0;
  (%1463, %1464)
}

def @func_2899(%var_2891: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(143, 14), float64], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64) {
  %1465 = @func_2712() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1466 = cast(meta[relay.Constant][62] /* ty=Tensor[(143, 14), float64] */, dtype="float64") /* ty=Tensor[(143, 14), float64] */;
  %1467 = reshape(%1466, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %1468 = @func_1681(%1467) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
  %1469 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1470 = @func_1373() /* ty=(Tensor[(10, 9, 7), bool],) */;
  %1471 = cast(meta[relay.Constant][62] /* ty=Tensor[(143, 14), float64] */, dtype="float64") /* ty=Tensor[(143, 14), float64] */;
  %1472 = @func_1817() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1473 = cast(%var_2891, dtype="float64") /* ty=float64 */;
  %1474 = cast(meta[relay.Constant][62] /* ty=Tensor[(143, 14), float64] */, dtype="float64") /* ty=Tensor[(143, 14), float64] */;
  %1475 = reshape(%1473, newshape=[]) /* ty=float64 */;
  %1476 = reshape(%1474, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), float64] */;
  %1477 = %1465.0;
  %1478 = %1468.3;
  %1479 = %1469.0;
  %1480 = %1470.0;
  %1481 = sigmoid(%1471) /* ty=Tensor[(143, 14), float64] */;
  %1482 = %1472.0;
  %1483 = @func_596(%1475, %1476) /* ty=Tensor[(14, 11, 13), float64] */;
  (%1477, %1478, %1479, %1480, %1481, %1482, %1483, %var_2891)
}

def @func_10215(%var_10209: Tensor[(130), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 1), float32], float32, float64, Tensor[(130), float64]) {
  %1484 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %1485 = cast(0.664507f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1486 = reshape(%1485, newshape=[]) /* ty=float32 */;
  %1487 = cast(%var_10209, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1488 = cast(0.664507f /* ty=float32 */, dtype="float64") /* ty=float64 */;
  %1489 = reshape(%1487, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %1490 = reshape(%1488, newshape=[]) /* ty=float64 */;
  %1491 = @func_5858(%1489, %1490) /* ty=(Tensor[(10, 9, 7), float64], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(2304), uint16]) */;
  %1492 = %1484.1;
  %1493 = @func_8445(%1486) /* ty=Tensor[(10, 9, 1), float32] */;
  %1494 = %1491.1;
  (%1492, %1493, 0.664507f /* ty=float32 */, %1494, %var_10209)
}

def @func_11515() -> (Tensor[(10, 9, 7), float32],) {
  %1495 = @func_1071() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1496 = %1495.0;
  (%1496,)
}

def @func_9246(%var_9227: float64, %var_9228: Tensor[(3, 8, 10), float64]) -> (Tensor[(3, 8, 10), bool], Tensor[(10, 9, 7), float32]) {
  %1497 = cast(%var_9227, dtype="bool") /* ty=bool */;
  %1498 = cast(%var_9228, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
  %1499 = less_equal(%1497, %1498) /* ty=Tensor[(3, 8, 10), bool] */;
  %1500 = @func_3068() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1499, %1500)
}

def @func_14410() -> (Tensor[(10, 9, 7), float32], float64, Tensor[(168), float32], Tensor[(10, 9, 7), float32]) {
  %1501 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1502 = cast(meta[relay.Constant][63] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %1503 = reshape(%1502, newshape=[42, 4]) /* ty=Tensor[(42, 4), float32] */;
  %1504 = @func_8388(%1503) /* ty=(Tensor[(10, 9, 7), float32], float64, Tensor[(42, 4), float32], Tensor[(6, 4, 7), float64]) */;
  %1505 = @func_13544() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1506 = %1501.0;
  %1507 = %1504.1;
  %1508 = %1505.1;
  (%1506, %1507, meta[relay.Constant][63] /* ty=Tensor[(168), float32] */, %1508)
}

def @func_5298() -> Tensor[(10, 9, 7), float32] {
  %1509 = @func_4761() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16]) */;
  %1509.1
}

def @func_3634() -> (Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) {
  %1510 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %1511 = @func_2712() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1512 = %1510.0;
  %1513 = %1511.0;
  (%1512, %1513)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5028() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) {
  %0 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 2002), float64] */, dtype="float64") /* ty=Tensor[(1, 2002), float64] */;
  %3 = reshape(%2, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %4 = @func_1681(%3) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
  %5 = %0.0;
  %6 = %1.0;
  %7 = %4.2;
  (%5, %6, %7, meta[relay.Constant][0] /* ty=Tensor[(1, 2002), float64] */)
}

def @func_16881(%var_16878: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32], Tensor[(1820), float64]) {
  %8 = @func_2924() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %9 = @func_13429() /* ty=(Tensor[(10, 9, 7), bool],) */;
  %10 = cast(%var_16878, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %11 = reshape(%10, newshape=[1820]) /* ty=Tensor[(1820), float64] */;
  %12 = @func_6866(%11) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %13 = %8.0;
  %14 = %9.0;
  %15 = %12.4;
  (%13, %14, %15, %var_16878)
}

def @func_12392(%var_12381: Tensor[(15, 4, 15), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(15, 4, 15), uint32]) {
  %16 = @func_4792() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %17 = @func_8036() /* ty=(Tensor[(15, 4, 15), float64],) */;
  %18 = %17.0;
  %19 = cast(%var_12381, dtype="uint32") /* ty=Tensor[(15, 4, 15), uint32] */;
  %20 = shape_of(%18, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(%18, dtype="uint32") /* ty=Tensor[(15, 4, 15), uint32] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %23 = %16.0;
  %24 = left_shift(%21, %22) /* ty=Tensor[(15, 4, 15), uint32] */;
  (%23, %24)
}

def @func_2729() -> (Tensor[(10, 9, 7), float32],) {
  %25 = @func_577() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %26 = %25.0;
  (%26,)
}

def @func_8661() -> Tensor[(10, 9, 7), float32] {
  %27 = @func_7867() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %27.0
}

def @func_9283() -> (Tensor[(192, 12), uint16],) {
  @func_9281() /* ty=(Tensor[(192, 12), uint16],) */
}

def @func_14193(%var_14191: int64, %var_14192: Tensor[(3, 6, 6), int64]) -> (Tensor[(3, 6, 6), bool], Tensor[(10, 9, 7), float32]) {
  %33 = fn (%var_14176: int64, %var_14177: Tensor[(3, 6, 6), int64]) -> (Tensor[(3, 6, 6), bool], Tensor[(10, 9, 7), float32]) {
    %28 = cast(%var_14176, dtype="bool") /* ty=bool */;
    %29 = cast(%var_14177, dtype="bool") /* ty=Tensor[(3, 6, 6), bool] */;
    %30 = @func_11515() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %31 = equal(%28, %29) /* ty=Tensor[(3, 6, 6), bool] */;
    %32 = %30.0;
    (%31, %32)
  };
  %33(%var_14191, %var_14192) /* ty=(Tensor[(3, 6, 6), bool], Tensor[(10, 9, 7), float32]) */
}

def @func_9823() -> (Tensor[(10, 9, 7), float32],) {
  @func_9821() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_7026() -> (Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130), float64], Tensor[(130, 2), float64], float64) {
  @func_7024() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130), float64], Tensor[(130, 2), float64], float64) */
}

def @func_2162(%var_2161: Tensor[(10, 9, 7), float32]) -> (Tensor[(10, 9, 7), bool],) {
  %41 = fn (%var_2149: Tensor[(10, 9, 7), float32]) -> (Tensor[(10, 9, 7), bool],) {
    %34 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %35 = %34.0;
    %36 = cast(%var_2149, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
    %37 = shape_of(%35, dtype="int32") /* ty=Tensor[(3), int32] */;
    %38 = cast(%35, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
    %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %40 = logical_or(%38, %39) /* ty=Tensor[(10, 9, 7), bool] */;
    (%40,)
  };
  %41(%var_2161) /* ty=(Tensor[(10, 9, 7), bool],) */
}

def @func_5326() -> (Tensor[(10, 9, 7), float32],) {
  %42 = @func_5028() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) */;
  %43 = %42.0;
  (%43,)
}

def @func_14315() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %44 = @func_3634() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %45 = @func_5512() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %46 = %44.1;
  %47 = %45.1;
  (%46, %47)
}

def @func_16287() -> Tensor[(10, 9, 7), float32] {
  @func_5298() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_259() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_3509(%var_3475: Tensor[(4, 10, 15), int32], %var_3476: Tensor[(4, 10, 15), int32]) -> (Tensor[(4, 10, 15), float64], Tensor[(4, 10, 15), uint8], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) {
  %48 = cast(%var_3476, dtype="float64") /* ty=Tensor[(4, 10, 15), float64] */;
  %49 = cast(%var_3476, dtype="int32") /* ty=Tensor[(4, 10, 15), int32] */;
  %50 = shape_of(%var_3475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%var_3475, dtype="int32") /* ty=Tensor[(4, 10, 15), int32] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %53 = add(%51, %52) /* ty=Tensor[(4, 10, 15), int32] */;
  %54 = cast(%var_3476, dtype="uint8") /* ty=Tensor[(4, 10, 15), uint8] */;
  %55 = shape_of(%53, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%53, dtype="uint8") /* ty=Tensor[(4, 10, 15), uint8] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %58 = cast(meta[relay.Constant][1] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %59 = cast(meta[relay.Constant][2] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %60 = reshape(%58, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %61 = reshape(%59, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %62 = @func_1521(%60, %61) /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64]) */;
  %63 = sinh(%48) /* ty=Tensor[(4, 10, 15), float64] */;
  %64 = multiply(%56, %57) /* ty=Tensor[(4, 10, 15), uint8] */;
  %65 = %62.2;
  (%63, %64, %65, meta[relay.Constant][1] /* ty=Tensor[(130), float64] */, meta[relay.Constant][2] /* ty=Tensor[(260), float64] */)
}

def @func_14022() -> (Tensor[(10, 9, 7), float64],) {
  %66 = @func_8923() /* ty=(Tensor[(10, 9, 7), float64],) */;
  %67 = %66.0;
  (%67,)
}

def @func_4053() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %73 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %68 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %69 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
    %70 = %68.0;
    %71 = %69.2;
    %72 = @func_994() /* ty=Tensor[(10, 9, 7), float32] */;
    (%70, %71, %72)
  };
  %73() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_8515() -> (Tensor[(10, 9, 7), float32], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) {
  %74 = @func_5908() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %75 = cast(meta[relay.Constant][3] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %76 = reshape(%75, newshape=[6, 4, 7]) /* ty=Tensor[(6, 4, 7), float32] */;
  %77 = @func_4490() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %78 = %74.2;
  %79 = @func_3442(%76) /* ty=Tensor[(6, 4, 7), bool] */;
  %80 = %77.1;
  (%78, %79, meta[relay.Constant][3] /* ty=Tensor[(168), float32] */, %80)
}

def @func_11889() -> (Tensor[(10, 9, 7), float32],) {
  @func_11887() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_1610() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) {
  %87 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) {
    %81 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %82 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %83 = %82.0;
    %84 = cast(%83, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
    %85 = %81.0;
    %86 = sinh(%84) /* ty=Tensor[(10, 9, 7), float64] */;
    (%85, %86)
  };
  %87() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */
}

def @func_3634() -> (Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) {
  %88 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %89 = @func_2712() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %90 = %88.0;
  %91 = %89.0;
  (%90, %91)
}

def @func_599(%var_597: float64, %var_598: Tensor[(14, 11, 13), float64]) -> Tensor[(14, 11, 13), float64] {
  %94 = fn (%var_585: float64, %var_586: Tensor[(14, 11, 13), float64]) -> Tensor[(14, 11, 13), float64] {
    %92 = cast(%var_585, dtype="float64") /* ty=float64 */;
    %93 = cast(%var_586, dtype="float64") /* ty=Tensor[(14, 11, 13), float64] */;
    floor_divide(%92, %93) /* ty=Tensor[(14, 11, 13), float64] */
  };
  %94(%var_597, %var_598) /* ty=Tensor[(14, 11, 13), float64] */
}

def @func_3376(%var_3374: Tensor[(7, 11, 4), float64], %var_3375: Tensor[(7, 11, 4), float64]) -> (Tensor[(7, 11, 4), float64], Tensor[(10, 9, 7), float32]) {
  @func_3372(%var_3374, %var_3375) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(10, 9, 7), float32]) */
}

def @func_8639() -> Tensor[(10, 9, 7), float32] {
  @func_1881() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_7627() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %98 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %95 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %96 = %95.0;
    %97 = @func_6957() /* ty=Tensor[(10, 9, 7), float32] */;
    (%96, %97)
  };
  %98() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_4411() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) {
  %104 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) {
    %99 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %100 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
    %101 = %99.0;
    %102 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
    %103 = %100.0;
    (%101, %102, %103)
  };
  %104() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */
}

def @func_12503(%var_12467: Tensor[(8, 7, 15), uint8]) -> (Tensor[(8, 7, 15), uint8], Tensor[(8, 7, 15), float64], Tensor[(10, 9, 7), float32]) {
  %105 = cast(%var_12467, dtype="uint8") /* ty=Tensor[(8, 7, 15), uint8] */;
  %106 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(8, 7, 15), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 7, 15), uint8] */, dtype="uint8") /* ty=Tensor[(8, 7, 15), uint8] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %109 = bitwise_or(%107, %108) /* ty=Tensor[(8, 7, 15), uint8] */;
  %110 = cast(%var_12467, dtype="uint8") /* ty=Tensor[(8, 7, 15), uint8] */;
  %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%109, dtype="uint8") /* ty=Tensor[(8, 7, 15), uint8] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %114 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 7, 15), uint8] */, dtype="float64") /* ty=Tensor[(8, 7, 15), float64] */;
  %115 = @func_4302() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %116 = logical_xor(%112, %113) /* ty=Tensor[(8, 7, 15), uint8] */;
  %117 = log2(%114) /* ty=Tensor[(8, 7, 15), float64] */;
  %118 = %115.0;
  (%116, %117, %118)
}

def @func_15457() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %122 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %119 = @func_4865() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %120 = @func_3947() /* ty=Tensor[(10, 9, 7), float32] */;
    %121 = %119.0;
    (%120, %121)
  };
  %122() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_3906(%var_3904: Tensor[(5, 9, 5), float64], %var_3905: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) {
  %151 = fn (%var_3830: Tensor[(5, 9, 5), float64], %var_3901: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) {
    %123 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %124 = %123.0;
    %125 = cast(%124, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
    %126 = cast(meta[relay.Constant][5] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %127 = reshape(%125, newshape=[10, 9, 7]) /* ty=Tensor[(10, 9, 7), float32] */;
    %128 = reshape(%126, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %129 = @func_3728(%127, %128) /* ty=(Tensor[(10, 9, 7), uint16], Tensor[(10, 9, 7), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32]) */;
    %130 = @func_2852() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %131 = cast(%var_3830, dtype="float64") /* ty=Tensor[(5, 9, 5), float64] */;
    %132 = tan(%131) /* ty=Tensor[(5, 9, 5), float64] */;
    %133 = cast(%132, dtype="float32") /* ty=Tensor[(5, 9, 5), float32] */;
    %134 = asin(%133) /* ty=Tensor[(5, 9, 5), float32] */;
    %135 = cast(%132, dtype="float64") /* ty=Tensor[(5, 9, 5), float64] */;
    %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(3), int32] */;
    %137 = cast(%134, dtype="float64") /* ty=Tensor[(5, 9, 5), float64] */;
    %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %139 = power(%137, %138) /* ty=Tensor[(5, 9, 5), float64] */;
    %140 = cast(%134, dtype="int32") /* ty=Tensor[(5, 9, 5), int32] */;
    %141 = shape_of(%139, dtype="int32") /* ty=Tensor[(3), int32] */;
    %142 = cast(%139, dtype="int32") /* ty=Tensor[(5, 9, 5), int32] */;
    %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %144 = cast(%var_3901, dtype="float64") /* ty=float64 */;
    %145 = reshape(%144, newshape=[]) /* ty=float64 */;
    %146 = @func_2432(%145) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(130), float64], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 13, 2), bool], Tensor[(10, 9, 7), float32], Tensor[(65, 4), bool], Tensor[(65, 4), uint16], Tensor[(65, 4), float32], Tensor[(65, 4), float64], Tensor[(10, 9, 7), float32]) */;
    %147 = %129.2;
    %148 = %130.0;
    %149 = right_shift(%142, %143) /* ty=Tensor[(5, 9, 5), int32] */;
    %150 = %146.2;
    (%124, %147, meta[relay.Constant][5] /* ty=Tensor[(260), float64] */, %148, %149, %150, %var_3901)
  };
  %151(%var_3904, %var_3905) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */
}

def @func_15611() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %152 = @func_5028() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) */;
  %153 = @func_13342() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(14, 5, 10), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %154 = %152.0;
  %155 = %153.4;
  (%154, %155)
}

def @func_10038(%var_10022: int16, %var_10023: Tensor[(16, 15, 11), int16]) -> (Tensor[(16, 15, 11), int16],) {
  %156 = cast(%var_10022, dtype="int16") /* ty=int16 */;
  %157 = cast(%var_10023, dtype="int16") /* ty=Tensor[(16, 15, 11), int16] */;
  %158 = add(%156, %157) /* ty=Tensor[(16, 15, 11), int16] */;
  (%158,)
}

def @func_15586(%var_15582: Tensor[(8, 8, 8), float32]) -> Tensor[(8, 8, 8), float32] {
  %159 = cast(%var_15582, dtype="float32") /* ty=Tensor[(8, 8, 8), float32] */;
  erf(%159) /* ty=Tensor[(8, 8, 8), float32] */
}

def @func_12530() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float32], Tensor[(910, 2), float64]) {
  @func_12528() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float32], Tensor[(910, 2), float64]) */
}

def @func_15825() -> Tensor[(10, 9, 7), float32] {
  %160 = fn () -> Tensor[(10, 9, 7), float32] {
    @func_5486() /* ty=Tensor[(10, 9, 7), float32] */
  };
  %160() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_10362() -> (Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %168 = fn () -> (Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %161 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
    %162 = @func_8231() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %163 = @func_4865() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %164 = %161.2;
    %165 = @func_9547() /* ty=Tensor[(10, 9, 7), float32] */;
    %166 = %162.0;
    %167 = %163.0;
    (%164, %165, %166, %167)
  };
  %168() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_11268() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_11266() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_16488() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %169 = @func_4052() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %170 = @func_9507() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %171 = %169.0;
  %172 = @func_15378() /* ty=Tensor[(10, 9, 7), float32] */;
  %173 = %170.0;
  (%171, %172, %173)
}

def @func_2700() -> (Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) {
  %174 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
  %175 = cast(meta[relay.Constant][6] /* ty=Tensor[(2304), uint16] */, dtype="uint16") /* ty=Tensor[(2304), uint16] */;
  %176 = cast(meta[relay.Constant][6] /* ty=Tensor[(2304), uint16] */, dtype="uint16") /* ty=Tensor[(2304), uint16] */;
  %177 = reshape(%175, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
  %178 = reshape(%176, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
  %179 = @func_971(%177, %178) /* ty=(Tensor[(12, 12, 16), uint16], Tensor[(12, 12, 16), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %180 = %179.3;
  %181 = cast(%180, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
  %182 = %174.1;
  %183 = sigmoid(%181) /* ty=Tensor[(10, 9, 7), float32] */;
  (%182, meta[relay.Constant][6] /* ty=Tensor[(2304), uint16] */, %183)
}

def @func_4175(%var_4146: float64, %var_4170: Tensor[(168), float32]) -> (Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], float64, Tensor[(10, 9, 7), float32], Tensor[(25, 9), float32], float64, Tensor[(300), int64], Tensor[(10, 9, 7), float32], Tensor[(25, 9), float64], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) {
  %184 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %185 = cast(meta[relay.Constant][7] /* ty=Tensor[(25, 9), float64] */, dtype="float64") /* ty=Tensor[(25, 9), float64] */;
  %186 = cast(%var_4146, dtype="float64") /* ty=float64 */;
  %187 = reshape(%185, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float64] */;
  %188 = reshape(%186, newshape=[]) /* ty=float64 */;
  %189 = @func_3903(%187, %188) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */;
  %190 = @func_4052() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %191 = cast(meta[relay.Constant][7] /* ty=Tensor[(25, 9), float64] */, dtype="float64") /* ty=Tensor[(25, 9), float64] */;
  %192 = rsqrt(%191) /* ty=Tensor[(25, 9), float64] */;
  %193 = cast(meta[relay.Constant][7] /* ty=Tensor[(25, 9), float64] */, dtype="float32") /* ty=Tensor[(25, 9), float32] */;
  %194 = shape_of(%192, dtype="int32") /* ty=Tensor[(2), int32] */;
  %195 = cast(%192, dtype="float32") /* ty=Tensor[(25, 9), float32] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %197 = cast(meta[relay.Constant][8] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
  %198 = cast(meta[relay.Constant][8] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
  %199 = reshape(%197, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), int64] */;
  %200 = reshape(%198, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), int64] */;
  %201 = @func_3580(%199, %200) /* ty=(Tensor[(4, 5, 15), int64], Tensor[(10, 13, 2), bool], float64, Tensor[(4, 5, 15), float64]) */;
  %202 = @func_2763() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %203 = cast(%192, dtype="float64") /* ty=Tensor[(25, 9), float64] */;
  %204 = cast(%var_4170, dtype="float32") /* ty=Tensor[(168), float32] */;
  %205 = reshape(%204, newshape=[6, 4, 7]) /* ty=Tensor[(6, 4, 7), float32] */;
  %206 = @func_1817() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %207 = %184.0;
  %208 = %189.5;
  %209 = %190.0;
  %210 = floor_divide(%195, %196) /* ty=Tensor[(25, 9), float32] */;
  %211 = %201.2;
  %212 = %202.0;
  %213 = atanh(%203) /* ty=Tensor[(25, 9), float64] */;
  %214 = @func_3442(%205) /* ty=Tensor[(6, 4, 7), bool] */;
  %215 = %206.0;
  (%207, %208, %var_4146, %209, %210, %211, meta[relay.Constant][8] /* ty=Tensor[(300), int64] */, %212, %213, %214, %var_4170, %215)
}

def @func_4350() -> Tensor[(10, 9, 7), float32] {
  %216 = @func_2729() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %216.0
}

def @func_5565() -> (Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) {
  @func_5563() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */
}

def @func_12764() -> Tensor[(10, 9, 7), float32] {
  @func_12762() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_12823() -> (Tensor[(10, 9, 7), bool], Tensor[(260), float64], Tensor[(260), float64]) {
  %223 = fn () -> (Tensor[(10, 9, 7), bool], Tensor[(260), float64], Tensor[(260), float64]) {
    %217 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
    %218 = cast(meta[relay.Constant][9] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %219 = reshape(%218, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %220 = @func_8159(%219) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) */;
    %221 = %217.2;
    %222 = %220.4;
    (%221, %222, meta[relay.Constant][9] /* ty=Tensor[(260), float64] */)
  };
  %223() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(260), float64], Tensor[(260), float64]) */
}

def @func_16970() -> (Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(225), float64], float64, Tensor[(10, 9, 7), float32]) {
  @func_16968() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(225), float64], float64, Tensor[(10, 9, 7), float32]) */
}

def @func_1301(%var_1299: Tensor[(10, 13, 1), float64], %var_1300: Tensor[(10, 13, 2), float64]) -> (Tensor[(10, 13, 2), bool],) {
  @func_1297(%var_1299, %var_1300) /* ty=(Tensor[(10, 13, 2), bool],) */
}

def @func_14410() -> (Tensor[(10, 9, 7), float32], float64, Tensor[(168), float32], Tensor[(10, 9, 7), float32]) {
  %224 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %225 = cast(meta[relay.Constant][10] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %226 = reshape(%225, newshape=[42, 4]) /* ty=Tensor[(42, 4), float32] */;
  %227 = @func_8388(%226) /* ty=(Tensor[(10, 9, 7), float32], float64, Tensor[(42, 4), float32], Tensor[(6, 4, 7), float64]) */;
  %228 = @func_13544() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %229 = %224.0;
  %230 = %227.1;
  %231 = %228.1;
  (%229, %230, meta[relay.Constant][10] /* ty=Tensor[(168), float32] */, %231)
}

def @func_11361() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_11359() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_14611() -> Tensor[(10, 9, 7), float32] {
  %233 = fn () -> Tensor[(10, 9, 7), float32] {
    %232 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %232.1
  };
  %233() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_13342() -> (Tensor[(10, 9, 7), float32], Tensor[(14, 5, 10), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %234 = @func_4792() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %235 = @func_11098() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(2304), uint16], Tensor[(14, 5, 10), float64]) */;
  %236 = @func_9768() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %237 = @func_3287() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %238 = %234.0;
  %239 = %235.4;
  %240 = @func_4350() /* ty=Tensor[(10, 9, 7), float32] */;
  %241 = %236.1;
  %242 = %237.1;
  (%238, %239, %240, %241, %242)
}

def @func_4843(%var_4837: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) {
  %243 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %244 = %243.2;
  %245 = cast(%244, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %246 = cast(%var_4837, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %247 = reshape(%246, newshape=[14, 130]) /* ty=Tensor[(14, 130), float64] */;
  %248 = @func_3695(%247) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(14, 130), float64]) */;
  %249 = cos(%245) /* ty=Tensor[(10, 9, 7), float64] */;
  %250 = %248.1;
  (%249, %250, %var_4837)
}

def @func_9935() -> Tensor[(10, 9, 7), float32] {
  @func_9933() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_1274(%var_1266: Tensor[(2002), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) {
  %251 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %252 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %253 = cast(-0.989134f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %254 = cast(%var_1266, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %255 = reshape(%253, newshape=[]) /* ty=float64 */;
  %256 = reshape(%254, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), float64] */;
  %257 = %251.0;
  %258 = %252.1;
  %259 = @func_596(%255, %256) /* ty=Tensor[(14, 11, 13), float64] */;
  (%257, %258, %259, -0.989134f64 /* ty=float64 */, %var_1266)
}

def @func_6679() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64]) {
  %260 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %261 = @func_2222() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float64]) */;
  %262 = %261.0;
  %263 = @func_2537() /* ty=Tensor[(10, 9, 7), float32] */;
  %264 = cast(%263, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %265 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%262, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %268 = @func_5234() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %269 = cast(meta[relay.Constant][11] /* ty=Tensor[(600), int32] */, dtype="int32") /* ty=Tensor[(600), int32] */;
  %270 = reshape(%269, newshape=[600]) /* ty=Tensor[(600), int32] */;
  %271 = @func_4593(%270) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(14, 11, 13), float64], float64, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %272 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %273 = cast(meta[relay.Constant][12] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %274 = reshape(%273, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %275 = @func_1681(%274) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
  %276 = %260.0;
  %277 = divide(%266, %267) /* ty=Tensor[(10, 9, 7), float64] */;
  %278 = %268.0;
  %279 = %271.3;
  %280 = %272.1;
  %281 = @func_3947() /* ty=Tensor[(10, 9, 7), float32] */;
  %282 = %275.0;
  (%276, %277, %278, %279, meta[relay.Constant][11] /* ty=Tensor[(600), int32] */, %280, %281, %282, meta[relay.Constant][12] /* ty=Tensor[(2002), float64] */)
}

def @func_6057() -> (Tensor[(10, 9, 7), float32],) {
  %283 = @func_5200() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %284 = %283.0;
  (%284,)
}

def @func_8232() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %289 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %285 = @func_4264() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %286 = @func_7354() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %287 = %285.1;
    %288 = %286.0;
    (%287, %288)
  };
  %289() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_10757() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_10755() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_7730(%var_7728: Tensor[(260), float64], %var_7729: float64) -> (Tensor[(10, 9, 7), float32], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) {
  @func_7726(%var_7728, %var_7729) /* ty=(Tensor[(10, 9, 7), float32], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */
}

def @func_9889() -> (Tensor[(10, 9, 7), float32],) {
  %291 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %290 = @func_6806() /* ty=Tensor[(10, 9, 7), float32] */;
    (%290,)
  };
  %291() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_15565() -> (Tensor[(10, 9, 7), float32],) {
  %294 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %292 = @func_8596() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %293 = %292.2;
    (%293,)
  };
  %294() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_8061() -> (Tensor[(10, 9, 7), float32],) {
  @func_8059() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_2960() -> (Tensor[(10, 9, 7), float64],) {
  %297 = fn () -> (Tensor[(10, 9, 7), float64],) {
    %295 = @func_2924() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %296 = %295.2;
    (%296,)
  };
  %297() /* ty=(Tensor[(10, 9, 7), float64],) */
}

def @func_14434() -> (Tensor[(10, 9, 7), float32],) {
  @func_14432() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_12267() -> Tensor[(10, 9, 7), float32] {
  %298 = @func_6506() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %298.0
}

def @func_12069() -> Tensor[(10, 9, 7), float64] {
  %300 = fn () -> Tensor[(10, 9, 7), float64] {
    %299 = @func_4490() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
    %299.0
  };
  %300() /* ty=Tensor[(10, 9, 7), float64] */
}

def @func_3287() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %301 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %302 = %301.0;
  %303 = @func_2537() /* ty=Tensor[(10, 9, 7), float32] */;
  (%302, %303)
}

def @func_8344() -> (Tensor[(10, 9, 7), float32],) {
  %304 = @func_1235() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %305 = %304.0;
  (%305,)
}

def @func_2802() -> (Tensor[(10, 9, 7), float32],) {
  @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_12506(%var_12504: Tensor[(8, 7, 15), uint8]) -> (Tensor[(8, 7, 15), uint8], Tensor[(8, 7, 15), float64], Tensor[(10, 9, 7), float32]) {
  @func_12503(%var_12504) /* ty=(Tensor[(8, 7, 15), uint8], Tensor[(8, 7, 15), float64], Tensor[(10, 9, 7), float32]) */
}

def @func_6234() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %306 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
  %307 = @func_4346() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %308 = %306.0;
  %309 = %307.1;
  (%308, %309)
}

def @func_6807() -> Tensor[(10, 9, 7), float32] {
  %311 = fn () -> Tensor[(10, 9, 7), float32] {
    %310 = @func_6369() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(192, 12), uint16], float64, Tensor[(600), int32]) */;
    %310.2
  };
  %311() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_13809() -> Tensor[(10, 9, 7), float32] {
  @func_13807() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_15429() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) {
  %312 = @func_9428() /* ty=(Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), bool]) */;
  %313 = %312.0;
  %314 = @func_10406() /* ty=Tensor[(10, 9, 7), bool] */;
  (%313, %314)
}

def @func_16126() -> (Tensor[(192, 12), uint16],) {
  %315 = @func_9281() /* ty=(Tensor[(192, 12), uint16],) */;
  %316 = %315.0;
  (%316,)
}

def @func_16261() -> (Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float32]) {
  @func_16259() /* ty=(Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float32]) */
}

def @func_14282() -> (Tensor[(10, 9, 7), float32],) {
  %317 = @func_8596() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %318 = %317.0;
  (%318,)
}

def @func_13246() -> Tensor[(10, 9, 7), float32] {
  @func_13244() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_4266() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_4264() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_13545() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %323 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %319 = @func_5512() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
    %320 = @func_2763() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %321 = %319.1;
    %322 = %320.0;
    (%321, %322)
  };
  %323() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_15941(%var_15894: Tensor[(2002), float64], %var_15907: Tensor[(825), uint64], %var_15917: Tensor[(14, 130), float64], %var_15934: Tensor[(825), uint64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 130), float64], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(825), bool], Tensor[(10, 9, 7), bool]) {
  %324 = @func_14815() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %325 = cast(%var_15894, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %326 = reshape(%325, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %327 = @func_1274(%326) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %328 = cast(%var_15907, dtype="uint64") /* ty=Tensor[(825), uint64] */;
  %329 = reshape(%328, newshape=[825]) /* ty=Tensor[(825), uint64] */;
  %330 = @func_15173(%329) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], uint64, Tensor[(825), uint64], Tensor[(1, 225), float64]) */;
  %331 = cast(%var_15917, dtype="float64") /* ty=Tensor[(14, 130), float64] */;
  %332 = reshape(%331, newshape=[1820]) /* ty=Tensor[(1820), float64] */;
  %333 = @func_4679(%332) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(14, 13, 10), float32]) */;
  %334 = cast(meta[relay.Constant][13] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %335 = reshape(%334, newshape=[6, 4, 7]) /* ty=Tensor[(6, 4, 7), float32] */;
  %336 = cast(%var_15934, dtype="bool") /* ty=Tensor[(825), bool] */;
  %337 = shape_of(%var_15907, dtype="int32") /* ty=Tensor[(1), int32] */;
  %338 = cast(%var_15907, dtype="bool") /* ty=Tensor[(825), bool] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?), bool] */;
  %340 = @func_10140() /* ty=(Tensor[(168), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %341 = %324.0;
  %342 = @func_10158() /* ty=Tensor[(10, 9, 7), float32] */;
  %343 = %327.0;
  %344 = @func_6957() /* ty=Tensor[(10, 9, 7), float32] */;
  %345 = %330.2;
  %346 = %333.1;
  %347 = @func_3442(%335) /* ty=Tensor[(6, 4, 7), bool] */;
  %348 = greater_equal(%338, %339) /* ty=Tensor[(825), bool] */;
  %349 = %340.2;
  (%341, %342, %343, %var_15894, %344, %345, %346, %var_15917, %347, meta[relay.Constant][13] /* ty=Tensor[(168), float32] */, %348, %349)
}

def @func_16578(%var_16512: Tensor[(3, 12, 1), float32]) -> (Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(3, 12, ?), bool], Tensor[(3, 12, 1), float32]) {
  %350 = @func_2924() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %351 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
  %352 = @func_5028() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) */;
  %353 = cast(%var_16512, dtype="float32") /* ty=Tensor[(3, 12, 1), float32] */;
  %354 = exp(%353) /* ty=Tensor[(3, 12, 1), float32] */;
  %355 = cast(%var_16512, dtype="bool") /* ty=Tensor[(3, 12, 1), bool] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%354, dtype="bool") /* ty=Tensor[(3, 12, 1), bool] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %359 = cast(%354, dtype="float32") /* ty=Tensor[(3, 12, 1), float32] */;
  %360 = %350.0;
  %361 = %351.1;
  %362 = %352.0;
  %363 = less_equal(%357, %358) /* ty=Tensor[(3, 12, ?), bool] */;
  %364 = log2(%359) /* ty=Tensor[(3, 12, 1), float32] */;
  (%360, %361, %362, %363, %364)
}

def @func_9587(%var_9586: Tensor[(15, 14, 5), float64]) -> (Tensor[(15, 14, 5), bool],) {
  %372 = fn (%var_9569: Tensor[(15, 14, 5), float64]) -> (Tensor[(15, 14, 5), bool],) {
    %365 = cast(%var_9569, dtype="float64") /* ty=Tensor[(15, 14, 5), float64] */;
    %366 = acosh(%365) /* ty=Tensor[(15, 14, 5), float64] */;
    %367 = cast(%var_9569, dtype="bool") /* ty=Tensor[(15, 14, 5), bool] */;
    %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
    %369 = cast(%366, dtype="bool") /* ty=Tensor[(15, 14, 5), bool] */;
    %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %371 = greater(%369, %370) /* ty=Tensor[(15, 14, 5), bool] */;
    (%371,)
  };
  %372(%var_9586) /* ty=(Tensor[(15, 14, 5), bool],) */
}

def @func_4347() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %377 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %373 = @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %374 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %375 = %373.0;
    %376 = %374.0;
    (%375, %376)
  };
  %377() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_9455() -> Tensor[(10, 9, 7), float32] {
  %379 = fn () -> Tensor[(10, 9, 7), float32] {
    %378 = @func_9350() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %378.0
  };
  %379() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_11515() -> (Tensor[(10, 9, 7), float32],) {
  %380 = @func_1071() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %381 = %380.0;
  (%381,)
}

def @func_16490() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_16488() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_15589(%var_15587: Tensor[(8, 8, 8), float32]) -> Tensor[(8, 8, 8), float32] {
  @func_15586(%var_15587) /* ty=Tensor[(8, 8, 8), float32] */
}

def @func_974(%var_972: Tensor[(12, 12, 16), uint16], %var_973: Tensor[(12, 12, 16), uint16]) -> (Tensor[(12, 12, 16), uint16], Tensor[(12, 12, 16), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %392 = fn (%var_951: Tensor[(12, 12, 16), uint16], %var_952: Tensor[(12, 12, 16), uint16]) -> (Tensor[(12, 12, 16), uint16], Tensor[(12, 12, 16), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %382 = cast(%var_952, dtype="uint16") /* ty=Tensor[(12, 12, 16), uint16] */;
    %383 = shape_of(%var_951, dtype="int32") /* ty=Tensor[(3), int32] */;
    %384 = cast(%var_951, dtype="uint16") /* ty=Tensor[(12, 12, 16), uint16] */;
    %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %386 = cast(%var_951, dtype="float64") /* ty=Tensor[(12, 12, 16), float64] */;
    %387 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %388 = bitwise_xor(%384, %385) /* ty=Tensor[(12, 12, 16), uint16] */;
    %389 = atanh(%386) /* ty=Tensor[(12, 12, 16), float64] */;
    %390 = %387.1;
    %391 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
    (%388, %389, %390, %391)
  };
  %392(%var_972, %var_973) /* ty=(Tensor[(12, 12, 16), uint16], Tensor[(12, 12, 16), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_3444(%var_3443: Tensor[(6, 4, 7), float32]) -> Tensor[(6, 4, 7), bool] {
  %397 = fn (%var_3436: Tensor[(6, 4, 7), float32]) -> Tensor[(6, 4, 7), bool] {
    %393 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 4, 7), float32] */, dtype="bool") /* ty=Tensor[(6, 4, 7), bool] */;
    %394 = shape_of(%var_3436, dtype="int32") /* ty=Tensor[(3), int32] */;
    %395 = cast(%var_3436, dtype="bool") /* ty=Tensor[(6, 4, 7), bool] */;
    %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%395, %396) /* ty=Tensor[(6, 4, 7), bool] */
  };
  %397(%var_3443) /* ty=Tensor[(6, 4, 7), bool] */
}

def @func_13928() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %405 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %398 = @func_9821() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %399 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %400 = %398.0;
    %401 = @func_9933() /* ty=Tensor[(10, 9, 7), float32] */;
    %402 = %399.1;
    %403 = @func_9454() /* ty=Tensor[(10, 9, 7), float32] */;
    %404 = @func_7229() /* ty=Tensor[(10, 9, 7), float32] */;
    (%400, %401, %402, %403, %404)
  };
  %405() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_9352() -> (Tensor[(10, 9, 7), float32],) {
  @func_9350() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_8668() -> Tensor[(10, 9, 7), float32] {
  %407 = fn () -> Tensor[(10, 9, 7), float32] {
    %406 = @func_5716() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %406.0
  };
  %407() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_14459() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %411 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %408 = @func_8059() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %409 = @func_8639() /* ty=Tensor[(10, 9, 7), float32] */;
    %410 = %408.0;
    (%409, %410)
  };
  %411() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_9821() -> (Tensor[(10, 9, 7), float32],) {
  %412 = @func_8515() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */;
  %413 = %412.0;
  (%413,)
}

def @func_8037() -> (Tensor[(15, 4, 15), float64],) {
  %416 = fn () -> (Tensor[(15, 4, 15), float64],) {
    %414 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 4, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 4, 15), float64] */;
    %415 = erf(%414) /* ty=Tensor[(15, 4, 15), float64] */;
    (%415,)
  };
  %416() /* ty=(Tensor[(15, 4, 15), float64],) */
}

def @func_15853() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_15851() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_10584(%var_10553: Tensor[(600), int32], %var_10554: Tensor[(7, 260), float64]) -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(7, 260), bool], Tensor[(260), float64], Tensor[(225), float64], float64) {
  %417 = @func_2222() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float64]) */;
  %418 = @func_1396() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %419 = @func_6234() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %420 = cast(%var_10553, dtype="int32") /* ty=Tensor[(600), int32] */;
  %421 = cast(%var_10554, dtype="float64") /* ty=Tensor[(7, 260), float64] */;
  %422 = reshape(%420, newshape=[600]) /* ty=Tensor[(600), int32] */;
  %423 = reshape(%421, newshape=[7, 260]) /* ty=Tensor[(7, 260), float64] */;
  %424 = @func_9102(%422, %423) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float32], Tensor[(7, 260), float64], Tensor[(10, 9, 7), float32], Tensor[(65, 4), float32], Tensor[(10, 9, 7), float64]) */;
  %425 = %424.6;
  %426 = cast(%425, dtype="bool") /* ty=Tensor[(7, 260), bool] */;
  %427 = shape_of(%var_10554, dtype="int32") /* ty=Tensor[(2), int32] */;
  %428 = cast(%var_10554, dtype="bool") /* ty=Tensor[(7, 260), bool] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %430 = cast(meta[relay.Constant][16] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %431 = cast(0.637661f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %432 = reshape(%430, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float64] */;
  %433 = reshape(%431, newshape=[]) /* ty=float64 */;
  %434 = @func_3903(%432, %433) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */;
  %435 = %417.0;
  %436 = %418.0;
  %437 = %419.1;
  %438 = less_equal(%428, %429) /* ty=Tensor[(7, 260), bool] */;
  %439 = %434.2;
  (%435, %436, %437, %var_10553, %438, %439, meta[relay.Constant][16] /* ty=Tensor[(225), float64] */, 0.637661f64 /* ty=float64 */)
}

def @func_1360() -> (Tensor[(10, 9, 7), float32],) {
  @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_5668(%var_5666: float64, %var_5667: Tensor[(11, 10, 8), float64]) -> (Tensor[(11, 10, 8), float64],) {
  @func_5664(%var_5666, %var_5667) /* ty=(Tensor[(11, 10, 8), float64],) */
}

def @func_7852() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64) {
  %448 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64) {
    %440 = @func_2712() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %441 = cast(meta[relay.Constant][17] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
    %442 = cast(-3.92108f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %443 = reshape(%441, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float64] */;
    %444 = reshape(%442, newshape=[]) /* ty=float64 */;
    %445 = @func_3903(%443, %444) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */;
    %446 = %440.0;
    %447 = %445.3;
    (%446, %447, meta[relay.Constant][17] /* ty=Tensor[(225), float64] */, -3.92108f64 /* ty=float64 */)
  };
  %448() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64) */
}

def @func_5717() -> (Tensor[(10, 9, 7), float32],) {
  %451 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %449 = @func_1770() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %450 = %449.0;
    (%450,)
  };
  %451() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_7971(%var_7969: Tensor[(60, 10), int32]) -> (Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(60, 10), int32]) {
  @func_7968(%var_7969) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(60, 10), int32]) */
}

def @func_10140() -> (Tensor[(168), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) {
  %452 = @func_8515() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */;
  %453 = @func_5716() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %454 = @func_5563() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %455 = %452.2;
  %456 = %453.0;
  %457 = %454.0;
  (%455, %456, %457)
}

def @func_11162() -> (Tensor[(10, 9, 7), float32],) {
  %460 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %458 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %459 = %458.0;
    (%459,)
  };
  %460() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_2764() -> (Tensor[(10, 9, 7), float32],) {
  %462 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %461 = @func_777() /* ty=Tensor[(10, 9, 7), float32] */;
    (%461,)
  };
  %462() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_6741() -> Tensor[(10, 9, 7), float32] {
  %464 = fn () -> Tensor[(10, 9, 7), float32] {
    %463 = @func_6067() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %463.0
  };
  %464() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_11801() -> (Tensor[(10, 9, 7), float32],) {
  %467 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %465 = @func_8344() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %466 = %465.0;
    (%466,)
  };
  %467() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_10231() -> Tensor[(10, 9, 7), float32] {
  %469 = fn () -> Tensor[(10, 9, 7), float32] {
    %468 = @func_5200() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %468.0
  };
  %469() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_2712() -> (Tensor[(10, 9, 7), float32],) {
  %470 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
  %471 = %470.2;
  (%471,)
}

def @func_17032(%var_17030: Tensor[(8, 6, 9), float32], %var_17031: Tensor[(8, 6, 9), float32]) -> (Tensor[(8, 6, 9), float32], Tensor[(8, 6, 9), float32], Tensor[(8, 6, 9), bool], Tensor[(10, 9, 7), float32]) {
  @func_17028(%var_17030, %var_17031) /* ty=(Tensor[(8, 6, 9), float32], Tensor[(8, 6, 9), float32], Tensor[(8, 6, 9), bool], Tensor[(10, 9, 7), float32]) */
}

def @func_1881() -> Tensor[(10, 9, 7), float32] {
  %472 = @func_1499() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %472.0
}

def @func_5200() -> (Tensor[(10, 9, 7), float32],) {
  %473 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %474 = %473.0;
  (%474,)
}

def @func_6059() -> (Tensor[(10, 9, 7), float32],) {
  @func_6057() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_12910(%var_12908: Tensor[(2002), float64], %var_12909: float32) -> (Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], float32, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_12906(%var_12908, %var_12909) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], float32, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_3513(%var_3511: Tensor[(4, 10, 15), int32], %var_3512: Tensor[(4, 10, 15), int32]) -> (Tensor[(4, 10, 15), float64], Tensor[(4, 10, 15), uint8], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) {
  @func_3509(%var_3511, %var_3512) /* ty=(Tensor[(4, 10, 15), float64], Tensor[(4, 10, 15), uint8], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) */
}

def @func_8924() -> (Tensor[(10, 9, 7), float64],) {
  %476 = fn () -> (Tensor[(10, 9, 7), float64],) {
    %475 = @func_7066() /* ty=Tensor[(10, 9, 7), float64] */;
    (%475,)
  };
  %476() /* ty=(Tensor[(10, 9, 7), float64],) */
}

def @func_4302() -> (Tensor[(10, 9, 7), float32],) {
  %477 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %478 = %477.0;
  (%478,)
}

def @func_4681(%var_4680: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(14, 13, 10), float32]) {
  %493 = fn (%var_4675: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(14, 13, 10), float32]) {
    %479 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %480 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %481 = @func_3634() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
    %482 = cast(%var_4675, dtype="float64") /* ty=Tensor[(1820), float64] */;
    %483 = reshape(%482, newshape=[14, 130]) /* ty=Tensor[(14, 130), float64] */;
    %484 = @func_3695(%483) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(14, 130), float64]) */;
    %485 = %484.1;
    %486 = cast(%485, dtype="float64") /* ty=Tensor[(14, 13, 10), float64] */;
    %487 = reshape(%486, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), float64] */;
    %488 = @func_3237(%487) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */;
    %489 = %479.0;
    %490 = %480.0;
    %491 = %481.0;
    %492 = %488.1;
    (%489, %490, %491, %485, %var_4675, %492)
  };
  %493(%var_4680) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(14, 13, 10), float32]) */
}

def @main(%var_17163: int32, %var_17164: Tensor[(1, 8, 5), int32]) -> (Tensor[(1, 8, 5), bool],) {
  %494 = cast(%var_17163, dtype="bool") /* ty=bool */;
  %495 = cast(%var_17164, dtype="bool") /* ty=Tensor[(1, 8, 5), bool] */;
  %496 = greater_equal(%494, %495) /* ty=Tensor[(1, 8, 5), bool] */;
  (%496,)
}

def @func_14825() -> (float64,) {
  @func_14823() /* ty=(float64,) */
}

def @func_2264() -> (Tensor[(10, 9, 7), float32],) {
  %499 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %497 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %498 = %497.0;
    (%498,)
  };
  %499() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_16824() -> (Tensor[(10, 9, 7), float32], float64) {
  %503 = fn () -> (Tensor[(10, 9, 7), float32], float64) {
    %500 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %501 = %500.0;
    %502 = @func_14437() /* ty=float64 */;
    (%501, %502)
  };
  %503() /* ty=(Tensor[(10, 9, 7), float32], float64) */
}

def @func_189() -> Tensor[(10, 9, 7), float32] {
  %505 = fn () -> Tensor[(10, 9, 7), float32] {
    %504 = cast(meta[relay.Constant][18] /* ty=Tensor[(10, 9, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
    erf(%504) /* ty=Tensor[(10, 9, 7), float32] */
  };
  %505() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_8448(%var_8446: float32) -> Tensor[(10, 9, 1), float32] {
  @func_8445(%var_8446) /* ty=Tensor[(10, 9, 1), float32] */
}

def @func_14816() -> (Tensor[(10, 9, 7), float32],) {
  %508 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %506 = @func_9844() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %507 = %506.0;
    (%507,)
  };
  %508() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_2925() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) {
  %514 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) {
    %509 = @func_2785() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %510 = @func_2222() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float64]) */;
    %511 = @func_1881() /* ty=Tensor[(10, 9, 7), float32] */;
    %512 = %509.0;
    %513 = %510.1;
    (%511, %512, %513)
  };
  %514() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */
}

def @func_14758() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_14756() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_15810() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %515 = @func_11161() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %516 = @func_15378() /* ty=Tensor[(10, 9, 7), float32] */;
  %517 = %515.0;
  (%516, %517)
}

def @func_5644() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64]) {
  %529 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64]) {
    %518 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
    %519 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %520 = @func_1235() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %521 = cast(meta[relay.Constant][19] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
    %522 = reshape(%521, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
    %523 = @func_1681(%522) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
    %524 = %518.1;
    %525 = %519.0;
    %526 = %520.0;
    %527 = @func_777() /* ty=Tensor[(10, 9, 7), float32] */;
    %528 = %523.2;
    (%524, %525, %526, %527, %528, meta[relay.Constant][19] /* ty=Tensor[(2002), float64] */)
  };
  %529() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64]) */
}

def @func_8416() -> (Tensor[(10, 9, 7), float32],) {
  @func_8414() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_9995(%var_9962: Tensor[(77, 4), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(77, 4), float64], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32], Tensor[(10, 9, 7), float32]) {
  %530 = cast(%var_9962, dtype="float64") /* ty=Tensor[(77, 4), float64] */;
  %531 = cast(%var_9962, dtype="float64") /* ty=Tensor[(77, 4), float64] */;
  %532 = reshape(%530, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %533 = reshape(%531, newshape=[7, 11, 4]) /* ty=Tensor[(7, 11, 4), float64] */;
  %534 = @func_3372(%532, %533) /* ty=(Tensor[(7, 11, 4), float64], Tensor[(10, 9, 7), float32]) */;
  %535 = %534.0;
  %536 = cast(%535, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %537 = cos(%536) /* ty=Tensor[(7, 11, 4), float64] */;
  %538 = cast(%537, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %539 = cast(%537, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %540 = acos(%539) /* ty=Tensor[(7, 11, 4), float64] */;
  %541 = cast(%540, dtype="float32") /* ty=Tensor[(7, 11, 4), float32] */;
  %542 = @func_6506() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %543 = @func_2537() /* ty=Tensor[(10, 9, 7), float32] */;
  %544 = asinh(%538) /* ty=Tensor[(7, 11, 4), float64] */;
  %545 = exp(%541) /* ty=Tensor[(7, 11, 4), float32] */;
  %546 = %542.0;
  (%543, %var_9962, %544, %545, %546)
}

def @func_16259() -> (Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float32]) {
  %547 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %548 = @func_14823() /* ty=(float64,) */;
  %549 = @func_5716() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %550 = %547.0;
  %551 = %548.0;
  %552 = %549.0;
  (%550, %551, %552)
}

def @func_8059() -> (Tensor[(10, 9, 7), float32],) {
  %553 = @func_4865() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %554 = %553.0;
  (%554,)
}

def @func_16581(%var_16579: Tensor[(3, 12, 1), float32]) -> (Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(3, 12, ?), bool], Tensor[(3, 12, 1), float32]) {
  @func_16578(%var_16579) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(3, 12, ?), bool], Tensor[(3, 12, 1), float32]) */
}

def @func_7067() -> Tensor[(10, 9, 7), float64] {
  %556 = fn () -> Tensor[(10, 9, 7), float64] {
    %555 = @func_2959() /* ty=(Tensor[(10, 9, 7), float64],) */;
    %555.0
  };
  %556() /* ty=Tensor[(10, 9, 7), float64] */
}

def @func_8414() -> (Tensor[(10, 9, 7), float32],) {
  %557 = @func_994() /* ty=Tensor[(10, 9, 7), float32] */;
  (%557,)
}

def @func_9249(%var_9247: float64, %var_9248: Tensor[(3, 8, 10), float64]) -> (Tensor[(3, 8, 10), bool], Tensor[(10, 9, 7), float32]) {
  %562 = fn (%var_9227: float64, %var_9228: Tensor[(3, 8, 10), float64]) -> (Tensor[(3, 8, 10), bool], Tensor[(10, 9, 7), float32]) {
    %558 = cast(%var_9227, dtype="bool") /* ty=bool */;
    %559 = cast(%var_9228, dtype="bool") /* ty=Tensor[(3, 8, 10), bool] */;
    %560 = less_equal(%558, %559) /* ty=Tensor[(3, 8, 10), bool] */;
    %561 = @func_3068() /* ty=Tensor[(10, 9, 7), float32] */;
    (%560, %561)
  };
  %562(%var_9247, %var_9248) /* ty=(Tensor[(3, 8, 10), bool], Tensor[(10, 9, 7), float32]) */
}

def @func_5861(%var_5859: Tensor[(130), float64], %var_5860: float64) -> (Tensor[(10, 9, 7), float64], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(2304), uint16]) {
  %577 = fn (%var_5842: Tensor[(130), float64], %var_5844: float64) -> (Tensor[(10, 9, 7), float64], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(2304), uint16]) {
    %563 = @func_5716() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %564 = %563.0;
    %565 = cast(%564, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
    %566 = cast(%var_5842, dtype="float64") /* ty=Tensor[(130), float64] */;
    %567 = cast(meta[relay.Constant][20] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
    %568 = cast(%var_5844, dtype="float64") /* ty=float64 */;
    %569 = reshape(%566, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %570 = reshape(%567, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %571 = reshape(%568, newshape=[]) /* ty=float64 */;
    %572 = @func_2254(%569, %570, %571) /* ty=(Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
    %573 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
    %574 = cosh(%565) /* ty=Tensor[(10, 9, 7), float64] */;
    %575 = %572.5;
    %576 = %573.1;
    (%574, %575, %var_5842, meta[relay.Constant][20] /* ty=Tensor[(260), float64] */, %var_5844, %576)
  };
  %577(%var_5859, %var_5860) /* ty=(Tensor[(10, 9, 7), float64], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(2304), uint16]) */
}

def @func_6369() -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(192, 12), uint16], float64, Tensor[(600), int32]) {
  %578 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %579 = @func_2729() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %580 = cast(meta[relay.Constant][21] /* ty=Tensor[(192, 12), uint16] */, dtype="uint16") /* ty=Tensor[(192, 12), uint16] */;
  %581 = cast(meta[relay.Constant][21] /* ty=Tensor[(192, 12), uint16] */, dtype="uint16") /* ty=Tensor[(192, 12), uint16] */;
  %582 = reshape(%580, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
  %583 = reshape(%581, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
  %584 = @func_971(%582, %583) /* ty=(Tensor[(12, 12, 16), uint16], Tensor[(12, 12, 16), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %585 = cast(meta[relay.Constant][22] /* ty=Tensor[(600), int32] */, dtype="int32") /* ty=Tensor[(600), int32] */;
  %586 = reshape(%585, newshape=[600]) /* ty=Tensor[(600), int32] */;
  %587 = @func_4593(%586) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(14, 11, 13), float64], float64, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %588 = %578.2;
  %589 = %579.0;
  %590 = %584.3;
  %591 = %587.7;
  (%588, %589, %590, meta[relay.Constant][21] /* ty=Tensor[(192, 12), uint16] */, %591, meta[relay.Constant][22] /* ty=Tensor[(600), int32] */)
}

def @func_9548() -> Tensor[(10, 9, 7), float32] {
  %593 = fn () -> Tensor[(10, 9, 7), float32] {
    %592 = @func_6067() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %592.1
  };
  %593() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_1501() -> (Tensor[(10, 9, 7), float32],) {
  @func_1499() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_2731() -> (Tensor[(10, 9, 7), float32],) {
  @func_2729() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_4279() -> (Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], Tensor[(2002), float64]) {
  %600 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], Tensor[(2002), float64]) {
    %594 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %595 = cast(meta[relay.Constant][23] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
    %596 = reshape(%595, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
    %597 = @func_1274(%596) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
    %598 = %594.0;
    %599 = %597.2;
    (%598, %599, meta[relay.Constant][23] /* ty=Tensor[(2002), float64] */)
  };
  %600() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], Tensor[(2002), float64]) */
}

def @func_13431() -> (Tensor[(10, 9, 7), bool],) {
  @func_13429() /* ty=(Tensor[(10, 9, 7), bool],) */
}

def @func_1771() -> (Tensor[(10, 9, 7), float32],) {
  %603 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %601 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %602 = %601.0;
    (%602,)
  };
  %603() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_14245(%var_14220: int32, %var_14221: Tensor[(3, 1, 13), int32]) -> (Tensor[(3, 1, 13), int32], Tensor[(10, 9, 7), float32]) {
  %604 = cast(%var_14220, dtype="int32") /* ty=int32 */;
  %605 = cast(%var_14221, dtype="int32") /* ty=Tensor[(3, 1, 13), int32] */;
  %606 = @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %607 = left_shift(%604, %605) /* ty=Tensor[(3, 1, 13), int32] */;
  %608 = %606.0;
  (%607, %608)
}

def @func_14756() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %609 = @func_11359() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %610 = @func_11775() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %611 = @func_11645() /* ty=Tensor[(10, 9, 7), float32] */;
  %612 = %609.1;
  %613 = %610.0;
  (%611, %612, %613)
}

def @func_9509() -> (Tensor[(10, 9, 7), float32],) {
  @func_9507() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_10293(%var_10291: Tensor[(6, 5, 6), float32]) -> (Tensor[(6, 5, 6), float32],) {
  @func_10290(%var_10291) /* ty=(Tensor[(6, 5, 6), float32],) */
}

def @func_2901(%var_2900: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(143, 14), float64], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64) {
  %633 = fn (%var_2891: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(143, 14), float64], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64) {
    %614 = @func_2712() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %615 = cast(meta[relay.Constant][24] /* ty=Tensor[(143, 14), float64] */, dtype="float64") /* ty=Tensor[(143, 14), float64] */;
    %616 = reshape(%615, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
    %617 = @func_1681(%616) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
    %618 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %619 = @func_1373() /* ty=(Tensor[(10, 9, 7), bool],) */;
    %620 = cast(meta[relay.Constant][24] /* ty=Tensor[(143, 14), float64] */, dtype="float64") /* ty=Tensor[(143, 14), float64] */;
    %621 = @func_1817() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %622 = cast(%var_2891, dtype="float64") /* ty=float64 */;
    %623 = cast(meta[relay.Constant][24] /* ty=Tensor[(143, 14), float64] */, dtype="float64") /* ty=Tensor[(143, 14), float64] */;
    %624 = reshape(%622, newshape=[]) /* ty=float64 */;
    %625 = reshape(%623, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), float64] */;
    %626 = %614.0;
    %627 = %617.3;
    %628 = %618.0;
    %629 = %619.0;
    %630 = sigmoid(%620) /* ty=Tensor[(143, 14), float64] */;
    %631 = %621.0;
    %632 = @func_596(%624, %625) /* ty=Tensor[(14, 11, 13), float64] */;
    (%626, %627, %628, %629, %630, %631, %632, %var_2891)
  };
  %633(%var_2900) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(143, 14), float64], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64) */
}

def @func_5328() -> (Tensor[(10, 9, 7), float32],) {
  @func_5326() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_16884(%var_16882: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32], Tensor[(1820), float64]) {
  @func_16881(%var_16882) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32], Tensor[(1820), float64]) */
}

def @func_14432() -> (Tensor[(10, 9, 7), float32],) {
  %634 = @func_12267() /* ty=Tensor[(10, 9, 7), float32] */;
  (%634,)
}

def @func_3809(%var_3808: Tensor[(10, 9, 7), float32]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) {
  %645 = fn (%var_3798: Tensor[(10, 9, 7), float32]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) {
    %635 = @func_1817() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %636 = @func_1770() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %637 = %636.0;
    %638 = cast(%var_3798, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
    %639 = shape_of(%637, dtype="int32") /* ty=Tensor[(3), int32] */;
    %640 = cast(%637, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
    %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %642 = %635.0;
    %643 = @func_994() /* ty=Tensor[(10, 9, 7), float32] */;
    %644 = logical_and(%640, %641) /* ty=Tensor[(10, 9, 7), bool] */;
    (%642, %643, %644)
  };
  %645(%var_3808) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */
}

def @func_4960(%var_4958: Tensor[(11, 1, 2), float64]) -> Tensor[(11, 1, 2), float64] {
  @func_4957(%var_4958) /* ty=Tensor[(11, 1, 2), float64] */
}

def @func_9430() -> (Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), bool]) {
  @func_9428() /* ty=(Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), bool]) */
}

def @func_778() -> Tensor[(10, 9, 7), float32] {
  %647 = fn () -> Tensor[(10, 9, 7), float32] {
    %646 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %646.0
  };
  %647() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_5397() -> Tensor[(10, 9, 7), float32] {
  @func_5395() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_13623() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_13621() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_7868() -> (Tensor[(10, 9, 7), float32],) {
  %650 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %648 = @func_3287() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %649 = %648.0;
    (%649,)
  };
  %650() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_2259(%var_2256: Tensor[(130), float64], %var_2257: Tensor[(260), float64], %var_2258: float64) -> (Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) {
  @func_2254(%var_2256, %var_2257, %var_2258) /* ty=(Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */
}

def @func_7767() -> (Tensor[(14, 5, 10), float64], Tensor[(14, 5, 10), float32]) {
  @func_7765() /* ty=(Tensor[(14, 5, 10), float64], Tensor[(14, 5, 10), float32]) */
}

def @func_10290(%var_10285: Tensor[(6, 5, 6), float32]) -> (Tensor[(6, 5, 6), float32],) {
  %651 = cast(%var_10285, dtype="float32") /* ty=Tensor[(6, 5, 6), float32] */;
  %652 = tan(%651) /* ty=Tensor[(6, 5, 6), float32] */;
  (%652,)
}

def @func_5116() -> (Tensor[(10, 9, 7), float64], Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float32], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(10, 9, 7), float32]) {
  %653 = @func_4490() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %654 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 7), float64] */;
  %655 = atanh(%654) /* ty=Tensor[(16, 16, 7), float64] */;
  %656 = cast(%655, dtype="int64") /* ty=Tensor[(16, 16, 7), int64] */;
  %657 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(16, 16, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 16, 7), float64] */, dtype="int64") /* ty=Tensor[(16, 16, 7), int64] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %660 = @func_1396() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %661 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 7), float64] */;
  %662 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 7), float64] */;
  %663 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(16, 16, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(meta[relay.Constant][26] /* ty=Tensor[(16, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 7), float64] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %666 = cast(meta[relay.Constant][25] /* ty=Tensor[(16, 16, 7), float64] */, dtype="uint8") /* ty=Tensor[(16, 16, 7), uint8] */;
  %667 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%655, dtype="uint8") /* ty=Tensor[(16, 16, 7), uint8] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %670 = subtract(%668, %669) /* ty=Tensor[(16, 16, 7), uint8] */;
  %671 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 16, 7), uint8] */, dtype="float64") /* ty=Tensor[(16, 16, 7), float64] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%670, dtype="float64") /* ty=Tensor[(16, 16, 7), float64] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %675 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %676 = %653.0;
  %677 = add(%658, %659) /* ty=Tensor[(16, 16, 7), int64] */;
  %678 = %660.0;
  %679 = rsqrt(%661) /* ty=Tensor[(16, 16, 7), float64] */;
  %680 = power(%664, %665) /* ty=Tensor[(16, 16, 7), float64] */;
  %681 = floor_mod(%673, %674) /* ty=Tensor[(16, 16, 7), float64] */;
  %682 = %675.0;
  (%676, %677, %678, %679, %680, %681, %682)
}

def @func_8021() -> (Tensor[(10, 9, 7), float32],) {
  %685 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %683 = @func_1817() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %684 = %683.0;
    (%684,)
  };
  %685() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_14823() -> (float64,) {
  %686 = @func_10633() /* ty=float64 */;
  (%686,)
}

def @func_8824() -> (Tensor[(10, 9, 7), float32],) {
  @func_8822() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_7404() -> (Tensor[(10, 9, 7), float32], Tensor[(2002), float64]) {
  %690 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(2002), float64]) {
    %687 = @func_6679() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64]) */;
    %688 = @func_6740() /* ty=Tensor[(10, 9, 7), float32] */;
    %689 = %687.8;
    (%688, %689)
  };
  %690() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2002), float64]) */
}

def @func_12269() -> Tensor[(10, 9, 7), float32] {
  @func_12267() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_578() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %697 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %691 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %692 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %693 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %694 = %691.0;
    %695 = %692.1;
    %696 = %693.3;
    (%694, %695, %696)
  };
  %697() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_13511() -> Tensor[(260), float64] {
  %699 = fn () -> Tensor[(260), float64] {
    %698 = @func_7024() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130), float64], Tensor[(130, 2), float64], float64) */;
    %698.1
  };
  %699() /* ty=Tensor[(260), float64] */
}

def @func_13099() -> (Tensor[(10, 9, 7), float32], Tensor[(11, 6, 7), float64]) {
  %700 = @func_9888() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %701 = @func_12140() /* ty=(Tensor[(11, 6, 7), float64],) */;
  %702 = %700.0;
  %703 = %701.0;
  (%702, %703)
}

def @func_2538() -> Tensor[(10, 9, 7), float32] {
  %705 = fn () -> Tensor[(10, 9, 7), float32] {
    %704 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
    %704.0
  };
  %705() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_1297(%var_1279: Tensor[(10, 13, 1), float64], %var_1280: Tensor[(10, 13, 2), float64]) -> (Tensor[(10, 13, 2), bool],) {
  %706 = cast(%var_1279, dtype="bool") /* ty=Tensor[(10, 13, 1), bool] */;
  %707 = cast(%var_1280, dtype="bool") /* ty=Tensor[(10, 13, 2), bool] */;
  %708 = not_equal(%706, %707) /* ty=Tensor[(10, 13, 2), bool] */;
  (%708,)
}

def @func_8391(%var_8389: Tensor[(42, 4), float32]) -> (Tensor[(10, 9, 7), float32], float64, Tensor[(42, 4), float32], Tensor[(6, 4, 7), float64]) {
  @func_8388(%var_8389) /* ty=(Tensor[(10, 9, 7), float32], float64, Tensor[(42, 4), float32], Tensor[(6, 4, 7), float64]) */
}

def @func_8822() -> (Tensor[(10, 9, 7), float32],) {
  %709 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
  %710 = %709.2;
  (%710,)
}

def @func_4793() -> (Tensor[(10, 9, 7), float32],) {
  %713 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %711 = @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %712 = %711.0;
    (%712,)
  };
  %713() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_5766() -> Tensor[(10, 9, 7), float32] {
  %714 = fn () -> Tensor[(10, 9, 7), float32] {
    @func_777() /* ty=Tensor[(10, 9, 7), float32] */
  };
  %714() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_486() -> (Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) {
  %724 = fn () -> (Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) {
    %715 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
    %716 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
    %717 = cast(%716, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
    %718 = shape_of(%715, dtype="int32") /* ty=Tensor[(3), int32] */;
    %719 = cast(%715, dtype="bool") /* ty=Tensor[(10, 9, 7), bool] */;
    %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %721 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %722 = greater_equal(%719, %720) /* ty=Tensor[(10, 9, 7), bool] */;
    %723 = %721.0;
    (%722, %723)
  };
  %724() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */
}

def @func_3239(%var_3238: Tensor[(14, 13, 10), float64]) -> (Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) {
  %730 = fn (%var_3199: Tensor[(14, 13, 10), float64]) -> (Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) {
    %725 = cast(meta[relay.Constant][28] /* ty=Tensor[(14, 1, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 1, 10), float64] */;
    %726 = cast(%var_3199, dtype="float64") /* ty=Tensor[(14, 13, 10), float64] */;
    %727 = cast(%var_3199, dtype="float32") /* ty=Tensor[(14, 13, 10), float32] */;
    %728 = floor_mod(%725, %726) /* ty=Tensor[(14, 13, 10), float64] */;
    %729 = sqrt(%727) /* ty=Tensor[(14, 13, 10), float32] */;
    (%728, %729)
  };
  %730(%var_3238) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */
}

def @func_10886(%var_10884: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float32]) {
  @func_10883(%var_10884) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float32]) */
}

def @func_14284() -> (Tensor[(10, 9, 7), float32],) {
  @func_14282() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_257() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %731 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %732 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %733 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %734 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %735 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  %736 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  (%731, %732, %733, %734, %735, %736)
}

def @func_14437() -> float64 {
  @func_7918() /* ty=float64 */
}

def @func_7356() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_7354() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_8445(%var_8424: float32) -> Tensor[(10, 9, 1), float32] {
  %737 = cast(%var_8424, dtype="float32") /* ty=float32 */;
  %738 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 9, 1), float32] */, dtype="float32") /* ty=Tensor[(10, 9, 1), float32] */;
  floor_mod(%737, %738) /* ty=Tensor[(10, 9, 1), float32] */
}

def @func_15516() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float32]) {
  %739 = @func_2263() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %740 = @func_5234() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %741 = cast(9.06988f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %742 = reshape(%741, newshape=[]) /* ty=float64 */;
  %743 = @func_2432(%742) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(130), float64], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 13, 2), bool], Tensor[(10, 9, 7), float32], Tensor[(65, 4), bool], Tensor[(65, 4), uint16], Tensor[(65, 4), float32], Tensor[(65, 4), float64], Tensor[(10, 9, 7), float32]) */;
  %744 = %739.0;
  %745 = %740.0;
  %746 = @func_4350() /* ty=Tensor[(10, 9, 7), float32] */;
  %747 = %743.16;
  %748 = @func_12267() /* ty=Tensor[(10, 9, 7), float32] */;
  (%744, %745, %746, %747, 9.06988f64 /* ty=float64 */, %748)
}

def @func_15980() -> (float64, Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) {
  @func_15978() /* ty=(float64, Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) */
}

def @func_3731(%var_3729: Tensor[(10, 9, 7), float32], %var_3730: Tensor[(260), float64]) -> (Tensor[(10, 9, 7), uint16], Tensor[(10, 9, 7), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32]) {
  %764 = fn (%var_3706: Tensor[(10, 9, 7), float32], %var_3721: Tensor[(260), float64]) -> (Tensor[(10, 9, 7), uint16], Tensor[(10, 9, 7), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32]) {
    %749 = @func_2729() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %750 = %749.0;
    %751 = cast(%var_3706, dtype="uint16") /* ty=Tensor[(10, 9, 7), uint16] */;
    %752 = shape_of(%750, dtype="int32") /* ty=Tensor[(3), int32] */;
    %753 = cast(%750, dtype="uint16") /* ty=Tensor[(10, 9, 7), uint16] */;
    %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %755 = cast(meta[relay.Constant][30] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %756 = cast(%var_3721, dtype="float64") /* ty=Tensor[(260), float64] */;
    %757 = reshape(%755, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %758 = reshape(%756, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %759 = @func_1521(%757, %758) /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64]) */;
    %760 = cast(%750, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
    %761 = bitwise_or(%753, %754) /* ty=Tensor[(10, 9, 7), uint16] */;
    %762 = %759.0;
    %763 = log2(%760) /* ty=Tensor[(10, 9, 7), float32] */;
    (%761, %762, meta[relay.Constant][30] /* ty=Tensor[(130), float64] */, %var_3721, %763)
  };
  %764(%var_3729, %var_3730) /* ty=(Tensor[(10, 9, 7), uint16], Tensor[(10, 9, 7), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32]) */
}

def @func_7321() -> (Tensor[(10, 9, 7), float32], Tensor[(2304), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_7319() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_6068() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %769 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %765 = @func_1396() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %766 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %767 = %765.0;
    %768 = %766.0;
    (%767, %768)
  };
  %769() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_4595(%var_4594: Tensor[(600), int32]) -> (Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(14, 11, 13), float64], float64, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %792 = fn (%var_4512: Tensor[(600), int32]) -> (Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(14, 11, 13), float64], float64, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %770 = @func_2924() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %771 = cast(%var_4512, dtype="int32") /* ty=Tensor[(600), int32] */;
    %772 = cast(%var_4512, dtype="int32") /* ty=Tensor[(600), int32] */;
    %773 = reshape(%771, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), int32] */;
    %774 = reshape(%772, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), int32] */;
    %775 = @func_3509(%773, %774) /* ty=(Tensor[(4, 10, 15), float64], Tensor[(4, 10, 15), uint8], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) */;
    %776 = @func_2729() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %777 = @func_1770() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %778 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
    %779 = cast(-4.17311f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %780 = reshape(%779, newshape=[]) /* ty=float64 */;
    %781 = @func_2899(%780) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(143, 14), float64], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64) */;
    %782 = @func_1235() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %783 = @func_2263() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %784 = %770.1;
    %785 = %775.3;
    %786 = %776.0;
    %787 = %777.0;
    %788 = %778.1;
    %789 = %781.6;
    %790 = %782.0;
    %791 = %783.0;
    (%784, %785, %var_4512, %786, %787, %788, %789, -4.17311f64 /* ty=float64 */, %790, %791)
  };
  %792(%var_4594) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(14, 11, 13), float64], float64, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_7800() -> Tensor[(10, 9, 7), float64] {
  @func_7798() /* ty=Tensor[(10, 9, 7), float64] */
}

def @func_9003() -> Tensor[(10, 9, 7), float32] {
  @func_9001() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_5563() -> (Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) {
  %793 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %794 = %793.2;
  %795 = @func_3947() /* ty=Tensor[(10, 9, 7), float32] */;
  (%794, %795)
}

def @func_13621() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %796 = @func_11729() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %797 = @func_4792() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %798 = @func_5486() /* ty=Tensor[(10, 9, 7), float32] */;
  %799 = %796.1;
  %800 = %797.0;
  (%798, %799, %800)
}

def @func_16206() -> Tensor[(10, 9, 7), float32] {
  %801 = fn () -> Tensor[(10, 9, 7), float32] {
    @func_13807() /* ty=Tensor[(10, 9, 7), float32] */
  };
  %801() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_7230() -> Tensor[(10, 9, 7), float32] {
  %803 = fn () -> Tensor[(10, 9, 7), float32] {
    %802 = @func_4052() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %802.1
  };
  %803() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_9281() -> (Tensor[(192, 12), uint16],) {
  %804 = @func_6369() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(192, 12), uint16], float64, Tensor[(600), int32]) */;
  %805 = %804.3;
  (%805,)
}

def @func_3020() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %810 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %806 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %807 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %808 = %806.0;
    %809 = %807.0;
    (%808, %809)
  };
  %810() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_10588(%var_10586: Tensor[(600), int32], %var_10587: Tensor[(7, 260), float64]) -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(7, 260), bool], Tensor[(260), float64], Tensor[(225), float64], float64) {
  @func_10584(%var_10586, %var_10587) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(7, 260), bool], Tensor[(260), float64], Tensor[(225), float64], float64) */
}

def @func_7798() -> Tensor[(10, 9, 7), float64] {
  %811 = @func_5512() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %811.0
}

def @func_1817() -> (Tensor[(10, 9, 7), float32],) {
  %812 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %813 = %812.0;
  (%813,)
}

def @func_14439() -> float64 {
  @func_14437() /* ty=float64 */
}

def @func_10755() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %814 = @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */;
  %815 = @func_3947() /* ty=Tensor[(10, 9, 7), float32] */;
  %816 = %814.0;
  (%815, %816)
}

def @func_12049(%var_12020: Tensor[(15, 16, 3), uint16], %var_12021: Tensor[(15, 16, 3), uint16]) -> (Tensor[(15, 16, 3), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %817 = cast(%var_12021, dtype="uint16") /* ty=Tensor[(15, 16, 3), uint16] */;
  %818 = shape_of(%var_12020, dtype="int32") /* ty=Tensor[(3), int32] */;
  %819 = cast(%var_12020, dtype="uint16") /* ty=Tensor[(15, 16, 3), uint16] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %821 = @func_7354() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %822 = bitwise_xor(%819, %820) /* ty=Tensor[(15, 16, 3), uint16] */;
  %823 = %821.0;
  %824 = @func_3068() /* ty=Tensor[(10, 9, 7), float32] */;
  (%822, %823, %824)
}

def @func_7452(%var_7450: Tensor[(130, 1), float64], %var_7451: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(130, 1), float64], float64, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130, 2), float64], Tensor[(10, 9, 7), float64], Tensor[(1820), float64]) {
  %849 = fn (%var_7414: Tensor[(130, 1), float64], %var_7446: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(130, 1), float64], float64, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130, 2), float64], Tensor[(10, 9, 7), float64], Tensor[(1820), float64]) {
    %825 = @func_2785() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %826 = cast(%var_7414, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
    %827 = cast(4.96549f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %828 = reshape(%826, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %829 = reshape(%827, newshape=[]) /* ty=float64 */;
    %830 = @func_5858(%828, %829) /* ty=(Tensor[(10, 9, 7), float64], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(2304), uint16]) */;
    %831 = @func_5326() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %832 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
    %833 = cast(%var_7414, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
    %834 = cast(meta[relay.Constant][31] /* ty=Tensor[(130, 2), float64] */, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
    %835 = cast(4.96549f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %836 = reshape(%833, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %837 = reshape(%834, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %838 = reshape(%835, newshape=[]) /* ty=float64 */;
    %839 = @func_2254(%836, %837, %838) /* ty=(Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
    %840 = cast(%var_7446, dtype="float64") /* ty=Tensor[(1820), float64] */;
    %841 = reshape(%840, newshape=[1820]) /* ty=Tensor[(1820), float64] */;
    %842 = @func_4843(%841) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) */;
    %843 = %825.0;
    %844 = %830.0;
    %845 = %831.0;
    %846 = %832.0;
    %847 = %839.3;
    %848 = %842.0;
    (%843, %844, %var_7414, 4.96549f64 /* ty=float64 */, %845, %846, %847, meta[relay.Constant][31] /* ty=Tensor[(130, 2), float64] */, %848, %var_7446)
  };
  %849(%var_7450, %var_7451) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(130, 1), float64], float64, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130, 2), float64], Tensor[(10, 9, 7), float64], Tensor[(1820), float64]) */
}

def @func_5202() -> (Tensor[(10, 9, 7), float32],) {
  @func_5200() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_3400(%var_3399: Tensor[(1, 13, 13), float64]) -> (Tensor[(1, 13, 13), float64],) {
  %852 = fn (%var_3385: Tensor[(1, 13, 13), float64]) -> (Tensor[(1, 13, 13), float64],) {
    %850 = cast(%var_3385, dtype="float64") /* ty=Tensor[(1, 13, 13), float64] */;
    %851 = erf(%850) /* ty=Tensor[(1, 13, 13), float64] */;
    (%851,)
  };
  %852(%var_3399) /* ty=(Tensor[(1, 13, 13), float64],) */
}

def @func_14350(%var_14348: Tensor[(8, 2, 6), uint64], %var_14349: Tensor[(8, 2, 6), uint64]) -> (Tensor[(8, 2, 6), uint64], Tensor[(8, 2, 6), float32]) {
  @func_14346(%var_14348, %var_14349) /* ty=(Tensor[(8, 2, 6), uint64], Tensor[(8, 2, 6), float32]) */
}

def @func_11266() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %853 = @func_8059() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %854 = @func_8661() /* ty=Tensor[(10, 9, 7), float32] */;
  %855 = %853.0;
  (%854, %855)
}

def @func_4867() -> (Tensor[(10, 9, 7), float32],) {
  @func_4865() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_1681(%var_1657: Tensor[(2002), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) {
  %856 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %857 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %858 = cast(%var_1657, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %859 = reshape(%858, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %860 = @func_1274(%859) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %861 = %856.2;
  %862 = %857.0;
  %863 = %860.4;
  %864 = @func_777() /* ty=Tensor[(10, 9, 7), float32] */;
  (%861, %862, %863, %var_1657, %864)
}

def @func_6324() -> Tensor[(10, 9, 7), float32] {
  %866 = fn () -> Tensor[(10, 9, 7), float32] {
    %865 = @func_5512() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */;
    %865.1
  };
  %866() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_8161(%var_8160: Tensor[(260), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) {
  %877 = fn (%var_8121: Tensor[(260), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) {
    %867 = @func_7114() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(143, 14), float64]) */;
    %868 = @func_6067() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %869 = cast(meta[relay.Constant][32] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %870 = cast(%var_8121, dtype="float64") /* ty=Tensor[(260), float64] */;
    %871 = reshape(%869, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %872 = reshape(%870, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %873 = @func_1521(%871, %872) /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64]) */;
    %874 = %867.0;
    %875 = %868.0;
    %876 = %873.2;
    (%874, %875, %876, meta[relay.Constant][32] /* ty=Tensor[(130), float64] */, %var_8121)
  };
  %877(%var_8160) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) */
}

def @func_2254(%var_2245: Tensor[(130), float64], %var_2246: Tensor[(260), float64], %var_2249: float64) -> (Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) {
  %878 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 7, 13), float32] */, dtype="float32") /* ty=Tensor[(1, 7, 13), float32] */;
  %879 = cast(%var_2245, dtype="float64") /* ty=Tensor[(130), float64] */;
  %880 = cast(%var_2246, dtype="float64") /* ty=Tensor[(260), float64] */;
  %881 = reshape(%879, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
  %882 = reshape(%880, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
  %883 = @func_1297(%881, %882) /* ty=(Tensor[(10, 13, 2), bool],) */;
  %884 = cast(%var_2249, dtype="float64") /* ty=float64 */;
  %885 = cast(meta[relay.Constant][34] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %886 = reshape(%884, newshape=[]) /* ty=float64 */;
  %887 = reshape(%885, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), float64] */;
  %888 = sigmoid(%878) /* ty=Tensor[(1, 7, 13), float32] */;
  %889 = %883.0;
  %890 = @func_596(%886, %887) /* ty=Tensor[(14, 11, 13), float64] */;
  (%888, %889, %var_2245, %var_2246, %890, %var_2249, meta[relay.Constant][34] /* ty=Tensor[(2002), float64] */)
}

def @func_14024() -> (Tensor[(10, 9, 7), float64],) {
  @func_14022() /* ty=(Tensor[(10, 9, 7), float64],) */
}

def @func_12053(%var_12051: Tensor[(15, 16, 3), uint16], %var_12052: Tensor[(15, 16, 3), uint16]) -> (Tensor[(15, 16, 3), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_12049(%var_12051, %var_12052) /* ty=(Tensor[(15, 16, 3), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_11935(%var_11934: float32) -> (Tensor[(12, 1, 12), float32], float64, Tensor[(10, 9, 7), float32]) {
  %896 = fn (%var_11901: float32) -> (Tensor[(12, 1, 12), float32], float64, Tensor[(10, 9, 7), float32]) {
    %891 = cast(%var_11901, dtype="float32") /* ty=float32 */;
    %892 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 1, 12), float32] */, dtype="float32") /* ty=Tensor[(12, 1, 12), float32] */;
    %893 = floor_divide(%891, %892) /* ty=Tensor[(12, 1, 12), float32] */;
    %894 = @func_7918() /* ty=float64 */;
    %895 = @func_9547() /* ty=Tensor[(10, 9, 7), float32] */;
    (%893, %894, %895)
  };
  %896(%var_11934) /* ty=(Tensor[(12, 1, 12), float32], float64, Tensor[(10, 9, 7), float32]) */
}

def @func_11554() -> (Tensor[(10, 9, 7), float32],) {
  %898 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %897 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
    (%897,)
  };
  %898() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_9768() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %899 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
  %900 = @func_8414() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %901 = @func_8414() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %902 = %899.1;
  %903 = %900.0;
  %904 = %901.0;
  (%902, %903, %904)
}

def @func_3045() -> Tensor[(10, 9, 7), float32] {
  %906 = fn () -> Tensor[(10, 9, 7), float32] {
    %905 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %905.0
  };
  %906() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_13961() -> Tensor[(10, 9, 7), float32] {
  %907 = fn () -> Tensor[(10, 9, 7), float32] {
    @func_3044() /* ty=Tensor[(10, 9, 7), float32] */
  };
  %907() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_3947() -> Tensor[(10, 9, 7), float32] {
  %908 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %908.0
}

def @func_8346() -> (Tensor[(10, 9, 7), float32],) {
  @func_8344() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_5153() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %909 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %910 = @func_1071() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %911 = %909.0;
  %912 = %910.2;
  (%911, %912)
}

def @func_11887() -> (Tensor[(10, 9, 7), float32],) {
  %913 = @func_1770() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %914 = %913.0;
  (%914,)
}

def @func_8388(%var_8361: Tensor[(42, 4), float32]) -> (Tensor[(10, 9, 7), float32], float64, Tensor[(42, 4), float32], Tensor[(6, 4, 7), float64]) {
  %915 = @func_6057() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %916 = cast(-4.62009f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %917 = cast(%var_8361, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %918 = reshape(%916, newshape=[]) /* ty=float64 */;
  %919 = reshape(%917, newshape=[168]) /* ty=Tensor[(168), float32] */;
  %920 = @func_4175(%918, %919) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], float64, Tensor[(10, 9, 7), float32], Tensor[(25, 9), float32], float64, Tensor[(300), int64], Tensor[(10, 9, 7), float32], Tensor[(25, 9), float64], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */;
  %921 = %920.9;
  %922 = cast(%921, dtype="float64") /* ty=Tensor[(6, 4, 7), float64] */;
  %923 = %915.0;
  %924 = erf(%922) /* ty=Tensor[(6, 4, 7), float64] */;
  (%923, -4.62009f64 /* ty=float64 */, %var_8361, %924)
}

def @func_9770() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_9768() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_7540(%var_7539: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) {
  %934 = fn (%var_7494: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) {
    %925 = @func_1071() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %926 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %927 = cast(%var_7494, dtype="float64") /* ty=float64 */;
    %928 = cast(meta[relay.Constant][36] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
    %929 = reshape(%927, newshape=[]) /* ty=float64 */;
    %930 = reshape(%928, newshape=[14, 11, 13]) /* ty=Tensor[(14, 11, 13), float64] */;
    %931 = %925.2;
    %932 = %926.0;
    %933 = @func_596(%929, %930) /* ty=Tensor[(14, 11, 13), float64] */;
    (%931, %932, %933, %var_7494, meta[relay.Constant][36] /* ty=Tensor[(2002), float64] */)
  };
  %934(%var_7539) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */
}

def @func_14956() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_14954() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_8641() -> Tensor[(10, 9, 7), float32] {
  @func_8639() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_15378() -> Tensor[(10, 9, 7), float32] {
  @func_5298() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_15058() -> (Tensor[(10, 9, 7), float32],) {
  %936 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %935 = @func_2537() /* ty=Tensor[(10, 9, 7), float32] */;
    (%935,)
  };
  %936() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_2800() -> (Tensor[(10, 9, 7), float32],) {
  %937 = @func_1396() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %938 = %937.0;
  (%938,)
}

def @func_8912() -> Tensor[(225), float64] {
  %940 = fn () -> Tensor[(225), float64] {
    %939 = @func_7851() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64) */;
    %939.2
  };
  %940() /* ty=Tensor[(225), float64] */
}

def @func_15637() -> (Tensor[(225), float64],) {
  %942 = fn () -> (Tensor[(225), float64],) {
    %941 = @func_8911() /* ty=Tensor[(225), float64] */;
    (%941,)
  };
  %942() /* ty=(Tensor[(225), float64],) */
}

def @func_16307() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %947 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %943 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %944 = @func_1396() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %945 = %943.0;
    %946 = %944.0;
    (%945, %946)
  };
  %947() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_2051() -> (Tensor[(10, 9, 7), float32],) {
  %948 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %949 = %948.0;
  (%949,)
}

def @func_1235() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %950 = @func_994() /* ty=Tensor[(10, 9, 7), float32] */;
  %951 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  (%950, %951)
}

def @func_5395() -> Tensor[(10, 9, 7), float32] {
  %952 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %952.0
}

def @func_7919() -> float64 {
  %954 = fn () -> float64 {
    %953 = @func_6369() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(192, 12), uint16], float64, Tensor[(600), int32]) */;
    %953.4
  };
  %954() /* ty=float64 */
}

def @func_7319() -> (Tensor[(10, 9, 7), float32], Tensor[(2304), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %955 = @func_5716() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %956 = @func_4761() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16]) */;
  %957 = %956.2;
  %958 = cast(%957, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %959 = @func_2785() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %960 = %955.0;
  %961 = asinh(%958) /* ty=Tensor[(2304), float32] */;
  %962 = %959.0;
  %963 = @func_6740() /* ty=Tensor[(10, 9, 7), float32] */;
  %964 = @func_5765() /* ty=Tensor[(10, 9, 7), float32] */;
  %965 = @func_6323() /* ty=Tensor[(10, 9, 7), float32] */;
  (%960, %961, %962, %963, %964, %965)
}

def @func_12597(%var_12595: Tensor[(7, 2002), float64], %var_12596: Tensor[(1, 1820), float64]) -> (Tensor[(7, 2002), float64], Tensor[(10, 9, 7), float32], Tensor[(1, 1820), float64]) {
  %977 = fn (%var_12568: Tensor[(7, 2002), float64], %var_12591: Tensor[(1, 1820), float64]) -> (Tensor[(7, 2002), float64], Tensor[(10, 9, 7), float32], Tensor[(1, 1820), float64]) {
    %966 = @func_5028() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) */;
    %967 = %966.3;
    %968 = cast(%967, dtype="float64") /* ty=Tensor[(1, 2002), float64] */;
    %969 = cast(%var_12568, dtype="float64") /* ty=Tensor[(7, 2002), float64] */;
    %970 = floor_mod(%968, %969) /* ty=Tensor[(7, 2002), float64] */;
    %971 = cast(%970, dtype="float64") /* ty=Tensor[(7, 2002), float64] */;
    %972 = cast(%var_12591, dtype="float64") /* ty=Tensor[(1, 1820), float64] */;
    %973 = reshape(%972, newshape=[1820]) /* ty=Tensor[(1820), float64] */;
    %974 = @func_6866(%973) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %975 = log2(%971) /* ty=Tensor[(7, 2002), float64] */;
    %976 = %974.4;
    (%975, %976, %var_12591)
  };
  %977(%var_12595, %var_12596) /* ty=(Tensor[(7, 2002), float64], Tensor[(10, 9, 7), float32], Tensor[(1, 1820), float64]) */
}

def @func_1684(%var_1682: Tensor[(2002), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) {
  @func_1681(%var_1682) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */
}

def @func_16128() -> (Tensor[(192, 12), uint16],) {
  @func_16126() /* ty=(Tensor[(192, 12), uint16],) */
}

def @func_16505() -> Tensor[(10, 9, 7), float32] {
  %978 = @func_16306() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %978.1
}

def @func_14131(%var_14129: Tensor[(4, 6, 10), float64], %var_14130: Tensor[(600), int32]) -> (Tensor[(4, 6, 10), float64], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(1, 1820), float64], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64]) {
  %993 = fn (%var_14081: Tensor[(4, 6, 10), float64], %var_14091: Tensor[(600), int32]) -> (Tensor[(4, 6, 10), float64], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(1, 1820), float64], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64]) {
    %979 = cast(%var_14081, dtype="float64") /* ty=Tensor[(4, 6, 10), float64] */;
    %980 = cast(%var_14091, dtype="int32") /* ty=Tensor[(600), int32] */;
    %981 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 1820), float64] */, dtype="float64") /* ty=Tensor[(1, 1820), float64] */;
    %982 = reshape(%980, newshape=[600]) /* ty=Tensor[(600), int32] */;
    %983 = reshape(%981, newshape=[7, 260]) /* ty=Tensor[(7, 260), float64] */;
    %984 = @func_9102(%982, %983) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float32], Tensor[(7, 260), float64], Tensor[(10, 9, 7), float32], Tensor[(65, 4), float32], Tensor[(10, 9, 7), float64]) */;
    %985 = @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %986 = cast(meta[relay.Constant][38] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
    %987 = reshape(%986, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
    %988 = @func_1681(%987) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
    %989 = tan(%979) /* ty=Tensor[(4, 6, 10), float64] */;
    %990 = %984.7;
    %991 = %985.0;
    %992 = %988.2;
    (%989, %990, %var_14091, meta[relay.Constant][37] /* ty=Tensor[(1, 1820), float64] */, %991, %992, meta[relay.Constant][38] /* ty=Tensor[(2002), float64] */)
  };
  %993(%var_14129, %var_14130) /* ty=(Tensor[(4, 6, 10), float64], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(1, 1820), float64], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64]) */
}

def @func_2063() -> (Tensor[(10, 9, 7), float32],) {
  %996 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %994 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %995 = %994.0;
    (%995,)
  };
  %996() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_15851() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %997 = @func_14756() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %998 = @func_11887() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %999 = %997.1;
  %1000 = %998.0;
  (%999, %1000)
}

def @func_11646() -> Tensor[(10, 9, 7), float32] {
  %1002 = fn () -> Tensor[(10, 9, 7), float32] {
    %1001 = @func_2852() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1001.0
  };
  %1002() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_9428() -> (Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), bool]) {
  %1003 = @func_2712() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1004 = @func_7851() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64) */;
  %1005 = %1003.0;
  %1006 = cast(%1005, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
  %1007 = reshape(%1006, newshape=[10, 9, 7]) /* ty=Tensor[(10, 9, 7), float32] */;
  %1008 = @func_3807(%1007) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
  %1009 = %1004.3;
  %1010 = %1008.2;
  (%1005, %1009, %1010)
}

def @func_14954() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1011 = @func_13807() /* ty=Tensor[(10, 9, 7), float32] */;
  %1012 = @func_14610() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1011, %1012)
}

def @func_11454() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 5, 10), float32], Tensor[(10, 9, 7), float32]) {
  %1021 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 5, 10), float32], Tensor[(10, 9, 7), float32]) {
    %1013 = @func_7403() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2002), float64]) */;
    %1014 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %1015 = @func_7765() /* ty=(Tensor[(14, 5, 10), float64], Tensor[(14, 5, 10), float32]) */;
    %1016 = @func_8596() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %1017 = %1013.0;
    %1018 = %1014.3;
    %1019 = %1015.1;
    %1020 = %1016.2;
    (%1017, %1018, %1019, %1020)
  };
  %1021() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 5, 10), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_15978() -> (float64, Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) {
  %1022 = @func_7851() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64) */;
  %1023 = cast(meta[relay.Constant][39] /* ty=Tensor[(1820), float64] */, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %1024 = reshape(%1023, newshape=[1820]) /* ty=Tensor[(1820), float64] */;
  %1025 = @func_6866(%1024) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1026 = @func_14437() /* ty=float64 */;
  %1027 = %1022.1;
  %1028 = %1025.2;
  (%1026, %1027, %1028, meta[relay.Constant][39] /* ty=Tensor[(1820), float64] */)
}

def @func_11306(%var_11304: Tensor[(26, 5), float64], %var_11305: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(26, 5), float64], float64) {
  %1037 = fn (%var_11297: Tensor[(26, 5), float64], %var_11298: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(26, 5), float64], float64) {
    %1029 = @func_8414() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1030 = cast(%var_11297, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
    %1031 = cast(%var_11298, dtype="float64") /* ty=float64 */;
    %1032 = reshape(%1030, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %1033 = reshape(%1031, newshape=[]) /* ty=float64 */;
    %1034 = @func_5858(%1032, %1033) /* ty=(Tensor[(10, 9, 7), float64], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(2304), uint16]) */;
    %1035 = %1029.0;
    %1036 = %1034.0;
    (%1035, %1036, %var_11297, %var_11298)
  };
  %1037(%var_11304, %var_11305) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(26, 5), float64], float64) */
}

def @func_1524(%var_1522: Tensor[(130), float64], %var_1523: Tensor[(260), float64]) -> (Tensor[(10, 9, 7), bool], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64]) {
  %1046 = fn (%var_1517: Tensor[(130), float64], %var_1518: Tensor[(260), float64]) -> (Tensor[(10, 9, 7), bool], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64]) {
    %1038 = @func_1373() /* ty=(Tensor[(10, 9, 7), bool],) */;
    %1039 = cast(%var_1517, dtype="float64") /* ty=Tensor[(130), float64] */;
    %1040 = cast(%var_1518, dtype="float64") /* ty=Tensor[(260), float64] */;
    %1041 = reshape(%1039, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %1042 = reshape(%1040, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
    %1043 = @func_1297(%1041, %1042) /* ty=(Tensor[(10, 13, 2), bool],) */;
    %1044 = %1038.0;
    %1045 = %1043.0;
    (%1044, %1045, %var_1517, %var_1518)
  };
  %1046(%var_1522, %var_1523) /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64]) */
}

def @func_14529() -> (Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) {
  %1053 = fn () -> (Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) {
    %1047 = @func_5116() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float32], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(10, 9, 7), float32]) */;
    %1048 = @func_2959() /* ty=(Tensor[(10, 9, 7), float64],) */;
    %1049 = @func_12528() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float32], Tensor[(910, 2), float64]) */;
    %1050 = %1047.1;
    %1051 = %1048.0;
    %1052 = %1049.1;
    (%1050, %1051, %1052)
  };
  %1053() /* ty=(Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */
}

def @func_12674() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1057 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %1054 = @func_9844() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1055 = %1054.0;
    %1056 = @func_2537() /* ty=Tensor[(10, 9, 7), float32] */;
    (%1055, %1056)
  };
  %1057() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_4332() -> Tensor[(10, 9, 7), float32] {
  %1059 = fn () -> Tensor[(10, 9, 7), float32] {
    %1058 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1058.0
  };
  %1059() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_14702(%var_14701: Tensor[(600), int32]) -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64, Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(1820), float64]) {
  %1074 = fn (%var_14695: Tensor[(600), int32]) -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64, Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(1820), float64]) {
    %1060 = @func_2222() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float64]) */;
    %1061 = cast(meta[relay.Constant][40] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
    %1062 = cast(0.293378f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1063 = reshape(%1061, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float64] */;
    %1064 = reshape(%1062, newshape=[]) /* ty=float64 */;
    %1065 = @func_3903(%1063, %1064) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */;
    %1066 = cast(%var_14695, dtype="int32") /* ty=Tensor[(600), int32] */;
    %1067 = cast(meta[relay.Constant][41] /* ty=Tensor[(1820), float64] */, dtype="float64") /* ty=Tensor[(1820), float64] */;
    %1068 = reshape(%1066, newshape=[600]) /* ty=Tensor[(600), int32] */;
    %1069 = reshape(%1067, newshape=[7, 260]) /* ty=Tensor[(7, 260), float64] */;
    %1070 = @func_9102(%1068, %1069) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float32], Tensor[(7, 260), float64], Tensor[(10, 9, 7), float32], Tensor[(65, 4), float32], Tensor[(10, 9, 7), float64]) */;
    %1071 = %1060.0;
    %1072 = %1065.3;
    %1073 = %1070.2;
    (%1071, %1072, meta[relay.Constant][40] /* ty=Tensor[(225), float64] */, 0.293378f64 /* ty=float64 */, %1073, %var_14695, meta[relay.Constant][41] /* ty=Tensor[(1820), float64] */)
  };
  %1074(%var_14701) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64, Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(1820), float64]) */
}

def @func_15380() -> Tensor[(10, 9, 7), float32] {
  @func_15378() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_4492() -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) {
  @func_4490() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */
}

def @func_16968() -> (Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(225), float64], float64, Tensor[(10, 9, 7), float32]) {
  %1075 = @func_14923() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1076 = cast(meta[relay.Constant][42] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %1077 = cast(1.27009f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1078 = reshape(%1076, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float64] */;
  %1079 = reshape(%1077, newshape=[]) /* ty=float64 */;
  %1080 = @func_3903(%1078, %1079) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */;
  %1081 = @func_7354() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1082 = %1075.2;
  %1083 = %1080.2;
  %1084 = %1081.0;
  (%1082, %1083, meta[relay.Constant][42] /* ty=Tensor[(225), float64] */, 1.27009f64 /* ty=float64 */, %1084)
}

def @func_6959() -> Tensor[(10, 9, 7), float32] {
  @func_6957() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_11098() -> (Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(2304), uint16], Tensor[(14, 5, 10), float64]) {
  %1085 = @func_9821() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1086 = cast(meta[relay.Constant][43] /* ty=Tensor[(260), float64] */, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1087 = reshape(%1086, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1088 = @func_8159(%1087) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) */;
  %1089 = @func_4761() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16]) */;
  %1090 = @func_7765() /* ty=(Tensor[(14, 5, 10), float64], Tensor[(14, 5, 10), float32]) */;
  %1091 = %1085.0;
  %1092 = %1088.2;
  %1093 = %1089.2;
  %1094 = %1090.0;
  (%1091, %1092, meta[relay.Constant][43] /* ty=Tensor[(260), float64] */, %1093, %1094)
}

def @func_17070(%var_17069: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(168), float32], Tensor[(2002), float64], Tensor[(1, 825), uint64], Tensor[(1820), float64]) {
  %1107 = fn (%var_17058: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(168), float32], Tensor[(2002), float64], Tensor[(1, 825), uint64], Tensor[(1820), float64]) {
    %1095 = @func_16306() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %1096 = cast(meta[relay.Constant][44] /* ty=Tensor[(2002), float64] */, dtype="float64") /* ty=Tensor[(2002), float64] */;
    %1097 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 825), uint64] */, dtype="uint64") /* ty=Tensor[(1, 825), uint64] */;
    %1098 = cast(%var_17058, dtype="float64") /* ty=Tensor[(1820), float64] */;
    %1099 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 825), uint64] */, dtype="uint64") /* ty=Tensor[(1, 825), uint64] */;
    %1100 = reshape(%1096, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
    %1101 = reshape(%1097, newshape=[825]) /* ty=Tensor[(825), uint64] */;
    %1102 = reshape(%1098, newshape=[14, 130]) /* ty=Tensor[(14, 130), float64] */;
    %1103 = reshape(%1099, newshape=[825]) /* ty=Tensor[(825), uint64] */;
    %1104 = @func_15941(%1100, %1101, %1102, %1103) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 130), float64], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(825), bool], Tensor[(10, 9, 7), bool]) */;
    %1105 = %1095.0;
    %1106 = %1104.9;
    (%1105, %1106, meta[relay.Constant][44] /* ty=Tensor[(2002), float64] */, meta[relay.Constant][45] /* ty=Tensor[(1, 825), uint64] */, %var_17058)
  };
  %1107(%var_17069) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(168), float32], Tensor[(2002), float64], Tensor[(1, 825), uint64], Tensor[(1820), float64]) */
}

def @func_7726(%var_7689: Tensor[(260), float64], %var_7690: float64) -> (Tensor[(10, 9, 7), float32], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) {
  %1108 = @func_7354() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1109 = cast(meta[relay.Constant][46] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1110 = cast(%var_7689, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1111 = cast(%var_7690, dtype="float64") /* ty=float64 */;
  %1112 = reshape(%1109, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %1113 = reshape(%1110, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1114 = reshape(%1111, newshape=[]) /* ty=float64 */;
  %1115 = @func_2254(%1112, %1113, %1114) /* ty=(Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %1116 = @func_2959() /* ty=(Tensor[(10, 9, 7), float64],) */;
  %1117 = @func_2763() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1118 = %1108.1;
  %1119 = %1115.5;
  %1120 = %1116.0;
  %1121 = %1117.0;
  (%1118, %1119, meta[relay.Constant][46] /* ty=Tensor[(130), float64] */, %var_7689, %var_7690, %1120, %1121)
}

def @func_995() -> Tensor[(10, 9, 7), float32] {
  %1123 = fn () -> Tensor[(10, 9, 7), float32] {
    %1122 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1122.0
  };
  %1123() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_13429() -> (Tensor[(10, 9, 7), bool],) {
  %1124 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %1125 = %1124.0;
  (%1125,)
}

def @func_5235() -> (Tensor[(10, 9, 7), float32],) {
  %1128 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %1126 = @func_4264() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %1127 = %1126.0;
    (%1127,)
  };
  %1128() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_15812() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_15810() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_10158() -> Tensor[(10, 9, 7), float32] {
  %1129 = @func_2729() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1129.0
}

def @func_2493() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) {
  %1138 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) {
    %1130 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1131 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1132 = cast(3.48451f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1133 = reshape(%1132, newshape=[]) /* ty=float64 */;
    %1134 = @func_2432(%1133) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(130), float64], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 13, 2), bool], Tensor[(10, 9, 7), float32], Tensor[(65, 4), bool], Tensor[(65, 4), uint16], Tensor[(65, 4), float32], Tensor[(65, 4), float64], Tensor[(10, 9, 7), float32]) */;
    %1135 = %1130.0;
    %1136 = %1131.0;
    %1137 = %1134.6;
    (%1135, %1136, %1137, 3.48451f64 /* ty=float64 */)
  };
  %1138() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */
}

def @func_713() -> (Tensor[(10, 9, 7), float32],) {
  %1139 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %1140 = %1139.1;
  (%1140,)
}

def @func_12528() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float32], Tensor[(910, 2), float64]) {
  %1141 = @func_11359() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1142 = cast(meta[relay.Constant][47] /* ty=Tensor[(910, 2), float64] */, dtype="float64") /* ty=Tensor[(910, 2), float64] */;
  %1143 = reshape(%1142, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), float64] */;
  %1144 = @func_3237(%1143) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */;
  %1145 = @func_3044() /* ty=Tensor[(10, 9, 7), float32] */;
  %1146 = %1141.1;
  %1147 = %1144.1;
  (%1145, %1146, %1147, meta[relay.Constant][47] /* ty=Tensor[(910, 2), float64] */)
}

def @func_2787() -> (Tensor[(10, 9, 7), float32],) {
  @func_2785() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_5030() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) {
  @func_5028() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) */
}

def @func_637() -> (Tensor[(10, 9, 7), float32],) {
  %1149 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %1148 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
    (%1148,)
  };
  %1149() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_1373() -> (Tensor[(10, 9, 7), bool],) {
  %1150 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %1151 = %1150.0;
  (%1151,)
}

def @func_2223() -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float64]) {
  %1158 = fn () -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float64]) {
    %1152 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %1153 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %1154 = %1153.1;
    %1155 = cast(%1154, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
    %1156 = %1152.2;
    %1157 = acosh(%1155) /* ty=Tensor[(10, 9, 7), float64] */;
    (%1156, %1157)
  };
  %1158() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float64]) */
}

def @func_1072() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1164 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %1159 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1160 = @func_359() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1161 = %1159.0;
    %1162 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
    %1163 = %1160.0;
    (%1161, %1162, %1163)
  };
  %1164() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_6026(%var_5992: Tensor[(300), int64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 5, 15), int64], Tensor[(300), int64], Tensor[(10, 9, 7), float32]) {
  %1165 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %1166 = @func_2852() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1167 = @func_2852() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1168 = cast(%var_5992, dtype="int64") /* ty=Tensor[(300), int64] */;
  %1169 = cast(%var_5992, dtype="int64") /* ty=Tensor[(300), int64] */;
  %1170 = reshape(%1168, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), int64] */;
  %1171 = reshape(%1169, newshape=[4, 5, 15]) /* ty=Tensor[(4, 5, 15), int64] */;
  %1172 = @func_3580(%1170, %1171) /* ty=(Tensor[(4, 5, 15), int64], Tensor[(10, 13, 2), bool], float64, Tensor[(4, 5, 15), float64]) */;
  %1173 = @func_4052() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1174 = %1165.1;
  %1175 = %1166.0;
  %1176 = %1167.0;
  %1177 = %1172.0;
  %1178 = %1173.1;
  (%1174, %1175, %1176, %1177, %var_5992, %1178)
}

def @func_10883(%var_10859: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float32]) {
  %1179 = @func_7626() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1180 = @func_9768() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1181 = @func_5326() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1182 = @func_4052() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1183 = cast(%var_10859, dtype="float64") /* ty=float64 */;
  %1184 = reshape(%1183, newshape=[]) /* ty=float64 */;
  %1185 = @func_7538(%1184) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %1186 = @func_8822() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1187 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
  %1188 = %1179.1;
  %1189 = %1180.1;
  %1190 = %1181.0;
  %1191 = %1182.2;
  %1192 = %1185.0;
  %1193 = @func_7066() /* ty=Tensor[(10, 9, 7), float64] */;
  %1194 = %1186.0;
  %1195 = %1187.3;
  %1196 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1188, %1189, %1190, %1191, %1192, %var_10859, %1193, %1194, %1195, %1196)
}

def @func_15613() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_15611() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_3697(%var_3696: Tensor[(14, 130), float64]) -> (Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(14, 130), float64]) {
  %1203 = fn (%var_3693: Tensor[(14, 130), float64]) -> (Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(14, 130), float64]) {
    %1197 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %1198 = cast(%var_3693, dtype="float64") /* ty=Tensor[(14, 130), float64] */;
    %1199 = reshape(%1198, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), float64] */;
    %1200 = @func_3237(%1199) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */;
    %1201 = %1197.1;
    %1202 = %1200.0;
    (%1201, %1202, %var_3693)
  };
  %1203(%var_3696) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(14, 130), float64]) */
}

def @func_8597() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1208 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %1204 = @func_2924() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %1205 = %1204.1;
    %1206 = @func_6323() /* ty=Tensor[(10, 9, 7), float32] */;
    %1207 = @func_7229() /* ty=Tensor[(10, 9, 7), float32] */;
    (%1205, %1206, %1207)
  };
  %1208() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_13589() -> (Tensor[(10, 9, 7), float32],) {
  %1209 = @func_11266() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1210 = %1209.1;
  (%1210,)
}

def @func_9998(%var_9996: Tensor[(77, 4), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(77, 4), float64], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32], Tensor[(10, 9, 7), float32]) {
  @func_9995(%var_9996) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(77, 4), float64], Tensor[(7, 11, 4), float64], Tensor[(7, 11, 4), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_12964() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1214 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %1211 = @func_5643() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64]) */;
    %1212 = @func_5395() /* ty=Tensor[(10, 9, 7), float32] */;
    %1213 = %1211.3;
    (%1212, %1213)
  };
  %1214() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_10217(%var_10216: Tensor[(130), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 1), float32], float32, float64, Tensor[(130), float64]) {
  %1226 = fn (%var_10209: Tensor[(130), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 1), float32], float32, float64, Tensor[(130), float64]) {
    %1215 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %1216 = cast(0.664507f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1217 = reshape(%1216, newshape=[]) /* ty=float32 */;
    %1218 = cast(%var_10209, dtype="float64") /* ty=Tensor[(130), float64] */;
    %1219 = cast(0.664507f /* ty=float32 */, dtype="float64") /* ty=float64 */;
    %1220 = reshape(%1218, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %1221 = reshape(%1219, newshape=[]) /* ty=float64 */;
    %1222 = @func_5858(%1220, %1221) /* ty=(Tensor[(10, 9, 7), float64], float64, Tensor[(130), float64], Tensor[(260), float64], float64, Tensor[(2304), uint16]) */;
    %1223 = %1215.1;
    %1224 = @func_8445(%1217) /* ty=Tensor[(10, 9, 1), float32] */;
    %1225 = %1222.1;
    (%1223, %1224, 0.664507f /* ty=float32 */, %1225, %var_10209)
  };
  %1226(%var_10216) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 1), float32], float32, float64, Tensor[(130), float64]) */
}

def @func_8517() -> (Tensor[(10, 9, 7), float32], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) {
  @func_8515() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_1499() -> (Tensor[(10, 9, 7), float32],) {
  %1227 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1228 = %1227.0;
  (%1228,)
}

def @func_16772(%var_16771: Tensor[(260), float64]) -> (float64, Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32]) {
  %1240 = fn (%var_16738: Tensor[(260), float64]) -> (float64, Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32]) {
    %1229 = cast(meta[relay.Constant][48] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %1230 = cast(%var_16738, dtype="float64") /* ty=Tensor[(260), float64] */;
    %1231 = reshape(%1229, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %1232 = reshape(%1230, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
    %1233 = @func_1297(%1231, %1232) /* ty=(Tensor[(10, 13, 2), bool],) */;
    %1234 = @func_11485() /* ty=float64 */;
    %1235 = cast(%1234, dtype="float64") /* ty=float64 */;
    %1236 = reshape(%1235, newshape=[]) /* ty=float64 */;
    %1237 = @func_7538(%1236) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
    %1238 = %1233.0;
    %1239 = %1237.1;
    (%1234, %1238, meta[relay.Constant][48] /* ty=Tensor[(130), float64] */, %var_16738, %1239)
  };
  %1240(%var_16771) /* ty=(float64, Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32]) */
}

def @func_11867() -> (Tensor[(10, 9, 7), float32],) {
  %1241 = @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1242 = %1241.0;
  (%1242,)
}

def @func_10142() -> (Tensor[(168), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) {
  @func_10140() /* ty=(Tensor[(168), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */
}

def @func_13344() -> (Tensor[(10, 9, 7), float32], Tensor[(14, 5, 10), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_13342() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(14, 5, 10), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_5299() -> Tensor[(10, 9, 7), float32] {
  %1244 = fn () -> Tensor[(10, 9, 7), float32] {
    %1243 = @func_4761() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16]) */;
    %1243.1
  };
  %1244() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_11517() -> (Tensor[(10, 9, 7), float32],) {
  @func_11515() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_4304() -> (Tensor[(10, 9, 7), float32],) {
  @func_4302() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_1237() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_1235() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_9845() -> (Tensor[(10, 9, 7), float32],) {
  %1247 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %1245 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1246 = %1245.0;
    (%1246,)
  };
  %1247() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_1397() -> (Tensor[(10, 9, 7), float32],) {
  %1249 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %1248 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
    (%1248,)
  };
  %1249() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_5410() -> Tensor[(10, 9, 7), float32] {
  @func_5408() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_15947(%var_15943: Tensor[(2002), float64], %var_15944: Tensor[(825), uint64], %var_15945: Tensor[(14, 130), float64], %var_15946: Tensor[(825), uint64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 130), float64], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(825), bool], Tensor[(10, 9, 7), bool]) {
  @func_15941(%var_15943, %var_15944, %var_15945, %var_15946) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 130), float64], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(825), bool], Tensor[(10, 9, 7), bool]) */
}

def @func_3069() -> Tensor[(10, 9, 7), float32] {
  %1253 = fn () -> Tensor[(10, 9, 7), float32] {
    %1250 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1251 = %1250.0;
    %1252 = cast(%1251, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
    sin(%1252) /* ty=Tensor[(10, 9, 7), float32] */
  };
  %1253() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_3636() -> (Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) {
  @func_3634() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */
}

def @func_3289() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_3287() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_4490() -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) {
  %1254 = @func_994() /* ty=Tensor[(10, 9, 7), float32] */;
  %1255 = cast(%1254, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
  %1256 = cast(%1254, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
  %1257 = atanh(%1255) /* ty=Tensor[(10, 9, 7), float64] */;
  %1258 = asinh(%1256) /* ty=Tensor[(10, 9, 7), float32] */;
  (%1257, %1258)
}

def @func_11486() -> float64 {
  %1260 = fn () -> float64 {
    %1259 = @func_9428() /* ty=(Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), bool]) */;
    %1259.1
  };
  %1260() /* ty=float64 */
}

def @func_10407() -> Tensor[(10, 9, 7), bool] {
  %1262 = fn () -> Tensor[(10, 9, 7), bool] {
    %1261 = @func_3634() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
    %1261.0
  };
  %1262() /* ty=Tensor[(10, 9, 7), bool] */
}

def @func_7765() -> (Tensor[(14, 5, 10), float64], Tensor[(14, 5, 10), float32]) {
  %1263 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 5, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 5, 10), float64] */;
  %1264 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 5, 10), float64] */, dtype="float32") /* ty=Tensor[(14, 5, 10), float32] */;
  %1265 = atan(%1263) /* ty=Tensor[(14, 5, 10), float64] */;
  %1266 = acos(%1264) /* ty=Tensor[(14, 5, 10), float32] */;
  (%1265, %1266)
}

def @func_5118() -> (Tensor[(10, 9, 7), float64], Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float32], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(10, 9, 7), float32]) {
  @func_5116() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float32], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(10, 9, 7), float32]) */
}

def @func_6029(%var_6027: Tensor[(300), int64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 5, 15), int64], Tensor[(300), int64], Tensor[(10, 9, 7), float32]) {
  @func_6026(%var_6027) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 5, 15), int64], Tensor[(300), int64], Tensor[(10, 9, 7), float32]) */
}

def @func_13244() -> Tensor[(10, 9, 7), float32] {
  %1267 = @func_11887() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1267.0
}

def @func_2434(%var_2433: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(130), float64], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 13, 2), bool], Tensor[(10, 9, 7), float32], Tensor[(65, 4), bool], Tensor[(65, 4), uint16], Tensor[(65, 4), float32], Tensor[(65, 4), float64], Tensor[(10, 9, 7), float32]) {
  %1319 = fn (%var_2303: float64) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(130), float64], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 13, 2), bool], Tensor[(10, 9, 7), float32], Tensor[(65, 4), bool], Tensor[(65, 4), uint16], Tensor[(65, 4), float32], Tensor[(65, 4), float64], Tensor[(10, 9, 7), float32]) {
    %1268 = @func_1499() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1269 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
    %1270 = cast(meta[relay.Constant][50] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %1271 = cast(meta[relay.Constant][51] /* ty=Tensor[(65, 4), float64] */, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
    %1272 = cast(%var_2303, dtype="float64") /* ty=float64 */;
    %1273 = reshape(%1270, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %1274 = reshape(%1271, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %1275 = reshape(%1272, newshape=[]) /* ty=float64 */;
    %1276 = @func_2254(%1273, %1274, %1275) /* ty=(Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
    %1277 = cast(meta[relay.Constant][52] /* ty=Tensor[(2304), uint16] */, dtype="uint16") /* ty=Tensor[(2304), uint16] */;
    %1278 = cast(meta[relay.Constant][52] /* ty=Tensor[(2304), uint16] */, dtype="uint16") /* ty=Tensor[(2304), uint16] */;
    %1279 = reshape(%1277, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
    %1280 = reshape(%1278, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
    %1281 = @func_971(%1279, %1280) /* ty=(Tensor[(12, 12, 16), uint16], Tensor[(12, 12, 16), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %1282 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1283 = @func_1817() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1284 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %1285 = cast(meta[relay.Constant][50] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %1286 = cast(meta[relay.Constant][51] /* ty=Tensor[(65, 4), float64] */, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
    %1287 = cosh(%1286) /* ty=Tensor[(65, 4), float64] */;
    %1288 = cast(%1287, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
    %1289 = reshape(%1285, newshape=[10, 13, 1]) /* ty=Tensor[(10, 13, 1), float64] */;
    %1290 = reshape(%1288, newshape=[10, 13, 2]) /* ty=Tensor[(10, 13, 2), float64] */;
    %1291 = @func_1297(%1289, %1290) /* ty=(Tensor[(10, 13, 2), bool],) */;
    %1292 = @func_1499() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1293 = cast(%1287, dtype="bool") /* ty=Tensor[(65, 4), bool] */;
    %1294 = cast(%var_2303, dtype="bool") /* ty=bool */;
    %1295 = cast(%1287, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
    %1296 = sin(%1295) /* ty=Tensor[(65, 4), float32] */;
    %1297 = cast(%1287, dtype="uint16") /* ty=Tensor[(65, 4), uint16] */;
    %1298 = shape_of(%1296, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1299 = cast(%1296, dtype="uint16") /* ty=Tensor[(65, 4), uint16] */;
    %1300 = dyn.reshape(%1297, %1298, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %1301 = cast(%1287, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
    %1302 = cast(%1296, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
    %1303 = @func_1396() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1304 = %1268.0;
    %1305 = %1269.1;
    %1306 = %1276.0;
    %1307 = %1281.3;
    %1308 = %1282.0;
    %1309 = %1283.0;
    %1310 = %1284.2;
    %1311 = @func_994() /* ty=Tensor[(10, 9, 7), float32] */;
    %1312 = %1291.0;
    %1313 = %1292.0;
    %1314 = equal(%1293, %1294) /* ty=Tensor[(65, 4), bool] */;
    %1315 = bitwise_and(%1299, %1300) /* ty=Tensor[(65, 4), uint16] */;
    %1316 = acos(%1301) /* ty=Tensor[(65, 4), float32] */;
    %1317 = tan(%1302) /* ty=Tensor[(65, 4), float64] */;
    %1318 = %1303.0;
    (%1304, %1305, %1306, meta[relay.Constant][50] /* ty=Tensor[(130), float64] */, %1307, meta[relay.Constant][52] /* ty=Tensor[(2304), uint16] */, %1308, %1309, %1310, %1311, %1312, %1313, %1314, %1315, %1316, %1317, %1318)
  };
  %1319(%var_2433) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(130), float64], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 13, 2), bool], Tensor[(10, 9, 7), float32], Tensor[(65, 4), bool], Tensor[(65, 4), uint16], Tensor[(65, 4), float32], Tensor[(65, 4), float64], Tensor[(10, 9, 7), float32]) */
}

def @func_7114() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(143, 14), float64]) {
  %1320 = cast(meta[relay.Constant][53] /* ty=Tensor[(143, 14), float64] */, dtype="float64") /* ty=Tensor[(143, 14), float64] */;
  %1321 = reshape(%1320, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %1322 = @func_1681(%1321) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
  %1323 = @func_5765() /* ty=Tensor[(10, 9, 7), float32] */;
  %1324 = %1322.1;
  (%1323, %1324, meta[relay.Constant][53] /* ty=Tensor[(143, 14), float64] */)
}

def @func_6957() -> Tensor[(10, 9, 7), float32] {
  %1325 = @func_1071() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1325.0
}

def @func_6507() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1332 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %1326 = @func_6057() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1327 = %1326.0;
    %1328 = cast(%1327, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
    %1329 = reshape(%1328, newshape=[10, 9, 7]) /* ty=Tensor[(10, 9, 7), float32] */;
    %1330 = @func_3807(%1329) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
    %1331 = %1330.1;
    (%1327, %1331)
  };
  %1332() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_6371() -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(192, 12), uint16], float64, Tensor[(600), int32]) {
  @func_6369() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(192, 12), uint16], float64, Tensor[(600), int32]) */
}

def @func_9180() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(300), int64]) {
  %1339 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(300), int64]) {
    %1333 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1334 = cast(meta[relay.Constant][54] /* ty=Tensor[(300), int64] */, dtype="int64") /* ty=Tensor[(300), int64] */;
    %1335 = reshape(%1334, newshape=[300]) /* ty=Tensor[(300), int64] */;
    %1336 = @func_6026(%1335) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 5, 15), int64], Tensor[(300), int64], Tensor[(10, 9, 7), float32]) */;
    %1337 = %1333.0;
    %1338 = %1336.1;
    (%1337, %1338, meta[relay.Constant][54] /* ty=Tensor[(300), int64] */)
  };
  %1339() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(300), int64]) */
}

def @func_16012() -> (Tensor[(225), float64],) {
  %1341 = fn () -> (Tensor[(225), float64],) {
    %1340 = @func_8911() /* ty=Tensor[(225), float64] */;
    (%1340,)
  };
  %1341() /* ty=(Tensor[(225), float64],) */
}

def @func_11869() -> (Tensor[(10, 9, 7), float32],) {
  @func_11867() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_715() -> (Tensor[(10, 9, 7), float32],) {
  @func_713() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_11592(%var_11575: Tensor[(225), float64]) -> (Tensor[(225), bool],) {
  %1342 = @func_8911() /* ty=Tensor[(225), float64] */;
  %1343 = cast(%var_11575, dtype="bool") /* ty=Tensor[(225), bool] */;
  %1344 = shape_of(%1342, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1345 = cast(%1342, dtype="bool") /* ty=Tensor[(225), bool] */;
  %1346 = dyn.reshape(%1343, %1344, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1347 = equal(%1345, %1346) /* ty=Tensor[(225), bool] */;
  (%1347,)
}

def @func_12906(%var_12854: Tensor[(2002), float64], %var_12861: float32) -> (Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32], float32, Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1348 = @func_8414() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1349 = cast(%var_12854, dtype="float64") /* ty=Tensor[(2002), float64] */;
  %1350 = reshape(%1349, newshape=[2002]) /* ty=Tensor[(2002), float64] */;
  %1351 = @func_1681(%1350) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(2002), float64], Tensor[(10, 9, 7), float32]) */;
  %1352 = cast(%var_12861, dtype="float32") /* ty=float32 */;
  %1353 = reshape(%1352, newshape=[]) /* ty=float32 */;
  %1354 = @func_11933(%1353) /* ty=(Tensor[(12, 1, 12), float32], float64, Tensor[(10, 9, 7), float32]) */;
  %1355 = @func_8515() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */;
  %1356 = %1348.0;
  %1357 = %1351.2;
  %1358 = %1354.2;
  %1359 = %1355.3;
  %1360 = @func_9547() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1356, %1357, %var_12854, %1358, %var_12861, %1359, %1360)
}

def @func_16507() -> Tensor[(10, 9, 7), float32] {
  @func_16505() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_10283(%var_10280: uint64, %var_10281: Tensor[(5, 11, 15), uint64], %var_10282: Tensor[(5, 45), float64]) -> (Tensor[(5, 11, 15), bool], Tensor[(5, 11, 15), float32], Tensor[(192, 12), uint16], Tensor[(1, 7, 13), float32], Tensor[(5, 45), float64], Tensor[(10, 9, 7), float64], Tensor[(6, 4, 7), bool]) {
  @func_10278(%var_10280, %var_10281, %var_10282) /* ty=(Tensor[(5, 11, 15), bool], Tensor[(5, 11, 15), float32], Tensor[(192, 12), uint16], Tensor[(1, 7, 13), float32], Tensor[(5, 45), float64], Tensor[(10, 9, 7), float64], Tensor[(6, 4, 7), bool]) */
}

def @func_13892() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1365 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %1361 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1362 = @func_10230() /* ty=Tensor[(10, 9, 7), float32] */;
    %1363 = @func_6323() /* ty=Tensor[(10, 9, 7), float32] */;
    %1364 = %1361.0;
    (%1362, %1363, %1364)
  };
  %1365() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_4352() -> Tensor[(10, 9, 7), float32] {
  @func_4350() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_5379(%var_5378: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float32], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1376 = fn (%var_5341: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float32], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %1366 = @func_4865() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1367 = cast(%var_5341, dtype="float64") /* ty=Tensor[(1820), float64] */;
    %1368 = reshape(%1367, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), float64] */;
    %1369 = @func_3237(%1368) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */;
    %1370 = @func_5234() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1371 = %1366.0;
    %1372 = @func_1881() /* ty=Tensor[(10, 9, 7), float32] */;
    %1373 = %1369.1;
    %1374 = %1370.0;
    %1375 = @func_777() /* ty=Tensor[(10, 9, 7), float32] */;
    (%1371, %1372, %1373, %var_5341, %1374, %1375)
  };
  %1376(%var_5378) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float32], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_13101() -> (Tensor[(10, 9, 7), float32], Tensor[(11, 6, 7), float64]) {
  @func_13099() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(11, 6, 7), float64]) */
}

def @func_17157() -> (float64, Tensor[(10, 9, 7), float32]) {
  %1381 = fn () -> (float64, Tensor[(10, 9, 7), float32]) {
    %1377 = @func_14823() /* ty=(float64,) */;
    %1378 = @func_5116() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float32], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(10, 9, 7), float32]) */;
    %1379 = %1377.0;
    %1380 = %1378.2;
    (%1379, %1380)
  };
  %1381() /* ty=(float64, Tensor[(10, 9, 7), float32]) */
}

def @func_4762() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16]) {
  %1390 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16]) {
    %1382 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1383 = cast(meta[relay.Constant][55] /* ty=Tensor[(2304), uint16] */, dtype="uint16") /* ty=Tensor[(2304), uint16] */;
    %1384 = cast(meta[relay.Constant][55] /* ty=Tensor[(2304), uint16] */, dtype="uint16") /* ty=Tensor[(2304), uint16] */;
    %1385 = reshape(%1383, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
    %1386 = reshape(%1384, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), uint16] */;
    %1387 = @func_971(%1385, %1386) /* ty=(Tensor[(12, 12, 16), uint16], Tensor[(12, 12, 16), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %1388 = %1382.0;
    %1389 = %1387.2;
    (%1388, %1389, meta[relay.Constant][55] /* ty=Tensor[(2304), uint16] */)
  };
  %1390() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16]) */
}

def @func_11776() -> (Tensor[(10, 9, 7), float32],) {
  %1393 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %1391 = @func_8822() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1392 = %1391.0;
    (%1392,)
  };
  %1393() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_3949() -> Tensor[(10, 9, 7), float32] {
  @func_3947() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_8663() -> Tensor[(10, 9, 7), float32] {
  @func_8661() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_4179(%var_4177: float64, %var_4178: Tensor[(168), float32]) -> (Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], float64, Tensor[(10, 9, 7), float32], Tensor[(25, 9), float32], float64, Tensor[(300), int64], Tensor[(10, 9, 7), float32], Tensor[(25, 9), float64], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) {
  @func_4175(%var_4177, %var_4178) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], float64, Tensor[(10, 9, 7), float32], Tensor[(25, 9), float32], float64, Tensor[(300), int64], Tensor[(10, 9, 7), float32], Tensor[(25, 9), float64], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_2714() -> (Tensor[(10, 9, 7), float32],) {
  @func_2712() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_14346(%var_14337: Tensor[(8, 2, 6), uint64], %var_14338: Tensor[(8, 2, 6), uint64]) -> (Tensor[(8, 2, 6), uint64], Tensor[(8, 2, 6), float32]) {
  %1394 = cast(%var_14338, dtype="uint64") /* ty=Tensor[(8, 2, 6), uint64] */;
  %1395 = shape_of(%var_14337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1396 = cast(%var_14337, dtype="uint64") /* ty=Tensor[(8, 2, 6), uint64] */;
  %1397 = dyn.reshape(%1394, %1395, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1398 = cast(%var_14338, dtype="float32") /* ty=Tensor[(8, 2, 6), float32] */;
  %1399 = shape_of(%var_14337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1400 = cast(%var_14337, dtype="float32") /* ty=Tensor[(8, 2, 6), float32] */;
  %1401 = dyn.reshape(%1398, %1399, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1402 = logical_xor(%1396, %1397) /* ty=Tensor[(8, 2, 6), uint64] */;
  %1403 = floor_mod(%1400, %1401) /* ty=Tensor[(8, 2, 6), float32] */;
  (%1402, %1403)
}

def @func_335() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) {
  %1412 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) {
    %1404 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %1405 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %1406 = @func_257() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %1407 = %1406.3;
    %1408 = cast(%1407, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
    %1409 = %1404.4;
    %1410 = %1405.2;
    %1411 = sqrt(%1408) /* ty=Tensor[(10, 9, 7), float64] */;
    (%1409, %1410, %1411)
  };
  %1412() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */
}

def @func_10278(%var_10238: uint64, %var_10239: Tensor[(5, 11, 15), uint64], %var_10254: Tensor[(5, 45), float64]) -> (Tensor[(5, 11, 15), bool], Tensor[(5, 11, 15), float32], Tensor[(192, 12), uint16], Tensor[(1, 7, 13), float32], Tensor[(5, 45), float64], Tensor[(10, 9, 7), float64], Tensor[(6, 4, 7), bool]) {
  %1413 = cast(%var_10238, dtype="bool") /* ty=bool */;
  %1414 = cast(%var_10239, dtype="bool") /* ty=Tensor[(5, 11, 15), bool] */;
  %1415 = cast(%var_10239, dtype="float32") /* ty=Tensor[(5, 11, 15), float32] */;
  %1416 = @func_9281() /* ty=(Tensor[(192, 12), uint16],) */;
  %1417 = cast(%var_10254, dtype="float64") /* ty=Tensor[(5, 45), float64] */;
  %1418 = cast(%var_10238, dtype="float64") /* ty=float64 */;
  %1419 = reshape(%1417, newshape=[5, 9, 5]) /* ty=Tensor[(5, 9, 5), float64] */;
  %1420 = reshape(%1418, newshape=[]) /* ty=float64 */;
  %1421 = @func_3903(%1419, %1420) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(10, 9, 7), float32], Tensor[(5, 9, 5), int32], Tensor[(1, 7, 13), float32], float64) */;
  %1422 = @func_5116() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float32], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(10, 9, 7), float32]) */;
  %1423 = @func_8515() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(6, 4, 7), bool], Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */;
  %1424 = less_equal(%1413, %1414) /* ty=Tensor[(5, 11, 15), bool] */;
  %1425 = asinh(%1415) /* ty=Tensor[(5, 11, 15), float32] */;
  %1426 = %1416.0;
  %1427 = %1421.5;
  %1428 = %1422.0;
  %1429 = %1423.1;
  (%1424, %1425, %1426, %1427, %var_10254, %1428, %1429)
}

def @func_7968(%var_7961: Tensor[(60, 10), int32]) -> (Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(60, 10), int32]) {
  %1430 = @func_6067() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1431 = cast(%var_7961, dtype="int32") /* ty=Tensor[(60, 10), int32] */;
  %1432 = cast(%var_7961, dtype="int32") /* ty=Tensor[(60, 10), int32] */;
  %1433 = reshape(%1431, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), int32] */;
  %1434 = reshape(%1432, newshape=[4, 10, 15]) /* ty=Tensor[(4, 10, 15), int32] */;
  %1435 = @func_3509(%1433, %1434) /* ty=(Tensor[(4, 10, 15), float64], Tensor[(4, 10, 15), uint8], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) */;
  %1436 = %1430.1;
  %1437 = %1435.1;
  (%1436, %1437, %var_7961)
}

def @func_6236() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_6234() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_2785() -> (Tensor[(10, 9, 7), float32],) {
  %1438 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1439 = %1438.0;
  (%1439,)
}

def @func_1358() -> (Tensor[(10, 9, 7), float32],) {
  %1440 = @func_577() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1441 = %1440.0;
  (%1441,)
}

def @func_9105(%var_9103: Tensor[(600), int32], %var_9104: Tensor[(7, 260), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float32], Tensor[(7, 260), float64], Tensor[(10, 9, 7), float32], Tensor[(65, 4), float32], Tensor[(10, 9, 7), float64]) {
  %1469 = fn (%var_9059: Tensor[(600), int32], %var_9076: Tensor[(7, 260), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float32], Tensor[(7, 260), float64], Tensor[(10, 9, 7), float32], Tensor[(65, 4), float32], Tensor[(10, 9, 7), float64]) {
    %1442 = @func_2852() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1443 = cast(meta[relay.Constant][56] /* ty=Tensor[(65, 4), float64] */, dtype="float64") /* ty=Tensor[(65, 4), float64] */;
    %1444 = reshape(%1443, newshape=[260]) /* ty=Tensor[(260), float64] */;
    %1445 = @func_8159(%1444) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(130), float64], Tensor[(260), float64]) */;
    %1446 = cast(%var_9059, dtype="int32") /* ty=Tensor[(600), int32] */;
    %1447 = reshape(%1446, newshape=[60, 10]) /* ty=Tensor[(60, 10), int32] */;
    %1448 = @func_7968(%1447) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(60, 10), int32]) */;
    %1449 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
    %1450 = cast(%var_9076, dtype="float64") /* ty=Tensor[(7, 260), float64] */;
    %1451 = reshape(%1450, newshape=[1820]) /* ty=Tensor[(1820), float64] */;
    %1452 = @func_4679(%1451) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(14, 13, 10), float32]) */;
    %1453 = @func_2492() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64) */;
    %1454 = cast(meta[relay.Constant][56] /* ty=Tensor[(65, 4), float64] */, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
    %1455 = log10(%1454) /* ty=Tensor[(65, 4), float32] */;
    %1456 = cast(meta[relay.Constant][56] /* ty=Tensor[(65, 4), float64] */, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
    %1457 = shape_of(%1455, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1458 = cast(%1455, dtype="float32") /* ty=Tensor[(65, 4), float32] */;
    %1459 = dyn.reshape(%1456, %1457, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %1460 = @func_8923() /* ty=(Tensor[(10, 9, 7), float64],) */;
    %1461 = %1442.0;
    %1462 = %1445.1;
    %1463 = %1448.1;
    %1464 = %1449.2;
    %1465 = %1452.5;
    %1466 = %1453.0;
    %1467 = power(%1458, %1459) /* ty=Tensor[(65, 4), float32] */;
    %1468 = %1460.0;
    (%1461, %1462, %1463, %var_9059, %1464, %1465, %var_9076, %1466, %1467, %1468)
  };
  %1469(%var_9103, %var_9104) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(4, 10, 15), uint8], Tensor[(600), int32], Tensor[(10, 9, 7), bool], Tensor[(14, 13, 10), float32], Tensor[(7, 260), float64], Tensor[(10, 9, 7), float32], Tensor[(65, 4), float32], Tensor[(10, 9, 7), float64]) */
}

def @func_5664(%var_5645: float64, %var_5646: Tensor[(11, 10, 8), float64]) -> (Tensor[(11, 10, 8), float64],) {
  %1470 = cast(%var_5645, dtype="float64") /* ty=float64 */;
  %1471 = cast(%var_5646, dtype="float64") /* ty=Tensor[(11, 10, 8), float64] */;
  %1472 = divide(%1470, %1471) /* ty=Tensor[(11, 10, 8), float64] */;
  (%1472,)
}

def @func_16395() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_16393() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_10160() -> Tensor[(10, 9, 7), float32] {
  @func_10158() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_5487() -> Tensor[(10, 9, 7), float32] {
  %1474 = fn () -> Tensor[(10, 9, 7), float32] {
    %1473 = @func_5234() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1473.0
  };
  %1474() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_360() -> (Tensor[(10, 9, 7), float32],) {
  %1476 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %1475 = @func_188() /* ty=Tensor[(10, 9, 7), float32] */;
    (%1475,)
  };
  %1476() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_14317() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_14315() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_14877(%var_14875: Tensor[(13, 5, 14), int8], %var_14876: Tensor[(13, 5, 14), int8]) -> (Tensor[(13, 5, 14), int8], Tensor[(10, 9, 7), float32]) {
  %1483 = fn (%var_14853: Tensor[(13, 5, 14), int8], %var_14854: Tensor[(13, 5, 14), int8]) -> (Tensor[(13, 5, 14), int8], Tensor[(10, 9, 7), float32]) {
    %1477 = cast(%var_14854, dtype="int8") /* ty=Tensor[(13, 5, 14), int8] */;
    %1478 = shape_of(%var_14853, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1479 = cast(%var_14853, dtype="int8") /* ty=Tensor[(13, 5, 14), int8] */;
    %1480 = dyn.reshape(%1477, %1478, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1481 = right_shift(%1479, %1480) /* ty=Tensor[(13, 5, 14), int8] */;
    %1482 = @func_6323() /* ty=Tensor[(10, 9, 7), float32] */;
    (%1481, %1482)
  };
  %1483(%var_14875, %var_14876) /* ty=(Tensor[(13, 5, 14), int8], Tensor[(10, 9, 7), float32]) */
}

def @func_14660() -> (Tensor[(10, 9, 7), float32],) {
  %1485 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %1484 = @func_10158() /* ty=Tensor[(10, 9, 7), float32] */;
    (%1484,)
  };
  %1485() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_17028(%var_16976: Tensor[(8, 6, 9), float32], %var_17002: Tensor[(8, 6, 9), float32]) -> (Tensor[(8, 6, 9), float32], Tensor[(8, 6, 9), float32], Tensor[(8, 6, 9), bool], Tensor[(10, 9, 7), float32]) {
  %1486 = cast(%var_16976, dtype="float32") /* ty=Tensor[(8, 6, 9), float32] */;
  %1487 = cast(%var_16976, dtype="float32") /* ty=Tensor[(8, 6, 9), float32] */;
  %1488 = cast(%var_17002, dtype="bool") /* ty=Tensor[(8, 6, 9), bool] */;
  %1489 = shape_of(%var_16976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1490 = cast(%var_16976, dtype="bool") /* ty=Tensor[(8, 6, 9), bool] */;
  %1491 = dyn.reshape(%1488, %1489, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1492 = @func_485() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %1493 = acosh(%1486) /* ty=Tensor[(8, 6, 9), float32] */;
  %1494 = cos(%1487) /* ty=Tensor[(8, 6, 9), float32] */;
  %1495 = greater_equal(%1490, %1491) /* ty=Tensor[(8, 6, 9), bool] */;
  %1496 = %1492.1;
  (%1493, %1494, %1495, %1496)
}

def @func_16393() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1497 = @func_15281() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1498 = %1497.1;
  %1499 = @func_6740() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1498, %1499)
}

def @func_15771() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1510 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %1500 = @func_14923() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %1501 = @func_5028() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64], Tensor[(1, 2002), float64]) */;
    %1502 = @func_4410() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */;
    %1503 = @func_13621() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %1504 = @func_14282() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1505 = %1500.2;
    %1506 = %1501.1;
    %1507 = %1502.2;
    %1508 = %1503.2;
    %1509 = %1504.0;
    (%1505, %1506, %1507, %1508, %1509)
  };
  %1510() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_9933() -> Tensor[(10, 9, 7), float32] {
  %1511 = @func_9768() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1511.2
}

def @func_13742() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(2002), float64], Tensor[(14, 13, 10), float32], Tensor[(182, 10), float64], Tensor[(10, 9, 7), bool]) {
  @func_13740() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(2002), float64], Tensor[(14, 13, 10), float32], Tensor[(182, 10), float64], Tensor[(10, 9, 7), bool]) */
}

def @func_13591() -> (Tensor[(10, 9, 7), float32],) {
  @func_13589() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_15175(%var_15174: Tensor[(825), uint64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], uint64, Tensor[(825), uint64], Tensor[(1, 225), float64]) {
  %1523 = fn (%var_15162: Tensor[(825), uint64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], uint64, Tensor[(825), uint64], Tensor[(1, 225), float64]) {
    %1512 = @func_8414() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1513 = cast(meta[relay.Constant][57] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1514 = cast(%var_15162, dtype="uint64") /* ty=Tensor[(825), uint64] */;
    %1515 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 225), float64] */, dtype="float64") /* ty=Tensor[(1, 225), float64] */;
    %1516 = reshape(%1513, newshape=[]) /* ty=uint64 */;
    %1517 = reshape(%1514, newshape=[5, 11, 15]) /* ty=Tensor[(5, 11, 15), uint64] */;
    %1518 = reshape(%1515, newshape=[5, 45]) /* ty=Tensor[(5, 45), float64] */;
    %1519 = @func_10278(%1516, %1517, %1518) /* ty=(Tensor[(5, 11, 15), bool], Tensor[(5, 11, 15), float32], Tensor[(192, 12), uint16], Tensor[(1, 7, 13), float32], Tensor[(5, 45), float64], Tensor[(10, 9, 7), float64], Tensor[(6, 4, 7), bool]) */;
    %1520 = %1512.0;
    %1521 = @func_3044() /* ty=Tensor[(10, 9, 7), float32] */;
    %1522 = %1519.3;
    (%1520, %1521, %1522, meta[relay.Constant][57] /* ty=uint64 */, %var_15162, meta[relay.Constant][58] /* ty=Tensor[(1, 225), float64] */)
  };
  %1523(%var_15174) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], uint64, Tensor[(825), uint64], Tensor[(1, 225), float64]) */
}

def @func_9507() -> (Tensor[(10, 9, 7), float32],) {
  %1524 = @func_1770() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1525 = %1524.0;
  (%1525,)
}

def @func_5909() -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1532 = fn () -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %1526 = @func_334() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %1527 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
    %1528 = @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1529 = %1526.2;
    %1530 = %1527.0;
    %1531 = %1528.0;
    (%1529, %1530, %1531)
  };
  %1532() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_4264() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1533 = @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1534 = @func_2062() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1535 = %1533.0;
  %1536 = %1534.0;
  (%1535, %1536)
}

def @func_12141() -> (Tensor[(11, 6, 7), float64],) {
  %1542 = fn () -> (Tensor[(11, 6, 7), float64],) {
    %1537 = cast(meta[relay.Constant][60] /* ty=Tensor[(11, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 7), float64] */;
    %1538 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(11, 6, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1539 = cast(meta[relay.Constant][59] /* ty=Tensor[(11, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 6, 7), float64] */;
    %1540 = dyn.reshape(%1537, %1538, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1541 = mod(%1539, %1540) /* ty=Tensor[(11, 6, 7), float64] */;
    (%1541,)
  };
  %1542() /* ty=(Tensor[(11, 6, 7), float64],) */
}

def @func_14924() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1548 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %1543 = @func_6067() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
    %1544 = @func_9888() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1545 = %1543.0;
    %1546 = @func_3947() /* ty=Tensor[(10, 9, 7), float32] */;
    %1547 = %1544.0;
    (%1545, %1546, %1547)
  };
  %1548() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_10042(%var_10040: int16, %var_10041: Tensor[(16, 15, 11), int16]) -> (Tensor[(16, 15, 11), int16],) {
  @func_10038(%var_10040, %var_10041) /* ty=(Tensor[(16, 15, 11), int16],) */
}

def @func_14249(%var_14247: int32, %var_14248: Tensor[(3, 1, 13), int32]) -> (Tensor[(3, 1, 13), int32], Tensor[(10, 9, 7), float32]) {
  @func_14245(%var_14247, %var_14248) /* ty=(Tensor[(3, 1, 13), int32], Tensor[(10, 9, 7), float32]) */
}

def @func_10634() -> float64 {
  %1550 = fn () -> float64 {
    %1549 = @func_7024() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130), float64], Tensor[(130, 2), float64], float64) */;
    %1549.4
  };
  %1550() /* ty=float64 */
}

def @func_5408() -> Tensor[(10, 9, 7), float32] {
  %1551 = @func_4346() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1551.0
}

def @func_1277(%var_1275: Tensor[(2002), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) {
  @func_1274(%var_1275) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */
}

def @func_2702() -> (Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) {
  @func_2700() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32]) */
}

def @func_16289() -> Tensor[(10, 9, 7), float32] {
  @func_16287() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_9350() -> (Tensor[(10, 9, 7), float32],) {
  %1552 = @func_1235() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1553 = %1552.1;
  (%1553,)
}

def @func_11731() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_11729() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_15518() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float32]) {
  @func_15516() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], float64, Tensor[(10, 9, 7), float32]) */
}

def @func_1819() -> (Tensor[(10, 9, 7), float32],) {
  @func_1817() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_4957(%var_4948: Tensor[(11, 1, 2), float64]) -> Tensor[(11, 1, 2), float64] {
  %1554 = cast(%var_4948, dtype="float64") /* ty=Tensor[(11, 1, 2), float64] */;
  cos(%1554) /* ty=Tensor[(11, 1, 2), float64] */
}

def @func_16442() -> Tensor[(10, 9, 7), float32] {
  %1555 = fn () -> Tensor[(10, 9, 7), float32] {
    @func_16287() /* ty=Tensor[(10, 9, 7), float32] */
  };
  %1555() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_4846(%var_4844: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) {
  @func_4843(%var_4844) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) */
}

def @func_6681() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64]) {
  @func_6679() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(600), int32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2002), float64]) */
}

def @func_13807() -> Tensor[(10, 9, 7), float32] {
  %1556 = @func_5563() /* ty=(Tensor[(10, 9, 7), bool], Tensor[(10, 9, 7), float32]) */;
  %1556.1
}

def @func_1883() -> Tensor[(10, 9, 7), float32] {
  @func_1881() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_3583(%var_3581: Tensor[(4, 5, 15), int64], %var_3582: Tensor[(4, 5, 15), int64]) -> (Tensor[(4, 5, 15), int64], Tensor[(10, 13, 2), bool], float64, Tensor[(4, 5, 15), float64]) {
  %1568 = fn (%var_3533: Tensor[(4, 5, 15), int64], %var_3534: Tensor[(4, 5, 15), int64]) -> (Tensor[(4, 5, 15), int64], Tensor[(10, 13, 2), bool], float64, Tensor[(4, 5, 15), float64]) {
    %1557 = cast(%var_3534, dtype="int64") /* ty=Tensor[(4, 5, 15), int64] */;
    %1558 = shape_of(%var_3533, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1559 = cast(%var_3533, dtype="int64") /* ty=Tensor[(4, 5, 15), int64] */;
    %1560 = dyn.reshape(%1557, %1558, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1561 = cast(6.58254f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1562 = reshape(%1561, newshape=[]) /* ty=float64 */;
    %1563 = @func_2432(%1562) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(1, 7, 13), float32], Tensor[(130), float64], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 13, 2), bool], Tensor[(10, 9, 7), float32], Tensor[(65, 4), bool], Tensor[(65, 4), uint16], Tensor[(65, 4), float32], Tensor[(65, 4), float64], Tensor[(10, 9, 7), float32]) */;
    %1564 = cast(%var_3533, dtype="float64") /* ty=Tensor[(4, 5, 15), float64] */;
    %1565 = logical_xor(%1559, %1560) /* ty=Tensor[(4, 5, 15), int64] */;
    %1566 = %1563.10;
    %1567 = erf(%1564) /* ty=Tensor[(4, 5, 15), float64] */;
    (%1565, %1566, 6.58254f64 /* ty=float64 */, %1567)
  };
  %1568(%var_3581, %var_3582) /* ty=(Tensor[(4, 5, 15), int64], Tensor[(10, 13, 2), bool], float64, Tensor[(4, 5, 15), float64]) */
}

def @func_10704() -> (Tensor[(10, 9, 7), float32],) {
  %1571 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %1569 = @func_2800() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1570 = %1569.0;
    (%1570,)
  };
  %1571() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_6869(%var_6867: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_6866(%var_6867) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_7116() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(143, 14), float64]) {
  @func_7114() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(143, 14), float64]) */
}

def @func_5513() -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) {
  %1575 = fn () -> (Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) {
    %1572 = @func_5116() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(16, 16, 7), int64], Tensor[(10, 9, 7), float32], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(16, 16, 7), float64], Tensor[(10, 9, 7), float32]) */;
    %1573 = %1572.0;
    %1574 = @func_777() /* ty=Tensor[(10, 9, 7), float32] */;
    (%1573, %1574)
  };
  %1575() /* ty=(Tensor[(10, 9, 7), float64], Tensor[(10, 9, 7), float32]) */
}

def @func_15282() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1580 = fn () -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
    %1576 = @func_9888() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1577 = @func_2763() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1578 = %1576.0;
    %1579 = %1577.0;
    (%1578, %1579)
  };
  %1580() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_7354() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1581 = @func_5200() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1582 = @func_2924() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %1583 = %1581.0;
  %1584 = %1582.1;
  (%1583, %1584)
}

def @func_2853() -> (Tensor[(10, 9, 7), float32],) {
  %1591 = fn () -> (Tensor[(10, 9, 7), float32],) {
    %1585 = @func_636() /* ty=(Tensor[(10, 9, 7), float32],) */;
    %1586 = %1585.0;
    %1587 = cast(%1586, dtype="float64") /* ty=Tensor[(10, 9, 7), float64] */;
    %1588 = asin(%1587) /* ty=Tensor[(10, 9, 7), float64] */;
    %1589 = cast(%1588, dtype="float32") /* ty=Tensor[(10, 9, 7), float32] */;
    %1590 = log(%1589) /* ty=Tensor[(10, 9, 7), float32] */;
    (%1590,)
  };
  %1591() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_12762() -> Tensor[(10, 9, 7), float32] {
  %1592 = @func_11453() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(14, 5, 10), float32], Tensor[(10, 9, 7), float32]) */;
  %1592.1
}

def @func_11230(%var_11229: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) {
  %1598 = fn (%var_11194: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) {
    %1593 = cast(%var_11194, dtype="float64") /* ty=Tensor[(1820), float64] */;
    %1594 = reshape(%1593, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), float64] */;
    %1595 = @func_3237(%1594) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */;
    %1596 = @func_6740() /* ty=Tensor[(10, 9, 7), float32] */;
    %1597 = %1595.0;
    (%1596, %1597, %var_11194)
  };
  %1598(%var_11229) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(14, 13, 10), float64], Tensor[(1820), float64]) */
}

def @func_9001() -> Tensor[(10, 9, 7), float32] {
  @func_3068() /* ty=Tensor[(10, 9, 7), float32] */
}

def @func_5155() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  @func_5153() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */
}

def @func_1375() -> (Tensor[(10, 9, 7), bool],) {
  @func_1373() /* ty=(Tensor[(10, 9, 7), bool],) */
}

def @func_11595(%var_11593: Tensor[(225), float64]) -> (Tensor[(225), bool],) {
  @func_11592(%var_11593) /* ty=(Tensor[(225), bool],) */
}

def @func_2053() -> (Tensor[(10, 9, 7), float32],) {
  @func_2051() /* ty=(Tensor[(10, 9, 7), float32],) */
}

def @func_4865() -> (Tensor[(10, 9, 7), float32],) {
  %1599 = @func_3019() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) */;
  %1600 = %1599.0;
  (%1600,)
}

def @func_11729() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1601 = @func_2785() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1602 = @func_8344() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1603 = @func_9001() /* ty=Tensor[(10, 9, 7), float32] */;
  %1604 = %1601.0;
  %1605 = %1602.0;
  (%1603, %1604, %1605)
}

def @func_12395(%var_12393: Tensor[(15, 4, 15), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(15, 4, 15), uint32]) {
  @func_12392(%var_12393) /* ty=(Tensor[(10, 9, 7), float32], Tensor[(15, 4, 15), uint32]) */
}

def @func_15431() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) {
  @func_15429() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), bool]) */
}

def @func_3372(%var_3365: Tensor[(7, 11, 4), float64], %var_3366: Tensor[(7, 11, 4), float64]) -> (Tensor[(7, 11, 4), float64], Tensor[(10, 9, 7), float32]) {
  %1606 = cast(%var_3366, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %1607 = shape_of(%var_3365, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1608 = cast(%var_3365, dtype="float64") /* ty=Tensor[(7, 11, 4), float64] */;
  %1609 = dyn.reshape(%1606, %1607, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1610 = @func_1358() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1611 = multiply(%1608, %1609) /* ty=Tensor[(7, 11, 4), float64] */;
  %1612 = %1610.0;
  (%1611, %1612)
}

def @func_11100() -> (Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(2304), uint16], Tensor[(14, 5, 10), float64]) {
  @func_11098() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(260), float64], Tensor[(2304), uint16], Tensor[(14, 5, 10), float64]) */
}

def @func_7024() -> (Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130), float64], Tensor[(130, 2), float64], float64) {
  %1613 = cast(meta[relay.Constant][61] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %1614 = cast(meta[relay.Constant][62] /* ty=Tensor[(130, 2), float64] */, dtype="float64") /* ty=Tensor[(130, 2), float64] */;
  %1615 = cast(-4.65325f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1616 = reshape(%1613, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %1617 = reshape(%1614, newshape=[260]) /* ty=Tensor[(260), float64] */;
  %1618 = reshape(%1615, newshape=[]) /* ty=float64 */;
  %1619 = @func_2254(%1616, %1617, %1618) /* ty=(Tensor[(1, 7, 13), float32], Tensor[(10, 13, 2), bool], Tensor[(130), float64], Tensor[(260), float64], Tensor[(14, 11, 13), float64], float64, Tensor[(2002), float64]) */;
  %1620 = @func_6957() /* ty=Tensor[(10, 9, 7), float32] */;
  %1621 = %1619.3;
  (%1620, %1621, meta[relay.Constant][61] /* ty=Tensor[(130), float64] */, meta[relay.Constant][62] /* ty=Tensor[(130, 2), float64] */, -4.65325f64 /* ty=float64 */)
}

def @func_11359() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1622 = @func_5200() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1623 = %1622.0;
  %1624 = @func_10230() /* ty=Tensor[(10, 9, 7), float32] */;
  (%1623, %1624)
}

def @func_6866(%var_6849: Tensor[(1820), float64]) -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(1820), float64], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32]) {
  %1625 = @func_4761() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(2304), uint16]) */;
  %1626 = @func_1609() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float64]) */;
  %1627 = cast(%var_6849, dtype="float64") /* ty=Tensor[(1820), float64] */;
  %1628 = reshape(%1627, newshape=[14, 130]) /* ty=Tensor[(14, 130), float64] */;
  %1629 = @func_3695(%1628) /* ty=(Tensor[(10, 9, 7), float64], Tensor[(14, 13, 10), float64], Tensor[(14, 130), float64]) */;
  %1630 = @func_5326() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1631 = %1625.0;
  %1632 = %1626.1;
  %1633 = %1629.1;
  %1634 = @func_4331() /* ty=Tensor[(10, 9, 7), float32] */;
  %1635 = %1630.0;
  (%1631, %1632, %1633, %var_6849, %1634, %1635)
}

def @func_8850() -> Tensor[(225), float64] {
  %1637 = fn () -> Tensor[(225), float64] {
    %1636 = @func_7851() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(225), float64], float64) */;
    %1636.2
  };
  %1637() /* ty=Tensor[(225), float64] */
}

def @func_13740() -> (Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(10, 9, 7), float32], Tensor[(130), float64], Tensor[(2002), float64], Tensor[(14, 13, 10), float32], Tensor[(182, 10), float64], Tensor[(10, 9, 7), bool]) {
  %1638 = @func_6057() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1639 = @func_13099() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(11, 6, 7), float64]) */;
  %1640 = @func_8059() /* ty=(Tensor[(10, 9, 7), float32],) */;
  %1641 = @func_7024() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(260), float64], Tensor[(130), float64], Tensor[(130, 2), float64], float64) */;
  %1642 = @func_4278() /* ty=(Tensor[(10, 9, 7), float32], Tensor[(14, 11, 13), float64], Tensor[(2002), float64]) */;
  %1643 = cast(meta[relay.Constant][63] /* ty=Tensor[(182, 10), float64] */, dtype="float64") /* ty=Tensor[(182, 10), float64] */;
  %1644 = reshape(%1643, newshape=[14, 13, 10]) /* ty=Tensor[(14, 13, 10), float64] */;
  %1645 = @func_3237(%1644) /* ty=(Tensor[(14, 13, 10), float64], Tensor[(14, 13, 10), float32]) */;
  %1646 = @func_13429() /* ty=(Tensor[(10, 9, 7), bool],) */;
  %1647 = %1638.0;
  %1648 = %1639.0;
  %1649 = @func_6323() /* ty=Tensor[(10, 9, 7), float32] */;
  %1650 = %1640.0;
  %1651 = %1641.2;
  %1652 = %1642.2;
  %1653 = %1645.1;
  %1654 = %1646.0;
  (%1647, %1648, %1649, %1650, %1651, %1652, %1653, meta[relay.Constant][63] /* ty=Tensor[(182, 10), float64] */, %1654)
}

def @func_14412() -> (Tensor[(10, 9, 7), float32], float64, Tensor[(168), float32], Tensor[(10, 9, 7), float32]) {
  @func_14410() /* ty=(Tensor[(10, 9, 7), float32], float64, Tensor[(168), float32], Tensor[(10, 9, 7), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen763/build/output.py:5638: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen763/build/output.py", line 5643, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(40) tvmgen_default_fused_cast_cast_greater_equal_kernel0(signed char* __restrict__ T_greater_equal, int* __restrict__ placeholder, int* __restrict__ placeholder1) {
  T_greater_equal[(((int)threadIdx.x))] = ((signed char)(((bool)placeholder[(((int)threadIdx.x))]) <= ((bool)placeholder1[(0)])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


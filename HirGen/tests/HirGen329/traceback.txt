==========mod==========
#[version = "0.0.5"]
def @func_212(%var_195: Tensor[(8, 1, 6), float32]) -> Tensor[(8, ?, 6), float64] {
  %0 = cast(%var_195, dtype="float32") /* ty=Tensor[(8, 1, 6), float32] */;
  %1 = tan(%0) /* ty=Tensor[(8, 1, 6), float32] */;
  %2 = cast(%var_195, dtype="float64") /* ty=Tensor[(8, 1, 6), float64] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="float64") /* ty=Tensor[(8, 1, 6), float64] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%4, %5) /* ty=Tensor[(8, ?, 6), float64] */
}

def @func_1608() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) {
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %8 = reshape(%6, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %9 = reshape(%7, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %10 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  %11 = @func_1229(%8, %9) /* ty=Tensor[(4, 8, 14), bool] */;
  (%10, %11, meta[relay.Constant][0] /* ty=Tensor[(448), bool] */)
}

def @func_5656() -> (Tensor[(448), bool], Tensor[(448), bool]) {
  %12 = @func_4594() /* ty=Tensor[(448), bool] */;
  %13 = @func_4594() /* ty=Tensor[(448), bool] */;
  (%12, %13)
}

def @func_5289(%var_5258: Tensor[(7, 2, 2), float32]) -> (Tensor[(7, 2, 2), float32], Tensor[(4, 2, 4), float64]) {
  %14 = cast(%var_5258, dtype="float64") /* ty=Tensor[(7, 2, 2), float64] */;
  %15 = atanh(%14) /* ty=Tensor[(7, 2, 2), float64] */;
  %16 = cast(%var_5258, dtype="float32") /* ty=Tensor[(7, 2, 2), float32] */;
  %17 = asin(%16) /* ty=Tensor[(7, 2, 2), float32] */;
  %18 = cast(%17, dtype="float32") /* ty=Tensor[(7, 2, 2), float32] */;
  %19 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%15, dtype="float32") /* ty=Tensor[(7, 2, 2), float32] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %22 = @func_4174() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %23 = power(%20, %21) /* ty=Tensor[(7, 2, 2), float32] */;
  %24 = %22.0;
  (%23, %24)
}

def @func_5727() -> (Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) {
  %25 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %26 = @func_5252() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %27 = @func_5246() /* ty=Tensor[(4, 2, 4), bool] */;
  %28 = %25.0;
  %29 = %26.0;
  (%27, %28, %29)
}

def @func_2760() -> Tensor[(4, 2, 4), float64] {
  %30 = @func_2096() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %31 = %30.0;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
  sin(%32) /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_5848(%var_5813: int32, %var_5814: Tensor[(7, 13, 11), int32], %var_5829: Tensor[(15, 4), float32], %var_5835: Tensor[(1, 14), int32]) -> (Tensor[(7, 13, 11), int32], Tensor[(12, 5, ?), float32], Tensor[(15, 4), float32], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(40, 14), int32], Tensor[(8, ?, 6), float64]) {
  %33 = cast(%var_5813, dtype="int32") /* ty=int32 */;
  %34 = cast(%var_5814, dtype="int32") /* ty=Tensor[(7, 13, 11), int32] */;
  %35 = cast(%var_5829, dtype="float32") /* ty=Tensor[(15, 4), float32] */;
  %36 = reshape(%35, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
  %37 = cast(%var_5835, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(40, 14), int32] */, dtype="int32") /* ty=Tensor[(40, 14), int32] */;
  %39 = reshape(%37, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), int32] */;
  %40 = reshape(%38, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int32] */;
  %41 = @func_483(%39, %40) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */;
  %42 = %41.1;
  %43 = cast(%42, dtype="float32") /* ty=Tensor[(8, ?, 6), float32] */;
  %44 = reshape(%43, newshape=[2, 24]) /* ty=Tensor[(2, 24), float32] */;
  %45 = @func_2408(%44) /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, ?, 6), float64]) */;
  %46 = bitwise_and(%33, %34) /* ty=Tensor[(7, 13, 11), int32] */;
  %47 = @func_3808(%36) /* ty=Tensor[(12, 5, ?), float32] */;
  %48 = %45.1;
  (%46, %47, %var_5829, %42, %var_5835, meta[relay.Constant][1] /* ty=Tensor[(40, 14), int32] */, %48)
}

def @func_7777() -> (Tensor[(4, 2, 4), float64],) {
  %49 = @func_4643() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %50 = %49.0;
  (%50,)
}

def @func_3216() -> Tensor[(448), bool] {
  %51 = @func_3180() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %51.0
}

def @func_1788() -> (Tensor[(4, 2, 4), float64],) {
  %52 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %53 = %52.0;
  (%53,)
}

def @func_4807(%var_4794: Tensor[(2145), int16], %var_4802: Tensor[(2640), int8]) -> (Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(2145), int16], Tensor[(560), int32], Tensor[(16, 11, 15), bool], Tensor[(2640), int8]) {
  %54 = @func_2096() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %55 = cast(%var_4794, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %56 = cast(%var_4794, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %57 = cast(meta[relay.Constant][2] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %58 = reshape(%55, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
  %59 = reshape(%56, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
  %60 = reshape(%57, newshape=[560]) /* ty=Tensor[(560), int32] */;
  %61 = @func_533(%58, %59, %60) /* ty=(Tensor[(13, 15, 11), int16], Tensor[(8, ?, 6), float64], Tensor[(14, 1), int32], Tensor[(560), int32]) */;
  %62 = cast(%var_4802, dtype="int8") /* ty=Tensor[(2640), int8] */;
  %63 = cast(%var_4802, dtype="int8") /* ty=Tensor[(2640), int8] */;
  %64 = reshape(%62, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), int8] */;
  %65 = reshape(%63, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), int8] */;
  %66 = @func_3873(%64, %65) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(16, 11, 15), bool]) */;
  %67 = %54.0;
  %68 = %61.1;
  %69 = %66.2;
  (%67, %68, %var_4794, meta[relay.Constant][2] /* ty=Tensor[(560), int32] */, %69, %var_4802)
}

def @func_5141() -> (Tensor[(448), bool],) {
  %70 = @func_3040() /* ty=Tensor[(448), bool] */;
  (%70,)
}

def @func_7428() -> Tensor[(448), bool] {
  %71 = @func_5656() /* ty=(Tensor[(448), bool], Tensor[(448), bool]) */;
  %71.0
}

def @func_2810() -> (Tensor[(4, 2, 4), float64],) {
  %72 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
  %73 = %72.0;
  (%73,)
}

def @func_3873(%var_3852: Tensor[(16, 11, 15), int8], %var_3853: Tensor[(16, 11, 15), int8]) -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(16, 11, 15), bool]) {
  %74 = @func_2793() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(4, 2, 4), float64]) */;
  %75 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %76 = cast(%var_3853, dtype="int8") /* ty=Tensor[(16, 11, 15), int8] */;
  %77 = shape_of(%var_3852, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%var_3852, dtype="int8") /* ty=Tensor[(16, 11, 15), int8] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %80 = bitwise_xor(%78, %79) /* ty=Tensor[(16, 11, 15), int8] */;
  %81 = cast(%80, dtype="bool") /* ty=Tensor[(16, 11, 15), bool] */;
  %82 = shape_of(%var_3852, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%var_3852, dtype="bool") /* ty=Tensor[(16, 11, 15), bool] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %85 = %74.2;
  %86 = %75.0;
  %87 = greater_equal(%83, %84) /* ty=Tensor[(16, 11, 15), bool] */;
  (%85, %86, %87)
}

def @func_6729() -> (Tensor[(4, 8, 14), float32],) {
  %88 = @func_5727() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
  %89 = %88.2;
  (%89,)
}

def @func_2960() -> (Tensor[(448), bool], Tensor[(4, 2, 4), float32]) {
  %90 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
  %91 = @func_1788() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %92 = %91.0;
  %93 = cast(%92, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %94 = %90.2;
  %95 = cos(%93) /* ty=Tensor[(4, 2, 4), float32] */;
  (%94, %95)
}

def @func_3713() -> (Tensor[(4, 2, 4), float64],) {
  %96 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %97 = %96.0;
  (%97,)
}

def @func_7994(%var_7879: Tensor[(14, 8, 7), float32], %var_7955: Tensor[(1638), float64]) -> (Tensor[(4, 8, 14), float32], Tensor[(14, 8, 7), int16], Tensor[(48), float32], Tensor[(4, 2, 4), float64], Tensor[(14, 8, 7), float64], Tensor[(12, 6, 16), float64], Tensor[(1152), float32], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(28), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(14, 8, 7), bool], Tensor[(4, 2, 4), float64]) {
  %98 = @func_7330() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %99 = cast(%var_7879, dtype="float32") /* ty=Tensor[(14, 8, 7), float32] */;
  %100 = sinh(%99) /* ty=Tensor[(14, 8, 7), float32] */;
  %101 = cast(%100, dtype="float32") /* ty=Tensor[(14, 8, 7), float32] */;
  %102 = acos(%101) /* ty=Tensor[(14, 8, 7), float32] */;
  %103 = cast(%102, dtype="float64") /* ty=Tensor[(14, 8, 7), float64] */;
  %104 = sigmoid(%103) /* ty=Tensor[(14, 8, 7), float64] */;
  %105 = cast(%var_7879, dtype="int32") /* ty=Tensor[(14, 8, 7), int32] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="int32") /* ty=Tensor[(14, 8, 7), int32] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %109 = right_shift(%107, %108) /* ty=Tensor[(14, 8, 7), int32] */;
  %110 = cast(%109, dtype="int16") /* ty=Tensor[(14, 8, 7), int16] */;
  %111 = shape_of(%102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%102, dtype="int16") /* ty=Tensor[(14, 8, 7), int16] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %114 = @func_2096() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %115 = cast(%102, dtype="float64") /* ty=Tensor[(14, 8, 7), float64] */;
  %116 = cast(meta[relay.Constant][3] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %117 = reshape(%116, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float32] */;
  %118 = @func_6932(%117) /* ty=(Tensor[(12, 6, 16), float64],) */;
  %119 = @func_3180() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %120 = cast(meta[relay.Constant][4] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %121 = reshape(%120, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), float32] */;
  %122 = @func_5289(%121) /* ty=(Tensor[(7, 2, 2), float32], Tensor[(4, 2, 4), float64]) */;
  %123 = cast(%var_7955, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %124 = reshape(%123, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %125 = @func_6036(%124) /* ty=(Tensor[(4, 8, 14), float32], Tensor[(8, ?, 6), float64], Tensor[(48), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) */;
  %126 = cast(%109, dtype="bool") /* ty=Tensor[(14, 8, 7), bool] */;
  %127 = shape_of(%102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%102, dtype="bool") /* ty=Tensor[(14, 8, 7), bool] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %130 = %98.0;
  %131 = bitwise_or(%112, %113) /* ty=Tensor[(14, 8, 7), int16] */;
  %132 = @func_5469() /* ty=Tensor[(48), float32] */;
  %133 = %114.0;
  %134 = rsqrt(%115) /* ty=Tensor[(14, 8, 7), float64] */;
  %135 = %118.0;
  %136 = %119.1;
  %137 = %122.1;
  %138 = %125.3;
  %139 = @func_7681() /* ty=Tensor[(4, 2, 4), bool] */;
  %140 = @func_1870() /* ty=Tensor[(4, 2, 4), float64] */;
  %141 = less(%128, %129) /* ty=Tensor[(14, 8, 7), bool] */;
  %142 = @func_7239() /* ty=Tensor[(4, 2, 4), float64] */;
  (%130, %131, %132, %133, %134, %135, meta[relay.Constant][3] /* ty=Tensor[(1152), float32] */, %136, %137, meta[relay.Constant][4] /* ty=Tensor[(28), float32] */, %138, %var_7955, %139, %140, %141, %142)
}

def @func_1396() -> (Tensor[(4, 2, 4), float64],) {
  %143 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
  %144 = sinh(%143) /* ty=Tensor[(4, 2, 4), float64] */;
  (%144,)
}

def @func_3729() -> Tensor[(4, 2, 4), float64] {
  @func_1487() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_8049() -> (Tensor[(2145), int16], Tensor[(560), int32], Tensor[(14, 448), bool]) {
  %145 = cast(meta[relay.Constant][6] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %146 = cast(meta[relay.Constant][6] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %147 = cast(meta[relay.Constant][7] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %148 = reshape(%145, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
  %149 = reshape(%146, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
  %150 = reshape(%147, newshape=[560]) /* ty=Tensor[(560), int32] */;
  %151 = @func_533(%148, %149, %150) /* ty=(Tensor[(13, 15, 11), int16], Tensor[(8, ?, 6), float64], Tensor[(14, 1), int32], Tensor[(560), int32]) */;
  %152 = %151.2;
  %153 = @func_4594() /* ty=Tensor[(448), bool] */;
  %154 = cast(%152, dtype="bool") /* ty=Tensor[(14, 1), bool] */;
  %155 = cast(%153, dtype="bool") /* ty=Tensor[(448), bool] */;
  %156 = greater(%154, %155) /* ty=Tensor[(14, 448), bool] */;
  (meta[relay.Constant][6] /* ty=Tensor[(2145), int16] */, meta[relay.Constant][7] /* ty=Tensor[(560), int32] */, %156)
}

def @func_2187(%var_2181: Tensor[(1, 48), float32]) -> (Tensor[(4, 8, 14), bool], Tensor[(4, 8, 14), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 48), float32]) {
  %157 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
  %158 = %157.1;
  %159 = cast(%158, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
  %160 = cast(%158, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
  %161 = reshape(%159, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %162 = reshape(%160, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %163 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %164 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %165 = @func_2096() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %166 = cast(%var_2181, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
  %167 = reshape(%166, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
  %168 = @func_1229(%161, %162) /* ty=Tensor[(4, 8, 14), bool] */;
  %169 = %163.0;
  %170 = %164.0;
  %171 = %165.0;
  %172 = @func_212(%167) /* ty=Tensor[(8, ?, 6), float64] */;
  (%158, %168, %169, %170, %171, %172, %var_2181)
}

def @func_4190() -> (Tensor[(4, 2, 4), float32], Tensor[(8, 70), int16], Tensor[(560), float32], Tensor[(4, 2, 4), float64]) {
  %173 = @func_2960() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */;
  %174 = cast(meta[relay.Constant][8] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
  %175 = cast(meta[relay.Constant][8] /* ty=Tensor[(560), float32] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %176 = reshape(%174, newshape=[8, 70]) /* ty=Tensor[(8, 70), float32] */;
  %177 = reshape(%175, newshape=[8, 70]) /* ty=Tensor[(8, 70), float64] */;
  %178 = @func_2335(%176, %177) /* ty=(Tensor[(4, 2, 4), bool], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(8, 70), int16], Tensor[(8, ?, 6), float64], Tensor[(8, 70), float32], Tensor[(8, 70), bool], Tensor[(8, 70), int16], Tensor[(14, 1), int32], Tensor[(2145), int16], Tensor[(4, 2, 4), float64]) */;
  %179 = %173.1;
  %180 = %178.7;
  %181 = @func_3729() /* ty=Tensor[(4, 2, 4), float64] */;
  (%179, %180, meta[relay.Constant][8] /* ty=Tensor[(560), float32] */, %181)
}

def @func_4174() -> (Tensor[(4, 2, 4), float64],) {
  %182 = @func_3713() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %183 = %182.0;
  (%183,)
}

def @func_5957() -> Tensor[(4, 2, 4), float64] {
  %184 = @func_4643() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %184.0
}

def @func_7795() -> (Tensor[(4, 2, 4), float64],) {
  %185 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %186 = %185.0;
  (%186,)
}

def @func_6883(%var_6862: Tensor[(756), float64]) -> (Tensor[(4, 2, 4), float64], Tensor[(756), float64], Tensor[(1638), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) {
  %187 = cast(%var_6862, dtype="float64") /* ty=Tensor[(756), float64] */;
  %188 = cast(meta[relay.Constant][9] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %189 = reshape(%187, newshape=[7, 9, 12]) /* ty=Tensor[(7, 9, 12), float64] */;
  %190 = reshape(%188, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %191 = @func_2836(%189, %190) /* ty=(Tensor[(13, 4, 16), float64], Tensor[(832), uint64], Tensor[(1638), float64], Tensor[(7, 9, 12), bool]) */;
  %192 = %191.2;
  %193 = cast(%192, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %194 = @func_2995() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %195 = @func_1870() /* ty=Tensor[(4, 2, 4), float64] */;
  %196 = tan(%193) /* ty=Tensor[(1638), float64] */;
  %197 = %194.0;
  (%195, %var_6862, meta[relay.Constant][9] /* ty=Tensor[(1638), float64] */, %196, %197)
}

def @func_7275(%var_7249: Tensor[(8, 5, 3), float32]) -> (Tensor[(8, 5, 3), float32], Tensor[(8, 5, 3), float32]) {
  %198 = cast(%var_7249, dtype="float32") /* ty=Tensor[(8, 5, 3), float32] */;
  %199 = sin(%198) /* ty=Tensor[(8, 5, 3), float32] */;
  %200 = cast(%var_7249, dtype="float32") /* ty=Tensor[(8, 5, 3), float32] */;
  %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %202 = cast(%199, dtype="float32") /* ty=Tensor[(8, 5, 3), float32] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %204 = cast(%199, dtype="float32") /* ty=Tensor[(8, 5, 3), float32] */;
  %205 = mod(%202, %203) /* ty=Tensor[(8, 5, 3), float32] */;
  %206 = acos(%204) /* ty=Tensor[(8, 5, 3), float32] */;
  (%205, %206)
}

def @func_483(%var_461: Tensor[(14, 1, 1), int32], %var_462: Tensor[(14, 8, 5), int32]) -> (Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) {
  %207 = cast(%var_461, dtype="int32") /* ty=Tensor[(14, 1, 1), int32] */;
  %208 = cast(%var_462, dtype="int32") /* ty=Tensor[(14, 8, 5), int32] */;
  %209 = maximum(%207, %208) /* ty=Tensor[(14, 8, 5), int32] */;
  %210 = cast(%209, dtype="float32") /* ty=Tensor[(14, 8, 5), float32] */;
  %211 = cast(meta[relay.Constant][10] /* ty=Tensor[(48, 1), float32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
  %212 = reshape(%211, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
  %213 = @func_212(%212) /* ty=Tensor[(8, ?, 6), float64] */;
  %214 = cast(%213, dtype="float32") /* ty=Tensor[(8, ?, 6), float32] */;
  %215 = reshape(%214, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
  %216 = rsqrt(%210) /* ty=Tensor[(14, 8, 5), float32] */;
  %217 = @func_212(%215) /* ty=Tensor[(8, ?, 6), float64] */;
  (%216, %213, meta[relay.Constant][10] /* ty=Tensor[(48, 1), float32] */, %217)
}

def @func_3311(%var_3288: Tensor[(11, 5, 6), uint16]) -> (Tensor[(11, 5, 6), uint16], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  %218 = cast(%var_3288, dtype="uint16") /* ty=Tensor[(11, 5, 6), uint16] */;
  %219 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(11, 5, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 5, 6), uint16] */, dtype="uint16") /* ty=Tensor[(11, 5, 6), uint16] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %222 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %223 = bitwise_or(%220, %221) /* ty=Tensor[(11, 5, 6), uint16] */;
  %224 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  %225 = %222.0;
  (%223, %224, %225)
}

def @func_5395() -> Tensor[(4, 2, 4), float64] {
  %226 = @func_4174() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %226.0
}

def @func_3579(%var_3566: Tensor[(14), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(14), int32], Tensor[(4, 2, 4), int64]) {
  %227 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %228 = %227.0;
  %229 = cast(%var_3566, dtype="int32") /* ty=Tensor[(14), int32] */;
  %230 = reshape(%229, newshape=[1, 14]) /* ty=Tensor[(1, 14), int32] */;
  %231 = @func_2061(%230) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) */;
  %232 = %231.0;
  %233 = cast(%232, dtype="int64") /* ty=Tensor[(4, 2, 4), int64] */;
  %234 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%228, dtype="int64") /* ty=Tensor[(4, 2, 4), int64] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %237 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  %238 = bitwise_and(%235, %236) /* ty=Tensor[(4, 2, 4), int64] */;
  (%237, %var_3566, %238)
}

def @func_7239() -> Tensor[(4, 2, 4), float64] {
  %239 = @func_4174() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %239.0
}

def @func_8114() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), bool]) {
  %240 = @func_2741() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %241 = %240.3;
  %242 = @func_5246() /* ty=Tensor[(4, 2, 4), bool] */;
  (%241, %242)
}

def @func_6036(%var_6010: Tensor[(1638), float64]) -> (Tensor[(4, 8, 14), float32], Tensor[(8, ?, 6), float64], Tensor[(48), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) {
  %243 = @func_3617() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %244 = cast(meta[relay.Constant][12] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %245 = reshape(%244, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
  %246 = cast(%var_6010, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %247 = reshape(%246, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %248 = @func_5429(%247) /* ty=(Tensor[(448), bool], Tensor[(4, 8, 14), bool], Tensor[(14, 13, 9), float64], Tensor[(1638), float64]) */;
  %249 = %243.0;
  %250 = @func_212(%245) /* ty=Tensor[(8, ?, 6), float64] */;
  %251 = %248.0;
  %252 = @func_5957() /* ty=Tensor[(4, 2, 4), float64] */;
  (%249, %250, meta[relay.Constant][12] /* ty=Tensor[(48), float32] */, %251, %var_6010, %252)
}

def @func_2879() -> (Tensor[(4, 2, 4), float64],) {
  %253 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %254 = %253.0;
  (%254,)
}

def @func_7767(%var_7699: Tensor[(16, 3, 8), float64]) -> (Tensor[(4, 8, 14), bool], Tensor[(16, 3, 8), uint64], Tensor[(16, 3, 8), float32], Tensor[(16, 3, 8), float32]) {
  %255 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
  %256 = cast(%var_7699, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
  %257 = cos(%256) /* ty=Tensor[(16, 3, 8), float64] */;
  %258 = cast(%var_7699, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%257, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %262 = logical_and(%260, %261) /* ty=Tensor[(16, 3, 8), bool] */;
  %263 = cast(%257, dtype="int32") /* ty=Tensor[(16, 3, 8), int32] */;
  %264 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %265 = cast(%262, dtype="int32") /* ty=Tensor[(16, 3, 8), int32] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %267 = add(%265, %266) /* ty=Tensor[(16, 3, 8), int32] */;
  %268 = cast(%267, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
  %269 = sinh(%268) /* ty=Tensor[(16, 3, 8), float64] */;
  %270 = cast(%269, dtype="float32") /* ty=Tensor[(16, 3, 8), float32] */;
  %271 = log2(%270) /* ty=Tensor[(16, 3, 8), float32] */;
  %272 = cast(%var_7699, dtype="int16") /* ty=Tensor[(16, 3, 8), int16] */;
  %273 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(%257, dtype="int16") /* ty=Tensor[(16, 3, 8), int16] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %276 = subtract(%274, %275) /* ty=Tensor[(16, 3, 8), int16] */;
  %277 = cast(%276, dtype="uint64") /* ty=Tensor[(16, 3, 8), uint64] */;
  %278 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %279 = cast(%271, dtype="uint64") /* ty=Tensor[(16, 3, 8), uint64] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %281 = cast(%269, dtype="float32") /* ty=Tensor[(16, 3, 8), float32] */;
  %282 = cast(%271, dtype="float32") /* ty=Tensor[(16, 3, 8), float32] */;
  %283 = %255.1;
  %284 = left_shift(%279, %280) /* ty=Tensor[(16, 3, 8), uint64] */;
  %285 = cosh(%281) /* ty=Tensor[(16, 3, 8), float32] */;
  %286 = asin(%282) /* ty=Tensor[(16, 3, 8), float32] */;
  (%283, %284, %285, %286)
}

def @func_6296() -> (Tensor[(4, 2, 4), float64], Tensor[(2640), int8], Tensor[(4, 2, 4), float32]) {
  %287 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %288 = cast(meta[relay.Constant][13] /* ty=Tensor[(2640), int8] */, dtype="int8") /* ty=Tensor[(2640), int8] */;
  %289 = cast(meta[relay.Constant][13] /* ty=Tensor[(2640), int8] */, dtype="int8") /* ty=Tensor[(2640), int8] */;
  %290 = reshape(%288, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), int8] */;
  %291 = reshape(%289, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), int8] */;
  %292 = @func_3873(%290, %291) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(16, 11, 15), bool]) */;
  %293 = %292.0;
  %294 = cast(%293, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %295 = %287.0;
  %296 = sqrt(%294) /* ty=Tensor[(4, 2, 4), float32] */;
  (%295, meta[relay.Constant][13] /* ty=Tensor[(2640), int8] */, %296)
}

def @func_3534() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) {
  %297 = @func_2741() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %298 = %297.1;
  %299 = cast(%298, dtype="float64") /* ty=Tensor[(4, 8, 14), float64] */;
  %300 = asin(%299) /* ty=Tensor[(4, 8, 14), float64] */;
  %301 = cast(%300, dtype="float32") /* ty=Tensor[(4, 8, 14), float32] */;
  %302 = @func_2760() /* ty=Tensor[(4, 2, 4), float64] */;
  %303 = cos(%301) /* ty=Tensor[(4, 8, 14), float32] */;
  (%302, %303)
}

def @func_7546() -> Tensor[(4, 8, 14), float32] {
  %304 = @func_5727() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
  %305 = %304.2;
  %306 = cast(%305, dtype="float32") /* ty=Tensor[(4, 8, 14), float32] */;
  tan(%306) /* ty=Tensor[(4, 8, 14), float32] */
}

def @func_6356() -> (Tensor[(448), bool], Tensor[(4, 2, 4), float64]) {
  %307 = @func_2810() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %308 = @func_3216() /* ty=Tensor[(448), bool] */;
  %309 = %307.0;
  (%308, %309)
}

def @func_2030() -> (Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) {
  %310 = @func_1884() /* ty=Tensor[(4, 2, 4), float64] */;
  %311 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 2, 4), float64] */, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %312 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%310, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %315 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 2, 4), float64] */, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %316 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %317 = cast(%310, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %319 = cast(%310, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %320 = cosh(%319) /* ty=Tensor[(4, 2, 4), float32] */;
  %321 = cast(%320, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %322 = equal(%313, %314) /* ty=Tensor[(4, 2, 4), bool] */;
  %323 = less_equal(%317, %318) /* ty=Tensor[(4, 2, 4), bool] */;
  %324 = erf(%321) /* ty=Tensor[(4, 2, 4), float32] */;
  (%322, %323, %324)
}

def @func_3680() -> (Tensor[(4, 2, 4), float64],) {
  %325 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%325,)
}

def @func_6534(%var_6512: Tensor[(96), float64], %var_6518: Tensor[(560), float32]) -> (Tensor[(4, 2, 4), float32], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(4, 2, 4), bool], Tensor[(560), float32], Tensor[(448), bool]) {
  %326 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %327 = cast(%var_6512, dtype="float64") /* ty=Tensor[(96), float64] */;
  %328 = reshape(%327, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float64] */;
  %329 = cast(%var_6518, dtype="float32") /* ty=Tensor[(560), float32] */;
  %330 = cast(%var_6518, dtype="float64") /* ty=Tensor[(560), float64] */;
  %331 = reshape(%329, newshape=[8, 70]) /* ty=Tensor[(8, 70), float32] */;
  %332 = reshape(%330, newshape=[8, 70]) /* ty=Tensor[(8, 70), float64] */;
  %333 = @func_2335(%331, %332) /* ty=(Tensor[(4, 2, 4), bool], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(8, 70), int16], Tensor[(8, ?, 6), float64], Tensor[(8, 70), float32], Tensor[(8, 70), bool], Tensor[(8, 70), int16], Tensor[(14, 1), int32], Tensor[(2145), int16], Tensor[(4, 2, 4), float64]) */;
  %334 = %326.2;
  %335 = @func_4754(%328) /* ty=Tensor[(8, 2, 6), bool] */;
  %336 = %333.0;
  %337 = @func_3040() /* ty=Tensor[(448), bool] */;
  (%334, %335, %var_6512, %336, %var_6518, %337)
}

def @func_1411(%var_1398: Tensor[(3, 13, 4), int64], %var_1399: Tensor[(3, 13, 4), int64]) -> (Tensor[(3, 13, 4), bool],) {
  %338 = cast(%var_1399, dtype="bool") /* ty=Tensor[(3, 13, 4), bool] */;
  %339 = shape_of(%var_1398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %340 = cast(%var_1398, dtype="bool") /* ty=Tensor[(3, 13, 4), bool] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %342 = not_equal(%340, %341) /* ty=Tensor[(3, 13, 4), bool] */;
  (%342,)
}

def @func_2589() -> (Tensor[(4, 2, 4), float64],) {
  %343 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%343,)
}

def @func_2995() -> (Tensor[(4, 2, 4), float64],) {
  %344 = @func_2521() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %345 = %344.0;
  (%345,)
}

def @func_6932(%var_6926: Tensor[(12, 6, 16), float32]) -> (Tensor[(12, 6, 16), float64],) {
  %346 = cast(%var_6926, dtype="float32") /* ty=Tensor[(12, 6, 16), float32] */;
  %347 = erf(%346) /* ty=Tensor[(12, 6, 16), float32] */;
  %348 = cast(%var_6926, dtype="float64") /* ty=Tensor[(12, 6, 16), float64] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%347, dtype="float64") /* ty=Tensor[(12, 6, 16), float64] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %352 = power(%350, %351) /* ty=Tensor[(12, 6, 16), float64] */;
  (%352,)
}

def @func_5177() -> (Tensor[(448), bool],) {
  %353 = @func_4594() /* ty=Tensor[(448), bool] */;
  (%353,)
}

def @func_3040() -> Tensor[(448), bool] {
  %354 = @func_2793() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(4, 2, 4), float64]) */;
  %354.1
}

def @func_7330() -> (Tensor[(4, 8, 14), float32],) {
  %355 = @func_3617() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %356 = %355.0;
  (%356,)
}

def @func_1717(%var_1631: Tensor[(7, 10, 14), uint16], %var_1639: Tensor[(1638), float64], %var_1670: Tensor[(7, 10, 14), float64]) -> (Tensor[(7, 10, 14), uint16], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(2145), int16], Tensor[(560), int32], Tensor[(7, 10, 14), float32], Tensor[(448), bool], Tensor[(7, 10, 14), float32]) {
  %357 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 10, 14), uint16] */, dtype="uint16") /* ty=Tensor[(7, 10, 14), uint16] */;
  %358 = shape_of(%var_1631, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%var_1631, dtype="uint16") /* ty=Tensor[(7, 10, 14), uint16] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %361 = cast(%var_1639, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %362 = reshape(%361, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %363 = @func_1070(%362) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %364 = cast(meta[relay.Constant][17] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %365 = cast(meta[relay.Constant][17] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %366 = cast(meta[relay.Constant][18] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %367 = reshape(%364, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
  %368 = reshape(%365, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
  %369 = reshape(%366, newshape=[560]) /* ty=Tensor[(560), int32] */;
  %370 = @func_533(%367, %368, %369) /* ty=(Tensor[(13, 15, 11), int16], Tensor[(8, ?, 6), float64], Tensor[(14, 1), int32], Tensor[(560), int32]) */;
  %371 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 10, 14), uint16] */, dtype="float64") /* ty=Tensor[(7, 10, 14), float64] */;
  %372 = log2(%371) /* ty=Tensor[(7, 10, 14), float64] */;
  %373 = cast(%372, dtype="float64") /* ty=Tensor[(7, 10, 14), float64] */;
  %374 = erf(%373) /* ty=Tensor[(7, 10, 14), float64] */;
  %375 = cast(%374, dtype="bool") /* ty=Tensor[(7, 10, 14), bool] */;
  %376 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%372, dtype="bool") /* ty=Tensor[(7, 10, 14), bool] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %379 = logical_or(%377, %378) /* ty=Tensor[(7, 10, 14), bool] */;
  %380 = cast(%379, dtype="float32") /* ty=Tensor[(7, 10, 14), float32] */;
  %381 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
  %382 = cast(%var_1670, dtype="int16") /* ty=Tensor[(7, 10, 14), int16] */;
  %383 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%374, dtype="int16") /* ty=Tensor[(7, 10, 14), int16] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %386 = left_shift(%384, %385) /* ty=Tensor[(7, 10, 14), int16] */;
  %387 = cast(%386, dtype="float32") /* ty=Tensor[(7, 10, 14), float32] */;
  %388 = right_shift(%359, %360) /* ty=Tensor[(7, 10, 14), uint16] */;
  %389 = %363.0;
  %390 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  %391 = %370.1;
  %392 = asin(%380) /* ty=Tensor[(7, 10, 14), float32] */;
  %393 = %381.2;
  %394 = tan(%387) /* ty=Tensor[(7, 10, 14), float32] */;
  (%388, %389, %var_1639, %390, %391, meta[relay.Constant][17] /* ty=Tensor[(2145), int16] */, meta[relay.Constant][18] /* ty=Tensor[(560), int32] */, %392, %393, %394)
}

def @func_2408(%var_2387: Tensor[(2, 24), float32]) -> (Tensor[(4, 2, 4), float32], Tensor[(8, ?, 6), float64]) {
  %395 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %396 = cast(%var_2387, dtype="float32") /* ty=Tensor[(2, 24), float32] */;
  %397 = reshape(%396, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
  %398 = @func_212(%397) /* ty=Tensor[(8, ?, 6), float64] */;
  %399 = cast(%var_2387, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="float64") /* ty=Tensor[(8, ?, 6), float64] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %403 = %395.2;
  %404 = floor_divide(%401, %402) /* ty=Tensor[(8, ?, 6), float64] */;
  (%403, %404)
}

def @func_4105(%var_4098: Tensor[(14), int32], %var_4099: Tensor[(1, 560), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(48, 1), float32], Tensor[(14), int32], Tensor[(1, 560), int32]) {
  %405 = @func_3921() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %406 = cast(%var_4098, dtype="int32") /* ty=Tensor[(14), int32] */;
  %407 = cast(%var_4099, dtype="int32") /* ty=Tensor[(1, 560), int32] */;
  %408 = reshape(%406, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), int32] */;
  %409 = reshape(%407, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int32] */;
  %410 = @func_483(%408, %409) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */;
  %411 = %405.0;
  %412 = %410.2;
  (%411, %412, %var_4098, %var_4099)
}

def @func_2061(%var_2045: Tensor[(1, 14), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) {
  %413 = cast(%var_2045, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
  %414 = cast(meta[relay.Constant][19] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %415 = reshape(%413, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), int32] */;
  %416 = reshape(%414, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int32] */;
  %417 = @func_483(%415, %416) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */;
  %418 = @func_1884() /* ty=Tensor[(4, 2, 4), float64] */;
  %419 = %417.1;
  (%418, %419, %var_2045, meta[relay.Constant][19] /* ty=Tensor[(560), int32] */)
}

def @func_2646(%var_2642: Tensor[(980), uint16], %var_2643: Tensor[(1638), float64]) -> (Tensor[(15, 4, 10), uint32], Tensor[(4, 2, 4), float64], Tensor[(7, 10, 14), float32], Tensor[(980), uint16], Tensor[(1638), float64]) {
  %420 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 4, 10), uint32] */, dtype="uint32") /* ty=Tensor[(15, 4, 10), uint32] */;
  %421 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(15, 4, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 4, 10), uint32] */, dtype="uint32") /* ty=Tensor[(15, 4, 10), uint32] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %424 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %425 = cast(%var_2642, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %426 = cast(%var_2643, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %427 = cast(%var_2642, dtype="float64") /* ty=Tensor[(980), float64] */;
  %428 = reshape(%425, newshape=[7, 10, 14]) /* ty=Tensor[(7, 10, 14), uint16] */;
  %429 = reshape(%426, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %430 = reshape(%427, newshape=[7, 10, 14]) /* ty=Tensor[(7, 10, 14), float64] */;
  %431 = @func_1717(%428, %429, %430) /* ty=(Tensor[(7, 10, 14), uint16], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(2145), int16], Tensor[(560), int32], Tensor[(7, 10, 14), float32], Tensor[(448), bool], Tensor[(7, 10, 14), float32]) */;
  %432 = bitwise_and(%422, %423) /* ty=Tensor[(15, 4, 10), uint32] */;
  %433 = %424.0;
  %434 = %431.9;
  (%432, %433, %434, %var_2642, %var_2643)
}

def @func_4993(%var_4988: Tensor[(1, 14), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) {
  %435 = cast(%var_4988, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
  %436 = cast(meta[relay.Constant][22] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %437 = reshape(%435, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), int32] */;
  %438 = reshape(%436, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int32] */;
  %439 = @func_483(%437, %438) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */;
  %440 = @func_2760() /* ty=Tensor[(4, 2, 4), float64] */;
  %441 = %439.3;
  (%440, %441, %var_4988, meta[relay.Constant][22] /* ty=Tensor[(560), int32] */)
}

def @func_5368(%var_5358: Tensor[(60, 1), float32]) -> (Tensor[(4, 2, 4), int16], Tensor[(12, 5, ?), float32], Tensor[(60, 1), float32], Tensor[(4, 2, 4), float32]) {
  %442 = @func_4574() /* ty=Tensor[(4, 2, 4), bool] */;
  %443 = cast(%442, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %444 = asin(%443) /* ty=Tensor[(4, 2, 4), float32] */;
  %445 = @func_2869() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %446 = %445.0;
  %447 = cast(%446, dtype="int16") /* ty=Tensor[(4, 2, 4), int16] */;
  %448 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%444, dtype="int16") /* ty=Tensor[(4, 2, 4), int16] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %451 = cast(%var_5358, dtype="float32") /* ty=Tensor[(60, 1), float32] */;
  %452 = reshape(%451, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
  %453 = @func_2960() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */;
  %454 = subtract(%449, %450) /* ty=Tensor[(4, 2, 4), int16] */;
  %455 = @func_3808(%452) /* ty=Tensor[(12, 5, ?), float32] */;
  %456 = %453.1;
  (%454, %455, %var_5358, %456)
}

def @func_4594() -> Tensor[(448), bool] {
  %457 = @func_2741() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %457.2
}

def @func_1070(%var_1050: Tensor[(14, 13, 9), float64]) -> (Tensor[(14, 13, 9), float64],) {
  %458 = cast(%var_1050, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %459 = sqrt(%458) /* ty=Tensor[(14, 13, 9), float64] */;
  (%459,)
}

def @func_3808(%var_3801: Tensor[(12, 5, 1), float32]) -> Tensor[(12, 5, ?), float32] {
  %460 = cast(%var_3801, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
  %461 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(12, 5, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 5, 1), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  minimum(%462, %463) /* ty=Tensor[(12, 5, ?), float32] */
}

def @func_1884() -> Tensor[(4, 2, 4), float64] {
  @func_1487() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_4721(%var_4692: Tensor[(1, 980), uint16]) -> (Tensor[(14, 13, 9), float64], Tensor[(1, 1638), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(1, 980), uint16], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  %464 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 1638), float64] */, dtype="float64") /* ty=Tensor[(1, 1638), float64] */;
  %465 = reshape(%464, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %466 = @func_1070(%465) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %467 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %468 = @func_4574() /* ty=Tensor[(4, 2, 4), bool] */;
  %469 = @func_2793() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(4, 2, 4), float64]) */;
  %470 = %469.2;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %472 = shape_of(%468, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%468, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %475 = cast(%var_4692, dtype="uint16") /* ty=Tensor[(1, 980), uint16] */;
  %476 = %466.0;
  %477 = cast(%476, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %478 = reshape(%475, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %479 = reshape(%477, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %480 = @func_2646(%478, %479) /* ty=(Tensor[(15, 4, 10), uint32], Tensor[(4, 2, 4), float64], Tensor[(7, 10, 14), float32], Tensor[(980), uint16], Tensor[(1638), float64]) */;
  %481 = @func_4174() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %482 = %467.0;
  %483 = floor_divide(%473, %474) /* ty=Tensor[(4, 2, 4), float32] */;
  %484 = @func_4594() /* ty=Tensor[(448), bool] */;
  %485 = %480.4;
  %486 = %481.0;
  %487 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%476, meta[relay.Constant][24] /* ty=Tensor[(1, 1638), float64] */, %482, %483, %484, %485, %var_4692, %486, %487)
}

def @func_3104() -> Tensor[(4, 2, 4), bool] {
  %488 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %488.1
}

def @func_3180() -> (Tensor[(448), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) {
  %489 = @func_2960() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */;
  %490 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %491 = @func_1788() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %492 = %489.0;
  %493 = cast(%492, dtype="bool") /* ty=Tensor[(448), bool] */;
  %494 = reshape(%493, newshape=[1, 448]) /* ty=Tensor[(1, 448), bool] */;
  %495 = @func_2976(%494) /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool]) */;
  %496 = %490.0;
  %497 = %491.0;
  %498 = %495.0;
  (%492, %496, %497, %498)
}

def @func_5988(%var_5981: bool, %var_5982: Tensor[(15, 2, 16), bool]) -> Tensor[(15, 2, 16), bool] {
  %499 = cast(%var_5981, dtype="bool") /* ty=bool */;
  %500 = cast(%var_5982, dtype="bool") /* ty=Tensor[(15, 2, 16), bool] */;
  logical_and(%499, %500) /* ty=Tensor[(15, 2, 16), bool] */
}

def @func_7148() -> (Tensor[(4, 2, 4), float32],) {
  %501 = @func_4190() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, 70), int16], Tensor[(560), float32], Tensor[(4, 2, 4), float64]) */;
  %502 = %501.0;
  (%502,)
}

def @func_6200(%var_6190: Tensor[(2640), int8]) -> (Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(2640), int8]) {
  %503 = @func_4491() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %504 = @func_3680() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %505 = %504.0;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
  %507 = cast(%var_6190, dtype="int8") /* ty=Tensor[(2640), int8] */;
  %508 = cast(%var_6190, dtype="int8") /* ty=Tensor[(2640), int8] */;
  %509 = reshape(%507, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), int8] */;
  %510 = reshape(%508, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), int8] */;
  %511 = @func_3873(%509, %510) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(16, 11, 15), bool]) */;
  %512 = %503.0;
  %513 = acos(%506) /* ty=Tensor[(4, 2, 4), float64] */;
  %514 = @func_1870() /* ty=Tensor[(4, 2, 4), float64] */;
  %515 = %511.0;
  (%512, %513, %514, %515, %var_6190)
}

def @func_7011(%var_6983: bool, %var_6984: Tensor[(4, 120), bool], %var_6995: Tensor[(2640), int8], %var_7000: Tensor[(96), float64]) -> (Tensor[(448), bool], Tensor[(4, 8, 14), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32], Tensor[(60), float32], Tensor[(15, 2, 16), bool], bool, Tensor[(4, 120), bool], Tensor[(4, 2, 4), float64], Tensor[(2640), int8], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(560), float32]) {
  %516 = @func_5871() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(448), bool]) */;
  %517 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
  %518 = @func_6356() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float64]) */;
  %519 = cast(meta[relay.Constant][25] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %520 = reshape(%519, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
  %521 = @func_5368(%520) /* ty=(Tensor[(4, 2, 4), int16], Tensor[(12, 5, ?), float32], Tensor[(60, 1), float32], Tensor[(4, 2, 4), float32]) */;
  %522 = cast(%var_6983, dtype="bool") /* ty=bool */;
  %523 = cast(%var_6984, dtype="bool") /* ty=Tensor[(4, 120), bool] */;
  %524 = reshape(%522, newshape=[]) /* ty=bool */;
  %525 = reshape(%523, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), bool] */;
  %526 = cast(%var_6995, dtype="int8") /* ty=Tensor[(2640), int8] */;
  %527 = reshape(%526, newshape=[2640]) /* ty=Tensor[(2640), int8] */;
  %528 = @func_6200(%527) /* ty=(Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(2640), int8]) */;
  %529 = cast(%var_7000, dtype="float64") /* ty=Tensor[(96), float64] */;
  %530 = cast(meta[relay.Constant][26] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
  %531 = reshape(%529, newshape=[96]) /* ty=Tensor[(96), float64] */;
  %532 = reshape(%530, newshape=[560]) /* ty=Tensor[(560), float32] */;
  %533 = @func_6534(%531, %532) /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(4, 2, 4), bool], Tensor[(560), float32], Tensor[(448), bool]) */;
  %534 = %516.1;
  %535 = %517.1;
  %536 = %518.1;
  %537 = %521.3;
  %538 = @func_5988(%524, %525) /* ty=Tensor[(15, 2, 16), bool] */;
  %539 = %528.2;
  %540 = %533.1;
  (%534, %535, %536, %537, meta[relay.Constant][25] /* ty=Tensor[(60), float32] */, %538, %var_6983, %var_6984, %539, %var_6995, %540, %var_7000, meta[relay.Constant][26] /* ty=Tensor[(560), float32] */)
}

def @func_7383() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  %541 = @func_2879() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %542 = @func_5957() /* ty=Tensor[(4, 2, 4), float64] */;
  %543 = %541.0;
  (%542, %543)
}

def @func_5529(%var_5505: Tensor[(14, 13, 9), float64]) -> (Tensor[(14, 13, 9), float64], Tensor[(448), bool]) {
  %544 = @func_4267() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) */;
  %545 = %544.1;
  %546 = cast(%var_5505, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %547 = shape_of(%545, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%545, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %550 = mod(%548, %549) /* ty=Tensor[(14, 13, 9), float64] */;
  %551 = @func_4594() /* ty=Tensor[(448), bool] */;
  (%550, %551)
}

def @func_5871() -> (Tensor[(4, 2, 4), bool], Tensor[(448), bool]) {
  %552 = @func_3180() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %553 = @func_2741() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %554 = %552.1;
  %555 = %553.2;
  (%554, %555)
}

def @func_7615() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32], Tensor[(48), float32], Tensor[(4, 2, 4), float32]) {
  %556 = @func_4174() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %557 = @func_2810() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %558 = @func_3617() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %559 = %558.0;
  %560 = cast(%559, dtype="float32") /* ty=Tensor[(4, 8, 14), float32] */;
  %561 = @func_2960() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */;
  %562 = %556.0;
  %563 = %557.0;
  %564 = log2(%560) /* ty=Tensor[(4, 8, 14), float32] */;
  %565 = @func_5469() /* ty=Tensor[(48), float32] */;
  %566 = %561.1;
  (%562, %563, %564, %565, %566)
}

def @func_7681() -> Tensor[(4, 2, 4), bool] {
  %567 = @func_5871() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(448), bool]) */;
  %567.0
}

def @func_2741() -> (Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) {
  %568 = @func_1788() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %569 = %568.0;
  %570 = cast(%569, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %571 = cast(meta[relay.Constant][27] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %572 = cast(meta[relay.Constant][27] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %573 = reshape(%571, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %574 = reshape(%572, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %575 = @func_2521() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %576 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %577 = atanh(%570) /* ty=Tensor[(4, 2, 4), float32] */;
  %578 = @func_1229(%573, %574) /* ty=Tensor[(4, 8, 14), bool] */;
  %579 = %575.0;
  %580 = %576.2;
  (%577, %578, meta[relay.Constant][27] /* ty=Tensor[(448), bool] */, %579, %580)
}

def @func_5893() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  %581 = @func_2810() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %582 = @func_3729() /* ty=Tensor[(4, 2, 4), float64] */;
  %583 = %581.0;
  (%582, %583)
}

def @func_2976(%var_2969: Tensor[(1, 448), bool]) -> (Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool]) {
  %584 = @func_2741() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %585 = cast(%var_2969, dtype="bool") /* ty=Tensor[(1, 448), bool] */;
  %586 = cast(%var_2969, dtype="bool") /* ty=Tensor[(1, 448), bool] */;
  %587 = reshape(%585, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %588 = reshape(%586, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %589 = @func_1229(%587, %588) /* ty=Tensor[(4, 8, 14), bool] */;
  %590 = cast(%var_2969, dtype="bool") /* ty=Tensor[(1, 448), bool] */;
  %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%589, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %594 = %584.0;
  %595 = equal(%592, %593) /* ty=Tensor[(4, 8, 14), bool] */;
  (%594, %595)
}

def @func_1487() -> Tensor[(4, 2, 4), float64] {
  %596 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %596.0
}

def @func_4387(%var_4383: Tensor[(330), uint16]) -> (Tensor[(4, 2, 4), float64], Tensor[(11, 5, 6), uint16], Tensor[(330), uint16]) {
  %597 = cast(%var_4383, dtype="uint16") /* ty=Tensor[(330), uint16] */;
  %598 = reshape(%597, newshape=[11, 5, 6]) /* ty=Tensor[(11, 5, 6), uint16] */;
  %599 = @func_3311(%598) /* ty=(Tensor[(11, 5, 6), uint16], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %600 = @func_2760() /* ty=Tensor[(4, 2, 4), float64] */;
  %601 = %599.0;
  (%600, %601, %var_4383)
}

def @func_7867() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), uint8], Tensor[(4, 8, 14), int64], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), uint16], Tensor[(4, 8, 14), float32]) {
  %602 = @func_4267() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) */;
  %603 = @func_5727() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
  %604 = %603.2;
  %605 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 8, 14), float32] */, dtype="uint8") /* ty=Tensor[(4, 8, 14), uint8] */;
  %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%604, dtype="uint8") /* ty=Tensor[(4, 8, 14), uint8] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %609 = cast(%604, dtype="int64") /* ty=Tensor[(4, 8, 14), int64] */;
  %610 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(4, 8, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 8, 14), float32] */, dtype="int64") /* ty=Tensor[(4, 8, 14), int64] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %613 = @func_4014() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %614 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 8, 14), float32] */, dtype="uint16") /* ty=Tensor[(4, 8, 14), uint16] */;
  %615 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%604, dtype="uint16") /* ty=Tensor[(4, 8, 14), uint16] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %618 = @func_4491() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %619 = %602.3;
  %620 = logical_xor(%607, %608) /* ty=Tensor[(4, 8, 14), uint8] */;
  %621 = maximum(%611, %612) /* ty=Tensor[(4, 8, 14), int64] */;
  %622 = %613.0;
  %623 = bitwise_xor(%616, %617) /* ty=Tensor[(4, 8, 14), uint16] */;
  %624 = %618.0;
  (%619, %620, %621, %622, %623, %624)
}

def @func_2793() -> (Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(4, 2, 4), float64]) {
  %625 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %626 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
  %627 = %625.0;
  %628 = %626.2;
  %629 = @func_1870() /* ty=Tensor[(4, 2, 4), float64] */;
  (%627, %628, %629)
}

def @func_7072() -> (Tensor[(4, 2, 4), float64],) {
  %630 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %631 = %630.0;
  (%631,)
}

def @func_3267(%var_3262: Tensor[(4, 15, 1), float32]) -> (Tensor[(4, 15, 1), float32],) {
  %632 = cast(%var_3262, dtype="float32") /* ty=Tensor[(4, 15, 1), float32] */;
  %633 = exp(%632) /* ty=Tensor[(4, 15, 1), float32] */;
  (%633,)
}

def @func_1229(%var_1216: Tensor[(4, 8, 14), bool], %var_1217: Tensor[(4, 8, 14), bool]) -> Tensor[(4, 8, 14), bool] {
  %634 = cast(%var_1217, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
  %635 = shape_of(%var_1216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(%var_1216, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%636, %637) /* ty=Tensor[(4, 8, 14), bool] */
}

def @func_2577(%var_2530: Tensor[(13, 4, 16), uint64], %var_2531: Tensor[(13, 4, 16), uint64], %var_2541: Tensor[(1638), float64]) -> (Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(13, 4, 16), float64], Tensor[(4, 2, 4), float64]) {
  %638 = cast(%var_2541, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %639 = reshape(%638, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %640 = @func_1070(%639) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %641 = cast(%var_2531, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
  %642 = shape_of(%var_2530, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%var_2530, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %645 = less_equal(%643, %644) /* ty=Tensor[(13, 4, 16), bool] */;
  %646 = cast(%var_2531, dtype="float32") /* ty=Tensor[(13, 4, 16), float32] */;
  %647 = log(%646) /* ty=Tensor[(13, 4, 16), float32] */;
  %648 = cast(%647, dtype="float64") /* ty=Tensor[(13, 4, 16), float64] */;
  %649 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%645, dtype="float64") /* ty=Tensor[(13, 4, 16), float64] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %652 = %640.0;
  %653 = floor_divide(%650, %651) /* ty=Tensor[(13, 4, 16), float64] */;
  %654 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%652, %var_2541, %653, %654)
}

def @func_3976() -> (Tensor[(4, 2, 4), float64],) {
  %655 = @func_3680() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %656 = %655.0;
  (%656,)
}

def @func_3921() -> (Tensor[(4, 2, 4), float64],) {
  %657 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%657,)
}

def @func_5246() -> Tensor[(4, 2, 4), bool] {
  %658 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %658.0
}

def @func_2836(%var_2822: Tensor[(7, 9, 12), float64], %var_2827: Tensor[(1638), float64]) -> (Tensor[(13, 4, 16), float64], Tensor[(832), uint64], Tensor[(1638), float64], Tensor[(7, 9, 12), bool]) {
  %659 = cast(meta[relay.Constant][29] /* ty=Tensor[(832), uint64] */, dtype="uint64") /* ty=Tensor[(832), uint64] */;
  %660 = cast(meta[relay.Constant][29] /* ty=Tensor[(832), uint64] */, dtype="uint64") /* ty=Tensor[(832), uint64] */;
  %661 = cast(%var_2827, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %662 = reshape(%659, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), uint64] */;
  %663 = reshape(%660, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), uint64] */;
  %664 = reshape(%661, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %665 = @func_2577(%662, %663, %664) /* ty=(Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(13, 4, 16), float64], Tensor[(4, 2, 4), float64]) */;
  %666 = cast(%var_2822, dtype="float64") /* ty=Tensor[(7, 9, 12), float64] */;
  %667 = sigmoid(%666) /* ty=Tensor[(7, 9, 12), float64] */;
  %668 = cast(%var_2822, dtype="bool") /* ty=Tensor[(7, 9, 12), bool] */;
  %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%667, dtype="bool") /* ty=Tensor[(7, 9, 12), bool] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %672 = %665.2;
  %673 = less_equal(%670, %671) /* ty=Tensor[(7, 9, 12), bool] */;
  (%672, meta[relay.Constant][29] /* ty=Tensor[(832), uint64] */, %var_2827, %673)
}

def @func_5618(%var_5568: Tensor[(1, 14), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(560), int32], Tensor[(1, 14), int32], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(448), bool]) {
  %674 = @func_4046() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(48), float32]) */;
  %675 = cast(meta[relay.Constant][30] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %676 = reshape(%675, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %677 = @func_1070(%676) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %678 = cast(%var_5568, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
  %679 = reshape(%678, newshape=[1, 14]) /* ty=Tensor[(1, 14), int32] */;
  %680 = @func_4993(%679) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) */;
  %681 = @func_2879() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %682 = @func_2879() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %683 = @func_2741() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %684 = @func_4458() /* ty=(Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64]) */;
  %685 = @func_5141() /* ty=(Tensor[(448), bool],) */;
  %686 = %674.1;
  %687 = %677.0;
  %688 = %680.3;
  %689 = @func_3040() /* ty=Tensor[(448), bool] */;
  %690 = %681.0;
  %691 = %682.0;
  %692 = %683.3;
  %693 = %684.1;
  %694 = %685.0;
  (%686, %687, meta[relay.Constant][30] /* ty=Tensor[(1638), float64] */, %688, %var_5568, %689, %690, %691, %692, %693, %694)
}

def @func_2521() -> (Tensor[(4, 2, 4), float64],) {
  %695 = @func_1870() /* ty=Tensor[(4, 2, 4), float64] */;
  %696 = cast(%695, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
  %697 = atan(%696) /* ty=Tensor[(4, 2, 4), float64] */;
  (%697,)
}

def @func_7515(%var_7485: Tensor[(3, 7, 16), bool]) -> (Tensor[(4, 8, 14), float32], Tensor[(3, 7, 16), float32], Tensor[(4, 2, 4), float64]) {
  %698 = @func_5252() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %699 = cast(%var_7485, dtype="bool") /* ty=Tensor[(3, 7, 16), bool] */;
  %700 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(3, 7, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 7, 16), bool] */, dtype="bool") /* ty=Tensor[(3, 7, 16), bool] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %703 = logical_and(%701, %702) /* ty=Tensor[(3, 7, 16), bool] */;
  %704 = cast(%703, dtype="float32") /* ty=Tensor[(3, 7, 16), float32] */;
  %705 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %706 = %698.0;
  %707 = acosh(%704) /* ty=Tensor[(3, 7, 16), float32] */;
  %708 = %705.0;
  (%706, %707, %708)
}

def @func_7414() -> (Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64]) {
  %709 = @func_6729() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %710 = @func_5893() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %711 = %709.0;
  %712 = %710.1;
  (%711, %712)
}

def @func_8166(%var_8161: Tensor[(8, 70), int16]) -> (Tensor[(4, 2, 4), bool], Tensor[(8, 70), uint64]) {
  %713 = @func_5871() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(448), bool]) */;
  %714 = @func_4190() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, 70), int16], Tensor[(560), float32], Tensor[(4, 2, 4), float64]) */;
  %715 = %714.1;
  %716 = cast(%var_8161, dtype="uint64") /* ty=Tensor[(8, 70), uint64] */;
  %717 = shape_of(%715, dtype="int32") /* ty=Tensor[(2), int32] */;
  %718 = cast(%715, dtype="uint64") /* ty=Tensor[(8, 70), uint64] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %720 = %713.0;
  %721 = maximum(%718, %719) /* ty=Tensor[(8, 70), uint64] */;
  (%720, %721)
}

def @func_1870() -> Tensor[(4, 2, 4), float64] {
  @func_1487() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_4083(%var_4063: Tensor[(4, 2, 4), bool]) -> (Tensor[(4, 2, 4), bool], Tensor[(448), bool]) {
  %722 = @func_3180() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %723 = %722.1;
  %724 = cast(%var_4063, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%723, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %728 = @func_2960() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */;
  %729 = greater(%726, %727) /* ty=Tensor[(4, 2, 4), bool] */;
  %730 = %728.0;
  (%729, %730)
}

def @func_4046() -> (Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(48), float32]) {
  %731 = @func_2879() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %732 = cast(meta[relay.Constant][32] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %733 = reshape(%732, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
  %734 = @func_3040() /* ty=Tensor[(448), bool] */;
  %735 = %731.0;
  %736 = @func_212(%733) /* ty=Tensor[(8, ?, 6), float64] */;
  (%734, %735, %736, meta[relay.Constant][32] /* ty=Tensor[(48), float32] */)
}

def @func_4014() -> (Tensor[(4, 2, 4), float64],) {
  %737 = @func_3729() /* ty=Tensor[(4, 2, 4), float64] */;
  (%737,)
}

def @func_4754(%var_4742: Tensor[(8, 2, 6), float64]) -> Tensor[(8, 2, 6), bool] {
  %738 = cast(%var_4742, dtype="float64") /* ty=Tensor[(8, 2, 6), float64] */;
  %739 = log(%738) /* ty=Tensor[(8, 2, 6), float64] */;
  %740 = cast(%739, dtype="bool") /* ty=Tensor[(8, 2, 6), bool] */;
  %741 = shape_of(%var_4742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%var_4742, dtype="bool") /* ty=Tensor[(8, 2, 6), bool] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%742, %743) /* ty=Tensor[(8, 2, 6), bool] */
}

def @func_5884() -> (Tensor[(4, 2, 4), float64],) {
  %744 = @func_3534() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
  %745 = %744.0;
  (%745,)
}

def @func_4643() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  %746 = @func_3976() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %747 = @func_2869() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %748 = %746.0;
  %749 = %747.0;
  (%748, %749)
}

def @func_5429(%var_5422: Tensor[(1638), float64]) -> (Tensor[(448), bool], Tensor[(4, 8, 14), bool], Tensor[(14, 13, 9), float64], Tensor[(1638), float64]) {
  %750 = @func_2960() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */;
  %751 = %750.0;
  %752 = cast(%751, dtype="bool") /* ty=Tensor[(448), bool] */;
  %753 = cast(%751, dtype="bool") /* ty=Tensor[(448), bool] */;
  %754 = reshape(%752, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %755 = reshape(%753, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %756 = cast(%var_5422, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %757 = reshape(%756, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %758 = @func_1070(%757) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %759 = @func_1229(%754, %755) /* ty=Tensor[(4, 8, 14), bool] */;
  %760 = %758.0;
  (%751, %759, %760, %var_5422)
}

def @func_4423(%var_4414: int8, %var_4415: Tensor[(9, 11, 13), int8]) -> Tensor[(9, 11, 13), int8] {
  %761 = cast(%var_4414, dtype="int8") /* ty=int8 */;
  %762 = cast(%var_4415, dtype="int8") /* ty=Tensor[(9, 11, 13), int8] */;
  bitwise_or(%761, %762) /* ty=Tensor[(9, 11, 13), int8] */
}

def @func_3617() -> (Tensor[(4, 8, 14), float32],) {
  %763 = @func_3534() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
  %764 = %763.1;
  (%764,)
}

def @func_5410() -> (Tensor[(448), bool], Tensor[(448), bool], Tensor[(448), bool]) {
  %765 = @func_5177() /* ty=(Tensor[(448), bool],) */;
  %766 = @func_3216() /* ty=Tensor[(448), bool] */;
  %767 = @func_3216() /* ty=Tensor[(448), bool] */;
  %768 = %765.0;
  (%766, %767, %768)
}

def @func_4458() -> (Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64]) {
  %769 = @func_3534() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
  %770 = %769.1;
  %771 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%770, %771)
}

def @func_6687() -> (Tensor[(48), float32], Tensor[(4, 2, 4), float64]) {
  %772 = @func_5469() /* ty=Tensor[(48), float32] */;
  %773 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%772, %773)
}

def @func_4574() -> Tensor[(4, 2, 4), bool] {
  %774 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %774.0
}

def @func_8026() -> Tensor[(4, 2, 4), float64] {
  %775 = @func_2521() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %775.0
}

def @func_5469() -> Tensor[(48), float32] {
  %776 = @func_4046() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(48), float32]) */;
  %776.3
}

def @func_4491() -> (Tensor[(4, 8, 14), float32],) {
  %777 = @func_3617() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %778 = %777.0;
  (%778,)
}

def @func_533(%var_519: Tensor[(13, 15, 11), int16], %var_520: Tensor[(13, 15, 11), int16], %var_529: Tensor[(560), int32]) -> (Tensor[(13, 15, 11), int16], Tensor[(8, ?, 6), float64], Tensor[(14, 1), int32], Tensor[(560), int32]) {
  %779 = cast(%var_520, dtype="int16") /* ty=Tensor[(13, 15, 11), int16] */;
  %780 = shape_of(%var_519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%var_519, dtype="int16") /* ty=Tensor[(13, 15, 11), int16] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %783 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 1), int32] */, dtype="int32") /* ty=Tensor[(14, 1), int32] */;
  %784 = cast(%var_529, dtype="int32") /* ty=Tensor[(560), int32] */;
  %785 = reshape(%783, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), int32] */;
  %786 = reshape(%784, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int32] */;
  %787 = @func_483(%785, %786) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */;
  %788 = add(%781, %782) /* ty=Tensor[(13, 15, 11), int16] */;
  %789 = %787.1;
  (%788, %789, meta[relay.Constant][33] /* ty=Tensor[(14, 1), int32] */, %var_529)
}

def @func_2869() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  %790 = @func_1788() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %791 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %792 = %790.0;
  %793 = %791.0;
  (%792, %793)
}

def @func_4267() -> (Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) {
  %794 = @func_3680() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %795 = cast(meta[relay.Constant][34] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %796 = reshape(%795, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %797 = @func_1070(%796) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %798 = @func_4190() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, 70), int16], Tensor[(560), float32], Tensor[(4, 2, 4), float64]) */;
  %799 = %794.0;
  %800 = %797.0;
  %801 = %798.3;
  (%799, %800, meta[relay.Constant][34] /* ty=Tensor[(1638), float64] */, %801)
}

def @func_2335(%var_2254: Tensor[(8, 70), float32], %var_2315: Tensor[(8, 70), float64]) -> (Tensor[(4, 2, 4), bool], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(8, 70), int16], Tensor[(8, ?, 6), float64], Tensor[(8, 70), float32], Tensor[(8, 70), bool], Tensor[(8, 70), int16], Tensor[(14, 1), int32], Tensor[(2145), int16], Tensor[(4, 2, 4), float64]) {
  %802 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %803 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 14), int32] */, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
  %804 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 70), int32] */, dtype="int32") /* ty=Tensor[(8, 70), int32] */;
  %805 = reshape(%803, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), int32] */;
  %806 = reshape(%804, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int32] */;
  %807 = @func_483(%805, %806) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */;
  %808 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 70), int32] */, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %809 = sqrt(%808) /* ty=Tensor[(8, 70), float32] */;
  %810 = cast(%var_2254, dtype="int16") /* ty=Tensor[(8, 70), int16] */;
  %811 = shape_of(%809, dtype="int32") /* ty=Tensor[(2), int32] */;
  %812 = cast(%809, dtype="int16") /* ty=Tensor[(8, 70), int16] */;
  %813 = dyn.reshape(%810, %811, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %814 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 14), int32] */, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
  %815 = reshape(%814, newshape=[1, 14]) /* ty=Tensor[(1, 14), int32] */;
  %816 = @func_2061(%815) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) */;
  %817 = cast(%809, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %818 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(8, 70), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %819 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 70), int32] */, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %821 = cast(%809, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %822 = log(%821) /* ty=Tensor[(8, 70), float32] */;
  %823 = cast(%822, dtype="float64") /* ty=Tensor[(8, 70), float64] */;
  %824 = exp(%823) /* ty=Tensor[(8, 70), float64] */;
  %825 = cast(%var_2315, dtype="bool") /* ty=Tensor[(8, 70), bool] */;
  %826 = shape_of(%824, dtype="int32") /* ty=Tensor[(2), int32] */;
  %827 = cast(%824, dtype="bool") /* ty=Tensor[(8, 70), bool] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %829 = cast(%822, dtype="int16") /* ty=Tensor[(8, 70), int16] */;
  %830 = shape_of(%809, dtype="int32") /* ty=Tensor[(2), int32] */;
  %831 = cast(%809, dtype="int16") /* ty=Tensor[(8, 70), int16] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %833 = cast(meta[relay.Constant][37] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %834 = cast(meta[relay.Constant][37] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %835 = cast(%822, dtype="int32") /* ty=Tensor[(8, 70), int32] */;
  %836 = reshape(%833, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
  %837 = reshape(%834, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
  %838 = reshape(%835, newshape=[560]) /* ty=Tensor[(560), int32] */;
  %839 = @func_533(%836, %837, %838) /* ty=(Tensor[(13, 15, 11), int16], Tensor[(8, ?, 6), float64], Tensor[(14, 1), int32], Tensor[(560), int32]) */;
  %840 = %802.1;
  %841 = %807.3;
  %842 = multiply(%812, %813) /* ty=Tensor[(8, 70), int16] */;
  %843 = %816.1;
  %844 = power(%819, %820) /* ty=Tensor[(8, 70), float32] */;
  %845 = equal(%827, %828) /* ty=Tensor[(8, 70), bool] */;
  %846 = add(%831, %832) /* ty=Tensor[(8, 70), int16] */;
  %847 = %839.2;
  %848 = @func_1870() /* ty=Tensor[(4, 2, 4), float64] */;
  (%840, %841, meta[relay.Constant][35] /* ty=Tensor[(1, 14), int32] */, %842, %843, %844, %845, %846, %847, meta[relay.Constant][37] /* ty=Tensor[(2145), int16] */, %848)
}

def @func_6436(%var_6394: Tensor[(1638), float64], %var_6430: Tensor[(980), uint16]) -> (Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), bool], Tensor[(560), float32], Tensor[(4, 2, 4), float64], Tensor[(980), uint64]) {
  %849 = @func_4643() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %850 = cast(meta[relay.Constant][38] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %851 = cast(%var_6394, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %852 = cast(meta[relay.Constant][38] /* ty=Tensor[(980), uint16] */, dtype="float64") /* ty=Tensor[(980), float64] */;
  %853 = reshape(%850, newshape=[7, 10, 14]) /* ty=Tensor[(7, 10, 14), uint16] */;
  %854 = reshape(%851, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %855 = reshape(%852, newshape=[7, 10, 14]) /* ty=Tensor[(7, 10, 14), float64] */;
  %856 = @func_1717(%853, %854, %855) /* ty=(Tensor[(7, 10, 14), uint16], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(2145), int16], Tensor[(560), int32], Tensor[(7, 10, 14), float32], Tensor[(448), bool], Tensor[(7, 10, 14), float32]) */;
  %857 = @func_6296() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(2640), int8], Tensor[(4, 2, 4), float32]) */;
  %858 = cast(meta[relay.Constant][39] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
  %859 = cast(meta[relay.Constant][39] /* ty=Tensor[(560), float32] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %860 = reshape(%858, newshape=[8, 70]) /* ty=Tensor[(8, 70), float32] */;
  %861 = reshape(%859, newshape=[8, 70]) /* ty=Tensor[(8, 70), float64] */;
  %862 = @func_2335(%860, %861) /* ty=(Tensor[(4, 2, 4), bool], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(8, 70), int16], Tensor[(8, ?, 6), float64], Tensor[(8, 70), float32], Tensor[(8, 70), bool], Tensor[(8, 70), int16], Tensor[(14, 1), int32], Tensor[(2145), int16], Tensor[(4, 2, 4), float64]) */;
  %863 = @func_3680() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %864 = cast(%var_6430, dtype="uint64") /* ty=Tensor[(980), uint64] */;
  %865 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(980), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %866 = cast(meta[relay.Constant][38] /* ty=Tensor[(980), uint16] */, dtype="uint64") /* ty=Tensor[(980), uint64] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %868 = %849.0;
  %869 = %856.8;
  %870 = %857.0;
  %871 = %862.0;
  %872 = %863.0;
  %873 = bitwise_xor(%866, %867) /* ty=Tensor[(980), uint64] */;
  (%868, %869, %var_6394, %870, %871, meta[relay.Constant][39] /* ty=Tensor[(560), float32] */, %872, %873)
}

def @func_8288(%var_8221: Tensor[(96), float64], %var_8227: Tensor[(336), bool]) -> (Tensor[(4, 8, 14), float32], bool, Tensor[(40, 12), bool], Tensor[(448), bool], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(4, 2, 4), float64], Tensor[(336), bool], Tensor[(4, 2, 4), float64], Tensor[(15, 2, 16), float32], Tensor[(4, 2, 4), float64]) {
  %874 = @func_5252() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %875 = cast(%var_8221, dtype="float64") /* ty=Tensor[(96), float64] */;
  %876 = reshape(%875, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float64] */;
  %877 = cast(%var_8227, dtype="bool") /* ty=Tensor[(336), bool] */;
  %878 = reshape(%877, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), bool] */;
  %879 = @func_7515(%878) /* ty=(Tensor[(4, 8, 14), float32], Tensor[(3, 7, 16), float32], Tensor[(4, 2, 4), float64]) */;
  %880 = @func_4267() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) */;
  %881 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %882 = cast(meta[relay.Constant][40] /* ty=Tensor[(40, 12), bool] */, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
  %883 = reshape(%881, newshape=[]) /* ty=bool */;
  %884 = reshape(%882, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), bool] */;
  %885 = @func_5988(%883, %884) /* ty=Tensor[(15, 2, 16), bool] */;
  %886 = cast(%885, dtype="float32") /* ty=Tensor[(15, 2, 16), float32] */;
  %887 = %874.0;
  %888 = @func_7428() /* ty=Tensor[(448), bool] */;
  %889 = @func_4754(%876) /* ty=Tensor[(8, 2, 6), bool] */;
  %890 = %879.2;
  %891 = %880.3;
  %892 = sigmoid(%886) /* ty=Tensor[(15, 2, 16), float32] */;
  %893 = @func_1884() /* ty=Tensor[(4, 2, 4), float64] */;
  (%887, True /* ty=bool */, meta[relay.Constant][40] /* ty=Tensor[(40, 12), bool] */, %888, %889, %var_8221, %890, %var_8227, %891, %892, %893)
}

def @main(%var_8310: Tensor[(5, 9, 16), int64], %var_8311: Tensor[(5, 9, 16), int64]) -> (Tensor[(4, 2, 4), float64], Tensor[(11, 5, 6), uint16], Tensor[(330), uint16], Tensor[(5, 9, 16), uint8]) {
  %894 = cast(meta[relay.Constant][41] /* ty=Tensor[(330), uint16] */, dtype="uint16") /* ty=Tensor[(330), uint16] */;
  %895 = reshape(%894, newshape=[11, 5, 6]) /* ty=Tensor[(11, 5, 6), uint16] */;
  %896 = @func_3311(%895) /* ty=(Tensor[(11, 5, 6), uint16], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %897 = cast(%var_8311, dtype="int64") /* ty=Tensor[(5, 9, 16), int64] */;
  %898 = shape_of(%var_8310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%var_8310, dtype="int64") /* ty=Tensor[(5, 9, 16), int64] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %901 = bitwise_or(%899, %900) /* ty=Tensor[(5, 9, 16), int64] */;
  %902 = cast(%var_8311, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %903 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(%901, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %906 = power(%904, %905) /* ty=Tensor[(5, 9, 16), float32] */;
  %907 = cast(%906, dtype="uint8") /* ty=Tensor[(5, 9, 16), uint8] */;
  %908 = shape_of(%var_8311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(%var_8311, dtype="uint8") /* ty=Tensor[(5, 9, 16), uint8] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %911 = @func_7239() /* ty=Tensor[(4, 2, 4), float64] */;
  %912 = %896.0;
  %913 = left_shift(%909, %910) /* ty=Tensor[(5, 9, 16), uint8] */;
  (%911, %912, meta[relay.Constant][41] /* ty=Tensor[(330), uint16] */, %913)
}

def @func_6625() -> Tensor[(4, 8, 14), float64] {
  %914 = @func_3534() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
  %915 = %914.1;
  %916 = cast(%915, dtype="float64") /* ty=Tensor[(4, 8, 14), float64] */;
  sqrt(%916) /* ty=Tensor[(4, 8, 14), float64] */
}

def @func_2096() -> (Tensor[(4, 2, 4), float64],) {
  %917 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%917,)
}

def @func_4365(%var_4305: Tensor[(8, 1, 9), float64], %var_4330: Tensor[(60), float32], %var_4351: Tensor[(1, 48), float32]) -> (Tensor[(8, 1, 9), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(8, ?, 6), float64], Tensor[(1, 48), float32], Tensor[(12, 5, ?), float32]) {
  %918 = cast(%var_4305, dtype="float64") /* ty=Tensor[(8, 1, 9), float64] */;
  %919 = @func_2869() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %920 = cast(%var_4330, dtype="float32") /* ty=Tensor[(60), float32] */;
  %921 = reshape(%920, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
  %922 = @func_3267(%921) /* ty=(Tensor[(4, 15, 1), float32],) */;
  %923 = cast(%var_4351, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
  %924 = reshape(%923, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
  %925 = cast(%var_4330, dtype="float32") /* ty=Tensor[(60), float32] */;
  %926 = reshape(%925, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
  %927 = erf(%918) /* ty=Tensor[(8, 1, 9), float64] */;
  %928 = %919.0;
  %929 = %922.0;
  %930 = @func_212(%924) /* ty=Tensor[(8, ?, 6), float64] */;
  %931 = @func_3808(%926) /* ty=Tensor[(12, 5, ?), float32] */;
  (%927, %928, %929, %var_4330, %930, %var_4351, %931)
}

def @func_5252() -> (Tensor[(4, 8, 14), float32],) {
  %932 = @func_4491() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %933 = %932.0;
  (%933,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4596() -> Tensor[(448), bool] {
  @func_4594() /* ty=Tensor[(448), bool] */
}

def @func_486(%var_484: Tensor[(14, 1, 1), int32], %var_485: Tensor[(14, 8, 5), int32]) -> (Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) {
  %11 = fn (%var_461: Tensor[(14, 1, 1), int32], %var_462: Tensor[(14, 8, 5), int32]) -> (Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) {
    %0 = cast(%var_461, dtype="int32") /* ty=Tensor[(14, 1, 1), int32] */;
    %1 = cast(%var_462, dtype="int32") /* ty=Tensor[(14, 8, 5), int32] */;
    %2 = maximum(%0, %1) /* ty=Tensor[(14, 8, 5), int32] */;
    %3 = cast(%2, dtype="float32") /* ty=Tensor[(14, 8, 5), float32] */;
    %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(48, 1), float32] */, dtype="float32") /* ty=Tensor[(48, 1), float32] */;
    %5 = reshape(%4, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
    %6 = @func_212(%5) /* ty=Tensor[(8, ?, 6), float64] */;
    %7 = cast(%6, dtype="float32") /* ty=Tensor[(8, ?, 6), float32] */;
    %8 = reshape(%7, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
    %9 = rsqrt(%3) /* ty=Tensor[(14, 8, 5), float32] */;
    %10 = @func_212(%8) /* ty=Tensor[(8, ?, 6), float64] */;
    (%9, %6, meta[relay.Constant][0] /* ty=Tensor[(48, 1), float32] */, %10)
  };
  %11(%var_484, %var_485) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */
}

def @func_2187(%var_2181: Tensor[(1, 48), float32]) -> (Tensor[(4, 8, 14), bool], Tensor[(4, 8, 14), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 48), float32]) {
  %12 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
  %13 = %12.1;
  %14 = cast(%13, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
  %15 = cast(%13, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
  %16 = reshape(%14, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %17 = reshape(%15, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %18 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %19 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %20 = @func_2096() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %21 = cast(%var_2181, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
  %22 = reshape(%21, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
  %23 = @func_1229(%16, %17) /* ty=Tensor[(4, 8, 14), bool] */;
  %24 = %18.0;
  %25 = %19.0;
  %26 = %20.0;
  %27 = @func_212(%22) /* ty=Tensor[(8, ?, 6), float64] */;
  (%13, %23, %24, %25, %26, %27, %var_2181)
}

def @func_4047() -> (Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(48), float32]) {
  %34 = fn () -> (Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(48), float32]) {
    %28 = @func_2879() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
    %30 = reshape(%29, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
    %31 = @func_3040() /* ty=Tensor[(448), bool] */;
    %32 = %28.0;
    %33 = @func_212(%30) /* ty=Tensor[(8, ?, 6), float64] */;
    (%31, %32, %33, meta[relay.Constant][1] /* ty=Tensor[(48), float32] */)
  };
  %34() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(48), float32]) */
}

def @func_2098() -> (Tensor[(4, 2, 4), float64],) {
  @func_2096() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_2061(%var_2045: Tensor[(1, 14), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) {
  %35 = cast(%var_2045, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
  %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %37 = reshape(%35, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), int32] */;
  %38 = reshape(%36, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int32] */;
  %39 = @func_483(%37, %38) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */;
  %40 = @func_1884() /* ty=Tensor[(4, 2, 4), float64] */;
  %41 = %39.1;
  (%40, %41, %var_2045, meta[relay.Constant][2] /* ty=Tensor[(560), int32] */)
}

def @func_3269(%var_3268: Tensor[(4, 15, 1), float32]) -> (Tensor[(4, 15, 1), float32],) {
  %44 = fn (%var_3262: Tensor[(4, 15, 1), float32]) -> (Tensor[(4, 15, 1), float32],) {
    %42 = cast(%var_3262, dtype="float32") /* ty=Tensor[(4, 15, 1), float32] */;
    %43 = exp(%42) /* ty=Tensor[(4, 15, 1), float32] */;
    (%43,)
  };
  %44(%var_3268) /* ty=(Tensor[(4, 15, 1), float32],) */
}

def @func_1411(%var_1398: Tensor[(3, 13, 4), int64], %var_1399: Tensor[(3, 13, 4), int64]) -> (Tensor[(3, 13, 4), bool],) {
  %45 = cast(%var_1399, dtype="bool") /* ty=Tensor[(3, 13, 4), bool] */;
  %46 = shape_of(%var_1398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(%var_1398, dtype="bool") /* ty=Tensor[(3, 13, 4), bool] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %49 = not_equal(%47, %48) /* ty=Tensor[(3, 13, 4), bool] */;
  (%49,)
}

def @func_1070(%var_1050: Tensor[(14, 13, 9), float64]) -> (Tensor[(14, 13, 9), float64],) {
  %50 = cast(%var_1050, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %51 = sqrt(%50) /* ty=Tensor[(14, 13, 9), float64] */;
  (%51,)
}

def @func_2649(%var_2647: Tensor[(980), uint16], %var_2648: Tensor[(1638), float64]) -> (Tensor[(15, 4, 10), uint32], Tensor[(4, 2, 4), float64], Tensor[(7, 10, 14), float32], Tensor[(980), uint16], Tensor[(1638), float64]) {
  %67 = fn (%var_2642: Tensor[(980), uint16], %var_2643: Tensor[(1638), float64]) -> (Tensor[(15, 4, 10), uint32], Tensor[(4, 2, 4), float64], Tensor[(7, 10, 14), float32], Tensor[(980), uint16], Tensor[(1638), float64]) {
    %52 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 4, 10), uint32] */, dtype="uint32") /* ty=Tensor[(15, 4, 10), uint32] */;
    %53 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(15, 4, 10), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %54 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 4, 10), uint32] */, dtype="uint32") /* ty=Tensor[(15, 4, 10), uint32] */;
    %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %56 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %57 = cast(%var_2642, dtype="uint16") /* ty=Tensor[(980), uint16] */;
    %58 = cast(%var_2643, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %59 = cast(%var_2642, dtype="float64") /* ty=Tensor[(980), float64] */;
    %60 = reshape(%57, newshape=[7, 10, 14]) /* ty=Tensor[(7, 10, 14), uint16] */;
    %61 = reshape(%58, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %62 = reshape(%59, newshape=[7, 10, 14]) /* ty=Tensor[(7, 10, 14), float64] */;
    %63 = @func_1717(%60, %61, %62) /* ty=(Tensor[(7, 10, 14), uint16], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(2145), int16], Tensor[(560), int32], Tensor[(7, 10, 14), float32], Tensor[(448), bool], Tensor[(7, 10, 14), float32]) */;
    %64 = bitwise_and(%54, %55) /* ty=Tensor[(15, 4, 10), uint32] */;
    %65 = %56.0;
    %66 = %63.9;
    (%64, %65, %66, %var_2642, %var_2643)
  };
  %67(%var_2647, %var_2648) /* ty=(Tensor[(15, 4, 10), uint32], Tensor[(4, 2, 4), float64], Tensor[(7, 10, 14), float32], Tensor[(980), uint16], Tensor[(1638), float64]) */
}

def @func_1608() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) {
  %68 = cast(meta[relay.Constant][5] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %69 = cast(meta[relay.Constant][5] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %70 = reshape(%68, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %71 = reshape(%69, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %72 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  %73 = @func_1229(%70, %71) /* ty=Tensor[(4, 8, 14), bool] */;
  (%72, %73, meta[relay.Constant][5] /* ty=Tensor[(448), bool] */)
}

def @func_3978() -> (Tensor[(4, 2, 4), float64],) {
  @func_3976() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_4108(%var_4106: Tensor[(14), int32], %var_4107: Tensor[(1, 560), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(48, 1), float32], Tensor[(14), int32], Tensor[(1, 560), int32]) {
  %82 = fn (%var_4098: Tensor[(14), int32], %var_4099: Tensor[(1, 560), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(48, 1), float32], Tensor[(14), int32], Tensor[(1, 560), int32]) {
    %74 = @func_3921() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %75 = cast(%var_4098, dtype="int32") /* ty=Tensor[(14), int32] */;
    %76 = cast(%var_4099, dtype="int32") /* ty=Tensor[(1, 560), int32] */;
    %77 = reshape(%75, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), int32] */;
    %78 = reshape(%76, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int32] */;
    %79 = @func_483(%77, %78) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */;
    %80 = %74.0;
    %81 = %79.2;
    (%80, %81, %var_4098, %var_4099)
  };
  %82(%var_4106, %var_4107) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(48, 1), float32], Tensor[(14), int32], Tensor[(1, 560), int32]) */
}

def @func_5178() -> (Tensor[(448), bool],) {
  %84 = fn () -> (Tensor[(448), bool],) {
    %83 = @func_4594() /* ty=Tensor[(448), bool] */;
    (%83,)
  };
  %84() /* ty=(Tensor[(448), bool],) */
}

def @func_6688() -> (Tensor[(48), float32], Tensor[(4, 2, 4), float64]) {
  %87 = fn () -> (Tensor[(48), float32], Tensor[(4, 2, 4), float64]) {
    %85 = @func_5469() /* ty=Tensor[(48), float32] */;
    %86 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
    (%85, %86)
  };
  %87() /* ty=(Tensor[(48), float32], Tensor[(4, 2, 4), float64]) */
}

def @func_5854(%var_5850: int32, %var_5851: Tensor[(7, 13, 11), int32], %var_5852: Tensor[(15, 4), float32], %var_5853: Tensor[(1, 14), int32]) -> (Tensor[(7, 13, 11), int32], Tensor[(12, 5, ?), float32], Tensor[(15, 4), float32], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(40, 14), int32], Tensor[(8, ?, 6), float64]) {
  @func_5848(%var_5850, %var_5851, %var_5852, %var_5853) /* ty=(Tensor[(7, 13, 11), int32], Tensor[(12, 5, ?), float32], Tensor[(15, 4), float32], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(40, 14), int32], Tensor[(8, ?, 6), float64]) */
}

def @func_7416() -> (Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64]) {
  @func_7414() /* ty=(Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64]) */
}

def @func_2521() -> (Tensor[(4, 2, 4), float64],) {
  %88 = @func_1870() /* ty=Tensor[(4, 2, 4), float64] */;
  %89 = cast(%88, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
  %90 = atan(%89) /* ty=Tensor[(4, 2, 4), float64] */;
  (%90,)
}

def @func_7275(%var_7249: Tensor[(8, 5, 3), float32]) -> (Tensor[(8, 5, 3), float32], Tensor[(8, 5, 3), float32]) {
  %91 = cast(%var_7249, dtype="float32") /* ty=Tensor[(8, 5, 3), float32] */;
  %92 = sin(%91) /* ty=Tensor[(8, 5, 3), float32] */;
  %93 = cast(%var_7249, dtype="float32") /* ty=Tensor[(8, 5, 3), float32] */;
  %94 = shape_of(%92, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%92, dtype="float32") /* ty=Tensor[(8, 5, 3), float32] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %97 = cast(%92, dtype="float32") /* ty=Tensor[(8, 5, 3), float32] */;
  %98 = mod(%95, %96) /* ty=Tensor[(8, 5, 3), float32] */;
  %99 = acos(%97) /* ty=Tensor[(8, 5, 3), float32] */;
  (%98, %99)
}

def @func_4724(%var_4722: Tensor[(1, 980), uint16]) -> (Tensor[(14, 13, 9), float64], Tensor[(1, 1638), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(1, 980), uint16], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  @func_4721(%var_4722) /* ty=(Tensor[(14, 13, 9), float64], Tensor[(1, 1638), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(1, 980), uint16], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */
}

def @main(%var_8310: Tensor[(5, 9, 16), int64], %var_8311: Tensor[(5, 9, 16), int64]) -> (Tensor[(4, 2, 4), float64], Tensor[(11, 5, 6), uint16], Tensor[(330), uint16], Tensor[(5, 9, 16), uint8]) {
  %100 = cast(meta[relay.Constant][6] /* ty=Tensor[(330), uint16] */, dtype="uint16") /* ty=Tensor[(330), uint16] */;
  %101 = reshape(%100, newshape=[11, 5, 6]) /* ty=Tensor[(11, 5, 6), uint16] */;
  %102 = @func_3314(%101) /* ty=(Tensor[(11, 5, 6), uint16], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %103 = cast(%var_8311, dtype="int64") /* ty=Tensor[(5, 9, 16), int64] */;
  %104 = shape_of(%var_8310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%var_8310, dtype="int64") /* ty=Tensor[(5, 9, 16), int64] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %107 = bitwise_or(%105, %106) /* ty=Tensor[(5, 9, 16), int64] */;
  %108 = cast(%var_8311, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %109 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %110 = cast(%107, dtype="float32") /* ty=Tensor[(5, 9, 16), float32] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %112 = power(%110, %111) /* ty=Tensor[(5, 9, 16), float32] */;
  %113 = cast(%112, dtype="uint8") /* ty=Tensor[(5, 9, 16), uint8] */;
  %114 = shape_of(%var_8311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%var_8311, dtype="uint8") /* ty=Tensor[(5, 9, 16), uint8] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %117 = @func_7239() /* ty=Tensor[(4, 2, 4), float64] */;
  %118 = %102.0;
  %119 = left_shift(%115, %116) /* ty=Tensor[(5, 9, 16), uint8] */;
  (%117, %118, meta[relay.Constant][6] /* ty=Tensor[(330), uint16] */, %119)
}

def @func_7384() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  %123 = fn () -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
    %120 = @func_2879() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %121 = @func_5957() /* ty=Tensor[(4, 2, 4), float64] */;
    %122 = %120.0;
    (%121, %122)
  };
  %123() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */
}

def @func_7683() -> Tensor[(4, 2, 4), bool] {
  @func_7681() /* ty=Tensor[(4, 2, 4), bool] */
}

def @func_1788() -> (Tensor[(4, 2, 4), float64],) {
  %124 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %125 = %124.0;
  (%125,)
}

def @func_1415(%var_1413: Tensor[(3, 13, 4), int64], %var_1414: Tensor[(3, 13, 4), int64]) -> (Tensor[(3, 13, 4), bool],) {
  @func_1411(%var_1413, %var_1414) /* ty=(Tensor[(3, 13, 4), bool],) */
}

def @func_7072() -> (Tensor[(4, 2, 4), float64],) {
  %126 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %127 = %126.0;
  (%127,)
}

def @func_7414() -> (Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64]) {
  %128 = @func_6729() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %129 = @func_5893() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %130 = %128.0;
  %131 = %129.1;
  (%130, %131)
}

def @func_6357() -> (Tensor[(448), bool], Tensor[(4, 2, 4), float64]) {
  %135 = fn () -> (Tensor[(448), bool], Tensor[(4, 2, 4), float64]) {
    %132 = @func_2810() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %133 = @func_3216() /* ty=Tensor[(448), bool] */;
    %134 = %132.0;
    (%133, %134)
  };
  %135() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float64]) */
}

def @func_7616() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32], Tensor[(48), float32], Tensor[(4, 2, 4), float32]) {
  %147 = fn () -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32], Tensor[(48), float32], Tensor[(4, 2, 4), float32]) {
    %136 = @func_4174() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %137 = @func_2810() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %138 = @func_3617() /* ty=(Tensor[(4, 8, 14), float32],) */;
    %139 = %138.0;
    %140 = cast(%139, dtype="float32") /* ty=Tensor[(4, 8, 14), float32] */;
    %141 = @func_2960() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */;
    %142 = %136.0;
    %143 = %137.0;
    %144 = log2(%140) /* ty=Tensor[(4, 8, 14), float32] */;
    %145 = @func_5469() /* ty=Tensor[(48), float32] */;
    %146 = %141.1;
    (%142, %143, %144, %145, %146)
  };
  %147() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32], Tensor[(48), float32], Tensor[(4, 2, 4), float32]) */
}

def @func_8169(%var_8167: Tensor[(8, 70), int16]) -> (Tensor[(4, 2, 4), bool], Tensor[(8, 70), uint64]) {
  @func_8166(%var_8167) /* ty=(Tensor[(4, 2, 4), bool], Tensor[(8, 70), uint64]) */
}

def @func_6534(%var_6512: Tensor[(96), float64], %var_6518: Tensor[(560), float32]) -> (Tensor[(4, 2, 4), float32], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(4, 2, 4), bool], Tensor[(560), float32], Tensor[(448), bool]) {
  %148 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %149 = cast(%var_6512, dtype="float64") /* ty=Tensor[(96), float64] */;
  %150 = reshape(%149, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float64] */;
  %151 = cast(%var_6518, dtype="float32") /* ty=Tensor[(560), float32] */;
  %152 = cast(%var_6518, dtype="float64") /* ty=Tensor[(560), float64] */;
  %153 = reshape(%151, newshape=[8, 70]) /* ty=Tensor[(8, 70), float32] */;
  %154 = reshape(%152, newshape=[8, 70]) /* ty=Tensor[(8, 70), float64] */;
  %155 = @func_2335(%153, %154) /* ty=(Tensor[(4, 2, 4), bool], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(8, 70), int16], Tensor[(8, ?, 6), float64], Tensor[(8, 70), float32], Tensor[(8, 70), bool], Tensor[(8, 70), int16], Tensor[(14, 1), int32], Tensor[(2145), int16], Tensor[(4, 2, 4), float64]) */;
  %156 = %148.2;
  %157 = @func_4754(%150) /* ty=Tensor[(8, 2, 6), bool] */;
  %158 = %155.0;
  %159 = @func_3040() /* ty=Tensor[(448), bool] */;
  (%156, %157, %var_6512, %158, %var_6518, %159)
}

def @func_3682() -> (Tensor[(4, 2, 4), float64],) {
  @func_3680() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_5247() -> Tensor[(4, 2, 4), bool] {
  %161 = fn () -> Tensor[(4, 2, 4), bool] {
    %160 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
    %160.0
  };
  %161() /* ty=Tensor[(4, 2, 4), bool] */
}

def @func_8050() -> (Tensor[(2145), int16], Tensor[(560), int32], Tensor[(14, 448), bool]) {
  %174 = fn () -> (Tensor[(2145), int16], Tensor[(560), int32], Tensor[(14, 448), bool]) {
    %162 = cast(meta[relay.Constant][7] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
    %163 = cast(meta[relay.Constant][7] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
    %164 = cast(meta[relay.Constant][8] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
    %165 = reshape(%162, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
    %166 = reshape(%163, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
    %167 = reshape(%164, newshape=[560]) /* ty=Tensor[(560), int32] */;
    %168 = @func_533(%165, %166, %167) /* ty=(Tensor[(13, 15, 11), int16], Tensor[(8, ?, 6), float64], Tensor[(14, 1), int32], Tensor[(560), int32]) */;
    %169 = %168.2;
    %170 = @func_4594() /* ty=Tensor[(448), bool] */;
    %171 = cast(%169, dtype="bool") /* ty=Tensor[(14, 1), bool] */;
    %172 = cast(%170, dtype="bool") /* ty=Tensor[(448), bool] */;
    %173 = greater(%171, %172) /* ty=Tensor[(14, 448), bool] */;
    (meta[relay.Constant][7] /* ty=Tensor[(2145), int16] */, meta[relay.Constant][8] /* ty=Tensor[(560), int32] */, %173)
  };
  %174() /* ty=(Tensor[(2145), int16], Tensor[(560), int32], Tensor[(14, 448), bool]) */
}

def @func_4086(%var_4084: Tensor[(4, 2, 4), bool]) -> (Tensor[(4, 2, 4), bool], Tensor[(448), bool]) {
  @func_4083(%var_4084) /* ty=(Tensor[(4, 2, 4), bool], Tensor[(448), bool]) */
}

def @func_7278(%var_7276: Tensor[(8, 5, 3), float32]) -> (Tensor[(8, 5, 3), float32], Tensor[(8, 5, 3), float32]) {
  @func_7275(%var_7276) /* ty=(Tensor[(8, 5, 3), float32], Tensor[(8, 5, 3), float32]) */
}

def @func_2032() -> (Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) {
  @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */
}

def @func_3729() -> Tensor[(4, 2, 4), float64] {
  @func_1487() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_2871() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  @func_2869() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */
}

def @func_3311(%var_3288: Tensor[(11, 5, 6), uint16]) -> (Tensor[(11, 5, 6), uint16], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  %175 = cast(%var_3288, dtype="uint16") /* ty=Tensor[(11, 5, 6), uint16] */;
  %176 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(11, 5, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 5, 6), uint16] */, dtype="uint16") /* ty=Tensor[(11, 5, 6), uint16] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %179 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %180 = bitwise_or(%177, %178) /* ty=Tensor[(11, 5, 6), uint16] */;
  %181 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  %182 = %179.0;
  (%180, %181, %182)
}

def @func_2794() -> (Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(4, 2, 4), float64]) {
  %188 = fn () -> (Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(4, 2, 4), float64]) {
    %183 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %184 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
    %185 = %183.0;
    %186 = %184.2;
    %187 = @func_1870() /* ty=Tensor[(4, 2, 4), float64] */;
    (%185, %186, %187)
  };
  %188() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(4, 2, 4), float64]) */
}

def @func_4996(%var_4994: Tensor[(1, 14), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) {
  @func_4993(%var_4994) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) */
}

def @func_7149() -> (Tensor[(4, 2, 4), float32],) {
  %191 = fn () -> (Tensor[(4, 2, 4), float32],) {
    %189 = @func_4190() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, 70), int16], Tensor[(560), float32], Tensor[(4, 2, 4), float64]) */;
    %190 = %189.0;
    (%190,)
  };
  %191() /* ty=(Tensor[(4, 2, 4), float32],) */
}

def @func_5141() -> (Tensor[(448), bool],) {
  %192 = @func_3040() /* ty=Tensor[(448), bool] */;
  (%192,)
}

def @func_2836(%var_2822: Tensor[(7, 9, 12), float64], %var_2827: Tensor[(1638), float64]) -> (Tensor[(13, 4, 16), float64], Tensor[(832), uint64], Tensor[(1638), float64], Tensor[(7, 9, 12), bool]) {
  %193 = cast(meta[relay.Constant][10] /* ty=Tensor[(832), uint64] */, dtype="uint64") /* ty=Tensor[(832), uint64] */;
  %194 = cast(meta[relay.Constant][10] /* ty=Tensor[(832), uint64] */, dtype="uint64") /* ty=Tensor[(832), uint64] */;
  %195 = cast(%var_2827, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %196 = reshape(%193, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), uint64] */;
  %197 = reshape(%194, newshape=[13, 4, 16]) /* ty=Tensor[(13, 4, 16), uint64] */;
  %198 = reshape(%195, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %199 = @func_2577(%196, %197, %198) /* ty=(Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(13, 4, 16), float64], Tensor[(4, 2, 4), float64]) */;
  %200 = cast(%var_2822, dtype="float64") /* ty=Tensor[(7, 9, 12), float64] */;
  %201 = sigmoid(%200) /* ty=Tensor[(7, 9, 12), float64] */;
  %202 = cast(%var_2822, dtype="bool") /* ty=Tensor[(7, 9, 12), bool] */;
  %203 = shape_of(%201, dtype="int32") /* ty=Tensor[(3), int32] */;
  %204 = cast(%201, dtype="bool") /* ty=Tensor[(7, 9, 12), bool] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %206 = %199.2;
  %207 = less_equal(%204, %205) /* ty=Tensor[(7, 9, 12), bool] */;
  (%206, meta[relay.Constant][10] /* ty=Tensor[(832), uint64] */, %var_2827, %207)
}

def @func_4014() -> (Tensor[(4, 2, 4), float64],) {
  %208 = @func_3729() /* ty=Tensor[(4, 2, 4), float64] */;
  (%208,)
}

def @func_3217() -> Tensor[(448), bool] {
  %210 = fn () -> Tensor[(448), bool] {
    %209 = @func_3180() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
    %209.0
  };
  %210() /* ty=Tensor[(448), bool] */
}

def @func_3582(%var_3580: Tensor[(14), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(14), int32], Tensor[(4, 2, 4), int64]) {
  @func_3579(%var_3580) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14), int32], Tensor[(4, 2, 4), int64]) */
}

def @func_5848(%var_5813: int32, %var_5814: Tensor[(7, 13, 11), int32], %var_5829: Tensor[(15, 4), float32], %var_5835: Tensor[(1, 14), int32]) -> (Tensor[(7, 13, 11), int32], Tensor[(12, 5, ?), float32], Tensor[(15, 4), float32], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(40, 14), int32], Tensor[(8, ?, 6), float64]) {
  %211 = cast(%var_5813, dtype="int32") /* ty=int32 */;
  %212 = cast(%var_5814, dtype="int32") /* ty=Tensor[(7, 13, 11), int32] */;
  %213 = cast(%var_5829, dtype="float32") /* ty=Tensor[(15, 4), float32] */;
  %214 = reshape(%213, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
  %215 = cast(%var_5835, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
  %216 = cast(meta[relay.Constant][11] /* ty=Tensor[(40, 14), int32] */, dtype="int32") /* ty=Tensor[(40, 14), int32] */;
  %217 = reshape(%215, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), int32] */;
  %218 = reshape(%216, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int32] */;
  %219 = @func_483(%217, %218) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */;
  %220 = %219.1;
  %221 = cast(%220, dtype="float32") /* ty=Tensor[(8, ?, 6), float32] */;
  %222 = reshape(%221, newshape=[2, 24]) /* ty=Tensor[(2, 24), float32] */;
  %223 = @func_2408(%222) /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, ?, 6), float64]) */;
  %224 = bitwise_and(%211, %212) /* ty=Tensor[(7, 13, 11), int32] */;
  %225 = @func_3808(%214) /* ty=Tensor[(12, 5, ?), float32] */;
  %226 = %223.1;
  (%224, %225, %var_5829, %220, %var_5835, meta[relay.Constant][11] /* ty=Tensor[(40, 14), int32] */, %226)
}

def @func_7548() -> Tensor[(4, 8, 14), float32] {
  @func_7546() /* ty=Tensor[(4, 8, 14), float32] */
}

def @func_4191() -> (Tensor[(4, 2, 4), float32], Tensor[(8, 70), int16], Tensor[(560), float32], Tensor[(4, 2, 4), float64]) {
  %236 = fn () -> (Tensor[(4, 2, 4), float32], Tensor[(8, 70), int16], Tensor[(560), float32], Tensor[(4, 2, 4), float64]) {
    %227 = @func_2960() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */;
    %228 = cast(meta[relay.Constant][12] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
    %229 = cast(meta[relay.Constant][12] /* ty=Tensor[(560), float32] */, dtype="float64") /* ty=Tensor[(560), float64] */;
    %230 = reshape(%228, newshape=[8, 70]) /* ty=Tensor[(8, 70), float32] */;
    %231 = reshape(%229, newshape=[8, 70]) /* ty=Tensor[(8, 70), float64] */;
    %232 = @func_2335(%230, %231) /* ty=(Tensor[(4, 2, 4), bool], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(8, 70), int16], Tensor[(8, ?, 6), float64], Tensor[(8, 70), float32], Tensor[(8, 70), bool], Tensor[(8, 70), int16], Tensor[(14, 1), int32], Tensor[(2145), int16], Tensor[(4, 2, 4), float64]) */;
    %233 = %227.1;
    %234 = %232.7;
    %235 = @func_3729() /* ty=Tensor[(4, 2, 4), float64] */;
    (%233, %234, meta[relay.Constant][12] /* ty=Tensor[(560), float32] */, %235)
  };
  %236() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, 70), int16], Tensor[(560), float32], Tensor[(4, 2, 4), float64]) */
}

def @func_7518(%var_7516: Tensor[(3, 7, 16), bool]) -> (Tensor[(4, 8, 14), float32], Tensor[(3, 7, 16), float32], Tensor[(4, 2, 4), float64]) {
  @func_7515(%var_7516) /* ty=(Tensor[(4, 8, 14), float32], Tensor[(3, 7, 16), float32], Tensor[(4, 2, 4), float64]) */
}

def @func_2190(%var_2188: Tensor[(1, 48), float32]) -> (Tensor[(4, 8, 14), bool], Tensor[(4, 8, 14), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 48), float32]) {
  @func_2187(%var_2188) /* ty=(Tensor[(4, 8, 14), bool], Tensor[(4, 8, 14), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 48), float32]) */
}

def @func_2881() -> (Tensor[(4, 2, 4), float64],) {
  @func_2879() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_4016() -> (Tensor[(4, 2, 4), float64],) {
  @func_4014() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_8291(%var_8289: Tensor[(96), float64], %var_8290: Tensor[(336), bool]) -> (Tensor[(4, 8, 14), float32], bool, Tensor[(40, 12), bool], Tensor[(448), bool], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(4, 2, 4), float64], Tensor[(336), bool], Tensor[(4, 2, 4), float64], Tensor[(15, 2, 16), float32], Tensor[(4, 2, 4), float64]) {
  %257 = fn (%var_8221: Tensor[(96), float64], %var_8227: Tensor[(336), bool]) -> (Tensor[(4, 8, 14), float32], bool, Tensor[(40, 12), bool], Tensor[(448), bool], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(4, 2, 4), float64], Tensor[(336), bool], Tensor[(4, 2, 4), float64], Tensor[(15, 2, 16), float32], Tensor[(4, 2, 4), float64]) {
    %237 = @func_5252() /* ty=(Tensor[(4, 8, 14), float32],) */;
    %238 = cast(%var_8221, dtype="float64") /* ty=Tensor[(96), float64] */;
    %239 = reshape(%238, newshape=[8, 2, 6]) /* ty=Tensor[(8, 2, 6), float64] */;
    %240 = cast(%var_8227, dtype="bool") /* ty=Tensor[(336), bool] */;
    %241 = reshape(%240, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), bool] */;
    %242 = @func_7515(%241) /* ty=(Tensor[(4, 8, 14), float32], Tensor[(3, 7, 16), float32], Tensor[(4, 2, 4), float64]) */;
    %243 = @func_4267() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) */;
    %244 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
    %245 = cast(meta[relay.Constant][13] /* ty=Tensor[(40, 12), bool] */, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
    %246 = reshape(%244, newshape=[]) /* ty=bool */;
    %247 = reshape(%245, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), bool] */;
    %248 = @func_5988(%246, %247) /* ty=Tensor[(15, 2, 16), bool] */;
    %249 = cast(%248, dtype="float32") /* ty=Tensor[(15, 2, 16), float32] */;
    %250 = %237.0;
    %251 = @func_7428() /* ty=Tensor[(448), bool] */;
    %252 = @func_4754(%239) /* ty=Tensor[(8, 2, 6), bool] */;
    %253 = %242.2;
    %254 = %243.3;
    %255 = sigmoid(%249) /* ty=Tensor[(15, 2, 16), float32] */;
    %256 = @func_1884() /* ty=Tensor[(4, 2, 4), float64] */;
    (%250, True /* ty=bool */, meta[relay.Constant][13] /* ty=Tensor[(40, 12), bool] */, %251, %252, %var_8221, %253, %var_8227, %254, %255, %256)
  };
  %257(%var_8289, %var_8290) /* ty=(Tensor[(4, 8, 14), float32], bool, Tensor[(40, 12), bool], Tensor[(448), bool], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(4, 2, 4), float64], Tensor[(336), bool], Tensor[(4, 2, 4), float64], Tensor[(15, 2, 16), float32], Tensor[(4, 2, 4), float64]) */
}

def @func_5432(%var_5430: Tensor[(1638), float64]) -> (Tensor[(448), bool], Tensor[(4, 8, 14), bool], Tensor[(14, 13, 9), float64], Tensor[(1638), float64]) {
  @func_5429(%var_5430) /* ty=(Tensor[(448), bool], Tensor[(4, 8, 14), bool], Tensor[(14, 13, 9), float64], Tensor[(1638), float64]) */
}

def @func_537(%var_534: Tensor[(13, 15, 11), int16], %var_535: Tensor[(13, 15, 11), int16], %var_536: Tensor[(560), int32]) -> (Tensor[(13, 15, 11), int16], Tensor[(8, ?, 6), float64], Tensor[(14, 1), int32], Tensor[(560), int32]) {
  %269 = fn (%var_519: Tensor[(13, 15, 11), int16], %var_520: Tensor[(13, 15, 11), int16], %var_529: Tensor[(560), int32]) -> (Tensor[(13, 15, 11), int16], Tensor[(8, ?, 6), float64], Tensor[(14, 1), int32], Tensor[(560), int32]) {
    %258 = cast(%var_520, dtype="int16") /* ty=Tensor[(13, 15, 11), int16] */;
    %259 = shape_of(%var_519, dtype="int32") /* ty=Tensor[(3), int32] */;
    %260 = cast(%var_519, dtype="int16") /* ty=Tensor[(13, 15, 11), int16] */;
    %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %262 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 1), int32] */, dtype="int32") /* ty=Tensor[(14, 1), int32] */;
    %263 = cast(%var_529, dtype="int32") /* ty=Tensor[(560), int32] */;
    %264 = reshape(%262, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), int32] */;
    %265 = reshape(%263, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int32] */;
    %266 = @func_483(%264, %265) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */;
    %267 = add(%260, %261) /* ty=Tensor[(13, 15, 11), int16] */;
    %268 = %266.1;
    (%267, %268, meta[relay.Constant][14] /* ty=Tensor[(14, 1), int32] */, %var_529)
  };
  %269(%var_534, %var_535, %var_536) /* ty=(Tensor[(13, 15, 11), int16], Tensor[(8, ?, 6), float64], Tensor[(14, 1), int32], Tensor[(560), int32]) */
}

def @func_2030() -> (Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) {
  %270 = @func_1884() /* ty=Tensor[(4, 2, 4), float64] */;
  %271 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 2, 4), float64] */, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %272 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%270, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %275 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 2, 4), float64] */, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %276 = shape_of(%270, dtype="int32") /* ty=Tensor[(3), int32] */;
  %277 = cast(%270, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %279 = cast(%270, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %280 = cosh(%279) /* ty=Tensor[(4, 2, 4), float32] */;
  %281 = cast(%280, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %282 = equal(%273, %274) /* ty=Tensor[(4, 2, 4), bool] */;
  %283 = less_equal(%277, %278) /* ty=Tensor[(4, 2, 4), bool] */;
  %284 = erf(%281) /* ty=Tensor[(4, 2, 4), float32] */;
  (%282, %283, %284)
}

def @func_5396() -> Tensor[(4, 2, 4), float64] {
  %286 = fn () -> Tensor[(4, 2, 4), float64] {
    %285 = @func_4174() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %285.0
  };
  %286() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_3041() -> Tensor[(448), bool] {
  %288 = fn () -> Tensor[(448), bool] {
    %287 = @func_2793() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(4, 2, 4), float64]) */;
    %287.1
  };
  %288() /* ty=Tensor[(448), bool] */
}

def @func_2762() -> Tensor[(4, 2, 4), float64] {
  @func_2760() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_6883(%var_6862: Tensor[(756), float64]) -> (Tensor[(4, 2, 4), float64], Tensor[(756), float64], Tensor[(1638), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) {
  %289 = cast(%var_6862, dtype="float64") /* ty=Tensor[(756), float64] */;
  %290 = cast(meta[relay.Constant][17] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %291 = reshape(%289, newshape=[7, 9, 12]) /* ty=Tensor[(7, 9, 12), float64] */;
  %292 = reshape(%290, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %293 = @func_2836(%291, %292) /* ty=(Tensor[(13, 4, 16), float64], Tensor[(832), uint64], Tensor[(1638), float64], Tensor[(7, 9, 12), bool]) */;
  %294 = %293.2;
  %295 = cast(%294, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %296 = @func_2995() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %297 = @func_1870() /* ty=Tensor[(4, 2, 4), float64] */;
  %298 = tan(%295) /* ty=Tensor[(1638), float64] */;
  %299 = %296.0;
  (%297, %var_6862, meta[relay.Constant][17] /* ty=Tensor[(1638), float64] */, %298, %299)
}

def @func_2742() -> (Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) {
  %313 = fn () -> (Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) {
    %300 = @func_1788() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %301 = %300.0;
    %302 = cast(%301, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
    %303 = cast(meta[relay.Constant][18] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
    %304 = cast(meta[relay.Constant][18] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
    %305 = reshape(%303, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
    %306 = reshape(%304, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
    %307 = @func_2521() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %308 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
    %309 = atanh(%302) /* ty=Tensor[(4, 2, 4), float32] */;
    %310 = @func_1229(%305, %306) /* ty=Tensor[(4, 8, 14), bool] */;
    %311 = %307.0;
    %312 = %308.2;
    (%309, %310, meta[relay.Constant][18] /* ty=Tensor[(448), bool] */, %311, %312)
  };
  %313() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */
}

def @func_2335(%var_2254: Tensor[(8, 70), float32], %var_2315: Tensor[(8, 70), float64]) -> (Tensor[(4, 2, 4), bool], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(8, 70), int16], Tensor[(8, ?, 6), float64], Tensor[(8, 70), float32], Tensor[(8, 70), bool], Tensor[(8, 70), int16], Tensor[(14, 1), int32], Tensor[(2145), int16], Tensor[(4, 2, 4), float64]) {
  %314 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %315 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 14), int32] */, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
  %316 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 70), int32] */, dtype="int32") /* ty=Tensor[(8, 70), int32] */;
  %317 = reshape(%315, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), int32] */;
  %318 = reshape(%316, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int32] */;
  %319 = @func_483(%317, %318) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */;
  %320 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 70), int32] */, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %321 = sqrt(%320) /* ty=Tensor[(8, 70), float32] */;
  %322 = cast(%var_2254, dtype="int16") /* ty=Tensor[(8, 70), int16] */;
  %323 = shape_of(%321, dtype="int32") /* ty=Tensor[(2), int32] */;
  %324 = cast(%321, dtype="int16") /* ty=Tensor[(8, 70), int16] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %326 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 14), int32] */, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
  %327 = reshape(%326, newshape=[1, 14]) /* ty=Tensor[(1, 14), int32] */;
  %328 = @func_2061(%327) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) */;
  %329 = cast(%321, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %330 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(8, 70), int32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %331 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 70), int32] */, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %333 = cast(%321, dtype="float32") /* ty=Tensor[(8, 70), float32] */;
  %334 = log(%333) /* ty=Tensor[(8, 70), float32] */;
  %335 = cast(%334, dtype="float64") /* ty=Tensor[(8, 70), float64] */;
  %336 = exp(%335) /* ty=Tensor[(8, 70), float64] */;
  %337 = cast(%var_2315, dtype="bool") /* ty=Tensor[(8, 70), bool] */;
  %338 = shape_of(%336, dtype="int32") /* ty=Tensor[(2), int32] */;
  %339 = cast(%336, dtype="bool") /* ty=Tensor[(8, 70), bool] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %341 = cast(%334, dtype="int16") /* ty=Tensor[(8, 70), int16] */;
  %342 = shape_of(%321, dtype="int32") /* ty=Tensor[(2), int32] */;
  %343 = cast(%321, dtype="int16") /* ty=Tensor[(8, 70), int16] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %345 = cast(meta[relay.Constant][21] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %346 = cast(meta[relay.Constant][21] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %347 = cast(%334, dtype="int32") /* ty=Tensor[(8, 70), int32] */;
  %348 = reshape(%345, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
  %349 = reshape(%346, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
  %350 = reshape(%347, newshape=[560]) /* ty=Tensor[(560), int32] */;
  %351 = @func_533(%348, %349, %350) /* ty=(Tensor[(13, 15, 11), int16], Tensor[(8, ?, 6), float64], Tensor[(14, 1), int32], Tensor[(560), int32]) */;
  %352 = %314.1;
  %353 = %319.3;
  %354 = multiply(%324, %325) /* ty=Tensor[(8, 70), int16] */;
  %355 = %328.1;
  %356 = power(%331, %332) /* ty=Tensor[(8, 70), float32] */;
  %357 = equal(%339, %340) /* ty=Tensor[(8, 70), bool] */;
  %358 = add(%343, %344) /* ty=Tensor[(8, 70), int16] */;
  %359 = %351.2;
  %360 = @func_1870() /* ty=Tensor[(4, 2, 4), float64] */;
  (%352, %353, meta[relay.Constant][19] /* ty=Tensor[(1, 14), int32] */, %354, %355, %356, %357, %358, %359, meta[relay.Constant][21] /* ty=Tensor[(2145), int16] */, %360)
}

def @func_7330() -> (Tensor[(4, 8, 14), float32],) {
  %361 = @func_3617() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %362 = %361.0;
  (%362,)
}

def @func_3876(%var_3874: Tensor[(16, 11, 15), int8], %var_3875: Tensor[(16, 11, 15), int8]) -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(16, 11, 15), bool]) {
  %377 = fn (%var_3852: Tensor[(16, 11, 15), int8], %var_3853: Tensor[(16, 11, 15), int8]) -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(16, 11, 15), bool]) {
    %363 = @func_2793() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(4, 2, 4), float64]) */;
    %364 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %365 = cast(%var_3853, dtype="int8") /* ty=Tensor[(16, 11, 15), int8] */;
    %366 = shape_of(%var_3852, dtype="int32") /* ty=Tensor[(3), int32] */;
    %367 = cast(%var_3852, dtype="int8") /* ty=Tensor[(16, 11, 15), int8] */;
    %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %369 = bitwise_xor(%367, %368) /* ty=Tensor[(16, 11, 15), int8] */;
    %370 = cast(%369, dtype="bool") /* ty=Tensor[(16, 11, 15), bool] */;
    %371 = shape_of(%var_3852, dtype="int32") /* ty=Tensor[(3), int32] */;
    %372 = cast(%var_3852, dtype="bool") /* ty=Tensor[(16, 11, 15), bool] */;
    %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %374 = %363.2;
    %375 = %364.0;
    %376 = greater_equal(%372, %373) /* ty=Tensor[(16, 11, 15), bool] */;
    (%374, %375, %376)
  };
  %377(%var_3874, %var_3875) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(16, 11, 15), bool]) */
}

def @func_5254() -> (Tensor[(4, 8, 14), float32],) {
  @func_5252() /* ty=(Tensor[(4, 8, 14), float32],) */
}

def @func_2976(%var_2969: Tensor[(1, 448), bool]) -> (Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool]) {
  %378 = @func_2741() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %379 = cast(%var_2969, dtype="bool") /* ty=Tensor[(1, 448), bool] */;
  %380 = cast(%var_2969, dtype="bool") /* ty=Tensor[(1, 448), bool] */;
  %381 = reshape(%379, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %382 = reshape(%380, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %383 = @func_1229(%381, %382) /* ty=Tensor[(4, 8, 14), bool] */;
  %384 = cast(%var_2969, dtype="bool") /* ty=Tensor[(1, 448), bool] */;
  %385 = shape_of(%383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(%383, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %388 = %378.0;
  %389 = equal(%386, %387) /* ty=Tensor[(4, 8, 14), bool] */;
  (%388, %389)
}

def @func_3314(%var_3312: Tensor[(11, 5, 6), uint16]) -> (Tensor[(11, 5, 6), uint16], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  @func_3311(%var_3312) /* ty=(Tensor[(11, 5, 6), uint16], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */
}

def @func_3181() -> (Tensor[(448), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) {
  %400 = fn () -> (Tensor[(448), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) {
    %390 = @func_2960() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */;
    %391 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
    %392 = @func_1788() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %393 = %390.0;
    %394 = cast(%393, dtype="bool") /* ty=Tensor[(448), bool] */;
    %395 = reshape(%394, newshape=[1, 448]) /* ty=Tensor[(1, 448), bool] */;
    %396 = @func_2976(%395) /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool]) */;
    %397 = %391.0;
    %398 = %392.0;
    %399 = %396.0;
    (%393, %397, %398, %399)
  };
  %400() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */
}

def @func_5469() -> Tensor[(48), float32] {
  %401 = @func_4046() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(48), float32]) */;
  %401.3
}

def @func_1790() -> (Tensor[(4, 2, 4), float64],) {
  @func_1788() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_7681() -> Tensor[(4, 2, 4), bool] {
  %402 = @func_5871() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(448), bool]) */;
  %402.0
}

def @func_6296() -> (Tensor[(4, 2, 4), float64], Tensor[(2640), int8], Tensor[(4, 2, 4), float32]) {
  %403 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %404 = cast(meta[relay.Constant][22] /* ty=Tensor[(2640), int8] */, dtype="int8") /* ty=Tensor[(2640), int8] */;
  %405 = cast(meta[relay.Constant][22] /* ty=Tensor[(2640), int8] */, dtype="int8") /* ty=Tensor[(2640), int8] */;
  %406 = reshape(%404, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), int8] */;
  %407 = reshape(%405, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), int8] */;
  %408 = @func_3873(%406, %407) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(16, 11, 15), bool]) */;
  %409 = %408.0;
  %410 = cast(%409, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %411 = %403.0;
  %412 = sqrt(%410) /* ty=Tensor[(4, 2, 4), float32] */;
  (%411, meta[relay.Constant][22] /* ty=Tensor[(2640), int8] */, %412)
}

def @func_1397() -> (Tensor[(4, 2, 4), float64],) {
  %415 = fn () -> (Tensor[(4, 2, 4), float64],) {
    %413 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
    %414 = sinh(%413) /* ty=Tensor[(4, 2, 4), float64] */;
    (%414,)
  };
  %415() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_7074() -> (Tensor[(4, 2, 4), float64],) {
  @func_7072() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_1489() -> Tensor[(4, 2, 4), float64] {
  @func_1487() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_4492() -> (Tensor[(4, 8, 14), float32],) {
  %418 = fn () -> (Tensor[(4, 8, 14), float32],) {
    %416 = @func_3617() /* ty=(Tensor[(4, 8, 14), float32],) */;
    %417 = %416.0;
    (%417,)
  };
  %418() /* ty=(Tensor[(4, 8, 14), float32],) */
}

def @func_2961() -> (Tensor[(448), bool], Tensor[(4, 2, 4), float32]) {
  %425 = fn () -> (Tensor[(448), bool], Tensor[(4, 2, 4), float32]) {
    %419 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
    %420 = @func_1788() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %421 = %420.0;
    %422 = cast(%421, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
    %423 = %419.2;
    %424 = cos(%422) /* ty=Tensor[(4, 2, 4), float32] */;
    (%423, %424)
  };
  %425() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */
}

def @func_3105() -> Tensor[(4, 2, 4), bool] {
  %427 = fn () -> Tensor[(4, 2, 4), bool] {
    %426 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
    %426.1
  };
  %427() /* ty=Tensor[(4, 2, 4), bool] */
}

def @func_6886(%var_6884: Tensor[(756), float64]) -> (Tensor[(4, 2, 4), float64], Tensor[(756), float64], Tensor[(1638), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) {
  @func_6883(%var_6884) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(756), float64], Tensor[(1638), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) */
}

def @func_3731() -> Tensor[(4, 2, 4), float64] {
  @func_3729() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_7332() -> (Tensor[(4, 8, 14), float32],) {
  @func_7330() /* ty=(Tensor[(4, 8, 14), float32],) */
}

def @func_4811(%var_4809: Tensor[(2145), int16], %var_4810: Tensor[(2640), int8]) -> (Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(2145), int16], Tensor[(560), int32], Tensor[(16, 11, 15), bool], Tensor[(2640), int8]) {
  @func_4807(%var_4809, %var_4810) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(2145), int16], Tensor[(560), int32], Tensor[(16, 11, 15), bool], Tensor[(2640), int8]) */
}

def @func_8028() -> Tensor[(4, 2, 4), float64] {
  @func_8026() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_4083(%var_4063: Tensor[(4, 2, 4), bool]) -> (Tensor[(4, 2, 4), bool], Tensor[(448), bool]) {
  %428 = @func_3180() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %429 = %428.1;
  %430 = cast(%var_4063, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%429, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %434 = @func_2960() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */;
  %435 = greater(%432, %433) /* ty=Tensor[(4, 2, 4), bool] */;
  %436 = %434.0;
  (%435, %436)
}

def @func_5988(%var_5981: bool, %var_5982: Tensor[(15, 2, 16), bool]) -> Tensor[(15, 2, 16), bool] {
  %437 = cast(%var_5981, dtype="bool") /* ty=bool */;
  %438 = cast(%var_5982, dtype="bool") /* ty=Tensor[(15, 2, 16), bool] */;
  logical_and(%437, %438) /* ty=Tensor[(15, 2, 16), bool] */
}

def @func_5729() -> (Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) {
  @func_5727() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */
}

def @func_4807(%var_4794: Tensor[(2145), int16], %var_4802: Tensor[(2640), int8]) -> (Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(2145), int16], Tensor[(560), int32], Tensor[(16, 11, 15), bool], Tensor[(2640), int8]) {
  %439 = @func_2096() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %440 = cast(%var_4794, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %441 = cast(%var_4794, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %442 = cast(meta[relay.Constant][24] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %443 = reshape(%440, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
  %444 = reshape(%441, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
  %445 = reshape(%442, newshape=[560]) /* ty=Tensor[(560), int32] */;
  %446 = @func_533(%443, %444, %445) /* ty=(Tensor[(13, 15, 11), int16], Tensor[(8, ?, 6), float64], Tensor[(14, 1), int32], Tensor[(560), int32]) */;
  %447 = cast(%var_4802, dtype="int8") /* ty=Tensor[(2640), int8] */;
  %448 = cast(%var_4802, dtype="int8") /* ty=Tensor[(2640), int8] */;
  %449 = reshape(%447, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), int8] */;
  %450 = reshape(%448, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), int8] */;
  %451 = @func_3873(%449, %450) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(16, 11, 15), bool]) */;
  %452 = %439.0;
  %453 = %446.1;
  %454 = %451.2;
  (%452, %453, %var_4794, meta[relay.Constant][24] /* ty=Tensor[(560), int32] */, %454, %var_4802)
}

def @func_1610() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) {
  @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */
}

def @func_5429(%var_5422: Tensor[(1638), float64]) -> (Tensor[(448), bool], Tensor[(4, 8, 14), bool], Tensor[(14, 13, 9), float64], Tensor[(1638), float64]) {
  %455 = @func_2960() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */;
  %456 = %455.0;
  %457 = cast(%456, dtype="bool") /* ty=Tensor[(448), bool] */;
  %458 = cast(%456, dtype="bool") /* ty=Tensor[(448), bool] */;
  %459 = reshape(%457, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %460 = reshape(%458, newshape=[4, 8, 14]) /* ty=Tensor[(4, 8, 14), bool] */;
  %461 = cast(%var_5422, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %462 = reshape(%461, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %463 = @func_1070(%462) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %464 = @func_1229(%459, %460) /* ty=Tensor[(4, 8, 14), bool] */;
  %465 = %463.0;
  (%456, %464, %465, %var_5422)
}

def @func_6730() -> (Tensor[(4, 8, 14), float32],) {
  %468 = fn () -> (Tensor[(4, 8, 14), float32],) {
    %466 = @func_5727() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
    %467 = %466.2;
    (%467,)
  };
  %468() /* ty=(Tensor[(4, 8, 14), float32],) */
}

def @func_2810() -> (Tensor[(4, 2, 4), float64],) {
  %469 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
  %470 = %469.0;
  (%470,)
}

def @func_4460() -> (Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64]) {
  @func_4458() /* ty=(Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64]) */
}

def @func_5531(%var_5530: Tensor[(14, 13, 9), float64]) -> (Tensor[(14, 13, 9), float64], Tensor[(448), bool]) {
  %479 = fn (%var_5505: Tensor[(14, 13, 9), float64]) -> (Tensor[(14, 13, 9), float64], Tensor[(448), bool]) {
    %471 = @func_4267() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) */;
    %472 = %471.1;
    %473 = cast(%var_5505, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
    %474 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
    %475 = cast(%472, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
    %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %477 = mod(%475, %476) /* ty=Tensor[(14, 13, 9), float64] */;
    %478 = @func_4594() /* ty=Tensor[(448), bool] */;
    (%477, %478)
  };
  %479(%var_5530) /* ty=(Tensor[(14, 13, 9), float64], Tensor[(448), bool]) */
}

def @func_2577(%var_2530: Tensor[(13, 4, 16), uint64], %var_2531: Tensor[(13, 4, 16), uint64], %var_2541: Tensor[(1638), float64]) -> (Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(13, 4, 16), float64], Tensor[(4, 2, 4), float64]) {
  %480 = cast(%var_2541, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %481 = reshape(%480, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %482 = @func_1070(%481) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %483 = cast(%var_2531, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
  %484 = shape_of(%var_2530, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%var_2530, dtype="bool") /* ty=Tensor[(13, 4, 16), bool] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %487 = less_equal(%485, %486) /* ty=Tensor[(13, 4, 16), bool] */;
  %488 = cast(%var_2531, dtype="float32") /* ty=Tensor[(13, 4, 16), float32] */;
  %489 = log(%488) /* ty=Tensor[(13, 4, 16), float32] */;
  %490 = cast(%489, dtype="float64") /* ty=Tensor[(13, 4, 16), float64] */;
  %491 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%487, dtype="float64") /* ty=Tensor[(13, 4, 16), float64] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %494 = %482.0;
  %495 = floor_divide(%492, %493) /* ty=Tensor[(13, 4, 16), float64] */;
  %496 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%494, %var_2541, %495, %496)
}

def @func_1885() -> Tensor[(4, 2, 4), float64] {
  %497 = fn () -> Tensor[(4, 2, 4), float64] {
    @func_1487() /* ty=Tensor[(4, 2, 4), float64] */
  };
  %497() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_5884() -> (Tensor[(4, 2, 4), float64],) {
  %498 = @func_3534() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
  %499 = %498.0;
  (%499,)
}

def @func_2879() -> (Tensor[(4, 2, 4), float64],) {
  %500 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %501 = %500.0;
  (%501,)
}

def @func_5620(%var_5619: Tensor[(1, 14), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(560), int32], Tensor[(1, 14), int32], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(448), bool]) {
  %523 = fn (%var_5568: Tensor[(1, 14), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(560), int32], Tensor[(1, 14), int32], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(448), bool]) {
    %502 = @func_4046() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(48), float32]) */;
    %503 = cast(meta[relay.Constant][25] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %504 = reshape(%503, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
    %505 = @func_1070(%504) /* ty=(Tensor[(14, 13, 9), float64],) */;
    %506 = cast(%var_5568, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
    %507 = reshape(%506, newshape=[1, 14]) /* ty=Tensor[(1, 14), int32] */;
    %508 = @func_4993(%507) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) */;
    %509 = @func_2879() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %510 = @func_2879() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %511 = @func_2741() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
    %512 = @func_4458() /* ty=(Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64]) */;
    %513 = @func_5141() /* ty=(Tensor[(448), bool],) */;
    %514 = %502.1;
    %515 = %505.0;
    %516 = %508.3;
    %517 = @func_3040() /* ty=Tensor[(448), bool] */;
    %518 = %509.0;
    %519 = %510.0;
    %520 = %511.3;
    %521 = %512.1;
    %522 = %513.0;
    (%514, %515, meta[relay.Constant][25] /* ty=Tensor[(1638), float64] */, %516, %var_5568, %517, %518, %519, %520, %521, %522)
  };
  %523(%var_5619) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(560), int32], Tensor[(1, 14), int32], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(448), bool]) */
}

def @func_5370(%var_5369: Tensor[(60, 1), float32]) -> (Tensor[(4, 2, 4), int16], Tensor[(12, 5, ?), float32], Tensor[(60, 1), float32], Tensor[(4, 2, 4), float32]) {
  %539 = fn (%var_5358: Tensor[(60, 1), float32]) -> (Tensor[(4, 2, 4), int16], Tensor[(12, 5, ?), float32], Tensor[(60, 1), float32], Tensor[(4, 2, 4), float32]) {
    %524 = @func_4574() /* ty=Tensor[(4, 2, 4), bool] */;
    %525 = cast(%524, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
    %526 = asin(%525) /* ty=Tensor[(4, 2, 4), float32] */;
    %527 = @func_2869() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
    %528 = %527.0;
    %529 = cast(%528, dtype="int16") /* ty=Tensor[(4, 2, 4), int16] */;
    %530 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
    %531 = cast(%526, dtype="int16") /* ty=Tensor[(4, 2, 4), int16] */;
    %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %533 = cast(%var_5358, dtype="float32") /* ty=Tensor[(60, 1), float32] */;
    %534 = reshape(%533, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
    %535 = @func_2960() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float32]) */;
    %536 = subtract(%531, %532) /* ty=Tensor[(4, 2, 4), int16] */;
    %537 = @func_3808(%534) /* ty=Tensor[(12, 5, ?), float32] */;
    %538 = %535.1;
    (%536, %537, %var_5358, %538)
  };
  %539(%var_5369) /* ty=(Tensor[(4, 2, 4), int16], Tensor[(12, 5, ?), float32], Tensor[(60, 1), float32], Tensor[(4, 2, 4), float32]) */
}

def @func_5291(%var_5290: Tensor[(7, 2, 2), float32]) -> (Tensor[(7, 2, 2), float32], Tensor[(4, 2, 4), float64]) {
  %551 = fn (%var_5258: Tensor[(7, 2, 2), float32]) -> (Tensor[(7, 2, 2), float32], Tensor[(4, 2, 4), float64]) {
    %540 = cast(%var_5258, dtype="float64") /* ty=Tensor[(7, 2, 2), float64] */;
    %541 = atanh(%540) /* ty=Tensor[(7, 2, 2), float64] */;
    %542 = cast(%var_5258, dtype="float32") /* ty=Tensor[(7, 2, 2), float32] */;
    %543 = asin(%542) /* ty=Tensor[(7, 2, 2), float32] */;
    %544 = cast(%543, dtype="float32") /* ty=Tensor[(7, 2, 2), float32] */;
    %545 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
    %546 = cast(%541, dtype="float32") /* ty=Tensor[(7, 2, 2), float32] */;
    %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %548 = @func_4174() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %549 = power(%546, %547) /* ty=Tensor[(7, 2, 2), float32] */;
    %550 = %548.0;
    (%549, %550)
  };
  %551(%var_5290) /* ty=(Tensor[(7, 2, 2), float32], Tensor[(4, 2, 4), float64]) */
}

def @func_5252() -> (Tensor[(4, 8, 14), float32],) {
  %552 = @func_4491() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %553 = %552.0;
  (%553,)
}

def @func_5657() -> (Tensor[(448), bool], Tensor[(448), bool]) {
  %556 = fn () -> (Tensor[(448), bool], Tensor[(448), bool]) {
    %554 = @func_4594() /* ty=Tensor[(448), bool] */;
    %555 = @func_4594() /* ty=Tensor[(448), bool] */;
    (%554, %555)
  };
  %556() /* ty=(Tensor[(448), bool], Tensor[(448), bool]) */
}

def @func_1073(%var_1071: Tensor[(14, 13, 9), float64]) -> (Tensor[(14, 13, 9), float64],) {
  @func_1070(%var_1071) /* ty=(Tensor[(14, 13, 9), float64],) */
}

def @func_5411() -> (Tensor[(448), bool], Tensor[(448), bool], Tensor[(448), bool]) {
  %561 = fn () -> (Tensor[(448), bool], Tensor[(448), bool], Tensor[(448), bool]) {
    %557 = @func_5177() /* ty=(Tensor[(448), bool],) */;
    %558 = @func_3216() /* ty=Tensor[(448), bool] */;
    %559 = @func_3216() /* ty=Tensor[(448), bool] */;
    %560 = %557.0;
    (%558, %559, %560)
  };
  %561() /* ty=(Tensor[(448), bool], Tensor[(448), bool], Tensor[(448), bool]) */
}

def @func_7428() -> Tensor[(448), bool] {
  %562 = @func_5656() /* ty=(Tensor[(448), bool], Tensor[(448), bool]) */;
  %562.0
}

def @func_7546() -> Tensor[(4, 8, 14), float32] {
  %563 = @func_5727() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
  %564 = %563.2;
  %565 = cast(%564, dtype="float32") /* ty=Tensor[(4, 8, 14), float32] */;
  tan(%565) /* ty=Tensor[(4, 8, 14), float32] */
}

def @func_2411(%var_2409: Tensor[(2, 24), float32]) -> (Tensor[(4, 2, 4), float32], Tensor[(8, ?, 6), float64]) {
  @func_2408(%var_2409) /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, ?, 6), float64]) */
}

def @func_2096() -> (Tensor[(4, 2, 4), float64],) {
  %566 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%566,)
}

def @func_1872() -> Tensor[(4, 2, 4), float64] {
  @func_1870() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_6298() -> (Tensor[(4, 2, 4), float64], Tensor[(2640), int8], Tensor[(4, 2, 4), float32]) {
  @func_6296() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(2640), int8], Tensor[(4, 2, 4), float32]) */
}

def @func_3680() -> (Tensor[(4, 2, 4), float64],) {
  %567 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%567,)
}

def @func_4993(%var_4988: Tensor[(1, 14), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) {
  %568 = cast(%var_4988, dtype="int32") /* ty=Tensor[(1, 14), int32] */;
  %569 = cast(meta[relay.Constant][26] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
  %570 = reshape(%568, newshape=[14, 1, 1]) /* ty=Tensor[(14, 1, 1), int32] */;
  %571 = reshape(%569, newshape=[14, 8, 5]) /* ty=Tensor[(14, 8, 5), int32] */;
  %572 = @func_483(%570, %571) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(8, ?, 6), float64], Tensor[(48, 1), float32], Tensor[(8, ?, 6), float64]) */;
  %573 = @func_2760() /* ty=Tensor[(4, 2, 4), float64] */;
  %574 = %572.3;
  (%573, %574, %var_4988, meta[relay.Constant][26] /* ty=Tensor[(560), int32] */)
}

def @func_6626() -> Tensor[(4, 8, 14), float64] {
  %578 = fn () -> Tensor[(4, 8, 14), float64] {
    %575 = @func_3534() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
    %576 = %575.1;
    %577 = cast(%576, dtype="float64") /* ty=Tensor[(4, 8, 14), float64] */;
    sqrt(%577) /* ty=Tensor[(4, 8, 14), float64] */
  };
  %578() /* ty=Tensor[(4, 8, 14), float64] */
}

def @func_7997(%var_7995: Tensor[(14, 8, 7), float32], %var_7996: Tensor[(1638), float64]) -> (Tensor[(4, 8, 14), float32], Tensor[(14, 8, 7), int16], Tensor[(48), float32], Tensor[(4, 2, 4), float64], Tensor[(14, 8, 7), float64], Tensor[(12, 6, 16), float64], Tensor[(1152), float32], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(28), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(14, 8, 7), bool], Tensor[(4, 2, 4), float64]) {
  %624 = fn (%var_7879: Tensor[(14, 8, 7), float32], %var_7955: Tensor[(1638), float64]) -> (Tensor[(4, 8, 14), float32], Tensor[(14, 8, 7), int16], Tensor[(48), float32], Tensor[(4, 2, 4), float64], Tensor[(14, 8, 7), float64], Tensor[(12, 6, 16), float64], Tensor[(1152), float32], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(28), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(14, 8, 7), bool], Tensor[(4, 2, 4), float64]) {
    %579 = @func_7330() /* ty=(Tensor[(4, 8, 14), float32],) */;
    %580 = cast(%var_7879, dtype="float32") /* ty=Tensor[(14, 8, 7), float32] */;
    %581 = sinh(%580) /* ty=Tensor[(14, 8, 7), float32] */;
    %582 = cast(%581, dtype="float32") /* ty=Tensor[(14, 8, 7), float32] */;
    %583 = acos(%582) /* ty=Tensor[(14, 8, 7), float32] */;
    %584 = cast(%583, dtype="float64") /* ty=Tensor[(14, 8, 7), float64] */;
    %585 = sigmoid(%584) /* ty=Tensor[(14, 8, 7), float64] */;
    %586 = cast(%var_7879, dtype="int32") /* ty=Tensor[(14, 8, 7), int32] */;
    %587 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
    %588 = cast(%585, dtype="int32") /* ty=Tensor[(14, 8, 7), int32] */;
    %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %590 = right_shift(%588, %589) /* ty=Tensor[(14, 8, 7), int32] */;
    %591 = cast(%590, dtype="int16") /* ty=Tensor[(14, 8, 7), int16] */;
    %592 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
    %593 = cast(%583, dtype="int16") /* ty=Tensor[(14, 8, 7), int16] */;
    %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %595 = @func_2096() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %596 = cast(%583, dtype="float64") /* ty=Tensor[(14, 8, 7), float64] */;
    %597 = cast(meta[relay.Constant][27] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %598 = reshape(%597, newshape=[12, 6, 16]) /* ty=Tensor[(12, 6, 16), float32] */;
    %599 = @func_6932(%598) /* ty=(Tensor[(12, 6, 16), float64],) */;
    %600 = @func_3180() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
    %601 = cast(meta[relay.Constant][28] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %602 = reshape(%601, newshape=[7, 2, 2]) /* ty=Tensor[(7, 2, 2), float32] */;
    %603 = @func_5289(%602) /* ty=(Tensor[(7, 2, 2), float32], Tensor[(4, 2, 4), float64]) */;
    %604 = cast(%var_7955, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %605 = reshape(%604, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
    %606 = @func_6036(%605) /* ty=(Tensor[(4, 8, 14), float32], Tensor[(8, ?, 6), float64], Tensor[(48), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) */;
    %607 = cast(%590, dtype="bool") /* ty=Tensor[(14, 8, 7), bool] */;
    %608 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
    %609 = cast(%583, dtype="bool") /* ty=Tensor[(14, 8, 7), bool] */;
    %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %611 = %579.0;
    %612 = bitwise_or(%593, %594) /* ty=Tensor[(14, 8, 7), int16] */;
    %613 = @func_5469() /* ty=Tensor[(48), float32] */;
    %614 = %595.0;
    %615 = rsqrt(%596) /* ty=Tensor[(14, 8, 7), float64] */;
    %616 = %599.0;
    %617 = %600.1;
    %618 = %603.1;
    %619 = %606.3;
    %620 = @func_7681() /* ty=Tensor[(4, 2, 4), bool] */;
    %621 = @func_1870() /* ty=Tensor[(4, 2, 4), float64] */;
    %622 = less(%609, %610) /* ty=Tensor[(14, 8, 7), bool] */;
    %623 = @func_7239() /* ty=Tensor[(4, 2, 4), float64] */;
    (%611, %612, %613, %614, %615, %616, meta[relay.Constant][27] /* ty=Tensor[(1152), float32] */, %617, %618, meta[relay.Constant][28] /* ty=Tensor[(28), float32] */, %619, %var_7955, %620, %621, %622, %623)
  };
  %624(%var_7995, %var_7996) /* ty=(Tensor[(4, 8, 14), float32], Tensor[(14, 8, 7), int16], Tensor[(48), float32], Tensor[(4, 2, 4), float64], Tensor[(14, 8, 7), float64], Tensor[(12, 6, 16), float64], Tensor[(1152), float32], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(28), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(14, 8, 7), bool], Tensor[(4, 2, 4), float64]) */
}

def @func_3536() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) {
  @func_3534() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */
}

def @func_5886() -> (Tensor[(4, 2, 4), float64],) {
  @func_5884() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_5871() -> (Tensor[(4, 2, 4), bool], Tensor[(448), bool]) {
  %625 = @func_3180() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %626 = @func_2741() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %627 = %625.1;
  %628 = %626.2;
  (%627, %628)
}

def @func_4643() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  %629 = @func_3976() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %630 = @func_2869() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %631 = %629.0;
  %632 = %630.0;
  (%631, %632)
}

def @func_5958() -> Tensor[(4, 2, 4), float64] {
  %634 = fn () -> Tensor[(4, 2, 4), float64] {
    %633 = @func_4643() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
    %633.0
  };
  %634() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_8026() -> Tensor[(4, 2, 4), float64] {
  %635 = @func_2521() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %635.0
}

def @func_6440(%var_6438: Tensor[(1638), float64], %var_6439: Tensor[(980), uint16]) -> (Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), bool], Tensor[(560), float32], Tensor[(4, 2, 4), float64], Tensor[(980), uint64]) {
  @func_6436(%var_6438, %var_6439) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), bool], Tensor[(560), float32], Tensor[(4, 2, 4), float64], Tensor[(980), uint64]) */
}

def @func_4754(%var_4742: Tensor[(8, 2, 6), float64]) -> Tensor[(8, 2, 6), bool] {
  %636 = cast(%var_4742, dtype="float64") /* ty=Tensor[(8, 2, 6), float64] */;
  %637 = log(%636) /* ty=Tensor[(8, 2, 6), float64] */;
  %638 = cast(%637, dtype="bool") /* ty=Tensor[(8, 2, 6), bool] */;
  %639 = shape_of(%var_4742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%var_4742, dtype="bool") /* ty=Tensor[(8, 2, 6), bool] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%640, %641) /* ty=Tensor[(8, 2, 6), bool] */
}

def @func_7769(%var_7768: Tensor[(16, 3, 8), float64]) -> (Tensor[(4, 8, 14), bool], Tensor[(16, 3, 8), uint64], Tensor[(16, 3, 8), float32], Tensor[(16, 3, 8), float32]) {
  %674 = fn (%var_7699: Tensor[(16, 3, 8), float64]) -> (Tensor[(4, 8, 14), bool], Tensor[(16, 3, 8), uint64], Tensor[(16, 3, 8), float32], Tensor[(16, 3, 8), float32]) {
    %642 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
    %643 = cast(%var_7699, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
    %644 = cos(%643) /* ty=Tensor[(16, 3, 8), float64] */;
    %645 = cast(%var_7699, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
    %646 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
    %647 = cast(%644, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
    %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %649 = logical_and(%647, %648) /* ty=Tensor[(16, 3, 8), bool] */;
    %650 = cast(%644, dtype="int32") /* ty=Tensor[(16, 3, 8), int32] */;
    %651 = shape_of(%649, dtype="int32") /* ty=Tensor[(3), int32] */;
    %652 = cast(%649, dtype="int32") /* ty=Tensor[(16, 3, 8), int32] */;
    %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %654 = add(%652, %653) /* ty=Tensor[(16, 3, 8), int32] */;
    %655 = cast(%654, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
    %656 = sinh(%655) /* ty=Tensor[(16, 3, 8), float64] */;
    %657 = cast(%656, dtype="float32") /* ty=Tensor[(16, 3, 8), float32] */;
    %658 = log2(%657) /* ty=Tensor[(16, 3, 8), float32] */;
    %659 = cast(%var_7699, dtype="int16") /* ty=Tensor[(16, 3, 8), int16] */;
    %660 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
    %661 = cast(%644, dtype="int16") /* ty=Tensor[(16, 3, 8), int16] */;
    %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %663 = subtract(%661, %662) /* ty=Tensor[(16, 3, 8), int16] */;
    %664 = cast(%663, dtype="uint64") /* ty=Tensor[(16, 3, 8), uint64] */;
    %665 = shape_of(%658, dtype="int32") /* ty=Tensor[(3), int32] */;
    %666 = cast(%658, dtype="uint64") /* ty=Tensor[(16, 3, 8), uint64] */;
    %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %668 = cast(%656, dtype="float32") /* ty=Tensor[(16, 3, 8), float32] */;
    %669 = cast(%658, dtype="float32") /* ty=Tensor[(16, 3, 8), float32] */;
    %670 = %642.1;
    %671 = left_shift(%666, %667) /* ty=Tensor[(16, 3, 8), uint64] */;
    %672 = cosh(%668) /* ty=Tensor[(16, 3, 8), float32] */;
    %673 = asin(%669) /* ty=Tensor[(16, 3, 8), float32] */;
    (%670, %671, %672, %673)
  };
  %674(%var_7768) /* ty=(Tensor[(4, 8, 14), bool], Tensor[(16, 3, 8), uint64], Tensor[(16, 3, 8), float32], Tensor[(16, 3, 8), float32]) */
}

def @func_2995() -> (Tensor[(4, 2, 4), float64],) {
  %675 = @func_2521() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %676 = %675.0;
  (%676,)
}

def @func_5471() -> Tensor[(48), float32] {
  @func_5469() /* ty=Tensor[(48), float32] */
}

def @func_4594() -> Tensor[(448), bool] {
  %677 = @func_2741() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %677.2
}

def @func_4645() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  @func_4643() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */
}

def @func_5727() -> (Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) {
  %678 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %679 = @func_5252() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %680 = @func_5246() /* ty=Tensor[(4, 2, 4), bool] */;
  %681 = %678.0;
  %682 = %679.0;
  (%680, %681, %682)
}

def @func_4269() -> (Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) {
  @func_4267() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) */
}

def @func_4757(%var_4755: Tensor[(8, 2, 6), float64]) -> Tensor[(8, 2, 6), bool] {
  @func_4754(%var_4755) /* ty=Tensor[(8, 2, 6), bool] */
}

def @func_2339(%var_2337: Tensor[(8, 70), float32], %var_2338: Tensor[(8, 70), float64]) -> (Tensor[(4, 2, 4), bool], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(8, 70), int16], Tensor[(8, ?, 6), float64], Tensor[(8, 70), float32], Tensor[(8, 70), bool], Tensor[(8, 70), int16], Tensor[(14, 1), int32], Tensor[(2145), int16], Tensor[(4, 2, 4), float64]) {
  @func_2335(%var_2337, %var_2338) /* ty=(Tensor[(4, 2, 4), bool], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(8, 70), int16], Tensor[(8, ?, 6), float64], Tensor[(8, 70), float32], Tensor[(8, 70), bool], Tensor[(8, 70), int16], Tensor[(14, 1), int32], Tensor[(2145), int16], Tensor[(4, 2, 4), float64]) */
}

def @func_6436(%var_6394: Tensor[(1638), float64], %var_6430: Tensor[(980), uint16]) -> (Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), bool], Tensor[(560), float32], Tensor[(4, 2, 4), float64], Tensor[(980), uint64]) {
  %683 = @func_4643() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
  %684 = cast(meta[relay.Constant][29] /* ty=Tensor[(980), uint16] */, dtype="uint16") /* ty=Tensor[(980), uint16] */;
  %685 = cast(%var_6394, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %686 = cast(meta[relay.Constant][29] /* ty=Tensor[(980), uint16] */, dtype="float64") /* ty=Tensor[(980), float64] */;
  %687 = reshape(%684, newshape=[7, 10, 14]) /* ty=Tensor[(7, 10, 14), uint16] */;
  %688 = reshape(%685, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %689 = reshape(%686, newshape=[7, 10, 14]) /* ty=Tensor[(7, 10, 14), float64] */;
  %690 = @func_1717(%687, %688, %689) /* ty=(Tensor[(7, 10, 14), uint16], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(2145), int16], Tensor[(560), int32], Tensor[(7, 10, 14), float32], Tensor[(448), bool], Tensor[(7, 10, 14), float32]) */;
  %691 = @func_6296() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(2640), int8], Tensor[(4, 2, 4), float32]) */;
  %692 = cast(meta[relay.Constant][30] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
  %693 = cast(meta[relay.Constant][30] /* ty=Tensor[(560), float32] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %694 = reshape(%692, newshape=[8, 70]) /* ty=Tensor[(8, 70), float32] */;
  %695 = reshape(%693, newshape=[8, 70]) /* ty=Tensor[(8, 70), float64] */;
  %696 = @func_2335(%694, %695) /* ty=(Tensor[(4, 2, 4), bool], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(8, 70), int16], Tensor[(8, ?, 6), float64], Tensor[(8, 70), float32], Tensor[(8, 70), bool], Tensor[(8, 70), int16], Tensor[(14, 1), int32], Tensor[(2145), int16], Tensor[(4, 2, 4), float64]) */;
  %697 = @func_3680() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %698 = cast(%var_6430, dtype="uint64") /* ty=Tensor[(980), uint64] */;
  %699 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(980), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %700 = cast(meta[relay.Constant][29] /* ty=Tensor[(980), uint16] */, dtype="uint64") /* ty=Tensor[(980), uint64] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %702 = %683.0;
  %703 = %690.8;
  %704 = %691.0;
  %705 = %696.0;
  %706 = %697.0;
  %707 = bitwise_xor(%700, %701) /* ty=Tensor[(980), uint64] */;
  (%702, %703, %var_6394, %704, %705, meta[relay.Constant][30] /* ty=Tensor[(560), float32] */, %706, %707)
}

def @func_4369(%var_4366: Tensor[(8, 1, 9), float64], %var_4367: Tensor[(60), float32], %var_4368: Tensor[(1, 48), float32]) -> (Tensor[(8, 1, 9), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(8, ?, 6), float64], Tensor[(1, 48), float32], Tensor[(12, 5, ?), float32]) {
  %722 = fn (%var_4305: Tensor[(8, 1, 9), float64], %var_4330: Tensor[(60), float32], %var_4351: Tensor[(1, 48), float32]) -> (Tensor[(8, 1, 9), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(8, ?, 6), float64], Tensor[(1, 48), float32], Tensor[(12, 5, ?), float32]) {
    %708 = cast(%var_4305, dtype="float64") /* ty=Tensor[(8, 1, 9), float64] */;
    %709 = @func_2869() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
    %710 = cast(%var_4330, dtype="float32") /* ty=Tensor[(60), float32] */;
    %711 = reshape(%710, newshape=[4, 15, 1]) /* ty=Tensor[(4, 15, 1), float32] */;
    %712 = @func_3267(%711) /* ty=(Tensor[(4, 15, 1), float32],) */;
    %713 = cast(%var_4351, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
    %714 = reshape(%713, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
    %715 = cast(%var_4330, dtype="float32") /* ty=Tensor[(60), float32] */;
    %716 = reshape(%715, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float32] */;
    %717 = erf(%708) /* ty=Tensor[(8, 1, 9), float64] */;
    %718 = %709.0;
    %719 = %712.0;
    %720 = @func_212(%714) /* ty=Tensor[(8, ?, 6), float64] */;
    %721 = @func_3808(%716) /* ty=Tensor[(12, 5, ?), float32] */;
    (%717, %718, %719, %var_4330, %720, %var_4351, %721)
  };
  %722(%var_4366, %var_4367, %var_4368) /* ty=(Tensor[(8, 1, 9), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 15, 1), float32], Tensor[(60), float32], Tensor[(8, ?, 6), float64], Tensor[(1, 48), float32], Tensor[(12, 5, ?), float32]) */
}

def @func_215(%var_213: Tensor[(8, 1, 6), float32]) -> Tensor[(8, ?, 6), float64] {
  @func_212(%var_213) /* ty=Tensor[(8, ?, 6), float64] */
}

def @func_4426(%var_4424: int8, %var_4425: Tensor[(9, 11, 13), int8]) -> Tensor[(9, 11, 13), int8] {
  %725 = fn (%var_4414: int8, %var_4415: Tensor[(9, 11, 13), int8]) -> Tensor[(9, 11, 13), int8] {
    %723 = cast(%var_4414, dtype="int8") /* ty=int8 */;
    %724 = cast(%var_4415, dtype="int8") /* ty=Tensor[(9, 11, 13), int8] */;
    bitwise_or(%723, %724) /* ty=Tensor[(9, 11, 13), int8] */
  };
  %725(%var_4424, %var_4425) /* ty=Tensor[(9, 11, 13), int8] */
}

def @func_2812() -> (Tensor[(4, 2, 4), float64],) {
  @func_2810() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_5894() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  %729 = fn () -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
    %726 = @func_2810() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %727 = @func_3729() /* ty=Tensor[(4, 2, 4), float64] */;
    %728 = %726.0;
    (%727, %728)
  };
  %729() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */
}

def @func_5873() -> (Tensor[(4, 2, 4), bool], Tensor[(448), bool]) {
  @func_5871() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(448), bool]) */
}

def @func_3715() -> (Tensor[(4, 2, 4), float64],) {
  @func_3713() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_7515(%var_7485: Tensor[(3, 7, 16), bool]) -> (Tensor[(4, 8, 14), float32], Tensor[(3, 7, 16), float32], Tensor[(4, 2, 4), float64]) {
  %730 = @func_5252() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %731 = cast(%var_7485, dtype="bool") /* ty=Tensor[(3, 7, 16), bool] */;
  %732 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(3, 7, 16), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 7, 16), bool] */, dtype="bool") /* ty=Tensor[(3, 7, 16), bool] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %735 = logical_and(%733, %734) /* ty=Tensor[(3, 7, 16), bool] */;
  %736 = cast(%735, dtype="float32") /* ty=Tensor[(3, 7, 16), float32] */;
  %737 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %738 = %730.0;
  %739 = acosh(%736) /* ty=Tensor[(3, 7, 16), float32] */;
  %740 = %737.0;
  (%738, %739, %740)
}

def @func_4576() -> Tensor[(4, 2, 4), bool] {
  @func_4574() /* ty=Tensor[(4, 2, 4), bool] */
}

def @func_4175() -> (Tensor[(4, 2, 4), float64],) {
  %743 = fn () -> (Tensor[(4, 2, 4), float64],) {
    %741 = @func_3713() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %742 = %741.0;
    (%742,)
  };
  %743() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_2869() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  %744 = @func_1788() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %745 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %746 = %744.0;
  %747 = %745.0;
  (%746, %747)
}

def @func_6538(%var_6536: Tensor[(96), float64], %var_6537: Tensor[(560), float32]) -> (Tensor[(4, 2, 4), float32], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(4, 2, 4), bool], Tensor[(560), float32], Tensor[(448), bool]) {
  @func_6534(%var_6536, %var_6537) /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(4, 2, 4), bool], Tensor[(560), float32], Tensor[(448), bool]) */
}

def @func_7797() -> (Tensor[(4, 2, 4), float64],) {
  @func_7795() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_1487() -> Tensor[(4, 2, 4), float64] {
  %748 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %748.0
}

def @func_6036(%var_6010: Tensor[(1638), float64]) -> (Tensor[(4, 8, 14), float32], Tensor[(8, ?, 6), float64], Tensor[(48), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) {
  %749 = @func_3617() /* ty=(Tensor[(4, 8, 14), float32],) */;
  %750 = cast(meta[relay.Constant][32] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %751 = reshape(%750, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
  %752 = cast(%var_6010, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %753 = reshape(%752, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %754 = @func_5429(%753) /* ty=(Tensor[(448), bool], Tensor[(4, 8, 14), bool], Tensor[(14, 13, 9), float64], Tensor[(1638), float64]) */;
  %755 = %749.0;
  %756 = @func_212(%751) /* ty=Tensor[(8, ?, 6), float64] */;
  %757 = %754.0;
  %758 = @func_5957() /* ty=Tensor[(4, 2, 4), float64] */;
  (%755, %756, meta[relay.Constant][32] /* ty=Tensor[(48), float32] */, %757, %var_6010, %758)
}

def @func_2840(%var_2838: Tensor[(7, 9, 12), float64], %var_2839: Tensor[(1638), float64]) -> (Tensor[(13, 4, 16), float64], Tensor[(832), uint64], Tensor[(1638), float64], Tensor[(7, 9, 12), bool]) {
  @func_2836(%var_2838, %var_2839) /* ty=(Tensor[(13, 4, 16), float64], Tensor[(832), uint64], Tensor[(1638), float64], Tensor[(7, 9, 12), bool]) */
}

def @func_4267() -> (Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) {
  %759 = @func_3680() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %760 = cast(meta[relay.Constant][33] /* ty=Tensor[(1638), float64] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %761 = reshape(%760, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %762 = @func_1070(%761) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %763 = @func_4190() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, 70), int16], Tensor[(560), float32], Tensor[(4, 2, 4), float64]) */;
  %764 = %759.0;
  %765 = %762.0;
  %766 = %763.3;
  (%764, %765, meta[relay.Constant][33] /* ty=Tensor[(1638), float64] */, %766)
}

def @func_5992(%var_5990: bool, %var_5991: Tensor[(15, 2, 16), bool]) -> Tensor[(15, 2, 16), bool] {
  @func_5988(%var_5990, %var_5991) /* ty=Tensor[(15, 2, 16), bool] */
}

def @func_7795() -> (Tensor[(4, 2, 4), float64],) {
  %767 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %768 = %767.0;
  (%768,)
}

def @func_6202(%var_6201: Tensor[(2640), int8]) -> (Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(2640), int8]) {
  %782 = fn (%var_6190: Tensor[(2640), int8]) -> (Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(2640), int8]) {
    %769 = @func_4491() /* ty=(Tensor[(4, 8, 14), float32],) */;
    %770 = @func_3680() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %771 = %770.0;
    %772 = cast(%771, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
    %773 = cast(%var_6190, dtype="int8") /* ty=Tensor[(2640), int8] */;
    %774 = cast(%var_6190, dtype="int8") /* ty=Tensor[(2640), int8] */;
    %775 = reshape(%773, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), int8] */;
    %776 = reshape(%774, newshape=[16, 11, 15]) /* ty=Tensor[(16, 11, 15), int8] */;
    %777 = @func_3873(%775, %776) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(16, 11, 15), bool]) */;
    %778 = %769.0;
    %779 = acos(%772) /* ty=Tensor[(4, 2, 4), float64] */;
    %780 = @func_1870() /* ty=Tensor[(4, 2, 4), float64] */;
    %781 = %777.0;
    (%778, %779, %780, %781, %var_6190)
  };
  %782(%var_6201) /* ty=(Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(2640), int8]) */
}

def @func_3922() -> (Tensor[(4, 2, 4), float64],) {
  %784 = fn () -> (Tensor[(4, 2, 4), float64],) {
    %783 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
    (%783,)
  };
  %784() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_1870() -> Tensor[(4, 2, 4), float64] {
  @func_1487() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_2582(%var_2579: Tensor[(13, 4, 16), uint64], %var_2580: Tensor[(13, 4, 16), uint64], %var_2581: Tensor[(1638), float64]) -> (Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(13, 4, 16), float64], Tensor[(4, 2, 4), float64]) {
  @func_2577(%var_2579, %var_2580, %var_2581) /* ty=(Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(13, 4, 16), float64], Tensor[(4, 2, 4), float64]) */
}

def @func_4721(%var_4692: Tensor[(1, 980), uint16]) -> (Tensor[(14, 13, 9), float64], Tensor[(1, 1638), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(1, 980), uint16], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) {
  %785 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 1638), float64] */, dtype="float64") /* ty=Tensor[(1, 1638), float64] */;
  %786 = reshape(%785, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
  %787 = @func_1070(%786) /* ty=(Tensor[(14, 13, 9), float64],) */;
  %788 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %789 = @func_4574() /* ty=Tensor[(4, 2, 4), bool] */;
  %790 = @func_2793() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(448), bool], Tensor[(4, 2, 4), float64]) */;
  %791 = %790.2;
  %792 = cast(%791, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %793 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%789, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %796 = cast(%var_4692, dtype="uint16") /* ty=Tensor[(1, 980), uint16] */;
  %797 = %787.0;
  %798 = cast(%797, dtype="float64") /* ty=Tensor[(14, 13, 9), float64] */;
  %799 = reshape(%796, newshape=[980]) /* ty=Tensor[(980), uint16] */;
  %800 = reshape(%798, newshape=[1638]) /* ty=Tensor[(1638), float64] */;
  %801 = @func_2646(%799, %800) /* ty=(Tensor[(15, 4, 10), uint32], Tensor[(4, 2, 4), float64], Tensor[(7, 10, 14), float32], Tensor[(980), uint16], Tensor[(1638), float64]) */;
  %802 = @func_4174() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %803 = %788.0;
  %804 = floor_divide(%794, %795) /* ty=Tensor[(4, 2, 4), float32] */;
  %805 = @func_4594() /* ty=Tensor[(448), bool] */;
  %806 = %801.4;
  %807 = %802.0;
  %808 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%797, meta[relay.Constant][34] /* ty=Tensor[(1, 1638), float64] */, %803, %804, %805, %806, %var_4692, %807, %808)
}

def @func_3808(%var_3801: Tensor[(12, 5, 1), float32]) -> Tensor[(12, 5, ?), float32] {
  %809 = cast(%var_3801, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
  %810 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(12, 5, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %811 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 5, 1), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  minimum(%811, %812) /* ty=Tensor[(12, 5, ?), float32] */
}

def @func_4574() -> Tensor[(4, 2, 4), bool] {
  %813 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %813.0
}

def @func_7778() -> (Tensor[(4, 2, 4), float64],) {
  %816 = fn () -> (Tensor[(4, 2, 4), float64],) {
    %814 = @func_4643() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
    %815 = %814.0;
    (%815,)
  };
  %816() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_1721(%var_1718: Tensor[(7, 10, 14), uint16], %var_1719: Tensor[(1638), float64], %var_1720: Tensor[(7, 10, 14), float64]) -> (Tensor[(7, 10, 14), uint16], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(2145), int16], Tensor[(560), int32], Tensor[(7, 10, 14), float32], Tensor[(448), bool], Tensor[(7, 10, 14), float32]) {
  %855 = fn (%var_1631: Tensor[(7, 10, 14), uint16], %var_1639: Tensor[(1638), float64], %var_1670: Tensor[(7, 10, 14), float64]) -> (Tensor[(7, 10, 14), uint16], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(2145), int16], Tensor[(560), int32], Tensor[(7, 10, 14), float32], Tensor[(448), bool], Tensor[(7, 10, 14), float32]) {
    %817 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 10, 14), uint16] */, dtype="uint16") /* ty=Tensor[(7, 10, 14), uint16] */;
    %818 = shape_of(%var_1631, dtype="int32") /* ty=Tensor[(3), int32] */;
    %819 = cast(%var_1631, dtype="uint16") /* ty=Tensor[(7, 10, 14), uint16] */;
    %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %821 = cast(%var_1639, dtype="float64") /* ty=Tensor[(1638), float64] */;
    %822 = reshape(%821, newshape=[14, 13, 9]) /* ty=Tensor[(14, 13, 9), float64] */;
    %823 = @func_1070(%822) /* ty=(Tensor[(14, 13, 9), float64],) */;
    %824 = cast(meta[relay.Constant][37] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
    %825 = cast(meta[relay.Constant][37] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
    %826 = cast(meta[relay.Constant][38] /* ty=Tensor[(560), int32] */, dtype="int32") /* ty=Tensor[(560), int32] */;
    %827 = reshape(%824, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
    %828 = reshape(%825, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), int16] */;
    %829 = reshape(%826, newshape=[560]) /* ty=Tensor[(560), int32] */;
    %830 = @func_533(%827, %828, %829) /* ty=(Tensor[(13, 15, 11), int16], Tensor[(8, ?, 6), float64], Tensor[(14, 1), int32], Tensor[(560), int32]) */;
    %831 = cast(meta[relay.Constant][36] /* ty=Tensor[(7, 10, 14), uint16] */, dtype="float64") /* ty=Tensor[(7, 10, 14), float64] */;
    %832 = log2(%831) /* ty=Tensor[(7, 10, 14), float64] */;
    %833 = cast(%832, dtype="float64") /* ty=Tensor[(7, 10, 14), float64] */;
    %834 = erf(%833) /* ty=Tensor[(7, 10, 14), float64] */;
    %835 = cast(%834, dtype="bool") /* ty=Tensor[(7, 10, 14), bool] */;
    %836 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
    %837 = cast(%832, dtype="bool") /* ty=Tensor[(7, 10, 14), bool] */;
    %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %839 = logical_or(%837, %838) /* ty=Tensor[(7, 10, 14), bool] */;
    %840 = cast(%839, dtype="float32") /* ty=Tensor[(7, 10, 14), float32] */;
    %841 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
    %842 = cast(%var_1670, dtype="int16") /* ty=Tensor[(7, 10, 14), int16] */;
    %843 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
    %844 = cast(%834, dtype="int16") /* ty=Tensor[(7, 10, 14), int16] */;
    %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %846 = left_shift(%844, %845) /* ty=Tensor[(7, 10, 14), int16] */;
    %847 = cast(%846, dtype="float32") /* ty=Tensor[(7, 10, 14), float32] */;
    %848 = right_shift(%819, %820) /* ty=Tensor[(7, 10, 14), uint16] */;
    %849 = %823.0;
    %850 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
    %851 = %830.1;
    %852 = asin(%840) /* ty=Tensor[(7, 10, 14), float32] */;
    %853 = %841.2;
    %854 = tan(%847) /* ty=Tensor[(7, 10, 14), float32] */;
    (%848, %849, %var_1639, %850, %851, meta[relay.Constant][37] /* ty=Tensor[(2145), int16] */, meta[relay.Constant][38] /* ty=Tensor[(560), int32] */, %852, %853, %854)
  };
  %855(%var_1718, %var_1719, %var_1720) /* ty=(Tensor[(7, 10, 14), uint16], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(2145), int16], Tensor[(560), int32], Tensor[(7, 10, 14), float32], Tensor[(448), bool], Tensor[(7, 10, 14), float32]) */
}

def @func_3976() -> (Tensor[(4, 2, 4), float64],) {
  %856 = @func_3680() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %857 = %856.0;
  (%857,)
}

def @func_6935(%var_6933: Tensor[(12, 6, 16), float32]) -> (Tensor[(12, 6, 16), float64],) {
  @func_6932(%var_6933) /* ty=(Tensor[(12, 6, 16), float64],) */
}

def @func_7868() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), uint8], Tensor[(4, 8, 14), int64], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), uint16], Tensor[(4, 8, 14), float32]) {
  %881 = fn () -> (Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), uint8], Tensor[(4, 8, 14), int64], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), uint16], Tensor[(4, 8, 14), float32]) {
    %858 = @func_4267() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(14, 13, 9), float64], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) */;
    %859 = @func_5727() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
    %860 = %859.2;
    %861 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 8, 14), float32] */, dtype="uint8") /* ty=Tensor[(4, 8, 14), uint8] */;
    %862 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
    %863 = cast(%860, dtype="uint8") /* ty=Tensor[(4, 8, 14), uint8] */;
    %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %865 = cast(%860, dtype="int64") /* ty=Tensor[(4, 8, 14), int64] */;
    %866 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(4, 8, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %867 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 8, 14), float32] */, dtype="int64") /* ty=Tensor[(4, 8, 14), int64] */;
    %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %869 = @func_4014() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %870 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 8, 14), float32] */, dtype="uint16") /* ty=Tensor[(4, 8, 14), uint16] */;
    %871 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
    %872 = cast(%860, dtype="uint16") /* ty=Tensor[(4, 8, 14), uint16] */;
    %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %874 = @func_4491() /* ty=(Tensor[(4, 8, 14), float32],) */;
    %875 = %858.3;
    %876 = logical_xor(%863, %864) /* ty=Tensor[(4, 8, 14), uint8] */;
    %877 = maximum(%867, %868) /* ty=Tensor[(4, 8, 14), int64] */;
    %878 = %869.0;
    %879 = bitwise_xor(%872, %873) /* ty=Tensor[(4, 8, 14), uint16] */;
    %880 = %874.0;
    (%875, %876, %877, %878, %879, %880)
  };
  %881() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), uint8], Tensor[(4, 8, 14), int64], Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), uint16], Tensor[(4, 8, 14), float32]) */
}

def @func_212(%var_195: Tensor[(8, 1, 6), float32]) -> Tensor[(8, ?, 6), float64] {
  %882 = cast(%var_195, dtype="float32") /* ty=Tensor[(8, 1, 6), float32] */;
  %883 = tan(%882) /* ty=Tensor[(8, 1, 6), float32] */;
  %884 = cast(%var_195, dtype="float64") /* ty=Tensor[(8, 1, 6), float64] */;
  %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %886 = cast(%883, dtype="float64") /* ty=Tensor[(8, 1, 6), float64] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%886, %887) /* ty=Tensor[(8, ?, 6), float64] */
}

def @func_2760() -> Tensor[(4, 2, 4), float64] {
  %888 = @func_2096() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %889 = %888.0;
  %890 = cast(%889, dtype="float64") /* ty=Tensor[(4, 2, 4), float64] */;
  sin(%890) /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_8115() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), bool]) {
  %894 = fn () -> (Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), bool]) {
    %891 = @func_2741() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
    %892 = %891.3;
    %893 = @func_5246() /* ty=Tensor[(4, 2, 4), bool] */;
    (%892, %893)
  };
  %894() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), bool]) */
}

def @func_7430() -> Tensor[(448), bool] {
  @func_7428() /* ty=Tensor[(448), bool] */
}

def @func_2590() -> (Tensor[(4, 2, 4), float64],) {
  %896 = fn () -> (Tensor[(4, 2, 4), float64],) {
    %895 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
    (%895,)
  };
  %896() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_3811(%var_3809: Tensor[(12, 5, 1), float32]) -> Tensor[(12, 5, ?), float32] {
  @func_3808(%var_3809) /* ty=Tensor[(12, 5, ?), float32] */
}

def @func_4458() -> (Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64]) {
  %897 = @func_3534() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
  %898 = %897.1;
  %899 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  (%898, %899)
}

def @func_1232(%var_1230: Tensor[(4, 8, 14), bool], %var_1231: Tensor[(4, 8, 14), bool]) -> Tensor[(4, 8, 14), bool] {
  %904 = fn (%var_1216: Tensor[(4, 8, 14), bool], %var_1217: Tensor[(4, 8, 14), bool]) -> Tensor[(4, 8, 14), bool] {
    %900 = cast(%var_1217, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
    %901 = shape_of(%var_1216, dtype="int32") /* ty=Tensor[(3), int32] */;
    %902 = cast(%var_1216, dtype="bool") /* ty=Tensor[(4, 8, 14), bool] */;
    %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%902, %903) /* ty=Tensor[(4, 8, 14), bool] */
  };
  %904(%var_1230, %var_1231) /* ty=Tensor[(4, 8, 14), bool] */
}

def @func_4389(%var_4388: Tensor[(330), uint16]) -> (Tensor[(4, 2, 4), float64], Tensor[(11, 5, 6), uint16], Tensor[(330), uint16]) {
  %910 = fn (%var_4383: Tensor[(330), uint16]) -> (Tensor[(4, 2, 4), float64], Tensor[(11, 5, 6), uint16], Tensor[(330), uint16]) {
    %905 = cast(%var_4383, dtype="uint16") /* ty=Tensor[(330), uint16] */;
    %906 = reshape(%905, newshape=[11, 5, 6]) /* ty=Tensor[(11, 5, 6), uint16] */;
    %907 = @func_3311(%906) /* ty=(Tensor[(11, 5, 6), uint16], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64]) */;
    %908 = @func_2760() /* ty=Tensor[(4, 2, 4), float64] */;
    %909 = %907.0;
    (%908, %909, %var_4383)
  };
  %910(%var_4388) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(11, 5, 6), uint16], Tensor[(330), uint16]) */
}

def @func_2408(%var_2387: Tensor[(2, 24), float32]) -> (Tensor[(4, 2, 4), float32], Tensor[(8, ?, 6), float64]) {
  %911 = @func_2030() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), bool], Tensor[(4, 2, 4), float32]) */;
  %912 = cast(%var_2387, dtype="float32") /* ty=Tensor[(2, 24), float32] */;
  %913 = reshape(%912, newshape=[8, 1, 6]) /* ty=Tensor[(8, 1, 6), float32] */;
  %914 = @func_212(%913) /* ty=Tensor[(8, ?, 6), float64] */;
  %915 = cast(%var_2387, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %916 = shape_of(%914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%914, dtype="float64") /* ty=Tensor[(8, ?, 6), float64] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %919 = %911.2;
  %920 = floor_divide(%917, %918) /* ty=Tensor[(8, ?, 6), float64] */;
  (%919, %920)
}

def @func_3579(%var_3566: Tensor[(14), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(14), int32], Tensor[(4, 2, 4), int64]) {
  %921 = @func_1396() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %922 = %921.0;
  %923 = cast(%var_3566, dtype="int32") /* ty=Tensor[(14), int32] */;
  %924 = reshape(%923, newshape=[1, 14]) /* ty=Tensor[(1, 14), int32] */;
  %925 = @func_2061(%924) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) */;
  %926 = %925.0;
  %927 = cast(%926, dtype="int64") /* ty=Tensor[(4, 2, 4), int64] */;
  %928 = shape_of(%922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %929 = cast(%922, dtype="int64") /* ty=Tensor[(4, 2, 4), int64] */;
  %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %931 = @func_1487() /* ty=Tensor[(4, 2, 4), float64] */;
  %932 = bitwise_and(%929, %930) /* ty=Tensor[(4, 2, 4), int64] */;
  (%931, %var_3566, %932)
}

def @func_2523() -> (Tensor[(4, 2, 4), float64],) {
  @func_2521() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_7240() -> Tensor[(4, 2, 4), float64] {
  %934 = fn () -> Tensor[(4, 2, 4), float64] {
    %933 = @func_4174() /* ty=(Tensor[(4, 2, 4), float64],) */;
    %933.0
  };
  %934() /* ty=Tensor[(4, 2, 4), float64] */
}

def @func_2064(%var_2062: Tensor[(1, 14), int32]) -> (Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) {
  @func_2061(%var_2062) /* ty=(Tensor[(4, 2, 4), float64], Tensor[(8, ?, 6), float64], Tensor[(1, 14), int32], Tensor[(560), int32]) */
}

def @func_3713() -> (Tensor[(4, 2, 4), float64],) {
  %935 = @func_2589() /* ty=(Tensor[(4, 2, 4), float64],) */;
  %936 = %935.0;
  (%936,)
}

def @func_8166(%var_8161: Tensor[(8, 70), int16]) -> (Tensor[(4, 2, 4), bool], Tensor[(8, 70), uint64]) {
  %937 = @func_5871() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(448), bool]) */;
  %938 = @func_4190() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, 70), int16], Tensor[(560), float32], Tensor[(4, 2, 4), float64]) */;
  %939 = %938.1;
  %940 = cast(%var_8161, dtype="uint64") /* ty=Tensor[(8, 70), uint64] */;
  %941 = shape_of(%939, dtype="int32") /* ty=Tensor[(2), int32] */;
  %942 = cast(%939, dtype="uint64") /* ty=Tensor[(8, 70), uint64] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %944 = %937.0;
  %945 = maximum(%942, %943) /* ty=Tensor[(8, 70), uint64] */;
  (%944, %945)
}

def @func_6932(%var_6926: Tensor[(12, 6, 16), float32]) -> (Tensor[(12, 6, 16), float64],) {
  %946 = cast(%var_6926, dtype="float32") /* ty=Tensor[(12, 6, 16), float32] */;
  %947 = erf(%946) /* ty=Tensor[(12, 6, 16), float32] */;
  %948 = cast(%var_6926, dtype="float64") /* ty=Tensor[(12, 6, 16), float64] */;
  %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %950 = cast(%947, dtype="float64") /* ty=Tensor[(12, 6, 16), float64] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %952 = power(%950, %951) /* ty=Tensor[(12, 6, 16), float64] */;
  (%952,)
}

def @func_2997() -> (Tensor[(4, 2, 4), float64],) {
  @func_2995() /* ty=(Tensor[(4, 2, 4), float64],) */
}

def @func_5143() -> (Tensor[(448), bool],) {
  @func_5141() /* ty=(Tensor[(448), bool],) */
}

def @func_3618() -> (Tensor[(4, 8, 14), float32],) {
  %955 = fn () -> (Tensor[(4, 8, 14), float32],) {
    %953 = @func_3534() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) */;
    %954 = %953.1;
    (%954,)
  };
  %955() /* ty=(Tensor[(4, 8, 14), float32],) */
}

def @func_3534() -> (Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), float32]) {
  %956 = @func_2741() /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool], Tensor[(448), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32]) */;
  %957 = %956.1;
  %958 = cast(%957, dtype="float64") /* ty=Tensor[(4, 8, 14), float64] */;
  %959 = asin(%958) /* ty=Tensor[(4, 8, 14), float64] */;
  %960 = cast(%959, dtype="float32") /* ty=Tensor[(4, 8, 14), float32] */;
  %961 = @func_2760() /* ty=Tensor[(4, 2, 4), float64] */;
  %962 = cos(%960) /* ty=Tensor[(4, 8, 14), float32] */;
  (%961, %962)
}

def @func_6039(%var_6037: Tensor[(1638), float64]) -> (Tensor[(4, 8, 14), float32], Tensor[(8, ?, 6), float64], Tensor[(48), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) {
  @func_6036(%var_6037) /* ty=(Tensor[(4, 8, 14), float32], Tensor[(8, ?, 6), float64], Tensor[(48), float32], Tensor[(448), bool], Tensor[(1638), float64], Tensor[(4, 2, 4), float64]) */
}

def @func_2979(%var_2977: Tensor[(1, 448), bool]) -> (Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool]) {
  @func_2976(%var_2977) /* ty=(Tensor[(4, 2, 4), float32], Tensor[(4, 8, 14), bool]) */
}

def @func_7016(%var_7012: bool, %var_7013: Tensor[(4, 120), bool], %var_7014: Tensor[(2640), int8], %var_7015: Tensor[(96), float64]) -> (Tensor[(448), bool], Tensor[(4, 8, 14), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32], Tensor[(60), float32], Tensor[(15, 2, 16), bool], bool, Tensor[(4, 120), bool], Tensor[(4, 2, 4), float64], Tensor[(2640), int8], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(560), float32]) {
  %988 = fn (%var_6983: bool, %var_6984: Tensor[(4, 120), bool], %var_6995: Tensor[(2640), int8], %var_7000: Tensor[(96), float64]) -> (Tensor[(448), bool], Tensor[(4, 8, 14), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32], Tensor[(60), float32], Tensor[(15, 2, 16), bool], bool, Tensor[(4, 120), bool], Tensor[(4, 2, 4), float64], Tensor[(2640), int8], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(560), float32]) {
    %963 = @func_5871() /* ty=(Tensor[(4, 2, 4), bool], Tensor[(448), bool]) */;
    %964 = @func_1608() /* ty=(Tensor[(4, 2, 4), float64], Tensor[(4, 8, 14), bool], Tensor[(448), bool]) */;
    %965 = @func_6356() /* ty=(Tensor[(448), bool], Tensor[(4, 2, 4), float64]) */;
    %966 = cast(meta[relay.Constant][40] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %967 = reshape(%966, newshape=[60, 1]) /* ty=Tensor[(60, 1), float32] */;
    %968 = @func_5368(%967) /* ty=(Tensor[(4, 2, 4), int16], Tensor[(12, 5, ?), float32], Tensor[(60, 1), float32], Tensor[(4, 2, 4), float32]) */;
    %969 = cast(%var_6983, dtype="bool") /* ty=bool */;
    %970 = cast(%var_6984, dtype="bool") /* ty=Tensor[(4, 120), bool] */;
    %971 = reshape(%969, newshape=[]) /* ty=bool */;
    %972 = reshape(%970, newshape=[15, 2, 16]) /* ty=Tensor[(15, 2, 16), bool] */;
    %973 = cast(%var_6995, dtype="int8") /* ty=Tensor[(2640), int8] */;
    %974 = reshape(%973, newshape=[2640]) /* ty=Tensor[(2640), int8] */;
    %975 = @func_6200(%974) /* ty=(Tensor[(4, 8, 14), float32], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float64], Tensor[(2640), int8]) */;
    %976 = cast(%var_7000, dtype="float64") /* ty=Tensor[(96), float64] */;
    %977 = cast(meta[relay.Constant][41] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
    %978 = reshape(%976, newshape=[96]) /* ty=Tensor[(96), float64] */;
    %979 = reshape(%977, newshape=[560]) /* ty=Tensor[(560), float32] */;
    %980 = @func_6534(%978, %979) /* ty=(Tensor[(4, 2, 4), float32], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(4, 2, 4), bool], Tensor[(560), float32], Tensor[(448), bool]) */;
    %981 = %963.1;
    %982 = %964.1;
    %983 = %965.1;
    %984 = %968.3;
    %985 = @func_5988(%971, %972) /* ty=Tensor[(15, 2, 16), bool] */;
    %986 = %975.2;
    %987 = %980.1;
    (%981, %982, %983, %984, meta[relay.Constant][40] /* ty=Tensor[(60), float32] */, %985, %var_6983, %var_6984, %986, %var_6995, %987, %var_7000, meta[relay.Constant][41] /* ty=Tensor[(560), float32] */)
  };
  %988(%var_7012, %var_7013, %var_7014, %var_7015) /* ty=(Tensor[(448), bool], Tensor[(4, 8, 14), bool], Tensor[(4, 2, 4), float64], Tensor[(4, 2, 4), float32], Tensor[(60), float32], Tensor[(15, 2, 16), bool], bool, Tensor[(4, 120), bool], Tensor[(4, 2, 4), float64], Tensor[(2640), int8], Tensor[(8, 2, 6), bool], Tensor[(96), float64], Tensor[(560), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

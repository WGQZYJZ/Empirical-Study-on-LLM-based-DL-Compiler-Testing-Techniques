==========mod==========
#[version = "0.0.5"]
def @func_1638(%var_1617: uint16, %var_1618: Tensor[(13, 3, 6), uint16]) -> (Tensor[(13, 3, 6), uint16], Tensor[(660), float64], Tensor[(1456), uint64], Tensor[(110, 6), float64]) {
  %0 = cast(%var_1617, dtype="uint16") /* ty=uint16 */;
  %1 = cast(%var_1618, dtype="uint16") /* ty=Tensor[(13, 3, 6), uint16] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(1456), uint64] */, dtype="uint64") /* ty=Tensor[(1456), uint64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(1456), uint64] */, dtype="uint64") /* ty=Tensor[(1456), uint64] */;
  %4 = cast(meta[relay.Constant][1] /* ty=Tensor[(110, 6), float64] */, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
  %5 = reshape(%2, newshape=[8, 13, 14]) /* ty=Tensor[(8, 13, 14), uint64] */;
  %6 = reshape(%3, newshape=[8, 13, 14]) /* ty=Tensor[(8, 13, 14), uint64] */;
  %7 = reshape(%4, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %8 = @func_929(%5, %6, %7) /* ty=(Tensor[(8, 13, 14), uint64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(12, 5, 11), float64], int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(10, 66), uint16]) */;
  %9 = left_shift(%0, %1) /* ty=Tensor[(13, 3, 6), uint16] */;
  %10 = %8.2;
  (%9, %10, meta[relay.Constant][0] /* ty=Tensor[(1456), uint64] */, meta[relay.Constant][1] /* ty=Tensor[(110, 6), float64] */)
}

def @func_1365() -> (int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) {
  %11 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %12 = cast(meta[relay.Constant][2] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %13 = reshape(%12, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
  %14 = %11.2;
  %15 = @func_10(%13) /* ty=Tensor[(12, 5, 11), float64] */;
  (%14, %15, meta[relay.Constant][2] /* ty=Tensor[(660), float64] */)
}

def @func_2197() -> Tensor[(6, 8, 11), float64] {
  %16 = @func_1866() /* ty=(Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) */;
  %16.1
}

def @func_1467() -> (Tensor[(660), float64],) {
  %17 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %18 = %17.2;
  (%18,)
}

def @func_8041() -> (Tensor[(48), float64],) {
  %19 = @func_4805() /* ty=(Tensor[(48), float64],) */;
  %20 = %19.0;
  (%20,)
}

def @func_1983(%var_1939: Tensor[(924), float32]) -> (Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float64], Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(8, 2, 3), float32], float64, Tensor[(10, 66), float64], Tensor[(10, 66), float64]) {
  %21 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %22 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %23 = reshape(%22, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %24 = @func_1029(%23) /* ty=(int64, Tensor[(3, 14, 3), float64], Tensor[(126), float64], Tensor[(8, 2, 3), float64], Tensor[(48), float64]) */;
  %25 = cast(%var_1939, dtype="float32") /* ty=Tensor[(924), float32] */;
  %26 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %27 = reshape(%25, newshape=[924]) /* ty=Tensor[(924), float32] */;
  %28 = reshape(%26, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %29 = @func_1592(%27, %28) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(924), float32], float64, Tensor[(48), float64], Tensor[(8, 13, 14), uint64]) */;
  %30 = cast(9.44378f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %31 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %32 = reshape(%30, newshape=[]) /* ty=float64 */;
  %33 = reshape(%31, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %34 = @func_556(%32, %33) /* ty=(Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) */;
  %35 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %36 = cast(meta[relay.Constant][4] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %37 = reshape(%36, newshape=[10, 66]) /* ty=Tensor[(10, 66), float64] */;
  %38 = @func_632(%37) /* ty=(Tensor[(10, 66), uint16],) */;
  %39 = %38.0;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(10, 66), float32] */;
  %41 = cosh(%40) /* ty=Tensor[(10, 66), float32] */;
  %42 = cast(meta[relay.Constant][5] /* ty=Tensor[(10, 66), float32] */, dtype="uint64") /* ty=Tensor[(10, 66), uint64] */;
  %43 = shape_of(%41, dtype="int32") /* ty=Tensor[(2), int32] */;
  %44 = cast(%41, dtype="uint64") /* ty=Tensor[(10, 66), uint64] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %46 = logical_xor(%44, %45) /* ty=Tensor[(10, 66), uint64] */;
  %47 = cast(meta[relay.Constant][4] /* ty=Tensor[(660), float64] */, dtype="bool") /* ty=Tensor[(660), bool] */;
  %48 = shape_of(%46, dtype="int32") /* ty=Tensor[(2), int32] */;
  %49 = cast(%46, dtype="bool") /* ty=Tensor[(10, 66), bool] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %51 = logical_or(%49, %50) /* ty=Tensor[(10, 66), bool] */;
  %52 = cast(%51, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %53 = @func_1880() /* ty=Tensor[(6, 8, 11), float64] */;
  %54 = %21.0;
  %55 = %24.3;
  %56 = %29.1;
  %57 = %34.1;
  %58 = %35.3;
  %59 = atanh(%52) /* ty=Tensor[(10, 66), float64] */;
  (%53, %54, %55, meta[relay.Constant][3] /* ty=Tensor[(12, 4), float64] */, %56, %var_1939, %57, 9.44378f64 /* ty=float64 */, %58, %59)
}

def @func_7186(%var_7176: Tensor[(660), float64]) -> (Tensor[(10, 4, 6), float64], Tensor[(924), float32], Tensor[(660), float32], Tensor[(660), float64]) {
  %60 = @func_4652() /* ty=(Tensor[(10, 4, 6), float64],) */;
  %61 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
  %62 = cast(%var_7176, dtype="float64") /* ty=Tensor[(660), float64] */;
  %63 = reshape(%62, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %64 = @func_3527(%63) /* ty=(Tensor[(660), float32],) */;
  %65 = %60.0;
  %66 = %61.2;
  %67 = %64.0;
  (%65, %66, %67, %var_7176)
}

def @func_8614() -> (Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) {
  %68 = @func_8279() /* ty=(Tensor[(110, 6), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
  %69 = @func_3450() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %70 = %68.2;
  %71 = %69.0;
  (%70, %71)
}

def @func_4049() -> (int64, Tensor[(6, 8, 11), float64], Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(6, 8, 11), float64]) {
  %72 = @func_1816() /* ty=(int64, Tensor[(10, 66), uint16], Tensor[(660), float64]) */;
  %73 = cast(meta[relay.Constant][6] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %74 = reshape(%73, newshape=[8, 4, 9]) /* ty=Tensor[(8, 4, 9), float64] */;
  %75 = @func_2532(%74) /* ty=(Tensor[(8, 4, 9), float64], Tensor[(6, 8, 11), float64]) */;
  %76 = cast(meta[relay.Constant][7] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %77 = reshape(%76, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), float32] */;
  %78 = @func_1427(%77) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(11, 6, 14), float64]) */;
  %79 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %80 = %72.0;
  %81 = %75.1;
  %82 = %78.1;
  %83 = %79.0;
  (%80, %81, meta[relay.Constant][6] /* ty=Tensor[(288), float64] */, %82, meta[relay.Constant][7] /* ty=Tensor[(924), float32] */, %83)
}

def @func_4502(%var_4488: Tensor[(10, 12, 6), float64]) -> (Tensor[(10, 12, 6), float64],) {
  %84 = cast(%var_4488, dtype="float64") /* ty=Tensor[(10, 12, 6), float64] */;
  %85 = tan(%84) /* ty=Tensor[(10, 12, 6), float64] */;
  (%85,)
}

def @func_8303() -> Tensor[(660), float64] {
  @func_1699() /* ty=Tensor[(660), float64] */
}

def @func_8216(%var_8153: Tensor[(5, 14, 9), bool], %var_8211: Tensor[(110, 6), float64]) -> (Tensor[(3, 9, 6), float32], Tensor[(630), float64], Tensor[(5, 14, 9), bool], Tensor[(6, 8, 11), float64], Tensor[(6, 7, 12), float64], Tensor[(8, 13, 14), uint64], Tensor[(110, 6), float64]) {
  %86 = @func_6110() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(660), float64]) */;
  %87 = cast(meta[relay.Constant][8] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %88 = reshape(%87, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %89 = @func_6177(%88) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(5, 14, 9), bool], Tensor[(630), float64], Tensor[(1200), bool]) */;
  %90 = %89.2;
  %91 = cast(%var_8153, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%90, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %95 = @func_8092() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %96 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 7, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  %97 = log10(%96) /* ty=Tensor[(6, 7, 12), float64] */;
  %98 = cast(%97, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  %99 = acos(%98) /* ty=Tensor[(6, 7, 12), float64] */;
  %100 = cast(%99, dtype="int8") /* ty=Tensor[(6, 7, 12), int8] */;
  %101 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(%97, dtype="int8") /* ty=Tensor[(6, 7, 12), int8] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %104 = maximum(%102, %103) /* ty=Tensor[(6, 7, 12), int8] */;
  %105 = cast(%97, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  %106 = acosh(%105) /* ty=Tensor[(6, 7, 12), float64] */;
  %107 = cast(%106, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  %108 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%104, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %111 = cast(%var_8211, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
  %112 = reshape(%111, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %113 = @func_1072(%112) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) */;
  %114 = %86.0;
  %115 = equal(%93, %94) /* ty=Tensor[(5, 14, 9), bool] */;
  %116 = %95.0;
  %117 = subtract(%109, %110) /* ty=Tensor[(6, 7, 12), float64] */;
  %118 = %113.1;
  (%114, meta[relay.Constant][8] /* ty=Tensor[(630), float64] */, %115, %116, %117, %118, %var_8211)
}

def @func_1772() -> (Tensor[(6, 8, 11), float64],) {
  %119 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %120 = %119.0;
  (%120,)
}

def @func_7896(%var_7884: Tensor[(3, 9, 6), float32]) -> (Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), uint8]) {
  %121 = @func_3643() /* ty=Tensor[(3, 9, 6), float32] */;
  %122 = cast(%var_7884, dtype="uint8") /* ty=Tensor[(3, 9, 6), uint8] */;
  %123 = shape_of(%121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(%121, dtype="uint8") /* ty=Tensor[(3, 9, 6), uint8] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %126 = @func_2179() /* ty=Tensor[(6, 8, 11), float64] */;
  %127 = bitwise_or(%124, %125) /* ty=Tensor[(3, 9, 6), uint8] */;
  (%126, %127)
}

def @func_3643() -> Tensor[(3, 9, 6), float32] {
  %128 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
  %128.4
}

def @func_3117() -> (Tensor[(10, 4, 6), float64],) {
  %129 = cast(-5.38058f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %130 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 4, 6), float64] */, dtype="float64") /* ty=Tensor[(10, 4, 6), float64] */;
  %131 = mod(%129, %130) /* ty=Tensor[(10, 4, 6), float64] */;
  (%131,)
}

def @func_4193() -> (Tensor[(6, 8, 11), float32], Tensor[(3, 9, 6), float32]) {
  %132 = @func_2215() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %133 = %132.0;
  %134 = cast(%133, dtype="float32") /* ty=Tensor[(6, 8, 11), float32] */;
  %135 = cos(%134) /* ty=Tensor[(6, 8, 11), float32] */;
  %136 = @func_2646() /* ty=Tensor[(3, 9, 6), float32] */;
  (%135, %136)
}

def @func_4393() -> (Tensor[(14, 10, 3), float64],) {
  %137 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(14, 10, 3), float64] */;
  %138 = sqrt(%137) /* ty=Tensor[(14, 10, 3), float64] */;
  (%138,)
}

def @func_3388(%var_3377: Tensor[(4, 1, 9), int8], %var_3378: Tensor[(4, 10, 9), int8]) -> (Tensor[(4, 10, 9), bool],) {
  %139 = cast(%var_3377, dtype="bool") /* ty=Tensor[(4, 1, 9), bool] */;
  %140 = cast(%var_3378, dtype="bool") /* ty=Tensor[(4, 10, 9), bool] */;
  %141 = less(%139, %140) /* ty=Tensor[(4, 10, 9), bool] */;
  (%141,)
}

def @func_2191() -> (Tensor[(660), float64],) {
  %142 = @func_1467() /* ty=(Tensor[(660), float64],) */;
  %143 = %142.0;
  (%143,)
}

def @func_2215() -> (Tensor[(6, 8, 11), float64],) {
  %144 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %145 = %144.0;
  (%145,)
}

def @func_5151() -> (Tensor[(3, 9, 6), float32],) {
  %146 = @func_4922() /* ty=Tensor[(3, 9, 6), float32] */;
  (%146,)
}

def @func_6704() -> (Tensor[(3, 9, 6), float32], Tensor[(120, 2), float64], Tensor[(10, 4, 6), float32]) {
  %147 = @func_5360() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(48), float64]) */;
  %148 = cast(meta[relay.Constant][12] /* ty=Tensor[(120, 2), float64] */, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
  %149 = reshape(%148, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), float64] */;
  %150 = @func_3479(%149) /* ty=Tensor[(10, 4, 6), float64] */;
  %151 = cast(%150, dtype="float32") /* ty=Tensor[(10, 4, 6), float32] */;
  %152 = %147.0;
  %153 = atan(%151) /* ty=Tensor[(10, 4, 6), float32] */;
  (%152, meta[relay.Constant][12] /* ty=Tensor[(120, 2), float64] */, %153)
}

def @func_3546() -> Tensor[(6, 8, 11), float64] {
  @func_2197() /* ty=Tensor[(6, 8, 11), float64] */
}

def @func_4922() -> Tensor[(3, 9, 6), float32] {
  %154 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
  %154.0
}

def @func_5171() -> Tensor[(15, 16, 4), float64] {
  %155 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 16, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 16, 4), float64] */;
  sqrt(%155) /* ty=Tensor[(15, 16, 4), float64] */
}

def @func_4144() -> (Tensor[(6, 8, 11), float64], Tensor[(924), float32]) {
  %156 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
  %157 = @func_2197() /* ty=Tensor[(6, 8, 11), float64] */;
  %158 = %156.2;
  (%157, %158)
}

def @func_1739(%var_1736: Tensor[(48), float64]) -> (Tensor[(6, 8, 11), float64], float64, Tensor[(924), float32], Tensor[(48), float64]) {
  %159 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %160 = cast(meta[relay.Constant][14] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %161 = cast(%var_1736, dtype="float64") /* ty=Tensor[(48), float64] */;
  %162 = reshape(%160, newshape=[924]) /* ty=Tensor[(924), float32] */;
  %163 = reshape(%161, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %164 = @func_1592(%162, %163) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(924), float32], float64, Tensor[(48), float64], Tensor[(8, 13, 14), uint64]) */;
  %165 = %159.0;
  %166 = %164.5;
  (%165, %166, meta[relay.Constant][14] /* ty=Tensor[(924), float32] */, %var_1736)
}

def @func_2646() -> Tensor[(3, 9, 6), float32] {
  %167 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
  %167.0
}

def @func_5360() -> (Tensor[(3, 9, 6), float32], Tensor[(48), float64]) {
  %168 = @func_4805() /* ty=(Tensor[(48), float64],) */;
  %169 = @func_3643() /* ty=Tensor[(3, 9, 6), float32] */;
  %170 = %168.0;
  (%169, %170)
}

def @func_3769(%var_3694: Tensor[(10, 66), uint16]) -> (Tensor[(6, 8, 11), float64], Tensor[(10, 66), int32], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32]) {
  %171 = @func_2215() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %172 = @func_1866() /* ty=(Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) */;
  %173 = %172.0;
  %174 = cast(%var_3694, dtype="int64") /* ty=Tensor[(10, 66), int64] */;
  %175 = shape_of(%173, dtype="int32") /* ty=Tensor[(2), int32] */;
  %176 = cast(%173, dtype="int64") /* ty=Tensor[(10, 66), int64] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %178 = left_shift(%176, %177) /* ty=Tensor[(10, 66), int64] */;
  %179 = cast(%178, dtype="int32") /* ty=Tensor[(10, 66), int32] */;
  %180 = shape_of(%173, dtype="int32") /* ty=Tensor[(2), int32] */;
  %181 = cast(%173, dtype="int32") /* ty=Tensor[(10, 66), int32] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %183 = %171.0;
  %184 = bitwise_and(%181, %182) /* ty=Tensor[(10, 66), int32] */;
  %185 = @func_2646() /* ty=Tensor[(3, 9, 6), float32] */;
  %186 = @func_3546() /* ty=Tensor[(6, 8, 11), float64] */;
  %187 = @func_3643() /* ty=Tensor[(3, 9, 6), float32] */;
  (%183, %184, %185, %186, %187)
}

def @func_4865(%var_4852: Tensor[(3, 10, 16), float32]) -> Tensor[(3, 10, 16), bool] {
  %188 = cast(%var_4852, dtype="bool") /* ty=Tensor[(3, 10, 16), bool] */;
  %189 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(3, 10, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(meta[relay.Constant][15] /* ty=Tensor[(3, 10, 16), float32] */, dtype="bool") /* ty=Tensor[(3, 10, 16), bool] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%190, %191) /* ty=Tensor[(3, 10, 16), bool] */
}

def @func_2377() -> (Tensor[(660), float64],) {
  %192 = @func_1699() /* ty=Tensor[(660), float64] */;
  (%192,)
}

def @func_840(%var_748: Tensor[(13, 11, 14), uint64], %var_776: float64, %var_777: Tensor[(48), float64]) -> (Tensor[(8, 2, 3), float64], float64, Tensor[(48), float64], Tensor[(3, 9, 6), float32], Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(13, 11, 14), float32]) {
  %193 = cast(%var_776, dtype="float64") /* ty=float64 */;
  %194 = cast(%var_777, dtype="float64") /* ty=Tensor[(48), float64] */;
  %195 = reshape(%193, newshape=[]) /* ty=float64 */;
  %196 = reshape(%194, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %197 = @func_556(%195, %196) /* ty=(Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) */;
  %198 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %199 = cast(%var_776, dtype="int64") /* ty=int64 */;
  %200 = cast(meta[relay.Constant][16] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %201 = reshape(%199, newshape=[]) /* ty=int64 */;
  %202 = reshape(%200, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %203 = @func_259(%201, %202) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
  %204 = cast(meta[relay.Constant][16] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %205 = reshape(%204, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
  %206 = cast(%var_776, dtype="int64") /* ty=int64 */;
  %207 = @func_10(%205) /* ty=Tensor[(12, 5, 11), float64] */;
  %208 = cast(%207, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %209 = reshape(%206, newshape=[]) /* ty=int64 */;
  %210 = reshape(%208, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %211 = @func_259(%209, %210) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
  %212 = cast(meta[relay.Constant][17] /* ty=Tensor[(13, 11, 14), uint64] */, dtype="bool") /* ty=Tensor[(13, 11, 14), bool] */;
  %213 = shape_of(%var_748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(%var_748, dtype="bool") /* ty=Tensor[(13, 11, 14), bool] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %216 = greater_equal(%214, %215) /* ty=Tensor[(13, 11, 14), bool] */;
  %217 = cast(%216, dtype="float32") /* ty=Tensor[(13, 11, 14), float32] */;
  %218 = log(%217) /* ty=Tensor[(13, 11, 14), float32] */;
  %219 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 11, 14), float32] */, dtype="uint16") /* ty=Tensor[(13, 11, 14), uint16] */;
  %220 = shape_of(%218, dtype="int32") /* ty=Tensor[(3), int32] */;
  %221 = cast(%218, dtype="uint16") /* ty=Tensor[(13, 11, 14), uint16] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %223 = subtract(%221, %222) /* ty=Tensor[(13, 11, 14), uint16] */;
  %224 = cast(%223, dtype="float64") /* ty=Tensor[(13, 11, 14), float64] */;
  %225 = cosh(%224) /* ty=Tensor[(13, 11, 14), float64] */;
  %226 = cast(%225, dtype="float32") /* ty=Tensor[(13, 11, 14), float32] */;
  %227 = %197.0;
  %228 = %198.4;
  %229 = %203.2;
  %230 = %211.1;
  %231 = sinh(%226) /* ty=Tensor[(13, 11, 14), float32] */;
  (%227, %var_776, %var_777, %228, %229, meta[relay.Constant][16] /* ty=Tensor[(660), float64] */, %207, %230, %231)
}

def @func_6177(%var_6160: Tensor[(630), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(5, 14, 9), bool], Tensor[(630), float64], Tensor[(1200), bool]) {
  %232 = cast(%var_6160, dtype="float64") /* ty=Tensor[(630), float64] */;
  %233 = cast(meta[relay.Constant][19] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %234 = cast(%var_6160, dtype="float64") /* ty=Tensor[(630), float64] */;
  %235 = reshape(%232, newshape=[5, 14, 9]) /* ty=Tensor[(5, 14, 9), float64] */;
  %236 = reshape(%233, newshape=[600, 2]) /* ty=Tensor[(600, 2), bool] */;
  %237 = reshape(%234, newshape=[5, 14, 9]) /* ty=Tensor[(5, 14, 9), float64] */;
  %238 = @func_6052(%235, %236, %237) /* ty=(Tensor[(5, 14, 9), float64], Tensor[(10, 12, 10), int64], Tensor[(5, 14, 9), bool]) */;
  %239 = @func_4694() /* ty=Tensor[(6, 8, 11), float64] */;
  %240 = @func_2197() /* ty=Tensor[(6, 8, 11), float64] */;
  %241 = %238.2;
  (%239, %240, %241, %var_6160, meta[relay.Constant][19] /* ty=Tensor[(1200), bool] */)
}

def @func_6825() -> (Tensor[(924), float32], Tensor[(660), float64], Tensor[(8, 2, 3), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) {
  %242 = cast(meta[relay.Constant][20] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %243 = reshape(%242, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), float64] */;
  %244 = @func_1162(%243) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(21, 6), float64], Tensor[(?, 3, 16), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64) */;
  %245 = @func_5131() /* ty=Tensor[(924), float32] */;
  %246 = @func_5417() /* ty=Tensor[(660), float64] */;
  %247 = %244.4;
  %248 = @func_2646() /* ty=Tensor[(3, 9, 6), float32] */;
  (%245, %246, %247, meta[relay.Constant][20] /* ty=Tensor[(48), float64] */, %248)
}

def @main(%var_8733: Tensor[(15, 1, 10), float64]) -> Tensor[(15, 1, 10), float64] {
  %249 = cast(%var_8733, dtype="float64") /* ty=Tensor[(15, 1, 10), float64] */;
  %250 = cosh(%249) /* ty=Tensor[(15, 1, 10), float64] */;
  %251 = cast(%250, dtype="float64") /* ty=Tensor[(15, 1, 10), float64] */;
  log(%251) /* ty=Tensor[(15, 1, 10), float64] */
}

def @func_632(%var_627: Tensor[(10, 66), float64]) -> (Tensor[(10, 66), uint16],) {
  %252 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %253 = %252.3;
  %254 = cast(%var_627, dtype="uint16") /* ty=Tensor[(10, 66), uint16] */;
  %255 = shape_of(%253, dtype="int32") /* ty=Tensor[(2), int32] */;
  %256 = cast(%253, dtype="uint16") /* ty=Tensor[(10, 66), uint16] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %258 = subtract(%256, %257) /* ty=Tensor[(10, 66), uint16] */;
  (%258,)
}

def @func_5131() -> Tensor[(924), float32] {
  %259 = @func_4157() /* ty=(Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
  %259.0
}

def @func_4805() -> (Tensor[(48), float64],) {
  %260 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
  %261 = %260.3;
  (%261,)
}

def @func_4944(%var_4938: Tensor[(1200), bool]) -> (Tensor[(6, 8, 11), float64], Tensor[(10, 12, 10), float64], Tensor[(1200), bool]) {
  %262 = cast(%var_4938, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %263 = reshape(%262, newshape=[10, 12, 10]) /* ty=Tensor[(10, 12, 10), bool] */;
  %264 = @func_3321(%263) /* ty=(Tensor[(10, 12, 10), float64],) */;
  %265 = @func_3546() /* ty=Tensor[(6, 8, 11), float64] */;
  %266 = %264.0;
  (%265, %266, %var_4938)
}

def @func_7034(%var_7009: Tensor[(660), float64]) -> (Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) {
  %267 = @func_4193() /* ty=(Tensor[(6, 8, 11), float32], Tensor[(3, 9, 6), float32]) */;
  %268 = @func_2197() /* ty=Tensor[(6, 8, 11), float64] */;
  %269 = cast(%268, dtype="float64") /* ty=Tensor[(6, 8, 11), float64] */;
  %270 = cast(%var_7009, dtype="float64") /* ty=Tensor[(660), float64] */;
  %271 = reshape(%269, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), float64] */;
  %272 = reshape(%270, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %273 = @func_4370(%271, %272) /* ty=(Tensor[(10, 4, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(660), float64]) */;
  %274 = @func_6110() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(660), float64]) */;
  %275 = %274.0;
  %276 = cast(%275, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
  %277 = %267.1;
  %278 = %273.1;
  %279 = tan(%276) /* ty=Tensor[(3, 9, 6), float32] */;
  (%277, %268, %278, %var_7009, %279)
}

def @func_7048() -> (Tensor[(6, 8, 11), float64], int64, Tensor[(6, 8, 11), float64]) {
  %280 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %281 = @func_4694() /* ty=Tensor[(6, 8, 11), float64] */;
  %282 = %280.0;
  %283 = @func_1880() /* ty=Tensor[(6, 8, 11), float64] */;
  (%281, %282, %283)
}

def @func_5939() -> (Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(10, 9, 10), float32], Tensor[(900), float32]) {
  %284 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
  %285 = @func_3015() /* ty=(Tensor[(660), float64],) */;
  %286 = cast(meta[relay.Constant][21] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %287 = reshape(%286, newshape=[10, 9, 10]) /* ty=Tensor[(10, 9, 10), float32] */;
  %288 = %284.1;
  %289 = %285.0;
  %290 = @func_2393(%287) /* ty=Tensor[(10, 9, 10), float32] */;
  (%288, %289, %290, meta[relay.Constant][21] /* ty=Tensor[(900), float32] */)
}

def @func_1866() -> (Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) {
  %291 = @func_1816() /* ty=(int64, Tensor[(10, 66), uint16], Tensor[(660), float64]) */;
  %292 = %291.1;
  %293 = cast(%292, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %294 = reshape(%293, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %295 = @func_1334(%294) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %296 = %295.0;
  (%292, %296)
}

def @func_1699() -> Tensor[(660), float64] {
  %297 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %297.2
}

def @func_6542() -> (Tensor[(660), uint8], Tensor[(3, 9, 6), float32], Tensor[(10, 66), float32]) {
  %298 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %299 = %298.2;
  %300 = cast(meta[relay.Constant][22] /* ty=Tensor[(660), float64] */, dtype="uint8") /* ty=Tensor[(660), uint8] */;
  %301 = shape_of(%299, dtype="int32") /* ty=Tensor[(1), int32] */;
  %302 = cast(%299, dtype="uint8") /* ty=Tensor[(660), uint8] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %304 = maximum(%302, %303) /* ty=Tensor[(660), uint8] */;
  %305 = cast(%304, dtype="uint16") /* ty=Tensor[(660), uint16] */;
  %306 = reshape(%305, newshape=[10, 66]) /* ty=Tensor[(10, 66), uint16] */;
  %307 = @func_3769(%306) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(10, 66), int32], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32]) */;
  %308 = %307.1;
  %309 = cast(%308, dtype="float32") /* ty=Tensor[(10, 66), float32] */;
  %310 = sigmoid(%309) /* ty=Tensor[(10, 66), float32] */;
  %311 = cast(%310, dtype="float32") /* ty=Tensor[(10, 66), float32] */;
  %312 = @func_4220() /* ty=Tensor[(3, 9, 6), float32] */;
  %313 = sqrt(%311) /* ty=Tensor[(10, 66), float32] */;
  (%304, %312, %313)
}

def @func_556(%var_540: float64, %var_541: Tensor[(8, 2, 3), float64]) -> (Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) {
  %314 = cast(%var_540, dtype="float64") /* ty=float64 */;
  %315 = cast(%var_541, dtype="float64") /* ty=Tensor[(8, 2, 3), float64] */;
  %316 = cast(%var_541, dtype="float32") /* ty=Tensor[(8, 2, 3), float32] */;
  %317 = floor_mod(%314, %315) /* ty=Tensor[(8, 2, 3), float64] */;
  %318 = log10(%316) /* ty=Tensor[(8, 2, 3), float32] */;
  (%317, %318)
}

def @func_929(%var_883: Tensor[(8, 13, 14), uint64], %var_884: Tensor[(8, 13, 14), uint64], %var_896: Tensor[(660), float64]) -> (Tensor[(8, 13, 14), uint64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(12, 5, 11), float64], int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(10, 66), uint16]) {
  %319 = cast(%var_884, dtype="uint64") /* ty=Tensor[(8, 13, 14), uint64] */;
  %320 = shape_of(%var_883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %321 = cast(%var_883, dtype="uint64") /* ty=Tensor[(8, 13, 14), uint64] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %323 = cast(%var_896, dtype="float64") /* ty=Tensor[(660), float64] */;
  %324 = reshape(%323, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
  %325 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %326 = cast(%var_896, dtype="float64") /* ty=Tensor[(660), float64] */;
  %327 = reshape(%325, newshape=[]) /* ty=int64 */;
  %328 = reshape(%326, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %329 = @func_259(%327, %328) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
  %330 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %331 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %332 = cast(%var_896, dtype="float64") /* ty=Tensor[(660), float64] */;
  %333 = reshape(%331, newshape=[]) /* ty=int64 */;
  %334 = reshape(%332, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %335 = @func_259(%333, %334) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
  %336 = %329.0;
  %337 = cast(%336, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %338 = reshape(%337, newshape=[10, 66]) /* ty=Tensor[(10, 66), float64] */;
  %339 = @func_632(%338) /* ty=(Tensor[(10, 66), uint16],) */;
  %340 = bitwise_and(%321, %322) /* ty=Tensor[(8, 13, 14), uint64] */;
  %341 = @func_10(%324) /* ty=Tensor[(12, 5, 11), float64] */;
  %342 = %330.4;
  %343 = %335.1;
  %344 = %339.0;
  (%340, %341, %var_896, %336, -5 /* ty=int64 */, %342, %343, %344)
}

def @func_1816() -> (int64, Tensor[(10, 66), uint16], Tensor[(660), float64]) {
  %345 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %346 = cast(meta[relay.Constant][23] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %347 = reshape(%346, newshape=[10, 66]) /* ty=Tensor[(10, 66), float64] */;
  %348 = @func_632(%347) /* ty=(Tensor[(10, 66), uint16],) */;
  %349 = %345.2;
  %350 = %348.0;
  (%349, %350, meta[relay.Constant][23] /* ty=Tensor[(660), float64] */)
}

def @func_6661() -> (Tensor[(14, 10, 3), float64],) {
  %351 = @func_4393() /* ty=(Tensor[(14, 10, 3), float64],) */;
  %352 = %351.0;
  (%352,)
}

def @func_4220() -> Tensor[(3, 9, 6), float32] {
  %353 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
  %353.0
}

def @func_8518(%var_8506: Tensor[(14, 10, 3), float64]) -> (Tensor[(14, 10, 3), float64], Tensor[(660), float64]) {
  %354 = @func_6251() /* ty=Tensor[(14, 10, 3), float64] */;
  %355 = cast(%var_8506, dtype="float64") /* ty=Tensor[(14, 10, 3), float64] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%354, dtype="float64") /* ty=Tensor[(14, 10, 3), float64] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %359 = @func_7520() /* ty=(Tensor[(660), float64], Tensor[(660), float64]) */;
  %360 = add(%357, %358) /* ty=Tensor[(14, 10, 3), float64] */;
  %361 = %359.0;
  (%360, %361)
}

def @func_3015() -> (Tensor[(660), float64],) {
  %362 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %363 = %362.2;
  (%363,)
}

def @func_3184() -> (Tensor[(660), float64],) {
  %364 = @func_1816() /* ty=(int64, Tensor[(10, 66), uint16], Tensor[(660), float64]) */;
  %365 = %364.2;
  (%365,)
}

def @func_7520() -> (Tensor[(660), float64], Tensor[(660), float64]) {
  %366 = @func_1467() /* ty=(Tensor[(660), float64],) */;
  %367 = @func_6110() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(660), float64]) */;
  %368 = %366.0;
  %369 = %367.1;
  (%368, %369)
}

def @func_4370(%var_4334: Tensor[(6, 8, 11), float64], %var_4360: Tensor[(660), float64]) -> (Tensor[(10, 4, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(660), float64]) {
  %370 = @func_3117() /* ty=(Tensor[(10, 4, 6), float64],) */;
  %371 = @func_3067() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(48), float64]) */;
  %372 = %371.1;
  %373 = cast(%var_4334, dtype="float64") /* ty=Tensor[(6, 8, 11), float64] */;
  %374 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %375 = cast(%372, dtype="float64") /* ty=Tensor[(6, 8, 11), float64] */;
  %376 = dyn.reshape(%373, %374, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %377 = cast(%var_4360, dtype="float64") /* ty=Tensor[(660), float64] */;
  %378 = reshape(%377, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %379 = @func_1072(%378) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) */;
  %380 = %370.0;
  %381 = power(%375, %376) /* ty=Tensor[(6, 8, 11), float64] */;
  %382 = %379.1;
  (%380, %381, %382, %var_4360)
}

def @func_8658(%var_8644: Tensor[(5, 7, 10), uint32], %var_8645: Tensor[(5, 7, 10), uint32]) -> Tensor[(5, 7, 10), bool] {
  %383 = cast(%var_8645, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %384 = shape_of(%var_8644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%var_8644, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %387 = greater_equal(%385, %386) /* ty=Tensor[(5, 7, 10), bool] */;
  %388 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 7, 10), bool] */, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %389 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %390 = cast(%387, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%390, %391) /* ty=Tensor[(5, 7, 10), bool] */
}

def @func_1427(%var_1383: Tensor[(11, 6, 14), float32]) -> (Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(11, 6, 14), float64]) {
  %392 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %393 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %394 = cast(%var_1383, dtype="float32") /* ty=Tensor[(11, 6, 14), float32] */;
  %395 = atanh(%394) /* ty=Tensor[(11, 6, 14), float32] */;
  %396 = cast(%var_1383, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
  %397 = shape_of(%395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%395, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %400 = %392.0;
  %401 = %393.0;
  %402 = minimum(%398, %399) /* ty=Tensor[(11, 6, 14), float64] */;
  (%400, %401, %402)
}

def @func_4157() -> (Tensor[(924), float32], Tensor[(6, 8, 11), float64]) {
  %403 = @func_4049() /* ty=(int64, Tensor[(6, 8, 11), float64], Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
  %404 = %403.4;
  %405 = @func_2179() /* ty=Tensor[(6, 8, 11), float64] */;
  (%404, %405)
}

def @func_4652() -> (Tensor[(10, 4, 6), float64],) {
  %406 = @func_3838() /* ty=Tensor[(10, 4, 6), float64] */;
  (%406,)
}

def @func_8010(%var_7986: Tensor[(4, 9, 10), float32], %var_7987: Tensor[(4, 9, 10), float32]) -> Tensor[(4, 9, 10), float32] {
  %407 = cast(%var_7987, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
  %408 = shape_of(%var_7986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%var_7986, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %411 = subtract(%409, %410) /* ty=Tensor[(4, 9, 10), float32] */;
  %412 = cast(%411, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
  %413 = shape_of(%var_7986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%var_7986, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%414, %415) /* ty=Tensor[(4, 9, 10), float32] */
}

def @func_4834() -> (Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) {
  %416 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %417 = cast(meta[relay.Constant][25] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %418 = reshape(%417, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %419 = @func_1334(%418) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %420 = %416.0;
  %421 = %419.1;
  (%420, %421, meta[relay.Constant][25] /* ty=Tensor[(660), float64] */)
}

def @func_6052(%var_6010: Tensor[(5, 14, 9), float64], %var_6019: Tensor[(600, 2), bool], %var_6045: Tensor[(5, 14, 9), float64]) -> (Tensor[(5, 14, 9), float64], Tensor[(10, 12, 10), int64], Tensor[(5, 14, 9), bool]) {
  %422 = cast(%var_6010, dtype="float64") /* ty=Tensor[(5, 14, 9), float64] */;
  %423 = cast(%var_6019, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
  %424 = reshape(%423, newshape=[10, 12, 10]) /* ty=Tensor[(10, 12, 10), bool] */;
  %425 = @func_3321(%424) /* ty=(Tensor[(10, 12, 10), float64],) */;
  %426 = %425.0;
  %427 = cast(%var_6019, dtype="int64") /* ty=Tensor[(600, 2), int64] */;
  %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
  %429 = cast(%426, dtype="int64") /* ty=Tensor[(10, 12, 10), int64] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %431 = cast(%var_6045, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
  %432 = shape_of(%var_6010, dtype="int32") /* ty=Tensor[(3), int32] */;
  %433 = cast(%var_6010, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %435 = log2(%422) /* ty=Tensor[(5, 14, 9), float64] */;
  %436 = multiply(%429, %430) /* ty=Tensor[(10, 12, 10), int64] */;
  %437 = logical_and(%433, %434) /* ty=Tensor[(5, 14, 9), bool] */;
  (%435, %436, %437)
}

def @func_7981() -> Tensor[(6, 8, 11), float64] {
  @func_3546() /* ty=Tensor[(6, 8, 11), float64] */
}

def @func_6884() -> (Tensor[(660), float64],) {
  %438 = @func_1699() /* ty=Tensor[(660), float64] */;
  (%438,)
}

def @func_5611() -> Tensor[(924), float32] {
  %439 = @func_4144() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(924), float32]) */;
  %439.1
}

def @func_5299() -> (Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], Tensor[(48), float64]) {
  %440 = @func_3450() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %441 = cast(meta[relay.Constant][26] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %442 = reshape(%441, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %443 = @func_1217(%442) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64, Tensor[(48), float64]) */;
  %444 = %440.0;
  %445 = %443.1;
  (%444, %445, meta[relay.Constant][26] /* ty=Tensor[(48), float64] */)
}

def @func_259(%var_242: int64, %var_251: Tensor[(660), float64]) -> (Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) {
  %446 = cast(%var_251, dtype="float64") /* ty=Tensor[(660), float64] */;
  %447 = reshape(%446, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
  %448 = cast(%var_242, dtype="int64") /* ty=int64 */;
  %449 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 9, 6), int64] */, dtype="int64") /* ty=Tensor[(3, 9, 6), int64] */;
  %450 = left_shift(%448, %449) /* ty=Tensor[(3, 9, 6), int64] */;
  %451 = cast(%450, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
  %452 = @func_10(%447) /* ty=Tensor[(12, 5, 11), float64] */;
  %453 = asin(%451) /* ty=Tensor[(3, 9, 6), float32] */;
  (%452, %var_251, %453)
}

def @func_1880() -> Tensor[(6, 8, 11), float64] {
  %454 = @func_1772() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %454.0
}

def @func_3479(%var_3455: Tensor[(10, 4, 6), float64]) -> Tensor[(10, 4, 6), float64] {
  %455 = @func_3117() /* ty=(Tensor[(10, 4, 6), float64],) */;
  %456 = %455.0;
  %457 = cast(%var_3455, dtype="float64") /* ty=Tensor[(10, 4, 6), float64] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%456, dtype="float64") /* ty=Tensor[(10, 4, 6), float64] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%459, %460) /* ty=Tensor[(10, 4, 6), float64] */
}

def @func_5417() -> Tensor[(660), float64] {
  %461 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
  %461.0
}

def @func_4626(%var_4618: Tensor[(528), float64], %var_4619: Tensor[(660), float64]) -> (int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(528), float64], Tensor[(660), float64], Tensor[(48), float64]) {
  %462 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %463 = @func_4193() /* ty=(Tensor[(6, 8, 11), float32], Tensor[(3, 9, 6), float32]) */;
  %464 = cast(%var_4618, dtype="float64") /* ty=Tensor[(528), float64] */;
  %465 = cast(%var_4619, dtype="float64") /* ty=Tensor[(660), float64] */;
  %466 = reshape(%464, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), float64] */;
  %467 = reshape(%465, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %468 = @func_4370(%466, %467) /* ty=(Tensor[(10, 4, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(660), float64]) */;
  %469 = %462.0;
  %470 = %463.1;
  %471 = %468.3;
  %472 = @func_2989() /* ty=Tensor[(48), float64] */;
  (%469, %470, %471, %var_4618, %var_4619, %472)
}

def @func_6251() -> Tensor[(14, 10, 3), float64] {
  %473 = @func_4393() /* ty=(Tensor[(14, 10, 3), float64],) */;
  %473.0
}

def @func_6406(%var_6349: Tensor[(4, 9, 13), int32], %var_6350: Tensor[(4, 9, 13), int32], %var_6398: Tensor[(48), float64]) -> (Tensor[(4, 9, 13), int32], Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(48), float64], Tensor[(4, 9, 13), float32]) {
  %474 = cast(%var_6350, dtype="int32") /* ty=Tensor[(4, 9, 13), int32] */;
  %475 = shape_of(%var_6349, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%var_6349, dtype="int32") /* ty=Tensor[(4, 9, 13), int32] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %478 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %479 = cast(%var_6398, dtype="float64") /* ty=Tensor[(48), float64] */;
  %480 = reshape(%479, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %481 = @func_2292(%480) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(660), float64], float64, Tensor[(924), float32], Tensor[(48), float64], Tensor[(6, 8, 11), float64]) */;
  %482 = cast(%var_6349, dtype="int16") /* ty=Tensor[(4, 9, 13), int16] */;
  %483 = shape_of(%var_6350, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%var_6350, dtype="int16") /* ty=Tensor[(4, 9, 13), int16] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %486 = maximum(%484, %485) /* ty=Tensor[(4, 9, 13), int16] */;
  %487 = cast(%486, dtype="float64") /* ty=Tensor[(4, 9, 13), float64] */;
  %488 = sin(%487) /* ty=Tensor[(4, 9, 13), float64] */;
  %489 = cast(%488, dtype="float32") /* ty=Tensor[(4, 9, 13), float32] */;
  %490 = bitwise_xor(%476, %477) /* ty=Tensor[(4, 9, 13), int32] */;
  %491 = %478.0;
  %492 = %481.5;
  %493 = tan(%489) /* ty=Tensor[(4, 9, 13), float32] */;
  (%490, %491, %492, %var_6398, %493)
}

def @func_7358(%var_7326: Tensor[(39, 6), uint16], %var_7339: Tensor[(528), float64], %var_7340: Tensor[(10, 66), float64]) -> (Tensor[(924), float32], uint16, Tensor[(39, 6), uint16], Tensor[(528), float64], Tensor[(10, 66), float64], Tensor[(8, 13, 14), int64]) {
  %494 = @func_3973() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(924), float32], Tensor[(48), float64]) */;
  %495 = cast(%var_7339, dtype="float64") /* ty=Tensor[(528), float64] */;
  %496 = cast(%var_7340, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %497 = reshape(%495, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), float64] */;
  %498 = reshape(%496, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %499 = @func_4370(%497, %498) /* ty=(Tensor[(10, 4, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(660), float64]) */;
  %500 = %499.2;
  %501 = cast(meta[relay.Constant][28] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %502 = cast(%var_7326, dtype="uint16") /* ty=Tensor[(39, 6), uint16] */;
  %503 = reshape(%501, newshape=[]) /* ty=uint16 */;
  %504 = reshape(%502, newshape=[13, 3, 6]) /* ty=Tensor[(13, 3, 6), uint16] */;
  %505 = @func_1638(%503, %504) /* ty=(Tensor[(13, 3, 6), uint16], Tensor[(660), float64], Tensor[(1456), uint64], Tensor[(110, 6), float64]) */;
  %506 = %505.2;
  %507 = cast(%506, dtype="int64") /* ty=Tensor[(1456), int64] */;
  %508 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%500, dtype="int64") /* ty=Tensor[(8, 13, 14), int64] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %511 = %494.1;
  %512 = add(%509, %510) /* ty=Tensor[(8, 13, 14), int64] */;
  (%511, meta[relay.Constant][28] /* ty=uint16 */, %var_7326, %var_7339, %var_7340, %512)
}

def @func_8702() -> Tensor[(660), float64] {
  %513 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %513.2
}

def @func_6194(%var_6186: Tensor[(1200), bool]) -> (Tensor[(3, 9, 6), float32], Tensor[(10, 12, 10), int64], Tensor[(210, 3), float64], Tensor[(1200), bool]) {
  %514 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %515 = cast(meta[relay.Constant][29] /* ty=Tensor[(210, 3), float64] */, dtype="float64") /* ty=Tensor[(210, 3), float64] */;
  %516 = cast(%var_6186, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %517 = cast(meta[relay.Constant][29] /* ty=Tensor[(210, 3), float64] */, dtype="float64") /* ty=Tensor[(210, 3), float64] */;
  %518 = reshape(%515, newshape=[5, 14, 9]) /* ty=Tensor[(5, 14, 9), float64] */;
  %519 = reshape(%516, newshape=[600, 2]) /* ty=Tensor[(600, 2), bool] */;
  %520 = reshape(%517, newshape=[5, 14, 9]) /* ty=Tensor[(5, 14, 9), float64] */;
  %521 = @func_6052(%518, %519, %520) /* ty=(Tensor[(5, 14, 9), float64], Tensor[(10, 12, 10), int64], Tensor[(5, 14, 9), bool]) */;
  %522 = %514.1;
  %523 = %521.1;
  (%522, %523, meta[relay.Constant][29] /* ty=Tensor[(210, 3), float64] */, %var_6186)
}

def @func_6639() -> Tensor[(660), float64] {
  %524 = @func_6238() /* ty=(Tensor[(660), float64],) */;
  %524.0
}

def @func_8071() -> (Tensor[(14, 10, 3), float64],) {
  %525 = @func_6251() /* ty=Tensor[(14, 10, 3), float64] */;
  (%525,)
}

def @func_5193() -> Tensor[(10, 4, 6), float64] {
  %526 = @func_3838() /* ty=Tensor[(10, 4, 6), float64] */;
  %527 = cast(%526, dtype="float64") /* ty=Tensor[(10, 4, 6), float64] */;
  asinh(%527) /* ty=Tensor[(10, 4, 6), float64] */
}

def @func_6074(%var_6067: Tensor[(6, 2, 11), float64]) -> (Tensor[(6, 2, 11), float64],) {
  %528 = cast(%var_6067, dtype="float64") /* ty=Tensor[(6, 2, 11), float64] */;
  %529 = tan(%528) /* ty=Tensor[(6, 2, 11), float64] */;
  (%529,)
}

def @func_2821() -> (Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) {
  %530 = @func_2191() /* ty=(Tensor[(660), float64],) */;
  %531 = cast(meta[relay.Constant][30] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %532 = reshape(%531, newshape=[924]) /* ty=Tensor[(924), float32] */;
  %533 = @func_1983(%532) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float64], Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(8, 2, 3), float32], float64, Tensor[(10, 66), float64], Tensor[(10, 66), float64]) */;
  %534 = %533.3;
  %535 = cast(%534, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %536 = reshape(%535, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %537 = @func_1739(%536) /* ty=(Tensor[(6, 8, 11), float64], float64, Tensor[(924), float32], Tensor[(48), float64]) */;
  %538 = cast(meta[relay.Constant][30] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %539 = cast(%534, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %540 = reshape(%538, newshape=[924]) /* ty=Tensor[(924), float32] */;
  %541 = reshape(%539, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %542 = @func_1592(%540, %541) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(924), float32], float64, Tensor[(48), float64], Tensor[(8, 13, 14), uint64]) */;
  %543 = %530.0;
  %544 = %537.3;
  %545 = %542.2;
  (%543, %534, meta[relay.Constant][30] /* ty=Tensor[(924), float32] */, %544, %545)
}

def @func_5674() -> (Tensor[(14, 10, 3), float64], Tensor[(10, 4, 6), float64]) {
  %546 = @func_4393() /* ty=(Tensor[(14, 10, 3), float64],) */;
  %547 = %546.0;
  %548 = @func_3838() /* ty=Tensor[(10, 4, 6), float64] */;
  (%547, %548)
}

def @func_3067() -> (Tensor[(3, 9, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(48), float64]) {
  %549 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
  %550 = %549.0;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
  %552 = cast(meta[relay.Constant][31] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %553 = reshape(%552, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), float64] */;
  %554 = @func_1162(%553) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(21, 6), float64], Tensor[(?, 3, 16), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64) */;
  %555 = cos(%551) /* ty=Tensor[(3, 9, 6), float64] */;
  %556 = %554.3;
  (%555, %556, meta[relay.Constant][31] /* ty=Tensor[(48), float64] */)
}

def @func_10(%var_2: Tensor[(12, 5, 11), float64]) -> Tensor[(12, 5, 11), float64] {
  %557 = cast(%var_2, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  sin(%557) /* ty=Tensor[(12, 5, 11), float64] */
}

def @func_5644(%var_5635: Tensor[(3, 10, 15), float64], %var_5636: Tensor[(3, 10, 15), float64]) -> Tensor[(3, 10, 15), float64] {
  %558 = cast(%var_5636, dtype="float64") /* ty=Tensor[(3, 10, 15), float64] */;
  %559 = shape_of(%var_5635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%var_5635, dtype="float64") /* ty=Tensor[(3, 10, 15), float64] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%560, %561) /* ty=Tensor[(3, 10, 15), float64] */
}

def @func_2989() -> Tensor[(48), float64] {
  %562 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
  %562.3
}

def @func_3973() -> (Tensor[(3, 9, 6), float32], Tensor[(924), float32], Tensor[(48), float64]) {
  %563 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
  %564 = %563.2;
  %565 = cast(meta[relay.Constant][32] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(1), int32] */;
  %567 = cast(%564, dtype="float32") /* ty=Tensor[(924), float32] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?), float32] */;
  %569 = @func_3067() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(48), float64]) */;
  %570 = @func_3190() /* ty=Tensor[(3, 9, 6), float32] */;
  %571 = power(%567, %568) /* ty=Tensor[(924), float32] */;
  %572 = %569.2;
  (%570, %571, %572)
}

def @func_2464() -> (Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) {
  %573 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %574 = %573.1;
  %575 = cast(%574, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
  %576 = sigmoid(%575) /* ty=Tensor[(3, 9, 6), float32] */;
  %577 = cast(%576, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
  %578 = @func_2215() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %579 = atan(%577) /* ty=Tensor[(3, 9, 6), float32] */;
  %580 = %578.0;
  (%579, %580)
}

def @func_2917(%var_2906: Tensor[(234), uint16]) -> (int64, Tensor[(13, 3, 6), uint16], Tensor[(234), uint16], Tensor[(6, 8, 11), float64]) {
  %581 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %582 = %581.0;
  %583 = cast(%582, dtype="uint16") /* ty=uint16 */;
  %584 = cast(%var_2906, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %585 = reshape(%583, newshape=[]) /* ty=uint16 */;
  %586 = reshape(%584, newshape=[13, 3, 6]) /* ty=Tensor[(13, 3, 6), uint16] */;
  %587 = @func_1638(%585, %586) /* ty=(Tensor[(13, 3, 6), uint16], Tensor[(660), float64], Tensor[(1456), uint64], Tensor[(110, 6), float64]) */;
  %588 = @func_1866() /* ty=(Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) */;
  %589 = %587.0;
  %590 = %588.1;
  (%582, %589, %var_2906, %590)
}

def @func_8560(%var_8556: float32, %var_8558: Tensor[(264), bool]) -> (Tensor[(48), float64], Tensor[(660), float64], float32, Tensor[(2400), float64], Tensor[(264), bool]) {
  %591 = @func_8041() /* ty=(Tensor[(48), float64],) */;
  %592 = cast(%var_8556, dtype="float32") /* ty=float32 */;
  %593 = cast(meta[relay.Constant][33] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %594 = cast(%var_8558, dtype="bool") /* ty=Tensor[(264), bool] */;
  %595 = reshape(%592, newshape=[]) /* ty=float32 */;
  %596 = reshape(%593, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %597 = reshape(%594, newshape=[11, 4, 6]) /* ty=Tensor[(11, 4, 6), bool] */;
  %598 = @func_6760(%595, %596, %597) /* ty=(Tensor[(11, ?, ?), float64], Tensor[(660), float64], Tensor[(11, ?, ?), uint8], Tensor[(2400), float64], Tensor[(11, 60, 12), uint8], Tensor[(11, 4, 6), bool]) */;
  %599 = %591.0;
  %600 = %598.1;
  (%599, %600, %var_8556, meta[relay.Constant][33] /* ty=Tensor[(2400), float64] */, %var_8558)
}

def @func_2863(%var_2826: int8) -> (Tensor[(3, 3, 1), bool], Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(110, 6), float64], Tensor[(234, 1), uint16]) {
  %601 = cast(%var_2826, dtype="bool") /* ty=bool */;
  %602 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 3, 1), int8] */, dtype="bool") /* ty=Tensor[(3, 3, 1), bool] */;
  %603 = cast(%var_2826, dtype="int64") /* ty=int64 */;
  %604 = cast(meta[relay.Constant][35] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %605 = reshape(%603, newshape=[]) /* ty=int64 */;
  %606 = reshape(%604, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %607 = @func_259(%605, %606) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
  %608 = cast(%var_2826, dtype="uint16") /* ty=uint16 */;
  %609 = cast(meta[relay.Constant][36] /* ty=Tensor[(234, 1), uint16] */, dtype="uint16") /* ty=Tensor[(234, 1), uint16] */;
  %610 = reshape(%608, newshape=[]) /* ty=uint16 */;
  %611 = reshape(%609, newshape=[13, 3, 6]) /* ty=Tensor[(13, 3, 6), uint16] */;
  %612 = @func_1638(%610, %611) /* ty=(Tensor[(13, 3, 6), uint16], Tensor[(660), float64], Tensor[(1456), uint64], Tensor[(110, 6), float64]) */;
  %613 = not_equal(%601, %602) /* ty=Tensor[(3, 3, 1), bool] */;
  %614 = %607.2;
  %615 = %612.3;
  (%613, %614, meta[relay.Constant][35] /* ty=Tensor[(660), float64] */, %615, meta[relay.Constant][36] /* ty=Tensor[(234, 1), uint16] */)
}

def @func_4445(%var_4441: Tensor[(2, 1200), float64]) -> (Tensor[(3, 9, 6), float32], Tensor[(15, 10, 16), float64], Tensor[(2, 1200), float64]) {
  %616 = cast(%var_4441, dtype="float64") /* ty=Tensor[(2, 1200), float64] */;
  %617 = reshape(%616, newshape=[15, 10, 16]) /* ty=Tensor[(15, 10, 16), float64] */;
  %618 = @func_3190() /* ty=Tensor[(3, 9, 6), float32] */;
  %619 = @func_1668(%617) /* ty=Tensor[(15, 10, 16), float64] */;
  (%618, %619, %var_4441)
}

def @func_7736() -> (Tensor[(6, 8, 11), float64], Tensor[(924), float32]) {
  %620 = @func_4157() /* ty=(Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
  %621 = @func_4694() /* ty=Tensor[(6, 8, 11), float64] */;
  %622 = %620.0;
  (%621, %622)
}

def @func_611() -> (Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) {
  %623 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(6, 8, 11), float64] */;
  %624 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %625 = cast(meta[relay.Constant][38] /* ty=Tensor[(10, 66), float64] */, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %626 = reshape(%624, newshape=[]) /* ty=int64 */;
  %627 = reshape(%625, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %628 = @func_259(%626, %627) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
  %629 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %630 = cast(meta[relay.Constant][38] /* ty=Tensor[(10, 66), float64] */, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %631 = reshape(%629, newshape=[]) /* ty=int64 */;
  %632 = reshape(%630, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %633 = @func_259(%631, %632) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
  %634 = tan(%623) /* ty=Tensor[(6, 8, 11), float64] */;
  %635 = %628.2;
  %636 = %633.2;
  (%634, %635, 8 /* ty=int64 */, meta[relay.Constant][38] /* ty=Tensor[(10, 66), float64] */, %636)
}

def @func_2036(%var_2025: Tensor[(48, 1), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(7, 132), float32], float64, Tensor[(48, 1), float64]) {
  %637 = @func_1866() /* ty=(Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) */;
  %638 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 132), float32] */, dtype="float32") /* ty=Tensor[(7, 132), float32] */;
  %639 = reshape(%638, newshape=[924]) /* ty=Tensor[(924), float32] */;
  %640 = @func_1983(%639) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float64], Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(8, 2, 3), float32], float64, Tensor[(10, 66), float64], Tensor[(10, 66), float64]) */;
  %641 = cast(%var_2025, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
  %642 = reshape(%641, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), float64] */;
  %643 = @func_1162(%642) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(21, 6), float64], Tensor[(?, 3, 16), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64) */;
  %644 = %637.1;
  %645 = %640.0;
  %646 = %643.5;
  (%644, %645, meta[relay.Constant][39] /* ty=Tensor[(7, 132), float32] */, %646, %var_2025)
}

def @func_3450() -> (Tensor[(6, 8, 11), float64],) {
  %647 = @func_2197() /* ty=Tensor[(6, 8, 11), float64] */;
  (%647,)
}

def @func_2292(%var_2244: Tensor[(48), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(660), float64], float64, Tensor[(924), float32], Tensor[(48), float64], Tensor[(6, 8, 11), float64]) {
  %648 = @func_1467() /* ty=(Tensor[(660), float64],) */;
  %649 = cast(meta[relay.Constant][40] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %650 = cast(%var_2244, dtype="float64") /* ty=Tensor[(48), float64] */;
  %651 = reshape(%649, newshape=[924]) /* ty=Tensor[(924), float32] */;
  %652 = reshape(%650, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %653 = @func_1592(%651, %652) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(924), float32], float64, Tensor[(48), float64], Tensor[(8, 13, 14), uint64]) */;
  %654 = %648.0;
  %655 = cast(%654, dtype="float64") /* ty=Tensor[(660), float64] */;
  %656 = reshape(%655, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %657 = @func_1334(%656) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %658 = @func_2179() /* ty=Tensor[(6, 8, 11), float64] */;
  %659 = %653.5;
  %660 = %657.0;
  (%658, %654, %659, meta[relay.Constant][40] /* ty=Tensor[(924), float32] */, %var_2244, %660)
}

def @func_5498(%var_5474: Tensor[(2400), float64], %var_5487: Tensor[(15, 10, 16), float64]) -> (Tensor[(48), float64], Tensor[(2400), float64], Tensor[(10, 12, 6), float64], Tensor[(60, 12), float64], Tensor[(15, 10, 16), float64]) {
  %661 = @func_4805() /* ty=(Tensor[(48), float64],) */;
  %662 = cast(meta[relay.Constant][41] /* ty=Tensor[(60, 12), float64] */, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %663 = reshape(%662, newshape=[10, 12, 6]) /* ty=Tensor[(10, 12, 6), float64] */;
  %664 = @func_4502(%663) /* ty=(Tensor[(10, 12, 6), float64],) */;
  %665 = cast(%var_5474, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %666 = reshape(%665, newshape=[15, 10, 16]) /* ty=Tensor[(15, 10, 16), float64] */;
  %667 = @func_1668(%666) /* ty=Tensor[(15, 10, 16), float64] */;
  %668 = cast(%var_5487, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%667, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %672 = %661.0;
  %673 = %664.0;
  %674 = maximum(%670, %671) /* ty=Tensor[(15, 10, 16), float64] */;
  (%672, %var_5474, %673, meta[relay.Constant][41] /* ty=Tensor[(60, 12), float64] */, %674)
}

def @func_5214() -> (Tensor[(660), float64],) {
  %675 = @func_2377() /* ty=(Tensor[(660), float64],) */;
  %676 = %675.0;
  (%676,)
}

def @func_8092() -> (Tensor[(6, 8, 11), float64],) {
  %677 = @func_3546() /* ty=Tensor[(6, 8, 11), float64] */;
  (%677,)
}

def @func_6110() -> (Tensor[(3, 9, 6), float32], Tensor[(660), float64]) {
  %678 = @func_4922() /* ty=Tensor[(3, 9, 6), float32] */;
  %679 = cast(%678, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
  %680 = @func_5214() /* ty=(Tensor[(660), float64],) */;
  %681 = log(%679) /* ty=Tensor[(3, 9, 6), float32] */;
  %682 = %680.0;
  (%681, %682)
}

def @func_3838() -> Tensor[(10, 4, 6), float64] {
  %683 = @func_3117() /* ty=(Tensor[(10, 4, 6), float64],) */;
  %683.0
}

def @func_1668(%var_1661: Tensor[(15, 10, 16), float64]) -> Tensor[(15, 10, 16), float64] {
  %684 = cast(%var_1661, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %685 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(15, 10, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%686, %687) /* ty=Tensor[(15, 10, 16), float64] */
}

def @func_1334(%var_1332: Tensor[(660), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) {
  %688 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %689 = cast(%var_1332, dtype="float64") /* ty=Tensor[(660), float64] */;
  %690 = reshape(%689, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
  %691 = %688.0;
  %692 = @func_10(%690) /* ty=Tensor[(12, 5, 11), float64] */;
  (%691, %692, %var_1332)
}

def @func_5823() -> (Tensor[(6, 8, 11), float64], Tensor[(528), float64], Tensor[(110, 6), float64], Tensor[(8, 13, 14), uint64], Tensor[(3, 9, 6), float32], Tensor[(660), float32]) {
  %693 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
  %694 = %693.1;
  %695 = cast(%694, dtype="float64") /* ty=Tensor[(6, 8, 11), float64] */;
  %696 = cast(meta[relay.Constant][43] /* ty=Tensor[(110, 6), float64] */, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
  %697 = reshape(%695, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %698 = reshape(%696, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %699 = @func_4626(%697, %698) /* ty=(int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(528), float64], Tensor[(660), float64], Tensor[(48), float64]) */;
  %700 = cast(meta[relay.Constant][43] /* ty=Tensor[(110, 6), float64] */, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
  %701 = reshape(%700, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %702 = @func_1072(%701) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) */;
  %703 = @func_3973() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(924), float32], Tensor[(48), float64]) */;
  %704 = cast(meta[relay.Constant][43] /* ty=Tensor[(110, 6), float64] */, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
  %705 = reshape(%704, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %706 = @func_3527(%705) /* ty=(Tensor[(660), float32],) */;
  %707 = %699.3;
  %708 = %702.1;
  %709 = %703.0;
  %710 = %706.0;
  (%694, %707, meta[relay.Constant][43] /* ty=Tensor[(110, 6), float64] */, %708, %709, %710)
}

def @func_5544(%var_5529: Tensor[(12, 2, 8), float64]) -> Tensor[(12, 2, 8), float64] {
  %711 = cast(%var_5529, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  sin(%711) /* ty=Tensor[(12, 2, 8), float64] */
}

def @func_7866() -> (Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(14, 10, 3), float64], Tensor[(6, 8, 11), float64]) {
  %712 = @func_4049() /* ty=(int64, Tensor[(6, 8, 11), float64], Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
  %713 = cast(meta[relay.Constant][44] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %714 = reshape(%713, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), float32] */;
  %715 = @func_1427(%714) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(11, 6, 14), float64]) */;
  %716 = @func_2215() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %717 = %712.2;
  %718 = %715.1;
  %719 = @func_6251() /* ty=Tensor[(14, 10, 3), float64] */;
  %720 = %716.0;
  (%717, %718, meta[relay.Constant][44] /* ty=Tensor[(924), float32] */, %719, %720)
}

def @func_7283(%var_7267: Tensor[(36), int8], %var_7268: Tensor[(1, 360), int8]) -> (int64, Tensor[(36), int8], Tensor[(1, 360), int8], Tensor[(4, 10, 9), float64], Tensor[(10, 9, 10), float32], int64) {
  %721 = @func_7048() /* ty=(Tensor[(6, 8, 11), float64], int64, Tensor[(6, 8, 11), float64]) */;
  %722 = cast(%var_7267, dtype="int8") /* ty=Tensor[(36), int8] */;
  %723 = cast(%var_7268, dtype="int8") /* ty=Tensor[(1, 360), int8] */;
  %724 = reshape(%722, newshape=[4, 1, 9]) /* ty=Tensor[(4, 1, 9), int8] */;
  %725 = reshape(%723, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), int8] */;
  %726 = @func_3388(%724, %725) /* ty=(Tensor[(4, 10, 9), bool],) */;
  %727 = %726.0;
  %728 = cast(%727, dtype="float64") /* ty=Tensor[(4, 10, 9), float64] */;
  %729 = @func_5939() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(10, 9, 10), float32], Tensor[(900), float32]) */;
  %730 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %731 = %721.1;
  %732 = acosh(%728) /* ty=Tensor[(4, 10, 9), float64] */;
  %733 = %729.2;
  %734 = %730.0;
  (%731, %var_7267, %var_7268, %732, %733, %734)
}

def @func_2366(%var_2337: Tensor[(4, 364), uint64], %var_2338: Tensor[(660), float64], %var_2349: Tensor[(48), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(4, 364), int64], Tensor[(126), float64], Tensor[(48), float64], Tensor[(3, 14, 3), float64]) {
  %735 = @func_1772() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %736 = cast(%var_2337, dtype="uint64") /* ty=Tensor[(4, 364), uint64] */;
  %737 = cast(%var_2337, dtype="uint64") /* ty=Tensor[(4, 364), uint64] */;
  %738 = cast(%var_2338, dtype="float64") /* ty=Tensor[(660), float64] */;
  %739 = reshape(%736, newshape=[8, 13, 14]) /* ty=Tensor[(8, 13, 14), uint64] */;
  %740 = reshape(%737, newshape=[8, 13, 14]) /* ty=Tensor[(8, 13, 14), uint64] */;
  %741 = reshape(%738, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %742 = @func_929(%739, %740, %741) /* ty=(Tensor[(8, 13, 14), uint64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(12, 5, 11), float64], int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(10, 66), uint16]) */;
  %743 = %742.0;
  %744 = cast(%743, dtype="int64") /* ty=Tensor[(8, 13, 14), int64] */;
  %745 = shape_of(%var_2337, dtype="int32") /* ty=Tensor[(2), int32] */;
  %746 = cast(%var_2337, dtype="int64") /* ty=Tensor[(4, 364), int64] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %748 = cast(%var_2349, dtype="float64") /* ty=Tensor[(48), float64] */;
  %749 = reshape(%748, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %750 = @func_1029(%749) /* ty=(int64, Tensor[(3, 14, 3), float64], Tensor[(126), float64], Tensor[(8, 2, 3), float64], Tensor[(48), float64]) */;
  %751 = %750.2;
  %752 = cast(%751, dtype="float64") /* ty=Tensor[(126), float64] */;
  %753 = reshape(%752, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), float64] */;
  %754 = @func_673(%753) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(3, 14, 3), float64]) */;
  %755 = %735.0;
  %756 = maximum(%746, %747) /* ty=Tensor[(4, 364), int64] */;
  %757 = %754.0;
  (%755, %var_2338, %756, %751, %var_2349, %757)
}

def @func_6293() -> (Tensor[(6, 8, 11), float64], Tensor[(15, 16, 4), float64], Tensor[(10, 12, 10), int64], Tensor[(60, 20), bool], Tensor[(10, 4, 6), float64]) {
  %758 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %759 = cast(meta[relay.Constant][45] /* ty=Tensor[(60, 20), bool] */, dtype="bool") /* ty=Tensor[(60, 20), bool] */;
  %760 = reshape(%759, newshape=[1200]) /* ty=Tensor[(1200), bool] */;
  %761 = @func_6194(%760) /* ty=(Tensor[(3, 9, 6), float32], Tensor[(10, 12, 10), int64], Tensor[(210, 3), float64], Tensor[(1200), bool]) */;
  %762 = @func_4652() /* ty=(Tensor[(10, 4, 6), float64],) */;
  %763 = %758.0;
  %764 = @func_5171() /* ty=Tensor[(15, 16, 4), float64] */;
  %765 = %761.1;
  %766 = %762.0;
  (%763, %764, %765, meta[relay.Constant][45] /* ty=Tensor[(60, 20), bool] */, %766)
}

def @func_1029(%var_1013: Tensor[(48), float64]) -> (int64, Tensor[(3, 14, 3), float64], Tensor[(126), float64], Tensor[(8, 2, 3), float64], Tensor[(48), float64]) {
  %767 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %768 = cast(meta[relay.Constant][46] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %769 = reshape(%768, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), float64] */;
  %770 = @func_673(%769) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(3, 14, 3), float64]) */;
  %771 = %767.2;
  %772 = cast(%771, dtype="float64") /* ty=float64 */;
  %773 = cast(%var_1013, dtype="float64") /* ty=Tensor[(48), float64] */;
  %774 = reshape(%772, newshape=[]) /* ty=float64 */;
  %775 = reshape(%773, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %776 = @func_556(%774, %775) /* ty=(Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) */;
  %777 = %770.1;
  %778 = %776.0;
  (%771, %777, meta[relay.Constant][46] /* ty=Tensor[(126), float64] */, %778, %var_1013)
}

def @func_6955() -> (Tensor[(48), float64],) {
  %779 = @func_4805() /* ty=(Tensor[(48), float64],) */;
  %780 = %779.0;
  (%780,)
}

def @func_2179() -> Tensor[(6, 8, 11), float64] {
  @func_1880() /* ty=Tensor[(6, 8, 11), float64] */
}

def @func_7257() -> (Tensor[(6, 8, 11), float64], Tensor[(48), float64], Tensor[(660), float64], Tensor[(6, 8, 11), float64], Tensor[(7, 132), uint8]) {
  %781 = @func_7048() /* ty=(Tensor[(6, 8, 11), float64], int64, Tensor[(6, 8, 11), float64]) */;
  %782 = @func_6884() /* ty=(Tensor[(660), float64],) */;
  %783 = cast(meta[relay.Constant][47] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %784 = reshape(%783, newshape=[48, 1]) /* ty=Tensor[(48, 1), float64] */;
  %785 = @func_2036(%784) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(7, 132), float32], float64, Tensor[(48, 1), float64]) */;
  %786 = %785.2;
  %787 = cast(%786, dtype="float32") /* ty=Tensor[(7, 132), float32] */;
  %788 = log10(%787) /* ty=Tensor[(7, 132), float32] */;
  %789 = cast(%788, dtype="float32") /* ty=Tensor[(7, 132), float32] */;
  %790 = sqrt(%789) /* ty=Tensor[(7, 132), float32] */;
  %791 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 132), float32] */, dtype="float64") /* ty=Tensor[(7, 132), float64] */;
  %792 = shape_of(%790, dtype="int32") /* ty=Tensor[(2), int32] */;
  %793 = cast(%790, dtype="float64") /* ty=Tensor[(7, 132), float64] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %795 = floor_mod(%793, %794) /* ty=Tensor[(7, 132), float64] */;
  %796 = cast(%788, dtype="uint8") /* ty=Tensor[(7, 132), uint8] */;
  %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(2), int32] */;
  %798 = cast(%795, dtype="uint8") /* ty=Tensor[(7, 132), uint8] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %800 = %781.2;
  %801 = %782.0;
  %802 = @func_1880() /* ty=Tensor[(6, 8, 11), float64] */;
  %803 = bitwise_xor(%798, %799) /* ty=Tensor[(7, 132), uint8] */;
  (%800, meta[relay.Constant][47] /* ty=Tensor[(48), float64] */, %801, %802, %803)
}

def @func_2532(%var_2503: Tensor[(8, 4, 9), float64]) -> (Tensor[(8, 4, 9), float64], Tensor[(6, 8, 11), float64]) {
  %804 = cast(%var_2503, dtype="float64") /* ty=Tensor[(8, 4, 9), float64] */;
  %805 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %806 = tan(%804) /* ty=Tensor[(8, 4, 9), float64] */;
  %807 = %805.0;
  (%806, %807)
}

def @func_1162(%var_1122: Tensor[(1, 3, 16), float64]) -> (Tensor[(3, 14, 3), float64], Tensor[(21, 6), float64], Tensor[(?, 3, 16), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64) {
  %808 = cast(meta[relay.Constant][49] /* ty=Tensor[(21, 6), float64] */, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %809 = reshape(%808, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), float64] */;
  %810 = @func_673(%809) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(3, 14, 3), float64]) */;
  %811 = cast(%var_1122, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
  %812 = tan(%811) /* ty=Tensor[(1, 3, 16), float64] */;
  %813 = cast(%var_1122, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
  %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%812, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %817 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %818 = cast(-1.62292f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %819 = cast(%var_1122, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
  %820 = reshape(%818, newshape=[]) /* ty=float64 */;
  %821 = reshape(%819, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %822 = @func_556(%820, %821) /* ty=(Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) */;
  %823 = %810.1;
  %824 = divide(%815, %816) /* ty=Tensor[(?, 3, 16), float64] */;
  %825 = %817.0;
  %826 = %822.1;
  (%823, meta[relay.Constant][49] /* ty=Tensor[(21, 6), float64] */, %824, %825, %826, -1.62292f64 /* ty=float64 */)
}

def @func_6437(%var_6420: Tensor[(10, 4), float32], %var_6428: uint16) -> (Tensor[(10, 4), float32], Tensor[(1456), uint64], uint16, Tensor[(234, 1), uint16]) {
  %827 = cast(%var_6420, dtype="float32") /* ty=Tensor[(10, 4), float32] */;
  %828 = cast(%var_6428, dtype="uint16") /* ty=uint16 */;
  %829 = cast(meta[relay.Constant][50] /* ty=Tensor[(234, 1), uint16] */, dtype="uint16") /* ty=Tensor[(234, 1), uint16] */;
  %830 = reshape(%828, newshape=[]) /* ty=uint16 */;
  %831 = reshape(%829, newshape=[13, 3, 6]) /* ty=Tensor[(13, 3, 6), uint16] */;
  %832 = @func_1638(%830, %831) /* ty=(Tensor[(13, 3, 6), uint16], Tensor[(660), float64], Tensor[(1456), uint64], Tensor[(110, 6), float64]) */;
  %833 = asin(%827) /* ty=Tensor[(10, 4), float32] */;
  %834 = %832.2;
  (%833, %834, %var_6428, meta[relay.Constant][50] /* ty=Tensor[(234, 1), uint16] */)
}

def @func_1217(%var_1210: Tensor[(48), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64, Tensor[(48), float64]) {
  %835 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %836 = cast(7.41304f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %837 = cast(%var_1210, dtype="float64") /* ty=Tensor[(48), float64] */;
  %838 = reshape(%836, newshape=[]) /* ty=float64 */;
  %839 = reshape(%837, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %840 = @func_556(%838, %839) /* ty=(Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) */;
  %841 = %835.0;
  %842 = %840.1;
  (%841, %842, 7.41304f64 /* ty=float64 */, %var_1210)
}

def @func_2393(%var_2382: Tensor[(10, 9, 10), float32]) -> Tensor[(10, 9, 10), float32] {
  %843 = cast(%var_2382, dtype="float32") /* ty=Tensor[(10, 9, 10), float32] */;
  cos(%843) /* ty=Tensor[(10, 9, 10), float32] */
}

def @func_7915() -> Tensor[(924), float32] {
  %844 = @func_4157() /* ty=(Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
  %844.0
}

def @func_8403() -> (Tensor[(6, 8, 11), float64], Tensor[(660), float32], float64, Tensor[(1, 48), float32], Tensor[(4, 9, 10), float32], Tensor[(2, 180), float32], Tensor[(234, 1), uint16], Tensor[(40), float32]) {
  %845 = @func_1772() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %846 = @func_5417() /* ty=Tensor[(660), float64] */;
  %847 = @func_1866() /* ty=(Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) */;
  %848 = %847.0;
  %849 = cast(%848, dtype="float32") /* ty=Tensor[(10, 66), float32] */;
  %850 = shape_of(%846, dtype="int32") /* ty=Tensor[(1), int32] */;
  %851 = cast(%846, dtype="float32") /* ty=Tensor[(660), float32] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?), float32] */;
  %853 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %854 = reshape(%853, newshape=[12, 4]) /* ty=Tensor[(12, 4), float64] */;
  %855 = @func_5082(%854) /* ty=(Tensor[(6, 8, 11), float64], float64, Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64]) */;
  %856 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 48), float64] */, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
  %857 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 180), float32] */, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %858 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 180), float32] */, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %859 = reshape(%857, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %860 = reshape(%858, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
  %861 = cast(meta[relay.Constant][53] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %862 = %855.1;
  %863 = cast(%862, dtype="uint16") /* ty=uint16 */;
  %864 = reshape(%861, newshape=[10, 4]) /* ty=Tensor[(10, 4), float32] */;
  %865 = reshape(%863, newshape=[]) /* ty=uint16 */;
  %866 = @func_6437(%864, %865) /* ty=(Tensor[(10, 4), float32], Tensor[(1456), uint64], uint16, Tensor[(234, 1), uint16]) */;
  %867 = %845.0;
  %868 = multiply(%851, %852) /* ty=Tensor[(660), float32] */;
  %869 = log10(%856) /* ty=Tensor[(1, 48), float32] */;
  %870 = @func_8010(%859, %860) /* ty=Tensor[(4, 9, 10), float32] */;
  %871 = %866.3;
  (%867, %868, %862, %869, %870, meta[relay.Constant][52] /* ty=Tensor[(2, 180), float32] */, %871, meta[relay.Constant][53] /* ty=Tensor[(40), float32] */)
}

def @func_673(%var_657: Tensor[(3, 14, 3), float64]) -> (Tensor[(3, 14, 3), float64], Tensor[(3, 14, 3), float64]) {
  %872 = cast(%var_657, dtype="float64") /* ty=Tensor[(3, 14, 3), float64] */;
  %873 = cast(%var_657, dtype="float64") /* ty=Tensor[(3, 14, 3), float64] */;
  %874 = asin(%872) /* ty=Tensor[(3, 14, 3), float64] */;
  %875 = erf(%873) /* ty=Tensor[(3, 14, 3), float64] */;
  (%874, %875)
}

def @func_4785() -> (Tensor[(6, 8, 11), float32], Tensor[(10, 66), uint16], Tensor[(660), float64]) {
  %876 = @func_4193() /* ty=(Tensor[(6, 8, 11), float32], Tensor[(3, 9, 6), float32]) */;
  %877 = cast(meta[relay.Constant][54] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %878 = reshape(%877, newshape=[10, 66]) /* ty=Tensor[(10, 66), float64] */;
  %879 = @func_632(%878) /* ty=(Tensor[(10, 66), uint16],) */;
  %880 = %876.0;
  %881 = %879.0;
  (%880, %881, meta[relay.Constant][54] /* ty=Tensor[(660), float64] */)
}

def @func_4694() -> Tensor[(6, 8, 11), float64] {
  %882 = @func_3450() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %882.0
}

def @func_3321(%var_3299: Tensor[(10, 12, 10), bool]) -> (Tensor[(10, 12, 10), float64],) {
  %883 = cast(meta[relay.Constant][55] /* ty=Tensor[(10, 12, 10), bool] */, dtype="bool") /* ty=Tensor[(10, 12, 10), bool] */;
  %884 = shape_of(%var_3299, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%var_3299, dtype="bool") /* ty=Tensor[(10, 12, 10), bool] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %887 = logical_and(%885, %886) /* ty=Tensor[(10, 12, 10), bool] */;
  %888 = cast(meta[relay.Constant][55] /* ty=Tensor[(10, 12, 10), bool] */, dtype="float64") /* ty=Tensor[(10, 12, 10), float64] */;
  %889 = shape_of(%887, dtype="int32") /* ty=Tensor[(3), int32] */;
  %890 = cast(%887, dtype="float64") /* ty=Tensor[(10, 12, 10), float64] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %892 = divide(%890, %891) /* ty=Tensor[(10, 12, 10), float64] */;
  %893 = cast(%892, dtype="float64") /* ty=Tensor[(10, 12, 10), float64] */;
  %894 = log10(%893) /* ty=Tensor[(10, 12, 10), float64] */;
  (%894,)
}

def @func_3527(%var_3506: Tensor[(660), float64]) -> (Tensor[(660), float32],) {
  %895 = @func_2377() /* ty=(Tensor[(660), float64],) */;
  %896 = %895.0;
  %897 = cast(%var_3506, dtype="float32") /* ty=Tensor[(660), float32] */;
  %898 = shape_of(%896, dtype="int32") /* ty=Tensor[(1), int32] */;
  %899 = cast(%896, dtype="float32") /* ty=Tensor[(660), float32] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?), float32] */;
  %901 = subtract(%899, %900) /* ty=Tensor[(660), float32] */;
  (%901,)
}

def @func_6238() -> (Tensor[(660), float64],) {
  %902 = @func_3015() /* ty=(Tensor[(660), float64],) */;
  %903 = %902.0;
  (%903,)
}

def @func_6760(%var_6712: float32, %var_6738: Tensor[(2400), float64], %var_6756: Tensor[(11, 4, 6), bool]) -> (Tensor[(11, ?, ?), float64], Tensor[(660), float64], Tensor[(11, ?, ?), uint8], Tensor[(2400), float64], Tensor[(11, 60, 12), uint8], Tensor[(11, 4, 6), bool]) {
  %904 = cast(%var_6712, dtype="bool") /* ty=bool */;
  %905 = cast(meta[relay.Constant][56] /* ty=Tensor[(11, 1, 1), float32] */, dtype="bool") /* ty=Tensor[(11, 1, 1), bool] */;
  %906 = greater_equal(%904, %905) /* ty=Tensor[(11, 1, 1), bool] */;
  %907 = cast(%906, dtype="float64") /* ty=Tensor[(11, 1, 1), float64] */;
  %908 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(11, 1, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(meta[relay.Constant][56] /* ty=Tensor[(11, 1, 1), float32] */, dtype="float64") /* ty=Tensor[(11, 1, 1), float64] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %911 = @func_6110() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(660), float64]) */;
  %912 = cast(meta[relay.Constant][56] /* ty=Tensor[(11, 1, 1), float32] */, dtype="uint8") /* ty=Tensor[(11, 1, 1), uint8] */;
  %913 = shape_of(%906, dtype="int32") /* ty=Tensor[(3), int32] */;
  %914 = cast(%906, dtype="uint8") /* ty=Tensor[(11, 1, 1), uint8] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %916 = cast(%var_6738, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %917 = cast(%var_6738, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %918 = reshape(%916, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %919 = reshape(%917, newshape=[15, 10, 16]) /* ty=Tensor[(15, 10, 16), float64] */;
  %920 = @func_5498(%918, %919) /* ty=(Tensor[(48), float64], Tensor[(2400), float64], Tensor[(10, 12, 6), float64], Tensor[(60, 12), float64], Tensor[(15, 10, 16), float64]) */;
  %921 = %920.3;
  %922 = cast(%921, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %923 = cast(meta[relay.Constant][56] /* ty=Tensor[(11, 1, 1), float32] */, dtype="uint8") /* ty=Tensor[(11, 1, 1), uint8] */;
  %924 = cast(%906, dtype="bool") /* ty=Tensor[(11, 1, 1), bool] */;
  %925 = cast(%var_6756, dtype="bool") /* ty=Tensor[(11, 4, 6), bool] */;
  %926 = mod(%909, %910) /* ty=Tensor[(11, ?, ?), float64] */;
  %927 = %911.1;
  %928 = right_shift(%914, %915) /* ty=Tensor[(11, ?, ?), uint8] */;
  %929 = bitwise_or(%922, %923) /* ty=Tensor[(11, 60, 12), uint8] */;
  %930 = not_equal(%924, %925) /* ty=Tensor[(11, 4, 6), bool] */;
  (%926, %927, %928, %var_6738, %929, %930)
}

def @func_966() -> (Tensor[(6, 8, 11), float64],) {
  %931 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %932 = %931.0;
  (%932,)
}

def @func_7613() -> (Tensor[(660), float64],) {
  %933 = @func_6238() /* ty=(Tensor[(660), float64],) */;
  %934 = %933.0;
  (%934,)
}

def @func_1592(%var_1557: Tensor[(924), float32], %var_1568: Tensor[(48), float64]) -> (Tensor[(12, 5, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(924), float32], float64, Tensor[(48), float64], Tensor[(8, 13, 14), uint64]) {
  %935 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %936 = %935.1;
  %937 = cast(%936, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %938 = reshape(%937, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %939 = @func_1072(%938) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) */;
  %940 = %939.0;
  %941 = cast(%940, dtype="float64") /* ty=Tensor[(6, 8, 11), float64] */;
  %942 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %943 = cast(%var_1557, dtype="float32") /* ty=Tensor[(924), float32] */;
  %944 = reshape(%943, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), float32] */;
  %945 = @func_1427(%944) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(11, 6, 14), float64]) */;
  %946 = cast(%var_1568, dtype="float64") /* ty=Tensor[(48), float64] */;
  %947 = reshape(%946, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %948 = @func_1217(%947) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64, Tensor[(48), float64]) */;
  %949 = cast(%936, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %950 = reshape(%949, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %951 = @func_1072(%950) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) */;
  %952 = sinh(%941) /* ty=Tensor[(6, 8, 11), float64] */;
  %953 = %942.4;
  %954 = %945.0;
  %955 = %948.2;
  %956 = %951.1;
  (%936, %952, %953, %954, %var_1557, %955, %var_1568, %956)
}

def @func_8279() -> (Tensor[(110, 6), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) {
  %957 = @func_5823() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(528), float64], Tensor[(110, 6), float64], Tensor[(8, 13, 14), uint64], Tensor[(3, 9, 6), float32], Tensor[(660), float32]) */;
  %958 = @func_6884() /* ty=(Tensor[(660), float64],) */;
  %959 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
  %960 = %957.2;
  %961 = %958.0;
  %962 = %959.4;
  (%960, %961, %962)
}

def @func_3190() -> Tensor[(3, 9, 6), float32] {
  @func_2646() /* ty=Tensor[(3, 9, 6), float32] */
}

def @func_7142(%var_7113: Tensor[(48), float64]) -> (Tensor[(660), float64], Tensor[(48), float64], Tensor[(48), float64]) {
  %963 = @func_4834() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %964 = cast(%var_7113, dtype="float64") /* ty=Tensor[(48), float64] */;
  %965 = reshape(%964, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %966 = @func_1217(%965) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64, Tensor[(48), float64]) */;
  %967 = %963.2;
  %968 = %966.3;
  (%967, %968, %var_7113)
}

def @func_6566(%var_6560: Tensor[(5, 1, 6), float32]) -> (Tensor[(5, 15, 6), float32],) {
  %969 = cast(%var_6560, dtype="float32") /* ty=Tensor[(5, 1, 6), float32] */;
  %970 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 15, 6), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 6), float32] */;
  %971 = power(%969, %970) /* ty=Tensor[(5, 15, 6), float32] */;
  (%971,)
}

def @func_8426(%var_8407: Tensor[(6, 13, 11), float32]) -> (Tensor[(6, 13, 11), float32], Tensor[(48), float64]) {
  %972 = cast(%var_8407, dtype="float32") /* ty=Tensor[(6, 13, 11), float32] */;
  %973 = @func_6955() /* ty=(Tensor[(48), float64],) */;
  %974 = tan(%972) /* ty=Tensor[(6, 13, 11), float32] */;
  %975 = %973.0;
  (%974, %975)
}

def @func_3289(%var_3272: Tensor[(48), float64]) -> (Tensor[(660), float64], int64, Tensor[(3, 9, 6), float32], int64, Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(48), float64], Tensor[(660), float32]) {
  %976 = @func_2191() /* ty=(Tensor[(660), float64],) */;
  %977 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %978 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %979 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
  %980 = cast(%var_3272, dtype="float64") /* ty=Tensor[(48), float64] */;
  %981 = reshape(%980, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %982 = @func_2292(%981) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(660), float64], float64, Tensor[(924), float32], Tensor[(48), float64], Tensor[(6, 8, 11), float64]) */;
  %983 = @func_2377() /* ty=(Tensor[(660), float64],) */;
  %984 = %983.0;
  %985 = cast(%984, dtype="float32") /* ty=Tensor[(660), float32] */;
  %986 = %976.0;
  %987 = %977.0;
  %988 = @func_3190() /* ty=Tensor[(3, 9, 6), float32] */;
  %989 = %978.0;
  %990 = %979.1;
  %991 = %982.1;
  %992 = log10(%985) /* ty=Tensor[(660), float32] */;
  (%986, %987, %988, %989, %990, %991, %var_3272, %992)
}

def @func_5082(%var_5055: Tensor[(12, 4), float64]) -> (Tensor[(6, 8, 11), float64], float64, Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64]) {
  %993 = @func_4049() /* ty=(int64, Tensor[(6, 8, 11), float64], Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
  %994 = cast(%var_5055, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %995 = reshape(%994, newshape=[48, 1]) /* ty=Tensor[(48, 1), float64] */;
  %996 = @func_2036(%995) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(7, 132), float32], float64, Tensor[(48, 1), float64]) */;
  %997 = @func_4049() /* ty=(int64, Tensor[(6, 8, 11), float64], Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
  %998 = %993.3;
  %999 = %996.3;
  %1000 = %997.3;
  (%998, %999, %var_5055, %1000)
}

def @func_1072(%var_1065: Tensor[(660), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) {
  %1001 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %1002 = cast(meta[relay.Constant][58] /* ty=Tensor[(1456), uint64] */, dtype="uint64") /* ty=Tensor[(1456), uint64] */;
  %1003 = cast(meta[relay.Constant][58] /* ty=Tensor[(1456), uint64] */, dtype="uint64") /* ty=Tensor[(1456), uint64] */;
  %1004 = cast(%var_1065, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1005 = reshape(%1002, newshape=[8, 13, 14]) /* ty=Tensor[(8, 13, 14), uint64] */;
  %1006 = reshape(%1003, newshape=[8, 13, 14]) /* ty=Tensor[(8, 13, 14), uint64] */;
  %1007 = reshape(%1004, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %1008 = @func_929(%1005, %1006, %1007) /* ty=(Tensor[(8, 13, 14), uint64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(12, 5, 11), float64], int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(10, 66), uint16]) */;
  %1009 = %1001.0;
  %1010 = %1008.0;
  (%1009, %1010, meta[relay.Constant][58] /* ty=Tensor[(1456), uint64] */, %var_1065)
}

def @func_2710(%var_2673: Tensor[(9, 8, 3), int32]) -> (Tensor[(9, 8, 3), int32], Tensor[(10, 66), bool]) {
  %1011 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 8, 3), int32] */, dtype="int32") /* ty=Tensor[(9, 8, 3), int32] */;
  %1012 = shape_of(%var_2673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1013 = cast(%var_2673, dtype="int32") /* ty=Tensor[(9, 8, 3), int32] */;
  %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1015 = @func_1816() /* ty=(int64, Tensor[(10, 66), uint16], Tensor[(660), float64]) */;
  %1016 = %1015.1;
  %1017 = cast(meta[relay.Constant][60] /* ty=Tensor[(10, 66), uint16] */, dtype="bool") /* ty=Tensor[(10, 66), bool] */;
  %1018 = shape_of(%1016, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1019 = cast(%1016, dtype="bool") /* ty=Tensor[(10, 66), bool] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1021 = maximum(%1013, %1014) /* ty=Tensor[(9, 8, 3), int32] */;
  %1022 = equal(%1019, %1020) /* ty=Tensor[(10, 66), bool] */;
  (%1021, %1022)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3017() -> (Tensor[(660), float64],) {
  @func_3015() /* ty=(Tensor[(660), float64],) */
}

def @func_1074(%var_1073: Tensor[(660), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) {
  %10 = fn (%var_1065: Tensor[(660), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) {
    %0 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(1456), uint64] */, dtype="uint64") /* ty=Tensor[(1456), uint64] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(1456), uint64] */, dtype="uint64") /* ty=Tensor[(1456), uint64] */;
    %3 = cast(%var_1065, dtype="float64") /* ty=Tensor[(660), float64] */;
    %4 = reshape(%1, newshape=[8, 13, 14]) /* ty=Tensor[(8, 13, 14), uint64] */;
    %5 = reshape(%2, newshape=[8, 13, 14]) /* ty=Tensor[(8, 13, 14), uint64] */;
    %6 = reshape(%3, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %7 = @func_929(%4, %5, %6) /* ty=(Tensor[(8, 13, 14), uint64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(12, 5, 11), float64], int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(10, 66), uint16]) */;
    %8 = %0.0;
    %9 = %7.0;
    (%8, %9, meta[relay.Constant][0] /* ty=Tensor[(1456), uint64] */, %var_1065)
  };
  %10(%var_1073) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) */
}

def @func_6111() -> (Tensor[(3, 9, 6), float32], Tensor[(660), float64]) {
  %16 = fn () -> (Tensor[(3, 9, 6), float32], Tensor[(660), float64]) {
    %11 = @func_4922() /* ty=Tensor[(3, 9, 6), float32] */;
    %12 = cast(%11, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
    %13 = @func_5214() /* ty=(Tensor[(660), float64],) */;
    %14 = log(%12) /* ty=Tensor[(3, 9, 6), float32] */;
    %15 = %13.0;
    (%14, %15)
  };
  %16() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(660), float64]) */
}

def @func_4834() -> (Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) {
  %17 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %19 = reshape(%18, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %20 = @func_1334(%19) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %21 = %17.0;
  %22 = %20.1;
  (%21, %22, meta[relay.Constant][1] /* ty=Tensor[(660), float64] */)
}

def @func_2534(%var_2533: Tensor[(8, 4, 9), float64]) -> (Tensor[(8, 4, 9), float64], Tensor[(6, 8, 11), float64]) {
  %27 = fn (%var_2503: Tensor[(8, 4, 9), float64]) -> (Tensor[(8, 4, 9), float64], Tensor[(6, 8, 11), float64]) {
    %23 = cast(%var_2503, dtype="float64") /* ty=Tensor[(8, 4, 9), float64] */;
    %24 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
    %25 = tan(%23) /* ty=Tensor[(8, 4, 9), float64] */;
    %26 = %24.0;
    (%25, %26)
  };
  %27(%var_2533) /* ty=(Tensor[(8, 4, 9), float64], Tensor[(6, 8, 11), float64]) */
}

def @func_1430(%var_1428: Tensor[(11, 6, 14), float32]) -> (Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(11, 6, 14), float64]) {
  @func_1427(%var_1428) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(11, 6, 14), float64]) */
}

def @func_2647() -> Tensor[(3, 9, 6), float32] {
  %29 = fn () -> Tensor[(3, 9, 6), float32] {
    %28 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
    %28.0
  };
  %29() /* ty=Tensor[(3, 9, 6), float32] */
}

def @func_4395() -> (Tensor[(14, 10, 3), float64],) {
  @func_4393() /* ty=(Tensor[(14, 10, 3), float64],) */
}

def @func_1986(%var_1984: Tensor[(924), float32]) -> (Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float64], Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(8, 2, 3), float32], float64, Tensor[(10, 66), float64], Tensor[(10, 66), float64]) {
  @func_1983(%var_1984) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float64], Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(8, 2, 3), float32], float64, Tensor[(10, 66), float64], Tensor[(10, 66), float64]) */
}

def @func_2466() -> (Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) {
  @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */
}

def @func_5361() -> (Tensor[(3, 9, 6), float32], Tensor[(48), float64]) {
  %33 = fn () -> (Tensor[(3, 9, 6), float32], Tensor[(48), float64]) {
    %30 = @func_4805() /* ty=(Tensor[(48), float64],) */;
    %31 = @func_3643() /* ty=Tensor[(3, 9, 6), float32] */;
    %32 = %30.0;
    (%31, %32)
  };
  %33() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(48), float64]) */
}

def @func_6056(%var_6053: Tensor[(5, 14, 9), float64], %var_6054: Tensor[(600, 2), bool], %var_6055: Tensor[(5, 14, 9), float64]) -> (Tensor[(5, 14, 9), float64], Tensor[(10, 12, 10), int64], Tensor[(5, 14, 9), bool]) {
  %50 = fn (%var_6010: Tensor[(5, 14, 9), float64], %var_6019: Tensor[(600, 2), bool], %var_6045: Tensor[(5, 14, 9), float64]) -> (Tensor[(5, 14, 9), float64], Tensor[(10, 12, 10), int64], Tensor[(5, 14, 9), bool]) {
    %34 = cast(%var_6010, dtype="float64") /* ty=Tensor[(5, 14, 9), float64] */;
    %35 = cast(%var_6019, dtype="bool") /* ty=Tensor[(600, 2), bool] */;
    %36 = reshape(%35, newshape=[10, 12, 10]) /* ty=Tensor[(10, 12, 10), bool] */;
    %37 = @func_3321(%36) /* ty=(Tensor[(10, 12, 10), float64],) */;
    %38 = %37.0;
    %39 = cast(%var_6019, dtype="int64") /* ty=Tensor[(600, 2), int64] */;
    %40 = shape_of(%38, dtype="int32") /* ty=Tensor[(3), int32] */;
    %41 = cast(%38, dtype="int64") /* ty=Tensor[(10, 12, 10), int64] */;
    %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %43 = cast(%var_6045, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
    %44 = shape_of(%var_6010, dtype="int32") /* ty=Tensor[(3), int32] */;
    %45 = cast(%var_6010, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
    %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %47 = log2(%34) /* ty=Tensor[(5, 14, 9), float64] */;
    %48 = multiply(%41, %42) /* ty=Tensor[(10, 12, 10), int64] */;
    %49 = logical_and(%45, %46) /* ty=Tensor[(5, 14, 9), bool] */;
    (%47, %48, %49)
  };
  %50(%var_6053, %var_6054, %var_6055) /* ty=(Tensor[(5, 14, 9), float64], Tensor[(10, 12, 10), int64], Tensor[(5, 14, 9), bool]) */
}

def @func_2396(%var_2394: Tensor[(10, 9, 10), float32]) -> Tensor[(10, 9, 10), float32] {
  @func_2393(%var_2394) /* ty=Tensor[(10, 9, 10), float32] */
}

def @func_7259() -> (Tensor[(6, 8, 11), float64], Tensor[(48), float64], Tensor[(660), float64], Tensor[(6, 8, 11), float64], Tensor[(7, 132), uint8]) {
  @func_7257() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(48), float64], Tensor[(660), float64], Tensor[(6, 8, 11), float64], Tensor[(7, 132), uint8]) */
}

def @func_7867() -> (Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(14, 10, 3), float64], Tensor[(6, 8, 11), float64]) {
  %60 = fn () -> (Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(14, 10, 3), float64], Tensor[(6, 8, 11), float64]) {
    %51 = @func_4049() /* ty=(int64, Tensor[(6, 8, 11), float64], Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
    %52 = cast(meta[relay.Constant][2] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
    %53 = reshape(%52, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), float32] */;
    %54 = @func_1427(%53) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(11, 6, 14), float64]) */;
    %55 = @func_2215() /* ty=(Tensor[(6, 8, 11), float64],) */;
    %56 = %51.2;
    %57 = %54.1;
    %58 = @func_6251() /* ty=Tensor[(14, 10, 3), float64] */;
    %59 = %55.0;
    (%56, %57, meta[relay.Constant][2] /* ty=Tensor[(924), float32] */, %58, %59)
  };
  %60() /* ty=(Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(14, 10, 3), float64], Tensor[(6, 8, 11), float64]) */
}

def @func_7982() -> Tensor[(6, 8, 11), float64] {
  %61 = fn () -> Tensor[(6, 8, 11), float64] {
    @func_3546() /* ty=Tensor[(6, 8, 11), float64] */
  };
  %61() /* ty=Tensor[(6, 8, 11), float64] */
}

def @func_6661() -> (Tensor[(14, 10, 3), float64],) {
  %62 = @func_4393() /* ty=(Tensor[(14, 10, 3), float64],) */;
  %63 = %62.0;
  (%63,)
}

def @func_1774() -> (Tensor[(6, 8, 11), float64],) {
  @func_1772() /* ty=(Tensor[(6, 8, 11), float64],) */
}

def @func_5498(%var_5474: Tensor[(2400), float64], %var_5487: Tensor[(15, 10, 16), float64]) -> (Tensor[(48), float64], Tensor[(2400), float64], Tensor[(10, 12, 6), float64], Tensor[(60, 12), float64], Tensor[(15, 10, 16), float64]) {
  %64 = @func_4805() /* ty=(Tensor[(48), float64],) */;
  %65 = cast(meta[relay.Constant][3] /* ty=Tensor[(60, 12), float64] */, dtype="float64") /* ty=Tensor[(60, 12), float64] */;
  %66 = reshape(%65, newshape=[10, 12, 6]) /* ty=Tensor[(10, 12, 6), float64] */;
  %67 = @func_4502(%66) /* ty=(Tensor[(10, 12, 6), float64],) */;
  %68 = cast(%var_5474, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %69 = reshape(%68, newshape=[15, 10, 16]) /* ty=Tensor[(15, 10, 16), float64] */;
  %70 = @func_1668(%69) /* ty=Tensor[(15, 10, 16), float64] */;
  %71 = cast(%var_5487, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(%70, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %75 = %64.0;
  %76 = %67.0;
  %77 = maximum(%73, %74) /* ty=Tensor[(15, 10, 16), float64] */;
  (%75, %var_5474, %76, meta[relay.Constant][3] /* ty=Tensor[(60, 12), float64] */, %77)
}

def @func_4157() -> (Tensor[(924), float32], Tensor[(6, 8, 11), float64]) {
  %78 = @func_4049() /* ty=(int64, Tensor[(6, 8, 11), float64], Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
  %79 = %78.4;
  %80 = @func_2179() /* ty=Tensor[(6, 8, 11), float64] */;
  (%79, %80)
}

def @func_2377() -> (Tensor[(660), float64],) {
  %81 = @func_1699() /* ty=Tensor[(660), float64] */;
  (%81,)
}

def @func_8010(%var_7986: Tensor[(4, 9, 10), float32], %var_7987: Tensor[(4, 9, 10), float32]) -> Tensor[(4, 9, 10), float32] {
  %82 = cast(%var_7987, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
  %83 = shape_of(%var_7986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%var_7986, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %86 = subtract(%84, %85) /* ty=Tensor[(4, 9, 10), float32] */;
  %87 = cast(%86, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
  %88 = shape_of(%var_7986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%var_7986, dtype="float32") /* ty=Tensor[(4, 9, 10), float32] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%89, %90) /* ty=Tensor[(4, 9, 10), float32] */
}

def @func_3067() -> (Tensor[(3, 9, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(48), float64]) {
  %91 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
  %92 = %91.0;
  %93 = cast(%92, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
  %94 = cast(meta[relay.Constant][4] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %95 = reshape(%94, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), float64] */;
  %96 = @func_1162(%95) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(21, 6), float64], Tensor[(?, 3, 16), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64) */;
  %97 = cos(%93) /* ty=Tensor[(3, 9, 6), float64] */;
  %98 = %96.3;
  (%97, %98, meta[relay.Constant][4] /* ty=Tensor[(48), float64] */)
}

def @func_6179(%var_6178: Tensor[(630), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(5, 14, 9), bool], Tensor[(630), float64], Tensor[(1200), bool]) {
  %109 = fn (%var_6160: Tensor[(630), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(5, 14, 9), bool], Tensor[(630), float64], Tensor[(1200), bool]) {
    %99 = cast(%var_6160, dtype="float64") /* ty=Tensor[(630), float64] */;
    %100 = cast(meta[relay.Constant][5] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %101 = cast(%var_6160, dtype="float64") /* ty=Tensor[(630), float64] */;
    %102 = reshape(%99, newshape=[5, 14, 9]) /* ty=Tensor[(5, 14, 9), float64] */;
    %103 = reshape(%100, newshape=[600, 2]) /* ty=Tensor[(600, 2), bool] */;
    %104 = reshape(%101, newshape=[5, 14, 9]) /* ty=Tensor[(5, 14, 9), float64] */;
    %105 = @func_6052(%102, %103, %104) /* ty=(Tensor[(5, 14, 9), float64], Tensor[(10, 12, 10), int64], Tensor[(5, 14, 9), bool]) */;
    %106 = @func_4694() /* ty=Tensor[(6, 8, 11), float64] */;
    %107 = @func_2197() /* ty=Tensor[(6, 8, 11), float64] */;
    %108 = %105.2;
    (%106, %107, %108, %var_6160, meta[relay.Constant][5] /* ty=Tensor[(1200), bool] */)
  };
  %109(%var_6178) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(5, 14, 9), bool], Tensor[(630), float64], Tensor[(1200), bool]) */
}

def @func_8093() -> (Tensor[(6, 8, 11), float64],) {
  %111 = fn () -> (Tensor[(6, 8, 11), float64],) {
    %110 = @func_3546() /* ty=Tensor[(6, 8, 11), float64] */;
    (%110,)
  };
  %111() /* ty=(Tensor[(6, 8, 11), float64],) */
}

def @func_5823() -> (Tensor[(6, 8, 11), float64], Tensor[(528), float64], Tensor[(110, 6), float64], Tensor[(8, 13, 14), uint64], Tensor[(3, 9, 6), float32], Tensor[(660), float32]) {
  %112 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
  %113 = %112.1;
  %114 = cast(%113, dtype="float64") /* ty=Tensor[(6, 8, 11), float64] */;
  %115 = cast(meta[relay.Constant][6] /* ty=Tensor[(110, 6), float64] */, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
  %116 = reshape(%114, newshape=[528]) /* ty=Tensor[(528), float64] */;
  %117 = reshape(%115, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %118 = @func_4626(%116, %117) /* ty=(int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(528), float64], Tensor[(660), float64], Tensor[(48), float64]) */;
  %119 = cast(meta[relay.Constant][6] /* ty=Tensor[(110, 6), float64] */, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
  %120 = reshape(%119, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %121 = @func_1072(%120) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) */;
  %122 = @func_3973() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(924), float32], Tensor[(48), float64]) */;
  %123 = cast(meta[relay.Constant][6] /* ty=Tensor[(110, 6), float64] */, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
  %124 = reshape(%123, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %125 = @func_3527(%124) /* ty=(Tensor[(660), float32],) */;
  %126 = %118.3;
  %127 = %121.1;
  %128 = %122.0;
  %129 = %125.0;
  (%113, %126, meta[relay.Constant][6] /* ty=Tensor[(110, 6), float64] */, %127, %128, %129)
}

def @func_8614() -> (Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) {
  %130 = @func_8279() /* ty=(Tensor[(110, 6), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
  %131 = @func_3450() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %132 = %130.2;
  %133 = %131.0;
  (%132, %133)
}

def @func_6252() -> Tensor[(14, 10, 3), float64] {
  %135 = fn () -> Tensor[(14, 10, 3), float64] {
    %134 = @func_4393() /* ty=(Tensor[(14, 10, 3), float64],) */;
    %134.0
  };
  %135() /* ty=Tensor[(14, 10, 3), float64] */
}

def @func_4836() -> (Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) {
  @func_4834() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */
}

def @func_262(%var_260: int64, %var_261: Tensor[(660), float64]) -> (Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) {
  %144 = fn (%var_242: int64, %var_251: Tensor[(660), float64]) -> (Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) {
    %136 = cast(%var_251, dtype="float64") /* ty=Tensor[(660), float64] */;
    %137 = reshape(%136, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
    %138 = cast(%var_242, dtype="int64") /* ty=int64 */;
    %139 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 9, 6), int64] */, dtype="int64") /* ty=Tensor[(3, 9, 6), int64] */;
    %140 = left_shift(%138, %139) /* ty=Tensor[(3, 9, 6), int64] */;
    %141 = cast(%140, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
    %142 = @func_10(%137) /* ty=Tensor[(12, 5, 11), float64] */;
    %143 = asin(%141) /* ty=Tensor[(3, 9, 6), float32] */;
    (%142, %var_251, %143)
  };
  %144(%var_260, %var_261) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */
}

def @func_1468() -> (Tensor[(660), float64],) {
  %147 = fn () -> (Tensor[(660), float64],) {
    %145 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
    %146 = %145.2;
    (%146,)
  };
  %147() /* ty=(Tensor[(660), float64],) */
}

def @func_933(%var_930: Tensor[(8, 13, 14), uint64], %var_931: Tensor[(8, 13, 14), uint64], %var_932: Tensor[(660), float64]) -> (Tensor[(8, 13, 14), uint64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(12, 5, 11), float64], int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(10, 66), uint16]) {
  %174 = fn (%var_883: Tensor[(8, 13, 14), uint64], %var_884: Tensor[(8, 13, 14), uint64], %var_896: Tensor[(660), float64]) -> (Tensor[(8, 13, 14), uint64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(12, 5, 11), float64], int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(10, 66), uint16]) {
    %148 = cast(%var_884, dtype="uint64") /* ty=Tensor[(8, 13, 14), uint64] */;
    %149 = shape_of(%var_883, dtype="int32") /* ty=Tensor[(3), int32] */;
    %150 = cast(%var_883, dtype="uint64") /* ty=Tensor[(8, 13, 14), uint64] */;
    %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %152 = cast(%var_896, dtype="float64") /* ty=Tensor[(660), float64] */;
    %153 = reshape(%152, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
    %154 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %155 = cast(%var_896, dtype="float64") /* ty=Tensor[(660), float64] */;
    %156 = reshape(%154, newshape=[]) /* ty=int64 */;
    %157 = reshape(%155, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %158 = @func_259(%156, %157) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
    %159 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
    %160 = cast(-5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %161 = cast(%var_896, dtype="float64") /* ty=Tensor[(660), float64] */;
    %162 = reshape(%160, newshape=[]) /* ty=int64 */;
    %163 = reshape(%161, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %164 = @func_259(%162, %163) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
    %165 = %158.0;
    %166 = cast(%165, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
    %167 = reshape(%166, newshape=[10, 66]) /* ty=Tensor[(10, 66), float64] */;
    %168 = @func_632(%167) /* ty=(Tensor[(10, 66), uint16],) */;
    %169 = bitwise_and(%150, %151) /* ty=Tensor[(8, 13, 14), uint64] */;
    %170 = @func_10(%153) /* ty=Tensor[(12, 5, 11), float64] */;
    %171 = %159.4;
    %172 = %164.1;
    %173 = %168.0;
    (%169, %170, %var_896, %165, -5 /* ty=int64 */, %171, %172, %173)
  };
  %174(%var_930, %var_931, %var_932) /* ty=(Tensor[(8, 13, 14), uint64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(12, 5, 11), float64], int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(10, 66), uint16]) */
}

def @func_2192() -> (Tensor[(660), float64],) {
  %177 = fn () -> (Tensor[(660), float64],) {
    %175 = @func_1467() /* ty=(Tensor[(660), float64],) */;
    %176 = %175.0;
    (%176,)
  };
  %177() /* ty=(Tensor[(660), float64],) */
}

def @func_4222() -> Tensor[(3, 9, 6), float32] {
  @func_4220() /* ty=Tensor[(3, 9, 6), float32] */
}

def @func_845(%var_842: Tensor[(13, 11, 14), uint64], %var_843: float64, %var_844: Tensor[(48), float64]) -> (Tensor[(8, 2, 3), float64], float64, Tensor[(48), float64], Tensor[(3, 9, 6), float32], Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(13, 11, 14), float32]) {
  @func_840(%var_842, %var_843, %var_844) /* ty=(Tensor[(8, 2, 3), float64], float64, Tensor[(48), float64], Tensor[(3, 9, 6), float32], Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(13, 11, 14), float32]) */
}

def @func_1699() -> Tensor[(660), float64] {
  %178 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %178.2
}

def @func_7145(%var_7143: Tensor[(48), float64]) -> (Tensor[(660), float64], Tensor[(48), float64], Tensor[(48), float64]) {
  @func_7142(%var_7143) /* ty=(Tensor[(660), float64], Tensor[(48), float64], Tensor[(48), float64]) */
}

def @func_4923() -> Tensor[(3, 9, 6), float32] {
  %180 = fn () -> Tensor[(3, 9, 6), float32] {
    %179 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
    %179.0
  };
  %180() /* ty=Tensor[(3, 9, 6), float32] */
}

def @func_1983(%var_1939: Tensor[(924), float32]) -> (Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float64], Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(8, 2, 3), float32], float64, Tensor[(10, 66), float64], Tensor[(10, 66), float64]) {
  %181 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %182 = cast(meta[relay.Constant][8] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %183 = reshape(%182, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %184 = @func_1029(%183) /* ty=(int64, Tensor[(3, 14, 3), float64], Tensor[(126), float64], Tensor[(8, 2, 3), float64], Tensor[(48), float64]) */;
  %185 = cast(%var_1939, dtype="float32") /* ty=Tensor[(924), float32] */;
  %186 = cast(meta[relay.Constant][8] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %187 = reshape(%185, newshape=[924]) /* ty=Tensor[(924), float32] */;
  %188 = reshape(%186, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %189 = @func_1592(%187, %188) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(924), float32], float64, Tensor[(48), float64], Tensor[(8, 13, 14), uint64]) */;
  %190 = cast(9.44378f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %191 = cast(meta[relay.Constant][8] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %192 = reshape(%190, newshape=[]) /* ty=float64 */;
  %193 = reshape(%191, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %194 = @func_556(%192, %193) /* ty=(Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) */;
  %195 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %196 = cast(meta[relay.Constant][9] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %197 = reshape(%196, newshape=[10, 66]) /* ty=Tensor[(10, 66), float64] */;
  %198 = @func_632(%197) /* ty=(Tensor[(10, 66), uint16],) */;
  %199 = %198.0;
  %200 = cast(%199, dtype="float32") /* ty=Tensor[(10, 66), float32] */;
  %201 = cosh(%200) /* ty=Tensor[(10, 66), float32] */;
  %202 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 66), float32] */, dtype="uint64") /* ty=Tensor[(10, 66), uint64] */;
  %203 = shape_of(%201, dtype="int32") /* ty=Tensor[(2), int32] */;
  %204 = cast(%201, dtype="uint64") /* ty=Tensor[(10, 66), uint64] */;
  %205 = dyn.reshape(%202, %203, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %206 = logical_xor(%204, %205) /* ty=Tensor[(10, 66), uint64] */;
  %207 = cast(meta[relay.Constant][9] /* ty=Tensor[(660), float64] */, dtype="bool") /* ty=Tensor[(660), bool] */;
  %208 = shape_of(%206, dtype="int32") /* ty=Tensor[(2), int32] */;
  %209 = cast(%206, dtype="bool") /* ty=Tensor[(10, 66), bool] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %211 = logical_or(%209, %210) /* ty=Tensor[(10, 66), bool] */;
  %212 = cast(%211, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %213 = @func_1880() /* ty=Tensor[(6, 8, 11), float64] */;
  %214 = %181.0;
  %215 = %184.3;
  %216 = %189.1;
  %217 = %194.1;
  %218 = %195.3;
  %219 = atanh(%212) /* ty=Tensor[(10, 66), float64] */;
  (%213, %214, %215, meta[relay.Constant][8] /* ty=Tensor[(12, 4), float64] */, %216, %var_1939, %217, 9.44378f64 /* ty=float64 */, %218, %219)
}

def @func_4370(%var_4334: Tensor[(6, 8, 11), float64], %var_4360: Tensor[(660), float64]) -> (Tensor[(10, 4, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(660), float64]) {
  %220 = @func_3117() /* ty=(Tensor[(10, 4, 6), float64],) */;
  %221 = @func_3067() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(48), float64]) */;
  %222 = %221.1;
  %223 = cast(%var_4334, dtype="float64") /* ty=Tensor[(6, 8, 11), float64] */;
  %224 = shape_of(%222, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%222, dtype="float64") /* ty=Tensor[(6, 8, 11), float64] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %227 = cast(%var_4360, dtype="float64") /* ty=Tensor[(660), float64] */;
  %228 = reshape(%227, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %229 = @func_1072(%228) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) */;
  %230 = %220.0;
  %231 = power(%225, %226) /* ty=Tensor[(6, 8, 11), float64] */;
  %232 = %229.1;
  (%230, %231, %232, %var_4360)
}

def @func_7363(%var_7360: Tensor[(39, 6), uint16], %var_7361: Tensor[(528), float64], %var_7362: Tensor[(10, 66), float64]) -> (Tensor[(924), float32], uint16, Tensor[(39, 6), uint16], Tensor[(528), float64], Tensor[(10, 66), float64], Tensor[(8, 13, 14), int64]) {
  @func_7358(%var_7360, %var_7361, %var_7362) /* ty=(Tensor[(924), float32], uint16, Tensor[(39, 6), uint16], Tensor[(528), float64], Tensor[(10, 66), float64], Tensor[(8, 13, 14), int64]) */
}

def @func_7738() -> (Tensor[(6, 8, 11), float64], Tensor[(924), float32]) {
  @func_7736() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(924), float32]) */
}

def @func_7915() -> Tensor[(924), float32] {
  %233 = @func_4157() /* ty=(Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
  %233.0
}

def @func_6544() -> (Tensor[(660), uint8], Tensor[(3, 9, 6), float32], Tensor[(10, 66), float32]) {
  @func_6542() /* ty=(Tensor[(660), uint8], Tensor[(3, 9, 6), float32], Tensor[(10, 66), float32]) */
}

def @func_6765(%var_6762: float32, %var_6763: Tensor[(2400), float64], %var_6764: Tensor[(11, 4, 6), bool]) -> (Tensor[(11, ?, ?), float64], Tensor[(660), float64], Tensor[(11, ?, ?), uint8], Tensor[(2400), float64], Tensor[(11, 60, 12), uint8], Tensor[(11, 4, 6), bool]) {
  @func_6760(%var_6762, %var_6763, %var_6764) /* ty=(Tensor[(11, ?, ?), float64], Tensor[(660), float64], Tensor[(11, ?, ?), uint8], Tensor[(2400), float64], Tensor[(11, 60, 12), uint8], Tensor[(11, 4, 6), bool]) */
}

def @func_4393() -> (Tensor[(14, 10, 3), float64],) {
  %234 = cast(meta[relay.Constant][11] /* ty=Tensor[(14, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(14, 10, 3), float64] */;
  %235 = sqrt(%234) /* ty=Tensor[(14, 10, 3), float64] */;
  (%235,)
}

def @func_5502(%var_5500: Tensor[(2400), float64], %var_5501: Tensor[(15, 10, 16), float64]) -> (Tensor[(48), float64], Tensor[(2400), float64], Tensor[(10, 12, 6), float64], Tensor[(60, 12), float64], Tensor[(15, 10, 16), float64]) {
  @func_5498(%var_5500, %var_5501) /* ty=(Tensor[(48), float64], Tensor[(2400), float64], Tensor[(10, 12, 6), float64], Tensor[(60, 12), float64], Tensor[(15, 10, 16), float64]) */
}

def @func_6825() -> (Tensor[(924), float32], Tensor[(660), float64], Tensor[(8, 2, 3), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) {
  %236 = cast(meta[relay.Constant][12] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %237 = reshape(%236, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), float64] */;
  %238 = @func_1162(%237) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(21, 6), float64], Tensor[(?, 3, 16), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64) */;
  %239 = @func_5131() /* ty=Tensor[(924), float32] */;
  %240 = @func_5417() /* ty=Tensor[(660), float64] */;
  %241 = %238.4;
  %242 = @func_2646() /* ty=Tensor[(3, 9, 6), float32] */;
  (%239, %240, %241, meta[relay.Constant][12] /* ty=Tensor[(48), float64] */, %242)
}

def @func_3644() -> Tensor[(3, 9, 6), float32] {
  %244 = fn () -> Tensor[(3, 9, 6), float32] {
    %243 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
    %243.4
  };
  %244() /* ty=Tensor[(3, 9, 6), float32] */
}

def @func_4194() -> (Tensor[(6, 8, 11), float32], Tensor[(3, 9, 6), float32]) {
  %250 = fn () -> (Tensor[(6, 8, 11), float32], Tensor[(3, 9, 6), float32]) {
    %245 = @func_2215() /* ty=(Tensor[(6, 8, 11), float64],) */;
    %246 = %245.0;
    %247 = cast(%246, dtype="float32") /* ty=Tensor[(6, 8, 11), float32] */;
    %248 = cos(%247) /* ty=Tensor[(6, 8, 11), float32] */;
    %249 = @func_2646() /* ty=Tensor[(3, 9, 6), float32] */;
    (%248, %249)
  };
  %250() /* ty=(Tensor[(6, 8, 11), float32], Tensor[(3, 9, 6), float32]) */
}

def @func_1668(%var_1661: Tensor[(15, 10, 16), float64]) -> Tensor[(15, 10, 16), float64] {
  %251 = cast(%var_1661, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %252 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(15, 10, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 10, 16), float64] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%253, %254) /* ty=Tensor[(15, 10, 16), float64] */
}

def @func_8071() -> (Tensor[(14, 10, 3), float64],) {
  %255 = @func_6251() /* ty=Tensor[(14, 10, 3), float64] */;
  (%255,)
}

def @func_8429(%var_8427: Tensor[(6, 13, 11), float32]) -> (Tensor[(6, 13, 11), float32], Tensor[(48), float64]) {
  @func_8426(%var_8427) /* ty=(Tensor[(6, 13, 11), float32], Tensor[(48), float64]) */
}

def @main(%var_8733: Tensor[(15, 1, 10), float64]) -> Tensor[(15, 1, 10), float64] {
  %256 = cast(%var_8733, dtype="float64") /* ty=Tensor[(15, 1, 10), float64] */;
  %257 = cosh(%256) /* ty=Tensor[(15, 1, 10), float64] */;
  %258 = cast(%257, dtype="float64") /* ty=Tensor[(15, 1, 10), float64] */;
  log(%258) /* ty=Tensor[(15, 1, 10), float64] */
}

def @func_5132() -> Tensor[(924), float32] {
  %260 = fn () -> Tensor[(924), float32] {
    %259 = @func_4157() /* ty=(Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
    %259.0
  };
  %260() /* ty=Tensor[(924), float32] */
}

def @func_7898(%var_7897: Tensor[(3, 9, 6), float32]) -> (Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), uint8]) {
  %268 = fn (%var_7884: Tensor[(3, 9, 6), float32]) -> (Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), uint8]) {
    %261 = @func_3643() /* ty=Tensor[(3, 9, 6), float32] */;
    %262 = cast(%var_7884, dtype="uint8") /* ty=Tensor[(3, 9, 6), uint8] */;
    %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
    %264 = cast(%261, dtype="uint8") /* ty=Tensor[(3, 9, 6), uint8] */;
    %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %266 = @func_2179() /* ty=Tensor[(6, 8, 11), float64] */;
    %267 = bitwise_or(%264, %265) /* ty=Tensor[(3, 9, 6), uint8] */;
    (%266, %267)
  };
  %268(%var_7897) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), uint8]) */
}

def @func_2713(%var_2711: Tensor[(9, 8, 3), int32]) -> (Tensor[(9, 8, 3), int32], Tensor[(10, 66), bool]) {
  @func_2710(%var_2711) /* ty=(Tensor[(9, 8, 3), int32], Tensor[(10, 66), bool]) */
}

def @func_4865(%var_4852: Tensor[(3, 10, 16), float32]) -> Tensor[(3, 10, 16), bool] {
  %269 = cast(%var_4852, dtype="bool") /* ty=Tensor[(3, 10, 16), bool] */;
  %270 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(3, 10, 16), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 10, 16), float32] */, dtype="bool") /* ty=Tensor[(3, 10, 16), bool] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%271, %272) /* ty=Tensor[(3, 10, 16), bool] */
}

def @func_2393(%var_2382: Tensor[(10, 9, 10), float32]) -> Tensor[(10, 9, 10), float32] {
  %273 = cast(%var_2382, dtype="float32") /* ty=Tensor[(10, 9, 10), float32] */;
  cos(%273) /* ty=Tensor[(10, 9, 10), float32] */
}

def @func_6238() -> (Tensor[(660), float64],) {
  %274 = @func_3015() /* ty=(Tensor[(660), float64],) */;
  %275 = %274.0;
  (%275,)
}

def @func_1671(%var_1669: Tensor[(15, 10, 16), float64]) -> Tensor[(15, 10, 16), float64] {
  @func_1668(%var_1669) /* ty=Tensor[(15, 10, 16), float64] */
}

def @func_5941() -> (Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(10, 9, 10), float32], Tensor[(900), float32]) {
  @func_5939() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(10, 9, 10), float32], Tensor[(900), float32]) */
}

def @func_4159() -> (Tensor[(924), float32], Tensor[(6, 8, 11), float64]) {
  @func_4157() /* ty=(Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */
}

def @func_3118() -> (Tensor[(10, 4, 6), float64],) {
  %279 = fn () -> (Tensor[(10, 4, 6), float64],) {
    %276 = cast(-5.38058f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %277 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 4, 6), float64] */, dtype="float64") /* ty=Tensor[(10, 4, 6), float64] */;
    %278 = mod(%276, %277) /* ty=Tensor[(10, 4, 6), float64] */;
    (%278,)
  };
  %279() /* ty=(Tensor[(10, 4, 6), float64],) */
}

def @func_5547(%var_5545: Tensor[(12, 2, 8), float64]) -> Tensor[(12, 2, 8), float64] {
  @func_5544(%var_5545) /* ty=Tensor[(12, 2, 8), float64] */
}

def @func_4504(%var_4503: Tensor[(10, 12, 6), float64]) -> (Tensor[(10, 12, 6), float64],) {
  %282 = fn (%var_4488: Tensor[(10, 12, 6), float64]) -> (Tensor[(10, 12, 6), float64],) {
    %280 = cast(%var_4488, dtype="float64") /* ty=Tensor[(10, 12, 6), float64] */;
    %281 = tan(%280) /* ty=Tensor[(10, 12, 6), float64] */;
    (%281,)
  };
  %282(%var_4503) /* ty=(Tensor[(10, 12, 6), float64],) */
}

def @func_5825() -> (Tensor[(6, 8, 11), float64], Tensor[(528), float64], Tensor[(110, 6), float64], Tensor[(8, 13, 14), uint64], Tensor[(3, 9, 6), float32], Tensor[(660), float32]) {
  @func_5823() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(528), float64], Tensor[(110, 6), float64], Tensor[(8, 13, 14), uint64], Tensor[(3, 9, 6), float32], Tensor[(660), float32]) */
}

def @func_5151() -> (Tensor[(3, 9, 6), float32],) {
  %283 = @func_4922() /* ty=Tensor[(3, 9, 6), float32] */;
  (%283,)
}

def @func_6663() -> (Tensor[(14, 10, 3), float64],) {
  @func_6661() /* ty=(Tensor[(14, 10, 3), float64],) */
}

def @func_3548() -> Tensor[(6, 8, 11), float64] {
  @func_3546() /* ty=Tensor[(6, 8, 11), float64] */
}

def @func_3321(%var_3299: Tensor[(10, 12, 10), bool]) -> (Tensor[(10, 12, 10), float64],) {
  %284 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 12, 10), bool] */, dtype="bool") /* ty=Tensor[(10, 12, 10), bool] */;
  %285 = shape_of(%var_3299, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%var_3299, dtype="bool") /* ty=Tensor[(10, 12, 10), bool] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %288 = logical_and(%286, %287) /* ty=Tensor[(10, 12, 10), bool] */;
  %289 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 12, 10), bool] */, dtype="float64") /* ty=Tensor[(10, 12, 10), float64] */;
  %290 = shape_of(%288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%288, dtype="float64") /* ty=Tensor[(10, 12, 10), float64] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %293 = divide(%291, %292) /* ty=Tensor[(10, 12, 10), float64] */;
  %294 = cast(%293, dtype="float64") /* ty=Tensor[(10, 12, 10), float64] */;
  %295 = log10(%294) /* ty=Tensor[(10, 12, 10), float64] */;
  (%295,)
}

def @func_6410(%var_6407: Tensor[(4, 9, 13), int32], %var_6408: Tensor[(4, 9, 13), int32], %var_6409: Tensor[(48), float64]) -> (Tensor[(4, 9, 13), int32], Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(48), float64], Tensor[(4, 9, 13), float32]) {
  %316 = fn (%var_6349: Tensor[(4, 9, 13), int32], %var_6350: Tensor[(4, 9, 13), int32], %var_6398: Tensor[(48), float64]) -> (Tensor[(4, 9, 13), int32], Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(48), float64], Tensor[(4, 9, 13), float32]) {
    %296 = cast(%var_6350, dtype="int32") /* ty=Tensor[(4, 9, 13), int32] */;
    %297 = shape_of(%var_6349, dtype="int32") /* ty=Tensor[(3), int32] */;
    %298 = cast(%var_6349, dtype="int32") /* ty=Tensor[(4, 9, 13), int32] */;
    %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %300 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
    %301 = cast(%var_6398, dtype="float64") /* ty=Tensor[(48), float64] */;
    %302 = reshape(%301, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %303 = @func_2292(%302) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(660), float64], float64, Tensor[(924), float32], Tensor[(48), float64], Tensor[(6, 8, 11), float64]) */;
    %304 = cast(%var_6349, dtype="int16") /* ty=Tensor[(4, 9, 13), int16] */;
    %305 = shape_of(%var_6350, dtype="int32") /* ty=Tensor[(3), int32] */;
    %306 = cast(%var_6350, dtype="int16") /* ty=Tensor[(4, 9, 13), int16] */;
    %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %308 = maximum(%306, %307) /* ty=Tensor[(4, 9, 13), int16] */;
    %309 = cast(%308, dtype="float64") /* ty=Tensor[(4, 9, 13), float64] */;
    %310 = sin(%309) /* ty=Tensor[(4, 9, 13), float64] */;
    %311 = cast(%310, dtype="float32") /* ty=Tensor[(4, 9, 13), float32] */;
    %312 = bitwise_xor(%298, %299) /* ty=Tensor[(4, 9, 13), int32] */;
    %313 = %300.0;
    %314 = %303.5;
    %315 = tan(%311) /* ty=Tensor[(4, 9, 13), float32] */;
    (%312, %313, %314, %var_6398, %315)
  };
  %316(%var_6407, %var_6408, %var_6409) /* ty=(Tensor[(4, 9, 13), int32], Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(48), float64], Tensor[(4, 9, 13), float32]) */
}

def @func_6293() -> (Tensor[(6, 8, 11), float64], Tensor[(15, 16, 4), float64], Tensor[(10, 12, 10), int64], Tensor[(60, 20), bool], Tensor[(10, 4, 6), float64]) {
  %317 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %318 = cast(meta[relay.Constant][17] /* ty=Tensor[(60, 20), bool] */, dtype="bool") /* ty=Tensor[(60, 20), bool] */;
  %319 = reshape(%318, newshape=[1200]) /* ty=Tensor[(1200), bool] */;
  %320 = @func_6194(%319) /* ty=(Tensor[(3, 9, 6), float32], Tensor[(10, 12, 10), int64], Tensor[(210, 3), float64], Tensor[(1200), bool]) */;
  %321 = @func_4652() /* ty=(Tensor[(10, 4, 6), float64],) */;
  %322 = %317.0;
  %323 = @func_5171() /* ty=Tensor[(15, 16, 4), float64] */;
  %324 = %320.1;
  %325 = %321.0;
  (%322, %323, %324, meta[relay.Constant][17] /* ty=Tensor[(60, 20), bool] */, %325)
}

def @func_6760(%var_6712: float32, %var_6738: Tensor[(2400), float64], %var_6756: Tensor[(11, 4, 6), bool]) -> (Tensor[(11, ?, ?), float64], Tensor[(660), float64], Tensor[(11, ?, ?), uint8], Tensor[(2400), float64], Tensor[(11, 60, 12), uint8], Tensor[(11, 4, 6), bool]) {
  %326 = cast(%var_6712, dtype="bool") /* ty=bool */;
  %327 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 1, 1), float32] */, dtype="bool") /* ty=Tensor[(11, 1, 1), bool] */;
  %328 = greater_equal(%326, %327) /* ty=Tensor[(11, 1, 1), bool] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(11, 1, 1), float64] */;
  %330 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(11, 1, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 1, 1), float32] */, dtype="float64") /* ty=Tensor[(11, 1, 1), float64] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %333 = @func_6110() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(660), float64]) */;
  %334 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 1, 1), float32] */, dtype="uint8") /* ty=Tensor[(11, 1, 1), uint8] */;
  %335 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %336 = cast(%328, dtype="uint8") /* ty=Tensor[(11, 1, 1), uint8] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %338 = cast(%var_6738, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %339 = cast(%var_6738, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %340 = reshape(%338, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %341 = reshape(%339, newshape=[15, 10, 16]) /* ty=Tensor[(15, 10, 16), float64] */;
  %342 = @func_5498(%340, %341) /* ty=(Tensor[(48), float64], Tensor[(2400), float64], Tensor[(10, 12, 6), float64], Tensor[(60, 12), float64], Tensor[(15, 10, 16), float64]) */;
  %343 = %342.3;
  %344 = cast(%343, dtype="uint8") /* ty=Tensor[(60, 12), uint8] */;
  %345 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 1, 1), float32] */, dtype="uint8") /* ty=Tensor[(11, 1, 1), uint8] */;
  %346 = cast(%328, dtype="bool") /* ty=Tensor[(11, 1, 1), bool] */;
  %347 = cast(%var_6756, dtype="bool") /* ty=Tensor[(11, 4, 6), bool] */;
  %348 = mod(%331, %332) /* ty=Tensor[(11, ?, ?), float64] */;
  %349 = %333.1;
  %350 = right_shift(%336, %337) /* ty=Tensor[(11, ?, ?), uint8] */;
  %351 = bitwise_or(%344, %345) /* ty=Tensor[(11, 60, 12), uint8] */;
  %352 = not_equal(%346, %347) /* ty=Tensor[(11, 4, 6), bool] */;
  (%348, %349, %350, %var_6738, %351, %352)
}

def @func_8560(%var_8556: float32, %var_8558: Tensor[(264), bool]) -> (Tensor[(48), float64], Tensor[(660), float64], float32, Tensor[(2400), float64], Tensor[(264), bool]) {
  %353 = @func_8041() /* ty=(Tensor[(48), float64],) */;
  %354 = cast(%var_8556, dtype="float32") /* ty=float32 */;
  %355 = cast(meta[relay.Constant][19] /* ty=Tensor[(2400), float64] */, dtype="float64") /* ty=Tensor[(2400), float64] */;
  %356 = cast(%var_8558, dtype="bool") /* ty=Tensor[(264), bool] */;
  %357 = reshape(%354, newshape=[]) /* ty=float32 */;
  %358 = reshape(%355, newshape=[2400]) /* ty=Tensor[(2400), float64] */;
  %359 = reshape(%356, newshape=[11, 4, 6]) /* ty=Tensor[(11, 4, 6), bool] */;
  %360 = @func_6760(%357, %358, %359) /* ty=(Tensor[(11, ?, ?), float64], Tensor[(660), float64], Tensor[(11, ?, ?), uint8], Tensor[(2400), float64], Tensor[(11, 60, 12), uint8], Tensor[(11, 4, 6), bool]) */;
  %361 = %353.0;
  %362 = %360.1;
  (%361, %362, %var_8556, meta[relay.Constant][19] /* ty=Tensor[(2400), float64] */, %var_8558)
}

def @func_5675() -> (Tensor[(14, 10, 3), float64], Tensor[(10, 4, 6), float64]) {
  %366 = fn () -> (Tensor[(14, 10, 3), float64], Tensor[(10, 4, 6), float64]) {
    %363 = @func_4393() /* ty=(Tensor[(14, 10, 3), float64],) */;
    %364 = %363.0;
    %365 = @func_3838() /* ty=Tensor[(10, 4, 6), float64] */;
    (%364, %365)
  };
  %366() /* ty=(Tensor[(14, 10, 3), float64], Tensor[(10, 4, 6), float64]) */
}

def @func_7142(%var_7113: Tensor[(48), float64]) -> (Tensor[(660), float64], Tensor[(48), float64], Tensor[(48), float64]) {
  %367 = @func_4834() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %368 = cast(%var_7113, dtype="float64") /* ty=Tensor[(48), float64] */;
  %369 = reshape(%368, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %370 = @func_1217(%369) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64, Tensor[(48), float64]) */;
  %371 = %367.2;
  %372 = %370.3;
  (%371, %372, %var_7113)
}

def @func_5612() -> Tensor[(924), float32] {
  %374 = fn () -> Tensor[(924), float32] {
    %373 = @func_4144() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(924), float32]) */;
    %373.1
  };
  %374() /* ty=Tensor[(924), float32] */
}

def @func_8305() -> Tensor[(660), float64] {
  @func_8303() /* ty=Tensor[(660), float64] */
}

def @func_7736() -> (Tensor[(6, 8, 11), float64], Tensor[(924), float32]) {
  %375 = @func_4157() /* ty=(Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
  %376 = @func_4694() /* ty=Tensor[(6, 8, 11), float64] */;
  %377 = %375.0;
  (%376, %377)
}

def @func_7257() -> (Tensor[(6, 8, 11), float64], Tensor[(48), float64], Tensor[(660), float64], Tensor[(6, 8, 11), float64], Tensor[(7, 132), uint8]) {
  %378 = @func_7048() /* ty=(Tensor[(6, 8, 11), float64], int64, Tensor[(6, 8, 11), float64]) */;
  %379 = @func_6884() /* ty=(Tensor[(660), float64],) */;
  %380 = cast(meta[relay.Constant][20] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %381 = reshape(%380, newshape=[48, 1]) /* ty=Tensor[(48, 1), float64] */;
  %382 = @func_2036(%381) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(7, 132), float32], float64, Tensor[(48, 1), float64]) */;
  %383 = %382.2;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(7, 132), float32] */;
  %385 = log10(%384) /* ty=Tensor[(7, 132), float32] */;
  %386 = cast(%385, dtype="float32") /* ty=Tensor[(7, 132), float32] */;
  %387 = sqrt(%386) /* ty=Tensor[(7, 132), float32] */;
  %388 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 132), float32] */, dtype="float64") /* ty=Tensor[(7, 132), float64] */;
  %389 = shape_of(%387, dtype="int32") /* ty=Tensor[(2), int32] */;
  %390 = cast(%387, dtype="float64") /* ty=Tensor[(7, 132), float64] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %392 = floor_mod(%390, %391) /* ty=Tensor[(7, 132), float64] */;
  %393 = cast(%385, dtype="uint8") /* ty=Tensor[(7, 132), uint8] */;
  %394 = shape_of(%392, dtype="int32") /* ty=Tensor[(2), int32] */;
  %395 = cast(%392, dtype="uint8") /* ty=Tensor[(7, 132), uint8] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %397 = %378.2;
  %398 = %379.0;
  %399 = @func_1880() /* ty=Tensor[(6, 8, 11), float64] */;
  %400 = bitwise_xor(%395, %396) /* ty=Tensor[(7, 132), uint8] */;
  (%397, meta[relay.Constant][20] /* ty=Tensor[(48), float64] */, %398, %399, %400)
}

def @func_2379() -> (Tensor[(660), float64],) {
  @func_2377() /* ty=(Tensor[(660), float64],) */
}

def @func_1337(%var_1335: Tensor[(660), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) {
  @func_1334(%var_1335) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */
}

def @func_4652() -> (Tensor[(10, 4, 6), float64],) {
  %401 = @func_3838() /* ty=Tensor[(10, 4, 6), float64] */;
  (%401,)
}

def @func_3324(%var_3322: Tensor[(10, 12, 10), bool]) -> (Tensor[(10, 12, 10), float64],) {
  @func_3321(%var_3322) /* ty=(Tensor[(10, 12, 10), float64],) */
}

def @func_7036(%var_7035: Tensor[(660), float64]) -> (Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) {
  %415 = fn (%var_7009: Tensor[(660), float64]) -> (Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) {
    %402 = @func_4193() /* ty=(Tensor[(6, 8, 11), float32], Tensor[(3, 9, 6), float32]) */;
    %403 = @func_2197() /* ty=Tensor[(6, 8, 11), float64] */;
    %404 = cast(%403, dtype="float64") /* ty=Tensor[(6, 8, 11), float64] */;
    %405 = cast(%var_7009, dtype="float64") /* ty=Tensor[(660), float64] */;
    %406 = reshape(%404, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), float64] */;
    %407 = reshape(%405, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %408 = @func_4370(%406, %407) /* ty=(Tensor[(10, 4, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(660), float64]) */;
    %409 = @func_6110() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(660), float64]) */;
    %410 = %409.0;
    %411 = cast(%410, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
    %412 = %402.1;
    %413 = %408.1;
    %414 = tan(%411) /* ty=Tensor[(3, 9, 6), float32] */;
    (%412, %403, %413, %var_7009, %414)
  };
  %415(%var_7035) /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */
}

def @func_1334(%var_1332: Tensor[(660), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) {
  %416 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %417 = cast(%var_1332, dtype="float64") /* ty=Tensor[(660), float64] */;
  %418 = reshape(%417, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
  %419 = %416.0;
  %420 = @func_10(%418) /* ty=Tensor[(12, 5, 11), float64] */;
  (%419, %420, %var_1332)
}

def @func_5172() -> Tensor[(15, 16, 4), float64] {
  %422 = fn () -> Tensor[(15, 16, 4), float64] {
    %421 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 16, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 16, 4), float64] */;
    sqrt(%421) /* ty=Tensor[(15, 16, 4), float64] */
  };
  %422() /* ty=Tensor[(15, 16, 4), float64] */
}

def @func_675(%var_674: Tensor[(3, 14, 3), float64]) -> (Tensor[(3, 14, 3), float64], Tensor[(3, 14, 3), float64]) {
  %427 = fn (%var_657: Tensor[(3, 14, 3), float64]) -> (Tensor[(3, 14, 3), float64], Tensor[(3, 14, 3), float64]) {
    %423 = cast(%var_657, dtype="float64") /* ty=Tensor[(3, 14, 3), float64] */;
    %424 = cast(%var_657, dtype="float64") /* ty=Tensor[(3, 14, 3), float64] */;
    %425 = asin(%423) /* ty=Tensor[(3, 14, 3), float64] */;
    %426 = erf(%424) /* ty=Tensor[(3, 14, 3), float64] */;
    (%425, %426)
  };
  %427(%var_674) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(3, 14, 3), float64]) */
}

def @func_1596(%var_1594: Tensor[(924), float32], %var_1595: Tensor[(48), float64]) -> (Tensor[(12, 5, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(924), float32], float64, Tensor[(48), float64], Tensor[(8, 13, 14), uint64]) {
  @func_1592(%var_1594, %var_1595) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(924), float32], float64, Tensor[(48), float64], Tensor[(8, 13, 14), uint64]) */
}

def @func_8661(%var_8659: Tensor[(5, 7, 10), uint32], %var_8660: Tensor[(5, 7, 10), uint32]) -> Tensor[(5, 7, 10), bool] {
  %437 = fn (%var_8644: Tensor[(5, 7, 10), uint32], %var_8645: Tensor[(5, 7, 10), uint32]) -> Tensor[(5, 7, 10), bool] {
    %428 = cast(%var_8645, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
    %429 = shape_of(%var_8644, dtype="int32") /* ty=Tensor[(3), int32] */;
    %430 = cast(%var_8644, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
    %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %432 = greater_equal(%430, %431) /* ty=Tensor[(5, 7, 10), bool] */;
    %433 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 7, 10), bool] */, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
    %434 = shape_of(%432, dtype="int32") /* ty=Tensor[(3), int32] */;
    %435 = cast(%432, dtype="bool") /* ty=Tensor[(5, 7, 10), bool] */;
    %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%435, %436) /* ty=Tensor[(5, 7, 10), bool] */
  };
  %437(%var_8659, %var_8660) /* ty=Tensor[(5, 7, 10), bool] */
}

def @func_4946(%var_4945: Tensor[(1200), bool]) -> (Tensor[(6, 8, 11), float64], Tensor[(10, 12, 10), float64], Tensor[(1200), bool]) {
  %443 = fn (%var_4938: Tensor[(1200), bool]) -> (Tensor[(6, 8, 11), float64], Tensor[(10, 12, 10), float64], Tensor[(1200), bool]) {
    %438 = cast(%var_4938, dtype="bool") /* ty=Tensor[(1200), bool] */;
    %439 = reshape(%438, newshape=[10, 12, 10]) /* ty=Tensor[(10, 12, 10), bool] */;
    %440 = @func_3321(%439) /* ty=(Tensor[(10, 12, 10), float64],) */;
    %441 = @func_3546() /* ty=Tensor[(6, 8, 11), float64] */;
    %442 = %440.0;
    (%441, %442, %var_4938)
  };
  %443(%var_4945) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(10, 12, 10), float64], Tensor[(1200), bool]) */
}

def @func_8073() -> (Tensor[(14, 10, 3), float64],) {
  @func_8071() /* ty=(Tensor[(14, 10, 3), float64],) */
}

def @func_3481(%var_3480: Tensor[(10, 4, 6), float64]) -> Tensor[(10, 4, 6), float64] {
  %450 = fn (%var_3455: Tensor[(10, 4, 6), float64]) -> Tensor[(10, 4, 6), float64] {
    %444 = @func_3117() /* ty=(Tensor[(10, 4, 6), float64],) */;
    %445 = %444.0;
    %446 = cast(%var_3455, dtype="float64") /* ty=Tensor[(10, 4, 6), float64] */;
    %447 = shape_of(%445, dtype="int32") /* ty=Tensor[(3), int32] */;
    %448 = cast(%445, dtype="float64") /* ty=Tensor[(10, 4, 6), float64] */;
    %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%448, %449) /* ty=Tensor[(10, 4, 6), float64] */
  };
  %450(%var_3480) /* ty=Tensor[(10, 4, 6), float64] */
}

def @func_6441(%var_6439: Tensor[(10, 4), float32], %var_6440: uint16) -> (Tensor[(10, 4), float32], Tensor[(1456), uint64], uint16, Tensor[(234, 1), uint16]) {
  @func_6437(%var_6439, %var_6440) /* ty=(Tensor[(10, 4), float32], Tensor[(1456), uint64], uint16, Tensor[(234, 1), uint16]) */
}

def @func_1642(%var_1640: uint16, %var_1641: Tensor[(13, 3, 6), uint16]) -> (Tensor[(13, 3, 6), uint16], Tensor[(660), float64], Tensor[(1456), uint64], Tensor[(110, 6), float64]) {
  @func_1638(%var_1640, %var_1641) /* ty=(Tensor[(13, 3, 6), uint16], Tensor[(660), float64], Tensor[(1456), uint64], Tensor[(110, 6), float64]) */
}

def @func_8041() -> (Tensor[(48), float64],) {
  %451 = @func_4805() /* ty=(Tensor[(48), float64],) */;
  %452 = %451.0;
  (%452,)
}

def @func_2917(%var_2906: Tensor[(234), uint16]) -> (int64, Tensor[(13, 3, 6), uint16], Tensor[(234), uint16], Tensor[(6, 8, 11), float64]) {
  %453 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %454 = %453.0;
  %455 = cast(%454, dtype="uint16") /* ty=uint16 */;
  %456 = cast(%var_2906, dtype="uint16") /* ty=Tensor[(234), uint16] */;
  %457 = reshape(%455, newshape=[]) /* ty=uint16 */;
  %458 = reshape(%456, newshape=[13, 3, 6]) /* ty=Tensor[(13, 3, 6), uint16] */;
  %459 = @func_1638(%457, %458) /* ty=(Tensor[(13, 3, 6), uint16], Tensor[(660), float64], Tensor[(1456), uint64], Tensor[(110, 6), float64]) */;
  %460 = @func_1866() /* ty=(Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) */;
  %461 = %459.0;
  %462 = %460.1;
  (%454, %461, %var_2906, %462)
}

def @func_1164(%var_1163: Tensor[(1, 3, 16), float64]) -> (Tensor[(3, 14, 3), float64], Tensor[(21, 6), float64], Tensor[(?, 3, 16), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64) {
  %482 = fn (%var_1122: Tensor[(1, 3, 16), float64]) -> (Tensor[(3, 14, 3), float64], Tensor[(21, 6), float64], Tensor[(?, 3, 16), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64) {
    %463 = cast(meta[relay.Constant][24] /* ty=Tensor[(21, 6), float64] */, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
    %464 = reshape(%463, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), float64] */;
    %465 = @func_673(%464) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(3, 14, 3), float64]) */;
    %466 = cast(%var_1122, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
    %467 = tan(%466) /* ty=Tensor[(1, 3, 16), float64] */;
    %468 = cast(%var_1122, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
    %469 = shape_of(%467, dtype="int32") /* ty=Tensor[(3), int32] */;
    %470 = cast(%467, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
    %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %472 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
    %473 = cast(-1.62292f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %474 = cast(%var_1122, dtype="float64") /* ty=Tensor[(1, 3, 16), float64] */;
    %475 = reshape(%473, newshape=[]) /* ty=float64 */;
    %476 = reshape(%474, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
    %477 = @func_556(%475, %476) /* ty=(Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) */;
    %478 = %465.1;
    %479 = divide(%470, %471) /* ty=Tensor[(?, 3, 16), float64] */;
    %480 = %472.0;
    %481 = %477.1;
    (%478, meta[relay.Constant][24] /* ty=Tensor[(21, 6), float64] */, %479, %480, %481, -1.62292f64 /* ty=float64 */)
  };
  %482(%var_1163) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(21, 6), float64], Tensor[(?, 3, 16), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64) */
}

def @func_2865(%var_2864: int8) -> (Tensor[(3, 3, 1), bool], Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(110, 6), float64], Tensor[(234, 1), uint16]) {
  %498 = fn (%var_2826: int8) -> (Tensor[(3, 3, 1), bool], Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(110, 6), float64], Tensor[(234, 1), uint16]) {
    %483 = cast(%var_2826, dtype="bool") /* ty=bool */;
    %484 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 3, 1), int8] */, dtype="bool") /* ty=Tensor[(3, 3, 1), bool] */;
    %485 = cast(%var_2826, dtype="int64") /* ty=int64 */;
    %486 = cast(meta[relay.Constant][26] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
    %487 = reshape(%485, newshape=[]) /* ty=int64 */;
    %488 = reshape(%486, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %489 = @func_259(%487, %488) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
    %490 = cast(%var_2826, dtype="uint16") /* ty=uint16 */;
    %491 = cast(meta[relay.Constant][27] /* ty=Tensor[(234, 1), uint16] */, dtype="uint16") /* ty=Tensor[(234, 1), uint16] */;
    %492 = reshape(%490, newshape=[]) /* ty=uint16 */;
    %493 = reshape(%491, newshape=[13, 3, 6]) /* ty=Tensor[(13, 3, 6), uint16] */;
    %494 = @func_1638(%492, %493) /* ty=(Tensor[(13, 3, 6), uint16], Tensor[(660), float64], Tensor[(1456), uint64], Tensor[(110, 6), float64]) */;
    %495 = not_equal(%483, %484) /* ty=Tensor[(3, 3, 1), bool] */;
    %496 = %489.2;
    %497 = %494.3;
    (%495, %496, meta[relay.Constant][26] /* ty=Tensor[(660), float64] */, %497, meta[relay.Constant][27] /* ty=Tensor[(234, 1), uint16] */)
  };
  %498(%var_2864) /* ty=(Tensor[(3, 3, 1), bool], Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(110, 6), float64], Tensor[(234, 1), uint16]) */
}

def @func_8216(%var_8153: Tensor[(5, 14, 9), bool], %var_8211: Tensor[(110, 6), float64]) -> (Tensor[(3, 9, 6), float32], Tensor[(630), float64], Tensor[(5, 14, 9), bool], Tensor[(6, 8, 11), float64], Tensor[(6, 7, 12), float64], Tensor[(8, 13, 14), uint64], Tensor[(110, 6), float64]) {
  %499 = @func_6110() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(660), float64]) */;
  %500 = cast(meta[relay.Constant][28] /* ty=Tensor[(630), float64] */, dtype="float64") /* ty=Tensor[(630), float64] */;
  %501 = reshape(%500, newshape=[630]) /* ty=Tensor[(630), float64] */;
  %502 = @func_6177(%501) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(5, 14, 9), bool], Tensor[(630), float64], Tensor[(1200), bool]) */;
  %503 = %502.2;
  %504 = cast(%var_8153, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
  %505 = shape_of(%503, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(%503, dtype="bool") /* ty=Tensor[(5, 14, 9), bool] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %508 = @func_8092() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %509 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 7, 12), float64] */, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  %510 = log10(%509) /* ty=Tensor[(6, 7, 12), float64] */;
  %511 = cast(%510, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  %512 = acos(%511) /* ty=Tensor[(6, 7, 12), float64] */;
  %513 = cast(%512, dtype="int8") /* ty=Tensor[(6, 7, 12), int8] */;
  %514 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%510, dtype="int8") /* ty=Tensor[(6, 7, 12), int8] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %517 = maximum(%515, %516) /* ty=Tensor[(6, 7, 12), int8] */;
  %518 = cast(%510, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  %519 = acosh(%518) /* ty=Tensor[(6, 7, 12), float64] */;
  %520 = cast(%519, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  %521 = shape_of(%517, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%517, dtype="float64") /* ty=Tensor[(6, 7, 12), float64] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %524 = cast(%var_8211, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
  %525 = reshape(%524, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %526 = @func_1072(%525) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) */;
  %527 = %499.0;
  %528 = equal(%506, %507) /* ty=Tensor[(5, 14, 9), bool] */;
  %529 = %508.0;
  %530 = subtract(%522, %523) /* ty=Tensor[(6, 7, 12), float64] */;
  %531 = %526.1;
  (%527, meta[relay.Constant][28] /* ty=Tensor[(630), float64] */, %528, %529, %530, %531, %var_8211)
}

def @func_4145() -> (Tensor[(6, 8, 11), float64], Tensor[(924), float32]) {
  %535 = fn () -> (Tensor[(6, 8, 11), float64], Tensor[(924), float32]) {
    %532 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
    %533 = @func_2197() /* ty=Tensor[(6, 8, 11), float64] */;
    %534 = %532.2;
    (%533, %534)
  };
  %535() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(924), float32]) */
}

def @func_12(%var_11: Tensor[(12, 5, 11), float64]) -> Tensor[(12, 5, 11), float64] {
  %537 = fn (%var_2: Tensor[(12, 5, 11), float64]) -> Tensor[(12, 5, 11), float64] {
    %536 = cast(%var_2, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
    sin(%536) /* ty=Tensor[(12, 5, 11), float64] */
  };
  %537(%var_11) /* ty=Tensor[(12, 5, 11), float64] */
}

def @func_7358(%var_7326: Tensor[(39, 6), uint16], %var_7339: Tensor[(528), float64], %var_7340: Tensor[(10, 66), float64]) -> (Tensor[(924), float32], uint16, Tensor[(39, 6), uint16], Tensor[(528), float64], Tensor[(10, 66), float64], Tensor[(8, 13, 14), int64]) {
  %538 = @func_3973() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(924), float32], Tensor[(48), float64]) */;
  %539 = cast(%var_7339, dtype="float64") /* ty=Tensor[(528), float64] */;
  %540 = cast(%var_7340, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
  %541 = reshape(%539, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), float64] */;
  %542 = reshape(%540, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %543 = @func_4370(%541, %542) /* ty=(Tensor[(10, 4, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(660), float64]) */;
  %544 = %543.2;
  %545 = cast(meta[relay.Constant][30] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %546 = cast(%var_7326, dtype="uint16") /* ty=Tensor[(39, 6), uint16] */;
  %547 = reshape(%545, newshape=[]) /* ty=uint16 */;
  %548 = reshape(%546, newshape=[13, 3, 6]) /* ty=Tensor[(13, 3, 6), uint16] */;
  %549 = @func_1638(%547, %548) /* ty=(Tensor[(13, 3, 6), uint16], Tensor[(660), float64], Tensor[(1456), uint64], Tensor[(110, 6), float64]) */;
  %550 = %549.2;
  %551 = cast(%550, dtype="int64") /* ty=Tensor[(1456), int64] */;
  %552 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%544, dtype="int64") /* ty=Tensor[(8, 13, 14), int64] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %555 = %538.1;
  %556 = add(%553, %554) /* ty=Tensor[(8, 13, 14), int64] */;
  (%555, meta[relay.Constant][30] /* ty=uint16 */, %var_7326, %var_7339, %var_7340, %556)
}

def @func_1592(%var_1557: Tensor[(924), float32], %var_1568: Tensor[(48), float64]) -> (Tensor[(12, 5, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(924), float32], float64, Tensor[(48), float64], Tensor[(8, 13, 14), uint64]) {
  %557 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %558 = %557.1;
  %559 = cast(%558, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %560 = reshape(%559, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %561 = @func_1072(%560) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) */;
  %562 = %561.0;
  %563 = cast(%562, dtype="float64") /* ty=Tensor[(6, 8, 11), float64] */;
  %564 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %565 = cast(%var_1557, dtype="float32") /* ty=Tensor[(924), float32] */;
  %566 = reshape(%565, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), float32] */;
  %567 = @func_1427(%566) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(11, 6, 14), float64]) */;
  %568 = cast(%var_1568, dtype="float64") /* ty=Tensor[(48), float64] */;
  %569 = reshape(%568, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %570 = @func_1217(%569) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64, Tensor[(48), float64]) */;
  %571 = cast(%558, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %572 = reshape(%571, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %573 = @func_1072(%572) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(1456), uint64], Tensor[(660), float64]) */;
  %574 = sinh(%563) /* ty=Tensor[(6, 8, 11), float64] */;
  %575 = %564.4;
  %576 = %567.0;
  %577 = %570.2;
  %578 = %573.1;
  (%558, %574, %575, %576, %var_1557, %577, %var_1568, %578)
}

def @func_1427(%var_1383: Tensor[(11, 6, 14), float32]) -> (Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(11, 6, 14), float64]) {
  %579 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %580 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %581 = cast(%var_1383, dtype="float32") /* ty=Tensor[(11, 6, 14), float32] */;
  %582 = atanh(%581) /* ty=Tensor[(11, 6, 14), float32] */;
  %583 = cast(%var_1383, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
  %584 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%582, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %587 = %579.0;
  %588 = %580.0;
  %589 = minimum(%585, %586) /* ty=Tensor[(11, 6, 14), float64] */;
  (%587, %588, %589)
}

def @func_3546() -> Tensor[(6, 8, 11), float64] {
  @func_2197() /* ty=Tensor[(6, 8, 11), float64] */
}

def @func_6194(%var_6186: Tensor[(1200), bool]) -> (Tensor[(3, 9, 6), float32], Tensor[(10, 12, 10), int64], Tensor[(210, 3), float64], Tensor[(1200), bool]) {
  %590 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %591 = cast(meta[relay.Constant][31] /* ty=Tensor[(210, 3), float64] */, dtype="float64") /* ty=Tensor[(210, 3), float64] */;
  %592 = cast(%var_6186, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %593 = cast(meta[relay.Constant][31] /* ty=Tensor[(210, 3), float64] */, dtype="float64") /* ty=Tensor[(210, 3), float64] */;
  %594 = reshape(%591, newshape=[5, 14, 9]) /* ty=Tensor[(5, 14, 9), float64] */;
  %595 = reshape(%592, newshape=[600, 2]) /* ty=Tensor[(600, 2), bool] */;
  %596 = reshape(%593, newshape=[5, 14, 9]) /* ty=Tensor[(5, 14, 9), float64] */;
  %597 = @func_6052(%594, %595, %596) /* ty=(Tensor[(5, 14, 9), float64], Tensor[(10, 12, 10), int64], Tensor[(5, 14, 9), bool]) */;
  %598 = %590.1;
  %599 = %597.1;
  (%598, %599, meta[relay.Constant][31] /* ty=Tensor[(210, 3), float64] */, %var_6186)
}

def @func_2920(%var_2918: Tensor[(234), uint16]) -> (int64, Tensor[(13, 3, 6), uint16], Tensor[(234), uint16], Tensor[(6, 8, 11), float64]) {
  @func_2917(%var_2918) /* ty=(int64, Tensor[(13, 3, 6), uint16], Tensor[(234), uint16], Tensor[(6, 8, 11), float64]) */
}

def @func_5216() -> (Tensor[(660), float64],) {
  @func_5214() /* ty=(Tensor[(660), float64],) */
}

def @func_3530(%var_3528: Tensor[(660), float64]) -> (Tensor[(660), float32],) {
  @func_3527(%var_3528) /* ty=(Tensor[(660), float32],) */
}

def @func_1219(%var_1218: Tensor[(48), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64, Tensor[(48), float64]) {
  %608 = fn (%var_1210: Tensor[(48), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64, Tensor[(48), float64]) {
    %600 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
    %601 = cast(7.41304f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %602 = cast(%var_1210, dtype="float64") /* ty=Tensor[(48), float64] */;
    %603 = reshape(%601, newshape=[]) /* ty=float64 */;
    %604 = reshape(%602, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
    %605 = @func_556(%603, %604) /* ty=(Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) */;
    %606 = %600.0;
    %607 = %605.1;
    (%606, %607, 7.41304f64 /* ty=float64 */, %var_1210)
  };
  %608(%var_1218) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64, Tensor[(48), float64]) */
}

def @func_3191() -> Tensor[(3, 9, 6), float32] {
  %609 = fn () -> Tensor[(3, 9, 6), float32] {
    @func_2646() /* ty=Tensor[(3, 9, 6), float32] */
  };
  %609() /* ty=Tensor[(3, 9, 6), float32] */
}

def @func_3450() -> (Tensor[(6, 8, 11), float64],) {
  %610 = @func_2197() /* ty=Tensor[(6, 8, 11), float64] */;
  (%610,)
}

def @func_5300() -> (Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], Tensor[(48), float64]) {
  %617 = fn () -> (Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], Tensor[(48), float64]) {
    %611 = @func_3450() /* ty=(Tensor[(6, 8, 11), float64],) */;
    %612 = cast(meta[relay.Constant][32] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %613 = reshape(%612, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %614 = @func_1217(%613) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64, Tensor[(48), float64]) */;
    %615 = %611.0;
    %616 = %614.1;
    (%615, %616, meta[relay.Constant][32] /* ty=Tensor[(48), float64] */)
  };
  %617() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], Tensor[(48), float64]) */
}

def @func_8220(%var_8218: Tensor[(5, 14, 9), bool], %var_8219: Tensor[(110, 6), float64]) -> (Tensor[(3, 9, 6), float32], Tensor[(630), float64], Tensor[(5, 14, 9), bool], Tensor[(6, 8, 11), float64], Tensor[(6, 7, 12), float64], Tensor[(8, 13, 14), uint64], Tensor[(110, 6), float64]) {
  @func_8216(%var_8218, %var_8219) /* ty=(Tensor[(3, 9, 6), float32], Tensor[(630), float64], Tensor[(5, 14, 9), bool], Tensor[(6, 8, 11), float64], Tensor[(6, 7, 12), float64], Tensor[(8, 13, 14), uint64], Tensor[(110, 6), float64]) */
}

def @func_7917() -> Tensor[(924), float32] {
  @func_7915() /* ty=Tensor[(924), float32] */
}

def @func_2464() -> (Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) {
  %618 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %619 = %618.1;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
  %621 = sigmoid(%620) /* ty=Tensor[(3, 9, 6), float32] */;
  %622 = cast(%621, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
  %623 = @func_2215() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %624 = atan(%622) /* ty=Tensor[(3, 9, 6), float32] */;
  %625 = %623.0;
  (%624, %625)
}

def @func_8303() -> Tensor[(660), float64] {
  @func_1699() /* ty=Tensor[(660), float64] */
}

def @func_8703() -> Tensor[(660), float64] {
  %627 = fn () -> Tensor[(660), float64] {
    %626 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
    %626.2
  };
  %627() /* ty=Tensor[(660), float64] */
}

def @func_8520(%var_8519: Tensor[(14, 10, 3), float64]) -> (Tensor[(14, 10, 3), float64], Tensor[(660), float64]) {
  %636 = fn (%var_8506: Tensor[(14, 10, 3), float64]) -> (Tensor[(14, 10, 3), float64], Tensor[(660), float64]) {
    %628 = @func_6251() /* ty=Tensor[(14, 10, 3), float64] */;
    %629 = cast(%var_8506, dtype="float64") /* ty=Tensor[(14, 10, 3), float64] */;
    %630 = shape_of(%628, dtype="int32") /* ty=Tensor[(3), int32] */;
    %631 = cast(%628, dtype="float64") /* ty=Tensor[(14, 10, 3), float64] */;
    %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %633 = @func_7520() /* ty=(Tensor[(660), float64], Tensor[(660), float64]) */;
    %634 = add(%631, %632) /* ty=Tensor[(14, 10, 3), float64] */;
    %635 = %633.0;
    (%634, %635)
  };
  %636(%var_8519) /* ty=(Tensor[(14, 10, 3), float64], Tensor[(660), float64]) */
}

def @func_3840() -> Tensor[(10, 4, 6), float64] {
  @func_3838() /* ty=Tensor[(10, 4, 6), float64] */
}

def @func_6640() -> Tensor[(660), float64] {
  %638 = fn () -> Tensor[(660), float64] {
    %637 = @func_6238() /* ty=(Tensor[(660), float64],) */;
    %637.0
  };
  %638() /* ty=Tensor[(660), float64] */
}

def @func_8281() -> (Tensor[(110, 6), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) {
  @func_8279() /* ty=(Tensor[(110, 6), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */
}

def @func_4630(%var_4628: Tensor[(528), float64], %var_4629: Tensor[(660), float64]) -> (int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(528), float64], Tensor[(660), float64], Tensor[(48), float64]) {
  @func_4626(%var_4628, %var_4629) /* ty=(int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(528), float64], Tensor[(660), float64], Tensor[(48), float64]) */
}

def @func_8564(%var_8562: float32, %var_8563: Tensor[(264), bool]) -> (Tensor[(48), float64], Tensor[(660), float64], float32, Tensor[(2400), float64], Tensor[(264), bool]) {
  @func_8560(%var_8562, %var_8563) /* ty=(Tensor[(48), float64], Tensor[(660), float64], float32, Tensor[(2400), float64], Tensor[(264), bool]) */
}

def @func_6827() -> (Tensor[(924), float32], Tensor[(660), float64], Tensor[(8, 2, 3), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) {
  @func_6825() /* ty=(Tensor[(924), float32], Tensor[(660), float64], Tensor[(8, 2, 3), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */
}

def @func_6885() -> (Tensor[(660), float64],) {
  %640 = fn () -> (Tensor[(660), float64],) {
    %639 = @func_1699() /* ty=Tensor[(660), float64] */;
    (%639,)
  };
  %640() /* ty=(Tensor[(660), float64],) */
}

def @func_8616() -> (Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) {
  @func_8614() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */
}

def @func_4785() -> (Tensor[(6, 8, 11), float32], Tensor[(10, 66), uint16], Tensor[(660), float64]) {
  %641 = @func_4193() /* ty=(Tensor[(6, 8, 11), float32], Tensor[(3, 9, 6), float32]) */;
  %642 = cast(meta[relay.Constant][33] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %643 = reshape(%642, newshape=[10, 66]) /* ty=Tensor[(10, 66), float64] */;
  %644 = @func_632(%643) /* ty=(Tensor[(10, 66), uint16],) */;
  %645 = %641.0;
  %646 = %644.0;
  (%645, %646, meta[relay.Constant][33] /* ty=Tensor[(660), float64] */)
}

def @func_8279() -> (Tensor[(110, 6), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) {
  %647 = @func_5823() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(528), float64], Tensor[(110, 6), float64], Tensor[(8, 13, 14), uint64], Tensor[(3, 9, 6), float32], Tensor[(660), float32]) */;
  %648 = @func_6884() /* ty=(Tensor[(660), float64],) */;
  %649 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
  %650 = %647.2;
  %651 = %648.0;
  %652 = %649.4;
  (%650, %651, %652)
}

def @func_6568(%var_6567: Tensor[(5, 1, 6), float32]) -> (Tensor[(5, 15, 6), float32],) {
  %656 = fn (%var_6560: Tensor[(5, 1, 6), float32]) -> (Tensor[(5, 15, 6), float32],) {
    %653 = cast(%var_6560, dtype="float32") /* ty=Tensor[(5, 1, 6), float32] */;
    %654 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 15, 6), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 6), float32] */;
    %655 = power(%653, %654) /* ty=Tensor[(5, 15, 6), float32] */;
    (%655,)
  };
  %656(%var_6567) /* ty=(Tensor[(5, 15, 6), float32],) */
}

def @func_3974() -> (Tensor[(3, 9, 6), float32], Tensor[(924), float32], Tensor[(48), float64]) {
  %667 = fn () -> (Tensor[(3, 9, 6), float32], Tensor[(924), float32], Tensor[(48), float64]) {
    %657 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
    %658 = %657.2;
    %659 = cast(meta[relay.Constant][35] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
    %660 = shape_of(%658, dtype="int32") /* ty=Tensor[(1), int32] */;
    %661 = cast(%658, dtype="float32") /* ty=Tensor[(924), float32] */;
    %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?), float32] */;
    %663 = @func_3067() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(48), float64]) */;
    %664 = @func_3190() /* ty=Tensor[(3, 9, 6), float32] */;
    %665 = power(%661, %662) /* ty=Tensor[(924), float32] */;
    %666 = %663.2;
    (%664, %665, %666)
  };
  %667() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(924), float32], Tensor[(48), float64]) */
}

def @func_5153() -> (Tensor[(3, 9, 6), float32],) {
  @func_5151() /* ty=(Tensor[(3, 9, 6), float32],) */
}

def @func_5939() -> (Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(10, 9, 10), float32], Tensor[(900), float32]) {
  %668 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
  %669 = @func_3015() /* ty=(Tensor[(660), float64],) */;
  %670 = cast(meta[relay.Constant][36] /* ty=Tensor[(900), float32] */, dtype="float32") /* ty=Tensor[(900), float32] */;
  %671 = reshape(%670, newshape=[10, 9, 10]) /* ty=Tensor[(10, 9, 10), float32] */;
  %672 = %668.1;
  %673 = %669.0;
  %674 = @func_2393(%671) /* ty=Tensor[(10, 9, 10), float32] */;
  (%672, %673, %674, meta[relay.Constant][36] /* ty=Tensor[(900), float32] */)
}

def @func_3291(%var_3290: Tensor[(48), float64]) -> (Tensor[(660), float64], int64, Tensor[(3, 9, 6), float32], int64, Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(48), float64], Tensor[(660), float32]) {
  %692 = fn (%var_3272: Tensor[(48), float64]) -> (Tensor[(660), float64], int64, Tensor[(3, 9, 6), float32], int64, Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(48), float64], Tensor[(660), float32]) {
    %675 = @func_2191() /* ty=(Tensor[(660), float64],) */;
    %676 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
    %677 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
    %678 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
    %679 = cast(%var_3272, dtype="float64") /* ty=Tensor[(48), float64] */;
    %680 = reshape(%679, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %681 = @func_2292(%680) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(660), float64], float64, Tensor[(924), float32], Tensor[(48), float64], Tensor[(6, 8, 11), float64]) */;
    %682 = @func_2377() /* ty=(Tensor[(660), float64],) */;
    %683 = %682.0;
    %684 = cast(%683, dtype="float32") /* ty=Tensor[(660), float32] */;
    %685 = %675.0;
    %686 = %676.0;
    %687 = @func_3190() /* ty=Tensor[(3, 9, 6), float32] */;
    %688 = %677.0;
    %689 = %678.1;
    %690 = %681.1;
    %691 = log10(%684) /* ty=Tensor[(660), float32] */;
    (%685, %686, %687, %688, %689, %690, %var_3272, %691)
  };
  %692(%var_3290) /* ty=(Tensor[(660), float64], int64, Tensor[(3, 9, 6), float32], int64, Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(48), float64], Tensor[(660), float32]) */
}

def @func_6705() -> (Tensor[(3, 9, 6), float32], Tensor[(120, 2), float64], Tensor[(10, 4, 6), float32]) {
  %700 = fn () -> (Tensor[(3, 9, 6), float32], Tensor[(120, 2), float64], Tensor[(10, 4, 6), float32]) {
    %693 = @func_5360() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(48), float64]) */;
    %694 = cast(meta[relay.Constant][37] /* ty=Tensor[(120, 2), float64] */, dtype="float64") /* ty=Tensor[(120, 2), float64] */;
    %695 = reshape(%694, newshape=[10, 4, 6]) /* ty=Tensor[(10, 4, 6), float64] */;
    %696 = @func_3479(%695) /* ty=Tensor[(10, 4, 6), float64] */;
    %697 = cast(%696, dtype="float32") /* ty=Tensor[(10, 4, 6), float32] */;
    %698 = %693.0;
    %699 = atan(%697) /* ty=Tensor[(10, 4, 6), float32] */;
    (%698, meta[relay.Constant][37] /* ty=Tensor[(120, 2), float64] */, %699)
  };
  %700() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(120, 2), float64], Tensor[(10, 4, 6), float32]) */
}

def @func_4447(%var_4446: Tensor[(2, 1200), float64]) -> (Tensor[(3, 9, 6), float32], Tensor[(15, 10, 16), float64], Tensor[(2, 1200), float64]) {
  %705 = fn (%var_4441: Tensor[(2, 1200), float64]) -> (Tensor[(3, 9, 6), float32], Tensor[(15, 10, 16), float64], Tensor[(2, 1200), float64]) {
    %701 = cast(%var_4441, dtype="float64") /* ty=Tensor[(2, 1200), float64] */;
    %702 = reshape(%701, newshape=[15, 10, 16]) /* ty=Tensor[(15, 10, 16), float64] */;
    %703 = @func_3190() /* ty=Tensor[(3, 9, 6), float32] */;
    %704 = @func_1668(%702) /* ty=Tensor[(15, 10, 16), float64] */;
    (%703, %704, %var_4441)
  };
  %705(%var_4446) /* ty=(Tensor[(3, 9, 6), float32], Tensor[(15, 10, 16), float64], Tensor[(2, 1200), float64]) */
}

def @func_1742(%var_1740: Tensor[(48), float64]) -> (Tensor[(6, 8, 11), float64], float64, Tensor[(924), float32], Tensor[(48), float64]) {
  @func_1739(%var_1740) /* ty=(Tensor[(6, 8, 11), float64], float64, Tensor[(924), float32], Tensor[(48), float64]) */
}

def @func_4695() -> Tensor[(6, 8, 11), float64] {
  %707 = fn () -> Tensor[(6, 8, 11), float64] {
    %706 = @func_3450() /* ty=(Tensor[(6, 8, 11), float64],) */;
    %706.0
  };
  %707() /* ty=Tensor[(6, 8, 11), float64] */
}

def @func_1818() -> (int64, Tensor[(10, 66), uint16], Tensor[(660), float64]) {
  @func_1816() /* ty=(int64, Tensor[(10, 66), uint16], Tensor[(660), float64]) */
}

def @func_4807() -> (Tensor[(48), float64],) {
  @func_4805() /* ty=(Tensor[(48), float64],) */
}

def @func_4787() -> (Tensor[(6, 8, 11), float32], Tensor[(10, 66), uint16], Tensor[(660), float64]) {
  @func_4785() /* ty=(Tensor[(6, 8, 11), float32], Tensor[(10, 66), uint16], Tensor[(660), float64]) */
}

def @func_6077(%var_6075: Tensor[(6, 2, 11), float64]) -> (Tensor[(6, 2, 11), float64],) {
  @func_6074(%var_6075) /* ty=(Tensor[(6, 2, 11), float64],) */
}

def @func_7286(%var_7284: Tensor[(36), int8], %var_7285: Tensor[(1, 360), int8]) -> (int64, Tensor[(36), int8], Tensor[(1, 360), int8], Tensor[(4, 10, 9), float64], Tensor[(10, 9, 10), float32], int64) {
  %722 = fn (%var_7267: Tensor[(36), int8], %var_7268: Tensor[(1, 360), int8]) -> (int64, Tensor[(36), int8], Tensor[(1, 360), int8], Tensor[(4, 10, 9), float64], Tensor[(10, 9, 10), float32], int64) {
    %708 = @func_7048() /* ty=(Tensor[(6, 8, 11), float64], int64, Tensor[(6, 8, 11), float64]) */;
    %709 = cast(%var_7267, dtype="int8") /* ty=Tensor[(36), int8] */;
    %710 = cast(%var_7268, dtype="int8") /* ty=Tensor[(1, 360), int8] */;
    %711 = reshape(%709, newshape=[4, 1, 9]) /* ty=Tensor[(4, 1, 9), int8] */;
    %712 = reshape(%710, newshape=[4, 10, 9]) /* ty=Tensor[(4, 10, 9), int8] */;
    %713 = @func_3388(%711, %712) /* ty=(Tensor[(4, 10, 9), bool],) */;
    %714 = %713.0;
    %715 = cast(%714, dtype="float64") /* ty=Tensor[(4, 10, 9), float64] */;
    %716 = @func_5939() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(10, 9, 10), float32], Tensor[(900), float32]) */;
    %717 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
    %718 = %708.1;
    %719 = acosh(%715) /* ty=Tensor[(4, 10, 9), float64] */;
    %720 = %716.2;
    %721 = %717.0;
    (%718, %var_7267, %var_7268, %719, %720, %721)
  };
  %722(%var_7284, %var_7285) /* ty=(int64, Tensor[(36), int8], Tensor[(1, 360), int8], Tensor[(4, 10, 9), float64], Tensor[(10, 9, 10), float32], int64) */
}

def @func_1701() -> Tensor[(660), float64] {
  @func_1699() /* ty=Tensor[(660), float64] */
}

def @func_1638(%var_1617: uint16, %var_1618: Tensor[(13, 3, 6), uint16]) -> (Tensor[(13, 3, 6), uint16], Tensor[(660), float64], Tensor[(1456), uint64], Tensor[(110, 6), float64]) {
  %723 = cast(%var_1617, dtype="uint16") /* ty=uint16 */;
  %724 = cast(%var_1618, dtype="uint16") /* ty=Tensor[(13, 3, 6), uint16] */;
  %725 = cast(meta[relay.Constant][38] /* ty=Tensor[(1456), uint64] */, dtype="uint64") /* ty=Tensor[(1456), uint64] */;
  %726 = cast(meta[relay.Constant][38] /* ty=Tensor[(1456), uint64] */, dtype="uint64") /* ty=Tensor[(1456), uint64] */;
  %727 = cast(meta[relay.Constant][39] /* ty=Tensor[(110, 6), float64] */, dtype="float64") /* ty=Tensor[(110, 6), float64] */;
  %728 = reshape(%725, newshape=[8, 13, 14]) /* ty=Tensor[(8, 13, 14), uint64] */;
  %729 = reshape(%726, newshape=[8, 13, 14]) /* ty=Tensor[(8, 13, 14), uint64] */;
  %730 = reshape(%727, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %731 = @func_929(%728, %729, %730) /* ty=(Tensor[(8, 13, 14), uint64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(12, 5, 11), float64], int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(10, 66), uint16]) */;
  %732 = left_shift(%723, %724) /* ty=Tensor[(13, 3, 6), uint16] */;
  %733 = %731.2;
  (%732, %733, meta[relay.Constant][38] /* ty=Tensor[(1456), uint64] */, meta[relay.Constant][39] /* ty=Tensor[(110, 6), float64] */)
}

def @func_1739(%var_1736: Tensor[(48), float64]) -> (Tensor[(6, 8, 11), float64], float64, Tensor[(924), float32], Tensor[(48), float64]) {
  %734 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %735 = cast(meta[relay.Constant][40] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %736 = cast(%var_1736, dtype="float64") /* ty=Tensor[(48), float64] */;
  %737 = reshape(%735, newshape=[924]) /* ty=Tensor[(924), float32] */;
  %738 = reshape(%736, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %739 = @func_1592(%737, %738) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(924), float32], float64, Tensor[(48), float64], Tensor[(8, 13, 14), uint64]) */;
  %740 = %734.0;
  %741 = %739.5;
  (%740, %741, meta[relay.Constant][40] /* ty=Tensor[(924), float32] */, %var_1736)
}

def @func_2294(%var_2293: Tensor[(48), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(660), float64], float64, Tensor[(924), float32], Tensor[(48), float64], Tensor[(6, 8, 11), float64]) {
  %755 = fn (%var_2244: Tensor[(48), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(660), float64], float64, Tensor[(924), float32], Tensor[(48), float64], Tensor[(6, 8, 11), float64]) {
    %742 = @func_1467() /* ty=(Tensor[(660), float64],) */;
    %743 = cast(meta[relay.Constant][41] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
    %744 = cast(%var_2244, dtype="float64") /* ty=Tensor[(48), float64] */;
    %745 = reshape(%743, newshape=[924]) /* ty=Tensor[(924), float32] */;
    %746 = reshape(%744, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %747 = @func_1592(%745, %746) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(924), float32], float64, Tensor[(48), float64], Tensor[(8, 13, 14), uint64]) */;
    %748 = %742.0;
    %749 = cast(%748, dtype="float64") /* ty=Tensor[(660), float64] */;
    %750 = reshape(%749, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %751 = @func_1334(%750) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
    %752 = @func_2179() /* ty=Tensor[(6, 8, 11), float64] */;
    %753 = %747.5;
    %754 = %751.0;
    (%752, %748, %753, meta[relay.Constant][41] /* ty=Tensor[(924), float32] */, %var_2244, %754)
  };
  %755(%var_2293) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(660), float64], float64, Tensor[(924), float32], Tensor[(48), float64], Tensor[(6, 8, 11), float64]) */
}

def @func_4805() -> (Tensor[(48), float64],) {
  %756 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
  %757 = %756.3;
  (%757,)
}

def @func_4868(%var_4866: Tensor[(3, 10, 16), float32]) -> Tensor[(3, 10, 16), bool] {
  @func_4865(%var_4866) /* ty=Tensor[(3, 10, 16), bool] */
}

def @func_5195() -> Tensor[(10, 4, 6), float64] {
  @func_5193() /* ty=Tensor[(10, 4, 6), float64] */
}

def @func_6295() -> (Tensor[(6, 8, 11), float64], Tensor[(15, 16, 4), float64], Tensor[(10, 12, 10), int64], Tensor[(60, 20), bool], Tensor[(10, 4, 6), float64]) {
  @func_6293() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(15, 16, 4), float64], Tensor[(10, 12, 10), int64], Tensor[(60, 20), bool], Tensor[(10, 4, 6), float64]) */
}

def @func_1366() -> (int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) {
  %763 = fn () -> (int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) {
    %758 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
    %759 = cast(meta[relay.Constant][42] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
    %760 = reshape(%759, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
    %761 = %758.2;
    %762 = @func_10(%760) /* ty=Tensor[(12, 5, 11), float64] */;
    (%761, %762, meta[relay.Constant][42] /* ty=Tensor[(660), float64] */)
  };
  %763() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */
}

def @func_3838() -> Tensor[(10, 4, 6), float64] {
  %764 = @func_3117() /* ty=(Tensor[(10, 4, 6), float64],) */;
  %764.0
}

def @func_966() -> (Tensor[(6, 8, 11), float64],) {
  %765 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %766 = %765.0;
  (%766,)
}

def @func_2822() -> (Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) {
  %783 = fn () -> (Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) {
    %767 = @func_2191() /* ty=(Tensor[(660), float64],) */;
    %768 = cast(meta[relay.Constant][43] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
    %769 = reshape(%768, newshape=[924]) /* ty=Tensor[(924), float32] */;
    %770 = @func_1983(%769) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float64], Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(8, 2, 3), float32], float64, Tensor[(10, 66), float64], Tensor[(10, 66), float64]) */;
    %771 = %770.3;
    %772 = cast(%771, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
    %773 = reshape(%772, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %774 = @func_1739(%773) /* ty=(Tensor[(6, 8, 11), float64], float64, Tensor[(924), float32], Tensor[(48), float64]) */;
    %775 = cast(meta[relay.Constant][43] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
    %776 = cast(%771, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
    %777 = reshape(%775, newshape=[924]) /* ty=Tensor[(924), float32] */;
    %778 = reshape(%776, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %779 = @func_1592(%777, %778) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(924), float32], float64, Tensor[(48), float64], Tensor[(8, 13, 14), uint64]) */;
    %780 = %767.0;
    %781 = %774.3;
    %782 = %779.2;
    (%780, %771, meta[relay.Constant][43] /* ty=Tensor[(924), float32] */, %781, %782)
  };
  %783() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */
}

def @func_7614() -> (Tensor[(660), float64],) {
  %786 = fn () -> (Tensor[(660), float64],) {
    %784 = @func_6238() /* ty=(Tensor[(660), float64],) */;
    %785 = %784.0;
    (%785,)
  };
  %786() /* ty=(Tensor[(660), float64],) */
}

def @func_8426(%var_8407: Tensor[(6, 13, 11), float32]) -> (Tensor[(6, 13, 11), float32], Tensor[(48), float64]) {
  %787 = cast(%var_8407, dtype="float32") /* ty=Tensor[(6, 13, 11), float32] */;
  %788 = @func_6955() /* ty=(Tensor[(48), float64],) */;
  %789 = tan(%787) /* ty=Tensor[(6, 13, 11), float32] */;
  %790 = %788.0;
  (%789, %790)
}

def @func_3452() -> (Tensor[(6, 8, 11), float64],) {
  @func_3450() /* ty=(Tensor[(6, 8, 11), float64],) */
}

def @func_3184() -> (Tensor[(660), float64],) {
  %791 = @func_1816() /* ty=(int64, Tensor[(10, 66), uint16], Tensor[(660), float64]) */;
  %792 = %791.2;
  (%792,)
}

def @func_4051() -> (int64, Tensor[(6, 8, 11), float64], Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(6, 8, 11), float64]) {
  @func_4049() /* ty=(int64, Tensor[(6, 8, 11), float64], Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */
}

def @func_5193() -> Tensor[(10, 4, 6), float64] {
  %793 = @func_3838() /* ty=Tensor[(10, 4, 6), float64] */;
  %794 = cast(%793, dtype="float64") /* ty=Tensor[(10, 4, 6), float64] */;
  asinh(%794) /* ty=Tensor[(10, 4, 6), float64] */
}

def @func_7049() -> (Tensor[(6, 8, 11), float64], int64, Tensor[(6, 8, 11), float64]) {
  %799 = fn () -> (Tensor[(6, 8, 11), float64], int64, Tensor[(6, 8, 11), float64]) {
    %795 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
    %796 = @func_4694() /* ty=Tensor[(6, 8, 11), float64] */;
    %797 = %795.0;
    %798 = @func_1880() /* ty=Tensor[(6, 8, 11), float64] */;
    (%796, %797, %798)
  };
  %799() /* ty=(Tensor[(6, 8, 11), float64], int64, Tensor[(6, 8, 11), float64]) */
}

def @func_3527(%var_3506: Tensor[(660), float64]) -> (Tensor[(660), float32],) {
  %800 = @func_2377() /* ty=(Tensor[(660), float64],) */;
  %801 = %800.0;
  %802 = cast(%var_3506, dtype="float32") /* ty=Tensor[(660), float32] */;
  %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(1), int32] */;
  %804 = cast(%801, dtype="float32") /* ty=Tensor[(660), float32] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?), float32] */;
  %806 = subtract(%804, %805) /* ty=Tensor[(660), float32] */;
  (%806,)
}

def @func_8014(%var_8012: Tensor[(4, 9, 10), float32], %var_8013: Tensor[(4, 9, 10), float32]) -> Tensor[(4, 9, 10), float32] {
  @func_8010(%var_8012, %var_8013) /* ty=Tensor[(4, 9, 10), float32] */
}

def @func_7188(%var_7187: Tensor[(660), float64]) -> (Tensor[(10, 4, 6), float64], Tensor[(924), float32], Tensor[(660), float32], Tensor[(660), float64]) {
  %815 = fn (%var_7176: Tensor[(660), float64]) -> (Tensor[(10, 4, 6), float64], Tensor[(924), float32], Tensor[(660), float32], Tensor[(660), float64]) {
    %807 = @func_4652() /* ty=(Tensor[(10, 4, 6), float64],) */;
    %808 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
    %809 = cast(%var_7176, dtype="float64") /* ty=Tensor[(660), float64] */;
    %810 = reshape(%809, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %811 = @func_3527(%810) /* ty=(Tensor[(660), float32],) */;
    %812 = %807.0;
    %813 = %808.2;
    %814 = %811.0;
    (%812, %813, %814, %var_7176)
  };
  %815(%var_7187) /* ty=(Tensor[(10, 4, 6), float64], Tensor[(924), float32], Tensor[(660), float32], Tensor[(660), float64]) */
}

def @func_612() -> (Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) {
  %830 = fn () -> (Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) {
    %816 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 8, 11), float64] */, dtype="float64") /* ty=Tensor[(6, 8, 11), float64] */;
    %817 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %818 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 66), float64] */, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
    %819 = reshape(%817, newshape=[]) /* ty=int64 */;
    %820 = reshape(%818, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %821 = @func_259(%819, %820) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
    %822 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %823 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 66), float64] */, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
    %824 = reshape(%822, newshape=[]) /* ty=int64 */;
    %825 = reshape(%823, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %826 = @func_259(%824, %825) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
    %827 = tan(%816) /* ty=Tensor[(6, 8, 11), float64] */;
    %828 = %821.2;
    %829 = %826.2;
    (%827, %828, 8 /* ty=int64 */, meta[relay.Constant][45] /* ty=Tensor[(10, 66), float64] */, %829)
  };
  %830() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */
}

def @func_2038(%var_2037: Tensor[(48, 1), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(7, 132), float32], float64, Tensor[(48, 1), float64]) {
  %841 = fn (%var_2025: Tensor[(48, 1), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(7, 132), float32], float64, Tensor[(48, 1), float64]) {
    %831 = @func_1866() /* ty=(Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) */;
    %832 = cast(meta[relay.Constant][46] /* ty=Tensor[(7, 132), float32] */, dtype="float32") /* ty=Tensor[(7, 132), float32] */;
    %833 = reshape(%832, newshape=[924]) /* ty=Tensor[(924), float32] */;
    %834 = @func_1983(%833) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float64], Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(8, 2, 3), float32], float64, Tensor[(10, 66), float64], Tensor[(10, 66), float64]) */;
    %835 = cast(%var_2025, dtype="float64") /* ty=Tensor[(48, 1), float64] */;
    %836 = reshape(%835, newshape=[1, 3, 16]) /* ty=Tensor[(1, 3, 16), float64] */;
    %837 = @func_1162(%836) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(21, 6), float64], Tensor[(?, 3, 16), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 2, 3), float32], float64) */;
    %838 = %831.1;
    %839 = %834.0;
    %840 = %837.5;
    (%838, %839, meta[relay.Constant][46] /* ty=Tensor[(7, 132), float32] */, %840, %var_2025)
  };
  %841(%var_2037) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(7, 132), float32], float64, Tensor[(48, 1), float64]) */
}

def @func_3391(%var_3389: Tensor[(4, 1, 9), int8], %var_3390: Tensor[(4, 10, 9), int8]) -> (Tensor[(4, 10, 9), bool],) {
  %845 = fn (%var_3377: Tensor[(4, 1, 9), int8], %var_3378: Tensor[(4, 10, 9), int8]) -> (Tensor[(4, 10, 9), bool],) {
    %842 = cast(%var_3377, dtype="bool") /* ty=Tensor[(4, 1, 9), bool] */;
    %843 = cast(%var_3378, dtype="bool") /* ty=Tensor[(4, 10, 9), bool] */;
    %844 = less(%842, %843) /* ty=Tensor[(4, 10, 9), bool] */;
    (%844,)
  };
  %845(%var_3389, %var_3390) /* ty=(Tensor[(4, 10, 9), bool],) */
}

def @func_2181() -> Tensor[(6, 8, 11), float64] {
  @func_2179() /* ty=Tensor[(6, 8, 11), float64] */
}

def @func_1881() -> Tensor[(6, 8, 11), float64] {
  %847 = fn () -> Tensor[(6, 8, 11), float64] {
    %846 = @func_1772() /* ty=(Tensor[(6, 8, 11), float64],) */;
    %846.0
  };
  %847() /* ty=Tensor[(6, 8, 11), float64] */
}

def @func_6074(%var_6067: Tensor[(6, 2, 11), float64]) -> (Tensor[(6, 2, 11), float64],) {
  %848 = cast(%var_6067, dtype="float64") /* ty=Tensor[(6, 2, 11), float64] */;
  %849 = tan(%848) /* ty=Tensor[(6, 2, 11), float64] */;
  (%849,)
}

def @func_4220() -> Tensor[(3, 9, 6), float32] {
  %850 = @func_2464() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64]) */;
  %850.0
}

def @func_5419() -> Tensor[(660), float64] {
  @func_5417() /* ty=Tensor[(660), float64] */
}

def @func_6197(%var_6195: Tensor[(1200), bool]) -> (Tensor[(3, 9, 6), float32], Tensor[(10, 12, 10), int64], Tensor[(210, 3), float64], Tensor[(1200), bool]) {
  @func_6194(%var_6195) /* ty=(Tensor[(3, 9, 6), float32], Tensor[(10, 12, 10), int64], Tensor[(210, 3), float64], Tensor[(1200), bool]) */
}

def @func_1031(%var_1030: Tensor[(48), float64]) -> (int64, Tensor[(3, 14, 3), float64], Tensor[(126), float64], Tensor[(8, 2, 3), float64], Tensor[(48), float64]) {
  %863 = fn (%var_1013: Tensor[(48), float64]) -> (int64, Tensor[(3, 14, 3), float64], Tensor[(126), float64], Tensor[(8, 2, 3), float64], Tensor[(48), float64]) {
    %851 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
    %852 = cast(meta[relay.Constant][47] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %853 = reshape(%852, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), float64] */;
    %854 = @func_673(%853) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(3, 14, 3), float64]) */;
    %855 = %851.2;
    %856 = cast(%855, dtype="float64") /* ty=float64 */;
    %857 = cast(%var_1013, dtype="float64") /* ty=Tensor[(48), float64] */;
    %858 = reshape(%856, newshape=[]) /* ty=float64 */;
    %859 = reshape(%857, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
    %860 = @func_556(%858, %859) /* ty=(Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) */;
    %861 = %854.1;
    %862 = %860.0;
    (%855, %861, meta[relay.Constant][47] /* ty=Tensor[(126), float64] */, %862, %var_1013)
  };
  %863(%var_1030) /* ty=(int64, Tensor[(3, 14, 3), float64], Tensor[(126), float64], Tensor[(8, 2, 3), float64], Tensor[(48), float64]) */
}

def @func_6956() -> (Tensor[(48), float64],) {
  %866 = fn () -> (Tensor[(48), float64],) {
    %864 = @func_4805() /* ty=(Tensor[(48), float64],) */;
    %865 = %864.0;
    (%865,)
  };
  %866() /* ty=(Tensor[(48), float64],) */
}

def @func_2198() -> Tensor[(6, 8, 11), float64] {
  %868 = fn () -> Tensor[(6, 8, 11), float64] {
    %867 = @func_1866() /* ty=(Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) */;
    %867.1
  };
  %868() /* ty=Tensor[(6, 8, 11), float64] */
}

def @func_3772(%var_3770: Tensor[(10, 66), uint16]) -> (Tensor[(6, 8, 11), float64], Tensor[(10, 66), int32], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32]) {
  @func_3769(%var_3770) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(10, 66), int32], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32]) */
}

def @func_8404() -> (Tensor[(6, 8, 11), float64], Tensor[(660), float32], float64, Tensor[(1, 48), float32], Tensor[(4, 9, 10), float32], Tensor[(2, 180), float32], Tensor[(234, 1), uint16], Tensor[(40), float32]) {
  %896 = fn () -> (Tensor[(6, 8, 11), float64], Tensor[(660), float32], float64, Tensor[(1, 48), float32], Tensor[(4, 9, 10), float32], Tensor[(2, 180), float32], Tensor[(234, 1), uint16], Tensor[(40), float32]) {
    %869 = @func_1772() /* ty=(Tensor[(6, 8, 11), float64],) */;
    %870 = @func_5417() /* ty=Tensor[(660), float64] */;
    %871 = @func_1866() /* ty=(Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) */;
    %872 = %871.0;
    %873 = cast(%872, dtype="float32") /* ty=Tensor[(10, 66), float32] */;
    %874 = shape_of(%870, dtype="int32") /* ty=Tensor[(1), int32] */;
    %875 = cast(%870, dtype="float32") /* ty=Tensor[(660), float32] */;
    %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?), float32] */;
    %877 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 48), float64] */, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
    %878 = reshape(%877, newshape=[12, 4]) /* ty=Tensor[(12, 4), float64] */;
    %879 = @func_5082(%878) /* ty=(Tensor[(6, 8, 11), float64], float64, Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64]) */;
    %880 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 48), float64] */, dtype="float32") /* ty=Tensor[(1, 48), float32] */;
    %881 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 180), float32] */, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
    %882 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 180), float32] */, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
    %883 = reshape(%881, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
    %884 = reshape(%882, newshape=[4, 9, 10]) /* ty=Tensor[(4, 9, 10), float32] */;
    %885 = cast(meta[relay.Constant][50] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
    %886 = %879.1;
    %887 = cast(%886, dtype="uint16") /* ty=uint16 */;
    %888 = reshape(%885, newshape=[10, 4]) /* ty=Tensor[(10, 4), float32] */;
    %889 = reshape(%887, newshape=[]) /* ty=uint16 */;
    %890 = @func_6437(%888, %889) /* ty=(Tensor[(10, 4), float32], Tensor[(1456), uint64], uint16, Tensor[(234, 1), uint16]) */;
    %891 = %869.0;
    %892 = multiply(%875, %876) /* ty=Tensor[(660), float32] */;
    %893 = log10(%880) /* ty=Tensor[(1, 48), float32] */;
    %894 = @func_8010(%883, %884) /* ty=Tensor[(4, 9, 10), float32] */;
    %895 = %890.3;
    (%891, %892, %886, %893, %894, meta[relay.Constant][49] /* ty=Tensor[(2, 180), float32] */, %895, meta[relay.Constant][50] /* ty=Tensor[(40), float32] */)
  };
  %896() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(660), float32], float64, Tensor[(1, 48), float32], Tensor[(4, 9, 10), float32], Tensor[(2, 180), float32], Tensor[(234, 1), uint16], Tensor[(40), float32]) */
}

def @func_6542() -> (Tensor[(660), uint8], Tensor[(3, 9, 6), float32], Tensor[(10, 66), float32]) {
  %897 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %898 = %897.2;
  %899 = cast(meta[relay.Constant][51] /* ty=Tensor[(660), float64] */, dtype="uint8") /* ty=Tensor[(660), uint8] */;
  %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(1), int32] */;
  %901 = cast(%898, dtype="uint8") /* ty=Tensor[(660), uint8] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %903 = maximum(%901, %902) /* ty=Tensor[(660), uint8] */;
  %904 = cast(%903, dtype="uint16") /* ty=Tensor[(660), uint16] */;
  %905 = reshape(%904, newshape=[10, 66]) /* ty=Tensor[(10, 66), uint16] */;
  %906 = @func_3769(%905) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(10, 66), int32], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32]) */;
  %907 = %906.1;
  %908 = cast(%907, dtype="float32") /* ty=Tensor[(10, 66), float32] */;
  %909 = sigmoid(%908) /* ty=Tensor[(10, 66), float32] */;
  %910 = cast(%909, dtype="float32") /* ty=Tensor[(10, 66), float32] */;
  %911 = @func_4220() /* ty=Tensor[(3, 9, 6), float32] */;
  %912 = sqrt(%910) /* ty=Tensor[(10, 66), float32] */;
  (%903, %911, %912)
}

def @func_4049() -> (int64, Tensor[(6, 8, 11), float64], Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(6, 8, 11), float64]) {
  %913 = @func_1816() /* ty=(int64, Tensor[(10, 66), uint16], Tensor[(660), float64]) */;
  %914 = cast(meta[relay.Constant][52] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %915 = reshape(%914, newshape=[8, 4, 9]) /* ty=Tensor[(8, 4, 9), float64] */;
  %916 = @func_2532(%915) /* ty=(Tensor[(8, 4, 9), float64], Tensor[(6, 8, 11), float64]) */;
  %917 = cast(meta[relay.Constant][53] /* ty=Tensor[(924), float32] */, dtype="float32") /* ty=Tensor[(924), float32] */;
  %918 = reshape(%917, newshape=[11, 6, 14]) /* ty=Tensor[(11, 6, 14), float32] */;
  %919 = @func_1427(%918) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(11, 6, 14), float64]) */;
  %920 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %921 = %913.0;
  %922 = %916.1;
  %923 = %919.1;
  %924 = %920.0;
  (%921, %922, meta[relay.Constant][52] /* ty=Tensor[(288), float64] */, %923, meta[relay.Constant][53] /* ty=Tensor[(924), float32] */, %924)
}

def @func_5544(%var_5529: Tensor[(12, 2, 8), float64]) -> Tensor[(12, 2, 8), float64] {
  %925 = cast(%var_5529, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  sin(%925) /* ty=Tensor[(12, 2, 8), float64] */
}

def @func_3069() -> (Tensor[(3, 9, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(48), float64]) {
  @func_3067() /* ty=(Tensor[(3, 9, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(48), float64]) */
}

def @func_2179() -> Tensor[(6, 8, 11), float64] {
  @func_1880() /* ty=Tensor[(6, 8, 11), float64] */
}

def @func_2710(%var_2673: Tensor[(9, 8, 3), int32]) -> (Tensor[(9, 8, 3), int32], Tensor[(10, 66), bool]) {
  %926 = cast(meta[relay.Constant][54] /* ty=Tensor[(9, 8, 3), int32] */, dtype="int32") /* ty=Tensor[(9, 8, 3), int32] */;
  %927 = shape_of(%var_2673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %928 = cast(%var_2673, dtype="int32") /* ty=Tensor[(9, 8, 3), int32] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %930 = @func_1816() /* ty=(int64, Tensor[(10, 66), uint16], Tensor[(660), float64]) */;
  %931 = %930.1;
  %932 = cast(meta[relay.Constant][55] /* ty=Tensor[(10, 66), uint16] */, dtype="bool") /* ty=Tensor[(10, 66), bool] */;
  %933 = shape_of(%931, dtype="int32") /* ty=Tensor[(2), int32] */;
  %934 = cast(%931, dtype="bool") /* ty=Tensor[(10, 66), bool] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %936 = maximum(%928, %929) /* ty=Tensor[(9, 8, 3), int32] */;
  %937 = equal(%934, %935) /* ty=Tensor[(10, 66), bool] */;
  (%936, %937)
}

def @func_1772() -> (Tensor[(6, 8, 11), float64],) {
  %938 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %939 = %938.0;
  (%939,)
}

def @func_632(%var_627: Tensor[(10, 66), float64]) -> (Tensor[(10, 66), uint16],) {
  %940 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %941 = %940.3;
  %942 = cast(%var_627, dtype="uint16") /* ty=Tensor[(10, 66), uint16] */;
  %943 = shape_of(%941, dtype="int32") /* ty=Tensor[(2), int32] */;
  %944 = cast(%941, dtype="uint16") /* ty=Tensor[(10, 66), uint16] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %946 = subtract(%944, %945) /* ty=Tensor[(10, 66), uint16] */;
  (%946,)
}

def @func_2216() -> (Tensor[(6, 8, 11), float64],) {
  %949 = fn () -> (Tensor[(6, 8, 11), float64],) {
    %947 = @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */;
    %948 = %947.0;
    (%948,)
  };
  %949() /* ty=(Tensor[(6, 8, 11), float64],) */
}

def @func_8043() -> (Tensor[(48), float64],) {
  @func_8041() /* ty=(Tensor[(48), float64],) */
}

def @func_3769(%var_3694: Tensor[(10, 66), uint16]) -> (Tensor[(6, 8, 11), float64], Tensor[(10, 66), int32], Tensor[(3, 9, 6), float32], Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32]) {
  %950 = @func_2215() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %951 = @func_1866() /* ty=(Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) */;
  %952 = %951.0;
  %953 = cast(%var_3694, dtype="int64") /* ty=Tensor[(10, 66), int64] */;
  %954 = shape_of(%952, dtype="int32") /* ty=Tensor[(2), int32] */;
  %955 = cast(%952, dtype="int64") /* ty=Tensor[(10, 66), int64] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %957 = left_shift(%955, %956) /* ty=Tensor[(10, 66), int64] */;
  %958 = cast(%957, dtype="int32") /* ty=Tensor[(10, 66), int32] */;
  %959 = shape_of(%952, dtype="int32") /* ty=Tensor[(2), int32] */;
  %960 = cast(%952, dtype="int32") /* ty=Tensor[(10, 66), int32] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %962 = %950.0;
  %963 = bitwise_and(%960, %961) /* ty=Tensor[(10, 66), int32] */;
  %964 = @func_2646() /* ty=Tensor[(3, 9, 6), float32] */;
  %965 = @func_3546() /* ty=Tensor[(6, 8, 11), float64] */;
  %966 = @func_3643() /* ty=Tensor[(3, 9, 6), float32] */;
  (%962, %963, %964, %965, %966)
}

def @func_635(%var_633: Tensor[(10, 66), float64]) -> (Tensor[(10, 66), uint16],) {
  @func_632(%var_633) /* ty=(Tensor[(10, 66), uint16],) */
}

def @func_1867() -> (Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) {
  %973 = fn () -> (Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) {
    %967 = @func_1816() /* ty=(int64, Tensor[(10, 66), uint16], Tensor[(660), float64]) */;
    %968 = %967.1;
    %969 = cast(%968, dtype="float64") /* ty=Tensor[(10, 66), float64] */;
    %970 = reshape(%969, newshape=[660]) /* ty=Tensor[(660), float64] */;
    %971 = @func_1334(%970) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
    %972 = %971.0;
    (%968, %972)
  };
  %973() /* ty=(Tensor[(10, 66), uint16], Tensor[(6, 8, 11), float64]) */
}

def @func_4374(%var_4372: Tensor[(6, 8, 11), float64], %var_4373: Tensor[(660), float64]) -> (Tensor[(10, 4, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(660), float64]) {
  @func_4370(%var_4372, %var_4373) /* ty=(Tensor[(10, 4, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(660), float64]) */
}

def @func_3186() -> (Tensor[(660), float64],) {
  @func_3184() /* ty=(Tensor[(660), float64],) */
}

def @func_2366(%var_2337: Tensor[(4, 364), uint64], %var_2338: Tensor[(660), float64], %var_2349: Tensor[(48), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(4, 364), int64], Tensor[(126), float64], Tensor[(48), float64], Tensor[(3, 14, 3), float64]) {
  %974 = @func_1772() /* ty=(Tensor[(6, 8, 11), float64],) */;
  %975 = cast(%var_2337, dtype="uint64") /* ty=Tensor[(4, 364), uint64] */;
  %976 = cast(%var_2337, dtype="uint64") /* ty=Tensor[(4, 364), uint64] */;
  %977 = cast(%var_2338, dtype="float64") /* ty=Tensor[(660), float64] */;
  %978 = reshape(%975, newshape=[8, 13, 14]) /* ty=Tensor[(8, 13, 14), uint64] */;
  %979 = reshape(%976, newshape=[8, 13, 14]) /* ty=Tensor[(8, 13, 14), uint64] */;
  %980 = reshape(%977, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %981 = @func_929(%978, %979, %980) /* ty=(Tensor[(8, 13, 14), uint64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(12, 5, 11), float64], int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(10, 66), uint16]) */;
  %982 = %981.0;
  %983 = cast(%982, dtype="int64") /* ty=Tensor[(8, 13, 14), int64] */;
  %984 = shape_of(%var_2337, dtype="int32") /* ty=Tensor[(2), int32] */;
  %985 = cast(%var_2337, dtype="int64") /* ty=Tensor[(4, 364), int64] */;
  %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %987 = cast(%var_2349, dtype="float64") /* ty=Tensor[(48), float64] */;
  %988 = reshape(%987, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %989 = @func_1029(%988) /* ty=(int64, Tensor[(3, 14, 3), float64], Tensor[(126), float64], Tensor[(8, 2, 3), float64], Tensor[(48), float64]) */;
  %990 = %989.2;
  %991 = cast(%990, dtype="float64") /* ty=Tensor[(126), float64] */;
  %992 = reshape(%991, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), float64] */;
  %993 = @func_673(%992) /* ty=(Tensor[(3, 14, 3), float64], Tensor[(3, 14, 3), float64]) */;
  %994 = %974.0;
  %995 = maximum(%985, %986) /* ty=Tensor[(4, 364), int64] */;
  %996 = %993.0;
  (%994, %var_2338, %995, %990, %var_2349, %996)
}

def @func_840(%var_748: Tensor[(13, 11, 14), uint64], %var_776: float64, %var_777: Tensor[(48), float64]) -> (Tensor[(8, 2, 3), float64], float64, Tensor[(48), float64], Tensor[(3, 9, 6), float32], Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(13, 11, 14), float32]) {
  %997 = cast(%var_776, dtype="float64") /* ty=float64 */;
  %998 = cast(%var_777, dtype="float64") /* ty=Tensor[(48), float64] */;
  %999 = reshape(%997, newshape=[]) /* ty=float64 */;
  %1000 = reshape(%998, newshape=[8, 2, 3]) /* ty=Tensor[(8, 2, 3), float64] */;
  %1001 = @func_556(%999, %1000) /* ty=(Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) */;
  %1002 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %1003 = cast(%var_776, dtype="int64") /* ty=int64 */;
  %1004 = cast(meta[relay.Constant][56] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1005 = reshape(%1003, newshape=[]) /* ty=int64 */;
  %1006 = reshape(%1004, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %1007 = @func_259(%1005, %1006) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
  %1008 = cast(meta[relay.Constant][56] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1009 = reshape(%1008, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
  %1010 = cast(%var_776, dtype="int64") /* ty=int64 */;
  %1011 = @func_10(%1009) /* ty=Tensor[(12, 5, 11), float64] */;
  %1012 = cast(%1011, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %1013 = reshape(%1010, newshape=[]) /* ty=int64 */;
  %1014 = reshape(%1012, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %1015 = @func_259(%1013, %1014) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(660), float64], Tensor[(3, 9, 6), float32]) */;
  %1016 = cast(meta[relay.Constant][57] /* ty=Tensor[(13, 11, 14), uint64] */, dtype="bool") /* ty=Tensor[(13, 11, 14), bool] */;
  %1017 = shape_of(%var_748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1018 = cast(%var_748, dtype="bool") /* ty=Tensor[(13, 11, 14), bool] */;
  %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1020 = greater_equal(%1018, %1019) /* ty=Tensor[(13, 11, 14), bool] */;
  %1021 = cast(%1020, dtype="float32") /* ty=Tensor[(13, 11, 14), float32] */;
  %1022 = log(%1021) /* ty=Tensor[(13, 11, 14), float32] */;
  %1023 = cast(meta[relay.Constant][58] /* ty=Tensor[(13, 11, 14), float32] */, dtype="uint16") /* ty=Tensor[(13, 11, 14), uint16] */;
  %1024 = shape_of(%1022, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1025 = cast(%1022, dtype="uint16") /* ty=Tensor[(13, 11, 14), uint16] */;
  %1026 = dyn.reshape(%1023, %1024, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1027 = subtract(%1025, %1026) /* ty=Tensor[(13, 11, 14), uint16] */;
  %1028 = cast(%1027, dtype="float64") /* ty=Tensor[(13, 11, 14), float64] */;
  %1029 = cosh(%1028) /* ty=Tensor[(13, 11, 14), float64] */;
  %1030 = cast(%1029, dtype="float32") /* ty=Tensor[(13, 11, 14), float32] */;
  %1031 = %1001.0;
  %1032 = %1002.4;
  %1033 = %1007.2;
  %1034 = %1015.1;
  %1035 = sinh(%1030) /* ty=Tensor[(13, 11, 14), float32] */;
  (%1031, %var_776, %var_777, %1032, %1033, meta[relay.Constant][56] /* ty=Tensor[(660), float64] */, %1011, %1034, %1035)
}

def @func_5417() -> Tensor[(660), float64] {
  %1036 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
  %1036.0
}

def @func_2371(%var_2368: Tensor[(4, 364), uint64], %var_2369: Tensor[(660), float64], %var_2370: Tensor[(48), float64]) -> (Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(4, 364), int64], Tensor[(126), float64], Tensor[(48), float64], Tensor[(3, 14, 3), float64]) {
  @func_2366(%var_2368, %var_2369, %var_2370) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(660), float64], Tensor[(4, 364), int64], Tensor[(126), float64], Tensor[(48), float64], Tensor[(3, 14, 3), float64]) */
}

def @func_560(%var_558: float64, %var_559: Tensor[(8, 2, 3), float64]) -> (Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) {
  @func_556(%var_558, %var_559) /* ty=(Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) */
}

def @func_4654() -> (Tensor[(10, 4, 6), float64],) {
  @func_4652() /* ty=(Tensor[(10, 4, 6), float64],) */
}

def @func_6437(%var_6420: Tensor[(10, 4), float32], %var_6428: uint16) -> (Tensor[(10, 4), float32], Tensor[(1456), uint64], uint16, Tensor[(234, 1), uint16]) {
  %1037 = cast(%var_6420, dtype="float32") /* ty=Tensor[(10, 4), float32] */;
  %1038 = cast(%var_6428, dtype="uint16") /* ty=uint16 */;
  %1039 = cast(meta[relay.Constant][59] /* ty=Tensor[(234, 1), uint16] */, dtype="uint16") /* ty=Tensor[(234, 1), uint16] */;
  %1040 = reshape(%1038, newshape=[]) /* ty=uint16 */;
  %1041 = reshape(%1039, newshape=[13, 3, 6]) /* ty=Tensor[(13, 3, 6), uint16] */;
  %1042 = @func_1638(%1040, %1041) /* ty=(Tensor[(13, 3, 6), uint16], Tensor[(660), float64], Tensor[(1456), uint64], Tensor[(110, 6), float64]) */;
  %1043 = asin(%1037) /* ty=Tensor[(10, 4), float32] */;
  %1044 = %1042.2;
  (%1043, %1044, %var_6428, meta[relay.Constant][59] /* ty=Tensor[(234, 1), uint16] */)
}

def @func_556(%var_540: float64, %var_541: Tensor[(8, 2, 3), float64]) -> (Tensor[(8, 2, 3), float64], Tensor[(8, 2, 3), float32]) {
  %1045 = cast(%var_540, dtype="float64") /* ty=float64 */;
  %1046 = cast(%var_541, dtype="float64") /* ty=Tensor[(8, 2, 3), float64] */;
  %1047 = cast(%var_541, dtype="float32") /* ty=Tensor[(8, 2, 3), float32] */;
  %1048 = floor_mod(%1045, %1046) /* ty=Tensor[(8, 2, 3), float64] */;
  %1049 = log10(%1047) /* ty=Tensor[(8, 2, 3), float32] */;
  (%1048, %1049)
}

def @func_5214() -> (Tensor[(660), float64],) {
  %1050 = @func_2377() /* ty=(Tensor[(660), float64],) */;
  %1051 = %1050.0;
  (%1051,)
}

def @func_6240() -> (Tensor[(660), float64],) {
  @func_6238() /* ty=(Tensor[(660), float64],) */
}

def @func_1816() -> (int64, Tensor[(10, 66), uint16], Tensor[(660), float64]) {
  %1052 = @func_611() /* ty=(Tensor[(6, 8, 11), float64], Tensor[(3, 9, 6), float32], int64, Tensor[(10, 66), float64], Tensor[(3, 9, 6), float32]) */;
  %1053 = cast(meta[relay.Constant][60] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1054 = reshape(%1053, newshape=[10, 66]) /* ty=Tensor[(10, 66), float64] */;
  %1055 = @func_632(%1054) /* ty=(Tensor[(10, 66), uint16],) */;
  %1056 = %1052.2;
  %1057 = %1055.0;
  (%1056, %1057, meta[relay.Constant][60] /* ty=Tensor[(660), float64] */)
}

def @func_5082(%var_5055: Tensor[(12, 4), float64]) -> (Tensor[(6, 8, 11), float64], float64, Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64]) {
  %1058 = @func_4049() /* ty=(int64, Tensor[(6, 8, 11), float64], Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
  %1059 = cast(%var_5055, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %1060 = reshape(%1059, newshape=[48, 1]) /* ty=Tensor[(48, 1), float64] */;
  %1061 = @func_2036(%1060) /* ty=(Tensor[(6, 8, 11), float64], Tensor[(6, 8, 11), float64], Tensor[(7, 132), float32], float64, Tensor[(48, 1), float64]) */;
  %1062 = @func_4049() /* ty=(int64, Tensor[(6, 8, 11), float64], Tensor[(288), float64], Tensor[(6, 8, 11), float64], Tensor[(924), float32], Tensor[(6, 8, 11), float64]) */;
  %1063 = %1058.3;
  %1064 = %1061.3;
  %1065 = %1062.3;
  (%1063, %1064, %var_5055, %1065)
}

def @func_4626(%var_4618: Tensor[(528), float64], %var_4619: Tensor[(660), float64]) -> (int64, Tensor[(3, 9, 6), float32], Tensor[(660), float64], Tensor[(528), float64], Tensor[(660), float64], Tensor[(48), float64]) {
  %1066 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %1067 = @func_4193() /* ty=(Tensor[(6, 8, 11), float32], Tensor[(3, 9, 6), float32]) */;
  %1068 = cast(%var_4618, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1069 = cast(%var_4619, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1070 = reshape(%1068, newshape=[6, 8, 11]) /* ty=Tensor[(6, 8, 11), float64] */;
  %1071 = reshape(%1069, newshape=[660]) /* ty=Tensor[(660), float64] */;
  %1072 = @func_4370(%1070, %1071) /* ty=(Tensor[(10, 4, 6), float64], Tensor[(6, 8, 11), float64], Tensor[(8, 13, 14), uint64], Tensor[(660), float64]) */;
  %1073 = %1066.0;
  %1074 = %1067.1;
  %1075 = %1072.3;
  %1076 = @func_2989() /* ty=Tensor[(48), float64] */;
  (%1073, %1074, %1075, %var_4618, %var_4619, %1076)
}

def @func_5085(%var_5083: Tensor[(12, 4), float64]) -> (Tensor[(6, 8, 11), float64], float64, Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64]) {
  @func_5082(%var_5083) /* ty=(Tensor[(6, 8, 11), float64], float64, Tensor[(12, 4), float64], Tensor[(6, 8, 11), float64]) */
}

def @func_5647(%var_5645: Tensor[(3, 10, 15), float64], %var_5646: Tensor[(3, 10, 15), float64]) -> Tensor[(3, 10, 15), float64] {
  %1081 = fn (%var_5635: Tensor[(3, 10, 15), float64], %var_5636: Tensor[(3, 10, 15), float64]) -> Tensor[(3, 10, 15), float64] {
    %1077 = cast(%var_5636, dtype="float64") /* ty=Tensor[(3, 10, 15), float64] */;
    %1078 = shape_of(%var_5635, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1079 = cast(%var_5635, dtype="float64") /* ty=Tensor[(3, 10, 15), float64] */;
    %1080 = dyn.reshape(%1077, %1078, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%1079, %1080) /* ty=Tensor[(3, 10, 15), float64] */
  };
  %1081(%var_5645, %var_5646) /* ty=Tensor[(3, 10, 15), float64] */
}

def @func_3015() -> (Tensor[(660), float64],) {
  %1082 = @func_1365() /* ty=(int64, Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %1083 = %1082.2;
  (%1083,)
}

def @func_968() -> (Tensor[(6, 8, 11), float64],) {
  @func_966() /* ty=(Tensor[(6, 8, 11), float64],) */
}

def @func_7521() -> (Tensor[(660), float64], Tensor[(660), float64]) {
  %1088 = fn () -> (Tensor[(660), float64], Tensor[(660), float64]) {
    %1084 = @func_1467() /* ty=(Tensor[(660), float64],) */;
    %1085 = @func_6110() /* ty=(Tensor[(3, 9, 6), float32], Tensor[(660), float64]) */;
    %1086 = %1084.0;
    %1087 = %1085.1;
    (%1086, %1087)
  };
  %1088() /* ty=(Tensor[(660), float64], Tensor[(660), float64]) */
}

def @func_2990() -> Tensor[(48), float64] {
  %1090 = fn () -> Tensor[(48), float64] {
    %1089 = @func_2821() /* ty=(Tensor[(660), float64], Tensor[(12, 4), float64], Tensor[(924), float32], Tensor[(48), float64], Tensor[(3, 9, 6), float32]) */;
    %1089.3
  };
  %1090() /* ty=Tensor[(48), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen156/build/output.py:3016: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen156/build/output.py", line 3021, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(150) tvmgen_default_fused_cosh_log_kernel0(double* __restrict__ T_log, double* __restrict__ placeholder) {
  T_log[(((int)threadIdx.x))] = log(cosh(placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


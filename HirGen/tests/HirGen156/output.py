import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_2 = relay.var("var_2", dtype = "float64", shape = (12, 5, 11))#candidate|2|(12, 5, 11)|var|float64
uop_3 = relay.sin(var_2.astype('float64')) # shape=(12, 5, 11)
output = uop_3
output2 = uop_3
func_10 = relay.Function([var_2,], output)
mod['func_10'] = func_10
mod = relay.transform.InferType()(mod)
var_11 = relay.var("var_11", dtype = "float64", shape = (12, 5, 11))#candidate|11|(12, 5, 11)|var|float64
output = func_10(var_11)
func_12 = relay.Function([var_11], output)
mutated_mod['func_12'] = func_12
mutated_mod = relay.transform.InferType()(mutated_mod)
var_242 = relay.var("var_242", dtype = "int64", shape = ())#candidate|242|()|var|int64
const_243 = relay.const([[[6,-8,-4,-10,8,-10],[4,6,-3,-9,-2,-4],[10,-6,8,5,-7,-4],[1,3,-9,4,3,1],[5,-2,4,4,3,-1],[3,4,2,-8,-3,-2],[-6,-8,-8,-4,9,-10],[5,7,3,7,-5,-3],[-3,9,3,-10,8,7]],[[-7,9,-10,-6,-10,-3],[2,-8,-2,-5,-3,1],[-6,7,1,9,7,-3],[-4,4,-4,6,6,3],[4,-3,2,5,8,-9],[-5,4,-6,-1,-8,6],[-9,-5,8,-4,-6,1],[2,-4,-5,-9,3,4],[-2,10,9,9,-8,-4]],[[-2,9,5,4,6,-10],[-2,3,2,-5,-2,4],[10,-1,8,5,4,-6],[3,-10,9,-10,-9,-6],[-10,-7,5,4,-5,-4],[-10,2,2,-5,-9,6],[5,1,-10,-6,8,-5],[-5,10,3,4,2,9],[4,-1,-1,3,4,9]]], dtype = "int64")#candidate|243|(3, 9, 6)|const|int64
bop_244 = relay.left_shift(var_242.astype('int64'), const_243.astype('int64')) # shape=(3, 9, 6)
func_10_call = mod.get_global_var('func_10')
func_12_call = mutated_mod.get_global_var('func_12')
var_251 = relay.var("var_251", dtype = "float64", shape = (660,))#candidate|251|(660,)|var|float64
call_250 = func_10_call(relay.reshape(var_251.astype('float64'), [12, 5, 11]))
call_252 = func_10_call(relay.reshape(var_251.astype('float64'), [12, 5, 11]))
uop_256 = relay.asin(bop_244.astype('float32')) # shape=(3, 9, 6)
output = relay.Tuple([call_250,var_251,uop_256,])
output2 = relay.Tuple([call_252,var_251,uop_256,])
func_259 = relay.Function([var_242,var_251,], output)
mod['func_259'] = func_259
mod = relay.transform.InferType()(mod)
var_260 = relay.var("var_260", dtype = "int64", shape = ())#candidate|260|()|var|int64
var_261 = relay.var("var_261", dtype = "float64", shape = (660,))#candidate|261|(660,)|var|float64
output = func_259(var_260,var_261,)
func_262 = relay.Function([var_260,var_261,], output)
mutated_mod['func_262'] = func_262
mutated_mod = relay.transform.InferType()(mutated_mod)
var_540 = relay.var("var_540", dtype = "float64", shape = ())#candidate|540|()|var|float64
var_541 = relay.var("var_541", dtype = "float64", shape = (8, 2, 3))#candidate|541|(8, 2, 3)|var|float64
bop_542 = relay.floor_mod(var_540.astype('float64'), var_541.astype('float64')) # shape=(8, 2, 3)
uop_554 = relay.log10(var_541.astype('float32')) # shape=(8, 2, 3)
output = relay.Tuple([bop_542,uop_554,])
output2 = relay.Tuple([bop_542,uop_554,])
func_556 = relay.Function([var_540,var_541,], output)
mod['func_556'] = func_556
mod = relay.transform.InferType()(mod)
mutated_mod['func_556'] = func_556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_556_call = mutated_mod.get_global_var('func_556')
var_558 = relay.var("var_558", dtype = "float64", shape = ())#candidate|558|()|var|float64
var_559 = relay.var("var_559", dtype = "float64", shape = (8, 2, 3))#candidate|559|(8, 2, 3)|var|float64
call_557 = func_556_call(var_558,var_559,)
output = call_557
func_560 = relay.Function([var_558,var_559,], output)
mutated_mod['func_560'] = func_560
mutated_mod = relay.transform.InferType()(mutated_mod)
const_573 = relay.const([[[-3.279075,2.112603,-9.377418,9.868536,6.230465,-8.970762,-7.154986,-4.544391,-6.098425,8.603377,-9.648644],[5.265249,1.990973,1.973346,-7.063718,-7.170608,4.730318,-4.868177,-1.343248,-4.836316,1.346600,-5.273222],[-6.061087,2.860112,6.513910,-0.981253,-1.356387,-1.850177,3.808962,5.853924,0.350958,-2.575422,3.692952],[-9.983928,-3.139266,0.912962,0.413100,2.636953,-9.926920,0.819072,5.266130,-3.068416,3.559298,8.846492],[-8.051589,1.740691,-0.920257,4.327609,-3.365286,-5.560858,-8.847312,-7.259918,8.335008,-0.662338,5.351863],[-7.559902,2.243266,-6.898611,7.776201,-1.994868,-7.216451,8.379196,2.064801,-8.108679,-2.402352,2.591861],[0.889281,6.301967,4.466409,-8.960127,3.248525,-4.097968,3.608382,0.854026,-2.642637,4.664168,2.676926],[-7.072668,0.999072,5.079483,2.549652,-3.664713,-1.309008,6.546620,6.508302,-8.695652,-9.221455,-6.545333]],[[-2.157873,1.242080,4.433244,9.942051,8.501581,6.340907,8.746194,5.360801,9.906627,4.285775,5.971128],[-8.561262,-5.772719,3.101984,0.133727,6.371398,2.828847,-9.973673,4.012806,-3.616958,4.167155,5.096111],[-7.059800,0.227148,-9.027548,4.264454,-1.924034,2.781520,7.489047,4.185119,-9.127332,-8.978500,3.934802],[-6.695436,-6.736572,-4.592413,-6.611778,-7.749826,-6.490065,2.100622,-1.035341,-8.221142,-2.501735,-7.516390],[-5.414080,-3.587471,-8.439467,-1.464700,4.752564,-1.344454,8.297564,-1.777905,-2.117200,-0.934052,-4.378162],[6.692383,5.729057,8.666657,8.977660,0.522189,-6.340624,-1.933372,-9.035845,-6.008957,2.513278,0.284819],[8.455781,9.749381,5.469139,-0.878885,9.517328,-0.167471,7.526126,-5.326656,5.317936,-2.922245,6.979746],[-0.973554,-2.896697,9.262199,2.331324,-4.254417,-6.136102,-5.280643,-2.130341,-9.412853,1.074537,-3.980956]],[[-1.315971,6.022244,-6.777699,7.843521,3.662578,7.361772,8.183147,7.243320,3.325220,9.124059,6.020798],[3.565829,3.095903,3.152733,4.041199,9.014322,-1.274473,4.059991,2.015352,-8.827637,8.487595,-5.577883],[8.181884,6.213371,4.523802,-7.737056,0.973372,-5.944496,4.031570,8.509268,7.808308,5.267581,8.570050],[-9.311694,4.263255,0.756746,-4.007828,4.291649,-1.534297,1.149171,-1.470578,-3.057327,7.758999,-5.267829],[1.229830,6.217755,-9.144185,-6.029746,-9.724887,-3.574711,-2.381817,-3.892757,3.335354,-7.466219,-0.952646],[-0.631830,1.416496,-5.752882,7.416994,-1.782089,-5.785381,-3.631477,-8.374745,0.402013,4.046840,-0.066682],[5.506431,3.612234,3.234794,-0.680319,1.231272,-9.262687,-2.419690,1.521618,2.846352,-5.668378,-0.321815],[-6.787252,0.848609,4.676605,-8.354298,-9.583561,-3.419237,-1.436190,4.073852,8.178344,0.316425,-3.290299]],[[5.347725,-0.019653,1.543469,-5.261262,0.184447,-2.480720,-0.511783,5.366463,2.174463,6.314365,6.139324],[1.584792,-8.503695,9.141345,-5.313422,0.680966,-7.576997,-3.868572,-8.368968,5.596494,-3.494416,4.689319],[0.697005,1.090652,-5.551751,-9.962191,-3.293384,5.366840,-8.706720,8.367368,-0.826180,-5.231624,-8.982852],[-8.879746,-8.030324,-4.878294,8.397164,8.137467,-3.146971,2.661282,6.552710,2.191825,-2.805814,1.118455],[4.708514,8.055164,8.874014,-5.684229,8.883090,2.848701,-7.556950,-2.559305,7.853171,-4.120919,-5.382404],[-0.801617,2.608468,5.397442,-9.767109,2.809868,1.250943,2.510675,-7.272845,-7.005708,-2.397558,6.129711],[6.984858,-0.028256,-8.528515,3.815182,7.807182,-3.731880,5.934840,-2.179999,-3.061468,6.559372,-0.089388],[2.888216,2.298629,-6.063761,5.718090,-5.122260,9.667143,4.243835,-9.684409,-3.307931,-5.212437,-8.015387]],[[8.415550,-2.840909,-5.156532,6.092615,-4.151555,-9.248510,1.072423,-4.032755,-3.000900,5.595656,3.680142],[9.429997,8.728300,8.170931,8.251648,2.255067,-8.672754,-4.624668,-4.046944,-2.283752,-0.602084,-5.502353],[1.968950,-9.548940,3.520708,-3.098690,-5.391840,-0.911616,1.048396,-8.564599,-0.849672,1.078646,4.003678],[2.621114,-0.764823,-8.966858,-7.394266,-9.027080,5.939415,-9.866290,-0.568235,-0.830444,-1.588065,2.435216],[-6.300020,-5.004510,2.960824,-2.303884,-7.416702,-7.461441,7.563267,2.606105,8.496427,3.129165,4.145634],[-4.200494,-5.012457,-7.305428,4.056779,7.770520,4.792430,-7.774249,2.956614,3.336169,5.661445,-4.855627],[3.532872,-6.726066,0.135448,2.199787,7.387852,9.605778,-0.389218,3.051090,6.835995,-2.461045,-3.349777],[1.687747,9.948103,0.045437,8.808919,1.003821,-9.604424,4.357216,0.497877,-8.951107,-9.599153,8.538232]],[[1.991680,8.233009,1.395563,-4.324038,-1.288092,6.274832,-1.647635,-9.367821,9.994271,-0.921156,-7.152614],[6.189508,9.543733,-8.147345,9.230385,-3.144084,-1.709174,5.257998,5.557431,-9.236324,-2.601587,7.493305],[-9.707095,-0.211634,9.724598,1.087253,-8.101950,-5.856995,-1.348396,-3.304249,-8.298611,2.668169,-0.209111],[-3.638149,-3.449784,2.664452,-2.266213,5.953421,2.342238,-0.910845,5.546957,-9.345578,1.703486,2.716334],[5.229012,3.453439,-4.306007,7.905479,-5.689772,6.173453,-3.436891,7.131632,2.691563,9.843669,-2.128806],[-8.831890,-1.277910,5.035605,4.583625,8.160457,-5.847930,-8.862257,0.667161,7.593879,8.509629,-7.310683],[-7.340223,-5.791606,4.234357,-7.485606,-6.658497,0.785856,3.592030,-1.332853,3.291560,3.460419,-9.772052],[-3.916325,6.624670,9.058671,-1.666286,-5.564547,6.426301,2.797833,3.542539,-2.862061,-2.141425,-6.526113]]], dtype = "float64")#candidate|573|(6, 8, 11)|const|float64
uop_574 = relay.tan(const_573.astype('float64')) # shape=(6, 8, 11)
func_259_call = mod.get_global_var('func_259')
func_262_call = mutated_mod.get_global_var('func_262')
const_591 = relay.const(8, dtype = "int64")#candidate|591|()|const|int64
const_592 = relay.const([[4.924542,-3.000637,9.739865,-5.547780,9.184452,-6.450236,-8.742223,-4.329166,8.255744,-2.372013,-2.354516,5.518744,1.646034,2.796117,7.216845,-2.830107,2.895383,1.626329,0.476299,-9.040785,4.306516,-7.796867,-5.753747,1.080458,-0.304834,-5.504932,-4.214464,-1.432239,8.256447,-3.156250,9.129323,2.047027,7.734406,5.544598,-6.461186,0.004946,1.012398,8.265428,8.577838,7.421548,-5.261532,-9.282586,7.212836,9.373367,-7.777680,-5.918009,-4.745950,-2.047782,-4.968305,-2.730040,9.424098,-6.366632,5.686629,-4.759610,-4.818684,2.389443,-9.387781,-2.309294,-4.338303,-2.024035,3.877226,-6.409524,-7.106940,8.671950,7.317906,3.059784],[-7.624615,8.531538,0.579856,-4.472865,3.335387,-0.040367,5.449353,8.158189,-1.205567,8.393880,-7.744736,9.602384,-5.009010,3.315365,-8.406426,1.430197,4.827429,8.408606,-1.376006,-5.954195,4.980877,5.820334,1.145440,-1.893295,-7.729162,7.394181,-6.621388,2.383319,-7.808160,-7.050397,2.834475,4.573998,-0.569494,5.982769,-1.991873,-6.537429,1.600430,-6.421631,-2.996489,-6.274772,-6.083926,-9.844437,9.730622,-0.087239,-8.265781,-6.231630,-4.928008,-5.396780,-7.124974,8.566964,-5.103583,-8.369181,-1.501138,-6.112978,-4.419723,4.026835,4.377846,6.693496,-2.649923,-2.787682,-5.452377,-9.860095,-4.196202,9.480136,8.892008,5.432058],[-3.384800,6.375768,-2.666316,2.497230,-3.535882,-6.346385,-8.217885,-0.955316,5.486591,-5.896771,-7.784572,-8.208434,0.019734,9.801684,-8.395735,-6.882310,4.959179,0.517877,-1.931702,-8.321961,-1.916951,-0.708685,-4.940713,7.737664,2.166027,8.897676,-7.822315,-9.796499,2.126302,-5.265435,-9.228221,-3.911351,-0.553506,8.343496,-7.344700,-2.136488,-2.933165,-6.774110,7.572369,-3.950816,7.742300,-5.417792,5.757585,2.890035,2.189617,8.525738,2.933882,8.423055,6.963214,-3.340456,-1.730786,-5.033418,9.854314,6.478073,-9.984599,3.351582,7.082493,-8.608625,-3.426907,1.411962,4.344125,1.954620,-0.889684,0.040572,3.468834,4.706909],[-9.968347,0.423244,-4.660869,-3.311303,-5.395978,-5.322420,-9.433395,1.819486,9.685597,-1.604033,5.340673,1.719719,-6.670240,5.376887,-2.019531,6.810755,5.237811,-2.159412,6.853130,-3.347945,-3.190713,0.958897,9.557986,7.452747,6.285844,-0.218614,4.003119,-7.916149,-9.541457,1.061199,-2.303124,5.412321,7.786072,-7.363819,-5.068484,2.643568,3.100265,3.541178,5.618743,4.184804,-2.431142,5.757117,5.961558,0.641740,0.141576,-8.267198,6.783615,9.480186,9.134881,2.766805,2.229215,-1.863953,0.332851,6.322639,-4.594747,3.976369,-4.002686,-6.530795,-0.399825,8.580693,4.623656,-4.503533,0.575879,5.210427,7.711039,3.764421],[2.673416,9.733776,7.232634,7.299842,-8.642283,6.046913,8.959682,-3.641654,6.793572,-8.869795,-1.870109,-7.412983,-3.377694,-5.044647,-1.109733,-5.277903,-5.896087,5.796471,3.232227,3.683316,1.487915,-2.447580,7.164457,7.084595,8.253457,8.146439,-0.568506,1.196273,0.737604,-2.408988,2.868988,-8.772756,-3.766944,-1.032623,-2.132286,6.979399,-5.092004,0.573290,0.935178,-5.099061,-4.245077,-5.800632,0.531445,5.357617,6.793205,8.134424,0.294292,-6.580427,4.798443,1.620764,1.908641,5.840010,-1.314393,0.649243,2.770956,-7.580360,5.956545,-9.825662,7.014312,9.976580,9.910080,5.250512,-0.619230,7.593357,-7.460919,-7.350098],[6.582839,2.974502,-1.219164,2.192175,3.871979,8.443043,-0.685463,0.314296,3.366765,6.613657,9.778657,9.135474,-6.541323,5.425188,4.601492,-0.795945,-5.997439,0.163441,-9.306882,-6.613478,-5.817692,-6.902117,-9.160658,-9.600516,6.354876,-1.781850,7.785191,-0.433986,-0.735105,-7.222669,7.053219,7.941755,4.165824,-3.657965,5.924127,1.423018,-5.374803,4.722911,3.158427,2.723090,3.182631,-1.254724,1.558281,-0.523388,-2.340185,-2.582310,-4.778216,9.762747,-8.888575,2.249682,3.675519,8.118834,8.334699,-9.438934,6.357026,2.489831,0.529866,4.869042,-6.471014,9.329083,-8.432843,0.900194,6.116931,-2.221359,-2.335194,7.918430],[-8.999957,-1.264451,4.280401,8.821988,-4.380240,3.810715,-1.792630,-2.398962,4.272536,4.393524,3.025222,-8.586570,-3.924748,-7.998147,-3.445262,-7.995288,6.221327,-5.655527,0.838057,6.787193,-4.699923,3.610716,9.257684,-6.115092,2.381839,-9.328232,-8.898300,9.829319,-7.570484,2.330532,-3.192106,6.638727,-5.069017,-4.501696,9.748266,9.061606,2.690790,-7.963786,5.749177,6.975515,5.454730,4.100332,-6.047989,-9.937149,5.148658,1.810868,8.935935,4.986170,8.796691,9.355885,6.882574,-4.530907,4.805414,7.944199,1.001346,-4.879881,-5.230742,-4.181152,-9.371242,5.513558,4.888635,1.259412,-3.171364,-7.593154,1.589131,-6.189589],[7.238353,4.180650,-9.964778,3.343526,1.095880,-4.577914,0.673558,-2.361218,2.009002,1.864517,-3.837837,3.758381,5.889783,-5.686609,3.427165,7.953700,-4.445313,5.107817,5.355041,-7.240007,-4.901657,7.913041,-7.726443,-6.893201,9.962692,-0.017281,-3.953270,-7.702050,5.471180,-4.346912,-7.310274,7.296692,-8.675923,9.365973,9.286405,-0.510817,-5.324527,-3.271498,6.863871,-6.531117,-7.836071,8.006957,-3.297754,2.904940,-8.469128,-4.765668,3.314689,2.457290,-4.640738,-9.932471,5.746774,-4.561147,-2.361065,-9.774052,7.881220,-8.779309,8.205519,-3.636107,-3.003287,4.559133,-0.652083,8.800771,-4.010524,5.661117,2.922483,-9.581303],[5.735796,-3.323109,9.588571,5.399236,0.041304,2.274609,4.524144,-3.551076,1.451003,3.401903,3.394412,1.670500,8.094375,-1.655016,-1.931065,3.845423,0.591605,9.859584,-8.390032,0.130160,4.105355,-9.642056,8.790242,-1.600520,0.003504,-8.089499,-9.800054,-2.175176,-5.579817,-1.288487,0.111032,-2.650462,5.205252,-4.204213,2.583501,5.949988,-3.414308,7.991430,-5.674379,-2.981593,2.405226,-7.181345,-8.184599,-1.724902,4.114711,-7.068751,-2.804539,-7.464187,-8.766964,-5.494236,-4.177208,-3.975195,2.836171,-3.200979,2.508754,9.988183,1.304436,-9.819272,-6.298118,3.129371,8.868067,2.982717,-5.341469,2.423976,-3.383400,-2.182324],[5.091309,1.787782,8.323014,-6.054649,-6.474924,5.765278,3.542472,2.646600,-1.723055,-1.790880,-3.372565,-0.461962,5.100868,-2.592876,8.854489,-9.629598,1.407321,0.756125,-5.059703,-9.202949,-3.990168,-9.537402,4.980262,9.181517,-7.394825,-9.128382,6.461742,-7.984255,-9.023222,-4.480981,2.822361,1.940210,-1.626455,3.681984,-7.332766,6.566439,-5.019634,0.462743,-1.181064,3.598393,-0.329016,5.033352,-7.602198,-1.488246,-2.446180,-3.483739,4.406238,3.223892,4.293484,-0.081406,-3.504690,-4.498948,-0.967812,-1.748339,-6.908659,7.721117,1.867755,5.680254,-9.994852,3.433331,-4.366339,9.954051,1.310331,-8.493990,6.987466,-4.604196]], dtype = "float64")#candidate|592|(10, 66)|const|float64
call_590 = relay.TupleGetItem(func_259_call(relay.reshape(const_591.astype('int64'), []), relay.reshape(const_592.astype('float64'), [660,]), ), 2)
call_593 = relay.TupleGetItem(func_262_call(relay.reshape(const_591.astype('int64'), []), relay.reshape(const_592.astype('float64'), [660,]), ), 2)
func_259_call = mod.get_global_var('func_259')
func_262_call = mutated_mod.get_global_var('func_262')
call_602 = relay.TupleGetItem(func_259_call(relay.reshape(const_591.astype('int64'), []), relay.reshape(const_592.astype('float64'), [660,]), ), 2)
call_603 = relay.TupleGetItem(func_262_call(relay.reshape(const_591.astype('int64'), []), relay.reshape(const_592.astype('float64'), [660,]), ), 2)
output = relay.Tuple([uop_574,call_590,const_591,const_592,call_602,])
output2 = relay.Tuple([uop_574,call_593,const_591,const_592,call_603,])
func_611 = relay.Function([], output)
mod['func_611'] = func_611
mod = relay.transform.InferType()(mod)
output = func_611()
func_612 = relay.Function([], output)
mutated_mod['func_612'] = func_612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_623 = relay.TupleGetItem(func_611_call(), 3)
call_624 = relay.TupleGetItem(func_612_call(), 3)
var_627 = relay.var("var_627", dtype = "float64", shape = (10, 66))#candidate|627|(10, 66)|var|float64
bop_628 = relay.subtract(call_623.astype('uint16'), relay.reshape(var_627.astype('uint16'), relay.shape_of(call_623))) # shape=(10, 66)
bop_631 = relay.subtract(call_624.astype('uint16'), relay.reshape(var_627.astype('uint16'), relay.shape_of(call_624))) # shape=(10, 66)
output = relay.Tuple([bop_628,])
output2 = relay.Tuple([bop_631,])
func_632 = relay.Function([var_627,], output)
mod['func_632'] = func_632
mod = relay.transform.InferType()(mod)
mutated_mod['func_632'] = func_632
mutated_mod = relay.transform.InferType()(mutated_mod)
var_633 = relay.var("var_633", dtype = "float64", shape = (10, 66))#candidate|633|(10, 66)|var|float64
func_632_call = mutated_mod.get_global_var('func_632')
call_634 = func_632_call(var_633)
output = call_634
func_635 = relay.Function([var_633], output)
mutated_mod['func_635'] = func_635
mutated_mod = relay.transform.InferType()(mutated_mod)
var_657 = relay.var("var_657", dtype = "float64", shape = (3, 14, 3))#candidate|657|(3, 14, 3)|var|float64
uop_658 = relay.asin(var_657.astype('float64')) # shape=(3, 14, 3)
uop_668 = relay.erf(var_657.astype('float64')) # shape=(3, 14, 3)
output = relay.Tuple([uop_658,uop_668,])
output2 = relay.Tuple([uop_658,uop_668,])
func_673 = relay.Function([var_657,], output)
mod['func_673'] = func_673
mod = relay.transform.InferType()(mod)
var_674 = relay.var("var_674", dtype = "float64", shape = (3, 14, 3))#candidate|674|(3, 14, 3)|var|float64
output = func_673(var_674)
func_675 = relay.Function([var_674], output)
mutated_mod['func_675'] = func_675
mutated_mod = relay.transform.InferType()(mutated_mod)
var_748 = relay.var("var_748", dtype = "uint64", shape = (13, 11, 14))#candidate|748|(13, 11, 14)|var|uint64
const_749 = relay.const([[[2,-9,-6,-1,-10,-5,6,-8,-8,3,-8,-9,-2,-2],[5,-6,-10,5,-7,10,-7,8,4,6,-8,3,6,6],[8,6,-8,8,5,-3,-2,-2,7,-4,-3,-4,9,-9],[-1,4,-3,-1,-3,6,-6,2,3,7,-5,4,1,-1],[7,-7,6,-6,-2,-7,-9,4,-3,3,2,9,-3,5],[1,4,9,6,3,-4,10,9,-6,7,9,7,-10,-9],[9,6,-4,-10,4,-8,-8,1,4,9,10,9,-4,1],[5,8,3,-6,6,10,9,-6,-10,7,6,-4,-2,6],[-1,1,-6,-10,4,-6,1,2,-5,9,7,9,-1,-10],[8,-8,-2,3,-9,6,8,-4,9,-8,-4,2,-2,5],[-6,8,-10,10,-7,-9,-7,-8,9,1,5,4,8,-1]],[[7,-6,10,4,10,3,9,4,8,-1,5,5,-3,1],[5,4,7,-2,5,6,-3,5,-10,-10,-2,-5,4,8],[1,1,-3,-7,-6,-7,6,-6,-4,-5,-1,-3,5,-1],[10,-6,-1,6,-3,-4,1,-8,7,-7,7,7,6,-3],[10,10,3,10,5,6,8,-7,-3,5,10,-3,6,5],[2,3,-9,-1,-10,-6,6,5,6,-10,-6,1,10,3],[5,-6,-5,8,-3,-8,-7,-10,-10,6,8,5,4,-1],[1,8,1,3,-4,-2,10,-10,8,-2,8,4,-6,1],[6,-4,-6,-5,8,-3,-10,7,-6,-9,-10,5,-8,3],[10,6,6,7,4,-8,-1,-3,7,3,1,-10,-2,9],[3,-6,6,1,3,1,-9,10,-10,-10,-4,-2,4,6]],[[-6,6,4,4,-7,1,10,-9,-1,-8,-1,9,3,2],[3,3,-10,-1,-4,-6,10,3,9,1,-1,2,9,-9],[3,2,-9,9,8,6,5,-3,7,-4,-5,6,-4,-2],[-10,-9,-4,10,8,3,-9,7,8,8,-5,-2,7,-8],[8,8,-1,-10,-10,8,-2,-5,1,5,-2,-7,-5,-9],[8,-7,-9,4,-2,7,-9,-9,8,-1,7,-8,-9,8],[-3,10,4,8,2,5,6,-7,5,-5,-1,-1,2,-7],[-2,9,-10,7,-6,-9,-4,-4,6,-7,-7,-3,-9,-7],[4,4,-7,-1,1,4,10,-8,10,7,5,-7,8,-1],[6,8,3,8,-4,-8,-7,-4,10,3,6,-5,6,3],[4,1,-5,-2,10,8,-8,-10,-1,-2,-8,10,-5,-7]],[[7,-6,-8,-2,7,-9,3,2,-6,-4,9,-9,-1,3],[3,10,3,-10,-5,4,-4,1,-2,9,-7,6,-9,5],[3,-9,-1,4,-4,-3,-7,-3,9,8,-10,9,10,-5],[10,10,-9,10,7,-2,-8,-2,-1,6,10,3,-1,-7],[-10,9,-2,5,-7,1,-7,-4,9,10,10,2,-9,10],[-7,-10,-1,9,7,7,7,5,5,10,5,6,7,-7],[-10,6,-6,-6,-5,-2,-9,6,1,3,-1,9,-5,1],[-10,-10,-7,-2,5,10,3,4,-5,1,2,-1,6,-8],[3,-5,-10,-7,-5,10,7,2,3,3,4,3,5,-8],[-2,-4,-8,1,-5,-4,7,10,5,-3,6,6,9,8],[3,-7,-2,3,-1,7,3,6,-7,-4,-8,1,-3,8]],[[6,8,-9,6,5,1,-4,-1,2,-8,6,1,9,10],[9,-3,-1,6,-5,1,-4,7,-3,-6,8,5,-6,-7],[-10,-6,-4,-6,10,-5,8,9,10,-1,-6,9,-3,-7],[-3,-1,-1,2,5,-10,-1,2,-5,-1,-8,-10,-9,8],[5,10,-2,-3,-7,-8,-4,-9,-5,4,3,5,-8,-8],[3,-9,-3,-10,-10,-8,9,-1,-6,10,3,-1,1,-10],[2,6,-3,-6,5,-1,-9,4,-5,-3,-9,-2,8,1],[-1,6,10,-1,-10,1,-4,-2,9,3,3,3,-10,4],[-10,5,7,-5,7,2,-4,3,-3,-1,1,6,-1,-7],[6,8,10,7,7,6,7,-9,1,9,7,8,-5,5],[3,-8,7,5,7,5,-2,-8,-1,4,-1,5,4,-9]],[[8,-6,7,-2,-9,-2,-6,2,9,1,-7,9,-7,-9],[10,1,-1,2,2,-4,8,-7,4,4,-9,1,-9,7],[9,-8,-1,8,5,-2,2,8,-4,8,-6,1,-9,-3],[-5,6,-4,2,1,-1,-9,-5,-1,-5,-10,2,5,-1],[-8,-3,-5,-6,1,-6,9,1,2,-1,9,-9,8,2],[7,-8,-8,-7,-9,-1,2,-5,7,-10,-9,2,-8,-6],[-2,-2,4,3,2,-4,-2,1,2,-6,-1,-8,7,10],[-10,-4,7,-1,-7,-2,4,-7,-10,-2,-4,1,-5,8],[8,-9,-4,-9,10,-1,-6,-3,-8,-9,-3,-1,1,2],[3,-8,-8,7,10,3,8,7,9,-6,-2,-7,10,-2],[2,-5,-6,5,-7,-5,8,7,4,-4,3,3,-7,-2]],[[10,7,10,8,4,1,4,8,-6,2,10,4,-5,3],[-7,10,9,-1,9,8,-1,-5,-4,10,2,1,-9,-7],[4,-10,-5,2,8,-4,3,10,-2,10,10,8,-6,-3],[-6,1,8,-4,-2,8,10,-8,-5,-6,5,-3,-7,-8],[1,-8,-2,8,-10,5,-9,-1,5,9,-8,-5,10,-8],[10,-2,7,-8,10,-1,8,-10,6,-3,1,-9,6,1],[-3,-7,-5,3,-2,3,5,-2,-7,-8,-6,-4,-5,-3],[8,-9,3,5,6,3,7,7,9,6,4,9,-7,4],[-7,-10,-2,-7,4,6,7,7,-5,-9,6,10,-7,9],[-3,5,1,-4,-4,-2,10,10,7,-5,-2,9,-8,-7],[10,-1,8,-3,-1,3,-10,6,3,9,-3,-4,-1,-2]],[[-10,5,2,4,-2,-8,6,10,6,-5,-2,-1,-3,10],[6,10,-1,-7,-3,-1,-10,7,2,-3,3,-7,4,-2],[3,-10,5,4,-7,9,3,-2,-10,-10,-6,1,1,-6],[8,-4,1,-7,-4,-2,-3,10,2,-1,-10,-5,4,-8],[5,-1,-4,-1,1,-3,2,-7,-8,-3,8,3,4,6],[3,2,2,1,10,-2,4,5,3,-1,8,3,7,-4],[5,7,-6,8,-2,-3,-4,3,-2,-4,-2,-8,-8,-6],[1,5,2,6,3,-5,4,9,-4,-6,3,-3,-4,7],[6,-10,-5,-10,9,4,-1,-6,8,-3,-8,-1,8,7],[-7,-5,-10,-9,-9,2,7,9,7,-1,1,-1,2,9],[8,-1,2,9,2,-9,-8,-1,8,-1,5,4,-7,-2]],[[-9,-8,-1,-3,4,5,1,-8,-4,4,-7,9,-10,-6],[5,5,-3,2,-9,-6,-8,-10,4,10,7,2,-2,5],[-1,6,-3,2,3,9,-9,-8,6,10,7,10,5,-7],[-2,-6,5,10,4,-3,6,-2,5,-3,-9,2,2,-2],[-3,-3,-3,-7,2,6,9,-4,9,1,-5,4,-9,2],[10,8,2,8,10,-2,5,8,-5,-9,8,10,-6,7],[-3,-7,-2,-6,-8,-8,10,-9,-7,-8,-9,9,-9,-1],[3,2,-9,-9,-6,3,-7,-2,-10,3,8,-2,-10,-6],[-1,-8,7,10,-1,-8,4,-2,-2,-2,-5,-2,8,-2],[8,-9,-7,3,7,1,-6,6,10,-1,-10,7,-7,10],[6,4,-2,-4,10,-2,-3,-6,3,9,7,6,-4,-5]],[[-5,-6,9,-6,5,-1,-7,5,-7,9,2,-3,-9,-10],[-3,3,2,-10,1,3,4,-2,-6,-1,7,-2,9,8],[6,10,-3,-9,2,7,5,-1,5,-10,-10,5,-10,-4],[4,-8,2,-2,-8,-9,2,6,-7,6,2,-2,-6,8],[5,6,6,10,1,2,-4,-2,10,-4,6,-8,6,1],[-8,-10,2,2,2,-7,-5,2,1,-6,5,7,-1,-2],[-6,9,-1,-7,-8,3,3,5,-1,7,-3,3,4,9],[-9,-2,-3,1,3,9,8,-1,1,9,3,4,-1,-3],[-10,-10,-3,-4,-5,-10,-2,10,-10,3,7,3,-9,9],[7,9,-4,4,3,-4,4,5,-1,-8,-7,2,4,-5],[4,5,6,9,-2,9,-3,-4,-5,3,-5,6,-3,-6]],[[-4,1,7,-9,9,4,3,9,-4,-2,-3,6,-9,9],[-1,-10,10,-4,7,-9,-3,10,-6,-1,3,1,2,5],[10,-5,1,-5,-5,7,4,10,10,-3,-10,-9,2,8],[-7,-5,-7,7,6,-10,-1,-4,-2,2,4,-8,-2,5],[7,7,-8,-1,7,-4,2,-5,-8,9,3,2,9,-2],[-5,4,-2,-7,7,7,8,6,-7,4,-10,-7,-6,-10],[7,5,-1,-7,4,-5,-4,5,-6,-3,-10,8,1,4],[-4,-10,8,-6,-8,4,-7,-3,1,-2,-6,10,3,9],[3,1,8,10,-9,-7,-9,9,7,-6,7,-5,-4,-1],[3,1,3,-5,3,1,4,-1,8,-1,-9,5,-7,-8],[-5,10,-1,8,-4,9,10,1,5,-1,9,7,-8,-3]],[[5,8,4,-10,8,1,2,-1,-9,10,-6,8,-2,-3],[-9,5,-2,4,10,3,3,-2,-5,9,7,7,-10,-9],[1,-1,2,4,1,-10,-5,1,-8,-5,9,-4,-3,10],[-9,4,-2,-10,-2,-8,4,8,-2,7,3,10,6,-10],[8,-10,10,-5,-10,-9,-1,9,-5,-5,5,7,-4,2],[1,-8,-2,6,-4,-6,-7,-9,10,-4,-3,3,10,8],[7,3,1,-6,2,5,-2,2,-4,6,9,2,-8,1],[-7,4,-8,1,-10,2,-1,-8,8,2,1,7,-9,-5],[5,7,-7,-7,7,4,-7,7,-5,-2,-7,4,-4,1],[1,-2,-1,10,7,-5,-5,2,-7,-9,8,-5,6,4],[-10,3,8,-8,4,9,3,-8,4,10,2,4,-1,-4]],[[8,-8,10,10,9,-9,5,-6,1,-9,-7,8,10,-7],[3,-9,7,1,-7,5,10,10,-1,6,-2,9,-5,9],[1,6,7,-6,1,4,-8,-5,-5,4,1,2,-6,-5],[9,6,-9,-7,10,-5,-1,-10,-1,7,-1,-4,2,10],[-8,-1,-8,-9,3,-7,9,1,-10,1,7,-7,-1,-3],[-8,3,7,-5,2,3,-1,-8,10,-2,-2,2,-3,10],[-2,8,-7,6,-8,-8,-6,-6,9,9,5,2,6,-9],[-2,4,-3,4,7,3,-2,6,1,-6,7,-2,7,-8],[-7,-4,7,3,-2,9,8,3,-4,-9,-2,-7,-10,-9],[-2,-2,7,8,-3,3,9,-5,5,-8,-8,8,-3,8],[6,2,6,7,-9,-7,-7,10,-2,4,4,10,10,-1]]], dtype = "uint64")#candidate|749|(13, 11, 14)|const|uint64
bop_750 = relay.greater_equal(var_748.astype('bool'), relay.reshape(const_749.astype('bool'), relay.shape_of(var_748))) # shape=(13, 11, 14)
func_556_call = mod.get_global_var('func_556')
func_560_call = mutated_mod.get_global_var('func_560')
var_776 = relay.var("var_776", dtype = "float64", shape = ())#candidate|776|()|var|float64
var_777 = relay.var("var_777", dtype = "float64", shape = (48,))#candidate|777|(48,)|var|float64
call_775 = relay.TupleGetItem(func_556_call(relay.reshape(var_776.astype('float64'), []), relay.reshape(var_777.astype('float64'), [8, 2, 3]), ), 0)
call_778 = relay.TupleGetItem(func_560_call(relay.reshape(var_776.astype('float64'), []), relay.reshape(var_777.astype('float64'), [8, 2, 3]), ), 0)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_783 = relay.TupleGetItem(func_611_call(), 4)
call_784 = relay.TupleGetItem(func_612_call(), 4)
uop_798 = relay.log(bop_750.astype('float32')) # shape=(13, 11, 14)
const_800 = relay.constdtype = "float32")#candidate|800|(13, 11, 14)|const|float32
bop_801 = relay.subtract(uop_798.astype('uint16'), relay.reshape(const_800.astype('uint16'), relay.shape_of(uop_798))) # shape=(13, 11, 14)
uop_808 = relay.cosh(bop_801.astype('float64')) # shape=(13, 11, 14)
func_259_call = mod.get_global_var('func_259')
func_262_call = mutated_mod.get_global_var('func_262')
const_819 = relay.const([-4.404920,-9.255218,1.291108,-0.788410,5.181264,7.933287,-6.666264,-7.180709,-0.478038,3.931540,-6.404509,-8.791975,-2.705616,4.659541,8.120347,-7.855060,-8.302956,1.203061,-5.679976,0.790721,7.297041,1.405891,-6.617550,-7.834044,-6.427655,-5.392786,4.471405,0.244944,-7.715699,-0.452134,-1.115341,-3.976766,5.773352,1.065427,7.785969,-9.352680,0.505280,-3.460213,0.672320,1.271014,-5.194986,8.641024,-1.567602,3.967599,4.976497,-3.179066,-2.003827,-5.338942,9.672637,2.950229,3.883078,1.101071,-4.596777,-4.293742,-0.285152,7.677796,3.652160,5.836831,5.587031,3.988835,-7.076246,7.206443,-1.727710,-6.683703,4.160698,-7.544114,9.076684,3.462091,-2.011902,-2.064406,9.948530,1.317308,-9.302283,0.245635,-3.323017,-8.492363,-1.028248,3.371734,4.279597,-8.182022,-6.644273,2.533429,5.473252,3.634050,-6.802888,-7.607412,8.374669,5.910743,-9.699416,-9.766790,7.801416,6.612017,-3.621361,-4.817566,8.272086,-1.851006,1.052759,3.422039,-0.282536,-2.416198,-2.462335,7.561906,3.465073,9.811373,6.530852,-0.568390,-4.842363,-4.275774,-1.602024,6.022364,-0.401434,8.853584,0.733958,-5.537781,3.722982,9.284706,9.599101,-5.951495,3.039009,2.667519,9.952650,3.365501,2.894014,-7.546594,-5.712835,8.737329,9.571115,-1.117760,-4.504531,-0.872170,-9.786631,0.398797,-2.650719,-1.226834,-3.591760,-8.317246,0.367715,8.800773,-9.691780,-1.222026,1.578184,4.301804,5.221290,-2.640625,-4.068321,6.035378,-8.614909,-0.669361,-9.318683,-9.395135,-6.256012,-5.918209,-4.658537,0.891354,3.215545,7.699127,5.387715,3.564522,-6.100113,-9.133663,6.357414,7.728985,1.049047,-7.079276,-7.517644,-8.476594,-7.558844,-2.046037,-6.422369,6.369925,-9.277777,8.289182,2.685794,-6.330724,-8.835573,-4.212696,-1.791977,3.082490,9.003377,-4.880046,-4.728641,9.789181,0.118466,2.742852,8.284854,-4.673900,2.672446,8.014993,-4.066401,-4.541047,9.546547,-1.187866,5.304541,5.167350,-4.361101,-3.886853,-5.997428,4.052798,-7.435709,3.805200,0.114874,0.735783,3.032370,6.805111,-1.464920,-9.953762,-8.407346,3.918362,-2.046055,-1.073557,-2.429474,1.262945,-3.788195,3.315036,7.102566,-7.109922,-8.712862,1.074173,5.334127,1.258245,1.855693,9.068695,8.901366,5.489982,8.318449,-6.093436,-0.643867,-3.526675,-8.961448,1.183443,-5.320261,-0.741704,9.533697,7.293584,-5.156978,-1.414974,-4.607397,1.125915,0.241089,-0.517011,-9.505288,-6.902594,-6.466582,-9.946254,-8.013741,5.933680,8.017343,7.235540,7.343428,6.786974,-4.690317,1.395473,0.498823,-3.657694,8.822792,3.870760,4.805584,6.029339,-8.434761,-1.640124,4.132204,-5.865079,9.144740,-8.939488,-2.943545,-7.821515,2.756564,0.214694,-4.640838,6.839968,-3.724908,6.413582,3.452671,-2.117982,-6.925491,-3.602930,-6.620567,4.697443,3.409577,-6.836663,0.173687,-2.276170,1.737929,-5.028613,9.820115,2.248468,-2.689113,3.973293,5.684231,-6.984643,-5.334213,-5.360267,7.564689,-9.857519,0.928976,-3.465142,4.907993,1.502017,-0.678029,-9.558238,-3.019034,-7.593437,-3.493955,-6.513259,0.129431,-6.253097,2.656471,-9.999808,-8.916351,8.998703,7.739259,-2.592438,-6.752042,2.577764,8.941828,-4.571277,-2.537238,4.796075,-6.359676,-8.989918,-0.566324,4.133936,6.575099,-2.710153,-0.121527,2.752167,4.354495,-9.488582,-2.496978,-7.422962,4.996405,2.322810,1.793465,0.787951,-1.747038,9.367294,-4.161076,-1.878497,-5.867367,9.076818,4.334064,5.996771,-4.804567,-1.507396,2.866433,9.190304,-9.386618,-8.736189,8.586858,4.955961,-0.949170,-6.604078,-6.785872,-8.303521,4.435985,3.804471,1.701579,4.989814,7.510903,-7.327461,-5.930870,5.750689,-7.994721,5.657471,0.303253,9.920840,5.392036,-5.563255,-6.473265,3.063767,-5.795965,-4.938323,8.442761,-3.194336,-5.581955,4.100827,-3.033847,5.562979,6.859172,-1.698056,7.619846,-5.134671,1.507857,-7.688044,7.402555,8.624783,9.543506,2.154656,5.790001,6.593799,-2.347489,-1.739018,4.655283,9.776255,-3.004731,-5.190087,5.143904,7.730558,2.552396,0.058330,4.194149,5.707338,-1.532995,4.979253,-3.748633,8.356689,7.314689,2.196492,8.806756,5.210923,-8.136168,-3.701008,-6.822065,-0.458201,0.587845,4.066376,-8.556335,7.446688,2.669149,-1.865032,2.279821,8.109433,5.307604,-6.997019,6.064871,0.022953,9.429141,-4.260624,6.124637,3.861597,-0.837821,4.488513,7.793289,5.490950,8.644701,-8.883657,-5.722669,4.685373,-6.359776,-6.106268,-4.884082,4.702513,2.558402,1.279974,-0.361641,-1.331526,3.268891,9.490865,-0.298775,-6.415103,-3.395306,9.197570,-4.877208,9.279146,-7.538937,-4.878596,5.606602,-6.184632,6.495565,3.024342,-3.735836,-1.466960,6.610654,2.711594,2.162230,0.295205,-0.050944,-7.849908,6.496892,-6.966000,8.253716,-7.588239,-3.567631,-9.197864,0.986100,-7.116449,4.854455,2.934888,-6.902845,-9.928592,-0.955294,-9.106107,-6.043372,6.447087,-8.903368,2.850827,5.645196,-0.621896,-0.043875,3.999610,-6.289357,-0.178771,4.846220,-6.329384,-1.389388,3.867424,-2.394211,8.134564,-7.556888,-3.590846,-1.103158,-1.467030,-3.575276,-2.904351,2.112430,-6.393336,8.209223,4.575908,-3.554427,-5.668588,7.325752,-1.252218,8.310230,-3.000684,-7.231385,-4.392231,0.599424,-8.111247,2.059245,-6.601534,0.134822,-3.495840,9.763299,9.485172,3.330424,-9.874499,1.797069,-1.130768,1.368782,-9.335938,-5.096653,-4.261549,1.796581,0.182004,4.053912,-6.735875,-4.528853,7.121954,-5.365032,5.834342,5.934870,-3.923633,-4.514221,1.271953,-3.922522,-8.473946,1.954611,-9.316293,4.181476,3.126977,2.545720,6.493525,4.957809,-7.122791,6.760531,5.795387,2.465271,3.151936,0.355559,9.787243,-5.110099,-4.197925,8.524570,3.647682,-5.943558,0.337945,-9.981008,1.058069,-8.704626,9.409233,7.624096,-4.149271,2.054468,1.062968,-2.498119,-3.302352,-4.900639,-6.703264,3.855811,-3.237786,1.308700,9.788003,6.342554,6.405581,-5.803624,9.225542,2.045709,3.386931,-8.360383,3.507831,7.241929,8.074486,-4.627906,8.754700,7.148900,1.973278,-1.186678,-8.686777,1.196150,3.274347,7.454932,-4.772087,-7.966836,2.067487,-1.071188,7.450774,-8.192536,9.661693,9.243551,-4.670932,-2.382235,0.116397,-9.031063,-8.185860,4.039379,-3.309870,5.465889,9.011035,-3.213305,-6.634848,-6.099883,-9.065381,-5.580763,0.894691,6.847782,0.226418,-8.588648,-0.710244,-5.602152,-4.001320,-5.271906,-6.425752,9.253344,3.350582,-5.633341,-1.659749,8.487521,1.197678,-4.927892,8.684329,-8.587718,-4.999641,5.170838,-5.552494,5.982090,6.021435,0.927193,9.026111,-7.342440,-8.119272,-5.323085,8.690451,8.371357,-5.299225,4.525229,4.812060,-0.141423,-9.687815,-1.356980,2.364771], dtype = "float64")#candidate|819|(660,)|const|float64
call_818 = relay.TupleGetItem(func_259_call(relay.reshape(var_776.astype('int64'), []), relay.reshape(const_819.astype('float64'), [660,]), ), 2)
call_820 = relay.TupleGetItem(func_262_call(relay.reshape(var_776.astype('int64'), []), relay.reshape(const_819.astype('float64'), [660,]), ), 2)
func_10_call = mod.get_global_var('func_10')
func_12_call = mutated_mod.get_global_var('func_12')
call_830 = func_10_call(relay.reshape(const_819.astype('float64'), [12, 5, 11]))
call_831 = func_10_call(relay.reshape(const_819.astype('float64'), [12, 5, 11]))
func_259_call = mod.get_global_var('func_259')
func_262_call = mutated_mod.get_global_var('func_262')
call_833 = relay.TupleGetItem(func_259_call(relay.reshape(var_776.astype('int64'), []), relay.reshape(call_830.astype('float64'), [660,]), ), 1)
call_834 = relay.TupleGetItem(func_262_call(relay.reshape(var_776.astype('int64'), []), relay.reshape(call_830.astype('float64'), [660,]), ), 1)
uop_836 = relay.sinh(uop_808.astype('float32')) # shape=(13, 11, 14)
output = relay.Tuple([call_775,var_776,var_777,call_783,call_818,const_819,call_830,call_833,uop_836,])
output2 = relay.Tuple([call_778,var_776,var_777,call_784,call_820,const_819,call_831,call_834,uop_836,])
func_840 = relay.Function([var_748,var_776,var_777,], output)
mod['func_840'] = func_840
mod = relay.transform.InferType()(mod)
mutated_mod['func_840'] = func_840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_840_call = mutated_mod.get_global_var('func_840')
var_842 = relay.var("var_842", dtype = "uint64", shape = (13, 11, 14))#candidate|842|(13, 11, 14)|var|uint64
var_843 = relay.var("var_843", dtype = "float64", shape = ())#candidate|843|()|var|float64
var_844 = relay.var("var_844", dtype = "float64", shape = (48,))#candidate|844|(48,)|var|float64
call_841 = func_840_call(var_842,var_843,var_844,)
output = call_841
func_845 = relay.Function([var_842,var_843,var_844,], output)
mutated_mod['func_845'] = func_845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_883 = relay.var("var_883", dtype = "uint64", shape = (8, 13, 14))#candidate|883|(8, 13, 14)|var|uint64
var_884 = relay.var("var_884", dtype = "uint64", shape = (8, 13, 14))#candidate|884|(8, 13, 14)|var|uint64
bop_885 = relay.bitwise_and(var_883.astype('uint64'), relay.reshape(var_884.astype('uint64'), relay.shape_of(var_883))) # shape=(8, 13, 14)
func_10_call = mod.get_global_var('func_10')
func_12_call = mutated_mod.get_global_var('func_12')
var_896 = relay.var("var_896", dtype = "float64", shape = (660,))#candidate|896|(660,)|var|float64
call_895 = func_10_call(relay.reshape(var_896.astype('float64'), [12, 5, 11]))
call_897 = func_10_call(relay.reshape(var_896.astype('float64'), [12, 5, 11]))
func_259_call = mod.get_global_var('func_259')
func_262_call = mutated_mod.get_global_var('func_262')
const_899 = relay.const(-5, dtype = "int64")#candidate|899|()|const|int64
call_898 = relay.TupleGetItem(func_259_call(relay.reshape(const_899.astype('int64'), []), relay.reshape(var_896.astype('float64'), [660,]), ), 0)
call_900 = relay.TupleGetItem(func_262_call(relay.reshape(const_899.astype('int64'), []), relay.reshape(var_896.astype('float64'), [660,]), ), 0)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_904 = relay.TupleGetItem(func_611_call(), 4)
call_905 = relay.TupleGetItem(func_612_call(), 4)
func_259_call = mod.get_global_var('func_259')
func_262_call = mutated_mod.get_global_var('func_262')
call_906 = relay.TupleGetItem(func_259_call(relay.reshape(const_899.astype('int64'), []), relay.reshape(var_896.astype('float64'), [660,]), ), 1)
call_907 = relay.TupleGetItem(func_262_call(relay.reshape(const_899.astype('int64'), []), relay.reshape(var_896.astype('float64'), [660,]), ), 1)
func_632_call = mod.get_global_var('func_632')
func_635_call = mutated_mod.get_global_var('func_635')
call_922 = relay.TupleGetItem(func_632_call(relay.reshape(call_898.astype('float64'), [10, 66])), 0)
call_923 = relay.TupleGetItem(func_635_call(relay.reshape(call_898.astype('float64'), [10, 66])), 0)
output = relay.Tuple([bop_885,call_895,var_896,call_898,const_899,call_904,call_906,call_922,])
output2 = relay.Tuple([bop_885,call_897,var_896,call_900,const_899,call_905,call_907,call_923,])
func_929 = relay.Function([var_883,var_884,var_896,], output)
mod['func_929'] = func_929
mod = relay.transform.InferType()(mod)
var_930 = relay.var("var_930", dtype = "uint64", shape = (8, 13, 14))#candidate|930|(8, 13, 14)|var|uint64
var_931 = relay.var("var_931", dtype = "uint64", shape = (8, 13, 14))#candidate|931|(8, 13, 14)|var|uint64
var_932 = relay.var("var_932", dtype = "float64", shape = (660,))#candidate|932|(660,)|var|float64
output = func_929(var_930,var_931,var_932,)
func_933 = relay.Function([var_930,var_931,var_932,], output)
mutated_mod['func_933'] = func_933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_957 = relay.TupleGetItem(func_611_call(), 0)
call_958 = relay.TupleGetItem(func_612_call(), 0)
output = relay.Tuple([call_957,])
output2 = relay.Tuple([call_958,])
func_966 = relay.Function([], output)
mod['func_966'] = func_966
mod = relay.transform.InferType()(mod)
mutated_mod['func_966'] = func_966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_966_call = mutated_mod.get_global_var('func_966')
call_967 = func_966_call()
output = call_967
func_968 = relay.Function([], output)
mutated_mod['func_968'] = func_968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_1000 = relay.TupleGetItem(func_611_call(), 2)
call_1001 = relay.TupleGetItem(func_612_call(), 2)
func_673_call = mod.get_global_var('func_673')
func_675_call = mutated_mod.get_global_var('func_675')
const_1004 = relay.const([-9.027252,4.114645,4.701907,-7.484314,-1.453074,-9.102660,-2.668678,-1.499633,-5.637664,0.030472,7.184147,5.218038,-2.119842,9.058465,-1.297685,7.759543,7.798201,5.341802,-2.385756,-0.592044,6.035603,7.762137,-1.923014,7.837877,-3.488517,-8.236766,-2.088080,-3.561746,-5.508579,-9.741246,0.130510,2.614419,-3.551732,5.570807,-2.846607,5.701863,-8.200315,7.255909,-8.212323,-0.104036,5.473436,2.178842,-4.752469,0.771052,9.573418,1.569335,9.343472,7.347113,3.939790,3.475866,0.219362,-7.184079,2.043527,-4.759857,-8.245611,8.416806,0.292593,4.022595,-5.864521,-2.007411,-7.032096,-6.904578,2.056217,6.105724,2.774343,-7.713279,0.773085,-1.238912,4.152583,4.080706,0.961442,7.083224,3.544940,-3.288189,4.347442,1.055358,-8.262075,-6.749382,6.737647,2.500313,-2.208141,2.530968,-5.644409,-7.211328,-8.832422,1.021478,-1.031534,3.857876,-9.131421,-0.505648,-2.435914,3.380440,2.242070,-3.740120,-3.699468,5.387028,-2.660521,-7.673425,0.375468,-1.280500,-7.538285,1.075782,-2.543151,-8.427741,1.788273,7.920556,-1.860032,-4.126375,-8.657425,9.382290,-9.321518,9.470406,5.388276,1.609674,-1.142427,5.681768,-3.941196,-7.895166,0.382008,4.770300,7.120347,-8.933584,9.573234,3.312731,-8.780951,-0.307731], dtype = "float64")#candidate|1004|(126,)|const|float64
call_1003 = relay.TupleGetItem(func_673_call(relay.reshape(const_1004.astype('float64'), [3, 14, 3])), 1)
call_1005 = relay.TupleGetItem(func_675_call(relay.reshape(const_1004.astype('float64'), [3, 14, 3])), 1)
func_556_call = mod.get_global_var('func_556')
func_560_call = mutated_mod.get_global_var('func_560')
var_1013 = relay.var("var_1013", dtype = "float64", shape = (48,))#candidate|1013|(48,)|var|float64
call_1012 = relay.TupleGetItem(func_556_call(relay.reshape(call_1000.astype('float64'), []), relay.reshape(var_1013.astype('float64'), [8, 2, 3]), ), 0)
call_1014 = relay.TupleGetItem(func_560_call(relay.reshape(call_1000.astype('float64'), []), relay.reshape(var_1013.astype('float64'), [8, 2, 3]), ), 0)
output = relay.Tuple([call_1000,call_1003,const_1004,call_1012,var_1013,])
output2 = relay.Tuple([call_1001,call_1005,const_1004,call_1014,var_1013,])
func_1029 = relay.Function([var_1013,], output)
mod['func_1029'] = func_1029
mod = relay.transform.InferType()(mod)
var_1030 = relay.var("var_1030", dtype = "float64", shape = (48,))#candidate|1030|(48,)|var|float64
output = func_1029(var_1030)
func_1031 = relay.Function([var_1030], output)
mutated_mod['func_1031'] = func_1031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_1050 = relay.TupleGetItem(func_611_call(), 0)
call_1051 = relay.TupleGetItem(func_612_call(), 0)
func_929_call = mod.get_global_var('func_929')
func_933_call = mutated_mod.get_global_var('func_933')
const_1064 = relay.const([-2,-4,1,-10,-2,8,2,6,5,-6,8,3,-4,10,10,4,4,-2,9,-7,-5,-9,-8,4,2,8,-10,8,7,-7,-7,-10,8,9,3,8,-2,-7,-1,2,1,-3,-2,-6,-1,9,-4,1,2,-9,6,3,4,8,2,-1,1,-1,-7,5,2,5,2,9,-6,9,8,9,3,-9,9,-8,-6,-3,-8,10,-2,-5,1,-10,-4,8,-2,-6,-6,10,7,-4,-6,7,-7,3,1,8,4,8,7,-10,5,-4,10,-4,1,-1,9,3,4,7,-6,7,3,5,-1,8,8,-7,-5,5,-1,3,4,-7,-3,-2,-1,6,6,5,8,-5,5,-7,3,4,-8,-5,4,1,-6,4,-3,3,-4,9,2,-8,-4,-5,7,-2,-8,-9,6,-10,4,2,-8,9,3,-4,9,-10,-7,1,-6,-10,9,9,-9,2,4,-1,8,4,5,4,10,-9,1,-2,5,1,1,-3,-10,-2,-8,-9,-10,-8,3,-10,-8,-1,-1,7,-4,1,-8,-4,1,5,10,6,6,-6,7,-3,5,5,-6,-3,1,-8,10,9,9,-9,-5,8,10,-2,1,4,-9,3,3,8,2,5,7,1,8,-4,8,6,-7,7,-4,-6,-1,-8,5,-8,-9,8,9,-1,-1,9,6,-9,8,3,-6,4,-5,2,8,8,-7,3,-6,-2,-7,8,8,8,-1,7,7,-7,-4,4,-10,-9,-7,-2,5,1,5,-7,5,1,8,5,9,-10,10,-5,6,-7,6,-7,-3,5,8,-3,1,8,1,-5,-5,3,8,-6,-6,1,-4,5,9,-5,3,-9,-1,-4,-2,3,3,-1,-6,7,-1,3,7,3,7,-2,-8,-9,-7,1,1,5,10,6,4,-9,2,-10,-10,-6,3,-1,6,-7,-2,-2,-2,10,-6,7,10,5,-8,4,10,-8,7,-1,1,7,8,-8,-8,-2,5,-4,-5,-10,6,4,-3,6,-4,-4,-8,-8,-10,-7,-5,3,-8,6,6,10,-9,7,-7,-1,-1,-3,3,5,8,-4,-3,-4,1,-6,-3,10,-1,3,9,8,-8,-1,2,6,10,-4,4,5,5,6,-10,-1,1,-10,7,-2,-8,-6,1,-2,-10,5,4,3,5,-9,-6,-7,-4,9,2,-4,4,-3,-2,5,1,7,-4,-7,10,4,-8,-2,6,4,3,-10,-8,4,-8,-1,1,-6,-10,3,-1,-5,6,1,-9,9,3,-2,2,2,-5,1,-2,-2,-2,-2,10,1,-7,7,7,9,-7,2,5,1,6,-9,-1,-1,-5,-7,10,-10,-2,2,-5,1,2,-3,-5,10,-10,-10,-7,5,3,7,-2,10,-4,-3,-5,-2,8,-5,-2,6,3,3,6,2,-2,3,-5,-5,-9,-9,5,-1,-9,-5,3,-2,-7,6,5,-3,6,10,-2,10,5,4,-3,2,5,-2,1,5,-3,1,7,-6,1,4,-10,3,-6,-7,5,-10,1,7,7,9,-10,-9,-6,2,10,-3,10,8,-4,-6,6,-7,9,-8,5,8,10,6,2,-5,4,3,-3,-10,7,6,-2,-10,-7,9,6,1,7,-1,-5,-1,2,3,-6,2,10,7,-9,5,5,-1,-3,4,2,-7,2,4,-2,9,1,-1,7,3,3,3,-1,-9,-9,-4,-10,5,-1,-6,-7,10,4,9,9,7,-9,10,-9,6,-3,8,-3,3,-4,-6,-4,1,10,-9,-1,1,-1,9,1,5,-6,-7,-7,-3,-9,-6,-9,-1,6,-8,-8,-4,-9,6,-8,5,-5,-3,1,5,-6,5,7,-4,5,9,-8,-10,-8,8,9,-8,-6,-9,8,8,-7,9,8,9,3,5,-3,-2,-3,-4,4,9,6,6,5,8,-9,-8,-10,8,-4,-7,-8,-7,9,-3,7,4,3,-7,-8,-10,10,1,4,-5,2,7,-1,3,10,-7,-10,-10,3,-1,2,7,9,4,-9,4,-1,3,9,-3,4,6,3,8,5,8,-3,1,-4,5,-4,-7,4,-8,-8,2,3,9,-7,-5,-10,-2,-9,-3,10,8,-1,-8,7,-7,-8,-10,-8,8,-7,10,5,8,-6,7,-3,9,-2,-10,-4,-5,-8,3,3,3,-2,9,6,-1,10,-10,5,-8,8,-5,5,-5,2,-8,9,6,8,-1,3,-9,-2,-8,10,-3,4,-3,7,-1,-7,-5,-2,-10,-4,-5,4,2,4,-4,-3,-3,4,-5,5,1,5,-8,7,-7,10,-10,7,10,-9,4,-1,1,4,-8,2,-10,-5,5,-6,-3,-4,1,-2,-1,-5,-4,-5,-4,3,-9,-3,-3,7,10,-8,-10,-5,-4,-1,-1,3,5,-2,-8,-2,1,5,-4,2,6,9,4,6,-3,6,-7,9,6,2,-8,2,2,3,-2,1,5,-5,-4,-9,-1,-2,2,10,-5,-6,7,-4,7,-4,-10,-8,-5,-4,-7,-9,-7,-5,-4,-9,-7,6,2,4,5,8,-5,2,9,-2,-10,5,3,6,-6,10,9,1,4,-1,-3,6,-5,-1,-4,-1,3,-10,7,-6,1,8,10,3,3,2,-3,8,-7,-2,-2,-7,-10,-3,-3,10,5,-5,-5,10,10,-6,2,-1,-2,2,-8,1,6,-5,-5,4,-10,4,5,5,-7,2,-6,-8,8,4,-7,-5,9,3,-4,-3,-5,-2,-2,-10,10,6,-5,-4,-4,-10,-3,5,7,-7,4,7,-10,2,6,1,-3,1,1,2,6,-6,9,5,9,6,4,5,-2,4,-6,-5,-1,-9,-4,10,5,10,-9,-9,-7,-4,-8,-4,3,-10,4,9,2,10,9,7,-7,-7,4,-5,-2,-1,-7,1,-5,-10,-6,4,1,5,5,-3,3,-9,7,-7,2,-9,4,-10,1,-10,2,-7,10,-2,-6,-7,6,-7,9,-2,-3,-1,-1,8,10,-8,-1,-5,9,-6,-2,-5,1,1,-5,1,6,-6,1,-10,1,-5,-5,3,-6,8,-4,-8,6,-4,-4,10,7,6,10,-10,6,-3,-6,2,7,-1,4,5,9,-10,6,-5,-7,-10,-9,-10,-10,5,-9,-9,8,7,-1,1,-4,5,10,-1,-2,-6,5,-5,6,10,-6,2,-1,5,1,-4,-6,5,10,5,-8,3,4,8,-10,7,-7,10,-6,-10,1,-2,-2,5,2,3,8,5,8,3,-10,-3,-9,-7,-10,-2,10,7,2,5,9,-5,-6,2,2,1,8,-10,-7,-10,3,-7,7,-6,-6,-2,-1,-6,5,-10,-3,-10,-4,-8,7,-9,1,5,2,8,4,-4,6,3,-8,-10,-5,4,1,2,1,8,9,-3,-7,-8,-10,8,-2,9,8,-5,-10,-4,-10,-10,-10,-4,-4,-10,7,-1,-10,-2,2,6,-1,-2,-9,-3,-3,-1,-1,-3,-1,3,-1,-4,-7,-5,10,-8,-2,3,9,10,6,6,-8,2,10,-9,2,-3,-2,10,2,2,-10,-5,10,10,9,-3,5,-8,3,-7,9,-5,-10,2,3,-8,-10,2,10,-5,-10,-8,6,-3,1,5,1,4,5,3,-1,-10,4,10,6,5,-4,2,-10,8,-4,-3,2,-8,3,-4,-2,5,6,2,-1,-7,-1,-4,3,-2,4,6,5,3,-3,2,1,3,-5,1,-1,10,9,-5,-5,-3,-6,-4,-1,9,-4,-1,-10,-6,9,-10,8,-6,-3,3,-10,8,-3,5,1,-10,-6,-2,5,-3,7,-9,-5,-4,-6,8,-3,-1,1,2,1,7,-3,4,-8,6,-2,2,8,8,5,1,4,-4,-10,-5,8,-10,10,1,-3,-5,2,2,3,5,6,4,7,-3,6,-10,1,-7,4], dtype = "uint64")#candidate|1064|(1456,)|const|uint64
var_1065 = relay.var("var_1065", dtype = "float64", shape = (660,))#candidate|1065|(660,)|var|float64
call_1063 = relay.TupleGetItem(func_929_call(relay.reshape(const_1064.astype('uint64'), [8, 13, 14]), relay.reshape(const_1064.astype('uint64'), [8, 13, 14]), relay.reshape(var_1065.astype('float64'), [660,]), ), 0)
call_1066 = relay.TupleGetItem(func_933_call(relay.reshape(const_1064.astype('uint64'), [8, 13, 14]), relay.reshape(const_1064.astype('uint64'), [8, 13, 14]), relay.reshape(var_1065.astype('float64'), [660,]), ), 0)
output = relay.Tuple([call_1050,call_1063,const_1064,var_1065,])
output2 = relay.Tuple([call_1051,call_1066,const_1064,var_1065,])
func_1072 = relay.Function([var_1065,], output)
mod['func_1072'] = func_1072
mod = relay.transform.InferType()(mod)
var_1073 = relay.var("var_1073", dtype = "float64", shape = (660,))#candidate|1073|(660,)|var|float64
output = func_1072(var_1073)
func_1074 = relay.Function([var_1073], output)
mutated_mod['func_1074'] = func_1074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1122 = relay.var("var_1122", dtype = "float64", shape = (1, 3, 16))#candidate|1122|(1, 3, 16)|var|float64
uop_1123 = relay.tan(var_1122.astype('float64')) # shape=(1, 3, 16)
func_673_call = mod.get_global_var('func_673')
func_675_call = mutated_mod.get_global_var('func_675')
const_1138 = relay.const([[-3.036390,9.518702,-9.320250,5.461509,-6.100906,-1.242320],[-5.290425,8.025407,1.273583,-3.607166,5.771740,-7.519703],[9.979124,-3.368202,-0.844773,5.005490,-1.194707,1.868083],[-5.463615,-6.912149,-1.388366,-2.489365,9.311953,-7.842677],[-0.637989,8.320226,-7.959238,5.664655,-3.765082,9.889326],[-8.068485,0.803428,6.130863,6.162312,8.760016,6.098832],[-1.214058,-3.374862,7.897273,-1.356289,2.235405,0.492905],[8.145722,6.702356,-2.920199,-0.436880,-3.124838,7.106218],[-6.606619,7.448499,9.870674,0.082529,-3.425516,9.101904],[2.046088,9.510923,4.767656,-9.462242,5.811505,-9.385496],[8.933562,-1.492476,-8.353084,1.449668,-3.851527,-3.224534],[8.145157,-7.832117,2.632784,2.074518,9.805301,7.967445],[-6.221707,-4.976578,-2.888124,3.737024,8.935966,2.572775],[-9.443810,4.786389,0.044334,-6.874886,9.223184,-0.995378],[-9.855457,8.924215,-7.830661,-4.421900,4.231951,-7.001408],[-5.621791,6.637408,3.029480,0.724309,4.760988,-7.393912],[9.008862,-2.616380,3.485998,2.867967,-2.503078,-3.342375],[-7.525763,3.384012,6.272163,6.282349,-7.174425,7.288945],[2.650551,2.188900,5.801302,4.435694,-2.377972,-6.834272],[-8.219519,7.544347,-3.743385,6.436152,-4.502237,-1.020278],[-2.467312,4.776367,-1.779435,-5.477132,-7.748675,7.001347]], dtype = "float64")#candidate|1138|(21, 6)|const|float64
call_1137 = relay.TupleGetItem(func_673_call(relay.reshape(const_1138.astype('float64'), [3, 14, 3])), 1)
call_1139 = relay.TupleGetItem(func_675_call(relay.reshape(const_1138.astype('float64'), [3, 14, 3])), 1)
bop_1153 = relay.divide(uop_1123.astype('float64'), relay.reshape(var_1122.astype('float64'), relay.shape_of(uop_1123))) # shape=(1, 3, 16)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_1156 = relay.TupleGetItem(func_966_call(), 0)
call_1157 = relay.TupleGetItem(func_968_call(), 0)
func_556_call = mod.get_global_var('func_556')
func_560_call = mutated_mod.get_global_var('func_560')
const_1160 = relay.const(-1.622920, dtype = "float64")#candidate|1160|()|const|float64
call_1159 = relay.TupleGetItem(func_556_call(relay.reshape(const_1160.astype('float64'), []), relay.reshape(var_1122.astype('float64'), [8, 2, 3]), ), 1)
call_1161 = relay.TupleGetItem(func_560_call(relay.reshape(const_1160.astype('float64'), []), relay.reshape(var_1122.astype('float64'), [8, 2, 3]), ), 1)
output = relay.Tuple([call_1137,const_1138,bop_1153,call_1156,call_1159,const_1160,])
output2 = relay.Tuple([call_1139,const_1138,bop_1153,call_1157,call_1161,const_1160,])
func_1162 = relay.Function([var_1122,], output)
mod['func_1162'] = func_1162
mod = relay.transform.InferType()(mod)
var_1163 = relay.var("var_1163", dtype = "float64", shape = (1, 3, 16))#candidate|1163|(1, 3, 16)|var|float64
output = func_1162(var_1163)
func_1164 = relay.Function([var_1163], output)
mutated_mod['func_1164'] = func_1164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_1206 = relay.TupleGetItem(func_966_call(), 0)
call_1207 = relay.TupleGetItem(func_968_call(), 0)
func_556_call = mod.get_global_var('func_556')
func_560_call = mutated_mod.get_global_var('func_560')
const_1209 = relay.const(7.413042, dtype = "float64")#candidate|1209|()|const|float64
var_1210 = relay.var("var_1210", dtype = "float64", shape = (48,))#candidate|1210|(48,)|var|float64
call_1208 = relay.TupleGetItem(func_556_call(relay.reshape(const_1209.astype('float64'), []), relay.reshape(var_1210.astype('float64'), [8, 2, 3]), ), 1)
call_1211 = relay.TupleGetItem(func_560_call(relay.reshape(const_1209.astype('float64'), []), relay.reshape(var_1210.astype('float64'), [8, 2, 3]), ), 1)
output = relay.Tuple([call_1206,call_1208,const_1209,var_1210,])
output2 = relay.Tuple([call_1207,call_1211,const_1209,var_1210,])
func_1217 = relay.Function([var_1210,], output)
mod['func_1217'] = func_1217
mod = relay.transform.InferType()(mod)
var_1218 = relay.var("var_1218", dtype = "float64", shape = (48,))#candidate|1218|(48,)|var|float64
output = func_1217(var_1218)
func_1219 = relay.Function([var_1218], output)
mutated_mod['func_1219'] = func_1219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_1327 = relay.TupleGetItem(func_966_call(), 0)
call_1328 = relay.TupleGetItem(func_968_call(), 0)
func_10_call = mod.get_global_var('func_10')
func_12_call = mutated_mod.get_global_var('func_12')
var_1332 = relay.var("var_1332", dtype = "float64", shape = (660,))#candidate|1332|(660,)|var|float64
call_1331 = func_10_call(relay.reshape(var_1332.astype('float64'), [12, 5, 11]))
call_1333 = func_10_call(relay.reshape(var_1332.astype('float64'), [12, 5, 11]))
output = relay.Tuple([call_1327,call_1331,var_1332,])
output2 = relay.Tuple([call_1328,call_1333,var_1332,])
func_1334 = relay.Function([var_1332,], output)
mod['func_1334'] = func_1334
mod = relay.transform.InferType()(mod)
mutated_mod['func_1334'] = func_1334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1335 = relay.var("var_1335", dtype = "float64", shape = (660,))#candidate|1335|(660,)|var|float64
func_1334_call = mutated_mod.get_global_var('func_1334')
call_1336 = func_1334_call(var_1335)
output = call_1336
func_1337 = relay.Function([var_1335], output)
mutated_mod['func_1337'] = func_1337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_1347 = relay.TupleGetItem(func_611_call(), 2)
call_1348 = relay.TupleGetItem(func_612_call(), 2)
func_10_call = mod.get_global_var('func_10')
func_12_call = mutated_mod.get_global_var('func_12')
const_1358 = relay.const([-7.720455,-6.827971,-8.250499,-6.042380,-9.422652,2.924309,3.220162,9.127820,8.020745,8.316469,6.109128,5.435224,-4.302639,-7.357708,-8.152037,-0.373998,4.770888,-9.233109,3.112849,2.413526,5.074344,8.946503,-5.078811,1.745067,4.900140,-2.436681,6.555376,6.711316,-6.319500,2.050906,4.938344,3.397801,-7.836761,6.203796,-6.047672,-2.647003,4.895591,-3.145193,-6.360660,9.616568,-6.625439,-6.207110,0.092853,3.798572,5.175151,1.297614,-3.639066,0.581098,-2.539427,9.600658,5.013802,-5.234520,7.774865,-4.102192,-3.966194,1.692318,6.442385,-9.343454,-8.201674,-2.243806,-8.972640,-9.405631,-6.769851,1.913023,-9.713371,7.224281,-6.138431,-0.671516,-4.338929,-2.816711,8.388027,-9.325926,4.996933,3.745482,-7.221539,-9.298258,8.392981,-2.642822,-9.737262,-7.788150,-5.935238,0.398698,9.389178,-2.644068,-3.928248,-7.588147,4.248999,2.798107,9.492692,-8.580509,-7.851611,-9.951877,3.348637,-8.793376,8.147573,1.889963,-1.785842,-7.776959,-3.296513,-4.574032,3.577530,-0.165420,8.211057,-0.096862,6.553318,-3.757167,2.687306,3.056521,6.792056,-5.121091,4.295613,-9.359224,-3.022837,0.065303,-5.383893,-0.185614,1.646916,-7.927112,-4.198782,7.842071,5.959983,9.867084,2.488038,5.370609,-1.780415,1.116627,5.061792,-1.616290,-5.927553,0.925587,3.495643,9.913056,-8.170880,4.211905,-7.507837,-1.108353,-3.807844,-1.923177,0.475239,5.474801,1.888350,4.088591,-1.661462,9.519007,0.283094,2.880534,-9.340231,8.008229,-6.402626,4.412882,-6.524465,-1.298431,3.483402,-5.065189,9.563853,1.362657,-0.597093,8.511777,-8.650733,9.856114,0.691326,-5.861598,2.252473,5.844664,-4.024240,-6.381540,-6.761401,5.229423,5.351881,-6.067142,6.059652,-6.558414,-9.265732,2.892992,-2.146620,8.232031,0.272845,1.499119,6.392542,1.323529,5.137184,-7.524091,-6.421901,5.102428,1.428385,-2.361877,8.481040,-1.743970,3.158995,-1.647120,1.742085,7.707283,4.512195,6.838687,2.118972,-3.729061,7.443876,8.778981,9.501319,2.070923,-9.249302,9.461499,-9.132326,-3.820267,8.719369,1.786802,-2.010987,-8.902606,1.656666,-6.656863,-2.020032,0.140408,-1.523451,8.473563,-3.712247,-2.050711,3.904543,-9.525171,-2.020801,4.716361,-5.847195,-1.910987,8.918552,-2.415959,-3.642667,-8.628878,-4.657579,-3.802889,-1.455668,-8.360695,2.458304,7.819950,-9.391623,-2.835856,-0.686726,3.498007,5.230209,4.943831,-3.275606,2.357256,7.424110,4.014346,-2.210611,-4.619409,5.710031,6.260482,2.792767,7.458144,-5.256957,-0.152590,3.147424,7.404891,1.031685,-5.271205,4.606817,8.558859,7.675574,-6.492703,-9.110539,-7.918088,8.809145,-4.614357,-3.310601,-6.683356,-8.429377,-9.429924,-7.959112,-9.863300,-4.371275,8.748110,-4.264855,-8.583769,8.160802,7.882008,3.568772,-0.447981,0.106939,-0.092284,-2.914123,3.968025,0.409380,9.648359,5.647471,-3.517495,-0.468961,7.535733,-5.241761,-2.842290,-2.905665,1.096038,6.628974,-1.237381,1.870924,-7.960948,-4.562072,-4.391792,7.563294,0.950365,9.119260,3.006238,-6.701913,-0.005547,-5.503925,-0.775203,0.949408,7.877245,5.462771,8.825293,-8.464975,4.440968,7.951790,-3.146392,4.559307,-6.698924,1.820018,-9.493138,-4.001980,-6.801637,4.031108,-3.384088,0.948543,6.685888,2.656066,0.322065,-4.736449,-6.568431,-7.448069,3.098794,9.304117,-0.141084,6.623137,-1.089469,8.594118,-1.760361,7.493895,1.538851,-1.200896,-8.193759,-4.725242,7.342590,-5.826140,-7.201521,8.627656,-3.909078,4.231523,5.724540,2.510997,1.403340,4.425431,5.700449,-1.421597,9.880299,6.323096,-9.211595,2.762594,-9.523661,-7.497984,-2.916775,-4.699655,-0.979777,6.983360,-9.138365,8.092040,6.521235,-1.082476,9.367869,-9.995576,4.585930,-5.713139,8.292313,-7.216042,4.829154,-8.716554,-2.396993,-7.947353,9.639779,-8.250968,-5.968737,5.649867,-5.679544,-3.986831,-4.736141,-1.111498,-0.315128,2.731709,-5.858140,-6.058497,-3.808490,1.099353,5.773831,1.339462,7.630444,5.658063,7.834251,-8.001503,-1.558404,-7.117490,6.240991,-2.788145,1.967260,2.408208,6.811252,-4.613859,-9.909373,-1.199608,7.779496,-5.210300,-9.628935,4.134464,-9.216410,1.385852,-6.458657,2.186089,1.073697,-5.399706,-7.216449,-4.610354,4.249331,7.608979,7.051961,1.874114,-3.812170,1.159554,6.831734,-1.806728,-8.940233,-8.889071,3.703318,-5.838858,-6.630833,-4.020469,-2.725214,-5.509290,8.834113,-5.747376,-6.054672,5.850779,6.391862,9.227213,4.701471,1.555611,4.807828,4.570448,4.116344,6.978195,-4.239738,-3.763224,9.546692,-3.627995,5.196931,3.122782,-3.057215,-2.302166,9.734418,9.503434,1.169943,1.475934,-6.206326,-3.354905,-1.426628,4.780285,4.944832,-3.630032,6.001981,3.074833,1.058394,-6.522234,7.674502,0.047157,-9.495949,-5.176606,9.798327,-6.905865,-9.087386,-6.581882,6.414841,5.684387,7.382174,6.575984,-4.389671,8.072722,7.263975,6.871082,-2.283627,6.352216,5.880107,7.970943,1.967828,5.798717,-5.097909,6.006623,1.669047,-0.051671,-8.213595,7.564796,-1.051978,-5.589886,-9.740833,-1.952976,-2.573769,7.746656,1.283873,3.039013,6.956811,-6.773639,-4.870148,4.013344,-4.207716,-8.971729,4.183279,2.350320,0.713744,1.468018,-6.915409,-1.345962,7.870235,-2.955518,-2.593575,-6.667876,-7.670331,2.367428,-8.218060,9.769141,-6.289686,4.128182,2.173717,1.033454,-4.240154,5.819283,0.596720,9.339652,9.085785,6.181602,2.075586,9.509723,9.979262,-7.936967,4.441842,-9.275372,-5.685973,0.351514,5.722386,-5.698616,5.686494,-0.983685,2.105981,-2.797436,0.504776,0.709683,3.632144,5.728955,3.613258,-5.769555,0.311285,5.457939,-9.612060,1.665963,8.925475,6.992175,8.454061,1.175243,9.345616,-6.856588,-3.683642,-0.589327,-7.908799,-5.305863,6.673792,1.679067,7.046826,-8.749950,3.555440,5.806004,4.711080,-3.342661,-6.542427,-8.383103,7.653550,5.271346,-9.557242,6.585646,2.276798,-7.378880,-6.909133,3.162254,-5.848764,5.186458,8.047092,8.236031,4.349552,-8.530159,6.206501,1.872633,3.725473,-4.449332,-7.822970,-4.757922,3.699954,2.352193,-9.789008,-6.878029,-3.558124,2.627126,-5.162155,0.279333,-9.035389,-4.513894,-4.538638,-8.852025,-8.481241,1.779542,-7.807361,-8.905727,-6.925718,3.205560,-8.107985,-2.071944,5.680594,-0.354740,-4.660045,9.641769,9.925089,-0.926636,7.291212,0.747641,-0.949910,5.130282,1.978723,-4.151807,2.734603,-4.245797,9.935147,-8.151846,-0.587848,2.782056,-9.092647,6.451341,-2.205985,6.841476,-0.991672,4.471452,0.359736,5.323379,-3.881431,1.982945,5.893877,6.367287,-0.781965,0.915962,-7.076959,2.224765,0.807982,8.697529,-6.871537,-1.059119,1.893780,0.746531,-0.117423,5.908028,0.180521], dtype = "float64")#candidate|1358|(660,)|const|float64
call_1357 = func_10_call(relay.reshape(const_1358.astype('float64'), [12, 5, 11]))
call_1359 = func_10_call(relay.reshape(const_1358.astype('float64'), [12, 5, 11]))
output = relay.Tuple([call_1347,call_1357,const_1358,])
output2 = relay.Tuple([call_1348,call_1359,const_1358,])
func_1365 = relay.Function([], output)
mod['func_1365'] = func_1365
mod = relay.transform.InferType()(mod)
output = func_1365()
func_1366 = relay.Function([], output)
mutated_mod['func_1366'] = func_1366
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1383 = relay.var("var_1383", dtype = "float32", shape = (11, 6, 14))#candidate|1383|(11, 6, 14)|var|float32
uop_1384 = relay.atanh(var_1383.astype('float32')) # shape=(11, 6, 14)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_1389 = relay.TupleGetItem(func_966_call(), 0)
call_1390 = relay.TupleGetItem(func_968_call(), 0)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_1396 = relay.TupleGetItem(func_966_call(), 0)
call_1397 = relay.TupleGetItem(func_968_call(), 0)
bop_1400 = relay.minimum(uop_1384.astype('float64'), relay.reshape(var_1383.astype('float64'), relay.shape_of(uop_1384))) # shape=(11, 6, 14)
output = relay.Tuple([call_1389,call_1396,bop_1400,])
output2 = relay.Tuple([call_1390,call_1397,bop_1400,])
func_1427 = relay.Function([var_1383,], output)
mod['func_1427'] = func_1427
mod = relay.transform.InferType()(mod)
mutated_mod['func_1427'] = func_1427
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1428 = relay.var("var_1428", dtype = "float32", shape = (11, 6, 14))#candidate|1428|(11, 6, 14)|var|float32
func_1427_call = mutated_mod.get_global_var('func_1427')
call_1429 = func_1427_call(var_1428)
output = call_1429
func_1430 = relay.Function([var_1428], output)
mutated_mod['func_1430'] = func_1430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1365_call = mod.get_global_var('func_1365')
func_1366_call = mutated_mod.get_global_var('func_1366')
call_1446 = relay.TupleGetItem(func_1365_call(), 2)
call_1447 = relay.TupleGetItem(func_1366_call(), 2)
output = relay.Tuple([call_1446,])
output2 = relay.Tuple([call_1447,])
func_1467 = relay.Function([], output)
mod['func_1467'] = func_1467
mod = relay.transform.InferType()(mod)
output = func_1467()
func_1468 = relay.Function([], output)
mutated_mod['func_1468'] = func_1468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1365_call = mod.get_global_var('func_1365')
func_1366_call = mutated_mod.get_global_var('func_1366')
call_1516 = relay.TupleGetItem(func_1365_call(), 1)
call_1517 = relay.TupleGetItem(func_1366_call(), 1)
func_1072_call = mod.get_global_var('func_1072')
func_1074_call = mutated_mod.get_global_var('func_1074')
call_1534 = relay.TupleGetItem(func_1072_call(relay.reshape(call_1516.astype('float64'), [660,])), 0)
call_1535 = relay.TupleGetItem(func_1074_call(relay.reshape(call_1516.astype('float64'), [660,])), 0)
uop_1538 = relay.sinh(call_1534.astype('float64')) # shape=(6, 8, 11)
uop_1540 = relay.sinh(call_1535.astype('float64')) # shape=(6, 8, 11)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_1547 = relay.TupleGetItem(func_611_call(), 4)
call_1548 = relay.TupleGetItem(func_612_call(), 4)
func_1427_call = mod.get_global_var('func_1427')
func_1430_call = mutated_mod.get_global_var('func_1430')
var_1557 = relay.var("var_1557", dtype = "float32", shape = (924,))#candidate|1557|(924,)|var|float32
call_1556 = relay.TupleGetItem(func_1427_call(relay.reshape(var_1557.astype('float32'), [11, 6, 14])), 0)
call_1558 = relay.TupleGetItem(func_1430_call(relay.reshape(var_1557.astype('float32'), [11, 6, 14])), 0)
func_1217_call = mod.get_global_var('func_1217')
func_1219_call = mutated_mod.get_global_var('func_1219')
var_1568 = relay.var("var_1568", dtype = "float64", shape = (48,))#candidate|1568|(48,)|var|float64
call_1567 = relay.TupleGetItem(func_1217_call(relay.reshape(var_1568.astype('float64'), [48,])), 2)
call_1569 = relay.TupleGetItem(func_1219_call(relay.reshape(var_1568.astype('float64'), [48,])), 2)
func_1072_call = mod.get_global_var('func_1072')
func_1074_call = mutated_mod.get_global_var('func_1074')
call_1578 = relay.TupleGetItem(func_1072_call(relay.reshape(call_1516.astype('float64'), [660,])), 1)
call_1579 = relay.TupleGetItem(func_1074_call(relay.reshape(call_1516.astype('float64'), [660,])), 1)
output = relay.Tuple([call_1516,uop_1538,call_1547,call_1556,var_1557,call_1567,var_1568,call_1578,])
output2 = relay.Tuple([call_1517,uop_1540,call_1548,call_1558,var_1557,call_1569,var_1568,call_1579,])
func_1592 = relay.Function([var_1557,var_1568,], output)
mod['func_1592'] = func_1592
mod = relay.transform.InferType()(mod)
mutated_mod['func_1592'] = func_1592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1592_call = mutated_mod.get_global_var('func_1592')
var_1594 = relay.var("var_1594", dtype = "float32", shape = (924,))#candidate|1594|(924,)|var|float32
var_1595 = relay.var("var_1595", dtype = "float64", shape = (48,))#candidate|1595|(48,)|var|float64
call_1593 = func_1592_call(var_1594,var_1595,)
output = call_1593
func_1596 = relay.Function([var_1594,var_1595,], output)
mutated_mod['func_1596'] = func_1596
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1617 = relay.var("var_1617", dtype = "uint16", shape = ())#candidate|1617|()|var|uint16
var_1618 = relay.var("var_1618", dtype = "uint16", shape = (13, 3, 6))#candidate|1618|(13, 3, 6)|var|uint16
bop_1619 = relay.left_shift(var_1617.astype('uint16'), var_1618.astype('uint16')) # shape=(13, 3, 6)
func_929_call = mod.get_global_var('func_929')
func_933_call = mutated_mod.get_global_var('func_933')
const_1627 = relay.const([-5,-1,-4,9,-4,4,-9,-3,2,-9,-4,-4,7,-9,2,-4,-6,-5,7,8,4,-3,9,-7,-3,9,-3,-8,-5,-5,-4,-7,8,-3,-7,-6,-2,-6,-7,1,-1,-9,-3,7,5,8,-3,-2,-6,-5,3,-6,2,-8,-6,1,9,-2,-7,4,-8,-3,-7,1,-9,8,10,1,-5,1,5,-9,-1,1,-7,-2,-7,-10,-2,-10,9,-5,2,-1,2,-10,-5,5,9,4,9,5,-2,2,5,-5,10,3,5,-10,-5,7,-3,-6,8,-10,-5,-5,-1,-3,9,-3,9,10,10,-2,-4,5,-3,10,10,-10,-7,3,2,-4,-3,9,-3,-5,-10,-9,8,-2,4,2,-3,10,9,-8,9,-3,1,2,2,-8,-6,1,-1,-7,-4,-3,-3,-9,-6,5,-10,-8,2,-6,9,9,1,1,2,10,-9,4,-6,6,1,7,-10,2,-7,8,-2,-1,-8,4,-10,-7,7,-3,-6,5,8,1,-9,2,1,9,-7,-6,-3,-7,7,4,-7,7,3,3,5,1,-6,9,-3,3,-1,6,-1,8,7,4,-10,9,4,-9,5,3,3,9,10,-7,-10,6,-8,-1,-8,-8,7,-4,-9,-10,-2,-6,-4,-4,-6,7,6,9,-10,6,9,-8,1,-7,-6,-5,-9,5,5,-10,-10,6,2,9,-10,-10,1,5,-2,4,-9,-6,9,4,3,-4,-2,-9,8,6,5,6,4,7,6,-3,10,3,-3,3,2,-10,-8,9,-9,5,-1,-9,4,2,-9,5,6,-9,7,-6,-7,-3,5,2,-7,7,8,4,6,-2,-10,-4,-4,-7,5,10,-10,-9,-7,9,8,3,-6,9,-4,4,-9,2,3,6,5,-2,-1,9,3,-1,6,10,2,3,-2,9,7,-7,-1,8,9,10,-4,5,9,-2,-1,-8,-4,6,-7,-9,8,-5,-9,6,5,-5,7,10,-7,2,5,-10,2,-4,2,-3,9,1,1,3,3,6,-1,5,-7,7,-8,10,4,-7,7,-7,8,-4,5,-4,9,-6,8,-8,8,-8,2,-6,-2,-3,5,-5,9,-1,-7,1,-6,-4,-8,-9,10,5,-5,-8,-6,-6,-2,3,10,-6,-8,3,-5,10,1,-2,-7,5,-9,-1,-6,5,7,9,-1,-4,-3,-5,-4,-4,6,-8,-4,-7,5,-8,-6,-9,3,10,-3,5,9,-4,6,-10,3,-5,10,-2,1,-6,-4,-10,2,-1,2,3,-7,-8,7,3,-5,-9,-2,10,2,10,8,5,8,7,3,5,8,-2,1,-5,6,3,-6,3,8,5,3,-8,-7,5,4,1,5,-7,9,-5,7,-6,1,-2,-5,7,-7,1,1,-6,-5,-6,-10,-7,6,-7,9,5,-3,1,4,-5,4,-6,1,-9,-1,-5,10,2,-5,9,2,-4,-1,-4,4,7,-5,-2,-7,3,5,-8,1,1,9,-9,-5,6,9,-2,-1,-10,2,-5,2,6,7,2,-4,-5,6,1,-9,9,9,3,-10,6,-7,-10,8,-6,-10,4,-5,4,-5,3,6,-3,3,6,-3,3,3,10,-9,-8,-7,2,5,5,3,-3,-10,-5,-6,-6,3,-10,-5,10,7,3,-4,7,-1,9,-2,4,-1,-7,-9,-6,4,-1,-4,-3,2,-6,8,-6,-8,2,7,2,-6,5,-3,10,-6,-6,-5,-3,4,-1,-5,-1,2,-10,1,9,4,5,-6,7,-7,6,2,8,1,8,8,6,5,1,2,5,5,-5,6,-4,-5,-4,-2,-2,-2,8,2,-10,-1,-4,10,-1,9,5,-8,-8,-1,-9,-5,-5,-3,-8,4,1,8,10,-5,2,-7,-7,6,-5,8,-10,-6,1,-6,6,9,-7,3,7,-8,-9,-6,7,2,8,7,2,-1,-5,-3,8,8,-9,1,-8,4,4,-6,3,3,5,-9,5,1,8,-1,-6,-2,-2,2,3,-9,-8,-6,-2,-2,2,5,3,7,10,10,1,-2,4,-4,9,-4,10,-8,2,9,-1,-1,-10,8,8,-7,-9,-3,2,1,-1,-10,6,3,-6,-2,-7,-1,-1,1,6,-10,7,-9,-1,2,-7,2,8,3,-8,-1,10,-5,1,-2,-4,-4,-8,-9,3,-2,2,8,-9,-6,-8,3,-10,-8,-4,10,5,-8,6,3,-7,-2,8,2,10,4,4,-3,8,7,-2,-10,10,-9,5,8,6,2,-1,-1,2,-9,5,-3,5,-6,7,-5,4,-3,-7,-1,-2,-7,9,4,-3,10,-6,2,-4,-10,4,10,-9,-7,6,9,2,9,-6,-3,-5,-9,-7,-2,-9,2,8,-3,6,3,-9,10,-10,5,3,5,10,-10,-4,7,-5,-1,2,-9,-6,-2,5,-8,-4,-1,2,6,-7,-8,9,8,-6,-8,-3,-7,-9,5,3,-9,8,-4,3,2,-6,-4,-10,10,1,4,-5,4,2,-8,-5,-9,-8,-5,3,-2,2,6,10,7,6,-7,4,6,3,2,2,2,6,-10,7,-8,10,2,-9,-3,-2,-7,2,-4,-7,4,10,7,5,3,-1,-2,6,-1,3,-2,-4,1,10,2,4,7,2,-9,3,-9,-4,7,5,7,-2,4,5,4,3,-5,2,2,-5,-10,-3,-5,2,-9,10,8,2,-9,-5,6,-9,-6,2,6,9,8,-7,-10,-4,9,-2,7,-6,5,-9,1,2,2,7,1,-4,-7,1,3,4,-9,-6,4,-1,5,-10,2,6,-3,-2,9,1,-8,-3,8,-2,6,1,1,-9,-6,3,-8,-1,-3,5,-10,10,-1,-10,10,5,-9,-6,-2,7,1,-5,-2,-1,-1,9,-7,1,1,6,-3,-9,-1,5,7,9,-5,-8,5,1,8,-9,-10,2,4,-5,10,1,9,5,1,6,10,-2,5,-3,5,9,-4,1,8,-5,1,2,-4,-6,10,-1,-9,-9,6,9,-4,1,9,4,-7,10,6,8,8,5,9,10,8,-2,1,-8,-10,-3,-10,-8,7,-6,9,-3,9,5,-5,-6,6,9,-9,-4,-7,-2,5,5,8,-7,9,-4,-9,8,7,8,2,-5,-6,2,8,-2,3,-7,3,8,3,10,-4,-7,-2,6,-4,-5,-10,4,10,-10,-5,6,8,-10,7,-2,-10,-1,6,6,-8,10,1,-5,2,-6,10,-7,-5,9,8,-4,-10,3,-2,-6,4,-10,10,6,9,-10,-3,5,-5,1,-8,4,-9,6,5,-6,5,-2,9,8,-9,5,5,-9,6,6,6,-4,4,-8,9,10,10,-1,-1,7,7,-1,3,5,-3,-5,-8,3,8,-2,7,-3,5,4,-2,5,2,-4,-7,8,7,-8,2,-8,5,7,2,-7,-5,3,3,-9,-4,-1,9,1,-3,-2,2,-7,-7,-7,6,8,-8,-1,8,7,2,-3,9,8,4,-9,7,3,2,-7,-7,-2,-7,-5,10,7,4,-4,5,-5,9,7,-1,1,2,4,2,-2,6,4,-3,-9,-10,-8,-4,-7,-10,-10,-7,-6,9,-8,-5,-2,10,-8,-6,10,9,-4,-2,7,-5,4,-6,-3,-2,7,-1,-8,-2,6,5,-5,-5,-9,-10,-8,1,-9,4,-3,-10,2,9,6,8,1,-9,8,-3,-10,3,-10,-2,1,-8,2,5,3,6,5,-1,-9,-3,2,-6,-1,-10,3,-7,-10,9,6,6,9,-9,7,-1,2,-3,-1,9,-8,-10,-3,-5,3,2,9,-1,1,-3,1,5,9,10,-9,-2,9,9,-1,4,-10,5,6,8,-5,-6,-8,-2,10,-6,10,-9,-2,-1,-3,-6,3,4,5,-7,-4,9,-5,-8,-2], dtype = "uint64")#candidate|1627|(1456,)|const|uint64
const_1628 = relay.const([[-6.257423,2.494973,1.998044,-4.187145,-1.374920,7.109138],[-0.348944,-3.948863,1.621338,-8.873616,-4.423653,-8.632604],[-0.223596,-3.903126,0.864904,-8.486732,1.181351,-1.665909],[3.229061,9.417561,5.309757,0.223735,-2.907462,-6.769282],[4.822703,1.315438,7.648003,-3.983380,9.235970,7.571241],[0.579177,2.724730,7.196779,-2.277661,-3.166048,3.553293],[-0.455718,2.634779,-8.398654,-3.440015,4.581832,8.174066],[-1.892441,-1.819714,-2.769324,-9.538258,-0.177933,6.915220],[4.707604,-7.653232,7.486281,1.111023,0.598502,0.682920],[9.223195,1.048511,5.793055,6.754458,-6.742190,-4.320494],[7.258719,-8.908684,-9.809935,-1.278210,7.154396,5.607667],[-8.143249,8.464737,-2.515792,0.042588,-1.837523,-7.258883],[5.373314,1.487168,0.237376,-7.483212,-5.577451,-7.575204],[-8.952377,9.926262,-5.609742,0.727473,6.757192,-5.476028],[3.809054,4.556993,-8.285599,1.489503,-5.589929,0.386758],[-5.914502,-7.053172,-6.430888,3.236807,7.371480,5.482103],[-5.593562,-1.791437,6.958189,0.890241,-9.589068,-8.606838],[-7.734217,-0.568747,8.176412,-3.652757,-7.186196,-1.353173],[-3.467054,0.218033,-9.911707,3.107753,6.137194,4.657759],[-6.166433,1.017778,6.979680,2.798165,-4.926802,-4.217244],[0.094663,5.219434,-8.248158,-2.284848,-1.324750,-5.474482],[-5.124764,0.776107,-0.708640,-6.966406,1.525053,1.760607],[-7.236602,-2.026983,8.405686,-2.677711,7.616909,-5.402448],[8.134063,-6.064584,-7.928245,9.352473,-6.932679,6.617807],[7.769909,1.544668,5.440708,5.438252,4.204479,-8.303085],[8.057628,9.311148,2.259629,-1.283818,6.071780,-6.841048],[3.671547,-7.356759,-0.270443,-6.556251,-8.494795,-8.624991],[4.699037,1.890081,0.616519,7.771537,-5.088260,4.764241],[-8.920119,-0.276989,5.046775,5.361689,-7.714336,-7.974231],[7.696550,-2.740896,2.616836,-5.344180,6.794932,1.218246],[6.327318,3.213208,-1.581328,5.020963,-1.611562,-4.487678],[-5.783887,-9.893917,6.175561,1.005312,-9.025366,-3.232872],[-8.222359,-5.539831,-9.166669,-5.563341,-7.105775,3.832848],[1.078567,0.398719,6.660812,6.154369,2.916291,-9.674024],[-0.216822,-3.735749,-9.312530,-0.962217,3.663557,-5.687656],[5.442933,5.210774,-4.842254,-7.098844,-5.385026,3.153610],[7.365836,5.683910,-2.860965,3.681388,-8.348189,2.953073],[2.978069,8.519689,-4.890308,-1.883524,5.801917,3.371696],[2.743161,7.157511,1.208330,7.117041,6.683642,-9.318924],[-6.476985,-5.818814,3.575822,8.767006,-2.149730,5.325687],[-9.265143,-3.718231,0.989017,0.963828,5.146395,-9.131677],[3.334091,1.197305,3.119695,1.000370,0.925161,-9.974405],[4.782762,5.281013,-3.490869,9.300683,5.739264,-7.658799],[3.357436,0.739727,-5.590604,-3.231523,6.000543,-5.968045],[8.200423,-7.267671,-1.307033,3.940167,2.278002,6.835805],[9.864352,-2.206420,-3.750251,3.512798,1.060007,-2.175986],[1.617741,7.588519,-5.182402,8.243169,1.082508,-9.332343],[-1.499826,-5.191396,4.965565,4.867582,-8.626737,6.558617],[7.838143,-8.961306,2.020846,-9.774602,9.220650,6.460708],[-5.611410,6.525448,-3.785938,0.689495,0.568158,-1.550678],[1.507892,5.118348,-2.046943,-2.258966,-3.485743,-3.921215],[3.187959,-4.342488,-3.405294,-7.973944,-0.493821,1.546695],[8.727370,5.120872,-0.465709,1.004499,2.756078,9.647511],[9.400745,9.853811,-3.408072,1.295480,8.633835,6.165812],[3.613956,-2.916451,0.973518,9.088951,-5.287863,-5.999317],[-6.966809,-7.842111,-9.236763,8.346931,0.853693,4.946852],[-7.582358,7.715037,-2.528913,-5.904801,-5.274469,3.238618],[-5.835766,-7.063575,7.480858,0.830745,2.540535,-4.547196],[5.996188,3.651819,-7.663608,-0.246102,-7.808624,-0.273774],[-7.203825,-0.958102,2.684806,0.283190,-3.138407,-9.989975],[-3.840525,-5.893976,3.466652,7.859706,-2.543972,0.027941],[-1.861440,-0.756009,8.709355,4.511455,2.763862,-4.431364],[-6.234678,-7.680102,-9.605737,-1.444242,-7.186778,-9.442395],[9.237427,-3.423652,-3.426378,3.727027,5.073919,2.488204],[-6.821263,0.021043,7.867324,6.360014,2.850957,-0.522385],[-1.489369,-5.763603,5.831594,4.338626,-8.332417,1.771249],[5.622622,2.805100,-0.804949,-2.798301,-1.745421,-8.086910],[1.515148,2.725234,8.265550,-5.524940,-0.046525,-3.749183],[6.569426,0.693442,6.638918,6.912608,9.636855,3.556998],[6.993090,-6.173162,4.788048,8.750112,-1.629983,9.541719],[3.555435,-6.720761,-1.389737,2.608784,-0.586918,-8.434823],[5.821270,-4.200590,-1.106793,-2.258665,3.022586,1.892348],[8.374717,-6.692206,9.715722,0.369183,8.745945,8.646401],[-4.863529,-2.888019,2.055820,-0.851735,-2.244073,9.042996],[0.456819,-0.703434,-0.038104,7.226355,4.686487,-1.996961],[-3.047383,4.545723,0.762086,7.235001,6.383397,-2.579507],[-9.458283,-1.895371,5.502893,-0.408557,4.573478,-6.383690],[-0.823579,-2.921530,5.498145,4.400788,-0.973898,4.018651],[7.323099,-1.849336,-6.210045,5.199464,7.976809,7.940003],[7.405801,2.104667,0.116040,-5.091798,-2.335407,5.738965],[6.606373,7.809934,5.538506,3.387397,5.323250,8.787322],[-6.130366,2.767700,-4.897808,1.833222,-9.598362,3.058056],[-8.558196,0.682161,-9.304196,-2.527369,4.803852,6.552648],[-9.589017,4.814456,-9.209289,-1.042743,0.283482,8.725342],[-6.946673,8.163315,2.349643,-7.503558,8.642986,-7.878509],[-2.144657,1.639676,-1.128600,-8.838928,-4.250763,7.799531],[7.699956,5.569150,1.716019,-8.449946,8.513517,-7.969005],[-1.221801,-6.124083,-6.894153,8.637701,3.698025,5.524839],[-0.365627,3.426609,2.446082,4.231350,-8.134033,-5.810451],[7.759140,3.607172,-1.035791,-0.241899,1.287683,-9.349708],[2.929981,-1.892168,9.024260,1.436096,-7.435523,-6.523663],[4.405249,-0.741489,-1.759442,3.225966,0.499084,2.430145],[-3.681668,4.746732,-2.625125,1.567325,6.521058,5.043960],[2.699638,-4.392885,6.157034,-0.928904,0.232694,-6.312211],[3.424538,9.190825,-3.515101,-0.340019,-8.353744,-8.563259],[-9.970099,6.485226,-0.632295,-2.268446,0.101395,3.593262],[3.724724,1.876674,-4.534868,-8.159996,2.712718,-8.816372],[-6.515384,-6.033274,-7.588626,-0.220585,-9.992462,2.691014],[-0.090029,8.876330,-2.361769,-7.285092,-2.812957,-9.677489],[8.194811,-5.128389,6.678673,-6.069456,1.272427,-6.699332],[-4.197005,-8.424466,-3.480609,6.366528,5.012118,-0.873355],[9.574487,2.958673,-0.199195,-6.478007,5.573012,-5.100286],[7.493760,-6.281819,5.309946,8.382531,5.816236,1.217223],[0.908014,-7.335141,0.907612,-7.476294,3.244380,-8.203245],[-5.709307,7.627184,3.427223,-1.081912,7.005466,0.825756],[7.661233,-9.039976,6.725979,9.320716,-5.662802,6.680473],[-4.368469,-2.838868,-8.672749,-2.795769,0.701494,-4.054252],[8.425568,5.769758,0.874709,-3.818802,6.240139,-9.310210],[-5.655903,2.248684,9.141452,-7.487977,6.662815,-1.189234],[4.991830,-6.492010,-0.735746,2.009851,3.631827,-8.914752]], dtype = "float64")#candidate|1628|(110, 6)|const|float64
call_1626 = relay.TupleGetItem(func_929_call(relay.reshape(const_1627.astype('uint64'), [8, 13, 14]), relay.reshape(const_1627.astype('uint64'), [8, 13, 14]), relay.reshape(const_1628.astype('float64'), [660,]), ), 2)
call_1629 = relay.TupleGetItem(func_933_call(relay.reshape(const_1627.astype('uint64'), [8, 13, 14]), relay.reshape(const_1627.astype('uint64'), [8, 13, 14]), relay.reshape(const_1628.astype('float64'), [660,]), ), 2)
output = relay.Tuple([bop_1619,call_1626,const_1627,const_1628,])
output2 = relay.Tuple([bop_1619,call_1629,const_1627,const_1628,])
func_1638 = relay.Function([var_1617,var_1618,], output)
mod['func_1638'] = func_1638
mod = relay.transform.InferType()(mod)
mutated_mod['func_1638'] = func_1638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1638_call = mutated_mod.get_global_var('func_1638')
var_1640 = relay.var("var_1640", dtype = "uint16", shape = ())#candidate|1640|()|var|uint16
var_1641 = relay.var("var_1641", dtype = "uint16", shape = (13, 3, 6))#candidate|1641|(13, 3, 6)|var|uint16
call_1639 = func_1638_call(var_1640,var_1641,)
output = call_1639
func_1642 = relay.Function([var_1640,var_1641,], output)
mutated_mod['func_1642'] = func_1642
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1660 = relay.constdtype = "float64")#candidate|1660|(15, 10, 16)|const|float64
var_1661 = relay.var("var_1661", dtype = "float64", shape = (15, 10, 16))#candidate|1661|(15, 10, 16)|var|float64
bop_1662 = relay.floor_divide(const_1660.astype('float64'), relay.reshape(var_1661.astype('float64'), relay.shape_of(const_1660))) # shape=(15, 10, 16)
output = bop_1662
output2 = bop_1662
func_1668 = relay.Function([var_1661,], output)
mod['func_1668'] = func_1668
mod = relay.transform.InferType()(mod)
mutated_mod['func_1668'] = func_1668
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1669 = relay.var("var_1669", dtype = "float64", shape = (15, 10, 16))#candidate|1669|(15, 10, 16)|var|float64
func_1668_call = mutated_mod.get_global_var('func_1668')
call_1670 = func_1668_call(var_1669)
output = call_1670
func_1671 = relay.Function([var_1669], output)
mutated_mod['func_1671'] = func_1671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1365_call = mod.get_global_var('func_1365')
func_1366_call = mutated_mod.get_global_var('func_1366')
call_1693 = relay.TupleGetItem(func_1365_call(), 2)
call_1694 = relay.TupleGetItem(func_1366_call(), 2)
output = call_1693
output2 = call_1694
func_1699 = relay.Function([], output)
mod['func_1699'] = func_1699
mod = relay.transform.InferType()(mod)
mutated_mod['func_1699'] = func_1699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1699_call = mutated_mod.get_global_var('func_1699')
call_1700 = func_1699_call()
output = call_1700
func_1701 = relay.Function([], output)
mutated_mod['func_1701'] = func_1701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_1730 = relay.TupleGetItem(func_966_call(), 0)
call_1731 = relay.TupleGetItem(func_968_call(), 0)
func_1592_call = mod.get_global_var('func_1592')
func_1596_call = mutated_mod.get_global_var('func_1596')
const_1735 = relay.const([-2.900838,-8.178265,8.679234,-3.492820,2.376683,3.783093,-5.522245,2.021735,-6.725978,-3.551763,0.896754,-5.427553,-8.754967,-2.735561,8.442752,-3.299843,4.510672,4.976181,-6.823071,0.349389,-1.691185,8.428961,5.488760,-5.934250,-0.741348,-9.943005,-7.267001,-2.042627,0.512048,-5.589181,2.308112,-2.225031,2.785299,5.086530,0.932514,4.051865,-1.793199,3.576684,-0.405424,9.804194,-2.608948,-5.725089,-0.096994,-5.925234,-8.553917,-1.375262,1.678989,-3.935912,-2.082345,-8.355780,-4.236937,8.410802,-4.695454,6.354217,-2.201096,0.222774,-9.070951,3.581325,3.072316,-6.330411,-8.284937,8.963661,0.532514,-0.182688,-8.450658,-9.774586,-6.787316,4.396278,-3.956077,5.020600,6.318825,5.621389,1.169312,-2.323436,-7.793086,-8.783963,3.224451,-7.160275,1.920345,-2.183544,9.491808,1.834437,-8.425600,1.217689,7.848211,4.937195,9.537471,-6.803684,3.887558,3.329070,2.863245,-1.868805,-8.519967,2.875846,1.365818,2.421585,-7.921601,-6.599358,5.873327,6.116432,3.473779,9.868721,-1.590083,4.675722,-2.314178,9.347516,-1.912825,-0.227228,6.645569,-8.822985,7.072980,6.779861,-0.265379,-4.540391,7.652606,-4.525046,-5.261357,-6.329307,7.156984,-2.688005,-7.734638,0.753530,6.372343,2.391786,-8.677503,6.922424,3.597079,5.662632,-3.455260,3.341445,-2.871101,-0.737041,7.199796,7.612143,-8.090489,-7.102237,3.257761,3.198766,7.361810,1.072993,6.286812,6.986033,-9.989897,-8.806077,-5.928860,-3.662750,-9.483368,3.062599,9.436794,-5.586949,-4.671501,1.038413,7.241489,-4.825450,4.301242,-9.344555,-7.139987,-4.387580,-0.013116,-1.307903,-7.564867,5.606174,9.641490,4.120796,8.806393,0.003072,-9.323539,-6.408493,5.947588,5.008843,-3.995302,5.589967,1.678419,0.146955,0.769474,7.597847,5.517301,-0.006770,4.444733,2.599977,1.779099,0.236235,1.098701,8.587463,-6.077465,-4.391444,-4.901798,-7.610784,2.469338,-3.922086,4.731570,-9.173778,-0.304197,4.590461,-9.697003,2.519878,3.912862,-1.097707,-4.130258,-4.439042,-8.485888,5.359550,-6.086464,-5.041890,-5.197247,-6.495671,-2.005345,-9.716295,8.055241,1.514859,-2.090874,-8.027095,0.783809,8.941993,-9.028985,-3.526094,-1.372176,-8.431904,9.075889,-5.253362,2.889434,7.381524,4.507487,-6.767556,-1.584712,1.427769,-9.064968,-5.695282,-3.895250,2.214288,3.976181,8.250470,-8.420925,8.434034,-7.508120,1.945755,-5.641596,-3.223625,-2.073484,5.492868,-3.970829,4.883730,-4.372708,-1.420109,9.678907,4.751892,1.661406,-0.054707,-9.903355,-0.220565,5.810829,-8.487927,-4.607091,-9.200409,-8.939036,5.795180,-7.081599,7.588177,7.362342,5.406223,-6.694694,5.220592,9.271984,2.187665,4.385121,-9.861604,4.046796,3.071427,0.007499,-0.448418,2.992868,-4.899817,-4.221173,-5.183054,1.151428,2.875128,-9.569058,-8.764015,-5.634944,-1.086725,7.720853,6.113869,9.751696,-0.192344,-7.776142,-0.029920,3.780462,8.163304,9.266286,5.874223,7.613321,-0.038414,7.512632,3.451994,-5.999451,-8.715866,-1.957986,-8.406658,-3.383225,3.517824,2.309184,-4.181610,-7.372429,-6.070789,1.898833,5.911102,-0.646089,-8.567820,-3.520464,-2.890016,9.284439,-6.482942,-9.160789,-6.951644,1.464149,4.343368,5.933123,5.352643,5.585961,9.841375,2.467706,4.844157,-2.606786,-0.937425,5.803521,0.307176,5.533127,-1.699042,-5.936596,-5.369039,-7.141634,-6.168005,4.898606,-3.792600,-9.323467,5.142460,-9.308745,0.179046,-9.147470,7.501660,-2.735361,1.717311,-1.531161,1.431040,-0.609577,-3.811028,1.071098,-3.971828,4.985582,3.307625,2.404684,9.599838,3.987775,-6.687090,-2.117364,6.874085,0.494147,-4.534804,6.539880,-7.328569,6.710540,-4.339589,-5.045147,7.403785,0.613681,6.510614,1.072583,-7.021166,2.190000,3.940343,-5.240927,8.337232,8.892383,3.000059,5.600483,-3.309989,7.117641,-7.403148,3.364633,9.801793,-9.365576,3.477160,8.741860,6.329437,6.153473,8.615561,1.792340,2.369336,-2.889019,8.452563,-5.783289,1.493454,0.559148,4.136759,4.659285,9.934200,7.564180,-7.545849,9.316844,-4.067362,-3.282473,-4.956159,-6.032733,-7.877457,5.017621,-0.144792,2.382460,1.055118,8.395800,2.837029,2.495121,8.818904,-1.091027,4.087355,9.724191,-1.425378,7.637805,3.884095,-4.962111,5.541741,-0.795152,7.788010,9.607810,-7.345480,-9.241345,5.826030,-4.630478,-5.792589,-0.996529,-5.836970,4.231523,6.652474,-6.881258,-9.430571,-9.427490,-2.230878,-4.528176,-2.940787,-1.176703,-0.141321,6.582168,-3.444381,-8.638691,-3.367814,-2.236906,-0.184529,5.670105,5.393605,4.299872,-5.618610,4.709073,-0.552607,-4.938688,6.652431,9.674793,3.138059,5.325651,-1.879772,8.693887,0.815852,-4.302107,4.685976,9.338481,8.408035,9.741963,0.110217,-5.673638,-5.091355,-6.672794,2.079413,2.121520,-6.370174,-0.515585,1.262474,7.017655,9.400848,-0.674924,8.860979,9.017393,-4.888748,-0.006054,8.281708,7.086956,-6.854051,0.711698,7.024306,-9.694937,-6.940947,6.219872,-6.679539,-7.436468,-5.983148,0.585786,-8.348106,-5.074980,9.003542,-9.286189,8.406456,-1.503018,-9.912798,1.191530,-2.193191,6.346649,-6.188197,-3.779684,-9.648249,-1.598743,-0.657083,-7.524940,2.829897,9.262773,-4.954248,1.865073,-2.989469,4.984671,-0.371415,-3.911762,-0.778946,9.930104,-2.355916,-7.004343,-0.819278,3.244099,-5.610319,9.727438,-9.963175,-4.789035,1.378606,-8.510225,3.528496,-0.890334,-8.849407,-4.041215,-8.604700,7.878300,-8.397215,5.418773,6.257629,4.579481,6.483340,0.456160,8.049355,-8.954875,9.875964,-0.396247,-5.980256,-8.254286,-2.396740,0.030802,-7.343805,4.900837,-4.147474,5.422289,-2.587914,2.758940,-2.722410,3.784146,-4.496001,-5.331073,8.288435,-8.232778,2.060207,-0.971497,-0.679680,-2.080155,1.261100,7.969250,8.326943,3.561500,4.378250,3.882503,3.269724,7.832837,-2.486037,7.169326,7.539997,4.969302,3.622706,-4.465146,2.183339,-0.032826,-4.693148,9.914697,8.906321,0.660559,3.387369,-2.237574,-4.915436,1.884007,9.678913,-9.148460,-6.138875,6.695643,0.222650,1.230397,-8.841270,5.731918,7.418236,-9.371160,8.467973,6.957412,-6.721549,6.416679,-6.120118,6.739880,-7.209877,-6.112690,6.477414,-8.967779,1.687610,-3.458770,8.045080,-9.776612,-3.343845,5.100486,3.196145,-0.932440,-5.780007,-2.736809,-4.289752,-4.763466,5.660587,-8.006833,-4.931702,4.519651,-4.305630,-8.792468,-6.994913,0.607543,1.128026,-8.766060,7.143314,9.894798,6.451055,-8.510881,4.113574,-0.041472,1.879609,-8.541585,0.676936,5.798730,5.878805,8.792236,2.497291,-7.768999,-5.700346,6.299150,0.159443,4.185003,-3.668754,9.073631,1.317163,-5.566950,-2.835112,-0.976024,-4.318479,1.250771,9.078113,2.623637,7.257209,-2.032465,3.298147,-5.973057,-6.434217,4.316446,0.405596,-4.444763,-5.060163,-7.936451,8.720688,-1.557022,-0.428762,2.809827,-6.420345,-8.322694,-8.296478,1.501053,-7.827196,3.493743,-8.307015,0.842804,0.477105,-9.089534,-5.732660,-1.115177,5.279869,-9.751036,-3.509110,-8.354083,-5.105321,9.326771,4.782009,-7.049461,-6.165695,-7.518425,-9.660598,-6.091107,7.940617,6.276105,0.897967,-8.921527,-4.580042,6.088602,-1.213180,-6.550713,-2.398277,-4.640790,-2.095435,-9.752587,-3.877438,7.328592,-3.933818,-8.164312,-5.789952,-3.341409,7.696702,3.423014,4.469300,-3.665384,-2.096505,-0.888878,-0.499857,-6.989219,-9.946381,4.347424,8.777270,7.585276,7.779441,3.150440,-8.526603,4.437012,-4.417209,9.897680,2.808888,-7.663979,-9.076278,8.928768,4.290967,-4.488322,-1.416576,-5.389438,-9.251512,7.214641,3.334963,-9.470114,-7.156910,7.489843,-2.820099,-7.232799,-0.698616,4.561373,-6.294046,-0.682841,-4.872067,8.806029,-2.850940,-0.196991,9.374715,-2.313149,-0.701631,-2.659055,3.542563,-8.049276,2.148429,4.259695,0.849378,-0.901450,4.091365,9.348501,0.889426,-6.583752,-8.249477,0.077507,3.286865,-0.787724,-2.250108,-6.753998,-8.823283,6.690328,-9.087702,2.442898,3.625970,3.454764,-1.538443,-7.721793,0.257014,-8.689510,6.367436,1.973376,0.340692,-9.087275,7.183030,1.186690,7.290431,1.694538,-4.663952,3.715977,-8.778643,-4.580533,9.017006,5.480436,-4.555358,-8.125600,7.618405,-7.466338,3.550524,-5.726427,5.647751,-3.405671,-5.273139,-8.417210,7.577995,-8.176582,-8.303799,-5.667269,0.297006,-6.158807,9.132230,4.243096,9.738675,-8.462370,-8.217965,6.245007,-5.960393,9.915584,2.943433,1.130722,3.390400,-0.980329,9.228172,-9.579156,-8.372117,-4.003261,9.142722,-7.241519,2.237690,-0.986754,2.312228,3.960086,3.925002,-9.972987,6.398569,5.340074,5.211642,-5.998224,7.140469,2.739396,-4.878368,2.818804,6.457992,-4.474232,-8.824400,2.672982,-5.541029,-9.058956,6.908872,-1.498334,-7.749515,1.197341,4.309935,-9.371720,-6.634364,5.512858,8.896897,6.012100,-8.074384,2.128260,-2.706905,3.320372,-8.204589,-9.467482,-1.228002,-5.872691,2.501075,7.349488,9.136846,0.152977,9.976178,-2.351615,6.555016,-4.290847,7.412214,0.689752,-1.505264,-4.582312,-2.605138,-5.179415,9.900326,1.798568,-3.969660,-9.599792,2.591276,-5.530792,-8.079093,3.191127,-4.737339,7.585807,-2.132084,3.326109,0.108849,1.683957,-9.350060,3.519595,-9.434893,-9.515197,4.827789,-8.222512,-9.962705,4.049183,-0.209748,3.008492,-1.121988,-5.326850,5.731349,4.999920,-8.246778,-1.527903,-5.484916,-7.729601,-6.148133,-7.057190,5.105841,-9.035006,0.688647], dtype = "float32")#candidate|1735|(924,)|const|float32
var_1736 = relay.var("var_1736", dtype = "float64", shape = (48,))#candidate|1736|(48,)|var|float64
call_1734 = relay.TupleGetItem(func_1592_call(relay.reshape(const_1735.astype('float32'), [924,]), relay.reshape(var_1736.astype('float64'), [48,]), ), 5)
call_1737 = relay.TupleGetItem(func_1596_call(relay.reshape(const_1735.astype('float32'), [924,]), relay.reshape(var_1736.astype('float64'), [48,]), ), 5)
output = relay.Tuple([call_1730,call_1734,const_1735,var_1736,])
output2 = relay.Tuple([call_1731,call_1737,const_1735,var_1736,])
func_1739 = relay.Function([var_1736,], output)
mod['func_1739'] = func_1739
mod = relay.transform.InferType()(mod)
mutated_mod['func_1739'] = func_1739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1740 = relay.var("var_1740", dtype = "float64", shape = (48,))#candidate|1740|(48,)|var|float64
func_1739_call = mutated_mod.get_global_var('func_1739')
call_1741 = func_1739_call(var_1740)
output = call_1741
func_1742 = relay.Function([var_1740], output)
mutated_mod['func_1742'] = func_1742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_1763 = relay.TupleGetItem(func_966_call(), 0)
call_1764 = relay.TupleGetItem(func_968_call(), 0)
output = relay.Tuple([call_1763,])
output2 = relay.Tuple([call_1764,])
func_1772 = relay.Function([], output)
mod['func_1772'] = func_1772
mod = relay.transform.InferType()(mod)
mutated_mod['func_1772'] = func_1772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1772_call = mutated_mod.get_global_var('func_1772')
call_1773 = func_1772_call()
output = call_1773
func_1774 = relay.Function([], output)
mutated_mod['func_1774'] = func_1774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_1809 = relay.TupleGetItem(func_611_call(), 2)
call_1810 = relay.TupleGetItem(func_612_call(), 2)
func_632_call = mod.get_global_var('func_632')
func_635_call = mutated_mod.get_global_var('func_635')
const_1814 = relay.const([0.019978,2.493567,6.589496,8.887140,7.881648,9.867168,-4.376959,8.437113,9.922607,2.386430,4.694859,2.991304,-2.838056,9.623360,5.746643,4.776731,-7.318396,0.342177,3.298239,-7.632033,1.453505,-1.141150,6.726174,-7.768111,7.459332,-3.574039,5.603314,-1.978690,5.648092,-2.396976,6.409934,-4.566676,-3.476302,-8.664892,-8.571568,5.697219,-8.428014,9.094392,8.150596,-0.127347,7.696744,6.291501,-3.936347,-1.837561,9.208003,-4.149705,-1.972047,-6.283101,1.035297,3.206498,6.228356,9.743113,-5.658372,8.111074,-7.028354,5.907577,0.774777,-2.957726,-5.863587,3.313096,6.079498,-0.447484,-8.289518,9.575478,8.062622,8.598963,9.398019,-4.001385,8.676025,1.156757,-4.041756,-4.515439,7.937254,9.345878,4.721459,5.526445,1.365610,2.210740,6.021216,6.729747,1.759102,3.894444,0.803452,-8.213850,-7.748095,-8.497627,-5.377498,-0.086650,0.696912,2.845042,-0.201608,-2.439976,9.006383,-2.037131,-2.765556,5.227736,-7.907032,-2.808586,5.373304,0.624843,-8.219224,-7.879260,-2.173906,-2.252585,-9.372601,-1.490089,-4.740911,-3.838734,-4.454627,-7.297612,-9.033752,-1.663686,5.755810,-2.835566,-7.886058,-8.273046,4.717665,2.219037,1.229903,-6.138615,-0.186455,-2.661099,0.810396,-4.796257,1.365174,-4.066872,-1.545819,3.178066,3.079974,-9.997728,8.625865,-9.853645,3.583742,-6.001869,5.116805,5.237518,9.052005,-8.434169,-3.273093,7.220245,-6.345426,-3.360423,-3.605228,-2.884831,4.224302,5.141722,7.419116,-9.699132,-4.907045,6.233859,9.828496,4.470385,-9.196080,8.686249,-9.470377,8.160978,-9.354979,1.654111,9.673661,-3.180944,3.055801,4.002413,7.968507,9.479737,-0.150015,6.733217,1.405526,-8.963884,-3.263948,6.053042,-5.209148,5.174819,-2.627402,-3.141491,-9.626056,-2.020478,-3.363627,-9.154713,8.618986,1.563890,-3.874795,3.440576,5.719692,-4.467894,2.584341,-2.099875,-9.981599,-5.736089,9.470247,-6.405891,1.168982,8.782316,-0.522564,2.555839,4.207225,7.839187,9.754017,-2.429468,-0.038750,1.525284,-7.393476,-9.703065,6.911340,9.230025,9.340156,7.595541,-6.940917,-6.116787,-5.530240,2.570834,4.458051,-8.880502,0.867252,5.304847,4.440321,-0.924469,0.620154,-4.085723,5.364767,3.494793,1.172765,-7.245849,5.627019,-7.958659,-6.687984,0.340585,-4.135414,5.665585,-7.661507,4.701453,7.195729,9.477271,-9.769631,6.308553,4.743676,-7.193833,4.140027,5.715783,-4.974905,1.452121,9.815802,-1.371547,-4.866712,4.025414,-9.257926,-2.440537,-1.394748,-8.078324,5.607826,7.762734,-5.698745,3.555559,-7.171351,-3.167007,-6.166873,8.262335,2.290871,3.910171,4.910373,-7.732220,9.842946,5.700067,8.143417,2.611531,-2.196214,6.348226,-2.955985,-9.574381,6.663402,6.985522,-2.189504,0.949270,-1.420158,7.997375,-1.808027,-9.543162,-5.078744,5.915821,4.464876,-6.610248,9.148255,0.403665,-0.847270,-9.813228,-2.671019,4.326470,3.831057,-2.171713,9.863694,6.018704,-5.688953,-2.673719,-9.502378,-1.739155,-4.196500,5.346984,-4.844202,6.605141,-2.879488,3.133159,-6.868923,-3.848160,6.394734,0.945004,-0.364736,-2.174323,-0.847440,-2.580874,6.363010,1.826535,9.880548,0.926590,9.558160,9.029393,8.412196,-2.399448,4.724513,7.261311,-9.501495,-0.721929,8.462260,8.780438,0.612475,-3.683673,-0.863103,-6.151799,-7.032459,8.137169,-2.922530,-4.140325,7.838943,6.036885,1.071050,-8.163724,-7.886089,-4.047266,4.020735,8.156267,9.799602,0.455006,9.909738,-3.637889,-4.207502,8.955744,-5.682965,-1.167893,9.514136,-7.473372,-6.239417,-2.887625,3.675866,-9.879339,-1.577798,2.779892,-7.001268,5.013402,-1.883249,2.032388,7.492074,-3.072394,-8.407889,-2.786335,-2.778312,-1.335287,1.519311,9.378152,-9.465415,4.468408,-5.933451,-1.051041,-6.241513,-6.043150,4.387803,1.273164,1.880755,-4.941689,-4.858697,0.634976,-2.848271,3.731939,-3.599860,-7.445555,-9.852299,6.895092,3.462931,4.034342,9.110469,-5.927325,-5.266908,6.660254,4.936409,6.126166,-4.255543,2.174188,1.818214,-3.859017,6.816458,-4.994870,6.125603,-4.761501,8.899090,-1.633854,-1.193449,-4.522397,-6.305842,-1.265182,0.448487,3.937362,-4.306993,-2.147175,6.722833,9.154097,-0.870239,-6.132325,5.941074,-3.251484,7.710061,0.769123,7.521065,-2.239529,1.417511,-1.329557,-6.549532,8.935088,-7.555316,-3.749876,-0.946289,-3.466747,7.889167,-7.182347,-0.118614,-4.055270,9.096389,1.712835,3.969111,-5.853357,-9.021740,3.270999,-9.267066,1.404852,5.762592,-0.311822,0.997826,-5.149538,-2.903839,5.930361,5.403370,-1.042442,0.601520,2.383077,8.626089,2.867847,-7.805350,-0.281531,8.019924,4.926691,-2.545198,1.542875,6.915136,-5.988116,-8.758300,-3.266205,6.259482,5.886328,-1.458991,3.882978,-4.625150,5.453901,-5.866603,-9.143621,9.655231,-8.836622,4.566805,7.403112,8.819258,-5.606501,2.418765,6.284659,4.295072,4.032454,0.945553,7.641144,2.193432,2.233198,4.935015,-7.891438,8.421724,-8.013539,-6.554584,3.419572,9.956775,2.820559,-7.489797,-4.551858,6.660379,2.545409,-0.210109,5.340194,2.849538,6.987377,-8.739678,8.440590,-1.457567,-7.679746,8.730659,-5.030978,-4.447866,7.330399,-1.173044,-3.997721,8.134395,7.992321,7.574487,-5.891858,5.008742,2.749001,0.048791,7.687024,-1.853990,-5.901871,-8.272512,-0.061666,-6.923314,5.810308,4.222483,7.386673,-9.640163,3.352037,2.369794,-0.844174,5.092253,-2.528326,2.514288,2.896872,6.353541,4.355630,-0.536899,-5.241489,-4.405812,-0.240181,-7.008629,-8.272609,-7.230827,-7.050378,9.802587,-3.836741,-0.472156,3.483053,-6.043774,0.282445,-4.944620,6.465526,-8.148176,-9.186641,-8.670756,0.544208,-9.227971,1.427200,5.089347,-4.548880,-2.794272,8.632322,9.528105,-6.090646,1.144487,3.260504,6.438840,0.311353,3.167059,-5.071449,-6.726767,-5.892111,7.888607,3.635680,4.536162,-9.671029,-8.305638,-7.591007,-2.111683,7.415445,-0.811785,-7.968954,-8.487180,5.885022,1.731186,6.314057,6.727703,-8.292755,3.679275,7.895010,9.769242,-4.342745,-5.918368,0.389986,-4.161020,-2.540488,3.127156,-3.066197,-3.075677,3.093735,9.554616,3.765322,-2.819093,3.770356,3.607083,-1.346732,-2.845567,-7.428928,5.950169,-9.485192,9.056151,-2.337318,6.827430,-4.135108,3.758568,5.627627,-3.356753,8.224454,-3.932996,-0.360476,-6.025350,-0.745824,7.577209,7.697154,-2.501357,-6.687548,-8.927865,-2.441800,5.255722,-2.036186,0.591151,3.835883,-0.992620,-6.947639,-9.316123,1.950326,-3.056799,9.937215,-1.890577,-5.119274,-0.494303,-4.256904,-2.101832,-6.458015,2.120749,-0.198271,-0.051259,-5.926693,-5.197286,0.066231,2.215058,0.101837,-0.016137,-9.602300,7.419372,7.272134,5.651880,8.371793,3.226056,-5.522828], dtype = "float64")#candidate|1814|(660,)|const|float64
call_1813 = relay.TupleGetItem(func_632_call(relay.reshape(const_1814.astype('float64'), [10, 66])), 0)
call_1815 = relay.TupleGetItem(func_635_call(relay.reshape(const_1814.astype('float64'), [10, 66])), 0)
output = relay.Tuple([call_1809,call_1813,const_1814,])
output2 = relay.Tuple([call_1810,call_1815,const_1814,])
func_1816 = relay.Function([], output)
mod['func_1816'] = func_1816
mod = relay.transform.InferType()(mod)
mutated_mod['func_1816'] = func_1816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1816_call = mutated_mod.get_global_var('func_1816')
call_1817 = func_1816_call()
output = call_1817
func_1818 = relay.Function([], output)
mutated_mod['func_1818'] = func_1818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1816_call = mod.get_global_var('func_1816')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_1832 = relay.TupleGetItem(func_1816_call(), 1)
call_1833 = relay.TupleGetItem(func_1818_call(), 1)
func_1334_call = mod.get_global_var('func_1334')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_1839 = relay.TupleGetItem(func_1334_call(relay.reshape(call_1832.astype('float64'), [660,])), 0)
call_1840 = relay.TupleGetItem(func_1337_call(relay.reshape(call_1832.astype('float64'), [660,])), 0)
output = relay.Tuple([call_1832,call_1839,])
output2 = relay.Tuple([call_1833,call_1840,])
func_1866 = relay.Function([], output)
mod['func_1866'] = func_1866
mod = relay.transform.InferType()(mod)
output = func_1866()
func_1867 = relay.Function([], output)
mutated_mod['func_1867'] = func_1867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1772_call = mod.get_global_var('func_1772')
func_1774_call = mutated_mod.get_global_var('func_1774')
call_1878 = relay.TupleGetItem(func_1772_call(), 0)
call_1879 = relay.TupleGetItem(func_1774_call(), 0)
output = call_1878
output2 = call_1879
func_1880 = relay.Function([], output)
mod['func_1880'] = func_1880
mod = relay.transform.InferType()(mod)
output = func_1880()
func_1881 = relay.Function([], output)
mutated_mod['func_1881'] = func_1881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1880_call = mod.get_global_var('func_1880')
func_1881_call = mutated_mod.get_global_var('func_1881')
call_1882 = func_1880_call()
call_1883 = func_1880_call()
func_632_call = mod.get_global_var('func_632')
func_635_call = mutated_mod.get_global_var('func_635')
const_1896 = relay.const([-3.529531,-8.581926,5.576648,-3.430152,-2.607493,5.034911,8.954392,0.624365,0.151528,9.776178,9.691199,4.090322,-1.892012,-3.976504,-3.685133,8.039074,8.372529,3.382433,6.245394,7.903646,-0.003380,5.203361,-1.789198,5.390607,-8.526702,-6.029792,-6.947354,0.649804,9.131666,-6.770495,4.813698,-1.733328,6.424338,3.570677,4.265009,-8.206812,3.863960,8.289866,5.583293,-8.523439,2.512441,0.811023,-2.528610,4.492125,4.668268,3.807674,1.332494,2.244036,2.362172,3.835415,9.619089,-6.846221,-5.795406,-2.080726,-3.736269,5.670922,-2.283244,8.737571,6.266148,-9.341024,1.689263,-1.575597,3.382963,9.864181,-0.587676,-3.051024,1.754485,9.415985,-6.864673,0.634620,-2.554804,3.990221,4.998410,6.659887,2.864824,5.996140,0.846252,5.521934,-2.562833,1.983631,-9.465142,-8.000179,-7.529212,6.382712,-9.723838,6.038857,1.425061,1.775500,5.225389,-6.478100,-7.776554,3.384086,8.921427,-6.197807,-1.130935,-0.780251,0.777016,-5.915000,-3.616473,1.022390,-0.018655,9.963598,4.421083,-4.176387,2.079521,4.708542,8.567228,4.601304,2.021749,-7.642732,2.014486,-1.144309,7.724532,-9.783417,-1.918340,-1.511243,-1.902131,2.569461,-9.181723,1.628762,-2.902268,5.602457,0.346753,-3.827160,7.190104,-2.029623,3.348459,4.387089,7.474156,8.600134,3.474970,-7.217790,1.449203,4.893904,-2.996647,-9.969767,6.742786,-8.556360,-2.001965,-7.702950,7.838061,7.826044,4.967224,2.094916,-2.113703,4.040082,3.865532,-8.463579,5.139604,-2.406582,-9.352637,-4.264449,1.212037,-2.092442,0.461498,8.814416,-8.412724,3.168422,4.011966,-9.502175,2.383801,-1.845280,-6.281964,-7.353614,-3.866171,8.701613,3.587831,5.895778,-2.484184,-5.401501,-7.558922,-2.407647,-2.164435,-5.822818,-3.203476,-7.076506,-9.556954,-5.227635,1.467818,-8.653383,-1.771980,-5.875074,7.474080,-9.731196,5.786209,2.035042,-0.840779,-1.809241,-2.643291,-7.696471,-8.816939,-6.674478,3.081114,3.262755,7.021058,6.741817,3.265015,8.417169,9.909847,-4.668992,6.652736,-2.349921,3.422952,-4.214977,3.533562,-1.945570,6.135495,7.871332,-5.385020,4.032784,-7.517019,7.739506,-2.296205,2.643051,-1.344767,6.542019,8.961736,4.364315,-3.595025,-9.237784,-2.950748,8.606234,-2.071860,2.905075,6.572576,-3.426516,0.184271,5.245478,9.532669,9.513847,-7.246904,2.938137,-0.475868,-0.601069,-7.544311,-7.440477,-5.591711,7.018560,-0.908159,5.108396,3.512331,-9.240261,0.813431,5.565908,-1.281146,-3.198427,1.589922,-4.753184,-8.413796,-7.360055,-4.851364,9.694034,6.126579,9.969600,8.075861,1.242728,-9.457615,3.678584,-2.479118,-0.113133,2.657537,1.751239,-3.246189,-4.591597,4.921682,-9.316306,-3.796333,-2.662008,-4.750429,6.537856,-1.984252,-8.798656,-1.963995,-5.317032,-9.709948,8.949027,0.677853,-5.136131,0.083604,-0.924260,-8.814750,-9.457998,-7.333775,-4.984648,-4.123116,4.835905,-8.948644,9.955209,9.560694,0.828922,6.876582,-7.404191,-3.373390,-4.624855,8.899073,-0.282336,5.797147,-1.237259,3.858502,-7.509859,5.248433,-1.105132,-5.440442,-4.907388,8.682327,7.277898,9.921185,8.160366,0.788456,7.813854,-7.519756,-8.268231,-5.783423,9.106660,3.287869,1.402232,9.311994,-4.074412,7.542326,-5.233505,6.021310,9.439832,3.333507,-0.457696,8.746945,8.577239,9.520343,8.276044,0.514104,5.764722,8.059592,4.266221,-7.317071,-3.622150,-2.585139,-3.273592,-7.222307,-0.023697,-8.826698,-6.267421,-8.932698,4.957721,3.397147,3.553170,4.136652,7.597993,1.227868,-4.178134,1.528896,-3.389818,6.823927,6.172778,-6.681382,9.098980,-0.430916,-0.796274,1.701104,-8.765300,2.535569,7.052502,-6.300589,3.770257,5.005191,5.177001,-5.106505,4.124993,-8.781235,0.405196,-6.427928,2.108027,7.168483,-6.235099,5.065387,1.341161,-4.116373,7.463776,-8.722941,7.450093,-4.402195,-4.135101,-9.757797,-0.958496,-0.682003,9.609329,-7.264845,1.915809,9.589877,9.271203,-3.816698,7.357831,0.567625,4.573159,0.277724,-6.886010,1.864671,-6.530014,-3.664432,-2.359080,-9.049052,4.828655,-2.583735,-3.307409,-6.276637,-6.878656,0.347816,-4.468513,-8.623303,-0.083322,-2.790069,-0.205975,3.705519,0.488280,4.367424,-1.394262,0.257550,0.228752,-6.035806,9.632154,0.368464,6.243544,0.110495,3.269638,9.156455,3.016808,-9.229583,7.617910,-0.449090,2.027187,-4.930408,-4.204032,-6.073495,6.146137,4.231223,9.368906,-0.096213,6.993082,-3.326126,4.552582,-6.670682,2.142081,-2.450189,-5.358487,3.564316,6.498289,6.797237,-7.418055,7.582682,-1.236209,-5.445104,6.664202,-6.944345,4.568257,9.609192,-0.685731,7.014957,7.572189,-1.965035,4.926688,0.673018,2.034842,-6.446611,-1.793298,7.297838,-3.487872,1.388587,-9.721785,1.200760,-7.742079,1.372224,-7.899706,6.120574,-1.700867,-6.997391,0.632849,-1.204804,-0.394767,-6.294251,-1.959245,-9.404041,-6.741287,-9.114348,1.686819,-7.837066,6.903522,2.431411,-2.548414,9.481360,-5.021189,-1.986412,7.486793,3.221852,2.798456,2.442040,7.373674,8.915453,5.311873,0.559534,9.763033,-8.695390,0.641840,-8.335799,-2.983939,-8.818753,2.379559,3.847822,-5.717153,1.504368,-4.310071,2.866035,-1.595171,3.978624,2.152314,-6.317419,-7.972774,4.647803,-9.537734,-5.763718,2.068656,-9.806138,6.939133,6.672998,-0.927292,-1.121719,5.735516,-4.301154,-7.727959,8.087719,-4.309021,-8.819885,5.198768,-9.308830,5.373238,-9.462329,-7.680052,-1.718401,-7.169968,7.536350,-7.572614,-5.544306,4.808282,0.860484,-1.022722,9.970949,-2.097458,-9.125939,0.073027,-1.456945,5.137031,1.354275,2.777277,7.201502,-2.109258,-9.620969,-7.809416,-3.963572,7.589433,8.130584,3.368456,5.860664,-6.141891,2.138258,-0.351636,2.823304,-0.389941,6.088755,-8.053618,-0.317884,7.441746,5.364997,4.212926,-0.819701,3.428385,-4.903671,-6.593535,-1.275552,8.528637,0.335025,9.986278,5.493280,3.704204,9.629830,-9.924601,-0.420903,-3.295084,1.128329,-5.865408,2.262384,-1.185272,-5.944446,4.582566,5.656089,-4.940701,-5.206779,5.103811,8.484110,0.972921,-4.908830,-9.360332,9.121880,-8.176706,-7.940450,-7.562751,-5.090781,-0.618601,-5.046073,-1.939505,-2.976361,-1.550853,-2.701091,2.519347,-3.793727,7.859265,-4.472780,-3.015043,-4.735161,-7.451702,0.060240,-9.990348,1.964713,-6.672539,-6.563671,-0.139760,7.661991,-7.745341,-7.927006,8.364858,-5.277200,-8.463958,6.137589,-5.443249,2.033669,-7.844565,-9.085427,8.570964,0.068758,4.108366,-8.007882,0.287599,-2.790921,8.106102,4.105116,2.500896,7.549001,-0.538180,-9.552916,3.750838,3.257853,-4.099015,-5.767764,-1.062211,6.716867,-5.981818,3.514537,9.328448,5.946148,-9.255802,-3.578669,-1.232759,9.046884,-3.970234], dtype = "float64")#candidate|1896|(660,)|const|float64
call_1895 = relay.TupleGetItem(func_632_call(relay.reshape(const_1896.astype('float64'), [10, 66])), 0)
call_1897 = relay.TupleGetItem(func_635_call(relay.reshape(const_1896.astype('float64'), [10, 66])), 0)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_1903 = relay.TupleGetItem(func_611_call(), 0)
call_1904 = relay.TupleGetItem(func_612_call(), 0)
func_1029_call = mod.get_global_var('func_1029')
func_1031_call = mutated_mod.get_global_var('func_1031')
const_1908 = relay.const([[2.724992,5.803277,2.715523,-2.859559],[-0.820617,0.984962,2.906919,0.907266],[-2.336118,8.057403,5.733257,2.763106],[3.024232,2.342713,8.307973,-1.378491],[-4.842363,-7.112577,-6.152364,3.578067],[5.001894,4.929392,-4.067830,-7.933468],[6.621580,-0.663056,1.636376,4.003362],[-7.985195,9.729252,1.099883,6.258322],[2.132738,4.709883,-8.100779,-6.538222],[-5.001809,-3.608363,-6.194262,4.839558],[-0.849377,-9.150739,1.041528,0.240169],[-3.188495,0.350142,-4.873220,-2.524768]], dtype = "float64")#candidate|1908|(12, 4)|const|float64
call_1907 = relay.TupleGetItem(func_1029_call(relay.reshape(const_1908.astype('float64'), [48,])), 3)
call_1909 = relay.TupleGetItem(func_1031_call(relay.reshape(const_1908.astype('float64'), [48,])), 3)
uop_1913 = relay.cosh(call_1895.astype('float32')) # shape=(10, 66)
uop_1915 = relay.cosh(call_1897.astype('float32')) # shape=(10, 66)
const_1927 = relay.const([[2.123856,1.964718,9.670639,-3.689150,9.054116,-3.849985,2.888949,5.235862,-4.331051,8.144420,7.776535,3.780926,-4.441748,-6.614922,7.575518,7.114906,-9.376746,-8.914996,4.089355,-5.358115,9.281190,-2.074270,8.939234,3.760842,8.624452,8.495025,-4.879412,-2.180503,1.420969,6.393414,-5.625230,1.730420,-4.440486,0.502847,-6.717519,-4.529182,-8.556727,-6.103726,-8.922791,3.265958,1.434324,-3.994088,1.354300,-2.651769,-1.002998,-4.353350,-5.029862,8.812282,6.493375,-5.629265,-3.330774,5.687994,-4.555556,2.293141,7.415731,-1.474344,4.244951,-1.240116,9.776124,8.914585,3.365260,2.372947,8.646074,-4.285900,0.512056,-0.656802],[5.890775,-6.848796,7.946182,3.744841,0.427426,0.744842,-4.974681,3.965332,-2.010868,5.354911,-5.631304,4.967829,-2.842017,-2.578106,4.632895,6.065684,0.637679,-2.328927,5.748733,3.028714,4.808368,5.525550,0.345783,4.706940,4.712682,0.170668,6.669265,4.900774,-0.156097,7.444477,-7.066904,-8.463347,4.286554,3.369191,-0.349454,4.704254,5.323613,-2.666148,5.479273,1.858583,-5.282619,2.024088,1.854721,9.770020,-1.897751,9.850197,-3.662216,-3.397153,-1.571738,-1.421200,5.734812,-5.683981,2.572783,1.772600,2.445000,9.545459,3.581757,0.776570,-2.350314,-1.135224,-5.678613,9.855383,6.408249,-9.560285,1.119951,6.008586],[-6.871805,-2.642593,-9.466796,-2.919198,-6.683625,7.476551,-2.196494,-7.948704,-3.275589,-3.703090,1.435405,4.143950,7.232577,-4.803035,-1.091811,2.964565,-8.721602,-2.593473,9.404933,-1.101993,2.908163,4.210053,-2.483664,-1.396154,-6.796245,2.970223,-7.991526,2.624448,-7.452764,3.136638,7.049302,2.417355,-6.905406,-6.678017,4.307244,7.925604,-1.489882,-4.144126,-9.800354,0.552001,7.720348,-4.689085,1.859835,-8.757886,-1.610952,1.424949,-7.839701,8.923611,-4.131059,3.741501,-2.811547,-8.616056,8.901706,4.434122,8.052378,3.733751,-9.348207,5.145906,4.063695,4.986757,2.887971,0.775103,-1.738285,-0.709643,-9.274088,-3.497610],[-8.453531,5.508998,3.147900,6.264364,-5.473523,-9.805503,5.119092,-3.804005,2.041300,-9.382843,-1.118252,-9.679971,-4.151748,-3.295373,-3.145038,7.182401,8.265211,8.024366,0.039011,-5.532786,0.715912,-2.749985,-6.619003,5.277015,9.694502,-8.327096,0.885485,-2.661162,1.630210,-7.340510,2.475913,-0.929559,-8.892353,1.852839,-8.826540,3.297201,-6.561514,-2.686665,8.370629,-0.178967,8.519917,-1.958993,-9.296361,-7.864452,8.691170,9.318641,-0.388298,-7.178730,1.017207,6.770597,3.022072,0.677091,-7.937707,-9.959251,8.497425,-5.418128,2.272882,1.355566,0.809942,6.938264,-9.993973,2.326063,-2.926998,-3.637905,-2.276074,1.174276],[-4.359278,0.535695,1.116636,-4.135572,2.820016,9.609935,-7.327094,-4.574091,1.411151,-7.256038,-7.099326,-3.958048,5.889645,4.133107,-2.740353,2.559117,6.996218,-7.147492,-8.833827,-7.826503,7.455634,-5.248259,-9.110477,-2.106479,-7.039544,-0.504902,-1.208869,0.355753,5.992748,7.901307,-8.207809,-5.118456,-9.695292,-5.204178,-4.498726,-5.944371,-8.707029,8.749928,7.442952,-0.424018,-7.175802,-4.656020,-2.631368,1.580895,-1.861324,8.361070,0.905224,2.641851,-9.191428,3.942098,-6.351288,2.266867,-2.415100,4.459670,-8.486876,-5.062234,-4.053101,1.490426,-5.633053,-3.685407,-0.011770,7.852353,-1.618703,0.650044,-1.583651,7.079498],[-2.096040,-3.755577,2.516804,-9.769474,9.374543,-0.646710,3.402003,-0.378273,-8.687818,6.409907,1.822325,6.082418,7.057915,-3.727587,9.405883,-4.711245,-1.163020,-4.411763,-7.570201,1.800137,2.890565,-8.659435,-9.849858,8.991176,1.337150,7.582614,6.438515,-2.644510,0.162930,8.258483,-3.265731,-9.091153,-9.096596,-4.104166,8.595355,-9.402303,-5.770497,1.856150,-1.647283,8.118003,9.101820,-3.813555,9.144963,2.416405,3.841931,6.711998,-6.376793,7.135643,2.305000,-1.447430,7.420587,8.777666,1.943427,-8.448650,5.892045,8.216289,-0.329269,-3.375472,0.900723,-8.492705,-3.498262,-7.707970,7.209503,9.291089,-5.805847,8.274671],[-9.856704,6.900874,-4.334134,9.053541,0.485010,-8.243440,-2.745503,-9.071485,7.611044,2.879127,-5.021966,-8.778223,9.921476,-4.326415,7.813816,1.623575,7.422327,3.444223,9.382661,0.675082,-2.632139,-1.245289,-7.713444,-9.683181,-4.752097,1.550357,2.507289,-2.022096,1.656485,-1.922108,7.281345,1.545996,-5.644386,-5.691050,7.410891,0.736241,9.418477,0.105688,-8.304683,9.046253,9.749589,1.457129,8.120673,7.446867,6.877815,9.341716,8.918349,0.363612,-5.434846,6.432922,4.027998,0.524550,8.103115,0.276750,-0.888295,-1.717772,1.822689,-8.510190,1.824733,-6.688510,-7.302657,4.453705,-8.848544,9.424472,-5.752296,-7.589426],[0.980779,8.833929,-2.194167,-4.623428,7.388680,-1.110047,6.958578,4.333401,-4.723306,2.976872,-6.100272,7.776886,5.125500,1.401398,7.039394,1.842280,5.272326,2.667090,6.913547,-9.913816,-8.228748,-8.004169,7.195119,4.269212,9.359667,-4.804495,7.108894,-2.215725,5.683097,7.685776,6.721227,8.042315,0.263056,4.038652,2.322536,0.103845,-2.970985,4.197393,-2.752826,-2.333540,5.045947,3.944026,-9.553671,9.151819,3.374478,-2.899336,6.233271,3.880346,5.838562,-2.207612,-9.729330,-6.600656,0.009430,-3.086109,-3.954602,0.721447,-0.409105,4.703625,-1.557654,-0.142093,3.881383,-9.491101,-3.359967,6.765788,-4.684780,-8.974630],[3.175021,-5.197490,-3.993791,-4.011221,8.170707,-3.979412,-2.761832,-3.215075,-8.471781,-5.740977,6.078984,1.211785,-8.477202,5.445630,-1.599141,3.788708,5.415502,-6.079705,6.576346,-1.046009,-6.418973,-2.279876,-2.906653,8.786333,1.992905,-4.077228,-9.373827,-9.213761,-5.675477,-9.321334,-3.531177,9.046930,4.429355,3.509705,-9.995319,1.316453,9.876355,-7.301507,-3.153498,-8.712411,7.339602,-0.171038,-4.278410,4.119523,6.587712,6.746482,5.557025,8.173867,-5.287735,6.301031,-6.877502,5.489612,-1.109414,-5.061140,6.567891,-0.741631,2.899555,1.801021,-0.805599,7.212294,-1.627601,1.218702,8.647639,-8.187678,0.917012,-4.463807],[-5.621597,4.489745,9.990718,1.175508,4.645617,-6.020047,-7.056898,-5.647028,-4.309297,-5.602166,5.964986,-5.399086,-4.188319,-1.946769,3.137820,-6.110835,6.924218,-6.888002,8.310263,2.553949,-2.306349,8.450402,1.432317,8.418747,8.519823,-8.496314,1.300574,3.597783,3.137981,3.102121,7.585196,-2.632484,-3.311092,4.636236,-4.860756,-2.424652,-1.302832,-0.444932,1.918100,9.716838,4.662057,0.516775,0.553243,3.918403,6.581585,3.612731,-8.330435,8.472759,-2.976693,-3.579583,0.927503,5.153008,-5.724850,-2.680849,0.328049,0.093090,9.405852,3.130327,1.052379,-6.669358,-6.851270,2.107899,9.214668,9.306233,-5.747708,6.761979]], dtype = "float32")#candidate|1927|(10, 66)|const|float32
bop_1928 = relay.logical_xor(uop_1913.astype('uint64'), relay.reshape(const_1927.astype('uint64'), relay.shape_of(uop_1913))) # shape=(10, 66)
bop_1931 = relay.logical_xor(uop_1915.astype('uint64'), relay.reshape(const_1927.astype('uint64'), relay.shape_of(uop_1915))) # shape=(10, 66)
bop_1933 = relay.logical_or(bop_1928.astype('bool'), relay.reshape(const_1896.astype('bool'), relay.shape_of(bop_1928))) # shape=(10, 66)
bop_1936 = relay.logical_or(bop_1931.astype('bool'), relay.reshape(const_1896.astype('bool'), relay.shape_of(bop_1931))) # shape=(10, 66)
func_1592_call = mod.get_global_var('func_1592')
func_1596_call = mutated_mod.get_global_var('func_1596')
var_1939 = relay.var("var_1939", dtype = "float32", shape = (924,))#candidate|1939|(924,)|var|float32
call_1938 = relay.TupleGetItem(func_1592_call(relay.reshape(var_1939.astype('float32'), [924,]), relay.reshape(const_1908.astype('float64'), [48,]), ), 1)
call_1940 = relay.TupleGetItem(func_1596_call(relay.reshape(var_1939.astype('float32'), [924,]), relay.reshape(const_1908.astype('float64'), [48,]), ), 1)
func_556_call = mod.get_global_var('func_556')
func_560_call = mutated_mod.get_global_var('func_560')
const_1950 = relay.const(9.443782, dtype = "float64")#candidate|1950|()|const|float64
call_1949 = relay.TupleGetItem(func_556_call(relay.reshape(const_1950.astype('float64'), []), relay.reshape(const_1908.astype('float64'), [8, 2, 3]), ), 1)
call_1951 = relay.TupleGetItem(func_560_call(relay.reshape(const_1950.astype('float64'), []), relay.reshape(const_1908.astype('float64'), [8, 2, 3]), ), 1)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_1966 = relay.TupleGetItem(func_611_call(), 3)
call_1967 = relay.TupleGetItem(func_612_call(), 3)
uop_1977 = relay.atanh(bop_1933.astype('float64')) # shape=(10, 66)
uop_1979 = relay.atanh(bop_1936.astype('float64')) # shape=(10, 66)
output = relay.Tuple([call_1882,call_1903,call_1907,const_1908,call_1938,var_1939,call_1949,const_1950,call_1966,uop_1977,])
output2 = relay.Tuple([call_1883,call_1904,call_1909,const_1908,call_1940,var_1939,call_1951,const_1950,call_1967,uop_1979,])
func_1983 = relay.Function([var_1939,], output)
mod['func_1983'] = func_1983
mod = relay.transform.InferType()(mod)
mutated_mod['func_1983'] = func_1983
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1984 = relay.var("var_1984", dtype = "float32", shape = (924,))#candidate|1984|(924,)|var|float32
func_1983_call = mutated_mod.get_global_var('func_1983')
call_1985 = func_1983_call(var_1984)
output = call_1985
func_1986 = relay.Function([var_1984], output)
mutated_mod['func_1986'] = func_1986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1866_call = mod.get_global_var('func_1866')
func_1867_call = mutated_mod.get_global_var('func_1867')
call_1994 = relay.TupleGetItem(func_1866_call(), 1)
call_1995 = relay.TupleGetItem(func_1867_call(), 1)
func_1983_call = mod.get_global_var('func_1983')
func_1986_call = mutated_mod.get_global_var('func_1986')
const_1997 = relay.const([[6.853084,-8.228762,3.765679,-0.134214,-7.329457,0.329768,-7.462921,7.761279,-8.962679,-5.449828,1.336758,-3.275687,5.956775,2.828422,-8.568186,0.777184,1.278299,4.214795,-2.581981,7.534610,7.316218,-9.599046,1.383134,-4.823960,6.528822,-8.990473,0.423389,2.298363,-9.908352,-7.406678,-2.559554,-1.117336,-2.757697,-5.204243,0.627687,3.787943,-3.578559,-8.812078,6.049396,5.759531,1.167021,3.638385,-7.570576,7.259137,3.688513,6.563271,2.354471,5.916231,-2.381510,-2.750534,3.182733,-6.887126,9.188954,0.837597,-5.205468,9.482526,5.380819,-3.207305,5.888659,-4.142334,5.265551,-7.924181,-6.750670,-0.961707,7.236887,-7.764128,9.584102,6.596326,-2.844952,6.934146,2.568231,-0.292039,-4.945273,9.289451,4.011097,-9.556140,9.252642,6.050028,1.281997,-9.441985,2.669217,3.813959,-0.190835,8.138298,-5.106104,5.045904,-4.239616,-5.432049,-9.958516,-1.421634,6.085612,-4.258610,-3.325869,-5.092882,-8.543774,-3.586766,-1.883549,-4.020101,-9.193977,0.434928,-0.621607,0.061653,-1.892472,0.602813,0.963168,-8.960318,2.712441,1.923673,0.501546,6.423557,0.859816,2.392086,6.045264,-7.492679,1.839646,-9.827930,-5.698627,-9.919042,4.288225,6.006997,-7.055062,-3.125311,-5.993467,4.661619,1.357926,1.350091,-8.638480,-6.216106,-9.163207,-7.886575,-0.258762,-0.334432],[-8.176060,-2.937072,-3.282241,-0.958917,1.034056,-6.567895,-9.973961,4.646635,-9.998051,-9.678917,7.987205,0.235255,9.010221,-3.745420,-7.176224,-4.328060,4.293648,1.345285,-9.605057,-7.920592,-9.254580,-4.255864,-1.460361,-6.307135,-3.330535,-6.787755,-5.444582,-8.057617,1.374688,0.669038,9.885633,-5.054011,-2.270939,-9.521767,2.421981,6.874474,-9.481048,-7.980838,0.259932,0.845578,-9.373087,-4.079150,8.621174,-2.499367,3.837160,7.218865,-3.709580,3.159414,4.488011,8.151615,4.797550,-2.746955,-5.247256,-8.242638,6.867269,-3.254129,9.805632,-3.706777,1.453904,4.038954,3.278396,5.020389,-6.326822,-7.165539,-5.668767,-1.421510,-8.076744,9.480343,-1.721456,0.197829,-8.830770,6.808295,-4.520506,-2.634408,-0.652098,-3.895031,-9.164513,5.160470,-8.862336,-4.181069,-1.659756,-8.789043,5.019586,8.546832,-3.964178,-1.332836,-6.879057,-0.441883,3.948283,-1.589895,5.596157,0.037552,-3.100244,-0.921701,6.665564,-1.120355,-6.470430,-4.748454,-7.342051,7.226742,-9.667163,0.680416,2.476214,0.179494,7.342287,-3.491099,-8.155951,-9.240568,8.571799,-3.960444,-6.683285,-4.529436,0.220925,-9.772518,-9.333022,-6.613740,7.568803,-9.149846,-9.696084,-0.189503,3.903560,-6.417414,-8.329481,3.752820,2.664211,-5.507466,-2.801671,-2.234467,-9.168917,2.170956,-0.042142,2.613717],[-1.004115,-9.761235,-1.399315,-6.539743,-9.372470,9.174062,7.899002,-8.187107,-0.277467,-9.876153,0.713934,1.237925,-6.830012,-0.067166,-2.835630,-8.528986,6.193895,5.910174,1.005253,-3.844264,-0.068656,5.256160,-7.330752,3.019342,-1.298082,7.943867,-4.405744,3.472950,9.544156,-5.152174,-0.967587,-2.558180,6.183737,4.065109,6.394496,-6.272034,9.451975,-8.216993,2.579524,2.950062,0.523007,6.758476,4.402087,-5.264027,2.489659,-0.036757,-3.490967,3.680897,1.945358,-7.634317,-7.370316,-0.168269,-5.355121,4.648427,-1.491365,-2.754971,9.929353,-6.600593,-3.211659,-8.077116,5.138026,2.037798,5.120701,4.943394,9.447765,-5.812876,4.235414,-3.389978,3.376783,3.749290,-8.573586,4.779681,-9.952402,-7.667508,6.954142,-8.221308,3.243766,-8.751056,-8.725137,4.570935,9.785658,-4.626298,2.403569,1.023651,-1.330636,-9.700290,-5.683768,4.487316,3.386893,3.979547,-3.834988,1.408054,-5.389588,-6.825780,-8.034919,-6.628000,2.156365,-4.972654,6.675591,1.606906,-7.997781,-0.725058,-4.173808,6.264269,7.263245,-9.558527,-3.491604,-7.856757,7.914743,-5.700311,-6.008120,7.669432,1.875292,-2.567616,4.863142,-7.127080,-4.641459,-8.077241,-8.899804,-3.513329,8.739728,1.406569,8.868286,-1.588841,9.861645,-2.779236,6.773273,8.720647,5.214757,-9.863116,-6.381637,-3.783867],[1.303341,7.116593,0.800662,-4.677796,-9.642574,-0.643002,9.737390,-1.180126,0.372477,-8.577761,-3.747873,3.894801,-0.161503,9.335502,3.625809,8.232850,-6.625747,-4.508001,-0.115740,-6.763175,6.448994,-9.296167,6.955512,2.679115,2.747569,-8.725660,1.482890,5.652380,9.168132,-0.931016,2.598269,0.296715,-2.047148,8.081477,-0.798913,9.641328,-0.471322,-3.112391,-9.826894,7.153695,-3.490079,-8.513360,4.186507,4.189811,-6.000552,3.199623,6.095902,3.444232,0.010450,-8.337772,7.865724,6.932863,-5.475814,6.417578,8.450759,-1.456442,-9.295153,5.060795,9.751718,-7.907687,4.918909,2.438719,9.545544,-6.917140,5.317165,-8.218824,8.100164,-1.523655,-2.517891,-4.312092,-3.890744,4.512954,3.882504,5.336459,6.117043,-2.772488,0.809677,2.235548,0.309445,4.268383,-6.985093,9.832781,6.122302,9.931359,6.881086,6.226708,1.522916,4.176586,-8.471212,7.477765,-2.182728,-1.295515,8.511518,-0.381626,4.675444,3.739310,-2.439044,5.795783,-8.297430,5.675633,8.893322,-2.224184,1.493676,7.446105,-0.426645,8.369708,4.060736,-2.069787,4.345219,7.599936,6.175665,-9.942645,5.748147,8.062659,2.184137,6.875767,-5.429419,4.162526,6.662717,7.583321,0.329861,6.610936,-1.566104,2.010457,-2.824972,-7.735791,0.357612,1.107318,8.544748,-4.152103,7.535797,0.306607],[4.783559,0.471859,5.368152,-6.639680,2.029966,1.994209,-2.131398,4.142174,7.174759,-1.671361,9.535839,6.228696,-8.684218,0.332396,-8.811993,3.616403,5.064910,-2.711853,2.129497,7.651730,-4.722478,-8.154347,0.540844,-9.161259,-0.429804,8.891830,-0.960627,-6.644102,-6.325861,5.507894,-1.736632,2.517850,4.260777,-3.097161,-3.029993,-9.030701,7.538001,7.666080,-8.955380,4.260385,-6.541401,-2.291992,-5.217786,-8.960009,-2.206472,9.894687,-1.159239,-9.734615,-1.690203,7.505064,-8.898398,-2.683108,-1.120379,-3.175676,3.863365,5.430941,-9.398036,-2.443060,-4.602802,-6.678139,-2.150127,5.245417,-0.801449,3.555216,5.745925,1.356205,-8.928817,8.654199,-4.267171,8.383649,5.912065,6.141512,5.645191,-6.385475,-0.187084,-6.914810,-3.629498,-7.153291,-9.283610,-1.386343,-5.041347,4.907088,5.083031,3.759707,1.612987,1.937584,-2.572634,-8.127391,-6.872748,5.648029,9.114738,-6.754470,-8.681930,-1.321493,-0.617858,-1.483047,2.368673,2.773333,-1.793128,-9.716173,8.756599,-1.821227,-7.286396,1.195132,-0.509719,-8.387842,0.373044,9.578337,9.388746,-3.612293,-2.267259,-9.208541,-6.484523,-2.512613,-1.786137,-7.891359,-4.336315,1.577135,-3.062192,-7.263974,-3.328017,-8.478290,6.665053,2.752844,-4.621129,-6.952347,-1.932763,-7.822529,-9.166632,4.183284,6.513206,-5.885286],[-6.247367,-1.868897,5.274956,1.539649,9.975790,6.980669,-9.012154,7.589223,-6.921711,4.428773,-7.480049,9.872611,1.949289,-1.177215,3.770049,-7.503895,-7.112673,-9.436705,6.217192,1.591818,5.765893,7.581191,2.124647,-5.105093,-5.489264,-0.182884,0.224763,1.241216,-0.970709,9.915550,8.848047,-8.698040,3.339522,9.086195,-3.766247,3.763895,4.940781,9.785603,-4.641612,-5.033178,-0.311129,4.514246,-7.033707,-5.320777,-5.777362,-1.106278,7.131261,-0.768850,8.204644,-2.409789,-1.211036,-3.463648,-8.745165,0.971685,5.176749,-3.670869,-7.709537,-1.728638,-0.371978,-1.338678,-3.897266,-1.732171,0.694726,-4.042757,-7.058537,-6.207262,5.733517,-6.868915,1.159515,-3.796854,4.221379,-1.540381,-2.651316,0.886420,8.287978,-2.364030,-2.651049,0.220064,1.938287,3.595514,-6.383060,-0.516655,-2.561122,-8.600520,-9.914898,-7.140205,3.733939,-6.324043,6.677679,-2.590500,8.402305,7.304984,-8.984118,3.785457,-7.483502,3.310485,-3.576263,-9.222255,3.836835,-3.820643,2.390620,2.177315,7.106768,3.267005,1.430757,7.283979,-8.356833,2.407075,-6.973096,-9.858843,9.246593,8.734717,0.479285,-6.778819,-7.699729,2.568973,4.894511,-0.115925,-2.237655,-5.798288,-6.337962,-0.772748,-0.306551,4.098538,-2.541529,5.681564,0.376587,9.880713,3.244998,0.189500,0.950430,8.424466],[-9.307898,3.936693,3.805047,-3.626069,-4.901105,-0.866901,-9.880120,0.873087,7.368808,-4.772734,2.804011,-7.889261,6.296937,6.558443,-6.628699,-4.373188,-1.578429,3.841938,5.152546,0.495034,-6.363312,-9.927686,9.546229,7.180978,-5.151834,-0.496169,1.611084,-5.842603,-0.760163,5.693988,6.831640,6.277222,-4.229592,7.785569,5.527470,3.746982,0.324212,-2.624900,2.409397,2.726878,-6.480002,9.465273,-4.688283,-9.830508,4.817348,1.342633,6.212370,1.627589,2.589059,9.238175,7.607797,-1.833133,-3.713592,-2.038240,-7.430449,-6.042336,2.796881,7.764532,3.589899,-8.030527,5.215513,2.940587,4.772952,-1.903742,-1.529841,0.726595,-5.594542,-4.473970,-2.333964,-0.129597,-7.917684,1.617545,9.420695,-5.978276,7.027471,4.088405,-3.116158,8.582875,1.754291,8.147885,-2.658524,-4.656053,-9.924628,1.450589,1.878996,-2.749283,-9.000495,9.435338,-5.598866,3.481622,-9.574827,-5.087013,8.150627,-1.316574,-8.481066,-5.331670,-9.930461,4.061063,7.487738,-4.681182,8.190603,8.747893,-9.310820,5.603707,-2.577024,-1.482583,7.446793,2.369001,6.487744,-9.210792,3.671301,-8.084267,6.511731,7.994476,-8.316325,7.518897,-3.967372,-7.069126,3.518804,3.641737,-0.418670,-8.986017,-1.400677,-8.115637,-1.017382,4.264981,-4.415026,7.812673,-3.814072,-8.473863,-4.855607,-8.315954]], dtype = "float32")#candidate|1997|(7, 132)|const|float32
call_1996 = relay.TupleGetItem(func_1983_call(relay.reshape(const_1997.astype('float32'), [924,])), 0)
call_1998 = relay.TupleGetItem(func_1986_call(relay.reshape(const_1997.astype('float32'), [924,])), 0)
func_1162_call = mod.get_global_var('func_1162')
func_1164_call = mutated_mod.get_global_var('func_1164')
var_2025 = relay.var("var_2025", dtype = "float64", shape = (48, 1))#candidate|2025|(48, 1)|var|float64
call_2024 = relay.TupleGetItem(func_1162_call(relay.reshape(var_2025.astype('float64'), [1, 3, 16])), 5)
call_2026 = relay.TupleGetItem(func_1164_call(relay.reshape(var_2025.astype('float64'), [1, 3, 16])), 5)
output = relay.Tuple([call_1994,call_1996,const_1997,call_2024,var_2025,])
output2 = relay.Tuple([call_1995,call_1998,const_1997,call_2026,var_2025,])
func_2036 = relay.Function([var_2025,], output)
mod['func_2036'] = func_2036
mod = relay.transform.InferType()(mod)
var_2037 = relay.var("var_2037", dtype = "float64", shape = (48, 1))#candidate|2037|(48, 1)|var|float64
output = func_2036(var_2037)
func_2038 = relay.Function([var_2037], output)
mutated_mod['func_2038'] = func_2038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1880_call = mod.get_global_var('func_1880')
func_1881_call = mutated_mod.get_global_var('func_1881')
call_2154 = func_1880_call()
call_2155 = func_1880_call()
output = call_2154
output2 = call_2155
func_2179 = relay.Function([], output)
mod['func_2179'] = func_2179
mod = relay.transform.InferType()(mod)
mutated_mod['func_2179'] = func_2179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2179_call = mutated_mod.get_global_var('func_2179')
call_2180 = func_2179_call()
output = call_2180
func_2181 = relay.Function([], output)
mutated_mod['func_2181'] = func_2181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1467_call = mod.get_global_var('func_1467')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_2189 = relay.TupleGetItem(func_1467_call(), 0)
call_2190 = relay.TupleGetItem(func_1468_call(), 0)
output = relay.Tuple([call_2189,])
output2 = relay.Tuple([call_2190,])
func_2191 = relay.Function([], output)
mod['func_2191'] = func_2191
mod = relay.transform.InferType()(mod)
output = func_2191()
func_2192 = relay.Function([], output)
mutated_mod['func_2192'] = func_2192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1866_call = mod.get_global_var('func_1866')
func_1867_call = mutated_mod.get_global_var('func_1867')
call_2193 = relay.TupleGetItem(func_1866_call(), 1)
call_2194 = relay.TupleGetItem(func_1867_call(), 1)
output = call_2193
output2 = call_2194
func_2197 = relay.Function([], output)
mod['func_2197'] = func_2197
mod = relay.transform.InferType()(mod)
output = func_2197()
func_2198 = relay.Function([], output)
mutated_mod['func_2198'] = func_2198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_2212 = relay.TupleGetItem(func_966_call(), 0)
call_2213 = relay.TupleGetItem(func_968_call(), 0)
output = relay.Tuple([call_2212,])
output2 = relay.Tuple([call_2213,])
func_2215 = relay.Function([], output)
mod['func_2215'] = func_2215
mod = relay.transform.InferType()(mod)
output = func_2215()
func_2216 = relay.Function([], output)
mutated_mod['func_2216'] = func_2216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2179_call = mod.get_global_var('func_2179')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_2233 = func_2179_call()
call_2234 = func_2179_call()
func_1467_call = mod.get_global_var('func_1467')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_2235 = relay.TupleGetItem(func_1467_call(), 0)
call_2236 = relay.TupleGetItem(func_1468_call(), 0)
func_1592_call = mod.get_global_var('func_1592')
func_1596_call = mutated_mod.get_global_var('func_1596')
const_2243 = relay.const([6.457577,-7.957318,1.638591,-1.578655,1.388200,-8.194251,8.259422,-5.386104,-8.270875,2.163167,1.407412,-6.476491,-8.854507,-3.530747,-0.921211,-3.599984,-2.996243,7.886362,-5.161232,-2.692234,-6.957595,-0.006045,8.112270,-4.774041,5.996939,0.069757,4.653130,-9.839147,3.859249,-4.395832,0.732352,4.898196,1.427103,3.696287,-0.041984,5.655045,-3.566153,-3.886094,8.063274,5.432022,1.916779,0.054506,-3.316199,-2.882973,-7.905467,9.981535,1.676996,8.862471,9.619818,-6.335933,5.168965,-9.953847,0.426517,6.379779,-1.125575,5.080392,-7.254718,-6.946984,-7.641434,-3.346525,5.446740,-8.876192,-2.933199,-6.464774,-5.794392,4.935995,-0.081558,3.561742,-9.763091,-8.991526,0.680205,-1.349800,-5.618493,-2.716492,0.407714,-6.578017,5.052018,5.577470,-5.946089,2.455568,-3.782856,-5.762859,3.650620,-3.785026,2.107407,-6.430013,-9.105423,-7.161129,4.472549,-2.498819,9.235203,-4.955897,4.850810,-7.323937,2.270024,4.648874,-9.257128,-6.806024,1.672323,3.447100,-0.452885,-4.847546,0.778452,3.305409,7.587832,3.484815,-2.685580,9.290928,-7.204040,-5.456511,-8.048179,4.514807,9.334447,-1.295764,6.443935,5.657306,6.010384,-7.271024,-6.812026,1.411536,7.843157,-6.883371,-8.939846,-3.154224,7.635514,-0.525036,-1.001056,-5.343494,-0.907590,-3.912376,2.154020,1.670887,7.363421,8.939523,2.156829,-6.703466,3.575597,5.721316,-5.974775,-5.937260,-2.960206,6.172419,4.161783,-8.765754,-3.852473,5.715494,7.671368,-6.801756,-4.743978,-3.605948,7.123093,5.906122,-4.441373,-2.236766,-3.553845,-4.887174,-6.424516,0.334101,-5.920832,9.785454,-7.836190,-6.638369,4.096752,5.042328,-7.576687,7.943900,-0.307209,-2.563949,7.830887,2.911559,-0.256045,-5.882549,-9.618515,-1.994222,-5.470977,7.416754,-9.021480,-8.682349,0.477634,9.744887,3.294337,6.566129,1.872228,-5.214803,-4.455471,-1.222556,-6.543050,3.388247,-5.537899,0.139962,7.073159,-8.488287,-3.494142,8.931704,-4.688219,8.122827,-0.292575,8.859418,-0.754872,-7.129604,0.565320,2.766943,-8.433714,-2.840341,-3.087257,1.295780,1.713980,6.338212,-1.855591,9.532407,-0.979823,-5.022477,4.573474,-2.211679,-6.897196,-3.793726,-9.551916,8.097087,7.397407,0.048570,7.974002,0.336187,-7.348078,-8.381168,-0.821465,0.545057,-0.544102,5.191621,0.912277,3.764839,-8.558718,-3.391074,-4.626947,9.134720,3.303118,3.625648,2.527643,9.768205,-6.030083,-1.350929,9.614641,5.159637,-3.065895,5.462309,-4.394669,5.769014,1.098572,8.394135,1.841577,7.070464,-2.110117,5.838177,3.443265,7.808456,-3.326655,-5.490034,-8.441767,9.336871,-6.488698,-3.525678,4.298086,-4.806164,7.788619,-9.301212,-1.875112,-7.106568,9.447530,7.812015,-7.184771,-4.773146,-5.219049,4.259413,-0.776987,9.394914,0.863386,0.967156,8.884801,0.535739,-8.601686,1.064945,0.257060,4.919064,2.644404,-7.517583,3.199248,-6.171814,3.989442,-6.011094,-9.357353,9.668247,-6.020760,4.127120,-8.355037,-5.576904,-9.976290,9.376955,1.871193,-1.024380,0.423816,0.806160,1.891956,3.910940,5.762748,-5.203385,4.196542,5.799350,7.711888,-3.276753,-9.058044,-2.773027,-2.319130,-7.061790,-9.337569,3.973386,8.506111,-7.554026,-5.695843,-5.103230,-5.120280,-0.204890,-9.107537,0.299026,-2.010584,1.782624,-1.969951,0.026829,2.463117,8.266094,7.467192,-6.268294,8.014699,8.885027,-1.905257,3.807966,5.073041,-8.808298,4.425642,2.257802,9.393487,-6.870826,-0.971315,5.359573,-4.967068,1.992644,8.290682,-2.985787,-6.727859,-6.657989,0.364761,0.267582,5.720846,-0.892101,4.361151,-6.902638,-2.742266,4.297266,5.672433,2.706968,3.950292,7.380893,-4.257962,1.087090,0.366093,8.772382,5.597418,0.606828,-9.520222,0.795955,1.420576,9.640664,5.113221,-3.051393,5.805892,-4.019064,-0.827557,4.304530,1.907873,-1.675763,-3.944287,-9.697881,-4.867138,4.492244,5.864641,5.462470,-1.824246,5.238415,0.638269,-4.861426,8.649856,0.125192,-3.524424,-6.040294,0.087094,0.728147,-0.219447,7.132763,8.247796,4.642196,8.562502,-5.645237,4.592367,0.266211,4.656226,4.678478,-7.330724,6.150854,5.269098,9.967767,-9.183860,4.272362,-0.908562,0.467506,0.257895,-3.883231,3.374895,-2.950598,-1.236212,6.530155,-0.062129,-7.553423,8.992661,6.307321,2.370009,1.450296,8.569053,-0.813076,4.998475,-6.788040,5.213863,-6.589932,3.368382,2.910340,-0.140933,0.014412,-0.032227,-9.135486,5.734376,-4.249572,-4.168364,-1.524035,-8.897108,4.463383,4.267583,-3.600919,-3.516831,5.173234,-0.747770,-7.341732,-6.301303,4.567772,8.359435,-5.701717,4.793946,-9.515752,0.803395,-0.356806,2.931824,6.913338,7.867984,1.971097,-2.998140,9.833123,-4.646666,-7.516508,7.473255,6.939097,3.496948,-8.976583,-0.644748,-7.879861,9.222056,-1.087027,-6.788443,2.618839,5.577958,0.837651,-1.952428,-7.031646,-8.369123,1.890484,-4.216920,2.940986,-1.787271,2.123785,-3.658459,-2.531169,-3.906254,-0.570198,5.578478,-2.098967,3.669289,-6.973914,-0.876972,-7.407841,2.824187,-8.288230,-8.635296,3.100746,5.596508,1.855983,-5.086297,-7.150234,-4.596074,7.080921,-4.840793,7.806684,-5.861066,8.086412,-2.906627,0.125459,2.276660,-2.508046,4.433283,7.365785,-8.789101,-0.218461,-6.222701,6.820019,-8.264197,-4.732150,-1.473016,-1.156774,-6.384418,0.553448,5.671256,-5.463508,-3.080587,-8.298599,6.361664,0.088623,-3.205237,-4.140619,-4.181651,-3.280597,4.432495,9.151547,-1.222033,-8.204531,-6.136028,2.140155,-5.956476,-5.517820,-5.784102,0.166428,-9.811719,9.120633,-4.739653,-1.233854,5.273657,5.328051,7.767690,-9.201471,-9.382200,-0.842895,-8.357442,-9.385072,-6.816955,-7.518562,6.743979,-6.257916,-3.407882,3.453505,8.809610,7.949773,-1.564071,0.775809,7.259473,2.859761,-7.601417,-4.943240,0.758994,-9.026537,-6.666225,0.945427,-4.266744,7.855543,9.190095,4.808837,-4.418169,-8.126935,-4.280406,2.260958,8.908035,3.296138,-9.603508,7.363229,3.634764,5.577083,-5.930455,3.654969,-8.584501,1.401793,8.721590,5.317126,5.260231,-5.982405,9.767386,5.210530,-3.786495,7.615479,7.370684,0.231178,-5.369528,-2.996433,6.745942,0.178944,-9.136107,1.144986,0.659830,-4.130752,-0.765009,-9.334327,-8.588143,9.827512,7.031824,5.050499,5.148670,6.228764,-6.062602,-0.509779,0.133609,4.314754,-1.810909,-6.383784,5.697045,-6.589813,4.002811,-8.636476,-4.551247,2.797061,-6.180764,-4.754700,2.550406,8.652572,3.966100,7.066962,6.401840,4.180060,5.198913,8.775638,-2.005406,3.419342,7.229963,0.045376,2.936573,5.953502,6.752856,1.998933,6.631886,-0.589096,-0.441956,5.423223,3.726128,4.517830,-6.105912,5.271501,-2.534527,5.641958,-1.707757,2.848415,0.199902,4.123045,6.500663,8.602322,8.616345,4.097212,4.213014,6.606491,3.626234,3.235747,-2.052635,-7.768135,6.609339,-9.482462,-0.711213,2.396630,-1.206778,2.192206,7.774946,-3.040260,-8.517353,-5.892666,-1.899745,-6.162401,-3.258375,-2.585603,4.256481,0.597122,-3.405224,-9.699310,-9.581837,-8.638229,8.174186,-0.926779,-2.657014,8.524710,-4.550389,-7.789412,-4.784378,2.855261,-7.199304,0.905596,-6.458867,4.300906,-1.558921,-2.577238,0.054604,6.440245,-5.973109,-3.111720,-3.441279,6.438542,8.431322,2.636403,1.766899,5.799321,-7.845587,4.247071,9.404329,0.699662,-6.095826,-0.547115,-8.576178,-4.231710,8.635946,6.641608,2.895102,0.626153,-0.910418,-1.477405,9.697152,-5.659594,-5.842142,-6.249960,-2.812607,9.270139,0.119719,-1.057078,6.783752,-4.824837,5.751363,-1.475487,1.514753,-4.104376,-0.122703,8.993810,-9.997976,-9.317849,2.592074,-7.380606,-3.820164,-2.840561,-3.800969,-7.140667,-9.635236,-5.225789,-1.876894,-3.393335,-6.080889,-5.789892,4.591499,-4.744730,9.634729,-4.995932,-3.096505,-3.850108,-8.468831,-7.971646,1.751860,-4.799909,-4.296726,-1.631382,1.664126,-7.953611,0.250359,-6.517145,-4.722687,-7.117069,6.340595,-2.122882,1.680062,6.890582,0.945157,-2.807849,-0.617035,-1.702470,-1.225369,1.133923,4.901867,7.470593,-0.467752,4.164270,9.416513,-5.764993,-8.762799,-7.199673,1.400620,5.111668,8.009231,-0.889228,-0.859898,-3.998878,8.895090,-8.927265,7.279690,7.248000,-2.247829,-2.876494,-4.447229,-3.750876,8.252108,-6.597312,-9.110701,-5.499550,-2.050213,0.428964,0.096684,8.559276,-3.215857,-5.679175,1.829458,9.933453,-2.520695,0.488127,2.683432,-3.556322,-8.757897,8.471644,-0.292595,4.087421,-2.675515,-2.936126,-9.080329,-2.399124,9.280511,6.508059,-5.836202,-1.828080,-1.040557,1.085676,-1.708481,8.788726,7.437820,1.706944,-7.751583,-2.350513,-9.376803,-6.587427,-1.580583,0.759626,5.063774,-4.812504,2.887715,5.488836,8.818956,2.733131,-6.604733,-7.801768,-5.852563,1.754288,-5.168075,3.826679,-4.680387,-3.572972,1.225127,7.519867,-1.525918,-9.885640,-3.525494,8.477309,6.224121,2.518501,9.086552,2.331341,-2.588076,-9.336229,-8.933928,5.924127,-5.381679,0.241847,0.852135,-5.949407,-5.281579,2.129459,-5.913275,-4.623808,-0.643840,5.868375,-8.560572,4.688822,-5.091119,6.524525,1.320069,8.844728,-6.156785,6.560644,3.137197,5.412239,3.346017,8.891396,-9.272673,9.103748,8.086249,-4.842773,4.554235,-1.272754,-6.775872,-7.300381,-5.422085,2.330065,-1.718019,-4.204907,-2.874160,9.811949,5.359283,-6.218173,0.526963,-1.218936,-8.707662,-2.849549,-7.762342,7.672780,-0.539686,-2.415679], dtype = "float32")#candidate|2243|(924,)|const|float32
var_2244 = relay.var("var_2244", dtype = "float64", shape = (48,))#candidate|2244|(48,)|var|float64
call_2242 = relay.TupleGetItem(func_1592_call(relay.reshape(const_2243.astype('float32'), [924,]), relay.reshape(var_2244.astype('float64'), [48,]), ), 5)
call_2245 = relay.TupleGetItem(func_1596_call(relay.reshape(const_2243.astype('float32'), [924,]), relay.reshape(var_2244.astype('float64'), [48,]), ), 5)
func_1334_call = mod.get_global_var('func_1334')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_2269 = relay.TupleGetItem(func_1334_call(relay.reshape(call_2235.astype('float64'), [660,])), 0)
call_2270 = relay.TupleGetItem(func_1337_call(relay.reshape(call_2235.astype('float64'), [660,])), 0)
output = relay.Tuple([call_2233,call_2235,call_2242,const_2243,var_2244,call_2269,])
output2 = relay.Tuple([call_2234,call_2236,call_2245,const_2243,var_2244,call_2270,])
func_2292 = relay.Function([var_2244,], output)
mod['func_2292'] = func_2292
mod = relay.transform.InferType()(mod)
var_2293 = relay.var("var_2293", dtype = "float64", shape = (48,))#candidate|2293|(48,)|var|float64
output = func_2292(var_2293)
func_2294 = relay.Function([var_2293], output)
mutated_mod['func_2294'] = func_2294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1772_call = mod.get_global_var('func_1772')
func_1774_call = mutated_mod.get_global_var('func_1774')
call_2334 = relay.TupleGetItem(func_1772_call(), 0)
call_2335 = relay.TupleGetItem(func_1774_call(), 0)
func_929_call = mod.get_global_var('func_929')
func_933_call = mutated_mod.get_global_var('func_933')
var_2337 = relay.var("var_2337", dtype = "uint64", shape = (4, 364))#candidate|2337|(4, 364)|var|uint64
var_2338 = relay.var("var_2338", dtype = "float64", shape = (660,))#candidate|2338|(660,)|var|float64
call_2336 = relay.TupleGetItem(func_929_call(relay.reshape(var_2337.astype('uint64'), [8, 13, 14]), relay.reshape(var_2337.astype('uint64'), [8, 13, 14]), relay.reshape(var_2338.astype('float64'), [660,]), ), 0)
call_2339 = relay.TupleGetItem(func_933_call(relay.reshape(var_2337.astype('uint64'), [8, 13, 14]), relay.reshape(var_2337.astype('uint64'), [8, 13, 14]), relay.reshape(var_2338.astype('float64'), [660,]), ), 0)
bop_2343 = relay.maximum(var_2337.astype('int64'), relay.reshape(call_2336.astype('int64'), relay.shape_of(var_2337))) # shape=(4, 364)
bop_2346 = relay.maximum(var_2337.astype('int64'), relay.reshape(call_2339.astype('int64'), relay.shape_of(var_2337))) # shape=(4, 364)
func_1029_call = mod.get_global_var('func_1029')
func_1031_call = mutated_mod.get_global_var('func_1031')
var_2349 = relay.var("var_2349", dtype = "float64", shape = (48,))#candidate|2349|(48,)|var|float64
call_2348 = relay.TupleGetItem(func_1029_call(relay.reshape(var_2349.astype('float64'), [48,])), 2)
call_2350 = relay.TupleGetItem(func_1031_call(relay.reshape(var_2349.astype('float64'), [48,])), 2)
func_673_call = mod.get_global_var('func_673')
func_675_call = mutated_mod.get_global_var('func_675')
call_2357 = relay.TupleGetItem(func_673_call(relay.reshape(call_2348.astype('float64'), [3, 14, 3])), 0)
call_2358 = relay.TupleGetItem(func_675_call(relay.reshape(call_2348.astype('float64'), [3, 14, 3])), 0)
output = relay.Tuple([call_2334,var_2338,bop_2343,call_2348,var_2349,call_2357,])
output2 = relay.Tuple([call_2335,var_2338,bop_2346,call_2350,var_2349,call_2358,])
func_2366 = relay.Function([var_2337,var_2338,var_2349,], output)
mod['func_2366'] = func_2366
mod = relay.transform.InferType()(mod)
mutated_mod['func_2366'] = func_2366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2366_call = mutated_mod.get_global_var('func_2366')
var_2368 = relay.var("var_2368", dtype = "uint64", shape = (4, 364))#candidate|2368|(4, 364)|var|uint64
var_2369 = relay.var("var_2369", dtype = "float64", shape = (660,))#candidate|2369|(660,)|var|float64
var_2370 = relay.var("var_2370", dtype = "float64", shape = (48,))#candidate|2370|(48,)|var|float64
call_2367 = func_2366_call(var_2368,var_2369,var_2370,)
output = call_2367
func_2371 = relay.Function([var_2368,var_2369,var_2370,], output)
mutated_mod['func_2371'] = func_2371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1699_call = mod.get_global_var('func_1699')
func_1701_call = mutated_mod.get_global_var('func_1701')
call_2373 = func_1699_call()
call_2374 = func_1699_call()
output = relay.Tuple([call_2373,])
output2 = relay.Tuple([call_2374,])
func_2377 = relay.Function([], output)
mod['func_2377'] = func_2377
mod = relay.transform.InferType()(mod)
mutated_mod['func_2377'] = func_2377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2377_call = mutated_mod.get_global_var('func_2377')
call_2378 = func_2377_call()
output = call_2378
func_2379 = relay.Function([], output)
mutated_mod['func_2379'] = func_2379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2382 = relay.var("var_2382", dtype = "float32", shape = (10, 9, 10))#candidate|2382|(10, 9, 10)|var|float32
uop_2383 = relay.cos(var_2382.astype('float32')) # shape=(10, 9, 10)
output = uop_2383
output2 = uop_2383
func_2393 = relay.Function([var_2382,], output)
mod['func_2393'] = func_2393
mod = relay.transform.InferType()(mod)
mutated_mod['func_2393'] = func_2393
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2394 = relay.var("var_2394", dtype = "float32", shape = (10, 9, 10))#candidate|2394|(10, 9, 10)|var|float32
func_2393_call = mutated_mod.get_global_var('func_2393')
call_2395 = func_2393_call(var_2394)
output = call_2395
func_2396 = relay.Function([var_2394], output)
mutated_mod['func_2396'] = func_2396
mutated_mod = relay.transform.InferType()(mutated_mod)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_2426 = relay.TupleGetItem(func_611_call(), 1)
call_2427 = relay.TupleGetItem(func_612_call(), 1)
uop_2435 = relay.sigmoid(call_2426.astype('float32')) # shape=(3, 9, 6)
uop_2437 = relay.sigmoid(call_2427.astype('float32')) # shape=(3, 9, 6)
uop_2452 = relay.atan(uop_2435.astype('float32')) # shape=(3, 9, 6)
uop_2454 = relay.atan(uop_2437.astype('float32')) # shape=(3, 9, 6)
func_2215_call = mod.get_global_var('func_2215')
func_2216_call = mutated_mod.get_global_var('func_2216')
call_2462 = relay.TupleGetItem(func_2215_call(), 0)
call_2463 = relay.TupleGetItem(func_2216_call(), 0)
output = relay.Tuple([uop_2452,call_2462,])
output2 = relay.Tuple([uop_2454,call_2463,])
func_2464 = relay.Function([], output)
mod['func_2464'] = func_2464
mod = relay.transform.InferType()(mod)
mutated_mod['func_2464'] = func_2464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mutated_mod.get_global_var('func_2464')
call_2465 = func_2464_call()
output = call_2465
func_2466 = relay.Function([], output)
mutated_mod['func_2466'] = func_2466
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2503 = relay.var("var_2503", dtype = "float64", shape = (8, 4, 9))#candidate|2503|(8, 4, 9)|var|float64
uop_2504 = relay.tan(var_2503.astype('float64')) # shape=(8, 4, 9)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_2515 = relay.TupleGetItem(func_966_call(), 0)
call_2516 = relay.TupleGetItem(func_968_call(), 0)
output = relay.Tuple([uop_2504,call_2515,])
output2 = relay.Tuple([uop_2504,call_2516,])
func_2532 = relay.Function([var_2503,], output)
mod['func_2532'] = func_2532
mod = relay.transform.InferType()(mod)
var_2533 = relay.var("var_2533", dtype = "float64", shape = (8, 4, 9))#candidate|2533|(8, 4, 9)|var|float64
output = func_2532(var_2533)
func_2534 = relay.Function([var_2533], output)
mutated_mod['func_2534'] = func_2534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mod.get_global_var('func_2464')
func_2466_call = mutated_mod.get_global_var('func_2466')
call_2629 = relay.TupleGetItem(func_2464_call(), 0)
call_2630 = relay.TupleGetItem(func_2466_call(), 0)
output = call_2629
output2 = call_2630
func_2646 = relay.Function([], output)
mod['func_2646'] = func_2646
mod = relay.transform.InferType()(mod)
output = func_2646()
func_2647 = relay.Function([], output)
mutated_mod['func_2647'] = func_2647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2673 = relay.var("var_2673", dtype = "int32", shape = (9, 8, 3))#candidate|2673|(9, 8, 3)|var|int32
const_2674 = relay.const([[[-10,-10,10],[-1,-3,-6],[-7,2,4],[1,2,-8],[10,4,-3],[-3,-1,6],[-5,10,4],[-10,1,-5]],[[7,6,3],[10,7,-5],[-10,5,-1],[1,-10,5],[-6,-4,-10],[1,-5,7],[-10,1,-10],[-10,-7,2]],[[-10,6,-5],[-5,-8,8],[-6,-5,6],[8,10,-3],[-8,-3,-2],[4,9,1],[1,-4,2],[8,1,-10]],[[-5,2,8],[10,-10,10],[9,3,4],[-3,-1,7],[-1,3,8],[8,2,1],[-9,5,-3],[3,-10,1]],[[2,2,-2],[-9,4,4],[7,-5,4],[-8,-6,-4],[1,2,-4],[7,6,-1],[10,9,4],[-4,-5,-10]],[[5,-4,5],[10,3,-9],[-5,-3,8],[9,-4,2],[2,-8,4],[-8,10,-10],[9,-10,3],[1,8,9]],[[8,3,-6],[1,-10,-7],[-7,-3,-8],[-1,-4,1],[-10,7,6],[3,-4,7],[1,10,-7],[6,-1,-2]],[[-2,5,-3],[7,-9,-3],[-10,1,3],[4,8,-7],[-10,-8,2],[1,2,-3],[-4,-2,3],[-2,-2,-7]],[[-2,8,6],[4,8,8],[-3,-5,-6],[-2,9,7],[-9,-4,-1],[5,1,-3],[1,-2,9],[-1,10,-7]]], dtype = "int32")#candidate|2674|(9, 8, 3)|const|int32
bop_2675 = relay.maximum(var_2673.astype('int32'), relay.reshape(const_2674.astype('int32'), relay.shape_of(var_2673))) # shape=(9, 8, 3)
func_1816_call = mod.get_global_var('func_1816')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_2679 = relay.TupleGetItem(func_1816_call(), 1)
call_2680 = relay.TupleGetItem(func_1818_call(), 1)
const_2682 = relay.const([[2,-5,7,1,-3,8,-9,6,-8,-6,-7,5,10,4,2,9,3,5,9,-1,-6,4,9,7,-4,-6,-5,1,-9,-1,4,-7,4,-9,9,9,-1,1,5,-9,3,10,-8,-5,7,2,-6,8,-2,-4,9,6,-6,-1,-3,10,8,5,-2,-5,-4,10,-5,-9,7,5],[7,-7,-8,-2,1,-8,3,-4,-4,3,5,8,-2,-6,10,-5,5,-10,10,-6,5,9,9,-2,-4,9,-8,1,5,9,3,2,5,2,3,4,4,-3,-7,-4,-10,2,1,8,-3,1,8,-5,-5,-8,-7,-4,8,-1,-4,7,1,4,3,10,-8,1,4,10,-2,-8],[1,-9,-3,3,7,-3,-9,10,8,7,3,-1,3,8,8,-6,10,-9,6,-10,1,-1,10,-2,3,4,7,-3,-7,-10,9,-5,9,-1,7,8,-5,-10,-2,5,2,-3,5,3,-9,8,-9,4,-6,-5,-6,-10,-3,8,-3,-3,4,-5,-4,-2,1,8,2,8,-8,-10],[-5,7,-3,5,10,10,-6,5,-3,-10,9,-6,1,-9,-6,-3,-1,1,5,-9,-6,1,4,-3,-2,-5,4,-2,-3,3,-1,-2,-7,8,1,-9,6,2,-5,-9,9,-8,3,-7,2,-10,6,-7,7,7,3,-6,3,9,4,-6,3,-5,5,-5,-1,10,-8,-10,-4,-2],[2,-6,-7,-4,-4,-5,4,3,1,-6,4,-2,7,-7,9,-6,9,-6,8,9,-10,-8,2,6,1,10,2,-8,-3,7,-6,3,-6,2,-10,-5,5,7,-5,5,-4,3,-4,-4,8,9,6,-9,-4,6,4,-6,-5,8,-5,7,-5,-7,3,-8,-5,-5,10,3,9,-9],[3,3,10,7,4,9,4,10,9,8,-4,5,9,1,-9,2,-6,9,6,-3,10,10,8,-1,8,1,2,-8,-3,-10,9,-2,7,-3,7,-3,-8,3,3,-2,-3,2,8,10,-1,2,4,-7,7,-6,-5,-3,4,-8,-10,-7,-5,10,-3,5,-3,-5,4,10,1,-8],[-6,9,9,-6,-10,-5,6,-8,-8,-4,-1,9,-1,9,-4,-6,9,10,-3,-10,1,-7,3,-7,-10,1,8,-9,9,-10,-4,-3,4,-5,-2,-9,10,-2,-3,3,10,5,6,-8,9,-7,-6,7,8,6,-7,-6,3,2,-9,-7,1,-8,3,1,3,6,2,9,7,9],[2,-1,-3,1,9,10,10,-6,-5,-9,-7,-10,-10,7,6,-1,1,-3,6,8,-4,3,8,10,-8,-4,4,2,-2,-1,-6,9,4,-4,8,6,-2,-7,-10,-6,4,3,-3,-1,-3,5,5,-7,-6,1,-6,-7,10,9,-8,10,4,-9,-6,3,-3,1,2,8,10,5],[8,4,-3,10,9,-3,-1,1,-3,1,5,-5,-9,-7,4,-6,-2,-2,5,-8,2,-9,-4,-2,-7,4,-2,-8,-5,1,9,-4,8,-7,10,9,-7,-2,-1,7,-7,9,-3,2,4,-9,-3,-5,1,-3,-7,10,1,2,-8,1,3,7,-6,6,-4,-4,-8,-7,-1,9],[-5,2,2,-9,5,8,-9,-4,5,9,-4,8,2,-10,-8,-2,7,10,-8,-2,10,-10,6,-5,3,4,-7,-9,8,3,-6,10,9,-5,-10,1,-6,10,-5,4,-7,7,-9,-2,-6,4,1,7,3,-10,-6,4,10,-5,6,-6,8,-8,10,5,-6,7,-10,-1,6,-5]], dtype = "uint16")#candidate|2682|(10, 66)|const|uint16
bop_2683 = relay.equal(call_2679.astype('bool'), relay.reshape(const_2682.astype('bool'), relay.shape_of(call_2679))) # shape=(10, 66)
bop_2686 = relay.equal(call_2680.astype('bool'), relay.reshape(const_2682.astype('bool'), relay.shape_of(call_2680))) # shape=(10, 66)
output = relay.Tuple([bop_2675,bop_2683,])
output2 = relay.Tuple([bop_2675,bop_2686,])
func_2710 = relay.Function([var_2673,], output)
mod['func_2710'] = func_2710
mod = relay.transform.InferType()(mod)
mutated_mod['func_2710'] = func_2710
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2711 = relay.var("var_2711", dtype = "int32", shape = (9, 8, 3))#candidate|2711|(9, 8, 3)|var|int32
func_2710_call = mutated_mod.get_global_var('func_2710')
call_2712 = func_2710_call(var_2711)
output = call_2712
func_2713 = relay.Function([var_2711], output)
mutated_mod['func_2713'] = func_2713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2191_call = mod.get_global_var('func_2191')
func_2192_call = mutated_mod.get_global_var('func_2192')
call_2764 = relay.TupleGetItem(func_2191_call(), 0)
call_2765 = relay.TupleGetItem(func_2192_call(), 0)
func_1983_call = mod.get_global_var('func_1983')
func_1986_call = mutated_mod.get_global_var('func_1986')
const_2793 = relay.const([-4.015659,-4.003581,1.097627,3.106097,8.268718,6.511621,-8.877029,-2.693297,5.934260,-7.138518,-3.260807,-3.823809,6.461779,4.138593,5.945658,5.651048,-1.032549,5.278900,-9.055667,4.915245,0.072194,3.554464,3.382885,-0.587267,-7.491832,-2.123507,7.888624,0.740219,-3.137461,1.723970,-6.772960,4.356478,-9.592909,-3.010001,4.317363,-9.351358,-4.902324,-7.326153,7.664715,-1.080239,2.413870,-6.780110,-6.404307,0.367151,6.395485,-9.763805,-8.942190,-8.524354,-3.585511,2.716146,-9.271084,-3.653700,8.914975,5.192472,1.741456,0.615327,-5.494994,-5.039198,3.257764,7.986104,-1.352074,-7.148059,8.056099,-8.063091,0.713441,9.027850,7.242811,-7.384520,2.081026,-1.285676,1.219637,9.140334,1.158500,-3.566990,-4.178609,9.803845,9.798834,0.851038,-1.260905,-6.270091,8.334246,-9.051546,-7.868156,7.365921,-4.302375,-7.513630,9.683045,0.255121,6.428316,9.821385,-3.901153,6.851195,-9.257490,-1.067798,-7.974263,-0.749200,4.280388,-5.330948,3.302507,8.033277,8.300210,-2.389098,1.659472,-6.911157,7.819966,-2.619481,-4.541150,-1.096715,-6.935374,-0.043580,4.078632,-5.214523,4.650324,-5.354623,2.669927,-6.119532,-0.826069,4.224126,-8.163420,-0.372747,-5.932498,0.721207,-2.292491,4.336828,2.263573,7.763029,1.777794,3.251805,7.442169,3.719531,5.988351,2.625673,-1.544593,1.872164,-1.759664,7.116167,8.261779,-0.527545,-9.097060,-9.901746,1.080460,-6.134972,-3.347117,7.767992,-4.117011,-0.739292,-8.765599,2.251587,-0.584124,0.730140,-4.993593,3.367186,-7.230935,-8.007200,-0.924054,-2.665076,-4.915972,-7.210237,-8.792996,-4.960787,-7.658451,-5.643951,9.256771,-0.302465,-5.404226,-9.209716,-3.650781,-1.372138,1.707690,0.894173,-8.443519,4.082747,-9.808826,0.464918,1.221966,3.440493,-1.089768,-0.948168,5.932149,8.960133,8.504990,9.502920,-8.223783,-1.247714,-9.496450,9.320680,9.835820,1.013262,-5.998458,-6.476453,1.723791,9.303565,1.638964,6.548879,-9.558943,-1.938247,-1.392757,3.895345,-9.556611,8.534953,1.902467,1.999550,7.555931,6.854072,4.321056,-3.234135,7.599187,-9.086490,0.566362,-0.146760,-0.083069,6.448630,-2.188118,5.447718,-6.000882,3.192908,6.240707,-5.060694,6.604187,-0.838879,6.618615,9.538755,4.372826,5.043155,5.562137,-2.753871,1.201686,2.201068,4.393982,-5.553221,5.576637,2.627850,-1.705594,7.458589,4.862304,-3.379274,-5.215923,-9.963988,6.218767,7.631951,8.217140,-8.055121,1.353130,-7.969936,1.426318,5.119562,-4.263141,0.239353,-4.747173,-4.884208,7.230397,8.142736,6.706083,4.888696,1.152205,4.402241,-5.553742,8.270009,0.362704,-7.416748,-6.500841,3.155827,7.850963,5.507737,-9.724123,1.557885,-4.852821,1.429668,-2.037452,-7.469143,3.346883,-9.763484,-8.457500,-3.001257,2.649940,-7.243675,-0.209727,-3.728439,-1.526558,5.763502,-8.111845,-9.510975,9.074683,-8.642921,-1.745897,-5.277973,-2.479391,-1.544404,-1.301524,2.823116,8.001175,-8.247061,7.341070,2.015134,-8.923390,-6.054687,-1.249054,-5.695344,4.256025,6.370621,5.295940,9.965685,4.826001,-6.061541,-7.592811,9.524154,7.456193,6.354953,4.770969,7.223753,-1.808874,-0.089125,-4.668042,-7.832985,1.037615,-7.279838,3.672211,-8.276119,0.383520,2.169565,-1.899606,4.879443,-2.293155,7.758713,-9.409039,4.536993,-2.644270,6.052361,-4.503081,-6.641130,6.940731,5.907101,8.773817,3.859932,-2.770494,-5.851154,-5.962357,4.140801,5.275784,-4.352633,4.386462,-7.040320,9.408229,-5.196196,7.827581,0.439172,1.690415,-4.760351,-6.614827,7.607729,-8.528178,-3.950716,-3.604653,1.479202,-9.611231,5.697891,5.289861,4.021335,1.613755,4.755955,3.323857,8.047984,6.048508,6.296880,-4.796407,-4.342623,-9.020341,3.802329,-2.207672,-4.437974,-8.993562,-0.265281,8.796340,-7.862787,-3.155996,-1.116533,-8.698849,-2.677358,5.693025,3.790982,9.865322,-6.030202,-0.568079,-1.418405,-9.528191,0.841675,-6.613605,-1.613403,-5.568162,-0.269529,-2.959046,-8.238606,-4.287665,-8.751093,-7.207179,7.700560,-3.531989,6.812971,8.486370,5.416305,0.446235,-4.915794,0.093602,6.211060,2.769826,-9.820931,-4.143178,-2.152172,0.603940,-0.754206,1.496865,7.391720,1.046049,-9.911695,-2.412110,-5.153484,7.501116,6.645658,-0.382277,-8.824275,-7.231394,9.788403,4.094134,-6.773489,4.766560,-6.495774,-0.988458,-0.693493,-3.695153,5.235681,-2.831801,-7.648879,-9.318241,-1.717036,9.521966,7.811878,4.136763,-8.381766,-7.461765,-1.053754,-2.985575,-3.321488,-0.961530,-6.422406,-0.348372,-5.651747,-2.698466,-4.027272,-0.138354,0.897403,8.514551,-2.262199,9.586818,8.770276,2.633192,9.100582,-2.612783,-3.018061,-1.421124,8.631376,-3.727237,-6.190262,2.539154,-7.848617,8.048709,9.850560,-3.803367,-4.486922,-6.325041,5.186906,8.875436,3.874570,6.929035,-5.809397,8.813083,-7.520584,3.587122,-5.839339,3.382151,3.788390,-2.909037,6.903368,-9.796995,-6.209057,8.385315,-0.061681,8.024965,-9.002850,4.095350,-9.580147,-2.040392,0.032734,4.428889,-7.007537,-6.403522,-1.929717,-4.577393,4.562093,6.837755,-0.054286,3.507828,8.859700,-1.089397,3.179938,-2.885219,-8.890671,-0.455406,4.058820,0.934883,-2.750318,7.787089,-3.791960,-2.611063,-5.001132,-4.104194,-2.164966,5.602406,-9.575901,1.929580,6.536131,7.147410,2.101969,7.151950,-4.156843,-8.754400,-3.359390,8.592811,-0.469833,-2.482020,5.307059,1.610807,2.374198,4.294034,-0.458575,0.664187,-5.459544,-7.326243,1.699876,-7.284787,-5.138251,-1.767519,-5.644089,-2.104072,-7.052193,3.281119,9.918624,7.141418,6.353837,-0.965976,-0.347662,-1.317414,-4.546219,-3.699919,-1.386536,1.584658,1.589542,-0.462412,6.716285,-3.052168,9.956102,4.979022,-4.740301,2.235170,9.229960,-7.535066,-6.514435,5.972740,7.005689,-2.023933,-5.228443,-3.389575,8.899558,-6.193076,3.923834,-5.504525,-9.592243,3.885194,8.192798,7.012260,-1.848059,-7.958246,-4.753586,-6.998696,5.180360,0.066577,-3.456822,8.591927,-2.134667,6.384562,4.994066,5.525602,5.927448,-6.260117,3.232077,-3.181235,1.290743,-7.911206,-6.594505,5.360261,7.903607,6.454649,1.383499,-6.316428,-4.908833,5.682622,8.175614,-3.617050,-5.509990,5.811516,-8.977661,1.959292,-5.689468,8.480302,-4.464446,-0.672178,4.464202,-2.615530,4.498869,3.351931,-9.820349,3.126357,9.649040,-6.392978,-6.803878,4.646871,6.918391,2.568888,6.396561,-5.508200,4.597227,9.780578,8.956194,5.450472,-0.820757,-3.319045,-0.640721,3.562984,7.122758,8.727691,6.971356,-7.510881,8.874373,6.948854,-7.967108,9.994840,-1.948590,4.747839,-5.337146,-3.039203,4.692478,1.404807,-0.645209,1.767322,-0.726869,-8.002564,6.945842,7.299370,-5.825999,7.304374,-4.451289,-6.301196,-7.127294,-0.219909,5.641910,6.550415,-7.164284,-3.460303,6.662890,-0.706932,-1.416512,-4.113431,-1.547407,-7.366145,-5.199558,9.497629,-5.055201,6.541977,4.971118,4.624674,6.966377,5.394251,7.179314,-6.722578,5.872684,4.989018,5.639098,-2.982051,5.150504,-7.370171,-9.432432,-9.707104,-7.889407,4.135918,-3.562034,-1.775930,-2.730114,2.099959,6.590403,-9.118449,-9.620983,-7.378736,8.543715,2.670240,4.831727,-9.145927,-6.290679,3.174088,6.531290,-0.786370,0.739291,6.573963,0.215963,-5.211815,-7.604151,9.976548,-8.714905,2.369671,-7.160224,-8.615286,-7.351830,-6.733745,6.620111,3.732238,-2.507042,-9.866291,-3.589546,0.417549,-9.315206,-2.398898,0.606475,-4.229298,5.902988,1.656572,-2.666770,-1.689520,9.284869,8.417927,-8.992905,8.113400,3.331279,-3.294612,0.005420,2.430369,8.216505,-3.383298,8.655232,-7.862986,-6.056249,9.721001,1.156151,-7.827397,-6.537595,-7.278868,-7.295929,9.958867,0.500961,-1.070753,-1.097998,3.361453,1.275404,-7.892640,-1.451267,-6.909572,-0.452394,3.885087,7.994835,-7.548352,-2.695972,-4.763463,-5.759923,-8.063771,4.942646,-1.784544,-2.021738,-8.276651,-2.010960,-1.677310,3.658656,7.649434,-5.807888,-8.202778,-0.812598,7.814055,6.621689,-7.032096,-7.080397,8.086676,8.968038,8.064571,1.726080,6.376341,-0.826511,-5.178829,-3.398536,7.900247,9.569391,-4.163707,1.508784,-9.065443,7.125421,-1.847278,3.063884,-3.881964,-3.615403,-5.785708,5.231605,1.383567,4.846812,6.001506,4.557769,6.066077,-2.152922,4.850209,3.373154,-2.865581,-3.500915,-8.833608,3.467101,-0.040390,-7.564704,7.003316,-6.946714,1.530673,4.308477,-0.158269,-8.815724,7.421620,2.543733,-0.817402,-3.509435,-4.117310,2.974550,-1.051073,7.285487,-7.550896,6.360249,9.366840,-1.304306,5.795824,2.507498,4.342837,9.367532,6.789472,6.821937,-8.055741,-4.263813,-4.261173,5.337246,-9.584136,5.415419,0.328781,1.047499,-6.087347,3.538898,0.564412,8.226481,-1.324276,8.121230,-1.615318,5.251402,-8.580744,1.757992,-1.515922,8.776948,4.069254,4.182330,5.160876,5.212675,2.882160,4.962257,1.760723,5.740982,-5.771311,4.989086,5.254904,8.767863,0.261299,-9.159642,9.353873,-8.501086,-5.506438,1.502435,-4.332479,8.687463,-4.673584,-8.488759,-6.489425,1.408707,-8.730451,0.249303,-9.208438,2.598579,4.425459,8.997532,9.989322,8.616347,0.381527,1.797260,4.394241,1.037979,-8.874748,7.752258,4.539566,1.940356,-9.063514,9.901801,0.003873,-5.847334,-9.618544,9.850598,2.933179,0.252732,-3.100453,5.540798,-6.995412,1.957826,-7.825887,6.048283,3.456605,-8.213916,8.201544,-6.061073,-6.487265,6.576348], dtype = "float32")#candidate|2793|(924,)|const|float32
call_2792 = relay.TupleGetItem(func_1983_call(relay.reshape(const_2793.astype('float32'), [924,])), 3)
call_2794 = relay.TupleGetItem(func_1986_call(relay.reshape(const_2793.astype('float32'), [924,])), 3)
func_1739_call = mod.get_global_var('func_1739')
func_1742_call = mutated_mod.get_global_var('func_1742')
call_2801 = relay.TupleGetItem(func_1739_call(relay.reshape(call_2792.astype('float64'), [48,])), 3)
call_2802 = relay.TupleGetItem(func_1742_call(relay.reshape(call_2792.astype('float64'), [48,])), 3)
func_1592_call = mod.get_global_var('func_1592')
func_1596_call = mutated_mod.get_global_var('func_1596')
call_2808 = relay.TupleGetItem(func_1592_call(relay.reshape(const_2793.astype('float32'), [924,]), relay.reshape(call_2792.astype('float64'), [48,]), ), 2)
call_2809 = relay.TupleGetItem(func_1596_call(relay.reshape(const_2793.astype('float32'), [924,]), relay.reshape(call_2792.astype('float64'), [48,]), ), 2)
output = relay.Tuple([call_2764,call_2792,const_2793,call_2801,call_2808,])
output2 = relay.Tuple([call_2765,call_2794,const_2793,call_2802,call_2809,])
func_2821 = relay.Function([], output)
mod['func_2821'] = func_2821
mod = relay.transform.InferType()(mod)
output = func_2821()
func_2822 = relay.Function([], output)
mutated_mod['func_2822'] = func_2822
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2826 = relay.var("var_2826", dtype = "int8", shape = ())#candidate|2826|()|var|int8
const_2827 = relay.const([[[-9],[2],[9]],[[-1],[1],[-10]],[[-4],[10],[-2]]], dtype = "int8")#candidate|2827|(3, 3, 1)|const|int8
bop_2828 = relay.not_equal(var_2826.astype('bool'), const_2827.astype('bool')) # shape=(3, 3, 1)
func_259_call = mod.get_global_var('func_259')
func_262_call = mutated_mod.get_global_var('func_262')
const_2846 = relay.const([6.308657,-8.807276,2.941984,8.113766,-3.565887,-9.319734,0.522444,-9.922176,9.654300,-3.126153,4.977042,-5.765591,-5.189563,-1.769382,9.053670,1.400358,-6.783715,8.963852,4.830218,3.623814,3.897075,-7.406409,-4.642567,-0.006095,5.186190,8.855076,-8.785889,-0.740702,-4.721427,5.119111,-0.158618,-8.987393,-0.327585,-6.975572,-4.668870,4.230206,9.863007,-2.957279,-4.874975,5.393845,-3.627598,6.332462,-4.532948,7.885240,-5.655821,-6.677601,0.452901,-0.225406,9.873042,0.411683,-5.281861,1.489231,6.162600,1.462757,2.506693,9.251201,-9.680227,-8.118453,-0.097287,2.732821,-7.656279,0.553648,-7.529725,8.872162,-5.179684,-7.389823,-8.404365,-3.441657,3.152704,5.317936,-1.003190,-7.171604,4.868760,-6.512416,5.284354,2.175044,9.645159,7.516006,-9.546849,5.637664,-0.802209,7.097205,-6.052250,-3.525904,1.154409,-0.804390,-9.896992,-2.945365,8.486754,-6.069958,-9.666362,2.631744,-8.159084,-0.557953,6.428677,-7.190511,8.483978,-1.040564,4.033545,6.187337,5.178165,1.470512,2.610024,3.469703,-7.106171,8.102100,5.113406,-2.922425,2.732598,-1.867947,2.292146,-2.027073,-7.409000,-4.334052,4.980425,8.943088,5.422267,1.531260,-1.596937,1.467746,-5.673078,-1.664847,9.392885,2.183723,4.723983,-4.612000,-1.260413,2.177622,1.697061,5.122242,8.113234,8.395358,4.551154,3.843240,-4.603496,-6.211939,9.319883,-9.321212,1.498747,-5.990162,-4.492104,2.506213,7.057570,1.641451,-7.508487,-2.356795,8.561537,-7.570024,-4.999281,0.282245,7.036053,8.475084,-2.744272,7.412904,1.276079,-6.652063,-4.279774,4.608077,-8.358411,8.747468,4.563926,-1.400173,1.700949,2.744230,7.152276,-6.788438,-9.837978,2.542821,-6.708766,-0.078192,-4.924067,4.540827,4.569016,1.603236,3.485141,-5.118005,-6.893596,-9.381031,-6.585226,1.836250,-2.750542,-1.910056,1.691023,9.916382,-8.046085,0.689624,-8.774420,-2.692679,2.966373,0.094000,-9.596554,8.933377,-3.871020,-1.671374,2.051824,-8.405217,-7.584197,-9.999834,7.347957,4.861881,-0.366356,-3.842883,7.111060,-9.036828,-4.280369,9.142906,9.125363,8.279957,-7.254012,-2.736091,4.592069,5.907471,4.678949,1.994104,4.593126,8.089055,-3.696114,-1.509163,-7.304216,-4.025895,-9.156721,4.614108,7.394677,-7.468677,-6.817993,9.472703,4.416350,3.294866,6.748358,1.115234,2.038218,-6.756054,9.353733,8.317668,4.437061,-0.830089,-0.248054,3.957235,5.902028,7.218368,4.928305,4.379852,-1.120764,4.874336,-3.551102,-0.337055,3.229265,9.497998,-5.023683,-9.623678,-1.402257,7.412422,-5.412178,-3.218681,-4.753336,-3.189343,7.881359,6.164165,-0.111578,6.957112,8.816543,2.041475,-2.149948,2.269921,5.901078,-8.557977,3.229038,-5.375983,-8.070890,7.627661,4.907956,-5.342761,4.620575,-0.183635,6.857945,-3.347466,4.121121,7.817982,-5.551705,-9.122943,5.037989,-7.659313,6.601501,-4.237941,0.887699,-2.849595,5.960638,6.679739,-9.042091,8.612991,2.481128,3.461845,7.004889,-1.378123,6.405202,8.354090,9.473958,4.026107,1.938957,1.322568,5.033292,3.551699,-6.349840,-0.260269,-2.675971,-5.416747,5.214785,-3.451683,2.510852,5.962372,-0.285353,8.206765,-2.488656,-8.489999,-6.882203,-9.639734,3.207585,2.093511,1.497741,5.612708,1.582353,4.414823,1.534224,1.002260,0.907483,5.721692,6.936625,6.849986,-3.259388,5.080690,6.695814,-3.253512,9.853764,2.831692,7.469991,-8.684038,-0.597935,-0.904646,-3.888576,-3.252729,-6.288518,9.455473,-5.778966,3.489789,-6.477002,-1.894169,-7.230869,-8.358905,-4.749740,-7.485822,-0.973321,-6.238704,8.104994,-7.395496,-6.008110,2.106463,2.491359,-9.367381,7.525043,-8.142986,4.619425,-6.802215,6.889069,6.607568,-5.843704,-8.513005,6.339632,9.179883,3.522328,-9.428333,1.307255,-0.739516,-8.260949,-0.189990,-4.454830,2.038389,0.231533,2.605215,-5.416384,-6.341403,2.541380,-4.546183,0.837150,3.283401,0.978759,-1.000171,8.316498,7.727130,-1.536353,4.520225,-0.608160,-8.030554,-4.335322,7.232263,-4.352331,6.005396,-2.922132,-3.435393,-9.327715,-7.139947,4.891176,-0.573188,5.963119,-8.509354,6.471410,-6.596535,-5.880507,-1.310350,-2.124997,-1.708440,7.393425,-3.124614,3.778725,-5.692161,-3.176890,6.035093,6.721697,-6.451446,-4.537590,-1.448046,7.011202,4.045916,8.498395,-2.284083,0.876565,6.093094,8.958121,-6.504483,-9.421803,-5.964471,2.981818,2.608123,5.954226,9.958704,-4.033430,9.067993,-1.147292,-7.608346,-6.018985,-7.905465,5.268947,9.575213,9.132511,6.692277,-6.480892,6.097746,8.890329,-2.140797,-6.161296,-8.047412,-6.327396,-2.519721,3.760665,-6.569060,-8.024348,0.815310,-8.387149,-3.191342,4.651093,-0.350962,2.324914,3.324865,-1.832054,4.891766,-3.551971,2.170637,8.416615,0.899429,-9.175259,4.514224,-9.204384,-6.484132,7.800679,4.408310,-3.002352,-1.580441,2.155321,1.777284,8.555980,-1.282666,-3.152783,-0.086202,-8.536352,-8.829379,-7.846844,4.889482,3.527076,7.033197,-6.779800,4.282959,-8.328385,-8.005082,3.819273,2.576202,-1.832624,-8.629956,-4.227888,-7.425882,9.719600,2.141665,-4.708198,-2.521334,0.861827,-3.609451,-3.201748,-7.851456,6.988498,-6.744949,-1.214315,-0.685138,-7.158523,-5.424951,1.773649,7.794423,4.998858,-3.752947,6.724301,8.888199,1.462183,-2.467622,7.903041,-0.706211,2.496150,-1.400165,4.174407,-1.626164,6.365878,-2.722051,4.248088,9.951680,-3.829976,4.754193,5.925564,-4.939279,-5.611515,-1.719187,-9.038446,4.856723,-2.117583,5.862383,-9.418945,8.930406,-2.136187,-0.046877,1.936152,5.627054,-5.986326,9.500805,2.753533,-1.146495,-7.675961,-0.714589,5.287823,-1.361610,1.013214,5.281468,5.112574,8.478854,-3.427866,3.962622,-9.078770,-0.241475,9.937297,-6.486065,4.020057,6.539051,2.046778,-1.774257,8.765073,-3.828669,8.776084,-8.976865,-7.243067,-0.738615,7.874816,-6.382264,-0.990790,-9.481481,-1.159826,6.156959,6.700408,2.733874,-0.345112,-6.573090,-1.535502,-4.734610,-8.098247,-3.591856,-6.231076,-7.216889,4.306910,8.069910,7.044424,5.786138,-5.167165,9.655565,1.173940,7.594557,4.066372,7.851536,-2.622130,3.337372,-8.779570,-7.903622,-8.983562,9.697723,3.023064,-3.626418,-3.364947,8.144464,-7.446707,8.443590,3.352005,1.486908,-4.138662,8.259989,-7.533461,7.087475,-4.010131,7.832410,-2.729311,-0.015438,-4.233552,-2.878412,6.684439,8.477074,4.030248,1.950646,2.876094,0.413277,-1.994634,5.999191,4.706026,5.349306,-7.223459,-6.397405,0.243392,-5.682186,9.301906,5.962495,-8.975242,-7.007043,0.760355,3.372415,-1.175822,-5.729543,6.169710,4.354223,-1.981046,-6.311997,-2.389993,-6.689804,-8.449503,6.479531,2.203550,-1.480745,8.228755,7.374855,-5.405453,-9.221212], dtype = "float64")#candidate|2846|(660,)|const|float64
call_2845 = relay.TupleGetItem(func_259_call(relay.reshape(var_2826.astype('int64'), []), relay.reshape(const_2846.astype('float64'), [660,]), ), 2)
call_2847 = relay.TupleGetItem(func_262_call(relay.reshape(var_2826.astype('int64'), []), relay.reshape(const_2846.astype('float64'), [660,]), ), 2)
func_1638_call = mod.get_global_var('func_1638')
func_1642_call = mutated_mod.get_global_var('func_1642')
const_2851 = relay.const([[7],[-10],[-6],[4],[8],[1],[3],[-8],[-6],[-8],[-4],[9],[8],[-4],[7],[2],[5],[8],[-2],[3],[6],[-4],[2],[9],[-1],[-8],[2],[8],[9],[8],[1],[10],[3],[-7],[-10],[3],[-4],[7],[2],[-6],[5],[-7],[-1],[6],[-10],[-8],[6],[9],[5],[2],[-8],[-3],[3],[2],[8],[-8],[2],[-9],[-4],[-5],[-1],[7],[8],[-5],[-2],[10],[4],[-4],[-5],[-4],[-2],[5],[10],[7],[1],[8],[2],[7],[9],[-6],[-1],[-3],[-2],[-3],[3],[2],[-10],[9],[3],[5],[9],[-3],[-9],[2],[-4],[-1],[5],[-9],[-10],[5],[-10],[9],[6],[-1],[8],[-2],[-9],[8],[7],[6],[-10],[-6],[10],[3],[-8],[3],[5],[-9],[2],[9],[-7],[-6],[6],[-2],[4],[4],[-2],[1],[8],[2],[-10],[5],[7],[-8],[5],[8],[8],[8],[-8],[9],[-6],[-7],[5],[-2],[10],[8],[-9],[9],[8],[-4],[5],[-7],[-5],[-7],[5],[6],[8],[2],[1],[-6],[-10],[-3],[9],[2],[9],[2],[-9],[7],[6],[-9],[-9],[-4],[8],[2],[-2],[10],[-3],[8],[7],[9],[9],[2],[-4],[3],[2],[-1],[-5],[-1],[3],[-2],[-2],[-6],[7],[8],[7],[2],[1],[-3],[10],[5],[8],[-6],[-2],[-7],[10],[9],[-4],[-8],[-8],[-7],[-4],[-10],[-10],[9],[1],[-3],[-9],[1],[5],[6],[9],[-7],[8],[-6],[-2],[5],[9],[-2],[-10],[-10],[-5],[9],[1],[5]], dtype = "uint16")#candidate|2851|(234, 1)|const|uint16
call_2850 = relay.TupleGetItem(func_1638_call(relay.reshape(var_2826.astype('uint16'), []), relay.reshape(const_2851.astype('uint16'), [13, 3, 6]), ), 3)
call_2852 = relay.TupleGetItem(func_1642_call(relay.reshape(var_2826.astype('uint16'), []), relay.reshape(const_2851.astype('uint16'), [13, 3, 6]), ), 3)
output = relay.Tuple([bop_2828,call_2845,const_2846,call_2850,const_2851,])
output2 = relay.Tuple([bop_2828,call_2847,const_2846,call_2852,const_2851,])
func_2863 = relay.Function([var_2826,], output)
mod['func_2863'] = func_2863
mod = relay.transform.InferType()(mod)
var_2864 = relay.var("var_2864", dtype = "int8", shape = ())#candidate|2864|()|var|int8
output = func_2863(var_2864)
func_2865 = relay.Function([var_2864], output)
mutated_mod['func_2865'] = func_2865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1365_call = mod.get_global_var('func_1365')
func_1366_call = mutated_mod.get_global_var('func_1366')
call_2898 = relay.TupleGetItem(func_1365_call(), 0)
call_2899 = relay.TupleGetItem(func_1366_call(), 0)
func_1638_call = mod.get_global_var('func_1638')
func_1642_call = mutated_mod.get_global_var('func_1642')
var_2906 = relay.var("var_2906", dtype = "uint16", shape = (234,))#candidate|2906|(234,)|var|uint16
call_2905 = relay.TupleGetItem(func_1638_call(relay.reshape(call_2898.astype('uint16'), []), relay.reshape(var_2906.astype('uint16'), [13, 3, 6]), ), 0)
call_2907 = relay.TupleGetItem(func_1642_call(relay.reshape(call_2898.astype('uint16'), []), relay.reshape(var_2906.astype('uint16'), [13, 3, 6]), ), 0)
func_1866_call = mod.get_global_var('func_1866')
func_1867_call = mutated_mod.get_global_var('func_1867')
call_2914 = relay.TupleGetItem(func_1866_call(), 1)
call_2915 = relay.TupleGetItem(func_1867_call(), 1)
output = relay.Tuple([call_2898,call_2905,var_2906,call_2914,])
output2 = relay.Tuple([call_2899,call_2907,var_2906,call_2915,])
func_2917 = relay.Function([var_2906,], output)
mod['func_2917'] = func_2917
mod = relay.transform.InferType()(mod)
mutated_mod['func_2917'] = func_2917
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2918 = relay.var("var_2918", dtype = "uint16", shape = (234,))#candidate|2918|(234,)|var|uint16
func_2917_call = mutated_mod.get_global_var('func_2917')
call_2919 = func_2917_call(var_2918)
output = call_2919
func_2920 = relay.Function([var_2918], output)
mutated_mod['func_2920'] = func_2920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2821_call = mod.get_global_var('func_2821')
func_2822_call = mutated_mod.get_global_var('func_2822')
call_2958 = relay.TupleGetItem(func_2821_call(), 3)
call_2959 = relay.TupleGetItem(func_2822_call(), 3)
output = call_2958
output2 = call_2959
func_2989 = relay.Function([], output)
mod['func_2989'] = func_2989
mod = relay.transform.InferType()(mod)
output = func_2989()
func_2990 = relay.Function([], output)
mutated_mod['func_2990'] = func_2990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1365_call = mod.get_global_var('func_1365')
func_1366_call = mutated_mod.get_global_var('func_1366')
call_3005 = relay.TupleGetItem(func_1365_call(), 2)
call_3006 = relay.TupleGetItem(func_1366_call(), 2)
output = relay.Tuple([call_3005,])
output2 = relay.Tuple([call_3006,])
func_3015 = relay.Function([], output)
mod['func_3015'] = func_3015
mod = relay.transform.InferType()(mod)
mutated_mod['func_3015'] = func_3015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3015_call = mutated_mod.get_global_var('func_3015')
call_3016 = func_3015_call()
output = call_3016
func_3017 = relay.Function([], output)
mutated_mod['func_3017'] = func_3017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mod.get_global_var('func_2464')
func_2466_call = mutated_mod.get_global_var('func_2466')
call_3024 = relay.TupleGetItem(func_2464_call(), 0)
call_3025 = relay.TupleGetItem(func_2466_call(), 0)
uop_3047 = relay.cos(call_3024.astype('float64')) # shape=(3, 9, 6)
uop_3049 = relay.cos(call_3025.astype('float64')) # shape=(3, 9, 6)
func_1162_call = mod.get_global_var('func_1162')
func_1164_call = mutated_mod.get_global_var('func_1164')
const_3057 = relay.const([9.885554,6.675333,-6.494151,-1.662692,-5.583473,-3.837036,0.292290,5.497218,-7.067113,2.598462,0.715409,-1.308435,-5.436063,8.935127,-6.401381,-7.759316,-1.096217,-4.775684,-3.250334,-8.730496,-2.684964,9.599850,-9.221576,2.831976,5.380220,-5.939373,-7.830003,-8.469929,4.883278,-0.569743,-8.184767,-4.281134,3.363679,-3.519499,7.660970,-3.448862,0.809185,0.187619,-7.190799,4.995761,-4.694614,-0.398894,-0.030035,7.910952,-8.081883,-5.223833,-2.957094,8.400241], dtype = "float64")#candidate|3057|(48,)|const|float64
call_3056 = relay.TupleGetItem(func_1162_call(relay.reshape(const_3057.astype('float64'), [1, 3, 16])), 3)
call_3058 = relay.TupleGetItem(func_1164_call(relay.reshape(const_3057.astype('float64'), [1, 3, 16])), 3)
output = relay.Tuple([uop_3047,call_3056,const_3057,])
output2 = relay.Tuple([uop_3049,call_3058,const_3057,])
func_3067 = relay.Function([], output)
mod['func_3067'] = func_3067
mod = relay.transform.InferType()(mod)
mutated_mod['func_3067'] = func_3067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3067_call = mutated_mod.get_global_var('func_3067')
call_3068 = func_3067_call()
output = call_3068
func_3069 = relay.Function([], output)
mutated_mod['func_3069'] = func_3069
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3092 = relay.const(-5.380583, dtype = "float64")#candidate|3092|()|const|float64
const_3093 = relay.const([[[-5.408637,3.979008,-1.778741,-1.304952,6.917707,-7.489141],[2.446125,2.388649,0.182916,0.410227,2.712402,7.123326],[-9.533390,9.727670,-2.777337,-0.946521,-6.855043,-6.056968],[7.992851,8.496014,9.358032,7.368094,9.448404,0.411427]],[[-7.385164,9.631061,-7.670942,3.029446,-1.856393,-3.191010],[6.491604,2.838175,-8.352823,-8.291801,5.008810,-1.857735],[4.859325,2.304753,-9.753236,5.346110,9.384649,-1.176708],[8.217821,1.061165,-4.460687,4.971955,-7.970362,0.326418]],[[-9.102995,-3.995545,2.477925,-4.601249,0.608420,-6.538129],[0.851290,-0.037346,-7.697906,-2.580485,-1.331301,6.574847],[4.967114,-2.460507,-9.967942,-9.475465,1.801327,-4.420557],[-3.568231,2.895678,-9.313247,3.941566,3.345033,-7.351190]],[[7.804192,3.271700,-3.389512,-1.015889,7.304086,4.120226],[0.763379,-6.440459,7.127149,4.684567,-0.227775,3.677904],[-3.838673,-5.883937,-3.875801,2.747283,2.064335,2.118172],[-7.355888,-5.653361,-7.935848,7.102764,6.346709,-2.634593]],[[-2.643174,-9.322404,-0.448565,6.615729,4.609755,-8.825441],[-9.281638,8.392995,-5.857246,-5.097832,-0.815436,8.053424],[-7.425836,-8.590950,-9.560919,-1.976074,7.525871,4.545676],[-9.689169,-4.350014,-0.240626,9.395440,3.604994,3.782117]],[[8.148612,-7.504321,-7.302347,-7.869126,-3.554914,-4.574815],[4.452173,6.258638,-1.523581,-8.505493,0.834567,-5.070432],[1.338206,-0.031448,-3.178257,9.622273,7.770870,7.368650],[3.110298,2.624720,3.166230,-9.906561,-8.999380,2.621796]],[[9.090350,-9.644298,-8.418008,-2.518087,-0.779760,-2.352649],[-7.453229,7.080122,2.716194,4.355330,-5.458492,-6.449980],[9.876981,7.838538,-1.021338,-9.547641,-8.209242,-2.494980],[0.588027,5.374271,-9.035529,-4.706932,3.802441,-4.406766]],[[-9.777330,5.835015,-1.942361,-2.800153,-1.960941,-8.649111],[-5.027489,-4.011625,0.749830,-1.755895,-9.206572,-1.418859],[4.126221,6.848329,-2.770990,-2.643013,-6.245607,-7.181323],[8.980070,-7.686245,-5.842560,2.656901,2.676266,1.407985]],[[-8.737757,3.754473,4.387231,6.084232,-5.726581,2.631238],[6.960336,4.630186,9.513525,-8.629648,7.430086,9.626934],[3.707518,-2.813511,-0.281059,1.550172,9.141364,8.454106],[3.916246,-5.478401,-6.636672,-6.893436,7.033498,1.853943]],[[0.752515,9.003811,-6.944910,-7.178705,0.668693,-9.005990],[3.820818,9.347886,-5.634393,3.505180,7.635267,5.035126],[-6.011834,4.403941,9.439505,-8.494869,4.904672,6.192941],[-2.453663,8.527108,2.123917,-6.759887,-2.187469,4.078443]]], dtype = "float64")#candidate|3093|(10, 4, 6)|const|float64
bop_3094 = relay.mod(const_3092.astype('float64'), const_3093.astype('float64')) # shape=(10, 4, 6)
output = relay.Tuple([bop_3094,])
output2 = relay.Tuple([bop_3094,])
func_3117 = relay.Function([], output)
mod['func_3117'] = func_3117
mod = relay.transform.InferType()(mod)
output = func_3117()
func_3118 = relay.Function([], output)
mutated_mod['func_3118'] = func_3118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1816_call = mod.get_global_var('func_1816')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_3179 = relay.TupleGetItem(func_1816_call(), 2)
call_3180 = relay.TupleGetItem(func_1818_call(), 2)
output = relay.Tuple([call_3179,])
output2 = relay.Tuple([call_3180,])
func_3184 = relay.Function([], output)
mod['func_3184'] = func_3184
mod = relay.transform.InferType()(mod)
mutated_mod['func_3184'] = func_3184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3184_call = mutated_mod.get_global_var('func_3184')
call_3185 = func_3184_call()
output = call_3185
func_3186 = relay.Function([], output)
mutated_mod['func_3186'] = func_3186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2646_call = mod.get_global_var('func_2646')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_3187 = func_2646_call()
call_3188 = func_2646_call()
output = call_3187
output2 = call_3188
func_3190 = relay.Function([], output)
mod['func_3190'] = func_3190
mod = relay.transform.InferType()(mod)
output = func_3190()
func_3191 = relay.Function([], output)
mutated_mod['func_3191'] = func_3191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2191_call = mod.get_global_var('func_2191')
func_2192_call = mutated_mod.get_global_var('func_2192')
call_3196 = relay.TupleGetItem(func_2191_call(), 0)
call_3197 = relay.TupleGetItem(func_2192_call(), 0)
func_1365_call = mod.get_global_var('func_1365')
func_1366_call = mutated_mod.get_global_var('func_1366')
call_3211 = relay.TupleGetItem(func_1365_call(), 0)
call_3212 = relay.TupleGetItem(func_1366_call(), 0)
func_2377_call = mod.get_global_var('func_2377')
func_2379_call = mutated_mod.get_global_var('func_2379')
call_3223 = relay.TupleGetItem(func_2377_call(), 0)
call_3224 = relay.TupleGetItem(func_2379_call(), 0)
func_3190_call = mod.get_global_var('func_3190')
func_3191_call = mutated_mod.get_global_var('func_3191')
call_3225 = func_3190_call()
call_3226 = func_3190_call()
func_1365_call = mod.get_global_var('func_1365')
func_1366_call = mutated_mod.get_global_var('func_1366')
call_3259 = relay.TupleGetItem(func_1365_call(), 0)
call_3260 = relay.TupleGetItem(func_1366_call(), 0)
func_2464_call = mod.get_global_var('func_2464')
func_2466_call = mutated_mod.get_global_var('func_2466')
call_3261 = relay.TupleGetItem(func_2464_call(), 1)
call_3262 = relay.TupleGetItem(func_2466_call(), 1)
func_2292_call = mod.get_global_var('func_2292')
func_2294_call = mutated_mod.get_global_var('func_2294')
var_3272 = relay.var("var_3272", dtype = "float64", shape = (48,))#candidate|3272|(48,)|var|float64
call_3271 = relay.TupleGetItem(func_2292_call(relay.reshape(var_3272.astype('float64'), [48,])), 1)
call_3273 = relay.TupleGetItem(func_2294_call(relay.reshape(var_3272.astype('float64'), [48,])), 1)
uop_3274 = relay.log10(call_3223.astype('float32')) # shape=(660,)
uop_3276 = relay.log10(call_3224.astype('float32')) # shape=(660,)
output = relay.Tuple([call_3196,call_3211,call_3225,call_3259,call_3261,call_3271,var_3272,uop_3274,])
output2 = relay.Tuple([call_3197,call_3212,call_3226,call_3260,call_3262,call_3273,var_3272,uop_3276,])
func_3289 = relay.Function([var_3272,], output)
mod['func_3289'] = func_3289
mod = relay.transform.InferType()(mod)
var_3290 = relay.var("var_3290", dtype = "float64", shape = (48,))#candidate|3290|(48,)|var|float64
output = func_3289(var_3290)
func_3291 = relay.Function([var_3290], output)
mutated_mod['func_3291'] = func_3291
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3299 = relay.var("var_3299", dtype = "bool", shape = (10, 12, 10))#candidate|3299|(10, 12, 10)|var|bool
const_3300 = relay.const([[[False,False,True,True,True,False,False,False,True,False],[False,False,True,True,False,False,True,False,True,False],[True,True,False,False,True,True,False,False,True,False],[False,True,False,True,False,False,True,False,False,False],[True,True,False,False,False,True,False,True,True,False],[False,False,True,False,True,False,True,True,False,False],[True,False,False,False,True,False,False,True,True,False],[True,False,True,False,False,True,True,False,True,False],[False,True,False,True,True,True,True,False,False,True],[True,False,True,True,False,True,True,False,False,False],[False,True,False,False,True,False,True,False,True,False],[False,True,True,True,True,False,False,False,True,True]],[[False,False,True,True,True,True,False,False,True,False],[True,True,False,True,True,True,False,True,False,True],[True,False,False,True,True,True,True,False,False,False],[True,False,False,False,True,True,True,False,False,False],[False,True,True,False,False,True,False,False,False,False],[True,True,False,False,False,False,True,False,False,True],[False,True,True,True,True,True,False,False,True,False],[False,True,True,True,False,False,False,False,False,False],[False,False,False,False,False,False,False,True,False,False],[True,True,True,False,False,False,True,False,False,False],[True,False,False,False,False,False,False,False,False,True],[True,False,True,True,False,True,True,True,False,False]],[[True,True,True,True,False,True,True,True,True,False],[False,False,False,False,True,False,False,True,True,False],[False,False,False,True,True,False,False,False,True,True],[False,True,False,True,False,False,False,True,False,False],[True,False,False,False,False,True,False,False,True,True],[False,True,True,False,True,False,False,True,True,False],[False,True,True,True,True,True,True,True,False,True],[True,False,True,False,False,True,True,False,True,False],[False,True,False,True,True,True,False,False,False,True],[False,True,False,True,False,True,False,True,True,False],[True,False,False,False,False,False,False,False,True,True],[False,True,True,False,False,False,True,False,False,False]],[[True,False,True,False,True,True,True,True,False,False],[False,True,True,False,False,True,True,False,True,False],[True,False,True,False,False,True,True,False,False,True],[False,True,False,True,True,True,False,True,True,False],[True,True,False,False,True,False,False,False,False,True],[False,True,True,True,False,False,True,True,False,True],[False,False,False,False,True,False,False,True,True,True],[True,False,False,True,True,True,True,True,False,True],[False,False,True,False,False,True,False,True,False,False],[False,False,False,False,True,True,False,True,False,True],[False,True,False,False,True,True,True,False,False,True],[False,False,False,True,False,False,False,False,True,False]],[[False,True,False,False,True,True,True,False,False,True],[True,False,True,True,False,False,False,False,False,False],[True,False,True,True,True,True,True,True,False,False],[True,False,True,False,True,True,True,False,True,False],[False,False,False,True,False,True,True,False,True,True],[True,False,False,False,False,True,True,True,True,True],[False,False,False,True,False,True,False,False,True,True],[False,True,False,False,False,False,True,True,False,False],[True,True,True,True,True,True,False,True,False,True],[False,False,False,False,False,False,True,False,False,True],[False,False,False,False,True,True,False,False,False,False],[True,True,False,False,False,True,True,True,False,True]],[[False,True,False,False,True,False,True,True,False,True],[False,False,False,False,False,True,True,False,True,False],[True,False,True,True,False,False,False,True,True,True],[True,True,False,True,False,True,True,True,False,True],[False,False,False,False,True,False,True,False,True,True],[False,False,True,False,True,False,False,True,True,True],[False,False,False,False,True,False,False,False,True,False],[False,False,True,False,False,False,False,False,False,True],[True,True,True,False,True,False,False,True,False,False],[False,False,False,False,True,False,True,True,False,False],[True,False,False,False,False,True,False,True,True,True],[False,False,False,False,False,True,False,True,False,False]],[[True,False,True,True,False,False,True,True,True,False],[False,False,False,False,True,True,True,True,False,False],[False,False,False,False,False,True,True,True,False,True],[True,True,True,False,False,False,False,False,True,True],[False,True,False,False,False,True,True,True,False,True],[False,True,False,False,True,False,True,True,True,True],[False,True,False,False,True,True,False,False,True,True],[True,True,True,True,True,True,False,True,False,True],[False,False,False,False,True,True,True,False,False,False],[False,True,True,False,True,True,True,True,True,False],[False,False,True,True,False,True,False,False,False,True],[True,False,True,True,True,False,True,False,True,True]],[[False,True,False,False,True,True,True,True,False,False],[True,True,False,True,False,False,False,True,True,False],[False,False,False,True,False,True,False,True,True,True],[False,False,False,True,False,True,False,True,False,True],[True,False,False,True,True,False,False,True,True,True],[True,True,True,True,True,True,True,True,False,False],[False,True,False,False,False,False,True,False,True,False],[True,False,False,True,False,True,False,False,False,True],[True,True,True,False,False,False,False,True,True,False],[False,True,True,False,True,True,True,False,False,False],[False,True,True,False,True,True,True,True,True,True],[False,False,False,True,False,True,True,False,False,False]],[[True,False,True,False,True,False,False,False,True,False],[False,True,True,True,False,False,False,True,True,True],[True,False,True,True,True,False,False,True,False,True],[True,True,True,True,False,False,True,False,False,False],[False,True,False,True,False,False,False,True,True,True],[False,False,True,False,False,True,False,False,False,False],[True,True,False,True,False,False,True,False,False,False],[False,False,True,False,True,True,False,True,False,False],[True,True,False,False,True,False,True,True,True,True],[True,False,True,True,True,True,True,True,True,True],[True,False,True,False,False,True,True,True,False,False],[True,True,True,True,False,False,False,True,True,True]],[[True,False,True,False,False,True,True,True,False,True],[True,True,True,False,True,True,True,False,False,False],[False,True,True,True,True,True,True,True,True,False],[False,False,True,True,False,True,False,True,False,False],[False,True,True,True,False,False,True,True,True,True],[True,True,True,True,True,False,False,False,True,True],[True,True,True,False,False,True,True,True,True,True],[True,True,True,True,True,True,True,False,False,False],[True,False,False,False,True,True,False,True,True,True],[True,False,False,False,False,True,False,True,False,True],[True,True,False,False,False,True,True,False,True,True],[False,True,True,False,True,False,True,False,False,True]]], dtype = "bool")#candidate|3300|(10, 12, 10)|const|bool
bop_3301 = relay.logical_and(var_3299.astype('bool'), relay.reshape(const_3300.astype('bool'), relay.shape_of(var_3299))) # shape=(10, 12, 10)
bop_3313 = relay.divide(bop_3301.astype('float64'), relay.reshape(const_3300.astype('float64'), relay.shape_of(bop_3301))) # shape=(10, 12, 10)
uop_3317 = relay.log10(bop_3313.astype('float64')) # shape=(10, 12, 10)
output = relay.Tuple([uop_3317,])
output2 = relay.Tuple([uop_3317,])
func_3321 = relay.Function([var_3299,], output)
mod['func_3321'] = func_3321
mod = relay.transform.InferType()(mod)
mutated_mod['func_3321'] = func_3321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3322 = relay.var("var_3322", dtype = "bool", shape = (10, 12, 10))#candidate|3322|(10, 12, 10)|var|bool
func_3321_call = mutated_mod.get_global_var('func_3321')
call_3323 = func_3321_call(var_3322)
output = call_3323
func_3324 = relay.Function([var_3322], output)
mutated_mod['func_3324'] = func_3324
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3377 = relay.var("var_3377", dtype = "int8", shape = (4, 1, 9))#candidate|3377|(4, 1, 9)|var|int8
var_3378 = relay.var("var_3378", dtype = "int8", shape = (4, 10, 9))#candidate|3378|(4, 10, 9)|var|int8
bop_3379 = relay.less(var_3377.astype('bool'), var_3378.astype('bool')) # shape=(4, 10, 9)
output = relay.Tuple([bop_3379,])
output2 = relay.Tuple([bop_3379,])
func_3388 = relay.Function([var_3377,var_3378,], output)
mod['func_3388'] = func_3388
mod = relay.transform.InferType()(mod)
var_3389 = relay.var("var_3389", dtype = "int8", shape = (4, 1, 9))#candidate|3389|(4, 1, 9)|var|int8
var_3390 = relay.var("var_3390", dtype = "int8", shape = (4, 10, 9))#candidate|3390|(4, 10, 9)|var|int8
output = func_3388(var_3389,var_3390,)
func_3391 = relay.Function([var_3389,var_3390,], output)
mutated_mod['func_3391'] = func_3391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2197_call = mod.get_global_var('func_2197')
func_2198_call = mutated_mod.get_global_var('func_2198')
call_3436 = func_2197_call()
call_3437 = func_2197_call()
output = relay.Tuple([call_3436,])
output2 = relay.Tuple([call_3437,])
func_3450 = relay.Function([], output)
mod['func_3450'] = func_3450
mod = relay.transform.InferType()(mod)
mutated_mod['func_3450'] = func_3450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3450_call = mutated_mod.get_global_var('func_3450')
call_3451 = func_3450_call()
output = call_3451
func_3452 = relay.Function([], output)
mutated_mod['func_3452'] = func_3452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3117_call = mod.get_global_var('func_3117')
func_3118_call = mutated_mod.get_global_var('func_3118')
call_3453 = relay.TupleGetItem(func_3117_call(), 0)
call_3454 = relay.TupleGetItem(func_3118_call(), 0)
var_3455 = relay.var("var_3455", dtype = "float64", shape = (10, 4, 6))#candidate|3455|(10, 4, 6)|var|float64
bop_3456 = relay.power(call_3453.astype('float64'), relay.reshape(var_3455.astype('float64'), relay.shape_of(call_3453))) # shape=(10, 4, 6)
bop_3459 = relay.power(call_3454.astype('float64'), relay.reshape(var_3455.astype('float64'), relay.shape_of(call_3454))) # shape=(10, 4, 6)
output = bop_3456
output2 = bop_3459
func_3479 = relay.Function([var_3455,], output)
mod['func_3479'] = func_3479
mod = relay.transform.InferType()(mod)
var_3480 = relay.var("var_3480", dtype = "float64", shape = (10, 4, 6))#candidate|3480|(10, 4, 6)|var|float64
output = func_3479(var_3480)
func_3481 = relay.Function([var_3480], output)
mutated_mod['func_3481'] = func_3481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2377_call = mod.get_global_var('func_2377')
func_2379_call = mutated_mod.get_global_var('func_2379')
call_3488 = relay.TupleGetItem(func_2377_call(), 0)
call_3489 = relay.TupleGetItem(func_2379_call(), 0)
var_3506 = relay.var("var_3506", dtype = "float64", shape = (660,))#candidate|3506|(660,)|var|float64
bop_3507 = relay.subtract(call_3488.astype('float32'), relay.reshape(var_3506.astype('float32'), relay.shape_of(call_3488))) # shape=(660,)
bop_3510 = relay.subtract(call_3489.astype('float32'), relay.reshape(var_3506.astype('float32'), relay.shape_of(call_3489))) # shape=(660,)
output = relay.Tuple([bop_3507,])
output2 = relay.Tuple([bop_3510,])
func_3527 = relay.Function([var_3506,], output)
mod['func_3527'] = func_3527
mod = relay.transform.InferType()(mod)
mutated_mod['func_3527'] = func_3527
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3528 = relay.var("var_3528", dtype = "float64", shape = (660,))#candidate|3528|(660,)|var|float64
func_3527_call = mutated_mod.get_global_var('func_3527')
call_3529 = func_3527_call(var_3528)
output = call_3529
func_3530 = relay.Function([var_3528], output)
mutated_mod['func_3530'] = func_3530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2197_call = mod.get_global_var('func_2197')
func_2198_call = mutated_mod.get_global_var('func_2198')
call_3534 = func_2197_call()
call_3535 = func_2197_call()
output = call_3534
output2 = call_3535
func_3546 = relay.Function([], output)
mod['func_3546'] = func_3546
mod = relay.transform.InferType()(mod)
mutated_mod['func_3546'] = func_3546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mutated_mod.get_global_var('func_3546')
call_3547 = func_3546_call()
output = call_3547
func_3548 = relay.Function([], output)
mutated_mod['func_3548'] = func_3548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2821_call = mod.get_global_var('func_2821')
func_2822_call = mutated_mod.get_global_var('func_2822')
call_3632 = relay.TupleGetItem(func_2821_call(), 4)
call_3633 = relay.TupleGetItem(func_2822_call(), 4)
output = call_3632
output2 = call_3633
func_3643 = relay.Function([], output)
mod['func_3643'] = func_3643
mod = relay.transform.InferType()(mod)
output = func_3643()
func_3644 = relay.Function([], output)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1866_call = mod.get_global_var('func_1866')
func_1867_call = mutated_mod.get_global_var('func_1867')
call_3690 = relay.TupleGetItem(func_1866_call(), 0)
call_3691 = relay.TupleGetItem(func_1867_call(), 0)
var_3694 = relay.var("var_3694", dtype = "uint16", shape = (10, 66))#candidate|3694|(10, 66)|var|uint16
bop_3695 = relay.left_shift(call_3690.astype('int64'), relay.reshape(var_3694.astype('int64'), relay.shape_of(call_3690))) # shape=(10, 66)
bop_3698 = relay.left_shift(call_3691.astype('int64'), relay.reshape(var_3694.astype('int64'), relay.shape_of(call_3691))) # shape=(10, 66)
func_2215_call = mod.get_global_var('func_2215')
func_2216_call = mutated_mod.get_global_var('func_2216')
call_3704 = relay.TupleGetItem(func_2215_call(), 0)
call_3705 = relay.TupleGetItem(func_2216_call(), 0)
bop_3727 = relay.bitwise_and(call_3690.astype('int32'), relay.reshape(bop_3695.astype('int32'), relay.shape_of(call_3690))) # shape=(10, 66)
bop_3730 = relay.bitwise_and(call_3691.astype('int32'), relay.reshape(bop_3698.astype('int32'), relay.shape_of(call_3691))) # shape=(10, 66)
func_2646_call = mod.get_global_var('func_2646')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_3733 = func_2646_call()
call_3734 = func_2646_call()
func_3546_call = mod.get_global_var('func_3546')
func_3548_call = mutated_mod.get_global_var('func_3548')
call_3743 = func_3546_call()
call_3744 = func_3546_call()
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_3765 = func_3643_call()
call_3766 = func_3643_call()
output = relay.Tuple([call_3704,bop_3727,call_3733,call_3743,call_3765,])
output2 = relay.Tuple([call_3705,bop_3730,call_3734,call_3744,call_3766,])
func_3769 = relay.Function([var_3694,], output)
mod['func_3769'] = func_3769
mod = relay.transform.InferType()(mod)
mutated_mod['func_3769'] = func_3769
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3770 = relay.var("var_3770", dtype = "uint16", shape = (10, 66))#candidate|3770|(10, 66)|var|uint16
func_3769_call = mutated_mod.get_global_var('func_3769')
call_3771 = func_3769_call(var_3770)
output = call_3771
func_3772 = relay.Function([var_3770], output)
mutated_mod['func_3772'] = func_3772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3117_call = mod.get_global_var('func_3117')
func_3118_call = mutated_mod.get_global_var('func_3118')
call_3833 = relay.TupleGetItem(func_3117_call(), 0)
call_3834 = relay.TupleGetItem(func_3118_call(), 0)
output = call_3833
output2 = call_3834
func_3838 = relay.Function([], output)
mod['func_3838'] = func_3838
mod = relay.transform.InferType()(mod)
mutated_mod['func_3838'] = func_3838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3838_call = mutated_mod.get_global_var('func_3838')
call_3839 = func_3838_call()
output = call_3839
func_3840 = relay.Function([], output)
mutated_mod['func_3840'] = func_3840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3190_call = mod.get_global_var('func_3190')
func_3191_call = mutated_mod.get_global_var('func_3191')
call_3864 = func_3190_call()
call_3865 = func_3190_call()
func_2821_call = mod.get_global_var('func_2821')
func_2822_call = mutated_mod.get_global_var('func_2822')
call_3930 = relay.TupleGetItem(func_2821_call(), 2)
call_3931 = relay.TupleGetItem(func_2822_call(), 2)
const_3953 = relay.const([-6.141126,4.959402,8.749096,-0.791467,-3.590013,3.630647,7.985583,-3.918176,-9.093792,-3.145782,-9.635451,6.067395,6.751154,-2.583861,-2.222712,4.221660,-4.681885,-9.829977,9.413111,5.127655,-6.976303,-6.034431,8.705265,0.131861,-8.453339,7.983725,-5.138994,-0.727945,-3.850521,6.366242,-0.106568,-3.339987,3.912189,0.126046,0.977674,-3.594823,7.854793,-3.137446,8.756619,-6.164349,3.008203,-3.739341,-1.942985,7.685727,-8.129360,-8.909206,-3.833727,5.818337,6.255836,-0.247280,0.724862,-1.917480,3.508572,3.296867,-1.191674,-5.769111,-4.205532,8.495551,-2.525994,2.518267,6.112210,0.410971,-1.018437,7.743038,1.967743,6.593392,-5.484946,3.996603,-6.834133,2.029824,-8.275345,-6.492068,-3.842239,-9.480993,-3.359998,2.499911,0.179066,4.298438,1.123012,8.456159,-5.271812,0.694592,-9.671500,8.414427,-6.843291,-8.819125,-2.109450,4.150032,-4.229137,3.708451,8.763480,7.432742,-5.519928,1.193945,7.702902,-4.172681,8.765471,1.947718,6.952625,-2.071995,2.503137,-8.003188,4.651376,-5.747667,3.799889,-1.445542,2.840567,5.551216,7.590314,7.411970,2.191049,-2.883782,-3.103817,7.125496,-8.170903,6.855874,-0.125273,-9.579971,8.657926,4.790303,-4.705857,8.849821,0.039268,1.189002,8.727471,-3.187636,7.146106,7.591826,-3.191748,3.710399,-2.371054,-4.518241,-7.276034,-9.803215,0.568998,4.818133,-0.129517,3.362732,8.683934,-0.175462,-6.632099,-7.993366,7.352917,3.194210,-6.682338,1.176592,0.242076,1.330966,-2.017445,0.071097,7.346427,9.514245,5.801287,-4.381768,-8.178358,-4.532277,9.024459,-4.091434,-1.054440,-2.396365,-4.420896,-0.713402,7.609686,6.406912,0.879147,0.457479,8.143641,-5.779536,-8.208299,-4.119766,8.916978,9.317981,8.737948,-7.726698,9.988973,-2.140455,-0.407010,2.397997,-6.145305,3.263892,0.482093,-9.667576,4.000213,0.362829,3.430278,-0.232751,-6.286404,2.437013,5.411871,-1.495362,-1.129981,-4.046445,1.655988,-8.152300,6.667949,1.765037,4.278937,9.110120,3.845199,-2.960618,-2.302995,1.360634,-7.722241,-0.872063,-7.747312,-1.960215,9.579017,5.803325,-5.646265,-6.462099,7.027803,-9.197698,-5.487594,-3.599709,-9.909251,-2.257406,0.156556,-1.998344,9.463619,-1.254675,0.884036,-4.880697,0.585970,1.058935,-1.136106,9.782772,2.139765,-7.303401,-1.493138,1.954892,0.595398,9.104051,-3.927894,-6.190800,9.535100,4.680338,3.796530,1.799424,-9.016394,-0.160521,6.875246,-2.263102,0.845399,-1.894481,8.333327,-8.416822,7.709520,-8.109949,0.398490,3.128370,5.125007,6.587621,0.421421,0.680539,2.387134,-2.369928,-6.033861,-9.078217,6.656552,7.565024,-8.980416,4.831633,7.444009,1.935573,-5.515576,2.463931,-6.119756,-6.302595,-2.240154,2.695757,4.150160,-0.126809,-8.262064,1.135420,7.985666,3.723343,-5.665033,1.240638,-4.028558,1.829102,-1.752077,-1.333493,6.601779,-6.698879,-9.958468,-1.229646,2.116486,9.787702,9.450731,0.100946,7.947483,-6.721737,3.073972,-8.047445,8.017646,-6.867787,-5.969689,-8.855639,2.088396,3.912014,-0.976834,1.415340,-9.204226,1.578901,6.698782,-1.796183,4.021934,-3.852167,7.341183,-7.483564,-2.620266,-1.937580,1.478780,2.373537,2.297868,6.771835,-5.772665,5.774764,5.718536,-5.869202,2.207500,-6.179140,6.517903,0.719729,2.198850,9.124125,-5.343456,-2.276560,-2.703347,-9.776313,9.777960,3.508414,-3.790839,-6.260682,-9.559841,-6.470862,-0.290522,-8.659587,5.774070,-6.282743,-4.932244,2.779965,7.308808,-3.388436,1.012523,3.164926,-6.484746,-6.144667,4.420462,8.438062,3.770793,0.304019,-9.164726,4.720315,3.809848,-1.529974,-1.777663,-5.414610,2.650245,2.343778,9.877628,8.448572,-7.611286,-2.970469,0.067046,9.262785,6.221020,-2.138840,-9.740461,5.332904,1.965826,2.485673,1.881061,5.998291,4.211780,4.107237,0.096412,-0.847160,-7.951584,7.085419,-2.692671,-8.207329,9.959434,3.054497,2.998990,7.002392,-5.267535,-8.518984,-3.430046,5.941354,-2.044495,-0.922105,8.805508,7.941213,4.157650,7.152135,2.811835,6.222282,-4.853486,6.808969,4.031140,-4.976672,6.285622,-5.312636,-7.797621,4.534849,-1.889178,-9.985864,0.629562,-2.319043,-7.812477,-7.870127,1.856916,-1.506964,8.048956,0.202785,-1.447595,-7.592724,-4.336435,9.054707,-2.761423,-6.234453,-4.967021,9.376886,-1.490788,-0.249948,6.265155,3.130415,-3.323731,3.775487,0.272271,8.393620,-9.072433,4.290398,-4.980293,-9.480828,-3.451346,4.851712,3.228658,-7.145044,-1.585310,8.141135,8.894949,7.215405,-5.271134,6.627821,0.722466,-2.891218,3.464906,2.450132,-5.492896,-0.381197,-4.807463,-3.196818,-2.097686,4.601500,8.852278,9.002152,1.506925,4.188297,5.375617,5.245670,9.216712,-7.586320,-3.591894,-4.560145,6.847159,8.497163,-7.821450,-2.699703,-6.279773,-2.627254,-2.872396,-8.706085,-9.602091,3.160941,2.215188,-8.401081,-4.682000,9.089867,-3.851468,-4.781920,-2.328507,1.465061,9.825724,-1.205637,-0.681462,3.280007,-0.922914,-4.195735,1.075890,-8.342703,8.342862,0.524549,5.199650,-6.253707,-6.216131,-2.119510,-5.577832,-5.286647,8.561801,9.294778,4.681024,-2.773264,-6.920711,-0.312835,-8.455673,-0.317639,6.232362,-9.836643,-7.922561,4.667937,7.473280,-2.557490,1.439152,4.053203,4.686587,-0.740059,9.199839,-9.853661,-6.921527,-9.012229,1.555595,-6.278396,-5.325829,8.882265,3.866099,-0.046580,-7.415609,-7.331148,8.590849,-2.839385,-4.333023,5.173575,6.842995,8.306807,-8.156975,0.279282,2.823272,-7.956980,-4.972906,-9.479418,-3.340304,-1.458515,0.002949,5.376521,-5.764104,9.113037,-0.019930,-0.408358,-1.461695,3.431744,5.081908,-9.269302,-7.909335,2.542412,7.785985,-6.941958,-7.104970,-2.920194,4.693866,-4.949353,-6.842688,-0.968515,-9.138688,-3.364514,2.093690,9.523413,-0.927879,0.186481,-1.156577,8.466556,-2.036809,-9.657136,-7.349568,2.670070,-0.459100,3.352473,8.685250,6.893705,8.363270,3.139988,-5.206543,3.628977,-9.786039,9.641747,2.961482,-2.930614,1.762980,-9.675501,-8.594915,6.245994,2.752589,8.542392,4.024662,-1.813645,-5.336328,5.420701,-9.932899,-4.495955,1.467336,-3.414550,-3.580639,-0.117072,7.217401,-4.197307,-2.535210,-3.174720,-6.101947,9.018125,-5.476378,-5.210479,6.648501,3.902444,3.420311,-7.071331,-2.042820,6.418840,-5.021392,-8.039544,1.127674,1.671084,-5.073011,8.542368,6.366423,-5.448755,9.039281,-8.484194,-0.101149,-4.795820,9.194771,-6.535895,7.903919,4.504537,-9.628092,3.654828,-0.608938,7.913305,-7.409957,7.243020,1.857363,-9.390621,3.055743,2.509579,-0.995015,8.936819,6.870632,7.102180,9.885385,-8.713611,-2.475183,9.387153,-1.734907,-9.077922,-6.951321,-5.938792,2.113501,-2.194980,0.596412,7.199556,6.185460,-8.840464,-6.266279,-4.770158,-3.875822,7.647665,-3.001902,2.179501,-4.411814,-5.649975,2.343830,-1.458164,3.411042,4.031452,4.102783,-9.397847,9.799246,1.749086,3.659789,-7.417392,-6.749766,-5.388073,-8.160712,4.955009,5.248338,2.270302,-6.708492,-2.889145,-5.380207,-5.484941,-5.297758,2.933099,2.728889,4.448049,-4.578995,-7.658623,-9.347548,1.872039,-1.467486,7.420579,-5.277160,0.402439,-9.234725,-3.140194,7.566097,-3.419832,-8.083924,-5.062536,-3.423087,-0.107857,4.977265,0.948526,9.213605,-8.615070,5.625108,-6.917883,3.625985,-9.347548,5.439111,-0.066434,-2.252873,-7.778003,-3.206694,-0.498439,-7.592856,6.279287,-9.914906,5.339282,-9.070169,5.252991,5.154983,8.204618,2.054202,1.973455,1.678732,-5.911829,-4.651699,-3.978068,2.406571,-1.960100,3.341699,0.510081,-5.888771,2.072454,-4.901550,1.339829,-2.143558,-0.175402,-0.364645,-2.273582,-9.183473,7.503307,5.576639,2.685222,0.449160,8.499663,-7.111300,-1.678385,4.415640,2.250233,-8.403029,-1.376173,8.275183,5.904468,-5.784271,0.361680,-5.076034,0.305129,-1.931017,-3.531657,-5.784017,-9.171462,-9.170114,-1.233087,2.392436,6.946653,-0.753108,-8.709577,0.564547,1.258228,-6.495525,-2.799395,-0.555288,-6.818353,-1.246631,-9.947459,-6.412690,7.347085,5.991107,6.784055,8.822915,-8.866916,-1.980266,-3.509037,-1.875173,7.242196,-7.641706,7.395703,8.985077,-4.002660,-0.970796,2.698849,2.138047,9.524696,-5.391501,2.410891,-6.435742,6.432676,7.015664,-4.246836,8.367674,-7.844881,1.373647,-8.130547,5.178773,-9.335607,3.372309,3.335180,7.668177,7.394884,7.601297,1.924973,1.635939,-8.747917,-9.652687,-3.573626,-2.181766,-3.372270,3.315347,-7.160367,7.941009,-4.625034,-0.685698,2.245987,7.271580,4.825380,-0.772361,-6.075638,8.983725,-5.674536,8.490393,-5.626303,9.356731,0.295031,9.372202,0.547083,-5.476009,-0.145999,9.406455,-9.746647,-4.476699,4.863827,1.061135,-5.249664,-2.337890,-2.580655,-0.186749,8.080671,7.524241,-4.112520,5.053315,5.880120,0.431149,-6.084051,-2.297232,2.166554,6.027102,2.187626,-4.533213,0.886314,-2.094651,-5.223760,-0.203732,-0.575442,-6.042749,4.926625,-3.366237,-9.242206,-1.811923,9.696892,5.537575,9.535005,2.506076,3.083422,3.630898,8.959204,9.820872,-1.810069,9.111049,7.395263,5.000452,3.117703,-2.748827,9.812801,0.909431,0.997948,-8.813006,7.004485,6.245394,7.408690,8.650595,-5.638977,7.120127,6.995308,4.505132,-3.196056,4.466473,-2.793931,5.446595,-5.257863,-6.415346,-2.351367,-9.321093,7.220699,-6.441695,-2.910186,2.779287,-6.197264,2.067874,7.279623,7.705683,6.741702,-7.329156,-3.910262], dtype = "float32")#candidate|3953|(924,)|const|float32
bop_3954 = relay.power(call_3930.astype('float32'), relay.reshape(const_3953.astype('float32'), relay.shape_of(call_3930))) # shape=(924,)
bop_3957 = relay.power(call_3931.astype('float32'), relay.reshape(const_3953.astype('float32'), relay.shape_of(call_3931))) # shape=(924,)
func_3067_call = mod.get_global_var('func_3067')
func_3069_call = mutated_mod.get_global_var('func_3069')
call_3960 = relay.TupleGetItem(func_3067_call(), 2)
call_3961 = relay.TupleGetItem(func_3069_call(), 2)
output = relay.Tuple([call_3864,bop_3954,call_3960,])
output2 = relay.Tuple([call_3865,bop_3957,call_3961,])
func_3973 = relay.Function([], output)
mod['func_3973'] = func_3973
mod = relay.transform.InferType()(mod)
output = func_3973()
func_3974 = relay.Function([], output)
mutated_mod['func_3974'] = func_3974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1816_call = mod.get_global_var('func_1816')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_3980 = relay.TupleGetItem(func_1816_call(), 0)
call_3981 = relay.TupleGetItem(func_1818_call(), 0)
func_2532_call = mod.get_global_var('func_2532')
func_2534_call = mutated_mod.get_global_var('func_2534')
const_3986 = relay.const([2.271916,-4.615201,3.138970,-5.001856,5.315946,-6.896450,-4.287255,-6.751559,6.958963,0.588263,-6.536461,8.856793,-6.107609,-9.053827,8.668591,9.601229,1.530176,7.405195,1.045183,-2.114973,-3.703367,-7.639194,8.664147,1.413256,4.768721,-4.615609,9.497160,-4.470322,5.306267,8.115270,-6.500074,5.403095,-9.936052,-5.590626,-2.790734,-8.490195,8.195970,4.682024,-2.997447,8.361294,-1.020743,9.936270,0.287718,9.395054,-6.961834,-3.808800,5.406330,-6.495050,-9.976547,8.030253,0.967722,-2.355102,-0.570829,5.480614,-8.195896,-0.095656,-1.438282,-4.105499,-7.866078,-0.089052,-8.479549,4.438742,-2.585817,-0.188947,-7.156173,9.022535,6.595577,-6.555358,-8.099322,-9.931139,1.122074,5.066097,1.903349,0.425299,5.859320,-1.973192,-1.957045,1.341290,-7.808338,-0.848259,5.507426,-2.614395,7.241682,-5.682516,8.107083,-2.930633,8.499844,-9.447577,8.193917,-5.251175,-0.735097,-9.243963,-1.111072,9.606532,9.766697,1.092281,-2.146721,-5.556458,2.258121,2.363819,0.009249,4.374692,8.347545,3.438269,8.628070,8.299682,9.431737,7.705370,4.738909,-0.517111,-3.306148,3.700596,2.891609,-1.659953,-8.289419,7.980332,4.018713,-1.680565,3.607523,6.252620,-3.465712,-7.256771,-6.143502,6.754071,-9.333082,3.334198,-2.050383,5.935503,-6.079752,-5.445171,1.510653,-9.777531,-9.548221,6.635991,3.259834,-2.991059,6.331566,6.176734,-9.133804,1.694389,-6.034652,1.048176,2.818414,-5.484351,-0.929485,-7.104049,5.998842,-2.510279,-9.442412,2.923674,-5.380064,9.296178,-6.274732,-5.275856,1.685492,1.621939,-9.096010,-4.852642,-0.008232,5.943537,3.373452,-3.149294,-6.485184,-9.937021,7.718593,-4.299636,-3.751726,4.242560,-6.611909,2.161747,-6.628280,3.079435,-1.881505,-6.960006,5.254856,0.231493,-4.152132,1.379153,1.645986,1.258023,3.654091,-3.233299,2.283830,-9.664802,7.310905,7.929603,-7.868631,-1.679282,7.667938,6.796459,-7.443309,2.331087,5.125108,-5.139264,0.109591,9.637194,6.423201,-0.820842,2.285097,6.803052,-1.025748,-3.819775,0.317241,0.004916,-8.551539,6.705496,-5.659316,5.529710,2.005053,-6.581747,8.031602,6.777408,8.620773,0.071668,-1.508932,-8.416103,1.492152,-3.318725,8.877050,9.388814,-7.129303,5.295385,-8.362835,-1.786785,-2.536289,-6.586538,-6.676831,-5.529916,7.882433,4.618737,-0.082142,-5.875300,-5.974303,1.951669,0.770384,3.832000,8.749341,-4.073169,1.853484,-0.177630,3.030576,5.793205,-3.381348,3.666624,4.189149,-5.608779,-5.986258,-6.711280,1.559955,6.198039,-3.030412,-9.094663,9.253964,6.538178,-7.229362,-7.515267,-5.615126,1.202607,2.727422,-5.513175,1.975104,3.965180,-6.494173,0.516404,3.699618,-2.695702,9.590502,8.970232,9.734248,-8.215740,-6.463123,2.934346,-8.546576,-7.309883,2.458241,2.564213,3.533388,0.075249,-8.964758,0.365535,8.015833,8.721448,-3.428129,1.123466,-0.869914,0.141781,-4.697016,1.717209], dtype = "float64")#candidate|3986|(288,)|const|float64
call_3985 = relay.TupleGetItem(func_2532_call(relay.reshape(const_3986.astype('float64'), [8, 4, 9])), 1)
call_3987 = relay.TupleGetItem(func_2534_call(relay.reshape(const_3986.astype('float64'), [8, 4, 9])), 1)
func_1427_call = mod.get_global_var('func_1427')
func_1430_call = mutated_mod.get_global_var('func_1430')
const_3994 = relay.const([9.396439,0.889123,-7.570163,0.142563,-7.755102,-4.180218,-1.321048,-9.961581,-8.831603,-1.576686,9.593009,8.104747,7.708822,5.893399,8.262451,3.557706,0.615988,5.360051,-4.930812,-2.203108,1.722466,5.360214,1.977648,-9.967205,9.135043,2.760987,-8.482471,6.620127,-4.638550,7.754603,2.312393,-2.812474,0.346673,-7.630340,-6.043453,4.950413,1.471859,-3.323447,-4.024213,3.026058,0.125955,-5.944468,8.418209,5.144480,-2.582403,-0.961163,-8.578966,-0.531636,-4.306949,4.031574,-8.272454,0.149684,2.784556,-6.663550,-3.559256,-6.623900,-4.897404,8.524014,-4.605017,1.073600,7.612897,-5.703451,-5.372147,-8.948092,0.680542,-8.955434,-6.576164,5.750516,0.389933,9.060013,9.952771,1.286642,-9.386519,-5.865328,5.085739,-5.276007,7.842714,-3.891657,1.778738,-2.276022,3.875759,-1.603959,-7.666707,4.496209,5.500133,8.187439,-2.795666,3.422631,-4.702436,8.976400,5.027859,-4.171514,-7.229901,7.824931,3.138788,-7.192171,-8.428286,-9.603645,1.318904,-4.653723,-1.684888,1.376019,-9.762387,-0.565674,-1.905392,-3.685188,8.118661,-1.542926,-8.320668,7.505380,-0.135932,-3.740797,0.023123,6.932254,-1.632436,9.208681,-0.771659,-8.668458,3.914784,3.226652,-8.853631,-1.093148,-2.576704,-4.938285,-2.148007,1.835679,5.026248,7.709885,-4.475245,4.181797,-1.614626,-0.900705,-9.840341,0.036933,3.878912,0.712801,-1.802625,9.280068,8.161714,7.383322,7.144207,-9.900787,-6.707511,7.890512,-8.355879,-5.555245,-4.763190,5.749166,4.109754,-6.403731,6.978909,-2.368949,4.499435,2.857816,7.544010,-8.066857,1.382356,-6.244462,-7.824203,-7.524980,-6.266422,1.518568,9.800605,1.608841,9.007137,5.795076,-1.642399,5.569860,1.207398,-0.928502,6.223801,-0.605372,6.438673,2.928268,-8.585708,-3.314586,-6.691551,4.071347,3.268986,-1.757846,5.127902,8.983106,9.684442,4.044720,1.722660,-7.855004,3.851693,4.987712,2.712616,-4.938417,0.820498,-3.039612,7.190825,8.490461,1.230695,7.622369,-4.720829,-8.534834,9.252258,-9.020689,6.333504,-2.082047,1.758437,8.982115,-2.014787,7.476659,-6.193651,4.041226,7.188035,-1.505984,-5.640600,6.352902,5.619939,-3.326323,-5.687125,3.951333,4.762341,-4.842279,-3.182150,5.144534,5.451530,-0.364891,1.937080,0.966822,-6.203513,1.442913,-9.895437,6.720255,-0.147421,-1.333281,2.879262,-4.211557,1.481824,6.158072,-2.306924,-2.739513,2.082041,7.065371,-7.966572,-1.710908,3.605701,4.351646,-7.128680,4.893653,7.252449,8.181131,7.499188,9.039758,-8.907297,-3.470934,-4.974871,7.757182,4.562091,-5.105397,0.314403,6.284156,-3.704688,-3.273862,0.887179,4.062322,-2.628863,0.707738,-1.763331,-3.987796,-8.791379,3.904500,-3.330333,-9.718901,3.219586,7.711996,6.028868,5.495779,-7.782660,8.136594,4.690106,-9.246890,3.841603,-3.120572,-0.145330,8.215762,6.419838,0.483997,8.053919,-0.209555,-3.271712,0.171842,-1.615614,5.449875,4.575906,-9.803534,4.213623,-4.152052,6.007445,-6.612687,3.802971,-8.353528,-3.302929,-3.737565,0.995512,2.307148,7.550140,-3.851509,9.867296,-7.009510,-3.236385,-1.751360,8.178652,-5.148420,3.663804,-8.495898,-0.618112,6.920595,1.003217,-5.992768,-5.932266,-1.270575,5.755869,3.592175,0.610230,0.353334,1.234817,1.183243,-7.048270,1.952270,5.825476,-8.547943,-8.195827,-6.905403,-7.518817,-8.585721,-5.611243,-4.139017,7.201226,5.288309,6.750544,-0.140755,-9.384248,7.023036,-1.514615,-6.304973,-9.754528,5.876236,-3.576363,-2.165393,7.052636,-7.778823,-2.716836,1.071693,-5.015128,-5.963373,8.745186,-9.542051,-2.968140,-1.966961,-2.352322,-0.984351,2.423469,9.417690,-4.560380,-7.059924,8.152384,5.315365,5.288356,4.507757,9.484307,5.133303,7.928613,-7.424054,6.874247,-6.575457,2.923870,2.441967,-2.901410,4.795903,-7.278083,-8.545530,-7.035660,1.673869,-3.011140,1.553795,-5.671847,-7.966595,0.521532,-6.948553,2.697985,-5.406845,6.666058,-9.348618,2.902488,-3.882629,6.596010,4.871091,2.187536,-2.175078,6.680854,7.655001,-6.684733,1.183136,6.767036,2.873489,-6.533777,7.863812,6.662276,-0.514063,5.592166,-0.910450,7.745400,-5.228182,7.636023,1.492407,9.182998,-1.995619,-3.673116,7.588345,6.552835,6.172043,-9.942604,-1.498934,-5.225151,-4.930464,4.473201,-4.044093,-6.262276,3.147976,6.072054,8.415478,-3.454038,3.542588,9.813102,-2.019572,1.175234,8.863574,-5.902074,7.040921,-1.091099,2.475006,-3.240444,-0.022429,-4.618852,-2.065205,-5.121138,-0.828225,-0.994734,-5.930838,-3.341493,-0.518756,-6.459601,-2.427714,4.020018,3.465897,5.481060,-5.983282,-1.505250,6.070325,-9.776331,6.251938,9.383596,0.638718,4.122169,3.344644,-4.023923,5.431570,0.374915,-2.223419,8.404069,-4.556835,-4.588187,-5.085286,-7.850191,2.524447,-1.112958,5.157536,3.516214,2.659673,-3.280444,-8.964708,-0.745857,1.445042,9.824295,0.043741,8.927156,-3.076329,-7.589022,2.260307,-0.405360,6.935636,6.638146,-3.631728,-0.862161,9.037933,-8.301279,0.947855,7.967922,8.889265,-8.204596,4.712698,-3.618238,4.353267,-8.261290,7.156291,-1.150856,4.570825,-9.441251,-1.445882,3.514774,7.614525,2.589584,9.296734,-7.954992,-9.203574,7.613690,-8.668043,6.358317,-8.982211,-2.424041,-8.848921,-1.812560,-0.161143,7.525510,7.727958,-4.476437,-6.366828,-7.466688,-5.751396,-6.600377,1.070249,-2.212360,-0.285076,-9.131440,-6.574801,-7.615752,1.324802,-6.771386,5.831571,-3.099024,6.825477,-7.375710,-3.574584,1.136783,9.961597,8.942431,1.228975,-3.079466,9.274406,-1.778809,-9.723425,-4.712937,0.284433,2.672462,-3.478259,-4.109251,0.871800,-0.630434,6.697713,-6.719063,1.547685,1.126172,-6.783630,-0.569260,-5.629701,4.157196,-9.379086,-7.050622,-7.244529,-6.846644,6.713573,-3.304103,1.068287,6.302681,-1.662854,7.838512,3.438324,-0.617162,7.615263,-7.010135,1.537087,-5.154748,7.412430,-9.653638,-8.664091,4.640090,5.045938,-0.768752,-0.583066,5.601177,-8.374853,-3.013603,7.072154,5.320041,-3.920207,8.386104,7.539472,7.039117,-8.521654,-3.265310,-6.368720,3.470561,-4.153830,7.463638,3.468679,4.210474,7.698706,3.414980,3.911858,6.473469,-0.886654,4.835817,-6.281971,8.398484,-1.206208,-8.944542,7.051155,-8.205295,7.474480,-1.589119,-7.324406,-1.512144,8.916515,2.246512,-1.629832,-5.108655,1.303354,-2.663474,-7.667120,-3.037492,-2.840623,-3.046129,-6.843967,5.892141,-5.022720,-2.520110,5.910085,-3.629108,5.556108,9.230314,9.543662,-8.663139,-8.503517,-6.373730,-0.235135,4.657687,3.834298,-1.888413,5.284884,-7.236569,8.972178,-1.581652,6.635986,-8.145061,-4.511279,3.712953,1.594192,-7.687384,-6.868878,0.583208,-7.688543,3.583742,-9.215915,8.478224,8.671393,2.528050,7.308151,-8.137363,-9.352521,0.409528,-8.359379,-0.636139,-6.128245,8.381746,-0.034810,-8.975712,-0.416557,-3.532598,3.549984,-6.495826,0.899913,-4.842973,8.417924,-5.001470,3.918169,5.432672,-5.190790,9.720735,-4.799636,7.264823,5.516359,9.515208,-7.894759,-2.588308,-3.230311,-9.063276,-9.299648,-0.121969,2.496610,-8.993038,-6.828677,4.256030,6.440249,0.352656,0.094262,-2.478391,-2.135694,-4.331051,-4.062436,0.258666,7.306641,-9.207864,-3.679158,-5.073253,4.675866,-7.408877,-2.153563,-5.773977,-6.829144,5.730845,2.666898,4.029533,-9.946436,-6.779567,-4.946339,9.314571,1.037895,-7.220003,-7.858219,-6.980536,6.643992,9.725564,-5.212929,7.817680,5.521729,-4.023007,0.320311,7.322939,-1.784382,-3.643439,6.449024,-5.965592,0.645202,-4.165963,9.447638,-0.117003,8.124632,-9.114334,6.994164,-3.399515,1.034291,5.000960,-8.121016,-1.751184,-3.178978,-9.063021,-7.222776,5.586769,4.618211,7.819284,-4.883006,8.428918,7.417566,9.789158,8.444948,7.727271,-2.134950,9.813235,4.093359,8.348000,-8.313976,0.758110,8.769011,9.668851,-4.262489,5.052625,-3.674342,-7.953158,6.445506,-4.455065,-1.778118,9.550496,7.905615,1.944313,-9.169061,-5.367745,-8.806795,8.828265,-1.217245,-8.293174,3.160300,2.976806,-0.731986,2.846265,4.168507,2.945463,6.696477,6.110691,4.229994,-7.658361,6.706051,6.392151,-4.507650,8.641611,1.514671,-4.432947,-0.710609,-6.801580,7.730437,-3.959656,5.838193,-4.608015,-7.784379,2.354454,7.008929,0.521047,9.110970,-1.184559,8.989878,-0.086178,-0.557929,7.223874,7.783619,6.741122,8.806174,7.048581,2.239745,1.091532,8.822732,-4.135258,-1.918793,-5.267499,-9.113704,-1.577849,-2.677450,-9.699335,4.476826,7.707878,0.255863,1.651240,-3.520712,3.737234,7.316714,8.517116,-9.303885,0.352937,8.462539,-0.881695,-2.970589,6.523546,9.662363,0.103851,2.033866,0.935357,-9.470102,9.864596,-0.746240,-0.721429,-9.284846,-9.334076,3.238988,2.375964,0.811997,-0.970620,-0.441450,1.559797,1.609851,-8.389320,6.930485,1.544449,8.603333,3.545376,-8.883719,8.165621,7.491866,3.244800,9.891463,-2.329466,-4.712331,-9.733926,-5.467760,-1.420452,2.726047,3.222943,3.765014,-5.283832,4.408501,-5.237589,6.389430,-8.687192,9.430521,-8.147708,5.065290,-9.163372,9.297358,-5.907735,-7.920124,-8.271554,-7.665980,-1.786112,-2.078108,-6.243556,-1.439274,8.271470,-6.595393,4.255168,8.449175,-1.228629,-8.149884,-5.399969,7.348400,0.132086,-8.789630,1.041979,0.083253,-9.680103,-8.362180,-7.502145,7.089580,6.149621,7.718624,6.433009,-1.903936,5.217869,-2.692262,-2.747658,7.616163,9.201046,1.066534], dtype = "float32")#candidate|3994|(924,)|const|float32
call_3993 = relay.TupleGetItem(func_1427_call(relay.reshape(const_3994.astype('float32'), [11, 6, 14])), 1)
call_3995 = relay.TupleGetItem(func_1430_call(relay.reshape(const_3994.astype('float32'), [11, 6, 14])), 1)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_4002 = relay.TupleGetItem(func_966_call(), 0)
call_4003 = relay.TupleGetItem(func_968_call(), 0)
output = relay.Tuple([call_3980,call_3985,const_3986,call_3993,const_3994,call_4002,])
output2 = relay.Tuple([call_3981,call_3987,const_3986,call_3995,const_3994,call_4003,])
func_4049 = relay.Function([], output)
mod['func_4049'] = func_4049
mod = relay.transform.InferType()(mod)
mutated_mod['func_4049'] = func_4049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4049_call = mutated_mod.get_global_var('func_4049')
call_4050 = func_4049_call()
output = call_4050
func_4051 = relay.Function([], output)
mutated_mod['func_4051'] = func_4051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2197_call = mod.get_global_var('func_2197')
func_2198_call = mutated_mod.get_global_var('func_2198')
call_4123 = func_2197_call()
call_4124 = func_2197_call()
func_2821_call = mod.get_global_var('func_2821')
func_2822_call = mutated_mod.get_global_var('func_2822')
call_4131 = relay.TupleGetItem(func_2821_call(), 2)
call_4132 = relay.TupleGetItem(func_2822_call(), 2)
output = relay.Tuple([call_4123,call_4131,])
output2 = relay.Tuple([call_4124,call_4132,])
func_4144 = relay.Function([], output)
mod['func_4144'] = func_4144
mod = relay.transform.InferType()(mod)
output = func_4144()
func_4145 = relay.Function([], output)
mutated_mod['func_4145'] = func_4145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4049_call = mod.get_global_var('func_4049')
func_4051_call = mutated_mod.get_global_var('func_4051')
call_4149 = relay.TupleGetItem(func_4049_call(), 4)
call_4150 = relay.TupleGetItem(func_4051_call(), 4)
func_2179_call = mod.get_global_var('func_2179')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_4153 = func_2179_call()
call_4154 = func_2179_call()
output = relay.Tuple([call_4149,call_4153,])
output2 = relay.Tuple([call_4150,call_4154,])
func_4157 = relay.Function([], output)
mod['func_4157'] = func_4157
mod = relay.transform.InferType()(mod)
mutated_mod['func_4157'] = func_4157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4157_call = mutated_mod.get_global_var('func_4157')
call_4158 = func_4157_call()
output = call_4158
func_4159 = relay.Function([], output)
mutated_mod['func_4159'] = func_4159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2215_call = mod.get_global_var('func_2215')
func_2216_call = mutated_mod.get_global_var('func_2216')
call_4168 = relay.TupleGetItem(func_2215_call(), 0)
call_4169 = relay.TupleGetItem(func_2216_call(), 0)
uop_4177 = relay.cos(call_4168.astype('float32')) # shape=(6, 8, 11)
uop_4179 = relay.cos(call_4169.astype('float32')) # shape=(6, 8, 11)
func_2646_call = mod.get_global_var('func_2646')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_4183 = func_2646_call()
call_4184 = func_2646_call()
output = relay.Tuple([uop_4177,call_4183,])
output2 = relay.Tuple([uop_4179,call_4184,])
func_4193 = relay.Function([], output)
mod['func_4193'] = func_4193
mod = relay.transform.InferType()(mod)
output = func_4193()
func_4194 = relay.Function([], output)
mutated_mod['func_4194'] = func_4194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mod.get_global_var('func_2464')
func_2466_call = mutated_mod.get_global_var('func_2466')
call_4210 = relay.TupleGetItem(func_2464_call(), 0)
call_4211 = relay.TupleGetItem(func_2466_call(), 0)
output = call_4210
output2 = call_4211
func_4220 = relay.Function([], output)
mod['func_4220'] = func_4220
mod = relay.transform.InferType()(mod)
mutated_mod['func_4220'] = func_4220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4220_call = mutated_mod.get_global_var('func_4220')
call_4221 = func_4220_call()
output = call_4221
func_4222 = relay.Function([], output)
mutated_mod['func_4222'] = func_4222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3067_call = mod.get_global_var('func_3067')
func_3069_call = mutated_mod.get_global_var('func_3069')
call_4287 = relay.TupleGetItem(func_3067_call(), 1)
call_4288 = relay.TupleGetItem(func_3069_call(), 1)
func_3117_call = mod.get_global_var('func_3117')
func_3118_call = mutated_mod.get_global_var('func_3118')
call_4293 = relay.TupleGetItem(func_3117_call(), 0)
call_4294 = relay.TupleGetItem(func_3118_call(), 0)
var_4334 = relay.var("var_4334", dtype = "float64", shape = (6, 8, 11))#candidate|4334|(6, 8, 11)|var|float64
bop_4335 = relay.power(call_4287.astype('float64'), relay.reshape(var_4334.astype('float64'), relay.shape_of(call_4287))) # shape=(6, 8, 11)
bop_4338 = relay.power(call_4288.astype('float64'), relay.reshape(var_4334.astype('float64'), relay.shape_of(call_4288))) # shape=(6, 8, 11)
func_1072_call = mod.get_global_var('func_1072')
func_1074_call = mutated_mod.get_global_var('func_1074')
var_4360 = relay.var("var_4360", dtype = "float64", shape = (660,))#candidate|4360|(660,)|var|float64
call_4359 = relay.TupleGetItem(func_1072_call(relay.reshape(var_4360.astype('float64'), [660,])), 1)
call_4361 = relay.TupleGetItem(func_1074_call(relay.reshape(var_4360.astype('float64'), [660,])), 1)
output = relay.Tuple([call_4293,bop_4335,call_4359,var_4360,])
output2 = relay.Tuple([call_4294,bop_4338,call_4361,var_4360,])
func_4370 = relay.Function([var_4334,var_4360,], output)
mod['func_4370'] = func_4370
mod = relay.transform.InferType()(mod)
mutated_mod['func_4370'] = func_4370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4370_call = mutated_mod.get_global_var('func_4370')
var_4372 = relay.var("var_4372", dtype = "float64", shape = (6, 8, 11))#candidate|4372|(6, 8, 11)|var|float64
var_4373 = relay.var("var_4373", dtype = "float64", shape = (660,))#candidate|4373|(660,)|var|float64
call_4371 = func_4370_call(var_4372,var_4373,)
output = call_4371
func_4374 = relay.Function([var_4372,var_4373,], output)
mutated_mod['func_4374'] = func_4374
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4387 = relay.const([[[-8.922964,0.016608,2.503604],[-6.144772,2.920750,-7.030600],[-5.255658,9.069586,-3.519516],[-1.619278,-3.895923,-3.946344],[5.139636,5.778729,6.646924],[-6.429094,-4.894986,7.259024],[2.534330,7.201401,7.277028],[2.325059,-4.816417,2.356835],[5.018422,-2.505583,-3.186600],[-6.406132,4.407233,-7.719188]],[[-3.089034,-1.306038,4.143406],[-1.134010,5.792156,1.958289],[9.497783,0.745116,8.656723],[8.831157,-7.497968,2.202343],[-9.058288,-3.302086,7.576487],[-9.925817,0.981071,3.626956],[6.295621,1.381589,9.485496],[2.415014,-9.499047,-6.923212],[6.339478,-9.638055,0.840327],[8.159007,1.099011,3.316003]],[[-0.105297,-1.524923,-6.149734],[-3.710019,-8.829694,-2.728831],[7.094985,-6.950359,-8.841413],[4.525489,-6.589565,6.897918],[2.025962,1.018160,-7.348444],[-6.896451,2.430695,-2.589694],[-5.381721,2.770858,3.474348],[-7.402796,8.469245,-7.008077],[9.357649,-6.197730,2.801117],[6.639250,-6.946445,1.412334]],[[8.904015,2.832416,-0.355800],[-8.766683,3.213410,7.048440],[1.933078,3.227833,6.726817],[4.946490,0.024252,-7.458634],[7.642862,-6.394084,9.829342],[9.349089,1.671327,3.569023],[-3.268450,-8.333649,6.564140],[-1.169326,6.620267,5.359624],[9.820956,2.236805,-2.681517],[3.460768,2.486041,9.284211]],[[1.978474,7.107896,-6.967370],[8.486432,-9.935665,-1.192497],[2.055735,-5.372131,-0.559585],[9.622297,-2.610025,-3.737093],[1.971403,5.526988,8.609381],[5.590671,6.911156,7.198772],[7.256525,-9.223625,-9.512631],[1.917951,-3.300525,-1.529727],[1.922459,-3.023385,-8.608214],[4.298253,0.091114,-3.005899]],[[5.145081,9.518684,-6.707092],[-9.809300,1.459344,1.532958],[1.746569,-0.442761,5.119303],[-6.749815,-8.525894,-6.674444],[-8.622210,-1.660080,-5.501296],[-1.148690,-8.442124,-8.731607],[3.788991,-0.339743,-9.679109],[-3.027665,-7.492139,1.939943],[-3.800480,6.793982,-2.792743],[8.677229,3.578760,-3.830679]],[[3.741450,1.828751,5.203533],[-9.316952,2.113424,5.152747],[0.605877,4.855862,-1.456723],[8.039421,7.167115,-0.401895],[-8.065923,-2.878008,9.738730],[-4.887133,6.814952,8.290623],[9.332617,7.077479,-0.470704],[-5.600502,3.407645,-9.439642],[-8.913077,-2.024977,-2.010842],[-7.108065,-4.306899,-4.770965]],[[2.348440,-2.871248,-1.036221],[1.316428,-4.265428,-2.828400],[-7.028107,-1.902282,2.812884],[8.990960,-0.960400,1.613134],[-6.628371,6.158256,-5.020481],[2.222179,-5.080290,-5.254873],[5.066432,2.604673,7.874042],[-2.753646,-4.723652,0.091342],[4.679229,-9.420697,-9.157784],[-3.962234,0.896082,5.721855]],[[9.141735,6.379971,8.089588],[7.871955,-6.371618,-1.242583],[-8.699766,4.519385,3.237186],[-2.419765,6.540545,-8.185505],[-2.594536,1.948602,-7.477445],[9.687995,3.083688,-6.020140],[8.300458,7.801417,-0.801626],[2.519880,-8.408189,2.082835],[2.249356,8.281522,-9.114537],[-6.299503,-0.223356,-6.302025]],[[-4.926514,8.686958,4.580824],[-7.266013,8.563408,-5.955086],[3.432908,-3.657301,-6.720355],[1.265058,-6.978895,-2.017450],[-2.947422,1.342050,-1.754511],[-9.136296,-1.923821,-6.623898],[7.848037,-0.229630,-7.815397],[-6.942910,-6.487997,-8.215161],[-2.621214,-5.430766,-9.193402],[-8.387458,2.735394,6.520799]],[[1.339668,-0.186253,9.694063],[7.910970,-6.093536,9.292496],[-1.479474,-0.493824,2.083877],[5.132760,8.599805,-1.296272],[2.013137,-0.539637,-1.510897],[-0.897749,5.333109,7.111631],[-1.503546,6.508005,-0.973439],[2.226606,-5.454392,2.838835],[-1.089500,-5.209431,-2.021590],[9.221194,6.426553,-7.915527]],[[-6.437167,3.065761,-4.970186],[-9.806999,-5.404234,2.952020],[1.322822,2.003514,-0.799764],[3.506496,-6.171109,-6.831723],[-4.450613,-9.916498,-2.238662],[7.976659,1.212479,-2.545357],[-6.545446,-0.506571,1.745084],[7.545855,6.677103,-5.656182],[-6.662705,-2.060853,4.821614],[7.641165,5.518614,9.232086]],[[1.634425,-5.892962,-2.171589],[-0.418795,2.274811,2.495677],[-3.931210,3.511343,1.643046],[5.238712,5.728790,-3.539579],[6.575283,-3.973480,6.047552],[-5.599832,7.570943,-1.912597],[1.995170,-6.154793,9.128331],[0.449311,-2.946053,0.027426],[5.234257,9.583817,2.134826],[1.810259,-5.448210,3.779615]],[[-6.629723,-9.981502,-0.887203],[6.558202,8.042350,-2.276667],[4.200223,-0.491415,1.677646],[7.159807,-2.358632,1.006594],[9.498758,-7.603779,3.044380],[7.836653,9.447827,7.226362],[-2.738124,-0.665980,-5.295562],[7.954745,-3.113404,7.786301],[5.931022,-9.708417,-8.634588],[5.260155,3.218537,6.838197]]], dtype = "float64")#candidate|4387|(14, 10, 3)|const|float64
uop_4388 = relay.sqrt(const_4387.astype('float64')) # shape=(14, 10, 3)
output = relay.Tuple([uop_4388,])
output2 = relay.Tuple([uop_4388,])
func_4393 = relay.Function([], output)
mod['func_4393'] = func_4393
mod = relay.transform.InferType()(mod)
mutated_mod['func_4393'] = func_4393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mutated_mod.get_global_var('func_4393')
call_4394 = func_4393_call()
output = call_4394
func_4395 = relay.Function([], output)
mutated_mod['func_4395'] = func_4395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3190_call = mod.get_global_var('func_3190')
func_3191_call = mutated_mod.get_global_var('func_3191')
call_4429 = func_3190_call()
call_4430 = func_3190_call()
func_1668_call = mod.get_global_var('func_1668')
func_1671_call = mutated_mod.get_global_var('func_1671')
var_4441 = relay.var("var_4441", dtype = "float64", shape = (2, 1200))#candidate|4441|(2, 1200)|var|float64
call_4440 = func_1668_call(relay.reshape(var_4441.astype('float64'), [15, 10, 16]))
call_4442 = func_1668_call(relay.reshape(var_4441.astype('float64'), [15, 10, 16]))
output = relay.Tuple([call_4429,call_4440,var_4441,])
output2 = relay.Tuple([call_4430,call_4442,var_4441,])
func_4445 = relay.Function([var_4441,], output)
mod['func_4445'] = func_4445
mod = relay.transform.InferType()(mod)
var_4446 = relay.var("var_4446", dtype = "float64", shape = (2, 1200))#candidate|4446|(2, 1200)|var|float64
output = func_4445(var_4446)
func_4447 = relay.Function([var_4446], output)
mutated_mod['func_4447'] = func_4447
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4488 = relay.var("var_4488", dtype = "float64", shape = (10, 12, 6))#candidate|4488|(10, 12, 6)|var|float64
uop_4489 = relay.tan(var_4488.astype('float64')) # shape=(10, 12, 6)
output = relay.Tuple([uop_4489,])
output2 = relay.Tuple([uop_4489,])
func_4502 = relay.Function([var_4488,], output)
mod['func_4502'] = func_4502
mod = relay.transform.InferType()(mod)
var_4503 = relay.var("var_4503", dtype = "float64", shape = (10, 12, 6))#candidate|4503|(10, 12, 6)|var|float64
output = func_4502(var_4503)
func_4504 = relay.Function([var_4503], output)
mutated_mod['func_4504'] = func_4504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1365_call = mod.get_global_var('func_1365')
func_1366_call = mutated_mod.get_global_var('func_1366')
call_4599 = relay.TupleGetItem(func_1365_call(), 0)
call_4600 = relay.TupleGetItem(func_1366_call(), 0)
func_4193_call = mod.get_global_var('func_4193')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_4604 = relay.TupleGetItem(func_4193_call(), 1)
call_4605 = relay.TupleGetItem(func_4194_call(), 1)
func_4370_call = mod.get_global_var('func_4370')
func_4374_call = mutated_mod.get_global_var('func_4374')
var_4618 = relay.var("var_4618", dtype = "float64", shape = (528,))#candidate|4618|(528,)|var|float64
var_4619 = relay.var("var_4619", dtype = "float64", shape = (660,))#candidate|4619|(660,)|var|float64
call_4617 = relay.TupleGetItem(func_4370_call(relay.reshape(var_4618.astype('float64'), [6, 8, 11]), relay.reshape(var_4619.astype('float64'), [660,]), ), 3)
call_4620 = relay.TupleGetItem(func_4374_call(relay.reshape(var_4618.astype('float64'), [6, 8, 11]), relay.reshape(var_4619.astype('float64'), [660,]), ), 3)
func_2989_call = mod.get_global_var('func_2989')
func_2990_call = mutated_mod.get_global_var('func_2990')
call_4621 = func_2989_call()
call_4622 = func_2989_call()
output = relay.Tuple([call_4599,call_4604,call_4617,var_4618,var_4619,call_4621,])
output2 = relay.Tuple([call_4600,call_4605,call_4620,var_4618,var_4619,call_4622,])
func_4626 = relay.Function([var_4618,var_4619,], output)
mod['func_4626'] = func_4626
mod = relay.transform.InferType()(mod)
mutated_mod['func_4626'] = func_4626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4626_call = mutated_mod.get_global_var('func_4626')
var_4628 = relay.var("var_4628", dtype = "float64", shape = (528,))#candidate|4628|(528,)|var|float64
var_4629 = relay.var("var_4629", dtype = "float64", shape = (660,))#candidate|4629|(660,)|var|float64
call_4627 = func_4626_call(var_4628,var_4629,)
output = call_4627
func_4630 = relay.Function([var_4628,var_4629,], output)
mutated_mod['func_4630'] = func_4630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3838_call = mod.get_global_var('func_3838')
func_3840_call = mutated_mod.get_global_var('func_3840')
call_4637 = func_3838_call()
call_4638 = func_3838_call()
output = relay.Tuple([call_4637,])
output2 = relay.Tuple([call_4638,])
func_4652 = relay.Function([], output)
mod['func_4652'] = func_4652
mod = relay.transform.InferType()(mod)
mutated_mod['func_4652'] = func_4652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4652_call = mutated_mod.get_global_var('func_4652')
call_4653 = func_4652_call()
output = call_4653
func_4654 = relay.Function([], output)
mutated_mod['func_4654'] = func_4654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3450_call = mod.get_global_var('func_3450')
func_3452_call = mutated_mod.get_global_var('func_3452')
call_4686 = relay.TupleGetItem(func_3450_call(), 0)
call_4687 = relay.TupleGetItem(func_3452_call(), 0)
output = call_4686
output2 = call_4687
func_4694 = relay.Function([], output)
mod['func_4694'] = func_4694
mod = relay.transform.InferType()(mod)
output = func_4694()
func_4695 = relay.Function([], output)
mutated_mod['func_4695'] = func_4695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4193_call = mod.get_global_var('func_4193')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_4762 = relay.TupleGetItem(func_4193_call(), 0)
call_4763 = relay.TupleGetItem(func_4194_call(), 0)
func_632_call = mod.get_global_var('func_632')
func_635_call = mutated_mod.get_global_var('func_635')
const_4765 = relay.const([1.809367,-5.273844,-3.556566,-6.084870,8.533120,3.117227,-1.987651,2.660845,3.160131,-3.415280,5.483037,3.956784,8.964729,7.528411,-7.653356,7.195674,-6.372992,-4.181256,4.503728,-1.516849,-0.273302,1.961233,4.886309,-2.382306,-4.633086,8.585085,-1.392466,-5.200605,2.826720,-2.186415,-6.203389,1.607866,-4.140391,7.036769,-7.996229,-2.728328,7.471709,-5.526466,-4.245231,-5.273066,0.282375,-9.734124,-4.884947,-9.762882,-2.831934,-9.777117,-2.573754,-7.190921,1.886372,-1.850289,0.869912,-7.364518,-9.696662,-2.241347,4.086609,5.815471,-0.111290,-5.794571,4.355608,-5.051117,-2.751782,-2.821273,-3.501791,7.909521,-3.916367,-8.255877,-6.571601,-5.800496,0.170310,4.939916,8.906676,0.056300,-0.612794,6.633592,-5.255765,9.812775,-2.952830,6.591356,-8.701386,-4.342179,7.224665,5.322946,2.500948,-9.958070,-3.923989,0.701264,2.577344,8.021918,-0.117462,7.803672,7.564073,7.041754,-8.874598,-3.420540,1.116668,6.765069,4.648178,-7.810272,-4.629049,3.242107,-5.844946,7.144687,-3.709914,6.191001,4.360016,5.963078,-6.096375,-7.830177,-8.596712,0.943735,9.656574,-9.836027,0.959306,2.579784,7.557409,-7.661698,5.183700,0.251712,3.263188,-1.270855,3.178906,7.663909,4.474782,-2.478107,-7.504876,6.903813,-0.454438,7.909130,8.353489,-6.624665,4.022311,-1.322856,-2.470172,-9.003929,0.782598,-8.746493,3.202411,-8.650756,8.741507,-4.740682,-0.290404,7.548329,0.897347,6.143239,0.651349,6.167514,-5.244284,1.911460,-2.487839,-4.117522,-3.518389,-3.950376,-7.612447,-8.198372,-8.958833,-5.224028,4.242794,0.104157,-0.704529,7.122602,-4.703666,-7.809888,-4.227195,1.829722,-9.224572,-2.911835,-5.528523,-5.122934,9.257187,-1.151172,2.812955,3.337921,-8.483921,5.270202,3.054098,-3.301244,5.432448,-3.799603,-6.939734,-1.159405,-3.491144,-7.397937,-8.096203,9.667645,3.166894,4.519532,-9.847744,9.032771,8.308728,0.600834,7.206320,4.067499,2.147332,3.538987,4.444270,-8.253634,-5.494040,6.711468,9.832261,7.894093,-5.500772,6.039346,4.242091,-3.421649,9.594119,3.259712,9.019848,4.341262,-4.988396,0.558202,7.141283,4.813870,-7.844306,-6.338514,-8.876436,-1.240030,-3.090599,8.384763,0.246882,-6.358651,-7.786943,5.202131,-3.721256,-9.629498,8.442734,2.416263,1.201097,0.573021,0.395315,3.727977,9.970433,-1.852895,4.315045,3.645485,8.366427,5.583372,6.635801,-5.547595,8.343969,-3.379831,-0.826245,9.934745,5.035980,4.149312,-0.730795,-0.898581,-0.109698,8.588675,-8.764287,-8.983016,0.150948,7.850567,9.557211,-4.382806,-3.992590,6.313697,-2.592108,-9.593001,9.192236,-7.564091,-5.404124,3.923784,-7.673436,-5.139520,6.904399,-9.175897,-1.433697,4.052036,8.955578,4.198770,9.080198,-4.997534,8.804371,4.844669,-2.499712,1.253629,-3.403562,-8.586826,3.342934,6.783214,1.118119,6.462168,-4.276449,0.299167,8.556767,3.280470,-7.100813,-7.415627,1.725877,-0.665345,-2.357317,-4.777168,4.702481,4.419035,-5.508501,5.287485,-2.638450,1.458828,-4.234208,1.660424,0.380822,-7.462806,-0.095387,-9.089482,-7.617903,-4.701136,-4.383474,4.105127,8.714538,-3.711256,0.773809,5.265130,7.135518,-7.608809,-6.298450,6.394429,4.793126,0.769663,-9.759074,5.643574,-4.702809,2.487160,-2.462849,-4.797704,8.332305,2.791590,2.150487,0.988878,-8.780551,-6.690229,8.913250,-7.260206,1.967176,-0.016960,7.668636,-2.435638,5.234495,-7.333984,-7.175058,1.049983,-2.390001,-1.725478,-4.674179,-4.609226,-1.507409,9.235341,-2.239855,-2.054614,4.863357,6.785301,-5.860421,-3.732960,-5.262569,6.517027,-6.241393,-1.134377,-4.045643,-8.188083,-1.316278,2.252159,2.194955,-9.519157,-5.104806,1.502919,-3.749598,6.111219,-8.391526,-6.532671,-4.445259,2.724024,3.610302,5.649919,-8.040684,-0.484190,-6.308929,3.031351,-8.922258,7.395505,-3.457520,-4.612539,-8.360444,8.003265,5.501312,4.538511,-5.127709,-9.372519,-9.922400,6.889781,8.005092,-3.205615,0.060157,1.056860,3.414985,-8.822685,5.235164,-7.714747,-7.132667,-6.993004,-7.770467,-1.282783,-9.747238,-0.053461,-2.861774,-0.188930,1.930510,-2.832092,-0.576379,-2.637479,-6.410296,-0.011330,6.584837,5.072885,-1.245552,3.236982,6.875711,6.813873,3.854770,0.481473,4.457764,8.200596,-7.753743,1.273587,-4.251701,-2.307124,6.691179,-1.066643,-1.626018,-1.650807,-9.521926,4.824120,3.720685,6.125008,-9.143771,5.533031,-5.557937,-8.697838,-3.059699,-1.795388,6.869226,7.371176,1.843705,9.475692,-7.513202,-0.307742,5.866355,-8.275611,2.917263,7.105449,-6.551635,3.806646,-9.823467,3.406534,-7.169206,1.096446,4.087919,-2.276791,-0.812768,-9.015121,7.505297,9.986809,-7.708170,-1.019536,-2.655256,6.142688,-9.040215,6.603966,-0.442859,3.734331,-4.730877,-2.603161,2.809223,-6.335971,-7.580012,-3.702724,-2.709671,-5.538628,-2.745602,-2.505905,0.656249,8.469319,-0.395128,-3.012006,-0.134797,2.703311,-3.303324,-6.044051,-2.486251,4.068163,3.296004,8.394923,-1.373689,-7.230692,-3.409591,5.015709,-3.001617,8.825243,1.081885,9.309844,0.913005,3.435860,-3.044774,2.730224,-4.165346,0.288629,7.554073,6.483712,-6.560611,-2.790546,-0.994019,-7.956024,-9.052661,-1.777560,7.838758,5.180581,-0.137848,-2.323130,-6.188419,-2.390525,1.664342,-4.289262,-7.036611,-4.859451,1.246668,1.035370,-9.650011,-0.948894,1.952782,-3.918175,-4.732253,2.759120,-8.500247,2.179902,6.743249,-8.837356,4.824153,2.381578,-4.975367,5.952336,-6.615759,-6.312448,-4.688666,-2.086055,8.325016,3.546528,-0.566102,-8.591925,-9.073338,-9.225403,1.839147,-3.889744,7.893656,-2.318867,1.752803,-4.856414,-6.219588,-4.416708,1.982121,-9.938833,-7.125197,6.999157,-7.620643,4.368614,8.857031,1.542129,-0.543026,-4.541917,1.421733,-1.153994,-1.477884,0.973376,5.501196,3.470345,-3.011652,1.933545,4.795935,4.130718,-7.959516,8.471373,-0.938186,2.206567,-2.659792,3.997589,-4.085848,4.339627,-7.744529,-0.327266,-2.389439,-3.050508,6.886141,1.717954,-5.057254,0.184704,-7.012737,0.560926,3.396859,1.111519,-5.057422,4.882746,-1.991603,4.975281,2.504979,-9.763714,0.637787,-3.615816,-0.830972,-3.014893,9.408644,-1.544657,-1.614165,-0.331210,-8.721547,8.644758,-1.120018,0.849540,7.983608,6.842856,-6.080995,2.399202,5.426353,3.199228,8.660643,-0.657444,7.597058,-6.586601,-6.260782,1.587927,6.732367,4.710832,8.687439,-1.362439,6.978662,-5.593381,-0.116296,-7.321183,7.525510,7.707261,8.358603,8.356282,-3.171953,-3.756343,3.622317,8.320082,-7.517130,-3.179767,-9.721785,0.974776,5.028422,7.074671,2.886709,5.582435,1.237557,5.055387,-4.476469,9.815457,1.136523,-7.564293,0.514692,4.357593,-1.346447,-5.105287], dtype = "float64")#candidate|4765|(660,)|const|float64
call_4764 = relay.TupleGetItem(func_632_call(relay.reshape(const_4765.astype('float64'), [10, 66])), 0)
call_4766 = relay.TupleGetItem(func_635_call(relay.reshape(const_4765.astype('float64'), [10, 66])), 0)
output = relay.Tuple([call_4762,call_4764,const_4765,])
output2 = relay.Tuple([call_4763,call_4766,const_4765,])
func_4785 = relay.Function([], output)
mod['func_4785'] = func_4785
mod = relay.transform.InferType()(mod)
mutated_mod['func_4785'] = func_4785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4785_call = mutated_mod.get_global_var('func_4785')
call_4786 = func_4785_call()
output = call_4786
func_4787 = relay.Function([], output)
mutated_mod['func_4787'] = func_4787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2821_call = mod.get_global_var('func_2821')
func_2822_call = mutated_mod.get_global_var('func_2822')
call_4788 = relay.TupleGetItem(func_2821_call(), 3)
call_4789 = relay.TupleGetItem(func_2822_call(), 3)
output = relay.Tuple([call_4788,])
output2 = relay.Tuple([call_4789,])
func_4805 = relay.Function([], output)
mod['func_4805'] = func_4805
mod = relay.transform.InferType()(mod)
mutated_mod['func_4805'] = func_4805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4805_call = mutated_mod.get_global_var('func_4805')
call_4806 = func_4805_call()
output = call_4806
func_4807 = relay.Function([], output)
mutated_mod['func_4807'] = func_4807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_4816 = relay.TupleGetItem(func_966_call(), 0)
call_4817 = relay.TupleGetItem(func_968_call(), 0)
func_1334_call = mod.get_global_var('func_1334')
func_1337_call = mutated_mod.get_global_var('func_1337')
const_4823 = relay.const([-9.656867,2.699705,-3.668575,-1.153768,-9.911678,-6.197701,-6.129371,-6.913032,-5.937660,-9.607975,9.448976,-8.873015,8.968391,-9.638216,-6.171756,7.760530,7.033625,-0.361179,6.115236,2.406081,6.958660,1.317812,4.074348,6.209320,-1.850475,5.256969,3.438017,-5.594982,-7.693760,3.711660,1.325561,-9.079858,5.884400,3.778757,3.981210,7.018724,-1.101892,-5.970349,-1.018242,1.880345,-9.840551,-7.092516,-0.046787,-1.367906,6.831953,9.575770,-3.764177,1.740921,9.489584,5.891025,4.012829,2.339057,5.593132,-1.144638,1.569180,6.258886,-9.571385,5.394469,-6.292152,5.851278,2.085442,-3.359111,-2.785780,-1.207867,-9.678787,8.894116,-8.354875,4.802424,-6.576599,9.849720,-6.353370,7.365923,-1.000288,0.903241,-8.936700,-7.592104,-4.337453,-3.270461,-7.165011,-1.148341,-1.938342,5.397040,-6.930397,-7.762591,-9.425661,-9.978167,-1.112629,8.070124,3.966503,8.744674,5.919633,1.120458,5.060857,0.485094,-2.289079,-5.089739,9.870186,1.069301,3.285877,-2.875101,7.960821,-2.119315,9.751264,-1.034024,-9.146188,-9.099941,4.708975,9.200032,6.696002,9.035985,-4.982721,-9.412647,6.435437,1.500895,-7.184390,-5.795888,8.870490,7.894697,-4.753504,0.800938,-7.858982,-4.803254,4.956764,-0.178740,-2.018089,2.834780,6.342589,-1.847337,2.867530,5.011756,-7.445817,-2.709509,-4.587284,-3.962424,0.764006,-3.097879,3.578538,-0.011988,-8.681712,-5.451012,-2.797972,-8.970914,4.732576,-6.633244,-9.962526,-5.122523,6.045994,-9.282938,6.978151,-9.516379,-0.027311,-4.835984,6.790206,3.872146,9.449537,3.345780,8.150655,3.439190,-3.522258,9.356826,-2.199450,7.592496,-1.406938,8.662129,-4.306792,5.753682,-9.224032,9.947852,-7.514844,-5.482641,-9.355542,7.332934,5.175543,-4.864335,-6.530841,-0.355423,-2.839598,-4.220705,-8.355131,-9.209537,4.328550,6.860983,1.652091,9.888450,5.904590,9.227899,2.311918,9.363082,1.355603,4.077524,-6.858776,-4.963418,1.390281,3.887365,8.823673,5.557015,5.367633,-8.880551,3.708074,-2.178223,4.784717,-6.933876,-6.500896,9.209749,9.480907,2.568964,1.674716,-5.739564,-6.992387,-6.934964,0.631758,-8.369182,-1.188007,8.562384,6.068337,4.104106,5.255328,8.719421,7.041215,-1.777904,7.605093,-7.431727,9.905344,-2.184244,8.100622,9.383748,-8.475190,5.679588,2.550445,-1.617714,2.162843,6.694886,4.317670,-8.791534,-3.936038,7.508156,3.818432,-8.775830,0.428852,-7.625648,6.005978,0.679775,-7.319300,-0.967568,-5.466938,-9.069738,-9.681447,-8.003372,-6.509945,3.386143,9.588886,4.790509,-3.240090,-0.628204,-7.009330,-8.142628,-2.793576,9.409895,5.664774,-8.532765,-9.006942,6.639930,6.248010,-7.834338,-4.884046,-7.295937,-4.034967,-2.346351,4.155197,-8.598437,-2.888743,3.106157,9.312244,3.408936,-1.754999,-4.305904,-7.449125,-2.517106,4.903015,1.080213,-5.651124,-3.443123,5.444728,9.619191,0.135396,-9.267802,7.217500,-4.942065,-9.826449,5.010112,-7.536060,6.164375,8.609102,-4.618764,-8.440275,-5.910218,6.068846,-1.921180,-2.817542,6.076289,2.288338,2.861298,9.889513,5.546863,4.721793,-3.645037,-6.780172,-5.969539,8.114638,7.778911,-2.283635,-1.087695,-1.613147,1.891626,4.654880,-7.599437,-1.641048,5.056893,3.930449,-9.829165,2.214073,-9.915182,-8.446847,3.291980,4.706242,-6.438742,-3.287928,5.725424,9.799505,3.288464,8.037524,5.336273,9.172640,9.466153,-7.591424,6.674219,4.936110,2.898703,-1.580688,8.905567,0.242483,-5.688422,7.209804,-2.112227,-8.724214,4.432513,1.907409,3.436644,7.176869,-4.811951,-6.902592,6.090023,9.862140,-2.437145,7.620923,-2.343167,4.207756,-3.191985,-0.241066,6.896116,5.217627,8.135811,8.977447,9.842627,4.074228,-9.882793,-3.352122,6.994656,8.921746,0.273214,-0.881718,2.648769,-2.429562,-1.731107,9.070104,0.242099,-8.758669,1.124062,-7.165710,-8.982608,-7.104465,6.406872,-5.667569,1.344084,-3.796874,-9.885467,-0.764544,-1.749507,4.887531,2.947959,-7.628815,7.807701,3.192592,2.608377,-6.836762,-2.386545,-6.840318,5.283408,-0.756455,-8.614381,6.187034,7.559655,2.354015,0.598775,-5.370409,1.500414,7.063757,1.727799,3.729593,-3.336029,-5.355948,4.007413,0.559548,9.494929,0.965369,-6.326126,-2.667336,-0.380480,-2.388279,4.779286,-7.516925,4.971891,9.688520,7.579533,3.770699,-0.246201,-6.374950,9.134276,-2.746558,8.570085,-2.726418,4.967273,-3.431954,-6.338645,4.426519,6.106234,-3.171505,0.721427,-6.029892,2.070042,3.464371,9.244309,6.399543,6.664553,-8.787795,2.112129,-0.810707,5.379561,-2.895499,8.575689,5.282631,6.821893,-8.300833,-1.527622,7.833001,-7.673652,6.918772,-3.217238,-6.107467,9.547967,2.394587,-6.934183,3.825612,-2.591987,3.988490,4.713637,-5.230200,5.060533,0.490783,2.125878,3.043143,4.794536,-4.701393,9.454531,5.796776,0.279600,4.165647,8.047808,7.510049,-1.639364,0.355613,-4.252365,-7.326076,-1.046201,9.688619,3.614624,-9.314838,5.464374,-8.374724,7.552652,8.105722,-4.323477,-2.992351,2.993278,6.846229,3.786451,8.568228,9.708764,7.757538,-8.298323,4.930072,7.687528,-1.723149,-6.153194,5.564421,1.930102,-8.600671,3.258298,0.419527,0.644357,-8.296670,0.712485,-4.251178,3.142355,4.335230,-5.165491,2.387516,-9.110305,-2.770532,9.625531,-8.288102,9.864335,-6.685288,-4.453555,0.826719,9.219746,-7.432301,-0.785948,6.446706,-0.382694,4.962575,4.215951,-4.095365,-3.806062,1.407181,-2.968773,-7.777542,-0.523059,-6.278954,-7.307166,-4.601517,6.702323,7.942663,1.653125,9.799151,7.745296,-1.414894,-0.091130,-4.691097,-8.118196,-4.083709,7.617630,-4.844476,5.870511,-8.799886,-6.698039,2.794223,9.117246,9.081270,9.406370,-2.482024,5.398002,-4.965512,8.479174,0.254908,-5.287300,-0.444042,-3.828423,5.082859,3.762979,-6.592207,5.093942,3.167754,-6.168055,1.468899,-7.590461,-4.089039,5.743522,2.120925,5.811702,-3.798005,-8.184726,2.096709,5.418062,-3.437533,2.738556,-5.171230,7.794840,2.014260,1.914659,7.167041,8.987923,4.690636,-2.863648,6.166490,1.190105,0.736970,5.847771,5.456513,-4.003114,4.170340,-2.549506,-2.704000,-2.109853,0.037582,-1.029137,9.787971,-1.998937,-0.748470,8.009718,-8.894025,5.800889,-0.050593,-5.734888,4.804521,4.494485,-7.864899,7.206474,1.162712,4.155845,4.962641,-5.427073,2.266679,9.175470,4.331984,7.447590,-5.416638,-4.060288,3.930685,-0.501406,1.514770,-2.416686,4.551923,-5.615649,3.553505,8.975876,2.990538,5.604212,-6.583621,1.309123,9.248030,8.149508,0.752157,-6.022818,-5.317950,-6.218181,-1.900154,-4.591263,-9.690987,3.089067,-5.718905,-1.832441,-5.721983,-0.618040,-9.659362,-5.207690,-0.525549,4.253584,4.272537,0.764443], dtype = "float64")#candidate|4823|(660,)|const|float64
call_4822 = relay.TupleGetItem(func_1334_call(relay.reshape(const_4823.astype('float64'), [660,])), 1)
call_4824 = relay.TupleGetItem(func_1337_call(relay.reshape(const_4823.astype('float64'), [660,])), 1)
output = relay.Tuple([call_4816,call_4822,const_4823,])
output2 = relay.Tuple([call_4817,call_4824,const_4823,])
func_4834 = relay.Function([], output)
mod['func_4834'] = func_4834
mod = relay.transform.InferType()(mod)
mutated_mod['func_4834'] = func_4834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4834_call = mutated_mod.get_global_var('func_4834')
call_4835 = func_4834_call()
output = call_4835
func_4836 = relay.Function([], output)
mutated_mod['func_4836'] = func_4836
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4851 = relay.const([[[6.827494,3.182908,-5.969885,-3.622192,0.389983,-1.899176,9.460965,-0.101395,-1.185553,5.065012,-8.121386,-0.590831,-7.975231,-7.567713,-0.835548,4.790965],[8.785307,2.448884,0.604387,-4.562564,-1.982643,-0.735104,2.129373,1.146519,8.470225,5.171978,7.610088,9.284742,-1.216064,-9.689220,-5.694259,-4.176479],[-5.853041,4.148479,1.201078,6.933900,-0.186601,6.258743,-2.075876,-4.817063,-8.417227,2.996762,1.020936,1.583954,9.816540,6.390683,0.738311,2.961898],[1.523496,7.219015,-5.764959,-5.261526,3.050989,-0.017377,0.845298,4.276143,-7.268994,8.129139,-2.068949,-5.994007,-2.096267,1.701099,7.471508,9.561251],[0.514784,-8.434313,8.835798,-5.654706,-6.749992,-6.768456,8.866747,8.165174,1.661701,-5.640369,-9.068846,7.259439,-9.208302,-1.654382,7.810112,-3.821909],[7.717360,-2.114318,-3.314460,9.705181,8.608053,-7.381072,2.964857,2.845967,-1.318130,-4.170214,-1.343727,8.147861,-1.946729,-6.526293,7.340984,-7.595899],[3.495547,-1.883990,-0.157209,2.447110,7.343955,-0.129535,2.343379,1.684648,5.000828,-5.182073,6.136365,-4.911894,-3.075092,1.581340,-3.809631,-3.120786],[-6.582575,5.344856,-2.536708,8.988746,-5.444715,-3.071789,6.694274,8.108888,-2.216480,-5.656280,5.439668,4.224991,0.449722,1.652138,4.284593,-8.175829],[-4.078116,-5.891062,-9.504413,4.620866,1.346847,-4.984517,4.906967,-0.788319,-5.713897,-5.472941,3.975896,4.856463,-3.275040,-5.229328,-6.502526,-8.750787],[-0.051121,8.925308,-1.560423,0.464655,-5.667615,-7.446301,2.050754,1.012061,2.360966,2.138940,-9.003411,9.537852,-3.098170,-9.836117,-5.280341,1.604458]],[[8.168248,5.462664,8.788407,6.334933,5.117836,-1.382042,-5.620759,-0.059758,4.612861,4.233128,-9.101311,-1.491053,-6.338037,1.754825,1.063547,-1.031099],[7.370808,-2.753361,-6.466913,-3.345809,9.496147,5.322815,2.448943,8.667745,2.797194,-0.856331,-8.544093,-9.307305,2.523624,5.858228,3.588700,4.099409],[-4.083450,6.731081,6.843278,-1.196632,-8.385813,5.189944,5.550989,-9.869937,9.869249,-9.362308,-1.547764,-8.356626,-5.606893,-2.373035,8.010311,-9.461220],[-4.906463,8.643689,1.664500,-2.026426,4.930579,4.626052,9.877586,3.956755,-4.022336,-4.634665,8.956674,-0.229638,-1.279516,7.849956,-9.394553,5.081219],[5.683422,9.872886,-0.452181,0.435479,0.695961,-9.226417,-6.248448,2.570422,3.327942,0.418642,-9.470956,-9.251240,4.488393,4.592908,4.867420,-2.159109],[7.780595,-7.224470,0.598136,6.902244,-7.584571,2.099976,7.131748,-9.829476,-2.653176,6.840199,4.611884,-5.591270,0.314562,3.853318,-5.205547,-6.171413],[9.575862,-4.482555,-2.810976,6.165626,6.824219,7.170480,9.322895,-8.301305,-9.929963,-4.109640,6.360985,-9.648645,-5.058775,-8.677398,7.179362,-7.043387],[9.849113,7.732464,-9.254865,-3.502718,-9.142556,7.856815,0.984813,7.770597,6.761764,-7.754377,-9.654894,-2.993964,-5.334721,-9.009990,1.718916,-7.915652],[7.753727,-8.625533,-4.770424,0.976311,-1.292095,-6.474036,-4.151620,9.123779,3.639085,8.261401,-5.913408,2.242169,-7.951829,-1.409247,-3.035762,-7.786382],[6.088248,-6.897089,0.535602,-7.847336,-7.890834,-1.295905,-1.216009,-9.646270,1.458370,-5.547866,5.101561,-4.821275,9.712490,2.778261,2.998218,8.683533]],[[-1.510168,-8.718164,9.345573,-4.811995,9.170345,0.552535,-6.069945,0.722469,9.453594,-0.589510,8.880058,-6.790712,1.460123,0.170513,1.703522,1.565460],[-7.869130,6.178819,-6.374820,5.419148,-2.760491,-0.162545,-5.812617,-4.113442,7.832330,6.341462,2.996005,4.825675,2.007193,8.804396,4.209170,4.636932],[-4.762571,9.616377,-4.701253,-2.691689,7.805188,7.472228,4.890525,0.340744,-5.297311,1.456310,-8.922071,5.496583,4.565963,-1.542073,4.740684,-1.783650],[9.971627,6.298333,-6.208877,-2.713763,-8.598186,-3.213912,-9.101165,-1.328478,-8.437372,-7.762749,-5.701401,-7.180996,8.709502,-4.742591,-9.236888,-7.468920],[-2.307749,8.532233,-1.896728,6.202591,-2.455068,-2.462132,5.218914,3.168877,-9.375046,5.736661,1.946559,9.927443,-6.701951,-3.463568,-5.528273,-9.419874],[-4.160962,-9.409188,-0.106782,1.088717,6.711015,1.292117,-5.887435,-8.503820,-8.585651,5.065063,8.668239,-9.809507,-9.876435,6.609294,-4.701033,5.194143],[2.499056,3.827155,6.863977,-9.866511,-4.127469,-6.645592,9.287697,8.248028,-6.347593,6.993962,7.578199,0.148676,-9.008776,2.256792,3.015910,6.782105],[-8.226581,-0.753825,8.892324,-8.270555,-6.880020,-7.684551,9.425255,4.499867,-8.529162,3.948240,5.527841,7.427437,8.604675,-1.477227,-9.308899,-2.967841],[-6.787130,-2.942829,2.687434,0.864796,5.858337,4.783015,5.652275,-2.909915,-8.362416,-9.317591,3.949636,3.762918,-7.146282,0.317787,-0.962871,0.428359],[-6.130213,-9.447523,-4.847652,0.994977,-7.925695,-2.774420,9.348928,0.746119,-7.492813,0.817704,-2.115861,6.986050,-7.732296,9.557166,-2.199365,1.903045]]], dtype = "float32")#candidate|4851|(3, 10, 16)|const|float32
var_4852 = relay.var("var_4852", dtype = "float32", shape = (3, 10, 16))#candidate|4852|(3, 10, 16)|var|float32
bop_4853 = relay.less_equal(const_4851.astype('bool'), relay.reshape(var_4852.astype('bool'), relay.shape_of(const_4851))) # shape=(3, 10, 16)
output = bop_4853
output2 = bop_4853
func_4865 = relay.Function([var_4852,], output)
mod['func_4865'] = func_4865
mod = relay.transform.InferType()(mod)
mutated_mod['func_4865'] = func_4865
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4866 = relay.var("var_4866", dtype = "float32", shape = (3, 10, 16))#candidate|4866|(3, 10, 16)|var|float32
func_4865_call = mutated_mod.get_global_var('func_4865')
call_4867 = func_4865_call(var_4866)
output = call_4867
func_4868 = relay.Function([var_4866], output)
mutated_mod['func_4868'] = func_4868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mod.get_global_var('func_2464')
func_2466_call = mutated_mod.get_global_var('func_2466')
call_4915 = relay.TupleGetItem(func_2464_call(), 0)
call_4916 = relay.TupleGetItem(func_2466_call(), 0)
output = call_4915
output2 = call_4916
func_4922 = relay.Function([], output)
mod['func_4922'] = func_4922
mod = relay.transform.InferType()(mod)
output = func_4922()
func_4923 = relay.Function([], output)
mutated_mod['func_4923'] = func_4923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mod.get_global_var('func_3546')
func_3548_call = mutated_mod.get_global_var('func_3548')
call_4932 = func_3546_call()
call_4933 = func_3546_call()
func_3321_call = mod.get_global_var('func_3321')
func_3324_call = mutated_mod.get_global_var('func_3324')
var_4938 = relay.var("var_4938", dtype = "bool", shape = (1200,))#candidate|4938|(1200,)|var|bool
call_4937 = relay.TupleGetItem(func_3321_call(relay.reshape(var_4938.astype('bool'), [10, 12, 10])), 0)
call_4939 = relay.TupleGetItem(func_3324_call(relay.reshape(var_4938.astype('bool'), [10, 12, 10])), 0)
output = relay.Tuple([call_4932,call_4937,var_4938,])
output2 = relay.Tuple([call_4933,call_4939,var_4938,])
func_4944 = relay.Function([var_4938,], output)
mod['func_4944'] = func_4944
mod = relay.transform.InferType()(mod)
var_4945 = relay.var("var_4945", dtype = "bool", shape = (1200,))#candidate|4945|(1200,)|var|bool
output = func_4944(var_4945)
func_4946 = relay.Function([var_4945], output)
mutated_mod['func_4946'] = func_4946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4049_call = mod.get_global_var('func_4049')
func_4051_call = mutated_mod.get_global_var('func_4051')
call_5046 = relay.TupleGetItem(func_4049_call(), 3)
call_5047 = relay.TupleGetItem(func_4051_call(), 3)
func_2036_call = mod.get_global_var('func_2036')
func_2038_call = mutated_mod.get_global_var('func_2038')
var_5055 = relay.var("var_5055", dtype = "float64", shape = (12, 4))#candidate|5055|(12, 4)|var|float64
call_5054 = relay.TupleGetItem(func_2036_call(relay.reshape(var_5055.astype('float64'), [48, 1])), 3)
call_5056 = relay.TupleGetItem(func_2038_call(relay.reshape(var_5055.astype('float64'), [48, 1])), 3)
func_4049_call = mod.get_global_var('func_4049')
func_4051_call = mutated_mod.get_global_var('func_4051')
call_5074 = relay.TupleGetItem(func_4049_call(), 3)
call_5075 = relay.TupleGetItem(func_4051_call(), 3)
output = relay.Tuple([call_5046,call_5054,var_5055,call_5074,])
output2 = relay.Tuple([call_5047,call_5056,var_5055,call_5075,])
func_5082 = relay.Function([var_5055,], output)
mod['func_5082'] = func_5082
mod = relay.transform.InferType()(mod)
mutated_mod['func_5082'] = func_5082
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5083 = relay.var("var_5083", dtype = "float64", shape = (12, 4))#candidate|5083|(12, 4)|var|float64
func_5082_call = mutated_mod.get_global_var('func_5082')
call_5084 = func_5082_call(var_5083)
output = call_5084
func_5085 = relay.Function([var_5083], output)
mutated_mod['func_5085'] = func_5085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4157_call = mod.get_global_var('func_4157')
func_4159_call = mutated_mod.get_global_var('func_4159')
call_5121 = relay.TupleGetItem(func_4157_call(), 0)
call_5122 = relay.TupleGetItem(func_4159_call(), 0)
output = call_5121
output2 = call_5122
func_5131 = relay.Function([], output)
mod['func_5131'] = func_5131
mod = relay.transform.InferType()(mod)
output = func_5131()
func_5132 = relay.Function([], output)
mutated_mod['func_5132'] = func_5132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4922_call = mod.get_global_var('func_4922')
func_4923_call = mutated_mod.get_global_var('func_4923')
call_5145 = func_4922_call()
call_5146 = func_4922_call()
output = relay.Tuple([call_5145,])
output2 = relay.Tuple([call_5146,])
func_5151 = relay.Function([], output)
mod['func_5151'] = func_5151
mod = relay.transform.InferType()(mod)
mutated_mod['func_5151'] = func_5151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5151_call = mutated_mod.get_global_var('func_5151')
call_5152 = func_5151_call()
output = call_5152
func_5153 = relay.Function([], output)
mutated_mod['func_5153'] = func_5153
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5158 = relay.const([[[-5.423689,9.654981,8.207724,4.687749],[-4.243045,1.945382,4.796621,9.598242],[5.095196,6.941794,7.992544,-3.149378],[-8.410738,0.523493,-0.502150,2.641645],[8.714313,-0.511006,-4.276227,4.183397],[-3.616221,-1.496609,-7.364056,4.548066],[-9.300197,-8.927121,2.270361,-1.784431],[-7.922328,-3.190014,-9.059449,3.963392],[-0.846536,-9.656696,7.831918,4.531488],[-8.103783,7.105483,-9.559902,-0.485756],[0.792703,-6.887455,-6.019677,-7.351646],[7.181421,0.091394,9.009370,5.682551],[-3.451628,-5.385391,8.038231,3.934665],[-7.926156,5.349414,-7.041245,7.373638],[-5.040824,-6.272779,-7.297028,5.899043],[4.423101,-3.952404,3.779001,-1.791347]],[[0.708609,-3.212152,-4.000636,8.960788],[-8.067423,2.615440,-7.064335,6.247089],[9.900338,3.732204,-9.959615,4.019336],[5.116434,-1.122795,3.051505,7.858733],[-2.807706,3.229204,9.743567,1.248818],[8.882428,-0.040723,0.792734,8.701276],[0.287250,-1.784887,7.595866,2.440401],[8.762184,-2.585748,-0.494660,-0.485401],[2.762079,-1.160563,-5.633410,-8.933384],[-3.386090,4.194435,-9.806771,-5.159080],[-9.584738,-2.970479,-6.764191,-7.085382],[9.596575,-6.723364,-3.638414,-4.835382],[5.475289,4.763916,-6.408491,4.458971],[-1.430811,-0.430660,5.158748,5.107564],[-8.158526,-8.716089,1.118762,-3.756437],[2.685148,1.739960,2.295804,0.452149]],[[-6.237934,-0.673877,-4.889166,3.736417],[4.272694,-9.692770,6.602221,-0.646084],[6.062588,-1.562424,0.195066,6.241978],[-4.366243,5.404292,1.111985,-4.218181],[6.808737,-9.133391,-1.579582,-8.658248],[-6.437352,3.821592,-7.870620,6.376643],[-3.758233,2.899807,-8.777887,-3.062492],[7.173179,4.934769,-0.111635,-3.509969],[-2.959020,9.698253,-0.051170,-1.394595],[-9.097941,-3.380712,1.810051,-6.005377],[-0.021477,-0.015096,6.688408,2.295233],[-1.995485,6.495516,-3.289876,-9.037172],[-4.474797,5.013178,9.760704,5.893366],[0.113042,4.887322,8.956838,-7.635943],[5.544632,1.438416,4.788780,8.320661],[5.814135,-4.877435,-4.463330,-5.084777]],[[3.076339,5.940993,-9.221302,-4.328448],[7.761626,-1.834231,-0.855439,-0.714538],[1.814499,-6.867132,-3.255766,-9.265308],[-9.815128,7.479483,8.381460,8.123770],[7.856808,-0.043335,-6.941416,-5.690907],[-8.779601,-3.922389,9.630537,-9.510785],[-4.087943,-9.908510,-3.174119,-6.653274],[9.167435,5.505369,-6.884821,6.466601],[6.354872,2.931460,2.535557,8.196761],[-5.829984,-1.399023,-0.669403,6.035841],[0.217507,9.153915,-3.092423,-8.502691],[2.430175,0.217551,-0.756061,-2.339907],[-4.315845,3.183245,5.062658,9.449874],[6.351014,6.418747,-6.474913,-4.140279],[-9.760928,5.896513,-5.199216,7.605985],[1.880685,0.347432,7.703577,1.530245]],[[1.855882,8.649979,-1.866790,-3.418101],[-3.687131,3.968262,-7.134372,-6.312458],[-3.770186,-1.281966,8.466775,-4.899050],[-2.902287,8.149295,6.014896,7.222437],[1.161077,9.030207,0.797301,6.626784],[-7.076626,-1.425188,9.558257,3.526519],[-6.372807,-6.454886,7.692168,-4.219572],[-8.404192,-0.798617,-8.206660,-8.199816],[-9.956775,9.695409,7.017418,-3.665874],[-8.359469,2.153610,2.135020,8.403520],[-2.380038,-2.080648,-1.490857,0.316521],[-0.986886,7.183289,4.341901,-6.308184],[4.858432,7.534566,2.593478,-9.170513],[-3.168594,0.678026,0.662817,1.921627],[-0.800084,5.945917,-5.830234,4.712916],[-2.786261,7.575101,-3.556416,-2.307309]],[[-6.424580,-5.548652,7.907556,3.405660],[-3.861899,7.313059,3.869870,0.752641],[-9.602917,-9.972062,3.025332,9.197466],[-6.437384,6.310271,5.576936,1.269445],[1.188980,9.400711,-8.331443,-0.047718],[3.155681,-0.350828,-2.034335,-9.803921],[8.778053,4.459780,-5.872068,-7.415907],[-7.532010,2.805340,4.094493,5.841815],[-0.352466,7.966471,9.610377,-0.536082],[-7.891827,6.920618,-3.332593,2.904255],[-9.882630,7.354533,-9.600231,-3.344138],[9.835270,-8.471911,-3.840490,-1.144782],[-2.092427,5.387656,5.901693,-9.999222],[2.661412,1.052301,1.094691,6.345090],[6.242343,-0.914416,-9.838708,-5.819254],[-0.466677,6.078023,-6.396918,1.225474]],[[4.565668,-7.048751,-7.580987,-1.119301],[-3.111697,-8.869413,9.888815,-1.530926],[-1.377602,-7.154838,9.368959,-4.321361],[1.800656,-1.785637,8.687535,-3.169311],[-3.467037,-6.498078,1.583926,-3.827388],[-1.414965,4.063440,-3.144347,-5.930118],[-8.917116,-9.106906,-8.050934,5.478285],[-8.300727,2.186811,8.702604,-8.466916],[3.751427,4.775018,-9.944113,-0.275557],[-3.514690,-5.501833,4.601743,6.925327],[5.406370,5.651182,-6.270743,7.220592],[-1.999135,7.215642,-4.245048,-2.203100],[-6.538215,-8.336514,6.676985,0.546882],[-1.344637,5.648255,-1.280743,7.787904],[-0.762959,0.295498,4.910758,5.217491],[-0.825073,4.968971,-6.203573,-9.661621]],[[9.455610,7.789409,2.101855,-7.186272],[-6.472324,-2.115537,-9.290064,-9.725714],[-8.856856,-7.414920,-9.037696,-4.396060],[-9.001858,6.736690,8.740476,6.377610],[-9.512262,2.800927,5.782432,1.237484],[2.697307,-2.767390,4.013022,-5.773301],[8.488376,0.805799,-8.157681,-4.424168],[-3.629084,-3.403442,1.373007,-0.790597],[-1.273255,7.381185,-4.756329,-9.042430],[-5.265458,4.116645,0.296893,-4.260198],[-9.804328,8.441355,4.285365,1.911698],[5.713125,9.364560,1.005931,7.175524],[2.597432,4.086021,5.497092,-7.691352],[9.659462,-9.443070,5.039110,8.385170],[-2.146453,0.461317,-7.926241,5.484160],[-1.465557,-1.986208,8.984305,1.998991]],[[-7.605862,-4.586135,-2.943833,-1.645314],[-3.334521,1.973448,5.155379,-5.298369],[4.756125,9.901493,-3.410674,9.097538],[7.943838,9.476806,7.704218,7.202611],[2.747710,-2.887803,-1.542931,3.021664],[7.629800,6.390260,0.458148,-4.586124],[1.004166,-3.304519,4.406138,-4.770644],[4.471351,8.031390,-8.865740,9.988379],[-7.222708,-2.955271,-1.340217,0.508371],[-5.227687,-6.966564,-7.582976,-5.876288],[-8.181744,-1.391253,-3.766014,-5.551876],[-9.625759,7.685569,-4.194841,-2.279717],[-0.604470,-7.130469,9.050951,-0.487492],[-4.354537,1.397935,4.633970,-6.133221],[0.474821,4.069798,8.209027,2.925204],[2.346507,-8.417869,5.609174,-7.890156]],[[8.433915,-7.579317,4.194012,-5.090302],[9.951779,-1.701449,0.175757,-8.455606],[1.673116,7.659384,6.420616,-7.075473],[8.185150,3.884769,-0.348966,-4.599668],[-5.952490,-9.599389,5.492915,0.573729],[-3.101810,9.169653,-0.302013,-2.719019],[-7.238494,-5.392802,5.978331,-7.274501],[7.344672,4.021901,-5.607527,-3.614843],[3.474845,-5.743406,8.021901,1.443829],[3.981818,-7.280228,0.995536,-6.558818],[-1.320559,2.361474,1.917091,-5.165889],[2.074926,-8.118898,9.241839,-4.209259],[7.146671,8.134900,-9.483289,6.622866],[9.987961,2.056190,-1.967788,-0.705418],[-1.975647,-0.810635,-2.532490,6.883987],[2.259462,5.893099,-2.675134,2.424180]],[[-0.480104,-8.864342,7.629191,-1.520090],[7.423441,2.772843,8.087050,-2.800988],[-8.114357,-5.130280,1.912817,-6.417694],[9.566190,9.418813,-1.564390,-3.983203],[5.006480,8.859676,-6.148932,-6.529102],[-8.344858,3.564708,5.265044,5.888660],[1.640382,-0.233071,8.315400,7.502464],[-4.789631,-8.540687,3.755806,5.932857],[-4.582270,5.332545,6.485201,-8.720821],[-5.768950,6.871855,-3.039381,8.835771],[-1.606027,-7.924238,-8.559943,1.233906],[6.846047,7.722197,-7.541403,0.013270],[-6.949921,5.832769,-8.446469,8.177506],[4.951971,3.869664,5.815298,4.110291],[-6.994328,-4.782957,4.107973,-2.574378],[5.923993,8.169320,-0.356524,-0.571237]],[[-2.129782,-4.344926,-8.920058,4.266282],[3.513066,1.425337,8.417277,-7.180484],[-2.094736,-6.112046,-2.050023,-6.340477],[7.598323,9.170807,5.123460,-3.866147],[5.527706,-7.030662,-8.749477,-6.102372],[-4.211024,-8.922401,-1.710776,-5.939820],[8.216479,3.886283,7.713164,-8.414070],[0.482317,-1.670409,3.723401,-8.792703],[-4.390802,-6.962938,-3.562876,-7.961116],[-5.082089,-0.070732,1.311513,-9.928494],[-0.096695,9.203250,0.607104,-7.116431],[0.996739,9.599713,5.388936,-6.723736],[5.553323,-0.689244,6.146711,-6.125851],[6.890231,-4.042401,6.433450,-0.858260],[-2.574925,3.540513,3.812301,1.383122],[5.458354,1.565504,-0.129262,-3.601256]],[[4.000306,-4.460352,3.797391,-7.749494],[8.762654,6.591482,9.757445,-6.206937],[9.895558,-4.460918,3.960397,-1.528118],[-9.984516,8.561206,7.992175,-3.732634],[-3.022033,5.403434,-8.401304,7.538239],[-1.197183,-7.080115,-2.381090,-7.932776],[2.375071,-1.310903,-2.891255,7.788651],[-3.512184,9.928263,-6.230080,-9.872282],[-5.964596,-8.322812,-1.965347,5.935320],[-0.525027,-5.648244,-9.032681,7.168008],[2.918316,6.457052,-0.520631,2.052111],[1.223380,-6.706219,-8.490651,6.650716],[-4.789347,9.764307,3.015992,9.287166],[2.065054,-0.198819,-6.992082,5.749953],[0.028754,9.907212,6.446668,-8.006515],[-8.636466,-4.979141,-4.442136,0.972470]],[[0.998348,7.554191,3.936070,-2.005339],[-6.559101,9.425855,-7.947163,9.675768],[0.474035,6.497119,9.915823,2.223586],[-0.227924,-6.966886,1.799437,8.842359],[9.146711,9.725088,-3.639325,5.482205],[-9.232872,6.805271,1.542064,-7.084110],[-9.781765,9.736785,-2.210262,2.701022],[-4.456623,9.759137,2.595757,-5.611686],[7.483170,-7.960323,5.171840,-1.507810],[-2.983856,3.087328,-8.899766,-2.109251],[6.614874,-7.785157,-2.386053,7.009632],[-0.601372,8.661433,0.300015,-6.457929],[5.458232,-9.701594,-4.136987,4.680906],[5.355966,-2.806751,-2.039805,-4.361617],[-0.333789,6.690994,-1.773854,1.688268],[7.605127,-6.089840,-8.922066,0.602483]],[[6.272132,-5.007739,6.193272,-2.539572],[-5.811416,-2.055554,0.502598,7.168352],[-6.684045,2.674184,4.641697,1.866976],[1.092605,3.063556,-2.942249,1.940957],[4.857348,1.896650,5.445631,6.690929],[-4.550602,4.608869,-6.966380,8.093538],[3.346828,8.473099,7.264268,-6.041694],[-7.016946,-6.624014,-5.776044,4.292314],[7.242689,-1.325285,-5.286402,7.121000],[-7.824414,0.563287,2.136743,1.178588],[7.942012,2.608739,9.375298,2.792795],[5.728271,-3.989826,3.188552,3.920610],[-3.673476,-4.292472,8.836511,6.464495],[-3.855157,-2.942394,1.465292,-0.454388],[-3.603845,7.942403,2.130305,-7.204338],[-0.054673,7.390071,-3.643605,-0.102323]]], dtype = "float64")#candidate|5158|(15, 16, 4)|const|float64
uop_5159 = relay.sqrt(const_5158.astype('float64')) # shape=(15, 16, 4)
output = uop_5159
output2 = uop_5159
func_5171 = relay.Function([], output)
mod['func_5171'] = func_5171
mod = relay.transform.InferType()(mod)
output = func_5171()
func_5172 = relay.Function([], output)
mutated_mod['func_5172'] = func_5172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3838_call = mod.get_global_var('func_3838')
func_3840_call = mutated_mod.get_global_var('func_3840')
call_5188 = func_3838_call()
call_5189 = func_3838_call()
uop_5190 = relay.asinh(call_5188.astype('float64')) # shape=(10, 4, 6)
uop_5192 = relay.asinh(call_5189.astype('float64')) # shape=(10, 4, 6)
output = uop_5190
output2 = uop_5192
func_5193 = relay.Function([], output)
mod['func_5193'] = func_5193
mod = relay.transform.InferType()(mod)
mutated_mod['func_5193'] = func_5193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5193_call = mutated_mod.get_global_var('func_5193')
call_5194 = func_5193_call()
output = call_5194
func_5195 = relay.Function([], output)
mutated_mod['func_5195'] = func_5195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2377_call = mod.get_global_var('func_2377')
func_2379_call = mutated_mod.get_global_var('func_2379')
call_5198 = relay.TupleGetItem(func_2377_call(), 0)
call_5199 = relay.TupleGetItem(func_2379_call(), 0)
output = relay.Tuple([call_5198,])
output2 = relay.Tuple([call_5199,])
func_5214 = relay.Function([], output)
mod['func_5214'] = func_5214
mod = relay.transform.InferType()(mod)
mutated_mod['func_5214'] = func_5214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5214_call = mutated_mod.get_global_var('func_5214')
call_5215 = func_5214_call()
output = call_5215
func_5216 = relay.Function([], output)
mutated_mod['func_5216'] = func_5216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3450_call = mod.get_global_var('func_3450')
func_3452_call = mutated_mod.get_global_var('func_3452')
call_5282 = relay.TupleGetItem(func_3450_call(), 0)
call_5283 = relay.TupleGetItem(func_3452_call(), 0)
func_1217_call = mod.get_global_var('func_1217')
func_1219_call = mutated_mod.get_global_var('func_1219')
const_5297 = relay.const([5.645413,8.332662,-8.168604,6.997746,-5.243613,4.915805,3.120018,2.829355,9.044720,6.882307,-4.448876,4.182909,9.498329,2.675406,5.805732,8.418783,-2.363111,6.199062,5.657799,5.094625,-5.230366,-9.173107,3.693540,4.719445,8.070389,5.432990,0.908949,5.917263,-7.336164,6.008387,-4.353745,-9.961802,-2.311714,-5.337115,-9.850582,5.717722,-3.723875,3.038231,1.576575,-0.707223,6.916148,-6.787657,-5.134323,5.035262,5.020959,-2.471989,4.772696,-3.134869], dtype = "float64")#candidate|5297|(48,)|const|float64
call_5296 = relay.TupleGetItem(func_1217_call(relay.reshape(const_5297.astype('float64'), [48,])), 1)
call_5298 = relay.TupleGetItem(func_1219_call(relay.reshape(const_5297.astype('float64'), [48,])), 1)
output = relay.Tuple([call_5282,call_5296,const_5297,])
output2 = relay.Tuple([call_5283,call_5298,const_5297,])
func_5299 = relay.Function([], output)
mod['func_5299'] = func_5299
mod = relay.transform.InferType()(mod)
output = func_5299()
func_5300 = relay.Function([], output)
mutated_mod['func_5300'] = func_5300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_5320 = func_3643_call()
call_5321 = func_3643_call()
func_4805_call = mod.get_global_var('func_4805')
func_4807_call = mutated_mod.get_global_var('func_4807')
call_5350 = relay.TupleGetItem(func_4805_call(), 0)
call_5351 = relay.TupleGetItem(func_4807_call(), 0)
output = relay.Tuple([call_5320,call_5350,])
output2 = relay.Tuple([call_5321,call_5351,])
func_5360 = relay.Function([], output)
mod['func_5360'] = func_5360
mod = relay.transform.InferType()(mod)
output = func_5360()
func_5361 = relay.Function([], output)
mutated_mod['func_5361'] = func_5361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2821_call = mod.get_global_var('func_2821')
func_2822_call = mutated_mod.get_global_var('func_2822')
call_5408 = relay.TupleGetItem(func_2821_call(), 0)
call_5409 = relay.TupleGetItem(func_2822_call(), 0)
output = call_5408
output2 = call_5409
func_5417 = relay.Function([], output)
mod['func_5417'] = func_5417
mod = relay.transform.InferType()(mod)
mutated_mod['func_5417'] = func_5417
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5417_call = mutated_mod.get_global_var('func_5417')
call_5418 = func_5417_call()
output = call_5418
func_5419 = relay.Function([], output)
mutated_mod['func_5419'] = func_5419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4805_call = mod.get_global_var('func_4805')
func_4807_call = mutated_mod.get_global_var('func_4807')
call_5461 = relay.TupleGetItem(func_4805_call(), 0)
call_5462 = relay.TupleGetItem(func_4807_call(), 0)
func_1668_call = mod.get_global_var('func_1668')
func_1671_call = mutated_mod.get_global_var('func_1671')
var_5474 = relay.var("var_5474", dtype = "float64", shape = (2400,))#candidate|5474|(2400,)|var|float64
call_5473 = func_1668_call(relay.reshape(var_5474.astype('float64'), [15, 10, 16]))
call_5475 = func_1668_call(relay.reshape(var_5474.astype('float64'), [15, 10, 16]))
func_4502_call = mod.get_global_var('func_4502')
func_4504_call = mutated_mod.get_global_var('func_4504')
const_5477 = relay.const([[5.966080,3.187057,-9.675483,6.726706,2.904997,7.788962,4.598168,9.234564,-3.133465,-8.366836,-8.544714,-6.306188],[-3.722582,-0.845916,-5.548107,9.535569,-2.494280,-3.530281,8.738746,-5.549935,1.592953,4.986547,-2.557477,-7.962297],[1.881977,-4.778044,4.215973,9.041089,-7.929169,-5.498071,6.245727,7.802063,-4.083378,6.590920,0.017637,-6.052188],[0.298477,-7.153479,-7.878215,-1.323592,6.171823,0.547475,-1.698766,6.617374,-0.670259,6.856826,8.125406,-0.851747],[-3.968344,7.565275,3.033756,-0.413205,0.865979,-5.820232,1.826006,-0.403477,-7.371365,7.742259,-9.845173,4.030406],[-5.133034,-4.850761,5.285422,0.456407,-9.717604,-9.255468,-0.910726,-0.224971,2.465669,-8.690001,-9.722322,7.768293],[-6.998705,8.737689,7.662987,-1.921243,4.014316,9.103937,4.234241,-8.215679,-4.215543,0.635104,9.048405,-3.080547],[-8.325870,1.970426,9.056521,0.220690,7.201362,-4.925247,-7.681083,-7.440648,-6.418486,-7.958727,-9.352807,0.258926],[7.888531,4.066221,2.724089,5.444120,-3.958734,-4.514868,-8.595773,-5.573387,-5.232098,-1.488491,5.658321,-2.541933],[2.172925,0.685424,4.896781,-2.225160,1.503614,0.665857,0.405190,-3.829906,3.844607,-1.769634,7.512970,8.374489],[0.827400,-8.262737,-5.100217,-7.008802,3.735800,3.126720,0.947683,-8.655789,8.539609,1.664879,-7.548917,3.807020],[-5.976207,0.222199,-9.682810,4.679529,1.952957,-6.634804,-8.987670,2.463959,-0.754111,-9.360400,-7.253902,-0.337872],[-5.594405,-5.468193,0.810147,-5.460017,8.437951,1.258612,-9.025045,-6.208239,-0.250179,7.785366,5.161402,5.999821],[4.254813,7.619319,-6.179797,7.140889,0.225624,5.166980,9.098523,-0.301523,-2.340286,-1.695859,-0.296291,-1.518638],[4.958395,2.059826,-7.072108,-7.079664,-6.169259,1.388600,4.580615,5.666439,-1.700264,-5.868570,-1.489530,0.531800],[-4.701544,9.675481,-8.630096,-6.873771,1.094652,-0.236538,-0.221110,9.072797,9.577985,3.828797,-2.772080,3.306671],[5.804966,-5.180250,7.152236,-0.086935,-4.407445,-7.038659,8.306759,-3.792182,7.710346,-3.240587,-6.804114,-4.628929],[-3.831890,-8.266946,6.280095,-4.076535,8.026750,-1.330596,-7.887937,7.733982,3.389573,7.884131,-3.490359,2.931332],[-7.512079,9.770700,-6.595620,-3.173830,2.528794,2.176268,5.962161,1.921677,-7.215925,4.971168,5.214356,6.307692],[-0.871270,5.221318,9.706124,-1.675304,5.541998,-5.860886,-0.926084,-8.188007,8.789822,-7.240140,4.442332,-2.632649],[0.256905,-7.465891,-3.468702,0.744983,-4.988794,7.165767,-3.922980,-7.806605,2.965352,3.527823,0.054571,9.714292],[4.533790,7.180312,8.174967,-9.314940,3.887410,4.894529,9.450160,3.722780,-7.050410,8.259660,-7.333340,-3.978203],[-4.068338,8.376066,9.041955,-3.198527,-0.046745,-3.198903,5.820752,6.697291,7.795593,-6.269567,7.777533,8.280180],[-0.142135,-9.347270,-5.646889,-3.920733,-8.802069,-4.772493,-1.753632,-5.387723,6.331798,6.067727,-9.013981,6.190058],[2.336390,-5.207669,0.076562,-0.277030,-1.256157,1.868974,2.108031,1.293968,4.551310,-6.821780,-0.715075,9.037107],[9.268761,4.572132,1.481473,2.485609,-5.718463,7.880371,0.827091,-4.453394,1.923298,-7.865696,9.082096,-2.520093],[-5.834875,1.402860,-7.302928,-2.467482,0.866708,9.845795,-9.075344,2.393221,-0.400110,6.438972,8.920391,6.218611],[6.511204,4.826601,3.557541,8.259014,-3.278330,-0.346194,3.792722,-1.472140,-9.509458,4.353487,1.781794,-4.350077],[-5.354401,6.182975,4.243966,-4.871332,8.959913,9.189879,9.332305,-0.804657,0.382415,-5.943189,5.754605,0.957527],[-9.676923,-3.832733,-3.985714,1.940380,-1.686594,-0.997427,0.509174,-9.710207,-2.049567,1.464670,8.954265,-6.308217],[5.153483,0.898742,1.617125,-1.424018,-9.862023,3.171134,9.046399,2.871716,-7.358061,0.065459,-9.444923,-0.404555],[-2.228866,-4.790555,3.903252,-3.302923,-6.535455,2.651545,3.266103,0.597772,-4.744407,-3.653406,-2.594027,-6.234248],[7.211105,-1.499869,5.808564,-5.024509,8.371002,6.502222,3.501293,8.545559,-4.960403,-2.509170,-2.006653,7.745159],[-8.606840,5.092138,1.567237,5.080395,1.591690,-9.095321,-8.055897,-5.444114,1.331563,-5.472422,-8.096281,-1.037683],[-5.188770,-9.189489,7.019096,-6.935600,2.315288,-5.064271,4.866833,4.236000,4.081699,3.269038,-3.885566,8.459771],[-9.483313,9.595351,1.296439,6.969448,-4.285785,3.175072,8.915778,8.683260,2.477557,1.879113,-5.458503,4.335081],[-2.588066,6.753451,6.660070,-9.219849,1.275711,-0.668561,-9.932941,-9.580875,0.826269,-5.784190,7.489624,4.245216],[3.863682,6.637841,8.386518,4.078644,-2.898877,-5.497980,-4.225628,8.612206,-0.257606,-5.224229,7.512906,1.104095],[-4.038893,6.592400,-3.290536,-7.912162,4.382236,6.230396,8.375693,-6.962861,4.272127,0.730051,0.340939,6.358353],[-8.550732,-9.874765,3.566510,-4.145212,0.947179,4.478031,-4.791141,4.182965,-1.193012,-1.098929,-3.737846,6.249714],[9.926189,2.761962,9.046902,9.471035,-5.084778,8.514201,2.766396,-4.399305,4.008708,-9.921824,6.536467,2.086201],[-7.431348,4.102019,-4.078595,3.264097,9.869590,-7.296491,3.727451,-5.918027,-2.486094,2.918731,0.389173,-1.389391],[-6.272214,-6.316627,1.529464,0.081247,5.104846,-3.953587,4.336360,-6.464441,-9.064571,1.813992,-8.397743,8.375483],[6.484276,-9.513406,-7.664410,4.880883,-6.798403,8.981317,8.565833,7.965920,7.477562,-7.131905,8.658139,-7.287271],[2.954323,-2.874027,8.593229,-6.907537,-4.123800,-9.953655,-3.507296,2.624545,5.368642,-8.245062,6.515347,-2.965739],[8.401175,1.951022,5.200139,-0.938430,4.436635,-4.643817,-5.009852,0.066402,1.766380,-5.149300,5.941203,-6.418521],[-0.028774,8.599735,3.491189,-8.791823,-6.244765,2.943294,9.531585,4.318058,-8.137639,-0.884690,-4.707177,-0.373878],[6.021252,7.779634,-3.195043,1.952781,-2.910876,9.489281,-5.880305,-6.044125,9.202161,-6.178280,9.715032,-5.323581],[2.989928,4.409284,-9.655053,-7.566501,-0.911528,6.121583,1.337187,0.653994,8.391835,1.770936,-4.040353,1.283806],[-4.844809,2.460853,2.253556,2.465923,-0.554157,-8.998504,-3.294696,-5.053223,3.154494,-3.636950,-0.817717,-1.443060],[-7.482894,-1.163817,-7.280667,-3.514342,4.199153,-6.325356,0.748591,-7.675801,-6.655705,4.385430,3.764526,4.332209],[5.926406,0.415976,0.904038,2.811127,-3.275751,0.824833,1.143109,4.368352,7.029052,6.045852,7.530340,-7.213290],[6.836403,0.818611,2.603782,3.624204,-6.283591,-5.858731,-8.381763,7.283510,4.325351,3.245248,-3.974595,-1.619659],[5.453370,5.711980,7.979205,-5.965002,1.819649,4.193855,1.114806,3.343483,9.127678,9.344583,7.034117,-9.258141],[9.597204,-3.309673,-5.225947,8.769269,-4.863436,7.579220,-8.915720,-8.639259,1.532720,-3.585668,-8.335903,-5.983550],[-4.084314,-6.255530,-3.986410,-6.909596,-2.052666,3.768825,9.783994,-4.869500,7.471244,4.643690,-4.029524,1.019437],[6.947641,-0.866543,2.510594,-9.726710,-2.456891,-4.237834,7.209775,0.544720,0.332782,7.113786,9.517178,-1.787149],[1.755146,4.590192,-8.709571,0.263424,-5.406160,6.255506,-0.522376,0.123539,-1.957518,8.936832,4.452840,-6.774197],[3.919795,7.445722,7.567220,-5.346095,-5.703011,-9.521817,-5.092582,-7.902750,0.440042,6.170798,8.826393,2.785544],[-8.100345,-3.559978,9.508424,-3.314406,-2.896676,9.120843,1.849695,-9.354844,3.719840,-7.205453,-4.926318,9.371055]], dtype = "float64")#candidate|5477|(60, 12)|const|float64
call_5476 = relay.TupleGetItem(func_4502_call(relay.reshape(const_5477.astype('float64'), [10, 12, 6])), 0)
call_5478 = relay.TupleGetItem(func_4504_call(relay.reshape(const_5477.astype('float64'), [10, 12, 6])), 0)
var_5487 = relay.var("var_5487", dtype = "float64", shape = (15, 10, 16))#candidate|5487|(15, 10, 16)|var|float64
bop_5488 = relay.maximum(call_5473.astype('float64'), relay.reshape(var_5487.astype('float64'), relay.shape_of(call_5473))) # shape=(15, 10, 16)
bop_5491 = relay.maximum(call_5475.astype('float64'), relay.reshape(var_5487.astype('float64'), relay.shape_of(call_5475))) # shape=(15, 10, 16)
output = relay.Tuple([call_5461,var_5474,call_5476,const_5477,bop_5488,])
output2 = relay.Tuple([call_5462,var_5474,call_5478,const_5477,bop_5491,])
func_5498 = relay.Function([var_5474,var_5487,], output)
mod['func_5498'] = func_5498
mod = relay.transform.InferType()(mod)
mutated_mod['func_5498'] = func_5498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5498_call = mutated_mod.get_global_var('func_5498')
var_5500 = relay.var("var_5500", dtype = "float64", shape = (2400,))#candidate|5500|(2400,)|var|float64
var_5501 = relay.var("var_5501", dtype = "float64", shape = (15, 10, 16))#candidate|5501|(15, 10, 16)|var|float64
call_5499 = func_5498_call(var_5500,var_5501,)
output = call_5499
func_5502 = relay.Function([var_5500,var_5501,], output)
mutated_mod['func_5502'] = func_5502
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5529 = relay.var("var_5529", dtype = "float64", shape = (12, 2, 8))#candidate|5529|(12, 2, 8)|var|float64
uop_5530 = relay.sin(var_5529.astype('float64')) # shape=(12, 2, 8)
output = uop_5530
output2 = uop_5530
func_5544 = relay.Function([var_5529,], output)
mod['func_5544'] = func_5544
mod = relay.transform.InferType()(mod)
mutated_mod['func_5544'] = func_5544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5545 = relay.var("var_5545", dtype = "float64", shape = (12, 2, 8))#candidate|5545|(12, 2, 8)|var|float64
func_5544_call = mutated_mod.get_global_var('func_5544')
call_5546 = func_5544_call(var_5545)
output = call_5546
func_5547 = relay.Function([var_5545], output)
mutated_mod['func_5547'] = func_5547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4144_call = mod.get_global_var('func_4144')
func_4145_call = mutated_mod.get_global_var('func_4145')
call_5609 = relay.TupleGetItem(func_4144_call(), 1)
call_5610 = relay.TupleGetItem(func_4145_call(), 1)
output = call_5609
output2 = call_5610
func_5611 = relay.Function([], output)
mod['func_5611'] = func_5611
mod = relay.transform.InferType()(mod)
output = func_5611()
func_5612 = relay.Function([], output)
mutated_mod['func_5612'] = func_5612
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5635 = relay.var("var_5635", dtype = "float64", shape = (3, 10, 15))#candidate|5635|(3, 10, 15)|var|float64
var_5636 = relay.var("var_5636", dtype = "float64", shape = (3, 10, 15))#candidate|5636|(3, 10, 15)|var|float64
bop_5637 = relay.floor_divide(var_5635.astype('float64'), relay.reshape(var_5636.astype('float64'), relay.shape_of(var_5635))) # shape=(3, 10, 15)
output = bop_5637
output2 = bop_5637
func_5644 = relay.Function([var_5635,var_5636,], output)
mod['func_5644'] = func_5644
mod = relay.transform.InferType()(mod)
var_5645 = relay.var("var_5645", dtype = "float64", shape = (3, 10, 15))#candidate|5645|(3, 10, 15)|var|float64
var_5646 = relay.var("var_5646", dtype = "float64", shape = (3, 10, 15))#candidate|5646|(3, 10, 15)|var|float64
output = func_5644(var_5645,var_5646,)
func_5647 = relay.Function([var_5645,var_5646,], output)
mutated_mod['func_5647'] = func_5647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mod.get_global_var('func_4393')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_5664 = relay.TupleGetItem(func_4393_call(), 0)
call_5665 = relay.TupleGetItem(func_4395_call(), 0)
func_3838_call = mod.get_global_var('func_3838')
func_3840_call = mutated_mod.get_global_var('func_3840')
call_5668 = func_3838_call()
call_5669 = func_3838_call()
output = relay.Tuple([call_5664,call_5668,])
output2 = relay.Tuple([call_5665,call_5669,])
func_5674 = relay.Function([], output)
mod['func_5674'] = func_5674
mod = relay.transform.InferType()(mod)
output = func_5674()
func_5675 = relay.Function([], output)
mutated_mod['func_5675'] = func_5675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mod.get_global_var('func_2464')
func_2466_call = mutated_mod.get_global_var('func_2466')
call_5695 = relay.TupleGetItem(func_2464_call(), 1)
call_5696 = relay.TupleGetItem(func_2466_call(), 1)
func_4626_call = mod.get_global_var('func_4626')
func_4630_call = mutated_mod.get_global_var('func_4630')
const_5732 = relay.const([[5.429931,1.490186,-0.546417,5.035541,7.367261,0.417383],[0.987952,-5.464603,-0.077788,-6.707264,-5.120613,3.493852],[-6.828181,-1.796079,-7.051857,-6.469295,0.357256,9.910726],[7.727098,1.602059,-4.748536,-5.800875,-0.753841,-7.582961],[0.206004,-3.491256,4.238585,-1.624474,-7.157328,6.432610],[8.441495,2.497940,4.171593,-9.812411,1.067623,3.470046],[-0.346263,9.284554,-6.942190,4.964752,6.358213,5.628776],[-1.714875,-7.475110,-3.496194,6.063859,-8.188586,3.525309],[2.737811,-4.308728,2.760524,4.579736,2.888391,3.912629],[-7.376679,-6.328484,-7.742867,-7.705704,0.027880,1.795097],[-4.029328,1.824889,6.717049,-5.680447,-4.595049,8.614494],[-1.593964,6.025037,-5.448236,4.589525,-5.769780,-9.603457],[-7.590738,8.705957,7.505380,9.274638,8.925737,-9.681145],[0.371804,-1.701440,9.971703,-0.544234,-4.037781,-6.718001],[-2.860785,7.718889,8.625315,3.833729,-2.492340,1.179951],[7.178604,-5.599629,9.018771,-7.455272,4.677497,-0.750645],[-8.706424,9.295251,-4.641409,1.390630,6.073546,2.609074],[-8.204865,-2.278961,6.011238,4.174739,0.336240,-9.382073],[-6.324568,3.462790,5.006720,8.975208,-0.645281,-3.149363],[-3.783371,2.160237,-8.007017,-5.669454,5.880810,6.881813],[-1.383127,-4.348439,-3.359897,-4.567573,6.965192,1.412648],[5.622666,-9.516734,7.185331,-5.221028,3.847347,3.678189],[0.753368,-6.444903,6.446178,4.840445,-5.421585,6.530709],[-3.095107,-7.238063,5.793410,-7.514935,-4.487356,9.740825],[5.857813,7.391576,5.304272,-6.084598,-1.802538,-7.799862],[5.734438,4.350546,6.715515,-9.391872,-7.744562,3.062976],[-6.258708,-4.384349,-7.350194,-4.767265,5.511471,-9.218014],[9.212077,9.466299,-4.210342,3.336670,-2.737054,9.726745],[1.489290,0.797193,-0.810800,8.855169,9.506671,3.737857],[1.434930,9.473714,8.699610,-3.821131,8.020927,-8.560895],[2.775707,9.900584,-0.077929,9.432966,-4.405769,0.326585],[6.941345,-7.969033,-7.452509,-5.160537,2.161992,2.996242],[-0.717404,8.816578,3.960092,1.079863,1.858502,-6.574732],[5.447552,7.162952,6.528790,3.518304,-6.530934,6.631790],[1.931342,-2.096177,7.130443,-1.239210,6.044265,5.882002],[0.727142,4.209960,0.474718,0.078391,2.426544,8.702512],[7.941469,7.330927,-8.600369,7.935979,4.106616,-3.019980],[4.390805,-8.161933,6.984211,1.438298,-8.896703,0.910069],[4.362518,-1.748796,-3.809720,4.316131,-9.056336,2.279868],[5.018807,5.325866,-1.775427,2.166271,-5.129238,0.995214],[-1.937519,-5.308530,0.791994,-8.931581,-4.043206,-7.538985],[-2.709578,5.957237,-5.166405,3.006181,0.807432,-5.047225],[2.788747,2.105265,1.464997,4.644584,7.567579,-0.534469],[8.161342,8.186731,-0.612593,-5.946373,1.085895,4.616029],[-5.211248,7.277095,2.532635,-4.575209,-9.022812,-7.395960],[-1.606527,9.296428,-9.040828,-0.726805,-6.833092,8.971094],[2.194898,-2.363824,8.267788,8.825811,-8.732529,1.218597],[-2.239334,-6.749963,8.638751,3.552461,-7.104850,-0.721452],[-7.618691,3.230253,-0.231062,8.035112,-3.635966,2.715550],[-9.468397,-6.345042,1.299775,-0.309107,7.932256,-0.185853],[-8.844872,-4.839754,-6.902217,0.348865,1.398726,-5.656747],[1.516453,-9.456200,8.921774,-9.844091,-8.696870,-9.231535],[-4.545502,7.974337,-2.376197,4.111663,7.223413,2.998404],[-9.642122,0.766327,9.084944,3.618361,0.602436,3.810283],[3.569049,-7.159022,-3.592067,-9.817789,-1.137679,-5.370666],[1.722629,4.914508,7.500980,9.481002,2.875716,1.895711],[-0.417114,7.653607,-5.185662,-1.076790,-2.412199,2.646452],[2.507629,-4.951021,-5.675006,-5.834598,-2.903776,-1.150861],[1.094764,5.023183,-6.001372,2.534329,7.647180,6.405156],[3.480385,-6.522405,-9.758238,-3.696282,9.341610,0.367467],[0.299253,8.753207,7.983867,0.976622,0.508922,6.739602],[-9.584546,-7.212911,-7.571496,8.147248,4.194595,9.999580],[-2.505435,-6.515515,-3.530658,3.186712,4.191443,9.095947],[-2.547082,5.429673,2.713630,-7.014727,-1.131093,-2.630045],[-4.004231,-7.518164,4.348029,3.680265,-6.902586,9.431942],[-6.330134,-8.352382,7.965166,-8.462696,6.476061,-4.018925],[7.977141,-8.896942,3.598290,-4.477200,-1.235300,-8.640879],[-0.848372,8.374303,8.025133,-1.801797,9.038970,5.487241],[-2.805307,2.549609,-8.141803,9.442857,-7.008567,4.065138],[-6.771559,5.593782,-7.470856,-1.662896,9.527078,0.455867],[-1.533694,-3.353812,1.199135,-9.104299,-5.613361,9.578846],[7.251822,-1.072180,-6.893529,-8.403272,4.387733,1.228105],[9.449748,-8.994339,-3.298354,1.240145,2.313244,-2.168796],[1.098840,5.918387,-5.851990,-0.755316,8.249229,6.473966],[-4.920105,-5.843114,9.587241,-3.524466,4.045392,-7.688343],[-4.572022,-7.036366,9.951352,-7.987112,5.296050,-8.476433],[-4.531786,-2.509068,5.475002,3.308435,2.851134,5.617223],[-4.877105,4.602777,1.425512,1.097755,2.693371,4.390523],[-6.542918,8.182630,1.676436,-2.390882,7.804229,2.375022],[-8.364941,-9.345220,-9.000923,7.730126,1.894993,-4.282353],[-9.789412,5.956521,6.392727,-2.716285,-5.840497,-4.789242],[-8.095161,-3.995742,2.734457,-2.968530,-3.248902,3.379796],[8.793244,5.963084,5.821701,7.086696,1.973189,3.096823],[3.364319,8.802283,9.745213,-4.426862,-9.224455,3.415734],[-4.276911,5.323718,5.848109,-3.944062,5.363376,4.811403],[9.664375,-9.089881,2.826836,-5.678176,-8.074432,3.796724],[1.244654,4.725806,-0.576109,1.210971,-6.287769,1.287957],[3.207456,-8.907613,-1.621574,3.623069,-4.236372,-1.822460],[8.774933,5.484358,-5.953971,7.851041,-0.210070,1.520559],[-2.020190,6.747522,-0.107740,-5.163463,-8.877499,-2.347196],[-8.629993,8.684965,-5.568063,9.205779,-0.192938,0.187047],[8.011724,-4.723708,2.828790,-2.060230,-8.342790,-2.632997],[-2.459976,-5.869138,-9.148989,0.939164,-9.747398,7.245681],[7.253211,-5.878102,8.096198,-1.499593,-3.091744,-8.764759],[7.656120,2.596865,2.967830,-5.332300,-9.568942,-2.833306],[1.584686,-9.100600,-7.466492,-6.325604,-5.697700,3.442687],[-1.065178,-1.741919,-0.792641,-0.977135,4.295800,3.967954],[-1.116056,-8.916224,-9.101181,1.166294,5.723035,1.804260],[2.481791,7.492999,-4.835781,-7.832886,-6.536142,-1.071818],[7.804773,-1.596402,-2.882107,9.009694,2.705412,-5.841638],[3.240248,-5.415659,3.968551,-9.297232,7.997430,-9.314225],[3.777799,7.550342,0.396596,-4.082938,-4.507880,8.824016],[8.321260,5.235866,-7.335612,-9.858379,0.840972,-2.498340],[4.781714,-9.258562,-4.213412,-5.950536,0.695278,-7.525760],[1.109190,5.654914,2.669367,1.910073,-0.699097,-6.174327],[-7.778960,-5.024369,7.515553,-3.775710,1.371711,7.562648],[9.919730,1.419359,1.492087,6.007762,4.808689,2.318249],[0.976319,9.676284,8.838868,-6.204565,-7.725448,-7.935451],[-3.576983,-3.581780,3.996406,0.374043,-6.018075,9.462343],[-4.579263,-7.873237,9.902208,0.401063,-4.095435,-3.848081]], dtype = "float64")#candidate|5732|(110, 6)|const|float64
call_5731 = relay.TupleGetItem(func_4626_call(relay.reshape(call_5695.astype('float64'), [528,]), relay.reshape(const_5732.astype('float64'), [660,]), ), 3)
call_5733 = relay.TupleGetItem(func_4630_call(relay.reshape(call_5695.astype('float64'), [528,]), relay.reshape(const_5732.astype('float64'), [660,]), ), 3)
func_1072_call = mod.get_global_var('func_1072')
func_1074_call = mutated_mod.get_global_var('func_1074')
call_5736 = relay.TupleGetItem(func_1072_call(relay.reshape(const_5732.astype('float64'), [660,])), 1)
call_5737 = relay.TupleGetItem(func_1074_call(relay.reshape(const_5732.astype('float64'), [660,])), 1)
func_3973_call = mod.get_global_var('func_3973')
func_3974_call = mutated_mod.get_global_var('func_3974')
call_5754 = relay.TupleGetItem(func_3973_call(), 0)
call_5755 = relay.TupleGetItem(func_3974_call(), 0)
func_3527_call = mod.get_global_var('func_3527')
func_3530_call = mutated_mod.get_global_var('func_3530')
call_5764 = relay.TupleGetItem(func_3527_call(relay.reshape(const_5732.astype('float64'), [660,])), 0)
call_5765 = relay.TupleGetItem(func_3530_call(relay.reshape(const_5732.astype('float64'), [660,])), 0)
output = relay.Tuple([call_5695,call_5731,const_5732,call_5736,call_5754,call_5764,])
output2 = relay.Tuple([call_5696,call_5733,const_5732,call_5737,call_5755,call_5765,])
func_5823 = relay.Function([], output)
mod['func_5823'] = func_5823
mod = relay.transform.InferType()(mod)
mutated_mod['func_5823'] = func_5823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5823_call = mutated_mod.get_global_var('func_5823')
call_5824 = func_5823_call()
output = call_5824
func_5825 = relay.Function([], output)
mutated_mod['func_5825'] = func_5825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2464_call = mod.get_global_var('func_2464')
func_2466_call = mutated_mod.get_global_var('func_2466')
call_5846 = relay.TupleGetItem(func_2464_call(), 1)
call_5847 = relay.TupleGetItem(func_2466_call(), 1)
func_3015_call = mod.get_global_var('func_3015')
func_3017_call = mutated_mod.get_global_var('func_3017')
call_5882 = relay.TupleGetItem(func_3015_call(), 0)
call_5883 = relay.TupleGetItem(func_3017_call(), 0)
func_2393_call = mod.get_global_var('func_2393')
func_2396_call = mutated_mod.get_global_var('func_2396')
const_5902 = relay.const([-8.386196,-6.184341,6.588004,-2.931345,5.825700,-4.507068,-5.465733,-1.569077,1.660987,-8.564506,6.620401,3.654367,-2.432972,2.447988,-6.312303,-0.738792,-5.368184,5.971996,3.105706,6.902556,-2.269223,8.280114,-7.100625,-0.117036,-2.850823,8.406926,-8.461982,-9.132388,5.961810,-9.297793,-7.125504,4.684504,-2.439124,-2.625435,-4.371454,-2.651238,-9.404535,-1.939962,2.918506,-5.660699,5.972469,0.437061,5.214585,8.272221,-5.781058,-5.656437,-3.476129,8.012358,-9.733721,-3.262334,4.390189,5.173957,-0.307759,-7.523091,-3.727322,7.723561,-1.376410,-7.434641,-0.621059,-1.062719,9.313500,-3.914732,-2.720015,-1.565317,4.742120,-8.073677,5.404132,-5.082830,0.953587,-2.031600,-6.214688,9.021044,-6.790721,-8.150430,9.252849,8.779556,3.150498,0.875538,9.674987,-8.348007,-2.112569,2.128765,-7.896167,-1.163953,-7.877406,4.024707,-1.402914,5.905107,-5.720015,-5.896204,5.194525,0.028962,4.721287,-9.244759,-7.796564,3.360285,3.061159,6.365476,8.967505,4.723849,-5.239001,-7.750246,-1.941824,9.100465,7.195727,-6.875386,-3.634402,0.912869,-1.845439,-8.102771,-1.316290,-1.747635,9.557129,1.621384,8.572734,-5.266727,7.316708,-9.579220,0.426296,4.926344,3.127424,9.333563,1.710368,4.547414,-1.238302,-7.933591,-0.460843,0.262488,-5.781403,-4.881933,5.939598,8.402831,9.722172,-8.393693,-4.297345,1.444370,-8.913246,9.180033,2.073291,4.702158,-4.587308,-3.080206,-9.639478,-9.610317,-0.862140,-4.276603,-5.290082,-0.744810,-1.734336,-6.297557,-5.247531,-6.948035,-8.725068,-4.376822,7.672423,8.356882,-1.791102,-3.675286,9.378397,3.615094,4.070093,-0.619703,-9.703862,4.478014,7.505889,6.878782,8.308243,-4.695480,2.164398,1.916290,8.869888,-6.831022,-5.329969,-4.038128,-7.370652,6.010192,-2.493595,9.368819,-2.061868,5.149503,-4.179957,-4.147176,-2.125878,7.695742,4.043687,-2.472665,3.578356,-8.159817,0.353262,-9.331243,2.573157,3.467030,7.620683,-5.396919,8.151985,6.934874,-1.164579,9.188268,5.551576,-4.834530,7.600947,5.559141,5.955060,-1.012510,-9.976997,-7.806525,-8.539649,1.587312,-5.903686,-3.926164,0.782664,2.743158,4.969775,8.175801,1.335559,6.789115,-5.261341,-6.758956,1.270582,1.174819,9.640321,4.634711,1.168754,2.149120,-8.593370,-8.668639,3.787035,8.843571,-0.181825,4.534066,-0.431081,5.385714,6.507084,-9.863992,-2.819049,7.398800,-2.077648,-6.596127,3.744168,6.429614,6.385681,-6.301559,-4.099665,5.730974,-4.097211,-0.092780,5.218387,7.697948,5.270899,8.788695,5.260992,6.493965,1.268111,-2.896564,7.745707,-9.781788,8.028492,-6.072811,-6.025358,-7.427382,-8.153753,5.182400,-9.432873,3.467270,1.894019,-8.806762,1.360538,-6.225134,4.083059,1.494597,-0.453491,9.527562,-3.669998,6.961727,8.113879,2.613920,6.269345,5.070327,-0.841387,5.384903,-7.790752,-6.232005,-8.435181,-7.600772,5.738989,-0.684143,-7.161426,0.155140,6.965793,9.715061,6.316135,8.289417,-4.366532,-4.132512,7.373564,-9.295397,3.227301,2.657318,9.105689,1.446720,0.037303,-5.778960,4.055295,5.468363,2.780523,4.499540,2.905594,1.313664,-4.342644,-7.967896,2.159899,6.375912,-9.781806,-3.708032,-7.379372,-6.143745,-5.730764,0.906157,1.875684,-7.919009,-2.449091,7.312820,-0.928234,8.866595,-4.947472,-4.026548,-8.070830,2.570445,-7.924082,-5.198054,7.206847,0.481464,4.235929,-4.489901,3.470318,9.126186,-0.248840,0.734486,2.470325,2.256505,0.405337,-5.279267,3.184589,-9.205166,1.300332,9.063505,8.620447,-2.905918,5.387617,4.910609,-7.431356,-0.383769,2.251424,8.269449,-3.275123,4.409284,4.704843,7.541933,2.131582,-3.868543,-8.644078,5.593434,-6.703986,3.175970,-0.978497,-7.427281,2.416388,-3.789397,2.413812,-7.205341,-0.899312,4.816850,5.713927,3.800060,-0.214403,2.605135,2.534649,-1.769974,9.038237,1.018898,6.477825,-9.525933,4.202607,9.365178,-8.954355,-0.711813,9.058875,-6.189517,0.076037,0.910010,-0.621329,-4.828048,-1.685890,7.018057,-0.519665,9.713209,2.062803,8.860962,-1.836081,3.306785,-3.021643,-7.665953,9.863829,-2.331821,-6.436441,-4.263518,-6.741496,-9.743394,7.416857,-0.980708,-7.721644,2.487518,4.419883,-5.375822,-7.513391,7.564555,-6.077527,-8.733811,-2.328174,-4.582041,5.138670,7.982141,7.635880,-3.653589,-7.589539,0.377115,-5.138692,-1.778886,6.538016,-4.236223,-7.063069,-1.608946,2.903335,-8.530669,5.849334,-8.645121,8.700592,-8.875973,8.049047,6.296669,-4.061103,-4.847384,-4.553631,-6.519506,-8.210503,2.208586,-5.611051,5.145747,-9.453760,-1.773905,-5.981704,-3.877841,-3.678910,-5.095994,6.595150,1.535982,-3.980871,4.625868,-2.796244,-4.545445,-1.464312,9.403065,1.968474,-4.802148,-5.962715,1.356329,8.548548,-7.139061,4.467732,3.776364,5.286775,-5.948535,-9.006512,-4.700347,3.514364,6.937276,-4.653236,5.576304,5.782539,3.623818,-5.035541,-6.516127,5.870853,1.003270,-0.830602,5.955897,-0.460493,3.258545,1.099532,5.169433,1.646671,-3.654715,-3.648030,5.029801,2.316215,1.323071,-7.375953,6.531267,1.676562,-6.366130,2.047232,3.663896,9.650829,3.869451,-1.624223,5.167000,6.778540,9.696624,3.106004,-8.573267,6.947486,-7.316960,9.473686,6.976208,0.574396,-5.182514,-5.479459,-6.331887,5.645500,-5.425231,-5.811645,7.064738,-1.286445,7.327913,5.698201,-2.652461,-8.696889,-2.459443,4.953802,-1.344732,1.761352,4.349610,-8.214250,6.085364,4.034894,7.773493,-9.952418,-3.854341,3.028894,-9.706148,6.363673,2.965974,-5.764452,4.214832,-2.535035,-0.405746,2.019802,3.480387,8.414102,3.374123,-0.952500,-0.355874,3.630375,5.807523,0.652604,8.814948,6.150428,-1.758811,1.768253,1.601167,8.936149,6.946271,4.764942,-8.049147,-5.360463,-2.532309,-2.658210,5.523558,6.149405,-6.692359,-9.674636,4.021046,-6.634374,0.052117,6.003870,2.667889,-1.878863,8.331435,5.942339,-4.823464,1.021589,0.900881,-7.961182,1.870916,8.251157,-3.658421,-7.154821,6.136189,4.681881,-0.983306,9.490782,6.085610,-4.283480,-1.037247,-3.928800,1.539717,8.852266,9.065140,4.784444,2.965567,-4.451303,0.524249,0.185773,6.480723,4.320111,4.009459,-7.070330,6.981400,-8.600810,-8.883968,-7.742950,-0.256116,-1.590925,7.902244,8.212859,6.628806,-6.008622,-0.571259,0.814220,-9.706688,9.006905,-3.983152,-2.551972,-3.178595,0.322422,0.440320,0.167251,2.614067,1.888509,8.218811,6.949077,-7.101770,5.494015,9.320365,8.313683,-5.527465,8.578159,-4.839005,-8.578213,-8.567426,2.705550,0.782081,-8.247079,7.498220,-5.334510,-2.749741,2.968725,9.721006,2.065193,6.581484,8.663582,2.692519,-7.941796,-1.272041,-6.371524,-6.560144,0.013129,-7.485890,-5.454908,3.661884,4.603387,-8.275722,9.182550,6.759804,-4.709038,1.200474,-1.348623,1.029133,-7.714444,2.760317,-5.399643,-9.046426,-8.116526,9.003945,-0.401000,4.317398,-0.098944,-4.973400,3.170238,-0.358291,1.280458,2.151566,-6.742320,-9.408038,3.666639,-9.561619,-0.601690,0.692237,1.352581,6.639497,6.030992,5.507802,7.062039,0.707658,-6.463599,-3.074018,6.077389,6.989529,-7.803224,-6.646648,-7.539860,-6.046334,-9.456004,8.331185,-2.327818,1.207171,2.913577,-5.873125,2.923982,6.218819,9.675879,6.564777,-7.389800,4.144440,-4.390112,-9.324178,-2.492187,1.966985,-4.048144,-1.282091,-0.333687,-2.336874,0.963990,-9.773918,3.209479,-3.831042,8.644067,2.080530,-0.138817,5.983322,5.398558,7.032304,-8.447287,-7.925054,7.944959,1.683317,-0.677112,3.800580,-6.462895,-8.795911,-9.683304,4.867644,-6.621625,9.963151,0.737278,-7.702660,-5.488057,-0.340136,-5.180518,5.215987,8.665039,4.445336,-6.614517,8.468799,-9.278753,-7.766270,-6.852498,4.494653,7.425182,-6.147377,9.955254,9.437846,-1.329587,-9.884000,-7.492442,6.499348,-8.164658,7.827557,0.680264,-1.944172,5.292547,-0.582212,-5.518552,-0.404773,-2.488941,-2.706224,8.826905,7.850770,8.043584,9.771898,5.328252,8.637908,4.830739,1.246916,-4.023934,8.842144,-4.167108,9.356073,1.464465,-9.973074,-3.211830,8.697828,-9.922459,-1.044668,-7.423872,2.535583,-9.745810,3.596935,-4.679771,-4.945377,-9.723853,-2.594021,-6.360595,9.578335,4.931575,0.715759,-2.997353,-1.440994,-7.605568,-1.231886,-9.307291,-3.957716,6.858399,-2.036133,-8.055913,-6.691568,-1.472797,-8.015179,-0.894273,-3.122533,5.069571,-3.390187,-1.159383,1.426200,3.138250,0.348515,8.313942,-2.971416,-5.572200,-6.263491,2.118308,3.498800,5.025293,-1.195831,-8.593923,-7.620982,2.673813,6.217378,9.890822,-3.797721,0.149568,-5.982049,5.381139,3.610289,0.940917,3.407918,-8.003633,1.351748,-4.992241,8.227836,-8.837989,-4.355233,-5.001217,-9.546807,-2.479480,-7.459466,-8.019498,7.933084,9.243393,5.511657,-8.346683,-4.375389,-8.717883,8.914236,6.102796,7.001168,-8.969020,0.079173,5.118909,-7.525964,-9.881745,3.206336,9.028574,3.051199,2.341097,8.825356,0.259046,-1.428968,2.818837,-3.313678,8.796698,9.640905,3.316068,-7.152835,-7.473131,2.006859,-4.447525,8.520368,2.998571,-8.328476,-8.214965,-2.369931,0.066118,3.376993,-6.560849,-4.060106,7.296961,3.403934,-4.950257,1.450081], dtype = "float32")#candidate|5902|(900,)|const|float32
call_5901 = func_2393_call(relay.reshape(const_5902.astype('float32'), [10, 9, 10]))
call_5903 = func_2393_call(relay.reshape(const_5902.astype('float32'), [10, 9, 10]))
output = relay.Tuple([call_5846,call_5882,call_5901,const_5902,])
output2 = relay.Tuple([call_5847,call_5883,call_5903,const_5902,])
func_5939 = relay.Function([], output)
mod['func_5939'] = func_5939
mod = relay.transform.InferType()(mod)
mutated_mod['func_5939'] = func_5939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5939_call = mutated_mod.get_global_var('func_5939')
call_5940 = func_5939_call()
output = call_5940
func_5941 = relay.Function([], output)
mutated_mod['func_5941'] = func_5941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6010 = relay.var("var_6010", dtype = "float64", shape = (5, 14, 9))#candidate|6010|(5, 14, 9)|var|float64
uop_6011 = relay.log2(var_6010.astype('float64')) # shape=(5, 14, 9)
func_3321_call = mod.get_global_var('func_3321')
func_3324_call = mutated_mod.get_global_var('func_3324')
var_6019 = relay.var("var_6019", dtype = "bool", shape = (600, 2))#candidate|6019|(600, 2)|var|bool
call_6018 = relay.TupleGetItem(func_3321_call(relay.reshape(var_6019.astype('bool'), [10, 12, 10])), 0)
call_6020 = relay.TupleGetItem(func_3324_call(relay.reshape(var_6019.astype('bool'), [10, 12, 10])), 0)
bop_6025 = relay.multiply(call_6018.astype('int64'), relay.reshape(var_6019.astype('int64'), relay.shape_of(call_6018))) # shape=(10, 12, 10)
bop_6028 = relay.multiply(call_6020.astype('int64'), relay.reshape(var_6019.astype('int64'), relay.shape_of(call_6020))) # shape=(10, 12, 10)
var_6045 = relay.var("var_6045", dtype = "float64", shape = (5, 14, 9))#candidate|6045|(5, 14, 9)|var|float64
bop_6046 = relay.logical_and(var_6010.astype('bool'), relay.reshape(var_6045.astype('bool'), relay.shape_of(var_6010))) # shape=(5, 14, 9)
output = relay.Tuple([uop_6011,bop_6025,bop_6046,])
output2 = relay.Tuple([uop_6011,bop_6028,bop_6046,])
func_6052 = relay.Function([var_6010,var_6019,var_6045,], output)
mod['func_6052'] = func_6052
mod = relay.transform.InferType()(mod)
var_6053 = relay.var("var_6053", dtype = "float64", shape = (5, 14, 9))#candidate|6053|(5, 14, 9)|var|float64
var_6054 = relay.var("var_6054", dtype = "bool", shape = (600, 2))#candidate|6054|(600, 2)|var|bool
var_6055 = relay.var("var_6055", dtype = "float64", shape = (5, 14, 9))#candidate|6055|(5, 14, 9)|var|float64
output = func_6052(var_6053,var_6054,var_6055,)
func_6056 = relay.Function([var_6053,var_6054,var_6055,], output)
mutated_mod['func_6056'] = func_6056
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6067 = relay.var("var_6067", dtype = "float64", shape = (6, 2, 11))#candidate|6067|(6, 2, 11)|var|float64
uop_6068 = relay.tan(var_6067.astype('float64')) # shape=(6, 2, 11)
output = relay.Tuple([uop_6068,])
output2 = relay.Tuple([uop_6068,])
func_6074 = relay.Function([var_6067,], output)
mod['func_6074'] = func_6074
mod = relay.transform.InferType()(mod)
mutated_mod['func_6074'] = func_6074
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6075 = relay.var("var_6075", dtype = "float64", shape = (6, 2, 11))#candidate|6075|(6, 2, 11)|var|float64
func_6074_call = mutated_mod.get_global_var('func_6074')
call_6076 = func_6074_call(var_6075)
output = call_6076
func_6077 = relay.Function([var_6075], output)
mutated_mod['func_6077'] = func_6077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4922_call = mod.get_global_var('func_4922')
func_4923_call = mutated_mod.get_global_var('func_4923')
call_6086 = func_4922_call()
call_6087 = func_4922_call()
uop_6100 = relay.log(call_6086.astype('float32')) # shape=(3, 9, 6)
uop_6102 = relay.log(call_6087.astype('float32')) # shape=(3, 9, 6)
func_5214_call = mod.get_global_var('func_5214')
func_5216_call = mutated_mod.get_global_var('func_5216')
call_6103 = relay.TupleGetItem(func_5214_call(), 0)
call_6104 = relay.TupleGetItem(func_5216_call(), 0)
output = relay.Tuple([uop_6100,call_6103,])
output2 = relay.Tuple([uop_6102,call_6104,])
func_6110 = relay.Function([], output)
mod['func_6110'] = func_6110
mod = relay.transform.InferType()(mod)
output = func_6110()
func_6111 = relay.Function([], output)
mutated_mod['func_6111'] = func_6111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mod.get_global_var('func_4694')
func_4695_call = mutated_mod.get_global_var('func_4695')
call_6153 = func_4694_call()
call_6154 = func_4694_call()
func_2197_call = mod.get_global_var('func_2197')
func_2198_call = mutated_mod.get_global_var('func_2198')
call_6156 = func_2197_call()
call_6157 = func_2197_call()
func_6052_call = mod.get_global_var('func_6052')
func_6056_call = mutated_mod.get_global_var('func_6056')
var_6160 = relay.var("var_6160", dtype = "float64", shape = (630,))#candidate|6160|(630,)|var|float64
const_6161 = relay.const([True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,False,True,True,False,False,False,True,True,True,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True], dtype = "bool")#candidate|6161|(1200,)|const|bool
call_6159 = relay.TupleGetItem(func_6052_call(relay.reshape(var_6160.astype('float64'), [5, 14, 9]), relay.reshape(const_6161.astype('bool'), [600, 2]), relay.reshape(var_6160.astype('float64'), [5, 14, 9]), ), 2)
call_6162 = relay.TupleGetItem(func_6056_call(relay.reshape(var_6160.astype('float64'), [5, 14, 9]), relay.reshape(const_6161.astype('bool'), [600, 2]), relay.reshape(var_6160.astype('float64'), [5, 14, 9]), ), 2)
output = relay.Tuple([call_6153,call_6156,call_6159,var_6160,const_6161,])
output2 = relay.Tuple([call_6154,call_6157,call_6162,var_6160,const_6161,])
func_6177 = relay.Function([var_6160,], output)
mod['func_6177'] = func_6177
mod = relay.transform.InferType()(mod)
var_6178 = relay.var("var_6178", dtype = "float64", shape = (630,))#candidate|6178|(630,)|var|float64
output = func_6177(var_6178)
func_6179 = relay.Function([var_6178], output)
mutated_mod['func_6179'] = func_6179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_611_call = mod.get_global_var('func_611')
func_612_call = mutated_mod.get_global_var('func_612')
call_6181 = relay.TupleGetItem(func_611_call(), 1)
call_6182 = relay.TupleGetItem(func_612_call(), 1)
func_6052_call = mod.get_global_var('func_6052')
func_6056_call = mutated_mod.get_global_var('func_6056')
const_6185 = relay.const([[4.610065,-2.613279,-1.797950],[3.861593,-5.246430,-4.425779],[6.305908,7.979911,-6.483669],[-6.833700,3.850049,2.741096],[-0.402231,5.943067,-8.156669],[-9.608245,-7.511177,-8.103132],[1.291804,-5.263619,9.631766],[7.958486,-2.542103,1.423419],[-2.845304,2.440212,3.408204],[-7.747008,-2.910610,3.437652],[-9.903491,-6.601694,-8.322911],[2.994261,-2.163024,6.901586],[-7.882079,-8.391743,8.217743],[-1.710142,-0.404545,3.628655],[-0.315328,2.086318,-6.048273],[-0.725966,-5.377517,1.883022],[2.170740,-0.124120,8.878165],[4.327984,9.437181,-6.647453],[8.228273,-1.059472,1.704353],[-9.955750,6.171284,-0.765536],[-2.734410,-5.503595,7.915968],[9.461304,-4.818446,-8.915184],[0.364949,-7.025060,-3.370027],[-0.020647,1.385521,5.882134],[-1.792062,-3.892450,4.460574],[6.665646,3.409540,-6.605681],[-2.987438,8.557957,-9.345429],[-8.955390,2.402887,-9.838458],[9.604539,-1.080137,6.978816],[0.210981,6.844730,-1.698895],[-5.417648,-5.689412,4.039379],[-9.029961,-8.030355,2.774262],[-4.146273,-9.293136,-4.771912],[1.899509,6.300142,-1.918322],[7.484169,6.240075,2.624939],[3.659765,4.543044,-0.403754],[-5.844233,-5.689058,-5.735148],[3.788217,7.162533,8.428453],[-0.023556,-4.486134,-1.687535],[2.214432,-3.901134,-2.535686],[-5.966409,-7.151696,9.931679],[-2.131778,3.777385,-6.037035],[-2.900935,-9.147575,6.828972],[1.441161,-1.212722,-9.598312],[-6.553311,-0.179324,-6.915040],[4.824312,-7.698470,-8.750611],[-2.763667,-8.576269,-8.763493],[0.674581,-9.634232,-7.792607],[2.761566,-7.001369,5.074701],[-4.156593,-9.591237,9.539120],[3.619802,1.401645,-8.635349],[2.207275,-9.399444,-4.304241],[-3.308433,-7.763174,-3.100553],[7.034252,-2.364725,9.198583],[-4.561855,-6.201713,8.611634],[6.010053,-7.227336,-9.076309],[-3.398108,4.102650,0.349781],[6.265182,7.721306,2.800987],[4.165616,-2.885198,-3.392875],[8.225725,6.091472,6.503905],[4.730765,-3.440459,0.391149],[-9.997207,-6.688154,-6.119155],[-8.098683,-1.992883,4.969610],[6.073461,-1.357264,8.727631],[5.861494,4.927232,-1.429560],[6.214610,8.119964,6.508822],[3.159385,-8.342089,7.393935],[5.322658,3.761018,7.458118],[3.701490,7.067834,-9.736802],[-3.864224,5.540011,1.296781],[-6.316710,-4.201525,-5.691445],[-2.945012,8.964786,0.038427],[-1.965915,-4.082084,-3.264879],[-2.130216,-9.083240,5.692134],[-9.620319,9.355187,3.186160],[0.493560,7.944086,1.590774],[5.238546,8.645506,0.822089],[9.032177,-6.032449,5.975776],[-9.587518,-5.048593,4.716043],[2.603568,-9.475106,8.365901],[5.532431,0.392033,-9.132850],[-4.633886,7.221712,5.918436],[8.205518,-4.540512,-1.431114],[-8.200190,3.754562,-1.428040],[9.454764,9.830868,-7.622916],[5.532024,3.438662,-1.949183],[-2.424170,-9.491994,1.724788],[-3.871845,-3.488521,-6.325235],[-3.453499,0.555517,8.215022],[-9.944197,-2.874796,-3.219809],[-2.023301,-3.730370,4.786691],[-4.831494,-2.211237,5.724722],[-3.323969,-0.374128,-2.706254],[4.859733,3.527948,-2.350263],[-3.872929,8.805826,-5.690699],[7.666142,-8.888590,3.644842],[8.462458,2.760373,-1.972337],[2.203040,-0.231322,8.861188],[-2.613215,2.924552,-8.065894],[-3.046145,-1.788404,4.262068],[-2.082946,5.148989,-5.613749],[-9.754870,-0.638440,2.891602],[-8.694704,7.023272,-0.943132],[5.296637,-3.102285,4.830777],[-8.257031,0.484755,9.564948],[-4.440925,-3.298433,-1.180387],[-2.101234,-4.268807,-6.557268],[8.868488,-6.593457,4.430666],[2.586342,1.152576,8.884860],[-4.236854,-0.481396,-1.943630],[-0.963369,4.326393,8.892216],[-8.021276,-4.947067,-5.547575],[-7.546785,4.949561,3.110731],[-2.254368,8.546013,-2.807423],[-5.515170,6.890873,-0.706206],[-4.343169,-4.735704,0.874362],[-6.595906,9.308931,-3.190010],[3.727359,4.702610,4.780581],[-8.497718,0.798446,4.198268],[-3.820257,1.674679,5.016223],[-3.270545,-1.743743,5.205990],[-7.425185,2.634605,3.057685],[0.596309,1.061504,8.278531],[6.322156,-0.953862,-1.577942],[-7.196052,4.455654,-0.375735],[-1.037977,-7.618124,4.999012],[-3.920083,4.228429,1.869674],[-7.781560,-4.241601,9.191534],[-3.612235,5.588057,9.545097],[2.098862,-9.508789,6.499860],[2.898480,1.606799,1.444582],[5.874949,-1.305396,2.709297],[1.547025,6.201969,5.541206],[-9.520843,4.570311,-1.186431],[1.785738,4.212432,-4.294594],[-5.012646,-9.689903,-4.566460],[-1.304709,0.347226,-8.109791],[-6.070348,-5.683238,5.178830],[-7.544797,-9.454776,3.081069],[-3.881402,-1.554716,6.424306],[0.537209,-6.038050,8.588774],[0.578822,-3.942301,7.980775],[1.097757,5.446567,2.175233],[-3.256691,-4.840236,7.720160],[3.733211,-7.958048,3.746582],[4.635211,9.888109,-2.786956],[-1.504379,-9.288983,0.752385],[6.490586,5.870083,-5.618738],[-0.484500,-7.326881,2.280468],[-0.978285,0.762578,-1.861597],[-1.981160,1.726218,2.292331],[5.053862,4.527101,0.624979],[7.513987,-5.369717,6.649875],[6.883550,1.117384,-5.939324],[2.904658,0.596698,0.298606],[-7.853518,4.913773,0.789914],[5.747384,-0.028387,-6.282556],[0.417829,9.195102,-9.761371],[6.389798,-4.806270,2.600637],[1.870057,3.428106,9.110119],[0.884758,0.965698,-8.706531],[4.308356,8.783186,-9.261479],[1.689764,9.566235,7.270079],[9.000503,8.822480,3.050946],[-2.872480,3.380188,-7.741816],[-4.721571,-4.732901,-5.608369],[-3.453413,7.153297,-8.303246],[6.944977,8.158791,-7.485109],[-8.773576,6.969196,7.889514],[-0.179090,-3.966376,9.984886],[0.106479,-7.199742,8.822855],[-8.531483,-3.663775,6.723334],[5.393128,8.782856,5.623361],[-1.461708,1.501629,9.700194],[-4.578951,9.455509,-9.413699],[6.902666,-0.253242,5.563392],[7.155615,-9.026160,9.024890],[-9.585180,-5.740285,-0.377889],[0.571246,-4.093326,-2.851342],[7.383431,2.885329,9.937356],[4.970123,6.762166,-7.123317],[-4.795388,-8.869759,-3.532595],[-6.197612,5.298986,-8.056841],[3.396477,-3.988247,-0.579919],[3.014553,9.394862,-8.225290],[-6.061582,-1.288889,-4.737249],[6.313833,-0.547750,0.409117],[0.319358,8.215691,-2.641516],[-1.428838,2.903040,1.106989],[-0.036863,7.243406,-1.671391],[-3.060279,3.422962,-2.060796],[-5.121916,-6.897584,-1.002946],[7.509591,-8.924863,-8.141461],[-3.300084,-6.717920,7.993308],[8.746145,-1.266394,2.768443],[7.691736,-5.091338,-8.092512],[-3.796771,-5.796239,7.866244],[-2.301619,-8.497093,3.492667],[5.369837,-3.749660,7.670007],[-6.933603,6.547690,4.882401],[3.443522,-2.402978,-2.437657],[-4.323444,0.866629,8.340581],[2.486293,7.055947,-9.607302],[-6.757063,-6.187867,6.309947],[-5.261203,9.185688,1.186724],[8.789970,6.731341,-6.553370],[-3.248413,-5.829645,2.495739],[6.944374,3.683805,-9.528191],[4.772179,9.187072,6.072745],[-5.329131,-0.580806,3.567033]], dtype = "float64")#candidate|6185|(210, 3)|const|float64
var_6186 = relay.var("var_6186", dtype = "bool", shape = (1200,))#candidate|6186|(1200,)|var|bool
call_6184 = relay.TupleGetItem(func_6052_call(relay.reshape(const_6185.astype('float64'), [5, 14, 9]), relay.reshape(var_6186.astype('bool'), [600, 2]), relay.reshape(const_6185.astype('float64'), [5, 14, 9]), ), 1)
call_6187 = relay.TupleGetItem(func_6056_call(relay.reshape(const_6185.astype('float64'), [5, 14, 9]), relay.reshape(var_6186.astype('bool'), [600, 2]), relay.reshape(const_6185.astype('float64'), [5, 14, 9]), ), 1)
output = relay.Tuple([call_6181,call_6184,const_6185,var_6186,])
output2 = relay.Tuple([call_6182,call_6187,const_6185,var_6186,])
func_6194 = relay.Function([var_6186,], output)
mod['func_6194'] = func_6194
mod = relay.transform.InferType()(mod)
mutated_mod['func_6194'] = func_6194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6195 = relay.var("var_6195", dtype = "bool", shape = (1200,))#candidate|6195|(1200,)|var|bool
func_6194_call = mutated_mod.get_global_var('func_6194')
call_6196 = func_6194_call(var_6195)
output = call_6196
func_6197 = relay.Function([var_6195], output)
mutated_mod['func_6197'] = func_6197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3015_call = mod.get_global_var('func_3015')
func_3017_call = mutated_mod.get_global_var('func_3017')
call_6223 = relay.TupleGetItem(func_3015_call(), 0)
call_6224 = relay.TupleGetItem(func_3017_call(), 0)
output = relay.Tuple([call_6223,])
output2 = relay.Tuple([call_6224,])
func_6238 = relay.Function([], output)
mod['func_6238'] = func_6238
mod = relay.transform.InferType()(mod)
mutated_mod['func_6238'] = func_6238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6238_call = mutated_mod.get_global_var('func_6238')
call_6239 = func_6238_call()
output = call_6239
func_6240 = relay.Function([], output)
mutated_mod['func_6240'] = func_6240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mod.get_global_var('func_4393')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_6249 = relay.TupleGetItem(func_4393_call(), 0)
call_6250 = relay.TupleGetItem(func_4395_call(), 0)
output = call_6249
output2 = call_6250
func_6251 = relay.Function([], output)
mod['func_6251'] = func_6251
mod = relay.transform.InferType()(mod)
output = func_6251()
func_6252 = relay.Function([], output)
mutated_mod['func_6252'] = func_6252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_6267 = relay.TupleGetItem(func_966_call(), 0)
call_6268 = relay.TupleGetItem(func_968_call(), 0)
func_5171_call = mod.get_global_var('func_5171')
func_5172_call = mutated_mod.get_global_var('func_5172')
call_6269 = func_5171_call()
call_6270 = func_5171_call()
func_6194_call = mod.get_global_var('func_6194')
func_6197_call = mutated_mod.get_global_var('func_6197')
const_6286 = relay.const([[True,True,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,True,False,False],[True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True],[True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,True,False,True,True],[True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False],[True,True,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,False,False],[False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True],[True,True,True,False,False,True,True,False,True,True,False,False,True,False,False,True,True,False,False,False],[True,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True],[True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True],[True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,False],[False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,False,False,False,True,True],[True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,True,False,False,True,False],[False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True],[True,False,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,True],[False,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True],[False,True,False,True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,True],[False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True],[True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,True],[False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,False],[False,False,True,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,False,False],[True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True],[False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,False],[True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,True,False,False,True,False],[False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True],[False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,True,True,True],[True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True],[True,False,True,True,False,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True],[False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,False],[False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True],[False,False,True,True,False,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True],[False,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False],[False,True,True,False,False,False,False,True,True,False,True,False,False,True,True,False,False,True,False,True],[True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,True,True,False,False,False],[False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,True,True,True],[True,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True],[False,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,False],[True,False,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,True,True],[False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,True,True,True],[True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True],[True,False,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True],[True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True],[False,False,False,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,True],[True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,True,False],[True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False,True,True],[False,False,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True],[True,True,False,False,False,False,False,False,False,True,True,False,False,True,False,True,True,False,True,False],[True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,False,False,False,False],[False,False,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True],[False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,False,True,False],[True,False,True,True,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True],[True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True],[False,False,False,False,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,True],[False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False],[False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True],[True,True,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False],[False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True],[True,False,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,True,False],[True,False,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False],[True,False,True,True,True,False,False,False,False,True,False,False,True,True,True,False,False,False,True,False],[False,False,True,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,False,False]], dtype = "bool")#candidate|6286|(60, 20)|const|bool
call_6285 = relay.TupleGetItem(func_6194_call(relay.reshape(const_6286.astype('bool'), [1200,])), 1)
call_6287 = relay.TupleGetItem(func_6197_call(relay.reshape(const_6286.astype('bool'), [1200,])), 1)
func_4652_call = mod.get_global_var('func_4652')
func_4654_call = mutated_mod.get_global_var('func_4654')
call_6290 = relay.TupleGetItem(func_4652_call(), 0)
call_6291 = relay.TupleGetItem(func_4654_call(), 0)
output = relay.Tuple([call_6267,call_6269,call_6285,const_6286,call_6290,])
output2 = relay.Tuple([call_6268,call_6270,call_6287,const_6286,call_6291,])
func_6293 = relay.Function([], output)
mod['func_6293'] = func_6293
mod = relay.transform.InferType()(mod)
mutated_mod['func_6293'] = func_6293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6293_call = mutated_mod.get_global_var('func_6293')
call_6294 = func_6293_call()
output = call_6294
func_6295 = relay.Function([], output)
mutated_mod['func_6295'] = func_6295
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6349 = relay.var("var_6349", dtype = "int32", shape = (4, 9, 13))#candidate|6349|(4, 9, 13)|var|int32
var_6350 = relay.var("var_6350", dtype = "int32", shape = (4, 9, 13))#candidate|6350|(4, 9, 13)|var|int32
bop_6351 = relay.bitwise_xor(var_6349.astype('int32'), relay.reshape(var_6350.astype('int32'), relay.shape_of(var_6349))) # shape=(4, 9, 13)
func_966_call = mod.get_global_var('func_966')
func_968_call = mutated_mod.get_global_var('func_968')
call_6354 = relay.TupleGetItem(func_966_call(), 0)
call_6355 = relay.TupleGetItem(func_968_call(), 0)
bop_6382 = relay.maximum(var_6350.astype('int16'), relay.reshape(var_6349.astype('int16'), relay.shape_of(var_6350))) # shape=(4, 9, 13)
uop_6385 = relay.sin(bop_6382.astype('float64')) # shape=(4, 9, 13)
func_2292_call = mod.get_global_var('func_2292')
func_2294_call = mutated_mod.get_global_var('func_2294')
var_6398 = relay.var("var_6398", dtype = "float64", shape = (48,))#candidate|6398|(48,)|var|float64
call_6397 = relay.TupleGetItem(func_2292_call(relay.reshape(var_6398.astype('float64'), [48,])), 5)
call_6399 = relay.TupleGetItem(func_2294_call(relay.reshape(var_6398.astype('float64'), [48,])), 5)
uop_6402 = relay.tan(uop_6385.astype('float32')) # shape=(4, 9, 13)
output = relay.Tuple([bop_6351,call_6354,call_6397,var_6398,uop_6402,])
output2 = relay.Tuple([bop_6351,call_6355,call_6399,var_6398,uop_6402,])
func_6406 = relay.Function([var_6349,var_6350,var_6398,], output)
mod['func_6406'] = func_6406
mod = relay.transform.InferType()(mod)
var_6407 = relay.var("var_6407", dtype = "int32", shape = (4, 9, 13))#candidate|6407|(4, 9, 13)|var|int32
var_6408 = relay.var("var_6408", dtype = "int32", shape = (4, 9, 13))#candidate|6408|(4, 9, 13)|var|int32
var_6409 = relay.var("var_6409", dtype = "float64", shape = (48,))#candidate|6409|(48,)|var|float64
output = func_6406(var_6407,var_6408,var_6409,)
func_6410 = relay.Function([var_6407,var_6408,var_6409,], output)
mutated_mod['func_6410'] = func_6410
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6420 = relay.var("var_6420", dtype = "float32", shape = (10, 4))#candidate|6420|(10, 4)|var|float32
uop_6421 = relay.asin(var_6420.astype('float32')) # shape=(10, 4)
func_1638_call = mod.get_global_var('func_1638')
func_1642_call = mutated_mod.get_global_var('func_1642')
var_6428 = relay.var("var_6428", dtype = "uint16", shape = ())#candidate|6428|()|var|uint16
const_6429 = relay.const([[6],[2],[-4],[9],[2],[1],[7],[10],[-3],[5],[-8],[-8],[-8],[8],[10],[7],[-3],[-2],[-3],[-5],[10],[-8],[-6],[-2],[-1],[-2],[-5],[9],[-3],[9],[10],[-9],[-4],[-9],[1],[3],[10],[8],[-4],[-2],[9],[-7],[4],[10],[-2],[1],[7],[-4],[-1],[2],[-7],[-5],[8],[2],[8],[-8],[-7],[5],[-10],[9],[6],[-3],[-9],[5],[-10],[-4],[-2],[5],[-4],[4],[8],[-1],[7],[-8],[-9],[-9],[6],[9],[7],[-5],[-1],[-5],[8],[4],[4],[6],[-8],[-10],[-10],[-1],[5],[5],[10],[-5],[10],[-5],[1],[-5],[-9],[-2],[5],[-6],[2],[-9],[4],[1],[-2],[9],[2],[2],[-7],[2],[-8],[-6],[-6],[-1],[-6],[-5],[4],[-1],[7],[-8],[-2],[-2],[4],[-6],[-2],[9],[-7],[-6],[-5],[5],[5],[2],[-5],[-10],[6],[-3],[6],[3],[-9],[2],[-1],[-1],[8],[-3],[-6],[4],[8],[3],[-8],[-8],[-10],[5],[6],[9],[-8],[9],[2],[8],[-9],[4],[-9],[7],[4],[-3],[-10],[9],[1],[9],[1],[-7],[8],[10],[7],[-1],[1],[2],[-4],[7],[8],[10],[-2],[9],[2],[-3],[5],[-4],[5],[3],[4],[-10],[9],[-4],[10],[1],[-3],[5],[10],[9],[5],[7],[-1],[3],[6],[9],[1],[-4],[-1],[5],[2],[-9],[-7],[-2],[-2],[10],[-4],[-7],[1],[2],[7],[-7],[3],[3],[2],[5],[-4],[-10],[-1],[-9],[-5],[10],[8],[-6]], dtype = "uint16")#candidate|6429|(234, 1)|const|uint16
call_6427 = relay.TupleGetItem(func_1638_call(relay.reshape(var_6428.astype('uint16'), []), relay.reshape(const_6429.astype('uint16'), [13, 3, 6]), ), 2)
call_6430 = relay.TupleGetItem(func_1642_call(relay.reshape(var_6428.astype('uint16'), []), relay.reshape(const_6429.astype('uint16'), [13, 3, 6]), ), 2)
output = relay.Tuple([uop_6421,call_6427,var_6428,const_6429,])
output2 = relay.Tuple([uop_6421,call_6430,var_6428,const_6429,])
func_6437 = relay.Function([var_6420,var_6428,], output)
mod['func_6437'] = func_6437
mod = relay.transform.InferType()(mod)
mutated_mod['func_6437'] = func_6437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6437_call = mutated_mod.get_global_var('func_6437')
var_6439 = relay.var("var_6439", dtype = "float32", shape = (10, 4))#candidate|6439|(10, 4)|var|float32
var_6440 = relay.var("var_6440", dtype = "uint16", shape = ())#candidate|6440|()|var|uint16
call_6438 = func_6437_call(var_6439,var_6440,)
output = call_6438
func_6441 = relay.Function([var_6439,var_6440,], output)
mutated_mod['func_6441'] = func_6441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1365_call = mod.get_global_var('func_1365')
func_1366_call = mutated_mod.get_global_var('func_1366')
call_6483 = relay.TupleGetItem(func_1365_call(), 2)
call_6484 = relay.TupleGetItem(func_1366_call(), 2)
const_6512 = relay.const([2.495120,3.025368,0.093691,1.179351,0.179456,0.897434,3.743230,9.652685,2.927435,3.570322,-8.598605,-5.701602,9.599398,-1.637387,-2.851114,2.801048,-0.515105,9.613885,9.609479,5.554439,0.162195,-0.806913,5.604217,8.154677,-8.073714,8.419856,9.888040,5.275800,0.685845,4.550710,6.719912,-4.146076,-3.176152,3.312623,-6.233498,-9.744927,5.629331,-2.801751,-6.781055,-3.616442,-0.927690,5.791116,5.758643,-6.498580,-2.737555,-4.367762,-9.642292,9.461669,-0.199187,-1.187964,6.297562,-1.991677,1.343676,-6.032041,-9.531313,1.310048,-7.241183,-0.679216,8.059997,-0.997458,0.769506,0.128814,7.643282,-0.953478,8.955505,-7.117223,3.632500,7.245609,6.854267,-6.663822,-9.401780,-2.900496,-6.255859,-5.177347,5.886091,1.487154,6.309871,-0.750492,0.196962,-3.816805,4.283420,7.899587,7.409673,-1.958675,-6.702297,1.415901,-6.548263,0.594036,-3.611598,-2.620948,0.646083,-5.069269,-1.446439,5.366413,1.669269,-4.766502,7.840045,5.688226,-6.597226,0.905340,-6.164416,-4.406825,2.683752,7.957912,8.521412,6.712573,6.174712,-2.526819,2.038559,8.315817,9.178446,3.140447,-8.025324,-4.547644,-9.872487,4.609439,-9.327168,8.584327,-3.030724,3.905644,-6.639933,-8.269529,4.224885,6.243236,-0.105388,6.739683,-1.522115,-2.326600,-5.057745,-8.165137,5.718547,9.467704,2.177971,5.857994,-3.781898,7.436237,9.362722,-5.632795,-5.077353,7.121849,6.525866,4.158702,-5.601068,-3.970837,-2.019332,5.183969,-7.354182,8.877958,-6.484090,1.220806,7.685825,3.392886,-3.720892,0.760951,-7.974284,-2.888930,-5.590666,2.568561,5.266567,3.337534,-5.832183,2.380334,7.744584,-4.766825,0.770201,-6.934318,0.887345,-2.758683,-8.619133,-5.012847,-0.146133,-6.405170,-2.329979,6.758114,8.920436,3.583452,-0.890263,-4.258754,0.697828,6.727223,5.357868,-9.498864,3.351473,-1.965237,-9.931724,-0.705538,7.258109,7.834535,2.091317,-8.531661,6.243451,-0.623733,-6.700126,-9.428764,-3.525522,2.107945,3.899342,-5.373036,-2.469389,-7.334105,3.065155,4.762430,2.446855,0.599403,-7.980365,7.972832,6.621690,2.844669,7.984895,-8.789991,5.474926,2.155476,8.576338,2.203640,-6.713975,-0.831323,4.034932,6.620274,8.092989,0.129712,-1.860403,1.544076,-2.343622,3.291831,-8.252063,9.330018,2.652254,8.541988,-0.343937,-5.482050,-6.467308,8.804111,1.954469,3.071622,7.794013,-7.401225,9.190814,0.483706,-2.747655,7.087055,-4.528852,-0.127489,3.492288,-0.355100,-4.797589,8.629939,-7.009478,-3.027540,9.047656,-9.672388,-3.990612,-9.757407,-2.397922,-5.998554,-2.313465,-4.429204,-8.283328,0.255573,-2.728260,-9.724631,-5.637836,1.942177,-2.142997,-7.394385,8.371398,-3.658263,1.504896,-6.553884,-8.345643,-1.362410,-1.155486,-8.158282,5.729978,4.782708,2.475761,5.895603,5.193672,-1.016754,-2.151232,5.166749,0.253355,-0.440153,-0.010325,7.821446,0.773182,4.145438,-7.702765,-2.846258,8.082747,8.023390,6.633911,3.179005,9.096831,-5.021928,-7.844111,-4.963086,0.497174,0.971203,6.576657,7.889902,-7.098573,-8.802483,-3.861692,8.968775,-3.751622,-2.542559,2.356890,-0.412028,-1.132620,-7.185042,-8.210252,-0.613687,7.706644,3.532608,-1.434134,4.823239,-3.331665,9.500613,6.698104,-0.322044,6.760713,0.987595,-7.994492,-1.939409,5.696615,-1.482557,2.233608,0.645909,-5.186548,2.685455,6.129255,8.108043,-9.210674,-0.213526,9.125335,-8.656498,-7.034916,8.902294,2.542935,2.167997,3.070956,9.104954,-0.173492,8.678922,6.962004,-0.826492,-9.950168,-5.250038,-4.989700,-4.977826,-6.451754,5.448357,-6.318007,8.027233,-3.700862,-9.470060,-0.441910,-0.358532,3.916174,2.240655,-9.821142,1.114697,-7.019857,5.026009,7.086369,-0.424432,-5.889397,-4.579011,7.948368,7.985304,-2.921013,3.249654,0.845435,4.928588,5.941512,9.658542,-9.103833,-0.801148,8.994469,-1.762055,5.958124,-5.127146,-6.977560,6.676342,-0.490816,9.765295,-3.811068,-0.764680,-8.255208,-3.210327,-2.052047,1.461948,4.678759,2.474390,5.378051,3.690168,3.549822,9.823350,-6.519528,9.682800,7.378764,4.682294,5.585295,0.139724,7.225186,9.180705,2.730690,9.566924,5.912705,4.200217,-0.206883,2.588631,-5.439462,8.813294,3.396820,-6.495394,2.769482,8.136594,9.633992,-2.283941,-3.008510,-6.051625,-3.454232,-3.885075,8.160061,-5.540621,-1.727884,3.532453,-0.434657,7.014078,4.836461,-5.089610,2.053452,4.963206,-9.092005,-1.651702,4.578548,8.399214,-0.029825,8.743588,3.935514,7.373258,-5.506652,4.070475,0.070095,-5.616736,-5.362863,0.497405,-6.908393,-1.756854,-3.243847,-7.315581,4.395246,0.482273,1.833254,8.217376,-2.804106,6.470781,6.568890,-2.114639,8.642887,3.357869,3.648274,-7.697043,2.845103,4.753219,2.391249,-9.053440,8.902675,-1.966304,-9.866281,0.048003,-1.875309,4.518479,7.850154,-1.511201,1.653444,-4.297203,-9.518518,-5.949965,8.432478,9.692060,9.750168,-0.090802,4.432462,-6.731868,-5.080542,-6.796841,-3.924721,1.283821,8.462942,-8.452420,0.971773,-5.078145,8.910847,-2.546536,-0.470495,8.817861,3.618117,-1.723876,-3.716915,-5.772507,-5.555076,0.033421,2.675501,3.921382,-9.411545,4.514109,-9.500848,4.623219,-3.473633,3.844332,8.096861,5.740831,-3.712268,6.567689,-1.582085,4.174831,0.410070,3.327870,8.630998,7.613665,-3.580662,-0.715515,-7.043653,9.708677,0.242988,5.889573,6.546527,9.147949,-2.877551,9.436686,-3.978560,-9.203643,6.936306,-9.929464,-7.794254,0.370685,-1.904732,3.218369,2.073165,-0.561944,1.367185,-4.591691,-5.749827,-5.477802,-4.654382,5.193421,8.418437,-1.861472,8.217397,0.495400,8.255690,-4.404846,-8.023138,-1.641113,-5.500468,-5.382446,5.331731,8.238919,-5.158096,-3.217569,6.706140,-4.602122,7.222151,5.540479,6.242575,-9.757071,6.902683,4.635525,9.627967,-7.705041,-0.967941,6.439168,0.715957,4.553425,3.633667,-8.028332,7.877592,3.823152,-0.833181,1.674635,5.032243,-0.937187,-0.384263,8.993034,7.139422,-0.275173,-9.122304,0.543023,-3.528269,-4.743286,2.128104,-6.771521,5.604921,8.689973,-6.082344,1.621469,2.729821,7.852710,4.206543,7.642878,-9.791750,-1.477550,0.170233,-8.532869,-8.329536,1.427539,3.997459,-0.322857,2.015752,-0.132361,-9.581687,-4.157466,1.346341,-4.155035,-5.388048,-2.125321,3.526610,1.560738,-8.327322,-1.685460,-9.022093,-7.116097,2.426883,-1.017256,6.697788,-5.167822,2.915356,6.261685,-7.648330,2.690318,5.680592,2.851208,5.190079,0.525964,-2.898207,-9.866149,-7.472943,4.914021,-4.086505,-0.524063,-9.390550,8.428457,5.504339,6.943331,-5.957372,-5.167812,-1.189012,-7.916639,0.772422,9.227589,6.066856,-2.755680,7.627969,3.627859,-6.912691,0.920943,9.184069,-4.217360], dtype = "float64")#candidate|6512|(660,)|const|float64
bop_6513 = relay.maximum(call_6483.astype('uint8'), relay.reshape(const_6512.astype('uint8'), relay.shape_of(call_6483))) # shape=(660,)
bop_6516 = relay.maximum(call_6484.astype('uint8'), relay.reshape(const_6512.astype('uint8'), relay.shape_of(call_6484))) # shape=(660,)
func_3769_call = mod.get_global_var('func_3769')
func_3772_call = mutated_mod.get_global_var('func_3772')
call_6521 = relay.TupleGetItem(func_3769_call(relay.reshape(bop_6513.astype('uint16'), [10, 66])), 1)
call_6522 = relay.TupleGetItem(func_3772_call(relay.reshape(bop_6513.astype('uint16'), [10, 66])), 1)
func_4220_call = mod.get_global_var('func_4220')
func_4222_call = mutated_mod.get_global_var('func_4222')
call_6523 = func_4220_call()
call_6524 = func_4220_call()
uop_6530 = relay.sigmoid(call_6521.astype('float32')) # shape=(10, 66)
uop_6532 = relay.sigmoid(call_6522.astype('float32')) # shape=(10, 66)
uop_6534 = relay.sqrt(uop_6530.astype('float32')) # shape=(10, 66)
uop_6536 = relay.sqrt(uop_6532.astype('float32')) # shape=(10, 66)
output = relay.Tuple([bop_6513,call_6523,uop_6534,])
output2 = relay.Tuple([bop_6516,call_6524,uop_6536,])
func_6542 = relay.Function([], output)
mod['func_6542'] = func_6542
mod = relay.transform.InferType()(mod)
mutated_mod['func_6542'] = func_6542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6542_call = mutated_mod.get_global_var('func_6542')
call_6543 = func_6542_call()
output = call_6543
func_6544 = relay.Function([], output)
mutated_mod['func_6544'] = func_6544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6560 = relay.var("var_6560", dtype = "float32", shape = (5, 1, 6))#candidate|6560|(5, 1, 6)|var|float32
const_6561 = relay.const([[[6.636981,-2.975238,1.898998,7.048036,6.796527,-0.088148],[-2.928671,4.010576,-6.208037,6.961066,9.579113,7.236112],[-0.430529,-9.321980,2.519899,-0.007073,5.203393,4.332870],[9.974931,2.837754,-2.402357,8.364134,-9.914963,-6.418068],[9.819860,-3.915137,-6.679748,-1.462593,6.911612,2.317092],[-9.515709,9.366513,-3.401546,4.601767,4.581639,6.220669],[-8.943842,-9.166323,8.561461,4.241930,3.340928,-0.930991],[-7.666065,-0.383332,6.787040,-3.399398,6.878417,0.361894],[-7.936931,7.160582,9.874363,-9.252824,-1.492295,0.119708],[2.178609,-9.832393,-6.926832,-5.843811,3.805921,-8.586129],[-7.331282,-4.122426,-2.815823,-3.048770,-7.738132,-9.415652],[-9.906877,2.607929,-7.973388,-7.450656,-2.210539,-9.991375],[6.907345,7.603887,7.833980,-0.731907,-2.186688,-3.906847],[-7.676297,9.679730,-1.588834,5.727635,-9.484316,4.517278],[4.067712,-4.147650,-6.051452,-6.935246,-6.146198,-4.768315]],[[-1.332933,8.238065,-4.002252,4.181452,-2.135517,8.312743],[0.647053,2.205111,-6.782803,-1.487981,5.460215,6.171348],[9.588123,2.711164,3.112651,5.747086,-9.169110,-0.209044],[-6.238875,-2.674655,-8.967903,-1.231876,-3.486396,-0.027160],[-6.940898,-0.197034,6.839442,-8.030554,6.436903,-1.079953],[4.865950,-3.272329,4.411130,-6.329166,2.185968,-5.879736],[0.071750,5.439627,2.813052,-8.267311,-4.742947,3.422751],[-2.429217,-1.512611,5.042858,-6.183698,-3.363410,5.249106],[8.870294,-2.569966,-2.609084,-3.223468,5.659351,4.452182],[9.577076,-8.422154,-8.793434,-9.531082,4.908053,-4.294850],[2.796468,-5.449566,-4.042513,5.879373,2.444250,-9.482812],[3.302079,2.379414,-9.937555,7.161267,-6.900667,3.142569],[8.831443,6.487143,-5.673559,0.075893,-3.672789,6.557174],[6.604225,-0.076828,-8.793383,-3.551288,-3.929106,-6.627265],[-1.549902,-8.067356,-3.033856,8.779818,3.554872,-3.391862]],[[3.803623,-4.412171,8.031870,-0.336814,-7.389857,-9.235967],[6.952257,-6.013198,-4.990461,-6.218881,-2.157179,-1.079782],[-6.936107,-8.173170,-6.486189,3.902014,0.978334,-3.686597],[9.901251,4.088947,2.189804,2.912221,1.673477,-9.206654],[-3.035378,-6.412933,-6.134876,3.955264,1.871138,-9.356732],[4.248906,4.873586,2.796786,8.180427,-3.705678,7.835435],[-3.722026,-6.698009,-9.558832,-6.695713,4.223134,-6.614447],[2.247650,-5.823382,5.981801,-6.827555,-1.855051,2.342644],[7.171941,-1.791065,-1.432164,-5.120158,-2.055491,-2.575399],[0.991827,-4.013225,3.869667,-9.597401,-5.946067,5.115100],[-9.849887,-0.805545,1.901483,-9.637756,0.112414,-7.706087],[-1.944619,-5.424033,1.475453,-7.289687,3.925854,2.393179],[4.072457,2.314606,-3.622496,6.240836,5.151923,0.477491],[-9.053819,1.551916,1.459688,6.606199,-2.420699,-9.946130],[-8.516015,0.365073,2.311451,-5.680440,-3.458129,4.411531]],[[0.343715,3.655908,-6.118209,5.170858,4.841609,-1.916836],[5.639441,-7.485637,-7.217716,5.420012,1.243263,-2.827229],[-1.708935,3.720931,0.612015,8.440368,-0.731357,3.176972],[-6.055135,9.224641,8.146853,-5.573483,2.692461,1.693728],[0.887176,-5.626805,6.384624,-8.916529,8.215144,-2.478087],[-3.130767,4.008157,9.091843,7.047958,-4.550235,3.464072],[5.294485,-2.550065,-5.552170,-5.765966,-7.846374,2.539793],[2.723013,5.787552,0.159647,7.290536,-5.116258,-8.365581],[0.498092,8.590231,-8.921033,-8.814478,-7.429257,-7.091130],[-3.797393,-1.618277,6.955801,-8.374256,8.378601,-7.853324],[9.002086,-9.823268,-0.914254,2.607613,8.376857,0.439962],[4.773171,4.706681,-2.745062,5.903429,-1.229783,-7.321259],[5.305968,-2.592590,-2.855275,1.316918,8.305127,6.196748],[4.180620,1.174274,1.933414,-4.610580,-7.319724,-8.436723],[-4.321418,5.910335,-9.155045,-9.565172,-9.118297,-3.324172]],[[1.562667,1.069325,-1.731775,0.029842,5.299149,-1.889221],[8.948608,-8.516965,-2.650277,2.972356,-1.094827,9.266360],[-5.903680,-0.997442,-0.217321,6.284484,-1.481709,-9.683966],[-4.471020,-9.501308,2.769570,-3.595058,-7.636767,-0.061966],[-6.452726,4.652124,9.562034,4.436300,-7.426158,-2.323418],[-9.736532,6.868345,-6.528602,0.437348,7.343753,6.029394],[-6.092702,1.462395,-8.755684,8.994378,9.591710,3.174704],[5.674427,-9.957053,-6.368236,1.956860,2.849187,4.994174],[-3.215299,-4.622357,2.496977,-9.080270,5.125432,-7.107433],[-8.126161,-5.906994,-7.520488,-0.028167,-1.889786,1.509591],[1.115551,-4.502105,7.240572,5.875214,-2.710782,5.548736],[1.523462,-0.556569,-6.389121,-3.043408,-1.201934,-8.373328],[-2.290655,0.381056,-2.798612,7.263063,0.683816,-4.904757],[8.902987,-2.153604,9.781049,2.758901,-4.991543,7.059044],[-0.076328,1.896436,4.310231,7.580636,-0.871372,-0.338543]]], dtype = "float32")#candidate|6561|(5, 15, 6)|const|float32
bop_6562 = relay.power(var_6560.astype('float32'), const_6561.astype('float32')) # shape=(5, 15, 6)
output = relay.Tuple([bop_6562,])
output2 = relay.Tuple([bop_6562,])
func_6566 = relay.Function([var_6560,], output)
mod['func_6566'] = func_6566
mod = relay.transform.InferType()(mod)
var_6567 = relay.var("var_6567", dtype = "float32", shape = (5, 1, 6))#candidate|6567|(5, 1, 6)|var|float32
output = func_6566(var_6567)
func_6568 = relay.Function([var_6567], output)
mutated_mod['func_6568'] = func_6568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6238_call = mod.get_global_var('func_6238')
func_6240_call = mutated_mod.get_global_var('func_6240')
call_6625 = relay.TupleGetItem(func_6238_call(), 0)
call_6626 = relay.TupleGetItem(func_6240_call(), 0)
output = call_6625
output2 = call_6626
func_6639 = relay.Function([], output)
mod['func_6639'] = func_6639
mod = relay.transform.InferType()(mod)
output = func_6639()
func_6640 = relay.Function([], output)
mutated_mod['func_6640'] = func_6640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mod.get_global_var('func_4393')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_6650 = relay.TupleGetItem(func_4393_call(), 0)
call_6651 = relay.TupleGetItem(func_4395_call(), 0)
output = relay.Tuple([call_6650,])
output2 = relay.Tuple([call_6651,])
func_6661 = relay.Function([], output)
mod['func_6661'] = func_6661
mod = relay.transform.InferType()(mod)
mutated_mod['func_6661'] = func_6661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6661_call = mutated_mod.get_global_var('func_6661')
call_6662 = func_6661_call()
output = call_6662
func_6663 = relay.Function([], output)
mutated_mod['func_6663'] = func_6663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5360_call = mod.get_global_var('func_5360')
func_5361_call = mutated_mod.get_global_var('func_5361')
call_6678 = relay.TupleGetItem(func_5360_call(), 0)
call_6679 = relay.TupleGetItem(func_5361_call(), 0)
func_3479_call = mod.get_global_var('func_3479')
func_3481_call = mutated_mod.get_global_var('func_3481')
const_6696 = relay.const([[-8.101954,8.199599],[0.286648,2.173979],[5.761092,-1.905838],[4.936031,5.142707],[-4.083590,8.014672],[0.105809,-9.358846],[-4.954864,-1.064171],[-0.936597,7.722159],[2.660157,-8.088843],[-2.164703,-0.945846],[-9.120737,1.212651],[4.800137,3.641270],[7.895388,1.830795],[-1.514509,5.117523],[8.897059,-0.910427],[1.249272,-9.877215],[-2.784323,7.362007],[-3.004700,-5.042229],[-6.404163,0.243261],[-4.626993,6.092844],[1.132750,-7.245137],[5.097022,-7.616674],[5.423345,-6.515232],[-2.953963,-3.604576],[-9.002216,8.108178],[4.030104,8.154294],[5.247565,-0.835131],[4.920272,-9.732681],[-5.966425,5.969313],[-2.456228,-0.732054],[-3.218804,-1.722043],[1.687864,5.295531],[-5.108854,-4.266865],[-0.314586,-2.266486],[-8.235101,-9.902762],[-8.121213,-8.563236],[2.549000,-4.483343],[3.787015,-6.225150],[-0.818563,-2.899663],[4.130664,5.121434],[8.866890,8.818491],[4.244044,0.329744],[-2.165505,6.315558],[-7.139006,9.301970],[1.614495,4.349690],[-5.230590,-0.928559],[-9.892702,-1.047025],[-7.852612,-2.163402],[-1.688366,-2.831046],[7.144950,4.947720],[7.799227,-7.494057],[2.518706,1.788867],[-7.209664,9.688236],[-3.863538,5.919123],[8.336282,-9.880963],[5.013101,4.831799],[7.352230,5.596289],[5.923066,-8.016715],[8.011363,0.253136],[6.744389,-8.718511],[0.258419,-5.674213],[8.229659,1.134939],[-5.538922,1.811378],[-4.524490,1.034534],[-2.011709,-5.504513],[8.754376,-6.798325],[0.188571,0.243223],[-7.463694,-9.254341],[-1.835523,-7.184863],[-2.448084,-8.198534],[3.713276,-2.471723],[-2.465193,6.103876],[-9.844020,-5.577325],[5.151537,4.391684],[-7.034069,5.722761],[-0.627249,1.796133],[-8.448679,-8.006666],[1.412184,4.363966],[-3.665277,-4.295730],[1.456221,5.093270],[1.476932,-5.322177],[-2.447774,7.077301],[-2.859678,-4.669933],[3.618673,1.996541],[5.347361,-1.497956],[-2.657311,2.628743],[-5.838829,3.616952],[-4.499116,5.177966],[8.088212,-0.532540],[0.851355,-7.706532],[-1.709011,-8.918504],[-7.163064,7.484518],[-3.838084,-0.718736],[-3.005725,9.834349],[4.335265,-2.115057],[-1.856132,2.768564],[3.104628,3.524434],[-9.601009,2.594833],[-1.312984,-7.744003],[2.636558,-6.517737],[7.723729,6.403155],[7.539097,-1.820141],[5.192547,-4.153117],[0.473796,9.087267],[7.147531,5.350223],[1.051543,-5.159464],[2.961403,-1.443832],[-1.520936,-3.599218],[-5.887061,1.711685],[-8.493794,-6.215812],[3.701716,8.446602],[7.174044,3.545064],[-5.302704,-1.975759],[8.062974,5.527578],[7.093834,-8.997477],[9.072788,4.513976],[-9.198931,3.628881],[6.155147,-1.448211],[-0.088490,5.849762],[0.338667,-4.723840]], dtype = "float64")#candidate|6696|(120, 2)|const|float64
call_6695 = func_3479_call(relay.reshape(const_6696.astype('float64'), [10, 4, 6]))
call_6697 = func_3479_call(relay.reshape(const_6696.astype('float64'), [10, 4, 6]))
uop_6699 = relay.atan(call_6695.astype('float32')) # shape=(10, 4, 6)
uop_6701 = relay.atan(call_6697.astype('float32')) # shape=(10, 4, 6)
output = relay.Tuple([call_6678,const_6696,uop_6699,])
output2 = relay.Tuple([call_6679,const_6696,uop_6701,])
func_6704 = relay.Function([], output)
mod['func_6704'] = func_6704
mod = relay.transform.InferType()(mod)
output = func_6704()
func_6705 = relay.Function([], output)
mutated_mod['func_6705'] = func_6705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6712 = relay.var("var_6712", dtype = "float32", shape = ())#candidate|6712|()|var|float32
const_6713 = relay.const([[[6.382912]],[[-9.315952]],[[2.008063]],[[-5.091718]],[[8.965616]],[[4.756264]],[[-4.462293]],[[-4.269433]],[[-2.548145]],[[2.236706]],[[2.485800]]], dtype = "float32")#candidate|6713|(11, 1, 1)|const|float32
bop_6714 = relay.greater_equal(var_6712.astype('bool'), const_6713.astype('bool')) # shape=(11, 1, 1)
bop_6718 = relay.mod(const_6713.astype('float64'), relay.reshape(bop_6714.astype('float64'), relay.shape_of(const_6713))) # shape=(11, 1, 1)
func_6110_call = mod.get_global_var('func_6110')
func_6111_call = mutated_mod.get_global_var('func_6111')
call_6723 = relay.TupleGetItem(func_6110_call(), 1)
call_6724 = relay.TupleGetItem(func_6111_call(), 1)
bop_6726 = relay.right_shift(bop_6714.astype('uint8'), relay.reshape(const_6713.astype('uint8'), relay.shape_of(bop_6714))) # shape=(11, 1, 1)
func_5498_call = mod.get_global_var('func_5498')
func_5502_call = mutated_mod.get_global_var('func_5502')
var_6738 = relay.var("var_6738", dtype = "float64", shape = (2400,))#candidate|6738|(2400,)|var|float64
call_6737 = relay.TupleGetItem(func_5498_call(relay.reshape(var_6738.astype('float64'), [2400,]), relay.reshape(var_6738.astype('float64'), [15, 10, 16]), ), 3)
call_6739 = relay.TupleGetItem(func_5502_call(relay.reshape(var_6738.astype('float64'), [2400,]), relay.reshape(var_6738.astype('float64'), [15, 10, 16]), ), 3)
bop_6741 = relay.bitwise_or(call_6737.astype('uint8'), const_6713.astype('uint8')) # shape=(11, 60, 12)
bop_6744 = relay.bitwise_or(call_6739.astype('uint8'), const_6713.astype('uint8')) # shape=(11, 60, 12)
var_6756 = relay.var("var_6756", dtype = "bool", shape = (11, 4, 6))#candidate|6756|(11, 4, 6)|var|bool
bop_6757 = relay.not_equal(bop_6714.astype('bool'), var_6756.astype('bool')) # shape=(11, 4, 6)
output = relay.Tuple([bop_6718,call_6723,bop_6726,var_6738,bop_6741,bop_6757,])
output2 = relay.Tuple([bop_6718,call_6724,bop_6726,var_6738,bop_6744,bop_6757,])
func_6760 = relay.Function([var_6712,var_6738,var_6756,], output)
mod['func_6760'] = func_6760
mod = relay.transform.InferType()(mod)
mutated_mod['func_6760'] = func_6760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6760_call = mutated_mod.get_global_var('func_6760')
var_6762 = relay.var("var_6762", dtype = "float32", shape = ())#candidate|6762|()|var|float32
var_6763 = relay.var("var_6763", dtype = "float64", shape = (2400,))#candidate|6763|(2400,)|var|float64
var_6764 = relay.var("var_6764", dtype = "bool", shape = (11, 4, 6))#candidate|6764|(11, 4, 6)|var|bool
call_6761 = func_6760_call(var_6762,var_6763,var_6764,)
output = call_6761
func_6765 = relay.Function([var_6762,var_6763,var_6764,], output)
mutated_mod['func_6765'] = func_6765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5131_call = mod.get_global_var('func_5131')
func_5132_call = mutated_mod.get_global_var('func_5132')
call_6782 = func_5131_call()
call_6783 = func_5131_call()
func_5417_call = mod.get_global_var('func_5417')
func_5419_call = mutated_mod.get_global_var('func_5419')
call_6797 = func_5417_call()
call_6798 = func_5417_call()
func_1162_call = mod.get_global_var('func_1162')
func_1164_call = mutated_mod.get_global_var('func_1164')
const_6808 = relay.const([-3.279244,7.564575,-1.747885,8.596234,8.211621,4.210065,3.618733,-9.546901,-0.351150,7.287371,1.228361,-3.292387,5.316332,-2.249381,-7.376183,-4.091623,-1.275309,9.556388,9.604600,7.593860,2.321287,-0.033078,-8.392846,-0.413994,-8.230644,9.543827,5.415766,0.727145,6.729266,9.978485,-4.110667,1.052807,8.641071,2.804269,8.782089,3.193026,9.616912,6.114656,-3.792643,-1.447038,-1.546005,-3.914320,-8.459696,-5.062222,5.165025,8.522537,3.839753,4.384607], dtype = "float64")#candidate|6808|(48,)|const|float64
call_6807 = relay.TupleGetItem(func_1162_call(relay.reshape(const_6808.astype('float64'), [1, 3, 16])), 4)
call_6809 = relay.TupleGetItem(func_1164_call(relay.reshape(const_6808.astype('float64'), [1, 3, 16])), 4)
func_2646_call = mod.get_global_var('func_2646')
func_2647_call = mutated_mod.get_global_var('func_2647')
call_6813 = func_2646_call()
call_6814 = func_2646_call()
output = relay.Tuple([call_6782,call_6797,call_6807,const_6808,call_6813,])
output2 = relay.Tuple([call_6783,call_6798,call_6809,const_6808,call_6814,])
func_6825 = relay.Function([], output)
mod['func_6825'] = func_6825
mod = relay.transform.InferType()(mod)
mutated_mod['func_6825'] = func_6825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6825_call = mutated_mod.get_global_var('func_6825')
call_6826 = func_6825_call()
output = call_6826
func_6827 = relay.Function([], output)
mutated_mod['func_6827'] = func_6827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1699_call = mod.get_global_var('func_1699')
func_1701_call = mutated_mod.get_global_var('func_1701')
call_6876 = func_1699_call()
call_6877 = func_1699_call()
output = relay.Tuple([call_6876,])
output2 = relay.Tuple([call_6877,])
func_6884 = relay.Function([], output)
mod['func_6884'] = func_6884
mod = relay.transform.InferType()(mod)
output = func_6884()
func_6885 = relay.Function([], output)
mutated_mod['func_6885'] = func_6885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4805_call = mod.get_global_var('func_4805')
func_4807_call = mutated_mod.get_global_var('func_4807')
call_6938 = relay.TupleGetItem(func_4805_call(), 0)
call_6939 = relay.TupleGetItem(func_4807_call(), 0)
output = relay.Tuple([call_6938,])
output2 = relay.Tuple([call_6939,])
func_6955 = relay.Function([], output)
mod['func_6955'] = func_6955
mod = relay.transform.InferType()(mod)
output = func_6955()
func_6956 = relay.Function([], output)
mutated_mod['func_6956'] = func_6956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4193_call = mod.get_global_var('func_4193')
func_4194_call = mutated_mod.get_global_var('func_4194')
call_6957 = relay.TupleGetItem(func_4193_call(), 1)
call_6958 = relay.TupleGetItem(func_4194_call(), 1)
func_2197_call = mod.get_global_var('func_2197')
func_2198_call = mutated_mod.get_global_var('func_2198')
call_6973 = func_2197_call()
call_6974 = func_2197_call()
func_6110_call = mod.get_global_var('func_6110')
func_6111_call = mutated_mod.get_global_var('func_6111')
call_7002 = relay.TupleGetItem(func_6110_call(), 0)
call_7003 = relay.TupleGetItem(func_6111_call(), 0)
func_4370_call = mod.get_global_var('func_4370')
func_4374_call = mutated_mod.get_global_var('func_4374')
var_7009 = relay.var("var_7009", dtype = "float64", shape = (660,))#candidate|7009|(660,)|var|float64
call_7008 = relay.TupleGetItem(func_4370_call(relay.reshape(call_6973.astype('float64'), [6, 8, 11]), relay.reshape(var_7009.astype('float64'), [660,]), ), 1)
call_7010 = relay.TupleGetItem(func_4374_call(relay.reshape(call_6973.astype('float64'), [6, 8, 11]), relay.reshape(var_7009.astype('float64'), [660,]), ), 1)
uop_7011 = relay.tan(call_7002.astype('float32')) # shape=(3, 9, 6)
uop_7013 = relay.tan(call_7003.astype('float32')) # shape=(3, 9, 6)
output = relay.Tuple([call_6957,call_6973,call_7008,var_7009,uop_7011,])
output2 = relay.Tuple([call_6958,call_6974,call_7010,var_7009,uop_7013,])
func_7034 = relay.Function([var_7009,], output)
mod['func_7034'] = func_7034
mod = relay.transform.InferType()(mod)
var_7035 = relay.var("var_7035", dtype = "float64", shape = (660,))#candidate|7035|(660,)|var|float64
output = func_7034(var_7035)
func_7036 = relay.Function([var_7035], output)
mutated_mod['func_7036'] = func_7036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mod.get_global_var('func_4694')
func_4695_call = mutated_mod.get_global_var('func_4695')
call_7038 = func_4694_call()
call_7039 = func_4694_call()
func_1365_call = mod.get_global_var('func_1365')
func_1366_call = mutated_mod.get_global_var('func_1366')
call_7040 = relay.TupleGetItem(func_1365_call(), 0)
call_7041 = relay.TupleGetItem(func_1366_call(), 0)
func_1880_call = mod.get_global_var('func_1880')
func_1881_call = mutated_mod.get_global_var('func_1881')
call_7043 = func_1880_call()
call_7044 = func_1880_call()
output = relay.Tuple([call_7038,call_7040,call_7043,])
output2 = relay.Tuple([call_7039,call_7041,call_7044,])
func_7048 = relay.Function([], output)
mod['func_7048'] = func_7048
mod = relay.transform.InferType()(mod)
output = func_7048()
func_7049 = relay.Function([], output)
mutated_mod['func_7049'] = func_7049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4834_call = mod.get_global_var('func_4834')
func_4836_call = mutated_mod.get_global_var('func_4836')
call_7086 = relay.TupleGetItem(func_4834_call(), 2)
call_7087 = relay.TupleGetItem(func_4836_call(), 2)
func_1217_call = mod.get_global_var('func_1217')
func_1219_call = mutated_mod.get_global_var('func_1219')
var_7113 = relay.var("var_7113", dtype = "float64", shape = (48,))#candidate|7113|(48,)|var|float64
call_7112 = relay.TupleGetItem(func_1217_call(relay.reshape(var_7113.astype('float64'), [48,])), 3)
call_7114 = relay.TupleGetItem(func_1219_call(relay.reshape(var_7113.astype('float64'), [48,])), 3)
output = relay.Tuple([call_7086,call_7112,var_7113,])
output2 = relay.Tuple([call_7087,call_7114,var_7113,])
func_7142 = relay.Function([var_7113,], output)
mod['func_7142'] = func_7142
mod = relay.transform.InferType()(mod)
mutated_mod['func_7142'] = func_7142
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7143 = relay.var("var_7143", dtype = "float64", shape = (48,))#candidate|7143|(48,)|var|float64
func_7142_call = mutated_mod.get_global_var('func_7142')
call_7144 = func_7142_call(var_7143)
output = call_7144
func_7145 = relay.Function([var_7143], output)
mutated_mod['func_7145'] = func_7145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4652_call = mod.get_global_var('func_4652')
func_4654_call = mutated_mod.get_global_var('func_4654')
call_7155 = relay.TupleGetItem(func_4652_call(), 0)
call_7156 = relay.TupleGetItem(func_4654_call(), 0)
func_2821_call = mod.get_global_var('func_2821')
func_2822_call = mutated_mod.get_global_var('func_2822')
call_7159 = relay.TupleGetItem(func_2821_call(), 2)
call_7160 = relay.TupleGetItem(func_2822_call(), 2)
func_3527_call = mod.get_global_var('func_3527')
func_3530_call = mutated_mod.get_global_var('func_3530')
var_7176 = relay.var("var_7176", dtype = "float64", shape = (660,))#candidate|7176|(660,)|var|float64
call_7175 = relay.TupleGetItem(func_3527_call(relay.reshape(var_7176.astype('float64'), [660,])), 0)
call_7177 = relay.TupleGetItem(func_3530_call(relay.reshape(var_7176.astype('float64'), [660,])), 0)
output = relay.Tuple([call_7155,call_7159,call_7175,var_7176,])
output2 = relay.Tuple([call_7156,call_7160,call_7177,var_7176,])
func_7186 = relay.Function([var_7176,], output)
mod['func_7186'] = func_7186
mod = relay.transform.InferType()(mod)
var_7187 = relay.var("var_7187", dtype = "float64", shape = (660,))#candidate|7187|(660,)|var|float64
output = func_7186(var_7187)
func_7188 = relay.Function([var_7187], output)
mutated_mod['func_7188'] = func_7188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7048_call = mod.get_global_var('func_7048')
func_7049_call = mutated_mod.get_global_var('func_7049')
call_7195 = relay.TupleGetItem(func_7048_call(), 2)
call_7196 = relay.TupleGetItem(func_7049_call(), 2)
func_2036_call = mod.get_global_var('func_2036')
func_2038_call = mutated_mod.get_global_var('func_2038')
const_7203 = relay.const([-9.182754,-1.377122,-0.131610,9.896299,-4.355288,2.231490,6.917820,-7.423883,-4.717264,3.594752,-5.660175,0.960826,3.499085,-8.085468,-9.546110,-5.183877,4.044592,5.059804,8.853249,2.125455,2.911314,2.144218,-1.816819,-7.067648,-9.703474,-8.421726,8.128185,9.322877,0.052754,0.270566,3.813405,-4.562233,8.017667,8.667797,7.319817,-5.554461,7.067405,3.971271,-4.026840,1.106461,-8.801562,7.122073,5.786548,-2.595472,-7.939124,-9.242240,4.996615,-5.012427], dtype = "float64")#candidate|7203|(48,)|const|float64
call_7202 = relay.TupleGetItem(func_2036_call(relay.reshape(const_7203.astype('float64'), [48, 1])), 2)
call_7204 = relay.TupleGetItem(func_2038_call(relay.reshape(const_7203.astype('float64'), [48, 1])), 2)
uop_7212 = relay.log10(call_7202.astype('float32')) # shape=(7, 132)
uop_7214 = relay.log10(call_7204.astype('float32')) # shape=(7, 132)
uop_7219 = relay.sqrt(uop_7212.astype('float32')) # shape=(7, 132)
uop_7221 = relay.sqrt(uop_7214.astype('float32')) # shape=(7, 132)
const_7228 = relay.const([[-6.264033,0.210753,-8.484312,-9.763281,-2.957077,8.192190,-6.262796,-7.758488,-0.308577,3.227719,-6.880998,5.520256,-9.546508,4.582372,-7.971533,-7.649891,-4.314804,-8.754866,-2.768164,-6.914426,-8.105255,2.787722,2.072878,6.944713,-9.423699,-4.289874,4.879704,-1.916403,9.527699,-0.948760,-5.918047,-0.109317,8.610236,2.578941,6.737533,-0.591435,6.994316,0.621790,4.927651,-0.783514,2.800805,-6.689697,-1.106990,-6.925979,-0.345005,-9.620669,-9.805087,4.075995,1.674153,3.051197,-3.914276,-6.144339,-7.090435,-6.201509,-6.068928,7.669044,4.911566,-9.444368,-9.721438,4.267791,-2.667545,-1.313375,-4.025090,-4.775377,-7.678808,-5.808075,0.702328,5.945660,-6.494724,8.205327,-9.508190,-7.543077,-9.718314,-7.055157,-4.274257,2.302034,6.352082,3.994570,7.381167,4.877964,4.605809,-1.040687,-7.862131,-6.199789,1.824473,6.799730,-3.843867,8.030929,-0.510871,-9.299812,7.310217,0.194460,7.504815,-3.341984,-9.420474,-6.953723,0.868858,-3.888524,-6.784486,9.933815,-4.789944,-9.174594,-8.969135,8.706086,1.988408,8.568924,8.677213,9.059776,4.069907,2.113853,7.729415,-2.534600,-1.463185,-8.828529,6.890786,-3.830399,-5.430299,8.429908,-9.770017,9.456892,-4.821104,-1.744748,-4.869553,-5.696708,0.782964,7.437692,5.956445,-2.964514,3.199575,9.013161,-3.057517,-9.714432],[-6.074878,8.970925,0.233764,-0.209514,-5.254067,5.014943,-3.274756,-3.464966,-3.625725,-3.991933,6.837845,2.293651,9.036556,-3.251753,5.349744,-5.249479,-5.702313,-5.694279,-4.124171,8.147413,-0.185966,4.464590,-8.369488,-4.410083,-2.481294,-2.521908,3.652650,-5.297396,-4.988266,-3.543290,6.287907,7.741170,6.513456,8.893868,-7.176338,-8.090264,-5.948817,3.936626,9.297354,2.451064,-9.642188,-2.578876,5.897348,-6.129877,6.581503,9.096777,7.466639,-5.457796,7.536764,3.965292,-3.615220,-6.090439,1.723828,8.033884,4.313040,-2.433775,-4.348431,-9.195366,7.165040,-4.593109,5.411562,-4.290594,-8.794581,8.576903,-0.950704,-3.615999,-5.468090,4.780680,-0.016500,9.323347,9.128208,-5.818231,-7.467086,-0.233622,3.247451,-3.845030,-5.068302,-7.863330,1.690518,-2.689472,-9.313727,-0.712763,1.328799,-5.151787,-3.609484,-9.649485,-7.051099,0.306879,4.077424,-2.312497,-4.044615,5.494009,4.795266,-5.444385,-7.104570,6.793597,1.041735,7.898381,5.743803,-6.384285,5.598700,-1.514906,8.977046,-9.154830,4.829453,-3.284202,4.625808,-8.488086,7.495981,5.072005,-7.748971,-1.190001,-8.016534,-5.956277,2.236161,7.572781,8.674779,-8.633762,-4.800871,0.247139,-7.459228,3.389034,-6.624315,-7.533403,-4.374147,0.632194,-9.772330,-6.218964,1.756934,6.146381,-5.873699,-3.161972],[-5.276682,-8.292958,0.543408,-5.766857,7.909030,-4.158165,2.862166,4.021825,-6.784697,-8.619416,-8.691753,-9.964626,-8.257838,7.299777,-5.401293,-8.313926,-9.722614,7.306185,8.155859,1.834802,-2.132831,-1.489416,9.992424,2.924839,-4.344450,-9.298252,0.470266,-3.199816,-3.649032,-2.626459,8.613413,6.180824,4.978052,-0.152020,-1.925450,-4.129965,5.649503,1.914381,-7.906008,-4.073773,-8.388462,-4.486010,0.841653,2.248738,-1.973017,5.880087,7.598533,4.367805,0.118563,4.944726,-3.283018,-2.561113,-6.384533,-1.748563,8.632119,6.931863,5.309414,3.802409,-6.132863,8.428491,-0.125714,3.038718,4.094083,-8.802783,-5.547871,7.284737,0.050117,-5.357860,7.022852,6.510330,7.911827,-5.511808,-0.709232,-4.727767,9.772167,8.060808,-7.832442,2.846551,7.676415,-8.487068,2.351093,-1.122566,-0.025281,-7.873626,2.625608,-6.648565,-0.539347,-4.011974,-2.697113,7.256312,-7.014373,8.259784,4.047898,-5.440409,-9.788391,-8.712864,-1.923410,3.415781,9.861791,-3.522712,9.794109,-1.431751,-1.172848,-3.878966,9.466555,-4.126528,-2.590832,-7.440445,-4.691560,-4.541782,5.669305,-4.056536,-2.471716,-7.617276,3.807163,-0.539667,2.683090,-1.001016,3.051077,-7.768498,-8.515615,-7.202058,-4.469670,7.087843,-4.993814,-8.509486,-0.073356,0.289125,-6.302066,5.959837,0.788235,-2.250732],[-9.905535,-8.905544,3.497679,-4.663225,2.128669,-6.597481,5.200673,-9.100663,8.448269,4.000058,6.255720,-7.931156,6.888323,6.561770,-3.714609,0.894465,-1.682969,-7.003565,3.443943,3.762784,-5.113478,-1.927731,6.785706,6.119021,6.103068,3.580730,3.845199,-6.279390,5.416203,4.316317,1.726951,-6.553171,-9.893385,1.475167,2.549352,-5.989002,-2.649303,1.265518,1.567570,8.151740,3.862604,1.633303,-1.567863,3.706943,7.047270,4.459822,-6.496214,-9.100513,7.506443,-5.359715,5.714738,-0.506729,2.586596,6.916266,-1.478494,-0.597235,9.238722,-5.798565,9.599482,6.279931,9.672116,-3.177531,-5.453456,-7.188929,-4.202851,-0.456786,-4.092875,-2.643284,-9.552217,-8.921951,-0.557834,7.976718,3.994054,0.677534,6.256503,2.482715,-7.059815,-4.401299,7.037596,-1.713359,2.678746,0.241154,9.807057,-1.215204,5.633063,-5.433193,7.095594,-2.778355,6.744775,2.207690,-5.244568,0.893194,-3.496846,-8.822801,5.174391,-4.294447,9.640550,-4.337212,7.060265,2.662825,9.824934,-3.769572,1.153147,5.201438,-1.532019,7.426429,-4.374420,8.316896,2.214733,-7.440554,-5.662226,0.552599,-2.395118,-9.208414,-5.112965,-2.887502,3.296078,-3.265311,3.445161,-9.962604,8.373123,8.707777,-4.690731,-9.187923,-4.980939,-9.724546,1.006427,-3.381933,4.846674,7.246849,-9.253351,-7.486535],[-5.829044,-3.531596,-2.779266,-1.951620,1.338703,8.131741,-3.696767,6.662597,-6.600909,-0.500498,5.320119,9.108961,3.072759,9.284404,2.532891,-5.690413,-9.435756,7.704351,8.929935,-1.649575,4.212970,-1.560130,-4.564449,-9.725979,-1.424991,-9.672722,-5.027291,-4.117695,0.537372,9.111083,1.550339,-5.705486,7.462036,6.023870,7.676735,9.091976,0.106712,0.593382,8.325491,7.435146,-6.988350,5.268984,8.137703,-5.061258,5.458531,2.989597,7.401575,3.811582,-9.104519,0.079113,-4.490680,-6.600610,0.567310,0.014851,-9.666632,-8.091578,4.337789,5.922750,6.002770,1.345140,3.576564,-5.887134,-0.182209,0.293576,-2.583612,8.333108,5.230390,-9.539321,2.257797,4.064683,-2.687478,-9.101000,-7.601673,6.067020,3.700396,-2.979091,3.657432,-7.947332,-9.974253,-1.233277,-4.856153,-8.499829,-0.910878,-1.523487,-6.533616,3.128178,5.304055,-5.056074,7.780703,-2.350515,-7.483916,9.390356,9.608015,-6.960866,-4.905235,-2.382316,-3.402667,-6.993498,7.803850,-8.408297,8.021832,4.327844,1.434997,-5.058375,6.719899,1.800069,3.057768,8.301886,-9.303405,6.964486,4.673341,-3.701480,-3.982056,-5.991898,6.389184,3.334705,-0.799979,-9.757696,7.675025,-3.472404,4.552737,-4.306532,-1.911219,8.471448,9.815159,3.109437,-2.839521,-1.585848,3.864472,-6.813022,7.801917,8.331241],[-4.978968,7.393020,-2.856411,-6.417318,-6.107667,-8.606722,1.683193,2.975289,-4.354632,5.543715,-1.388733,9.723738,-0.174190,4.669368,-1.538906,0.369570,-5.995040,-4.287622,-7.845597,-6.154657,2.543059,5.498594,-9.984092,-9.281227,-5.132002,7.322825,0.546291,-2.255562,-1.304741,-1.741282,-0.966552,-0.375542,-5.691984,5.450123,8.101754,7.615274,-7.545683,8.939930,-7.794940,-6.327550,8.134462,7.456192,-9.443493,-2.004641,2.248551,2.490476,-5.075648,-1.925869,-4.880916,4.842668,4.083234,8.835456,-2.174402,-0.345737,-2.483444,2.130609,-3.715719,-7.221092,-1.899875,-5.958385,2.106109,1.656157,3.964609,0.872250,5.057603,7.060815,9.925649,-9.639329,-0.693124,-5.087233,9.635649,-0.983437,1.105212,0.752169,-0.077459,0.779247,2.924142,7.532490,4.174354,4.156536,-6.257038,9.641375,1.672619,9.897855,0.397566,-1.757324,9.509273,-3.749367,6.982457,-1.804196,9.333981,-2.577083,-0.673413,9.106356,-8.498354,-8.114381,-1.118692,-1.602263,4.668555,7.583326,-5.763140,-2.963556,-3.482727,-6.882386,-6.527987,7.070134,-3.240822,-8.483585,-8.382461,-7.601412,-0.474827,8.603472,4.665609,-8.419780,8.902409,4.149400,7.683439,1.111515,-3.992024,-7.976150,-4.662308,8.870492,9.456501,9.412886,0.498140,-6.469036,-6.678188,-2.211115,4.183427,-0.329743,-9.719161,-3.917580],[4.451804,-2.545676,1.427502,-8.095142,-0.793382,0.573483,-8.782617,5.166140,-4.038685,9.482505,3.084827,-3.071950,3.090912,7.319184,-3.750450,0.445819,3.445666,-1.274539,-2.865777,-5.349566,-3.643196,-2.255401,-5.822732,-5.774300,0.716316,3.942054,-0.374869,-2.312045,6.151560,9.112020,8.601239,2.131894,-4.751959,-7.066811,3.343932,-5.132067,-7.773074,-7.343819,-7.842507,8.338745,-3.509171,5.862214,0.669756,-2.970390,4.973234,-9.384897,5.830123,-3.575738,2.949704,-1.606148,3.853059,-6.141983,-2.802249,0.137497,-1.342639,-4.154275,6.523762,1.978181,1.427448,5.457827,0.384358,-7.493692,-3.709689,1.584608,2.278855,-2.386407,-4.080062,-6.518344,2.250875,3.290968,-9.837680,-1.279630,5.319138,-9.004708,-6.541079,-0.296724,-7.662445,-0.855833,2.286836,-0.123844,5.954311,3.980253,-3.995377,-4.613475,5.739086,4.762834,-4.030273,-9.149641,8.547838,-3.486592,-0.929135,7.051668,7.035610,0.313920,0.513265,3.356730,-9.942436,-8.250380,-8.198711,-6.660673,5.987606,-3.165003,-7.974859,6.118609,0.794178,6.480885,-5.222564,-5.300555,-2.601763,-3.781788,-9.323109,-5.634971,4.576620,9.845453,-0.342447,4.243689,4.986445,3.100677,-3.424004,8.399155,-8.527290,-4.181224,8.248696,5.017037,-8.259181,-8.921259,8.393989,-8.192118,7.401321,9.797170,0.347527,7.358605]], dtype = "float32")#candidate|7228|(7, 132)|const|float32
bop_7229 = relay.floor_mod(uop_7219.astype('float64'), relay.reshape(const_7228.astype('float64'), relay.shape_of(uop_7219))) # shape=(7, 132)
bop_7232 = relay.floor_mod(uop_7221.astype('float64'), relay.reshape(const_7228.astype('float64'), relay.shape_of(uop_7221))) # shape=(7, 132)
func_6884_call = mod.get_global_var('func_6884')
func_6885_call = mutated_mod.get_global_var('func_6885')
call_7235 = relay.TupleGetItem(func_6884_call(), 0)
call_7236 = relay.TupleGetItem(func_6885_call(), 0)
func_1880_call = mod.get_global_var('func_1880')
func_1881_call = mutated_mod.get_global_var('func_1881')
call_7249 = func_1880_call()
call_7250 = func_1880_call()
bop_7252 = relay.bitwise_xor(bop_7229.astype('uint8'), relay.reshape(uop_7212.astype('uint8'), relay.shape_of(bop_7229))) # shape=(7, 132)
bop_7255 = relay.bitwise_xor(bop_7232.astype('uint8'), relay.reshape(uop_7214.astype('uint8'), relay.shape_of(bop_7232))) # shape=(7, 132)
output = relay.Tuple([call_7195,const_7203,call_7235,call_7249,bop_7252,])
output2 = relay.Tuple([call_7196,const_7203,call_7236,call_7250,bop_7255,])
func_7257 = relay.Function([], output)
mod['func_7257'] = func_7257
mod = relay.transform.InferType()(mod)
mutated_mod['func_7257'] = func_7257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7257_call = mutated_mod.get_global_var('func_7257')
call_7258 = func_7257_call()
output = call_7258
func_7259 = relay.Function([], output)
mutated_mod['func_7259'] = func_7259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7048_call = mod.get_global_var('func_7048')
func_7049_call = mutated_mod.get_global_var('func_7049')
call_7263 = relay.TupleGetItem(func_7048_call(), 1)
call_7264 = relay.TupleGetItem(func_7049_call(), 1)
func_3388_call = mod.get_global_var('func_3388')
func_3391_call = mutated_mod.get_global_var('func_3391')
var_7267 = relay.var("var_7267", dtype = "int8", shape = (36,))#candidate|7267|(36,)|var|int8
var_7268 = relay.var("var_7268", dtype = "int8", shape = (1, 360))#candidate|7268|(1, 360)|var|int8
call_7266 = relay.TupleGetItem(func_3388_call(relay.reshape(var_7267.astype('int8'), [4, 1, 9]), relay.reshape(var_7268.astype('int8'), [4, 10, 9]), ), 0)
call_7269 = relay.TupleGetItem(func_3391_call(relay.reshape(var_7267.astype('int8'), [4, 1, 9]), relay.reshape(var_7268.astype('int8'), [4, 10, 9]), ), 0)
uop_7270 = relay.acosh(call_7266.astype('float64')) # shape=(4, 10, 9)
uop_7272 = relay.acosh(call_7269.astype('float64')) # shape=(4, 10, 9)
func_5939_call = mod.get_global_var('func_5939')
func_5941_call = mutated_mod.get_global_var('func_5941')
call_7273 = relay.TupleGetItem(func_5939_call(), 2)
call_7274 = relay.TupleGetItem(func_5941_call(), 2)
func_1365_call = mod.get_global_var('func_1365')
func_1366_call = mutated_mod.get_global_var('func_1366')
call_7281 = relay.TupleGetItem(func_1365_call(), 0)
call_7282 = relay.TupleGetItem(func_1366_call(), 0)
output = relay.Tuple([call_7263,var_7267,var_7268,uop_7270,call_7273,call_7281,])
output2 = relay.Tuple([call_7264,var_7267,var_7268,uop_7272,call_7274,call_7282,])
func_7283 = relay.Function([var_7267,var_7268,], output)
mod['func_7283'] = func_7283
mod = relay.transform.InferType()(mod)
var_7284 = relay.var("var_7284", dtype = "int8", shape = (36,))#candidate|7284|(36,)|var|int8
var_7285 = relay.var("var_7285", dtype = "int8", shape = (1, 360))#candidate|7285|(1, 360)|var|int8
output = func_7283(var_7284,var_7285,)
func_7286 = relay.Function([var_7284,var_7285,], output)
mutated_mod['func_7286'] = func_7286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3973_call = mod.get_global_var('func_3973')
func_3974_call = mutated_mod.get_global_var('func_3974')
call_7318 = relay.TupleGetItem(func_3973_call(), 1)
call_7319 = relay.TupleGetItem(func_3974_call(), 1)
func_1638_call = mod.get_global_var('func_1638')
func_1642_call = mutated_mod.get_global_var('func_1642')
const_7325 = relay.const(-7, dtype = "uint16")#candidate|7325|()|const|uint16
var_7326 = relay.var("var_7326", dtype = "uint16", shape = (39, 6))#candidate|7326|(39, 6)|var|uint16
call_7324 = relay.TupleGetItem(func_1638_call(relay.reshape(const_7325.astype('uint16'), []), relay.reshape(var_7326.astype('uint16'), [13, 3, 6]), ), 2)
call_7327 = relay.TupleGetItem(func_1642_call(relay.reshape(const_7325.astype('uint16'), []), relay.reshape(var_7326.astype('uint16'), [13, 3, 6]), ), 2)
func_4370_call = mod.get_global_var('func_4370')
func_4374_call = mutated_mod.get_global_var('func_4374')
var_7339 = relay.var("var_7339", dtype = "float64", shape = (528,))#candidate|7339|(528,)|var|float64
var_7340 = relay.var("var_7340", dtype = "float64", shape = (10, 66))#candidate|7340|(10, 66)|var|float64
call_7338 = relay.TupleGetItem(func_4370_call(relay.reshape(var_7339.astype('float64'), [6, 8, 11]), relay.reshape(var_7340.astype('float64'), [660,]), ), 2)
call_7341 = relay.TupleGetItem(func_4374_call(relay.reshape(var_7339.astype('float64'), [6, 8, 11]), relay.reshape(var_7340.astype('float64'), [660,]), ), 2)
bop_7348 = relay.add(call_7338.astype('int64'), relay.reshape(call_7324.astype('int64'), relay.shape_of(call_7338))) # shape=(8, 13, 14)
bop_7351 = relay.add(call_7341.astype('int64'), relay.reshape(call_7327.astype('int64'), relay.shape_of(call_7341))) # shape=(8, 13, 14)
output = relay.Tuple([call_7318,const_7325,var_7326,var_7339,var_7340,bop_7348,])
output2 = relay.Tuple([call_7319,const_7325,var_7326,var_7339,var_7340,bop_7351,])
func_7358 = relay.Function([var_7326,var_7339,var_7340,], output)
mod['func_7358'] = func_7358
mod = relay.transform.InferType()(mod)
mutated_mod['func_7358'] = func_7358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7358_call = mutated_mod.get_global_var('func_7358')
var_7360 = relay.var("var_7360", dtype = "uint16", shape = (39, 6))#candidate|7360|(39, 6)|var|uint16
var_7361 = relay.var("var_7361", dtype = "float64", shape = (528,))#candidate|7361|(528,)|var|float64
var_7362 = relay.var("var_7362", dtype = "float64", shape = (10, 66))#candidate|7362|(10, 66)|var|float64
call_7359 = func_7358_call(var_7360,var_7361,var_7362,)
output = call_7359
func_7363 = relay.Function([var_7360,var_7361,var_7362,], output)
mutated_mod['func_7363'] = func_7363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1467_call = mod.get_global_var('func_1467')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_7501 = relay.TupleGetItem(func_1467_call(), 0)
call_7502 = relay.TupleGetItem(func_1468_call(), 0)
func_6110_call = mod.get_global_var('func_6110')
func_6111_call = mutated_mod.get_global_var('func_6111')
call_7503 = relay.TupleGetItem(func_6110_call(), 1)
call_7504 = relay.TupleGetItem(func_6111_call(), 1)
output = relay.Tuple([call_7501,call_7503,])
output2 = relay.Tuple([call_7502,call_7504,])
func_7520 = relay.Function([], output)
mod['func_7520'] = func_7520
mod = relay.transform.InferType()(mod)
output = func_7520()
func_7521 = relay.Function([], output)
mutated_mod['func_7521'] = func_7521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6238_call = mod.get_global_var('func_6238')
func_6240_call = mutated_mod.get_global_var('func_6240')
call_7605 = relay.TupleGetItem(func_6238_call(), 0)
call_7606 = relay.TupleGetItem(func_6240_call(), 0)
output = relay.Tuple([call_7605,])
output2 = relay.Tuple([call_7606,])
func_7613 = relay.Function([], output)
mod['func_7613'] = func_7613
mod = relay.transform.InferType()(mod)
output = func_7613()
func_7614 = relay.Function([], output)
mutated_mod['func_7614'] = func_7614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mod.get_global_var('func_4694')
func_4695_call = mutated_mod.get_global_var('func_4695')
call_7731 = func_4694_call()
call_7732 = func_4694_call()
func_4157_call = mod.get_global_var('func_4157')
func_4159_call = mutated_mod.get_global_var('func_4159')
call_7733 = relay.TupleGetItem(func_4157_call(), 0)
call_7734 = relay.TupleGetItem(func_4159_call(), 0)
output = relay.Tuple([call_7731,call_7733,])
output2 = relay.Tuple([call_7732,call_7734,])
func_7736 = relay.Function([], output)
mod['func_7736'] = func_7736
mod = relay.transform.InferType()(mod)
mutated_mod['func_7736'] = func_7736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7736_call = mutated_mod.get_global_var('func_7736')
call_7737 = func_7736_call()
output = call_7737
func_7738 = relay.Function([], output)
mutated_mod['func_7738'] = func_7738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4049_call = mod.get_global_var('func_4049')
func_4051_call = mutated_mod.get_global_var('func_4051')
call_7804 = relay.TupleGetItem(func_4049_call(), 2)
call_7805 = relay.TupleGetItem(func_4051_call(), 2)
func_1427_call = mod.get_global_var('func_1427')
func_1430_call = mutated_mod.get_global_var('func_1430')
const_7815 = relay.const([8.028215,8.080331,-7.668273,3.780583,-5.134098,-5.588793,3.887369,0.199738,1.981530,-8.060572,5.380390,-2.643531,6.341869,4.007632,6.280142,-8.396934,3.272942,-9.452474,9.518318,-1.606331,-7.356201,8.007364,-9.902024,3.407288,3.349222,-1.346359,0.460360,0.705048,-4.044325,1.810067,-3.962691,-0.402623,9.477895,5.695949,-4.781017,-8.063461,-6.871128,6.759392,-4.300327,-1.842402,-8.377046,-8.603057,7.749265,-6.899621,-2.373005,4.857089,0.330196,-8.598204,2.868999,6.764431,-5.895448,-6.903980,2.594105,5.285532,-2.497898,2.728735,-9.304035,-8.290915,-3.359829,7.318573,-7.990542,0.899866,-6.793033,-3.981931,2.299123,-4.347662,5.150817,9.173005,-5.308007,-6.943502,-4.314764,0.360034,6.931799,0.500868,-6.633717,8.067200,6.328086,-9.132356,-4.212535,4.477043,-9.108354,6.173335,-9.122968,8.079287,6.709783,-8.950090,8.948844,1.796063,3.008346,-1.890034,7.134788,4.188932,-1.563489,1.123973,-3.096986,3.193971,-3.254533,9.395299,2.960003,6.906150,-8.687798,-2.312140,7.064961,5.619766,-4.468101,-6.896959,4.074902,0.782380,7.360767,-9.021152,6.130356,-1.160106,7.231536,0.380148,-2.391225,4.176400,-7.419410,7.128142,3.960081,-1.124279,-8.936085,-7.935903,-0.338506,-3.676566,-5.832372,-5.376568,-1.281191,0.441110,-4.026402,-2.990973,2.236900,5.017043,2.278088,1.194917,1.121794,2.834908,-8.237785,8.574295,6.321379,-5.301197,3.964107,1.032463,7.819114,3.672128,2.483407,3.405272,1.530559,-8.094321,2.959425,-1.471724,-0.203513,-0.384580,0.068776,3.761968,7.440191,-9.935041,-6.046030,-1.602086,-8.837334,0.181179,5.245334,-2.164016,-8.474963,-7.860689,-0.719533,-8.366931,-9.844691,1.436020,4.784134,-0.570256,-2.113403,4.810681,-4.779676,-8.490209,0.478903,2.490611,-5.138463,1.022386,-7.383570,-2.833933,-8.968889,5.902025,-6.429745,-5.170849,-8.541642,-9.031530,2.301142,3.670486,-6.835817,-7.074620,-0.542656,-7.262317,1.988313,7.419631,6.942410,-5.075915,-6.313694,-2.754129,-4.443910,-5.527627,9.988340,4.142381,-4.342932,3.213965,6.145694,-0.143159,7.097216,-3.605523,2.212245,-7.577198,-2.786438,-5.455440,1.253534,2.574995,-2.259834,-4.260981,-8.712595,-3.126739,-0.463568,3.332919,-7.638344,4.074680,3.091452,-0.460745,3.630498,8.179478,-7.922433,9.047910,4.821118,4.785506,-5.028116,3.355997,-2.421829,-1.996035,3.464438,-5.325455,6.997647,2.017929,9.501364,8.840875,7.089977,-5.363288,5.661939,6.264328,-3.555514,-9.051084,-9.122788,-3.742013,3.069941,2.249119,-4.964276,-2.818005,-1.914671,-1.377877,-3.304524,-9.219552,8.011856,2.281282,-9.586578,0.279422,4.293335,-7.758638,2.958873,-8.310773,7.255797,-7.412536,9.600818,3.142142,-7.707031,-8.168115,-0.851146,-4.499058,3.984157,-7.576504,-7.721789,5.758675,1.135218,7.135762,-0.949193,8.478028,-3.779683,2.323685,2.876194,5.396261,2.064190,-2.888923,-3.535573,5.999077,-2.992833,-2.535754,0.741475,-4.381339,9.382732,4.786569,-4.979783,5.438669,-0.975912,-5.571403,8.803724,-3.166315,9.076887,-5.220824,4.306806,-2.606112,6.489618,5.948494,-4.016377,6.611700,5.922744,0.718917,-6.233404,-2.699965,9.559318,-5.372223,-1.301939,8.751840,0.135742,-1.179960,5.835076,-5.406705,8.718002,2.018473,7.021686,8.890606,-7.104586,-0.290641,8.280955,4.054049,-5.886637,5.393596,-8.823919,-2.298784,4.428800,5.107147,9.869639,5.798702,1.351256,-4.840751,-0.026573,6.291228,-9.907059,2.131096,4.211474,6.421204,-7.548116,-1.767504,5.921023,-4.084653,5.017413,-7.514376,1.932180,5.058167,-4.144311,5.493976,0.873363,1.194104,7.999513,8.846030,-2.174867,-6.778256,-3.365020,7.154754,5.803271,-3.616300,3.858040,-3.287651,-7.411415,9.237733,6.394169,8.231183,-8.345057,1.349310,7.883786,-9.769828,4.736928,-9.060335,4.389784,5.424423,2.792957,-0.164260,-5.704094,1.896185,-3.921735,-0.829019,-1.940993,1.287744,-3.322513,-5.106512,9.315328,1.740577,3.663317,-7.340225,-7.879061,1.991104,1.687690,-4.035990,-0.221935,6.250800,5.044275,8.171399,2.488180,-5.200303,9.493012,-9.537688,9.259372,1.827619,1.173616,6.357938,8.095108,-5.989444,-9.390051,2.736954,-1.933489,-0.136132,-0.083824,8.444661,-7.678755,4.814483,-5.792953,-0.055132,-7.251676,-6.550164,-4.884078,4.710096,0.898980,-5.029679,-9.152705,-6.363201,-7.170188,-6.740414,-3.977870,6.694180,9.273715,-3.850879,-5.892629,7.285015,-8.627691,-3.739090,-9.376825,4.743919,1.343859,3.723678,4.872479,9.200352,-9.799283,-6.634936,6.304399,7.366883,-9.694448,8.511533,6.032285,9.159781,-0.946010,-0.103654,2.352072,-8.097681,9.378014,4.719849,-8.390535,2.843539,-3.368089,0.931348,7.679119,0.546119,8.628121,-1.719198,9.422584,-6.057239,6.935697,-3.929331,-6.629078,-7.250634,0.397773,-6.555170,-4.705985,-0.978909,2.448591,-2.931278,2.430836,9.447238,-6.189051,1.482067,0.465105,-2.414250,-4.326197,-4.207292,0.276500,-4.900629,-3.668677,-8.033018,-5.930112,3.165094,3.829279,-4.103503,4.240951,3.653204,1.434161,-0.744654,-2.293312,-3.407923,3.550017,-1.260713,6.819777,1.899496,2.392379,-1.210683,6.616120,-0.075062,0.455237,4.019021,-0.608962,6.589239,0.050309,-5.928168,-8.336389,-0.599640,0.740466,-7.491067,2.168706,-2.659437,-7.968889,4.222473,4.585315,-3.525420,-1.600349,0.704733,-1.611065,8.635152,-1.044180,2.132535,-0.274982,3.486922,-0.413718,-2.166005,2.944982,1.198374,2.254705,5.061991,-6.209378,0.533620,7.730090,8.040154,5.161442,2.767281,-9.825384,-9.606814,-7.519164,5.266335,-1.657225,4.706362,-4.836042,0.029948,0.928000,-4.277689,-6.644244,-6.803932,2.506950,5.114130,-5.291410,-6.165612,8.234040,9.981079,-0.582120,5.288771,-6.391719,6.323218,1.388496,-6.511058,8.465904,-4.829671,5.820503,-8.393608,-1.417605,9.706883,-1.775009,9.401484,7.041210,-4.333609,2.176544,-4.672700,-5.028497,0.178023,-4.368403,-4.952998,-7.328472,3.159124,4.425365,-4.530800,2.604161,3.691747,-7.236665,4.219356,9.215511,1.302531,7.742325,5.903663,7.213263,4.632525,-9.183711,-4.644590,-1.353320,-6.492299,5.074163,5.980077,0.941802,-8.471989,-2.794954,9.299360,8.494415,-6.082963,-1.677619,-6.815432,-6.048991,7.751021,9.476413,-2.032110,2.651625,-9.063115,4.974377,3.244143,-7.542155,-4.599497,4.710055,-3.691225,2.313139,-0.694844,-3.074313,2.616548,-3.285203,-4.840544,-4.060810,-5.088152,8.245916,-9.409584,-5.573650,3.141005,-4.859557,0.518357,5.568009,-5.974322,2.715627,-4.719203,-1.874257,-5.212135,-4.613297,-5.791589,3.779650,-9.824493,3.806298,-4.545373,-3.044398,-2.912112,9.220367,2.398617,-6.531038,6.268812,-4.602484,0.801133,-5.346755,8.779603,-8.962660,2.283868,-1.533167,3.953281,0.253449,-2.229014,3.195109,-2.522391,-3.715322,-3.842196,1.451475,-9.381415,0.206672,-5.397009,-9.774047,3.335438,-3.592528,-9.771657,-2.764004,-8.048441,6.004825,-3.593505,-8.351585,-1.574645,-2.714023,2.140797,-6.560958,0.241516,9.497504,0.501248,2.832183,5.522056,-0.284175,8.380038,0.833844,-7.240207,-3.930133,7.378461,7.790501,9.333869,-8.131752,9.480681,9.752255,6.710886,3.660987,-2.570758,3.957493,-4.828024,6.574626,-6.587983,5.108715,-6.398058,5.077569,-3.690368,6.717213,-1.183784,-1.621153,-4.152650,-0.340033,8.595492,3.145925,7.870209,4.465739,-4.943625,4.766989,9.466403,8.356408,-7.542163,2.132729,9.710854,-8.393990,4.938569,1.223611,-5.998013,5.044429,3.353069,6.066513,8.344553,-3.696884,-9.137744,-9.394513,4.565718,4.146217,7.509541,-9.565928,7.828265,-5.534088,-6.572697,-8.526528,-7.208683,-2.579479,-1.527821,-2.442670,-4.489857,7.766673,-1.494535,-2.956874,9.150786,1.050942,-7.903432,4.981324,-4.427344,-8.689461,-8.203681,-1.223661,-5.975905,-2.489621,-4.270668,-3.823883,-2.097048,9.692659,-6.743203,-5.319136,5.209821,-2.908501,0.837120,2.823522,5.482200,-9.239692,3.184277,-1.730150,0.399515,-9.135411,2.667141,-8.787096,1.223115,-9.295687,0.328393,8.020753,-5.020911,0.462156,-6.860673,-6.004503,-4.117176,1.141554,2.656992,-2.974733,-3.663231,-9.904587,0.008709,7.249502,6.093309,-5.618438,-5.796614,2.418861,1.590391,2.466079,-8.043240,-0.520913,-5.250796,-9.623090,8.876281,3.477740,2.871745,-3.503625,-6.702490,9.028138,7.858660,0.045635,-8.553400,0.004192,7.137801,5.498327,-7.059746,-3.358084,6.677873,-2.812602,8.702791,-2.675629,1.574228,-5.444788,2.132295,4.188810,0.774425,-6.987334,-2.649977,-7.420176,-0.377297,4.136434,6.259939,-2.145133,-8.276452,1.975482,-7.200405,-5.953024,-2.356091,5.124505,5.580768,1.163245,2.179783,-7.510340,7.334679,1.600122,-9.959828,-8.259836,0.859362,-3.953316,3.753161,9.699494,2.959083,5.119845,-3.216111,9.809952,-2.127343,2.517381,0.120210,6.944850,-7.077789,-4.735134,4.348371,-7.914650,7.516650,-5.827614,-3.089415,-8.770645,1.507965,-4.754916,4.892002,2.488447,-1.778768,1.565858,-5.440526,-6.930290,-5.507249,8.929383,6.191858,-0.472621,-9.839877,0.746691,-9.962478,8.894987,5.093884,-0.624510,0.688208,-3.402776,-5.416497,9.823124,-1.381899,9.065185,0.226891,-0.419153,-4.419730,3.367939,5.818185,4.622140,5.973923,-1.197547,-9.439769,5.767730,-0.939812,9.387501,3.326713,-1.880070,-7.436280,-1.181869,-4.807841,-1.414338,8.386547,-2.871735,-6.306550,2.384747,-2.609580,3.910902,-7.232229], dtype = "float32")#candidate|7815|(924,)|const|float32
call_7814 = relay.TupleGetItem(func_1427_call(relay.reshape(const_7815.astype('float32'), [11, 6, 14])), 1)
call_7816 = relay.TupleGetItem(func_1430_call(relay.reshape(const_7815.astype('float32'), [11, 6, 14])), 1)
func_6251_call = mod.get_global_var('func_6251')
func_6252_call = mutated_mod.get_global_var('func_6252')
call_7821 = func_6251_call()
call_7822 = func_6251_call()
func_2215_call = mod.get_global_var('func_2215')
func_2216_call = mutated_mod.get_global_var('func_2216')
call_7852 = relay.TupleGetItem(func_2215_call(), 0)
call_7853 = relay.TupleGetItem(func_2216_call(), 0)
output = relay.Tuple([call_7804,call_7814,const_7815,call_7821,call_7852,])
output2 = relay.Tuple([call_7805,call_7816,const_7815,call_7822,call_7853,])
func_7866 = relay.Function([], output)
mod['func_7866'] = func_7866
mod = relay.transform.InferType()(mod)
output = func_7866()
func_7867 = relay.Function([], output)
mutated_mod['func_7867'] = func_7867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2179_call = mod.get_global_var('func_2179')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_7875 = func_2179_call()
call_7876 = func_2179_call()
func_3643_call = mod.get_global_var('func_3643')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_7877 = func_3643_call()
call_7878 = func_3643_call()
var_7884 = relay.var("var_7884", dtype = "float32", shape = (3, 9, 6))#candidate|7884|(3, 9, 6)|var|float32
bop_7885 = relay.bitwise_or(call_7877.astype('uint8'), relay.reshape(var_7884.astype('uint8'), relay.shape_of(call_7877))) # shape=(3, 9, 6)
bop_7888 = relay.bitwise_or(call_7878.astype('uint8'), relay.reshape(var_7884.astype('uint8'), relay.shape_of(call_7878))) # shape=(3, 9, 6)
output = relay.Tuple([call_7875,bop_7885,])
output2 = relay.Tuple([call_7876,bop_7888,])
func_7896 = relay.Function([var_7884,], output)
mod['func_7896'] = func_7896
mod = relay.transform.InferType()(mod)
var_7897 = relay.var("var_7897", dtype = "float32", shape = (3, 9, 6))#candidate|7897|(3, 9, 6)|var|float32
output = func_7896(var_7897)
func_7898 = relay.Function([var_7897], output)
mutated_mod['func_7898'] = func_7898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4157_call = mod.get_global_var('func_4157')
func_4159_call = mutated_mod.get_global_var('func_4159')
call_7908 = relay.TupleGetItem(func_4157_call(), 0)
call_7909 = relay.TupleGetItem(func_4159_call(), 0)
output = call_7908
output2 = call_7909
func_7915 = relay.Function([], output)
mod['func_7915'] = func_7915
mod = relay.transform.InferType()(mod)
mutated_mod['func_7915'] = func_7915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7915_call = mutated_mod.get_global_var('func_7915')
call_7916 = func_7915_call()
output = call_7916
func_7917 = relay.Function([], output)
mutated_mod['func_7917'] = func_7917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mod.get_global_var('func_3546')
func_3548_call = mutated_mod.get_global_var('func_3548')
call_7967 = func_3546_call()
call_7968 = func_3546_call()
output = call_7967
output2 = call_7968
func_7981 = relay.Function([], output)
mod['func_7981'] = func_7981
mod = relay.transform.InferType()(mod)
output = func_7981()
func_7982 = relay.Function([], output)
mutated_mod['func_7982'] = func_7982
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7986 = relay.var("var_7986", dtype = "float32", shape = (4, 9, 10))#candidate|7986|(4, 9, 10)|var|float32
var_7987 = relay.var("var_7987", dtype = "float32", shape = (4, 9, 10))#candidate|7987|(4, 9, 10)|var|float32
bop_7988 = relay.subtract(var_7986.astype('float32'), relay.reshape(var_7987.astype('float32'), relay.shape_of(var_7986))) # shape=(4, 9, 10)
bop_8001 = relay.mod(var_7986.astype('float32'), relay.reshape(bop_7988.astype('float32'), relay.shape_of(var_7986))) # shape=(4, 9, 10)
output = bop_8001
output2 = bop_8001
func_8010 = relay.Function([var_7986,var_7987,], output)
mod['func_8010'] = func_8010
mod = relay.transform.InferType()(mod)
mutated_mod['func_8010'] = func_8010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8010_call = mutated_mod.get_global_var('func_8010')
var_8012 = relay.var("var_8012", dtype = "float32", shape = (4, 9, 10))#candidate|8012|(4, 9, 10)|var|float32
var_8013 = relay.var("var_8013", dtype = "float32", shape = (4, 9, 10))#candidate|8013|(4, 9, 10)|var|float32
call_8011 = func_8010_call(var_8012,var_8013,)
output = call_8011
func_8014 = relay.Function([var_8012,var_8013,], output)
mutated_mod['func_8014'] = func_8014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4805_call = mod.get_global_var('func_4805')
func_4807_call = mutated_mod.get_global_var('func_4807')
call_8031 = relay.TupleGetItem(func_4805_call(), 0)
call_8032 = relay.TupleGetItem(func_4807_call(), 0)
output = relay.Tuple([call_8031,])
output2 = relay.Tuple([call_8032,])
func_8041 = relay.Function([], output)
mod['func_8041'] = func_8041
mod = relay.transform.InferType()(mod)
mutated_mod['func_8041'] = func_8041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8041_call = mutated_mod.get_global_var('func_8041')
call_8042 = func_8041_call()
output = call_8042
func_8043 = relay.Function([], output)
mutated_mod['func_8043'] = func_8043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6251_call = mod.get_global_var('func_6251')
func_6252_call = mutated_mod.get_global_var('func_6252')
call_8066 = func_6251_call()
call_8067 = func_6251_call()
output = relay.Tuple([call_8066,])
output2 = relay.Tuple([call_8067,])
func_8071 = relay.Function([], output)
mod['func_8071'] = func_8071
mod = relay.transform.InferType()(mod)
mutated_mod['func_8071'] = func_8071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8071_call = mutated_mod.get_global_var('func_8071')
call_8072 = func_8071_call()
output = call_8072
func_8073 = relay.Function([], output)
mutated_mod['func_8073'] = func_8073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3546_call = mod.get_global_var('func_3546')
func_3548_call = mutated_mod.get_global_var('func_3548')
call_8088 = func_3546_call()
call_8089 = func_3546_call()
output = relay.Tuple([call_8088,])
output2 = relay.Tuple([call_8089,])
func_8092 = relay.Function([], output)
mod['func_8092'] = func_8092
mod = relay.transform.InferType()(mod)
output = func_8092()
func_8093 = relay.Function([], output)
mutated_mod['func_8093'] = func_8093
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8126 = relay.const([[[6.196588,2.315409,7.480828,-6.289028,-2.537407,-3.517585,-3.418382,-7.344580,-2.271711,-7.934648,-1.013812,6.800088],[4.500166,-7.107257,-3.430832,8.346612,0.234086,3.390404,0.387636,-7.865880,-1.156234,9.611317,8.859620,-3.555263],[-0.231432,-0.273385,9.989263,8.737575,-4.237405,-2.571558,0.735692,-0.205449,-3.538415,-2.691751,4.600538,2.403196],[7.622649,-0.238383,-4.621466,-8.897086,-3.176430,-7.869134,-8.620021,-1.575950,1.577718,4.099286,-0.768460,-3.373039],[6.988683,-9.360319,7.881676,8.065327,1.025282,-2.554377,-2.376289,-3.053920,2.918646,2.630880,9.001398,-2.381028],[-8.260857,6.246949,-5.228013,-2.804041,-6.626364,-8.405793,-9.803558,9.942620,-4.998905,-7.373360,-2.195750,2.920300],[7.736166,-3.529657,-7.582874,0.037628,-8.588668,3.255270,-8.647089,9.197515,-5.271118,5.181076,9.831046,-6.924420]],[[-7.277735,-1.440074,-8.445186,-6.204189,-8.847107,-4.006400,5.341040,-8.967401,-2.844646,-4.229622,6.150088,-3.689513],[-5.359797,-6.469397,-0.999863,4.362666,4.106255,6.806924,1.678085,7.134058,-8.369678,-6.620040,-3.722649,-2.707072],[-0.385397,0.057627,-7.474304,0.210658,5.121705,-9.346530,5.853614,-0.121193,1.464694,-6.018408,5.007410,7.943482],[4.783934,-3.236096,-9.138084,-5.197210,1.060319,-4.291529,4.139021,-3.895179,7.066526,-6.443157,-2.090064,-8.739109],[6.289959,-5.185045,-8.652650,-5.865513,4.983573,1.970562,9.454776,-2.708513,-7.151944,-6.419446,1.268135,-7.021831],[9.906859,4.049607,-5.044996,-9.324838,-9.323301,-1.664844,-0.247246,-3.647165,1.783118,1.665692,4.615502,-2.413804],[-7.902382,-0.545468,8.134920,-4.525059,9.843839,0.407107,7.791982,4.555446,-4.905525,3.146812,1.266599,0.280231]],[[4.331467,2.714454,-4.749602,-6.036497,1.571636,-8.987519,-2.110690,5.778978,-6.924240,1.474106,-8.061431,8.496743],[-7.923193,8.421557,-4.793495,8.566615,5.356456,1.939725,-3.563168,-8.050738,-2.132393,-9.452870,-4.777567,-0.934591],[-2.436241,-4.100031,6.002853,-2.119801,-3.916521,7.685014,-5.270692,4.339645,7.374586,0.004111,-7.853686,9.560736],[8.785224,6.265447,-8.408691,-1.971208,1.076022,5.981930,2.757365,8.147092,-1.796998,-2.445733,2.066344,-9.324709],[-8.714060,-7.871995,-1.315973,2.329159,7.871241,8.634457,2.262041,1.788679,-4.984343,1.852647,-3.495098,-8.520033],[7.864831,4.312403,-4.777565,5.668848,1.338318,3.627492,-6.697514,1.957108,-7.612282,2.330709,5.790154,-8.706216],[2.945471,0.514911,-5.939042,-8.250163,-4.416131,-0.265489,-0.883044,-1.454285,4.869143,6.223654,-9.573364,-6.812154]],[[3.224077,-1.421803,-1.805164,-1.704853,-2.202599,3.124897,7.640959,-2.475936,4.328393,-2.903138,3.403634,7.127820],[4.923739,-5.365320,-6.553303,-2.671269,-5.782399,-0.734850,9.359282,-7.801338,-9.033770,4.610209,-0.916060,3.966583],[-0.137841,2.581246,-9.802231,9.820990,5.196534,-8.639487,-8.849988,4.965422,3.445039,0.228429,-6.074669,0.523379],[6.675718,2.691359,-5.108883,4.029671,-1.190235,-4.909299,8.517628,-0.432439,0.385916,-6.188886,3.358101,-8.146837],[0.819022,-5.973436,-6.709564,-1.842856,-1.596723,0.977086,2.744179,7.517356,8.559005,-5.526223,2.838704,3.053077],[5.099080,-5.225933,9.550206,-3.750526,-8.609672,-7.788164,-6.420369,-5.058315,-0.568474,3.505802,-7.771220,-4.944227],[9.126206,2.039975,8.296229,3.472722,-5.621132,-7.542743,8.767545,8.985245,7.152953,-7.872630,-7.450696,-8.572194]],[[-3.744509,-1.547351,-8.992230,-5.942022,-0.803434,0.110754,-7.946447,-7.107487,-1.886816,-4.949504,9.756719,-8.307896],[0.906781,-6.525756,0.258722,4.696803,6.749357,5.119496,-3.951033,0.027961,4.304141,-0.488332,2.941016,-5.561617],[6.775913,7.144819,-5.367248,7.895843,-3.055573,-8.291815,-9.784105,8.198476,5.588361,-4.674723,-6.271680,-4.289895],[-0.693669,2.745902,-3.966981,1.328059,-2.306597,-9.108016,-0.777905,0.282749,-1.298151,7.380459,5.022598,-6.341806],[7.914355,-0.767183,-3.950414,6.123220,6.775789,-4.812917,-9.193021,-3.547950,5.497614,-3.515431,-6.830202,-2.775653],[7.496549,-9.785120,7.548608,5.372915,9.326293,-0.683460,7.268069,-3.561187,3.248327,-9.486827,-1.636361,-5.596026],[1.024056,-1.754474,-4.676147,-8.553080,-7.078278,-4.704982,8.086448,-4.672006,5.716652,-9.387460,-1.202230,-9.818318]],[[-1.333880,8.843583,8.765397,-2.860393,-3.213566,-5.633126,8.963121,-3.108914,9.622652,4.579684,5.268660,3.640599],[5.492803,7.508090,-4.206387,1.900923,-5.221852,-7.265473,-8.780959,-6.950743,0.781657,-6.233467,-9.041304,-0.837769],[8.561289,-8.959750,6.782746,-1.128247,-5.524866,-1.677164,8.598166,0.433761,-4.526738,6.940217,-5.272571,-8.356645],[-1.957544,-6.038012,9.080710,3.102838,5.585137,8.323363,7.932803,8.061828,7.103613,4.046568,9.289116,-4.252224],[-9.093279,-6.546519,-6.644552,-0.971054,8.912111,4.095117,7.178783,-3.514411,-0.813348,4.633628,8.632542,0.925520],[-2.671380,9.742768,1.955472,3.678907,4.059032,-2.435204,-7.722629,-1.618071,-7.254669,2.162338,-1.001687,-0.557534],[8.935302,6.674770,-7.616206,-2.114746,5.715715,-9.748091,4.263710,-9.245584,3.768122,-8.786471,8.592894,-4.655809]]], dtype = "float64")#candidate|8126|(6, 7, 12)|const|float64
uop_8127 = relay.log10(const_8126.astype('float64')) # shape=(6, 7, 12)
uop_8133 = relay.acos(uop_8127.astype('float64')) # shape=(6, 7, 12)
func_6110_call = mod.get_global_var('func_6110')
func_6111_call = mutated_mod.get_global_var('func_6111')
call_8139 = relay.TupleGetItem(func_6110_call(), 0)
call_8140 = relay.TupleGetItem(func_6111_call(), 0)
func_6177_call = mod.get_global_var('func_6177')
func_6179_call = mutated_mod.get_global_var('func_6179')
const_8142 = relay.const([8.001078,-0.687138,0.297623,5.644053,9.599131,3.131102,8.467710,-3.510840,0.723970,-6.515297,-5.841606,7.399933,1.892398,-1.632434,-0.327349,7.526953,-8.615087,8.958333,-2.670180,-6.785640,-8.677599,-8.286785,9.559197,2.460017,9.166632,-4.540421,-0.264823,1.306448,9.213424,-6.120971,1.927610,-0.129349,-6.846893,0.147286,-5.589346,-4.781059,-7.783212,-6.374638,-2.589074,-8.100202,-9.832126,7.557718,-9.981272,-2.369029,9.592439,5.706175,-5.750023,-1.853843,3.564402,3.771062,-9.588654,-0.466525,-0.819764,-6.981081,-0.455382,-0.483799,1.705444,6.840222,-9.699173,-0.723257,-9.880169,0.867490,4.220228,0.795761,8.624002,-5.651999,1.140698,-0.327026,9.730912,-2.260107,2.083315,-9.141717,-4.896191,-0.749515,9.896660,-3.260495,-5.689933,-4.933333,-0.384451,-9.331689,-8.308009,0.775828,8.126527,-6.540851,-3.881536,-7.474951,5.826964,1.129706,-1.099650,3.865715,-2.688346,-4.213374,7.912297,-1.906078,-7.096225,1.821437,4.783479,-3.110222,8.359907,3.945245,1.364026,0.456075,2.806714,3.881845,0.988824,4.457354,-7.479585,-7.082293,3.755900,3.747070,-1.617179,-8.553358,9.651147,-8.056379,6.472077,0.572655,-9.888378,-4.539419,8.934154,9.979249,-3.992507,-8.779544,-3.901002,-0.763819,6.621787,-5.914079,-0.205432,3.928023,3.259970,-1.417715,6.610509,-2.773367,9.441115,8.455966,-3.639291,2.862697,-7.990801,2.607035,-5.348586,-9.503766,-9.131251,3.076662,5.059731,-3.830240,6.382190,-1.918925,-6.618424,-6.864371,5.469580,-4.881401,-7.990608,-2.360350,6.113128,-3.455052,3.747045,0.876896,9.510661,-8.918450,3.398624,6.640874,-5.816515,-7.201287,-1.920699,-4.857951,-6.113997,8.813354,-3.608138,6.023230,-3.058656,4.093751,-9.585599,1.164447,-5.546222,9.302108,-5.046190,-7.620448,-3.185991,-2.319547,6.854550,-8.582075,3.116672,-2.894291,6.921828,-1.716331,6.563338,7.772228,-3.402119,5.732529,-3.303421,7.634180,-5.722343,7.926509,-8.189543,8.386270,-9.695795,0.143509,-3.471364,8.193217,-5.206174,0.426180,-2.165373,3.833445,3.478380,8.287742,4.783503,-3.425724,-7.109733,-1.838782,4.872110,-3.208664,0.407851,-1.628539,8.418184,6.768367,0.822188,-0.951971,1.122538,-0.913661,-5.955388,0.423661,-5.517716,0.063867,0.727569,1.919413,-7.323455,7.794742,-5.916023,5.389258,5.282836,7.332885,2.260100,-0.555022,3.533987,8.697911,-8.685321,-0.134168,-9.406841,5.107889,9.966525,2.785233,-3.733813,-2.647590,-6.963981,3.130181,-5.603592,-9.353547,-6.275106,1.693609,5.268771,0.592355,4.172676,9.516447,-5.033816,1.027695,4.253664,5.987092,9.606328,-0.743252,3.653721,-3.658797,-8.804218,7.900030,5.022107,2.543837,2.516461,7.843249,-0.291968,-4.034939,4.997386,-3.546120,-8.075222,6.397339,2.002969,5.405162,1.993166,7.596997,-1.866647,-9.383311,3.578099,0.267450,-5.708720,0.700171,6.178800,1.696781,8.465294,2.485766,6.551534,-8.218591,1.120600,8.971332,6.484580,-8.112051,4.891559,5.925754,-0.687082,9.795802,7.971861,0.814555,9.866155,-2.703429,9.153536,-5.512634,-0.782809,1.146364,0.330319,-6.189936,0.031212,-6.658880,4.014168,2.227813,-4.870958,-5.167999,0.581418,-8.058805,4.376969,-6.816276,5.489795,0.748186,8.693747,8.908390,-4.080685,1.958149,-1.848059,-1.347799,5.521467,-1.205686,5.130509,-4.650524,-7.762236,9.534239,6.487922,-6.762982,-0.702619,-1.563816,2.455345,-6.659592,0.566223,9.476942,-9.113401,1.185838,-2.385295,8.569825,-0.894011,-0.840171,6.533612,-2.439503,3.776218,5.930167,2.550394,3.581438,6.231348,-6.651945,4.249325,-9.025252,0.781493,-4.642527,6.786354,8.419090,6.841498,0.422452,5.584689,5.509352,-8.021885,0.207329,-4.969191,-0.864095,-0.623270,-1.886888,2.668526,2.115451,-9.458502,-9.316759,-5.171157,0.532360,0.458093,-1.773015,6.592962,-7.687192,-2.210334,4.236539,-6.425319,-8.966156,-3.673128,6.506605,0.242546,-0.169507,-1.255753,-0.905448,6.404308,-6.477282,-7.220862,3.687619,-2.361462,3.783583,5.790181,9.172165,5.339835,7.718805,-1.491298,9.741285,6.948083,1.966140,-7.665085,-6.133188,4.895915,-6.349126,7.531758,4.162220,3.008563,-2.366345,1.987383,8.559405,4.069409,-0.053276,4.530443,-4.535917,-7.016538,-9.552965,6.631558,-6.842358,5.739184,-3.831158,-4.493515,-8.249004,-9.596778,3.324950,-3.889878,-3.686993,0.058025,8.938674,-2.435323,9.946001,7.838929,6.485937,0.847952,8.111179,3.037757,0.979873,-1.301075,6.574432,6.575779,-8.213160,0.558755,6.412221,-4.498762,3.813214,-4.918731,3.336279,-8.987346,-7.180313,-7.298947,-6.551131,3.739386,2.392788,8.895739,3.778574,6.273429,-6.062589,-5.083781,7.286045,-4.632530,-6.061264,-5.225430,-4.072824,-8.638487,-3.089227,4.482201,-0.472985,-6.917182,-4.616656,2.270054,-0.117674,8.610787,1.739158,1.932431,-0.412896,-8.258722,-5.832285,-3.025193,5.066826,-1.514171,5.738932,2.196590,-4.929581,-3.990357,4.206657,-1.908267,-3.638096,3.682623,-8.421253,5.265222,-4.052195,7.967074,-4.920378,-3.616142,-1.613046,0.826879,-8.162202,-8.012342,-2.206197,2.097958,-6.372892,-3.344564,0.549251,-4.183834,-0.367738,9.283608,7.466290,2.201106,-5.224847,-8.259094,-7.012979,5.093779,-0.645535,-3.791884,-1.401152,-0.414797,2.989244,6.784421,-0.794816,-2.012648,1.861360,-7.463957,-7.058332,-9.101545,7.551614,-6.231106,-3.996592,-3.925844,5.153724,-4.776021,-8.866760,-7.625516,2.999612,-7.239736,6.616069,-4.767133,-6.498993,-7.471186,-9.586074,-0.533343,8.872812,-9.587910,-0.488848,-2.219647,1.566582,4.432361,8.199936,1.978655,9.936743,5.272203,3.989417,-6.696487,-9.100723,-9.339207,7.661567,-2.872932,1.515688,2.210384,3.400660,8.532877,-0.400675,-1.305945,-2.248123,-5.559557,4.378131,8.081464,4.127594,0.998381,-2.171311,-8.352575,-0.154229,-7.752613,8.817400,9.894913,6.642005,2.010764,2.603636,3.403542,-5.376122,6.505444,9.923025,-9.860831,-4.457882,-0.702751,5.746702,1.539103,0.435512,-1.737652,0.854871,2.426991,-9.420915,-9.621419,-0.017507,-8.294155,3.326569,3.115765,-7.992740,0.689927,9.281225,1.611181,-0.704500,-2.259290,-7.096504,3.322532,-6.096674,-9.706999,5.245362,-3.524143,-1.820593,-9.880092,-7.482785,9.254566,9.759869,-6.633299,-9.780379,-3.633335,-3.439798,8.195777,6.715669,-3.659134,5.419537,-3.265640,1.306869,1.671360,4.852494,2.320673,4.825289,-2.854398,7.560845], dtype = "float64")#candidate|8142|(630,)|const|float64
call_8141 = relay.TupleGetItem(func_6177_call(relay.reshape(const_8142.astype('float64'), [630,])), 2)
call_8143 = relay.TupleGetItem(func_6179_call(relay.reshape(const_8142.astype('float64'), [630,])), 2)
var_8153 = relay.var("var_8153", dtype = "bool", shape = (5, 14, 9))#candidate|8153|(5, 14, 9)|var|bool
bop_8154 = relay.equal(call_8141.astype('bool'), relay.reshape(var_8153.astype('bool'), relay.shape_of(call_8141))) # shape=(5, 14, 9)
bop_8157 = relay.equal(call_8143.astype('bool'), relay.reshape(var_8153.astype('bool'), relay.shape_of(call_8143))) # shape=(5, 14, 9)
bop_8168 = relay.maximum(uop_8127.astype('int8'), relay.reshape(uop_8133.astype('int8'), relay.shape_of(uop_8127))) # shape=(6, 7, 12)
uop_8172 = relay.acosh(uop_8127.astype('float64')) # shape=(6, 7, 12)
func_8092_call = mod.get_global_var('func_8092')
func_8093_call = mutated_mod.get_global_var('func_8093')
call_8186 = relay.TupleGetItem(func_8092_call(), 0)
call_8187 = relay.TupleGetItem(func_8093_call(), 0)
bop_8198 = relay.subtract(bop_8168.astype('float64'), relay.reshape(uop_8172.astype('float64'), relay.shape_of(bop_8168))) # shape=(6, 7, 12)
func_1072_call = mod.get_global_var('func_1072')
func_1074_call = mutated_mod.get_global_var('func_1074')
var_8211 = relay.var("var_8211", dtype = "float64", shape = (110, 6))#candidate|8211|(110, 6)|var|float64
call_8210 = relay.TupleGetItem(func_1072_call(relay.reshape(var_8211.astype('float64'), [660,])), 1)
call_8212 = relay.TupleGetItem(func_1074_call(relay.reshape(var_8211.astype('float64'), [660,])), 1)
output = relay.Tuple([call_8139,const_8142,bop_8154,call_8186,bop_8198,call_8210,var_8211,])
output2 = relay.Tuple([call_8140,const_8142,bop_8157,call_8187,bop_8198,call_8212,var_8211,])
func_8216 = relay.Function([var_8153,var_8211,], output)
mod['func_8216'] = func_8216
mod = relay.transform.InferType()(mod)
mutated_mod['func_8216'] = func_8216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8216_call = mutated_mod.get_global_var('func_8216')
var_8218 = relay.var("var_8218", dtype = "bool", shape = (5, 14, 9))#candidate|8218|(5, 14, 9)|var|bool
var_8219 = relay.var("var_8219", dtype = "float64", shape = (110, 6))#candidate|8219|(110, 6)|var|float64
call_8217 = func_8216_call(var_8218,var_8219,)
output = call_8217
func_8220 = relay.Function([var_8218,var_8219,], output)
mutated_mod['func_8220'] = func_8220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5823_call = mod.get_global_var('func_5823')
func_5825_call = mutated_mod.get_global_var('func_5825')
call_8224 = relay.TupleGetItem(func_5823_call(), 2)
call_8225 = relay.TupleGetItem(func_5825_call(), 2)
func_6884_call = mod.get_global_var('func_6884')
func_6885_call = mutated_mod.get_global_var('func_6885')
call_8246 = relay.TupleGetItem(func_6884_call(), 0)
call_8247 = relay.TupleGetItem(func_6885_call(), 0)
func_2821_call = mod.get_global_var('func_2821')
func_2822_call = mutated_mod.get_global_var('func_2822')
call_8261 = relay.TupleGetItem(func_2821_call(), 4)
call_8262 = relay.TupleGetItem(func_2822_call(), 4)
output = relay.Tuple([call_8224,call_8246,call_8261,])
output2 = relay.Tuple([call_8225,call_8247,call_8262,])
func_8279 = relay.Function([], output)
mod['func_8279'] = func_8279
mod = relay.transform.InferType()(mod)
mutated_mod['func_8279'] = func_8279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8279_call = mutated_mod.get_global_var('func_8279')
call_8280 = func_8279_call()
output = call_8280
func_8281 = relay.Function([], output)
mutated_mod['func_8281'] = func_8281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1699_call = mod.get_global_var('func_1699')
func_1701_call = mutated_mod.get_global_var('func_1701')
call_8295 = func_1699_call()
call_8296 = func_1699_call()
output = call_8295
output2 = call_8296
func_8303 = relay.Function([], output)
mod['func_8303'] = func_8303
mod = relay.transform.InferType()(mod)
mutated_mod['func_8303'] = func_8303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8303_call = mutated_mod.get_global_var('func_8303')
call_8304 = func_8303_call()
output = call_8304
func_8305 = relay.Function([], output)
mutated_mod['func_8305'] = func_8305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5417_call = mod.get_global_var('func_5417')
func_5419_call = mutated_mod.get_global_var('func_5419')
call_8319 = func_5417_call()
call_8320 = func_5417_call()
func_1866_call = mod.get_global_var('func_1866')
func_1867_call = mutated_mod.get_global_var('func_1867')
call_8340 = relay.TupleGetItem(func_1866_call(), 0)
call_8341 = relay.TupleGetItem(func_1867_call(), 0)
func_1772_call = mod.get_global_var('func_1772')
func_1774_call = mutated_mod.get_global_var('func_1774')
call_8345 = relay.TupleGetItem(func_1772_call(), 0)
call_8346 = relay.TupleGetItem(func_1774_call(), 0)
bop_8372 = relay.multiply(call_8319.astype('float32'), relay.reshape(call_8340.astype('float32'), relay.shape_of(call_8319))) # shape=(660,)
bop_8375 = relay.multiply(call_8320.astype('float32'), relay.reshape(call_8341.astype('float32'), relay.shape_of(call_8320))) # shape=(660,)
func_5082_call = mod.get_global_var('func_5082')
func_5085_call = mutated_mod.get_global_var('func_5085')
const_8377 = relay.const([[-3.955282,4.403151,1.918724,6.957190,9.155714,4.715320,-7.496003,3.303818,1.975747,4.454856,4.468399,-4.322377,9.086413,-6.319202,-6.215635,7.480775,6.434762,7.426316,-9.137629,3.422081,1.916545,3.370462,0.043933,-1.748289,-1.011914,-6.111366,-4.719438,1.034408,9.886131,7.915030,3.012113,-5.600707,2.374265,3.203920,3.105555,-0.201874,-1.581090,-5.936980,-4.840371,-3.719140,-4.052804,-3.395301,3.324300,-0.387228,-6.287576,4.695733,7.398723,-6.808251]], dtype = "float64")#candidate|8377|(1, 48)|const|float64
call_8376 = relay.TupleGetItem(func_5082_call(relay.reshape(const_8377.astype('float64'), [12, 4])), 1)
call_8378 = relay.TupleGetItem(func_5085_call(relay.reshape(const_8377.astype('float64'), [12, 4])), 1)
uop_8385 = relay.log10(const_8377.astype('float32')) # shape=(1, 48)
func_8010_call = mod.get_global_var('func_8010')
func_8014_call = mutated_mod.get_global_var('func_8014')
const_8390 = relay.const([[8.888356,-5.267588,3.171184,0.008337,-1.833661,-3.022463,-2.345826,-1.650980,8.551110,-2.533849,-7.281711,-0.681415,1.394459,-7.825257,-0.992648,-9.080146,-4.466171,-2.188428,2.214974,1.777658,-7.332547,-2.107576,-0.124276,-1.968406,-5.013928,8.609268,-8.679157,9.250667,1.174936,8.365604,0.230456,3.607756,-9.234204,6.442306,5.371916,5.581639,-5.071116,-2.756549,-9.052096,0.389723,0.663480,9.210447,-1.813416,-4.713242,-8.656797,-5.627031,9.754219,6.297632,1.831501,-3.969968,4.984559,-5.623529,5.067591,7.889535,5.603123,-7.617165,3.075231,-5.144130,-7.267567,9.098725,-3.951391,-0.546718,6.665780,-8.067757,-8.081713,-5.223559,-9.265248,1.959074,0.508008,-5.278761,5.823845,-2.307481,-4.798518,2.287517,9.037713,-9.653289,-8.600814,2.924352,-0.729046,-4.002625,-5.746851,3.559821,8.484931,-4.615120,6.869533,4.550715,4.993677,2.885001,7.837264,-0.577849,0.301895,-8.907340,8.295096,1.392931,6.149070,-1.866219,-2.061250,1.604193,0.194190,1.261837,-9.783644,8.137615,-3.388693,9.914812,7.520910,-2.648984,-6.179026,-7.387481,-3.896686,-6.349755,8.159424,-6.605856,-3.219036,8.834247,1.443776,-9.325863,-4.263184,-1.391908,-5.842214,-7.007131,5.288365,-6.081290,5.362240,-0.513195,-8.671235,-4.092742,1.926333,-6.020159,-7.787377,4.418800,-9.193125,9.426706,-8.126615,8.794583,1.081687,-6.081835,-6.796575,1.086726,-1.581448,0.088810,-5.427438,-7.718617,-6.676548,7.063223,0.012378,8.858447,-9.599891,-1.137352,-6.728508,2.724818,7.976370,-1.681631,-9.164832,9.351038,9.038436,2.287513,-6.355298,-0.168185,-8.907216,2.762614,-8.984707,2.864282,6.737883,6.435247,1.758133,-0.251100,3.118493,-1.665918,-0.565406,-8.368293,2.647076,2.850387,6.346831,-8.953546,7.122498,8.521838,-0.926886,-2.547668,-3.808473,0.646754],[-3.904651,-1.297055,7.359946,6.921390,2.775370,0.277112,1.039448,-0.887858,-7.593560,4.447304,8.182688,-5.407971,3.611535,4.704204,-7.978633,-9.854345,-2.509429,-8.653062,1.385208,1.773771,2.885808,5.640924,6.617848,-7.625090,0.338779,2.319917,-1.831418,-0.710981,-5.675306,-7.853737,1.570763,1.426720,8.821479,7.886995,5.150370,8.055951,2.440026,-2.814876,0.176374,4.375779,-7.926824,1.054093,-5.998837,-9.019659,0.838761,2.874019,0.492859,8.615166,2.245321,-1.293226,1.808563,6.740516,-7.123444,-1.090972,-6.965371,-7.829000,-3.726169,-4.735436,-6.769795,-7.141257,0.252913,-7.402729,-0.756258,6.443767,-5.331615,0.039579,-7.810883,-0.151791,-2.246285,-5.008266,-7.830447,5.891810,-2.728416,6.614165,-9.051225,-3.779301,-2.155062,1.031167,-3.926527,-3.220519,-3.161953,7.728062,-0.907762,5.684790,-2.047593,-6.104576,0.791289,1.596271,6.016655,-7.634019,-1.425709,8.964214,0.583299,-2.257665,3.523523,-4.298317,-6.854169,-7.341417,7.128896,5.554416,1.624657,6.324551,6.648418,-7.732124,9.226492,-5.835605,-6.108177,-3.747465,-5.313815,3.771819,5.497171,1.228047,0.927049,7.257138,-6.044305,-7.122833,-6.814960,-4.488386,2.351618,-5.630569,3.933044,-1.080923,-3.100494,2.978751,9.230117,-5.803164,-2.796862,-5.324837,-0.504732,-8.208491,-1.737790,-5.827733,-8.346140,-0.524603,-9.020849,1.728825,-9.604221,3.201246,-2.531847,7.918302,3.241048,6.258372,-8.035469,-6.876871,1.465628,7.025826,7.892318,-1.652755,-8.083348,6.744018,9.378782,-4.861426,7.158245,-5.901850,-3.542415,0.896966,2.083599,6.721910,0.798644,-3.123190,-6.183084,-6.809564,-8.828449,-4.664932,-4.195609,7.401494,-1.485076,2.936782,6.505771,3.749573,3.703902,0.301451,9.032698,-2.482003,-3.845564,9.303200,-2.526302,5.196021,-7.518766,5.136779]], dtype = "float32")#candidate|8390|(2, 180)|const|float32
call_8389 = func_8010_call(relay.reshape(const_8390.astype('float32'), [4, 9, 10]), relay.reshape(const_8390.astype('float32'), [4, 9, 10]), )
call_8391 = func_8010_call(relay.reshape(const_8390.astype('float32'), [4, 9, 10]), relay.reshape(const_8390.astype('float32'), [4, 9, 10]), )
func_6437_call = mod.get_global_var('func_6437')
func_6441_call = mutated_mod.get_global_var('func_6441')
const_8398 = relay.const([-5.111328,7.289564,-4.341873,-1.926014,-1.435133,0.808572,9.434300,7.426117,1.296008,3.835424,-3.037368,3.031139,-2.584416,3.104192,-6.834259,-5.513490,4.763601,-4.495956,-8.514369,9.839429,-7.220656,0.063322,-5.684575,6.714629,7.968408,3.249350,9.233580,-4.706386,1.707094,8.909601,-6.455796,-4.908434,8.494365,6.110834,6.473480,0.009131,1.005317,3.233245,2.236867,-5.322517], dtype = "float32")#candidate|8398|(40,)|const|float32
call_8397 = relay.TupleGetItem(func_6437_call(relay.reshape(const_8398.astype('float32'), [10, 4]), relay.reshape(call_8376.astype('uint16'), []), ), 3)
call_8399 = relay.TupleGetItem(func_6441_call(relay.reshape(const_8398.astype('float32'), [10, 4]), relay.reshape(call_8376.astype('uint16'), []), ), 3)
output = relay.Tuple([call_8345,bop_8372,call_8376,uop_8385,call_8389,const_8390,call_8397,const_8398,])
output2 = relay.Tuple([call_8346,bop_8375,call_8378,uop_8385,call_8391,const_8390,call_8399,const_8398,])
func_8403 = relay.Function([], output)
mod['func_8403'] = func_8403
mod = relay.transform.InferType()(mod)
output = func_8403()
func_8404 = relay.Function([], output)
mutated_mod['func_8404'] = func_8404
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8407 = relay.var("var_8407", dtype = "float32", shape = (6, 13, 11))#candidate|8407|(6, 13, 11)|var|float32
uop_8408 = relay.tan(var_8407.astype('float32')) # shape=(6, 13, 11)
func_6955_call = mod.get_global_var('func_6955')
func_6956_call = mutated_mod.get_global_var('func_6956')
call_8413 = relay.TupleGetItem(func_6955_call(), 0)
call_8414 = relay.TupleGetItem(func_6956_call(), 0)
output = relay.Tuple([uop_8408,call_8413,])
output2 = relay.Tuple([uop_8408,call_8414,])
func_8426 = relay.Function([var_8407,], output)
mod['func_8426'] = func_8426
mod = relay.transform.InferType()(mod)
mutated_mod['func_8426'] = func_8426
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8427 = relay.var("var_8427", dtype = "float32", shape = (6, 13, 11))#candidate|8427|(6, 13, 11)|var|float32
func_8426_call = mutated_mod.get_global_var('func_8426')
call_8428 = func_8426_call(var_8427)
output = call_8428
func_8429 = relay.Function([var_8427], output)
mutated_mod['func_8429'] = func_8429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6251_call = mod.get_global_var('func_6251')
func_6252_call = mutated_mod.get_global_var('func_6252')
call_8504 = func_6251_call()
call_8505 = func_6251_call()
var_8506 = relay.var("var_8506", dtype = "float64", shape = (14, 10, 3))#candidate|8506|(14, 10, 3)|var|float64
bop_8507 = relay.add(call_8504.astype('float64'), relay.reshape(var_8506.astype('float64'), relay.shape_of(call_8504))) # shape=(14, 10, 3)
bop_8510 = relay.add(call_8505.astype('float64'), relay.reshape(var_8506.astype('float64'), relay.shape_of(call_8505))) # shape=(14, 10, 3)
func_7520_call = mod.get_global_var('func_7520')
func_7521_call = mutated_mod.get_global_var('func_7521')
call_8511 = relay.TupleGetItem(func_7520_call(), 0)
call_8512 = relay.TupleGetItem(func_7521_call(), 0)
output = relay.Tuple([bop_8507,call_8511,])
output2 = relay.Tuple([bop_8510,call_8512,])
func_8518 = relay.Function([var_8506,], output)
mod['func_8518'] = func_8518
mod = relay.transform.InferType()(mod)
var_8519 = relay.var("var_8519", dtype = "float64", shape = (14, 10, 3))#candidate|8519|(14, 10, 3)|var|float64
output = func_8518(var_8519)
func_8520 = relay.Function([var_8519], output)
mutated_mod['func_8520'] = func_8520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8041_call = mod.get_global_var('func_8041')
func_8043_call = mutated_mod.get_global_var('func_8043')
call_8537 = relay.TupleGetItem(func_8041_call(), 0)
call_8538 = relay.TupleGetItem(func_8043_call(), 0)
func_6760_call = mod.get_global_var('func_6760')
func_6765_call = mutated_mod.get_global_var('func_6765')
var_8556 = relay.var("var_8556", dtype = "float32", shape = ())#candidate|8556|()|var|float32
const_8557 = relay.const([6.574789,-0.684751,-0.062628,-1.762033,-9.065860,6.284725,-7.552711,9.061308,-2.642206,0.103603,-3.216201,-3.608575,9.602058,-5.919420,-4.277408,-2.182975,-5.787650,5.331758,-8.875137,7.961085,4.748494,7.849462,-4.223352,-1.436989,6.569395,-6.882078,5.307571,3.904695,1.045433,-8.073448,4.541660,7.441592,5.697859,-4.136450,-6.877101,-8.234014,1.488369,3.914869,-6.961619,-9.039823,-4.537634,-4.062807,6.341955,-8.970242,5.716593,-7.255829,1.933554,-9.398991,-4.128580,-7.415859,-2.572192,7.206978,-1.619526,-0.592269,-8.679450,2.649100,1.703367,0.457687,6.863062,6.932453,-7.672964,9.268684,0.964194,-3.999986,6.374235,-2.422107,9.800393,1.681683,2.041970,-4.992722,-6.727058,-3.345562,7.271326,-8.772838,5.484751,6.162072,9.759484,9.686775,-6.075707,-7.002968,-5.593914,-0.305827,-7.077237,-9.189126,4.459515,-5.731747,-1.599054,9.720712,-4.505992,-2.007897,0.272832,2.782098,-0.981876,5.077594,-6.086013,-1.694875,-5.318239,-9.619087,-7.243251,-2.047593,5.202707,0.518922,8.309820,-9.610568,-1.566519,4.975101,-9.420786,-2.487635,8.171082,-3.763955,-2.394992,1.796834,8.712742,8.405916,-5.966363,5.004976,-5.543109,6.385399,1.073299,7.893737,-1.330962,8.914678,0.554564,6.563221,1.612628,-8.180273,4.008364,-5.887926,7.053893,-1.685158,-2.613695,-6.579439,4.100220,-2.828035,1.095079,-8.426243,1.111998,-4.456688,-6.248119,3.966162,1.330749,4.393359,1.275624,7.360709,8.597157,-6.182250,9.987401,8.898644,-9.836682,9.884527,8.177217,9.551577,7.329540,-8.053627,-1.613583,5.633922,6.293124,-7.890778,4.968108,-8.872033,9.513574,-8.850684,8.277832,9.034601,6.899956,9.465560,8.040543,3.473898,-0.119305,-5.638166,-5.269799,1.424232,-7.503357,-6.179670,5.839342,-1.881641,-5.011584,-7.628804,-2.828620,7.298399,-5.705444,4.146453,-3.817509,6.675520,-3.280293,2.343018,2.356175,-3.328381,-8.008288,0.226897,7.322826,-7.390673,-8.461673,6.399271,1.839244,6.660067,2.002846,3.035297,1.385640,8.071012,-4.544091,-8.833715,9.346906,3.931466,-9.553029,0.499735,-6.647150,8.826237,-2.434181,-1.897709,6.348485,-9.841174,-8.756994,-3.924124,-8.406022,7.697236,-1.462778,-6.381178,-4.345197,9.434422,8.803229,6.908993,4.153844,-7.755161,3.824452,3.734215,-8.672924,-1.342274,5.142170,9.890025,-9.239511,-5.311302,-6.193809,-0.282756,-1.848789,9.500581,-7.778164,5.940829,7.642349,-8.322029,-9.164044,-2.124044,3.249834,5.257003,3.658294,-8.798734,0.900938,0.808054,3.613360,8.264232,0.820500,4.311353,8.801044,1.953522,3.545040,5.321573,6.630631,-9.597415,-4.163706,7.400741,-7.086231,3.846337,-6.044674,-1.095770,-3.382479,5.519395,-1.929557,-7.079407,-9.480757,6.942191,3.963653,1.564041,-6.813795,5.716137,-6.432451,-8.279555,-0.709556,-5.092887,-2.987817,-1.363159,-5.903824,3.294643,1.147061,-9.682173,4.081731,7.932314,5.791373,-7.969469,-7.514633,-1.845068,-4.726892,-5.484789,1.330329,-5.421375,9.121134,-3.281535,-3.498779,-1.133931,4.172744,4.715561,-0.559778,7.647096,-2.326483,7.695928,2.612465,7.046304,5.652756,-8.904049,-1.952662,-7.454388,-7.262579,-9.593683,-5.480589,-5.440763,3.761688,6.114105,-8.553320,4.539922,-1.448553,9.015068,8.408134,4.790794,-9.793407,2.396120,-7.034872,-9.400887,-1.101710,-9.139299,-1.308081,4.539959,-8.132992,7.629750,5.085663,0.455791,-3.311917,-9.641070,2.731919,-2.707622,7.501517,0.580792,7.962984,-5.674047,-8.691906,5.946695,0.397088,-4.680154,6.038716,-8.393384,1.849603,-4.340471,8.997732,5.487036,-4.207763,-2.598140,3.199248,-9.282288,-1.608402,-2.189568,2.711274,6.789833,-6.298398,-2.491368,9.547213,2.077271,0.513844,-1.562214,-9.612406,1.192905,1.076719,-6.003698,9.424037,-2.940721,-0.425499,-9.074514,-2.598488,-8.414266,-9.534890,-5.747167,-7.147264,-5.359074,6.325050,-7.706724,-8.439955,-3.108816,9.314639,-3.942514,2.290352,-0.125067,1.514905,1.867061,-6.568970,0.424999,0.931349,6.908254,7.757089,8.131157,-0.085394,-2.522587,3.726021,6.618830,8.815201,-4.622061,-2.817125,-4.986123,8.683871,3.340983,-6.423218,-7.304985,-5.958003,2.372362,8.614380,-2.867988,-6.260311,-4.880022,7.765928,-5.323169,0.783788,-0.537193,-0.719368,-6.696061,-4.391227,2.472068,-0.706641,-4.160460,0.073136,-9.708414,-0.168842,2.730321,8.762815,3.248717,6.820123,5.461126,-0.331647,-7.244438,9.334259,-5.822446,-2.899130,-1.864873,-9.609360,7.010429,-9.251985,-5.137246,-6.936098,6.045895,-7.823922,-6.924979,-8.764021,-1.370934,1.090874,5.903947,1.366660,4.203269,-5.463593,-3.340843,-9.685308,-7.955835,2.462153,-0.482187,-5.386707,6.593825,-3.969246,-3.025258,-4.194816,7.584166,0.570679,-3.660115,-1.232689,-8.429053,4.518320,6.608162,-7.796114,-1.545587,2.324197,2.626618,-8.638073,-1.740356,4.185721,6.404335,3.945260,6.059007,-1.686710,-5.431022,1.587451,3.894219,0.240293,1.332684,-2.548160,-0.461258,-7.013591,-3.321751,-9.382291,5.586290,8.962051,1.006800,3.908985,-1.765867,-2.041988,-0.290831,7.201148,-3.320126,3.260205,7.870656,1.632020,2.832419,5.424384,-5.633337,-2.389902,7.015539,5.610234,-8.603742,-0.122684,-1.936272,8.605369,-7.679479,-0.839722,-4.776169,-3.746050,8.335559,7.285438,0.146788,-6.798805,-0.686868,7.443648,5.332318,8.012321,1.739367,-8.014539,-1.247068,5.401908,-7.780580,-0.890119,1.805077,-2.204564,-4.419372,7.379508,7.193796,-8.285320,-1.496139,5.674954,-8.613380,9.714969,-4.631032,9.340602,-1.583037,-0.721734,-3.196621,0.834490,7.509046,-1.965647,7.007540,-9.405607,-0.897904,-7.623412,-6.615964,-3.622105,-3.588294,6.852695,5.648108,-8.949891,3.072877,-0.639151,3.798948,3.989591,-3.700497,-7.938932,9.767897,-5.539937,0.574880,-6.053195,-9.586267,-1.449439,-0.056590,-0.153663,-3.564994,2.001375,6.133787,6.147650,1.519563,9.011730,2.581421,4.585416,-2.164532,-3.900632,9.895379,-5.223389,9.772883,-2.273138,-4.375340,1.737204,4.984157,-1.049778,-5.163713,2.410517,-0.785980,0.552617,4.837079,-3.209657,-7.105946,8.644885,2.330650,-2.944950,9.663681,-1.912425,1.543286,-5.134602,8.248074,6.405586,7.604519,4.195564,3.678148,1.079098,-4.755321,6.771293,-1.365030,-0.839976,-6.311571,-3.548089,9.846998,8.863177,-2.339936,-8.108647,-1.631943,3.710957,-6.738426,0.235146,-5.654037,-5.433033,-7.287626,1.691861,3.110922,-7.947056,-0.149150,4.231087,0.949076,-8.404273,-4.789026,8.959616,-6.454312,-7.763552,-1.285844,3.944660,-1.810892,5.931549,7.361193,6.218653,-3.491060,-6.558827,-0.805947,-8.846470,-5.230063,0.228177,6.251185,9.599036,-7.614130,8.583167,7.172239,6.832282,-4.034389,-4.126508,6.039604,-9.115600,4.505312,3.918004,-7.744692,6.694536,-7.062673,-2.541623,-1.630020,-0.077637,1.846664,4.581934,-1.350971,0.396615,1.972285,-2.368593,7.845665,-2.787705,7.709992,5.736053,5.534883,-6.066202,3.751817,-3.326946,-4.543420,-4.858809,-8.687676,-3.622090,-1.493473,5.643501,1.162210,9.825716,9.933751,1.535311,0.981869,-7.704934,7.789858,-0.281650,2.985251,-8.735106,9.820676,-6.927912,-2.637541,-7.716074,-1.715628,-7.142735,2.916583,-3.012074,8.563105,1.372072,-1.795368,-8.092238,-4.826903,9.243218,0.332562,5.081518,-7.357241,-9.543179,-3.670519,-2.841291,-6.423391,-5.184474,-8.321603,-8.783969,-3.052555,-4.092453,-4.300793,5.760254,4.647695,-4.159058,-4.610178,-2.823008,7.811432,-5.919901,4.160236,-6.931832,6.351530,-0.016407,-2.445869,-6.821810,-2.704307,4.718953,4.423996,-3.319306,6.126626,3.304491,-8.853931,4.464732,-9.698348,-1.164911,-1.313838,4.183430,0.869842,3.269188,6.545350,3.152573,-5.779417,-5.170049,7.431226,-6.631954,8.065560,-5.516904,5.840908,-7.550620,2.934361,-0.438447,4.106496,-8.430413,7.124122,-8.774542,8.558850,-7.823423,2.640163,1.958868,5.293658,5.065448,0.537334,7.596958,3.819211,-6.991858,-8.513241,-0.499131,-5.917755,-5.221825,-1.824621,-4.137523,-0.766702,8.935946,7.022741,-8.349032,2.176702,-5.974930,-9.744345,9.049531,2.360647,-9.132677,-3.753737,5.945475,1.115929,-0.272871,4.515346,9.106371,-6.409864,8.142127,8.316357,-3.232948,5.907572,9.452976,-6.252390,-4.609212,-1.285852,7.331169,0.905039,-1.715406,1.268954,9.771653,6.874457,-0.236175,1.130360,-7.903063,-9.910627,8.169738,0.018945,4.076102,-3.929639,4.173325,-1.098531,1.669906,3.123410,4.335987,1.610257,6.911170,3.974069,-2.133260,4.649236,-2.897015,2.966160,-4.254809,-1.836323,8.555901,6.514633,-6.553716,5.659907,4.532122,7.561765,7.220733,5.501817,8.475126,9.914048,-4.700660,-9.219273,-9.361584,-0.653012,-8.755630,-5.946811,2.472532,-4.665360,1.522689,-7.598784,6.296955,5.323502,-7.226729,4.551280,-0.253512,9.729314,-4.036021,0.269547,0.297627,3.267716,-6.854953,1.524347,3.545160,6.293247,-3.913038,6.615381,1.102123,-5.955692,-1.945053,-0.328633,-0.300124,6.704326,5.241972,6.628688,-5.547135,2.111863,-9.821564,6.768093,-3.088115,6.476020,-6.564869,-4.252350,2.348019,2.885726,7.313156,-1.632144,4.893877,-0.451306,-2.736330,8.697073,-2.788461,-8.534411,-3.556327,-5.599557,-8.096659,0.827144,-0.698243,7.873510,-3.962256,7.617955,-6.624440,-8.198589,3.977052,-4.135619,-0.826586,1.585565,-5.328276,-0.250412,8.430252,-7.295345,-5.227678,-2.546150,2.984260,-3.259049,-4.549128,6.648361,-9.208224,-7.659199,-0.203866,1.087612,-5.191710,1.410093,-0.718746,8.521929,-9.540406,-4.631644,2.877366,-1.532247,-2.483430,2.607746,-4.329218,7.305541,-5.431955,8.747044,-3.609163,6.347706,8.652713,-3.486748,-3.260020,8.067546,4.355982,2.064922,-4.656988,1.643564,8.646747,6.713998,-7.537068,-2.897997,-9.439778,6.029920,-3.118131,6.598796,-2.617940,-2.964275,-4.025726,8.521962,4.619774,-2.813280,-0.650991,-1.996649,-7.696861,-0.816323,-7.406404,5.806624,-3.727992,6.805044,-3.127478,-6.344420,-8.955011,3.865376,-3.573276,-0.641037,-4.577515,4.288940,2.700986,-8.638489,5.830348,-8.893821,9.714260,-9.996895,-6.919651,-9.132058,-2.191700,2.758644,5.305973,1.639727,-3.640818,9.389308,6.197665,3.193277,-8.140056,-1.715112,-4.190729,3.983359,8.997474,2.392629,-9.051668,-2.944631,-8.045734,5.039371,-2.742611,0.886690,6.067441,5.773321,0.138735,1.531562,-6.013769,3.981934,-2.100468,-4.615045,-0.788094,2.203613,-3.030725,-9.929944,-5.439334,-9.826342,-9.491262,9.562110,2.731306,-9.864409,5.193651,-1.899103,-4.561202,4.053417,3.244163,-0.558421,7.741865,-3.071178,2.750361,2.184463,-3.776407,-9.426962,4.591197,-9.895173,9.098028,-6.661917,-4.639971,-6.620528,-5.475494,5.482334,-2.290377,-7.199228,-6.772335,7.501510,3.539036,4.024893,-5.291878,-4.416397,5.539184,-5.006407,-0.342327,6.466566,-1.446686,2.343043,4.748240,-8.646806,-0.077982,-3.170129,2.113204,-0.160287,-3.976923,-8.979739,5.317724,-7.122597,-8.800622,2.061527,4.079820,3.853920,9.406848,1.484704,-6.623521,-4.334467,-6.372552,5.915716,-4.882675,-3.381163,9.998805,0.841272,4.983927,9.463190,6.222145,-3.016077,9.297530,-4.805454,-9.672608,-0.519252,8.503930,2.189012,5.524597,4.761253,-8.385830,-9.281293,-1.935672,0.926488,1.708369,6.233153,3.945735,-7.732952,-7.710066,2.376948,-2.140284,8.419366,-5.552512,3.794095,6.605790,5.076384,-2.774464,7.737848,-9.691043,-7.817516,7.491400,-7.103829,-1.311556,5.046163,5.616815,3.909874,-3.953260,1.916227,-5.841351,-3.379934,0.155079,7.236966,7.351737,-4.694488,4.010068,-6.873719,7.662575,-6.071011,7.755621,-7.242693,-3.737520,-6.867436,-4.632329,-9.110880,-9.273825,-2.084724,-1.649730,0.370443,-8.909084,7.751547,-9.370011,-1.277975,-5.735359,8.675492,-1.486904,-4.505826,-8.194076,-3.011685,-2.527815,4.063851,9.719693,-5.588234,1.675420,-1.171099,-3.818037,-8.365816,3.088809,-0.778413,4.889769,6.562130,1.953889,-5.073095,-7.293839,-0.832069,6.864608,7.915364,0.168711,0.289009,7.918541,-2.150743,6.159772,-6.611389,3.002269,3.443282,6.450490,-3.016217,-8.644553,-2.685131,5.293601,-2.869603,-3.281593,-7.990553,9.236137,-5.012093,4.178994,-1.183757,2.837236,7.594558,9.663762,1.613845,6.471583,8.564475,7.623514,-8.688748,-1.458978,2.477589,-7.070284,-6.771455,5.015041,-8.589398,0.390576,-4.411561,9.125814,7.269974,-4.206184,0.236643,2.553463,4.706455,-2.306537,6.773025,-2.717113,8.169674,-8.822250,4.501747,5.979220,-6.847427,-5.430414,4.678359,-7.864531,8.353055,-1.577617,-3.752481,6.327887,-8.984514,9.377138,5.526999,-3.307277,-5.476891,-0.516143,5.052898,2.507660,4.549315,-7.966496,-1.001922,1.629113,1.178299,-2.377502,0.206019,3.351181,-3.670025,-1.571293,1.688872,-5.953940,6.569211,7.114788,-9.635429,8.011249,-2.551597,9.639824,-1.170866,-3.207885,-2.151417,-8.025633,1.688584,1.122553,-1.737401,8.945772,-6.239787,-7.453062,-6.979507,-5.869647,-2.786500,-5.856468,6.827868,1.821110,7.081257,3.927747,2.106094,6.911405,-1.107577,-3.159940,-3.290134,-6.490734,7.171236,1.015611,-0.435061,8.685513,2.656087,5.192921,1.855041,-8.529964,5.889933,-8.371501,1.649813,6.607814,-3.607884,9.275657,4.294882,5.819936,-8.978074,-7.781455,8.127335,5.665973,-7.396920,0.438501,-9.046969,-5.930132,-1.216957,-1.208492,-6.827121,7.610139,5.827195,-4.609444,-4.756906,4.264432,-5.001140,9.202158,7.032267,-0.596652,7.903171,5.770147,8.617272,5.540479,-7.299274,-3.845909,2.079417,2.845674,-4.139541,4.340634,-6.670629,2.031479,3.241699,-4.148317,5.832067,-7.567636,-4.953843,-2.482014,0.404617,8.531299,1.645821,-4.334478,5.424913,7.333616,4.814239,-8.245568,-3.449707,-8.710965,-3.245906,-2.830418,0.495534,6.632558,3.436582,-7.509479,3.696481,-8.336185,9.743357,-0.931830,5.982967,-9.098068,-3.021416,-2.140412,-4.687124,-9.587725,9.306104,-8.741857,3.652708,-8.027443,-9.444019,3.903262,5.417063,-3.804553,0.076331,1.059392,9.251379,7.264941,0.551570,-7.981705,5.283074,-2.214423,4.407093,6.069923,-1.864892,4.366626,-0.834995,5.978332,0.560864,-6.126628,-6.792624,9.460288,6.121083,3.799981,-8.303146,-5.744444,3.451793,-5.860581,-6.886782,1.425351,5.793610,0.335956,-6.156466,6.725057,-7.324136,-8.061946,-2.822038,-3.286242,-3.429416,-8.691079,5.021636,-2.344383,6.533867,-6.958582,1.142356,4.882334,-8.479835,-1.317438,1.910894,-7.385707,-5.499698,-7.114531,-1.257332,-3.045217,-9.413442,9.877435,-6.429680,-7.147927,-9.262427,2.633370,4.317293,8.959288,1.514899,-8.694816,0.978811,-3.374696,8.623930,-7.607633,-3.356910,-7.037493,9.877216,-0.408532,-5.876908,-5.967532,2.729324,-3.168755,-3.774071,2.883316,2.708793,-2.451888,-6.047983,-6.674449,3.847151,-2.504275,-1.786009,-5.316905,-2.514959,7.740227,-6.395682,-5.109050,9.234684,-0.518733,-4.525731,7.812081,2.304138,-1.105072,-4.878491,7.062113,-7.322518,7.754065,-6.014357,-2.457086,9.347022,2.556704,5.906439,3.850348,-3.087488,-1.340338,9.836379,8.721230,5.561678,5.208033,-4.190523,4.620704,-8.655073,1.438991,6.020137,2.883638,9.869798,-9.286096,-8.017002,3.110837,5.770046,4.394522,2.094190,7.587733,1.696930,5.858284,4.929982,-4.687610,6.677288,-4.340398,4.014440,1.376325,4.396702,-2.358418,-5.878734,-7.530680,3.429746,-0.662203,-0.589090,-8.507733,-0.757913,-3.696461,-0.227897,9.877999,-9.368143,-2.261245,-1.679952,2.088738,5.100658,6.820347,3.924706,9.449529,-0.760346,-4.451737,9.013986,-8.869794,-0.067831,9.187512,4.468769,-5.835668,6.433657,0.011702,2.059590,6.970700,-3.718872,-9.744520,-4.428140,7.586625,1.767426,-9.797609,-1.825136,8.533449,8.666406,6.102520,2.060950,-7.537987,9.475260,-2.258818,-8.944587,1.958559,2.096977,5.354327,-9.825674,-0.770769,-7.639244,-2.537199,2.500460,3.344873,3.147293,3.551120,-0.563394,0.678174,5.104884,-9.986406,0.657492,0.619531,2.115917,-3.781037,5.634437,-2.449231,0.617705,-7.025017,-7.055433,8.438726,-0.112534,-1.529639,2.704519,-0.518329,-7.246856,-3.811487,3.136755,-3.839726,-1.405091,-6.712321,9.378606,8.785994,5.640975,3.230569,8.564560,4.823933,2.253312,3.665912,6.225643,2.171208,-0.022318,5.989155,9.548326,4.368281,3.173477,2.361782,-1.118460,5.338825,-1.815992,7.388587,-8.516277,-8.277348,-8.710162,-9.644395,4.001770,0.523624,1.171461,2.553318,-7.327157,5.273592,-9.393625,-2.453754,0.165748,6.491925,-1.944110,-9.528684,5.163695,-0.117812,-0.237827,-2.088251,4.463490,2.028735,-9.433628,5.937094,4.051764,-5.206529,-9.053944,-6.806409,7.673242,9.617803,-4.418081,-1.535374,-6.312292,-9.001563,9.063142,1.730859,-9.475213,7.744276,0.866087,-3.212054,6.453524,9.615886,2.249712,-5.325694,9.834649,6.295507,1.854620,8.493024,-9.855084,-6.800985,-0.812277,-1.740180,-8.313615,-6.323657,9.812158,5.605496,2.267983,-3.965129,-2.121870,6.903329,-9.689487,-1.950799,-6.003724,-1.507216,5.798860,-6.008972,-5.817164,-7.662862,8.970776,-1.929835,6.182842,3.226402,-4.015296,-7.531784,-4.418333,-2.565331,-0.486606,-8.826815,8.138211,5.672535,5.615827,-8.358364,9.646067,0.325365,7.323603,9.288243,7.745756,-5.028860,-7.814384,-5.967272,-2.666325,8.060856,8.209219,-2.050999,-0.972168,9.715395,5.130325,2.652269,0.524639,7.147897,2.478297,9.567080,-7.958077,-3.404220,-6.565035,3.258888,-4.036785,5.779405,8.942134,-1.574495,-2.592600,3.333464,8.754805,-2.824901,9.340994,-8.810085,-2.013791,5.274403,2.462981,7.348630,9.186283,-7.659041,6.381288,9.106599,3.341005,3.164055,-7.386729,-3.903164,6.452009,-2.556854,-3.704712,4.666757,-6.879306,6.488679,2.535259,-1.936101,-0.765425,-2.736131,-3.455909,-9.626635,2.750679,5.134966,-4.653935,4.466759,-7.633469,7.442615,-7.390769,7.051274,4.590795,-3.607897,3.046862,9.167271,-0.188932,-2.452529,-8.280885,-5.494289,-3.763105,6.335923,4.044074,-7.483061,-1.628042,9.344766,1.529193,8.459687,7.727162,2.634460,-5.523878,-0.839082,-1.334852,-6.849708,5.013744,-1.285523,-0.989610,6.104604,-7.212366,-7.232634,4.903251,-4.132916,-3.707057,2.368781,1.989956,9.261463,-6.514412,-1.886335,-1.046596,4.062558,-3.596668,9.311871,3.945270,-3.128800,-6.487173,-5.476726,-4.640438,-2.661456,-5.137529,5.581631,-5.228106,-4.825581,-7.092777,5.370600,0.488243,0.591469,-7.691946,-5.715702,8.650080,-8.205267,3.370612,5.832643,0.257194,3.962928,1.158105,6.302407,0.686693,-4.446327,7.373614,-9.495504,-1.030544,-0.710955,-7.975766,-4.068062,8.682730,7.867428,0.004342,9.668924,2.924033,7.030847,9.218692,-4.864250,-7.215761,-3.929523,9.087512,-5.522131,-3.230139,-3.984603,5.374990,-6.726401,1.320492,-3.100577,-4.087693,9.515194,-1.332058,9.091187,-6.080716,-1.675504,-0.194019,-6.984243,2.217457,-4.511014,7.694718,-7.094500,2.942485,2.612859,-2.123239,-8.735013,2.249295,-7.730103,-1.731992,1.937709,-4.091567,0.341495,5.180374,-2.982595,-9.610053,-9.605964,8.548085,-4.476126,-2.149518,-4.296432,0.166270,8.700304,-9.846381,-1.693919,7.521470,9.141221,9.576040,5.692826,-8.509441,4.219687,-1.375404,-7.898572,-3.927984,-6.475520,7.904203,-7.243712,5.827581,2.670227,4.211644,-2.073503,-1.258001,-8.012383,-4.383828,-3.306683,6.144997,0.454824,4.150376,-2.918779,2.808428,-1.237691,6.334945,5.678068,3.390248,-4.350756,6.118694,6.548756,1.111327,9.675441,8.754843,-6.966344,-8.798343,-0.340625,-1.382076,0.110820,-6.372336,-4.407550,-3.831771,-8.337130,-8.606879,5.373925,-8.553118,7.771688,-5.245211,4.903700,-8.673625,0.212542,-6.105986,8.956607,-1.908247,-0.606803,-2.533847,-5.471726,-8.127090,-1.234391,4.383464,-8.841620,0.031277,2.558239,4.132676,9.372633,9.891356,-8.597760,6.099697,-5.815072,-9.058283,-8.612665,1.903864,-6.624283,9.499481,-7.835676,-0.542164,-3.634604,4.519821,9.698755,5.839629,-1.474539,4.635338,-9.618589,-3.387409,-4.854090,2.332847,-1.128460,4.930503,-0.912109,1.710579,-1.411083,-2.523111,7.594761,-4.856631,-2.333810,-5.035569,-5.277908,6.816288,-6.748078,5.126285,-3.154534,2.564847,4.189028,0.048566,1.716965,5.042131,-8.945592,9.435522,1.827467,3.893399,5.537771,-4.955437,6.484087,-3.281090,-3.956567,1.142677,-5.552640,8.354479,7.708345,3.706422,5.143536,-0.358641,-1.661678,-4.675075,-6.637569,9.197066,8.366991,6.185723,5.625512,-7.708223,-0.320571,0.681543,-0.593358,-2.934898,5.542050,-7.243818,-5.159140,3.440818,-8.440921,-0.988289,3.690839,-2.819702,-1.247092,3.940779,7.164078,6.711185,7.313926,-8.050689,6.440547,-0.980529,1.606895,5.224034,9.962954,-1.958069,-4.039865,-4.984570,0.797892,-2.050667,1.538026,5.668901,2.732946,-6.505478,9.445276,-6.370148,7.775326,-0.883964,-1.814740,4.902270,-6.274275,0.789242,-6.046878,-5.439956,9.683578,5.587081,-6.822317,7.870689,1.829612,5.612323,6.235469,8.370841,-6.317732,6.426725,-7.694624,-3.828276,-0.380758,2.281212,-5.535974,-7.091730,4.784227,-9.453484,1.624064,9.882161,7.501290,4.310351,4.825200,4.914304,-3.620914,-8.492826,0.619752,6.344509,-2.024844,3.547703,-2.863900,-9.191937,2.893242,-2.800580,6.782512,-2.221261,-5.131330,6.133663,-1.281891,3.646730,6.159394,5.532510,-7.181965,-4.532832,-8.294816,8.489371,-6.033324,-4.955101,-3.850181,-6.628536,-2.007599,-2.288310,-2.664969,-6.974381,3.299337,-9.888793,5.955514,6.240720,-7.488839,9.883478,7.174166,-5.603771,-8.651866,-6.785355,7.182753,-1.285505,2.459473,-4.734102,-6.098185,-1.318730,-1.909665,-5.893947,0.530958,0.258201,-8.411517,-6.944959,-9.065784,6.768339,4.866269,3.431974,-1.233393,-9.961691,0.325500,6.868913,-5.388789,6.222967,-5.480353,-6.566617,2.520876,-1.117811,-7.900419,-0.768477,2.932671,-3.355782,4.539236,2.377719,8.932715,3.416351,-9.443191,9.134899,-5.290597,7.010903,-6.377798,-6.571150,6.183791,2.032118,1.503544,-5.744401,2.060491,0.200264,1.882483,-7.490259,4.794171,9.030727,7.876833,-7.234286,9.896536,-3.743507,7.742819,5.695840,1.179700,1.799846,-6.619802,9.453134,-8.701174,-4.879445,6.628810,-4.886662,-6.440848,-3.450562,-3.672016,-7.779117,-6.699343,-9.995046,2.186636,2.478074,-7.414653,-9.431976,-9.179392,3.979493,-5.762730,-7.394251,-5.539701,-2.135085,-7.772139,-5.430804,3.624939,-7.394471,-5.987831,-1.550711,8.073904,-1.718673,-5.219163,-9.438844,3.352101,8.241643,-6.736168,0.795382,-3.675678,1.885345,8.008732,-9.640796,-8.356911,-0.370843,5.753839,6.041561,-2.255840,-5.483253,-9.349634,-8.342035,-5.921206,9.579220,9.488090,-9.228985,1.929778,9.123879,0.807386,6.546433,-7.909850,-0.503455,-4.911960,-7.005312,-5.593771,3.174418,-6.387155,-7.606748,7.021470,9.243577,-6.827304,8.860211,4.701811,-8.784842,-3.755901,1.361467,-5.556710,-9.425697,3.633679,9.584209,0.732027,-8.891412,-5.863294,9.722616,-2.757960,1.112306,-4.696659,-8.596081,7.562194,-0.173128,5.437061,-2.075919,-1.046993,-0.842271,-2.413638,8.176096,2.766029,5.551914,-2.022887,7.500413,5.633133,0.224010,2.569621,0.698434,9.132300,-9.968619,8.536456,-0.300267,0.246570,5.551327,-2.932786,-2.132073,-9.129998,-6.352979,-2.532335,-1.479533,-9.325772,5.415058,4.407082,-5.332981,-3.476528,1.971212,0.780733,2.930099,2.936942,-2.219704,4.745685,4.193323,-8.677816,-9.484031,8.700755,-5.409706,6.183225,-9.156018,8.642739,4.746880,0.210233,0.831685,-6.804041,-5.583447,-2.863087,6.020289,7.718835,1.165516,-7.883123,-1.891352,-9.082815,0.032833,-1.321146,0.983911,-3.417983,8.382781,8.059281,5.585506,-4.543423,3.695253,-4.555080,-2.688878,0.934618,-1.994163,-7.156122,-0.989420,0.785324,-5.441466,6.981930,6.014480,-5.021242,2.677028,-2.734289,1.103267,-3.981800,2.202547,4.125477,-7.101701,2.042222,2.042334,8.751609,5.815082,9.130055,-8.389030,8.861088,3.891330,7.269703,6.229491,5.296065,-7.509485,-3.642832,-1.201237,6.236427,-6.402273,9.551150,-1.631883,4.759162,-2.108548,4.073294,9.508210,-2.374566,-1.618581,-1.281661,0.132479,-6.871740,6.790966,6.590027,7.696710,3.867057,-0.041847,4.733062,9.567815,-0.321412,6.080371,4.763378,-8.328210,0.979589,0.040108,-0.543782,2.651576,-2.694690,4.533826,6.754310,-4.221576,6.130012,2.457518,-1.376687,9.020089,-2.137391,-3.770902,-4.359346,-5.159643,-9.792804,6.633696,-8.040629,2.909544,5.301856,1.227513,3.565720,3.750334], dtype = "float64")#candidate|8557|(2400,)|const|float64
var_8558 = relay.var("var_8558", dtype = "bool", shape = (264,))#candidate|8558|(264,)|var|bool
call_8555 = relay.TupleGetItem(func_6760_call(relay.reshape(var_8556.astype('float32'), []), relay.reshape(const_8557.astype('float64'), [2400,]), relay.reshape(var_8558.astype('bool'), [11, 4, 6]), ), 1)
call_8559 = relay.TupleGetItem(func_6765_call(relay.reshape(var_8556.astype('float32'), []), relay.reshape(const_8557.astype('float64'), [2400,]), relay.reshape(var_8558.astype('bool'), [11, 4, 6]), ), 1)
output = relay.Tuple([call_8537,call_8555,var_8556,const_8557,var_8558,])
output2 = relay.Tuple([call_8538,call_8559,var_8556,const_8557,var_8558,])
func_8560 = relay.Function([var_8556,var_8558,], output)
mod['func_8560'] = func_8560
mod = relay.transform.InferType()(mod)
mutated_mod['func_8560'] = func_8560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8560_call = mutated_mod.get_global_var('func_8560')
var_8562 = relay.var("var_8562", dtype = "float32", shape = ())#candidate|8562|()|var|float32
var_8563 = relay.var("var_8563", dtype = "bool", shape = (264,))#candidate|8563|(264,)|var|bool
call_8561 = func_8560_call(var_8562,var_8563,)
output = call_8561
func_8564 = relay.Function([var_8562,var_8563,], output)
mutated_mod['func_8564'] = func_8564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8279_call = mod.get_global_var('func_8279')
func_8281_call = mutated_mod.get_global_var('func_8281')
call_8578 = relay.TupleGetItem(func_8279_call(), 2)
call_8579 = relay.TupleGetItem(func_8281_call(), 2)
func_3450_call = mod.get_global_var('func_3450')
func_3452_call = mutated_mod.get_global_var('func_3452')
call_8587 = relay.TupleGetItem(func_3450_call(), 0)
call_8588 = relay.TupleGetItem(func_3452_call(), 0)
output = relay.Tuple([call_8578,call_8587,])
output2 = relay.Tuple([call_8579,call_8588,])
func_8614 = relay.Function([], output)
mod['func_8614'] = func_8614
mod = relay.transform.InferType()(mod)
mutated_mod['func_8614'] = func_8614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8614_call = mutated_mod.get_global_var('func_8614')
call_8615 = func_8614_call()
output = call_8615
func_8616 = relay.Function([], output)
mutated_mod['func_8616'] = func_8616
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8644 = relay.var("var_8644", dtype = "uint32", shape = (5, 7, 10))#candidate|8644|(5, 7, 10)|var|uint32
var_8645 = relay.var("var_8645", dtype = "uint32", shape = (5, 7, 10))#candidate|8645|(5, 7, 10)|var|uint32
bop_8646 = relay.greater_equal(var_8644.astype('bool'), relay.reshape(var_8645.astype('bool'), relay.shape_of(var_8644))) # shape=(5, 7, 10)
const_8654 = relay.const([[[True,False,True,True,False,True,True,True,False,True],[False,True,False,True,True,False,False,True,True,False],[False,False,True,True,True,True,True,True,False,True],[True,True,True,True,False,True,False,False,False,False],[True,False,True,True,False,False,True,False,False,False],[False,False,False,True,True,True,True,False,False,True],[True,False,False,False,True,True,True,True,True,True]],[[True,False,True,False,True,True,False,False,True,False],[False,True,False,False,True,True,True,False,True,True],[True,False,True,True,False,False,False,True,True,True],[False,False,True,False,False,False,True,True,False,True],[True,False,False,False,False,True,True,True,True,True],[True,False,True,False,False,False,True,False,True,False],[False,False,True,True,False,True,False,True,False,False]],[[False,False,True,True,False,True,False,True,True,False],[False,False,False,False,False,False,False,True,True,True],[False,True,True,True,False,True,False,False,True,True],[True,True,True,False,False,True,True,True,False,False],[True,True,False,True,True,True,False,True,False,True],[False,False,False,False,True,False,True,False,True,False],[True,False,False,False,False,False,True,True,True,True]],[[False,False,False,False,False,True,True,False,False,False],[True,True,False,True,True,False,True,False,False,False],[True,True,False,True,True,False,True,False,False,True],[True,False,True,False,False,True,True,False,True,False],[False,False,True,False,True,False,False,True,False,False],[True,True,True,False,False,False,False,False,False,False],[True,False,False,False,False,True,False,True,True,True]],[[True,True,False,False,True,True,False,False,False,True],[False,False,False,False,False,True,False,False,True,True],[True,False,True,True,False,True,False,False,False,True],[False,False,False,False,False,False,True,True,False,False],[False,False,False,False,False,False,True,True,False,False],[False,True,False,True,True,True,False,True,True,False],[True,True,False,True,True,True,True,True,False,True]]], dtype = "bool")#candidate|8654|(5, 7, 10)|const|bool
bop_8655 = relay.logical_or(bop_8646.astype('bool'), relay.reshape(const_8654.astype('bool'), relay.shape_of(bop_8646))) # shape=(5, 7, 10)
output = bop_8655
output2 = bop_8655
func_8658 = relay.Function([var_8644,var_8645,], output)
mod['func_8658'] = func_8658
mod = relay.transform.InferType()(mod)
var_8659 = relay.var("var_8659", dtype = "uint32", shape = (5, 7, 10))#candidate|8659|(5, 7, 10)|var|uint32
var_8660 = relay.var("var_8660", dtype = "uint32", shape = (5, 7, 10))#candidate|8660|(5, 7, 10)|var|uint32
output = func_8658(var_8659,var_8660,)
func_8661 = relay.Function([var_8659,var_8660,], output)
mutated_mod['func_8661'] = func_8661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1365_call = mod.get_global_var('func_1365')
func_1366_call = mutated_mod.get_global_var('func_1366')
call_8684 = relay.TupleGetItem(func_1365_call(), 2)
call_8685 = relay.TupleGetItem(func_1366_call(), 2)
output = call_8684
output2 = call_8685
func_8702 = relay.Function([], output)
mod['func_8702'] = func_8702
mod = relay.transform.InferType()(mod)
output = func_8702()
func_8703 = relay.Function([], output)
mutated_mod['func_8703'] = func_8703
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8733 = relay.var("var_8733", dtype = "float64", shape = (15, 1, 10))#candidate|8733|(15, 1, 10)|var|float64
uop_8734 = relay.cosh(var_8733.astype('float64')) # shape=(15, 1, 10)
uop_8738 = relay.log(uop_8734.astype('float64')) # shape=(15, 1, 10)
output = uop_8738
output2 = uop_8738
F = relay.Function([var_8733,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8733,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

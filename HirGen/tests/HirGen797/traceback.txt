==========mod==========
#[version = "0.0.5"]
def @func_9579() -> Tensor[(15, 3, 3), float64] {
  @func_8084() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_2753() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(80), float32], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) {
  %0 = @func_986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %1 = @func_2456() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) */;
  %2 = %0.0;
  %3 = cast(%2, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %4 = reshape(%3, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %5 = @func_470(%4) /* ty=(Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */;
  %6 = %5.1;
  %7 = cast(%6, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %8 = reshape(%7, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %9 = @func_1722(%8) /* ty=(Tensor[(672), uint8], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
  %10 = cast(%6, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %11 = reshape(%10, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %12 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %13 = @func_2060() /* ty=Tensor[(15, 3, 3), float64] */;
  %14 = %1.2;
  %15 = @func_2033() /* ty=Tensor[(15, 3, 3), bool] */;
  %16 = %9.3;
  %17 = @func_82(%11) /* ty=Tensor[(15, 3, 3), float64] */;
  %18 = %12.1;
  (%2, %13, %14, %15, %6, %16, %17, %18)
}

def @func_4765() -> (Tensor[(15, 3, 3), float64],) {
  %19 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %20 = %19.1;
  (%20,)
}

def @func_5787(%var_5780: uint16, %var_5781: Tensor[(12, 9, 3), uint16]) -> Tensor[(12, 9, 3), uint16] {
  %21 = cast(%var_5780, dtype="uint16") /* ty=uint16 */;
  %22 = cast(%var_5781, dtype="uint16") /* ty=Tensor[(12, 9, 3), uint16] */;
  add(%21, %22) /* ty=Tensor[(12, 9, 3), uint16] */
}

def @func_7252() -> (Tensor[(14, 10, 8), float32], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) {
  %23 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 10, 8), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 8), float32] */;
  %24 = asin(%23) /* ty=Tensor[(14, 10, 8), float32] */;
  %25 = cast(%24, dtype="float32") /* ty=Tensor[(14, 10, 8), float32] */;
  %26 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(14, 10, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 10, 8), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 8), float32] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %29 = @func_6846() /* ty=Tensor[(7, 16, 13), float64] */;
  %30 = cast(%29, dtype="float64") /* ty=Tensor[(7, 16, 13), float64] */;
  %31 = divide(%27, %28) /* ty=Tensor[(14, 10, 8), float32] */;
  %32 = acos(%30) /* ty=Tensor[(7, 16, 13), float64] */;
  %33 = @func_2532() /* ty=Tensor[(15, 3, 3), float64] */;
  (%31, %32, %33)
}

def @func_2182() -> Tensor[(15, 3, 3), float32] {
  %34 = @func_2091() /* ty=Tensor[(15, 3, 3), float64] */;
  %35 = cast(%34, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
  erf(%35) /* ty=Tensor[(15, 3, 3), float32] */
}

def @func_9115() -> Tensor[(15, 3, 3), float64] {
  %36 = @func_3204() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %36.1
}

def @func_6887(%var_6853: Tensor[(14, 7, 6), int32]) -> (Tensor[(14, 7, 6), uint16], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) {
  %37 = @func_4476() /* ty=(Tensor[(14, 7, 6), int32],) */;
  %38 = %37.0;
  %39 = cast(%var_6853, dtype="uint16") /* ty=Tensor[(14, 7, 6), uint16] */;
  %40 = shape_of(%38, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%38, dtype="uint16") /* ty=Tensor[(14, 7, 6), uint16] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %43 = @func_2853() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */;
  %44 = %43.3;
  %45 = cast(%44, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %46 = bitwise_or(%41, %42) /* ty=Tensor[(14, 7, 6), uint16] */;
  %47 = @func_3597() /* ty=Tensor[(7, 16, 13), float64] */;
  %48 = cos(%45) /* ty=Tensor[(12, 14, 4), float32] */;
  %49 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  (%46, %47, %48, %49)
}

def @func_1697() -> Tensor[(15, 3, 3), float64] {
  %50 = @func_986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %50.1
}

def @func_4273(%var_4201: Tensor[(16, 9, 6), float64], %var_4239: Tensor[(16, 9, 6), float64]) -> (Tensor[(16, 9, 6), float64], Tensor[(16, 9, 6), bool]) {
  %51 = cast(%var_4201, dtype="float64") /* ty=Tensor[(16, 9, 6), float64] */;
  %52 = log(%51) /* ty=Tensor[(16, 9, 6), float64] */;
  %53 = cast(%52, dtype="float64") /* ty=Tensor[(16, 9, 6), float64] */;
  %54 = cast(%var_4239, dtype="bool") /* ty=Tensor[(16, 9, 6), bool] */;
  %55 = shape_of(%var_4201, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%var_4201, dtype="bool") /* ty=Tensor[(16, 9, 6), bool] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %58 = log2(%53) /* ty=Tensor[(16, 9, 6), float64] */;
  %59 = not_equal(%56, %57) /* ty=Tensor[(16, 9, 6), bool] */;
  (%58, %59)
}

def @func_11324(%var_11315: Tensor[(5, 12, 10), float64]) -> Tensor[(5, 12, 10), float64] {
  %60 = cast(%var_11315, dtype="float64") /* ty=Tensor[(5, 12, 10), float64] */;
  exp(%60) /* ty=Tensor[(5, 12, 10), float64] */
}

def @func_636(%var_630: Tensor[(15, 3, 3), float64]) -> (Tensor[(15, 3, 3), uint16],) {
  %61 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  %62 = cast(%var_630, dtype="uint16") /* ty=Tensor[(15, 3, 3), uint16] */;
  %63 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%61, dtype="uint16") /* ty=Tensor[(15, 3, 3), uint16] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %66 = left_shift(%64, %65) /* ty=Tensor[(15, 3, 3), uint16] */;
  (%66,)
}

def @func_11347() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), uint16]) {
  %67 = @func_5302() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %68 = %67.0;
  %69 = cast(%68, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %70 = reshape(%69, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %71 = @func_1722(%70) /* ty=(Tensor[(672), uint8], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
  %72 = %71.2;
  (%68, %72)
}

def @func_8044(%var_7973: Tensor[(56, 12), uint8], %var_7997: Tensor[(588), int32], %var_8008: Tensor[(135), float64]) -> (Tensor[(56, 12), bool], Tensor[(2156), float32], Tensor[(7, 308), float32], Tensor[(462), float32], Tensor[(14, 7, 6), uint16], Tensor[(588), int32], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) {
  %73 = @func_1173() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8]) */;
  %74 = %73.1;
  %75 = cast(%var_7973, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %76 = shape_of(%74, dtype="int32") /* ty=Tensor[(2), int32] */;
  %77 = cast(%74, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %79 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 308), float32] */, dtype="float32") /* ty=Tensor[(7, 308), float32] */;
  %80 = cast(meta[relay.Constant][2] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %81 = reshape(%79, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %82 = reshape(%80, newshape=[462, 1]) /* ty=Tensor[(462, 1), float32] */;
  %83 = @func_5917(%81, %82) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(22, 7), float32], Tensor[(2156), float32], Tensor[(462, 1), float32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) */;
  %84 = cast(%var_7997, dtype="int32") /* ty=Tensor[(588), int32] */;
  %85 = reshape(%84, newshape=[14, 7, 6]) /* ty=Tensor[(14, 7, 6), int32] */;
  %86 = @func_6887(%85) /* ty=(Tensor[(14, 7, 6), uint16], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) */;
  %87 = cast(%var_8008, dtype="float64") /* ty=Tensor[(135), float64] */;
  %88 = reshape(%87, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %89 = @func_1722(%88) /* ty=(Tensor[(672), uint8], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
  %90 = %89.2;
  %91 = cast(%90, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %92 = reshape(%91, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %93 = @func_470(%92) /* ty=(Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */;
  %94 = equal(%77, %78) /* ty=Tensor[(56, 12), bool] */;
  %95 = %83.3;
  %96 = %86.0;
  %97 = %93.1;
  (%94, %95, meta[relay.Constant][1] /* ty=Tensor[(7, 308), float32] */, meta[relay.Constant][2] /* ty=Tensor[(462), float32] */, %96, %var_7997, %90, %var_8008, %97)
}

def @func_12464() -> (Tensor[(15, 3, 3), float64],) {
  %98 = @func_9115() /* ty=Tensor[(15, 3, 3), float64] */;
  (%98,)
}

def @func_1560() -> (Tensor[(7, 16, 13), float64],) {
  %99 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %100 = %99.1;
  (%100,)
}

def @func_3320() -> (Tensor[(135), float64], Tensor[(15, 3, 3), float64]) {
  %101 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %102 = @func_2771() /* ty=(Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) */;
  %103 = %101.1;
  %104 = %102.1;
  (%103, %104)
}

def @func_12508() -> (Tensor[(15, 3, 3), float64],) {
  %105 = @func_8547() /* ty=Tensor[(15, 3, 3), float64] */;
  (%105,)
}

def @func_687() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %106 = @func_423() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %107 = %106.0;
  %108 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  (%107, %108)
}

def @func_10663() -> Tensor[(7, 16, 13), float64] {
  %109 = @func_4617() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) */;
  %109.2
}

def @func_4517() -> Tensor[(15, 3, 3), float64] {
  %110 = @func_3204() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %110.1
}

def @func_11957() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64]) {
  %111 = @func_835() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %112 = @func_9965() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %113 = %111.3;
  %114 = %112.0;
  (%113, %114)
}

def @func_191() -> (Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) {
  %115 = cast(meta[relay.Constant][3] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %116 = reshape(%115, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %117 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 16, 13), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 13), float64] */;
  %118 = sqrt(%117) /* ty=Tensor[(7, 16, 13), float64] */;
  %119 = cast(%118, dtype="float64") /* ty=Tensor[(7, 16, 13), float64] */;
  %120 = @func_82(%116) /* ty=Tensor[(15, 3, 3), float64] */;
  %121 = cosh(%119) /* ty=Tensor[(7, 16, 13), float64] */;
  (%120, meta[relay.Constant][3] /* ty=Tensor[(135), float64] */, %121)
}

def @func_2532() -> Tensor[(15, 3, 3), float64] {
  @func_1606() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_5203() -> (Tensor[(15, 3, 3), uint32], Tensor[(15, 3, 3), float64]) {
  %122 = @func_1879() /* ty=Tensor[(15, 3, 3), float64] */;
  %123 = cast(%122, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %124 = asin(%123) /* ty=Tensor[(15, 3, 3), float64] */;
  %125 = @func_1572() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %126 = %125.0;
  %127 = cast(%126, dtype="uint32") /* ty=Tensor[(15, 3, 3), uint32] */;
  %128 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%124, dtype="uint32") /* ty=Tensor[(15, 3, 3), uint32] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %131 = bitwise_or(%129, %130) /* ty=Tensor[(15, 3, 3), uint32] */;
  %132 = @func_2813() /* ty=Tensor[(15, 3, 3), float64] */;
  (%131, %132)
}

def @func_1762() -> (Tensor[(15, 3, 3), float64],) {
  %133 = @func_1459() /* ty=Tensor[(15, 3, 3), float64] */;
  (%133,)
}

def @func_7470(%var_7458: Tensor[(10, 15, 15), float32], %var_7465: uint16) -> (Tensor[(10, 15, 15), float32], Tensor[(12, 9, 3), uint16], uint16, Tensor[(324), uint16]) {
  %134 = cast(%var_7458, dtype="float32") /* ty=Tensor[(10, 15, 15), float32] */;
  %135 = cast(%var_7465, dtype="uint16") /* ty=uint16 */;
  %136 = cast(meta[relay.Constant][5] /* ty=Tensor[(324), uint16] */, dtype="uint16") /* ty=Tensor[(324), uint16] */;
  %137 = reshape(%135, newshape=[]) /* ty=uint16 */;
  %138 = reshape(%136, newshape=[12, 9, 3]) /* ty=Tensor[(12, 9, 3), uint16] */;
  %139 = cos(%134) /* ty=Tensor[(10, 15, 15), float32] */;
  %140 = @func_5787(%137, %138) /* ty=Tensor[(12, 9, 3), uint16] */;
  (%139, %140, %var_7465, meta[relay.Constant][5] /* ty=Tensor[(324), uint16] */)
}

def @func_10212() -> (Tensor[(7, 16, 13), float64],) {
  %141 = @func_9965() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %142 = %141.0;
  (%142,)
}

def @func_10726() -> (Tensor[(15, 3, 3), float64],) {
  %143 = @func_9272() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32]) */;
  %144 = %143.0;
  %145 = cast(%144, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %146 = exp(%145) /* ty=Tensor[(15, 3, 3), float64] */;
  (%146,)
}

def @func_4409() -> (Tensor[(15, 3, 3), float64], Tensor[(135), float64]) {
  %147 = @func_3382() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64]) */;
  %148 = @func_3320() /* ty=(Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
  %149 = %147.1;
  %150 = %148.0;
  (%149, %150)
}

def @func_278() -> Tensor[(15, 3, 3), float64] {
  %151 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %151.3
}

def @func_2009() -> (Tensor[(8, 3, 13), bool],) {
  %152 = cast(meta[relay.Constant][6] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %153 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 3, 13), uint8] */, dtype="bool") /* ty=Tensor[(8, 3, 13), bool] */;
  %154 = greater_equal(%152, %153) /* ty=Tensor[(8, 3, 13), bool] */;
  (%154,)
}

def @func_3993() -> (Tensor[(135), float64], Tensor[(15, 3, 3), float64]) {
  %155 = @func_3320() /* ty=(Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
  %156 = @func_3204() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %157 = %155.0;
  %158 = %156.0;
  (%157, %158)
}

def @func_10437(%var_10413: Tensor[(462, 1), float32], %var_10415: Tensor[(22, 7), float32]) -> (Tensor[(15, 3, 3), float64], Tensor[(2156), float32], Tensor[(462, 1), float32], Tensor[(22, 7), float64]) {
  %159 = @func_4617() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) */;
  %160 = cast(meta[relay.Constant][8] /* ty=Tensor[(2156), float32] */, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %161 = cast(%var_10413, dtype="float32") /* ty=Tensor[(462, 1), float32] */;
  %162 = reshape(%160, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %163 = reshape(%161, newshape=[462, 1]) /* ty=Tensor[(462, 1), float32] */;
  %164 = @func_5917(%162, %163) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(22, 7), float32], Tensor[(2156), float32], Tensor[(462, 1), float32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) */;
  %165 = %164.2;
  %166 = cast(%var_10415, dtype="float64") /* ty=Tensor[(22, 7), float64] */;
  %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(2), int32] */;
  %168 = cast(%165, dtype="float64") /* ty=Tensor[(22, 7), float64] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %170 = %159.3;
  %171 = floor_mod(%168, %169) /* ty=Tensor[(22, 7), float64] */;
  (%170, meta[relay.Constant][8] /* ty=Tensor[(2156), float32] */, %var_10413, %171)
}

def @func_3382() -> (Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64]) {
  %172 = @func_1762() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %173 = @func_2914() /* ty=Tensor[(14, 7, 6), int32] */;
  %174 = %172.0;
  (%173, %174)
}

def @func_8985() -> Tensor[(56, 12), float64] {
  %175 = @func_1322() /* ty=(Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) */;
  %176 = %175.0;
  %177 = cast(%176, dtype="float64") /* ty=Tensor[(56, 12), float64] */;
  cos(%177) /* ty=Tensor[(56, 12), float64] */
}

def @func_3532() -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), uint16], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) {
  %178 = @func_1434() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %179 = %178.0;
  %180 = cast(%179, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %181 = reshape(%180, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %182 = @func_636(%181) /* ty=(Tensor[(15, 3, 3), uint16],) */;
  %183 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %184 = @func_2753() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(80), float32], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %185 = %182.0;
  %186 = @func_2033() /* ty=Tensor[(15, 3, 3), bool] */;
  %187 = %183.0;
  %188 = %184.7;
  (%179, %185, %186, %187, %188)
}

def @func_8436(%var_8418: Tensor[(12, 12, 4), float64]) -> (Tensor[(12, 12, 4), float64],) {
  %189 = cast(%var_8418, dtype="float64") /* ty=Tensor[(12, 12, 4), float64] */;
  %190 = acos(%189) /* ty=Tensor[(12, 12, 4), float64] */;
  (%190,)
}

def @func_4731(%var_4707: Tensor[(13, 9, 1), int16], %var_4708: Tensor[(13, 9, 10), int16]) -> (Tensor[(13, 9, 10), int16], Tensor[(672), uint8]) {
  %191 = cast(%var_4707, dtype="int16") /* ty=Tensor[(13, 9, 1), int16] */;
  %192 = cast(%var_4708, dtype="int16") /* ty=Tensor[(13, 9, 10), int16] */;
  %193 = @func_590() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */;
  %194 = maximum(%191, %192) /* ty=Tensor[(13, 9, 10), int16] */;
  %195 = %193.2;
  (%194, %195)
}

def @func_5085() -> (Tensor[(14, 7, 6), int32],) {
  %196 = @func_4476() /* ty=(Tensor[(14, 7, 6), int32],) */;
  %197 = %196.0;
  (%197,)
}

def @func_1037(%var_1026: Tensor[(56, 12), uint8]) -> Tensor[(56, 12), float64] {
  %198 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %199 = %198.1;
  %200 = cast(%var_1026, dtype="float64") /* ty=Tensor[(56, 12), float64] */;
  %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(2), int32] */;
  %202 = cast(%199, dtype="float64") /* ty=Tensor[(56, 12), float64] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  power(%202, %203) /* ty=Tensor[(56, 12), float64] */
}

def @func_9549() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(90), float64]) {
  %204 = @func_423() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %205 = @func_2789() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %206 = cast(meta[relay.Constant][9] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %207 = reshape(%206, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), float64] */;
  %208 = @func_1099(%207) /* ty=(Tensor[(6, 5, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %209 = %204.2;
  %210 = %205.0;
  %211 = %208.1;
  (%209, %210, %211, meta[relay.Constant][9] /* ty=Tensor[(90), float64] */)
}

def @func_1322() -> (Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) {
  %212 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %213 = @func_590() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */;
  %214 = %212.1;
  %215 = %213.3;
  (%214, %215)
}

def @func_1606() -> Tensor[(15, 3, 3), float64] {
  @func_283() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_4883() -> (Tensor[(135), float64],) {
  %216 = @func_3320() /* ty=(Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
  %217 = %216.0;
  (%217,)
}

def @func_7128() -> Tensor[(15, 3, 3), float64] {
  %218 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %218.0
}

def @func_3735(%var_3722: Tensor[(135), float64]) -> (Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(56, 12), float64]) {
  %219 = cast(%var_3722, dtype="float64") /* ty=Tensor[(135), float64] */;
  %220 = reshape(%219, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %221 = @func_636(%220) /* ty=(Tensor[(15, 3, 3), uint16],) */;
  %222 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %223 = %222.1;
  %224 = cast(%223, dtype="float32") /* ty=Tensor[(56, 12), float32] */;
  %225 = log10(%224) /* ty=Tensor[(56, 12), float32] */;
  %226 = cast(%225, dtype="float32") /* ty=Tensor[(56, 12), float32] */;
  %227 = shape_of(%223, dtype="int32") /* ty=Tensor[(2), int32] */;
  %228 = cast(%223, dtype="float32") /* ty=Tensor[(56, 12), float32] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %230 = maximum(%228, %229) /* ty=Tensor[(56, 12), float32] */;
  %231 = cast(%230, dtype="float64") /* ty=Tensor[(56, 12), float64] */;
  %232 = %221.0;
  %233 = sqrt(%231) /* ty=Tensor[(56, 12), float64] */;
  (%232, %var_3722, %233)
}

def @func_7418(%var_7372: Tensor[(3, 5, 9), float32], %var_7405: Tensor[(462), float32]) -> (Tensor[(3, 5, 9), float32], Tensor[(15, 3, 3), float32], Tensor[(135), float64], Tensor[(80), float32], Tensor[(2156), float32], Tensor[(1, 154), float32], Tensor[(462), float32]) {
  %234 = cast(%var_7372, dtype="float32") /* ty=Tensor[(3, 5, 9), float32] */;
  %235 = cast(meta[relay.Constant][10] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %236 = tan(%234) /* ty=Tensor[(3, 5, 9), float32] */;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(3, 5, 9), float64] */;
  %238 = reshape(%235, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), float32] */;
  %239 = reshape(%237, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %240 = @func_1981(%238, %239) /* ty=(Tensor[(10, 1, 8), float32], Tensor[(15, 3, 3), float64], Tensor[(135), float64]) */;
  %241 = cast(%236, dtype="float64") /* ty=Tensor[(3, 5, 9), float64] */;
  %242 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 154), float32] */, dtype="float32") /* ty=Tensor[(1, 154), float32] */;
  %243 = cast(%var_7405, dtype="float32") /* ty=Tensor[(462), float32] */;
  %244 = reshape(%241, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %245 = reshape(%242, newshape=[22, 7]) /* ty=Tensor[(22, 7), float32] */;
  %246 = reshape(%243, newshape=[231, 2]) /* ty=Tensor[(231, 2), float32] */;
  %247 = @func_6425(%244, %245, %246) /* ty=(Tensor[(672), uint8], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(2156), float32], Tensor[(22, 7), float32], Tensor[(231, 2), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %248 = @func_2182() /* ty=Tensor[(15, 3, 3), float32] */;
  %249 = %240.2;
  %250 = %247.4;
  (%236, %248, %249, meta[relay.Constant][10] /* ty=Tensor[(80), float32] */, %250, meta[relay.Constant][11] /* ty=Tensor[(1, 154), float32] */, %var_7405)
}

def @func_1781() -> (Tensor[(14, 7, 6), int32],) {
  %251 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 7, 6), float64] */, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %252 = acosh(%251) /* ty=Tensor[(14, 7, 6), float64] */;
  %253 = cast(%252, dtype="int32") /* ty=Tensor[(14, 7, 6), int32] */;
  %254 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(14, 7, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 7, 6), float64] */, dtype="int32") /* ty=Tensor[(14, 7, 6), int32] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %257 = logical_xor(%255, %256) /* ty=Tensor[(14, 7, 6), int32] */;
  (%257,)
}

def @func_6523() -> (Tensor[(672), uint8],) {
  %258 = @func_5123() /* ty=(Tensor[(672), uint8],) */;
  %259 = %258.0;
  (%259,)
}

def @func_10186() -> (Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(12, 14, 4), int32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) {
  %260 = @func_4765() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %261 = @func_7563() /* ty=(Tensor[(12, 14, 4), float32], Tensor[(7, 16, 13), float64]) */;
  %262 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %263 = %262.1;
  %264 = cast(%263, dtype="float64") /* ty=Tensor[(12, 14, 4), float64] */;
  %265 = exp(%264) /* ty=Tensor[(12, 14, 4), float64] */;
  %266 = cast(%265, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %267 = sigmoid(%266) /* ty=Tensor[(12, 14, 4), float32] */;
  %268 = cast(%265, dtype="int32") /* ty=Tensor[(12, 14, 4), int32] */;
  %269 = shape_of(%267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%267, dtype="int32") /* ty=Tensor[(12, 14, 4), int32] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %272 = cast(%265, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %273 = @func_9638() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %274 = %260.0;
  %275 = %261.0;
  %276 = add(%270, %271) /* ty=Tensor[(12, 14, 4), int32] */;
  %277 = asin(%272) /* ty=Tensor[(12, 14, 4), float32] */;
  %278 = %273.1;
  (%274, %275, %276, %277, %278)
}

def @func_1173() -> (Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8]) {
  %279 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %280 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %281 = %279.1;
  %282 = %280.1;
  (%281, %282)
}

def @func_10620() -> Tensor[(135), float64] {
  %283 = @func_4883() /* ty=(Tensor[(135), float64],) */;
  %283.0
}

def @func_8183(%var_8175: Tensor[(16, 6, 12), int8]) -> (Tensor[(16, 6, 12), int8],) {
  %284 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 6, 12), int8] */, dtype="int8") /* ty=Tensor[(16, 6, 12), int8] */;
  %285 = shape_of(%var_8175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%var_8175, dtype="int8") /* ty=Tensor[(16, 6, 12), int8] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %288 = add(%286, %287) /* ty=Tensor[(16, 6, 12), int8] */;
  (%288,)
}

def @func_6790() -> (Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) {
  %289 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %290 = @func_4921() /* ty=Tensor[(7, 16, 13), float64] */;
  %291 = %289.2;
  (%290, %291)
}

def @func_12429() -> (Tensor[(14, 7, 6), int32],) {
  %292 = @func_1945() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(14, 7, 6), int32]) */;
  %293 = %292.1;
  (%293,)
}

def @func_4188() -> (Tensor[(8, 1, 4), float64],) {
  %294 = cast(meta[relay.Constant][14] /* ty=Tensor[(8, 1, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 1, 4), float64] */;
  %295 = log2(%294) /* ty=Tensor[(8, 1, 4), float64] */;
  (%295,)
}

def @func_986() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %296 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %297 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %298 = %296.1;
  %299 = %297.1;
  (%298, %299)
}

def @func_248() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %300 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %301 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %302 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %303 = %300.0;
  %304 = cast(%303, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %305 = reshape(%304, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %306 = %301.2;
  %307 = %302.0;
  %308 = @func_82(%305) /* ty=Tensor[(15, 3, 3), float64] */;
  (%303, %306, %307, %308)
}

def @func_9705() -> (Tensor[(15, 3, 3), float32],) {
  %309 = @func_2091() /* ty=Tensor[(15, 3, 3), float64] */;
  %310 = cast(%309, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
  %311 = log(%310) /* ty=Tensor[(15, 3, 3), float32] */;
  (%311,)
}

def @func_8890() -> (Tensor[(8, 1, 4), float32],) {
  %312 = @func_4188() /* ty=(Tensor[(8, 1, 4), float64],) */;
  %313 = %312.0;
  %314 = cast(%313, dtype="float32") /* ty=Tensor[(8, 1, 4), float32] */;
  %315 = acos(%314) /* ty=Tensor[(8, 1, 4), float32] */;
  (%315,)
}

def @func_5064(%var_5055: Tensor[(9, 11, 11), bool]) -> (Tensor[(9, 11, 11), bool],) {
  %316 = cast(%var_5055, dtype="bool") /* ty=Tensor[(9, 11, 11), bool] */;
  %317 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(9, 11, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 11, 11), bool] */, dtype="bool") /* ty=Tensor[(9, 11, 11), bool] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %320 = logical_and(%318, %319) /* ty=Tensor[(9, 11, 11), bool] */;
  (%320,)
}

def @func_7683() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) {
  %321 = @func_4765() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %322 = @func_3094() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %323 = %321.0;
  %324 = @func_2182() /* ty=Tensor[(15, 3, 3), float32] */;
  %325 = %322.0;
  (%323, %324, %325)
}

def @func_590() -> (Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) {
  %326 = @func_423() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %327 = cast(meta[relay.Constant][16] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %328 = cast(meta[relay.Constant][16] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %329 = reshape(%327, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %330 = reshape(%328, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %331 = @func_318(%329, %330) /* ty=(Tensor[(12, 14, 4), uint8],) */;
  %332 = %331.0;
  %333 = cast(%332, dtype="uint8") /* ty=Tensor[(12, 14, 4), uint8] */;
  %334 = cast(%332, dtype="uint8") /* ty=Tensor[(12, 14, 4), uint8] */;
  %335 = reshape(%333, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %336 = reshape(%334, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %337 = @func_318(%335, %336) /* ty=(Tensor[(12, 14, 4), uint8],) */;
  %338 = %326.0;
  %339 = %337.0;
  (%338, %332, meta[relay.Constant][16] /* ty=Tensor[(672), uint8] */, %339)
}

def @func_2993() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %340 = @func_2853() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */;
  %341 = @func_2853() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */;
  %342 = %340.1;
  %343 = %341.0;
  (%342, %343)
}

def @func_3167(%var_3114: Tensor[(8, 8, 14), float64]) -> (Tensor[(8, 8, 14), float64], Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), float64]) {
  %344 = cast(%var_3114, dtype="float64") /* ty=Tensor[(8, 8, 14), float64] */;
  %345 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %346 = asin(%344) /* ty=Tensor[(8, 8, 14), float64] */;
  %347 = %345.0;
  %348 = @func_1917() /* ty=Tensor[(56, 12), uint8] */;
  %349 = @func_1606() /* ty=Tensor[(15, 3, 3), float64] */;
  (%346, %347, %348, %349)
}

def @func_2938(%var_2921: Tensor[(8, 9, 10), int64], %var_2922: Tensor[(8, 9, 10), int64]) -> Tensor[(8, 9, 10), int64] {
  %350 = cast(%var_2922, dtype="int64") /* ty=Tensor[(8, 9, 10), int64] */;
  %351 = shape_of(%var_2921, dtype="int32") /* ty=Tensor[(3), int32] */;
  %352 = cast(%var_2921, dtype="int64") /* ty=Tensor[(8, 9, 10), int64] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  minimum(%352, %353) /* ty=Tensor[(8, 9, 10), int64] */
}

def @func_6001() -> Tensor[(8, 1, 4), float64] {
  %354 = @func_4188() /* ty=(Tensor[(8, 1, 4), float64],) */;
  %354.0
}

def @func_6582() -> (Tensor[(15, 3, 3), float64],) {
  %355 = @func_986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %356 = %355.0;
  (%356,)
}

def @func_12353() -> (Tensor[(15, 3, 3), float64],) {
  %357 = @func_2771() /* ty=(Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) */;
  %358 = %357.1;
  (%358,)
}

def @func_2297() -> (Tensor[(15, 3, 3), float32], Tensor[(14, 7, 6), int32]) {
  %359 = @func_1434() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %360 = @func_1781() /* ty=(Tensor[(14, 7, 6), int32],) */;
  %361 = %359.0;
  %362 = %360.0;
  (%361, %362)
}

def @func_6846() -> Tensor[(7, 16, 13), float64] {
  %363 = @func_3554() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %363.0
}

def @func_2914() -> Tensor[(14, 7, 6), int32] {
  %364 = @func_1781() /* ty=(Tensor[(14, 7, 6), int32],) */;
  %364.0
}

def @func_5917(%var_5903: Tensor[(2156), float32], %var_5904: Tensor[(462, 1), float32]) -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(22, 7), float32], Tensor[(2156), float32], Tensor[(462, 1), float32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) {
  %365 = @func_3532() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), uint16], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %366 = cast(meta[relay.Constant][17] /* ty=Tensor[(22, 7), float32] */, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
  %367 = cast(%var_5903, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %368 = cast(%var_5904, dtype="float32") /* ty=Tensor[(462, 1), float32] */;
  %369 = reshape(%366, newshape=[14, 11, 1]) /* ty=Tensor[(14, 11, 1), float32] */;
  %370 = reshape(%367, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), float32] */;
  %371 = reshape(%368, newshape=[14, 11, 3]) /* ty=Tensor[(14, 11, 3), float32] */;
  %372 = @func_2387(%369, %370, %371) /* ty=(Tensor[(14, 11, 14), int64], Tensor[(14, 11, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64]) */;
  %373 = @func_4765() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %374 = %365.3;
  %375 = %372.2;
  %376 = @func_5321() /* ty=Tensor[(12, 14, 4), float32] */;
  %377 = %373.0;
  (%374, %375, meta[relay.Constant][17] /* ty=Tensor[(22, 7), float32] */, %var_5903, %var_5904, %376, %377)
}

def @func_12108(%var_12060: Tensor[(154), float32], %var_12061: Tensor[(154, 14), float32], %var_12062: Tensor[(7, 66), float32]) -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64], Tensor[(154), float32], Tensor[(154, 14), float32], Tensor[(7, 66), float32], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) {
  %378 = @func_3554() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %379 = %378.0;
  %380 = cast(%379, dtype="float64") /* ty=Tensor[(7, 16, 13), float64] */;
  %381 = cast(%var_12060, dtype="float32") /* ty=Tensor[(154), float32] */;
  %382 = cast(%var_12061, dtype="float32") /* ty=Tensor[(154, 14), float32] */;
  %383 = cast(%var_12062, dtype="float32") /* ty=Tensor[(7, 66), float32] */;
  %384 = reshape(%381, newshape=[14, 11, 1]) /* ty=Tensor[(14, 11, 1), float32] */;
  %385 = reshape(%382, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), float32] */;
  %386 = reshape(%383, newshape=[14, 11, 3]) /* ty=Tensor[(14, 11, 3), float32] */;
  %387 = @func_2387(%384, %385, %386) /* ty=(Tensor[(14, 11, 14), int64], Tensor[(14, 11, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64]) */;
  %388 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %389 = @func_6226() /* ty=Tensor[(15, 3, 3), float64] */;
  %390 = sinh(%380) /* ty=Tensor[(7, 16, 13), float64] */;
  %391 = %387.3;
  %392 = %388.1;
  %393 = @func_5894() /* ty=Tensor[(12, 14, 4), uint8] */;
  (%389, %390, %391, %var_12060, %var_12061, %var_12062, %392, %393)
}

def @func_1671(%var_1648: Tensor[(672), uint8]) -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(15, 3, 3), float64]) {
  %394 = @func_590() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */;
  %395 = %394.0;
  %396 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 3, 3), float64] */, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
  %397 = shape_of(%395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%395, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %400 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 3, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %401 = reshape(%400, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %402 = @func_470(%401) /* ty=(Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */;
  %403 = cast(%var_1648, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %404 = cast(%var_1648, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %405 = reshape(%403, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %406 = reshape(%404, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %407 = @func_318(%405, %406) /* ty=(Tensor[(12, 14, 4), uint8],) */;
  %408 = @func_1173() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8]) */;
  %409 = mod(%398, %399) /* ty=Tensor[(15, 3, 3), float32] */;
  %410 = %402.2;
  %411 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  %412 = %407.0;
  %413 = %408.0;
  (%409, %410, %411, %412, %var_1648, %413)
}

def @func_5894() -> Tensor[(12, 14, 4), uint8] {
  %414 = @func_2771() /* ty=(Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) */;
  %414.0
}

def @func_2091() -> Tensor[(15, 3, 3), float64] {
  %415 = @func_1173() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8]) */;
  %415.0
}

def @func_2636() -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) {
  %416 = @func_2091() /* ty=Tensor[(15, 3, 3), float64] */;
  %417 = cast(%416, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
  %418 = sin(%417) /* ty=Tensor[(15, 3, 3), float32] */;
  %419 = cast(%418, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
  %420 = @func_423() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %421 = asinh(%419) /* ty=Tensor[(15, 3, 3), float32] */;
  %422 = %420.1;
  (%421, %422)
}

def @func_7002() -> (Tensor[(15, 3, 3), float64], Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) {
  %423 = @func_6582() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %424 = @func_4188() /* ty=(Tensor[(8, 1, 4), float64],) */;
  %425 = %423.0;
  %426 = %424.0;
  %427 = @func_1606() /* ty=Tensor[(15, 3, 3), float64] */;
  (%425, %426, %427)
}

def @func_1114(%var_1104: Tensor[(15, 3, 1), float32], %var_1105: Tensor[(15, 3, 9), float32]) -> (Tensor[(15, 3, 9), float32],) {
  %428 = cast(%var_1104, dtype="float32") /* ty=Tensor[(15, 3, 1), float32] */;
  %429 = cast(%var_1105, dtype="float32") /* ty=Tensor[(15, 3, 9), float32] */;
  %430 = floor_mod(%428, %429) /* ty=Tensor[(15, 3, 9), float32] */;
  (%430,)
}

def @func_3828(%var_3805: Tensor[(12, 7, 16), float64]) -> (Tensor[(12, 7, 16), float64], Tensor[(15, 3, 3), float64], Tensor[(90), float64]) {
  %431 = cast(%var_3805, dtype="float64") /* ty=Tensor[(12, 7, 16), float64] */;
  %432 = cast(meta[relay.Constant][19] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %433 = reshape(%432, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), float64] */;
  %434 = @func_1099(%433) /* ty=(Tensor[(6, 5, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %435 = sigmoid(%431) /* ty=Tensor[(12, 7, 16), float64] */;
  %436 = %434.2;
  (%435, %436, meta[relay.Constant][19] /* ty=Tensor[(90), float64] */)
}

def @func_10518() -> (Tensor[(7, 16, 13), float64],) {
  %437 = @func_6846() /* ty=Tensor[(7, 16, 13), float64] */;
  (%437,)
}

def @func_3597() -> Tensor[(7, 16, 13), float64] {
  %438 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %438.0
}

def @func_10915() -> (Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) {
  %439 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %440 = @func_4765() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %441 = %439.0;
  %442 = %440.0;
  (%441, %442)
}

def @func_9896() -> Tensor[(15, 3, 3), float64] {
  %443 = @func_5855() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64]) */;
  %443.0
}

def @func_6226() -> Tensor[(15, 3, 3), float64] {
  %444 = @func_3764() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %444.0
}

def @func_82(%var_69: Tensor[(15, 3, 3), float64]) -> Tensor[(15, 3, 3), float64] {
  %445 = cast(%var_69, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %446 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(15, 3, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(meta[relay.Constant][20] /* ty=Tensor[(15, 3, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %449 = subtract(%447, %448) /* ty=Tensor[(15, 3, 3), float64] */;
  %450 = cast(%449, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  atanh(%450) /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_11496() -> Tensor[(15, 3, 3), float32] {
  @func_2182() /* ty=Tensor[(15, 3, 3), float32] */
}

def @func_3952(%var_3925: Tensor[(154), float32], %var_3927: Tensor[(462), float32]) -> (Tensor[(8, 3, 13), bool], Tensor[(14, 11, 14), int64], Tensor[(154), float32], Tensor[(2156), float32], Tensor[(462), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(8, 84), bool]) {
  %451 = @func_2009() /* ty=(Tensor[(8, 3, 13), bool],) */;
  %452 = cast(%var_3925, dtype="float32") /* ty=Tensor[(154), float32] */;
  %453 = cast(meta[relay.Constant][21] /* ty=Tensor[(2156), float32] */, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %454 = cast(%var_3927, dtype="float32") /* ty=Tensor[(462), float32] */;
  %455 = reshape(%452, newshape=[14, 11, 1]) /* ty=Tensor[(14, 11, 1), float32] */;
  %456 = reshape(%453, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), float32] */;
  %457 = reshape(%454, newshape=[14, 11, 3]) /* ty=Tensor[(14, 11, 3), float32] */;
  %458 = @func_2387(%455, %456, %457) /* ty=(Tensor[(14, 11, 14), int64], Tensor[(14, 11, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64]) */;
  %459 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 84), uint8] */, dtype="float32") /* ty=Tensor[(8, 84), float32] */;
  %460 = log10(%459) /* ty=Tensor[(8, 84), float32] */;
  %461 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 84), uint8] */, dtype="uint8") /* ty=Tensor[(8, 84), uint8] */;
  %462 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 84), uint8] */, dtype="uint8") /* ty=Tensor[(8, 84), uint8] */;
  %463 = reshape(%461, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %464 = reshape(%462, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %465 = @func_318(%463, %464) /* ty=(Tensor[(12, 14, 4), uint8],) */;
  %466 = %465.0;
  %467 = cast(%466, dtype="float64") /* ty=Tensor[(12, 14, 4), float64] */;
  %468 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(8, 84), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %469 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 84), uint8] */, dtype="float64") /* ty=Tensor[(8, 84), float64] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %471 = mod(%469, %470) /* ty=Tensor[(8, 84), float64] */;
  %472 = cast(%471, dtype="bool") /* ty=Tensor[(8, 84), bool] */;
  %473 = shape_of(%460, dtype="int32") /* ty=Tensor[(2), int32] */;
  %474 = cast(%460, dtype="bool") /* ty=Tensor[(8, 84), bool] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %476 = %451.0;
  %477 = %458.0;
  %478 = @func_1459() /* ty=Tensor[(15, 3, 3), float64] */;
  %479 = @func_1606() /* ty=Tensor[(15, 3, 3), float64] */;
  %480 = logical_or(%474, %475) /* ty=Tensor[(8, 84), bool] */;
  (%476, %477, %var_3925, meta[relay.Constant][21] /* ty=Tensor[(2156), float32] */, %var_3927, %478, %479, %480)
}

def @func_470(%var_463: Tensor[(15, 3, 3), float64]) -> (Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) {
  %481 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(13, 12, 4), float64] */;
  %482 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %483 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  %484 = cast(%var_463, dtype="bool") /* ty=Tensor[(15, 3, 3), bool] */;
  %485 = shape_of(%483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%483, dtype="bool") /* ty=Tensor[(15, 3, 3), bool] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %488 = log2(%481) /* ty=Tensor[(13, 12, 4), float64] */;
  %489 = %482.0;
  %490 = logical_and(%486, %487) /* ty=Tensor[(15, 3, 3), bool] */;
  (%488, %489, %490)
}

def @func_1797() -> Tensor[(14, 7, 6), int32] {
  %491 = @func_1781() /* ty=(Tensor[(14, 7, 6), int32],) */;
  %491.0
}

def @func_2033() -> Tensor[(15, 3, 3), bool] {
  %492 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  %493 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 3, 3), float64] */, dtype="bool") /* ty=Tensor[(15, 3, 3), bool] */;
  %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%492, dtype="bool") /* ty=Tensor[(15, 3, 3), bool] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%495, %496) /* ty=Tensor[(15, 3, 3), bool] */
}

def @func_10554() -> (Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float32]) {
  %497 = @func_9032() /* ty=(Tensor[(15, 3, 3), float32],) */;
  %498 = @func_1797() /* ty=Tensor[(14, 7, 6), int32] */;
  %499 = %497.0;
  (%498, %499)
}

def @func_1572() -> (Tensor[(15, 3, 3), float64],) {
  %500 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  (%500,)
}

def @func_9638() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %501 = @func_8870() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64], Tensor[(45, 1), float32]) */;
  %502 = @func_4517() /* ty=Tensor[(15, 3, 3), float64] */;
  %503 = %501.0;
  (%502, %503)
}

def @func_8870() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64], Tensor[(45, 1), float32]) {
  %504 = @func_3204() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %505 = @func_5679() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), bool], Tensor[(15, 3, 3), float64]) */;
  %506 = cast(meta[relay.Constant][25] /* ty=Tensor[(45, 1), float32] */, dtype="float32") /* ty=Tensor[(45, 1), float32] */;
  %507 = reshape(%506, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %508 = @func_4112(%507) /* ty=(Tensor[(15, 3, 3), bool], Tensor[(45), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), bool]) */;
  %509 = %504.0;
  %510 = %505.2;
  %511 = @func_1826() /* ty=Tensor[(12, 14, 4), float32] */;
  %512 = %508.2;
  (%509, %510, %511, %512, meta[relay.Constant][25] /* ty=Tensor[(45, 1), float32] */)
}

def @func_6679() -> (Tensor[(15, 3, 3), float64],) {
  %513 = @func_3320() /* ty=(Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
  %514 = %513.1;
  (%514,)
}

def @func_8683() -> (Tensor[(15, 3, 3), float64],) {
  %515 = @func_1762() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %516 = %515.0;
  (%516,)
}

def @func_4912() -> (Tensor[(135), float64], Tensor[(672), uint8], Tensor[(14, 7, 6), float64]) {
  %517 = @func_3320() /* ty=(Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
  %518 = @func_2853() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */;
  %519 = @func_1781() /* ty=(Tensor[(14, 7, 6), int32],) */;
  %520 = %519.0;
  %521 = cast(%520, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %522 = %517.0;
  %523 = %518.4;
  %524 = asin(%521) /* ty=Tensor[(14, 7, 6), float64] */;
  (%522, %523, %524)
}

def @func_11136(%var_11131: Tensor[(720), bool]) -> (Tensor[(15, 3, 3), float64], Tensor[(16, 3, 15), float64], Tensor[(720), bool]) {
  %525 = cast(%var_11131, dtype="bool") /* ty=Tensor[(720), bool] */;
  %526 = cast(%var_11131, dtype="bool") /* ty=Tensor[(720), bool] */;
  %527 = reshape(%525, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), bool] */;
  %528 = reshape(%526, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), bool] */;
  %529 = @func_9487(%527, %528) /* ty=(Tensor[(16, 3, 15), bool], Tensor[(16, 3, 15), float64]) */;
  %530 = @func_7128() /* ty=Tensor[(15, 3, 3), float64] */;
  %531 = %529.1;
  (%530, %531, %var_11131)
}

def @func_11531(%var_11513: Tensor[(672), uint8]) -> (Tensor[(15, 3, 3), float64], Tensor[(588), int32], Tensor[(672), uint8], Tensor[(8, 1, 4), float64]) {
  %532 = cast(%var_11513, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %533 = reshape(%532, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %534 = @func_8640(%533) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(588), int32], Tensor[(672), uint8], Tensor[(588), int32], Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), float64]) */;
  %535 = @func_6726() /* ty=(Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) */;
  %536 = @func_7867() /* ty=Tensor[(15, 3, 3), float64] */;
  %537 = %534.3;
  %538 = %535.0;
  (%536, %537, %var_11513, %538)
}

def @func_5506() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64]) {
  %539 = @func_2853() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */;
  %540 = @func_3764() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %541 = %539.0;
  %542 = @func_2033() /* ty=Tensor[(15, 3, 3), bool] */;
  %543 = %540.0;
  (%541, %542, %543)
}

def @func_11068() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float32], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), float32], Tensor[(2, 40), float64], Tensor[(10, ?, 8), float64]) {
  %544 = @func_986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %545 = @func_8547() /* ty=Tensor[(15, 3, 3), float64] */;
  %546 = cast(%545, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %547 = reshape(%546, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %548 = @func_470(%547) /* ty=(Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */;
  %549 = @func_2297() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(14, 7, 6), int32]) */;
  %550 = @func_7563() /* ty=(Tensor[(12, 14, 4), float32], Tensor[(7, 16, 13), float64]) */;
  %551 = @func_9272() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32]) */;
  %552 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 40), float32] */, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %553 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 40), float32] */, dtype="float32") /* ty=Tensor[(2, 40), float32] */;
  %554 = %549.0;
  %555 = cast(%554, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %556 = reshape(%553, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), float32] */;
  %557 = reshape(%555, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %558 = @func_1981(%556, %557) /* ty=(Tensor[(10, 1, 8), float32], Tensor[(15, 3, 3), float64], Tensor[(135), float64]) */;
  %559 = %558.0;
  %560 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 40), float32] */, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %561 = shape_of(%559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %562 = cast(%559, dtype="float64") /* ty=Tensor[(10, 1, 8), float64] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %564 = %544.0;
  %565 = %548.0;
  %566 = %550.1;
  %567 = %551.1;
  %568 = sigmoid(%552) /* ty=Tensor[(2, 40), float64] */;
  %569 = power(%562, %563) /* ty=Tensor[(10, ?, 8), float64] */;
  (%564, %545, %565, %554, %566, %567, %568, %569)
}

def @func_5855() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64]) {
  %570 = @func_4039() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */;
  %571 = @func_3554() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %572 = %570.0;
  %573 = %571.0;
  (%572, %573)
}

def @func_862() -> (Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) {
  %574 = cast(meta[relay.Constant][27] /* ty=Tensor[(56, 12), uint8] */, dtype="uint8") /* ty=Tensor[(56, 12), uint8] */;
  %575 = cast(meta[relay.Constant][27] /* ty=Tensor[(56, 12), uint8] */, dtype="uint8") /* ty=Tensor[(56, 12), uint8] */;
  %576 = reshape(%574, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %577 = reshape(%575, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %578 = @func_318(%576, %577) /* ty=(Tensor[(12, 14, 4), uint8],) */;
  %579 = %578.0;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %581 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  %582 = sinh(%580) /* ty=Tensor[(12, 14, 4), float32] */;
  (%581, meta[relay.Constant][27] /* ty=Tensor[(56, 12), uint8] */, %582)
}

def @func_2853() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) {
  %583 = @func_1762() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %584 = cast(meta[relay.Constant][28] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %585 = cast(meta[relay.Constant][28] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %586 = reshape(%584, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %587 = reshape(%585, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %588 = @func_318(%586, %587) /* ty=(Tensor[(12, 14, 4), uint8],) */;
  %589 = @func_2268() /* ty=Tensor[(15, 3, 3), float64] */;
  %590 = %583.0;
  %591 = @func_1459() /* ty=Tensor[(15, 3, 3), float64] */;
  %592 = %588.0;
  (%589, %590, %591, %592, meta[relay.Constant][28] /* ty=Tensor[(672), uint8] */)
}

def @func_1434() -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) {
  %593 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
  %595 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %596 = log10(%594) /* ty=Tensor[(15, 3, 3), float32] */;
  %597 = %595.0;
  (%596, %597)
}

def @func_7921(%var_7908: Tensor[(14, 8, 11), int8], %var_7909: Tensor[(14, 8, 11), int8]) -> Tensor[(14, 8, 11), bool] {
  %598 = cast(%var_7909, dtype="bool") /* ty=Tensor[(14, 8, 11), bool] */;
  %599 = shape_of(%var_7908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %600 = cast(%var_7908, dtype="bool") /* ty=Tensor[(14, 8, 11), bool] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%600, %601) /* ty=Tensor[(14, 8, 11), bool] */
}

def @func_11713() -> (Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %602 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %603 = @func_1826() /* ty=Tensor[(12, 14, 4), float32] */;
  %604 = @func_4999() /* ty=Tensor[(15, 3, 3), float64] */;
  %605 = %602.0;
  (%603, %604, %605)
}

def @main(%var_12510: int64, %var_12511: Tensor[(2, 6, 1), int64]) -> (Tensor[(2, 6, 1), int64],) {
  %606 = cast(%var_12510, dtype="int64") /* ty=int64 */;
  %607 = cast(%var_12511, dtype="int64") /* ty=Tensor[(2, 6, 1), int64] */;
  %608 = subtract(%606, %607) /* ty=Tensor[(2, 6, 1), int64] */;
  (%608,)
}

def @func_5321() -> Tensor[(12, 14, 4), float32] {
  @func_1826() /* ty=Tensor[(12, 14, 4), float32] */
}

def @func_3764() -> (Tensor[(15, 3, 3), float64],) {
  %609 = @func_1572() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %610 = %609.0;
  (%610,)
}

def @func_12383(%var_12378: Tensor[(15, 16, 6), int64], %var_12379: Tensor[(15, 16, 6), int64]) -> (Tensor[(15, 16, 6), bool],) {
  %611 = cast(%var_12379, dtype="bool") /* ty=Tensor[(15, 16, 6), bool] */;
  %612 = shape_of(%var_12378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%var_12378, dtype="bool") /* ty=Tensor[(15, 16, 6), bool] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %615 = equal(%613, %614) /* ty=Tensor[(15, 16, 6), bool] */;
  (%615,)
}

def @func_11484() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64], Tensor[(1089), bool], Tensor[(15, 3, 3), float64]) {
  %616 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %617 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %618 = @func_2771() /* ty=(Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) */;
  %619 = @func_8361() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %620 = %619.0;
  %621 = cast(%620, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %622 = reshape(%621, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %623 = @func_3735(%622) /* ty=(Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(56, 12), float64]) */;
  %624 = @func_10212() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %625 = cast(meta[relay.Constant][29] /* ty=Tensor[(1089), bool] */, dtype="float64") /* ty=Tensor[(1089), float64] */;
  %626 = asinh(%625) /* ty=Tensor[(1089), float64] */;
  %627 = cast(meta[relay.Constant][29] /* ty=Tensor[(1089), bool] */, dtype="bool") /* ty=Tensor[(1089), bool] */;
  %628 = reshape(%627, newshape=[9, 11, 11]) /* ty=Tensor[(9, 11, 11), bool] */;
  %629 = @func_5064(%628) /* ty=(Tensor[(9, 11, 11), bool],) */;
  %630 = %629.0;
  %631 = cast(%630, dtype="bool") /* ty=Tensor[(9, 11, 11), bool] */;
  %632 = shape_of(%626, dtype="int32") /* ty=Tensor[(1), int32] */;
  %633 = cast(%626, dtype="bool") /* ty=Tensor[(1089), bool] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?), bool] */;
  %635 = %616.0;
  %636 = %617.0;
  %637 = %618.0;
  %638 = %623.1;
  %639 = %624.0;
  %640 = equal(%633, %634) /* ty=Tensor[(1089), bool] */;
  %641 = @func_2060() /* ty=Tensor[(15, 3, 3), float64] */;
  (%635, %636, %637, %620, %638, %639, %640, %641)
}

def @func_1981(%var_1964: Tensor[(10, 1, 8), float32], %var_1969: Tensor[(135), float64]) -> (Tensor[(10, 1, 8), float32], Tensor[(15, 3, 3), float64], Tensor[(135), float64]) {
  %642 = cast(%var_1964, dtype="float32") /* ty=Tensor[(10, 1, 8), float32] */;
  %643 = cast(%var_1969, dtype="float64") /* ty=Tensor[(135), float64] */;
  %644 = reshape(%643, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %645 = acosh(%642) /* ty=Tensor[(10, 1, 8), float32] */;
  %646 = @func_82(%644) /* ty=Tensor[(15, 3, 3), float64] */;
  (%645, %646, %var_1969)
}

def @func_9965() -> (Tensor[(7, 16, 13), float64],) {
  %647 = @func_6790() /* ty=(Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) */;
  %648 = %647.0;
  (%648,)
}

def @func_4617() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) {
  %649 = @func_835() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %650 = @func_3204() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %651 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %652 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %653 = @func_2789() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %654 = %653.0;
  %655 = cast(%654, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
  %656 = %649.1;
  %657 = %650.0;
  %658 = %651.0;
  %659 = %652.1;
  %660 = @func_2033() /* ty=Tensor[(15, 3, 3), bool] */;
  %661 = atan(%655) /* ty=Tensor[(15, 3, 3), float32] */;
  (%656, %657, %658, %659, %660, %661)
}

def @func_8084() -> Tensor[(15, 3, 3), float64] {
  %662 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %662.0
}

def @func_12204() -> Tensor[(15, 3, 3), float64] {
  %663 = @func_2853() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */;
  %663.0
}

def @func_283() -> Tensor[(15, 3, 3), float64] {
  %664 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %664.0
}

def @func_4476() -> (Tensor[(14, 7, 6), int32],) {
  %665 = @func_2456() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) */;
  %666 = %665.0;
  (%666,)
}

def @func_9415(%var_9395: Tensor[(14, 7, 6), int32]) -> (Tensor[(12, 14, 4), float32], Tensor[(14, 7, 6), uint64], Tensor[(15, 3, 3), float64]) {
  %667 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %668 = @func_4662() /* ty=(Tensor[(14, 7, 6), int32],) */;
  %669 = %668.0;
  %670 = cast(%var_9395, dtype="uint64") /* ty=Tensor[(14, 7, 6), uint64] */;
  %671 = shape_of(%669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%669, dtype="uint64") /* ty=Tensor[(14, 7, 6), uint64] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %674 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %675 = %667.2;
  %676 = add(%672, %673) /* ty=Tensor[(14, 7, 6), uint64] */;
  %677 = %674.2;
  (%675, %676, %677)
}

def @func_6726() -> (Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) {
  %678 = @func_4188() /* ty=(Tensor[(8, 1, 4), float64],) */;
  %679 = @func_1572() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %680 = %678.0;
  %681 = %679.0;
  (%680, %681)
}

def @func_12294() -> (Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) {
  %682 = @func_10098() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %683 = @func_5894() /* ty=Tensor[(12, 14, 4), uint8] */;
  %684 = %682.0;
  (%683, %684)
}

def @func_8794(%var_8779: Tensor[(15, 6, 7), float32]) -> Tensor[(15, 6, 7), float32] {
  %685 = cast(%var_8779, dtype="float32") /* ty=Tensor[(15, 6, 7), float32] */;
  exp(%685) /* ty=Tensor[(15, 6, 7), float32] */
}

def @func_11918() -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float32], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(8, 5, 4), bool], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(8, 5, 4), float64], Tensor[(8, ?, 4), uint64], Tensor[(15, 3, 3), float64]) {
  %686 = @func_10554() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float32]) */;
  %687 = @func_2297() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(14, 7, 6), int32]) */;
  %688 = @func_5203() /* ty=(Tensor[(15, 3, 3), uint32], Tensor[(15, 3, 3), float64]) */;
  %689 = @func_6001() /* ty=Tensor[(8, 1, 4), float64] */;
  %690 = cast(%689, dtype="float64") /* ty=Tensor[(8, 1, 4), float64] */;
  %691 = asinh(%690) /* ty=Tensor[(8, 1, 4), float64] */;
  %692 = cast(%691, dtype="float32") /* ty=Tensor[(8, 1, 4), float32] */;
  %693 = sin(%692) /* ty=Tensor[(8, 1, 4), float32] */;
  %694 = cast(%693, dtype="float32") /* ty=Tensor[(8, 1, 4), float32] */;
  %695 = sqrt(%694) /* ty=Tensor[(8, 1, 4), float32] */;
  %696 = cast(%695, dtype="float64") /* ty=Tensor[(8, 1, 4), float64] */;
  %697 = tan(%696) /* ty=Tensor[(8, 1, 4), float64] */;
  %698 = cast(%689, dtype="float64") /* ty=Tensor[(8, 1, 4), float64] */;
  %699 = cosh(%698) /* ty=Tensor[(8, 1, 4), float64] */;
  %700 = cast(%699, dtype="bool") /* ty=Tensor[(8, 1, 4), bool] */;
  %701 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 5, 4), float64] */, dtype="bool") /* ty=Tensor[(8, 5, 4), bool] */;
  %702 = less(%700, %701) /* ty=Tensor[(8, 5, 4), bool] */;
  %703 = cast(%697, dtype="bool") /* ty=Tensor[(8, 1, 4), bool] */;
  %704 = cast(%702, dtype="bool") /* ty=Tensor[(8, 5, 4), bool] */;
  %705 = @func_10212() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %706 = @func_6679() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %707 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 5, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 5, 4), float64] */;
  %708 = cast(%689, dtype="uint64") /* ty=Tensor[(8, 1, 4), uint64] */;
  %709 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(%697, dtype="uint64") /* ty=Tensor[(8, 1, 4), uint64] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %712 = @func_2595() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %713 = %686.1;
  %714 = @func_2182() /* ty=Tensor[(15, 3, 3), float32] */;
  %715 = %687.1;
  %716 = %688.1;
  %717 = greater_equal(%703, %704) /* ty=Tensor[(8, 5, 4), bool] */;
  %718 = %705.0;
  %719 = %706.0;
  %720 = @func_4999() /* ty=Tensor[(15, 3, 3), float64] */;
  %721 = acosh(%707) /* ty=Tensor[(8, 5, 4), float64] */;
  %722 = subtract(%710, %711) /* ty=Tensor[(8, ?, 4), uint64] */;
  %723 = %712.0;
  (%713, %714, %715, %716, %717, %718, %719, %720, %721, %722, %723)
}

def @func_9922(%var_9912: Tensor[(3, 12, 3), int64], %var_9913: Tensor[(3, 12, 3), int64]) -> (Tensor[(3, 12, 3), int64],) {
  %724 = cast(%var_9913, dtype="int64") /* ty=Tensor[(3, 12, 3), int64] */;
  %725 = shape_of(%var_9912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%var_9912, dtype="int64") /* ty=Tensor[(3, 12, 3), int64] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %728 = minimum(%726, %727) /* ty=Tensor[(3, 12, 3), int64] */;
  (%728,)
}

def @func_4039() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) {
  %729 = @func_986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %730 = @func_3254() /* ty=(Tensor[(15, 3, 3), bool],) */;
  %731 = %729.0;
  %732 = %730.0;
  (%731, %732)
}

def @func_3094() -> (Tensor[(15, 3, 3), float64],) {
  %733 = @func_1459() /* ty=Tensor[(15, 3, 3), float64] */;
  (%733,)
}

def @func_423() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %734 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %735 = %734.0;
  %736 = cast(%735, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %737 = reshape(%736, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %738 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  %739 = @func_82(%737) /* ty=Tensor[(15, 3, 3), float64] */;
  (%738, %735, %739)
}

def @func_2771() -> (Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) {
  %740 = @func_1322() /* ty=(Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) */;
  %741 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %742 = %740.1;
  %743 = %741.0;
  (%742, %743)
}

def @func_3204() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %744 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %745 = @func_3094() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %746 = %744.0;
  %747 = %745.0;
  (%746, %747)
}

def @func_5302() -> (Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %748 = @func_2636() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %749 = @func_4883() /* ty=(Tensor[(135), float64],) */;
  %750 = %748.1;
  %751 = %749.0;
  %752 = @func_2091() /* ty=Tensor[(15, 3, 3), float64] */;
  %753 = @func_1606() /* ty=Tensor[(15, 3, 3), float64] */;
  (%750, %751, %752, %753)
}

def @func_5744() -> (Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %754 = @func_4039() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */;
  %755 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %756 = @func_3597() /* ty=Tensor[(7, 16, 13), float64] */;
  %757 = %754.0;
  %758 = %755.0;
  (%756, %757, %758)
}

def @func_9766() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %759 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %760 = @func_8361() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %761 = %759.0;
  %762 = %760.0;
  (%761, %762)
}

def @func_5393() -> Tensor[(15, 3, 3), float64] {
  %763 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %763.0
}

def @func_7075() -> (Tensor[(7, 16, 13), float64],) {
  %764 = @func_6846() /* ty=Tensor[(7, 16, 13), float64] */;
  (%764,)
}

def @func_8265() -> (Tensor[(7, 16, 13), int64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %765 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %766 = %765.0;
  %767 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 16, 13), float64] */, dtype="int64") /* ty=Tensor[(7, 16, 13), int64] */;
  %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%766, dtype="int64") /* ty=Tensor[(7, 16, 13), int64] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %771 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %772 = maximum(%769, %770) /* ty=Tensor[(7, 16, 13), int64] */;
  %773 = %771.0;
  %774 = @func_7867() /* ty=Tensor[(15, 3, 3), float64] */;
  (%772, %773, %774)
}

def @func_7634(%var_7593: Tensor[(15, 15, 7), float32]) -> (Tensor[(15, 15, 7), float32],) {
  %775 = cast(%var_7593, dtype="float32") /* ty=Tensor[(15, 15, 7), float32] */;
  %776 = log10(%775) /* ty=Tensor[(15, 15, 7), float32] */;
  (%776,)
}

def @func_7867() -> Tensor[(15, 3, 3), float64] {
  @func_2268() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_2060() -> Tensor[(15, 3, 3), float64] {
  @func_1459() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_1099(%var_1081: Tensor[(6, 5, 3), float64]) -> (Tensor[(6, 5, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %777 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 5, 3), float64] */, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
  %778 = shape_of(%var_1081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%var_1081, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %781 = @func_986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %782 = floor_divide(%779, %780) /* ty=Tensor[(6, 5, 3), float64] */;
  %783 = %781.0;
  %784 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  (%782, %783, %784)
}

def @func_2799() -> Tensor[(15, 3, 3), float64] {
  @func_278() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_9032() -> (Tensor[(15, 3, 3), float32],) {
  %785 = @func_7683() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %786 = %785.1;
  (%786,)
}

def @func_11160() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), uint8]) {
  %787 = @func_10186() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(12, 14, 4), int32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) */;
  %788 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %789 = %788.0;
  %790 = cast(meta[relay.Constant][33] /* ty=Tensor[(15, 3, 3), float64] */, dtype="uint8") /* ty=Tensor[(15, 3, 3), uint8] */;
  %791 = shape_of(%789, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%789, dtype="uint8") /* ty=Tensor[(15, 3, 3), uint8] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %794 = @func_4517() /* ty=Tensor[(15, 3, 3), float64] */;
  %795 = %787.4;
  %796 = minimum(%792, %793) /* ty=Tensor[(15, 3, 3), uint8] */;
  (%794, %795, %796)
}

def @func_11170() -> Tensor[(15, 3, 3), float64] {
  %797 = @func_3094() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %797.0
}

def @func_11195() -> Tensor[(7, 16, 13), float64] {
  %798 = @func_10212() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %798.0
}

def @func_2813() -> Tensor[(15, 3, 3), float64] {
  @func_283() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_9272() -> (Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32]) {
  %799 = @func_5855() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64]) */;
  %800 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %801 = %799.0;
  %802 = %800.2;
  (%801, %802)
}

def @func_9487(%var_9471: Tensor[(16, 3, 15), bool], %var_9472: Tensor[(16, 3, 15), bool]) -> (Tensor[(16, 3, 15), bool], Tensor[(16, 3, 15), float64]) {
  %803 = cast(%var_9472, dtype="bool") /* ty=Tensor[(16, 3, 15), bool] */;
  %804 = shape_of(%var_9471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %805 = cast(%var_9471, dtype="bool") /* ty=Tensor[(16, 3, 15), bool] */;
  %806 = dyn.reshape(%803, %804, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %807 = cast(%var_9472, dtype="float64") /* ty=Tensor[(16, 3, 15), float64] */;
  %808 = logical_or(%805, %806) /* ty=Tensor[(16, 3, 15), bool] */;
  %809 = cos(%807) /* ty=Tensor[(16, 3, 15), float64] */;
  (%808, %809)
}

def @func_6338() -> (Tensor[(135), float64], Tensor[(14, 7, 6), int32]) {
  %810 = @func_4883() /* ty=(Tensor[(135), float64],) */;
  %811 = %810.0;
  %812 = @func_1797() /* ty=Tensor[(14, 7, 6), int32] */;
  (%811, %812)
}

def @func_8339(%var_8308: Tensor[(1089), bool], %var_8323: Tensor[(12, 14, 4), uint8]) -> (Tensor[(15, 3, 3), float64], Tensor[(8, 1, 4), float64], Tensor[(9, 11, 11), bool], Tensor[(1089), bool], Tensor[(12, 14, 4), bool]) {
  %813 = @func_4188() /* ty=(Tensor[(8, 1, 4), float64],) */;
  %814 = cast(%var_8308, dtype="bool") /* ty=Tensor[(1089), bool] */;
  %815 = reshape(%814, newshape=[9, 11, 11]) /* ty=Tensor[(9, 11, 11), bool] */;
  %816 = @func_5064(%815) /* ty=(Tensor[(9, 11, 11), bool],) */;
  %817 = @func_5894() /* ty=Tensor[(12, 14, 4), uint8] */;
  %818 = cast(%var_8323, dtype="bool") /* ty=Tensor[(12, 14, 4), bool] */;
  %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(%817, dtype="bool") /* ty=Tensor[(12, 14, 4), bool] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %822 = @func_4517() /* ty=Tensor[(15, 3, 3), float64] */;
  %823 = %813.0;
  %824 = %816.0;
  %825 = less_equal(%820, %821) /* ty=Tensor[(12, 14, 4), bool] */;
  (%822, %823, %824, %var_8308, %825)
}

def @func_12238() -> (Tensor[(15, 3, 3), float64],) {
  %826 = @func_6790() /* ty=(Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) */;
  %827 = %826.1;
  (%827,)
}

def @func_1826() -> Tensor[(12, 14, 4), float32] {
  %828 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %829 = %828.1;
  %830 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 14, 4), uint8] */, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %831 = shape_of(%829, dtype="int32") /* ty=Tensor[(3), int32] */;
  %832 = cast(%829, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%832, %833) /* ty=Tensor[(12, 14, 4), float32] */
}

def @func_7563() -> (Tensor[(12, 14, 4), float32], Tensor[(7, 16, 13), float64]) {
  %834 = @func_4617() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) */;
  %835 = %834.2;
  %836 = cast(%835, dtype="float64") /* ty=Tensor[(7, 16, 13), float64] */;
  %837 = @func_1826() /* ty=Tensor[(12, 14, 4), float32] */;
  %838 = tan(%836) /* ty=Tensor[(7, 16, 13), float64] */;
  (%837, %838)
}

def @func_9246() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) {
  %839 = @func_2799() /* ty=Tensor[(15, 3, 3), float64] */;
  %840 = @func_6846() /* ty=Tensor[(7, 16, 13), float64] */;
  %841 = @func_9161() /* ty=Tensor[(15, 3, 3), float64] */;
  (%839, %840, %841)
}

def @func_11305() -> (Tensor[(15, 3, 3), float64], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float32]) {
  %842 = @func_2456() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) */;
  %843 = @func_5773() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %844 = @func_5773() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %845 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %846 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %847 = @func_2636() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %848 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  %849 = %842.0;
  %850 = %843.0;
  %851 = %844.0;
  %852 = @func_1826() /* ty=Tensor[(12, 14, 4), float32] */;
  %853 = %845.1;
  %854 = %846.1;
  %855 = %847.0;
  (%848, %849, %850, %851, %852, %853, %854, %855)
}

def @func_7351() -> (Tensor[(15, 3, 3), float64],) {
  %856 = @func_7002() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) */;
  %857 = %856.0;
  (%857,)
}

def @func_10098() -> (Tensor[(15, 3, 3), float64],) {
  %858 = @func_6679() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %859 = %858.0;
  (%859,)
}

def @func_9161() -> Tensor[(15, 3, 3), float64] {
  @func_1697() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_3554() -> (Tensor[(7, 16, 13), float64],) {
  %860 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %861 = %860.0;
  (%861,)
}

def @func_744() -> (Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) {
  %862 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %863 = @func_590() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */;
  %864 = %862.1;
  %865 = %863.1;
  (%864, %865)
}

def @func_1917() -> Tensor[(56, 12), uint8] {
  %866 = @func_1322() /* ty=(Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) */;
  %866.0
}

def @func_2268() -> Tensor[(15, 3, 3), float64] {
  @func_1459() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_11720() -> (Tensor[(15, 3, 3), float32],) {
  %867 = @func_9032() /* ty=(Tensor[(15, 3, 3), float32],) */;
  %868 = %867.0;
  (%868,)
}

def @func_10075() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(14, 7, 6), int32]) {
  %869 = @func_5506() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64]) */;
  %870 = @func_2771() /* ty=(Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) */;
  %871 = @func_2456() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) */;
  %872 = @func_9579() /* ty=Tensor[(15, 3, 3), float64] */;
  %873 = %869.1;
  %874 = @func_9161() /* ty=Tensor[(15, 3, 3), float64] */;
  %875 = %870.0;
  %876 = %871.0;
  (%872, %873, %874, %875, %876)
}

def @func_318(%var_300: Tensor[(12, 14, 4), uint8], %var_301: Tensor[(12, 14, 4), uint8]) -> (Tensor[(12, 14, 4), uint8],) {
  %877 = cast(%var_301, dtype="uint8") /* ty=Tensor[(12, 14, 4), uint8] */;
  %878 = shape_of(%var_300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %879 = cast(%var_300, dtype="uint8") /* ty=Tensor[(12, 14, 4), uint8] */;
  %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %881 = bitwise_and(%879, %880) /* ty=Tensor[(12, 14, 4), uint8] */;
  (%881,)
}

def @func_2789() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %882 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  %883 = @func_1459() /* ty=Tensor[(15, 3, 3), float64] */;
  (%882, %883)
}

def @func_5123() -> (Tensor[(672), uint8],) {
  %884 = @func_590() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */;
  %885 = %884.2;
  (%885,)
}

def @func_835() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %886 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %887 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %888 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %889 = %886.0;
  %890 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  %891 = %887.0;
  %892 = %888.3;
  %893 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  (%889, %890, %891, %892, %893)
}

def @func_713() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %894 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %895 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  %896 = %894.0;
  (%895, %896)
}

def @func_6504(%var_6452: Tensor[(56, 12), uint8]) -> (Tensor[(15, 3, 3), float64], Tensor[(56, 12), float64], Tensor[(15, 3, 9), bool], Tensor[(45), float32], Tensor[(15, 3, 3), float64], Tensor[(56, 12), int16], Tensor[(15, 3, 3), float64], Tensor[(16, 9, 6), float64], Tensor[(864), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %897 = @func_1572() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %898 = cast(%var_6452, dtype="uint8") /* ty=Tensor[(56, 12), uint8] */;
  %899 = reshape(%898, newshape=[56, 12]) /* ty=Tensor[(56, 12), uint8] */;
  %900 = cast(meta[relay.Constant][35] /* ty=Tensor[(45), float32] */, dtype="float32") /* ty=Tensor[(45), float32] */;
  %901 = reshape(%900, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %902 = @func_4112(%901) /* ty=(Tensor[(15, 3, 3), bool], Tensor[(45), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), bool]) */;
  %903 = @func_4409() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64]) */;
  %904 = cast(%var_6452, dtype="float32") /* ty=Tensor[(56, 12), float32] */;
  %905 = sigmoid(%904) /* ty=Tensor[(56, 12), float32] */;
  %906 = cast(meta[relay.Constant][36] /* ty=Tensor[(56, 12), float32] */, dtype="int16") /* ty=Tensor[(56, 12), int16] */;
  %907 = shape_of(%905, dtype="int32") /* ty=Tensor[(2), int32] */;
  %908 = cast(%905, dtype="int16") /* ty=Tensor[(56, 12), int16] */;
  %909 = dyn.reshape(%906, %907, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %910 = cast(meta[relay.Constant][37] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %911 = cast(meta[relay.Constant][37] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %912 = reshape(%910, newshape=[16, 9, 6]) /* ty=Tensor[(16, 9, 6), float64] */;
  %913 = reshape(%911, newshape=[16, 9, 6]) /* ty=Tensor[(16, 9, 6), float64] */;
  %914 = @func_4273(%912, %913) /* ty=(Tensor[(16, 9, 6), float64], Tensor[(16, 9, 6), bool]) */;
  %915 = %897.0;
  %916 = @func_1037(%899) /* ty=Tensor[(56, 12), float64] */;
  %917 = %902.3;
  %918 = %903.0;
  %919 = bitwise_and(%908, %909) /* ty=Tensor[(56, 12), int16] */;
  %920 = @func_2799() /* ty=Tensor[(15, 3, 3), float64] */;
  %921 = %914.0;
  %922 = @func_2268() /* ty=Tensor[(15, 3, 3), float64] */;
  %923 = @func_4999() /* ty=Tensor[(15, 3, 3), float64] */;
  (%915, %916, %917, meta[relay.Constant][35] /* ty=Tensor[(45), float32] */, %918, %919, %920, %921, meta[relay.Constant][37] /* ty=Tensor[(864), float64] */, %922, %923)
}

def @func_4662() -> (Tensor[(14, 7, 6), int32],) {
  %924 = @func_2914() /* ty=Tensor[(14, 7, 6), int32] */;
  (%924,)
}

def @func_1945() -> (Tensor[(15, 3, 3), float64], Tensor[(14, 7, 6), int32]) {
  %925 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %926 = %925.1;
  %927 = @func_1797() /* ty=Tensor[(14, 7, 6), int32] */;
  (%926, %927)
}

def @func_4921() -> Tensor[(7, 16, 13), float64] {
  @func_3597() /* ty=Tensor[(7, 16, 13), float64] */
}

def @func_5679() -> (Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), bool], Tensor[(15, 3, 3), float64]) {
  %928 = @func_2636() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %929 = @func_5321() /* ty=Tensor[(12, 14, 4), float32] */;
  %930 = @func_1917() /* ty=Tensor[(56, 12), uint8] */;
  %931 = cast(%930, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %932 = shape_of(%929, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(%929, dtype="bool") /* ty=Tensor[(12, 14, 4), bool] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %935 = %928.0;
  %936 = logical_or(%933, %934) /* ty=Tensor[(12, 14, 4), bool] */;
  %937 = @func_2813() /* ty=Tensor[(15, 3, 3), float64] */;
  (%935, %936, %937)
}

def @func_1879() -> Tensor[(15, 3, 3), float64] {
  %938 = @func_1434() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %938.1
}

def @func_9848() -> (Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %939 = @func_4662() /* ty=(Tensor[(14, 7, 6), int32],) */;
  %940 = @func_1762() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %941 = %939.0;
  %942 = %940.0;
  %943 = @func_1879() /* ty=Tensor[(15, 3, 3), float64] */;
  %944 = @func_2813() /* ty=Tensor[(15, 3, 3), float64] */;
  %945 = @func_8547() /* ty=Tensor[(15, 3, 3), float64] */;
  (%941, %942, %943, %944, %945)
}

def @func_8547() -> Tensor[(15, 3, 3), float64] {
  %946 = @func_4617() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) */;
  %946.1
}

def @func_7777() -> (Tensor[(15, 3, 3), float64],) {
  %947 = @func_2636() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %948 = %947.1;
  (%948,)
}

def @func_4999() -> Tensor[(15, 3, 3), float64] {
  %949 = @func_1572() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %949.0
}

def @func_3254() -> (Tensor[(15, 3, 3), bool],) {
  %950 = @func_2033() /* ty=Tensor[(15, 3, 3), bool] */;
  (%950,)
}

def @func_2387(%var_2361: Tensor[(14, 11, 1), float32], %var_2364: Tensor[(14, 11, 14), float32], %var_2368: Tensor[(14, 11, 3), float32]) -> (Tensor[(14, 11, 14), int64], Tensor[(14, 11, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64]) {
  %951 = cast(%var_2361, dtype="int64") /* ty=Tensor[(14, 11, 1), int64] */;
  %952 = cast(%var_2364, dtype="int64") /* ty=Tensor[(14, 11, 14), int64] */;
  %953 = cast(%var_2361, dtype="float32") /* ty=Tensor[(14, 11, 1), float32] */;
  %954 = log(%953) /* ty=Tensor[(14, 11, 1), float32] */;
  %955 = cast(%954, dtype="float64") /* ty=Tensor[(14, 11, 1), float64] */;
  %956 = cast(%var_2368, dtype="float64") /* ty=Tensor[(14, 11, 3), float64] */;
  %957 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %958 = cast(%var_2361, dtype="float64") /* ty=Tensor[(14, 11, 1), float64] */;
  %959 = right_shift(%951, %952) /* ty=Tensor[(14, 11, 14), int64] */;
  %960 = divide(%955, %956) /* ty=Tensor[(14, 11, 3), float64] */;
  %961 = %957.0;
  %962 = sigmoid(%958) /* ty=Tensor[(14, 11, 1), float64] */;
  (%959, %960, %961, %962)
}

def @func_1722(%var_1714: Tensor[(135), float64]) -> (Tensor[(672), uint8], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) {
  %963 = @func_590() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */;
  %964 = @func_1322() /* ty=(Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) */;
  %965 = cast(%var_1714, dtype="float64") /* ty=Tensor[(135), float64] */;
  %966 = reshape(%965, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %967 = @func_636(%966) /* ty=(Tensor[(15, 3, 3), uint16],) */;
  %968 = cast(%var_1714, dtype="float64") /* ty=Tensor[(135), float64] */;
  %969 = reshape(%968, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %970 = %963.2;
  %971 = %964.0;
  %972 = %967.0;
  %973 = @func_82(%969) /* ty=Tensor[(15, 3, 3), float64] */;
  (%970, %971, %972, %var_1714, %973)
}

def @func_3484(%var_3469: Tensor[(45), float32]) -> (Tensor[(56, 12), uint8], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), float32], Tensor[(45), float32], Tensor[(1, 405), float32], Tensor[(15, 3, 3), float64]) {
  %974 = @func_1762() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %975 = cast(%var_3469, dtype="float32") /* ty=Tensor[(45), float32] */;
  %976 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 405), float32] */, dtype="float32") /* ty=Tensor[(1, 405), float32] */;
  %977 = reshape(%975, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), float32] */;
  %978 = reshape(%976, newshape=[15, 3, 9]) /* ty=Tensor[(15, 3, 9), float32] */;
  %979 = @func_1114(%977, %978) /* ty=(Tensor[(15, 3, 9), float32],) */;
  %980 = @func_1917() /* ty=Tensor[(56, 12), uint8] */;
  %981 = %974.0;
  %982 = %979.0;
  %983 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  (%980, %981, %982, %var_3469, meta[relay.Constant][38] /* ty=Tensor[(1, 405), float32] */, %983)
}

def @func_2456() -> (Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) {
  %984 = cast(meta[relay.Constant][39] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %985 = cast(meta[relay.Constant][40] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %986 = reshape(%984, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), float32] */;
  %987 = reshape(%985, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %988 = @func_1981(%986, %987) /* ty=(Tensor[(10, 1, 8), float32], Tensor[(15, 3, 3), float64], Tensor[(135), float64]) */;
  %989 = @func_1797() /* ty=Tensor[(14, 7, 6), int32] */;
  %990 = %988.0;
  (%989, %990, meta[relay.Constant][39] /* ty=Tensor[(80), float32] */, meta[relay.Constant][40] /* ty=Tensor[(135), float64] */)
}

def @func_4112(%var_4078: Tensor[(45), float32]) -> (Tensor[(15, 3, 3), bool], Tensor[(45), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), bool]) {
  %991 = @func_3532() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), uint16], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %992 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %993 = cast(%var_4078, dtype="float32") /* ty=Tensor[(45), float32] */;
  %994 = reshape(%993, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %995 = @func_3484(%994) /* ty=(Tensor[(56, 12), uint8], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), float32], Tensor[(45), float32], Tensor[(1, 405), float32], Tensor[(15, 3, 3), float64]) */;
  %996 = %995.2;
  %997 = cast(meta[relay.Constant][41] /* ty=Tensor[(15, 3, 9), float32] */, dtype="bool") /* ty=Tensor[(15, 3, 9), bool] */;
  %998 = shape_of(%996, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%996, dtype="bool") /* ty=Tensor[(15, 3, 9), bool] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1001 = %991.2;
  %1002 = %992.1;
  %1003 = equal(%999, %1000) /* ty=Tensor[(15, 3, 9), bool] */;
  (%1001, %var_4078, %1002, %1003)
}

def @func_8640(%var_8631: Tensor[(12, 14, 4), uint8]) -> (Tensor[(15, 3, 3), float64], Tensor[(588), int32], Tensor[(672), uint8], Tensor[(588), int32], Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), float64]) {
  %1004 = cast(meta[relay.Constant][42] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1005 = cast(meta[relay.Constant][43] /* ty=Tensor[(588), int32] */, dtype="int32") /* ty=Tensor[(588), int32] */;
  %1006 = @func_2268() /* ty=Tensor[(15, 3, 3), float64] */;
  %1007 = cast(%1006, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %1008 = reshape(%1004, newshape=[56, 12]) /* ty=Tensor[(56, 12), uint8] */;
  %1009 = reshape(%1005, newshape=[588]) /* ty=Tensor[(588), int32] */;
  %1010 = reshape(%1007, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %1011 = @func_8044(%1008, %1009, %1010) /* ty=(Tensor[(56, 12), bool], Tensor[(2156), float32], Tensor[(7, 308), float32], Tensor[(462), float32], Tensor[(14, 7, 6), uint16], Tensor[(588), int32], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
  %1012 = cast(meta[relay.Constant][42] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %1013 = reshape(%1012, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %1014 = @func_1671(%1013) /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(15, 3, 3), float64]) */;
  %1015 = %1014.3;
  %1016 = cast(%var_8631, dtype="float64") /* ty=Tensor[(12, 14, 4), float64] */;
  %1017 = shape_of(%1015, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1018 = cast(%1015, dtype="float64") /* ty=Tensor[(12, 14, 4), float64] */;
  %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1020 = %1011.5;
  %1021 = @func_2182() /* ty=Tensor[(15, 3, 3), float32] */;
  %1022 = minimum(%1018, %1019) /* ty=Tensor[(12, 14, 4), float64] */;
  (%1006, %1020, meta[relay.Constant][42] /* ty=Tensor[(672), uint8] */, meta[relay.Constant][43] /* ty=Tensor[(588), int32] */, %1021, %1022)
}

def @func_9060() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %1023 = @func_5773() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %1024 = @func_2268() /* ty=Tensor[(15, 3, 3), float64] */;
  %1025 = %1023.0;
  (%1024, %1025)
}

def @func_8361() -> (Tensor[(15, 3, 3), float64],) {
  %1026 = @func_423() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %1027 = %1026.2;
  (%1027,)
}

def @func_7855() -> (Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) {
  %1028 = @func_7002() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) */;
  %1029 = @func_5679() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), bool], Tensor[(15, 3, 3), float64]) */;
  %1030 = %1028.1;
  %1031 = %1029.2;
  (%1030, %1031)
}

def @func_6425(%var_6387: Tensor[(15, 3, 3), float64], %var_6397: Tensor[(22, 7), float32], %var_6398: Tensor[(231, 2), float32]) -> (Tensor[(672), uint8], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(2156), float32], Tensor[(22, 7), float32], Tensor[(231, 2), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %1032 = @func_4912() /* ty=(Tensor[(135), float64], Tensor[(672), uint8], Tensor[(14, 7, 6), float64]) */;
  %1033 = @func_2456() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) */;
  %1034 = @func_4617() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) */;
  %1035 = @func_1606() /* ty=Tensor[(15, 3, 3), float64] */;
  %1036 = cast(%var_6387, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %1037 = shape_of(%1035, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1038 = cast(%1035, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1040 = cast(%var_6397, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
  %1041 = cast(%var_6398, dtype="float32") /* ty=Tensor[(231, 2), float32] */;
  %1042 = reshape(%1040, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %1043 = reshape(%1041, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %1044 = @func_3952(%1042, %1043) /* ty=(Tensor[(8, 3, 13), bool], Tensor[(14, 11, 14), int64], Tensor[(154), float32], Tensor[(2156), float32], Tensor[(462), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(8, 84), bool]) */;
  %1045 = @func_5506() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64]) */;
  %1046 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %1047 = %1032.1;
  %1048 = %1033.0;
  %1049 = %1034.3;
  %1050 = maximum(%1038, %1039) /* ty=Tensor[(15, 3, 3), float64] */;
  %1051 = %1044.3;
  %1052 = %1045.2;
  %1053 = %1046.0;
  (%1047, %1048, %1049, %1050, %1051, %var_6397, %var_6398, %1052, %1053)
}

def @func_2595() -> (Tensor[(15, 3, 3), float64],) {
  %1054 = @func_2091() /* ty=Tensor[(15, 3, 3), float64] */;
  (%1054,)
}

def @func_1459() -> Tensor[(15, 3, 3), float64] {
  @func_278() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_11622() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %1055 = @func_7855() /* ty=(Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) */;
  %1056 = %1055.1;
  %1057 = @func_2799() /* ty=Tensor[(15, 3, 3), float64] */;
  (%1056, %1057)
}

def @func_5773() -> (Tensor[(15, 3, 3), float64],) {
  %1058 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %1059 = %1058.0;
  (%1059,)
}

def @func_10325() -> (Tensor[(15, 3, 3), float64],) {
  %1060 = @func_9060() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %1061 = %1060.0;
  (%1061,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8872() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64], Tensor[(45, 1), float32]) {
  @func_8870() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64], Tensor[(45, 1), float32]) */
}

def @func_6523() -> (Tensor[(672), uint8],) {
  %0 = @func_5123() /* ty=(Tensor[(672), uint8],) */;
  %1 = %0.0;
  (%1,)
}

def @func_10098() -> (Tensor[(15, 3, 3), float64],) {
  %2 = @func_6679() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %3 = %2.0;
  (%3,)
}

def @func_1782() -> (Tensor[(14, 7, 6), int32],) {
  %11 = fn () -> (Tensor[(14, 7, 6), int32],) {
    %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 7, 6), float64] */, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
    %5 = acosh(%4) /* ty=Tensor[(14, 7, 6), float64] */;
    %6 = cast(%5, dtype="int32") /* ty=Tensor[(14, 7, 6), int32] */;
    %7 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(14, 7, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 7, 6), float64] */, dtype="int32") /* ty=Tensor[(14, 7, 6), int32] */;
    %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %10 = logical_xor(%8, %9) /* ty=Tensor[(14, 7, 6), int32] */;
    (%10,)
  };
  %11() /* ty=(Tensor[(14, 7, 6), int32],) */
}

def @func_689() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_12112(%var_12109: Tensor[(154), float32], %var_12110: Tensor[(154, 14), float32], %var_12111: Tensor[(7, 66), float32]) -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64], Tensor[(154), float32], Tensor[(154, 14), float32], Tensor[(7, 66), float32], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) {
  %28 = fn (%var_12060: Tensor[(154), float32], %var_12061: Tensor[(154, 14), float32], %var_12062: Tensor[(7, 66), float32]) -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64], Tensor[(154), float32], Tensor[(154, 14), float32], Tensor[(7, 66), float32], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) {
    %12 = @func_3554() /* ty=(Tensor[(7, 16, 13), float64],) */;
    %13 = %12.0;
    %14 = cast(%13, dtype="float64") /* ty=Tensor[(7, 16, 13), float64] */;
    %15 = cast(%var_12060, dtype="float32") /* ty=Tensor[(154), float32] */;
    %16 = cast(%var_12061, dtype="float32") /* ty=Tensor[(154, 14), float32] */;
    %17 = cast(%var_12062, dtype="float32") /* ty=Tensor[(7, 66), float32] */;
    %18 = reshape(%15, newshape=[14, 11, 1]) /* ty=Tensor[(14, 11, 1), float32] */;
    %19 = reshape(%16, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), float32] */;
    %20 = reshape(%17, newshape=[14, 11, 3]) /* ty=Tensor[(14, 11, 3), float32] */;
    %21 = @func_2387(%18, %19, %20) /* ty=(Tensor[(14, 11, 14), int64], Tensor[(14, 11, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64]) */;
    %22 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
    %23 = @func_6226() /* ty=Tensor[(15, 3, 3), float64] */;
    %24 = sinh(%14) /* ty=Tensor[(7, 16, 13), float64] */;
    %25 = %21.3;
    %26 = %22.1;
    %27 = @func_5894() /* ty=Tensor[(12, 14, 4), uint8] */;
    (%23, %24, %25, %var_12060, %var_12061, %var_12062, %26, %27)
  };
  %28(%var_12109, %var_12110, %var_12111) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64], Tensor[(154), float32], Tensor[(154, 14), float32], Tensor[(7, 66), float32], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) */
}

def @func_1724(%var_1723: Tensor[(135), float64]) -> (Tensor[(672), uint8], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) {
  %40 = fn (%var_1714: Tensor[(135), float64]) -> (Tensor[(672), uint8], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) {
    %29 = @func_590() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */;
    %30 = @func_1322() /* ty=(Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) */;
    %31 = cast(%var_1714, dtype="float64") /* ty=Tensor[(135), float64] */;
    %32 = reshape(%31, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
    %33 = @func_636(%32) /* ty=(Tensor[(15, 3, 3), uint16],) */;
    %34 = cast(%var_1714, dtype="float64") /* ty=Tensor[(135), float64] */;
    %35 = reshape(%34, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
    %36 = %29.2;
    %37 = %30.0;
    %38 = %33.0;
    %39 = @func_82(%35) /* ty=Tensor[(15, 3, 3), float64] */;
    (%36, %37, %38, %var_1714, %39)
  };
  %40(%var_1723) /* ty=(Tensor[(672), uint8], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_10214() -> (Tensor[(7, 16, 13), float64],) {
  @func_10212() /* ty=(Tensor[(7, 16, 13), float64],) */
}

def @func_7353() -> (Tensor[(15, 3, 3), float64],) {
  @func_7351() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_7778() -> (Tensor[(15, 3, 3), float64],) {
  %43 = fn () -> (Tensor[(15, 3, 3), float64],) {
    %41 = @func_2636() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
    %42 = %41.1;
    (%42,)
  };
  %43() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_2801() -> Tensor[(15, 3, 3), float64] {
  @func_2799() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_3955(%var_3953: Tensor[(154), float32], %var_3954: Tensor[(462), float32]) -> (Tensor[(8, 3, 13), bool], Tensor[(14, 11, 14), int64], Tensor[(154), float32], Tensor[(2156), float32], Tensor[(462), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(8, 84), bool]) {
  %74 = fn (%var_3925: Tensor[(154), float32], %var_3927: Tensor[(462), float32]) -> (Tensor[(8, 3, 13), bool], Tensor[(14, 11, 14), int64], Tensor[(154), float32], Tensor[(2156), float32], Tensor[(462), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(8, 84), bool]) {
    %44 = @func_2009() /* ty=(Tensor[(8, 3, 13), bool],) */;
    %45 = cast(%var_3925, dtype="float32") /* ty=Tensor[(154), float32] */;
    %46 = cast(meta[relay.Constant][1] /* ty=Tensor[(2156), float32] */, dtype="float32") /* ty=Tensor[(2156), float32] */;
    %47 = cast(%var_3927, dtype="float32") /* ty=Tensor[(462), float32] */;
    %48 = reshape(%45, newshape=[14, 11, 1]) /* ty=Tensor[(14, 11, 1), float32] */;
    %49 = reshape(%46, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), float32] */;
    %50 = reshape(%47, newshape=[14, 11, 3]) /* ty=Tensor[(14, 11, 3), float32] */;
    %51 = @func_2387(%48, %49, %50) /* ty=(Tensor[(14, 11, 14), int64], Tensor[(14, 11, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64]) */;
    %52 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 84), uint8] */, dtype="float32") /* ty=Tensor[(8, 84), float32] */;
    %53 = log10(%52) /* ty=Tensor[(8, 84), float32] */;
    %54 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 84), uint8] */, dtype="uint8") /* ty=Tensor[(8, 84), uint8] */;
    %55 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 84), uint8] */, dtype="uint8") /* ty=Tensor[(8, 84), uint8] */;
    %56 = reshape(%54, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
    %57 = reshape(%55, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
    %58 = @func_318(%56, %57) /* ty=(Tensor[(12, 14, 4), uint8],) */;
    %59 = %58.0;
    %60 = cast(%59, dtype="float64") /* ty=Tensor[(12, 14, 4), float64] */;
    %61 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(8, 84), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %62 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 84), uint8] */, dtype="float64") /* ty=Tensor[(8, 84), float64] */;
    %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %64 = mod(%62, %63) /* ty=Tensor[(8, 84), float64] */;
    %65 = cast(%64, dtype="bool") /* ty=Tensor[(8, 84), bool] */;
    %66 = shape_of(%53, dtype="int32") /* ty=Tensor[(2), int32] */;
    %67 = cast(%53, dtype="bool") /* ty=Tensor[(8, 84), bool] */;
    %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %69 = %44.0;
    %70 = %51.0;
    %71 = @func_1459() /* ty=Tensor[(15, 3, 3), float64] */;
    %72 = @func_1606() /* ty=Tensor[(15, 3, 3), float64] */;
    %73 = logical_or(%67, %68) /* ty=Tensor[(8, 84), bool] */;
    (%69, %70, %var_3925, meta[relay.Constant][1] /* ty=Tensor[(2156), float32] */, %var_3927, %71, %72, %73)
  };
  %74(%var_3953, %var_3954) /* ty=(Tensor[(8, 3, 13), bool], Tensor[(14, 11, 14), int64], Tensor[(154), float32], Tensor[(2156), float32], Tensor[(462), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(8, 84), bool]) */
}

def @func_11324(%var_11315: Tensor[(5, 12, 10), float64]) -> Tensor[(5, 12, 10), float64] {
  %75 = cast(%var_11315, dtype="float64") /* ty=Tensor[(5, 12, 10), float64] */;
  exp(%75) /* ty=Tensor[(5, 12, 10), float64] */
}

def @func_9926(%var_9924: Tensor[(3, 12, 3), int64], %var_9925: Tensor[(3, 12, 3), int64]) -> (Tensor[(3, 12, 3), int64],) {
  @func_9922(%var_9924, %var_9925) /* ty=(Tensor[(3, 12, 3), int64],) */
}

def @func_4618() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) {
  %89 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) {
    %76 = @func_835() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %77 = @func_3204() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %78 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
    %79 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %80 = @func_2789() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %81 = %80.0;
    %82 = cast(%81, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
    %83 = %76.1;
    %84 = %77.0;
    %85 = %78.0;
    %86 = %79.1;
    %87 = @func_2033() /* ty=Tensor[(15, 3, 3), bool] */;
    %88 = atan(%82) /* ty=Tensor[(15, 3, 3), float32] */;
    (%83, %84, %85, %86, %87, %88)
  };
  %89() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) */
}

def @func_4277(%var_4275: Tensor[(16, 9, 6), float64], %var_4276: Tensor[(16, 9, 6), float64]) -> (Tensor[(16, 9, 6), float64], Tensor[(16, 9, 6), bool]) {
  @func_4273(%var_4275, %var_4276) /* ty=(Tensor[(16, 9, 6), float64], Tensor[(16, 9, 6), bool]) */
}

def @func_7351() -> (Tensor[(15, 3, 3), float64],) {
  %90 = @func_7002() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) */;
  %91 = %90.0;
  (%91,)
}

def @func_1461() -> Tensor[(15, 3, 3), float64] {
  @func_1459() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_2854() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) {
  %102 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) {
    %92 = @func_1762() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %93 = cast(meta[relay.Constant][3] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %94 = cast(meta[relay.Constant][3] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %95 = reshape(%93, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
    %96 = reshape(%94, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
    %97 = @func_318(%95, %96) /* ty=(Tensor[(12, 14, 4), uint8],) */;
    %98 = @func_2268() /* ty=Tensor[(15, 3, 3), float64] */;
    %99 = %92.0;
    %100 = @func_1459() /* ty=Tensor[(15, 3, 3), float64] */;
    %101 = %97.0;
    (%98, %99, %100, %101, meta[relay.Constant][3] /* ty=Tensor[(672), uint8] */)
  };
  %102() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */
}

def @func_82(%var_69: Tensor[(15, 3, 3), float64]) -> Tensor[(15, 3, 3), float64] {
  %103 = cast(%var_69, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %104 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(15, 3, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 3, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %107 = subtract(%105, %106) /* ty=Tensor[(15, 3, 3), float64] */;
  %108 = cast(%107, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  atanh(%108) /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_11139(%var_11137: Tensor[(720), bool]) -> (Tensor[(15, 3, 3), float64], Tensor[(16, 3, 15), float64], Tensor[(720), bool]) {
  @func_11136(%var_11137) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(16, 3, 15), float64], Tensor[(720), bool]) */
}

def @func_11918() -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float32], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(8, 5, 4), bool], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(8, 5, 4), float64], Tensor[(8, ?, 4), uint64], Tensor[(15, 3, 3), float64]) {
  %109 = @func_10554() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float32]) */;
  %110 = @func_2297() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(14, 7, 6), int32]) */;
  %111 = @func_5203() /* ty=(Tensor[(15, 3, 3), uint32], Tensor[(15, 3, 3), float64]) */;
  %112 = @func_6001() /* ty=Tensor[(8, 1, 4), float64] */;
  %113 = cast(%112, dtype="float64") /* ty=Tensor[(8, 1, 4), float64] */;
  %114 = asinh(%113) /* ty=Tensor[(8, 1, 4), float64] */;
  %115 = cast(%114, dtype="float32") /* ty=Tensor[(8, 1, 4), float32] */;
  %116 = sin(%115) /* ty=Tensor[(8, 1, 4), float32] */;
  %117 = cast(%116, dtype="float32") /* ty=Tensor[(8, 1, 4), float32] */;
  %118 = sqrt(%117) /* ty=Tensor[(8, 1, 4), float32] */;
  %119 = cast(%118, dtype="float64") /* ty=Tensor[(8, 1, 4), float64] */;
  %120 = tan(%119) /* ty=Tensor[(8, 1, 4), float64] */;
  %121 = cast(%112, dtype="float64") /* ty=Tensor[(8, 1, 4), float64] */;
  %122 = cosh(%121) /* ty=Tensor[(8, 1, 4), float64] */;
  %123 = cast(%122, dtype="bool") /* ty=Tensor[(8, 1, 4), bool] */;
  %124 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 5, 4), float64] */, dtype="bool") /* ty=Tensor[(8, 5, 4), bool] */;
  %125 = less(%123, %124) /* ty=Tensor[(8, 5, 4), bool] */;
  %126 = cast(%120, dtype="bool") /* ty=Tensor[(8, 1, 4), bool] */;
  %127 = cast(%125, dtype="bool") /* ty=Tensor[(8, 5, 4), bool] */;
  %128 = @func_10212() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %129 = @func_6679() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %130 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 5, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 5, 4), float64] */;
  %131 = cast(%112, dtype="uint64") /* ty=Tensor[(8, 1, 4), uint64] */;
  %132 = shape_of(%120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%120, dtype="uint64") /* ty=Tensor[(8, 1, 4), uint64] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %135 = @func_2595() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %136 = %109.1;
  %137 = @func_2182() /* ty=Tensor[(15, 3, 3), float32] */;
  %138 = %110.1;
  %139 = %111.1;
  %140 = greater_equal(%126, %127) /* ty=Tensor[(8, 5, 4), bool] */;
  %141 = %128.0;
  %142 = %129.0;
  %143 = @func_4999() /* ty=Tensor[(15, 3, 3), float64] */;
  %144 = acosh(%130) /* ty=Tensor[(8, 5, 4), float64] */;
  %145 = subtract(%133, %134) /* ty=Tensor[(8, ?, 4), uint64] */;
  %146 = %135.0;
  (%136, %137, %138, %139, %140, %141, %142, %143, %144, %145, %146)
}

def @func_7421(%var_7419: Tensor[(3, 5, 9), float32], %var_7420: Tensor[(462), float32]) -> (Tensor[(3, 5, 9), float32], Tensor[(15, 3, 3), float32], Tensor[(135), float64], Tensor[(80), float32], Tensor[(2156), float32], Tensor[(1, 154), float32], Tensor[(462), float32]) {
  %164 = fn (%var_7372: Tensor[(3, 5, 9), float32], %var_7405: Tensor[(462), float32]) -> (Tensor[(3, 5, 9), float32], Tensor[(15, 3, 3), float32], Tensor[(135), float64], Tensor[(80), float32], Tensor[(2156), float32], Tensor[(1, 154), float32], Tensor[(462), float32]) {
    %147 = cast(%var_7372, dtype="float32") /* ty=Tensor[(3, 5, 9), float32] */;
    %148 = cast(meta[relay.Constant][6] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %149 = tan(%147) /* ty=Tensor[(3, 5, 9), float32] */;
    %150 = cast(%149, dtype="float64") /* ty=Tensor[(3, 5, 9), float64] */;
    %151 = reshape(%148, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), float32] */;
    %152 = reshape(%150, newshape=[135]) /* ty=Tensor[(135), float64] */;
    %153 = @func_1981(%151, %152) /* ty=(Tensor[(10, 1, 8), float32], Tensor[(15, 3, 3), float64], Tensor[(135), float64]) */;
    %154 = cast(%149, dtype="float64") /* ty=Tensor[(3, 5, 9), float64] */;
    %155 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 154), float32] */, dtype="float32") /* ty=Tensor[(1, 154), float32] */;
    %156 = cast(%var_7405, dtype="float32") /* ty=Tensor[(462), float32] */;
    %157 = reshape(%154, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
    %158 = reshape(%155, newshape=[22, 7]) /* ty=Tensor[(22, 7), float32] */;
    %159 = reshape(%156, newshape=[231, 2]) /* ty=Tensor[(231, 2), float32] */;
    %160 = @func_6425(%157, %158, %159) /* ty=(Tensor[(672), uint8], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(2156), float32], Tensor[(22, 7), float32], Tensor[(231, 2), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %161 = @func_2182() /* ty=Tensor[(15, 3, 3), float32] */;
    %162 = %153.2;
    %163 = %160.4;
    (%149, %161, %162, meta[relay.Constant][6] /* ty=Tensor[(80), float32] */, %163, meta[relay.Constant][7] /* ty=Tensor[(1, 154), float32] */, %var_7405)
  };
  %164(%var_7419, %var_7420) /* ty=(Tensor[(3, 5, 9), float32], Tensor[(15, 3, 3), float32], Tensor[(135), float64], Tensor[(80), float32], Tensor[(2156), float32], Tensor[(1, 154), float32], Tensor[(462), float32]) */
}

def @func_9707() -> (Tensor[(15, 3, 3), float32],) {
  @func_9705() /* ty=(Tensor[(15, 3, 3), float32],) */
}

def @func_11305() -> (Tensor[(15, 3, 3), float64], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float32]) {
  %165 = @func_2456() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) */;
  %166 = @func_5773() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %167 = @func_5773() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %168 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %169 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %170 = @func_2636() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %171 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  %172 = %165.0;
  %173 = %166.0;
  %174 = %167.0;
  %175 = @func_1826() /* ty=Tensor[(12, 14, 4), float32] */;
  %176 = %168.1;
  %177 = %169.1;
  %178 = %170.0;
  (%171, %172, %173, %174, %175, %176, %177, %178)
}

def @func_9922(%var_9912: Tensor[(3, 12, 3), int64], %var_9913: Tensor[(3, 12, 3), int64]) -> (Tensor[(3, 12, 3), int64],) {
  %179 = cast(%var_9913, dtype="int64") /* ty=Tensor[(3, 12, 3), int64] */;
  %180 = shape_of(%var_9912, dtype="int32") /* ty=Tensor[(3), int32] */;
  %181 = cast(%var_9912, dtype="int64") /* ty=Tensor[(3, 12, 3), int64] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %183 = minimum(%181, %182) /* ty=Tensor[(3, 12, 3), int64] */;
  (%183,)
}

def @func_713() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %184 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %185 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  %186 = %184.0;
  (%185, %186)
}

def @func_1918() -> Tensor[(56, 12), uint8] {
  %188 = fn () -> Tensor[(56, 12), uint8] {
    %187 = @func_1322() /* ty=(Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) */;
    %187.0
  };
  %188() /* ty=Tensor[(56, 12), uint8] */
}

def @func_4731(%var_4707: Tensor[(13, 9, 1), int16], %var_4708: Tensor[(13, 9, 10), int16]) -> (Tensor[(13, 9, 10), int16], Tensor[(672), uint8]) {
  %189 = cast(%var_4707, dtype="int16") /* ty=Tensor[(13, 9, 1), int16] */;
  %190 = cast(%var_4708, dtype="int16") /* ty=Tensor[(13, 9, 10), int16] */;
  %191 = @func_590() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */;
  %192 = maximum(%189, %190) /* ty=Tensor[(13, 9, 10), int16] */;
  %193 = %191.2;
  (%192, %193)
}

def @func_1673(%var_1672: Tensor[(672), uint8]) -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(15, 3, 3), float64]) {
  %214 = fn (%var_1648: Tensor[(672), uint8]) -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(15, 3, 3), float64]) {
    %194 = @func_590() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */;
    %195 = %194.0;
    %196 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 3, 3), float64] */, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
    %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
    %198 = cast(%195, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
    %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %200 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 3, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
    %201 = reshape(%200, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
    %202 = @func_470(%201) /* ty=(Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */;
    %203 = cast(%var_1648, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %204 = cast(%var_1648, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %205 = reshape(%203, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
    %206 = reshape(%204, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
    %207 = @func_318(%205, %206) /* ty=(Tensor[(12, 14, 4), uint8],) */;
    %208 = @func_1173() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8]) */;
    %209 = mod(%198, %199) /* ty=Tensor[(15, 3, 3), float32] */;
    %210 = %202.2;
    %211 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
    %212 = %207.0;
    %213 = %208.0;
    (%209, %210, %211, %212, %var_1648, %213)
  };
  %214(%var_1672) /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(15, 3, 3), float64]) */
}

def @func_6506(%var_6505: Tensor[(56, 12), uint8]) -> (Tensor[(15, 3, 3), float64], Tensor[(56, 12), float64], Tensor[(15, 3, 9), bool], Tensor[(45), float32], Tensor[(15, 3, 3), float64], Tensor[(56, 12), int16], Tensor[(15, 3, 3), float64], Tensor[(16, 9, 6), float64], Tensor[(864), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %242 = fn (%var_6452: Tensor[(56, 12), uint8]) -> (Tensor[(15, 3, 3), float64], Tensor[(56, 12), float64], Tensor[(15, 3, 9), bool], Tensor[(45), float32], Tensor[(15, 3, 3), float64], Tensor[(56, 12), int16], Tensor[(15, 3, 3), float64], Tensor[(16, 9, 6), float64], Tensor[(864), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
    %215 = @func_1572() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %216 = cast(%var_6452, dtype="uint8") /* ty=Tensor[(56, 12), uint8] */;
    %217 = reshape(%216, newshape=[56, 12]) /* ty=Tensor[(56, 12), uint8] */;
    %218 = cast(meta[relay.Constant][9] /* ty=Tensor[(45), float32] */, dtype="float32") /* ty=Tensor[(45), float32] */;
    %219 = reshape(%218, newshape=[45]) /* ty=Tensor[(45), float32] */;
    %220 = @func_4112(%219) /* ty=(Tensor[(15, 3, 3), bool], Tensor[(45), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), bool]) */;
    %221 = @func_4409() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64]) */;
    %222 = cast(%var_6452, dtype="float32") /* ty=Tensor[(56, 12), float32] */;
    %223 = sigmoid(%222) /* ty=Tensor[(56, 12), float32] */;
    %224 = cast(meta[relay.Constant][10] /* ty=Tensor[(56, 12), float32] */, dtype="int16") /* ty=Tensor[(56, 12), int16] */;
    %225 = shape_of(%223, dtype="int32") /* ty=Tensor[(2), int32] */;
    %226 = cast(%223, dtype="int16") /* ty=Tensor[(56, 12), int16] */;
    %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %228 = cast(meta[relay.Constant][11] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
    %229 = cast(meta[relay.Constant][11] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
    %230 = reshape(%228, newshape=[16, 9, 6]) /* ty=Tensor[(16, 9, 6), float64] */;
    %231 = reshape(%229, newshape=[16, 9, 6]) /* ty=Tensor[(16, 9, 6), float64] */;
    %232 = @func_4273(%230, %231) /* ty=(Tensor[(16, 9, 6), float64], Tensor[(16, 9, 6), bool]) */;
    %233 = %215.0;
    %234 = @func_1037(%217) /* ty=Tensor[(56, 12), float64] */;
    %235 = %220.3;
    %236 = %221.0;
    %237 = bitwise_and(%226, %227) /* ty=Tensor[(56, 12), int16] */;
    %238 = @func_2799() /* ty=Tensor[(15, 3, 3), float64] */;
    %239 = %232.0;
    %240 = @func_2268() /* ty=Tensor[(15, 3, 3), float64] */;
    %241 = @func_4999() /* ty=Tensor[(15, 3, 3), float64] */;
    (%233, %234, %235, meta[relay.Constant][9] /* ty=Tensor[(45), float32] */, %236, %237, %238, %239, meta[relay.Constant][11] /* ty=Tensor[(864), float64] */, %240, %241)
  };
  %242(%var_6505) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), float64], Tensor[(15, 3, 9), bool], Tensor[(45), float32], Tensor[(15, 3, 3), float64], Tensor[(56, 12), int16], Tensor[(15, 3, 3), float64], Tensor[(16, 9, 6), float64], Tensor[(864), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_4273(%var_4201: Tensor[(16, 9, 6), float64], %var_4239: Tensor[(16, 9, 6), float64]) -> (Tensor[(16, 9, 6), float64], Tensor[(16, 9, 6), bool]) {
  %243 = cast(%var_4201, dtype="float64") /* ty=Tensor[(16, 9, 6), float64] */;
  %244 = log(%243) /* ty=Tensor[(16, 9, 6), float64] */;
  %245 = cast(%244, dtype="float64") /* ty=Tensor[(16, 9, 6), float64] */;
  %246 = cast(%var_4239, dtype="bool") /* ty=Tensor[(16, 9, 6), bool] */;
  %247 = shape_of(%var_4201, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%var_4201, dtype="bool") /* ty=Tensor[(16, 9, 6), bool] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %250 = log2(%245) /* ty=Tensor[(16, 9, 6), float64] */;
  %251 = not_equal(%248, %249) /* ty=Tensor[(16, 9, 6), bool] */;
  (%250, %251)
}

def @func_4922() -> Tensor[(7, 16, 13), float64] {
  %252 = fn () -> Tensor[(7, 16, 13), float64] {
    @func_3597() /* ty=Tensor[(7, 16, 13), float64] */
  };
  %252() /* ty=Tensor[(7, 16, 13), float64] */
}

def @func_4477() -> (Tensor[(14, 7, 6), int32],) {
  %255 = fn () -> (Tensor[(14, 7, 6), int32],) {
    %253 = @func_2456() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) */;
    %254 = %253.0;
    (%254,)
  };
  %255() /* ty=(Tensor[(14, 7, 6), int32],) */
}

def @func_5917(%var_5903: Tensor[(2156), float32], %var_5904: Tensor[(462, 1), float32]) -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(22, 7), float32], Tensor[(2156), float32], Tensor[(462, 1), float32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) {
  %256 = @func_3532() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), uint16], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %257 = cast(meta[relay.Constant][12] /* ty=Tensor[(22, 7), float32] */, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
  %258 = cast(%var_5903, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %259 = cast(%var_5904, dtype="float32") /* ty=Tensor[(462, 1), float32] */;
  %260 = reshape(%257, newshape=[14, 11, 1]) /* ty=Tensor[(14, 11, 1), float32] */;
  %261 = reshape(%258, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), float32] */;
  %262 = reshape(%259, newshape=[14, 11, 3]) /* ty=Tensor[(14, 11, 3), float32] */;
  %263 = @func_2387(%260, %261, %262) /* ty=(Tensor[(14, 11, 14), int64], Tensor[(14, 11, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64]) */;
  %264 = @func_4765() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %265 = %256.3;
  %266 = %263.2;
  %267 = @func_5321() /* ty=Tensor[(12, 14, 4), float32] */;
  %268 = %264.0;
  (%265, %266, meta[relay.Constant][12] /* ty=Tensor[(22, 7), float32] */, %var_5903, %var_5904, %267, %268)
}

def @func_3095() -> (Tensor[(15, 3, 3), float64],) {
  %270 = fn () -> (Tensor[(15, 3, 3), float64],) {
    %269 = @func_1459() /* ty=Tensor[(15, 3, 3), float64] */;
    (%269,)
  };
  %270() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_638(%var_637: Tensor[(15, 3, 3), float64]) -> (Tensor[(15, 3, 3), uint16],) {
  %277 = fn (%var_630: Tensor[(15, 3, 3), float64]) -> (Tensor[(15, 3, 3), uint16],) {
    %271 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
    %272 = cast(%var_630, dtype="uint16") /* ty=Tensor[(15, 3, 3), uint16] */;
    %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
    %274 = cast(%271, dtype="uint16") /* ty=Tensor[(15, 3, 3), uint16] */;
    %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %276 = left_shift(%274, %275) /* ty=Tensor[(15, 3, 3), uint16] */;
    (%276,)
  };
  %277(%var_637) /* ty=(Tensor[(15, 3, 3), uint16],) */
}

def @func_11171() -> Tensor[(15, 3, 3), float64] {
  %279 = fn () -> Tensor[(15, 3, 3), float64] {
    %278 = @func_3094() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %278.0
  };
  %279() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_7002() -> (Tensor[(15, 3, 3), float64], Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) {
  %280 = @func_6582() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %281 = @func_4188() /* ty=(Tensor[(8, 1, 4), float64],) */;
  %282 = %280.0;
  %283 = %281.0;
  %284 = @func_1606() /* ty=Tensor[(15, 3, 3), float64] */;
  (%282, %283, %284)
}

def @func_85(%var_83: Tensor[(15, 3, 3), float64]) -> Tensor[(15, 3, 3), float64] {
  @func_82(%var_83) /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_423() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %285 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %286 = %285.0;
  %287 = cast(%286, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %288 = reshape(%287, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %289 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  %290 = @func_82(%288) /* ty=Tensor[(15, 3, 3), float64] */;
  (%289, %286, %290)
}

def @func_321(%var_319: Tensor[(12, 14, 4), uint8], %var_320: Tensor[(12, 14, 4), uint8]) -> (Tensor[(12, 14, 4), uint8],) {
  %296 = fn (%var_300: Tensor[(12, 14, 4), uint8], %var_301: Tensor[(12, 14, 4), uint8]) -> (Tensor[(12, 14, 4), uint8],) {
    %291 = cast(%var_301, dtype="uint8") /* ty=Tensor[(12, 14, 4), uint8] */;
    %292 = shape_of(%var_300, dtype="int32") /* ty=Tensor[(3), int32] */;
    %293 = cast(%var_300, dtype="uint8") /* ty=Tensor[(12, 14, 4), uint8] */;
    %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %295 = bitwise_and(%293, %294) /* ty=Tensor[(12, 14, 4), uint8] */;
    (%295,)
  };
  %296(%var_319, %var_320) /* ty=(Tensor[(12, 14, 4), uint8],) */
}

def @func_9273() -> (Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32]) {
  %301 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32]) {
    %297 = @func_5855() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64]) */;
    %298 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
    %299 = %297.0;
    %300 = %298.2;
    (%299, %300)
  };
  %301() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32]) */
}

def @func_8549() -> Tensor[(15, 3, 3), float64] {
  @func_8547() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_2915() -> Tensor[(14, 7, 6), int32] {
  %303 = fn () -> Tensor[(14, 7, 6), int32] {
    %302 = @func_1781() /* ty=(Tensor[(14, 7, 6), int32],) */;
    %302.0
  };
  %303() /* ty=Tensor[(14, 7, 6), int32] */
}

def @func_3255() -> (Tensor[(15, 3, 3), bool],) {
  %305 = fn () -> (Tensor[(15, 3, 3), bool],) {
    %304 = @func_2033() /* ty=Tensor[(15, 3, 3), bool] */;
    (%304,)
  };
  %305() /* ty=(Tensor[(15, 3, 3), bool],) */
}

def @func_10520() -> (Tensor[(7, 16, 13), float64],) {
  @func_10518() /* ty=(Tensor[(7, 16, 13), float64],) */
}

def @func_11160() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), uint8]) {
  %306 = @func_10186() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(12, 14, 4), int32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) */;
  %307 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %308 = %307.0;
  %309 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 3, 3), float64] */, dtype="uint8") /* ty=Tensor[(15, 3, 3), uint8] */;
  %310 = shape_of(%308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%308, dtype="uint8") /* ty=Tensor[(15, 3, 3), uint8] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %313 = @func_4517() /* ty=Tensor[(15, 3, 3), float64] */;
  %314 = %306.4;
  %315 = minimum(%311, %312) /* ty=Tensor[(15, 3, 3), uint8] */;
  (%313, %314, %315)
}

def @func_2753() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(80), float32], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) {
  %316 = @func_986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %317 = @func_2456() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) */;
  %318 = %316.0;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %320 = reshape(%319, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %321 = @func_470(%320) /* ty=(Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */;
  %322 = %321.1;
  %323 = cast(%322, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %324 = reshape(%323, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %325 = @func_1722(%324) /* ty=(Tensor[(672), uint8], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
  %326 = cast(%322, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %327 = reshape(%326, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %328 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %329 = @func_2060() /* ty=Tensor[(15, 3, 3), float64] */;
  %330 = %317.2;
  %331 = @func_2033() /* ty=Tensor[(15, 3, 3), bool] */;
  %332 = %325.3;
  %333 = @func_82(%327) /* ty=Tensor[(15, 3, 3), float64] */;
  %334 = %328.1;
  (%318, %329, %330, %331, %322, %332, %333, %334)
}

def @func_3204() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %335 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %336 = @func_3094() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %337 = %335.0;
  %338 = %336.0;
  (%337, %338)
}

def @func_4664() -> (Tensor[(14, 7, 6), int32],) {
  @func_4662() /* ty=(Tensor[(14, 7, 6), int32],) */
}

def @func_1606() -> Tensor[(15, 3, 3), float64] {
  @func_283() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_11920() -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float32], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(8, 5, 4), bool], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(8, 5, 4), float64], Tensor[(8, ?, 4), uint64], Tensor[(15, 3, 3), float64]) {
  @func_11918() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float32], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(8, 5, 4), bool], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(8, 5, 4), float64], Tensor[(8, ?, 4), uint64], Tensor[(15, 3, 3), float64]) */
}

def @func_2755() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(80), float32], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) {
  @func_2753() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(80), float32], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */
}

def @func_9549() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(90), float64]) {
  %339 = @func_423() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %340 = @func_2789() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %341 = cast(meta[relay.Constant][14] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %342 = reshape(%341, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), float64] */;
  %343 = @func_1099(%342) /* ty=(Tensor[(6, 5, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %344 = %339.2;
  %345 = %340.0;
  %346 = %343.1;
  (%344, %345, %346, meta[relay.Constant][14] /* ty=Tensor[(90), float64] */)
}

def @func_9580() -> Tensor[(15, 3, 3), float64] {
  %347 = fn () -> Tensor[(15, 3, 3), float64] {
    @func_8084() /* ty=Tensor[(15, 3, 3), float64] */
  };
  %347() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_6227() -> Tensor[(15, 3, 3), float64] {
  %349 = fn () -> Tensor[(15, 3, 3), float64] {
    %348 = @func_3764() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %348.0
  };
  %349() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_9639() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %353 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
    %350 = @func_8870() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64], Tensor[(45, 1), float32]) */;
    %351 = @func_4517() /* ty=Tensor[(15, 3, 3), float64] */;
    %352 = %350.0;
    (%351, %352)
  };
  %353() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_12464() -> (Tensor[(15, 3, 3), float64],) {
  %354 = @func_9115() /* ty=Tensor[(15, 3, 3), float64] */;
  (%354,)
}

def @func_862() -> (Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) {
  %355 = cast(meta[relay.Constant][15] /* ty=Tensor[(56, 12), uint8] */, dtype="uint8") /* ty=Tensor[(56, 12), uint8] */;
  %356 = cast(meta[relay.Constant][15] /* ty=Tensor[(56, 12), uint8] */, dtype="uint8") /* ty=Tensor[(56, 12), uint8] */;
  %357 = reshape(%355, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %358 = reshape(%356, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %359 = @func_318(%357, %358) /* ty=(Tensor[(12, 14, 4), uint8],) */;
  %360 = %359.0;
  %361 = cast(%360, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %362 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  %363 = sinh(%361) /* ty=Tensor[(12, 14, 4), float32] */;
  (%362, meta[relay.Constant][15] /* ty=Tensor[(56, 12), uint8] */, %363)
}

def @func_4518() -> Tensor[(15, 3, 3), float64] {
  %365 = fn () -> Tensor[(15, 3, 3), float64] {
    %364 = @func_3204() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %364.1
  };
  %365() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_12509() -> (Tensor[(15, 3, 3), float64],) {
  %367 = fn () -> (Tensor[(15, 3, 3), float64],) {
    %366 = @func_8547() /* ty=Tensor[(15, 3, 3), float64] */;
    (%366,)
  };
  %367() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_1981(%var_1964: Tensor[(10, 1, 8), float32], %var_1969: Tensor[(135), float64]) -> (Tensor[(10, 1, 8), float32], Tensor[(15, 3, 3), float64], Tensor[(135), float64]) {
  %368 = cast(%var_1964, dtype="float32") /* ty=Tensor[(10, 1, 8), float32] */;
  %369 = cast(%var_1969, dtype="float64") /* ty=Tensor[(135), float64] */;
  %370 = reshape(%369, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %371 = acosh(%368) /* ty=Tensor[(10, 1, 8), float32] */;
  %372 = @func_82(%370) /* ty=Tensor[(15, 3, 3), float64] */;
  (%371, %372, %var_1969)
}

def @func_1039(%var_1038: Tensor[(56, 12), uint8]) -> Tensor[(56, 12), float64] {
  %379 = fn (%var_1026: Tensor[(56, 12), uint8]) -> Tensor[(56, 12), float64] {
    %373 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
    %374 = %373.1;
    %375 = cast(%var_1026, dtype="float64") /* ty=Tensor[(56, 12), float64] */;
    %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(2), int32] */;
    %377 = cast(%374, dtype="float64") /* ty=Tensor[(56, 12), float64] */;
    %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    power(%377, %378) /* ty=Tensor[(56, 12), float64] */
  };
  %379(%var_1038) /* ty=Tensor[(56, 12), float64] */
}

def @func_6584() -> (Tensor[(15, 3, 3), float64],) {
  @func_6582() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_11721() -> (Tensor[(15, 3, 3), float32],) {
  %382 = fn () -> (Tensor[(15, 3, 3), float32],) {
    %380 = @func_9032() /* ty=(Tensor[(15, 3, 3), float32],) */;
    %381 = %380.0;
    (%381,)
  };
  %382() /* ty=(Tensor[(15, 3, 3), float32],) */
}

def @func_5681() -> (Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), bool], Tensor[(15, 3, 3), float64]) {
  @func_5679() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), bool], Tensor[(15, 3, 3), float64]) */
}

def @func_12430() -> (Tensor[(14, 7, 6), int32],) {
  %385 = fn () -> (Tensor[(14, 7, 6), int32],) {
    %383 = @func_1945() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(14, 7, 6), int32]) */;
    %384 = %383.1;
    (%384,)
  };
  %385() /* ty=(Tensor[(14, 7, 6), int32],) */
}

def @func_11348() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), uint16]) {
  %392 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), uint16]) {
    %386 = @func_5302() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %387 = %386.0;
    %388 = cast(%387, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
    %389 = reshape(%388, newshape=[135]) /* ty=Tensor[(135), float64] */;
    %390 = @func_1722(%389) /* ty=(Tensor[(672), uint8], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
    %391 = %390.2;
    (%387, %391)
  };
  %392() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), uint16]) */
}

def @func_425() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  @func_423() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_2034() -> Tensor[(15, 3, 3), bool] {
  %398 = fn () -> Tensor[(15, 3, 3), bool] {
    %393 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
    %394 = cast(meta[relay.Constant][16] /* ty=Tensor[(15, 3, 3), float64] */, dtype="bool") /* ty=Tensor[(15, 3, 3), bool] */;
    %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
    %396 = cast(%393, dtype="bool") /* ty=Tensor[(15, 3, 3), bool] */;
    %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%396, %397) /* ty=Tensor[(15, 3, 3), bool] */
  };
  %398() /* ty=Tensor[(15, 3, 3), bool] */
}

def @func_4884() -> (Tensor[(135), float64],) {
  %401 = fn () -> (Tensor[(135), float64],) {
    %399 = @func_3320() /* ty=(Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
    %400 = %399.0;
    (%400,)
  };
  %401() /* ty=(Tensor[(135), float64],) */
}

def @func_2637() -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) {
  %409 = fn () -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) {
    %402 = @func_2091() /* ty=Tensor[(15, 3, 3), float64] */;
    %403 = cast(%402, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
    %404 = sin(%403) /* ty=Tensor[(15, 3, 3), float32] */;
    %405 = cast(%404, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
    %406 = @func_423() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %407 = asinh(%405) /* ty=Tensor[(15, 3, 3), float32] */;
    %408 = %406.1;
    (%407, %408)
  };
  %409() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */
}

def @func_5395() -> Tensor[(15, 3, 3), float64] {
  @func_5393() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_10726() -> (Tensor[(15, 3, 3), float64],) {
  %410 = @func_9272() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32]) */;
  %411 = %410.0;
  %412 = cast(%411, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %413 = exp(%412) /* ty=Tensor[(15, 3, 3), float64] */;
  (%413,)
}

def @func_5322() -> Tensor[(12, 14, 4), float32] {
  %414 = fn () -> Tensor[(12, 14, 4), float32] {
    @func_1826() /* ty=Tensor[(12, 14, 4), float32] */
  };
  %414() /* ty=Tensor[(12, 14, 4), float32] */
}

def @func_2533() -> Tensor[(15, 3, 3), float64] {
  %415 = fn () -> Tensor[(15, 3, 3), float64] {
    @func_1606() /* ty=Tensor[(15, 3, 3), float64] */
  };
  %415() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_1572() -> (Tensor[(15, 3, 3), float64],) {
  %416 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  (%416,)
}

def @func_5204() -> (Tensor[(15, 3, 3), uint32], Tensor[(15, 3, 3), float64]) {
  %428 = fn () -> (Tensor[(15, 3, 3), uint32], Tensor[(15, 3, 3), float64]) {
    %417 = @func_1879() /* ty=Tensor[(15, 3, 3), float64] */;
    %418 = cast(%417, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
    %419 = asin(%418) /* ty=Tensor[(15, 3, 3), float64] */;
    %420 = @func_1572() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %421 = %420.0;
    %422 = cast(%421, dtype="uint32") /* ty=Tensor[(15, 3, 3), uint32] */;
    %423 = shape_of(%419, dtype="int32") /* ty=Tensor[(3), int32] */;
    %424 = cast(%419, dtype="uint32") /* ty=Tensor[(15, 3, 3), uint32] */;
    %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %426 = bitwise_or(%424, %425) /* ty=Tensor[(15, 3, 3), uint32] */;
    %427 = @func_2813() /* ty=Tensor[(15, 3, 3), float64] */;
    (%426, %427)
  };
  %428() /* ty=(Tensor[(15, 3, 3), uint32], Tensor[(15, 3, 3), float64]) */
}

def @func_1880() -> Tensor[(15, 3, 3), float64] {
  %430 = fn () -> Tensor[(15, 3, 3), float64] {
    %429 = @func_1434() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
    %429.1
  };
  %430() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_3322() -> (Tensor[(135), float64], Tensor[(15, 3, 3), float64]) {
  @func_3320() /* ty=(Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_11162() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), uint8]) {
  @func_11160() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), uint8]) */
}

def @func_1324() -> (Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) {
  @func_1322() /* ty=(Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) */
}

def @func_11136(%var_11131: Tensor[(720), bool]) -> (Tensor[(15, 3, 3), float64], Tensor[(16, 3, 15), float64], Tensor[(720), bool]) {
  %431 = cast(%var_11131, dtype="bool") /* ty=Tensor[(720), bool] */;
  %432 = cast(%var_11131, dtype="bool") /* ty=Tensor[(720), bool] */;
  %433 = reshape(%431, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), bool] */;
  %434 = reshape(%432, newshape=[16, 3, 15]) /* ty=Tensor[(16, 3, 15), bool] */;
  %435 = @func_9487(%433, %434) /* ty=(Tensor[(16, 3, 15), bool], Tensor[(16, 3, 15), float64]) */;
  %436 = @func_7128() /* ty=Tensor[(15, 3, 3), float64] */;
  %437 = %435.1;
  (%436, %437, %var_11131)
}

def @func_2061() -> Tensor[(15, 3, 3), float64] {
  %438 = fn () -> Tensor[(15, 3, 3), float64] {
    @func_1459() /* ty=Tensor[(15, 3, 3), float64] */
  };
  %438() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_11713() -> (Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %439 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %440 = @func_1826() /* ty=Tensor[(12, 14, 4), float32] */;
  %441 = @func_4999() /* ty=Tensor[(15, 3, 3), float64] */;
  %442 = %439.0;
  (%440, %441, %442)
}

def @func_3206() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  @func_3204() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_1459() -> Tensor[(15, 3, 3), float64] {
  @func_278() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_6792() -> (Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) {
  @func_6790() /* ty=(Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_9766() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %443 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %444 = @func_8361() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %445 = %443.0;
  %446 = %444.0;
  (%445, %446)
}

def @func_248() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %447 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %448 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %449 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %450 = %447.0;
  %451 = cast(%450, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %452 = reshape(%451, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %453 = %448.2;
  %454 = %449.0;
  %455 = @func_82(%452) /* ty=Tensor[(15, 3, 3), float64] */;
  (%450, %453, %454, %455)
}

def @func_8643(%var_8641: Tensor[(12, 14, 4), uint8]) -> (Tensor[(15, 3, 3), float64], Tensor[(588), int32], Tensor[(672), uint8], Tensor[(588), int32], Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), float64]) {
  @func_8640(%var_8641) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(588), int32], Tensor[(672), uint8], Tensor[(588), int32], Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), float64]) */
}

def @func_5123() -> (Tensor[(672), uint8],) {
  %456 = @func_590() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */;
  %457 = %456.2;
  (%457,)
}

def @func_5001() -> Tensor[(15, 3, 3), float64] {
  @func_4999() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_6582() -> (Tensor[(15, 3, 3), float64],) {
  %458 = @func_986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %459 = %458.0;
  (%459,)
}

def @func_2456() -> (Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) {
  %460 = cast(meta[relay.Constant][17] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %461 = cast(meta[relay.Constant][18] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %462 = reshape(%460, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), float32] */;
  %463 = reshape(%461, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %464 = @func_1981(%462, %463) /* ty=(Tensor[(10, 1, 8), float32], Tensor[(15, 3, 3), float64], Tensor[(135), float64]) */;
  %465 = @func_1797() /* ty=Tensor[(14, 7, 6), int32] */;
  %466 = %464.0;
  (%465, %466, meta[relay.Constant][17] /* ty=Tensor[(80), float32] */, meta[relay.Constant][18] /* ty=Tensor[(135), float64] */)
}

def @func_3735(%var_3722: Tensor[(135), float64]) -> (Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(56, 12), float64]) {
  %467 = cast(%var_3722, dtype="float64") /* ty=Tensor[(135), float64] */;
  %468 = reshape(%467, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %469 = @func_636(%468) /* ty=(Tensor[(15, 3, 3), uint16],) */;
  %470 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %471 = %470.1;
  %472 = cast(%471, dtype="float32") /* ty=Tensor[(56, 12), float32] */;
  %473 = log10(%472) /* ty=Tensor[(56, 12), float32] */;
  %474 = cast(%473, dtype="float32") /* ty=Tensor[(56, 12), float32] */;
  %475 = shape_of(%471, dtype="int32") /* ty=Tensor[(2), int32] */;
  %476 = cast(%471, dtype="float32") /* ty=Tensor[(56, 12), float32] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %478 = maximum(%476, %477) /* ty=Tensor[(56, 12), float32] */;
  %479 = cast(%478, dtype="float64") /* ty=Tensor[(56, 12), float64] */;
  %480 = %469.0;
  %481 = sqrt(%479) /* ty=Tensor[(56, 12), float64] */;
  (%480, %var_3722, %481)
}

def @func_2093() -> Tensor[(15, 3, 3), float64] {
  @func_2091() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_10327() -> (Tensor[(15, 3, 3), float64],) {
  @func_10325() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_7252() -> (Tensor[(14, 10, 8), float32], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) {
  %482 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 10, 8), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 8), float32] */;
  %483 = asin(%482) /* ty=Tensor[(14, 10, 8), float32] */;
  %484 = cast(%483, dtype="float32") /* ty=Tensor[(14, 10, 8), float32] */;
  %485 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(14, 10, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(meta[relay.Constant][19] /* ty=Tensor[(14, 10, 8), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 8), float32] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %488 = @func_6846() /* ty=Tensor[(7, 16, 13), float64] */;
  %489 = cast(%488, dtype="float64") /* ty=Tensor[(7, 16, 13), float64] */;
  %490 = divide(%486, %487) /* ty=Tensor[(14, 10, 8), float32] */;
  %491 = acos(%489) /* ty=Tensor[(7, 16, 13), float64] */;
  %492 = @func_2532() /* ty=Tensor[(15, 3, 3), float64] */;
  (%490, %491, %492)
}

def @func_4115(%var_4113: Tensor[(45), float32]) -> (Tensor[(15, 3, 3), bool], Tensor[(45), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), bool]) {
  @func_4112(%var_4113) /* ty=(Tensor[(15, 3, 3), bool], Tensor[(45), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), bool]) */
}

def @func_1117(%var_1115: Tensor[(15, 3, 1), float32], %var_1116: Tensor[(15, 3, 9), float32]) -> (Tensor[(15, 3, 9), float32],) {
  %496 = fn (%var_1104: Tensor[(15, 3, 1), float32], %var_1105: Tensor[(15, 3, 9), float32]) -> (Tensor[(15, 3, 9), float32],) {
    %493 = cast(%var_1104, dtype="float32") /* ty=Tensor[(15, 3, 1), float32] */;
    %494 = cast(%var_1105, dtype="float32") /* ty=Tensor[(15, 3, 9), float32] */;
    %495 = floor_mod(%493, %494) /* ty=Tensor[(15, 3, 9), float32] */;
    (%495,)
  };
  %496(%var_1115, %var_1116) /* ty=(Tensor[(15, 3, 9), float32],) */
}

def @func_11070() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float32], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), float32], Tensor[(2, 40), float64], Tensor[(10, ?, 8), float64]) {
  @func_11068() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float32], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), float32], Tensor[(2, 40), float64], Tensor[(10, ?, 8), float64]) */
}

def @func_1826() -> Tensor[(12, 14, 4), float32] {
  %497 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %498 = %497.1;
  %499 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 14, 4), uint8] */, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%498, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%501, %502) /* ty=Tensor[(12, 14, 4), float32] */
}

def @func_7857() -> (Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) {
  @func_7855() /* ty=(Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_11534(%var_11532: Tensor[(672), uint8]) -> (Tensor[(15, 3, 3), float64], Tensor[(588), int32], Tensor[(672), uint8], Tensor[(8, 1, 4), float64]) {
  @func_11531(%var_11532) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(588), int32], Tensor[(672), uint8], Tensor[(8, 1, 4), float64]) */
}

def @func_9849() -> (Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %510 = fn () -> (Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
    %503 = @func_4662() /* ty=(Tensor[(14, 7, 6), int32],) */;
    %504 = @func_1762() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %505 = %503.0;
    %506 = %504.0;
    %507 = @func_1879() /* ty=Tensor[(15, 3, 3), float64] */;
    %508 = @func_2813() /* ty=Tensor[(15, 3, 3), float64] */;
    %509 = @func_8547() /* ty=Tensor[(15, 3, 3), float64] */;
    (%505, %506, %507, %508, %509)
  };
  %510() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_9490(%var_9488: Tensor[(16, 3, 15), bool], %var_9489: Tensor[(16, 3, 15), bool]) -> (Tensor[(16, 3, 15), bool], Tensor[(16, 3, 15), float64]) {
  %518 = fn (%var_9471: Tensor[(16, 3, 15), bool], %var_9472: Tensor[(16, 3, 15), bool]) -> (Tensor[(16, 3, 15), bool], Tensor[(16, 3, 15), float64]) {
    %511 = cast(%var_9472, dtype="bool") /* ty=Tensor[(16, 3, 15), bool] */;
    %512 = shape_of(%var_9471, dtype="int32") /* ty=Tensor[(3), int32] */;
    %513 = cast(%var_9471, dtype="bool") /* ty=Tensor[(16, 3, 15), bool] */;
    %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %515 = cast(%var_9472, dtype="float64") /* ty=Tensor[(16, 3, 15), float64] */;
    %516 = logical_or(%513, %514) /* ty=Tensor[(16, 3, 15), bool] */;
    %517 = cos(%515) /* ty=Tensor[(16, 3, 15), float64] */;
    (%516, %517)
  };
  %518(%var_9488, %var_9489) /* ty=(Tensor[(16, 3, 15), bool], Tensor[(16, 3, 15), float64]) */
}

def @func_1985(%var_1983: Tensor[(10, 1, 8), float32], %var_1984: Tensor[(135), float64]) -> (Tensor[(10, 1, 8), float32], Tensor[(15, 3, 3), float64], Tensor[(135), float64]) {
  @func_1981(%var_1983, %var_1984) /* ty=(Tensor[(10, 1, 8), float32], Tensor[(15, 3, 3), float64], Tensor[(135), float64]) */
}

def @func_7128() -> Tensor[(15, 3, 3), float64] {
  %519 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %519.0
}

def @func_12466() -> (Tensor[(15, 3, 3), float64],) {
  @func_12464() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_2091() -> Tensor[(15, 3, 3), float64] {
  %520 = @func_1173() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8]) */;
  %520.0
}

def @func_864() -> (Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) {
  @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */
}

def @func_3320() -> (Tensor[(135), float64], Tensor[(15, 3, 3), float64]) {
  %521 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %522 = @func_2771() /* ty=(Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) */;
  %523 = %521.1;
  %524 = %522.1;
  (%523, %524)
}

def @func_8342(%var_8340: Tensor[(1089), bool], %var_8341: Tensor[(12, 14, 4), uint8]) -> (Tensor[(15, 3, 3), float64], Tensor[(8, 1, 4), float64], Tensor[(9, 11, 11), bool], Tensor[(1089), bool], Tensor[(12, 14, 4), bool]) {
  %538 = fn (%var_8308: Tensor[(1089), bool], %var_8323: Tensor[(12, 14, 4), uint8]) -> (Tensor[(15, 3, 3), float64], Tensor[(8, 1, 4), float64], Tensor[(9, 11, 11), bool], Tensor[(1089), bool], Tensor[(12, 14, 4), bool]) {
    %525 = @func_4188() /* ty=(Tensor[(8, 1, 4), float64],) */;
    %526 = cast(%var_8308, dtype="bool") /* ty=Tensor[(1089), bool] */;
    %527 = reshape(%526, newshape=[9, 11, 11]) /* ty=Tensor[(9, 11, 11), bool] */;
    %528 = @func_5064(%527) /* ty=(Tensor[(9, 11, 11), bool],) */;
    %529 = @func_5894() /* ty=Tensor[(12, 14, 4), uint8] */;
    %530 = cast(%var_8323, dtype="bool") /* ty=Tensor[(12, 14, 4), bool] */;
    %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
    %532 = cast(%529, dtype="bool") /* ty=Tensor[(12, 14, 4), bool] */;
    %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %534 = @func_4517() /* ty=Tensor[(15, 3, 3), float64] */;
    %535 = %525.0;
    %536 = %528.0;
    %537 = less_equal(%532, %533) /* ty=Tensor[(12, 14, 4), bool] */;
    (%534, %535, %536, %var_8308, %537)
  };
  %538(%var_8340, %var_8341) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(8, 1, 4), float64], Tensor[(9, 11, 11), bool], Tensor[(1089), bool], Tensor[(12, 14, 4), bool]) */
}

def @func_8797(%var_8795: Tensor[(15, 6, 7), float32]) -> Tensor[(15, 6, 7), float32] {
  @func_8794(%var_8795) /* ty=Tensor[(15, 6, 7), float32] */
}

def @func_9116() -> Tensor[(15, 3, 3), float64] {
  %540 = fn () -> Tensor[(15, 3, 3), float64] {
    %539 = @func_3204() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %539.1
  };
  %540() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_9417(%var_9416: Tensor[(14, 7, 6), int32]) -> (Tensor[(12, 14, 4), float32], Tensor[(14, 7, 6), uint64], Tensor[(15, 3, 3), float64]) {
  %552 = fn (%var_9395: Tensor[(14, 7, 6), int32]) -> (Tensor[(12, 14, 4), float32], Tensor[(14, 7, 6), uint64], Tensor[(15, 3, 3), float64]) {
    %541 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
    %542 = @func_4662() /* ty=(Tensor[(14, 7, 6), int32],) */;
    %543 = %542.0;
    %544 = cast(%var_9395, dtype="uint64") /* ty=Tensor[(14, 7, 6), uint64] */;
    %545 = shape_of(%543, dtype="int32") /* ty=Tensor[(3), int32] */;
    %546 = cast(%543, dtype="uint64") /* ty=Tensor[(14, 7, 6), uint64] */;
    %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %548 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %549 = %541.2;
    %550 = add(%546, %547) /* ty=Tensor[(14, 7, 6), uint64] */;
    %551 = %548.2;
    (%549, %550, %551)
  };
  %552(%var_9416) /* ty=(Tensor[(12, 14, 4), float32], Tensor[(14, 7, 6), uint64], Tensor[(15, 3, 3), float64]) */
}

def @func_2941(%var_2939: Tensor[(8, 9, 10), int64], %var_2940: Tensor[(8, 9, 10), int64]) -> Tensor[(8, 9, 10), int64] {
  %557 = fn (%var_2921: Tensor[(8, 9, 10), int64], %var_2922: Tensor[(8, 9, 10), int64]) -> Tensor[(8, 9, 10), int64] {
    %553 = cast(%var_2922, dtype="int64") /* ty=Tensor[(8, 9, 10), int64] */;
    %554 = shape_of(%var_2921, dtype="int32") /* ty=Tensor[(3), int32] */;
    %555 = cast(%var_2921, dtype="int64") /* ty=Tensor[(8, 9, 10), int64] */;
    %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    minimum(%555, %556) /* ty=Tensor[(8, 9, 10), int64] */
  };
  %557(%var_2939, %var_2940) /* ty=Tensor[(8, 9, 10), int64] */
}

def @func_3599() -> Tensor[(7, 16, 13), float64] {
  @func_3597() /* ty=Tensor[(7, 16, 13), float64] */
}

def @func_10620() -> Tensor[(135), float64] {
  %558 = @func_4883() /* ty=(Tensor[(135), float64],) */;
  %558.0
}

def @func_5679() -> (Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), bool], Tensor[(15, 3, 3), float64]) {
  %559 = @func_2636() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %560 = @func_5321() /* ty=Tensor[(12, 14, 4), float32] */;
  %561 = @func_1917() /* ty=Tensor[(56, 12), uint8] */;
  %562 = cast(%561, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %563 = shape_of(%560, dtype="int32") /* ty=Tensor[(3), int32] */;
  %564 = cast(%560, dtype="bool") /* ty=Tensor[(12, 14, 4), bool] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %566 = %559.0;
  %567 = logical_or(%564, %565) /* ty=Tensor[(12, 14, 4), bool] */;
  %568 = @func_2813() /* ty=Tensor[(15, 3, 3), float64] */;
  (%566, %567, %568)
}

def @func_7855() -> (Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) {
  %569 = @func_7002() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) */;
  %570 = @func_5679() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), bool], Tensor[(15, 3, 3), float64]) */;
  %571 = %569.1;
  %572 = %570.2;
  (%571, %572)
}

def @func_1574() -> (Tensor[(15, 3, 3), float64],) {
  @func_1572() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_7004() -> (Tensor[(15, 3, 3), float64], Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) {
  @func_7002() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_2813() -> Tensor[(15, 3, 3), float64] {
  @func_283() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_7130() -> Tensor[(15, 3, 3), float64] {
  @func_7128() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_10437(%var_10413: Tensor[(462, 1), float32], %var_10415: Tensor[(22, 7), float32]) -> (Tensor[(15, 3, 3), float64], Tensor[(2156), float32], Tensor[(462, 1), float32], Tensor[(22, 7), float64]) {
  %573 = @func_4617() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) */;
  %574 = cast(meta[relay.Constant][21] /* ty=Tensor[(2156), float32] */, dtype="float32") /* ty=Tensor[(2156), float32] */;
  %575 = cast(%var_10413, dtype="float32") /* ty=Tensor[(462, 1), float32] */;
  %576 = reshape(%574, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %577 = reshape(%575, newshape=[462, 1]) /* ty=Tensor[(462, 1), float32] */;
  %578 = @func_5917(%576, %577) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(22, 7), float32], Tensor[(2156), float32], Tensor[(462, 1), float32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) */;
  %579 = %578.2;
  %580 = cast(%var_10415, dtype="float64") /* ty=Tensor[(22, 7), float64] */;
  %581 = shape_of(%579, dtype="int32") /* ty=Tensor[(2), int32] */;
  %582 = cast(%579, dtype="float64") /* ty=Tensor[(22, 7), float64] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %584 = %573.3;
  %585 = floor_mod(%582, %583) /* ty=Tensor[(22, 7), float64] */;
  (%584, meta[relay.Constant][21] /* ty=Tensor[(2156), float32] */, %var_10413, %585)
}

def @func_837() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  @func_835() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_2392(%var_2389: Tensor[(14, 11, 1), float32], %var_2390: Tensor[(14, 11, 14), float32], %var_2391: Tensor[(14, 11, 3), float32]) -> (Tensor[(14, 11, 14), int64], Tensor[(14, 11, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64]) {
  @func_2387(%var_2389, %var_2390, %var_2391) /* ty=(Tensor[(14, 11, 14), int64], Tensor[(14, 11, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64]) */
}

def @func_6790() -> (Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) {
  %586 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %587 = @func_4921() /* ty=Tensor[(7, 16, 13), float64] */;
  %588 = %586.2;
  (%587, %588)
}

def @func_3534() -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), uint16], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) {
  @func_3532() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), uint16], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */
}

def @func_3532() -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), uint16], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) {
  %589 = @func_1434() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %590 = %589.0;
  %591 = cast(%590, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %592 = reshape(%591, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %593 = @func_636(%592) /* ty=(Tensor[(15, 3, 3), uint16],) */;
  %594 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %595 = @func_2753() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(80), float32], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %596 = %593.0;
  %597 = @func_2033() /* ty=Tensor[(15, 3, 3), bool] */;
  %598 = %594.0;
  %599 = %595.7;
  (%590, %596, %597, %598, %599)
}

def @func_4766() -> (Tensor[(15, 3, 3), float64],) {
  %602 = fn () -> (Tensor[(15, 3, 3), float64],) {
    %600 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %601 = %600.1;
    (%601,)
  };
  %602() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_3170(%var_3168: Tensor[(8, 8, 14), float64]) -> (Tensor[(8, 8, 14), float64], Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), float64]) {
  @func_3167(%var_3168) /* ty=(Tensor[(8, 8, 14), float64], Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), float64]) */
}

def @func_8265() -> (Tensor[(7, 16, 13), int64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %603 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %604 = %603.0;
  %605 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 16, 13), float64] */, dtype="int64") /* ty=Tensor[(7, 16, 13), int64] */;
  %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%604, dtype="int64") /* ty=Tensor[(7, 16, 13), int64] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %609 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %610 = maximum(%607, %608) /* ty=Tensor[(7, 16, 13), int64] */;
  %611 = %609.0;
  %612 = @func_7867() /* ty=Tensor[(15, 3, 3), float64] */;
  (%610, %611, %612)
}

def @func_8986() -> Tensor[(56, 12), float64] {
  %616 = fn () -> Tensor[(56, 12), float64] {
    %613 = @func_1322() /* ty=(Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) */;
    %614 = %613.0;
    %615 = cast(%614, dtype="float64") /* ty=Tensor[(56, 12), float64] */;
    cos(%615) /* ty=Tensor[(56, 12), float64] */
  };
  %616() /* ty=Tensor[(56, 12), float64] */
}

def @func_2994() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %621 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
    %617 = @func_2853() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */;
    %618 = @func_2853() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */;
    %619 = %617.1;
    %620 = %618.0;
    (%619, %620)
  };
  %621() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_11484() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64], Tensor[(1089), bool], Tensor[(15, 3, 3), float64]) {
  %622 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %623 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %624 = @func_2771() /* ty=(Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) */;
  %625 = @func_8361() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %626 = %625.0;
  %627 = cast(%626, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %628 = reshape(%627, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %629 = @func_3735(%628) /* ty=(Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(56, 12), float64]) */;
  %630 = @func_10212() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %631 = cast(meta[relay.Constant][23] /* ty=Tensor[(1089), bool] */, dtype="float64") /* ty=Tensor[(1089), float64] */;
  %632 = asinh(%631) /* ty=Tensor[(1089), float64] */;
  %633 = cast(meta[relay.Constant][23] /* ty=Tensor[(1089), bool] */, dtype="bool") /* ty=Tensor[(1089), bool] */;
  %634 = reshape(%633, newshape=[9, 11, 11]) /* ty=Tensor[(9, 11, 11), bool] */;
  %635 = @func_5064(%634) /* ty=(Tensor[(9, 11, 11), bool],) */;
  %636 = %635.0;
  %637 = cast(%636, dtype="bool") /* ty=Tensor[(9, 11, 11), bool] */;
  %638 = shape_of(%632, dtype="int32") /* ty=Tensor[(1), int32] */;
  %639 = cast(%632, dtype="bool") /* ty=Tensor[(1089), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?), bool] */;
  %641 = %622.0;
  %642 = %623.0;
  %643 = %624.0;
  %644 = %629.1;
  %645 = %630.0;
  %646 = equal(%639, %640) /* ty=Tensor[(1089), bool] */;
  %647 = @func_2060() /* ty=Tensor[(15, 3, 3), float64] */;
  (%641, %642, %643, %626, %644, %645, %646, %647)
}

def @func_10556() -> (Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float32]) {
  @func_10554() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float32]) */
}

def @func_5393() -> Tensor[(15, 3, 3), float64] {
  %648 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %648.0
}

def @func_7634(%var_7593: Tensor[(15, 15, 7), float32]) -> (Tensor[(15, 15, 7), float32],) {
  %649 = cast(%var_7593, dtype="float32") /* ty=Tensor[(15, 15, 7), float32] */;
  %650 = log10(%649) /* ty=Tensor[(15, 15, 7), float32] */;
  (%650,)
}

def @func_7473(%var_7471: Tensor[(10, 15, 15), float32], %var_7472: uint16) -> (Tensor[(10, 15, 15), float32], Tensor[(12, 9, 3), uint16], uint16, Tensor[(324), uint16]) {
  %658 = fn (%var_7458: Tensor[(10, 15, 15), float32], %var_7465: uint16) -> (Tensor[(10, 15, 15), float32], Tensor[(12, 9, 3), uint16], uint16, Tensor[(324), uint16]) {
    %651 = cast(%var_7458, dtype="float32") /* ty=Tensor[(10, 15, 15), float32] */;
    %652 = cast(%var_7465, dtype="uint16") /* ty=uint16 */;
    %653 = cast(meta[relay.Constant][24] /* ty=Tensor[(324), uint16] */, dtype="uint16") /* ty=Tensor[(324), uint16] */;
    %654 = reshape(%652, newshape=[]) /* ty=uint16 */;
    %655 = reshape(%653, newshape=[12, 9, 3]) /* ty=Tensor[(12, 9, 3), uint16] */;
    %656 = cos(%651) /* ty=Tensor[(10, 15, 15), float32] */;
    %657 = @func_5787(%654, %655) /* ty=Tensor[(12, 9, 3), uint16] */;
    (%656, %657, %var_7465, meta[relay.Constant][24] /* ty=Tensor[(324), uint16] */)
  };
  %658(%var_7471, %var_7472) /* ty=(Tensor[(10, 15, 15), float32], Tensor[(12, 9, 3), uint16], uint16, Tensor[(324), uint16]) */
}

def @func_7076() -> (Tensor[(7, 16, 13), float64],) {
  %660 = fn () -> (Tensor[(7, 16, 13), float64],) {
    %659 = @func_6846() /* ty=Tensor[(7, 16, 13), float64] */;
    (%659,)
  };
  %660() /* ty=(Tensor[(7, 16, 13), float64],) */
}

def @func_11497() -> Tensor[(15, 3, 3), float32] {
  %661 = fn () -> Tensor[(15, 3, 3), float32] {
    @func_2182() /* ty=Tensor[(15, 3, 3), float32] */
  };
  %661() /* ty=Tensor[(15, 3, 3), float32] */
}

def @func_12295() -> (Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) {
  %665 = fn () -> (Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) {
    %662 = @func_10098() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %663 = @func_5894() /* ty=Tensor[(12, 14, 4), uint8] */;
    %664 = %662.0;
    (%663, %664)
  };
  %665() /* ty=(Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) */
}

def @func_3994() -> (Tensor[(135), float64], Tensor[(15, 3, 3), float64]) {
  %670 = fn () -> (Tensor[(135), float64], Tensor[(15, 3, 3), float64]) {
    %666 = @func_3320() /* ty=(Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
    %667 = @func_3204() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %668 = %666.0;
    %669 = %667.0;
    (%668, %669)
  };
  %670() /* ty=(Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_1608() -> Tensor[(15, 3, 3), float64] {
  @func_1606() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_3486(%var_3485: Tensor[(45), float32]) -> (Tensor[(56, 12), uint8], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), float32], Tensor[(45), float32], Tensor[(1, 405), float32], Tensor[(15, 3, 3), float64]) {
  %681 = fn (%var_3469: Tensor[(45), float32]) -> (Tensor[(56, 12), uint8], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), float32], Tensor[(45), float32], Tensor[(1, 405), float32], Tensor[(15, 3, 3), float64]) {
    %671 = @func_1762() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %672 = cast(%var_3469, dtype="float32") /* ty=Tensor[(45), float32] */;
    %673 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 405), float32] */, dtype="float32") /* ty=Tensor[(1, 405), float32] */;
    %674 = reshape(%672, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), float32] */;
    %675 = reshape(%673, newshape=[15, 3, 9]) /* ty=Tensor[(15, 3, 9), float32] */;
    %676 = @func_1114(%674, %675) /* ty=(Tensor[(15, 3, 9), float32],) */;
    %677 = @func_1917() /* ty=Tensor[(56, 12), uint8] */;
    %678 = %671.0;
    %679 = %676.0;
    %680 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
    (%677, %678, %679, %var_3469, meta[relay.Constant][25] /* ty=Tensor[(1, 405), float32] */, %680)
  };
  %681(%var_3485) /* ty=(Tensor[(56, 12), uint8], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), float32], Tensor[(45), float32], Tensor[(1, 405), float32], Tensor[(15, 3, 3), float64]) */
}

def @func_11622() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %682 = @func_7855() /* ty=(Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) */;
  %683 = %682.1;
  %684 = @func_2799() /* ty=Tensor[(15, 3, 3), float64] */;
  (%683, %684)
}

def @func_5774() -> (Tensor[(15, 3, 3), float64],) {
  %687 = fn () -> (Tensor[(15, 3, 3), float64],) {
    %685 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
    %686 = %685.0;
    (%686,)
  };
  %687() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_1946() -> (Tensor[(15, 3, 3), float64], Tensor[(14, 7, 6), int32]) {
  %691 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(14, 7, 6), int32]) {
    %688 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %689 = %688.1;
    %690 = @func_1797() /* ty=Tensor[(14, 7, 6), int32] */;
    (%689, %690)
  };
  %691() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(14, 7, 6), int32]) */
}

def @func_3766() -> (Tensor[(15, 3, 3), float64],) {
  @func_3764() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_987() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %696 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
    %692 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %693 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %694 = %692.1;
    %695 = %693.1;
    (%694, %695)
  };
  %696() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_9965() -> (Tensor[(7, 16, 13), float64],) {
  %697 = @func_6790() /* ty=(Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) */;
  %698 = %697.0;
  (%698,)
}

def @func_280() -> Tensor[(15, 3, 3), float64] {
  @func_278() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_9034() -> (Tensor[(15, 3, 3), float32],) {
  @func_9032() /* ty=(Tensor[(15, 3, 3), float32],) */
}

def @func_745() -> (Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) {
  %703 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) {
    %699 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %700 = @func_590() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */;
    %701 = %699.1;
    %702 = %700.1;
    (%701, %702)
  };
  %703() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */
}

def @func_6002() -> Tensor[(8, 1, 4), float64] {
  %705 = fn () -> Tensor[(8, 1, 4), float64] {
    %704 = @func_4188() /* ty=(Tensor[(8, 1, 4), float64],) */;
    %704.0
  };
  %705() /* ty=Tensor[(8, 1, 4), float64] */
}

def @func_2269() -> Tensor[(15, 3, 3), float64] {
  %706 = fn () -> Tensor[(15, 3, 3), float64] {
    @func_1459() /* ty=Tensor[(15, 3, 3), float64] */
  };
  %706() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_8438(%var_8437: Tensor[(12, 12, 4), float64]) -> (Tensor[(12, 12, 4), float64],) {
  %709 = fn (%var_8418: Tensor[(12, 12, 4), float64]) -> (Tensor[(12, 12, 4), float64],) {
    %707 = cast(%var_8418, dtype="float64") /* ty=Tensor[(12, 12, 4), float64] */;
    %708 = acos(%707) /* ty=Tensor[(12, 12, 4), float64] */;
    (%708,)
  };
  %709(%var_8437) /* ty=(Tensor[(12, 12, 4), float64],) */
}

def @func_2010() -> (Tensor[(8, 3, 13), bool],) {
  %713 = fn () -> (Tensor[(8, 3, 13), bool],) {
    %710 = cast(meta[relay.Constant][26] /* ty=uint8 */, dtype="bool") /* ty=bool */;
    %711 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 3, 13), uint8] */, dtype="bool") /* ty=Tensor[(8, 3, 13), bool] */;
    %712 = greater_equal(%710, %711) /* ty=Tensor[(8, 3, 13), bool] */;
    (%712,)
  };
  %713() /* ty=(Tensor[(8, 3, 13), bool],) */
}

def @func_12204() -> Tensor[(15, 3, 3), float64] {
  %714 = @func_2853() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */;
  %714.0
}

def @func_8794(%var_8779: Tensor[(15, 6, 7), float32]) -> Tensor[(15, 6, 7), float32] {
  %715 = cast(%var_8779, dtype="float32") /* ty=Tensor[(15, 6, 7), float32] */;
  exp(%715) /* ty=Tensor[(15, 6, 7), float32] */
}

def @func_2299() -> (Tensor[(15, 3, 3), float32], Tensor[(14, 7, 6), int32]) {
  @func_2297() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(14, 7, 6), int32]) */
}

def @func_5856() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64]) {
  %720 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64]) {
    %716 = @func_4039() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */;
    %717 = @func_3554() /* ty=(Tensor[(7, 16, 13), float64],) */;
    %718 = %716.0;
    %719 = %717.0;
    (%718, %719)
  };
  %720() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64]) */
}

def @func_8183(%var_8175: Tensor[(16, 6, 12), int8]) -> (Tensor[(16, 6, 12), int8],) {
  %721 = cast(meta[relay.Constant][28] /* ty=Tensor[(16, 6, 12), int8] */, dtype="int8") /* ty=Tensor[(16, 6, 12), int8] */;
  %722 = shape_of(%var_8175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%var_8175, dtype="int8") /* ty=Tensor[(16, 6, 12), int8] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %725 = add(%723, %724) /* ty=Tensor[(16, 6, 12), int8] */;
  (%725,)
}

def @func_4735(%var_4733: Tensor[(13, 9, 1), int16], %var_4734: Tensor[(13, 9, 10), int16]) -> (Tensor[(13, 9, 10), int16], Tensor[(672), uint8]) {
  @func_4731(%var_4733, %var_4734) /* ty=(Tensor[(13, 9, 10), int16], Tensor[(672), uint8]) */
}

def @func_7685() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) {
  @func_7683() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */
}

def @func_8186(%var_8184: Tensor[(16, 6, 12), int8]) -> (Tensor[(16, 6, 12), int8],) {
  @func_8183(%var_8184) /* ty=(Tensor[(16, 6, 12), int8],) */
}

def @func_9163() -> Tensor[(15, 3, 3), float64] {
  @func_9161() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_1174() -> (Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8]) {
  %730 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8]) {
    %726 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %727 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
    %728 = %726.1;
    %729 = %727.1;
    (%728, %729)
  };
  %730() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8]) */
}

def @func_11959() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64]) {
  @func_11957() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64]) */
}

def @func_9768() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  @func_9766() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_284() -> Tensor[(15, 3, 3), float64] {
  %732 = fn () -> Tensor[(15, 3, 3), float64] {
    %731 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %731.0
  };
  %732() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_8267() -> (Tensor[(7, 16, 13), int64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  @func_8265() /* ty=(Tensor[(7, 16, 13), int64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_1764() -> (Tensor[(15, 3, 3), float64],) {
  @func_1762() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_9705() -> (Tensor[(15, 3, 3), float32],) {
  %733 = @func_2091() /* ty=Tensor[(15, 3, 3), float64] */;
  %734 = cast(%733, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
  %735 = log(%734) /* ty=Tensor[(15, 3, 3), float32] */;
  (%735,)
}

def @func_8890() -> (Tensor[(8, 1, 4), float32],) {
  %736 = @func_4188() /* ty=(Tensor[(8, 1, 4), float64],) */;
  %737 = %736.0;
  %738 = cast(%737, dtype="float32") /* ty=Tensor[(8, 1, 4), float32] */;
  %739 = acos(%738) /* ty=Tensor[(8, 1, 4), float32] */;
  (%739,)
}

def @func_3383() -> (Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64]) {
  %743 = fn () -> (Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64]) {
    %740 = @func_1762() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %741 = @func_2914() /* ty=Tensor[(14, 7, 6), int32] */;
    %742 = %740.0;
    (%741, %742)
  };
  %743() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64]) */
}

def @func_10100() -> (Tensor[(15, 3, 3), float64],) {
  @func_10098() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_473(%var_471: Tensor[(15, 3, 3), float64]) -> (Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) {
  @func_470(%var_471) /* ty=(Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */
}

def @func_2183() -> Tensor[(15, 3, 3), float32] {
  %746 = fn () -> Tensor[(15, 3, 3), float32] {
    %744 = @func_2091() /* ty=Tensor[(15, 3, 3), float64] */;
    %745 = cast(%744, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
    erf(%745) /* ty=Tensor[(15, 3, 3), float32] */
  };
  %746() /* ty=Tensor[(15, 3, 3), float32] */
}

def @func_1102(%var_1100: Tensor[(6, 5, 3), float64]) -> (Tensor[(6, 5, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  @func_1099(%var_1100) /* ty=(Tensor[(6, 5, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_8085() -> Tensor[(15, 3, 3), float64] {
  %748 = fn () -> Tensor[(15, 3, 3), float64] {
    %747 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
    %747.0
  };
  %748() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_2595() -> (Tensor[(15, 3, 3), float64],) {
  %749 = @func_2091() /* ty=Tensor[(15, 3, 3), float64] */;
  (%749,)
}

def @func_5085() -> (Tensor[(14, 7, 6), int32],) {
  %750 = @func_4476() /* ty=(Tensor[(14, 7, 6), int32],) */;
  %751 = %750.0;
  (%751,)
}

def @func_6430(%var_6427: Tensor[(15, 3, 3), float64], %var_6428: Tensor[(22, 7), float32], %var_6429: Tensor[(231, 2), float32]) -> (Tensor[(672), uint8], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(2156), float32], Tensor[(22, 7), float32], Tensor[(231, 2), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  @func_6425(%var_6427, %var_6428, %var_6429) /* ty=(Tensor[(672), uint8], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(2156), float32], Tensor[(22, 7), float32], Tensor[(231, 2), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_2790() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %754 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
    %752 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
    %753 = @func_1459() /* ty=Tensor[(15, 3, 3), float64] */;
    (%752, %753)
  };
  %754() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_10441(%var_10439: Tensor[(462, 1), float32], %var_10440: Tensor[(22, 7), float32]) -> (Tensor[(15, 3, 3), float64], Tensor[(2156), float32], Tensor[(462, 1), float32], Tensor[(22, 7), float64]) {
  @func_10437(%var_10439, %var_10440) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(2156), float32], Tensor[(462, 1), float32], Tensor[(22, 7), float64]) */
}

def @func_12387(%var_12385: Tensor[(15, 16, 6), int64], %var_12386: Tensor[(15, 16, 6), int64]) -> (Tensor[(15, 16, 6), bool],) {
  @func_12383(%var_12385, %var_12386) /* ty=(Tensor[(15, 16, 6), bool],) */
}

def @func_2772() -> (Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) {
  %759 = fn () -> (Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) {
    %755 = @func_1322() /* ty=(Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) */;
    %756 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
    %757 = %755.1;
    %758 = %756.0;
    (%757, %758)
  };
  %759() /* ty=(Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) */
}

def @func_8362() -> (Tensor[(15, 3, 3), float64],) {
  %762 = fn () -> (Tensor[(15, 3, 3), float64],) {
    %760 = @func_423() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %761 = %760.2;
    (%761,)
  };
  %762() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_8684() -> (Tensor[(15, 3, 3), float64],) {
  %765 = fn () -> (Tensor[(15, 3, 3), float64],) {
    %763 = @func_1762() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %764 = %763.0;
    (%764,)
  };
  %765() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_9967() -> (Tensor[(7, 16, 13), float64],) {
  @func_9965() /* ty=(Tensor[(7, 16, 13), float64],) */
}

def @func_11068() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float32], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), float32], Tensor[(2, 40), float64], Tensor[(10, ?, 8), float64]) {
  %766 = @func_986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %767 = @func_8547() /* ty=Tensor[(15, 3, 3), float64] */;
  %768 = cast(%767, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %769 = reshape(%768, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %770 = @func_470(%769) /* ty=(Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */;
  %771 = @func_2297() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(14, 7, 6), int32]) */;
  %772 = @func_7563() /* ty=(Tensor[(12, 14, 4), float32], Tensor[(7, 16, 13), float64]) */;
  %773 = @func_9272() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32]) */;
  %774 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 40), float32] */, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %775 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 40), float32] */, dtype="float32") /* ty=Tensor[(2, 40), float32] */;
  %776 = %771.0;
  %777 = cast(%776, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %778 = reshape(%775, newshape=[10, 1, 8]) /* ty=Tensor[(10, 1, 8), float32] */;
  %779 = reshape(%777, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %780 = @func_1981(%778, %779) /* ty=(Tensor[(10, 1, 8), float32], Tensor[(15, 3, 3), float64], Tensor[(135), float64]) */;
  %781 = %780.0;
  %782 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 40), float32] */, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%781, dtype="float64") /* ty=Tensor[(10, 1, 8), float64] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %786 = %766.0;
  %787 = %770.0;
  %788 = %772.1;
  %789 = %773.1;
  %790 = sigmoid(%774) /* ty=Tensor[(2, 40), float64] */;
  %791 = power(%784, %785) /* ty=Tensor[(10, ?, 8), float64] */;
  (%786, %767, %787, %776, %788, %789, %790, %791)
}

def @func_12206() -> Tensor[(15, 3, 3), float64] {
  @func_12204() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_7924(%var_7922: Tensor[(14, 8, 11), int8], %var_7923: Tensor[(14, 8, 11), int8]) -> Tensor[(14, 8, 11), bool] {
  %796 = fn (%var_7908: Tensor[(14, 8, 11), int8], %var_7909: Tensor[(14, 8, 11), int8]) -> Tensor[(14, 8, 11), bool] {
    %792 = cast(%var_7909, dtype="bool") /* ty=Tensor[(14, 8, 11), bool] */;
    %793 = shape_of(%var_7908, dtype="int32") /* ty=Tensor[(3), int32] */;
    %794 = cast(%var_7908, dtype="bool") /* ty=Tensor[(14, 8, 11), bool] */;
    %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%794, %795) /* ty=Tensor[(14, 8, 11), bool] */
  };
  %796(%var_7922, %var_7923) /* ty=Tensor[(14, 8, 11), bool] */
}

def @func_8044(%var_7973: Tensor[(56, 12), uint8], %var_7997: Tensor[(588), int32], %var_8008: Tensor[(135), float64]) -> (Tensor[(56, 12), bool], Tensor[(2156), float32], Tensor[(7, 308), float32], Tensor[(462), float32], Tensor[(14, 7, 6), uint16], Tensor[(588), int32], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) {
  %797 = @func_1173() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8]) */;
  %798 = %797.1;
  %799 = cast(%var_7973, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(2), int32] */;
  %801 = cast(%798, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %803 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 308), float32] */, dtype="float32") /* ty=Tensor[(7, 308), float32] */;
  %804 = cast(meta[relay.Constant][31] /* ty=Tensor[(462), float32] */, dtype="float32") /* ty=Tensor[(462), float32] */;
  %805 = reshape(%803, newshape=[2156]) /* ty=Tensor[(2156), float32] */;
  %806 = reshape(%804, newshape=[462, 1]) /* ty=Tensor[(462, 1), float32] */;
  %807 = @func_5917(%805, %806) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(22, 7), float32], Tensor[(2156), float32], Tensor[(462, 1), float32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) */;
  %808 = cast(%var_7997, dtype="int32") /* ty=Tensor[(588), int32] */;
  %809 = reshape(%808, newshape=[14, 7, 6]) /* ty=Tensor[(14, 7, 6), int32] */;
  %810 = @func_6887(%809) /* ty=(Tensor[(14, 7, 6), uint16], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) */;
  %811 = cast(%var_8008, dtype="float64") /* ty=Tensor[(135), float64] */;
  %812 = reshape(%811, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %813 = @func_1722(%812) /* ty=(Tensor[(672), uint8], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
  %814 = %813.2;
  %815 = cast(%814, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %816 = reshape(%815, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %817 = @func_470(%816) /* ty=(Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */;
  %818 = equal(%801, %802) /* ty=Tensor[(56, 12), bool] */;
  %819 = %807.3;
  %820 = %810.0;
  %821 = %817.1;
  (%818, %819, meta[relay.Constant][30] /* ty=Tensor[(7, 308), float32] */, meta[relay.Constant][31] /* ty=Tensor[(462), float32] */, %820, %var_7997, %814, %var_8008, %821)
}

def @func_11531(%var_11513: Tensor[(672), uint8]) -> (Tensor[(15, 3, 3), float64], Tensor[(588), int32], Tensor[(672), uint8], Tensor[(8, 1, 4), float64]) {
  %822 = cast(%var_11513, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %823 = reshape(%822, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
  %824 = @func_8640(%823) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(588), int32], Tensor[(672), uint8], Tensor[(588), int32], Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), float64]) */;
  %825 = @func_6726() /* ty=(Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) */;
  %826 = @func_7867() /* ty=Tensor[(15, 3, 3), float64] */;
  %827 = %824.3;
  %828 = %825.0;
  (%826, %827, %var_11513, %828)
}

def @func_10325() -> (Tensor[(15, 3, 3), float64],) {
  %829 = @func_9060() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %830 = %829.0;
  (%830,)
}

def @func_3597() -> Tensor[(7, 16, 13), float64] {
  %831 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %831.0
}

def @func_10518() -> (Tensor[(7, 16, 13), float64],) {
  %832 = @func_6846() /* ty=Tensor[(7, 16, 13), float64] */;
  (%832,)
}

def @func_12354() -> (Tensor[(15, 3, 3), float64],) {
  %835 = fn () -> (Tensor[(15, 3, 3), float64],) {
    %833 = @func_2771() /* ty=(Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) */;
    %834 = %833.1;
    (%834,)
  };
  %835() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_7683() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) {
  %836 = @func_4765() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %837 = @func_3094() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %838 = %836.0;
  %839 = @func_2182() /* ty=Tensor[(15, 3, 3), float32] */;
  %840 = %837.0;
  (%838, %839, %840)
}

def @func_9061() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %844 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
    %841 = @func_5773() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %842 = @func_2268() /* ty=Tensor[(15, 3, 3), float64] */;
    %843 = %841.0;
    (%842, %843)
  };
  %844() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_2597() -> (Tensor[(15, 3, 3), float64],) {
  @func_2595() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_8870() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64], Tensor[(45, 1), float32]) {
  %845 = @func_3204() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %846 = @func_5679() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), bool], Tensor[(15, 3, 3), float64]) */;
  %847 = cast(meta[relay.Constant][32] /* ty=Tensor[(45, 1), float32] */, dtype="float32") /* ty=Tensor[(45, 1), float32] */;
  %848 = reshape(%847, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %849 = @func_4112(%848) /* ty=(Tensor[(15, 3, 3), bool], Tensor[(45), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), bool]) */;
  %850 = %845.0;
  %851 = %846.2;
  %852 = @func_1826() /* ty=Tensor[(12, 14, 4), float32] */;
  %853 = %849.2;
  (%850, %851, %852, %853, meta[relay.Constant][32] /* ty=Tensor[(45, 1), float32] */)
}

def @func_193() -> (Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) {
  @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */
}

def @func_11197() -> Tensor[(7, 16, 13), float64] {
  @func_11195() /* ty=Tensor[(7, 16, 13), float64] */
}

def @func_1435() -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) {
  %859 = fn () -> (Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) {
    %854 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
    %855 = cast(%854, dtype="float32") /* ty=Tensor[(15, 3, 3), float32] */;
    %856 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %857 = log10(%855) /* ty=Tensor[(15, 3, 3), float32] */;
    %858 = %856.0;
    (%857, %858)
  };
  %859() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */
}

def @func_4662() -> (Tensor[(14, 7, 6), int32],) {
  %860 = @func_2914() /* ty=Tensor[(14, 7, 6), int32] */;
  (%860,)
}

def @func_470(%var_463: Tensor[(15, 3, 3), float64]) -> (Tensor[(13, 12, 4), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) {
  %861 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(13, 12, 4), float64] */;
  %862 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
  %863 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  %864 = cast(%var_463, dtype="bool") /* ty=Tensor[(15, 3, 3), bool] */;
  %865 = shape_of(%863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%863, dtype="bool") /* ty=Tensor[(15, 3, 3), bool] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %868 = log2(%861) /* ty=Tensor[(13, 12, 4), float64] */;
  %869 = %862.0;
  %870 = logical_and(%866, %867) /* ty=Tensor[(15, 3, 3), bool] */;
  (%868, %869, %870)
}

def @func_2387(%var_2361: Tensor[(14, 11, 1), float32], %var_2364: Tensor[(14, 11, 14), float32], %var_2368: Tensor[(14, 11, 3), float32]) -> (Tensor[(14, 11, 14), int64], Tensor[(14, 11, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(14, 11, 1), float64]) {
  %871 = cast(%var_2361, dtype="int64") /* ty=Tensor[(14, 11, 1), int64] */;
  %872 = cast(%var_2364, dtype="int64") /* ty=Tensor[(14, 11, 14), int64] */;
  %873 = cast(%var_2361, dtype="float32") /* ty=Tensor[(14, 11, 1), float32] */;
  %874 = log(%873) /* ty=Tensor[(14, 11, 1), float32] */;
  %875 = cast(%874, dtype="float64") /* ty=Tensor[(14, 11, 1), float64] */;
  %876 = cast(%var_2368, dtype="float64") /* ty=Tensor[(14, 11, 3), float64] */;
  %877 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %878 = cast(%var_2361, dtype="float64") /* ty=Tensor[(14, 11, 1), float64] */;
  %879 = right_shift(%871, %872) /* ty=Tensor[(14, 11, 14), int64] */;
  %880 = divide(%875, %876) /* ty=Tensor[(14, 11, 3), float64] */;
  %881 = %877.0;
  %882 = sigmoid(%878) /* ty=Tensor[(14, 11, 1), float64] */;
  (%879, %880, %881, %882)
}

def @func_5921(%var_5919: Tensor[(2156), float32], %var_5920: Tensor[(462, 1), float32]) -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(22, 7), float32], Tensor[(2156), float32], Tensor[(462, 1), float32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) {
  @func_5917(%var_5919, %var_5920) /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(22, 7), float32], Tensor[(2156), float32], Tensor[(462, 1), float32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) */
}

def @func_8640(%var_8631: Tensor[(12, 14, 4), uint8]) -> (Tensor[(15, 3, 3), float64], Tensor[(588), int32], Tensor[(672), uint8], Tensor[(588), int32], Tensor[(15, 3, 3), float32], Tensor[(12, 14, 4), float64]) {
  %883 = cast(meta[relay.Constant][34] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %884 = cast(meta[relay.Constant][35] /* ty=Tensor[(588), int32] */, dtype="int32") /* ty=Tensor[(588), int32] */;
  %885 = @func_2268() /* ty=Tensor[(15, 3, 3), float64] */;
  %886 = cast(%885, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %887 = reshape(%883, newshape=[56, 12]) /* ty=Tensor[(56, 12), uint8] */;
  %888 = reshape(%884, newshape=[588]) /* ty=Tensor[(588), int32] */;
  %889 = reshape(%886, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %890 = @func_8044(%887, %888, %889) /* ty=(Tensor[(56, 12), bool], Tensor[(2156), float32], Tensor[(7, 308), float32], Tensor[(462), float32], Tensor[(14, 7, 6), uint16], Tensor[(588), int32], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
  %891 = cast(meta[relay.Constant][34] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
  %892 = reshape(%891, newshape=[672]) /* ty=Tensor[(672), uint8] */;
  %893 = @func_1671(%892) /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(15, 3, 3), float64]) */;
  %894 = %893.3;
  %895 = cast(%var_8631, dtype="float64") /* ty=Tensor[(12, 14, 4), float64] */;
  %896 = shape_of(%894, dtype="int32") /* ty=Tensor[(3), int32] */;
  %897 = cast(%894, dtype="float64") /* ty=Tensor[(12, 14, 4), float64] */;
  %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %899 = %890.5;
  %900 = @func_2182() /* ty=Tensor[(15, 3, 3), float32] */;
  %901 = minimum(%897, %898) /* ty=Tensor[(12, 14, 4), float64] */;
  (%885, %899, meta[relay.Constant][34] /* ty=Tensor[(672), uint8] */, meta[relay.Constant][35] /* ty=Tensor[(588), int32] */, %900, %901)
}

def @func_6890(%var_6888: Tensor[(14, 7, 6), int32]) -> (Tensor[(14, 7, 6), uint16], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) {
  @func_6887(%var_6888) /* ty=(Tensor[(14, 7, 6), uint16], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) */
}

def @func_8049(%var_8046: Tensor[(56, 12), uint8], %var_8047: Tensor[(588), int32], %var_8048: Tensor[(135), float64]) -> (Tensor[(56, 12), bool], Tensor[(2156), float32], Tensor[(7, 308), float32], Tensor[(462), float32], Tensor[(14, 7, 6), uint16], Tensor[(588), int32], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) {
  @func_8044(%var_8046, %var_8047, %var_8048) /* ty=(Tensor[(56, 12), bool], Tensor[(2156), float32], Tensor[(7, 308), float32], Tensor[(462), float32], Tensor[(14, 7, 6), uint16], Tensor[(588), int32], Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_835() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %902 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %903 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %904 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %905 = %902.0;
  %906 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  %907 = %903.0;
  %908 = %904.3;
  %909 = @func_283() /* ty=Tensor[(15, 3, 3), float64] */;
  (%905, %906, %907, %908, %909)
}

def @func_2297() -> (Tensor[(15, 3, 3), float32], Tensor[(14, 7, 6), int32]) {
  %910 = @func_1434() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %911 = @func_1781() /* ty=(Tensor[(14, 7, 6), int32],) */;
  %912 = %910.0;
  %913 = %911.0;
  (%912, %913)
}

def @func_5896() -> Tensor[(12, 14, 4), uint8] {
  @func_5894() /* ty=Tensor[(12, 14, 4), uint8] */
}

def @func_6728() -> (Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) {
  @func_6726() /* ty=(Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_12383(%var_12378: Tensor[(15, 16, 6), int64], %var_12379: Tensor[(15, 16, 6), int64]) -> (Tensor[(15, 16, 6), bool],) {
  %914 = cast(%var_12379, dtype="bool") /* ty=Tensor[(15, 16, 6), bool] */;
  %915 = shape_of(%var_12378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %916 = cast(%var_12378, dtype="bool") /* ty=Tensor[(15, 16, 6), bool] */;
  %917 = dyn.reshape(%914, %915, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %918 = equal(%916, %917) /* ty=Tensor[(15, 16, 6), bool] */;
  (%918,)
}

def @func_3554() -> (Tensor[(7, 16, 13), float64],) {
  %919 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %920 = %919.0;
  (%920,)
}

def @func_8892() -> (Tensor[(8, 1, 4), float32],) {
  @func_8890() /* ty=(Tensor[(8, 1, 4), float32],) */
}

def @func_11307() -> (Tensor[(15, 3, 3), float64], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float32]) {
  @func_11305() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float32]) */
}

def @func_2815() -> Tensor[(15, 3, 3), float64] {
  @func_2813() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_6525() -> (Tensor[(672), uint8],) {
  @func_6523() /* ty=(Tensor[(672), uint8],) */
}

def @func_8547() -> Tensor[(15, 3, 3), float64] {
  %921 = @func_4617() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) */;
  %921.1
}

def @func_191() -> (Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) {
  %922 = cast(meta[relay.Constant][36] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %923 = reshape(%922, newshape=[15, 3, 3]) /* ty=Tensor[(15, 3, 3), float64] */;
  %924 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 16, 13), float64] */, dtype="float64") /* ty=Tensor[(7, 16, 13), float64] */;
  %925 = sqrt(%924) /* ty=Tensor[(7, 16, 13), float64] */;
  %926 = cast(%925, dtype="float64") /* ty=Tensor[(7, 16, 13), float64] */;
  %927 = @func_82(%923) /* ty=Tensor[(15, 3, 3), float64] */;
  %928 = cosh(%926) /* ty=Tensor[(7, 16, 13), float64] */;
  (%927, meta[relay.Constant][36] /* ty=Tensor[(135), float64] */, %928)
}

def @func_12239() -> (Tensor[(15, 3, 3), float64],) {
  %931 = fn () -> (Tensor[(15, 3, 3), float64],) {
    %929 = @func_6790() /* ty=(Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) */;
    %930 = %929.1;
    (%930,)
  };
  %931() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_687() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %932 = @func_423() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %933 = %932.0;
  %934 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  (%933, %934)
}

def @func_10916() -> (Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) {
  %939 = fn () -> (Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) {
    %935 = @func_1560() /* ty=(Tensor[(7, 16, 13), float64],) */;
    %936 = @func_4765() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %937 = %935.0;
    %938 = %936.0;
    (%937, %938)
  };
  %939() /* ty=(Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_11486() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64], Tensor[(1089), bool], Tensor[(15, 3, 3), float64]) {
  @func_11484() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64], Tensor[(1089), bool], Tensor[(15, 3, 3), float64]) */
}

def @func_7565() -> (Tensor[(12, 14, 4), float32], Tensor[(7, 16, 13), float64]) {
  @func_7563() /* ty=(Tensor[(12, 14, 4), float32], Tensor[(7, 16, 13), float64]) */
}

def @func_6847() -> Tensor[(7, 16, 13), float64] {
  %941 = fn () -> Tensor[(7, 16, 13), float64] {
    %940 = @func_3554() /* ty=(Tensor[(7, 16, 13), float64],) */;
    %940.0
  };
  %941() /* ty=Tensor[(7, 16, 13), float64] */
}

def @func_9161() -> Tensor[(15, 3, 3), float64] {
  @func_1697() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_6425(%var_6387: Tensor[(15, 3, 3), float64], %var_6397: Tensor[(22, 7), float32], %var_6398: Tensor[(231, 2), float32]) -> (Tensor[(672), uint8], Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(2156), float32], Tensor[(22, 7), float32], Tensor[(231, 2), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %942 = @func_4912() /* ty=(Tensor[(135), float64], Tensor[(672), uint8], Tensor[(14, 7, 6), float64]) */;
  %943 = @func_2456() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) */;
  %944 = @func_4617() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) */;
  %945 = @func_1606() /* ty=Tensor[(15, 3, 3), float64] */;
  %946 = cast(%var_6387, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %947 = shape_of(%945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %948 = cast(%945, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %950 = cast(%var_6397, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
  %951 = cast(%var_6398, dtype="float32") /* ty=Tensor[(231, 2), float32] */;
  %952 = reshape(%950, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %953 = reshape(%951, newshape=[462]) /* ty=Tensor[(462), float32] */;
  %954 = @func_3952(%952, %953) /* ty=(Tensor[(8, 3, 13), bool], Tensor[(14, 11, 14), int64], Tensor[(154), float32], Tensor[(2156), float32], Tensor[(462), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(8, 84), bool]) */;
  %955 = @func_5506() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64]) */;
  %956 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %957 = %942.1;
  %958 = %943.0;
  %959 = %944.3;
  %960 = maximum(%948, %949) /* ty=Tensor[(15, 3, 3), float64] */;
  %961 = %954.3;
  %962 = %955.2;
  %963 = %956.0;
  (%957, %958, %959, %960, %961, %var_6397, %var_6398, %962, %963)
}

def @func_10554() -> (Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float32]) {
  %964 = @func_9032() /* ty=(Tensor[(15, 3, 3), float32],) */;
  %965 = @func_1797() /* ty=Tensor[(14, 7, 6), int32] */;
  %966 = %964.0;
  (%965, %966)
}

def @func_9551() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(90), float64]) {
  @func_9549() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(90), float64]) */
}

def @func_591() -> (Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) {
  %981 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) {
    %967 = @func_423() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %968 = cast(meta[relay.Constant][38] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %969 = cast(meta[relay.Constant][38] /* ty=Tensor[(672), uint8] */, dtype="uint8") /* ty=Tensor[(672), uint8] */;
    %970 = reshape(%968, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
    %971 = reshape(%969, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
    %972 = @func_318(%970, %971) /* ty=(Tensor[(12, 14, 4), uint8],) */;
    %973 = %972.0;
    %974 = cast(%973, dtype="uint8") /* ty=Tensor[(12, 14, 4), uint8] */;
    %975 = cast(%973, dtype="uint8") /* ty=Tensor[(12, 14, 4), uint8] */;
    %976 = reshape(%974, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
    %977 = reshape(%975, newshape=[12, 14, 4]) /* ty=Tensor[(12, 14, 4), uint8] */;
    %978 = @func_318(%976, %977) /* ty=(Tensor[(12, 14, 4), uint8],) */;
    %979 = %967.0;
    %980 = %978.0;
    (%979, %973, meta[relay.Constant][38] /* ty=Tensor[(672), uint8] */, %980)
  };
  %981() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */
}

def @func_4040() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) {
  %986 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) {
    %982 = @func_986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %983 = @func_3254() /* ty=(Tensor[(15, 3, 3), bool],) */;
    %984 = %982.0;
    %985 = %983.0;
    (%984, %985)
  };
  %986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */
}

def @func_250() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_1099(%var_1081: Tensor[(6, 5, 3), float64]) -> (Tensor[(6, 5, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %987 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 5, 3), float64] */, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
  %988 = shape_of(%var_1081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(%var_1081, dtype="float64") /* ty=Tensor[(6, 5, 3), float64] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %991 = @func_986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %992 = floor_divide(%989, %990) /* ty=Tensor[(6, 5, 3), float64] */;
  %993 = %991.0;
  %994 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  (%992, %993, %994)
}

def @func_6726() -> (Tensor[(8, 1, 4), float64], Tensor[(15, 3, 3), float64]) {
  %995 = @func_4188() /* ty=(Tensor[(8, 1, 4), float64],) */;
  %996 = @func_1572() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %997 = %995.0;
  %998 = %996.0;
  (%997, %998)
}

def @func_11195() -> Tensor[(7, 16, 13), float64] {
  %999 = @func_10212() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %999.0
}

def @func_2458() -> (Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) {
  @func_2456() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) */
}

def @func_10187() -> (Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(12, 14, 4), int32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) {
  %1019 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(12, 14, 4), int32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) {
    %1000 = @func_4765() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %1001 = @func_7563() /* ty=(Tensor[(12, 14, 4), float32], Tensor[(7, 16, 13), float64]) */;
    %1002 = @func_744() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
    %1003 = %1002.1;
    %1004 = cast(%1003, dtype="float64") /* ty=Tensor[(12, 14, 4), float64] */;
    %1005 = exp(%1004) /* ty=Tensor[(12, 14, 4), float64] */;
    %1006 = cast(%1005, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
    %1007 = sigmoid(%1006) /* ty=Tensor[(12, 14, 4), float32] */;
    %1008 = cast(%1005, dtype="int32") /* ty=Tensor[(12, 14, 4), int32] */;
    %1009 = shape_of(%1007, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1010 = cast(%1007, dtype="int32") /* ty=Tensor[(12, 14, 4), int32] */;
    %1011 = dyn.reshape(%1008, %1009, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1012 = cast(%1005, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
    %1013 = @func_9638() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %1014 = %1000.0;
    %1015 = %1001.0;
    %1016 = add(%1010, %1011) /* ty=Tensor[(12, 14, 4), int32] */;
    %1017 = asin(%1012) /* ty=Tensor[(12, 14, 4), float32] */;
    %1018 = %1013.1;
    (%1014, %1015, %1016, %1017, %1018)
  };
  %1019() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), float32], Tensor[(12, 14, 4), int32], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) */
}

def @func_715() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_3738(%var_3736: Tensor[(135), float64]) -> (Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(56, 12), float64]) {
  @func_3735(%var_3736) /* ty=(Tensor[(15, 3, 3), uint16], Tensor[(135), float64], Tensor[(56, 12), float64]) */
}

def @func_7637(%var_7635: Tensor[(15, 15, 7), float32]) -> (Tensor[(15, 15, 7), float32],) {
  @func_7634(%var_7635) /* ty=(Tensor[(15, 15, 7), float32],) */
}

def @func_1798() -> Tensor[(14, 7, 6), int32] {
  %1021 = fn () -> Tensor[(14, 7, 6), int32] {
    %1020 = @func_1781() /* ty=(Tensor[(14, 7, 6), int32],) */;
    %1020.0
  };
  %1021() /* ty=Tensor[(14, 7, 6), int32] */
}

def @func_1762() -> (Tensor[(15, 3, 3), float64],) {
  %1022 = @func_1459() /* ty=Tensor[(15, 3, 3), float64] */;
  (%1022,)
}

def @func_10212() -> (Tensor[(7, 16, 13), float64],) {
  %1023 = @func_9965() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %1024 = %1023.0;
  (%1024,)
}

def @func_7867() -> Tensor[(15, 3, 3), float64] {
  @func_2268() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_11327(%var_11325: Tensor[(5, 12, 10), float64]) -> Tensor[(5, 12, 10), float64] {
  @func_11324(%var_11325) /* ty=Tensor[(5, 12, 10), float64] */
}

def @func_3556() -> (Tensor[(7, 16, 13), float64],) {
  @func_3554() /* ty=(Tensor[(7, 16, 13), float64],) */
}

def @func_2799() -> Tensor[(15, 3, 3), float64] {
  @func_278() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_10076() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(14, 7, 6), int32]) {
  %1033 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(14, 7, 6), int32]) {
    %1025 = @func_5506() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64]) */;
    %1026 = @func_2771() /* ty=(Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) */;
    %1027 = @func_2456() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(10, 1, 8), float32], Tensor[(80), float32], Tensor[(135), float64]) */;
    %1028 = @func_9579() /* ty=Tensor[(15, 3, 3), float64] */;
    %1029 = %1025.1;
    %1030 = @func_9161() /* ty=Tensor[(15, 3, 3), float64] */;
    %1031 = %1026.0;
    %1032 = %1027.0;
    (%1028, %1029, %1030, %1031, %1032)
  };
  %1033() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(14, 7, 6), int32]) */
}

def @func_6339() -> (Tensor[(135), float64], Tensor[(14, 7, 6), int32]) {
  %1037 = fn () -> (Tensor[(135), float64], Tensor[(14, 7, 6), int32]) {
    %1034 = @func_4883() /* ty=(Tensor[(135), float64],) */;
    %1035 = %1034.0;
    %1036 = @func_1797() /* ty=Tensor[(14, 7, 6), int32] */;
    (%1035, %1036)
  };
  %1037() /* ty=(Tensor[(135), float64], Tensor[(14, 7, 6), int32]) */
}

def @func_1828() -> Tensor[(12, 14, 4), float32] {
  @func_1826() /* ty=Tensor[(12, 14, 4), float32] */
}

def @func_4410() -> (Tensor[(15, 3, 3), float64], Tensor[(135), float64]) {
  %1042 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(135), float64]) {
    %1038 = @func_3382() /* ty=(Tensor[(14, 7, 6), int32], Tensor[(15, 3, 3), float64]) */;
    %1039 = @func_3320() /* ty=(Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
    %1040 = %1038.1;
    %1041 = %1039.0;
    (%1040, %1041)
  };
  %1042() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64]) */
}

def @func_5303() -> (Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %1049 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
    %1043 = @func_2636() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
    %1044 = @func_4883() /* ty=(Tensor[(135), float64],) */;
    %1045 = %1043.1;
    %1046 = %1044.0;
    %1047 = @func_2091() /* ty=Tensor[(15, 3, 3), float64] */;
    %1048 = @func_1606() /* ty=Tensor[(15, 3, 3), float64] */;
    (%1045, %1046, %1047, %1048)
  };
  %1049() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_11715() -> (Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  @func_11713() /* ty=(Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_278() -> Tensor[(15, 3, 3), float64] {
  %1050 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %1050.3
}

def @func_5066(%var_5065: Tensor[(9, 11, 11), bool]) -> (Tensor[(9, 11, 11), bool],) {
  %1056 = fn (%var_5055: Tensor[(9, 11, 11), bool]) -> (Tensor[(9, 11, 11), bool],) {
    %1051 = cast(%var_5055, dtype="bool") /* ty=Tensor[(9, 11, 11), bool] */;
    %1052 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(9, 11, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1053 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 11, 11), bool] */, dtype="bool") /* ty=Tensor[(9, 11, 11), bool] */;
    %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1055 = logical_and(%1053, %1054) /* ty=Tensor[(9, 11, 11), bool] */;
    (%1055,)
  };
  %1056(%var_5065) /* ty=(Tensor[(9, 11, 11), bool],) */
}

def @func_1561() -> (Tensor[(7, 16, 13), float64],) {
  %1059 = fn () -> (Tensor[(7, 16, 13), float64],) {
    %1057 = @func_248() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %1058 = %1057.1;
    (%1058,)
  };
  %1059() /* ty=(Tensor[(7, 16, 13), float64],) */
}

def @func_3830(%var_3829: Tensor[(12, 7, 16), float64]) -> (Tensor[(12, 7, 16), float64], Tensor[(15, 3, 3), float64], Tensor[(90), float64]) {
  %1066 = fn (%var_3805: Tensor[(12, 7, 16), float64]) -> (Tensor[(12, 7, 16), float64], Tensor[(15, 3, 3), float64], Tensor[(90), float64]) {
    %1060 = cast(%var_3805, dtype="float64") /* ty=Tensor[(12, 7, 16), float64] */;
    %1061 = cast(meta[relay.Constant][41] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %1062 = reshape(%1061, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), float64] */;
    %1063 = @func_1099(%1062) /* ty=(Tensor[(6, 5, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %1064 = sigmoid(%1060) /* ty=Tensor[(12, 7, 16), float64] */;
    %1065 = %1063.2;
    (%1064, %1065, meta[relay.Constant][41] /* ty=Tensor[(90), float64] */)
  };
  %1066(%var_3829) /* ty=(Tensor[(12, 7, 16), float64], Tensor[(15, 3, 3), float64], Tensor[(90), float64]) */
}

def @func_7254() -> (Tensor[(14, 10, 8), float32], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) {
  @func_7252() /* ty=(Tensor[(14, 10, 8), float32], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_3764() -> (Tensor[(15, 3, 3), float64],) {
  %1067 = @func_1572() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %1068 = %1067.0;
  (%1068,)
}

def @func_11624() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  @func_11622() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_7869() -> Tensor[(15, 3, 3), float64] {
  @func_7867() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_5894() -> Tensor[(12, 14, 4), uint8] {
  %1069 = @func_2771() /* ty=(Tensor[(12, 14, 4), uint8], Tensor[(15, 3, 3), float64]) */;
  %1069.0
}

def @func_5125() -> (Tensor[(672), uint8],) {
  @func_5123() /* ty=(Tensor[(672), uint8],) */
}

def @func_10664() -> Tensor[(7, 16, 13), float64] {
  %1071 = fn () -> Tensor[(7, 16, 13), float64] {
    %1070 = @func_4617() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) */;
    %1070.2
  };
  %1071() /* ty=Tensor[(7, 16, 13), float64] */
}

def @func_1698() -> Tensor[(15, 3, 3), float64] {
  %1073 = fn () -> Tensor[(15, 3, 3), float64] {
    %1072 = @func_986() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
    %1072.1
  };
  %1073() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_1322() -> (Tensor[(56, 12), uint8], Tensor[(12, 14, 4), uint8]) {
  %1074 = @func_862() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(12, 14, 4), float32]) */;
  %1075 = @func_590() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8], Tensor[(12, 14, 4), uint8]) */;
  %1076 = %1074.1;
  %1077 = %1075.3;
  (%1076, %1077)
}

def @func_9897() -> Tensor[(15, 3, 3), float64] {
  %1079 = fn () -> Tensor[(15, 3, 3), float64] {
    %1078 = @func_5855() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64]) */;
    %1078.0
  };
  %1079() /* ty=Tensor[(15, 3, 3), float64] */
}

def @func_10622() -> Tensor[(135), float64] {
  @func_10620() /* ty=Tensor[(135), float64] */
}

def @func_5087() -> (Tensor[(14, 7, 6), int32],) {
  @func_5085() /* ty=(Tensor[(14, 7, 6), int32],) */
}

def @func_4999() -> Tensor[(15, 3, 3), float64] {
  %1080 = @func_1572() /* ty=(Tensor[(15, 3, 3), float64],) */;
  %1080.0
}

def @func_3167(%var_3114: Tensor[(8, 8, 14), float64]) -> (Tensor[(8, 8, 14), float64], Tensor[(15, 3, 3), float64], Tensor[(56, 12), uint8], Tensor[(15, 3, 3), float64]) {
  %1081 = cast(%var_3114, dtype="float64") /* ty=Tensor[(8, 8, 14), float64] */;
  %1082 = @func_713() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %1083 = asin(%1081) /* ty=Tensor[(8, 8, 14), float64] */;
  %1084 = %1082.0;
  %1085 = @func_1917() /* ty=Tensor[(56, 12), uint8] */;
  %1086 = @func_1606() /* ty=Tensor[(15, 3, 3), float64] */;
  (%1083, %1084, %1085, %1086)
}

def @func_9032() -> (Tensor[(15, 3, 3), float32],) {
  %1087 = @func_7683() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), float64]) */;
  %1088 = %1087.1;
  (%1088,)
}

def @func_5507() -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64]) {
  %1094 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64]) {
    %1089 = @func_2853() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */;
    %1090 = @func_3764() /* ty=(Tensor[(15, 3, 3), float64],) */;
    %1091 = %1089.0;
    %1092 = @func_2033() /* ty=Tensor[(15, 3, 3), bool] */;
    %1093 = %1090.0;
    (%1091, %1092, %1093)
  };
  %1094() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64]) */
}

def @func_5790(%var_5788: uint16, %var_5789: Tensor[(12, 9, 3), uint16]) -> Tensor[(12, 9, 3), uint16] {
  %1097 = fn (%var_5780: uint16, %var_5781: Tensor[(12, 9, 3), uint16]) -> Tensor[(12, 9, 3), uint16] {
    %1095 = cast(%var_5780, dtype="uint16") /* ty=uint16 */;
    %1096 = cast(%var_5781, dtype="uint16") /* ty=Tensor[(12, 9, 3), uint16] */;
    add(%1095, %1096) /* ty=Tensor[(12, 9, 3), uint16] */
  };
  %1097(%var_5788, %var_5789) /* ty=Tensor[(12, 9, 3), uint16] */
}

def @main(%var_12510: int64, %var_12511: Tensor[(2, 6, 1), int64]) -> (Tensor[(2, 6, 1), int64],) {
  %1098 = cast(%var_12510, dtype="int64") /* ty=int64 */;
  %1099 = cast(%var_12511, dtype="int64") /* ty=Tensor[(2, 6, 1), int64] */;
  %1100 = subtract(%1098, %1099) /* ty=Tensor[(2, 6, 1), int64] */;
  (%1100,)
}

def @func_5745() -> (Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
  %1106 = fn () -> (Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) {
    %1101 = @func_4039() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool]) */;
    %1102 = @func_191() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(135), float64], Tensor[(7, 16, 13), float64]) */;
    %1103 = @func_3597() /* ty=Tensor[(7, 16, 13), float64] */;
    %1104 = %1101.0;
    %1105 = %1102.0;
    (%1103, %1104, %1105)
  };
  %1106() /* ty=(Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_4913() -> (Tensor[(135), float64], Tensor[(672), uint8], Tensor[(14, 7, 6), float64]) {
  %1115 = fn () -> (Tensor[(135), float64], Tensor[(672), uint8], Tensor[(14, 7, 6), float64]) {
    %1107 = @func_3320() /* ty=(Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
    %1108 = @func_2853() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */;
    %1109 = @func_1781() /* ty=(Tensor[(14, 7, 6), int32],) */;
    %1110 = %1109.0;
    %1111 = cast(%1110, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
    %1112 = %1107.0;
    %1113 = %1108.4;
    %1114 = asin(%1111) /* ty=Tensor[(14, 7, 6), float64] */;
    (%1112, %1113, %1114)
  };
  %1115() /* ty=(Tensor[(135), float64], Tensor[(672), uint8], Tensor[(14, 7, 6), float64]) */
}

def @func_4112(%var_4078: Tensor[(45), float32]) -> (Tensor[(15, 3, 3), bool], Tensor[(45), float32], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), bool]) {
  %1116 = @func_3532() /* ty=(Tensor[(15, 3, 3), float32], Tensor[(15, 3, 3), uint16], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8]) */;
  %1117 = @func_687() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %1118 = cast(%var_4078, dtype="float32") /* ty=Tensor[(45), float32] */;
  %1119 = reshape(%1118, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %1120 = @func_3484(%1119) /* ty=(Tensor[(56, 12), uint8], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 9), float32], Tensor[(45), float32], Tensor[(1, 405), float32], Tensor[(15, 3, 3), float64]) */;
  %1121 = %1120.2;
  %1122 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 3, 9), float32] */, dtype="bool") /* ty=Tensor[(15, 3, 9), bool] */;
  %1123 = shape_of(%1121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1124 = cast(%1121, dtype="bool") /* ty=Tensor[(15, 3, 9), bool] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1126 = %1116.2;
  %1127 = %1117.1;
  %1128 = equal(%1124, %1125) /* ty=Tensor[(15, 3, 9), bool] */;
  (%1126, %var_4078, %1127, %1128)
}

def @func_11957() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64]) {
  %1129 = @func_835() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64]) */;
  %1130 = @func_9965() /* ty=(Tensor[(7, 16, 13), float64],) */;
  %1131 = %1129.3;
  %1132 = %1130.0;
  (%1131, %1132)
}

def @func_6680() -> (Tensor[(15, 3, 3), float64],) {
  %1135 = fn () -> (Tensor[(15, 3, 3), float64],) {
    %1133 = @func_3320() /* ty=(Tensor[(135), float64], Tensor[(15, 3, 3), float64]) */;
    %1134 = %1133.1;
    (%1134,)
  };
  %1135() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_10728() -> (Tensor[(15, 3, 3), float64],) {
  @func_10726() /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_4189() -> (Tensor[(8, 1, 4), float64],) {
  %1138 = fn () -> (Tensor[(8, 1, 4), float64],) {
    %1136 = cast(meta[relay.Constant][43] /* ty=Tensor[(8, 1, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 1, 4), float64] */;
    %1137 = log2(%1136) /* ty=Tensor[(8, 1, 4), float64] */;
    (%1137,)
  };
  %1138() /* ty=(Tensor[(8, 1, 4), float64],) */
}

def @func_9247() -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) {
  %1142 = fn () -> (Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) {
    %1139 = @func_2799() /* ty=Tensor[(15, 3, 3), float64] */;
    %1140 = @func_6846() /* ty=Tensor[(7, 16, 13), float64] */;
    %1141 = @func_9161() /* ty=Tensor[(15, 3, 3), float64] */;
    (%1139, %1140, %1141)
  };
  %1142() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64]) */
}

def @func_6887(%var_6853: Tensor[(14, 7, 6), int32]) -> (Tensor[(14, 7, 6), uint16], Tensor[(7, 16, 13), float64], Tensor[(12, 14, 4), float32], Tensor[(15, 3, 3), float64]) {
  %1143 = @func_4476() /* ty=(Tensor[(14, 7, 6), int32],) */;
  %1144 = %1143.0;
  %1145 = cast(%var_6853, dtype="uint16") /* ty=Tensor[(14, 7, 6), uint16] */;
  %1146 = shape_of(%1144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1147 = cast(%1144, dtype="uint16") /* ty=Tensor[(14, 7, 6), uint16] */;
  %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1149 = @func_2853() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(12, 14, 4), uint8], Tensor[(672), uint8]) */;
  %1150 = %1149.3;
  %1151 = cast(%1150, dtype="float32") /* ty=Tensor[(12, 14, 4), float32] */;
  %1152 = bitwise_or(%1147, %1148) /* ty=Tensor[(14, 7, 6), uint16] */;
  %1153 = @func_3597() /* ty=Tensor[(7, 16, 13), float64] */;
  %1154 = cos(%1151) /* ty=Tensor[(12, 14, 4), float32] */;
  %1155 = @func_278() /* ty=Tensor[(15, 3, 3), float64] */;
  (%1152, %1153, %1154, %1155)
}

def @func_7563() -> (Tensor[(12, 14, 4), float32], Tensor[(7, 16, 13), float64]) {
  %1156 = @func_4617() /* ty=(Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), float64], Tensor[(7, 16, 13), float64], Tensor[(15, 3, 3), float64], Tensor[(15, 3, 3), bool], Tensor[(15, 3, 3), float32]) */;
  %1157 = %1156.2;
  %1158 = cast(%1157, dtype="float64") /* ty=Tensor[(7, 16, 13), float64] */;
  %1159 = @func_1826() /* ty=Tensor[(12, 14, 4), float32] */;
  %1160 = tan(%1158) /* ty=Tensor[(7, 16, 13), float64] */;
  (%1159, %1160)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen797/build/output.py:4038: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen797/build/output.py", line 4043, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(12) tvmgen_default_fused_subtract_kernel0(int64_t* __restrict__ T_subtract, int64_t* __restrict__ placeholder, int64_t* __restrict__ placeholder1) {
  T_subtract[(((int)threadIdx.x))] = (placeholder[(0)] - placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


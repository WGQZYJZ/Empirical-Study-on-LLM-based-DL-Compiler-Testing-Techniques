import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_11 = relay.var("var_11", dtype = "float32", shape = (15, 4, 9))#candidate|11|(15, 4, 9)|var|float32
uop_12 = relay.acosh(var_11.astype('float32')) # shape=(15, 4, 9)
output = relay.Tuple([uop_12,])
output2 = relay.Tuple([uop_12,])
func_16 = relay.Function([var_11,], output)
mod['func_16'] = func_16
mod = relay.transform.InferType()(mod)
mutated_mod['func_16'] = func_16
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17 = relay.var("var_17", dtype = "float32", shape = (15, 4, 9))#candidate|17|(15, 4, 9)|var|float32
func_16_call = mutated_mod.get_global_var('func_16')
call_18 = func_16_call(var_17)
output = call_18
func_19 = relay.Function([var_17], output)
mutated_mod['func_19'] = func_19
mutated_mod = relay.transform.InferType()(mutated_mod)
var_419 = relay.var("var_419", dtype = "float64", shape = (4, 10, 14))#candidate|419|(4, 10, 14)|var|float64
uop_420 = relay.sqrt(var_419.astype('float64')) # shape=(4, 10, 14)
func_16_call = mod.get_global_var('func_16')
func_19_call = mutated_mod.get_global_var('func_19')
var_424 = relay.var("var_424", dtype = "float32", shape = (540,))#candidate|424|(540,)|var|float32
call_423 = relay.TupleGetItem(func_16_call(relay.reshape(var_424.astype('float32'), [15, 4, 9])), 0)
call_425 = relay.TupleGetItem(func_19_call(relay.reshape(var_424.astype('float32'), [15, 4, 9])), 0)
output = relay.Tuple([uop_420,call_423,var_424,])
output2 = relay.Tuple([uop_420,call_425,var_424,])
func_426 = relay.Function([var_419,var_424,], output)
mod['func_426'] = func_426
mod = relay.transform.InferType()(mod)
var_427 = relay.var("var_427", dtype = "float64", shape = (4, 10, 14))#candidate|427|(4, 10, 14)|var|float64
var_428 = relay.var("var_428", dtype = "float32", shape = (540,))#candidate|428|(540,)|var|float32
output = func_426(var_427,var_428,)
func_429 = relay.Function([var_427,var_428,], output)
mutated_mod['func_429'] = func_429
mutated_mod = relay.transform.InferType()(mutated_mod)
const_441 = relay.const([[[6,-8,-5,-4,7,9,-3,-2,6,-1,4,-6],[-5,7,-6,1,-10,-6,-7,3,2,-1,2,3],[-9,-2,2,-1,10,2,-4,-1,4,-9,-10,7],[4,-6,-3,4,-5,5,4,-4,-6,2,1,-6],[3,-6,-10,4,10,8,-8,7,9,-1,-10,1],[3,-7,9,7,-3,-2,5,4,-7,-3,7,10],[-2,2,6,-9,7,5,-1,5,-7,-6,-6,-10],[-7,9,2,1,-8,7,4,-7,2,-6,-4,9],[-1,-4,9,9,-8,7,8,6,-1,-4,-9,-6],[10,-5,5,8,1,3,7,-4,-2,6,1,8],[5,4,2,4,-4,-10,3,6,-9,5,-5,-4]]], dtype = "int8")#candidate|441|(1, 11, 12)|const|int8
var_442 = relay.var("var_442", dtype = "int8", shape = (2, 11, 12))#candidate|442|(2, 11, 12)|var|int8
bop_443 = relay.logical_xor(const_441.astype('int8'), var_442.astype('int8')) # shape=(2, 11, 12)
output = relay.Tuple([bop_443,])
output2 = relay.Tuple([bop_443,])
func_450 = relay.Function([var_442,], output)
mod['func_450'] = func_450
mod = relay.transform.InferType()(mod)
mutated_mod['func_450'] = func_450
mutated_mod = relay.transform.InferType()(mutated_mod)
var_451 = relay.var("var_451", dtype = "int8", shape = (2, 11, 12))#candidate|451|(2, 11, 12)|var|int8
func_450_call = mutated_mod.get_global_var('func_450')
call_452 = func_450_call(var_451)
output = call_452
func_453 = relay.Function([var_451], output)
mutated_mod['func_453'] = func_453
mutated_mod = relay.transform.InferType()(mutated_mod)
var_689 = relay.var("var_689", dtype = "float64", shape = (11, 14, 1))#candidate|689|(11, 14, 1)|var|float64
uop_690 = relay.erf(var_689.astype('float64')) # shape=(11, 14, 1)
output = relay.Tuple([uop_690,])
output2 = relay.Tuple([uop_690,])
func_711 = relay.Function([var_689,], output)
mod['func_711'] = func_711
mod = relay.transform.InferType()(mod)
var_712 = relay.var("var_712", dtype = "float64", shape = (11, 14, 1))#candidate|712|(11, 14, 1)|var|float64
output = func_711(var_712)
func_713 = relay.Function([var_712], output)
mutated_mod['func_713'] = func_713
mutated_mod = relay.transform.InferType()(mutated_mod)
var_718 = relay.var("var_718", dtype = "float32", shape = (11, 9, 3))#candidate|718|(11, 9, 3)|var|float32
uop_719 = relay.sqrt(var_718.astype('float32')) # shape=(11, 9, 3)
func_711_call = mod.get_global_var('func_711')
func_713_call = mutated_mod.get_global_var('func_713')
const_722 = relay.const([-2.060209,-7.499210,-3.128368,3.066836,-8.792639,-9.414498,0.739497,-4.773093,3.912134,-1.898722,-2.034465,8.003137,-4.308556,-4.042299,-6.319600,-6.418400,-1.513653,6.660461,3.307723,4.989216,-1.297790,5.476853,-2.105396,-6.046554,-9.672481,8.294462,-3.654004,4.031414,6.615619,4.617355,-2.298471,-9.848323,-3.972191,-0.342771,-7.191156,7.394347,7.941835,-9.996808,9.393634,5.583480,2.137105,-6.119055,-5.097215,2.063591,3.181127,5.771206,-6.753885,1.690896,2.593251,-8.848464,3.694312,-3.485696,0.331000,-5.221934,1.195756,-1.541195,-4.013368,8.808872,-2.301261,-4.399155,2.721466,9.184569,0.405555,-9.568559,-6.212912,-2.867548,-3.653986,7.422048,-3.066403,-2.552413,5.415338,-3.767566,2.061042,-7.640648,-0.539292,-2.458591,3.736336,-6.666251,-2.469144,9.848055,9.624370,-6.296272,7.645623,1.100833,-2.289335,9.247503,-5.908787,8.649701,8.225846,3.009502,8.652191,0.117409,-7.993997,5.024587,-7.562393,2.587179,4.452667,-2.481159,9.107046,-6.228270,4.206603,-0.884389,8.463219,-0.409904,2.276801,4.457931,5.252979,5.281539,-7.735798,-7.038196,-1.576824,-6.822890,1.083560,-4.859754,6.266237,-3.119466,-0.814222,-7.211856,8.303919,2.360719,2.772215,4.043105,5.770787,-6.417590,0.094949,1.516134,-7.642885,7.856473,-9.531407,6.780956,-3.820686,-4.899020,-7.141371,2.597180,4.782306,-0.858991,1.427409,6.406118,5.029462,-9.790317,-6.748598,-1.851809,4.623391,3.000971,1.136971,7.103267,-2.810921,-7.442809,6.606241,-7.552217,-8.094623,6.504927,-3.991017,3.776604], dtype = "float64")#candidate|722|(154,)|const|float64
call_721 = relay.TupleGetItem(func_711_call(relay.reshape(const_722.astype('float64'), [11, 14, 1])), 0)
call_723 = relay.TupleGetItem(func_713_call(relay.reshape(const_722.astype('float64'), [11, 14, 1])), 0)
bop_750 = relay.bitwise_xor(uop_719.astype('uint16'), relay.reshape(var_718.astype('uint16'), relay.shape_of(uop_719))) # shape=(11, 9, 3)
output = relay.Tuple([call_721,const_722,bop_750,])
output2 = relay.Tuple([call_723,const_722,bop_750,])
func_755 = relay.Function([var_718,], output)
mod['func_755'] = func_755
mod = relay.transform.InferType()(mod)
mutated_mod['func_755'] = func_755
mutated_mod = relay.transform.InferType()(mutated_mod)
var_756 = relay.var("var_756", dtype = "float32", shape = (11, 9, 3))#candidate|756|(11, 9, 3)|var|float32
func_755_call = mutated_mod.get_global_var('func_755')
call_757 = func_755_call(var_756)
output = call_757
func_758 = relay.Function([var_756], output)
mutated_mod['func_758'] = func_758
mutated_mod = relay.transform.InferType()(mutated_mod)
var_787 = relay.var("var_787", dtype = "int32", shape = (2, 16, 16))#candidate|787|(2, 16, 16)|var|int32
var_788 = relay.var("var_788", dtype = "int32", shape = (2, 16, 16))#candidate|788|(2, 16, 16)|var|int32
bop_789 = relay.bitwise_xor(var_787.astype('int32'), relay.reshape(var_788.astype('int32'), relay.shape_of(var_787))) # shape=(2, 16, 16)
output = relay.Tuple([bop_789,])
output2 = relay.Tuple([bop_789,])
func_800 = relay.Function([var_787,var_788,], output)
mod['func_800'] = func_800
mod = relay.transform.InferType()(mod)
var_801 = relay.var("var_801", dtype = "int32", shape = (2, 16, 16))#candidate|801|(2, 16, 16)|var|int32
var_802 = relay.var("var_802", dtype = "int32", shape = (2, 16, 16))#candidate|802|(2, 16, 16)|var|int32
output = func_800(var_801,var_802,)
func_803 = relay.Function([var_801,var_802,], output)
mutated_mod['func_803'] = func_803
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1274 = relay.const(4, dtype = "uint64")#candidate|1274|()|const|uint64
var_1275 = relay.var("var_1275", dtype = "uint64", shape = (16, 8, 6))#candidate|1275|(16, 8, 6)|var|uint64
bop_1276 = relay.bitwise_xor(const_1274.astype('uint64'), var_1275.astype('uint64')) # shape=(16, 8, 6)
output = bop_1276
output2 = bop_1276
func_1283 = relay.Function([var_1275,], output)
mod['func_1283'] = func_1283
mod = relay.transform.InferType()(mod)
var_1284 = relay.var("var_1284", dtype = "uint64", shape = (16, 8, 6))#candidate|1284|(16, 8, 6)|var|uint64
output = func_1283(var_1284)
func_1285 = relay.Function([var_1284], output)
mutated_mod['func_1285'] = func_1285
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1603 = relay.const([[[-6.329349,4.437595,4.748487,1.997652,-2.100856,1.162413,1.595893,-9.331542,3.718551,-8.908840],[3.060463,0.767861,-2.865777,0.425704,-7.787532,-7.773228,-8.308524,-6.179551,9.207049,6.479667],[-6.769496,-9.388112,-4.814239,2.468231,9.168231,-8.662545,-5.087174,6.429100,1.310396,-8.251512],[8.529037,-9.380726,-3.573154,2.861305,1.045455,7.430033,2.523622,1.531218,6.811531,6.435796],[8.522251,1.610906,5.747291,-5.545164,-8.609022,5.112455,2.010684,2.112931,-8.314208,7.901603],[8.588992,4.329281,2.239772,-9.199677,8.188594,0.249140,-8.305417,3.515891,9.571669,-6.183033],[-0.932814,-4.586997,0.519078,7.330473,-4.291222,2.149399,1.126603,2.221477,-1.404393,2.171326],[7.676210,-3.647417,-0.086872,-1.661134,3.072506,9.075438,-0.096314,7.206210,3.374153,3.165076],[-8.473508,-2.698361,-0.613822,-7.209553,2.459392,-0.198721,-1.609782,-8.578948,-2.484184,2.532423],[5.772203,1.491177,-7.560361,-5.997875,8.426476,5.953892,-2.152958,-5.077887,9.982637,5.025184],[-3.421714,-3.626229,-3.803241,2.788684,6.511740,-5.604897,4.712040,-4.769440,5.739809,-4.312761]],[[-2.394682,-9.948465,5.835298,9.158217,3.006286,5.147499,8.535123,-8.314524,0.374897,-8.603472],[-5.705811,3.487212,8.292137,1.322224,-6.206188,6.586466,-9.154856,-5.773983,-7.011501,-7.559206],[-2.868986,-2.949544,9.397189,-3.944858,-1.129533,2.586542,7.313189,8.372609,-2.741651,4.976219],[-6.767923,-3.149033,-6.893881,-6.671241,-9.093020,-8.082829,-7.567186,-9.240098,-3.506344,-5.122219],[-9.842017,0.780390,1.965931,-6.606706,-9.539725,-3.343719,-4.229769,4.979465,2.697073,-6.435733],[-6.663986,3.883202,1.198798,5.199686,-4.937188,-7.820703,7.729684,-4.057405,-5.112063,0.202752],[8.721659,5.174455,-5.024603,-5.453045,-8.813332,0.442370,-1.385144,-8.562418,4.603160,7.900285],[3.019581,-3.489233,2.310760,0.928397,0.900757,-6.596206,3.641457,-7.463929,-0.918324,6.874025],[0.375114,-1.605357,4.545450,2.363274,-1.377436,-2.178729,3.657150,-6.983475,-9.450133,-3.151047],[-3.829056,-0.462569,1.206668,1.642341,9.695641,-5.009783,-9.715101,-7.456937,9.780335,-5.450840],[-5.627177,-9.120108,9.305130,5.198036,-4.030536,9.730827,-9.564897,-8.963314,-8.304003,-0.863446]],[[5.346706,1.789075,3.644839,0.340565,1.690073,-2.690960,2.762497,8.028131,7.197252,-4.296227],[4.768540,8.374471,4.671879,0.793880,7.366144,0.608965,-7.355184,-8.081775,1.295368,6.348499],[1.466484,-2.452075,-9.595903,0.261447,-7.099228,1.927947,0.618410,-9.625880,0.343475,2.610710],[6.042897,1.418926,1.386347,5.333105,6.759732,7.579096,-1.152634,4.658707,-8.031375,-6.847279],[-7.632600,-9.444481,-2.219203,-3.942156,-8.381270,9.621331,1.506224,1.911288,-2.594915,7.316710],[8.325618,5.605828,-2.026201,-6.088959,3.418567,-2.320739,8.383546,-1.356813,5.600073,2.440388],[-9.345690,8.206143,2.712541,-2.024917,7.434754,7.465415,-5.862683,-1.659661,-0.736499,1.063501],[0.632460,2.652170,-1.130164,8.961791,5.961345,1.918984,6.865417,9.933367,-2.231772,-2.055679],[7.256700,-9.119565,-2.156785,-4.801641,-2.116507,7.529441,9.046281,-0.162171,-5.077960,9.359122],[-9.664795,8.018670,9.540053,-5.704496,-2.316940,6.194272,-4.546099,4.555552,-1.321450,5.389541],[-9.360938,3.608499,-1.538107,3.287954,3.910066,-8.913466,-0.716201,3.504082,-6.164467,6.265805]],[[-8.059553,-9.550865,-9.249847,-8.931833,7.896804,8.426892,-9.499938,-5.999276,-3.997671,5.698988],[-0.534496,8.893352,1.394864,7.464192,-3.691772,-1.070359,1.511170,-1.948783,-3.133408,4.204798],[-3.594765,6.625330,9.964743,9.046441,-0.969312,2.075588,-2.961690,5.709346,9.649795,3.736592],[3.754356,-1.972691,-3.710088,-8.715306,5.339958,7.664691,9.272747,-1.396374,-0.249517,-8.933606],[-5.540481,9.366600,1.671378,-3.626164,7.380074,-0.963441,7.039186,-8.117868,6.141563,4.579033],[-6.034675,3.958734,5.751479,-0.867430,4.675659,-5.413651,-1.732439,8.726942,-6.492625,-6.786452],[2.882200,-5.651570,3.626932,9.761471,-6.307806,-7.795862,8.479376,-0.697420,1.476257,-3.617191],[6.891873,7.843268,-5.977682,8.688097,-4.215705,0.950008,1.412056,9.778533,-8.834535,1.176158],[5.078071,9.135276,0.281482,3.177832,-5.826043,-2.886928,5.049640,3.032591,-0.502914,-5.234509],[-1.222065,-7.211135,-9.662803,-5.890044,-9.511267,3.930346,3.840627,-1.620660,-3.904267,-3.868818],[7.216041,-9.282578,-4.541899,7.126326,4.161452,0.844924,4.980396,5.344758,8.416260,-3.253217]],[[0.299902,6.527133,-7.583764,-1.083232,-9.036539,2.986820,0.884395,-9.044660,5.297923,-4.313212],[0.405668,-4.428044,9.266718,-1.310878,2.294949,0.345190,-6.364004,-1.758098,-3.811722,0.517640],[9.772321,1.190463,1.698190,-8.889556,1.112483,3.445248,-8.739078,4.817108,6.580402,9.043660],[-1.354563,9.701975,7.393522,9.835786,-5.113878,-5.085752,2.507165,-8.261578,6.602745,5.306732],[6.434277,-5.321876,-3.156021,-4.869997,4.656538,-6.960983,-3.173718,1.888596,1.923164,2.823072],[9.105840,8.125785,0.414218,6.189823,-8.230197,5.444687,1.969799,-4.273157,9.129663,3.242752],[-9.100539,-4.660711,-4.031441,-0.555162,-6.462044,1.682715,-3.535582,-5.650751,9.553772,-5.791233],[-3.859489,1.713115,8.161476,4.142506,-7.579434,-3.350195,3.333078,4.613951,-5.176604,1.059714],[-7.455661,-4.391586,-4.556819,-4.840270,5.445253,7.605984,5.476152,2.447291,-7.700424,7.605102],[-4.294213,3.007171,6.104684,2.151026,3.358573,-7.615087,3.107197,-2.233178,-7.768018,9.321282],[5.322994,9.594432,-6.022326,-1.242146,-5.272737,4.569816,9.269826,-2.662863,-9.937828,-5.918411]],[[-5.473628,2.987258,6.917528,5.518068,-6.153811,4.266577,-7.067227,-3.340657,-8.449449,2.745889],[6.542870,4.114763,-0.489074,7.656435,0.143160,-5.410694,-6.241932,6.840289,4.146302,4.110323],[-1.893242,9.850956,-7.823330,9.274698,-5.956826,9.451661,0.136179,-1.400863,-0.055413,-1.701083],[1.452750,1.556215,-8.824121,-5.217131,-7.142786,-6.698677,-3.658773,1.066806,2.951216,0.261069],[5.384321,5.266542,4.534890,-4.488398,9.549469,9.049574,2.493143,4.531576,-1.314675,3.604656],[7.412584,5.569700,-9.526130,-0.476846,5.890961,5.479105,-5.319741,6.277993,3.773193,9.957299],[8.603966,0.229410,-2.835285,-8.486382,-9.504934,9.898954,2.870699,-0.709756,4.005290,-0.594248],[-3.687929,9.714176,-9.055465,7.059238,9.709243,5.721278,1.196447,8.273021,0.212274,-9.119026],[-4.216419,2.240786,-5.900275,6.232048,9.335711,-5.752670,9.360426,-7.869434,0.911407,9.943783],[8.514789,6.704642,-8.700746,-6.272684,-3.358390,2.269403,-6.891776,2.153095,-4.258746,-3.171568],[-2.582223,-4.305120,-0.011653,0.694257,-9.004955,-3.327489,6.816241,-5.149671,9.979028,8.073437]],[[-8.768235,-9.548851,-5.628423,0.634503,-2.872232,-9.221527,9.129790,-3.410393,1.381309,5.199777],[5.720570,1.336115,6.929612,-9.408001,-3.812499,-8.908148,-6.403508,6.762608,-8.793022,-5.526800],[-5.555756,1.302318,8.818433,-0.633081,-4.813576,-8.848600,2.228708,-6.818397,7.861960,5.349811],[6.143121,-2.886905,-8.451984,-6.226049,4.168661,6.778419,1.680228,7.684122,1.531677,4.618717],[1.126984,5.119932,-1.872293,8.445221,-2.323865,6.509233,-3.527321,1.710554,-6.684580,-9.041762],[-4.308288,1.688562,-8.105311,-6.211360,-5.920937,3.805035,6.886624,1.936644,4.774577,-3.941122],[6.564488,5.230500,5.457179,7.043550,-3.799528,7.161537,3.130664,-2.561659,2.051219,6.631639],[-0.648782,8.710010,9.373402,3.371772,8.623373,-9.583214,-6.983774,9.610579,5.063034,2.891270],[-8.746218,-8.036145,2.883300,8.367337,-6.799694,2.444532,-1.546328,-4.911628,9.068732,-6.774694],[7.624256,0.216628,-4.333692,-5.006307,8.223902,2.495604,-0.051933,-7.878885,-3.140137,1.069268],[-9.739916,8.900217,8.782450,4.821066,-3.863193,-9.394447,-1.352512,8.733421,-1.184617,-8.238035]],[[8.516127,5.608101,-8.799718,5.320877,1.127622,5.403393,2.884729,-4.312220,-2.917702,6.222336],[1.148225,7.225425,-2.689904,-0.929538,-1.728989,-6.047186,-8.737489,6.364236,2.413795,4.780588],[1.676182,2.201679,-9.860921,-6.462775,0.464605,8.747871,6.792421,-9.612300,5.602079,-9.351229],[-5.107494,2.006030,-0.471128,3.182651,6.024435,-4.192501,1.319475,-6.415880,-7.462475,-4.865766],[-4.663315,-2.843456,-0.906721,3.840236,-0.648734,1.498157,9.432287,6.224965,-2.598985,7.521632],[-2.009523,-8.594861,8.719840,7.511625,8.111099,0.586357,0.210710,5.360109,3.846975,1.356695],[-3.142251,-7.178414,7.530634,7.183336,-9.258149,8.375085,4.901333,-3.325734,-9.781881,-3.597382],[4.062675,-1.484668,9.337915,0.379332,-8.303946,-2.462208,3.886344,-7.165857,3.343927,-8.928863],[3.995789,-4.746002,-5.536130,6.961546,-5.941997,-7.495003,-4.755068,-4.577436,1.656642,-9.129007],[-1.269581,-2.137388,6.201941,-7.327031,3.710929,-1.039608,-6.455180,6.848328,2.128437,-5.737653],[-1.994237,1.399699,5.351547,-7.943073,6.727598,-0.247872,-7.135280,-2.799675,-2.633499,-4.590101]],[[9.032426,-3.303724,7.093790,-2.646597,-3.122983,-7.389714,-0.338843,9.386644,5.923516,-0.092507],[-0.580783,-6.856847,5.435156,-0.834247,6.846915,0.478369,9.663540,-8.797746,2.484917,0.984410],[4.845198,-7.698956,-6.901789,8.985684,-6.336280,-6.330998,7.129106,4.093392,8.874487,-5.250410],[-1.457230,-9.243023,4.575522,-8.446757,3.243257,-3.991994,0.993022,-9.951136,4.921432,1.850963],[9.543912,-0.041707,-4.140101,-7.128449,-2.273909,-4.562674,-3.217290,-6.525818,7.955658,6.241399],[6.332996,-9.658878,-3.472909,-8.962807,-4.231442,6.910346,0.093184,-3.953474,5.487997,-6.619346],[1.466071,-6.340384,6.445495,8.642323,4.136811,8.806563,8.962281,1.827532,1.797604,3.984943],[5.662120,6.128533,-5.760221,-5.191394,-0.675700,2.514803,2.529384,-4.446949,4.673945,-6.765193],[-7.826852,7.496072,0.425582,1.948713,-0.152179,-0.821309,-1.684718,-5.819918,-2.642772,-9.104604],[9.988834,-4.054759,-8.548659,8.904914,7.081683,-7.338376,-9.388240,8.832596,3.855693,-7.664993],[7.302947,6.671012,-6.308307,-6.735403,2.951109,-5.368998,8.502774,1.960569,0.150217,8.220285]],[[-9.861617,-8.138937,1.596875,-0.246770,-0.706193,-6.698251,-0.700529,3.561501,0.508454,6.377080],[6.241121,-1.516948,-1.728022,-4.315967,-5.278078,-9.904152,6.463149,5.820407,-9.042250,7.374901],[-7.954347,-8.699965,-9.834598,-2.133120,-4.177191,-3.064737,4.874176,-5.546251,-3.489929,9.721208],[-9.881847,-9.771024,-3.683786,-4.492721,3.767983,4.012176,0.886570,-3.814807,-1.174787,5.014105],[-6.342053,-2.656258,-2.924799,-4.309809,6.829880,-7.413399,6.437274,1.980014,-2.906517,7.718546],[-8.788498,-2.768544,-7.844149,6.113979,4.657071,7.474080,-5.547864,1.311877,-9.860481,0.938618],[9.095310,2.835743,-9.829889,-2.945659,-2.451187,8.281024,-4.260114,-7.964074,-7.706063,8.527699],[0.808649,-1.872118,-5.504588,-5.093454,6.221660,-2.580626,5.325350,4.195804,7.238616,3.010000],[9.150596,-6.979847,-8.678241,6.348934,-5.088395,-9.469395,5.044293,2.774780,-5.798256,3.616937],[7.120558,-9.553699,6.689031,8.531617,7.055067,5.033531,6.439256,-0.040964,-8.761752,-5.016924],[1.067590,-7.751807,2.467218,-1.880899,-0.133150,1.021546,-9.125056,-2.307936,-0.972536,-5.768557]],[[-5.418232,-5.866046,4.307469,0.212439,-4.842551,-5.592562,-7.495531,9.909264,-0.604976,2.428593],[0.496597,-5.374048,-3.916579,3.313272,-9.175645,-4.478564,5.409647,-9.560555,-7.187942,9.510725],[-9.909722,-8.165331,-8.923146,-2.015649,6.596837,2.132309,6.122475,-9.525688,3.544829,-9.969360],[3.171757,-6.892062,9.158805,5.984241,8.805494,8.764688,-8.126518,-0.163265,7.744806,9.325631],[0.457517,3.987613,9.557618,-0.227103,7.769400,-9.536597,-0.488354,-5.248138,-7.627363,3.260251],[-4.508359,7.030992,-9.223251,1.850277,-0.943597,-7.416304,-5.386219,-3.676529,-4.379408,-9.429800],[5.778018,-2.069214,8.025751,-8.175232,8.570500,7.898149,-8.317646,-5.835121,9.068259,-5.677650],[8.362071,0.005838,-5.617602,4.324347,-0.310447,-8.157167,-9.755601,9.854136,1.547349,2.904411],[3.337447,-0.489061,0.048957,-3.055466,2.423609,4.843083,-8.870718,-1.568644,-2.999792,9.028822],[6.520542,7.289752,-7.820767,5.193628,-5.701403,-6.658330,-5.589222,6.426909,-2.567237,-6.120815],[-6.790877,-8.743912,-8.070289,3.853567,-9.773996,0.237108,-1.411549,2.800443,-9.614333,3.498780]],[[-5.277763,-2.422026,-0.677974,-4.862518,-3.984968,-0.653746,-6.075517,3.693260,2.839697,-8.334474],[1.786364,4.217133,-0.582292,-6.726675,-6.331281,5.197740,-9.699813,8.735002,4.130779,2.418442],[-9.039700,-6.405117,-2.604026,3.898996,-3.519052,5.617179,2.699635,4.435740,7.972527,-9.141585],[6.649599,-4.591948,-2.079147,3.972273,-9.196634,3.706869,-1.102282,4.567836,7.062339,0.011425],[-7.966986,6.523674,9.314381,4.347688,-7.711882,-3.364925,4.263552,2.710293,-2.675391,9.602553],[7.537823,8.204766,-1.460093,-6.093038,8.856151,3.281349,-4.843244,-9.945886,-8.273461,8.615719],[8.226642,-3.729934,-0.231313,-9.139706,-5.086791,3.096611,-8.785355,-1.606235,-6.077587,-8.991062],[-8.660858,9.595708,-3.869451,-3.775746,-0.050472,-9.500446,-2.795845,-4.812775,-9.164045,3.614626],[9.675796,8.768403,-9.503857,-2.051620,-5.167965,-1.895154,9.870035,-1.585344,5.667757,-0.536184],[-5.654176,-0.621441,7.060827,2.331940,0.495517,6.967124,-3.204846,3.786710,-4.961129,2.685636],[-9.586797,3.359331,2.265029,-2.590724,-0.750008,-2.305974,8.511843,2.483434,-9.306070,-8.899045]]], dtype = "float64")#candidate|1603|(12, 11, 10)|const|float64
var_1604 = relay.var("var_1604", dtype = "float64", shape = (12, 11, 10))#candidate|1604|(12, 11, 10)|var|float64
bop_1605 = relay.maximum(const_1603.astype('float64'), relay.reshape(var_1604.astype('float64'), relay.shape_of(const_1603))) # shape=(12, 11, 10)
func_711_call = mod.get_global_var('func_711')
func_713_call = mutated_mod.get_global_var('func_713')
var_1609 = relay.var("var_1609", dtype = "float64", shape = (22, 7))#candidate|1609|(22, 7)|var|float64
call_1608 = relay.TupleGetItem(func_711_call(relay.reshape(var_1609.astype('float64'), [11, 14, 1])), 0)
call_1610 = relay.TupleGetItem(func_713_call(relay.reshape(var_1609.astype('float64'), [11, 14, 1])), 0)
uop_1612 = relay.atanh(var_1609.astype('float32')) # shape=(22, 7)
var_1618 = relay.var("var_1618", dtype = "float32", shape = (22, 7))#candidate|1618|(22, 7)|var|float32
bop_1619 = relay.bitwise_or(uop_1612.astype('uint64'), relay.reshape(var_1618.astype('uint64'), relay.shape_of(uop_1612))) # shape=(22, 7)
output = relay.Tuple([bop_1605,call_1608,bop_1619,])
output2 = relay.Tuple([bop_1605,call_1610,bop_1619,])
func_1636 = relay.Function([var_1604,var_1609,var_1618,], output)
mod['func_1636'] = func_1636
mod = relay.transform.InferType()(mod)
var_1637 = relay.var("var_1637", dtype = "float64", shape = (12, 11, 10))#candidate|1637|(12, 11, 10)|var|float64
var_1638 = relay.var("var_1638", dtype = "float64", shape = (22, 7))#candidate|1638|(22, 7)|var|float64
var_1639 = relay.var("var_1639", dtype = "float32", shape = (22, 7))#candidate|1639|(22, 7)|var|float32
output = func_1636(var_1637,var_1638,var_1639,)
func_1640 = relay.Function([var_1637,var_1638,var_1639,], output)
mutated_mod['func_1640'] = func_1640
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1822 = relay.var("var_1822", dtype = "float64", shape = (6, 6, 1))#candidate|1822|(6, 6, 1)|var|float64
const_1823 = relay.const([[[9.776105,0.090505,4.994047,-8.548195,-8.983519,-4.814264],[-4.250393,3.306530,4.535116,-7.107114,1.527357,3.651475],[-5.812391,-0.855492,3.971456,-4.566030,4.614888,-1.884586],[-9.394979,-6.717458,-0.007694,1.211395,-1.944389,-6.813967],[-4.000963,7.586783,9.590900,-8.558228,-8.892739,3.712299],[-4.963943,-3.238903,3.818703,-4.335308,-9.735869,-8.406030]],[[2.235715,9.968167,2.001166,1.385993,-7.599027,4.269262],[-0.274236,8.684658,-3.177515,-0.740132,2.295221,8.270011],[5.923253,-0.168271,-8.247707,-6.377030,-6.904805,7.511511],[-6.201246,3.737659,-6.581442,-3.923332,-1.705636,2.738780],[-8.297181,0.181165,-2.017391,1.260101,6.053769,1.031421],[-5.575948,5.302496,2.335051,-0.778178,-0.358556,5.948199]],[[1.330501,7.209014,5.818412,-1.785191,-2.459796,0.306543],[-4.320630,-6.178034,-1.085991,-0.277323,1.073474,0.120911],[-6.428971,-4.812059,7.146828,5.247028,-5.488044,-9.647137],[4.537249,0.958167,7.201605,3.181434,1.873745,5.173649],[8.591082,9.238373,5.604063,-9.523816,-5.462330,-0.342806],[-3.063884,-7.585305,-4.181811,-6.328272,-0.547286,1.692065]],[[8.451395,1.073897,-5.693391,-4.415453,-0.993866,9.257442],[3.836837,-8.772596,-8.621158,3.437956,-5.652469,0.774761],[1.368584,7.117087,-1.146532,2.759644,1.124744,-4.555773],[4.391834,6.629093,-4.698540,4.028345,-6.990412,-8.576544],[5.263746,5.332055,4.983748,-2.904389,0.257625,-3.431908],[6.269802,1.729047,3.348536,-4.682945,-7.295686,-2.443286]],[[-2.529462,-2.572995,7.624424,-9.353873,5.686052,5.744620],[-5.325176,1.628704,9.916064,9.659064,2.658737,9.916523],[8.736891,7.395899,0.929239,-6.060569,6.245628,7.812003],[8.025618,7.460252,6.462705,-2.444839,0.789664,5.310176],[9.410128,0.163327,6.579347,4.950237,-3.895291,8.177676],[6.795488,-8.519554,-7.661927,9.559967,3.639025,-0.692565]],[[7.672813,-4.260497,-1.400773,1.460504,9.340891,-4.206648],[6.411152,8.938950,-5.247903,-4.553107,-2.070683,4.033785],[-6.824772,2.495194,6.310151,-5.700878,-1.713368,7.934324],[4.710171,-5.672297,4.671787,1.540293,7.166459,7.072343],[3.923666,1.740173,-6.308679,0.452693,5.475944,-6.580227],[-8.305790,-5.252871,4.852534,-6.726151,-7.404940,1.757388]]], dtype = "float64")#candidate|1823|(6, 6, 6)|const|float64
bop_1824 = relay.divide(var_1822.astype('float64'), const_1823.astype('float64')) # shape=(6, 6, 6)
output = bop_1824
output2 = bop_1824
func_1847 = relay.Function([var_1822,], output)
mod['func_1847'] = func_1847
mod = relay.transform.InferType()(mod)
mutated_mod['func_1847'] = func_1847
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1848 = relay.var("var_1848", dtype = "float64", shape = (6, 6, 1))#candidate|1848|(6, 6, 1)|var|float64
func_1847_call = mutated_mod.get_global_var('func_1847')
call_1849 = func_1847_call(var_1848)
output = call_1849
func_1850 = relay.Function([var_1848], output)
mutated_mod['func_1850'] = func_1850
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2814 = relay.var("var_2814", dtype = "uint32", shape = (15, 7, 1))#candidate|2814|(15, 7, 1)|var|uint32
var_2815 = relay.var("var_2815", dtype = "uint32", shape = (15, 7, 1))#candidate|2815|(15, 7, 1)|var|uint32
bop_2816 = relay.minimum(var_2814.astype('uint32'), relay.reshape(var_2815.astype('uint32'), relay.shape_of(var_2814))) # shape=(15, 7, 1)
func_426_call = mod.get_global_var('func_426')
func_429_call = mutated_mod.get_global_var('func_429')
const_2825 = relay.const([0.143494,9.069007,-1.124403,2.929304,-3.963038,-2.983120,-2.291944,-8.131861,-2.317012,8.727921,-2.352557,-1.363806,-4.470843,0.433901,-6.090345,-0.553033,-0.615593,1.734772,4.388768,-1.408566,8.376015,9.095374,-5.003798,-0.048053,7.616060,9.733533,0.786849,1.845293,7.832617,8.643711,2.383697,3.971811,2.669734,2.709962,3.771198,8.217436,-2.590248,0.745595,-1.023927,6.227151,3.560569,6.822713,-2.862728,2.995082,-6.660608,8.952004,-2.906207,5.396024,-5.032426,-1.827177,3.658377,-9.678662,5.801319,-0.187247,7.816375,1.190935,5.058098,7.079614,7.747367,4.080577,4.646988,3.250878,8.893104,2.288594,7.363515,7.910548,4.835595,-5.178055,0.078851,2.743744,-4.436574,-4.919243,8.510024,-0.949682,-3.744751,-2.115028,-7.750231,1.042988,1.012273,3.487854,-5.625192,3.383732,-9.904761,-9.317738,-6.756920,-2.170539,-8.277107,-5.344451,-4.544766,-0.217382,-1.257147,-5.181141,8.829918,-6.625515,6.707238,2.210448,7.052549,5.888664,9.363454,4.688820,8.828300,-0.971861,-8.453879,-6.959028,3.895573,4.623990,7.728185,9.614473,4.465397,0.106862,9.075329,2.840567,9.780993,3.505632,-6.241627,9.586167,-2.974597,-5.902620,-5.679674,-3.708956,0.052188,-1.365772,9.127097,8.837705,3.652023,4.003358,-0.596145,6.151602,-3.600089,-0.990814,-6.002687,-0.676281,0.409315,8.198491,4.853575,-8.049810,-4.888732,-5.791176,-6.232179,-3.753438,-6.652803,-9.430740,-2.879653,1.888770,-1.212298,-1.876923,2.715023,-7.684840,7.018134,-5.274155,3.676619,2.864043,8.728533,8.743503,-1.887008,-0.298971,-3.588710,6.296173,-5.590429,2.530145,-0.485668,4.913487,-0.914103,-9.752850,-5.223142,0.382563,3.308825,4.153868,-6.693241,-2.045114,-1.696299,1.143678,-7.462562,-0.370624,0.667533,9.559770,8.732035,7.948000,-3.811453,8.787768,5.197172,-4.935353,9.945292,4.915653,8.615569,-6.682368,-6.095910,-5.785743,-0.886583,-4.555226,-4.824606,8.650537,-5.301338,4.418247,3.940406,8.458442,3.528257,1.914443,7.715269,-7.922295,4.462564,8.218414,4.447348,-8.993361,-1.566175,2.725507,-8.955217,-0.548599,-3.321816,-4.517660,-8.640313,-2.789376,5.093987,-8.445353,-1.247092,4.428732,-6.998387,-0.450627,-4.060331,5.910052,7.691219,6.722992,-7.178229,-3.187257,-4.542700,-9.895098,8.006270,-1.843082,-9.826298,0.914262,-4.705159,-6.642621,8.327487,-9.145377,6.428071,-4.941240,-2.258222,1.579780,1.810088,2.969909,-4.434346,-4.663989,-1.291362,-8.040432,-7.218189,-9.495231,2.387942,4.130791,8.535790,-7.092668,3.860335,8.779400,0.627564,-7.502393,-7.000248,-0.742524,7.990882,-0.032957,3.301545,6.488908,4.915442,-2.310348,-5.877378,8.748965,8.191865,0.880531,3.760207,7.318176,7.398575,2.115026,2.074022,-1.222944,0.209886,5.086775,2.645866,-9.015598,-5.201296,7.218471,-5.474472,-1.003877,0.870673,-0.325026,-6.868528,4.934122,-8.112327,6.078914,-6.670385,-2.706032,2.739669,-2.688801,-4.439885,5.975582,-9.298906,-5.007793,8.179487,-1.180937,-9.938028,6.986890,-0.834966,-2.827595,-6.793018,2.353374,6.854542,-2.992527,4.629378,2.476160,2.691224,-5.004353,-1.510471,-6.659560,2.879574,-1.211130,2.608998,-0.762774,-0.941731,-0.286945,-9.737535,1.833318,-3.978463,-5.719998,-1.617949,2.988591,-2.484255,6.186800,-2.752608,7.985779,6.440394,9.307476,4.766896,-9.098901,-6.828765,-9.760948,-2.897195,-0.658270,0.096776,-6.997295,8.317465,8.337019,6.077964,-9.322787,-9.516039,0.250241,6.491109,3.654633,-5.362810,-5.734763,-0.144684,-2.800269,-8.071397,8.128846,6.186589,8.810917,-0.696910,6.033625,-9.759448,1.849780,3.221414,-1.199908,-2.075340,5.760151,3.519723,0.104769,9.071816,5.650627,3.646391,2.062250,-8.098090,7.373026,-9.569483,3.105833,-9.965172,5.696700,0.789372,-3.502645,1.460424,2.395271,0.240994,7.902943,-3.685741,-4.338092,2.799860,-0.835461,-0.787321,-7.344833,-9.683686,3.261468,8.602409,-4.971408,-9.816058,-5.592916,6.069626,3.405281,-7.414924,2.083553,5.548293,-2.081579,7.052216,-2.418745,-8.204998,-5.416309,-4.433691,7.189213,7.629760,2.978732,-9.070609,2.803835,8.197479,-2.991910,7.897818,-3.698838,2.447401,-5.773063,8.355667,8.648736,9.156762,9.064985,9.828634,5.872934,-0.146567,0.789155,-6.982795,-5.696991,3.672904,-1.803383,-4.354704,6.611194,3.623672,8.105370,-8.881060,4.876629,-5.052068,-0.480216,5.053543,-0.861893,-0.709051,2.305006,6.335212,-7.125365,-0.219642,7.762795,7.413406,9.043184,-0.306509,6.555591,2.247532,7.084823,7.196998,6.024900,2.970414,1.292014,0.339944,0.222111,-6.622849,0.888222,-7.950120,-5.291145,3.716811,-4.034831,-7.502431,1.241260,-9.835808,2.464953,-3.202023,8.916824,6.981751,4.743130,0.671771,7.461393,-4.910809,-0.169355,1.627243,-0.423661,-4.432056,4.955424,-6.761855,-7.188707,4.240805,4.786974,5.327029,4.109107,2.075528,6.430596,9.554036,-2.811095,-9.918743,-7.584824,6.094441,-6.044571,-8.082949,-5.780463,-9.596740,8.646712,2.297626,6.499622,4.575235,4.789473,5.468510,6.094599,0.894887,-7.412688,9.468972,3.581719,1.075443,-5.759380,1.911506,2.581473,-6.778083,3.816680,0.076575,-9.722425,-5.281883,4.461085,-8.094064,-9.147308,-9.504370,1.245331,-8.734971,3.771753,3.643334,7.852819,-3.085534,-7.951977,8.232153,-8.688927,4.560490,-2.904638,-4.831878,8.998644,-7.521756,-8.373988,1.798434,-0.907107,1.532387,7.919047,-6.659868,2.094907,9.416362,3.108141,-8.865439,2.955786,-6.666607,7.779057,4.925467,7.152956,-9.820121,1.235983,-5.442865,6.831418,8.520045,-4.222658,7.415612,-8.569164,7.700963,-8.793545,-4.622448,8.066253,4.867497,5.034475,-1.217211,-5.736638], dtype = "float64")#candidate|2825|(560,)|const|float64
const_2826 = relay.const([-4.432777,6.510868,-4.426204,8.982645,9.589484,2.463462,9.854300,-9.032531,3.562372,-6.330186,-3.588052,-8.363049,-9.613982,-9.278455,-8.496114,5.734359,-6.600970,-8.164989,-4.806213,6.729526,4.956003,6.386339,-0.362765,-2.885932,4.541351,-2.109759,9.181807,-0.007849,6.949895,0.298594,6.866889,-9.489217,4.739432,8.037260,-2.677897,8.423917,9.299804,-5.438286,4.595895,0.571796,2.463108,-3.694605,-8.435017,7.436938,6.503774,2.920084,0.593011,2.714264,-4.271084,5.642827,6.114206,4.896343,6.663300,-5.442470,-7.509567,1.838056,0.139372,-4.246593,0.991382,5.424562,-7.578511,2.541385,2.293693,-9.924875,3.072548,-1.128374,6.473137,8.827158,-2.184958,8.185895,-3.562109,-6.497896,-0.635812,6.592522,-5.190863,8.919611,-2.670276,4.234670,8.298384,3.324516,7.178637,6.953302,0.138981,1.747282,-6.099328,4.760613,8.329676,-3.715181,-1.662538,3.758770,-8.313031,-0.768380,-5.738580,-6.881065,4.490789,-3.788007,-9.760497,6.899541,1.407236,8.302741,0.279958,-5.020387,-8.359410,3.639712,-2.713221,-4.510433,4.058065,3.487926,-4.136524,0.998963,-6.794302,-2.214730,3.794145,-3.877854,-6.245343,-4.750161,-8.869225,-8.034695,8.136783,-6.070969,8.657355,-6.232567,0.677550,-7.278597,-5.262925,9.145268,4.544500,9.447305,-6.756130,0.040354,7.235767,-2.454370,-6.782035,-4.847753,-8.228661,-1.192385,8.648966,-9.426969,-4.239479,-6.118619,-6.568289,1.371848,6.014003,-9.269205,4.461467,-8.999609,9.864276,-9.341708,-8.946805,7.651631,7.713093,-1.500354,1.452192,5.507291,5.578176,-3.287426,-7.514745,5.579764,-0.445473,4.852123,-0.202254,-1.862754,-3.346773,1.801410,5.903147,-2.348139,-7.330827,-4.886469,3.665028,-4.484884,8.553842,7.132084,-2.181954,-1.999186,-3.529243,-7.995892,3.620340,7.404128,-0.295651,-1.744457,3.501763,-5.137897,8.528166,7.203477,2.039986,0.217996,-1.066257,-5.480054,-9.261883,6.790613,-3.921861,7.568589,-0.773798,4.215421,4.416771,6.646233,-8.702263,1.963122,-7.246488,4.625675,-7.110110,-0.249463,8.278743,1.931411,0.779396,-6.545636,3.194979,-4.663933,-7.387162,-6.559076,7.533507,4.791523,9.588406,-3.003061,4.750003,9.582007,-9.691354,6.518285,-2.079933,7.174346,8.930893,1.033094,7.123002,4.893103,-3.487715,-8.617785,9.778926,0.388008,-3.895265,-7.422802,4.041383,2.869377,3.282329,4.528421,1.610646,-5.054231,4.050415,0.504885,6.982423,-4.093954,-2.183944,5.594133,-9.321327,5.734939,-5.521364,0.113740,2.232878,-9.675544,6.960865,7.339017,-7.103538,5.319213,5.082667,7.861079,2.192286,-1.430708,-8.217691,2.345333,7.686016,8.536598,-0.575633,6.967657,3.132378,9.128818,-2.062856,8.285918,-8.769429,-1.138302,-3.842714,-6.234180,6.693270,1.884953,-6.128125,1.122302,9.174236,-6.768369,8.560906,-3.632455,7.997327,6.891008,-8.170623,-3.390757,1.270196,-7.072732,-2.748973,-6.023773,-8.629062,6.634760,-8.360116,-3.066321,3.460676,-8.464945,-3.219261,3.629024,-0.597862,4.099341,-2.598092,9.758046,-3.583901,1.401525,-6.214864,8.380771,9.704876,8.080341,2.059030,-3.797042,-3.274878,5.621111,2.455929,-5.291798,6.441426,-6.089010,-0.589512,3.099436,4.403598,3.116794,-9.059915,-9.031643,-2.413068,-5.069679,3.187614,-9.160519,2.856047,8.368972,7.860193,-1.490068,7.765261,-5.062405,-0.151924,4.849023,-6.691443,9.169365,4.485855,-0.082015,0.386334,1.333673,8.231381,9.869825,1.069632,7.043560,-4.479446,0.602902,-6.364225,5.589171,5.919507,2.899707,-9.189214,5.288728,-8.961578,4.200148,-3.643493,2.729577,-2.088788,-3.642975,3.713335,-7.054012,8.116571,0.818447,2.572282,-7.801817,5.579483,-4.209180,-1.893808,9.985863,-4.136128,-1.398795,2.981220,-3.039788,-3.658846,4.971258,7.875731,-7.775523,0.558432,-4.184817,-4.275355,-6.611355,-3.936584,3.039635,-5.506615,-9.564539,0.230335,4.266764,-3.334525,5.417790,-7.630110,-1.837989,-1.343471,-4.008655,-1.807096,5.473397,5.889915,0.248286,-5.127730,-3.865729,9.373256,2.826869,2.977295,-5.988792,9.522481,7.755890,-0.223670,6.026074,-2.364990,2.194729,-3.637064,4.196725,-3.668355,-5.955805,-0.843766,9.146389,8.305500,-9.817737,3.853380,-7.734509,-0.326330,-9.764256,4.025875,-2.444455,0.944260,-7.774928,-2.164397,5.516567,-2.182919,5.683483,-2.895732,7.609988,-6.219386,-8.450097,-7.121370,-2.606288,-5.282025,6.884299,-4.531139,8.917032,1.775313,2.650987,-2.960473,-7.720482,-2.165486,5.169826,-5.533499,-3.304911,-4.570684,-3.760515,4.459318,-9.313140,4.702502,6.020700,0.620973,8.639337,1.525656,-2.480012,6.303039,-9.280174,-9.662342,-2.223132,-7.004020,1.055504,-8.027615,3.595999,-8.334574,4.378367,-5.421526,3.169543,-2.723059,-6.920487,-2.911079,7.728890,-0.536006,4.217302,3.688773,4.081822,1.203716,-8.383210,1.895035,8.219560,1.133423,7.113887,-5.984853,5.001466,-9.474300,-4.631695,-8.840572,-8.832881,5.787434,-5.396545,-3.577153,8.274078,-1.803217,0.852144,9.562942,-0.754376,4.947418,-6.989854,-1.074382,-8.029741,-5.125894,4.193588,-5.810076,9.095629,-7.350167,-5.116590,9.226422,-0.721574,-7.236465,1.512150,-2.967615,-5.731472,-5.098544,1.445791,6.950078,7.388918,-8.786642,-4.345292,-2.431545,5.404402,7.229585,4.598647,3.798188,7.568198,7.366273,6.507684,-1.766895,-5.349095,9.542200,8.766000,7.588653,-2.606800,-8.434173,2.853282,-3.437740,0.956162,-2.720027,-1.849399,-6.631262,5.604649,7.569295,4.479594,3.446030,-1.235976], dtype = "float32")#candidate|2826|(540,)|const|float32
call_2824 = relay.TupleGetItem(func_426_call(relay.reshape(const_2825.astype('float64'), [4, 10, 14]), relay.reshape(const_2826.astype('float32'), [540,]), ), 1)
call_2827 = relay.TupleGetItem(func_429_call(relay.reshape(const_2825.astype('float64'), [4, 10, 14]), relay.reshape(const_2826.astype('float32'), [540,]), ), 1)
output = relay.Tuple([bop_2816,call_2824,const_2825,const_2826,])
output2 = relay.Tuple([bop_2816,call_2827,const_2825,const_2826,])
func_2833 = relay.Function([var_2814,var_2815,], output)
mod['func_2833'] = func_2833
mod = relay.transform.InferType()(mod)
mutated_mod['func_2833'] = func_2833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mutated_mod.get_global_var('func_2833')
var_2835 = relay.var("var_2835", dtype = "uint32", shape = (15, 7, 1))#candidate|2835|(15, 7, 1)|var|uint32
var_2836 = relay.var("var_2836", dtype = "uint32", shape = (15, 7, 1))#candidate|2836|(15, 7, 1)|var|uint32
call_2834 = func_2833_call(var_2835,var_2836,)
output = call_2834
func_2837 = relay.Function([var_2835,var_2836,], output)
mutated_mod['func_2837'] = func_2837
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2936 = relay.const(9, dtype = "uint32")#candidate|2936|()|const|uint32
var_2937 = relay.var("var_2937", dtype = "uint32", shape = (2, 13, 16))#candidate|2937|(2, 13, 16)|var|uint32
bop_2938 = relay.maximum(const_2936.astype('uint32'), var_2937.astype('uint32')) # shape=(2, 13, 16)
output = bop_2938
output2 = bop_2938
func_2943 = relay.Function([var_2937,], output)
mod['func_2943'] = func_2943
mod = relay.transform.InferType()(mod)
mutated_mod['func_2943'] = func_2943
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2944 = relay.var("var_2944", dtype = "uint32", shape = (2, 13, 16))#candidate|2944|(2, 13, 16)|var|uint32
func_2943_call = mutated_mod.get_global_var('func_2943')
call_2945 = func_2943_call(var_2944)
output = call_2945
func_2946 = relay.Function([var_2944], output)
mutated_mod['func_2946'] = func_2946
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3869 = relay.var("var_3869", dtype = "float64", shape = (15, 3, 12))#candidate|3869|(15, 3, 12)|var|float64
uop_3870 = relay.atan(var_3869.astype('float64')) # shape=(15, 3, 12)
func_755_call = mod.get_global_var('func_755')
func_758_call = mutated_mod.get_global_var('func_758')
const_3881 = relay.const([-9.907881,-6.761310,-2.368803,2.175739,-3.021358,-6.981910,-4.954636,2.287910,1.111180,5.071145,7.371971,1.881518,3.372774,-4.707757,-5.326380,-7.671383,-9.702185,-1.283218,-3.957192,3.313395,4.167706,6.942499,-8.621251,0.486729,1.582132,-9.087542,-2.827339,-4.982028,6.527512,-9.137741,1.220458,-3.671124,-6.860502,8.084908,3.246196,8.351243,-6.387115,-0.637614,3.244811,-2.795969,-1.311894,7.864153,-1.496611,-1.794057,5.753835,9.272030,5.783318,-6.153980,-9.906201,-1.332139,-5.042490,8.391715,9.283132,9.142272,9.808674,0.833399,4.069840,2.322621,-4.815908,2.324988,-9.358329,-5.119897,-7.990865,6.758762,-4.231335,-3.432155,-6.545912,6.337887,0.679707,-6.319246,-5.626969,9.134190,7.591426,8.491777,-5.175881,4.404302,5.619759,2.265702,-4.150124,0.155213,-1.220433,1.833481,6.689074,-6.038069,-9.589830,8.223929,-3.648873,-2.434737,0.074364,9.839914,-5.941210,7.424692,4.836760,0.364904,1.981430,-1.665549,3.704505,-7.793232,5.381869,5.707626,-4.464104,-9.752941,9.467041,-4.527835,4.648868,9.914373,-7.725885,3.925835,0.543396,0.129249,5.767085,-3.591271,6.445270,0.047061,-4.525153,-1.988532,-0.640493,2.623823,4.706288,-8.354167,-7.200189,-7.797115,-2.328097,-0.014489,5.228596,4.308839,4.688370,0.720526,-8.669974,8.506362,5.478487,5.704783,9.800095,-5.515821,-6.833330,1.657523,-7.899851,1.244331,0.082680,-3.728678,4.484326,-5.141825,8.581312,-0.506920,-7.209951,-1.547268,1.263300,0.693695,6.085790,-8.270699,0.153967,-5.951117,3.300196,-3.043228,2.363346,1.382920,-8.590059,6.131513,1.741017,-0.358868,-3.654806,-5.577213,-1.108257,-4.579914,9.911196,-2.504499,-7.553827,-2.774887,-2.320209,-8.860548,0.329395,3.203859,5.725039,9.337139,-0.667560,4.499900,9.523634,-9.437478,3.227410,4.733198,9.797983,8.433118,-6.687846,-7.163143,0.206270,-1.799871,-8.725720,-6.373103,-8.940756,3.782048,2.734092,0.358354,-3.126771,4.710826,-4.500408,-7.647221,-6.516025,7.584090,3.566753,1.724422,6.523206,7.312246,7.392141,6.869290,4.483730,-1.931742,8.160490,9.505236,-0.337977,-3.177810,2.248443,-8.022838,-2.614938,-0.740296,2.917731,-3.070716,8.616173,2.138464,-4.224344,7.841706,3.637905,-5.002225,7.716403,-5.146219,-9.459098,8.920709,6.334572,0.871167,5.674039,7.149760,-7.460895,0.434782,9.005593,-0.608025,-2.050298,6.058535,-0.869207,-2.193301,-0.221830,5.153913,0.147385,-4.599215,-1.128845,6.657969,-3.395618,9.494850,-4.703593,-0.915828,0.326434,9.496713,-2.934694,2.290198,5.116572,3.875285,-9.717773,-7.209376,6.954294,-0.345077,5.716001,9.248728,-3.279141,-3.607725,-2.011265,-2.530863,8.198931,6.819648,-1.786393,-2.478798,-9.640198,2.804329,-3.011711,9.836122,4.183721,-9.823292,7.258177,-2.395824,-2.062822,-9.195308,9.526519,-8.475115,1.991896,8.325611,-3.176648,7.275227,2.612168,5.407835,-0.747268,0.733402,-9.906105,-4.526919,5.376403,0.851376,8.476161,-7.476772,-9.622225,-5.022730,-2.941067], dtype = "float32")#candidate|3881|(297,)|const|float32
call_3880 = relay.TupleGetItem(func_755_call(relay.reshape(const_3881.astype('float32'), [11, 9, 3])), 0)
call_3882 = relay.TupleGetItem(func_758_call(relay.reshape(const_3881.astype('float32'), [11, 9, 3])), 0)
uop_3884 = relay.erf(uop_3870.astype('float32')) # shape=(15, 3, 12)
func_16_call = mod.get_global_var('func_16')
func_19_call = mutated_mod.get_global_var('func_19')
call_3886 = relay.TupleGetItem(func_16_call(relay.reshape(var_3869.astype('float32'), [15, 4, 9])), 0)
call_3887 = relay.TupleGetItem(func_19_call(relay.reshape(var_3869.astype('float32'), [15, 4, 9])), 0)
output = relay.Tuple([call_3880,const_3881,uop_3884,call_3886,])
output2 = relay.Tuple([call_3882,const_3881,uop_3884,call_3887,])
func_3889 = relay.Function([var_3869,], output)
mod['func_3889'] = func_3889
mod = relay.transform.InferType()(mod)
mutated_mod['func_3889'] = func_3889
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3890 = relay.var("var_3890", dtype = "float64", shape = (15, 3, 12))#candidate|3890|(15, 3, 12)|var|float64
func_3889_call = mutated_mod.get_global_var('func_3889')
call_3891 = func_3889_call(var_3890)
output = call_3891
func_3892 = relay.Function([var_3890], output)
mutated_mod['func_3892'] = func_3892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3993 = relay.var("var_3993", dtype = "float64", shape = (6, 9, 7))#candidate|3993|(6, 9, 7)|var|float64
const_3994 = relay.const([[[-1.200337,6.845198,1.486268,3.033072,9.144878,3.332656,8.562759],[3.743104,5.996221,-5.615148,3.461787,1.120367,-3.456895,-2.865950],[9.240563,-7.239004,-3.564576,-7.532015,-8.462865,-2.206741,-5.074213],[0.270622,-2.091393,0.406332,-6.477004,6.181188,-0.553678,-2.169712],[7.101812,-5.134490,0.035629,2.163179,-5.748998,0.518964,7.363608],[-4.371138,4.165368,-9.727923,-3.437941,-4.866831,1.494562,-4.693403],[-4.690408,-6.942999,-7.226013,-7.213163,9.260588,1.898129,-9.332586],[-1.689980,9.032209,8.355548,-7.680296,-6.555489,7.172971,3.134296],[3.183791,6.229145,7.132864,6.177008,-6.451965,4.361781,2.708054]],[[5.241049,7.486023,-7.461492,-1.827222,9.652351,1.817518,6.012564],[-6.867599,7.035552,8.496340,1.680693,-2.981475,-0.757653,3.045709],[-3.443550,-0.345348,-9.074906,0.993776,-6.277430,-6.375778,-7.391435],[-2.591613,9.807550,9.544725,-8.149638,0.789491,2.731239,-8.580760],[-7.538080,1.961027,1.681150,-9.316445,7.438699,-4.054849,7.092025],[1.297833,-3.604979,8.271157,5.230105,-8.978796,2.925280,4.341842],[8.155644,-5.134636,4.546849,-1.899003,-3.916240,-9.311400,-3.092460],[6.687182,-6.191284,0.332710,-7.651447,-4.654746,1.883270,6.139531],[-5.343285,7.749806,8.478468,5.109040,1.297424,4.643649,-8.234759]],[[7.368209,-1.053777,-1.260743,-8.192248,2.582418,-8.494969,-4.079596],[-6.964749,6.595415,-1.367649,-7.057569,-8.719924,9.759550,0.229615],[1.000641,-7.507983,-1.876141,-5.953695,4.125787,-0.591507,6.051035],[-4.833152,2.234787,-1.499358,3.564079,1.219810,-0.643573,2.782549],[-2.762752,-8.546845,-6.618280,-5.032553,2.761965,8.090790,1.384906],[9.200842,5.110572,-3.569331,-6.025928,4.534405,-5.837436,6.854550],[-9.876580,-1.396515,4.687215,5.835395,4.250371,-0.307289,-5.839470],[-9.855642,6.669666,-9.266193,9.723102,1.661665,2.518122,-7.092658],[-7.487141,-4.494881,-1.919142,2.002361,9.579213,-4.822478,-6.638760]],[[5.881573,-1.357025,5.587111,1.514969,-0.705252,-9.863293,-5.583147],[-0.458609,2.630753,-4.148756,-7.327338,-1.544164,-7.302584,-7.601449],[6.363125,4.702090,6.745491,-7.735745,-3.010934,-8.326412,-4.683080],[-8.692280,6.271792,8.685087,0.379556,-2.206280,9.589200,8.052151],[9.418082,-7.805665,9.448231,2.312207,9.315466,3.719319,-9.869494],[4.570296,-6.786846,3.571360,-3.573758,9.002277,5.804975,3.673687],[-0.378182,-9.505225,-6.118377,-7.555658,5.625539,-0.625994,0.941093],[-8.096077,-1.354163,3.020816,5.621591,-4.646421,4.420086,-7.235212],[7.967747,1.412450,-6.373744,4.822838,-4.103680,-1.638501,-9.406083]],[[9.545497,-0.491828,5.181720,6.902942,-8.878042,9.589385,-1.870619],[-0.910721,3.116169,8.644882,7.647974,3.767914,-8.030910,0.856754],[8.083090,-8.140450,7.236860,-6.155000,3.760581,6.151316,-4.103591],[-0.542918,-7.843301,8.490208,-6.573550,-3.160138,2.277348,2.190548],[-5.769880,-7.953249,-5.727215,-8.115602,-9.965163,-3.741482,-0.802328],[5.900023,-4.026192,1.568986,-7.058317,5.396030,3.662492,-2.598184],[2.764669,9.484192,-7.197682,1.716506,-0.903424,6.830532,-3.047801],[-6.050624,5.153141,3.226265,4.339851,-3.232771,-2.479373,-1.628791],[-2.568546,-9.084332,-7.010546,8.837609,6.573116,7.616748,-9.857633]],[[-3.689766,-0.516347,3.144099,-8.709825,-9.273794,7.335531,7.532720],[-3.633880,-3.632221,2.204775,-0.827164,-7.407255,-6.435043,-7.651500],[7.576652,-4.243495,6.070176,-3.756394,6.119912,1.325378,-1.162822],[-3.501729,-7.266985,4.271160,0.348984,3.296115,6.321246,6.731124],[-8.068611,8.868193,-9.962582,3.980678,5.419178,-2.446154,4.434916],[-0.601436,8.760755,9.972498,3.067970,-6.198997,9.666552,-5.396841],[8.750821,5.610591,7.341572,3.489378,-5.444365,8.564078,-3.922770],[-6.526147,5.109941,5.897021,-2.667555,4.218806,9.893928,-7.175831],[4.532544,9.336379,8.108151,-4.430152,-9.977681,-3.153692,5.823281]]], dtype = "float64")#candidate|3994|(6, 9, 7)|const|float64
bop_3995 = relay.power(var_3993.astype('float64'), relay.reshape(const_3994.astype('float64'), relay.shape_of(var_3993))) # shape=(6, 9, 7)
output = bop_3995
output2 = bop_3995
func_4000 = relay.Function([var_3993,], output)
mod['func_4000'] = func_4000
mod = relay.transform.InferType()(mod)
var_4001 = relay.var("var_4001", dtype = "float64", shape = (6, 9, 7))#candidate|4001|(6, 9, 7)|var|float64
output = func_4000(var_4001)
func_4002 = relay.Function([var_4001], output)
mutated_mod['func_4002'] = func_4002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4220 = relay.var("var_4220", dtype = "int64", shape = (3, 14, 7))#candidate|4220|(3, 14, 7)|var|int64
var_4221 = relay.var("var_4221", dtype = "int64", shape = (3, 14, 7))#candidate|4221|(3, 14, 7)|var|int64
bop_4222 = relay.not_equal(var_4220.astype('bool'), relay.reshape(var_4221.astype('bool'), relay.shape_of(var_4220))) # shape=(3, 14, 7)
uop_4232 = relay.acos(bop_4222.astype('float64')) # shape=(3, 14, 7)
output = uop_4232
output2 = uop_4232
func_4235 = relay.Function([var_4220,var_4221,], output)
mod['func_4235'] = func_4235
mod = relay.transform.InferType()(mod)
mutated_mod['func_4235'] = func_4235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4235_call = mutated_mod.get_global_var('func_4235')
var_4237 = relay.var("var_4237", dtype = "int64", shape = (3, 14, 7))#candidate|4237|(3, 14, 7)|var|int64
var_4238 = relay.var("var_4238", dtype = "int64", shape = (3, 14, 7))#candidate|4238|(3, 14, 7)|var|int64
call_4236 = func_4235_call(var_4237,var_4238,)
output = call_4236
func_4239 = relay.Function([var_4237,var_4238,], output)
mutated_mod['func_4239'] = func_4239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4826 = relay.var("var_4826", dtype = "float32", shape = (12, 13, 2))#candidate|4826|(12, 13, 2)|var|float32
uop_4827 = relay.acos(var_4826.astype('float32')) # shape=(12, 13, 2)
output = uop_4827
output2 = uop_4827
func_4832 = relay.Function([var_4826,], output)
mod['func_4832'] = func_4832
mod = relay.transform.InferType()(mod)
var_4833 = relay.var("var_4833", dtype = "float32", shape = (12, 13, 2))#candidate|4833|(12, 13, 2)|var|float32
output = func_4832(var_4833)
func_4834 = relay.Function([var_4833], output)
mutated_mod['func_4834'] = func_4834
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5190 = relay.var("var_5190", dtype = "bool", shape = (12, 3, 12))#candidate|5190|(12, 3, 12)|var|bool
var_5191 = relay.var("var_5191", dtype = "bool", shape = (12, 3, 12))#candidate|5191|(12, 3, 12)|var|bool
bop_5192 = relay.logical_or(var_5190.astype('bool'), relay.reshape(var_5191.astype('bool'), relay.shape_of(var_5190))) # shape=(12, 3, 12)
var_5195 = relay.var("var_5195", dtype = "bool", shape = (12, 3, 12))#candidate|5195|(12, 3, 12)|var|bool
bop_5196 = relay.mod(var_5190.astype('float64'), relay.reshape(var_5195.astype('float64'), relay.shape_of(var_5190))) # shape=(12, 3, 12)
func_1283_call = mod.get_global_var('func_1283')
func_1285_call = mutated_mod.get_global_var('func_1285')
const_5204 = relay.const([[7,6,-8,-6,3,8,1,3,-4,-1,7,5,-1,9,-10,-5,-1,-3,-5,7,-10,-2,-1,-6],[7,-1,5,10,-10,4,-6,-9,1,-9,2,-4,1,5,5,10,-1,6,8,-3,-7,-8,-7,-1],[10,-7,-3,7,9,9,-3,5,9,1,-7,6,1,-8,-3,-9,8,5,8,-7,-2,-2,7,-9],[9,6,2,2,5,4,-9,-1,10,10,8,7,-6,-4,-6,-9,-3,-3,-6,2,6,-9,8,4],[6,8,-1,-3,-5,8,-2,-8,-2,3,5,9,-1,8,10,9,-6,-1,3,-2,3,-10,8,3],[9,8,-1,-9,7,4,-9,-5,-2,-2,2,-5,-5,-1,5,3,-2,-9,-7,-7,-6,-4,-6,2],[7,6,9,6,8,-8,-3,-8,1,-10,-6,7,-10,8,1,-3,-3,8,10,-5,1,-1,4,1],[-7,-8,-10,8,5,5,6,-4,6,-1,8,-7,9,5,-7,1,-9,-8,1,10,-2,1,2,-6],[-9,-7,5,8,-1,-7,1,-4,-4,-1,8,2,6,-7,9,9,2,-7,-1,1,7,-2,-6,1],[9,-9,-5,5,2,-2,-5,1,6,-4,-10,-8,-5,-7,7,4,-4,-2,-2,2,1,7,4,5],[5,-6,-6,-3,-5,3,10,7,-8,3,-8,-4,-9,-4,8,-3,-1,-7,3,10,-10,-9,10,-6],[-7,-10,4,-1,-6,7,8,-6,-9,8,3,-10,-2,-5,7,3,-10,8,-9,-10,5,9,-7,2],[8,-8,7,5,-8,-2,-4,10,7,10,6,1,7,-7,-4,2,1,4,1,7,-2,6,-5,-9],[-4,-10,-1,4,-2,-4,-1,10,-10,10,-2,1,-8,-9,3,7,9,8,10,-7,2,-9,-2,5],[-1,-1,3,-6,-9,6,-3,9,-2,-1,10,3,1,-7,8,5,6,-4,-8,-2,7,10,2,-1],[10,-5,2,-2,-9,-8,-10,10,-8,7,-5,6,-8,4,-8,4,-9,-8,-8,-7,-9,8,7,7],[2,-3,2,1,-6,2,1,3,7,-4,4,-6,6,4,1,1,3,4,-3,-7,-1,-4,5,6],[-1,-6,2,9,5,-1,3,4,6,-3,-3,8,9,8,-1,5,5,-8,5,-4,1,9,-7,-1],[-10,-2,5,9,-1,-6,-3,6,-2,4,-4,-10,-4,-10,-3,-4,5,8,-5,4,5,-2,-2,-6],[-3,-4,7,-1,-2,-1,-1,-9,-2,-6,3,-5,-1,7,-5,8,3,6,-5,-2,7,-1,10,-5],[-7,9,3,10,-3,5,-2,-6,4,-5,-9,5,2,-4,-8,-7,2,-4,-2,-6,1,-10,4,-8],[-8,-9,-1,2,-2,8,-7,-4,-10,1,3,6,-9,-7,-4,5,-9,10,-1,-3,-1,3,-7,7],[7,1,7,4,-4,3,7,2,2,-5,-6,-8,-3,-7,9,-8,-3,-6,6,8,-2,-10,1,-6],[5,8,2,-10,-8,-5,-10,3,4,6,9,2,7,2,-7,2,2,3,7,-8,10,-10,-6,4],[10,10,3,3,-5,9,5,-3,-1,-10,-2,3,-4,10,6,10,3,-7,3,8,5,9,1,7],[-10,2,7,-4,8,9,-10,-2,-10,-1,9,10,-1,5,10,-3,9,2,1,-5,10,3,-4,4],[3,6,9,7,-2,1,4,-4,-9,9,2,9,9,-3,6,-6,5,1,7,-3,10,-2,-7,-7],[5,-6,-9,1,8,10,3,1,9,1,1,4,-7,-8,-3,1,-1,4,-4,8,1,6,-4,-2],[-10,-7,-9,6,7,2,-9,7,2,1,-6,-9,-5,-1,-1,-3,9,6,3,6,6,-10,-3,-6],[-8,-2,-6,-1,6,-1,6,2,6,-5,-9,-10,1,1,-7,-8,4,9,-2,2,-4,-7,-8,8],[-8,-4,-4,-2,-4,-6,10,6,-5,-5,-7,5,9,-2,2,3,-10,6,9,8,3,-4,9,10],[-7,1,1,7,-1,-8,-8,-4,8,-4,-10,-2,-8,7,-8,-1,1,1,9,3,-7,-4,4,5]], dtype = "uint64")#candidate|5204|(32, 24)|const|uint64
call_5203 = func_1283_call(relay.reshape(const_5204.astype('uint64'), [16, 8, 6]))
call_5205 = func_1283_call(relay.reshape(const_5204.astype('uint64'), [16, 8, 6]))
bop_5206 = relay.bitwise_xor(bop_5192.astype('int8'), relay.reshape(bop_5196.astype('int8'), relay.shape_of(bop_5192))) # shape=(12, 3, 12)
uop_5209 = relay.asin(bop_5192.astype('float64')) # shape=(12, 3, 12)
output = relay.Tuple([call_5203,const_5204,bop_5206,uop_5209,])
output2 = relay.Tuple([call_5205,const_5204,bop_5206,uop_5209,])
func_5218 = relay.Function([var_5190,var_5191,var_5195,], output)
mod['func_5218'] = func_5218
mod = relay.transform.InferType()(mod)
mutated_mod['func_5218'] = func_5218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5218_call = mutated_mod.get_global_var('func_5218')
var_5220 = relay.var("var_5220", dtype = "bool", shape = (12, 3, 12))#candidate|5220|(12, 3, 12)|var|bool
var_5221 = relay.var("var_5221", dtype = "bool", shape = (12, 3, 12))#candidate|5221|(12, 3, 12)|var|bool
var_5222 = relay.var("var_5222", dtype = "bool", shape = (12, 3, 12))#candidate|5222|(12, 3, 12)|var|bool
call_5219 = func_5218_call(var_5220,var_5221,var_5222,)
output = call_5219
func_5223 = relay.Function([var_5220,var_5221,var_5222,], output)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5412 = relay.var("var_5412", dtype = "float64", shape = (11, 14, 11))#candidate|5412|(11, 14, 11)|var|float64
uop_5413 = relay.sinh(var_5412.astype('float64')) # shape=(11, 14, 11)
output = relay.Tuple([uop_5413,])
output2 = relay.Tuple([uop_5413,])
func_5419 = relay.Function([var_5412,], output)
mod['func_5419'] = func_5419
mod = relay.transform.InferType()(mod)
var_5420 = relay.var("var_5420", dtype = "float64", shape = (11, 14, 11))#candidate|5420|(11, 14, 11)|var|float64
output = func_5419(var_5420)
func_5421 = relay.Function([var_5420], output)
mutated_mod['func_5421'] = func_5421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5916 = relay.var("var_5916", dtype = "float64", shape = (10, 2, 4))#candidate|5916|(10, 2, 4)|var|float64
uop_5917 = relay.sqrt(var_5916.astype('float64')) # shape=(10, 2, 4)
uop_5927 = relay.cos(var_5916.astype('float32')) # shape=(10, 2, 4)
bop_5929 = relay.floor_mod(var_5916.astype('float64'), relay.reshape(uop_5927.astype('float64'), relay.shape_of(var_5916))) # shape=(10, 2, 4)
bop_5932 = relay.right_shift(bop_5929.astype('uint16'), relay.reshape(uop_5927.astype('uint16'), relay.shape_of(bop_5929))) # shape=(10, 2, 4)
func_1283_call = mod.get_global_var('func_1283')
func_1285_call = mutated_mod.get_global_var('func_1285')
var_5944 = relay.var("var_5944", dtype = "uint64", shape = (768,))#candidate|5944|(768,)|var|uint64
call_5943 = func_1283_call(relay.reshape(var_5944.astype('uint64'), [16, 8, 6]))
call_5945 = func_1283_call(relay.reshape(var_5944.astype('uint64'), [16, 8, 6]))
func_2943_call = mod.get_global_var('func_2943')
func_2946_call = mutated_mod.get_global_var('func_2946')
var_5947 = relay.var("var_5947", dtype = "uint32", shape = (416,))#candidate|5947|(416,)|var|uint32
call_5946 = func_2943_call(relay.reshape(var_5947.astype('uint32'), [2, 13, 16]))
call_5948 = func_2943_call(relay.reshape(var_5947.astype('uint32'), [2, 13, 16]))
uop_5949 = relay.rsqrt(call_5946.astype('float64')) # shape=(2, 13, 16)
uop_5951 = relay.rsqrt(call_5948.astype('float64')) # shape=(2, 13, 16)
uop_5953 = relay.log(uop_5927.astype('float64')) # shape=(10, 2, 4)
func_1636_call = mod.get_global_var('func_1636')
func_1640_call = mutated_mod.get_global_var('func_1640')
var_5978 = relay.var("var_5978", dtype = "float64", shape = (1320,))#candidate|5978|(1320,)|var|float64
var_5979 = relay.var("var_5979", dtype = "float64", shape = (154, 1))#candidate|5979|(154, 1)|var|float64
call_5977 = relay.TupleGetItem(func_1636_call(relay.reshape(var_5978.astype('float64'), [12, 11, 10]), relay.reshape(var_5979.astype('float64'), [22, 7]), relay.reshape(var_5979.astype('float32'), [22, 7]), ), 2)
call_5980 = relay.TupleGetItem(func_1640_call(relay.reshape(var_5978.astype('float64'), [12, 11, 10]), relay.reshape(var_5979.astype('float64'), [22, 7]), relay.reshape(var_5979.astype('float32'), [22, 7]), ), 2)
func_1636_call = mod.get_global_var('func_1636')
func_1640_call = mutated_mod.get_global_var('func_1640')
call_6011 = relay.TupleGetItem(func_1636_call(relay.reshape(var_5978.astype('float64'), [12, 11, 10]), relay.reshape(call_5977.astype('float64'), [22, 7]), relay.reshape(var_5979.astype('float32'), [22, 7]), ), 2)
call_6012 = relay.TupleGetItem(func_1640_call(relay.reshape(var_5978.astype('float64'), [12, 11, 10]), relay.reshape(call_5977.astype('float64'), [22, 7]), relay.reshape(var_5979.astype('float32'), [22, 7]), ), 2)
output = relay.Tuple([uop_5917,bop_5932,call_5943,var_5944,var_5947,uop_5949,uop_5953,call_5977,var_5978,var_5979,call_6011,])
output2 = relay.Tuple([uop_5917,bop_5932,call_5945,var_5944,var_5947,uop_5951,uop_5953,call_5980,var_5978,var_5979,call_6012,])
func_6029 = relay.Function([var_5916,var_5944,var_5947,var_5978,var_5979,], output)
mod['func_6029'] = func_6029
mod = relay.transform.InferType()(mod)
var_6030 = relay.var("var_6030", dtype = "float64", shape = (10, 2, 4))#candidate|6030|(10, 2, 4)|var|float64
var_6031 = relay.var("var_6031", dtype = "uint64", shape = (768,))#candidate|6031|(768,)|var|uint64
var_6032 = relay.var("var_6032", dtype = "uint32", shape = (416,))#candidate|6032|(416,)|var|uint32
var_6033 = relay.var("var_6033", dtype = "float64", shape = (1320,))#candidate|6033|(1320,)|var|float64
var_6034 = relay.var("var_6034", dtype = "float64", shape = (154, 1))#candidate|6034|(154, 1)|var|float64
output = func_6029(var_6030,var_6031,var_6032,var_6033,var_6034,)
func_6035 = relay.Function([var_6030,var_6031,var_6032,var_6033,var_6034,], output)
mutated_mod['func_6035'] = func_6035
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6049 = relay.var("var_6049", dtype = "float32", shape = (7, 2, 13))#candidate|6049|(7, 2, 13)|var|float32
uop_6050 = relay.sin(var_6049.astype('float32')) # shape=(7, 2, 13)
output = uop_6050
output2 = uop_6050
func_6055 = relay.Function([var_6049,], output)
mod['func_6055'] = func_6055
mod = relay.transform.InferType()(mod)
mutated_mod['func_6055'] = func_6055
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6056 = relay.var("var_6056", dtype = "float32", shape = (7, 2, 13))#candidate|6056|(7, 2, 13)|var|float32
func_6055_call = mutated_mod.get_global_var('func_6055')
call_6057 = func_6055_call(var_6056)
output = call_6057
func_6058 = relay.Function([var_6056], output)
mutated_mod['func_6058'] = func_6058
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6387 = relay.var("var_6387", dtype = "float64", shape = ())#candidate|6387|()|var|float64
var_6388 = relay.var("var_6388", dtype = "float64", shape = (7, 1, 6))#candidate|6388|(7, 1, 6)|var|float64
bop_6389 = relay.greater(var_6387.astype('bool'), var_6388.astype('bool')) # shape=(7, 1, 6)
func_426_call = mod.get_global_var('func_426')
func_429_call = mutated_mod.get_global_var('func_429')
var_6402 = relay.var("var_6402", dtype = "float64", shape = (2, 280))#candidate|6402|(2, 280)|var|float64
const_6403 = relay.const([-1.495568,2.491717,-9.739724,8.257009,0.785305,0.775163,1.158517,5.639994,7.884719,0.010082,-4.668548,9.246136,3.238818,-9.936714,2.338271,2.683563,-8.088408,6.469693,-1.481587,-2.344765,-4.366754,-4.487458,4.477000,-0.034625,-4.278730,-2.765806,7.528735,6.603375,-8.146848,-2.183061,-8.897057,3.868928,-2.829934,-5.941754,-8.885490,1.631030,-0.050332,-5.322392,3.146262,4.719672,-7.753364,-3.069133,0.826002,8.958753,2.796760,2.681855,3.203502,-5.654829,8.371001,-8.032388,3.474949,-4.054720,9.337855,6.210721,9.912177,-6.046865,2.670113,-2.852215,-0.077839,-1.983130,9.483775,4.079763,9.002902,-5.004674,-3.668693,-2.200123,-6.676271,-4.098301,2.251283,-4.722202,-8.094676,-8.625039,5.714886,-7.833652,-4.457287,8.763840,-9.068604,-4.671650,8.843964,-2.412421,7.991723,7.885875,2.362951,7.688011,-6.975666,1.618008,-6.355138,-1.782207,-0.444854,6.856983,9.813651,-4.198663,-8.689066,0.211688,-9.861753,7.908065,-8.482470,2.813265,-3.128821,-7.033337,7.946217,6.642321,-0.977943,8.356708,-6.388674,8.862815,-8.614735,9.402725,3.511955,-2.610671,-9.929620,8.892903,-9.721395,-7.017539,-1.564420,9.172503,3.898323,4.801608,-6.815125,-5.840960,-1.029066,0.308378,-4.289527,2.578002,1.924546,7.294919,4.210468,5.837969,1.381406,6.463456,-7.253120,5.874147,6.150846,6.769381,-7.340619,7.619421,-8.617663,7.483239,7.142389,-0.235522,-6.450728,7.340196,-5.531091,4.134938,-3.533466,2.837120,-0.010707,-2.801705,-2.410705,1.634913,-5.443083,5.268629,5.231395,8.838559,0.528576,-0.959683,5.416634,0.378212,-1.298460,9.881621,1.483133,5.336000,-7.258745,-6.576172,-2.419247,1.384833,-4.282232,2.962528,6.862090,-3.345800,-5.414671,-7.825877,-1.512822,4.407529,-2.116105,-5.559589,-8.738811,8.062965,4.877578,9.329075,-0.850339,-9.091197,6.969412,-3.933345,-2.611895,8.043079,9.891768,-2.228263,6.991872,-5.153548,2.031851,-3.523286,7.737566,-7.400330,2.189427,-2.710933,-8.433453,-4.247403,-0.822128,-4.711935,9.603476,8.649407,8.953834,2.880566,7.947072,-3.252172,-0.922262,-0.061462,5.177104,-7.511720,-9.442646,-7.031336,-8.243238,-3.276174,6.354867,3.018960,-2.369634,-4.613234,4.355515,7.167391,4.250233,4.915050,-2.621157,5.198533,-5.300488,-2.324372,-9.180146,6.771967,3.768252,2.412587,-0.377439,8.878861,3.898390,-2.970960,0.078354,-9.735611,6.899570,-0.582040,3.424812,8.629948,-7.701488,6.396408,-6.564866,8.062612,-6.543438,8.555123,4.479007,-3.111672,-3.319390,2.462793,-4.670056,-6.317184,4.045460,9.698705,7.820542,-7.859522,-0.287829,-9.972168,-4.707838,-1.470618,5.827224,9.312508,-6.280471,3.530925,-0.859553,7.139555,-0.518625,5.713343,-1.714456,4.175532,5.419450,2.041976,6.397821,3.452688,8.652535,-0.285435,0.326532,-7.387479,8.223835,-4.363062,-9.810796,-1.306955,7.351169,0.825830,-1.456285,2.648039,-9.413860,7.985523,2.555905,-1.385187,-4.532332,6.251350,-3.477593,-0.083331,9.525695,-4.872365,-4.809036,8.547964,-0.923778,6.701445,7.378200,-4.313037,-0.465265,1.774839,-9.931504,-8.465152,-1.254519,-5.558384,3.122667,2.285980,7.465723,7.920928,-5.271572,-1.793419,1.945648,-8.251794,-4.472964,-5.108439,-8.132341,-9.111363,5.955122,-6.005879,-6.790223,8.122552,6.366668,1.606271,-3.402428,-6.237721,4.776861,9.099777,-5.192936,6.243098,-5.207047,9.442866,4.455625,-4.609072,1.966776,-9.054679,5.630622,3.306654,-8.713062,-8.997928,2.059691,-4.920876,3.542447,4.948737,6.491968,-3.523866,0.741954,-8.954191,-0.694231,9.341391,2.669298,4.100179,7.973886,8.683143,1.372509,-6.213940,-3.935054,3.511138,-0.335010,-4.192684,2.607467,-2.594798,-0.035824,3.450774,4.734573,-8.987776,6.949172,5.617826,9.730882,-6.365159,-2.733080,4.430813,4.032815,-2.529964,-2.607072,4.143220,-0.200308,-5.221944,8.636138,8.554089,-8.332312,9.522782,4.917085,2.236156,-8.723762,-0.534451,-2.402096,5.453699,-2.924836,-9.370886,-7.770779,4.089683,8.477603,-5.337011,3.664696,8.708403,3.779985,3.035196,6.166479,6.241035,6.732193,9.096107,-6.902764,2.126055,-5.496422,9.442572,-7.664827,7.470941,-3.653825,-9.180912,2.291998,4.235345,-4.429584,-1.020194,6.755724,2.624720,6.391588,0.157917,-6.208138,-2.569368,-5.625889,3.715168,-1.540947,-0.078308,-9.204855,1.499365,-2.159564,5.950043,5.891877,-6.257252,9.382845,3.514482,-6.259444,-3.444079,-6.598797,-5.059215,-6.721429,7.257391,-6.281413,9.576955,-7.257562,4.619355,-0.830115,1.864365,-2.828129,-0.335965,-1.105893,-0.876881,-3.385980,7.050154,4.179268,0.638549,3.706115,8.189678,-0.047038,2.566330,9.404899,0.739767,6.214049,7.903467,5.646591,2.839696,-0.693869,-7.148115,1.047567,6.255226,1.689319,-2.627394,3.808286,0.661260,3.323814,-6.224382,9.632120,-8.894441,-0.454841,-5.142070,7.417688,8.673127,9.826243,1.744069,1.178492,2.443199,1.979527,-5.110873,3.891759,5.108415,-8.855043,8.546633,0.796752,-1.795324,-7.974141,7.294930,-2.423965,3.744699,9.582571,-2.670635,7.339429,2.890896,-1.090354,7.285347,6.193836,-0.127853,-2.861585,7.013272,7.470741,4.753248,-8.864607,9.114949,-1.354997,-0.806338,0.815419,-4.440302,6.248072,-8.693714,4.129288,3.123059,-5.421084,-9.745751,-7.125193,-5.508642,9.448990,8.901857,8.916489,7.969460,0.935037,9.918907,-5.349458,7.178104,7.118425,3.159709,7.823391,-4.830100,-7.984966,-4.954810,-9.163472,-4.951956,-7.308835,-0.757644], dtype = "float32")#candidate|6403|(540,)|const|float32
call_6401 = relay.TupleGetItem(func_426_call(relay.reshape(var_6402.astype('float64'), [4, 10, 14]), relay.reshape(const_6403.astype('float32'), [540,]), ), 0)
call_6404 = relay.TupleGetItem(func_429_call(relay.reshape(var_6402.astype('float64'), [4, 10, 14]), relay.reshape(const_6403.astype('float32'), [540,]), ), 0)
output = relay.Tuple([bop_6389,call_6401,var_6402,const_6403,])
output2 = relay.Tuple([bop_6389,call_6404,var_6402,const_6403,])
func_6405 = relay.Function([var_6387,var_6388,var_6402,], output)
mod['func_6405'] = func_6405
mod = relay.transform.InferType()(mod)
mutated_mod['func_6405'] = func_6405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6405_call = mutated_mod.get_global_var('func_6405')
var_6407 = relay.var("var_6407", dtype = "float64", shape = ())#candidate|6407|()|var|float64
var_6408 = relay.var("var_6408", dtype = "float64", shape = (7, 1, 6))#candidate|6408|(7, 1, 6)|var|float64
var_6409 = relay.var("var_6409", dtype = "float64", shape = (2, 280))#candidate|6409|(2, 280)|var|float64
call_6406 = func_6405_call(var_6407,var_6408,var_6409,)
output = call_6406
func_6410 = relay.Function([var_6407,var_6408,var_6409,], output)
mutated_mod['func_6410'] = func_6410
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6818 = relay.var("var_6818", dtype = "int32", shape = (5, 12, 5))#candidate|6818|(5, 12, 5)|var|int32
var_6819 = relay.var("var_6819", dtype = "int32", shape = (5, 12, 5))#candidate|6819|(5, 12, 5)|var|int32
bop_6820 = relay.bitwise_or(var_6818.astype('int32'), relay.reshape(var_6819.astype('int32'), relay.shape_of(var_6818))) # shape=(5, 12, 5)
output = relay.Tuple([bop_6820,])
output2 = relay.Tuple([bop_6820,])
func_6830 = relay.Function([var_6818,var_6819,], output)
mod['func_6830'] = func_6830
mod = relay.transform.InferType()(mod)
var_6831 = relay.var("var_6831", dtype = "int32", shape = (5, 12, 5))#candidate|6831|(5, 12, 5)|var|int32
var_6832 = relay.var("var_6832", dtype = "int32", shape = (5, 12, 5))#candidate|6832|(5, 12, 5)|var|int32
output = func_6830(var_6831,var_6832,)
func_6833 = relay.Function([var_6831,var_6832,], output)
mutated_mod['func_6833'] = func_6833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6970 = relay.var("var_6970", dtype = "bool", shape = (16, 2, 3))#candidate|6970|(16, 2, 3)|var|bool
var_6971 = relay.var("var_6971", dtype = "bool", shape = (16, 2, 3))#candidate|6971|(16, 2, 3)|var|bool
bop_6972 = relay.logical_and(var_6970.astype('bool'), relay.reshape(var_6971.astype('bool'), relay.shape_of(var_6970))) # shape=(16, 2, 3)
func_5218_call = mod.get_global_var('func_5218')
func_5223_call = mutated_mod.get_global_var('func_5223')
const_6982 = relay.const([True,False,True,False,True,True,False,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,True,True,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,True,False], dtype = "bool")#candidate|6982|(432,)|const|bool
call_6981 = relay.TupleGetItem(func_5218_call(relay.reshape(const_6982.astype('bool'), [12, 3, 12]), relay.reshape(const_6982.astype('bool'), [12, 3, 12]), relay.reshape(const_6982.astype('bool'), [12, 3, 12]), ), 2)
call_6983 = relay.TupleGetItem(func_5223_call(relay.reshape(const_6982.astype('bool'), [12, 3, 12]), relay.reshape(const_6982.astype('bool'), [12, 3, 12]), relay.reshape(const_6982.astype('bool'), [12, 3, 12]), ), 2)
func_800_call = mod.get_global_var('func_800')
func_803_call = mutated_mod.get_global_var('func_803')
const_6995 = relay.const([[10,-7,1,-2,6,7,9,-10],[-9,-8,1,-10,8,-6,-1,-10],[-6,-5,6,5,5,-9,-5,-3],[-2,-7,10,8,3,10,8,7],[6,-2,-1,-4,8,1,4,2],[-4,1,-6,-10,4,-3,10,6],[-5,-6,-5,3,4,1,-7,-6],[-1,4,5,-6,-6,1,10,1],[6,-2,-10,8,-8,-3,-3,-7],[-5,4,7,-9,9,-6,-7,-6],[4,6,2,9,-3,8,-1,-10],[8,-6,-4,-7,-5,3,9,5],[-7,1,-4,-1,1,3,-4,8],[-9,-6,-1,5,5,-10,-7,-2],[-7,-4,-1,10,-4,-6,7,10],[-2,8,-9,-1,-1,9,-9,10],[3,-9,-9,-8,1,9,10,6],[6,-7,-7,9,1,-5,10,6],[-9,8,1,1,10,2,1,-1],[-1,4,-7,5,-3,-8,-8,-6],[9,-5,8,4,7,-7,5,-7],[-8,-6,6,-5,-4,1,9,-8],[-9,-1,-10,4,-3,8,-1,-8],[-10,4,-6,4,-3,-1,-2,3],[4,8,-8,-3,-3,3,-8,1],[-5,-3,-7,2,-1,4,-2,5],[-10,-1,-5,-3,5,-2,-7,4],[-1,3,-3,-8,8,10,-1,-7],[9,-9,-2,5,-8,-4,-2,-7],[5,-1,-6,5,-2,-7,1,2],[-4,4,-5,5,4,10,-8,-8],[-10,-1,7,2,10,-10,3,-1],[-5,5,2,7,9,-3,-6,-2],[-10,-5,-9,-6,-6,2,-8,-8],[-7,-5,3,6,-1,1,-10,6],[-5,6,-7,5,-9,-3,-1,2],[-4,-7,-10,8,-2,9,-1,-1],[-7,10,-1,7,5,7,-3,-4],[-5,-3,-5,-6,-2,-10,-3,9],[10,-2,-6,9,1,7,-4,-10],[-3,-5,3,-5,8,8,-6,9],[-6,-7,2,-6,-1,-6,4,-3],[6,-5,-1,6,4,1,10,-6],[-5,-1,-8,-1,-9,-3,10,2],[-5,-6,7,-6,-5,3,-10,-2],[-3,-1,9,9,8,3,-9,5],[1,-2,3,-1,8,-2,2,-1],[-6,-5,6,-2,-7,4,9,-4],[1,9,6,2,2,2,9,-1],[8,1,2,-10,-8,7,-2,-8],[-6,6,-4,6,6,4,-1,-2],[2,5,-7,-5,9,-4,10,5],[6,-8,2,10,3,-3,10,-5],[7,10,-7,10,-4,9,4,-2],[5,-5,-5,5,1,-2,1,5],[9,5,10,-4,-10,10,6,8],[-3,8,-10,-4,1,1,-1,-4],[-4,6,4,10,-2,-8,4,10],[9,-3,-5,9,3,9,-10,4],[-2,8,2,-10,10,-5,-5,2],[-4,-4,-4,-6,5,-10,-10,1],[-9,-10,8,-5,9,5,-4,-10],[3,-9,9,3,1,-10,-10,-3],[-1,7,-4,-8,-2,-8,1,7]], dtype = "int32")#candidate|6995|(64, 8)|const|int32
call_6994 = relay.TupleGetItem(func_800_call(relay.reshape(const_6995.astype('int32'), [2, 16, 16]), relay.reshape(const_6995.astype('int32'), [2, 16, 16]), ), 0)
call_6996 = relay.TupleGetItem(func_803_call(relay.reshape(const_6995.astype('int32'), [2, 16, 16]), relay.reshape(const_6995.astype('int32'), [2, 16, 16]), ), 0)
func_4832_call = mod.get_global_var('func_4832')
func_4834_call = mutated_mod.get_global_var('func_4834')
const_7020 = relay.const([7.896744,-1.620180,-6.095652,-2.203886,-2.274180,-2.197900,1.729797,-7.272731,8.797663,-8.055266,0.815829,-6.326311,-9.682924,-1.105191,7.152019,-7.729675,2.097687,-3.034159,-6.305775,-5.312927,-7.703857,2.442681,-6.484113,1.895031,1.349145,-3.221020,-2.289956,-2.772555,-0.169927,-0.933790,-1.198347,-6.036519,2.366637,6.995628,-5.290237,-8.352003,7.469213,-0.684319,0.085623,2.468834,0.266628,-0.501744,-8.700716,-6.598918,2.981264,6.908742,-1.989029,9.511507,-3.392619,8.522831,-3.467151,4.513151,7.592406,6.251389,-6.429427,-7.521895,-5.523491,7.383072,5.421023,8.947766,-7.787613,3.964227,1.053036,-2.491719,1.654684,-5.680794,9.579647,6.537429,2.466610,-1.277219,-1.843427,7.408809,9.306886,0.954258,1.918753,1.155458,5.795165,-0.808807,0.456593,0.141809,-8.173854,5.822988,6.038924,6.646472,7.611516,-6.212104,-8.313476,8.699904,-0.500801,-9.178201,4.020500,1.957392,-8.792452,5.016804,-2.722270,9.093182,-1.365598,5.748295,4.136555,-3.333285,-3.235330,-2.161635,2.781609,-7.293807,9.216907,0.181255,-5.984010,0.208619,-8.686090,-1.395824,3.591689,3.973558,-4.541853,-0.105445,7.237730,9.553643,6.760673,-7.926098,3.311163,4.908498,-7.728882,8.750204,1.292172,8.011022,-0.399291,8.089220,4.517442,4.308508,7.124519,-6.849391,9.681433,-5.139293,0.516010,2.427388,8.490333,8.961229,3.522858,-6.260523,-2.900068,-2.307279,8.877653,-7.978934,-3.178702,5.688743,4.790752,9.191306,1.992900,-1.438646,-5.772315,4.082876,-3.481600,2.210307,1.449602,-7.978437,-6.672818,-7.499149,-1.763436,-6.822972,8.360702,-7.037936,4.385215,7.648102,7.529799,-9.658071,7.194083,0.562230,-5.286557,5.250408,-8.502464,2.294227,-6.779716,8.234121,1.941661,6.679822,7.920746,3.857276,0.630611,3.056457,-6.551171,4.700889,7.315007,0.737646,3.503408,0.744147,3.032888,-3.224706,2.399962,-1.437853,-4.965218,0.094329,-3.554663,-9.937863,9.707992,-5.482793,8.755751,4.712766,1.441778,9.867106,6.789827,-9.062192,0.254821,-6.893135,-1.008852,2.730668,-0.041647,-7.820808,-4.623507,1.242439,-1.938124,9.051115,7.688078,-7.966667,-6.950809,2.960422,7.066335,-2.684930,5.618244,6.397940,1.640563,-8.450182,3.798421,-1.494841,4.206453,3.705587,-0.132684,-0.866988,0.652784,-0.478933,-7.266297,7.634072,8.377210,-5.283334,-4.311188,8.591291,0.794739,8.551422,-9.938038,-9.404269,7.253901,-8.896250,-2.217943,8.800384,8.657480,4.114214,-4.502707,0.584418,-5.066901,-7.245655,7.892211,1.105889,9.938966,2.776902,-5.546624,5.434691,7.491011,9.861169,-5.737632,9.803929,-3.269129,2.870491,3.996775,5.111588,3.764108,-3.273504,9.621423,4.120574,8.292381,-2.497599,-4.141970,7.706254,2.929277,8.751179,-3.845844,-5.657940,-2.164290,0.606751,-2.722797,2.322979,-6.756503,3.847523,4.750718,-6.204256,2.499135,9.761856,-5.724851,-8.763846,4.952136,-3.808399,-5.881866,4.956880,-0.494335,7.101886,9.400442,-4.458534,-1.929338,8.855273,-7.794460,-2.393905,-8.630539,4.850601,7.613269,5.499545,-6.366671,-6.617416,-9.743608,8.156095,-6.079200,8.733934,0.163365,4.985477,3.194343,-4.379325], dtype = "float32")#candidate|7020|(312,)|const|float32
call_7019 = func_4832_call(relay.reshape(const_7020.astype('float32'), [12, 13, 2]))
call_7021 = func_4832_call(relay.reshape(const_7020.astype('float32'), [12, 13, 2]))
uop_7028 = relay.rsqrt(call_6994.astype('float64')) # shape=(2, 16, 16)
uop_7030 = relay.rsqrt(call_6996.astype('float64')) # shape=(2, 16, 16)
output = relay.Tuple([bop_6972,call_6981,const_6982,const_6995,call_7019,const_7020,uop_7028,])
output2 = relay.Tuple([bop_6972,call_6983,const_6982,const_6995,call_7021,const_7020,uop_7030,])
func_7038 = relay.Function([var_6970,var_6971,], output)
mod['func_7038'] = func_7038
mod = relay.transform.InferType()(mod)
mutated_mod['func_7038'] = func_7038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7038_call = mutated_mod.get_global_var('func_7038')
var_7040 = relay.var("var_7040", dtype = "bool", shape = (16, 2, 3))#candidate|7040|(16, 2, 3)|var|bool
var_7041 = relay.var("var_7041", dtype = "bool", shape = (16, 2, 3))#candidate|7041|(16, 2, 3)|var|bool
call_7039 = func_7038_call(var_7040,var_7041,)
output = call_7039
func_7042 = relay.Function([var_7040,var_7041,], output)
mutated_mod['func_7042'] = func_7042
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7103 = relay.const([[[-4],[-7],[10],[5],[-9],[-2],[9],[1],[3]],[[-8],[-7],[-6],[-6],[-3],[-1],[-4],[-9],[5]],[[6],[-1],[-9],[7],[-6],[-1],[-4],[-10],[3]],[[1],[-9],[2],[7],[8],[-8],[7],[3],[10]],[[10],[-9],[6],[5],[-1],[2],[1],[1],[-8]],[[-3],[-8],[10],[1],[1],[7],[5],[9],[-6]],[[-6],[-6],[8],[-10],[1],[-10],[-4],[-3],[3]],[[2],[5],[8],[-5],[3],[-9],[-10],[10],[1]],[[-3],[-6],[2],[-5],[-10],[-3],[-4],[-8],[8]],[[-2],[1],[6],[4],[4],[-1],[-3],[-7],[9]],[[8],[10],[-2],[2],[-7],[8],[-6],[-8],[-8]],[[4],[10],[8],[-6],[6],[-4],[5],[-10],[-10]],[[7],[2],[-10],[-7],[1],[-3],[10],[10],[9]],[[1],[-3],[-9],[5],[8],[8],[-10],[10],[8]]], dtype = "int32")#candidate|7103|(14, 9, 1)|const|int32
const_7104 = relay.const([[[-6,3,-1,9,4,1,1,4,10,-5,-5,-4,7,6,-4,1],[1,-1,6,4,-8,-5,9,-3,1,5,1,10,5,-5,4,3],[9,-8,6,7,8,-4,-5,6,-5,1,-4,5,-9,-10,-6,8],[9,-4,-9,8,7,6,1,8,-5,-3,10,-10,-10,-1,5,6],[7,-8,3,6,10,-1,-4,-10,-6,9,4,-4,-2,-3,-4,1],[-10,-8,5,-2,5,-9,-2,7,-3,-5,-8,9,4,6,-10,-9],[-6,-3,10,9,1,-2,6,-3,8,5,-5,-3,-8,-6,8,1],[2,-6,-1,8,2,7,3,-8,-5,4,-7,10,-10,6,-2,3],[-2,8,3,-7,8,-4,1,-2,4,8,-5,-9,-5,-2,-1,-10]],[[-3,8,4,10,9,-5,-5,-9,-2,-2,-5,1,-3,4,-5,9],[-3,-3,-2,1,8,-4,-10,4,9,-9,5,2,-1,6,-5,4],[-3,4,-10,7,-10,3,-3,4,-2,-4,-4,-7,-7,3,-7,9],[-5,-5,2,5,4,-4,4,9,-2,3,3,3,10,-3,4,-8],[7,-6,-7,10,10,8,-3,-9,2,-3,9,-5,3,-7,10,-5],[-9,7,-3,-7,3,6,4,3,5,-9,3,5,-3,-10,-10,-1],[10,-4,9,6,7,-9,7,-7,9,9,1,7,-10,7,4,6],[-10,-8,2,-10,-8,-1,3,9,5,4,-6,10,-8,4,8,9],[-4,4,1,-6,5,3,-9,-9,-2,10,4,4,10,-7,1,6]],[[-2,-1,4,-1,-7,6,1,-10,-8,3,-4,-7,4,-3,-9,10],[9,4,9,4,-2,-3,4,5,6,8,-4,6,-9,5,-8,-9],[6,-2,-9,-2,7,-3,9,-6,8,6,-7,10,-1,-3,-9,10],[6,-10,-10,-7,8,-9,9,-5,-7,9,-5,-9,-3,9,-5,-9],[1,-7,2,8,-3,10,-10,1,7,-1,-6,-9,3,2,7,10],[-1,-8,10,-6,3,-6,-2,-4,4,1,8,-2,-10,-10,8,-4],[6,3,-10,-8,6,9,1,-4,9,-9,-7,-9,-7,-3,-10,3],[1,-3,-4,7,6,-7,9,4,-9,6,-5,-3,5,-5,-3,10],[-6,-8,-3,10,10,8,9,1,8,3,2,4,-2,-2,-9,10]],[[5,-6,2,2,5,3,-4,3,-10,3,-2,1,10,-10,8,-6],[7,-3,-10,-1,5,-3,6,8,4,-2,-2,2,-8,3,-4,9],[1,-10,-7,7,5,-10,8,9,-3,2,-3,7,9,-7,7,4],[-8,-10,-7,8,1,-5,7,-2,-4,-6,-1,10,5,2,-3,-1],[-3,7,-9,2,-4,8,-8,4,7,10,-4,-7,-8,-10,-7,4],[-3,-10,8,2,-6,5,-3,7,-8,-9,9,-1,6,10,4,3],[-6,10,2,8,-2,-3,2,6,-9,4,10,-7,-1,-10,-2,2],[4,2,4,6,-4,3,-1,6,4,1,9,10,6,3,-3,-4],[7,-4,7,-8,-3,7,-10,5,4,5,4,3,7,8,3,6]],[[-9,2,4,-6,-1,-10,-5,2,-1,-5,4,6,6,-1,5,10],[2,9,1,3,-8,2,10,-5,3,-7,-9,-10,7,3,-1,-6],[-2,10,-10,-7,8,2,-3,8,-8,-5,-9,10,-8,-10,4,3],[10,-1,-6,9,-8,-1,-5,-9,3,-9,-8,-10,2,7,-7,5],[-4,10,-7,-4,-7,7,4,-4,-7,1,4,6,-3,-3,3,-10],[6,-5,-6,-9,-5,-4,10,6,-2,7,-2,1,5,-6,4,3],[5,-5,8,5,-10,-10,8,10,-7,-6,-9,4,3,-10,7,8],[-3,4,-7,-3,-7,-7,-3,7,-5,8,-3,8,2,4,-3,-3],[5,8,-8,9,5,2,-5,9,3,-6,10,2,-3,-3,-9,5]],[[-6,6,-5,1,4,-10,-2,1,-6,4,2,-10,-2,-3,1,-5],[-2,-3,9,-9,-7,4,-9,7,-1,-1,-6,-9,-4,-9,2,-4],[-6,-3,2,6,2,9,6,-7,4,1,1,-8,2,-1,-1,3],[3,10,10,3,7,-5,5,-9,10,-10,-10,5,4,-8,-1,2],[-7,-9,8,8,3,10,5,-10,-9,-7,7,-1,-8,-7,8,-4],[2,1,-7,-7,2,10,-7,4,1,3,5,-10,-2,3,8,2],[-3,10,-2,10,-4,-3,1,7,1,1,-5,-9,9,5,-1,7],[-2,4,4,9,-4,-9,2,-8,-5,8,-1,-6,-1,10,-10,8],[4,5,7,9,10,8,-5,6,-5,-1,3,7,-8,10,3,-9]],[[1,8,10,9,7,-2,4,-2,4,7,9,-3,-10,5,10,-4],[-8,9,2,-9,-5,-1,9,-10,-7,10,1,-4,-6,-8,-3,-7],[7,-8,-4,-9,-8,-10,4,-9,6,-8,5,-2,1,5,-4,-4],[8,1,-10,3,-3,-6,2,9,-7,7,-10,-2,10,-6,2,7],[-3,4,-3,3,7,-2,-7,8,-9,-7,-5,2,6,2,-10,-10],[1,6,10,-7,-1,7,-9,1,10,-9,-6,-2,10,2,5,3],[-7,-10,-10,-7,8,-8,-9,-7,8,-5,8,9,-3,8,-5,6],[1,3,4,4,-2,-9,5,1,1,-8,-5,-4,9,8,4,10],[-9,9,-10,3,7,-4,-7,6,3,4,-4,-6,-2,-9,-6,2]],[[-9,-1,5,-3,-8,-5,-4,-3,-8,4,-7,2,-5,-6,9,10],[-8,-7,5,-5,6,7,4,8,-7,1,3,3,-4,2,-6,1],[1,9,7,10,8,5,7,2,-6,-8,-6,-8,10,6,-2,2],[-5,1,4,7,-9,4,6,10,8,-2,8,7,-1,2,9,7],[4,10,-9,2,1,-4,1,-10,1,-3,1,-5,-2,6,-2,9],[-2,5,-6,-1,-2,-6,10,-2,-6,-8,-5,-1,-1,-10,1,8],[-6,9,10,1,-7,-5,-10,6,9,7,6,-3,-5,9,-10,-1],[9,-10,-10,-1,7,3,-10,-7,2,5,2,-6,-10,-2,1,-7],[-3,-9,10,-9,-3,-6,1,4,-7,-3,8,3,4,6,-1,6]],[[-4,9,5,10,-10,5,-10,-7,9,-6,-9,2,-6,-9,-3,-3],[1,10,-9,8,-7,-3,1,5,-9,-4,2,2,-4,9,7,4],[-3,8,5,3,8,-2,-5,-8,10,5,-9,3,7,3,-3,3],[-3,8,-8,1,-7,6,10,8,-9,-3,9,2,-6,-9,-1,-3],[-5,2,1,9,6,10,1,-5,1,7,-2,6,-3,6,-9,-8],[-1,-8,-4,10,4,6,-8,-6,-9,-10,3,10,3,1,9,8],[2,2,-7,-7,-2,6,6,-2,-6,-7,-10,-6,4,-7,-9,-3],[-5,8,-9,2,-10,3,10,-2,-10,5,7,-5,9,6,-8,-8],[5,-4,-10,6,-5,-3,-8,3,-5,8,-10,-5,-4,8,9,7]],[[-1,-10,9,9,7,-1,9,3,-2,6,-5,-4,1,2,-7,5],[4,-9,3,1,1,7,7,6,2,-3,2,-5,-9,-2,-10,2],[-4,8,-8,7,10,1,-3,-9,8,1,9,-2,7,-3,-5,-2],[8,6,9,-9,-7,-8,-7,7,-7,7,8,-4,-5,1,-6,9],[-3,1,-8,10,-9,8,-5,5,-3,10,4,-6,3,-1,2,-2],[-6,-8,-1,2,7,10,-4,4,9,-1,-9,4,-6,-2,6,7],[7,6,4,-2,5,2,6,7,3,-10,6,-6,-8,3,4,-6],[5,-3,-8,-9,6,4,-1,-9,10,-7,-3,9,5,5,-3,-4],[-3,-7,-1,-5,10,-9,10,-5,7,-7,7,2,-9,3,10,-2]],[[4,3,8,10,-7,8,9,8,-5,8,2,-8,-1,-6,-10,-1],[8,10,1,-3,-1,8,4,9,2,3,-9,6,2,10,-10,6],[4,5,6,-6,9,-10,-9,-2,8,4,6,9,1,10,8,-9],[-2,10,2,-8,7,6,8,-4,3,4,-7,9,-2,-9,-5,-5],[-1,-6,8,-6,1,-10,7,-5,-3,4,-4,9,-2,-6,-5,3],[-5,-10,2,-9,-5,-1,-4,-7,-7,-8,1,-7,-6,-1,6,-10],[4,4,-6,-10,2,5,10,-3,-2,8,-10,8,1,-10,3,8],[10,5,4,8,5,-2,-7,1,-5,5,-7,-3,2,5,-3,-7],[4,-8,-5,6,2,-6,10,8,-8,3,6,6,-9,-7,6,5]],[[4,-10,-2,9,-2,-2,-2,-10,-3,-8,8,1,6,10,-2,2],[8,4,-8,-5,8,5,-10,-4,7,-4,-7,2,2,5,-7,-9],[9,-7,8,9,1,-8,10,-4,4,-2,4,4,6,-2,-6,-9],[6,-6,-10,-10,1,-2,10,10,7,-6,-7,-10,2,7,-5,-7],[-4,7,7,9,-5,-1,-8,-10,-2,-7,-9,-2,-1,10,-7,10],[9,-9,5,6,-8,7,-7,-2,-3,6,10,-4,-8,8,3,-9],[5,9,-6,10,-2,-2,3,-8,5,-10,-3,-7,-9,8,-2,4],[-7,-7,-8,4,3,-8,2,-3,-9,3,7,7,-4,8,2,-3],[-3,-1,-7,-10,3,-9,4,-1,4,9,3,-7,-10,10,5,10]],[[-4,-10,8,-3,9,-3,1,10,-7,9,4,4,9,6,9,-5],[-9,-4,-6,-5,7,2,1,7,10,7,-10,-7,-6,6,-9,8],[5,-2,-9,7,-4,-7,-10,4,-10,5,-3,-10,3,6,-8,-9],[-6,-5,-7,-2,1,5,-6,3,-1,6,1,5,-4,6,-5,5],[6,-6,-2,4,-2,9,10,-3,-10,-7,7,-5,-2,4,-5,-7],[-1,-6,3,-8,-10,2,9,-3,6,-10,-1,-5,5,8,-8,-3],[-10,-2,8,10,9,10,-9,4,4,-8,8,-7,3,-3,2,2],[4,7,-5,9,-10,1,3,-5,-1,3,-6,-2,-6,4,2,2],[-1,7,-5,-2,-7,-2,-8,1,-10,1,-5,-7,-10,10,6,-6]],[[-8,-4,1,-8,9,-1,9,-8,-6,-4,-2,1,3,-1,-1,7],[2,-4,7,1,4,-3,-4,1,-8,9,8,-9,1,-2,-9,-4],[10,3,-2,1,6,8,-5,-2,-3,-10,-2,2,10,-6,2,-1],[-7,-10,-9,-4,5,9,-10,2,1,-4,2,4,1,5,9,-6],[2,-7,6,-8,-5,2,7,9,-5,-10,-1,3,6,5,-5,6],[-6,-8,6,5,4,-7,9,-10,-10,-5,9,-3,7,-2,9,-10],[9,-7,-8,6,-10,-5,-10,-7,-7,1,2,1,-2,-4,9,7],[-5,-4,-9,-5,7,9,-6,8,-9,-7,5,-10,1,9,9,-9],[-2,-7,5,-1,-3,2,7,3,10,-6,-10,-1,2,10,-8,8]]], dtype = "int32")#candidate|7104|(14, 9, 16)|const|int32
bop_7105 = relay.logical_xor(const_7103.astype('int32'), const_7104.astype('int32')) # shape=(14, 9, 16)
bop_7118 = relay.logical_and(bop_7105.astype('bool'), const_7103.astype('bool')) # shape=(14, 9, 16)
func_426_call = mod.get_global_var('func_426')
func_429_call = mutated_mod.get_global_var('func_429')
var_7143 = relay.var("var_7143", dtype = "float64", shape = (40, 14))#candidate|7143|(40, 14)|var|float64
const_7144 = relay.const([3.253959,-1.313317,-4.005094,-4.433190,-0.297748,-0.264168,-0.226864,0.299083,1.304403,-2.867948,-1.238644,8.023553,0.497117,1.885309,-8.153747,-1.693933,4.682441,-5.878090,9.821315,8.172552,-9.346292,-8.150622,-3.686592,3.389595,-2.833662,5.959757,-7.318213,1.278698,4.054022,9.637026,6.816865,7.401869,-9.479230,-5.201843,-8.991834,9.112022,2.771088,-3.141582,5.569896,9.473218,0.321133,3.321405,-7.800269,1.683011,6.967529,7.216596,2.877072,4.145272,-7.507470,0.429249,-8.692511,1.226490,-5.274986,8.370989,8.485133,6.787607,-3.862792,-3.203087,5.450894,-3.898008,-7.702484,1.291490,9.977785,-0.364058,-7.217835,-8.689548,-6.814789,-2.843959,1.286100,6.697738,1.373055,4.253432,7.051208,-6.992248,-9.893680,9.139101,-2.041794,-3.978442,5.996322,3.915743,-3.186232,-0.510268,8.573256,6.284420,4.481236,2.548605,-6.735957,-1.355272,-2.949449,-6.373381,5.475432,-1.279272,5.650262,6.847284,7.073307,-3.808205,3.641062,-4.582322,-0.646233,6.426955,-4.634980,-7.564369,-8.654076,-1.004846,3.844468,5.316728,-4.613572,-2.843231,-9.183678,0.424990,-0.536587,3.049810,-1.587157,-7.422544,8.629279,-4.994350,-7.418416,-4.492027,1.520050,2.298734,-7.212039,-0.772707,-4.705193,-0.648819,-8.085817,-5.110110,5.336500,-3.348360,-4.781648,-9.787148,7.791621,0.514361,5.567105,-9.754552,4.734747,1.686165,-8.663324,-3.769852,-0.373925,6.851424,-8.565677,7.397135,9.467599,-7.629499,-1.068789,1.661761,3.354680,2.973695,3.974539,-5.370949,-9.528081,-5.660108,1.165988,5.279561,8.704861,-3.757645,7.513139,3.154953,-7.128810,-8.797315,0.099439,-0.609507,-6.045692,2.934297,9.352548,-1.094427,-2.313939,-0.736398,-8.150545,6.191216,-8.353150,8.374446,-8.667219,-8.737778,-9.727521,4.081957,-7.604338,6.674668,-9.955842,-2.430421,-6.557347,4.222913,1.192456,-2.259045,3.493925,7.371461,1.637356,8.308873,-1.913239,-6.529325,-8.706297,-6.344634,8.633881,-7.839553,-7.294807,7.380705,7.212490,0.816660,-4.530690,-6.642791,-5.272103,1.935584,2.436842,1.448889,-5.629033,-3.130745,2.771836,-0.885817,-3.994193,-7.164539,6.324021,3.256259,-5.423483,-1.179168,-8.204518,2.583611,-9.434913,1.655664,0.581703,2.206991,-1.081685,2.261372,-1.009420,7.737058,-8.996610,-4.588205,3.084206,-6.116087,-7.512647,9.088094,-2.846891,3.932922,5.540919,-9.343687,0.721197,3.863778,0.277628,-8.869415,-6.434771,8.997113,6.572914,-8.258807,1.173434,0.945972,8.344425,7.938935,9.088155,5.962984,3.985311,1.492381,9.849280,-8.800370,4.049578,1.764004,-3.014335,-0.551228,-9.832645,2.383050,-3.515354,6.365531,4.663393,8.340078,-3.395129,6.407007,-9.729932,-0.733216,5.663684,-3.138927,4.059367,-3.575213,-1.378414,-0.998560,-3.370507,1.936349,-0.395847,-0.088700,9.693006,-7.614261,-7.482353,0.700655,-0.682438,8.466888,-2.047132,3.633079,9.514724,-6.034167,-3.423918,-5.602558,-5.289450,0.733846,-0.785672,-4.009807,3.129381,0.448675,-5.379218,-2.521799,8.097588,4.263824,-7.867536,6.066535,-8.149171,1.318193,-5.786102,6.730923,5.549516,7.598419,2.447824,3.599558,-6.871769,-6.925847,9.089563,-3.436738,-7.854088,3.141338,-0.008365,-4.344258,-0.893755,7.485037,4.802716,0.568239,-6.618197,2.173188,-5.225480,-7.519247,2.900063,1.081542,-7.162746,5.845994,5.210882,1.736389,-5.879011,1.436011,5.138611,2.960485,6.801375,-0.619848,-5.227651,0.709762,-6.826376,3.550688,0.874783,2.087299,-7.101649,-0.568339,2.728877,3.254757,-3.265895,-3.668466,-5.657929,-0.711916,-3.395997,4.488292,-9.501190,6.735037,-4.623466,6.696688,6.738614,2.631279,0.720965,-7.452174,3.378286,-0.847863,-3.714029,-6.621386,7.067069,-0.342015,2.769976,-5.004055,4.781506,-9.927982,-3.840548,8.174770,-7.190183,-2.662155,-0.294103,-1.800274,-9.937447,5.581747,6.166965,4.789633,9.145399,-6.068024,4.939212,-1.436362,-8.828415,7.386070,-9.120447,9.098446,5.179815,8.629110,-8.840075,-0.645988,-6.023495,1.160331,3.169563,-8.386667,-5.592216,8.617281,4.440692,-9.203781,-5.518367,3.622551,-2.915858,-5.151028,-1.597448,-0.824178,3.349143,8.199262,-9.836479,-1.688651,-0.230159,-2.103068,6.666175,-7.322483,-4.259052,5.612202,-5.964632,9.593859,9.404755,3.593112,6.389763,-6.980298,-7.628727,1.737218,-5.497977,-9.765562,-2.896390,0.388917,-5.978772,6.480302,2.009492,6.114423,3.173002,-3.836306,-4.352051,-3.146469,2.380350,1.498718,-4.202879,8.873997,-6.771598,1.198986,-0.353843,-8.437932,0.247392,3.958234,-5.057797,-6.690677,-5.339246,-7.407233,-9.083618,-7.357925,3.415927,7.760909,-1.876454,-5.036070,-9.143494,-6.564054,3.120752,8.080558,-5.012260,1.921754,-3.052661,-3.225856,-9.117529,2.714181,1.732762,2.814460,1.342559,-2.368068,4.971514,-7.270162,8.854714,-8.752049,-9.490959,2.116264,1.016199,9.325767,-6.555962,-7.751372,2.326817,-9.875412,7.781106,3.191723,-8.343552,4.788523,0.503060,-2.273081,-6.405302,9.274267,-8.395691,7.250014,6.290738,9.736529,-6.231650,-9.835948,-3.302956,-3.655298,-5.515771,-3.376523,9.846200,-3.405042,-8.717983,3.832468,-3.423649,2.648401,4.429001,-1.244824,6.013833,8.691333,6.285879,9.470210,-4.675780,1.801892,-6.248166,7.415049,7.126436,-1.999476,-4.075806,-7.762811,-6.623451,-9.789548,-2.306758,-7.134918,-6.966894,5.158262,3.197105,2.925508,-7.357410,0.396856,8.593491,8.763350,-0.309036,-8.119328,6.475841,4.666743,-0.962373,-3.857251,-8.925901,-3.161892], dtype = "float32")#candidate|7144|(540,)|const|float32
call_7142 = relay.TupleGetItem(func_426_call(relay.reshape(var_7143.astype('float64'), [4, 10, 14]), relay.reshape(const_7144.astype('float32'), [540,]), ), 1)
call_7145 = relay.TupleGetItem(func_429_call(relay.reshape(var_7143.astype('float64'), [4, 10, 14]), relay.reshape(const_7144.astype('float32'), [540,]), ), 1)
output = relay.Tuple([bop_7118,call_7142,var_7143,const_7144,])
output2 = relay.Tuple([bop_7118,call_7145,var_7143,const_7144,])
func_7147 = relay.Function([var_7143,], output)
mod['func_7147'] = func_7147
mod = relay.transform.InferType()(mod)
var_7148 = relay.var("var_7148", dtype = "float64", shape = (40, 14))#candidate|7148|(40, 14)|var|float64
output = func_7147(var_7148)
func_7149 = relay.Function([var_7148], output)
mutated_mod['func_7149'] = func_7149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7471 = relay.var("var_7471", dtype = "float32", shape = (2, 2, 2))#candidate|7471|(2, 2, 2)|var|float32
var_7472 = relay.var("var_7472", dtype = "float32", shape = (2, 2, 2))#candidate|7472|(2, 2, 2)|var|float32
bop_7473 = relay.power(var_7471.astype('float32'), relay.reshape(var_7472.astype('float32'), relay.shape_of(var_7471))) # shape=(2, 2, 2)
output = bop_7473
output2 = bop_7473
func_7482 = relay.Function([var_7471,var_7472,], output)
mod['func_7482'] = func_7482
mod = relay.transform.InferType()(mod)
mutated_mod['func_7482'] = func_7482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7482_call = mutated_mod.get_global_var('func_7482')
var_7484 = relay.var("var_7484", dtype = "float32", shape = (2, 2, 2))#candidate|7484|(2, 2, 2)|var|float32
var_7485 = relay.var("var_7485", dtype = "float32", shape = (2, 2, 2))#candidate|7485|(2, 2, 2)|var|float32
call_7483 = func_7482_call(var_7484,var_7485,)
output = call_7483
func_7486 = relay.Function([var_7484,var_7485,], output)
mutated_mod['func_7486'] = func_7486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7551 = relay.var("var_7551", dtype = "float64", shape = (3, 7, 16))#candidate|7551|(3, 7, 16)|var|float64
uop_7552 = relay.rsqrt(var_7551.astype('float64')) # shape=(3, 7, 16)
func_1636_call = mod.get_global_var('func_1636')
func_1640_call = mutated_mod.get_global_var('func_1640')
var_7556 = relay.var("var_7556", dtype = "float64", shape = (1320,))#candidate|7556|(1320,)|var|float64
const_7557 = relay.const([-8.471369,-4.329981,-4.261828,-6.970800,7.713004,7.244785,1.796446,-9.323323,-7.764664,4.478641,5.569631,4.895262,0.216053,-2.473847,7.241261,-1.031278,5.285651,-6.568149,-5.005445,5.592746,-8.338387,7.875479,4.738468,-7.504608,9.199555,-5.379946,-7.056325,-4.461690,-5.925909,7.756976,-9.772570,1.280954,-1.778564,5.329732,-0.737350,5.303915,-3.346718,7.162868,-9.399773,2.168202,7.164771,-2.887176,0.284585,6.095599,-8.174499,8.324887,-0.948905,-6.978417,-3.025296,3.602446,7.800691,6.870130,4.910359,0.401815,7.272372,-4.433117,-2.756214,-7.584060,8.880800,5.971062,-3.195450,-1.313965,2.309262,-4.863331,8.159591,8.087673,-4.356107,-6.817035,3.160913,7.546856,-1.098709,4.331590,-0.414671,-9.620908,6.204325,1.276508,-3.970981,5.366918,4.738520,7.252208,4.954752,9.793371,9.164949,-0.373434,6.663496,9.937024,2.847310,-9.296080,0.516665,2.824676,1.182818,-4.038051,7.346209,1.620838,9.520756,9.729893,1.569659,-5.913688,-7.353403,4.035424,-1.412175,4.747007,9.666191,-1.663637,-6.492615,-4.720265,-5.775130,3.361184,-6.125247,-3.295846,2.655934,-3.359502,-8.968559,2.391146,2.474999,-2.995104,-7.296632,9.581196,-5.638618,-5.936613,-0.923058,-3.589864,3.916111,-0.459724,-3.953754,-2.686575,-7.908514,6.412317,1.515163,3.084578,2.730701,8.829717,0.818476,-1.920740,-1.790764,-5.921911,6.634107,3.527846,-5.662759,-4.617422,4.428247,-8.546542,8.081196,-2.177969,-7.364196,-1.868502,-1.777008,7.695336,-3.852280,9.408403,-2.703793,9.292560,-0.514727,9.409424], dtype = "float64")#candidate|7557|(154,)|const|float64
call_7555 = relay.TupleGetItem(func_1636_call(relay.reshape(var_7556.astype('float64'), [12, 11, 10]), relay.reshape(const_7557.astype('float64'), [22, 7]), relay.reshape(const_7557.astype('float32'), [22, 7]), ), 1)
call_7558 = relay.TupleGetItem(func_1640_call(relay.reshape(var_7556.astype('float64'), [12, 11, 10]), relay.reshape(const_7557.astype('float64'), [22, 7]), relay.reshape(const_7557.astype('float32'), [22, 7]), ), 1)
func_7482_call = mod.get_global_var('func_7482')
func_7486_call = mutated_mod.get_global_var('func_7486')
var_7569 = relay.var("var_7569", dtype = "float32", shape = (8, 1))#candidate|7569|(8, 1)|var|float32
call_7568 = func_7482_call(relay.reshape(var_7569.astype('float32'), [2, 2, 2]), relay.reshape(var_7569.astype('float32'), [2, 2, 2]), )
call_7570 = func_7482_call(relay.reshape(var_7569.astype('float32'), [2, 2, 2]), relay.reshape(var_7569.astype('float32'), [2, 2, 2]), )
output = relay.Tuple([uop_7552,call_7555,var_7556,const_7557,call_7568,var_7569,])
output2 = relay.Tuple([uop_7552,call_7558,var_7556,const_7557,call_7570,var_7569,])
func_7571 = relay.Function([var_7551,var_7556,var_7569,], output)
mod['func_7571'] = func_7571
mod = relay.transform.InferType()(mod)
var_7572 = relay.var("var_7572", dtype = "float64", shape = (3, 7, 16))#candidate|7572|(3, 7, 16)|var|float64
var_7573 = relay.var("var_7573", dtype = "float64", shape = (1320,))#candidate|7573|(1320,)|var|float64
var_7574 = relay.var("var_7574", dtype = "float32", shape = (8, 1))#candidate|7574|(8, 1)|var|float32
output = func_7571(var_7572,var_7573,var_7574,)
func_7575 = relay.Function([var_7572,var_7573,var_7574,], output)
mutated_mod['func_7575'] = func_7575
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8465 = relay.const([[[1,-5,-4],[5,-9,-2],[3,3,-3],[6,2,4]],[[-8,8,-1],[6,-3,-8],[-7,3,-1],[-4,-2,8]]], dtype = "uint16")#candidate|8465|(2, 4, 3)|const|uint16
var_8466 = relay.var("var_8466", dtype = "uint16", shape = (2, 4, 3))#candidate|8466|(2, 4, 3)|var|uint16
bop_8467 = relay.not_equal(const_8465.astype('bool'), relay.reshape(var_8466.astype('bool'), relay.shape_of(const_8465))) # shape=(2, 4, 3)
output = bop_8467
output2 = bop_8467
func_8478 = relay.Function([var_8466,], output)
mod['func_8478'] = func_8478
mod = relay.transform.InferType()(mod)
var_8479 = relay.var("var_8479", dtype = "uint16", shape = (2, 4, 3))#candidate|8479|(2, 4, 3)|var|uint16
output = func_8478(var_8479)
func_8480 = relay.Function([var_8479], output)
mutated_mod['func_8480'] = func_8480
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8485 = relay.const([[[-2.330715,1.281053,9.939077,0.480044,-3.798436,-1.294376,5.191874],[8.669618,6.924999,0.658827,6.528263,3.151031,-8.216613,2.676531],[-5.533237,-1.335574,8.240783,5.073048,-9.415920,-8.115310,3.047877]],[[4.306727,-6.419192,1.415539,6.726909,-9.449125,5.748594,-2.238914],[-9.379140,7.831487,-8.262585,3.650006,2.103292,4.455552,-8.511984],[-8.036309,-1.666814,-0.542618,6.898576,-7.242199,-4.308140,5.356710]],[[1.055040,-0.328656,-7.737719,-2.081259,5.601887,-5.968626,1.542635],[8.631413,-5.379907,9.509994,6.531839,2.645254,-9.909550,-9.882317],[-3.879054,-4.213691,6.307343,6.636812,-3.367032,8.544006,-4.053023]],[[7.102416,6.156733,9.095088,-5.120958,-2.434528,-0.218557,-5.565639],[-7.525467,-5.100976,3.693185,-7.812195,1.855797,-0.073596,1.324651],[2.134165,2.187513,5.077310,1.549685,-1.743087,-4.796443,-3.203943]],[[3.526493,1.298585,5.143642,-6.997117,-4.300426,8.067851,8.068852],[4.134137,3.659362,-9.860268,4.025705,0.702370,-6.261901,2.634772],[5.919198,0.232228,-1.096810,-3.948486,-5.796342,-3.360252,3.265822]],[[-0.374712,9.482151,1.077247,1.630018,-9.195185,-3.996849,2.659899],[3.857586,1.013078,-8.849793,6.711141,7.683932,-0.925935,9.100599],[-4.016941,7.012279,3.692018,-8.904778,7.834508,-0.115809,1.514151]],[[-6.844325,8.087658,0.923456,-0.991248,3.349009,-8.474791,0.055644],[9.233130,-5.975698,1.636366,-9.250575,-1.130310,0.426930,-0.793914],[9.906599,-8.916798,9.297685,-9.071530,-4.093101,-8.127178,-5.025679]],[[-9.663356,-9.544170,-4.343546,1.259577,-0.728755,-3.009990,7.158650],[-3.073614,1.797273,7.554624,3.185633,3.052223,0.310558,-5.304559],[-7.462650,-8.397708,-9.421995,-8.035339,4.163798,-2.463497,7.265173]]], dtype = "float32")#candidate|8485|(8, 3, 7)|const|float32
uop_8486 = relay.sigmoid(const_8485.astype('float32')) # shape=(8, 3, 7)
output = relay.Tuple([uop_8486,])
output2 = relay.Tuple([uop_8486,])
func_8495 = relay.Function([], output)
mod['func_8495'] = func_8495
mod = relay.transform.InferType()(mod)
output = func_8495()
func_8496 = relay.Function([], output)
mutated_mod['func_8496'] = func_8496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8495_call = mod.get_global_var('func_8495')
func_8496_call = mutated_mod.get_global_var('func_8496')
call_8503 = relay.TupleGetItem(func_8495_call(), 0)
call_8504 = relay.TupleGetItem(func_8496_call(), 0)
output = call_8503
output2 = call_8504
func_8523 = relay.Function([], output)
mod['func_8523'] = func_8523
mod = relay.transform.InferType()(mod)
output = func_8523()
func_8524 = relay.Function([], output)
mutated_mod['func_8524'] = func_8524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8495_call = mod.get_global_var('func_8495')
func_8496_call = mutated_mod.get_global_var('func_8496')
call_8633 = relay.TupleGetItem(func_8495_call(), 0)
call_8634 = relay.TupleGetItem(func_8496_call(), 0)
output = call_8633
output2 = call_8634
func_8651 = relay.Function([], output)
mod['func_8651'] = func_8651
mod = relay.transform.InferType()(mod)
mutated_mod['func_8651'] = func_8651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8651_call = mutated_mod.get_global_var('func_8651')
call_8652 = func_8651_call()
output = call_8652
func_8653 = relay.Function([], output)
mutated_mod['func_8653'] = func_8653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8495_call = mod.get_global_var('func_8495')
func_8496_call = mutated_mod.get_global_var('func_8496')
call_8671 = relay.TupleGetItem(func_8495_call(), 0)
call_8672 = relay.TupleGetItem(func_8496_call(), 0)
func_6405_call = mod.get_global_var('func_6405')
func_6410_call = mutated_mod.get_global_var('func_6410')
var_8681 = relay.var("var_8681", dtype = "float64", shape = ())#candidate|8681|()|var|float64
var_8682 = relay.var("var_8682", dtype = "float64", shape = (42,))#candidate|8682|(42,)|var|float64
var_8683 = relay.var("var_8683", dtype = "float64", shape = (1, 560))#candidate|8683|(1, 560)|var|float64
call_8680 = relay.TupleGetItem(func_6405_call(relay.reshape(var_8681.astype('float64'), []), relay.reshape(var_8682.astype('float64'), [7, 1, 6]), relay.reshape(var_8683.astype('float64'), [2, 280]), ), 3)
call_8684 = relay.TupleGetItem(func_6410_call(relay.reshape(var_8681.astype('float64'), []), relay.reshape(var_8682.astype('float64'), [7, 1, 6]), relay.reshape(var_8683.astype('float64'), [2, 280]), ), 3)
output = relay.Tuple([call_8671,call_8680,var_8681,var_8682,var_8683,])
output2 = relay.Tuple([call_8672,call_8684,var_8681,var_8682,var_8683,])
func_8690 = relay.Function([var_8681,var_8682,var_8683,], output)
mod['func_8690'] = func_8690
mod = relay.transform.InferType()(mod)
var_8691 = relay.var("var_8691", dtype = "float64", shape = ())#candidate|8691|()|var|float64
var_8692 = relay.var("var_8692", dtype = "float64", shape = (42,))#candidate|8692|(42,)|var|float64
var_8693 = relay.var("var_8693", dtype = "float64", shape = (1, 560))#candidate|8693|(1, 560)|var|float64
output = func_8690(var_8691,var_8692,var_8693,)
func_8694 = relay.Function([var_8691,var_8692,var_8693,], output)
mutated_mod['func_8694'] = func_8694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8495_call = mod.get_global_var('func_8495')
func_8496_call = mutated_mod.get_global_var('func_8496')
call_8704 = relay.TupleGetItem(func_8495_call(), 0)
call_8705 = relay.TupleGetItem(func_8496_call(), 0)
output = call_8704
output2 = call_8705
func_8708 = relay.Function([], output)
mod['func_8708'] = func_8708
mod = relay.transform.InferType()(mod)
mutated_mod['func_8708'] = func_8708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8708_call = mutated_mod.get_global_var('func_8708')
call_8709 = func_8708_call()
output = call_8709
func_8710 = relay.Function([], output)
mutated_mod['func_8710'] = func_8710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8708_call = mod.get_global_var('func_8708')
func_8710_call = mutated_mod.get_global_var('func_8710')
call_8711 = func_8708_call()
call_8712 = func_8708_call()
func_2833_call = mod.get_global_var('func_2833')
func_2837_call = mutated_mod.get_global_var('func_2837')
var_8737 = relay.var("var_8737", dtype = "uint32", shape = (105, 1))#candidate|8737|(105, 1)|var|uint32
call_8736 = relay.TupleGetItem(func_2833_call(relay.reshape(var_8737.astype('uint32'), [15, 7, 1]), relay.reshape(var_8737.astype('uint32'), [15, 7, 1]), ), 2)
call_8738 = relay.TupleGetItem(func_2837_call(relay.reshape(var_8737.astype('uint32'), [15, 7, 1]), relay.reshape(var_8737.astype('uint32'), [15, 7, 1]), ), 2)
func_7482_call = mod.get_global_var('func_7482')
func_7486_call = mutated_mod.get_global_var('func_7486')
const_8743 = relay.const([-7.970246,8.410734,2.772421,-9.696286,-1.601240,1.233056,7.650578,3.397088], dtype = "float32")#candidate|8743|(8,)|const|float32
call_8742 = func_7482_call(relay.reshape(const_8743.astype('float32'), [2, 2, 2]), relay.reshape(const_8743.astype('float32'), [2, 2, 2]), )
call_8744 = func_7482_call(relay.reshape(const_8743.astype('float32'), [2, 2, 2]), relay.reshape(const_8743.astype('float32'), [2, 2, 2]), )
output = relay.Tuple([call_8711,call_8736,var_8737,call_8742,const_8743,])
output2 = relay.Tuple([call_8712,call_8738,var_8737,call_8744,const_8743,])
func_8751 = relay.Function([var_8737,], output)
mod['func_8751'] = func_8751
mod = relay.transform.InferType()(mod)
mutated_mod['func_8751'] = func_8751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8752 = relay.var("var_8752", dtype = "uint32", shape = (105, 1))#candidate|8752|(105, 1)|var|uint32
func_8751_call = mutated_mod.get_global_var('func_8751')
call_8753 = func_8751_call(var_8752)
output = call_8753
func_8754 = relay.Function([var_8752], output)
mutated_mod['func_8754'] = func_8754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8651_call = mod.get_global_var('func_8651')
func_8653_call = mutated_mod.get_global_var('func_8653')
call_8785 = func_8651_call()
call_8786 = func_8651_call()
output = call_8785
output2 = call_8786
func_8800 = relay.Function([], output)
mod['func_8800'] = func_8800
mod = relay.transform.InferType()(mod)
mutated_mod['func_8800'] = func_8800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8800_call = mutated_mod.get_global_var('func_8800')
call_8801 = func_8800_call()
output = call_8801
func_8802 = relay.Function([], output)
mutated_mod['func_8802'] = func_8802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8651_call = mod.get_global_var('func_8651')
func_8653_call = mutated_mod.get_global_var('func_8653')
call_8806 = func_8651_call()
call_8807 = func_8651_call()
func_5419_call = mod.get_global_var('func_5419')
func_5421_call = mutated_mod.get_global_var('func_5421')
const_8814 = relay.const([-1.668644,9.510558,-4.479750,5.742813,-9.309780,5.125113,8.754098,8.825477,-5.264494,-5.742692,-8.155592,5.021080,-8.760687,-3.849304,9.743036,-5.711859,-1.564722,9.589390,-7.599330,0.477669,-5.731573,-6.432514,-3.638067,2.986665,-1.043102,4.899333,5.514849,9.754544,-9.185411,9.853509,0.071015,-9.294337,7.920086,-7.835774,-3.168619,-8.655310,6.169887,-1.415164,-8.894750,-4.333142,9.254508,2.772659,0.687756,-6.648525,-0.917588,4.760322,-1.922240,-5.021427,3.619828,3.887338,-7.726796,1.989221,-4.057064,-1.952917,7.080587,0.568139,-9.160193,9.186108,7.332768,5.901702,6.738548,0.594091,-7.529101,1.179694,3.817724,4.708503,-6.285325,8.257381,3.007301,0.100732,-5.938681,3.522777,2.339754,-6.969707,8.589883,2.612917,-2.568060,-5.420783,-3.628219,9.203531,-9.930094,7.394160,4.682338,6.591362,-9.688382,6.408498,-0.655418,6.154839,-8.646883,-2.573630,-9.700620,-7.924829,2.455161,3.902584,2.830852,0.658238,-6.176407,-2.915890,0.508116,-2.066155,2.440897,-5.103581,-4.118001,5.886470,-9.637515,-0.040405,3.212523,2.664552,2.906772,-5.271551,1.515950,-0.541854,9.510780,8.505181,9.988070,-1.093682,-6.768299,-7.844837,0.831377,1.675745,0.636462,-6.683624,-7.240893,0.502799,-1.169453,-6.746859,4.104271,8.678606,-7.413000,5.078243,-3.013012,-7.893782,4.300484,-9.524005,-6.189748,-7.876994,2.129833,4.482227,-9.034086,-7.209911,-5.171948,0.790508,8.719003,-4.315257,2.980495,6.166177,-1.306337,-5.734455,-7.212475,-9.373669,-1.424475,1.499363,0.799332,-6.091763,8.381560,-8.662579,9.467729,-3.367182,6.155523,-4.509249,-7.360709,-0.314860,5.417924,-2.525671,4.830919,5.479940,5.227370,-9.990823,1.216010,0.351085,1.117156,-2.057105,0.404633,0.025269,-2.632587,4.394431,-6.211845,3.969911,3.081212,0.495159,-1.616973,-9.120806,0.457359,-4.015471,8.473475,-1.260269,9.149587,-9.015917,2.125356,8.015971,0.502392,-7.570371,6.695154,-3.047696,-9.641046,7.841795,-5.150599,-9.362425,-3.073358,-8.037148,-2.693116,-8.374969,5.838032,-0.431490,7.374897,-1.183705,9.396866,-7.174702,-0.890226,6.719036,-0.365029,8.257926,-7.471776,7.161391,-4.738330,2.552053,-2.187246,1.863089,-7.584642,-5.770815,9.542480,-1.332052,8.787106,6.203039,4.840276,-5.188103,-9.328400,-3.232145,-5.291036,0.511558,2.096203,9.212542,7.333750,-6.621256,7.487514,9.287147,1.785484,0.751753,-2.185542,6.920087,7.336042,4.006486,3.331739,-2.774906,2.474900,2.755602,-4.376565,-3.761984,3.650806,1.581050,5.920529,7.135403,8.009499,-8.809193,-2.746449,9.903680,6.805972,2.652088,4.533150,-2.457898,2.524996,3.108814,5.612105,9.158280,-1.362197,9.388333,1.393203,5.724982,4.935330,-4.026220,4.788066,0.883511,3.355593,9.186090,-3.099450,3.117172,1.986170,-6.442883,3.399939,4.017678,-9.727301,6.095167,-9.978958,-9.045930,-5.643421,8.659111,4.031608,4.706775,3.443777,8.565318,-6.268424,3.768193,5.083986,-6.416647,-4.966801,5.416881,-0.774596,-4.725335,4.290660,-1.830113,-7.156735,2.014556,-2.563413,-2.200052,5.809789,-0.632826,-1.107873,-6.696409,0.724837,-2.964796,-8.077947,-2.000414,3.787328,3.039096,-5.244689,-3.931694,7.705018,-2.014229,-9.828595,6.493815,-1.474483,-9.286973,-2.261731,-5.732263,4.411417,9.314187,-1.847145,0.091797,-4.149470,-0.467433,-0.112173,7.278427,-6.591010,-2.782360,-9.123611,8.209901,9.030871,-1.804779,-6.195385,5.543898,0.489179,3.419942,-0.947206,9.455359,-2.416300,4.119318,4.016756,-4.758025,-9.266680,-1.148096,4.292308,0.536997,2.968994,-4.814950,7.087612,-5.383316,-7.413081,-0.065195,-5.953688,5.204597,-5.369532,3.425375,-0.197897,1.800843,-4.911028,5.971683,2.783222,-6.196180,-6.188850,-6.868454,-7.093127,3.944448,3.585285,-3.422098,1.268665,-0.526444,-9.292752,8.841755,6.850729,-9.017242,2.874888,6.810996,-2.768449,3.622895,-4.744424,-6.703017,-6.725210,1.842398,-0.744621,5.697176,-3.703908,1.052995,-6.409805,0.038305,9.020711,3.691492,9.838900,-5.166832,1.841003,1.311790,0.303642,-4.281096,4.864003,5.195412,1.471054,9.545924,-4.564910,6.586176,-1.472521,5.499041,-4.152429,-3.126233,4.092551,8.291275,-2.336144,0.133835,3.344417,-8.174315,0.358233,-3.096640,-4.596070,-0.099389,-7.292800,4.543394,-9.872433,-0.580070,-7.031868,7.197260,4.434656,-7.100226,3.762643,-0.383963,4.565672,9.773980,-0.613855,-2.827813,0.212909,-4.247287,-0.070968,-7.100949,-4.978833,3.073674,2.760767,-4.536349,4.026025,2.158303,-5.053596,5.364280,-3.671276,6.032194,-5.669953,8.712089,-0.193474,1.303241,-6.862738,-2.651095,6.506614,4.895490,-8.088951,6.549000,-3.830413,-6.981308,-4.941803,-8.178725,-8.382699,-1.305230,1.131839,-6.797465,1.780122,-3.653080,-2.786269,-0.219007,-7.609220,-7.533990,5.171989,7.282464,-8.566959,8.339818,2.287404,3.336585,1.575029,2.381855,-5.816353,-0.943421,9.660725,4.527322,6.748430,0.430778,7.197811,-7.897038,-4.240446,-1.941737,0.760850,7.601685,9.408013,-8.254176,-1.124386,-6.699213,-8.765951,-8.126513,0.668445,4.483544,5.321077,7.221094,-7.568253,-6.175522,3.659230,-3.130965,-9.621812,6.439690,-5.310570,-9.714959,1.588502,1.675181,9.666932,-8.759555,8.734347,-5.950367,-6.200877,3.586228,5.820426,6.252699,-2.752212,-8.391332,-2.711504,9.986358,5.392285,0.626184,-9.814577,-6.050820,1.803451,-3.529770,-6.342629,0.955998,-5.615128,-4.096691,-4.597679,-1.453589,3.338143,3.753576,7.361343,-4.188720,-4.649861,1.622408,0.606375,3.693471,-8.421776,0.197196,-9.160768,-4.140152,-7.758356,-0.559950,-9.118544,7.145763,4.876419,3.820127,8.766137,-8.097637,-5.866401,-8.923161,0.434106,-2.634130,-8.416241,1.409298,-8.650565,9.974398,-3.976703,-4.599456,8.571669,-2.320913,-9.936533,6.558564,2.602438,-6.693140,1.646271,9.686591,-3.408170,0.104191,-8.025119,6.634383,-9.099172,5.295966,-1.853362,1.278332,3.455036,1.502099,-6.288048,-9.853605,-9.914583,4.610408,2.251824,-5.066189,-5.387953,-6.038228,-4.439524,2.395253,6.659394,5.754888,-1.717962,3.145876,-6.570758,-9.011651,1.705155,1.813220,4.699401,0.003564,6.338625,-7.582864,3.775142,-1.279328,-6.513646,-5.617796,-2.067890,6.166056,4.735770,8.079162,3.231607,-4.891284,-5.688253,-5.309754,-6.950502,-1.847036,-9.013329,3.416360,-7.341544,6.873937,7.449156,-3.910982,-8.516987,3.300507,-1.124879,6.846815,-9.579351,-5.034675,0.899237,-2.707620,-6.425491,-7.685366,8.672772,3.493131,8.603965,-0.630275,-2.678132,5.892841,-4.990137,-1.888117,4.436745,6.398956,1.541011,-8.117809,-5.789437,-0.866336,5.809189,6.342214,-5.986435,-7.575568,-6.822784,3.704741,6.938676,8.778912,7.803018,-4.827184,9.854765,-7.990431,0.094867,-3.553576,5.291127,8.707385,6.638512,0.997247,6.982894,3.108923,-2.798919,-0.456516,8.230374,7.075485,-4.235666,0.327796,1.003711,-1.428631,-1.406802,6.776301,-9.292780,2.551538,7.135130,2.264499,-2.502089,-6.027507,0.193010,9.476979,-0.691253,0.937986,-9.638953,7.875241,-2.149468,6.225586,-5.467864,-7.144931,6.646059,-1.493351,-6.374121,2.922562,-4.430700,3.460513,-9.668874,5.751001,-7.048353,2.266575,3.952631,-2.607437,1.958788,0.496153,-8.247023,-8.331740,2.969734,8.747757,-7.325679,-4.089944,-9.176255,5.701642,-2.377090,-0.581798,7.853334,-5.920701,-9.818519,0.697914,-6.229047,9.959907,-6.295018,-7.137937,-5.184533,-4.459842,-2.574057,0.570510,-1.290309,4.263200,8.102401,6.096180,-2.993327,-9.431910,6.229001,-2.918330,-5.541621,-1.211877,3.810576,-2.495190,-0.566200,-5.636743,5.684234,-0.195934,-3.889887,8.697963,9.921735,2.427802,-3.229002,-0.807586,7.354746,8.973335,-1.131994,-9.687806,-0.975283,8.004039,8.722279,9.600107,5.510257,2.327394,7.445239,-8.904225,5.247995,-0.283017,1.595619,5.008347,0.039640,-5.056285,1.142384,7.706751,2.871361,-4.810661,9.592755,4.758509,7.324416,-0.409966,5.440000,0.940163,-3.774070,-9.990834,-0.317563,-9.670135,-3.613783,2.426924,-5.054384,8.197093,5.594292,-0.773697,9.624320,-1.837200,-5.489573,-4.039603,4.189612,7.911092,3.527011,1.700163,2.400508,-8.610111,-4.318486,4.885819,-5.343976,-2.895307,1.653540,-2.412702,-6.448591,3.028964,-5.968086,0.354086,-7.564666,4.094925,-6.818288,6.029734,2.898863,-7.939609,-9.493159,-4.899212,-4.923549,-5.629912,3.449442,4.808813,3.631458,7.740066,-8.934289,5.197289,8.396179,-3.980592,8.050889,4.293048,2.677167,-9.697988,-5.719121,3.889430,7.800664,-4.375253,-2.205856,2.354756,-8.172601,6.559391,6.481117,4.508932,-6.668308,-3.695735,-8.118385,-9.815045,6.731216,8.212371,9.984109,8.789643,-5.467541,1.517360,1.008770,3.068875,4.663331,-9.565787,5.360347,0.076422,5.693163,-6.634284,-6.747442,-6.745595,0.891214,1.949657,-2.766703,-2.003819,-6.382234,7.443948,-9.856611,1.275388,-3.866203,-4.497353,-6.514606,2.919730,4.873623,8.080740,-1.758105,-2.372576,9.204565,-1.848360,-2.939958,-4.981002,-4.552561,-7.341746,-0.405751,3.173513,3.202623,5.391361,6.131152,2.629714,-3.005627,-7.059471,-5.114096,-7.526048,-2.820363,9.752057,2.978621,6.045351,-4.598961,-7.103813,-0.869560,9.807508,5.478470,3.298888,4.932416,-3.949347,1.277098,-6.293055,5.231386,6.344323,0.356773,-7.898350,-0.174001,-4.425483,6.357509,-1.113725,-6.308985,9.764194,-9.755770,4.301894,8.540812,1.988825,-2.401487,9.324348,-1.377135,-5.050041,3.968660,6.592197,-9.230072,-2.806164,-1.600759,2.757281,-6.882213,4.454453,7.861101,-9.330459,-3.279030,4.259723,3.796590,-2.896548,1.835568,1.979548,9.196125,0.419528,1.804629,1.418545,-2.684951,-0.371387,8.763205,5.565481,-0.292258,1.913896,7.215122,-1.797793,2.515240,-5.399629,5.748835,-7.750035,-9.184962,-4.157899,3.641512,-4.975147,7.709525,5.896795,-9.630693,0.385496,-1.983604,3.501800,-1.430118,6.447653,-8.192097,-5.272369,0.307827,-1.572818,-0.618438,7.944244,-4.141552,1.116280,4.745275,-0.633095,3.155041,-3.325338,-1.180508,4.814574,2.529891,8.351507,1.768324,2.038309,-7.469872,-1.383740,2.059400,-0.791364,1.787826,7.394168,-7.946641,-8.817454,9.709020,-7.780268,-3.382564,-3.563158,-6.470966,0.098719,-4.465507,-4.908532,-3.927584,7.531198,5.805988,7.747044,-1.941638,1.145616,-9.637273,-3.471050,-3.602033,-0.485820,4.889125,5.483465,-5.293931,9.564091,6.829652,7.834632,-1.519351,8.958477,-3.438852,8.926600,4.620832,-8.705182,-7.071644,-8.470396,9.452055,-3.348093,6.009479,-1.900732,-8.113194,-3.584616,4.805466,-5.761487,5.231227,8.229788,-8.538873,-5.947352,2.826899,-0.971599,3.847147,7.164548,0.804754,2.802219,4.517036,-6.044783,6.530825,0.719838,-9.987711,5.918439,-1.794022,1.304982,5.219875,-3.946696,-4.779113,-3.723596,9.104058,-0.553518,3.701883,-5.359091,9.801954,5.962423,6.423320,-4.923430,-3.507835,6.814477,-9.638125,6.026101,-8.419042,3.146087,-0.839406,6.856530,9.871916,-5.778970,0.409967,8.241880,7.684470,-4.679645,8.604982,-3.195717,-1.269514,-8.729195,2.026642,-6.337671,-0.925240,-1.780853,8.194745,-1.419090,-3.367278,-2.058663,5.230845,-4.427511,-0.177361,-5.284503,8.014664,1.687791,-1.561172,5.897093,0.361039,-9.723749,3.314464,2.598631,-2.373729,1.947940,-1.154714,-6.477028,7.833278,2.122885,0.855410,2.702426,-4.320767,-1.620093,3.395642,-0.566242,4.786396,-5.971337,-2.974380,-0.172984,7.946117,8.215821,0.754464,-8.847269,-1.454591,-1.566965,1.418973,1.671447,-1.337576,-8.740558,3.701209,-5.889545,9.411029,4.500544,-8.275798,-3.344004,4.344409,-4.900960,-5.253022,2.829186,-2.061095,-4.740952,0.365094,9.749947,-1.051621,3.929486,8.962932,-8.723713,-5.856009,-6.531159,8.651264,3.592946,-5.436478,9.839647,-0.070948,0.519942,-4.432462,-4.159098,2.984364,8.753263,1.874937,2.073826,6.245018,-6.046214,7.237176,-5.514339,3.427819,4.734954,2.568071,-9.728627,4.462346,-8.375472,-6.365629,-2.008460,8.558223,2.730681,-0.889003,6.457108,-2.963722,-0.709554,-2.939481,1.305075,-7.245386,4.635638,6.162407,7.303542,3.045093,9.902840,-2.583792,-0.649454,1.272944,-3.962966,-1.448450,7.867691,6.532389,9.871495,7.597657,-1.738528,7.992265,6.270824,5.926567,-7.667797,6.477512,-6.332697,9.738670,0.211836,-0.141960,-3.353069,5.827766,-4.195914,0.913062,-1.294402,-2.708898,-7.916004,-7.868915,-9.497550,-8.501064,-0.452825,-0.040069,0.827953,6.139519,0.834411,3.665592,2.244181,7.818315,1.139329,1.607323,3.320572,-9.628408,2.956325,-8.137134,4.863808,-4.956071,-8.127548,-8.470627,-6.721270,-0.933690,-9.925682,-1.478225,-3.571547,0.039189,-0.172268,9.533137,-0.077471,-5.209901,-9.895433,9.480230,9.445169,8.917094,1.095434,-9.543925,-5.005539,8.484949,-7.095650,-6.837796,4.802863,-7.340542,-7.012025,-3.779695,-8.439216,-6.871796,6.232349,-5.704859,-6.511690,-7.251588,8.309481,3.733495,4.001699,-1.940153,-7.816794,-0.190763,-8.105878,-6.344357,-6.590088,3.757390,5.619272,8.650498,-9.214912,1.420943,2.762970,-7.665598,-2.176873,-4.942047,-6.886413,1.992512,8.218672,-4.857791,8.338298,-9.430298,2.657210,-8.491139,-3.730901,3.496690,0.575257,9.556346,-3.619154,2.772991,0.217052,-0.910059,4.484246,2.459764,5.554923,-9.490180,-2.762988,-7.406518,9.558408,-6.974991,-7.440649,-3.864714,-9.118142,5.367821,1.868778,-1.652967,-7.027677,-2.918288,-3.824230,7.279390,6.178813,-9.351733,-0.609742,-7.606874,7.175899,0.236673,-7.097880,0.354965,0.748342,-5.723994,-5.936389,-9.312106,7.575086,-8.458726,-9.752221,-2.873461,2.215126,2.624001,6.529605,3.557656,-7.232451,8.058604,-7.621013,0.905647,4.970165,-1.724929,-9.144687,-9.860407,0.298754,-9.855466,-5.813994,-5.311131,4.523576,-8.339376,1.184209,-2.591009,-6.310089,-4.307064,-6.010335,8.238708,9.701950,7.690638,-2.543305,-6.980305,-9.304544,0.071258,9.188087,4.654344,3.065292,8.302621,1.565021,-7.965365,2.700390,8.470513,-5.092726,6.489845,-6.991640,-1.374220,5.129947,2.346020,7.965061,-9.222405,-2.961124,2.737462,9.407298,-6.784470,-3.444256,8.814764,4.039682,-5.560361,0.165292,-5.358873,-5.082354,-6.934005,3.401852,-2.067681,-4.874445,0.154550,-0.989709,-9.060872,7.778430,-1.056954,3.917676,-4.763092,-5.281558,-3.546655,-4.168660,-5.570389,7.933591,-3.179668,-1.250960,3.660710,-8.802707,5.739382,-1.764581,-0.376138,-7.152785,2.123201,-8.112070,-9.441052,-6.323212,-7.075468,3.192320,-4.355771,6.185190,0.347030,6.370802,-3.077473,4.198528,-0.840909,4.089405,-2.347730,2.147496,1.091276,5.463252,4.305777,5.500703,-2.469093,-6.406883,3.519792,-9.210978,4.682792,-1.048550,1.127876,5.263002,0.119871,-4.583399,-3.757822,1.343622,-4.290435,8.192310,4.607626,0.226921,-1.768161,-3.455516,-6.932214,-2.638822,-2.663786,7.550930,5.173249,6.026353,-7.350345,-3.398081,0.947027,-7.210547,-4.566609,8.514538,-9.695863,1.810421,-2.029313,3.499432,-5.313127,-4.131117,-1.246474,-4.054907,-0.732289,-2.723772,-7.918532,3.158237,-6.355245,2.120653,-4.608685,-7.218449,9.153234,2.855530,8.594183,-9.460652,-2.242138,-3.342991,0.374599,-7.023364,-7.353972,-4.260253,5.920557,5.775041,7.916595,-7.931618,0.122512,2.302704,0.682898,4.197348,3.840942,-7.870332,-7.418114,-8.261531,-0.326195,-3.012819,8.400245,1.738321,-4.739278,-7.186035,1.625354,6.451924,-9.807654,7.172860,3.468101,-2.175543,3.846754,9.950594,-4.589990,4.831904,-0.739613,4.358389,-6.799269,5.388613,0.654720,-7.211221,-9.246313,-3.900206,-3.627021,-4.608358,-2.449649,-4.926759,-8.399466,7.755467,2.270628,3.614494,-1.931110,4.409339,8.274166,-0.114983,2.345678,7.281850,-9.626769,-7.494126,3.719305,3.424882,5.175106,4.346765,3.294639,-0.642773,2.067009,-2.648634,3.227693,-2.845212,-4.458664,2.774153,-3.984031,-7.136397,-6.934262,0.478624,2.720125,0.498713,3.281267,-4.215948,-4.831976,8.496429,-6.304426,7.010293,-5.249127,-9.763920,-9.539980,-1.051839,-9.858587,-1.327401,3.290541,2.693745,-0.543568,4.682713,9.409762,-6.364319,4.240487,-0.425854,5.717815,6.505688,3.471482,3.844408,8.217738,-5.666592,-8.397039,2.527102,1.814971,-9.398763,2.292298,2.667567,-8.035279,-4.106142,6.016109,2.917191,3.649185,-8.303846,9.404216,-9.500651,3.891948,-0.333765,2.309603,4.335234,-9.347354,-3.560066,-6.042491,3.871854,0.176532,-9.346189,-7.409354,-6.952180,-7.356367,-7.725055,-6.570425,-8.877798,-2.240059,5.740316,-4.987643,-3.224779,-1.957993,4.657463,-3.565955,4.847027,-1.115291,-3.894053,-7.804521,-1.951723,-9.481980,-4.424069,-2.487199,-9.692071,2.542422,-9.755092,4.084194,1.375969,-0.214791,-6.823313,0.187246,-6.120584,4.316724,-4.546859,4.994469,-5.242900,3.398425,-8.215121,3.993797,-5.089394,-8.967814,4.608237,7.305078,-7.581071,2.907698,-6.807094,-2.048085,-9.406199,-1.621521,0.865267,-8.255746,9.118697,-0.989158,8.682707,-1.204319,5.819331,-6.700310,-2.161451,4.803361,7.658083,1.148225,2.129495,6.971355,2.648657,-7.716221,0.358547,-5.897101,-6.728372,1.048030,5.074542,-3.545212,-4.918653,8.781951,-7.098071,9.316075,7.143380,-3.848489,3.974482,-9.848546,3.521555,6.365397,3.670782], dtype = "float64")#candidate|8814|(1694,)|const|float64
call_8813 = relay.TupleGetItem(func_5419_call(relay.reshape(const_8814.astype('float64'), [11, 14, 11])), 0)
call_8815 = relay.TupleGetItem(func_5421_call(relay.reshape(const_8814.astype('float64'), [11, 14, 11])), 0)
func_8751_call = mod.get_global_var('func_8751')
func_8754_call = mutated_mod.get_global_var('func_8754')
const_8819 = relay.const([9,-3,7,-1,7,-3,-4,-5,6,4,-1,-10,10,-1,8,2,-4,-8,4,9,5,-8,10,3,5,8,6,6,-5,-2,7,-10,-1,-5,-10,-4,-6,-5,6,-4,9,-6,1,2,8,-9,-10,-9,-9,-5,9,-5,4,5,2,-10,3,-6,9,-2,-4,4,-2,-4,-7,10,-10,3,7,-3,-9,-9,-10,-9,-3,-6,6,10,2,8,2,-5,3,6,8,-8,-4,-1,2,-5,-5,-3,-2,-6,8,6,-2,-4,-1,-4,2,7,-10,10,10], dtype = "uint32")#candidate|8819|(105,)|const|uint32
call_8818 = relay.TupleGetItem(func_8751_call(relay.reshape(const_8819.astype('uint32'), [105, 1])), 1)
call_8820 = relay.TupleGetItem(func_8754_call(relay.reshape(const_8819.astype('uint32'), [105, 1])), 1)
output = relay.Tuple([call_8806,call_8813,const_8814,call_8818,const_8819,])
output2 = relay.Tuple([call_8807,call_8815,const_8814,call_8820,const_8819,])
func_8829 = relay.Function([], output)
mod['func_8829'] = func_8829
mod = relay.transform.InferType()(mod)
output = func_8829()
func_8830 = relay.Function([], output)
mutated_mod['func_8830'] = func_8830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8800_call = mod.get_global_var('func_8800')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_8893 = func_8800_call()
call_8894 = func_8800_call()
output = relay.Tuple([call_8893,])
output2 = relay.Tuple([call_8894,])
func_8902 = relay.Function([], output)
mod['func_8902'] = func_8902
mod = relay.transform.InferType()(mod)
output = func_8902()
func_8903 = relay.Function([], output)
mutated_mod['func_8903'] = func_8903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8902_call = mod.get_global_var('func_8902')
func_8903_call = mutated_mod.get_global_var('func_8903')
call_8917 = relay.TupleGetItem(func_8902_call(), 0)
call_8918 = relay.TupleGetItem(func_8903_call(), 0)
uop_8933 = relay.atan(call_8917.astype('float64')) # shape=(8, 3, 7)
uop_8935 = relay.atan(call_8918.astype('float64')) # shape=(8, 3, 7)
func_755_call = mod.get_global_var('func_755')
func_758_call = mutated_mod.get_global_var('func_758')
const_8943 = relay.const([[1.556887,8.595379,-5.302019,-7.617123,3.080060,-7.037887,5.425218,3.441608,0.568549,-9.166901,-0.449762,9.377216,0.164041,-5.753372,1.901991,-6.506297,3.017642,6.558658,-5.021678,-9.075727,-3.933440,6.128239,-2.496350,5.479195,-6.680076,5.718804,4.215303,-7.843724,6.802431,-2.754201,-8.545834,7.743157,-7.147186,-2.352321,-8.902599,0.767989,9.239953,-3.671456,9.223335,7.629356,2.993640,-5.337100,0.835974,-1.025353,-9.970540,2.548465,0.075195,-1.082714,-3.282234,-6.419845,2.403849,0.051743,3.728152,-5.129891,0.516394,-7.341347,-2.666613,6.542176,1.150582,-4.471790,-0.795849,-6.907249,-2.735770,-7.058596,7.304522,5.316757,-5.224757,9.704709,9.153114,-5.717690,3.717148,9.561564,-1.939456,-8.167648,-6.209010,3.374327,-7.069210,6.780199,-8.688267,4.079067,-1.444471,3.464804,8.864366,-0.618865,-4.137455,-4.560887,3.918220,-3.888392,-5.732784,2.353765,2.804095,-9.412450,5.868111,4.874635,3.308746,9.637384,6.693328,-4.992723,-9.563739],[1.021618,1.150714,-6.086516,-5.499850,-3.067018,9.395989,7.466048,-6.082773,4.706165,5.228940,-1.314059,8.821160,8.090026,-7.583591,-6.124172,-2.201657,3.642963,6.852856,1.137534,-8.292952,-8.464466,0.355477,6.203992,9.191113,0.536774,6.090857,9.547029,-9.901816,6.448356,-3.260395,3.804447,-6.072760,9.269243,-4.880445,5.555040,-4.246461,3.332923,1.693331,-2.164129,4.651810,-4.897368,6.443782,4.538191,-1.652392,-8.362347,-2.403580,4.777474,-3.424565,-0.784718,3.884225,-1.924159,-6.204980,-6.862397,-9.516360,-9.630793,-0.191305,-6.288465,8.006854,9.847101,-8.331277,-8.002361,8.533030,5.904949,-0.392623,4.185327,8.542388,-6.828051,6.836025,-5.613450,1.750501,0.013631,6.641632,5.706971,3.790643,-2.110509,-4.626396,0.450893,-3.380042,2.324829,-5.325012,8.996424,-1.818514,1.978143,-3.703437,7.525158,4.387585,7.735391,-1.041333,2.758747,-6.239623,-8.439861,-4.667111,-7.855571,-9.779394,-7.042857,-1.913788,0.407729,4.723908,-7.523339],[-7.267723,7.802521,-9.320412,-0.421777,5.085725,7.446383,8.768742,-7.567800,4.173767,-3.181402,-8.305138,-6.497786,-0.516073,-9.538828,5.671706,6.072774,-8.617167,4.611540,-8.679960,-7.030831,8.993779,9.157274,8.975062,-3.176702,-4.940022,-8.005985,3.286260,-3.212300,-8.587620,3.242208,8.929434,0.995468,6.663192,0.896702,-8.460982,7.012648,5.341007,-2.678581,-9.948579,9.719381,-2.282729,-8.363249,-8.450151,4.322311,5.693844,-1.415227,-0.320010,-3.986864,-2.164359,1.975966,1.010806,-3.392247,5.630167,9.932661,-8.619364,-3.461978,7.844808,-4.438173,1.357527,-2.447575,6.350724,-4.690584,1.607316,9.215396,-9.298420,-8.285634,-9.046739,-9.265954,-6.570954,9.539643,-6.746217,0.901655,-7.555680,2.736076,8.170135,-2.337199,6.265781,-9.869968,-7.658887,-0.208411,-9.769213,-1.933274,-5.602328,-7.856710,3.682467,5.873211,-3.449904,6.112508,-5.538040,-4.278458,-0.854309,-9.529738,9.715083,-7.382441,5.841678,-1.358401,-2.186016,-7.924283,4.053614]], dtype = "float32")#candidate|8943|(3, 99)|const|float32
call_8942 = relay.TupleGetItem(func_755_call(relay.reshape(const_8943.astype('float32'), [11, 9, 3])), 1)
call_8944 = relay.TupleGetItem(func_758_call(relay.reshape(const_8943.astype('float32'), [11, 9, 3])), 1)
output = relay.Tuple([uop_8933,call_8942,const_8943,])
output2 = relay.Tuple([uop_8935,call_8944,const_8943,])
func_8947 = relay.Function([], output)
mod['func_8947'] = func_8947
mod = relay.transform.InferType()(mod)
output = func_8947()
func_8948 = relay.Function([], output)
mutated_mod['func_8948'] = func_8948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8651_call = mod.get_global_var('func_8651')
func_8653_call = mutated_mod.get_global_var('func_8653')
call_9068 = func_8651_call()
call_9069 = func_8651_call()
uop_9076 = relay.rsqrt(call_9068.astype('float64')) # shape=(8, 3, 7)
uop_9078 = relay.rsqrt(call_9069.astype('float64')) # shape=(8, 3, 7)
func_8829_call = mod.get_global_var('func_8829')
func_8830_call = mutated_mod.get_global_var('func_8830')
call_9094 = relay.TupleGetItem(func_8829_call(), 1)
call_9095 = relay.TupleGetItem(func_8830_call(), 1)
output = relay.Tuple([uop_9076,call_9094,])
output2 = relay.Tuple([uop_9078,call_9095,])
func_9104 = relay.Function([], output)
mod['func_9104'] = func_9104
mod = relay.transform.InferType()(mod)
mutated_mod['func_9104'] = func_9104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9104_call = mutated_mod.get_global_var('func_9104')
call_9105 = func_9104_call()
output = call_9105
func_9106 = relay.Function([], output)
mutated_mod['func_9106'] = func_9106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8523_call = mod.get_global_var('func_8523')
func_8524_call = mutated_mod.get_global_var('func_8524')
call_9189 = func_8523_call()
call_9190 = func_8523_call()
func_8902_call = mod.get_global_var('func_8902')
func_8903_call = mutated_mod.get_global_var('func_8903')
call_9192 = relay.TupleGetItem(func_8902_call(), 0)
call_9193 = relay.TupleGetItem(func_8903_call(), 0)
output = relay.Tuple([call_9189,call_9192,])
output2 = relay.Tuple([call_9190,call_9193,])
func_9200 = relay.Function([], output)
mod['func_9200'] = func_9200
mod = relay.transform.InferType()(mod)
mutated_mod['func_9200'] = func_9200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9200_call = mutated_mod.get_global_var('func_9200')
call_9201 = func_9200_call()
output = call_9201
func_9202 = relay.Function([], output)
mutated_mod['func_9202'] = func_9202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8902_call = mod.get_global_var('func_8902')
func_8903_call = mutated_mod.get_global_var('func_8903')
call_9298 = relay.TupleGetItem(func_8902_call(), 0)
call_9299 = relay.TupleGetItem(func_8903_call(), 0)
func_8523_call = mod.get_global_var('func_8523')
func_8524_call = mutated_mod.get_global_var('func_8524')
call_9309 = func_8523_call()
call_9310 = func_8523_call()
func_8708_call = mod.get_global_var('func_8708')
func_8710_call = mutated_mod.get_global_var('func_8710')
call_9312 = func_8708_call()
call_9313 = func_8708_call()
output = relay.Tuple([call_9298,call_9309,call_9312,])
output2 = relay.Tuple([call_9299,call_9310,call_9313,])
func_9317 = relay.Function([], output)
mod['func_9317'] = func_9317
mod = relay.transform.InferType()(mod)
mutated_mod['func_9317'] = func_9317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9317_call = mutated_mod.get_global_var('func_9317')
call_9318 = func_9317_call()
output = call_9318
func_9319 = relay.Function([], output)
mutated_mod['func_9319'] = func_9319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8902_call = mod.get_global_var('func_8902')
func_8903_call = mutated_mod.get_global_var('func_8903')
call_9368 = relay.TupleGetItem(func_8902_call(), 0)
call_9369 = relay.TupleGetItem(func_8903_call(), 0)
output = call_9368
output2 = call_9369
func_9370 = relay.Function([], output)
mod['func_9370'] = func_9370
mod = relay.transform.InferType()(mod)
mutated_mod['func_9370'] = func_9370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9370_call = mutated_mod.get_global_var('func_9370')
call_9371 = func_9370_call()
output = call_9371
func_9372 = relay.Function([], output)
mutated_mod['func_9372'] = func_9372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8651_call = mod.get_global_var('func_8651')
func_8653_call = mutated_mod.get_global_var('func_8653')
call_9628 = func_8651_call()
call_9629 = func_8651_call()
output = call_9628
output2 = call_9629
func_9631 = relay.Function([], output)
mod['func_9631'] = func_9631
mod = relay.transform.InferType()(mod)
output = func_9631()
func_9632 = relay.Function([], output)
mutated_mod['func_9632'] = func_9632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8495_call = mod.get_global_var('func_8495')
func_8496_call = mutated_mod.get_global_var('func_8496')
call_9710 = relay.TupleGetItem(func_8495_call(), 0)
call_9711 = relay.TupleGetItem(func_8496_call(), 0)
func_8651_call = mod.get_global_var('func_8651')
func_8653_call = mutated_mod.get_global_var('func_8653')
call_9719 = func_8651_call()
call_9720 = func_8651_call()
output = relay.Tuple([call_9710,call_9719,])
output2 = relay.Tuple([call_9711,call_9720,])
func_9723 = relay.Function([], output)
mod['func_9723'] = func_9723
mod = relay.transform.InferType()(mod)
mutated_mod['func_9723'] = func_9723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9723_call = mutated_mod.get_global_var('func_9723')
call_9724 = func_9723_call()
output = call_9724
func_9725 = relay.Function([], output)
mutated_mod['func_9725'] = func_9725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9723_call = mod.get_global_var('func_9723')
func_9725_call = mutated_mod.get_global_var('func_9725')
call_9728 = relay.TupleGetItem(func_9723_call(), 0)
call_9729 = relay.TupleGetItem(func_9725_call(), 0)
var_9751 = relay.var("var_9751", dtype = "float32", shape = (8, 3, 7))#candidate|9751|(8, 3, 7)|var|float32
bop_9752 = relay.subtract(call_9728.astype('uint8'), relay.reshape(var_9751.astype('uint8'), relay.shape_of(call_9728))) # shape=(8, 3, 7)
bop_9755 = relay.subtract(call_9729.astype('uint8'), relay.reshape(var_9751.astype('uint8'), relay.shape_of(call_9729))) # shape=(8, 3, 7)
func_7571_call = mod.get_global_var('func_7571')
func_7575_call = mutated_mod.get_global_var('func_7575')
const_9777 = relay.const([2.705643,-5.028547,0.204280,8.550973,-6.077962,-9.730045,-7.198870,9.174118,-6.426968,0.815807,8.828013,6.699692,-1.586185,3.125293,-4.225192,5.532156,6.096067,8.229978,-8.717677,9.861957,-8.618799,-1.607798,9.782916,9.580702,-4.830759,-9.708761,4.140117,-8.535934,-5.292562,0.205039,7.179173,0.353789,-9.094006,6.343328,4.813935,2.032928,-0.290180,-9.301090,-4.597586,-0.631193,-3.472771,-3.781974,-1.930441,5.173545,-7.295300,4.394747,-1.080291,0.206954,-4.503035,9.524755,6.504150,6.373503,-4.042380,7.674285,3.609399,-8.929670,-1.674063,0.085348,2.021276,-5.022542,3.549816,4.646966,-5.895773,-9.348442,3.252133,-8.009830,6.942112,4.735243,-4.302469,-8.276600,-2.235557,8.584366,2.921024,7.784033,-6.822503,5.683239,-7.859485,9.242523,7.666449,7.858664,9.309842,3.903868,6.821613,-8.343236,-2.464637,-5.146019,1.194173,2.341676,-3.122971,-1.591622,-1.226300,5.281445,-7.934735,8.649936,-9.721758,2.677453,5.060713,-1.597680,3.768244,-2.841740,4.912973,-5.824133,-4.565259,-3.718970,-0.880518,8.775680,-5.849964,6.286943,6.477343,-4.132096,4.556129,7.554504,-5.838676,-6.674260,8.983385,2.566378,3.206670,0.943823,-6.145416,-5.458385,-8.021267,6.201238,-0.771212,-0.387063,-0.346818,-1.349072,-4.760312,-9.507428,7.024210,-7.710493,9.963156,-8.529083,8.076629,-1.371794,3.825479,-0.039041,5.769464,-9.694665,5.988762,8.585329,5.742695,4.251577,-5.514581,-7.848478,-3.701108,-5.036132,5.589612,-3.945331,-7.531126,-3.534001,-3.297740,-4.330208,-8.464672,6.759832,7.864598,7.708580,-4.058845,-0.619531,-1.885958,8.126146,5.223660,-9.892124,-7.571595,9.994911,-8.823644,-5.446592,-0.638706,-2.271637,2.291720,-8.760014,-5.007468,5.468852,6.098617,7.015338,-2.312469,-5.179873,-9.563893,-2.931788,-2.829656,-5.378039,4.622166,2.232844,8.844586,4.769706,7.400956,2.113825,5.575052,3.552575,-1.446902,1.034223,0.309063,-0.871267,-3.955940,-4.804493,-3.027437,9.290697,1.923336,5.699127,-4.917129,4.741577,0.758368,-4.416179,8.540403,7.207348,-7.739988,-7.359079,-9.066444,-4.893552,-9.560883,3.279339,3.155046,-2.986245,2.354255,8.462823,-9.101267,-4.884850,7.335619,4.685144,-2.017101,-9.465741,9.811312,-9.222335,5.073652,-1.438426,6.295193,-6.781458,6.901198,7.692702,-3.049667,-8.526997,3.715146,-5.830438,4.003304,0.973635,-7.089230,3.050798,-8.010219,-3.722624,-7.032545,8.648959,-3.588038,-7.236826,4.686535,4.547740,-1.297302,-5.589858,-1.469566,-5.257680,-4.868310,9.059281,1.442589,-3.494702,-2.409242,2.288139,-8.469781,-4.323097,-9.674183,-5.322308,-1.079777,3.851918,7.307095,-2.735444,8.058682,-7.623581,-3.647732,-6.017765,-5.653010,1.708613,3.681104,2.747911,-1.309842,8.616905,-3.212731,-7.170009,5.842181,5.762440,0.666054,-3.324387,-9.198225,0.985636,-9.705704,-7.608269,-9.411242,6.102051,-9.075354,1.275482,-0.417840,7.992633,-3.047483,6.614027,9.338369,3.821230,-4.016442,6.629732,-6.915528,3.283003,4.187306,4.083530,3.813836,3.669471,9.881593,-7.779103,2.173240,-9.030564,1.747454,5.091579,-1.439553,-6.258413,-8.007947,2.546866,-0.736522,0.214216,-3.330605,4.104678,7.962436,3.022506,-8.491616,-3.804781,7.299349,7.960082,-0.242451,7.807044,2.545252,8.750347,-0.152716,-2.956213,2.658810,-2.214864,-9.339203,-9.238619,-3.356683,-3.713226,3.868183,4.722156,9.847235,-8.768514], dtype = "float64")#candidate|9777|(336,)|const|float64
const_9778 = relay.const([[8.941153,-9.707187,-4.028376,4.687384,5.366283,-1.348229,-4.430210,1.414871,1.054154,0.129991,3.536478,-9.206983,5.314155,-3.676659,-2.502484,6.550915,0.234439,-8.596532,-4.502772,-7.690562,7.742920,9.458756,4.041927,5.802981,8.382982,0.452908,9.389023,-3.574490,-6.183797,3.596317,-3.858372,-3.847034,-5.124304,8.061977,-6.082668,0.362711,4.480891,4.875426,3.812246,0.239908,-0.631388,-1.520085,-5.117841,-7.998776,4.576747,-0.086999,-7.881945,7.019292,6.248613,7.012085,-6.343429,4.943871,1.551213,-9.519985,6.903348,-5.312356,1.871895,-2.105280,7.169118,-9.489128,-4.081362,5.336328,4.401951,1.474708,1.376720,-2.223142,6.749292,0.168056,0.192209,-9.318797,-6.997664,-9.961466,9.477505,4.328084,8.945122,1.404853,-7.431847,-8.015750,0.619672,-5.523286,5.618475,-4.405096,6.717659,8.163902,6.569923,7.208011,-9.490389,2.928103,-1.829728,7.680019,-2.254183,8.556124,1.106703,-9.137200,-5.475504,6.740889,-4.481690,-4.492168,-4.508218,-1.189116,8.034935,9.435229,6.331525,7.789816,0.257005,3.615420,6.876564,5.364762,-7.834254,4.142194],[-4.807001,-1.210074,-2.648703,-5.411236,3.229195,2.302295,7.931199,-5.994509,5.530545,-8.300687,-0.442828,9.848980,9.569851,-1.154179,-3.532212,-9.770555,6.099262,9.932940,4.574608,-9.896617,-5.632705,-1.715094,-2.399861,-8.508814,-0.013016,-9.505641,-5.115428,9.369179,-3.592316,-9.199239,6.642452,-9.104824,6.163769,7.537515,0.914313,9.537043,5.821379,2.957806,4.788406,2.845896,7.289672,-1.776721,4.323902,5.630668,-6.384763,9.679827,-4.559518,-5.649237,1.502355,-2.150357,3.326749,2.661803,7.522506,-5.734209,-8.155245,1.492468,9.584417,-1.110869,8.450850,4.459860,6.945630,3.002639,-5.021653,1.612837,3.359898,-1.758953,-1.069484,5.455452,1.043770,-7.796825,-6.505831,2.885207,5.529029,-6.493597,8.776096,-9.128715,-8.903712,-7.935756,9.404043,8.954438,4.582639,2.565726,6.721905,-5.933826,-4.545233,-4.802132,-6.175637,2.461843,1.154624,-3.903004,0.914240,9.680046,-0.760907,-2.951298,-0.933677,4.705912,5.055582,1.432276,1.982976,0.190704,-3.778181,-8.267724,6.991141,-8.581586,-7.337005,3.331018,-7.027164,2.936789,-2.950420,-6.117537],[6.621832,8.574880,1.068636,5.393205,-5.943155,-4.341981,1.318643,3.172665,-4.711693,4.086991,-9.919294,-3.547942,-4.155088,0.093095,8.306985,4.810328,8.134594,-1.036118,9.612322,-6.437193,-0.744152,-2.347978,8.110199,1.761148,1.821020,-0.511280,6.463709,-7.731040,8.117617,9.448702,-5.775995,6.845570,7.723124,-8.578769,-2.013288,-5.132812,0.311261,-6.203504,-1.474261,5.476384,-5.809928,8.104841,-2.027998,1.416098,4.338823,5.044339,3.351439,-5.654827,-0.855479,2.352002,7.855492,4.353313,-1.600109,9.926181,3.209480,4.856009,7.448000,-2.523992,-7.917141,8.308988,-5.049608,5.164680,2.081299,-6.022173,-6.507598,-1.047513,1.003461,8.874276,7.291417,-0.374236,8.653147,3.482865,-4.801403,-8.500390,2.011149,-3.189558,-8.396324,-0.858719,1.532652,6.820093,-9.289030,3.450945,-9.695628,-5.189700,-4.998230,-3.381158,-8.590564,-0.446576,5.898700,6.384654,-9.040945,-6.408350,-2.128710,-7.878811,8.637401,2.558007,-4.618582,3.267287,1.572240,-1.520181,-9.274651,2.445824,-0.894417,5.057053,3.005906,8.677124,6.715917,-8.568653,-7.039524,7.287603],[7.233864,0.274361,-2.201773,-5.909504,-3.197974,5.476606,0.533166,4.385827,-1.876662,-0.296840,-1.047547,6.029643,3.439238,4.851807,-1.216098,-7.165665,8.875260,4.476245,-5.153703,-6.507541,8.115832,-3.908218,-3.222095,-4.722853,-1.826242,-6.306247,-9.169106,-4.123940,-1.011271,2.951980,1.963587,-0.967339,-1.804222,-8.536040,4.535737,9.344568,-4.056768,2.722806,-0.071402,1.037491,-2.241191,1.423569,4.980177,7.420531,1.496839,-7.799667,-0.162434,7.754663,3.432860,9.560528,-5.211681,8.129624,-6.599254,-5.037188,-1.505108,-0.671623,1.473901,-2.306213,5.896508,-3.021148,-0.213855,9.700839,4.175855,9.221624,-8.793058,6.305065,-3.020755,4.797742,-4.146107,8.453442,9.862596,4.031170,2.354854,7.533036,7.247656,5.677276,8.343343,-7.996904,9.453421,8.717023,2.125581,6.421872,9.593377,-6.995747,-6.985796,-1.673384,2.195356,-2.508967,1.040568,-8.050580,-5.943573,7.659482,-9.203154,-1.615177,9.460239,-0.280245,5.249292,-5.572186,-3.892151,-1.515233,-3.199777,3.857728,-4.013654,-4.174112,7.325819,0.834804,-6.169767,2.226130,-4.463833,4.129247],[7.253672,-0.223569,4.633339,0.287877,-4.302144,-3.830880,1.183992,-9.311212,0.585459,9.158807,4.262041,-8.824213,4.862469,0.017215,-4.752103,-5.660343,-4.937579,-0.821454,3.781962,4.690096,2.365510,3.187600,9.747039,-8.033616,-6.023953,-1.309859,-1.096291,-5.400883,-4.913264,-3.354232,-1.820807,7.989653,8.174231,-7.179835,3.776749,-4.566036,8.787965,3.105553,-4.458062,5.188590,-6.798666,-8.687386,1.595637,-1.727457,-2.442337,-9.536851,3.482046,3.261280,9.612953,-3.580947,-4.819916,3.023655,-4.223811,-1.516481,-9.830564,2.658991,5.209137,-0.215863,-4.677450,0.860376,1.939521,9.496974,7.961945,1.849650,-1.583569,9.392701,0.527867,-1.680049,-2.531294,-2.865104,5.039818,8.618924,3.081515,0.965815,-5.552273,3.938276,-7.223132,2.521096,6.736842,-3.325920,-0.866926,-6.217254,-7.557827,2.060577,-7.968287,1.626328,6.793708,-9.488386,-7.611780,4.805474,-5.046501,-7.265166,6.407522,-6.391411,4.771082,3.452908,7.483373,8.773070,-4.165524,-8.758823,-3.672596,-1.743574,-0.590280,-8.889925,-6.954686,9.748894,-7.294141,6.605859,5.983480,0.006399],[-6.923247,-9.791801,-9.499240,4.299008,-2.094340,8.924684,-9.332946,8.198106,3.515296,9.683613,6.236805,-9.135934,1.281321,8.797986,-7.303248,2.929081,6.154730,-4.457634,5.752074,8.280403,7.996080,-7.237572,-5.059371,-8.165277,6.130716,-9.511425,-7.108995,0.863536,-9.077446,2.360359,0.338104,-2.726621,-0.956472,-3.433154,-3.479900,-7.995656,4.695215,0.756559,-0.768582,1.592764,-2.221527,-6.348255,-8.186053,-1.163219,-0.575322,6.930691,-3.166029,1.376514,-3.658771,-6.409223,8.721533,-7.029168,7.233913,-0.092642,3.370057,9.682997,9.236345,9.111342,4.082614,8.387813,4.810572,9.547643,-9.100635,-2.063096,8.312809,7.281087,9.696817,7.831526,-9.160904,-9.353412,8.233991,4.563807,6.939690,-2.917701,-6.886531,2.567339,4.484950,9.062547,9.293570,-5.829054,-0.753520,1.145533,-6.817532,-3.679390,-9.302619,-4.037337,-4.092036,2.452861,-7.899490,4.859730,5.976186,-1.623856,6.902655,-8.708846,-5.767164,5.928749,-8.821039,-3.145693,0.110831,5.505704,-7.642234,8.326080,2.437472,-9.722773,8.428684,-9.854184,-6.064717,4.560178,-3.378822,-9.221415],[-0.989362,9.270641,-8.196349,6.475659,-1.664390,-8.771118,1.843065,-0.761270,-4.492926,-6.583421,-5.226736,-4.950911,-3.684910,-3.117192,6.420498,3.155161,9.400328,-3.507315,-0.174827,6.327697,7.932534,0.309361,-0.202846,6.611498,0.982452,-1.320451,6.661301,-1.121402,-5.016492,-7.906281,-3.535898,7.666692,8.438284,2.728526,-1.971502,-1.664939,-5.275814,-4.988226,3.949593,8.965824,2.761682,-4.493130,-1.315139,-2.936842,-9.487887,-2.074714,-9.621946,-7.085044,-9.250861,-6.840938,-3.279372,-2.446343,-6.039158,8.512848,-6.551704,-3.038959,-7.660644,-6.505985,-9.277974,6.108347,-8.543131,5.912156,-0.525224,-0.983376,6.114266,8.996733,3.723738,3.598086,-2.023885,-2.311443,9.194687,-1.674707,5.671161,6.645804,-6.310447,-8.984281,-9.842945,4.037779,7.384607,2.674214,-4.111675,9.268455,-9.945807,-9.916398,6.383016,-6.395088,8.207826,4.474349,8.934757,-0.964812,6.748714,-0.550398,-3.808106,-0.150622,1.623093,9.300967,-0.587665,-6.016897,8.910655,5.002152,7.356050,0.807517,1.994609,8.306908,5.646779,-9.999984,7.817102,9.067268,-0.935088,2.034882],[9.294438,-3.794518,5.019574,0.055473,9.669848,-6.621911,-9.070721,4.694234,-8.164024,-2.617604,2.546373,-9.998366,-0.280957,-4.125567,-3.508428,-5.588929,-9.340375,2.024618,1.797252,-6.861836,-6.876132,1.290393,8.951219,-3.191233,-2.186779,3.294120,1.828034,-5.555313,9.260958,-6.711335,-5.542319,-7.632154,7.241551,3.274225,-0.225811,6.414380,-2.555030,2.118672,-9.052280,8.143106,-6.335072,-3.558682,-0.190707,5.164380,7.321972,5.947234,3.445258,3.046380,-2.287268,7.354792,-1.717695,0.007556,-9.914382,-4.739141,-4.414846,1.887308,8.369057,-1.401502,-9.455622,1.052222,0.727060,2.094094,-2.595272,-9.900595,2.672761,7.496958,-2.364097,-6.206646,7.249358,6.054147,-2.307591,5.285536,-0.230692,-3.995466,6.744184,1.906439,-6.889239,5.929002,9.573776,8.493750,-2.384040,-2.616186,1.121401,8.380381,-8.937554,-7.514688,5.118572,-8.390428,3.710454,-8.870498,-8.582983,-4.228851,-7.277507,-2.868121,6.412413,2.402774,-9.063419,-9.444340,-1.579381,1.801099,6.821268,-8.924772,2.945937,-8.191381,1.130464,0.512628,-1.909137,-9.202676,-1.809151,-4.349423],[1.857259,3.180348,-5.591590,2.682912,7.441088,3.960319,5.983048,2.656113,-6.634138,2.271240,-6.716842,9.784655,-0.156711,4.984512,-0.539660,-6.697476,9.826417,-1.657868,-9.712722,0.323682,-4.920519,-7.788511,-9.456952,-7.396666,7.304821,-2.907532,-2.914471,1.769073,9.324598,2.156349,-8.852617,2.955559,2.393055,6.861407,-1.118852,7.346245,7.797278,-5.210371,2.995512,-6.502728,-3.060639,-3.061712,3.228863,-2.538680,8.026415,-2.968817,1.663556,0.570987,8.042452,-6.097031,1.593775,-8.174764,5.591893,-1.806938,0.122949,-5.143601,6.450608,4.368709,-0.481772,-7.959840,9.055862,9.901392,-9.970933,-2.185319,-9.705007,9.037086,-0.309158,-4.909916,-1.023469,0.308962,-0.579648,-1.726446,-1.833495,-5.067142,3.125067,-7.026632,1.982721,3.129939,5.404194,-1.018945,8.919618,6.337836,8.117343,8.179664,3.244111,-6.867246,-2.623195,6.827235,-6.254701,6.797020,-3.204289,-4.726069,-5.455961,-9.117901,7.565157,3.830467,-2.824868,4.921091,-3.711621,-3.428499,4.797711,7.897663,8.267739,-0.918463,-5.408766,8.566843,-2.745151,0.179012,0.919406,-7.835575],[-5.013591,2.153105,-5.836122,-9.769258,-6.729828,-8.846294,1.769145,9.629236,4.312480,-2.850332,-0.936527,-9.397044,-7.824159,7.599300,5.294953,-8.971387,9.559894,1.882457,-3.190387,-8.051356,-7.881284,-8.879601,0.282173,-8.435321,-7.320201,-5.215541,-4.706324,1.754348,-4.925328,-0.739282,-2.845279,1.508883,0.969927,4.898280,1.590218,-9.978539,5.576400,8.728992,-0.178208,3.964327,6.099997,5.034923,-2.602002,-7.286117,3.824890,9.245475,3.741689,2.730490,3.661212,2.539071,7.719061,-3.486292,-5.820780,9.514076,4.062913,4.694629,-0.998462,-2.243941,6.156149,-9.510723,5.711753,-1.412667,-1.184492,9.698629,9.717902,-7.456055,-1.637997,5.121164,7.640722,-6.167064,9.568409,1.614892,-9.863612,-0.011890,-9.384939,1.524522,-0.561299,-0.404062,8.768807,-5.619074,-5.196187,5.635340,8.897953,-5.396778,8.060463,9.180813,-7.729600,3.519686,-6.347155,4.792960,-3.791901,4.294799,-6.244815,2.512217,1.710854,-9.155148,2.501039,2.879518,-0.511420,8.307646,-8.412436,-0.432259,3.936466,9.066806,-1.720816,-7.530312,1.773307,6.419333,2.289376,-2.272207],[1.096422,3.342083,-4.502367,5.599255,-7.553138,9.090819,-1.852223,7.265554,3.582641,4.667329,0.785432,-8.727641,1.919398,5.038549,-6.806758,-4.435478,-4.488622,-3.216233,-3.429545,-1.070035,-6.194904,8.037574,3.547396,-4.730171,1.946646,-5.876763,2.175611,-2.826523,7.193902,-0.883730,3.495311,7.114685,-0.968132,-5.813715,1.804790,5.487660,-7.519969,-7.884966,4.443309,-4.009337,1.478735,-0.428038,4.259037,3.851389,-6.360618,4.303568,-1.832365,7.654620,-5.543668,4.324146,-1.008948,-7.926021,9.170821,2.269475,0.242591,-4.846616,-8.903349,-7.518019,5.567818,-6.419212,4.889808,8.389255,-3.684684,-1.328762,-3.908314,1.870500,-7.155794,-5.208158,-1.902546,-4.787060,3.191112,-7.645340,0.333657,-3.340770,4.596467,-5.577308,-2.403990,-1.433971,9.768829,2.203942,5.759955,-2.573238,-8.457630,6.374994,-4.795802,5.036302,-3.194836,-6.305189,-4.298479,-6.021181,1.633292,-7.025344,-6.636456,2.708785,1.816915,-1.967975,2.210591,-9.757513,9.619947,-4.252267,9.397591,8.535360,-8.260603,-2.121729,-6.983462,-5.911818,7.056985,7.223868,4.093035,2.178491],[-4.589335,4.865856,9.289516,2.275979,-6.783699,-3.570948,7.532937,9.255614,2.772983,-8.438747,4.207816,-8.747951,5.739014,-4.886642,-1.949094,5.832053,5.074340,-9.108216,-1.301066,6.437171,6.452806,4.977139,-0.554616,-7.557699,-6.903123,4.656856,5.905319,-6.763739,-2.724203,-3.165964,5.716673,0.427696,-6.199135,9.314251,6.119962,1.807066,-4.340044,-3.771089,-0.666487,3.595043,4.972619,-2.257292,-1.740818,-2.191501,0.243551,9.978936,-2.833331,-0.826900,-4.292515,-9.970095,-4.841916,-9.926186,-1.856503,6.688135,-8.250847,2.457863,-3.322776,-1.456710,-2.848368,4.495043,5.651516,-0.446298,0.834107,2.787374,-6.151170,8.771450,4.791207,-6.452329,-4.430348,-3.353934,-2.148948,3.001392,9.239055,0.113849,-6.451307,-5.677564,4.063508,6.612955,7.084648,-7.168758,-5.435134,-4.049864,4.987500,5.263981,0.565635,-5.292800,8.775927,-0.209649,-9.633341,1.102018,-3.414289,-8.895454,-1.970210,-4.891380,-1.702749,-2.090714,-2.477611,6.990947,7.448338,-5.131721,-6.371272,-1.043375,-0.395665,0.151538,-0.516635,1.810363,-6.029963,-7.989485,6.777818,-9.658800]], dtype = "float64")#candidate|9778|(12, 110)|const|float64
const_9779 = relay.const([8.413866,6.281885,9.172250,9.007008,8.184653,-9.519056,-5.786590,-5.546800], dtype = "float32")#candidate|9779|(8,)|const|float32
call_9776 = relay.TupleGetItem(func_7571_call(relay.reshape(const_9777.astype('float64'), [3, 7, 16]), relay.reshape(const_9778.astype('float64'), [1320,]), relay.reshape(const_9779.astype('float32'), [8, 1]), ), 4)
call_9780 = relay.TupleGetItem(func_7575_call(relay.reshape(const_9777.astype('float64'), [3, 7, 16]), relay.reshape(const_9778.astype('float64'), [1320,]), relay.reshape(const_9779.astype('float32'), [8, 1]), ), 4)
func_5419_call = mod.get_global_var('func_5419')
func_5421_call = mutated_mod.get_global_var('func_5421')
var_9796 = relay.var("var_9796", dtype = "float64", shape = (1694,))#candidate|9796|(1694,)|var|float64
call_9795 = relay.TupleGetItem(func_5419_call(relay.reshape(var_9796.astype('float64'), [11, 14, 11])), 0)
call_9797 = relay.TupleGetItem(func_5421_call(relay.reshape(var_9796.astype('float64'), [11, 14, 11])), 0)
func_8902_call = mod.get_global_var('func_8902')
func_8903_call = mutated_mod.get_global_var('func_8903')
call_9806 = relay.TupleGetItem(func_8902_call(), 0)
call_9807 = relay.TupleGetItem(func_8903_call(), 0)
func_6055_call = mod.get_global_var('func_6055')
func_6058_call = mutated_mod.get_global_var('func_6058')
const_9810 = relay.const([-4.848871,3.298962,9.887108,6.485722,-8.498828,1.623951,5.635516,5.611124,1.194626,-9.588698,6.536404,-8.399145,-7.760258,7.907348,8.915972,0.002401,-0.534037,-3.546006,-1.041060,-9.219705,3.354797,4.387612,1.497584,-6.979529,2.374080,4.535355,7.570799,-8.366468,9.685484,1.202877,-4.808243,9.250935,-5.254305,-2.426671,4.739996,3.211866,-3.006282,0.747280,6.346097,-2.039470,-3.340114,1.021091,7.986487,4.673327,7.880918,4.665942,6.168766,0.814437,5.795983,-7.188847,-4.491930,6.281290,-7.978166,-5.454958,-5.216835,-4.934658,-8.483164,5.041628,8.567905,4.961891,3.898480,-5.602065,3.625568,-7.986224,3.172225,5.344637,2.703473,-0.129063,-6.603309,4.902060,-0.948595,6.090927,-5.538925,-7.494466,-4.790817,-6.068835,3.405004,-0.569439,-2.361058,4.145098,-7.662472,-3.206223,6.852708,8.487886,6.762228,-3.124960,3.625180,0.740185,-5.382399,7.324589,1.744636,3.457075,4.688268,4.870685,-8.265478,8.165757,1.720720,-0.993551,7.373340,-0.645516,4.206033,-3.967517,0.327481,-2.768943,8.687953,-5.497691,0.634196,6.838580,7.333201,2.646263,7.693279,-1.912730,-9.683125,5.030543,7.599433,-1.864062,3.571242,1.951661,-2.606508,-3.353510,6.233488,-9.728963,-6.712434,6.333025,-7.904685,-1.093849,-0.086274,1.730043,4.026546,-8.271817,-3.633306,0.193757,3.087128,-5.379936,-0.140059,0.314447,3.395618,2.230894,-4.833263,-6.469593,4.622453,-0.317824,9.191057,-2.835625,3.396407,8.867610,4.643099,8.845040,1.962513,5.703374,-7.382534,-6.790563,-8.708817,-4.070525,-3.882773,-2.291394,8.135858,7.908778,-6.913333,2.282369,-7.184931,4.462319,-4.729323,-5.801934,4.569221,6.196489,2.915319,1.596688,8.007326,-1.394281,-9.447129,9.518921,8.174496,0.284141,-0.367394,6.411986,5.555072,1.285495,7.045640,-0.917487,7.547307,6.962876], dtype = "float32")#candidate|9810|(182,)|const|float32
call_9809 = func_6055_call(relay.reshape(const_9810.astype('float32'), [7, 2, 13]))
call_9811 = func_6055_call(relay.reshape(const_9810.astype('float32'), [7, 2, 13]))
output = relay.Tuple([bop_9752,call_9776,const_9777,const_9778,const_9779,call_9795,var_9796,call_9806,call_9809,const_9810,])
output2 = relay.Tuple([bop_9755,call_9780,const_9777,const_9778,const_9779,call_9797,var_9796,call_9807,call_9811,const_9810,])
func_9812 = relay.Function([var_9751,var_9796,], output)
mod['func_9812'] = func_9812
mod = relay.transform.InferType()(mod)
var_9813 = relay.var("var_9813", dtype = "float32", shape = (8, 3, 7))#candidate|9813|(8, 3, 7)|var|float32
var_9814 = relay.var("var_9814", dtype = "float64", shape = (1694,))#candidate|9814|(1694,)|var|float64
output = func_9812(var_9813,var_9814,)
func_9815 = relay.Function([var_9813,var_9814,], output)
mutated_mod['func_9815'] = func_9815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8947_call = mod.get_global_var('func_8947')
func_8948_call = mutated_mod.get_global_var('func_8948')
call_9906 = relay.TupleGetItem(func_8947_call(), 1)
call_9907 = relay.TupleGetItem(func_8948_call(), 1)
func_711_call = mod.get_global_var('func_711')
func_713_call = mutated_mod.get_global_var('func_713')
call_9909 = relay.TupleGetItem(func_711_call(relay.reshape(call_9906.astype('float64'), [11, 14, 1])), 0)
call_9910 = relay.TupleGetItem(func_713_call(relay.reshape(call_9906.astype('float64'), [11, 14, 1])), 0)
func_8523_call = mod.get_global_var('func_8523')
func_8524_call = mutated_mod.get_global_var('func_8524')
call_9915 = func_8523_call()
call_9916 = func_8523_call()
func_7571_call = mod.get_global_var('func_7571')
func_7575_call = mutated_mod.get_global_var('func_7575')
var_9921 = relay.var("var_9921", dtype = "float64", shape = (336,))#candidate|9921|(336,)|var|float64
const_9922 = relay.const([[2.867270],[1.263880],[-1.795960],[-4.429479],[-0.509137],[6.571366],[0.654528],[0.188197],[-1.747405],[2.233421],[1.750200],[-7.939547],[-0.792405],[4.625796],[0.214959],[1.446894],[-4.780101],[-4.990565],[9.152745],[-6.993531],[-7.677426],[-6.737106],[-1.920583],[0.137108],[-9.224095],[5.883761],[-5.022990],[0.653252],[9.273659],[2.263047],[-6.421796],[6.421700],[9.688473],[7.436326],[0.671484],[-8.670795],[0.830116],[9.940489],[-3.526984],[-9.012024],[5.825442],[7.530406],[-8.680865],[-5.614395],[6.645640],[-4.211256],[-0.123836],[-9.906899],[0.496136],[-0.886914],[3.266652],[-7.747431],[-7.958159],[-6.449556],[-7.923008],[5.758802],[-4.277646],[1.682521],[4.822345],[2.736328],[-0.100076],[-0.390240],[2.140254],[-6.561038],[0.453710],[9.643796],[-7.470022],[9.435759],[7.916353],[8.258800],[7.078683],[8.773925],[2.242378],[-8.107694],[-9.557912],[4.423989],[7.522035],[3.985806],[2.473965],[5.749163],[3.730171],[8.417646],[1.080573],[-4.836457],[6.823333],[-0.833833],[-3.804180],[-0.041845],[9.285071],[-8.728058],[-1.662551],[-6.419656],[-5.680925],[4.992616],[7.954411],[-6.305522],[5.835709],[-0.350078],[-9.277544],[-7.320098],[8.270339],[-9.251250],[-9.672811],[9.265697],[3.636823],[-2.703192],[-6.009072],[5.688564],[-5.675147],[-0.635385],[-7.940800],[-4.218607],[-3.279213],[-8.042145],[3.366167],[-1.794628],[6.645315],[-6.733968],[-1.279944],[1.143041],[-1.505329],[9.358880],[-6.209721],[5.389589],[2.133273],[6.042394],[-8.342806],[-3.001548],[-1.589032],[3.335950],[8.144197],[-7.204550],[7.739910],[-9.922827],[0.090589],[7.464336],[5.838365],[-2.542119],[-3.825963],[7.478751],[1.122528],[8.111893],[-0.217717],[-0.339549],[-3.460858],[1.189881],[-7.955059],[-9.914146],[-9.991964],[4.815098],[3.616018],[5.281064],[9.183058],[-4.706240],[0.953831],[-6.410485],[-1.776607],[-2.370116],[7.300278],[-1.973467],[0.758144],[0.970958],[3.146749],[2.692020],[-6.021226],[0.330742],[3.858467],[0.616064],[-5.104124],[-3.154171],[4.681485],[-2.110755],[-6.786572],[-6.198156],[-9.977543],[7.170356],[-5.442681],[8.388594],[7.943662],[-9.367084],[7.676242],[9.740802],[-7.955259],[9.445476],[-5.851173],[9.579194],[-1.245786],[-4.152721],[-4.995692],[-2.774775],[0.044103],[-6.435502],[-3.926035],[5.676317],[-1.780691],[-3.582470],[-5.527973],[7.176062],[-1.496377],[0.760608],[-5.981756],[-2.828158],[4.126490],[-1.808239],[9.700505],[-6.759426],[-0.777616],[4.848542],[-9.394512],[-6.562104],[-5.553832],[-9.744723],[-9.524479],[4.002100],[-9.768095],[-9.513278],[2.379872],[-3.567680],[6.174854],[5.135184],[3.344638],[9.346049],[-7.920054],[9.119945],[0.863739],[-6.894630],[-7.587202],[-5.379803],[-9.469436],[1.723534],[5.358131],[9.305031],[-9.193902],[7.735941],[-9.191140],[-7.244864],[-8.638829],[-0.167190],[-3.228683],[5.458277],[8.471296],[3.644205],[-2.981826],[8.563389],[-8.978664],[5.018529],[-9.781054],[-2.732881],[-3.175500],[-7.861046],[-3.529023],[3.129261],[-5.345502],[-5.380906],[0.844977],[-7.246345],[9.021684],[-4.805748],[-3.316249],[-2.877617],[-4.885359],[-3.185672],[-2.419409],[2.247886],[-0.819657],[-9.457949],[-1.859034],[2.110547],[9.072551],[-4.888807],[9.225944],[1.085442],[-0.737164],[-1.054730],[6.605459],[4.175351],[-9.485609],[-1.049170],[7.234431],[-5.579889],[6.035657],[-2.384901],[-8.249925],[-2.746925],[0.313091],[-0.590673],[-8.069701],[1.046033],[8.046190],[3.177364],[-0.737589],[-1.547113],[-5.352644],[-7.396859],[-7.623608],[7.825695],[8.931396],[0.712116],[2.126309],[6.900023],[-3.449891],[2.510544],[8.252947],[-7.998419],[-5.424989],[-8.844926],[-1.699440],[9.574504],[3.309706],[-1.546540],[-5.800165],[-1.749318],[-4.723391],[3.797188],[8.482367],[-2.822892],[-2.120206],[-9.836576],[9.080511],[-5.524280],[-2.433771],[-7.615144],[4.077629],[5.313463],[3.922491],[-3.595211],[0.376675],[5.655275],[8.280646],[1.678411],[5.116041],[-6.703263],[3.337757],[-4.510042],[0.848400],[-0.212980],[1.381667],[5.132063],[7.610022],[3.750489],[-3.791986],[-3.012191],[-7.310344],[4.243487],[3.637499],[3.442989],[8.913969],[-9.270169],[-3.396375],[6.531222],[-7.480185],[-7.978612],[-8.140838],[-4.549120],[-6.349974],[4.732671],[-5.472583],[8.866834],[2.985950],[-7.562715],[4.557903],[-9.657793],[8.932932],[-6.405066],[9.556535],[-7.948661],[4.807792],[6.262803],[-7.605761],[7.431071],[8.606955],[3.346098],[5.486456],[0.402719],[-5.129909],[8.538332],[4.709849],[-3.547854],[-6.629885],[-2.565132],[-5.327792],[4.895916],[4.021353],[0.248244],[3.825823],[1.464214],[5.686107],[-2.332980],[6.409633],[-4.789824],[1.855148],[2.243812],[7.495548],[6.304435],[-5.790431],[9.523825],[-1.058175],[3.478451],[4.350365],[7.082845],[3.195853],[4.967491],[-1.556314],[6.133311],[4.596943],[8.911252],[2.674907],[4.521864],[-6.899616],[5.722604],[0.535339],[2.014917],[1.336705],[9.503951],[0.113431],[5.078289],[6.133511],[-5.855975],[-4.173761],[9.860755],[4.323439],[-2.815042],[-1.998738],[9.190206],[5.799009],[1.542367],[1.458216],[-1.277989],[8.503133],[2.821372],[5.223186],[-7.415220],[0.761027],[-2.529519],[-3.119362],[-2.671148],[-0.139047],[4.746654],[-9.198266],[9.985549],[0.491744],[-2.631043],[7.928871],[1.369565],[6.569266],[9.463562],[-4.933922],[8.264251],[-6.491292],[5.974112],[-4.007326],[-0.868477],[4.130812],[3.661339],[-4.913704],[8.080315],[7.017132],[-2.286730],[-4.635235],[-5.070194],[-5.248785],[-3.644769],[7.348668],[8.643197],[7.151461],[-9.102500],[-1.089274],[-7.417690],[-8.788682],[3.148180],[-3.172740],[-0.338138],[5.634938],[-4.566636],[7.431130],[3.479838],[4.251434],[-8.661039],[7.094020],[-1.829949],[-8.822393],[-9.881597],[-8.074794],[-4.365851],[-8.926501],[6.273530],[-6.330033],[2.304548],[2.672761],[-6.264109],[-8.410350],[-5.759493],[7.611416],[-2.017165],[-6.415366],[-8.101982],[2.163019],[3.053250],[4.528918],[5.154909],[-8.326229],[5.534870],[-7.234200],[-9.219721],[-6.002886],[-7.006890],[-1.890843],[-8.044353],[9.628820],[-9.618020],[-5.294300],[6.014315],[-7.561763],[7.891595],[-3.265457],[0.224545],[7.385392],[-7.690229],[7.791736],[0.178336],[1.724245],[-7.683189],[7.592510],[7.408933],[7.272068],[-9.889356],[-2.809374],[-0.521556],[2.275447],[4.850848],[-5.517379],[-7.727794],[8.388534],[4.988129],[3.719413],[-5.976884],[8.800629],[-7.521056],[-6.688571],[7.391458],[5.835047],[9.401459],[9.436741],[-1.612839],[0.637497],[2.525387],[8.591839],[6.516983],[-1.586985],[4.745912],[-8.409598],[-0.398935],[1.947318],[-9.474920],[-9.260972],[6.731954],[6.817011],[-9.253331],[-5.575278],[7.284125],[-4.850265],[2.297895],[-6.203987],[-7.526563],[-3.352208],[-6.488523],[2.168550],[-3.147753],[8.741638],[-3.061332],[-2.068039],[-8.222885],[-2.180948],[1.051088],[0.135887],[-6.538378],[1.889111],[6.103640],[4.870792],[-7.722692],[-7.144019],[-6.648663],[1.948923],[-7.044345],[6.512310],[-1.043313],[-7.907171],[5.434621],[2.943766],[-0.647568],[-4.383478],[-6.532882],[-2.337939],[6.275882],[3.105517],[9.015909],[2.774199],[-8.355889],[-3.092128],[4.257733],[7.835585],[-8.510500],[-6.314313],[6.139804],[-8.825530],[7.504149],[-7.836066],[-6.523813],[4.941375],[-2.888927],[0.992064],[-2.580375],[9.284964],[7.993744],[3.093538],[6.769066],[-6.800845],[0.730106],[-3.137178],[4.957739],[-3.578436],[5.060797],[-9.797301],[8.624829],[6.153926],[6.640666],[-4.179008],[2.711963],[-4.808286],[1.007981],[-9.028032],[-0.777359],[-6.198306],[1.589117],[-6.154911],[6.492057],[4.649819],[-4.196964],[-5.314186],[-5.858749],[2.648045],[-8.396306],[1.330838],[-3.162808],[-9.333495],[-6.676803],[-8.759720],[-7.647792],[-3.768267],[5.786526],[-6.084690],[4.102929],[1.834123],[9.540146],[0.787704],[-9.415151],[7.798582],[-1.745859],[-4.356145],[-1.185388],[7.260173],[2.872167],[-4.547596],[-2.785806],[-1.943907],[4.828088],[5.979418],[-9.228012],[-1.591346],[-7.479572],[0.267844],[8.080269],[-4.729615],[-3.237876],[-5.189308],[4.936049],[8.158753],[0.102963],[-9.564584],[-3.121644],[-8.777951],[6.028480],[-7.294295],[-2.452332],[-6.803928],[-2.281678],[6.787704],[-7.521196],[-7.032340],[2.683827],[-6.706086],[-9.803940],[5.242229],[4.334479],[6.710604],[-9.359048],[2.231979],[2.007390],[-5.323986],[6.159036],[6.676375],[-2.340368],[7.928535],[-9.113157],[5.330747],[-7.553528],[-3.819348],[0.235160],[-6.687683],[-1.979887],[-4.091781],[6.770466],[-4.827545],[0.463030],[3.386332],[5.010922],[3.324830],[0.174513],[9.328003],[-8.381777],[3.095209],[-9.139370],[2.023839],[-2.467704],[-8.872355],[3.267853],[0.759697],[-0.901910],[-3.642287],[-3.470210],[-8.262750],[-0.315501],[-6.469340],[-3.717934],[6.703506],[-7.781964],[8.694175],[-5.266681],[1.137673],[6.182076],[0.827011],[-9.624576],[4.789555],[6.451802],[9.198629],[6.620026],[9.727768],[3.842868],[-6.080667],[6.213921],[-3.932819],[-1.966382],[-8.562771],[-4.398666],[0.088544],[3.102807],[-6.096673],[-4.917792],[3.138912],[3.628712],[0.353308],[-4.348141],[-9.502724],[-0.084832],[-3.997610],[-4.806203],[-8.854144],[-2.824635],[-8.277586],[-2.174841],[-3.732804],[-3.476479],[6.920422],[1.470874],[-9.905592],[4.340786],[2.269653],[9.917621],[4.589058],[-5.714127],[1.807585],[-8.953602],[-8.180751],[6.906606],[2.396367],[-3.655865],[7.392092],[3.688888],[1.505413],[8.397198],[1.899963],[-7.572762],[5.036996],[1.909829],[8.700929],[-0.980013],[-0.493663],[-9.736316],[8.992249],[0.055142],[2.785724],[4.660373],[7.188257],[-5.039711],[9.064165],[-8.695469],[-5.497681],[4.843160],[-8.588814],[6.528177],[5.684504],[9.505663],[-0.560537],[-1.105397],[3.239029],[4.643578],[9.007681],[4.295884],[2.930438],[-2.216488],[-3.142720],[5.666092],[3.575220],[-1.726938],[8.882359],[9.520237],[6.692472],[9.635179],[4.388986],[9.339489],[0.401014],[8.510651],[9.417993],[8.721494],[-8.022198],[4.295912],[9.059658],[-4.762381],[-0.989034],[-6.409127],[-7.324328],[-0.247636],[-0.018349],[7.071349],[5.406517],[-6.367230],[7.255053],[2.370930],[9.200458],[7.754761],[-7.438901],[-4.744323],[-7.062687],[-8.568195],[3.918978],[-3.164668],[9.063108],[1.368626],[-1.960716],[7.079200],[7.377836],[0.918450],[9.722331],[-6.991078],[6.482546],[1.746218],[-4.208836],[9.621406],[-8.331148],[9.525144],[9.706759],[5.117702],[-3.733937],[-6.074222],[5.804421],[-4.813156],[-7.847138],[-6.492536],[0.345203],[-6.958909],[-8.273634],[-6.116698],[6.005418],[1.871078],[-9.080807],[8.154844],[0.455295],[-6.558859],[2.588888],[-6.227971],[-3.542165],[0.968214],[-5.239730],[-3.171502],[-9.092485],[1.371527],[-1.682778],[-9.776181],[6.427366],[5.138994],[-0.268818],[4.552568],[7.951385],[-8.650836],[1.535460],[-8.358206],[7.230332],[-0.140734],[2.440779],[0.686701],[4.291015],[-3.581903],[7.886900],[0.738361],[4.185883],[-8.262551],[3.922847],[3.199839],[6.213583],[5.929698],[-0.725739],[-2.041953],[8.454487],[-2.643108],[3.343123],[9.072007],[-8.046693],[8.390627],[-7.805135],[-3.933774],[9.688386],[7.839066],[5.306323],[-6.602441],[-8.668729],[5.812219],[0.543673],[0.731777],[-5.189161],[6.428936],[5.733868],[-2.043235],[-0.375966],[9.109772],[-9.795087],[-0.563794],[-7.854416],[-0.720452],[-7.119878],[-1.258137],[-9.896780],[-7.502172],[8.639281],[-2.927701],[9.702601],[-7.871271],[-4.998887],[-6.541806],[-3.429779],[9.749174],[5.515574],[-1.244520],[-1.389618],[4.992900],[2.663681],[0.931853],[3.081563],[7.617285],[7.205947],[-1.986738],[1.808344],[-8.660074],[8.731505],[2.434657],[-1.919180],[-9.348996],[-3.947070],[-7.660153],[2.298382],[-0.072714],[7.513274],[-8.495179],[4.385424],[-7.884244],[-7.416207],[0.278719],[8.452993],[6.589305],[-1.516044],[-5.360981],[-9.368955],[-7.028938],[5.438250],[9.636424],[7.340617],[-4.760393],[0.609364],[6.456335],[-0.140996],[-9.389250],[0.094125],[3.844796],[2.568705],[2.949158],[0.281587],[-1.314076],[5.304963],[-8.211342],[6.520131],[7.082512],[8.047122],[-2.337912],[6.129629],[2.572644],[2.097836],[-5.576766],[9.718083],[4.061123],[-5.467193],[-9.679642],[-2.859886],[1.688784],[-7.554317],[-3.821861],[0.331649],[-9.340677],[8.011382],[-1.401798],[-6.108641],[2.733797],[5.898259],[-9.426669],[0.618804],[2.392352],[7.928988],[1.215962],[-6.832849],[2.909180],[-7.847802],[2.692669],[9.597409],[5.142649],[-2.473092],[8.178063],[3.109884],[-8.833995],[-4.379750],[-2.538707],[-6.812426],[-8.102003],[6.294257],[9.271610],[-5.507026],[-5.156184],[-6.568333],[6.491845],[5.508000],[9.521562],[-5.270169],[3.800186],[1.620125],[-5.756677],[-3.192501],[1.855545],[-0.743295],[-0.151046],[2.307494],[1.078313],[-0.713644],[-0.044440],[4.423539],[7.470310],[-6.686245],[-7.020909],[4.669288],[4.623291],[3.409992],[7.744933],[-6.957834],[-1.542575],[-3.535410],[-6.795250],[-4.744241],[6.661652],[-7.019500],[-6.446810],[6.362395],[-0.779473],[-7.447590],[-8.324546],[-0.215494],[-2.696855],[6.879025],[-8.041548],[-8.770069],[-5.409415],[3.025525],[-5.619441],[1.200900],[2.219878],[2.569322],[8.503738],[9.492492],[5.373894],[6.911786],[3.605912],[6.004321],[1.688571],[2.728573],[-8.377064],[1.061708],[-6.533729],[7.521438],[-6.739853],[3.781743],[-4.581953],[3.062844],[6.916271],[-2.670308],[-9.553300],[8.370962],[8.311413],[7.771196],[7.719391],[-9.330467],[-0.822408],[5.687350],[6.040069],[6.303014],[5.120250],[8.721214],[-7.410939],[2.061624],[0.474369],[-3.671669],[5.854763],[9.992687],[-3.153275],[-1.011778],[-9.646853],[0.789964],[-9.335377],[7.326840],[9.512951],[9.339519],[5.211507],[5.679507],[-1.180174],[-9.698963],[-3.107524],[7.387366],[-0.910872],[-2.058154],[-6.098729],[-3.837625],[-8.275983],[1.462879],[-3.087168],[-4.004880],[-5.926644],[-5.121006],[-1.496477],[4.697154],[7.157973],[-0.117457],[-0.738449],[2.570004],[-9.268282],[9.020439],[-1.269076],[0.809618],[7.824110],[4.295531],[-7.721934],[0.319824],[-3.989142],[-8.750221],[6.850244],[5.197291],[1.375856],[-5.082988],[7.121689],[-2.232354],[-9.046298],[-4.013216],[-6.265374],[2.431421],[0.692485],[0.398853],[-5.896816],[-9.676742],[1.752412],[8.748797],[-2.386203],[2.841109],[-7.217547],[7.269383],[6.556805],[5.944715],[0.260637],[6.800724],[-7.307955],[8.629239],[2.677444],[0.643615],[4.507964],[-8.126941],[-1.918665],[-3.952055],[-8.976348],[9.000834],[8.518360],[0.281542],[-0.899532],[-8.182465],[-0.500784],[4.555266],[-9.241683],[-0.061315],[-0.475030],[5.647825],[9.277791],[-9.975892],[6.671164],[-5.293868],[-0.291188],[-8.877544],[-5.942426],[-0.769114],[4.269935],[-9.028718],[-2.831258],[-2.309051],[-9.713953],[0.980502],[-9.134127],[2.993426],[-4.061948],[9.959741],[-6.815987],[-0.273339],[7.316175],[-1.985082],[-7.438160],[8.681827],[-8.842575],[8.140306],[1.367867],[7.300534],[1.918349],[-8.356101],[-6.145823],[7.550652],[9.488373],[-1.825975],[6.321956],[-0.384977],[-2.875494],[-4.507292],[-8.063500],[-1.865214],[-9.676930],[6.411414],[5.047729],[8.413475],[7.022118],[-0.828417],[4.760635],[4.751812],[-8.009232],[-0.521115],[-5.495298],[9.670425],[-7.903475],[7.927394],[4.227441],[2.004214],[2.143343],[7.854406],[0.645024],[4.320034],[8.335415],[-1.936172],[-6.154712],[7.304928],[-2.442656],[-7.866621],[8.088266],[5.049717],[8.515870],[-8.005745],[-0.715859],[-0.731522],[-7.282917],[-6.372554],[2.546816],[7.168882],[3.911056],[3.901526],[3.346942],[-7.227434],[1.856424],[-7.971792],[-7.976518],[-4.413052],[-3.334671],[-8.809947],[-3.720448],[-7.436862],[4.662426],[-9.560115],[8.120422],[8.435772],[-1.529653],[-9.532713],[2.574166],[5.214692],[8.071739],[1.194339],[7.873720]], dtype = "float64")#candidate|9922|(1320, 1)|const|float64
const_9923 = relay.const([[7.528298,-8.482073,2.582947,8.054192],[-1.553191,4.050706,4.966626,-0.764150]], dtype = "float32")#candidate|9923|(2, 4)|const|float32
call_9920 = relay.TupleGetItem(func_7571_call(relay.reshape(var_9921.astype('float64'), [3, 7, 16]), relay.reshape(const_9922.astype('float64'), [1320,]), relay.reshape(const_9923.astype('float32'), [8, 1]), ), 1)
call_9924 = relay.TupleGetItem(func_7575_call(relay.reshape(var_9921.astype('float64'), [3, 7, 16]), relay.reshape(const_9922.astype('float64'), [1320,]), relay.reshape(const_9923.astype('float32'), [8, 1]), ), 1)
bop_9936 = relay.logical_and(const_9922.astype('bool'), call_9906.astype('bool')) # shape=(1320, 154)
bop_9939 = relay.logical_and(const_9922.astype('bool'), call_9907.astype('bool')) # shape=(1320, 154)
func_1847_call = mod.get_global_var('func_1847')
func_1850_call = mutated_mod.get_global_var('func_1850')
var_9951 = relay.var("var_9951", dtype = "float64", shape = (9, 4))#candidate|9951|(9, 4)|var|float64
call_9950 = func_1847_call(relay.reshape(var_9951.astype('float64'), [6, 6, 1]))
call_9952 = func_1847_call(relay.reshape(var_9951.astype('float64'), [6, 6, 1]))
func_9370_call = mod.get_global_var('func_9370')
func_9372_call = mutated_mod.get_global_var('func_9372')
call_9961 = func_9370_call()
call_9962 = func_9370_call()
func_3889_call = mod.get_global_var('func_3889')
func_3892_call = mutated_mod.get_global_var('func_3892')
const_9980 = relay.const([4.156490,8.239815,-4.430570,-7.597193,3.355942,6.204668,-0.724240,-3.454033,4.115099,3.377862,-2.733906,-9.341692,7.678495,-1.640311,0.771855,-9.554261,-5.671794,-2.432666,-8.458240,-1.428982,-7.689315,-5.342179,-1.703083,-8.844369,-4.343203,-1.028844,8.827484,3.352567,-2.757354,-3.545825,-2.753009,5.534611,-3.542042,5.256875,-6.075896,-2.545533,7.899497,0.033055,2.965968,-8.352925,7.511536,-5.108038,3.739063,9.088788,-4.248962,6.478073,-4.964379,7.372129,-7.871723,6.788943,-5.122807,7.234710,5.814687,-7.549226,-6.365018,-6.524965,1.944750,3.750177,-6.357018,6.418807,-4.220735,5.163492,8.392143,5.590956,-2.039224,-2.310850,4.231724,-3.136145,1.450315,0.118299,8.452498,3.899871,3.218688,6.848921,-0.158335,-2.400218,-0.747470,3.257517,-4.678222,2.281242,-6.674277,-3.199783,-4.215134,-4.177324,6.369927,2.177494,6.604453,1.844610,9.123215,-0.541569,0.313479,-4.366888,9.573022,9.996920,9.242314,-6.088136,6.057103,5.896058,1.672621,9.280225,3.888557,-6.883754,0.783333,4.194740,-0.533433,-9.744826,-8.351994,6.120905,7.497912,-5.822026,-5.073059,-3.752203,1.490748,6.535837,9.262802,5.038126,4.328501,8.950652,7.653394,-4.094317,-8.455656,-1.546890,4.775292,-2.675277,-6.329792,7.594994,1.715668,-3.887296,9.595921,-5.895578,-5.756376,-5.014006,8.509048,6.339650,-0.033284,-8.268257,-3.708413,-9.366679,3.103587,-8.353617,5.681671,-2.510997,8.748381,0.635611,-5.786170,9.328293,4.463600,-3.589144,0.436533,3.849676,6.370374,1.596779,-9.552186,-1.923039,-8.035571,-4.410137,-1.570371,5.366239,6.469132,7.453738,-7.808739,3.754796,-4.563833,-6.029542,3.049099,7.308901,5.354179,-3.459204,-2.391191,4.580201,-9.082288,-2.405158,-1.926368,-8.097063,-8.546345,3.542544,0.759106,-6.941286,1.738043,7.813100,4.310100,9.963173,0.106410,-6.985190,-6.098541,4.785726,4.749131,-2.291606,2.543733,-2.526605,-1.623018,-3.207132,-3.871764,1.261051,1.015997,-5.746759,6.926103,7.260866,3.745388,5.859707,-0.508271,-8.028667,-1.701483,9.454945,-3.867823,-8.890258,-6.448177,-1.021443,0.297827,-0.069136,-1.663357,8.317919,-1.797191,0.567956,8.069835,-4.612057,5.024757,1.237024,4.352802,2.468623,-4.187036,-4.784627,-1.192756,2.326321,-2.469087,-4.769547,-5.934025,-9.101055,-1.433354,0.317283,-7.990794,2.606416,-0.901875,-5.585822,-1.323144,4.212881,0.631332,5.968454,-2.285892,2.808909,-9.000014,-1.802498,-3.873137,6.489413,-2.729571,-9.436868,-9.250265,-8.589496,-5.858324,-0.617378,-4.897670,-5.857594,5.952965,6.247642,-4.794778,-4.734195,-8.264397,-2.130323,-9.164976,8.086671,-2.665055,9.613293,-9.921506,9.244075,-1.671499,9.564786,-1.386466,-6.819335,8.284198,2.247040,1.105784,-3.137210,-9.611340,-1.491731,-7.984761,9.215058,8.444166,-4.267949,-4.484434,-6.541469,2.628645,7.655206,2.347127,-8.935580,2.319422,1.125427,9.888995,-5.180488,-8.245570,-3.052725,9.007462,3.426643,4.930086,-6.354846,1.452691,-9.081414,-3.302258,-6.021765,-7.433722,-0.531284,3.383078,-9.354438,4.143557,-3.399425,8.473255,-5.470510,8.144159,9.849222,0.909928,-1.850008,-9.799484,-0.314495,6.660218,8.586225,1.628099,7.964455,6.972479,3.382595,9.381573,-3.548557,7.725691,3.014900,-9.422122,2.531801,-4.592988,-7.106153,-3.750595,3.461357,-7.802979,5.497737,-2.139069,-3.338453,-1.649518,-0.559266,1.685022,-3.662351,9.027703,8.129988,-9.798066,-0.157315,2.478097,-9.133822,5.743555,2.944745,-4.274042,8.828384,8.660046,-9.785569,7.280134,9.659789,1.602275,6.103452,9.276849,-4.361112,9.015901,-7.784970,8.955031,0.054917,-3.061275,-7.264132,9.189651,8.004417,8.956897,7.253693,-3.166557,-6.346564,-0.310211,1.214189,-8.957396,-0.418549,-1.716536,-0.829092,7.035972,-3.668752,-5.121312,-8.577566,-5.734981,4.305471,3.244706,-9.348194,5.657293,2.554047,0.606960,-1.175596,-1.280885,0.108895,7.493465,-4.816218,8.964867,0.414488,-8.006249,-8.961066,1.476182,-6.028459,-0.772114,1.062649,2.625854,6.733610,4.518283,1.627059,-8.480053,-8.675267,-4.850030,-1.240835,9.837910,-4.579622,0.747840,-6.609037,-3.388027,0.809537,7.745526,-5.711863,1.288344,4.797352,8.071847,-1.957043,-5.836742,-2.019423,-5.584907,-7.722892,-5.449704,3.224433,7.703546,-2.959612,-7.486392,-0.892828,-6.826657,3.146357,3.836048,-9.723021,9.465239,-1.991483,3.290335,-5.693806,-4.611223,6.166338,0.792661,-6.770973,-4.130614,-2.068379,1.592046,8.334202,-5.311517,9.123969,2.233205,-8.635136,0.780902,-7.985016,9.511090,-1.181764,-0.687707,-7.661592,-8.280168,-4.458998,-5.960348,1.712765,-2.692586,7.474132,9.724726,-1.558501,8.199938,3.727092,4.313603,4.552162,7.002382,-6.627865,-8.133255,5.568328,-4.298800,4.034324,3.430050,-6.323088,6.012851,-8.983864,-1.073441,-0.934307,5.733300,-8.701506,4.840936,-1.103113,8.929492,-3.082073,4.327630,-1.775692,-6.432609,-1.485884,2.299337,9.401362,8.820642,4.607914,-0.416530,9.841195,-9.217192,-3.465202,7.062105,-7.880368,-0.027758,-7.939663,-9.608578,5.250140,9.437166,-8.353184,-0.790964,2.299279,3.014741,9.429793,-4.866339,-4.181858,1.507481,9.726461,0.759824,9.318643,-8.438202,4.061828,5.027439,5.688510,7.782057,3.763653,6.491324,1.230282,9.280971,-4.104557,0.320041,-5.677343,-3.583986,6.370035,2.678314,4.394535,8.395411,9.301924,2.748335,5.614245,-5.765275,-5.793120,1.753588,2.793221,-5.286272,7.883131,-1.687853,-4.204600], dtype = "float64")#candidate|9980|(540,)|const|float64
call_9979 = relay.TupleGetItem(func_3889_call(relay.reshape(const_9980.astype('float64'), [15, 3, 12])), 0)
call_9981 = relay.TupleGetItem(func_3892_call(relay.reshape(const_9980.astype('float64'), [15, 3, 12])), 0)
func_2943_call = mod.get_global_var('func_2943')
func_2946_call = mutated_mod.get_global_var('func_2946')
const_9983 = relay.const([10,-9,9,10,-7,-3,3,4,-5,7,5,-5,-7,6,-7,-9,6,-4,1,2,-1,8,3,5,2,-9,3,-6,4,-2,-10,2,8,10,9,9,9,3,9,1,-1,-10,4,-7,-7,-1,-10,2,8,7,-6,-7,-4,-6,-10,4,-5,8,-10,10,-3,-4,-4,1,10,9,-4,8,9,-1,-9,10,1,7,-2,1,-8,10,-3,5,-9,-9,1,1,1,8,-10,6,-6,-5,10,6,2,1,7,9,2,-8,-5,-4,-2,-6,1,-6,-5,-5,-6,4,-5,3,2,-9,-10,-9,8,1,6,-4,9,1,-8,10,5,6,-10,-3,3,-7,9,-7,-9,-6,-8,-9,-10,-3,-7,4,7,-6,-9,1,3,4,-4,-8,1,-6,-6,-8,-7,5,-3,8,1,9,2,-3,-8,6,1,-4,10,3,-7,4,-1,-8,10,-4,-9,-4,-5,-4,7,4,6,2,10,-1,6,10,4,10,5,8,9,3,-10,-6,8,5,-7,-9,-2,-1,8,4,1,-8,9,10,-10,3,-1,9,6,5,-2,-10,7,-1,-7,6,8,-4,-2,5,9,-5,7,-2,-9,8,-3,6,-2,-6,-1,-6,-8,7,7,3,-10,-8,2,1,9,5,-8,4,5,8,2,-6,-6,-10,5,-9,-2,3,7,9,5,-9,-2,-4,5,-6,6,9,5,5,5,-6,-10,-4,4,2,5,4,-4,-6,-10,8,-4,-10,-6,-10,8,9,6,-5,-5,2,6,-9,6,-1,-10,4,4,5,-10,1,3,-6,-3,1,-5,8,-3,-4,-4,5,4,8,-3,9,7,1,-2,-1,7,-3,-7,6,9,8,6,7,-3,9,-7,-1,-10,6,-1,-7,9,3,-10,-5,-8,2,6,-4,-4,7,1,8,10,1,9,10,-7,-1,1,-6,2,-4,7,7,3,3,-2,5,-2,-5,-6,8,-9,2,6,-2,-6,-7,8,-6,-10,5,9,5,-8,-4,-7,-10,1,8,-8,8,-9,-8,-10,8,-3,-3,-4,-8,9,7,-4,4,-8,5,-5,1,7,-2,4,-7,2,-1,-8,-7,1,-7,-2,10,-7,6,-7,7,6,1], dtype = "uint32")#candidate|9983|(416,)|const|uint32
call_9982 = func_2943_call(relay.reshape(const_9983.astype('uint32'), [2, 13, 16]))
call_9984 = func_2943_call(relay.reshape(const_9983.astype('uint32'), [2, 13, 16]))
output = relay.Tuple([call_9909,call_9915,call_9920,var_9921,const_9923,bop_9936,call_9950,var_9951,call_9961,call_9979,const_9980,call_9982,const_9983,])
output2 = relay.Tuple([call_9910,call_9916,call_9924,var_9921,const_9923,bop_9939,call_9952,var_9951,call_9962,call_9981,const_9980,call_9984,const_9983,])
func_9987 = relay.Function([var_9921,var_9951,], output)
mod['func_9987'] = func_9987
mod = relay.transform.InferType()(mod)
var_9988 = relay.var("var_9988", dtype = "float64", shape = (336,))#candidate|9988|(336,)|var|float64
var_9989 = relay.var("var_9989", dtype = "float64", shape = (9, 4))#candidate|9989|(9, 4)|var|float64
output = func_9987(var_9988,var_9989,)
func_9990 = relay.Function([var_9988,var_9989,], output)
mutated_mod['func_9990'] = func_9990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9200_call = mod.get_global_var('func_9200')
func_9202_call = mutated_mod.get_global_var('func_9202')
call_10036 = relay.TupleGetItem(func_9200_call(), 0)
call_10037 = relay.TupleGetItem(func_9202_call(), 0)
func_8523_call = mod.get_global_var('func_8523')
func_8524_call = mutated_mod.get_global_var('func_8524')
call_10056 = func_8523_call()
call_10057 = func_8523_call()
func_4832_call = mod.get_global_var('func_4832')
func_4834_call = mutated_mod.get_global_var('func_4834')
var_10063 = relay.var("var_10063", dtype = "float32", shape = (312,))#candidate|10063|(312,)|var|float32
call_10062 = func_4832_call(relay.reshape(var_10063.astype('float32'), [12, 13, 2]))
call_10064 = func_4832_call(relay.reshape(var_10063.astype('float32'), [12, 13, 2]))
func_7482_call = mod.get_global_var('func_7482')
func_7486_call = mutated_mod.get_global_var('func_7486')
const_10068 = relay.const([-3.829773,-7.953280,1.450864,2.627241,7.784753,9.948737,-9.120407,8.861985], dtype = "float32")#candidate|10068|(8,)|const|float32
call_10067 = func_7482_call(relay.reshape(const_10068.astype('float32'), [2, 2, 2]), relay.reshape(const_10068.astype('float32'), [2, 2, 2]), )
call_10069 = func_7482_call(relay.reshape(const_10068.astype('float32'), [2, 2, 2]), relay.reshape(const_10068.astype('float32'), [2, 2, 2]), )
output = relay.Tuple([call_10036,call_10056,call_10062,var_10063,call_10067,const_10068,])
output2 = relay.Tuple([call_10037,call_10057,call_10064,var_10063,call_10069,const_10068,])
func_10072 = relay.Function([var_10063,], output)
mod['func_10072'] = func_10072
mod = relay.transform.InferType()(mod)
var_10073 = relay.var("var_10073", dtype = "float32", shape = (312,))#candidate|10073|(312,)|var|float32
output = func_10072(var_10073)
func_10074 = relay.Function([var_10073], output)
mutated_mod['func_10074'] = func_10074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8829_call = mod.get_global_var('func_8829')
func_8830_call = mutated_mod.get_global_var('func_8830')
call_10087 = relay.TupleGetItem(func_8829_call(), 0)
call_10088 = relay.TupleGetItem(func_8830_call(), 0)
output = call_10087
output2 = call_10088
func_10092 = relay.Function([], output)
mod['func_10092'] = func_10092
mod = relay.transform.InferType()(mod)
output = func_10092()
func_10093 = relay.Function([], output)
mutated_mod['func_10093'] = func_10093
mutated_mod = relay.transform.InferType()(mutated_mod)
const_10099 = relay.const([[[3.219655,-2.072065],[6.832899,-4.292257],[-9.669929,9.361664],[3.389928,8.159031],[-7.135326,-5.636539],[-9.353362,-7.628401],[-1.429225,2.111509],[-4.749427,7.421719],[3.915427,-9.706820],[7.013550,9.019019],[6.661311,6.598618],[-2.381312,1.677498],[7.000126,0.684766],[-3.429197,0.377953]],[[-0.531520,3.480662],[3.333478,0.030579],[-1.214044,5.083655],[-3.944449,9.624824],[-1.867328,-6.963776],[-3.556644,5.666318],[3.991881,4.245031],[4.415318,6.338375],[8.419707,-7.791764],[4.091634,-5.672092],[-5.965047,1.694467],[-4.235268,-7.767559],[5.926975,8.970525],[9.888873,8.133923]],[[3.815421,-0.935879],[-9.741409,0.402519],[2.140177,-3.856530],[3.723977,-1.364118],[4.668915,-8.093756],[1.600252,-0.664941],[2.488366,-4.857284],[-0.982325,-9.597618],[-2.368696,-8.047229],[-4.780676,2.396986],[-0.818703,-3.380068],[-3.568329,2.181950],[-0.658473,5.944804],[-3.362160,6.438002]],[[3.600011,-9.205643],[7.146264,-5.092885],[-7.086396,-8.580581],[-1.703363,-5.869975],[-1.586873,-6.367681],[2.127968,-4.424439],[2.994842,1.486396],[1.438758,0.487689],[-1.445186,-6.032625],[-2.292431,-6.683016],[-9.129147,9.130950],[-0.712692,9.671923],[-8.640560,3.299217],[3.668975,-3.929463]],[[5.841272,-3.262072],[-5.806258,3.974666],[-5.074784,-7.417337],[-0.551960,0.847668],[-4.033087,8.670773],[-6.848978,6.751828],[-7.422025,-0.245865],[-4.354733,-9.746631],[5.208249,-1.801032],[3.448796,-5.319048],[5.151029,-6.786547],[7.791858,-7.568644],[9.294171,-1.372479],[-1.081554,-0.466157]],[[-9.938908,-5.929168],[7.085218,-3.680840],[-3.870032,-9.466457],[9.770927,7.064271],[-4.155535,-6.358871],[7.676015,1.371711],[5.709522,-7.243119],[5.250647,-4.595695],[9.877773,-4.900111],[-1.662443,5.110474],[6.973136,-6.330405],[1.478654,8.957984],[6.834804,4.986327],[0.633686,0.866523]],[[3.989518,-9.537252],[2.201492,-6.116924],[-5.851516,2.914423],[-0.121034,3.997319],[3.310702,-7.212564],[8.497043,-2.407871],[3.776508,2.905159],[-3.380336,5.250465],[-0.569034,-3.571543],[9.696170,-3.204408],[7.212024,-8.151667],[0.691220,5.721119],[5.442732,0.937279],[4.386109,2.504303]],[[3.609641,9.298660],[-7.965385,5.891864],[4.145069,-4.651285],[4.055235,-0.137294],[-8.213783,-9.203655],[-8.698042,-5.302506],[2.105341,-5.917035],[5.620720,1.440220],[-1.574316,-7.135420],[-3.021788,6.205464],[7.032937,-1.774199],[-1.067091,6.514105],[9.687524,-4.337624],[7.254485,5.420997]],[[-7.856303,-4.059968],[2.594719,9.409106],[-9.127722,-8.633327],[6.819584,-6.370566],[1.995247,1.555124],[4.659615,2.632911],[-0.574161,-8.048293],[-6.821963,-2.054151],[3.158109,8.533868],[3.449466,-4.842610],[-5.804030,-0.791389],[-5.686973,7.109284],[4.445189,-2.597608],[0.505217,7.870318]]], dtype = "float64")#candidate|10099|(9, 14, 2)|const|float64
const_10100 = relay.const([[[-5.927215,0.676188],[9.009271,9.392560],[3.647916,6.592044],[-7.425111,3.882311],[5.751455,-7.187903],[0.399756,-8.060767],[-4.894635,5.054822],[6.653841,-7.525441],[3.474898,6.602664],[-8.611981,9.796117],[9.146228,-4.498575],[-8.033146,-2.236173],[3.221474,-8.273948],[-4.462204,-5.016619]],[[7.295269,-0.557457],[1.577104,-6.138041],[-7.794658,5.327700],[-4.350458,-0.748391],[3.805753,2.902809],[-5.588842,5.683963],[-8.312484,9.791294],[-3.612487,-4.725848],[8.958037,0.421242],[3.716099,8.190391],[4.425710,-0.858179],[6.213406,9.014447],[3.775627,4.002195],[-6.528691,-5.397731]],[[-0.249328,6.291700],[5.749563,-6.444734],[-6.760478,3.204774],[7.897056,3.585707],[3.955134,-1.860138],[-4.546312,4.479847],[1.662734,-3.966594],[-0.001936,-1.215885],[-5.710218,7.190871],[6.451940,-6.119072],[0.070380,9.641255],[4.121224,0.786425],[1.779695,6.828219],[4.095597,2.975210]],[[1.645893,-7.936508],[-3.166032,7.724177],[-9.614827,6.062624],[-1.815908,3.125985],[7.302242,9.978517],[3.023207,-9.833753],[-6.778267,4.892708],[-9.513665,-6.739259],[-2.487487,1.657463],[-8.121304,7.524949],[-3.596517,-0.533775],[-7.038054,-7.222762],[3.409880,-3.899516],[8.832324,2.727355]],[[7.912302,9.106997],[3.434802,6.165445],[8.601678,2.905525],[8.641724,-1.368397],[4.138601,2.507621],[9.737744,3.903163],[7.722277,4.680673],[-3.803093,-9.890058],[2.105531,-6.360442],[-1.173442,-1.474710],[-6.233814,8.821836],[-0.136754,6.865861],[-7.324721,-2.970959],[8.853571,-8.189160]],[[5.285362,1.524113],[-8.161373,8.649637],[9.087484,0.212004],[-1.327939,2.347982],[6.011927,-3.665819],[0.987159,5.698935],[-1.870804,0.980596],[9.975536,-3.153701],[6.385993,7.098065],[-6.683491,-5.819292],[-5.658555,0.008478],[1.353497,2.113858],[0.495694,6.178091],[-2.812868,-5.057048]],[[-1.185466,-0.552344],[-1.203742,-5.872524],[-2.160539,0.878985],[0.212493,-1.071767],[1.280565,-4.482533],[2.682555,1.312690],[7.774428,4.502225],[2.676717,1.183657],[1.589390,-8.992441],[-6.428666,3.952043],[-9.836205,0.443259],[-2.285076,8.945142],[0.185626,0.352392],[0.039547,3.609293]],[[7.028559,-6.173404],[7.038534,-0.989760],[2.486950,-8.745922],[0.223896,-3.558570],[-5.416361,0.238626],[-2.272451,1.678250],[-5.588085,-9.136919],[5.986319,7.322214],[-5.290109,-7.208558],[9.277583,-5.310093],[1.938064,-7.373194],[-5.868127,-4.441362],[6.780489,-3.526910],[-6.068611,6.350909]],[[-6.836264,-3.259775],[-8.840853,-4.382255],[-4.186689,-7.754081],[7.136498,-4.632545],[3.871032,9.753426],[-4.164054,-9.430840],[-0.409081,5.631374],[-3.796668,8.035835],[-5.933791,8.133931],[9.787819,5.739188],[-8.457704,2.039164],[-3.213745,-0.202798],[0.986799,1.936078],[4.890799,9.469092]]], dtype = "float64")#candidate|10100|(9, 14, 2)|const|float64
bop_10101 = relay.divide(const_10099.astype('float64'), relay.reshape(const_10100.astype('float64'), relay.shape_of(const_10099))) # shape=(9, 14, 2)
uop_10111 = relay.log2(bop_10101.astype('float64')) # shape=(9, 14, 2)
output = relay.Tuple([uop_10111,])
output2 = relay.Tuple([uop_10111,])
func_10113 = relay.Function([], output)
mod['func_10113'] = func_10113
mod = relay.transform.InferType()(mod)
output = func_10113()
func_10114 = relay.Function([], output)
mutated_mod['func_10114'] = func_10114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9104_call = mod.get_global_var('func_9104')
func_9106_call = mutated_mod.get_global_var('func_9106')
call_10222 = relay.TupleGetItem(func_9104_call(), 0)
call_10223 = relay.TupleGetItem(func_9106_call(), 0)
func_8800_call = mod.get_global_var('func_8800')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_10235 = func_8800_call()
call_10236 = func_8800_call()
output = relay.Tuple([call_10222,call_10235,])
output2 = relay.Tuple([call_10223,call_10236,])
func_10251 = relay.Function([], output)
mod['func_10251'] = func_10251
mod = relay.transform.InferType()(mod)
output = func_10251()
func_10252 = relay.Function([], output)
mutated_mod['func_10252'] = func_10252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9723_call = mod.get_global_var('func_9723')
func_9725_call = mutated_mod.get_global_var('func_9725')
call_10259 = relay.TupleGetItem(func_9723_call(), 1)
call_10260 = relay.TupleGetItem(func_9725_call(), 1)
output = relay.Tuple([call_10259,])
output2 = relay.Tuple([call_10260,])
func_10274 = relay.Function([], output)
mod['func_10274'] = func_10274
mod = relay.transform.InferType()(mod)
output = func_10274()
func_10275 = relay.Function([], output)
mutated_mod['func_10275'] = func_10275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10274_call = mod.get_global_var('func_10274')
func_10275_call = mutated_mod.get_global_var('func_10275')
call_10297 = relay.TupleGetItem(func_10274_call(), 0)
call_10298 = relay.TupleGetItem(func_10275_call(), 0)
uop_10299 = relay.asin(call_10297.astype('float32')) # shape=(8, 3, 7)
uop_10301 = relay.asin(call_10298.astype('float32')) # shape=(8, 3, 7)
output = relay.Tuple([uop_10299,])
output2 = relay.Tuple([uop_10301,])
func_10311 = relay.Function([], output)
mod['func_10311'] = func_10311
mod = relay.transform.InferType()(mod)
mutated_mod['func_10311'] = func_10311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10311_call = mutated_mod.get_global_var('func_10311')
call_10312 = func_10311_call()
output = call_10312
func_10313 = relay.Function([], output)
mutated_mod['func_10313'] = func_10313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9370_call = mod.get_global_var('func_9370')
func_9372_call = mutated_mod.get_global_var('func_9372')
call_10329 = func_9370_call()
call_10330 = func_9370_call()
func_9370_call = mod.get_global_var('func_9370')
func_9372_call = mutated_mod.get_global_var('func_9372')
call_10337 = func_9370_call()
call_10338 = func_9370_call()
func_4832_call = mod.get_global_var('func_4832')
func_4834_call = mutated_mod.get_global_var('func_4834')
var_10357 = relay.var("var_10357", dtype = "float32", shape = (3, 104))#candidate|10357|(3, 104)|var|float32
call_10356 = func_4832_call(relay.reshape(var_10357.astype('float32'), [12, 13, 2]))
call_10358 = func_4832_call(relay.reshape(var_10357.astype('float32'), [12, 13, 2]))
output = relay.Tuple([call_10329,call_10337,call_10356,var_10357,])
output2 = relay.Tuple([call_10330,call_10338,call_10358,var_10357,])
func_10361 = relay.Function([var_10357,], output)
mod['func_10361'] = func_10361
mod = relay.transform.InferType()(mod)
var_10362 = relay.var("var_10362", dtype = "float32", shape = (3, 104))#candidate|10362|(3, 104)|var|float32
output = func_10361(var_10362)
func_10363 = relay.Function([var_10362], output)
mutated_mod['func_10363'] = func_10363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8708_call = mod.get_global_var('func_8708')
func_8710_call = mutated_mod.get_global_var('func_8710')
call_10439 = func_8708_call()
call_10440 = func_8708_call()
output = call_10439
output2 = call_10440
func_10441 = relay.Function([], output)
mod['func_10441'] = func_10441
mod = relay.transform.InferType()(mod)
output = func_10441()
func_10442 = relay.Function([], output)
mutated_mod['func_10442'] = func_10442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10092_call = mod.get_global_var('func_10092')
func_10093_call = mutated_mod.get_global_var('func_10093')
call_10445 = func_10092_call()
call_10446 = func_10092_call()
var_10452 = relay.var("var_10452", dtype = "float32", shape = (8, 3, 7))#candidate|10452|(8, 3, 7)|var|float32
bop_10453 = relay.power(call_10445.astype('float32'), relay.reshape(var_10452.astype('float32'), relay.shape_of(call_10445))) # shape=(8, 3, 7)
bop_10456 = relay.power(call_10446.astype('float32'), relay.reshape(var_10452.astype('float32'), relay.shape_of(call_10446))) # shape=(8, 3, 7)
uop_10458 = relay.sinh(bop_10453.astype('float32')) # shape=(8, 3, 7)
uop_10460 = relay.sinh(bop_10456.astype('float32')) # shape=(8, 3, 7)
output = uop_10458
output2 = uop_10460
func_10465 = relay.Function([var_10452,], output)
mod['func_10465'] = func_10465
mod = relay.transform.InferType()(mod)
var_10466 = relay.var("var_10466", dtype = "float32", shape = (8, 3, 7))#candidate|10466|(8, 3, 7)|var|float32
output = func_10465(var_10466)
func_10467 = relay.Function([var_10466], output)
mutated_mod['func_10467'] = func_10467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9200_call = mod.get_global_var('func_9200')
func_9202_call = mutated_mod.get_global_var('func_9202')
call_10478 = relay.TupleGetItem(func_9200_call(), 1)
call_10479 = relay.TupleGetItem(func_9202_call(), 1)
output = call_10478
output2 = call_10479
func_10483 = relay.Function([], output)
mod['func_10483'] = func_10483
mod = relay.transform.InferType()(mod)
output = func_10483()
func_10484 = relay.Function([], output)
mutated_mod['func_10484'] = func_10484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9317_call = mod.get_global_var('func_9317')
func_9319_call = mutated_mod.get_global_var('func_9319')
call_10488 = relay.TupleGetItem(func_9317_call(), 1)
call_10489 = relay.TupleGetItem(func_9319_call(), 1)
output = relay.Tuple([call_10488,])
output2 = relay.Tuple([call_10489,])
func_10518 = relay.Function([], output)
mod['func_10518'] = func_10518
mod = relay.transform.InferType()(mod)
output = func_10518()
func_10519 = relay.Function([], output)
mutated_mod['func_10519'] = func_10519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10483_call = mod.get_global_var('func_10483')
func_10484_call = mutated_mod.get_global_var('func_10484')
call_10531 = func_10483_call()
call_10532 = func_10483_call()
func_8708_call = mod.get_global_var('func_8708')
func_8710_call = mutated_mod.get_global_var('func_8710')
call_10536 = func_8708_call()
call_10537 = func_8708_call()
func_5419_call = mod.get_global_var('func_5419')
func_5421_call = mutated_mod.get_global_var('func_5421')
var_10541 = relay.var("var_10541", dtype = "float64", shape = (1694,))#candidate|10541|(1694,)|var|float64
call_10540 = relay.TupleGetItem(func_5419_call(relay.reshape(var_10541.astype('float64'), [11, 14, 11])), 0)
call_10542 = relay.TupleGetItem(func_5421_call(relay.reshape(var_10541.astype('float64'), [11, 14, 11])), 0)
output = relay.Tuple([call_10531,call_10536,call_10540,var_10541,])
output2 = relay.Tuple([call_10532,call_10537,call_10542,var_10541,])
func_10543 = relay.Function([var_10541,], output)
mod['func_10543'] = func_10543
mod = relay.transform.InferType()(mod)
var_10544 = relay.var("var_10544", dtype = "float64", shape = (1694,))#candidate|10544|(1694,)|var|float64
output = func_10543(var_10544)
func_10545 = relay.Function([var_10544], output)
mutated_mod['func_10545'] = func_10545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9317_call = mod.get_global_var('func_9317')
func_9319_call = mutated_mod.get_global_var('func_9319')
call_10617 = relay.TupleGetItem(func_9317_call(), 0)
call_10618 = relay.TupleGetItem(func_9319_call(), 0)
output = call_10617
output2 = call_10618
func_10620 = relay.Function([], output)
mod['func_10620'] = func_10620
mod = relay.transform.InferType()(mod)
output = func_10620()
func_10621 = relay.Function([], output)
mutated_mod['func_10621'] = func_10621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8495_call = mod.get_global_var('func_8495')
func_8496_call = mutated_mod.get_global_var('func_8496')
call_10660 = relay.TupleGetItem(func_8495_call(), 0)
call_10661 = relay.TupleGetItem(func_8496_call(), 0)
output = call_10660
output2 = call_10661
func_10670 = relay.Function([], output)
mod['func_10670'] = func_10670
mod = relay.transform.InferType()(mod)
mutated_mod['func_10670'] = func_10670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10670_call = mutated_mod.get_global_var('func_10670')
call_10671 = func_10670_call()
output = call_10671
func_10672 = relay.Function([], output)
mutated_mod['func_10672'] = func_10672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9723_call = mod.get_global_var('func_9723')
func_9725_call = mutated_mod.get_global_var('func_9725')
call_10758 = relay.TupleGetItem(func_9723_call(), 1)
call_10759 = relay.TupleGetItem(func_9725_call(), 1)
const_10778 = relay.const([[[1.652821,2.537872,5.590046,2.822589,-6.672505,-4.930052,8.225569],[-7.771118,-9.753627,-8.426207,-1.520928,4.691172,-5.854257,-3.123433],[-7.404231,5.099306,6.652412,2.263983,-7.685696,-7.041664,-1.832393]],[[9.451574,0.318104,0.522151,-1.557398,-8.043635,-0.159852,4.650544],[-2.729579,-3.130253,8.209096,-2.611882,6.420079,7.809770,-5.515544],[-1.361935,8.629001,-9.192096,-2.662902,-9.159090,-1.769137,7.270137]],[[-5.118445,2.750875,0.382802,-8.548269,-2.536849,7.885768,-9.625321],[8.345542,-4.224842,0.830237,7.161515,1.796440,8.607503,9.970617],[-9.098333,-9.083293,2.720865,4.245278,-5.056961,-9.295658,-7.646231]],[[-5.892695,-1.450719,8.338988,6.323392,-0.840597,6.974474,-9.283073],[9.654823,-8.380725,6.062335,4.281870,-0.053203,7.155734,-7.347876],[6.509467,4.979060,2.045050,4.319494,-4.596156,1.446400,-0.092922]],[[-1.312569,-1.019607,-5.267339,-9.817414,0.521761,-3.408012,-7.994435],[-5.460959,1.472277,-2.287667,5.059103,2.324008,-4.752465,-4.798882],[-2.767995,-0.089093,5.691222,9.774742,3.772540,7.627326,3.713870]],[[7.565335,3.659385,-9.384243,1.798582,8.712507,-3.966726,-9.294370],[2.245976,-5.657701,2.894021,-7.023362,3.908134,-4.328547,9.829822],[-8.698485,2.887729,9.895560,8.137476,-5.402637,-5.399804,-6.999066]],[[-7.812196,6.372068,5.813197,2.531809,3.590990,9.788557,0.596523],[1.998201,-4.185982,2.296593,1.121373,-5.573394,-0.260831,-3.583845],[5.024251,7.214722,6.252657,9.994575,9.262243,1.152302,-5.418865]],[[1.927975,-2.469044,7.147427,-7.655239,-6.336294,3.114507,8.094846],[1.077534,-5.815535,-6.502303,-9.330845,-2.058251,-6.510549,5.680779],[-0.638051,-3.140574,5.592811,3.720134,9.783500,-0.477005,2.559109]]], dtype = "float32")#candidate|10778|(8, 3, 7)|const|float32
bop_10779 = relay.not_equal(call_10758.astype('bool'), relay.reshape(const_10778.astype('bool'), relay.shape_of(call_10758))) # shape=(8, 3, 7)
bop_10782 = relay.not_equal(call_10759.astype('bool'), relay.reshape(const_10778.astype('bool'), relay.shape_of(call_10759))) # shape=(8, 3, 7)
func_8829_call = mod.get_global_var('func_8829')
func_8830_call = mutated_mod.get_global_var('func_8830')
call_10783 = relay.TupleGetItem(func_8829_call(), 1)
call_10784 = relay.TupleGetItem(func_8830_call(), 1)
output = relay.Tuple([bop_10779,call_10783,])
output2 = relay.Tuple([bop_10782,call_10784,])
func_10785 = relay.Function([], output)
mod['func_10785'] = func_10785
mod = relay.transform.InferType()(mod)
output = func_10785()
func_10786 = relay.Function([], output)
mutated_mod['func_10786'] = func_10786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9370_call = mod.get_global_var('func_9370')
func_9372_call = mutated_mod.get_global_var('func_9372')
call_10789 = func_9370_call()
call_10790 = func_9370_call()
output = call_10789
output2 = call_10790
func_10806 = relay.Function([], output)
mod['func_10806'] = func_10806
mod = relay.transform.InferType()(mod)
output = func_10806()
func_10807 = relay.Function([], output)
mutated_mod['func_10807'] = func_10807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9104_call = mod.get_global_var('func_9104')
func_9106_call = mutated_mod.get_global_var('func_9106')
call_10808 = relay.TupleGetItem(func_9104_call(), 0)
call_10809 = relay.TupleGetItem(func_9106_call(), 0)
output = call_10808
output2 = call_10809
func_10818 = relay.Function([], output)
mod['func_10818'] = func_10818
mod = relay.transform.InferType()(mod)
mutated_mod['func_10818'] = func_10818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10818_call = mutated_mod.get_global_var('func_10818')
call_10819 = func_10818_call()
output = call_10819
func_10820 = relay.Function([], output)
mutated_mod['func_10820'] = func_10820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8902_call = mod.get_global_var('func_8902')
func_8903_call = mutated_mod.get_global_var('func_8903')
call_10843 = relay.TupleGetItem(func_8902_call(), 0)
call_10844 = relay.TupleGetItem(func_8903_call(), 0)
func_5218_call = mod.get_global_var('func_5218')
func_5223_call = mutated_mod.get_global_var('func_5223')
var_10867 = relay.var("var_10867", dtype = "bool", shape = (2, 216))#candidate|10867|(2, 216)|var|bool
call_10866 = relay.TupleGetItem(func_5218_call(relay.reshape(var_10867.astype('bool'), [12, 3, 12]), relay.reshape(var_10867.astype('bool'), [12, 3, 12]), relay.reshape(var_10867.astype('bool'), [12, 3, 12]), ), 0)
call_10868 = relay.TupleGetItem(func_5223_call(relay.reshape(var_10867.astype('bool'), [12, 3, 12]), relay.reshape(var_10867.astype('bool'), [12, 3, 12]), relay.reshape(var_10867.astype('bool'), [12, 3, 12]), ), 0)
output = relay.Tuple([call_10843,call_10866,var_10867,])
output2 = relay.Tuple([call_10844,call_10868,var_10867,])
func_10877 = relay.Function([var_10867,], output)
mod['func_10877'] = func_10877
mod = relay.transform.InferType()(mod)
var_10878 = relay.var("var_10878", dtype = "bool", shape = (2, 216))#candidate|10878|(2, 216)|var|bool
output = func_10877(var_10878)
func_10879 = relay.Function([var_10878], output)
mutated_mod['func_10879'] = func_10879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8902_call = mod.get_global_var('func_8902')
func_8903_call = mutated_mod.get_global_var('func_8903')
call_10892 = relay.TupleGetItem(func_8902_call(), 0)
call_10893 = relay.TupleGetItem(func_8903_call(), 0)
output = call_10892
output2 = call_10893
func_10897 = relay.Function([], output)
mod['func_10897'] = func_10897
mod = relay.transform.InferType()(mod)
mutated_mod['func_10897'] = func_10897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10897_call = mutated_mod.get_global_var('func_10897')
call_10898 = func_10897_call()
output = call_10898
func_10899 = relay.Function([], output)
mutated_mod['func_10899'] = func_10899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8829_call = mod.get_global_var('func_8829')
func_8830_call = mutated_mod.get_global_var('func_8830')
call_10900 = relay.TupleGetItem(func_8829_call(), 1)
call_10901 = relay.TupleGetItem(func_8830_call(), 1)
func_10092_call = mod.get_global_var('func_10092')
func_10093_call = mutated_mod.get_global_var('func_10093')
call_10916 = func_10092_call()
call_10917 = func_10092_call()
output = relay.Tuple([call_10900,call_10916,])
output2 = relay.Tuple([call_10901,call_10917,])
func_10922 = relay.Function([], output)
mod['func_10922'] = func_10922
mod = relay.transform.InferType()(mod)
output = func_10922()
func_10923 = relay.Function([], output)
mutated_mod['func_10923'] = func_10923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10251_call = mod.get_global_var('func_10251')
func_10252_call = mutated_mod.get_global_var('func_10252')
call_11066 = relay.TupleGetItem(func_10251_call(), 0)
call_11067 = relay.TupleGetItem(func_10252_call(), 0)
output = relay.Tuple([call_11066,])
output2 = relay.Tuple([call_11067,])
func_11079 = relay.Function([], output)
mod['func_11079'] = func_11079
mod = relay.transform.InferType()(mod)
mutated_mod['func_11079'] = func_11079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11079_call = mutated_mod.get_global_var('func_11079')
call_11080 = func_11079_call()
output = call_11080
func_11081 = relay.Function([], output)
mutated_mod['func_11081'] = func_11081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10897_call = mod.get_global_var('func_10897')
func_10899_call = mutated_mod.get_global_var('func_10899')
call_11092 = func_10897_call()
call_11093 = func_10897_call()
output = relay.Tuple([call_11092,])
output2 = relay.Tuple([call_11093,])
func_11096 = relay.Function([], output)
mod['func_11096'] = func_11096
mod = relay.transform.InferType()(mod)
output = func_11096()
func_11097 = relay.Function([], output)
mutated_mod['func_11097'] = func_11097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10806_call = mod.get_global_var('func_10806')
func_10807_call = mutated_mod.get_global_var('func_10807')
call_11123 = func_10806_call()
call_11124 = func_10806_call()
func_9812_call = mod.get_global_var('func_9812')
func_9815_call = mutated_mod.get_global_var('func_9815')
var_11129 = relay.var("var_11129", dtype = "float64", shape = (1694,))#candidate|11129|(1694,)|var|float64
call_11128 = relay.TupleGetItem(func_9812_call(relay.reshape(call_11123.astype('float32'), [8, 3, 7]), relay.reshape(var_11129.astype('float64'), [1694,]), ), 1)
call_11130 = relay.TupleGetItem(func_9815_call(relay.reshape(call_11123.astype('float32'), [8, 3, 7]), relay.reshape(var_11129.astype('float64'), [1694,]), ), 1)
output = relay.Tuple([call_11123,call_11128,var_11129,])
output2 = relay.Tuple([call_11124,call_11130,var_11129,])
func_11132 = relay.Function([var_11129,], output)
mod['func_11132'] = func_11132
mod = relay.transform.InferType()(mod)
mutated_mod['func_11132'] = func_11132
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11133 = relay.var("var_11133", dtype = "float64", shape = (1694,))#candidate|11133|(1694,)|var|float64
func_11132_call = mutated_mod.get_global_var('func_11132')
call_11134 = func_11132_call(var_11133)
output = call_11134
func_11135 = relay.Function([var_11133], output)
mutated_mod['func_11135'] = func_11135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10092_call = mod.get_global_var('func_10092')
func_10093_call = mutated_mod.get_global_var('func_10093')
call_11178 = func_10092_call()
call_11179 = func_10092_call()
func_8800_call = mod.get_global_var('func_8800')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_11187 = func_8800_call()
call_11188 = func_8800_call()
output = relay.Tuple([call_11178,call_11187,])
output2 = relay.Tuple([call_11179,call_11188,])
func_11207 = relay.Function([], output)
mod['func_11207'] = func_11207
mod = relay.transform.InferType()(mod)
output = func_11207()
func_11208 = relay.Function([], output)
mutated_mod['func_11208'] = func_11208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9370_call = mod.get_global_var('func_9370')
func_9372_call = mutated_mod.get_global_var('func_9372')
call_11226 = func_9370_call()
call_11227 = func_9370_call()
func_10922_call = mod.get_global_var('func_10922')
func_10923_call = mutated_mod.get_global_var('func_10923')
call_11229 = relay.TupleGetItem(func_10922_call(), 0)
call_11230 = relay.TupleGetItem(func_10923_call(), 0)
output = relay.Tuple([call_11226,call_11229,])
output2 = relay.Tuple([call_11227,call_11230,])
func_11231 = relay.Function([], output)
mod['func_11231'] = func_11231
mod = relay.transform.InferType()(mod)
mutated_mod['func_11231'] = func_11231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11231_call = mutated_mod.get_global_var('func_11231')
call_11232 = func_11231_call()
output = call_11232
func_11233 = relay.Function([], output)
mutated_mod['func_11233'] = func_11233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9104_call = mod.get_global_var('func_9104')
func_9106_call = mutated_mod.get_global_var('func_9106')
call_11240 = relay.TupleGetItem(func_9104_call(), 1)
call_11241 = relay.TupleGetItem(func_9106_call(), 1)
func_1636_call = mod.get_global_var('func_1636')
func_1640_call = mutated_mod.get_global_var('func_1640')
const_11259 = relay.const([-6.279571,-3.023715,8.809202,3.574754,-0.076648,-6.233872,6.816802,-4.485514,8.473282,3.503427,-2.095690,-4.210978,-7.790591,-8.195925,5.351298,0.147083,-8.341301,-2.661649,-7.343156,-3.939932,-5.727212,-8.277232,-5.151327,1.153452,-1.936353,-3.649455,-0.156594,-1.651703,4.481044,-7.851866,-4.471524,-4.093090,6.338496,-3.207101,-8.218054,-8.871443,7.438026,-4.672027,-9.634638,-2.168115,-8.812531,0.097869,3.277928,8.172579,-4.074260,-7.224084,7.789161,-7.918770,3.503554,1.749200,0.431345,-9.774279,-7.430882,3.998777,-7.262120,-9.728464,-7.664995,-8.276442,7.030898,-2.768878,9.134965,-9.017555,-5.588683,-9.217231,-7.087982,4.596022,2.243363,-8.086598,7.728788,-1.796029,4.281370,-9.570716,-0.852932,-0.998358,6.441844,-3.263263,0.162170,5.667272,7.326890,8.639775,2.799804,3.641520,4.367332,7.317307,5.295606,-9.365808,-3.451412,-8.706765,1.072122,-9.666823,-2.827508,-0.948389,3.421962,6.431193,4.301071,-1.721441,7.248026,3.969273,-8.578757,2.106214,8.268332,-3.339772,0.201561,-5.170425,0.878980,4.026709,3.035637,8.831458,3.866902,1.859183,-5.343424,-4.542588,-1.608481,-1.932687,-2.127572,-3.540262,5.395697,3.777541,-9.939687,-2.876302,-9.857588,5.807276,2.991024,-3.752207,6.043777,3.716299,-6.988015,4.320187,5.892634,8.844165,-0.608754,5.622972,-9.666932,-6.134941,2.506284,7.213780,-1.589278,2.562856,1.359543,-4.764576,-6.545845,-7.014727,0.417936,7.321983,3.684330,-2.115168,-2.918402,-5.672670,-5.353484,7.930063,8.155826,0.904479,6.228067,1.948620,9.484390,7.105310,0.658965,-7.674716,-5.656468,3.603435,-4.169688,6.202664,-9.148398,2.802686,-1.339596,-9.027022,1.564661,9.002964,-6.002995,-4.207152,-6.143142,9.903762,0.516286,4.955609,4.466838,-4.673436,-0.615898,1.231174,1.969568,-7.157368,6.820440,7.447756,-8.259085,-3.613317,3.949374,-7.968766,-4.317009,2.942949,1.022055,7.585846,0.176350,-4.712183,5.937137,-9.783313,5.207684,-9.145419,6.664200,3.183749,-8.435216,2.610514,-8.464490,-6.727065,2.671864,1.307813,-7.404830,-8.514970,-3.418373,1.567636,-3.218768,-5.853529,-8.983894,-1.901755,-7.960870,-7.139247,5.261931,-7.486589,0.304027,6.263954,-7.516989,-7.615130,3.167226,-9.913281,0.868601,-0.180842,-7.709274,5.199332,9.472736,-2.873715,-8.902141,3.010580,-6.919475,8.482695,-9.443799,1.227484,7.738430,8.193904,-9.448973,-2.131485,6.799728,1.882568,0.768918,5.773469,-6.491335,-9.735850,-8.657971,6.576958,7.961658,-6.258691,3.479667,-0.890888,6.352229,3.496404,-7.794373,-6.843506,-7.915807,5.995622,-2.441759,7.412654,-9.471657,3.114443,2.079477,-3.113921,-2.769070,-8.706044,-8.869825,-9.055188,-0.085786,2.031326,-8.197844,-6.712510,9.449556,-2.269219,-3.407719,-9.101962,-3.762668,7.866567,-7.704239,-6.222693,0.393344,-9.644536,-8.871312,9.594340,1.632990,4.226444,-6.732042,-4.801891,3.826954,-5.109353,-3.691229,-3.336569,-8.233175,-1.678742,1.510822,5.887806,2.709567,-0.863345,0.796224,-6.025385,-2.516834,-1.638077,-8.409034,-6.205738,8.129038,6.968195,-9.829695,-2.521595,-3.065729,1.528142,-2.419083,-7.814719,1.995968,5.565972,-2.103446,7.894245,5.291161,-6.468922,-5.287094,1.274245,5.661442,-7.723833,-0.830086,-5.399070,6.532850,5.174936,9.355589,-6.182324,-6.141211,5.907351,5.082783,-7.280458,-2.301240,-2.197963,8.659497,-6.109146,4.608008,-3.714708,-2.006238,-1.235356,6.495863,2.909969,1.761604,9.896966,5.520505,-7.269758,0.597297,4.093128,0.033171,-5.352640,5.554866,8.273927,0.914695,-6.178008,9.252379,-1.702056,-0.169619,4.747291,5.333517,-8.488348,8.816337,4.167663,2.720892,-7.327025,0.551006,4.093789,0.566669,9.689058,9.814771,-7.997786,-8.659023,1.467016,-2.011192,-6.983649,1.035836,-1.175474,9.011173,0.914894,-9.467023,-4.662590,-2.369814,-1.293018,-6.756362,2.710469,-5.820661,-5.250048,-0.815202,9.020695,-9.079504,-1.889702,-2.504806,-7.567725,-3.108085,-7.124261,9.872592,-4.950554,3.333065,-8.784783,-3.389452,1.223619,6.213934,2.717992,6.690012,7.932447,-9.579928,4.692807,-4.181253,6.289415,2.858767,-8.277228,-1.817580,-0.506457,7.752336,2.673864,-2.126710,-6.212352,4.177359,9.986466,1.313615,-0.998048,-3.237661,-4.898071,-8.721044,-8.833523,-8.874233,-5.714531,1.316575,-9.327090,9.918374,6.071229,-9.521693,-8.180089,7.658928,-5.854325,-8.928209,8.791473,-8.142391,4.117856,5.264428,-1.939443,-1.684000,-2.393092,3.995496,6.156659,-6.102739,2.554120,-9.857589,-0.374685,4.459819,-8.281173,-8.285110,4.916055,-1.863899,1.842937,-0.716680,7.467084,-5.909072,-2.018926,-4.783104,3.504306,-7.167059,5.370404,-1.439030,8.321101,-1.296050,6.985588,0.117817,7.688094,2.497332,1.523385,-9.286431,4.883445,-7.184006,-7.550751,7.361803,9.250659,-1.362970,-2.454665,5.089429,6.103876,-7.111671,-7.387069,2.060034,1.951645,-0.977770,-6.334586,7.174392,2.417303,1.258889,-1.789763,5.027934,2.337245,-6.828213,-2.768731,1.313953,2.828584,-9.787554,7.481676,0.032089,9.001204,8.535360,-1.277929,3.015541,-6.208319,1.002094,4.059045,-4.944200,4.351715,-1.643686,-8.635526,3.588166,3.909586,1.914464,0.231660,9.228440,-0.997748,-4.933353,7.138947,4.823270,-8.912412,-6.759541,3.018330,-9.359810,6.729134,7.091728,-0.201503,7.610435,-8.673845,-3.488992,3.123135,-3.645398,-3.961151,-9.948120,-4.207303,9.448571,4.197844,-7.044042,5.412521,5.127460,-7.989854,-7.743095,8.456887,-0.805025,1.544589,0.724155,2.107212,-8.581408,-8.851296,5.424059,-4.104688,7.243107,3.131794,2.892004,1.819780,7.666610,6.773076,-2.900462,-0.386160,-8.890459,-4.453425,-8.557212,-0.552101,0.164652,-1.942874,2.074188,-5.072112,-2.309004,3.936029,-0.357784,-2.909310,-0.547695,5.220807,-0.150376,4.373779,6.612673,-3.437408,5.775465,7.044786,4.356962,-4.624707,-5.243573,2.415708,-1.795600,-4.280699,0.785047,-8.295545,-3.049190,0.391032,4.057022,-1.349565,-3.887549,2.666210,9.272716,-0.896734,-1.347444,9.300242,5.202805,8.632222,4.526293,-5.833178,-7.581921,-9.670484,6.509623,4.418257,9.480742,3.412294,-4.187601,2.516213,4.617239,-7.064902,-5.591433,9.121572,-1.389130,6.158495,-1.445578,4.931905,0.569596,-8.012478,8.249524,1.888345,3.740292,-0.569997,8.888886,1.417096,8.162444,-0.069910,5.653493,-3.464862,-5.822925,-3.682599,0.714086,4.330152,9.921535,2.388445,3.610100,4.650141,-3.321945,-7.612328,-5.729183,-2.865187,7.153277,5.584114,-6.139747,4.830557,-0.264548,-4.433191,8.983953,-3.240876,3.611552,9.980881,-9.862152,9.369236,-6.165076,1.771408,0.933790,-3.295194,-7.262072,4.168879,3.913029,-0.191610,-8.980977,-1.986862,-8.909822,8.437982,-5.593619,6.665855,1.294329,0.412978,-8.909430,-2.821490,3.380791,3.739251,6.078223,-1.806629,2.621132,-0.763279,7.895992,5.492726,3.040518,6.117664,3.563012,-0.936737,3.872779,-2.393283,-8.958045,2.427804,2.571566,-3.860798,-4.485950,-0.265792,0.464871,4.800913,5.050815,-5.244171,5.939957,-4.942632,-7.486505,-1.413450,5.559251,-3.555425,9.295137,3.692813,-5.772705,1.328040,-9.467863,-2.030581,-1.477462,7.971079,-2.613759,-8.777124,8.428234,-1.417268,-6.455470,-6.670676,6.027902,2.032070,-2.480185,2.571713,-9.914641,4.919398,-7.685475,-1.116501,-0.576508,-5.383760,-0.792194,-6.474501,-4.513609,4.243202,8.418114,-0.982186,-3.096198,-3.162019,-3.788571,5.219640,-5.803802,4.577087,-8.881535,-0.621171,4.928414,1.968699,5.636567,-0.347520,-7.502775,-1.773730,2.412298,-8.952886,4.053324,-5.623466,1.014600,-2.355599,5.647178,-1.002736,-4.284701,-7.577643,-6.644366,5.253177,3.538495,3.311355,4.777425,-0.896355,-6.001601,4.247895,6.744883,0.951045,7.833680,-1.860616,2.040565,0.827920,2.783766,-2.135168,1.484015,-3.840898,2.063062,6.337652,6.100328,6.038974,-9.926378,2.216305,-3.110350,-4.345457,1.209824,-6.619000,-7.098173,-0.694932,5.828169,7.125461,-6.399149,-5.950776,5.956977,-0.844561,4.265797,-0.887555,-8.063423,7.385795,-3.871310,6.389482,-8.788375,-4.487694,6.304942,7.899561,4.034111,2.664855,-7.766735,0.530189,5.083967,-1.307519,3.207437,1.536512,5.221553,4.996397,-5.726548,6.475700,-5.123837,8.470097,-5.901058,3.632142,2.933989,0.645861,-1.204288,8.518479,-0.199169,-6.321648,-8.449426,-8.084362,-1.072018,4.202233,-0.240531,0.827646,0.642214,-7.443877,9.885555,9.188298,-5.999402,-7.717186,-7.618326,5.599928,-6.638089,-9.586558,4.269356,-8.250290,-0.235416,-6.221557,-5.551819,-4.522051,1.805089,3.576810,-4.433945,2.782632,9.835761,1.410998,-8.765910,-2.844832,-7.357846,8.860636,3.198649,9.789040,-8.668936,-3.957209,4.624661,-3.858632,8.725738,-0.870987,-6.883562,5.064103,9.353776,0.195850,6.650759,-3.854386,9.869363,0.730911,2.934993,-4.627555,-6.349807,-5.485762,3.040302,-7.632804,-6.657588,-6.762996,6.484165,-9.997637,-3.329611,-1.921646,-5.675551,3.365510,-2.494845,-6.932597,3.357662,2.330925,-0.637967,-1.892502,-3.463982,-9.769195,5.642718,-3.497430,-2.744512,5.429520,-4.669240,-2.783301,7.862666,-8.189504,-1.257223,6.081351,-7.201066,-6.082811,7.361523,-2.228370,3.532504,-2.548467,-6.953675,9.767316,-8.373061,3.611968,-7.942905,5.223019,-5.606596,-0.675565,-1.133430,-8.085961,-4.281041,2.845114,1.775330,-7.467313,2.219863,8.745449,6.955314,-4.534261,-9.205892,-1.826923,-4.598504,-8.986220,-7.676549,8.383306,-1.186696,2.042194,-2.073702,-2.884689,-2.410395,5.127064,-2.919880,4.282738,6.181437,7.977039,-1.212123,9.018209,3.909908,0.017675,-7.917628,-2.669339,-2.243132,0.064029,6.308143,7.852075,-4.569748,4.748788,1.346908,-1.686135,-9.773698,-8.535935,-9.304394,9.675971,7.883386,5.076927,-9.173455,3.200169,0.188815,5.657065,-7.624069,-8.473020,3.329809,9.890449,4.368273,-6.041674,5.022056,-2.994155,-9.787863,7.953094,-4.954842,4.429290,3.449460,9.953075,7.198493,3.962181,0.188258,5.204099,9.072468,-1.184178,-9.611527,-2.917231,3.225393,1.020074,5.930256,-1.626523,3.796019,-3.747242,-0.450413,3.415244,-4.729556,3.420346,2.441975,5.163241,-4.917222,6.441258,-2.353460,-4.186905,-0.494661,8.090047,5.105394,4.787635,8.629676,1.555183,6.525116,9.723215,6.021039,-7.980717,6.219670,6.823332,6.031064,8.885532,-9.214312,0.423754,0.858013,-4.628575,-7.783507,-1.855160,8.785411,4.389762,-2.592006,9.761991,-9.659664,-6.393095,1.244759,2.501391,-8.883621,-7.417623,-8.514815,0.809643,-7.235266,-5.791506,7.805218,-1.196577,-4.923388,-9.316676,-0.229145,-5.636054,4.091449,5.530714,-8.749138,1.369744,3.851728,-2.451807,2.818482,2.231890,9.868567,7.392736,-2.091362,-3.900475,8.946976,-3.044949,-5.181517,-9.394870,1.119159,-4.947636,-8.648254,6.727451,1.123756,-3.104613,4.063737,-2.605231,5.953962,-2.113159,9.449665,5.207798,2.234841,-2.395877,-2.632302,3.256934,-7.382354,-5.226590,4.084381,-0.753192,0.544090,2.011443,8.395909,7.668424,6.725357,-4.332801,-1.856639,-2.895828,7.064713,6.332685,2.842683,-1.994812,-9.504356,4.479168,-2.017661,-2.743686,-3.969916,-3.242529,5.894066,-7.338603,5.756723,6.063910,-5.051967,3.315122,8.517344,-7.982965,0.265294,-7.965183,3.274866,9.435287,-6.681201,8.953062,-4.782754,-3.867823,5.796919,-6.003187,7.376044,9.087688,1.905325,-8.738215,6.134258,-8.100325,8.365198,6.341588,-9.410706,-2.928311,-9.975628,2.848287,6.880697,8.475596,-4.068399,-0.889611,0.374913,-3.186332,-0.253770,4.654051,3.498606,4.732056,7.031120,0.252121,2.396594,-2.506593,1.152110,-2.314301,6.295056,5.985825,-8.763652,8.321145,8.026582,-9.083705,-7.275560,-8.305042,9.077425,-3.183012,-8.055455,-4.294434,9.395461,3.779318,-7.671897,-0.377644,1.944159,-4.027078,8.638779,-2.017819,1.237971,-8.602727,-3.945250,0.153370,-2.139623,-5.888420,3.996138,6.371356,5.434184,9.640809,-6.175248,5.223995,2.725818,6.349059,-5.735466,-9.118228,2.093070,3.232479,3.484319,9.585934,2.401879,-7.462093,6.847881,2.344378,-3.008228,-4.892871,-5.322675,4.541040,7.519505,-9.299562,-8.808301,4.414076,-8.198126,8.850815,6.950674,5.890992,6.324040,2.643425,6.762555,6.447726,5.379418,8.689380,-5.717413,-0.717969,6.283247,0.279878,4.470962,7.692073,5.070499,6.916773,-2.191610,5.276253,-7.183926,-3.635559,-7.108312,4.638126,9.948456,6.427720,9.333884,-0.792054,1.533405,-7.212384,-5.544454,-1.014310,0.167540,9.586667,-5.472935,5.537960,8.813471,0.436056,0.774780,-4.183165,3.425447,-8.485887,2.602772,6.735647,-3.076284,6.172465,-1.400572,6.209766,6.526855,6.100360,7.567480,-1.692070,-5.190722,-9.226830,-0.809441,-9.786960,3.110409,1.527216,9.615524,1.951346,-3.810028,1.575948,-0.458231,-7.638270,1.428613,8.322986,-6.775179,2.149222,9.239504,6.830958,-0.709684,7.486231,-8.400248,-7.095479,-3.019573,-1.539828,-3.710632,6.757653,-4.210278,-4.445923,2.793758,-4.859891,9.872056,-2.548559,-2.979600,5.961780,1.579703,-2.805838,2.766403,-1.283746,-3.042597,-3.244396,-9.087840,4.373215,-1.790616,-0.239627,2.761359,2.780550,-0.439162,-7.460629,9.868717,-9.063534,-0.966472,7.490118,9.642482,0.146646,-2.556008,6.744353,0.539163,4.782791,-4.795017,7.619929,-6.376161,8.983794,-5.476021,6.072760,9.344235,4.221623,-8.521992,7.593976,-1.274372,9.011291,-0.130339,9.034998,9.335652,4.401899], dtype = "float64")#candidate|11259|(1320,)|const|float64
var_11260 = relay.var("var_11260", dtype = "float64", shape = (11, 14))#candidate|11260|(11, 14)|var|float64
call_11258 = relay.TupleGetItem(func_1636_call(relay.reshape(const_11259.astype('float64'), [12, 11, 10]), relay.reshape(var_11260.astype('float64'), [22, 7]), relay.reshape(var_11260.astype('float32'), [22, 7]), ), 0)
call_11261 = relay.TupleGetItem(func_1640_call(relay.reshape(const_11259.astype('float64'), [12, 11, 10]), relay.reshape(var_11260.astype('float64'), [22, 7]), relay.reshape(var_11260.astype('float32'), [22, 7]), ), 0)
output = relay.Tuple([call_11240,call_11258,const_11259,var_11260,])
output2 = relay.Tuple([call_11241,call_11261,const_11259,var_11260,])
func_11262 = relay.Function([var_11260,], output)
mod['func_11262'] = func_11262
mod = relay.transform.InferType()(mod)
var_11263 = relay.var("var_11263", dtype = "float64", shape = (11, 14))#candidate|11263|(11, 14)|var|float64
output = func_11262(var_11263)
func_11264 = relay.Function([var_11263], output)
mutated_mod['func_11264'] = func_11264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8947_call = mod.get_global_var('func_8947')
func_8948_call = mutated_mod.get_global_var('func_8948')
call_11269 = relay.TupleGetItem(func_8947_call(), 2)
call_11270 = relay.TupleGetItem(func_8948_call(), 2)
func_4000_call = mod.get_global_var('func_4000')
func_4002_call = mutated_mod.get_global_var('func_4002')
const_11272 = relay.const([8.927166,-8.331223,-8.560480,-9.987759,1.960032,-9.618762,-6.865473,-0.456282,-2.599036,-9.433433,0.380381,-5.118051,7.488584,-7.184274,-0.411789,-6.334227,-2.616102,5.262035,1.667975,-2.869774,0.900234,3.190224,2.445602,-0.161143,-2.043745,3.269000,3.102799,3.031874,1.423440,-0.337410,7.411921,6.590127,9.023655,-3.607531,1.798537,2.219535,1.006774,-7.607644,7.737924,-1.665104,3.487861,1.487797,-0.327654,7.827394,-4.073357,7.163343,-3.545439,0.533804,-8.776823,-7.113345,-1.290369,-7.291175,-4.738514,5.658917,1.455014,-2.921965,1.218137,-1.661699,-7.842571,1.205845,6.099261,-4.855923,3.427458,4.930401,7.460844,9.689636,-6.101680,5.193953,-8.551299,-0.205226,-9.183297,-4.685937,-0.680114,3.902262,-2.516809,1.678225,-3.384998,8.165644,-2.060085,4.125557,-7.136448,2.018641,-8.134294,-9.082861,7.176221,-0.465438,4.435909,8.353496,1.542470,-0.322189,4.854682,3.389209,5.787535,-4.892934,-3.283104,5.225483,-6.403191,8.911545,6.834668,-2.784234,-4.032397,-9.062227,1.623424,5.037488,9.453798,8.183809,9.535039,-4.486845,8.178595,-3.862278,-8.151622,8.688564,6.495083,5.391753,-0.380526,8.966972,-6.548676,-8.293113,-3.991135,2.213985,5.206669,-3.947077,6.217691,5.591317,5.977630,-0.391380,3.820713,3.928473,-4.797688,4.372498,-4.696314,7.377850,-1.832630,-6.304685,6.936295,-2.756490,-8.914421,-1.878478,7.612837,4.869067,9.404858,-4.244960,4.007682,3.205859,-0.872721,-3.523604,-1.098987,-4.049347,9.722362,5.549564,-4.432849,5.367430,-2.104970,-7.245261,0.721607,5.047468,-1.042813,6.785248,6.966580,8.497295,7.983014,-6.495588,-9.278618,-6.183293,6.338601,-9.634526,-5.096085,2.695417,1.315522,-4.907287,2.675747,-1.206844,-4.971591,9.414470,-1.940571,2.413041,-7.077203,6.911786,-4.687852,-0.789915,2.790110,1.678930,-1.199850,0.705642,7.769826,-6.505135,9.772803,-1.241590,-5.110553,7.129177,-5.674581,-8.501223,-9.158242,1.884473,1.171256,-7.089244,6.976782,-4.192539,-0.211406,4.416762,-6.626210,-2.252661,-0.186258,8.481156,-6.044361,-2.389085,2.847086,3.107374,-3.613619,9.788011,-5.849048,4.316867,1.976640,4.588447,1.985295,8.124879,-2.779140,1.038554,-4.329477,9.656928,0.988470,-9.705103,-2.819284,-6.687909,-7.253896,7.997017,6.860075,-6.561492,-7.839775,6.297077,3.102516,7.071034,-8.461294,-9.395057,9.657182,-7.210627,5.758227,-6.872870,-8.159994,3.427225,-4.638543,-1.542391,1.971078,-9.084976,-3.544345,2.623399,0.793612,-5.584213,9.818020,-5.893422,-2.216490,1.880922,4.406008,-5.898395,-4.499964,3.773694,-7.639896,-6.811868,-3.995549,6.755600,-5.187438,-9.796579,-8.303201,-3.993771,-2.271440,-0.988014,0.695851,-1.710924,9.105920,-7.297033,-4.521640,-8.324966,0.123403,-8.923850,-7.547608,3.759154,-3.027808,-0.432126,-1.197096,-2.452105,8.833073,4.126147,-6.898089,-6.531197,-7.569565,3.605831,-2.142409,2.503942,3.157657,9.199602,-3.778251,-0.557880,6.205724,9.849372,2.846485,-6.096223,-3.793861,4.542340,3.163692,9.311159,4.956651,0.298416,-1.690985,2.774208,-2.618647,6.391320,5.793494,-5.075327,-4.774240,-9.459627,2.976019,0.643738,2.333221,3.016684,-1.346161,-1.293540,4.264394,5.660583,0.193781,7.110804,8.724978,-1.888330,4.985691,4.097085,-2.307982,1.280467,-3.515459,3.066863,-4.919463,2.215900,7.249536,-3.590173,1.439261,5.878887,-7.333378,-5.220876,1.063170,2.324125,8.733167,0.679726,-6.404788,-8.361155,2.587913,-9.364280,-8.362124,-3.266822,-8.064157,-1.483256,-6.267515,-4.832171,4.627621,-0.569427,5.772956,8.039749,6.519949,-8.942127,4.298748,-7.569865,-0.296999,-3.418064,-3.325220,9.107311,4.242362,-8.203947,7.475057,4.139594,-2.690121,9.296303,5.889868,-9.895255,2.666646,-9.421644,2.002523,6.819152,-4.578569,-1.740354,-0.326844,1.735800], dtype = "float64")#candidate|11272|(378,)|const|float64
call_11271 = func_4000_call(relay.reshape(const_11272.astype('float64'), [6, 9, 7]))
call_11273 = func_4000_call(relay.reshape(const_11272.astype('float64'), [6, 9, 7]))
output = relay.Tuple([call_11269,call_11271,const_11272,])
output2 = relay.Tuple([call_11270,call_11273,const_11272,])
func_11279 = relay.Function([], output)
mod['func_11279'] = func_11279
mod = relay.transform.InferType()(mod)
mutated_mod['func_11279'] = func_11279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11279_call = mutated_mod.get_global_var('func_11279')
call_11280 = func_11279_call()
output = call_11280
func_11281 = relay.Function([], output)
mutated_mod['func_11281'] = func_11281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10441_call = mod.get_global_var('func_10441')
func_10442_call = mutated_mod.get_global_var('func_10442')
call_11309 = func_10441_call()
call_11310 = func_10441_call()
func_10113_call = mod.get_global_var('func_10113')
func_10114_call = mutated_mod.get_global_var('func_10114')
call_11329 = relay.TupleGetItem(func_10113_call(), 0)
call_11330 = relay.TupleGetItem(func_10114_call(), 0)
uop_11339 = relay.sqrt(call_11329.astype('float32')) # shape=(9, 14, 2)
uop_11341 = relay.sqrt(call_11330.astype('float32')) # shape=(9, 14, 2)
func_6055_call = mod.get_global_var('func_6055')
func_6058_call = mutated_mod.get_global_var('func_6058')
const_11359 = relay.const([2.451990,0.823716,4.262363,-5.057658,9.275723,-3.983606,7.705834,3.747258,1.701787,0.779666,-9.361939,6.405407,9.498530,-0.312076,-4.944917,7.956861,-9.513899,5.747661,-8.463789,6.830294,-3.461956,4.956039,-5.424864,-1.205085,2.746606,1.432056,8.870406,-5.994130,1.878775,0.529038,-9.236634,-5.104386,5.277407,-9.348945,2.824668,7.509828,5.438164,7.706472,7.684697,-5.749477,1.507028,0.702234,-1.963666,9.231684,-3.697348,1.480334,0.341198,4.988263,0.113234,0.120753,-4.650701,-1.408669,0.178532,1.357147,-1.307610,2.378328,8.684020,-9.446781,-2.989913,9.534952,-3.354545,2.475639,-3.431473,-8.229085,6.112479,-7.521927,4.171896,8.468253,-1.824577,5.887236,-3.338590,6.713840,3.469049,7.988401,5.332527,-9.941127,-3.506263,-1.679750,6.941604,-2.122523,-3.477778,-6.431777,-7.055339,-1.239933,-2.690527,7.696080,2.050644,-2.846164,-6.769906,-3.657671,-4.588222,2.503823,1.569824,-0.301201,-2.878178,4.050963,4.541437,-6.467174,9.529070,0.772384,8.426415,4.654278,6.742754,5.829298,8.674253,0.761400,8.374677,-9.162898,-3.965425,8.981549,-1.573671,6.999228,-5.932160,2.445715,2.486395,2.129251,6.005850,1.227315,-5.154759,-7.650478,-6.483353,2.525966,-8.202278,-6.481240,-8.768811,4.920114,-2.939817,0.403441,9.434130,1.581301,6.483775,2.559486,8.339762,1.958962,4.405617,3.873178,0.757487,3.222231,6.773851,6.082620,5.958127,-3.270833,8.708949,-2.060234,-9.104604,6.987311,-1.257818,-9.287069,2.488384,1.976883,4.849764,7.608537,-5.785663,-0.331890,-4.087995,0.853168,-7.471530,-5.169971,7.450942,-9.460409,-8.811548,2.145629,-4.576634,-1.857503,3.520909,3.816522,-8.300852,-4.400642,2.238323,-8.827203,-0.986673,-4.787893,9.530503,-4.408891,8.921282,-1.194932,2.711278,1.435825,7.494449,3.714595,5.039856,3.158833], dtype = "float32")#candidate|11359|(182,)|const|float32
call_11358 = func_6055_call(relay.reshape(const_11359.astype('float32'), [7, 2, 13]))
call_11360 = func_6055_call(relay.reshape(const_11359.astype('float32'), [7, 2, 13]))
output = relay.Tuple([call_11309,uop_11339,call_11358,const_11359,])
output2 = relay.Tuple([call_11310,uop_11341,call_11360,const_11359,])
func_11362 = relay.Function([], output)
mod['func_11362'] = func_11362
mod = relay.transform.InferType()(mod)
output = func_11362()
func_11363 = relay.Function([], output)
mutated_mod['func_11363'] = func_11363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8708_call = mod.get_global_var('func_8708')
func_8710_call = mutated_mod.get_global_var('func_8710')
call_11374 = func_8708_call()
call_11375 = func_8708_call()
func_16_call = mod.get_global_var('func_16')
func_19_call = mutated_mod.get_global_var('func_19')
const_11377 = relay.const([-2.972815,-0.732305,-2.760518,-0.832847,-2.800328,5.255655,2.428061,-9.152942,-7.684921,6.415153,-7.129593,8.994348,2.760609,0.993197,7.146619,7.882975,-1.135672,-7.982966,-1.451325,-7.946770,-1.115765,-6.751045,-6.773326,-8.701968,9.736865,7.746435,-3.604909,0.077493,5.743796,-6.255942,6.794554,8.245164,1.772858,-2.598582,-9.569022,4.642978,-9.526750,6.727353,-7.557987,1.149170,4.306102,6.250618,9.101131,3.461023,4.552327,4.901718,8.156506,9.748883,-7.580553,5.790860,-1.853030,-9.684104,-9.525556,2.989605,9.900336,-3.389735,-3.600861,-9.616249,8.466367,-4.532834,-1.314117,2.436026,-1.346021,-4.742165,-9.455815,-2.381976,-1.166707,1.807580,-0.017070,3.632571,9.392238,-2.612377,-9.224368,0.630610,-2.140025,-1.039802,3.083348,2.935118,-4.621942,4.993456,9.975915,1.849763,-2.862380,-7.306998,-8.018819,-7.886233,-4.550441,6.167116,-8.829605,-2.161268,-5.635105,8.510070,-0.267767,-4.727125,-0.260592,9.867566,0.356673,-6.107638,4.428414,-2.580854,-0.118524,9.623647,0.971596,4.888262,8.676670,-3.141958,2.251339,0.098657,-3.242140,-5.600282,0.774270,-2.200173,5.122277,-8.666171,-9.798688,-3.970525,-3.946273,2.619792,-0.743067,5.985006,-3.271790,2.516122,3.562323,4.228468,-9.510745,-6.129752,8.093634,-5.063118,1.032650,7.357826,2.616397,0.023725,6.350293,9.935163,0.392721,2.944543,9.421088,9.197109,9.377159,-4.595476,3.794080,-2.343944,-6.525205,3.050845,3.982329,4.389739,-1.645655,-8.003209,5.615448,9.990032,-1.455242,-4.598211,7.356400,-8.841890,-3.401598,6.231042,-1.233901,-3.837505,-1.224618,-0.687311,-2.922145,5.824174,-7.587192,-0.711485,0.039334,6.081017,-7.287666,8.021583,1.278231,-0.756255,5.199215,8.855273,0.370507,-1.315057,1.029412,-9.720053,-1.599171,-4.338466,9.890278,-5.071939,-8.173999,5.414307,8.421414,8.076816,-1.791136,-6.053543,8.591359,1.161984,1.353110,-4.871907,4.696423,-9.069958,-0.659867,-2.446262,5.911128,3.230097,-5.217122,-0.266297,1.342453,5.428299,5.433046,3.306677,2.574069,-4.815447,-8.416773,-9.955152,6.203329,9.734447,7.045208,3.223929,-3.567815,7.007766,9.876918,-8.139624,8.876697,8.892881,2.972955,9.614849,5.511716,5.663406,-2.361393,4.724514,-0.850162,-5.472528,3.855830,-7.218805,-0.413028,-2.874069,9.690999,-1.464147,-4.637263,-3.376349,0.915260,4.830313,3.213763,-9.718822,-8.381621,6.392233,1.770000,-8.847708,2.084448,-1.087912,-3.461374,-6.803939,-1.418464,-5.657813,-3.411815,-6.590817,-4.635463,-3.901940,2.769821,-4.463287,1.430796,-8.461361,0.865136,6.668526,-6.577172,-9.494011,-6.806407,-1.967484,0.802483,-8.163053,8.372920,0.360685,-9.106404,0.452683,4.167702,6.466511,6.146172,1.356109,-9.732138,-9.941594,-6.448761,-4.064011,0.538532,6.685674,2.931698,-1.485654,5.351825,6.924017,4.354228,0.080986,-8.562067,8.342433,-8.409643,-6.990694,4.914107,3.619689,5.375566,0.393522,6.371122,3.866038,-7.624888,8.075111,-3.631966,7.517347,-1.112371,-6.254460,8.055650,-6.573198,-9.304944,-9.747817,7.605869,5.362333,5.472428,6.656531,-0.769778,-7.712362,-3.747921,-7.000794,-3.134439,3.276643,-0.709966,8.077986,5.909112,8.743958,-5.453466,-4.752776,-4.684404,-9.791495,-2.422016,-1.261257,-1.645712,6.725654,-5.660319,2.804804,4.053289,3.932919,-1.219832,3.031852,1.339743,7.588215,-7.830753,2.675763,-3.700472,6.120054,-1.921382,6.126746,-8.247592,2.126479,-1.566561,7.019351,3.083224,8.966965,0.537464,-5.037521,3.140339,-4.299434,6.736604,-7.731700,7.112153,-8.267035,7.838335,-5.210442,-8.525410,1.535109,5.496900,-2.729445,6.514864,-7.825814,-0.721585,1.486091,3.024690,1.332181,-7.585101,-7.058225,1.904082,3.972790,-7.973305,-5.166414,7.895082,3.703690,-1.157223,-1.273301,9.476715,-3.391392,3.759572,0.126648,2.632626,3.475004,6.589142,8.348556,-8.465472,0.076429,1.929377,5.033720,3.346900,4.945351,-4.554591,-2.510231,-4.082663,2.282556,-5.839351,-9.695664,6.253141,4.947929,7.527244,-6.393277,0.197826,-3.938014,7.935196,-5.738011,-3.427698,4.863242,2.480268,-1.344970,-1.838583,6.294339,1.413059,0.456145,3.093619,1.737468,2.724340,-1.232155,8.503344,4.694180,-6.380191,-4.151230,4.455375,2.112960,0.829929,9.364856,3.717997,-6.231182,-5.078747,8.257293,7.935508,2.801687,-3.689612,9.815019,-3.117944,1.829052,-6.453939,-2.067669,1.187665,-0.388063,3.455217,-2.422312,-6.567290,7.581203,-4.614658,-8.273188,1.847405,1.561115,7.606065,-8.354459,9.024774,-9.474984,2.491706,-0.280611,-7.322862,3.780728,-9.450970,-6.832351,-2.940944,6.704594,0.731643,-1.168875,8.986602,-7.030876,7.904952,1.886987,-2.718594,-9.623120,-8.789101,-3.708440,-9.322454,-3.790459,-1.863619,7.983785,7.511792,1.756156,2.713431,4.290949,8.626133,4.502399,-2.750585,-0.252744,7.641597,-1.927830,6.408616,-7.815401,-3.250093,-0.538082,-1.325440,-6.190154,-4.363329,-9.041618,8.553251,3.844714,2.192261,2.436432,1.515514,1.543784,3.388366,-1.317419,-5.649446,-1.158439,9.776462,2.637453,-9.391988,2.327004,-2.952051,-2.580889,-1.872626,-5.290207,7.749379,3.441315,8.592845,3.783907,2.262997,1.925626,-9.609673,-1.534520,-4.180136,5.711774,7.971928,-4.069593,-6.547317,-5.665527,-3.189035,9.584906,-2.899419,-2.925045,3.756194,-9.472719,9.938401,-2.222903,5.681290,5.516808,2.723044,5.322433,-0.984255,-0.391468,-6.678069,3.926968,2.650734,-7.095720,3.676799,-6.993143], dtype = "float32")#candidate|11377|(540,)|const|float32
call_11376 = relay.TupleGetItem(func_16_call(relay.reshape(const_11377.astype('float32'), [15, 4, 9])), 0)
call_11378 = relay.TupleGetItem(func_19_call(relay.reshape(const_11377.astype('float32'), [15, 4, 9])), 0)
func_4235_call = mod.get_global_var('func_4235')
func_4239_call = mutated_mod.get_global_var('func_4239')
const_11412 = relay.const([-3,-8,-10,-6,5,10,-9,-8,-8,10,3,6,-1,-4,5,8,8,10,9,8,9,-3,-3,-1,-9,-4,7,2,-5,6,-4,8,8,-7,-6,-2,-5,5,5,-10,5,9,-5,1,7,-2,2,2,-9,-9,-8,-10,-8,-2,9,9,5,9,9,10,9,-7,-1,1,2,5,-10,4,9,3,5,3,10,-9,-2,-2,-2,-2,-10,5,2,3,-6,-2,-10,-5,4,6,-10,2,-8,4,3,-5,8,8,-3,-2,5,-5,8,3,-6,8,6,9,-4,5,9,-2,-1,7,-1,-4,2,5,-7,-3,-7,-10,-9,-8,10,-10,-1,-5,5,8,-10,4,2,-3,-6,-4,5,8,3,-9,-7,-3,5,5,-10,6,5,-2,-9,-6,1,-10,3,2,-3,-10,-2,-3,1,-7,-10,10,6,2,7,2,7,-4,-1,-8,-9,-7,1,8,-7,-2,-1,-4,-4,-10,-4,9,-6,4,1,-2,-10,1,-10,-3,5,5,8,1,-6,3,5,3,-6,9,-9,-8,-1,-10,10,-9,9,-1,5,-8,-4,1,6,-1,1,10,10,-8,-6,3,2,-1,7,-7,-3,-3,8,8,-8,-6,10,10,3,2,-6,5,6,8,-7,4,-2,9,-3,-5,6,9,-7,-6,6,-10,-1,-10,-3,10,5,-2,-3,6,7,-6,-3,7,-5,-10,10,-5,7,10,6,-1,-6,-10,3,-6,7,3,8,-10,2,-5,-10,-5,-8,6,-5,-6,10,-3,-2,-7,-10,1,-10,-10,-10,5], dtype = "int64")#candidate|11412|(294,)|const|int64
call_11411 = func_4235_call(relay.reshape(const_11412.astype('int64'), [3, 14, 7]), relay.reshape(const_11412.astype('int64'), [3, 14, 7]), )
call_11413 = func_4235_call(relay.reshape(const_11412.astype('int64'), [3, 14, 7]), relay.reshape(const_11412.astype('int64'), [3, 14, 7]), )
bop_11414 = relay.logical_xor(call_11411.astype('uint32'), relay.reshape(const_11412.astype('uint32'), relay.shape_of(call_11411))) # shape=(3, 14, 7)
bop_11417 = relay.logical_xor(call_11413.astype('uint32'), relay.reshape(const_11412.astype('uint32'), relay.shape_of(call_11413))) # shape=(3, 14, 7)
uop_11420 = relay.asin(bop_11414.astype('float32')) # shape=(3, 14, 7)
uop_11422 = relay.asin(bop_11417.astype('float32')) # shape=(3, 14, 7)
func_711_call = mod.get_global_var('func_711')
func_713_call = mutated_mod.get_global_var('func_713')
const_11431 = relay.const([1.886091,-4.080751,-8.089363,-0.555383,-2.510988,-7.629154,-8.987739,7.275964,0.146452,-3.676197,2.446476,-6.313737,-0.429248,2.580188,-3.069440,9.699738,1.823890,5.725650,-2.788215,-7.467556,-5.888293,-9.322362,-9.880402,-6.258827,-0.342146,-3.009485,0.118423,1.985155,3.687414,2.200002,0.533892,9.462976,-7.061916,-8.816591,-2.535953,8.034881,9.165886,2.904829,8.471784,9.547410,2.313709,-6.198230,-6.244822,-2.187831,-7.450560,1.049645,-8.217324,0.279938,0.380429,-6.951891,-8.502562,-7.331177,2.560835,9.911644,7.999137,-5.147904,3.321680,5.611088,-2.547600,2.519677,2.067029,-9.056159,-4.626297,-6.874705,5.155982,2.141744,-4.484248,0.765543,-7.066691,8.591603,3.576283,-9.822769,-1.734072,-5.028676,7.044996,3.189754,-5.858709,-4.050287,1.182949,-6.086797,7.853143,4.455074,3.223137,1.875358,9.589342,4.475186,-3.660138,6.440200,-4.571406,7.668838,-5.997505,-7.677939,-2.276667,0.534311,-6.658386,-7.785261,1.017169,5.568211,-0.100785,-4.901468,3.187938,-3.426665,1.750095,-8.659734,9.973531,5.020003,1.878611,-6.514769,6.707553,7.601499,6.098924,0.722702,2.972827,9.118913,-0.118279,-0.753519,-6.046646,5.075281,-9.502722,4.276680,-5.015539,3.986563,-2.602824,7.634103,8.505437,0.654228,5.653552,-5.361812,-5.632165,-9.765132,6.258733,-8.203372,-3.283915,-7.878240,-9.776973,-5.573834,-7.876606,-2.999853,-4.033190,-3.877568,-8.265379,-9.290205,0.928659,4.078931,0.026185,-7.113078,-3.863330,-4.687944,-9.123340,8.509841,-7.162481,9.838552,-2.320677,3.760723], dtype = "float64")#candidate|11431|(154,)|const|float64
call_11430 = relay.TupleGetItem(func_711_call(relay.reshape(const_11431.astype('float64'), [11, 14, 1])), 0)
call_11432 = relay.TupleGetItem(func_713_call(relay.reshape(const_11431.astype('float64'), [11, 14, 1])), 0)
output = relay.Tuple([call_11374,call_11376,const_11377,uop_11420,call_11430,const_11431,])
output2 = relay.Tuple([call_11375,call_11378,const_11377,uop_11422,call_11432,const_11431,])
func_11438 = relay.Function([], output)
mod['func_11438'] = func_11438
mod = relay.transform.InferType()(mod)
mutated_mod['func_11438'] = func_11438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11438_call = mutated_mod.get_global_var('func_11438')
call_11439 = func_11438_call()
output = call_11439
func_11440 = relay.Function([], output)
mutated_mod['func_11440'] = func_11440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10806_call = mod.get_global_var('func_10806')
func_10807_call = mutated_mod.get_global_var('func_10807')
call_11473 = func_10806_call()
call_11474 = func_10806_call()
output = relay.Tuple([call_11473,])
output2 = relay.Tuple([call_11474,])
func_11478 = relay.Function([], output)
mod['func_11478'] = func_11478
mod = relay.transform.InferType()(mod)
output = func_11478()
func_11479 = relay.Function([], output)
mutated_mod['func_11479'] = func_11479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9723_call = mod.get_global_var('func_9723')
func_9725_call = mutated_mod.get_global_var('func_9725')
call_11546 = relay.TupleGetItem(func_9723_call(), 0)
call_11547 = relay.TupleGetItem(func_9725_call(), 0)
func_8829_call = mod.get_global_var('func_8829')
func_8830_call = mutated_mod.get_global_var('func_8830')
call_11558 = relay.TupleGetItem(func_8829_call(), 4)
call_11559 = relay.TupleGetItem(func_8830_call(), 4)
output = relay.Tuple([call_11546,call_11558,])
output2 = relay.Tuple([call_11547,call_11559,])
func_11567 = relay.Function([], output)
mod['func_11567'] = func_11567
mod = relay.transform.InferType()(mod)
mutated_mod['func_11567'] = func_11567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11567_call = mutated_mod.get_global_var('func_11567')
call_11568 = func_11567_call()
output = call_11568
func_11569 = relay.Function([], output)
mutated_mod['func_11569'] = func_11569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10806_call = mod.get_global_var('func_10806')
func_10807_call = mutated_mod.get_global_var('func_10807')
call_11608 = func_10806_call()
call_11609 = func_10806_call()
output = call_11608
output2 = call_11609
func_11617 = relay.Function([], output)
mod['func_11617'] = func_11617
mod = relay.transform.InferType()(mod)
mutated_mod['func_11617'] = func_11617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11617_call = mutated_mod.get_global_var('func_11617')
call_11618 = func_11617_call()
output = call_11618
func_11619 = relay.Function([], output)
mutated_mod['func_11619'] = func_11619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8947_call = mod.get_global_var('func_8947')
func_8948_call = mutated_mod.get_global_var('func_8948')
call_11645 = relay.TupleGetItem(func_8947_call(), 1)
call_11646 = relay.TupleGetItem(func_8948_call(), 1)
uop_11648 = relay.cos(call_11645.astype('float64')) # shape=(154,)
uop_11650 = relay.cos(call_11646.astype('float64')) # shape=(154,)
func_10465_call = mod.get_global_var('func_10465')
func_10467_call = mutated_mod.get_global_var('func_10467')
var_11669 = relay.var("var_11669", dtype = "float32", shape = (42, 4))#candidate|11669|(42, 4)|var|float32
call_11668 = func_10465_call(relay.reshape(var_11669.astype('float32'), [8, 3, 7]))
call_11670 = func_10465_call(relay.reshape(var_11669.astype('float32'), [8, 3, 7]))
func_10361_call = mod.get_global_var('func_10361')
func_10363_call = mutated_mod.get_global_var('func_10363')
var_11682 = relay.var("var_11682", dtype = "float32", shape = (312,))#candidate|11682|(312,)|var|float32
call_11681 = relay.TupleGetItem(func_10361_call(relay.reshape(var_11682.astype('float32'), [3, 104])), 3)
call_11683 = relay.TupleGetItem(func_10363_call(relay.reshape(var_11682.astype('float32'), [3, 104])), 3)
func_10072_call = mod.get_global_var('func_10072')
func_10074_call = mutated_mod.get_global_var('func_10074')
call_11689 = relay.TupleGetItem(func_10072_call(relay.reshape(call_11681.astype('float32'), [312,])), 0)
call_11690 = relay.TupleGetItem(func_10074_call(relay.reshape(call_11681.astype('float32'), [312,])), 0)
func_10922_call = mod.get_global_var('func_10922')
func_10923_call = mutated_mod.get_global_var('func_10923')
call_11691 = relay.TupleGetItem(func_10922_call(), 0)
call_11692 = relay.TupleGetItem(func_10923_call(), 0)
uop_11698 = relay.atanh(uop_11648.astype('float64')) # shape=(154,)
uop_11700 = relay.atanh(uop_11650.astype('float64')) # shape=(154,)
func_9631_call = mod.get_global_var('func_9631')
func_9632_call = mutated_mod.get_global_var('func_9632')
call_11719 = func_9631_call()
call_11720 = func_9631_call()
output = relay.Tuple([call_11668,var_11669,call_11681,var_11682,call_11689,call_11691,uop_11698,call_11719,])
output2 = relay.Tuple([call_11670,var_11669,call_11683,var_11682,call_11690,call_11692,uop_11700,call_11720,])
func_11722 = relay.Function([var_11669,var_11682,], output)
mod['func_11722'] = func_11722
mod = relay.transform.InferType()(mod)
mutated_mod['func_11722'] = func_11722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11722_call = mutated_mod.get_global_var('func_11722')
var_11724 = relay.var("var_11724", dtype = "float32", shape = (42, 4))#candidate|11724|(42, 4)|var|float32
var_11725 = relay.var("var_11725", dtype = "float32", shape = (312,))#candidate|11725|(312,)|var|float32
call_11723 = func_11722_call(var_11724,var_11725,)
output = call_11723
func_11726 = relay.Function([var_11724,var_11725,], output)
mutated_mod['func_11726'] = func_11726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9317_call = mod.get_global_var('func_9317')
func_9319_call = mutated_mod.get_global_var('func_9319')
call_11733 = relay.TupleGetItem(func_9317_call(), 1)
call_11734 = relay.TupleGetItem(func_9319_call(), 1)
output = call_11733
output2 = call_11734
func_11747 = relay.Function([], output)
mod['func_11747'] = func_11747
mod = relay.transform.InferType()(mod)
mutated_mod['func_11747'] = func_11747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11747_call = mutated_mod.get_global_var('func_11747')
call_11748 = func_11747_call()
output = call_11748
func_11749 = relay.Function([], output)
mutated_mod['func_11749'] = func_11749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10785_call = mod.get_global_var('func_10785')
func_10786_call = mutated_mod.get_global_var('func_10786')
call_11786 = relay.TupleGetItem(func_10785_call(), 1)
call_11787 = relay.TupleGetItem(func_10786_call(), 1)
func_11096_call = mod.get_global_var('func_11096')
func_11097_call = mutated_mod.get_global_var('func_11097')
call_11788 = relay.TupleGetItem(func_11096_call(), 0)
call_11789 = relay.TupleGetItem(func_11097_call(), 0)
func_10897_call = mod.get_global_var('func_10897')
func_10899_call = mutated_mod.get_global_var('func_10899')
call_11797 = func_10897_call()
call_11798 = func_10897_call()
output = relay.Tuple([call_11786,call_11788,call_11797,])
output2 = relay.Tuple([call_11787,call_11789,call_11798,])
func_11821 = relay.Function([], output)
mod['func_11821'] = func_11821
mod = relay.transform.InferType()(mod)
mutated_mod['func_11821'] = func_11821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11821_call = mutated_mod.get_global_var('func_11821')
call_11822 = func_11821_call()
output = call_11822
func_11823 = relay.Function([], output)
mutated_mod['func_11823'] = func_11823
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11824 = relay.var("var_11824", dtype = "bool", shape = (14, 6, 7))#candidate|11824|(14, 6, 7)|var|bool
const_11825 = relay.const([[[False,False,False,False,False,True,True],[True,True,False,False,False,True,True],[False,False,False,True,True,False,False],[True,False,False,False,True,True,True],[False,True,False,False,False,False,True],[False,True,False,True,False,False,True]],[[False,True,False,True,False,False,False],[True,True,False,False,True,True,False],[True,False,False,True,False,False,True],[False,False,False,False,True,False,True],[True,True,False,False,False,False,True],[False,True,True,True,False,False,True]],[[True,True,False,False,True,False,True],[True,False,True,True,False,True,True],[True,False,False,False,True,False,False],[True,True,True,False,False,True,True],[False,True,True,True,False,True,False],[True,True,True,True,True,False,False]],[[True,False,False,False,False,False,False],[True,True,True,False,False,False,False],[False,True,False,False,False,True,True],[False,False,True,False,True,True,True],[False,True,True,True,True,True,True],[True,False,True,False,True,False,True]],[[True,True,True,True,False,True,True],[True,False,False,True,False,False,True],[True,True,False,True,False,False,False],[False,True,True,True,True,True,False],[False,True,True,True,False,False,False],[True,False,True,False,False,False,True]],[[True,False,True,False,True,True,False],[True,True,False,True,True,False,True],[False,True,True,True,False,False,False],[True,False,True,False,False,False,False],[True,False,True,False,False,False,False],[True,False,False,True,True,True,False]],[[False,True,True,True,False,False,False],[False,False,False,True,True,True,True],[True,False,True,False,False,True,False],[True,True,True,False,True,True,True],[True,False,False,True,True,True,False],[True,False,False,False,False,True,True]],[[True,False,True,True,False,False,True],[True,True,False,False,True,True,False],[False,False,False,True,True,False,True],[False,True,True,False,True,False,False],[False,True,True,True,True,False,False],[False,True,False,True,False,False,True]],[[True,True,True,False,True,True,True],[False,True,False,True,True,False,True],[False,False,True,False,True,False,False],[False,True,False,False,False,False,True],[False,False,False,False,True,False,False],[True,True,True,True,True,False,False]],[[False,False,True,False,False,False,True],[True,True,True,True,False,True,False],[False,False,True,False,False,False,False],[False,False,False,True,True,False,False],[False,False,True,False,False,False,True],[False,True,False,True,False,True,False]],[[False,False,False,False,False,False,False],[True,False,True,True,False,True,False],[True,True,False,False,True,True,False],[True,False,True,True,True,True,False],[True,False,True,True,True,True,True],[True,True,True,False,True,False,True]],[[True,False,True,True,True,False,True],[True,True,True,False,True,True,False],[False,False,False,True,True,True,False],[False,True,True,True,False,True,False],[False,True,True,True,True,True,False],[True,True,True,False,False,True,False]],[[False,False,False,False,False,True,False],[True,False,False,True,True,False,True],[False,True,True,False,False,False,True],[False,True,False,True,False,True,True],[True,False,True,True,False,False,True],[True,True,True,False,True,False,False]],[[True,False,True,True,True,False,True],[True,False,False,True,False,False,False],[False,False,True,True,False,True,False],[True,True,False,False,False,True,False],[True,True,False,False,True,True,True],[False,True,False,False,False,True,True]]], dtype = "bool")#candidate|11825|(14, 6, 7)|const|bool
bop_11826 = relay.logical_or(var_11824.astype('bool'), relay.reshape(const_11825.astype('bool'), relay.shape_of(var_11824))) # shape=(14, 6, 7)
output = bop_11826
output2 = bop_11826
func_11830 = relay.Function([var_11824,], output)
mod['func_11830'] = func_11830
mod = relay.transform.InferType()(mod)
mutated_mod['func_11830'] = func_11830
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11831 = relay.var("var_11831", dtype = "bool", shape = (14, 6, 7))#candidate|11831|(14, 6, 7)|var|bool
func_11830_call = mutated_mod.get_global_var('func_11830')
call_11832 = func_11830_call(var_11831)
output = call_11832
func_11833 = relay.Function([var_11831], output)
mutated_mod['func_11833'] = func_11833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9317_call = mod.get_global_var('func_9317')
func_9319_call = mutated_mod.get_global_var('func_9319')
call_11864 = relay.TupleGetItem(func_9317_call(), 2)
call_11865 = relay.TupleGetItem(func_9319_call(), 2)
output = call_11864
output2 = call_11865
func_11885 = relay.Function([], output)
mod['func_11885'] = func_11885
mod = relay.transform.InferType()(mod)
mutated_mod['func_11885'] = func_11885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11885_call = mutated_mod.get_global_var('func_11885')
call_11886 = func_11885_call()
output = call_11886
func_11887 = relay.Function([], output)
mutated_mod['func_11887'] = func_11887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8800_call = mod.get_global_var('func_8800')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_11896 = func_8800_call()
call_11897 = func_8800_call()
uop_11904 = relay.cos(call_11896.astype('float64')) # shape=(8, 3, 7)
uop_11906 = relay.cos(call_11897.astype('float64')) # shape=(8, 3, 7)
func_11231_call = mod.get_global_var('func_11231')
func_11233_call = mutated_mod.get_global_var('func_11233')
call_11944 = relay.TupleGetItem(func_11231_call(), 0)
call_11945 = relay.TupleGetItem(func_11233_call(), 0)
func_4832_call = mod.get_global_var('func_4832')
func_4834_call = mutated_mod.get_global_var('func_4834')
var_11950 = relay.var("var_11950", dtype = "float32", shape = (312,))#candidate|11950|(312,)|var|float32
call_11949 = func_4832_call(relay.reshape(var_11950.astype('float32'), [12, 13, 2]))
call_11951 = func_4832_call(relay.reshape(var_11950.astype('float32'), [12, 13, 2]))
func_9200_call = mod.get_global_var('func_9200')
func_9202_call = mutated_mod.get_global_var('func_9202')
call_11956 = relay.TupleGetItem(func_9200_call(), 1)
call_11957 = relay.TupleGetItem(func_9202_call(), 1)
func_426_call = mod.get_global_var('func_426')
func_429_call = mutated_mod.get_global_var('func_429')
var_11964 = relay.var("var_11964", dtype = "float64", shape = (560,))#candidate|11964|(560,)|var|float64
const_11965 = relay.const([5.965366,-1.103064,-8.108454,4.437701,-1.613839,1.778196,-6.888013,9.384378,3.211872,-7.606741,-3.442661,-3.682190,-2.254113,-4.289261,-2.826745,-4.950070,4.998378,9.261203,7.733749,-5.112931,-8.377575,-1.903976,2.744951,8.149171,-5.724750,3.418495,3.099888,1.508752,4.558741,-4.143451,2.897465,-0.420143,9.943123,-6.306882,-3.825275,-8.768291,8.705909,7.135860,-5.231006,0.826381,-4.650138,1.180854,-5.864889,7.128622,3.546927,7.788040,-5.982911,5.200303,-6.493850,3.908187,8.497985,0.817250,-5.837213,9.356310,1.021455,3.321505,-0.390141,-5.488426,-4.944321,-8.535481,9.629475,-3.609409,9.358906,8.384277,-4.676544,-1.953041,0.331282,-3.594860,-5.904000,-8.641645,-8.439993,-8.321276,4.029512,-2.228293,-8.341184,3.842944,-2.338513,-9.837631,8.251243,5.561839,-1.236131,9.644746,9.166600,4.516243,-8.189377,-6.266822,-7.639645,7.333625,4.946858,1.408628,-7.878772,5.418933,-6.100216,1.867308,5.157806,5.866490,-5.204084,3.329301,-9.368114,-0.072614,9.362561,-4.893332,1.838827,3.535200,0.183753,-0.203351,5.059950,-4.896375,3.905886,1.768324,2.167456,-9.597615,-5.162128,3.535898,3.032518,8.672163,-7.641712,-6.045118,2.690943,-7.591694,-3.435466,-2.551523,-7.930664,2.467299,-3.648426,5.630491,-9.428081,-6.091892,6.495494,5.702628,1.260923,7.540827,-6.094360,2.900730,9.454200,-7.627401,-2.739653,5.212573,-0.559285,7.574227,-6.953852,-1.999261,-6.695972,5.451234,-9.448851,-5.070564,0.600333,-3.218294,0.694501,2.939214,5.724248,-8.943367,-7.525639,1.534935,4.209532,-8.774967,7.451123,-8.746889,7.483599,3.991662,-1.630732,6.985327,-8.324217,-5.988052,2.286203,-5.061656,8.589989,-2.012602,5.702716,-6.183508,-6.384379,-1.262258,9.960430,-2.921586,-7.298151,8.208915,2.923711,-6.114158,-6.526638,-0.479141,-6.709686,-8.674505,8.677833,6.345896,-9.613422,0.060304,-2.368643,-8.058599,-9.497264,-1.384563,2.342164,-5.772015,-8.324426,-2.844629,9.923848,-9.687686,5.509365,1.846835,-5.314965,2.154611,7.797132,8.635207,-3.512630,0.575846,-3.120346,3.725133,8.053170,2.237556,-3.983777,-8.196540,-6.812700,1.218453,-1.581076,-6.893186,-4.416411,1.988917,4.299914,3.253556,7.078687,-9.725941,4.065282,6.069467,6.129304,-4.052340,-3.126199,1.095084,-6.841466,-9.390945,-0.189326,5.544132,6.437706,-2.908301,6.685120,-2.824411,-8.943060,2.214522,4.247066,7.963345,5.940473,-2.359685,-2.377550,-1.729455,8.968703,6.949785,1.626041,-9.409646,-0.453957,8.782447,-5.299328,-3.579241,9.116378,-1.282557,-0.160818,5.720291,-4.990488,9.115922,-4.769798,5.081891,-1.480540,7.864251,5.525680,-7.839204,-7.578486,2.050750,-9.411015,5.782861,0.842957,-2.195733,0.621318,1.539106,7.547492,0.023114,-2.816499,5.819994,8.856145,3.935578,-4.808308,-0.264919,4.894570,-5.864042,6.986301,9.167530,5.469097,-7.836252,-7.393484,-2.855185,-6.827437,5.037189,-8.444360,-0.278024,4.253110,-0.022918,0.630132,-7.995180,0.588971,-0.526195,-2.348228,7.888154,7.122445,2.069110,-0.744047,-9.780255,4.029787,5.566404,-6.931159,2.683500,7.556551,-8.902025,7.693888,-5.258992,2.747374,4.201774,-2.116273,6.393741,7.324857,8.726175,4.256211,-4.326397,1.526444,-5.264582,7.105790,6.776271,-7.172795,-4.653387,-3.317180,-2.756166,5.403011,-5.221059,-7.024730,-3.051307,-7.445181,1.176584,7.229787,-7.909766,-1.871552,-1.069755,-5.651630,-8.821928,9.604023,-1.275067,2.463675,0.620209,4.773440,1.075206,-1.425670,0.249869,3.480740,-8.025513,-2.176024,-0.380776,1.403640,2.988286,-5.256445,-3.015701,-1.057904,-5.650343,4.276356,-5.509258,0.248708,6.819316,2.695737,-8.293411,8.090994,6.850880,7.554843,-6.317297,3.530061,-4.168557,-9.270358,8.215195,-1.464372,-7.672395,-3.066746,-4.885628,-7.282093,2.795655,-0.597717,3.461678,-1.280703,7.327167,-8.787359,-0.546357,8.163683,3.295987,-1.717590,-2.119924,-7.237909,-7.368146,-5.069465,-1.125346,-6.031688,-6.079012,1.557353,5.623206,3.489072,0.245983,-4.754334,6.142429,1.439196,2.765019,9.675499,-2.938350,7.320964,-6.878272,2.678087,-1.357849,-4.184911,-0.024361,-8.420041,5.141597,-3.553407,2.908558,1.751157,4.063769,-0.307369,-3.553325,-8.854965,6.645141,9.957906,7.917548,4.788796,5.711366,9.681151,1.171475,1.056089,3.776858,-6.317936,-8.043475,8.152818,-9.085409,3.419540,5.583793,9.756830,6.450652,7.175260,9.472133,-5.381997,-8.852761,-9.149989,-0.362967,5.039844,7.578435,-1.313692,7.729450,8.258190,9.136372,-3.778954,0.276443,-2.146249,-0.948834,1.479498,-8.079664,-0.553362,7.443584,-2.917226,-3.746621,8.803202,9.225762,-9.858193,0.317868,-0.285218,-7.799960,-1.882947,-4.322892,-8.700786,-1.226437,-3.847760,4.240494,7.313442,0.530474,-9.726391,4.234651,-8.810679,-8.585225,6.257681,-4.115456,-9.178881,-0.936497,-1.928176,2.464194,-3.267047,4.346406,-2.052384,1.146705,2.002241,-7.475302,1.839304,-9.905180,-7.610454,-4.670694,-3.910563,-2.830002,5.838011,4.679873,7.823457,-5.050193,-5.790649,9.791291,-2.782356,8.531770,9.177258,-1.654459,9.503663,-1.136428,7.402843,-1.605044,-0.544855,-8.661434,6.421999,4.469057,5.492028,-6.163558,3.085091,-4.688717,6.617202,-0.496005,8.286957,3.325288,0.372431,1.908753,-6.975444,-5.314404,-2.629015,-6.214256,9.714923,-2.397266,0.078853,-6.232431,-9.837868,-0.572673,-5.817351,3.016873,3.576471,6.544201,-5.288136,6.839753,-4.190231,3.074831,0.486819,-3.174570], dtype = "float32")#candidate|11965|(540,)|const|float32
call_11963 = relay.TupleGetItem(func_426_call(relay.reshape(var_11964.astype('float64'), [4, 10, 14]), relay.reshape(const_11965.astype('float32'), [540,]), ), 0)
call_11966 = relay.TupleGetItem(func_429_call(relay.reshape(var_11964.astype('float64'), [4, 10, 14]), relay.reshape(const_11965.astype('float32'), [540,]), ), 0)
output = relay.Tuple([uop_11904,call_11944,call_11949,var_11950,call_11956,call_11963,var_11964,const_11965,])
output2 = relay.Tuple([uop_11906,call_11945,call_11951,var_11950,call_11957,call_11966,var_11964,const_11965,])
func_11975 = relay.Function([var_11950,var_11964,], output)
mod['func_11975'] = func_11975
mod = relay.transform.InferType()(mod)
mutated_mod['func_11975'] = func_11975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11975_call = mutated_mod.get_global_var('func_11975')
var_11977 = relay.var("var_11977", dtype = "float32", shape = (312,))#candidate|11977|(312,)|var|float32
var_11978 = relay.var("var_11978", dtype = "float64", shape = (560,))#candidate|11978|(560,)|var|float64
call_11976 = func_11975_call(var_11977,var_11978,)
output = call_11976
func_11979 = relay.Function([var_11977,var_11978,], output)
mutated_mod['func_11979'] = func_11979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11279_call = mod.get_global_var('func_11279')
func_11281_call = mutated_mod.get_global_var('func_11281')
call_11994 = relay.TupleGetItem(func_11279_call(), 2)
call_11995 = relay.TupleGetItem(func_11281_call(), 2)
func_11079_call = mod.get_global_var('func_11079')
func_11081_call = mutated_mod.get_global_var('func_11081')
call_12001 = relay.TupleGetItem(func_11079_call(), 0)
call_12002 = relay.TupleGetItem(func_11081_call(), 0)
func_800_call = mod.get_global_var('func_800')
func_803_call = mutated_mod.get_global_var('func_803')
var_12022 = relay.var("var_12022", dtype = "int32", shape = (512,))#candidate|12022|(512,)|var|int32
call_12021 = relay.TupleGetItem(func_800_call(relay.reshape(var_12022.astype('int32'), [2, 16, 16]), relay.reshape(var_12022.astype('int32'), [2, 16, 16]), ), 0)
call_12023 = relay.TupleGetItem(func_803_call(relay.reshape(var_12022.astype('int32'), [2, 16, 16]), relay.reshape(var_12022.astype('int32'), [2, 16, 16]), ), 0)
func_8690_call = mod.get_global_var('func_8690')
func_8694_call = mutated_mod.get_global_var('func_8694')
const_12043 = relay.const(-7.923403, dtype = "float64")#candidate|12043|()|const|float64
const_12044 = relay.const([-0.206393,2.538123,-0.996934,-7.134636,-2.790465,-6.617667,-6.901146,-2.405105,6.944092,3.024034,-2.049026,-3.367720,3.741096,6.178413,9.884355,-8.756701,-5.144851,5.390811,-9.995717,-5.164312,9.680642,-8.949560,0.118430,1.481449,7.557653,8.947416,7.456999,1.854344,-2.691641,4.662846,-1.492619,4.098579,8.146620,2.315002,-0.618031,-7.900257,2.360710,1.930186,-4.055537,8.531405,-4.794508,2.559431], dtype = "float64")#candidate|12044|(42,)|const|float64
var_12045 = relay.var("var_12045", dtype = "float64", shape = (560,))#candidate|12045|(560,)|var|float64
call_12042 = relay.TupleGetItem(func_8690_call(relay.reshape(const_12043.astype('float64'), []), relay.reshape(const_12044.astype('float64'), [42,]), relay.reshape(var_12045.astype('float64'), [1, 560]), ), 4)
call_12046 = relay.TupleGetItem(func_8694_call(relay.reshape(const_12043.astype('float64'), []), relay.reshape(const_12044.astype('float64'), [42,]), relay.reshape(var_12045.astype('float64'), [1, 560]), ), 4)
output = relay.Tuple([call_11994,call_12001,call_12021,var_12022,call_12042,const_12043,const_12044,var_12045,])
output2 = relay.Tuple([call_11995,call_12002,call_12023,var_12022,call_12046,const_12043,const_12044,var_12045,])
func_12049 = relay.Function([var_12022,var_12045,], output)
mod['func_12049'] = func_12049
mod = relay.transform.InferType()(mod)
mutated_mod['func_12049'] = func_12049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12049_call = mutated_mod.get_global_var('func_12049')
var_12051 = relay.var("var_12051", dtype = "int32", shape = (512,))#candidate|12051|(512,)|var|int32
var_12052 = relay.var("var_12052", dtype = "float64", shape = (560,))#candidate|12052|(560,)|var|float64
call_12050 = func_12049_call(var_12051,var_12052,)
output = call_12050
func_12053 = relay.Function([var_12051,var_12052,], output)
mutated_mod['func_12053'] = func_12053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10483_call = mod.get_global_var('func_10483')
func_10484_call = mutated_mod.get_global_var('func_10484')
call_12087 = func_10483_call()
call_12088 = func_10483_call()
func_10465_call = mod.get_global_var('func_10465')
func_10467_call = mutated_mod.get_global_var('func_10467')
call_12115 = func_10465_call(relay.reshape(call_12087.astype('float32'), [8, 3, 7]))
call_12116 = func_10465_call(relay.reshape(call_12087.astype('float32'), [8, 3, 7]))
func_11231_call = mod.get_global_var('func_11231')
func_11233_call = mutated_mod.get_global_var('func_11233')
call_12123 = relay.TupleGetItem(func_11231_call(), 0)
call_12124 = relay.TupleGetItem(func_11233_call(), 0)
func_4235_call = mod.get_global_var('func_4235')
func_4239_call = mutated_mod.get_global_var('func_4239')
var_12132 = relay.var("var_12132", dtype = "int64", shape = (294,))#candidate|12132|(294,)|var|int64
call_12131 = func_4235_call(relay.reshape(var_12132.astype('int64'), [3, 14, 7]), relay.reshape(var_12132.astype('int64'), [3, 14, 7]), )
call_12133 = func_4235_call(relay.reshape(var_12132.astype('int64'), [3, 14, 7]), relay.reshape(var_12132.astype('int64'), [3, 14, 7]), )
func_1283_call = mod.get_global_var('func_1283')
func_1285_call = mutated_mod.get_global_var('func_1285')
const_12151 = relay.const([9,-1,-8,7,-5,6,1,-3,-5,-3,-9,7,9,8,-7,1,2,1,2,-4,4,-7,5,-1,6,1,-2,-7,-6,-5,3,1,10,7,-1,-9,10,9,5,8,-3,7,9,8,-10,-10,-1,-8,4,-10,-6,-9,4,4,9,-1,10,10,3,-5,-3,7,8,4,1,-7,7,-7,-6,-10,-4,-9,-10,-4,-9,7,-7,-9,-10,-7,10,-9,-1,-8,9,4,-9,-8,4,-2,-4,-6,-3,-6,-7,-1,-6,-4,9,4,7,9,-10,5,-10,6,7,-3,-6,-1,-1,-2,5,3,-5,9,-2,-10,-7,6,-5,1,4,-10,4,-5,-4,-1,-2,-2,-1,3,-1,-8,1,8,-4,-5,5,-1,7,-4,-5,-9,-1,-8,-3,-10,3,5,-1,9,1,6,-1,7,-4,-8,-7,-8,9,-5,-6,-7,2,-4,-2,-10,8,1,4,-5,10,-7,-4,9,10,4,-8,6,10,3,-4,-6,-9,-10,-6,1,-2,-5,3,8,8,1,4,6,-1,7,-1,8,2,3,6,-6,-2,5,-4,1,6,8,3,-5,4,-10,4,7,7,-6,3,1,2,3,8,10,9,-5,3,-9,-1,1,6,-3,-7,-3,-10,8,-10,-2,6,-6,1,9,1,-2,-4,10,-1,2,2,2,2,6,2,10,-9,5,8,-5,-2,5,-9,8,8,2,7,-1,-4,3,-4,-4,-1,-4,-4,2,-5,-2,2,8,1,-7,2,1,5,-1,-7,2,5,7,-5,5,-5,-8,-8,4,-4,10,-1,3,-5,4,3,-9,4,-8,-4,10,-2,6,-5,-9,-3,9,2,-1,8,8,-5,-10,3,-7,2,6,-8,-2,-3,3,2,4,-4,10,2,3,-4,-8,10,-4,5,-6,4,-5,9,-5,-10,4,3,5,-3,-7,-1,6,10,-6,1,7,10,-2,-2,9,-7,-7,10,-10,-10,9,-9,5,-4,4,2,1,-5,-8,-2,-2,-3,-9,-1,-5,-5,-4,-1,4,1,3,9,-3,8,3,2,9,4,-8,7,6,2,-6,3,10,-8,-5,-6,-3,-4,4,-2,1,1,1,-7,-9,10,-1,3,-5,2,-8,-10,3,-9,-10,-10,-9,2,-8,-8,5,-2,1,8,6,7,10,-9,1,-10,9,2,2,5,-1,6,-2,-4,4,8,2,8,-3,5,-2,-5,-8,6,-10,-9,-7,1,-1,-10,-7,-7,-4,-2,-9,-8,-5,-2,9,2,-3,2,-6,-7,8,-4,-8,5,-5,6,8,-6,9,6,10,-9,9,-10,4,1,-7,-8,-5,4,2,5,5,2,3,-2,-8,-5,4,-3,3,2,-1,4,5,-8,-9,8,-8,8,10,4,2,-6,-5,7,-7,9,-1,-5,-2,-5,10,4,4,9,1,4,5,2,-3,9,7,-7,4,5,5,-8,3,-2,4,-5,-5,10,10,-9,8,2,-7,-6,-9,6,2,8,5,-4,-1,4,9,7,6,4,-5,1,-5,4,7,9,-5,-5,-7,9,-10,-6,-7,-10,-9,6,1,8,4,2,-4,-1,8,-7,-6,2,9,7,-1,8,-3,5,-2,2,5,-7,2,7,-3,2,-1,7,4,-8,1,2,10,8,10,-10,-3,-5,-3,3,-7,5,-3,7,-6,-10,-1,-3,-2,5,-2,-9,9,7,6,-10,-9,10,9,9,2,-4,-2,6,-9,-7,5,3,-10,8,4,-9,-6,7,6,-3,-5,-5,-4,-2,1,4,-3,-2,1,9,1,-10,-6,-2,-3,5,2,7,-1,10,6,10,3,6,-3,9,4,-8,-8,-5,5,-1,1,4,-6,-6,8,-6,9,3,7,-3,-5,1,3,-6,-7,-7,6,-2,6,5,-5,3,2,-5,9,-8,-1,8,7,4,5,-2,-3,-3,2,10,-10,-1,-8,9,-4,-2,8,-9,-5,8,-6,-1,5,-9,2,4,4,-4,2,2,2,1,5,2,-6,-2,-1,3,-6,4,-2,10,6,8,7,3,5,9,5,2,4,-4,-8,10,7], dtype = "uint64")#candidate|12151|(768,)|const|uint64
call_12150 = func_1283_call(relay.reshape(const_12151.astype('uint64'), [16, 8, 6]))
call_12152 = func_1283_call(relay.reshape(const_12151.astype('uint64'), [16, 8, 6]))
output = relay.Tuple([call_12087,call_12115,call_12123,call_12131,var_12132,call_12150,const_12151,])
output2 = relay.Tuple([call_12088,call_12116,call_12124,call_12133,var_12132,call_12152,const_12151,])
func_12154 = relay.Function([var_12132,], output)
mod['func_12154'] = func_12154
mod = relay.transform.InferType()(mod)
var_12155 = relay.var("var_12155", dtype = "int64", shape = (294,))#candidate|12155|(294,)|var|int64
output = func_12154(var_12155)
func_12156 = relay.Function([var_12155], output)
mutated_mod['func_12156'] = func_12156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12202 = relay.var("var_12202", dtype = "float64", shape = (2, 2, 12))#candidate|12202|(2, 2, 12)|var|float64
uop_12203 = relay.sigmoid(var_12202.astype('float64')) # shape=(2, 2, 12)
output = relay.Tuple([uop_12203,])
output2 = relay.Tuple([uop_12203,])
func_12214 = relay.Function([var_12202,], output)
mod['func_12214'] = func_12214
mod = relay.transform.InferType()(mod)
mutated_mod['func_12214'] = func_12214
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12215 = relay.var("var_12215", dtype = "float64", shape = (2, 2, 12))#candidate|12215|(2, 2, 12)|var|float64
func_12214_call = mutated_mod.get_global_var('func_12214')
call_12216 = func_12214_call(var_12215)
output = call_12216
func_12217 = relay.Function([var_12215], output)
mutated_mod['func_12217'] = func_12217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10274_call = mod.get_global_var('func_10274')
func_10275_call = mutated_mod.get_global_var('func_10275')
call_12222 = relay.TupleGetItem(func_10274_call(), 0)
call_12223 = relay.TupleGetItem(func_10275_call(), 0)
output = call_12222
output2 = call_12223
func_12234 = relay.Function([], output)
mod['func_12234'] = func_12234
mod = relay.transform.InferType()(mod)
output = func_12234()
func_12235 = relay.Function([], output)
mutated_mod['func_12235'] = func_12235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10113_call = mod.get_global_var('func_10113')
func_10114_call = mutated_mod.get_global_var('func_10114')
call_12256 = relay.TupleGetItem(func_10113_call(), 0)
call_12257 = relay.TupleGetItem(func_10114_call(), 0)
output = relay.Tuple([call_12256,])
output2 = relay.Tuple([call_12257,])
func_12273 = relay.Function([], output)
mod['func_12273'] = func_12273
mod = relay.transform.InferType()(mod)
mutated_mod['func_12273'] = func_12273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12273_call = mutated_mod.get_global_var('func_12273')
call_12274 = func_12273_call()
output = call_12274
func_12275 = relay.Function([], output)
mutated_mod['func_12275'] = func_12275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11362_call = mod.get_global_var('func_11362')
func_11363_call = mutated_mod.get_global_var('func_11363')
call_12302 = relay.TupleGetItem(func_11362_call(), 3)
call_12303 = relay.TupleGetItem(func_11363_call(), 3)
output = relay.Tuple([call_12302,])
output2 = relay.Tuple([call_12303,])
func_12313 = relay.Function([], output)
mod['func_12313'] = func_12313
mod = relay.transform.InferType()(mod)
mutated_mod['func_12313'] = func_12313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12313_call = mutated_mod.get_global_var('func_12313')
call_12314 = func_12313_call()
output = call_12314
func_12315 = relay.Function([], output)
mutated_mod['func_12315'] = func_12315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12367 = relay.var("var_12367", dtype = "float64", shape = (14, 2, 5))#candidate|12367|(14, 2, 5)|var|float64
uop_12368 = relay.cosh(var_12367.astype('float64')) # shape=(14, 2, 5)
func_10922_call = mod.get_global_var('func_10922')
func_10923_call = mutated_mod.get_global_var('func_10923')
call_12371 = relay.TupleGetItem(func_10922_call(), 1)
call_12372 = relay.TupleGetItem(func_10923_call(), 1)
output = relay.Tuple([uop_12368,call_12371,])
output2 = relay.Tuple([uop_12368,call_12372,])
func_12373 = relay.Function([var_12367,], output)
mod['func_12373'] = func_12373
mod = relay.transform.InferType()(mod)
mutated_mod['func_12373'] = func_12373
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12374 = relay.var("var_12374", dtype = "float64", shape = (14, 2, 5))#candidate|12374|(14, 2, 5)|var|float64
func_12373_call = mutated_mod.get_global_var('func_12373')
call_12375 = func_12373_call(var_12374)
output = call_12375
func_12376 = relay.Function([var_12374], output)
mutated_mod['func_12376'] = func_12376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10670_call = mod.get_global_var('func_10670')
func_10672_call = mutated_mod.get_global_var('func_10672')
call_12394 = func_10670_call()
call_12395 = func_10670_call()
output = relay.Tuple([call_12394,])
output2 = relay.Tuple([call_12395,])
func_12398 = relay.Function([], output)
mod['func_12398'] = func_12398
mod = relay.transform.InferType()(mod)
output = func_12398()
func_12399 = relay.Function([], output)
mutated_mod['func_12399'] = func_12399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8800_call = mod.get_global_var('func_8800')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_12452 = func_8800_call()
call_12453 = func_8800_call()
func_10785_call = mod.get_global_var('func_10785')
func_10786_call = mutated_mod.get_global_var('func_10786')
call_12461 = relay.TupleGetItem(func_10785_call(), 1)
call_12462 = relay.TupleGetItem(func_10786_call(), 1)
uop_12483 = relay.acos(call_12452.astype('float32')) # shape=(8, 3, 7)
uop_12485 = relay.acos(call_12453.astype('float32')) # shape=(8, 3, 7)
output = relay.Tuple([call_12461,uop_12483,])
output2 = relay.Tuple([call_12462,uop_12485,])
func_12501 = relay.Function([], output)
mod['func_12501'] = func_12501
mod = relay.transform.InferType()(mod)
output = func_12501()
func_12502 = relay.Function([], output)
mutated_mod['func_12502'] = func_12502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11567_call = mod.get_global_var('func_11567')
func_11569_call = mutated_mod.get_global_var('func_11569')
call_12528 = relay.TupleGetItem(func_11567_call(), 1)
call_12529 = relay.TupleGetItem(func_11569_call(), 1)
func_11207_call = mod.get_global_var('func_11207')
func_11208_call = mutated_mod.get_global_var('func_11208')
call_12544 = relay.TupleGetItem(func_11207_call(), 0)
call_12545 = relay.TupleGetItem(func_11208_call(), 0)
output = relay.Tuple([call_12528,call_12544,])
output2 = relay.Tuple([call_12529,call_12545,])
func_12585 = relay.Function([], output)
mod['func_12585'] = func_12585
mod = relay.transform.InferType()(mod)
output = func_12585()
func_12586 = relay.Function([], output)
mutated_mod['func_12586'] = func_12586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8708_call = mod.get_global_var('func_8708')
func_8710_call = mutated_mod.get_global_var('func_8710')
call_12601 = func_8708_call()
call_12602 = func_8708_call()
func_12049_call = mod.get_global_var('func_12049')
func_12053_call = mutated_mod.get_global_var('func_12053')
const_12645 = relay.const([-7,4,7,-7,-7,-4,-3,3,-9,-2,-8,8,1,4,-2,-3,-7,-8,-5,7,-4,-2,-5,8,-5,-5,-1,2,-4,9,9,-7,-1,1,2,7,-10,-4,5,10,-10,-3,-8,4,1,-2,-7,7,5,-5,7,-2,2,-1,-8,7,6,9,-4,7,-6,8,-7,-3,-2,-9,10,-7,9,-1,10,3,7,1,-6,-7,-9,-6,-9,-1,7,1,3,-4,-5,-9,3,1,5,1,2,6,4,-10,-2,5,10,1,-5,6,-9,5,7,4,-1,5,-5,-5,-4,-4,-5,-8,-7,8,1,4,-9,4,6,-1,-2,-10,-9,8,9,10,2,-9,-6,-3,-1,6,5,-7,7,9,6,6,4,9,-7,1,8,10,-7,10,9,7,8,-6,3,4,-5,-5,4,6,4,1,-5,7,-6,-9,4,9,-3,-7,-8,-6,-9,2,6,5,5,-3,10,2,4,9,1,-10,-2,-3,-7,-5,-1,-10,-7,6,-4,10,-6,8,-8,-9,-6,7,7,-10,8,-1,-2,-5,-9,-1,-9,-6,5,-6,4,6,-6,10,1,-8,-5,10,-1,8,-6,-2,10,-10,4,10,1,6,6,-1,-5,-8,7,10,4,7,-5,-5,-6,9,-10,6,4,-9,9,1,-8,-6,8,-2,-4,-2,-7,-3,3,3,-1,-7,4,-7,-7,-8,-7,1,-10,8,1,2,-9,2,-5,7,5,-2,3,1,8,-4,-6,2,9,10,2,-9,7,2,6,9,-5,-10,2,8,-3,-9,-9,-4,3,-10,8,-3,-3,-6,-6,10,-9,2,4,-3,4,3,-5,4,1,-10,-5,3,-9,7,-7,9,-9,-7,-10,-7,6,-10,9,8,7,-10,-2,10,-3,9,6,-5,-8,10,-5,-2,9,2,3,-7,-8,5,-9,1,4,1,7,-6,8,-1,-3,6,5,9,7,-2,-4,-5,2,4,-6,-5,-2,-8,-7,5,-3,1,6,6,7,-8,-5,-3,-1,-4,-3,-1,-1,5,-7,-5,9,8,5,1,-4,-2,-6,-7,-1,5,9,1,7,6,-6,6,-9,3,10,6,6,2,-3,8,-9,10,-1,8,6,-1,8,-6,-2,1,-4,6,4,-2,9,1,-3,8,1,-1,1,-7,-1,-6,-3,-7,-5,-9,-4,-8,-10,-1,-9,8,-4,-6,3,5,-8,1,1,10,-4,7,-7,9,1,10,-10,9,-7,10,-8,-8,-10,-10,6,7,9,7,6,-3,7,-8,-4,-10,3,3,-7,-10,9,-5,9,4,-5,-4,-9,9,-2,3,-5,-9,3,2,2,-6,-1,5,-5,6,1,3,8,-6,-3,6,-1,6,6,3,-9,8,-2,-10], dtype = "int32")#candidate|12645|(512,)|const|int32
const_12646 = relay.const([-6.985793,-1.983401,7.027623,-2.004422,-5.181272,-5.618382,9.514768,5.047458,0.834165,4.753640,-9.021300,6.971265,0.321273,3.732814,-6.809101,1.231330,8.525139,-5.451443,6.905939,-7.555519,-2.660926,-9.619452,4.362645,-4.811518,-9.317618,-6.999037,0.898051,9.593096,7.229576,-8.195398,5.509634,0.387483,4.865251,9.208995,-0.944435,-0.337010,8.964735,-2.463242,3.340403,4.421338,-3.609530,-8.991119,6.803540,1.181013,-3.968049,9.181575,6.939575,8.402285,-0.814719,6.794597,-7.081477,7.925658,-9.021278,-6.886836,-0.958951,-6.371505,-3.863190,5.284061,-4.052345,-3.870124,-1.269145,4.166353,-3.523488,-5.390551,4.904764,-5.989260,1.574163,7.881451,4.201461,3.622000,-7.690464,2.021239,8.798823,-3.508401,1.778088,-4.953239,-7.597964,1.242204,-0.094724,9.434511,2.971930,9.774595,-1.272475,0.212419,4.912073,2.946020,-6.435324,-2.184644,3.747813,1.984219,9.022859,-8.082281,0.157484,1.569328,8.570364,-6.349279,-6.990245,-0.135023,-7.666667,-3.827419,-7.073688,1.135512,-4.315394,-0.064738,9.060259,-3.603585,-5.972320,-5.982703,-0.468513,2.076042,6.283379,7.707232,-8.473804,-5.508041,8.907497,-5.036668,-5.828858,-6.796100,2.057338,6.219018,-5.582391,8.452632,-4.415832,8.955240,8.277284,0.802505,-9.195358,-2.006653,-5.667305,1.214002,-1.543883,0.527935,-2.616906,4.192947,6.941222,-6.165627,3.369845,-7.389886,6.095049,-1.602036,-3.529407,4.064034,-3.758848,8.729645,-0.759406,-2.319592,-2.137183,-3.293724,6.656504,-5.258038,-9.614499,0.382618,9.175987,3.583057,7.928518,5.907181,4.421195,-7.613522,8.476736,-0.883526,-3.042394,-5.142277,8.616306,9.416750,-0.391489,0.859152,-6.644912,-8.651344,-2.265616,9.208420,-7.871916,8.727706,9.698453,5.167728,-5.248445,2.196198,3.219509,5.178924,-2.623221,6.769000,1.582086,5.805671,7.129939,5.579706,1.159666,5.162293,1.758971,-2.035274,-5.055803,4.739930,1.812232,-4.489201,-4.092036,6.188356,-8.576570,-3.679732,5.897229,-1.956905,5.581361,-1.393408,-6.758816,-1.937217,9.985928,-1.745197,5.342287,-9.499627,-6.510609,6.409665,-9.356859,7.142677,6.794617,-6.850688,7.466604,-0.148260,-0.831500,-2.809736,-8.137159,5.537756,7.620183,-6.360023,0.889081,0.517640,3.633460,5.375628,-9.574605,-3.511627,-9.869569,-0.805678,5.718109,-9.050041,-6.109916,-3.785519,-6.905480,-8.362583,-4.157486,-5.992870,4.587153,7.788348,-3.974366,-1.524192,-4.540439,-3.644474,-8.220640,-7.653899,1.153044,9.237384,4.423876,1.170168,5.848781,7.061055,-0.926774,-0.969563,-8.487248,-0.094499,-3.039780,9.841533,7.407948,8.148209,-3.662551,-8.338596,-4.911451,5.889555,5.950752,9.667508,-7.954901,-8.901434,-0.106598,-8.822861,0.833617,1.137961,-9.333141,-2.939867,6.957566,5.938600,4.945589,9.497451,2.768679,-5.317695,2.037467,-2.967619,-4.300936,-9.267218,6.837848,7.120572,4.292112,-2.830721,6.711339,-6.681407,-5.517616,5.680725,5.942872,1.470885,1.234833,1.588672,-5.685340,8.822768,5.822781,8.259460,-8.048951,0.761267,-3.953734,6.193721,-9.638267,-1.279010,5.407520,-9.872605,-8.867523,-8.768549,8.136413,5.291755,1.037435,2.158147,-8.097985,8.991272,6.295588,6.426027,-0.632353,-7.636152,-3.889462,6.976652,-1.676381,-4.202661,5.807085,-7.408555,-6.553523,-6.533354,-6.170418,-3.929426,9.577038,-6.375704,-1.021950,-9.820018,-0.717262,9.994883,8.918038,8.838391,6.595151,-3.432632,-7.798791,2.653146,-0.001880,-5.605786,9.368950,-5.599816,-5.429517,-7.448913,-0.349447,5.225893,3.136827,6.843796,4.603005,-0.469246,-4.546917,6.250477,3.297308,4.845124,3.822729,4.452972,3.199172,7.120617,-4.501261,-4.228060,-4.511092,8.545419,5.071414,-0.745121,4.755865,8.446542,3.993791,-3.302787,6.980180,8.914631,1.390454,-4.929557,-7.159688,-9.559532,9.757168,0.562374,-7.063525,9.805290,3.385134,-3.189156,-9.944064,-4.080429,1.860618,-7.258816,-3.349468,2.483759,-4.705532,-6.048654,4.999034,1.047760,-4.537880,-1.540972,-4.553169,-5.896116,5.674793,-5.676132,-4.281438,9.780733,-3.821461,-6.705473,8.735162,-0.072598,9.224697,-4.998124,-5.117560,7.473080,-3.873704,4.869792,8.594208,-9.703810,6.953090,-3.399605,7.199373,4.013523,-7.428943,7.137561,2.546792,7.390298,-2.432008,0.731096,-4.574096,6.269227,-7.151653,8.420411,-7.429140,-8.424422,-7.313441,3.846211,-9.535752,9.922774,5.209748,6.372590,9.817370,8.881691,-8.425390,-2.428752,-0.576441,-7.016712,-9.660851,-0.600925,6.721703,-1.745819,-0.534891,-8.460219,-7.689846,4.023581,-5.245312,-1.565954,7.269426,7.488405,-4.159459,-3.271752,-4.303128,1.817091,-3.406239,8.093361,-6.448402,-6.537160,-5.977916,-2.327694,-2.329461,-4.602908,-3.344042,-7.348116,-0.167861,0.660253,0.592250,1.600146,-4.425031,3.373475,4.779994,4.187781,-9.440982,-2.712513,-2.468779,-3.093986,-7.309751,0.471825,6.093235,-7.751414,0.113865,9.093883,-1.924843,-3.497893,4.327627,7.637836,2.990883,9.652054,-4.385804,-6.576784,-8.856264,-6.616165,6.940932,4.074966,9.539489,-5.269116,8.959244,-5.852210,3.464141,4.198044,-9.302280,8.753231,7.734844,2.560350,-1.846822,-8.320081,-7.620427,7.073528,-5.835132,3.916279,-5.499581,-9.642575,7.263508,3.794628,-9.648683,0.623404,-4.208794,-9.260830,6.463408,3.514329,4.530686,-5.220842,-3.964429,2.635977,-8.903949,9.359744,-1.565795,6.316531,-9.465072,-0.697187,3.432606,3.042905,-2.485633,7.340497,1.254619,1.600569,-0.028179,5.389065,9.291238,3.241600,6.545702,3.741109,-7.497527,1.877648,9.397656,3.816045,7.542689,-7.827029,-6.528310,-7.194461,4.762343,-3.709646,8.387078,-9.345594,-0.309853,6.639677,-1.812563,-1.519055], dtype = "float64")#candidate|12646|(560,)|const|float64
call_12644 = relay.TupleGetItem(func_12049_call(relay.reshape(const_12645.astype('int32'), [512,]), relay.reshape(const_12646.astype('float64'), [560,]), ), 5)
call_12647 = relay.TupleGetItem(func_12053_call(relay.reshape(const_12645.astype('int32'), [512,]), relay.reshape(const_12646.astype('float64'), [560,]), ), 5)
output = relay.Tuple([call_12601,call_12644,const_12645,const_12646,])
output2 = relay.Tuple([call_12602,call_12647,const_12645,const_12646,])
func_12649 = relay.Function([], output)
mod['func_12649'] = func_12649
mod = relay.transform.InferType()(mod)
mutated_mod['func_12649'] = func_12649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12649_call = mutated_mod.get_global_var('func_12649')
call_12650 = func_12649_call()
output = call_12650
func_12651 = relay.Function([], output)
mutated_mod['func_12651'] = func_12651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11362_call = mod.get_global_var('func_11362')
func_11363_call = mutated_mod.get_global_var('func_11363')
call_12678 = relay.TupleGetItem(func_11362_call(), 2)
call_12679 = relay.TupleGetItem(func_11363_call(), 2)
func_11747_call = mod.get_global_var('func_11747')
func_11749_call = mutated_mod.get_global_var('func_11749')
call_12697 = func_11747_call()
call_12698 = func_11747_call()
func_10806_call = mod.get_global_var('func_10806')
func_10807_call = mutated_mod.get_global_var('func_10807')
call_12699 = func_10806_call()
call_12700 = func_10806_call()
func_10670_call = mod.get_global_var('func_10670')
func_10672_call = mutated_mod.get_global_var('func_10672')
call_12725 = func_10670_call()
call_12726 = func_10670_call()
output = relay.Tuple([call_12678,call_12697,call_12699,call_12725,])
output2 = relay.Tuple([call_12679,call_12698,call_12700,call_12726,])
func_12733 = relay.Function([], output)
mod['func_12733'] = func_12733
mod = relay.transform.InferType()(mod)
output = func_12733()
func_12734 = relay.Function([], output)
mutated_mod['func_12734'] = func_12734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8708_call = mod.get_global_var('func_8708')
func_8710_call = mutated_mod.get_global_var('func_8710')
call_12777 = func_8708_call()
call_12778 = func_8708_call()
func_11279_call = mod.get_global_var('func_11279')
func_11281_call = mutated_mod.get_global_var('func_11281')
call_12801 = relay.TupleGetItem(func_11279_call(), 0)
call_12802 = relay.TupleGetItem(func_11281_call(), 0)
output = relay.Tuple([call_12777,call_12801,])
output2 = relay.Tuple([call_12778,call_12802,])
func_12808 = relay.Function([], output)
mod['func_12808'] = func_12808
mod = relay.transform.InferType()(mod)
output = func_12808()
func_12809 = relay.Function([], output)
mutated_mod['func_12809'] = func_12809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12825 = relay.var("var_12825", dtype = "float64", shape = (13, 6, 6))#candidate|12825|(13, 6, 6)|var|float64
uop_12826 = relay.acosh(var_12825.astype('float64')) # shape=(13, 6, 6)
output = uop_12826
output2 = uop_12826
func_12838 = relay.Function([var_12825,], output)
mod['func_12838'] = func_12838
mod = relay.transform.InferType()(mod)
mutated_mod['func_12838'] = func_12838
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12839 = relay.var("var_12839", dtype = "float64", shape = (13, 6, 6))#candidate|12839|(13, 6, 6)|var|float64
func_12838_call = mutated_mod.get_global_var('func_12838')
call_12840 = func_12838_call(var_12839)
output = call_12840
func_12841 = relay.Function([var_12839], output)
mutated_mod['func_12841'] = func_12841
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12861 = relay.var("var_12861", dtype = "float32", shape = (14, 15, 2))#candidate|12861|(14, 15, 2)|var|float32
uop_12862 = relay.sqrt(var_12861.astype('float32')) # shape=(14, 15, 2)
output = uop_12862
output2 = uop_12862
func_12864 = relay.Function([var_12861,], output)
mod['func_12864'] = func_12864
mod = relay.transform.InferType()(mod)
var_12865 = relay.var("var_12865", dtype = "float32", shape = (14, 15, 2))#candidate|12865|(14, 15, 2)|var|float32
output = func_12864(var_12865)
func_12866 = relay.Function([var_12865], output)
mutated_mod['func_12866'] = func_12866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10441_call = mod.get_global_var('func_10441')
func_10442_call = mutated_mod.get_global_var('func_10442')
call_12908 = func_10441_call()
call_12909 = func_10441_call()
func_7571_call = mod.get_global_var('func_7571')
func_7575_call = mutated_mod.get_global_var('func_7575')
const_12911 = relay.const([-8.807244,9.515224,0.570155,4.731649,-4.271586,-1.312463,-0.031026,3.913138,9.782760,-7.705646,-9.588676,9.170063,-8.745704,-6.246412,2.718624,-6.185032,0.932284,-9.946049,6.728427,-1.680063,0.508446,-1.765133,-3.322728,6.634646,7.983812,-4.232196,-2.216091,5.175226,-1.847229,-8.546139,2.632990,2.432364,-5.982936,4.573202,8.241859,8.824498,-4.722511,0.029528,-1.085312,-5.676909,-9.283010,0.774020,-2.691267,4.074246,1.105669,-9.563918,0.298171,2.434562,8.224856,3.875038,-2.678673,1.383334,5.191567,-6.080485,0.535983,6.973663,8.701581,-2.289556,1.836872,-3.190592,6.041745,2.781255,-7.242349,2.522172,7.708115,9.108487,2.214545,-3.718807,1.366809,-5.925648,5.561998,-4.039519,3.748615,-0.965077,2.669994,8.004282,1.781396,0.109028,9.396615,-0.910828,5.003398,3.435726,-6.049218,1.502765,-2.953400,7.172066,-0.641174,-6.376496,-3.109346,-6.338809,-4.738980,5.487480,1.219100,5.766296,5.042635,3.981746,2.402975,5.808444,4.006133,9.881642,0.503551,3.478578,1.761191,1.223696,9.794384,7.262216,9.106174,1.030557,0.452826,4.476372,-9.819565,5.431802,9.272285,-2.954995,-5.267836,-9.507949,-3.417072,6.993985,-4.998180,2.493678,-9.012324,7.093984,1.988524,-1.840636,6.329778,8.188226,4.511128,-1.972852,-4.666051,0.279770,-7.452383,-8.601732,4.210820,-0.690044,-2.446102,4.346021,-3.322719,-4.162163,-7.415660,-8.159803,-5.031244,2.957942,4.765990,0.583676,-0.434107,-8.034196,-6.105851,6.001055,-5.345028,5.918103,-2.075730,9.960046,9.855730,-5.169522,6.141902,-8.850629,9.108287,1.140342,9.276615,-4.261364,1.310652,-7.800362,0.537806,7.222260,-2.207665,-2.975479,-2.517904,3.353185,1.493204,4.046504,2.578668,-6.540170,5.381257,5.660197,-7.344378,6.964418,-6.129329,-5.332027,8.363351,0.713042,-3.663917,-8.635125,8.799419,7.975913,-7.522832,8.611997,-7.269311,-6.880076,8.706980,-3.090309,6.949755,4.050622,9.302355,3.025121,-1.287989,-9.896050,-2.196368,0.166914,5.185651,-5.944769,4.766358,7.510813,8.695206,4.281739,1.816933,7.833512,4.404977,-8.628477,-6.112396,-6.498197,-4.224052,4.310025,2.640267,-9.924047,8.202214,-0.928177,9.087107,-2.276417,7.890373,9.852600,3.603912,6.611070,-8.334104,-2.792424,8.901522,0.951896,3.297778,-3.091401,9.651784,4.584690,6.279930,5.992588,8.798421,-9.151511,0.502489,9.851067,-1.050993,-7.871005,-0.628999,9.469345,7.110845,5.350956,5.440573,2.183710,6.431224,-1.390901,1.447451,1.160328,6.074429,5.087437,5.290081,-6.897611,-8.141368,-4.615647,2.511353,-8.639207,-5.172036,7.506492,-3.797594,-8.048007,-7.615459,-6.402528,-4.433382,-9.734447,4.637320,9.088618,3.451021,-6.132102,-6.472855,-4.747877,-8.942061,-0.106308,9.282988,8.938912,-1.165183,3.799276,-4.726488,-9.493593,0.909939,-0.532273,2.211097,3.094503,6.645652,-8.158646,3.575777,0.808065,5.745705,-4.374686,-3.076501,-7.995637,-9.756257,0.162799,-8.146618,7.423330,-2.587821,-3.208817,0.644692,-9.944572,-4.859918,-8.328338,-1.414470,4.622656,9.675167,-0.823535,7.717242,3.501541,-8.595301,-8.035502,-7.941733,-7.951952,-5.893338,-9.110175,-8.007044,-8.473349,1.668040,-7.966504,0.725631,-3.021788,-4.500754,-3.028713,8.632640,4.950507,-8.402012,-1.770334,2.656745,9.483842,-9.211326,-3.818354,1.795567,1.988992,4.694341,-2.580068,1.504579,-1.953265,5.457164,-8.752033], dtype = "float64")#candidate|12911|(336,)|const|float64
var_12912 = relay.var("var_12912", dtype = "float64", shape = (1320,))#candidate|12912|(1320,)|var|float64
const_12913 = relay.const([6.547153,-8.921858,1.003419,-0.937807,-2.404989,9.957015,-9.294997,-6.102858], dtype = "float32")#candidate|12913|(8,)|const|float32
call_12910 = relay.TupleGetItem(func_7571_call(relay.reshape(const_12911.astype('float64'), [3, 7, 16]), relay.reshape(var_12912.astype('float64'), [1320,]), relay.reshape(const_12913.astype('float32'), [8, 1]), ), 1)
call_12914 = relay.TupleGetItem(func_7575_call(relay.reshape(const_12911.astype('float64'), [3, 7, 16]), relay.reshape(var_12912.astype('float64'), [1320,]), relay.reshape(const_12913.astype('float32'), [8, 1]), ), 1)
func_10518_call = mod.get_global_var('func_10518')
func_10519_call = mutated_mod.get_global_var('func_10519')
call_12924 = relay.TupleGetItem(func_10518_call(), 0)
call_12925 = relay.TupleGetItem(func_10519_call(), 0)
bop_12934 = relay.floor_divide(var_12912.astype('float32'), call_12910.astype('float32')) # shape=(11, 14, 1320)
bop_12937 = relay.floor_divide(var_12912.astype('float32'), call_12914.astype('float32')) # shape=(11, 14, 1320)
output = relay.Tuple([call_12908,const_12911,const_12913,call_12924,bop_12934,])
output2 = relay.Tuple([call_12909,const_12911,const_12913,call_12925,bop_12937,])
func_12939 = relay.Function([var_12912,], output)
mod['func_12939'] = func_12939
mod = relay.transform.InferType()(mod)
mutated_mod['func_12939'] = func_12939
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12940 = relay.var("var_12940", dtype = "float64", shape = (1320,))#candidate|12940|(1320,)|var|float64
func_12939_call = mutated_mod.get_global_var('func_12939')
call_12941 = func_12939_call(var_12940)
output = call_12941
func_12942 = relay.Function([var_12940], output)
mutated_mod['func_12942'] = func_12942
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12969 = relay.var("var_12969", dtype = "uint64", shape = (9, 10, 5))#candidate|12969|(9, 10, 5)|var|uint64
const_12970 = relay.const([[[6,8,-1,9,-2],[-8,2,5,-4,5],[10,10,6,9,7],[7,9,5,2,-3],[-6,5,4,6,-3],[-8,10,4,-3,-6],[-6,-6,-10,-4,-5],[-7,10,9,-3,4],[7,8,1,3,-5],[-6,4,6,3,6]],[[-9,-8,-6,2,5],[-7,7,10,-9,2],[4,5,-10,-1,2],[-10,4,-9,9,2],[-5,-6,4,10,3],[-7,4,4,-4,-6],[6,-7,-7,1,-8],[-10,1,7,6,-7],[1,-5,-6,8,5],[6,1,-4,-2,6]],[[9,4,4,5,9],[8,-8,5,-1,5],[9,1,-9,-10,-9],[2,2,10,-5,7],[-7,-6,-7,10,-5],[8,-8,-6,2,-9],[-4,-3,-7,4,5],[6,4,8,2,-1],[-7,-3,-6,4,-4],[-2,-4,-5,-5,-2]],[[8,-4,-9,-8,-4],[-10,-8,6,1,-3],[-2,3,10,-6,-7],[-7,6,9,-8,10],[6,3,-2,-7,8],[8,-8,10,7,5],[4,-8,7,-8,6],[5,8,5,6,5],[-5,7,-3,1,3],[-3,2,-7,-3,-2]],[[-5,-3,4,6,-2],[-5,3,-2,9,6],[1,-8,5,2,2],[-8,-2,3,9,-7],[10,9,5,10,5],[5,7,1,-1,-1],[6,4,-8,-3,6],[-9,-3,10,10,-2],[-5,-2,-4,-6,5],[-10,5,-8,-10,-2]],[[-10,-3,-1,-1,-4],[-9,3,5,6,2],[7,4,-5,8,3],[2,-3,6,-1,-7],[1,-7,-9,10,2],[-7,-4,-4,3,-4],[2,-2,4,-8,-7],[1,-3,10,9,-7],[2,1,-7,4,-6],[8,4,-10,-10,-3]],[[-5,2,-3,2,-4],[4,-5,1,1,-5],[4,3,-5,-8,3],[-9,8,-10,4,4],[3,4,-4,-1,2],[9,1,-6,9,9],[-7,-2,-10,7,-4],[-1,-8,4,-4,6],[3,4,9,8,5],[-10,6,9,-6,-9]],[[7,7,9,-9,8],[-10,1,5,-5,-8],[2,5,1,3,2],[8,-6,-9,6,-9],[-3,5,5,6,5],[-4,-3,3,5,-3],[-2,8,-4,4,-5],[6,3,4,3,10],[5,5,3,3,-5],[-6,-7,-4,1,3]],[[-10,6,4,1,-9],[7,5,5,9,-7],[-4,3,5,-4,-7],[4,8,1,9,9],[-3,3,8,7,6],[4,-4,5,6,8],[6,3,2,-8,-5],[1,3,7,4,9],[-5,1,-1,1,-6],[5,2,8,9,7]]], dtype = "uint64")#candidate|12970|(9, 10, 5)|const|uint64
bop_12971 = relay.bitwise_and(var_12969.astype('uint64'), relay.reshape(const_12970.astype('uint64'), relay.shape_of(var_12969))) # shape=(9, 10, 5)
output = bop_12971
output2 = bop_12971
func_12981 = relay.Function([var_12969,], output)
mod['func_12981'] = func_12981
mod = relay.transform.InferType()(mod)
var_12982 = relay.var("var_12982", dtype = "uint64", shape = (9, 10, 5))#candidate|12982|(9, 10, 5)|var|uint64
output = func_12981(var_12982)
func_12983 = relay.Function([var_12982], output)
mutated_mod['func_12983'] = func_12983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9317_call = mod.get_global_var('func_9317')
func_9319_call = mutated_mod.get_global_var('func_9319')
call_13051 = relay.TupleGetItem(func_9317_call(), 1)
call_13052 = relay.TupleGetItem(func_9319_call(), 1)
output = call_13051
output2 = call_13052
func_13055 = relay.Function([], output)
mod['func_13055'] = func_13055
mod = relay.transform.InferType()(mod)
mutated_mod['func_13055'] = func_13055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13055_call = mutated_mod.get_global_var('func_13055')
call_13056 = func_13055_call()
output = call_13056
func_13057 = relay.Function([], output)
mutated_mod['func_13057'] = func_13057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12313_call = mod.get_global_var('func_12313')
func_12315_call = mutated_mod.get_global_var('func_12315')
call_13115 = relay.TupleGetItem(func_12313_call(), 0)
call_13116 = relay.TupleGetItem(func_12315_call(), 0)
output = call_13115
output2 = call_13116
func_13123 = relay.Function([], output)
mod['func_13123'] = func_13123
mod = relay.transform.InferType()(mod)
mutated_mod['func_13123'] = func_13123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13123_call = mutated_mod.get_global_var('func_13123')
call_13124 = func_13123_call()
output = call_13124
func_13125 = relay.Function([], output)
mutated_mod['func_13125'] = func_13125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11279_call = mod.get_global_var('func_11279')
func_11281_call = mutated_mod.get_global_var('func_11281')
call_13149 = relay.TupleGetItem(func_11279_call(), 0)
call_13150 = relay.TupleGetItem(func_11281_call(), 0)
uop_13151 = relay.sin(call_13149.astype('float64')) # shape=(3, 99)
uop_13153 = relay.sin(call_13150.astype('float64')) # shape=(3, 99)
bop_13159 = relay.greater_equal(call_13149.astype('bool'), relay.reshape(uop_13151.astype('bool'), relay.shape_of(call_13149))) # shape=(3, 99)
bop_13162 = relay.greater_equal(call_13150.astype('bool'), relay.reshape(uop_13153.astype('bool'), relay.shape_of(call_13150))) # shape=(3, 99)
uop_13166 = relay.asinh(call_13149.astype('float64')) # shape=(3, 99)
uop_13168 = relay.asinh(call_13150.astype('float64')) # shape=(3, 99)
output = relay.Tuple([bop_13159,uop_13166,])
output2 = relay.Tuple([bop_13162,uop_13168,])
func_13170 = relay.Function([], output)
mod['func_13170'] = func_13170
mod = relay.transform.InferType()(mod)
output = func_13170()
func_13171 = relay.Function([], output)
mutated_mod['func_13171'] = func_13171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9317_call = mod.get_global_var('func_9317')
func_9319_call = mutated_mod.get_global_var('func_9319')
call_13213 = relay.TupleGetItem(func_9317_call(), 2)
call_13214 = relay.TupleGetItem(func_9319_call(), 2)
func_10877_call = mod.get_global_var('func_10877')
func_10879_call = mutated_mod.get_global_var('func_10879')
const_13219 = relay.const([[True,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,False,False,True,False,True,False,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False]], dtype = "bool")#candidate|13219|(1, 432)|const|bool
call_13218 = relay.TupleGetItem(func_10877_call(relay.reshape(const_13219.astype('bool'), [2, 216])), 2)
call_13220 = relay.TupleGetItem(func_10879_call(relay.reshape(const_13219.astype('bool'), [2, 216])), 2)
func_9370_call = mod.get_global_var('func_9370')
func_9372_call = mutated_mod.get_global_var('func_9372')
call_13233 = func_9370_call()
call_13234 = func_9370_call()
uop_13237 = relay.rsqrt(call_13218.astype('float64')) # shape=(2, 216)
uop_13239 = relay.rsqrt(call_13220.astype('float64')) # shape=(2, 216)
func_8651_call = mod.get_global_var('func_8651')
func_8653_call = mutated_mod.get_global_var('func_8653')
call_13242 = func_8651_call()
call_13243 = func_8651_call()
func_711_call = mod.get_global_var('func_711')
func_713_call = mutated_mod.get_global_var('func_713')
const_13251 = relay.const([-8.098240,3.630080,-9.136084,-3.014706,-5.132610,-1.331194,-1.542846,7.816431,5.619099,2.353082,-4.943348,-8.485806,-4.473034,7.445314,-1.791947,6.738896,-1.054351,7.063121,8.544053,-5.646905,-1.095924,-5.739146,3.185711,-9.119751,7.695461,7.762780,-8.739846,7.645364,2.723831,0.375864,2.692671,-6.263763,6.353973,-2.546040,7.640189,-0.434056,-3.306290,2.231300,7.958529,-8.169701,9.026856,-7.510360,-7.491704,-3.097603,0.003997,0.874483,-9.000407,-6.913413,6.278313,-4.182757,6.691873,-7.721074,9.546124,3.036508,6.370946,-9.556541,3.012229,3.928949,-7.102675,6.209837,5.750310,-0.867638,-0.712558,4.668156,-5.981123,7.920759,-4.867634,5.264669,0.476483,-0.505255,-8.309463,7.855862,-8.451336,8.201195,-6.894810,-5.414374,5.083865,8.574860,2.516971,0.252505,7.224754,5.197062,-7.840008,2.367513,-7.370686,3.725733,-7.690734,-7.922604,2.683696,3.241087,7.986555,3.336505,3.634394,-3.963561,6.574192,-9.847419,-3.302687,-1.791485,-2.764703,-0.916665,-7.309126,3.537098,-0.863339,8.850419,-6.159068,8.634542,-3.207054,-6.723097,-9.895155,-6.256540,0.498500,-1.642198,-1.634745,-0.622718,-9.009002,9.780916,-0.479605,-6.313279,4.848172,-5.296908,-0.666258,9.903732,-7.804166,-9.659341,-1.188423,-5.173788,8.941065,-1.431827,-8.213925,-5.085388,7.687694,1.978494,8.061060,0.236835,1.871310,-0.607214,2.228979,-6.745511,1.671032,-4.662314,3.552628,6.637808,6.606077,-4.947134,3.116621,5.153638,2.591430,-5.234790,-2.627339,8.546519,-4.568270,5.425969,5.727655,4.492267], dtype = "float64")#candidate|13251|(154,)|const|float64
call_13250 = relay.TupleGetItem(func_711_call(relay.reshape(const_13251.astype('float64'), [11, 14, 1])), 0)
call_13252 = relay.TupleGetItem(func_713_call(relay.reshape(const_13251.astype('float64'), [11, 14, 1])), 0)
uop_13255 = relay.sqrt(uop_13237.astype('float32')) # shape=(2, 216)
uop_13257 = relay.sqrt(uop_13239.astype('float32')) # shape=(2, 216)
var_13263 = relay.var("var_13263", dtype = "float32", shape = (2, 216))#candidate|13263|(2, 216)|var|float32
bop_13264 = relay.divide(uop_13255.astype('float32'), relay.reshape(var_13263.astype('float32'), relay.shape_of(uop_13255))) # shape=(2, 216)
bop_13267 = relay.divide(uop_13257.astype('float32'), relay.reshape(var_13263.astype('float32'), relay.shape_of(uop_13257))) # shape=(2, 216)
uop_13268 = relay.erf(uop_13237.astype('float64')) # shape=(2, 216)
uop_13270 = relay.erf(uop_13239.astype('float64')) # shape=(2, 216)
output = relay.Tuple([call_13213,const_13219,call_13233,call_13242,call_13250,const_13251,bop_13264,uop_13268,])
output2 = relay.Tuple([call_13214,const_13219,call_13234,call_13243,call_13252,const_13251,bop_13267,uop_13270,])
func_13271 = relay.Function([var_13263,], output)
mod['func_13271'] = func_13271
mod = relay.transform.InferType()(mod)
mutated_mod['func_13271'] = func_13271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13272 = relay.var("var_13272", dtype = "float32", shape = (2, 216))#candidate|13272|(2, 216)|var|float32
func_13271_call = mutated_mod.get_global_var('func_13271')
call_13273 = func_13271_call(var_13272)
output = call_13273
func_13274 = relay.Function([var_13272], output)
mutated_mod['func_13274'] = func_13274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12585_call = mod.get_global_var('func_12585')
func_12586_call = mutated_mod.get_global_var('func_12586')
call_13284 = relay.TupleGetItem(func_12585_call(), 1)
call_13285 = relay.TupleGetItem(func_12586_call(), 1)
func_4832_call = mod.get_global_var('func_4832')
func_4834_call = mutated_mod.get_global_var('func_4834')
var_13295 = relay.var("var_13295", dtype = "float32", shape = (1, 312))#candidate|13295|(1, 312)|var|float32
call_13294 = func_4832_call(relay.reshape(var_13295.astype('float32'), [12, 13, 2]))
call_13296 = func_4832_call(relay.reshape(var_13295.astype('float32'), [12, 13, 2]))
func_12838_call = mod.get_global_var('func_12838')
func_12841_call = mutated_mod.get_global_var('func_12841')
var_13300 = relay.var("var_13300", dtype = "float64", shape = (1, 468))#candidate|13300|(1, 468)|var|float64
call_13299 = func_12838_call(relay.reshape(var_13300.astype('float64'), [13, 6, 6]))
call_13301 = func_12838_call(relay.reshape(var_13300.astype('float64'), [13, 6, 6]))
func_12808_call = mod.get_global_var('func_12808')
func_12809_call = mutated_mod.get_global_var('func_12809')
call_13305 = relay.TupleGetItem(func_12808_call(), 0)
call_13306 = relay.TupleGetItem(func_12809_call(), 0)
uop_13308 = relay.sigmoid(call_13299.astype('float32')) # shape=(13, 6, 6)
uop_13310 = relay.sigmoid(call_13301.astype('float32')) # shape=(13, 6, 6)
output = relay.Tuple([call_13284,call_13294,var_13295,var_13300,call_13305,uop_13308,])
output2 = relay.Tuple([call_13285,call_13296,var_13295,var_13300,call_13306,uop_13310,])
func_13311 = relay.Function([var_13295,var_13300,], output)
mod['func_13311'] = func_13311
mod = relay.transform.InferType()(mod)
mutated_mod['func_13311'] = func_13311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13311_call = mutated_mod.get_global_var('func_13311')
var_13313 = relay.var("var_13313", dtype = "float32", shape = (1, 312))#candidate|13313|(1, 312)|var|float32
var_13314 = relay.var("var_13314", dtype = "float64", shape = (1, 468))#candidate|13314|(1, 468)|var|float64
call_13312 = func_13311_call(var_13313,var_13314,)
output = call_13312
func_13315 = relay.Function([var_13313,var_13314,], output)
mutated_mod['func_13315'] = func_13315
mutated_mod = relay.transform.InferType()(mutated_mod)
const_13388 = relay.const([[[False,True,True,True,False,False,False,False,True,True,False],[True,True,True,False,False,False,False,False,True,True,True],[False,True,True,True,False,True,True,True,True,True,False],[False,False,False,False,False,True,True,True,True,False,False],[False,True,False,False,True,True,True,False,False,True,True],[True,False,False,True,True,True,False,False,True,True,False]],[[True,True,False,False,True,True,True,True,True,True,False],[False,True,True,True,False,False,True,True,True,False,False],[True,True,True,False,False,False,True,True,False,True,False],[True,True,True,False,True,True,False,False,True,False,False],[True,True,False,True,False,False,False,False,False,False,False],[True,False,False,True,False,True,False,True,True,True,False]],[[True,True,True,False,True,False,True,True,False,False,False],[False,True,False,False,False,True,False,False,True,False,False],[True,True,False,False,True,True,True,False,False,False,False],[True,False,True,True,False,True,True,False,True,False,False],[False,False,False,True,True,False,False,True,False,True,False],[True,True,False,False,False,False,False,True,False,False,True]],[[False,True,True,True,True,False,False,True,False,False,True],[False,True,False,False,True,True,False,False,False,True,True],[False,False,False,False,False,True,True,False,False,True,False],[False,False,True,False,False,False,False,True,True,False,False],[False,False,False,True,False,False,True,False,False,True,False],[False,False,False,True,True,True,True,False,True,True,False]],[[False,True,False,False,True,True,True,True,False,True,True],[False,True,False,False,False,False,False,False,False,False,False],[False,True,True,True,True,True,False,False,True,False,False],[True,False,True,True,False,True,True,True,False,True,False],[False,True,True,False,False,True,False,False,True,True,False],[False,False,True,True,True,True,False,True,True,True,False]],[[True,False,False,False,True,True,False,False,False,True,False],[True,True,False,False,False,False,True,True,False,True,True],[True,False,False,True,False,False,False,True,False,True,False],[False,True,True,True,False,False,True,True,False,False,False],[False,False,False,False,True,True,True,False,True,False,False],[True,True,False,True,False,False,True,True,False,True,True]],[[True,True,True,True,False,False,True,True,False,True,True],[True,False,True,False,True,True,True,True,False,True,True],[False,False,True,False,False,False,False,True,True,False,False],[False,True,True,False,True,False,True,False,True,False,False],[False,False,True,False,False,True,False,True,False,False,True],[True,True,True,True,True,True,True,True,True,True,True]],[[False,False,False,False,True,False,False,True,True,False,True],[False,False,True,True,False,False,True,True,False,False,False],[True,False,True,False,True,True,False,False,False,False,False],[False,True,True,False,True,False,True,True,False,False,False],[True,True,False,False,True,True,False,True,True,True,True],[True,False,False,False,False,True,False,False,True,False,True]],[[True,False,False,True,False,False,True,False,False,True,True],[False,True,False,False,True,False,True,False,True,False,False],[False,False,False,True,False,True,False,False,False,True,True],[True,True,True,True,False,True,True,True,False,True,False],[True,True,True,True,True,False,False,True,False,False,False],[True,True,False,False,False,True,False,True,False,True,False]],[[True,False,True,False,True,False,False,True,True,True,False],[False,False,True,False,True,True,True,True,True,False,True],[True,False,True,False,False,False,False,False,True,True,False],[False,True,False,False,False,True,True,True,True,False,False],[True,False,True,False,True,False,True,True,True,False,True],[False,True,False,True,True,False,False,True,False,False,False]],[[False,False,False,True,False,False,True,False,False,False,False],[True,False,False,True,True,True,True,True,True,True,False],[True,False,False,True,False,True,True,False,True,False,True],[False,True,True,False,False,True,False,False,True,True,False],[True,False,True,True,True,True,False,True,True,True,True],[True,False,False,False,True,False,False,True,True,False,True]]], dtype = "bool")#candidate|13388|(11, 6, 11)|const|bool
const_13389 = relay.const([[[False,True,True,False,False,True,True,False,False,True,False],[True,True,True,True,False,False,False,True,False,False,True],[False,False,False,False,True,True,False,False,False,False,False],[True,False,False,False,True,False,True,True,False,False,False],[True,False,False,False,False,True,False,True,True,False,True],[True,True,False,False,True,True,False,False,True,False,False]],[[True,False,False,True,True,True,False,False,True,True,False],[True,True,False,False,True,True,True,False,False,False,True],[True,True,False,False,True,False,True,True,True,False,False],[True,True,True,False,True,True,True,True,True,False,False],[False,False,False,True,False,False,False,False,True,True,True],[True,True,True,False,False,False,True,False,False,False,True]],[[False,False,True,True,True,False,True,True,False,True,True],[False,False,True,False,False,False,True,True,True,True,False],[False,True,False,True,False,False,True,False,False,True,False],[True,True,True,True,False,False,True,True,True,False,True],[True,False,False,True,False,True,False,True,False,True,False],[False,False,False,True,True,False,True,True,False,False,False]],[[True,True,False,True,False,True,False,False,False,True,True],[False,False,True,False,True,False,False,False,False,False,False],[False,True,True,False,False,False,False,False,False,True,True],[False,False,False,True,False,False,False,False,True,False,False],[False,False,True,False,False,True,False,True,True,False,False],[True,False,True,True,False,True,False,True,True,False,True]],[[True,False,False,True,False,False,True,False,False,True,True],[False,False,True,True,False,False,True,True,True,False,True],[False,True,False,True,True,True,False,False,True,True,False],[True,True,False,True,False,False,True,True,True,True,True],[True,True,False,True,False,True,False,False,False,False,True],[False,False,True,False,False,True,True,False,True,False,True]],[[True,True,True,True,False,False,True,False,False,False,True],[False,True,True,True,False,True,True,False,False,False,False],[True,False,True,False,True,True,True,True,False,False,False],[True,False,False,True,True,False,True,True,True,True,False],[False,False,False,True,False,True,False,False,True,True,False],[False,False,True,True,True,False,True,False,False,False,False]],[[False,False,True,True,True,False,False,True,False,True,True],[True,False,True,False,False,True,True,False,True,False,False],[False,True,True,False,True,True,False,True,True,True,True],[False,False,True,False,False,False,True,True,True,False,False],[True,False,False,False,True,False,False,True,False,False,True],[False,True,False,True,True,True,True,False,True,True,False]],[[False,False,True,False,True,False,True,True,False,False,True],[True,True,False,True,True,False,False,True,True,False,False],[True,True,False,False,False,False,True,False,True,True,False],[False,True,True,False,True,False,True,True,True,False,False],[True,True,True,True,True,True,False,True,True,True,True],[True,False,True,False,True,True,True,True,True,True,False]],[[False,True,True,False,False,True,True,False,True,True,False],[True,False,True,False,True,True,True,False,False,True,False],[True,True,False,True,False,True,False,True,True,True,False],[True,True,True,False,True,True,True,False,True,False,False],[True,False,True,False,False,False,False,True,False,True,False],[False,False,False,True,True,True,True,False,True,False,True]],[[False,False,False,False,True,False,True,False,True,False,False],[False,False,False,False,False,True,True,False,True,True,False],[True,True,True,False,False,True,False,False,True,False,False],[True,False,True,False,False,True,True,False,False,True,True],[False,False,True,False,True,True,True,False,False,True,True],[True,True,True,True,True,True,False,False,True,True,False]],[[True,True,False,False,False,True,False,False,False,True,False],[True,True,True,True,False,True,True,True,True,False,True],[False,True,False,False,True,False,True,True,True,False,False],[True,True,True,False,True,True,False,False,True,False,True],[False,True,False,True,False,True,False,False,False,True,False],[True,True,True,True,False,False,False,True,True,False,False]]], dtype = "bool")#candidate|13389|(11, 6, 11)|const|bool
bop_13390 = relay.logical_or(const_13388.astype('bool'), relay.reshape(const_13389.astype('bool'), relay.shape_of(const_13388))) # shape=(11, 6, 11)
func_12214_call = mod.get_global_var('func_12214')
func_12217_call = mutated_mod.get_global_var('func_12217')
var_13397 = relay.var("var_13397", dtype = "float64", shape = (4, 12))#candidate|13397|(4, 12)|var|float64
call_13396 = relay.TupleGetItem(func_12214_call(relay.reshape(var_13397.astype('float64'), [2, 2, 12])), 0)
call_13398 = relay.TupleGetItem(func_12217_call(relay.reshape(var_13397.astype('float64'), [2, 2, 12])), 0)
output = relay.Tuple([bop_13390,call_13396,var_13397,])
output2 = relay.Tuple([bop_13390,call_13398,var_13397,])
func_13408 = relay.Function([var_13397,], output)
mod['func_13408'] = func_13408
mod = relay.transform.InferType()(mod)
mutated_mod['func_13408'] = func_13408
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13409 = relay.var("var_13409", dtype = "float64", shape = (4, 12))#candidate|13409|(4, 12)|var|float64
func_13408_call = mutated_mod.get_global_var('func_13408')
call_13410 = func_13408_call(var_13409)
output = call_13410
func_13411 = relay.Function([var_13409], output)
mutated_mod['func_13411'] = func_13411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10092_call = mod.get_global_var('func_10092')
func_10093_call = mutated_mod.get_global_var('func_10093')
call_13516 = func_10092_call()
call_13517 = func_10092_call()
output = relay.Tuple([call_13516,])
output2 = relay.Tuple([call_13517,])
func_13524 = relay.Function([], output)
mod['func_13524'] = func_13524
mod = relay.transform.InferType()(mod)
mutated_mod['func_13524'] = func_13524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13524_call = mutated_mod.get_global_var('func_13524')
call_13525 = func_13524_call()
output = call_13525
func_13526 = relay.Function([], output)
mutated_mod['func_13526'] = func_13526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13170_call = mod.get_global_var('func_13170')
func_13171_call = mutated_mod.get_global_var('func_13171')
call_13614 = relay.TupleGetItem(func_13170_call(), 0)
call_13615 = relay.TupleGetItem(func_13171_call(), 0)
func_13271_call = mod.get_global_var('func_13271')
func_13274_call = mutated_mod.get_global_var('func_13274')
var_13637 = relay.var("var_13637", dtype = "float32", shape = (432,))#candidate|13637|(432,)|var|float32
call_13636 = relay.TupleGetItem(func_13271_call(relay.reshape(var_13637.astype('float32'), [2, 216])), 1)
call_13638 = relay.TupleGetItem(func_13274_call(relay.reshape(var_13637.astype('float32'), [2, 216])), 1)
func_12234_call = mod.get_global_var('func_12234')
func_12235_call = mutated_mod.get_global_var('func_12235')
call_13643 = func_12234_call()
call_13644 = func_12234_call()
func_8708_call = mod.get_global_var('func_8708')
func_8710_call = mutated_mod.get_global_var('func_8710')
call_13645 = func_8708_call()
call_13646 = func_8708_call()
func_12981_call = mod.get_global_var('func_12981')
func_12983_call = mutated_mod.get_global_var('func_12983')
const_13649 = relay.const([3,-7,10,1,-7,-8,6,-9,10,9,-3,7,-2,-2,-3,2,-4,-2,-10,-2,6,3,3,7,1,-7,6,6,7,6,10,7,-7,-10,2,6,-2,-1,1,2,6,6,1,2,1,-9,6,-7,-5,-1,-9,-6,-6,-9,9,-10,-9,6,10,10,-6,2,-5,6,-6,-8,6,7,4,-10,9,5,6,-10,9,-6,10,-10,7,-8,5,-9,1,6,3,-6,5,2,5,10,3,1,-3,2,-7,4,-6,6,10,1,-7,8,2,-7,-2,-1,10,10,-4,-5,1,-6,4,-4,-3,10,6,4,-9,-3,6,8,9,-3,-8,-6,10,8,4,-10,1,-9,-1,-2,-5,-3,-2,-9,7,-6,2,6,5,-6,9,8,-8,-6,-1,1,-5,7,3,10,7,5,-7,-1,-8,-1,-5,-9,-5,5,-3,-2,-9,8,4,-2,-4,-10,9,-1,-10,-5,9,-1,-9,10,3,2,8,1,-8,5,-9,2,8,-8,4,-7,-7,7,5,8,9,7,10,1,3,1,-3,-4,6,9,-5,-1,5,8,7,-7,8,6,-5,9,3,4,4,-6,9,-8,-2,-9,-9,8,-5,-2,10,-2,-5,5,-10,3,-4,-2,-4,9,1,4,5,6,6,4,6,-3,4,8,-4,7,9,2,2,-1,9,3,-9,7,-6,3,6,10,1,-5,-8,4,-6,3,8,-10,-9,-5,1,4,-3,-7,3,1,7,1,-2,5,1,-3,9,-10,-6,9,-6,-3,1,8,-1,-8,-6,-6,-5,-6,8,-7,-3,-9,3,6,-10,8,1,3,-6,-2,3,-1,-10,5,6,-7,1,10,4,1,7,5,-5,1,1,-4,-3,3,1,1,9,8,6,4,-6,-3,-4,2,-9,1,-6,6,-1,3,4,1,4,3,-9,-9,2,9,-2,-7,4,1,-2,-9,4,5,6,3,-7,-9,5,-3,-9,3,5,-10,-8,1,8,5,4,3,-7,-9,5,3,5,7,10,5,1,-6,-8,1,7,-1,-7,2,-3,10,-10,-7,9,-10,5,-4,-3,-7,7,1,5,8,6,-8,10,6,1,6,-1,-8,-2,-5,5,9,2,-10,2,9,-8,9,-6,-10,2,6,-2,10,-9,2,6,7,-1,-3,5,-3,10,10,8,-3,-8,2,3,6,6,7,-9,-10], dtype = "uint64")#candidate|13649|(450,)|const|uint64
call_13648 = func_12981_call(relay.reshape(const_13649.astype('uint64'), [9, 10, 5]))
call_13650 = func_12981_call(relay.reshape(const_13649.astype('uint64'), [9, 10, 5]))
output = relay.Tuple([call_13614,call_13636,var_13637,call_13643,call_13645,call_13648,const_13649,])
output2 = relay.Tuple([call_13615,call_13638,var_13637,call_13644,call_13646,call_13650,const_13649,])
func_13655 = relay.Function([var_13637,], output)
mod['func_13655'] = func_13655
mod = relay.transform.InferType()(mod)
var_13656 = relay.var("var_13656", dtype = "float32", shape = (432,))#candidate|13656|(432,)|var|float32
output = func_13655(var_13656)
func_13657 = relay.Function([var_13656], output)
mutated_mod['func_13657'] = func_13657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8902_call = mod.get_global_var('func_8902')
func_8903_call = mutated_mod.get_global_var('func_8903')
call_13674 = relay.TupleGetItem(func_8902_call(), 0)
call_13675 = relay.TupleGetItem(func_8903_call(), 0)
func_12501_call = mod.get_global_var('func_12501')
func_12502_call = mutated_mod.get_global_var('func_12502')
call_13682 = relay.TupleGetItem(func_12501_call(), 0)
call_13683 = relay.TupleGetItem(func_12502_call(), 0)
output = relay.Tuple([call_13674,call_13682,])
output2 = relay.Tuple([call_13675,call_13683,])
func_13704 = relay.Function([], output)
mod['func_13704'] = func_13704
mod = relay.transform.InferType()(mod)
mutated_mod['func_13704'] = func_13704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13704_call = mutated_mod.get_global_var('func_13704')
call_13705 = func_13704_call()
output = call_13705
func_13706 = relay.Function([], output)
mutated_mod['func_13706'] = func_13706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11617_call = mod.get_global_var('func_11617')
func_11619_call = mutated_mod.get_global_var('func_11619')
call_13781 = func_11617_call()
call_13782 = func_11617_call()
func_12939_call = mod.get_global_var('func_12939')
func_12942_call = mutated_mod.get_global_var('func_12942')
const_13784 = relay.const([9.748238,-2.629829,-6.739422,0.195541,-6.242152,9.395285,4.538172,-6.283896,-8.741361,1.437347,-0.347631,7.204169,-9.383705,-2.026809,-2.865763,4.698801,8.662234,-5.183983,3.536935,-6.786605,8.807231,-8.306170,-6.964388,6.426031,6.286586,-8.494655,7.201342,9.222691,6.360133,2.352129,1.024817,0.634944,-9.613801,2.001544,-0.163547,0.448657,4.985483,-7.675111,2.409096,2.137044,-6.174711,-5.872660,2.270705,-5.767303,3.161900,-5.485334,-5.058205,9.975579,-0.680137,-6.875011,-7.881866,-0.022435,8.389298,-5.795247,-5.192691,-9.316209,8.185453,-6.885920,-2.871283,-1.970657,-2.532765,-0.725124,-8.668467,3.723096,-1.421580,3.076262,-2.410428,3.609327,-0.497928,-0.388432,9.226328,-2.474999,2.273211,7.346415,1.770404,-8.846461,-0.995740,-9.746878,-7.350719,3.946061,6.067957,-5.975570,9.073663,-2.680795,4.294889,-2.118463,3.655805,5.039878,-8.091183,-3.277122,-5.310568,2.042964,2.673943,-2.404204,-2.063375,4.841017,-7.213580,7.781092,7.624925,-8.919549,-5.210051,3.226971,6.211754,-1.736522,8.412498,0.934463,3.532832,-3.559081,-9.447169,7.083883,6.215716,-8.656389,-5.886787,6.719102,3.861142,-0.906025,-3.603899,2.986895,-9.644408,1.623198,-2.282258,-7.383923,-9.075381,7.225742,5.661930,6.287980,7.964284,-9.232879,1.040382,9.518834,4.463445,-4.717177,0.660642,2.080282,0.643505,5.890369,7.764744,-7.349662,-6.153103,-0.026784,-8.284126,-7.303610,-1.601007,0.407515,-3.323250,-6.682705,-8.131697,-4.472481,6.861717,0.594295,-8.409378,-8.547863,-8.763762,0.905464,-2.779409,-4.150801,2.411227,-5.162023,-0.949298,4.784485,-1.939193,-9.677650,-8.350667,-2.249884,8.786252,4.043267,-4.640504,9.708757,-6.819385,-1.175658,0.548895,5.104327,1.455104,-9.388154,1.273348,1.726546,9.955005,-2.978359,-2.091743,9.856171,-7.900545,6.778519,7.750002,-6.613450,-9.248172,-9.099104,6.369079,-3.977810,-0.362069,-5.321303,1.130113,4.158500,-3.930283,-4.179093,2.624306,-2.147004,-8.287429,-6.000448,-5.488979,7.166569,6.009524,-5.996363,1.477789,-0.789692,7.538881,0.889564,-0.387642,-8.974031,-2.016931,8.975147,-2.029888,-4.269797,9.886350,-2.148668,4.876321,-0.143743,-5.652205,7.184046,-0.462371,6.294947,8.854037,-7.376767,1.097645,-6.420523,1.976925,9.252842,0.245570,8.297498,5.338651,-4.123844,2.245179,2.968650,-9.966013,-8.627582,-1.852763,-3.146114,-6.537794,8.979119,9.476864,-9.903838,1.697928,5.357732,5.995306,-2.234199,-3.948861,2.660891,1.832283,3.947561,7.113936,-3.313499,4.082286,8.377727,5.911132,-0.077745,-0.772329,-0.878715,-1.191272,-3.466494,-3.558982,-0.224983,-7.678193,-3.820429,7.558649,7.686240,7.147977,-4.505045,-6.667406,6.922420,2.954263,3.428754,-7.352759,2.712281,3.435344,-4.197646,-5.301059,-2.908264,-3.388441,7.807022,6.679116,-9.059588,-4.179206,6.002390,3.132005,1.325700,-7.803029,-9.644207,-5.013665,-8.162543,-8.157077,6.688635,9.811888,2.159012,-9.978222,5.345887,7.033303,0.623944,8.108147,-0.479378,9.145148,4.792520,-9.244701,-0.200024,2.191974,-2.215229,1.230944,7.581272,-0.195702,-4.886956,0.255916,-5.956494,7.073042,-8.629796,-2.372303,5.981673,-2.709935,-9.842765,9.931760,2.849707,2.198228,-1.641572,0.939867,4.370574,-6.549592,8.399385,-5.268557,-5.107612,2.914354,-4.123627,3.244148,5.660184,-9.707469,0.637420,-7.738568,-5.044249,-1.929346,-0.381154,-8.405258,1.096420,8.185585,-3.905821,-1.904318,7.563542,-4.965697,-7.338083,-2.750154,3.348375,0.705839,-1.698772,-3.611807,1.595488,0.108595,-1.039224,0.267383,-9.167555,-3.437432,-2.505862,7.507418,-1.282737,1.051669,1.803276,-7.481961,-4.508214,5.020188,2.617374,-8.591990,0.133342,-0.532834,0.377861,4.488616,-1.767571,0.419235,1.456821,6.314093,-6.518265,-0.292953,-2.023395,-0.052435,-2.051447,3.374516,2.485503,-3.184918,3.174277,2.744020,-7.752012,-0.479767,-6.203040,-2.421105,-1.981888,-1.102558,-6.549307,-8.158791,6.262823,-4.173851,6.503414,-0.602450,2.575176,6.547657,4.430761,8.537875,9.328952,5.547514,6.813330,7.959527,7.173642,-9.921530,-1.365410,-3.549916,-2.533311,9.298148,-3.299773,-9.786333,-1.370968,-0.004893,-7.138421,-5.635517,7.741238,-5.003161,2.817810,-4.616199,9.621089,-0.239611,8.347763,9.980060,1.425286,8.836797,-6.582960,1.896274,3.058602,9.184891,-3.575978,-8.223950,5.524532,-4.018074,-4.561090,1.051833,-4.844415,-0.834443,-3.180011,6.381868,-4.243570,3.491695,-6.334543,-9.976548,-1.756170,-3.503036,4.956874,-9.721306,5.467385,5.024109,9.393655,9.401422,-7.303315,3.026473,7.095988,5.744111,-4.932133,1.394308,0.839490,-5.120868,2.095195,-0.215509,0.360815,1.683055,-1.678149,2.802234,3.439386,1.334228,-9.395905,-8.897110,7.990135,4.829134,-8.150501,-9.352172,-3.722938,2.199752,6.156451,-8.072302,-5.503959,0.891336,-6.889365,-5.223548,4.047968,-5.398316,-4.100146,-7.590902,-4.198991,9.454166,-4.003835,-5.740877,8.032206,-6.414938,-6.087011,4.310670,-4.740401,3.991093,4.177907,-0.316693,8.013636,-4.654257,6.686438,0.991781,1.467666,-0.168004,-2.948388,-3.867626,-4.572704,9.943849,-9.699396,9.352553,4.345550,8.703644,-4.018544,-7.721281,-5.633523,0.436267,3.586475,5.308870,-6.796599,-5.323516,6.935044,-7.164294,0.459771,-4.096951,-3.143384,-4.653556,-8.483602,6.947107,0.688627,-9.248936,-2.881130,3.972919,-7.562136,-8.560480,-3.952671,4.410573,-5.814935,2.014184,1.844951,5.572035,3.526902,-1.867131,3.266545,-5.209682,0.103785,4.822656,-1.095896,4.385568,7.929892,8.247478,-8.494787,9.138687,-8.413663,-6.753381,-8.021139,-0.838801,8.438940,6.937746,-6.026128,1.073740,-6.526696,3.588521,5.612862,2.732070,4.495159,-7.513156,-6.912627,-0.489874,-7.431043,-2.127555,-0.271935,-3.705842,0.907970,-3.918133,5.139200,8.046771,-3.511854,-4.389902,0.439154,5.711720,4.284851,-7.804283,3.735863,-2.031435,3.755738,2.595134,9.035728,9.489650,1.489628,-3.985510,6.158574,6.790322,7.527195,8.763739,5.807524,9.780756,-1.282482,-7.133973,-2.428770,4.743625,-2.838090,6.502172,-0.247478,-1.443352,-5.664630,-6.559202,9.940956,-6.523264,-5.130694,6.680798,-4.950539,-7.763861,9.708948,-9.385738,4.624956,7.703701,-0.833642,-2.623505,-6.815656,9.308859,4.449523,-3.388101,9.442919,1.232114,3.332959,2.164342,3.658038,-1.468288,4.112860,-0.615669,6.181122,-7.645961,-3.883790,-1.671258,1.139848,-2.336981,-1.588878,4.847467,1.178925,7.113637,-4.588209,-4.199408,-0.706999,-3.943836,8.294738,-4.310022,-3.601685,6.909636,0.372315,4.057800,1.572282,-2.375693,5.421491,7.895402,-6.590256,0.041670,9.306930,9.592686,-2.447832,4.756102,-9.438774,-5.682780,-6.899976,-6.324193,-1.843533,3.776167,1.491552,8.890214,6.864155,0.650862,8.107179,-3.631818,-4.622342,-2.270674,4.626177,-9.504776,7.576336,1.865765,-5.802940,-9.752197,8.350211,-1.688276,3.979336,2.169488,-4.706860,-0.560788,6.677923,0.812881,-5.591042,3.335364,3.077587,-2.049939,-0.070877,7.543426,8.168218,4.856218,1.719182,8.278283,5.337768,4.252034,1.993881,1.791381,1.018958,-5.325108,-1.643622,9.769540,3.899289,1.772123,6.502979,4.162843,-7.078492,-9.566963,-8.390808,-1.473725,-2.978636,-8.802096,8.919544,0.746870,-7.436475,9.954621,9.226066,-6.090506,-6.246687,-2.973108,-7.825993,-2.662752,0.718507,-6.941986,-2.541559,7.426465,8.231031,-4.091239,-7.172342,8.297230,5.556336,3.012294,5.613477,2.336971,7.328447,-5.570831,8.943829,-6.718612,9.714102,0.633674,7.774849,-2.356904,-2.249014,-0.321957,-4.641354,2.674813,-0.124640,-4.248651,-8.938305,5.953810,-4.673479,-5.897378,-3.933093,-3.084884,6.388805,1.851750,-1.337164,4.045897,-4.256094,5.713850,7.320919,-5.914023,-1.589674,-4.187751,-3.877768,-8.403953,5.226891,8.760866,-8.584439,0.495238,0.199019,-8.418753,-4.313915,-0.886919,5.183268,-8.142305,-9.172848,-8.499819,8.850631,3.512729,-2.324623,-7.793754,-9.237485,8.886037,2.163003,0.986372,9.610492,7.188488,2.439299,-2.141645,2.791831,-9.011135,6.506430,-8.792691,4.759801,0.558585,-0.508716,4.835908,5.113803,1.097098,0.147122,4.367418,-9.586440,-6.348416,-8.461945,2.714383,9.203985,7.538841,-9.200003,-9.343273,0.613601,-0.392240,5.154324,3.506389,-7.368371,-4.242532,5.798454,6.962957,-9.431700,0.347625,-7.472725,-9.201236,-0.740459,8.379122,-5.421086,-2.366320,4.566798,8.941198,-1.739429,4.075271,0.732904,-1.679257,8.948640,-6.209095,-7.071335,-5.901384,-8.363948,-4.185896,-1.952445,-4.991838,4.995860,-8.691476,7.101829,-1.211236,-1.056445,-7.425989,2.275168,-0.532076,-1.855557,-0.806840,7.446696,-7.623908,0.151014,-6.365820,-6.349671,-6.130786,-1.512570,-3.748917,-2.205432,3.666739,-2.654220,-0.559482,2.254827,-9.123846,-4.265103,-2.156866,9.764601,4.355590,2.945674,-8.824180,-5.973376,-2.565653,0.386227,-3.537831,7.703986,4.471617,-7.377359,9.332675,-8.877392,3.801013,-6.005935,-9.273762,-0.641575,-9.338876,-4.206407,8.612273,-7.941395,0.965349,-8.517698,6.015236,2.273794,0.334309,9.486369,4.310646,-9.820628,-5.569523,-5.071515,-1.953189,-3.638635,1.598829,2.184432,-5.408502,-8.835458,-0.456445,0.361455,-3.299761,-2.564442,-9.018834,-5.795580,5.382976,2.696188,7.242665,0.626478,-8.961764,-2.115860,-8.623416,2.587286,3.609486,-3.156943,-1.645734,-3.600340,-2.069983,2.655379,-8.122691,4.559168,-8.220235,2.896845,-8.404229,-5.750831,-1.632082,-8.796149,-5.049820,8.701687,6.899578,1.283131,-9.382636,-0.494662,-5.181215,2.323398,0.138931,5.451035,4.254861,3.488748,6.540036,7.983961,7.113061,-9.091166,6.323794,9.338912,1.316185,-1.372204,-2.016705,-1.065531,-3.725322,3.944254,-2.778934,-5.498489,6.958181,-0.603689,6.944508,5.951751,2.972116,-6.387257,2.936310,-4.325335,6.276312,-1.690964,3.904163,-1.959886,7.659114,-8.776860,-8.189882,6.876570,-0.511381,-9.502254,4.995053,-7.117195,9.354563,5.662422,0.930247,6.629101,5.470456,-8.138414,3.660688,-7.332725,2.568784,-6.205467,3.116512,6.826853,9.516091,6.703816,0.007518,-2.009914,5.362187,-7.304830,2.176947,2.924445,7.891734,9.050575,-1.729076,8.634395,-3.514655,-0.812341,-5.459237,-8.273965,9.166124,-5.926262,1.492526,-8.685235,6.799879,2.092997,-5.983556,7.738196,4.121768,-8.062403,-2.907195,0.042062,-2.347731,4.001279,6.550882,-9.512250,3.192544,-6.591318,3.567395,4.517982,8.142580,7.414979,5.439502,5.217974,-0.669956,8.107663,-4.169077,3.965009,-1.458922,2.246447,-9.239248,-7.533239,-4.368818,1.753692,0.441019,-1.801409,9.651771,3.730237,-7.690854,3.557560,-4.162699,-6.453374,7.679489,0.757549,-4.762751,-1.307381,9.764597,-7.996542,9.327967,4.759636,3.335786,1.433560,-1.184162,3.251301,1.097939,1.129368,1.806440,-8.662701,0.181427,-6.599999,-3.544153,7.541021,-9.654107,-7.214558,6.944955,-8.954488,2.959422,1.076676,-7.056889,8.800173,-4.308630,-1.701024,-4.994427,-7.858732,-9.489469,8.231105,2.029141,-0.809484,-2.890108,5.924657,7.412324,-8.328387,0.940187,-0.681720,8.223618,-0.947743,-2.519324,4.768677,2.223346,-3.640349,5.440365,4.109650,-3.636248,-3.475000,-6.606925,-5.879554,9.074131,-7.732100,9.432935,8.499617,-8.150836,-4.715503,-2.237660,0.123172,0.078523,7.311669,0.468012,-9.186079,9.746849,8.763980,-6.750742,7.137023,-1.481900,9.234275,-3.064931,-1.876254,-5.060940,6.664752,8.294850,-2.070416,-1.908516,8.643452,-8.385784,-0.840897,-4.822211,9.636141,9.505831,-0.453863,4.275892,5.183854,-9.983127,-3.937467,-6.002839,8.164543,5.920945,4.553200,-9.250176,6.351229,-5.152871,-2.784687,4.341139,8.077479,-2.776840,7.265743,7.754005,8.918785,-1.637984,-6.128210,9.753224,-6.085305,-9.091875,-9.870743,-1.399038,0.387498,3.828563,1.776319,-1.201538,-6.800291,5.568755,-6.387060,-6.156850,-3.436423,2.695399,-6.085042,7.044665,8.644981,-8.137846,-0.807114,-3.907261,0.691188,2.439228,-2.953393,4.742612,-9.116409,-3.735131,-5.113193,-9.130136,-0.882019,1.409328,-9.468205,0.403191,-5.919172,3.221661,3.284381,0.855491,-6.964016,2.282530,-8.531177,8.187923,4.706714,2.098905,-7.028793,4.430647,5.079603,8.689915,2.654715,-5.149009,-6.518441,-8.422894,7.425183,-4.672741,-4.233518,-1.778682,9.925702,7.839054,-3.294902,-2.342039,-1.025973,6.033327,-6.086194,2.684243,4.595872,-0.605551,4.168273,9.650692,-4.291682,-9.052911,-5.934932,6.354571,-5.972075,-5.706677,8.434718,-5.642858,-0.813495,6.635535,-4.530862,-5.613107,-9.414203,-4.644337,2.531107,-3.540498,6.880093,-6.695978,-7.144711,1.430817,-5.703620,2.695849,-9.835256,9.402661,2.637531,-7.259841,9.454761,4.205762,4.471896,-8.420521,-5.955330,-0.236248,0.869078,5.327540,-4.841273,2.734792,-6.512442,-0.879899,-6.583470,-5.371176,-7.990188,0.704692,9.424274,-7.218955,-5.435120,-0.329377,8.015542,0.290530,7.403631,-7.545727,5.124325,3.489070,-5.288486,4.215579,6.471141,-0.479055,-0.669792,-0.606415,8.926681,-5.795745,5.222968,-9.131690,5.889029,3.320788,-8.042403,-6.821588,4.523837,8.380947,6.091691,-9.182594,-4.054692,-9.982825,1.365576,4.855254,2.068530,-5.991482,-9.753100,-6.167179,-6.689861,-9.275263,9.741299,0.575269,-8.632970,3.129279,6.318352,6.182915,-3.036244,-5.171385,-3.290600,-8.623672,9.180829,-7.731360,9.142704,0.695259,-3.849310,-2.251724,-2.198915], dtype = "float64")#candidate|13784|(1320,)|const|float64
call_13783 = relay.TupleGetItem(func_12939_call(relay.reshape(const_13784.astype('float64'), [1320,])), 2)
call_13785 = relay.TupleGetItem(func_12942_call(relay.reshape(const_13784.astype('float64'), [1320,])), 2)
func_10441_call = mod.get_global_var('func_10441')
func_10442_call = mutated_mod.get_global_var('func_10442')
call_13819 = func_10441_call()
call_13820 = func_10441_call()
output = relay.Tuple([call_13781,call_13783,const_13784,call_13819,])
output2 = relay.Tuple([call_13782,call_13785,const_13784,call_13820,])
func_13826 = relay.Function([], output)
mod['func_13826'] = func_13826
mod = relay.transform.InferType()(mod)
mutated_mod['func_13826'] = func_13826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13826_call = mutated_mod.get_global_var('func_13826')
call_13827 = func_13826_call()
output = call_13827
func_13828 = relay.Function([], output)
mutated_mod['func_13828'] = func_13828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13055_call = mod.get_global_var('func_13055')
func_13057_call = mutated_mod.get_global_var('func_13057')
call_13862 = func_13055_call()
call_13863 = func_13055_call()
output = call_13862
output2 = call_13863
func_13878 = relay.Function([], output)
mod['func_13878'] = func_13878
mod = relay.transform.InferType()(mod)
mutated_mod['func_13878'] = func_13878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13878_call = mutated_mod.get_global_var('func_13878')
call_13879 = func_13878_call()
output = call_13879
func_13880 = relay.Function([], output)
mutated_mod['func_13880'] = func_13880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11279_call = mod.get_global_var('func_11279')
func_11281_call = mutated_mod.get_global_var('func_11281')
call_13883 = relay.TupleGetItem(func_11279_call(), 0)
call_13884 = relay.TupleGetItem(func_11281_call(), 0)
output = relay.Tuple([call_13883,])
output2 = relay.Tuple([call_13884,])
func_13885 = relay.Function([], output)
mod['func_13885'] = func_13885
mod = relay.transform.InferType()(mod)
output = func_13885()
func_13886 = relay.Function([], output)
mutated_mod['func_13886'] = func_13886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12649_call = mod.get_global_var('func_12649')
func_12651_call = mutated_mod.get_global_var('func_12651')
call_13940 = relay.TupleGetItem(func_12649_call(), 3)
call_13941 = relay.TupleGetItem(func_12651_call(), 3)
func_10483_call = mod.get_global_var('func_10483')
func_10484_call = mutated_mod.get_global_var('func_10484')
call_13948 = func_10483_call()
call_13949 = func_10483_call()
output = relay.Tuple([call_13940,call_13948,])
output2 = relay.Tuple([call_13941,call_13949,])
func_13956 = relay.Function([], output)
mod['func_13956'] = func_13956
mod = relay.transform.InferType()(mod)
mutated_mod['func_13956'] = func_13956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13956_call = mutated_mod.get_global_var('func_13956')
call_13957 = func_13956_call()
output = call_13957
func_13958 = relay.Function([], output)
mutated_mod['func_13958'] = func_13958
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13974 = relay.var("var_13974", dtype = "int64", shape = (11, 6, 8))#candidate|13974|(11, 6, 8)|var|int64
var_13975 = relay.var("var_13975", dtype = "int64", shape = (11, 6, 8))#candidate|13975|(11, 6, 8)|var|int64
bop_13976 = relay.less_equal(var_13974.astype('bool'), relay.reshape(var_13975.astype('bool'), relay.shape_of(var_13974))) # shape=(11, 6, 8)
output = bop_13976
output2 = bop_13976
func_13993 = relay.Function([var_13974,var_13975,], output)
mod['func_13993'] = func_13993
mod = relay.transform.InferType()(mod)
mutated_mod['func_13993'] = func_13993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13993_call = mutated_mod.get_global_var('func_13993')
var_13995 = relay.var("var_13995", dtype = "int64", shape = (11, 6, 8))#candidate|13995|(11, 6, 8)|var|int64
var_13996 = relay.var("var_13996", dtype = "int64", shape = (11, 6, 8))#candidate|13996|(11, 6, 8)|var|int64
call_13994 = func_13993_call(var_13995,var_13996,)
output = call_13994
func_13997 = relay.Function([var_13995,var_13996,], output)
mutated_mod['func_13997'] = func_13997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10483_call = mod.get_global_var('func_10483')
func_10484_call = mutated_mod.get_global_var('func_10484')
call_14079 = func_10483_call()
call_14080 = func_10483_call()
func_11362_call = mod.get_global_var('func_11362')
func_11363_call = mutated_mod.get_global_var('func_11363')
call_14094 = relay.TupleGetItem(func_11362_call(), 1)
call_14095 = relay.TupleGetItem(func_11363_call(), 1)
func_10518_call = mod.get_global_var('func_10518')
func_10519_call = mutated_mod.get_global_var('func_10519')
call_14102 = relay.TupleGetItem(func_10518_call(), 0)
call_14103 = relay.TupleGetItem(func_10519_call(), 0)
output = relay.Tuple([call_14079,call_14094,call_14102,])
output2 = relay.Tuple([call_14080,call_14095,call_14103,])
func_14104 = relay.Function([], output)
mod['func_14104'] = func_14104
mod = relay.transform.InferType()(mod)
output = func_14104()
func_14105 = relay.Function([], output)
mutated_mod['func_14105'] = func_14105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13123_call = mod.get_global_var('func_13123')
func_13125_call = mutated_mod.get_global_var('func_13125')
call_14157 = func_13123_call()
call_14158 = func_13123_call()
func_12733_call = mod.get_global_var('func_12733')
func_12734_call = mutated_mod.get_global_var('func_12734')
call_14175 = relay.TupleGetItem(func_12733_call(), 0)
call_14176 = relay.TupleGetItem(func_12734_call(), 0)
func_10072_call = mod.get_global_var('func_10072')
func_10074_call = mutated_mod.get_global_var('func_10074')
const_14200 = relay.const([3.292067,-7.637427,3.396065,4.873408,5.240771,7.107839,-2.615157,-5.347390,-4.454874,7.433595,1.614461,2.485294,-6.494764,-1.984167,-3.855755,-0.731625,-5.015755,-9.119825,-5.670151,1.901530,-5.279412,-4.732523,3.317472,7.001192,7.001491,-8.984785,-2.115783,3.594295,0.166167,-8.455211,5.356773,4.923890,3.219846,0.518251,6.850038,4.417122,-9.439158,9.599219,-2.410924,1.385412,4.436261,-3.990385,2.380159,-8.438345,-2.867817,-2.082123,1.122015,1.293084,-1.161551,4.789705,4.856374,4.719694,-1.550251,6.719711,1.144730,-3.226278,1.366760,-7.941419,1.615978,0.357686,7.319765,8.237176,-0.008475,-9.387533,-2.135259,-4.538891,-1.318741,5.705647,-0.584872,-9.120365,1.605129,-8.646193,7.638227,6.108644,2.618251,-5.438846,0.162086,-3.899590,0.466705,-5.041552,-1.602741,1.586164,-3.848384,6.014938,-0.402758,8.105599,5.121480,-1.113381,-6.445406,6.298916,-6.788363,2.436822,8.141187,1.679728,-3.464229,-5.842921,6.177656,8.701020,-1.732741,-3.732729,-0.039508,-7.148316,-8.721992,7.776243,0.316646,-5.089773,-2.071157,0.569108,0.107149,-9.606501,-9.578142,-4.911521,0.521805,9.682239,0.556495,-4.400065,8.588448,9.324324,1.387077,7.297591,2.108989,-4.838557,6.153065,7.326423,6.523822,-8.789368,0.994643,4.481134,-9.757382,-9.206182,-7.634171,-8.520179,-6.415663,0.263345,-0.561614,-7.446771,3.136106,6.137474,-5.375778,4.959371,4.854753,0.518160,8.674825,2.006984,5.706760,4.997072,-6.392321,-3.305711,8.190425,-1.523781,-2.372866,9.386833,7.508850,-2.399133,2.656080,9.202866,2.742613,5.956200,3.037800,-1.934646,3.990361,4.183211,9.679773,-4.488895,4.865478,-0.064193,2.878004,8.947863,4.286246,-0.872435,-3.235457,8.597220,-9.300466,-0.996340,0.739182,-8.630574,-2.116960,-5.638904,6.015445,-3.066393,9.054815,-5.066818,-1.962714,8.524871,4.969826,-8.599166,-2.435663,4.487954,9.464029,-3.686081,5.661506,8.217192,-3.098009,4.694584,-6.080527,0.376934,8.160325,-0.720766,5.775086,4.522014,6.769446,-9.866576,9.962643,-5.793619,4.913956,0.150996,3.680331,-8.186171,-0.876724,-5.306287,1.643786,-4.442223,5.626627,-1.677087,-4.154130,-8.208809,-0.915874,9.202581,-9.587591,-6.184123,6.157454,-5.024399,-2.797414,-8.891854,1.928107,7.613025,-8.627452,0.197476,-2.793613,9.221981,4.819436,-8.174708,-3.928362,1.488201,2.630016,1.047972,8.616856,6.201103,-0.762419,-6.811759,-4.387518,3.061544,8.950604,4.712078,-3.564395,-1.157408,-0.764387,1.798835,1.461590,7.712894,-8.559755,5.557256,9.947835,1.136037,-7.403304,2.139654,9.566558,-5.506901,2.685882,-9.363248,-6.952863,5.271405,9.675504,2.328530,7.201112,5.284157,2.042681,2.541216,-1.102782,2.762119,-7.597944,1.227682,0.917660,-0.127676,3.128261,-1.758759,7.607121,-1.689880,6.284021,0.985122,4.865083,-5.121474,4.516501,9.211793,8.513141,0.760274,4.967403,1.885823,-0.865745,0.094620,7.747837,5.311483,6.811774,7.458039,9.782115,3.624103,-3.841185,-0.470158,5.851123,8.897986,-7.462706,-7.700738,3.795530,-4.014018,7.762147,-0.336521,6.368796,8.651241,7.345481,1.605177,-2.819200,2.851232], dtype = "float32")#candidate|14200|(312,)|const|float32
call_14199 = relay.TupleGetItem(func_10072_call(relay.reshape(const_14200.astype('float32'), [312,])), 3)
call_14201 = relay.TupleGetItem(func_10074_call(relay.reshape(const_14200.astype('float32'), [312,])), 3)
func_10620_call = mod.get_global_var('func_10620')
func_10621_call = mutated_mod.get_global_var('func_10621')
call_14215 = func_10620_call()
call_14216 = func_10620_call()
output = relay.Tuple([call_14157,call_14175,call_14199,const_14200,call_14215,])
output2 = relay.Tuple([call_14158,call_14176,call_14201,const_14200,call_14216,])
func_14219 = relay.Function([], output)
mod['func_14219'] = func_14219
mod = relay.transform.InferType()(mod)
mutated_mod['func_14219'] = func_14219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14219_call = mutated_mod.get_global_var('func_14219')
call_14220 = func_14219_call()
output = call_14220
func_14221 = relay.Function([], output)
mutated_mod['func_14221'] = func_14221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13524_call = mod.get_global_var('func_13524')
func_13526_call = mutated_mod.get_global_var('func_13526')
call_14235 = relay.TupleGetItem(func_13524_call(), 0)
call_14236 = relay.TupleGetItem(func_13526_call(), 0)
output = relay.Tuple([call_14235,])
output2 = relay.Tuple([call_14236,])
func_14237 = relay.Function([], output)
mod['func_14237'] = func_14237
mod = relay.transform.InferType()(mod)
mutated_mod['func_14237'] = func_14237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14237_call = mutated_mod.get_global_var('func_14237')
call_14238 = func_14237_call()
output = call_14238
func_14239 = relay.Function([], output)
mutated_mod['func_14239'] = func_14239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12313_call = mod.get_global_var('func_12313')
func_12315_call = mutated_mod.get_global_var('func_12315')
call_14249 = relay.TupleGetItem(func_12313_call(), 0)
call_14250 = relay.TupleGetItem(func_12315_call(), 0)
output = call_14249
output2 = call_14250
func_14282 = relay.Function([], output)
mod['func_14282'] = func_14282
mod = relay.transform.InferType()(mod)
output = func_14282()
func_14283 = relay.Function([], output)
mutated_mod['func_14283'] = func_14283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10274_call = mod.get_global_var('func_10274')
func_10275_call = mutated_mod.get_global_var('func_10275')
call_14312 = relay.TupleGetItem(func_10274_call(), 0)
call_14313 = relay.TupleGetItem(func_10275_call(), 0)
func_12808_call = mod.get_global_var('func_12808')
func_12809_call = mutated_mod.get_global_var('func_12809')
call_14329 = relay.TupleGetItem(func_12808_call(), 1)
call_14330 = relay.TupleGetItem(func_12809_call(), 1)
uop_14334 = relay.erf(call_14329.astype('float32')) # shape=(3, 99)
uop_14336 = relay.erf(call_14330.astype('float32')) # shape=(3, 99)
func_12154_call = mod.get_global_var('func_12154')
func_12156_call = mutated_mod.get_global_var('func_12156')
const_14349 = relay.const([[6,-8,-4,-7,9,6,8,-3,4,6,-1,7,4,-9,-3,3,-8,2,-9,10,-10,4,-4,7,-10,-5,9,-10,-1,-4,-10,6,10,-2,6,-1,-10,8,-9,-3,-7,-10],[10,9,-7,-8,10,4,1,-2,-10,5,5,4,-8,5,-7,2,-2,-1,-4,5,4,-7,-5,-3,-10,-5,-4,1,7,-9,-8,2,-2,1,1,-1,5,-9,6,7,2,3],[10,8,-9,-10,10,10,-4,-9,5,9,9,-2,1,3,1,9,-1,9,-6,8,2,7,7,10,-7,3,10,-2,-3,6,10,-5,4,10,6,5,8,-3,-9,8,-3,-3],[4,-6,10,-3,5,3,6,1,-3,-10,-10,5,-8,-7,-4,6,8,7,1,-10,9,-8,-9,7,-7,3,9,-9,3,-8,8,4,-5,4,10,4,9,6,-3,10,-9,-7],[2,-5,-4,1,8,-8,6,-1,-7,-8,7,2,7,9,-6,-4,4,5,-6,-10,2,9,1,4,5,4,-6,-1,10,-10,-8,-7,6,8,8,6,7,8,3,8,6,9],[10,-6,4,7,10,4,-5,8,2,3,-7,-9,-5,-10,7,-4,3,-7,5,7,-1,-1,-5,10,-3,7,8,-2,-1,5,-4,-6,6,-4,-1,-6,1,-9,-6,-4,-5,-1],[-6,-5,7,-6,-8,10,10,-5,-4,-3,10,-1,-10,7,7,8,1,10,-5,1,-3,-7,4,1,-5,-2,6,-3,-2,4,10,-1,-7,-1,1,4,-4,6,3,5,-2,4]], dtype = "int64")#candidate|14349|(7, 42)|const|int64
call_14348 = relay.TupleGetItem(func_12154_call(relay.reshape(const_14349.astype('int64'), [294,])), 3)
call_14350 = relay.TupleGetItem(func_12156_call(relay.reshape(const_14349.astype('int64'), [294,])), 3)
uop_14351 = relay.acos(uop_14334.astype('float64')) # shape=(3, 99)
uop_14353 = relay.acos(uop_14336.astype('float64')) # shape=(3, 99)
func_11207_call = mod.get_global_var('func_11207')
func_11208_call = mutated_mod.get_global_var('func_11208')
call_14360 = relay.TupleGetItem(func_11207_call(), 1)
call_14361 = relay.TupleGetItem(func_11208_call(), 1)
output = relay.Tuple([call_14312,call_14348,const_14349,uop_14351,call_14360,])
output2 = relay.Tuple([call_14313,call_14350,const_14349,uop_14353,call_14361,])
func_14365 = relay.Function([], output)
mod['func_14365'] = func_14365
mod = relay.transform.InferType()(mod)
mutated_mod['func_14365'] = func_14365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14365_call = mutated_mod.get_global_var('func_14365')
call_14366 = func_14365_call()
output = call_14366
func_14367 = relay.Function([], output)
mutated_mod['func_14367'] = func_14367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10897_call = mod.get_global_var('func_10897')
func_10899_call = mutated_mod.get_global_var('func_10899')
call_14379 = func_10897_call()
call_14380 = func_10897_call()
output = call_14379
output2 = call_14380
func_14399 = relay.Function([], output)
mod['func_14399'] = func_14399
mod = relay.transform.InferType()(mod)
mutated_mod['func_14399'] = func_14399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14399_call = mutated_mod.get_global_var('func_14399')
call_14400 = func_14399_call()
output = call_14400
func_14401 = relay.Function([], output)
mutated_mod['func_14401'] = func_14401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12273_call = mod.get_global_var('func_12273')
func_12275_call = mutated_mod.get_global_var('func_12275')
call_14447 = relay.TupleGetItem(func_12273_call(), 0)
call_14448 = relay.TupleGetItem(func_12275_call(), 0)
output = relay.Tuple([call_14447,])
output2 = relay.Tuple([call_14448,])
func_14498 = relay.Function([], output)
mod['func_14498'] = func_14498
mod = relay.transform.InferType()(mod)
output = func_14498()
func_14499 = relay.Function([], output)
mutated_mod['func_14499'] = func_14499
mutated_mod = relay.transform.InferType()(mutated_mod)
const_14504 = relay.const(-9.456229, dtype = "float32")#candidate|14504|()|const|float32
var_14505 = relay.var("var_14505", dtype = "float32", shape = (1, 12, 8))#candidate|14505|(1, 12, 8)|var|float32
bop_14506 = relay.floor_mod(const_14504.astype('float32'), var_14505.astype('float32')) # shape=(1, 12, 8)
output = relay.Tuple([bop_14506,])
output2 = relay.Tuple([bop_14506,])
func_14529 = relay.Function([var_14505,], output)
mod['func_14529'] = func_14529
mod = relay.transform.InferType()(mod)
var_14530 = relay.var("var_14530", dtype = "float32", shape = (1, 12, 8))#candidate|14530|(1, 12, 8)|var|float32
output = func_14529(var_14530)
func_14531 = relay.Function([var_14530], output)
mutated_mod['func_14531'] = func_14531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9370_call = mod.get_global_var('func_9370')
func_9372_call = mutated_mod.get_global_var('func_9372')
call_14569 = func_9370_call()
call_14570 = func_9370_call()
output = call_14569
output2 = call_14570
func_14572 = relay.Function([], output)
mod['func_14572'] = func_14572
mod = relay.transform.InferType()(mod)
mutated_mod['func_14572'] = func_14572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14572_call = mutated_mod.get_global_var('func_14572')
call_14573 = func_14572_call()
output = call_14573
func_14574 = relay.Function([], output)
mutated_mod['func_14574'] = func_14574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8651_call = mod.get_global_var('func_8651')
func_8653_call = mutated_mod.get_global_var('func_8653')
call_14578 = func_8651_call()
call_14579 = func_8651_call()
func_13055_call = mod.get_global_var('func_13055')
func_13057_call = mutated_mod.get_global_var('func_13057')
call_14604 = func_13055_call()
call_14605 = func_13055_call()
func_11279_call = mod.get_global_var('func_11279')
func_11281_call = mutated_mod.get_global_var('func_11281')
call_14610 = relay.TupleGetItem(func_11279_call(), 1)
call_14611 = relay.TupleGetItem(func_11281_call(), 1)
output = relay.Tuple([call_14578,call_14604,call_14610,])
output2 = relay.Tuple([call_14579,call_14605,call_14611,])
func_14612 = relay.Function([], output)
mod['func_14612'] = func_14612
mod = relay.transform.InferType()(mod)
mutated_mod['func_14612'] = func_14612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14612_call = mutated_mod.get_global_var('func_14612')
call_14613 = func_14612_call()
output = call_14613
func_14614 = relay.Function([], output)
mutated_mod['func_14614'] = func_14614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10922_call = mod.get_global_var('func_10922')
func_10923_call = mutated_mod.get_global_var('func_10923')
call_14650 = relay.TupleGetItem(func_10922_call(), 0)
call_14651 = relay.TupleGetItem(func_10923_call(), 0)
output = call_14650
output2 = call_14651
func_14654 = relay.Function([], output)
mod['func_14654'] = func_14654
mod = relay.transform.InferType()(mod)
mutated_mod['func_14654'] = func_14654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14654_call = mutated_mod.get_global_var('func_14654')
call_14655 = func_14654_call()
output = call_14655
func_14656 = relay.Function([], output)
mutated_mod['func_14656'] = func_14656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11279_call = mod.get_global_var('func_11279')
func_11281_call = mutated_mod.get_global_var('func_11281')
call_14702 = relay.TupleGetItem(func_11279_call(), 2)
call_14703 = relay.TupleGetItem(func_11281_call(), 2)
output = call_14702
output2 = call_14703
func_14713 = relay.Function([], output)
mod['func_14713'] = func_14713
mod = relay.transform.InferType()(mod)
output = func_14713()
func_14714 = relay.Function([], output)
mutated_mod['func_14714'] = func_14714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14734 = relay.var("var_14734", dtype = "float32", shape = (16, 11, 14))#candidate|14734|(16, 11, 14)|var|float32
var_14735 = relay.var("var_14735", dtype = "float32", shape = (16, 11, 14))#candidate|14735|(16, 11, 14)|var|float32
bop_14736 = relay.power(var_14734.astype('float32'), relay.reshape(var_14735.astype('float32'), relay.shape_of(var_14734))) # shape=(16, 11, 14)
uop_14746 = relay.sqrt(bop_14736.astype('float32')) # shape=(16, 11, 14)
bop_14755 = relay.subtract(uop_14746.astype('int64'), relay.reshape(var_14734.astype('int64'), relay.shape_of(uop_14746))) # shape=(16, 11, 14)
uop_14767 = relay.atan(var_14734.astype('float64')) # shape=(16, 11, 14)
func_11478_call = mod.get_global_var('func_11478')
func_11479_call = mutated_mod.get_global_var('func_11479')
call_14771 = relay.TupleGetItem(func_11478_call(), 0)
call_14772 = relay.TupleGetItem(func_11479_call(), 0)
uop_14778 = relay.sin(uop_14767.astype('float64')) # shape=(16, 11, 14)
func_9317_call = mod.get_global_var('func_9317')
func_9319_call = mutated_mod.get_global_var('func_9319')
call_14781 = relay.TupleGetItem(func_9317_call(), 1)
call_14782 = relay.TupleGetItem(func_9319_call(), 1)
output = relay.Tuple([bop_14755,call_14771,uop_14778,call_14781,])
output2 = relay.Tuple([bop_14755,call_14772,uop_14778,call_14782,])
func_14786 = relay.Function([var_14734,var_14735,], output)
mod['func_14786'] = func_14786
mod = relay.transform.InferType()(mod)
mutated_mod['func_14786'] = func_14786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14786_call = mutated_mod.get_global_var('func_14786')
var_14788 = relay.var("var_14788", dtype = "float32", shape = (16, 11, 14))#candidate|14788|(16, 11, 14)|var|float32
var_14789 = relay.var("var_14789", dtype = "float32", shape = (16, 11, 14))#candidate|14789|(16, 11, 14)|var|float32
call_14787 = func_14786_call(var_14788,var_14789,)
output = call_14787
func_14790 = relay.Function([var_14788,var_14789,], output)
mutated_mod['func_14790'] = func_14790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14219_call = mod.get_global_var('func_14219')
func_14221_call = mutated_mod.get_global_var('func_14221')
call_14806 = relay.TupleGetItem(func_14219_call(), 2)
call_14807 = relay.TupleGetItem(func_14221_call(), 2)
output = relay.Tuple([call_14806,])
output2 = relay.Tuple([call_14807,])
func_14809 = relay.Function([], output)
mod['func_14809'] = func_14809
mod = relay.transform.InferType()(mod)
mutated_mod['func_14809'] = func_14809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14809_call = mutated_mod.get_global_var('func_14809')
call_14810 = func_14809_call()
output = call_14810
func_14811 = relay.Function([], output)
mutated_mod['func_14811'] = func_14811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11079_call = mod.get_global_var('func_11079')
func_11081_call = mutated_mod.get_global_var('func_11081')
call_14828 = relay.TupleGetItem(func_11079_call(), 0)
call_14829 = relay.TupleGetItem(func_11081_call(), 0)
output = call_14828
output2 = call_14829
func_14830 = relay.Function([], output)
mod['func_14830'] = func_14830
mod = relay.transform.InferType()(mod)
output = func_14830()
func_14831 = relay.Function([], output)
mutated_mod['func_14831'] = func_14831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11079_call = mod.get_global_var('func_11079')
func_11081_call = mutated_mod.get_global_var('func_11081')
call_14852 = relay.TupleGetItem(func_11079_call(), 0)
call_14853 = relay.TupleGetItem(func_11081_call(), 0)
func_14786_call = mod.get_global_var('func_14786')
func_14790_call = mutated_mod.get_global_var('func_14790')
var_14870 = relay.var("var_14870", dtype = "float32", shape = (616, 4))#candidate|14870|(616, 4)|var|float32
call_14869 = relay.TupleGetItem(func_14786_call(relay.reshape(var_14870.astype('float32'), [16, 11, 14]), relay.reshape(var_14870.astype('float32'), [16, 11, 14]), ), 0)
call_14871 = relay.TupleGetItem(func_14790_call(relay.reshape(var_14870.astype('float32'), [16, 11, 14]), relay.reshape(var_14870.astype('float32'), [16, 11, 14]), ), 0)
func_8800_call = mod.get_global_var('func_8800')
func_8802_call = mutated_mod.get_global_var('func_8802')
call_14884 = func_8800_call()
call_14885 = func_8800_call()
output = relay.Tuple([call_14852,call_14869,var_14870,call_14884,])
output2 = relay.Tuple([call_14853,call_14871,var_14870,call_14885,])
func_14892 = relay.Function([var_14870,], output)
mod['func_14892'] = func_14892
mod = relay.transform.InferType()(mod)
var_14893 = relay.var("var_14893", dtype = "float32", shape = (616, 4))#candidate|14893|(616, 4)|var|float32
output = func_14892(var_14893)
func_14894 = relay.Function([var_14893], output)
mutated_mod['func_14894'] = func_14894
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14961 = relay.var("var_14961", dtype = "float64", shape = (1, 11, 7))#candidate|14961|(1, 11, 7)|var|float64
uop_14962 = relay.cos(var_14961.astype('float64')) # shape=(1, 11, 7)
output = uop_14962
output2 = uop_14962
func_14966 = relay.Function([var_14961,], output)
mod['func_14966'] = func_14966
mod = relay.transform.InferType()(mod)
var_14967 = relay.var("var_14967", dtype = "float64", shape = (1, 11, 7))#candidate|14967|(1, 11, 7)|var|float64
output = func_14966(var_14967)
func_14968 = relay.Function([var_14967], output)
mutated_mod['func_14968'] = func_14968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14830_call = mod.get_global_var('func_14830')
func_14831_call = mutated_mod.get_global_var('func_14831')
call_14994 = func_14830_call()
call_14995 = func_14830_call()
output = call_14994
output2 = call_14995
func_14999 = relay.Function([], output)
mod['func_14999'] = func_14999
mod = relay.transform.InferType()(mod)
output = func_14999()
func_15000 = relay.Function([], output)
mutated_mod['func_15000'] = func_15000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14365_call = mod.get_global_var('func_14365')
func_14367_call = mutated_mod.get_global_var('func_14367')
call_15008 = relay.TupleGetItem(func_14365_call(), 1)
call_15009 = relay.TupleGetItem(func_14367_call(), 1)
func_5419_call = mod.get_global_var('func_5419')
func_5421_call = mutated_mod.get_global_var('func_5421')
const_15013 = relay.const([5.699524,-9.330575,6.090990,-4.259464,6.653893,-4.104769,5.815573,8.177837,-1.093902,9.973644,9.752576,-4.588080,-8.464008,2.526619,-2.102039,-8.468958,6.989350,-5.393209,-9.111486,-8.510091,2.806944,-8.732952,3.879894,-7.247023,-2.519720,-7.790230,5.359768,3.601125,-0.590218,6.045377,-4.793100,-3.881257,-1.422739,-5.629673,4.849773,-1.416353,1.295333,5.915641,-9.194085,2.758734,-8.204486,-9.991253,-4.391776,5.416125,7.380385,2.095634,-1.274608,7.153682,-2.402329,8.136251,-7.426459,9.809536,-4.861936,-1.134006,-6.281399,-0.859423,-0.600564,-0.196465,-0.829267,6.873370,-5.528728,0.433232,-6.969753,6.442168,1.738144,-0.249995,-2.575546,8.151510,0.105119,-9.136197,6.100527,-7.534755,5.733776,3.539545,-6.235188,9.053988,5.816203,-1.707537,2.293262,7.974881,-0.732998,-6.469351,2.839427,-5.765366,-0.726813,-9.230861,8.451746,2.378525,-2.390880,-0.879642,2.283850,6.214698,1.646977,-9.858030,-7.449360,7.749564,3.386973,8.977184,4.795227,2.882738,-3.405069,-6.446274,-5.778722,5.099033,-4.318464,-5.854227,0.843966,-6.028015,5.224326,-9.859315,-2.457622,-6.738548,1.256301,-7.045315,8.879605,-7.893425,-3.006704,4.184623,-0.868790,4.965550,5.199760,-8.130757,1.170262,8.724779,5.931907,-2.256080,7.077614,-1.441044,7.285555,8.301192,-0.319232,-4.389260,-3.548899,-3.187816,-7.620536,5.499487,3.635188,4.313248,8.587198,5.337259,-8.813791,-1.441266,-8.925355,-9.604963,-0.108995,2.881901,-4.250559,3.741631,4.908063,4.455827,3.643053,5.451493,0.334348,7.184614,9.228526,2.819659,5.656281,2.963657,-2.105889,7.623023,-2.737645,-2.939305,-3.715040,5.488527,4.225267,-6.013780,-9.789592,9.512727,-7.336110,-6.564135,8.680120,1.234441,0.990913,-8.168789,-9.800464,-1.539066,-0.462425,9.965204,-2.368740,3.556322,-6.082100,-0.553140,1.134911,-7.457927,0.400490,-8.044109,-7.849340,7.799807,-3.488505,-0.234652,4.895295,8.083812,6.680023,-0.498081,-3.071817,7.177774,5.165740,3.739002,0.085709,-8.385967,-1.886796,8.110060,-5.326100,-5.687482,-8.138818,-7.203633,-6.167125,-2.288567,-2.938113,0.068360,-5.787605,1.107616,9.242668,-5.198489,-4.134707,2.129478,7.996446,-8.795531,0.086651,0.128907,2.809084,6.648941,3.625404,8.852450,-5.323081,-2.145499,9.207764,2.866847,-4.517864,5.816869,-5.024815,9.402832,2.754345,-3.660496,8.936580,-4.957845,9.416342,-6.022637,2.615152,-6.067144,-9.941145,-7.053866,7.906607,-8.829033,-5.894948,-0.328973,-2.366917,-5.095631,6.884660,-6.877214,-9.543102,4.539095,-4.435684,7.947500,0.508943,-4.927285,-2.481190,5.312376,-1.494508,-1.963015,1.493674,8.896096,-3.039188,7.931930,-6.257804,-9.244715,5.476655,-6.093936,1.179457,9.146292,-5.240650,2.964212,7.943019,-8.986047,-4.482705,-1.624789,4.313782,-1.819338,2.688981,-4.486387,4.968550,6.449501,-8.504452,2.397120,6.386427,4.217395,-4.089527,-6.787303,5.507696,2.164649,6.472466,-1.641249,7.728171,4.423130,-5.138261,1.110949,-4.763760,-6.460326,-3.972310,4.512598,1.535158,9.411281,2.758008,6.028424,-5.465155,-7.588160,-8.072879,9.907053,8.463765,-4.721142,-6.043270,-0.541802,-6.976995,9.394469,-3.072469,-0.028887,4.849656,5.365588,-3.494331,-7.021172,5.656664,-0.292411,0.162502,0.686557,-3.238616,-6.054028,2.165602,-7.522922,-6.576637,7.457550,-1.154843,-6.667284,3.401240,-4.323393,-2.514669,6.343610,8.776348,5.130998,4.617746,-2.488894,-4.742993,-7.105027,5.628445,-7.051539,-3.638821,-6.293399,6.896361,4.153303,-5.999952,-3.469966,-5.963613,-0.495730,-3.139683,-7.954199,-0.738209,8.638252,7.996129,7.384466,-6.367488,-7.591440,8.775240,2.981331,7.189009,5.267158,-5.732657,-7.602000,1.977625,8.865045,-9.166355,4.422353,-2.486300,-8.520080,-6.472858,-5.344410,0.261630,-2.773119,2.539693,9.435956,-6.963556,-4.833117,9.733719,6.270203,3.971365,-4.501777,-5.675556,-1.406528,-7.852401,-3.733233,-4.547031,-0.095506,-6.134167,-1.867953,-7.727076,-1.549006,5.413114,-6.826602,-5.310178,2.728496,-3.457981,2.744707,-8.830630,3.542073,-3.087991,4.520161,-1.127909,-4.690751,-2.688987,-7.899547,7.917260,3.777824,3.401003,9.621471,5.038841,5.160191,-7.899370,-7.511661,-3.531221,6.284037,-8.915279,-3.449423,-3.487444,6.078969,4.330955,-8.030660,-3.109706,4.481634,6.198848,9.356963,-8.861801,-4.471040,-3.949577,7.037961,-2.028864,0.533686,2.641779,7.209899,6.553765,2.301413,-2.823478,9.513536,3.012211,-7.380058,8.852729,-4.242058,-3.143898,-3.974397,4.843774,2.419568,-9.091010,-4.895466,-5.738201,-7.822050,-0.561350,1.435583,8.884051,-8.113594,9.331362,3.957442,-8.002151,-2.878609,-2.744828,0.440960,-4.120353,9.046396,-6.530714,0.742434,9.740929,-6.012823,2.963053,-4.348450,-8.081367,3.148405,0.302356,-7.039625,-7.461855,-0.601091,5.218041,7.387017,-2.089953,-4.744756,-9.832083,-9.730144,9.669461,-3.410123,-6.772153,3.443761,4.726198,-4.049117,5.901450,-1.949412,-6.904796,-8.451399,7.703222,9.060110,-0.004169,-1.250233,3.867858,-4.266167,3.112863,6.698367,2.800927,-5.914123,-0.456131,7.897378,3.560092,1.101994,-7.587528,8.972228,5.178065,-0.768426,-9.861816,9.781883,7.366730,3.655581,-5.692693,-3.815935,7.854807,-4.903558,0.120426,-0.805025,2.792886,-2.960234,6.061956,6.351426,9.994827,5.486112,-1.315740,0.760580,-5.112232,-9.453900,-9.798012,6.611625,2.060761,0.616536,4.590900,1.069950,2.745849,6.968783,9.134538,-4.919806,-5.899961,7.039741,-4.416701,-2.861671,9.772329,5.343698,7.979278,9.814432,-0.242440,8.296718,-1.023601,-1.207554,5.876621,1.335553,9.243807,5.043170,0.211610,-9.373252,8.515022,-3.290515,-6.611526,-1.675150,-7.431977,-6.474232,-5.518009,9.823155,0.821989,7.401080,1.527213,5.557054,-8.362123,-0.002687,1.317380,4.834882,9.337297,2.713558,2.153730,7.062371,-3.572347,-9.170061,7.132533,3.615248,5.234804,3.779778,5.251231,7.767761,5.709714,6.121570,8.397209,-0.027055,0.327216,-5.458691,2.968600,-3.766897,8.881882,8.825259,-5.310089,1.925616,9.332069,-2.746573,-0.894296,-2.828004,9.759132,-0.255142,-8.933611,1.364268,8.564403,-6.626189,6.959107,-8.541856,2.553768,-2.986979,-5.822084,3.597974,-4.416646,9.343188,-6.700347,2.881868,7.097231,-5.177816,-7.477626,1.869043,1.331617,-8.514952,5.953921,9.229262,-2.824293,-4.223893,-9.643421,-6.864951,-9.800610,5.737115,2.462431,-3.785416,-3.349348,-9.655364,9.269026,-9.147421,4.694893,9.586119,9.816372,9.833180,-7.051205,5.215294,-8.615485,-1.596235,6.835903,8.807354,-6.753528,4.294627,-4.704913,7.134990,-8.475371,-0.656023,-0.507831,-9.876400,-2.215532,-4.703197,8.564251,9.526600,8.739015,-1.615453,1.277967,-5.810182,-5.722928,3.296614,2.253061,-0.853165,-8.394207,-2.792699,-6.109067,5.281729,-3.278085,-7.424175,3.042183,1.126022,4.986064,4.417125,9.907606,-3.252161,0.663614,-0.126817,-6.453430,-7.038832,2.798562,6.180994,7.558686,6.912637,-2.520737,-3.503911,7.631956,2.989681,6.176222,-1.790535,-3.867687,-7.276850,-1.272408,-1.228553,2.857978,3.297982,3.024442,7.495072,1.239957,3.342034,-3.686474,6.691552,4.820464,-4.349372,4.801431,-7.908362,2.836755,-2.360116,0.115827,-3.243330,4.911884,-6.228185,-6.514585,-6.058241,-2.123390,-2.342411,7.351941,-2.084478,-0.051688,7.015314,3.205860,2.298420,6.539590,-8.054719,-2.837890,8.659862,3.251295,2.901089,7.104532,2.131061,5.381864,-3.965991,-6.010798,5.482602,2.322609,-3.179480,-8.653103,3.696381,2.520148,9.548370,-9.214676,-0.356988,-0.462711,-2.975520,8.077292,5.781311,5.445550,6.522438,-2.756350,-8.078252,9.469764,9.736492,-7.429145,0.762924,-2.670873,9.624548,-4.280403,-1.980187,7.874979,-9.898104,2.869257,6.157780,-5.448533,-1.019144,-0.061388,-0.248002,6.939363,1.146354,4.266910,-7.002173,1.135136,-0.951031,9.049886,-7.015965,3.029597,6.553273,-7.673948,4.464000,4.176258,-9.964982,-5.962397,2.148968,-3.672918,0.910980,-6.558431,7.236298,-2.482472,2.241985,3.791618,-0.625840,-5.147658,9.665517,8.862037,4.168017,-0.319779,-4.207226,7.644451,-2.052186,-5.060754,0.725734,4.702668,7.062073,-0.215684,8.784620,-7.378115,7.437475,8.371916,-7.751547,1.655612,4.332653,3.275214,5.876197,-2.535132,-6.237756,9.928377,2.204999,-1.132520,-2.253478,4.688198,-6.254547,-3.722117,-2.759377,-2.484813,-3.812879,2.444290,9.349422,6.963180,7.111526,3.722850,-8.866336,5.742784,6.628106,-2.547804,-5.099039,-4.689723,-3.518821,-0.400738,-2.459948,1.579212,7.761983,6.070494,7.862848,1.049613,-8.226660,-9.986854,4.493619,-7.992244,7.845441,9.752165,-9.023015,5.698972,-4.655640,7.665330,-0.995811,4.457762,8.917117,6.131060,4.446104,4.720981,9.943100,-2.177207,0.168519,8.634685,-9.926443,1.618835,-6.886014,9.732128,-6.839770,-9.065834,2.361218,-8.246712,-3.313983,3.405456,-1.943906,2.734172,-6.473280,7.942721,-7.353475,-7.148368,2.772558,1.815889,-4.197586,-7.194246,8.661972,-3.885450,-0.191464,-5.581523,-9.730591,-1.338310,-9.240810,-6.067934,4.259350,6.235462,-8.639356,-8.501842,1.767182,-7.060374,-3.313241,-7.598391,2.644450,-8.709755,-7.183127,-2.482825,-3.053559,9.850225,-8.946336,3.068480,3.983817,0.059718,1.239088,1.920363,8.748279,-8.383602,-0.073241,4.034373,2.852351,0.780533,-7.830951,-0.082478,-1.829878,-0.283646,7.341055,1.368550,-5.425704,3.770761,-8.858322,-9.586289,-2.972654,-9.889135,5.156867,-1.732972,5.622193,-0.349885,3.635703,3.150448,0.953512,-1.173681,0.953479,3.210677,-4.198280,9.186062,-9.886449,-5.336781,2.448325,6.661046,-8.275917,3.009093,-8.685436,-0.534422,2.462328,9.312359,1.875698,8.485746,0.880564,-0.929227,4.809156,5.514624,5.387959,-4.137397,-9.122537,0.968397,4.999083,-4.540770,2.818130,3.103916,-4.153471,7.919446,-1.354177,0.603857,6.335681,8.743184,5.975771,-3.225965,-3.019230,0.296411,0.873454,-3.964953,-5.296809,-2.660469,8.018207,-1.342038,-1.874774,8.705357,-2.147516,9.366740,-7.954181,1.701701,6.460405,-0.880200,-1.252220,-2.593307,-0.587833,3.587003,6.820657,-7.313416,7.953169,4.349436,-5.118609,0.140092,4.546257,5.711582,1.525473,4.810669,-1.121804,2.303757,-3.168141,-7.202138,-9.497349,8.740166,8.146337,-1.260764,-0.216884,7.559276,-7.912789,6.232527,2.121418,1.515207,3.205699,0.818936,-9.277776,5.627458,-4.912964,3.444082,5.875753,-0.514415,0.742654,3.956208,-8.319370,-7.972158,1.540343,-5.479315,-0.928078,-4.996503,1.389875,-4.743703,-9.803422,-9.232892,9.880417,0.194771,-4.583576,-0.696589,-9.605873,8.162026,-5.558216,2.033994,0.450925,-2.109181,0.874115,-2.785239,-3.144307,-2.817028,-2.773771,3.869335,-0.359054,-6.053260,-0.667900,-4.845888,-8.275965,-1.360875,-9.446943,7.879741,2.645183,5.915703,-2.121443,6.993940,-8.879002,4.411752,-3.169399,9.047076,1.164484,3.484281,-8.403974,-3.939579,5.650408,6.562480,-8.012415,-2.007060,-2.779373,-6.847181,2.184646,5.617602,4.991113,-4.105271,3.415811,-2.846101,5.215444,-6.023573,-1.573613,-6.895887,0.414194,5.916302,-6.635168,-8.175083,0.694518,5.419427,-2.343035,8.112415,9.609855,-5.289309,5.734840,6.594974,-4.237277,-6.359199,-2.348633,9.643164,-5.321660,9.273048,-0.406967,2.239486,-9.350847,-3.758503,7.460165,-6.437983,6.978057,8.740124,-9.563457,2.730365,-2.014572,4.617082,-7.925376,2.317765,3.615818,-7.305047,-9.843790,5.622649,-8.579980,6.974974,6.195400,5.118200,-8.922802,1.593936,7.873332,-4.717117,-2.952306,5.707112,-8.281459,2.184771,5.597013,2.728438,7.877167,6.481030,-2.160640,3.290209,-8.578554,-6.921504,5.801809,7.313971,-8.957127,5.643738,0.035613,2.067703,7.100866,0.426546,-8.059418,-1.181675,-9.231992,-7.837123,-6.764486,-1.154493,-6.166921,-9.784312,5.418296,-8.475796,2.849315,-0.413145,-7.223545,-4.228924,3.600261,3.092797,-4.807623,4.888824,0.903793,1.641216,-9.936729,-2.351055,-6.815369,-9.079411,2.151893,8.532611,-9.345275,4.117951,0.490060,-4.248015,-3.993336,4.174984,9.645608,5.272307,-2.667620,0.341300,-7.056429,3.003778,-7.232804,-3.657661,-5.692883,-5.241904,-0.429884,-2.505739,9.991024,-7.065001,-4.130025,-0.751484,-4.205083,-0.155637,-5.057434,9.749919,6.298882,7.892889,6.608316,3.003906,4.717657,-2.663349,-9.028855,4.688025,-8.624041,6.140637,2.221079,-2.059721,5.598355,-4.056364,-6.459498,-3.047888,-4.744398,2.145138,-5.464916,-7.573469,-5.849785,2.381657,5.516787,-5.551887,-4.352782,-0.980701,2.997340,2.217589,2.400263,-5.956249,-9.847626,4.273817,-0.237992,-7.253810,-3.802456,-2.278277,6.659046,5.337453,6.441462,-3.629029,2.690165,9.255203,-0.109562,0.456680,0.996054,7.625515,-6.490366,-7.818119,-5.897855,7.019465,0.999399,4.625390,9.103376,5.423313,6.478994,-3.298306,-1.933307,4.034770,0.675411,-2.200131,2.569885,-9.722001,1.365632,-9.510653,4.505647,-5.479138,-1.640428,1.899212,-1.600417,-2.094955,7.146132,-1.476219,-6.339636,-2.848404,-5.419390,-3.800596,-1.157162,9.421453,-7.763334,6.169586,-5.339354,-8.553472,-6.044417,-3.367162,0.824089,-9.076863,-0.352811,-5.295967,-3.499777,-1.484901,-2.061005,-1.642592,2.202988,-7.480893,-1.119290,3.230059,7.051089,3.546281,8.680325,-7.706066,-1.378240,8.733942,0.412699,1.055504,-6.204452,-4.454507,9.111711,-4.642531,-9.350605,-9.993749,-6.555163,8.999937,6.855810,9.238866,8.189408,1.746282,-1.728344,-7.967290,9.004426,-5.268843,1.521316,-3.268586,9.903528,1.152003,2.867509,-9.896725,6.481758,0.141557,-0.283624,4.103490,-1.455768,0.845108,-9.679353,-6.595186,-1.904603,2.137113,4.277794,-7.573507,-2.746066,-6.795036,2.919768,-9.645366,8.328319,1.996062,-1.472288,8.601372,-6.130629,-5.825147,-0.143117,-8.950795,8.259836,-8.087227,9.660535,8.120363,-7.118211,5.983067,5.028960,-9.852165,5.357081,-4.563808,-4.661432,-2.365558,1.446620,4.085355,1.064742,-1.123249,-2.728023,4.010943,0.149615,7.785950,-7.235542,8.593517,-8.961640,-9.586141,1.428213,-3.970324,-6.389648,-4.367964,8.712168,6.441282,6.404792,1.227740,-1.567744,3.230653,5.331607,2.151159,3.331275,6.528165,-4.224040,0.125194,7.337689,-9.354626,-4.882659,9.699850,-7.736912,-3.296793,-9.547181,0.503714,-9.259933,-9.593939,-2.689310,-5.654147,-8.226570,7.695280,7.901212,-6.920525,-7.707086,9.208379,-5.105419,-2.394376,7.227915,-7.741563,-6.529196,2.911961,3.224900,0.236749,0.029059,1.267989,1.023923,4.643039,-5.604545,6.808408,-2.505151,1.731539,7.093183,4.076322,7.914435,-6.520102,-3.580280,-9.894612,5.399395,9.103152,8.091967,-5.340797,3.958322,-9.475457,-7.813155,8.720420,-6.173285,1.259148,-8.519648,-0.209115,-1.728360,-2.284016,-7.425770,-7.447257,-2.277055,5.806011,0.915363,-8.186350,4.537838,-5.902448,9.487545,-0.460797,-3.451831,8.795253,-5.419023,-9.183108,9.738726,0.139829,-4.296353,8.805227,0.136795,-2.612565,5.316473,-0.786576,6.075031,-0.913891,-2.285625,-1.898439,-9.188180,2.477292,-6.905231,6.531074,-1.003212,1.313999,0.749453,6.918281,5.273518,3.515749,2.764936,4.163857,-2.756122,5.854366,-5.974993,1.754568,5.921187,-5.370051,9.771295,5.553546,-9.992579,-0.086592,-9.390796,2.357682,0.358327,-1.887915,-6.058757,-8.256390,2.236290,2.314722,1.834265,-6.589996,3.385344,-5.647581,-2.701591,6.808294,9.593913,-6.612543,3.912741,2.806194,-0.395170,6.921183,-1.002395,6.455356,5.247490,2.415092,-5.103170,-3.996398,-8.732830,-5.417400,-1.162873,-3.634695,3.092895,2.496085,-0.644049,6.597020,-0.859048,3.441473,-4.228532,-8.445409,3.704256,8.045463,0.314153,6.940756,-3.365423,3.273312,5.050531,-5.005688,-8.477607,-9.575298,1.370568,-4.649243,-2.089754,-8.514219,-9.092684,8.897987,-5.813243,2.894993,-9.993402,-8.616344,-0.748896,4.773443,0.281664,-2.852657,-9.828626,-6.617797,5.036234,1.054800,-1.337697,-6.160669,9.550223,-5.221458,-4.810202,3.875538,-1.953810,-9.317875,5.747970,5.499834,9.730809,4.642977,-3.466858,9.617747,-5.853928,9.997340,-1.059516,3.750790,5.832558,-1.896102,-7.411305,-5.328577,3.825121,5.364293,7.405523,3.823080,0.651456,-9.673496,-5.645028,7.187510,-4.324172,7.325202,-3.168582,-5.378256,-4.939942,-6.774883,9.802340,1.608005,2.084786,1.754971,2.832715,4.351356,7.746710,-9.458829,-2.462778,-5.052907,5.190845,7.717607,0.143592,0.319336,-4.832034,-3.974932,4.623651,-7.505701,-6.805265,4.768598,-3.689134,-8.883095,-3.513653,0.080996,-0.469120,4.508914,9.067068,-0.868723,5.386482,-1.133162,1.305361,6.763333,7.044636,1.604567,8.165383,9.422139,0.726437,-7.079273,1.733637,-6.534674,2.817142,1.579428,4.845624,7.552482,5.238232,-2.512805,-0.395819,3.907788,-5.115277,-7.045474,5.452049,3.835063,7.504555,-6.293582,-4.811394,0.283215,4.686392,-0.762334,-2.345121,3.998825,-8.323178,-9.287757,0.139376,-3.890529,-6.569842,9.194414,-2.001633,-6.125388,-0.375218,-2.852828,-3.907988,1.795519,-7.748816,-9.713105,5.556079,4.893848,6.802818,6.120784,8.195014,-3.355008,-0.281008,-6.631831,7.270085,-3.941841,9.393110,-9.310116,-7.245480,3.538839,5.001314,8.374491,7.383858], dtype = "float64")#candidate|15013|(1694,)|const|float64
call_15012 = relay.TupleGetItem(func_5419_call(relay.reshape(const_15013.astype('float64'), [11, 14, 11])), 0)
call_15014 = relay.TupleGetItem(func_5421_call(relay.reshape(const_15013.astype('float64'), [11, 14, 11])), 0)
output = relay.Tuple([call_15008,call_15012,const_15013,])
output2 = relay.Tuple([call_15009,call_15014,const_15013,])
func_15018 = relay.Function([], output)
mod['func_15018'] = func_15018
mod = relay.transform.InferType()(mod)
output = func_15018()
func_15019 = relay.Function([], output)
mutated_mod['func_15019'] = func_15019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14809_call = mod.get_global_var('func_14809')
func_14811_call = mutated_mod.get_global_var('func_14811')
call_15032 = relay.TupleGetItem(func_14809_call(), 0)
call_15033 = relay.TupleGetItem(func_14811_call(), 0)
func_16_call = mod.get_global_var('func_16')
func_19_call = mutated_mod.get_global_var('func_19')
var_15039 = relay.var("var_15039", dtype = "float32", shape = (540,))#candidate|15039|(540,)|var|float32
call_15038 = relay.TupleGetItem(func_16_call(relay.reshape(var_15039.astype('float32'), [15, 4, 9])), 0)
call_15040 = relay.TupleGetItem(func_19_call(relay.reshape(var_15039.astype('float32'), [15, 4, 9])), 0)
func_14809_call = mod.get_global_var('func_14809')
func_14811_call = mutated_mod.get_global_var('func_14811')
call_15049 = relay.TupleGetItem(func_14809_call(), 0)
call_15050 = relay.TupleGetItem(func_14811_call(), 0)
func_14892_call = mod.get_global_var('func_14892')
func_14894_call = mutated_mod.get_global_var('func_14894')
const_15063 = relay.const([7.692086,1.174228,1.293363,-7.400325,-3.075938,3.735055,-5.373770,9.327913,-2.669670,1.463254,7.069518,-3.645113,-7.787412,2.109324,-6.014684,-3.236829,-9.311678,-6.520657,-7.620140,0.183945,4.754128,-5.086147,-5.311405,-1.112952,-4.266599,0.674847,-4.278012,-9.290431,4.836841,6.205115,-9.890028,4.426737,7.435268,4.831786,-5.369255,-4.886418,6.410746,8.737319,0.726986,9.394555,-3.912322,1.120377,-3.354902,8.825788,7.360535,-9.725188,-2.931494,-7.109922,8.016187,5.458152,0.058881,-5.945957,-5.959825,-1.801660,7.824233,-7.190887,-2.278674,9.775743,4.281188,-8.553721,0.467748,4.401831,-4.688667,9.795111,9.505834,-7.564268,-4.466158,4.764633,-3.761638,-9.445178,7.638742,2.744417,-5.611218,0.903184,3.030025,8.778797,-0.393335,-5.751128,-4.894717,-6.600043,-0.466520,-1.366075,3.113176,-1.924585,-1.576534,-6.695770,5.740203,1.848422,-1.357112,3.738204,3.371774,-2.894963,7.253326,-7.940063,-5.274311,7.298490,9.227725,3.982722,-7.885081,1.493748,9.646743,-8.331950,1.811098,-4.700985,-1.342848,-0.841958,-6.584940,9.000470,1.463717,-9.942864,7.242051,6.081370,1.694675,3.772680,-7.338346,-7.288591,-2.393464,-0.368516,8.099270,7.929921,-8.151277,9.180653,-1.733402,3.989471,-6.907296,5.065187,0.433978,6.698396,-2.071446,-6.145531,2.195087,-1.108805,-8.783499,8.946175,9.174340,1.468398,-5.213459,3.751021,-4.989934,8.434205,-3.924492,-9.194099,4.938074,-1.305256,-6.197773,-3.223227,-5.610225,-2.256450,4.172340,-8.550506,-6.374530,-3.042378,-5.035860,-2.771166,-5.537926,2.928777,-2.075727,5.114697,0.608995,1.244783,-2.356604,5.697956,-7.338527,0.752794,-4.811895,6.818353,-4.655989,8.545871,2.191364,5.603297,8.577352,-7.603271,-9.083346,9.079417,1.829295,7.429250,-7.986105,-2.011665,-1.740065,-2.671153,0.225857,-2.985674,-3.213500,-9.629321,3.006638,7.839077,6.981952,-8.595077,4.099831,6.463214,5.903861,6.826692,-1.216147,-2.867523,6.937857,8.240408,-4.267341,-0.437539,0.221824,-6.876918,-9.968280,-3.441917,4.235961,7.147789,-4.482440,-3.110842,-4.970267,-7.377537,5.221037,0.939756,1.800688,-4.923659,-9.799076,-7.749020,7.860666,-1.598309,1.938459,9.082973,-1.192350,1.777537,-2.167785,-3.735890,2.482034,2.718793,3.061705,-3.975974,2.435543,9.319241,7.908898,0.195375,-4.650977,4.754987,-6.595162,6.505563,9.066220,-9.240517,-7.475963,-9.599923,9.660797,-8.023526,1.372399,3.185180,6.670494,-1.842448,5.356314,-9.393740,-6.587732,5.312641,-6.881815,6.407813,0.586519,6.931047,-2.971477,-7.710178,4.983965,-2.771288,7.836637,0.239571,-5.739482,0.631423,-4.817075,-9.510947,1.558913,7.304252,-0.102400,-3.116746,-6.431089,1.449559,3.808676,-9.593702,-0.682012,6.079703,8.493425,8.110287,2.593569,1.762445,-0.618383,-0.924681,4.133603,9.680185,-7.937494,7.954156,-4.218265,1.514657,-2.210173,-4.251231,-5.533392,-7.545341,5.578230,-0.155253,0.374227,-3.803641,6.515287,9.459253,-3.845985,-7.397722,-7.809242,-2.009805,-4.961426,6.612068,0.017323,8.217586,6.389729,5.660618,8.306863,8.789804,5.535849,-0.241339,-1.432912,7.690917,3.447842,6.373280,-4.827902,-6.810636,9.472980,1.747201,1.066602,6.346738,3.305268,8.051207,-8.811366,8.065187,-7.412380,-5.144724,5.832188,-2.192462,2.508754,9.326302,8.898291,-1.960562,5.845973,9.647997,-6.675785,4.128457,-1.707706,5.593284,-0.990643,-2.186727,-5.518003,6.003614,1.014494,-0.763269,-3.959115,-3.283583,4.306179,-3.834248,-5.517615,-1.324384,-2.385313,-5.252912,-8.944432,7.219274,-6.258800,-6.176588,-3.911347,6.017139,1.936173,-7.966806,3.054086,0.983444,7.603662,7.827547,3.652589,0.711205,5.738893,-5.692154,2.091559,-4.026697,-8.797400,-7.129990,2.510636,-9.326933,-4.757762,-2.311605,3.829340,-7.559598,6.015793,-0.387837,9.097383,3.112339,-3.544442,5.130577,4.826977,1.997235,-5.328613,1.097431,4.846510,-0.363409,-5.672357,5.601514,-4.172292,4.857599,8.373013,-9.474638,0.406833,-6.658676,-4.920958,9.900356,3.745001,9.194621,-0.315214,0.294365,-7.611975,1.430068,-0.348454,-4.217478,1.942095,6.766199,0.810960,0.108072,9.712722,-8.400016,2.682726,4.995147,6.086752,-9.239748,1.857796,2.910912,7.240706,7.298850,-3.459351,-8.579934,1.432126,-9.251918,-1.036878,2.648781,0.683235,1.281814,3.255937,-7.081395,1.701091,-3.911003,-5.065693,-7.615365,9.038378,-7.645913,3.543036,4.416626,-9.783404,1.768090,3.208793,-0.229976,7.823033,-1.810377,-8.436001,4.965401,0.257372,6.044437,0.137693,-5.606332,4.213397,-3.475542,2.114404,7.191260,-9.524611,-4.361289,9.253920,-2.668808,-9.112617,9.539992,5.749935,-4.313961,-1.458100,0.621395,1.939077,-5.460780,-2.516637,6.198473,-4.171064,5.539605,-7.781850,6.694255,-0.724205,-2.673850,-2.672629,8.943071,-6.788333,-6.957946,2.811588,-4.350431,0.468923,7.398519,-1.747406,-3.267448,0.936143,7.877348,2.136526,4.722241,-7.466287,9.274482,6.843048,7.247554,-5.676924,4.798191,1.252725,0.468256,-8.696415,-6.931044,5.738020,-0.921959,-2.280103,-2.516882,-2.047997,5.510831,6.153287,0.678225,7.650597,-1.166647,-9.482381,-3.509268,-5.238995,2.089214,-3.697857,1.231643,-2.370535,6.976898,6.040526,-9.996876,4.380218,-2.805711,-8.908823,-1.576509,-2.080492,-3.151109,-7.712124,-2.699870,-5.012508,0.127188,1.574855,-6.062755,-7.488047,-4.627523,-3.763657,7.230808,-8.164309,-8.908366,1.733128,0.948423,-0.052928,5.672897,-2.429464,0.652650,1.826895,5.288509,4.005995,-1.616089,7.046376,9.028473,6.919030,-3.357996,-0.619306,2.514422,5.647782,-7.676289,-0.718863,-3.243927,2.987070,3.822608,-5.953701,-2.203491,-6.570322,-3.249085,1.347460,7.955724,-6.827818,0.269058,4.068623,6.445073,6.595871,-3.465739,1.680129,-0.806738,-9.993324,5.745901,-3.271908,-3.386848,-8.366442,0.423035,-2.929460,-2.041144,-8.934839,9.607200,-7.382601,-8.241911,-3.862219,3.833891,1.274835,0.840527,1.749853,-8.832470,-0.323352,3.171491,6.485648,-4.832848,1.981227,8.968787,-8.851178,2.235357,9.553923,-3.231674,-5.727015,0.169725,0.295630,5.260967,9.738578,5.311918,-7.243115,-0.700588,3.621078,1.534106,2.514101,-7.679744,-3.657798,7.452889,6.194100,2.756581,3.324441,3.263017,7.968313,-8.956132,-2.316991,-2.939387,-5.906932,6.504205,-9.785698,-0.755689,4.320995,4.386240,2.371122,5.846881,6.641410,-1.344615,7.522294,2.404980,2.761637,6.125347,7.448014,-9.355118,-7.557168,7.740883,6.300571,-4.517858,-3.655359,-1.100286,-7.686823,-3.079396,-8.367113,3.004826,-3.404746,7.097034,-2.523476,-9.435106,-2.526194,8.460620,-4.749264,5.135138,-9.809376,-1.048291,-6.531011,-9.906569,-1.940452,-7.904219,-7.609033,-8.413580,-9.288614,-1.863871,-7.214714,9.435178,6.863171,2.605410,3.630769,6.678378,-1.056343,4.499855,-7.105043,-7.995718,-9.556844,-7.235153,-2.603013,-2.665375,-9.786725,5.901958,1.006685,9.161197,5.448515,-8.005861,-3.721637,-9.647976,9.533057,3.604140,-5.627610,-2.194241,-4.933645,1.340738,3.581467,9.150813,-3.620676,-8.856880,9.008135,-1.988877,-6.592069,-4.929082,3.339764,2.587817,-9.618696,-3.230007,-5.955522,9.281886,3.038105,5.929522,-8.003114,-4.808300,9.869797,-3.365483,6.475256,7.628114,2.173421,-8.813826,5.124791,2.694589,-0.411946,-0.242375,-5.948365,0.639112,-2.423197,-0.978475,4.112946,1.951555,9.011380,-3.856976,-1.762303,-7.745939,3.669704,-6.664596,9.944859,-8.229525,-2.699935,-8.032747,-4.740566,-7.248363,5.545182,-0.364833,-7.251350,0.827482,3.418142,-2.344096,-1.151196,-9.933674,9.878889,-3.074805,-7.529463,-3.679501,7.733911,-3.164463,-4.427393,-4.377278,8.983763,-8.448180,-5.494613,-8.631679,7.230215,4.874443,7.650480,1.789692,0.553810,6.635427,-4.467708,-7.486985,4.080125,-4.692280,6.005511,1.844416,8.530408,-4.937084,3.042720,4.455459,4.379926,-8.579217,-2.240214,6.734815,0.593315,-1.402782,-2.452888,4.158109,8.546149,5.866051,-5.277408,5.555157,5.568950,6.427619,-1.742578,5.798137,-2.700321,6.473679,-8.929878,-9.203590,3.449044,9.040185,4.569334,5.490053,-6.049092,6.083129,5.816500,-8.512543,9.321507,-2.221729,5.933572,4.149984,1.823278,-4.711018,-6.959423,-1.233000,8.143487,8.633135,-2.634460,6.903027,-9.266458,-5.869610,-7.092836,-9.568526,-0.867339,6.790342,-2.861197,4.488113,5.433664,6.395348,-4.024733,-8.388084,-5.451902,-1.026917,-0.994783,1.087955,6.503973,8.789678,5.949787,3.784976,-8.383057,1.282476,4.749323,-8.707928,-4.274864,-4.822021,9.054376,9.073008,2.060926,9.501001,0.095688,-9.842990,-2.475161,-0.386473,3.090465,5.758979,9.865825,-1.912243,-9.684979,5.295601,0.370601,4.198189,-2.802870,-4.092100,9.830192,-0.605388,-6.249815,7.540689,-7.388653,-0.452947,0.318336,4.251565,-8.853433,2.534475,-3.329000,-8.585537,2.378829,0.797265,-6.707460,2.534422,9.662653,-5.169388,-1.415096,-7.152971,-4.993204,-3.745261,-4.596709,-5.059711,0.995208,6.727280,-1.745636,0.728822,-7.949807,-9.114802,-5.725887,-9.959636,7.426671,-4.824191,-5.732169,-3.844887,7.176970,-6.424701,-9.732282,5.125376,-0.464915,8.195415,-9.129757,-0.117342,0.208579,4.781517,-9.518389,9.624396,-5.657105,6.170415,-7.065230,3.705063,-1.353009,-2.715318,-2.803509,1.534878,-0.598699,-1.334915,2.239287,3.029561,1.666206,9.092070,-2.703724,2.924497,-6.583733,6.426547,-7.497997,-7.151514,-6.652907,7.270856,-0.872227,-0.508035,3.382043,3.066312,4.746008,-7.995140,4.645690,8.995626,-8.255191,0.717152,2.337043,-1.992925,4.728152,8.096140,0.338187,5.089304,5.372151,-6.462635,-1.253079,1.653815,3.264970,-4.368295,7.364155,-4.373228,-5.320693,-8.669613,2.879067,8.005033,-0.849071,-3.925090,6.211056,7.842063,4.084304,0.758876,-3.665495,-9.567834,-6.942884,-8.205012,-6.232762,-2.907971,-0.654951,-0.034065,1.818982,1.390107,-9.050301,9.340104,7.777848,-4.312628,-5.872628,-3.553376,2.903484,-7.664914,8.420377,7.755682,-8.176409,-1.431501,8.290457,-6.533451,-4.120232,-4.666092,9.379428,-1.060863,-1.734190,-0.249977,-8.675958,1.754106,9.382954,-2.863555,4.878219,-7.026397,9.288089,-9.126694,0.904442,0.136655,-9.330486,6.323217,5.995650,-0.835602,-2.056709,-3.455667,3.672269,-9.161983,-6.793491,1.117452,2.028520,1.582248,-0.719977,2.880609,-5.114814,3.419597,-4.970423,-5.517492,-4.623031,8.645630,5.532937,-5.148594,-5.808107,7.623059,9.274510,-9.641989,-1.288749,5.663250,9.589134,8.257893,7.287334,3.884226,2.423660,3.652620,-4.448543,-9.509927,-9.467224,2.781767,-0.377319,1.823650,2.715193,-0.613627,3.939441,1.164290,-1.333023,-9.560174,5.149913,4.693928,-6.702092,9.983774,3.810280,-5.882497,-6.805957,-5.237633,5.461577,-5.418021,9.663931,-9.197657,-5.464744,-5.095733,-1.398006,-3.480340,-5.899140,-9.777948,-6.407183,1.989005,-8.472387,6.757416,8.562439,1.465884,-8.114559,-0.930111,-0.442280,-9.244516,-3.148450,4.352401,-5.301023,-7.858827,9.372926,5.317377,-5.065305,5.530745,-6.520542,6.875697,7.679632,-1.002685,-9.966765,3.157302,-6.756582,0.341285,-1.683401,7.576587,-8.056121,9.671486,0.641947,4.260368,-4.587362,-4.348008,-8.390203,-7.483848,-8.234499,7.590284,3.731069,5.505910,-3.348127,-0.527077,2.409912,3.264514,-0.990309,0.011217,7.063527,2.529017,4.146085,3.771959,-2.814337,5.978233,-2.201139,3.034873,-4.769295,7.276882,-6.970570,4.272048,-4.403778,2.377650,-3.119156,-1.088487,-4.788121,0.936592,0.724475,5.193860,-8.344841,-5.996162,8.882811,5.413285,-3.860076,-4.376865,-8.208122,-2.595174,5.653579,6.502597,-8.081751,8.581980,-0.949425,-2.082227,9.695769,8.040717,7.456298,9.116346,8.861605,-2.377787,3.206816,-3.265661,-2.704725,-6.940710,1.042484,9.178868,4.642486,-4.335600,0.669103,0.144831,-8.585255,4.696490,-2.340916,-7.295296,1.468937,6.631402,3.107177,-4.044177,-5.152753,7.499222,2.985140,3.426357,-3.780323,-2.816949,4.843622,-2.233860,-1.594746,8.687014,-9.416991,-3.863160,-9.788774,5.335307,-1.233012,4.162355,-3.204589,-7.285862,-0.576247,2.441821,8.896814,-4.330781,6.236484,-8.385706,-7.569944,6.600934,6.393836,-3.060947,7.266002,1.930091,-4.607705,1.573449,-4.854706,-4.884846,4.742442,6.164907,3.332253,2.961544,-5.516567,-7.183502,3.857878,-4.350976,8.244317,-9.260655,-4.023540,-3.830338,4.441536,1.019149,2.986913,-7.966059,1.931778,2.116244,3.718000,-7.575530,-0.006630,8.368012,-1.120585,-3.827312,-8.046568,-4.447590,1.821041,2.247169,-9.576384,-1.826526,-2.773088,3.160691,-1.302736,-4.105471,6.367264,0.730261,0.226595,-8.308256,-9.345577,-6.986587,1.121396,8.642215,2.452760,5.974974,-5.556271,-6.325863,-6.981141,-8.649001,-5.907654,0.404984,4.626664,-3.646179,7.001775,-5.405987,6.609986,-2.559274,-9.965826,3.837813,6.450287,4.652567,-0.903089,-9.560106,5.472399,7.309724,-7.031204,-5.121142,-1.014091,-6.219015,9.869169,4.507767,1.312509,2.021622,-9.092110,-2.526016,-1.126957,0.603923,7.501239,8.334219,-7.806259,-1.271942,3.169236,3.820396,7.964429,6.538435,-1.267961,-4.804520,8.029680,1.918136,-1.602022,0.137688,-9.568071,-4.611013,-2.172106,-3.260750,-8.146805,7.194907,5.488632,9.598003,0.109925,6.997352,-2.488111,5.438045,-2.109693,4.942995,-5.742796,9.440089,0.982297,-9.995090,0.206925,-2.545717,-6.752924,-4.064672,-3.497902,-6.007422,-5.155147,-4.079813,3.013880,-1.747859,-0.675907,0.795032,-3.574233,8.186577,-2.521458,-1.151838,1.482621,5.978761,-3.430797,3.910688,-1.899496,-6.623341,-0.857726,3.801353,0.275054,6.270556,4.977592,-6.214792,4.004472,9.416057,-9.133940,6.534359,-2.374098,7.294154,-8.468174,-6.243617,-9.344931,-9.595219,3.945829,2.580543,9.300215,-1.187564,9.290237,2.469836,7.851519,-7.330174,-4.429227,7.605169,-9.284286,9.380576,5.837837,2.927492,7.685061,-4.009721,7.107954,9.426357,-9.152688,6.293786,-4.603169,-6.184297,1.748322,1.967346,5.844353,5.584146,8.616607,-0.490307,-2.294565,9.125605,2.496710,-8.550497,5.181450,-7.133728,6.510067,8.811693,-6.283793,0.524636,-5.069247,9.572191,4.292190,0.952786,8.744498,-2.122870,-6.031713,3.706002,3.689481,-4.901466,5.463721,9.634703,4.937906,2.621286,-2.122487,4.313525,6.680536,-9.421346,7.316605,-9.592407,-6.255407,-5.314266,-7.238904,-2.193996,0.780261,-1.805103,0.311004,-9.783510,-7.463450,-2.761353,-9.298168,9.069193,-6.155466,0.986431,8.905108,7.712973,-0.608440,-8.295279,5.934155,-8.359509,-7.376101,-5.134006,-5.647572,-1.748423,-0.610010,-8.406887,-0.016877,-1.282421,5.087259,1.727652,9.529106,-6.085126,-9.514568,-3.817785,-3.484952,4.604790,4.585136,-0.740876,-2.085759,-5.822363,-4.434382,0.806674,-4.331020,9.570574,5.592435,9.966153,7.135565,-8.269564,-8.511683,-5.752892,-4.938263,7.212782,3.248330,1.692631,-0.713333,-1.114994,-7.579194,-3.533384,7.182413,9.424669,-7.052525,-1.317572,-8.376532,0.481748,6.939430,1.160033,2.133390,-7.532735,5.895937,-8.470329,0.945216,-6.199554,9.151642,8.678458,-1.516678,8.787336,8.700422,7.332456,7.285534,-4.525778,-6.184849,-4.329768,4.885061,-8.518514,-1.569990,-3.266929,7.923185,-9.605451,1.184295,5.833927,-0.100366,-9.815647,-5.517419,0.720011,8.705200,4.574063,-8.466631,4.602267,-7.836485,-0.452074,3.809658,-3.328227,0.308044,0.237848,-7.139942,-0.948993,1.408263,-6.400043,-5.138540,1.273636,-8.306514,6.842194,-6.553949,-3.606769,-3.087797,-8.816856,7.833940,-4.285153,2.352664,-4.348567,2.907410,-4.328484,2.012908,-4.626122,-7.249706,9.824035,-2.825452,2.102709,-8.908115,6.994234,-1.660667,-7.188711,0.832115,-1.583375,-3.649597,-4.458972,-4.557229,-0.067985,-2.486416,9.635107,2.277476,2.852268,-6.079719,-6.785274,-4.767849,5.482057,2.451680,-8.835927,9.781801,3.354839,2.925197,0.801200,-4.472246,-9.648908,-1.677857,-6.730667,-8.971415,-5.141608,-0.790915,4.065780,-6.411937,-4.778321,-4.972946,-9.484141,8.529961,9.428539,-5.578423,-9.183368,4.957083,4.659630,4.763634,9.421483,7.956762,-8.789286,-7.733463,-3.098008,-9.492306,6.332714,2.807326,-9.399025,2.997280,-8.140675,-8.596632,4.726112,0.065783,-6.136447,-8.863182,-9.609432,4.018747,6.754421,0.580750,-7.521398,-4.872022,-7.344904,-8.619018,7.341128,5.636454,1.892761,-1.992506,9.655559,9.043975,-3.207506,4.066683,9.216587,7.232962,-7.549602,-9.533585,9.599014,-6.205523,-9.660901,-4.562029,4.974912,9.068229,-0.140051,7.900489,7.860368,1.937773,-7.717731,6.733307,0.511354,-4.650258,0.913690,-6.364911,-3.584382,-3.801538,9.773463,-8.842306,-6.837404,4.808944,9.136110,-8.608892,2.055229,4.244124,-3.582488,0.455703,3.737421,-1.581206,-5.196228,7.530950,5.434111,-4.225025,7.982604,6.737403,-6.741057,-0.149231,4.628359,5.646264,-5.273949,-6.171070,9.052946,-2.091968,-0.742793,6.102399,9.053177,9.846045,-1.603917,-1.726237,-1.004157,-5.633193,-4.998679,-5.329238,3.153287,0.482900,-0.423634,9.477615,0.265076,0.841608,-2.326179,5.372570,3.563458,-6.798499,-1.546789,2.848106,9.292719,0.068071,-1.597380,3.584519,1.958766,4.492621,3.574888,3.789719,-6.620573,-5.076791,8.700008,3.816526,-5.941392,6.682741,-0.357055,2.053103,-7.638392,5.298725,-5.006072,-4.556979,3.378687,-6.176924,-1.597989,-4.584119,-6.322406,9.009532,-6.920420,-5.837196,1.897455,1.153583,0.858130,0.495398,9.147609,-2.351119,3.526781,-7.232250,0.979468,6.256597,-6.113865,-7.782564,-9.981787,5.593855,-0.772023,7.626783,0.475816,3.107848,8.605877,-2.089703,-4.917614,0.914198,3.575171,-7.137617,-9.260654,7.361118,8.480598,1.645334,6.559156,-3.013214,-8.057796,2.621238,-0.503656,-0.271461,3.011122,2.045865,-7.846294,-2.317602,-3.246126,-6.776412,-7.423857,4.887601,4.688689,-2.229190,4.046625,5.950911,-5.871740,3.561752,1.498243,2.723106,-4.712144,-9.043516,8.354400,6.630089,-1.939183,-2.328371,4.276444,-0.091344,-8.518964,1.429636,-0.854588,0.785306,-2.469516,2.882761,9.653340,-1.320730,3.356087,-8.272252,1.489067,-3.372051,0.964977,3.718039,2.176569,1.530667,-9.483467,9.230465,1.020392,8.696965,-5.005338,-0.638729,9.834349,8.169944,6.596122,7.775084,9.632478,-1.574135,-6.688115,3.985998,-4.643135,9.017507,-2.003816,6.297390,-2.134265,1.921288,8.766414,-1.911553,-3.819308,-3.398851,7.782550,4.258402,9.670491,7.706334,7.202827,4.963265,1.281666,-5.080044,-5.250008,-8.973491,-6.018234,7.971893,9.429191,7.648068,6.124925,8.590752,1.786848,-7.664588,6.310371,6.860416,-7.295003,-8.444015,7.002644,1.391669,-7.548827,-3.553565,7.423292,-1.029077,2.534951,9.390211,4.807764,8.797189,5.279976,-0.725186,4.888495,3.861452,-3.373490,-5.841227,-5.453072,7.677037,0.369230,9.375600,0.404598,0.176411,7.519513,-9.152149,6.268675,-8.091135,0.719322,0.824054,-1.999049,-4.108526,-5.901615,-2.186101,5.548031,3.792129,-4.269956,3.666168,9.993693,-2.068932,0.364314,8.215780,7.845943,1.661514,-9.868414,4.249207,6.877826,-4.483608,-1.698544,-6.139765,-6.323378,-5.163449,8.440760,9.821241,-2.582403,7.859409,-5.577014,7.933985,-4.836828,-5.184766,0.680702,8.000735,5.191213,9.763635,7.308044,3.816162,4.689886,-3.804070,-7.985676,0.207356,7.644904,-3.075174,-5.423752,8.984532,7.448929,7.337471,-2.973285,3.132862,-2.714009,7.221538,7.232469,-0.232633,0.546597,3.223711,-5.155735,-4.568091,5.798728,2.101976,-3.367993,8.250482,-6.906627,8.687983,1.536828,-8.356338,8.979633,1.102677,1.582077,8.928195,-2.191821,-7.545255,-0.528373,7.396574,7.977253,1.260923,9.631897,6.509179,5.084499,-0.528678,-6.824445,9.751972,2.530024,-7.585452,-5.344006,6.889495,-1.135729,4.697806,-5.443817,-2.271725,2.790875,-6.486989,-1.685285,-6.278383,-4.309016,6.543000,0.353334,-4.569720,2.273411,9.032769,-8.144639,6.903226,-2.759940,0.569579,6.422596,6.695832,1.620241,7.083087,2.682467,-8.309560,8.716957,-2.264333,-2.862232,0.857969,9.882524,2.400465,2.437252,-0.190908,3.461229,-6.165344,-9.941148,0.117022,9.572432,2.785073,-5.310374,-1.361544,7.156311,-7.226306,2.133418,-7.941631,4.397825,9.749562,-6.136031,-2.758946,4.263919,-3.052009,-9.467055,-3.069199,-8.319007,9.562030,1.252215,-6.003039,-0.946621,-0.755514,-8.299210,3.895798,-7.465346,-8.224241,-6.371204,-4.319059,-6.003068,8.417963,-2.897314,-0.058986,-8.758370,7.782460,-4.321583,-5.805803,-9.184906,-7.463554,6.368436,-9.261339,-7.544808,-7.746107,-2.162874,7.070896,8.636384,6.986804,-8.692201,4.106994,1.113896,-6.778832,-6.881757,3.896065,2.672678,-4.324348,9.365936,-7.817808,9.527155,-5.271106,4.802116,-7.214642,3.450527,-5.047719,-0.471534,-5.876435,-8.018143,8.116509,4.534412,7.569295,-3.529057,-7.675257,8.428983,-5.482964,4.078609,-8.391030,-2.746733,-7.006038,-2.903583,4.111516,-6.003431,9.396701,-9.995366,7.646648,4.874598,-4.204102,-6.486149,6.327567,5.813492,0.362837,-4.855265,7.425350,-1.197627,-9.199155,-0.629140,2.300644,0.451924,8.906946,6.322836,-1.939607,7.050126,4.681070,0.399890,3.525965,-1.462781,2.825983,-4.626801,5.029793,-5.105811,-6.357011,7.766955,5.531730,-0.274973,-8.281455,-7.909292,-4.061702,6.444809,1.718613,-3.303882,5.948329,1.328872,0.206829,3.154530,7.407513,7.951927,-3.319254,9.417016,2.119367,-6.130008,-0.067873,-6.667457,-3.808830,-8.615448,-3.612904,5.476267,2.244246,1.666471,-4.868283,7.436783,-6.683784,5.405330,6.832515,6.804221,-3.729482,-5.852994,-5.870187,7.521842,-3.675389,-4.638470,-9.806208,-9.391059,6.318515,4.585791,-9.179192,7.265846,7.569166,5.492973,4.884606,1.539140,-8.419965,-5.172301,9.142717,2.366027,5.193198,-7.432492,0.883921,9.941832,-2.922616,6.688094,7.330810,-7.364395,5.755241,5.886536,-7.303860,4.870348,-7.205343,0.915122,4.503241,0.433163,-2.914063,5.576235,-0.288969,-9.364074,7.922086,3.265485,-0.141296,5.107622,5.578132,3.635365,7.110962,-2.840279,-5.443001,6.531728,1.125385,0.684049,1.578564,9.832363,5.549352,-0.763203,1.729524,-9.821076,1.028592,-7.678169,-4.838840,-5.901683,-1.307949,-9.057590,-2.669696,-3.346999,-3.539510,-5.796039,-1.940634,-4.591449,1.178136,-5.744075,-9.102809,0.624524,-0.799540,7.697425,0.669067,1.972056,-0.591415,-0.242899,5.172635,-3.406525,-6.638967,5.265644,4.878208,9.726509,4.845020,5.370175,-9.123586,0.706329,-9.143048,5.990140,4.655179,9.227069,-8.748314,-6.836431,8.798750,-2.927734,9.764069,-9.766623,6.311869,-4.705192,-4.357638,-0.182825,-5.001397,7.040547,-6.869874,-6.372331,9.056456,-0.975478,9.183563,-4.443648,2.602758,0.634255,-6.290409,4.972796,0.029784,-7.473773,-1.505280,-4.227370,8.238346,3.183656,-7.500215,8.726425,-6.860078,-9.262781,-8.174373,-9.451661,2.396870,5.751358,8.600955,4.085236,-2.935605,-1.868731,-8.616661,4.514950,4.206385,-1.733362,-1.973720,9.103011,7.058005,-3.553933,-5.115697,0.484276,-3.962412,-9.346973,-8.917398,-9.746351,4.899431,3.715485,3.492324,2.499021,9.401313,5.267367,9.666816,-9.206049,-6.441324,5.654770,7.114110,-5.394877,5.453640,-9.897650,-4.011636,-7.505437,3.276027,4.523352,-2.133432,7.359381,-2.734471,2.061473,-5.951093,-4.060547,-4.242328,1.215371,3.257962,-6.917502,-8.002431,-8.224331,8.110201,4.052495,-0.151975,-8.664954,7.243969,-5.616751,-6.932030,-8.087241,-1.542547,5.602096,-1.361837,-5.862850,-3.718545,-5.755366,4.653221,9.746227,9.035398,-5.325036,7.340590,-3.272498,-8.725200,1.793296,-6.881887,2.019426,-3.476955,4.475016,-3.138371,-5.882079,-9.860524,1.176950,1.435348,9.693550,2.845041,-7.866289,-1.834787,-0.227272,-2.114475,7.567976,2.084086,3.885428,8.923322,-1.019099,-3.959416,-9.681807,4.882608,0.707472,-4.203064,3.061118,-7.146009,-7.371983,-4.461526,3.668009,-9.540708,9.568091,-4.681044,-1.218706,9.895497,3.789432,9.177293,9.482318,2.656357,-7.280473,7.877082,-8.902578,0.049670,-8.689256,7.660745,-0.064895,-9.829092,1.446378,-8.919276,-0.393881,-6.726050,-9.438142,7.699536,-4.016870,-7.627280,-4.211316,-8.984480,3.276336,9.749262,1.998734,2.535060,3.360438,5.177889,-8.003326,-0.944686,9.119884,-2.688449,-0.372851,4.164701,8.934542,9.180977,7.681373,-4.645148,-4.062065,-0.113194,-8.267118,9.858593,3.491119,-2.885732,4.635204,-9.749821,9.457452,-1.524955,-0.845310,-0.683304,6.674804,4.408541,3.830093,6.009780,-1.917991,7.986934,9.937766,-8.997477,0.449875,6.918437,9.368263,4.351759,-3.148689,-3.603130,-9.639804,-4.469996,9.505711,-8.652108,9.188012,-9.841728,-5.565415,-5.050405,-2.121033,-6.216851,6.216926,-2.817442,-7.928311,8.442636,6.422590,5.947586,-2.454624,2.917845,-8.732200,-2.440720,3.011008,1.897051,-1.934893,-0.874439,-6.483956,-5.112380,-1.003453,-2.982162,1.408232,5.713880,9.799724,-3.725697,0.552723,0.593718,0.224920,7.842184,-8.008274,-9.915882,6.446584,-0.436180,-6.822891,1.661253,5.324179,9.378428,-0.284601], dtype = "float32")#candidate|15063|(2464,)|const|float32
call_15062 = relay.TupleGetItem(func_14892_call(relay.reshape(const_15063.astype('float32'), [616, 4])), 0)
call_15064 = relay.TupleGetItem(func_14894_call(relay.reshape(const_15063.astype('float32'), [616, 4])), 0)
func_7038_call = mod.get_global_var('func_7038')
func_7042_call = mutated_mod.get_global_var('func_7042')
const_15074 = relay.const([[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False]], dtype = "bool")#candidate|15074|(96, 1)|const|bool
call_15073 = relay.TupleGetItem(func_7038_call(relay.reshape(const_15074.astype('bool'), [16, 2, 3]), relay.reshape(const_15074.astype('bool'), [16, 2, 3]), ), 1)
call_15075 = relay.TupleGetItem(func_7042_call(relay.reshape(const_15074.astype('bool'), [16, 2, 3]), relay.reshape(const_15074.astype('bool'), [16, 2, 3]), ), 1)
uop_15087 = relay.exp(call_15073.astype('float32')) # shape=(12, 3, 12)
uop_15089 = relay.exp(call_15075.astype('float32')) # shape=(12, 3, 12)
func_12649_call = mod.get_global_var('func_12649')
func_12651_call = mutated_mod.get_global_var('func_12651')
call_15090 = relay.TupleGetItem(func_12649_call(), 3)
call_15091 = relay.TupleGetItem(func_12651_call(), 3)
bop_15106 = relay.logical_xor(uop_15087.astype('uint8'), relay.reshape(call_15073.astype('uint8'), relay.shape_of(uop_15087))) # shape=(12, 3, 12)
bop_15109 = relay.logical_xor(uop_15089.astype('uint8'), relay.reshape(call_15075.astype('uint8'), relay.shape_of(uop_15089))) # shape=(12, 3, 12)
bop_15110 = relay.add(const_15074.astype('uint8'), const_15063.astype('uint8')) # shape=(96, 2464)
output = relay.Tuple([call_15032,call_15038,var_15039,call_15049,call_15062,call_15090,bop_15106,bop_15110,])
output2 = relay.Tuple([call_15033,call_15040,var_15039,call_15050,call_15064,call_15091,bop_15109,bop_15110,])
func_15126 = relay.Function([var_15039,], output)
mod['func_15126'] = func_15126
mod = relay.transform.InferType()(mod)
mutated_mod['func_15126'] = func_15126
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15127 = relay.var("var_15127", dtype = "float32", shape = (540,))#candidate|15127|(540,)|var|float32
func_15126_call = mutated_mod.get_global_var('func_15126')
call_15128 = func_15126_call(var_15127)
output = call_15128
func_15129 = relay.Function([var_15127], output)
mutated_mod['func_15129'] = func_15129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11231_call = mod.get_global_var('func_11231')
func_11233_call = mutated_mod.get_global_var('func_11233')
call_15143 = relay.TupleGetItem(func_11231_call(), 0)
call_15144 = relay.TupleGetItem(func_11233_call(), 0)
func_16_call = mod.get_global_var('func_16')
func_19_call = mutated_mod.get_global_var('func_19')
var_15168 = relay.var("var_15168", dtype = "float32", shape = (540,))#candidate|15168|(540,)|var|float32
call_15167 = relay.TupleGetItem(func_16_call(relay.reshape(var_15168.astype('float32'), [15, 4, 9])), 0)
call_15169 = relay.TupleGetItem(func_19_call(relay.reshape(var_15168.astype('float32'), [15, 4, 9])), 0)
output = relay.Tuple([call_15143,call_15167,var_15168,])
output2 = relay.Tuple([call_15144,call_15169,var_15168,])
func_15171 = relay.Function([var_15168,], output)
mod['func_15171'] = func_15171
mod = relay.transform.InferType()(mod)
mutated_mod['func_15171'] = func_15171
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15172 = relay.var("var_15172", dtype = "float32", shape = (540,))#candidate|15172|(540,)|var|float32
func_15171_call = mutated_mod.get_global_var('func_15171')
call_15173 = func_15171_call(var_15172)
output = call_15173
func_15174 = relay.Function([var_15172], output)
mutated_mod['func_15174'] = func_15174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15212 = relay.var("var_15212", dtype = "float32", shape = (13, 7, 2))#candidate|15212|(13, 7, 2)|var|float32
uop_15213 = relay.atan(var_15212.astype('float32')) # shape=(13, 7, 2)
func_11722_call = mod.get_global_var('func_11722')
func_11726_call = mutated_mod.get_global_var('func_11726')
const_15223 = relay.const([3.082860,-2.501537,7.732135,7.975491,-0.114861,-9.213419,-2.670718,-5.020125,5.081829,5.702038,8.624623,-5.670516,-4.746495,-8.231911,-3.531351,-0.197801,3.766157,-4.902081,-9.810105,8.243786,-6.455114,-0.330057,-7.573342,6.569637,-3.392507,-2.588737,2.271435,-9.505108,-8.108942,7.128804,3.281826,-9.128316,-3.526537,9.544969,0.934490,-1.840625,3.570976,-4.484566,0.336306,8.476528,-0.855949,3.499458,2.886053,0.524349,2.449348,-4.361982,-0.885112,1.258940,-7.651908,-7.010223,5.148445,7.324702,0.152245,2.704582,1.438087,-3.150119,-7.310469,-7.636925,-6.382485,-3.252715,-5.511119,-5.146963,7.069256,-9.167565,-5.601177,6.511886,6.238154,-5.970860,-3.340088,3.137637,4.872397,2.000120,7.585999,5.944432,-3.090113,0.034842,-6.705925,2.078225,-2.127131,8.327792,-5.896288,-4.614833,7.369706,-7.890197,-5.449756,-7.786777,-3.007688,-0.216426,7.021590,7.987002,1.594771,-6.571090,-1.084275,4.463393,7.946520,8.254719,-1.619789,4.049352,4.023537,0.896397,5.731236,7.217283,-8.783583,-9.857989,6.914080,9.322296,-7.682677,-8.090196,1.621941,4.769886,3.067583,9.796057,0.328460,7.349487,-1.331573,-0.511924,-0.278719,9.872203,4.378643,-1.791921,0.798055,0.377981,-1.561571,-6.193035,-2.871766,-0.217612,0.273320,9.376197,6.630005,5.634418,8.185244,3.716083,1.661916,-5.510754,-1.612108,9.049068,-8.490280,-6.154575,-4.003715,7.013990,-3.025479,-7.029595,0.189148,-2.419666,6.887273,-8.856659,-5.058519,-8.674855,1.904002,-1.256372,-4.413979,3.738542,7.088444,0.006869,6.428770,-5.694418,-0.868574,3.156318,-9.821583,-1.641812,3.414133,-8.752217,6.825017,0.425433,-1.519986,-1.688922,4.667831,7.644578], dtype = "float32")#candidate|15223|(168,)|const|float32
const_15224 = relay.const([[3.384180,-2.258832,0.301705,-6.325147,-6.516609,9.511744,3.064205,2.053782,8.889757,3.175020,-2.958653,9.640649,6.053502,-7.723428,6.355731,-2.389003,-3.819148,8.772810,5.533149,5.955183,1.328943,-1.896577,6.568396,2.185671,3.662900,3.066013,1.687645,-0.647191,0.449553,0.646024,-2.123522,2.097938,-7.892911,7.561697,7.927324,9.737068,7.208894,6.970977,2.895376,4.768964,8.607236,8.021136,2.028190,0.275556,-1.427875,-3.147427,-5.665386,2.545605,-0.524823,-6.866033,-7.220801,9.492317],[-7.810557,-6.402525,8.481116,-4.190981,-5.096440,-1.747072,7.042205,1.610936,-9.850914,0.848999,3.192623,3.598097,9.656679,7.764149,1.876437,5.790413,-5.362376,8.576329,0.709114,-6.773618,4.218662,6.894103,1.519260,0.661177,-4.113164,-2.033019,5.198686,-1.730183,-2.817064,-3.378894,-2.891563,0.158245,-6.069143,-3.690740,-9.528057,3.157223,0.063033,8.866514,3.340093,-4.406812,7.802024,-8.945035,-9.843066,6.456359,-9.063234,-5.089329,4.035492,2.642288,9.268546,5.616826,5.436890,5.597265],[5.010097,1.799866,2.250817,1.621800,-2.089548,-5.072346,-9.800961,0.266718,8.966374,3.290472,7.922841,-0.274388,-7.325946,6.760362,1.059267,9.005551,8.038413,1.293748,-1.835031,3.512325,-1.696448,-2.280495,5.381431,-2.469253,1.852467,5.146256,-1.940302,7.665649,6.876479,-8.502401,-7.903412,3.131248,-6.941277,-5.860616,1.890702,-0.812377,3.369953,-4.540266,-7.170779,-7.277743,-5.587595,6.110552,1.211814,-8.422966,7.132325,9.756951,-4.634015,5.546174,-5.162414,3.106765,7.450288,2.808331],[-1.245794,6.272980,-3.330275,9.764823,5.805502,-4.129501,7.976383,8.890026,9.502997,-4.489579,8.661907,0.030758,-1.449729,-2.810877,-1.443653,-8.381086,6.728524,4.810765,2.160320,9.645898,5.306740,-7.384353,-2.300345,9.070568,-1.814318,0.194577,8.491774,4.767011,7.031501,1.858787,-1.224258,9.413349,8.365546,9.719974,5.272797,8.901022,-8.219629,6.107376,9.985706,5.513870,9.765683,-7.736159,4.261758,-4.824446,0.008902,-0.631516,3.203504,2.874422,-4.585405,-9.954914,6.239401,4.924622],[3.236373,-2.699093,2.831178,-6.222615,-7.426900,-5.612683,0.833083,3.130614,-9.788025,-4.245698,0.607314,1.503720,-3.351209,8.421908,8.175113,-9.624661,0.414267,-9.379362,-1.742354,7.723848,4.481526,-8.761541,-7.440311,3.596164,7.860655,3.712859,0.868023,-3.698384,-6.731716,-4.816227,-6.778152,-4.463978,9.477653,9.878377,6.690674,8.286060,-0.005567,7.738763,3.082394,1.185394,-0.442233,0.753702,2.369155,-2.684838,0.319402,-4.181646,0.555281,8.328672,1.403501,-6.451801,-4.712772,8.252391],[8.917056,0.815591,8.396839,2.210502,6.740493,4.257575,-0.351908,-7.773575,-4.848003,-4.848624,2.619800,8.398001,-6.670388,-9.021678,1.937243,7.281831,-9.753595,3.951450,9.625701,-8.926514,3.565766,-0.012265,7.319997,6.576011,8.360364,0.095772,3.819707,6.093012,-0.155823,-3.198531,8.325660,-9.838464,2.889319,0.482070,-3.763754,8.471597,3.196410,6.170036,7.391669,2.751122,-6.878024,0.893167,9.468107,3.120799,-8.966293,9.675995,9.303109,-2.581239,9.578149,-3.697176,2.567446,6.861364]], dtype = "float32")#candidate|15224|(6, 52)|const|float32
call_15222 = relay.TupleGetItem(func_11722_call(relay.reshape(const_15223.astype('float32'), [42, 4]), relay.reshape(const_15224.astype('float32'), [312,]), ), 0)
call_15225 = relay.TupleGetItem(func_11726_call(relay.reshape(const_15223.astype('float32'), [42, 4]), relay.reshape(const_15224.astype('float32'), [312,]), ), 0)
func_14365_call = mod.get_global_var('func_14365')
func_14367_call = mutated_mod.get_global_var('func_14367')
call_15229 = relay.TupleGetItem(func_14365_call(), 3)
call_15230 = relay.TupleGetItem(func_14367_call(), 3)
output = relay.Tuple([uop_15213,call_15222,const_15223,const_15224,call_15229,])
output2 = relay.Tuple([uop_15213,call_15225,const_15223,const_15224,call_15230,])
func_15234 = relay.Function([var_15212,], output)
mod['func_15234'] = func_15234
mod = relay.transform.InferType()(mod)
mutated_mod['func_15234'] = func_15234
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15235 = relay.var("var_15235", dtype = "float32", shape = (13, 7, 2))#candidate|15235|(13, 7, 2)|var|float32
func_15234_call = mutated_mod.get_global_var('func_15234')
call_15236 = func_15234_call(var_15235)
output = call_15236
func_15237 = relay.Function([var_15235], output)
mutated_mod['func_15237'] = func_15237
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15242 = relay.var("var_15242", dtype = "bool", shape = (12, 11, 6))#candidate|15242|(12, 11, 6)|var|bool
var_15243 = relay.var("var_15243", dtype = "bool", shape = (12, 11, 6))#candidate|15243|(12, 11, 6)|var|bool
bop_15244 = relay.logical_or(var_15242.astype('bool'), relay.reshape(var_15243.astype('bool'), relay.shape_of(var_15242))) # shape=(12, 11, 6)
output = bop_15244
output2 = bop_15244
func_15262 = relay.Function([var_15242,var_15243,], output)
mod['func_15262'] = func_15262
mod = relay.transform.InferType()(mod)
var_15263 = relay.var("var_15263", dtype = "bool", shape = (12, 11, 6))#candidate|15263|(12, 11, 6)|var|bool
var_15264 = relay.var("var_15264", dtype = "bool", shape = (12, 11, 6))#candidate|15264|(12, 11, 6)|var|bool
output = func_15262(var_15263,var_15264,)
func_15265 = relay.Function([var_15263,var_15264,], output)
mutated_mod['func_15265'] = func_15265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12808_call = mod.get_global_var('func_12808')
func_12809_call = mutated_mod.get_global_var('func_12809')
call_15284 = relay.TupleGetItem(func_12808_call(), 0)
call_15285 = relay.TupleGetItem(func_12809_call(), 0)
output = relay.Tuple([call_15284,])
output2 = relay.Tuple([call_15285,])
func_15303 = relay.Function([], output)
mod['func_15303'] = func_15303
mod = relay.transform.InferType()(mod)
mutated_mod['func_15303'] = func_15303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15303_call = mutated_mod.get_global_var('func_15303')
call_15304 = func_15303_call()
output = call_15304
func_15305 = relay.Function([], output)
mutated_mod['func_15305'] = func_15305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10620_call = mod.get_global_var('func_10620')
func_10621_call = mutated_mod.get_global_var('func_10621')
call_15330 = func_10620_call()
call_15331 = func_10620_call()
output = call_15330
output2 = call_15331
func_15352 = relay.Function([], output)
mod['func_15352'] = func_15352
mod = relay.transform.InferType()(mod)
mutated_mod['func_15352'] = func_15352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15352_call = mutated_mod.get_global_var('func_15352')
call_15353 = func_15352_call()
output = call_15353
func_15354 = relay.Function([], output)
mutated_mod['func_15354'] = func_15354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11207_call = mod.get_global_var('func_11207')
func_11208_call = mutated_mod.get_global_var('func_11208')
call_15425 = relay.TupleGetItem(func_11207_call(), 1)
call_15426 = relay.TupleGetItem(func_11208_call(), 1)
output = call_15425
output2 = call_15426
func_15499 = relay.Function([], output)
mod['func_15499'] = func_15499
mod = relay.transform.InferType()(mod)
output = func_15499()
func_15500 = relay.Function([], output)
mutated_mod['func_15500'] = func_15500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10311_call = mod.get_global_var('func_10311')
func_10313_call = mutated_mod.get_global_var('func_10313')
call_15524 = relay.TupleGetItem(func_10311_call(), 0)
call_15525 = relay.TupleGetItem(func_10313_call(), 0)
func_9200_call = mod.get_global_var('func_9200')
func_9202_call = mutated_mod.get_global_var('func_9202')
call_15526 = relay.TupleGetItem(func_9200_call(), 0)
call_15527 = relay.TupleGetItem(func_9202_call(), 0)
func_12373_call = mod.get_global_var('func_12373')
func_12376_call = mutated_mod.get_global_var('func_12376')
const_15537 = relay.const([[4.709007,7.840848,3.870874,9.534595,4.250742,-6.311812,7.053327,-6.021128,4.763031,-3.707576,-1.577248,-9.760591,-4.394266,2.097609,-8.797220,-8.963127,2.817527,-0.429055,2.337132,-4.508581,1.619441,9.287223,7.631536,5.175751,-2.292322,3.947242,1.216422,-6.840743],[4.031758,-1.440683,-6.635547,7.069329,0.667963,-7.395138,4.750631,0.133679,0.209407,1.375690,3.244604,9.181491,-4.473284,-0.207251,1.332137,7.559196,-1.154125,-1.653764,1.122679,-2.721653,7.674788,7.051171,2.445972,7.580064,3.197192,5.097392,9.573476,7.018252],[4.262172,-3.422575,-9.498777,5.878600,0.122947,-4.923415,3.832047,3.988733,0.663832,0.048708,-8.284170,-8.102338,-5.905176,-1.619792,-0.048328,8.161933,7.764099,-1.891327,-8.870396,-5.609106,8.938866,-7.841626,9.910608,9.326974,-2.238843,6.704639,-9.620825,-9.203640],[2.412942,-3.828946,-8.675007,1.936064,7.782478,-6.949559,7.316599,-9.171250,5.009915,2.198777,-7.611555,5.172653,3.090150,0.011826,-3.548665,-6.936583,-7.542973,-1.778050,8.363891,-3.059167,1.864240,-2.927158,6.983786,-5.530690,6.617081,8.722576,-8.037412,-4.540294],[6.098936,5.891988,7.863388,8.925601,2.562704,6.393835,0.680159,2.473165,-6.646040,6.259112,-7.392556,-0.677450,7.635884,-6.670573,-4.603923,-3.519696,-7.246020,-9.282139,7.744821,-0.672644,0.992198,0.197846,9.931515,0.879395,-8.877852,-5.673942,-9.618269,-8.449517]], dtype = "float64")#candidate|15537|(5, 28)|const|float64
call_15536 = relay.TupleGetItem(func_12373_call(relay.reshape(const_15537.astype('float64'), [14, 2, 5])), 0)
call_15538 = relay.TupleGetItem(func_12376_call(relay.reshape(const_15537.astype('float64'), [14, 2, 5])), 0)
func_15018_call = mod.get_global_var('func_15018')
func_15019_call = mutated_mod.get_global_var('func_15019')
call_15564 = relay.TupleGetItem(func_15018_call(), 2)
call_15565 = relay.TupleGetItem(func_15019_call(), 2)
func_12234_call = mod.get_global_var('func_12234')
func_12235_call = mutated_mod.get_global_var('func_12235')
call_15583 = func_12234_call()
call_15584 = func_12234_call()
uop_15595 = relay.tan(const_15537.astype('float32')) # shape=(5, 28)
bop_15605 = relay.floor_divide(const_15537.astype('float64'), relay.reshape(uop_15595.astype('float64'), relay.shape_of(const_15537))) # shape=(5, 28)
bop_15613 = relay.logical_or(uop_15595.astype('bool'), relay.reshape(const_15537.astype('bool'), relay.shape_of(uop_15595))) # shape=(5, 28)
output = relay.Tuple([call_15524,call_15526,call_15536,call_15564,call_15583,bop_15605,bop_15613,])
output2 = relay.Tuple([call_15525,call_15527,call_15538,call_15565,call_15584,bop_15605,bop_15613,])
func_15616 = relay.Function([], output)
mod['func_15616'] = func_15616
mod = relay.transform.InferType()(mod)
mutated_mod['func_15616'] = func_15616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15616_call = mutated_mod.get_global_var('func_15616')
call_15617 = func_15616_call()
output = call_15617
func_15618 = relay.Function([], output)
mutated_mod['func_15618'] = func_15618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10311_call = mod.get_global_var('func_10311')
func_10313_call = mutated_mod.get_global_var('func_10313')
call_15718 = relay.TupleGetItem(func_10311_call(), 0)
call_15719 = relay.TupleGetItem(func_10313_call(), 0)
output = relay.Tuple([call_15718,])
output2 = relay.Tuple([call_15719,])
func_15758 = relay.Function([], output)
mod['func_15758'] = func_15758
mod = relay.transform.InferType()(mod)
output = func_15758()
func_15759 = relay.Function([], output)
mutated_mod['func_15759'] = func_15759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10441_call = mod.get_global_var('func_10441')
func_10442_call = mutated_mod.get_global_var('func_10442')
call_15780 = func_10441_call()
call_15781 = func_10441_call()
output = relay.Tuple([call_15780,])
output2 = relay.Tuple([call_15781,])
func_15786 = relay.Function([], output)
mod['func_15786'] = func_15786
mod = relay.transform.InferType()(mod)
output = func_15786()
func_15787 = relay.Function([], output)
mutated_mod['func_15787'] = func_15787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8708_call = mod.get_global_var('func_8708')
func_8710_call = mutated_mod.get_global_var('func_8710')
call_15852 = func_8708_call()
call_15853 = func_8708_call()
func_11231_call = mod.get_global_var('func_11231')
func_11233_call = mutated_mod.get_global_var('func_11233')
call_15862 = relay.TupleGetItem(func_11231_call(), 1)
call_15863 = relay.TupleGetItem(func_11233_call(), 1)
output = relay.Tuple([call_15852,call_15862,])
output2 = relay.Tuple([call_15853,call_15863,])
func_15873 = relay.Function([], output)
mod['func_15873'] = func_15873
mod = relay.transform.InferType()(mod)
output = func_15873()
func_15874 = relay.Function([], output)
mutated_mod['func_15874'] = func_15874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15886 = relay.var("var_15886", dtype = "uint32", shape = (5, 10, 16))#candidate|15886|(5, 10, 16)|var|uint32
var_15887 = relay.var("var_15887", dtype = "uint32", shape = (5, 10, 16))#candidate|15887|(5, 10, 16)|var|uint32
bop_15888 = relay.add(var_15886.astype('uint32'), relay.reshape(var_15887.astype('uint32'), relay.shape_of(var_15886))) # shape=(5, 10, 16)
func_15499_call = mod.get_global_var('func_15499')
func_15500_call = mutated_mod.get_global_var('func_15500')
call_15893 = func_15499_call()
call_15894 = func_15499_call()
uop_15896 = relay.erf(var_15887.astype('float64')) # shape=(5, 10, 16)
func_12398_call = mod.get_global_var('func_12398')
func_12399_call = mutated_mod.get_global_var('func_12399')
call_15899 = relay.TupleGetItem(func_12398_call(), 0)
call_15900 = relay.TupleGetItem(func_12399_call(), 0)
output = relay.Tuple([bop_15888,call_15893,uop_15896,call_15899,])
output2 = relay.Tuple([bop_15888,call_15894,uop_15896,call_15900,])
func_15904 = relay.Function([var_15886,var_15887,], output)
mod['func_15904'] = func_15904
mod = relay.transform.InferType()(mod)
var_15905 = relay.var("var_15905", dtype = "uint32", shape = (5, 10, 16))#candidate|15905|(5, 10, 16)|var|uint32
var_15906 = relay.var("var_15906", dtype = "uint32", shape = (5, 10, 16))#candidate|15906|(5, 10, 16)|var|uint32
output = func_15904(var_15905,var_15906,)
func_15907 = relay.Function([var_15905,var_15906,], output)
mutated_mod['func_15907'] = func_15907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14282_call = mod.get_global_var('func_14282')
func_14283_call = mutated_mod.get_global_var('func_14283')
call_15928 = func_14282_call()
call_15929 = func_14282_call()
output = call_15928
output2 = call_15929
func_15931 = relay.Function([], output)
mod['func_15931'] = func_15931
mod = relay.transform.InferType()(mod)
output = func_15931()
func_15932 = relay.Function([], output)
mutated_mod['func_15932'] = func_15932
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15969 = relay.var("var_15969", dtype = "float64", shape = (5, 4, 8))#candidate|15969|(5, 4, 8)|var|float64
const_15970 = relay.const([[[-6.155264,1.490874,1.830227,8.680038,4.538561,-4.291448,-7.969362,4.431863],[8.493547,8.832551,7.671989,-8.078503,-9.263969,1.463386,-6.642658,-4.170576],[-7.524888,5.255371,-9.188281,-9.041354,5.890080,3.115141,-6.508311,2.148671],[1.056757,9.094520,1.678761,6.752918,-8.806636,7.848089,3.942378,-6.750329]],[[9.762845,7.005683,-3.170646,0.536330,-9.191859,2.044809,9.117205,9.411018],[-6.214402,5.509005,-2.620322,8.595367,-1.711267,3.389185,-6.040633,8.158723],[4.178237,9.948600,-2.577261,4.903238,-1.909153,9.728407,-0.734033,-6.783173],[2.577662,-4.811888,-1.124118,8.602688,-7.204486,-9.382159,-0.466224,-8.887473]],[[-5.825017,6.137689,9.396864,-3.890270,-1.314240,0.023409,-0.349216,8.519676],[-8.693401,5.027370,3.795473,5.320955,-4.129385,7.385691,9.796324,-8.636459],[3.357820,-2.652516,6.954235,-6.655740,6.976721,-7.572493,-2.172793,3.245877],[9.431632,8.927758,5.481050,4.223279,8.229407,-3.336763,-9.859998,-6.369017]],[[7.190254,-1.118465,8.268116,-8.582040,6.400540,-1.495776,-0.627514,-2.593777],[6.274281,-9.583366,-2.316189,-1.287834,-2.188431,-4.758214,9.041726,7.399358],[2.345394,2.402260,-0.650798,3.825151,-5.741444,8.603377,-7.721587,1.816870],[-2.318155,-6.322954,6.060022,-6.965768,-7.028222,-0.320602,0.722079,-0.500735]],[[-0.532185,-9.113307,7.970032,-4.441876,7.588968,-7.137787,7.799999,0.706902],[5.226664,-5.456577,-3.180512,2.925491,6.338013,9.511511,7.114631,9.797906],[9.371145,-3.495592,-2.593012,5.917880,9.489282,7.166760,3.321042,-5.537924],[-8.219284,5.233686,6.175901,6.390942,-7.045603,2.431452,-8.263589,0.831241]]], dtype = "float64")#candidate|15970|(5, 4, 8)|const|float64
bop_15971 = relay.less(var_15969.astype('bool'), relay.reshape(const_15970.astype('bool'), relay.shape_of(var_15969))) # shape=(5, 4, 8)
uop_15988 = relay.sqrt(bop_15971.astype('float64')) # shape=(5, 4, 8)
output = uop_15988
output2 = uop_15988
func_16002 = relay.Function([var_15969,], output)
mod['func_16002'] = func_16002
mod = relay.transform.InferType()(mod)
mutated_mod['func_16002'] = func_16002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16003 = relay.var("var_16003", dtype = "float64", shape = (5, 4, 8))#candidate|16003|(5, 4, 8)|var|float64
func_16002_call = mutated_mod.get_global_var('func_16002')
call_16004 = func_16002_call(var_16003)
output = call_16004
func_16005 = relay.Function([var_16003], output)
mutated_mod['func_16005'] = func_16005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14572_call = mod.get_global_var('func_14572')
func_14574_call = mutated_mod.get_global_var('func_14574')
call_16007 = func_14572_call()
call_16008 = func_14572_call()
func_8902_call = mod.get_global_var('func_8902')
func_8903_call = mutated_mod.get_global_var('func_8903')
call_16009 = relay.TupleGetItem(func_8902_call(), 0)
call_16010 = relay.TupleGetItem(func_8903_call(), 0)
func_12154_call = mod.get_global_var('func_12154')
func_12156_call = mutated_mod.get_global_var('func_12156')
const_16028 = relay.const([2,-5,-1,6,5,1,-1,2,6,8,9,-8,-7,8,-4,10,-5,2,-10,-10,-4,-6,9,2,2,-3,-1,-7,-6,2,8,-3,-9,-10,3,-3,-10,1,9,-5,3,-3,8,3,-4,1,6,-4,-1,3,4,-1,5,4,-5,-6,-6,5,6,8,-2,2,7,3,10,-1,2,-9,-2,-2,1,-7,4,10,9,-1,-9,9,1,-3,1,-7,4,1,-8,-6,10,3,5,-7,-3,7,3,7,1,-7,4,5,-8,5,-9,5,4,5,-1,-6,-1,8,1,8,-5,-2,6,8,-4,-2,-4,2,4,9,-10,-2,10,-2,5,-10,-4,-1,10,6,10,6,-6,-2,-8,8,8,6,9,-6,10,7,10,6,-5,5,2,-3,-2,9,-8,5,-8,-1,-10,3,6,-4,8,-8,4,-2,5,-5,10,6,-4,3,5,-8,4,-7,-3,-7,-2,-4,8,-3,1,1,-3,-9,-1,8,8,-3,9,-3,10,3,-4,-6,-5,7,-6,-7,-7,-7,-1,-4,-1,1,6,4,3,6,4,-10,-3,-5,3,-10,-10,-1,-2,-10,-4,4,-5,4,8,3,-3,3,10,-5,-9,5,1,-8,1,-7,9,4,2,1,-7,-1,9,-4,-1,-2,-3,-10,3,9,-8,-10,8,2,-10,-9,9,-9,6,-7,-4,7,-8,-4,-7,-6,7,-3,-9,-6,-9,-10,-7,-7,2,-9,-3,-6,7,3,-2,10,-6,-6,-9,-6,9,7,2,-8,7,3,-8,-4,-6,9,-5,-9], dtype = "int64")#candidate|16028|(294,)|const|int64
call_16027 = relay.TupleGetItem(func_12154_call(relay.reshape(const_16028.astype('int64'), [294,])), 3)
call_16029 = relay.TupleGetItem(func_12156_call(relay.reshape(const_16028.astype('int64'), [294,])), 3)
output = relay.Tuple([call_16007,call_16009,call_16027,const_16028,])
output2 = relay.Tuple([call_16008,call_16010,call_16029,const_16028,])
func_16031 = relay.Function([], output)
mod['func_16031'] = func_16031
mod = relay.transform.InferType()(mod)
output = func_16031()
func_16032 = relay.Function([], output)
mutated_mod['func_16032'] = func_16032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8829_call = mod.get_global_var('func_8829')
func_8830_call = mutated_mod.get_global_var('func_8830')
call_16041 = relay.TupleGetItem(func_8829_call(), 1)
call_16042 = relay.TupleGetItem(func_8830_call(), 1)
func_13311_call = mod.get_global_var('func_13311')
func_13315_call = mutated_mod.get_global_var('func_13315')
var_16050 = relay.var("var_16050", dtype = "float32", shape = (312,))#candidate|16050|(312,)|var|float32
const_16051 = relay.const([5.038763,2.908784,-2.830806,7.699608,6.330111,4.052694,-7.683166,-3.180152,4.489938,-4.362520,5.844059,-7.898568,-7.831525,4.057202,-9.353889,5.611257,-3.327335,-3.631849,0.454787,4.551683,3.177279,3.087953,-1.245310,-4.677471,2.389211,8.989435,-2.860270,4.235581,3.499888,7.589557,0.528573,1.375652,4.308460,-4.570505,5.982948,0.096202,-1.565636,-3.194109,-2.903876,4.784063,8.135393,6.834236,-0.647472,5.126758,4.755083,-0.440712,0.555956,-6.993965,6.081082,8.617716,-0.996607,5.595670,-7.397663,3.216231,-9.201901,-8.929675,7.806990,-7.602773,-7.348736,8.314471,-8.679356,-6.519382,5.930112,-8.047343,-9.213930,-8.398200,8.988297,2.780928,3.197770,-8.222862,5.555126,-0.686761,-4.020334,4.407393,-8.846149,-1.981984,-5.877365,-2.012870,1.674888,-0.275320,1.286705,-3.355519,-2.562915,-3.333803,8.643704,-7.194808,8.564422,7.191633,2.871376,5.016526,-5.165450,-9.912060,-2.120074,-3.653998,3.118821,5.198102,6.753656,9.670901,-3.109788,-8.746622,4.952603,-1.995700,0.551575,-6.650164,-4.593299,-0.057979,-1.607980,3.395459,0.740073,-2.800213,-3.320284,4.713983,-1.858958,-3.174068,-1.898692,-2.478229,1.809032,8.336189,-5.442324,5.046136,9.890038,1.827623,-4.417677,-9.406126,5.953724,-2.691076,8.661126,7.749817,8.213603,-4.316374,-9.017044,1.823577,1.609923,-4.131358,-9.960519,2.701555,6.838581,6.945844,5.942679,-8.634969,6.488197,6.705805,-7.636512,-4.742900,-3.428992,-7.760305,1.122225,-0.765107,-6.451210,-8.785375,-9.394705,-9.669701,1.827268,4.641090,2.513328,6.280183,-1.150684,5.233726,6.937539,-8.956714,-8.339647,0.630868,-1.450795,6.213237,-0.014552,-1.071658,4.478735,0.896826,-9.738363,7.898048,-9.224321,-7.008132,1.339671,2.363070,9.783232,-9.209886,-3.879350,4.119724,5.089030,2.972451,6.005606,-7.830982,-0.329831,6.138460,-4.042677,7.295191,1.900846,-7.037857,6.773976,4.233821,9.853101,0.076009,8.940407,2.747058,7.176906,9.312055,-0.714150,7.333002,5.140090,0.922422,9.220031,-9.951014,0.710890,-5.748283,-0.412791,1.740551,4.442167,-5.082447,-3.008150,-3.472584,-2.285878,-9.661197,5.970656,-5.663847,-8.756148,9.322019,-2.375691,-6.747693,-3.071202,-0.334219,-8.565831,-4.860349,-7.777564,6.443656,-0.413006,-5.253644,3.719366,2.737343,-3.129412,0.479761,-1.408486,3.768566,-5.618600,-8.795878,-7.677019,2.101109,-8.754792,-9.776500,-4.017411,2.213054,0.521044,-2.781770,-4.125460,-0.618173,8.724901,1.558479,-2.083779,-1.234306,-8.152518,7.609498,5.445414,-0.926112,-2.583314,7.746612,-8.760627,-7.486100,-5.762960,-3.923904,-9.459413,-3.865254,-8.166911,6.791428,-4.185276,5.771062,-2.753457,5.719900,4.662960,-5.277344,-7.511600,6.278109,-9.659992,8.345186,-9.798308,-0.314246,-1.099980,-2.524577,-1.124857,3.169020,2.018326,-3.980972,0.670413,6.078996,9.543952,-6.344768,3.769409,-5.438847,5.941342,4.199020,8.841410,2.273125,-6.680509,-1.229355,0.469402,6.794243,-7.214788,8.611059,7.641192,-6.425807,-7.607555,-0.857265,-3.613186,6.226758,-5.382875,9.549394,-9.407666,4.963515,-8.708157,-0.114842,3.999357,-3.155306,2.861537,5.335099,9.704296,7.757774,2.340033,5.886526,-7.546952,4.411121,7.045634,-8.507574,6.742134,-2.337374,9.295844,-9.823762,-0.228643,-9.299793,-4.695639,-5.644369,8.158200,8.199010,-7.768798,9.041736,9.234304,3.818749,7.523824,5.334759,-7.794373,9.301088,-2.764683,-5.792166,-4.765612,-9.372154,4.150337,-2.269001,-4.477801,8.827570,5.114307,6.831552,9.752645,5.246001,-1.178702,-2.694313,2.811605,-5.972488,2.327310,-5.239652,9.666079,-1.417924,-7.010272,4.233468,-2.646282,9.923284,8.821836,-4.903946,7.461004,-1.632885,-7.955051,-3.830562,-0.222648,2.159438,-5.056945,8.928638,-4.852078,-8.905945,0.966416,1.957881,-7.513883,9.172651,9.302004,-8.317299,1.362192,-6.031775,5.969181,9.627670,7.404515,1.697799,3.404357,6.515866,-8.784352,-5.403196,-6.779957,7.124088,-3.688842,-2.055249,3.550330,-1.368791,8.788546,-7.744890,-9.503547,-1.419345,4.135120,1.672016,8.403578,-6.669372,-5.155591,9.225286,5.802630,1.952456,6.806243,5.892027,-4.139472,2.674076,3.302357,9.067334,-5.751241,9.102941,9.600178,-0.951812,-0.692075,1.227726,1.049452,5.388714,6.129453,-1.899981,-6.260110,1.387010,3.965951,5.250653,7.832341,-7.055254,-0.379045,2.788511,-7.616169,-5.096689,-1.167738,8.718602,-2.675141,-2.866709,8.914840,-2.796491,1.913274,5.241476,7.733178,1.646477,8.717686,-7.381606,4.038797,4.991960,8.392178,-5.396853,2.563900,9.213873,-6.570124,-0.326679,-0.923926,-8.185829,-6.662949,-7.532916,-2.741760,-1.365622,-2.150288,3.319594,-8.477429,9.691688,3.468696,-6.845528,-7.818894,-1.373578], dtype = "float64")#candidate|16051|(468,)|const|float64
call_16049 = relay.TupleGetItem(func_13311_call(relay.reshape(var_16050.astype('float32'), [1, 312]), relay.reshape(const_16051.astype('float64'), [1, 468]), ), 0)
call_16052 = relay.TupleGetItem(func_13315_call(relay.reshape(var_16050.astype('float32'), [1, 312]), relay.reshape(const_16051.astype('float64'), [1, 468]), ), 0)
func_14713_call = mod.get_global_var('func_14713')
func_14714_call = mutated_mod.get_global_var('func_14714')
call_16056 = func_14713_call()
call_16057 = func_14713_call()
func_5419_call = mod.get_global_var('func_5419')
func_5421_call = mutated_mod.get_global_var('func_5421')
call_16068 = relay.TupleGetItem(func_5419_call(relay.reshape(call_16041.astype('float64'), [11, 14, 11])), 0)
call_16069 = relay.TupleGetItem(func_5421_call(relay.reshape(call_16041.astype('float64'), [11, 14, 11])), 0)
output = relay.Tuple([call_16041,call_16049,var_16050,const_16051,call_16056,call_16068,])
output2 = relay.Tuple([call_16042,call_16052,var_16050,const_16051,call_16057,call_16069,])
func_16082 = relay.Function([var_16050,], output)
mod['func_16082'] = func_16082
mod = relay.transform.InferType()(mod)
var_16083 = relay.var("var_16083", dtype = "float32", shape = (312,))#candidate|16083|(312,)|var|float32
output = func_16082(var_16083)
func_16084 = relay.Function([var_16083], output)
mutated_mod['func_16084'] = func_16084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10818_call = mod.get_global_var('func_10818')
func_10820_call = mutated_mod.get_global_var('func_10820')
call_16110 = func_10818_call()
call_16111 = func_10818_call()
output = relay.Tuple([call_16110,])
output2 = relay.Tuple([call_16111,])
func_16132 = relay.Function([], output)
mod['func_16132'] = func_16132
mod = relay.transform.InferType()(mod)
output = func_16132()
func_16133 = relay.Function([], output)
mutated_mod['func_16133'] = func_16133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11747_call = mod.get_global_var('func_11747')
func_11749_call = mutated_mod.get_global_var('func_11749')
call_16174 = func_11747_call()
call_16175 = func_11747_call()
output = call_16174
output2 = call_16175
func_16186 = relay.Function([], output)
mod['func_16186'] = func_16186
mod = relay.transform.InferType()(mod)
output = func_16186()
func_16187 = relay.Function([], output)
mutated_mod['func_16187'] = func_16187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10518_call = mod.get_global_var('func_10518')
func_10519_call = mutated_mod.get_global_var('func_10519')
call_16203 = relay.TupleGetItem(func_10518_call(), 0)
call_16204 = relay.TupleGetItem(func_10519_call(), 0)
output = relay.Tuple([call_16203,])
output2 = relay.Tuple([call_16204,])
func_16209 = relay.Function([], output)
mod['func_16209'] = func_16209
mod = relay.transform.InferType()(mod)
output = func_16209()
func_16210 = relay.Function([], output)
mutated_mod['func_16210'] = func_16210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13885_call = mod.get_global_var('func_13885')
func_13886_call = mutated_mod.get_global_var('func_13886')
call_16216 = relay.TupleGetItem(func_13885_call(), 0)
call_16217 = relay.TupleGetItem(func_13886_call(), 0)
var_16220 = relay.var("var_16220", dtype = "float32", shape = (3, 99))#candidate|16220|(3, 99)|var|float32
bop_16221 = relay.power(call_16216.astype('float32'), relay.reshape(var_16220.astype('float32'), relay.shape_of(call_16216))) # shape=(3, 99)
bop_16224 = relay.power(call_16217.astype('float32'), relay.reshape(var_16220.astype('float32'), relay.shape_of(call_16217))) # shape=(3, 99)
bop_16226 = relay.bitwise_or(var_16220.astype('uint64'), relay.reshape(call_16216.astype('uint64'), relay.shape_of(var_16220))) # shape=(3, 99)
bop_16229 = relay.bitwise_or(var_16220.astype('uint64'), relay.reshape(call_16217.astype('uint64'), relay.shape_of(var_16220))) # shape=(3, 99)
output = relay.Tuple([bop_16221,bop_16226,])
output2 = relay.Tuple([bop_16224,bop_16229,])
func_16230 = relay.Function([var_16220,], output)
mod['func_16230'] = func_16230
mod = relay.transform.InferType()(mod)
var_16231 = relay.var("var_16231", dtype = "float32", shape = (3, 99))#candidate|16231|(3, 99)|var|float32
output = func_16230(var_16231)
func_16232 = relay.Function([var_16231], output)
mutated_mod['func_16232'] = func_16232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16132_call = mod.get_global_var('func_16132')
func_16133_call = mutated_mod.get_global_var('func_16133')
call_16341 = relay.TupleGetItem(func_16132_call(), 0)
call_16342 = relay.TupleGetItem(func_16133_call(), 0)
func_10072_call = mod.get_global_var('func_10072')
func_10074_call = mutated_mod.get_global_var('func_10074')
var_16351 = relay.var("var_16351", dtype = "float32", shape = (312,))#candidate|16351|(312,)|var|float32
call_16350 = relay.TupleGetItem(func_10072_call(relay.reshape(var_16351.astype('float32'), [312,])), 0)
call_16352 = relay.TupleGetItem(func_10074_call(relay.reshape(var_16351.astype('float32'), [312,])), 0)
output = relay.Tuple([call_16341,call_16350,var_16351,])
output2 = relay.Tuple([call_16342,call_16352,var_16351,])
func_16370 = relay.Function([var_16351,], output)
mod['func_16370'] = func_16370
mod = relay.transform.InferType()(mod)
var_16371 = relay.var("var_16371", dtype = "float32", shape = (312,))#candidate|16371|(312,)|var|float32
output = func_16370(var_16371)
func_16372 = relay.Function([var_16371], output)
mutated_mod['func_16372'] = func_16372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11478_call = mod.get_global_var('func_11478')
func_11479_call = mutated_mod.get_global_var('func_11479')
call_16445 = relay.TupleGetItem(func_11478_call(), 0)
call_16446 = relay.TupleGetItem(func_11479_call(), 0)
output = relay.Tuple([call_16445,])
output2 = relay.Tuple([call_16446,])
func_16467 = relay.Function([], output)
mod['func_16467'] = func_16467
mod = relay.transform.InferType()(mod)
mutated_mod['func_16467'] = func_16467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16467_call = mutated_mod.get_global_var('func_16467')
call_16468 = func_16467_call()
output = call_16468
func_16469 = relay.Function([], output)
mutated_mod['func_16469'] = func_16469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13055_call = mod.get_global_var('func_13055')
func_13057_call = mutated_mod.get_global_var('func_13057')
call_16486 = func_13055_call()
call_16487 = func_13055_call()
func_15262_call = mod.get_global_var('func_15262')
func_15265_call = mutated_mod.get_global_var('func_15265')
var_16500 = relay.var("var_16500", dtype = "bool", shape = (792,))#candidate|16500|(792,)|var|bool
call_16499 = func_15262_call(relay.reshape(var_16500.astype('bool'), [12, 11, 6]), relay.reshape(var_16500.astype('bool'), [12, 11, 6]), )
call_16501 = func_15262_call(relay.reshape(var_16500.astype('bool'), [12, 11, 6]), relay.reshape(var_16500.astype('bool'), [12, 11, 6]), )
func_13524_call = mod.get_global_var('func_13524')
func_13526_call = mutated_mod.get_global_var('func_13526')
call_16512 = relay.TupleGetItem(func_13524_call(), 0)
call_16513 = relay.TupleGetItem(func_13526_call(), 0)
output = relay.Tuple([call_16486,call_16499,var_16500,call_16512,])
output2 = relay.Tuple([call_16487,call_16501,var_16500,call_16513,])
func_16526 = relay.Function([var_16500,], output)
mod['func_16526'] = func_16526
mod = relay.transform.InferType()(mod)
var_16527 = relay.var("var_16527", dtype = "bool", shape = (792,))#candidate|16527|(792,)|var|bool
output = func_16526(var_16527)
func_16528 = relay.Function([var_16527], output)
mutated_mod['func_16528'] = func_16528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10806_call = mod.get_global_var('func_10806')
func_10807_call = mutated_mod.get_global_var('func_10807')
call_16530 = func_10806_call()
call_16531 = func_10806_call()
output = relay.Tuple([call_16530,])
output2 = relay.Tuple([call_16531,])
func_16540 = relay.Function([], output)
mod['func_16540'] = func_16540
mod = relay.transform.InferType()(mod)
output = func_16540()
func_16541 = relay.Function([], output)
mutated_mod['func_16541'] = func_16541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12398_call = mod.get_global_var('func_12398')
func_12399_call = mutated_mod.get_global_var('func_12399')
call_16556 = relay.TupleGetItem(func_12398_call(), 0)
call_16557 = relay.TupleGetItem(func_12399_call(), 0)
func_11132_call = mod.get_global_var('func_11132')
func_11135_call = mutated_mod.get_global_var('func_11135')
var_16562 = relay.var("var_16562", dtype = "float64", shape = (1694,))#candidate|16562|(1694,)|var|float64
call_16561 = relay.TupleGetItem(func_11132_call(relay.reshape(var_16562.astype('float64'), [1694,])), 1)
call_16563 = relay.TupleGetItem(func_11135_call(relay.reshape(var_16562.astype('float64'), [1694,])), 1)
output = relay.Tuple([call_16556,call_16561,var_16562,])
output2 = relay.Tuple([call_16557,call_16563,var_16562,])
func_16564 = relay.Function([var_16562,], output)
mod['func_16564'] = func_16564
mod = relay.transform.InferType()(mod)
mutated_mod['func_16564'] = func_16564
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16565 = relay.var("var_16565", dtype = "float64", shape = (1694,))#candidate|16565|(1694,)|var|float64
func_16564_call = mutated_mod.get_global_var('func_16564')
call_16566 = func_16564_call(var_16565)
output = call_16566
func_16567 = relay.Function([var_16565], output)
mutated_mod['func_16567'] = func_16567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11478_call = mod.get_global_var('func_11478')
func_11479_call = mutated_mod.get_global_var('func_11479')
call_16588 = relay.TupleGetItem(func_11478_call(), 0)
call_16589 = relay.TupleGetItem(func_11479_call(), 0)
func_11207_call = mod.get_global_var('func_11207')
func_11208_call = mutated_mod.get_global_var('func_11208')
call_16599 = relay.TupleGetItem(func_11207_call(), 1)
call_16600 = relay.TupleGetItem(func_11208_call(), 1)
func_16540_call = mod.get_global_var('func_16540')
func_16541_call = mutated_mod.get_global_var('func_16541')
call_16612 = relay.TupleGetItem(func_16540_call(), 0)
call_16613 = relay.TupleGetItem(func_16541_call(), 0)
output = relay.Tuple([call_16588,call_16599,call_16612,])
output2 = relay.Tuple([call_16589,call_16600,call_16613,])
func_16631 = relay.Function([], output)
mod['func_16631'] = func_16631
mod = relay.transform.InferType()(mod)
output = func_16631()
func_16632 = relay.Function([], output)
mutated_mod['func_16632'] = func_16632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8829_call = mod.get_global_var('func_8829')
func_8830_call = mutated_mod.get_global_var('func_8830')
call_16658 = relay.TupleGetItem(func_8829_call(), 1)
call_16659 = relay.TupleGetItem(func_8830_call(), 1)
uop_16682 = relay.atan(call_16658.astype('float32')) # shape=(11, 14, 11)
uop_16684 = relay.atan(call_16659.astype('float32')) # shape=(11, 14, 11)
output = uop_16682
output2 = uop_16684
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

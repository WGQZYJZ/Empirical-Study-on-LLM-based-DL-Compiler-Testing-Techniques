==========mod==========
#[version = "0.0.5"]
def @func_1283(%var_1275: Tensor[(16, 8, 6), uint64]) -> Tensor[(16, 8, 6), uint64] {
  %0 = cast(meta[relay.Constant][0] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1 = cast(%var_1275, dtype="uint64") /* ty=Tensor[(16, 8, 6), uint64] */;
  bitwise_xor(%0, %1) /* ty=Tensor[(16, 8, 6), uint64] */
}

def @func_8800() -> Tensor[(8, 3, 7), float32] {
  @func_8651() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_12733() -> (Tensor[(7, 2, 13), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %2 = @func_11362() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) */;
  %3 = %2.2;
  %4 = @func_11747() /* ty=Tensor[(8, 3, 7), float32] */;
  %5 = @func_10806() /* ty=Tensor[(8, 3, 7), float32] */;
  %6 = @func_10670() /* ty=Tensor[(8, 3, 7), float32] */;
  (%3, %4, %5, %6)
}

def @func_16186() -> Tensor[(8, 3, 7), float32] {
  @func_11747() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_10897() -> Tensor[(8, 3, 7), float32] {
  %7 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %7.0
}

def @func_15786() -> (Tensor[(8, 3, 7), float32],) {
  %8 = @func_10441() /* ty=Tensor[(8, 3, 7), float32] */;
  (%8,)
}

def @func_6055(%var_6049: Tensor[(7, 2, 13), float32]) -> Tensor[(7, 2, 13), float32] {
  %9 = cast(%var_6049, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
  sin(%9) /* ty=Tensor[(7, 2, 13), float32] */
}

def @func_13271(%var_13263: Tensor[(2, 216), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(1, 432), bool], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(2, 216), float32], Tensor[(2, 216), float64]) {
  %10 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %11 = cast(meta[relay.Constant][2] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %12 = reshape(%11, newshape=[11, 14, 1]) /* ty=Tensor[(11, 14, 1), float64] */;
  %13 = @func_711(%12) /* ty=(Tensor[(11, 14, 1), float64],) */;
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 432), bool] */, dtype="bool") /* ty=Tensor[(1, 432), bool] */;
  %15 = reshape(%14, newshape=[2, 216]) /* ty=Tensor[(2, 216), bool] */;
  %16 = @func_10877(%15) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(16, 8, 6), uint64], Tensor[(2, 216), bool]) */;
  %17 = %16.2;
  %18 = cast(%17, dtype="float64") /* ty=Tensor[(2, 216), float64] */;
  %19 = rsqrt(%18) /* ty=Tensor[(2, 216), float64] */;
  %20 = cast(%19, dtype="float32") /* ty=Tensor[(2, 216), float32] */;
  %21 = sqrt(%20) /* ty=Tensor[(2, 216), float32] */;
  %22 = cast(%var_13263, dtype="float32") /* ty=Tensor[(2, 216), float32] */;
  %23 = shape_of(%21, dtype="int32") /* ty=Tensor[(2), int32] */;
  %24 = cast(%21, dtype="float32") /* ty=Tensor[(2, 216), float32] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %26 = cast(%19, dtype="float64") /* ty=Tensor[(2, 216), float64] */;
  %27 = %10.2;
  %28 = @func_9370() /* ty=Tensor[(8, 3, 7), float32] */;
  %29 = @func_8651() /* ty=Tensor[(8, 3, 7), float32] */;
  %30 = %13.0;
  %31 = divide(%24, %25) /* ty=Tensor[(2, 216), float32] */;
  %32 = erf(%26) /* ty=Tensor[(2, 216), float64] */;
  (%27, meta[relay.Constant][1] /* ty=Tensor[(1, 432), bool] */, %28, %29, %30, meta[relay.Constant][2] /* ty=Tensor[(154), float64] */, %31, %32)
}

def @func_10818() -> Tensor[(8, 3, 7), float64] {
  %33 = @func_9104() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(11, 14, 11), float64]) */;
  %33.0
}

def @func_14399() -> Tensor[(8, 3, 7), float32] {
  @func_10897() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_12939(%var_12912: Tensor[(1320), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(336), float64], Tensor[(8), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1320), float32]) {
  %34 = @func_10518() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %36 = cast(%var_12912, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %37 = cast(meta[relay.Constant][4] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %38 = reshape(%35, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float64] */;
  %39 = reshape(%36, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %40 = reshape(%37, newshape=[8, 1]) /* ty=Tensor[(8, 1), float32] */;
  %41 = @func_7571(%38, %39, %40) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(11, 14, 1), float64], Tensor[(1320), float64], Tensor[(154), float64], Tensor[(2, 2, 2), float32], Tensor[(8, 1), float32]) */;
  %42 = %41.1;
  %43 = cast(%var_12912, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %44 = cast(%42, dtype="float32") /* ty=Tensor[(11, 14, 1), float32] */;
  %45 = @func_10441() /* ty=Tensor[(8, 3, 7), float32] */;
  %46 = %34.0;
  %47 = floor_divide(%43, %44) /* ty=Tensor[(11, 14, 1320), float32] */;
  (%45, meta[relay.Constant][3] /* ty=Tensor[(336), float64] */, meta[relay.Constant][4] /* ty=Tensor[(8), float32] */, %46, %47)
}

def @func_16(%var_11: Tensor[(15, 4, 9), float32]) -> (Tensor[(15, 4, 9), float32],) {
  %48 = cast(%var_11, dtype="float32") /* ty=Tensor[(15, 4, 9), float32] */;
  %49 = acosh(%48) /* ty=Tensor[(15, 4, 9), float32] */;
  (%49,)
}

def @func_15262(%var_15242: Tensor[(12, 11, 6), bool], %var_15243: Tensor[(12, 11, 6), bool]) -> Tensor[(12, 11, 6), bool] {
  %50 = cast(%var_15243, dtype="bool") /* ty=Tensor[(12, 11, 6), bool] */;
  %51 = shape_of(%var_15242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%var_15242, dtype="bool") /* ty=Tensor[(12, 11, 6), bool] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%52, %53) /* ty=Tensor[(12, 11, 6), bool] */
}

def @func_2943(%var_2937: Tensor[(2, 13, 16), uint32]) -> Tensor[(2, 13, 16), uint32] {
  %54 = cast(meta[relay.Constant][5] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %55 = cast(%var_2937, dtype="uint32") /* ty=Tensor[(2, 13, 16), uint32] */;
  maximum(%54, %55) /* ty=Tensor[(2, 13, 16), uint32] */
}

def @func_7482(%var_7471: Tensor[(2, 2, 2), float32], %var_7472: Tensor[(2, 2, 2), float32]) -> Tensor[(2, 2, 2), float32] {
  %56 = cast(%var_7472, dtype="float32") /* ty=Tensor[(2, 2, 2), float32] */;
  %57 = shape_of(%var_7471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %58 = cast(%var_7471, dtype="float32") /* ty=Tensor[(2, 2, 2), float32] */;
  %59 = dyn.reshape(%56, %57, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%58, %59) /* ty=Tensor[(2, 2, 2), float32] */
}

def @func_11207() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %60 = @func_10092() /* ty=Tensor[(8, 3, 7), float32] */;
  %61 = @func_8800() /* ty=Tensor[(8, 3, 7), float32] */;
  (%60, %61)
}

def @func_10113() -> (Tensor[(9, 14, 2), float64],) {
  %62 = cast(meta[relay.Constant][7] /* ty=Tensor[(9, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 14, 2), float64] */;
  %63 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(9, 14, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(meta[relay.Constant][6] /* ty=Tensor[(9, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 14, 2), float64] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %66 = divide(%64, %65) /* ty=Tensor[(9, 14, 2), float64] */;
  %67 = cast(%66, dtype="float64") /* ty=Tensor[(9, 14, 2), float64] */;
  %68 = log2(%67) /* ty=Tensor[(9, 14, 2), float64] */;
  (%68,)
}

def @func_9631() -> Tensor[(8, 3, 7), float32] {
  @func_8651() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_14713() -> Tensor[(378), float64] {
  %69 = @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */;
  %69.2
}

def @func_9104() -> (Tensor[(8, 3, 7), float64], Tensor[(11, 14, 11), float64]) {
  %70 = @func_8651() /* ty=Tensor[(8, 3, 7), float32] */;
  %71 = cast(%70, dtype="float64") /* ty=Tensor[(8, 3, 7), float64] */;
  %72 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
  %73 = rsqrt(%71) /* ty=Tensor[(8, 3, 7), float64] */;
  %74 = %72.1;
  (%73, %74)
}

def @func_12154(%var_12132: Tensor[(294), int64]) -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(294), int64], Tensor[(16, 8, 6), uint64], Tensor[(768), uint64]) {
  %75 = @func_10483() /* ty=Tensor[(8, 3, 7), float32] */;
  %76 = cast(%75, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %77 = reshape(%76, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %78 = @func_11231() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) */;
  %79 = cast(%var_12132, dtype="int64") /* ty=Tensor[(294), int64] */;
  %80 = cast(%var_12132, dtype="int64") /* ty=Tensor[(294), int64] */;
  %81 = reshape(%79, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), int64] */;
  %82 = reshape(%80, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), int64] */;
  %83 = cast(meta[relay.Constant][8] /* ty=Tensor[(768), uint64] */, dtype="uint64") /* ty=Tensor[(768), uint64] */;
  %84 = reshape(%83, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), uint64] */;
  %85 = @func_10465(%77) /* ty=Tensor[(8, 3, 7), float32] */;
  %86 = %78.0;
  %87 = @func_4235(%81, %82) /* ty=Tensor[(3, 14, 7), float64] */;
  %88 = @func_1283(%84) /* ty=Tensor[(16, 8, 6), uint64] */;
  (%75, %85, %86, %87, %var_12132, %88, meta[relay.Constant][8] /* ty=Tensor[(768), uint64] */)
}

def @func_4000(%var_3993: Tensor[(6, 9, 7), float64]) -> Tensor[(6, 9, 7), float64] {
  %89 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
  %90 = shape_of(%var_3993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%var_3993, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%91, %92) /* ty=Tensor[(6, 9, 7), float64] */
}

def @func_426(%var_419: Tensor[(4, 10, 14), float64], %var_424: Tensor[(540), float32]) -> (Tensor[(4, 10, 14), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) {
  %93 = cast(%var_419, dtype="float64") /* ty=Tensor[(4, 10, 14), float64] */;
  %94 = cast(%var_424, dtype="float32") /* ty=Tensor[(540), float32] */;
  %95 = reshape(%94, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %96 = @func_16(%95) /* ty=(Tensor[(15, 4, 9), float32],) */;
  %97 = sqrt(%93) /* ty=Tensor[(4, 10, 14), float64] */;
  %98 = %96.0;
  (%97, %98, %var_424)
}

def @func_10311() -> (Tensor[(8, 3, 7), float32],) {
  %99 = @func_10274() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %100 = %99.0;
  %101 = cast(%100, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %102 = asin(%101) /* ty=Tensor[(8, 3, 7), float32] */;
  (%102,)
}

def @func_711(%var_689: Tensor[(11, 14, 1), float64]) -> (Tensor[(11, 14, 1), float64],) {
  %103 = cast(%var_689, dtype="float64") /* ty=Tensor[(11, 14, 1), float64] */;
  %104 = erf(%103) /* ty=Tensor[(11, 14, 1), float64] */;
  (%104,)
}

def @func_13123() -> Tensor[(182), float32] {
  %105 = @func_12313() /* ty=(Tensor[(182), float32],) */;
  %105.0
}

def @func_16002(%var_15969: Tensor[(5, 4, 8), float64]) -> Tensor[(5, 4, 8), float64] {
  %106 = cast(meta[relay.Constant][10] /* ty=Tensor[(5, 4, 8), float64] */, dtype="bool") /* ty=Tensor[(5, 4, 8), bool] */;
  %107 = shape_of(%var_15969, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%var_15969, dtype="bool") /* ty=Tensor[(5, 4, 8), bool] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %110 = less(%108, %109) /* ty=Tensor[(5, 4, 8), bool] */;
  %111 = cast(%110, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
  sqrt(%111) /* ty=Tensor[(5, 4, 8), float64] */
}

def @func_11079() -> (Tensor[(8, 3, 7), float64],) {
  %112 = @func_10251() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32]) */;
  %113 = %112.0;
  (%113,)
}

def @func_14654() -> Tensor[(11, 14, 11), float64] {
  %114 = @func_10922() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) */;
  %114.0
}

def @func_5218(%var_5190: Tensor[(12, 3, 12), bool], %var_5191: Tensor[(12, 3, 12), bool], %var_5195: Tensor[(12, 3, 12), bool]) -> (Tensor[(16, 8, 6), uint64], Tensor[(32, 24), uint64], Tensor[(12, 3, 12), int8], Tensor[(12, 3, 12), float64]) {
  %115 = cast(meta[relay.Constant][11] /* ty=Tensor[(32, 24), uint64] */, dtype="uint64") /* ty=Tensor[(32, 24), uint64] */;
  %116 = reshape(%115, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), uint64] */;
  %117 = cast(%var_5191, dtype="bool") /* ty=Tensor[(12, 3, 12), bool] */;
  %118 = shape_of(%var_5190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%var_5190, dtype="bool") /* ty=Tensor[(12, 3, 12), bool] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %121 = logical_or(%119, %120) /* ty=Tensor[(12, 3, 12), bool] */;
  %122 = cast(%var_5195, dtype="float64") /* ty=Tensor[(12, 3, 12), float64] */;
  %123 = shape_of(%var_5190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %124 = cast(%var_5190, dtype="float64") /* ty=Tensor[(12, 3, 12), float64] */;
  %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %126 = mod(%124, %125) /* ty=Tensor[(12, 3, 12), float64] */;
  %127 = cast(%126, dtype="int8") /* ty=Tensor[(12, 3, 12), int8] */;
  %128 = shape_of(%121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%121, dtype="int8") /* ty=Tensor[(12, 3, 12), int8] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %131 = cast(%121, dtype="float64") /* ty=Tensor[(12, 3, 12), float64] */;
  %132 = @func_1283(%116) /* ty=Tensor[(16, 8, 6), uint64] */;
  %133 = bitwise_xor(%129, %130) /* ty=Tensor[(12, 3, 12), int8] */;
  %134 = asin(%131) /* ty=Tensor[(12, 3, 12), float64] */;
  (%132, meta[relay.Constant][11] /* ty=Tensor[(32, 24), uint64] */, %133, %134)
}

def @func_14786(%var_14734: Tensor[(16, 11, 14), float32], %var_14735: Tensor[(16, 11, 14), float32]) -> (Tensor[(16, 11, 14), int64], Tensor[(8, 3, 7), float32], Tensor[(16, 11, 14), float64], Tensor[(8, 3, 7), float32]) {
  %135 = cast(%var_14735, dtype="float32") /* ty=Tensor[(16, 11, 14), float32] */;
  %136 = shape_of(%var_14734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %137 = cast(%var_14734, dtype="float32") /* ty=Tensor[(16, 11, 14), float32] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %139 = power(%137, %138) /* ty=Tensor[(16, 11, 14), float32] */;
  %140 = cast(%139, dtype="float32") /* ty=Tensor[(16, 11, 14), float32] */;
  %141 = sqrt(%140) /* ty=Tensor[(16, 11, 14), float32] */;
  %142 = cast(%var_14734, dtype="int64") /* ty=Tensor[(16, 11, 14), int64] */;
  %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%141, dtype="int64") /* ty=Tensor[(16, 11, 14), int64] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %146 = @func_11478() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %147 = cast(%var_14734, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
  %148 = atan(%147) /* ty=Tensor[(16, 11, 14), float64] */;
  %149 = cast(%148, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
  %150 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %151 = subtract(%144, %145) /* ty=Tensor[(16, 11, 14), int64] */;
  %152 = %146.0;
  %153 = sin(%149) /* ty=Tensor[(16, 11, 14), float64] */;
  %154 = %150.1;
  (%151, %152, %153, %154)
}

def @func_10092() -> Tensor[(8, 3, 7), float32] {
  %155 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
  %155.0
}

def @func_10518() -> (Tensor[(8, 3, 7), float32],) {
  %156 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %157 = %156.1;
  (%157,)
}

def @func_11362() -> (Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) {
  %158 = @func_10113() /* ty=(Tensor[(9, 14, 2), float64],) */;
  %159 = %158.0;
  %160 = cast(%159, dtype="float32") /* ty=Tensor[(9, 14, 2), float32] */;
  %161 = cast(meta[relay.Constant][12] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %162 = reshape(%161, newshape=[7, 2, 13]) /* ty=Tensor[(7, 2, 13), float32] */;
  %163 = @func_10441() /* ty=Tensor[(8, 3, 7), float32] */;
  %164 = sqrt(%160) /* ty=Tensor[(9, 14, 2), float32] */;
  %165 = @func_6055(%162) /* ty=Tensor[(7, 2, 13), float32] */;
  (%163, %164, %165, meta[relay.Constant][12] /* ty=Tensor[(182), float32] */)
}

def @func_13524() -> (Tensor[(8, 3, 7), float32],) {
  %166 = @func_10092() /* ty=Tensor[(8, 3, 7), float32] */;
  (%166,)
}

def @func_9317() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %167 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %168 = %167.0;
  %169 = @func_8523() /* ty=Tensor[(8, 3, 7), float32] */;
  %170 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
  (%168, %169, %170)
}

def @func_12808() -> (Tensor[(8, 3, 7), float32], Tensor[(3, 99), float32]) {
  %171 = @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */;
  %172 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
  %173 = %171.0;
  (%172, %173)
}

def @func_1636(%var_1604: Tensor[(12, 11, 10), float64], %var_1609: Tensor[(22, 7), float64], %var_1618: Tensor[(22, 7), float32]) -> (Tensor[(12, 11, 10), float64], Tensor[(11, 14, 1), float64], Tensor[(22, 7), uint64]) {
  %174 = cast(%var_1604, dtype="float64") /* ty=Tensor[(12, 11, 10), float64] */;
  %175 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(12, 11, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(12, 11, 10), float64] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %178 = cast(%var_1609, dtype="float64") /* ty=Tensor[(22, 7), float64] */;
  %179 = reshape(%178, newshape=[11, 14, 1]) /* ty=Tensor[(11, 14, 1), float64] */;
  %180 = @func_711(%179) /* ty=(Tensor[(11, 14, 1), float64],) */;
  %181 = cast(%var_1609, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
  %182 = atanh(%181) /* ty=Tensor[(22, 7), float32] */;
  %183 = cast(%var_1618, dtype="uint64") /* ty=Tensor[(22, 7), uint64] */;
  %184 = shape_of(%182, dtype="int32") /* ty=Tensor[(2), int32] */;
  %185 = cast(%182, dtype="uint64") /* ty=Tensor[(22, 7), uint64] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %187 = maximum(%176, %177) /* ty=Tensor[(12, 11, 10), float64] */;
  %188 = %180.0;
  %189 = bitwise_or(%185, %186) /* ty=Tensor[(22, 7), uint64] */;
  (%187, %188, %189)
}

def @func_14892(%var_14870: Tensor[(616, 4), float32]) -> (Tensor[(8, 3, 7), float64], Tensor[(16, 11, 14), int64], Tensor[(616, 4), float32], Tensor[(8, 3, 7), float32]) {
  %190 = @func_11079() /* ty=(Tensor[(8, 3, 7), float64],) */;
  %191 = cast(%var_14870, dtype="float32") /* ty=Tensor[(616, 4), float32] */;
  %192 = cast(%var_14870, dtype="float32") /* ty=Tensor[(616, 4), float32] */;
  %193 = reshape(%191, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float32] */;
  %194 = reshape(%192, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float32] */;
  %195 = @func_14786(%193, %194) /* ty=(Tensor[(16, 11, 14), int64], Tensor[(8, 3, 7), float32], Tensor[(16, 11, 14), float64], Tensor[(8, 3, 7), float32]) */;
  %196 = %190.0;
  %197 = %195.0;
  %198 = @func_8800() /* ty=Tensor[(8, 3, 7), float32] */;
  (%196, %197, %var_14870, %198)
}

def @func_9812(%var_9751: Tensor[(8, 3, 7), float32], %var_9796: Tensor[(1694), float64]) -> (Tensor[(8, 3, 7), uint8], Tensor[(2, 2, 2), float32], Tensor[(336), float64], Tensor[(12, 110), float64], Tensor[(8), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(8, 3, 7), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) {
  %199 = @func_9723() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %200 = %199.0;
  %201 = cast(%var_9751, dtype="uint8") /* ty=Tensor[(8, 3, 7), uint8] */;
  %202 = shape_of(%200, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%200, dtype="uint8") /* ty=Tensor[(8, 3, 7), uint8] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %205 = cast(meta[relay.Constant][14] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %206 = cast(meta[relay.Constant][15] /* ty=Tensor[(12, 110), float64] */, dtype="float64") /* ty=Tensor[(12, 110), float64] */;
  %207 = cast(meta[relay.Constant][16] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %208 = reshape(%205, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float64] */;
  %209 = reshape(%206, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %210 = reshape(%207, newshape=[8, 1]) /* ty=Tensor[(8, 1), float32] */;
  %211 = @func_7571(%208, %209, %210) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(11, 14, 1), float64], Tensor[(1320), float64], Tensor[(154), float64], Tensor[(2, 2, 2), float32], Tensor[(8, 1), float32]) */;
  %212 = cast(%var_9796, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %213 = reshape(%212, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %214 = @func_5419(%213) /* ty=(Tensor[(11, 14, 11), float64],) */;
  %215 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %216 = cast(meta[relay.Constant][17] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %217 = reshape(%216, newshape=[7, 2, 13]) /* ty=Tensor[(7, 2, 13), float32] */;
  %218 = subtract(%203, %204) /* ty=Tensor[(8, 3, 7), uint8] */;
  %219 = %211.4;
  %220 = %214.0;
  %221 = %215.0;
  %222 = @func_6055(%217) /* ty=Tensor[(7, 2, 13), float32] */;
  (%218, %219, meta[relay.Constant][14] /* ty=Tensor[(336), float64] */, meta[relay.Constant][15] /* ty=Tensor[(12, 110), float64] */, meta[relay.Constant][16] /* ty=Tensor[(8), float32] */, %220, %var_9796, %221, %222, meta[relay.Constant][17] /* ty=Tensor[(182), float32] */)
}

def @func_9200() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %223 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %224 = @func_8523() /* ty=Tensor[(8, 3, 7), float32] */;
  %225 = %223.0;
  (%224, %225)
}

def @func_14365() -> (Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(7, 42), int64], Tensor[(3, 99), float64], Tensor[(8, 3, 7), float32]) {
  %226 = @func_10274() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %227 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 42), int64] */, dtype="int64") /* ty=Tensor[(7, 42), int64] */;
  %228 = reshape(%227, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %229 = @func_12154(%228) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(294), int64], Tensor[(16, 8, 6), uint64], Tensor[(768), uint64]) */;
  %230 = @func_12808() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(3, 99), float32]) */;
  %231 = %230.1;
  %232 = cast(%231, dtype="float32") /* ty=Tensor[(3, 99), float32] */;
  %233 = erf(%232) /* ty=Tensor[(3, 99), float32] */;
  %234 = cast(%233, dtype="float64") /* ty=Tensor[(3, 99), float64] */;
  %235 = @func_11207() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %236 = %226.0;
  %237 = %229.3;
  %238 = acos(%234) /* ty=Tensor[(3, 99), float64] */;
  %239 = %235.1;
  (%236, %237, meta[relay.Constant][18] /* ty=Tensor[(7, 42), int64] */, %238, %239)
}

def @func_11438() -> (Tensor[(8, 3, 7), float32], Tensor[(15, 4, 9), float32], Tensor[(540), float32], Tensor[(3, 14, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(154), float64]) {
  %240 = cast(meta[relay.Constant][19] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %241 = reshape(%240, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %242 = @func_16(%241) /* ty=(Tensor[(15, 4, 9), float32],) */;
  %243 = cast(meta[relay.Constant][20] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %244 = cast(meta[relay.Constant][20] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %245 = reshape(%243, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), int64] */;
  %246 = reshape(%244, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), int64] */;
  %247 = @func_4235(%245, %246) /* ty=Tensor[(3, 14, 7), float64] */;
  %248 = cast(meta[relay.Constant][20] /* ty=Tensor[(294), int64] */, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%247, dtype="uint32") /* ty=Tensor[(3, 14, 7), uint32] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %252 = logical_xor(%250, %251) /* ty=Tensor[(3, 14, 7), uint32] */;
  %253 = cast(%252, dtype="float32") /* ty=Tensor[(3, 14, 7), float32] */;
  %254 = cast(meta[relay.Constant][21] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %255 = reshape(%254, newshape=[11, 14, 1]) /* ty=Tensor[(11, 14, 1), float64] */;
  %256 = @func_711(%255) /* ty=(Tensor[(11, 14, 1), float64],) */;
  %257 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
  %258 = %242.0;
  %259 = asin(%253) /* ty=Tensor[(3, 14, 7), float32] */;
  %260 = %256.0;
  (%257, %258, meta[relay.Constant][19] /* ty=Tensor[(540), float32] */, %259, %260, meta[relay.Constant][21] /* ty=Tensor[(154), float64] */)
}

def @func_7571(%var_7551: Tensor[(3, 7, 16), float64], %var_7556: Tensor[(1320), float64], %var_7569: Tensor[(8, 1), float32]) -> (Tensor[(3, 7, 16), float64], Tensor[(11, 14, 1), float64], Tensor[(1320), float64], Tensor[(154), float64], Tensor[(2, 2, 2), float32], Tensor[(8, 1), float32]) {
  %261 = cast(%var_7551, dtype="float64") /* ty=Tensor[(3, 7, 16), float64] */;
  %262 = cast(%var_7556, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %263 = cast(meta[relay.Constant][22] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %264 = cast(meta[relay.Constant][22] /* ty=Tensor[(154), float64] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %265 = reshape(%262, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
  %266 = reshape(%263, newshape=[22, 7]) /* ty=Tensor[(22, 7), float64] */;
  %267 = reshape(%264, newshape=[22, 7]) /* ty=Tensor[(22, 7), float32] */;
  %268 = @func_1636(%265, %266, %267) /* ty=(Tensor[(12, 11, 10), float64], Tensor[(11, 14, 1), float64], Tensor[(22, 7), uint64]) */;
  %269 = cast(%var_7569, dtype="float32") /* ty=Tensor[(8, 1), float32] */;
  %270 = cast(%var_7569, dtype="float32") /* ty=Tensor[(8, 1), float32] */;
  %271 = reshape(%269, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
  %272 = reshape(%270, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
  %273 = rsqrt(%261) /* ty=Tensor[(3, 7, 16), float64] */;
  %274 = %268.1;
  %275 = @func_7482(%271, %272) /* ty=Tensor[(2, 2, 2), float32] */;
  (%273, %274, %var_7556, meta[relay.Constant][22] /* ty=Tensor[(154), float64] */, %275, %var_7569)
}

def @func_10072(%var_10063: Tensor[(312), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) {
  %276 = @func_9200() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %277 = cast(%var_10063, dtype="float32") /* ty=Tensor[(312), float32] */;
  %278 = reshape(%277, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float32] */;
  %279 = cast(meta[relay.Constant][23] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %280 = cast(meta[relay.Constant][23] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %281 = reshape(%279, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
  %282 = reshape(%280, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
  %283 = %276.0;
  %284 = @func_8523() /* ty=Tensor[(8, 3, 7), float32] */;
  %285 = @func_4832(%278) /* ty=Tensor[(12, 13, 2), float32] */;
  %286 = @func_7482(%281, %282) /* ty=Tensor[(2, 2, 2), float32] */;
  (%283, %284, %285, %var_10063, %286, meta[relay.Constant][23] /* ty=Tensor[(8), float32] */)
}

def @func_800(%var_787: Tensor[(2, 16, 16), int32], %var_788: Tensor[(2, 16, 16), int32]) -> (Tensor[(2, 16, 16), int32],) {
  %287 = cast(%var_788, dtype="int32") /* ty=Tensor[(2, 16, 16), int32] */;
  %288 = shape_of(%var_787, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%var_787, dtype="int32") /* ty=Tensor[(2, 16, 16), int32] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %291 = bitwise_xor(%289, %290) /* ty=Tensor[(2, 16, 16), int32] */;
  (%291,)
}

def @func_13170() -> (Tensor[(3, 99), bool], Tensor[(3, 99), float64]) {
  %292 = @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */;
  %293 = %292.0;
  %294 = cast(%293, dtype="float64") /* ty=Tensor[(3, 99), float64] */;
  %295 = sin(%294) /* ty=Tensor[(3, 99), float64] */;
  %296 = cast(%295, dtype="bool") /* ty=Tensor[(3, 99), bool] */;
  %297 = shape_of(%293, dtype="int32") /* ty=Tensor[(2), int32] */;
  %298 = cast(%293, dtype="bool") /* ty=Tensor[(3, 99), bool] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %300 = cast(%293, dtype="float64") /* ty=Tensor[(3, 99), float64] */;
  %301 = greater_equal(%298, %299) /* ty=Tensor[(3, 99), bool] */;
  %302 = asinh(%300) /* ty=Tensor[(3, 99), float64] */;
  (%301, %302)
}

def @func_6405(%var_6387: float64, %var_6388: Tensor[(7, 1, 6), float64], %var_6402: Tensor[(2, 280), float64]) -> (Tensor[(7, 1, 6), bool], Tensor[(4, 10, 14), float64], Tensor[(2, 280), float64], Tensor[(540), float32]) {
  %303 = cast(%var_6387, dtype="bool") /* ty=bool */;
  %304 = cast(%var_6388, dtype="bool") /* ty=Tensor[(7, 1, 6), bool] */;
  %305 = cast(%var_6402, dtype="float64") /* ty=Tensor[(2, 280), float64] */;
  %306 = cast(meta[relay.Constant][24] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %307 = reshape(%305, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), float64] */;
  %308 = reshape(%306, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %309 = @func_426(%307, %308) /* ty=(Tensor[(4, 10, 14), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */;
  %310 = greater(%303, %304) /* ty=Tensor[(7, 1, 6), bool] */;
  %311 = %309.0;
  (%310, %311, %var_6402, meta[relay.Constant][24] /* ty=Tensor[(540), float32] */)
}

def @func_14572() -> Tensor[(8, 3, 7), float32] {
  @func_9370() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_12585() -> (Tensor[(105), uint32], Tensor[(8, 3, 7), float32]) {
  %312 = @func_11567() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(105), uint32]) */;
  %313 = @func_11207() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %314 = %312.1;
  %315 = %313.0;
  (%314, %315)
}

def @func_11885() -> Tensor[(8, 3, 7), float32] {
  %316 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %316.2
}

def @func_11279() -> (Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) {
  %317 = @func_8947() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(154), float64], Tensor[(3, 99), float32]) */;
  %318 = cast(meta[relay.Constant][25] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %319 = reshape(%318, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), float64] */;
  %320 = %317.2;
  %321 = @func_4000(%319) /* ty=Tensor[(6, 9, 7), float64] */;
  (%320, %321, meta[relay.Constant][25] /* ty=Tensor[(378), float64] */)
}

def @func_15352() -> Tensor[(8, 3, 7), float32] {
  @func_10620() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_14830() -> Tensor[(8, 3, 7), float64] {
  %322 = @func_11079() /* ty=(Tensor[(8, 3, 7), float64],) */;
  %322.0
}

def @func_15171(%var_15168: Tensor[(540), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) {
  %323 = @func_11231() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) */;
  %324 = cast(%var_15168, dtype="float32") /* ty=Tensor[(540), float32] */;
  %325 = reshape(%324, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %326 = @func_16(%325) /* ty=(Tensor[(15, 4, 9), float32],) */;
  %327 = %323.0;
  %328 = %326.0;
  (%327, %328, %var_15168)
}

def @func_13878() -> Tensor[(8, 3, 7), float32] {
  @func_13055() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_10922() -> (Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) {
  %329 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
  %330 = %329.1;
  %331 = @func_10092() /* ty=Tensor[(8, 3, 7), float32] */;
  (%330, %331)
}

def @func_10670() -> Tensor[(8, 3, 7), float32] {
  %332 = @func_8495() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %332.0
}

def @func_11262(%var_11260: Tensor[(11, 14), float64]) -> (Tensor[(11, 14, 11), float64], Tensor[(12, 11, 10), float64], Tensor[(1320), float64], Tensor[(11, 14), float64]) {
  %333 = @func_9104() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(11, 14, 11), float64]) */;
  %334 = cast(meta[relay.Constant][26] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %335 = cast(%var_11260, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
  %336 = cast(%var_11260, dtype="float32") /* ty=Tensor[(11, 14), float32] */;
  %337 = reshape(%334, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
  %338 = reshape(%335, newshape=[22, 7]) /* ty=Tensor[(22, 7), float64] */;
  %339 = reshape(%336, newshape=[22, 7]) /* ty=Tensor[(22, 7), float32] */;
  %340 = @func_1636(%337, %338, %339) /* ty=(Tensor[(12, 11, 10), float64], Tensor[(11, 14, 1), float64], Tensor[(22, 7), uint64]) */;
  %341 = %333.1;
  %342 = %340.0;
  (%341, %342, meta[relay.Constant][26] /* ty=Tensor[(1320), float64] */, %var_11260)
}

def @func_12049(%var_12022: Tensor[(512), int32], %var_12045: Tensor[(560), float64]) -> (Tensor[(378), float64], Tensor[(8, 3, 7), float64], Tensor[(2, 16, 16), int32], Tensor[(512), int32], Tensor[(1, 560), float64], float64, Tensor[(42), float64], Tensor[(560), float64]) {
  %343 = @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */;
  %344 = @func_11079() /* ty=(Tensor[(8, 3, 7), float64],) */;
  %345 = cast(%var_12022, dtype="int32") /* ty=Tensor[(512), int32] */;
  %346 = cast(%var_12022, dtype="int32") /* ty=Tensor[(512), int32] */;
  %347 = reshape(%345, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int32] */;
  %348 = reshape(%346, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int32] */;
  %349 = @func_800(%347, %348) /* ty=(Tensor[(2, 16, 16), int32],) */;
  %350 = cast(-7.9234f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %351 = cast(meta[relay.Constant][27] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %352 = cast(%var_12045, dtype="float64") /* ty=Tensor[(560), float64] */;
  %353 = reshape(%350, newshape=[]) /* ty=float64 */;
  %354 = reshape(%351, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %355 = reshape(%352, newshape=[1, 560]) /* ty=Tensor[(1, 560), float64] */;
  %356 = @func_8690(%353, %354, %355) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(540), float32], float64, Tensor[(42), float64], Tensor[(1, 560), float64]) */;
  %357 = %343.2;
  %358 = %344.0;
  %359 = %349.0;
  %360 = %356.4;
  (%357, %358, %359, %var_12022, %360, -7.9234f64 /* ty=float64 */, meta[relay.Constant][27] /* ty=Tensor[(42), float64] */, %var_12045)
}

def @func_5419(%var_5412: Tensor[(11, 14, 11), float64]) -> (Tensor[(11, 14, 11), float64],) {
  %361 = cast(%var_5412, dtype="float64") /* ty=Tensor[(11, 14, 11), float64] */;
  %362 = sinh(%361) /* ty=Tensor[(11, 14, 11), float64] */;
  (%362,)
}

def @func_15758() -> (Tensor[(8, 3, 7), float32],) {
  %363 = @func_10311() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %364 = %363.0;
  (%364,)
}

def @func_12501() -> (Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) {
  %365 = @func_10785() /* ty=(Tensor[(8, 3, 7), bool], Tensor[(11, 14, 11), float64]) */;
  %366 = @func_8800() /* ty=Tensor[(8, 3, 7), float32] */;
  %367 = cast(%366, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %368 = %365.1;
  %369 = acos(%367) /* ty=Tensor[(8, 3, 7), float32] */;
  (%368, %369)
}

def @func_15234(%var_15212: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), float32], Tensor[(8, 3, 7), float32], Tensor[(168), float32], Tensor[(6, 52), float32], Tensor[(3, 99), float64]) {
  %370 = cast(%var_15212, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %371 = cast(meta[relay.Constant][28] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %372 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 52), float32] */, dtype="float32") /* ty=Tensor[(6, 52), float32] */;
  %373 = reshape(%371, newshape=[42, 4]) /* ty=Tensor[(42, 4), float32] */;
  %374 = reshape(%372, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %375 = @func_11722(%373, %374) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(42, 4), float32], Tensor[(3, 104), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(154), float64], Tensor[(8, 3, 7), float32]) */;
  %376 = @func_14365() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(7, 42), int64], Tensor[(3, 99), float64], Tensor[(8, 3, 7), float32]) */;
  %377 = atan(%370) /* ty=Tensor[(13, 7, 2), float32] */;
  %378 = %375.0;
  %379 = %376.3;
  (%377, %378, meta[relay.Constant][28] /* ty=Tensor[(168), float32] */, meta[relay.Constant][29] /* ty=Tensor[(6, 52), float32] */, %379)
}

def @func_12373(%var_12367: Tensor[(14, 2, 5), float64]) -> (Tensor[(14, 2, 5), float64], Tensor[(8, 3, 7), float32]) {
  %380 = cast(%var_12367, dtype="float64") /* ty=Tensor[(14, 2, 5), float64] */;
  %381 = @func_10922() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) */;
  %382 = cosh(%380) /* ty=Tensor[(14, 2, 5), float64] */;
  %383 = %381.1;
  (%382, %383)
}

def @func_15303() -> (Tensor[(8, 3, 7), float32],) {
  %384 = @func_12808() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(3, 99), float32]) */;
  %385 = %384.0;
  (%385,)
}

def @func_13055() -> Tensor[(8, 3, 7), float32] {
  %386 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %386.1
}

def @func_12313() -> (Tensor[(182), float32],) {
  %387 = @func_11362() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) */;
  %388 = %387.3;
  (%388,)
}

def @func_10483() -> Tensor[(8, 3, 7), float32] {
  %389 = @func_9200() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %389.1
}

def @func_14809() -> (Tensor[(312), float32],) {
  %390 = @func_14219() /* ty=(Tensor[(182), float32], Tensor[(7, 2, 13), float32], Tensor[(312), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32]) */;
  %391 = %390.2;
  (%391,)
}

def @func_14529(%var_14505: Tensor[(1, 12, 8), float32]) -> (Tensor[(1, 12, 8), float32],) {
  %392 = cast(-9.45623f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %393 = cast(%var_14505, dtype="float32") /* ty=Tensor[(1, 12, 8), float32] */;
  %394 = floor_mod(%392, %393) /* ty=Tensor[(1, 12, 8), float32] */;
  (%394,)
}

def @func_10806() -> Tensor[(8, 3, 7), float32] {
  @func_9370() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_12838(%var_12825: Tensor[(13, 6, 6), float64]) -> Tensor[(13, 6, 6), float64] {
  %395 = cast(%var_12825, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
  acosh(%395) /* ty=Tensor[(13, 6, 6), float64] */
}

def @func_11478() -> (Tensor[(8, 3, 7), float32],) {
  %396 = @func_10806() /* ty=Tensor[(8, 3, 7), float32] */;
  (%396,)
}

def @func_13704() -> (Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) {
  %397 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %398 = @func_12501() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) */;
  %399 = %397.0;
  %400 = %398.0;
  (%399, %400)
}

def @func_16082(%var_16050: Tensor[(312), float32]) -> (Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32], Tensor[(312), float32], Tensor[(468), float64], Tensor[(378), float64], Tensor[(11, 14, 11), float64]) {
  %401 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
  %402 = cast(%var_16050, dtype="float32") /* ty=Tensor[(312), float32] */;
  %403 = cast(meta[relay.Constant][30] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %404 = reshape(%402, newshape=[1, 312]) /* ty=Tensor[(1, 312), float32] */;
  %405 = reshape(%403, newshape=[1, 468]) /* ty=Tensor[(1, 468), float64] */;
  %406 = @func_13311(%404, %405) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(1, 312), float32], Tensor[(1, 468), float64], Tensor[(8, 3, 7), float32], Tensor[(13, 6, 6), float32]) */;
  %407 = %401.1;
  %408 = cast(%407, dtype="float64") /* ty=Tensor[(11, 14, 11), float64] */;
  %409 = reshape(%408, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %410 = @func_5419(%409) /* ty=(Tensor[(11, 14, 11), float64],) */;
  %411 = %406.0;
  %412 = @func_14713() /* ty=Tensor[(378), float64] */;
  %413 = %410.0;
  (%407, %411, %var_16050, meta[relay.Constant][30] /* ty=Tensor[(468), float64] */, %412, %413)
}

def @func_2833(%var_2814: Tensor[(15, 7, 1), uint32], %var_2815: Tensor[(15, 7, 1), uint32]) -> (Tensor[(15, 7, ?), uint32], Tensor[(15, 4, 9), float32], Tensor[(560), float64], Tensor[(540), float32]) {
  %414 = cast(%var_2815, dtype="uint32") /* ty=Tensor[(15, 7, 1), uint32] */;
  %415 = shape_of(%var_2814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %416 = cast(%var_2814, dtype="uint32") /* ty=Tensor[(15, 7, 1), uint32] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %418 = cast(meta[relay.Constant][31] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %419 = cast(meta[relay.Constant][32] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %420 = reshape(%418, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), float64] */;
  %421 = reshape(%419, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %422 = @func_426(%420, %421) /* ty=(Tensor[(4, 10, 14), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */;
  %423 = minimum(%416, %417) /* ty=Tensor[(15, 7, ?), uint32] */;
  %424 = %422.1;
  (%423, %424, meta[relay.Constant][31] /* ty=Tensor[(560), float64] */, meta[relay.Constant][32] /* ty=Tensor[(540), float32] */)
}

def @func_14219() -> (Tensor[(182), float32], Tensor[(7, 2, 13), float32], Tensor[(312), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32]) {
  %425 = @func_12733() /* ty=(Tensor[(7, 2, 13), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %426 = cast(meta[relay.Constant][33] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %427 = reshape(%426, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %428 = @func_10072(%427) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) */;
  %429 = @func_13123() /* ty=Tensor[(182), float32] */;
  %430 = %425.0;
  %431 = %428.3;
  %432 = @func_10620() /* ty=Tensor[(8, 3, 7), float32] */;
  (%429, %430, %431, meta[relay.Constant][33] /* ty=Tensor[(312), float32] */, %432)
}

def @func_8495() -> (Tensor[(8, 3, 7), float32],) {
  %433 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %434 = sigmoid(%433) /* ty=Tensor[(8, 3, 7), float32] */;
  (%434,)
}

def @func_16132() -> (Tensor[(8, 3, 7), float64],) {
  %435 = @func_10818() /* ty=Tensor[(8, 3, 7), float64] */;
  (%435,)
}

def @func_8947() -> (Tensor[(8, 3, 7), float64], Tensor[(154), float64], Tensor[(3, 99), float32]) {
  %436 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %437 = %436.0;
  %438 = cast(%437, dtype="float64") /* ty=Tensor[(8, 3, 7), float64] */;
  %439 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 99), float32] */, dtype="float32") /* ty=Tensor[(3, 99), float32] */;
  %440 = reshape(%439, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float32] */;
  %441 = @func_755(%440) /* ty=(Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(11, 9, 3), uint16]) */;
  %442 = atan(%438) /* ty=Tensor[(8, 3, 7), float64] */;
  %443 = %441.1;
  (%442, %443, meta[relay.Constant][35] /* ty=Tensor[(3, 99), float32] */)
}

def @func_14498() -> (Tensor[(9, 14, 2), float64],) {
  %444 = @func_12273() /* ty=(Tensor[(9, 14, 2), float64],) */;
  %445 = %444.0;
  (%445,)
}

def @func_8651() -> Tensor[(8, 3, 7), float32] {
  %446 = @func_8495() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %446.0
}

def @func_8751(%var_8737: Tensor[(105, 1), uint32]) -> (Tensor[(8, 3, 7), float32], Tensor[(560), float64], Tensor[(105, 1), uint32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) {
  %447 = cast(%var_8737, dtype="uint32") /* ty=Tensor[(105, 1), uint32] */;
  %448 = cast(%var_8737, dtype="uint32") /* ty=Tensor[(105, 1), uint32] */;
  %449 = reshape(%447, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), uint32] */;
  %450 = reshape(%448, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), uint32] */;
  %451 = @func_2833(%449, %450) /* ty=(Tensor[(15, 7, ?), uint32], Tensor[(15, 4, 9), float32], Tensor[(560), float64], Tensor[(540), float32]) */;
  %452 = cast(meta[relay.Constant][36] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %453 = cast(meta[relay.Constant][36] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %454 = reshape(%452, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
  %455 = reshape(%453, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
  %456 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
  %457 = %451.2;
  %458 = @func_7482(%454, %455) /* ty=Tensor[(2, 2, 2), float32] */;
  (%456, %457, %var_8737, %458, meta[relay.Constant][36] /* ty=Tensor[(8), float32] */)
}

def @func_14966(%var_14961: Tensor[(1, 11, 7), float64]) -> Tensor[(1, 11, 7), float64] {
  %459 = cast(%var_14961, dtype="float64") /* ty=Tensor[(1, 11, 7), float64] */;
  cos(%459) /* ty=Tensor[(1, 11, 7), float64] */
}

def @func_11821() -> (Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %460 = @func_10785() /* ty=(Tensor[(8, 3, 7), bool], Tensor[(11, 14, 11), float64]) */;
  %461 = @func_11096() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %462 = %460.1;
  %463 = %461.0;
  %464 = @func_10897() /* ty=Tensor[(8, 3, 7), float32] */;
  (%462, %463, %464)
}

def @func_15018() -> (Tensor[(3, 14, 7), float64], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) {
  %465 = @func_14365() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(7, 42), int64], Tensor[(3, 99), float64], Tensor[(8, 3, 7), float32]) */;
  %466 = cast(meta[relay.Constant][37] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %467 = reshape(%466, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %468 = @func_5419(%467) /* ty=(Tensor[(11, 14, 11), float64],) */;
  %469 = %465.1;
  %470 = %468.0;
  (%469, %470, meta[relay.Constant][37] /* ty=Tensor[(1694), float64] */)
}

def @func_15616() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(14, 2, 5), float64], Tensor[(1694), float64], Tensor[(8, 3, 7), float32], Tensor[(5, 28), float64], Tensor[(5, 28), bool]) {
  %471 = @func_10311() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %472 = @func_9200() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %473 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 28), float64] */, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %474 = reshape(%473, newshape=[14, 2, 5]) /* ty=Tensor[(14, 2, 5), float64] */;
  %475 = @func_12373(%474) /* ty=(Tensor[(14, 2, 5), float64], Tensor[(8, 3, 7), float32]) */;
  %476 = @func_15018() /* ty=(Tensor[(3, 14, 7), float64], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) */;
  %477 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 28), float64] */, dtype="float32") /* ty=Tensor[(5, 28), float32] */;
  %478 = tan(%477) /* ty=Tensor[(5, 28), float32] */;
  %479 = cast(%478, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %480 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(5, 28), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %481 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 28), float64] */, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %483 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 28), float64] */, dtype="bool") /* ty=Tensor[(5, 28), bool] */;
  %484 = shape_of(%478, dtype="int32") /* ty=Tensor[(2), int32] */;
  %485 = cast(%478, dtype="bool") /* ty=Tensor[(5, 28), bool] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %487 = %471.0;
  %488 = %472.0;
  %489 = %475.0;
  %490 = %476.2;
  %491 = @func_12234() /* ty=Tensor[(8, 3, 7), float32] */;
  %492 = floor_divide(%481, %482) /* ty=Tensor[(5, 28), float64] */;
  %493 = logical_or(%485, %486) /* ty=Tensor[(5, 28), bool] */;
  (%487, %488, %489, %490, %491, %492, %493)
}

def @func_11747() -> Tensor[(8, 3, 7), float32] {
  %494 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %494.1
}

def @func_8690(%var_8681: float64, %var_8682: Tensor[(42), float64], %var_8683: Tensor[(1, 560), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(540), float32], float64, Tensor[(42), float64], Tensor[(1, 560), float64]) {
  %495 = @func_8495() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %496 = cast(%var_8681, dtype="float64") /* ty=float64 */;
  %497 = cast(%var_8682, dtype="float64") /* ty=Tensor[(42), float64] */;
  %498 = cast(%var_8683, dtype="float64") /* ty=Tensor[(1, 560), float64] */;
  %499 = reshape(%496, newshape=[]) /* ty=float64 */;
  %500 = reshape(%497, newshape=[7, 1, 6]) /* ty=Tensor[(7, 1, 6), float64] */;
  %501 = reshape(%498, newshape=[2, 280]) /* ty=Tensor[(2, 280), float64] */;
  %502 = @func_6405(%499, %500, %501) /* ty=(Tensor[(7, 1, 6), bool], Tensor[(4, 10, 14), float64], Tensor[(2, 280), float64], Tensor[(540), float32]) */;
  %503 = %495.0;
  %504 = %502.3;
  (%503, %504, %var_8681, %var_8682, %var_8683)
}

def @func_15499() -> Tensor[(8, 3, 7), float32] {
  %505 = @func_11207() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %505.1
}

def @func_13956() -> (Tensor[(560), float64], Tensor[(8, 3, 7), float32]) {
  %506 = @func_12649() /* ty=(Tensor[(8, 3, 7), float32], float64, Tensor[(512), int32], Tensor[(560), float64]) */;
  %507 = %506.3;
  %508 = @func_10483() /* ty=Tensor[(8, 3, 7), float32] */;
  (%507, %508)
}

def @func_12649() -> (Tensor[(8, 3, 7), float32], float64, Tensor[(512), int32], Tensor[(560), float64]) {
  %509 = cast(meta[relay.Constant][39] /* ty=Tensor[(512), int32] */, dtype="int32") /* ty=Tensor[(512), int32] */;
  %510 = cast(meta[relay.Constant][40] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %511 = reshape(%509, newshape=[512]) /* ty=Tensor[(512), int32] */;
  %512 = reshape(%510, newshape=[560]) /* ty=Tensor[(560), float64] */;
  %513 = @func_12049(%511, %512) /* ty=(Tensor[(378), float64], Tensor[(8, 3, 7), float64], Tensor[(2, 16, 16), int32], Tensor[(512), int32], Tensor[(1, 560), float64], float64, Tensor[(42), float64], Tensor[(560), float64]) */;
  %514 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
  %515 = %513.5;
  (%514, %515, meta[relay.Constant][39] /* ty=Tensor[(512), int32] */, meta[relay.Constant][40] /* ty=Tensor[(560), float64] */)
}

def @func_1847(%var_1822: Tensor[(6, 6, 1), float64]) -> Tensor[(6, 6, 6), float64] {
  %516 = cast(%var_1822, dtype="float64") /* ty=Tensor[(6, 6, 1), float64] */;
  %517 = cast(meta[relay.Constant][41] /* ty=Tensor[(6, 6, 6), float64] */, dtype="float64") /* ty=Tensor[(6, 6, 6), float64] */;
  divide(%516, %517) /* ty=Tensor[(6, 6, 6), float64] */
}

def @func_12398() -> (Tensor[(8, 3, 7), float32],) {
  %518 = @func_10670() /* ty=Tensor[(8, 3, 7), float32] */;
  (%518,)
}

def @func_13885() -> (Tensor[(3, 99), float32],) {
  %519 = @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */;
  %520 = %519.0;
  (%520,)
}

def @func_6029(%var_5916: Tensor[(10, 2, 4), float64], %var_5944: Tensor[(768), uint64], %var_5947: Tensor[(416), uint32], %var_5978: Tensor[(1320), float64], %var_5979: Tensor[(154, 1), float64]) -> (Tensor[(10, 2, 4), float64], Tensor[(10, 2, 4), uint16], Tensor[(16, 8, 6), uint64], Tensor[(768), uint64], Tensor[(416), uint32], Tensor[(2, 13, 16), float64], Tensor[(10, 2, 4), float64], Tensor[(22, 7), uint64], Tensor[(1320), float64], Tensor[(154, 1), float64], Tensor[(22, 7), uint64]) {
  %521 = cast(%var_5916, dtype="float64") /* ty=Tensor[(10, 2, 4), float64] */;
  %522 = cast(%var_5916, dtype="float32") /* ty=Tensor[(10, 2, 4), float32] */;
  %523 = cos(%522) /* ty=Tensor[(10, 2, 4), float32] */;
  %524 = cast(%523, dtype="float64") /* ty=Tensor[(10, 2, 4), float64] */;
  %525 = shape_of(%var_5916, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%var_5916, dtype="float64") /* ty=Tensor[(10, 2, 4), float64] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %528 = floor_mod(%526, %527) /* ty=Tensor[(10, 2, 4), float64] */;
  %529 = cast(%523, dtype="uint16") /* ty=Tensor[(10, 2, 4), uint16] */;
  %530 = shape_of(%528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(%528, dtype="uint16") /* ty=Tensor[(10, 2, 4), uint16] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %533 = cast(%var_5944, dtype="uint64") /* ty=Tensor[(768), uint64] */;
  %534 = reshape(%533, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), uint64] */;
  %535 = cast(%var_5947, dtype="uint32") /* ty=Tensor[(416), uint32] */;
  %536 = reshape(%535, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), uint32] */;
  %537 = @func_2943(%536) /* ty=Tensor[(2, 13, 16), uint32] */;
  %538 = cast(%537, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
  %539 = cast(%523, dtype="float64") /* ty=Tensor[(10, 2, 4), float64] */;
  %540 = cast(%var_5978, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %541 = cast(%var_5979, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
  %542 = cast(%var_5979, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %543 = reshape(%540, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
  %544 = reshape(%541, newshape=[22, 7]) /* ty=Tensor[(22, 7), float64] */;
  %545 = reshape(%542, newshape=[22, 7]) /* ty=Tensor[(22, 7), float32] */;
  %546 = @func_1636(%543, %544, %545) /* ty=(Tensor[(12, 11, 10), float64], Tensor[(11, 14, 1), float64], Tensor[(22, 7), uint64]) */;
  %547 = cast(%var_5978, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %548 = %546.2;
  %549 = cast(%548, dtype="float64") /* ty=Tensor[(22, 7), float64] */;
  %550 = cast(%var_5979, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %551 = reshape(%547, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
  %552 = reshape(%549, newshape=[22, 7]) /* ty=Tensor[(22, 7), float64] */;
  %553 = reshape(%550, newshape=[22, 7]) /* ty=Tensor[(22, 7), float32] */;
  %554 = @func_1636(%551, %552, %553) /* ty=(Tensor[(12, 11, 10), float64], Tensor[(11, 14, 1), float64], Tensor[(22, 7), uint64]) */;
  %555 = sqrt(%521) /* ty=Tensor[(10, 2, 4), float64] */;
  %556 = right_shift(%531, %532) /* ty=Tensor[(10, 2, 4), uint16] */;
  %557 = @func_1283(%534) /* ty=Tensor[(16, 8, 6), uint64] */;
  %558 = rsqrt(%538) /* ty=Tensor[(2, 13, 16), float64] */;
  %559 = log(%539) /* ty=Tensor[(10, 2, 4), float64] */;
  %560 = %554.2;
  (%555, %556, %557, %var_5944, %var_5947, %558, %559, %548, %var_5978, %var_5979, %560)
}

def @func_16631() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %561 = @func_11478() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %562 = @func_11207() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %563 = @func_16540() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %564 = %561.0;
  %565 = %562.1;
  %566 = %563.0;
  (%564, %565, %566)
}

def @func_16467() -> (Tensor[(8, 3, 7), float32],) {
  %567 = @func_11478() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %568 = %567.0;
  (%568,)
}

def @func_9987(%var_9921: Tensor[(336), float64], %var_9951: Tensor[(9, 4), float64]) -> (Tensor[(11, 14, 1), float64], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(336), float64], Tensor[(2, 4), float32], Tensor[(1320, 154), bool], Tensor[(6, 6, 6), float64], Tensor[(9, 4), float64], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(540), float64], Tensor[(2, 13, 16), uint32], Tensor[(416), uint32]) {
  %569 = @func_8947() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(154), float64], Tensor[(3, 99), float32]) */;
  %570 = %569.1;
  %571 = cast(%570, dtype="float64") /* ty=Tensor[(154), float64] */;
  %572 = reshape(%571, newshape=[11, 14, 1]) /* ty=Tensor[(11, 14, 1), float64] */;
  %573 = @func_711(%572) /* ty=(Tensor[(11, 14, 1), float64],) */;
  %574 = cast(%var_9921, dtype="float64") /* ty=Tensor[(336), float64] */;
  %575 = cast(meta[relay.Constant][42] /* ty=Tensor[(1320, 1), float64] */, dtype="float64") /* ty=Tensor[(1320, 1), float64] */;
  %576 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 4), float32] */, dtype="float32") /* ty=Tensor[(2, 4), float32] */;
  %577 = reshape(%574, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float64] */;
  %578 = reshape(%575, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %579 = reshape(%576, newshape=[8, 1]) /* ty=Tensor[(8, 1), float32] */;
  %580 = @func_7571(%577, %578, %579) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(11, 14, 1), float64], Tensor[(1320), float64], Tensor[(154), float64], Tensor[(2, 2, 2), float32], Tensor[(8, 1), float32]) */;
  %581 = cast(meta[relay.Constant][42] /* ty=Tensor[(1320, 1), float64] */, dtype="bool") /* ty=Tensor[(1320, 1), bool] */;
  %582 = cast(%570, dtype="bool") /* ty=Tensor[(154), bool] */;
  %583 = cast(%var_9951, dtype="float64") /* ty=Tensor[(9, 4), float64] */;
  %584 = reshape(%583, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float64] */;
  %585 = cast(meta[relay.Constant][44] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %586 = reshape(%585, newshape=[15, 3, 12]) /* ty=Tensor[(15, 3, 12), float64] */;
  %587 = @func_3889(%586) /* ty=(Tensor[(11, 14, 1), float64], Tensor[(297), float32], Tensor[(15, 3, 12), float32], Tensor[(15, 4, 9), float32]) */;
  %588 = cast(meta[relay.Constant][45] /* ty=Tensor[(416), uint32] */, dtype="uint32") /* ty=Tensor[(416), uint32] */;
  %589 = reshape(%588, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), uint32] */;
  %590 = %573.0;
  %591 = @func_8523() /* ty=Tensor[(8, 3, 7), float32] */;
  %592 = %580.1;
  %593 = logical_and(%581, %582) /* ty=Tensor[(1320, 154), bool] */;
  %594 = @func_1847(%584) /* ty=Tensor[(6, 6, 6), float64] */;
  %595 = @func_9370() /* ty=Tensor[(8, 3, 7), float32] */;
  %596 = %587.0;
  %597 = @func_2943(%589) /* ty=Tensor[(2, 13, 16), uint32] */;
  (%590, %591, %592, %var_9921, meta[relay.Constant][43] /* ty=Tensor[(2, 4), float32] */, %593, %594, %var_9951, %595, %596, meta[relay.Constant][44] /* ty=Tensor[(540), float64] */, %597, meta[relay.Constant][45] /* ty=Tensor[(416), uint32] */)
}

def @func_16526(%var_16500: Tensor[(792), bool]) -> (Tensor[(8, 3, 7), float32], Tensor[(12, 11, 6), bool], Tensor[(792), bool], Tensor[(8, 3, 7), float32]) {
  %598 = cast(%var_16500, dtype="bool") /* ty=Tensor[(792), bool] */;
  %599 = cast(%var_16500, dtype="bool") /* ty=Tensor[(792), bool] */;
  %600 = reshape(%598, newshape=[12, 11, 6]) /* ty=Tensor[(12, 11, 6), bool] */;
  %601 = reshape(%599, newshape=[12, 11, 6]) /* ty=Tensor[(12, 11, 6), bool] */;
  %602 = @func_13524() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %603 = @func_13055() /* ty=Tensor[(8, 3, 7), float32] */;
  %604 = @func_15262(%600, %601) /* ty=Tensor[(12, 11, 6), bool] */;
  %605 = %602.0;
  (%603, %604, %var_16500, %605)
}

def @func_14282() -> Tensor[(182), float32] {
  %606 = @func_12313() /* ty=(Tensor[(182), float32],) */;
  %606.0
}

def @func_7147(%var_7143: Tensor[(40, 14), float64]) -> (Tensor[(14, 9, 16), bool], Tensor[(15, 4, 9), float32], Tensor[(40, 14), float64], Tensor[(540), float32]) {
  %607 = cast(meta[relay.Constant][46] /* ty=Tensor[(14, 9, 1), int32] */, dtype="int32") /* ty=Tensor[(14, 9, 1), int32] */;
  %608 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 9, 16), int32] */, dtype="int32") /* ty=Tensor[(14, 9, 16), int32] */;
  %609 = logical_xor(%607, %608) /* ty=Tensor[(14, 9, 16), int32] */;
  %610 = cast(%609, dtype="bool") /* ty=Tensor[(14, 9, 16), bool] */;
  %611 = cast(meta[relay.Constant][46] /* ty=Tensor[(14, 9, 1), int32] */, dtype="bool") /* ty=Tensor[(14, 9, 1), bool] */;
  %612 = cast(%var_7143, dtype="float64") /* ty=Tensor[(40, 14), float64] */;
  %613 = cast(meta[relay.Constant][48] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %614 = reshape(%612, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), float64] */;
  %615 = reshape(%613, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %616 = @func_426(%614, %615) /* ty=(Tensor[(4, 10, 14), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */;
  %617 = logical_and(%610, %611) /* ty=Tensor[(14, 9, 16), bool] */;
  %618 = %616.1;
  (%617, %618, %var_7143, meta[relay.Constant][48] /* ty=Tensor[(540), float32] */)
}

def @func_10785() -> (Tensor[(8, 3, 7), bool], Tensor[(11, 14, 11), float64]) {
  %619 = @func_9723() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %620 = %619.1;
  %621 = cast(meta[relay.Constant][49] /* ty=Tensor[(8, 3, 7), float32] */, dtype="bool") /* ty=Tensor[(8, 3, 7), bool] */;
  %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %623 = cast(%620, dtype="bool") /* ty=Tensor[(8, 3, 7), bool] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %625 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
  %626 = not_equal(%623, %624) /* ty=Tensor[(8, 3, 7), bool] */;
  %627 = %625.1;
  (%626, %627)
}

def @func_10274() -> (Tensor[(8, 3, 7), float32],) {
  %628 = @func_9723() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %629 = %628.1;
  (%629,)
}

def @func_12234() -> Tensor[(8, 3, 7), float32] {
  %630 = @func_10274() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %630.0
}

def @func_13655(%var_13637: Tensor[(432), float32]) -> (Tensor[(3, 99), bool], Tensor[(1, 432), bool], Tensor[(432), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(9, 10, 5), uint64], Tensor[(450), uint64]) {
  %631 = @func_13170() /* ty=(Tensor[(3, 99), bool], Tensor[(3, 99), float64]) */;
  %632 = cast(%var_13637, dtype="float32") /* ty=Tensor[(432), float32] */;
  %633 = reshape(%632, newshape=[2, 216]) /* ty=Tensor[(2, 216), float32] */;
  %634 = @func_13271(%633) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(1, 432), bool], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(2, 216), float32], Tensor[(2, 216), float64]) */;
  %635 = cast(meta[relay.Constant][50] /* ty=Tensor[(450), uint64] */, dtype="uint64") /* ty=Tensor[(450), uint64] */;
  %636 = reshape(%635, newshape=[9, 10, 5]) /* ty=Tensor[(9, 10, 5), uint64] */;
  %637 = %631.0;
  %638 = %634.1;
  %639 = @func_12234() /* ty=Tensor[(8, 3, 7), float32] */;
  %640 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
  %641 = @func_12981(%636) /* ty=Tensor[(9, 10, 5), uint64] */;
  (%637, %638, %var_13637, %639, %640, %641, meta[relay.Constant][50] /* ty=Tensor[(450), uint64] */)
}

def @func_15931() -> Tensor[(182), float32] {
  @func_14282() /* ty=Tensor[(182), float32] */
}

def @func_11617() -> Tensor[(8, 3, 7), float32] {
  @func_10806() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_12273() -> (Tensor[(9, 14, 2), float64],) {
  %642 = @func_10113() /* ty=(Tensor[(9, 14, 2), float64],) */;
  %643 = %642.0;
  (%643,)
}

def @func_10465(%var_10452: Tensor[(8, 3, 7), float32]) -> Tensor[(8, 3, 7), float32] {
  %644 = @func_10092() /* ty=Tensor[(8, 3, 7), float32] */;
  %645 = cast(%var_10452, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %646 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(%644, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %649 = power(%647, %648) /* ty=Tensor[(8, 3, 7), float32] */;
  %650 = cast(%649, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  sinh(%650) /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_15126(%var_15039: Tensor[(540), float32]) -> (Tensor[(312), float32], Tensor[(15, 4, 9), float32], Tensor[(540), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float64], Tensor[(560), float64], Tensor[(12, 3, 12), uint8], Tensor[(96, 2464), uint8]) {
  %651 = @func_14809() /* ty=(Tensor[(312), float32],) */;
  %652 = cast(%var_15039, dtype="float32") /* ty=Tensor[(540), float32] */;
  %653 = reshape(%652, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %654 = @func_16(%653) /* ty=(Tensor[(15, 4, 9), float32],) */;
  %655 = @func_14809() /* ty=(Tensor[(312), float32],) */;
  %656 = cast(meta[relay.Constant][51] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %657 = reshape(%656, newshape=[616, 4]) /* ty=Tensor[(616, 4), float32] */;
  %658 = @func_14892(%657) /* ty=(Tensor[(8, 3, 7), float64], Tensor[(16, 11, 14), int64], Tensor[(616, 4), float32], Tensor[(8, 3, 7), float32]) */;
  %659 = @func_12649() /* ty=(Tensor[(8, 3, 7), float32], float64, Tensor[(512), int32], Tensor[(560), float64]) */;
  %660 = cast(meta[relay.Constant][52] /* ty=Tensor[(96, 1), bool] */, dtype="bool") /* ty=Tensor[(96, 1), bool] */;
  %661 = cast(meta[relay.Constant][52] /* ty=Tensor[(96, 1), bool] */, dtype="bool") /* ty=Tensor[(96, 1), bool] */;
  %662 = reshape(%660, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), bool] */;
  %663 = reshape(%661, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), bool] */;
  %664 = @func_7038(%662, %663) /* ty=(Tensor[(16, 2, 3), bool], Tensor[(12, 3, 12), int8], Tensor[(432), bool], Tensor[(64, 8), int32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 16, 16), float64]) */;
  %665 = %664.1;
  %666 = cast(%665, dtype="float32") /* ty=Tensor[(12, 3, 12), float32] */;
  %667 = exp(%666) /* ty=Tensor[(12, 3, 12), float32] */;
  %668 = cast(%665, dtype="uint8") /* ty=Tensor[(12, 3, 12), uint8] */;
  %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%667, dtype="uint8") /* ty=Tensor[(12, 3, 12), uint8] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %672 = cast(meta[relay.Constant][52] /* ty=Tensor[(96, 1), bool] */, dtype="uint8") /* ty=Tensor[(96, 1), uint8] */;
  %673 = cast(meta[relay.Constant][51] /* ty=Tensor[(2464), float32] */, dtype="uint8") /* ty=Tensor[(2464), uint8] */;
  %674 = %651.0;
  %675 = %654.0;
  %676 = %655.0;
  %677 = %658.0;
  %678 = %659.3;
  %679 = logical_xor(%670, %671) /* ty=Tensor[(12, 3, 12), uint8] */;
  %680 = add(%672, %673) /* ty=Tensor[(96, 2464), uint8] */;
  (%674, %675, %var_15039, %676, %677, %678, %679, %680)
}

def @func_13826() -> (Tensor[(8, 3, 7), float32], Tensor[(8), float32], Tensor[(1320), float64], Tensor[(8, 3, 7), float32]) {
  %681 = cast(meta[relay.Constant][53] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %682 = reshape(%681, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %683 = @func_12939(%682) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(336), float64], Tensor[(8), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1320), float32]) */;
  %684 = @func_11617() /* ty=Tensor[(8, 3, 7), float32] */;
  %685 = %683.2;
  %686 = @func_10441() /* ty=Tensor[(8, 3, 7), float32] */;
  (%684, %685, meta[relay.Constant][53] /* ty=Tensor[(1320), float64] */, %686)
}

def @func_14237() -> (Tensor[(8, 3, 7), float32],) {
  %687 = @func_13524() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %688 = %687.0;
  (%688,)
}

def @func_4235(%var_4220: Tensor[(3, 14, 7), int64], %var_4221: Tensor[(3, 14, 7), int64]) -> Tensor[(3, 14, 7), float64] {
  %689 = cast(%var_4221, dtype="bool") /* ty=Tensor[(3, 14, 7), bool] */;
  %690 = shape_of(%var_4220, dtype="int32") /* ty=Tensor[(3), int32] */;
  %691 = cast(%var_4220, dtype="bool") /* ty=Tensor[(3, 14, 7), bool] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %693 = not_equal(%691, %692) /* ty=Tensor[(3, 14, 7), bool] */;
  %694 = cast(%693, dtype="float64") /* ty=Tensor[(3, 14, 7), float64] */;
  acos(%694) /* ty=Tensor[(3, 14, 7), float64] */
}

def @func_755(%var_718: Tensor[(11, 9, 3), float32]) -> (Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(11, 9, 3), uint16]) {
  %695 = cast(meta[relay.Constant][54] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %696 = reshape(%695, newshape=[11, 14, 1]) /* ty=Tensor[(11, 14, 1), float64] */;
  %697 = @func_711(%696) /* ty=(Tensor[(11, 14, 1), float64],) */;
  %698 = cast(%var_718, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
  %699 = sqrt(%698) /* ty=Tensor[(11, 9, 3), float32] */;
  %700 = cast(%var_718, dtype="uint16") /* ty=Tensor[(11, 9, 3), uint16] */;
  %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%699, dtype="uint16") /* ty=Tensor[(11, 9, 3), uint16] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %704 = %697.0;
  %705 = bitwise_xor(%702, %703) /* ty=Tensor[(11, 9, 3), uint16] */;
  (%704, meta[relay.Constant][54] /* ty=Tensor[(154), float64] */, %705)
}

def @func_8478(%var_8466: Tensor[(2, 4, 3), uint16]) -> Tensor[(2, 4, 3), bool] {
  %706 = cast(%var_8466, dtype="bool") /* ty=Tensor[(2, 4, 3), bool] */;
  %707 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(2, 4, 3), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(meta[relay.Constant][55] /* ty=Tensor[(2, 4, 3), uint16] */, dtype="bool") /* ty=Tensor[(2, 4, 3), bool] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%708, %709) /* ty=Tensor[(2, 4, 3), bool] */
}

def @func_12981(%var_12969: Tensor[(9, 10, 5), uint64]) -> Tensor[(9, 10, 5), uint64] {
  %710 = cast(meta[relay.Constant][56] /* ty=Tensor[(9, 10, 5), uint64] */, dtype="uint64") /* ty=Tensor[(9, 10, 5), uint64] */;
  %711 = shape_of(%var_12969, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%var_12969, dtype="uint64") /* ty=Tensor[(9, 10, 5), uint64] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_and(%712, %713) /* ty=Tensor[(9, 10, 5), uint64] */
}

def @func_16209() -> (Tensor[(8, 3, 7), float32],) {
  %714 = @func_10518() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %715 = %714.0;
  (%715,)
}

def @func_11096() -> (Tensor[(8, 3, 7), float32],) {
  %716 = @func_10897() /* ty=Tensor[(8, 3, 7), float32] */;
  (%716,)
}

def @func_7038(%var_6970: Tensor[(16, 2, 3), bool], %var_6971: Tensor[(16, 2, 3), bool]) -> (Tensor[(16, 2, 3), bool], Tensor[(12, 3, 12), int8], Tensor[(432), bool], Tensor[(64, 8), int32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 16, 16), float64]) {
  %717 = cast(%var_6971, dtype="bool") /* ty=Tensor[(16, 2, 3), bool] */;
  %718 = shape_of(%var_6970, dtype="int32") /* ty=Tensor[(3), int32] */;
  %719 = cast(%var_6970, dtype="bool") /* ty=Tensor[(16, 2, 3), bool] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %721 = cast(meta[relay.Constant][57] /* ty=Tensor[(432), bool] */, dtype="bool") /* ty=Tensor[(432), bool] */;
  %722 = cast(meta[relay.Constant][57] /* ty=Tensor[(432), bool] */, dtype="bool") /* ty=Tensor[(432), bool] */;
  %723 = cast(meta[relay.Constant][57] /* ty=Tensor[(432), bool] */, dtype="bool") /* ty=Tensor[(432), bool] */;
  %724 = reshape(%721, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), bool] */;
  %725 = reshape(%722, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), bool] */;
  %726 = reshape(%723, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), bool] */;
  %727 = @func_5218(%724, %725, %726) /* ty=(Tensor[(16, 8, 6), uint64], Tensor[(32, 24), uint64], Tensor[(12, 3, 12), int8], Tensor[(12, 3, 12), float64]) */;
  %728 = cast(meta[relay.Constant][59] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %729 = reshape(%728, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float32] */;
  %730 = cast(meta[relay.Constant][58] /* ty=Tensor[(64, 8), int32] */, dtype="int32") /* ty=Tensor[(64, 8), int32] */;
  %731 = cast(meta[relay.Constant][58] /* ty=Tensor[(64, 8), int32] */, dtype="int32") /* ty=Tensor[(64, 8), int32] */;
  %732 = reshape(%730, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int32] */;
  %733 = reshape(%731, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int32] */;
  %734 = @func_800(%732, %733) /* ty=(Tensor[(2, 16, 16), int32],) */;
  %735 = %734.0;
  %736 = cast(%735, dtype="float64") /* ty=Tensor[(2, 16, 16), float64] */;
  %737 = logical_and(%719, %720) /* ty=Tensor[(16, 2, 3), bool] */;
  %738 = %727.2;
  %739 = @func_4832(%729) /* ty=Tensor[(12, 13, 2), float32] */;
  %740 = rsqrt(%736) /* ty=Tensor[(2, 16, 16), float64] */;
  (%737, %738, meta[relay.Constant][57] /* ty=Tensor[(432), bool] */, meta[relay.Constant][58] /* ty=Tensor[(64, 8), int32] */, %739, meta[relay.Constant][59] /* ty=Tensor[(312), float32] */, %740)
}

def @func_16564(%var_16562: Tensor[(1694), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(2, 2, 2), float32], Tensor[(1694), float64]) {
  %741 = @func_12398() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %742 = cast(%var_16562, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %743 = reshape(%742, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %744 = @func_11132(%743) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(2, 2, 2), float32], Tensor[(1694), float64]) */;
  %745 = %741.0;
  %746 = %744.1;
  (%745, %746, %var_16562)
}

def @func_16031() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(294), int64]) {
  %747 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %748 = cast(meta[relay.Constant][60] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %749 = reshape(%748, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %750 = @func_12154(%749) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(294), int64], Tensor[(16, 8, 6), uint64], Tensor[(768), uint64]) */;
  %751 = @func_14572() /* ty=Tensor[(8, 3, 7), float32] */;
  %752 = %747.0;
  %753 = %750.3;
  (%751, %752, %753, meta[relay.Constant][60] /* ty=Tensor[(294), int64] */)
}

def @func_10543(%var_10541: Tensor[(1694), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) {
  %754 = cast(%var_10541, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %755 = reshape(%754, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %756 = @func_5419(%755) /* ty=(Tensor[(11, 14, 11), float64],) */;
  %757 = @func_10483() /* ty=Tensor[(8, 3, 7), float32] */;
  %758 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
  %759 = %756.0;
  (%757, %758, %759, %var_10541)
}

def @func_12214(%var_12202: Tensor[(2, 2, 12), float64]) -> (Tensor[(2, 2, 12), float64],) {
  %760 = cast(%var_12202, dtype="float64") /* ty=Tensor[(2, 2, 12), float64] */;
  %761 = sigmoid(%760) /* ty=Tensor[(2, 2, 12), float64] */;
  (%761,)
}

def @func_13993(%var_13974: Tensor[(11, 6, 8), int64], %var_13975: Tensor[(11, 6, 8), int64]) -> Tensor[(11, 6, 8), bool] {
  %762 = cast(%var_13975, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %763 = shape_of(%var_13974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %764 = cast(%var_13974, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%764, %765) /* ty=Tensor[(11, 6, 8), bool] */
}

def @func_10441() -> Tensor[(8, 3, 7), float32] {
  @func_8708() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_16230(%var_16220: Tensor[(3, 99), float32]) -> (Tensor[(3, 99), float32], Tensor[(3, 99), uint64]) {
  %766 = @func_13885() /* ty=(Tensor[(3, 99), float32],) */;
  %767 = %766.0;
  %768 = cast(%var_16220, dtype="float32") /* ty=Tensor[(3, 99), float32] */;
  %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(2), int32] */;
  %770 = cast(%767, dtype="float32") /* ty=Tensor[(3, 99), float32] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %772 = cast(%767, dtype="uint64") /* ty=Tensor[(3, 99), uint64] */;
  %773 = shape_of(%var_16220, dtype="int32") /* ty=Tensor[(2), int32] */;
  %774 = cast(%var_16220, dtype="uint64") /* ty=Tensor[(3, 99), uint64] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %776 = power(%770, %771) /* ty=Tensor[(3, 99), float32] */;
  %777 = bitwise_or(%774, %775) /* ty=Tensor[(3, 99), uint64] */;
  (%776, %777)
}

def @func_10361(%var_10357: Tensor[(3, 104), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(3, 104), float32]) {
  %778 = cast(%var_10357, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
  %779 = reshape(%778, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float32] */;
  %780 = @func_9370() /* ty=Tensor[(8, 3, 7), float32] */;
  %781 = @func_9370() /* ty=Tensor[(8, 3, 7), float32] */;
  %782 = @func_4832(%779) /* ty=Tensor[(12, 13, 2), float32] */;
  (%780, %781, %782, %var_10357)
}

def @func_12864(%var_12861: Tensor[(14, 15, 2), float32]) -> Tensor[(14, 15, 2), float32] {
  %783 = cast(%var_12861, dtype="float32") /* ty=Tensor[(14, 15, 2), float32] */;
  sqrt(%783) /* ty=Tensor[(14, 15, 2), float32] */
}

def @func_11975(%var_11950: Tensor[(312), float32], %var_11964: Tensor[(560), float64]) -> (Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32], Tensor[(4, 10, 14), float64], Tensor[(560), float64], Tensor[(540), float32]) {
  %784 = @func_8800() /* ty=Tensor[(8, 3, 7), float32] */;
  %785 = cast(%784, dtype="float64") /* ty=Tensor[(8, 3, 7), float64] */;
  %786 = @func_11231() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) */;
  %787 = cast(%var_11950, dtype="float32") /* ty=Tensor[(312), float32] */;
  %788 = reshape(%787, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float32] */;
  %789 = @func_9200() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %790 = cast(%var_11964, dtype="float64") /* ty=Tensor[(560), float64] */;
  %791 = cast(meta[relay.Constant][61] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %792 = reshape(%790, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), float64] */;
  %793 = reshape(%791, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %794 = @func_426(%792, %793) /* ty=(Tensor[(4, 10, 14), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */;
  %795 = cos(%785) /* ty=Tensor[(8, 3, 7), float64] */;
  %796 = %786.0;
  %797 = @func_4832(%788) /* ty=Tensor[(12, 13, 2), float32] */;
  %798 = %789.1;
  %799 = %794.0;
  (%795, %796, %797, %var_11950, %798, %799, %var_11964, meta[relay.Constant][61] /* ty=Tensor[(540), float32] */)
}

def @func_14612() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(6, 9, 7), float64]) {
  %800 = @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */;
  %801 = @func_8651() /* ty=Tensor[(8, 3, 7), float32] */;
  %802 = @func_13055() /* ty=Tensor[(8, 3, 7), float32] */;
  %803 = %800.1;
  (%801, %802, %803)
}

def @main() -> Tensor[(11, 14, 11), float32] {
  %804 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
  %805 = %804.1;
  %806 = cast(%805, dtype="float32") /* ty=Tensor[(11, 14, 11), float32] */;
  atan(%806) /* ty=Tensor[(11, 14, 11), float32] */
}

def @func_11567() -> (Tensor[(8, 3, 7), float32], Tensor[(105), uint32]) {
  %807 = @func_9723() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %808 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
  %809 = %807.0;
  %810 = %808.4;
  (%809, %810)
}

def @func_16370(%var_16351: Tensor[(312), float32]) -> (Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32], Tensor[(312), float32]) {
  %811 = @func_16132() /* ty=(Tensor[(8, 3, 7), float64],) */;
  %812 = cast(%var_16351, dtype="float32") /* ty=Tensor[(312), float32] */;
  %813 = reshape(%812, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %814 = @func_10072(%813) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) */;
  %815 = %811.0;
  %816 = %814.0;
  (%815, %816, %var_16351)
}

def @func_14999() -> Tensor[(8, 3, 7), float64] {
  @func_14830() /* ty=Tensor[(8, 3, 7), float64] */
}

def @func_10251() -> (Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32]) {
  %817 = @func_9104() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(11, 14, 11), float64]) */;
  %818 = %817.0;
  %819 = @func_8800() /* ty=Tensor[(8, 3, 7), float32] */;
  (%818, %819)
}

def @func_4832(%var_4826: Tensor[(12, 13, 2), float32]) -> Tensor[(12, 13, 2), float32] {
  %820 = cast(%var_4826, dtype="float32") /* ty=Tensor[(12, 13, 2), float32] */;
  acos(%820) /* ty=Tensor[(12, 13, 2), float32] */
}

def @func_8708() -> Tensor[(8, 3, 7), float32] {
  %821 = @func_8495() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %821.0
}

def @func_13408(%var_13397: Tensor[(4, 12), float64]) -> (Tensor[(11, 6, 11), bool], Tensor[(2, 2, 12), float64], Tensor[(4, 12), float64]) {
  %822 = cast(meta[relay.Constant][63] /* ty=Tensor[(11, 6, 11), bool] */, dtype="bool") /* ty=Tensor[(11, 6, 11), bool] */;
  %823 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(11, 6, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %824 = cast(meta[relay.Constant][62] /* ty=Tensor[(11, 6, 11), bool] */, dtype="bool") /* ty=Tensor[(11, 6, 11), bool] */;
  %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %826 = cast(%var_13397, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %827 = reshape(%826, newshape=[2, 2, 12]) /* ty=Tensor[(2, 2, 12), float64] */;
  %828 = @func_12214(%827) /* ty=(Tensor[(2, 2, 12), float64],) */;
  %829 = logical_or(%824, %825) /* ty=Tensor[(11, 6, 11), bool] */;
  %830 = %828.0;
  (%829, %830, %var_13397)
}

def @func_9723() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %831 = @func_8495() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %832 = %831.0;
  %833 = @func_8651() /* ty=Tensor[(8, 3, 7), float32] */;
  (%832, %833)
}

def @func_450(%var_442: Tensor[(2, 11, 12), int8]) -> (Tensor[(2, 11, 12), int8],) {
  %834 = cast(meta[relay.Constant][64] /* ty=Tensor[(1, 11, 12), int8] */, dtype="int8") /* ty=Tensor[(1, 11, 12), int8] */;
  %835 = cast(%var_442, dtype="int8") /* ty=Tensor[(2, 11, 12), int8] */;
  %836 = logical_xor(%834, %835) /* ty=Tensor[(2, 11, 12), int8] */;
  (%836,)
}

def @func_11722(%var_11669: Tensor[(42, 4), float32], %var_11682: Tensor[(312), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(42, 4), float32], Tensor[(3, 104), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(154), float64], Tensor[(8, 3, 7), float32]) {
  %837 = cast(%var_11669, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %838 = reshape(%837, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %839 = cast(%var_11682, dtype="float32") /* ty=Tensor[(312), float32] */;
  %840 = reshape(%839, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
  %841 = @func_10361(%840) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(3, 104), float32]) */;
  %842 = %841.3;
  %843 = cast(%842, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
  %844 = reshape(%843, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %845 = @func_10072(%844) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) */;
  %846 = @func_10922() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) */;
  %847 = @func_8947() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(154), float64], Tensor[(3, 99), float32]) */;
  %848 = %847.1;
  %849 = cast(%848, dtype="float64") /* ty=Tensor[(154), float64] */;
  %850 = cos(%849) /* ty=Tensor[(154), float64] */;
  %851 = cast(%850, dtype="float64") /* ty=Tensor[(154), float64] */;
  %852 = @func_10465(%838) /* ty=Tensor[(8, 3, 7), float32] */;
  %853 = %845.0;
  %854 = %846.0;
  %855 = atanh(%851) /* ty=Tensor[(154), float64] */;
  %856 = @func_9631() /* ty=Tensor[(8, 3, 7), float32] */;
  (%852, %var_11669, %842, %var_11682, %853, %854, %855, %856)
}

def @func_11132(%var_11129: Tensor[(1694), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(2, 2, 2), float32], Tensor[(1694), float64]) {
  %857 = @func_10806() /* ty=Tensor[(8, 3, 7), float32] */;
  %858 = cast(%857, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %859 = cast(%var_11129, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %860 = reshape(%858, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %861 = reshape(%859, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %862 = @func_9812(%860, %861) /* ty=(Tensor[(8, 3, 7), uint8], Tensor[(2, 2, 2), float32], Tensor[(336), float64], Tensor[(12, 110), float64], Tensor[(8), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(8, 3, 7), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) */;
  %863 = %862.1;
  (%857, %863, %var_11129)
}

def @func_11830(%var_11824: Tensor[(14, 6, 7), bool]) -> Tensor[(14, 6, 7), bool] {
  %864 = cast(meta[relay.Constant][65] /* ty=Tensor[(14, 6, 7), bool] */, dtype="bool") /* ty=Tensor[(14, 6, 7), bool] */;
  %865 = shape_of(%var_11824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(%var_11824, dtype="bool") /* ty=Tensor[(14, 6, 7), bool] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%866, %867) /* ty=Tensor[(14, 6, 7), bool] */
}

def @func_8902() -> (Tensor[(8, 3, 7), float32],) {
  %868 = @func_8800() /* ty=Tensor[(8, 3, 7), float32] */;
  (%868,)
}

def @func_9370() -> Tensor[(8, 3, 7), float32] {
  %869 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %869.0
}

def @func_8829() -> (Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) {
  %870 = cast(meta[relay.Constant][66] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %871 = reshape(%870, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %872 = @func_5419(%871) /* ty=(Tensor[(11, 14, 11), float64],) */;
  %873 = cast(meta[relay.Constant][67] /* ty=Tensor[(105), uint32] */, dtype="uint32") /* ty=Tensor[(105), uint32] */;
  %874 = reshape(%873, newshape=[105, 1]) /* ty=Tensor[(105, 1), uint32] */;
  %875 = @func_8751(%874) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(560), float64], Tensor[(105, 1), uint32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) */;
  %876 = @func_8651() /* ty=Tensor[(8, 3, 7), float32] */;
  %877 = %872.0;
  %878 = %875.1;
  (%876, %877, meta[relay.Constant][66] /* ty=Tensor[(1694), float64] */, %878, meta[relay.Constant][67] /* ty=Tensor[(105), uint32] */)
}

def @func_15873() -> (Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) {
  %879 = @func_11231() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) */;
  %880 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
  %881 = %879.1;
  (%880, %881)
}

def @func_8523() -> Tensor[(8, 3, 7), float32] {
  %882 = @func_8495() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %882.0
}

def @func_15904(%var_15886: Tensor[(5, 10, 16), uint32], %var_15887: Tensor[(5, 10, 16), uint32]) -> (Tensor[(5, 10, 16), uint32], Tensor[(8, 3, 7), float32], Tensor[(5, 10, 16), float64], Tensor[(8, 3, 7), float32]) {
  %883 = cast(%var_15887, dtype="uint32") /* ty=Tensor[(5, 10, 16), uint32] */;
  %884 = shape_of(%var_15886, dtype="int32") /* ty=Tensor[(3), int32] */;
  %885 = cast(%var_15886, dtype="uint32") /* ty=Tensor[(5, 10, 16), uint32] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %887 = cast(%var_15887, dtype="float64") /* ty=Tensor[(5, 10, 16), float64] */;
  %888 = @func_12398() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %889 = add(%885, %886) /* ty=Tensor[(5, 10, 16), uint32] */;
  %890 = @func_15499() /* ty=Tensor[(8, 3, 7), float32] */;
  %891 = erf(%887) /* ty=Tensor[(5, 10, 16), float64] */;
  %892 = %888.0;
  (%889, %890, %891, %892)
}

def @func_6830(%var_6818: Tensor[(5, 12, 5), int32], %var_6819: Tensor[(5, 12, 5), int32]) -> (Tensor[(5, 12, 5), int32],) {
  %893 = cast(%var_6819, dtype="int32") /* ty=Tensor[(5, 12, 5), int32] */;
  %894 = shape_of(%var_6818, dtype="int32") /* ty=Tensor[(3), int32] */;
  %895 = cast(%var_6818, dtype="int32") /* ty=Tensor[(5, 12, 5), int32] */;
  %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %897 = bitwise_or(%895, %896) /* ty=Tensor[(5, 12, 5), int32] */;
  (%897,)
}

def @func_11231() -> (Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) {
  %898 = @func_10922() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) */;
  %899 = @func_9370() /* ty=Tensor[(8, 3, 7), float32] */;
  %900 = %898.0;
  (%899, %900)
}

def @func_13311(%var_13295: Tensor[(1, 312), float32], %var_13300: Tensor[(1, 468), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(1, 312), float32], Tensor[(1, 468), float64], Tensor[(8, 3, 7), float32], Tensor[(13, 6, 6), float32]) {
  %901 = @func_12585() /* ty=(Tensor[(105), uint32], Tensor[(8, 3, 7), float32]) */;
  %902 = cast(%var_13295, dtype="float32") /* ty=Tensor[(1, 312), float32] */;
  %903 = reshape(%902, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float32] */;
  %904 = @func_12808() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(3, 99), float32]) */;
  %905 = cast(%var_13300, dtype="float64") /* ty=Tensor[(1, 468), float64] */;
  %906 = reshape(%905, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
  %907 = @func_12838(%906) /* ty=Tensor[(13, 6, 6), float64] */;
  %908 = cast(%907, dtype="float32") /* ty=Tensor[(13, 6, 6), float32] */;
  %909 = %901.1;
  %910 = @func_4832(%903) /* ty=Tensor[(12, 13, 2), float32] */;
  %911 = %904.0;
  %912 = sigmoid(%908) /* ty=Tensor[(13, 6, 6), float32] */;
  (%909, %910, %var_13295, %var_13300, %911, %912)
}

def @func_16540() -> (Tensor[(8, 3, 7), float32],) {
  %913 = @func_10806() /* ty=Tensor[(8, 3, 7), float32] */;
  (%913,)
}

def @func_10877(%var_10867: Tensor[(2, 216), bool]) -> (Tensor[(8, 3, 7), float32], Tensor[(16, 8, 6), uint64], Tensor[(2, 216), bool]) {
  %914 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %915 = cast(%var_10867, dtype="bool") /* ty=Tensor[(2, 216), bool] */;
  %916 = cast(%var_10867, dtype="bool") /* ty=Tensor[(2, 216), bool] */;
  %917 = cast(%var_10867, dtype="bool") /* ty=Tensor[(2, 216), bool] */;
  %918 = reshape(%915, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), bool] */;
  %919 = reshape(%916, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), bool] */;
  %920 = reshape(%917, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), bool] */;
  %921 = @func_5218(%918, %919, %920) /* ty=(Tensor[(16, 8, 6), uint64], Tensor[(32, 24), uint64], Tensor[(12, 3, 12), int8], Tensor[(12, 3, 12), float64]) */;
  %922 = %914.0;
  %923 = %921.0;
  (%922, %923, %var_10867)
}

def @func_3889(%var_3869: Tensor[(15, 3, 12), float64]) -> (Tensor[(11, 14, 1), float64], Tensor[(297), float32], Tensor[(15, 3, 12), float32], Tensor[(15, 4, 9), float32]) {
  %924 = cast(meta[relay.Constant][68] /* ty=Tensor[(297), float32] */, dtype="float32") /* ty=Tensor[(297), float32] */;
  %925 = reshape(%924, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float32] */;
  %926 = @func_755(%925) /* ty=(Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(11, 9, 3), uint16]) */;
  %927 = cast(%var_3869, dtype="float64") /* ty=Tensor[(15, 3, 12), float64] */;
  %928 = atan(%927) /* ty=Tensor[(15, 3, 12), float64] */;
  %929 = cast(%928, dtype="float32") /* ty=Tensor[(15, 3, 12), float32] */;
  %930 = cast(%var_3869, dtype="float32") /* ty=Tensor[(15, 3, 12), float32] */;
  %931 = reshape(%930, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %932 = @func_16(%931) /* ty=(Tensor[(15, 4, 9), float32],) */;
  %933 = %926.0;
  %934 = erf(%929) /* ty=Tensor[(15, 3, 12), float32] */;
  %935 = %932.0;
  (%933, meta[relay.Constant][68] /* ty=Tensor[(297), float32] */, %934, %935)
}

def @func_14104() -> (Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(8, 3, 7), float32]) {
  %936 = @func_11362() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) */;
  %937 = @func_10518() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %938 = @func_10483() /* ty=Tensor[(8, 3, 7), float32] */;
  %939 = %936.1;
  %940 = %937.0;
  (%938, %939, %940)
}

def @func_10620() -> Tensor[(8, 3, 7), float32] {
  %941 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %941.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4239(%var_4237: Tensor[(3, 14, 7), int64], %var_4238: Tensor[(3, 14, 7), int64]) -> Tensor[(3, 14, 7), float64] {
  @func_4235(%var_4237, %var_4238) /* ty=Tensor[(3, 14, 7), float64] */
}

def @func_13271(%var_13263: Tensor[(2, 216), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(1, 432), bool], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(2, 216), float32], Tensor[(2, 216), float64]) {
  %0 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %1 = cast(meta[relay.Constant][1] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %2 = reshape(%1, newshape=[11, 14, 1]) /* ty=Tensor[(11, 14, 1), float64] */;
  %3 = @func_711(%2) /* ty=(Tensor[(11, 14, 1), float64],) */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 432), bool] */, dtype="bool") /* ty=Tensor[(1, 432), bool] */;
  %5 = reshape(%4, newshape=[2, 216]) /* ty=Tensor[(2, 216), bool] */;
  %6 = @func_10877(%5) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(16, 8, 6), uint64], Tensor[(2, 216), bool]) */;
  %7 = %6.2;
  %8 = cast(%7, dtype="float64") /* ty=Tensor[(2, 216), float64] */;
  %9 = rsqrt(%8) /* ty=Tensor[(2, 216), float64] */;
  %10 = cast(%9, dtype="float32") /* ty=Tensor[(2, 216), float32] */;
  %11 = sqrt(%10) /* ty=Tensor[(2, 216), float32] */;
  %12 = cast(%var_13263, dtype="float32") /* ty=Tensor[(2, 216), float32] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(2), int32] */;
  %14 = cast(%11, dtype="float32") /* ty=Tensor[(2, 216), float32] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %16 = cast(%9, dtype="float64") /* ty=Tensor[(2, 216), float64] */;
  %17 = %0.2;
  %18 = @func_9370() /* ty=Tensor[(8, 3, 7), float32] */;
  %19 = @func_8651() /* ty=Tensor[(8, 3, 7), float32] */;
  %20 = %3.0;
  %21 = divide(%14, %15) /* ty=Tensor[(2, 216), float32] */;
  %22 = erf(%16) /* ty=Tensor[(2, 216), float64] */;
  (%17, meta[relay.Constant][0] /* ty=Tensor[(1, 432), bool] */, %18, %19, %20, meta[relay.Constant][1] /* ty=Tensor[(154), float64] */, %21, %22)
}

def @func_7038(%var_6970: Tensor[(16, 2, 3), bool], %var_6971: Tensor[(16, 2, 3), bool]) -> (Tensor[(16, 2, 3), bool], Tensor[(12, 3, 12), int8], Tensor[(432), bool], Tensor[(64, 8), int32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 16, 16), float64]) {
  %23 = cast(%var_6971, dtype="bool") /* ty=Tensor[(16, 2, 3), bool] */;
  %24 = shape_of(%var_6970, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%var_6970, dtype="bool") /* ty=Tensor[(16, 2, 3), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(432), bool] */, dtype="bool") /* ty=Tensor[(432), bool] */;
  %28 = cast(meta[relay.Constant][2] /* ty=Tensor[(432), bool] */, dtype="bool") /* ty=Tensor[(432), bool] */;
  %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(432), bool] */, dtype="bool") /* ty=Tensor[(432), bool] */;
  %30 = reshape(%27, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), bool] */;
  %31 = reshape(%28, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), bool] */;
  %32 = reshape(%29, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), bool] */;
  %33 = @func_5218(%30, %31, %32) /* ty=(Tensor[(16, 8, 6), uint64], Tensor[(32, 24), uint64], Tensor[(12, 3, 12), int8], Tensor[(12, 3, 12), float64]) */;
  %34 = cast(meta[relay.Constant][4] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %35 = reshape(%34, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float32] */;
  %36 = cast(meta[relay.Constant][3] /* ty=Tensor[(64, 8), int32] */, dtype="int32") /* ty=Tensor[(64, 8), int32] */;
  %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(64, 8), int32] */, dtype="int32") /* ty=Tensor[(64, 8), int32] */;
  %38 = reshape(%36, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int32] */;
  %39 = reshape(%37, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int32] */;
  %40 = @func_800(%38, %39) /* ty=(Tensor[(2, 16, 16), int32],) */;
  %41 = %40.0;
  %42 = cast(%41, dtype="float64") /* ty=Tensor[(2, 16, 16), float64] */;
  %43 = logical_and(%25, %26) /* ty=Tensor[(16, 2, 3), bool] */;
  %44 = %33.2;
  %45 = @func_4832(%35) /* ty=Tensor[(12, 13, 2), float32] */;
  %46 = rsqrt(%42) /* ty=Tensor[(2, 16, 16), float64] */;
  (%43, %44, meta[relay.Constant][2] /* ty=Tensor[(432), bool] */, meta[relay.Constant][3] /* ty=Tensor[(64, 8), int32] */, %45, meta[relay.Constant][4] /* ty=Tensor[(312), float32] */, %46)
}

def @func_9815(%var_9813: Tensor[(8, 3, 7), float32], %var_9814: Tensor[(1694), float64]) -> (Tensor[(8, 3, 7), uint8], Tensor[(2, 2, 2), float32], Tensor[(336), float64], Tensor[(12, 110), float64], Tensor[(8), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(8, 3, 7), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) {
  %71 = fn (%var_9751: Tensor[(8, 3, 7), float32], %var_9796: Tensor[(1694), float64]) -> (Tensor[(8, 3, 7), uint8], Tensor[(2, 2, 2), float32], Tensor[(336), float64], Tensor[(12, 110), float64], Tensor[(8), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(8, 3, 7), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) {
    %47 = @func_9723() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
    %48 = %47.0;
    %49 = cast(%var_9751, dtype="uint8") /* ty=Tensor[(8, 3, 7), uint8] */;
    %50 = shape_of(%48, dtype="int32") /* ty=Tensor[(3), int32] */;
    %51 = cast(%48, dtype="uint8") /* ty=Tensor[(8, 3, 7), uint8] */;
    %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %53 = cast(meta[relay.Constant][5] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %54 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 110), float64] */, dtype="float64") /* ty=Tensor[(12, 110), float64] */;
    %55 = cast(meta[relay.Constant][7] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
    %56 = reshape(%53, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float64] */;
    %57 = reshape(%54, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
    %58 = reshape(%55, newshape=[8, 1]) /* ty=Tensor[(8, 1), float32] */;
    %59 = @func_7571(%56, %57, %58) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(11, 14, 1), float64], Tensor[(1320), float64], Tensor[(154), float64], Tensor[(2, 2, 2), float32], Tensor[(8, 1), float32]) */;
    %60 = cast(%var_9796, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %61 = reshape(%60, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
    %62 = @func_5419(%61) /* ty=(Tensor[(11, 14, 11), float64],) */;
    %63 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %64 = cast(meta[relay.Constant][8] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %65 = reshape(%64, newshape=[7, 2, 13]) /* ty=Tensor[(7, 2, 13), float32] */;
    %66 = subtract(%51, %52) /* ty=Tensor[(8, 3, 7), uint8] */;
    %67 = %59.4;
    %68 = %62.0;
    %69 = %63.0;
    %70 = @func_6055(%65) /* ty=Tensor[(7, 2, 13), float32] */;
    (%66, %67, meta[relay.Constant][5] /* ty=Tensor[(336), float64] */, meta[relay.Constant][6] /* ty=Tensor[(12, 110), float64] */, meta[relay.Constant][7] /* ty=Tensor[(8), float32] */, %68, %var_9796, %69, %70, meta[relay.Constant][8] /* ty=Tensor[(182), float32] */)
  };
  %71(%var_9813, %var_9814) /* ty=(Tensor[(8, 3, 7), uint8], Tensor[(2, 2, 2), float32], Tensor[(336), float64], Tensor[(12, 110), float64], Tensor[(8), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(8, 3, 7), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) */
}

def @func_15171(%var_15168: Tensor[(540), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) {
  %72 = @func_11231() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) */;
  %73 = cast(%var_15168, dtype="float32") /* ty=Tensor[(540), float32] */;
  %74 = reshape(%73, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %75 = @func_16(%74) /* ty=(Tensor[(15, 4, 9), float32],) */;
  %76 = %72.0;
  %77 = %75.0;
  (%76, %77, %var_15168)
}

def @func_8830() -> (Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) {
  %87 = fn () -> (Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) {
    %78 = cast(meta[relay.Constant][9] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %79 = reshape(%78, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
    %80 = @func_5419(%79) /* ty=(Tensor[(11, 14, 11), float64],) */;
    %81 = cast(meta[relay.Constant][10] /* ty=Tensor[(105), uint32] */, dtype="uint32") /* ty=Tensor[(105), uint32] */;
    %82 = reshape(%81, newshape=[105, 1]) /* ty=Tensor[(105, 1), uint32] */;
    %83 = @func_8751(%82) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(560), float64], Tensor[(105, 1), uint32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) */;
    %84 = @func_8651() /* ty=Tensor[(8, 3, 7), float32] */;
    %85 = %80.0;
    %86 = %83.1;
    (%84, %85, meta[relay.Constant][9] /* ty=Tensor[(1694), float64] */, %86, meta[relay.Constant][10] /* ty=Tensor[(105), uint32] */)
  };
  %87() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */
}

def @func_12838(%var_12825: Tensor[(13, 6, 6), float64]) -> Tensor[(13, 6, 6), float64] {
  %88 = cast(%var_12825, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
  acosh(%88) /* ty=Tensor[(13, 6, 6), float64] */
}

def @func_11619() -> Tensor[(8, 3, 7), float32] {
  @func_11617() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_9202() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  @func_9200() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */
}

def @func_14237() -> (Tensor[(8, 3, 7), float32],) {
  %89 = @func_13524() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %90 = %89.0;
  (%90,)
}

def @func_15265(%var_15263: Tensor[(12, 11, 6), bool], %var_15264: Tensor[(12, 11, 6), bool]) -> Tensor[(12, 11, 6), bool] {
  %95 = fn (%var_15242: Tensor[(12, 11, 6), bool], %var_15243: Tensor[(12, 11, 6), bool]) -> Tensor[(12, 11, 6), bool] {
    %91 = cast(%var_15243, dtype="bool") /* ty=Tensor[(12, 11, 6), bool] */;
    %92 = shape_of(%var_15242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %93 = cast(%var_15242, dtype="bool") /* ty=Tensor[(12, 11, 6), bool] */;
    %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%93, %94) /* ty=Tensor[(12, 11, 6), bool] */
  };
  %95(%var_15263, %var_15264) /* ty=Tensor[(12, 11, 6), bool] */
}

def @func_10442() -> Tensor[(8, 3, 7), float32] {
  %96 = fn () -> Tensor[(8, 3, 7), float32] {
    @func_8708() /* ty=Tensor[(8, 3, 7), float32] */
  };
  %96() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_14654() -> Tensor[(11, 14, 11), float64] {
  %97 = @func_10922() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) */;
  %97.0
}

def @func_12939(%var_12912: Tensor[(1320), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(336), float64], Tensor[(8), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1320), float32]) {
  %98 = @func_10518() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %99 = cast(meta[relay.Constant][11] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %100 = cast(%var_12912, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %101 = cast(meta[relay.Constant][12] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %102 = reshape(%99, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float64] */;
  %103 = reshape(%100, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %104 = reshape(%101, newshape=[8, 1]) /* ty=Tensor[(8, 1), float32] */;
  %105 = @func_7571(%102, %103, %104) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(11, 14, 1), float64], Tensor[(1320), float64], Tensor[(154), float64], Tensor[(2, 2, 2), float32], Tensor[(8, 1), float32]) */;
  %106 = %105.1;
  %107 = cast(%var_12912, dtype="float32") /* ty=Tensor[(1320), float32] */;
  %108 = cast(%106, dtype="float32") /* ty=Tensor[(11, 14, 1), float32] */;
  %109 = @func_10441() /* ty=Tensor[(8, 3, 7), float32] */;
  %110 = %98.0;
  %111 = floor_divide(%107, %108) /* ty=Tensor[(11, 14, 1320), float32] */;
  (%109, meta[relay.Constant][11] /* ty=Tensor[(336), float64] */, meta[relay.Constant][12] /* ty=Tensor[(8), float32] */, %110, %111)
}

def @func_12586() -> (Tensor[(105), uint32], Tensor[(8, 3, 7), float32]) {
  %116 = fn () -> (Tensor[(105), uint32], Tensor[(8, 3, 7), float32]) {
    %112 = @func_11567() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(105), uint32]) */;
    %113 = @func_11207() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
    %114 = %112.1;
    %115 = %113.0;
    (%114, %115)
  };
  %116() /* ty=(Tensor[(105), uint32], Tensor[(8, 3, 7), float32]) */
}

def @func_13524() -> (Tensor[(8, 3, 7), float32],) {
  %117 = @func_10092() /* ty=Tensor[(8, 3, 7), float32] */;
  (%117,)
}

def @func_16232(%var_16231: Tensor[(3, 99), float32]) -> (Tensor[(3, 99), float32], Tensor[(3, 99), uint64]) {
  %130 = fn (%var_16220: Tensor[(3, 99), float32]) -> (Tensor[(3, 99), float32], Tensor[(3, 99), uint64]) {
    %118 = @func_13885() /* ty=(Tensor[(3, 99), float32],) */;
    %119 = %118.0;
    %120 = cast(%var_16220, dtype="float32") /* ty=Tensor[(3, 99), float32] */;
    %121 = shape_of(%119, dtype="int32") /* ty=Tensor[(2), int32] */;
    %122 = cast(%119, dtype="float32") /* ty=Tensor[(3, 99), float32] */;
    %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %124 = cast(%119, dtype="uint64") /* ty=Tensor[(3, 99), uint64] */;
    %125 = shape_of(%var_16220, dtype="int32") /* ty=Tensor[(2), int32] */;
    %126 = cast(%var_16220, dtype="uint64") /* ty=Tensor[(3, 99), uint64] */;
    %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %128 = power(%122, %123) /* ty=Tensor[(3, 99), float32] */;
    %129 = bitwise_or(%126, %127) /* ty=Tensor[(3, 99), uint64] */;
    (%128, %129)
  };
  %130(%var_16231) /* ty=(Tensor[(3, 99), float32], Tensor[(3, 99), uint64]) */
}

def @func_13408(%var_13397: Tensor[(4, 12), float64]) -> (Tensor[(11, 6, 11), bool], Tensor[(2, 2, 12), float64], Tensor[(4, 12), float64]) {
  %131 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 6, 11), bool] */, dtype="bool") /* ty=Tensor[(11, 6, 11), bool] */;
  %132 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(11, 6, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 6, 11), bool] */, dtype="bool") /* ty=Tensor[(11, 6, 11), bool] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %135 = cast(%var_13397, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %136 = reshape(%135, newshape=[2, 2, 12]) /* ty=Tensor[(2, 2, 12), float64] */;
  %137 = @func_12214(%136) /* ty=(Tensor[(2, 2, 12), float64],) */;
  %138 = logical_or(%133, %134) /* ty=Tensor[(11, 6, 11), bool] */;
  %139 = %137.0;
  (%138, %139, %var_13397)
}

def @func_9372() -> Tensor[(8, 3, 7), float32] {
  @func_9370() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_10923() -> (Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) {
  %143 = fn () -> (Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) {
    %140 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
    %141 = %140.1;
    %142 = @func_10092() /* ty=Tensor[(8, 3, 7), float32] */;
    (%141, %142)
  };
  %143() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) */
}

def @func_803(%var_801: Tensor[(2, 16, 16), int32], %var_802: Tensor[(2, 16, 16), int32]) -> (Tensor[(2, 16, 16), int32],) {
  %149 = fn (%var_787: Tensor[(2, 16, 16), int32], %var_788: Tensor[(2, 16, 16), int32]) -> (Tensor[(2, 16, 16), int32],) {
    %144 = cast(%var_788, dtype="int32") /* ty=Tensor[(2, 16, 16), int32] */;
    %145 = shape_of(%var_787, dtype="int32") /* ty=Tensor[(3), int32] */;
    %146 = cast(%var_787, dtype="int32") /* ty=Tensor[(2, 16, 16), int32] */;
    %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %148 = bitwise_xor(%146, %147) /* ty=Tensor[(2, 16, 16), int32] */;
    (%148,)
  };
  %149(%var_801, %var_802) /* ty=(Tensor[(2, 16, 16), int32],) */
}

def @func_13411(%var_13409: Tensor[(4, 12), float64]) -> (Tensor[(11, 6, 11), bool], Tensor[(2, 2, 12), float64], Tensor[(4, 12), float64]) {
  @func_13408(%var_13409) /* ty=(Tensor[(11, 6, 11), bool], Tensor[(2, 2, 12), float64], Tensor[(4, 12), float64]) */
}

def @func_13880() -> Tensor[(8, 3, 7), float32] {
  @func_13878() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_14105() -> (Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(8, 3, 7), float32]) {
  %155 = fn () -> (Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(8, 3, 7), float32]) {
    %150 = @func_11362() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) */;
    %151 = @func_10518() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %152 = @func_10483() /* ty=Tensor[(8, 3, 7), float32] */;
    %153 = %150.1;
    %154 = %151.0;
    (%152, %153, %154)
  };
  %155() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(8, 3, 7), float32]) */
}

def @func_10363(%var_10362: Tensor[(3, 104), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(3, 104), float32]) {
  %161 = fn (%var_10357: Tensor[(3, 104), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(3, 104), float32]) {
    %156 = cast(%var_10357, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
    %157 = reshape(%156, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float32] */;
    %158 = @func_9370() /* ty=Tensor[(8, 3, 7), float32] */;
    %159 = @func_9370() /* ty=Tensor[(8, 3, 7), float32] */;
    %160 = @func_4832(%157) /* ty=Tensor[(12, 13, 2), float32] */;
    (%158, %159, %160, %var_10357)
  };
  %161(%var_10362) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(3, 104), float32]) */
}

def @func_429(%var_427: Tensor[(4, 10, 14), float64], %var_428: Tensor[(540), float32]) -> (Tensor[(4, 10, 14), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) {
  %168 = fn (%var_419: Tensor[(4, 10, 14), float64], %var_424: Tensor[(540), float32]) -> (Tensor[(4, 10, 14), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) {
    %162 = cast(%var_419, dtype="float64") /* ty=Tensor[(4, 10, 14), float64] */;
    %163 = cast(%var_424, dtype="float32") /* ty=Tensor[(540), float32] */;
    %164 = reshape(%163, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
    %165 = @func_16(%164) /* ty=(Tensor[(15, 4, 9), float32],) */;
    %166 = sqrt(%162) /* ty=Tensor[(4, 10, 14), float64] */;
    %167 = %165.0;
    (%166, %167, %var_424)
  };
  %168(%var_427, %var_428) /* ty=(Tensor[(4, 10, 14), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */
}

def @func_12217(%var_12215: Tensor[(2, 2, 12), float64]) -> (Tensor[(2, 2, 12), float64],) {
  @func_12214(%var_12215) /* ty=(Tensor[(2, 2, 12), float64],) */
}

def @func_755(%var_718: Tensor[(11, 9, 3), float32]) -> (Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(11, 9, 3), uint16]) {
  %169 = cast(meta[relay.Constant][15] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %170 = reshape(%169, newshape=[11, 14, 1]) /* ty=Tensor[(11, 14, 1), float64] */;
  %171 = @func_711(%170) /* ty=(Tensor[(11, 14, 1), float64],) */;
  %172 = cast(%var_718, dtype="float32") /* ty=Tensor[(11, 9, 3), float32] */;
  %173 = sqrt(%172) /* ty=Tensor[(11, 9, 3), float32] */;
  %174 = cast(%var_718, dtype="uint16") /* ty=Tensor[(11, 9, 3), uint16] */;
  %175 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%173, dtype="uint16") /* ty=Tensor[(11, 9, 3), uint16] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %178 = %171.0;
  %179 = bitwise_xor(%176, %177) /* ty=Tensor[(11, 9, 3), uint16] */;
  (%178, meta[relay.Constant][15] /* ty=Tensor[(154), float64] */, %179)
}

def @func_8694(%var_8691: float64, %var_8692: Tensor[(42), float64], %var_8693: Tensor[(1, 560), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(540), float32], float64, Tensor[(42), float64], Tensor[(1, 560), float64]) {
  %190 = fn (%var_8681: float64, %var_8682: Tensor[(42), float64], %var_8683: Tensor[(1, 560), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(540), float32], float64, Tensor[(42), float64], Tensor[(1, 560), float64]) {
    %180 = @func_8495() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %181 = cast(%var_8681, dtype="float64") /* ty=float64 */;
    %182 = cast(%var_8682, dtype="float64") /* ty=Tensor[(42), float64] */;
    %183 = cast(%var_8683, dtype="float64") /* ty=Tensor[(1, 560), float64] */;
    %184 = reshape(%181, newshape=[]) /* ty=float64 */;
    %185 = reshape(%182, newshape=[7, 1, 6]) /* ty=Tensor[(7, 1, 6), float64] */;
    %186 = reshape(%183, newshape=[2, 280]) /* ty=Tensor[(2, 280), float64] */;
    %187 = @func_6405(%184, %185, %186) /* ty=(Tensor[(7, 1, 6), bool], Tensor[(4, 10, 14), float64], Tensor[(2, 280), float64], Tensor[(540), float32]) */;
    %188 = %180.0;
    %189 = %187.3;
    (%188, %189, %var_8681, %var_8682, %var_8683)
  };
  %190(%var_8691, %var_8692, %var_8693) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(540), float32], float64, Tensor[(42), float64], Tensor[(1, 560), float64]) */
}

def @func_12649() -> (Tensor[(8, 3, 7), float32], float64, Tensor[(512), int32], Tensor[(560), float64]) {
  %191 = cast(meta[relay.Constant][16] /* ty=Tensor[(512), int32] */, dtype="int32") /* ty=Tensor[(512), int32] */;
  %192 = cast(meta[relay.Constant][17] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %193 = reshape(%191, newshape=[512]) /* ty=Tensor[(512), int32] */;
  %194 = reshape(%192, newshape=[560]) /* ty=Tensor[(560), float64] */;
  %195 = @func_12049(%193, %194) /* ty=(Tensor[(378), float64], Tensor[(8, 3, 7), float64], Tensor[(2, 16, 16), int32], Tensor[(512), int32], Tensor[(1, 560), float64], float64, Tensor[(42), float64], Tensor[(560), float64]) */;
  %196 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
  %197 = %195.5;
  (%196, %197, meta[relay.Constant][16] /* ty=Tensor[(512), int32] */, meta[relay.Constant][17] /* ty=Tensor[(560), float64] */)
}

def @func_14614() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(6, 9, 7), float64]) {
  @func_14612() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(6, 9, 7), float64]) */
}

def @func_16210() -> (Tensor[(8, 3, 7), float32],) {
  %200 = fn () -> (Tensor[(8, 3, 7), float32],) {
    %198 = @func_10518() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %199 = %198.0;
    (%199,)
  };
  %200() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_9632() -> Tensor[(8, 3, 7), float32] {
  %201 = fn () -> Tensor[(8, 3, 7), float32] {
    @func_8651() /* ty=Tensor[(8, 3, 7), float32] */
  };
  %201() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_14367() -> (Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(7, 42), int64], Tensor[(3, 99), float64], Tensor[(8, 3, 7), float32]) {
  @func_14365() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(7, 42), int64], Tensor[(3, 99), float64], Tensor[(8, 3, 7), float32]) */
}

def @func_11281() -> (Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) {
  @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */
}

def @func_14219() -> (Tensor[(182), float32], Tensor[(7, 2, 13), float32], Tensor[(312), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32]) {
  %202 = @func_12733() /* ty=(Tensor[(7, 2, 13), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %203 = cast(meta[relay.Constant][18] /* ty=Tensor[(312), float32] */, dtype="float32") /* ty=Tensor[(312), float32] */;
  %204 = reshape(%203, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %205 = @func_10072(%204) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) */;
  %206 = @func_13123() /* ty=Tensor[(182), float32] */;
  %207 = %202.0;
  %208 = %205.3;
  %209 = @func_10620() /* ty=Tensor[(8, 3, 7), float32] */;
  (%206, %207, %208, meta[relay.Constant][18] /* ty=Tensor[(312), float32] */, %209)
}

def @func_9370() -> Tensor[(8, 3, 7), float32] {
  %210 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %210.0
}

def @func_6055(%var_6049: Tensor[(7, 2, 13), float32]) -> Tensor[(7, 2, 13), float32] {
  %211 = cast(%var_6049, dtype="float32") /* ty=Tensor[(7, 2, 13), float32] */;
  sin(%211) /* ty=Tensor[(7, 2, 13), float32] */
}

def @func_7575(%var_7572: Tensor[(3, 7, 16), float64], %var_7573: Tensor[(1320), float64], %var_7574: Tensor[(8, 1), float32]) -> (Tensor[(3, 7, 16), float64], Tensor[(11, 14, 1), float64], Tensor[(1320), float64], Tensor[(154), float64], Tensor[(2, 2, 2), float32], Tensor[(8, 1), float32]) {
  %227 = fn (%var_7551: Tensor[(3, 7, 16), float64], %var_7556: Tensor[(1320), float64], %var_7569: Tensor[(8, 1), float32]) -> (Tensor[(3, 7, 16), float64], Tensor[(11, 14, 1), float64], Tensor[(1320), float64], Tensor[(154), float64], Tensor[(2, 2, 2), float32], Tensor[(8, 1), float32]) {
    %212 = cast(%var_7551, dtype="float64") /* ty=Tensor[(3, 7, 16), float64] */;
    %213 = cast(%var_7556, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %214 = cast(meta[relay.Constant][19] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
    %215 = cast(meta[relay.Constant][19] /* ty=Tensor[(154), float64] */, dtype="float32") /* ty=Tensor[(154), float32] */;
    %216 = reshape(%213, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
    %217 = reshape(%214, newshape=[22, 7]) /* ty=Tensor[(22, 7), float64] */;
    %218 = reshape(%215, newshape=[22, 7]) /* ty=Tensor[(22, 7), float32] */;
    %219 = @func_1636(%216, %217, %218) /* ty=(Tensor[(12, 11, 10), float64], Tensor[(11, 14, 1), float64], Tensor[(22, 7), uint64]) */;
    %220 = cast(%var_7569, dtype="float32") /* ty=Tensor[(8, 1), float32] */;
    %221 = cast(%var_7569, dtype="float32") /* ty=Tensor[(8, 1), float32] */;
    %222 = reshape(%220, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
    %223 = reshape(%221, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
    %224 = rsqrt(%212) /* ty=Tensor[(3, 7, 16), float64] */;
    %225 = %219.1;
    %226 = @func_7482(%222, %223) /* ty=Tensor[(2, 2, 2), float32] */;
    (%224, %225, %var_7556, meta[relay.Constant][19] /* ty=Tensor[(154), float64] */, %226, %var_7569)
  };
  %227(%var_7572, %var_7573, %var_7574) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(11, 14, 1), float64], Tensor[(1320), float64], Tensor[(154), float64], Tensor[(2, 2, 2), float32], Tensor[(8, 1), float32]) */
}

def @func_16187() -> Tensor[(8, 3, 7), float32] {
  %228 = fn () -> Tensor[(8, 3, 7), float32] {
    @func_11747() /* ty=Tensor[(8, 3, 7), float32] */
  };
  %228() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_16632() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %235 = fn () -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
    %229 = @func_11478() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %230 = @func_11207() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
    %231 = @func_16540() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %232 = %229.0;
    %233 = %230.1;
    %234 = %231.0;
    (%232, %233, %234)
  };
  %235() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */
}

def @func_9723() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %236 = @func_8495() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %237 = %236.0;
  %238 = @func_8651() /* ty=Tensor[(8, 3, 7), float32] */;
  (%237, %238)
}

def @func_14531(%var_14530: Tensor[(1, 12, 8), float32]) -> (Tensor[(1, 12, 8), float32],) {
  %242 = fn (%var_14505: Tensor[(1, 12, 8), float32]) -> (Tensor[(1, 12, 8), float32],) {
    %239 = cast(-9.45623f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %240 = cast(%var_14505, dtype="float32") /* ty=Tensor[(1, 12, 8), float32] */;
    %241 = floor_mod(%239, %240) /* ty=Tensor[(1, 12, 8), float32] */;
    (%241,)
  };
  %242(%var_14530) /* ty=(Tensor[(1, 12, 8), float32],) */
}

def @func_13956() -> (Tensor[(560), float64], Tensor[(8, 3, 7), float32]) {
  %243 = @func_12649() /* ty=(Tensor[(8, 3, 7), float32], float64, Tensor[(512), int32], Tensor[(560), float64]) */;
  %244 = %243.3;
  %245 = @func_10483() /* ty=Tensor[(8, 3, 7), float32] */;
  (%244, %245)
}

def @func_6833(%var_6831: Tensor[(5, 12, 5), int32], %var_6832: Tensor[(5, 12, 5), int32]) -> (Tensor[(5, 12, 5), int32],) {
  %251 = fn (%var_6818: Tensor[(5, 12, 5), int32], %var_6819: Tensor[(5, 12, 5), int32]) -> (Tensor[(5, 12, 5), int32],) {
    %246 = cast(%var_6819, dtype="int32") /* ty=Tensor[(5, 12, 5), int32] */;
    %247 = shape_of(%var_6818, dtype="int32") /* ty=Tensor[(3), int32] */;
    %248 = cast(%var_6818, dtype="int32") /* ty=Tensor[(5, 12, 5), int32] */;
    %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %250 = bitwise_or(%248, %249) /* ty=Tensor[(5, 12, 5), int32] */;
    (%250,)
  };
  %251(%var_6831, %var_6832) /* ty=(Tensor[(5, 12, 5), int32],) */
}

def @func_13125() -> Tensor[(182), float32] {
  @func_13123() /* ty=Tensor[(182), float32] */
}

def @func_15019() -> (Tensor[(3, 14, 7), float64], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) {
  %258 = fn () -> (Tensor[(3, 14, 7), float64], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) {
    %252 = @func_14365() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(7, 42), int64], Tensor[(3, 99), float64], Tensor[(8, 3, 7), float32]) */;
    %253 = cast(meta[relay.Constant][20] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %254 = reshape(%253, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
    %255 = @func_5419(%254) /* ty=(Tensor[(11, 14, 11), float64],) */;
    %256 = %252.1;
    %257 = %255.0;
    (%256, %257, meta[relay.Constant][20] /* ty=Tensor[(1694), float64] */)
  };
  %258() /* ty=(Tensor[(3, 14, 7), float64], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) */
}

def @func_12235() -> Tensor[(8, 3, 7), float32] {
  %260 = fn () -> Tensor[(8, 3, 7), float32] {
    %259 = @func_10274() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %259.0
  };
  %260() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_11726(%var_11724: Tensor[(42, 4), float32], %var_11725: Tensor[(312), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(42, 4), float32], Tensor[(3, 104), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(154), float64], Tensor[(8, 3, 7), float32]) {
  @func_11722(%var_11724, %var_11725) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(42, 4), float32], Tensor[(3, 104), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(154), float64], Tensor[(8, 3, 7), float32]) */
}

def @func_12313() -> (Tensor[(182), float32],) {
  %261 = @func_11362() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) */;
  %262 = %261.3;
  (%262,)
}

def @func_14574() -> Tensor[(8, 3, 7), float32] {
  @func_14572() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_16469() -> (Tensor[(8, 3, 7), float32],) {
  @func_16467() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_16084(%var_16083: Tensor[(312), float32]) -> (Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32], Tensor[(312), float32], Tensor[(468), float64], Tensor[(378), float64], Tensor[(11, 14, 11), float64]) {
  %276 = fn (%var_16050: Tensor[(312), float32]) -> (Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32], Tensor[(312), float32], Tensor[(468), float64], Tensor[(378), float64], Tensor[(11, 14, 11), float64]) {
    %263 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
    %264 = cast(%var_16050, dtype="float32") /* ty=Tensor[(312), float32] */;
    %265 = cast(meta[relay.Constant][21] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
    %266 = reshape(%264, newshape=[1, 312]) /* ty=Tensor[(1, 312), float32] */;
    %267 = reshape(%265, newshape=[1, 468]) /* ty=Tensor[(1, 468), float64] */;
    %268 = @func_13311(%266, %267) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(1, 312), float32], Tensor[(1, 468), float64], Tensor[(8, 3, 7), float32], Tensor[(13, 6, 6), float32]) */;
    %269 = %263.1;
    %270 = cast(%269, dtype="float64") /* ty=Tensor[(11, 14, 11), float64] */;
    %271 = reshape(%270, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
    %272 = @func_5419(%271) /* ty=(Tensor[(11, 14, 11), float64],) */;
    %273 = %268.0;
    %274 = @func_14713() /* ty=Tensor[(378), float64] */;
    %275 = %272.0;
    (%269, %273, %var_16050, meta[relay.Constant][21] /* ty=Tensor[(468), float64] */, %274, %275)
  };
  %276(%var_16083) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32], Tensor[(312), float32], Tensor[(468), float64], Tensor[(378), float64], Tensor[(11, 14, 11), float64]) */
}

def @func_16372(%var_16371: Tensor[(312), float32]) -> (Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32], Tensor[(312), float32]) {
  %283 = fn (%var_16351: Tensor[(312), float32]) -> (Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32], Tensor[(312), float32]) {
    %277 = @func_16132() /* ty=(Tensor[(8, 3, 7), float64],) */;
    %278 = cast(%var_16351, dtype="float32") /* ty=Tensor[(312), float32] */;
    %279 = reshape(%278, newshape=[312]) /* ty=Tensor[(312), float32] */;
    %280 = @func_10072(%279) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) */;
    %281 = %277.0;
    %282 = %280.0;
    (%281, %282, %var_16351)
  };
  %283(%var_16371) /* ty=(Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32], Tensor[(312), float32]) */
}

def @func_13315(%var_13313: Tensor[(1, 312), float32], %var_13314: Tensor[(1, 468), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(1, 312), float32], Tensor[(1, 468), float64], Tensor[(8, 3, 7), float32], Tensor[(13, 6, 6), float32]) {
  @func_13311(%var_13313, %var_13314) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(1, 312), float32], Tensor[(1, 468), float64], Tensor[(8, 3, 7), float32], Tensor[(13, 6, 6), float32]) */
}

def @func_12651() -> (Tensor[(8, 3, 7), float32], float64, Tensor[(512), int32], Tensor[(560), float64]) {
  @func_12649() /* ty=(Tensor[(8, 3, 7), float32], float64, Tensor[(512), int32], Tensor[(560), float64]) */
}

def @func_758(%var_756: Tensor[(11, 9, 3), float32]) -> (Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(11, 9, 3), uint16]) {
  @func_755(%var_756) /* ty=(Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(11, 9, 3), uint16]) */
}

def @func_12942(%var_12940: Tensor[(1320), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(336), float64], Tensor[(8), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1320), float32]) {
  @func_12939(%var_12940) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(336), float64], Tensor[(8), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1320), float32]) */
}

def @func_4002(%var_4001: Tensor[(6, 9, 7), float64]) -> Tensor[(6, 9, 7), float64] {
  %288 = fn (%var_3993: Tensor[(6, 9, 7), float64]) -> Tensor[(6, 9, 7), float64] {
    %284 = cast(meta[relay.Constant][22] /* ty=Tensor[(6, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
    %285 = shape_of(%var_3993, dtype="int32") /* ty=Tensor[(3), int32] */;
    %286 = cast(%var_3993, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
    %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%286, %287) /* ty=Tensor[(6, 9, 7), float64] */
  };
  %288(%var_4001) /* ty=Tensor[(6, 9, 7), float64] */
}

def @func_8751(%var_8737: Tensor[(105, 1), uint32]) -> (Tensor[(8, 3, 7), float32], Tensor[(560), float64], Tensor[(105, 1), uint32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) {
  %289 = cast(%var_8737, dtype="uint32") /* ty=Tensor[(105, 1), uint32] */;
  %290 = cast(%var_8737, dtype="uint32") /* ty=Tensor[(105, 1), uint32] */;
  %291 = reshape(%289, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), uint32] */;
  %292 = reshape(%290, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), uint32] */;
  %293 = @func_2833(%291, %292) /* ty=(Tensor[(15, 7, ?), uint32], Tensor[(15, 4, 9), float32], Tensor[(560), float64], Tensor[(540), float32]) */;
  %294 = cast(meta[relay.Constant][23] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %295 = cast(meta[relay.Constant][23] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %296 = reshape(%294, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
  %297 = reshape(%295, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
  %298 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
  %299 = %293.2;
  %300 = @func_7482(%296, %297) /* ty=Tensor[(2, 2, 2), float32] */;
  (%298, %299, %var_8737, %300, meta[relay.Constant][23] /* ty=Tensor[(8), float32] */)
}

def @func_12502() -> (Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) {
  %306 = fn () -> (Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) {
    %301 = @func_10785() /* ty=(Tensor[(8, 3, 7), bool], Tensor[(11, 14, 11), float64]) */;
    %302 = @func_8800() /* ty=Tensor[(8, 3, 7), float32] */;
    %303 = cast(%302, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %304 = %301.1;
    %305 = acos(%303) /* ty=Tensor[(8, 3, 7), float32] */;
    (%304, %305)
  };
  %306() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) */
}

def @func_16467() -> (Tensor[(8, 3, 7), float32],) {
  %307 = @func_11478() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %308 = %307.0;
  (%308,)
}

def @func_11264(%var_11263: Tensor[(11, 14), float64]) -> (Tensor[(11, 14, 11), float64], Tensor[(12, 11, 10), float64], Tensor[(1320), float64], Tensor[(11, 14), float64]) {
  %319 = fn (%var_11260: Tensor[(11, 14), float64]) -> (Tensor[(11, 14, 11), float64], Tensor[(12, 11, 10), float64], Tensor[(1320), float64], Tensor[(11, 14), float64]) {
    %309 = @func_9104() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(11, 14, 11), float64]) */;
    %310 = cast(meta[relay.Constant][24] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %311 = cast(%var_11260, dtype="float64") /* ty=Tensor[(11, 14), float64] */;
    %312 = cast(%var_11260, dtype="float32") /* ty=Tensor[(11, 14), float32] */;
    %313 = reshape(%310, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
    %314 = reshape(%311, newshape=[22, 7]) /* ty=Tensor[(22, 7), float64] */;
    %315 = reshape(%312, newshape=[22, 7]) /* ty=Tensor[(22, 7), float32] */;
    %316 = @func_1636(%313, %314, %315) /* ty=(Tensor[(12, 11, 10), float64], Tensor[(11, 14, 1), float64], Tensor[(22, 7), uint64]) */;
    %317 = %309.1;
    %318 = %316.0;
    (%317, %318, meta[relay.Constant][24] /* ty=Tensor[(1320), float64] */, %var_11260)
  };
  %319(%var_11263) /* ty=(Tensor[(11, 14, 11), float64], Tensor[(12, 11, 10), float64], Tensor[(1320), float64], Tensor[(11, 14), float64]) */
}

def @func_10879(%var_10878: Tensor[(2, 216), bool]) -> (Tensor[(8, 3, 7), float32], Tensor[(16, 8, 6), uint64], Tensor[(2, 216), bool]) {
  %330 = fn (%var_10867: Tensor[(2, 216), bool]) -> (Tensor[(8, 3, 7), float32], Tensor[(16, 8, 6), uint64], Tensor[(2, 216), bool]) {
    %320 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %321 = cast(%var_10867, dtype="bool") /* ty=Tensor[(2, 216), bool] */;
    %322 = cast(%var_10867, dtype="bool") /* ty=Tensor[(2, 216), bool] */;
    %323 = cast(%var_10867, dtype="bool") /* ty=Tensor[(2, 216), bool] */;
    %324 = reshape(%321, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), bool] */;
    %325 = reshape(%322, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), bool] */;
    %326 = reshape(%323, newshape=[12, 3, 12]) /* ty=Tensor[(12, 3, 12), bool] */;
    %327 = @func_5218(%324, %325, %326) /* ty=(Tensor[(16, 8, 6), uint64], Tensor[(32, 24), uint64], Tensor[(12, 3, 12), int8], Tensor[(12, 3, 12), float64]) */;
    %328 = %320.0;
    %329 = %327.0;
    (%328, %329, %var_10867)
  };
  %330(%var_10878) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(16, 8, 6), uint64], Tensor[(2, 216), bool]) */
}

def @func_11081() -> (Tensor[(8, 3, 7), float64],) {
  @func_11079() /* ty=(Tensor[(8, 3, 7), float64],) */
}

def @func_10899() -> Tensor[(8, 3, 7), float32] {
  @func_10897() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_15303() -> (Tensor[(8, 3, 7), float32],) {
  %331 = @func_12808() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(3, 99), float32]) */;
  %332 = %331.0;
  (%332,)
}

def @func_13311(%var_13295: Tensor[(1, 312), float32], %var_13300: Tensor[(1, 468), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(1, 312), float32], Tensor[(1, 468), float64], Tensor[(8, 3, 7), float32], Tensor[(13, 6, 6), float32]) {
  %333 = @func_12585() /* ty=(Tensor[(105), uint32], Tensor[(8, 3, 7), float32]) */;
  %334 = cast(%var_13295, dtype="float32") /* ty=Tensor[(1, 312), float32] */;
  %335 = reshape(%334, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float32] */;
  %336 = @func_12808() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(3, 99), float32]) */;
  %337 = cast(%var_13300, dtype="float64") /* ty=Tensor[(1, 468), float64] */;
  %338 = reshape(%337, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
  %339 = @func_12838(%338) /* ty=Tensor[(13, 6, 6), float64] */;
  %340 = cast(%339, dtype="float32") /* ty=Tensor[(13, 6, 6), float32] */;
  %341 = %333.1;
  %342 = @func_4832(%335) /* ty=Tensor[(12, 13, 2), float32] */;
  %343 = %336.0;
  %344 = sigmoid(%340) /* ty=Tensor[(13, 6, 6), float32] */;
  (%341, %342, %var_13295, %var_13300, %343, %344)
}

def @func_14283() -> Tensor[(182), float32] {
  %346 = fn () -> Tensor[(182), float32] {
    %345 = @func_12313() /* ty=(Tensor[(182), float32],) */;
    %345.0
  };
  %346() /* ty=Tensor[(182), float32] */
}

def @func_16541() -> (Tensor[(8, 3, 7), float32],) {
  %348 = fn () -> (Tensor[(8, 3, 7), float32],) {
    %347 = @func_10806() /* ty=Tensor[(8, 3, 7), float32] */;
    (%347,)
  };
  %348() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_11722(%var_11669: Tensor[(42, 4), float32], %var_11682: Tensor[(312), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(42, 4), float32], Tensor[(3, 104), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(154), float64], Tensor[(8, 3, 7), float32]) {
  %349 = cast(%var_11669, dtype="float32") /* ty=Tensor[(42, 4), float32] */;
  %350 = reshape(%349, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %351 = cast(%var_11682, dtype="float32") /* ty=Tensor[(312), float32] */;
  %352 = reshape(%351, newshape=[3, 104]) /* ty=Tensor[(3, 104), float32] */;
  %353 = @func_10361(%352) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(3, 104), float32]) */;
  %354 = %353.3;
  %355 = cast(%354, dtype="float32") /* ty=Tensor[(3, 104), float32] */;
  %356 = reshape(%355, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %357 = @func_10072(%356) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) */;
  %358 = @func_10922() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) */;
  %359 = @func_8947() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(154), float64], Tensor[(3, 99), float32]) */;
  %360 = %359.1;
  %361 = cast(%360, dtype="float64") /* ty=Tensor[(154), float64] */;
  %362 = cos(%361) /* ty=Tensor[(154), float64] */;
  %363 = cast(%362, dtype="float64") /* ty=Tensor[(154), float64] */;
  %364 = @func_10465(%350) /* ty=Tensor[(8, 3, 7), float32] */;
  %365 = %357.0;
  %366 = %358.0;
  %367 = atanh(%363) /* ty=Tensor[(154), float64] */;
  %368 = @func_9631() /* ty=Tensor[(8, 3, 7), float32] */;
  (%364, %var_11669, %354, %var_11682, %365, %366, %367, %368)
}

def @func_12866(%var_12865: Tensor[(14, 15, 2), float32]) -> Tensor[(14, 15, 2), float32] {
  %370 = fn (%var_12861: Tensor[(14, 15, 2), float32]) -> Tensor[(14, 15, 2), float32] {
    %369 = cast(%var_12861, dtype="float32") /* ty=Tensor[(14, 15, 2), float32] */;
    sqrt(%369) /* ty=Tensor[(14, 15, 2), float32] */
  };
  %370(%var_12865) /* ty=Tensor[(14, 15, 2), float32] */
}

def @func_12734() -> (Tensor[(7, 2, 13), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %376 = fn () -> (Tensor[(7, 2, 13), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
    %371 = @func_11362() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) */;
    %372 = %371.2;
    %373 = @func_11747() /* ty=Tensor[(8, 3, 7), float32] */;
    %374 = @func_10806() /* ty=Tensor[(8, 3, 7), float32] */;
    %375 = @func_10670() /* ty=Tensor[(8, 3, 7), float32] */;
    (%372, %373, %374, %375)
  };
  %376() /* ty=(Tensor[(7, 2, 13), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */
}

def @func_10484() -> Tensor[(8, 3, 7), float32] {
  %378 = fn () -> Tensor[(8, 3, 7), float32] {
    %377 = @func_9200() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
    %377.1
  };
  %378() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_11617() -> Tensor[(8, 3, 7), float32] {
  @func_10806() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_12156(%var_12155: Tensor[(294), int64]) -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(294), int64], Tensor[(16, 8, 6), uint64], Tensor[(768), uint64]) {
  %393 = fn (%var_12132: Tensor[(294), int64]) -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(294), int64], Tensor[(16, 8, 6), uint64], Tensor[(768), uint64]) {
    %379 = @func_10483() /* ty=Tensor[(8, 3, 7), float32] */;
    %380 = cast(%379, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %381 = reshape(%380, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
    %382 = @func_11231() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) */;
    %383 = cast(%var_12132, dtype="int64") /* ty=Tensor[(294), int64] */;
    %384 = cast(%var_12132, dtype="int64") /* ty=Tensor[(294), int64] */;
    %385 = reshape(%383, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), int64] */;
    %386 = reshape(%384, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), int64] */;
    %387 = cast(meta[relay.Constant][25] /* ty=Tensor[(768), uint64] */, dtype="uint64") /* ty=Tensor[(768), uint64] */;
    %388 = reshape(%387, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), uint64] */;
    %389 = @func_10465(%381) /* ty=Tensor[(8, 3, 7), float32] */;
    %390 = %382.0;
    %391 = @func_4235(%385, %386) /* ty=Tensor[(3, 14, 7), float64] */;
    %392 = @func_1283(%388) /* ty=Tensor[(16, 8, 6), uint64] */;
    (%379, %389, %390, %391, %var_12132, %392, meta[relay.Constant][25] /* ty=Tensor[(768), uint64] */)
  };
  %393(%var_12155) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(294), int64], Tensor[(16, 8, 6), uint64], Tensor[(768), uint64]) */
}

def @func_8802() -> Tensor[(8, 3, 7), float32] {
  @func_8800() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_10311() -> (Tensor[(8, 3, 7), float32],) {
  %394 = @func_10274() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %395 = %394.0;
  %396 = cast(%395, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %397 = asin(%396) /* ty=Tensor[(8, 3, 7), float32] */;
  (%397,)
}

def @func_14221() -> (Tensor[(182), float32], Tensor[(7, 2, 13), float32], Tensor[(312), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32]) {
  @func_14219() /* ty=(Tensor[(182), float32], Tensor[(7, 2, 13), float32], Tensor[(312), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32]) */
}

def @func_14831() -> Tensor[(8, 3, 7), float64] {
  %399 = fn () -> Tensor[(8, 3, 7), float64] {
    %398 = @func_11079() /* ty=(Tensor[(8, 3, 7), float64],) */;
    %398.0
  };
  %399() /* ty=Tensor[(8, 3, 7), float64] */
}

def @func_11135(%var_11133: Tensor[(1694), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(2, 2, 2), float32], Tensor[(1694), float64]) {
  @func_11132(%var_11133) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(2, 2, 2), float32], Tensor[(1694), float64]) */
}

def @func_4235(%var_4220: Tensor[(3, 14, 7), int64], %var_4221: Tensor[(3, 14, 7), int64]) -> Tensor[(3, 14, 7), float64] {
  %400 = cast(%var_4221, dtype="bool") /* ty=Tensor[(3, 14, 7), bool] */;
  %401 = shape_of(%var_4220, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%var_4220, dtype="bool") /* ty=Tensor[(3, 14, 7), bool] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %404 = not_equal(%402, %403) /* ty=Tensor[(3, 14, 7), bool] */;
  %405 = cast(%404, dtype="float64") /* ty=Tensor[(3, 14, 7), float64] */;
  acos(%405) /* ty=Tensor[(3, 14, 7), float64] */
}

def @func_9990(%var_9988: Tensor[(336), float64], %var_9989: Tensor[(9, 4), float64]) -> (Tensor[(11, 14, 1), float64], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(336), float64], Tensor[(2, 4), float32], Tensor[(1320, 154), bool], Tensor[(6, 6, 6), float64], Tensor[(9, 4), float64], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(540), float64], Tensor[(2, 13, 16), uint32], Tensor[(416), uint32]) {
  %435 = fn (%var_9921: Tensor[(336), float64], %var_9951: Tensor[(9, 4), float64]) -> (Tensor[(11, 14, 1), float64], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(336), float64], Tensor[(2, 4), float32], Tensor[(1320, 154), bool], Tensor[(6, 6, 6), float64], Tensor[(9, 4), float64], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(540), float64], Tensor[(2, 13, 16), uint32], Tensor[(416), uint32]) {
    %406 = @func_8947() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(154), float64], Tensor[(3, 99), float32]) */;
    %407 = %406.1;
    %408 = cast(%407, dtype="float64") /* ty=Tensor[(154), float64] */;
    %409 = reshape(%408, newshape=[11, 14, 1]) /* ty=Tensor[(11, 14, 1), float64] */;
    %410 = @func_711(%409) /* ty=(Tensor[(11, 14, 1), float64],) */;
    %411 = cast(%var_9921, dtype="float64") /* ty=Tensor[(336), float64] */;
    %412 = cast(meta[relay.Constant][26] /* ty=Tensor[(1320, 1), float64] */, dtype="float64") /* ty=Tensor[(1320, 1), float64] */;
    %413 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 4), float32] */, dtype="float32") /* ty=Tensor[(2, 4), float32] */;
    %414 = reshape(%411, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float64] */;
    %415 = reshape(%412, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
    %416 = reshape(%413, newshape=[8, 1]) /* ty=Tensor[(8, 1), float32] */;
    %417 = @func_7571(%414, %415, %416) /* ty=(Tensor[(3, 7, 16), float64], Tensor[(11, 14, 1), float64], Tensor[(1320), float64], Tensor[(154), float64], Tensor[(2, 2, 2), float32], Tensor[(8, 1), float32]) */;
    %418 = cast(meta[relay.Constant][26] /* ty=Tensor[(1320, 1), float64] */, dtype="bool") /* ty=Tensor[(1320, 1), bool] */;
    %419 = cast(%407, dtype="bool") /* ty=Tensor[(154), bool] */;
    %420 = cast(%var_9951, dtype="float64") /* ty=Tensor[(9, 4), float64] */;
    %421 = reshape(%420, newshape=[6, 6, 1]) /* ty=Tensor[(6, 6, 1), float64] */;
    %422 = cast(meta[relay.Constant][28] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %423 = reshape(%422, newshape=[15, 3, 12]) /* ty=Tensor[(15, 3, 12), float64] */;
    %424 = @func_3889(%423) /* ty=(Tensor[(11, 14, 1), float64], Tensor[(297), float32], Tensor[(15, 3, 12), float32], Tensor[(15, 4, 9), float32]) */;
    %425 = cast(meta[relay.Constant][29] /* ty=Tensor[(416), uint32] */, dtype="uint32") /* ty=Tensor[(416), uint32] */;
    %426 = reshape(%425, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), uint32] */;
    %427 = %410.0;
    %428 = @func_8523() /* ty=Tensor[(8, 3, 7), float32] */;
    %429 = %417.1;
    %430 = logical_and(%418, %419) /* ty=Tensor[(1320, 154), bool] */;
    %431 = @func_1847(%421) /* ty=Tensor[(6, 6, 6), float64] */;
    %432 = @func_9370() /* ty=Tensor[(8, 3, 7), float32] */;
    %433 = %424.0;
    %434 = @func_2943(%426) /* ty=Tensor[(2, 13, 16), uint32] */;
    (%427, %428, %429, %var_9921, meta[relay.Constant][27] /* ty=Tensor[(2, 4), float32] */, %430, %431, %var_9951, %432, %433, meta[relay.Constant][28] /* ty=Tensor[(540), float64] */, %434, meta[relay.Constant][29] /* ty=Tensor[(416), uint32] */)
  };
  %435(%var_9988, %var_9989) /* ty=(Tensor[(11, 14, 1), float64], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(336), float64], Tensor[(2, 4), float32], Tensor[(1320, 154), bool], Tensor[(6, 6, 6), float64], Tensor[(9, 4), float64], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(540), float64], Tensor[(2, 13, 16), uint32], Tensor[(416), uint32]) */
}

def @func_7042(%var_7040: Tensor[(16, 2, 3), bool], %var_7041: Tensor[(16, 2, 3), bool]) -> (Tensor[(16, 2, 3), bool], Tensor[(12, 3, 12), int8], Tensor[(432), bool], Tensor[(64, 8), int32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 16, 16), float64]) {
  @func_7038(%var_7040, %var_7041) /* ty=(Tensor[(16, 2, 3), bool], Tensor[(12, 3, 12), int8], Tensor[(432), bool], Tensor[(64, 8), int32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 16, 16), float64]) */
}

def @func_14499() -> (Tensor[(9, 14, 2), float64],) {
  %438 = fn () -> (Tensor[(9, 14, 2), float64],) {
    %436 = @func_12273() /* ty=(Tensor[(9, 14, 2), float64],) */;
    %437 = %436.0;
    (%437,)
  };
  %438() /* ty=(Tensor[(9, 14, 2), float64],) */
}

def @func_16002(%var_15969: Tensor[(5, 4, 8), float64]) -> Tensor[(5, 4, 8), float64] {
  %439 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 4, 8), float64] */, dtype="bool") /* ty=Tensor[(5, 4, 8), bool] */;
  %440 = shape_of(%var_15969, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%var_15969, dtype="bool") /* ty=Tensor[(5, 4, 8), bool] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %443 = less(%441, %442) /* ty=Tensor[(5, 4, 8), bool] */;
  %444 = cast(%443, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
  sqrt(%444) /* ty=Tensor[(5, 4, 8), float64] */
}

def @func_5421(%var_5420: Tensor[(11, 14, 11), float64]) -> (Tensor[(11, 14, 11), float64],) {
  %447 = fn (%var_5412: Tensor[(11, 14, 11), float64]) -> (Tensor[(11, 14, 11), float64],) {
    %445 = cast(%var_5412, dtype="float64") /* ty=Tensor[(11, 14, 11), float64] */;
    %446 = sinh(%445) /* ty=Tensor[(11, 14, 11), float64] */;
    (%446,)
  };
  %447(%var_5420) /* ty=(Tensor[(11, 14, 11), float64],) */
}

def @func_13997(%var_13995: Tensor[(11, 6, 8), int64], %var_13996: Tensor[(11, 6, 8), int64]) -> Tensor[(11, 6, 8), bool] {
  @func_13993(%var_13995, %var_13996) /* ty=Tensor[(11, 6, 8), bool] */
}

def @func_11833(%var_11831: Tensor[(14, 6, 7), bool]) -> Tensor[(14, 6, 7), bool] {
  @func_11830(%var_11831) /* ty=Tensor[(14, 6, 7), bool] */
}

def @func_12373(%var_12367: Tensor[(14, 2, 5), float64]) -> (Tensor[(14, 2, 5), float64], Tensor[(8, 3, 7), float32]) {
  %448 = cast(%var_12367, dtype="float64") /* ty=Tensor[(14, 2, 5), float64] */;
  %449 = @func_10922() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) */;
  %450 = cosh(%448) /* ty=Tensor[(14, 2, 5), float64] */;
  %451 = %449.1;
  (%450, %451)
}

def @func_15759() -> (Tensor[(8, 3, 7), float32],) {
  %454 = fn () -> (Tensor[(8, 3, 7), float32],) {
    %452 = @func_10311() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %453 = %452.0;
    (%453,)
  };
  %454() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_10467(%var_10466: Tensor[(8, 3, 7), float32]) -> Tensor[(8, 3, 7), float32] {
  %462 = fn (%var_10452: Tensor[(8, 3, 7), float32]) -> Tensor[(8, 3, 7), float32] {
    %455 = @func_10092() /* ty=Tensor[(8, 3, 7), float32] */;
    %456 = cast(%var_10452, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
    %458 = cast(%455, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %460 = power(%458, %459) /* ty=Tensor[(8, 3, 7), float32] */;
    %461 = cast(%460, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    sinh(%461) /* ty=Tensor[(8, 3, 7), float32] */
  };
  %462(%var_10466) /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_15616() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(14, 2, 5), float64], Tensor[(1694), float64], Tensor[(8, 3, 7), float32], Tensor[(5, 28), float64], Tensor[(5, 28), bool]) {
  %463 = @func_10311() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %464 = @func_9200() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %465 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 28), float64] */, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %466 = reshape(%465, newshape=[14, 2, 5]) /* ty=Tensor[(14, 2, 5), float64] */;
  %467 = @func_12373(%466) /* ty=(Tensor[(14, 2, 5), float64], Tensor[(8, 3, 7), float32]) */;
  %468 = @func_15018() /* ty=(Tensor[(3, 14, 7), float64], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) */;
  %469 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 28), float64] */, dtype="float32") /* ty=Tensor[(5, 28), float32] */;
  %470 = tan(%469) /* ty=Tensor[(5, 28), float32] */;
  %471 = cast(%470, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %472 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(5, 28), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %473 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 28), float64] */, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %475 = cast(meta[relay.Constant][31] /* ty=Tensor[(5, 28), float64] */, dtype="bool") /* ty=Tensor[(5, 28), bool] */;
  %476 = shape_of(%470, dtype="int32") /* ty=Tensor[(2), int32] */;
  %477 = cast(%470, dtype="bool") /* ty=Tensor[(5, 28), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %479 = %463.0;
  %480 = %464.0;
  %481 = %467.0;
  %482 = %468.2;
  %483 = @func_12234() /* ty=Tensor[(8, 3, 7), float32] */;
  %484 = floor_divide(%473, %474) /* ty=Tensor[(5, 28), float64] */;
  %485 = logical_or(%477, %478) /* ty=Tensor[(5, 28), bool] */;
  (%479, %480, %481, %482, %483, %484, %485)
}

def @func_11097() -> (Tensor[(8, 3, 7), float32],) {
  %487 = fn () -> (Tensor[(8, 3, 7), float32],) {
    %486 = @func_10897() /* ty=Tensor[(8, 3, 7), float32] */;
    (%486,)
  };
  %487() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_15354() -> Tensor[(8, 3, 7), float32] {
  @func_15352() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_1285(%var_1284: Tensor[(16, 8, 6), uint64]) -> Tensor[(16, 8, 6), uint64] {
  %490 = fn (%var_1275: Tensor[(16, 8, 6), uint64]) -> Tensor[(16, 8, 6), uint64] {
    %488 = cast(meta[relay.Constant][32] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %489 = cast(%var_1275, dtype="uint64") /* ty=Tensor[(16, 8, 6), uint64] */;
    bitwise_xor(%488, %489) /* ty=Tensor[(16, 8, 6), uint64] */
  };
  %490(%var_1284) /* ty=Tensor[(16, 8, 6), uint64] */
}

def @func_14809() -> (Tensor[(312), float32],) {
  %491 = @func_14219() /* ty=(Tensor[(182), float32], Tensor[(7, 2, 13), float32], Tensor[(312), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32]) */;
  %492 = %491.2;
  (%492,)
}

def @func_8948() -> (Tensor[(8, 3, 7), float64], Tensor[(154), float64], Tensor[(3, 99), float32]) {
  %501 = fn () -> (Tensor[(8, 3, 7), float64], Tensor[(154), float64], Tensor[(3, 99), float32]) {
    %493 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %494 = %493.0;
    %495 = cast(%494, dtype="float64") /* ty=Tensor[(8, 3, 7), float64] */;
    %496 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 99), float32] */, dtype="float32") /* ty=Tensor[(3, 99), float32] */;
    %497 = reshape(%496, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float32] */;
    %498 = @func_755(%497) /* ty=(Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(11, 9, 3), uint16]) */;
    %499 = atan(%495) /* ty=Tensor[(8, 3, 7), float64] */;
    %500 = %498.1;
    (%499, %500, meta[relay.Constant][33] /* ty=Tensor[(3, 99), float32] */)
  };
  %501() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(154), float64], Tensor[(3, 99), float32]) */
}

def @func_11569() -> (Tensor[(8, 3, 7), float32], Tensor[(105), uint32]) {
  @func_11567() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(105), uint32]) */
}

def @func_14811() -> (Tensor[(312), float32],) {
  @func_14809() /* ty=(Tensor[(312), float32],) */
}

def @func_10074(%var_10073: Tensor[(312), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) {
  %513 = fn (%var_10063: Tensor[(312), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) {
    %502 = @func_9200() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
    %503 = cast(%var_10063, dtype="float32") /* ty=Tensor[(312), float32] */;
    %504 = reshape(%503, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float32] */;
    %505 = cast(meta[relay.Constant][34] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
    %506 = cast(meta[relay.Constant][34] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
    %507 = reshape(%505, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
    %508 = reshape(%506, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
    %509 = %502.0;
    %510 = @func_8523() /* ty=Tensor[(8, 3, 7), float32] */;
    %511 = @func_4832(%504) /* ty=Tensor[(12, 13, 2), float32] */;
    %512 = @func_7482(%507, %508) /* ty=Tensor[(2, 2, 2), float32] */;
    (%509, %510, %511, %var_10063, %512, meta[relay.Constant][34] /* ty=Tensor[(8), float32] */)
  };
  %513(%var_10073) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) */
}

def @func_11830(%var_11824: Tensor[(14, 6, 7), bool]) -> Tensor[(14, 6, 7), bool] {
  %514 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 6, 7), bool] */, dtype="bool") /* ty=Tensor[(14, 6, 7), bool] */;
  %515 = shape_of(%var_11824, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%var_11824, dtype="bool") /* ty=Tensor[(14, 6, 7), bool] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%516, %517) /* ty=Tensor[(14, 6, 7), bool] */
}

def @func_11885() -> Tensor[(8, 3, 7), float32] {
  %518 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %518.2
}

def @func_19(%var_17: Tensor[(15, 4, 9), float32]) -> (Tensor[(15, 4, 9), float32],) {
  @func_16(%var_17) /* ty=(Tensor[(15, 4, 9), float32],) */
}

def @func_10820() -> Tensor[(8, 3, 7), float64] {
  @func_10818() /* ty=Tensor[(8, 3, 7), float64] */
}

def @func_10275() -> (Tensor[(8, 3, 7), float32],) {
  %521 = fn () -> (Tensor[(8, 3, 7), float32],) {
    %519 = @func_9723() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
    %520 = %519.1;
    (%520,)
  };
  %521() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_713(%var_712: Tensor[(11, 14, 1), float64]) -> (Tensor[(11, 14, 1), float64],) {
  %524 = fn (%var_689: Tensor[(11, 14, 1), float64]) -> (Tensor[(11, 14, 1), float64],) {
    %522 = cast(%var_689, dtype="float64") /* ty=Tensor[(11, 14, 1), float64] */;
    %523 = erf(%522) /* ty=Tensor[(11, 14, 1), float64] */;
    (%523,)
  };
  %524(%var_712) /* ty=(Tensor[(11, 14, 1), float64],) */
}

def @func_11440() -> (Tensor[(8, 3, 7), float32], Tensor[(15, 4, 9), float32], Tensor[(540), float32], Tensor[(3, 14, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(154), float64]) {
  @func_11438() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(15, 4, 9), float32], Tensor[(540), float32], Tensor[(3, 14, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(154), float64]) */
}

def @func_13057() -> Tensor[(8, 3, 7), float32] {
  @func_13055() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_8496() -> (Tensor[(8, 3, 7), float32],) {
  %527 = fn () -> (Tensor[(8, 3, 7), float32],) {
    %525 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
    %526 = sigmoid(%525) /* ty=Tensor[(8, 3, 7), float32] */;
    (%526,)
  };
  %527() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_9104() -> (Tensor[(8, 3, 7), float64], Tensor[(11, 14, 11), float64]) {
  %528 = @func_8651() /* ty=Tensor[(8, 3, 7), float32] */;
  %529 = cast(%528, dtype="float64") /* ty=Tensor[(8, 3, 7), float64] */;
  %530 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
  %531 = rsqrt(%529) /* ty=Tensor[(8, 3, 7), float64] */;
  %532 = %530.1;
  (%531, %532)
}

def @func_4834(%var_4833: Tensor[(12, 13, 2), float32]) -> Tensor[(12, 13, 2), float32] {
  %534 = fn (%var_4826: Tensor[(12, 13, 2), float32]) -> Tensor[(12, 13, 2), float32] {
    %533 = cast(%var_4826, dtype="float32") /* ty=Tensor[(12, 13, 2), float32] */;
    acos(%533) /* ty=Tensor[(12, 13, 2), float32] */
  };
  %534(%var_4833) /* ty=Tensor[(12, 13, 2), float32] */
}

def @func_15234(%var_15212: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), float32], Tensor[(8, 3, 7), float32], Tensor[(168), float32], Tensor[(6, 52), float32], Tensor[(3, 99), float64]) {
  %535 = cast(%var_15212, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %536 = cast(meta[relay.Constant][37] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %537 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 52), float32] */, dtype="float32") /* ty=Tensor[(6, 52), float32] */;
  %538 = reshape(%536, newshape=[42, 4]) /* ty=Tensor[(42, 4), float32] */;
  %539 = reshape(%537, newshape=[312]) /* ty=Tensor[(312), float32] */;
  %540 = @func_11722(%538, %539) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(42, 4), float32], Tensor[(3, 104), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(154), float64], Tensor[(8, 3, 7), float32]) */;
  %541 = @func_14365() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(7, 42), int64], Tensor[(3, 99), float64], Tensor[(8, 3, 7), float32]) */;
  %542 = atan(%535) /* ty=Tensor[(13, 7, 2), float32] */;
  %543 = %540.0;
  %544 = %541.3;
  (%542, %543, meta[relay.Constant][37] /* ty=Tensor[(168), float32] */, meta[relay.Constant][38] /* ty=Tensor[(6, 52), float32] */, %544)
}

def @func_6058(%var_6056: Tensor[(7, 2, 13), float32]) -> Tensor[(7, 2, 13), float32] {
  @func_6055(%var_6056) /* ty=Tensor[(7, 2, 13), float32] */
}

def @func_15618() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(14, 2, 5), float64], Tensor[(1694), float64], Tensor[(8, 3, 7), float32], Tensor[(5, 28), float64], Tensor[(5, 28), bool]) {
  @func_15616() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(14, 2, 5), float64], Tensor[(1694), float64], Tensor[(8, 3, 7), float32], Tensor[(5, 28), float64], Tensor[(5, 28), bool]) */
}

def @func_10672() -> Tensor[(8, 3, 7), float32] {
  @func_10670() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_13274(%var_13272: Tensor[(2, 216), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(1, 432), bool], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(2, 216), float32], Tensor[(2, 216), float64]) {
  @func_13271(%var_13272) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(1, 432), bool], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(2, 216), float32], Tensor[(2, 216), float64]) */
}

def @func_15174(%var_15172: Tensor[(540), float32]) -> (Tensor[(8, 3, 7), float32], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) {
  @func_15171(%var_15172) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */
}

def @func_14656() -> Tensor[(11, 14, 11), float64] {
  @func_14654() /* ty=Tensor[(11, 14, 11), float64] */
}

def @func_3889(%var_3869: Tensor[(15, 3, 12), float64]) -> (Tensor[(11, 14, 1), float64], Tensor[(297), float32], Tensor[(15, 3, 12), float32], Tensor[(15, 4, 9), float32]) {
  %545 = cast(meta[relay.Constant][39] /* ty=Tensor[(297), float32] */, dtype="float32") /* ty=Tensor[(297), float32] */;
  %546 = reshape(%545, newshape=[11, 9, 3]) /* ty=Tensor[(11, 9, 3), float32] */;
  %547 = @func_755(%546) /* ty=(Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(11, 9, 3), uint16]) */;
  %548 = cast(%var_3869, dtype="float64") /* ty=Tensor[(15, 3, 12), float64] */;
  %549 = atan(%548) /* ty=Tensor[(15, 3, 12), float64] */;
  %550 = cast(%549, dtype="float32") /* ty=Tensor[(15, 3, 12), float32] */;
  %551 = cast(%var_3869, dtype="float32") /* ty=Tensor[(15, 3, 12), float32] */;
  %552 = reshape(%551, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %553 = @func_16(%552) /* ty=(Tensor[(15, 4, 9), float32],) */;
  %554 = %547.0;
  %555 = erf(%550) /* ty=Tensor[(15, 3, 12), float32] */;
  %556 = %553.0;
  (%554, meta[relay.Constant][39] /* ty=Tensor[(297), float32] */, %555, %556)
}

def @func_1640(%var_1637: Tensor[(12, 11, 10), float64], %var_1638: Tensor[(22, 7), float64], %var_1639: Tensor[(22, 7), float32]) -> (Tensor[(12, 11, 10), float64], Tensor[(11, 14, 1), float64], Tensor[(22, 7), uint64]) {
  %573 = fn (%var_1604: Tensor[(12, 11, 10), float64], %var_1609: Tensor[(22, 7), float64], %var_1618: Tensor[(22, 7), float32]) -> (Tensor[(12, 11, 10), float64], Tensor[(11, 14, 1), float64], Tensor[(22, 7), uint64]) {
    %557 = cast(%var_1604, dtype="float64") /* ty=Tensor[(12, 11, 10), float64] */;
    %558 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(12, 11, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %559 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(12, 11, 10), float64] */;
    %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %561 = cast(%var_1609, dtype="float64") /* ty=Tensor[(22, 7), float64] */;
    %562 = reshape(%561, newshape=[11, 14, 1]) /* ty=Tensor[(11, 14, 1), float64] */;
    %563 = @func_711(%562) /* ty=(Tensor[(11, 14, 1), float64],) */;
    %564 = cast(%var_1609, dtype="float32") /* ty=Tensor[(22, 7), float32] */;
    %565 = atanh(%564) /* ty=Tensor[(22, 7), float32] */;
    %566 = cast(%var_1618, dtype="uint64") /* ty=Tensor[(22, 7), uint64] */;
    %567 = shape_of(%565, dtype="int32") /* ty=Tensor[(2), int32] */;
    %568 = cast(%565, dtype="uint64") /* ty=Tensor[(22, 7), uint64] */;
    %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %570 = maximum(%559, %560) /* ty=Tensor[(12, 11, 10), float64] */;
    %571 = %563.0;
    %572 = bitwise_or(%568, %569) /* ty=Tensor[(22, 7), uint64] */;
    (%570, %571, %572)
  };
  %573(%var_1637, %var_1638, %var_1639) /* ty=(Tensor[(12, 11, 10), float64], Tensor[(11, 14, 1), float64], Tensor[(22, 7), uint64]) */
}

def @func_8651() -> Tensor[(8, 3, 7), float32] {
  %574 = @func_8495() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %574.0
}

def @func_12841(%var_12839: Tensor[(13, 6, 6), float64]) -> Tensor[(13, 6, 6), float64] {
  @func_12838(%var_12839) /* ty=Tensor[(13, 6, 6), float64] */
}

def @func_14612() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(6, 9, 7), float64]) {
  %575 = @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */;
  %576 = @func_8651() /* ty=Tensor[(8, 3, 7), float32] */;
  %577 = @func_13055() /* ty=Tensor[(8, 3, 7), float32] */;
  %578 = %575.1;
  (%576, %577, %578)
}

def @func_9106() -> (Tensor[(8, 3, 7), float64], Tensor[(11, 14, 11), float64]) {
  @func_9104() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(11, 14, 11), float64]) */
}

def @func_11208() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %581 = fn () -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
    %579 = @func_10092() /* ty=Tensor[(8, 3, 7), float32] */;
    %580 = @func_8800() /* ty=Tensor[(8, 3, 7), float32] */;
    (%579, %580)
  };
  %581() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */
}

def @func_11438() -> (Tensor[(8, 3, 7), float32], Tensor[(15, 4, 9), float32], Tensor[(540), float32], Tensor[(3, 14, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(154), float64]) {
  %582 = cast(meta[relay.Constant][41] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %583 = reshape(%582, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %584 = @func_16(%583) /* ty=(Tensor[(15, 4, 9), float32],) */;
  %585 = cast(meta[relay.Constant][42] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %586 = cast(meta[relay.Constant][42] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
  %587 = reshape(%585, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), int64] */;
  %588 = reshape(%586, newshape=[3, 14, 7]) /* ty=Tensor[(3, 14, 7), int64] */;
  %589 = @func_4235(%587, %588) /* ty=Tensor[(3, 14, 7), float64] */;
  %590 = cast(meta[relay.Constant][42] /* ty=Tensor[(294), int64] */, dtype="uint32") /* ty=Tensor[(294), uint32] */;
  %591 = shape_of(%589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %592 = cast(%589, dtype="uint32") /* ty=Tensor[(3, 14, 7), uint32] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %594 = logical_xor(%592, %593) /* ty=Tensor[(3, 14, 7), uint32] */;
  %595 = cast(%594, dtype="float32") /* ty=Tensor[(3, 14, 7), float32] */;
  %596 = cast(meta[relay.Constant][43] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %597 = reshape(%596, newshape=[11, 14, 1]) /* ty=Tensor[(11, 14, 1), float64] */;
  %598 = @func_711(%597) /* ty=(Tensor[(11, 14, 1), float64],) */;
  %599 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
  %600 = %584.0;
  %601 = asin(%595) /* ty=Tensor[(3, 14, 7), float32] */;
  %602 = %598.0;
  (%599, %600, meta[relay.Constant][41] /* ty=Tensor[(540), float32] */, %601, %602, meta[relay.Constant][43] /* ty=Tensor[(154), float64] */)
}

def @func_10897() -> Tensor[(8, 3, 7), float32] {
  %603 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %603.0
}

def @func_2833(%var_2814: Tensor[(15, 7, 1), uint32], %var_2815: Tensor[(15, 7, 1), uint32]) -> (Tensor[(15, 7, ?), uint32], Tensor[(15, 4, 9), float32], Tensor[(560), float64], Tensor[(540), float32]) {
  %604 = cast(%var_2815, dtype="uint32") /* ty=Tensor[(15, 7, 1), uint32] */;
  %605 = shape_of(%var_2814, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%var_2814, dtype="uint32") /* ty=Tensor[(15, 7, 1), uint32] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %608 = cast(meta[relay.Constant][44] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %609 = cast(meta[relay.Constant][45] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %610 = reshape(%608, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), float64] */;
  %611 = reshape(%609, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %612 = @func_426(%610, %611) /* ty=(Tensor[(4, 10, 14), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */;
  %613 = minimum(%606, %607) /* ty=Tensor[(15, 7, ?), uint32] */;
  %614 = %612.1;
  (%613, %614, meta[relay.Constant][44] /* ty=Tensor[(560), float64] */, meta[relay.Constant][45] /* ty=Tensor[(540), float32] */)
}

def @func_16564(%var_16562: Tensor[(1694), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(2, 2, 2), float32], Tensor[(1694), float64]) {
  %615 = @func_12398() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %616 = cast(%var_16562, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %617 = reshape(%616, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %618 = @func_11132(%617) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(2, 2, 2), float32], Tensor[(1694), float64]) */;
  %619 = %615.0;
  %620 = %618.1;
  (%619, %620, %var_16562)
}

def @func_10114() -> (Tensor[(9, 14, 2), float64],) {
  %628 = fn () -> (Tensor[(9, 14, 2), float64],) {
    %621 = cast(meta[relay.Constant][47] /* ty=Tensor[(9, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 14, 2), float64] */;
    %622 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(9, 14, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %623 = cast(meta[relay.Constant][46] /* ty=Tensor[(9, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 14, 2), float64] */;
    %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %625 = divide(%623, %624) /* ty=Tensor[(9, 14, 2), float64] */;
    %626 = cast(%625, dtype="float64") /* ty=Tensor[(9, 14, 2), float64] */;
    %627 = log2(%626) /* ty=Tensor[(9, 14, 2), float64] */;
    (%627,)
  };
  %628() /* ty=(Tensor[(9, 14, 2), float64],) */
}

def @func_13526() -> (Tensor[(8, 3, 7), float32],) {
  @func_13524() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_12275() -> (Tensor[(9, 14, 2), float64],) {
  @func_12273() /* ty=(Tensor[(9, 14, 2), float64],) */
}

def @func_13704() -> (Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) {
  %629 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %630 = @func_12501() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) */;
  %631 = %629.0;
  %632 = %630.0;
  (%631, %632)
}

def @func_13706() -> (Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) {
  @func_13704() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) */
}

def @func_14401() -> Tensor[(8, 3, 7), float32] {
  @func_14399() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_15000() -> Tensor[(8, 3, 7), float64] {
  %633 = fn () -> Tensor[(8, 3, 7), float64] {
    @func_14830() /* ty=Tensor[(8, 3, 7), float64] */
  };
  %633() /* ty=Tensor[(8, 3, 7), float64] */
}

def @func_13958() -> (Tensor[(560), float64], Tensor[(8, 3, 7), float32]) {
  @func_13956() /* ty=(Tensor[(560), float64], Tensor[(8, 3, 7), float32]) */
}

def @func_13055() -> Tensor[(8, 3, 7), float32] {
  %634 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %634.1
}

def @func_13828() -> (Tensor[(8, 3, 7), float32], Tensor[(8), float32], Tensor[(1320), float64], Tensor[(8, 3, 7), float32]) {
  @func_13826() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8), float32], Tensor[(1320), float64], Tensor[(8, 3, 7), float32]) */
}

def @func_8653() -> Tensor[(8, 3, 7), float32] {
  @func_8651() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_11979(%var_11977: Tensor[(312), float32], %var_11978: Tensor[(560), float64]) -> (Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32], Tensor[(4, 10, 14), float64], Tensor[(560), float64], Tensor[(540), float32]) {
  @func_11975(%var_11977, %var_11978) /* ty=(Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32], Tensor[(4, 10, 14), float64], Tensor[(560), float64], Tensor[(540), float32]) */
}

def @func_8480(%var_8479: Tensor[(2, 4, 3), uint16]) -> Tensor[(2, 4, 3), bool] {
  %639 = fn (%var_8466: Tensor[(2, 4, 3), uint16]) -> Tensor[(2, 4, 3), bool] {
    %635 = cast(%var_8466, dtype="bool") /* ty=Tensor[(2, 4, 3), bool] */;
    %636 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(2, 4, 3), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %637 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 4, 3), uint16] */, dtype="bool") /* ty=Tensor[(2, 4, 3), bool] */;
    %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%637, %638) /* ty=Tensor[(2, 4, 3), bool] */
  };
  %639(%var_8479) /* ty=Tensor[(2, 4, 3), bool] */
}

def @func_10313() -> (Tensor[(8, 3, 7), float32],) {
  @func_10311() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_10786() -> (Tensor[(8, 3, 7), bool], Tensor[(11, 14, 11), float64]) {
  %649 = fn () -> (Tensor[(8, 3, 7), bool], Tensor[(11, 14, 11), float64]) {
    %640 = @func_9723() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
    %641 = %640.1;
    %642 = cast(meta[relay.Constant][49] /* ty=Tensor[(8, 3, 7), float32] */, dtype="bool") /* ty=Tensor[(8, 3, 7), bool] */;
    %643 = shape_of(%641, dtype="int32") /* ty=Tensor[(3), int32] */;
    %644 = cast(%641, dtype="bool") /* ty=Tensor[(8, 3, 7), bool] */;
    %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %646 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
    %647 = not_equal(%644, %645) /* ty=Tensor[(8, 3, 7), bool] */;
    %648 = %646.1;
    (%647, %648)
  };
  %649() /* ty=(Tensor[(8, 3, 7), bool], Tensor[(11, 14, 11), float64]) */
}

def @func_13886() -> (Tensor[(3, 99), float32],) {
  %652 = fn () -> (Tensor[(3, 99), float32],) {
    %650 = @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */;
    %651 = %650.0;
    (%651,)
  };
  %652() /* ty=(Tensor[(3, 99), float32],) */
}

def @func_10545(%var_10544: Tensor[(1694), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) {
  %659 = fn (%var_10541: Tensor[(1694), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) {
    %653 = cast(%var_10541, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %654 = reshape(%653, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
    %655 = @func_5419(%654) /* ty=(Tensor[(11, 14, 11), float64],) */;
    %656 = @func_10483() /* ty=Tensor[(8, 3, 7), float32] */;
    %657 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
    %658 = %655.0;
    (%656, %657, %658, %var_10541)
  };
  %659(%var_10544) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) */
}

def @func_9200() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %660 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %661 = @func_8523() /* ty=Tensor[(8, 3, 7), float32] */;
  %662 = %660.0;
  (%661, %662)
}

def @func_15787() -> (Tensor[(8, 3, 7), float32],) {
  %664 = fn () -> (Tensor[(8, 3, 7), float32],) {
    %663 = @func_10441() /* ty=Tensor[(8, 3, 7), float32] */;
    (%663,)
  };
  %664() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_6405(%var_6387: float64, %var_6388: Tensor[(7, 1, 6), float64], %var_6402: Tensor[(2, 280), float64]) -> (Tensor[(7, 1, 6), bool], Tensor[(4, 10, 14), float64], Tensor[(2, 280), float64], Tensor[(540), float32]) {
  %665 = cast(%var_6387, dtype="bool") /* ty=bool */;
  %666 = cast(%var_6388, dtype="bool") /* ty=Tensor[(7, 1, 6), bool] */;
  %667 = cast(%var_6402, dtype="float64") /* ty=Tensor[(2, 280), float64] */;
  %668 = cast(meta[relay.Constant][50] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %669 = reshape(%667, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), float64] */;
  %670 = reshape(%668, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %671 = @func_426(%669, %670) /* ty=(Tensor[(4, 10, 14), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */;
  %672 = greater(%665, %666) /* ty=Tensor[(7, 1, 6), bool] */;
  %673 = %671.0;
  (%672, %673, %var_6402, meta[relay.Constant][50] /* ty=Tensor[(540), float32] */)
}

def @func_2946(%var_2944: Tensor[(2, 13, 16), uint32]) -> Tensor[(2, 13, 16), uint32] {
  @func_2943(%var_2944) /* ty=Tensor[(2, 13, 16), uint32] */
}

def @func_7149(%var_7148: Tensor[(40, 14), float64]) -> (Tensor[(14, 9, 16), bool], Tensor[(15, 4, 9), float32], Tensor[(40, 14), float64], Tensor[(540), float32]) {
  %686 = fn (%var_7143: Tensor[(40, 14), float64]) -> (Tensor[(14, 9, 16), bool], Tensor[(15, 4, 9), float32], Tensor[(40, 14), float64], Tensor[(540), float32]) {
    %674 = cast(meta[relay.Constant][51] /* ty=Tensor[(14, 9, 1), int32] */, dtype="int32") /* ty=Tensor[(14, 9, 1), int32] */;
    %675 = cast(meta[relay.Constant][52] /* ty=Tensor[(14, 9, 16), int32] */, dtype="int32") /* ty=Tensor[(14, 9, 16), int32] */;
    %676 = logical_xor(%674, %675) /* ty=Tensor[(14, 9, 16), int32] */;
    %677 = cast(%676, dtype="bool") /* ty=Tensor[(14, 9, 16), bool] */;
    %678 = cast(meta[relay.Constant][51] /* ty=Tensor[(14, 9, 1), int32] */, dtype="bool") /* ty=Tensor[(14, 9, 1), bool] */;
    %679 = cast(%var_7143, dtype="float64") /* ty=Tensor[(40, 14), float64] */;
    %680 = cast(meta[relay.Constant][53] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %681 = reshape(%679, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), float64] */;
    %682 = reshape(%680, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %683 = @func_426(%681, %682) /* ty=(Tensor[(4, 10, 14), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */;
    %684 = logical_and(%677, %678) /* ty=Tensor[(14, 9, 16), bool] */;
    %685 = %683.1;
    (%684, %685, %var_7143, meta[relay.Constant][53] /* ty=Tensor[(540), float32] */)
  };
  %686(%var_7148) /* ty=(Tensor[(14, 9, 16), bool], Tensor[(15, 4, 9), float32], Tensor[(40, 14), float64], Tensor[(540), float32]) */
}

def @func_13826() -> (Tensor[(8, 3, 7), float32], Tensor[(8), float32], Tensor[(1320), float64], Tensor[(8, 3, 7), float32]) {
  %687 = cast(meta[relay.Constant][54] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %688 = reshape(%687, newshape=[1320]) /* ty=Tensor[(1320), float64] */;
  %689 = @func_12939(%688) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(336), float64], Tensor[(8), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1320), float32]) */;
  %690 = @func_11617() /* ty=Tensor[(8, 3, 7), float32] */;
  %691 = %689.2;
  %692 = @func_10441() /* ty=Tensor[(8, 3, 7), float32] */;
  (%690, %691, meta[relay.Constant][54] /* ty=Tensor[(1320), float64] */, %692)
}

def @func_13123() -> Tensor[(182), float32] {
  %693 = @func_12313() /* ty=(Tensor[(182), float32],) */;
  %693.0
}

def @func_11079() -> (Tensor[(8, 3, 7), float64],) {
  %694 = @func_10251() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32]) */;
  %695 = %694.0;
  (%695,)
}

def @func_16567(%var_16565: Tensor[(1694), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(2, 2, 2), float32], Tensor[(1694), float64]) {
  @func_16564(%var_16565) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(2, 2, 2), float32], Tensor[(1694), float64]) */
}

def @func_6410(%var_6407: float64, %var_6408: Tensor[(7, 1, 6), float64], %var_6409: Tensor[(2, 280), float64]) -> (Tensor[(7, 1, 6), bool], Tensor[(4, 10, 14), float64], Tensor[(2, 280), float64], Tensor[(540), float32]) {
  @func_6405(%var_6407, %var_6408, %var_6409) /* ty=(Tensor[(7, 1, 6), bool], Tensor[(4, 10, 14), float64], Tensor[(2, 280), float64], Tensor[(540), float32]) */
}

def @func_12049(%var_12022: Tensor[(512), int32], %var_12045: Tensor[(560), float64]) -> (Tensor[(378), float64], Tensor[(8, 3, 7), float64], Tensor[(2, 16, 16), int32], Tensor[(512), int32], Tensor[(1, 560), float64], float64, Tensor[(42), float64], Tensor[(560), float64]) {
  %696 = @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */;
  %697 = @func_11079() /* ty=(Tensor[(8, 3, 7), float64],) */;
  %698 = cast(%var_12022, dtype="int32") /* ty=Tensor[(512), int32] */;
  %699 = cast(%var_12022, dtype="int32") /* ty=Tensor[(512), int32] */;
  %700 = reshape(%698, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int32] */;
  %701 = reshape(%699, newshape=[2, 16, 16]) /* ty=Tensor[(2, 16, 16), int32] */;
  %702 = @func_800(%700, %701) /* ty=(Tensor[(2, 16, 16), int32],) */;
  %703 = cast(-7.9234f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %704 = cast(meta[relay.Constant][55] /* ty=Tensor[(42), float64] */, dtype="float64") /* ty=Tensor[(42), float64] */;
  %705 = cast(%var_12045, dtype="float64") /* ty=Tensor[(560), float64] */;
  %706 = reshape(%703, newshape=[]) /* ty=float64 */;
  %707 = reshape(%704, newshape=[42]) /* ty=Tensor[(42), float64] */;
  %708 = reshape(%705, newshape=[1, 560]) /* ty=Tensor[(1, 560), float64] */;
  %709 = @func_8690(%706, %707, %708) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(540), float32], float64, Tensor[(42), float64], Tensor[(1, 560), float64]) */;
  %710 = %696.2;
  %711 = %697.0;
  %712 = %702.0;
  %713 = %709.4;
  (%710, %711, %712, %var_12022, %713, -7.9234f64 /* ty=float64 */, meta[relay.Constant][55] /* ty=Tensor[(42), float64] */, %var_12045)
}

def @func_13657(%var_13656: Tensor[(432), float32]) -> (Tensor[(3, 99), bool], Tensor[(1, 432), bool], Tensor[(432), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(9, 10, 5), uint64], Tensor[(450), uint64]) {
  %725 = fn (%var_13637: Tensor[(432), float32]) -> (Tensor[(3, 99), bool], Tensor[(1, 432), bool], Tensor[(432), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(9, 10, 5), uint64], Tensor[(450), uint64]) {
    %714 = @func_13170() /* ty=(Tensor[(3, 99), bool], Tensor[(3, 99), float64]) */;
    %715 = cast(%var_13637, dtype="float32") /* ty=Tensor[(432), float32] */;
    %716 = reshape(%715, newshape=[2, 216]) /* ty=Tensor[(2, 216), float32] */;
    %717 = @func_13271(%716) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(1, 432), bool], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(11, 14, 1), float64], Tensor[(154), float64], Tensor[(2, 216), float32], Tensor[(2, 216), float64]) */;
    %718 = cast(meta[relay.Constant][56] /* ty=Tensor[(450), uint64] */, dtype="uint64") /* ty=Tensor[(450), uint64] */;
    %719 = reshape(%718, newshape=[9, 10, 5]) /* ty=Tensor[(9, 10, 5), uint64] */;
    %720 = %714.0;
    %721 = %717.1;
    %722 = @func_12234() /* ty=Tensor[(8, 3, 7), float32] */;
    %723 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
    %724 = @func_12981(%719) /* ty=Tensor[(9, 10, 5), uint64] */;
    (%720, %721, %var_13637, %722, %723, %724, meta[relay.Constant][56] /* ty=Tensor[(450), uint64] */)
  };
  %725(%var_13656) /* ty=(Tensor[(3, 99), bool], Tensor[(1, 432), bool], Tensor[(432), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(9, 10, 5), uint64], Tensor[(450), uint64]) */
}

def @func_11821() -> (Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %726 = @func_10785() /* ty=(Tensor[(8, 3, 7), bool], Tensor[(11, 14, 11), float64]) */;
  %727 = @func_11096() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %728 = %726.1;
  %729 = %727.0;
  %730 = @func_10897() /* ty=Tensor[(8, 3, 7), float32] */;
  (%728, %729, %730)
}

def @func_12809() -> (Tensor[(8, 3, 7), float32], Tensor[(3, 99), float32]) {
  %734 = fn () -> (Tensor[(8, 3, 7), float32], Tensor[(3, 99), float32]) {
    %731 = @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */;
    %732 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
    %733 = %731.0;
    (%732, %733)
  };
  %734() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(3, 99), float32]) */
}

def @func_12273() -> (Tensor[(9, 14, 2), float64],) {
  %735 = @func_10113() /* ty=(Tensor[(9, 14, 2), float64],) */;
  %736 = %735.0;
  (%736,)
}

def @func_12376(%var_12374: Tensor[(14, 2, 5), float64]) -> (Tensor[(14, 2, 5), float64], Tensor[(8, 3, 7), float32]) {
  @func_12373(%var_12374) /* ty=(Tensor[(14, 2, 5), float64], Tensor[(8, 3, 7), float32]) */
}

def @func_15932() -> Tensor[(182), float32] {
  %737 = fn () -> Tensor[(182), float32] {
    @func_14282() /* ty=Tensor[(182), float32] */
  };
  %737() /* ty=Tensor[(182), float32] */
}

def @func_11749() -> Tensor[(8, 3, 7), float32] {
  @func_11747() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_8524() -> Tensor[(8, 3, 7), float32] {
  %739 = fn () -> Tensor[(8, 3, 7), float32] {
    %738 = @func_8495() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %738.0
  };
  %739() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_7482(%var_7471: Tensor[(2, 2, 2), float32], %var_7472: Tensor[(2, 2, 2), float32]) -> Tensor[(2, 2, 2), float32] {
  %740 = cast(%var_7472, dtype="float32") /* ty=Tensor[(2, 2, 2), float32] */;
  %741 = shape_of(%var_7471, dtype="int32") /* ty=Tensor[(3), int32] */;
  %742 = cast(%var_7471, dtype="float32") /* ty=Tensor[(2, 2, 2), float32] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%742, %743) /* ty=Tensor[(2, 2, 2), float32] */
}

def @func_10093() -> Tensor[(8, 3, 7), float32] {
  %745 = fn () -> Tensor[(8, 3, 7), float32] {
    %744 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
    %744.0
  };
  %745() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_3892(%var_3890: Tensor[(15, 3, 12), float64]) -> (Tensor[(11, 14, 1), float64], Tensor[(297), float32], Tensor[(15, 3, 12), float32], Tensor[(15, 4, 9), float32]) {
  @func_3889(%var_3890) /* ty=(Tensor[(11, 14, 1), float64], Tensor[(297), float32], Tensor[(15, 3, 12), float32], Tensor[(15, 4, 9), float32]) */
}

def @func_10621() -> Tensor[(8, 3, 7), float32] {
  %747 = fn () -> Tensor[(8, 3, 7), float32] {
    %746 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
    %746.0
  };
  %747() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_10670() -> Tensor[(8, 3, 7), float32] {
  %748 = @func_8495() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %748.0
}

def @func_11975(%var_11950: Tensor[(312), float32], %var_11964: Tensor[(560), float64]) -> (Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float32], Tensor[(4, 10, 14), float64], Tensor[(560), float64], Tensor[(540), float32]) {
  %749 = @func_8800() /* ty=Tensor[(8, 3, 7), float32] */;
  %750 = cast(%749, dtype="float64") /* ty=Tensor[(8, 3, 7), float64] */;
  %751 = @func_11231() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) */;
  %752 = cast(%var_11950, dtype="float32") /* ty=Tensor[(312), float32] */;
  %753 = reshape(%752, newshape=[12, 13, 2]) /* ty=Tensor[(12, 13, 2), float32] */;
  %754 = @func_9200() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %755 = cast(%var_11964, dtype="float64") /* ty=Tensor[(560), float64] */;
  %756 = cast(meta[relay.Constant][57] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %757 = reshape(%755, newshape=[4, 10, 14]) /* ty=Tensor[(4, 10, 14), float64] */;
  %758 = reshape(%756, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %759 = @func_426(%757, %758) /* ty=(Tensor[(4, 10, 14), float64], Tensor[(15, 4, 9), float32], Tensor[(540), float32]) */;
  %760 = cos(%750) /* ty=Tensor[(8, 3, 7), float64] */;
  %761 = %751.0;
  %762 = @func_4832(%753) /* ty=Tensor[(12, 13, 2), float32] */;
  %763 = %754.1;
  %764 = %759.0;
  (%760, %761, %762, %var_11950, %763, %764, %var_11964, meta[relay.Constant][57] /* ty=Tensor[(540), float32] */)
}

def @func_2837(%var_2835: Tensor[(15, 7, 1), uint32], %var_2836: Tensor[(15, 7, 1), uint32]) -> (Tensor[(15, 7, ?), uint32], Tensor[(15, 4, 9), float32], Tensor[(560), float64], Tensor[(540), float32]) {
  @func_2833(%var_2835, %var_2836) /* ty=(Tensor[(15, 7, ?), uint32], Tensor[(15, 4, 9), float32], Tensor[(560), float64], Tensor[(540), float32]) */
}

def @func_10807() -> Tensor[(8, 3, 7), float32] {
  %765 = fn () -> Tensor[(8, 3, 7), float32] {
    @func_9370() /* ty=Tensor[(8, 3, 7), float32] */
  };
  %765() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_8903() -> (Tensor[(8, 3, 7), float32],) {
  %767 = fn () -> (Tensor[(8, 3, 7), float32],) {
    %766 = @func_8800() /* ty=Tensor[(8, 3, 7), float32] */;
    (%766,)
  };
  %767() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_14399() -> Tensor[(8, 3, 7), float32] {
  @func_10897() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_9319() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */
}

def @func_16005(%var_16003: Tensor[(5, 4, 8), float64]) -> Tensor[(5, 4, 8), float64] {
  @func_16002(%var_16003) /* ty=Tensor[(5, 4, 8), float64] */
}

def @func_13878() -> Tensor[(8, 3, 7), float32] {
  @func_13055() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_11132(%var_11129: Tensor[(1694), float64]) -> (Tensor[(8, 3, 7), float32], Tensor[(2, 2, 2), float32], Tensor[(1694), float64]) {
  %768 = @func_10806() /* ty=Tensor[(8, 3, 7), float32] */;
  %769 = cast(%768, dtype="float32") /* ty=Tensor[(8, 3, 7), float32] */;
  %770 = cast(%var_11129, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %771 = reshape(%769, newshape=[8, 3, 7]) /* ty=Tensor[(8, 3, 7), float32] */;
  %772 = reshape(%770, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %773 = @func_9812(%771, %772) /* ty=(Tensor[(8, 3, 7), uint8], Tensor[(2, 2, 2), float32], Tensor[(336), float64], Tensor[(12, 110), float64], Tensor[(8), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(8, 3, 7), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) */;
  %774 = %773.1;
  (%768, %774, %var_11129)
}

def @func_14786(%var_14734: Tensor[(16, 11, 14), float32], %var_14735: Tensor[(16, 11, 14), float32]) -> (Tensor[(16, 11, 14), int64], Tensor[(8, 3, 7), float32], Tensor[(16, 11, 14), float64], Tensor[(8, 3, 7), float32]) {
  %775 = cast(%var_14735, dtype="float32") /* ty=Tensor[(16, 11, 14), float32] */;
  %776 = shape_of(%var_14734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%var_14734, dtype="float32") /* ty=Tensor[(16, 11, 14), float32] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %779 = power(%777, %778) /* ty=Tensor[(16, 11, 14), float32] */;
  %780 = cast(%779, dtype="float32") /* ty=Tensor[(16, 11, 14), float32] */;
  %781 = sqrt(%780) /* ty=Tensor[(16, 11, 14), float32] */;
  %782 = cast(%var_14734, dtype="int64") /* ty=Tensor[(16, 11, 14), int64] */;
  %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%781, dtype="int64") /* ty=Tensor[(16, 11, 14), int64] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %786 = @func_11478() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %787 = cast(%var_14734, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
  %788 = atan(%787) /* ty=Tensor[(16, 11, 14), float64] */;
  %789 = cast(%788, dtype="float64") /* ty=Tensor[(16, 11, 14), float64] */;
  %790 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %791 = subtract(%784, %785) /* ty=Tensor[(16, 11, 14), int64] */;
  %792 = %786.0;
  %793 = sin(%789) /* ty=Tensor[(16, 11, 14), float64] */;
  %794 = %790.1;
  (%791, %792, %793, %794)
}

def @func_16(%var_11: Tensor[(15, 4, 9), float32]) -> (Tensor[(15, 4, 9), float32],) {
  %795 = cast(%var_11, dtype="float32") /* ty=Tensor[(15, 4, 9), float32] */;
  %796 = acosh(%795) /* ty=Tensor[(15, 4, 9), float32] */;
  (%796,)
}

def @func_14968(%var_14967: Tensor[(1, 11, 7), float64]) -> Tensor[(1, 11, 7), float64] {
  %798 = fn (%var_14961: Tensor[(1, 11, 7), float64]) -> Tensor[(1, 11, 7), float64] {
    %797 = cast(%var_14961, dtype="float64") /* ty=Tensor[(1, 11, 7), float64] */;
    cos(%797) /* ty=Tensor[(1, 11, 7), float64] */
  };
  %798(%var_14967) /* ty=Tensor[(1, 11, 7), float64] */
}

def @func_8754(%var_8752: Tensor[(105, 1), uint32]) -> (Tensor[(8, 3, 7), float32], Tensor[(560), float64], Tensor[(105, 1), uint32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) {
  @func_8751(%var_8752) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(560), float64], Tensor[(105, 1), uint32], Tensor[(2, 2, 2), float32], Tensor[(8), float32]) */
}

def @func_11363() -> (Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) {
  %807 = fn () -> (Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) {
    %799 = @func_10113() /* ty=(Tensor[(9, 14, 2), float64],) */;
    %800 = %799.0;
    %801 = cast(%800, dtype="float32") /* ty=Tensor[(9, 14, 2), float32] */;
    %802 = cast(meta[relay.Constant][58] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
    %803 = reshape(%802, newshape=[7, 2, 13]) /* ty=Tensor[(7, 2, 13), float32] */;
    %804 = @func_10441() /* ty=Tensor[(8, 3, 7), float32] */;
    %805 = sqrt(%801) /* ty=Tensor[(9, 14, 2), float32] */;
    %806 = @func_6055(%803) /* ty=Tensor[(7, 2, 13), float32] */;
    (%804, %805, %806, meta[relay.Constant][58] /* ty=Tensor[(182), float32] */)
  };
  %807() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(9, 14, 2), float32], Tensor[(7, 2, 13), float32], Tensor[(182), float32]) */
}

def @main() -> Tensor[(11, 14, 11), float32] {
  %808 = @func_8830() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
  %809 = %808.1;
  %810 = cast(%809, dtype="float32") /* ty=Tensor[(11, 14, 11), float32] */;
  atan(%810) /* ty=Tensor[(11, 14, 11), float32] */
}

def @func_2943(%var_2937: Tensor[(2, 13, 16), uint32]) -> Tensor[(2, 13, 16), uint32] {
  %811 = cast(meta[relay.Constant][59] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %812 = cast(%var_2937, dtype="uint32") /* ty=Tensor[(2, 13, 16), uint32] */;
  maximum(%811, %812) /* ty=Tensor[(2, 13, 16), uint32] */
}

def @func_15305() -> (Tensor[(8, 3, 7), float32],) {
  @func_15303() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_16528(%var_16527: Tensor[(792), bool]) -> (Tensor[(8, 3, 7), float32], Tensor[(12, 11, 6), bool], Tensor[(792), bool], Tensor[(8, 3, 7), float32]) {
  %821 = fn (%var_16500: Tensor[(792), bool]) -> (Tensor[(8, 3, 7), float32], Tensor[(12, 11, 6), bool], Tensor[(792), bool], Tensor[(8, 3, 7), float32]) {
    %813 = cast(%var_16500, dtype="bool") /* ty=Tensor[(792), bool] */;
    %814 = cast(%var_16500, dtype="bool") /* ty=Tensor[(792), bool] */;
    %815 = reshape(%813, newshape=[12, 11, 6]) /* ty=Tensor[(12, 11, 6), bool] */;
    %816 = reshape(%814, newshape=[12, 11, 6]) /* ty=Tensor[(12, 11, 6), bool] */;
    %817 = @func_13524() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %818 = @func_13055() /* ty=Tensor[(8, 3, 7), float32] */;
    %819 = @func_15262(%815, %816) /* ty=Tensor[(12, 11, 6), bool] */;
    %820 = %817.0;
    (%818, %819, %var_16500, %820)
  };
  %821(%var_16527) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(12, 11, 6), bool], Tensor[(792), bool], Tensor[(8, 3, 7), float32]) */
}

def @func_12053(%var_12051: Tensor[(512), int32], %var_12052: Tensor[(560), float64]) -> (Tensor[(378), float64], Tensor[(8, 3, 7), float64], Tensor[(2, 16, 16), int32], Tensor[(512), int32], Tensor[(1, 560), float64], float64, Tensor[(42), float64], Tensor[(560), float64]) {
  @func_12049(%var_12051, %var_12052) /* ty=(Tensor[(378), float64], Tensor[(8, 3, 7), float64], Tensor[(2, 16, 16), int32], Tensor[(512), int32], Tensor[(1, 560), float64], float64, Tensor[(42), float64], Tensor[(560), float64]) */
}

def @func_11233() -> (Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) {
  @func_11231() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) */
}

def @func_5218(%var_5190: Tensor[(12, 3, 12), bool], %var_5191: Tensor[(12, 3, 12), bool], %var_5195: Tensor[(12, 3, 12), bool]) -> (Tensor[(16, 8, 6), uint64], Tensor[(32, 24), uint64], Tensor[(12, 3, 12), int8], Tensor[(12, 3, 12), float64]) {
  %822 = cast(meta[relay.Constant][60] /* ty=Tensor[(32, 24), uint64] */, dtype="uint64") /* ty=Tensor[(32, 24), uint64] */;
  %823 = reshape(%822, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), uint64] */;
  %824 = cast(%var_5191, dtype="bool") /* ty=Tensor[(12, 3, 12), bool] */;
  %825 = shape_of(%var_5190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%var_5190, dtype="bool") /* ty=Tensor[(12, 3, 12), bool] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %828 = logical_or(%826, %827) /* ty=Tensor[(12, 3, 12), bool] */;
  %829 = cast(%var_5195, dtype="float64") /* ty=Tensor[(12, 3, 12), float64] */;
  %830 = shape_of(%var_5190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %831 = cast(%var_5190, dtype="float64") /* ty=Tensor[(12, 3, 12), float64] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %833 = mod(%831, %832) /* ty=Tensor[(12, 3, 12), float64] */;
  %834 = cast(%833, dtype="int8") /* ty=Tensor[(12, 3, 12), int8] */;
  %835 = shape_of(%828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(%828, dtype="int8") /* ty=Tensor[(12, 3, 12), int8] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %838 = cast(%828, dtype="float64") /* ty=Tensor[(12, 3, 12), float64] */;
  %839 = @func_1283(%823) /* ty=Tensor[(16, 8, 6), uint64] */;
  %840 = bitwise_xor(%836, %837) /* ty=Tensor[(12, 3, 12), int8] */;
  %841 = asin(%838) /* ty=Tensor[(12, 3, 12), float64] */;
  (%839, meta[relay.Constant][60] /* ty=Tensor[(32, 24), uint64] */, %840, %841)
}

def @func_13993(%var_13974: Tensor[(11, 6, 8), int64], %var_13975: Tensor[(11, 6, 8), int64]) -> Tensor[(11, 6, 8), bool] {
  %842 = cast(%var_13975, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %843 = shape_of(%var_13974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %844 = cast(%var_13974, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%844, %845) /* ty=Tensor[(11, 6, 8), bool] */
}

def @func_10818() -> Tensor[(8, 3, 7), float64] {
  %846 = @func_9104() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(11, 14, 11), float64]) */;
  %846.0
}

def @func_12315() -> (Tensor[(182), float32],) {
  @func_12313() /* ty=(Tensor[(182), float32],) */
}

def @func_5223(%var_5220: Tensor[(12, 3, 12), bool], %var_5221: Tensor[(12, 3, 12), bool], %var_5222: Tensor[(12, 3, 12), bool]) -> (Tensor[(16, 8, 6), uint64], Tensor[(32, 24), uint64], Tensor[(12, 3, 12), int8], Tensor[(12, 3, 12), float64]) {
  @func_5218(%var_5220, %var_5221, %var_5222) /* ty=(Tensor[(16, 8, 6), uint64], Tensor[(32, 24), uint64], Tensor[(12, 3, 12), int8], Tensor[(12, 3, 12), float64]) */
}

def @func_14572() -> Tensor[(8, 3, 7), float32] {
  @func_9370() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_12214(%var_12202: Tensor[(2, 2, 12), float64]) -> (Tensor[(2, 2, 12), float64],) {
  %847 = cast(%var_12202, dtype="float64") /* ty=Tensor[(2, 2, 12), float64] */;
  %848 = sigmoid(%847) /* ty=Tensor[(2, 2, 12), float64] */;
  (%848,)
}

def @func_11279() -> (Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) {
  %849 = @func_8947() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(154), float64], Tensor[(3, 99), float32]) */;
  %850 = cast(meta[relay.Constant][61] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %851 = reshape(%850, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), float64] */;
  %852 = %849.2;
  %853 = @func_4000(%851) /* ty=Tensor[(6, 9, 7), float64] */;
  (%852, %853, meta[relay.Constant][61] /* ty=Tensor[(378), float64] */)
}

def @func_14714() -> Tensor[(378), float64] {
  %855 = fn () -> Tensor[(378), float64] {
    %854 = @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */;
    %854.2
  };
  %855() /* ty=Tensor[(378), float64] */
}

def @func_11567() -> (Tensor[(8, 3, 7), float32], Tensor[(105), uint32]) {
  %856 = @func_9723() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %857 = @func_8829() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64], Tensor[(1694), float64], Tensor[(560), float64], Tensor[(105), uint32]) */;
  %858 = %856.0;
  %859 = %857.4;
  (%858, %859)
}

def @func_11747() -> Tensor[(8, 3, 7), float32] {
  %860 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %860.1
}

def @func_15129(%var_15127: Tensor[(540), float32]) -> (Tensor[(312), float32], Tensor[(15, 4, 9), float32], Tensor[(540), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float64], Tensor[(560), float64], Tensor[(12, 3, 12), uint8], Tensor[(96, 2464), uint8]) {
  @func_15126(%var_15127) /* ty=(Tensor[(312), float32], Tensor[(15, 4, 9), float32], Tensor[(540), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float64], Tensor[(560), float64], Tensor[(12, 3, 12), uint8], Tensor[(96, 2464), uint8]) */
}

def @func_450(%var_442: Tensor[(2, 11, 12), int8]) -> (Tensor[(2, 11, 12), int8],) {
  %861 = cast(meta[relay.Constant][62] /* ty=Tensor[(1, 11, 12), int8] */, dtype="int8") /* ty=Tensor[(1, 11, 12), int8] */;
  %862 = cast(%var_442, dtype="int8") /* ty=Tensor[(2, 11, 12), int8] */;
  %863 = logical_xor(%861, %862) /* ty=Tensor[(2, 11, 12), int8] */;
  (%863,)
}

def @func_11887() -> Tensor[(8, 3, 7), float32] {
  @func_11885() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_1850(%var_1848: Tensor[(6, 6, 1), float64]) -> Tensor[(6, 6, 6), float64] {
  @func_1847(%var_1848) /* ty=Tensor[(6, 6, 6), float64] */
}

def @func_16032() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(294), int64]) {
  %871 = fn () -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(294), int64]) {
    %864 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %865 = cast(meta[relay.Constant][63] /* ty=Tensor[(294), int64] */, dtype="int64") /* ty=Tensor[(294), int64] */;
    %866 = reshape(%865, newshape=[294]) /* ty=Tensor[(294), int64] */;
    %867 = @func_12154(%866) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(294), int64], Tensor[(16, 8, 6), uint64], Tensor[(768), uint64]) */;
    %868 = @func_14572() /* ty=Tensor[(8, 3, 7), float32] */;
    %869 = %864.0;
    %870 = %867.3;
    (%868, %869, %870, meta[relay.Constant][63] /* ty=Tensor[(294), int64] */)
  };
  %871() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(294), int64]) */
}

def @func_16133() -> (Tensor[(8, 3, 7), float64],) {
  %873 = fn () -> (Tensor[(8, 3, 7), float64],) {
    %872 = @func_10818() /* ty=Tensor[(8, 3, 7), float64] */;
    (%872,)
  };
  %873() /* ty=(Tensor[(8, 3, 7), float64],) */
}

def @func_10252() -> (Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32]) {
  %877 = fn () -> (Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32]) {
    %874 = @func_9104() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(11, 14, 11), float64]) */;
    %875 = %874.0;
    %876 = @func_8800() /* ty=Tensor[(8, 3, 7), float32] */;
    (%875, %876)
  };
  %877() /* ty=(Tensor[(8, 3, 7), float64], Tensor[(8, 3, 7), float32]) */
}

def @func_14790(%var_14788: Tensor[(16, 11, 14), float32], %var_14789: Tensor[(16, 11, 14), float32]) -> (Tensor[(16, 11, 14), int64], Tensor[(8, 3, 7), float32], Tensor[(16, 11, 14), float64], Tensor[(8, 3, 7), float32]) {
  @func_14786(%var_14788, %var_14789) /* ty=(Tensor[(16, 11, 14), int64], Tensor[(8, 3, 7), float32], Tensor[(16, 11, 14), float64], Tensor[(8, 3, 7), float32]) */
}

def @func_14365() -> (Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(7, 42), int64], Tensor[(3, 99), float64], Tensor[(8, 3, 7), float32]) {
  %878 = @func_10274() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %879 = cast(meta[relay.Constant][64] /* ty=Tensor[(7, 42), int64] */, dtype="int64") /* ty=Tensor[(7, 42), int64] */;
  %880 = reshape(%879, newshape=[294]) /* ty=Tensor[(294), int64] */;
  %881 = @func_12154(%880) /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(3, 14, 7), float64], Tensor[(294), int64], Tensor[(16, 8, 6), uint64], Tensor[(768), uint64]) */;
  %882 = @func_12808() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(3, 99), float32]) */;
  %883 = %882.1;
  %884 = cast(%883, dtype="float32") /* ty=Tensor[(3, 99), float32] */;
  %885 = erf(%884) /* ty=Tensor[(3, 99), float32] */;
  %886 = cast(%885, dtype="float64") /* ty=Tensor[(3, 99), float64] */;
  %887 = @func_11207() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
  %888 = %878.0;
  %889 = %881.3;
  %890 = acos(%886) /* ty=Tensor[(3, 99), float64] */;
  %891 = %887.1;
  (%888, %889, meta[relay.Constant][64] /* ty=Tensor[(7, 42), int64] */, %890, %891)
}

def @func_15126(%var_15039: Tensor[(540), float32]) -> (Tensor[(312), float32], Tensor[(15, 4, 9), float32], Tensor[(540), float32], Tensor[(312), float32], Tensor[(8, 3, 7), float64], Tensor[(560), float64], Tensor[(12, 3, 12), uint8], Tensor[(96, 2464), uint8]) {
  %892 = @func_14809() /* ty=(Tensor[(312), float32],) */;
  %893 = cast(%var_15039, dtype="float32") /* ty=Tensor[(540), float32] */;
  %894 = reshape(%893, newshape=[15, 4, 9]) /* ty=Tensor[(15, 4, 9), float32] */;
  %895 = @func_16(%894) /* ty=(Tensor[(15, 4, 9), float32],) */;
  %896 = @func_14809() /* ty=(Tensor[(312), float32],) */;
  %897 = cast(meta[relay.Constant][65] /* ty=Tensor[(2464), float32] */, dtype="float32") /* ty=Tensor[(2464), float32] */;
  %898 = reshape(%897, newshape=[616, 4]) /* ty=Tensor[(616, 4), float32] */;
  %899 = @func_14892(%898) /* ty=(Tensor[(8, 3, 7), float64], Tensor[(16, 11, 14), int64], Tensor[(616, 4), float32], Tensor[(8, 3, 7), float32]) */;
  %900 = @func_12649() /* ty=(Tensor[(8, 3, 7), float32], float64, Tensor[(512), int32], Tensor[(560), float64]) */;
  %901 = cast(meta[relay.Constant][66] /* ty=Tensor[(96, 1), bool] */, dtype="bool") /* ty=Tensor[(96, 1), bool] */;
  %902 = cast(meta[relay.Constant][66] /* ty=Tensor[(96, 1), bool] */, dtype="bool") /* ty=Tensor[(96, 1), bool] */;
  %903 = reshape(%901, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), bool] */;
  %904 = reshape(%902, newshape=[16, 2, 3]) /* ty=Tensor[(16, 2, 3), bool] */;
  %905 = @func_7038(%903, %904) /* ty=(Tensor[(16, 2, 3), bool], Tensor[(12, 3, 12), int8], Tensor[(432), bool], Tensor[(64, 8), int32], Tensor[(12, 13, 2), float32], Tensor[(312), float32], Tensor[(2, 16, 16), float64]) */;
  %906 = %905.1;
  %907 = cast(%906, dtype="float32") /* ty=Tensor[(12, 3, 12), float32] */;
  %908 = exp(%907) /* ty=Tensor[(12, 3, 12), float32] */;
  %909 = cast(%906, dtype="uint8") /* ty=Tensor[(12, 3, 12), uint8] */;
  %910 = shape_of(%908, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(%908, dtype="uint8") /* ty=Tensor[(12, 3, 12), uint8] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %913 = cast(meta[relay.Constant][66] /* ty=Tensor[(96, 1), bool] */, dtype="uint8") /* ty=Tensor[(96, 1), uint8] */;
  %914 = cast(meta[relay.Constant][65] /* ty=Tensor[(2464), float32] */, dtype="uint8") /* ty=Tensor[(2464), uint8] */;
  %915 = %892.0;
  %916 = %895.0;
  %917 = %896.0;
  %918 = %899.0;
  %919 = %900.3;
  %920 = logical_xor(%911, %912) /* ty=Tensor[(12, 3, 12), uint8] */;
  %921 = add(%913, %914) /* ty=Tensor[(96, 2464), uint8] */;
  (%915, %916, %var_15039, %917, %918, %919, %920, %921)
}

def @func_12983(%var_12982: Tensor[(9, 10, 5), uint64]) -> Tensor[(9, 10, 5), uint64] {
  %926 = fn (%var_12969: Tensor[(9, 10, 5), uint64]) -> Tensor[(9, 10, 5), uint64] {
    %922 = cast(meta[relay.Constant][67] /* ty=Tensor[(9, 10, 5), uint64] */, dtype="uint64") /* ty=Tensor[(9, 10, 5), uint64] */;
    %923 = shape_of(%var_12969, dtype="int32") /* ty=Tensor[(3), int32] */;
    %924 = cast(%var_12969, dtype="uint64") /* ty=Tensor[(9, 10, 5), uint64] */;
    %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_and(%924, %925) /* ty=Tensor[(9, 10, 5), uint64] */
  };
  %926(%var_12982) /* ty=Tensor[(9, 10, 5), uint64] */
}

def @func_15907(%var_15905: Tensor[(5, 10, 16), uint32], %var_15906: Tensor[(5, 10, 16), uint32]) -> (Tensor[(5, 10, 16), uint32], Tensor[(8, 3, 7), float32], Tensor[(5, 10, 16), float64], Tensor[(8, 3, 7), float32]) {
  %937 = fn (%var_15886: Tensor[(5, 10, 16), uint32], %var_15887: Tensor[(5, 10, 16), uint32]) -> (Tensor[(5, 10, 16), uint32], Tensor[(8, 3, 7), float32], Tensor[(5, 10, 16), float64], Tensor[(8, 3, 7), float32]) {
    %927 = cast(%var_15887, dtype="uint32") /* ty=Tensor[(5, 10, 16), uint32] */;
    %928 = shape_of(%var_15886, dtype="int32") /* ty=Tensor[(3), int32] */;
    %929 = cast(%var_15886, dtype="uint32") /* ty=Tensor[(5, 10, 16), uint32] */;
    %930 = dyn.reshape(%927, %928, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %931 = cast(%var_15887, dtype="float64") /* ty=Tensor[(5, 10, 16), float64] */;
    %932 = @func_12398() /* ty=(Tensor[(8, 3, 7), float32],) */;
    %933 = add(%929, %930) /* ty=Tensor[(5, 10, 16), uint32] */;
    %934 = @func_15499() /* ty=Tensor[(8, 3, 7), float32] */;
    %935 = erf(%931) /* ty=Tensor[(5, 10, 16), float64] */;
    %936 = %932.0;
    (%933, %934, %935, %936)
  };
  %937(%var_15905, %var_15906) /* ty=(Tensor[(5, 10, 16), uint32], Tensor[(8, 3, 7), float32], Tensor[(5, 10, 16), float64], Tensor[(8, 3, 7), float32]) */
}

def @func_8710() -> Tensor[(8, 3, 7), float32] {
  @func_8708() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_9725() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  @func_9723() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */
}

def @func_14239() -> (Tensor[(8, 3, 7), float32],) {
  @func_14237() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_8708() -> Tensor[(8, 3, 7), float32] {
  %938 = @func_8495() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %938.0
}

def @func_15874() -> (Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) {
  %942 = fn () -> (Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) {
    %939 = @func_11231() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) */;
    %940 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
    %941 = %939.1;
    (%940, %941)
  };
  %942() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) */
}

def @func_6035(%var_6030: Tensor[(10, 2, 4), float64], %var_6031: Tensor[(768), uint64], %var_6032: Tensor[(416), uint32], %var_6033: Tensor[(1320), float64], %var_6034: Tensor[(154, 1), float64]) -> (Tensor[(10, 2, 4), float64], Tensor[(10, 2, 4), uint16], Tensor[(16, 8, 6), uint64], Tensor[(768), uint64], Tensor[(416), uint32], Tensor[(2, 13, 16), float64], Tensor[(10, 2, 4), float64], Tensor[(22, 7), uint64], Tensor[(1320), float64], Tensor[(154, 1), float64], Tensor[(22, 7), uint64]) {
  %983 = fn (%var_5916: Tensor[(10, 2, 4), float64], %var_5944: Tensor[(768), uint64], %var_5947: Tensor[(416), uint32], %var_5978: Tensor[(1320), float64], %var_5979: Tensor[(154, 1), float64]) -> (Tensor[(10, 2, 4), float64], Tensor[(10, 2, 4), uint16], Tensor[(16, 8, 6), uint64], Tensor[(768), uint64], Tensor[(416), uint32], Tensor[(2, 13, 16), float64], Tensor[(10, 2, 4), float64], Tensor[(22, 7), uint64], Tensor[(1320), float64], Tensor[(154, 1), float64], Tensor[(22, 7), uint64]) {
    %943 = cast(%var_5916, dtype="float64") /* ty=Tensor[(10, 2, 4), float64] */;
    %944 = cast(%var_5916, dtype="float32") /* ty=Tensor[(10, 2, 4), float32] */;
    %945 = cos(%944) /* ty=Tensor[(10, 2, 4), float32] */;
    %946 = cast(%945, dtype="float64") /* ty=Tensor[(10, 2, 4), float64] */;
    %947 = shape_of(%var_5916, dtype="int32") /* ty=Tensor[(3), int32] */;
    %948 = cast(%var_5916, dtype="float64") /* ty=Tensor[(10, 2, 4), float64] */;
    %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %950 = floor_mod(%948, %949) /* ty=Tensor[(10, 2, 4), float64] */;
    %951 = cast(%945, dtype="uint16") /* ty=Tensor[(10, 2, 4), uint16] */;
    %952 = shape_of(%950, dtype="int32") /* ty=Tensor[(3), int32] */;
    %953 = cast(%950, dtype="uint16") /* ty=Tensor[(10, 2, 4), uint16] */;
    %954 = dyn.reshape(%951, %952, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %955 = cast(%var_5944, dtype="uint64") /* ty=Tensor[(768), uint64] */;
    %956 = reshape(%955, newshape=[16, 8, 6]) /* ty=Tensor[(16, 8, 6), uint64] */;
    %957 = cast(%var_5947, dtype="uint32") /* ty=Tensor[(416), uint32] */;
    %958 = reshape(%957, newshape=[2, 13, 16]) /* ty=Tensor[(2, 13, 16), uint32] */;
    %959 = @func_2943(%958) /* ty=Tensor[(2, 13, 16), uint32] */;
    %960 = cast(%959, dtype="float64") /* ty=Tensor[(2, 13, 16), float64] */;
    %961 = cast(%945, dtype="float64") /* ty=Tensor[(10, 2, 4), float64] */;
    %962 = cast(%var_5978, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %963 = cast(%var_5979, dtype="float64") /* ty=Tensor[(154, 1), float64] */;
    %964 = cast(%var_5979, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
    %965 = reshape(%962, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
    %966 = reshape(%963, newshape=[22, 7]) /* ty=Tensor[(22, 7), float64] */;
    %967 = reshape(%964, newshape=[22, 7]) /* ty=Tensor[(22, 7), float32] */;
    %968 = @func_1636(%965, %966, %967) /* ty=(Tensor[(12, 11, 10), float64], Tensor[(11, 14, 1), float64], Tensor[(22, 7), uint64]) */;
    %969 = cast(%var_5978, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %970 = %968.2;
    %971 = cast(%970, dtype="float64") /* ty=Tensor[(22, 7), float64] */;
    %972 = cast(%var_5979, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
    %973 = reshape(%969, newshape=[12, 11, 10]) /* ty=Tensor[(12, 11, 10), float64] */;
    %974 = reshape(%971, newshape=[22, 7]) /* ty=Tensor[(22, 7), float64] */;
    %975 = reshape(%972, newshape=[22, 7]) /* ty=Tensor[(22, 7), float32] */;
    %976 = @func_1636(%973, %974, %975) /* ty=(Tensor[(12, 11, 10), float64], Tensor[(11, 14, 1), float64], Tensor[(22, 7), uint64]) */;
    %977 = sqrt(%943) /* ty=Tensor[(10, 2, 4), float64] */;
    %978 = right_shift(%953, %954) /* ty=Tensor[(10, 2, 4), uint16] */;
    %979 = @func_1283(%956) /* ty=Tensor[(16, 8, 6), uint64] */;
    %980 = rsqrt(%960) /* ty=Tensor[(2, 13, 16), float64] */;
    %981 = log(%961) /* ty=Tensor[(10, 2, 4), float64] */;
    %982 = %976.2;
    (%977, %978, %979, %var_5944, %var_5947, %980, %981, %970, %var_5978, %var_5979, %982)
  };
  %983(%var_6030, %var_6031, %var_6032, %var_6033, %var_6034) /* ty=(Tensor[(10, 2, 4), float64], Tensor[(10, 2, 4), uint16], Tensor[(16, 8, 6), uint64], Tensor[(768), uint64], Tensor[(416), uint32], Tensor[(2, 13, 16), float64], Tensor[(10, 2, 4), float64], Tensor[(22, 7), uint64], Tensor[(1320), float64], Tensor[(154, 1), float64], Tensor[(22, 7), uint64]) */
}

def @func_1847(%var_1822: Tensor[(6, 6, 1), float64]) -> Tensor[(6, 6, 6), float64] {
  %984 = cast(%var_1822, dtype="float64") /* ty=Tensor[(6, 6, 1), float64] */;
  %985 = cast(meta[relay.Constant][68] /* ty=Tensor[(6, 6, 6), float64] */, dtype="float64") /* ty=Tensor[(6, 6, 6), float64] */;
  divide(%984, %985) /* ty=Tensor[(6, 6, 6), float64] */
}

def @func_10519() -> (Tensor[(8, 3, 7), float32],) {
  %988 = fn () -> (Tensor[(8, 3, 7), float32],) {
    %986 = @func_9317() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
    %987 = %986.1;
    (%987,)
  };
  %988() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_15352() -> Tensor[(8, 3, 7), float32] {
  @func_10620() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_15500() -> Tensor[(8, 3, 7), float32] {
  %990 = fn () -> Tensor[(8, 3, 7), float32] {
    %989 = @func_11207() /* ty=(Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */;
    %989.1
  };
  %990() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_9317() -> (Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  %991 = @func_8902() /* ty=(Tensor[(8, 3, 7), float32],) */;
  %992 = %991.0;
  %993 = @func_8523() /* ty=Tensor[(8, 3, 7), float32] */;
  %994 = @func_8708() /* ty=Tensor[(8, 3, 7), float32] */;
  (%992, %993, %994)
}

def @func_14894(%var_14893: Tensor[(616, 4), float32]) -> (Tensor[(8, 3, 7), float64], Tensor[(16, 11, 14), int64], Tensor[(616, 4), float32], Tensor[(8, 3, 7), float32]) {
  %1004 = fn (%var_14870: Tensor[(616, 4), float32]) -> (Tensor[(8, 3, 7), float64], Tensor[(16, 11, 14), int64], Tensor[(616, 4), float32], Tensor[(8, 3, 7), float32]) {
    %995 = @func_11079() /* ty=(Tensor[(8, 3, 7), float64],) */;
    %996 = cast(%var_14870, dtype="float32") /* ty=Tensor[(616, 4), float32] */;
    %997 = cast(%var_14870, dtype="float32") /* ty=Tensor[(616, 4), float32] */;
    %998 = reshape(%996, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float32] */;
    %999 = reshape(%997, newshape=[16, 11, 14]) /* ty=Tensor[(16, 11, 14), float32] */;
    %1000 = @func_14786(%998, %999) /* ty=(Tensor[(16, 11, 14), int64], Tensor[(8, 3, 7), float32], Tensor[(16, 11, 14), float64], Tensor[(8, 3, 7), float32]) */;
    %1001 = %995.0;
    %1002 = %1000.0;
    %1003 = @func_8800() /* ty=Tensor[(8, 3, 7), float32] */;
    (%1001, %1002, %var_14870, %1003)
  };
  %1004(%var_14893) /* ty=(Tensor[(8, 3, 7), float64], Tensor[(16, 11, 14), int64], Tensor[(616, 4), float32], Tensor[(8, 3, 7), float32]) */
}

def @func_453(%var_451: Tensor[(2, 11, 12), int8]) -> (Tensor[(2, 11, 12), int8],) {
  @func_450(%var_451) /* ty=(Tensor[(2, 11, 12), int8],) */
}

def @func_15237(%var_15235: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), float32], Tensor[(8, 3, 7), float32], Tensor[(168), float32], Tensor[(6, 52), float32], Tensor[(3, 99), float64]) {
  @func_15234(%var_15235) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(8, 3, 7), float32], Tensor[(168), float32], Tensor[(6, 52), float32], Tensor[(3, 99), float64]) */
}

def @func_12399() -> (Tensor[(8, 3, 7), float32],) {
  %1006 = fn () -> (Tensor[(8, 3, 7), float32],) {
    %1005 = @func_10670() /* ty=Tensor[(8, 3, 7), float32] */;
    (%1005,)
  };
  %1006() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_11479() -> (Tensor[(8, 3, 7), float32],) {
  %1008 = fn () -> (Tensor[(8, 3, 7), float32],) {
    %1007 = @func_10806() /* ty=Tensor[(8, 3, 7), float32] */;
    (%1007,)
  };
  %1008() /* ty=(Tensor[(8, 3, 7), float32],) */
}

def @func_11823() -> (Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) {
  @func_11821() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32], Tensor[(8, 3, 7), float32]) */
}

def @func_11231() -> (Tensor[(8, 3, 7), float32], Tensor[(11, 14, 11), float64]) {
  %1009 = @func_10922() /* ty=(Tensor[(11, 14, 11), float64], Tensor[(8, 3, 7), float32]) */;
  %1010 = @func_9370() /* ty=Tensor[(8, 3, 7), float32] */;
  %1011 = %1009.0;
  (%1010, %1011)
}

def @func_13171() -> (Tensor[(3, 99), bool], Tensor[(3, 99), float64]) {
  %1023 = fn () -> (Tensor[(3, 99), bool], Tensor[(3, 99), float64]) {
    %1012 = @func_11279() /* ty=(Tensor[(3, 99), float32], Tensor[(6, 9, 7), float64], Tensor[(378), float64]) */;
    %1013 = %1012.0;
    %1014 = cast(%1013, dtype="float64") /* ty=Tensor[(3, 99), float64] */;
    %1015 = sin(%1014) /* ty=Tensor[(3, 99), float64] */;
    %1016 = cast(%1015, dtype="bool") /* ty=Tensor[(3, 99), bool] */;
    %1017 = shape_of(%1013, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1018 = cast(%1013, dtype="bool") /* ty=Tensor[(3, 99), bool] */;
    %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1020 = cast(%1013, dtype="float64") /* ty=Tensor[(3, 99), float64] */;
    %1021 = greater_equal(%1018, %1019) /* ty=Tensor[(3, 99), bool] */;
    %1022 = asinh(%1020) /* ty=Tensor[(3, 99), float64] */;
    (%1021, %1022)
  };
  %1023() /* ty=(Tensor[(3, 99), bool], Tensor[(3, 99), float64]) */
}

def @func_8800() -> Tensor[(8, 3, 7), float32] {
  @func_8651() /* ty=Tensor[(8, 3, 7), float32] */
}

def @func_7486(%var_7484: Tensor[(2, 2, 2), float32], %var_7485: Tensor[(2, 2, 2), float32]) -> Tensor[(2, 2, 2), float32] {
  @func_7482(%var_7484, %var_7485) /* ty=Tensor[(2, 2, 2), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

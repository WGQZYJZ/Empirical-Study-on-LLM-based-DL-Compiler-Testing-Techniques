import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_647 = relay.var("var_647", dtype = "float32", shape = (13, 16, 2))#candidate|647|(13, 16, 2)|var|float32
var_648 = relay.var("var_648", dtype = "float32", shape = (13, 16, 2))#candidate|648|(13, 16, 2)|var|float32
bop_649 = relay.not_equal(var_647.astype('bool'), relay.reshape(var_648.astype('bool'), relay.shape_of(var_647))) # shape=(13, 16, 2)
var_657 = relay.var("var_657", dtype = "float32", shape = (13, 16, 2))#candidate|657|(13, 16, 2)|var|float32
bop_658 = relay.logical_xor(var_647.astype('int32'), relay.reshape(var_657.astype('int32'), relay.shape_of(var_647))) # shape=(13, 16, 2)
uop_665 = relay.exp(bop_649.astype('float64')) # shape=(13, 16, 2)
uop_672 = relay.cos(uop_665.astype('float32')) # shape=(13, 16, 2)
output = relay.Tuple([bop_658,uop_672,])
output2 = relay.Tuple([bop_658,uop_672,])
func_680 = relay.Function([var_647,var_648,var_657,], output)
mod['func_680'] = func_680
mod = relay.transform.InferType()(mod)
var_681 = relay.var("var_681", dtype = "float32", shape = (13, 16, 2))#candidate|681|(13, 16, 2)|var|float32
var_682 = relay.var("var_682", dtype = "float32", shape = (13, 16, 2))#candidate|682|(13, 16, 2)|var|float32
var_683 = relay.var("var_683", dtype = "float32", shape = (13, 16, 2))#candidate|683|(13, 16, 2)|var|float32
output = func_680(var_681,var_682,var_683,)
func_684 = relay.Function([var_681,var_682,var_683,], output)
mutated_mod['func_684'] = func_684
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1068 = relay.const([[[-8.196881,1.610309,-7.563003,-3.369772,-3.560951,-5.831884,7.993755,-7.284483,1.505275,-9.786607,4.954575,6.833240],[0.852604,-3.423812,-0.668594,-7.036427,5.742502,8.180669,4.665121,0.066378,1.858903,-9.222990,-1.229124,-3.804325],[-8.363095,3.320902,7.090674,9.337288,-9.223604,6.985795,5.420078,3.744092,4.288521,3.587374,-1.610014,-2.898877],[-5.879731,-9.013708,-3.363135,8.177801,5.499025,-8.269556,1.073924,3.831707,-3.355118,-1.430381,5.436631,-2.666418]],[[-5.557419,9.663590,-3.234592,-7.123485,-6.141799,3.498467,-9.697175,2.741901,4.598003,-3.050021,-3.220430,-0.432461],[-9.515146,-6.570891,-4.736005,-9.517053,-2.333946,1.125640,-9.925920,-9.570609,-7.134766,7.185053,-4.478237,-8.048212],[-9.851585,-1.560544,8.407937,8.058190,-6.156045,9.137442,-9.720399,4.621357,2.505455,-9.474797,3.421098,-9.672611],[-5.600334,-7.806816,9.313311,4.962348,5.461433,-3.186042,-6.575318,6.739042,1.789459,-5.624715,-7.713632,5.023052]],[[-0.053424,5.352916,-9.014043,-5.193004,9.427255,6.598472,7.217729,5.645367,-9.893608,1.869947,4.046718,5.554178],[5.212222,3.343236,-6.491567,6.793431,-2.582315,-0.068541,2.818866,7.431089,5.655588,7.425914,9.042741,6.875348],[-8.649726,7.995035,4.960780,-9.207743,-1.320630,7.481122,-6.139220,7.110423,9.071387,0.640426,-5.375422,-3.930745],[9.856079,5.230872,-4.013651,2.775344,1.138841,-1.207698,9.053493,-2.471412,-1.546851,-3.204609,-0.863185,4.465017]],[[9.296475,-1.548149,-6.301402,7.384298,-9.619080,-9.651613,-4.456837,3.236193,-2.275657,-1.806969,6.660896,6.445056],[-0.047618,-3.165584,-1.808105,7.040128,5.268400,2.171886,-2.994774,5.821621,5.130721,3.325369,1.423142,-6.242328],[-7.910540,-4.298864,3.285112,-2.235253,8.361975,-7.690067,-5.568645,-0.001739,-4.624637,6.031466,-8.542084,0.659412],[2.631213,7.546171,-0.265372,-6.227613,9.122985,-6.621458,5.827325,-2.975705,7.927063,-7.337872,-2.565640,2.359856]],[[-9.313285,5.879353,-3.874191,1.601339,5.466273,-7.027572,-6.634357,8.102681,9.911848,-7.794889,-0.417590,-5.963369],[7.032985,1.696862,0.807438,-6.602716,-0.996097,-6.503116,6.384729,-6.826189,7.346538,-6.870860,9.169433,1.580081],[0.549581,3.155528,-2.511553,3.015083,-1.911606,-9.236324,-2.275912,-4.480776,-9.451942,8.306813,-1.066596,4.473504],[-6.702257,1.223997,5.820963,0.929830,-6.582042,-0.450460,-3.348917,-5.607940,-0.628748,-4.053445,-9.197797,7.295813]],[[8.453159,-6.759497,-8.112490,2.215845,0.610621,7.733581,1.472836,6.633284,8.328694,6.920550,7.158366,4.454228],[-5.612294,-0.028638,-6.628998,6.547698,-3.300760,9.319731,0.387456,-0.897733,7.739322,2.507353,-0.467439,-8.040947],[-8.939756,4.631457,6.291575,-4.282184,-4.193353,-3.453143,-5.872650,-0.673402,7.959467,-5.301487,7.672972,4.969092],[-3.077528,8.675290,2.083125,-7.556301,6.578634,-9.220570,-7.523809,-6.532392,7.331603,2.352740,9.675711,1.862429]],[[5.150262,6.690498,-7.597672,4.751597,-9.963348,7.468680,-9.058041,9.101880,4.301501,0.951499,-0.352337,-4.519853],[-3.144168,-8.638476,0.401570,0.805772,3.518788,4.551306,3.985652,-2.401106,-1.869827,-4.348755,9.708156,-3.442148],[3.523826,7.184505,-3.849049,2.086588,6.889509,-0.092965,0.015722,-1.158097,-0.458460,-0.260584,-5.311465,5.720834],[-9.035987,-3.663623,-5.788984,-0.012948,-4.086679,6.000754,5.857282,7.403383,-0.484226,-1.053977,7.495719,-8.612310]],[[-6.213705,-1.814734,3.307070,5.662514,6.519188,-8.673641,7.658243,7.825306,-2.006242,-3.630534,5.637316,-3.899713],[5.566297,-4.995161,7.601398,-7.310060,0.066846,6.383726,8.170468,9.556681,-1.959456,-2.682200,-1.288290,9.105167],[-6.225520,2.323706,0.738722,-9.099633,-7.422003,-7.788579,3.669425,2.262800,7.696898,-1.624956,-5.818776,4.627411],[8.713782,-3.430513,4.728765,-7.785889,0.213520,1.865020,8.653823,4.569448,-2.301490,-3.730328,-1.096991,6.184467]],[[-2.960120,-6.439001,7.488767,4.955904,0.099503,-6.665879,0.044634,8.718800,-6.997504,4.516808,-0.712611,8.662181],[-2.492045,-1.155563,-6.029267,-9.569395,7.835300,6.298323,-7.307059,5.357775,-9.070264,-9.041389,-0.435846,-3.217398],[4.843317,0.237783,-9.717705,-9.946362,-4.589812,6.911880,-5.092172,7.810280,9.711685,-9.160050,1.606627,8.386284],[-8.834916,1.098404,4.094664,4.778379,8.946229,-5.171788,-8.486393,6.521742,-7.166544,7.747259,-0.431772,-9.801082]],[[9.069308,-2.840309,3.376566,-6.832496,2.625172,-6.104484,9.922934,4.263059,-2.460850,-1.157013,1.844161,5.752742],[-7.287918,-5.820376,5.739658,-7.179788,-2.493439,2.383362,5.073534,4.354860,8.029794,3.821464,7.031684,-0.985944],[3.061557,-3.157528,-0.391941,-9.831079,-1.556889,3.013034,0.031622,-4.209427,-7.335186,9.144476,0.519356,4.282344],[6.384185,2.963991,0.562420,-0.955852,-8.331781,2.545385,2.821303,-0.238591,1.702004,5.294374,5.871250,-2.442772]],[[-6.562883,8.458469,-1.406667,-2.817785,-3.662478,-4.817703,1.337947,-8.574743,-3.984214,-2.289400,8.612797,5.998867],[3.341616,9.946715,4.502570,-0.284643,-3.069351,8.506119,-5.259388,-3.733415,-1.735422,9.190029,8.390449,7.941602],[4.330517,3.326930,-6.217463,8.986432,-7.846737,2.249333,-3.120608,3.078985,8.829479,5.152765,-7.974272,-5.465803],[1.470481,6.706250,7.208348,-3.047006,-4.323843,1.909892,-9.072697,-2.128847,-7.500467,-2.116699,-6.759161,0.557655]],[[7.532355,6.558461,-6.468860,-9.887436,2.286487,-8.422495,-4.752484,-0.659693,5.686470,-8.815456,-2.215117,-8.298301],[-1.868929,-4.036173,-8.832628,-1.891900,-7.574277,1.711611,-6.510384,-4.359394,4.812299,-1.149604,9.289890,9.673027],[1.627384,4.329309,-7.350366,-7.373712,-6.450423,6.188490,-3.446767,-3.420748,-9.598339,3.803921,8.600730,-4.215718],[-7.694449,0.936881,6.744108,-1.887779,-4.484162,4.244375,1.419063,8.172382,-6.353519,-1.391858,-9.224934,6.016401]]], dtype = "float32")#candidate|1068|(12, 4, 12)|const|float32
uop_1069 = relay.asinh(const_1068.astype('float32')) # shape=(12, 4, 12)
bop_1080 = relay.maximum(uop_1069.astype('int32'), relay.reshape(const_1068.astype('int32'), relay.shape_of(uop_1069))) # shape=(12, 4, 12)
func_680_call = mod.get_global_var('func_680')
func_684_call = mutated_mod.get_global_var('func_684')
const_1097 = relay.const([1.732264,3.974956,9.171389,9.962582,-1.719559,4.192219,8.651862,2.325324,6.495778,2.822010,-9.798459,6.888014,7.405853,-4.724727,8.408616,-1.542244,1.043469,2.024731,3.421404,-3.254243,6.858048,-9.833768,7.636901,-3.378865,-1.442058,-2.889084,-3.474065,-6.146020,-2.933776,-5.351786,2.857781,-2.734277,-5.726973,-2.515484,-9.267826,7.200713,-1.754784,-3.132851,-7.575820,-7.457063,-5.892345,4.256142,-6.848715,-7.643699,-0.594483,9.299508,-2.464047,-6.616553,4.081758,-8.294602,-0.038692,5.007889,6.153932,-4.721277,-0.535092,-4.408890,8.224906,7.348993,5.545556,7.897595,-6.088219,-6.490219,-6.482822,4.105383,3.348514,-8.757773,1.613985,-2.237979,0.153308,-9.721810,6.238084,3.922967,-3.920909,0.799442,-2.369115,-5.672328,8.538158,6.470934,4.009882,5.844885,-0.501694,-1.819983,9.827889,-2.147135,-6.795805,-7.245225,6.812754,-7.935931,-6.371932,-4.183635,-2.322859,5.159276,9.631062,-5.383145,2.126252,8.883360,2.413995,5.071258,-6.842133,9.676620,0.041100,-4.842852,6.659747,-0.272990,-0.634520,1.035675,5.786115,-4.404978,2.917440,-8.690966,-3.510914,7.241069,6.655043,-0.332847,-4.710009,-2.947196,1.703764,7.514306,-5.812939,-3.104596,-6.157761,0.085451,-5.374904,-5.517999,-4.596838,-7.550044,-7.660452,-0.167960,7.240425,3.339933,3.645650,0.972526,-1.660720,5.871498,-4.985210,-8.542287,0.794965,3.214604,1.126722,-3.621361,-4.904453,4.965830,-8.347192,-7.246874,-6.596489,4.599404,-0.569776,8.647745,4.480351,0.630027,-4.004891,-3.124652,6.353253,-6.326834,7.806814,5.107723,4.582298,-3.863940,-9.337201,9.787733,-5.421403,-4.210517,1.554896,-4.811561,3.883279,3.983301,5.096036,9.816208,9.756547,3.217048,-8.931269,-9.269743,2.797708,6.062280,4.721060,5.061590,-1.516191,-1.167465,5.474363,-6.030694,-6.229260,-7.484594,-4.745508,3.700061,0.034122,-0.107413,3.344262,-0.974353,-9.649996,-6.792579,-0.885145,1.109777,-4.653024,3.732967,-6.807294,-6.145150,4.657937,-1.003379,-6.238587,6.109927,6.365511,-2.397755,-4.169381,5.391555,-9.564454,-4.900008,6.056558,9.437181,-1.942200,0.532076,5.564702,2.653358,3.930671,-0.482329,9.841609,4.469155,3.621987,8.590060,-0.872175,-7.157884,2.849032,-9.996527,7.800065,-1.758687,-7.897067,-2.280713,8.858551,-2.823116,-0.483328,-9.598908,-5.959935,-8.203191,9.534043,2.207133,-5.639819,3.563399,-9.339581,9.064063,5.586792,0.140831,2.478004,5.618226,-0.258962,5.992466,-1.100084,-1.514881,-0.910341,3.997819,4.029489,0.487195,-7.588073,8.285045,-9.551808,-6.372969,-1.754623,0.625498,-0.766008,-2.557676,-8.740323,8.661449,0.640214,9.686599,-9.298010,-4.660028,6.029641,1.731389,-9.942670,9.325107,7.096644,-5.240166,0.252560,-5.655931,2.957430,-8.078939,-1.774987,-9.979892,-9.651838,2.223998,-8.947330,-5.565349,-5.753655,-4.473903,-9.622071,2.439691,0.436254,2.803970,-9.751549,-2.244951,-5.792022,5.410099,-8.099031,-3.321754,-2.331878,5.619947,0.108433,-5.203212,-5.339296,-8.426716,-0.651331,-4.456611,-1.246049,1.596214,5.600775,-2.429330,-1.664905,4.790427,9.976203,6.642394,2.182305,3.688347,-7.671760,-4.319986,-3.409245,1.332489,3.311791,-5.314585,2.808783,-2.563021,-8.848666,-5.053447,-9.084287,1.221826,-4.640610,5.399199,-8.451541,-0.835808,6.340250,1.791347,-1.138758,-7.591793,-9.172884,1.716366,-6.910011,8.343785,-6.318089,-1.523087,7.650281,-6.161329,-7.472357,4.403626,-8.669180,-4.095493,7.731556,9.694343,-3.887428,0.788406,4.975175,8.144462,-3.750082,-5.841201,-0.345975,7.434063,-3.816806,2.322870,-2.338552,2.300374,0.729843,-9.334803,4.001249,-8.937266,3.641571,1.227112,-5.316114,7.750166,5.755412,7.581982,-2.619131,8.153305,-3.850657,5.178313,8.385223,-0.416846,-6.626511,9.416321,-6.690403,-9.219767,6.054735,-8.014923,-0.258669,-7.716292,4.271976,4.678707,1.885693,7.708714,-4.525213,-2.884318,2.050889,-3.933046,2.362189,-2.171773,2.468316,1.515969,-5.266673,-5.147919,0.835142,-9.619700,-7.205803,-8.899745,-3.768681,4.600375,1.838349,-8.896434,-8.093964,-2.826287,3.202087,-9.799031,7.981074,8.357811,0.233361,-8.462701,9.191659,-9.501928,5.081255,5.970211,-5.497604,-4.997223], dtype = "float32")#candidate|1097|(416,)|const|float32
call_1096 = relay.TupleGetItem(func_680_call(relay.reshape(const_1097.astype('float32'), [13, 16, 2]), relay.reshape(const_1097.astype('float32'), [13, 16, 2]), relay.reshape(const_1097.astype('float32'), [13, 16, 2]), ), 0)
call_1098 = relay.TupleGetItem(func_684_call(relay.reshape(const_1097.astype('float32'), [13, 16, 2]), relay.reshape(const_1097.astype('float32'), [13, 16, 2]), relay.reshape(const_1097.astype('float32'), [13, 16, 2]), ), 0)
func_680_call = mod.get_global_var('func_680')
func_684_call = mutated_mod.get_global_var('func_684')
call_1106 = relay.TupleGetItem(func_680_call(relay.reshape(call_1096.astype('float32'), [13, 16, 2]), relay.reshape(call_1096.astype('float32'), [13, 16, 2]), relay.reshape(call_1096.astype('float32'), [13, 16, 2]), ), 1)
call_1107 = relay.TupleGetItem(func_684_call(relay.reshape(call_1096.astype('float32'), [13, 16, 2]), relay.reshape(call_1096.astype('float32'), [13, 16, 2]), relay.reshape(call_1096.astype('float32'), [13, 16, 2]), ), 1)
uop_1113 = relay.log10(call_1106.astype('float64')) # shape=(13, 16, 2)
uop_1115 = relay.log10(call_1107.astype('float64')) # shape=(13, 16, 2)
func_680_call = mod.get_global_var('func_680')
func_684_call = mutated_mod.get_global_var('func_684')
call_1123 = relay.TupleGetItem(func_680_call(relay.reshape(call_1096.astype('float32'), [13, 16, 2]), relay.reshape(call_1106.astype('float32'), [13, 16, 2]), relay.reshape(call_1106.astype('float32'), [13, 16, 2]), ), 0)
call_1124 = relay.TupleGetItem(func_684_call(relay.reshape(call_1096.astype('float32'), [13, 16, 2]), relay.reshape(call_1106.astype('float32'), [13, 16, 2]), relay.reshape(call_1106.astype('float32'), [13, 16, 2]), ), 0)
output = relay.Tuple([bop_1080,call_1096,const_1097,uop_1113,call_1123,])
output2 = relay.Tuple([bop_1080,call_1098,const_1097,uop_1115,call_1124,])
func_1133 = relay.Function([], output)
mod['func_1133'] = func_1133
mod = relay.transform.InferType()(mod)
mutated_mod['func_1133'] = func_1133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1133_call = mutated_mod.get_global_var('func_1133')
call_1134 = func_1133_call()
output = call_1134
func_1135 = relay.Function([], output)
mutated_mod['func_1135'] = func_1135
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1201 = relay.var("var_1201", dtype = "float32", shape = (15, 11, 14))#candidate|1201|(15, 11, 14)|var|float32
uop_1202 = relay.log10(var_1201.astype('float32')) # shape=(15, 11, 14)
func_1133_call = mod.get_global_var('func_1133')
func_1135_call = mutated_mod.get_global_var('func_1135')
call_1204 = relay.TupleGetItem(func_1133_call(), 3)
call_1205 = relay.TupleGetItem(func_1135_call(), 3)
func_680_call = mod.get_global_var('func_680')
func_684_call = mutated_mod.get_global_var('func_684')
call_1218 = relay.TupleGetItem(func_680_call(relay.reshape(call_1204.astype('float32'), [13, 16, 2]), relay.reshape(call_1204.astype('float32'), [13, 16, 2]), relay.reshape(call_1204.astype('float32'), [13, 16, 2]), ), 1)
call_1219 = relay.TupleGetItem(func_684_call(relay.reshape(call_1204.astype('float32'), [13, 16, 2]), relay.reshape(call_1204.astype('float32'), [13, 16, 2]), relay.reshape(call_1204.astype('float32'), [13, 16, 2]), ), 1)
func_1133_call = mod.get_global_var('func_1133')
func_1135_call = mutated_mod.get_global_var('func_1135')
call_1222 = relay.TupleGetItem(func_1133_call(), 0)
call_1223 = relay.TupleGetItem(func_1135_call(), 0)
output = relay.Tuple([uop_1202,call_1204,call_1218,call_1222,])
output2 = relay.Tuple([uop_1202,call_1205,call_1219,call_1223,])
func_1228 = relay.Function([var_1201,], output)
mod['func_1228'] = func_1228
mod = relay.transform.InferType()(mod)
mutated_mod['func_1228'] = func_1228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1229 = relay.var("var_1229", dtype = "float32", shape = (15, 11, 14))#candidate|1229|(15, 11, 14)|var|float32
func_1228_call = mutated_mod.get_global_var('func_1228')
call_1230 = func_1228_call(var_1229)
output = call_1230
func_1231 = relay.Function([var_1229], output)
mutated_mod['func_1231'] = func_1231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1133_call = mod.get_global_var('func_1133')
func_1135_call = mutated_mod.get_global_var('func_1135')
call_1302 = relay.TupleGetItem(func_1133_call(), 0)
call_1303 = relay.TupleGetItem(func_1135_call(), 0)
output = relay.Tuple([call_1302,])
output2 = relay.Tuple([call_1303,])
func_1305 = relay.Function([], output)
mod['func_1305'] = func_1305
mod = relay.transform.InferType()(mod)
mutated_mod['func_1305'] = func_1305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1305_call = mutated_mod.get_global_var('func_1305')
call_1306 = func_1305_call()
output = call_1306
func_1307 = relay.Function([], output)
mutated_mod['func_1307'] = func_1307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1133_call = mod.get_global_var('func_1133')
func_1135_call = mutated_mod.get_global_var('func_1135')
call_1354 = relay.TupleGetItem(func_1133_call(), 4)
call_1355 = relay.TupleGetItem(func_1135_call(), 4)
output = call_1354
output2 = call_1355
func_1356 = relay.Function([], output)
mod['func_1356'] = func_1356
mod = relay.transform.InferType()(mod)
mutated_mod['func_1356'] = func_1356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1356_call = mutated_mod.get_global_var('func_1356')
call_1357 = func_1356_call()
output = call_1357
func_1358 = relay.Function([], output)
mutated_mod['func_1358'] = func_1358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1305_call = mod.get_global_var('func_1305')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_1408 = relay.TupleGetItem(func_1305_call(), 0)
call_1409 = relay.TupleGetItem(func_1307_call(), 0)
output = call_1408
output2 = call_1409
func_1410 = relay.Function([], output)
mod['func_1410'] = func_1410
mod = relay.transform.InferType()(mod)
mutated_mod['func_1410'] = func_1410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1410_call = mutated_mod.get_global_var('func_1410')
call_1411 = func_1410_call()
output = call_1411
func_1412 = relay.Function([], output)
mutated_mod['func_1412'] = func_1412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1410_call = mod.get_global_var('func_1410')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_1476 = func_1410_call()
call_1477 = func_1410_call()
func_1228_call = mod.get_global_var('func_1228')
func_1231_call = mutated_mod.get_global_var('func_1231')
const_1482 = relay.const([-5.326025,2.782044,-1.271819,-3.332638,5.073228,1.094877,-8.132369,-3.430225,6.301464,6.102783,-6.799637,2.117074,2.312480,-0.808297,-4.982451,3.862535,6.602946,-0.315500,5.842107,-6.656160,4.284219,1.143232,7.056391,-5.337790,1.404681,0.888283,5.633742,-6.921918,-2.629658,1.704616,1.470022,-6.517037,5.368277,-2.683965,2.781791,0.940904,-1.289211,4.774514,-4.137797,1.901390,6.678836,-3.901088,0.284301,3.307231,4.570021,-0.401414,9.999963,-8.493586,0.116528,-1.409283,6.775511,8.873927,-7.008756,-8.069487,-3.010962,0.382448,-5.030232,-0.182107,-5.080090,8.275536,-2.244053,-3.532119,-8.955435,-5.708339,-0.167121,5.909203,-2.780775,6.274667,9.135536,-4.705091,2.060958,1.037520,9.348346,4.686801,-4.519067,4.275705,5.390721,-0.230825,-1.951669,6.044914,4.186040,5.186666,-3.053823,9.021050,-6.968703,2.620021,1.133919,2.531832,4.663036,-2.976865,0.669178,-6.058968,5.526500,2.141749,-1.042770,-6.594397,7.243347,1.340533,3.439734,3.758811,-0.845936,4.306099,6.426348,-5.354543,-8.923547,-7.902878,8.022919,-6.397993,-9.112673,-6.011395,-8.977661,-0.202427,-8.842464,2.632733,-9.121768,6.190010,-0.841404,-9.712960,2.314795,-5.885179,5.047280,-5.276749,1.528090,-5.416900,-0.335543,-8.963372,2.277960,-4.896717,6.397370,0.456478,-1.171276,-2.832717,-3.399437,-8.383763,-8.366076,8.705305,-6.471277,-1.467041,-2.286077,8.870395,8.557840,2.404681,-3.687874,6.098846,-6.780779,-4.262112,6.365402,5.914596,4.913770,-1.908454,-6.353141,-3.104386,3.155157,-2.347150,7.119617,-2.248233,-4.427481,8.869616,3.407712,-1.759252,-8.445478,-7.508676,3.899087,7.861263,1.254486,-3.437929,7.778573,-1.497475,2.152617,-6.196219,-5.167811,-9.311070,-2.078622,-0.693726,-2.362719,5.851431,0.985442,-6.858592,3.388900,0.743414,6.791508,-0.604164,-7.134558,4.432403,-3.268279,-4.646832,-0.875173,9.517520,3.345959,-3.578406,-7.734386,-2.745664,3.411887,-5.292521,-9.904231,-9.278047,-7.438000,-7.876412,9.784403,-8.279439,1.214512,1.507413,7.978548,-1.250872,-2.626865,-5.466640,4.186949,-2.489250,-3.048605,8.123781,-4.337643,-2.073467,9.677302,-1.184222,1.454007,-2.089799,4.515916,-7.973999,-3.024906,0.258565,-0.353731,3.078296,-6.816053,-6.746283,-9.003184,1.184287,4.049898,1.682156,-0.501396,-2.363101,0.220228,-2.545708,-7.078691,8.173710,-4.460444,3.765956,2.964705,-2.291580,-2.819111,-1.679868,-7.283532,0.975907,9.447187,-5.475159,-7.259873,1.098126,4.199857,1.708200,6.215587,-1.042779,3.525709,-2.180370,-5.242039,2.243155,9.212483,-0.957486,4.446557,-2.220493,-4.965046,6.212112,9.525363,-7.677205,-6.159376,-7.077456,7.918956,7.507176,-1.458257,1.562469,-7.591717,5.068911,-5.269446,-1.912678,1.022975,-5.908560,6.521626,0.952244,7.982145,-1.524646,6.177355,1.445720,8.231140,5.997875,-0.943984,5.903599,9.790140,-8.145145,-6.779492,-4.723674,8.046580,6.707342,-2.393043,0.021610,3.003816,5.901984,-7.654213,7.640750,-2.944559,8.969662,3.321605,8.400922,2.711639,-8.256402,-3.940030,-5.778094,5.831849,6.155999,-5.272928,1.679647,-5.444423,-5.251430,2.143281,-6.094423,-4.836640,-0.936383,-3.586410,2.333053,-1.194479,2.926536,-9.839213,-4.229767,-1.650617,6.924968,4.254208,-7.022949,9.294920,-6.883216,-1.092751,-4.861270,2.480676,-2.446861,0.498486,6.029019,0.021494,-6.626147,-9.646367,8.912935,-8.757106,3.394135,-9.868021,8.138911,-9.855266,-5.284350,7.250516,-2.286252,-0.942996,-1.420290,-1.327195,2.018266,4.601359,6.065846,-3.958093,-9.850276,5.264541,-9.109332,6.565173,4.127879,-2.934174,-7.635503,7.050690,-3.354047,3.458672,1.155679,-3.735488,8.134047,-7.811720,-5.435775,9.896262,-1.013909,-6.721182,-3.649096,-7.134422,-2.354608,-7.102313,-4.062170,2.803691,4.599719,-0.852591,-4.736083,9.776970,-3.179034,-2.790897,-0.272516,1.502974,-9.637192,-1.383063,6.147069,-2.978038,1.087490,-7.504752,-2.240823,-2.898648,-9.424485,-0.697136,1.094968,-6.463831,-6.701354,-4.682138,-2.041951,7.779721,-4.466920,-7.584484,-7.411014,3.150743,9.038562,-0.146489,1.366818,7.994477,1.644413,-2.723301,1.819304,-1.313365,2.464550,-7.020699,-5.818717,-9.979341,4.701560,-1.253919,6.944108,2.435118,2.384828,8.327854,-4.017728,-1.619243,-0.027837,4.220510,4.590177,5.321479,-8.474755,-0.650773,5.431472,6.674755,9.209013,8.465181,2.349842,9.480722,-3.257324,4.171201,6.881012,-9.622009,-7.718419,2.818735,0.662144,-1.333454,5.119201,-4.424193,8.560583,2.241637,9.067269,-1.959487,-7.867870,3.445803,-5.362994,9.538263,-4.443610,8.381543,1.406400,-1.445452,-6.221892,4.963756,6.023005,-9.535617,8.847222,-3.517263,-3.808366,-5.517911,-6.683187,8.738123,-5.594620,3.507895,-8.186544,-5.548617,3.971789,-6.126941,3.751881,7.033617,9.050566,-9.661779,-4.407714,5.127800,8.084413,6.303237,5.698690,-0.579207,9.913243,-7.577486,-5.697902,-6.440009,9.339920,3.456099,-9.026595,-2.781604,1.908013,-4.736132,9.969618,-5.016252,2.277259,-2.593229,7.203375,3.837978,-6.601356,-9.682522,-5.797554,4.300952,-7.077195,-4.614543,9.227497,-7.671263,9.645773,-4.195921,8.641208,5.559723,-3.922482,0.615000,-5.403145,6.258225,2.796860,-3.581975,-9.744964,8.558510,-7.787366,8.135165,-0.562724,-3.245713,-9.183026,-0.729956,-5.846079,1.621899,-0.335851,-7.946562,1.773921,8.840868,4.715790,-0.237212,7.530891,-6.889938,1.087123,-6.415976,-5.277985,-4.181294,3.153271,-7.103383,-9.947250,9.855146,-1.182746,-6.478226,5.219987,-5.365537,7.229528,-0.800822,6.665579,-8.963966,-5.786709,-4.173997,-0.008070,3.560599,-3.846582,8.282831,1.807227,7.339182,-9.154172,5.483989,8.297402,-4.821039,-9.234148,-4.693360,-7.482136,6.597780,6.080949,6.273249,-5.667581,0.565713,-9.185797,0.888078,8.012437,6.194485,-7.206218,2.375643,6.273640,-2.503731,-7.665809,9.751427,-2.278072,8.125662,-2.421278,4.601145,-6.855044,2.601905,6.548608,-8.789993,1.353233,-6.061715,1.799633,-4.180695,5.159301,-0.106895,2.758210,-2.731031,-8.905682,5.736350,-6.305658,9.242417,6.044473,0.623555,-6.784580,-5.588502,-9.383087,4.422223,-6.447375,-5.783146,1.040145,-9.450057,-3.666544,-0.652259,-2.447932,9.976199,-5.986399,4.937463,-4.977239,-9.906955,2.986389,-2.528672,8.519008,7.836574,2.919531,2.543827,-8.477195,6.286234,2.773157,-2.006753,2.762961,-1.241741,-6.711878,-2.798686,6.455755,1.173927,1.851825,-5.124973,-2.344984,-5.685003,4.023790,-6.914996,9.777518,-1.617557,0.251126,6.594002,-9.058478,-9.758618,1.072920,2.292983,1.838249,2.229437,9.332433,7.160181,3.379041,5.505216,3.263445,9.912749,-4.806096,9.589513,-1.123588,-4.777105,4.321880,6.754193,4.310089,6.827675,-1.144205,8.321176,-0.129306,0.971860,9.508962,-0.192613,-7.860864,5.442612,7.912583,-2.146529,1.653874,-0.735323,4.539705,-1.900644,6.312330,6.717962,-2.210020,8.209245,4.570428,2.237637,5.629040,2.375334,0.932829,-9.038738,-7.640828,-3.867924,-7.247245,-5.717035,-7.350699,-8.737288,-2.647180,2.068948,4.751834,9.965138,0.168113,6.359398,-3.671143,-5.219684,9.581425,-1.120170,8.935011,-5.337074,3.945212,9.551358,5.076974,8.626345,3.026929,-4.363821,8.473330,8.947760,-1.488224,-8.671164,-4.643719,-8.221552,6.540177,5.935813,7.908026,-8.921562,-9.593990,1.113916,-0.838460,4.757119,9.168971,-8.153045,3.380393,-6.177164,-2.156223,-5.174834,2.768522,-8.670846,8.626308,-7.368724,4.935279,2.326424,-5.015809,8.537006,-6.514194,2.018938,8.191913,-0.151330,5.402149,-4.694141,0.540055,-3.420808,-0.993429,-3.004396,-4.599857,-2.972092,7.339490,2.986047,-9.123648,-4.445781,2.047801,1.315708,4.138086,8.151086,-9.000157,-9.073480,-4.508244,-5.110196,-5.526351,-2.025823,4.424403,-7.562100,6.794647,7.811919,8.981565,-1.865942,8.601238,3.254153,5.043262,9.324093,-6.783804,-6.393946,5.378026,5.513737,4.598948,-3.504518,6.635791,3.446901,8.405467,-2.907392,4.055856,3.802041,-1.631099,5.067837,-2.039291,7.071354,0.626795,7.535478,4.650741,-1.139585,5.711771,9.264746,6.297227,7.928027,2.447427,0.784521,-9.825654,3.084973,3.173327,-1.320556,-8.680093,2.955707,6.251714,-7.640409,9.741913,0.310546,9.858349,1.960703,-9.393965,4.568445,1.061937,-2.923882,-9.602610,-8.300775,-1.527627,5.407111,9.707909,-2.274005,4.890207,2.935925,8.357054,7.608740,6.904982,-2.785513,7.345528,-1.954853,-2.299894,-1.534091,-7.368635,4.387384,-4.865960,5.599428,8.962216,-8.470062,-2.012097,6.548749,7.919420,6.517350,-0.468923,-3.354625,8.917128,-1.176248,3.036279,-7.349589,7.618185,-4.344460,-5.654353,8.846320,-8.194018,3.617573,1.442916,-6.033270,8.831088,-2.535512,4.156385,-4.884269,1.287269,8.476845,5.629633,-2.271889,1.955303,-4.926354,5.125340,6.665869,-9.100383,-4.821669,9.295876,-8.897216,-5.981465,-8.541642,0.847090,7.178761,7.651378,5.573716,-6.481737,-6.368797,-2.606426,-1.104744,-0.045279,7.782642,-1.914431,8.157126,0.475604,-9.762794,-8.247981,1.117133,3.533649,-9.867877,7.745575,-0.852193,9.499504,9.787057,6.767668,9.376405,8.159742,-3.096385,0.028317,-0.043080,9.014763,-1.824963,6.577766,9.903256,-9.650639,-9.609954,5.155627,-8.351061,9.078482,0.232716,7.031597,-6.111618,0.630642,-3.979474,-2.002129,3.525464,0.758018,9.136167,-7.825370,-1.224403,-2.773057,-8.407340,2.701944,7.488276,6.331619,5.520764,9.499815,2.715162,8.163952,5.244315,-9.357629,2.702223,9.570780,7.532616,-9.744397,-2.479501,-4.185331,-4.195410,3.368384,-8.213929,-5.226534,2.297937,8.658605,0.897718,-5.522505,5.019491,9.755735,7.307904,2.589796,-5.621307,-1.335137,8.991724,-6.104438,-3.123913,4.341445,-9.401297,-0.688626,5.269525,-3.848950,-1.337324,-2.062257,-0.165848,7.273441,-1.617137,-6.569827,-9.778855,7.544326,0.369202,5.985319,-3.691573,-7.065574,7.277826,-3.972686,-4.387419,7.180934,-6.152317,-4.332984,6.378678,-0.911330,8.701342,3.361121,8.103276,3.131991,-2.093042,-9.925061,6.792454,5.172198,8.442634,4.009871,-5.352670,7.283648,-0.772370,9.726649,0.355716,8.342961,-8.527492,-7.504326,-7.602380,-5.483375,-4.671251,1.626050,3.444457,-6.739478,-2.204637,1.357765,-2.471048,3.219358,-8.764868,3.692256,-7.542816,-5.853044,1.451772,-5.164375,-6.635004,-6.123310,4.134198,-1.188212,-5.252920,-2.989334,5.393839,1.194385,-7.860745,-5.696359,-9.660585,-3.872955,6.140927,4.801318,8.848734,-9.777222,5.810358,-5.331767,-6.038763,1.549478,-7.438784,3.156876,0.411534,2.140518,-3.846049,2.474222,6.819470,0.044240,-7.732175,1.901428,4.778719,-3.719228,-7.265374,0.645898,6.899000,9.905781,-3.644739,0.979352,-1.785545,7.458384,2.457379,4.043250,-9.721268,5.122926,8.134149,-2.004407,-9.446691,9.654896,-5.509665,1.208091,-7.513699,8.188508,4.646641,-5.574898,2.496422,-2.506766,-8.417868,-3.561086,8.787367,-7.537942,-4.525063,4.546211,5.171338,-9.107504,0.389203,6.704667,-9.648218,3.302727,-1.706595,9.618691,2.837164,-0.676467,3.355112,6.945608,-2.295856,-2.445892,-2.502063,5.020392,-0.444747,8.382063,6.968930,9.399848,0.551452,4.322216,9.484753,-8.312845,4.307896,-5.043901,8.498136,2.070599,7.823062,-9.194074,3.821802,7.652660,4.893938,2.871880,-2.609284,9.388217,7.026402,1.800919,5.224973,-1.707316,-7.909524,-1.965463,-8.080430,9.609504,8.093218,4.713277,7.464506,-0.199773,-8.265160,9.296758,6.224950,-9.101335,3.418859,0.845203,5.056409,3.734021,-4.569788,0.534970,7.303417,7.732905,2.508161,5.526695,2.219874,9.266168,-9.255111,-2.364484,0.669544,-1.516516,-3.492372,-6.227515,9.319623,1.499642,3.138739,-7.240328,1.802298,3.582659,7.658810,8.388428,-9.783755,-1.010408,1.235793,-9.747111,2.747659,-3.229666,-1.787169,-3.705075,-0.163945,-3.205368,-5.532495,1.117527,-3.579485,-9.971114,5.434220,-8.663172,9.854833,-6.673007,-3.362821,8.827512,-9.416937,9.008193,-8.208172,-3.514050,-5.281869,-5.867636,-6.356660,-2.504394,-5.971207,-9.617754,8.812058,-1.019469,4.669171,2.309068,1.404344,4.606253,-7.497457,6.245452,-9.263538,-6.921085,-0.339052,-2.019123,-7.024050,2.598938,5.244979,-6.886753,-6.587283,1.910872,-3.214066,6.539256,-5.742516,2.936057,-4.843022,6.164242,-9.398082,6.512462,2.212590,2.723444,-9.627191,-3.798552,-6.921715,-5.444868,9.509364,-7.874852,8.883086,-0.173248,5.451058,-3.123037,-0.867902,-8.606101,0.533758,6.360971,3.933271,-3.597701,3.333252,-0.361779,-6.286881,-5.621338,-2.378373,0.148718,3.143017,9.143703,2.034285,-7.369699,-5.148621,-2.101515,-1.444603,-9.027130,7.719789,0.053136,6.481408,-0.568668,8.833512,-9.112120,-5.466150,7.886492,5.442498,-8.588164,-6.555791,-6.279405,7.499564,1.648227,-9.854042,-9.134268,-8.349079,-7.087280,8.716285,6.316894,3.412060,-2.077898,7.315487,7.458460,7.484108,4.619265,-4.109638,-2.482217,2.467772,6.795766,2.909920,0.531689,-2.122182,0.952125,-2.163544,-3.307189,-7.124289,6.928979,-3.703017,-2.555342,-6.343331,6.651945,6.751743,0.154577,9.348112,-9.218891,-6.905456,8.346753,3.689785,-3.332538,5.929211,-3.810713,3.198991,-7.078014,-4.787111,0.790946,-0.036769,-8.084096,-2.240212,-9.348290,-1.320505,-9.315099,-4.908410,8.142934,4.679895,-9.390332,-3.837414,-8.289705,-8.500345,3.604989,-8.459188,-2.133574,-9.828099,-1.511750,-2.459516,-9.126754,-4.783303,3.040033,-4.217214,-4.170771,-6.843180,4.826802,9.927202,-1.361498,-9.459588,2.148535,0.657624,8.318778,-0.949978,-6.237886,3.448304,1.100586,-5.517348,-1.759062,-7.944253,-2.158981,9.448463,6.434902,9.297005,4.772789,-0.656645,-9.089897,-0.949035,8.157762,-9.397418,3.437452,-7.852043,4.692252,0.917854,-2.007437,-9.328209,-5.852959,-0.363272,3.948317,6.937514,5.714652,2.485909,7.462763,4.393793,-4.803592,7.374721,0.218865,-2.985809,-6.307060,4.392044,3.041191,1.113803,1.860864,-6.804824,4.827237,0.122315,3.376715,0.367846,-8.136016,2.695663,-3.532278,-3.959968,-2.862579,-2.523830,-5.054899,1.210006,8.681661,6.365416,-7.945834,8.087407,-9.790135,-4.961413,5.562664,-9.392170,4.878237,-9.818904,-0.099277,7.416018,-5.635657,5.964516,5.019582,-1.185427,5.055625,-9.747007,2.431118,-5.097763,-3.382438,1.346802,-8.804916,-5.332305,4.569432,0.821048,4.497470,2.861806,-7.075023,5.933870,6.744383,-1.713543,7.560689,8.768676,7.612323,-4.562076,-2.592672,0.150351,-2.518329,-6.660654,1.927762,7.716764,4.752350,-2.184361,-7.152708,6.955079,2.873853,-1.912287,-4.968881,-5.073285,4.687840,-5.077297,-8.732688,-7.685429,3.436580,0.834448,-2.797922,9.115346,1.654697,9.110688,3.525766,7.091974,1.911983,-6.475917,2.693269,4.544475,5.746554,1.507364,1.628110,-1.084750,-1.918207,1.897382,3.368456,-7.705605,-9.017353,-6.942680,3.503782,1.785982,5.284728,-0.818312,-6.681524,-8.349459,8.731057,5.627887,0.986045,0.427175,0.906989,7.693762,-5.693788,4.881728,3.037721,-5.537068,-9.904406,7.576416,5.332585,-0.646751,5.437941,-3.251462,-1.109865,-2.013120,2.327061,-7.518675,-7.616227,2.733679,1.268357,-6.387816,-2.309178,9.106621,-4.531047,4.891992,0.512311,4.740719,-8.612228,2.309888,7.016770,-5.137510,-6.292125,-0.810803,-0.591656,1.887337,-3.554003,8.420891,-2.851040,7.664260,3.440184,5.643048,9.212624,-9.200908,-4.751364,-2.253477,2.232335,-7.471973,2.566751,-1.881630,4.603228,-8.208407,1.338344,-2.470157,-4.400016,-3.969702,-0.614893,-1.063455,-6.262731,2.975558,2.034257,7.339160,2.863311,-7.535368,-4.644483,-4.028580,-0.031898,6.686502,-0.353334,5.412663,-8.947743,3.055269,9.847497,-8.226041,-7.670530,-7.223193,8.736007,-1.807704,-4.302356,-3.782831,2.901300,-9.165268,3.629153,-1.503667,4.540955,-5.644381,3.381364,5.176116,-4.237069,2.348768,3.535996,-3.178162,4.722130,9.562963,2.461911,-8.695809,7.985165,-8.759219,-8.525657,-1.027807,-1.437243,3.863830,-4.795593,0.668812,-6.665047,3.014313,-1.153456,0.094420,-4.224432,9.316679,-3.210928,2.907680,-9.268717,-8.806275,-9.934160,3.603195,5.521774,-8.691010,5.535220,-3.285273,-2.383399,2.898254,3.110399,-0.309307,-0.959973,8.494749,9.441265,-3.182437,-2.354513,2.386914,5.048727,-3.033829,8.786867,2.775036,-5.449013,5.900841,1.550462,8.128720,8.610322,2.129110,-4.297712,-4.415712,1.521732,1.170794,2.300386,-1.843144,2.160918,7.804186,2.836187,8.869799,0.696060,6.965118,-9.719943,6.907769,-6.224953,0.094952,-9.673292,8.691242,-8.121866,2.447515,2.448872,-6.740012,-1.779990,1.293835,-6.645318,3.746176,3.103665,9.630259,-2.625891,9.728657,2.274398,1.891654,-4.373321,8.407065,6.791421,-0.750637,-7.783837,-4.291652,9.423827,-0.084331,-1.289847,0.907798,-3.286007,9.033586,9.905957,-9.211924,7.769861,-1.338489,-7.853929,-7.161898,1.046975,-0.862042,-3.088557,-6.108543,-5.290886,3.652722,9.437869,4.927207,8.612930,-3.637728,5.649229,4.929916,-3.420114,5.226589,1.192004,-3.953772,-0.215770,-4.428765,1.885328,-8.276908,-7.455295,3.394847,-8.407968,4.410877,3.285509,0.981293,-3.826879,-2.915401,-6.983591,0.034171,1.537502,-1.665035,-9.313397,-5.348533,-5.216984,-1.660854,0.733689,-9.931976,-8.790351,5.136823,9.477019,-2.422277,-8.651512,-1.067006,-0.817823,-2.740172,8.222452,-9.569463,-3.112338,-8.280422,2.058058,2.888522,-9.935689,4.290091,4.640645,-4.852259,1.834412,8.304705,6.804504,-5.594560,1.392724,-8.324027,-5.146786,8.556638,6.266667,1.794327,-4.900741,9.238616,-3.371279,4.289683,-2.381731,-2.856968,-4.897668,3.977566,7.679560,-6.477318,-4.232014,9.191777,7.132952,2.488617,-8.916303,6.970423,3.414146,8.534440,6.330339,-9.242972,6.077008,2.212151,-8.190287,1.735273,9.815151,-4.520659,-2.508443,-0.964294,-4.897545,1.101585,-6.767848,0.397833,2.250068,1.084422,9.430484,-6.973265,-9.087407,0.179729,-6.627764,-1.338582,-0.426196,-8.497937,-8.452767,-8.746566,-9.346307,-2.821611,-7.669194,2.320599,-8.239557,4.228182,-3.757080,-9.820956,1.721835,7.415550,0.288875,0.307210,-7.107199,-1.857483,-3.864607,-6.740870,-8.597042,0.572894,-3.855597,4.792706,5.927134,6.461601,-9.315279,-4.532362,6.443039,-8.076085,4.228853,-2.102729,9.015127,5.847250,9.577245,-5.727724,-6.155764,-5.746907,-1.874374,2.135016,-4.174038,2.763708,5.112832,4.055213,5.183462,9.894629,6.917426,0.542217,-6.432871,8.601069,-1.457295,-4.998959,1.887216,4.275042,-7.101658,-3.447526,7.857635,2.520373,4.081280,7.727595,-2.796118,-4.955252,-1.858614,-8.293857,-4.610738,-0.179764,-1.898072,6.272481,-5.185751,8.624944,6.095682,8.708654,-9.519781,0.607834,8.722023,-6.254374,0.806504,-0.300066,-0.718092,6.450855,-7.629989,6.764311,-4.594656,-1.328991,-6.402328,7.264396,5.893439,-7.763806,1.387057,-6.095340,9.353767,5.118078,2.742309,-7.400922,-3.498707,-9.749828,-2.750271,1.409547,-4.022714,4.714692,-6.766697,-5.288417,3.491570,4.549971,2.030782,-6.042244,-1.029504,6.987046,8.382987,-6.837903,1.391867,-4.103687,-2.560349,-0.198003,9.138442,1.161700,-2.378508,-3.653742,5.697032,5.131681,0.337642,6.355082,7.512444,4.353858,-4.096202,-2.521320,-9.797465,4.006429,3.966099,4.428179,1.429056,-3.763192,-5.984515,-0.800579,-5.974209,-3.280362,1.661007,7.967660,6.911006,4.850206,-5.838022,4.027219,-3.564229,-2.272387,4.484020,-5.957655,-4.418884,-4.389631,6.591501,-5.856447,-7.951706,1.855780,-4.736510,-5.918626,6.844138,-2.743123,-2.310624,-9.711193,-0.665019,-2.908778,-8.083356,3.079735,4.428208,-6.859861,-5.700010,-8.624680,2.671102,-7.185343,-5.435670,1.630154,-2.334116,-1.911051,-8.966743,4.626709,6.990881,-1.112892,-1.743889,-8.711676,5.832485,1.618497,-4.954505,0.841090,0.651515,8.174724,-0.968732,-9.676310,-1.559676,5.480803,2.081047,-0.976893,-1.596841,9.972572,-0.732959,-2.770786,-3.503850,5.512985,1.433114,-3.756773,-7.713894,8.855074,1.818462,6.754706,-6.556648,-6.546304,0.615040,-7.837750,3.232046,-4.937315,8.075941,8.315324,-9.052582,-3.882782,0.126294,0.501297,8.608017,1.581111,-3.732418,-2.232290,8.489413,-2.368170,4.959404,8.890275,-7.546218,-0.762749,-4.709235,2.456917,-0.241169,3.552772,9.183846,5.099516,0.917719,6.841890,2.679375,-9.645106,-8.154212,0.614435,8.074310,-7.471470,1.865196,5.221242,-4.023194,-7.462113,7.882446,8.798748,-2.790314,6.183017,9.661355,4.543083,-9.814904,0.329700,3.608577,1.882295,1.680282,-0.502278,-7.601688,5.180969,9.160932,-7.431990,1.515530,0.997315,-7.064264,4.583980,7.437282,0.013953,-5.198562,-9.624849,2.425717,-9.644464,6.865095,3.203949,-1.804928,-1.386449,7.536850,-8.769846,-4.733499,-0.923179,-3.433109,-8.047401,1.381040,-1.464762,7.429972,3.411905,-6.995937,0.568161,-4.683092,8.465830,6.507964,-1.075397,-1.942724,6.280112,-1.206858,-4.440287,2.985975,-1.872974,-2.260882,-1.725522,4.231471,-6.854459,6.597144,7.456473,2.417412,1.035628,6.090473,7.203781,-9.630272,-8.515303,-9.370168,-7.614815,-7.861715,-3.743118,8.643000,-2.613002,-4.368075,-3.058193,-9.705967,-4.870526,-6.239760,6.709950,6.429342,-6.543377,0.717626,9.964859,0.919491,-1.792734,-9.903144,-8.836420,9.723135,1.417108,7.523665,-7.394516,0.782467,4.338349,-0.988882,8.215218,9.833602,5.555184,6.781607,3.006525,-8.108300,-3.994952,-1.795833,-3.003581,5.538782,-1.866082,6.632211,-6.827414,3.270938,8.382006,-9.929592,4.649664,-0.882183,3.020429,7.470358,-0.296488,-1.368393,2.825289,8.967070,-0.609860,2.442157,8.487831,1.294115,5.484216,-3.681640,-8.980221,-8.321248,-6.243659,3.843151,-0.324100,-9.291639,-7.196792,1.376846,-1.751236,-6.990822,5.498632,6.961082,-1.149792,-0.535611,5.386523,-7.526002,-7.018684,1.532530,9.847338,-0.110204,-0.276265,-5.315750,3.597453,-5.200302,-2.159330,-4.139757,-5.612562,9.628549,3.966017,-4.456503,-6.449189,-4.980850,3.996282,7.297537,-9.898166,-3.695544,8.072316,-4.106078,-9.410699,-4.277255,4.761601,-0.350731,-7.302217,-7.538576,-5.336065,-6.692024,-7.237284,1.028552,-0.136345,-9.449343,-3.265638,4.998948,-5.819775,-4.432529,-9.479992,2.211504,5.407562,2.361167,0.518326,1.757674,0.040035,-2.968715,4.576058,5.597339,1.387755,-0.804328,1.609445,2.676338,7.751337,-3.650388,-5.504160,1.131892,-3.318585,5.383250,7.175813,4.062809,-0.543851,-9.638439,6.025856,8.381331,8.916044,-8.528195,-9.673708,-6.974564,4.314824,4.748005,9.694703,8.815611,-7.717130,9.401146,-7.281875,-3.234231,8.964471,-2.031819,-7.476899,5.161472,6.285762,-4.928107,6.048665,-4.162175,-7.892084,-0.299105,-0.677061,1.685081,-1.896692,-8.244487,5.069728,9.263559,4.318694,6.882841,0.576021,-1.743086,-9.680334,-5.239917,9.002570,-1.621105,1.126095,6.396019,-1.159766,-3.532629,-0.124080,1.430669,6.755839,-4.545615,-0.304377,-0.904530,-0.472869,7.727851,-8.800974,-6.203444,-4.732258,5.577235,8.923022,3.381990,8.109538,-1.495505,5.796432,0.124523,-5.839143,7.177901,3.951773,-7.106461,-3.152947,-5.080592,-4.897082,3.506185,7.938047,-5.697457,8.180720,-7.499429,9.645979,-0.272197,0.335934,4.797118,7.324511,-8.838033,-2.962603,-5.366027,-9.487219,2.564460,3.093879,0.537312,0.726147,0.998453,-6.652321,2.327295,-8.389216,-0.490933,6.452756,1.056853,-1.093663,7.337356,9.725262,-7.989815,-3.866679,-1.672691,-7.785289,-0.740278,8.976076,-0.405865], dtype = "float32")#candidate|1482|(2310,)|const|float32
call_1481 = relay.TupleGetItem(func_1228_call(relay.reshape(const_1482.astype('float32'), [15, 11, 14])), 3)
call_1483 = relay.TupleGetItem(func_1231_call(relay.reshape(const_1482.astype('float32'), [15, 11, 14])), 3)
var_1491 = relay.var("var_1491", dtype = "int32", shape = (12, 4, 12))#candidate|1491|(12, 4, 12)|var|int32
bop_1492 = relay.floor_mod(call_1476.astype('float64'), relay.reshape(var_1491.astype('float64'), relay.shape_of(call_1476))) # shape=(12, 4, 12)
bop_1495 = relay.floor_mod(call_1477.astype('float64'), relay.reshape(var_1491.astype('float64'), relay.shape_of(call_1477))) # shape=(12, 4, 12)
bop_1496 = relay.logical_xor(call_1481.astype('uint16'), relay.reshape(var_1491.astype('uint16'), relay.shape_of(call_1481))) # shape=(12, 4, 12)
bop_1499 = relay.logical_xor(call_1483.astype('uint16'), relay.reshape(var_1491.astype('uint16'), relay.shape_of(call_1483))) # shape=(12, 4, 12)
func_1356_call = mod.get_global_var('func_1356')
func_1358_call = mutated_mod.get_global_var('func_1358')
call_1516 = func_1356_call()
call_1517 = func_1356_call()
const_1528 = relay.const([[[-7,8,6,8,10,-2,8,1,-5,-10,2,6],[-9,-9,1,1,-2,4,9,-10,10,4,-1,-9],[-3,-9,9,9,2,-10,-1,-2,10,-9,-8,9],[-2,-7,-9,3,-7,7,8,5,5,-4,6,9]],[[4,8,8,9,2,7,4,3,10,9,-3,-9],[-10,7,1,-4,4,6,-1,4,-10,-3,8,-8],[-4,-8,1,-9,2,-1,-2,7,-8,9,-7,1],[5,4,1,-6,8,6,-1,2,-1,-6,9,2]],[[-6,5,6,-1,-1,8,6,1,-8,-5,1,4],[-2,8,4,9,1,-3,1,9,8,5,9,-2],[-2,8,6,-7,2,2,-3,6,-6,-10,3,-10],[-7,7,-3,-5,-7,10,2,-4,3,2,10,2]],[[7,4,1,10,-10,-6,-7,-10,3,-10,7,1],[3,-8,1,8,1,-7,3,-2,6,6,10,-10],[5,-10,-5,2,6,8,7,-5,-5,1,-2,2],[1,-3,-5,-6,2,-3,-8,-2,3,4,-7,8]],[[-3,-1,2,-3,5,-5,-9,-1,8,-8,8,-3],[-2,-3,-9,-3,2,9,9,-8,-8,-5,6,7],[-9,-10,-7,-10,-3,-9,7,-5,4,-2,8,7],[7,-2,-7,6,-6,-3,-3,-1,9,9,2,3]],[[-9,-10,9,2,9,-8,5,-2,-4,1,1,6],[-3,-4,-10,-2,-5,8,2,-9,-6,-7,5,-1],[6,8,5,7,-8,5,-9,-1,-1,-6,10,4],[-4,-6,-2,-8,10,-6,-10,5,4,-8,-10,5]],[[9,-4,7,-7,-1,-10,2,1,-3,-7,10,3],[-5,-4,1,6,-3,8,-10,-2,8,2,-1,-1],[10,9,9,3,-2,-9,-8,-4,-7,2,-7,-8],[8,6,5,-4,-5,-4,-3,-10,-5,2,6,-6]],[[-8,10,-3,-2,-2,-10,6,-1,-7,7,5,-8],[8,4,4,7,-6,-7,9,2,10,6,6,-8],[6,2,3,-10,8,5,5,3,-10,2,2,9],[-4,7,-6,-2,10,-2,3,-2,-9,4,10,5]],[[10,9,1,-5,5,-6,6,-1,-3,-9,-8,-1],[9,-1,5,-9,3,-8,-6,-1,6,9,-7,-8],[7,7,10,2,-3,10,-1,4,5,-10,6,9],[1,4,10,8,-1,3,-3,5,-10,-6,2,-4]],[[-4,7,6,-2,7,4,-7,-7,7,2,-4,8],[1,-4,-5,-1,3,-1,-7,-7,-8,-2,-3,-5],[-8,10,5,-8,1,-9,-2,-7,10,7,8,10],[5,3,2,6,-7,5,-4,10,7,-4,-2,8]],[[-7,-9,-7,1,4,9,1,7,-4,4,7,5],[-5,-7,-8,-1,9,9,1,-9,-5,-1,6,6],[4,9,-4,-7,1,-8,-8,5,-8,-3,-6,4],[-3,-8,4,-10,-4,10,-1,-6,1,-5,-2,-6]],[[7,-1,-4,-2,9,3,-4,4,1,-5,-2,-9],[7,-2,4,-3,-9,-4,9,-7,8,2,4,1],[1,-10,-10,-6,2,-8,-7,-9,-5,-9,-1,-3],[-8,-2,-2,-10,10,5,-8,7,-8,8,9,-2]]], dtype = "int32")#candidate|1528|(12, 4, 12)|const|int32
bop_1529 = relay.multiply(call_1481.astype('uint32'), relay.reshape(const_1528.astype('uint32'), relay.shape_of(call_1481))) # shape=(12, 4, 12)
bop_1532 = relay.multiply(call_1483.astype('uint32'), relay.reshape(const_1528.astype('uint32'), relay.shape_of(call_1483))) # shape=(12, 4, 12)
output = relay.Tuple([const_1482,bop_1492,bop_1496,call_1516,bop_1529,])
output2 = relay.Tuple([const_1482,bop_1495,bop_1499,call_1517,bop_1532,])
func_1535 = relay.Function([var_1491,], output)
mod['func_1535'] = func_1535
mod = relay.transform.InferType()(mod)
mutated_mod['func_1535'] = func_1535
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1536 = relay.var("var_1536", dtype = "int32", shape = (12, 4, 12))#candidate|1536|(12, 4, 12)|var|int32
func_1535_call = mutated_mod.get_global_var('func_1535')
call_1537 = func_1535_call(var_1536)
output = call_1537
func_1538 = relay.Function([var_1536], output)
mutated_mod['func_1538'] = func_1538
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1561 = relay.const([[-1.206685,6.126066,-0.267970,-2.513620,-6.550006,1.157825,6.249228],[7.536693,-0.335059,-2.081409,8.040884,8.525484,-5.735448,4.671955],[0.151955,7.468457,-7.739011,-0.990771,1.805646,-8.359852,2.663709]], dtype = "float64")#candidate|1561|(3, 7)|const|float64
uop_1562 = relay.acosh(const_1561.astype('float64')) # shape=(3, 7)
output = relay.Tuple([uop_1562,])
output2 = relay.Tuple([uop_1562,])
func_1567 = relay.Function([], output)
mod['func_1567'] = func_1567
mod = relay.transform.InferType()(mod)
mutated_mod['func_1567'] = func_1567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1567_call = mutated_mod.get_global_var('func_1567')
call_1568 = func_1567_call()
output = call_1568
func_1569 = relay.Function([], output)
mutated_mod['func_1569'] = func_1569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1305_call = mod.get_global_var('func_1305')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_1612 = relay.TupleGetItem(func_1305_call(), 0)
call_1613 = relay.TupleGetItem(func_1307_call(), 0)
func_1305_call = mod.get_global_var('func_1305')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_1618 = relay.TupleGetItem(func_1305_call(), 0)
call_1619 = relay.TupleGetItem(func_1307_call(), 0)
output = relay.Tuple([call_1612,call_1618,])
output2 = relay.Tuple([call_1613,call_1619,])
func_1629 = relay.Function([], output)
mod['func_1629'] = func_1629
mod = relay.transform.InferType()(mod)
output = func_1629()
func_1630 = relay.Function([], output)
mutated_mod['func_1630'] = func_1630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1410_call = mod.get_global_var('func_1410')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_1645 = func_1410_call()
call_1646 = func_1410_call()
func_1305_call = mod.get_global_var('func_1305')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_1687 = relay.TupleGetItem(func_1305_call(), 0)
call_1688 = relay.TupleGetItem(func_1307_call(), 0)
uop_1693 = relay.exp(call_1645.astype('float64')) # shape=(12, 4, 12)
uop_1695 = relay.exp(call_1646.astype('float64')) # shape=(12, 4, 12)
func_1305_call = mod.get_global_var('func_1305')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_1707 = relay.TupleGetItem(func_1305_call(), 0)
call_1708 = relay.TupleGetItem(func_1307_call(), 0)
var_1714 = relay.var("var_1714", dtype = "float64", shape = (12, 4, 12))#candidate|1714|(12, 4, 12)|var|float64
bop_1715 = relay.less(uop_1693.astype('bool'), relay.reshape(var_1714.astype('bool'), relay.shape_of(uop_1693))) # shape=(12, 4, 12)
bop_1718 = relay.less(uop_1695.astype('bool'), relay.reshape(var_1714.astype('bool'), relay.shape_of(uop_1695))) # shape=(12, 4, 12)
output = relay.Tuple([call_1687,call_1707,bop_1715,])
output2 = relay.Tuple([call_1688,call_1708,bop_1718,])
func_1726 = relay.Function([var_1714,], output)
mod['func_1726'] = func_1726
mod = relay.transform.InferType()(mod)
mutated_mod['func_1726'] = func_1726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1727 = relay.var("var_1727", dtype = "float64", shape = (12, 4, 12))#candidate|1727|(12, 4, 12)|var|float64
func_1726_call = mutated_mod.get_global_var('func_1726')
call_1728 = func_1726_call(var_1727)
output = call_1728
func_1729 = relay.Function([var_1727], output)
mutated_mod['func_1729'] = func_1729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1305_call = mod.get_global_var('func_1305')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_1745 = relay.TupleGetItem(func_1305_call(), 0)
call_1746 = relay.TupleGetItem(func_1307_call(), 0)
uop_1750 = relay.acosh(call_1745.astype('float32')) # shape=(12, 4, 12)
uop_1752 = relay.acosh(call_1746.astype('float32')) # shape=(12, 4, 12)
output = relay.Tuple([uop_1750,])
output2 = relay.Tuple([uop_1752,])
func_1768 = relay.Function([], output)
mod['func_1768'] = func_1768
mod = relay.transform.InferType()(mod)
output = func_1768()
func_1769 = relay.Function([], output)
mutated_mod['func_1769'] = func_1769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1629_call = mod.get_global_var('func_1629')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_1770 = relay.TupleGetItem(func_1629_call(), 0)
call_1771 = relay.TupleGetItem(func_1630_call(), 0)
func_1567_call = mod.get_global_var('func_1567')
func_1569_call = mutated_mod.get_global_var('func_1569')
call_1790 = relay.TupleGetItem(func_1567_call(), 0)
call_1791 = relay.TupleGetItem(func_1569_call(), 0)
func_1629_call = mod.get_global_var('func_1629')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_1792 = relay.TupleGetItem(func_1629_call(), 1)
call_1793 = relay.TupleGetItem(func_1630_call(), 1)
output = relay.Tuple([call_1770,call_1790,call_1792,])
output2 = relay.Tuple([call_1771,call_1791,call_1793,])
func_1802 = relay.Function([], output)
mod['func_1802'] = func_1802
mod = relay.transform.InferType()(mod)
mutated_mod['func_1802'] = func_1802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1802_call = mutated_mod.get_global_var('func_1802')
call_1803 = func_1802_call()
output = call_1803
func_1804 = relay.Function([], output)
mutated_mod['func_1804'] = func_1804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1133_call = mod.get_global_var('func_1133')
func_1135_call = mutated_mod.get_global_var('func_1135')
call_1827 = relay.TupleGetItem(func_1133_call(), 0)
call_1828 = relay.TupleGetItem(func_1135_call(), 0)
output = relay.Tuple([call_1827,])
output2 = relay.Tuple([call_1828,])
func_1839 = relay.Function([], output)
mod['func_1839'] = func_1839
mod = relay.transform.InferType()(mod)
output = func_1839()
func_1840 = relay.Function([], output)
mutated_mod['func_1840'] = func_1840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1802_call = mod.get_global_var('func_1802')
func_1804_call = mutated_mod.get_global_var('func_1804')
call_1865 = relay.TupleGetItem(func_1802_call(), 1)
call_1866 = relay.TupleGetItem(func_1804_call(), 1)
output = call_1865
output2 = call_1866
func_1885 = relay.Function([], output)
mod['func_1885'] = func_1885
mod = relay.transform.InferType()(mod)
mutated_mod['func_1885'] = func_1885
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1885_call = mutated_mod.get_global_var('func_1885')
call_1886 = func_1885_call()
output = call_1886
func_1887 = relay.Function([], output)
mutated_mod['func_1887'] = func_1887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1839_call = mod.get_global_var('func_1839')
func_1840_call = mutated_mod.get_global_var('func_1840')
call_1890 = relay.TupleGetItem(func_1839_call(), 0)
call_1891 = relay.TupleGetItem(func_1840_call(), 0)
func_1839_call = mod.get_global_var('func_1839')
func_1840_call = mutated_mod.get_global_var('func_1840')
call_1895 = relay.TupleGetItem(func_1839_call(), 0)
call_1896 = relay.TupleGetItem(func_1840_call(), 0)
bop_1903 = relay.bitwise_or(call_1890.astype('int8'), relay.reshape(call_1895.astype('int8'), relay.shape_of(call_1890))) # shape=(12, 4, 12)
bop_1906 = relay.bitwise_or(call_1891.astype('int8'), relay.reshape(call_1896.astype('int8'), relay.shape_of(call_1891))) # shape=(12, 4, 12)
func_1629_call = mod.get_global_var('func_1629')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_1910 = relay.TupleGetItem(func_1629_call(), 1)
call_1911 = relay.TupleGetItem(func_1630_call(), 1)
output = relay.Tuple([bop_1903,call_1910,])
output2 = relay.Tuple([bop_1906,call_1911,])
func_1916 = relay.Function([], output)
mod['func_1916'] = func_1916
mod = relay.transform.InferType()(mod)
mutated_mod['func_1916'] = func_1916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mutated_mod.get_global_var('func_1916')
call_1917 = func_1916_call()
output = call_1917
func_1918 = relay.Function([], output)
mutated_mod['func_1918'] = func_1918
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1941 = relay.var("var_1941", dtype = "uint8", shape = ())#candidate|1941|()|var|uint8
var_1942 = relay.var("var_1942", dtype = "uint8", shape = (15, 8, 15))#candidate|1942|(15, 8, 15)|var|uint8
bop_1943 = relay.not_equal(var_1941.astype('bool'), var_1942.astype('bool')) # shape=(15, 8, 15)
func_1768_call = mod.get_global_var('func_1768')
func_1769_call = mutated_mod.get_global_var('func_1769')
call_1950 = relay.TupleGetItem(func_1768_call(), 0)
call_1951 = relay.TupleGetItem(func_1769_call(), 0)
func_1567_call = mod.get_global_var('func_1567')
func_1569_call = mutated_mod.get_global_var('func_1569')
call_1963 = relay.TupleGetItem(func_1567_call(), 0)
call_1964 = relay.TupleGetItem(func_1569_call(), 0)
output = relay.Tuple([bop_1943,call_1950,call_1963,])
output2 = relay.Tuple([bop_1943,call_1951,call_1964,])
func_1968 = relay.Function([var_1941,var_1942,], output)
mod['func_1968'] = func_1968
mod = relay.transform.InferType()(mod)
mutated_mod['func_1968'] = func_1968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1968_call = mutated_mod.get_global_var('func_1968')
var_1970 = relay.var("var_1970", dtype = "uint8", shape = ())#candidate|1970|()|var|uint8
var_1971 = relay.var("var_1971", dtype = "uint8", shape = (15, 8, 15))#candidate|1971|(15, 8, 15)|var|uint8
call_1969 = func_1968_call(var_1970,var_1971,)
output = call_1969
func_1972 = relay.Function([var_1970,var_1971,], output)
mutated_mod['func_1972'] = func_1972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1356_call = mod.get_global_var('func_1356')
func_1358_call = mutated_mod.get_global_var('func_1358')
call_2037 = func_1356_call()
call_2038 = func_1356_call()
uop_2043 = relay.atanh(call_2037.astype('float32')) # shape=(13, 16, 2)
uop_2045 = relay.atanh(call_2038.astype('float32')) # shape=(13, 16, 2)
output = uop_2043
output2 = uop_2045
func_2048 = relay.Function([], output)
mod['func_2048'] = func_2048
mod = relay.transform.InferType()(mod)
mutated_mod['func_2048'] = func_2048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2048_call = mutated_mod.get_global_var('func_2048')
call_2049 = func_2048_call()
output = call_2049
func_2050 = relay.Function([], output)
mutated_mod['func_2050'] = func_2050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1410_call = mod.get_global_var('func_1410')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_2190 = func_1410_call()
call_2191 = func_1410_call()
func_2048_call = mod.get_global_var('func_2048')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_2196 = func_2048_call()
call_2197 = func_2048_call()
output = relay.Tuple([call_2190,call_2196,])
output2 = relay.Tuple([call_2191,call_2197,])
func_2216 = relay.Function([], output)
mod['func_2216'] = func_2216
mod = relay.transform.InferType()(mod)
mutated_mod['func_2216'] = func_2216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2216_call = mutated_mod.get_global_var('func_2216')
call_2217 = func_2216_call()
output = call_2217
func_2218 = relay.Function([], output)
mutated_mod['func_2218'] = func_2218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2048_call = mod.get_global_var('func_2048')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_2253 = func_2048_call()
call_2254 = func_2048_call()
output = call_2253
output2 = call_2254
func_2261 = relay.Function([], output)
mod['func_2261'] = func_2261
mod = relay.transform.InferType()(mod)
mutated_mod['func_2261'] = func_2261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mutated_mod.get_global_var('func_2261')
call_2262 = func_2261_call()
output = call_2262
func_2263 = relay.Function([], output)
mutated_mod['func_2263'] = func_2263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_2276 = relay.TupleGetItem(func_1916_call(), 1)
call_2277 = relay.TupleGetItem(func_1918_call(), 1)
uop_2284 = relay.log(call_2276.astype('float32')) # shape=(12, 4, 12)
uop_2286 = relay.log(call_2277.astype('float32')) # shape=(12, 4, 12)
uop_2288 = relay.sinh(call_2276.astype('float64')) # shape=(12, 4, 12)
uop_2290 = relay.sinh(call_2277.astype('float64')) # shape=(12, 4, 12)
func_2261_call = mod.get_global_var('func_2261')
func_2263_call = mutated_mod.get_global_var('func_2263')
call_2302 = func_2261_call()
call_2303 = func_2261_call()
output = relay.Tuple([uop_2284,uop_2288,call_2302,])
output2 = relay.Tuple([uop_2286,uop_2290,call_2303,])
func_2315 = relay.Function([], output)
mod['func_2315'] = func_2315
mod = relay.transform.InferType()(mod)
mutated_mod['func_2315'] = func_2315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2315_call = mutated_mod.get_global_var('func_2315')
call_2316 = func_2315_call()
output = call_2316
func_2317 = relay.Function([], output)
mutated_mod['func_2317'] = func_2317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_2322 = relay.TupleGetItem(func_1916_call(), 1)
call_2323 = relay.TupleGetItem(func_1918_call(), 1)
func_1629_call = mod.get_global_var('func_1629')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_2330 = relay.TupleGetItem(func_1629_call(), 0)
call_2331 = relay.TupleGetItem(func_1630_call(), 0)
func_1410_call = mod.get_global_var('func_1410')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_2334 = func_1410_call()
call_2335 = func_1410_call()
output = relay.Tuple([call_2322,call_2330,call_2334,])
output2 = relay.Tuple([call_2323,call_2331,call_2335,])
func_2343 = relay.Function([], output)
mod['func_2343'] = func_2343
mod = relay.transform.InferType()(mod)
output = func_2343()
func_2344 = relay.Function([], output)
mutated_mod['func_2344'] = func_2344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1305_call = mod.get_global_var('func_1305')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_2360 = relay.TupleGetItem(func_1305_call(), 0)
call_2361 = relay.TupleGetItem(func_1307_call(), 0)
output = relay.Tuple([call_2360,])
output2 = relay.Tuple([call_2361,])
func_2373 = relay.Function([], output)
mod['func_2373'] = func_2373
mod = relay.transform.InferType()(mod)
mutated_mod['func_2373'] = func_2373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mutated_mod.get_global_var('func_2373')
call_2374 = func_2373_call()
output = call_2374
func_2375 = relay.Function([], output)
mutated_mod['func_2375'] = func_2375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1356_call = mod.get_global_var('func_1356')
func_1358_call = mutated_mod.get_global_var('func_1358')
call_2380 = func_1356_call()
call_2381 = func_1356_call()
output = call_2380
output2 = call_2381
func_2382 = relay.Function([], output)
mod['func_2382'] = func_2382
mod = relay.transform.InferType()(mod)
output = func_2382()
func_2383 = relay.Function([], output)
mutated_mod['func_2383'] = func_2383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1305_call = mod.get_global_var('func_1305')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_2415 = relay.TupleGetItem(func_1305_call(), 0)
call_2416 = relay.TupleGetItem(func_1307_call(), 0)
output = relay.Tuple([call_2415,])
output2 = relay.Tuple([call_2416,])
func_2429 = relay.Function([], output)
mod['func_2429'] = func_2429
mod = relay.transform.InferType()(mod)
mutated_mod['func_2429'] = func_2429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2429_call = mutated_mod.get_global_var('func_2429')
call_2430 = func_2429_call()
output = call_2430
func_2431 = relay.Function([], output)
mutated_mod['func_2431'] = func_2431
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2432 = relay.const([[[-2,-2]],[[-9,6]],[[4,5]],[[-5,1]]], dtype = "int8")#candidate|2432|(4, 1, 2)|const|int8
var_2433 = relay.var("var_2433", dtype = "int8", shape = (4, 8, 2))#candidate|2433|(4, 8, 2)|var|int8
bop_2434 = relay.bitwise_xor(const_2432.astype('int8'), var_2433.astype('int8')) # shape=(4, 8, 2)
output = relay.Tuple([bop_2434,])
output2 = relay.Tuple([bop_2434,])
func_2449 = relay.Function([var_2433,], output)
mod['func_2449'] = func_2449
mod = relay.transform.InferType()(mod)
var_2450 = relay.var("var_2450", dtype = "int8", shape = (4, 8, 2))#candidate|2450|(4, 8, 2)|var|int8
output = func_2449(var_2450)
func_2451 = relay.Function([var_2450], output)
mutated_mod['func_2451'] = func_2451
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2598 = relay.const([[[-3.808018,3.171289,-1.208145,-5.958806,-0.444250,-5.066562,0.544107,0.459465,-9.151236,6.630412,-5.178119,-8.218351],[3.695963,-6.969523,-6.593285,-1.232564,-0.349804,-3.322074,-1.602463,-2.251157,2.762243,-5.281348,8.098626,9.574188],[0.258110,-7.647423,-1.258163,8.925422,-7.252214,-9.365122,-5.842428,2.266622,-1.650780,2.615031,-7.365116,-7.456767],[5.661166,-7.889599,-2.358163,-4.243816,-7.785393,-2.780332,3.209222,8.519548,0.071903,6.849460,-0.580434,-3.984738],[-0.435797,2.400700,7.916779,-2.775043,3.336025,-6.280047,-8.430744,6.466534,8.926080,7.862645,-5.452427,-7.334418],[-0.146849,1.457595,-7.248832,-7.992949,9.542713,6.014604,7.229585,4.314030,-9.930781,-6.548071,6.045178,-5.616479]],[[2.943106,3.968204,-0.678552,2.350188,3.049100,8.283001,-0.529560,-7.756419,0.950698,8.180649,2.412226,7.131680],[-9.282121,-0.363187,-0.722527,-8.749409,4.125556,0.404003,-0.145094,-6.352153,6.968885,1.526905,3.837599,8.793535],[-8.555879,8.146110,-6.511391,8.193860,6.715821,-1.008239,-3.305097,1.244989,-1.304418,7.159783,-1.144988,6.974661],[5.271987,5.892565,-5.466994,-7.529752,3.953160,4.660237,-2.367920,-6.198245,-0.162078,5.268126,-9.965143,-4.945351],[6.692936,4.831358,-2.424964,5.665795,0.192635,-5.546071,-3.638416,-0.543068,2.643638,0.300281,8.567192,7.415777],[-8.026429,-1.813658,7.118662,2.951754,2.704233,-8.752149,3.426795,8.574746,9.719973,6.438013,-4.950748,3.532296]],[[2.802092,-1.016744,2.940455,-0.453096,-7.154486,-6.901605,-6.032106,8.501601,-2.631325,0.205807,6.512343,-3.622247],[-1.046267,-9.614394,-7.367516,-5.849572,-2.459845,-0.519573,-1.336318,0.167413,7.889322,9.143404,-7.252866,6.002688],[-7.752336,-5.821849,-7.409080,-6.246172,-3.281926,3.476525,6.261033,-0.028062,-6.773879,1.702603,-1.728346,-3.341709],[-6.960967,1.428389,-0.309636,2.908189,6.780340,-1.685277,-9.766456,-6.084847,-5.907831,4.050826,-0.111557,8.980898],[-1.224974,5.329539,-4.872616,0.512723,8.313364,7.555811,8.956762,8.630712,-2.296725,-7.922588,-2.501867,-9.416140],[5.334787,-8.511997,7.422148,-3.223936,-6.179760,-6.326117,9.477659,4.152145,-6.050587,-0.937141,2.364059,-0.365845]],[[-6.874162,1.459734,-2.002943,8.508941,4.784451,8.225935,4.331030,6.826108,6.916051,-7.300861,8.749320,-3.849796],[-0.529530,8.671563,-3.258497,-6.796606,9.968620,6.798922,7.814747,6.483855,1.157025,6.530141,-4.603203,-0.934696],[6.828065,3.791973,6.295277,-5.201884,-5.674762,8.607272,-8.757141,0.077128,4.480421,2.328837,9.341242,-0.899490],[9.003348,-3.628963,-2.680531,6.472104,3.569041,-3.817889,-6.687224,4.666115,-2.090758,9.029194,-0.221620,-8.441467],[-1.925796,-4.214045,-8.947970,-5.576695,-7.934061,-4.223316,9.161720,-6.100182,-6.038316,2.602255,-4.796498,0.572893],[-3.232406,0.795351,-1.437311,-3.926221,3.904521,-8.379698,0.869039,5.772133,9.883706,-3.589249,5.172681,-7.904895]],[[2.300929,3.246423,-3.956619,4.822274,7.863457,0.684291,-3.979879,-3.337188,-1.561222,-6.675585,3.702066,0.921652],[5.757403,-9.424897,4.582192,-5.217548,-2.574763,-4.450461,-2.617824,4.885168,-2.761795,2.702916,5.533280,-2.849678],[7.710910,3.552620,-1.416705,0.381326,4.990817,-4.647390,-0.047339,6.871654,-6.456635,8.995018,5.472364,7.651227],[4.826438,4.230688,-3.587423,-2.077278,-7.878496,0.630376,0.542120,-0.507004,-7.026953,1.328526,1.111455,5.110736],[-3.190548,-6.624267,-5.812593,3.399991,4.107156,-2.485730,-7.539255,1.171017,-9.953259,3.799455,7.669566,-9.540604],[-7.054394,7.073126,3.450724,-7.326184,3.862490,2.223680,-8.536456,-2.644831,3.380628,8.770659,7.000716,-7.540064]],[[2.520650,1.949767,6.284864,-5.615174,4.698190,0.983043,7.184665,-1.515747,6.013302,-9.713374,-9.004369,7.566789],[8.124720,0.918146,2.584388,-7.938002,1.988033,8.813562,-6.792475,8.996187,7.213862,-3.757472,-4.022959,-7.526339],[-6.372879,1.524466,4.444686,5.934595,6.169427,0.228878,-1.285563,-2.153192,-2.462953,3.735276,9.908552,-8.561289],[9.729239,2.703130,-8.690391,3.783622,-9.881922,7.245409,5.490044,-9.241744,-8.492464,7.207480,-6.503358,-3.224011],[-5.824412,7.029274,-6.289787,-6.560802,-4.231310,2.106800,8.828278,6.035698,4.599230,6.523061,8.941881,-6.726986],[-3.868703,5.229921,5.606035,5.085079,3.749878,0.528593,-6.625415,0.396119,-0.074478,8.531778,-4.167259,7.620745]],[[-8.088612,-1.273932,6.149484,2.297506,6.334932,-1.778619,-5.759165,-6.818487,-5.982610,-9.630297,7.832842,4.971505],[-3.537376,-0.604805,2.988883,3.328808,-3.277715,-2.806761,-6.321760,1.363164,-2.576894,-4.124957,9.824737,-0.407555],[-8.440105,5.650907,-8.627414,1.336904,6.216917,0.019561,-0.488077,-8.109653,9.030379,-1.011479,-0.314252,1.298985],[6.352248,-1.178464,-2.419110,-9.770608,9.157436,-0.175392,-0.470574,-8.843627,4.345458,-1.938750,-3.744652,6.927304],[8.404175,1.353854,0.791582,-1.736261,-5.810191,-1.389500,3.373036,-6.651197,-8.525146,6.230337,-0.578192,-8.838108],[1.696002,3.234206,-1.422754,6.621312,-5.083046,2.309217,8.100284,-5.491498,-5.059994,-2.224649,5.115708,-6.167213]],[[-7.689938,-8.450662,-4.407845,-5.327569,-3.737043,6.406590,-5.305720,-6.482097,-4.306759,1.155624,-4.454438,0.852764],[-4.525601,-4.409883,-8.904822,6.484055,-9.683671,-5.225906,-6.707925,8.892824,-9.820426,5.113899,3.100390,-9.199692],[-0.657657,-2.023578,6.160109,1.520472,3.473803,-9.949535,4.865216,-7.897523,9.113651,-3.926856,-8.853325,-3.577596],[-1.936240,7.149604,-7.589112,3.222261,8.901620,7.806678,-6.443100,-7.172744,-1.966828,7.118933,-4.427151,-7.602938],[-5.154290,-3.864568,-9.135384,-4.310453,-3.600943,-2.048581,8.346043,7.863557,6.954703,6.792051,-3.339386,-3.507265],[-9.422101,-8.593480,2.961773,5.127614,0.218517,-0.177341,-4.557657,-0.474563,3.759214,7.977674,8.655162,5.954446]],[[7.161915,-7.214171,1.939529,8.914614,-1.505282,-5.921165,-5.475633,-1.520751,5.925726,5.933706,5.568328,8.450539],[-3.352576,2.364471,2.524332,4.452596,9.893670,-7.086666,-6.609644,8.300179,1.762066,-2.021527,7.998739,7.879327],[-2.563054,-0.378059,4.705653,-2.104342,3.546368,3.974376,-7.619961,1.844554,-1.215649,-1.827447,3.348301,0.448945],[-1.468471,-4.316754,-2.104277,-1.089821,-9.955816,-9.349088,-7.121126,-4.391173,-3.838488,6.401947,-1.675106,4.857817],[-6.170783,7.151937,6.017705,1.640778,-4.174105,6.458603,7.576388,1.788851,-8.536240,9.952202,-6.484528,-9.960626],[6.122925,-4.029477,5.354098,-6.560364,3.352494,1.542316,9.663924,-4.664276,8.786796,-7.437280,-6.956881,-4.687698]],[[-3.156112,9.988431,3.124272,7.134685,0.031717,-4.568325,2.358077,9.101967,-3.162758,4.132970,3.627395,-3.887178],[9.594003,2.647132,-6.924108,3.024186,-2.515166,-8.090632,-1.301738,-8.323561,1.617784,-0.242154,-1.589149,6.347663],[2.054436,-2.168474,0.608785,2.551279,8.968331,-2.169555,-7.191750,-0.141419,-8.439488,3.754544,9.606264,4.421966],[-6.491597,9.087154,3.673828,-0.263508,-4.787385,6.345930,3.842793,-6.814049,7.969985,-8.505681,-8.964162,-4.249262],[2.866337,-9.542509,-6.336380,3.693963,3.447154,1.856239,-3.926267,2.640027,-6.440997,-8.366607,7.066830,-0.987554],[2.339802,5.997135,-6.129109,-2.295247,6.080303,-4.563991,-0.887143,-0.868523,-3.630274,-7.065313,7.067327,4.825355]],[[-1.256602,3.984042,1.691006,1.221666,9.912642,-9.418119,-2.556700,7.800094,9.394435,8.199049,-1.786341,-4.058698],[0.762635,2.541404,-8.468491,-9.423527,-5.017611,6.617334,-2.956268,-0.932862,9.447003,6.720874,2.060749,7.788806],[-2.394510,1.757537,-4.844528,9.183297,-0.324045,9.007752,-1.115445,-8.313539,5.280743,-4.797882,-0.465931,0.657813],[3.152999,4.980551,-6.984089,-6.114974,-0.486936,9.507564,8.055614,-3.246107,9.531055,-8.278467,-9.764790,-7.752278],[-1.965451,6.728872,2.425713,-3.592832,4.224366,5.740242,-3.602238,-3.062492,0.928233,-6.506355,-8.049597,2.761145],[-6.446167,1.565645,-8.681406,-0.620880,-0.862411,6.322330,9.772662,5.104160,6.443859,-5.404972,-3.800988,-7.042463]],[[-6.227500,-9.055013,-8.312377,-9.287515,4.345954,6.376321,0.609935,5.816288,8.999331,5.610163,-4.496654,1.225238],[1.039899,-8.540830,-5.316545,-9.137808,8.615153,0.243600,-0.839361,-4.660688,-3.928023,8.207761,9.123196,7.335673],[3.032831,2.982846,8.551129,5.281310,-5.404743,-7.233028,2.381836,3.766446,0.378872,-2.869355,-2.528454,-1.381350],[-4.350232,-6.799377,-5.675612,-7.321869,-3.009175,7.286181,-4.339104,4.790746,-7.437474,4.753786,-9.212511,-3.113628],[4.216766,1.475199,0.922461,-9.374863,9.222719,-9.102382,1.592382,2.128380,-3.974969,4.388135,0.274442,-5.527465],[7.842230,7.723135,-5.933899,7.426033,-9.533949,-2.743411,-1.361038,2.422077,5.602998,2.875528,-9.669968,4.700376]],[[-3.881978,4.924192,8.134714,1.351188,3.174832,-8.986264,3.063800,-4.182777,-1.696794,2.909119,7.962651,-7.423804],[-6.787949,0.013473,-9.275661,-5.553046,-1.956873,-9.533958,6.097225,-9.582469,7.951960,-2.558646,-9.353551,-3.584031],[0.645848,-4.008609,1.715207,-9.182917,-6.140144,-4.750880,-7.735177,0.996517,0.859169,-8.003018,-9.748719,0.463224],[3.637095,-3.032104,-4.812126,-7.951460,-2.827077,7.449869,5.003246,-1.789006,9.671774,-0.598188,3.176980,-6.751684],[5.319779,6.577359,6.866963,6.135662,-9.236067,2.874032,0.527188,5.353395,-6.213804,7.012153,-6.146834,1.310725],[-1.651492,6.254268,-7.321288,-1.100489,-2.831918,2.816968,7.682665,-7.758304,-5.194366,-0.010949,5.729499,1.615775]]], dtype = "float32")#candidate|2598|(13, 6, 12)|const|float32
uop_2599 = relay.asinh(const_2598.astype('float32')) # shape=(13, 6, 12)
output = relay.Tuple([uop_2599,])
output2 = relay.Tuple([uop_2599,])
func_2601 = relay.Function([], output)
mod['func_2601'] = func_2601
mod = relay.transform.InferType()(mod)
mutated_mod['func_2601'] = func_2601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2601_call = mutated_mod.get_global_var('func_2601')
call_2602 = func_2601_call()
output = call_2602
func_2603 = relay.Function([], output)
mutated_mod['func_2603'] = func_2603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2343_call = mod.get_global_var('func_2343')
func_2344_call = mutated_mod.get_global_var('func_2344')
call_2722 = relay.TupleGetItem(func_2343_call(), 1)
call_2723 = relay.TupleGetItem(func_2344_call(), 1)
var_2755 = relay.var("var_2755", dtype = "int32", shape = (12, 4, 12))#candidate|2755|(12, 4, 12)|var|int32
bop_2756 = relay.logical_and(call_2722.astype('bool'), relay.reshape(var_2755.astype('bool'), relay.shape_of(call_2722))) # shape=(12, 4, 12)
bop_2759 = relay.logical_and(call_2723.astype('bool'), relay.reshape(var_2755.astype('bool'), relay.shape_of(call_2723))) # shape=(12, 4, 12)
output = relay.Tuple([bop_2756,])
output2 = relay.Tuple([bop_2759,])
func_2763 = relay.Function([var_2755,], output)
mod['func_2763'] = func_2763
mod = relay.transform.InferType()(mod)
mutated_mod['func_2763'] = func_2763
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2764 = relay.var("var_2764", dtype = "int32", shape = (12, 4, 12))#candidate|2764|(12, 4, 12)|var|int32
func_2763_call = mutated_mod.get_global_var('func_2763')
call_2765 = func_2763_call(var_2764)
output = call_2765
func_2766 = relay.Function([var_2764], output)
mutated_mod['func_2766'] = func_2766
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2798 = relay.var("var_2798", dtype = "float32", shape = (12, 1, 6))#candidate|2798|(12, 1, 6)|var|float32
uop_2799 = relay.log2(var_2798.astype('float32')) # shape=(12, 1, 6)
func_2261_call = mod.get_global_var('func_2261')
func_2263_call = mutated_mod.get_global_var('func_2263')
call_2802 = func_2261_call()
call_2803 = func_2261_call()
output = relay.Tuple([uop_2799,call_2802,])
output2 = relay.Tuple([uop_2799,call_2803,])
func_2806 = relay.Function([var_2798,], output)
mod['func_2806'] = func_2806
mod = relay.transform.InferType()(mod)
mutated_mod['func_2806'] = func_2806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2807 = relay.var("var_2807", dtype = "float32", shape = (12, 1, 6))#candidate|2807|(12, 1, 6)|var|float32
func_2806_call = mutated_mod.get_global_var('func_2806')
call_2808 = func_2806_call(var_2807)
output = call_2808
func_2809 = relay.Function([var_2807], output)
mutated_mod['func_2809'] = func_2809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_2845 = relay.TupleGetItem(func_1916_call(), 0)
call_2846 = relay.TupleGetItem(func_1918_call(), 0)
func_1768_call = mod.get_global_var('func_1768')
func_1769_call = mutated_mod.get_global_var('func_1769')
call_2858 = relay.TupleGetItem(func_1768_call(), 0)
call_2859 = relay.TupleGetItem(func_1769_call(), 0)
output = relay.Tuple([call_2845,call_2858,])
output2 = relay.Tuple([call_2846,call_2859,])
func_2861 = relay.Function([], output)
mod['func_2861'] = func_2861
mod = relay.transform.InferType()(mod)
mutated_mod['func_2861'] = func_2861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2861_call = mutated_mod.get_global_var('func_2861')
call_2862 = func_2861_call()
output = call_2862
func_2863 = relay.Function([], output)
mutated_mod['func_2863'] = func_2863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1410_call = mod.get_global_var('func_1410')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_2908 = func_1410_call()
call_2909 = func_1410_call()
func_1726_call = mod.get_global_var('func_1726')
func_1729_call = mutated_mod.get_global_var('func_1729')
call_2917 = relay.TupleGetItem(func_1726_call(relay.reshape(call_2908.astype('float64'), [12, 4, 12])), 2)
call_2918 = relay.TupleGetItem(func_1729_call(relay.reshape(call_2908.astype('float64'), [12, 4, 12])), 2)
output = relay.Tuple([call_2908,call_2917,])
output2 = relay.Tuple([call_2909,call_2918,])
func_2923 = relay.Function([], output)
mod['func_2923'] = func_2923
mod = relay.transform.InferType()(mod)
mutated_mod['func_2923'] = func_2923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mutated_mod.get_global_var('func_2923')
call_2924 = func_2923_call()
output = call_2924
func_2925 = relay.Function([], output)
mutated_mod['func_2925'] = func_2925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1133_call = mod.get_global_var('func_1133')
func_1135_call = mutated_mod.get_global_var('func_1135')
call_2965 = relay.TupleGetItem(func_1133_call(), 2)
call_2966 = relay.TupleGetItem(func_1135_call(), 2)
output = call_2965
output2 = call_2966
func_2981 = relay.Function([], output)
mod['func_2981'] = func_2981
mod = relay.transform.InferType()(mod)
mutated_mod['func_2981'] = func_2981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mutated_mod.get_global_var('func_2981')
call_2982 = func_2981_call()
output = call_2982
func_2983 = relay.Function([], output)
mutated_mod['func_2983'] = func_2983
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3069 = relay.const([[[2.080578,4.603734,7.819718,4.198958,0.449636,3.246172,-5.293018,5.835216,3.236206,6.111597,-6.072179,-8.162635],[-9.696497,1.823226,-9.925925,-9.742957,4.860941,-7.304363,4.155312,4.211202,-2.841529,-8.310203,6.582848,-5.074120]],[[-3.150876,9.605640,4.341672,-3.745286,-8.385745,1.907318,-6.435450,-7.490138,4.640836,-2.709783,-6.824007,6.179261],[-9.859607,-6.959254,9.037531,1.735647,-2.787225,-9.251492,-5.389245,-3.085561,-1.056694,7.696243,3.853584,-0.903050]],[[-5.042699,6.228328,7.366625,-9.614622,-4.468553,8.325847,4.952324,-4.835383,4.037631,8.126279,3.656642,-5.149887],[8.734893,-4.379431,4.682314,-7.638731,9.647928,6.318123,-6.753719,1.413104,-7.135590,4.407889,5.542848,5.115984]],[[-8.509037,-5.726257,-5.584748,-7.911727,-5.216543,-2.334844,4.657592,1.459565,2.203586,1.059076,-2.934919,-4.337547],[-9.946040,-2.392284,0.567644,-8.435038,2.607371,5.124788,-0.737406,7.434396,-1.061547,-8.513816,-7.693403,3.580183]],[[-2.653010,-7.619663,0.480194,4.704111,-0.998530,8.277758,-4.209119,0.975048,-7.520744,8.487523,-0.109911,9.915519],[7.959233,8.051292,7.530711,9.714262,7.812584,0.800700,-7.047631,-7.234361,-2.683928,5.085021,-8.674108,-9.647743]],[[6.634555,2.511180,4.367693,4.020895,-1.923539,-0.015113,0.967702,-9.644755,8.978324,4.213036,-3.008539,-0.045526],[3.573473,0.995580,7.653264,-5.275610,-7.812397,-1.300443,-1.205446,-8.884261,-3.588515,-9.154514,-7.425393,6.804613]]], dtype = "float32")#candidate|3069|(6, 2, 12)|const|float32
var_3070 = relay.var("var_3070", dtype = "float32", shape = (6, 2, 12))#candidate|3070|(6, 2, 12)|var|float32
bop_3071 = relay.not_equal(const_3069.astype('bool'), relay.reshape(var_3070.astype('bool'), relay.shape_of(const_3069))) # shape=(6, 2, 12)
bop_3075 = relay.equal(bop_3071.astype('bool'), relay.reshape(const_3069.astype('bool'), relay.shape_of(bop_3071))) # shape=(6, 2, 12)
var_3078 = relay.var("var_3078", dtype = "bool", shape = (6, 2, 12))#candidate|3078|(6, 2, 12)|var|bool
bop_3079 = relay.subtract(bop_3071.astype('int8'), relay.reshape(var_3078.astype('int8'), relay.shape_of(bop_3071))) # shape=(6, 2, 12)
output = relay.Tuple([bop_3075,bop_3079,])
output2 = relay.Tuple([bop_3075,bop_3079,])
func_3082 = relay.Function([var_3070,var_3078,], output)
mod['func_3082'] = func_3082
mod = relay.transform.InferType()(mod)
mutated_mod['func_3082'] = func_3082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3082_call = mutated_mod.get_global_var('func_3082')
var_3084 = relay.var("var_3084", dtype = "float32", shape = (6, 2, 12))#candidate|3084|(6, 2, 12)|var|float32
var_3085 = relay.var("var_3085", dtype = "bool", shape = (6, 2, 12))#candidate|3085|(6, 2, 12)|var|bool
call_3083 = func_3082_call(var_3084,var_3085,)
output = call_3083
func_3086 = relay.Function([var_3084,var_3085,], output)
mutated_mod['func_3086'] = func_3086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_3108 = relay.TupleGetItem(func_2373_call(), 0)
call_3109 = relay.TupleGetItem(func_2375_call(), 0)
func_2806_call = mod.get_global_var('func_2806')
func_2809_call = mutated_mod.get_global_var('func_2809')
var_3134 = relay.var("var_3134", dtype = "float32", shape = (36, 2))#candidate|3134|(36, 2)|var|float32
call_3133 = relay.TupleGetItem(func_2806_call(relay.reshape(var_3134.astype('float32'), [12, 1, 6])), 1)
call_3135 = relay.TupleGetItem(func_2809_call(relay.reshape(var_3134.astype('float32'), [12, 1, 6])), 1)
func_2806_call = mod.get_global_var('func_2806')
func_2809_call = mutated_mod.get_global_var('func_2809')
call_3141 = relay.TupleGetItem(func_2806_call(relay.reshape(var_3134.astype('float32'), [12, 1, 6])), 1)
call_3142 = relay.TupleGetItem(func_2809_call(relay.reshape(var_3134.astype('float32'), [12, 1, 6])), 1)
var_3145 = relay.var("var_3145", dtype = "int32", shape = (12, 4, 12))#candidate|3145|(12, 4, 12)|var|int32
bop_3146 = relay.floor_divide(call_3108.astype('float32'), relay.reshape(var_3145.astype('float32'), relay.shape_of(call_3108))) # shape=(12, 4, 12)
bop_3149 = relay.floor_divide(call_3109.astype('float32'), relay.reshape(var_3145.astype('float32'), relay.shape_of(call_3109))) # shape=(12, 4, 12)
var_3152 = relay.var("var_3152", dtype = "float32", shape = (36, 2))#candidate|3152|(36, 2)|var|float32
bop_3153 = relay.divide(var_3134.astype('float64'), relay.reshape(var_3152.astype('float64'), relay.shape_of(var_3134))) # shape=(36, 2)
output = relay.Tuple([call_3133,call_3141,bop_3146,bop_3153,])
output2 = relay.Tuple([call_3135,call_3142,bop_3149,bop_3153,])
func_3158 = relay.Function([var_3134,var_3145,var_3152,], output)
mod['func_3158'] = func_3158
mod = relay.transform.InferType()(mod)
mutated_mod['func_3158'] = func_3158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3158_call = mutated_mod.get_global_var('func_3158')
var_3160 = relay.var("var_3160", dtype = "float32", shape = (36, 2))#candidate|3160|(36, 2)|var|float32
var_3161 = relay.var("var_3161", dtype = "int32", shape = (12, 4, 12))#candidate|3161|(12, 4, 12)|var|int32
var_3162 = relay.var("var_3162", dtype = "float32", shape = (36, 2))#candidate|3162|(36, 2)|var|float32
call_3159 = func_3158_call(var_3160,var_3161,var_3162,)
output = call_3159
func_3163 = relay.Function([var_3160,var_3161,var_3162,], output)
mutated_mod['func_3163'] = func_3163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2981_call = mod.get_global_var('func_2981')
func_2983_call = mutated_mod.get_global_var('func_2983')
call_3168 = func_2981_call()
call_3169 = func_2981_call()
output = call_3168
output2 = call_3169
func_3174 = relay.Function([], output)
mod['func_3174'] = func_3174
mod = relay.transform.InferType()(mod)
output = func_3174()
func_3175 = relay.Function([], output)
mutated_mod['func_3175'] = func_3175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3232 = relay.var("var_3232", dtype = "float32", shape = (14, 2, 14))#candidate|3232|(14, 2, 14)|var|float32
uop_3233 = relay.atanh(var_3232.astype('float32')) # shape=(14, 2, 14)
uop_3240 = relay.erf(var_3232.astype('float32')) # shape=(14, 2, 14)
output = relay.Tuple([uop_3233,uop_3240,])
output2 = relay.Tuple([uop_3233,uop_3240,])
func_3245 = relay.Function([var_3232,], output)
mod['func_3245'] = func_3245
mod = relay.transform.InferType()(mod)
var_3246 = relay.var("var_3246", dtype = "float32", shape = (14, 2, 14))#candidate|3246|(14, 2, 14)|var|float32
output = func_3245(var_3246)
func_3247 = relay.Function([var_3246], output)
mutated_mod['func_3247'] = func_3247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2861_call = mod.get_global_var('func_2861')
func_2863_call = mutated_mod.get_global_var('func_2863')
call_3258 = relay.TupleGetItem(func_2861_call(), 0)
call_3259 = relay.TupleGetItem(func_2863_call(), 0)
output = call_3258
output2 = call_3259
func_3281 = relay.Function([], output)
mod['func_3281'] = func_3281
mod = relay.transform.InferType()(mod)
mutated_mod['func_3281'] = func_3281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3281_call = mutated_mod.get_global_var('func_3281')
call_3282 = func_3281_call()
output = call_3282
func_3283 = relay.Function([], output)
mutated_mod['func_3283'] = func_3283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3281_call = mod.get_global_var('func_3281')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_3289 = func_3281_call()
call_3290 = func_3281_call()
output = call_3289
output2 = call_3290
func_3300 = relay.Function([], output)
mod['func_3300'] = func_3300
mod = relay.transform.InferType()(mod)
output = func_3300()
func_3301 = relay.Function([], output)
mutated_mod['func_3301'] = func_3301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_3302 = relay.TupleGetItem(func_1916_call(), 0)
call_3303 = relay.TupleGetItem(func_1918_call(), 0)
output = relay.Tuple([call_3302,])
output2 = relay.Tuple([call_3303,])
func_3309 = relay.Function([], output)
mod['func_3309'] = func_3309
mod = relay.transform.InferType()(mod)
mutated_mod['func_3309'] = func_3309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3309_call = mutated_mod.get_global_var('func_3309')
call_3310 = func_3309_call()
output = call_3310
func_3311 = relay.Function([], output)
mutated_mod['func_3311'] = func_3311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mod.get_global_var('func_2261')
func_2263_call = mutated_mod.get_global_var('func_2263')
call_3330 = func_2261_call()
call_3331 = func_2261_call()
output = call_3330
output2 = call_3331
func_3337 = relay.Function([], output)
mod['func_3337'] = func_3337
mod = relay.transform.InferType()(mod)
output = func_3337()
func_3338 = relay.Function([], output)
mutated_mod['func_3338'] = func_3338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3174_call = mod.get_global_var('func_3174')
func_3175_call = mutated_mod.get_global_var('func_3175')
call_3339 = func_3174_call()
call_3340 = func_3174_call()
output = relay.Tuple([call_3339,])
output2 = relay.Tuple([call_3340,])
func_3341 = relay.Function([], output)
mod['func_3341'] = func_3341
mod = relay.transform.InferType()(mod)
output = func_3341()
func_3342 = relay.Function([], output)
mutated_mod['func_3342'] = func_3342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1567_call = mod.get_global_var('func_1567')
func_1569_call = mutated_mod.get_global_var('func_1569')
call_3351 = relay.TupleGetItem(func_1567_call(), 0)
call_3352 = relay.TupleGetItem(func_1569_call(), 0)
output = relay.Tuple([call_3351,])
output2 = relay.Tuple([call_3352,])
func_3358 = relay.Function([], output)
mod['func_3358'] = func_3358
mod = relay.transform.InferType()(mod)
output = func_3358()
func_3359 = relay.Function([], output)
mutated_mod['func_3359'] = func_3359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3300_call = mod.get_global_var('func_3300')
func_3301_call = mutated_mod.get_global_var('func_3301')
call_3397 = func_3300_call()
call_3398 = func_3300_call()
var_3409 = relay.var("var_3409", dtype = "int8", shape = (12, 4, 12))#candidate|3409|(12, 4, 12)|var|int8
bop_3410 = relay.equal(call_3397.astype('bool'), relay.reshape(var_3409.astype('bool'), relay.shape_of(call_3397))) # shape=(12, 4, 12)
bop_3413 = relay.equal(call_3398.astype('bool'), relay.reshape(var_3409.astype('bool'), relay.shape_of(call_3398))) # shape=(12, 4, 12)
output = relay.Tuple([bop_3410,])
output2 = relay.Tuple([bop_3413,])
func_3425 = relay.Function([var_3409,], output)
mod['func_3425'] = func_3425
mod = relay.transform.InferType()(mod)
var_3426 = relay.var("var_3426", dtype = "int8", shape = (12, 4, 12))#candidate|3426|(12, 4, 12)|var|int8
output = func_3425(var_3426)
func_3427 = relay.Function([var_3426], output)
mutated_mod['func_3427'] = func_3427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2382_call = mod.get_global_var('func_2382')
func_2383_call = mutated_mod.get_global_var('func_2383')
call_3441 = func_2382_call()
call_3442 = func_2382_call()
var_3456 = relay.var("var_3456", dtype = "int32", shape = (13, 16, 2))#candidate|3456|(13, 16, 2)|var|int32
bop_3457 = relay.divide(call_3441.astype('float64'), relay.reshape(var_3456.astype('float64'), relay.shape_of(call_3441))) # shape=(13, 16, 2)
bop_3460 = relay.divide(call_3442.astype('float64'), relay.reshape(var_3456.astype('float64'), relay.shape_of(call_3442))) # shape=(13, 16, 2)
func_1535_call = mod.get_global_var('func_1535')
func_1538_call = mutated_mod.get_global_var('func_1538')
const_3465 = relay.const([[2,2,-6,1,-8,-2,9,2,10,4,-10,7,5,-10,5,-7,-3,-2,-3,-6,8,-8,9,8,-5,-9,9,3,-3,1,6,-6,-5,7,-3,-9,-4,5,8,-5,6,-7,9,10,-4,1,-9,10,-7,-3,1,1,-8,1,10,8,9,2,7,1,3,3,2,5,10,2,-10,1,9,-4,7,6,7,-7,10,-8,-1,-4,-6,-4,6,10,-9,4,2,-7,-9,-8,-1,-1,-2,-3,-1,7,5,-4,7,7,-4,4,-8,-8,5,3,10,8,-4,4,-5,3,-4,1,2,7,-10,5,-3,-6,6,6,-5,7,-5,-7,3,2,-8,1,4,7,1,3,2,4,-1,5,7,7,6,-4,-5,-8,-1,4,-7,1,-2,3,6,-5,2,-4,5,-2,-9,-10,7,9,7,5,-6,-1,9,-6,1,-1,-5,-1,8,1,-4,-2,-9,8,6,-1,8,-3,-5,-3,2,9,-10,-8,-8,8,8,-10,2,-4,-9,-3,6,-5,6,-7,-1,8,1,-2,2,8,1,-8,5,-3,8,3,-5,7,4,2,4,-1,-3,-3,-4,-7,-10,9,-9,-2,-2,5,3,9,-7,5,8,-6,8,5,2,-8,-9,10,1,6,-8,9,2,1,6,1,-1,-6,-6,-2,5,3,-8,9,-6,1,8,5,9,-1,1,10,9,-4,8,-5,7,4,-10,3,10,2,-7,1,-3,2,6,-10,7,-2,-2,-8,5,-4,-5,-3,-2,-6,-3,6,9,2,9,10,5,-3,-9,4,2,-10,-7,-3,-9,-10,6,-8,2,-10,-1,-9,2,-3,-2,4,-7,1,7,-2,3,-9,-8,1,7,2,-4,6,2,7,-8,-8,-5,-10,-2,-1,4,3,-8,-5,8,5,-8,-7,2,-6,5,7,4,-4,-10,3,-6,-10,-1,-9,2,-10,-9,-3,-1,3,-5,-7,10,5,-8,-7,-5,1,10,6,6,-2,-4,-5,-4,-2,1,-7,-1,-4,-3,5,6,5,-6,9,10,4,-6,9,-9,8,10,-4,10,-10,-7,-2,-9,-10,-1,-6,10,-2,-10,8,-4,1,6,5,-1,10,9,10,10,-4,1,-1,-9,9,6,9,6,3,5,-7,-2,6,-10,9,8,-2,-3,-2,-5,-2,-8,10,2,7,1,4,2,5,8,-3,-7,-5,-5,-3,-8,3,5,-2,-7,4,3,-1,10,7,10,-4,5,9,8,2,4,-4,9,6,6,-3,-8,4,-2,5,2,-9,1,-7,-10,5,-4,-3,-6,8,6,1,-8,1,-7,-2,-6,-6,-10,5,1,2,-2,8,-3,-10,-10,5,7,7,-4,4,9,8,2,7,-7,9,-5,7,-5,-7,5,2,9,7,6,5,9,7,9,5,5,5,-2,8,-9,-2,-10,-8,2,2,5,5,3,7,8,-9,-7,2,7,9,-6,2,-3,-5,-4,-5,8,-4,4,4,5,-4,8,-4,-6,2,-3,-10,-3,-3,3,7,-10,2,-4,7,-10,2,6,4]], dtype = "int32")#candidate|3465|(1, 576)|const|int32
call_3464 = relay.TupleGetItem(func_1535_call(relay.reshape(const_3465.astype('int32'), [12, 4, 12])), 1)
call_3466 = relay.TupleGetItem(func_1538_call(relay.reshape(const_3465.astype('int32'), [12, 4, 12])), 1)
output = relay.Tuple([bop_3457,call_3464,const_3465,])
output2 = relay.Tuple([bop_3460,call_3466,const_3465,])
func_3467 = relay.Function([var_3456,], output)
mod['func_3467'] = func_3467
mod = relay.transform.InferType()(mod)
mutated_mod['func_3467'] = func_3467
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3468 = relay.var("var_3468", dtype = "int32", shape = (13, 16, 2))#candidate|3468|(13, 16, 2)|var|int32
func_3467_call = mutated_mod.get_global_var('func_3467')
call_3469 = func_3467_call(var_3468)
output = call_3469
func_3470 = relay.Function([var_3468], output)
mutated_mod['func_3470'] = func_3470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1839_call = mod.get_global_var('func_1839')
func_1840_call = mutated_mod.get_global_var('func_1840')
call_3477 = relay.TupleGetItem(func_1839_call(), 0)
call_3478 = relay.TupleGetItem(func_1840_call(), 0)
output = call_3477
output2 = call_3478
func_3479 = relay.Function([], output)
mod['func_3479'] = func_3479
mod = relay.transform.InferType()(mod)
mutated_mod['func_3479'] = func_3479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3479_call = mutated_mod.get_global_var('func_3479')
call_3480 = func_3479_call()
output = call_3480
func_3481 = relay.Function([], output)
mutated_mod['func_3481'] = func_3481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2315_call = mod.get_global_var('func_2315')
func_2317_call = mutated_mod.get_global_var('func_2317')
call_3499 = relay.TupleGetItem(func_2315_call(), 0)
call_3500 = relay.TupleGetItem(func_2317_call(), 0)
output = relay.Tuple([call_3499,])
output2 = relay.Tuple([call_3500,])
func_3511 = relay.Function([], output)
mod['func_3511'] = func_3511
mod = relay.transform.InferType()(mod)
mutated_mod['func_3511'] = func_3511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3511_call = mutated_mod.get_global_var('func_3511')
call_3512 = func_3511_call()
output = call_3512
func_3513 = relay.Function([], output)
mutated_mod['func_3513'] = func_3513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mod.get_global_var('func_2923')
func_2925_call = mutated_mod.get_global_var('func_2925')
call_3559 = relay.TupleGetItem(func_2923_call(), 1)
call_3560 = relay.TupleGetItem(func_2925_call(), 1)
func_1133_call = mod.get_global_var('func_1133')
func_1135_call = mutated_mod.get_global_var('func_1135')
call_3589 = relay.TupleGetItem(func_1133_call(), 1)
call_3590 = relay.TupleGetItem(func_1135_call(), 1)
func_2048_call = mod.get_global_var('func_2048')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_3591 = func_2048_call()
call_3592 = func_2048_call()
uop_3595 = relay.acosh(call_3589.astype('float64')) # shape=(13, 16, 2)
uop_3597 = relay.acosh(call_3590.astype('float64')) # shape=(13, 16, 2)
func_3337_call = mod.get_global_var('func_3337')
func_3338_call = mutated_mod.get_global_var('func_3338')
call_3604 = func_3337_call()
call_3605 = func_3337_call()
output = relay.Tuple([call_3559,call_3591,uop_3595,call_3604,])
output2 = relay.Tuple([call_3560,call_3592,uop_3597,call_3605,])
func_3606 = relay.Function([], output)
mod['func_3606'] = func_3606
mod = relay.transform.InferType()(mod)
output = func_3606()
func_3607 = relay.Function([], output)
mutated_mod['func_3607'] = func_3607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2048_call = mod.get_global_var('func_2048')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_3633 = func_2048_call()
call_3634 = func_2048_call()
uop_3638 = relay.cosh(call_3633.astype('float32')) # shape=(13, 16, 2)
uop_3640 = relay.cosh(call_3634.astype('float32')) # shape=(13, 16, 2)
uop_3647 = relay.atan(uop_3638.astype('float64')) # shape=(13, 16, 2)
uop_3649 = relay.atan(uop_3640.astype('float64')) # shape=(13, 16, 2)
bop_3655 = relay.floor_divide(uop_3638.astype('float64'), relay.reshape(call_3633.astype('float64'), relay.shape_of(uop_3638))) # shape=(13, 16, 2)
bop_3658 = relay.floor_divide(uop_3640.astype('float64'), relay.reshape(call_3634.astype('float64'), relay.shape_of(uop_3640))) # shape=(13, 16, 2)
func_2601_call = mod.get_global_var('func_2601')
func_2603_call = mutated_mod.get_global_var('func_2603')
call_3681 = relay.TupleGetItem(func_2601_call(), 0)
call_3682 = relay.TupleGetItem(func_2603_call(), 0)
uop_3685 = relay.asin(uop_3647.astype('float64')) # shape=(13, 16, 2)
uop_3687 = relay.asin(uop_3649.astype('float64')) # shape=(13, 16, 2)
func_2048_call = mod.get_global_var('func_2048')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_3688 = func_2048_call()
call_3689 = func_2048_call()
output = relay.Tuple([bop_3655,call_3681,uop_3685,call_3688,])
output2 = relay.Tuple([bop_3658,call_3682,uop_3687,call_3689,])
func_3690 = relay.Function([], output)
mod['func_3690'] = func_3690
mod = relay.transform.InferType()(mod)
mutated_mod['func_3690'] = func_3690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3690_call = mutated_mod.get_global_var('func_3690')
call_3691 = func_3690_call()
output = call_3691
func_3692 = relay.Function([], output)
mutated_mod['func_3692'] = func_3692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2382_call = mod.get_global_var('func_2382')
func_2383_call = mutated_mod.get_global_var('func_2383')
call_3734 = func_2382_call()
call_3735 = func_2382_call()
output = call_3734
output2 = call_3735
func_3759 = relay.Function([], output)
mod['func_3759'] = func_3759
mod = relay.transform.InferType()(mod)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3759_call = mutated_mod.get_global_var('func_3759')
call_3760 = func_3759_call()
output = call_3760
func_3761 = relay.Function([], output)
mutated_mod['func_3761'] = func_3761
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3767 = relay.var("var_3767", dtype = "int8", shape = (13, 2, 4))#candidate|3767|(13, 2, 4)|var|int8
var_3768 = relay.var("var_3768", dtype = "int8", shape = (13, 2, 4))#candidate|3768|(13, 2, 4)|var|int8
bop_3769 = relay.bitwise_and(var_3767.astype('int8'), relay.reshape(var_3768.astype('int8'), relay.shape_of(var_3767))) # shape=(13, 2, 4)
bop_3774 = relay.power(bop_3769.astype('float32'), relay.reshape(var_3768.astype('float32'), relay.shape_of(bop_3769))) # shape=(13, 2, 4)
output = relay.Tuple([bop_3774,])
output2 = relay.Tuple([bop_3774,])
func_3777 = relay.Function([var_3767,var_3768,], output)
mod['func_3777'] = func_3777
mod = relay.transform.InferType()(mod)
mutated_mod['func_3777'] = func_3777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3777_call = mutated_mod.get_global_var('func_3777')
var_3779 = relay.var("var_3779", dtype = "int8", shape = (13, 2, 4))#candidate|3779|(13, 2, 4)|var|int8
var_3780 = relay.var("var_3780", dtype = "int8", shape = (13, 2, 4))#candidate|3780|(13, 2, 4)|var|int8
call_3778 = func_3777_call(var_3779,var_3780,)
output = call_3778
func_3781 = relay.Function([var_3779,var_3780,], output)
mutated_mod['func_3781'] = func_3781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3606_call = mod.get_global_var('func_3606')
func_3607_call = mutated_mod.get_global_var('func_3607')
call_3856 = relay.TupleGetItem(func_3606_call(), 3)
call_3857 = relay.TupleGetItem(func_3607_call(), 3)
output = relay.Tuple([call_3856,])
output2 = relay.Tuple([call_3857,])
func_3880 = relay.Function([], output)
mod['func_3880'] = func_3880
mod = relay.transform.InferType()(mod)
output = func_3880()
func_3881 = relay.Function([], output)
mutated_mod['func_3881'] = func_3881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1885_call = mod.get_global_var('func_1885')
func_1887_call = mutated_mod.get_global_var('func_1887')
call_3980 = func_1885_call()
call_3981 = func_1885_call()
func_1916_call = mod.get_global_var('func_1916')
func_1918_call = mutated_mod.get_global_var('func_1918')
call_3982 = relay.TupleGetItem(func_1916_call(), 0)
call_3983 = relay.TupleGetItem(func_1918_call(), 0)
output = relay.Tuple([call_3980,call_3982,])
output2 = relay.Tuple([call_3981,call_3983,])
func_3984 = relay.Function([], output)
mod['func_3984'] = func_3984
mod = relay.transform.InferType()(mod)
output = func_3984()
func_3985 = relay.Function([], output)
mutated_mod['func_3985'] = func_3985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1410_call = mod.get_global_var('func_1410')
func_1412_call = mutated_mod.get_global_var('func_1412')
call_4166 = func_1410_call()
call_4167 = func_1410_call()
output = relay.Tuple([call_4166,])
output2 = relay.Tuple([call_4167,])
func_4168 = relay.Function([], output)
mod['func_4168'] = func_4168
mod = relay.transform.InferType()(mod)
output = func_4168()
func_4169 = relay.Function([], output)
mutated_mod['func_4169'] = func_4169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2343_call = mod.get_global_var('func_2343')
func_2344_call = mutated_mod.get_global_var('func_2344')
call_4180 = relay.TupleGetItem(func_2343_call(), 0)
call_4181 = relay.TupleGetItem(func_2344_call(), 0)
output = call_4180
output2 = call_4181
func_4183 = relay.Function([], output)
mod['func_4183'] = func_4183
mod = relay.transform.InferType()(mod)
output = func_4183()
func_4184 = relay.Function([], output)
mutated_mod['func_4184'] = func_4184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2343_call = mod.get_global_var('func_2343')
func_2344_call = mutated_mod.get_global_var('func_2344')
call_4185 = relay.TupleGetItem(func_2343_call(), 0)
call_4186 = relay.TupleGetItem(func_2344_call(), 0)
output = call_4185
output2 = call_4186
func_4204 = relay.Function([], output)
mod['func_4204'] = func_4204
mod = relay.transform.InferType()(mod)
mutated_mod['func_4204'] = func_4204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4204_call = mutated_mod.get_global_var('func_4204')
call_4205 = func_4204_call()
output = call_4205
func_4206 = relay.Function([], output)
mutated_mod['func_4206'] = func_4206
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4227 = relay.var("var_4227", dtype = "float64", shape = ())#candidate|4227|()|var|float64
var_4228 = relay.var("var_4228", dtype = "float64", shape = (6, 1))#candidate|4228|(6, 1)|var|float64
bop_4229 = relay.divide(var_4227.astype('float64'), var_4228.astype('float64')) # shape=(6, 1)
output = bop_4229
output2 = bop_4229
func_4239 = relay.Function([var_4227,var_4228,], output)
mod['func_4239'] = func_4239
mod = relay.transform.InferType()(mod)
var_4240 = relay.var("var_4240", dtype = "float64", shape = ())#candidate|4240|()|var|float64
var_4241 = relay.var("var_4241", dtype = "float64", shape = (6, 1))#candidate|4241|(6, 1)|var|float64
output = func_4239(var_4240,var_4241,)
func_4242 = relay.Function([var_4240,var_4241,], output)
mutated_mod['func_4242'] = func_4242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3341_call = mod.get_global_var('func_3341')
func_3342_call = mutated_mod.get_global_var('func_3342')
call_4310 = relay.TupleGetItem(func_3341_call(), 0)
call_4311 = relay.TupleGetItem(func_3342_call(), 0)
output = relay.Tuple([call_4310,])
output2 = relay.Tuple([call_4311,])
func_4314 = relay.Function([], output)
mod['func_4314'] = func_4314
mod = relay.transform.InferType()(mod)
mutated_mod['func_4314'] = func_4314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4314_call = mutated_mod.get_global_var('func_4314')
call_4315 = func_4314_call()
output = call_4315
func_4316 = relay.Function([], output)
mutated_mod['func_4316'] = func_4316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4314_call = mod.get_global_var('func_4314')
func_4316_call = mutated_mod.get_global_var('func_4316')
call_4356 = relay.TupleGetItem(func_4314_call(), 0)
call_4357 = relay.TupleGetItem(func_4316_call(), 0)
output = relay.Tuple([call_4356,])
output2 = relay.Tuple([call_4357,])
func_4360 = relay.Function([], output)
mod['func_4360'] = func_4360
mod = relay.transform.InferType()(mod)
output = func_4360()
func_4361 = relay.Function([], output)
mutated_mod['func_4361'] = func_4361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4440 = relay.var("var_4440", dtype = "float64", shape = (15, 9, 4))#candidate|4440|(15, 9, 4)|var|float64
uop_4441 = relay.log2(var_4440.astype('float64')) # shape=(15, 9, 4)
output = relay.Tuple([uop_4441,])
output2 = relay.Tuple([uop_4441,])
func_4444 = relay.Function([var_4440,], output)
mod['func_4444'] = func_4444
mod = relay.transform.InferType()(mod)
var_4445 = relay.var("var_4445", dtype = "float64", shape = (15, 9, 4))#candidate|4445|(15, 9, 4)|var|float64
output = func_4444(var_4445)
func_4446 = relay.Function([var_4445], output)
mutated_mod['func_4446'] = func_4446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2048_call = mod.get_global_var('func_2048')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_4461 = func_2048_call()
call_4462 = func_2048_call()
output = relay.Tuple([call_4461,])
output2 = relay.Tuple([call_4462,])
func_4505 = relay.Function([], output)
mod['func_4505'] = func_4505
mod = relay.transform.InferType()(mod)
mutated_mod['func_4505'] = func_4505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4505_call = mutated_mod.get_global_var('func_4505')
call_4506 = func_4505_call()
output = call_4506
func_4507 = relay.Function([], output)
mutated_mod['func_4507'] = func_4507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3309_call = mod.get_global_var('func_3309')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_4580 = relay.TupleGetItem(func_3309_call(), 0)
call_4581 = relay.TupleGetItem(func_3311_call(), 0)
output = relay.Tuple([call_4580,])
output2 = relay.Tuple([call_4581,])
func_4582 = relay.Function([], output)
mod['func_4582'] = func_4582
mod = relay.transform.InferType()(mod)
output = func_4582()
func_4583 = relay.Function([], output)
mutated_mod['func_4583'] = func_4583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2315_call = mod.get_global_var('func_2315')
func_2317_call = mutated_mod.get_global_var('func_2317')
call_4626 = relay.TupleGetItem(func_2315_call(), 2)
call_4627 = relay.TupleGetItem(func_2317_call(), 2)
output = relay.Tuple([call_4626,])
output2 = relay.Tuple([call_4627,])
func_4640 = relay.Function([], output)
mod['func_4640'] = func_4640
mod = relay.transform.InferType()(mod)
output = func_4640()
func_4641 = relay.Function([], output)
mutated_mod['func_4641'] = func_4641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3880_call = mod.get_global_var('func_3880')
func_3881_call = mutated_mod.get_global_var('func_3881')
call_4661 = relay.TupleGetItem(func_3880_call(), 0)
call_4662 = relay.TupleGetItem(func_3881_call(), 0)
uop_4668 = relay.erf(call_4661.astype('float64')) # shape=(13, 16, 2)
uop_4670 = relay.erf(call_4662.astype('float64')) # shape=(13, 16, 2)
output = relay.Tuple([uop_4668,])
output2 = relay.Tuple([uop_4670,])
func_4678 = relay.Function([], output)
mod['func_4678'] = func_4678
mod = relay.transform.InferType()(mod)
output = func_4678()
func_4679 = relay.Function([], output)
mutated_mod['func_4679'] = func_4679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4168_call = mod.get_global_var('func_4168')
func_4169_call = mutated_mod.get_global_var('func_4169')
call_4686 = relay.TupleGetItem(func_4168_call(), 0)
call_4687 = relay.TupleGetItem(func_4169_call(), 0)
uop_4705 = relay.tan(call_4686.astype('float64')) # shape=(12, 4, 12)
uop_4707 = relay.tan(call_4687.astype('float64')) # shape=(12, 4, 12)
func_3309_call = mod.get_global_var('func_3309')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_4716 = relay.TupleGetItem(func_3309_call(), 0)
call_4717 = relay.TupleGetItem(func_3311_call(), 0)
func_3174_call = mod.get_global_var('func_3174')
func_3175_call = mutated_mod.get_global_var('func_3175')
call_4727 = func_3174_call()
call_4728 = func_3174_call()
output = relay.Tuple([uop_4705,call_4716,call_4727,])
output2 = relay.Tuple([uop_4707,call_4717,call_4728,])
func_4731 = relay.Function([], output)
mod['func_4731'] = func_4731
mod = relay.transform.InferType()(mod)
mutated_mod['func_4731'] = func_4731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4731_call = mutated_mod.get_global_var('func_4731')
call_4732 = func_4731_call()
output = call_4732
func_4733 = relay.Function([], output)
mutated_mod['func_4733'] = func_4733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3300_call = mod.get_global_var('func_3300')
func_3301_call = mutated_mod.get_global_var('func_3301')
call_4734 = func_3300_call()
call_4735 = func_3300_call()
var_4760 = relay.var("var_4760", dtype = "int8", shape = (12, 4, 12))#candidate|4760|(12, 4, 12)|var|int8
bop_4761 = relay.subtract(call_4734.astype('float32'), relay.reshape(var_4760.astype('float32'), relay.shape_of(call_4734))) # shape=(12, 4, 12)
bop_4764 = relay.subtract(call_4735.astype('float32'), relay.reshape(var_4760.astype('float32'), relay.shape_of(call_4735))) # shape=(12, 4, 12)
output = relay.Tuple([bop_4761,])
output2 = relay.Tuple([bop_4764,])
func_4766 = relay.Function([var_4760,], output)
mod['func_4766'] = func_4766
mod = relay.transform.InferType()(mod)
var_4767 = relay.var("var_4767", dtype = "int8", shape = (12, 4, 12))#candidate|4767|(12, 4, 12)|var|int8
output = func_4766(var_4767)
func_4768 = relay.Function([var_4767], output)
mutated_mod['func_4768'] = func_4768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2429_call = mod.get_global_var('func_2429')
func_2431_call = mutated_mod.get_global_var('func_2431')
call_4782 = relay.TupleGetItem(func_2429_call(), 0)
call_4783 = relay.TupleGetItem(func_2431_call(), 0)
var_4788 = relay.var("var_4788", dtype = "int32", shape = (12, 4, 12))#candidate|4788|(12, 4, 12)|var|int32
bop_4789 = relay.bitwise_and(call_4782.astype('uint32'), relay.reshape(var_4788.astype('uint32'), relay.shape_of(call_4782))) # shape=(12, 4, 12)
bop_4792 = relay.bitwise_and(call_4783.astype('uint32'), relay.reshape(var_4788.astype('uint32'), relay.shape_of(call_4783))) # shape=(12, 4, 12)
output = relay.Tuple([bop_4789,])
output2 = relay.Tuple([bop_4792,])
func_4793 = relay.Function([var_4788,], output)
mod['func_4793'] = func_4793
mod = relay.transform.InferType()(mod)
mutated_mod['func_4793'] = func_4793
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4794 = relay.var("var_4794", dtype = "int32", shape = (12, 4, 12))#candidate|4794|(12, 4, 12)|var|int32
func_4793_call = mutated_mod.get_global_var('func_4793')
call_4795 = func_4793_call(var_4794)
output = call_4795
func_4796 = relay.Function([var_4794], output)
mutated_mod['func_4796'] = func_4796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2343_call = mod.get_global_var('func_2343')
func_2344_call = mutated_mod.get_global_var('func_2344')
call_4834 = relay.TupleGetItem(func_2343_call(), 1)
call_4835 = relay.TupleGetItem(func_2344_call(), 1)
func_2806_call = mod.get_global_var('func_2806')
func_2809_call = mutated_mod.get_global_var('func_2809')
var_4840 = relay.var("var_4840", dtype = "float32", shape = (72,))#candidate|4840|(72,)|var|float32
call_4839 = relay.TupleGetItem(func_2806_call(relay.reshape(var_4840.astype('float32'), [12, 1, 6])), 1)
call_4841 = relay.TupleGetItem(func_2809_call(relay.reshape(var_4840.astype('float32'), [12, 1, 6])), 1)
output = relay.Tuple([call_4834,call_4839,var_4840,])
output2 = relay.Tuple([call_4835,call_4841,var_4840,])
func_4868 = relay.Function([var_4840,], output)
mod['func_4868'] = func_4868
mod = relay.transform.InferType()(mod)
mutated_mod['func_4868'] = func_4868
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4869 = relay.var("var_4869", dtype = "float32", shape = (72,))#candidate|4869|(72,)|var|float32
func_4868_call = mutated_mod.get_global_var('func_4868')
call_4870 = func_4868_call(var_4869)
output = call_4870
func_4871 = relay.Function([var_4869], output)
mutated_mod['func_4871'] = func_4871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3281_call = mod.get_global_var('func_3281')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_4887 = func_3281_call()
call_4888 = func_3281_call()
output = relay.Tuple([call_4887,])
output2 = relay.Tuple([call_4888,])
func_4897 = relay.Function([], output)
mod['func_4897'] = func_4897
mod = relay.transform.InferType()(mod)
mutated_mod['func_4897'] = func_4897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4897_call = mutated_mod.get_global_var('func_4897')
call_4898 = func_4897_call()
output = call_4898
func_4899 = relay.Function([], output)
mutated_mod['func_4899'] = func_4899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1567_call = mod.get_global_var('func_1567')
func_1569_call = mutated_mod.get_global_var('func_1569')
call_4921 = relay.TupleGetItem(func_1567_call(), 0)
call_4922 = relay.TupleGetItem(func_1569_call(), 0)
output = relay.Tuple([call_4921,])
output2 = relay.Tuple([call_4922,])
func_4923 = relay.Function([], output)
mod['func_4923'] = func_4923
mod = relay.transform.InferType()(mod)
mutated_mod['func_4923'] = func_4923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4923_call = mutated_mod.get_global_var('func_4923')
call_4924 = func_4923_call()
output = call_4924
func_4925 = relay.Function([], output)
mutated_mod['func_4925'] = func_4925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1629_call = mod.get_global_var('func_1629')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_4962 = relay.TupleGetItem(func_1629_call(), 1)
call_4963 = relay.TupleGetItem(func_1630_call(), 1)
output = call_4962
output2 = call_4963
func_4985 = relay.Function([], output)
mod['func_4985'] = func_4985
mod = relay.transform.InferType()(mod)
output = func_4985()
func_4986 = relay.Function([], output)
mutated_mod['func_4986'] = func_4986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3309_call = mod.get_global_var('func_3309')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_5001 = relay.TupleGetItem(func_3309_call(), 0)
call_5002 = relay.TupleGetItem(func_3311_call(), 0)
func_1567_call = mod.get_global_var('func_1567')
func_1569_call = mutated_mod.get_global_var('func_1569')
call_5005 = relay.TupleGetItem(func_1567_call(), 0)
call_5006 = relay.TupleGetItem(func_1569_call(), 0)
output = relay.Tuple([call_5001,call_5005,])
output2 = relay.Tuple([call_5002,call_5006,])
func_5008 = relay.Function([], output)
mod['func_5008'] = func_5008
mod = relay.transform.InferType()(mod)
output = func_5008()
func_5009 = relay.Function([], output)
mutated_mod['func_5009'] = func_5009
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5059 = relay.const([[[2.420964,3.854298,8.937555,1.745154,-1.774186,1.981738,0.153769],[-4.823196,-3.179912,1.598081,-9.504087,5.865875,6.264146,-9.774209],[7.793863,-1.767191,-6.588352,-8.945745,1.173737,-3.550156,-2.953244],[-4.731665,-4.744740,-9.313419,-9.151437,-6.069427,3.283539,0.500455],[1.260853,-8.687683,3.558214,2.728375,-3.384263,4.411390,-2.808719],[-8.131926,-9.954172,-5.428241,1.595678,7.490798,-2.156508,-3.859408]],[[2.609121,4.571035,-5.464038,6.248717,-4.026619,5.130248,-3.726819],[5.872311,-6.216965,-0.499783,-8.444693,7.761435,8.901843,-3.885759],[8.738635,-4.161536,-6.749222,7.231978,7.704890,-5.800705,-1.157631],[-9.769029,7.181951,7.173079,6.039447,-8.770697,-5.707211,8.245629],[-1.465075,7.286527,0.478955,-0.056789,5.065148,-7.713296,-0.105807],[2.012616,-3.355845,1.263785,8.438705,-8.908798,-9.403344,-9.139794]],[[-2.304513,2.613084,6.805361,-7.669858,-1.990152,-8.552399,0.174088],[-6.619358,-3.521201,-6.993426,5.004007,-2.813854,-5.526898,-9.595620],[3.561777,4.368289,-0.528914,-9.400756,5.334072,-4.806560,1.496288],[-8.500699,7.867367,-1.378337,-4.621523,5.236253,-4.504033,-4.326574],[-1.268005,-1.798945,1.296645,9.703741,-6.619379,-7.603089,8.383991],[4.893625,0.191994,1.170201,-0.232785,-9.809536,-9.828478,-9.423767]],[[7.142914,5.182675,2.092623,6.539582,0.885955,6.652841,-3.872905],[6.986081,-8.061038,-8.365854,-6.639619,5.092685,9.484219,7.164181],[0.411265,3.527147,-9.281715,-5.691918,-1.449107,8.678229,-4.975855],[7.625099,-4.114061,-7.463361,7.175383,-7.250970,-2.988475,-5.678130],[-5.317316,5.999956,1.851624,-3.576244,7.623507,-6.141995,5.508418],[6.289596,-9.424138,-4.441645,-2.875656,9.186330,-7.306410,0.201585]],[[1.425019,-9.148044,-7.963405,2.452464,-7.186069,7.513359,-6.045768],[5.963548,0.200648,-6.962616,2.372573,-1.299142,1.593346,9.038977],[-2.430943,3.098244,-3.538986,5.465942,3.305404,6.760803,-5.105258],[-5.030298,-2.200467,-2.955678,-6.401933,7.633752,-7.434340,7.136007],[2.865153,8.194123,-1.889548,-8.041513,-7.634108,8.904108,-4.434432],[-6.816192,1.228221,-8.944531,-1.915108,-3.955316,7.556426,2.071265]],[[8.200109,3.331760,4.924341,-1.003909,4.819810,8.735518,-3.963207],[-4.262628,0.830865,-1.449180,4.149491,-8.488080,0.394629,-2.199403],[-8.019079,-5.517971,3.783860,-1.064310,-5.197869,-8.856903,3.988957],[-0.210795,-2.892052,9.372600,9.233077,-3.644058,-4.218893,-0.739592],[9.325059,-7.128910,-1.605904,-4.531334,-4.318077,3.303078,4.359567],[8.444952,4.236494,1.913816,-3.016194,9.968097,-9.039719,-4.705351]],[[-1.306295,-9.704950,9.248141,8.756348,-5.944844,6.568124,-6.216945],[1.615285,-4.709939,7.557602,-8.754421,5.049480,0.875904,-1.560048],[3.180023,-5.117506,-0.578725,7.981487,0.396193,2.544435,-9.290021],[-3.251751,6.659857,9.322668,-2.397375,8.987444,9.807998,6.364657],[9.216002,-1.853180,-1.359985,-2.597255,6.326301,9.000912,-8.798161],[-7.904771,0.454706,-8.087086,4.438722,1.977385,-0.740733,-9.520227]],[[4.049033,-9.486201,-3.965557,6.513697,4.770293,2.322062,-9.612035],[7.475181,4.900254,2.763006,-7.849589,-9.121943,1.308545,-8.375748],[-3.191938,0.126392,-3.284064,0.278137,-0.937403,-1.602963,-3.557421],[9.934793,-1.503486,-5.758206,-5.034236,-7.242373,0.403935,-3.534454],[-4.381585,-5.277510,-8.479885,2.898413,5.911082,9.212578,6.396119],[3.775283,8.808602,-6.514415,2.286336,5.572480,4.724891,-9.121902]],[[-4.014968,5.891732,3.619963,-6.656376,-7.363074,0.178153,-0.625125],[1.880376,-7.708827,4.217672,9.543145,8.639737,-2.682261,7.679710],[-7.307197,-6.702358,-1.640464,-6.655311,7.989996,8.037900,-2.964532],[0.892738,2.707203,-7.111213,0.304806,8.478364,-8.528372,1.223606],[-9.563851,-0.152623,1.153664,7.022241,-4.083445,0.869111,-5.522778],[7.380050,6.924676,1.955058,-4.356979,-8.366604,-7.032639,-3.439351]],[[-5.967561,5.430307,-5.731343,-1.581528,2.966548,-2.166771,7.978705],[0.079824,-4.168352,-5.362131,-7.342584,3.567329,6.731627,-2.631154],[8.088835,-6.507860,1.375230,-0.815537,2.612287,4.335069,1.498336],[7.227775,3.471663,-4.971343,1.426506,-6.672219,0.965313,-6.047241],[4.852596,-2.309400,-2.960019,4.991814,-5.299916,6.037694,-6.352165],[-7.870498,-4.538456,-2.199557,0.851276,-1.902625,9.331947,-2.728371]],[[-6.614191,5.568202,1.562816,-2.396165,3.716393,1.575491,-3.840919],[1.031312,2.439680,-9.953677,3.182984,-5.936077,5.316442,-3.304196],[8.997251,9.098885,4.156867,9.093409,-6.044512,-4.513562,9.996435],[-4.328084,7.837292,-1.781189,2.898019,-6.651276,0.624047,9.113419],[2.282357,1.639424,-9.185882,-6.028886,-5.839925,9.927043,-9.344659],[-9.403244,8.917816,7.923242,-3.317333,-2.406068,-9.988071,9.076503]]], dtype = "float64")#candidate|5059|(11, 6, 7)|const|float64
uop_5060 = relay.exp(const_5059.astype('float64')) # shape=(11, 6, 7)
output = relay.Tuple([uop_5060,])
output2 = relay.Tuple([uop_5060,])
func_5079 = relay.Function([], output)
mod['func_5079'] = func_5079
mod = relay.transform.InferType()(mod)
output = func_5079()
func_5080 = relay.Function([], output)
mutated_mod['func_5080'] = func_5080
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5095 = relay.const([[[-5.299483,5.135997,-6.628590],[-2.162350,-1.940730,0.497516],[-0.028387,-7.091715,0.402097],[0.742120,-4.257307,-3.530309]],[[-1.307546,-9.737328,-2.768477],[-7.176677,0.108222,7.611629],[-0.130976,-1.649169,5.257365],[-9.792898,-7.610503,-2.484174]],[[-7.728538,4.126097,2.696172],[-3.756589,-3.006041,-1.724540],[6.074120,7.081229,-5.646302],[-8.923089,1.240458,8.887470]],[[-3.217545,-1.937950,-9.674889],[-6.187328,-2.443515,7.950739],[8.744123,-0.626611,-9.354579],[3.994226,8.993757,-6.870162]],[[5.512683,-8.338163,-1.304406],[5.486977,6.340632,4.956418],[-9.029960,-0.562479,7.175318],[3.918853,-3.063900,-6.395614]],[[-7.557495,-8.006310,1.330074],[0.928197,2.949406,2.288894],[-7.411801,-5.065676,-9.877855],[0.317467,1.583918,8.713191]],[[-3.725328,-4.876277,-3.978663],[6.048935,-4.323380,-0.213513],[7.196321,-0.904035,-8.949885],[-4.933467,0.550307,-5.984854]],[[-9.495857,-5.747534,-4.644009],[-5.644098,-0.517218,1.730831],[3.383198,7.398113,-9.015290],[0.297063,-9.260214,-8.673243]],[[4.290816,1.829105,4.092835],[-0.296611,4.342413,0.434801],[0.040450,-9.956482,-9.779260],[-9.869783,4.637901,1.499803]],[[-0.186217,8.294161,5.644750],[0.434025,-2.708608,2.040217],[-6.268559,8.629962,-1.800550],[4.020188,-0.192935,-2.067357]],[[3.335765,-2.499524,-9.067342],[-7.738145,7.053438,6.669238],[6.452442,1.822246,1.472225],[1.017436,7.313975,-0.146188]]], dtype = "float32")#candidate|5095|(11, 4, 3)|const|float32
uop_5096 = relay.cos(const_5095.astype('float32')) # shape=(11, 4, 3)
bop_5108 = relay.greater_equal(uop_5096.astype('bool'), relay.reshape(const_5095.astype('bool'), relay.shape_of(uop_5096))) # shape=(11, 4, 3)
output = relay.Tuple([bop_5108,])
output2 = relay.Tuple([bop_5108,])
func_5112 = relay.Function([], output)
mod['func_5112'] = func_5112
mod = relay.transform.InferType()(mod)
output = func_5112()
func_5113 = relay.Function([], output)
mutated_mod['func_5113'] = func_5113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3358_call = mod.get_global_var('func_3358')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_5117 = relay.TupleGetItem(func_3358_call(), 0)
call_5118 = relay.TupleGetItem(func_3359_call(), 0)
func_4766_call = mod.get_global_var('func_4766')
func_4768_call = mutated_mod.get_global_var('func_4768')
const_5127 = relay.const([-1,8,6,-4,4,8,-3,8,-2,-8,-5,-4,-8,6,-2,-7,-5,8,1,-8,8,-10,-6,-1,-3,-3,9,9,-4,-1,7,9,5,5,-1,-2,-9,-10,-3,5,-1,4,-6,5,-9,8,8,-10,-7,10,-8,-9,-9,3,-3,9,7,-3,-8,6,-7,-3,-4,-8,6,10,-4,-2,-9,2,3,5,-7,-6,-7,10,7,-8,4,1,-6,5,-10,-1,-10,-1,6,-5,-4,-8,3,6,-1,10,-10,5,-2,8,-7,-2,-3,2,-1,-4,9,-8,10,-2,-8,-6,3,-6,4,-8,-4,8,3,9,-8,-1,-7,-9,10,-1,4,-9,-1,-4,9,-7,-10,2,-4,9,6,-9,6,-3,9,-7,1,10,8,-8,3,2,10,-9,7,-8,-6,9,7,8,-5,-7,-8,-10,-10,-7,-6,10,-5,2,-5,-6,-9,4,-6,-10,-9,9,7,-6,-10,1,4,-3,10,-2,8,-7,2,3,-4,-8,3,10,9,-6,-1,-6,-10,-7,-2,5,-8,7,6,7,-4,-4,-4,-6,2,-3,-10,-1,6,1,8,8,-10,3,6,7,7,-8,6,6,-5,-5,6,5,6,9,-2,10,-3,-8,-5,10,6,4,9,4,-9,-9,8,6,-8,10,2,-1,-2,-6,6,2,-4,-6,6,-9,10,9,-3,-2,8,2,9,-6,4,2,8,10,10,-6,-5,-1,-4,2,3,-8,-5,2,-4,7,-2,6,2,-3,3,7,4,-6,8,4,2,-4,-2,1,7,-6,6,9,1,8,-9,5,-5,-2,6,8,-7,5,1,9,-3,-6,-8,-4,-7,2,-9,1,-5,1,-8,1,1,7,1,7,3,-2,-8,-8,1,3,7,6,-5,-7,-5,-8,-4,8,3,1,1,-6,10,-6,-6,-10,10,-8,4,6,2,8,1,3,-3,1,-6,3,-3,-6,5,-3,-6,10,4,3,-1,4,-7,9,1,-2,-9,4,5,10,-10,4,3,9,-9,-5,-1,4,8,-8,3,8,8,-3,-4,2,5,-1,10,-8,-10,3,4,3,-3,10,4,8,-2,4,4,-1,2,9,-1,4,2,7,5,5,-3,-3,-5,-9,-4,4,-9,-10,6,-4,8,2,-5,3,1,9,-5,10,-5,-8,2,-6,-6,1,-8,2,-4,4,-5,3,-7,9,5,3,-8,9,-2,10,-3,-1,-7,7,-9,-3,7,10,10,-5,1,-5,10,1,-10,1,2,-4,-7,10,-1,-10,-3,-4,2,-8,-9,5,8,3,-7,-3,8,-7,10,1,-4,-2,1,-8,5,-9,-10,4,-10,-7,-1,5,-10,4,-2,1,-4,-1,-7,2,-6,6,5,5,9,4,4,1,4,4,-10,9,8,-1,-2,8,-3,-5,6,-8,4,7,1,-2,3,10,10,7,3,4,-2,3,-7,-6,10,10,-5,-10,6,3,7,-5,7,5,-2,5,-1,9,-9,-1,-8,1,-9,-2,-4,-6,-2,-9,3,-1,3,6,6,-2,-10,-4,-3,6], dtype = "int8")#candidate|5127|(576,)|const|int8
call_5126 = relay.TupleGetItem(func_4766_call(relay.reshape(const_5127.astype('int8'), [12, 4, 12])), 0)
call_5128 = relay.TupleGetItem(func_4768_call(relay.reshape(const_5127.astype('int8'), [12, 4, 12])), 0)
output = relay.Tuple([call_5117,call_5126,const_5127,])
output2 = relay.Tuple([call_5118,call_5128,const_5127,])
func_5156 = relay.Function([], output)
mod['func_5156'] = func_5156
mod = relay.transform.InferType()(mod)
mutated_mod['func_5156'] = func_5156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5156_call = mutated_mod.get_global_var('func_5156')
call_5157 = func_5156_call()
output = call_5157
func_5158 = relay.Function([], output)
mutated_mod['func_5158'] = func_5158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1839_call = mod.get_global_var('func_1839')
func_1840_call = mutated_mod.get_global_var('func_1840')
call_5159 = relay.TupleGetItem(func_1839_call(), 0)
call_5160 = relay.TupleGetItem(func_1840_call(), 0)
uop_5167 = relay.log2(call_5159.astype('float32')) # shape=(12, 4, 12)
uop_5169 = relay.log2(call_5160.astype('float32')) # shape=(12, 4, 12)
func_2861_call = mod.get_global_var('func_2861')
func_2863_call = mutated_mod.get_global_var('func_2863')
call_5180 = relay.TupleGetItem(func_2861_call(), 1)
call_5181 = relay.TupleGetItem(func_2863_call(), 1)
func_1726_call = mod.get_global_var('func_1726')
func_1729_call = mutated_mod.get_global_var('func_1729')
call_5184 = relay.TupleGetItem(func_1726_call(relay.reshape(uop_5167.astype('float64'), [12, 4, 12])), 2)
call_5185 = relay.TupleGetItem(func_1729_call(relay.reshape(uop_5167.astype('float64'), [12, 4, 12])), 2)
output = relay.Tuple([uop_5167,call_5180,call_5184,])
output2 = relay.Tuple([uop_5169,call_5181,call_5185,])
func_5197 = relay.Function([], output)
mod['func_5197'] = func_5197
mod = relay.transform.InferType()(mod)
mutated_mod['func_5197'] = func_5197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5197_call = mutated_mod.get_global_var('func_5197')
call_5198 = func_5197_call()
output = call_5198
func_5199 = relay.Function([], output)
mutated_mod['func_5199'] = func_5199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4640_call = mod.get_global_var('func_4640')
func_4641_call = mutated_mod.get_global_var('func_4641')
call_5218 = relay.TupleGetItem(func_4640_call(), 0)
call_5219 = relay.TupleGetItem(func_4641_call(), 0)
func_3337_call = mod.get_global_var('func_3337')
func_3338_call = mutated_mod.get_global_var('func_3338')
call_5220 = func_3337_call()
call_5221 = func_3337_call()
bop_5255 = relay.logical_and(call_5218.astype('bool'), relay.reshape(call_5220.astype('bool'), relay.shape_of(call_5218))) # shape=(13, 16, 2)
bop_5258 = relay.logical_and(call_5219.astype('bool'), relay.reshape(call_5221.astype('bool'), relay.shape_of(call_5219))) # shape=(13, 16, 2)
output = bop_5255
output2 = bop_5258
func_5281 = relay.Function([], output)
mod['func_5281'] = func_5281
mod = relay.transform.InferType()(mod)
output = func_5281()
func_5282 = relay.Function([], output)
mutated_mod['func_5282'] = func_5282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3759_call = mod.get_global_var('func_3759')
func_3761_call = mutated_mod.get_global_var('func_3761')
call_5332 = func_3759_call()
call_5333 = func_3759_call()
func_3880_call = mod.get_global_var('func_3880')
func_3881_call = mutated_mod.get_global_var('func_3881')
call_5338 = relay.TupleGetItem(func_3880_call(), 0)
call_5339 = relay.TupleGetItem(func_3881_call(), 0)
output = relay.Tuple([call_5332,call_5338,])
output2 = relay.Tuple([call_5333,call_5339,])
func_5350 = relay.Function([], output)
mod['func_5350'] = func_5350
mod = relay.transform.InferType()(mod)
output = func_5350()
func_5351 = relay.Function([], output)
mutated_mod['func_5351'] = func_5351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1629_call = mod.get_global_var('func_1629')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_5396 = relay.TupleGetItem(func_1629_call(), 0)
call_5397 = relay.TupleGetItem(func_1630_call(), 0)
var_5414 = relay.var("var_5414", dtype = "int32", shape = (12, 4, 12))#candidate|5414|(12, 4, 12)|var|int32
bop_5415 = relay.logical_or(call_5396.astype('bool'), relay.reshape(var_5414.astype('bool'), relay.shape_of(call_5396))) # shape=(12, 4, 12)
bop_5418 = relay.logical_or(call_5397.astype('bool'), relay.reshape(var_5414.astype('bool'), relay.shape_of(call_5397))) # shape=(12, 4, 12)
func_3281_call = mod.get_global_var('func_3281')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_5422 = func_3281_call()
call_5423 = func_3281_call()
func_2861_call = mod.get_global_var('func_2861')
func_2863_call = mutated_mod.get_global_var('func_2863')
call_5426 = relay.TupleGetItem(func_2861_call(), 0)
call_5427 = relay.TupleGetItem(func_2863_call(), 0)
uop_5431 = relay.asin(call_5396.astype('float64')) # shape=(12, 4, 12)
uop_5433 = relay.asin(call_5397.astype('float64')) # shape=(12, 4, 12)
func_3309_call = mod.get_global_var('func_3309')
func_3311_call = mutated_mod.get_global_var('func_3311')
call_5436 = relay.TupleGetItem(func_3309_call(), 0)
call_5437 = relay.TupleGetItem(func_3311_call(), 0)
output = relay.Tuple([bop_5415,call_5422,call_5426,uop_5431,call_5436,])
output2 = relay.Tuple([bop_5418,call_5423,call_5427,uop_5433,call_5437,])
func_5453 = relay.Function([var_5414,], output)
mod['func_5453'] = func_5453
mod = relay.transform.InferType()(mod)
mutated_mod['func_5453'] = func_5453
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5454 = relay.var("var_5454", dtype = "int32", shape = (12, 4, 12))#candidate|5454|(12, 4, 12)|var|int32
func_5453_call = mutated_mod.get_global_var('func_5453')
call_5455 = func_5453_call(var_5454)
output = call_5455
func_5456 = relay.Function([var_5454], output)
mutated_mod['func_5456'] = func_5456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5112_call = mod.get_global_var('func_5112')
func_5113_call = mutated_mod.get_global_var('func_5113')
call_5469 = relay.TupleGetItem(func_5112_call(), 0)
call_5470 = relay.TupleGetItem(func_5113_call(), 0)
output = call_5469
output2 = call_5470
func_5473 = relay.Function([], output)
mod['func_5473'] = func_5473
mod = relay.transform.InferType()(mod)
output = func_5473()
func_5474 = relay.Function([], output)
mutated_mod['func_5474'] = func_5474
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5493 = relay.const([[[9.017281,1.159183,-0.047559,9.419191,-6.240605,-2.892748,-5.321531,1.522281,-8.424610,3.531200,1.625463,-9.447438,-9.760711,3.093482],[-0.807630,2.188720,-9.446518,3.235421,5.015618,2.284327,-6.595523,0.604216,-3.716601,-5.987502,2.753208,3.552139,3.796133,-0.733295],[-3.595509,9.013612,3.819430,-6.839584,1.680869,-4.820876,2.078858,-6.737083,5.469547,-4.675791,5.019616,-1.801665,1.069389,1.558815],[8.801449,-5.664418,-8.679205,-1.949038,2.161435,1.314213,4.747988,1.296346,-3.041993,-0.355798,8.118762,6.440821,7.779540,3.977422],[6.271225,-7.830249,9.764673,8.781765,-1.016784,2.968304,-9.799905,-0.242649,-5.302598,-2.102084,-5.460213,9.814846,-8.523074,-7.036984],[-0.436840,-9.678840,-2.371932,2.237739,1.528983,4.025782,-9.764743,8.931619,-8.121311,-1.286791,-7.643368,2.270698,8.215853,-0.836376],[5.092923,-4.948944,8.066453,-2.474553,2.845601,7.836795,-9.676741,-5.743217,0.659834,9.342327,5.555054,-3.497997,1.598257,-5.898456],[-5.794331,-8.826017,3.467887,-4.115858,2.141369,0.776584,-1.938339,0.551704,8.162648,2.343684,-0.992521,-5.233497,5.604862,5.836701],[-4.570608,8.892447,-0.196421,4.873849,-5.656306,-6.947425,-7.871787,-1.543579,-2.256025,5.436660,6.197587,-0.887122,2.681557,-4.956944],[-2.512704,7.263576,1.621338,3.514992,-3.394476,-3.321641,-9.467690,-4.488040,-8.864916,1.456947,6.765722,-8.617332,-8.254615,-5.189162]],[[-7.290216,-6.352929,-2.072727,3.795991,-8.150507,3.960147,2.743765,-2.404364,4.778268,-4.660077,5.976998,-6.313247,-5.198984,-7.365987],[-2.816463,4.124017,9.272624,9.243563,8.529570,2.301884,2.917880,3.627485,-6.092295,8.086856,-1.157994,8.039901,6.775915,-9.985488],[6.615002,-1.047568,5.381746,-8.491936,9.298469,-7.042049,-6.007345,3.941472,7.266140,9.194708,-3.989025,6.350133,-3.575318,-7.178213],[-3.658781,-1.133176,8.887056,1.009844,-5.173758,5.568617,4.811638,-6.898548,-2.747512,-7.439306,-4.804563,4.182473,-9.088262,-8.193106],[-6.989981,-5.801448,0.217220,-4.292943,-8.596462,-1.187874,2.132980,-6.833211,7.947137,-3.878594,-1.819285,2.599720,-6.556501,1.732479],[7.007625,-4.995168,8.184293,9.726984,5.096960,3.154682,9.788372,-6.938199,-3.590715,-9.813234,8.198515,7.781045,4.133971,0.115223],[8.284889,-1.394272,-8.314535,-0.979192,3.742897,-5.054905,8.030025,-0.909556,7.783496,4.610061,-5.216838,-9.716314,8.988478,2.811852],[-4.376384,-0.023734,-7.093808,2.942035,1.945796,-9.815272,6.596954,5.822064,-4.610334,9.907907,-3.212059,5.150953,-1.021772,2.105772],[8.002499,-5.560671,9.364639,-3.079747,7.105376,-0.740431,3.201460,-8.395762,7.357250,-6.624130,3.396292,-4.488100,-6.058072,-2.287182],[9.131297,-7.596447,6.069574,-5.315235,-7.495405,-7.680557,-1.862051,-1.884708,0.377695,-6.818346,1.286802,-5.824099,5.993525,-5.523253]],[[2.369529,-8.951070,-1.063080,5.790338,-2.551426,-8.727304,-2.558549,-3.704474,5.827057,4.661993,2.341921,-7.999878,-6.321023,-6.216884],[1.324909,0.670865,6.651579,0.908002,0.156724,2.825149,-4.265600,-7.647527,-1.285933,-2.823740,3.308647,-9.897821,1.745747,3.303126],[-6.001446,4.313394,2.930593,-2.464266,1.880826,-5.816539,-2.230880,-1.862146,-8.794451,-3.786200,3.605071,-6.601137,-7.870463,-1.072972],[8.334079,7.607648,6.954887,6.202863,3.209391,4.444979,1.582231,4.278597,-1.668300,9.812251,-3.625817,2.009540,-8.241096,7.818064],[4.469030,-4.792073,8.652782,-0.132621,2.206843,2.878271,5.556052,9.769800,4.000121,-0.345270,-8.655165,-6.323226,5.151800,-9.728802],[2.460190,-5.429124,0.998909,-4.351256,-6.853414,3.413694,-6.412514,6.534163,-8.893724,5.215502,1.391799,4.264612,4.831981,8.034376],[9.309718,-7.439197,3.402932,7.808895,8.232549,8.711108,-1.990294,5.946658,-3.434368,-3.309749,3.474534,-4.107789,-6.358392,-4.739990],[1.995001,-7.703652,-9.191930,3.967825,-7.310933,-6.426548,-9.192636,4.633740,6.357388,-5.574364,3.199543,-1.859497,-2.855351,-9.758407],[-1.875781,-0.851235,-2.880918,-4.551797,6.185319,-3.728277,0.951741,2.740940,-9.651996,-2.982931,-6.396555,5.185340,-4.501167,-9.512825],[-2.901911,4.393432,-6.754510,-1.866643,-1.412269,4.253167,5.420984,9.552029,-4.447768,-9.163513,-3.690733,-2.875653,7.071051,-8.456320]],[[8.408093,-8.149820,1.129637,-3.648403,8.388621,-8.335888,-2.388892,1.241961,0.964945,-4.919371,-9.991725,8.508424,0.614218,2.060930],[7.308070,-8.534368,-8.236662,8.160573,-1.279592,7.304574,-6.138327,-9.132192,6.176952,-3.622834,-4.059367,6.224071,-6.744234,7.983676],[-9.562334,-2.388334,5.375148,6.595811,-3.191641,0.781463,-1.483249,-8.907135,1.838636,6.023581,9.755251,2.701963,-7.009407,-1.670262],[4.765242,2.415924,-7.118157,-6.119259,-9.546142,6.682807,-8.273893,-2.723887,-6.971162,0.682172,4.200421,-3.114212,0.099291,-3.683840],[-1.880751,-4.224833,1.307277,-4.291793,5.453778,8.554825,-8.248676,-0.094749,2.649627,8.755707,-8.799941,3.228262,-2.554520,-0.425322],[-3.589030,8.143532,3.021846,-4.495685,7.265228,-0.323493,7.039851,0.728282,-4.475137,-8.174822,-2.373686,9.625064,0.523623,-6.280909],[6.720339,3.226367,6.565487,-5.019725,-2.961870,4.919431,2.643123,-7.356318,9.684511,-1.721008,-0.237086,-0.914965,3.369205,1.900178],[-4.863250,-4.860681,-8.542595,4.282609,-2.554245,-7.471264,7.447582,7.027381,4.154837,7.276752,1.286201,-6.132656,9.388649,-2.398583],[2.506281,3.145602,5.121187,2.837214,7.417850,9.695772,-1.712741,-2.719764,-3.691655,2.325360,6.775742,-5.344492,-7.641325,-2.987289],[1.014987,-4.081536,-0.940188,7.155044,0.709921,9.197110,3.170663,0.531168,-7.571629,7.242100,1.302560,-9.692722,-2.158661,8.847718]],[[-0.055982,-2.022526,-8.707867,-5.409755,-3.142182,-6.220013,-8.742191,-9.393825,-5.253863,1.431187,1.584942,7.585419,2.231384,4.962366],[5.232556,3.709304,3.527292,2.482431,-5.646854,-0.618223,4.976537,6.858139,8.933043,-5.888192,8.568095,-6.670578,-5.945090,2.635283],[-8.490978,5.799461,3.273703,8.231665,-3.308484,-6.010881,-7.674245,3.527923,6.440053,6.212949,-4.110965,-6.271401,8.755079,-4.221385],[0.764417,-7.500936,9.320596,6.932012,-9.605399,4.616436,6.020881,0.594832,-8.611665,-3.249556,2.953110,-5.069890,9.251924,9.522868],[-5.047667,-8.034634,0.163744,9.216851,5.271011,0.512170,0.872487,-5.963159,-4.947465,-2.091370,3.362786,-2.542041,-0.684961,-3.808387],[-9.313683,-6.309224,-9.778061,-8.816460,7.479258,-3.971667,-2.785136,-6.897660,-3.289261,-2.847725,0.483922,5.788769,5.375703,2.912334],[0.724127,1.864107,-4.789038,-4.144803,8.403369,-3.598260,-6.130775,5.405444,5.151044,-7.181993,-7.313321,-5.548718,1.388475,-0.257441],[-4.349322,-6.141652,-0.712153,0.260493,3.937394,4.054739,-0.854056,-7.501642,-9.813921,3.954548,6.511755,8.779304,-7.807222,4.011629],[7.532196,2.870990,-4.553800,5.300521,5.715323,3.113757,-0.122677,2.606555,-4.959721,8.235043,1.203270,-6.412028,-3.049798,6.311310],[-6.898253,-7.908695,-0.579663,4.146572,5.783806,7.658360,7.435360,-9.117404,9.852363,-3.468036,1.562684,-8.148322,-4.471432,5.336761]],[[-8.176035,5.218254,-9.411740,0.040421,9.938663,7.774418,1.305603,-1.875613,7.740904,8.828802,-2.576175,-4.990926,6.103156,9.348807],[-6.047453,3.505049,7.851940,3.075559,-9.858462,-2.728116,4.122007,8.333719,9.495616,8.291914,-0.452582,2.970264,-7.636396,-4.110851],[0.992648,4.665661,-8.357876,-9.942655,5.318415,0.478806,-4.018301,-0.474632,4.175744,1.815946,6.909930,6.755582,0.421700,-9.501584],[6.105721,5.841172,-5.669197,-0.133443,6.947420,-7.330319,-0.216865,5.557039,-7.896911,-0.581683,0.489161,-4.841482,-9.211016,-4.497343],[-2.861092,7.372354,5.252685,-0.396454,8.206054,-4.170673,-8.193654,7.661509,7.781452,2.631408,-4.155573,3.369449,2.397280,-7.917767],[-2.899966,7.187343,-7.228819,-3.464888,-4.887198,6.992450,5.201320,-9.330803,7.359698,-7.326905,-1.899595,-0.820675,8.226229,-5.287727],[8.869789,-9.708379,8.080147,-1.466863,-0.407688,4.158488,-8.337312,-4.988151,1.788328,8.899094,-3.814225,1.354331,5.366843,-2.455038],[3.779152,-0.931439,7.292152,-4.496497,-9.398924,-4.258278,8.932171,0.742053,6.973757,2.461336,5.932136,8.522528,-7.300010,-5.862949],[-4.467100,-3.723505,-2.739770,-3.840542,8.577457,-9.050935,7.771070,-3.521190,5.265442,-8.759593,3.349656,7.889330,-6.444375,3.080925],[4.140412,7.294907,-5.517070,2.858176,-3.142870,-3.395594,3.112373,9.382860,-1.621998,6.313417,-3.699537,-0.780716,-4.362237,-7.645162]],[[-6.551220,6.495876,9.802075,3.966470,5.727589,-6.668986,-3.648407,0.768402,-0.163406,-9.565960,1.445402,-4.071535,-3.843932,8.543684],[-9.544416,2.102187,0.040823,-5.356727,3.467961,-5.385506,-8.201745,-9.122391,-8.630381,-2.114440,3.995655,4.555465,6.279517,-6.235961],[-2.620092,-7.851668,0.638008,8.352657,-0.716837,2.955645,5.145106,-6.825284,0.413920,-4.487248,5.041048,-6.549123,1.706590,9.274918],[9.429305,-5.405347,0.469057,-7.887224,3.195344,-3.847104,0.832850,9.832564,5.877028,-6.314460,8.858994,-4.619271,-6.774477,8.308999],[-1.959387,-0.583913,-0.894437,8.011825,4.534698,-7.615570,0.678201,-9.974191,-1.831176,0.780444,-0.424228,-6.419740,-6.045661,-5.591782],[0.399133,2.804260,-4.366110,1.886394,-6.009851,-0.388656,-7.897800,-8.726566,3.699982,-5.880479,7.286644,-6.981541,-1.064589,8.404444],[0.681026,6.009005,7.267695,8.664024,-9.643017,-0.491235,0.768100,-5.597382,1.721474,-5.770237,6.033906,-8.384537,-5.465908,-7.188664],[-4.811565,-9.602363,4.967428,-0.852279,-4.512375,-1.072143,7.816161,8.936787,-6.091651,-3.521354,5.187885,-6.320897,-4.095766,7.969818],[3.894999,4.687540,1.201195,-2.261789,0.298445,3.266885,-5.846126,-0.097937,-1.069779,-4.965536,2.501098,-6.584012,8.415343,7.932564],[5.703079,6.335008,9.226046,-7.113930,-4.331729,7.127986,-1.842175,0.204705,4.532942,-1.838384,0.836098,-2.153639,6.282973,8.533213]],[[3.936011,-5.866575,5.952000,-9.492554,-8.711426,1.151779,8.032292,-5.044956,8.894947,-2.009505,0.718073,-2.114579,1.688842,2.791038],[8.334782,-8.216708,-7.033283,-6.626553,-6.959446,-0.195416,6.886238,0.305920,-4.275718,-8.217722,0.860740,-2.309789,7.397445,0.888719],[1.683730,-9.007130,-7.640700,-9.171579,6.835827,-6.228899,7.684956,5.318527,7.488369,3.639395,-4.571119,1.512544,-8.824544,8.238617],[9.878070,-6.208689,3.523848,3.126312,4.163816,-1.058833,-0.204477,-4.160660,4.859979,4.706160,-5.231303,9.751192,-0.999101,-5.622351],[-5.312364,4.278958,2.936555,7.909216,-5.786020,-8.621996,-4.138350,-8.481754,8.819704,-1.106666,-0.545847,0.925168,-8.560086,-5.020795],[-9.288085,1.139779,-6.047785,-4.220158,-5.972519,-2.643265,-4.913207,0.392908,-5.586061,-0.220189,-5.719962,-0.050760,-9.205004,-2.855420],[-9.665811,0.972378,1.415192,-9.457004,8.161708,3.491842,-5.330180,-1.247704,-4.203780,9.578898,-0.218724,8.341130,-0.633383,4.985787],[8.355529,7.390343,-0.434176,-7.018985,1.338294,2.523868,2.631588,-2.631953,7.697341,4.224346,-6.084507,-0.075639,-9.872896,-5.722610],[6.780062,4.005905,1.170423,5.394682,8.110795,3.122013,-1.671803,-4.591338,-1.989432,4.634635,4.060025,2.278162,9.646723,-4.967747],[5.279925,-8.993176,7.150799,-7.019452,-0.704666,-1.744405,3.700079,-2.988694,0.196859,-9.379928,1.874704,2.533053,-7.580450,1.001378]],[[-4.083185,7.448298,-0.923073,-7.287243,2.378642,-3.030427,-2.078771,2.155066,-8.947905,1.930047,-2.251836,6.480054,9.688224,0.910402],[-4.012352,2.592922,-6.394631,-0.094453,-9.040852,-5.991579,6.729751,4.098706,-9.459315,-1.498587,-6.954486,-7.672265,1.429240,9.614367],[-8.364324,-0.893778,3.076729,6.969876,-6.655316,-7.872675,-5.191988,-0.220683,8.119092,-7.657935,-3.095790,-2.897894,-6.555887,-8.961207],[4.855306,6.553398,-8.042891,-1.088690,5.669299,3.873613,6.423153,2.098403,0.110489,-0.902311,8.439202,-0.586394,9.486857,8.720315],[8.260051,6.912097,6.264294,-0.184795,-3.817890,9.417280,-3.228034,8.750565,-6.358052,8.349682,-8.462423,-0.341426,-9.573430,1.344237],[2.291469,-9.207779,-2.755167,4.431122,-1.136159,6.899209,-3.343140,-1.984137,-4.982709,8.411653,-3.565081,-7.324201,-9.027817,7.404453],[9.454378,-5.411377,1.990109,3.800258,-7.307411,5.029724,-2.635786,1.058251,8.485740,7.393442,2.408636,-5.377550,5.607338,-8.830757],[8.110682,4.772860,-1.069959,0.037599,-9.393888,-2.050622,-5.078200,3.034729,-3.884780,7.695636,-4.593322,7.014713,2.510292,-9.857629],[-7.697461,-6.863334,-0.762717,-2.806647,0.613094,-6.018485,-2.248309,-9.231342,-5.394253,2.117037,-4.254850,-3.066491,5.965480,-3.308246],[9.992817,-8.934792,2.751745,1.553658,-3.903127,2.582874,1.935672,2.345754,-3.812094,-5.215522,5.897155,1.683550,3.163790,-9.486250]],[[-3.302301,1.931986,6.134506,4.496700,3.790221,-6.500419,0.971556,1.228267,7.416829,-0.926266,5.775652,-9.540858,3.243281,-9.588043],[1.520939,4.693410,-3.467966,7.986205,-7.530922,-6.713102,0.134980,1.088851,-4.527863,-1.118593,6.937926,9.290983,8.907303,7.744182],[-6.164790,1.958767,4.186842,9.402508,-3.374568,6.058300,7.082816,-4.169204,1.920437,6.820712,-4.064075,1.118669,5.951662,-3.619518],[5.807193,8.248866,-2.370902,8.007721,1.749181,8.881077,-5.249707,7.965979,-8.268550,-7.077990,4.849596,-4.018818,5.557964,-8.955567],[-5.707579,-7.162599,-1.967724,6.113001,-2.810116,-5.811698,0.070810,0.682032,3.825068,-6.310303,-7.508044,4.341666,-2.823505,-9.649665],[8.886519,-8.867462,3.794952,3.300648,-5.313631,-6.233424,-5.887304,8.173246,-8.159169,8.109961,6.734601,-0.638533,-0.799073,8.002207],[3.657043,0.250950,-5.252722,-4.663010,-2.652245,-0.616413,3.629752,3.765358,4.890818,0.093394,-3.711286,4.077488,-1.449871,8.385981],[6.462202,-6.217273,-3.365710,-4.505269,1.469969,9.206180,-1.223308,3.248019,-5.502185,6.898112,2.196329,-5.500910,3.593232,7.034026],[3.402991,4.709781,0.877124,6.901938,5.049633,1.857408,-3.148381,-4.183182,-3.266904,-6.392314,-5.375304,-8.148536,6.979846,6.804350],[6.553622,-8.572319,-6.323793,9.460523,3.587088,8.844271,-3.959017,-0.409261,4.533383,-9.763163,-9.134054,9.152056,-9.074760,-3.491915]],[[-8.651680,4.844379,-0.144687,-4.979442,6.775963,-8.570616,-5.587540,6.821886,-7.110724,3.169411,-5.924823,9.460627,0.471860,8.088666],[7.702707,8.667386,-8.315278,4.051699,-9.979388,6.416960,5.846367,3.123345,9.822964,2.142947,-3.730387,-4.908304,-4.005487,5.574261],[-0.022350,8.808263,-4.425851,8.361127,8.592246,3.027052,-2.593022,3.378394,-3.238064,1.119680,3.038785,-0.443768,2.763077,-2.328058],[-2.912496,4.523519,4.796716,-9.524306,6.380673,-6.983597,-1.792506,2.083712,-4.505771,8.151888,6.530690,-7.087334,6.444078,-6.874270],[5.524634,-1.772491,-0.818794,-7.040652,-9.448497,4.227708,-0.735077,2.018072,9.248768,8.966985,5.617102,-9.002987,8.829688,-2.193574],[6.668496,-6.976742,0.658415,0.754319,-6.356593,2.969310,-5.199813,7.685423,-9.505968,-0.643721,8.220921,2.077750,-1.236153,3.919967],[3.523621,-6.403196,-5.308371,2.834133,1.147038,8.052001,6.300891,-4.923064,1.506085,-1.160240,-4.358861,8.810986,0.418770,6.046238],[-4.377096,3.627200,-8.904284,2.165615,-8.387376,-6.697241,1.887472,-3.564180,7.432338,-4.972768,-5.349623,-6.106223,4.460058,-1.197531],[8.148427,-9.241158,-6.432268,0.879228,1.673870,9.549654,9.594701,5.703841,4.377366,2.231287,2.679714,6.982640,6.546683,-7.122478],[5.698193,3.120177,-0.623488,-7.800638,4.962609,6.847933,-4.209766,5.528180,4.460759,-3.447241,-5.019647,0.355517,-9.565126,5.314531]],[[-1.389689,-3.450468,-0.956064,-1.835032,-2.830440,9.378153,-5.334749,-9.240905,2.942699,5.854822,7.272791,1.470919,7.150081,8.869949],[4.312429,6.784725,-5.918800,5.738506,7.013817,-0.635681,-9.342496,-8.504328,-2.538496,-6.254689,-1.315731,-9.448329,1.114974,1.676636],[-1.699895,-4.204500,8.911630,-3.520748,-7.806561,-1.759490,0.231456,9.036105,-8.768697,6.895914,-4.655247,-7.644624,3.778810,-3.211040],[-1.366359,7.535416,-3.804674,-5.613304,-3.959577,-0.731763,-4.961633,-2.480192,0.088073,6.159314,8.374946,-2.448887,-8.450754,-8.065334],[-9.933058,7.515165,-1.332113,0.953875,-5.899360,-7.930464,-7.468823,0.679478,9.450336,1.841396,5.972887,-6.128622,1.620819,8.962844],[3.664548,1.919694,-6.606019,-3.585803,3.002237,-8.511733,3.813408,-7.174781,2.075465,-2.077383,-7.635454,9.895791,5.548330,-0.055196],[-9.710750,-3.954008,-1.527701,5.961488,-6.698154,0.706932,-3.684719,-3.935834,6.477997,6.368411,-1.150393,0.331876,9.093786,1.544774],[7.875837,6.783254,2.952263,6.346066,9.507657,-0.366287,6.347987,-5.836645,2.436787,6.771447,9.609768,1.937440,1.322625,-5.592735],[8.959394,7.531739,-2.375634,0.839732,-6.607155,0.170986,8.231408,-1.729864,5.099740,-4.525849,1.838573,3.558601,4.604787,-0.475515],[-9.411784,8.769865,-4.354661,-8.267495,-7.087930,-7.931251,-6.491529,-6.217994,-1.883105,-7.475998,7.315875,-6.254740,4.090276,-6.628423]],[[2.175096,1.284162,7.320592,3.097336,8.203961,-2.505912,3.627634,-4.720934,-8.291552,-0.599296,3.902866,0.735092,1.547905,2.171893],[4.822411,2.864133,8.487384,-1.822426,-2.255706,-4.105325,2.204885,8.978505,-4.960016,8.325057,-5.689126,1.207138,-7.773725,2.122928],[-0.547607,-7.753465,-7.554319,-8.107225,-9.808059,-4.379401,6.972806,-5.392887,-4.877130,8.704796,-0.759693,6.498105,-7.489750,-9.723329],[4.265335,7.359402,8.639346,-1.572403,4.207667,5.957531,4.990907,-5.982809,-3.600106,-3.092106,-6.688870,9.631647,-9.233185,-9.249361],[6.497524,0.598495,-5.810116,1.854477,8.542586,5.040379,-9.453656,-0.935100,-3.892662,-5.071487,-4.313200,2.848404,7.690491,5.047669],[-5.878204,-1.932405,-9.924274,-5.393331,-8.687231,-9.074466,5.962575,1.592183,-1.754298,-5.006321,-8.548487,-9.865320,2.656901,-5.993528],[-3.141857,-4.011983,6.622042,9.908772,-8.606369,-2.549983,2.376512,-1.096217,-0.306413,-1.043770,-2.470316,9.569058,-0.827094,1.780024],[-9.984916,-6.660795,2.556740,1.644620,5.795136,-0.803733,-9.045542,1.303442,-6.701261,2.222532,1.986811,0.419143,-5.030077,-2.133791],[-2.168050,-1.832880,8.393521,-5.205357,1.092345,8.576732,-7.252358,-8.702137,-0.903700,-2.592203,-3.804872,4.975701,9.870358,0.402789],[-2.080641,-4.568426,0.794772,3.581230,7.104957,1.608604,4.187229,-5.009810,-0.383760,-1.452044,-8.748623,4.154908,-1.042740,-9.915546]],[[-4.709893,0.974808,1.652623,0.198573,-1.589384,-1.847218,-6.590864,-1.205526,-1.093979,8.698681,-7.768497,-7.405023,-2.268663,2.999668],[-8.608017,0.584143,3.387419,1.494191,-6.194673,1.248139,3.851797,4.633493,7.720377,2.841081,-4.932390,-6.861441,7.860246,7.728599],[2.412677,-5.747452,-5.090054,-5.436882,6.680450,-8.860416,-1.283680,-0.752970,3.864586,-2.784688,-5.814808,2.355702,-1.330260,1.873605],[-9.397536,-7.483528,8.219767,2.236437,-4.422672,6.918428,-9.457223,0.295418,0.276362,-2.569825,1.748232,7.733157,5.995247,-4.379483],[-1.846361,2.844462,-7.636567,-1.193014,-0.831253,3.634643,5.804109,-2.376927,5.479846,5.501570,-8.702469,4.410952,-1.205351,5.194674],[0.258321,0.654147,6.677090,-0.131459,-6.382574,7.142960,1.354435,7.406859,3.840317,-3.994362,-5.912365,9.603340,1.399808,-4.370829],[4.574612,4.947645,-2.093438,-6.239080,5.327861,3.622101,-4.010080,5.894669,-0.935651,-3.488585,-8.322426,-2.133732,-5.698599,0.114871],[-4.021466,0.261495,1.895107,3.956822,-5.422803,9.386470,-6.167407,6.508116,5.709955,-8.665560,-7.258517,3.727864,1.759123,8.033009],[6.745709,-5.982108,-9.024772,7.433439,-2.627430,1.573317,0.448993,5.118694,-6.179886,-5.402559,9.707491,6.887112,9.634217,-4.327113],[-8.459217,5.790398,8.742249,2.050543,0.862181,5.143049,9.934016,-2.413545,-1.563428,9.951676,6.263648,-1.549097,-7.523684,-2.408616]],[[9.796604,8.466248,-5.942998,1.219672,-7.049776,4.346096,-0.456964,6.387614,-3.692299,-9.369329,8.605959,9.158433,7.575401,8.820483],[2.506682,6.053758,1.447561,-7.971585,5.680216,7.905818,-2.485241,-0.568067,3.595011,3.987008,2.065444,-7.407802,1.825747,4.883909],[-7.836944,-5.585541,-8.085250,-2.221999,-8.224906,7.655561,-3.705311,1.140516,-4.173253,9.336793,-7.774421,8.773423,-4.815457,-7.538383],[9.079808,-3.594447,7.154965,4.272102,4.249345,6.406824,-5.489256,8.012499,9.637421,8.469857,-8.527215,3.582507,3.996652,1.066781],[8.310840,9.564122,0.772288,-2.757694,3.770788,7.102386,6.723103,-2.416626,9.147564,-8.149626,2.731991,-9.153872,0.437565,-9.982099],[-3.894826,-8.701091,4.841909,-6.120770,-0.593246,0.304600,-0.438355,-3.952713,5.869933,9.853325,-3.882260,1.586408,-5.927317,-0.379252],[-2.208362,-9.129296,-4.180025,-3.446230,4.944355,-1.017213,4.083826,9.080911,-8.919911,0.917676,-5.045454,5.309948,-3.361449,-9.847384],[-3.233598,-9.231873,8.247287,-5.038066,-4.975572,-1.333883,8.108545,3.774087,-9.617377,4.712529,-4.922755,2.965667,9.218909,9.533523],[8.086184,-6.181565,-7.006801,-7.486413,-9.108343,2.868838,1.003016,-0.831065,9.614835,7.828852,-1.984255,-3.818722,1.021978,8.184950],[-8.082092,3.719742,0.534261,-8.087043,-9.661650,5.733546,9.422551,7.866962,-2.036574,1.434765,6.075516,-7.212705,2.643344,-4.486387]],[[-9.805057,-3.129687,8.531751,-6.843164,0.985668,-5.433556,-9.461104,-8.144249,0.256739,-5.301585,3.568808,4.518801,6.898054,-2.104597],[-1.235962,0.566429,9.061572,-9.004441,6.554839,6.657431,8.605636,0.636966,8.631327,0.354999,2.408217,9.256906,9.421940,-9.275714],[-5.616207,-5.907276,5.358814,9.431910,9.481108,9.006576,-7.668261,2.775949,7.371306,0.263455,3.467668,2.042515,9.781750,8.739480],[3.146449,0.211160,9.268950,-0.268014,4.752795,8.681700,5.087737,-6.853413,1.759761,7.466394,-2.958662,8.297420,9.854089,-1.784976],[2.872831,-2.150495,1.646583,-2.472500,2.458330,-9.558572,-4.574373,3.241357,-2.618440,-5.618244,6.872786,-2.101537,-3.386383,0.218270],[-6.737078,-3.650636,-6.516559,-0.682852,-6.572061,-2.408726,-3.795949,6.909694,-1.745217,-1.048724,-3.715489,-2.717429,1.364278,1.296554],[-3.238304,5.880821,-6.033261,3.440829,-5.542707,7.736063,-7.963414,-3.225762,-4.305515,-0.229736,-5.932664,6.413769,3.831577,8.600833],[9.503088,-7.706575,6.505281,-2.401101,-0.338789,-3.850614,-2.271398,5.310064,7.880538,5.496060,1.171219,-1.930559,-0.110456,-3.496467],[4.391107,-8.318393,-3.610809,6.454344,7.837954,-5.891051,0.276241,-4.234504,-0.936412,-0.581642,-6.359641,0.308295,6.065143,5.003696],[4.172340,8.080306,3.938758,3.886049,9.961201,-2.301393,9.115736,-6.813239,3.075330,-6.288079,-1.857786,-6.294641,-7.910827,3.766522]]], dtype = "float64")#candidate|5493|(16, 10, 14)|const|float64
uop_5494 = relay.tan(const_5493.astype('float64')) # shape=(16, 10, 14)
output = relay.Tuple([uop_5494,])
output2 = relay.Tuple([uop_5494,])
func_5508 = relay.Function([], output)
mod['func_5508'] = func_5508
mod = relay.transform.InferType()(mod)
mutated_mod['func_5508'] = func_5508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5508_call = mutated_mod.get_global_var('func_5508')
call_5509 = func_5508_call()
output = call_5509
func_5510 = relay.Function([], output)
mutated_mod['func_5510'] = func_5510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5551 = relay.var("var_5551", dtype = "float32", shape = (4, 16, 16))#candidate|5551|(4, 16, 16)|var|float32
uop_5552 = relay.asin(var_5551.astype('float32')) # shape=(4, 16, 16)
uop_5562 = relay.sinh(uop_5552.astype('float32')) # shape=(4, 16, 16)
bop_5568 = relay.subtract(uop_5552.astype('int8'), relay.reshape(var_5551.astype('int8'), relay.shape_of(uop_5552))) # shape=(4, 16, 16)
func_2449_call = mod.get_global_var('func_2449')
func_2451_call = mutated_mod.get_global_var('func_2451')
var_5575 = relay.var("var_5575", dtype = "int8", shape = (64,))#candidate|5575|(64,)|var|int8
call_5574 = relay.TupleGetItem(func_2449_call(relay.reshape(var_5575.astype('int8'), [4, 8, 2])), 0)
call_5576 = relay.TupleGetItem(func_2451_call(relay.reshape(var_5575.astype('int8'), [4, 8, 2])), 0)
var_5579 = relay.var("var_5579", dtype = "float32", shape = (4, 16, 16))#candidate|5579|(4, 16, 16)|var|float32
bop_5580 = relay.bitwise_and(uop_5552.astype('int8'), relay.reshape(var_5579.astype('int8'), relay.shape_of(uop_5552))) # shape=(4, 16, 16)
output = relay.Tuple([uop_5562,bop_5568,call_5574,var_5575,bop_5580,])
output2 = relay.Tuple([uop_5562,bop_5568,call_5576,var_5575,bop_5580,])
func_5593 = relay.Function([var_5551,var_5575,var_5579,], output)
mod['func_5593'] = func_5593
mod = relay.transform.InferType()(mod)
var_5594 = relay.var("var_5594", dtype = "float32", shape = (4, 16, 16))#candidate|5594|(4, 16, 16)|var|float32
var_5595 = relay.var("var_5595", dtype = "int8", shape = (64,))#candidate|5595|(64,)|var|int8
var_5596 = relay.var("var_5596", dtype = "float32", shape = (4, 16, 16))#candidate|5596|(4, 16, 16)|var|float32
output = func_5593(var_5594,var_5595,var_5596,)
func_5597 = relay.Function([var_5594,var_5595,var_5596,], output)
mutated_mod['func_5597'] = func_5597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2429_call = mod.get_global_var('func_2429')
func_2431_call = mutated_mod.get_global_var('func_2431')
call_5614 = relay.TupleGetItem(func_2429_call(), 0)
call_5615 = relay.TupleGetItem(func_2431_call(), 0)
func_4923_call = mod.get_global_var('func_4923')
func_4925_call = mutated_mod.get_global_var('func_4925')
call_5636 = relay.TupleGetItem(func_4923_call(), 0)
call_5637 = relay.TupleGetItem(func_4925_call(), 0)
func_1535_call = mod.get_global_var('func_1535')
func_1538_call = mutated_mod.get_global_var('func_1538')
call_5639 = relay.TupleGetItem(func_1535_call(relay.reshape(call_5614.astype('int32'), [12, 4, 12])), 4)
call_5640 = relay.TupleGetItem(func_1538_call(relay.reshape(call_5614.astype('int32'), [12, 4, 12])), 4)
output = relay.Tuple([call_5614,call_5636,call_5639,])
output2 = relay.Tuple([call_5615,call_5637,call_5640,])
func_5648 = relay.Function([], output)
mod['func_5648'] = func_5648
mod = relay.transform.InferType()(mod)
mutated_mod['func_5648'] = func_5648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5648_call = mutated_mod.get_global_var('func_5648')
call_5649 = func_5648_call()
output = call_5649
func_5650 = relay.Function([], output)
mutated_mod['func_5650'] = func_5650
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5715 = relay.var("var_5715", dtype = "float32", shape = (1, 11, 16))#candidate|5715|(1, 11, 16)|var|float32
uop_5716 = relay.rsqrt(var_5715.astype('float32')) # shape=(1, 11, 16)
output = uop_5716
output2 = uop_5716
func_5726 = relay.Function([var_5715,], output)
mod['func_5726'] = func_5726
mod = relay.transform.InferType()(mod)
var_5727 = relay.var("var_5727", dtype = "float32", shape = (1, 11, 16))#candidate|5727|(1, 11, 16)|var|float32
output = func_5726(var_5727)
func_5728 = relay.Function([var_5727], output)
mutated_mod['func_5728'] = func_5728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3174_call = mod.get_global_var('func_3174')
func_3175_call = mutated_mod.get_global_var('func_3175')
call_5742 = func_3174_call()
call_5743 = func_3174_call()
func_5079_call = mod.get_global_var('func_5079')
func_5080_call = mutated_mod.get_global_var('func_5080')
call_5746 = relay.TupleGetItem(func_5079_call(), 0)
call_5747 = relay.TupleGetItem(func_5080_call(), 0)
output = relay.Tuple([call_5742,call_5746,])
output2 = relay.Tuple([call_5743,call_5747,])
func_5749 = relay.Function([], output)
mod['func_5749'] = func_5749
mod = relay.transform.InferType()(mod)
output = func_5749()
func_5750 = relay.Function([], output)
mutated_mod['func_5750'] = func_5750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3511_call = mod.get_global_var('func_3511')
func_3513_call = mutated_mod.get_global_var('func_3513')
call_5868 = relay.TupleGetItem(func_3511_call(), 0)
call_5869 = relay.TupleGetItem(func_3513_call(), 0)
output = relay.Tuple([call_5868,])
output2 = relay.Tuple([call_5869,])
func_5888 = relay.Function([], output)
mod['func_5888'] = func_5888
mod = relay.transform.InferType()(mod)
mutated_mod['func_5888'] = func_5888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5888_call = mutated_mod.get_global_var('func_5888')
call_5889 = func_5888_call()
output = call_5889
func_5890 = relay.Function([], output)
mutated_mod['func_5890'] = func_5890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mod.get_global_var('func_2923')
func_2925_call = mutated_mod.get_global_var('func_2925')
call_5900 = relay.TupleGetItem(func_2923_call(), 0)
call_5901 = relay.TupleGetItem(func_2925_call(), 0)
var_5906 = relay.var("var_5906", dtype = "int32", shape = (12, 4, 12))#candidate|5906|(12, 4, 12)|var|int32
bop_5907 = relay.power(call_5900.astype('float64'), relay.reshape(var_5906.astype('float64'), relay.shape_of(call_5900))) # shape=(12, 4, 12)
bop_5910 = relay.power(call_5901.astype('float64'), relay.reshape(var_5906.astype('float64'), relay.shape_of(call_5901))) # shape=(12, 4, 12)
output = relay.Tuple([bop_5907,])
output2 = relay.Tuple([bop_5910,])
func_5923 = relay.Function([var_5906,], output)
mod['func_5923'] = func_5923
mod = relay.transform.InferType()(mod)
var_5924 = relay.var("var_5924", dtype = "int32", shape = (12, 4, 12))#candidate|5924|(12, 4, 12)|var|int32
output = func_5923(var_5924)
func_5925 = relay.Function([var_5924], output)
mutated_mod['func_5925'] = func_5925
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6021 = relay.var("var_6021", dtype = "uint64", shape = ())#candidate|6021|()|var|uint64
var_6022 = relay.var("var_6022", dtype = "uint64", shape = (7, 1))#candidate|6022|(7, 1)|var|uint64
bop_6023 = relay.multiply(var_6021.astype('uint64'), var_6022.astype('uint64')) # shape=(7, 1)
var_6027 = relay.var("var_6027", dtype = "uint64", shape = (15, 2, 12))#candidate|6027|(15, 2, 12)|var|uint64
bop_6028 = relay.greater_equal(var_6021.astype('bool'), var_6027.astype('bool')) # shape=(15, 2, 12)
var_6034 = relay.var("var_6034", dtype = "bool", shape = (15, 2, 12))#candidate|6034|(15, 2, 12)|var|bool
bop_6035 = relay.maximum(bop_6028.astype('uint64'), relay.reshape(var_6034.astype('uint64'), relay.shape_of(bop_6028))) # shape=(15, 2, 12)
func_3358_call = mod.get_global_var('func_3358')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_6043 = relay.TupleGetItem(func_3358_call(), 0)
call_6044 = relay.TupleGetItem(func_3359_call(), 0)
bop_6045 = relay.left_shift(bop_6035.astype('uint8'), relay.reshape(bop_6028.astype('uint8'), relay.shape_of(bop_6035))) # shape=(15, 2, 12)
func_5281_call = mod.get_global_var('func_5281')
func_5282_call = mutated_mod.get_global_var('func_5282')
call_6052 = func_5281_call()
call_6053 = func_5281_call()
func_3425_call = mod.get_global_var('func_3425')
func_3427_call = mutated_mod.get_global_var('func_3427')
var_6055 = relay.var("var_6055", dtype = "int8", shape = (144, 4))#candidate|6055|(144, 4)|var|int8
call_6054 = relay.TupleGetItem(func_3425_call(relay.reshape(var_6055.astype('int8'), [12, 4, 12])), 0)
call_6056 = relay.TupleGetItem(func_3427_call(relay.reshape(var_6055.astype('int8'), [12, 4, 12])), 0)
output = relay.Tuple([bop_6023,call_6043,bop_6045,call_6052,call_6054,var_6055,])
output2 = relay.Tuple([bop_6023,call_6044,bop_6045,call_6053,call_6056,var_6055,])
func_6081 = relay.Function([var_6021,var_6022,var_6027,var_6034,var_6055,], output)
mod['func_6081'] = func_6081
mod = relay.transform.InferType()(mod)
var_6082 = relay.var("var_6082", dtype = "uint64", shape = ())#candidate|6082|()|var|uint64
var_6083 = relay.var("var_6083", dtype = "uint64", shape = (7, 1))#candidate|6083|(7, 1)|var|uint64
var_6084 = relay.var("var_6084", dtype = "uint64", shape = (15, 2, 12))#candidate|6084|(15, 2, 12)|var|uint64
var_6085 = relay.var("var_6085", dtype = "bool", shape = (15, 2, 12))#candidate|6085|(15, 2, 12)|var|bool
var_6086 = relay.var("var_6086", dtype = "int8", shape = (144, 4))#candidate|6086|(144, 4)|var|int8
output = func_6081(var_6082,var_6083,var_6084,var_6085,var_6086,)
func_6087 = relay.Function([var_6082,var_6083,var_6084,var_6085,var_6086,], output)
mutated_mod['func_6087'] = func_6087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5508_call = mod.get_global_var('func_5508')
func_5510_call = mutated_mod.get_global_var('func_5510')
call_6136 = relay.TupleGetItem(func_5508_call(), 0)
call_6137 = relay.TupleGetItem(func_5510_call(), 0)
func_5197_call = mod.get_global_var('func_5197')
func_5199_call = mutated_mod.get_global_var('func_5199')
call_6138 = relay.TupleGetItem(func_5197_call(), 1)
call_6139 = relay.TupleGetItem(func_5199_call(), 1)
func_3082_call = mod.get_global_var('func_3082')
func_3086_call = mutated_mod.get_global_var('func_3086')
const_6156 = relay.const([-2.693402,-5.466843,0.067251,-6.136880,7.761149,7.798922,6.436872,-1.492372,-4.367783,1.492841,7.839876,-8.615111,-3.186632,4.431087,4.020850,0.091306,-2.604760,-4.891266,-8.291195,2.971617,-6.026494,8.950936,2.306798,-3.631151,-8.811103,9.834918,-0.478688,6.646125,-2.542765,6.286844,9.409825,9.626138,-8.935823,3.887808,4.659528,8.662494,-8.536696,0.352301,-1.002889,0.332791,-0.723604,-6.191459,5.039255,0.072873,0.698091,1.472978,-9.525249,-9.019495,-4.085698,1.147810,-3.827946,-1.203846,7.611490,4.738113,6.677535,3.789076,3.471706,-3.182918,1.445229,-7.452069,-3.344458,0.823472,-7.230941,-0.419750,-6.941563,-7.994876,-1.218519,5.290836,1.421689,1.635811,5.073874,-6.896357,-5.918637,9.896574,-7.657082,-5.187714,6.031948,2.326750,-4.352413,4.325844,2.888939,8.281322,-7.163036,-1.126810,8.455238,-2.990662,-3.253833,1.085646,3.525452,-8.955774,-5.147031,0.107556,5.745292,-4.225962,-3.045955,-0.354201,7.244009,7.860528,-1.736940,1.385658,7.846362,-0.318218,-6.382101,-8.561439,1.166933,-9.251083,-0.066627,8.635650,-4.539837,6.877523,9.024622,2.568227,8.019553,-7.709466,-2.689311,-7.036330,9.157943,0.154982,-0.395288,-5.440855,-2.476450,-1.433352,-3.178663,-8.851697,2.705362,9.891637,5.957871,1.115715,8.946370,-5.694350,-0.094362,7.025864,-7.577550,5.674444,-3.175551,-6.373675,-3.852743,5.415395,-7.414596,-7.619077,1.721207,0.094780,-8.805468,-4.408068], dtype = "float32")#candidate|6156|(144,)|const|float32
call_6155 = relay.TupleGetItem(func_3082_call(relay.reshape(const_6156.astype('float32'), [6, 2, 12]), relay.reshape(const_6156.astype('bool'), [6, 2, 12]), ), 1)
call_6157 = relay.TupleGetItem(func_3086_call(relay.reshape(const_6156.astype('float32'), [6, 2, 12]), relay.reshape(const_6156.astype('bool'), [6, 2, 12]), ), 1)
uop_6165 = relay.cos(call_6155.astype('float64')) # shape=(6, 2, 12)
uop_6167 = relay.cos(call_6157.astype('float64')) # shape=(6, 2, 12)
output = relay.Tuple([call_6136,call_6138,const_6156,uop_6165,])
output2 = relay.Tuple([call_6137,call_6139,const_6156,uop_6167,])
func_6177 = relay.Function([], output)
mod['func_6177'] = func_6177
mod = relay.transform.InferType()(mod)
output = func_6177()
func_6178 = relay.Function([], output)
mutated_mod['func_6178'] = func_6178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5281_call = mod.get_global_var('func_5281')
func_5282_call = mutated_mod.get_global_var('func_5282')
call_6194 = func_5281_call()
call_6195 = func_5281_call()
func_6081_call = mod.get_global_var('func_6081')
func_6087_call = mutated_mod.get_global_var('func_6087')
var_6203 = relay.var("var_6203", dtype = "uint64", shape = ())#candidate|6203|()|var|uint64
var_6204 = relay.var("var_6204", dtype = "uint64", shape = (7,))#candidate|6204|(7,)|var|uint64
var_6205 = relay.var("var_6205", dtype = "uint64", shape = (360,))#candidate|6205|(360,)|var|uint64
var_6206 = relay.var("var_6206", dtype = "int8", shape = (576,))#candidate|6206|(576,)|var|int8
call_6202 = relay.TupleGetItem(func_6081_call(relay.reshape(var_6203.astype('uint64'), []), relay.reshape(var_6204.astype('uint64'), [7, 1]), relay.reshape(var_6205.astype('uint64'), [15, 2, 12]), relay.reshape(var_6205.astype('bool'), [15, 2, 12]), relay.reshape(var_6206.astype('int8'), [144, 4]), ), 1)
call_6207 = relay.TupleGetItem(func_6087_call(relay.reshape(var_6203.astype('uint64'), []), relay.reshape(var_6204.astype('uint64'), [7, 1]), relay.reshape(var_6205.astype('uint64'), [15, 2, 12]), relay.reshape(var_6205.astype('bool'), [15, 2, 12]), relay.reshape(var_6206.astype('int8'), [144, 4]), ), 1)
output = relay.Tuple([call_6194,call_6202,var_6203,var_6204,var_6205,var_6206,])
output2 = relay.Tuple([call_6195,call_6207,var_6203,var_6204,var_6205,var_6206,])
func_6208 = relay.Function([var_6203,var_6204,var_6205,var_6206,], output)
mod['func_6208'] = func_6208
mod = relay.transform.InferType()(mod)
var_6209 = relay.var("var_6209", dtype = "uint64", shape = ())#candidate|6209|()|var|uint64
var_6210 = relay.var("var_6210", dtype = "uint64", shape = (7,))#candidate|6210|(7,)|var|uint64
var_6211 = relay.var("var_6211", dtype = "uint64", shape = (360,))#candidate|6211|(360,)|var|uint64
var_6212 = relay.var("var_6212", dtype = "int8", shape = (576,))#candidate|6212|(576,)|var|int8
output = func_6208(var_6209,var_6210,var_6211,var_6212,)
func_6213 = relay.Function([var_6209,var_6210,var_6211,var_6212,], output)
mutated_mod['func_6213'] = func_6213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2861_call = mod.get_global_var('func_2861')
func_2863_call = mutated_mod.get_global_var('func_2863')
call_6221 = relay.TupleGetItem(func_2861_call(), 1)
call_6222 = relay.TupleGetItem(func_2863_call(), 1)
output = relay.Tuple([call_6221,])
output2 = relay.Tuple([call_6222,])
func_6225 = relay.Function([], output)
mod['func_6225'] = func_6225
mod = relay.transform.InferType()(mod)
mutated_mod['func_6225'] = func_6225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6225_call = mutated_mod.get_global_var('func_6225')
call_6226 = func_6225_call()
output = call_6226
func_6227 = relay.Function([], output)
mutated_mod['func_6227'] = func_6227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5749_call = mod.get_global_var('func_5749')
func_5750_call = mutated_mod.get_global_var('func_5750')
call_6269 = relay.TupleGetItem(func_5749_call(), 1)
call_6270 = relay.TupleGetItem(func_5750_call(), 1)
func_4183_call = mod.get_global_var('func_4183')
func_4184_call = mutated_mod.get_global_var('func_4184')
call_6278 = func_4183_call()
call_6279 = func_4183_call()
output = relay.Tuple([call_6269,call_6278,])
output2 = relay.Tuple([call_6270,call_6279,])
func_6283 = relay.Function([], output)
mod['func_6283'] = func_6283
mod = relay.transform.InferType()(mod)
output = func_6283()
func_6284 = relay.Function([], output)
mutated_mod['func_6284'] = func_6284
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6301 = relay.const(-9, dtype = "int8")#candidate|6301|()|const|int8
const_6302 = relay.const([[[-4,2,-1,1,7,-8,-6,3,6,6,-3]],[[-3,-9,-9,5,-4,4,-7,10,-2,-3,-6]],[[-3,-4,-9,4,1,8,-10,-9,-8,-2,-9]],[[-1,8,6,6,-2,-2,-7,-1,7,-6,-4]],[[-2,1,-3,4,3,3,-9,-3,-2,1,5]],[[7,8,-6,8,3,2,-10,7,9,9,1]],[[2,2,-3,7,2,-2,7,5,9,-3,-3]],[[7,7,2,-9,-6,1,4,3,-9,-5,-5]],[[10,-6,-9,-9,-2,-4,2,6,1,2,-10]],[[-3,8,-9,-5,-3,-6,4,-8,8,7,10]],[[8,-3,-8,10,-3,-2,-6,-6,-5,6,10]],[[7,-10,7,-8,1,2,4,2,1,-6,-8]],[[6,-3,-5,-2,-8,-2,-5,8,-5,-9,4]],[[9,9,1,5,-8,-5,9,2,4,2,8]],[[4,-3,6,8,-7,-8,-8,-2,10,3,-2]],[[5,6,4,5,7,8,10,2,-6,8,-5]]], dtype = "int8")#candidate|6302|(16, 1, 11)|const|int8
bop_6303 = relay.left_shift(const_6301.astype('int8'), const_6302.astype('int8')) # shape=(16, 1, 11)
func_2343_call = mod.get_global_var('func_2343')
func_2344_call = mutated_mod.get_global_var('func_2344')
call_6306 = relay.TupleGetItem(func_2343_call(), 0)
call_6307 = relay.TupleGetItem(func_2344_call(), 0)
bop_6310 = relay.greater(bop_6303.astype('bool'), const_6301.astype('bool')) # shape=(16, 1, 11)
var_6319 = relay.var("var_6319", dtype = "bool", shape = (16, 16, 11))#candidate|6319|(16, 16, 11)|var|bool
bop_6320 = relay.not_equal(bop_6310.astype('bool'), var_6319.astype('bool')) # shape=(16, 16, 11)
uop_6345 = relay.asin(var_6319.astype('float32')) # shape=(16, 16, 11)
bop_6352 = relay.bitwise_or(uop_6345.astype('int16'), relay.reshape(bop_6320.astype('int16'), relay.shape_of(uop_6345))) # shape=(16, 16, 11)
output = relay.Tuple([call_6306,bop_6352,])
output2 = relay.Tuple([call_6307,bop_6352,])
func_6357 = relay.Function([var_6319,], output)
mod['func_6357'] = func_6357
mod = relay.transform.InferType()(mod)
var_6358 = relay.var("var_6358", dtype = "bool", shape = (16, 16, 11))#candidate|6358|(16, 16, 11)|var|bool
output = func_6357(var_6358)
func_6359 = relay.Function([var_6358], output)
mutated_mod['func_6359'] = func_6359
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6385 = relay.const([[[-10,7,-9,-4,2,2,4,-2,-1,-6],[-3,-3,-3,-8,7,-4,-4,9,-5,-8],[6,9,-9,6,1,-9,2,-1,-6,-3],[-10,-1,7,10,4,9,7,-1,8,-6],[-1,3,-6,10,5,6,2,10,7,3],[7,1,-9,-10,-2,-6,-1,6,-5,-9],[2,6,3,3,-5,3,-6,5,9,-4],[4,-3,1,4,8,6,1,1,-7,7]],[[-9,-3,-7,2,-4,8,-8,-4,-2,5],[-2,-7,-3,8,-1,2,-5,6,-3,-1],[-7,-6,-2,4,-9,-2,-9,5,-7,4],[7,-9,2,6,8,-4,-6,1,-3,2],[1,-4,-2,2,1,9,-1,10,-8,9],[-4,2,-5,8,6,-9,-3,-9,1,6],[7,-8,8,2,-4,1,-7,-10,5,-10],[9,2,-2,8,-2,5,-4,8,3,-5]],[[2,-7,-10,-3,4,-8,5,-4,8,-2],[10,10,10,-3,7,-2,-7,-9,-3,-2],[6,-9,-1,-1,6,-9,-1,-10,6,-6],[5,-1,-4,-9,-1,-5,2,-1,8,2],[-5,2,-2,9,-8,-1,4,3,-2,-6],[-5,1,4,2,4,-5,7,-5,10,6],[-10,8,9,-1,-6,-4,-7,-8,-9,-2],[-4,-1,4,1,1,-1,6,-6,-5,-6]],[[5,1,6,-6,2,9,-7,-9,8,7],[9,2,-9,10,7,-2,7,6,-5,-10],[10,-2,-10,8,-1,9,2,5,10,-5],[3,-1,3,4,10,4,3,-9,-7,3],[1,-7,-5,-6,8,-4,-3,1,-4,5],[-1,6,-4,-9,1,6,5,-8,-6,7],[-10,-6,6,8,-2,-4,1,-7,6,-4],[9,2,7,-6,4,8,-4,6,2,10]],[[6,-7,5,-2,1,9,-7,-5,8,-7],[5,-8,-10,9,-10,-7,4,-3,-7,1],[10,9,-8,4,-8,-2,-8,3,7,-1],[-2,3,-2,4,-9,9,-4,9,-5,-10],[3,9,4,-9,-6,8,-9,-4,7,-10],[5,-6,-8,-1,-7,7,2,-9,-9,-7],[-1,5,-6,-8,-10,-9,-6,4,-1,8],[-7,-8,-2,-5,-7,8,-7,-7,3,-6]],[[-4,6,2,-5,-8,-1,-9,-3,-7,-5],[-5,6,5,7,-9,-9,-7,-4,-8,2],[-3,10,-3,4,-3,8,-4,-2,-6,-7],[1,7,-4,7,-1,7,-3,5,-9,-7],[9,-2,8,2,-2,-10,-6,9,9,1],[6,-1,2,-6,-6,-7,6,10,3,9],[-10,6,-5,5,4,1,3,-10,1,-7],[-7,-4,6,-9,5,-4,-7,2,-7,6]],[[-4,-3,1,3,9,9,-6,3,8,-1],[-9,9,-7,-8,1,-8,-10,-3,6,3],[7,3,6,5,7,-8,-3,10,1,4],[1,6,-5,-2,-4,-6,8,4,5,-9],[-9,9,-5,2,9,5,-10,-9,9,-5],[8,-4,3,10,1,-2,-8,2,2,-9],[-2,10,7,-6,-3,-1,-4,-7,7,5],[-9,-8,-8,2,4,10,8,-7,-1,3]],[[-8,5,3,9,1,6,10,9,-4,-7],[-2,6,7,5,10,2,-6,8,-8,7],[-10,1,9,-8,-9,-1,4,-1,3,-8],[5,1,-8,-1,5,-8,-1,4,9,2],[9,-8,-3,3,-4,10,-3,-3,9,9],[-9,8,-6,-1,6,-2,7,7,1,-7],[-3,6,-8,-8,10,1,-6,1,-3,6],[6,-4,2,-4,-3,7,9,-5,2,-4]],[[-3,-4,-3,-1,-9,-4,7,-9,-1,-1],[3,-2,1,9,-1,8,5,-4,-8,5],[-2,-4,8,9,6,4,7,-2,-3,4],[2,-9,5,-7,8,2,-10,-2,-2,8],[2,5,-7,-10,8,6,5,8,1,-2],[-7,1,-3,-8,4,10,7,5,-4,6],[-8,-3,10,-2,-9,7,9,7,-1,-6],[10,-2,3,3,-4,-1,-1,-5,8,-9]],[[-2,-4,6,-4,6,-3,5,-3,5,-10],[-5,9,-5,-7,2,9,6,-4,5,-1],[-7,7,-10,-4,8,-3,-5,3,7,-5],[7,4,9,6,-7,7,3,-9,8,-7],[-7,1,3,4,-3,-10,4,4,3,1],[8,5,6,4,7,-10,4,-8,3,-10],[2,-7,-5,4,-4,9,5,-5,7,-4],[-3,-1,-6,-7,-1,-7,6,-1,-6,10]],[[-10,-4,-4,-7,-10,-7,7,-1,7,4],[-4,2,5,-2,6,3,-10,2,-7,7],[4,-10,2,-6,3,8,8,-9,3,6],[-3,7,7,9,2,1,10,7,-7,2],[2,7,-9,-5,-8,-10,-1,8,8,-3],[-3,-6,-10,-4,7,-6,5,-1,2,5],[-8,-4,-3,10,-10,-4,9,-6,5,5],[6,-1,9,-3,9,-2,2,7,-8,9]],[[-9,-9,-2,-7,-4,9,6,-1,1,5],[-2,8,-4,-1,3,10,-4,-10,5,3],[2,9,3,2,-2,5,-5,-9,-9,1],[2,-4,2,3,3,-5,10,-2,4,7],[10,-1,7,4,-10,-8,8,-9,7,-8],[-9,-5,8,2,-9,9,2,-6,10,3],[-7,-4,-4,-9,-4,1,-1,2,4,-3],[-2,-4,-4,1,10,-8,8,6,-5,-3]],[[2,-4,-2,4,8,-9,-2,7,3,2],[6,2,1,6,-1,-5,-4,-5,5,2],[-9,-6,-4,-6,2,10,-9,-10,8,-6],[-4,3,-2,-2,-10,-2,5,-9,-2,-6],[7,10,8,-6,-5,-7,-5,-7,-9,-6],[5,-9,6,1,-4,-10,-5,-7,-2,9],[-5,-6,-5,9,-4,-4,-1,-1,-10,4],[-9,3,7,-7,2,6,-10,-10,-7,-10]],[[2,-10,-8,1,-3,-10,-1,8,-6,9],[-1,-5,-9,-8,4,7,-4,10,-10,-8],[7,-7,4,10,-10,-7,-8,-2,9,-3],[-7,-8,9,-3,-10,4,-2,10,6,-7],[1,-5,-8,3,-6,10,-1,6,-8,-1],[-3,-8,5,2,-7,8,-5,-4,10,10],[-8,-9,9,-8,-6,5,-3,-4,-2,2],[7,7,2,7,-1,-8,-7,5,-4,-5]]], dtype = "uint64")#candidate|6385|(14, 8, 10)|const|uint64
var_6386 = relay.var("var_6386", dtype = "uint64", shape = (14, 8, 10))#candidate|6386|(14, 8, 10)|var|uint64
bop_6387 = relay.less(const_6385.astype('bool'), relay.reshape(var_6386.astype('bool'), relay.shape_of(const_6385))) # shape=(14, 8, 10)
bop_6397 = relay.minimum(bop_6387.astype('float32'), relay.reshape(const_6385.astype('float32'), relay.shape_of(bop_6387))) # shape=(14, 8, 10)
func_6283_call = mod.get_global_var('func_6283')
func_6284_call = mutated_mod.get_global_var('func_6284')
call_6403 = relay.TupleGetItem(func_6283_call(), 1)
call_6404 = relay.TupleGetItem(func_6284_call(), 1)
output = relay.Tuple([bop_6397,call_6403,])
output2 = relay.Tuple([bop_6397,call_6404,])
func_6423 = relay.Function([var_6386,], output)
mod['func_6423'] = func_6423
mod = relay.transform.InferType()(mod)
var_6424 = relay.var("var_6424", dtype = "uint64", shape = (14, 8, 10))#candidate|6424|(14, 8, 10)|var|uint64
output = func_6423(var_6424)
func_6425 = relay.Function([var_6424], output)
mutated_mod['func_6425'] = func_6425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2261_call = mod.get_global_var('func_2261')
func_2263_call = mutated_mod.get_global_var('func_2263')
call_6440 = func_2261_call()
call_6441 = func_2261_call()
output = call_6440
output2 = call_6441
func_6449 = relay.Function([], output)
mod['func_6449'] = func_6449
mod = relay.transform.InferType()(mod)
mutated_mod['func_6449'] = func_6449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6449_call = mutated_mod.get_global_var('func_6449')
call_6450 = func_6449_call()
output = call_6450
func_6451 = relay.Function([], output)
mutated_mod['func_6451'] = func_6451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1768_call = mod.get_global_var('func_1768')
func_1769_call = mutated_mod.get_global_var('func_1769')
call_6497 = relay.TupleGetItem(func_1768_call(), 0)
call_6498 = relay.TupleGetItem(func_1769_call(), 0)
var_6509 = relay.var("var_6509", dtype = "float32", shape = (12, 4, 12))#candidate|6509|(12, 4, 12)|var|float32
bop_6510 = relay.mod(call_6497.astype('float32'), relay.reshape(var_6509.astype('float32'), relay.shape_of(call_6497))) # shape=(12, 4, 12)
bop_6513 = relay.mod(call_6498.astype('float32'), relay.reshape(var_6509.astype('float32'), relay.shape_of(call_6498))) # shape=(12, 4, 12)
uop_6527 = relay.sqrt(bop_6510.astype('float32')) # shape=(12, 4, 12)
uop_6529 = relay.sqrt(bop_6513.astype('float32')) # shape=(12, 4, 12)
func_4678_call = mod.get_global_var('func_4678')
func_4679_call = mutated_mod.get_global_var('func_4679')
call_6581 = relay.TupleGetItem(func_4678_call(), 0)
call_6582 = relay.TupleGetItem(func_4679_call(), 0)
output = relay.Tuple([uop_6527,call_6581,])
output2 = relay.Tuple([uop_6529,call_6582,])
func_6584 = relay.Function([var_6509,], output)
mod['func_6584'] = func_6584
mod = relay.transform.InferType()(mod)
mutated_mod['func_6584'] = func_6584
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6585 = relay.var("var_6585", dtype = "float32", shape = (12, 4, 12))#candidate|6585|(12, 4, 12)|var|float32
func_6584_call = mutated_mod.get_global_var('func_6584')
call_6586 = func_6584_call(var_6585)
output = call_6586
func_6587 = relay.Function([var_6585], output)
mutated_mod['func_6587'] = func_6587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3337_call = mod.get_global_var('func_3337')
func_3338_call = mutated_mod.get_global_var('func_3338')
call_6663 = func_3337_call()
call_6664 = func_3337_call()
output = relay.Tuple([call_6663,])
output2 = relay.Tuple([call_6664,])
func_6665 = relay.Function([], output)
mod['func_6665'] = func_6665
mod = relay.transform.InferType()(mod)
mutated_mod['func_6665'] = func_6665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6665_call = mutated_mod.get_global_var('func_6665')
call_6666 = func_6665_call()
output = call_6666
func_6667 = relay.Function([], output)
mutated_mod['func_6667'] = func_6667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5008_call = mod.get_global_var('func_5008')
func_5009_call = mutated_mod.get_global_var('func_5009')
call_6678 = relay.TupleGetItem(func_5008_call(), 0)
call_6679 = relay.TupleGetItem(func_5009_call(), 0)
func_4868_call = mod.get_global_var('func_4868')
func_4871_call = mutated_mod.get_global_var('func_4871')
var_6684 = relay.var("var_6684", dtype = "float32", shape = (36, 2))#candidate|6684|(36, 2)|var|float32
call_6683 = relay.TupleGetItem(func_4868_call(relay.reshape(var_6684.astype('float32'), [72,])), 1)
call_6685 = relay.TupleGetItem(func_4871_call(relay.reshape(var_6684.astype('float32'), [72,])), 1)
var_6686 = relay.var("var_6686", dtype = "float32", shape = (36, 2))#candidate|6686|(36, 2)|var|float32
bop_6687 = relay.power(var_6684.astype('float32'), relay.reshape(var_6686.astype('float32'), relay.shape_of(var_6684))) # shape=(36, 2)
output = relay.Tuple([call_6678,call_6683,bop_6687,])
output2 = relay.Tuple([call_6679,call_6685,bop_6687,])
func_6700 = relay.Function([var_6684,var_6686,], output)
mod['func_6700'] = func_6700
mod = relay.transform.InferType()(mod)
var_6701 = relay.var("var_6701", dtype = "float32", shape = (36, 2))#candidate|6701|(36, 2)|var|float32
var_6702 = relay.var("var_6702", dtype = "float32", shape = (36, 2))#candidate|6702|(36, 2)|var|float32
output = func_6700(var_6701,var_6702,)
func_6703 = relay.Function([var_6701,var_6702,], output)
mutated_mod['func_6703'] = func_6703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5508_call = mod.get_global_var('func_5508')
func_5510_call = mutated_mod.get_global_var('func_5510')
call_6818 = relay.TupleGetItem(func_5508_call(), 0)
call_6819 = relay.TupleGetItem(func_5510_call(), 0)
output = call_6818
output2 = call_6819
func_6820 = relay.Function([], output)
mod['func_6820'] = func_6820
mod = relay.transform.InferType()(mod)
mutated_mod['func_6820'] = func_6820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6820_call = mutated_mod.get_global_var('func_6820')
call_6821 = func_6820_call()
output = call_6821
func_6822 = relay.Function([], output)
mutated_mod['func_6822'] = func_6822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mod.get_global_var('func_2923')
func_2925_call = mutated_mod.get_global_var('func_2925')
call_6834 = relay.TupleGetItem(func_2923_call(), 0)
call_6835 = relay.TupleGetItem(func_2925_call(), 0)
var_6859 = relay.var("var_6859", dtype = "int32", shape = (12, 4, 12))#candidate|6859|(12, 4, 12)|var|int32
bop_6860 = relay.greater_equal(call_6834.astype('bool'), relay.reshape(var_6859.astype('bool'), relay.shape_of(call_6834))) # shape=(12, 4, 12)
bop_6863 = relay.greater_equal(call_6835.astype('bool'), relay.reshape(var_6859.astype('bool'), relay.shape_of(call_6835))) # shape=(12, 4, 12)
uop_6864 = relay.log10(call_6834.astype('float64')) # shape=(12, 4, 12)
uop_6866 = relay.log10(call_6835.astype('float64')) # shape=(12, 4, 12)
func_1629_call = mod.get_global_var('func_1629')
func_1630_call = mutated_mod.get_global_var('func_1630')
call_6879 = relay.TupleGetItem(func_1629_call(), 0)
call_6880 = relay.TupleGetItem(func_1630_call(), 0)
func_4505_call = mod.get_global_var('func_4505')
func_4507_call = mutated_mod.get_global_var('func_4507')
call_6885 = relay.TupleGetItem(func_4505_call(), 0)
call_6886 = relay.TupleGetItem(func_4507_call(), 0)
output = relay.Tuple([bop_6860,uop_6864,call_6879,call_6885,])
output2 = relay.Tuple([bop_6863,uop_6866,call_6880,call_6886,])
func_6888 = relay.Function([var_6859,], output)
mod['func_6888'] = func_6888
mod = relay.transform.InferType()(mod)
var_6889 = relay.var("var_6889", dtype = "int32", shape = (12, 4, 12))#candidate|6889|(12, 4, 12)|var|int32
output = func_6888(var_6889)
func_6890 = relay.Function([var_6889], output)
mutated_mod['func_6890'] = func_6890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2429_call = mod.get_global_var('func_2429')
func_2431_call = mutated_mod.get_global_var('func_2431')
call_6904 = relay.TupleGetItem(func_2429_call(), 0)
call_6905 = relay.TupleGetItem(func_2431_call(), 0)
func_5473_call = mod.get_global_var('func_5473')
func_5474_call = mutated_mod.get_global_var('func_5474')
call_6942 = func_5473_call()
call_6943 = func_5473_call()
func_5350_call = mod.get_global_var('func_5350')
func_5351_call = mutated_mod.get_global_var('func_5351')
call_6967 = relay.TupleGetItem(func_5350_call(), 0)
call_6968 = relay.TupleGetItem(func_5351_call(), 0)
func_6700_call = mod.get_global_var('func_6700')
func_6703_call = mutated_mod.get_global_var('func_6703')
const_6979 = relay.const([[-9.441349],[5.840312],[-5.462477],[-3.643641],[3.665897],[4.253721],[-7.138453],[-9.403854],[-1.785259],[9.031725],[-2.830586],[-4.241871],[-4.550844],[4.602060],[-5.141931],[0.630990],[-4.542481],[6.650858],[8.943698],[6.009045],[5.224612],[1.656483],[3.331406],[-4.343623],[-9.866463],[-1.280520],[1.843616],[1.082928],[7.078769],[-0.997707],[-1.470986],[-8.992941],[7.124252],[2.899418],[2.135601],[9.471456],[3.005020],[7.307306],[-8.685862],[-4.759114],[0.244222],[-5.957122],[-2.389319],[-1.957629],[-7.910122],[9.360158],[-4.072288],[2.959179],[5.314194],[-6.088640],[5.987964],[-3.472603],[-8.358017],[2.234623],[9.497244],[1.006389],[7.689081],[3.499788],[0.265004],[1.854514],[2.617175],[8.992561],[-9.508190],[3.996143],[0.060671],[-7.308482],[3.092591],[-7.328957],[-4.010915],[1.908134],[6.505146],[-9.046693]], dtype = "float32")#candidate|6979|(72, 1)|const|float32
call_6978 = relay.TupleGetItem(func_6700_call(relay.reshape(const_6979.astype('float32'), [36, 2]), relay.reshape(const_6979.astype('float32'), [36, 2]), ), 0)
call_6980 = relay.TupleGetItem(func_6703_call(relay.reshape(const_6979.astype('float32'), [36, 2]), relay.reshape(const_6979.astype('float32'), [36, 2]), ), 0)
func_2261_call = mod.get_global_var('func_2261')
func_2263_call = mutated_mod.get_global_var('func_2263')
call_6990 = func_2261_call()
call_6991 = func_2261_call()
bop_6993 = relay.divide(call_6978.astype('float64'), relay.reshape(call_6904.astype('float64'), relay.shape_of(call_6978))) # shape=(12, 4, 12)
bop_6996 = relay.divide(call_6980.astype('float64'), relay.reshape(call_6905.astype('float64'), relay.shape_of(call_6980))) # shape=(12, 4, 12)
func_2601_call = mod.get_global_var('func_2601')
func_2603_call = mutated_mod.get_global_var('func_2603')
call_7015 = relay.TupleGetItem(func_2601_call(), 0)
call_7016 = relay.TupleGetItem(func_2603_call(), 0)
output = relay.Tuple([call_6942,call_6967,const_6979,call_6990,bop_6993,call_7015,])
output2 = relay.Tuple([call_6943,call_6968,const_6979,call_6991,bop_6996,call_7016,])
func_7019 = relay.Function([], output)
mod['func_7019'] = func_7019
mod = relay.transform.InferType()(mod)
mutated_mod['func_7019'] = func_7019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7019_call = mutated_mod.get_global_var('func_7019')
call_7020 = func_7019_call()
output = call_7020
func_7021 = relay.Function([], output)
mutated_mod['func_7021'] = func_7021
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7089 = relay.var("var_7089", dtype = "float32", shape = (1, 16, 11))#candidate|7089|(1, 16, 11)|var|float32
uop_7090 = relay.sqrt(var_7089.astype('float32')) # shape=(1, 16, 11)
var_7092 = relay.var("var_7092", dtype = "float32", shape = (8, 16, 11))#candidate|7092|(8, 16, 11)|var|float32
bop_7093 = relay.floor_divide(var_7089.astype('float64'), var_7092.astype('float64')) # shape=(8, 16, 11)
uop_7106 = relay.sigmoid(uop_7090.astype('float64')) # shape=(1, 16, 11)
output = relay.Tuple([bop_7093,uop_7106,])
output2 = relay.Tuple([bop_7093,uop_7106,])
func_7115 = relay.Function([var_7089,var_7092,], output)
mod['func_7115'] = func_7115
mod = relay.transform.InferType()(mod)
mutated_mod['func_7115'] = func_7115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7115_call = mutated_mod.get_global_var('func_7115')
var_7117 = relay.var("var_7117", dtype = "float32", shape = (1, 16, 11))#candidate|7117|(1, 16, 11)|var|float32
var_7118 = relay.var("var_7118", dtype = "float32", shape = (8, 16, 11))#candidate|7118|(8, 16, 11)|var|float32
call_7116 = func_7115_call(var_7117,var_7118,)
output = call_7116
func_7119 = relay.Function([var_7117,var_7118,], output)
mutated_mod['func_7119'] = func_7119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1356_call = mod.get_global_var('func_1356')
func_1358_call = mutated_mod.get_global_var('func_1358')
call_7141 = func_1356_call()
call_7142 = func_1356_call()
func_6449_call = mod.get_global_var('func_6449')
func_6451_call = mutated_mod.get_global_var('func_6451')
call_7160 = func_6449_call()
call_7161 = func_6449_call()
uop_7174 = relay.log(call_7160.astype('float32')) # shape=(13, 16, 2)
uop_7176 = relay.log(call_7161.astype('float32')) # shape=(13, 16, 2)
uop_7181 = relay.sqrt(uop_7174.astype('float32')) # shape=(13, 16, 2)
uop_7183 = relay.sqrt(uop_7176.astype('float32')) # shape=(13, 16, 2)
bop_7186 = relay.greater_equal(uop_7181.astype('bool'), relay.reshape(uop_7174.astype('bool'), relay.shape_of(uop_7181))) # shape=(13, 16, 2)
bop_7189 = relay.greater_equal(uop_7183.astype('bool'), relay.reshape(uop_7176.astype('bool'), relay.shape_of(uop_7183))) # shape=(13, 16, 2)
func_3337_call = mod.get_global_var('func_3337')
func_3338_call = mutated_mod.get_global_var('func_3338')
call_7204 = func_3337_call()
call_7205 = func_3337_call()
output = relay.Tuple([call_7141,bop_7186,call_7204,])
output2 = relay.Tuple([call_7142,bop_7189,call_7205,])
func_7206 = relay.Function([], output)
mod['func_7206'] = func_7206
mod = relay.transform.InferType()(mod)
mutated_mod['func_7206'] = func_7206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7206_call = mutated_mod.get_global_var('func_7206')
call_7207 = func_7206_call()
output = call_7207
func_7208 = relay.Function([], output)
mutated_mod['func_7208'] = func_7208
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7316 = relay.const(-5, dtype = "uint32")#candidate|7316|()|const|uint32
const_7317 = relay.const([[[-4,4,9],[-1,5,-2],[-10,7,10],[-5,-10,-2],[-6,-7,-4],[1,-9,6],[-2,9,-6]],[[4,-4,1],[2,-4,-6],[5,-1,-3],[5,3,-8],[2,-5,-9],[-3,-8,-7],[3,-6,-2]],[[-5,6,-1],[1,2,10],[2,-2,-6],[-9,-6,-8],[-5,-2,9],[-3,3,10],[-8,-10,4]],[[8,5,-2],[-3,-1,-7],[1,9,-1],[9,3,-3],[6,4,10],[9,6,10],[-6,-1,1]],[[4,-8,-5],[-3,2,4],[9,-7,-9],[2,4,3],[-8,-8,-4],[6,1,2],[4,-8,-1]],[[4,-6,2],[-5,-3,-4],[7,-3,-10],[-6,-6,-2],[-2,-4,-3],[-5,-5,-7],[6,3,2]],[[-6,-9,6],[8,8,8],[2,6,-10],[-3,7,8],[2,5,3],[-3,8,10],[5,-5,-1]],[[5,-3,-3],[2,-10,1],[3,1,-1],[7,5,-9],[-1,-4,9],[3,3,7],[-9,-2,-9]],[[8,-8,-2],[-5,-6,6],[9,2,-8],[-1,7,7],[1,-2,-6],[6,3,-4],[7,-5,2]]], dtype = "uint32")#candidate|7317|(9, 7, 3)|const|uint32
bop_7318 = relay.maximum(const_7316.astype('uint32'), const_7317.astype('uint32')) # shape=(9, 7, 3)
func_2806_call = mod.get_global_var('func_2806')
func_2809_call = mutated_mod.get_global_var('func_2809')
const_7323 = relay.const([-5.119836,0.189996,3.222114,6.739794,2.703912,-6.199575,-7.657871,-1.113560,5.325505,5.155818,-4.058381,0.605522,-5.791469,-9.534971,-1.038315,-5.700107,-5.212741,0.247861,5.561864,4.225197,4.222341,2.050245,-5.488188,4.900298,9.033021,-9.507786,-7.249029,7.739363,6.444414,-6.227689,7.836663,5.655671,7.530457,2.783975,9.283409,2.670810,-6.541843,-2.041505,0.708585,0.745698,8.213549,-4.390481,6.683127,-5.232584,5.073534,2.790386,9.641855,-4.474030,7.452822,9.764046,-7.700565,8.284559,1.972953,-9.133980,1.693378,-3.544448,6.585072,-8.131585,-0.232610,8.203380,8.334153,3.244817,3.096231,5.797427,4.677927,7.453125,-5.717882,0.061585,1.165908,-0.832134,4.941978,6.702086], dtype = "float32")#candidate|7323|(72,)|const|float32
call_7322 = relay.TupleGetItem(func_2806_call(relay.reshape(const_7323.astype('float32'), [12, 1, 6])), 1)
call_7324 = relay.TupleGetItem(func_2809_call(relay.reshape(const_7323.astype('float32'), [12, 1, 6])), 1)
func_6700_call = mod.get_global_var('func_6700')
func_6703_call = mutated_mod.get_global_var('func_6703')
call_7335 = relay.TupleGetItem(func_6700_call(relay.reshape(const_7323.astype('float32'), [36, 2]), relay.reshape(const_7323.astype('float32'), [36, 2]), ), 2)
call_7336 = relay.TupleGetItem(func_6703_call(relay.reshape(const_7323.astype('float32'), [36, 2]), relay.reshape(const_7323.astype('float32'), [36, 2]), ), 2)
func_3880_call = mod.get_global_var('func_3880')
func_3881_call = mutated_mod.get_global_var('func_3881')
call_7340 = relay.TupleGetItem(func_3880_call(), 0)
call_7341 = relay.TupleGetItem(func_3881_call(), 0)
uop_7347 = relay.atanh(bop_7318.astype('float64')) # shape=(9, 7, 3)
uop_7355 = relay.log2(uop_7347.astype('float64')) # shape=(9, 7, 3)
func_6665_call = mod.get_global_var('func_6665')
func_6667_call = mutated_mod.get_global_var('func_6667')
call_7365 = relay.TupleGetItem(func_6665_call(), 0)
call_7366 = relay.TupleGetItem(func_6667_call(), 0)
const_7368 = relay.const([[[5.652439,-4.929395,-0.565641],[-3.854316,-4.146391,2.881949],[-0.284540,-1.824771,-5.846079],[1.174744,-7.556487,7.184282],[-8.327919,4.753528,-8.080586],[9.627728,-1.926375,-2.857166],[0.674971,-4.780663,-0.612401]],[[9.191128,-7.322803,-0.273004],[-9.110153,-2.654567,6.333050],[3.197906,-7.896199,-8.166946],[-6.658950,-8.190320,4.448630],[7.424252,6.764832,-7.710650],[4.131869,-9.815612,6.562927],[-8.234131,-6.695936,-8.738559]],[[0.497750,-0.707628,3.679576],[-6.737803,-8.692472,-0.565152],[0.613043,-2.909887,5.571301],[-9.009948,4.377607,6.156220],[4.906040,-4.794366,-8.742300],[0.094478,5.651011,4.031800],[-8.695898,-4.899167,-6.735790]],[[6.082718,-9.550161,3.157548],[-5.498271,0.434241,-2.883373],[3.882812,-3.915880,-7.039157],[-3.402861,-4.001335,0.065715],[-1.508811,5.469492,-9.491638],[-2.508960,6.045217,-6.553089],[-8.293874,-2.275502,-5.235055]],[[-0.768586,-9.009200,4.370205],[-9.810169,0.686457,8.658505],[-0.029780,-6.258071,-2.287122],[-9.843710,-1.863401,-3.918454],[-1.420154,-9.886117,-5.462838],[2.021767,-8.801780,8.853797],[-4.427552,8.191956,2.286923]],[[-3.719504,8.916828,7.601299],[-4.943521,-9.936087,-6.743943],[9.103111,7.996537,9.284482],[-1.468777,0.555026,8.430649],[-5.647943,-7.931762,6.838820],[8.487839,3.509066,-6.807501],[-5.387526,-3.216277,-8.799006]],[[3.739714,5.174425,6.782859],[-2.123800,-1.554512,-8.695414],[9.031246,6.914400,-3.262135],[2.764393,3.550469,-8.633181],[1.251879,-2.035564,7.051122],[-7.435105,-8.586354,-1.374546],[1.057160,7.378480,-4.977485]],[[5.644055,-8.327004,2.336705],[3.693224,-3.142763,0.654996],[-7.388067,-1.866120,2.356595],[3.434325,-3.157321,8.158732],[2.115266,-6.106833,-9.434969],[-2.726384,-4.541952,0.452836],[-5.175933,-4.121549,2.976903]],[[6.633844,-0.279159,-9.022008],[-1.224366,-2.550229,8.343912],[6.372045,-4.425013,4.572810],[-6.646659,-9.171687,-6.754616],[-9.798012,-4.095275,-4.569442],[-4.448972,4.990838,5.892625],[-5.820687,-0.906658,-0.825084]]], dtype = "float64")#candidate|7368|(9, 7, 3)|const|float64
bop_7369 = relay.logical_and(uop_7347.astype('bool'), relay.reshape(const_7368.astype('bool'), relay.shape_of(uop_7347))) # shape=(9, 7, 3)
output = relay.Tuple([call_7322,const_7323,call_7335,call_7340,uop_7355,call_7365,bop_7369,])
output2 = relay.Tuple([call_7324,const_7323,call_7336,call_7341,uop_7355,call_7366,bop_7369,])
func_7374 = relay.Function([], output)
mod['func_7374'] = func_7374
mod = relay.transform.InferType()(mod)
mutated_mod['func_7374'] = func_7374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7374_call = mutated_mod.get_global_var('func_7374')
call_7375 = func_7374_call()
output = call_7375
func_7376 = relay.Function([], output)
mutated_mod['func_7376'] = func_7376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1133_call = mod.get_global_var('func_1133')
func_1135_call = mutated_mod.get_global_var('func_1135')
call_7377 = relay.TupleGetItem(func_1133_call(), 1)
call_7378 = relay.TupleGetItem(func_1135_call(), 1)
const_7390 = relay.const([[[-8,-5],[3,1],[7,-5],[-4,-7],[-3,4],[-2,3],[2,-3],[3,-8],[-6,-8],[-7,2],[-3,-6],[-1,2],[7,-3],[5,-3],[10,-4],[9,-5]],[[-7,4],[2,-9],[-5,1],[-7,-2],[-7,3],[1,-10],[4,-7],[6,-10],[7,-6],[-9,3],[9,2],[9,2],[6,-9],[-3,-9],[1,-10],[8,-9]],[[-5,3],[7,10],[3,3],[5,-7],[1,10],[-3,1],[-5,-2],[-2,-9],[5,10],[1,7],[3,4],[-5,9],[-7,10],[-9,3],[-3,-8],[-5,1]],[[-10,-1],[3,5],[-9,-4],[-9,10],[3,5],[2,-6],[4,-9],[3,-10],[-3,4],[-2,3],[-7,6],[1,2],[-8,8],[9,-5],[9,4],[6,-5]],[[-7,-6],[-5,10],[8,-7],[-4,5],[-10,-3],[8,-1],[-2,1],[1,8],[2,-8],[-4,10],[-8,3],[8,5],[-4,8],[-6,10],[-6,-7],[-4,6]],[[8,-4],[6,-6],[-1,-6],[10,10],[2,5],[4,8],[-4,-8],[8,6],[-10,10],[-4,-2],[-5,7],[-2,9],[-4,-3],[-10,10],[-6,6],[-2,9]],[[3,-10],[6,-6],[-10,8],[10,7],[-4,4],[-1,-1],[1,-10],[8,-7],[-1,-9],[-8,-9],[10,2],[7,-5],[2,-6],[-4,-2],[4,9],[3,4]],[[2,-2],[10,1],[-1,9],[-4,10],[4,1],[-4,-2],[-4,8],[-5,-3],[8,9],[9,6],[-3,-9],[-1,-1],[6,10],[4,6],[-3,5],[-9,-8]],[[6,-2],[5,6],[-5,3],[3,-1],[-7,-8],[-5,8],[1,9],[-2,6],[2,4],[10,-5],[4,-2],[-3,5],[-4,-10],[-9,8],[-10,9],[-3,1]],[[-5,-5],[4,9],[-8,-4],[-4,1],[-3,-8],[9,-2],[4,-4],[-8,-6],[-1,-7],[1,-2],[9,-1],[6,10],[5,4],[5,-3],[-9,7],[2,-2]],[[4,-8],[7,5],[-6,8],[10,-3],[-7,9],[5,10],[8,1],[1,-5],[-3,2],[-2,8],[5,2],[-6,-10],[-4,-3],[-10,-2],[10,-10],[-7,6]],[[9,3],[-4,1],[-9,-7],[-10,7],[8,2],[3,-10],[-7,4],[7,-7],[-7,-8],[-1,4],[-6,4],[10,1],[-1,9],[6,9],[-2,-9],[-4,-7]],[[-7,3],[8,2],[10,9],[7,-1],[-2,4],[-2,1],[-7,-4],[7,1],[-8,3],[-4,7],[1,6],[-5,-8],[-9,-3],[7,-6],[-4,-5],[-2,4]]], dtype = "int32")#candidate|7390|(13, 16, 2)|const|int32
bop_7391 = relay.right_shift(call_7377.astype('int8'), relay.reshape(const_7390.astype('int8'), relay.shape_of(call_7377))) # shape=(13, 16, 2)
bop_7394 = relay.right_shift(call_7378.astype('int8'), relay.reshape(const_7390.astype('int8'), relay.shape_of(call_7378))) # shape=(13, 16, 2)
output = bop_7391
output2 = bop_7394
func_7399 = relay.Function([], output)
mod['func_7399'] = func_7399
mod = relay.transform.InferType()(mod)
mutated_mod['func_7399'] = func_7399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7399_call = mutated_mod.get_global_var('func_7399')
call_7400 = func_7399_call()
output = call_7400
func_7401 = relay.Function([], output)
mutated_mod['func_7401'] = func_7401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3511_call = mod.get_global_var('func_3511')
func_3513_call = mutated_mod.get_global_var('func_3513')
call_7415 = relay.TupleGetItem(func_3511_call(), 0)
call_7416 = relay.TupleGetItem(func_3513_call(), 0)
output = call_7415
output2 = call_7416
func_7422 = relay.Function([], output)
mod['func_7422'] = func_7422
mod = relay.transform.InferType()(mod)
mutated_mod['func_7422'] = func_7422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7422_call = mutated_mod.get_global_var('func_7422')
call_7423 = func_7422_call()
output = call_7423
func_7424 = relay.Function([], output)
mutated_mod['func_7424'] = func_7424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7463 = relay.var("var_7463", dtype = "int16", shape = (6, 5, 14))#candidate|7463|(6, 5, 14)|var|int16
var_7464 = relay.var("var_7464", dtype = "int16", shape = (6, 5, 14))#candidate|7464|(6, 5, 14)|var|int16
bop_7465 = relay.less_equal(var_7463.astype('bool'), relay.reshape(var_7464.astype('bool'), relay.shape_of(var_7463))) # shape=(6, 5, 14)
func_4868_call = mod.get_global_var('func_4868')
func_4871_call = mutated_mod.get_global_var('func_4871')
var_7470 = relay.var("var_7470", dtype = "float32", shape = (72,))#candidate|7470|(72,)|var|float32
call_7469 = relay.TupleGetItem(func_4868_call(relay.reshape(var_7470.astype('float32'), [72,])), 1)
call_7471 = relay.TupleGetItem(func_4871_call(relay.reshape(var_7470.astype('float32'), [72,])), 1)
func_1133_call = mod.get_global_var('func_1133')
func_1135_call = mutated_mod.get_global_var('func_1135')
call_7475 = relay.TupleGetItem(func_1133_call(), 1)
call_7476 = relay.TupleGetItem(func_1135_call(), 1)
bop_7491 = relay.bitwise_and(bop_7465.astype('uint8'), relay.reshape(var_7464.astype('uint8'), relay.shape_of(bop_7465))) # shape=(6, 5, 14)
output = relay.Tuple([call_7469,var_7470,call_7475,bop_7491,])
output2 = relay.Tuple([call_7471,var_7470,call_7476,bop_7491,])
func_7494 = relay.Function([var_7463,var_7464,var_7470,], output)
mod['func_7494'] = func_7494
mod = relay.transform.InferType()(mod)
var_7495 = relay.var("var_7495", dtype = "int16", shape = (6, 5, 14))#candidate|7495|(6, 5, 14)|var|int16
var_7496 = relay.var("var_7496", dtype = "int16", shape = (6, 5, 14))#candidate|7496|(6, 5, 14)|var|int16
var_7497 = relay.var("var_7497", dtype = "float32", shape = (72,))#candidate|7497|(72,)|var|float32
output = func_7494(var_7495,var_7496,var_7497,)
func_7498 = relay.Function([var_7495,var_7496,var_7497,], output)
mutated_mod['func_7498'] = func_7498
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7511 = relay.var("var_7511", dtype = "float64", shape = (7, 16, 10))#candidate|7511|(7, 16, 10)|var|float64
var_7512 = relay.var("var_7512", dtype = "float64", shape = (7, 16, 10))#candidate|7512|(7, 16, 10)|var|float64
bop_7513 = relay.floor_divide(var_7511.astype('float64'), relay.reshape(var_7512.astype('float64'), relay.shape_of(var_7511))) # shape=(7, 16, 10)
uop_7516 = relay.exp(bop_7513.astype('float32')) # shape=(7, 16, 10)
output = relay.Tuple([uop_7516,])
output2 = relay.Tuple([uop_7516,])
func_7529 = relay.Function([var_7511,var_7512,], output)
mod['func_7529'] = func_7529
mod = relay.transform.InferType()(mod)
mutated_mod['func_7529'] = func_7529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7529_call = mutated_mod.get_global_var('func_7529')
var_7531 = relay.var("var_7531", dtype = "float64", shape = (7, 16, 10))#candidate|7531|(7, 16, 10)|var|float64
var_7532 = relay.var("var_7532", dtype = "float64", shape = (7, 16, 10))#candidate|7532|(7, 16, 10)|var|float64
call_7530 = func_7529_call(var_7531,var_7532,)
output = call_7530
func_7533 = relay.Function([var_7531,var_7532,], output)
mutated_mod['func_7533'] = func_7533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7206_call = mod.get_global_var('func_7206')
func_7208_call = mutated_mod.get_global_var('func_7208')
call_7541 = relay.TupleGetItem(func_7206_call(), 0)
call_7542 = relay.TupleGetItem(func_7208_call(), 0)
output = relay.Tuple([call_7541,])
output2 = relay.Tuple([call_7542,])
func_7589 = relay.Function([], output)
mod['func_7589'] = func_7589
mod = relay.transform.InferType()(mod)
mutated_mod['func_7589'] = func_7589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7589_call = mutated_mod.get_global_var('func_7589')
call_7590 = func_7589_call()
output = call_7590
func_7591 = relay.Function([], output)
mutated_mod['func_7591'] = func_7591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5079_call = mod.get_global_var('func_5079')
func_5080_call = mutated_mod.get_global_var('func_5080')
call_7596 = relay.TupleGetItem(func_5079_call(), 0)
call_7597 = relay.TupleGetItem(func_5080_call(), 0)
const_7608 = relay.const([[[-0.503552,-9.926179,8.505838,-5.323303,-5.587756,0.610005,0.149316],[-1.316055,6.099701,-0.972099,-8.813858,3.985334,4.216869,-5.970232],[4.123865,-4.079307,-1.359069,1.122152,-7.374862,-5.369488,3.176533],[-7.282286,9.506744,-1.787336,7.808115,2.488338,0.289707,-7.401473],[0.305915,-3.697972,1.544779,-1.951801,2.134906,6.695276,6.796932],[2.204160,-9.855347,1.841297,-4.593572,-4.736666,-0.854386,5.558065]],[[-6.966171,-2.326960,6.189875,7.897140,4.934211,-6.003627,5.884699],[-7.700934,5.988251,0.087146,1.567385,-8.217003,-2.825342,-0.287807],[-5.689770,4.759184,5.471104,-7.313245,-9.517764,2.836000,6.301793],[-3.284174,-7.965816,5.066206,-0.321003,7.718557,2.025948,7.785832],[-3.388801,-4.875500,-4.287386,8.506865,5.084580,-5.540572,3.883958],[4.716639,2.863553,1.158416,-8.393969,-7.777939,1.907360,-0.935744]],[[4.986488,3.047118,1.430875,-2.842147,2.343670,-3.390635,6.155238],[-3.146207,-5.526809,1.727647,4.476651,0.418182,7.863074,3.412036],[4.850669,4.554194,5.584371,-6.249697,-5.734794,-9.207343,5.571651],[-5.536657,5.276017,0.635863,-2.221760,-0.001355,-2.362629,2.327085],[8.409390,-6.510108,-5.416648,6.514478,-0.817283,8.684322,-9.457188],[-7.954111,-1.129322,-6.127589,9.319239,2.918168,-3.670464,-3.241134]],[[-2.154076,-8.552343,-8.661736,-1.727047,-4.909979,-4.933498,-3.915310],[4.069631,-2.602203,-5.306422,-7.219429,-6.850889,-4.995256,9.633156],[9.345587,2.323688,4.314893,2.247146,1.937988,-1.878296,6.268312],[-1.993837,-2.667914,-8.097879,-2.316082,2.504862,0.596558,-3.709889],[-9.164745,-1.065528,9.560922,7.981628,8.485313,-2.829198,-7.370026],[-6.821860,-1.593406,1.425796,-4.578452,2.794626,-9.026368,2.078511]],[[-5.147825,-1.383640,8.245006,2.466479,-9.303461,4.794936,5.317730],[-5.861337,6.989935,-9.394186,-1.918178,-6.802927,1.733315,9.943511],[0.737190,-8.580617,-0.991295,-3.938034,0.015955,6.857174,-8.716150],[-8.489533,-0.951125,5.943715,1.529971,2.620759,-5.824597,5.249524],[5.927874,7.900479,8.198536,2.412185,-7.030236,-2.950998,7.296645],[-0.208043,-7.479800,8.975158,5.468848,-6.560307,-4.860362,-8.454828]],[[-5.100326,3.191238,-5.386554,-0.091174,-5.927566,-2.416729,1.904920],[-3.106215,-8.386914,-3.115584,8.727766,2.342070,-4.352943,-8.077775],[-5.243252,8.352957,-8.848478,-4.283089,-9.613320,-2.933551,-9.607983],[3.765379,5.359927,-6.298096,-5.862806,3.594384,9.848473,0.855816],[-9.334188,-1.073693,-4.566355,3.103043,-1.892698,-4.789210,-7.648865],[1.131463,5.423373,-4.665181,8.120370,-7.609086,5.466302,9.939522]],[[-7.723529,5.352108,-5.145535,6.869994,6.352676,4.087966,6.316484],[-1.360232,3.723044,-4.137631,5.341582,9.556256,-8.931225,-8.614453],[6.710546,-5.085698,-0.523576,8.123989,1.628666,-6.059724,8.485356],[4.122703,8.706108,0.872193,9.358994,8.005767,-2.160123,9.118268],[-2.408988,7.863984,-9.065182,4.939356,4.451317,7.465250,-6.100778],[7.251767,-3.452908,-3.496332,1.263277,-4.573018,7.893111,9.242170]],[[-9.416215,-7.315876,-3.441098,6.402372,3.303669,-0.055135,2.487638],[-0.656307,6.633812,0.205172,-7.624063,2.416182,8.293859,-9.642488],[6.098545,8.079462,1.263065,-0.485794,0.149318,-8.479811,-4.326434],[4.953791,-1.100697,6.902095,6.312922,0.336912,-2.166444,7.173952],[-5.135073,6.318008,5.662757,-6.110625,-8.543102,7.534756,-6.415458],[5.722748,-6.159215,-9.605887,-3.787862,-0.893229,-3.562684,2.423214]],[[-3.257336,3.660481,-3.489056,-4.343518,1.246202,-7.783061,4.932278],[8.138523,1.812814,-4.861576,9.000595,1.816879,0.834332,7.931149],[4.477308,-2.727758,-5.655521,3.199975,-7.861891,-1.181991,-6.020183],[-7.246352,-5.660141,0.346570,-6.363511,9.408174,-9.773978,2.674461],[-1.220599,0.984040,8.070557,1.255152,7.428621,-2.990964,-3.362274],[4.865760,-6.505784,-0.164662,8.198529,-0.427174,-5.659926,9.592138]],[[-4.097458,-9.754734,-6.284928,5.812945,7.525453,4.723616,6.621473],[8.506828,-8.149494,-3.384229,-1.741273,-1.632748,-6.159525,6.646426],[-3.537095,4.378085,5.730584,-2.142680,3.081962,9.520679,-7.498858],[-2.215361,-1.191527,-2.413644,-3.825043,7.508034,5.420497,9.562568],[8.055580,-9.266007,1.643086,-2.575170,5.023772,-7.235644,-8.687523],[-8.419193,-6.283860,-4.081037,-0.381839,-4.309145,9.241152,4.600779]],[[6.563716,-1.671025,7.014387,-2.873143,-2.916196,9.389760,3.968507],[1.224273,4.243980,8.159484,-6.323114,-6.003688,-9.211831,0.626477],[1.676092,-6.936134,6.587876,3.467578,-9.073455,-0.802404,-8.081920],[-5.773710,7.931569,-9.833767,9.417803,7.283268,4.454926,-0.877328],[-2.233512,-4.200534,-0.986241,-5.586413,3.895013,-9.637842,1.498410],[2.653361,-2.960837,-3.782019,2.369154,-4.278018,-8.647083,-5.516549]]], dtype = "float64")#candidate|7608|(11, 6, 7)|const|float64
bop_7609 = relay.maximum(call_7596.astype('uint16'), relay.reshape(const_7608.astype('uint16'), relay.shape_of(call_7596))) # shape=(11, 6, 7)
bop_7612 = relay.maximum(call_7597.astype('uint16'), relay.reshape(const_7608.astype('uint16'), relay.shape_of(call_7597))) # shape=(11, 6, 7)
uop_7613 = relay.erf(const_7608.astype('float32')) # shape=(11, 6, 7)
uop_7619 = relay.log10(uop_7613.astype('float64')) # shape=(11, 6, 7)
output = relay.Tuple([bop_7609,uop_7619,])
output2 = relay.Tuple([bop_7612,uop_7619,])
func_7626 = relay.Function([], output)
mod['func_7626'] = func_7626
mod = relay.transform.InferType()(mod)
mutated_mod['func_7626'] = func_7626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7626_call = mutated_mod.get_global_var('func_7626')
call_7627 = func_7626_call()
output = call_7627
func_7628 = relay.Function([], output)
mutated_mod['func_7628'] = func_7628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3690_call = mod.get_global_var('func_3690')
func_3692_call = mutated_mod.get_global_var('func_3692')
call_7656 = relay.TupleGetItem(func_3690_call(), 1)
call_7657 = relay.TupleGetItem(func_3692_call(), 1)
output = relay.Tuple([call_7656,])
output2 = relay.Tuple([call_7657,])
func_7658 = relay.Function([], output)
mod['func_7658'] = func_7658
mod = relay.transform.InferType()(mod)
mutated_mod['func_7658'] = func_7658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7658_call = mutated_mod.get_global_var('func_7658')
call_7659 = func_7658_call()
output = call_7659
func_7660 = relay.Function([], output)
mutated_mod['func_7660'] = func_7660
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7714 = relay.const([[[7,10,3,8]],[[6,1,-10,10]],[[4,9,-2,-5]],[[-4,-3,8,-8]],[[-7,1,-2,8]],[[-2,-9,9,-6]],[[-9,-3,6,4]],[[-6,-8,2,-9]],[[6,-7,-8,-4]],[[5,5,-3,7]],[[6,5,-7,-3]],[[-5,9,-6,-4]],[[-8,-9,-9,1]]], dtype = "int32")#candidate|7714|(13, 1, 4)|const|int32
var_7715 = relay.var("var_7715", dtype = "int32", shape = (13, 16, 4))#candidate|7715|(13, 16, 4)|var|int32
bop_7716 = relay.add(const_7714.astype('int32'), var_7715.astype('int32')) # shape=(13, 16, 4)
func_1802_call = mod.get_global_var('func_1802')
func_1804_call = mutated_mod.get_global_var('func_1804')
call_7725 = relay.TupleGetItem(func_1802_call(), 1)
call_7726 = relay.TupleGetItem(func_1804_call(), 1)
output = relay.Tuple([bop_7716,call_7725,])
output2 = relay.Tuple([bop_7716,call_7726,])
func_7736 = relay.Function([var_7715,], output)
mod['func_7736'] = func_7736
mod = relay.transform.InferType()(mod)
var_7737 = relay.var("var_7737", dtype = "int32", shape = (13, 16, 4))#candidate|7737|(13, 16, 4)|var|int32
output = func_7736(var_7737)
func_7738 = relay.Function([var_7737], output)
mutated_mod['func_7738'] = func_7738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4204_call = mod.get_global_var('func_4204')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_7801 = func_4204_call()
call_7802 = func_4204_call()
output = call_7801
output2 = call_7802
func_7831 = relay.Function([], output)
mod['func_7831'] = func_7831
mod = relay.transform.InferType()(mod)
output = func_7831()
func_7832 = relay.Function([], output)
mutated_mod['func_7832'] = func_7832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6449_call = mod.get_global_var('func_6449')
func_6451_call = mutated_mod.get_global_var('func_6451')
call_7900 = func_6449_call()
call_7901 = func_6449_call()
output = call_7900
output2 = call_7901
func_7904 = relay.Function([], output)
mod['func_7904'] = func_7904
mod = relay.transform.InferType()(mod)
mutated_mod['func_7904'] = func_7904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7904_call = mutated_mod.get_global_var('func_7904')
call_7905 = func_7904_call()
output = call_7905
func_7906 = relay.Function([], output)
mutated_mod['func_7906'] = func_7906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5197_call = mod.get_global_var('func_5197')
func_5199_call = mutated_mod.get_global_var('func_5199')
call_7914 = relay.TupleGetItem(func_5197_call(), 2)
call_7915 = relay.TupleGetItem(func_5199_call(), 2)
func_2429_call = mod.get_global_var('func_2429')
func_2431_call = mutated_mod.get_global_var('func_2431')
call_7937 = relay.TupleGetItem(func_2429_call(), 0)
call_7938 = relay.TupleGetItem(func_2431_call(), 0)
output = relay.Tuple([call_7914,call_7937,])
output2 = relay.Tuple([call_7915,call_7938,])
func_7940 = relay.Function([], output)
mod['func_7940'] = func_7940
mod = relay.transform.InferType()(mod)
output = func_7940()
func_7941 = relay.Function([], output)
mutated_mod['func_7941'] = func_7941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4204_call = mod.get_global_var('func_4204')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_7952 = func_4204_call()
call_7953 = func_4204_call()
func_7422_call = mod.get_global_var('func_7422')
func_7424_call = mutated_mod.get_global_var('func_7424')
call_7958 = func_7422_call()
call_7959 = func_7422_call()
output = relay.Tuple([call_7952,call_7958,])
output2 = relay.Tuple([call_7953,call_7959,])
func_7968 = relay.Function([], output)
mod['func_7968'] = func_7968
mod = relay.transform.InferType()(mod)
mutated_mod['func_7968'] = func_7968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7968_call = mutated_mod.get_global_var('func_7968')
call_7969 = func_7968_call()
output = call_7969
func_7970 = relay.Function([], output)
mutated_mod['func_7970'] = func_7970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2048_call = mod.get_global_var('func_2048')
func_2050_call = mutated_mod.get_global_var('func_2050')
call_8020 = func_2048_call()
call_8021 = func_2048_call()
func_2373_call = mod.get_global_var('func_2373')
func_2375_call = mutated_mod.get_global_var('func_2375')
call_8051 = relay.TupleGetItem(func_2373_call(), 0)
call_8052 = relay.TupleGetItem(func_2375_call(), 0)
func_4444_call = mod.get_global_var('func_4444')
func_4446_call = mutated_mod.get_global_var('func_4446')
var_8070 = relay.var("var_8070", dtype = "float64", shape = (540,))#candidate|8070|(540,)|var|float64
call_8069 = relay.TupleGetItem(func_4444_call(relay.reshape(var_8070.astype('float64'), [15, 9, 4])), 0)
call_8071 = relay.TupleGetItem(func_4446_call(relay.reshape(var_8070.astype('float64'), [15, 9, 4])), 0)
bop_8113 = relay.bitwise_xor(var_8070.astype('int16'), relay.reshape(call_8069.astype('int16'), relay.shape_of(var_8070))) # shape=(540,)
bop_8116 = relay.bitwise_xor(var_8070.astype('int16'), relay.reshape(call_8071.astype('int16'), relay.shape_of(var_8070))) # shape=(540,)
bop_8120 = relay.floor_mod(call_8069.astype('float32'), relay.reshape(var_8070.astype('float32'), relay.shape_of(call_8069))) # shape=(15, 9, 4)
bop_8123 = relay.floor_mod(call_8071.astype('float32'), relay.reshape(var_8070.astype('float32'), relay.shape_of(call_8071))) # shape=(15, 9, 4)
bop_8128 = relay.less_equal(call_8069.astype('bool'), relay.reshape(bop_8113.astype('bool'), relay.shape_of(call_8069))) # shape=(15, 9, 4)
bop_8131 = relay.less_equal(call_8071.astype('bool'), relay.reshape(bop_8116.astype('bool'), relay.shape_of(call_8071))) # shape=(15, 9, 4)
output = relay.Tuple([call_8020,call_8051,bop_8120,bop_8128,])
output2 = relay.Tuple([call_8021,call_8052,bop_8123,bop_8131,])
F = relay.Function([var_8070,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8070,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_3474() -> Tensor[(12, 10, 2), float32] {
  @func_1596() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_4946() -> Tensor[(12, 10, 2), float32] {
  @func_1569() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_5406() -> Tensor[(12, 10, 2), float32] {
  %0 = @func_3421() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float64], Tensor[(1, 5, 6), float32], Tensor[(1, 30), float32], Tensor[(12, 10, 2), float32]) */;
  %0.4
}

def @func_329() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %1 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %2 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %3 = %1.0;
  %4 = %2.0;
  (%3, %4)
}

def @func_6140() -> (Tensor[(12, 10, 2), float32],) {
  %5 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
  (%5,)
}

def @main() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %6 = @func_4498() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(900), uint8], Tensor[(12, 10, 2), float32]) */;
  %7 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %8 = %7.0;
  %9 = cast(%8, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %10 = %6.1;
  %11 = asinh(%9) /* ty=Tensor[(12, 10, 2), float32] */;
  (%10, %11)
}

def @func_10898() -> (Tensor[(12, 10, 2), float32],) {
  %12 = @func_7052() /* ty=Tensor[(12, 10, 2), float32] */;
  (%12,)
}

def @func_9104() -> Tensor[(12, 10, 2), float32] {
  %13 = @func_6987() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(375), bool]) */;
  %13.0
}

def @func_5792(%var_5755: Tensor[(264), bool]) -> (Tensor[(12, 10, 2), float32], Tensor[(264), uint8], Tensor[(12, 10, 2), float32], Tensor[(264), float32]) {
  %14 = @func_1493() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %15 = cast(%var_5755, dtype="bool") /* ty=Tensor[(264), bool] */;
  %16 = cast(%var_5755, dtype="bool") /* ty=Tensor[(264), bool] */;
  %17 = reshape(%15, newshape=[8, 3, 11]) /* ty=Tensor[(8, 3, 11), bool] */;
  %18 = reshape(%16, newshape=[8, 3, 11]) /* ty=Tensor[(8, 3, 11), bool] */;
  %19 = @func_1958(%17, %18) /* ty=(Tensor[(8, 3, 11), bool], Tensor[(12, 10, 2), float32]) */;
  %20 = %19.0;
  %21 = cast(%20, dtype="uint8") /* ty=Tensor[(8, 3, 11), uint8] */;
  %22 = shape_of(%var_5755, dtype="int32") /* ty=Tensor[(1), int32] */;
  %23 = cast(%var_5755, dtype="uint8") /* ty=Tensor[(264), uint8] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %25 = cast(%var_5755, dtype="float32") /* ty=Tensor[(264), float32] */;
  %26 = %14.0;
  %27 = maximum(%23, %24) /* ty=Tensor[(264), uint8] */;
  %28 = @func_3570() /* ty=Tensor[(12, 10, 2), float32] */;
  %29 = asin(%25) /* ty=Tensor[(264), float32] */;
  (%26, %27, %28, %29)
}

def @func_534(%var_524: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), bool],) {
  %30 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %31 = %30.0;
  %32 = cast(%var_524, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(%31, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %36 = greater(%34, %35) /* ty=Tensor[(12, 10, 2), bool] */;
  (%36,)
}

def @func_8522() -> Tensor[(12, 10, 2), float32] {
  @func_5275() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_1661() -> (Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %37 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 1, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 1, 3), float32] */;
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 9, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %39 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %40 = subtract(%37, %38) /* ty=Tensor[(13, 9, 3), float32] */;
  %41 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
  %42 = %39.0;
  (%40, %41, %42)
}

def @func_5028() -> (Tensor[(14, 12, 16), uint32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(18, 50), float64]) {
  %43 = @func_4914() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(14, 12, 16), uint32], Tensor[(12, 10, 2), float32], Tensor[(450, 2), float64], Tensor[(12, 10, 2), float32]) */;
  %44 = cast(meta[relay.Constant][2] /* ty=Tensor[(18, 50), float64] */, dtype="float64") /* ty=Tensor[(18, 50), float64] */;
  %45 = reshape(%44, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %46 = @func_2049(%45) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(900), float64], Tensor[(12, 10, 2), bool]) */;
  %47 = %43.1;
  %48 = @func_3645() /* ty=Tensor[(12, 10, 2), float32] */;
  %49 = %46.0;
  (%47, %48, %49, meta[relay.Constant][2] /* ty=Tensor[(18, 50), float64] */)
}

def @func_7805() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %50 = @func_3947() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %51 = @func_3570() /* ty=Tensor[(12, 10, 2), float32] */;
  %52 = %50.0;
  %53 = @func_3474() /* ty=Tensor[(12, 10, 2), float32] */;
  (%51, %52, %53)
}

def @func_11117(%var_11107: Tensor[(6, 8, 12), float32]) -> (Tensor[(6, 8, 12), float32],) {
  %54 = cast(%var_11107, dtype="float32") /* ty=Tensor[(6, 8, 12), float32] */;
  %55 = erf(%54) /* ty=Tensor[(6, 8, 12), float32] */;
  (%55,)
}

def @func_6598() -> (Tensor[(12, 10, 2), float32],) {
  %56 = @func_1661() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %57 = %56.2;
  (%57,)
}

def @func_7238() -> Tensor[(13, 9, 3), float32] {
  @func_2106() /* ty=Tensor[(13, 9, 3), float32] */
}

def @func_11250(%var_11224: Tensor[(3, 3, 1), float32], %var_11248: Tensor[(351, 1), float32]) -> (Tensor[(3, 3, 1), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int8], Tensor[(13, 9, 3), float32], Tensor[(351, 1), float32]) {
  %58 = cast(%var_11224, dtype="float32") /* ty=Tensor[(3, 3, 1), float32] */;
  %59 = @func_6352() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %60 = @func_9709() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), int32]) */;
  %61 = cast(%var_11248, dtype="float32") /* ty=Tensor[(351, 1), float32] */;
  %62 = reshape(%61, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
  %63 = @func_2278(%62) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) */;
  %64 = sqrt(%58) /* ty=Tensor[(3, 3, 1), float32] */;
  %65 = %59.1;
  %66 = %60.1;
  %67 = %63.0;
  (%64, %65, %66, %67, %var_11248)
}

def @func_961(%var_945: Tensor[(12, 10, 2), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint16], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(12, 10, 2), float32]) {
  %68 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %69 = %68.0;
  %70 = cast(%69, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %71 = cast(%69, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %72 = reshape(%70, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %73 = reshape(%71, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %74 = @func_771(%72, %73) /* ty=(Tensor[(12, 10, 2), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), float64]) */;
  %75 = %74.0;
  %76 = cast(%var_945, dtype="uint16") /* ty=Tensor[(12, 10, 2), uint16] */;
  %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%75, dtype="uint16") /* ty=Tensor[(12, 10, 2), uint16] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %80 = cast(meta[relay.Constant][3] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
  %81 = reshape(%80, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float64] */;
  %82 = @func_921(%81) /* ty=(Tensor[(12, 15, 5), float64], Tensor[(12, 10, 2), float32]) */;
  %83 = %82.0;
  %84 = cast(%83, dtype="float64") /* ty=Tensor[(12, 15, 5), float64] */;
  %85 = reshape(%84, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float64] */;
  %86 = @func_921(%85) /* ty=(Tensor[(12, 15, 5), float64], Tensor[(12, 10, 2), float32]) */;
  %87 = bitwise_or(%78, %79) /* ty=Tensor[(12, 10, 2), uint16] */;
  %88 = %86.1;
  (%69, %87, %83, meta[relay.Constant][3] /* ty=Tensor[(900), float64] */, %88)
}

def @func_3691() -> (Tensor[(12, 10, 2), float32],) {
  %89 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
  (%89,)
}

def @func_5841() -> (Tensor[(12, 10, 2), float32],) {
  %90 = @func_4914() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(14, 12, 16), uint32], Tensor[(12, 10, 2), float32], Tensor[(450, 2), float64], Tensor[(12, 10, 2), float32]) */;
  %91 = %90.4;
  (%91,)
}

def @func_7114() -> Tensor[(3, 9, 12), float32] {
  %92 = cast(meta[relay.Constant][4] /* ty=Tensor[(3, 9, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 9, 12), float32] */;
  sinh(%92) /* ty=Tensor[(3, 9, 12), float32] */
}

def @func_5801() -> Tensor[(12, 10, 2), float32] {
  @func_4650() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_2824(%var_2754: Tensor[(11, 13, 11), float64], %var_2755: Tensor[(11, 13, 11), float64], %var_2785: Tensor[(11, 13, 11), float32], %var_2803: Tensor[(264), bool]) -> (Tensor[(240), float32], uint32, Tensor[(1350), uint32], Tensor[(11, 13, 11), bool], Tensor[(12, 10, 2), float32], Tensor[(264), bool], Tensor[(12, 10, 2), float32], Tensor[(11, 13, 11), float32]) {
  %93 = cast(meta[relay.Constant][5] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %94 = cast(meta[relay.Constant][6] /* ty=Tensor[(1350), uint32] */, dtype="uint32") /* ty=Tensor[(1350), uint32] */;
  %95 = reshape(%93, newshape=[]) /* ty=uint32 */;
  %96 = reshape(%94, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), uint32] */;
  %97 = @func_1858(%95, %96) /* ty=(Tensor[(15, 9, 10), uint32], Tensor[(12, 10, 2), int8], Tensor[(240), float32]) */;
  %98 = cast(%var_2755, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %99 = shape_of(%var_2754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%var_2754, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %102 = power(%100, %101) /* ty=Tensor[(11, 13, 11), float64] */;
  %103 = cast(%102, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %104 = atanh(%103) /* ty=Tensor[(11, 13, 11), float32] */;
  %105 = cast(%var_2785, dtype="bool") /* ty=Tensor[(11, 13, 11), bool] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="bool") /* ty=Tensor[(11, 13, 11), bool] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %109 = cast(%var_2803, dtype="bool") /* ty=Tensor[(264), bool] */;
  %110 = cast(%var_2803, dtype="bool") /* ty=Tensor[(264), bool] */;
  %111 = reshape(%109, newshape=[8, 3, 11]) /* ty=Tensor[(8, 3, 11), bool] */;
  %112 = reshape(%110, newshape=[8, 3, 11]) /* ty=Tensor[(8, 3, 11), bool] */;
  %113 = @func_1958(%111, %112) /* ty=(Tensor[(8, 3, 11), bool], Tensor[(12, 10, 2), float32]) */;
  %114 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %115 = cast(%var_2785, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %116 = erf(%115) /* ty=Tensor[(11, 13, 11), float32] */;
  %117 = cast(%116, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %118 = log10(%117) /* ty=Tensor[(11, 13, 11), float32] */;
  %119 = cast(%118, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %120 = %97.2;
  %121 = logical_and(%107, %108) /* ty=Tensor[(11, 13, 11), bool] */;
  %122 = %113.1;
  %123 = %114.0;
  %124 = exp(%119) /* ty=Tensor[(11, 13, 11), float32] */;
  (%120, meta[relay.Constant][5] /* ty=uint32 */, meta[relay.Constant][6] /* ty=Tensor[(1350), uint32] */, %121, %122, %var_2803, %123, %124)
}

def @func_8815() -> Tensor[(12, 10, 2), float32] {
  %125 = @func_6075() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %125.0
}

def @func_3363() -> Tensor[(13, 9, 3), float32] {
  @func_2106() /* ty=Tensor[(13, 9, 3), float32] */
}

def @func_7711() -> (Tensor[(12, 10, 2), float32],) {
  %126 = @func_4419() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */;
  %127 = %126.0;
  (%127,)
}

def @func_2543(%var_2479: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), uint64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float64]) {
  %128 = @func_1737() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %129 = %128.0;
  %130 = cast(%var_2479, dtype="uint64") /* ty=Tensor[(12, 10, 2), uint64] */;
  %131 = shape_of(%129, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%129, dtype="uint64") /* ty=Tensor[(12, 10, 2), uint64] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %134 = @func_1820() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %135 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %136 = cast(%129, dtype="float64") /* ty=Tensor[(12, 10, 2), float64] */;
  %137 = cos(%136) /* ty=Tensor[(12, 10, 2), float64] */;
  %138 = cast(%137, dtype="float64") /* ty=Tensor[(12, 10, 2), float64] */;
  %139 = add(%132, %133) /* ty=Tensor[(12, 10, 2), uint64] */;
  %140 = %134.0;
  %141 = %135.0;
  %142 = tan(%138) /* ty=Tensor[(12, 10, 2), float64] */;
  (%139, %140, %141, %142)
}

def @func_9339(%var_9321: Tensor[(4, 3, 9), uint16], %var_9322: Tensor[(4, 3, 9), uint16]) -> (Tensor[(4, 3, 9), uint16],) {
  %143 = cast(%var_9322, dtype="uint16") /* ty=Tensor[(4, 3, 9), uint16] */;
  %144 = shape_of(%var_9321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%var_9321, dtype="uint16") /* ty=Tensor[(4, 3, 9), uint16] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %147 = maximum(%145, %146) /* ty=Tensor[(4, 3, 9), uint16] */;
  (%147,)
}

def @func_8922() -> (Tensor[(12, 10, 2), float32],) {
  %148 = @func_1137() /* ty=Tensor[(12, 10, 2), float32] */;
  (%148,)
}

def @func_5236() -> Tensor[(12, 10, 2), float32] {
  @func_1642() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_4611() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %149 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %150 = @func_2388() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %151 = %149.0;
  %152 = %150.0;
  (%151, %152)
}

def @func_9763(%var_9749: Tensor[(12, 13, 13), float64]) -> (Tensor[(12, 13, 13), bool], Tensor[(12, 10, 2), float32]) {
  %153 = cast(%var_9749, dtype="bool") /* ty=Tensor[(12, 13, 13), bool] */;
  %154 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(12, 13, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 13, 13), float64] */, dtype="bool") /* ty=Tensor[(12, 13, 13), bool] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %157 = less(%155, %156) /* ty=Tensor[(12, 13, 13), bool] */;
  %158 = cast(%157, dtype="bool") /* ty=Tensor[(12, 13, 13), bool] */;
  %159 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(12, 13, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 13, 13), float64] */, dtype="bool") /* ty=Tensor[(12, 13, 13), bool] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %162 = @func_2388() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %163 = greater_equal(%160, %161) /* ty=Tensor[(12, 13, 13), bool] */;
  %164 = %162.0;
  (%163, %164)
}

def @func_3001(%var_2991: Tensor[(30), float32]) -> (Tensor[(13, 9, 3), float32], Tensor[(1, 5, 6), float32], Tensor[(30), float32], Tensor[(1, 5, 6), float32]) {
  %165 = cast(%var_2991, dtype="float32") /* ty=Tensor[(30), float32] */;
  %166 = reshape(%165, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float32] */;
  %167 = @func_2856(%166) /* ty=(Tensor[(1, 5, 6), float32],) */;
  %168 = %167.0;
  %169 = cast(%168, dtype="float32") /* ty=Tensor[(1, 5, 6), float32] */;
  %170 = reshape(%169, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float32] */;
  %171 = @func_2856(%170) /* ty=(Tensor[(1, 5, 6), float32],) */;
  %172 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  %173 = %171.0;
  (%172, %168, %var_2991, %173)
}

def @func_8549() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %174 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %175 = @func_1642() /* ty=Tensor[(12, 10, 2), float32] */;
  %176 = %174.0;
  (%175, %176)
}

def @func_3460() -> Tensor[(12, 10, 2), float32] {
  %177 = @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %177.1
}

def @func_9592() -> (Tensor[(4, 10, 12), int64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), uint64]) {
  %178 = @func_9312() /* ty=(Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float64], Tensor[(12, 10, 2), float32]) */;
  %179 = %178.0;
  %180 = cast(%179, dtype="int64") /* ty=Tensor[(4, 10, 1), int64] */;
  %181 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 10, 12), float64] */, dtype="int64") /* ty=Tensor[(4, 10, 12), int64] */;
  %182 = @func_8483() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32]) */;
  %183 = @func_7238() /* ty=Tensor[(13, 9, 3), float32] */;
  %184 = cast(%183, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %185 = log10(%184) /* ty=Tensor[(13, 9, 3), float32] */;
  %186 = cast(%183, dtype="uint64") /* ty=Tensor[(13, 9, 3), uint64] */;
  %187 = shape_of(%185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%185, dtype="uint64") /* ty=Tensor[(13, 9, 3), uint64] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %190 = subtract(%180, %181) /* ty=Tensor[(4, 10, 12), int64] */;
  %191 = @func_4650() /* ty=Tensor[(12, 10, 2), float32] */;
  %192 = %182.0;
  %193 = left_shift(%188, %189) /* ty=Tensor[(13, 9, 3), uint64] */;
  (%190, %191, %192, %193)
}

def @func_4821() -> (Tensor[(13, 9, 3), float32], Tensor[(13, 5, 14), float64], Tensor[(91, 10), float64]) {
  %194 = @func_4419() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */;
  %195 = cast(meta[relay.Constant][9] /* ty=Tensor[(91, 10), float64] */, dtype="float64") /* ty=Tensor[(91, 10), float64] */;
  %196 = reshape(%195, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
  %197 = %194.2;
  %198 = @func_3616(%196) /* ty=Tensor[(13, 5, 14), float64] */;
  (%197, %198, meta[relay.Constant][9] /* ty=Tensor[(91, 10), float64] */)
}

def @func_3826() -> Tensor[(12, 10, 2), float32] {
  %199 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %199.0
}

def @func_1263() -> Tensor[(12, 10, 2), float32] {
  %200 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %200.0
}

def @func_8841() -> Tensor[(12, 10, 2), float32] {
  %201 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %201.0
}

def @func_1539() -> Tensor[(12, 10, 2), float32] {
  %202 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %202.1
}

def @func_8215() -> Tensor[(12, 10, 2), float32] {
  @func_5275() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_422() -> (Tensor[(12, 10, 2), float32],) {
  %203 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %204 = %203.0;
  (%204,)
}

def @func_1858(%var_1826: uint32, %var_1827: Tensor[(15, 9, 10), uint32]) -> (Tensor[(15, 9, 10), uint32], Tensor[(12, 10, 2), int8], Tensor[(240), float32]) {
  %205 = cast(%var_1826, dtype="uint32") /* ty=uint32 */;
  %206 = cast(%var_1827, dtype="uint32") /* ty=Tensor[(15, 9, 10), uint32] */;
  %207 = cast(meta[relay.Constant][10] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %208 = reshape(%207, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %209 = @func_400(%208) /* ty=(Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) */;
  %210 = multiply(%205, %206) /* ty=Tensor[(15, 9, 10), uint32] */;
  %211 = %209.0;
  (%210, %211, meta[relay.Constant][10] /* ty=Tensor[(240), float32] */)
}

def @func_10714() -> Tensor[(12, 10, 2), float32] {
  %212 = @func_10015() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %212.0
}

def @func_10837() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %213 = @func_2388() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %214 = @func_6371() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %215 = @func_4572() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %216 = %213.0;
  %217 = %214.0;
  %218 = %215.2;
  (%216, %217, %218)
}

def @func_6380() -> Tensor[(12, 10, 2), float32] {
  %219 = @func_1820() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %219.0
}

def @func_6400() -> (Tensor[(12, 10, 2), float32],) {
  %220 = @func_4650() /* ty=Tensor[(12, 10, 2), float32] */;
  %221 = cast(%220, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %222 = atan(%221) /* ty=Tensor[(12, 10, 2), float32] */;
  (%222,)
}

def @func_2049(%var_1999: Tensor[(900), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(900), float64], Tensor[(12, 10, 2), bool]) {
  %223 = @func_1737() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %224 = %223.0;
  %225 = cast(%var_1999, dtype="float64") /* ty=Tensor[(900), float64] */;
  %226 = reshape(%225, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float64] */;
  %227 = @func_921(%226) /* ty=(Tensor[(12, 15, 5), float64], Tensor[(12, 10, 2), float32]) */;
  %228 = %227.1;
  %229 = cast(%228, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %230 = shape_of(%224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%224, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %233 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
  %234 = logical_and(%231, %232) /* ty=Tensor[(12, 10, 2), bool] */;
  (%233, %var_1999, %234)
}

def @func_6987() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(375), bool]) {
  %235 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %236 = cast(meta[relay.Constant][11] /* ty=Tensor[(375), bool] */, dtype="bool") /* ty=Tensor[(375), bool] */;
  %237 = reshape(%236, newshape=[5, 15, 5]) /* ty=Tensor[(5, 15, 5), bool] */;
  %238 = @func_3113(%237) /* ty=(Tensor[(5, 15, 5), bool], Tensor[(12, 10, 2), float32]) */;
  %239 = %235.0;
  %240 = %238.1;
  (%239, %240, meta[relay.Constant][11] /* ty=Tensor[(375), bool] */)
}

def @func_9187() -> (Tensor[(12, 10, 2), float32],) {
  %241 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %242 = %241.1;
  (%242,)
}

def @func_4650() -> Tensor[(12, 10, 2), float32] {
  @func_3570() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_400(%var_380: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) {
  %243 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %244 = %243.0;
  %245 = cast(%var_380, dtype="int8") /* ty=Tensor[(12, 10, 2), int8] */;
  %246 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%244, dtype="int8") /* ty=Tensor[(12, 10, 2), int8] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %249 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %250 = minimum(%247, %248) /* ty=Tensor[(12, 10, 2), int8] */;
  %251 = %249.0;
  (%250, %251)
}

def @func_3947() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %252 = @func_1029() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %253 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %254 = %252.0;
  %255 = %253.0;
  (%254, %255)
}

def @func_7518() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(1440), float64]) {
  %256 = cast(meta[relay.Constant][12] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %257 = @func_5258() /* ty=Tensor[(12, 10, 2), float32] */;
  %258 = cast(%257, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %259 = reshape(%256, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %260 = reshape(%258, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %261 = @func_3178(%259, %260) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(12, 10, 2), bool], Tensor[(240), float32]) */;
  %262 = %261.1;
  (%257, %262, meta[relay.Constant][12] /* ty=Tensor[(1440), float64] */)
}

def @func_7132(%var_7122: Tensor[(14, 1, 2), uint64], %var_7123: Tensor[(14, 10, 2), uint64]) -> Tensor[(14, 10, 2), uint64] {
  %263 = cast(%var_7122, dtype="uint64") /* ty=Tensor[(14, 1, 2), uint64] */;
  %264 = cast(%var_7123, dtype="uint64") /* ty=Tensor[(14, 10, 2), uint64] */;
  bitwise_xor(%263, %264) /* ty=Tensor[(14, 10, 2), uint64] */
}

def @func_7682() -> (Tensor[(12, 10, 2), float32],) {
  %265 = @func_3460() /* ty=Tensor[(12, 10, 2), float32] */;
  (%265,)
}

def @func_1569() -> Tensor[(12, 10, 2), float32] {
  %266 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %266.0
}

def @func_2197() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %267 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %268 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %269 = %267.0;
  %270 = %268.0;
  (%269, %270)
}

def @func_2573() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %271 = @func_1382() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %272 = @func_1539() /* ty=Tensor[(12, 10, 2), float32] */;
  %273 = %271.1;
  (%272, %273)
}

def @func_4380() -> Tensor[(12, 10, 2), float32] {
  %274 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %274.0
}

def @func_6203() -> (Tensor[(12, 10, 2), float32],) {
  %275 = @func_1737() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %276 = %275.0;
  (%276,)
}

def @func_9896() -> (Tensor[(12, 10, 2), float32],) {
  %277 = @func_9187() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %278 = %277.0;
  (%278,)
}

def @func_303() -> (Tensor[(12, 10, 2), float32],) {
  %279 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %280 = %279.0;
  (%280,)
}

def @func_4093() -> (Tensor[(12, 10, 2), float32],) {
  %281 = @func_2573() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %282 = %281.1;
  (%282,)
}

def @func_4676() -> (Tensor[(13, 9, 3), float32],) {
  %283 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  (%283,)
}

def @func_921(%var_907: Tensor[(12, 15, 5), float64]) -> (Tensor[(12, 15, 5), float64], Tensor[(12, 10, 2), float32]) {
  %284 = cast(%var_907, dtype="float64") /* ty=Tensor[(12, 15, 5), float64] */;
  %285 = exp(%284) /* ty=Tensor[(12, 15, 5), float64] */;
  %286 = cast(%285, dtype="float64") /* ty=Tensor[(12, 15, 5), float64] */;
  %287 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %288 = atanh(%286) /* ty=Tensor[(12, 15, 5), float64] */;
  %289 = %287.0;
  (%288, %289)
}

def @func_10719() -> Tensor[(12, 10, 2), float32] {
  @func_6155() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_10000() -> (Tensor[(4, 6, 7), float64], Tensor[(12, 10, 2), float32]) {
  %290 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %291 = asinh(%290) /* ty=Tensor[(4, 6, 7), float64] */;
  %292 = cast(%291, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %293 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(4, 6, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %296 = floor_divide(%294, %295) /* ty=Tensor[(4, 6, 7), float64] */;
  %297 = @func_3570() /* ty=Tensor[(12, 10, 2), float32] */;
  (%296, %297)
}

def @func_8301() -> Tensor[(12, 10, 2), float32] {
  @func_5050() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_2966() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) {
  %298 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %299 = @func_1263() /* ty=Tensor[(12, 10, 2), float32] */;
  %300 = @func_1493() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %301 = %300.0;
  %302 = cast(%301, dtype="int32") /* ty=Tensor[(12, 10, 2), int32] */;
  %303 = shape_of(%299, dtype="int32") /* ty=Tensor[(3), int32] */;
  %304 = cast(%299, dtype="int32") /* ty=Tensor[(12, 10, 2), int32] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %306 = cast(meta[relay.Constant][14] /* ty=Tensor[(2688), uint16] */, dtype="uint16") /* ty=Tensor[(2688), uint16] */;
  %307 = cast(meta[relay.Constant][14] /* ty=Tensor[(2688), uint16] */, dtype="uint16") /* ty=Tensor[(2688), uint16] */;
  %308 = reshape(%306, newshape=[14, 12, 16]) /* ty=Tensor[(14, 12, 16), uint16] */;
  %309 = reshape(%307, newshape=[14, 12, 16]) /* ty=Tensor[(14, 12, 16), uint16] */;
  %310 = @func_2464(%308, %309) /* ty=(Tensor[(14, 12, 16), bool], Tensor[(14, 12, 16), float32], Tensor[(12, 10, 2), bool], Tensor[(240), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %311 = %310.0;
  %312 = cast(%311, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
  %313 = asin(%312) /* ty=Tensor[(14, 12, 16), float32] */;
  %314 = cast(meta[relay.Constant][14] /* ty=Tensor[(2688), uint16] */, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %315 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%313, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %318 = %298.0;
  %319 = left_shift(%304, %305) /* ty=Tensor[(12, 10, 2), int32] */;
  %320 = greater_equal(%316, %317) /* ty=Tensor[(14, 12, 16), bool] */;
  (%318, %319, %320)
}

def @func_3645() -> Tensor[(12, 10, 2), float32] {
  @func_3460() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_6371() -> (Tensor[(12, 10, 2), float32],) {
  %321 = @func_5236() /* ty=Tensor[(12, 10, 2), float32] */;
  (%321,)
}

def @func_884() -> (Tensor[(12, 10, 2), float32],) {
  %322 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %323 = %322.0;
  (%323,)
}

def @func_4074() -> Tensor[(14, 12, 16), bool] {
  %324 = @func_2966() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) */;
  %324.2
}

def @func_4914() -> (Tensor[(12, 10, 2), float32], Tensor[(14, 12, 16), uint32], Tensor[(12, 10, 2), float32], Tensor[(450, 2), float64], Tensor[(12, 10, 2), float32]) {
  %325 = @func_2966() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) */;
  %326 = %325.2;
  %327 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 12, 16), bool] */, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
  %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%326, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %331 = divide(%329, %330) /* ty=Tensor[(14, 12, 16), float32] */;
  %332 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 12, 16), bool] */, dtype="uint32") /* ty=Tensor[(14, 12, 16), uint32] */;
  %333 = shape_of(%331, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%331, dtype="uint32") /* ty=Tensor[(14, 12, 16), uint32] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %336 = cast(meta[relay.Constant][16] /* ty=Tensor[(450, 2), float64] */, dtype="float64") /* ty=Tensor[(450, 2), float64] */;
  %337 = reshape(%336, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %338 = @func_2049(%337) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(900), float64], Tensor[(12, 10, 2), bool]) */;
  %339 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %340 = @func_1137() /* ty=Tensor[(12, 10, 2), float32] */;
  %341 = bitwise_xor(%334, %335) /* ty=Tensor[(14, 12, 16), uint32] */;
  %342 = %338.0;
  %343 = %339.0;
  (%340, %341, %342, meta[relay.Constant][16] /* ty=Tensor[(450, 2), float64] */, %343)
}

def @func_4162(%var_4156: Tensor[(13, 8, 4), float32]) -> (Tensor[(13, 8, 4), bool],) {
  %344 = cast(%var_4156, dtype="float32") /* ty=Tensor[(13, 8, 4), float32] */;
  %345 = atanh(%344) /* ty=Tensor[(13, 8, 4), float32] */;
  %346 = cast(%345, dtype="bool") /* ty=Tensor[(13, 8, 4), bool] */;
  %347 = shape_of(%var_4156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%var_4156, dtype="bool") /* ty=Tensor[(13, 8, 4), bool] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %350 = logical_or(%348, %349) /* ty=Tensor[(13, 8, 4), bool] */;
  (%350,)
}

def @func_9265(%var_9192: Tensor[(14, 7, 6), int32], %var_9193: Tensor[(14, 7, 6), int32]) -> (Tensor[(14, 7, 6), float32], Tensor[(16, 13, 13), int32], Tensor[(2704), int32], Tensor[(14, 7, 6), float32], Tensor[(14, 7, 6), bool], Tensor[(14, 7, 6), float64], Tensor[(12, 10, 2), float32]) {
  %351 = cast(%var_9193, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %352 = log2(%351) /* ty=Tensor[(14, 7, 6), float64] */;
  %353 = cast(%352, dtype="float32") /* ty=Tensor[(14, 7, 6), float32] */;
  %354 = cast(meta[relay.Constant][17] /* ty=Tensor[(2704), int32] */, dtype="int32") /* ty=Tensor[(2704), int32] */;
  %355 = reshape(%354, newshape=[16, 13, 13]) /* ty=Tensor[(16, 13, 13), int32] */;
  %356 = cast(%var_9193, dtype="int32") /* ty=Tensor[(14, 7, 6), int32] */;
  %357 = shape_of(%var_9192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %358 = cast(%var_9192, dtype="int32") /* ty=Tensor[(14, 7, 6), int32] */;
  %359 = dyn.reshape(%356, %357, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %360 = left_shift(%358, %359) /* ty=Tensor[(14, 7, 6), int32] */;
  %361 = cast(%360, dtype="float32") /* ty=Tensor[(14, 7, 6), float32] */;
  %362 = cast(%352, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %363 = sin(%362) /* ty=Tensor[(14, 7, 6), float64] */;
  %364 = cast(%352, dtype="bool") /* ty=Tensor[(14, 7, 6), bool] */;
  %365 = shape_of(%363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%363, dtype="bool") /* ty=Tensor[(14, 7, 6), bool] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %368 = cast(%var_9192, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %369 = shape_of(%var_9193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%var_9193, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %372 = divide(%370, %371) /* ty=Tensor[(14, 7, 6), float64] */;
  %373 = cast(%372, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %374 = atan(%373) /* ty=Tensor[(14, 7, 6), float64] */;
  %375 = cast(%374, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %376 = @func_4093() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %377 = sqrt(%353) /* ty=Tensor[(14, 7, 6), float32] */;
  %378 = @func_7895(%355) /* ty=Tensor[(16, 13, 13), int32] */;
  %379 = exp(%361) /* ty=Tensor[(14, 7, 6), float32] */;
  %380 = greater(%366, %367) /* ty=Tensor[(14, 7, 6), bool] */;
  %381 = sigmoid(%375) /* ty=Tensor[(14, 7, 6), float64] */;
  %382 = %376.0;
  (%377, %378, meta[relay.Constant][17] /* ty=Tensor[(2704), int32] */, %379, %380, %381, %382)
}

def @func_10474() -> (Tensor[(12, 10, 2), float32],) {
  %383 = @func_4093() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %384 = %383.0;
  (%384,)
}

def @func_2732(%var_2720: uint8, %var_2721: Tensor[(14, 11, 3), uint8]) -> (Tensor[(14, 11, 3), bool],) {
  %385 = cast(%var_2720, dtype="bool") /* ty=bool */;
  %386 = cast(%var_2721, dtype="bool") /* ty=Tensor[(14, 11, 3), bool] */;
  %387 = less(%385, %386) /* ty=Tensor[(14, 11, 3), bool] */;
  (%387,)
}

def @func_3920(%var_3907: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), uint8],) {
  %388 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %389 = %388.0;
  %390 = cast(%var_3907, dtype="uint8") /* ty=Tensor[(12, 10, 2), uint8] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="uint8") /* ty=Tensor[(12, 10, 2), uint8] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %394 = bitwise_and(%392, %393) /* ty=Tensor[(12, 10, 2), uint8] */;
  (%394,)
}

def @func_869() -> Tensor[(12, 10, 2), float32] {
  %395 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %395.0
}

def @func_1493() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %396 = @func_1382() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %397 = @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %398 = %396.1;
  %399 = %397.1;
  %400 = @func_1263() /* ty=Tensor[(12, 10, 2), float32] */;
  %401 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
  (%398, %399, %400, %401)
}

def @func_5139(%var_5133: Tensor[(3, 300), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(3, 300), float64]) {
  %402 = cast(%var_5133, dtype="float64") /* ty=Tensor[(3, 300), float64] */;
  %403 = reshape(%402, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %404 = @func_2049(%403) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(900), float64], Tensor[(12, 10, 2), bool]) */;
  %405 = @func_4650() /* ty=Tensor[(12, 10, 2), float32] */;
  %406 = %404.2;
  (%405, %406, %var_5133)
}

def @func_10641() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %407 = @func_6400() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %408 = %407.0;
  %409 = @func_5406() /* ty=Tensor[(12, 10, 2), float32] */;
  (%408, %409)
}

def @func_10189() -> (Tensor[(3, 9, 12), float32], Tensor[(12, 10, 2), float32]) {
  %410 = @func_8483() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32]) */;
  %411 = @func_7114() /* ty=Tensor[(3, 9, 12), float32] */;
  %412 = %410.1;
  (%411, %412)
}

def @func_8970() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %413 = @func_1820() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %414 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %415 = %413.0;
  %416 = %414.0;
  (%415, %416)
}

def @func_10675() -> Tensor[(12, 10, 2), float32] {
  @func_8301() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_10686(%var_10683: Tensor[(1, 2028), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 13, 13), bool], Tensor[(1, 2028), float64]) {
  %417 = cast(%var_10683, dtype="float64") /* ty=Tensor[(1, 2028), float64] */;
  %418 = reshape(%417, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float64] */;
  %419 = @func_9763(%418) /* ty=(Tensor[(12, 13, 13), bool], Tensor[(12, 10, 2), float32]) */;
  %420 = @func_5406() /* ty=Tensor[(12, 10, 2), float32] */;
  %421 = %419.0;
  (%420, %421, %var_10683)
}

def @func_1137() -> Tensor[(12, 10, 2), float32] {
  %422 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %423 = %422.0;
  %424 = cast(%423, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  erf(%424) /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_5039() -> (Tensor[(13, 9, 3), float32],) {
  %425 = @func_3794() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) */;
  %426 = %425.1;
  (%426,)
}

def @func_5426(%var_5423: Tensor[(7, 1, 12), float64]) -> Tensor[(7, 1, 12), float64] {
  %427 = cast(%var_5423, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
  tan(%427) /* ty=Tensor[(7, 1, 12), float64] */
}

def @func_6540() -> (Tensor[(12, 10, 2), float32],) {
  %428 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %429 = %428.1;
  (%429,)
}

def @func_8401(%var_8354: Tensor[(784), int8], %var_8387: Tensor[(8, 14, 7), int32]) -> (Tensor[(12, 10, 2), float32], Tensor[(8, 14, 7), bool]) {
  %430 = cast(%var_8354, dtype="int8") /* ty=Tensor[(784), int8] */;
  %431 = cast(%var_8354, dtype="int8") /* ty=Tensor[(784), int8] */;
  %432 = reshape(%430, newshape=[8, 14, 7]) /* ty=Tensor[(8, 14, 7), int8] */;
  %433 = reshape(%431, newshape=[8, 14, 7]) /* ty=Tensor[(8, 14, 7), int8] */;
  %434 = @func_7950(%432, %433) /* ty=(Tensor[(8, 14, 7), bool],) */;
  %435 = %434.0;
  %436 = cast(%var_8354, dtype="int32") /* ty=Tensor[(784), int32] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%435, dtype="int32") /* ty=Tensor[(8, 14, 7), int32] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %440 = right_shift(%438, %439) /* ty=Tensor[(8, 14, 7), int32] */;
  %441 = cast(%var_8387, dtype="bool") /* ty=Tensor[(8, 14, 7), bool] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%440, dtype="bool") /* ty=Tensor[(8, 14, 7), bool] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %445 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
  %446 = not_equal(%443, %444) /* ty=Tensor[(8, 14, 7), bool] */;
  (%445, %446)
}

def @func_5568() -> (Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(1, 30), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint8], Tensor[(12, 10, 2), int8]) {
  %447 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 30), float32] */, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
  %448 = reshape(%447, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float32] */;
  %449 = @func_2856(%448) /* ty=(Tensor[(1, 5, 6), float32],) */;
  %450 = @func_4419() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */;
  %451 = %450.1;
  %452 = cast(%451, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %453 = reshape(%452, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %454 = @func_3920(%453) /* ty=(Tensor[(12, 10, 2), uint8],) */;
  %455 = @func_5050() /* ty=Tensor[(12, 10, 2), float32] */;
  %456 = cast(%455, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %457 = reshape(%456, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %458 = @func_400(%457) /* ty=(Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) */;
  %459 = %449.0;
  %460 = %454.0;
  %461 = %458.0;
  (%455, %459, meta[relay.Constant][18] /* ty=Tensor[(1, 30), float32] */, %451, %460, %461)
}

def @func_4572() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %462 = @func_1661() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %463 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %464 = @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %465 = %462.2;
  %466 = %463.1;
  %467 = %464.1;
  %468 = @func_3450() /* ty=Tensor[(12, 10, 2), float32] */;
  (%465, %466, %467, %468)
}

def @func_1820() -> (Tensor[(12, 10, 2), float32],) {
  %469 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %470 = %469.0;
  (%470,)
}

def @func_3038() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %471 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %472 = @func_1661() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %473 = @func_2237() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %474 = %472.0;
  %475 = cast(%474, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %476 = reshape(%475, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
  %477 = @func_2278(%476) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) */;
  %478 = %471.0;
  %479 = @func_1539() /* ty=Tensor[(12, 10, 2), float32] */;
  %480 = %473.0;
  %481 = %477.1;
  (%478, %479, %474, %480, %481)
}

def @func_6516() -> (Tensor[(7, 5, 9), float32],) {
  %482 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
  %483 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(7, 5, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %486 = divide(%484, %485) /* ty=Tensor[(7, 5, 9), float32] */;
  (%486,)
}

def @func_9122() -> (Tensor[(12, 10, 2), float32],) {
  %487 = @func_7052() /* ty=Tensor[(12, 10, 2), float32] */;
  (%487,)
}

def @func_7982() -> (Tensor[(16, 3, 4), float32], Tensor[(4, 10, 1), float64]) {
  %488 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 3, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
  %489 = log(%488) /* ty=Tensor[(16, 3, 4), float32] */;
  %490 = @func_6046() /* ty=Tensor[(4, 10, 1), float64] */;
  (%489, %490)
}

def @func_10058() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %491 = @func_8549() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %492 = @func_6598() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %493 = @func_2237() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %494 = %491.1;
  %495 = %492.0;
  %496 = %493.0;
  (%494, %495, %496)
}

def @func_8904() -> (Tensor[(16, 3, 4), uint64], Tensor[(16, 3, 4), float32]) {
  %497 = @func_7982() /* ty=(Tensor[(16, 3, 4), float32], Tensor[(4, 10, 1), float64]) */;
  %498 = %497.0;
  %499 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 3, 4), float32] */, dtype="bool") /* ty=Tensor[(16, 3, 4), bool] */;
  %500 = shape_of(%498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %501 = cast(%498, dtype="bool") /* ty=Tensor[(16, 3, 4), bool] */;
  %502 = dyn.reshape(%499, %500, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %503 = greater_equal(%501, %502) /* ty=Tensor[(16, 3, 4), bool] */;
  %504 = cast(%503, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
  %505 = rsqrt(%504) /* ty=Tensor[(16, 3, 4), float64] */;
  %506 = cast(%505, dtype="uint64") /* ty=Tensor[(16, 3, 4), uint64] */;
  %507 = shape_of(%498, dtype="int32") /* ty=Tensor[(3), int32] */;
  %508 = cast(%498, dtype="uint64") /* ty=Tensor[(16, 3, 4), uint64] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %510 = cast(%498, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
  %511 = add(%508, %509) /* ty=Tensor[(16, 3, 4), uint64] */;
  %512 = cosh(%510) /* ty=Tensor[(16, 3, 4), float32] */;
  (%511, %512)
}

def @func_10598() -> Tensor[(12, 10, 2), float32] {
  @func_1642() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_6449(%var_6427: Tensor[(12, 3, 15), float32]) -> (Tensor[(12, 3, 15), float32], Tensor[(14, 12, 16), bool], Tensor[(12, 10, 2), float32]) {
  %513 = cast(%var_6427, dtype="float32") /* ty=Tensor[(12, 3, 15), float32] */;
  %514 = @func_3583() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %515 = sqrt(%513) /* ty=Tensor[(12, 3, 15), float32] */;
  %516 = @func_4074() /* ty=Tensor[(14, 12, 16), bool] */;
  %517 = %514.0;
  (%515, %516, %517)
}

def @func_4856(%var_4841: Tensor[(7, 7, 6), float32]) -> Tensor[(7, 7, 6), float32] {
  %518 = cast(%var_4841, dtype="float32") /* ty=Tensor[(7, 7, 6), float32] */;
  log(%518) /* ty=Tensor[(7, 7, 6), float32] */
}

def @func_10327() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(117, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 3, 15), float32], Tensor[(540), float32], Tensor[(12, 10, 2), float32]) {
  %519 = @func_3991() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %520 = @func_3038() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %521 = cast(meta[relay.Constant][23] /* ty=Tensor[(117, 3), float32] */, dtype="float32") /* ty=Tensor[(117, 3), float32] */;
  %522 = reshape(%521, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
  %523 = @func_4296(%522) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), int64], Tensor[(12, 10, 2), float32]) */;
  %524 = @func_2388() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %525 = @func_4572() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %526 = cast(meta[relay.Constant][24] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %527 = reshape(%526, newshape=[12, 3, 15]) /* ty=Tensor[(12, 3, 15), float32] */;
  %528 = @func_6449(%527) /* ty=(Tensor[(12, 3, 15), float32], Tensor[(14, 12, 16), bool], Tensor[(12, 10, 2), float32]) */;
  %529 = @func_7805() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %530 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
  %531 = %519.0;
  %532 = %520.1;
  %533 = @func_3433() /* ty=Tensor[(12, 10, 2), float32] */;
  %534 = %523.1;
  %535 = %524.0;
  %536 = %525.1;
  %537 = %528.0;
  %538 = %529.1;
  (%530, %531, %532, %533, %534, meta[relay.Constant][23] /* ty=Tensor[(117, 3), float32] */, %535, %536, %537, meta[relay.Constant][24] /* ty=Tensor[(540), float32] */, %538)
}

def @func_5930() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(30), float32], Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(12, 10, 2), float32]) {
  %539 = @func_1737() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %540 = @func_5660() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */;
  %541 = %539.0;
  %542 = cast(%541, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %543 = reshape(%542, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %544 = @func_1935(%543) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %545 = cast(meta[relay.Constant][25] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %546 = reshape(%545, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float32] */;
  %547 = @func_2856(%546) /* ty=(Tensor[(1, 5, 6), float32],) */;
  %548 = %547.0;
  %549 = cast(%548, dtype="float32") /* ty=Tensor[(1, 5, 6), float32] */;
  %550 = %540.0;
  %551 = %544.1;
  %552 = atan(%549) /* ty=Tensor[(1, 5, 6), float32] */;
  %553 = @func_1137() /* ty=Tensor[(12, 10, 2), float32] */;
  (%541, %550, meta[relay.Constant][25] /* ty=Tensor[(30), float32] */, %551, %552, %553)
}

def @func_8693() -> (Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) {
  %554 = @func_8522() /* ty=Tensor[(12, 10, 2), float32] */;
  %555 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  (%554, %555)
}

def @func_771(%var_734: Tensor[(12, 10, 2), float32], %var_751: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), float64]) {
  %556 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %557 = %556.0;
  %558 = cast(%var_734, dtype="float64") /* ty=Tensor[(12, 10, 2), float64] */;
  %559 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%557, dtype="float64") /* ty=Tensor[(12, 10, 2), float64] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %562 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %563 = cast(%557, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %564 = log2(%563) /* ty=Tensor[(12, 10, 2), float32] */;
  %565 = cast(%var_751, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%564, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %569 = cast(%564, dtype="float64") /* ty=Tensor[(12, 10, 2), float64] */;
  %570 = floor_mod(%560, %561) /* ty=Tensor[(12, 10, 2), float64] */;
  %571 = %562.0;
  %572 = less(%567, %568) /* ty=Tensor[(12, 10, 2), bool] */;
  %573 = asin(%569) /* ty=Tensor[(12, 10, 2), float64] */;
  (%570, %571, %572, %573)
}

def @func_3113(%var_3102: Tensor[(5, 15, 5), bool]) -> (Tensor[(5, 15, 5), bool], Tensor[(12, 10, 2), float32]) {
  %574 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 15, 5), bool] */, dtype="bool") /* ty=Tensor[(5, 15, 5), bool] */;
  %575 = shape_of(%var_3102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%var_3102, dtype="bool") /* ty=Tensor[(5, 15, 5), bool] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %578 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %579 = logical_and(%576, %577) /* ty=Tensor[(5, 15, 5), bool] */;
  %580 = %578.0;
  (%579, %580)
}

def @func_9312() -> (Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float64], Tensor[(12, 10, 2), float32]) {
  %581 = @func_6046() /* ty=Tensor[(4, 10, 1), float64] */;
  %582 = @func_6046() /* ty=Tensor[(4, 10, 1), float64] */;
  %583 = @func_4380() /* ty=Tensor[(12, 10, 2), float32] */;
  (%581, %582, %583)
}

def @func_6352() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %584 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
  %585 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
  (%584, %585)
}

def @func_9789() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %586 = @func_3991() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %587 = @func_4572() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %588 = %586.0;
  %589 = %587.3;
  (%588, %589)
}

def @func_1935(%var_1923: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %590 = @func_884() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %591 = %590.0;
  %592 = cast(%var_1923, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%591, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %596 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %597 = maximum(%594, %595) /* ty=Tensor[(12, 10, 2), float32] */;
  %598 = %596.0;
  (%597, %598)
}

def @func_9466() -> Tensor[(12, 10, 2), float32] {
  @func_3570() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_8056(%var_8051: Tensor[(10, 3, 16), float64]) -> (Tensor[(10, 3, 16), float64],) {
  %599 = cast(%var_8051, dtype="float64") /* ty=Tensor[(10, 3, 16), float64] */;
  %600 = sigmoid(%599) /* ty=Tensor[(10, 3, 16), float64] */;
  (%600,)
}

def @func_9495() -> (Tensor[(12, 10, 2), float32],) {
  %601 = @func_9187() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %602 = %601.0;
  (%602,)
}

def @func_2106() -> Tensor[(13, 9, 3), float32] {
  %603 = @func_1661() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %603.0
}

def @func_3433() -> Tensor[(12, 10, 2), float32] {
  %604 = @func_2966() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) */;
  %604.0
}

def @func_8762() -> (Tensor[(13, 9, 3), float32], Tensor[(7, 1, 12), float64], Tensor[(84), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %605 = @func_4821() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(13, 5, 14), float64], Tensor[(91, 10), float64]) */;
  %606 = cast(meta[relay.Constant][27] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
  %607 = reshape(%606, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float64] */;
  %608 = @func_2197() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %609 = %605.0;
  %610 = @func_5426(%607) /* ty=Tensor[(7, 1, 12), float64] */;
  %611 = @func_3433() /* ty=Tensor[(12, 10, 2), float32] */;
  %612 = @func_5275() /* ty=Tensor[(12, 10, 2), float32] */;
  %613 = %608.1;
  (%609, %610, meta[relay.Constant][27] /* ty=Tensor[(84), float64] */, %611, %612, %613)
}

def @func_10884() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %614 = @func_4093() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %615 = @func_7805() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %616 = @func_8762() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(7, 1, 12), float64], Tensor[(84), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %617 = %614.0;
  %618 = %615.1;
  %619 = %616.5;
  (%617, %618, %619)
}

def @func_1737() -> (Tensor[(12, 10, 2), float32],) {
  %620 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %621 = %620.0;
  (%621,)
}

def @func_3616(%var_3602: Tensor[(13, 5, 14), float64]) -> Tensor[(13, 5, 14), float64] {
  %622 = cast(%var_3602, dtype="float64") /* ty=Tensor[(13, 5, 14), float64] */;
  cosh(%622) /* ty=Tensor[(13, 5, 14), float64] */
}

def @func_3086(%var_3084: Tensor[(30), float32]) -> (Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(30), float32]) {
  %623 = cast(%var_3084, dtype="float32") /* ty=Tensor[(30), float32] */;
  %624 = reshape(%623, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float32] */;
  %625 = @func_2856(%624) /* ty=(Tensor[(1, 5, 6), float32],) */;
  %626 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
  %627 = %625.0;
  (%626, %627, %var_3084)
}

def @func_5275() -> Tensor[(12, 10, 2), float32] {
  %628 = @func_4611() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %628.0
}

def @func_6075() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %629 = @func_5406() /* ty=Tensor[(12, 10, 2), float32] */;
  %630 = @func_5275() /* ty=Tensor[(12, 10, 2), float32] */;
  (%629, %630)
}

def @func_1298() -> (Tensor[(12, 10, 2), float32],) {
  %631 = @func_1263() /* ty=Tensor[(12, 10, 2), float32] */;
  (%631,)
}

def @func_3570() -> Tensor[(12, 10, 2), float32] {
  %632 = @func_2388() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %632.0
}

def @func_3421() -> (Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float64], Tensor[(1, 5, 6), float32], Tensor[(1, 30), float32], Tensor[(12, 10, 2), float32]) {
  %633 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  %634 = cast(%633, dtype="float64") /* ty=Tensor[(13, 9, 3), float64] */;
  %635 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 30), float32] */, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
  %636 = reshape(%635, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float32] */;
  %637 = @func_2856(%636) /* ty=(Tensor[(1, 5, 6), float32],) */;
  %638 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %639 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  %640 = tan(%634) /* ty=Tensor[(13, 9, 3), float64] */;
  %641 = %637.0;
  %642 = %638.0;
  (%639, %640, %641, meta[relay.Constant][28] /* ty=Tensor[(1, 30), float32] */, %642)
}

def @func_7885(%var_7850: Tensor[(416), float32]) -> (Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 8, 4), bool], Tensor[(416), float32]) {
  %643 = @func_4676() /* ty=(Tensor[(13, 9, 3), float32],) */;
  %644 = cast(meta[relay.Constant][29] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %645 = reshape(%644, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %646 = @func_2543(%645) /* ty=(Tensor[(12, 10, 2), uint64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float64]) */;
  %647 = cast(%var_7850, dtype="float32") /* ty=Tensor[(416), float32] */;
  %648 = reshape(%647, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float32] */;
  %649 = @func_4162(%648) /* ty=(Tensor[(13, 8, 4), bool],) */;
  %650 = %643.0;
  %651 = %646.1;
  %652 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  %653 = %649.0;
  (%650, %651, meta[relay.Constant][29] /* ty=Tensor[(240), float32] */, %652, %653, %var_7850)
}

def @func_6817() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint8]) {
  %654 = @func_3991() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %655 = %654.0;
  %656 = cast(%655, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %657 = reshape(%656, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %658 = @func_3920(%657) /* ty=(Tensor[(12, 10, 2), uint8],) */;
  %659 = %658.0;
  (%655, %659)
}

def @func_8505() -> (Tensor[(12, 10, 2), float32],) {
  %660 = @func_6268() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %661 = %660.0;
  (%661,)
}

def @func_2237() -> (Tensor[(12, 10, 2), float32],) {
  %662 = @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %663 = %662.0;
  (%663,)
}

def @func_11132() -> (Tensor[(12, 10, 2), float32],) {
  %664 = @func_6711() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(2688), uint16]) */;
  %665 = %664.1;
  (%665,)
}

def @func_1958(%var_1947: Tensor[(8, 3, 11), bool], %var_1948: Tensor[(8, 3, 11), bool]) -> (Tensor[(8, 3, 11), bool], Tensor[(12, 10, 2), float32]) {
  %666 = cast(%var_1948, dtype="bool") /* ty=Tensor[(8, 3, 11), bool] */;
  %667 = shape_of(%var_1947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(%var_1947, dtype="bool") /* ty=Tensor[(8, 3, 11), bool] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %670 = @func_1493() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %671 = logical_and(%668, %669) /* ty=Tensor[(8, 3, 11), bool] */;
  %672 = %670.0;
  (%671, %672)
}

def @func_6268() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %673 = @func_5930() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(30), float32], Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(12, 10, 2), float32]) */;
  %674 = @func_3306() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %675 = %673.1;
  %676 = @func_5406() /* ty=Tensor[(12, 10, 2), float32] */;
  %677 = %674.1;
  (%675, %676, %677)
}

def @func_2464(%var_2417: Tensor[(14, 12, 16), uint16], %var_2418: Tensor[(14, 12, 16), uint16]) -> (Tensor[(14, 12, 16), bool], Tensor[(14, 12, 16), float32], Tensor[(12, 10, 2), bool], Tensor[(240), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %678 = cast(%var_2418, dtype="uint16") /* ty=Tensor[(14, 12, 16), uint16] */;
  %679 = shape_of(%var_2417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%var_2417, dtype="uint16") /* ty=Tensor[(14, 12, 16), uint16] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %682 = minimum(%680, %681) /* ty=Tensor[(14, 12, 16), uint16] */;
  %683 = cast(meta[relay.Constant][30] /* ty=Tensor[(14, 12, 16), uint16] */, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%682, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %687 = cast(%682, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
  %688 = cast(meta[relay.Constant][31] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %689 = reshape(%688, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %690 = @func_534(%689) /* ty=(Tensor[(12, 10, 2), bool],) */;
  %691 = cast(meta[relay.Constant][31] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %692 = cast(meta[relay.Constant][31] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %693 = reshape(%691, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %694 = reshape(%692, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %695 = @func_771(%693, %694) /* ty=(Tensor[(12, 10, 2), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), float64]) */;
  %696 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %697 = equal(%685, %686) /* ty=Tensor[(14, 12, 16), bool] */;
  %698 = sin(%687) /* ty=Tensor[(14, 12, 16), float32] */;
  %699 = %690.0;
  %700 = %695.1;
  %701 = %696.0;
  (%697, %698, %699, meta[relay.Constant][31] /* ty=Tensor[(240), float32] */, %700, %701)
}

def @func_7895(%var_7891: Tensor[(16, 13, 13), int32]) -> Tensor[(16, 13, 13), int32] {
  %702 = cast(%var_7891, dtype="int32") /* ty=Tensor[(16, 13, 13), int32] */;
  %703 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(16, 13, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 13, 13), int32] */, dtype="int32") /* ty=Tensor[(16, 13, 13), int32] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  minimum(%704, %705) /* ty=Tensor[(16, 13, 13), int32] */
}

def @func_10536() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %706 = @func_4093() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %707 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %708 = %706.0;
  %709 = %707.1;
  (%708, %709)
}

def @func_5258() -> Tensor[(12, 10, 2), float32] {
  @func_1642() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_3583() -> (Tensor[(12, 10, 2), float32],) {
  %710 = @func_3450() /* ty=Tensor[(12, 10, 2), float32] */;
  (%710,)
}

def @func_1596() -> Tensor[(12, 10, 2), float32] {
  %711 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %711.0
}

def @func_7352() -> Tensor[(12, 10, 2), float32] {
  %712 = @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %712.0
}

def @func_3593() -> Tensor[(12, 10, 2), float32] {
  %713 = @func_1382() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %713.0
}

def @func_7654() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %714 = @func_4093() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %715 = @func_6203() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %716 = %714.0;
  %717 = @func_3593() /* ty=Tensor[(12, 10, 2), float32] */;
  %718 = %715.0;
  (%716, %717, %718)
}

def @func_2388() -> (Tensor[(12, 10, 2), float32],) {
  %719 = @func_1642() /* ty=Tensor[(12, 10, 2), float32] */;
  (%719,)
}

def @func_10981() -> (Tensor[(12, 10, 2), float32],) {
  %720 = @func_6400() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %721 = %720.0;
  (%721,)
}

def @func_3450() -> Tensor[(12, 10, 2), float32] {
  @func_1263() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_1382() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %722 = @func_884() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %723 = %722.0;
  %724 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
  %725 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
  (%723, %724, %725)
}

def @func_8194() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %726 = @func_5236() /* ty=Tensor[(12, 10, 2), float32] */;
  %727 = @func_6155() /* ty=Tensor[(12, 10, 2), float32] */;
  (%726, %727)
}

def @func_7052() -> Tensor[(12, 10, 2), float32] {
  %728 = @func_6400() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %728.0
}

def @func_4296(%var_4287: Tensor[(13, 9, 3), float32]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), int64], Tensor[(12, 10, 2), float32]) {
  %729 = @func_2237() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %730 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  %731 = cast(%var_4287, dtype="int64") /* ty=Tensor[(13, 9, 3), int64] */;
  %732 = shape_of(%730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(%730, dtype="int64") /* ty=Tensor[(13, 9, 3), int64] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %735 = @func_2573() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %736 = @func_3645() /* ty=Tensor[(12, 10, 2), float32] */;
  %737 = %729.0;
  %738 = bitwise_or(%733, %734) /* ty=Tensor[(13, 9, 3), int64] */;
  %739 = %735.1;
  (%736, %737, %738, %739)
}

def @func_2856(%var_2847: Tensor[(1, 5, 6), float32]) -> (Tensor[(1, 5, 6), float32],) {
  %740 = cast(%var_2847, dtype="float32") /* ty=Tensor[(1, 5, 6), float32] */;
  %741 = asin(%740) /* ty=Tensor[(1, 5, 6), float32] */;
  (%741,)
}

def @func_2340(%var_2306: Tensor[(240), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(240), float64], Tensor[(12, 10, 2), float32], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 2), float32], Tensor[(351), float32]) {
  %742 = cast(%var_2306, dtype="float64") /* ty=Tensor[(240), float64] */;
  %743 = reshape(%742, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float64] */;
  %744 = @func_961(%743) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint16], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(12, 10, 2), float32]) */;
  %745 = cast(meta[relay.Constant][33] /* ty=Tensor[(5, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %746 = rsqrt(%745) /* ty=Tensor[(5, 14, 8), float64] */;
  %747 = cast(%746, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
  %748 = cast(meta[relay.Constant][34] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %749 = reshape(%748, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
  %750 = @func_2278(%749) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) */;
  %751 = %744.0;
  %752 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
  %753 = sin(%747) /* ty=Tensor[(5, 14, 8), float64] */;
  %754 = %750.1;
  (%751, %var_2306, %752, %753, %754, meta[relay.Constant][34] /* ty=Tensor[(351), float32] */)
}

def @func_7441(%var_7437: Tensor[(1440), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(1440), float64], Tensor[(12, 10, 2), float32]) {
  %755 = cast(%var_7437, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %756 = @func_5275() /* ty=Tensor[(12, 10, 2), float32] */;
  %757 = cast(%756, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %758 = reshape(%755, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %759 = reshape(%757, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %760 = @func_3178(%758, %759) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(12, 10, 2), bool], Tensor[(240), float32]) */;
  %761 = cast(%756, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %762 = reshape(%761, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %763 = @func_400(%762) /* ty=(Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) */;
  %764 = %760.2;
  %765 = %763.1;
  (%756, %764, %var_7437, %765)
}

def @func_3794() -> (Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) {
  %766 = @func_1737() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %767 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  %768 = cast(meta[relay.Constant][35] /* ty=Tensor[(13, 9, 3), float32] */, dtype="int8") /* ty=Tensor[(13, 9, 3), int8] */;
  %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%767, dtype="int8") /* ty=Tensor[(13, 9, 3), int8] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %772 = add(%770, %771) /* ty=Tensor[(13, 9, 3), int8] */;
  %773 = cast(%772, dtype="float64") /* ty=Tensor[(13, 9, 3), float64] */;
  %774 = asinh(%773) /* ty=Tensor[(13, 9, 3), float64] */;
  %775 = cast(%774, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %776 = %766.0;
  %777 = sqrt(%775) /* ty=Tensor[(13, 9, 3), float32] */;
  %778 = @func_1569() /* ty=Tensor[(12, 10, 2), float32] */;
  (%776, %777, %778)
}

def @func_7950(%var_7922: Tensor[(8, 14, 7), int8], %var_7923: Tensor[(8, 14, 7), int8]) -> (Tensor[(8, 14, 7), bool],) {
  %779 = cast(%var_7923, dtype="bool") /* ty=Tensor[(8, 14, 7), bool] */;
  %780 = shape_of(%var_7922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%var_7922, dtype="bool") /* ty=Tensor[(8, 14, 7), bool] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %783 = less(%781, %782) /* ty=Tensor[(8, 14, 7), bool] */;
  (%783,)
}

def @func_10015() -> (Tensor[(12, 10, 2), float32],) {
  %784 = @func_2197() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %785 = %784.0;
  (%785,)
}

def @func_8483() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32]) {
  %786 = @func_4498() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(900), uint8], Tensor[(12, 10, 2), float32]) */;
  %787 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %788 = @func_2966() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) */;
  %789 = %786.3;
  %790 = %787.0;
  %791 = %788.1;
  (%789, %790, %791)
}

def @func_8823() -> (Tensor[(4, 10, 1), float64],) {
  %792 = @func_6046() /* ty=Tensor[(4, 10, 1), float64] */;
  (%792,)
}

def @func_10357() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %793 = @func_8483() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32]) */;
  %794 = %793.0;
  %795 = @func_5335() /* ty=Tensor[(12, 10, 2), float32] */;
  (%794, %795)
}

def @func_1642() -> Tensor[(12, 10, 2), float32] {
  %796 = @func_1382() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %796.1
}

def @func_3991() -> (Tensor[(12, 10, 2), float32],) {
  %797 = @func_3306() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %798 = %797.2;
  (%798,)
}

def @func_2278(%var_2253: Tensor[(13, 9, 3), float32]) -> (Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) {
  %799 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  %800 = cast(%var_2253, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %801 = shape_of(%799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%799, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %804 = @func_2197() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %805 = mod(%802, %803) /* ty=Tensor[(13, 9, 3), float32] */;
  %806 = %804.0;
  (%805, %806)
}

def @func_575() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %807 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %808 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %809 = %807.0;
  %810 = %808.0;
  (%809, %810)
}

def @func_9818() -> (Tensor[(12, 10, 2), float32],) {
  %811 = @func_4650() /* ty=Tensor[(12, 10, 2), float32] */;
  (%811,)
}

def @func_9942() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(351), float32], Tensor[(12, 10, 2), bool]) {
  %812 = @func_2197() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %813 = @func_6140() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %814 = %813.0;
  %815 = cast(%814, dtype="float64") /* ty=Tensor[(12, 10, 2), float64] */;
  %816 = reshape(%815, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %817 = @func_2340(%816) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(240), float64], Tensor[(12, 10, 2), float32], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 2), float32], Tensor[(351), float32]) */;
  %818 = cast(%814, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %819 = reshape(%818, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %820 = @func_534(%819) /* ty=(Tensor[(12, 10, 2), bool],) */;
  %821 = %812.1;
  %822 = @func_3474() /* ty=Tensor[(12, 10, 2), float32] */;
  %823 = %817.5;
  %824 = %820.0;
  (%821, %822, %814, %823, %824)
}

def @func_3306() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %825 = @func_1737() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %826 = %825.0;
  %827 = cast(%826, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %828 = reshape(%827, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %829 = @func_400(%828) /* ty=(Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) */;
  %830 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %831 = %829.1;
  %832 = %830.0;
  (%826, %831, %832)
}

def @func_7270() -> (Tensor[(12, 10, 2), float32],) {
  %833 = @func_1820() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %834 = %833.0;
  (%834,)
}

def @func_5660() -> (Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) {
  %835 = @func_5039() /* ty=(Tensor[(13, 9, 3), float32],) */;
  %836 = @func_5050() /* ty=Tensor[(12, 10, 2), float32] */;
  %837 = %835.0;
  (%836, %837)
}

def @func_5726(%var_5671: Tensor[(2, 5, 12), float32], %var_5672: Tensor[(2, 5, 12), float32]) -> (Tensor[(2, 5, 12), float32], Tensor[(2, 5, 12), float32]) {
  %838 = cast(%var_5672, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
  %839 = shape_of(%var_5671, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%var_5671, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %842 = cast(%var_5672, dtype="float64") /* ty=Tensor[(2, 5, 12), float64] */;
  %843 = sin(%842) /* ty=Tensor[(2, 5, 12), float64] */;
  %844 = cast(%843, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
  %845 = power(%840, %841) /* ty=Tensor[(2, 5, 12), float32] */;
  %846 = erf(%844) /* ty=Tensor[(2, 5, 12), float32] */;
  (%845, %846)
}

def @func_8553() -> (Tensor[(12, 10, 2), float32],) {
  %847 = @func_1569() /* ty=Tensor[(12, 10, 2), float32] */;
  (%847,)
}

def @func_4121() -> Tensor[(12, 10, 2), float32] {
  %848 = @func_4093() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %849 = %848.0;
  %850 = cast(%849, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  log10(%850) /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_5050() -> Tensor[(12, 10, 2), float32] {
  @func_1539() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_9709() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), int32]) {
  %851 = @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %852 = %851.0;
  %853 = cast(%852, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %854 = reshape(%853, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %855 = @func_400(%854) /* ty=(Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) */;
  %856 = @func_2966() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) */;
  %857 = %855.0;
  %858 = %856.1;
  (%852, %857, %858)
}

def @func_6155() -> Tensor[(12, 10, 2), float32] {
  %859 = @func_2197() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %859.0
}

def @func_3178(%var_3164: Tensor[(9, 10, 16), float64], %var_3170: Tensor[(240), float32]) -> (Tensor[(9, 10, 16), float64], Tensor[(12, 10, 2), bool], Tensor[(240), float32]) {
  %860 = cast(meta[relay.Constant][36] /* ty=Tensor[(9, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  %861 = shape_of(%var_3164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%var_3164, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %864 = cast(%var_3170, dtype="float32") /* ty=Tensor[(240), float32] */;
  %865 = cast(%var_3170, dtype="float32") /* ty=Tensor[(240), float32] */;
  %866 = reshape(%864, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %867 = reshape(%865, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %868 = @func_771(%866, %867) /* ty=(Tensor[(12, 10, 2), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), float64]) */;
  %869 = subtract(%862, %863) /* ty=Tensor[(9, 10, 16), float64] */;
  %870 = %868.2;
  (%869, %870, %var_3170)
}

def @func_1029() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %871 = @func_884() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %872 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %873 = %871.0;
  %874 = %872.0;
  (%873, %874)
}

def @func_9867() -> (Tensor[(12, 10, 2), float32],) {
  %875 = @func_1820() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %876 = %875.0;
  (%876,)
}

def @func_5335() -> Tensor[(12, 10, 2), float32] {
  %877 = @func_2237() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %877.0
}

def @func_7577(%var_7544: Tensor[(14, 1, 6), uint64], %var_7545: Tensor[(14, 14, 6), uint64]) -> (Tensor[(14, 14, 6), uint64], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32], Tensor[(14, 14, 6), float32], Tensor[(7, 1, 12), float32], Tensor[(12, 10, 2), float32]) {
  %878 = cast(%var_7544, dtype="uint64") /* ty=Tensor[(14, 1, 6), uint64] */;
  %879 = cast(%var_7545, dtype="uint64") /* ty=Tensor[(14, 14, 6), uint64] */;
  %880 = cast(%var_7545, dtype="float32") /* ty=Tensor[(14, 14, 6), float32] */;
  %881 = cast(%var_7544, dtype="float64") /* ty=Tensor[(14, 1, 6), float64] */;
  %882 = reshape(%881, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float64] */;
  %883 = @func_5426(%882) /* ty=Tensor[(7, 1, 12), float64] */;
  %884 = cast(%883, dtype="float32") /* ty=Tensor[(7, 1, 12), float32] */;
  %885 = @func_2388() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %886 = subtract(%878, %879) /* ty=Tensor[(14, 14, 6), uint64] */;
  %887 = @func_7238() /* ty=Tensor[(13, 9, 3), float32] */;
  %888 = @func_3363() /* ty=Tensor[(13, 9, 3), float32] */;
  %889 = sinh(%880) /* ty=Tensor[(14, 14, 6), float32] */;
  %890 = sin(%884) /* ty=Tensor[(7, 1, 12), float32] */;
  %891 = %885.0;
  (%886, %887, %888, %889, %890, %891)
}

def @func_4419() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) {
  %892 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %893 = @func_884() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %894 = %892.0;
  %895 = %893.0;
  %896 = @func_3363() /* ty=Tensor[(13, 9, 3), float32] */;
  (%894, %895, %896)
}

def @func_4498() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(900), uint8], Tensor[(12, 10, 2), float32]) {
  %897 = @func_3306() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %898 = cast(meta[relay.Constant][37] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
  %899 = reshape(%898, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float64] */;
  %900 = @func_921(%899) /* ty=(Tensor[(12, 15, 5), float64], Tensor[(12, 10, 2), float32]) */;
  %901 = %900.0;
  %902 = cast(%901, dtype="uint8") /* ty=Tensor[(12, 15, 5), uint8] */;
  %903 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(900), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %904 = cast(meta[relay.Constant][37] /* ty=Tensor[(900), float64] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %906 = @func_2237() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %907 = %897.1;
  %908 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
  %909 = bitwise_or(%904, %905) /* ty=Tensor[(900), uint8] */;
  %910 = %906.0;
  (%907, %908, %909, %910)
}

def @func_6711() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(2688), uint16]) {
  %911 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %912 = @func_3306() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %913 = cast(meta[relay.Constant][38] /* ty=Tensor[(2688), uint16] */, dtype="uint16") /* ty=Tensor[(2688), uint16] */;
  %914 = cast(meta[relay.Constant][38] /* ty=Tensor[(2688), uint16] */, dtype="uint16") /* ty=Tensor[(2688), uint16] */;
  %915 = reshape(%913, newshape=[14, 12, 16]) /* ty=Tensor[(14, 12, 16), uint16] */;
  %916 = reshape(%914, newshape=[14, 12, 16]) /* ty=Tensor[(14, 12, 16), uint16] */;
  %917 = @func_2464(%915, %916) /* ty=(Tensor[(14, 12, 16), bool], Tensor[(14, 12, 16), float32], Tensor[(12, 10, 2), bool], Tensor[(240), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %918 = %911.0;
  %919 = %912.1;
  %920 = %917.3;
  (%918, %919, %920, meta[relay.Constant][38] /* ty=Tensor[(2688), uint16] */)
}

def @func_8665() -> Tensor[(13, 9, 3), float32] {
  %921 = @func_5660() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */;
  %921.1
}

def @func_299() -> (Tensor[(12, 10, 2), float32],) {
  %922 = cast(meta[relay.Constant][39] /* ty=Tensor[(12, 10, 2), float32] */, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %923 = atanh(%922) /* ty=Tensor[(12, 10, 2), float32] */;
  (%923,)
}

def @func_9518() -> Tensor[(12, 10, 2), float32] {
  @func_8815() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_6922(%var_6914: Tensor[(351), float32]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(351), float64]) {
  %924 = @func_1569() /* ty=Tensor[(12, 10, 2), float32] */;
  %925 = cast(%924, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %926 = cast(meta[relay.Constant][40] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %927 = reshape(%926, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
  %928 = @func_2278(%927) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) */;
  %929 = cast(%var_6914, dtype="float64") /* ty=Tensor[(351), float64] */;
  %930 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(351), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %931 = cast(meta[relay.Constant][40] /* ty=Tensor[(351), float32] */, dtype="float64") /* ty=Tensor[(351), float64] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?), float64] */;
  %933 = rsqrt(%925) /* ty=Tensor[(12, 10, 2), float32] */;
  %934 = %928.1;
  %935 = minimum(%931, %932) /* ty=Tensor[(351), float64] */;
  (%933, %934, %935)
}

def @func_6046() -> Tensor[(4, 10, 1), float64] {
  %936 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(4, 10, 1), float64] */;
  asin(%936) /* ty=Tensor[(4, 10, 1), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5237() -> Tensor[(12, 10, 2), float32] {
  %0 = fn () -> Tensor[(12, 10, 2), float32] {
    @func_1642() /* ty=Tensor[(12, 10, 2), float32] */
  };
  %0() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_4074() -> Tensor[(14, 12, 16), bool] {
  %1 = @func_2966() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) */;
  %1.2
}

def @func_8195() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %4 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %2 = @func_5236() /* ty=Tensor[(12, 10, 2), float32] */;
    %3 = @func_6155() /* ty=Tensor[(12, 10, 2), float32] */;
    (%2, %3)
  };
  %4() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_9592() -> (Tensor[(4, 10, 12), int64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), uint64]) {
  %5 = @func_9312() /* ty=(Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float64], Tensor[(12, 10, 2), float32]) */;
  %6 = %5.0;
  %7 = cast(%6, dtype="int64") /* ty=Tensor[(4, 10, 1), int64] */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 10, 12), float64] */, dtype="int64") /* ty=Tensor[(4, 10, 12), int64] */;
  %9 = @func_8483() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32]) */;
  %10 = @func_7238() /* ty=Tensor[(13, 9, 3), float32] */;
  %11 = cast(%10, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %12 = log10(%11) /* ty=Tensor[(13, 9, 3), float32] */;
  %13 = cast(%10, dtype="uint64") /* ty=Tensor[(13, 9, 3), uint64] */;
  %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%12, dtype="uint64") /* ty=Tensor[(13, 9, 3), uint64] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %17 = subtract(%7, %8) /* ty=Tensor[(4, 10, 12), int64] */;
  %18 = @func_4650() /* ty=Tensor[(12, 10, 2), float32] */;
  %19 = %9.0;
  %20 = left_shift(%15, %16) /* ty=Tensor[(13, 9, 3), uint64] */;
  (%17, %18, %19, %20)
}

def @func_6156() -> Tensor[(12, 10, 2), float32] {
  %22 = fn () -> Tensor[(12, 10, 2), float32] {
    %21 = @func_2197() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %21.0
  };
  %22() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_3086(%var_3084: Tensor[(30), float32]) -> (Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(30), float32]) {
  %23 = cast(%var_3084, dtype="float32") /* ty=Tensor[(30), float32] */;
  %24 = reshape(%23, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float32] */;
  %25 = @func_2856(%24) /* ty=(Tensor[(1, 5, 6), float32],) */;
  %26 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
  %27 = %25.0;
  (%26, %27, %var_3084)
}

def @func_3475() -> Tensor[(12, 10, 2), float32] {
  %28 = fn () -> Tensor[(12, 10, 2), float32] {
    @func_1596() /* ty=Tensor[(12, 10, 2), float32] */
  };
  %28() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_1540() -> Tensor[(12, 10, 2), float32] {
  %30 = fn () -> Tensor[(12, 10, 2), float32] {
    %29 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %29.1
  };
  %30() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_2278(%var_2253: Tensor[(13, 9, 3), float32]) -> (Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) {
  %31 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  %32 = cast(%var_2253, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(%31, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %36 = @func_2197() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %37 = mod(%34, %35) /* ty=Tensor[(13, 9, 3), float32] */;
  %38 = %36.0;
  (%37, %38)
}

def @func_3363() -> Tensor[(13, 9, 3), float32] {
  @func_2106() /* ty=Tensor[(13, 9, 3), float32] */
}

def @func_8554() -> (Tensor[(12, 10, 2), float32],) {
  %40 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %39 = @func_1569() /* ty=Tensor[(12, 10, 2), float32] */;
    (%39,)
  };
  %40() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_1861(%var_1859: uint32, %var_1860: Tensor[(15, 9, 10), uint32]) -> (Tensor[(15, 9, 10), uint32], Tensor[(12, 10, 2), int8], Tensor[(240), float32]) {
  %48 = fn (%var_1826: uint32, %var_1827: Tensor[(15, 9, 10), uint32]) -> (Tensor[(15, 9, 10), uint32], Tensor[(12, 10, 2), int8], Tensor[(240), float32]) {
    %41 = cast(%var_1826, dtype="uint32") /* ty=uint32 */;
    %42 = cast(%var_1827, dtype="uint32") /* ty=Tensor[(15, 9, 10), uint32] */;
    %43 = cast(meta[relay.Constant][1] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %44 = reshape(%43, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %45 = @func_400(%44) /* ty=(Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) */;
    %46 = multiply(%41, %42) /* ty=Tensor[(15, 9, 10), uint32] */;
    %47 = %45.0;
    (%46, %47, meta[relay.Constant][1] /* ty=Tensor[(240), float32] */)
  };
  %48(%var_1859, %var_1860) /* ty=(Tensor[(15, 9, 10), uint32], Tensor[(12, 10, 2), int8], Tensor[(240), float32]) */
}

def @func_3435() -> Tensor[(12, 10, 2), float32] {
  @func_3433() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_537(%var_535: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), bool],) {
  @func_534(%var_535) /* ty=(Tensor[(12, 10, 2), bool],) */
}

def @func_3645() -> Tensor[(12, 10, 2), float32] {
  @func_3460() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_3003(%var_3002: Tensor[(30), float32]) -> (Tensor[(13, 9, 3), float32], Tensor[(1, 5, 6), float32], Tensor[(30), float32], Tensor[(1, 5, 6), float32]) {
  %58 = fn (%var_2991: Tensor[(30), float32]) -> (Tensor[(13, 9, 3), float32], Tensor[(1, 5, 6), float32], Tensor[(30), float32], Tensor[(1, 5, 6), float32]) {
    %49 = cast(%var_2991, dtype="float32") /* ty=Tensor[(30), float32] */;
    %50 = reshape(%49, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float32] */;
    %51 = @func_2856(%50) /* ty=(Tensor[(1, 5, 6), float32],) */;
    %52 = %51.0;
    %53 = cast(%52, dtype="float32") /* ty=Tensor[(1, 5, 6), float32] */;
    %54 = reshape(%53, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float32] */;
    %55 = @func_2856(%54) /* ty=(Tensor[(1, 5, 6), float32],) */;
    %56 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
    %57 = %55.0;
    (%56, %52, %var_2991, %57)
  };
  %58(%var_3002) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(1, 5, 6), float32], Tensor[(30), float32], Tensor[(1, 5, 6), float32]) */
}

def @func_2107() -> Tensor[(13, 9, 3), float32] {
  %60 = fn () -> Tensor[(13, 9, 3), float32] {
    %59 = @func_1661() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %59.0
  };
  %60() /* ty=Tensor[(13, 9, 3), float32] */
}

def @func_5660() -> (Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) {
  %61 = @func_5039() /* ty=(Tensor[(13, 9, 3), float32],) */;
  %62 = @func_5050() /* ty=Tensor[(12, 10, 2), float32] */;
  %63 = %61.0;
  (%62, %63)
}

def @func_2859(%var_2857: Tensor[(1, 5, 6), float32]) -> (Tensor[(1, 5, 6), float32],) {
  @func_2856(%var_2857) /* ty=(Tensor[(1, 5, 6), float32],) */
}

def @func_2389() -> (Tensor[(12, 10, 2), float32],) {
  %65 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %64 = @func_1642() /* ty=Tensor[(12, 10, 2), float32] */;
    (%64,)
  };
  %65() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_2467(%var_2465: Tensor[(14, 12, 16), uint16], %var_2466: Tensor[(14, 12, 16), uint16]) -> (Tensor[(14, 12, 16), bool], Tensor[(14, 12, 16), float32], Tensor[(12, 10, 2), bool], Tensor[(240), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %90 = fn (%var_2417: Tensor[(14, 12, 16), uint16], %var_2418: Tensor[(14, 12, 16), uint16]) -> (Tensor[(14, 12, 16), bool], Tensor[(14, 12, 16), float32], Tensor[(12, 10, 2), bool], Tensor[(240), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %66 = cast(%var_2418, dtype="uint16") /* ty=Tensor[(14, 12, 16), uint16] */;
    %67 = shape_of(%var_2417, dtype="int32") /* ty=Tensor[(3), int32] */;
    %68 = cast(%var_2417, dtype="uint16") /* ty=Tensor[(14, 12, 16), uint16] */;
    %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %70 = minimum(%68, %69) /* ty=Tensor[(14, 12, 16), uint16] */;
    %71 = cast(meta[relay.Constant][2] /* ty=Tensor[(14, 12, 16), uint16] */, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
    %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
    %73 = cast(%70, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
    %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %75 = cast(%70, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
    %76 = cast(meta[relay.Constant][3] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %77 = reshape(%76, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %78 = @func_534(%77) /* ty=(Tensor[(12, 10, 2), bool],) */;
    %79 = cast(meta[relay.Constant][3] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %80 = cast(meta[relay.Constant][3] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %81 = reshape(%79, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %82 = reshape(%80, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %83 = @func_771(%81, %82) /* ty=(Tensor[(12, 10, 2), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), float64]) */;
    %84 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %85 = equal(%73, %74) /* ty=Tensor[(14, 12, 16), bool] */;
    %86 = sin(%75) /* ty=Tensor[(14, 12, 16), float32] */;
    %87 = %78.0;
    %88 = %83.1;
    %89 = %84.0;
    (%85, %86, %87, meta[relay.Constant][3] /* ty=Tensor[(240), float32] */, %88, %89)
  };
  %90(%var_2465, %var_2466) /* ty=(Tensor[(14, 12, 16), bool], Tensor[(14, 12, 16), float32], Tensor[(12, 10, 2), bool], Tensor[(240), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_870() -> Tensor[(12, 10, 2), float32] {
  %92 = fn () -> Tensor[(12, 10, 2), float32] {
    %91 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %91.0
  };
  %92() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_9189() -> (Tensor[(12, 10, 2), float32],) {
  @func_9187() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_5260() -> Tensor[(12, 10, 2), float32] {
  @func_5258() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_10716() -> Tensor[(12, 10, 2), float32] {
  @func_10714() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_1937(%var_1936: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %102 = fn (%var_1923: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %93 = @func_884() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %94 = %93.0;
    %95 = cast(%var_1923, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %96 = shape_of(%94, dtype="int32") /* ty=Tensor[(3), int32] */;
    %97 = cast(%94, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %99 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %100 = maximum(%97, %98) /* ty=Tensor[(12, 10, 2), float32] */;
    %101 = %99.0;
    (%100, %101)
  };
  %102(%var_1936) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_11253(%var_11251: Tensor[(3, 3, 1), float32], %var_11252: Tensor[(351, 1), float32]) -> (Tensor[(3, 3, 1), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int8], Tensor[(13, 9, 3), float32], Tensor[(351, 1), float32]) {
  %113 = fn (%var_11224: Tensor[(3, 3, 1), float32], %var_11248: Tensor[(351, 1), float32]) -> (Tensor[(3, 3, 1), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int8], Tensor[(13, 9, 3), float32], Tensor[(351, 1), float32]) {
    %103 = cast(%var_11224, dtype="float32") /* ty=Tensor[(3, 3, 1), float32] */;
    %104 = @func_6352() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %105 = @func_9709() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), int32]) */;
    %106 = cast(%var_11248, dtype="float32") /* ty=Tensor[(351, 1), float32] */;
    %107 = reshape(%106, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
    %108 = @func_2278(%107) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) */;
    %109 = sqrt(%103) /* ty=Tensor[(3, 3, 1), float32] */;
    %110 = %104.1;
    %111 = %105.1;
    %112 = %108.0;
    (%109, %110, %111, %112, %var_11248)
  };
  %113(%var_11251, %var_11252) /* ty=(Tensor[(3, 3, 1), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int8], Tensor[(13, 9, 3), float32], Tensor[(351, 1), float32]) */
}

def @func_2198() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %118 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %114 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %115 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %116 = %114.0;
    %117 = %115.0;
    (%116, %117)
  };
  %118() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_6712() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(2688), uint16]) {
  %129 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(2688), uint16]) {
    %119 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %120 = @func_3306() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %121 = cast(meta[relay.Constant][4] /* ty=Tensor[(2688), uint16] */, dtype="uint16") /* ty=Tensor[(2688), uint16] */;
    %122 = cast(meta[relay.Constant][4] /* ty=Tensor[(2688), uint16] */, dtype="uint16") /* ty=Tensor[(2688), uint16] */;
    %123 = reshape(%121, newshape=[14, 12, 16]) /* ty=Tensor[(14, 12, 16), uint16] */;
    %124 = reshape(%122, newshape=[14, 12, 16]) /* ty=Tensor[(14, 12, 16), uint16] */;
    %125 = @func_2464(%123, %124) /* ty=(Tensor[(14, 12, 16), bool], Tensor[(14, 12, 16), float32], Tensor[(12, 10, 2), bool], Tensor[(240), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %126 = %119.0;
    %127 = %120.1;
    %128 = %125.3;
    (%126, %127, %128, meta[relay.Constant][4] /* ty=Tensor[(2688), uint16] */)
  };
  %129() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(2688), uint16]) */
}

def @func_331() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_1643() -> Tensor[(12, 10, 2), float32] {
  %131 = fn () -> Tensor[(12, 10, 2), float32] {
    %130 = @func_1382() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %130.1
  };
  %131() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_10886() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_10884() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_5795(%var_5793: Tensor[(264), bool]) -> (Tensor[(12, 10, 2), float32], Tensor[(264), uint8], Tensor[(12, 10, 2), float32], Tensor[(264), float32]) {
  @func_5792(%var_5793) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(264), uint8], Tensor[(12, 10, 2), float32], Tensor[(264), float32]) */
}

def @func_7656() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_7654() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_2049(%var_1999: Tensor[(900), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(900), float64], Tensor[(12, 10, 2), bool]) {
  %132 = @func_1737() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %133 = %132.0;
  %134 = cast(%var_1999, dtype="float64") /* ty=Tensor[(900), float64] */;
  %135 = reshape(%134, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float64] */;
  %136 = @func_921(%135) /* ty=(Tensor[(12, 15, 5), float64], Tensor[(12, 10, 2), float32]) */;
  %137 = %136.1;
  %138 = cast(%137, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %139 = shape_of(%133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %140 = cast(%133, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %142 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
  %143 = logical_and(%140, %141) /* ty=Tensor[(12, 10, 2), bool] */;
  (%142, %var_1999, %143)
}

def @func_5930() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(30), float32], Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(12, 10, 2), float32]) {
  %144 = @func_1737() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %145 = @func_5660() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */;
  %146 = %144.0;
  %147 = cast(%146, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %148 = reshape(%147, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %149 = @func_1935(%148) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %150 = cast(meta[relay.Constant][5] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %151 = reshape(%150, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float32] */;
  %152 = @func_2856(%151) /* ty=(Tensor[(1, 5, 6), float32],) */;
  %153 = %152.0;
  %154 = cast(%153, dtype="float32") /* ty=Tensor[(1, 5, 6), float32] */;
  %155 = %145.0;
  %156 = %149.1;
  %157 = atan(%154) /* ty=Tensor[(1, 5, 6), float32] */;
  %158 = @func_1137() /* ty=Tensor[(12, 10, 2), float32] */;
  (%146, %155, meta[relay.Constant][5] /* ty=Tensor[(30), float32] */, %156, %157, %158)
}

def @func_3089(%var_3087: Tensor[(30), float32]) -> (Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(30), float32]) {
  @func_3086(%var_3087) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(30), float32]) */
}

def @func_4299(%var_4297: Tensor[(13, 9, 3), float32]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), int64], Tensor[(12, 10, 2), float32]) {
  @func_4296(%var_4297) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), int64], Tensor[(12, 10, 2), float32]) */
}

def @func_7654() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %159 = @func_4093() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %160 = @func_6203() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %161 = %159.0;
  %162 = @func_3593() /* ty=Tensor[(12, 10, 2), float32] */;
  %163 = %160.0;
  (%161, %162, %163)
}

def @func_10475() -> (Tensor[(12, 10, 2), float32],) {
  %166 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %164 = @func_4093() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %165 = %164.0;
    (%165,)
  };
  %166() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_7518() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(1440), float64]) {
  %167 = cast(meta[relay.Constant][6] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %168 = @func_5258() /* ty=Tensor[(12, 10, 2), float32] */;
  %169 = cast(%168, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %170 = reshape(%167, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
  %171 = reshape(%169, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %172 = @func_3178(%170, %171) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(12, 10, 2), bool], Tensor[(240), float32]) */;
  %173 = %172.1;
  (%168, %173, meta[relay.Constant][6] /* ty=Tensor[(1440), float64] */)
}

def @func_9942() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(351), float32], Tensor[(12, 10, 2), bool]) {
  %174 = @func_2197() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %175 = @func_6140() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %176 = %175.0;
  %177 = cast(%176, dtype="float64") /* ty=Tensor[(12, 10, 2), float64] */;
  %178 = reshape(%177, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %179 = @func_2340(%178) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(240), float64], Tensor[(12, 10, 2), float32], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 2), float32], Tensor[(351), float32]) */;
  %180 = cast(%176, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %181 = reshape(%180, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %182 = @func_534(%181) /* ty=(Tensor[(12, 10, 2), bool],) */;
  %183 = %174.1;
  %184 = @func_3474() /* ty=Tensor[(12, 10, 2), float32] */;
  %185 = %179.5;
  %186 = %182.0;
  (%183, %184, %176, %185, %186)
}

def @func_329() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %187 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %188 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %189 = %187.0;
  %190 = %188.0;
  (%189, %190)
}

def @func_7682() -> (Tensor[(12, 10, 2), float32],) {
  %191 = @func_3460() /* ty=Tensor[(12, 10, 2), float32] */;
  (%191,)
}

def @func_8841() -> Tensor[(12, 10, 2), float32] {
  %192 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %192.0
}

def @func_10598() -> Tensor[(12, 10, 2), float32] {
  @func_1642() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_6540() -> (Tensor[(12, 10, 2), float32],) {
  %193 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %194 = %193.1;
  (%194,)
}

def @func_10721() -> Tensor[(12, 10, 2), float32] {
  @func_10719() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_10676() -> Tensor[(12, 10, 2), float32] {
  %195 = fn () -> Tensor[(12, 10, 2), float32] {
    @func_8301() /* ty=Tensor[(12, 10, 2), float32] */
  };
  %195() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_1138() -> Tensor[(12, 10, 2), float32] {
  %199 = fn () -> Tensor[(12, 10, 2), float32] {
    %196 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %197 = %196.0;
    %198 = cast(%197, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    erf(%198) /* ty=Tensor[(12, 10, 2), float32] */
  };
  %199() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_8483() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32]) {
  %200 = @func_4498() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(900), uint8], Tensor[(12, 10, 2), float32]) */;
  %201 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %202 = @func_2966() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) */;
  %203 = %200.3;
  %204 = %201.0;
  %205 = %202.1;
  (%203, %204, %205)
}

def @func_8843() -> Tensor[(12, 10, 2), float32] {
  @func_8841() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_9187() -> (Tensor[(12, 10, 2), float32],) {
  %206 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %207 = %206.1;
  (%207,)
}

def @func_9106() -> Tensor[(12, 10, 2), float32] {
  @func_9104() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_4947() -> Tensor[(12, 10, 2), float32] {
  %208 = fn () -> Tensor[(12, 10, 2), float32] {
    @func_1569() /* ty=Tensor[(12, 10, 2), float32] */
  };
  %208() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_3584() -> (Tensor[(12, 10, 2), float32],) {
  %210 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %209 = @func_3450() /* ty=Tensor[(12, 10, 2), float32] */;
    (%209,)
  };
  %210() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_1569() -> Tensor[(12, 10, 2), float32] {
  %211 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %211.0
}

def @func_10359() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_10357() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_7443(%var_7442: Tensor[(1440), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(1440), float64], Tensor[(12, 10, 2), float32]) {
  %223 = fn (%var_7437: Tensor[(1440), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(1440), float64], Tensor[(12, 10, 2), float32]) {
    %212 = cast(%var_7437, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %213 = @func_5275() /* ty=Tensor[(12, 10, 2), float32] */;
    %214 = cast(%213, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %215 = reshape(%212, newshape=[9, 10, 16]) /* ty=Tensor[(9, 10, 16), float64] */;
    %216 = reshape(%214, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %217 = @func_3178(%215, %216) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(12, 10, 2), bool], Tensor[(240), float32]) */;
    %218 = cast(%213, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %219 = reshape(%218, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %220 = @func_400(%219) /* ty=(Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) */;
    %221 = %217.2;
    %222 = %220.1;
    (%213, %221, %var_7437, %222)
  };
  %223(%var_7442) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(1440), float64], Tensor[(12, 10, 2), float32]) */
}

def @func_10191() -> (Tensor[(3, 9, 12), float32], Tensor[(12, 10, 2), float32]) {
  @func_10189() /* ty=(Tensor[(3, 9, 12), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_3365() -> Tensor[(13, 9, 3), float32] {
  @func_3363() /* ty=Tensor[(13, 9, 3), float32] */
}

def @func_1571() -> Tensor[(12, 10, 2), float32] {
  @func_1569() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_5841() -> (Tensor[(12, 10, 2), float32],) {
  %224 = @func_4914() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(14, 12, 16), uint32], Tensor[(12, 10, 2), float32], Tensor[(450, 2), float64], Tensor[(12, 10, 2), float32]) */;
  %225 = %224.4;
  (%225,)
}

def @func_7885(%var_7850: Tensor[(416), float32]) -> (Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 8, 4), bool], Tensor[(416), float32]) {
  %226 = @func_4676() /* ty=(Tensor[(13, 9, 3), float32],) */;
  %227 = cast(meta[relay.Constant][7] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %228 = reshape(%227, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %229 = @func_2543(%228) /* ty=(Tensor[(12, 10, 2), uint64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float64]) */;
  %230 = cast(%var_7850, dtype="float32") /* ty=Tensor[(416), float32] */;
  %231 = reshape(%230, newshape=[13, 8, 4]) /* ty=Tensor[(13, 8, 4), float32] */;
  %232 = @func_4162(%231) /* ty=(Tensor[(13, 8, 4), bool],) */;
  %233 = %226.0;
  %234 = %229.1;
  %235 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  %236 = %232.0;
  (%233, %234, meta[relay.Constant][7] /* ty=Tensor[(240), float32] */, %235, %236, %var_7850)
}

def @func_1029() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %237 = @func_884() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %238 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %239 = %237.0;
  %240 = %238.0;
  (%239, %240)
}

def @func_8058(%var_8057: Tensor[(10, 3, 16), float64]) -> (Tensor[(10, 3, 16), float64],) {
  %243 = fn (%var_8051: Tensor[(10, 3, 16), float64]) -> (Tensor[(10, 3, 16), float64],) {
    %241 = cast(%var_8051, dtype="float64") /* ty=Tensor[(10, 3, 16), float64] */;
    %242 = sigmoid(%241) /* ty=Tensor[(10, 3, 16), float64] */;
    (%242,)
  };
  %243(%var_8057) /* ty=(Tensor[(10, 3, 16), float64],) */
}

def @func_10600() -> Tensor[(12, 10, 2), float32] {
  @func_10598() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_4678() -> (Tensor[(13, 9, 3), float32],) {
  @func_4676() /* ty=(Tensor[(13, 9, 3), float32],) */
}

def @func_3422() -> (Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float64], Tensor[(1, 5, 6), float32], Tensor[(1, 30), float32], Tensor[(12, 10, 2), float32]) {
  %254 = fn () -> (Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float64], Tensor[(1, 5, 6), float32], Tensor[(1, 30), float32], Tensor[(12, 10, 2), float32]) {
    %244 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
    %245 = cast(%244, dtype="float64") /* ty=Tensor[(13, 9, 3), float64] */;
    %246 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 30), float32] */, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
    %247 = reshape(%246, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float32] */;
    %248 = @func_2856(%247) /* ty=(Tensor[(1, 5, 6), float32],) */;
    %249 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %250 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
    %251 = tan(%245) /* ty=Tensor[(13, 9, 3), float64] */;
    %252 = %248.0;
    %253 = %249.0;
    (%250, %251, %252, meta[relay.Constant][8] /* ty=Tensor[(1, 30), float32] */, %253)
  };
  %254() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float64], Tensor[(1, 5, 6), float32], Tensor[(1, 30), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_5843() -> (Tensor[(12, 10, 2), float32],) {
  @func_5841() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_5792(%var_5755: Tensor[(264), bool]) -> (Tensor[(12, 10, 2), float32], Tensor[(264), uint8], Tensor[(12, 10, 2), float32], Tensor[(264), float32]) {
  %255 = @func_1493() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %256 = cast(%var_5755, dtype="bool") /* ty=Tensor[(264), bool] */;
  %257 = cast(%var_5755, dtype="bool") /* ty=Tensor[(264), bool] */;
  %258 = reshape(%256, newshape=[8, 3, 11]) /* ty=Tensor[(8, 3, 11), bool] */;
  %259 = reshape(%257, newshape=[8, 3, 11]) /* ty=Tensor[(8, 3, 11), bool] */;
  %260 = @func_1958(%258, %259) /* ty=(Tensor[(8, 3, 11), bool], Tensor[(12, 10, 2), float32]) */;
  %261 = %260.0;
  %262 = cast(%261, dtype="uint8") /* ty=Tensor[(8, 3, 11), uint8] */;
  %263 = shape_of(%var_5755, dtype="int32") /* ty=Tensor[(1), int32] */;
  %264 = cast(%var_5755, dtype="uint8") /* ty=Tensor[(264), uint8] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %266 = cast(%var_5755, dtype="float32") /* ty=Tensor[(264), float32] */;
  %267 = %255.0;
  %268 = maximum(%264, %265) /* ty=Tensor[(264), uint8] */;
  %269 = @func_3570() /* ty=Tensor[(12, 10, 2), float32] */;
  %270 = asin(%266) /* ty=Tensor[(264), float32] */;
  (%267, %268, %269, %270)
}

def @func_8405(%var_8403: Tensor[(784), int8], %var_8404: Tensor[(8, 14, 7), int32]) -> (Tensor[(12, 10, 2), float32], Tensor[(8, 14, 7), bool]) {
  @func_8401(%var_8403, %var_8404) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(8, 14, 7), bool]) */
}

def @func_1738() -> (Tensor[(12, 10, 2), float32],) {
  %273 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %271 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %272 = %271.0;
    (%272,)
  };
  %273() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_3115(%var_3114: Tensor[(5, 15, 5), bool]) -> (Tensor[(5, 15, 5), bool], Tensor[(12, 10, 2), float32]) {
  %281 = fn (%var_3102: Tensor[(5, 15, 5), bool]) -> (Tensor[(5, 15, 5), bool], Tensor[(12, 10, 2), float32]) {
    %274 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 15, 5), bool] */, dtype="bool") /* ty=Tensor[(5, 15, 5), bool] */;
    %275 = shape_of(%var_3102, dtype="int32") /* ty=Tensor[(3), int32] */;
    %276 = cast(%var_3102, dtype="bool") /* ty=Tensor[(5, 15, 5), bool] */;
    %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %278 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %279 = logical_and(%276, %277) /* ty=Tensor[(5, 15, 5), bool] */;
    %280 = %278.0;
    (%279, %280)
  };
  %281(%var_3114) /* ty=(Tensor[(5, 15, 5), bool], Tensor[(12, 10, 2), float32]) */
}

def @func_7684() -> (Tensor[(12, 10, 2), float32],) {
  @func_7682() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_5569() -> (Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(1, 30), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint8], Tensor[(12, 10, 2), int8]) {
  %297 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(1, 30), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint8], Tensor[(12, 10, 2), int8]) {
    %282 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 30), float32] */, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
    %283 = reshape(%282, newshape=[1, 5, 6]) /* ty=Tensor[(1, 5, 6), float32] */;
    %284 = @func_2856(%283) /* ty=(Tensor[(1, 5, 6), float32],) */;
    %285 = @func_4419() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */;
    %286 = %285.1;
    %287 = cast(%286, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %288 = reshape(%287, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %289 = @func_3920(%288) /* ty=(Tensor[(12, 10, 2), uint8],) */;
    %290 = @func_5050() /* ty=Tensor[(12, 10, 2), float32] */;
    %291 = cast(%290, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %292 = reshape(%291, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %293 = @func_400(%292) /* ty=(Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) */;
    %294 = %284.0;
    %295 = %289.0;
    %296 = %293.0;
    (%290, %294, meta[relay.Constant][10] /* ty=Tensor[(1, 30), float32] */, %286, %295, %296)
  };
  %297() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(1, 30), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint8], Tensor[(12, 10, 2), int8]) */
}

def @func_8507() -> (Tensor[(12, 10, 2), float32],) {
  @func_8505() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_7053() -> Tensor[(12, 10, 2), float32] {
  %299 = fn () -> Tensor[(12, 10, 2), float32] {
    %298 = @func_6400() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %298.0
  };
  %299() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_3692() -> (Tensor[(12, 10, 2), float32],) {
  %301 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %300 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
    (%300,)
  };
  %301() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_3947() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %302 = @func_1029() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %303 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %304 = %302.0;
  %305 = %303.0;
  (%304, %305)
}

def @func_2281(%var_2279: Tensor[(13, 9, 3), float32]) -> (Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) {
  @func_2278(%var_2279) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_9122() -> (Tensor[(12, 10, 2), float32],) {
  %306 = @func_7052() /* ty=Tensor[(12, 10, 2), float32] */;
  (%306,)
}

def @func_6076() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %309 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %307 = @func_5406() /* ty=Tensor[(12, 10, 2), float32] */;
    %308 = @func_5275() /* ty=Tensor[(12, 10, 2), float32] */;
    (%307, %308)
  };
  %309() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_10983() -> (Tensor[(12, 10, 2), float32],) {
  @func_10981() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_9314() -> (Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float64], Tensor[(12, 10, 2), float32]) {
  @func_9312() /* ty=(Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float64], Tensor[(12, 10, 2), float32]) */
}

def @func_10059() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %316 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %310 = @func_8549() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %311 = @func_6598() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %312 = @func_2237() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %313 = %310.1;
    %314 = %311.0;
    %315 = %312.0;
    (%313, %314, %315)
  };
  %316() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_3993() -> (Tensor[(12, 10, 2), float32],) {
  @func_3991() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_6140() -> (Tensor[(12, 10, 2), float32],) {
  %317 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
  (%317,)
}

def @func_8825() -> (Tensor[(4, 10, 1), float64],) {
  @func_8823() /* ty=(Tensor[(4, 10, 1), float64],) */
}

def @func_9269(%var_9267: Tensor[(14, 7, 6), int32], %var_9268: Tensor[(14, 7, 6), int32]) -> (Tensor[(14, 7, 6), float32], Tensor[(16, 13, 13), int32], Tensor[(2704), int32], Tensor[(14, 7, 6), float32], Tensor[(14, 7, 6), bool], Tensor[(14, 7, 6), float64], Tensor[(12, 10, 2), float32]) {
  @func_9265(%var_9267, %var_9268) /* ty=(Tensor[(14, 7, 6), float32], Tensor[(16, 13, 13), int32], Tensor[(2704), int32], Tensor[(14, 7, 6), float32], Tensor[(14, 7, 6), bool], Tensor[(14, 7, 6), float64], Tensor[(12, 10, 2), float32]) */
}

def @func_9468() -> Tensor[(12, 10, 2), float32] {
  @func_9466() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_9820() -> (Tensor[(12, 10, 2), float32],) {
  @func_9818() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_7888(%var_7886: Tensor[(416), float32]) -> (Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 8, 4), bool], Tensor[(416), float32]) {
  @func_7885(%var_7886) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(13, 9, 3), float32], Tensor[(13, 8, 4), bool], Tensor[(416), float32]) */
}

def @func_10643() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_10641() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_575() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %318 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %319 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %320 = %318.0;
  %321 = %319.0;
  (%320, %321)
}

def @func_4573() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %329 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %322 = @func_1661() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %323 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %324 = @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %325 = %322.2;
    %326 = %323.1;
    %327 = %324.1;
    %328 = @func_3450() /* ty=Tensor[(12, 10, 2), float32] */;
    (%325, %326, %327, %328)
  };
  %329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_6047() -> Tensor[(4, 10, 1), float64] {
  %331 = fn () -> Tensor[(4, 10, 1), float64] {
    %330 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(4, 10, 1), float64] */;
    asin(%330) /* ty=Tensor[(4, 10, 1), float64] */
  };
  %331() /* ty=Tensor[(4, 10, 1), float64] */
}

def @func_1598() -> Tensor[(12, 10, 2), float32] {
  @func_1596() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_6817() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint8]) {
  %332 = @func_3991() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %333 = %332.0;
  %334 = cast(%333, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %335 = reshape(%334, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
  %336 = @func_3920(%335) /* ty=(Tensor[(12, 10, 2), uint8],) */;
  %337 = %336.0;
  (%333, %337)
}

def @func_8550() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %341 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %338 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %339 = @func_1642() /* ty=Tensor[(12, 10, 2), float32] */;
    %340 = %338.0;
    (%339, %340)
  };
  %341() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_304() -> (Tensor[(12, 10, 2), float32],) {
  %344 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %342 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %343 = %342.0;
    (%343,)
  };
  %344() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_8816() -> Tensor[(12, 10, 2), float32] {
  %346 = fn () -> Tensor[(12, 10, 2), float32] {
    %345 = @func_6075() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %345.0
  };
  %346() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_9124() -> (Tensor[(12, 10, 2), float32],) {
  @func_9122() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_10017() -> (Tensor[(12, 10, 2), float32],) {
  @func_10015() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_4856(%var_4841: Tensor[(7, 7, 6), float32]) -> Tensor[(7, 7, 6), float32] {
  %347 = cast(%var_4841, dtype="float32") /* ty=Tensor[(7, 7, 6), float32] */;
  log(%347) /* ty=Tensor[(7, 7, 6), float32] */
}

def @func_10357() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %348 = @func_8483() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32]) */;
  %349 = %348.0;
  %350 = @func_5335() /* ty=Tensor[(12, 10, 2), float32] */;
  (%349, %350)
}

def @func_2575() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_2573() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_8485() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32]) {
  @func_8483() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32]) */
}

def @func_923(%var_922: Tensor[(12, 15, 5), float64]) -> (Tensor[(12, 15, 5), float64], Tensor[(12, 10, 2), float32]) {
  %357 = fn (%var_907: Tensor[(12, 15, 5), float64]) -> (Tensor[(12, 15, 5), float64], Tensor[(12, 10, 2), float32]) {
    %351 = cast(%var_907, dtype="float64") /* ty=Tensor[(12, 15, 5), float64] */;
    %352 = exp(%351) /* ty=Tensor[(12, 15, 5), float64] */;
    %353 = cast(%352, dtype="float64") /* ty=Tensor[(12, 15, 5), float64] */;
    %354 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %355 = atanh(%353) /* ty=Tensor[(12, 15, 5), float64] */;
    %356 = %354.0;
    (%355, %356)
  };
  %357(%var_922) /* ty=(Tensor[(12, 15, 5), float64], Tensor[(12, 10, 2), float32]) */
}

def @func_5040() -> (Tensor[(13, 9, 3), float32],) {
  %360 = fn () -> (Tensor[(13, 9, 3), float32],) {
    %358 = @func_3794() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) */;
    %359 = %358.1;
    (%359,)
  };
  %360() /* ty=(Tensor[(13, 9, 3), float32],) */
}

def @func_3991() -> (Tensor[(12, 10, 2), float32],) {
  %361 = @func_3306() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %362 = %361.2;
  (%362,)
}

def @func_7116() -> Tensor[(3, 9, 12), float32] {
  @func_7114() /* ty=Tensor[(3, 9, 12), float32] */
}

def @func_7713() -> (Tensor[(12, 10, 2), float32],) {
  @func_7711() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_6819() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint8]) {
  @func_6817() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint8]) */
}

def @func_3647() -> Tensor[(12, 10, 2), float32] {
  @func_3645() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_3307() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %371 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %363 = @func_1737() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %364 = %363.0;
    %365 = cast(%364, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %366 = reshape(%365, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %367 = @func_400(%366) /* ty=(Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) */;
    %368 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %369 = %367.1;
    %370 = %368.0;
    (%364, %369, %370)
  };
  %371() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_6352() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %372 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
  %373 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
  (%372, %373)
}

def @func_3451() -> Tensor[(12, 10, 2), float32] {
  %374 = fn () -> Tensor[(12, 10, 2), float32] {
    @func_1263() /* ty=Tensor[(12, 10, 2), float32] */
  };
  %374() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_6542() -> (Tensor[(12, 10, 2), float32],) {
  @func_6540() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_4122() -> Tensor[(12, 10, 2), float32] {
  %378 = fn () -> Tensor[(12, 10, 2), float32] {
    %375 = @func_4093() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %376 = %375.0;
    %377 = cast(%376, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    log10(%377) /* ty=Tensor[(12, 10, 2), float32] */
  };
  %378() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_4381() -> Tensor[(12, 10, 2), float32] {
  %380 = fn () -> Tensor[(12, 10, 2), float32] {
    %379 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %379.0
  };
  %380() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_7950(%var_7922: Tensor[(8, 14, 7), int8], %var_7923: Tensor[(8, 14, 7), int8]) -> (Tensor[(8, 14, 7), bool],) {
  %381 = cast(%var_7923, dtype="bool") /* ty=Tensor[(8, 14, 7), bool] */;
  %382 = shape_of(%var_7922, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%var_7922, dtype="bool") /* ty=Tensor[(8, 14, 7), bool] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %385 = less(%383, %384) /* ty=Tensor[(8, 14, 7), bool] */;
  (%385,)
}

def @func_2238() -> (Tensor[(12, 10, 2), float32],) {
  %388 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %386 = @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %387 = %386.0;
    (%387,)
  };
  %388() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_7239() -> Tensor[(13, 9, 3), float32] {
  %389 = fn () -> Tensor[(13, 9, 3), float32] {
    @func_2106() /* ty=Tensor[(13, 9, 3), float32] */
  };
  %389() /* ty=Tensor[(13, 9, 3), float32] */
}

def @func_1300() -> (Tensor[(12, 10, 2), float32],) {
  @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_6270() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_6268() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_9790() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %394 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %390 = @func_3991() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %391 = @func_4572() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %392 = %390.0;
    %393 = %391.3;
    (%392, %393)
  };
  %394() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_8667() -> Tensor[(13, 9, 3), float32] {
  @func_8665() /* ty=Tensor[(13, 9, 3), float32] */
}

def @func_4419() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) {
  %395 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %396 = @func_884() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %397 = %395.0;
  %398 = %396.0;
  %399 = @func_3363() /* ty=Tensor[(13, 9, 3), float32] */;
  (%397, %398, %399)
}

def @func_9898() -> (Tensor[(12, 10, 2), float32],) {
  @func_9896() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_5336() -> Tensor[(12, 10, 2), float32] {
  %401 = fn () -> Tensor[(12, 10, 2), float32] {
    %400 = @func_2237() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %400.0
  };
  %401() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_6268() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %402 = @func_5930() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(30), float32], Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(12, 10, 2), float32]) */;
  %403 = @func_3306() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %404 = %402.1;
  %405 = @func_5406() /* ty=Tensor[(12, 10, 2), float32] */;
  %406 = %403.1;
  (%404, %405, %406)
}

def @func_4822() -> (Tensor[(13, 9, 3), float32], Tensor[(13, 5, 14), float64], Tensor[(91, 10), float64]) {
  %412 = fn () -> (Tensor[(13, 9, 3), float32], Tensor[(13, 5, 14), float64], Tensor[(91, 10), float64]) {
    %407 = @func_4419() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */;
    %408 = cast(meta[relay.Constant][12] /* ty=Tensor[(91, 10), float64] */, dtype="float64") /* ty=Tensor[(91, 10), float64] */;
    %409 = reshape(%408, newshape=[13, 5, 14]) /* ty=Tensor[(13, 5, 14), float64] */;
    %410 = %407.2;
    %411 = @func_3616(%409) /* ty=Tensor[(13, 5, 14), float64] */;
    (%410, %411, meta[relay.Constant][12] /* ty=Tensor[(91, 10), float64] */)
  };
  %412() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(13, 5, 14), float64], Tensor[(91, 10), float64]) */
}

def @func_9466() -> Tensor[(12, 10, 2), float32] {
  @func_3570() /* ty=Tensor[(12, 10, 2), float32] */
}

def @main() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %413 = @func_4500() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(900), uint8], Tensor[(12, 10, 2), float32]) */;
  %414 = @func_331() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %415 = %414.0;
  %416 = cast(%415, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %417 = %413.1;
  %418 = asinh(%416) /* ty=Tensor[(12, 10, 2), float32] */;
  (%417, %418)
}

def @func_7898(%var_7896: Tensor[(16, 13, 13), int32]) -> Tensor[(16, 13, 13), int32] {
  @func_7895(%var_7896) /* ty=Tensor[(16, 13, 13), int32] */
}

def @func_10899() -> (Tensor[(12, 10, 2), float32],) {
  %420 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %419 = @func_7052() /* ty=Tensor[(12, 10, 2), float32] */;
    (%419,)
  };
  %420() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_2967() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) {
  %444 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) {
    %421 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %422 = @func_1263() /* ty=Tensor[(12, 10, 2), float32] */;
    %423 = @func_1493() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %424 = %423.0;
    %425 = cast(%424, dtype="int32") /* ty=Tensor[(12, 10, 2), int32] */;
    %426 = shape_of(%422, dtype="int32") /* ty=Tensor[(3), int32] */;
    %427 = cast(%422, dtype="int32") /* ty=Tensor[(12, 10, 2), int32] */;
    %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %429 = cast(meta[relay.Constant][13] /* ty=Tensor[(2688), uint16] */, dtype="uint16") /* ty=Tensor[(2688), uint16] */;
    %430 = cast(meta[relay.Constant][13] /* ty=Tensor[(2688), uint16] */, dtype="uint16") /* ty=Tensor[(2688), uint16] */;
    %431 = reshape(%429, newshape=[14, 12, 16]) /* ty=Tensor[(14, 12, 16), uint16] */;
    %432 = reshape(%430, newshape=[14, 12, 16]) /* ty=Tensor[(14, 12, 16), uint16] */;
    %433 = @func_2464(%431, %432) /* ty=(Tensor[(14, 12, 16), bool], Tensor[(14, 12, 16), float32], Tensor[(12, 10, 2), bool], Tensor[(240), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %434 = %433.0;
    %435 = cast(%434, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
    %436 = asin(%435) /* ty=Tensor[(14, 12, 16), float32] */;
    %437 = cast(meta[relay.Constant][13] /* ty=Tensor[(2688), uint16] */, dtype="bool") /* ty=Tensor[(2688), bool] */;
    %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
    %439 = cast(%436, dtype="bool") /* ty=Tensor[(14, 12, 16), bool] */;
    %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %441 = %421.0;
    %442 = left_shift(%427, %428) /* ty=Tensor[(12, 10, 2), int32] */;
    %443 = greater_equal(%439, %440) /* ty=Tensor[(14, 12, 16), bool] */;
    (%441, %442, %443)
  };
  %444() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) */
}

def @func_4676() -> (Tensor[(13, 9, 3), float32],) {
  %445 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  (%445,)
}

def @func_6371() -> (Tensor[(12, 10, 2), float32],) {
  %446 = @func_5236() /* ty=Tensor[(12, 10, 2), float32] */;
  (%446,)
}

def @func_9868() -> (Tensor[(12, 10, 2), float32],) {
  %449 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %447 = @func_1820() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %448 = %447.0;
    (%448,)
  };
  %449() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_8216() -> Tensor[(12, 10, 2), float32] {
  %450 = fn () -> Tensor[(12, 10, 2), float32] {
    @func_5275() /* ty=Tensor[(12, 10, 2), float32] */
  };
  %450() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_10719() -> Tensor[(12, 10, 2), float32] {
  @func_6155() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_6401() -> (Tensor[(12, 10, 2), float32],) {
  %454 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %451 = @func_4650() /* ty=Tensor[(12, 10, 2), float32] */;
    %452 = cast(%451, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %453 = atan(%452) /* ty=Tensor[(12, 10, 2), float32] */;
    (%453,)
  };
  %454() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_3795() -> (Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) {
  %468 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) {
    %455 = @func_1737() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %456 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
    %457 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 9, 3), float32] */, dtype="int8") /* ty=Tensor[(13, 9, 3), int8] */;
    %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
    %459 = cast(%456, dtype="int8") /* ty=Tensor[(13, 9, 3), int8] */;
    %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %461 = add(%459, %460) /* ty=Tensor[(13, 9, 3), int8] */;
    %462 = cast(%461, dtype="float64") /* ty=Tensor[(13, 9, 3), float64] */;
    %463 = asinh(%462) /* ty=Tensor[(13, 9, 3), float64] */;
    %464 = cast(%463, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
    %465 = %455.0;
    %466 = sqrt(%464) /* ty=Tensor[(13, 9, 3), float32] */;
    %467 = @func_1569() /* ty=Tensor[(12, 10, 2), float32] */;
    (%465, %466, %467)
  };
  %468() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_7520() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(1440), float64]) {
  @func_7518() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(1440), float64]) */
}

def @func_9496() -> (Tensor[(12, 10, 2), float32],) {
  %471 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %469 = @func_9187() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %470 = %469.0;
    (%470,)
  };
  %471() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_7954(%var_7952: Tensor[(8, 14, 7), int8], %var_7953: Tensor[(8, 14, 7), int8]) -> (Tensor[(8, 14, 7), bool],) {
  @func_7950(%var_7952, %var_7953) /* ty=(Tensor[(8, 14, 7), bool],) */
}

def @func_5258() -> Tensor[(12, 10, 2), float32] {
  @func_1642() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_10838() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %478 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %472 = @func_2388() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %473 = @func_6371() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %474 = @func_4572() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %475 = %472.0;
    %476 = %473.0;
    %477 = %474.2;
    (%475, %476, %477)
  };
  %478() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_10884() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %479 = @func_4093() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %480 = @func_7805() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %481 = @func_8762() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(7, 1, 12), float64], Tensor[(84), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %482 = %479.0;
  %483 = %480.1;
  %484 = %481.5;
  (%482, %483, %484)
}

def @func_6381() -> Tensor[(12, 10, 2), float32] {
  %486 = fn () -> Tensor[(12, 10, 2), float32] {
    %485 = @func_1820() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %485.0
  };
  %486() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_774(%var_772: Tensor[(12, 10, 2), float32], %var_773: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), float64]) {
  %505 = fn (%var_734: Tensor[(12, 10, 2), float32], %var_751: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), float64]) {
    %487 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %488 = %487.0;
    %489 = cast(%var_734, dtype="float64") /* ty=Tensor[(12, 10, 2), float64] */;
    %490 = shape_of(%488, dtype="int32") /* ty=Tensor[(3), int32] */;
    %491 = cast(%488, dtype="float64") /* ty=Tensor[(12, 10, 2), float64] */;
    %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %493 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %494 = cast(%488, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %495 = log2(%494) /* ty=Tensor[(12, 10, 2), float32] */;
    %496 = cast(%var_751, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
    %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(3), int32] */;
    %498 = cast(%495, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
    %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %500 = cast(%495, dtype="float64") /* ty=Tensor[(12, 10, 2), float64] */;
    %501 = floor_mod(%491, %492) /* ty=Tensor[(12, 10, 2), float64] */;
    %502 = %493.0;
    %503 = less(%498, %499) /* ty=Tensor[(12, 10, 2), bool] */;
    %504 = asin(%500) /* ty=Tensor[(12, 10, 2), float64] */;
    (%501, %502, %503, %504)
  };
  %505(%var_772, %var_773) /* ty=(Tensor[(12, 10, 2), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), float64]) */
}

def @func_5802() -> Tensor[(12, 10, 2), float32] {
  %506 = fn () -> Tensor[(12, 10, 2), float32] {
    @func_4650() /* ty=Tensor[(12, 10, 2), float32] */
  };
  %506() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_5408() -> Tensor[(12, 10, 2), float32] {
  @func_5406() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_7983() -> (Tensor[(16, 3, 4), float32], Tensor[(4, 10, 1), float64]) {
  %510 = fn () -> (Tensor[(16, 3, 4), float32], Tensor[(4, 10, 1), float64]) {
    %507 = cast(meta[relay.Constant][15] /* ty=Tensor[(16, 3, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
    %508 = log(%507) /* ty=Tensor[(16, 3, 4), float32] */;
    %509 = @func_6046() /* ty=Tensor[(4, 10, 1), float64] */;
    (%508, %509)
  };
  %510() /* ty=(Tensor[(16, 3, 4), float32], Tensor[(4, 10, 1), float64]) */
}

def @func_8505() -> (Tensor[(12, 10, 2), float32],) {
  %511 = @func_6268() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %512 = %511.0;
  (%512,)
}

def @func_9594() -> (Tensor[(4, 10, 12), int64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), uint64]) {
  @func_9592() /* ty=(Tensor[(4, 10, 12), int64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), uint64]) */
}

def @func_6373() -> (Tensor[(12, 10, 2), float32],) {
  @func_6371() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_3460() -> Tensor[(12, 10, 2), float32] {
  %513 = @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %513.1
}

def @func_5028() -> (Tensor[(14, 12, 16), uint32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(18, 50), float64]) {
  %514 = @func_4914() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(14, 12, 16), uint32], Tensor[(12, 10, 2), float32], Tensor[(450, 2), float64], Tensor[(12, 10, 2), float32]) */;
  %515 = cast(meta[relay.Constant][16] /* ty=Tensor[(18, 50), float64] */, dtype="float64") /* ty=Tensor[(18, 50), float64] */;
  %516 = reshape(%515, newshape=[900]) /* ty=Tensor[(900), float64] */;
  %517 = @func_2049(%516) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(900), float64], Tensor[(12, 10, 2), bool]) */;
  %518 = %514.1;
  %519 = @func_3645() /* ty=Tensor[(12, 10, 2), float32] */;
  %520 = %517.0;
  (%518, %519, %520, meta[relay.Constant][16] /* ty=Tensor[(18, 50), float64] */)
}

def @func_4652() -> Tensor[(12, 10, 2), float32] {
  @func_4650() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_8693() -> (Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) {
  %521 = @func_8522() /* ty=Tensor[(12, 10, 2), float32] */;
  %522 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  (%521, %522)
}

def @func_10015() -> (Tensor[(12, 10, 2), float32],) {
  %523 = @func_2197() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %524 = %523.0;
  (%524,)
}

def @func_1821() -> (Tensor[(12, 10, 2), float32],) {
  %527 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %525 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %526 = %525.0;
    (%526,)
  };
  %527() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_10641() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %528 = @func_6400() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %529 = %528.0;
  %530 = @func_5406() /* ty=Tensor[(12, 10, 2), float32] */;
  (%529, %530)
}

def @func_9896() -> (Tensor[(12, 10, 2), float32],) {
  %531 = @func_9187() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %532 = %531.0;
  (%532,)
}

def @func_7270() -> (Tensor[(12, 10, 2), float32],) {
  %533 = @func_1820() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %534 = %533.0;
  (%534,)
}

def @func_7353() -> Tensor[(12, 10, 2), float32] {
  %536 = fn () -> Tensor[(12, 10, 2), float32] {
    %535 = @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %535.0
  };
  %536() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_7272() -> (Tensor[(12, 10, 2), float32],) {
  @func_7270() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_7806() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %541 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %537 = @func_3947() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %538 = @func_3570() /* ty=Tensor[(12, 10, 2), float32] */;
    %539 = %537.0;
    %540 = @func_3474() /* ty=Tensor[(12, 10, 2), float32] */;
    (%538, %539, %540)
  };
  %541() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_884() -> (Tensor[(12, 10, 2), float32],) {
  %542 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %543 = %542.0;
  (%543,)
}

def @func_963(%var_962: Tensor[(12, 10, 2), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint16], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(12, 10, 2), float32]) {
  %565 = fn (%var_945: Tensor[(12, 10, 2), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint16], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(12, 10, 2), float32]) {
    %544 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %545 = %544.0;
    %546 = cast(%545, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %547 = cast(%545, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %548 = reshape(%546, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %549 = reshape(%547, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %550 = @func_771(%548, %549) /* ty=(Tensor[(12, 10, 2), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), float64]) */;
    %551 = %550.0;
    %552 = cast(%var_945, dtype="uint16") /* ty=Tensor[(12, 10, 2), uint16] */;
    %553 = shape_of(%551, dtype="int32") /* ty=Tensor[(3), int32] */;
    %554 = cast(%551, dtype="uint16") /* ty=Tensor[(12, 10, 2), uint16] */;
    %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %556 = cast(meta[relay.Constant][17] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
    %557 = reshape(%556, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float64] */;
    %558 = @func_921(%557) /* ty=(Tensor[(12, 15, 5), float64], Tensor[(12, 10, 2), float32]) */;
    %559 = %558.0;
    %560 = cast(%559, dtype="float64") /* ty=Tensor[(12, 15, 5), float64] */;
    %561 = reshape(%560, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float64] */;
    %562 = @func_921(%561) /* ty=(Tensor[(12, 15, 5), float64], Tensor[(12, 10, 2), float32]) */;
    %563 = bitwise_or(%554, %555) /* ty=Tensor[(12, 10, 2), uint16] */;
    %564 = %562.1;
    (%545, %563, %559, meta[relay.Constant][17] /* ty=Tensor[(900), float64] */, %564)
  };
  %565(%var_962) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint16], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(12, 10, 2), float32]) */
}

def @func_3920(%var_3907: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), uint8],) {
  %566 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %567 = %566.0;
  %568 = cast(%var_3907, dtype="uint8") /* ty=Tensor[(12, 10, 2), uint8] */;
  %569 = shape_of(%567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %570 = cast(%567, dtype="uint8") /* ty=Tensor[(12, 10, 2), uint8] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %572 = bitwise_and(%570, %571) /* ty=Tensor[(12, 10, 2), uint8] */;
  (%572,)
}

def @func_9710() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), int32]) {
  %581 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), int32]) {
    %573 = @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %574 = %573.0;
    %575 = cast(%574, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %576 = reshape(%575, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %577 = @func_400(%576) /* ty=(Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) */;
    %578 = @func_2966() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) */;
    %579 = %577.0;
    %580 = %578.1;
    (%574, %579, %580)
  };
  %581() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), int32]) */
}

def @func_2052(%var_2050: Tensor[(900), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(900), float64], Tensor[(12, 10, 2), bool]) {
  @func_2049(%var_2050) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(900), float64], Tensor[(12, 10, 2), bool]) */
}

def @func_534(%var_524: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), bool],) {
  %582 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %583 = %582.0;
  %584 = cast(%var_524, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %585 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%583, dtype="bool") /* ty=Tensor[(12, 10, 2), bool] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %588 = greater(%586, %587) /* ty=Tensor[(12, 10, 2), bool] */;
  (%588,)
}

def @func_6922(%var_6914: Tensor[(351), float32]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(351), float64]) {
  %589 = @func_1569() /* ty=Tensor[(12, 10, 2), float32] */;
  %590 = cast(%589, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
  %591 = cast(meta[relay.Constant][18] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
  %592 = reshape(%591, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
  %593 = @func_2278(%592) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) */;
  %594 = cast(%var_6914, dtype="float64") /* ty=Tensor[(351), float64] */;
  %595 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(351), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %596 = cast(meta[relay.Constant][18] /* ty=Tensor[(351), float32] */, dtype="float64") /* ty=Tensor[(351), float64] */;
  %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?), float64] */;
  %598 = rsqrt(%590) /* ty=Tensor[(12, 10, 2), float32] */;
  %599 = %593.1;
  %600 = minimum(%596, %597) /* ty=Tensor[(351), float64] */;
  (%598, %599, %600)
}

def @func_8763() -> (Tensor[(13, 9, 3), float32], Tensor[(7, 1, 12), float64], Tensor[(84), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %610 = fn () -> (Tensor[(13, 9, 3), float32], Tensor[(7, 1, 12), float64], Tensor[(84), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %601 = @func_4821() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(13, 5, 14), float64], Tensor[(91, 10), float64]) */;
    %602 = cast(meta[relay.Constant][19] /* ty=Tensor[(84), float64] */, dtype="float64") /* ty=Tensor[(84), float64] */;
    %603 = reshape(%602, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float64] */;
    %604 = @func_2197() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %605 = %601.0;
    %606 = @func_5426(%603) /* ty=Tensor[(7, 1, 12), float64] */;
    %607 = @func_3433() /* ty=Tensor[(12, 10, 2), float32] */;
    %608 = @func_5275() /* ty=Tensor[(12, 10, 2), float32] */;
    %609 = %604.1;
    (%605, %606, meta[relay.Constant][19] /* ty=Tensor[(84), float64] */, %607, %608, %609)
  };
  %610() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(7, 1, 12), float64], Tensor[(84), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_7114() -> Tensor[(3, 9, 12), float32] {
  %611 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 9, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 9, 12), float32] */;
  sinh(%611) /* ty=Tensor[(3, 9, 12), float32] */
}

def @func_5406() -> Tensor[(12, 10, 2), float32] {
  %612 = @func_3421() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float64], Tensor[(1, 5, 6), float32], Tensor[(1, 30), float32], Tensor[(12, 10, 2), float32]) */;
  %612.4
}

def @func_9265(%var_9192: Tensor[(14, 7, 6), int32], %var_9193: Tensor[(14, 7, 6), int32]) -> (Tensor[(14, 7, 6), float32], Tensor[(16, 13, 13), int32], Tensor[(2704), int32], Tensor[(14, 7, 6), float32], Tensor[(14, 7, 6), bool], Tensor[(14, 7, 6), float64], Tensor[(12, 10, 2), float32]) {
  %613 = cast(%var_9193, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %614 = log2(%613) /* ty=Tensor[(14, 7, 6), float64] */;
  %615 = cast(%614, dtype="float32") /* ty=Tensor[(14, 7, 6), float32] */;
  %616 = cast(meta[relay.Constant][21] /* ty=Tensor[(2704), int32] */, dtype="int32") /* ty=Tensor[(2704), int32] */;
  %617 = reshape(%616, newshape=[16, 13, 13]) /* ty=Tensor[(16, 13, 13), int32] */;
  %618 = cast(%var_9193, dtype="int32") /* ty=Tensor[(14, 7, 6), int32] */;
  %619 = shape_of(%var_9192, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_9192, dtype="int32") /* ty=Tensor[(14, 7, 6), int32] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %622 = left_shift(%620, %621) /* ty=Tensor[(14, 7, 6), int32] */;
  %623 = cast(%622, dtype="float32") /* ty=Tensor[(14, 7, 6), float32] */;
  %624 = cast(%614, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %625 = sin(%624) /* ty=Tensor[(14, 7, 6), float64] */;
  %626 = cast(%614, dtype="bool") /* ty=Tensor[(14, 7, 6), bool] */;
  %627 = shape_of(%625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %628 = cast(%625, dtype="bool") /* ty=Tensor[(14, 7, 6), bool] */;
  %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %630 = cast(%var_9192, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %631 = shape_of(%var_9193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %632 = cast(%var_9193, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %634 = divide(%632, %633) /* ty=Tensor[(14, 7, 6), float64] */;
  %635 = cast(%634, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %636 = atan(%635) /* ty=Tensor[(14, 7, 6), float64] */;
  %637 = cast(%636, dtype="float64") /* ty=Tensor[(14, 7, 6), float64] */;
  %638 = @func_4093() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %639 = sqrt(%615) /* ty=Tensor[(14, 7, 6), float32] */;
  %640 = @func_7895(%617) /* ty=Tensor[(16, 13, 13), int32] */;
  %641 = exp(%623) /* ty=Tensor[(14, 7, 6), float32] */;
  %642 = greater(%628, %629) /* ty=Tensor[(14, 7, 6), bool] */;
  %643 = sigmoid(%637) /* ty=Tensor[(14, 7, 6), float64] */;
  %644 = %638.0;
  (%639, %640, meta[relay.Constant][21] /* ty=Tensor[(2704), int32] */, %641, %642, %643, %644)
}

def @func_10002() -> (Tensor[(4, 6, 7), float64], Tensor[(12, 10, 2), float32]) {
  @func_10000() /* ty=(Tensor[(4, 6, 7), float64], Tensor[(12, 10, 2), float32]) */
}

def @func_10538() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_10536() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_9818() -> (Tensor[(12, 10, 2), float32],) {
  %645 = @func_4650() /* ty=Tensor[(12, 10, 2), float32] */;
  (%645,)
}

def @func_10328() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(117, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 3, 15), float32], Tensor[(540), float32], Tensor[(12, 10, 2), float32]) {
  %666 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(117, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 3, 15), float32], Tensor[(540), float32], Tensor[(12, 10, 2), float32]) {
    %646 = @func_3991() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %647 = @func_3038() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %648 = cast(meta[relay.Constant][22] /* ty=Tensor[(117, 3), float32] */, dtype="float32") /* ty=Tensor[(117, 3), float32] */;
    %649 = reshape(%648, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
    %650 = @func_4296(%649) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), int64], Tensor[(12, 10, 2), float32]) */;
    %651 = @func_2388() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %652 = @func_4572() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %653 = cast(meta[relay.Constant][23] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %654 = reshape(%653, newshape=[12, 3, 15]) /* ty=Tensor[(12, 3, 15), float32] */;
    %655 = @func_6449(%654) /* ty=(Tensor[(12, 3, 15), float32], Tensor[(14, 12, 16), bool], Tensor[(12, 10, 2), float32]) */;
    %656 = @func_7805() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %657 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
    %658 = %646.0;
    %659 = %647.1;
    %660 = @func_3433() /* ty=Tensor[(12, 10, 2), float32] */;
    %661 = %650.1;
    %662 = %651.0;
    %663 = %652.1;
    %664 = %655.0;
    %665 = %656.1;
    (%657, %658, %659, %660, %661, meta[relay.Constant][22] /* ty=Tensor[(117, 3), float32] */, %662, %663, %664, meta[relay.Constant][23] /* ty=Tensor[(540), float32] */, %665)
  };
  %666() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(117, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 3, 15), float32], Tensor[(540), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_9765(%var_9764: Tensor[(12, 13, 13), float64]) -> (Tensor[(12, 13, 13), bool], Tensor[(12, 10, 2), float32]) {
  %679 = fn (%var_9749: Tensor[(12, 13, 13), float64]) -> (Tensor[(12, 13, 13), bool], Tensor[(12, 10, 2), float32]) {
    %667 = cast(%var_9749, dtype="bool") /* ty=Tensor[(12, 13, 13), bool] */;
    %668 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(12, 13, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %669 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 13, 13), float64] */, dtype="bool") /* ty=Tensor[(12, 13, 13), bool] */;
    %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %671 = less(%669, %670) /* ty=Tensor[(12, 13, 13), bool] */;
    %672 = cast(%671, dtype="bool") /* ty=Tensor[(12, 13, 13), bool] */;
    %673 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(12, 13, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %674 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 13, 13), float64] */, dtype="bool") /* ty=Tensor[(12, 13, 13), bool] */;
    %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %676 = @func_2388() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %677 = greater_equal(%674, %675) /* ty=Tensor[(12, 13, 13), bool] */;
    %678 = %676.0;
    (%677, %678)
  };
  %679(%var_9764) /* ty=(Tensor[(12, 13, 13), bool], Tensor[(12, 10, 2), float32]) */
}

def @func_4613() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_4611() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_2573() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %680 = @func_1382() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %681 = @func_1539() /* ty=Tensor[(12, 10, 2), float32] */;
  %682 = %680.1;
  (%681, %682)
}

def @func_10536() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %683 = @func_4093() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %684 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %685 = %683.0;
  %686 = %684.1;
  (%685, %686)
}

def @func_8923() -> (Tensor[(12, 10, 2), float32],) {
  %688 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %687 = @func_1137() /* ty=Tensor[(12, 10, 2), float32] */;
    (%687,)
  };
  %688() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_1662() -> (Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %695 = fn () -> (Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %689 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 1, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 1, 3), float32] */;
    %690 = cast(meta[relay.Constant][26] /* ty=Tensor[(13, 9, 3), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
    %691 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %692 = subtract(%689, %690) /* ty=Tensor[(13, 9, 3), float32] */;
    %693 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
    %694 = %691.0;
    (%692, %693, %694)
  };
  %695() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_11133() -> (Tensor[(12, 10, 2), float32],) {
  %698 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %696 = @func_6711() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(240), float32], Tensor[(2688), uint16]) */;
    %697 = %696.1;
    (%697,)
  };
  %698() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_4650() -> Tensor[(12, 10, 2), float32] {
  @func_3570() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_6517() -> (Tensor[(7, 5, 9), float32],) {
  %704 = fn () -> (Tensor[(7, 5, 9), float32],) {
    %699 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
    %700 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(7, 5, 9), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %701 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(7, 5, 9), float32] */;
    %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %703 = divide(%701, %702) /* ty=Tensor[(7, 5, 9), float32] */;
    (%703,)
  };
  %704() /* ty=(Tensor[(7, 5, 9), float32],) */
}

def @func_3462() -> Tensor[(12, 10, 2), float32] {
  @func_3460() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_4076() -> Tensor[(14, 12, 16), bool] {
  @func_4074() /* ty=Tensor[(14, 12, 16), bool] */
}

def @func_10981() -> (Tensor[(12, 10, 2), float32],) {
  %705 = @func_6400() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %706 = %705.0;
  (%706,)
}

def @func_2735(%var_2733: uint8, %var_2734: Tensor[(14, 11, 3), uint8]) -> (Tensor[(14, 11, 3), bool],) {
  %710 = fn (%var_2720: uint8, %var_2721: Tensor[(14, 11, 3), uint8]) -> (Tensor[(14, 11, 3), bool],) {
    %707 = cast(%var_2720, dtype="bool") /* ty=bool */;
    %708 = cast(%var_2721, dtype="bool") /* ty=Tensor[(14, 11, 3), bool] */;
    %709 = less(%707, %708) /* ty=Tensor[(14, 11, 3), bool] */;
    (%709,)
  };
  %710(%var_2733, %var_2734) /* ty=(Tensor[(14, 11, 3), bool],) */
}

def @func_9520() -> Tensor[(12, 10, 2), float32] {
  @func_9518() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_5276() -> Tensor[(12, 10, 2), float32] {
  %712 = fn () -> Tensor[(12, 10, 2), float32] {
    %711 = @func_4611() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %711.0
  };
  %712() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_2342(%var_2341: Tensor[(240), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(240), float64], Tensor[(12, 10, 2), float32], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 2), float32], Tensor[(351), float32]) {
  %726 = fn (%var_2306: Tensor[(240), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(240), float64], Tensor[(12, 10, 2), float32], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 2), float32], Tensor[(351), float32]) {
    %713 = cast(%var_2306, dtype="float64") /* ty=Tensor[(240), float64] */;
    %714 = reshape(%713, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float64] */;
    %715 = @func_961(%714) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), uint16], Tensor[(12, 15, 5), float64], Tensor[(900), float64], Tensor[(12, 10, 2), float32]) */;
    %716 = cast(meta[relay.Constant][29] /* ty=Tensor[(5, 14, 8), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
    %717 = rsqrt(%716) /* ty=Tensor[(5, 14, 8), float64] */;
    %718 = cast(%717, dtype="float64") /* ty=Tensor[(5, 14, 8), float64] */;
    %719 = cast(meta[relay.Constant][30] /* ty=Tensor[(351), float32] */, dtype="float32") /* ty=Tensor[(351), float32] */;
    %720 = reshape(%719, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
    %721 = @func_2278(%720) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) */;
    %722 = %715.0;
    %723 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
    %724 = sin(%718) /* ty=Tensor[(5, 14, 8), float64] */;
    %725 = %721.1;
    (%722, %var_2306, %723, %724, %725, meta[relay.Constant][30] /* ty=Tensor[(351), float32] */)
  };
  %726(%var_2341) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(240), float64], Tensor[(12, 10, 2), float32], Tensor[(5, 14, 8), float64], Tensor[(12, 10, 2), float32], Tensor[(351), float32]) */
}

def @func_7135(%var_7133: Tensor[(14, 1, 2), uint64], %var_7134: Tensor[(14, 10, 2), uint64]) -> Tensor[(14, 10, 2), uint64] {
  %729 = fn (%var_7122: Tensor[(14, 1, 2), uint64], %var_7123: Tensor[(14, 10, 2), uint64]) -> Tensor[(14, 10, 2), uint64] {
    %727 = cast(%var_7122, dtype="uint64") /* ty=Tensor[(14, 1, 2), uint64] */;
    %728 = cast(%var_7123, dtype="uint64") /* ty=Tensor[(14, 10, 2), uint64] */;
    bitwise_xor(%727, %728) /* ty=Tensor[(14, 10, 2), uint64] */
  };
  %729(%var_7133, %var_7134) /* ty=Tensor[(14, 10, 2), uint64] */
}

def @func_5141(%var_5140: Tensor[(3, 300), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(3, 300), float64]) {
  %735 = fn (%var_5133: Tensor[(3, 300), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(3, 300), float64]) {
    %730 = cast(%var_5133, dtype="float64") /* ty=Tensor[(3, 300), float64] */;
    %731 = reshape(%730, newshape=[900]) /* ty=Tensor[(900), float64] */;
    %732 = @func_2049(%731) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(900), float64], Tensor[(12, 10, 2), bool]) */;
    %733 = @func_4650() /* ty=Tensor[(12, 10, 2), float32] */;
    %734 = %732.2;
    (%733, %734, %var_5133)
  };
  %735(%var_5140) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(3, 300), float64]) */
}

def @func_8695() -> (Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) {
  @func_8693() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */
}

def @func_8823() -> (Tensor[(4, 10, 1), float64],) {
  %736 = @func_6046() /* ty=Tensor[(4, 10, 1), float64] */;
  (%736,)
}

def @func_2824(%var_2754: Tensor[(11, 13, 11), float64], %var_2755: Tensor[(11, 13, 11), float64], %var_2785: Tensor[(11, 13, 11), float32], %var_2803: Tensor[(264), bool]) -> (Tensor[(240), float32], uint32, Tensor[(1350), uint32], Tensor[(11, 13, 11), bool], Tensor[(12, 10, 2), float32], Tensor[(264), bool], Tensor[(12, 10, 2), float32], Tensor[(11, 13, 11), float32]) {
  %737 = cast(meta[relay.Constant][31] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %738 = cast(meta[relay.Constant][32] /* ty=Tensor[(1350), uint32] */, dtype="uint32") /* ty=Tensor[(1350), uint32] */;
  %739 = reshape(%737, newshape=[]) /* ty=uint32 */;
  %740 = reshape(%738, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), uint32] */;
  %741 = @func_1858(%739, %740) /* ty=(Tensor[(15, 9, 10), uint32], Tensor[(12, 10, 2), int8], Tensor[(240), float32]) */;
  %742 = cast(%var_2755, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %743 = shape_of(%var_2754, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%var_2754, dtype="float64") /* ty=Tensor[(11, 13, 11), float64] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %746 = power(%744, %745) /* ty=Tensor[(11, 13, 11), float64] */;
  %747 = cast(%746, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %748 = atanh(%747) /* ty=Tensor[(11, 13, 11), float32] */;
  %749 = cast(%var_2785, dtype="bool") /* ty=Tensor[(11, 13, 11), bool] */;
  %750 = shape_of(%748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(%748, dtype="bool") /* ty=Tensor[(11, 13, 11), bool] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %753 = cast(%var_2803, dtype="bool") /* ty=Tensor[(264), bool] */;
  %754 = cast(%var_2803, dtype="bool") /* ty=Tensor[(264), bool] */;
  %755 = reshape(%753, newshape=[8, 3, 11]) /* ty=Tensor[(8, 3, 11), bool] */;
  %756 = reshape(%754, newshape=[8, 3, 11]) /* ty=Tensor[(8, 3, 11), bool] */;
  %757 = @func_1958(%755, %756) /* ty=(Tensor[(8, 3, 11), bool], Tensor[(12, 10, 2), float32]) */;
  %758 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %759 = cast(%var_2785, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %760 = erf(%759) /* ty=Tensor[(11, 13, 11), float32] */;
  %761 = cast(%760, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %762 = log10(%761) /* ty=Tensor[(11, 13, 11), float32] */;
  %763 = cast(%762, dtype="float32") /* ty=Tensor[(11, 13, 11), float32] */;
  %764 = %741.2;
  %765 = logical_and(%751, %752) /* ty=Tensor[(11, 13, 11), bool] */;
  %766 = %757.1;
  %767 = %758.0;
  %768 = exp(%763) /* ty=Tensor[(11, 13, 11), float32] */;
  (%764, meta[relay.Constant][31] /* ty=uint32 */, meta[relay.Constant][32] /* ty=Tensor[(1350), uint32] */, %765, %766, %var_2803, %767, %768)
}

def @func_1596() -> Tensor[(12, 10, 2), float32] {
  %769 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %769.0
}

def @func_5729(%var_5727: Tensor[(2, 5, 12), float32], %var_5728: Tensor[(2, 5, 12), float32]) -> (Tensor[(2, 5, 12), float32], Tensor[(2, 5, 12), float32]) {
  %779 = fn (%var_5671: Tensor[(2, 5, 12), float32], %var_5672: Tensor[(2, 5, 12), float32]) -> (Tensor[(2, 5, 12), float32], Tensor[(2, 5, 12), float32]) {
    %770 = cast(%var_5672, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
    %771 = shape_of(%var_5671, dtype="int32") /* ty=Tensor[(3), int32] */;
    %772 = cast(%var_5671, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
    %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %774 = cast(%var_5672, dtype="float64") /* ty=Tensor[(2, 5, 12), float64] */;
    %775 = sin(%774) /* ty=Tensor[(2, 5, 12), float64] */;
    %776 = cast(%775, dtype="float32") /* ty=Tensor[(2, 5, 12), float32] */;
    %777 = power(%772, %773) /* ty=Tensor[(2, 5, 12), float32] */;
    %778 = erf(%776) /* ty=Tensor[(2, 5, 12), float32] */;
    (%777, %778)
  };
  %779(%var_5727, %var_5728) /* ty=(Tensor[(2, 5, 12), float32], Tensor[(2, 5, 12), float32]) */
}

def @func_6142() -> (Tensor[(12, 10, 2), float32],) {
  @func_6140() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_8401(%var_8354: Tensor[(784), int8], %var_8387: Tensor[(8, 14, 7), int32]) -> (Tensor[(12, 10, 2), float32], Tensor[(8, 14, 7), bool]) {
  %780 = cast(%var_8354, dtype="int8") /* ty=Tensor[(784), int8] */;
  %781 = cast(%var_8354, dtype="int8") /* ty=Tensor[(784), int8] */;
  %782 = reshape(%780, newshape=[8, 14, 7]) /* ty=Tensor[(8, 14, 7), int8] */;
  %783 = reshape(%781, newshape=[8, 14, 7]) /* ty=Tensor[(8, 14, 7), int8] */;
  %784 = @func_7950(%782, %783) /* ty=(Tensor[(8, 14, 7), bool],) */;
  %785 = %784.0;
  %786 = cast(%var_8354, dtype="int32") /* ty=Tensor[(784), int32] */;
  %787 = shape_of(%785, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(%785, dtype="int32") /* ty=Tensor[(8, 14, 7), int32] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %790 = right_shift(%788, %789) /* ty=Tensor[(8, 14, 7), int32] */;
  %791 = cast(%var_8387, dtype="bool") /* ty=Tensor[(8, 14, 7), bool] */;
  %792 = shape_of(%790, dtype="int32") /* ty=Tensor[(3), int32] */;
  %793 = cast(%790, dtype="bool") /* ty=Tensor[(8, 14, 7), bool] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %795 = @func_1596() /* ty=Tensor[(12, 10, 2), float32] */;
  %796 = not_equal(%793, %794) /* ty=Tensor[(8, 14, 7), bool] */;
  (%795, %796)
}

def @func_577() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_6598() -> (Tensor[(12, 10, 2), float32],) {
  %797 = @func_1661() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %798 = %797.2;
  (%798,)
}

def @func_9518() -> Tensor[(12, 10, 2), float32] {
  @func_8815() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_6354() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_6352() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_1961(%var_1959: Tensor[(8, 3, 11), bool], %var_1960: Tensor[(8, 3, 11), bool]) -> (Tensor[(8, 3, 11), bool], Tensor[(12, 10, 2), float32]) {
  %806 = fn (%var_1947: Tensor[(8, 3, 11), bool], %var_1948: Tensor[(8, 3, 11), bool]) -> (Tensor[(8, 3, 11), bool], Tensor[(12, 10, 2), float32]) {
    %799 = cast(%var_1948, dtype="bool") /* ty=Tensor[(8, 3, 11), bool] */;
    %800 = shape_of(%var_1947, dtype="int32") /* ty=Tensor[(3), int32] */;
    %801 = cast(%var_1947, dtype="bool") /* ty=Tensor[(8, 3, 11), bool] */;
    %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %803 = @func_1493() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %804 = logical_and(%801, %802) /* ty=Tensor[(8, 3, 11), bool] */;
    %805 = %803.0;
    (%804, %805)
  };
  %806(%var_1959, %var_1960) /* ty=(Tensor[(8, 3, 11), bool], Tensor[(12, 10, 2), float32]) */
}

def @func_886() -> (Tensor[(12, 10, 2), float32],) {
  @func_884() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_6204() -> (Tensor[(12, 10, 2), float32],) {
  %809 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %807 = @func_1737() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %808 = %807.0;
    (%808,)
  };
  %809() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_4164(%var_4163: Tensor[(13, 8, 4), float32]) -> (Tensor[(13, 8, 4), bool],) {
  %817 = fn (%var_4156: Tensor[(13, 8, 4), float32]) -> (Tensor[(13, 8, 4), bool],) {
    %810 = cast(%var_4156, dtype="float32") /* ty=Tensor[(13, 8, 4), float32] */;
    %811 = atanh(%810) /* ty=Tensor[(13, 8, 4), float32] */;
    %812 = cast(%811, dtype="bool") /* ty=Tensor[(13, 8, 4), bool] */;
    %813 = shape_of(%var_4156, dtype="int32") /* ty=Tensor[(3), int32] */;
    %814 = cast(%var_4156, dtype="bool") /* ty=Tensor[(13, 8, 4), bool] */;
    %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %816 = logical_or(%814, %815) /* ty=Tensor[(13, 8, 4), bool] */;
    (%816,)
  };
  %817(%var_4163) /* ty=(Tensor[(13, 8, 4), bool],) */
}

def @func_4296(%var_4287: Tensor[(13, 9, 3), float32]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), int64], Tensor[(12, 10, 2), float32]) {
  %818 = @func_2237() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %819 = @func_2106() /* ty=Tensor[(13, 9, 3), float32] */;
  %820 = cast(%var_4287, dtype="int64") /* ty=Tensor[(13, 9, 3), int64] */;
  %821 = shape_of(%819, dtype="int32") /* ty=Tensor[(3), int32] */;
  %822 = cast(%819, dtype="int64") /* ty=Tensor[(13, 9, 3), int64] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %824 = @func_2573() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %825 = @func_3645() /* ty=Tensor[(12, 10, 2), float32] */;
  %826 = %818.0;
  %827 = bitwise_or(%822, %823) /* ty=Tensor[(13, 9, 3), int64] */;
  %828 = %824.1;
  (%825, %826, %827, %828)
}

def @func_7711() -> (Tensor[(12, 10, 2), float32],) {
  %829 = @func_4419() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */;
  %830 = %829.0;
  (%830,)
}

def @func_1298() -> (Tensor[(12, 10, 2), float32],) {
  %831 = @func_1263() /* ty=Tensor[(12, 10, 2), float32] */;
  (%831,)
}

def @func_9944() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(351), float32], Tensor[(12, 10, 2), bool]) {
  @func_9942() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(351), float32], Tensor[(12, 10, 2), bool]) */
}

def @func_4915() -> (Tensor[(12, 10, 2), float32], Tensor[(14, 12, 16), uint32], Tensor[(12, 10, 2), float32], Tensor[(450, 2), float64], Tensor[(12, 10, 2), float32]) {
  %851 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(14, 12, 16), uint32], Tensor[(12, 10, 2), float32], Tensor[(450, 2), float64], Tensor[(12, 10, 2), float32]) {
    %832 = @func_2966() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) */;
    %833 = %832.2;
    %834 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 12, 16), bool] */, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
    %835 = shape_of(%833, dtype="int32") /* ty=Tensor[(3), int32] */;
    %836 = cast(%833, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
    %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %838 = divide(%836, %837) /* ty=Tensor[(14, 12, 16), float32] */;
    %839 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 12, 16), bool] */, dtype="uint32") /* ty=Tensor[(14, 12, 16), uint32] */;
    %840 = shape_of(%838, dtype="int32") /* ty=Tensor[(3), int32] */;
    %841 = cast(%838, dtype="uint32") /* ty=Tensor[(14, 12, 16), uint32] */;
    %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %843 = cast(meta[relay.Constant][34] /* ty=Tensor[(450, 2), float64] */, dtype="float64") /* ty=Tensor[(450, 2), float64] */;
    %844 = reshape(%843, newshape=[900]) /* ty=Tensor[(900), float64] */;
    %845 = @func_2049(%844) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(900), float64], Tensor[(12, 10, 2), bool]) */;
    %846 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %847 = @func_1137() /* ty=Tensor[(12, 10, 2), float32] */;
    %848 = bitwise_xor(%841, %842) /* ty=Tensor[(14, 12, 16), uint32] */;
    %849 = %845.0;
    %850 = %846.0;
    (%847, %848, %849, meta[relay.Constant][34] /* ty=Tensor[(450, 2), float64] */, %850)
  };
  %851() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(14, 12, 16), uint32], Tensor[(12, 10, 2), float32], Tensor[(450, 2), float64], Tensor[(12, 10, 2), float32]) */
}

def @func_4094() -> (Tensor[(12, 10, 2), float32],) {
  %854 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %852 = @func_2573() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %853 = %852.1;
    (%853,)
  };
  %854() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_1031() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_1029() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_4611() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %855 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %856 = @func_2388() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %857 = %855.0;
  %858 = %856.0;
  (%857, %858)
}

def @func_3618(%var_3617: Tensor[(13, 5, 14), float64]) -> Tensor[(13, 5, 14), float64] {
  %860 = fn (%var_3602: Tensor[(13, 5, 14), float64]) -> Tensor[(13, 5, 14), float64] {
    %859 = cast(%var_3602, dtype="float64") /* ty=Tensor[(13, 5, 14), float64] */;
    cosh(%859) /* ty=Tensor[(13, 5, 14), float64] */
  };
  %860(%var_3617) /* ty=Tensor[(13, 5, 14), float64] */
}

def @func_8971() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %865 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %861 = @func_1820() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %862 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %863 = %861.0;
    %864 = %862.0;
    (%863, %864)
  };
  %865() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_1264() -> Tensor[(12, 10, 2), float32] {
  %867 = fn () -> Tensor[(12, 10, 2), float32] {
    %866 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %866.0
  };
  %867() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_402(%var_401: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) {
  %877 = fn (%var_380: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) {
    %868 = @func_329() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %869 = %868.0;
    %870 = cast(%var_380, dtype="int8") /* ty=Tensor[(12, 10, 2), int8] */;
    %871 = shape_of(%869, dtype="int32") /* ty=Tensor[(3), int32] */;
    %872 = cast(%869, dtype="int8") /* ty=Tensor[(12, 10, 2), int8] */;
    %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %874 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %875 = minimum(%872, %873) /* ty=Tensor[(12, 10, 2), int8] */;
    %876 = %874.0;
    (%875, %876)
  };
  %877(%var_401) /* ty=(Tensor[(12, 10, 2), int8], Tensor[(12, 10, 2), float32]) */
}

def @func_3594() -> Tensor[(12, 10, 2), float32] {
  %879 = fn () -> Tensor[(12, 10, 2), float32] {
    %878 = @func_1382() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %878.0
  };
  %879() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_4859(%var_4857: Tensor[(7, 7, 6), float32]) -> Tensor[(7, 7, 6), float32] {
  @func_4856(%var_4857) /* ty=Tensor[(7, 7, 6), float32] */
}

def @func_3949() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_3947() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_3923(%var_3921: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), uint8],) {
  @func_3920(%var_3921) /* ty=(Tensor[(12, 10, 2), uint8],) */
}

def @func_4498() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(900), uint8], Tensor[(12, 10, 2), float32]) {
  %880 = @func_3306() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %881 = cast(meta[relay.Constant][35] /* ty=Tensor[(900), float64] */, dtype="float64") /* ty=Tensor[(900), float64] */;
  %882 = reshape(%881, newshape=[12, 15, 5]) /* ty=Tensor[(12, 15, 5), float64] */;
  %883 = @func_921(%882) /* ty=(Tensor[(12, 15, 5), float64], Tensor[(12, 10, 2), float32]) */;
  %884 = %883.0;
  %885 = cast(%884, dtype="uint8") /* ty=Tensor[(12, 15, 5), uint8] */;
  %886 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(900), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %887 = cast(meta[relay.Constant][35] /* ty=Tensor[(900), float64] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %889 = @func_2237() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %890 = %880.1;
  %891 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
  %892 = bitwise_or(%887, %888) /* ty=Tensor[(900), uint8] */;
  %893 = %889.0;
  (%890, %891, %892, %893)
}

def @func_11119(%var_11118: Tensor[(6, 8, 12), float32]) -> (Tensor[(6, 8, 12), float32],) {
  %896 = fn (%var_11107: Tensor[(6, 8, 12), float32]) -> (Tensor[(6, 8, 12), float32],) {
    %894 = cast(%var_11107, dtype="float32") /* ty=Tensor[(6, 8, 12), float32] */;
    %895 = erf(%894) /* ty=Tensor[(6, 8, 12), float32] */;
    (%895,)
  };
  %896(%var_11118) /* ty=(Tensor[(6, 8, 12), float32],) */
}

def @func_3571() -> Tensor[(12, 10, 2), float32] {
  %898 = fn () -> Tensor[(12, 10, 2), float32] {
    %897 = @func_2388() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %897.0
  };
  %898() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_300() -> (Tensor[(12, 10, 2), float32],) {
  %901 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %899 = cast(meta[relay.Constant][36] /* ty=Tensor[(12, 10, 2), float32] */, dtype="float32") /* ty=Tensor[(12, 10, 2), float32] */;
    %900 = atanh(%899) /* ty=Tensor[(12, 10, 2), float32] */;
    (%900,)
  };
  %901() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_10189() -> (Tensor[(3, 9, 12), float32], Tensor[(12, 10, 2), float32]) {
  %902 = @func_8483() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32]) */;
  %903 = @func_7114() /* ty=Tensor[(3, 9, 12), float32] */;
  %904 = %902.1;
  (%903, %904)
}

def @func_5428(%var_5427: Tensor[(7, 1, 12), float64]) -> Tensor[(7, 1, 12), float64] {
  %906 = fn (%var_5423: Tensor[(7, 1, 12), float64]) -> Tensor[(7, 1, 12), float64] {
    %905 = cast(%var_5423, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
    tan(%905) /* ty=Tensor[(7, 1, 12), float64] */
  };
  %906(%var_5427) /* ty=Tensor[(7, 1, 12), float64] */
}

def @func_6451(%var_6450: Tensor[(12, 3, 15), float32]) -> (Tensor[(12, 3, 15), float32], Tensor[(14, 12, 16), bool], Tensor[(12, 10, 2), float32]) {
  %912 = fn (%var_6427: Tensor[(12, 3, 15), float32]) -> (Tensor[(12, 3, 15), float32], Tensor[(14, 12, 16), bool], Tensor[(12, 10, 2), float32]) {
    %907 = cast(%var_6427, dtype="float32") /* ty=Tensor[(12, 3, 15), float32] */;
    %908 = @func_3583() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %909 = sqrt(%907) /* ty=Tensor[(12, 3, 15), float32] */;
    %910 = @func_4074() /* ty=Tensor[(14, 12, 16), bool] */;
    %911 = %908.0;
    (%909, %910, %911)
  };
  %912(%var_6450) /* ty=(Tensor[(12, 3, 15), float32], Tensor[(14, 12, 16), bool], Tensor[(12, 10, 2), float32]) */
}

def @func_1493() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %913 = @func_1382() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %914 = @func_575() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
  %915 = %913.1;
  %916 = %914.1;
  %917 = @func_1263() /* ty=Tensor[(12, 10, 2), float32] */;
  %918 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
  (%915, %916, %917, %918)
}

def @func_5932() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(30), float32], Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(12, 10, 2), float32]) {
  @func_5930() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(30), float32], Tensor[(12, 10, 2), float32], Tensor[(1, 5, 6), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_2545(%var_2544: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), uint64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float64]) {
  %934 = fn (%var_2479: Tensor[(12, 10, 2), float32]) -> (Tensor[(12, 10, 2), uint64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float64]) {
    %919 = @func_1737() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %920 = %919.0;
    %921 = cast(%var_2479, dtype="uint64") /* ty=Tensor[(12, 10, 2), uint64] */;
    %922 = shape_of(%920, dtype="int32") /* ty=Tensor[(3), int32] */;
    %923 = cast(%920, dtype="uint64") /* ty=Tensor[(12, 10, 2), uint64] */;
    %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %925 = @func_1820() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %926 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %927 = cast(%920, dtype="float64") /* ty=Tensor[(12, 10, 2), float64] */;
    %928 = cos(%927) /* ty=Tensor[(12, 10, 2), float64] */;
    %929 = cast(%928, dtype="float64") /* ty=Tensor[(12, 10, 2), float64] */;
    %930 = add(%923, %924) /* ty=Tensor[(12, 10, 2), uint64] */;
    %931 = %925.0;
    %932 = %926.0;
    %933 = tan(%929) /* ty=Tensor[(12, 10, 2), float64] */;
    (%930, %931, %932, %933)
  };
  %934(%var_2544) /* ty=(Tensor[(12, 10, 2), uint64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float64]) */
}

def @func_7895(%var_7891: Tensor[(16, 13, 13), int32]) -> Tensor[(16, 13, 13), int32] {
  %935 = cast(%var_7891, dtype="int32") /* ty=Tensor[(16, 13, 13), int32] */;
  %936 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(16, 13, 13), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %937 = cast(meta[relay.Constant][37] /* ty=Tensor[(16, 13, 13), int32] */, dtype="int32") /* ty=Tensor[(16, 13, 13), int32] */;
  %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  minimum(%937, %938) /* ty=Tensor[(16, 13, 13), int32] */
}

def @func_8523() -> Tensor[(12, 10, 2), float32] {
  %939 = fn () -> Tensor[(12, 10, 2), float32] {
    @func_5275() /* ty=Tensor[(12, 10, 2), float32] */
  };
  %939() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_8665() -> Tensor[(13, 9, 3), float32] {
  %940 = @func_5660() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */;
  %940.1
}

def @func_9312() -> (Tensor[(4, 10, 1), float64], Tensor[(4, 10, 1), float64], Tensor[(12, 10, 2), float32]) {
  %941 = @func_6046() /* ty=Tensor[(4, 10, 1), float64] */;
  %942 = @func_6046() /* ty=Tensor[(4, 10, 1), float64] */;
  %943 = @func_4380() /* ty=Tensor[(12, 10, 2), float32] */;
  (%941, %942, %943)
}

def @func_5662() -> (Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) {
  @func_5660() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */
}

def @func_5051() -> Tensor[(12, 10, 2), float32] {
  %944 = fn () -> Tensor[(12, 10, 2), float32] {
    @func_1539() /* ty=Tensor[(12, 10, 2), float32] */
  };
  %944() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_8302() -> Tensor[(12, 10, 2), float32] {
  %945 = fn () -> Tensor[(12, 10, 2), float32] {
    @func_5050() /* ty=Tensor[(12, 10, 2), float32] */
  };
  %945() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_8905() -> (Tensor[(16, 3, 4), uint64], Tensor[(16, 3, 4), float32]) {
  %962 = fn () -> (Tensor[(16, 3, 4), uint64], Tensor[(16, 3, 4), float32]) {
    %946 = @func_7982() /* ty=(Tensor[(16, 3, 4), float32], Tensor[(4, 10, 1), float64]) */;
    %947 = %946.0;
    %948 = cast(meta[relay.Constant][38] /* ty=Tensor[(16, 3, 4), float32] */, dtype="bool") /* ty=Tensor[(16, 3, 4), bool] */;
    %949 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
    %950 = cast(%947, dtype="bool") /* ty=Tensor[(16, 3, 4), bool] */;
    %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %952 = greater_equal(%950, %951) /* ty=Tensor[(16, 3, 4), bool] */;
    %953 = cast(%952, dtype="float64") /* ty=Tensor[(16, 3, 4), float64] */;
    %954 = rsqrt(%953) /* ty=Tensor[(16, 3, 4), float64] */;
    %955 = cast(%954, dtype="uint64") /* ty=Tensor[(16, 3, 4), uint64] */;
    %956 = shape_of(%947, dtype="int32") /* ty=Tensor[(3), int32] */;
    %957 = cast(%947, dtype="uint64") /* ty=Tensor[(16, 3, 4), uint64] */;
    %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %959 = cast(%947, dtype="float32") /* ty=Tensor[(16, 3, 4), float32] */;
    %960 = add(%957, %958) /* ty=Tensor[(16, 3, 4), uint64] */;
    %961 = cosh(%959) /* ty=Tensor[(16, 3, 4), float32] */;
    (%960, %961)
  };
  %962() /* ty=(Tensor[(16, 3, 4), uint64], Tensor[(16, 3, 4), float32]) */
}

def @func_3039() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %974 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %963 = @func_299() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %964 = @func_1661() /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */;
    %965 = @func_2237() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %966 = %964.0;
    %967 = cast(%966, dtype="float32") /* ty=Tensor[(13, 9, 3), float32] */;
    %968 = reshape(%967, newshape=[13, 9, 3]) /* ty=Tensor[(13, 9, 3), float32] */;
    %969 = @func_2278(%968) /* ty=(Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32]) */;
    %970 = %963.0;
    %971 = @func_1539() /* ty=Tensor[(12, 10, 2), float32] */;
    %972 = %965.0;
    %973 = %969.1;
    (%970, %971, %966, %972, %973)
  };
  %974() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_10000() -> (Tensor[(4, 6, 7), float64], Tensor[(12, 10, 2), float32]) {
  %975 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %976 = asinh(%975) /* ty=Tensor[(4, 6, 7), float64] */;
  %977 = cast(%976, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %978 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(4, 6, 7), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 6, 7), float64] */, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %981 = floor_divide(%979, %980) /* ty=Tensor[(4, 6, 7), float64] */;
  %982 = @func_3570() /* ty=Tensor[(12, 10, 2), float32] */;
  (%981, %982)
}

def @func_6925(%var_6923: Tensor[(351), float32]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(351), float64]) {
  @func_6922(%var_6923) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(351), float64]) */
}

def @func_2856(%var_2847: Tensor[(1, 5, 6), float32]) -> (Tensor[(1, 5, 6), float32],) {
  %983 = cast(%var_2847, dtype="float32") /* ty=Tensor[(1, 5, 6), float32] */;
  %984 = asin(%983) /* ty=Tensor[(1, 5, 6), float32] */;
  (%984,)
}

def @func_6989() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(375), bool]) {
  @func_6987() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(375), bool]) */
}

def @func_2830(%var_2826: Tensor[(11, 13, 11), float64], %var_2827: Tensor[(11, 13, 11), float64], %var_2828: Tensor[(11, 13, 11), float32], %var_2829: Tensor[(264), bool]) -> (Tensor[(240), float32], uint32, Tensor[(1350), uint32], Tensor[(11, 13, 11), bool], Tensor[(12, 10, 2), float32], Tensor[(264), bool], Tensor[(12, 10, 2), float32], Tensor[(11, 13, 11), float32]) {
  @func_2824(%var_2826, %var_2827, %var_2828, %var_2829) /* ty=(Tensor[(240), float32], uint32, Tensor[(1350), uint32], Tensor[(11, 13, 11), bool], Tensor[(12, 10, 2), float32], Tensor[(264), bool], Tensor[(12, 10, 2), float32], Tensor[(11, 13, 11), float32]) */
}

def @func_5030() -> (Tensor[(14, 12, 16), uint32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(18, 50), float64]) {
  @func_5028() /* ty=(Tensor[(14, 12, 16), uint32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(18, 50), float64]) */
}

def @func_7580(%var_7578: Tensor[(14, 1, 6), uint64], %var_7579: Tensor[(14, 14, 6), uint64]) -> (Tensor[(14, 14, 6), uint64], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32], Tensor[(14, 14, 6), float32], Tensor[(7, 1, 12), float32], Tensor[(12, 10, 2), float32]) {
  %999 = fn (%var_7544: Tensor[(14, 1, 6), uint64], %var_7545: Tensor[(14, 14, 6), uint64]) -> (Tensor[(14, 14, 6), uint64], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32], Tensor[(14, 14, 6), float32], Tensor[(7, 1, 12), float32], Tensor[(12, 10, 2), float32]) {
    %985 = cast(%var_7544, dtype="uint64") /* ty=Tensor[(14, 1, 6), uint64] */;
    %986 = cast(%var_7545, dtype="uint64") /* ty=Tensor[(14, 14, 6), uint64] */;
    %987 = cast(%var_7545, dtype="float32") /* ty=Tensor[(14, 14, 6), float32] */;
    %988 = cast(%var_7544, dtype="float64") /* ty=Tensor[(14, 1, 6), float64] */;
    %989 = reshape(%988, newshape=[7, 1, 12]) /* ty=Tensor[(7, 1, 12), float64] */;
    %990 = @func_5426(%989) /* ty=Tensor[(7, 1, 12), float64] */;
    %991 = cast(%990, dtype="float32") /* ty=Tensor[(7, 1, 12), float32] */;
    %992 = @func_2388() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %993 = subtract(%985, %986) /* ty=Tensor[(14, 14, 6), uint64] */;
    %994 = @func_7238() /* ty=Tensor[(13, 9, 3), float32] */;
    %995 = @func_3363() /* ty=Tensor[(13, 9, 3), float32] */;
    %996 = sinh(%987) /* ty=Tensor[(14, 14, 6), float32] */;
    %997 = sin(%991) /* ty=Tensor[(7, 1, 12), float32] */;
    %998 = %992.0;
    (%993, %994, %995, %996, %997, %998)
  };
  %999(%var_7578, %var_7579) /* ty=(Tensor[(14, 14, 6), uint64], Tensor[(13, 9, 3), float32], Tensor[(13, 9, 3), float32], Tensor[(14, 14, 6), float32], Tensor[(7, 1, 12), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_3828() -> Tensor[(12, 10, 2), float32] {
  @func_3826() /* ty=Tensor[(12, 10, 2), float32] */
}

def @func_3181(%var_3179: Tensor[(9, 10, 16), float64], %var_3180: Tensor[(240), float32]) -> (Tensor[(9, 10, 16), float64], Tensor[(12, 10, 2), bool], Tensor[(240), float32]) {
  %1011 = fn (%var_3164: Tensor[(9, 10, 16), float64], %var_3170: Tensor[(240), float32]) -> (Tensor[(9, 10, 16), float64], Tensor[(12, 10, 2), bool], Tensor[(240), float32]) {
    %1000 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
    %1001 = shape_of(%var_3164, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1002 = cast(%var_3164, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
    %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1004 = cast(%var_3170, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1005 = cast(%var_3170, dtype="float32") /* ty=Tensor[(240), float32] */;
    %1006 = reshape(%1004, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %1007 = reshape(%1005, newshape=[12, 10, 2]) /* ty=Tensor[(12, 10, 2), float32] */;
    %1008 = @func_771(%1006, %1007) /* ty=(Tensor[(12, 10, 2), float64], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), bool], Tensor[(12, 10, 2), float64]) */;
    %1009 = subtract(%1002, %1003) /* ty=Tensor[(9, 10, 16), float64] */;
    %1010 = %1008.2;
    (%1009, %1010, %var_3170)
  };
  %1011(%var_3179, %var_3180) /* ty=(Tensor[(9, 10, 16), float64], Tensor[(12, 10, 2), bool], Tensor[(240), float32]) */
}

def @func_4421() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) {
  @func_4419() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(13, 9, 3), float32]) */
}

def @func_9342(%var_9340: Tensor[(4, 3, 9), uint16], %var_9341: Tensor[(4, 3, 9), uint16]) -> (Tensor[(4, 3, 9), uint16],) {
  %1017 = fn (%var_9321: Tensor[(4, 3, 9), uint16], %var_9322: Tensor[(4, 3, 9), uint16]) -> (Tensor[(4, 3, 9), uint16],) {
    %1012 = cast(%var_9322, dtype="uint16") /* ty=Tensor[(4, 3, 9), uint16] */;
    %1013 = shape_of(%var_9321, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1014 = cast(%var_9321, dtype="uint16") /* ty=Tensor[(4, 3, 9), uint16] */;
    %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1016 = maximum(%1014, %1015) /* ty=Tensor[(4, 3, 9), uint16] */;
    (%1016,)
  };
  %1017(%var_9340, %var_9341) /* ty=(Tensor[(4, 3, 9), uint16],) */
}

def @func_10688(%var_10687: Tensor[(1, 2028), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 13, 13), bool], Tensor[(1, 2028), float64]) {
  %1023 = fn (%var_10683: Tensor[(1, 2028), float64]) -> (Tensor[(12, 10, 2), float32], Tensor[(12, 13, 13), bool], Tensor[(1, 2028), float64]) {
    %1018 = cast(%var_10683, dtype="float64") /* ty=Tensor[(1, 2028), float64] */;
    %1019 = reshape(%1018, newshape=[12, 13, 13]) /* ty=Tensor[(12, 13, 13), float64] */;
    %1020 = @func_9763(%1019) /* ty=(Tensor[(12, 13, 13), bool], Tensor[(12, 10, 2), float32]) */;
    %1021 = @func_5406() /* ty=Tensor[(12, 10, 2), float32] */;
    %1022 = %1020.0;
    (%1021, %1022, %var_10683)
  };
  %1023(%var_10687) /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 13, 13), bool], Tensor[(1, 2028), float64]) */
}

def @func_1383() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  %1028 = fn () -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
    %1024 = @func_884() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %1025 = %1024.0;
    %1026 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
    %1027 = @func_869() /* ty=Tensor[(12, 10, 2), float32] */;
    (%1025, %1026, %1027)
  };
  %1028() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_1495() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) {
  @func_1493() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32]) */
}

def @func_6600() -> (Tensor[(12, 10, 2), float32],) {
  @func_6598() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_3826() -> Tensor[(12, 10, 2), float32] {
  %1029 = @func_1298() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %1029.0
}

def @func_10714() -> Tensor[(12, 10, 2), float32] {
  %1030 = @func_10015() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %1030.0
}

def @func_3433() -> Tensor[(12, 10, 2), float32] {
  %1031 = @func_2966() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), int32], Tensor[(14, 12, 16), bool]) */;
  %1031.0
}

def @func_4500() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(900), uint8], Tensor[(12, 10, 2), float32]) {
  @func_4498() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(900), uint8], Tensor[(12, 10, 2), float32]) */
}

def @func_423() -> (Tensor[(12, 10, 2), float32],) {
  %1034 = fn () -> (Tensor[(12, 10, 2), float32],) {
    %1032 = @func_303() /* ty=(Tensor[(12, 10, 2), float32],) */;
    %1033 = %1032.0;
    (%1033,)
  };
  %1034() /* ty=(Tensor[(12, 10, 2), float32],) */
}

def @func_6987() -> (Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(375), bool]) {
  %1035 = @func_422() /* ty=(Tensor[(12, 10, 2), float32],) */;
  %1036 = cast(meta[relay.Constant][41] /* ty=Tensor[(375), bool] */, dtype="bool") /* ty=Tensor[(375), bool] */;
  %1037 = reshape(%1036, newshape=[5, 15, 5]) /* ty=Tensor[(5, 15, 5), bool] */;
  %1038 = @func_3113(%1037) /* ty=(Tensor[(5, 15, 5), bool], Tensor[(12, 10, 2), float32]) */;
  %1039 = %1035.0;
  %1040 = %1038.1;
  (%1039, %1040, meta[relay.Constant][41] /* ty=Tensor[(375), bool] */)
}

def @func_9104() -> Tensor[(12, 10, 2), float32] {
  %1041 = @func_6987() /* ty=(Tensor[(12, 10, 2), float32], Tensor[(12, 10, 2), float32], Tensor[(375), bool]) */;
  %1041.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

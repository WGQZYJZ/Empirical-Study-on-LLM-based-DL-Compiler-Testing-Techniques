==========mod==========
#[version = "0.0.5"]
def @func_9269(%var_9267: Tensor[(7, 88), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(7, 88), float64]) {
  %0 = @func_5306() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1 = cast(%var_9267, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
  %2 = reshape(%1, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %3 = @func_3590(%2) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(4, 3, 4), float64], Tensor[(2, 24), float64], Tensor[(11, 14, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 9), int8]) */;
  %4 = %0.0;
  %5 = %3.1;
  (%4, %5, %var_9267)
}

def @func_10097() -> (Tensor[(11, 2, 9), int8],) {
  %6 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %7 = %6.0;
  (%7,)
}

def @func_728() -> (Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) {
  %8 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %9 = %8.0;
  %10 = cast(%9, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %11 = reshape(%10, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %12 = @func_235(%11) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */;
  %13 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %14 = %12.0;
  %15 = %13.0;
  (%9, %14, %15)
}

def @func_5904(%var_5897: float64, %var_5898: Tensor[(1, 5, 15), float64]) -> Tensor[(1, 5, 15), float64] {
  %16 = cast(%var_5897, dtype="float64") /* ty=float64 */;
  %17 = cast(%var_5898, dtype="float64") /* ty=Tensor[(1, 5, 15), float64] */;
  floor_divide(%16, %17) /* ty=Tensor[(1, 5, 15), float64] */
}

def @func_1071() -> (Tensor[(11, 2, 9), int64],) {
  %18 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
  %19 = cast(%18, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %20 = reshape(%19, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %21 = @func_605(%20) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %22 = %21.0;
  %23 = cast(%22, dtype="int64") /* ty=Tensor[(11, 2, 9), int64] */;
  %24 = shape_of(%18, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%18, dtype="int64") /* ty=Tensor[(11, 2, 9), int64] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %27 = left_shift(%25, %26) /* ty=Tensor[(11, 2, 9), int64] */;
  (%27,)
}

def @func_12316() -> (Tensor[(12, 2, 8), float32],) {
  %28 = @func_5150() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %29 = %28.0;
  (%29,)
}

def @func_310() -> (Tensor[(11, 2, 9), int8],) {
  %30 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
  (%30,)
}

def @func_8004() -> Tensor[(11, 2, 9), int8] {
  %31 = @func_7922() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %31.0
}

def @func_535() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %32 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
  %33 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
  (%32, %33)
}

def @func_8194() -> (Tensor[(11, 2, 9), int8],) {
  %34 = @func_4250() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) */;
  %35 = %34.0;
  (%35,)
}

def @func_2937() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %36 = @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %37 = %36.0;
  %38 = cast(%37, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %39 = reshape(%38, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %40 = @func_605(%39) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %41 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %42 = %40.1;
  %43 = %41.0;
  (%37, %42, %43)
}

def @func_4962() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64]) {
  %44 = @func_1844() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32]) */;
  %45 = @func_458() /* ty=Tensor[(11, 2, 9), int8] */;
  %46 = %44.0;
  (%45, %46)
}

def @func_14625() -> Tensor[(11, 2, 9), int8] {
  @func_9771() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_9653() -> (Tensor[(11, 2, 9), int8],) {
  %47 = @func_8726() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(14, ?, 3), float64], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %48 = %47.2;
  (%48,)
}

def @func_1729() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) {
  %49 = @func_1322() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %50 = cast(meta[relay.Constant][0] /* ty=Tensor[(260), uint16] */, dtype="uint16") /* ty=Tensor[(260), uint16] */;
  %51 = cast(meta[relay.Constant][0] /* ty=Tensor[(260), uint16] */, dtype="uint16") /* ty=Tensor[(260), uint16] */;
  %52 = reshape(%50, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), uint16] */;
  %53 = reshape(%51, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), uint16] */;
  %54 = @func_739(%52, %53) /* ty=Tensor[(13, 4, 5), bool] */;
  %55 = cast(%54, dtype="bool") /* ty=Tensor[(13, 4, 5), bool] */;
  %56 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(260), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %57 = cast(meta[relay.Constant][0] /* ty=Tensor[(260), uint16] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?), bool] */;
  %59 = less_equal(%57, %58) /* ty=Tensor[(260), bool] */;
  %60 = cast(%59, dtype="float64") /* ty=Tensor[(260), float64] */;
  %61 = @func_458() /* ty=Tensor[(11, 2, 9), int8] */;
  %62 = %49.0;
  %63 = sinh(%60) /* ty=Tensor[(260), float64] */;
  %64 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  (%61, %62, %63, %64)
}

def @func_11797(%var_11791: Tensor[(14, 8, 2), uint16], %var_11792: Tensor[(14, 8, 2), uint16]) -> (Tensor[(14, 8, 2), uint16],) {
  %65 = cast(%var_11792, dtype="uint16") /* ty=Tensor[(14, 8, 2), uint16] */;
  %66 = shape_of(%var_11791, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%var_11791, dtype="uint16") /* ty=Tensor[(14, 8, 2), uint16] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %69 = minimum(%67, %68) /* ty=Tensor[(14, 8, 2), uint16] */;
  (%69,)
}

def @func_8487() -> (Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(14, 10, 8), float32], Tensor[(1120, 1), float32]) {
  %70 = @func_3030() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %71 = @func_6600() /* ty=(Tensor[(260), float64],) */;
  %72 = cast(meta[relay.Constant][1] /* ty=Tensor[(1120, 1), float32] */, dtype="float32") /* ty=Tensor[(1120, 1), float32] */;
  %73 = reshape(%72, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float32] */;
  %74 = %70.0;
  %75 = %71.0;
  %76 = @func_8164(%73) /* ty=Tensor[(14, 10, 8), float32] */;
  (%74, %75, %76, meta[relay.Constant][1] /* ty=Tensor[(1120, 1), float32] */)
}

def @func_12191() -> (Tensor[(11, 2, 9), int8],) {
  %77 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
  (%77,)
}

def @func_11931() -> (Tensor[(260), float64],) {
  %78 = @func_6600() /* ty=(Tensor[(260), float64],) */;
  %79 = %78.0;
  (%79,)
}

def @func_6636(%var_6607: int16, %var_6608: Tensor[(13, 12, 4), int16]) -> (Tensor[(13, 12, 4), int16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %80 = cast(%var_6607, dtype="int16") /* ty=int16 */;
  %81 = cast(%var_6608, dtype="int16") /* ty=Tensor[(13, 12, 4), int16] */;
  %82 = @func_5227() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) */;
  %83 = @func_1322() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %84 = bitwise_xor(%80, %81) /* ty=Tensor[(13, 12, 4), int16] */;
  %85 = %82.0;
  %86 = %83.0;
  (%84, %85, %86)
}

def @func_2013() -> (Tensor[(11, 2, 9), int8],) {
  %87 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %88 = %87.0;
  (%88,)
}

def @func_15079() -> Tensor[(11, 2, 9), int8] {
  @func_9924() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_6547() -> (Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) {
  %89 = @func_1071() /* ty=(Tensor[(11, 2, 9), int64],) */;
  %90 = %89.0;
  %91 = @func_458() /* ty=Tensor[(11, 2, 9), int8] */;
  (%90, %91)
}

def @func_10519() -> (Tensor[(11, 2, 9), int8],) {
  %92 = @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %93 = %92.0;
  (%93,)
}

def @func_3338() -> Tensor[(11, 2, 9), int8] {
  %94 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %94.0
}

def @func_13201(%var_13185: Tensor[(13, 15, 15), bool]) -> (Tensor[(11, 2, 9), int8], Tensor[(13, 15, 15), uint8]) {
  %95 = @func_9653() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %96 = @func_12938() /* ty=(Tensor[(13, 15, 15), bool],) */;
  %97 = %96.0;
  %98 = cast(%var_13185, dtype="uint8") /* ty=Tensor[(13, 15, 15), uint8] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%97, dtype="uint8") /* ty=Tensor[(13, 15, 15), uint8] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %102 = %95.0;
  %103 = logical_xor(%100, %101) /* ty=Tensor[(13, 15, 15), uint8] */;
  (%102, %103)
}

def @func_9835(%var_9829: int8) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(14, 1, 3), int8], int8, Tensor[(42), int8]) {
  %104 = @func_1650() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %105 = @func_5150() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %106 = cast(%var_9829, dtype="int8") /* ty=int8 */;
  %107 = cast(meta[relay.Constant][2] /* ty=Tensor[(42), int8] */, dtype="int8") /* ty=Tensor[(42), int8] */;
  %108 = reshape(%106, newshape=[]) /* ty=int8 */;
  %109 = reshape(%107, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), int8] */;
  %110 = @func_6079(%108, %109) /* ty=(Tensor[(14, 1, 3), int8], Tensor[(11, 2, 9), int8]) */;
  %111 = %104.0;
  %112 = %105.3;
  %113 = %110.0;
  (%111, %112, %113, %var_9829, meta[relay.Constant][2] /* ty=Tensor[(42), int8] */)
}

def @func_13269() -> (Tensor[(11, 2, 9), int64],) {
  %114 = @func_10811() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) */;
  %115 = %114.0;
  (%115,)
}

def @func_6587() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %116 = @func_5150() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %117 = @func_5095() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %118 = %116.1;
  %119 = %117.0;
  (%118, %119)
}

def @func_10857() -> Tensor[(11, 2, 9), int8] {
  %120 = @func_5534() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %120.0
}

def @func_9982() -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), float64]) {
  %121 = @func_4892() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %122 = @func_1844() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32]) */;
  %123 = %121.0;
  %124 = %122.0;
  (%123, %124)
}

def @func_14591() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %125 = @func_5493() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */;
  %126 = @func_10644() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %127 = %125.0;
  %128 = %126.1;
  %129 = @func_922() /* ty=Tensor[(11, 2, 9), int8] */;
  (%127, %128, %129)
}

def @func_6463() -> Tensor[(11, 2, 9), int8] {
  @func_5668() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_8758(%var_8737: Tensor[(7, 11, 5), float32], %var_8738: Tensor[(7, 11, 5), float32]) -> (Tensor[(7, 11, 5), float32], Tensor[(11, 2, 9), float32]) {
  %130 = cast(%var_8738, dtype="float32") /* ty=Tensor[(7, 11, 5), float32] */;
  %131 = shape_of(%var_8737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%var_8737, dtype="float32") /* ty=Tensor[(7, 11, 5), float32] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %134 = @func_8537() /* ty=(Tensor[(11, 2, 9), float32],) */;
  %135 = floor_mod(%132, %133) /* ty=Tensor[(7, 11, 5), float32] */;
  %136 = %134.0;
  (%135, %136)
}

def @func_13824() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) {
  %137 = @func_5227() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) */;
  %138 = @func_13522() /* ty=Tensor[(11, 2, 9), int8] */;
  %139 = %137.2;
  (%138, %139)
}

def @func_5817() -> (Tensor[(12, 2, 8), float32],) {
  %140 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %141 = %140.1;
  (%141,)
}

def @func_2139() -> (Tensor[(11, 2, 9), int8],) {
  %142 = @func_1957() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %143 = %142.0;
  (%143,)
}

def @func_9702() -> (Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) {
  %144 = @func_1071() /* ty=(Tensor[(11, 2, 9), int64],) */;
  %145 = @func_6304() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %146 = %144.0;
  %147 = %145.0;
  (%146, %147)
}

def @func_12658() -> (Tensor[(12, 2, 8), float32],) {
  %148 = @func_5817() /* ty=(Tensor[(12, 2, 8), float32],) */;
  %149 = %148.0;
  (%149,)
}

def @func_6079(%var_6063: int8, %var_6064: Tensor[(14, 1, 3), int8]) -> (Tensor[(14, 1, 3), int8], Tensor[(11, 2, 9), int8]) {
  %150 = cast(%var_6063, dtype="int8") /* ty=int8 */;
  %151 = cast(%var_6064, dtype="int8") /* ty=Tensor[(14, 1, 3), int8] */;
  %152 = right_shift(%150, %151) /* ty=Tensor[(14, 1, 3), int8] */;
  %153 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  (%152, %153)
}

def @func_13955() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %154 = @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %155 = @func_8004() /* ty=Tensor[(11, 2, 9), int8] */;
  %156 = %154.0;
  (%155, %156)
}

def @func_9924() -> Tensor[(11, 2, 9), int8] {
  %157 = @func_2139() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %157.0
}

def @func_15237(%var_15207: Tensor[(7, 5, 11), float64], %var_15226: Tensor[(7, 5, 11), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64], Tensor[(7, 5, 11), uint32], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), bool]) {
  %158 = @func_10061() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %159 = %158.0;
  %160 = cast(%159, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %161 = sin(%160) /* ty=Tensor[(7, 5, 11), float64] */;
  %162 = cast(%var_15207, dtype="uint32") /* ty=Tensor[(7, 5, 11), uint32] */;
  %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(%161, dtype="uint32") /* ty=Tensor[(7, 5, 11), uint32] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %166 = cast(%159, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %167 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%161, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %170 = cast(%var_15226, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %171 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%161, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %174 = @func_14755() /* ty=Tensor[(11, 2, 9), int8] */;
  %175 = @func_11056() /* ty=Tensor[(11, 2, 9), float32] */;
  %176 = @func_11056() /* ty=Tensor[(11, 2, 9), float32] */;
  %177 = @func_14937() /* ty=Tensor[(11, 2, 9), int8] */;
  %178 = @func_8294() /* ty=Tensor[(11, 2, 9), int64] */;
  %179 = maximum(%164, %165) /* ty=Tensor[(7, 5, 11), uint32] */;
  %180 = floor_divide(%168, %169) /* ty=Tensor[(7, 5, 11), float64] */;
  %181 = greater(%172, %173) /* ty=Tensor[(7, 5, 11), bool] */;
  (%174, %175, %176, %177, %178, %179, %180, %181)
}

def @func_1293(%var_1239: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), uint64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %182 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %183 = %182.0;
  %184 = cast(%var_1239, dtype="uint64") /* ty=Tensor[(11, 2, 9), uint64] */;
  %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%183, dtype="uint64") /* ty=Tensor[(11, 2, 9), uint64] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %188 = cast(%183, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %189 = shape_of(%var_1239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %190 = cast(%var_1239, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %192 = cast(%183, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %193 = shape_of(%var_1239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%var_1239, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %196 = @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %197 = multiply(%186, %187) /* ty=Tensor[(11, 2, 9), uint64] */;
  %198 = greater(%190, %191) /* ty=Tensor[(11, 2, 9), bool] */;
  %199 = logical_or(%194, %195) /* ty=Tensor[(11, 2, 9), bool] */;
  %200 = %196.0;
  %201 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  (%197, %198, %199, %200, %201)
}

def @func_8294() -> Tensor[(11, 2, 9), int64] {
  %202 = @func_3814() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(12, 2, 8), float32]) */;
  %202.0
}

def @func_9510() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) {
  %203 = @func_8765() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %204 = @func_8417() /* ty=(Tensor[(11, 2, 9), int64],) */;
  %205 = @func_8037() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7, 1), uint8]) */;
  %206 = %203.0;
  %207 = %204.0;
  %208 = %205.0;
  (%206, %207, %208)
}

def @func_10644() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %209 = @func_2762() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %210 = %209.0;
  %211 = @func_10429() /* ty=Tensor[(11, 2, 9), int8] */;
  (%210, %211)
}

def @func_5340() -> Tensor[(11, 2, 9), float32] {
  %212 = @func_3030() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %212.1
}

def @func_10016(%var_9990: Tensor[(5, 9, 8), float64]) -> (Tensor[(5, 9, 8), bool], Tensor[(11, 2, 9), int8]) {
  %213 = cast(%var_9990, dtype="float64") /* ty=Tensor[(5, 9, 8), float64] */;
  %214 = cosh(%213) /* ty=Tensor[(5, 9, 8), float64] */;
  %215 = cast(%214, dtype="bool") /* ty=Tensor[(5, 9, 8), bool] */;
  %216 = shape_of(%var_9990, dtype="int32") /* ty=Tensor[(3), int32] */;
  %217 = cast(%var_9990, dtype="bool") /* ty=Tensor[(5, 9, 8), bool] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %219 = greater(%217, %218) /* ty=Tensor[(5, 9, 8), bool] */;
  %220 = @func_6503() /* ty=Tensor[(11, 2, 9), int8] */;
  (%219, %220)
}

def @func_14792(%var_14787: Tensor[(6, 8, 9), int8], %var_14788: Tensor[(6, 8, 9), int8]) -> (Tensor[(6, 8, 9), bool],) {
  %221 = cast(%var_14788, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %222 = shape_of(%var_14787, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%var_14787, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %225 = equal(%223, %224) /* ty=Tensor[(6, 8, 9), bool] */;
  (%225,)
}

def @func_2557() -> Tensor[(11, 2, 9), int8] {
  @func_359() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_13738() -> (Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %226 = @func_3944() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %227 = @func_8294() /* ty=Tensor[(11, 2, 9), int64] */;
  %228 = %226.0;
  %229 = @func_13508() /* ty=Tensor[(11, 2, 9), int8] */;
  (%227, %228, %229)
}

def @func_1780() -> (Tensor[(11, 2, 9), float32],) {
  %230 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  %231 = cast(%230, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  %232 = sigmoid(%231) /* ty=Tensor[(11, 2, 9), float32] */;
  (%232,)
}

def @func_10399() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %233 = @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %234 = @func_3338() /* ty=Tensor[(11, 2, 9), int8] */;
  %235 = %233.0;
  (%234, %235)
}

def @func_11835() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %236 = @func_5383() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %237 = @func_5150() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %238 = %236.0;
  %239 = %237.3;
  %240 = @func_10195() /* ty=Tensor[(11, 2, 9), int8] */;
  %241 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
  (%238, %239, %240, %241)
}

def @func_13805() -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) {
  %242 = @func_12523() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %243 = @func_12146() /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %244 = %242.0;
  %245 = %243.2;
  (%244, %245)
}

def @func_11770() -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %246 = @func_9982() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), float64]) */;
  %247 = %246.0;
  %248 = cast(%247, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %249 = @func_2507() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), uint64]) */;
  %250 = @func_4776() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %251 = @func_10644() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %252 = acos(%248) /* ty=Tensor[(12, 2, 8), float32] */;
  %253 = %249.1;
  %254 = %250.0;
  %255 = %251.0;
  (%252, %253, %254, %255)
}

def @func_14316() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %256 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
  %257 = @func_922() /* ty=Tensor[(11, 2, 9), int8] */;
  (%256, %257)
}

def @func_4049() -> (Tensor[(260), float64], Tensor[(11, 2, 9), int8]) {
  %258 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %259 = @func_2139() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %260 = %258.2;
  %261 = %259.0;
  (%260, %261)
}

def @func_1933() -> (Tensor[(11, 2, 9), int8],) {
  %262 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %263 = %262.1;
  (%263,)
}

def @func_8331(%var_8300: Tensor[(13, 2, 5), uint16], %var_8301: Tensor[(13, 2, 5), uint16]) -> (Tensor[(13, 2, 5), float32], Tensor[(11, 2, 9), float32]) {
  %264 = cast(%var_8301, dtype="uint16") /* ty=Tensor[(13, 2, 5), uint16] */;
  %265 = shape_of(%var_8300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%var_8300, dtype="uint16") /* ty=Tensor[(13, 2, 5), uint16] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %268 = bitwise_xor(%266, %267) /* ty=Tensor[(13, 2, 5), uint16] */;
  %269 = cast(%268, dtype="float32") /* ty=Tensor[(13, 2, 5), float32] */;
  %270 = @func_6412() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */;
  %271 = acosh(%269) /* ty=Tensor[(13, 2, 5), float32] */;
  %272 = %270.1;
  (%271, %272)
}

def @func_6252() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  %273 = @func_1780() /* ty=(Tensor[(11, 2, 9), float32],) */;
  %274 = @func_3203() /* ty=Tensor[(11, 2, 9), int8] */;
  %275 = %273.0;
  (%274, %275)
}

def @func_7878() -> (Tensor[(11, 2, 9), int8],) {
  %276 = @func_6798() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %277 = %276.0;
  (%277,)
}

def @func_15390() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %278 = @func_9550() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %279 = @func_5879() /* ty=Tensor[(11, 2, 9), int8] */;
  %280 = %278.0;
  (%279, %280)
}

def @func_11048() -> (Tensor[(11, 2, 9), bool], Tensor[(12, 2, 8), float32]) {
  %281 = @func_3100() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %282 = %281.1;
  %283 = @func_10916() /* ty=Tensor[(12, 2, 8), float32] */;
  (%282, %283)
}

def @func_2381(%var_2367: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), uint16],) {
  %284 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %285 = %284.0;
  %286 = cast(%var_2367, dtype="uint16") /* ty=Tensor[(11, 2, 9), uint16] */;
  %287 = shape_of(%285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%285, dtype="uint16") /* ty=Tensor[(11, 2, 9), uint16] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %290 = maximum(%288, %289) /* ty=Tensor[(11, 2, 9), uint16] */;
  (%290,)
}

def @func_5306() -> (Tensor[(11, 2, 9), int8],) {
  %291 = @func_4776() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %292 = %291.0;
  (%292,)
}

def @func_9771() -> Tensor[(11, 2, 9), int8] {
  %293 = @func_7763() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %293.0
}

def @func_3541(%var_3491: Tensor[(260), float64]) -> (Tensor[(260), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %294 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %295 = %294.2;
  %296 = cast(%var_3491, dtype="float32") /* ty=Tensor[(260), float32] */;
  %297 = shape_of(%295, dtype="int32") /* ty=Tensor[(1), int32] */;
  %298 = cast(%295, dtype="float32") /* ty=Tensor[(260), float32] */;
  %299 = dyn.reshape(%296, %297, newshape=[]) /* ty=Tensor[(?), float32] */;
  %300 = @func_1780() /* ty=(Tensor[(11, 2, 9), float32],) */;
  %301 = @func_972() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %302 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %303 = power(%298, %299) /* ty=Tensor[(260), float32] */;
  %304 = %300.0;
  %305 = %301.0;
  %306 = %302.1;
  (%303, %304, %305, %306)
}

def @func_7492(%var_7456: uint8, %var_7457: Tensor[(7), uint8], %var_7490: Tensor[(624), int16]) -> (Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7), uint8], Tensor[(11, 2, 9), int8], Tensor[(624), int16]) {
  %307 = @func_4892() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %308 = cast(%var_7456, dtype="uint8") /* ty=uint8 */;
  %309 = cast(%var_7457, dtype="uint8") /* ty=Tensor[(7), uint8] */;
  %310 = reshape(%308, newshape=[]) /* ty=uint8 */;
  %311 = reshape(%309, newshape=[7, 1]) /* ty=Tensor[(7, 1), uint8] */;
  %312 = @func_5972(%310, %311) /* ty=(Tensor[(7, 1), uint8],) */;
  %313 = cast(%var_7456, dtype="int16") /* ty=int16 */;
  %314 = cast(%var_7490, dtype="int16") /* ty=Tensor[(624), int16] */;
  %315 = reshape(%313, newshape=[]) /* ty=int16 */;
  %316 = reshape(%314, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), int16] */;
  %317 = @func_6636(%315, %316) /* ty=(Tensor[(13, 12, 4), int16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %318 = %307.2;
  %319 = %312.0;
  %320 = %317.2;
  (%318, %319, %var_7456, %var_7457, %320, %var_7490)
}

def @func_12021(%var_12012: Tensor[(48), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(48), float64]) {
  %321 = @func_2937() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %322 = cast(%var_12012, dtype="float64") /* ty=Tensor[(48), float64] */;
  %323 = reshape(%322, newshape=[4, 12]) /* ty=Tensor[(4, 12), float64] */;
  %324 = @func_7309(%323) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) */;
  %325 = %321.1;
  %326 = %324.0;
  (%325, %326, %var_12012)
}

def @func_4703() -> (Tensor[(11, 2, 9), int8],) {
  %327 = @func_4181() /* ty=Tensor[(11, 2, 9), int8] */;
  (%327,)
}

def @func_7107() -> (Tensor[(11, 2, 9), int8],) {
  %328 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  (%328,)
}

def @func_7651(%var_7613: Tensor[(12, 2, 8), float32]) -> (Tensor[(12, 2, 8), float32], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(99, 2), int8]) {
  %329 = @func_4604() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32]) */;
  %330 = %329.1;
  %331 = cast(%var_7613, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%330, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %335 = cast(%330, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %336 = cast(meta[relay.Constant][3] /* ty=Tensor[(99, 2), int8] */, dtype="int8") /* ty=Tensor[(99, 2), int8] */;
  %337 = reshape(%336, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %338 = @func_605(%337) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %339 = minimum(%333, %334) /* ty=Tensor[(12, 2, 8), float32] */;
  %340 = log(%335) /* ty=Tensor[(12, 2, 8), float32] */;
  %341 = %338.1;
  (%339, %340, %341, meta[relay.Constant][3] /* ty=Tensor[(99, 2), int8] */)
}

def @func_644() -> (Tensor[(11, 2, 9), int8],) {
  %342 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
  (%342,)
}

def @func_1669() -> Tensor[(11, 2, 9), int8] {
  %343 = @func_1087() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %343.1
}

def @func_5460(%var_5439: Tensor[(4, 1, 5), uint64], %var_5440: Tensor[(4, 2, 5), uint64]) -> (Tensor[(4, 2, 5), float32],) {
  %344 = cast(%var_5439, dtype="bool") /* ty=Tensor[(4, 1, 5), bool] */;
  %345 = cast(%var_5440, dtype="bool") /* ty=Tensor[(4, 2, 5), bool] */;
  %346 = equal(%344, %345) /* ty=Tensor[(4, 2, 5), bool] */;
  %347 = cast(%346, dtype="float32") /* ty=Tensor[(4, 2, 5), float32] */;
  %348 = sinh(%347) /* ty=Tensor[(4, 2, 5), float32] */;
  (%348,)
}

def @func_12938() -> (Tensor[(13, 15, 15), bool],) {
  %349 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 15, 1), float64] */, dtype="bool") /* ty=Tensor[(13, 15, 1), bool] */;
  %350 = cast(meta[relay.Constant][5] /* ty=Tensor[(13, 15, 15), float64] */, dtype="bool") /* ty=Tensor[(13, 15, 15), bool] */;
  %351 = not_equal(%349, %350) /* ty=Tensor[(13, 15, 15), bool] */;
  (%351,)
}

def @func_11675() -> (Tensor[(11, 2, 9), float64],) {
  %352 = @func_1974() /* ty=Tensor[(11, 2, 9), float64] */;
  (%352,)
}

def @func_4755() -> Tensor[(11, 2, 9), int8] {
  %353 = @func_4703() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %353.0
}

def @func_14271(%var_14268: Tensor[(11, 6, 2), float64]) -> (Tensor[(11, 6, 2), float64],) {
  %354 = cast(%var_14268, dtype="float64") /* ty=Tensor[(11, 6, 2), float64] */;
  %355 = cos(%354) /* ty=Tensor[(11, 6, 2), float64] */;
  (%355,)
}

def @func_6798() -> (Tensor[(11, 2, 9), int8],) {
  %356 = @func_2937() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %357 = %356.2;
  (%357,)
}

def @func_3394(%var_3388: Tensor[(4, 3, 4), float64]) -> (Tensor[(4, 3, 4), float64],) {
  %358 = cast(%var_3388, dtype="float64") /* ty=Tensor[(4, 3, 4), float64] */;
  %359 = cosh(%358) /* ty=Tensor[(4, 3, 4), float64] */;
  (%359,)
}

def @func_3590(%var_3585: Tensor[(616), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(4, 3, 4), float64], Tensor[(2, 24), float64], Tensor[(11, 14, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 9), int8]) {
  %360 = @func_2664() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %361 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %362 = @func_972() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %363 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 24), float64] */, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %364 = reshape(%363, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float64] */;
  %365 = @func_3394(%364) /* ty=(Tensor[(4, 3, 4), float64],) */;
  %366 = cast(%var_3585, dtype="float64") /* ty=Tensor[(616), float64] */;
  %367 = reshape(%366, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), float64] */;
  %368 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %369 = %360.0;
  %370 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  %371 = %361.0;
  %372 = %362.1;
  %373 = %365.0;
  %374 = @func_2043(%367) /* ty=Tensor[(11, 14, 4), float64] */;
  %375 = %368.1;
  (%369, %370, %371, %372, %373, meta[relay.Constant][6] /* ty=Tensor[(2, 24), float64] */, %374, %var_3585, %375)
}

def @func_6412() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) {
  %376 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %377 = @func_1780() /* ty=(Tensor[(11, 2, 9), float32],) */;
  %378 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %379 = %376.0;
  %380 = %377.0;
  %381 = %378.0;
  (%379, %380, %381)
}

def @func_12780() -> (Tensor[(11, 2, 9), int8], int16, Tensor[(624), int16], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(14, 10, 8), bool]) {
  %382 = cast(meta[relay.Constant][7] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %383 = cast(meta[relay.Constant][8] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %384 = reshape(%382, newshape=[]) /* ty=int16 */;
  %385 = reshape(%383, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), int16] */;
  %386 = @func_6636(%384, %385) /* ty=(Tensor[(13, 12, 4), int16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %387 = %386.2;
  %388 = cast(%387, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %389 = reshape(%388, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %390 = @func_1293(%389) /* ty=(Tensor[(11, 2, 9), uint64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %391 = @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %392 = @func_8487() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(14, 10, 8), float32], Tensor[(1120, 1), float32]) */;
  %393 = %392.2;
  %394 = cast(%393, dtype="float64") /* ty=Tensor[(14, 10, 8), float64] */;
  %395 = log(%394) /* ty=Tensor[(14, 10, 8), float64] */;
  %396 = cast(%393, dtype="bool") /* ty=Tensor[(14, 10, 8), bool] */;
  %397 = shape_of(%395, dtype="int32") /* ty=Tensor[(3), int32] */;
  %398 = cast(%395, dtype="bool") /* ty=Tensor[(14, 10, 8), bool] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %400 = %390.2;
  %401 = %391.1;
  %402 = equal(%398, %399) /* ty=Tensor[(14, 10, 8), bool] */;
  (%387, meta[relay.Constant][7] /* ty=int16 */, meta[relay.Constant][8] /* ty=Tensor[(624), int16] */, %400, %401, %402)
}

def @func_1478(%var_1442: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), uint8], Tensor[(11, 2, 9), int8]) {
  %403 = @func_786() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %404 = %403.0;
  %405 = cast(%404, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  %406 = cast(%var_1442, dtype="uint8") /* ty=Tensor[(11, 2, 9), uint8] */;
  %407 = shape_of(%404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%404, dtype="uint8") /* ty=Tensor[(11, 2, 9), uint8] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %410 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %411 = log(%405) /* ty=Tensor[(11, 2, 9), float32] */;
  %412 = right_shift(%408, %409) /* ty=Tensor[(11, 2, 9), uint8] */;
  %413 = %410.2;
  (%411, %412, %413)
}

def @func_6304() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %414 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %415 = @func_972() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %416 = @func_6188() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(672), float64], Tensor[(11, 2, 9), int8]) */;
  %417 = %414.0;
  %418 = %415.0;
  %419 = %416.1;
  (%417, %418, %419)
}

def @func_11442() -> (Tensor[(11, 2, 9), int64], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) {
  %420 = @func_1071() /* ty=(Tensor[(11, 2, 9), int64],) */;
  %421 = @func_7107() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %422 = %420.0;
  %423 = @func_10433() /* ty=Tensor[(260), float64] */;
  %424 = %421.0;
  (%422, %423, %424)
}

def @func_3995() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), uint16], Tensor[(11, 2, 9), int8], Tensor[(616), float64]) {
  %425 = @func_1669() /* ty=Tensor[(11, 2, 9), int8] */;
  %426 = cast(%425, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %427 = reshape(%426, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %428 = @func_2381(%427) /* ty=(Tensor[(11, 2, 9), uint16],) */;
  %429 = cast(meta[relay.Constant][9] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %430 = reshape(%429, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %431 = @func_3590(%430) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(4, 3, 4), float64], Tensor[(2, 24), float64], Tensor[(11, 14, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 9), int8]) */;
  %432 = %428.0;
  %433 = %431.0;
  (%425, %432, %433, meta[relay.Constant][9] /* ty=Tensor[(616), float64] */)
}

def @func_2702(%var_2695: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), uint8],) {
  %434 = @func_786() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %435 = %434.0;
  %436 = cast(%var_2695, dtype="uint8") /* ty=Tensor[(11, 2, 9), uint8] */;
  %437 = shape_of(%435, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%435, dtype="uint8") /* ty=Tensor[(11, 2, 9), uint8] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %440 = subtract(%438, %439) /* ty=Tensor[(11, 2, 9), uint8] */;
  (%440,)
}

def @func_3475() -> Tensor[(11, 2, 9), int8] {
  %441 = @func_1957() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %441.0
}

def @func_8395() -> Tensor[(11, 2, 9), float32] {
  @func_5340() /* ty=Tensor[(11, 2, 9), float32] */
}

def @func_11958() -> (Tensor[(11, 2, 9), float32], Tensor[(260), float64]) {
  %442 = @func_4560() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %443 = %442.1;
  %444 = @func_10433() /* ty=Tensor[(260), float64] */;
  (%443, %444)
}

def @func_14853(%var_14835: Tensor[(1, 390), bool]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(1, 390), float32], Tensor[(11, 2, 9), int8]) {
  %445 = @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %446 = cast(%var_14835, dtype="bool") /* ty=Tensor[(1, 390), bool] */;
  %447 = reshape(%446, newshape=[5, 78]) /* ty=Tensor[(5, 78), bool] */;
  %448 = @func_11612(%447) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(390), bool], Tensor[(5, 78), bool], Tensor[(11, 2, 9), int8], Tensor[(672), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %449 = cast(%var_14835, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
  %450 = %445.0;
  %451 = %448.0;
  %452 = acos(%449) /* ty=Tensor[(1, 390), float32] */;
  %453 = @func_3338() /* ty=Tensor[(11, 2, 9), int8] */;
  (%450, %451, %452, %453)
}

def @func_7922() -> (Tensor[(11, 2, 9), int8],) {
  %454 = @func_2340() /* ty=Tensor[(11, 2, 9), int8] */;
  (%454,)
}

def @func_235(%var_227: Tensor[(11, 2, 9), int8]) -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) {
  %455 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 2, 8), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %456 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
  %457 = cast(%var_227, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%456, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %461 = atan(%455) /* ty=Tensor[(12, 2, 8), float32] */;
  %462 = logical_and(%459, %460) /* ty=Tensor[(11, 2, 9), bool] */;
  (%461, %462)
}

def @func_1957() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %463 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %464 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %465 = %463.0;
  %466 = %464.0;
  (%465, %466)
}

def @func_11233(%var_11200: Tensor[(450, 2), float32]) -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(450, 2), bool], Tensor[(260), float64]) {
  %467 = @func_1844() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32]) */;
  %468 = @func_5095() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %469 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %470 = cast(%var_11200, dtype="float32") /* ty=Tensor[(450, 2), float32] */;
  %471 = reshape(%470, newshape=[12, 5, 15]) /* ty=Tensor[(12, 5, 15), float32] */;
  %472 = @func_5772(%471) /* ty=(Tensor[(12, 5, 15), float32],) */;
  %473 = %472.0;
  %474 = cast(%473, dtype="bool") /* ty=Tensor[(12, 5, 15), bool] */;
  %475 = shape_of(%var_11200, dtype="int32") /* ty=Tensor[(2), int32] */;
  %476 = cast(%var_11200, dtype="bool") /* ty=Tensor[(450, 2), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %478 = %467.1;
  %479 = %468.0;
  %480 = %469.0;
  %481 = greater(%476, %477) /* ty=Tensor[(450, 2), bool] */;
  %482 = @func_10433() /* ty=Tensor[(260), float64] */;
  (%478, %479, %480, %481, %482)
}

def @func_4181() -> Tensor[(11, 2, 9), int8] {
  %483 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %483.2
}

def @func_5107() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) {
  %484 = @func_1974() /* ty=Tensor[(11, 2, 9), float64] */;
  %485 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
  (%484, %485)
}

def @func_2762() -> (Tensor[(11, 2, 9), int8],) {
  %486 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %487 = %486.0;
  (%487,)
}

def @func_4604() -> (Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32]) {
  %488 = @func_3171() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) */;
  %489 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
  %490 = %488.1;
  (%489, %490)
}

def @func_11313() -> Tensor[(11, 2, 9), float32] {
  @func_11056() /* ty=Tensor[(11, 2, 9), float32] */
}

def @main(%var_15555: Tensor[(16, 6, 3), float32]) -> Tensor[(16, 6, 3), float32] {
  %491 = cast(%var_15555, dtype="float32") /* ty=Tensor[(16, 6, 3), float32] */;
  exp(%491) /* ty=Tensor[(16, 6, 3), float32] */
}

def @func_7865() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %492 = @func_6412() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */;
  %493 = @func_4755() /* ty=Tensor[(11, 2, 9), int8] */;
  %494 = %492.0;
  (%493, %494)
}

def @func_5095() -> (Tensor[(11, 2, 9), int8],) {
  %495 = @func_2762() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %496 = %495.0;
  (%496,)
}

def @func_5287() -> Tensor[(260), float64] {
  @func_4440() /* ty=Tensor[(260), float64] */
}

def @func_11332(%var_11318: Tensor[(10, 5, 14), float64]) -> (Tensor[(10, 5, 14), float64], Tensor[(11, 2, 9), int8]) {
  %497 = cast(%var_11318, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %498 = asin(%497) /* ty=Tensor[(10, 5, 14), float64] */;
  %499 = cast(%498, dtype="float32") /* ty=Tensor[(10, 5, 14), float32] */;
  %500 = atan(%499) /* ty=Tensor[(10, 5, 14), float32] */;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %502 = acos(%501) /* ty=Tensor[(10, 5, 14), float64] */;
  %503 = @func_7937() /* ty=Tensor[(11, 2, 9), int8] */;
  (%502, %503)
}

def @func_9009() -> Tensor[(11, 2, 9), float32] {
  %504 = @func_6188() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(672), float64], Tensor[(11, 2, 9), int8]) */;
  %505 = %504.1;
  %506 = cast(%505, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  sinh(%506) /* ty=Tensor[(11, 2, 9), float32] */
}

def @func_9336(%var_9318: Tensor[(1120), float32]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(14, 10, 8), float32], Tensor[(1120), float32]) {
  %507 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %508 = @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %509 = cast(%var_9318, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %510 = reshape(%509, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float32] */;
  %511 = %507.0;
  %512 = %508.1;
  %513 = @func_8164(%510) /* ty=Tensor[(14, 10, 8), float32] */;
  (%511, %512, %513, %var_9318)
}

def @func_14608() -> Tensor[(11, 2, 9), int8] {
  %514 = @func_6304() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %514.2
}

def @func_4776() -> (Tensor[(11, 2, 9), int8],) {
  %515 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
  (%515,)
}

def @func_3814() -> (Tensor[(11, 2, 9), int64], Tensor[(12, 2, 8), float32]) {
  %516 = @func_1071() /* ty=(Tensor[(11, 2, 9), int64],) */;
  %517 = %516.0;
  %518 = cast(%517, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %519 = reshape(%518, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %520 = @func_235(%519) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */;
  %521 = %520.0;
  (%517, %521)
}

def @func_14426() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(260), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %522 = @func_7922() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %523 = @func_11390() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(260), uint16]) */;
  %524 = @func_10097() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %525 = @func_3338() /* ty=Tensor[(11, 2, 9), int8] */;
  %526 = %522.0;
  %527 = @func_4440() /* ty=Tensor[(260), float64] */;
  %528 = @func_4440() /* ty=Tensor[(260), float64] */;
  %529 = %523.0;
  %530 = %524.0;
  (%525, %526, %527, %528, %529, %530)
}

def @func_10727() -> Tensor[(11, 2, 9), int8] {
  @func_9924() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_3944() -> (Tensor[(11, 2, 9), int8],) {
  %531 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
  (%531,)
}

def @func_7425(%var_7388: Tensor[(672), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(672), float64]) {
  %532 = @func_1087() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %533 = @func_2664() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %534 = @func_3030() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %535 = cast(%var_7388, dtype="float64") /* ty=Tensor[(672), float64] */;
  %536 = cast(%var_7388, dtype="float64") /* ty=Tensor[(672), float64] */;
  %537 = reshape(%535, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float64] */;
  %538 = reshape(%536, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float64] */;
  %539 = @func_2831(%537, %538) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(6, 7, 16), float32], Tensor[(11, 2, 9), float64]) */;
  %540 = %532.1;
  %541 = %533.1;
  %542 = %534.0;
  %543 = @func_5879() /* ty=Tensor[(11, 2, 9), int8] */;
  %544 = %539.1;
  (%540, %541, %542, %543, %544, %var_7388)
}

def @func_4892() -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %545 = @func_3171() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) */;
  %546 = @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %547 = @func_2901() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %548 = %545.1;
  %549 = %546.1;
  %550 = %547.0;
  (%548, %549, %550)
}

def @func_14707(%var_14678: Tensor[(1, 4, 10), float64]) -> (Tensor[(5, 4, 10), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64]) {
  %551 = cast(%var_14678, dtype="float64") /* ty=Tensor[(1, 4, 10), float64] */;
  %552 = cast(meta[relay.Constant][11] /* ty=Tensor[(5, 4, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 4, 10), float64] */;
  %553 = @func_8849() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) */;
  %554 = @func_5493() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */;
  %555 = subtract(%551, %552) /* ty=Tensor[(5, 4, 10), float64] */;
  %556 = %553.0;
  %557 = %554.0;
  (%555, %556, %557)
}

def @func_3203() -> Tensor[(11, 2, 9), int8] {
  %558 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %558.1
}

def @func_3030() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  %559 = @func_1322() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %560 = @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %561 = %560.1;
  %562 = cast(%561, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  %563 = %559.0;
  %564 = asin(%562) /* ty=Tensor[(11, 2, 9), float32] */;
  (%563, %564)
}

def @func_11390() -> (Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(260), uint16]) {
  %565 = @func_5306() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %566 = cast(meta[relay.Constant][12] /* ty=Tensor[(260), uint16] */, dtype="uint16") /* ty=Tensor[(260), uint16] */;
  %567 = cast(meta[relay.Constant][12] /* ty=Tensor[(260), uint16] */, dtype="uint16") /* ty=Tensor[(260), uint16] */;
  %568 = reshape(%566, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), uint16] */;
  %569 = reshape(%567, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), uint16] */;
  %570 = %565.0;
  %571 = @func_739(%568, %569) /* ty=Tensor[(13, 4, 5), bool] */;
  (%570, %571, meta[relay.Constant][12] /* ty=Tensor[(260), uint16] */)
}

def @func_8537() -> (Tensor[(11, 2, 9), float32],) {
  %572 = @func_7064() /* ty=(Tensor[(11, 2, 9), float32],) */;
  %573 = %572.0;
  (%573,)
}

def @func_458() -> Tensor[(11, 2, 9), int8] {
  %574 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %574.0
}

def @func_7118() -> Tensor[(11, 2, 9), int8] {
  @func_3338() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_14755() -> Tensor[(11, 2, 9), int8] {
  %575 = @func_13041() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %575.1
}

def @func_12523() -> (Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) {
  %576 = @func_7064() /* ty=(Tensor[(11, 2, 9), float32],) */;
  %577 = @func_12425() /* ty=(Tensor[(12, 2, 8), float32],) */;
  %578 = %576.0;
  %579 = %577.0;
  %580 = @func_922() /* ty=Tensor[(11, 2, 9), int8] */;
  (%578, %579, %580)
}

def @func_1322() -> (Tensor[(11, 2, 9), int8],) {
  %581 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %582 = %581.2;
  (%582,)
}

def @func_9751(%var_9748: Tensor[(616), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 14, 4), float64], Tensor[(616), float64]) {
  %583 = @func_1933() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %584 = cast(%var_9748, dtype="float64") /* ty=Tensor[(616), float64] */;
  %585 = reshape(%584, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), float64] */;
  %586 = %583.0;
  %587 = @func_2043(%585) /* ty=Tensor[(11, 14, 4), float64] */;
  (%586, %587, %var_9748)
}

def @func_9189() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  %588 = @func_6412() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */;
  %589 = @func_2664() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %590 = @func_8537() /* ty=(Tensor[(11, 2, 9), float32],) */;
  %591 = %588.2;
  %592 = %589.0;
  %593 = %590.0;
  (%591, %592, %593)
}

def @func_3318(%var_3232: Tensor[(9, 6, 14), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(9, 6, 14), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float32]) {
  %594 = @func_2664() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %595 = cast(%var_3232, dtype="float64") /* ty=Tensor[(9, 6, 14), float64] */;
  %596 = tan(%595) /* ty=Tensor[(9, 6, 14), float64] */;
  %597 = cast(%596, dtype="float32") /* ty=Tensor[(9, 6, 14), float32] */;
  %598 = %594.0;
  %599 = cast(%598, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %600 = reshape(%599, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %601 = @func_1478(%600) /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), uint8], Tensor[(11, 2, 9), int8]) */;
  %602 = @func_3030() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %603 = atanh(%597) /* ty=Tensor[(9, 6, 14), float32] */;
  %604 = %601.0;
  %605 = %602.1;
  (%598, %603, %604, %605)
}

def @func_11027() -> Tensor[(11, 2, 9), int8] {
  %606 = @func_3030() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %606.0
}

def @func_4250() -> (Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) {
  %607 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %608 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %609 = reshape(%608, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float64] */;
  %610 = @func_3394(%609) /* ty=(Tensor[(4, 3, 4), float64],) */;
  %611 = %607.0;
  %612 = %610.0;
  (%611, %612, meta[relay.Constant][13] /* ty=Tensor[(4, 12), float64] */)
}

def @func_8936() -> (Tensor[(11, 2, 9), int8],) {
  %613 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
  (%613,)
}

def @func_5493() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) {
  %614 = @func_4962() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64]) */;
  %615 = %614.1;
  %616 = @func_922() /* ty=Tensor[(11, 2, 9), int8] */;
  (%615, %616)
}

def @func_11612(%var_11578: Tensor[(5, 78), bool]) -> (Tensor[(11, 2, 9), int8], Tensor[(390), bool], Tensor[(5, 78), bool], Tensor[(11, 2, 9), int8], Tensor[(672), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %617 = @func_10284() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %618 = cast(%var_11578, dtype="bool") /* ty=Tensor[(5, 78), bool] */;
  %619 = reshape(%618, newshape=[390]) /* ty=Tensor[(390), bool] */;
  %620 = @func_6715(%619) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(198), int8], Tensor[(390), bool]) */;
  %621 = cast(meta[relay.Constant][14] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %622 = reshape(%621, newshape=[672]) /* ty=Tensor[(672), float64] */;
  %623 = @func_7425(%622) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(672), float64]) */;
  %624 = @func_3995() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), uint16], Tensor[(11, 2, 9), int8], Tensor[(616), float64]) */;
  %625 = %617.0;
  %626 = cast(%625, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %627 = reshape(%626, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %628 = @func_605(%627) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %629 = %620.2;
  %630 = %623.3;
  %631 = %624.2;
  %632 = %628.1;
  (%625, %629, %var_11578, %630, meta[relay.Constant][14] /* ty=Tensor[(672), float64] */, %631, %632)
}

def @func_11883() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %633 = @func_3944() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %634 = @func_11390() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(260), uint16]) */;
  %635 = %633.0;
  %636 = %634.0;
  (%635, %636)
}

def @func_7309(%var_7299: Tensor[(4, 12), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) {
  %637 = @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %638 = cast(%var_7299, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %639 = reshape(%638, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float64] */;
  %640 = @func_3394(%639) /* ty=(Tensor[(4, 3, 4), float64],) */;
  %641 = %637.1;
  %642 = %640.0;
  (%641, %642, %var_7299)
}

def @func_4560() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  %643 = @func_972() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %644 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
  %645 = %643.1;
  (%644, %645)
}

def @func_10916() -> Tensor[(12, 2, 8), float32] {
  %646 = @func_6843() /* ty=(Tensor[(12, 2, 8), float32],) */;
  %646.0
}

def @func_4440() -> Tensor[(260), float64] {
  %647 = @func_4049() /* ty=(Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %647.0
}

def @func_8126() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %648 = @func_4560() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %649 = %648.0;
  %650 = @func_7118() /* ty=Tensor[(11, 2, 9), int8] */;
  %651 = @func_1669() /* ty=Tensor[(11, 2, 9), int8] */;
  (%649, %650, %651)
}

def @func_6188() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(672), float64], Tensor[(11, 2, 9), int8]) {
  %652 = cast(meta[relay.Constant][15] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %653 = cast(meta[relay.Constant][15] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
  %654 = reshape(%652, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float64] */;
  %655 = reshape(%653, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float64] */;
  %656 = @func_2831(%654, %655) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(6, 7, 16), float32], Tensor[(11, 2, 9), float64]) */;
  %657 = @func_786() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %658 = @func_2340() /* ty=Tensor[(11, 2, 9), int8] */;
  %659 = @func_458() /* ty=Tensor[(11, 2, 9), int8] */;
  %660 = %656.3;
  %661 = %657.0;
  (%658, %659, %660, meta[relay.Constant][15] /* ty=Tensor[(672), float64] */, %661)
}

def @func_15446(%var_15444: Tensor[(616), float64]) -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), bool], Tensor[(11, 14, 4), float64], Tensor[(616), float64]) {
  %662 = @func_12558() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) */;
  %663 = cast(%var_15444, dtype="float64") /* ty=Tensor[(616), float64] */;
  %664 = reshape(%663, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), float64] */;
  %665 = @func_11313() /* ty=Tensor[(11, 2, 9), float32] */;
  %666 = %662.1;
  %667 = @func_2043(%664) /* ty=Tensor[(11, 14, 4), float64] */;
  (%665, %666, %667, %var_15444)
}

def @func_9414(%var_9404: uint32, %var_9405: Tensor[(5, 9, 4), uint32]) -> Tensor[(5, 9, 4), bool] {
  %668 = cast(%var_9404, dtype="bool") /* ty=bool */;
  %669 = cast(%var_9405, dtype="bool") /* ty=Tensor[(5, 9, 4), bool] */;
  not_equal(%668, %669) /* ty=Tensor[(5, 9, 4), bool] */
}

def @func_10195() -> Tensor[(11, 2, 9), int8] {
  %670 = @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %670.0
}

def @func_10061() -> (Tensor[(7, 5, 11), float64],) {
  %671 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 5, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %672 = cos(%671) /* ty=Tensor[(7, 5, 11), float64] */;
  (%672,)
}

def @func_12156() -> Tensor[(11, 2, 9), float64] {
  %673 = @func_3100() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %673.0
}

def @func_786() -> (Tensor[(11, 2, 9), int8],) {
  %674 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  (%674,)
}

def @func_12558() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) {
  %675 = @func_2901() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %676 = @func_12146() /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %677 = %675.0;
  %678 = %676.0;
  (%677, %678)
}

def @func_10082() -> Tensor[(11, 2, 9), int8] {
  %679 = @func_4892() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %679.1
}

def @func_1974() -> Tensor[(11, 2, 9), float64] {
  %680 = @func_1844() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32]) */;
  %680.0
}

def @func_11560(%var_11539: uint16) -> (Tensor[(16, 14, 10), uint16], Tensor[(12, 2, 8), float32], Tensor[(16, 14, 10), bool]) {
  %681 = cast(%var_11539, dtype="uint16") /* ty=uint16 */;
  %682 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 14, 10), uint16] */, dtype="uint16") /* ty=Tensor[(16, 14, 10), uint16] */;
  %683 = @func_5817() /* ty=(Tensor[(12, 2, 8), float32],) */;
  %684 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 14, 10), uint16] */, dtype="bool") /* ty=Tensor[(16, 14, 10), bool] */;
  %685 = cast(%var_11539, dtype="bool") /* ty=bool */;
  %686 = multiply(%681, %682) /* ty=Tensor[(16, 14, 10), uint16] */;
  %687 = %683.0;
  %688 = logical_or(%684, %685) /* ty=Tensor[(16, 14, 10), bool] */;
  (%686, %687, %688)
}

def @func_922() -> Tensor[(11, 2, 9), int8] {
  %689 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %689.0
}

def @func_605(%var_587: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) {
  %690 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %691 = %690.1;
  %692 = cast(%var_587, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %693 = shape_of(%691, dtype="int32") /* ty=Tensor[(3), int32] */;
  %694 = cast(%691, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %696 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %697 = less(%694, %695) /* ty=Tensor[(11, 2, 9), bool] */;
  %698 = %696.0;
  (%697, %698)
}

def @func_7937() -> Tensor[(11, 2, 9), int8] {
  %699 = @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %699.0
}

def @func_15119() -> (Tensor[(11, 2, 9), int8],) {
  %700 = @func_5266() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %701 = %700.0;
  (%701,)
}

def @func_3626() -> Tensor[(11, 2, 9), int8] {
  %702 = @func_2139() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %702.0
}

def @func_9137() -> (Tensor[(11, 2, 9), int8],) {
  %703 = @func_8905() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %704 = %703.0;
  (%704,)
}

def @func_11142() -> Tensor[(11, 2, 9), int8] {
  %705 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %705.0
}

def @func_11371() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %706 = @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %707 = @func_3203() /* ty=Tensor[(11, 2, 9), int8] */;
  %708 = %706.1;
  (%707, %708)
}

def @func_5750() -> Tensor[(11, 2, 9), uint16] {
  %709 = @func_786() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %710 = %709.0;
  %711 = cast(%710, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
  %712 = log2(%711) /* ty=Tensor[(11, 2, 9), float64] */;
  %713 = cast(%710, dtype="uint16") /* ty=Tensor[(11, 2, 9), uint16] */;
  %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
  %715 = cast(%712, dtype="uint16") /* ty=Tensor[(11, 2, 9), uint16] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%715, %716) /* ty=Tensor[(11, 2, 9), uint16] */
}

def @func_13417() -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %717 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %718 = @func_2901() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %719 = @func_9653() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %720 = %717.1;
  %721 = %718.0;
  %722 = %719.0;
  (%720, %721, %722)
}

def @func_13314(%var_13307: uint16) -> (Tensor[(11, 2, 9), int8], Tensor[(16, 14, 10), bool], uint16) {
  %723 = cast(%var_13307, dtype="uint16") /* ty=uint16 */;
  %724 = reshape(%723, newshape=[]) /* ty=uint16 */;
  %725 = @func_11560(%724) /* ty=(Tensor[(16, 14, 10), uint16], Tensor[(12, 2, 8), float32], Tensor[(16, 14, 10), bool]) */;
  %726 = @func_4951() /* ty=Tensor[(11, 2, 9), int8] */;
  %727 = %725.2;
  (%726, %727, %var_13307)
}

def @func_6766() -> Tensor[(11, 2, 9), int8] {
  %728 = @func_5534() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %728.0
}

def @func_8726() -> (Tensor[(11, 2, 9), int8], Tensor[(14, ?, 3), float64], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) {
  %729 = @func_1322() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %730 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 1, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 3), float32] */;
  %731 = sigmoid(%730) /* ty=Tensor[(14, 1, 3), float32] */;
  %732 = cast(meta[relay.Constant][18] /* ty=Tensor[(14, 1, 3), float32] */, dtype="float64") /* ty=Tensor[(14, 1, 3), float64] */;
  %733 = shape_of(%731, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%731, dtype="float64") /* ty=Tensor[(14, 1, 3), float64] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %736 = @func_4049() /* ty=(Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %737 = @func_5493() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */;
  %738 = %729.0;
  %739 = subtract(%734, %735) /* ty=Tensor[(14, ?, 3), float64] */;
  %740 = @func_4755() /* ty=Tensor[(11, 2, 9), int8] */;
  %741 = %736.0;
  %742 = %737.1;
  (%738, %739, %740, %741, %742)
}

def @func_2188(%var_2176: Tensor[(15, 16, 11), int32], %var_2177: Tensor[(15, 16, 11), int32], %var_2184: Tensor[(20), float64]) -> (Tensor[(15, 16, 11), int32], Tensor[(10, 5, 2), float64], Tensor[(20), float64], Tensor[(198), int8]) {
  %743 = cast(%var_2177, dtype="int32") /* ty=Tensor[(15, 16, 11), int32] */;
  %744 = shape_of(%var_2176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %745 = cast(%var_2176, dtype="int32") /* ty=Tensor[(15, 16, 11), int32] */;
  %746 = dyn.reshape(%743, %744, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %747 = cast(%var_2184, dtype="float64") /* ty=Tensor[(20), float64] */;
  %748 = cast(meta[relay.Constant][19] /* ty=Tensor[(198), int8] */, dtype="int8") /* ty=Tensor[(198), int8] */;
  %749 = reshape(%747, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), float64] */;
  %750 = reshape(%748, newshape=[3, 66]) /* ty=Tensor[(3, 66), int8] */;
  %751 = @func_1553(%749, %750) /* ty=(Tensor[(10, 5, 2), float64], Tensor[(11, 2, 9), float64]) */;
  %752 = add(%745, %746) /* ty=Tensor[(15, 16, 11), int32] */;
  %753 = %751.0;
  (%752, %753, %var_2184, meta[relay.Constant][19] /* ty=Tensor[(198), int8] */)
}

def @func_10429() -> Tensor[(11, 2, 9), int8] {
  @func_4951() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_12180(%var_12173: Tensor[(6, 6, 10), float64]) -> (Tensor[(6, 6, 10), float64], Tensor[(6, 6, 10), float32]) {
  %754 = cast(%var_12173, dtype="float64") /* ty=Tensor[(6, 6, 10), float64] */;
  %755 = cast(%var_12173, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
  %756 = asin(%754) /* ty=Tensor[(6, 6, 10), float64] */;
  %757 = cosh(%755) /* ty=Tensor[(6, 6, 10), float32] */;
  (%756, %757)
}

def @func_2831(%var_2772: Tensor[(6, 7, 16), float64], %var_2773: Tensor[(6, 7, 16), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(6, 7, 16), float32], Tensor[(11, 2, 9), float64]) {
  %758 = @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %759 = cast(%var_2773, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %760 = shape_of(%var_2772, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%var_2772, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %763 = multiply(%761, %762) /* ty=Tensor[(6, 7, 16), float64] */;
  %764 = cast(%763, dtype="bool") /* ty=Tensor[(6, 7, 16), bool] */;
  %765 = shape_of(%var_2773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%var_2773, dtype="bool") /* ty=Tensor[(6, 7, 16), bool] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %768 = cast(%var_2772, dtype="float32") /* ty=Tensor[(6, 7, 16), float32] */;
  %769 = cos(%768) /* ty=Tensor[(6, 7, 16), float32] */;
  %770 = cast(%769, dtype="float32") /* ty=Tensor[(6, 7, 16), float32] */;
  %771 = @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %772 = %771.0;
  %773 = cast(%772, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
  %774 = %758.0;
  %775 = logical_and(%766, %767) /* ty=Tensor[(6, 7, 16), bool] */;
  %776 = log(%770) /* ty=Tensor[(6, 7, 16), float32] */;
  %777 = acos(%773) /* ty=Tensor[(11, 2, 9), float64] */;
  (%774, %775, %776, %777)
}

def @func_359() -> Tensor[(11, 2, 9), int8] {
  @func_123() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_3934(%var_3899: Tensor[(756), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), float32], Tensor[(756), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %778 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %779 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %780 = %779.0;
  %781 = cast(%780, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
  %782 = cast(%var_3899, dtype="float64") /* ty=Tensor[(756), float64] */;
  %783 = reshape(%782, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %784 = @func_3318(%783) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(9, 6, 14), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float32]) */;
  %785 = @func_2762() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %786 = %778.0;
  %787 = rsqrt(%781) /* ty=Tensor[(11, 2, 9), float64] */;
  %788 = %784.2;
  %789 = @func_3338() /* ty=Tensor[(11, 2, 9), int8] */;
  %790 = %785.0;
  (%786, %787, %788, %var_3899, %789, %790)
}

def @func_5383() -> (Tensor[(11, 2, 9), int8],) {
  %791 = @func_1322() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %792 = %791.0;
  (%792,)
}

def @func_13279() -> (Tensor[(11, 2, 9), int8],) {
  %793 = @func_8765() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %794 = %793.0;
  (%794,)
}

def @func_14937() -> Tensor[(11, 2, 9), int8] {
  @func_3626() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_13071() -> (Tensor[(12, 2, 8), uint8], Tensor[(12, 2, 8), float64], Tensor[(11, 2, 9), int8]) {
  %795 = @func_3814() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(12, 2, 8), float32]) */;
  %796 = %795.1;
  %797 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 2, 8), float32] */, dtype="uint8") /* ty=Tensor[(12, 2, 8), uint8] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%796, dtype="uint8") /* ty=Tensor[(12, 2, 8), uint8] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %801 = cast(%796, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  %802 = @func_11390() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(260), uint16]) */;
  %803 = left_shift(%799, %800) /* ty=Tensor[(12, 2, 8), uint8] */;
  %804 = rsqrt(%801) /* ty=Tensor[(12, 2, 8), float64] */;
  %805 = %802.0;
  (%803, %804, %805)
}

def @func_3171() -> (Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) {
  %806 = @func_1974() /* ty=Tensor[(11, 2, 9), float64] */;
  %807 = cast(%806, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  %808 = cast(%806, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %809 = reshape(%808, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %810 = @func_235(%809) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */;
  %811 = exp(%807) /* ty=Tensor[(11, 2, 9), float32] */;
  %812 = %810.0;
  (%811, %812)
}

def @func_8963(%var_8958: Tensor[(7), uint8], %var_8959: Tensor[(624), int16]) -> (Tensor[(11, 2, 9), int8], Tensor[(624), int16], uint8, Tensor[(7), uint8], Tensor[(624), int16]) {
  %813 = @func_1957() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %814 = cast(meta[relay.Constant][21] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %815 = cast(%var_8958, dtype="uint8") /* ty=Tensor[(7), uint8] */;
  %816 = cast(%var_8959, dtype="int16") /* ty=Tensor[(624), int16] */;
  %817 = reshape(%814, newshape=[]) /* ty=uint8 */;
  %818 = reshape(%815, newshape=[7]) /* ty=Tensor[(7), uint8] */;
  %819 = reshape(%816, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %820 = @func_7492(%817, %818, %819) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7), uint8], Tensor[(11, 2, 9), int8], Tensor[(624), int16]) */;
  %821 = %813.0;
  %822 = %820.5;
  (%821, %822, meta[relay.Constant][21] /* ty=uint8 */, %var_8958, %var_8959)
}

def @func_6960() -> (Tensor[(260), float64],) {
  %823 = @func_6600() /* ty=(Tensor[(260), float64],) */;
  %824 = %823.0;
  (%824,)
}

def @func_7064() -> (Tensor[(11, 2, 9), float32],) {
  %825 = @func_4181() /* ty=Tensor[(11, 2, 9), int8] */;
  %826 = cast(%825, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  %827 = atanh(%826) /* ty=Tensor[(11, 2, 9), float32] */;
  (%827,)
}

def @func_10240(%var_10234: Tensor[(12, 2, 8), float32]) -> Tensor[(12, 2, 8), int64] {
  %828 = @func_5817() /* ty=(Tensor[(12, 2, 8), float32],) */;
  %829 = %828.0;
  %830 = cast(%var_10234, dtype="int64") /* ty=Tensor[(12, 2, 8), int64] */;
  %831 = shape_of(%829, dtype="int32") /* ty=Tensor[(3), int32] */;
  %832 = cast(%829, dtype="int64") /* ty=Tensor[(12, 2, 8), int64] */;
  %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  add(%832, %833) /* ty=Tensor[(12, 2, 8), int64] */
}

def @func_8264() -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) {
  %834 = @func_5107() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */;
  %835 = @func_4250() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) */;
  %836 = @func_5340() /* ty=Tensor[(11, 2, 9), float32] */;
  %837 = @func_458() /* ty=Tensor[(11, 2, 9), int8] */;
  %838 = %834.0;
  %839 = %835.0;
  (%836, %837, %838, %839)
}

def @func_3100() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) {
  %840 = @func_1974() /* ty=Tensor[(11, 2, 9), float64] */;
  %841 = cast(%840, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %842 = reshape(%841, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %843 = @func_605(%842) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %844 = %843.0;
  %845 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
  (%840, %844, %845)
}

def @func_8765() -> (Tensor[(11, 2, 9), int8],) {
  %846 = @func_6798() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %847 = %846.0;
  (%847,)
}

def @func_2901() -> (Tensor[(11, 2, 9), int8],) {
  %848 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %849 = %848.0;
  (%849,)
}

def @func_12866() -> (Tensor[(11, 2, 9), int8],) {
  %850 = @func_4560() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %851 = %850.0;
  (%851,)
}

def @func_15264(%var_15254: int64, %var_15255: Tensor[(2, 3, 8), int64]) -> (Tensor[(2, 3, 8), int64],) {
  %852 = cast(%var_15254, dtype="int64") /* ty=int64 */;
  %853 = cast(%var_15255, dtype="int64") /* ty=Tensor[(2, 3, 8), int64] */;
  %854 = add(%852, %853) /* ty=Tensor[(2, 3, 8), int64] */;
  (%854,)
}

def @func_664(%var_659: Tensor[(11, 7, 13), int8], %var_660: Tensor[(11, 7, 13), int8]) -> Tensor[(11, 7, 13), bool] {
  %855 = cast(%var_660, dtype="bool") /* ty=Tensor[(11, 7, 13), bool] */;
  %856 = shape_of(%var_659, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(%var_659, dtype="bool") /* ty=Tensor[(11, 7, 13), bool] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%857, %858) /* ty=Tensor[(11, 7, 13), bool] */
}

def @func_13629() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) {
  %859 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %860 = @func_12523() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %861 = %859.0;
  %862 = @func_11056() /* ty=Tensor[(11, 2, 9), float32] */;
  %863 = %860.2;
  (%861, %862, %863)
}

def @func_5772(%var_5769: Tensor[(12, 5, 15), float32]) -> (Tensor[(12, 5, 15), float32],) {
  %864 = cast(%var_5769, dtype="float32") /* ty=Tensor[(12, 5, 15), float32] */;
  %865 = log(%864) /* ty=Tensor[(12, 5, 15), float32] */;
  (%865,)
}

def @func_11730() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) {
  %866 = @func_2507() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), uint64]) */;
  %867 = @func_4962() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64]) */;
  %868 = @func_1087() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %869 = %868.1;
  %870 = cast(%869, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %871 = reshape(%870, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %872 = @func_7812(%871) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %873 = %866.3;
  %874 = %867.0;
  %875 = %872.0;
  (%873, %874, %869, %875)
}

def @func_15373() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %876 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %877 = @func_3995() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), uint16], Tensor[(11, 2, 9), int8], Tensor[(616), float64]) */;
  %878 = %876.0;
  %879 = %877.0;
  %880 = @func_15079() /* ty=Tensor[(11, 2, 9), int8] */;
  (%878, %879, %880)
}

def @func_1844() -> (Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32]) {
  %881 = @func_1650() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %882 = %881.0;
  %883 = cast(%882, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
  %884 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %885 = acosh(%883) /* ty=Tensor[(11, 2, 9), float64] */;
  %886 = %884.1;
  (%885, %886)
}

def @func_2340() -> Tensor[(11, 2, 9), int8] {
  %887 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %887.0
}

def @func_13522() -> Tensor[(11, 2, 9), int8] {
  %888 = @func_8126() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %888.1
}

def @func_10969(%var_10963: uint8, %var_10964: Tensor[(1, 13, 11), uint8]) -> (Tensor[(1, 13, 11), uint8],) {
  %889 = cast(%var_10963, dtype="uint8") /* ty=uint8 */;
  %890 = cast(%var_10964, dtype="uint8") /* ty=Tensor[(1, 13, 11), uint8] */;
  %891 = bitwise_xor(%889, %890) /* ty=Tensor[(1, 13, 11), uint8] */;
  (%891,)
}

def @func_1553(%var_1522: Tensor[(10, 1, 2), float64], %var_1533: Tensor[(3, 66), int8]) -> (Tensor[(10, 5, 2), float64], Tensor[(11, 2, 9), float64]) {
  %892 = cast(%var_1522, dtype="float64") /* ty=Tensor[(10, 1, 2), float64] */;
  %893 = cast(meta[relay.Constant][22] /* ty=Tensor[(10, 5, 2), float64] */, dtype="float64") /* ty=Tensor[(10, 5, 2), float64] */;
  %894 = cast(%var_1533, dtype="int8") /* ty=Tensor[(3, 66), int8] */;
  %895 = reshape(%894, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %896 = @func_605(%895) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %897 = %896.1;
  %898 = cast(%var_1533, dtype="float64") /* ty=Tensor[(3, 66), float64] */;
  %899 = shape_of(%897, dtype="int32") /* ty=Tensor[(3), int32] */;
  %900 = cast(%897, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
  %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %902 = floor_mod(%892, %893) /* ty=Tensor[(10, 5, 2), float64] */;
  %903 = floor_divide(%900, %901) /* ty=Tensor[(11, 2, 9), float64] */;
  (%902, %903)
}

def @func_10563() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) {
  %904 = @func_9702() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) */;
  %905 = %904.1;
  %906 = cast(%905, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %907 = reshape(%906, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %908 = @func_235(%907) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */;
  %909 = %908.1;
  (%905, %909)
}

def @func_8611() -> (Tensor[(11, 2, 9), int8],) {
  %910 = @func_3030() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %911 = %910.0;
  (%911,)
}

def @func_5972(%var_5967: uint8, %var_5968: Tensor[(7, 1), uint8]) -> (Tensor[(7, 1), uint8],) {
  %912 = cast(%var_5967, dtype="uint8") /* ty=uint8 */;
  %913 = cast(%var_5968, dtype="uint8") /* ty=Tensor[(7, 1), uint8] */;
  %914 = subtract(%912, %913) /* ty=Tensor[(7, 1), uint8] */;
  (%914,)
}

def @func_11056() -> Tensor[(11, 2, 9), float32] {
  %915 = @func_1780() /* ty=(Tensor[(11, 2, 9), float32],) */;
  %915.0
}

def @func_1650() -> (Tensor[(11, 2, 9), int8],) {
  %916 = @func_1322() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %917 = %916.0;
  (%917,)
}

def @func_13041() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %918 = @func_1957() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %919 = @func_3626() /* ty=Tensor[(11, 2, 9), int8] */;
  %920 = %918.0;
  (%919, %920)
}

def @func_771() -> Tensor[(11, 2, 9), int8] {
  @func_458() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_10433() -> Tensor[(260), float64] {
  @func_4440() /* ty=Tensor[(260), float64] */
}

def @func_14566() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %921 = @func_12866() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %922 = @func_5534() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %923 = %921.0;
  %924 = %922.1;
  (%923, %924)
}

def @func_5266() -> (Tensor[(11, 2, 9), int8],) {
  %925 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
  (%925,)
}

def @func_12146() -> (Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %926 = @func_10563() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) */;
  %927 = @func_2901() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %928 = %926.1;
  %929 = @func_8004() /* ty=Tensor[(11, 2, 9), int8] */;
  %930 = %927.0;
  (%928, %929, %930)
}

def @func_7245(%var_7220: Tensor[(2, 5, 6), float32]) -> (Tensor[(2, 5, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(12, 2, 8), float32]) {
  %931 = cast(%var_7220, dtype="float32") /* ty=Tensor[(2, 5, 6), float32] */;
  %932 = @func_3171() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) */;
  %933 = @func_4892() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %934 = asin(%931) /* ty=Tensor[(2, 5, 6), float32] */;
  %935 = %932.1;
  %936 = %933.0;
  (%934, %935, %936)
}

def @func_8849() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) {
  %937 = @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %938 = %937.0;
  %939 = cast(%938, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %940 = reshape(%939, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %941 = @func_235(%940) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */;
  %942 = %941.1;
  (%938, %942)
}

def @func_4116(%var_4087: Tensor[(10, 3, 13), bool], %var_4088: Tensor[(10, 3, 13), bool]) -> (Tensor[(10, 3, 13), bool], Tensor[(11, 2, 9), bool], Tensor[(198), int8]) {
  %943 = cast(%var_4088, dtype="bool") /* ty=Tensor[(10, 3, 13), bool] */;
  %944 = shape_of(%var_4087, dtype="int32") /* ty=Tensor[(3), int32] */;
  %945 = cast(%var_4087, dtype="bool") /* ty=Tensor[(10, 3, 13), bool] */;
  %946 = dyn.reshape(%943, %944, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %947 = cast(meta[relay.Constant][23] /* ty=Tensor[(198), int8] */, dtype="int8") /* ty=Tensor[(198), int8] */;
  %948 = reshape(%947, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %949 = @func_235(%948) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */;
  %950 = logical_and(%945, %946) /* ty=Tensor[(10, 3, 13), bool] */;
  %951 = %949.1;
  (%950, %951, meta[relay.Constant][23] /* ty=Tensor[(198), int8] */)
}

def @func_1507() -> (Tensor[(11, 2, 9), int8],) {
  %952 = @func_1087() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %953 = %952.0;
  (%953,)
}

def @func_10620(%var_10590: Tensor[(5, 16, 11), float32], %var_10605: uint8, %var_10606: Tensor[(7), uint8]) -> (Tensor[(5, 16, 11), float32], Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7), uint8], Tensor[(624), int16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %954 = cast(%var_10590, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  %955 = cast(%var_10605, dtype="uint8") /* ty=uint8 */;
  %956 = cast(%var_10606, dtype="uint8") /* ty=Tensor[(7), uint8] */;
  %957 = cast(meta[relay.Constant][24] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %958 = reshape(%955, newshape=[]) /* ty=uint8 */;
  %959 = reshape(%956, newshape=[7]) /* ty=Tensor[(7), uint8] */;
  %960 = reshape(%957, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %961 = @func_7492(%958, %959, %960) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7), uint8], Tensor[(11, 2, 9), int8], Tensor[(624), int16]) */;
  %962 = @func_4776() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %963 = asinh(%954) /* ty=Tensor[(5, 16, 11), float32] */;
  %964 = @func_4755() /* ty=Tensor[(11, 2, 9), int8] */;
  %965 = %961.1;
  %966 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
  %967 = %962.0;
  (%963, %964, %965, %var_10605, %var_10606, meta[relay.Constant][24] /* ty=Tensor[(624), int16] */, %966, %967)
}

def @func_8037() -> (Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7, 1), uint8]) {
  %968 = @func_5107() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */;
  %969 = cast(meta[relay.Constant][25] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %970 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 1), uint8] */, dtype="uint8") /* ty=Tensor[(7, 1), uint8] */;
  %971 = reshape(%969, newshape=[]) /* ty=uint8 */;
  %972 = reshape(%970, newshape=[7, 1]) /* ty=Tensor[(7, 1), uint8] */;
  %973 = @func_5972(%971, %972) /* ty=(Tensor[(7, 1), uint8],) */;
  %974 = %968.1;
  %975 = %973.0;
  (%974, %975, meta[relay.Constant][25] /* ty=uint8 */, meta[relay.Constant][26] /* ty=Tensor[(7, 1), uint8] */)
}

def @func_8905() -> (Tensor[(11, 2, 9), int8],) {
  %976 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %977 = %976.0;
  (%977,)
}

def @func_12425() -> (Tensor[(12, 2, 8), float32],) {
  %978 = @func_5817() /* ty=(Tensor[(12, 2, 8), float32],) */;
  %979 = %978.0;
  (%979,)
}

def @func_5668() -> Tensor[(11, 2, 9), int8] {
  %980 = @func_5266() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %980.0
}

def @func_972() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  %981 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %982 = %981.0;
  %983 = cast(%982, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %984 = reshape(%983, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %985 = @func_605(%984) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %986 = cast(%982, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  %987 = %985.1;
  %988 = sqrt(%986) /* ty=Tensor[(11, 2, 9), float32] */;
  (%987, %988)
}

def @func_739(%var_734: Tensor[(13, 4, 5), uint16], %var_735: Tensor[(13, 4, 5), uint16]) -> Tensor[(13, 4, 5), bool] {
  %989 = cast(%var_735, dtype="bool") /* ty=Tensor[(13, 4, 5), bool] */;
  %990 = shape_of(%var_734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %991 = cast(%var_734, dtype="bool") /* ty=Tensor[(13, 4, 5), bool] */;
  %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%991, %992) /* ty=Tensor[(13, 4, 5), bool] */
}

def @func_2507() -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), uint64]) {
  %993 = @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %994 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %995 = @func_1974() /* ty=Tensor[(11, 2, 9), float64] */;
  %996 = cast(%995, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %997 = reshape(%996, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %998 = @func_1293(%997) /* ty=(Tensor[(11, 2, 9), uint64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %999 = %993.1;
  %1000 = @func_1974() /* ty=Tensor[(11, 2, 9), float64] */;
  %1001 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  %1002 = %994.1;
  %1003 = %998.0;
  (%999, %1000, %1001, %995, %1002, %1003)
}

def @func_14457(%var_14443: Tensor[(700), float64], %var_14448: Tensor[(10, 5, 14), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(700), float64], Tensor[(10, 5, 14), float64]) {
  %1004 = @func_1933() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1005 = cast(%var_14443, dtype="float64") /* ty=Tensor[(700), float64] */;
  %1006 = reshape(%1005, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), float64] */;
  %1007 = @func_11332(%1006) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(11, 2, 9), int8]) */;
  %1008 = %1007.0;
  %1009 = cast(%var_14448, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %1010 = shape_of(%1008, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%1008, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1013 = %1004.0;
  %1014 = mod(%1011, %1012) /* ty=Tensor[(10, 5, 14), float64] */;
  (%1013, %var_14443, %1014)
}

def @func_6600() -> (Tensor[(260), float64],) {
  %1015 = @func_4440() /* ty=Tensor[(260), float64] */;
  (%1015,)
}

def @func_5534() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1016 = @func_1957() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %1017 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %1018 = %1016.1;
  %1019 = %1017.0;
  (%1018, %1019)
}

def @func_10811() -> (Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) {
  %1020 = @func_5227() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) */;
  %1021 = %1020.2;
  %1022 = @func_7937() /* ty=Tensor[(11, 2, 9), int8] */;
  (%1021, %1022)
}

def @func_15010(%var_15002: uint16) -> Tensor[(11, 13, 12), uint16] {
  %1023 = cast(%var_15002, dtype="uint16") /* ty=uint16 */;
  %1024 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 13, 12), uint16] */, dtype="uint16") /* ty=Tensor[(11, 13, 12), uint16] */;
  subtract(%1023, %1024) /* ty=Tensor[(11, 13, 12), uint16] */
}

def @func_12247(%var_12242: Tensor[(3, 6, 14), int32], %var_12243: Tensor[(3, 6, 14), int32]) -> Tensor[(3, 6, 14), bool] {
  %1025 = cast(%var_12243, dtype="bool") /* ty=Tensor[(3, 6, 14), bool] */;
  %1026 = shape_of(%var_12242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1027 = cast(%var_12242, dtype="bool") /* ty=Tensor[(3, 6, 14), bool] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1027, %1028) /* ty=Tensor[(3, 6, 14), bool] */
}

def @func_123() -> Tensor[(11, 2, 9), int8] {
  %1029 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 2, 9), int8] */, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %1030 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(11, 2, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1031 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 2, 9), int8] */, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%1031, %1032) /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_7812(%var_7785: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) {
  %1033 = @func_6412() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */;
  %1034 = %1033.0;
  %1035 = cast(%var_7785, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %1036 = shape_of(%1034, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1037 = cast(%1034, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %1038 = dyn.reshape(%1035, %1036, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1039 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1040 = equal(%1037, %1038) /* ty=Tensor[(11, 2, 9), bool] */;
  %1041 = %1039.0;
  (%1040, %1041)
}

def @func_8417() -> (Tensor[(11, 2, 9), int64],) {
  %1042 = @func_8294() /* ty=Tensor[(11, 2, 9), int64] */;
  (%1042,)
}

def @func_2043(%var_2022: Tensor[(11, 14, 4), float64]) -> Tensor[(11, 14, 4), float64] {
  %1043 = cast(%var_2022, dtype="float64") /* ty=Tensor[(11, 14, 4), float64] */;
  sigmoid(%1043) /* ty=Tensor[(11, 14, 4), float64] */
}

def @func_5150() -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1044 = @func_2507() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), uint64]) */;
  %1045 = @func_1087() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %1046 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1047 = %1044.4;
  %1048 = @func_3338() /* ty=Tensor[(11, 2, 9), int8] */;
  %1049 = %1045.1;
  %1050 = %1046.0;
  (%1047, %1048, %1049, %1050)
}

def @func_5879() -> Tensor[(11, 2, 9), int8] {
  %1051 = @func_4703() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1051.0
}

def @func_13508() -> Tensor[(11, 2, 9), int8] {
  @func_6766() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_14097(%var_14067: Tensor[(48), float64]) -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(130, 2), uint16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(48), float64]) {
  %1052 = @func_3171() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) */;
  %1053 = @func_6798() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1054 = cast(meta[relay.Constant][30] /* ty=Tensor[(130, 2), uint16] */, dtype="uint16") /* ty=Tensor[(130, 2), uint16] */;
  %1055 = cast(meta[relay.Constant][30] /* ty=Tensor[(130, 2), uint16] */, dtype="uint16") /* ty=Tensor[(130, 2), uint16] */;
  %1056 = reshape(%1054, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), uint16] */;
  %1057 = reshape(%1055, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), uint16] */;
  %1058 = @func_1650() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1059 = cast(%var_14067, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1060 = reshape(%1059, newshape=[4, 12]) /* ty=Tensor[(4, 12), float64] */;
  %1061 = @func_7309(%1060) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) */;
  %1062 = %1052.0;
  %1063 = %1053.0;
  %1064 = @func_739(%1056, %1057) /* ty=Tensor[(13, 4, 5), bool] */;
  %1065 = %1058.0;
  %1066 = @func_9924() /* ty=Tensor[(11, 2, 9), int8] */;
  %1067 = %1061.0;
  (%1062, %1063, %1064, meta[relay.Constant][30] /* ty=Tensor[(130, 2), uint16] */, %1065, %1066, %1067, %var_14067)
}

def @func_4951() -> Tensor[(11, 2, 9), int8] {
  %1068 = @func_4776() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1068.0
}

def @func_11271() -> Tensor[(11, 2, 9), float32] {
  %1069 = @func_6412() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */;
  %1069.1
}

def @func_7763() -> (Tensor[(11, 2, 9), int8],) {
  %1070 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1071 = %1070.0;
  (%1071,)
}

def @func_5227() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) {
  %1072 = @func_3814() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(12, 2, 8), float32]) */;
  %1073 = @func_3338() /* ty=Tensor[(11, 2, 9), int8] */;
  %1074 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
  %1075 = %1072.0;
  (%1073, %1074, %1075)
}

def @func_8164(%var_8147: Tensor[(14, 10, 8), float32]) -> Tensor[(14, 10, 8), float32] {
  %1076 = cast(%var_8147, dtype="float32") /* ty=Tensor[(14, 10, 8), float32] */;
  atan(%1076) /* ty=Tensor[(14, 10, 8), float32] */
}

def @func_6119() -> Tensor[(11, 2, 9), int8] {
  %1077 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1077.0
}

def @func_9550() -> (Tensor[(11, 2, 9), int8],) {
  %1078 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
  (%1078,)
}

def @func_14173(%var_14151: Tensor[(3, 11, 1), float32], %var_14154: Tensor[(3, 11, 1), float32]) -> (Tensor[(3, 11, 1), float32], Tensor[(3, 11, ?), int64], Tensor[(11, 2, 9), int8]) {
  %1079 = cast(%var_14151, dtype="float32") /* ty=Tensor[(3, 11, 1), float32] */;
  %1080 = cast(%var_14154, dtype="int64") /* ty=Tensor[(3, 11, 1), int64] */;
  %1081 = shape_of(%var_14151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1082 = cast(%var_14151, dtype="int64") /* ty=Tensor[(3, 11, 1), int64] */;
  %1083 = dyn.reshape(%1080, %1081, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1084 = @func_9550() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1085 = log10(%1079) /* ty=Tensor[(3, 11, 1), float32] */;
  %1086 = logical_xor(%1082, %1083) /* ty=Tensor[(3, 11, ?), int64] */;
  %1087 = %1084.0;
  (%1085, %1086, %1087)
}

def @func_2664() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1088 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1089 = @func_1669() /* ty=Tensor[(11, 2, 9), int8] */;
  %1090 = %1088.0;
  (%1089, %1090)
}

def @func_873() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1091 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
  %1092 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
  (%1091, %1092)
}

def @func_5582() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1093 = @func_5534() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %1094 = %1093.0;
  %1095 = @func_3475() /* ty=Tensor[(11, 2, 9), int8] */;
  (%1094, %1095)
}

def @func_6503() -> Tensor[(11, 2, 9), int8] {
  %1096 = @func_5383() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1096.0
}

def @func_15539() -> (Tensor[(260), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1097 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %1098 = @func_11371() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %1099 = @func_12191() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1100 = %1097.2;
  %1101 = %1098.1;
  %1102 = %1099.0;
  (%1100, %1101, %1102)
}

def @func_2515() -> Tensor[(11, 2, 9), int8] {
  @func_123() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_10284() -> (Tensor[(11, 2, 9), int8],) {
  %1103 = @func_9702() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) */;
  %1104 = %1103.1;
  (%1104,)
}

def @func_6715(%var_6684: Tensor[(390), bool]) -> (Tensor[(12, 2, 8), float32], Tensor[(198), int8], Tensor[(390), bool]) {
  %1105 = @func_3171() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) */;
  %1106 = cast(%var_6684, dtype="bool") /* ty=Tensor[(390), bool] */;
  %1107 = cast(%var_6684, dtype="bool") /* ty=Tensor[(390), bool] */;
  %1108 = reshape(%1106, newshape=[10, 3, 13]) /* ty=Tensor[(10, 3, 13), bool] */;
  %1109 = reshape(%1107, newshape=[10, 3, 13]) /* ty=Tensor[(10, 3, 13), bool] */;
  %1110 = @func_4116(%1108, %1109) /* ty=(Tensor[(10, 3, 13), bool], Tensor[(11, 2, 9), bool], Tensor[(198), int8]) */;
  %1111 = %1105.1;
  %1112 = %1110.2;
  (%1111, %1112, %var_6684)
}

def @func_6843() -> (Tensor[(12, 2, 8), float32],) {
  %1113 = @func_5150() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %1114 = %1113.0;
  (%1114,)
}

def @func_1087() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1115 = @func_922() /* ty=Tensor[(11, 2, 9), int8] */;
  %1116 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  (%1115, %1116)
}

def @func_1370() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  %1117 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1118 = %1117.0;
  %1119 = cast(%1118, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
  %1120 = sin(%1119) /* ty=Tensor[(11, 2, 9), float64] */;
  %1121 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %1122 = %1121.0;
  %1123 = cast(%1122, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  %1124 = shape_of(%1120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1125 = cast(%1120, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1127 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  %1128 = floor_mod(%1125, %1126) /* ty=Tensor[(11, 2, 9), float32] */;
  (%1127, %1128)
}

def @func_10161(%var_10120: Tensor[(6, 6, 2), uint8], %var_10121: Tensor[(6, 6, 2), uint8]) -> (Tensor[(6, 6, 2), bool], Tensor[(260), float64], Tensor[(6, 6, 2), float32]) {
  %1129 = cast(%var_10121, dtype="bool") /* ty=Tensor[(6, 6, 2), bool] */;
  %1130 = shape_of(%var_10120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1131 = cast(%var_10120, dtype="bool") /* ty=Tensor[(6, 6, 2), bool] */;
  %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1133 = @func_6960() /* ty=(Tensor[(260), float64],) */;
  %1134 = cast(%var_10121, dtype="bool") /* ty=Tensor[(6, 6, 2), bool] */;
  %1135 = shape_of(%var_10120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1136 = cast(%var_10120, dtype="bool") /* ty=Tensor[(6, 6, 2), bool] */;
  %1137 = dyn.reshape(%1134, %1135, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1138 = greater(%1136, %1137) /* ty=Tensor[(6, 6, 2), bool] */;
  %1139 = cast(%1138, dtype="float32") /* ty=Tensor[(6, 6, 2), float32] */;
  %1140 = logical_and(%1131, %1132) /* ty=Tensor[(6, 6, 2), bool] */;
  %1141 = %1133.0;
  %1142 = tan(%1139) /* ty=Tensor[(6, 6, 2), float32] */;
  (%1140, %1141, %1142)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_15012(%var_15011: uint16) -> Tensor[(11, 13, 12), uint16] {
  %2 = fn (%var_15002: uint16) -> Tensor[(11, 13, 12), uint16] {
    %0 = cast(%var_15002, dtype="uint16") /* ty=uint16 */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 13, 12), uint16] */, dtype="uint16") /* ty=Tensor[(11, 13, 12), uint16] */;
    subtract(%0, %1) /* ty=Tensor[(11, 13, 12), uint16] */
  };
  %2(%var_15011) /* ty=Tensor[(11, 13, 12), uint16] */
}

def @main(%var_15555: Tensor[(16, 6, 3), float32]) -> Tensor[(16, 6, 3), float32] {
  %3 = cast(%var_15555, dtype="float32") /* ty=Tensor[(16, 6, 3), float32] */;
  exp(%3) /* ty=Tensor[(16, 6, 3), float32] */
}

def @func_12559() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) {
  %8 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) {
    %4 = @func_2901() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %5 = @func_12146() /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %6 = %4.0;
    %7 = %5.0;
    (%6, %7)
  };
  %8() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) */
}

def @func_3396(%var_3395: Tensor[(4, 3, 4), float64]) -> (Tensor[(4, 3, 4), float64],) {
  %11 = fn (%var_3388: Tensor[(4, 3, 4), float64]) -> (Tensor[(4, 3, 4), float64],) {
    %9 = cast(%var_3388, dtype="float64") /* ty=Tensor[(4, 3, 4), float64] */;
    %10 = cosh(%9) /* ty=Tensor[(4, 3, 4), float64] */;
    (%10,)
  };
  %11(%var_3395) /* ty=(Tensor[(4, 3, 4), float64],) */
}

def @func_14273(%var_14272: Tensor[(11, 6, 2), float64]) -> (Tensor[(11, 6, 2), float64],) {
  %14 = fn (%var_14268: Tensor[(11, 6, 2), float64]) -> (Tensor[(11, 6, 2), float64],) {
    %12 = cast(%var_14268, dtype="float64") /* ty=Tensor[(11, 6, 2), float64] */;
    %13 = cos(%12) /* ty=Tensor[(11, 6, 2), float64] */;
    (%13,)
  };
  %14(%var_14272) /* ty=(Tensor[(11, 6, 2), float64],) */
}

def @func_10242(%var_10241: Tensor[(12, 2, 8), float32]) -> Tensor[(12, 2, 8), int64] {
  %21 = fn (%var_10234: Tensor[(12, 2, 8), float32]) -> Tensor[(12, 2, 8), int64] {
    %15 = @func_5817() /* ty=(Tensor[(12, 2, 8), float32],) */;
    %16 = %15.0;
    %17 = cast(%var_10234, dtype="int64") /* ty=Tensor[(12, 2, 8), int64] */;
    %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(3), int32] */;
    %19 = cast(%16, dtype="int64") /* ty=Tensor[(12, 2, 8), int64] */;
    %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    add(%19, %20) /* ty=Tensor[(12, 2, 8), int64] */
  };
  %21(%var_10241) /* ty=Tensor[(12, 2, 8), int64] */
}

def @func_15241(%var_15239: Tensor[(7, 5, 11), float64], %var_15240: Tensor[(7, 5, 11), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64], Tensor[(7, 5, 11), uint32], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), bool]) {
  @func_15237(%var_15239, %var_15240) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64], Tensor[(7, 5, 11), uint32], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), bool]) */
}

def @func_10969(%var_10963: uint8, %var_10964: Tensor[(1, 13, 11), uint8]) -> (Tensor[(1, 13, 11), uint8],) {
  %22 = cast(%var_10963, dtype="uint8") /* ty=uint8 */;
  %23 = cast(%var_10964, dtype="uint8") /* ty=Tensor[(1, 13, 11), uint8] */;
  %24 = bitwise_xor(%22, %23) /* ty=Tensor[(1, 13, 11), uint8] */;
  (%24,)
}

def @func_4703() -> (Tensor[(11, 2, 9), int8],) {
  %25 = @func_4181() /* ty=Tensor[(11, 2, 9), int8] */;
  (%25,)
}

def @func_13956() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %29 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %26 = @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %27 = @func_8004() /* ty=Tensor[(11, 2, 9), int8] */;
    %28 = %26.0;
    (%27, %28)
  };
  %29() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_15540() -> (Tensor[(260), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %36 = fn () -> (Tensor[(260), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %30 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
    %31 = @func_11371() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %32 = @func_12191() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %33 = %30.2;
    %34 = %31.1;
    %35 = %32.0;
    (%33, %34, %35)
  };
  %36() /* ty=(Tensor[(260), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_8537() -> (Tensor[(11, 2, 9), float32],) {
  %37 = @func_7064() /* ty=(Tensor[(11, 2, 9), float32],) */;
  %38 = %37.0;
  (%38,)
}

def @func_2043(%var_2022: Tensor[(11, 14, 4), float64]) -> Tensor[(11, 14, 4), float64] {
  %39 = cast(%var_2022, dtype="float64") /* ty=Tensor[(11, 14, 4), float64] */;
  sigmoid(%39) /* ty=Tensor[(11, 14, 4), float64] */
}

def @func_2903() -> (Tensor[(11, 2, 9), int8],) {
  @func_2901() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_10813() -> (Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) {
  @func_10811() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) */
}

def @func_605(%var_587: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) {
  %40 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %41 = %40.1;
  %42 = cast(%var_587, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %43 = shape_of(%41, dtype="int32") /* ty=Tensor[(3), int32] */;
  %44 = cast(%41, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %46 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %47 = less(%44, %45) /* ty=Tensor[(11, 2, 9), bool] */;
  %48 = %46.0;
  (%47, %48)
}

def @func_14427() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(260), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %58 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(260), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %49 = @func_7922() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %50 = @func_11390() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(260), uint16]) */;
    %51 = @func_10097() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %52 = @func_3338() /* ty=Tensor[(11, 2, 9), int8] */;
    %53 = %49.0;
    %54 = @func_4440() /* ty=Tensor[(260), float64] */;
    %55 = @func_4440() /* ty=Tensor[(260), float64] */;
    %56 = %50.0;
    %57 = %51.0;
    (%52, %53, %54, %55, %56, %57)
  };
  %58() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(260), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_3477() -> Tensor[(11, 2, 9), int8] {
  @func_3475() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_2559() -> Tensor[(11, 2, 9), int8] {
  @func_2557() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_3031() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  %65 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
    %59 = @func_1322() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %60 = @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %61 = %60.1;
    %62 = cast(%61, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
    %63 = %59.0;
    %64 = asin(%62) /* ty=Tensor[(11, 2, 9), float32] */;
    (%63, %64)
  };
  %65() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */
}

def @func_12157() -> Tensor[(11, 2, 9), float64] {
  %67 = fn () -> Tensor[(11, 2, 9), float64] {
    %66 = @func_3100() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
    %66.0
  };
  %67() /* ty=Tensor[(11, 2, 9), float64] */
}

def @func_9702() -> (Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) {
  %68 = @func_1071() /* ty=(Tensor[(11, 2, 9), int64],) */;
  %69 = @func_6304() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %70 = %68.0;
  %71 = %69.0;
  (%70, %71)
}

def @func_5904(%var_5897: float64, %var_5898: Tensor[(1, 5, 15), float64]) -> Tensor[(1, 5, 15), float64] {
  %72 = cast(%var_5897, dtype="float64") /* ty=float64 */;
  %73 = cast(%var_5898, dtype="float64") /* ty=Tensor[(1, 5, 15), float64] */;
  floor_divide(%72, %73) /* ty=Tensor[(1, 5, 15), float64] */
}

def @func_1669() -> Tensor[(11, 2, 9), int8] {
  %74 = @func_1087() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %74.1
}

def @func_5095() -> (Tensor[(11, 2, 9), int8],) {
  %75 = @func_2762() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %76 = %75.0;
  (%76,)
}

def @func_8331(%var_8300: Tensor[(13, 2, 5), uint16], %var_8301: Tensor[(13, 2, 5), uint16]) -> (Tensor[(13, 2, 5), float32], Tensor[(11, 2, 9), float32]) {
  %77 = cast(%var_8301, dtype="uint16") /* ty=Tensor[(13, 2, 5), uint16] */;
  %78 = shape_of(%var_8300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%var_8300, dtype="uint16") /* ty=Tensor[(13, 2, 5), uint16] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %81 = bitwise_xor(%79, %80) /* ty=Tensor[(13, 2, 5), uint16] */;
  %82 = cast(%81, dtype="float32") /* ty=Tensor[(13, 2, 5), float32] */;
  %83 = @func_6412() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */;
  %84 = acosh(%82) /* ty=Tensor[(13, 2, 5), float32] */;
  %85 = %83.1;
  (%84, %85)
}

def @func_8728() -> (Tensor[(11, 2, 9), int8], Tensor[(14, ?, 3), float64], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) {
  @func_8726() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(14, ?, 3), float64], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */
}

def @func_15446(%var_15444: Tensor[(616), float64]) -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), bool], Tensor[(11, 14, 4), float64], Tensor[(616), float64]) {
  %86 = @func_12558() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) */;
  %87 = cast(%var_15444, dtype="float64") /* ty=Tensor[(616), float64] */;
  %88 = reshape(%87, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), float64] */;
  %89 = @func_11313() /* ty=Tensor[(11, 2, 9), float32] */;
  %90 = %86.1;
  %91 = @func_2043(%88) /* ty=Tensor[(11, 14, 4), float64] */;
  (%89, %90, %91, %var_15444)
}

def @func_11391() -> (Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(260), uint16]) {
  %99 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(260), uint16]) {
    %92 = @func_5306() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %93 = cast(meta[relay.Constant][1] /* ty=Tensor[(260), uint16] */, dtype="uint16") /* ty=Tensor[(260), uint16] */;
    %94 = cast(meta[relay.Constant][1] /* ty=Tensor[(260), uint16] */, dtype="uint16") /* ty=Tensor[(260), uint16] */;
    %95 = reshape(%93, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), uint16] */;
    %96 = reshape(%94, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), uint16] */;
    %97 = %92.0;
    %98 = @func_739(%95, %96) /* ty=Tensor[(13, 4, 5), bool] */;
    (%97, %98, meta[relay.Constant][1] /* ty=Tensor[(260), uint16] */)
  };
  %99() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(260), uint16]) */
}

def @func_7428(%var_7426: Tensor[(672), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(672), float64]) {
  @func_7425(%var_7426) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(672), float64]) */
}

def @func_6587() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %100 = @func_5150() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %101 = @func_5095() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %102 = %100.1;
  %103 = %101.0;
  (%102, %103)
}

def @func_11271() -> Tensor[(11, 2, 9), float32] {
  %104 = @func_6412() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */;
  %104.1
}

def @func_6589() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_6587() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_11675() -> (Tensor[(11, 2, 9), float64],) {
  %105 = @func_1974() /* ty=Tensor[(11, 2, 9), float64] */;
  (%105,)
}

def @func_11233(%var_11200: Tensor[(450, 2), float32]) -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(450, 2), bool], Tensor[(260), float64]) {
  %106 = @func_1844() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32]) */;
  %107 = @func_5095() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %108 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %109 = cast(%var_11200, dtype="float32") /* ty=Tensor[(450, 2), float32] */;
  %110 = reshape(%109, newshape=[12, 5, 15]) /* ty=Tensor[(12, 5, 15), float32] */;
  %111 = @func_5772(%110) /* ty=(Tensor[(12, 5, 15), float32],) */;
  %112 = %111.0;
  %113 = cast(%112, dtype="bool") /* ty=Tensor[(12, 5, 15), bool] */;
  %114 = shape_of(%var_11200, dtype="int32") /* ty=Tensor[(2), int32] */;
  %115 = cast(%var_11200, dtype="bool") /* ty=Tensor[(450, 2), bool] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %117 = %106.1;
  %118 = %107.0;
  %119 = %108.0;
  %120 = greater(%115, %116) /* ty=Tensor[(450, 2), bool] */;
  %121 = @func_10433() /* ty=Tensor[(260), float64] */;
  (%117, %118, %119, %120, %121)
}

def @func_11801(%var_11799: Tensor[(14, 8, 2), uint16], %var_11800: Tensor[(14, 8, 2), uint16]) -> (Tensor[(14, 8, 2), uint16],) {
  @func_11797(%var_11799, %var_11800) /* ty=(Tensor[(14, 8, 2), uint16],) */
}

def @func_8613() -> (Tensor[(11, 2, 9), int8],) {
  @func_8611() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_11562(%var_11561: uint16) -> (Tensor[(16, 14, 10), uint16], Tensor[(12, 2, 8), float32], Tensor[(16, 14, 10), bool]) {
  %130 = fn (%var_11539: uint16) -> (Tensor[(16, 14, 10), uint16], Tensor[(12, 2, 8), float32], Tensor[(16, 14, 10), bool]) {
    %122 = cast(%var_11539, dtype="uint16") /* ty=uint16 */;
    %123 = cast(meta[relay.Constant][2] /* ty=Tensor[(16, 14, 10), uint16] */, dtype="uint16") /* ty=Tensor[(16, 14, 10), uint16] */;
    %124 = @func_5817() /* ty=(Tensor[(12, 2, 8), float32],) */;
    %125 = cast(meta[relay.Constant][2] /* ty=Tensor[(16, 14, 10), uint16] */, dtype="bool") /* ty=Tensor[(16, 14, 10), bool] */;
    %126 = cast(%var_11539, dtype="bool") /* ty=bool */;
    %127 = multiply(%122, %123) /* ty=Tensor[(16, 14, 10), uint16] */;
    %128 = %124.0;
    %129 = logical_or(%125, %126) /* ty=Tensor[(16, 14, 10), bool] */;
    (%127, %128, %129)
  };
  %130(%var_11561) /* ty=(Tensor[(16, 14, 10), uint16], Tensor[(12, 2, 8), float32], Tensor[(16, 14, 10), bool]) */
}

def @func_15079() -> Tensor[(11, 2, 9), int8] {
  @func_9924() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_12425() -> (Tensor[(12, 2, 8), float32],) {
  %131 = @func_5817() /* ty=(Tensor[(12, 2, 8), float32],) */;
  %132 = %131.0;
  (%132,)
}

def @func_8397() -> Tensor[(11, 2, 9), float32] {
  @func_8395() /* ty=Tensor[(11, 2, 9), float32] */
}

def @func_11057() -> Tensor[(11, 2, 9), float32] {
  %134 = fn () -> Tensor[(11, 2, 9), float32] {
    %133 = @func_1780() /* ty=(Tensor[(11, 2, 9), float32],) */;
    %133.0
  };
  %134() /* ty=Tensor[(11, 2, 9), float32] */
}

def @func_4777() -> (Tensor[(11, 2, 9), int8],) {
  %136 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %135 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
    (%135,)
  };
  %136() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_237(%var_236: Tensor[(11, 2, 9), int8]) -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) {
  %145 = fn (%var_227: Tensor[(11, 2, 9), int8]) -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) {
    %137 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 2, 8), float32] */, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
    %138 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
    %139 = cast(%var_227, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
    %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
    %141 = cast(%138, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
    %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %143 = atan(%137) /* ty=Tensor[(12, 2, 8), float32] */;
    %144 = logical_and(%141, %142) /* ty=Tensor[(11, 2, 9), bool] */;
    (%143, %144)
  };
  %145(%var_236) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */
}

def @func_12251(%var_12249: Tensor[(3, 6, 14), int32], %var_12250: Tensor[(3, 6, 14), int32]) -> Tensor[(3, 6, 14), bool] {
  @func_12247(%var_12249, %var_12250) /* ty=Tensor[(3, 6, 14), bool] */
}

def @func_3204() -> Tensor[(11, 2, 9), int8] {
  %147 = fn () -> Tensor[(11, 2, 9), int8] {
    %146 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
    %146.1
  };
  %147() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_7765() -> (Tensor[(11, 2, 9), int8],) {
  @func_7763() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_10016(%var_9990: Tensor[(5, 9, 8), float64]) -> (Tensor[(5, 9, 8), bool], Tensor[(11, 2, 9), int8]) {
  %148 = cast(%var_9990, dtype="float64") /* ty=Tensor[(5, 9, 8), float64] */;
  %149 = cosh(%148) /* ty=Tensor[(5, 9, 8), float64] */;
  %150 = cast(%149, dtype="bool") /* ty=Tensor[(5, 9, 8), bool] */;
  %151 = shape_of(%var_9990, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%var_9990, dtype="bool") /* ty=Tensor[(5, 9, 8), bool] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %154 = greater(%152, %153) /* ty=Tensor[(5, 9, 8), bool] */;
  %155 = @func_6503() /* ty=Tensor[(11, 2, 9), int8] */;
  (%154, %155)
}

def @func_5152() -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_5150() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_1958() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %160 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %156 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
    %157 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %158 = %156.0;
    %159 = %157.0;
    (%158, %159)
  };
  %160() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_1651() -> (Tensor[(11, 2, 9), int8],) {
  %163 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %161 = @func_1322() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %162 = %161.0;
    (%162,)
  };
  %163() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_14795(%var_14793: Tensor[(6, 8, 9), int8], %var_14794: Tensor[(6, 8, 9), int8]) -> (Tensor[(6, 8, 9), bool],) {
  %169 = fn (%var_14787: Tensor[(6, 8, 9), int8], %var_14788: Tensor[(6, 8, 9), int8]) -> (Tensor[(6, 8, 9), bool],) {
    %164 = cast(%var_14788, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
    %165 = shape_of(%var_14787, dtype="int32") /* ty=Tensor[(3), int32] */;
    %166 = cast(%var_14787, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
    %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %168 = equal(%166, %167) /* ty=Tensor[(6, 8, 9), bool] */;
    (%168,)
  };
  %169(%var_14793, %var_14794) /* ty=(Tensor[(6, 8, 9), bool],) */
}

def @func_10728() -> Tensor[(11, 2, 9), int8] {
  %170 = fn () -> Tensor[(11, 2, 9), int8] {
    @func_9924() /* ty=Tensor[(11, 2, 9), int8] */
  };
  %170() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_6844() -> (Tensor[(12, 2, 8), float32],) {
  %173 = fn () -> (Tensor[(12, 2, 8), float32],) {
    %171 = @func_5150() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %172 = %171.0;
    (%172,)
  };
  %173() /* ty=(Tensor[(12, 2, 8), float32],) */
}

def @func_1296(%var_1294: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), uint64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_1293(%var_1294) /* ty=(Tensor[(11, 2, 9), uint64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_8004() -> Tensor[(11, 2, 9), int8] {
  %174 = @func_7922() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %174.0
}

def @func_5536() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_5534() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_5289() -> Tensor[(260), float64] {
  @func_5287() /* ty=Tensor[(260), float64] */
}

def @func_5464(%var_5462: Tensor[(4, 1, 5), uint64], %var_5463: Tensor[(4, 2, 5), uint64]) -> (Tensor[(4, 2, 5), float32],) {
  @func_5460(%var_5462, %var_5463) /* ty=(Tensor[(4, 2, 5), float32],) */
}

def @func_3340() -> Tensor[(11, 2, 9), int8] {
  @func_3338() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_5340() -> Tensor[(11, 2, 9), float32] {
  %175 = @func_3030() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %175.1
}

def @func_9654() -> (Tensor[(11, 2, 9), int8],) {
  %178 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %176 = @func_8726() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(14, ?, 3), float64], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
    %177 = %176.2;
    (%177,)
  };
  %178() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_10644() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %179 = @func_2762() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %180 = %179.0;
  %181 = @func_10429() /* ty=Tensor[(11, 2, 9), int8] */;
  (%180, %181)
}

def @func_5342() -> Tensor[(11, 2, 9), float32] {
  @func_5340() /* ty=Tensor[(11, 2, 9), float32] */
}

def @func_13281() -> (Tensor[(11, 2, 9), int8],) {
  @func_13279() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_12658() -> (Tensor[(12, 2, 8), float32],) {
  %182 = @func_5817() /* ty=(Tensor[(12, 2, 8), float32],) */;
  %183 = %182.0;
  (%183,)
}

def @func_14709(%var_14708: Tensor[(1, 4, 10), float64]) -> (Tensor[(5, 4, 10), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64]) {
  %191 = fn (%var_14678: Tensor[(1, 4, 10), float64]) -> (Tensor[(5, 4, 10), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64]) {
    %184 = cast(%var_14678, dtype="float64") /* ty=Tensor[(1, 4, 10), float64] */;
    %185 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 4, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 4, 10), float64] */;
    %186 = @func_8849() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) */;
    %187 = @func_5493() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */;
    %188 = subtract(%184, %185) /* ty=Tensor[(5, 4, 10), float64] */;
    %189 = %186.0;
    %190 = %187.0;
    (%188, %189, %190)
  };
  %191(%var_14708) /* ty=(Tensor[(5, 4, 10), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64]) */
}

def @func_14173(%var_14151: Tensor[(3, 11, 1), float32], %var_14154: Tensor[(3, 11, 1), float32]) -> (Tensor[(3, 11, 1), float32], Tensor[(3, 11, ?), int64], Tensor[(11, 2, 9), int8]) {
  %192 = cast(%var_14151, dtype="float32") /* ty=Tensor[(3, 11, 1), float32] */;
  %193 = cast(%var_14154, dtype="int64") /* ty=Tensor[(3, 11, 1), int64] */;
  %194 = shape_of(%var_14151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%var_14151, dtype="int64") /* ty=Tensor[(3, 11, 1), int64] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %197 = @func_9550() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %198 = log10(%192) /* ty=Tensor[(3, 11, 1), float32] */;
  %199 = logical_xor(%195, %196) /* ty=Tensor[(3, 11, ?), int64] */;
  %200 = %197.0;
  (%198, %199, %200)
}

def @func_2704(%var_2703: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), uint8],) {
  %208 = fn (%var_2695: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), uint8],) {
    %201 = @func_786() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %202 = %201.0;
    %203 = cast(%var_2695, dtype="uint8") /* ty=Tensor[(11, 2, 9), uint8] */;
    %204 = shape_of(%202, dtype="int32") /* ty=Tensor[(3), int32] */;
    %205 = cast(%202, dtype="uint8") /* ty=Tensor[(11, 2, 9), uint8] */;
    %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %207 = subtract(%205, %206) /* ty=Tensor[(11, 2, 9), uint8] */;
    (%207,)
  };
  %208(%var_2703) /* ty=(Tensor[(11, 2, 9), uint8],) */
}

def @func_10399() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %209 = @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %210 = @func_3338() /* ty=Tensor[(11, 2, 9), int8] */;
  %211 = %209.0;
  (%210, %211)
}

def @func_360() -> Tensor[(11, 2, 9), int8] {
  %212 = fn () -> Tensor[(11, 2, 9), int8] {
    @func_123() /* ty=Tensor[(11, 2, 9), int8] */
  };
  %212() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_1481(%var_1479: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), uint8], Tensor[(11, 2, 9), int8]) {
  @func_1478(%var_1479) /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), uint8], Tensor[(11, 2, 9), int8]) */
}

def @func_730() -> (Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) {
  @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */
}

def @func_1781() -> (Tensor[(11, 2, 9), float32],) {
  %216 = fn () -> (Tensor[(11, 2, 9), float32],) {
    %213 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
    %214 = cast(%213, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
    %215 = sigmoid(%214) /* ty=Tensor[(11, 2, 9), float32] */;
    (%215,)
  };
  %216() /* ty=(Tensor[(11, 2, 9), float32],) */
}

def @func_4561() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  %220 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
    %217 = @func_972() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
    %218 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
    %219 = %217.1;
    (%218, %219)
  };
  %220() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */
}

def @func_10520() -> (Tensor[(11, 2, 9), int8],) {
  %223 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %221 = @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %222 = %221.0;
    (%222,)
  };
  %223() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_7654(%var_7652: Tensor[(12, 2, 8), float32]) -> (Tensor[(12, 2, 8), float32], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(99, 2), int8]) {
  @func_7651(%var_7652) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(99, 2), int8]) */
}

def @func_15375() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_15373() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_9753(%var_9752: Tensor[(616), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 14, 4), float64], Tensor[(616), float64]) {
  %229 = fn (%var_9748: Tensor[(616), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 14, 4), float64], Tensor[(616), float64]) {
    %224 = @func_1933() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %225 = cast(%var_9748, dtype="float64") /* ty=Tensor[(616), float64] */;
    %226 = reshape(%225, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), float64] */;
    %227 = %224.0;
    %228 = @func_2043(%226) /* ty=Tensor[(11, 14, 4), float64] */;
    (%227, %228, %var_9748)
  };
  %229(%var_9752) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 14, 4), float64], Tensor[(616), float64]) */
}

def @func_11836() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %236 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %230 = @func_5383() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %231 = @func_5150() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %232 = %230.0;
    %233 = %231.3;
    %234 = @func_10195() /* ty=Tensor[(11, 2, 9), int8] */;
    %235 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
    (%232, %233, %234, %235)
  };
  %236() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_10646() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_10644() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_9137() -> (Tensor[(11, 2, 9), int8],) {
  %237 = @func_8905() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %238 = %237.0;
  (%238,)
}

def @func_9189() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  %239 = @func_6412() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */;
  %240 = @func_2664() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %241 = @func_8537() /* ty=(Tensor[(11, 2, 9), float32],) */;
  %242 = %239.2;
  %243 = %240.0;
  %244 = %241.0;
  (%242, %243, %244)
}

def @func_10285() -> (Tensor[(11, 2, 9), int8],) {
  %247 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %245 = @func_9702() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) */;
    %246 = %245.1;
    (%246,)
  };
  %247() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_5908(%var_5906: float64, %var_5907: Tensor[(1, 5, 15), float64]) -> Tensor[(1, 5, 15), float64] {
  @func_5904(%var_5906, %var_5907) /* ty=Tensor[(1, 5, 15), float64] */
}

def @func_2664() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %248 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %249 = @func_1669() /* ty=Tensor[(11, 2, 9), int8] */;
  %250 = %248.0;
  (%249, %250)
}

def @func_5460(%var_5439: Tensor[(4, 1, 5), uint64], %var_5440: Tensor[(4, 2, 5), uint64]) -> (Tensor[(4, 2, 5), float32],) {
  %251 = cast(%var_5439, dtype="bool") /* ty=Tensor[(4, 1, 5), bool] */;
  %252 = cast(%var_5440, dtype="bool") /* ty=Tensor[(4, 2, 5), bool] */;
  %253 = equal(%251, %252) /* ty=Tensor[(4, 2, 5), bool] */;
  %254 = cast(%253, dtype="float32") /* ty=Tensor[(4, 2, 5), float32] */;
  %255 = sinh(%254) /* ty=Tensor[(4, 2, 5), float32] */;
  (%255,)
}

def @func_6548() -> (Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) {
  %259 = fn () -> (Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) {
    %256 = @func_1071() /* ty=(Tensor[(11, 2, 9), int64],) */;
    %257 = %256.0;
    %258 = @func_458() /* ty=Tensor[(11, 2, 9), int8] */;
    (%257, %258)
  };
  %259() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) */
}

def @func_10811() -> (Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) {
  %260 = @func_5227() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) */;
  %261 = %260.2;
  %262 = @func_7937() /* ty=Tensor[(11, 2, 9), int8] */;
  (%261, %262)
}

def @func_6798() -> (Tensor[(11, 2, 9), int8],) {
  %263 = @func_2937() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %264 = %263.2;
  (%264,)
}

def @func_4116(%var_4087: Tensor[(10, 3, 13), bool], %var_4088: Tensor[(10, 3, 13), bool]) -> (Tensor[(10, 3, 13), bool], Tensor[(11, 2, 9), bool], Tensor[(198), int8]) {
  %265 = cast(%var_4088, dtype="bool") /* ty=Tensor[(10, 3, 13), bool] */;
  %266 = shape_of(%var_4087, dtype="int32") /* ty=Tensor[(3), int32] */;
  %267 = cast(%var_4087, dtype="bool") /* ty=Tensor[(10, 3, 13), bool] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %269 = cast(meta[relay.Constant][5] /* ty=Tensor[(198), int8] */, dtype="int8") /* ty=Tensor[(198), int8] */;
  %270 = reshape(%269, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %271 = @func_235(%270) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */;
  %272 = logical_and(%267, %268) /* ty=Tensor[(10, 3, 13), bool] */;
  %273 = %271.1;
  (%272, %273, meta[relay.Constant][5] /* ty=Tensor[(198), int8] */)
}

def @func_8487() -> (Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(14, 10, 8), float32], Tensor[(1120, 1), float32]) {
  %274 = @func_3030() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %275 = @func_6600() /* ty=(Tensor[(260), float64],) */;
  %276 = cast(meta[relay.Constant][6] /* ty=Tensor[(1120, 1), float32] */, dtype="float32") /* ty=Tensor[(1120, 1), float32] */;
  %277 = reshape(%276, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float32] */;
  %278 = %274.0;
  %279 = %275.0;
  %280 = @func_8164(%277) /* ty=Tensor[(14, 10, 8), float32] */;
  (%278, %279, %280, meta[relay.Constant][6] /* ty=Tensor[(1120, 1), float32] */)
}

def @func_9552() -> (Tensor[(11, 2, 9), int8],) {
  @func_9550() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_10197() -> Tensor[(11, 2, 9), int8] {
  @func_10195() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_4755() -> Tensor[(11, 2, 9), int8] {
  %281 = @func_4703() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %281.0
}

def @func_9191() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  @func_9189() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */
}

def @func_11442() -> (Tensor[(11, 2, 9), int64], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) {
  %282 = @func_1071() /* ty=(Tensor[(11, 2, 9), int64],) */;
  %283 = @func_7107() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %284 = %282.0;
  %285 = @func_10433() /* ty=Tensor[(260), float64] */;
  %286 = %283.0;
  (%284, %285, %286)
}

def @func_14566() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %287 = @func_12866() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %288 = @func_5534() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %289 = %287.0;
  %290 = %288.1;
  (%289, %290)
}

def @func_14317() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %293 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %291 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
    %292 = @func_922() /* ty=Tensor[(11, 2, 9), int8] */;
    (%291, %292)
  };
  %293() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_5817() -> (Tensor[(12, 2, 8), float32],) {
  %294 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %295 = %294.1;
  (%295,)
}

def @func_3338() -> Tensor[(11, 2, 9), int8] {
  %296 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %296.0
}

def @func_8767() -> (Tensor[(11, 2, 9), int8],) {
  @func_8765() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_7492(%var_7456: uint8, %var_7457: Tensor[(7), uint8], %var_7490: Tensor[(624), int16]) -> (Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7), uint8], Tensor[(11, 2, 9), int8], Tensor[(624), int16]) {
  %297 = @func_4892() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %298 = cast(%var_7456, dtype="uint8") /* ty=uint8 */;
  %299 = cast(%var_7457, dtype="uint8") /* ty=Tensor[(7), uint8] */;
  %300 = reshape(%298, newshape=[]) /* ty=uint8 */;
  %301 = reshape(%299, newshape=[7, 1]) /* ty=Tensor[(7, 1), uint8] */;
  %302 = @func_5972(%300, %301) /* ty=(Tensor[(7, 1), uint8],) */;
  %303 = cast(%var_7456, dtype="int16") /* ty=int16 */;
  %304 = cast(%var_7490, dtype="int16") /* ty=Tensor[(624), int16] */;
  %305 = reshape(%303, newshape=[]) /* ty=int16 */;
  %306 = reshape(%304, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), int16] */;
  %307 = @func_6636(%305, %306) /* ty=(Tensor[(13, 12, 4), int16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %308 = %297.2;
  %309 = %302.0;
  %310 = %307.2;
  (%308, %309, %var_7456, %var_7457, %310, %var_7490)
}

def @func_6119() -> Tensor[(11, 2, 9), int8] {
  %311 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %311.0
}

def @func_7311(%var_7310: Tensor[(4, 12), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) {
  %318 = fn (%var_7299: Tensor[(4, 12), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) {
    %312 = @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %313 = cast(%var_7299, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
    %314 = reshape(%313, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float64] */;
    %315 = @func_3394(%314) /* ty=(Tensor[(4, 3, 4), float64],) */;
    %316 = %312.1;
    %317 = %315.0;
    (%316, %317, %var_7299)
  };
  %318(%var_7310) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) */
}

def @func_5307() -> (Tensor[(11, 2, 9), int8],) {
  %321 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %319 = @func_4776() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %320 = %319.0;
    (%320,)
  };
  %321() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_1323() -> (Tensor[(11, 2, 9), int8],) {
  %324 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %322 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
    %323 = %322.2;
    (%323,)
  };
  %324() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_2939() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_2937() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_4250() -> (Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) {
  %325 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %326 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 12), float64] */, dtype="float64") /* ty=Tensor[(4, 12), float64] */;
  %327 = reshape(%326, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float64] */;
  %328 = @func_3394(%327) /* ty=(Tensor[(4, 3, 4), float64],) */;
  %329 = %325.0;
  %330 = %328.0;
  (%329, %330, meta[relay.Constant][7] /* ty=Tensor[(4, 12), float64] */)
}

def @func_11677() -> (Tensor[(11, 2, 9), float64],) {
  @func_11675() /* ty=(Tensor[(11, 2, 9), float64],) */
}

def @func_3627() -> Tensor[(11, 2, 9), int8] {
  %332 = fn () -> Tensor[(11, 2, 9), int8] {
    %331 = @func_2139() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %331.0
  };
  %332() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_9924() -> Tensor[(11, 2, 9), int8] {
  %333 = @func_2139() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %333.0
}

def @func_2015() -> (Tensor[(11, 2, 9), int8],) {
  @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_12940() -> (Tensor[(13, 15, 15), bool],) {
  @func_12938() /* ty=(Tensor[(13, 15, 15), bool],) */
}

def @func_3321(%var_3319: Tensor[(9, 6, 14), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(9, 6, 14), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float32]) {
  @func_3318(%var_3319) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(9, 6, 14), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float32]) */
}

def @func_9139() -> (Tensor[(11, 2, 9), int8],) {
  @func_9137() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_3996() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), uint16], Tensor[(11, 2, 9), int8], Tensor[(616), float64]) {
  %343 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), uint16], Tensor[(11, 2, 9), int8], Tensor[(616), float64]) {
    %334 = @func_1669() /* ty=Tensor[(11, 2, 9), int8] */;
    %335 = cast(%334, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
    %336 = reshape(%335, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
    %337 = @func_2381(%336) /* ty=(Tensor[(11, 2, 9), uint16],) */;
    %338 = cast(meta[relay.Constant][8] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %339 = reshape(%338, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %340 = @func_3590(%339) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(4, 3, 4), float64], Tensor[(2, 24), float64], Tensor[(11, 14, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 9), int8]) */;
    %341 = %337.0;
    %342 = %340.0;
    (%334, %341, %342, meta[relay.Constant][8] /* ty=Tensor[(616), float64] */)
  };
  %343() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), uint16], Tensor[(11, 2, 9), int8], Tensor[(616), float64]) */
}

def @func_6960() -> (Tensor[(260), float64],) {
  %344 = @func_6600() /* ty=(Tensor[(260), float64],) */;
  %345 = %344.0;
  (%345,)
}

def @func_11236(%var_11234: Tensor[(450, 2), float32]) -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(450, 2), bool], Tensor[(260), float64]) {
  @func_11233(%var_11234) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(450, 2), bool], Tensor[(260), float64]) */
}

def @func_4951() -> Tensor[(11, 2, 9), int8] {
  %346 = @func_4776() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %346.0
}

def @func_2383(%var_2382: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), uint16],) {
  %354 = fn (%var_2367: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), uint16],) {
    %347 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %348 = %347.0;
    %349 = cast(%var_2367, dtype="uint16") /* ty=Tensor[(11, 2, 9), uint16] */;
    %350 = shape_of(%348, dtype="int32") /* ty=Tensor[(3), int32] */;
    %351 = cast(%348, dtype="uint16") /* ty=Tensor[(11, 2, 9), uint16] */;
    %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %353 = maximum(%351, %352) /* ty=Tensor[(11, 2, 9), uint16] */;
    (%353,)
  };
  %354(%var_2382) /* ty=(Tensor[(11, 2, 9), uint16],) */
}

def @func_5383() -> (Tensor[(11, 2, 9), int8],) {
  %355 = @func_1322() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %356 = %355.0;
  (%356,)
}

def @func_8726() -> (Tensor[(11, 2, 9), int8], Tensor[(14, ?, 3), float64], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) {
  %357 = @func_1322() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %358 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 1, 3), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 3), float32] */;
  %359 = sigmoid(%358) /* ty=Tensor[(14, 1, 3), float32] */;
  %360 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 1, 3), float32] */, dtype="float64") /* ty=Tensor[(14, 1, 3), float64] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%359, dtype="float64") /* ty=Tensor[(14, 1, 3), float64] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %364 = @func_4049() /* ty=(Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %365 = @func_5493() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */;
  %366 = %357.0;
  %367 = subtract(%362, %363) /* ty=Tensor[(14, ?, 3), float64] */;
  %368 = @func_4755() /* ty=Tensor[(11, 2, 9), int8] */;
  %369 = %364.0;
  %370 = %365.1;
  (%366, %367, %368, %369, %370)
}

def @func_4964() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64]) {
  @func_4962() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64]) */
}

def @func_13826() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) {
  @func_13824() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) */
}

def @func_10430() -> Tensor[(11, 2, 9), int8] {
  %371 = fn () -> Tensor[(11, 2, 9), int8] {
    @func_4951() /* ty=Tensor[(11, 2, 9), int8] */
  };
  %371() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_14855(%var_14854: Tensor[(1, 390), bool]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(1, 390), float32], Tensor[(11, 2, 9), int8]) {
  %381 = fn (%var_14835: Tensor[(1, 390), bool]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(1, 390), float32], Tensor[(11, 2, 9), int8]) {
    %372 = @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
    %373 = cast(%var_14835, dtype="bool") /* ty=Tensor[(1, 390), bool] */;
    %374 = reshape(%373, newshape=[5, 78]) /* ty=Tensor[(5, 78), bool] */;
    %375 = @func_11612(%374) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(390), bool], Tensor[(5, 78), bool], Tensor[(11, 2, 9), int8], Tensor[(672), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %376 = cast(%var_14835, dtype="float32") /* ty=Tensor[(1, 390), float32] */;
    %377 = %372.0;
    %378 = %375.0;
    %379 = acos(%376) /* ty=Tensor[(1, 390), float32] */;
    %380 = @func_3338() /* ty=Tensor[(11, 2, 9), int8] */;
    (%377, %378, %379, %380)
  };
  %381(%var_14854) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(1, 390), float32], Tensor[(11, 2, 9), int8]) */
}

def @func_14610() -> Tensor[(11, 2, 9), int8] {
  @func_14608() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_15120() -> (Tensor[(11, 2, 9), int8],) {
  %384 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %382 = @func_5266() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %383 = %382.0;
    (%383,)
  };
  %384() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_4757() -> Tensor[(11, 2, 9), int8] {
  @func_4755() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_873() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %385 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
  %386 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
  (%385, %386)
}

def @func_1088() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %389 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %387 = @func_922() /* ty=Tensor[(11, 2, 9), int8] */;
    %388 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
    (%387, %388)
  };
  %389() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_3101() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) {
  %396 = fn () -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) {
    %390 = @func_1974() /* ty=Tensor[(11, 2, 9), float64] */;
    %391 = cast(%390, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
    %392 = reshape(%391, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
    %393 = @func_605(%392) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
    %394 = %393.0;
    %395 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
    (%390, %394, %395)
  };
  %396() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */
}

def @func_10019(%var_10017: Tensor[(5, 9, 8), float64]) -> (Tensor[(5, 9, 8), bool], Tensor[(11, 2, 9), int8]) {
  @func_10016(%var_10017) /* ty=(Tensor[(5, 9, 8), bool], Tensor[(11, 2, 9), int8]) */
}

def @func_6412() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) {
  %397 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %398 = @func_1780() /* ty=(Tensor[(11, 2, 9), float32],) */;
  %399 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %400 = %397.0;
  %401 = %398.0;
  %402 = %399.0;
  (%400, %401, %402)
}

def @func_5584() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_13314(%var_13307: uint16) -> (Tensor[(11, 2, 9), int8], Tensor[(16, 14, 10), bool], uint16) {
  %403 = cast(%var_13307, dtype="uint16") /* ty=uint16 */;
  %404 = reshape(%403, newshape=[]) /* ty=uint16 */;
  %405 = @func_11560(%404) /* ty=(Tensor[(16, 14, 10), uint16], Tensor[(12, 2, 8), float32], Tensor[(16, 14, 10), bool]) */;
  %406 = @func_4951() /* ty=Tensor[(11, 2, 9), int8] */;
  %407 = %405.2;
  (%406, %407, %var_13307)
}

def @func_5750() -> Tensor[(11, 2, 9), uint16] {
  %408 = @func_786() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %409 = %408.0;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
  %411 = log2(%410) /* ty=Tensor[(11, 2, 9), float64] */;
  %412 = cast(%409, dtype="uint16") /* ty=Tensor[(11, 2, 9), uint16] */;
  %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%411, dtype="uint16") /* ty=Tensor[(11, 2, 9), uint16] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%414, %415) /* ty=Tensor[(11, 2, 9), uint16] */
}

def @func_2831(%var_2772: Tensor[(6, 7, 16), float64], %var_2773: Tensor[(6, 7, 16), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(6, 7, 16), float32], Tensor[(11, 2, 9), float64]) {
  %416 = @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %417 = cast(%var_2773, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %418 = shape_of(%var_2772, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%var_2772, dtype="float64") /* ty=Tensor[(6, 7, 16), float64] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %421 = multiply(%419, %420) /* ty=Tensor[(6, 7, 16), float64] */;
  %422 = cast(%421, dtype="bool") /* ty=Tensor[(6, 7, 16), bool] */;
  %423 = shape_of(%var_2773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%var_2773, dtype="bool") /* ty=Tensor[(6, 7, 16), bool] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %426 = cast(%var_2772, dtype="float32") /* ty=Tensor[(6, 7, 16), float32] */;
  %427 = cos(%426) /* ty=Tensor[(6, 7, 16), float32] */;
  %428 = cast(%427, dtype="float32") /* ty=Tensor[(6, 7, 16), float32] */;
  %429 = @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %430 = %429.0;
  %431 = cast(%430, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
  %432 = %416.0;
  %433 = logical_and(%424, %425) /* ty=Tensor[(6, 7, 16), bool] */;
  %434 = log(%428) /* ty=Tensor[(6, 7, 16), float32] */;
  %435 = acos(%431) /* ty=Tensor[(11, 2, 9), float64] */;
  (%432, %433, %434, %435)
}

def @func_7651(%var_7613: Tensor[(12, 2, 8), float32]) -> (Tensor[(12, 2, 8), float32], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(99, 2), int8]) {
  %436 = @func_4604() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32]) */;
  %437 = %436.1;
  %438 = cast(%var_7613, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %439 = shape_of(%437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %440 = cast(%437, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %442 = cast(%437, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %443 = cast(meta[relay.Constant][10] /* ty=Tensor[(99, 2), int8] */, dtype="int8") /* ty=Tensor[(99, 2), int8] */;
  %444 = reshape(%443, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %445 = @func_605(%444) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %446 = minimum(%440, %441) /* ty=Tensor[(12, 2, 8), float32] */;
  %447 = log(%442) /* ty=Tensor[(12, 2, 8), float32] */;
  %448 = %445.1;
  (%446, %447, %448, meta[relay.Constant][10] /* ty=Tensor[(99, 2), int8] */)
}

def @func_11958() -> (Tensor[(11, 2, 9), float32], Tensor[(260), float64]) {
  %449 = @func_4560() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %450 = %449.1;
  %451 = @func_10433() /* ty=Tensor[(260), float64] */;
  (%450, %451)
}

def @func_14097(%var_14067: Tensor[(48), float64]) -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(130, 2), uint16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(48), float64]) {
  %452 = @func_3171() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) */;
  %453 = @func_6798() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %454 = cast(meta[relay.Constant][11] /* ty=Tensor[(130, 2), uint16] */, dtype="uint16") /* ty=Tensor[(130, 2), uint16] */;
  %455 = cast(meta[relay.Constant][11] /* ty=Tensor[(130, 2), uint16] */, dtype="uint16") /* ty=Tensor[(130, 2), uint16] */;
  %456 = reshape(%454, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), uint16] */;
  %457 = reshape(%455, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), uint16] */;
  %458 = @func_1650() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %459 = cast(%var_14067, dtype="float64") /* ty=Tensor[(48), float64] */;
  %460 = reshape(%459, newshape=[4, 12]) /* ty=Tensor[(4, 12), float64] */;
  %461 = @func_7309(%460) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) */;
  %462 = %452.0;
  %463 = %453.0;
  %464 = @func_739(%456, %457) /* ty=Tensor[(13, 4, 5), bool] */;
  %465 = %458.0;
  %466 = @func_9924() /* ty=Tensor[(11, 2, 9), int8] */;
  %467 = %461.0;
  (%462, %463, %464, meta[relay.Constant][11] /* ty=Tensor[(130, 2), uint16] */, %465, %466, %467, %var_14067)
}

def @func_7118() -> Tensor[(11, 2, 9), int8] {
  @func_3338() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_11444() -> (Tensor[(11, 2, 9), int64], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) {
  @func_11442() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */
}

def @func_6121() -> Tensor[(11, 2, 9), int8] {
  @func_6119() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_10063() -> (Tensor[(7, 5, 11), float64],) {
  @func_10061() /* ty=(Tensor[(7, 5, 11), float64],) */
}

def @func_9511() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) {
  %474 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) {
    %468 = @func_8765() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %469 = @func_8417() /* ty=(Tensor[(11, 2, 9), int64],) */;
    %470 = @func_8037() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7, 1), uint8]) */;
    %471 = %468.0;
    %472 = %469.0;
    %473 = %470.0;
    (%471, %472, %473)
  };
  %474() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) */
}

def @func_2666() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_2664() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_771() -> Tensor[(11, 2, 9), int8] {
  @func_458() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_728() -> (Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) {
  %475 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %476 = %475.0;
  %477 = cast(%476, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %478 = reshape(%477, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %479 = @func_235(%478) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */;
  %480 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %481 = %479.0;
  %482 = %480.0;
  (%476, %481, %482)
}

def @func_13279() -> (Tensor[(11, 2, 9), int8],) {
  %483 = @func_8765() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %484 = %483.0;
  (%484,)
}

def @func_11048() -> (Tensor[(11, 2, 9), bool], Tensor[(12, 2, 8), float32]) {
  %485 = @func_3100() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %486 = %485.1;
  %487 = @func_10916() /* ty=Tensor[(12, 2, 8), float32] */;
  (%486, %487)
}

def @func_2013() -> (Tensor[(11, 2, 9), int8],) {
  %488 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %489 = %488.0;
  (%489,)
}

def @func_8938() -> (Tensor[(11, 2, 9), int8],) {
  @func_8936() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_6767() -> Tensor[(11, 2, 9), int8] {
  %491 = fn () -> Tensor[(11, 2, 9), int8] {
    %490 = @func_5534() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %490.0
  };
  %491() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_10564() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) {
  %498 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) {
    %492 = @func_9702() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) */;
    %493 = %492.1;
    %494 = cast(%493, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
    %495 = reshape(%494, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
    %496 = @func_235(%495) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */;
    %497 = %496.1;
    (%493, %497)
  };
  %498() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) */
}

def @func_13524() -> Tensor[(11, 2, 9), int8] {
  @func_13522() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_15237(%var_15207: Tensor[(7, 5, 11), float64], %var_15226: Tensor[(7, 5, 11), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64], Tensor[(7, 5, 11), uint32], Tensor[(7, 5, 11), float64], Tensor[(7, 5, 11), bool]) {
  %499 = @func_10061() /* ty=(Tensor[(7, 5, 11), float64],) */;
  %500 = %499.0;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %502 = sin(%501) /* ty=Tensor[(7, 5, 11), float64] */;
  %503 = cast(%var_15207, dtype="uint32") /* ty=Tensor[(7, 5, 11), uint32] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%502, dtype="uint32") /* ty=Tensor[(7, 5, 11), uint32] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %507 = cast(%500, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %508 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%502, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %511 = cast(%var_15226, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %512 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %513 = cast(%502, dtype="bool") /* ty=Tensor[(7, 5, 11), bool] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %515 = @func_14755() /* ty=Tensor[(11, 2, 9), int8] */;
  %516 = @func_11056() /* ty=Tensor[(11, 2, 9), float32] */;
  %517 = @func_11056() /* ty=Tensor[(11, 2, 9), float32] */;
  %518 = @func_14937() /* ty=Tensor[(11, 2, 9), int8] */;
  %519 = @func_8294() /* ty=Tensor[(11, 2, 9), int64] */;
  %520 = maximum(%505, %506) /* ty=Tensor[(7, 5, 11), uint32] */;
  %521 = floor_divide(%509, %510) /* ty=Tensor[(7, 5, 11), float64] */;
  %522 = greater(%513, %514) /* ty=Tensor[(7, 5, 11), bool] */;
  (%515, %516, %517, %518, %519, %520, %521, %522)
}

def @func_8265() -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) {
  %529 = fn () -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) {
    %523 = @func_5107() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */;
    %524 = @func_4250() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) */;
    %525 = @func_5340() /* ty=Tensor[(11, 2, 9), float32] */;
    %526 = @func_458() /* ty=Tensor[(11, 2, 9), int8] */;
    %527 = %523.0;
    %528 = %524.0;
    (%525, %526, %527, %528)
  };
  %529() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */
}

def @func_13806() -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) {
  %534 = fn () -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) {
    %530 = @func_12523() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
    %531 = @func_12146() /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %532 = %530.0;
    %533 = %531.2;
    (%532, %533)
  };
  %534() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */
}

def @func_1508() -> (Tensor[(11, 2, 9), int8],) {
  %537 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %535 = @func_1087() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %536 = %535.0;
    (%536,)
  };
  %537() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_13270() -> (Tensor[(11, 2, 9), int64],) {
  %540 = fn () -> (Tensor[(11, 2, 9), int64],) {
    %538 = @func_10811() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) */;
    %539 = %538.0;
    (%539,)
  };
  %540() /* ty=(Tensor[(11, 2, 9), int64],) */
}

def @func_6636(%var_6607: int16, %var_6608: Tensor[(13, 12, 4), int16]) -> (Tensor[(13, 12, 4), int16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %541 = cast(%var_6607, dtype="int16") /* ty=int16 */;
  %542 = cast(%var_6608, dtype="int16") /* ty=Tensor[(13, 12, 4), int16] */;
  %543 = @func_5227() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) */;
  %544 = @func_1322() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %545 = bitwise_xor(%541, %542) /* ty=Tensor[(13, 12, 4), int16] */;
  %546 = %543.0;
  %547 = %544.0;
  (%545, %546, %547)
}

def @func_9414(%var_9404: uint32, %var_9405: Tensor[(5, 9, 4), uint32]) -> Tensor[(5, 9, 4), bool] {
  %548 = cast(%var_9404, dtype="bool") /* ty=bool */;
  %549 = cast(%var_9405, dtype="bool") /* ty=Tensor[(5, 9, 4), bool] */;
  not_equal(%548, %549) /* ty=Tensor[(5, 9, 4), bool] */
}

def @func_4705() -> (Tensor[(11, 2, 9), int8],) {
  @func_4703() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_4049() -> (Tensor[(260), float64], Tensor[(11, 2, 9), int8]) {
  %550 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %551 = @func_2139() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %552 = %550.2;
  %553 = %551.0;
  (%552, %553)
}

def @func_13317(%var_13315: uint16) -> (Tensor[(11, 2, 9), int8], Tensor[(16, 14, 10), bool], uint16) {
  @func_13314(%var_13315) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(16, 14, 10), bool], uint16) */
}

def @func_11050() -> (Tensor[(11, 2, 9), bool], Tensor[(12, 2, 8), float32]) {
  @func_11048() /* ty=(Tensor[(11, 2, 9), bool], Tensor[(12, 2, 8), float32]) */
}

def @func_974() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  @func_972() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */
}

def @func_11771() -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %564 = fn () -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %554 = @func_9982() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), float64]) */;
    %555 = %554.0;
    %556 = cast(%555, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
    %557 = @func_2507() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), uint64]) */;
    %558 = @func_4776() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %559 = @func_10644() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %560 = acos(%556) /* ty=Tensor[(12, 2, 8), float32] */;
    %561 = %557.1;
    %562 = %558.0;
    %563 = %559.0;
    (%560, %561, %562, %563)
  };
  %564() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_8761(%var_8759: Tensor[(7, 11, 5), float32], %var_8760: Tensor[(7, 11, 5), float32]) -> (Tensor[(7, 11, 5), float32], Tensor[(11, 2, 9), float32]) {
  %572 = fn (%var_8737: Tensor[(7, 11, 5), float32], %var_8738: Tensor[(7, 11, 5), float32]) -> (Tensor[(7, 11, 5), float32], Tensor[(11, 2, 9), float32]) {
    %565 = cast(%var_8738, dtype="float32") /* ty=Tensor[(7, 11, 5), float32] */;
    %566 = shape_of(%var_8737, dtype="int32") /* ty=Tensor[(3), int32] */;
    %567 = cast(%var_8737, dtype="float32") /* ty=Tensor[(7, 11, 5), float32] */;
    %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %569 = @func_8537() /* ty=(Tensor[(11, 2, 9), float32],) */;
    %570 = floor_mod(%567, %568) /* ty=Tensor[(7, 11, 5), float32] */;
    %571 = %569.0;
    (%570, %571)
  };
  %572(%var_8759, %var_8760) /* ty=(Tensor[(7, 11, 5), float32], Tensor[(11, 2, 9), float32]) */
}

def @func_14626() -> Tensor[(11, 2, 9), int8] {
  %573 = fn () -> Tensor[(11, 2, 9), int8] {
    @func_9771() /* ty=Tensor[(11, 2, 9), int8] */
  };
  %573() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_7866() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %577 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %574 = @func_6412() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */;
    %575 = @func_4755() /* ty=Tensor[(11, 2, 9), int8] */;
    %576 = %574.0;
    (%575, %576)
  };
  %577() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_1556(%var_1554: Tensor[(10, 1, 2), float64], %var_1555: Tensor[(3, 66), int8]) -> (Tensor[(10, 5, 2), float64], Tensor[(11, 2, 9), float64]) {
  %590 = fn (%var_1522: Tensor[(10, 1, 2), float64], %var_1533: Tensor[(3, 66), int8]) -> (Tensor[(10, 5, 2), float64], Tensor[(11, 2, 9), float64]) {
    %578 = cast(%var_1522, dtype="float64") /* ty=Tensor[(10, 1, 2), float64] */;
    %579 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 5, 2), float64] */, dtype="float64") /* ty=Tensor[(10, 5, 2), float64] */;
    %580 = cast(%var_1533, dtype="int8") /* ty=Tensor[(3, 66), int8] */;
    %581 = reshape(%580, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
    %582 = @func_605(%581) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
    %583 = %582.1;
    %584 = cast(%var_1533, dtype="float64") /* ty=Tensor[(3, 66), float64] */;
    %585 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
    %586 = cast(%583, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
    %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %588 = floor_mod(%578, %579) /* ty=Tensor[(10, 5, 2), float64] */;
    %589 = floor_divide(%586, %587) /* ty=Tensor[(11, 2, 9), float64] */;
    (%588, %589)
  };
  %590(%var_1554, %var_1555) /* ty=(Tensor[(10, 5, 2), float64], Tensor[(11, 2, 9), float64]) */
}

def @func_8967(%var_8965: Tensor[(7), uint8], %var_8966: Tensor[(624), int16]) -> (Tensor[(11, 2, 9), int8], Tensor[(624), int16], uint8, Tensor[(7), uint8], Tensor[(624), int16]) {
  @func_8963(%var_8965, %var_8966) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(624), int16], uint8, Tensor[(7), uint8], Tensor[(624), int16]) */
}

def @func_5881() -> Tensor[(11, 2, 9), int8] {
  @func_5879() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_608(%var_606: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) {
  @func_605(%var_606) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */
}

def @func_9835(%var_9829: int8) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(14, 1, 3), int8], int8, Tensor[(42), int8]) {
  %591 = @func_1650() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %592 = @func_5150() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %593 = cast(%var_9829, dtype="int8") /* ty=int8 */;
  %594 = cast(meta[relay.Constant][13] /* ty=Tensor[(42), int8] */, dtype="int8") /* ty=Tensor[(42), int8] */;
  %595 = reshape(%593, newshape=[]) /* ty=int8 */;
  %596 = reshape(%594, newshape=[14, 1, 3]) /* ty=Tensor[(14, 1, 3), int8] */;
  %597 = @func_6079(%595, %596) /* ty=(Tensor[(14, 1, 3), int8], Tensor[(11, 2, 9), int8]) */;
  %598 = %591.0;
  %599 = %592.3;
  %600 = %597.0;
  (%598, %599, %600, %var_9829, meta[relay.Constant][13] /* ty=Tensor[(42), int8] */)
}

def @func_6305() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %607 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %601 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %602 = @func_972() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
    %603 = @func_6188() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(672), float64], Tensor[(11, 2, 9), int8]) */;
    %604 = %601.0;
    %605 = %602.0;
    %606 = %603.1;
    (%604, %605, %606)
  };
  %607() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_10918() -> Tensor[(12, 2, 8), float32] {
  @func_10916() /* ty=Tensor[(12, 2, 8), float32] */
}

def @func_14457(%var_14443: Tensor[(700), float64], %var_14448: Tensor[(10, 5, 14), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(700), float64], Tensor[(10, 5, 14), float64]) {
  %608 = @func_1933() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %609 = cast(%var_14443, dtype="float64") /* ty=Tensor[(700), float64] */;
  %610 = reshape(%609, newshape=[10, 5, 14]) /* ty=Tensor[(10, 5, 14), float64] */;
  %611 = @func_11332(%610) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(11, 2, 9), int8]) */;
  %612 = %611.0;
  %613 = cast(%var_14448, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %614 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%612, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %617 = %608.0;
  %618 = mod(%615, %616) /* ty=Tensor[(10, 5, 14), float64] */;
  (%617, %var_14443, %618)
}

def @func_311() -> (Tensor[(11, 2, 9), int8],) {
  %620 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %619 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
    (%619,)
  };
  %620() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_11372() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %624 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %621 = @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %622 = @func_3203() /* ty=Tensor[(11, 2, 9), int8] */;
    %623 = %621.1;
    (%622, %623)
  };
  %624() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_14939() -> Tensor[(11, 2, 9), int8] {
  @func_14937() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_3475() -> Tensor[(11, 2, 9), int8] {
  %625 = @func_1957() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %625.0
}

def @func_9011() -> Tensor[(11, 2, 9), float32] {
  @func_9009() /* ty=Tensor[(11, 2, 9), float32] */
}

def @func_5267() -> (Tensor[(11, 2, 9), int8],) {
  %627 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %626 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
    (%626,)
  };
  %627() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_12660() -> (Tensor[(12, 2, 8), float32],) {
  @func_12658() /* ty=(Tensor[(12, 2, 8), float32],) */
}

def @func_4441() -> Tensor[(260), float64] {
  %629 = fn () -> Tensor[(260), float64] {
    %628 = @func_4049() /* ty=(Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
    %628.0
  };
  %629() /* ty=Tensor[(260), float64] */
}

def @func_5879() -> Tensor[(11, 2, 9), int8] {
  %630 = @func_4703() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %630.0
}

def @func_4183() -> Tensor[(11, 2, 9), int8] {
  @func_4181() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_3318(%var_3232: Tensor[(9, 6, 14), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(9, 6, 14), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float32]) {
  %631 = @func_2664() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %632 = cast(%var_3232, dtype="float64") /* ty=Tensor[(9, 6, 14), float64] */;
  %633 = tan(%632) /* ty=Tensor[(9, 6, 14), float64] */;
  %634 = cast(%633, dtype="float32") /* ty=Tensor[(9, 6, 14), float32] */;
  %635 = %631.0;
  %636 = cast(%635, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %637 = reshape(%636, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %638 = @func_1478(%637) /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), uint8], Tensor[(11, 2, 9), int8]) */;
  %639 = @func_3030() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %640 = atanh(%634) /* ty=Tensor[(9, 6, 14), float32] */;
  %641 = %638.0;
  %642 = %639.1;
  (%635, %640, %641, %642)
}

def @func_13073() -> (Tensor[(12, 2, 8), uint8], Tensor[(12, 2, 8), float64], Tensor[(11, 2, 9), int8]) {
  @func_13071() /* ty=(Tensor[(12, 2, 8), uint8], Tensor[(12, 2, 8), float64], Tensor[(11, 2, 9), int8]) */
}

def @func_2192(%var_2189: Tensor[(15, 16, 11), int32], %var_2190: Tensor[(15, 16, 11), int32], %var_2191: Tensor[(20), float64]) -> (Tensor[(15, 16, 11), int32], Tensor[(10, 5, 2), float64], Tensor[(20), float64], Tensor[(198), int8]) {
  %654 = fn (%var_2176: Tensor[(15, 16, 11), int32], %var_2177: Tensor[(15, 16, 11), int32], %var_2184: Tensor[(20), float64]) -> (Tensor[(15, 16, 11), int32], Tensor[(10, 5, 2), float64], Tensor[(20), float64], Tensor[(198), int8]) {
    %643 = cast(%var_2177, dtype="int32") /* ty=Tensor[(15, 16, 11), int32] */;
    %644 = shape_of(%var_2176, dtype="int32") /* ty=Tensor[(3), int32] */;
    %645 = cast(%var_2176, dtype="int32") /* ty=Tensor[(15, 16, 11), int32] */;
    %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %647 = cast(%var_2184, dtype="float64") /* ty=Tensor[(20), float64] */;
    %648 = cast(meta[relay.Constant][14] /* ty=Tensor[(198), int8] */, dtype="int8") /* ty=Tensor[(198), int8] */;
    %649 = reshape(%647, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), float64] */;
    %650 = reshape(%648, newshape=[3, 66]) /* ty=Tensor[(3, 66), int8] */;
    %651 = @func_1553(%649, %650) /* ty=(Tensor[(10, 5, 2), float64], Tensor[(11, 2, 9), float64]) */;
    %652 = add(%645, %646) /* ty=Tensor[(15, 16, 11), int32] */;
    %653 = %651.0;
    (%652, %653, %var_2184, meta[relay.Constant][14] /* ty=Tensor[(198), int8] */)
  };
  %654(%var_2189, %var_2190, %var_2191) /* ty=(Tensor[(15, 16, 11), int32], Tensor[(10, 5, 2), float64], Tensor[(20), float64], Tensor[(198), int8]) */
}

def @func_8196() -> (Tensor[(11, 2, 9), int8],) {
  @func_8194() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_7245(%var_7220: Tensor[(2, 5, 6), float32]) -> (Tensor[(2, 5, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(12, 2, 8), float32]) {
  %655 = cast(%var_7220, dtype="float32") /* ty=Tensor[(2, 5, 6), float32] */;
  %656 = @func_3171() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) */;
  %657 = @func_4892() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %658 = asin(%655) /* ty=Tensor[(2, 5, 6), float32] */;
  %659 = %656.1;
  %660 = %657.0;
  (%658, %659, %660)
}

def @func_13739() -> (Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %665 = fn () -> (Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %661 = @func_3944() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %662 = @func_8294() /* ty=Tensor[(11, 2, 9), int64] */;
    %663 = %661.0;
    %664 = @func_13508() /* ty=Tensor[(11, 2, 9), int8] */;
    (%662, %663, %664)
  };
  %665() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_10195() -> Tensor[(11, 2, 9), int8] {
  %666 = @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %666.0
}

def @func_8127() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %671 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %667 = @func_4560() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
    %668 = %667.0;
    %669 = @func_7118() /* ty=Tensor[(11, 2, 9), int8] */;
    %670 = @func_1669() /* ty=Tensor[(11, 2, 9), int8] */;
    (%668, %669, %670)
  };
  %671() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_7107() -> (Tensor[(11, 2, 9), int8],) {
  %672 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  (%672,)
}

def @func_11028() -> Tensor[(11, 2, 9), int8] {
  %674 = fn () -> Tensor[(11, 2, 9), int8] {
    %673 = @func_3030() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
    %673.0
  };
  %674() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_10625(%var_10622: Tensor[(5, 16, 11), float32], %var_10623: uint8, %var_10624: Tensor[(7), uint8]) -> (Tensor[(5, 16, 11), float32], Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7), uint8], Tensor[(624), int16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_10620(%var_10622, %var_10623, %var_10624) /* ty=(Tensor[(5, 16, 11), float32], Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7), uint8], Tensor[(624), int16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_5668() -> Tensor[(11, 2, 9), int8] {
  %675 = @func_5266() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %675.0
}

def @func_7939() -> Tensor[(11, 2, 9), int8] {
  @func_7937() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_7248(%var_7246: Tensor[(2, 5, 6), float32]) -> (Tensor[(2, 5, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(12, 2, 8), float32]) {
  @func_7245(%var_7246) /* ty=(Tensor[(2, 5, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(12, 2, 8), float32]) */
}

def @func_13522() -> Tensor[(11, 2, 9), int8] {
  %676 = @func_8126() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %676.1
}

def @func_8765() -> (Tensor[(11, 2, 9), int8],) {
  %677 = @func_6798() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %678 = %677.0;
  (%678,)
}

def @func_458() -> Tensor[(11, 2, 9), int8] {
  %679 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %679.0
}

def @func_5582() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %680 = @func_5534() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %681 = %680.0;
  %682 = @func_3475() /* ty=Tensor[(11, 2, 9), int8] */;
  (%681, %682)
}

def @func_8395() -> Tensor[(11, 2, 9), float32] {
  @func_5340() /* ty=Tensor[(11, 2, 9), float32] */
}

def @func_8936() -> (Tensor[(11, 2, 9), int8],) {
  %683 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
  (%683,)
}

def @func_13630() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) {
  %689 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) {
    %684 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %685 = @func_12523() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
    %686 = %684.0;
    %687 = @func_11056() /* ty=Tensor[(11, 2, 9), float32] */;
    %688 = %685.2;
    (%686, %687, %688)
  };
  %689() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */
}

def @func_10858() -> Tensor[(11, 2, 9), int8] {
  %691 = fn () -> Tensor[(11, 2, 9), int8] {
    %690 = @func_5534() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %690.0
  };
  %691() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_3937(%var_3935: Tensor[(756), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), float32], Tensor[(756), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_3934(%var_3935) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), float32], Tensor[(756), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_8194() -> (Tensor[(11, 2, 9), int8],) {
  %692 = @func_4250() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) */;
  %693 = %692.0;
  (%693,)
}

def @func_8164(%var_8147: Tensor[(14, 10, 8), float32]) -> Tensor[(14, 10, 8), float32] {
  %694 = cast(%var_8147, dtype="float32") /* ty=Tensor[(14, 10, 8), float32] */;
  atan(%694) /* ty=Tensor[(14, 10, 8), float32] */
}

def @func_460() -> Tensor[(11, 2, 9), int8] {
  @func_458() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_5975(%var_5973: uint8, %var_5974: Tensor[(7, 1), uint8]) -> (Tensor[(7, 1), uint8],) {
  %698 = fn (%var_5967: uint8, %var_5968: Tensor[(7, 1), uint8]) -> (Tensor[(7, 1), uint8],) {
    %695 = cast(%var_5967, dtype="uint8") /* ty=uint8 */;
    %696 = cast(%var_5968, dtype="uint8") /* ty=Tensor[(7, 1), uint8] */;
    %697 = subtract(%695, %696) /* ty=Tensor[(7, 1), uint8] */;
    (%697,)
  };
  %698(%var_5973, %var_5974) /* ty=(Tensor[(7, 1), uint8],) */
}

def @func_11730() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) {
  %699 = @func_2507() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), uint64]) */;
  %700 = @func_4962() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64]) */;
  %701 = @func_1087() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %702 = %701.1;
  %703 = cast(%702, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %704 = reshape(%703, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %705 = @func_7812(%704) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %706 = %699.3;
  %707 = %700.0;
  %708 = %705.0;
  (%706, %707, %702, %708)
}

def @func_8963(%var_8958: Tensor[(7), uint8], %var_8959: Tensor[(624), int16]) -> (Tensor[(11, 2, 9), int8], Tensor[(624), int16], uint8, Tensor[(7), uint8], Tensor[(624), int16]) {
  %709 = @func_1957() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %710 = cast(meta[relay.Constant][15] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %711 = cast(%var_8958, dtype="uint8") /* ty=Tensor[(7), uint8] */;
  %712 = cast(%var_8959, dtype="int16") /* ty=Tensor[(624), int16] */;
  %713 = reshape(%710, newshape=[]) /* ty=uint8 */;
  %714 = reshape(%711, newshape=[7]) /* ty=Tensor[(7), uint8] */;
  %715 = reshape(%712, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %716 = @func_7492(%713, %714, %715) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7), uint8], Tensor[(11, 2, 9), int8], Tensor[(624), int16]) */;
  %717 = %709.0;
  %718 = %716.5;
  (%717, %718, meta[relay.Constant][15] /* ty=uint8 */, %var_8958, %var_8959)
}

def @func_6504() -> Tensor[(11, 2, 9), int8] {
  %720 = fn () -> Tensor[(11, 2, 9), int8] {
    %719 = @func_5383() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %719.0
  };
  %720() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_4953() -> Tensor[(11, 2, 9), int8] {
  @func_4951() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_7120() -> Tensor[(11, 2, 9), int8] {
  @func_7118() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_9418(%var_9416: uint32, %var_9417: Tensor[(5, 9, 4), uint32]) -> Tensor[(5, 9, 4), bool] {
  @func_9414(%var_9416, %var_9417) /* ty=Tensor[(5, 9, 4), bool] */
}

def @func_12182(%var_12181: Tensor[(6, 6, 10), float64]) -> (Tensor[(6, 6, 10), float64], Tensor[(6, 6, 10), float32]) {
  %725 = fn (%var_12173: Tensor[(6, 6, 10), float64]) -> (Tensor[(6, 6, 10), float64], Tensor[(6, 6, 10), float32]) {
    %721 = cast(%var_12173, dtype="float64") /* ty=Tensor[(6, 6, 10), float64] */;
    %722 = cast(%var_12173, dtype="float32") /* ty=Tensor[(6, 6, 10), float32] */;
    %723 = asin(%721) /* ty=Tensor[(6, 6, 10), float64] */;
    %724 = cosh(%722) /* ty=Tensor[(6, 6, 10), float32] */;
    (%723, %724)
  };
  %725(%var_12181) /* ty=(Tensor[(6, 6, 10), float64], Tensor[(6, 6, 10), float32]) */
}

def @func_645() -> (Tensor[(11, 2, 9), int8],) {
  %727 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %726 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
    (%726,)
  };
  %727() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_9773() -> Tensor[(11, 2, 9), int8] {
  @func_9771() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_2507() -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), uint64]) {
  %728 = @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %729 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %730 = @func_1974() /* ty=Tensor[(11, 2, 9), float64] */;
  %731 = cast(%730, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %732 = reshape(%731, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %733 = @func_1293(%732) /* ty=(Tensor[(11, 2, 9), uint64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %734 = %728.1;
  %735 = @func_1974() /* ty=Tensor[(11, 2, 9), float64] */;
  %736 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  %737 = %729.1;
  %738 = %733.0;
  (%734, %735, %736, %730, %737, %738)
}

def @func_3934(%var_3899: Tensor[(756), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), float32], Tensor[(756), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %739 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %740 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %741 = %740.0;
  %742 = cast(%741, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
  %743 = cast(%var_3899, dtype="float64") /* ty=Tensor[(756), float64] */;
  %744 = reshape(%743, newshape=[9, 6, 14]) /* ty=Tensor[(9, 6, 14), float64] */;
  %745 = @func_3318(%744) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(9, 6, 14), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float32]) */;
  %746 = @func_2762() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %747 = %739.0;
  %748 = rsqrt(%742) /* ty=Tensor[(11, 2, 9), float64] */;
  %749 = %745.2;
  %750 = @func_3338() /* ty=Tensor[(11, 2, 9), int8] */;
  %751 = %746.0;
  (%747, %748, %749, %var_3899, %750, %751)
}

def @func_5495() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) {
  @func_5493() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */
}

def @func_923() -> Tensor[(11, 2, 9), int8] {
  %753 = fn () -> Tensor[(11, 2, 9), int8] {
    %752 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %752.0
  };
  %753() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_3543(%var_3542: Tensor[(260), float64]) -> (Tensor[(260), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %767 = fn (%var_3491: Tensor[(260), float64]) -> (Tensor[(260), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %754 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
    %755 = %754.2;
    %756 = cast(%var_3491, dtype="float32") /* ty=Tensor[(260), float32] */;
    %757 = shape_of(%755, dtype="int32") /* ty=Tensor[(1), int32] */;
    %758 = cast(%755, dtype="float32") /* ty=Tensor[(260), float32] */;
    %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?), float32] */;
    %760 = @func_1780() /* ty=(Tensor[(11, 2, 9), float32],) */;
    %761 = @func_972() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
    %762 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %763 = power(%758, %759) /* ty=Tensor[(260), float32] */;
    %764 = %760.0;
    %765 = %761.0;
    %766 = %762.1;
    (%763, %764, %765, %766)
  };
  %767(%var_3542) /* ty=(Tensor[(260), float32], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_5775(%var_5773: Tensor[(12, 5, 15), float32]) -> (Tensor[(12, 5, 15), float32],) {
  @func_5772(%var_5773) /* ty=(Tensor[(12, 5, 15), float32],) */
}

def @func_11932() -> (Tensor[(260), float64],) {
  %770 = fn () -> (Tensor[(260), float64],) {
    %768 = @func_6600() /* ty=(Tensor[(260), float64],) */;
    %769 = %768.0;
    (%769,)
  };
  %770() /* ty=(Tensor[(260), float64],) */
}

def @func_5772(%var_5769: Tensor[(12, 5, 15), float32]) -> (Tensor[(12, 5, 15), float32],) {
  %771 = cast(%var_5769, dtype="float32") /* ty=Tensor[(12, 5, 15), float32] */;
  %772 = log(%771) /* ty=Tensor[(12, 5, 15), float32] */;
  (%772,)
}

def @func_4252() -> (Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) {
  @func_4250() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) */
}

def @func_12192() -> (Tensor[(11, 2, 9), int8],) {
  %774 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %773 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
    (%773,)
  };
  %774() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_2140() -> (Tensor[(11, 2, 9), int8],) {
  %777 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %775 = @func_1957() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %776 = %775.0;
    (%776,)
  };
  %777() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_7425(%var_7388: Tensor[(672), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(672), float64]) {
  %778 = @func_1087() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %779 = @func_2664() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %780 = @func_3030() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %781 = cast(%var_7388, dtype="float64") /* ty=Tensor[(672), float64] */;
  %782 = cast(%var_7388, dtype="float64") /* ty=Tensor[(672), float64] */;
  %783 = reshape(%781, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float64] */;
  %784 = reshape(%782, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float64] */;
  %785 = @func_2831(%783, %784) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(6, 7, 16), float32], Tensor[(11, 2, 9), float64]) */;
  %786 = %778.1;
  %787 = %779.1;
  %788 = %780.0;
  %789 = @func_5879() /* ty=Tensor[(11, 2, 9), int8] */;
  %790 = %785.1;
  (%786, %787, %788, %789, %790, %var_7388)
}

def @func_5534() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %791 = @func_1957() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %792 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %793 = %791.1;
  %794 = %792.0;
  (%793, %794)
}

def @func_8611() -> (Tensor[(11, 2, 9), int8],) {
  %795 = @func_3030() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %796 = %795.0;
  (%796,)
}

def @func_8907() -> (Tensor[(11, 2, 9), int8],) {
  @func_8905() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_13071() -> (Tensor[(12, 2, 8), uint8], Tensor[(12, 2, 8), float64], Tensor[(11, 2, 9), int8]) {
  %797 = @func_3814() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(12, 2, 8), float32]) */;
  %798 = %797.1;
  %799 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 2, 8), float32] */, dtype="uint8") /* ty=Tensor[(12, 2, 8), uint8] */;
  %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%798, dtype="uint8") /* ty=Tensor[(12, 2, 8), uint8] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %803 = cast(%798, dtype="float64") /* ty=Tensor[(12, 2, 8), float64] */;
  %804 = @func_11390() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(260), uint16]) */;
  %805 = left_shift(%801, %802) /* ty=Tensor[(12, 2, 8), uint8] */;
  %806 = rsqrt(%803) /* ty=Tensor[(12, 2, 8), float64] */;
  %807 = %804.0;
  (%805, %806, %807)
}

def @func_13204(%var_13202: Tensor[(13, 15, 15), bool]) -> (Tensor[(11, 2, 9), int8], Tensor[(13, 15, 15), uint8]) {
  @func_13201(%var_13202) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(13, 15, 15), uint8]) */
}

def @func_8905() -> (Tensor[(11, 2, 9), int8],) {
  %808 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %809 = %808.0;
  (%809,)
}

def @func_13417() -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %810 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %811 = @func_2901() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %812 = @func_9653() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %813 = %810.1;
  %814 = %811.0;
  %815 = %812.0;
  (%813, %814, %815)
}

def @func_11960() -> (Tensor[(11, 2, 9), float32], Tensor[(260), float64]) {
  @func_11958() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(260), float64]) */
}

def @func_5670() -> Tensor[(11, 2, 9), int8] {
  @func_5668() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_9926() -> Tensor[(11, 2, 9), int8] {
  @func_9924() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_3815() -> (Tensor[(11, 2, 9), int64], Tensor[(12, 2, 8), float32]) {
  %822 = fn () -> (Tensor[(11, 2, 9), int64], Tensor[(12, 2, 8), float32]) {
    %816 = @func_1071() /* ty=(Tensor[(11, 2, 9), int64],) */;
    %817 = %816.0;
    %818 = cast(%817, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
    %819 = reshape(%818, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
    %820 = @func_235(%819) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */;
    %821 = %820.0;
    (%817, %821)
  };
  %822() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(12, 2, 8), float32]) */
}

def @func_4051() -> (Tensor[(260), float64], Tensor[(11, 2, 9), int8]) {
  @func_4049() /* ty=(Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */
}

def @func_10164(%var_10162: Tensor[(6, 6, 2), uint8], %var_10163: Tensor[(6, 6, 2), uint8]) -> (Tensor[(6, 6, 2), bool], Tensor[(260), float64], Tensor[(6, 6, 2), float32]) {
  %837 = fn (%var_10120: Tensor[(6, 6, 2), uint8], %var_10121: Tensor[(6, 6, 2), uint8]) -> (Tensor[(6, 6, 2), bool], Tensor[(260), float64], Tensor[(6, 6, 2), float32]) {
    %823 = cast(%var_10121, dtype="bool") /* ty=Tensor[(6, 6, 2), bool] */;
    %824 = shape_of(%var_10120, dtype="int32") /* ty=Tensor[(3), int32] */;
    %825 = cast(%var_10120, dtype="bool") /* ty=Tensor[(6, 6, 2), bool] */;
    %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %827 = @func_6960() /* ty=(Tensor[(260), float64],) */;
    %828 = cast(%var_10121, dtype="bool") /* ty=Tensor[(6, 6, 2), bool] */;
    %829 = shape_of(%var_10120, dtype="int32") /* ty=Tensor[(3), int32] */;
    %830 = cast(%var_10120, dtype="bool") /* ty=Tensor[(6, 6, 2), bool] */;
    %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %832 = greater(%830, %831) /* ty=Tensor[(6, 6, 2), bool] */;
    %833 = cast(%832, dtype="float32") /* ty=Tensor[(6, 6, 2), float32] */;
    %834 = logical_and(%825, %826) /* ty=Tensor[(6, 6, 2), bool] */;
    %835 = %827.0;
    %836 = tan(%833) /* ty=Tensor[(6, 6, 2), float32] */;
    (%834, %835, %836)
  };
  %837(%var_10162, %var_10163) /* ty=(Tensor[(6, 6, 2), bool], Tensor[(260), float64], Tensor[(6, 6, 2), float32]) */
}

def @func_2937() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %838 = @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %839 = %838.0;
  %840 = cast(%839, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %841 = reshape(%840, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %842 = @func_605(%841) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %843 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %844 = %842.1;
  %845 = %843.0;
  (%839, %844, %845)
}

def @func_12247(%var_12242: Tensor[(3, 6, 14), int32], %var_12243: Tensor[(3, 6, 14), int32]) -> Tensor[(3, 6, 14), bool] {
  %846 = cast(%var_12243, dtype="bool") /* ty=Tensor[(3, 6, 14), bool] */;
  %847 = shape_of(%var_12242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %848 = cast(%var_12242, dtype="bool") /* ty=Tensor[(3, 6, 14), bool] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%848, %849) /* ty=Tensor[(3, 6, 14), bool] */
}

def @func_2342() -> Tensor[(11, 2, 9), int8] {
  @func_2340() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_1935() -> (Tensor[(11, 2, 9), int8],) {
  @func_1933() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_6414() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) {
  @func_6412() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */
}

def @func_12866() -> (Tensor[(11, 2, 9), int8],) {
  %850 = @func_4560() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %851 = %850.0;
  (%851,)
}

def @func_9983() -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), float64]) {
  %856 = fn () -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), float64]) {
    %852 = @func_4892() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %853 = @func_1844() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32]) */;
    %854 = %852.0;
    %855 = %853.0;
    (%854, %855)
  };
  %856() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), float64]) */
}

def @func_4181() -> Tensor[(11, 2, 9), int8] {
  %857 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %857.2
}

def @func_14937() -> Tensor[(11, 2, 9), int8] {
  @func_3626() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_6717(%var_6716: Tensor[(390), bool]) -> (Tensor[(12, 2, 8), float32], Tensor[(198), int8], Tensor[(390), bool]) {
  %866 = fn (%var_6684: Tensor[(390), bool]) -> (Tensor[(12, 2, 8), float32], Tensor[(198), int8], Tensor[(390), bool]) {
    %858 = @func_3171() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) */;
    %859 = cast(%var_6684, dtype="bool") /* ty=Tensor[(390), bool] */;
    %860 = cast(%var_6684, dtype="bool") /* ty=Tensor[(390), bool] */;
    %861 = reshape(%859, newshape=[10, 3, 13]) /* ty=Tensor[(10, 3, 13), bool] */;
    %862 = reshape(%860, newshape=[10, 3, 13]) /* ty=Tensor[(10, 3, 13), bool] */;
    %863 = @func_4116(%861, %862) /* ty=(Tensor[(10, 3, 13), bool], Tensor[(11, 2, 9), bool], Tensor[(198), int8]) */;
    %864 = %858.1;
    %865 = %863.2;
    (%864, %865, %var_6684)
  };
  %866(%var_6716) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(198), int8], Tensor[(390), bool]) */
}

def @func_10401() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_10399() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_2901() -> (Tensor[(11, 2, 9), int8],) {
  %867 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %868 = %867.0;
  (%868,)
}

def @func_10082() -> Tensor[(11, 2, 9), int8] {
  %869 = @func_4892() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %869.1
}

def @func_124() -> Tensor[(11, 2, 9), int8] {
  %874 = fn () -> Tensor[(11, 2, 9), int8] {
    %870 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 2, 9), int8] */, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
    %871 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(11, 2, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %872 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 2, 9), int8] */, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
    %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_and(%872, %873) /* ty=Tensor[(11, 2, 9), int8] */
  };
  %874() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_13419() -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_13417() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_13509() -> Tensor[(11, 2, 9), int8] {
  %875 = fn () -> Tensor[(11, 2, 9), int8] {
    @func_6766() /* ty=Tensor[(11, 2, 9), int8] */
  };
  %875() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_9771() -> Tensor[(11, 2, 9), int8] {
  %876 = @func_7763() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %876.0
}

def @func_9704() -> (Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) {
  @func_9702() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(11, 2, 9), int8]) */
}

def @func_7763() -> (Tensor[(11, 2, 9), int8],) {
  %877 = @func_2013() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %878 = %877.0;
  (%878,)
}

def @func_1933() -> (Tensor[(11, 2, 9), int8],) {
  %879 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %880 = %879.1;
  (%880,)
}

def @func_15081() -> Tensor[(11, 2, 9), int8] {
  @func_15079() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_14100(%var_14098: Tensor[(48), float64]) -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(130, 2), uint16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(48), float64]) {
  @func_14097(%var_14098) /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(130, 2), uint16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(48), float64]) */
}

def @func_8539() -> (Tensor[(11, 2, 9), float32],) {
  @func_8537() /* ty=(Tensor[(11, 2, 9), float32],) */
}

def @func_10084() -> Tensor[(11, 2, 9), int8] {
  @func_10082() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_10061() -> (Tensor[(7, 5, 11), float64],) {
  %881 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 5, 11), float64] */, dtype="float64") /* ty=Tensor[(7, 5, 11), float64] */;
  %882 = cos(%881) /* ty=Tensor[(7, 5, 11), float64] */;
  (%882,)
}

def @func_5228() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) {
  %887 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) {
    %883 = @func_3814() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(12, 2, 8), float32]) */;
    %884 = @func_3338() /* ty=Tensor[(11, 2, 9), int8] */;
    %885 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
    %886 = %883.0;
    (%884, %885, %886)
  };
  %887() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) */
}

def @func_773() -> Tensor[(11, 2, 9), int8] {
  @func_771() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_2762() -> (Tensor[(11, 2, 9), int8],) {
  %888 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %889 = %888.0;
  (%889,)
}

def @func_5097() -> (Tensor[(11, 2, 9), int8],) {
  @func_5095() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_10973(%var_10971: uint8, %var_10972: Tensor[(1, 13, 11), uint8]) -> (Tensor[(1, 13, 11), uint8],) {
  @func_10969(%var_10971, %var_10972) /* ty=(Tensor[(1, 13, 11), uint8],) */
}

def @func_15264(%var_15254: int64, %var_15255: Tensor[(2, 3, 8), int64]) -> (Tensor[(2, 3, 8), int64],) {
  %890 = cast(%var_15254, dtype="int64") /* ty=int64 */;
  %891 = cast(%var_15255, dtype="int64") /* ty=Tensor[(2, 3, 8), int64] */;
  %892 = add(%890, %891) /* ty=Tensor[(2, 3, 8), int64] */;
  (%892,)
}

def @func_11334(%var_11333: Tensor[(10, 5, 14), float64]) -> (Tensor[(10, 5, 14), float64], Tensor[(11, 2, 9), int8]) {
  %900 = fn (%var_11318: Tensor[(10, 5, 14), float64]) -> (Tensor[(10, 5, 14), float64], Tensor[(11, 2, 9), int8]) {
    %893 = cast(%var_11318, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
    %894 = asin(%893) /* ty=Tensor[(10, 5, 14), float64] */;
    %895 = cast(%894, dtype="float32") /* ty=Tensor[(10, 5, 14), float32] */;
    %896 = atan(%895) /* ty=Tensor[(10, 5, 14), float32] */;
    %897 = cast(%896, dtype="float64") /* ty=Tensor[(10, 5, 14), float64] */;
    %898 = acos(%897) /* ty=Tensor[(10, 5, 14), float64] */;
    %899 = @func_7937() /* ty=Tensor[(11, 2, 9), int8] */;
    (%898, %899)
  };
  %900(%var_11333) /* ty=(Tensor[(10, 5, 14), float64], Tensor[(11, 2, 9), int8]) */
}

def @func_12780() -> (Tensor[(11, 2, 9), int8], int16, Tensor[(624), int16], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(14, 10, 8), bool]) {
  %901 = cast(meta[relay.Constant][20] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %902 = cast(meta[relay.Constant][21] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %903 = reshape(%901, newshape=[]) /* ty=int16 */;
  %904 = reshape(%902, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), int16] */;
  %905 = @func_6636(%903, %904) /* ty=(Tensor[(13, 12, 4), int16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %906 = %905.2;
  %907 = cast(%906, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %908 = reshape(%907, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %909 = @func_1293(%908) /* ty=(Tensor[(11, 2, 9), uint64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %910 = @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %911 = @func_8487() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(14, 10, 8), float32], Tensor[(1120, 1), float32]) */;
  %912 = %911.2;
  %913 = cast(%912, dtype="float64") /* ty=Tensor[(14, 10, 8), float64] */;
  %914 = log(%913) /* ty=Tensor[(14, 10, 8), float64] */;
  %915 = cast(%912, dtype="bool") /* ty=Tensor[(14, 10, 8), bool] */;
  %916 = shape_of(%914, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(%914, dtype="bool") /* ty=Tensor[(14, 10, 8), bool] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %919 = %909.2;
  %920 = %910.1;
  %921 = equal(%917, %918) /* ty=Tensor[(14, 10, 8), bool] */;
  (%906, meta[relay.Constant][20] /* ty=int16 */, meta[relay.Constant][21] /* ty=Tensor[(624), int16] */, %919, %920, %921)
}

def @func_11315() -> Tensor[(11, 2, 9), float32] {
  @func_11313() /* ty=Tensor[(11, 2, 9), float32] */
}

def @func_14591() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %922 = @func_5493() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */;
  %923 = @func_10644() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %924 = %922.0;
  %925 = %923.1;
  %926 = @func_922() /* ty=Tensor[(11, 2, 9), int8] */;
  (%924, %925, %926)
}

def @func_2835(%var_2833: Tensor[(6, 7, 16), float64], %var_2834: Tensor[(6, 7, 16), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(6, 7, 16), float32], Tensor[(11, 2, 9), float64]) {
  @func_2831(%var_2833, %var_2834) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(6, 7, 16), float32], Tensor[(11, 2, 9), float64]) */
}

def @func_8006() -> Tensor[(11, 2, 9), int8] {
  @func_8004() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_6464() -> Tensor[(11, 2, 9), int8] {
  %927 = fn () -> Tensor[(11, 2, 9), int8] {
    @func_5668() /* ty=Tensor[(11, 2, 9), int8] */
  };
  %927() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_10620(%var_10590: Tensor[(5, 16, 11), float32], %var_10605: uint8, %var_10606: Tensor[(7), uint8]) -> (Tensor[(5, 16, 11), float32], Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7), uint8], Tensor[(624), int16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %928 = cast(%var_10590, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  %929 = cast(%var_10605, dtype="uint8") /* ty=uint8 */;
  %930 = cast(%var_10606, dtype="uint8") /* ty=Tensor[(7), uint8] */;
  %931 = cast(meta[relay.Constant][22] /* ty=Tensor[(624), int16] */, dtype="int16") /* ty=Tensor[(624), int16] */;
  %932 = reshape(%929, newshape=[]) /* ty=uint8 */;
  %933 = reshape(%930, newshape=[7]) /* ty=Tensor[(7), uint8] */;
  %934 = reshape(%931, newshape=[624]) /* ty=Tensor[(624), int16] */;
  %935 = @func_7492(%932, %933, %934) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7), uint8], Tensor[(11, 2, 9), int8], Tensor[(624), int16]) */;
  %936 = @func_4776() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %937 = asinh(%928) /* ty=Tensor[(5, 16, 11), float32] */;
  %938 = @func_4755() /* ty=Tensor[(11, 2, 9), int8] */;
  %939 = %935.1;
  %940 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
  %941 = %936.0;
  (%937, %938, %939, %var_10605, %var_10606, meta[relay.Constant][22] /* ty=Tensor[(624), int16] */, %940, %941)
}

def @func_14461(%var_14459: Tensor[(700), float64], %var_14460: Tensor[(10, 5, 14), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(700), float64], Tensor[(10, 5, 14), float64]) {
  @func_14457(%var_14459, %var_14460) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(700), float64], Tensor[(10, 5, 14), float64]) */
}

def @func_2046(%var_2044: Tensor[(11, 14, 4), float64]) -> Tensor[(11, 14, 4), float64] {
  @func_2043(%var_2044) /* ty=Tensor[(11, 14, 4), float64] */
}

def @func_12782() -> (Tensor[(11, 2, 9), int8], int16, Tensor[(624), int16], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(14, 10, 8), bool]) {
  @func_12780() /* ty=(Tensor[(11, 2, 9), int8], int16, Tensor[(624), int16], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(14, 10, 8), bool]) */
}

def @func_6082(%var_6080: int8, %var_6081: Tensor[(14, 1, 3), int8]) -> (Tensor[(14, 1, 3), int8], Tensor[(11, 2, 9), int8]) {
  %946 = fn (%var_6063: int8, %var_6064: Tensor[(14, 1, 3), int8]) -> (Tensor[(14, 1, 3), int8], Tensor[(11, 2, 9), int8]) {
    %942 = cast(%var_6063, dtype="int8") /* ty=int8 */;
    %943 = cast(%var_6064, dtype="int8") /* ty=Tensor[(14, 1, 3), int8] */;
    %944 = right_shift(%942, %943) /* ty=Tensor[(14, 1, 3), int8] */;
    %945 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
    (%944, %945)
  };
  %946(%var_6080, %var_6081) /* ty=(Tensor[(14, 1, 3), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_11732() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) {
  @func_11730() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) */
}

def @func_7497(%var_7494: uint8, %var_7495: Tensor[(7), uint8], %var_7496: Tensor[(624), int16]) -> (Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7), uint8], Tensor[(11, 2, 9), int8], Tensor[(624), int16]) {
  @func_7492(%var_7494, %var_7495, %var_7496) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7), uint8], Tensor[(11, 2, 9), int8], Tensor[(624), int16]) */
}

def @func_2340() -> Tensor[(11, 2, 9), int8] {
  %947 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %947.0
}

def @func_9838(%var_9836: int8) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(14, 1, 3), int8], int8, Tensor[(42), int8]) {
  @func_9835(%var_9836) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(14, 1, 3), int8], int8, Tensor[(42), int8]) */
}

def @func_5287() -> Tensor[(260), float64] {
  @func_4440() /* ty=Tensor[(260), float64] */
}

def @func_14568() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_14566() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_10433() -> Tensor[(260), float64] {
  @func_4440() /* ty=Tensor[(260), float64] */
}

def @func_7812(%var_7785: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) {
  %948 = @func_6412() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), int8]) */;
  %949 = %948.0;
  %950 = cast(%var_7785, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %951 = shape_of(%949, dtype="int32") /* ty=Tensor[(3), int32] */;
  %952 = cast(%949, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %954 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %955 = equal(%952, %953) /* ty=Tensor[(11, 2, 9), bool] */;
  %956 = %954.0;
  (%955, %956)
}

def @func_3592(%var_3591: Tensor[(616), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(4, 3, 4), float64], Tensor[(2, 24), float64], Tensor[(11, 14, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 9), int8]) {
  %973 = fn (%var_3585: Tensor[(616), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(4, 3, 4), float64], Tensor[(2, 24), float64], Tensor[(11, 14, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 9), int8]) {
    %957 = @func_2664() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %958 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %959 = @func_972() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
    %960 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 24), float64] */, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
    %961 = reshape(%960, newshape=[4, 3, 4]) /* ty=Tensor[(4, 3, 4), float64] */;
    %962 = @func_3394(%961) /* ty=(Tensor[(4, 3, 4), float64],) */;
    %963 = cast(%var_3585, dtype="float64") /* ty=Tensor[(616), float64] */;
    %964 = reshape(%963, newshape=[11, 14, 4]) /* ty=Tensor[(11, 14, 4), float64] */;
    %965 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %966 = %957.0;
    %967 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
    %968 = %958.0;
    %969 = %959.1;
    %970 = %962.0;
    %971 = @func_2043(%964) /* ty=Tensor[(11, 14, 4), float64] */;
    %972 = %965.1;
    (%966, %967, %968, %969, %970, meta[relay.Constant][23] /* ty=Tensor[(2, 24), float64] */, %971, %var_3585, %972)
  };
  %973(%var_3591) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(4, 3, 4), float64], Tensor[(2, 24), float64], Tensor[(11, 14, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 9), int8]) */
}

def @func_12938() -> (Tensor[(13, 15, 15), bool],) {
  %974 = cast(meta[relay.Constant][24] /* ty=Tensor[(13, 15, 1), float64] */, dtype="bool") /* ty=Tensor[(13, 15, 1), bool] */;
  %975 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 15, 15), float64] */, dtype="bool") /* ty=Tensor[(13, 15, 15), bool] */;
  %976 = not_equal(%974, %975) /* ty=Tensor[(13, 15, 15), bool] */;
  (%976,)
}

def @func_6800() -> (Tensor[(11, 2, 9), int8],) {
  @func_6798() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_1845() -> (Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32]) {
  %983 = fn () -> (Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32]) {
    %977 = @func_1650() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %978 = %977.0;
    %979 = cast(%978, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
    %980 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
    %981 = acosh(%979) /* ty=Tensor[(11, 2, 9), float64] */;
    %982 = %980.1;
    (%981, %982)
  };
  %983() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32]) */
}

def @func_9009() -> Tensor[(11, 2, 9), float32] {
  %984 = @func_6188() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(672), float64], Tensor[(11, 2, 9), int8]) */;
  %985 = %984.1;
  %986 = cast(%985, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  sinh(%986) /* ty=Tensor[(11, 2, 9), float32] */
}

def @func_5385() -> (Tensor[(11, 2, 9), int8],) {
  @func_5383() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_1372() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */
}

def @func_1370() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  %987 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %988 = %987.0;
  %989 = cast(%988, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
  %990 = sin(%989) /* ty=Tensor[(11, 2, 9), float64] */;
  %991 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %992 = %991.0;
  %993 = cast(%992, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  %994 = shape_of(%990, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(%990, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %997 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  %998 = floor_mod(%995, %996) /* ty=Tensor[(11, 2, 9), float32] */;
  (%997, %998)
}

def @func_7815(%var_7813: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) {
  @func_7812(%var_7813) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */
}

def @func_8295() -> Tensor[(11, 2, 9), int64] {
  %1000 = fn () -> Tensor[(11, 2, 9), int64] {
    %999 = @func_3814() /* ty=(Tensor[(11, 2, 9), int64], Tensor[(12, 2, 8), float32]) */;
    %999.0
  };
  %1000() /* ty=Tensor[(11, 2, 9), int64] */
}

def @func_1293(%var_1239: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), uint64], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1001 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1002 = %1001.0;
  %1003 = cast(%var_1239, dtype="uint64") /* ty=Tensor[(11, 2, 9), uint64] */;
  %1004 = shape_of(%1002, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1005 = cast(%1002, dtype="uint64") /* ty=Tensor[(11, 2, 9), uint64] */;
  %1006 = dyn.reshape(%1003, %1004, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1007 = cast(%1002, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %1008 = shape_of(%var_1239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1009 = cast(%var_1239, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1011 = cast(%1002, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %1012 = shape_of(%var_1239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1013 = cast(%var_1239, dtype="bool") /* ty=Tensor[(11, 2, 9), bool] */;
  %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1015 = @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %1016 = multiply(%1005, %1006) /* ty=Tensor[(11, 2, 9), uint64] */;
  %1017 = greater(%1009, %1010) /* ty=Tensor[(11, 2, 9), bool] */;
  %1018 = logical_or(%1013, %1014) /* ty=Tensor[(11, 2, 9), bool] */;
  %1019 = %1015.0;
  %1020 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  (%1016, %1017, %1018, %1019, %1020)
}

def @func_5150() -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1021 = @func_2507() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), uint64]) */;
  %1022 = @func_1087() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %1023 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1024 = %1021.4;
  %1025 = @func_3338() /* ty=Tensor[(11, 2, 9), int8] */;
  %1026 = %1022.1;
  %1027 = %1023.0;
  (%1024, %1025, %1026, %1027)
}

def @func_7065() -> (Tensor[(11, 2, 9), float32],) {
  %1031 = fn () -> (Tensor[(11, 2, 9), float32],) {
    %1028 = @func_4181() /* ty=Tensor[(11, 2, 9), int8] */;
    %1029 = cast(%1028, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
    %1030 = atanh(%1029) /* ty=Tensor[(11, 2, 9), float32] */;
    (%1030,)
  };
  %1031() /* ty=(Tensor[(11, 2, 9), float32],) */
}

def @func_1671() -> Tensor[(11, 2, 9), int8] {
  @func_1669() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_10099() -> (Tensor[(11, 2, 9), int8],) {
  @func_10097() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_11143() -> Tensor[(11, 2, 9), int8] {
  %1033 = fn () -> Tensor[(11, 2, 9), int8] {
    %1032 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %1032.0
  };
  %1033() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_8335(%var_8333: Tensor[(13, 2, 5), uint16], %var_8334: Tensor[(13, 2, 5), uint16]) -> (Tensor[(13, 2, 5), float32], Tensor[(11, 2, 9), float32]) {
  @func_8331(%var_8333, %var_8334) /* ty=(Tensor[(13, 2, 5), float32], Tensor[(11, 2, 9), float32]) */
}

def @func_6640(%var_6638: int16, %var_6639: Tensor[(13, 12, 4), int16]) -> (Tensor[(13, 12, 4), int16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_6636(%var_6638, %var_6639) /* ty=(Tensor[(13, 12, 4), int16], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_1975() -> Tensor[(11, 2, 9), float64] {
  %1035 = fn () -> Tensor[(11, 2, 9), float64] {
    %1034 = @func_1844() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32]) */;
    %1034.0
  };
  %1035() /* ty=Tensor[(11, 2, 9), float64] */
}

def @func_10435() -> Tensor[(260), float64] {
  @func_10433() /* ty=Tensor[(260), float64] */
}

def @func_2557() -> Tensor[(11, 2, 9), int8] {
  @func_359() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_11614(%var_11613: Tensor[(5, 78), bool]) -> (Tensor[(11, 2, 9), int8], Tensor[(390), bool], Tensor[(5, 78), bool], Tensor[(11, 2, 9), int8], Tensor[(672), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1052 = fn (%var_11578: Tensor[(5, 78), bool]) -> (Tensor[(11, 2, 9), int8], Tensor[(390), bool], Tensor[(5, 78), bool], Tensor[(11, 2, 9), int8], Tensor[(672), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %1036 = @func_10284() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %1037 = cast(%var_11578, dtype="bool") /* ty=Tensor[(5, 78), bool] */;
    %1038 = reshape(%1037, newshape=[390]) /* ty=Tensor[(390), bool] */;
    %1039 = @func_6715(%1038) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(198), int8], Tensor[(390), bool]) */;
    %1040 = cast(meta[relay.Constant][26] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %1041 = reshape(%1040, newshape=[672]) /* ty=Tensor[(672), float64] */;
    %1042 = @func_7425(%1041) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(672), float64]) */;
    %1043 = @func_3995() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), uint16], Tensor[(11, 2, 9), int8], Tensor[(616), float64]) */;
    %1044 = %1036.0;
    %1045 = cast(%1044, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
    %1046 = reshape(%1045, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
    %1047 = @func_605(%1046) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
    %1048 = %1039.2;
    %1049 = %1042.3;
    %1050 = %1043.2;
    %1051 = %1047.1;
    (%1044, %1048, %var_11578, %1049, meta[relay.Constant][26] /* ty=Tensor[(672), float64] */, %1050, %1051)
  };
  %1052(%var_11613) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(390), bool], Tensor[(5, 78), bool], Tensor[(11, 2, 9), int8], Tensor[(672), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_13201(%var_13185: Tensor[(13, 15, 15), bool]) -> (Tensor[(11, 2, 9), int8], Tensor[(13, 15, 15), uint8]) {
  %1053 = @func_9653() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1054 = @func_12938() /* ty=(Tensor[(13, 15, 15), bool],) */;
  %1055 = %1054.0;
  %1056 = cast(%var_13185, dtype="uint8") /* ty=Tensor[(13, 15, 15), uint8] */;
  %1057 = shape_of(%1055, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1058 = cast(%1055, dtype="uint8") /* ty=Tensor[(13, 15, 15), uint8] */;
  %1059 = dyn.reshape(%1056, %1057, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1060 = %1053.0;
  %1061 = logical_xor(%1058, %1059) /* ty=Tensor[(13, 15, 15), uint8] */;
  (%1060, %1061)
}

def @func_12023(%var_12022: Tensor[(48), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(48), float64]) {
  %1068 = fn (%var_12012: Tensor[(48), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(48), float64]) {
    %1062 = @func_2937() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %1063 = cast(%var_12012, dtype="float64") /* ty=Tensor[(48), float64] */;
    %1064 = reshape(%1063, newshape=[4, 12]) /* ty=Tensor[(4, 12), float64] */;
    %1065 = @func_7309(%1064) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(4, 3, 4), float64], Tensor[(4, 12), float64]) */;
    %1066 = %1062.1;
    %1067 = %1065.0;
    (%1066, %1067, %var_12012)
  };
  %1068(%var_12022) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(48), float64]) */
}

def @func_7109() -> (Tensor[(11, 2, 9), int8],) {
  @func_7107() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_14593() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_14591() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_5493() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) {
  %1069 = @func_4962() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64]) */;
  %1070 = %1069.1;
  %1071 = @func_922() /* ty=Tensor[(11, 2, 9), int8] */;
  (%1070, %1071)
}

def @func_8489() -> (Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(14, 10, 8), float32], Tensor[(1120, 1), float32]) {
  @func_8487() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(14, 10, 8), float32], Tensor[(1120, 1), float32]) */
}

def @func_15268(%var_15266: int64, %var_15267: Tensor[(2, 3, 8), int64]) -> (Tensor[(2, 3, 8), int64],) {
  @func_15264(%var_15266, %var_15267) /* ty=(Tensor[(2, 3, 8), int64],) */
}

def @func_11273() -> Tensor[(11, 2, 9), float32] {
  @func_11271() /* ty=Tensor[(11, 2, 9), float32] */
}

def @func_14756() -> Tensor[(11, 2, 9), int8] {
  %1073 = fn () -> Tensor[(11, 2, 9), int8] {
    %1072 = @func_13041() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %1072.1
  };
  %1073() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_1071() -> (Tensor[(11, 2, 9), int64],) {
  %1074 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
  %1075 = cast(%1074, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %1076 = reshape(%1075, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %1077 = @func_605(%1076) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %1078 = %1077.0;
  %1079 = cast(%1078, dtype="int64") /* ty=Tensor[(11, 2, 9), int64] */;
  %1080 = shape_of(%1074, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1081 = cast(%1074, dtype="int64") /* ty=Tensor[(11, 2, 9), int64] */;
  %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1083 = left_shift(%1081, %1082) /* ty=Tensor[(11, 2, 9), int64] */;
  (%1083,)
}

def @func_536() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1086 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %1084 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
    %1085 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
    (%1084, %1085)
  };
  %1086() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_3945() -> (Tensor[(11, 2, 9), int8],) {
  %1088 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %1087 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
    (%1087,)
  };
  %1088() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_15373() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1089 = @func_310() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1090 = @func_3995() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), uint16], Tensor[(11, 2, 9), int8], Tensor[(616), float64]) */;
  %1091 = %1089.0;
  %1092 = %1090.0;
  %1093 = @func_15079() /* ty=Tensor[(11, 2, 9), int8] */;
  (%1091, %1092, %1093)
}

def @func_4605() -> (Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32]) {
  %1097 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32]) {
    %1094 = @func_3171() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) */;
    %1095 = @func_123() /* ty=Tensor[(11, 2, 9), int8] */;
    %1096 = %1094.1;
    (%1095, %1096)
  };
  %1097() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32]) */
}

def @func_3172() -> (Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) {
  %1105 = fn () -> (Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) {
    %1098 = @func_1974() /* ty=Tensor[(11, 2, 9), float64] */;
    %1099 = cast(%1098, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
    %1100 = cast(%1098, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
    %1101 = reshape(%1100, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
    %1102 = @func_235(%1101) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */;
    %1103 = exp(%1099) /* ty=Tensor[(11, 2, 9), float32] */;
    %1104 = %1102.0;
    (%1103, %1104)
  };
  %1105() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) */
}

def @func_5819() -> (Tensor[(12, 2, 8), float32],) {
  @func_5817() /* ty=(Tensor[(12, 2, 8), float32],) */
}

def @func_2516() -> Tensor[(11, 2, 9), int8] {
  %1106 = fn () -> Tensor[(11, 2, 9), int8] {
    @func_123() /* ty=Tensor[(11, 2, 9), int8] */
  };
  %1106() /* ty=Tensor[(11, 2, 9), int8] */
}

def @func_8167(%var_8165: Tensor[(14, 10, 8), float32]) -> Tensor[(14, 10, 8), float32] {
  @func_8164(%var_8165) /* ty=Tensor[(14, 10, 8), float32] */
}

def @func_1073() -> (Tensor[(11, 2, 9), int64],) {
  @func_1071() /* ty=(Tensor[(11, 2, 9), int64],) */
}

def @func_7879() -> (Tensor[(11, 2, 9), int8],) {
  %1109 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %1107 = @func_6798() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %1108 = %1107.0;
    (%1108,)
  };
  %1109() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_8418() -> (Tensor[(11, 2, 9), int64],) {
  %1111 = fn () -> (Tensor[(11, 2, 9), int64],) {
    %1110 = @func_8294() /* ty=Tensor[(11, 2, 9), int64] */;
    (%1110,)
  };
  %1111() /* ty=(Tensor[(11, 2, 9), int64],) */
}

def @func_2509() -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), uint64]) {
  @func_2507() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), uint64]) */
}

def @func_10097() -> (Tensor[(11, 2, 9), int8],) {
  %1112 = @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */;
  %1113 = %1112.0;
  (%1113,)
}

def @func_4962() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64]) {
  %1114 = @func_1844() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(12, 2, 8), float32]) */;
  %1115 = @func_458() /* ty=Tensor[(11, 2, 9), int8] */;
  %1116 = %1114.0;
  (%1115, %1116)
}

def @func_7937() -> Tensor[(11, 2, 9), int8] {
  %1117 = @func_1370() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */;
  %1117.0
}

def @func_7923() -> (Tensor[(11, 2, 9), int8],) {
  %1119 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %1118 = @func_2340() /* ty=Tensor[(11, 2, 9), int8] */;
    (%1118,)
  };
  %1119() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_6962() -> (Tensor[(260), float64],) {
  @func_6960() /* ty=(Tensor[(260), float64],) */
}

def @func_1731() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) {
  @func_1729() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) */
}

def @func_15449(%var_15447: Tensor[(616), float64]) -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), bool], Tensor[(11, 14, 4), float64], Tensor[(616), float64]) {
  @func_15446(%var_15447) /* ty=(Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), bool], Tensor[(11, 14, 4), float64], Tensor[(616), float64]) */
}

def @func_4120(%var_4118: Tensor[(10, 3, 13), bool], %var_4119: Tensor[(10, 3, 13), bool]) -> (Tensor[(10, 3, 13), bool], Tensor[(11, 2, 9), bool], Tensor[(198), int8]) {
  @func_4116(%var_4118, %var_4119) /* ty=(Tensor[(10, 3, 13), bool], Tensor[(11, 2, 9), bool], Tensor[(198), int8]) */
}

def @func_10916() -> Tensor[(12, 2, 8), float32] {
  %1120 = @func_6843() /* ty=(Tensor[(12, 2, 8), float32],) */;
  %1120.0
}

def @func_11885() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_11883() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_12317() -> (Tensor[(12, 2, 8), float32],) {
  %1123 = fn () -> (Tensor[(12, 2, 8), float32],) {
    %1121 = @func_5150() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %1122 = %1121.0;
    (%1122,)
  };
  %1123() /* ty=(Tensor[(12, 2, 8), float32],) */
}

def @func_667(%var_665: Tensor[(11, 7, 13), int8], %var_666: Tensor[(11, 7, 13), int8]) -> Tensor[(11, 7, 13), bool] {
  %1128 = fn (%var_659: Tensor[(11, 7, 13), int8], %var_660: Tensor[(11, 7, 13), int8]) -> Tensor[(11, 7, 13), bool] {
    %1124 = cast(%var_660, dtype="bool") /* ty=Tensor[(11, 7, 13), bool] */;
    %1125 = shape_of(%var_659, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1126 = cast(%var_659, dtype="bool") /* ty=Tensor[(11, 7, 13), bool] */;
    %1127 = dyn.reshape(%1124, %1125, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%1126, %1127) /* ty=Tensor[(11, 7, 13), bool] */
  };
  %1128(%var_665, %var_666) /* ty=Tensor[(11, 7, 13), bool] */
}

def @func_4893() -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1135 = fn () -> (Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %1129 = @func_3171() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32]) */;
    %1130 = @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %1131 = @func_2901() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %1132 = %1129.1;
    %1133 = %1130.1;
    %1134 = %1131.0;
    (%1132, %1133, %1134)
  };
  %1135() /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_1729() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(260), float64], Tensor[(11, 2, 9), int8]) {
  %1136 = @func_1322() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1137 = cast(meta[relay.Constant][27] /* ty=Tensor[(260), uint16] */, dtype="uint16") /* ty=Tensor[(260), uint16] */;
  %1138 = cast(meta[relay.Constant][27] /* ty=Tensor[(260), uint16] */, dtype="uint16") /* ty=Tensor[(260), uint16] */;
  %1139 = reshape(%1137, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), uint16] */;
  %1140 = reshape(%1138, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), uint16] */;
  %1141 = @func_739(%1139, %1140) /* ty=Tensor[(13, 4, 5), bool] */;
  %1142 = cast(%1141, dtype="bool") /* ty=Tensor[(13, 4, 5), bool] */;
  %1143 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(260), uint16] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1144 = cast(meta[relay.Constant][27] /* ty=Tensor[(260), uint16] */, dtype="bool") /* ty=Tensor[(260), bool] */;
  %1145 = dyn.reshape(%1142, %1143, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1146 = less_equal(%1144, %1145) /* ty=Tensor[(260), bool] */;
  %1147 = cast(%1146, dtype="float64") /* ty=Tensor[(260), float64] */;
  %1148 = @func_458() /* ty=Tensor[(11, 2, 9), int8] */;
  %1149 = %1136.0;
  %1150 = sinh(%1147) /* ty=Tensor[(260), float64] */;
  %1151 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
  (%1148, %1149, %1150, %1151)
}

def @func_11883() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1152 = @func_3944() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1153 = @func_11390() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(13, 4, 5), bool], Tensor[(260), uint16]) */;
  %1154 = %1152.0;
  %1155 = %1153.0;
  (%1154, %1155)
}

def @func_11313() -> Tensor[(11, 2, 9), float32] {
  @func_11056() /* ty=Tensor[(11, 2, 9), float32] */
}

def @func_742(%var_740: Tensor[(13, 4, 5), uint16], %var_741: Tensor[(13, 4, 5), uint16]) -> Tensor[(13, 4, 5), bool] {
  %1160 = fn (%var_734: Tensor[(13, 4, 5), uint16], %var_735: Tensor[(13, 4, 5), uint16]) -> Tensor[(13, 4, 5), bool] {
    %1156 = cast(%var_735, dtype="bool") /* ty=Tensor[(13, 4, 5), bool] */;
    %1157 = shape_of(%var_734, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1158 = cast(%var_734, dtype="bool") /* ty=Tensor[(13, 4, 5), bool] */;
    %1159 = dyn.reshape(%1156, %1157, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%1158, %1159) /* ty=Tensor[(13, 4, 5), bool] */
  };
  %1160(%var_740, %var_741) /* ty=Tensor[(13, 4, 5), bool] */
}

def @func_9550() -> (Tensor[(11, 2, 9), int8],) {
  %1161 = @func_359() /* ty=Tensor[(11, 2, 9), int8] */;
  (%1161,)
}

def @func_12868() -> (Tensor[(11, 2, 9), int8],) {
  @func_12866() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_14177(%var_14175: Tensor[(3, 11, 1), float32], %var_14176: Tensor[(3, 11, 1), float32]) -> (Tensor[(3, 11, 1), float32], Tensor[(3, 11, ?), int64], Tensor[(11, 2, 9), int8]) {
  @func_14173(%var_14175, %var_14176) /* ty=(Tensor[(3, 11, 1), float32], Tensor[(3, 11, ?), int64], Tensor[(11, 2, 9), int8]) */
}

def @func_5752() -> Tensor[(11, 2, 9), uint16] {
  @func_5750() /* ty=Tensor[(11, 2, 9), uint16] */
}

def @func_6601() -> (Tensor[(260), float64],) {
  %1163 = fn () -> (Tensor[(260), float64],) {
    %1162 = @func_4440() /* ty=Tensor[(260), float64] */;
    (%1162,)
  };
  %1163() /* ty=(Tensor[(260), float64],) */
}

def @func_14608() -> Tensor[(11, 2, 9), int8] {
  %1164 = @func_6304() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %1164.2
}

def @func_12525() -> (Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) {
  @func_12523() /* ty=(Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */
}

def @func_9271(%var_9270: Tensor[(7, 88), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(7, 88), float64]) {
  %1171 = fn (%var_9267: Tensor[(7, 88), float64]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(7, 88), float64]) {
    %1165 = @func_5306() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %1166 = cast(%var_9267, dtype="float64") /* ty=Tensor[(7, 88), float64] */;
    %1167 = reshape(%1166, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %1168 = @func_3590(%1167) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32], Tensor[(4, 3, 4), float64], Tensor[(2, 24), float64], Tensor[(11, 14, 4), float64], Tensor[(616), float64], Tensor[(11, 2, 9), int8]) */;
    %1169 = %1165.0;
    %1170 = %1168.1;
    (%1169, %1170, %var_9267)
  };
  %1171(%var_9270) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(7, 88), float64]) */
}

def @func_8038() -> (Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7, 1), uint8]) {
  %1180 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7, 1), uint8]) {
    %1172 = @func_5107() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */;
    %1173 = cast(meta[relay.Constant][28] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1174 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 1), uint8] */, dtype="uint8") /* ty=Tensor[(7, 1), uint8] */;
    %1175 = reshape(%1173, newshape=[]) /* ty=uint8 */;
    %1176 = reshape(%1174, newshape=[7, 1]) /* ty=Tensor[(7, 1), uint8] */;
    %1177 = @func_5972(%1175, %1176) /* ty=(Tensor[(7, 1), uint8],) */;
    %1178 = %1172.1;
    %1179 = %1177.0;
    (%1178, %1179, meta[relay.Constant][28] /* ty=uint8 */, meta[relay.Constant][29] /* ty=Tensor[(7, 1), uint8] */)
  };
  %1180() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(7, 1), uint8], uint8, Tensor[(7, 1), uint8]) */
}

def @func_13042() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1184 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %1181 = @func_1957() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %1182 = @func_3626() /* ty=Tensor[(11, 2, 9), int8] */;
    %1183 = %1181.0;
    (%1182, %1183)
  };
  %1184() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_13824() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) {
  %1185 = @func_5227() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int64]) */;
  %1186 = @func_13522() /* ty=Tensor[(11, 2, 9), int8] */;
  %1187 = %1185.2;
  (%1186, %1187)
}

def @func_8850() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) {
  %1194 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) {
    %1188 = @func_5582() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %1189 = %1188.0;
    %1190 = cast(%1189, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
    %1191 = reshape(%1190, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
    %1192 = @func_235(%1191) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), bool]) */;
    %1193 = %1192.1;
    (%1189, %1193)
  };
  %1194() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) */
}

def @func_787() -> (Tensor[(11, 2, 9), int8],) {
  %1196 = fn () -> (Tensor[(11, 2, 9), int8],) {
    %1195 = @func_771() /* ty=Tensor[(11, 2, 9), int8] */;
    (%1195,)
  };
  %1196() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_875() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_9338(%var_9337: Tensor[(1120), float32]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(14, 10, 8), float32], Tensor[(1120), float32]) {
  %1204 = fn (%var_9318: Tensor[(1120), float32]) -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(14, 10, 8), float32], Tensor[(1120), float32]) {
    %1197 = @func_644() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %1198 = @func_873() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
    %1199 = cast(%var_9318, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %1200 = reshape(%1199, newshape=[14, 10, 8]) /* ty=Tensor[(14, 10, 8), float32] */;
    %1201 = %1197.0;
    %1202 = %1198.1;
    %1203 = @func_8164(%1200) /* ty=Tensor[(14, 10, 8), float32] */;
    (%1201, %1202, %1203, %var_9318)
  };
  %1204(%var_9337) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(14, 10, 8), float32], Tensor[(1120), float32]) */
}

def @func_2764() -> (Tensor[(11, 2, 9), int8],) {
  @func_2762() /* ty=(Tensor[(11, 2, 9), int8],) */
}

def @func_11797(%var_11791: Tensor[(14, 8, 2), uint16], %var_11792: Tensor[(14, 8, 2), uint16]) -> (Tensor[(14, 8, 2), uint16],) {
  %1205 = cast(%var_11792, dtype="uint16") /* ty=Tensor[(14, 8, 2), uint16] */;
  %1206 = shape_of(%var_11791, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1207 = cast(%var_11791, dtype="uint16") /* ty=Tensor[(14, 8, 2), uint16] */;
  %1208 = dyn.reshape(%1205, %1206, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1209 = minimum(%1207, %1208) /* ty=Tensor[(14, 8, 2), uint16] */;
  (%1209,)
}

def @func_12147() -> (Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1215 = fn () -> (Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %1210 = @func_10563() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), bool]) */;
    %1211 = @func_2901() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %1212 = %1210.1;
    %1213 = @func_8004() /* ty=Tensor[(11, 2, 9), int8] */;
    %1214 = %1211.0;
    (%1212, %1213, %1214)
  };
  %1215() /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

def @func_6253() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  %1219 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
    %1216 = @func_1780() /* ty=(Tensor[(11, 2, 9), float32],) */;
    %1217 = @func_3203() /* ty=Tensor[(11, 2, 9), int8] */;
    %1218 = %1216.0;
    (%1217, %1218)
  };
  %1219() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) */
}

def @func_12523() -> (Tensor[(11, 2, 9), float32], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) {
  %1220 = @func_7064() /* ty=(Tensor[(11, 2, 9), float32],) */;
  %1221 = @func_12425() /* ty=(Tensor[(12, 2, 8), float32],) */;
  %1222 = %1220.0;
  %1223 = %1221.0;
  %1224 = @func_922() /* ty=Tensor[(11, 2, 9), int8] */;
  (%1222, %1223, %1224)
}

def @func_972() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float32]) {
  %1225 = @func_535() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */;
  %1226 = %1225.0;
  %1227 = cast(%1226, dtype="int8") /* ty=Tensor[(11, 2, 9), int8] */;
  %1228 = reshape(%1227, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), int8] */;
  %1229 = @func_605(%1228) /* ty=(Tensor[(11, 2, 9), bool], Tensor[(11, 2, 9), int8]) */;
  %1230 = cast(%1226, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  %1231 = %1229.1;
  %1232 = sqrt(%1230) /* ty=Tensor[(11, 2, 9), float32] */;
  (%1231, %1232)
}

def @func_6189() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(672), float64], Tensor[(11, 2, 9), int8]) {
  %1243 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(672), float64], Tensor[(11, 2, 9), int8]) {
    %1233 = cast(meta[relay.Constant][30] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %1234 = cast(meta[relay.Constant][30] /* ty=Tensor[(672), float64] */, dtype="float64") /* ty=Tensor[(672), float64] */;
    %1235 = reshape(%1233, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float64] */;
    %1236 = reshape(%1234, newshape=[6, 7, 16]) /* ty=Tensor[(6, 7, 16), float64] */;
    %1237 = @func_2831(%1235, %1236) /* ty=(Tensor[(11, 2, 9), int8], Tensor[(6, 7, 16), bool], Tensor[(6, 7, 16), float32], Tensor[(11, 2, 9), float64]) */;
    %1238 = @func_786() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %1239 = @func_2340() /* ty=Tensor[(11, 2, 9), int8] */;
    %1240 = @func_458() /* ty=Tensor[(11, 2, 9), int8] */;
    %1241 = %1237.3;
    %1242 = %1238.0;
    (%1239, %1240, %1241, meta[relay.Constant][30] /* ty=Tensor[(672), float64] */, %1242)
  };
  %1243() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), float64], Tensor[(672), float64], Tensor[(11, 2, 9), int8]) */
}

def @func_5108() -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) {
  %1246 = fn () -> (Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) {
    %1244 = @func_1974() /* ty=Tensor[(11, 2, 9), float64] */;
    %1245 = @func_2515() /* ty=Tensor[(11, 2, 9), int8] */;
    (%1244, %1245)
  };
  %1246() /* ty=(Tensor[(11, 2, 9), float64], Tensor[(11, 2, 9), int8]) */
}

def @func_1478(%var_1442: Tensor[(11, 2, 9), int8]) -> (Tensor[(11, 2, 9), float32], Tensor[(11, 2, 9), uint8], Tensor[(11, 2, 9), int8]) {
  %1247 = @func_786() /* ty=(Tensor[(11, 2, 9), int8],) */;
  %1248 = %1247.0;
  %1249 = cast(%1248, dtype="float32") /* ty=Tensor[(11, 2, 9), float32] */;
  %1250 = cast(%var_1442, dtype="uint8") /* ty=Tensor[(11, 2, 9), uint8] */;
  %1251 = shape_of(%1248, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1252 = cast(%1248, dtype="uint8") /* ty=Tensor[(11, 2, 9), uint8] */;
  %1253 = dyn.reshape(%1250, %1251, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1254 = @func_728() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(12, 2, 8), float32], Tensor[(11, 2, 9), int8]) */;
  %1255 = log(%1249) /* ty=Tensor[(11, 2, 9), float32] */;
  %1256 = right_shift(%1252, %1253) /* ty=Tensor[(11, 2, 9), uint8] */;
  %1257 = %1254.2;
  (%1255, %1256, %1257)
}

def @func_12427() -> (Tensor[(12, 2, 8), float32],) {
  @func_12425() /* ty=(Tensor[(12, 2, 8), float32],) */
}

def @func_15391() -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
  %1261 = fn () -> (Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) {
    %1258 = @func_9550() /* ty=(Tensor[(11, 2, 9), int8],) */;
    %1259 = @func_5879() /* ty=Tensor[(11, 2, 9), int8] */;
    %1260 = %1258.0;
    (%1259, %1260)
  };
  %1261() /* ty=(Tensor[(11, 2, 9), int8], Tensor[(11, 2, 9), int8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen561/build/output.py:4929: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen561/build/output.py", line 4934, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(288) tvmgen_default_fused_exp_kernel0(float* __restrict__ T_exp, float* __restrict__ placeholder) {
  T_exp[(((int)threadIdx.x))] = __expf(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


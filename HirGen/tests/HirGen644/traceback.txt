==========mod==========
#[version = "0.0.5"]
def @func_10424() -> Tensor[(9, 13, 12), float32] {
  %0 = @func_8438() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %0.0
}

def @func_11777() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), int64]) {
  %1 = @func_7261() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %2 = %1.0;
  %3 = @func_9469() /* ty=Tensor[(9, 13, 12), int64] */;
  (%2, %3)
}

def @func_10137() -> (Tensor[(9, 13, 12), float64],) {
  %4 = @func_2483() /* ty=Tensor[(9, 13, 12), float64] */;
  (%4,)
}

def @func_11624() -> Tensor[(686), float64] {
  %5 = @func_6726() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float64], Tensor[(686), float64]) */;
  %6 = %5.3;
  %7 = cast(%6, dtype="float64") /* ty=Tensor[(686), float64] */;
  cos(%7) /* ty=Tensor[(686), float64] */
}

def @func_5209(%var_5167: Tensor[(7, 98), float64]) -> (Tensor[(72), float64], Tensor[(7, 98), bool]) {
  %8 = @func_2850() /* ty=(Tensor[(72), float64],) */;
  %9 = cast(%var_5167, dtype="float64") /* ty=Tensor[(7, 98), float64] */;
  %10 = reshape(%9, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %11 = @func_3785(%10) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %12 = %11.2;
  %13 = cast(%12, dtype="int32") /* ty=Tensor[(14, 7, 7), int32] */;
  %14 = shape_of(%var_5167, dtype="int32") /* ty=Tensor[(2), int32] */;
  %15 = cast(%var_5167, dtype="int32") /* ty=Tensor[(7, 98), int32] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %17 = minimum(%15, %16) /* ty=Tensor[(7, 98), int32] */;
  %18 = cast(%17, dtype="bool") /* ty=Tensor[(7, 98), bool] */;
  %19 = shape_of(%var_5167, dtype="int32") /* ty=Tensor[(2), int32] */;
  %20 = cast(%var_5167, dtype="bool") /* ty=Tensor[(7, 98), bool] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %22 = %8.0;
  %23 = logical_or(%20, %21) /* ty=Tensor[(7, 98), bool] */;
  (%22, %23)
}

def @func_3484() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %24 = @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %25 = @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %26 = %24.0;
  %27 = %25.0;
  (%26, %27)
}

def @func_5303() -> Tensor[(9, 13, 12), bool] {
  %28 = @func_4063() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %28.0
}

def @func_8621(%var_8616: Tensor[(686), bool]) -> (Tensor[(686), float32], Tensor[(686), float32]) {
  %29 = @func_7067() /* ty=(Tensor[(686), bool], Tensor[(686), float64]) */;
  %30 = %29.0;
  %31 = cast(%30, dtype="float32") /* ty=Tensor[(686), float32] */;
  %32 = cast(%var_8616, dtype="float32") /* ty=Tensor[(686), float32] */;
  %33 = shape_of(%30, dtype="int32") /* ty=Tensor[(1), int32] */;
  %34 = cast(%30, dtype="float32") /* ty=Tensor[(686), float32] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?), float32] */;
  %36 = sinh(%31) /* ty=Tensor[(686), float32] */;
  %37 = floor_mod(%34, %35) /* ty=Tensor[(686), float32] */;
  (%36, %37)
}

def @func_9300(%var_9278: Tensor[(28), int16], %var_9285: Tensor[(704), float64]) -> (Tensor[(686), uint16], Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(704), bool]) {
  %38 = @func_8390() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(686), uint16], Tensor[(9, 13, 12), bool], Tensor[(686), float32]) */;
  %39 = cast(%var_9278, dtype="int16") /* ty=Tensor[(28), int16] */;
  %40 = cast(meta[relay.Constant][0] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %41 = reshape(%39, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %42 = reshape(%40, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %43 = @func_4374(%41, %42) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(4, 16, 11), int16], Tensor[(704), float64]) */;
  %44 = cast(%var_9285, dtype="bool") /* ty=Tensor[(704), bool] */;
  %45 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(704), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %46 = cast(meta[relay.Constant][0] /* ty=Tensor[(704), float64] */, dtype="bool") /* ty=Tensor[(704), bool] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?), bool] */;
  %48 = %38.1;
  %49 = %43.0;
  %50 = less(%46, %47) /* ty=Tensor[(704), bool] */;
  (%48, %49, %var_9278, %50)
}

def @func_9670(%var_9588: Tensor[(686), float64], %var_9604: Tensor[(910), float32]) -> (Tensor[(72), float64], Tensor[(686), uint32], Tensor[(686), float64], Tensor[(14, 13, 5), float32], Tensor[(910), float64], Tensor[(10, 7, 13), float64], Tensor[(9, 13, 12), float32], Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(14, 13, 5), float32]) {
  %51 = @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */;
  %52 = cast(%var_9588, dtype="float64") /* ty=Tensor[(686), float64] */;
  %53 = cast(%var_9588, dtype="float64") /* ty=Tensor[(686), float64] */;
  %54 = cast(%var_9588, dtype="float64") /* ty=Tensor[(686), float64] */;
  %55 = reshape(%52, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %56 = reshape(%53, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %57 = reshape(%54, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %58 = @func_4811(%55, %56, %57) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), uint64], Tensor[(686), float64], Tensor[(686), uint32], Tensor[(686), bool]) */;
  %59 = cast(meta[relay.Constant][1] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %60 = cast(meta[relay.Constant][1] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %61 = reshape(%59, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %62 = reshape(%60, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %63 = @func_7332(%61, %62) /* ty=(Tensor[(14, 13, 5), float32],) */;
  %64 = cast(%var_9604, dtype="float64") /* ty=Tensor[(910), float64] */;
  %65 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(910), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %66 = cast(meta[relay.Constant][1] /* ty=Tensor[(910), float32] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?), float64] */;
  %68 = @func_8908() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %69 = @func_5478() /* ty=(Tensor[(72), float64],) */;
  %70 = @func_8908() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %71 = %63.0;
  %72 = cast(%71, dtype="float32") /* ty=Tensor[(14, 13, 5), float32] */;
  %73 = floor_divide(%66, %67) /* ty=Tensor[(910), float64] */;
  %74 = cast(%73, dtype="float32") /* ty=Tensor[(910), float32] */;
  %75 = reshape(%72, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %76 = reshape(%74, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %77 = @func_7332(%75, %76) /* ty=(Tensor[(14, 13, 5), float32],) */;
  %78 = %51.2;
  %79 = %58.3;
  %80 = @func_6152() /* ty=Tensor[(10, 7, 13), float64] */;
  %81 = %68.0;
  %82 = %69.0;
  %83 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  %84 = %70.0;
  %85 = %77.0;
  (%78, %79, %var_9588, %71, %73, %80, %81, %82, %83, %84, %85)
}

def @func_12609(%var_12592: Tensor[(910), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool], Tensor[(10, 7, 13), float32], Tensor[(910), float64]) {
  %86 = @func_9894() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %87 = cast(%var_12592, dtype="float64") /* ty=Tensor[(910), float64] */;
  %88 = reshape(%87, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float64] */;
  %89 = cast(%var_12592, dtype="float64") /* ty=Tensor[(910), float64] */;
  %90 = @func_6381() /* ty=Tensor[(9, 13, 12), float32] */;
  %91 = %86.0;
  %92 = @func_6841(%88) /* ty=Tensor[(10, 7, 13), float32] */;
  %93 = log(%89) /* ty=Tensor[(910), float64] */;
  (%90, %91, %92, %93)
}

def @func_12193(%var_12166: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(686), float32], Tensor[(686), bool]) {
  %94 = @func_4063() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %95 = cast(%var_12166, dtype="float32") /* ty=Tensor[(686), float32] */;
  %96 = @func_11624() /* ty=Tensor[(686), float64] */;
  %97 = cast(%var_12166, dtype="uint8") /* ty=Tensor[(686), uint8] */;
  %98 = shape_of(%96, dtype="int32") /* ty=Tensor[(1), int32] */;
  %99 = cast(%96, dtype="uint8") /* ty=Tensor[(686), uint8] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %101 = right_shift(%99, %100) /* ty=Tensor[(686), uint8] */;
  %102 = cast(%var_12166, dtype="bool") /* ty=Tensor[(686), bool] */;
  %103 = shape_of(%101, dtype="int32") /* ty=Tensor[(1), int32] */;
  %104 = cast(%101, dtype="bool") /* ty=Tensor[(686), bool] */;
  %105 = dyn.reshape(%102, %103, newshape=[]) /* ty=Tensor[(?), bool] */;
  %106 = @func_3346() /* ty=Tensor[(9, 13, 12), bool] */;
  %107 = %94.0;
  %108 = sin(%95) /* ty=Tensor[(686), float32] */;
  %109 = greater_equal(%104, %105) /* ty=Tensor[(686), bool] */;
  (%106, %107, %108, %109)
}

def @func_8523() -> (Tensor[(9, 13, 12), bool],) {
  %110 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
  (%110,)
}

def @func_3178() -> Tensor[(686), float64] {
  %111 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %111.1
}

def @func_11921() -> (Tensor[(9, 13, 12), float32],) {
  %112 = @func_8390() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(686), uint16], Tensor[(9, 13, 12), bool], Tensor[(686), float32]) */;
  %113 = %112.0;
  (%113,)
}

def @func_5714(%var_5651: Tensor[(1, 686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(14, 7, 7), float64], Tensor[(?, 686), bool], Tensor[(686), float64], Tensor[(72), float64]) {
  %114 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %115 = @func_5478() /* ty=(Tensor[(72), float64],) */;
  %116 = cast(%var_5651, dtype="float64") /* ty=Tensor[(1, 686), float64] */;
  %117 = cast(%var_5651, dtype="float64") /* ty=Tensor[(1, 686), float64] */;
  %118 = cast(%var_5651, dtype="float64") /* ty=Tensor[(1, 686), float64] */;
  %119 = reshape(%116, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %120 = reshape(%117, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %121 = reshape(%118, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %122 = @func_4811(%119, %120, %121) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), uint64], Tensor[(686), float64], Tensor[(686), uint32], Tensor[(686), bool]) */;
  %123 = %122.2;
  %124 = cast(%123, dtype="uint64") /* ty=Tensor[(686), uint64] */;
  %125 = shape_of(%var_5651, dtype="int32") /* ty=Tensor[(2), int32] */;
  %126 = cast(%var_5651, dtype="uint64") /* ty=Tensor[(1, 686), uint64] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %128 = add(%126, %127) /* ty=Tensor[(?, 686), uint64] */;
  %129 = cast(%128, dtype="float64") /* ty=Tensor[(?, 686), float64] */;
  %130 = cast(%128, dtype="float64") /* ty=Tensor[(?, 686), float64] */;
  %131 = reshape(%129, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %132 = reshape(%130, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %133 = cast(%123, dtype="float64") /* ty=Tensor[(686), float64] */;
  %134 = cast(%123, dtype="float64") /* ty=Tensor[(686), float64] */;
  %135 = cast(%123, dtype="float64") /* ty=Tensor[(686), float64] */;
  %136 = reshape(%133, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %137 = reshape(%134, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %138 = reshape(%135, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %139 = @func_4811(%136, %137, %138) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), uint64], Tensor[(686), float64], Tensor[(686), uint32], Tensor[(686), bool]) */;
  %140 = %139.1;
  %141 = cast(%140, dtype="bool") /* ty=Tensor[(686), bool] */;
  %142 = shape_of(%128, dtype="int32") /* ty=Tensor[(2), int32] */;
  %143 = cast(%128, dtype="bool") /* ty=Tensor[(?, 686), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %145 = cast(%var_5651, dtype="float64") /* ty=Tensor[(1, 686), float64] */;
  %146 = reshape(%145, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %147 = @func_2234(%146) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %148 = @func_5478() /* ty=(Tensor[(72), float64],) */;
  %149 = %114.0;
  %150 = %115.0;
  %151 = @func_803(%131, %132) /* ty=Tensor[(14, 7, 7), float64] */;
  %152 = greater_equal(%143, %144) /* ty=Tensor[(?, 686), bool] */;
  %153 = %147.2;
  %154 = %148.0;
  (%149, %150, %151, %152, %153, %154)
}

def @func_9010() -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(704), float64]) {
  %155 = @func_5249() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %156 = cast(meta[relay.Constant][2] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %157 = reshape(%156, newshape=[4, 176]) /* ty=Tensor[(4, 176), float64] */;
  %158 = @func_5234(%157) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(704), float64], Tensor[(28), int16], Tensor[(4, 176), float64], Tensor[(9, 13, 12), bool]) */;
  %159 = @func_7486() /* ty=Tensor[(9, 13, 12), float32] */;
  %160 = %155.0;
  %161 = %158.4;
  (%159, %160, %161, meta[relay.Constant][2] /* ty=Tensor[(704), float64] */)
}

def @func_10557() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) {
  %162 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
  %163 = @func_7486() /* ty=Tensor[(9, 13, 12), float32] */;
  (%162, %163)
}

def @func_4811(%var_4752: Tensor[(686), float64], %var_4765: Tensor[(686), float64], %var_4797: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(686), uint64], Tensor[(686), float64], Tensor[(686), uint32], Tensor[(686), bool]) {
  %164 = @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %165 = @func_3178() /* ty=Tensor[(686), float64] */;
  %166 = cast(%var_4752, dtype="float64") /* ty=Tensor[(686), float64] */;
  %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(1), int32] */;
  %168 = cast(%165, dtype="float64") /* ty=Tensor[(686), float64] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?), float64] */;
  %170 = power(%168, %169) /* ty=Tensor[(686), float64] */;
  %171 = cast(%var_4765, dtype="bool") /* ty=Tensor[(686), bool] */;
  %172 = shape_of(%170, dtype="int32") /* ty=Tensor[(1), int32] */;
  %173 = cast(%170, dtype="bool") /* ty=Tensor[(686), bool] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?), bool] */;
  %175 = logical_and(%173, %174) /* ty=Tensor[(686), bool] */;
  %176 = cast(%170, dtype="uint16") /* ty=Tensor[(686), uint16] */;
  %177 = shape_of(%var_4752, dtype="int32") /* ty=Tensor[(1), int32] */;
  %178 = cast(%var_4752, dtype="uint16") /* ty=Tensor[(686), uint16] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %180 = logical_xor(%178, %179) /* ty=Tensor[(686), uint16] */;
  %181 = cast(%180, dtype="uint64") /* ty=Tensor[(686), uint64] */;
  %182 = shape_of(%175, dtype="int32") /* ty=Tensor[(1), int32] */;
  %183 = cast(%175, dtype="uint64") /* ty=Tensor[(686), uint64] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %185 = cast(%var_4765, dtype="float64") /* ty=Tensor[(686), float64] */;
  %186 = shape_of(%180, dtype="int32") /* ty=Tensor[(1), int32] */;
  %187 = cast(%180, dtype="float64") /* ty=Tensor[(686), float64] */;
  %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?), float64] */;
  %189 = cast(%var_4797, dtype="uint32") /* ty=Tensor[(686), uint32] */;
  %190 = shape_of(%170, dtype="int32") /* ty=Tensor[(1), int32] */;
  %191 = cast(%170, dtype="uint32") /* ty=Tensor[(686), uint32] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %193 = cast(%var_4752, dtype="bool") /* ty=Tensor[(686), bool] */;
  %194 = shape_of(%170, dtype="int32") /* ty=Tensor[(1), int32] */;
  %195 = cast(%170, dtype="bool") /* ty=Tensor[(686), bool] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?), bool] */;
  %197 = %164.0;
  %198 = subtract(%183, %184) /* ty=Tensor[(686), uint64] */;
  %199 = mod(%187, %188) /* ty=Tensor[(686), float64] */;
  %200 = minimum(%191, %192) /* ty=Tensor[(686), uint32] */;
  %201 = less_equal(%195, %196) /* ty=Tensor[(686), bool] */;
  (%197, %198, %199, %200, %201)
}

def @func_10545() -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64]) {
  %202 = @func_8646() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %203 = @func_8784() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(686), float64], Tensor[(343, 2), float32]) */;
  %204 = %202.0;
  %205 = %203.2;
  (%204, %205)
}

def @func_2774(%var_2747: Tensor[(13, 11, 13), float64], %var_2748: Tensor[(13, 11, 13), float64]) -> (Tensor[(13, 11, 13), float64], Tensor[(9, 13, 12), float32]) {
  %206 = cast(%var_2748, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
  %207 = shape_of(%var_2747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%var_2747, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %210 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %211 = floor_mod(%208, %209) /* ty=Tensor[(13, 11, 13), float64] */;
  %212 = %210.0;
  (%211, %212)
}

def @func_2408(%var_2406: Tensor[(6, 12), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(6, 12), float64]) {
  %213 = @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %214 = cast(%var_2406, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
  %215 = reshape(%214, newshape=[3, 3, 8]) /* ty=Tensor[(3, 3, 8), float64] */;
  %216 = @func_2017(%215) /* ty=(Tensor[(3, 3, 8), float64], Tensor[(3, 3, 8), float32], Tensor[(686), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */;
  %217 = %213.0;
  %218 = %216.3;
  (%217, %218, %var_2406)
}

def @func_2715() -> (Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) {
  %219 = @func_2483() /* ty=Tensor[(9, 13, 12), float64] */;
  %220 = cast(meta[relay.Constant][3] /* ty=Tensor[(9, 13, 12), float64] */, dtype="int64") /* ty=Tensor[(9, 13, 12), int64] */;
  %221 = shape_of(%219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(%219, dtype="int64") /* ty=Tensor[(9, 13, 12), int64] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %224 = cast(meta[relay.Constant][4] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %225 = reshape(%224, newshape=[3, 3, 8]) /* ty=Tensor[(3, 3, 8), float64] */;
  %226 = @func_2017(%225) /* ty=(Tensor[(3, 3, 8), float64], Tensor[(3, 3, 8), float32], Tensor[(686), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */;
  %227 = left_shift(%222, %223) /* ty=Tensor[(9, 13, 12), int64] */;
  %228 = %226.5;
  (%227, %228, meta[relay.Constant][4] /* ty=Tensor[(72), float64] */)
}

def @func_7947() -> Tensor[(9, 13, 12), float32] {
  @func_6381() /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_5768() -> (Tensor[(9, 13, 12), bool],) {
  %229 = @func_3346() /* ty=Tensor[(9, 13, 12), bool] */;
  (%229,)
}

def @func_12670() -> (Tensor[(9, 13, 12), bool],) {
  %230 = @func_8230() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(9, 13, 12), bool]) */;
  %231 = %230.2;
  (%231,)
}

def @func_5086() -> (Tensor[(686), float64],) {
  %232 = @func_3178() /* ty=Tensor[(686), float64] */;
  (%232,)
}

def @func_2817(%var_2805: Tensor[(72), float64]) -> (Tensor[(9, 13, 12), float64], Tensor[(686), float64], Tensor[(72), float64], Tensor[(9, 13, 12), bool]) {
  %233 = cast(%var_2805, dtype="float64") /* ty=Tensor[(72), float64] */;
  %234 = reshape(%233, newshape=[3, 3, 8]) /* ty=Tensor[(3, 3, 8), float64] */;
  %235 = @func_2017(%234) /* ty=(Tensor[(3, 3, 8), float64], Tensor[(3, 3, 8), float32], Tensor[(686), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */;
  %236 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %237 = @func_2483() /* ty=Tensor[(9, 13, 12), float64] */;
  %238 = %235.5;
  %239 = %236.1;
  (%237, %238, %var_2805, %239)
}

def @func_2017(%var_1976: Tensor[(3, 3, 8), float64]) -> (Tensor[(3, 3, 8), float64], Tensor[(3, 3, 8), float32], Tensor[(686), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) {
  %240 = cast(%var_1976, dtype="float64") /* ty=Tensor[(3, 3, 8), float64] */;
  %241 = cast(meta[relay.Constant][5] /* ty=Tensor[(3, 3, 8), float64] */, dtype="float32") /* ty=Tensor[(3, 3, 8), float32] */;
  %242 = shape_of(%var_1976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%var_1976, dtype="float32") /* ty=Tensor[(3, 3, 8), float32] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %245 = cast(meta[relay.Constant][6] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %246 = cast(meta[relay.Constant][7] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %247 = cast(meta[relay.Constant][8] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
  %248 = reshape(%245, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), int16] */;
  %249 = reshape(%246, newshape=[4, 11, 7]) /* ty=Tensor[(4, 11, 7), int16] */;
  %250 = reshape(%247, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %251 = @func_1958(%248, %249, %250) /* ty=(Tensor[(4, 11, 7), bool], Tensor[(4, 1, 7), float64], Tensor[(6, 8, 3), bool], Tensor[(8, 18), float64], Tensor[(686), float64]) */;
  %252 = log2(%240) /* ty=Tensor[(3, 3, 8), float64] */;
  %253 = power(%243, %244) /* ty=Tensor[(3, 3, 8), float32] */;
  %254 = %251.4;
  (%252, %253, %254, meta[relay.Constant][6] /* ty=Tensor[(28), int16] */, meta[relay.Constant][7] /* ty=Tensor[(308), int16] */, meta[relay.Constant][8] /* ty=Tensor[(686), float64] */)
}

def @func_12510(%var_12490: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(11, 4, 15), float32], Tensor[(308), int16], Tensor[(686), float64], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) {
  %255 = @func_9894() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %256 = @func_11219() /* ty=(Tensor[(11, 4, 15), float32], Tensor[(72), float64]) */;
  %257 = cast(%var_12490, dtype="float64") /* ty=Tensor[(686), float64] */;
  %258 = reshape(%257, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %259 = @func_6994(%258) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(28), int16], Tensor[(704), float64], Tensor[(6, 8, 3), bool], Tensor[(308), int16], Tensor[(686), float64], Tensor[(686), float64]) */;
  %260 = cast(%var_12490, dtype="float64") /* ty=Tensor[(686), float64] */;
  %261 = reshape(%260, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %262 = @func_12193(%261) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(686), float32], Tensor[(686), bool]) */;
  %263 = @func_8859() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) */;
  %264 = %255.0;
  %265 = %256.0;
  %266 = %259.4;
  %267 = %262.1;
  %268 = %263.2;
  (%264, %265, %266, %var_12490, %267, %268)
}

def @func_5567() -> (Tensor[(72), float64], Tensor[(704), float64], Tensor[(4, 176), float64], Tensor[(7, 98), bool], Tensor[(686), float64]) {
  %269 = @func_5478() /* ty=(Tensor[(72), float64],) */;
  %270 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 176), float64] */, dtype="float64") /* ty=Tensor[(4, 176), float64] */;
  %271 = reshape(%270, newshape=[4, 176]) /* ty=Tensor[(4, 176), float64] */;
  %272 = @func_5234(%271) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(704), float64], Tensor[(28), int16], Tensor[(4, 176), float64], Tensor[(9, 13, 12), bool]) */;
  %273 = cast(meta[relay.Constant][10] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
  %274 = reshape(%273, newshape=[7, 98]) /* ty=Tensor[(7, 98), float64] */;
  %275 = @func_5209(%274) /* ty=(Tensor[(72), float64], Tensor[(7, 98), bool]) */;
  %276 = %269.0;
  %277 = %272.1;
  %278 = %275.1;
  (%276, %277, meta[relay.Constant][9] /* ty=Tensor[(4, 176), float64] */, %278, meta[relay.Constant][10] /* ty=Tensor[(686), float64] */)
}

def @func_9717() -> Tensor[(9, 13, 12), bool] {
  %279 = @func_8050() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %279.0
}

def @func_5744() -> Tensor[(9, 13, 12), bool] {
  %280 = @func_3328() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %280.1
}

def @func_10798() -> (Tensor[(9, 13, 12), bool],) {
  %281 = @func_10039() /* ty=Tensor[(9, 13, 12), bool] */;
  (%281,)
}

def @func_11503() -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) {
  %282 = @func_3328() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %283 = @func_4937() /* ty=Tensor[(9, 13, 12), float32] */;
  %284 = %282.1;
  (%283, %284)
}

def @func_7415(%var_7372: Tensor[(704), float64], %var_7375: Tensor[(704), float64], %var_7384: Tensor[(1859, 1), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(28), int16], Tensor[(1859), float64], Tensor[(1859, 1), float64], Tensor[(72), float64], Tensor[(704), float32], Tensor[(9, 13, 12), bool]) {
  %285 = @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */;
  %286 = cast(%var_7372, dtype="float64") /* ty=Tensor[(704), float64] */;
  %287 = reshape(%286, newshape=[4, 176]) /* ty=Tensor[(4, 176), float64] */;
  %288 = @func_5234(%287) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(704), float64], Tensor[(28), int16], Tensor[(4, 176), float64], Tensor[(9, 13, 12), bool]) */;
  %289 = cast(%var_7384, dtype="float64") /* ty=Tensor[(1859, 1), float64] */;
  %290 = reshape(%289, newshape=[1859]) /* ty=Tensor[(1859), float64] */;
  %291 = @func_3557(%290) /* ty=(Tensor[(686), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(13, 11, 13), float64], Tensor[(1859), float64]) */;
  %292 = @func_7035() /* ty=(Tensor[(704), float64], Tensor[(72), float64]) */;
  %293 = cast(%var_7375, dtype="bool") /* ty=Tensor[(704), bool] */;
  %294 = shape_of(%var_7372, dtype="int32") /* ty=Tensor[(1), int32] */;
  %295 = cast(%var_7372, dtype="bool") /* ty=Tensor[(704), bool] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?), bool] */;
  %297 = logical_and(%295, %296) /* ty=Tensor[(704), bool] */;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(704), float32] */;
  %299 = @func_3328() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %300 = %285.3;
  %301 = %288.2;
  %302 = %291.4;
  %303 = %292.1;
  %304 = log2(%298) /* ty=Tensor[(704), float32] */;
  %305 = %299.0;
  (%300, %301, %302, %var_7384, %303, %304, %305)
}

def @func_9400() -> (Tensor[(9, 13, 12), bool],) {
  %306 = @func_8947() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %307 = %306.1;
  (%307,)
}

def @func_3328() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %308 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %309 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
  %310 = %308.0;
  (%309, %310)
}

def @func_7486() -> Tensor[(9, 13, 12), float32] {
  %311 = @func_3019() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %311.0
}

def @func_11641(%var_11635: Tensor[(2, 9, 16), float64]) -> (Tensor[(2, 9, 16), float64], Tensor[(9, 13, 12), bool]) {
  %312 = cast(%var_11635, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
  %313 = sqrt(%312) /* ty=Tensor[(2, 9, 16), float64] */;
  %314 = @func_3917() /* ty=Tensor[(9, 13, 12), bool] */;
  (%313, %314)
}

def @func_1958(%var_1921: Tensor[(4, 1, 7), int16], %var_1922: Tensor[(4, 11, 7), int16], %var_1951: Tensor[(686), float64]) -> (Tensor[(4, 11, 7), bool], Tensor[(4, 1, 7), float64], Tensor[(6, 8, 3), bool], Tensor[(8, 18), float64], Tensor[(686), float64]) {
  %315 = cast(%var_1921, dtype="bool") /* ty=Tensor[(4, 1, 7), bool] */;
  %316 = cast(%var_1922, dtype="bool") /* ty=Tensor[(4, 11, 7), bool] */;
  %317 = cast(%var_1921, dtype="float64") /* ty=Tensor[(4, 1, 7), float64] */;
  %318 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 18), float64] */, dtype="float64") /* ty=Tensor[(8, 18), float64] */;
  %319 = cast(%var_1951, dtype="float64") /* ty=Tensor[(686), float64] */;
  %320 = reshape(%318, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), float64] */;
  %321 = reshape(%319, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %322 = @func_1046(%320, %321) /* ty=(Tensor[(14, 7, 7), float64], Tensor[(686), float64], Tensor[(6, 8, 3), bool]) */;
  %323 = greater(%315, %316) /* ty=Tensor[(4, 11, 7), bool] */;
  %324 = exp(%317) /* ty=Tensor[(4, 1, 7), float64] */;
  %325 = %322.2;
  (%323, %324, %325, meta[relay.Constant][11] /* ty=Tensor[(8, 18), float64] */, %var_1951)
}

def @func_7882() -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) {
  %326 = @func_6894() /* ty=Tensor[(9, 13, 12), float32] */;
  %327 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
  (%326, %327)
}

def @func_4063() -> (Tensor[(9, 13, 12), bool],) {
  %328 = @func_3484() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %329 = %328.0;
  (%329,)
}

def @func_6548() -> (Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), int16], Tensor[(704), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) {
  %330 = cast(meta[relay.Constant][12] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %331 = reshape(%330, newshape=[4, 16, 11]) /* ty=Tensor[(4, 16, 11), float64] */;
  %332 = @func_2546(%331) /* ty=(Tensor[(4, 16, 11), int16], Tensor[(4, 16, 11), float64]) */;
  %333 = @func_3484() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %334 = @func_6328() /* ty=(Tensor[(686), float64], Tensor[(9, 13, 12), float64], Tensor[(1404), bool]) */;
  %335 = %334.1;
  %336 = cast(%335, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  %337 = @func_5744() /* ty=Tensor[(9, 13, 12), bool] */;
  %338 = %332.0;
  %339 = %333.0;
  %340 = cosh(%336) /* ty=Tensor[(9, 13, 12), float32] */;
  (%337, %338, meta[relay.Constant][12] /* ty=Tensor[(704), float64] */, %339, %340)
}

def @func_2315() -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) {
  %341 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  %342 = cast(%341, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  %343 = sinh(%342) /* ty=Tensor[(9, 13, 12), float32] */;
  %344 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  (%343, %344)
}

def @func_6756() -> (Tensor[(9, 13, 12), bool],) {
  %345 = @func_4063() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %346 = %345.0;
  (%346,)
}

def @func_2436(%var_2418: Tensor[(343, 2), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(343, 2), float64]) {
  %347 = cast(%var_2418, dtype="float64") /* ty=Tensor[(343, 2), float64] */;
  %348 = cast(%var_2418, dtype="float64") /* ty=Tensor[(343, 2), float64] */;
  %349 = reshape(%347, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %350 = reshape(%348, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %351 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  %352 = @func_803(%349, %350) /* ty=Tensor[(14, 7, 7), float64] */;
  (%351, %352, %var_2418)
}

def @func_5513(%var_5493: Tensor[(28), int16]) -> (Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(9, 13, 12), float32]) {
  %353 = cast(%var_5493, dtype="int16") /* ty=Tensor[(28), int16] */;
  %354 = reshape(%353, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %355 = @func_2994(%354) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) */;
  %356 = @func_3107() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %357 = @func_4647() /* ty=Tensor[(9, 13, 12), bool] */;
  %358 = %355.2;
  %359 = %356.0;
  (%357, %358, %var_5493, %359)
}

def @func_3961() -> (Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), float64], Tensor[(704), float64]) {
  %360 = cast(meta[relay.Constant][13] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %361 = reshape(%360, newshape=[4, 16, 11]) /* ty=Tensor[(4, 16, 11), float64] */;
  %362 = @func_2546(%361) /* ty=(Tensor[(4, 16, 11), int16], Tensor[(4, 16, 11), float64]) */;
  %363 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
  %364 = %362.1;
  (%363, %364, meta[relay.Constant][13] /* ty=Tensor[(704), float64] */)
}

def @func_12049(%var_12031: Tensor[(48), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(48), float64], Tensor[(48), float64]) {
  %365 = @func_11503() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %366 = %365.0;
  %367 = cast(%366, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
  %368 = cast(%var_12031, dtype="float64") /* ty=Tensor[(48), float64] */;
  %369 = reshape(%367, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), bool] */;
  %370 = reshape(%368, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %371 = @func_5405(%369, %370) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64]) */;
  %372 = %371.3;
  (%366, %372, %var_12031)
}

def @func_7158() -> (Tensor[(704), float64], Tensor[(9, 13, 12), float32], Tensor[(4, 16, 11), int16]) {
  %373 = @func_5567() /* ty=(Tensor[(72), float64], Tensor[(704), float64], Tensor[(4, 176), float64], Tensor[(7, 98), bool], Tensor[(686), float64]) */;
  %374 = %373.1;
  %375 = cast(%374, dtype="float64") /* ty=Tensor[(704), float64] */;
  %376 = reshape(%375, newshape=[4, 16, 11]) /* ty=Tensor[(4, 16, 11), float64] */;
  %377 = @func_2546(%376) /* ty=(Tensor[(4, 16, 11), int16], Tensor[(4, 16, 11), float64]) */;
  %378 = @func_6894() /* ty=Tensor[(9, 13, 12), float32] */;
  %379 = %377.0;
  (%374, %378, %379)
}

def @func_6608() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) {
  %380 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %381 = @func_5478() /* ty=(Tensor[(72), float64],) */;
  %382 = %380.0;
  %383 = @func_3917() /* ty=Tensor[(9, 13, 12), bool] */;
  %384 = %381.0;
  %385 = @func_6381() /* ty=Tensor[(9, 13, 12), float32] */;
  (%382, %383, %384, %385)
}

def @func_2546(%var_2524: Tensor[(4, 16, 11), float64]) -> (Tensor[(4, 16, 11), int16], Tensor[(4, 16, 11), float64]) {
  %386 = cast(%var_2524, dtype="float64") /* ty=Tensor[(4, 16, 11), float64] */;
  %387 = cosh(%386) /* ty=Tensor[(4, 16, 11), float64] */;
  %388 = cast(%387, dtype="int16") /* ty=Tensor[(4, 16, 11), int16] */;
  %389 = shape_of(%var_2524, dtype="int32") /* ty=Tensor[(3), int32] */;
  %390 = cast(%var_2524, dtype="int16") /* ty=Tensor[(4, 16, 11), int16] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %392 = cast(%var_2524, dtype="float64") /* ty=Tensor[(4, 16, 11), float64] */;
  %393 = right_shift(%390, %391) /* ty=Tensor[(4, 16, 11), int16] */;
  %394 = log2(%392) /* ty=Tensor[(4, 16, 11), float64] */;
  (%393, %394)
}

def @func_6135() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %395 = @func_3484() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %396 = %395.1;
  %397 = @func_5744() /* ty=Tensor[(9, 13, 12), bool] */;
  (%396, %397)
}

def @func_7929() -> Tensor[(9, 13, 12), bool] {
  %398 = @func_6756() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %398.0
}

def @func_8245(%var_8238: Tensor[(15, 9, 7), float64]) -> (Tensor[(15, 9, 7), float64],) {
  %399 = cast(%var_8238, dtype="float64") /* ty=Tensor[(15, 9, 7), float64] */;
  %400 = cos(%399) /* ty=Tensor[(15, 9, 7), float64] */;
  (%400,)
}

def @func_4374(%var_4356: Tensor[(28), int16], %var_4360: Tensor[(704), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(4, 16, 11), int16], Tensor[(704), float64]) {
  %401 = cast(%var_4356, dtype="int16") /* ty=Tensor[(28), int16] */;
  %402 = reshape(%401, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %403 = @func_2994(%402) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) */;
  %404 = cast(%var_4360, dtype="float64") /* ty=Tensor[(704), float64] */;
  %405 = reshape(%404, newshape=[4, 16, 11]) /* ty=Tensor[(4, 16, 11), float64] */;
  %406 = @func_2546(%405) /* ty=(Tensor[(4, 16, 11), int16], Tensor[(4, 16, 11), float64]) */;
  %407 = cast(%var_4360, dtype="float64") /* ty=Tensor[(704), float64] */;
  %408 = @func_3917() /* ty=Tensor[(9, 13, 12), bool] */;
  %409 = %403.2;
  %410 = %406.0;
  %411 = asinh(%407) /* ty=Tensor[(704), float64] */;
  (%408, %409, %var_4356, %410, %411)
}

def @func_9122() -> Tensor[(686), int16] {
  %412 = @func_5086() /* ty=(Tensor[(686), float64],) */;
  %413 = %412.0;
  %414 = cast(%413, dtype="float32") /* ty=Tensor[(686), float32] */;
  %415 = tan(%414) /* ty=Tensor[(686), float32] */;
  %416 = cast(meta[relay.Constant][14] /* ty=Tensor[(686), float32] */, dtype="int16") /* ty=Tensor[(686), int16] */;
  %417 = shape_of(%415, dtype="int32") /* ty=Tensor[(1), int32] */;
  %418 = cast(%415, dtype="int16") /* ty=Tensor[(686), int16] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?), int16] */;
  left_shift(%418, %419) /* ty=Tensor[(686), int16] */
}

def @func_10511() -> Tensor[(9, 13, 12), float32] {
  %420 = @func_7882() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %420.0
}

def @func_9149(%var_9144: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(686), bool]) {
  %421 = @func_8947() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %422 = @func_8188() /* ty=(Tensor[(9, 13, 12), int8], Tensor[(72), float64], Tensor[(686), float64]) */;
  %423 = %422.2;
  %424 = cast(%var_9144, dtype="bool") /* ty=Tensor[(686), bool] */;
  %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(1), int32] */;
  %426 = cast(%423, dtype="bool") /* ty=Tensor[(686), bool] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?), bool] */;
  %428 = %421.0;
  %429 = equal(%426, %427) /* ty=Tensor[(686), bool] */;
  (%428, %429)
}

def @func_11379(%var_11346: Tensor[(1, 16, 5), float32]) -> (Tensor[(1, 16, 5), float32], Tensor[(1, 16, 5), float64], Tensor[(9, 13, 12), bool]) {
  %430 = cast(%var_11346, dtype="float32") /* ty=Tensor[(1, 16, 5), float32] */;
  %431 = cast(%var_11346, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
  %432 = @func_8523() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %433 = sin(%430) /* ty=Tensor[(1, 16, 5), float32] */;
  %434 = tan(%431) /* ty=Tensor[(1, 16, 5), float64] */;
  %435 = %432.0;
  (%433, %434, %435)
}

def @func_8557() -> (Tensor[(9, 13, 12), bool],) {
  %436 = @func_8523() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %437 = %436.0;
  (%437,)
}

def @func_6994(%var_6954: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), float64], Tensor[(28), int16], Tensor[(704), float64], Tensor[(6, 8, 3), bool], Tensor[(308), int16], Tensor[(686), float64], Tensor[(686), float64]) {
  %438 = cast(meta[relay.Constant][15] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %439 = reshape(%438, newshape=[4, 176]) /* ty=Tensor[(4, 176), float64] */;
  %440 = @func_5234(%439) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(704), float64], Tensor[(28), int16], Tensor[(4, 176), float64], Tensor[(9, 13, 12), bool]) */;
  %441 = %440.2;
  %442 = cast(%441, dtype="int16") /* ty=Tensor[(28), int16] */;
  %443 = cast(meta[relay.Constant][16] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %444 = cast(%var_6954, dtype="float64") /* ty=Tensor[(686), float64] */;
  %445 = reshape(%442, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), int16] */;
  %446 = reshape(%443, newshape=[4, 11, 7]) /* ty=Tensor[(4, 11, 7), int16] */;
  %447 = reshape(%444, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %448 = @func_1958(%445, %446, %447) /* ty=(Tensor[(4, 11, 7), bool], Tensor[(4, 1, 7), float64], Tensor[(6, 8, 3), bool], Tensor[(8, 18), float64], Tensor[(686), float64]) */;
  %449 = @func_5567() /* ty=(Tensor[(72), float64], Tensor[(704), float64], Tensor[(4, 176), float64], Tensor[(7, 98), bool], Tensor[(686), float64]) */;
  %450 = @func_2483() /* ty=Tensor[(9, 13, 12), float64] */;
  %451 = %448.2;
  %452 = %449.4;
  (%450, %441, meta[relay.Constant][15] /* ty=Tensor[(704), float64] */, %451, meta[relay.Constant][16] /* ty=Tensor[(308), int16] */, %var_6954, %452)
}

def @func_5249() -> (Tensor[(9, 13, 12), bool],) {
  %453 = @func_4647() /* ty=Tensor[(9, 13, 12), bool] */;
  (%453,)
}

def @func_7319(%var_7297: Tensor[(7, 98), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(7, 98), float64]) {
  %454 = @func_6135() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %455 = cast(%var_7297, dtype="float64") /* ty=Tensor[(7, 98), float64] */;
  %456 = reshape(%455, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %457 = @func_3785(%456) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %458 = %454.1;
  %459 = %457.1;
  (%458, %459, %var_7297)
}

def @func_7651() -> (Tensor[(9, 13, 12), bool],) {
  %460 = @func_5768() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %461 = %460.0;
  (%461,)
}

def @func_9831(%var_9822: Tensor[(4, 2, 7), int8]) -> Tensor[(4, 2, 7), int8] {
  %462 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 2, 7), int8] */, dtype="int8") /* ty=Tensor[(4, 2, 7), int8] */;
  %463 = shape_of(%var_9822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%var_9822, dtype="int8") /* ty=Tensor[(4, 2, 7), int8] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%464, %465) /* ty=Tensor[(4, 2, 7), int8] */
}

def @func_6894() -> Tensor[(9, 13, 12), float32] {
  %466 = @func_6135() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %467 = %466.0;
  %468 = cast(%467, dtype="float64") /* ty=Tensor[(9, 13, 12), float64] */;
  %469 = asinh(%468) /* ty=Tensor[(9, 13, 12), float64] */;
  %470 = cast(%469, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  sin(%470) /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_9469() -> Tensor[(9, 13, 12), int64] {
  @func_8818() /* ty=Tensor[(9, 13, 12), int64] */
}

def @func_8954() -> (Tensor[(9, 13, 12), bool],) {
  %471 = @func_3346() /* ty=Tensor[(9, 13, 12), bool] */;
  (%471,)
}

def @func_11400() -> (Tensor[(9, 13, 12), bool],) {
  %472 = @func_3917() /* ty=Tensor[(9, 13, 12), bool] */;
  (%472,)
}

def @func_8908() -> (Tensor[(9, 13, 12), float32],) {
  %473 = @func_7158() /* ty=(Tensor[(704), float64], Tensor[(9, 13, 12), float32], Tensor[(4, 16, 11), int16]) */;
  %474 = %473.1;
  (%474,)
}

def @func_10709() -> Tensor[(9, 13, 12), bool] {
  %475 = @func_9079() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %475.0
}

def @func_8438() -> (Tensor[(9, 13, 12), float32],) {
  %476 = @func_5908() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %477 = %476.0;
  (%477,)
}

def @func_5908() -> (Tensor[(9, 13, 12), float32],) {
  %478 = @func_3107() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %479 = %478.0;
  (%479,)
}

def @func_4647() -> Tensor[(9, 13, 12), bool] {
  %480 = @func_4063() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %480.0
}

def @func_8784() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(686), float64], Tensor[(343, 2), float32]) {
  %481 = cast(meta[relay.Constant][18] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
  %482 = reshape(%481, newshape=[343, 2]) /* ty=Tensor[(343, 2), float64] */;
  %483 = @func_6362(%482) /* ty=(Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) */;
  %484 = %483.3;
  %485 = cast(%484, dtype="float32") /* ty=Tensor[(343, 2), float32] */;
  %486 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  %487 = @func_4937() /* ty=Tensor[(9, 13, 12), float32] */;
  %488 = atanh(%485) /* ty=Tensor[(343, 2), float32] */;
  (%486, %487, meta[relay.Constant][18] /* ty=Tensor[(686), float64] */, %488)
}

def @func_8696(%var_8685: Tensor[(3, 16, 7), int8], %var_8686: Tensor[(3, 16, 7), int8]) -> Tensor[(3, 16, 7), int8] {
  %489 = cast(%var_8686, dtype="int8") /* ty=Tensor[(3, 16, 7), int8] */;
  %490 = shape_of(%var_8685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %491 = cast(%var_8685, dtype="int8") /* ty=Tensor[(3, 16, 7), int8] */;
  %492 = dyn.reshape(%489, %490, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%491, %492) /* ty=Tensor[(3, 16, 7), int8] */
}

def @func_10039() -> Tensor[(9, 13, 12), bool] {
  @func_9717() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_3291() -> (Tensor[(9, 13, 12), bool],) {
  %493 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
  (%493,)
}

def @func_12271() -> (Tensor[(9, 13, 12), float64], Tensor[(9, 13, 12), bool]) {
  %494 = @func_10137() /* ty=(Tensor[(9, 13, 12), float64],) */;
  %495 = @func_8947() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %496 = %494.0;
  %497 = %495.1;
  (%496, %497)
}

def @func_4175(%var_4136: Tensor[(9, 13, 12), bool]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64]) {
  %498 = @func_3328() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %499 = %498.0;
  %500 = cast(%var_4136, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
  %501 = shape_of(%499, dtype="int32") /* ty=Tensor[(3), int32] */;
  %502 = cast(%499, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
  %503 = dyn.reshape(%500, %501, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %504 = cast(%499, dtype="float64") /* ty=Tensor[(9, 13, 12), float64] */;
  %505 = less(%502, %503) /* ty=Tensor[(9, 13, 12), bool] */;
  %506 = log(%504) /* ty=Tensor[(9, 13, 12), float64] */;
  (%505, %506)
}

def @func_11863(%var_11837: Tensor[(1, 308), int16], %var_11846: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(1, 308), int16], Tensor[(686), bool], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64]) {
  %507 = @func_7651() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %508 = @func_9400() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %509 = cast(%var_11837, dtype="int16") /* ty=Tensor[(1, 308), int16] */;
  %510 = cast(meta[relay.Constant][19] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
  %511 = reshape(%509, newshape=[1, 308]) /* ty=Tensor[(1, 308), int16] */;
  %512 = reshape(%510, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %513 = @func_4900(%511, %512) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(28), int16], Tensor[(1, 308), int16], Tensor[(686), float64]) */;
  %514 = cast(%var_11846, dtype="bool") /* ty=Tensor[(686), bool] */;
  %515 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(686), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %516 = cast(meta[relay.Constant][19] /* ty=Tensor[(686), float64] */, dtype="bool") /* ty=Tensor[(686), bool] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?), bool] */;
  %518 = @func_9894() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %519 = not_equal(%516, %517) /* ty=Tensor[(686), bool] */;
  %520 = cast(%519, dtype="float64") /* ty=Tensor[(686), float64] */;
  %521 = reshape(%520, newshape=[7, 98]) /* ty=Tensor[(7, 98), float64] */;
  %522 = @func_7319(%521) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(7, 98), float64]) */;
  %523 = @func_7035() /* ty=(Tensor[(704), float64], Tensor[(72), float64]) */;
  %524 = %507.0;
  %525 = %508.0;
  %526 = %513.0;
  %527 = %518.0;
  %528 = %522.0;
  %529 = %523.1;
  (%524, %525, %526, %var_11837, %519, %527, %528, %529)
}

def @func_8025(%var_8020: Tensor[(12, 15, 9), float32], %var_8021: Tensor[(12, 15, 9), float32]) -> (Tensor[(12, 15, 9), float32],) {
  %530 = cast(%var_8021, dtype="float32") /* ty=Tensor[(12, 15, 9), float32] */;
  %531 = shape_of(%var_8020, dtype="int32") /* ty=Tensor[(3), int32] */;
  %532 = cast(%var_8020, dtype="float32") /* ty=Tensor[(12, 15, 9), float32] */;
  %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %534 = power(%532, %533) /* ty=Tensor[(12, 15, 9), float32] */;
  (%534,)
}

def @func_8947() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %535 = @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */;
  %536 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %537 = %535.1;
  %538 = %536.0;
  (%537, %538)
}

def @func_3019() -> (Tensor[(9, 13, 12), float32],) {
  %539 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %540 = %539.0;
  (%540,)
}

def @func_11171() -> (Tensor[(9, 13, 12), bool],) {
  %541 = @func_5744() /* ty=Tensor[(9, 13, 12), bool] */;
  (%541,)
}

def @func_9079() -> (Tensor[(9, 13, 12), bool],) {
  %542 = @func_8050() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %543 = %542.0;
  (%543,)
}

def @func_9803() -> (Tensor[(13, 10, ?), bool], Tensor[(13, 10, ?), float64], Tensor[(13, 10, ?), bool]) {
  %544 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 10, 1), float64] */;
  %545 = sqrt(%544) /* ty=Tensor[(13, 10, 1), float64] */;
  %546 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 10, 1), float64] */, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %547 = shape_of(%545, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%545, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %550 = greater(%548, %549) /* ty=Tensor[(13, 10, ?), bool] */;
  %551 = cast(%545, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %552 = shape_of(%550, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%550, dtype="bool") /* ty=Tensor[(13, 10, ?), bool] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %555 = cast(%545, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %556 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(13, 10, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 10, 1), float64] */, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %559 = greater_equal(%557, %558) /* ty=Tensor[(13, 10, ?), bool] */;
  %560 = cast(%559, dtype="float64") /* ty=Tensor[(13, 10, ?), float64] */;
  %561 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(13, 10, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %562 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 10, 1), float64] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %564 = cast(meta[relay.Constant][20] /* ty=Tensor[(13, 10, 1), float64] */, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %565 = shape_of(%545, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%545, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %568 = logical_and(%553, %554) /* ty=Tensor[(13, 10, ?), bool] */;
  %569 = mod(%562, %563) /* ty=Tensor[(13, 10, ?), float64] */;
  %570 = less_equal(%566, %567) /* ty=Tensor[(13, 10, ?), bool] */;
  (%568, %569, %570)
}

def @func_5234(%var_5225: Tensor[(4, 176), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(704), float64], Tensor[(28), int16], Tensor[(4, 176), float64], Tensor[(9, 13, 12), bool]) {
  %571 = cast(meta[relay.Constant][21] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %572 = cast(%var_5225, dtype="float64") /* ty=Tensor[(4, 176), float64] */;
  %573 = reshape(%571, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %574 = reshape(%572, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %575 = @func_4374(%573, %574) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(4, 16, 11), int16], Tensor[(704), float64]) */;
  %576 = @func_3346() /* ty=Tensor[(9, 13, 12), bool] */;
  %577 = cast(%576, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
  %578 = reshape(%577, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), bool] */;
  %579 = @func_4175(%578) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64]) */;
  %580 = %575.4;
  %581 = %579.0;
  (%576, %580, meta[relay.Constant][21] /* ty=Tensor[(28), int16] */, %var_5225, %581)
}

def @func_7261() -> (Tensor[(9, 13, 12), bool],) {
  %582 = @func_3494() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %583 = %582.0;
  (%583,)
}

def @func_10453() -> (Tensor[(9, 13, 12), float32],) {
  %584 = @func_7486() /* ty=Tensor[(9, 13, 12), float32] */;
  (%584,)
}

def @func_8188() -> (Tensor[(9, 13, 12), int8], Tensor[(72), float64], Tensor[(686), float64]) {
  %585 = @func_3346() /* ty=Tensor[(9, 13, 12), bool] */;
  %586 = @func_6381() /* ty=Tensor[(9, 13, 12), float32] */;
  %587 = cast(%586, dtype="int8") /* ty=Tensor[(9, 13, 12), int8] */;
  %588 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%585, dtype="int8") /* ty=Tensor[(9, 13, 12), int8] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %591 = cast(meta[relay.Constant][22] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
  %592 = reshape(%591, newshape=[1, 686]) /* ty=Tensor[(1, 686), float64] */;
  %593 = @func_5714(%592) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(14, 7, 7), float64], Tensor[(?, 686), bool], Tensor[(686), float64], Tensor[(72), float64]) */;
  %594 = right_shift(%589, %590) /* ty=Tensor[(9, 13, 12), int8] */;
  %595 = %593.5;
  (%594, %595, meta[relay.Constant][22] /* ty=Tensor[(686), float64] */)
}

def @func_8859() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) {
  %596 = cast(meta[relay.Constant][23] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %597 = reshape(%596, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %598 = @func_5513(%597) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(9, 13, 12), float32]) */;
  %599 = @func_3917() /* ty=Tensor[(9, 13, 12), bool] */;
  %600 = %598.0;
  (%599, %600, meta[relay.Constant][23] /* ty=Tensor[(28), int16] */)
}

def @func_11971() -> (Tensor[(9, 13, 12), bool],) {
  %601 = @func_10753() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %602 = %601.1;
  (%602,)
}

def @func_10013() -> (Tensor[(72), float64],) {
  %603 = @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */;
  %604 = %603.2;
  (%604,)
}

def @func_10328() -> (Tensor[(686), float64], Tensor[(3, 16, 7), int8], Tensor[(336), int8], Tensor[(72), float64], Tensor[(686), float64], Tensor[(9, 13, 12), bool]) {
  %605 = cast(meta[relay.Constant][24] /* ty=Tensor[(336), int8] */, dtype="int8") /* ty=Tensor[(336), int8] */;
  %606 = cast(meta[relay.Constant][24] /* ty=Tensor[(336), int8] */, dtype="int8") /* ty=Tensor[(336), int8] */;
  %607 = reshape(%605, newshape=[3, 16, 7]) /* ty=Tensor[(3, 16, 7), int8] */;
  %608 = reshape(%606, newshape=[3, 16, 7]) /* ty=Tensor[(3, 16, 7), int8] */;
  %609 = @func_3178() /* ty=Tensor[(686), float64] */;
  %610 = cast(%609, dtype="float64") /* ty=Tensor[(686), float64] */;
  %611 = reshape(%610, newshape=[7, 98]) /* ty=Tensor[(7, 98), float64] */;
  %612 = @func_5209(%611) /* ty=(Tensor[(72), float64], Tensor[(7, 98), bool]) */;
  %613 = @func_7067() /* ty=(Tensor[(686), bool], Tensor[(686), float64]) */;
  %614 = @func_6548() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), int16], Tensor[(704), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) */;
  %615 = @func_8696(%607, %608) /* ty=Tensor[(3, 16, 7), int8] */;
  %616 = %612.0;
  %617 = %613.1;
  %618 = %614.0;
  (%609, %615, meta[relay.Constant][24] /* ty=Tensor[(336), int8] */, %616, %617, %618)
}

def @func_6805(%var_6795: Tensor[(343, 2), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) {
  %619 = cast(%var_6795, dtype="float64") /* ty=Tensor[(343, 2), float64] */;
  %620 = reshape(%619, newshape=[343, 2]) /* ty=Tensor[(343, 2), float64] */;
  %621 = @func_6362(%620) /* ty=(Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) */;
  %622 = @func_5744() /* ty=Tensor[(9, 13, 12), bool] */;
  %623 = %621.2;
  (%622, %623, %var_6795)
}

def @func_6362(%var_6349: Tensor[(343, 2), float64]) -> (Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) {
  %624 = @func_5567() /* ty=(Tensor[(72), float64], Tensor[(704), float64], Tensor[(4, 176), float64], Tensor[(7, 98), bool], Tensor[(686), float64]) */;
  %625 = cast(%var_6349, dtype="float64") /* ty=Tensor[(343, 2), float64] */;
  %626 = reshape(%625, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %627 = @func_5941(%626) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %628 = %624.0;
  %629 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
  %630 = %627.2;
  (%628, %629, %630, %var_6349)
}

def @func_5405(%var_5334: Tensor[(9, 13, 12), bool], %var_5376: Tensor[(48), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64]) {
  %631 = @func_3494() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %632 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %633 = %632.0;
  %634 = cast(%var_5334, dtype="uint8") /* ty=Tensor[(9, 13, 12), uint8] */;
  %635 = shape_of(%633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(%633, dtype="uint8") /* ty=Tensor[(9, 13, 12), uint8] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %638 = bitwise_and(%636, %637) /* ty=Tensor[(9, 13, 12), uint8] */;
  %639 = cast(%638, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  %640 = cast(%var_5376, dtype="float64") /* ty=Tensor[(48), float64] */;
  %641 = reshape(%640, newshape=[16, 1, 3]) /* ty=Tensor[(16, 1, 3), float64] */;
  %642 = %631.0;
  %643 = log10(%639) /* ty=Tensor[(9, 13, 12), float32] */;
  %644 = @func_4568(%641) /* ty=Tensor[(16, 1, 3), float64] */;
  (%642, %643, %644, %var_5376)
}

def @func_7035() -> (Tensor[(704), float64], Tensor[(72), float64]) {
  %645 = @func_3961() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), float64], Tensor[(704), float64]) */;
  %646 = @func_5799() /* ty=(Tensor[(72), float64], Tensor[(72), float64]) */;
  %647 = %645.2;
  %648 = %646.1;
  (%647, %648)
}

def @func_11119() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %649 = @func_3682() /* ty=(Tensor[(11, 13, 7), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %650 = @func_3682() /* ty=(Tensor[(11, 13, 7), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %651 = %649.1;
  %652 = %650.2;
  (%651, %652)
}

def @func_2234(%var_2227: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), float64], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) {
  %653 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  %654 = cast(%653, dtype="float64") /* ty=Tensor[(9, 13, 12), float64] */;
  %655 = cast(%var_2227, dtype="float64") /* ty=Tensor[(686), float64] */;
  %656 = cast(%var_2227, dtype="float64") /* ty=Tensor[(686), float64] */;
  %657 = reshape(%655, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %658 = reshape(%656, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %659 = rsqrt(%654) /* ty=Tensor[(9, 13, 12), float64] */;
  %660 = @func_803(%657, %658) /* ty=Tensor[(14, 7, 7), float64] */;
  (%659, %660, %var_2227)
}

def @func_6152() -> Tensor[(10, 7, 13), float64] {
  %661 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(10, 7, 13), float64] */;
  cosh(%661) /* ty=Tensor[(10, 7, 13), float64] */
}

def @func_3065() -> Tensor[(9, 13, 12), bool] {
  @func_2614() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_10753() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %662 = @func_9998() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %663 = @func_7929() /* ty=Tensor[(9, 13, 12), bool] */;
  %664 = %662.0;
  (%663, %664)
}

def @func_12462() -> (Tensor[(9, 13, 12), bool],) {
  %665 = @func_4258() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(9, 13, 12), float32]) */;
  %666 = %665.0;
  (%666,)
}

def @func_5607() -> Tensor[(686), float64] {
  @func_3178() /* ty=Tensor[(686), float64] */
}

def @func_3682() -> (Tensor[(11, 13, 7), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %667 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 13, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 13, 7), float64] */;
  %668 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %669 = asinh(%667) /* ty=Tensor[(11, 13, 7), float64] */;
  %670 = %668.1;
  %671 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
  (%669, %670, %671)
}

def @func_10689() -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64]) {
  %672 = @func_9400() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %673 = %672.0;
  %674 = @func_3178() /* ty=Tensor[(686), float64] */;
  (%673, %674)
}

def @func_4280() -> Tensor[(9, 13, 12), float32] {
  %675 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %676 = %675.0;
  %677 = cast(%676, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  acos(%677) /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_2594() -> (Tensor[(9, 13, 12), float32],) {
  %678 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  %679 = cast(%678, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  %680 = exp(%679) /* ty=Tensor[(9, 13, 12), float32] */;
  (%680,)
}

def @func_2483() -> Tensor[(9, 13, 12), float64] {
  %681 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  %682 = cast(%681, dtype="float64") /* ty=Tensor[(9, 13, 12), float64] */;
  cos(%682) /* ty=Tensor[(9, 13, 12), float64] */
}

def @func_4258() -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(9, 13, 12), float32]) {
  %683 = @func_3328() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %684 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %685 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
  %686 = cast(%685, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  %687 = %683.1;
  %688 = %684.1;
  %689 = atanh(%686) /* ty=Tensor[(9, 13, 12), float32] */;
  (%687, %688, %689)
}

def @func_8646() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %690 = @func_6548() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), int16], Tensor[(704), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) */;
  %691 = @func_5303() /* ty=Tensor[(9, 13, 12), bool] */;
  %692 = %690.3;
  (%691, %692)
}

def @func_10587() -> (Tensor[(9, 13, 12), bool], Tensor[(14, 13, 5), float32], Tensor[(910), float32]) {
  %693 = @func_6756() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %694 = cast(meta[relay.Constant][27] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %695 = cast(meta[relay.Constant][27] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %696 = reshape(%694, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %697 = reshape(%695, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %698 = @func_7332(%696, %697) /* ty=(Tensor[(14, 13, 5), float32],) */;
  %699 = %693.0;
  %700 = %698.0;
  (%699, %700, meta[relay.Constant][27] /* ty=Tensor[(910), float32] */)
}

def @func_9841() -> Tensor[(9, 13, 12), bool] {
  %701 = @func_6548() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), int16], Tensor[(704), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) */;
  %701.3
}

def @func_11151(%var_11145: Tensor[(686), float64]) -> (Tensor[(4, 16, 11), float32], Tensor[(9, 13, 12), float32], Tensor[(686), float64], Tensor[(686), float32], Tensor[(9, 13, 12), bool]) {
  %702 = @func_7158() /* ty=(Tensor[(704), float64], Tensor[(9, 13, 12), float32], Tensor[(4, 16, 11), int16]) */;
  %703 = %702.2;
  %704 = cast(%703, dtype="float32") /* ty=Tensor[(4, 16, 11), float32] */;
  %705 = cast(%var_11145, dtype="float64") /* ty=Tensor[(686), float64] */;
  %706 = reshape(%705, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %707 = @func_6994(%706) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(28), int16], Tensor[(704), float64], Tensor[(6, 8, 3), bool], Tensor[(308), int16], Tensor[(686), float64], Tensor[(686), float64]) */;
  %708 = cast(%var_11145, dtype="float32") /* ty=Tensor[(686), float32] */;
  %709 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %710 = acos(%704) /* ty=Tensor[(4, 16, 11), float32] */;
  %711 = @func_4280() /* ty=Tensor[(9, 13, 12), float32] */;
  %712 = %707.6;
  %713 = atan(%708) /* ty=Tensor[(686), float32] */;
  %714 = %709.0;
  (%710, %711, %712, %713, %714)
}

def @func_7067() -> (Tensor[(686), bool], Tensor[(686), float64]) {
  %715 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %716 = %715.1;
  %717 = cast(meta[relay.Constant][28] /* ty=Tensor[(686), float64] */, dtype="bool") /* ty=Tensor[(686), bool] */;
  %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(1), int32] */;
  %719 = cast(%716, dtype="bool") /* ty=Tensor[(686), bool] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?), bool] */;
  %721 = cast(meta[relay.Constant][28] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
  %722 = logical_or(%719, %720) /* ty=Tensor[(686), bool] */;
  %723 = acos(%721) /* ty=Tensor[(686), float64] */;
  (%722, %723)
}

def @func_11957() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) {
  %724 = @func_9894() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %725 = @func_7158() /* ty=(Tensor[(704), float64], Tensor[(9, 13, 12), float32], Tensor[(4, 16, 11), int16]) */;
  %726 = %724.0;
  %727 = %725.1;
  (%726, %727)
}

def @func_11676() -> Tensor[(9, 13, 12), bool] {
  %728 = @func_7107() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %728.0
}

def @func_12538() -> (Tensor[(9, 13, 12), bool],) {
  %729 = @func_10753() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %730 = %729.1;
  (%730,)
}

def @func_11937() -> (Tensor[(9, 13, 12), bool],) {
  %731 = @func_5303() /* ty=Tensor[(9, 13, 12), bool] */;
  (%731,)
}

def @func_2614() -> Tensor[(9, 13, 12), bool] {
  %732 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %732.1
}

def @func_7332(%var_7325: Tensor[(14, 13, 5), float32], %var_7326: Tensor[(14, 13, 5), float32]) -> (Tensor[(14, 13, 5), float32],) {
  %733 = cast(%var_7326, dtype="float32") /* ty=Tensor[(14, 13, 5), float32] */;
  %734 = shape_of(%var_7325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %735 = cast(%var_7325, dtype="float32") /* ty=Tensor[(14, 13, 5), float32] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %737 = divide(%735, %736) /* ty=Tensor[(14, 13, 5), float32] */;
  (%737,)
}

def @func_11219() -> (Tensor[(11, 4, 15), float32], Tensor[(72), float64]) {
  %738 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 4, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 4, 15), float32] */;
  %739 = @func_7035() /* ty=(Tensor[(704), float64], Tensor[(72), float64]) */;
  %740 = cosh(%738) /* ty=Tensor[(11, 4, 15), float32] */;
  %741 = %739.1;
  (%740, %741)
}

def @func_8426(%var_8423: Tensor[(12, 5, 11), float64]) -> (Tensor[(12, 5, 11), float64],) {
  %742 = cast(%var_8423, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %743 = rsqrt(%742) /* ty=Tensor[(12, 5, 11), float64] */;
  (%743,)
}

def @func_803(%var_798: Tensor[(14, 7, 7), float64], %var_799: Tensor[(14, 7, 7), float64]) -> Tensor[(14, 7, 7), float64] {
  %744 = cast(%var_799, dtype="float64") /* ty=Tensor[(14, 7, 7), float64] */;
  %745 = shape_of(%var_798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%var_798, dtype="float64") /* ty=Tensor[(14, 7, 7), float64] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%746, %747) /* ty=Tensor[(14, 7, 7), float64] */
}

def @func_2850() -> (Tensor[(72), float64],) {
  %748 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %749 = %748.2;
  (%749,)
}

def @func_5838(%var_5832: Tensor[(11, 2, 2), float64], %var_5833: Tensor[(11, 2, 2), float64]) -> Tensor[(11, 2, 2), bool] {
  %750 = cast(%var_5833, dtype="bool") /* ty=Tensor[(11, 2, 2), bool] */;
  %751 = shape_of(%var_5832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %752 = cast(%var_5832, dtype="bool") /* ty=Tensor[(11, 2, 2), bool] */;
  %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%752, %753) /* ty=Tensor[(11, 2, 2), bool] */
}

def @func_3494() -> (Tensor[(9, 13, 12), bool],) {
  %754 = @func_3484() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %755 = %754.0;
  (%755,)
}

def @func_10882(%var_10834: Tensor[(7, 6, 10), bool], %var_10835: Tensor[(7, 6, 10), bool], %var_10867: Tensor[(7, 6, 10), bool]) -> (Tensor[(7, 6, 10), bool], Tensor[(7, 6, 10), bool], Tensor[(7, 6, 10), float64]) {
  %756 = cast(%var_10835, dtype="bool") /* ty=Tensor[(7, 6, 10), bool] */;
  %757 = shape_of(%var_10834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %758 = cast(%var_10834, dtype="bool") /* ty=Tensor[(7, 6, 10), bool] */;
  %759 = dyn.reshape(%756, %757, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %760 = cast(%var_10867, dtype="bool") /* ty=Tensor[(7, 6, 10), bool] */;
  %761 = shape_of(%var_10834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(%var_10834, dtype="bool") /* ty=Tensor[(7, 6, 10), bool] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %764 = cast(%var_10835, dtype="float64") /* ty=Tensor[(7, 6, 10), float64] */;
  %765 = logical_or(%758, %759) /* ty=Tensor[(7, 6, 10), bool] */;
  %766 = not_equal(%762, %763) /* ty=Tensor[(7, 6, 10), bool] */;
  %767 = acos(%764) /* ty=Tensor[(7, 6, 10), float64] */;
  (%765, %766, %767)
}

def @func_2287(%var_2281: Tensor[(28), int16]) -> (Tensor[(9, 13, 12), bool], Tensor[(4, 1, 7), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) {
  %768 = cast(%var_2281, dtype="int16") /* ty=Tensor[(28), int16] */;
  %769 = cast(meta[relay.Constant][30] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %770 = cast(meta[relay.Constant][31] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
  %771 = reshape(%768, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), int16] */;
  %772 = reshape(%769, newshape=[4, 11, 7]) /* ty=Tensor[(4, 11, 7), int16] */;
  %773 = reshape(%770, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %774 = @func_1958(%771, %772, %773) /* ty=(Tensor[(4, 11, 7), bool], Tensor[(4, 1, 7), float64], Tensor[(6, 8, 3), bool], Tensor[(8, 18), float64], Tensor[(686), float64]) */;
  %775 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  %776 = %774.1;
  (%775, %776, %var_2281, meta[relay.Constant][30] /* ty=Tensor[(308), int16] */, meta[relay.Constant][31] /* ty=Tensor[(686), float64] */)
}

def @func_8230() -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(9, 13, 12), bool]) {
  %777 = @func_5086() /* ty=(Tensor[(686), float64],) */;
  %778 = %777.0;
  %779 = cast(%778, dtype="float64") /* ty=Tensor[(686), float64] */;
  %780 = reshape(%779, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %781 = @func_3785(%780) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %782 = @func_4647() /* ty=Tensor[(9, 13, 12), bool] */;
  %783 = %781.0;
  (%782, %778, %783)
}

def @func_11183() -> (Tensor[(10, 7, 13), float64], Tensor[(9, 13, 12), bool]) {
  %784 = @func_9400() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %785 = @func_6152() /* ty=Tensor[(10, 7, 13), float64] */;
  %786 = %784.0;
  (%785, %786)
}

def @func_11073(%var_11060: Tensor[(24, 2), float64]) -> (Tensor[(72), float64], Tensor[(48), float64], Tensor[(24, 2), float64]) {
  %787 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %788 = cast(%var_11060, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
  %789 = reshape(%788, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %790 = @func_11014(%789) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(14, 13, 5), bool], Tensor[(48), float64], Tensor[(48), float64]) */;
  %791 = %787.2;
  %792 = %790.3;
  (%791, %792, %var_11060)
}

def @func_6841(%var_6828: Tensor[(10, 7, 13), float64]) -> Tensor[(10, 7, 13), float32] {
  %793 = @func_6152() /* ty=Tensor[(10, 7, 13), float64] */;
  %794 = cast(%var_6828, dtype="float32") /* ty=Tensor[(10, 7, 13), float32] */;
  %795 = shape_of(%793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %796 = cast(%793, dtype="float32") /* ty=Tensor[(10, 7, 13), float32] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%796, %797) /* ty=Tensor[(10, 7, 13), float32] */
}

def @func_6726() -> (Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float64], Tensor[(686), float64]) {
  %798 = @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */;
  %799 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
  %800 = cast(%799, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
  %801 = reshape(%800, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), bool] */;
  %802 = @func_4175(%801) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64]) */;
  %803 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %804 = %798.2;
  %805 = %802.1;
  %806 = %803.1;
  (%799, %804, %805, %806)
}

def @func_5799() -> (Tensor[(72), float64], Tensor[(72), float64]) {
  %807 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %808 = @func_5478() /* ty=(Tensor[(72), float64],) */;
  %809 = %807.2;
  %810 = %808.0;
  (%809, %810)
}

def @func_11014(%var_11012: Tensor[(48), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(14, 13, 5), bool], Tensor[(48), float64], Tensor[(48), float64]) {
  %811 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 910), float32] */, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
  %812 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 910), float32] */, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
  %813 = reshape(%811, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %814 = reshape(%812, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %815 = @func_7332(%813, %814) /* ty=(Tensor[(14, 13, 5), float32],) */;
  %816 = %815.0;
  %817 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 910), float32] */, dtype="bool") /* ty=Tensor[(1, 910), bool] */;
  %818 = shape_of(%816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %819 = cast(%816, dtype="bool") /* ty=Tensor[(14, 13, 5), bool] */;
  %820 = dyn.reshape(%817, %818, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %821 = @func_6381() /* ty=Tensor[(9, 13, 12), float32] */;
  %822 = cast(%821, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
  %823 = cast(%var_11012, dtype="float64") /* ty=Tensor[(48), float64] */;
  %824 = reshape(%822, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), bool] */;
  %825 = reshape(%823, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %826 = @func_5405(%824, %825) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64]) */;
  %827 = logical_and(%819, %820) /* ty=Tensor[(14, 13, 5), bool] */;
  %828 = %826.3;
  (%821, %827, %828, %var_11012)
}

def @func_3557(%var_3539: Tensor[(1859), float64]) -> (Tensor[(686), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(13, 11, 13), float64], Tensor[(1859), float64]) {
  %829 = @func_3484() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %830 = cast(%var_3539, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %831 = cast(%var_3539, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %832 = reshape(%830, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %833 = reshape(%831, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %834 = @func_2774(%832, %833) /* ty=(Tensor[(13, 11, 13), float64], Tensor[(9, 13, 12), float32]) */;
  %835 = @func_3178() /* ty=Tensor[(686), float64] */;
  %836 = %829.0;
  %837 = @func_3346() /* ty=Tensor[(9, 13, 12), bool] */;
  %838 = %834.0;
  (%835, %836, %837, %838, %var_3539)
}

def @func_3346() -> Tensor[(9, 13, 12), bool] {
  @func_2191() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_11896() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %839 = @func_5768() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %840 = @func_9400() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %841 = %839.0;
  %842 = @func_10039() /* ty=Tensor[(9, 13, 12), bool] */;
  %843 = %840.0;
  (%841, %842, %843)
}

def @func_7462() -> (Tensor[(9, 13, 12), float32],) {
  %844 = @func_6548() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), int16], Tensor[(704), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) */;
  %845 = %844.4;
  (%845,)
}

def @main(%var_12823: Tensor[(14, 14, 5), float64]) -> Tensor[(14, 14, 5), float64] {
  %846 = cast(%var_12823, dtype="float64") /* ty=Tensor[(14, 14, 5), float64] */;
  tan(%846) /* ty=Tensor[(14, 14, 5), float64] */
}

def @func_4568(%var_4563: Tensor[(16, 1, 3), float64]) -> Tensor[(16, 1, 3), float64] {
  %847 = cast(%var_4563, dtype="float64") /* ty=Tensor[(16, 1, 3), float64] */;
  sinh(%847) /* ty=Tensor[(16, 1, 3), float64] */
}

def @func_12400() -> (Tensor[(9, 13, 12), bool],) {
  %848 = @func_8947() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %849 = %848.0;
  (%849,)
}

def @func_9894() -> (Tensor[(9, 13, 12), bool],) {
  %850 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
  (%850,)
}

def @func_5478() -> (Tensor[(72), float64],) {
  %851 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %852 = %851.2;
  (%852,)
}

def @func_2356() -> (Tensor[(9, 13, 12), bool],) {
  %853 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  (%853,)
}

def @func_6682() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64], Tensor[(9, 13, 12), bool], Tensor[(7, 98), int8]) {
  %854 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 98), float64] */, dtype="float64") /* ty=Tensor[(7, 98), float64] */;
  %855 = reshape(%854, newshape=[343, 2]) /* ty=Tensor[(343, 2), float64] */;
  %856 = @func_2436(%855) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(343, 2), float64]) */;
  %857 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 98), float64] */, dtype="float64") /* ty=Tensor[(7, 98), float64] */;
  %858 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 98), float64] */, dtype="float64") /* ty=Tensor[(7, 98), float64] */;
  %859 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 98), float64] */, dtype="float64") /* ty=Tensor[(7, 98), float64] */;
  %860 = reshape(%857, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %861 = reshape(%858, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %862 = reshape(%859, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %863 = @func_4811(%860, %861, %862) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), uint64], Tensor[(686), float64], Tensor[(686), uint32], Tensor[(686), bool]) */;
  %864 = %863.2;
  %865 = cast(%864, dtype="int8") /* ty=Tensor[(686), int8] */;
  %866 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(7, 98), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %867 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 98), float64] */, dtype="int8") /* ty=Tensor[(7, 98), int8] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %869 = @func_5744() /* ty=Tensor[(9, 13, 12), bool] */;
  %870 = @func_2483() /* ty=Tensor[(9, 13, 12), float64] */;
  %871 = %856.0;
  %872 = bitwise_or(%867, %868) /* ty=Tensor[(7, 98), int8] */;
  (%869, %870, %871, %872)
}

def @func_2191() -> Tensor[(9, 13, 12), bool] {
  %873 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 13, 12), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  %874 = log2(%873) /* ty=Tensor[(9, 13, 12), float32] */;
  %875 = cast(meta[relay.Constant][34] /* ty=Tensor[(9, 13, 12), float32] */, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
  %876 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%874, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%877, %878) /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_7107() -> (Tensor[(9, 13, 12), bool],) {
  %879 = @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %880 = %879.0;
  (%880,)
}

def @func_10378() -> Tensor[(9, 13, 12), float32] {
  %881 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %881.0
}

def @func_9998() -> (Tensor[(9, 13, 12), bool],) {
  %882 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  (%882,)
}

def @func_8818() -> Tensor[(9, 13, 12), int64] {
  %883 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %883.0
}

def @func_4937() -> Tensor[(9, 13, 12), float32] {
  %884 = @func_2594() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %884.0
}

def @func_12811() -> (Tensor[(686), float64], Tensor[(72), float64]) {
  %885 = @func_11624() /* ty=Tensor[(686), float64] */;
  %886 = cast(%885, dtype="float64") /* ty=Tensor[(686), float64] */;
  %887 = reshape(%886, newshape=[343, 2]) /* ty=Tensor[(343, 2), float64] */;
  %888 = @func_6362(%887) /* ty=(Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) */;
  %889 = %888.0;
  (%885, %889)
}

def @func_3785(%var_3783: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) {
  %890 = @func_3494() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %891 = cast(%var_3783, dtype="float64") /* ty=Tensor[(686), float64] */;
  %892 = reshape(%891, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %893 = @func_2234(%892) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %894 = %890.0;
  %895 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
  %896 = %893.1;
  (%894, %895, %896, %var_3783)
}

def @func_10107(%var_10043: Tensor[(1, 7, 7), uint64], %var_10044: Tensor[(1, 7, 7), uint64], %var_10085: Tensor[(28), int16], %var_10092: Tensor[(686), float64]) -> (Tensor[(?, 7, 7), bool], Tensor[(?, 7, 7), bool], Tensor[(28), int16], Tensor[(686), int16], Tensor[(686), float64]) {
  %897 = cast(%var_10044, dtype="bool") /* ty=Tensor[(1, 7, 7), bool] */;
  %898 = shape_of(%var_10043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %899 = cast(%var_10043, dtype="bool") /* ty=Tensor[(1, 7, 7), bool] */;
  %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %901 = cast(%var_10044, dtype="bool") /* ty=Tensor[(1, 7, 7), bool] */;
  %902 = shape_of(%var_10043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %903 = cast(%var_10043, dtype="bool") /* ty=Tensor[(1, 7, 7), bool] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %905 = cast(%var_10085, dtype="int16") /* ty=Tensor[(28), int16] */;
  %906 = reshape(%905, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %907 = @func_2287(%906) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 1, 7), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */;
  %908 = %907.4;
  %909 = cast(%var_10092, dtype="int16") /* ty=Tensor[(686), int16] */;
  %910 = shape_of(%908, dtype="int32") /* ty=Tensor[(1), int32] */;
  %911 = cast(%908, dtype="int16") /* ty=Tensor[(686), int16] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?), int16] */;
  %913 = @func_6328() /* ty=(Tensor[(686), float64], Tensor[(9, 13, 12), float64], Tensor[(1404), bool]) */;
  %914 = not_equal(%899, %900) /* ty=Tensor[(?, 7, 7), bool] */;
  %915 = logical_or(%903, %904) /* ty=Tensor[(?, 7, 7), bool] */;
  %916 = bitwise_xor(%911, %912) /* ty=Tensor[(686), int16] */;
  %917 = %913.0;
  (%914, %915, %var_10085, %916, %917)
}

def @func_11546() -> (Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64]) {
  %918 = @func_5478() /* ty=(Tensor[(72), float64],) */;
  %919 = @func_6135() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %920 = @func_5086() /* ty=(Tensor[(686), float64],) */;
  %921 = %918.0;
  %922 = %919.1;
  %923 = %920.0;
  (%921, %922, %923)
}

def @func_8050() -> (Tensor[(9, 13, 12), bool],) {
  %924 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  (%924,)
}

def @func_1046(%var_1002: Tensor[(6, 8, 3), float64], %var_1028: Tensor[(686), float64]) -> (Tensor[(14, 7, 7), float64], Tensor[(686), float64], Tensor[(6, 8, 3), bool]) {
  %925 = cast(%var_1028, dtype="float64") /* ty=Tensor[(686), float64] */;
  %926 = cast(%var_1028, dtype="float64") /* ty=Tensor[(686), float64] */;
  %927 = reshape(%925, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %928 = reshape(%926, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %929 = cast(%var_1002, dtype="float64") /* ty=Tensor[(6, 8, 3), float64] */;
  %930 = cosh(%929) /* ty=Tensor[(6, 8, 3), float64] */;
  %931 = cast(%var_1002, dtype="int8") /* ty=Tensor[(6, 8, 3), int8] */;
  %932 = shape_of(%930, dtype="int32") /* ty=Tensor[(3), int32] */;
  %933 = cast(%930, dtype="int8") /* ty=Tensor[(6, 8, 3), int8] */;
  %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %935 = add(%933, %934) /* ty=Tensor[(6, 8, 3), int8] */;
  %936 = cast(%var_1002, dtype="bool") /* ty=Tensor[(6, 8, 3), bool] */;
  %937 = shape_of(%935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%935, dtype="bool") /* ty=Tensor[(6, 8, 3), bool] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %940 = @func_803(%927, %928) /* ty=Tensor[(14, 7, 7), float64] */;
  %941 = greater(%938, %939) /* ty=Tensor[(6, 8, 3), bool] */;
  (%940, %var_1028, %941)
}

def @func_12124(%var_12086: Tensor[(14, 3, 3), int32], %var_12087: Tensor[(14, 3, 3), int32], %var_12095: Tensor[(14, 3, 3), int32]) -> (Tensor[(14, 3, 3), uint64], Tensor[(14, 3, 3), float32], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(72), float64]) {
  %942 = cast(%var_12087, dtype="int32") /* ty=Tensor[(14, 3, 3), int32] */;
  %943 = shape_of(%var_12086, dtype="int32") /* ty=Tensor[(3), int32] */;
  %944 = cast(%var_12086, dtype="int32") /* ty=Tensor[(14, 3, 3), int32] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %946 = maximum(%944, %945) /* ty=Tensor[(14, 3, 3), int32] */;
  %947 = cast(%var_12095, dtype="uint64") /* ty=Tensor[(14, 3, 3), uint64] */;
  %948 = shape_of(%946, dtype="int32") /* ty=Tensor[(3), int32] */;
  %949 = cast(%946, dtype="uint64") /* ty=Tensor[(14, 3, 3), uint64] */;
  %950 = dyn.reshape(%947, %948, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %951 = cast(%var_12087, dtype="float32") /* ty=Tensor[(14, 3, 3), float32] */;
  %952 = @func_3494() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %953 = @func_5799() /* ty=(Tensor[(72), float64], Tensor[(72), float64]) */;
  %954 = left_shift(%949, %950) /* ty=Tensor[(14, 3, 3), uint64] */;
  %955 = acosh(%951) /* ty=Tensor[(14, 3, 3), float32] */;
  %956 = %952.0;
  %957 = @func_10424() /* ty=Tensor[(9, 13, 12), float32] */;
  %958 = %953.0;
  (%954, %955, %956, %957, %958)
}

def @func_3107() -> (Tensor[(9, 13, 12), float32],) {
  %959 = @func_3019() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %960 = %959.0;
  (%960,)
}

def @func_6381() -> Tensor[(9, 13, 12), float32] {
  %961 = @func_5908() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %961.0
}

def @func_5445(%var_5443: Tensor[(36, 2), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(36, 2), float64]) {
  %962 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %963 = @func_3494() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %964 = cast(%var_5443, dtype="float64") /* ty=Tensor[(36, 2), float64] */;
  %965 = reshape(%964, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %966 = @func_2817(%965) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(686), float64], Tensor[(72), float64], Tensor[(9, 13, 12), bool]) */;
  %967 = %962.0;
  %968 = %963.0;
  %969 = %966.2;
  (%967, %968, %969, %var_5443)
}

def @func_2994(%var_2973: Tensor[(28), int16]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) {
  %970 = @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %971 = cast(%var_2973, dtype="int16") /* ty=Tensor[(28), int16] */;
  %972 = reshape(%971, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %973 = @func_2287(%972) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 1, 7), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */;
  %974 = %970.0;
  %975 = %973.0;
  (%974, %975, %var_2973)
}

def @func_4900(%var_4895: Tensor[(1, 308), int16], %var_4896: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(28), int16], Tensor[(1, 308), int16], Tensor[(686), float64]) {
  %976 = cast(meta[relay.Constant][35] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %977 = cast(%var_4895, dtype="int16") /* ty=Tensor[(1, 308), int16] */;
  %978 = cast(%var_4896, dtype="float64") /* ty=Tensor[(686), float64] */;
  %979 = reshape(%976, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), int16] */;
  %980 = reshape(%977, newshape=[4, 11, 7]) /* ty=Tensor[(4, 11, 7), int16] */;
  %981 = reshape(%978, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %982 = @func_1958(%979, %980, %981) /* ty=(Tensor[(4, 11, 7), bool], Tensor[(4, 1, 7), float64], Tensor[(6, 8, 3), bool], Tensor[(8, 18), float64], Tensor[(686), float64]) */;
  %983 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
  %984 = %982.4;
  (%983, %984, meta[relay.Constant][35] /* ty=Tensor[(28), int16] */, %var_4895, %var_4896)
}

def @func_12355(%var_12321: Tensor[(12, 4), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(12, 4), float64], Tensor[(72), float64]) {
  %985 = cast(%var_12321, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %986 = reshape(%985, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %987 = @func_11737(%986) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(48), float64], Tensor[(48), float64], Tensor[(9, 13, 12), float32]) */;
  %988 = @func_2850() /* ty=(Tensor[(72), float64],) */;
  %989 = @func_10511() /* ty=Tensor[(9, 13, 12), float32] */;
  %990 = @func_5303() /* ty=Tensor[(9, 13, 12), bool] */;
  %991 = %987.0;
  %992 = %988.0;
  (%989, %990, %991, %var_12321, %992)
}

def @func_8728() -> (Tensor[(9, 13, 12), int8], Tensor[(9, 13, 12), bool]) {
  %993 = @func_8188() /* ty=(Tensor[(9, 13, 12), int8], Tensor[(72), float64], Tensor[(686), float64]) */;
  %994 = %993.0;
  %995 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  (%994, %995)
}

def @func_5941(%var_5937: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) {
  %996 = @func_4647() /* ty=Tensor[(9, 13, 12), bool] */;
  %997 = cast(%996, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  %998 = cast(%var_5937, dtype="float64") /* ty=Tensor[(686), float64] */;
  %999 = reshape(%998, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %1000 = @func_3785(%999) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %1001 = sigmoid(%997) /* ty=Tensor[(9, 13, 12), float32] */;
  %1002 = %1000.2;
  (%1001, %1002, %var_5937)
}

def @func_10940() -> Tensor[(9, 13, 12), bool] {
  %1003 = @func_8557() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %1003.0
}

def @func_6328() -> (Tensor[(686), float64], Tensor[(9, 13, 12), float64], Tensor[(1404), bool]) {
  %1004 = @func_3178() /* ty=Tensor[(686), float64] */;
  %1005 = cast(%1004, dtype="float32") /* ty=Tensor[(686), float32] */;
  %1006 = exp(%1005) /* ty=Tensor[(686), float32] */;
  %1007 = cast(%1004, dtype="bool") /* ty=Tensor[(686), bool] */;
  %1008 = shape_of(%1006, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1009 = cast(%1006, dtype="bool") /* ty=Tensor[(686), bool] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1011 = less(%1009, %1010) /* ty=Tensor[(686), bool] */;
  %1012 = cast(%1011, dtype="float64") /* ty=Tensor[(686), float64] */;
  %1013 = shape_of(%1004, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1014 = cast(%1004, dtype="float64") /* ty=Tensor[(686), float64] */;
  %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1016 = cast(meta[relay.Constant][36] /* ty=Tensor[(1404), bool] */, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %1017 = reshape(%1016, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), bool] */;
  %1018 = @func_4175(%1017) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64]) */;
  %1019 = floor_divide(%1014, %1015) /* ty=Tensor[(686), float64] */;
  %1020 = %1018.1;
  (%1019, %1020, meta[relay.Constant][36] /* ty=Tensor[(1404), bool] */)
}

def @func_11737(%var_11715: Tensor[(48), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(48), float64], Tensor[(48), float64], Tensor[(9, 13, 12), float32]) {
  %1021 = @func_7462() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %1022 = %1021.0;
  %1023 = cast(%1022, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
  %1024 = cast(%var_11715, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1025 = reshape(%1023, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), bool] */;
  %1026 = reshape(%1024, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1027 = @func_5405(%1025, %1026) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64]) */;
  %1028 = @func_2594() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %1029 = %1027.3;
  %1030 = %1028.0;
  (%1022, %1029, %var_11715, %1030)
}

def @func_8390() -> (Tensor[(9, 13, 12), float32], Tensor[(686), uint16], Tensor[(9, 13, 12), bool], Tensor[(686), float32]) {
  %1031 = @func_3107() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %1032 = @func_8188() /* ty=(Tensor[(9, 13, 12), int8], Tensor[(72), float64], Tensor[(686), float64]) */;
  %1033 = %1032.2;
  %1034 = cast(meta[relay.Constant][37] /* ty=Tensor[(686), float64] */, dtype="uint16") /* ty=Tensor[(686), uint16] */;
  %1035 = shape_of(%1033, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1036 = cast(%1033, dtype="uint16") /* ty=Tensor[(686), uint16] */;
  %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1038 = @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */;
  %1039 = cast(%1033, dtype="float32") /* ty=Tensor[(686), float32] */;
  %1040 = %1031.0;
  %1041 = multiply(%1036, %1037) /* ty=Tensor[(686), uint16] */;
  %1042 = %1038.0;
  %1043 = sigmoid(%1039) /* ty=Tensor[(686), float32] */;
  (%1040, %1041, %1042, %1043)
}

def @func_3917() -> Tensor[(9, 13, 12), bool] {
  @func_2191() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_3149(%var_3131: Tensor[(28), int16]) -> (Tensor[(9, 13, 12), bool], Tensor[(308), int16], Tensor[(28), int16]) {
  %1044 = cast(%var_3131, dtype="int16") /* ty=Tensor[(28), int16] */;
  %1045 = reshape(%1044, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %1046 = @func_2287(%1045) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 1, 7), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */;
  %1047 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
  %1048 = %1046.3;
  (%1047, %1048, %var_3131)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3152(%var_3150: Tensor[(28), int16]) -> (Tensor[(9, 13, 12), bool], Tensor[(308), int16], Tensor[(28), int16]) {
  @func_3149(%var_3150) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(308), int16], Tensor[(28), int16]) */
}

def @func_3963() -> (Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), float64], Tensor[(704), float64]) {
  @func_3961() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), float64], Tensor[(704), float64]) */
}

def @func_10690() -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64]) {
  %3 = fn () -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64]) {
    %0 = @func_9400() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %1 = %0.0;
    %2 = @func_3178() /* ty=Tensor[(686), float64] */;
    (%1, %2)
  };
  %3() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), float64]) */
}

def @func_3484() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %4 = @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %5 = @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %6 = %4.0;
  %7 = %5.0;
  (%6, %7)
}

def @func_6364(%var_6363: Tensor[(343, 2), float64]) -> (Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) {
  %15 = fn (%var_6349: Tensor[(343, 2), float64]) -> (Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) {
    %8 = @func_5567() /* ty=(Tensor[(72), float64], Tensor[(704), float64], Tensor[(4, 176), float64], Tensor[(7, 98), bool], Tensor[(686), float64]) */;
    %9 = cast(%var_6349, dtype="float64") /* ty=Tensor[(343, 2), float64] */;
    %10 = reshape(%9, newshape=[686]) /* ty=Tensor[(686), float64] */;
    %11 = @func_5941(%10) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
    %12 = %8.0;
    %13 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
    %14 = %11.2;
    (%12, %13, %14, %var_6349)
  };
  %15(%var_6363) /* ty=(Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) */
}

def @func_3486() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  @func_3484() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */
}

def @func_10424() -> Tensor[(9, 13, 12), float32] {
  %16 = @func_8438() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %16.0
}

def @func_3067() -> Tensor[(9, 13, 12), bool] {
  @func_3065() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_11401() -> (Tensor[(9, 13, 12), bool],) {
  %18 = fn () -> (Tensor[(9, 13, 12), bool],) {
    %17 = @func_3917() /* ty=Tensor[(9, 13, 12), bool] */;
    (%17,)
  };
  %18() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_11740(%var_11738: Tensor[(48), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(48), float64], Tensor[(48), float64], Tensor[(9, 13, 12), float32]) {
  @func_11737(%var_11738) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(48), float64], Tensor[(48), float64], Tensor[(9, 13, 12), float32]) */
}

def @func_11505() -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) {
  @func_11503() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */
}

def @func_5305() -> Tensor[(9, 13, 12), bool] {
  @func_5303() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_10798() -> (Tensor[(9, 13, 12), bool],) {
  %19 = @func_10039() /* ty=Tensor[(9, 13, 12), bool] */;
  (%19,)
}

def @func_2817(%var_2805: Tensor[(72), float64]) -> (Tensor[(9, 13, 12), float64], Tensor[(686), float64], Tensor[(72), float64], Tensor[(9, 13, 12), bool]) {
  %20 = cast(%var_2805, dtype="float64") /* ty=Tensor[(72), float64] */;
  %21 = reshape(%20, newshape=[3, 3, 8]) /* ty=Tensor[(3, 3, 8), float64] */;
  %22 = @func_2017(%21) /* ty=(Tensor[(3, 3, 8), float64], Tensor[(3, 3, 8), float32], Tensor[(686), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */;
  %23 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %24 = @func_2483() /* ty=Tensor[(9, 13, 12), float64] */;
  %25 = %22.5;
  %26 = %23.1;
  (%24, %25, %var_2805, %26)
}

def @func_3330() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  @func_3328() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */
}

def @func_11119() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %27 = @func_3682() /* ty=(Tensor[(11, 13, 7), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %28 = @func_3682() /* ty=(Tensor[(11, 13, 7), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %29 = %27.1;
  %30 = %28.2;
  (%29, %30)
}

def @func_7158() -> (Tensor[(704), float64], Tensor[(9, 13, 12), float32], Tensor[(4, 16, 11), int16]) {
  %31 = @func_5567() /* ty=(Tensor[(72), float64], Tensor[(704), float64], Tensor[(4, 176), float64], Tensor[(7, 98), bool], Tensor[(686), float64]) */;
  %32 = %31.1;
  %33 = cast(%32, dtype="float64") /* ty=Tensor[(704), float64] */;
  %34 = reshape(%33, newshape=[4, 16, 11]) /* ty=Tensor[(4, 16, 11), float64] */;
  %35 = @func_2546(%34) /* ty=(Tensor[(4, 16, 11), int16], Tensor[(4, 16, 11), float64]) */;
  %36 = @func_6894() /* ty=Tensor[(9, 13, 12), float32] */;
  %37 = %35.0;
  (%32, %36, %37)
}

def @func_7415(%var_7372: Tensor[(704), float64], %var_7375: Tensor[(704), float64], %var_7384: Tensor[(1859, 1), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(28), int16], Tensor[(1859), float64], Tensor[(1859, 1), float64], Tensor[(72), float64], Tensor[(704), float32], Tensor[(9, 13, 12), bool]) {
  %38 = @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */;
  %39 = cast(%var_7372, dtype="float64") /* ty=Tensor[(704), float64] */;
  %40 = reshape(%39, newshape=[4, 176]) /* ty=Tensor[(4, 176), float64] */;
  %41 = @func_5234(%40) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(704), float64], Tensor[(28), int16], Tensor[(4, 176), float64], Tensor[(9, 13, 12), bool]) */;
  %42 = cast(%var_7384, dtype="float64") /* ty=Tensor[(1859, 1), float64] */;
  %43 = reshape(%42, newshape=[1859]) /* ty=Tensor[(1859), float64] */;
  %44 = @func_3557(%43) /* ty=(Tensor[(686), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(13, 11, 13), float64], Tensor[(1859), float64]) */;
  %45 = @func_7035() /* ty=(Tensor[(704), float64], Tensor[(72), float64]) */;
  %46 = cast(%var_7375, dtype="bool") /* ty=Tensor[(704), bool] */;
  %47 = shape_of(%var_7372, dtype="int32") /* ty=Tensor[(1), int32] */;
  %48 = cast(%var_7372, dtype="bool") /* ty=Tensor[(704), bool] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?), bool] */;
  %50 = logical_and(%48, %49) /* ty=Tensor[(704), bool] */;
  %51 = cast(%50, dtype="float32") /* ty=Tensor[(704), float32] */;
  %52 = @func_3328() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %53 = %38.3;
  %54 = %41.2;
  %55 = %44.4;
  %56 = %45.1;
  %57 = log2(%51) /* ty=Tensor[(704), float32] */;
  %58 = %52.0;
  (%53, %54, %55, %var_7384, %56, %57, %58)
}

def @func_1046(%var_1002: Tensor[(6, 8, 3), float64], %var_1028: Tensor[(686), float64]) -> (Tensor[(14, 7, 7), float64], Tensor[(686), float64], Tensor[(6, 8, 3), bool]) {
  %59 = cast(%var_1028, dtype="float64") /* ty=Tensor[(686), float64] */;
  %60 = cast(%var_1028, dtype="float64") /* ty=Tensor[(686), float64] */;
  %61 = reshape(%59, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %62 = reshape(%60, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %63 = cast(%var_1002, dtype="float64") /* ty=Tensor[(6, 8, 3), float64] */;
  %64 = cosh(%63) /* ty=Tensor[(6, 8, 3), float64] */;
  %65 = cast(%var_1002, dtype="int8") /* ty=Tensor[(6, 8, 3), int8] */;
  %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%64, dtype="int8") /* ty=Tensor[(6, 8, 3), int8] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %69 = add(%67, %68) /* ty=Tensor[(6, 8, 3), int8] */;
  %70 = cast(%var_1002, dtype="bool") /* ty=Tensor[(6, 8, 3), bool] */;
  %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%69, dtype="bool") /* ty=Tensor[(6, 8, 3), bool] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %74 = @func_803(%61, %62) /* ty=Tensor[(14, 7, 7), float64] */;
  %75 = greater(%72, %73) /* ty=Tensor[(6, 8, 3), bool] */;
  (%74, %var_1028, %75)
}

def @func_10546() -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64]) {
  %80 = fn () -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64]) {
    %76 = @func_8646() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
    %77 = @func_8784() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(686), float64], Tensor[(343, 2), float32]) */;
    %78 = %76.0;
    %79 = %77.2;
    (%78, %79)
  };
  %80() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), float64]) */
}

def @func_1958(%var_1921: Tensor[(4, 1, 7), int16], %var_1922: Tensor[(4, 11, 7), int16], %var_1951: Tensor[(686), float64]) -> (Tensor[(4, 11, 7), bool], Tensor[(4, 1, 7), float64], Tensor[(6, 8, 3), bool], Tensor[(8, 18), float64], Tensor[(686), float64]) {
  %81 = cast(%var_1921, dtype="bool") /* ty=Tensor[(4, 1, 7), bool] */;
  %82 = cast(%var_1922, dtype="bool") /* ty=Tensor[(4, 11, 7), bool] */;
  %83 = cast(%var_1921, dtype="float64") /* ty=Tensor[(4, 1, 7), float64] */;
  %84 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 18), float64] */, dtype="float64") /* ty=Tensor[(8, 18), float64] */;
  %85 = cast(%var_1951, dtype="float64") /* ty=Tensor[(686), float64] */;
  %86 = reshape(%84, newshape=[6, 8, 3]) /* ty=Tensor[(6, 8, 3), float64] */;
  %87 = reshape(%85, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %88 = @func_1046(%86, %87) /* ty=(Tensor[(14, 7, 7), float64], Tensor[(686), float64], Tensor[(6, 8, 3), bool]) */;
  %89 = greater(%81, %82) /* ty=Tensor[(4, 11, 7), bool] */;
  %90 = exp(%83) /* ty=Tensor[(4, 1, 7), float64] */;
  %91 = %88.2;
  (%89, %90, %91, meta[relay.Constant][0] /* ty=Tensor[(8, 18), float64] */, %var_1951)
}

def @func_4063() -> (Tensor[(9, 13, 12), bool],) {
  %92 = @func_3484() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %93 = %92.0;
  (%93,)
}

def @func_10886(%var_10883: Tensor[(7, 6, 10), bool], %var_10884: Tensor[(7, 6, 10), bool], %var_10885: Tensor[(7, 6, 10), bool]) -> (Tensor[(7, 6, 10), bool], Tensor[(7, 6, 10), bool], Tensor[(7, 6, 10), float64]) {
  %106 = fn (%var_10834: Tensor[(7, 6, 10), bool], %var_10835: Tensor[(7, 6, 10), bool], %var_10867: Tensor[(7, 6, 10), bool]) -> (Tensor[(7, 6, 10), bool], Tensor[(7, 6, 10), bool], Tensor[(7, 6, 10), float64]) {
    %94 = cast(%var_10835, dtype="bool") /* ty=Tensor[(7, 6, 10), bool] */;
    %95 = shape_of(%var_10834, dtype="int32") /* ty=Tensor[(3), int32] */;
    %96 = cast(%var_10834, dtype="bool") /* ty=Tensor[(7, 6, 10), bool] */;
    %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %98 = cast(%var_10867, dtype="bool") /* ty=Tensor[(7, 6, 10), bool] */;
    %99 = shape_of(%var_10834, dtype="int32") /* ty=Tensor[(3), int32] */;
    %100 = cast(%var_10834, dtype="bool") /* ty=Tensor[(7, 6, 10), bool] */;
    %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %102 = cast(%var_10835, dtype="float64") /* ty=Tensor[(7, 6, 10), float64] */;
    %103 = logical_or(%96, %97) /* ty=Tensor[(7, 6, 10), bool] */;
    %104 = not_equal(%100, %101) /* ty=Tensor[(7, 6, 10), bool] */;
    %105 = acos(%102) /* ty=Tensor[(7, 6, 10), float64] */;
    (%103, %104, %105)
  };
  %106(%var_10883, %var_10884, %var_10885) /* ty=(Tensor[(7, 6, 10), bool], Tensor[(7, 6, 10), bool], Tensor[(7, 6, 10), float64]) */
}

def @func_8189() -> (Tensor[(9, 13, 12), int8], Tensor[(72), float64], Tensor[(686), float64]) {
  %118 = fn () -> (Tensor[(9, 13, 12), int8], Tensor[(72), float64], Tensor[(686), float64]) {
    %107 = @func_3346() /* ty=Tensor[(9, 13, 12), bool] */;
    %108 = @func_6381() /* ty=Tensor[(9, 13, 12), float32] */;
    %109 = cast(%108, dtype="int8") /* ty=Tensor[(9, 13, 12), int8] */;
    %110 = shape_of(%107, dtype="int32") /* ty=Tensor[(3), int32] */;
    %111 = cast(%107, dtype="int8") /* ty=Tensor[(9, 13, 12), int8] */;
    %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %113 = cast(meta[relay.Constant][1] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
    %114 = reshape(%113, newshape=[1, 686]) /* ty=Tensor[(1, 686), float64] */;
    %115 = @func_5714(%114) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(14, 7, 7), float64], Tensor[(?, 686), bool], Tensor[(686), float64], Tensor[(72), float64]) */;
    %116 = right_shift(%111, %112) /* ty=Tensor[(9, 13, 12), int8] */;
    %117 = %115.5;
    (%116, %117, meta[relay.Constant][1] /* ty=Tensor[(686), float64] */)
  };
  %118() /* ty=(Tensor[(9, 13, 12), int8], Tensor[(72), float64], Tensor[(686), float64]) */
}

def @func_3065() -> Tensor[(9, 13, 12), bool] {
  @func_2614() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_4811(%var_4752: Tensor[(686), float64], %var_4765: Tensor[(686), float64], %var_4797: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(686), uint64], Tensor[(686), float64], Tensor[(686), uint32], Tensor[(686), bool]) {
  %119 = @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %120 = @func_3178() /* ty=Tensor[(686), float64] */;
  %121 = cast(%var_4752, dtype="float64") /* ty=Tensor[(686), float64] */;
  %122 = shape_of(%120, dtype="int32") /* ty=Tensor[(1), int32] */;
  %123 = cast(%120, dtype="float64") /* ty=Tensor[(686), float64] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?), float64] */;
  %125 = power(%123, %124) /* ty=Tensor[(686), float64] */;
  %126 = cast(%var_4765, dtype="bool") /* ty=Tensor[(686), bool] */;
  %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(1), int32] */;
  %128 = cast(%125, dtype="bool") /* ty=Tensor[(686), bool] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?), bool] */;
  %130 = logical_and(%128, %129) /* ty=Tensor[(686), bool] */;
  %131 = cast(%125, dtype="uint16") /* ty=Tensor[(686), uint16] */;
  %132 = shape_of(%var_4752, dtype="int32") /* ty=Tensor[(1), int32] */;
  %133 = cast(%var_4752, dtype="uint16") /* ty=Tensor[(686), uint16] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %135 = logical_xor(%133, %134) /* ty=Tensor[(686), uint16] */;
  %136 = cast(%135, dtype="uint64") /* ty=Tensor[(686), uint64] */;
  %137 = shape_of(%130, dtype="int32") /* ty=Tensor[(1), int32] */;
  %138 = cast(%130, dtype="uint64") /* ty=Tensor[(686), uint64] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %140 = cast(%var_4765, dtype="float64") /* ty=Tensor[(686), float64] */;
  %141 = shape_of(%135, dtype="int32") /* ty=Tensor[(1), int32] */;
  %142 = cast(%135, dtype="float64") /* ty=Tensor[(686), float64] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?), float64] */;
  %144 = cast(%var_4797, dtype="uint32") /* ty=Tensor[(686), uint32] */;
  %145 = shape_of(%125, dtype="int32") /* ty=Tensor[(1), int32] */;
  %146 = cast(%125, dtype="uint32") /* ty=Tensor[(686), uint32] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %148 = cast(%var_4752, dtype="bool") /* ty=Tensor[(686), bool] */;
  %149 = shape_of(%125, dtype="int32") /* ty=Tensor[(1), int32] */;
  %150 = cast(%125, dtype="bool") /* ty=Tensor[(686), bool] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?), bool] */;
  %152 = %119.0;
  %153 = subtract(%138, %139) /* ty=Tensor[(686), uint64] */;
  %154 = mod(%142, %143) /* ty=Tensor[(686), float64] */;
  %155 = minimum(%146, %147) /* ty=Tensor[(686), uint32] */;
  %156 = less_equal(%150, %151) /* ty=Tensor[(686), bool] */;
  (%152, %153, %154, %155, %156)
}

def @func_2614() -> Tensor[(9, 13, 12), bool] {
  %157 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %157.1
}

def @func_5303() -> Tensor[(9, 13, 12), bool] {
  %158 = @func_4063() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %158.0
}

def @func_6994(%var_6954: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), float64], Tensor[(28), int16], Tensor[(704), float64], Tensor[(6, 8, 3), bool], Tensor[(308), int16], Tensor[(686), float64], Tensor[(686), float64]) {
  %159 = cast(meta[relay.Constant][2] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %160 = reshape(%159, newshape=[4, 176]) /* ty=Tensor[(4, 176), float64] */;
  %161 = @func_5234(%160) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(704), float64], Tensor[(28), int16], Tensor[(4, 176), float64], Tensor[(9, 13, 12), bool]) */;
  %162 = %161.2;
  %163 = cast(%162, dtype="int16") /* ty=Tensor[(28), int16] */;
  %164 = cast(meta[relay.Constant][3] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %165 = cast(%var_6954, dtype="float64") /* ty=Tensor[(686), float64] */;
  %166 = reshape(%163, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), int16] */;
  %167 = reshape(%164, newshape=[4, 11, 7]) /* ty=Tensor[(4, 11, 7), int16] */;
  %168 = reshape(%165, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %169 = @func_1958(%166, %167, %168) /* ty=(Tensor[(4, 11, 7), bool], Tensor[(4, 1, 7), float64], Tensor[(6, 8, 3), bool], Tensor[(8, 18), float64], Tensor[(686), float64]) */;
  %170 = @func_5567() /* ty=(Tensor[(72), float64], Tensor[(704), float64], Tensor[(4, 176), float64], Tensor[(7, 98), bool], Tensor[(686), float64]) */;
  %171 = @func_2483() /* ty=Tensor[(9, 13, 12), float64] */;
  %172 = %169.2;
  %173 = %170.4;
  (%171, %162, meta[relay.Constant][2] /* ty=Tensor[(704), float64] */, %172, meta[relay.Constant][3] /* ty=Tensor[(308), int16] */, %var_6954, %173)
}

def @func_4280() -> Tensor[(9, 13, 12), float32] {
  %174 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %175 = %174.0;
  %176 = cast(%175, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  acos(%176) /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_7321(%var_7320: Tensor[(7, 98), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(7, 98), float64]) {
  %183 = fn (%var_7297: Tensor[(7, 98), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(7, 98), float64]) {
    %177 = @func_6135() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
    %178 = cast(%var_7297, dtype="float64") /* ty=Tensor[(7, 98), float64] */;
    %179 = reshape(%178, newshape=[686]) /* ty=Tensor[(686), float64] */;
    %180 = @func_3785(%179) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
    %181 = %177.1;
    %182 = %180.1;
    (%181, %182, %var_7297)
  };
  %183(%var_7320) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(7, 98), float64]) */
}

def @func_7067() -> (Tensor[(686), bool], Tensor[(686), float64]) {
  %184 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %185 = %184.1;
  %186 = cast(meta[relay.Constant][4] /* ty=Tensor[(686), float64] */, dtype="bool") /* ty=Tensor[(686), bool] */;
  %187 = shape_of(%185, dtype="int32") /* ty=Tensor[(1), int32] */;
  %188 = cast(%185, dtype="bool") /* ty=Tensor[(686), bool] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?), bool] */;
  %190 = cast(meta[relay.Constant][4] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
  %191 = logical_or(%188, %189) /* ty=Tensor[(686), bool] */;
  %192 = acos(%190) /* ty=Tensor[(686), float64] */;
  (%191, %192)
}

def @func_6328() -> (Tensor[(686), float64], Tensor[(9, 13, 12), float64], Tensor[(1404), bool]) {
  %193 = @func_3178() /* ty=Tensor[(686), float64] */;
  %194 = cast(%193, dtype="float32") /* ty=Tensor[(686), float32] */;
  %195 = exp(%194) /* ty=Tensor[(686), float32] */;
  %196 = cast(%193, dtype="bool") /* ty=Tensor[(686), bool] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(1), int32] */;
  %198 = cast(%195, dtype="bool") /* ty=Tensor[(686), bool] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?), bool] */;
  %200 = less(%198, %199) /* ty=Tensor[(686), bool] */;
  %201 = cast(%200, dtype="float64") /* ty=Tensor[(686), float64] */;
  %202 = shape_of(%193, dtype="int32") /* ty=Tensor[(1), int32] */;
  %203 = cast(%193, dtype="float64") /* ty=Tensor[(686), float64] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?), float64] */;
  %205 = cast(meta[relay.Constant][5] /* ty=Tensor[(1404), bool] */, dtype="bool") /* ty=Tensor[(1404), bool] */;
  %206 = reshape(%205, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), bool] */;
  %207 = @func_4175(%206) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64]) */;
  %208 = floor_divide(%203, %204) /* ty=Tensor[(686), float64] */;
  %209 = %207.1;
  (%208, %209, meta[relay.Constant][5] /* ty=Tensor[(1404), bool] */)
}

def @func_6756() -> (Tensor[(9, 13, 12), bool],) {
  %210 = @func_4063() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %211 = %210.0;
  (%211,)
}

def @func_10378() -> Tensor[(9, 13, 12), float32] {
  %212 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %212.0
}

def @func_3149(%var_3131: Tensor[(28), int16]) -> (Tensor[(9, 13, 12), bool], Tensor[(308), int16], Tensor[(28), int16]) {
  %213 = cast(%var_3131, dtype="int16") /* ty=Tensor[(28), int16] */;
  %214 = reshape(%213, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %215 = @func_2287(%214) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 1, 7), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */;
  %216 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
  %217 = %215.3;
  (%216, %217, %var_3131)
}

def @func_12271() -> (Tensor[(9, 13, 12), float64], Tensor[(9, 13, 12), bool]) {
  %218 = @func_10137() /* ty=(Tensor[(9, 13, 12), float64],) */;
  %219 = @func_8947() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %220 = %218.0;
  %221 = %219.1;
  (%220, %221)
}

def @func_8908() -> (Tensor[(9, 13, 12), float32],) {
  %222 = @func_7158() /* ty=(Tensor[(704), float64], Tensor[(9, 13, 12), float32], Tensor[(4, 16, 11), int16]) */;
  %223 = %222.1;
  (%223,)
}

def @func_9803() -> (Tensor[(13, 10, ?), bool], Tensor[(13, 10, ?), float64], Tensor[(13, 10, ?), bool]) {
  %224 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 10, 1), float64] */;
  %225 = sqrt(%224) /* ty=Tensor[(13, 10, 1), float64] */;
  %226 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 10, 1), float64] */, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %228 = cast(%225, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %230 = greater(%228, %229) /* ty=Tensor[(13, 10, ?), bool] */;
  %231 = cast(%225, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %232 = shape_of(%230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%230, dtype="bool") /* ty=Tensor[(13, 10, ?), bool] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %235 = cast(%225, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %236 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(13, 10, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 10, 1), float64] */, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %239 = greater_equal(%237, %238) /* ty=Tensor[(13, 10, ?), bool] */;
  %240 = cast(%239, dtype="float64") /* ty=Tensor[(13, 10, ?), float64] */;
  %241 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(13, 10, 1), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 10, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 10, 1), float64] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %244 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 10, 1), float64] */, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %245 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%225, dtype="bool") /* ty=Tensor[(13, 10, 1), bool] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %248 = logical_and(%233, %234) /* ty=Tensor[(13, 10, ?), bool] */;
  %249 = mod(%242, %243) /* ty=Tensor[(13, 10, ?), float64] */;
  %250 = less_equal(%246, %247) /* ty=Tensor[(13, 10, ?), bool] */;
  (%248, %249, %250)
}

def @func_2994(%var_2973: Tensor[(28), int16]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) {
  %251 = @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %252 = cast(%var_2973, dtype="int16") /* ty=Tensor[(28), int16] */;
  %253 = reshape(%252, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %254 = @func_2287(%253) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 1, 7), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */;
  %255 = %251.0;
  %256 = %254.0;
  (%255, %256, %var_2973)
}

def @func_3108() -> (Tensor[(9, 13, 12), float32],) {
  %259 = fn () -> (Tensor[(9, 13, 12), float32],) {
    %257 = @func_3019() /* ty=(Tensor[(9, 13, 12), float32],) */;
    %258 = %257.0;
    (%258,)
  };
  %259() /* ty=(Tensor[(9, 13, 12), float32],) */
}

def @func_8859() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) {
  %260 = cast(meta[relay.Constant][7] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %261 = reshape(%260, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %262 = @func_5513(%261) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(9, 13, 12), float32]) */;
  %263 = @func_3917() /* ty=Tensor[(9, 13, 12), bool] */;
  %264 = %262.0;
  (%263, %264, meta[relay.Constant][7] /* ty=Tensor[(28), int16] */)
}

def @func_7882() -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) {
  %265 = @func_6894() /* ty=Tensor[(9, 13, 12), float32] */;
  %266 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
  (%265, %266)
}

def @func_6135() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %267 = @func_3484() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %268 = %267.1;
  %269 = @func_5744() /* ty=Tensor[(9, 13, 12), bool] */;
  (%268, %269)
}

def @func_5609() -> Tensor[(686), float64] {
  @func_5607() /* ty=Tensor[(686), float64] */
}

def @func_5516(%var_5514: Tensor[(28), int16]) -> (Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(9, 13, 12), float32]) {
  @func_5513(%var_5514) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(9, 13, 12), float32]) */
}

def @func_11626() -> Tensor[(686), float64] {
  @func_11624() /* ty=Tensor[(686), float64] */
}

def @func_10014() -> (Tensor[(72), float64],) {
  %272 = fn () -> (Tensor[(72), float64],) {
    %270 = @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */;
    %271 = %270.2;
    (%271,)
  };
  %272() /* ty=(Tensor[(72), float64],) */
}

def @func_11898() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  @func_11896() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */
}

def @func_5513(%var_5493: Tensor[(28), int16]) -> (Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(9, 13, 12), float32]) {
  %273 = cast(%var_5493, dtype="int16") /* ty=Tensor[(28), int16] */;
  %274 = reshape(%273, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %275 = @func_2994(%274) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) */;
  %276 = @func_3107() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %277 = @func_4647() /* ty=Tensor[(9, 13, 12), bool] */;
  %278 = %275.2;
  %279 = %276.0;
  (%277, %278, %var_5493, %279)
}

def @func_4177(%var_4176: Tensor[(9, 13, 12), bool]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64]) {
  %289 = fn (%var_4136: Tensor[(9, 13, 12), bool]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64]) {
    %280 = @func_3328() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
    %281 = %280.0;
    %282 = cast(%var_4136, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
    %283 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
    %284 = cast(%281, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
    %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %286 = cast(%281, dtype="float64") /* ty=Tensor[(9, 13, 12), float64] */;
    %287 = less(%284, %285) /* ty=Tensor[(9, 13, 12), bool] */;
    %288 = log(%286) /* ty=Tensor[(9, 13, 12), float64] */;
    (%287, %288)
  };
  %289(%var_4176) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64]) */
}

def @func_5944(%var_5942: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) {
  @func_5941(%var_5942) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */
}

def @func_9124() -> Tensor[(686), int16] {
  @func_9122() /* ty=Tensor[(686), int16] */
}

def @func_6153() -> Tensor[(10, 7, 13), float64] {
  %291 = fn () -> Tensor[(10, 7, 13), float64] {
    %290 = cast(meta[relay.Constant][8] /* ty=Tensor[(10, 7, 13), float64] */, dtype="float64") /* ty=Tensor[(10, 7, 13), float64] */;
    cosh(%290) /* ty=Tensor[(10, 7, 13), float64] */
  };
  %291() /* ty=Tensor[(10, 7, 13), float64] */
}

def @func_8696(%var_8685: Tensor[(3, 16, 7), int8], %var_8686: Tensor[(3, 16, 7), int8]) -> Tensor[(3, 16, 7), int8] {
  %292 = cast(%var_8686, dtype="int8") /* ty=Tensor[(3, 16, 7), int8] */;
  %293 = shape_of(%var_8685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%var_8685, dtype="int8") /* ty=Tensor[(3, 16, 7), int8] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_or(%294, %295) /* ty=Tensor[(3, 16, 7), int8] */
}

def @func_8954() -> (Tensor[(9, 13, 12), bool],) {
  %296 = @func_3346() /* ty=Tensor[(9, 13, 12), bool] */;
  (%296,)
}

def @func_2997(%var_2995: Tensor[(28), int16]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) {
  @func_2994(%var_2995) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) */
}

def @func_9674(%var_9672: Tensor[(686), float64], %var_9673: Tensor[(910), float32]) -> (Tensor[(72), float64], Tensor[(686), uint32], Tensor[(686), float64], Tensor[(14, 13, 5), float32], Tensor[(910), float64], Tensor[(10, 7, 13), float64], Tensor[(9, 13, 12), float32], Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(14, 13, 5), float32]) {
  @func_9670(%var_9672, %var_9673) /* ty=(Tensor[(72), float64], Tensor[(686), uint32], Tensor[(686), float64], Tensor[(14, 13, 5), float32], Tensor[(910), float64], Tensor[(10, 7, 13), float64], Tensor[(9, 13, 12), float32], Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(14, 13, 5), float32]) */
}

def @func_6807(%var_6806: Tensor[(343, 2), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) {
  %302 = fn (%var_6795: Tensor[(343, 2), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) {
    %297 = cast(%var_6795, dtype="float64") /* ty=Tensor[(343, 2), float64] */;
    %298 = reshape(%297, newshape=[343, 2]) /* ty=Tensor[(343, 2), float64] */;
    %299 = @func_6362(%298) /* ty=(Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) */;
    %300 = @func_5744() /* ty=Tensor[(9, 13, 12), bool] */;
    %301 = %299.2;
    (%300, %301, %var_6795)
  };
  %302(%var_6806) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) */
}

def @func_6382() -> Tensor[(9, 13, 12), float32] {
  %304 = fn () -> Tensor[(9, 13, 12), float32] {
    %303 = @func_5908() /* ty=(Tensor[(9, 13, 12), float32],) */;
    %303.0
  };
  %304() /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_8426(%var_8423: Tensor[(12, 5, 11), float64]) -> (Tensor[(12, 5, 11), float64],) {
  %305 = cast(%var_8423, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %306 = rsqrt(%305) /* ty=Tensor[(12, 5, 11), float64] */;
  (%306,)
}

def @func_10941() -> Tensor[(9, 13, 12), bool] {
  %308 = fn () -> Tensor[(9, 13, 12), bool] {
    %307 = @func_8557() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %307.0
  };
  %308() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_11075(%var_11074: Tensor[(24, 2), float64]) -> (Tensor[(72), float64], Tensor[(48), float64], Tensor[(24, 2), float64]) {
  %315 = fn (%var_11060: Tensor[(24, 2), float64]) -> (Tensor[(72), float64], Tensor[(48), float64], Tensor[(24, 2), float64]) {
    %309 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
    %310 = cast(%var_11060, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
    %311 = reshape(%310, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %312 = @func_11014(%311) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(14, 13, 5), bool], Tensor[(48), float64], Tensor[(48), float64]) */;
    %313 = %309.2;
    %314 = %312.3;
    (%313, %314, %var_11060)
  };
  %315(%var_11074) /* ty=(Tensor[(72), float64], Tensor[(48), float64], Tensor[(24, 2), float64]) */
}

def @func_10453() -> (Tensor[(9, 13, 12), float32],) {
  %316 = @func_7486() /* ty=Tensor[(9, 13, 12), float32] */;
  (%316,)
}

def @func_7263() -> (Tensor[(9, 13, 12), bool],) {
  @func_7261() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_4259() -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(9, 13, 12), float32]) {
  %324 = fn () -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(9, 13, 12), float32]) {
    %317 = @func_3328() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
    %318 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
    %319 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
    %320 = cast(%319, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
    %321 = %317.1;
    %322 = %318.1;
    %323 = atanh(%320) /* ty=Tensor[(9, 13, 12), float32] */;
    (%321, %322, %323)
  };
  %324() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(9, 13, 12), float32]) */
}

def @func_9471() -> Tensor[(9, 13, 12), int64] {
  @func_9469() /* ty=Tensor[(9, 13, 12), int64] */
}

def @func_3785(%var_3783: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) {
  %325 = @func_3494() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %326 = cast(%var_3783, dtype="float64") /* ty=Tensor[(686), float64] */;
  %327 = reshape(%326, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %328 = @func_2234(%327) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %329 = %325.0;
  %330 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
  %331 = %328.1;
  (%329, %330, %331, %var_3783)
}

def @func_10426() -> Tensor[(9, 13, 12), float32] {
  @func_10424() /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_10710() -> Tensor[(9, 13, 12), bool] {
  %333 = fn () -> Tensor[(9, 13, 12), bool] {
    %332 = @func_9079() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %332.0
  };
  %333() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_8948() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %338 = fn () -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
    %334 = @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */;
    %335 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %336 = %334.1;
    %337 = %335.0;
    (%336, %337)
  };
  %338() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */
}

def @func_2717() -> (Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) {
  @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */
}

def @func_8621(%var_8616: Tensor[(686), bool]) -> (Tensor[(686), float32], Tensor[(686), float32]) {
  %339 = @func_7067() /* ty=(Tensor[(686), bool], Tensor[(686), float64]) */;
  %340 = %339.0;
  %341 = cast(%340, dtype="float32") /* ty=Tensor[(686), float32] */;
  %342 = cast(%var_8616, dtype="float32") /* ty=Tensor[(686), float32] */;
  %343 = shape_of(%340, dtype="int32") /* ty=Tensor[(1), int32] */;
  %344 = cast(%340, dtype="float32") /* ty=Tensor[(686), float32] */;
  %345 = dyn.reshape(%342, %343, newshape=[]) /* ty=Tensor[(?), float32] */;
  %346 = sinh(%341) /* ty=Tensor[(686), float32] */;
  %347 = floor_mod(%344, %345) /* ty=Tensor[(686), float32] */;
  (%346, %347)
}

def @func_2439(%var_2437: Tensor[(343, 2), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(343, 2), float64]) {
  @func_2436(%var_2437) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(343, 2), float64]) */
}

def @func_11503() -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) {
  %348 = @func_3328() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %349 = @func_4937() /* ty=Tensor[(9, 13, 12), float32] */;
  %350 = %348.1;
  (%349, %350)
}

def @func_2017(%var_1976: Tensor[(3, 3, 8), float64]) -> (Tensor[(3, 3, 8), float64], Tensor[(3, 3, 8), float32], Tensor[(686), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) {
  %351 = cast(%var_1976, dtype="float64") /* ty=Tensor[(3, 3, 8), float64] */;
  %352 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 3, 8), float64] */, dtype="float32") /* ty=Tensor[(3, 3, 8), float32] */;
  %353 = shape_of(%var_1976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %354 = cast(%var_1976, dtype="float32") /* ty=Tensor[(3, 3, 8), float32] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %356 = cast(meta[relay.Constant][10] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
  %357 = cast(meta[relay.Constant][11] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %358 = cast(meta[relay.Constant][12] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
  %359 = reshape(%356, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), int16] */;
  %360 = reshape(%357, newshape=[4, 11, 7]) /* ty=Tensor[(4, 11, 7), int16] */;
  %361 = reshape(%358, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %362 = @func_1958(%359, %360, %361) /* ty=(Tensor[(4, 11, 7), bool], Tensor[(4, 1, 7), float64], Tensor[(6, 8, 3), bool], Tensor[(8, 18), float64], Tensor[(686), float64]) */;
  %363 = log2(%351) /* ty=Tensor[(3, 3, 8), float64] */;
  %364 = power(%354, %355) /* ty=Tensor[(3, 3, 8), float32] */;
  %365 = %362.4;
  (%363, %364, %365, meta[relay.Constant][10] /* ty=Tensor[(28), int16] */, meta[relay.Constant][11] /* ty=Tensor[(308), int16] */, meta[relay.Constant][12] /* ty=Tensor[(686), float64] */)
}

def @func_11643(%var_11642: Tensor[(2, 9, 16), float64]) -> (Tensor[(2, 9, 16), float64], Tensor[(9, 13, 12), bool]) {
  %369 = fn (%var_11635: Tensor[(2, 9, 16), float64]) -> (Tensor[(2, 9, 16), float64], Tensor[(9, 13, 12), bool]) {
    %366 = cast(%var_11635, dtype="float64") /* ty=Tensor[(2, 9, 16), float64] */;
    %367 = sqrt(%366) /* ty=Tensor[(2, 9, 16), float64] */;
    %368 = @func_3917() /* ty=Tensor[(9, 13, 12), bool] */;
    (%367, %368)
  };
  %369(%var_11642) /* ty=(Tensor[(2, 9, 16), float64], Tensor[(9, 13, 12), bool]) */
}

def @func_8861() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) {
  @func_8859() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) */
}

def @func_5409(%var_5407: Tensor[(9, 13, 12), bool], %var_5408: Tensor[(48), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64]) {
  @func_5405(%var_5407, %var_5408) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64]) */
}

def @func_2616() -> Tensor[(9, 13, 12), bool] {
  @func_2614() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_5087() -> (Tensor[(686), float64],) {
  %371 = fn () -> (Tensor[(686), float64],) {
    %370 = @func_3178() /* ty=Tensor[(686), float64] */;
    (%370,)
  };
  %371() /* ty=(Tensor[(686), float64],) */
}

def @func_11184() -> (Tensor[(10, 7, 13), float64], Tensor[(9, 13, 12), bool]) {
  %375 = fn () -> (Tensor[(10, 7, 13), float64], Tensor[(9, 13, 12), bool]) {
    %372 = @func_9400() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %373 = @func_6152() /* ty=Tensor[(10, 7, 13), float64] */;
    %374 = %372.0;
    (%373, %374)
  };
  %375() /* ty=(Tensor[(10, 7, 13), float64], Tensor[(9, 13, 12), bool]) */
}

def @func_2290(%var_2288: Tensor[(28), int16]) -> (Tensor[(9, 13, 12), bool], Tensor[(4, 1, 7), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) {
  @func_2287(%var_2288) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 1, 7), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */
}

def @func_2436(%var_2418: Tensor[(343, 2), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(343, 2), float64]) {
  %376 = cast(%var_2418, dtype="float64") /* ty=Tensor[(343, 2), float64] */;
  %377 = cast(%var_2418, dtype="float64") /* ty=Tensor[(343, 2), float64] */;
  %378 = reshape(%376, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %379 = reshape(%377, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %380 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  %381 = @func_803(%378, %379) /* ty=Tensor[(14, 7, 7), float64] */;
  (%380, %381, %var_2418)
}

def @func_8029(%var_8027: Tensor[(12, 15, 9), float32], %var_8028: Tensor[(12, 15, 9), float32]) -> (Tensor[(12, 15, 9), float32],) {
  @func_8025(%var_8027, %var_8028) /* ty=(Tensor[(12, 15, 9), float32],) */
}

def @func_12400() -> (Tensor[(9, 13, 12), bool],) {
  %382 = @func_8947() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %383 = %382.0;
  (%383,)
}

def @func_2356() -> (Tensor[(9, 13, 12), bool],) {
  %384 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  (%384,)
}

def @func_4282() -> Tensor[(9, 13, 12), float32] {
  @func_4280() /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_7488() -> Tensor[(9, 13, 12), float32] {
  @func_7486() /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_8232() -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(9, 13, 12), bool]) {
  @func_8230() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(9, 13, 12), bool]) */
}

def @func_10000() -> (Tensor[(9, 13, 12), bool],) {
  @func_9998() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_12812() -> (Tensor[(686), float64], Tensor[(72), float64]) {
  %390 = fn () -> (Tensor[(686), float64], Tensor[(72), float64]) {
    %385 = @func_11624() /* ty=Tensor[(686), float64] */;
    %386 = cast(%385, dtype="float64") /* ty=Tensor[(686), float64] */;
    %387 = reshape(%386, newshape=[343, 2]) /* ty=Tensor[(343, 2), float64] */;
    %388 = @func_6362(%387) /* ty=(Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) */;
    %389 = %388.0;
    (%385, %389)
  };
  %390() /* ty=(Tensor[(686), float64], Tensor[(72), float64]) */
}

def @func_4378(%var_4376: Tensor[(28), int16], %var_4377: Tensor[(704), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(4, 16, 11), int16], Tensor[(704), float64]) {
  @func_4374(%var_4376, %var_4377) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(4, 16, 11), int16], Tensor[(704), float64]) */
}

def @func_11382(%var_11380: Tensor[(1, 16, 5), float32]) -> (Tensor[(1, 16, 5), float32], Tensor[(1, 16, 5), float64], Tensor[(9, 13, 12), bool]) {
  @func_11379(%var_11380) /* ty=(Tensor[(1, 16, 5), float32], Tensor[(1, 16, 5), float64], Tensor[(9, 13, 12), bool]) */
}

def @func_11896() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %391 = @func_5768() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %392 = @func_9400() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %393 = %391.0;
  %394 = @func_10039() /* ty=Tensor[(9, 13, 12), bool] */;
  %395 = %392.0;
  (%393, %394, %395)
}

def @func_11219() -> (Tensor[(11, 4, 15), float32], Tensor[(72), float64]) {
  %396 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 4, 15), float32] */, dtype="float32") /* ty=Tensor[(11, 4, 15), float32] */;
  %397 = @func_7035() /* ty=(Tensor[(704), float64], Tensor[(72), float64]) */;
  %398 = cosh(%396) /* ty=Tensor[(11, 4, 15), float32] */;
  %399 = %397.1;
  (%398, %399)
}

def @func_3020() -> (Tensor[(9, 13, 12), float32],) {
  %402 = fn () -> (Tensor[(9, 13, 12), float32],) {
    %400 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
    %401 = %400.0;
    (%401,)
  };
  %402() /* ty=(Tensor[(9, 13, 12), float32],) */
}

def @func_12670() -> (Tensor[(9, 13, 12), bool],) {
  %403 = @func_8230() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(9, 13, 12), bool]) */;
  %404 = %403.2;
  (%404,)
}

def @func_1050(%var_1048: Tensor[(6, 8, 3), float64], %var_1049: Tensor[(686), float64]) -> (Tensor[(14, 7, 7), float64], Tensor[(686), float64], Tensor[(6, 8, 3), bool]) {
  @func_1046(%var_1048, %var_1049) /* ty=(Tensor[(14, 7, 7), float64], Tensor[(686), float64], Tensor[(6, 8, 3), bool]) */
}

def @func_8729() -> (Tensor[(9, 13, 12), int8], Tensor[(9, 13, 12), bool]) {
  %408 = fn () -> (Tensor[(9, 13, 12), int8], Tensor[(9, 13, 12), bool]) {
    %405 = @func_8188() /* ty=(Tensor[(9, 13, 12), int8], Tensor[(72), float64], Tensor[(686), float64]) */;
    %406 = %405.0;
    %407 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
    (%406, %407)
  };
  %408() /* ty=(Tensor[(9, 13, 12), int8], Tensor[(9, 13, 12), bool]) */
}

def @func_2715() -> (Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) {
  %409 = @func_2483() /* ty=Tensor[(9, 13, 12), float64] */;
  %410 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 13, 12), float64] */, dtype="int64") /* ty=Tensor[(9, 13, 12), int64] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%409, dtype="int64") /* ty=Tensor[(9, 13, 12), int64] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %414 = cast(meta[relay.Constant][15] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %415 = reshape(%414, newshape=[3, 3, 8]) /* ty=Tensor[(3, 3, 8), float64] */;
  %416 = @func_2017(%415) /* ty=(Tensor[(3, 3, 8), float64], Tensor[(3, 3, 8), float32], Tensor[(686), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */;
  %417 = left_shift(%412, %413) /* ty=Tensor[(9, 13, 12), int64] */;
  %418 = %416.5;
  (%417, %418, meta[relay.Constant][15] /* ty=Tensor[(72), float64] */)
}

def @func_5478() -> (Tensor[(72), float64],) {
  %419 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %420 = %419.2;
  (%420,)
}

def @func_7069() -> (Tensor[(686), bool], Tensor[(686), float64]) {
  @func_7067() /* ty=(Tensor[(686), bool], Tensor[(686), float64]) */
}

def @func_8025(%var_8020: Tensor[(12, 15, 9), float32], %var_8021: Tensor[(12, 15, 9), float32]) -> (Tensor[(12, 15, 9), float32],) {
  %421 = cast(%var_8021, dtype="float32") /* ty=Tensor[(12, 15, 9), float32] */;
  %422 = shape_of(%var_8020, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%var_8020, dtype="float32") /* ty=Tensor[(12, 15, 9), float32] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %425 = power(%423, %424) /* ty=Tensor[(12, 15, 9), float32] */;
  (%425,)
}

def @func_8910() -> (Tensor[(9, 13, 12), float32],) {
  @func_8908() /* ty=(Tensor[(9, 13, 12), float32],) */
}

def @func_6758() -> (Tensor[(9, 13, 12), bool],) {
  @func_6756() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_9998() -> (Tensor[(9, 13, 12), bool],) {
  %426 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  (%426,)
}

def @func_8646() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %427 = @func_6548() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), int16], Tensor[(704), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) */;
  %428 = @func_5303() /* ty=Tensor[(9, 13, 12), bool] */;
  %429 = %427.3;
  (%428, %429)
}

def @func_11957() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) {
  %430 = @func_9894() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %431 = @func_7158() /* ty=(Tensor[(704), float64], Tensor[(9, 13, 12), float32], Tensor[(4, 16, 11), int16]) */;
  %432 = %430.0;
  %433 = %431.1;
  (%432, %433)
}

def @func_3495() -> (Tensor[(9, 13, 12), bool],) {
  %436 = fn () -> (Tensor[(9, 13, 12), bool],) {
    %434 = @func_3484() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
    %435 = %434.0;
    (%435,)
  };
  %436() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_9831(%var_9822: Tensor[(4, 2, 7), int8]) -> Tensor[(4, 2, 7), int8] {
  %437 = cast(meta[relay.Constant][16] /* ty=Tensor[(4, 2, 7), int8] */, dtype="int8") /* ty=Tensor[(4, 2, 7), int8] */;
  %438 = shape_of(%var_9822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%var_9822, dtype="int8") /* ty=Tensor[(4, 2, 7), int8] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  minimum(%439, %440) /* ty=Tensor[(4, 2, 7), int8] */
}

def @func_7035() -> (Tensor[(704), float64], Tensor[(72), float64]) {
  %441 = @func_3961() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), float64], Tensor[(704), float64]) */;
  %442 = @func_5799() /* ty=(Tensor[(72), float64], Tensor[(72), float64]) */;
  %443 = %441.2;
  %444 = %442.1;
  (%443, %444)
}

def @func_8819() -> Tensor[(9, 13, 12), int64] {
  %446 = fn () -> Tensor[(9, 13, 12), int64] {
    %445 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
    %445.0
  };
  %446() /* ty=Tensor[(9, 13, 12), int64] */
}

def @func_11922() -> (Tensor[(9, 13, 12), float32],) {
  %449 = fn () -> (Tensor[(9, 13, 12), float32],) {
    %447 = @func_8390() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(686), uint16], Tensor[(9, 13, 12), bool], Tensor[(686), float32]) */;
    %448 = %447.0;
    (%448,)
  };
  %449() /* ty=(Tensor[(9, 13, 12), float32],) */
}

def @func_5714(%var_5651: Tensor[(1, 686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(14, 7, 7), float64], Tensor[(?, 686), bool], Tensor[(686), float64], Tensor[(72), float64]) {
  %450 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %451 = @func_5478() /* ty=(Tensor[(72), float64],) */;
  %452 = cast(%var_5651, dtype="float64") /* ty=Tensor[(1, 686), float64] */;
  %453 = cast(%var_5651, dtype="float64") /* ty=Tensor[(1, 686), float64] */;
  %454 = cast(%var_5651, dtype="float64") /* ty=Tensor[(1, 686), float64] */;
  %455 = reshape(%452, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %456 = reshape(%453, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %457 = reshape(%454, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %458 = @func_4811(%455, %456, %457) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), uint64], Tensor[(686), float64], Tensor[(686), uint32], Tensor[(686), bool]) */;
  %459 = %458.2;
  %460 = cast(%459, dtype="uint64") /* ty=Tensor[(686), uint64] */;
  %461 = shape_of(%var_5651, dtype="int32") /* ty=Tensor[(2), int32] */;
  %462 = cast(%var_5651, dtype="uint64") /* ty=Tensor[(1, 686), uint64] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %464 = add(%462, %463) /* ty=Tensor[(?, 686), uint64] */;
  %465 = cast(%464, dtype="float64") /* ty=Tensor[(?, 686), float64] */;
  %466 = cast(%464, dtype="float64") /* ty=Tensor[(?, 686), float64] */;
  %467 = reshape(%465, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %468 = reshape(%466, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %469 = cast(%459, dtype="float64") /* ty=Tensor[(686), float64] */;
  %470 = cast(%459, dtype="float64") /* ty=Tensor[(686), float64] */;
  %471 = cast(%459, dtype="float64") /* ty=Tensor[(686), float64] */;
  %472 = reshape(%469, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %473 = reshape(%470, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %474 = reshape(%471, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %475 = @func_4811(%472, %473, %474) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), uint64], Tensor[(686), float64], Tensor[(686), uint32], Tensor[(686), bool]) */;
  %476 = %475.1;
  %477 = cast(%476, dtype="bool") /* ty=Tensor[(686), bool] */;
  %478 = shape_of(%464, dtype="int32") /* ty=Tensor[(2), int32] */;
  %479 = cast(%464, dtype="bool") /* ty=Tensor[(?, 686), bool] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %481 = cast(%var_5651, dtype="float64") /* ty=Tensor[(1, 686), float64] */;
  %482 = reshape(%481, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %483 = @func_2234(%482) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %484 = @func_5478() /* ty=(Tensor[(72), float64],) */;
  %485 = %450.0;
  %486 = %451.0;
  %487 = @func_803(%467, %468) /* ty=Tensor[(14, 7, 7), float64] */;
  %488 = greater_equal(%479, %480) /* ty=Tensor[(?, 686), bool] */;
  %489 = %483.2;
  %490 = %484.0;
  (%485, %486, %487, %488, %489, %490)
}

def @func_8440() -> (Tensor[(9, 13, 12), float32],) {
  @func_8438() /* ty=(Tensor[(9, 13, 12), float32],) */
}

def @func_11737(%var_11715: Tensor[(48), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(48), float64], Tensor[(48), float64], Tensor[(9, 13, 12), float32]) {
  %491 = @func_7462() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %492 = %491.0;
  %493 = cast(%492, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
  %494 = cast(%var_11715, dtype="float64") /* ty=Tensor[(48), float64] */;
  %495 = reshape(%493, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), bool] */;
  %496 = reshape(%494, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %497 = @func_5405(%495, %496) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64]) */;
  %498 = @func_2594() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %499 = %497.3;
  %500 = %498.0;
  (%492, %499, %var_11715, %500)
}

def @func_6997(%var_6995: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), float64], Tensor[(28), int16], Tensor[(704), float64], Tensor[(6, 8, 3), bool], Tensor[(308), int16], Tensor[(686), float64], Tensor[(686), float64]) {
  @func_6994(%var_6995) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(28), int16], Tensor[(704), float64], Tensor[(6, 8, 3), bool], Tensor[(308), int16], Tensor[(686), float64], Tensor[(686), float64]) */
}

def @func_9805() -> (Tensor[(13, 10, ?), bool], Tensor[(13, 10, ?), float64], Tensor[(13, 10, ?), bool]) {
  @func_9803() /* ty=(Tensor[(13, 10, ?), bool], Tensor[(13, 10, ?), float64], Tensor[(13, 10, ?), bool]) */
}

def @func_2287(%var_2281: Tensor[(28), int16]) -> (Tensor[(9, 13, 12), bool], Tensor[(4, 1, 7), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) {
  %501 = cast(%var_2281, dtype="int16") /* ty=Tensor[(28), int16] */;
  %502 = cast(meta[relay.Constant][17] /* ty=Tensor[(308), int16] */, dtype="int16") /* ty=Tensor[(308), int16] */;
  %503 = cast(meta[relay.Constant][18] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
  %504 = reshape(%501, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), int16] */;
  %505 = reshape(%502, newshape=[4, 11, 7]) /* ty=Tensor[(4, 11, 7), int16] */;
  %506 = reshape(%503, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %507 = @func_1958(%504, %505, %506) /* ty=(Tensor[(4, 11, 7), bool], Tensor[(4, 1, 7), float64], Tensor[(6, 8, 3), bool], Tensor[(8, 18), float64], Tensor[(686), float64]) */;
  %508 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  %509 = %507.1;
  (%508, %509, %var_2281, meta[relay.Constant][17] /* ty=Tensor[(308), int16] */, meta[relay.Constant][18] /* ty=Tensor[(686), float64] */)
}

def @func_9400() -> (Tensor[(9, 13, 12), bool],) {
  %510 = @func_8947() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %511 = %510.1;
  (%511,)
}

def @func_7037() -> (Tensor[(704), float64], Tensor[(72), float64]) {
  @func_7035() /* ty=(Tensor[(704), float64], Tensor[(72), float64]) */
}

def @func_10558() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) {
  %514 = fn () -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) {
    %512 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
    %513 = @func_7486() /* ty=Tensor[(9, 13, 12), float32] */;
    (%512, %513)
  };
  %514() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) */
}

def @func_9402() -> (Tensor[(9, 13, 12), bool],) {
  @func_9400() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_11547() -> (Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64]) {
  %521 = fn () -> (Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64]) {
    %515 = @func_5478() /* ty=(Tensor[(72), float64],) */;
    %516 = @func_6135() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
    %517 = @func_5086() /* ty=(Tensor[(686), float64],) */;
    %518 = %515.0;
    %519 = %516.1;
    %520 = %517.0;
    (%518, %519, %520)
  };
  %521() /* ty=(Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64]) */
}

def @func_12464() -> (Tensor[(9, 13, 12), bool],) {
  @func_12462() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_7261() -> (Tensor[(9, 13, 12), bool],) {
  %522 = @func_3494() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %523 = %522.0;
  (%523,)
}

def @func_12540() -> (Tensor[(9, 13, 12), bool],) {
  @func_12538() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_8700(%var_8698: Tensor[(3, 16, 7), int8], %var_8699: Tensor[(3, 16, 7), int8]) -> Tensor[(3, 16, 7), int8] {
  @func_8696(%var_8698, %var_8699) /* ty=Tensor[(3, 16, 7), int8] */
}

def @func_9834(%var_9832: Tensor[(4, 2, 7), int8]) -> Tensor[(4, 2, 7), int8] {
  @func_9831(%var_9832) /* ty=Tensor[(4, 2, 7), int8] */
}

def @func_7160() -> (Tensor[(704), float64], Tensor[(9, 13, 12), float32], Tensor[(4, 16, 11), int16]) {
  @func_7158() /* ty=(Tensor[(704), float64], Tensor[(9, 13, 12), float32], Tensor[(4, 16, 11), int16]) */
}

def @func_8956() -> (Tensor[(9, 13, 12), bool],) {
  @func_8954() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_3292() -> (Tensor[(9, 13, 12), bool],) {
  %525 = fn () -> (Tensor[(9, 13, 12), bool],) {
    %524 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
    (%524,)
  };
  %525() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_4938() -> Tensor[(9, 13, 12), float32] {
  %527 = fn () -> Tensor[(9, 13, 12), float32] {
    %526 = @func_2594() /* ty=(Tensor[(9, 13, 12), float32],) */;
    %526.0
  };
  %527() /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_806(%var_804: Tensor[(14, 7, 7), float64], %var_805: Tensor[(14, 7, 7), float64]) -> Tensor[(14, 7, 7), float64] {
  %532 = fn (%var_798: Tensor[(14, 7, 7), float64], %var_799: Tensor[(14, 7, 7), float64]) -> Tensor[(14, 7, 7), float64] {
    %528 = cast(%var_799, dtype="float64") /* ty=Tensor[(14, 7, 7), float64] */;
    %529 = shape_of(%var_798, dtype="int32") /* ty=Tensor[(3), int32] */;
    %530 = cast(%var_798, dtype="float64") /* ty=Tensor[(14, 7, 7), float64] */;
    %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%530, %531) /* ty=Tensor[(14, 7, 7), float64] */
  };
  %532(%var_804, %var_805) /* ty=Tensor[(14, 7, 7), float64] */
}

def @func_3557(%var_3539: Tensor[(1859), float64]) -> (Tensor[(686), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(13, 11, 13), float64], Tensor[(1859), float64]) {
  %533 = @func_3484() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %534 = cast(%var_3539, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %535 = cast(%var_3539, dtype="float64") /* ty=Tensor[(1859), float64] */;
  %536 = reshape(%534, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %537 = reshape(%535, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), float64] */;
  %538 = @func_2774(%536, %537) /* ty=(Tensor[(13, 11, 13), float64], Tensor[(9, 13, 12), float32]) */;
  %539 = @func_3178() /* ty=Tensor[(686), float64] */;
  %540 = %533.0;
  %541 = @func_3346() /* ty=Tensor[(9, 13, 12), bool] */;
  %542 = %538.0;
  (%539, %540, %541, %542, %var_3539)
}

def @func_9149(%var_9144: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(686), bool]) {
  %543 = @func_8947() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %544 = @func_8188() /* ty=(Tensor[(9, 13, 12), int8], Tensor[(72), float64], Tensor[(686), float64]) */;
  %545 = %544.2;
  %546 = cast(%var_9144, dtype="bool") /* ty=Tensor[(686), bool] */;
  %547 = shape_of(%545, dtype="int32") /* ty=Tensor[(1), int32] */;
  %548 = cast(%545, dtype="bool") /* ty=Tensor[(686), bool] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?), bool] */;
  %550 = %543.0;
  %551 = equal(%548, %549) /* ty=Tensor[(686), bool] */;
  (%550, %551)
}

def @func_4903(%var_4901: Tensor[(1, 308), int16], %var_4902: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(28), int16], Tensor[(1, 308), int16], Tensor[(686), float64]) {
  %561 = fn (%var_4895: Tensor[(1, 308), int16], %var_4896: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(28), int16], Tensor[(1, 308), int16], Tensor[(686), float64]) {
    %552 = cast(meta[relay.Constant][19] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
    %553 = cast(%var_4895, dtype="int16") /* ty=Tensor[(1, 308), int16] */;
    %554 = cast(%var_4896, dtype="float64") /* ty=Tensor[(686), float64] */;
    %555 = reshape(%552, newshape=[4, 1, 7]) /* ty=Tensor[(4, 1, 7), int16] */;
    %556 = reshape(%553, newshape=[4, 11, 7]) /* ty=Tensor[(4, 11, 7), int16] */;
    %557 = reshape(%554, newshape=[686]) /* ty=Tensor[(686), float64] */;
    %558 = @func_1958(%555, %556, %557) /* ty=(Tensor[(4, 11, 7), bool], Tensor[(4, 1, 7), float64], Tensor[(6, 8, 3), bool], Tensor[(8, 18), float64], Tensor[(686), float64]) */;
    %559 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
    %560 = %558.4;
    (%559, %560, meta[relay.Constant][19] /* ty=Tensor[(28), int16] */, %var_4895, %var_4896)
  };
  %561(%var_4901, %var_4902) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(28), int16], Tensor[(1, 308), int16], Tensor[(686), float64]) */
}

def @func_8230() -> (Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(9, 13, 12), bool]) {
  %562 = @func_5086() /* ty=(Tensor[(686), float64],) */;
  %563 = %562.0;
  %564 = cast(%563, dtype="float64") /* ty=Tensor[(686), float64] */;
  %565 = reshape(%564, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %566 = @func_3785(%565) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %567 = @func_4647() /* ty=Tensor[(9, 13, 12), bool] */;
  %568 = %566.0;
  (%567, %563, %568)
}

def @func_11959() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) {
  @func_11957() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) */
}

def @func_12049(%var_12031: Tensor[(48), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(48), float64], Tensor[(48), float64]) {
  %569 = @func_11503() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
  %570 = %569.0;
  %571 = cast(%570, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
  %572 = cast(%var_12031, dtype="float64") /* ty=Tensor[(48), float64] */;
  %573 = reshape(%571, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), bool] */;
  %574 = reshape(%572, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %575 = @func_5405(%573, %574) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64]) */;
  %576 = %575.3;
  (%570, %576, %var_12031)
}

def @func_9670(%var_9588: Tensor[(686), float64], %var_9604: Tensor[(910), float32]) -> (Tensor[(72), float64], Tensor[(686), uint32], Tensor[(686), float64], Tensor[(14, 13, 5), float32], Tensor[(910), float64], Tensor[(10, 7, 13), float64], Tensor[(9, 13, 12), float32], Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(14, 13, 5), float32]) {
  %577 = @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */;
  %578 = cast(%var_9588, dtype="float64") /* ty=Tensor[(686), float64] */;
  %579 = cast(%var_9588, dtype="float64") /* ty=Tensor[(686), float64] */;
  %580 = cast(%var_9588, dtype="float64") /* ty=Tensor[(686), float64] */;
  %581 = reshape(%578, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %582 = reshape(%579, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %583 = reshape(%580, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %584 = @func_4811(%581, %582, %583) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), uint64], Tensor[(686), float64], Tensor[(686), uint32], Tensor[(686), bool]) */;
  %585 = cast(meta[relay.Constant][20] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %586 = cast(meta[relay.Constant][20] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %587 = reshape(%585, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %588 = reshape(%586, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %589 = @func_7332(%587, %588) /* ty=(Tensor[(14, 13, 5), float32],) */;
  %590 = cast(%var_9604, dtype="float64") /* ty=Tensor[(910), float64] */;
  %591 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(910), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %592 = cast(meta[relay.Constant][20] /* ty=Tensor[(910), float32] */, dtype="float64") /* ty=Tensor[(910), float64] */;
  %593 = dyn.reshape(%590, %591, newshape=[]) /* ty=Tensor[(?), float64] */;
  %594 = @func_8908() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %595 = @func_5478() /* ty=(Tensor[(72), float64],) */;
  %596 = @func_8908() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %597 = %589.0;
  %598 = cast(%597, dtype="float32") /* ty=Tensor[(14, 13, 5), float32] */;
  %599 = floor_divide(%592, %593) /* ty=Tensor[(910), float64] */;
  %600 = cast(%599, dtype="float32") /* ty=Tensor[(910), float32] */;
  %601 = reshape(%598, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %602 = reshape(%600, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %603 = @func_7332(%601, %602) /* ty=(Tensor[(14, 13, 5), float32],) */;
  %604 = %577.2;
  %605 = %584.3;
  %606 = @func_6152() /* ty=Tensor[(10, 7, 13), float64] */;
  %607 = %594.0;
  %608 = %595.0;
  %609 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  %610 = %596.0;
  %611 = %603.0;
  (%604, %605, %var_9588, %597, %599, %606, %607, %608, %609, %610, %611)
}

def @func_11866(%var_11864: Tensor[(1, 308), int16], %var_11865: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(1, 308), int16], Tensor[(686), bool], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64]) {
  %635 = fn (%var_11837: Tensor[(1, 308), int16], %var_11846: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(1, 308), int16], Tensor[(686), bool], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64]) {
    %612 = @func_7651() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %613 = @func_9400() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %614 = cast(%var_11837, dtype="int16") /* ty=Tensor[(1, 308), int16] */;
    %615 = cast(meta[relay.Constant][21] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
    %616 = reshape(%614, newshape=[1, 308]) /* ty=Tensor[(1, 308), int16] */;
    %617 = reshape(%615, newshape=[686]) /* ty=Tensor[(686), float64] */;
    %618 = @func_4900(%616, %617) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(28), int16], Tensor[(1, 308), int16], Tensor[(686), float64]) */;
    %619 = cast(%var_11846, dtype="bool") /* ty=Tensor[(686), bool] */;
    %620 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(686), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %621 = cast(meta[relay.Constant][21] /* ty=Tensor[(686), float64] */, dtype="bool") /* ty=Tensor[(686), bool] */;
    %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?), bool] */;
    %623 = @func_9894() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %624 = not_equal(%621, %622) /* ty=Tensor[(686), bool] */;
    %625 = cast(%624, dtype="float64") /* ty=Tensor[(686), float64] */;
    %626 = reshape(%625, newshape=[7, 98]) /* ty=Tensor[(7, 98), float64] */;
    %627 = @func_7319(%626) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(7, 98), float64]) */;
    %628 = @func_7035() /* ty=(Tensor[(704), float64], Tensor[(72), float64]) */;
    %629 = %612.0;
    %630 = %613.0;
    %631 = %618.0;
    %632 = %623.0;
    %633 = %627.0;
    %634 = %628.1;
    (%629, %630, %631, %var_11837, %624, %632, %633, %634)
  };
  %635(%var_11864, %var_11865) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(1, 308), int16], Tensor[(686), bool], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64]) */
}

def @main(%var_12823: Tensor[(14, 14, 5), float64]) -> Tensor[(14, 14, 5), float64] {
  %636 = cast(%var_12823, dtype="float64") /* ty=Tensor[(14, 14, 5), float64] */;
  tan(%636) /* ty=Tensor[(14, 14, 5), float64] */
}

def @func_5801() -> (Tensor[(72), float64], Tensor[(72), float64]) {
  @func_5799() /* ty=(Tensor[(72), float64], Tensor[(72), float64]) */
}

def @func_11937() -> (Tensor[(9, 13, 12), bool],) {
  %637 = @func_5303() /* ty=Tensor[(9, 13, 12), bool] */;
  (%637,)
}

def @func_10512() -> Tensor[(9, 13, 12), float32] {
  %639 = fn () -> Tensor[(9, 13, 12), float32] {
    %638 = @func_7882() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
    %638.0
  };
  %639() /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_8438() -> (Tensor[(9, 13, 12), float32],) {
  %640 = @func_5908() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %641 = %640.0;
  (%641,)
}

def @func_5250() -> (Tensor[(9, 13, 12), bool],) {
  %643 = fn () -> (Tensor[(9, 13, 12), bool],) {
    %642 = @func_4647() /* ty=Tensor[(9, 13, 12), bool] */;
    (%642,)
  };
  %643() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_7930() -> Tensor[(9, 13, 12), bool] {
  %645 = fn () -> Tensor[(9, 13, 12), bool] {
    %644 = @func_6756() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %644.0
  };
  %645() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_8245(%var_8238: Tensor[(15, 9, 7), float64]) -> (Tensor[(15, 9, 7), float64],) {
  %646 = cast(%var_8238, dtype="float64") /* ty=Tensor[(15, 9, 7), float64] */;
  %647 = cos(%646) /* ty=Tensor[(15, 9, 7), float64] */;
  (%647,)
}

def @func_8523() -> (Tensor[(9, 13, 12), bool],) {
  %648 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
  (%648,)
}

def @func_2234(%var_2227: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), float64], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) {
  %649 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  %650 = cast(%649, dtype="float64") /* ty=Tensor[(9, 13, 12), float64] */;
  %651 = cast(%var_2227, dtype="float64") /* ty=Tensor[(686), float64] */;
  %652 = cast(%var_2227, dtype="float64") /* ty=Tensor[(686), float64] */;
  %653 = reshape(%651, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %654 = reshape(%652, newshape=[14, 7, 7]) /* ty=Tensor[(14, 7, 7), float64] */;
  %655 = rsqrt(%650) /* ty=Tensor[(9, 13, 12), float64] */;
  %656 = @func_803(%653, %654) /* ty=Tensor[(14, 7, 7), float64] */;
  (%655, %656, %var_2227)
}

def @func_9010() -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(704), float64]) {
  %657 = @func_5249() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %658 = cast(meta[relay.Constant][22] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %659 = reshape(%658, newshape=[4, 176]) /* ty=Tensor[(4, 176), float64] */;
  %660 = @func_5234(%659) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(704), float64], Tensor[(28), int16], Tensor[(4, 176), float64], Tensor[(9, 13, 12), bool]) */;
  %661 = @func_7486() /* ty=Tensor[(9, 13, 12), float32] */;
  %662 = %657.0;
  %663 = %660.4;
  (%661, %662, %663, meta[relay.Constant][22] /* ty=Tensor[(704), float64] */)
}

def @func_10112(%var_10108: Tensor[(1, 7, 7), uint64], %var_10109: Tensor[(1, 7, 7), uint64], %var_10110: Tensor[(28), int16], %var_10111: Tensor[(686), float64]) -> (Tensor[(?, 7, 7), bool], Tensor[(?, 7, 7), bool], Tensor[(28), int16], Tensor[(686), int16], Tensor[(686), float64]) {
  %685 = fn (%var_10043: Tensor[(1, 7, 7), uint64], %var_10044: Tensor[(1, 7, 7), uint64], %var_10085: Tensor[(28), int16], %var_10092: Tensor[(686), float64]) -> (Tensor[(?, 7, 7), bool], Tensor[(?, 7, 7), bool], Tensor[(28), int16], Tensor[(686), int16], Tensor[(686), float64]) {
    %664 = cast(%var_10044, dtype="bool") /* ty=Tensor[(1, 7, 7), bool] */;
    %665 = shape_of(%var_10043, dtype="int32") /* ty=Tensor[(3), int32] */;
    %666 = cast(%var_10043, dtype="bool") /* ty=Tensor[(1, 7, 7), bool] */;
    %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %668 = cast(%var_10044, dtype="bool") /* ty=Tensor[(1, 7, 7), bool] */;
    %669 = shape_of(%var_10043, dtype="int32") /* ty=Tensor[(3), int32] */;
    %670 = cast(%var_10043, dtype="bool") /* ty=Tensor[(1, 7, 7), bool] */;
    %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %672 = cast(%var_10085, dtype="int16") /* ty=Tensor[(28), int16] */;
    %673 = reshape(%672, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %674 = @func_2287(%673) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 1, 7), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */;
    %675 = %674.4;
    %676 = cast(%var_10092, dtype="int16") /* ty=Tensor[(686), int16] */;
    %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(1), int32] */;
    %678 = cast(%675, dtype="int16") /* ty=Tensor[(686), int16] */;
    %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?), int16] */;
    %680 = @func_6328() /* ty=(Tensor[(686), float64], Tensor[(9, 13, 12), float64], Tensor[(1404), bool]) */;
    %681 = not_equal(%666, %667) /* ty=Tensor[(?, 7, 7), bool] */;
    %682 = logical_or(%670, %671) /* ty=Tensor[(?, 7, 7), bool] */;
    %683 = bitwise_xor(%678, %679) /* ty=Tensor[(686), int16] */;
    %684 = %680.0;
    (%681, %682, %var_10085, %683, %684)
  };
  %685(%var_10108, %var_10109, %var_10110, %var_10111) /* ty=(Tensor[(?, 7, 7), bool], Tensor[(?, 7, 7), bool], Tensor[(28), int16], Tensor[(686), int16], Tensor[(686), float64]) */
}

def @func_9719() -> Tensor[(9, 13, 12), bool] {
  @func_9717() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_8050() -> (Tensor[(9, 13, 12), bool],) {
  %686 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
  (%686,)
}

def @func_5209(%var_5167: Tensor[(7, 98), float64]) -> (Tensor[(72), float64], Tensor[(7, 98), bool]) {
  %687 = @func_2850() /* ty=(Tensor[(72), float64],) */;
  %688 = cast(%var_5167, dtype="float64") /* ty=Tensor[(7, 98), float64] */;
  %689 = reshape(%688, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %690 = @func_3785(%689) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %691 = %690.2;
  %692 = cast(%691, dtype="int32") /* ty=Tensor[(14, 7, 7), int32] */;
  %693 = shape_of(%var_5167, dtype="int32") /* ty=Tensor[(2), int32] */;
  %694 = cast(%var_5167, dtype="int32") /* ty=Tensor[(7, 98), int32] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %696 = minimum(%694, %695) /* ty=Tensor[(7, 98), int32] */;
  %697 = cast(%696, dtype="bool") /* ty=Tensor[(7, 98), bool] */;
  %698 = shape_of(%var_5167, dtype="int32") /* ty=Tensor[(2), int32] */;
  %699 = cast(%var_5167, dtype="bool") /* ty=Tensor[(7, 98), bool] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %701 = %687.0;
  %702 = logical_or(%699, %700) /* ty=Tensor[(7, 98), bool] */;
  (%701, %702)
}

def @func_6843(%var_6842: Tensor[(10, 7, 13), float64]) -> Tensor[(10, 7, 13), float32] {
  %708 = fn (%var_6828: Tensor[(10, 7, 13), float64]) -> Tensor[(10, 7, 13), float32] {
    %703 = @func_6152() /* ty=Tensor[(10, 7, 13), float64] */;
    %704 = cast(%var_6828, dtype="float32") /* ty=Tensor[(10, 7, 13), float32] */;
    %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(3), int32] */;
    %706 = cast(%703, dtype="float32") /* ty=Tensor[(10, 7, 13), float32] */;
    %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    power(%706, %707) /* ty=Tensor[(10, 7, 13), float32] */
  };
  %708(%var_6842) /* ty=Tensor[(10, 7, 13), float32] */
}

def @func_9469() -> Tensor[(9, 13, 12), int64] {
  @func_8818() /* ty=Tensor[(9, 13, 12), int64] */
}

def @func_3346() -> Tensor[(9, 13, 12), bool] {
  @func_2191() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_5744() -> Tensor[(9, 13, 12), bool] {
  %709 = @func_3328() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %709.1
}

def @func_11379(%var_11346: Tensor[(1, 16, 5), float32]) -> (Tensor[(1, 16, 5), float32], Tensor[(1, 16, 5), float64], Tensor[(9, 13, 12), bool]) {
  %710 = cast(%var_11346, dtype="float32") /* ty=Tensor[(1, 16, 5), float32] */;
  %711 = cast(%var_11346, dtype="float64") /* ty=Tensor[(1, 16, 5), float64] */;
  %712 = @func_8523() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %713 = sin(%710) /* ty=Tensor[(1, 16, 5), float32] */;
  %714 = tan(%711) /* ty=Tensor[(1, 16, 5), float64] */;
  %715 = %712.0;
  (%713, %714, %715)
}

def @func_10139() -> (Tensor[(9, 13, 12), float64],) {
  @func_10137() /* ty=(Tensor[(9, 13, 12), float64],) */
}

def @func_5717(%var_5715: Tensor[(1, 686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(14, 7, 7), float64], Tensor[(?, 686), bool], Tensor[(686), float64], Tensor[(72), float64]) {
  @func_5714(%var_5715) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(14, 7, 7), float64], Tensor[(?, 686), bool], Tensor[(686), float64], Tensor[(72), float64]) */
}

def @func_8392() -> (Tensor[(9, 13, 12), float32], Tensor[(686), uint16], Tensor[(9, 13, 12), bool], Tensor[(686), float32]) {
  @func_8390() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(686), uint16], Tensor[(9, 13, 12), bool], Tensor[(686), float32]) */
}

def @func_11154(%var_11152: Tensor[(686), float64]) -> (Tensor[(4, 16, 11), float32], Tensor[(9, 13, 12), float32], Tensor[(686), float64], Tensor[(686), float32], Tensor[(9, 13, 12), bool]) {
  @func_11151(%var_11152) /* ty=(Tensor[(4, 16, 11), float32], Tensor[(9, 13, 12), float32], Tensor[(686), float64], Tensor[(686), float32], Tensor[(9, 13, 12), bool]) */
}

def @func_2777(%var_2775: Tensor[(13, 11, 13), float64], %var_2776: Tensor[(13, 11, 13), float64]) -> (Tensor[(13, 11, 13), float64], Tensor[(9, 13, 12), float32]) {
  %723 = fn (%var_2747: Tensor[(13, 11, 13), float64], %var_2748: Tensor[(13, 11, 13), float64]) -> (Tensor[(13, 11, 13), float64], Tensor[(9, 13, 12), float32]) {
    %716 = cast(%var_2748, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
    %717 = shape_of(%var_2747, dtype="int32") /* ty=Tensor[(3), int32] */;
    %718 = cast(%var_2747, dtype="float64") /* ty=Tensor[(13, 11, 13), float64] */;
    %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %720 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
    %721 = floor_mod(%718, %719) /* ty=Tensor[(13, 11, 13), float64] */;
    %722 = %720.0;
    (%721, %722)
  };
  %723(%var_2775, %var_2776) /* ty=(Tensor[(13, 11, 13), float64], Tensor[(9, 13, 12), float32]) */
}

def @func_2358() -> (Tensor[(9, 13, 12), bool],) {
  @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_2548(%var_2547: Tensor[(4, 16, 11), float64]) -> (Tensor[(4, 16, 11), int16], Tensor[(4, 16, 11), float64]) {
  %733 = fn (%var_2524: Tensor[(4, 16, 11), float64]) -> (Tensor[(4, 16, 11), int16], Tensor[(4, 16, 11), float64]) {
    %724 = cast(%var_2524, dtype="float64") /* ty=Tensor[(4, 16, 11), float64] */;
    %725 = cosh(%724) /* ty=Tensor[(4, 16, 11), float64] */;
    %726 = cast(%725, dtype="int16") /* ty=Tensor[(4, 16, 11), int16] */;
    %727 = shape_of(%var_2524, dtype="int32") /* ty=Tensor[(3), int32] */;
    %728 = cast(%var_2524, dtype="int16") /* ty=Tensor[(4, 16, 11), int16] */;
    %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %730 = cast(%var_2524, dtype="float64") /* ty=Tensor[(4, 16, 11), float64] */;
    %731 = right_shift(%728, %729) /* ty=Tensor[(4, 16, 11), int16] */;
    %732 = log2(%730) /* ty=Tensor[(4, 16, 11), float64] */;
    (%731, %732)
  };
  %733(%var_2547) /* ty=(Tensor[(4, 16, 11), int16], Tensor[(4, 16, 11), float64]) */
}

def @func_9152(%var_9150: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(686), bool]) {
  @func_9149(%var_9150) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), bool]) */
}

def @func_8557() -> (Tensor[(9, 13, 12), bool],) {
  %734 = @func_8523() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %735 = %734.0;
  (%735,)
}

def @func_9842() -> Tensor[(9, 13, 12), bool] {
  %737 = fn () -> Tensor[(9, 13, 12), bool] {
    %736 = @func_6548() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), int16], Tensor[(704), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) */;
    %736.3
  };
  %737() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_2852() -> (Tensor[(72), float64],) {
  @func_2850() /* ty=(Tensor[(72), float64],) */
}

def @func_12402() -> (Tensor[(9, 13, 12), bool],) {
  @func_12400() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_12193(%var_12166: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(686), float32], Tensor[(686), bool]) {
  %738 = @func_4063() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %739 = cast(%var_12166, dtype="float32") /* ty=Tensor[(686), float32] */;
  %740 = @func_11624() /* ty=Tensor[(686), float64] */;
  %741 = cast(%var_12166, dtype="uint8") /* ty=Tensor[(686), uint8] */;
  %742 = shape_of(%740, dtype="int32") /* ty=Tensor[(1), int32] */;
  %743 = cast(%740, dtype="uint8") /* ty=Tensor[(686), uint8] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %745 = right_shift(%743, %744) /* ty=Tensor[(686), uint8] */;
  %746 = cast(%var_12166, dtype="bool") /* ty=Tensor[(686), bool] */;
  %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(1), int32] */;
  %748 = cast(%745, dtype="bool") /* ty=Tensor[(686), bool] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?), bool] */;
  %750 = @func_3346() /* ty=Tensor[(9, 13, 12), bool] */;
  %751 = %738.0;
  %752 = sin(%739) /* ty=Tensor[(686), float32] */;
  %753 = greater_equal(%748, %749) /* ty=Tensor[(686), bool] */;
  (%750, %751, %752, %753)
}

def @func_9081() -> (Tensor[(9, 13, 12), bool],) {
  @func_9079() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_4065() -> (Tensor[(9, 13, 12), bool],) {
  @func_4063() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_9717() -> Tensor[(9, 13, 12), bool] {
  %754 = @func_8050() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %754.0
}

def @func_12462() -> (Tensor[(9, 13, 12), bool],) {
  %755 = @func_4258() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(9, 13, 12), float32]) */;
  %756 = %755.0;
  (%756,)
}

def @func_11221() -> (Tensor[(11, 4, 15), float32], Tensor[(72), float64]) {
  @func_11219() /* ty=(Tensor[(11, 4, 15), float32], Tensor[(72), float64]) */
}

def @func_5941(%var_5937: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) {
  %757 = @func_4647() /* ty=Tensor[(9, 13, 12), bool] */;
  %758 = cast(%757, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  %759 = cast(%var_5937, dtype="float64") /* ty=Tensor[(686), float64] */;
  %760 = reshape(%759, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %761 = @func_3785(%760) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */;
  %762 = sigmoid(%758) /* ty=Tensor[(9, 13, 12), float32] */;
  %763 = %761.2;
  (%762, %763, %var_5937)
}

def @func_4816(%var_4813: Tensor[(686), float64], %var_4814: Tensor[(686), float64], %var_4815: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(686), uint64], Tensor[(686), float64], Tensor[(686), uint32], Tensor[(686), bool]) {
  @func_4811(%var_4813, %var_4814, %var_4815) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), uint64], Tensor[(686), float64], Tensor[(686), uint32], Tensor[(686), bool]) */
}

def @func_3918() -> Tensor[(9, 13, 12), bool] {
  %764 = fn () -> Tensor[(9, 13, 12), bool] {
    @func_2191() /* ty=Tensor[(9, 13, 12), bool] */
  };
  %764() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_12273() -> (Tensor[(9, 13, 12), float64], Tensor[(9, 13, 12), bool]) {
  @func_12271() /* ty=(Tensor[(9, 13, 12), float64], Tensor[(9, 13, 12), bool]) */
}

def @func_7463() -> (Tensor[(9, 13, 12), float32],) {
  %767 = fn () -> (Tensor[(9, 13, 12), float32],) {
    %765 = @func_6548() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), int16], Tensor[(704), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) */;
    %766 = %765.4;
    (%766,)
  };
  %767() /* ty=(Tensor[(9, 13, 12), float32],) */
}

def @func_10330() -> (Tensor[(686), float64], Tensor[(3, 16, 7), int8], Tensor[(336), int8], Tensor[(72), float64], Tensor[(686), float64], Tensor[(9, 13, 12), bool]) {
  @func_10328() /* ty=(Tensor[(686), float64], Tensor[(3, 16, 7), int8], Tensor[(336), int8], Tensor[(72), float64], Tensor[(686), float64], Tensor[(9, 13, 12), bool]) */
}

def @func_10754() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %771 = fn () -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
    %768 = @func_9998() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %769 = @func_7929() /* ty=Tensor[(9, 13, 12), bool] */;
    %770 = %768.0;
    (%769, %770)
  };
  %771() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */
}

def @func_5445(%var_5443: Tensor[(36, 2), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(36, 2), float64]) {
  %772 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %773 = @func_3494() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %774 = cast(%var_5443, dtype="float64") /* ty=Tensor[(36, 2), float64] */;
  %775 = reshape(%774, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %776 = @func_2817(%775) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(686), float64], Tensor[(72), float64], Tensor[(9, 13, 12), bool]) */;
  %777 = %772.0;
  %778 = %773.0;
  %779 = %776.2;
  (%777, %778, %779, %var_5443)
}

def @func_12124(%var_12086: Tensor[(14, 3, 3), int32], %var_12087: Tensor[(14, 3, 3), int32], %var_12095: Tensor[(14, 3, 3), int32]) -> (Tensor[(14, 3, 3), uint64], Tensor[(14, 3, 3), float32], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(72), float64]) {
  %780 = cast(%var_12087, dtype="int32") /* ty=Tensor[(14, 3, 3), int32] */;
  %781 = shape_of(%var_12086, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%var_12086, dtype="int32") /* ty=Tensor[(14, 3, 3), int32] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %784 = maximum(%782, %783) /* ty=Tensor[(14, 3, 3), int32] */;
  %785 = cast(%var_12095, dtype="uint64") /* ty=Tensor[(14, 3, 3), uint64] */;
  %786 = shape_of(%784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %787 = cast(%784, dtype="uint64") /* ty=Tensor[(14, 3, 3), uint64] */;
  %788 = dyn.reshape(%785, %786, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %789 = cast(%var_12087, dtype="float32") /* ty=Tensor[(14, 3, 3), float32] */;
  %790 = @func_3494() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %791 = @func_5799() /* ty=(Tensor[(72), float64], Tensor[(72), float64]) */;
  %792 = left_shift(%787, %788) /* ty=Tensor[(14, 3, 3), uint64] */;
  %793 = acosh(%789) /* ty=Tensor[(14, 3, 3), float32] */;
  %794 = %790.0;
  %795 = @func_10424() /* ty=Tensor[(9, 13, 12), float32] */;
  %796 = %791.0;
  (%792, %793, %794, %795, %796)
}

def @func_3348() -> Tensor[(9, 13, 12), bool] {
  @func_3346() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_1963(%var_1960: Tensor[(4, 1, 7), int16], %var_1961: Tensor[(4, 11, 7), int16], %var_1962: Tensor[(686), float64]) -> (Tensor[(4, 11, 7), bool], Tensor[(4, 1, 7), float64], Tensor[(6, 8, 3), bool], Tensor[(8, 18), float64], Tensor[(686), float64]) {
  @func_1958(%var_1960, %var_1961, %var_1962) /* ty=(Tensor[(4, 11, 7), bool], Tensor[(4, 1, 7), float64], Tensor[(6, 8, 3), bool], Tensor[(8, 18), float64], Tensor[(686), float64]) */
}

def @func_9079() -> (Tensor[(9, 13, 12), bool],) {
  %797 = @func_8050() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %798 = %797.0;
  (%798,)
}

def @func_6550() -> (Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), int16], Tensor[(704), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) {
  @func_6548() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), int16], Tensor[(704), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) */
}

def @func_5568() -> (Tensor[(72), float64], Tensor[(704), float64], Tensor[(4, 176), float64], Tensor[(7, 98), bool], Tensor[(686), float64]) {
  %809 = fn () -> (Tensor[(72), float64], Tensor[(704), float64], Tensor[(4, 176), float64], Tensor[(7, 98), bool], Tensor[(686), float64]) {
    %799 = @func_5478() /* ty=(Tensor[(72), float64],) */;
    %800 = cast(meta[relay.Constant][23] /* ty=Tensor[(4, 176), float64] */, dtype="float64") /* ty=Tensor[(4, 176), float64] */;
    %801 = reshape(%800, newshape=[4, 176]) /* ty=Tensor[(4, 176), float64] */;
    %802 = @func_5234(%801) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(704), float64], Tensor[(28), int16], Tensor[(4, 176), float64], Tensor[(9, 13, 12), bool]) */;
    %803 = cast(meta[relay.Constant][24] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
    %804 = reshape(%803, newshape=[7, 98]) /* ty=Tensor[(7, 98), float64] */;
    %805 = @func_5209(%804) /* ty=(Tensor[(72), float64], Tensor[(7, 98), bool]) */;
    %806 = %799.0;
    %807 = %802.1;
    %808 = %805.1;
    (%806, %807, meta[relay.Constant][23] /* ty=Tensor[(4, 176), float64] */, %808, meta[relay.Constant][24] /* ty=Tensor[(686), float64] */)
  };
  %809() /* ty=(Tensor[(72), float64], Tensor[(704), float64], Tensor[(4, 176), float64], Tensor[(7, 98), bool], Tensor[(686), float64]) */
}

def @func_5405(%var_5334: Tensor[(9, 13, 12), bool], %var_5376: Tensor[(48), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64]) {
  %810 = @func_3494() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %811 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %812 = %811.0;
  %813 = cast(%var_5334, dtype="uint8") /* ty=Tensor[(9, 13, 12), uint8] */;
  %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%812, dtype="uint8") /* ty=Tensor[(9, 13, 12), uint8] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %817 = bitwise_and(%815, %816) /* ty=Tensor[(9, 13, 12), uint8] */;
  %818 = cast(%817, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  %819 = cast(%var_5376, dtype="float64") /* ty=Tensor[(48), float64] */;
  %820 = reshape(%819, newshape=[16, 1, 3]) /* ty=Tensor[(16, 1, 3), float64] */;
  %821 = %810.0;
  %822 = log10(%818) /* ty=Tensor[(9, 13, 12), float32] */;
  %823 = @func_4568(%820) /* ty=Tensor[(16, 1, 3), float64] */;
  (%821, %822, %823, %var_5376)
}

def @func_12672() -> (Tensor[(9, 13, 12), bool],) {
  @func_12670() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_10380() -> Tensor[(9, 13, 12), float32] {
  @func_10378() /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_11121() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  @func_11119() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */
}

def @func_2192() -> Tensor[(9, 13, 12), bool] {
  %830 = fn () -> Tensor[(9, 13, 12), bool] {
    %824 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 13, 12), float32] */, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
    %825 = log2(%824) /* ty=Tensor[(9, 13, 12), float32] */;
    %826 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 13, 12), float32] */, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
    %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(3), int32] */;
    %828 = cast(%825, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
    %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%828, %829) /* ty=Tensor[(9, 13, 12), bool] */
  };
  %830() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_8052() -> (Tensor[(9, 13, 12), bool],) {
  @func_8050() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_2595() -> (Tensor[(9, 13, 12), float32],) {
  %834 = fn () -> (Tensor[(9, 13, 12), float32],) {
    %831 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
    %832 = cast(%831, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
    %833 = exp(%832) /* ty=Tensor[(9, 13, 12), float32] */;
    (%833,)
  };
  %834() /* ty=(Tensor[(9, 13, 12), float32],) */
}

def @func_2850() -> (Tensor[(72), float64],) {
  %835 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %836 = %835.2;
  (%836,)
}

def @func_2410(%var_2409: Tensor[(6, 12), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(6, 12), float64]) {
  %843 = fn (%var_2406: Tensor[(6, 12), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(6, 12), float64]) {
    %837 = @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %838 = cast(%var_2406, dtype="float64") /* ty=Tensor[(6, 12), float64] */;
    %839 = reshape(%838, newshape=[3, 3, 8]) /* ty=Tensor[(3, 3, 8), float64] */;
    %840 = @func_2017(%839) /* ty=(Tensor[(3, 3, 8), float64], Tensor[(3, 3, 8), float32], Tensor[(686), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */;
    %841 = %837.0;
    %842 = %840.3;
    (%841, %842, %var_2406)
  };
  %843(%var_2409) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(6, 12), float64]) */
}

def @func_7948() -> Tensor[(9, 13, 12), float32] {
  %844 = fn () -> Tensor[(9, 13, 12), float32] {
    @func_6381() /* ty=Tensor[(9, 13, 12), float32] */
  };
  %844() /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_5480() -> (Tensor[(72), float64],) {
  @func_5478() /* ty=(Tensor[(72), float64],) */
}

def @func_3328() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %845 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %846 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
  %847 = %845.0;
  (%846, %847)
}

def @func_11973() -> (Tensor[(9, 13, 12), bool],) {
  @func_11971() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_3179() -> Tensor[(686), float64] {
  %849 = fn () -> Tensor[(686), float64] {
    %848 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
    %848.1
  };
  %849() /* ty=Tensor[(686), float64] */
}

def @func_5212(%var_5210: Tensor[(7, 98), float64]) -> (Tensor[(72), float64], Tensor[(7, 98), bool]) {
  @func_5209(%var_5210) /* ty=(Tensor[(72), float64], Tensor[(7, 98), bool]) */
}

def @func_11151(%var_11145: Tensor[(686), float64]) -> (Tensor[(4, 16, 11), float32], Tensor[(9, 13, 12), float32], Tensor[(686), float64], Tensor[(686), float32], Tensor[(9, 13, 12), bool]) {
  %850 = @func_7158() /* ty=(Tensor[(704), float64], Tensor[(9, 13, 12), float32], Tensor[(4, 16, 11), int16]) */;
  %851 = %850.2;
  %852 = cast(%851, dtype="float32") /* ty=Tensor[(4, 16, 11), float32] */;
  %853 = cast(%var_11145, dtype="float64") /* ty=Tensor[(686), float64] */;
  %854 = reshape(%853, newshape=[686]) /* ty=Tensor[(686), float64] */;
  %855 = @func_6994(%854) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(28), int16], Tensor[(704), float64], Tensor[(6, 8, 3), bool], Tensor[(308), int16], Tensor[(686), float64], Tensor[(686), float64]) */;
  %856 = cast(%var_11145, dtype="float32") /* ty=Tensor[(686), float32] */;
  %857 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %858 = acos(%852) /* ty=Tensor[(4, 16, 11), float32] */;
  %859 = @func_4280() /* ty=Tensor[(9, 13, 12), float32] */;
  %860 = %855.6;
  %861 = atan(%856) /* ty=Tensor[(686), float32] */;
  %862 = %857.0;
  (%858, %859, %860, %861, %862)
}

def @func_6548() -> (Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), int16], Tensor[(704), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) {
  %863 = cast(meta[relay.Constant][26] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %864 = reshape(%863, newshape=[4, 16, 11]) /* ty=Tensor[(4, 16, 11), float64] */;
  %865 = @func_2546(%864) /* ty=(Tensor[(4, 16, 11), int16], Tensor[(4, 16, 11), float64]) */;
  %866 = @func_3484() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %867 = @func_6328() /* ty=(Tensor[(686), float64], Tensor[(9, 13, 12), float64], Tensor[(1404), bool]) */;
  %868 = %867.1;
  %869 = cast(%868, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
  %870 = @func_5744() /* ty=Tensor[(9, 13, 12), bool] */;
  %871 = %865.0;
  %872 = %866.0;
  %873 = cosh(%869) /* ty=Tensor[(9, 13, 12), float32] */;
  (%870, %871, meta[relay.Constant][26] /* ty=Tensor[(704), float64] */, %872, %873)
}

def @func_7420(%var_7417: Tensor[(704), float64], %var_7418: Tensor[(704), float64], %var_7419: Tensor[(1859, 1), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(28), int16], Tensor[(1859), float64], Tensor[(1859, 1), float64], Tensor[(72), float64], Tensor[(704), float32], Tensor[(9, 13, 12), bool]) {
  @func_7415(%var_7417, %var_7418, %var_7419) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(28), int16], Tensor[(1859), float64], Tensor[(1859, 1), float64], Tensor[(72), float64], Tensor[(704), float32], Tensor[(9, 13, 12), bool]) */
}

def @func_9300(%var_9278: Tensor[(28), int16], %var_9285: Tensor[(704), float64]) -> (Tensor[(686), uint16], Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(704), bool]) {
  %874 = @func_8390() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(686), uint16], Tensor[(9, 13, 12), bool], Tensor[(686), float32]) */;
  %875 = cast(%var_9278, dtype="int16") /* ty=Tensor[(28), int16] */;
  %876 = cast(meta[relay.Constant][27] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %877 = reshape(%875, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %878 = reshape(%876, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %879 = @func_4374(%877, %878) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(4, 16, 11), int16], Tensor[(704), float64]) */;
  %880 = cast(%var_9285, dtype="bool") /* ty=Tensor[(704), bool] */;
  %881 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(704), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %882 = cast(meta[relay.Constant][27] /* ty=Tensor[(704), float64] */, dtype="bool") /* ty=Tensor[(704), bool] */;
  %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?), bool] */;
  %884 = %874.1;
  %885 = %879.0;
  %886 = less(%882, %883) /* ty=Tensor[(704), bool] */;
  (%884, %885, %var_9278, %886)
}

def @func_8525() -> (Tensor[(9, 13, 12), bool],) {
  @func_8523() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_8248(%var_8246: Tensor[(15, 9, 7), float64]) -> (Tensor[(15, 9, 7), float64],) {
  @func_8245(%var_8246) /* ty=(Tensor[(15, 9, 7), float64],) */
}

def @func_5746() -> Tensor[(9, 13, 12), bool] {
  @func_5744() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_2237(%var_2235: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), float64], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) {
  @func_2234(%var_2235) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */
}

def @func_2316() -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) {
  %891 = fn () -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) {
    %887 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
    %888 = cast(%887, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
    %889 = sinh(%888) /* ty=Tensor[(9, 13, 12), float32] */;
    %890 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
    (%889, %890)
  };
  %891() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */
}

def @func_2820(%var_2818: Tensor[(72), float64]) -> (Tensor[(9, 13, 12), float64], Tensor[(686), float64], Tensor[(72), float64], Tensor[(9, 13, 12), bool]) {
  @func_2817(%var_2818) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(686), float64], Tensor[(72), float64], Tensor[(9, 13, 12), bool]) */
}

def @func_7335(%var_7333: Tensor[(14, 13, 5), float32], %var_7334: Tensor[(14, 13, 5), float32]) -> (Tensor[(14, 13, 5), float32],) {
  %897 = fn (%var_7325: Tensor[(14, 13, 5), float32], %var_7326: Tensor[(14, 13, 5), float32]) -> (Tensor[(14, 13, 5), float32],) {
    %892 = cast(%var_7326, dtype="float32") /* ty=Tensor[(14, 13, 5), float32] */;
    %893 = shape_of(%var_7325, dtype="int32") /* ty=Tensor[(3), int32] */;
    %894 = cast(%var_7325, dtype="float32") /* ty=Tensor[(14, 13, 5), float32] */;
    %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %896 = divide(%894, %895) /* ty=Tensor[(14, 13, 5), float32] */;
    (%896,)
  };
  %897(%var_7333, %var_7334) /* ty=(Tensor[(14, 13, 5), float32],) */
}

def @func_11014(%var_11012: Tensor[(48), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(14, 13, 5), bool], Tensor[(48), float64], Tensor[(48), float64]) {
  %898 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 910), float32] */, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
  %899 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 910), float32] */, dtype="float32") /* ty=Tensor[(1, 910), float32] */;
  %900 = reshape(%898, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %901 = reshape(%899, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %902 = @func_7332(%900, %901) /* ty=(Tensor[(14, 13, 5), float32],) */;
  %903 = %902.0;
  %904 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 910), float32] */, dtype="bool") /* ty=Tensor[(1, 910), bool] */;
  %905 = shape_of(%903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%903, dtype="bool") /* ty=Tensor[(14, 13, 5), bool] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %908 = @func_6381() /* ty=Tensor[(9, 13, 12), float32] */;
  %909 = cast(%908, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
  %910 = cast(%var_11012, dtype="float64") /* ty=Tensor[(48), float64] */;
  %911 = reshape(%909, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), bool] */;
  %912 = reshape(%910, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %913 = @func_5405(%911, %912) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(16, 1, 3), float64], Tensor[(48), float64]) */;
  %914 = logical_and(%906, %907) /* ty=Tensor[(14, 13, 5), bool] */;
  %915 = %913.3;
  (%908, %914, %915, %var_11012)
}

def @func_8785() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(686), float64], Tensor[(343, 2), float32]) {
  %924 = fn () -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(686), float64], Tensor[(343, 2), float32]) {
    %916 = cast(meta[relay.Constant][29] /* ty=Tensor[(686), float64] */, dtype="float64") /* ty=Tensor[(686), float64] */;
    %917 = reshape(%916, newshape=[343, 2]) /* ty=Tensor[(343, 2), float64] */;
    %918 = @func_6362(%917) /* ty=(Tensor[(72), float64], Tensor[(9, 13, 12), bool], Tensor[(686), float64], Tensor[(343, 2), float64]) */;
    %919 = %918.3;
    %920 = cast(%919, dtype="float32") /* ty=Tensor[(343, 2), float32] */;
    %921 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
    %922 = @func_4937() /* ty=Tensor[(9, 13, 12), float32] */;
    %923 = atanh(%920) /* ty=Tensor[(343, 2), float32] */;
    (%921, %922, meta[relay.Constant][29] /* ty=Tensor[(686), float64] */, %923)
  };
  %924() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(686), float64], Tensor[(343, 2), float32]) */
}

def @func_10328() -> (Tensor[(686), float64], Tensor[(3, 16, 7), int8], Tensor[(336), int8], Tensor[(72), float64], Tensor[(686), float64], Tensor[(9, 13, 12), bool]) {
  %925 = cast(meta[relay.Constant][30] /* ty=Tensor[(336), int8] */, dtype="int8") /* ty=Tensor[(336), int8] */;
  %926 = cast(meta[relay.Constant][30] /* ty=Tensor[(336), int8] */, dtype="int8") /* ty=Tensor[(336), int8] */;
  %927 = reshape(%925, newshape=[3, 16, 7]) /* ty=Tensor[(3, 16, 7), int8] */;
  %928 = reshape(%926, newshape=[3, 16, 7]) /* ty=Tensor[(3, 16, 7), int8] */;
  %929 = @func_3178() /* ty=Tensor[(686), float64] */;
  %930 = cast(%929, dtype="float64") /* ty=Tensor[(686), float64] */;
  %931 = reshape(%930, newshape=[7, 98]) /* ty=Tensor[(7, 98), float64] */;
  %932 = @func_5209(%931) /* ty=(Tensor[(72), float64], Tensor[(7, 98), bool]) */;
  %933 = @func_7067() /* ty=(Tensor[(686), bool], Tensor[(686), float64]) */;
  %934 = @func_6548() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), int16], Tensor[(704), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32]) */;
  %935 = @func_8696(%927, %928) /* ty=Tensor[(3, 16, 7), int8] */;
  %936 = %932.0;
  %937 = %933.1;
  %938 = %934.0;
  (%929, %935, meta[relay.Constant][30] /* ty=Tensor[(336), int8] */, %936, %937, %938)
}

def @func_11677() -> Tensor[(9, 13, 12), bool] {
  %940 = fn () -> Tensor[(9, 13, 12), bool] {
    %939 = @func_7107() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %939.0
  };
  %940() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_11778() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), int64]) {
  %944 = fn () -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), int64]) {
    %941 = @func_7261() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %942 = %941.0;
    %943 = @func_9469() /* ty=Tensor[(9, 13, 12), int64] */;
    (%942, %943)
  };
  %944() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), int64]) */
}

def @func_4648() -> Tensor[(9, 13, 12), bool] {
  %946 = fn () -> Tensor[(9, 13, 12), bool] {
    %945 = @func_4063() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %945.0
  };
  %946() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_8624(%var_8622: Tensor[(686), bool]) -> (Tensor[(686), float32], Tensor[(686), float32]) {
  @func_8621(%var_8622) /* ty=(Tensor[(686), float32], Tensor[(686), float32]) */
}

def @func_11939() -> (Tensor[(9, 13, 12), bool],) {
  @func_11937() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_9012() -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(704), float64]) {
  @func_9010() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(704), float64]) */
}

def @func_5448(%var_5446: Tensor[(36, 2), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(36, 2), float64]) {
  @func_5445(%var_5446) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(36, 2), float64]) */
}

def @func_4374(%var_4356: Tensor[(28), int16], %var_4360: Tensor[(704), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(4, 16, 11), int16], Tensor[(704), float64]) {
  %947 = cast(%var_4356, dtype="int16") /* ty=Tensor[(28), int16] */;
  %948 = reshape(%947, newshape=[28]) /* ty=Tensor[(28), int16] */;
  %949 = @func_2994(%948) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) */;
  %950 = cast(%var_4360, dtype="float64") /* ty=Tensor[(704), float64] */;
  %951 = reshape(%950, newshape=[4, 16, 11]) /* ty=Tensor[(4, 16, 11), float64] */;
  %952 = @func_2546(%951) /* ty=(Tensor[(4, 16, 11), int16], Tensor[(4, 16, 11), float64]) */;
  %953 = cast(%var_4360, dtype="float64") /* ty=Tensor[(704), float64] */;
  %954 = @func_3917() /* ty=Tensor[(9, 13, 12), bool] */;
  %955 = %949.2;
  %956 = %952.0;
  %957 = asinh(%953) /* ty=Tensor[(704), float64] */;
  (%954, %955, %var_4356, %956, %957)
}

def @func_11017(%var_11015: Tensor[(48), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(14, 13, 5), bool], Tensor[(48), float64], Tensor[(48), float64]) {
  @func_11014(%var_11015) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(14, 13, 5), bool], Tensor[(48), float64], Tensor[(48), float64]) */
}

def @func_7107() -> (Tensor[(9, 13, 12), bool],) {
  %958 = @func_2356() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %959 = %958.0;
  (%959,)
}

def @func_6727() -> (Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float64], Tensor[(686), float64]) {
  %969 = fn () -> (Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float64], Tensor[(686), float64]) {
    %960 = @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */;
    %961 = @func_2614() /* ty=Tensor[(9, 13, 12), bool] */;
    %962 = cast(%961, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
    %963 = reshape(%962, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), bool] */;
    %964 = @func_4175(%963) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64]) */;
    %965 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
    %966 = %960.2;
    %967 = %964.1;
    %968 = %965.1;
    (%961, %966, %967, %968)
  };
  %969() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float64], Tensor[(686), float64]) */
}

def @func_12052(%var_12050: Tensor[(48), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(48), float64], Tensor[(48), float64]) {
  @func_12049(%var_12050) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(48), float64], Tensor[(48), float64]) */
}

def @func_10040() -> Tensor[(9, 13, 12), bool] {
  %970 = fn () -> Tensor[(9, 13, 12), bool] {
    @func_9717() /* ty=Tensor[(9, 13, 12), bool] */
  };
  %970() /* ty=Tensor[(9, 13, 12), bool] */
}

def @func_8390() -> (Tensor[(9, 13, 12), float32], Tensor[(686), uint16], Tensor[(9, 13, 12), bool], Tensor[(686), float32]) {
  %971 = @func_3107() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %972 = @func_8188() /* ty=(Tensor[(9, 13, 12), int8], Tensor[(72), float64], Tensor[(686), float64]) */;
  %973 = %972.2;
  %974 = cast(meta[relay.Constant][31] /* ty=Tensor[(686), float64] */, dtype="uint16") /* ty=Tensor[(686), uint16] */;
  %975 = shape_of(%973, dtype="int32") /* ty=Tensor[(1), int32] */;
  %976 = cast(%973, dtype="uint16") /* ty=Tensor[(686), uint16] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %978 = @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */;
  %979 = cast(%973, dtype="float32") /* ty=Tensor[(686), float32] */;
  %980 = %971.0;
  %981 = multiply(%976, %977) /* ty=Tensor[(686), uint16] */;
  %982 = %978.0;
  %983 = sigmoid(%979) /* ty=Tensor[(686), float32] */;
  (%980, %981, %982, %983)
}

def @func_6895() -> Tensor[(9, 13, 12), float32] {
  %989 = fn () -> Tensor[(9, 13, 12), float32] {
    %984 = @func_6135() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
    %985 = %984.0;
    %986 = cast(%985, dtype="float64") /* ty=Tensor[(9, 13, 12), float64] */;
    %987 = asinh(%986) /* ty=Tensor[(9, 13, 12), float64] */;
    %988 = cast(%987, dtype="float32") /* ty=Tensor[(9, 13, 12), float32] */;
    sin(%988) /* ty=Tensor[(9, 13, 12), float32] */
  };
  %989() /* ty=Tensor[(9, 13, 12), float32] */
}

def @func_6608() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) {
  %990 = @func_3291() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %991 = @func_5478() /* ty=(Tensor[(72), float64],) */;
  %992 = %990.0;
  %993 = @func_3917() /* ty=Tensor[(9, 13, 12), bool] */;
  %994 = %991.0;
  %995 = @func_6381() /* ty=Tensor[(9, 13, 12), float32] */;
  (%992, %993, %994, %995)
}

def @func_10455() -> (Tensor[(9, 13, 12), float32],) {
  @func_10453() /* ty=(Tensor[(9, 13, 12), float32],) */
}

def @func_10587() -> (Tensor[(9, 13, 12), bool], Tensor[(14, 13, 5), float32], Tensor[(910), float32]) {
  %996 = @func_6756() /* ty=(Tensor[(9, 13, 12), bool],) */;
  %997 = cast(meta[relay.Constant][32] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %998 = cast(meta[relay.Constant][32] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %999 = reshape(%997, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %1000 = reshape(%998, newshape=[14, 13, 5]) /* ty=Tensor[(14, 13, 5), float32] */;
  %1001 = @func_7332(%999, %1000) /* ty=(Tensor[(14, 13, 5), float32],) */;
  %1002 = %996.0;
  %1003 = %1001.0;
  (%1002, %1003, meta[relay.Constant][32] /* ty=Tensor[(910), float32] */)
}

def @func_5607() -> Tensor[(686), float64] {
  @func_3178() /* ty=Tensor[(686), float64] */
}

def @func_12538() -> (Tensor[(9, 13, 12), bool],) {
  %1004 = @func_10753() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %1005 = %1004.1;
  (%1005,)
}

def @func_11172() -> (Tensor[(9, 13, 12), bool],) {
  %1007 = fn () -> (Tensor[(9, 13, 12), bool],) {
    %1006 = @func_5744() /* ty=Tensor[(9, 13, 12), bool] */;
    (%1006,)
  };
  %1007() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_12196(%var_12194: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(686), float32], Tensor[(686), bool]) {
  @func_12193(%var_12194) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(686), float32], Tensor[(686), bool]) */
}

def @func_3683() -> (Tensor[(11, 13, 7), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  %1013 = fn () -> (Tensor[(11, 13, 7), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
    %1008 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 13, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 13, 7), float64] */;
    %1009 = @func_2315() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */;
    %1010 = asinh(%1008) /* ty=Tensor[(11, 13, 7), float64] */;
    %1011 = %1009.1;
    %1012 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
    (%1010, %1011, %1012)
  };
  %1013() /* ty=(Tensor[(11, 13, 7), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */
}

def @func_2020(%var_2018: Tensor[(3, 3, 8), float64]) -> (Tensor[(3, 3, 8), float64], Tensor[(3, 3, 8), float32], Tensor[(686), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) {
  @func_2017(%var_2018) /* ty=(Tensor[(3, 3, 8), float64], Tensor[(3, 3, 8), float32], Tensor[(686), float64], Tensor[(28), int16], Tensor[(308), int16], Tensor[(686), float64]) */
}

def @func_10137() -> (Tensor[(9, 13, 12), float64],) {
  %1014 = @func_2483() /* ty=Tensor[(9, 13, 12), float64] */;
  (%1014,)
}

def @func_9122() -> Tensor[(686), int16] {
  %1015 = @func_5086() /* ty=(Tensor[(686), float64],) */;
  %1016 = %1015.0;
  %1017 = cast(%1016, dtype="float32") /* ty=Tensor[(686), float32] */;
  %1018 = tan(%1017) /* ty=Tensor[(686), float32] */;
  %1019 = cast(meta[relay.Constant][34] /* ty=Tensor[(686), float32] */, dtype="int16") /* ty=Tensor[(686), int16] */;
  %1020 = shape_of(%1018, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1021 = cast(%1018, dtype="int16") /* ty=Tensor[(686), int16] */;
  %1022 = dyn.reshape(%1019, %1020, newshape=[]) /* ty=Tensor[(?), int16] */;
  left_shift(%1021, %1022) /* ty=Tensor[(686), int16] */
}

def @func_4570(%var_4569: Tensor[(16, 1, 3), float64]) -> Tensor[(16, 1, 3), float64] {
  %1024 = fn (%var_4563: Tensor[(16, 1, 3), float64]) -> Tensor[(16, 1, 3), float64] {
    %1023 = cast(%var_4563, dtype="float64") /* ty=Tensor[(16, 1, 3), float64] */;
    sinh(%1023) /* ty=Tensor[(16, 1, 3), float64] */
  };
  %1024(%var_4569) /* ty=Tensor[(16, 1, 3), float64] */
}

def @func_10800() -> (Tensor[(9, 13, 12), bool],) {
  @func_10798() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_3961() -> (Tensor[(9, 13, 12), bool], Tensor[(4, 16, 11), float64], Tensor[(704), float64]) {
  %1025 = cast(meta[relay.Constant][35] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %1026 = reshape(%1025, newshape=[4, 16, 11]) /* ty=Tensor[(4, 16, 11), float64] */;
  %1027 = @func_2546(%1026) /* ty=(Tensor[(4, 16, 11), int16], Tensor[(4, 16, 11), float64]) */;
  %1028 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
  %1029 = %1027.1;
  (%1028, %1029, meta[relay.Constant][35] /* ty=Tensor[(704), float64] */)
}

def @func_10589() -> (Tensor[(9, 13, 12), bool], Tensor[(14, 13, 5), float32], Tensor[(910), float32]) {
  @func_10587() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(14, 13, 5), float32], Tensor[(910), float32]) */
}

def @func_12611(%var_12610: Tensor[(910), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool], Tensor[(10, 7, 13), float32], Tensor[(910), float64]) {
  %1038 = fn (%var_12592: Tensor[(910), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool], Tensor[(10, 7, 13), float32], Tensor[(910), float64]) {
    %1030 = @func_9894() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %1031 = cast(%var_12592, dtype="float64") /* ty=Tensor[(910), float64] */;
    %1032 = reshape(%1031, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float64] */;
    %1033 = cast(%var_12592, dtype="float64") /* ty=Tensor[(910), float64] */;
    %1034 = @func_6381() /* ty=Tensor[(9, 13, 12), float32] */;
    %1035 = %1030.0;
    %1036 = @func_6841(%1032) /* ty=Tensor[(10, 7, 13), float32] */;
    %1037 = log(%1033) /* ty=Tensor[(910), float64] */;
    (%1034, %1035, %1036, %1037)
  };
  %1038(%var_12610) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool], Tensor[(10, 7, 13), float32], Tensor[(910), float64]) */
}

def @func_5769() -> (Tensor[(9, 13, 12), bool],) {
  %1040 = fn () -> (Tensor[(9, 13, 12), bool],) {
    %1039 = @func_3346() /* ty=Tensor[(9, 13, 12), bool] */;
    (%1039,)
  };
  %1040() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_7652() -> (Tensor[(9, 13, 12), bool],) {
  %1043 = fn () -> (Tensor[(9, 13, 12), bool],) {
    %1041 = @func_5768() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %1042 = %1041.0;
    (%1042,)
  };
  %1043() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_5909() -> (Tensor[(9, 13, 12), float32],) {
  %1046 = fn () -> (Tensor[(9, 13, 12), float32],) {
    %1044 = @func_3107() /* ty=(Tensor[(9, 13, 12), float32],) */;
    %1045 = %1044.0;
    (%1045,)
  };
  %1046() /* ty=(Tensor[(9, 13, 12), float32],) */
}

def @func_12355(%var_12321: Tensor[(12, 4), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(12, 4), float64], Tensor[(72), float64]) {
  %1047 = cast(%var_12321, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %1048 = reshape(%1047, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1049 = @func_11737(%1048) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(48), float64], Tensor[(48), float64], Tensor[(9, 13, 12), float32]) */;
  %1050 = @func_2850() /* ty=(Tensor[(72), float64],) */;
  %1051 = @func_10511() /* ty=Tensor[(9, 13, 12), float32] */;
  %1052 = @func_5303() /* ty=Tensor[(9, 13, 12), bool] */;
  %1053 = %1049.0;
  %1054 = %1050.0;
  (%1051, %1052, %1053, %var_12321, %1054)
}

def @func_3788(%var_3786: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) {
  @func_3785(%var_3786) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(686), float64]) */
}

def @func_5236(%var_5235: Tensor[(4, 176), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(704), float64], Tensor[(28), int16], Tensor[(4, 176), float64], Tensor[(9, 13, 12), bool]) {
  %1066 = fn (%var_5225: Tensor[(4, 176), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(704), float64], Tensor[(28), int16], Tensor[(4, 176), float64], Tensor[(9, 13, 12), bool]) {
    %1055 = cast(meta[relay.Constant][36] /* ty=Tensor[(28), int16] */, dtype="int16") /* ty=Tensor[(28), int16] */;
    %1056 = cast(%var_5225, dtype="float64") /* ty=Tensor[(4, 176), float64] */;
    %1057 = reshape(%1055, newshape=[28]) /* ty=Tensor[(28), int16] */;
    %1058 = reshape(%1056, newshape=[704]) /* ty=Tensor[(704), float64] */;
    %1059 = @func_4374(%1057, %1058) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(28), int16], Tensor[(4, 16, 11), int16], Tensor[(704), float64]) */;
    %1060 = @func_3346() /* ty=Tensor[(9, 13, 12), bool] */;
    %1061 = cast(%1060, dtype="bool") /* ty=Tensor[(9, 13, 12), bool] */;
    %1062 = reshape(%1061, newshape=[9, 13, 12]) /* ty=Tensor[(9, 13, 12), bool] */;
    %1063 = @func_4175(%1062) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64]) */;
    %1064 = %1059.4;
    %1065 = %1063.0;
    (%1060, %1064, meta[relay.Constant][36] /* ty=Tensor[(28), int16] */, %var_5225, %1065)
  };
  %1066(%var_5235) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(704), float64], Tensor[(28), int16], Tensor[(4, 176), float64], Tensor[(9, 13, 12), bool]) */
}

def @func_8429(%var_8427: Tensor[(12, 5, 11), float64]) -> (Tensor[(12, 5, 11), float64],) {
  @func_8426(%var_8427) /* ty=(Tensor[(12, 5, 11), float64],) */
}

def @func_11971() -> (Tensor[(9, 13, 12), bool],) {
  %1067 = @func_10753() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */;
  %1068 = %1067.1;
  (%1068,)
}

def @func_3560(%var_3558: Tensor[(1859), float64]) -> (Tensor[(686), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(13, 11, 13), float64], Tensor[(1859), float64]) {
  @func_3557(%var_3558) /* ty=(Tensor[(686), float64], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(13, 11, 13), float64], Tensor[(1859), float64]) */
}

def @func_8559() -> (Tensor[(9, 13, 12), bool],) {
  @func_8557() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_8648() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  @func_8646() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */
}

def @func_12129(%var_12126: Tensor[(14, 3, 3), int32], %var_12127: Tensor[(14, 3, 3), int32], %var_12128: Tensor[(14, 3, 3), int32]) -> (Tensor[(14, 3, 3), uint64], Tensor[(14, 3, 3), float32], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(72), float64]) {
  @func_12124(%var_12126, %var_12127, %var_12128) /* ty=(Tensor[(14, 3, 3), uint64], Tensor[(14, 3, 3), float32], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(72), float64]) */
}

def @func_7884() -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) {
  @func_7882() /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool]) */
}

def @func_12358(%var_12356: Tensor[(12, 4), float64]) -> (Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(12, 4), float64], Tensor[(72), float64]) {
  @func_12355(%var_12356) /* ty=(Tensor[(9, 13, 12), float32], Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float32], Tensor[(12, 4), float64], Tensor[(72), float64]) */
}

def @func_6330() -> (Tensor[(686), float64], Tensor[(9, 13, 12), float64], Tensor[(1404), bool]) {
  @func_6328() /* ty=(Tensor[(686), float64], Tensor[(9, 13, 12), float64], Tensor[(1404), bool]) */
}

def @func_11624() -> Tensor[(686), float64] {
  %1069 = @func_6726() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float64], Tensor[(686), float64]) */;
  %1070 = %1069.3;
  %1071 = cast(%1070, dtype="float64") /* ty=Tensor[(686), float64] */;
  cos(%1071) /* ty=Tensor[(686), float64] */
}

def @func_5799() -> (Tensor[(72), float64], Tensor[(72), float64]) {
  %1072 = @func_2715() /* ty=(Tensor[(9, 13, 12), int64], Tensor[(686), float64], Tensor[(72), float64]) */;
  %1073 = @func_5478() /* ty=(Tensor[(72), float64],) */;
  %1074 = %1072.2;
  %1075 = %1073.0;
  (%1074, %1075)
}

def @func_7109() -> (Tensor[(9, 13, 12), bool],) {
  @func_7107() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_5841(%var_5839: Tensor[(11, 2, 2), float64], %var_5840: Tensor[(11, 2, 2), float64]) -> Tensor[(11, 2, 2), bool] {
  %1080 = fn (%var_5832: Tensor[(11, 2, 2), float64], %var_5833: Tensor[(11, 2, 2), float64]) -> Tensor[(11, 2, 2), bool] {
    %1076 = cast(%var_5833, dtype="bool") /* ty=Tensor[(11, 2, 2), bool] */;
    %1077 = shape_of(%var_5832, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1078 = cast(%var_5832, dtype="bool") /* ty=Tensor[(11, 2, 2), bool] */;
    %1079 = dyn.reshape(%1076, %1077, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%1078, %1079) /* ty=Tensor[(11, 2, 2), bool] */
  };
  %1080(%var_5839, %var_5840) /* ty=Tensor[(11, 2, 2), bool] */
}

def @func_2484() -> Tensor[(9, 13, 12), float64] {
  %1083 = fn () -> Tensor[(9, 13, 12), float64] {
    %1081 = @func_2191() /* ty=Tensor[(9, 13, 12), bool] */;
    %1082 = cast(%1081, dtype="float64") /* ty=Tensor[(9, 13, 12), float64] */;
    cos(%1082) /* ty=Tensor[(9, 13, 12), float64] */
  };
  %1083() /* ty=Tensor[(9, 13, 12), float64] */
}

def @func_9304(%var_9302: Tensor[(28), int16], %var_9303: Tensor[(704), float64]) -> (Tensor[(686), uint16], Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(704), bool]) {
  @func_9300(%var_9302, %var_9303) /* ty=(Tensor[(686), uint16], Tensor[(9, 13, 12), bool], Tensor[(28), int16], Tensor[(704), bool]) */
}

def @func_6683() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64], Tensor[(9, 13, 12), bool], Tensor[(7, 98), int8]) {
  %1103 = fn () -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64], Tensor[(9, 13, 12), bool], Tensor[(7, 98), int8]) {
    %1084 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 98), float64] */, dtype="float64") /* ty=Tensor[(7, 98), float64] */;
    %1085 = reshape(%1084, newshape=[343, 2]) /* ty=Tensor[(343, 2), float64] */;
    %1086 = @func_2436(%1085) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(14, 7, 7), float64], Tensor[(343, 2), float64]) */;
    %1087 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 98), float64] */, dtype="float64") /* ty=Tensor[(7, 98), float64] */;
    %1088 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 98), float64] */, dtype="float64") /* ty=Tensor[(7, 98), float64] */;
    %1089 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 98), float64] */, dtype="float64") /* ty=Tensor[(7, 98), float64] */;
    %1090 = reshape(%1087, newshape=[686]) /* ty=Tensor[(686), float64] */;
    %1091 = reshape(%1088, newshape=[686]) /* ty=Tensor[(686), float64] */;
    %1092 = reshape(%1089, newshape=[686]) /* ty=Tensor[(686), float64] */;
    %1093 = @func_4811(%1090, %1091, %1092) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(686), uint64], Tensor[(686), float64], Tensor[(686), uint32], Tensor[(686), bool]) */;
    %1094 = %1093.2;
    %1095 = cast(%1094, dtype="int8") /* ty=Tensor[(686), int8] */;
    %1096 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(7, 98), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1097 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 98), float64] */, dtype="int8") /* ty=Tensor[(7, 98), int8] */;
    %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %1099 = @func_5744() /* ty=Tensor[(9, 13, 12), bool] */;
    %1100 = @func_2483() /* ty=Tensor[(9, 13, 12), float64] */;
    %1101 = %1086.0;
    %1102 = bitwise_or(%1097, %1098) /* ty=Tensor[(7, 98), int8] */;
    (%1099, %1100, %1101, %1102)
  };
  %1103() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), float64], Tensor[(9, 13, 12), bool], Tensor[(7, 98), int8]) */
}

def @func_6137() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) {
  @func_6135() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool]) */
}

def @func_9895() -> (Tensor[(9, 13, 12), bool],) {
  %1105 = fn () -> (Tensor[(9, 13, 12), bool],) {
    %1104 = @func_3065() /* ty=Tensor[(9, 13, 12), bool] */;
    (%1104,)
  };
  %1105() /* ty=(Tensor[(9, 13, 12), bool],) */
}

def @func_12512(%var_12511: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(11, 4, 15), float32], Tensor[(308), int16], Tensor[(686), float64], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) {
  %1120 = fn (%var_12490: Tensor[(686), float64]) -> (Tensor[(9, 13, 12), bool], Tensor[(11, 4, 15), float32], Tensor[(308), int16], Tensor[(686), float64], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) {
    %1106 = @func_9894() /* ty=(Tensor[(9, 13, 12), bool],) */;
    %1107 = @func_11219() /* ty=(Tensor[(11, 4, 15), float32], Tensor[(72), float64]) */;
    %1108 = cast(%var_12490, dtype="float64") /* ty=Tensor[(686), float64] */;
    %1109 = reshape(%1108, newshape=[686]) /* ty=Tensor[(686), float64] */;
    %1110 = @func_6994(%1109) /* ty=(Tensor[(9, 13, 12), float64], Tensor[(28), int16], Tensor[(704), float64], Tensor[(6, 8, 3), bool], Tensor[(308), int16], Tensor[(686), float64], Tensor[(686), float64]) */;
    %1111 = cast(%var_12490, dtype="float64") /* ty=Tensor[(686), float64] */;
    %1112 = reshape(%1111, newshape=[686]) /* ty=Tensor[(686), float64] */;
    %1113 = @func_12193(%1112) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(686), float32], Tensor[(686), bool]) */;
    %1114 = @func_8859() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) */;
    %1115 = %1106.0;
    %1116 = %1107.0;
    %1117 = %1110.4;
    %1118 = %1113.1;
    %1119 = %1114.2;
    (%1115, %1116, %1117, %var_12490, %1118, %1119)
  };
  %1120(%var_12511) /* ty=(Tensor[(9, 13, 12), bool], Tensor[(11, 4, 15), float32], Tensor[(308), int16], Tensor[(686), float64], Tensor[(9, 13, 12), bool], Tensor[(28), int16]) */
}

def @func_6610() -> (Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) {
  @func_6608() /* ty=(Tensor[(9, 13, 12), bool], Tensor[(9, 13, 12), bool], Tensor[(72), float64], Tensor[(9, 13, 12), float32]) */
}

def @func_7486() -> Tensor[(9, 13, 12), float32] {
  %1121 = @func_3019() /* ty=(Tensor[(9, 13, 12), float32],) */;
  %1121.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen644/build/output.py:3619: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen644/build/output.py", line 3624, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(980) tvmgen_default_fused_tan_kernel0(double* __restrict__ T_tan, double* __restrict__ placeholder) {
  T_tan[(((int)threadIdx.x))] = tan(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


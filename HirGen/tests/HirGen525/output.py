import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_72 = relay.var("var_72", dtype = "uint64", shape = (9, 16, 1))#candidate|72|(9, 16, 1)|var|uint64
var_73 = relay.var("var_73", dtype = "uint64", shape = (9, 16, 10))#candidate|73|(9, 16, 10)|var|uint64
bop_74 = relay.greater_equal(var_72.astype('bool'), var_73.astype('bool')) # shape=(9, 16, 10)
output = relay.Tuple([bop_74,])
output2 = relay.Tuple([bop_74,])
func_78 = relay.Function([var_72,var_73,], output)
mod['func_78'] = func_78
mod = relay.transform.InferType()(mod)
var_79 = relay.var("var_79", dtype = "uint64", shape = (9, 16, 1))#candidate|79|(9, 16, 1)|var|uint64
var_80 = relay.var("var_80", dtype = "uint64", shape = (9, 16, 10))#candidate|80|(9, 16, 10)|var|uint64
output = func_78(var_79,var_80,)
func_81 = relay.Function([var_79,var_80,], output)
mutated_mod['func_81'] = func_81
mutated_mod = relay.transform.InferType()(mutated_mod)
var_208 = relay.var("var_208", dtype = "float32", shape = (8, 8, 6))#candidate|208|(8, 8, 6)|var|float32
uop_209 = relay.log(var_208.astype('float32')) # shape=(8, 8, 6)
uop_236 = relay.sigmoid(var_208.astype('float64')) # shape=(8, 8, 6)
output = relay.Tuple([uop_209,uop_236,])
output2 = relay.Tuple([uop_209,uop_236,])
func_240 = relay.Function([var_208,], output)
mod['func_240'] = func_240
mod = relay.transform.InferType()(mod)
mutated_mod['func_240'] = func_240
mutated_mod = relay.transform.InferType()(mutated_mod)
var_241 = relay.var("var_241", dtype = "float32", shape = (8, 8, 6))#candidate|241|(8, 8, 6)|var|float32
func_240_call = mutated_mod.get_global_var('func_240')
call_242 = func_240_call(var_241)
output = call_242
func_243 = relay.Function([var_241], output)
mutated_mod['func_243'] = func_243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_653 = relay.var("var_653", dtype = "float32", shape = (2, 7, 8))#candidate|653|(2, 7, 8)|var|float32
var_654 = relay.var("var_654", dtype = "float32", shape = (2, 7, 8))#candidate|654|(2, 7, 8)|var|float32
bop_655 = relay.floor_mod(var_653.astype('float32'), relay.reshape(var_654.astype('float32'), relay.shape_of(var_653))) # shape=(2, 7, 8)
func_78_call = mod.get_global_var('func_78')
func_81_call = mutated_mod.get_global_var('func_81')
var_661 = relay.var("var_661", dtype = "uint64", shape = (144,))#candidate|661|(144,)|var|uint64
const_662 = relay.const([[8,-2],[-4,-4],[7,-1],[-9,-3],[6,5],[-3,-8],[-6,-9],[-2,8],[-1,-4],[3,7],[4,-8],[7,-5],[5,-8],[7,-1],[10,-10],[2,-10],[-2,-10],[-4,4],[-5,5],[6,-4],[-10,-9],[10,-9],[-1,3],[-1,-8],[1,8],[5,7],[6,3],[-2,5],[3,8],[-6,-6],[-6,-2],[-5,-9],[-10,-4],[-9,-6],[-5,-9],[8,-8],[9,-4],[2,4],[10,6],[10,-4],[2,-7],[10,-8],[-2,1],[-2,-1],[-6,-8],[5,-8],[-9,4],[10,10],[-5,5],[-10,-2],[1,-2],[-4,-5],[-8,-9],[-6,9],[1,-5],[-1,-5],[3,4],[2,-6],[1,5],[3,-8],[-3,-3],[3,-4],[-5,-7],[5,-5],[-1,-2],[8,5],[7,7],[-10,-10],[-1,3],[5,8],[8,8],[-7,-2],[3,1],[-3,1],[8,10],[2,-2],[3,4],[-5,-9],[10,-4],[10,5],[-9,7],[7,-2],[5,-3],[-3,9],[-2,-5],[-7,-10],[2,4],[-2,-7],[9,5],[-3,1],[2,-6],[-10,-3],[10,-1],[-10,6],[7,-6],[-2,1],[9,7],[6,10],[1,3],[1,-4],[-3,1],[-6,-7],[-6,-1],[8,-10],[-10,8],[7,4],[-4,-9],[-4,-9],[10,2],[5,-8],[-4,1],[-10,8],[-10,-8],[4,4],[10,4],[-8,2],[-3,3],[-6,10],[7,4],[2,1],[-10,-8],[-10,4],[-6,3],[3,4],[-10,3],[6,-5],[-5,-2],[3,-9],[-2,-7],[9,-2],[4,-1],[-9,-3],[1,-4],[-9,10],[10,-3],[7,5],[-8,2],[6,4],[-9,6],[-1,-6],[5,9],[-9,-2],[-3,1],[6,1],[-10,3],[7,5],[4,4],[10,-8],[-8,-3],[-6,-7],[7,-10],[7,6],[2,-3],[-9,-5],[-10,8],[8,7],[3,-4],[-2,-9],[-2,3],[-8,-5],[10,-1],[6,2],[6,-8],[-6,-10],[-4,9],[7,6],[-4,-7],[9,5],[1,8],[4,7],[-10,4],[-9,-6],[-9,10],[2,3],[6,2],[-3,-7],[-5,-6],[-5,-10],[-8,-2],[7,4],[2,1],[-2,3],[4,5],[2,-6],[7,5],[6,6],[10,-5],[-3,-4],[-10,2],[-7,2],[-8,-3],[-1,7],[-2,9],[-10,4],[-10,-6],[5,-1],[-4,9],[-5,5],[7,6],[-6,5],[5,-5],[-6,4],[5,2],[-9,5],[3,-7],[4,-6],[1,-1],[2,6],[-10,2],[-10,-4],[6,7],[9,1],[7,-2],[1,3],[7,8],[10,9],[-4,7],[-9,3],[7,3],[3,7],[3,10],[-7,-3],[-9,-6],[-4,8],[-7,-2],[-6,-2],[-4,-6],[-8,-6],[2,4],[-10,-4],[7,-7],[-6,-6],[10,9],[-4,8],[5,-4],[8,-3],[-9,10],[3,8],[7,-10],[-2,5],[-6,-9],[-7,-8],[-2,-5],[-4,9],[-7,-3],[-6,-10],[-8,-3],[9,-4],[4,7],[10,-4],[-8,1],[9,-5],[2,7],[-1,-8],[-9,9],[2,-5],[7,-8],[9,-7],[2,1],[9,-6],[-6,-8],[1,-5],[-8,-8],[-8,-7],[-7,1],[-8,3],[8,9],[-1,-10],[-9,-3],[-4,-9],[-3,-3],[4,-5],[6,8],[-4,-3],[-6,10],[9,-4],[6,-9],[4,-5],[8,7],[7,-4],[-7,8],[-5,4],[5,-1],[-3,7],[2,2],[-5,-4],[-4,-7],[-4,5],[-3,-5],[-5,-2],[-4,-9],[7,8],[1,5],[6,10],[-10,-2],[-8,-8],[-3,-1],[-3,-1],[5,-3],[7,2],[-1,5],[-6,-9],[2,3],[-2,2],[3,4],[-6,2],[-8,-6],[8,2],[-4,-9],[1,-7],[3,2],[-10,-1],[-8,10],[3,-7],[-8,-5],[-10,-6],[-3,5],[6,7],[-9,-7],[3,-1],[-4,-7],[4,7],[9,-8],[8,-3],[2,-4],[-9,10],[-2,-6],[-4,6],[-9,-2],[-8,-5],[-10,6],[-9,-8],[9,1],[-3,-6],[7,-9],[-9,8],[9,9],[10,2],[6,-7],[-9,8],[-7,3],[-8,-6],[-1,6],[10,-5],[6,6],[-9,6],[-6,-2],[8,-2],[7,-4],[4,-3],[-4,2],[5,-5],[-5,-4],[9,2],[3,-10],[-4,-5],[-8,9],[10,7],[-1,8],[-10,6],[3,-10],[10,-8],[5,-1],[2,1],[4,2],[-10,-7],[-1,8],[9,-7],[-3,-5],[-10,-5],[2,-4],[-3,-4],[5,-2],[6,9],[-6,9],[8,-10],[-2,4],[-9,-6],[5,7],[7,7],[-7,8],[-8,-1],[3,-10],[5,-1],[-4,-8],[2,-5],[-6,-4],[-4,-6],[10,6],[-2,-10],[8,-5],[9,-1],[-9,-9],[-5,-9],[-7,-5],[-6,3],[6,1],[6,-4],[-3,-9],[-4,-9],[-9,5],[3,4],[-9,-10],[-1,-8],[-2,-8],[4,5],[8,-2],[-4,5],[-9,7],[4,-1],[-4,5],[-6,4],[-6,8],[-4,-7],[-7,-7],[4,-6],[2,-5],[9,-9],[-9,-8],[-1,-2],[-7,-7],[3,5],[7,-3],[-4,3],[4,-4],[6,-4],[2,-1],[-6,-10],[-5,-6],[-4,-10],[-3,-1],[-4,6],[-4,9],[-8,8],[-6,-2],[4,-9],[-10,-7],[6,-5],[-10,9],[-1,-2],[-7,-7],[-5,-4],[-4,5],[-10,-6],[9,-5],[1,-7],[6,-5],[-3,6],[-7,5],[-9,-4],[5,10],[-4,-6],[-10,-2],[-2,-9],[5,7],[-2,-7],[5,-2],[-3,7],[6,3],[-4,6],[1,2],[-7,2],[-9,-1],[2,-10],[2,-1],[-8,2],[4,5],[6,1],[-9,1],[-7,7],[1,-7],[-8,10],[-8,-4],[9,-2],[1,2],[-1,5],[7,-8],[-10,-10],[-5,-6],[3,4],[6,10],[5,-8],[-3,6],[-5,-6],[6,9],[-10,-6],[8,-9],[-7,6],[2,1],[-10,-4],[1,-9],[-8,1],[10,1],[-2,7],[1,3],[-1,-5],[5,-8],[7,9],[1,-8],[-2,4],[-10,-4],[-4,-4],[-8,-4],[8,-4],[7,9],[4,-4],[4,4],[3,-10],[5,-7],[6,7],[-10,7],[-10,10],[-2,3],[-5,-3],[-9,6],[8,-4],[1,-3],[3,-5],[1,-1],[-2,2],[10,-2],[-10,-3],[-5,-2],[-7,6],[-10,-7],[1,7],[3,-6],[-9,-10],[2,3],[10,-5],[-4,-8],[3,-1],[4,-7],[-9,10],[-4,-8],[5,-1],[2,2],[-1,5],[-4,-8],[-6,2],[-4,-7],[-5,4],[3,2],[2,6],[-9,-3],[5,-6],[2,8],[1,-10],[-10,10],[1,-3],[-8,2],[-8,1],[7,8],[6,3],[-5,6],[2,5],[-2,-7],[10,7],[5,-7],[10,-2],[6,10],[-3,-7],[-3,-6],[-10,7],[7,3],[4,-5],[-1,-5],[10,9],[7,-7],[-2,9],[-9,2],[-8,-9],[3,-2],[6,-7],[8,10],[-9,-6],[-8,-7],[7,-10],[4,6],[-3,9],[-1,-4],[-6,3],[-4,4],[2,2],[-4,2],[8,10],[6,-4],[-2,-4],[3,9],[-10,5],[-5,-9],[-10,-7],[-3,-6],[3,-3],[-3,-5],[-1,10],[-8,3],[-1,-3],[-9,3],[5,-4],[9,9],[9,8],[-10,-8],[3,-5],[9,8],[-8,6],[5,-9],[-9,9],[6,-9],[-2,6],[3,3],[2,-6],[9,2],[-7,7],[8,-2],[-8,7],[3,-8],[5,6],[-5,-4],[8,9],[6,-5],[10,4],[-7,-8],[-1,8],[1,8],[-9,3],[-5,3],[7,-3],[5,-5],[-1,6],[-7,-10],[9,2],[-5,5],[-7,7],[7,7],[4,-8],[-7,4],[4,-5],[-4,9],[4,-3],[-4,-10],[1,2],[9,-4],[9,-10],[5,-4],[5,9],[-6,-5],[2,9],[8,-8],[9,7],[-9,-9],[-10,-5],[-6,-3],[-10,-2],[-1,-5],[5,-10],[3,2],[-5,-10],[-7,-1],[9,-4],[-4,-7],[9,1],[8,-10],[9,-8],[7,-6],[8,-7],[6,-5],[-3,-1],[-6,-3],[8,5],[-9,-1],[-7,3],[-8,4],[-7,-10],[-8,-8],[-4,10],[-7,-6],[-7,3],[6,-4],[-2,4],[-6,-5],[-9,5],[-1,-10],[2,-4],[-5,6],[-1,-9],[4,7],[2,7],[2,-2],[8,-10],[-10,4],[2,-3],[-10,10],[9,-6],[5,-10],[-7,-7],[-10,9],[6,-6],[10,10],[-10,9],[-3,9],[10,-6],[3,4],[-4,8],[-9,1],[6,4],[9,-8],[-9,7],[7,6],[5,4],[2,5],[-8,10],[-10,5],[-10,2],[2,-8],[-6,-5],[-5,2],[-4,6],[-2,-2],[6,10]], dtype = "uint64")#candidate|662|(720, 2)|const|uint64
call_660 = relay.TupleGetItem(func_78_call(relay.reshape(var_661.astype('uint64'), [9, 16, 1]), relay.reshape(const_662.astype('uint64'), [9, 16, 10]), ), 0)
call_663 = relay.TupleGetItem(func_81_call(relay.reshape(var_661.astype('uint64'), [9, 16, 1]), relay.reshape(const_662.astype('uint64'), [9, 16, 10]), ), 0)
uop_695 = relay.log(const_662.astype('float64')) # shape=(720, 2)
output = relay.Tuple([bop_655,call_660,var_661,uop_695,])
output2 = relay.Tuple([bop_655,call_663,var_661,uop_695,])
func_700 = relay.Function([var_653,var_654,var_661,], output)
mod['func_700'] = func_700
mod = relay.transform.InferType()(mod)
mutated_mod['func_700'] = func_700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_700_call = mutated_mod.get_global_var('func_700')
var_702 = relay.var("var_702", dtype = "float32", shape = (2, 7, 8))#candidate|702|(2, 7, 8)|var|float32
var_703 = relay.var("var_703", dtype = "float32", shape = (2, 7, 8))#candidate|703|(2, 7, 8)|var|float32
var_704 = relay.var("var_704", dtype = "uint64", shape = (144,))#candidate|704|(144,)|var|uint64
call_701 = func_700_call(var_702,var_703,var_704,)
output = call_701
func_705 = relay.Function([var_702,var_703,var_704,], output)
mutated_mod['func_705'] = func_705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1831 = relay.var("var_1831", dtype = "float32", shape = (11, 8, 7))#candidate|1831|(11, 8, 7)|var|float32
uop_1832 = relay.log(var_1831.astype('float32')) # shape=(11, 8, 7)
func_240_call = mod.get_global_var('func_240')
func_243_call = mutated_mod.get_global_var('func_243')
var_1845 = relay.var("var_1845", dtype = "float32", shape = (6, 64))#candidate|1845|(6, 64)|var|float32
call_1844 = relay.TupleGetItem(func_240_call(relay.reshape(var_1845.astype('float32'), [8, 8, 6])), 0)
call_1846 = relay.TupleGetItem(func_243_call(relay.reshape(var_1845.astype('float32'), [8, 8, 6])), 0)
func_700_call = mod.get_global_var('func_700')
func_705_call = mutated_mod.get_global_var('func_705')
var_1848 = relay.var("var_1848", dtype = "float32", shape = (112,))#candidate|1848|(112,)|var|float32
const_1849 = relay.const([-3,10,-3,5,-3,-5,5,-2,10,2,-4,-1,1,7,9,4,9,1,-4,5,3,4,-9,2,-8,-7,3,1,-7,1,-8,-7,-9,-8,9,4,-3,-1,5,-10,-8,-9,-6,6,-1,-9,-6,-6,7,9,7,-7,2,-3,-1,-9,-1,-1,-9,10,6,10,4,-6,-10,-6,-10,7,2,6,4,-2,6,-2,2,8,9,-1,-4,5,-4,10,5,6,9,1,-9,-8,10,-1,-2,-10,7,-4,-10,6,2,-8,5,-6,-5,-10,2,1,-8,4,-1,10,8,2,5,-2,6,-5,3,5,-8,4,3,-4,8,-10,4,1,-6,-10,1,-7,1,7,-1,1,9,1,-1,-2,3,-1,4,7,-5,10,-8,-2], dtype = "uint64")#candidate|1849|(144,)|const|uint64
call_1847 = relay.TupleGetItem(func_700_call(relay.reshape(var_1848.astype('float32'), [2, 7, 8]), relay.reshape(var_1848.astype('float32'), [2, 7, 8]), relay.reshape(const_1849.astype('uint64'), [144,]), ), 3)
call_1850 = relay.TupleGetItem(func_705_call(relay.reshape(var_1848.astype('float32'), [2, 7, 8]), relay.reshape(var_1848.astype('float32'), [2, 7, 8]), relay.reshape(const_1849.astype('uint64'), [144,]), ), 3)
output = relay.Tuple([uop_1832,call_1844,var_1845,call_1847,var_1848,const_1849,])
output2 = relay.Tuple([uop_1832,call_1846,var_1845,call_1850,var_1848,const_1849,])
func_1864 = relay.Function([var_1831,var_1845,var_1848,], output)
mod['func_1864'] = func_1864
mod = relay.transform.InferType()(mod)
mutated_mod['func_1864'] = func_1864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1864_call = mutated_mod.get_global_var('func_1864')
var_1866 = relay.var("var_1866", dtype = "float32", shape = (11, 8, 7))#candidate|1866|(11, 8, 7)|var|float32
var_1867 = relay.var("var_1867", dtype = "float32", shape = (6, 64))#candidate|1867|(6, 64)|var|float32
var_1868 = relay.var("var_1868", dtype = "float32", shape = (112,))#candidate|1868|(112,)|var|float32
call_1865 = func_1864_call(var_1866,var_1867,var_1868,)
output = call_1865
func_1869 = relay.Function([var_1866,var_1867,var_1868,], output)
mutated_mod['func_1869'] = func_1869
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2019 = relay.var("var_2019", dtype = "int8", shape = (9, 12, 13))#candidate|2019|(9, 12, 13)|var|int8
var_2020 = relay.var("var_2020", dtype = "int8", shape = (9, 12, 13))#candidate|2020|(9, 12, 13)|var|int8
bop_2021 = relay.right_shift(var_2019.astype('int8'), relay.reshape(var_2020.astype('int8'), relay.shape_of(var_2019))) # shape=(9, 12, 13)
var_2028 = relay.var("var_2028", dtype = "int8", shape = (9, 12, 13))#candidate|2028|(9, 12, 13)|var|int8
bop_2029 = relay.bitwise_xor(var_2019.astype('uint8'), relay.reshape(var_2028.astype('uint8'), relay.shape_of(var_2019))) # shape=(9, 12, 13)
const_2036 = relay.const([[[10,-2,-10,-5,10,1,-6,7,-9,2,10,-2,-9],[2,-8,-7,-10,-9,4,3,-10,9,5,-9,-4,-10],[-9,3,-1,-9,-9,9,7,-10,-4,6,-5,-1,1],[-7,-3,9,-9,1,-1,-1,9,10,10,9,-2,7],[10,-10,-9,5,-5,-3,-1,4,-7,10,7,-1,9],[8,-7,-9,-4,-7,7,5,10,-6,-4,-1,-7,6],[1,8,9,1,4,2,-8,-1,3,-5,-3,2,-3],[-6,-3,4,-10,-6,-10,-5,-5,-2,-4,-6,-6,9],[-5,-7,-3,-9,-5,-2,5,4,-5,10,5,-2,5],[-7,-2,2,-7,-4,-4,-9,-5,-4,1,6,8,-5],[-7,2,-5,-5,-5,-2,8,3,10,10,4,-6,3],[-10,-7,4,10,-8,-4,3,1,-2,-3,10,-8,9]],[[-4,7,-4,-10,2,6,9,8,-8,3,-6,10,-1],[-3,1,-2,-6,4,-8,10,8,3,-2,1,1,9],[10,-1,10,-1,-7,-9,4,2,8,1,9,-3,4],[-1,7,-4,-9,-7,8,-1,-1,-7,-2,6,-2,7],[-8,4,-4,8,-5,8,7,1,5,2,10,8,10],[-3,-10,6,3,-1,5,10,-2,-1,6,-6,-4,5],[-8,8,-9,-10,5,9,8,-5,-7,-2,-3,-8,7],[-10,-4,6,1,2,9,1,10,2,-7,-2,1,-5],[-6,-5,-9,-5,1,-7,-7,2,-2,10,10,3,-10],[-4,-8,-7,-4,-9,-7,-9,4,-1,-6,-9,-4,4],[10,3,-10,-2,8,5,2,-8,-6,7,3,-3,1],[-9,10,10,9,-1,-2,9,2,3,-8,3,6,-4]],[[-10,-7,-10,7,-10,-1,4,-9,-4,-8,4,10,-4],[4,5,-10,8,9,6,7,4,-4,-7,-7,-5,9],[8,-9,-4,-2,-4,5,10,7,1,1,-1,6,-1],[-1,7,4,-1,8,8,4,2,4,-5,-9,7,2],[6,6,-2,-2,8,6,10,3,-4,2,8,10,-6],[-10,1,-1,-1,-4,3,-1,3,10,-1,-1,-2,5],[-8,-5,-5,7,8,-1,-4,-1,-1,10,2,-7,-3],[-2,-1,4,1,4,-4,-2,-1,-1,-7,2,7,-2],[-9,5,-7,-6,-3,10,10,2,4,-4,6,-10,10],[-3,-3,9,5,-6,9,3,-2,8,4,4,1,-5],[-7,-9,8,-5,6,4,8,-4,-2,10,7,-8,7],[2,-1,-4,3,-5,-5,1,6,3,-3,-10,-3,3]],[[-8,4,2,-3,3,3,-1,7,1,-7,1,-1,-8],[-3,3,10,4,9,10,-1,9,10,-4,-6,-5,4],[-5,-4,5,-2,3,2,-8,5,4,2,2,3,-9],[3,-2,-1,1,9,-3,8,5,-3,-2,-2,4,8],[-7,4,-2,1,-5,2,-8,-5,2,-8,3,1,-10],[2,10,-2,2,1,4,-7,-4,6,-8,6,-2,8],[-6,3,-5,-1,-4,9,10,8,-4,2,4,4,9],[-3,-2,8,-3,3,-5,-2,-9,5,-3,-3,7,-6],[3,4,-10,3,-1,2,-2,-3,-1,-8,-6,-8,-5],[9,-6,7,-5,-9,10,-6,3,-7,3,5,-5,-4],[5,3,3,-6,-4,-8,3,-3,9,6,-7,8,2],[-6,4,7,2,-1,-9,3,7,-6,9,3,-1,10]],[[3,10,9,2,3,-5,9,-9,-3,6,4,-2,1],[10,6,10,10,-5,-5,4,-6,5,9,6,8,3],[3,-6,-3,-6,8,8,-5,7,-10,2,-4,-1,-2],[-4,-8,4,-4,-6,9,-6,8,-7,9,-7,-6,4],[5,-2,2,-7,5,-4,4,-6,3,-1,9,6,-1],[6,-1,7,6,2,5,8,5,-7,-5,-1,6,-9],[-10,-3,-9,8,9,-5,5,1,-1,10,-5,4,-1],[-6,8,1,2,9,-3,1,-4,-5,6,-1,-8,-2],[7,1,-10,6,-6,-6,-1,2,-3,7,1,-8,-9],[3,-7,10,-10,3,-2,8,6,-6,8,-2,-1,10],[-1,9,7,-9,9,-10,4,9,-10,4,10,4,10],[-2,-5,2,-1,9,-7,2,-2,6,-6,4,3,-4]],[[9,-4,-6,-9,9,8,-4,-7,7,-8,-4,5,-1],[-9,-6,-9,3,-2,-8,-9,-2,-6,-5,-9,6,1],[2,-1,-2,7,-5,3,-8,8,-7,4,5,-10,-6],[-3,6,2,10,3,6,-2,-6,1,-1,1,-8,-9],[-8,-3,8,5,-2,6,-2,3,-8,-1,1,8,2],[10,-6,-3,10,9,4,3,-4,-7,5,6,-7,8],[2,-10,7,4,-10,10,-7,-7,-6,6,-7,-6,-4],[-8,3,7,-1,-10,8,4,5,8,-4,10,5,-9],[10,5,-10,-5,8,-6,10,9,-2,-5,-8,8,10],[-3,-5,-7,10,10,-6,10,-6,5,4,5,-9,-4],[7,-1,9,2,-10,10,-3,-9,3,3,8,9,-1],[2,7,7,8,-9,-5,1,-1,3,-1,-3,2,6]],[[-5,5,-9,6,-3,-8,-2,-7,1,10,9,6,-8],[4,6,-1,5,8,3,10,8,6,-6,-9,-1,8],[4,1,4,3,7,10,-10,-8,4,-8,5,-4,-4],[-9,-2,6,3,-10,-3,7,-7,-4,7,9,-7,4],[8,6,-9,-7,-3,8,2,-3,1,7,-6,2,-2],[-5,-7,-2,8,-6,-4,-9,8,1,5,5,3,-3],[-4,4,-7,4,9,8,-5,-4,7,-3,3,7,9],[6,-5,-3,-6,-2,8,-7,-3,4,-9,-4,-4,-1],[5,4,9,8,-1,-2,7,-9,9,2,3,9,-6],[8,4,-6,-9,-2,2,-4,-10,9,-10,2,6,-3],[-10,1,-7,-6,8,7,6,-6,9,1,-6,-7,-1],[-8,-1,-10,-3,-8,9,1,-8,5,-10,-2,2,-10]],[[-6,-5,-6,-7,-5,-1,-7,-9,3,-4,-10,4,-1],[-1,-10,3,10,4,-2,4,-8,-6,-3,9,-6,-6],[-3,6,-7,-9,8,2,10,3,-8,9,-3,9,1],[2,3,2,10,-2,-5,-3,-2,10,-4,-6,-1,6],[-10,-9,-5,8,1,-5,-8,-10,-7,5,-2,3,-7],[6,-4,9,7,4,-1,9,-2,4,1,-2,-9,-8],[-9,4,-10,3,5,9,-10,-4,-7,4,9,-9,2],[-9,-10,1,-1,-5,-7,6,-10,4,8,-2,2,4],[4,4,-7,-8,-3,6,5,-5,-2,2,4,6,5],[8,-6,1,-8,-7,-9,1,5,5,3,-2,-1,-8],[2,8,4,5,6,1,10,-8,4,-10,-9,8,-5],[8,5,-10,2,4,-3,7,2,3,5,-10,5,9]],[[-7,7,-9,7,-2,3,-4,-1,4,8,5,10,5],[10,-2,-3,8,-10,-4,1,5,-2,-10,7,1,2],[7,8,3,-1,7,-3,-5,-1,1,6,7,6,1],[3,-9,9,-6,9,7,4,5,8,-4,8,3,3],[4,-7,-5,8,-5,1,6,-1,-1,6,4,-3,-4],[-4,-6,7,8,-6,4,8,-3,-1,10,-3,-8,-6],[-2,9,-1,3,1,9,3,4,-9,9,3,10,-3],[-6,-1,-3,1,-1,6,2,-5,9,-8,7,5,-9],[7,4,4,3,4,10,-8,10,6,-1,6,-9,3],[2,-4,-6,2,-3,4,4,1,-5,-7,-3,10,-4],[-4,-1,-8,4,-5,5,2,4,3,2,-1,3,4],[1,-7,-8,-7,-9,3,-9,2,4,1,10,7,7]]], dtype = "int8")#candidate|2036|(9, 12, 13)|const|int8
bop_2037 = relay.maximum(var_2028.astype('int32'), relay.reshape(const_2036.astype('int32'), relay.shape_of(var_2028))) # shape=(9, 12, 13)
output = relay.Tuple([bop_2021,bop_2029,bop_2037,])
output2 = relay.Tuple([bop_2021,bop_2029,bop_2037,])
func_2056 = relay.Function([var_2019,var_2020,var_2028,], output)
mod['func_2056'] = func_2056
mod = relay.transform.InferType()(mod)
var_2057 = relay.var("var_2057", dtype = "int8", shape = (9, 12, 13))#candidate|2057|(9, 12, 13)|var|int8
var_2058 = relay.var("var_2058", dtype = "int8", shape = (9, 12, 13))#candidate|2058|(9, 12, 13)|var|int8
var_2059 = relay.var("var_2059", dtype = "int8", shape = (9, 12, 13))#candidate|2059|(9, 12, 13)|var|int8
output = func_2056(var_2057,var_2058,var_2059,)
func_2060 = relay.Function([var_2057,var_2058,var_2059,], output)
mutated_mod['func_2060'] = func_2060
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2637 = relay.const([[[-2.496278,-2.546901,-1.589160,-1.149401],[3.156444,1.057133,8.938399,-3.280966],[-1.723411,4.642277,6.935375,-8.455112],[4.394531,5.433356,-1.600102,-8.028421],[4.195756,1.751295,4.237864,1.466785],[2.892677,4.184921,-7.994715,9.721725],[2.846753,-8.650389,-4.482468,2.852514],[9.053693,1.098002,7.924816,7.557491],[-8.376700,-3.942882,-0.357586,1.532018],[-9.988569,-7.589806,-4.561138,9.971384],[4.041336,-4.615267,-8.195295,1.542008],[-7.176977,1.036975,6.285364,-9.720228],[3.966148,2.135619,-7.729699,-1.390854],[4.190260,8.949617,-7.080823,-4.875090],[-6.784063,5.125102,-8.216093,6.180336],[-9.114436,-0.650282,8.153380,3.584845]],[[8.211963,-4.419350,8.953002,-0.292268],[-6.344455,-5.674688,-2.417669,-6.365416],[4.636896,7.594042,-8.436356,-1.556509],[-4.996567,-5.924317,9.570469,-1.974309],[-0.528324,2.264363,5.296317,7.090809],[5.111119,-2.284416,-5.518996,1.612652],[2.490502,9.180078,6.554125,-7.812104],[-6.204885,6.908860,-2.785270,-7.551406],[-6.650953,2.977642,8.541099,2.270537],[-3.205619,-6.432809,-4.629425,8.332190],[-1.285383,-4.468660,-2.993334,2.825562],[8.697403,0.645272,9.251389,5.708622],[0.669459,3.077067,1.870869,3.390724],[5.730649,-8.660151,8.583217,2.569344],[-9.576999,0.578997,-4.649233,8.866928],[2.149242,6.456248,-0.802641,3.232568]],[[3.346896,-3.638073,5.050474,4.577013],[8.715086,4.122805,2.963071,-0.053322],[-9.831021,-0.413228,2.067517,-3.247007],[-7.899150,6.837038,-6.706085,-3.753779],[3.798828,-3.506723,2.492917,0.099832],[1.587510,9.108706,7.894159,-4.316199],[-5.989092,-5.122945,-9.226296,-0.011428],[4.138676,0.263076,-6.230026,2.738637],[-6.682746,6.645976,9.020840,-2.331839],[2.078296,3.172182,-7.841579,-3.313686],[3.356131,-2.672928,1.580059,-8.483433],[-5.579686,9.505485,-3.421482,-2.875873],[-3.169542,-5.138367,1.556429,4.400950],[-2.728506,1.582242,-1.471500,2.940672],[5.647691,-9.431670,9.502959,4.403464],[-0.410815,-8.912897,1.300915,-5.598310]],[[-8.533934,-0.078408,1.592104,-0.838351],[-9.345066,-0.935765,2.624860,-2.549034],[2.935576,-5.677649,-2.845069,-9.329254],[-7.618374,8.840612,-1.969661,3.740338],[-5.646561,-8.384501,4.183823,1.211645],[-1.583239,0.562809,-8.727917,-0.524149],[-6.387755,-1.810631,-8.563368,6.023592],[0.277159,2.556575,-2.611009,1.194011],[-8.459006,3.491498,-1.678181,9.705169],[-7.537840,9.536588,8.322026,1.059281],[-4.308070,-7.228058,-2.175555,6.390219],[-3.276463,1.754321,1.648292,2.241873],[-0.510319,-5.332094,4.782803,-2.133009],[-6.988803,-3.560729,5.930731,1.143158],[3.151579,9.804933,3.350078,-8.876082],[9.253893,3.594031,-2.705105,-8.279133]],[[2.051418,1.105373,-6.697729,-9.906432],[2.310137,-8.973823,-0.094393,-4.578652],[5.513980,-4.259972,-1.293838,-3.076964],[-0.957396,5.473001,-7.480198,-1.939331],[-6.709897,2.175448,2.897665,4.695426],[-5.539877,7.948685,0.717062,8.006001],[3.709777,5.132393,-5.984202,7.309254],[4.780386,7.464158,-9.700306,5.634717],[0.075514,-3.727093,1.342703,-0.143793],[4.269665,-4.570217,6.085205,-6.916902],[0.749571,8.533761,0.619364,7.913923],[4.264756,0.142494,-9.430882,-1.132404],[6.417164,-6.467159,-8.346810,-1.857703],[-7.593681,-7.050195,-0.203592,8.171002],[-8.926649,3.213299,3.167173,7.192639],[1.386455,9.423352,0.651915,-2.296363]],[[-9.676201,7.844157,2.314481,-8.333390],[0.778335,0.791268,4.151619,2.887173],[3.381989,-5.221087,9.737975,9.990113],[-7.491533,-3.367780,-2.449648,-6.098430],[6.170577,3.990476,1.502268,3.305275],[-5.796309,9.995174,6.445204,-8.010219],[8.278503,6.772511,-5.848340,-8.714023],[1.282114,-9.466194,3.698680,-9.281128],[3.853232,8.595811,-0.981345,1.100929],[6.234326,-0.502494,9.873236,-2.422756],[8.806184,-5.486724,-1.036607,-9.553822],[4.841628,-2.884810,6.221494,-4.500471],[-4.073723,-9.861889,-6.219287,-6.535060],[-1.920169,-0.918697,9.224994,-3.353669],[-6.628705,-8.476136,2.014059,4.539111],[0.796021,3.378560,-7.936495,1.837551]],[[6.577864,7.663070,5.834343,-1.433748],[5.314345,-4.389639,3.623520,8.716305],[6.573273,-7.488327,4.801820,8.743027],[5.639246,7.941366,-2.546016,4.994608],[-8.202063,4.554835,-7.963537,1.265956],[-9.907103,-2.273974,0.682887,-7.369979],[2.331447,6.239352,-8.453458,2.692701],[-9.523269,1.632648,-6.801340,-3.525276],[-6.776400,-2.912679,7.824564,-9.641615],[1.518185,8.173019,-6.272001,1.526674],[8.483973,-2.850154,-1.917146,6.459248],[8.661212,9.632480,2.355562,-7.029534],[-8.618644,-3.342391,7.787234,2.598660],[9.552940,3.890161,-6.837341,7.770910],[6.126597,4.538738,-1.212734,-3.011864],[-9.172361,9.188791,-1.789597,2.236513]],[[-1.459370,-0.041859,-9.833452,3.526112],[8.595925,7.414938,4.703695,3.105585],[6.704269,-3.513907,5.860836,6.354010],[5.738905,-5.666295,-3.954219,-0.312417],[1.305801,-0.507853,-2.858462,-2.433900],[-9.220793,-7.929684,-0.024860,2.485734],[-2.037872,7.102807,-6.139700,7.096612],[9.806773,4.637482,0.105938,2.819901],[4.393625,-5.286545,4.321300,5.596722],[6.557275,9.032043,3.978265,1.877262],[4.561431,6.347040,6.805126,6.423851],[-3.226342,-3.866401,-6.060963,4.409951],[-4.543469,1.572615,-3.053137,4.735291],[-4.224031,2.830375,8.209692,-6.345300],[-5.824129,4.553925,-2.847075,-5.239049],[5.977063,2.682906,-3.792330,4.047658]],[[-9.096456,-0.958405,6.849191,-8.129428],[7.449466,5.618679,-2.492353,2.294450],[-7.130607,-3.449904,2.376199,4.259101],[-9.950013,-9.180388,6.888276,7.988395],[-2.594170,-1.467984,8.041179,-5.013468],[9.236000,-9.160625,9.806057,-5.801170],[-4.097501,-5.262704,4.197329,-1.717225],[-4.281896,8.065969,6.204666,-3.990522],[-0.998110,4.846334,1.585539,-9.600157],[-1.835319,1.555590,-1.910801,3.408121],[-8.737227,-9.178068,8.692383,0.439020],[6.208203,-3.585101,9.057488,9.067869],[3.162950,-1.755548,-1.238581,6.949716],[2.598448,-5.626359,-4.545727,-2.205435],[7.665747,6.344577,7.690364,9.186333],[1.029132,1.758549,-8.393131,-4.408512]],[[-5.007726,-1.186346,-6.708985,3.152085],[-7.439132,8.079391,5.245958,-3.164780],[7.669867,8.321438,-0.856988,8.408547],[-4.033295,5.651512,0.752912,7.661488],[-9.405709,-7.756765,7.563466,-8.245221],[5.722657,9.367171,0.339096,-8.297411],[9.882509,3.460266,-6.945737,4.906178],[-0.505754,9.763191,-6.877045,5.088678],[-1.590307,9.261600,3.680746,-2.342343],[-8.544909,0.220916,6.262501,-6.137011],[9.867015,-7.190662,-6.520943,0.260194],[-9.471174,6.635734,6.756373,0.073607],[-0.972567,4.309722,-0.170282,0.735380],[8.895206,-5.213607,-2.173814,9.632531],[3.097479,1.774058,0.139106,-2.043475],[5.204720,2.722356,-4.671014,-9.968422]],[[5.783679,-4.538801,8.922623,-4.987845],[-1.026313,5.562717,2.723811,-3.222970],[8.582826,5.608153,-2.892931,-8.451052],[6.927058,-3.593266,3.943487,-4.628878],[9.443935,-1.078208,-9.457916,7.199520],[-9.857063,4.635971,-7.919341,-2.487005],[4.706194,-8.279652,3.112936,7.904443],[-1.199055,-1.866632,1.399822,4.774040],[3.112651,0.368111,-1.451139,-8.298342],[-1.450065,6.425672,3.291767,-3.458624],[8.758943,9.494194,1.349312,4.792502],[-1.446872,4.633603,-6.491293,-7.608527],[0.794588,-6.814020,2.540730,-2.203464],[-6.445664,-8.497920,2.380636,6.074059],[1.767407,5.761481,9.156489,8.435699],[-0.131144,5.500227,0.580274,-9.541455]],[[-7.651175,-9.131063,2.391293,9.715577],[-1.299564,8.736061,-9.699406,-1.934801],[4.564352,-5.331788,-1.653928,7.710508],[3.113861,-5.474973,-7.835873,7.492930],[9.611526,-0.703502,-2.246796,-3.478133],[3.772854,-5.398187,-6.877450,-4.274262],[-1.539561,9.924658,-4.053789,5.814702],[8.878308,-3.082151,-8.628222,-1.220189],[7.707043,-2.937299,-5.766338,6.127654],[-5.118625,8.103578,-3.765405,6.022460],[4.903081,-8.584548,9.249593,1.221454],[4.158633,-1.419567,7.130224,4.115965],[-7.938583,-8.927203,-8.229990,-9.732480],[7.391510,-4.055015,1.554183,-6.776343],[-0.349378,-2.130948,-9.643530,-7.564131],[1.020863,8.176438,-6.743308,-7.905912]],[[-5.078168,7.286175,-5.427723,8.269787],[-4.582548,2.823449,8.771474,-5.947305],[-4.441169,2.095639,-2.404989,-8.592697],[6.734866,-2.654242,-6.435708,-1.051117],[9.711316,-5.613484,7.295609,5.207986],[9.799809,-7.654658,-4.675562,-1.870095],[6.570648,5.316007,9.930226,-1.442540],[9.063536,-1.550313,8.009775,-2.023812],[4.927296,-3.040044,-3.425130,-4.654120],[-5.855480,9.926212,3.553782,-3.299967],[9.468987,-0.672747,2.632435,1.653267],[7.305755,7.808507,-0.533491,3.522902],[-6.492342,8.926704,8.375381,-2.316902],[-5.793224,-9.624996,3.258180,-3.770463],[-7.195900,8.008662,8.868637,-2.191638],[2.763141,2.155568,6.827669,6.545865]],[[-3.516245,-1.117506,-2.197573,-4.838869],[-9.681713,-2.011187,6.031449,9.770465],[4.007620,5.326628,4.567754,6.285485],[2.852200,4.824485,4.817342,-3.336220],[1.816960,2.060103,3.353377,-9.424652],[-1.937390,2.390372,9.100803,8.612519],[-5.601058,-3.622349,-8.442769,-0.595268],[-3.758316,-9.966498,-0.695959,-1.015666],[5.030927,8.918535,9.933182,3.700016],[-1.366167,6.030239,6.872433,-3.703230],[0.466940,6.181960,-3.082257,-0.622770],[9.847861,-7.830003,0.808004,6.991343],[-8.818592,-8.542693,-3.406670,6.923488],[-9.169775,9.454671,0.140974,7.158084],[-1.323862,-6.731231,-8.544401,0.670842],[8.265063,8.257216,-9.061831,2.864339]]], dtype = "float64")#candidate|2637|(14, 16, 4)|const|float64
var_2638 = relay.var("var_2638", dtype = "float64", shape = (14, 16, 4))#candidate|2638|(14, 16, 4)|var|float64
bop_2639 = relay.power(const_2637.astype('float64'), relay.reshape(var_2638.astype('float64'), relay.shape_of(const_2637))) # shape=(14, 16, 4)
func_78_call = mod.get_global_var('func_78')
func_81_call = mutated_mod.get_global_var('func_81')
var_2662 = relay.var("var_2662", dtype = "uint64", shape = (144,))#candidate|2662|(144,)|var|uint64
var_2663 = relay.var("var_2663", dtype = "uint64", shape = (1440,))#candidate|2663|(1440,)|var|uint64
call_2661 = relay.TupleGetItem(func_78_call(relay.reshape(var_2662.astype('uint64'), [9, 16, 1]), relay.reshape(var_2663.astype('uint64'), [9, 16, 10]), ), 0)
call_2664 = relay.TupleGetItem(func_81_call(relay.reshape(var_2662.astype('uint64'), [9, 16, 1]), relay.reshape(var_2663.astype('uint64'), [9, 16, 10]), ), 0)
func_1864_call = mod.get_global_var('func_1864')
func_1869_call = mutated_mod.get_global_var('func_1869')
var_2676 = relay.var("var_2676", dtype = "float32", shape = (616,))#candidate|2676|(616,)|var|float32
const_2677 = relay.const([[9.964790,-7.772022,5.991559,6.657570,1.409131,9.132775,-5.548371,-2.486938,-9.153792,-4.275660,-7.185650,0.804042,5.274502,6.366473,1.664096,4.330485,3.635788,-4.848550,-1.955740,1.856073,0.764997,-8.362592,-8.522988,9.130622,-8.184438,1.812706,3.057980,3.504027,1.976679,-5.991811,5.927408,0.281176],[2.704240,6.805219,7.274343,7.868457,0.640457,8.634123,-7.092647,6.955676,-1.760604,9.474744,5.416804,-0.241383,7.388387,2.206169,-5.244167,-9.418504,-4.084640,4.190066,-2.727878,-2.861186,-3.253684,7.552039,6.001816,8.278247,2.443141,4.583548,5.453151,-6.018550,-7.817849,1.447222,-9.547139,-9.626008],[8.364818,6.318187,-6.974772,-1.907679,0.879415,7.613262,-5.890082,-5.892840,3.240286,-8.080674,5.080181,2.908899,-3.368791,-0.268986,-6.364554,8.242062,-9.883722,-6.558846,-1.298671,8.084525,-6.127644,-9.858958,-4.189755,0.185280,-8.310696,-9.599508,-4.817150,4.487613,0.691739,9.262156,-1.510534,8.042513],[8.809900,6.254772,-5.488847,4.651716,4.253186,2.820291,-5.292684,3.999906,-0.309760,-8.389429,-6.777851,7.078614,4.230670,9.241676,2.964475,-1.146148,-4.627055,5.221453,8.532446,-8.391336,-2.881930,-6.649231,-5.212385,-7.458805,4.801643,1.574068,-8.765310,5.600025,1.954303,-5.094103,-8.413160,-6.417472],[-1.012259,0.752739,-0.183799,2.716501,-9.768060,-0.335227,4.847292,2.488746,8.217254,-7.220275,-1.800735,-3.161240,3.632020,-3.526924,2.159925,-9.955728,-9.578942,8.773892,5.974746,-3.190175,-3.614808,-5.000472,6.800713,2.685216,-9.666478,-8.250835,0.563585,2.805155,7.643353,-4.002918,-5.616089,3.104137],[7.747081,6.365917,1.324543,-2.708911,-1.428510,7.461494,-1.134263,6.857407,8.800041,0.106169,-9.844744,1.177304,3.797755,-4.786772,-9.846844,-8.352849,1.774922,3.541525,7.291647,-8.822984,-8.637899,4.456433,-6.304873,-0.979432,1.933475,4.325471,-6.393433,6.878972,-6.007878,2.797161,9.090341,-1.568453],[6.778377,6.182988,4.124495,6.439657,-0.739338,6.075378,7.709564,-8.898125,2.736720,-2.479062,-9.099749,9.217860,4.529961,4.714700,0.215163,3.719378,4.908590,6.314752,9.692390,8.207361,-1.184378,-4.302808,-3.633690,-0.664126,-4.674278,0.259048,-2.075848,-5.684885,9.746601,0.031811,9.186337,5.555898],[3.435401,-4.445207,7.012846,-5.718383,-9.459789,8.676888,2.226435,-6.977416,-4.584632,-8.462449,4.883313,4.744924,3.197390,8.039194,3.691150,5.607878,0.713694,8.150994,6.026218,-6.084197,1.396770,-3.389770,6.827401,-7.877474,-8.798113,4.170860,2.894649,-9.198219,4.508293,-3.257660,1.705398,7.304486],[4.999951,2.934273,7.130382,-2.813976,-2.125881,8.885832,0.991070,4.679025,4.398231,6.816705,1.373321,0.665480,3.080565,-3.057262,5.597253,-0.030664,-3.165268,-0.210606,6.751197,-9.518344,5.427633,-4.569633,-4.592098,0.754031,-8.804983,-0.539382,-5.825339,-9.046796,0.274367,-0.102514,-6.936363,4.783477],[1.096452,-9.597578,-5.781479,-5.159116,9.111160,1.094019,-9.908791,6.698947,3.656293,4.515908,1.215396,-5.896016,-4.814120,9.566990,5.812668,9.511752,-3.467663,6.269441,7.570298,6.559667,-7.947430,-0.424163,7.701759,2.974216,7.668466,-7.663738,-1.328612,-3.399616,-2.844340,-7.484999,-8.104024,-8.019927],[8.325813,-5.569206,0.519603,6.673013,-1.599896,-4.830182,5.786670,-0.313198,-3.860345,6.324276,7.440716,2.805776,-4.412285,9.319393,-7.746709,9.149034,-4.603760,-9.859038,1.945970,4.305529,0.689029,6.255239,-2.865145,1.401982,0.174891,8.909138,-7.594127,-3.834393,-0.251403,-7.042530,6.104127,5.051542],[9.014429,7.581928,1.472061,-7.625830,-0.439257,-2.228510,9.214560,-9.892415,-3.231255,-0.646920,-5.203998,4.218118,-2.065769,4.132114,-7.183966,8.294623,-8.064820,-9.748192,-6.071498,-0.871899,2.730424,0.019541,5.729802,6.506494,3.376165,-9.283872,-2.228118,9.492492,4.360544,-1.974018,4.740932,4.510967]], dtype = "float32")#candidate|2677|(12, 32)|const|float32
var_2678 = relay.var("var_2678", dtype = "float32", shape = (112,))#candidate|2678|(112,)|var|float32
call_2675 = relay.TupleGetItem(func_1864_call(relay.reshape(var_2676.astype('float32'), [11, 8, 7]), relay.reshape(const_2677.astype('float32'), [6, 64]), relay.reshape(var_2678.astype('float32'), [112,]), ), 3)
call_2679 = relay.TupleGetItem(func_1869_call(relay.reshape(var_2676.astype('float32'), [11, 8, 7]), relay.reshape(const_2677.astype('float32'), [6, 64]), relay.reshape(var_2678.astype('float32'), [112,]), ), 3)
func_1864_call = mod.get_global_var('func_1864')
func_1869_call = mutated_mod.get_global_var('func_1869')
call_2687 = relay.TupleGetItem(func_1864_call(relay.reshape(var_2676.astype('float32'), [11, 8, 7]), relay.reshape(const_2677.astype('float32'), [6, 64]), relay.reshape(var_2678.astype('float32'), [112,]), ), 5)
call_2688 = relay.TupleGetItem(func_1869_call(relay.reshape(var_2676.astype('float32'), [11, 8, 7]), relay.reshape(const_2677.astype('float32'), [6, 64]), relay.reshape(var_2678.astype('float32'), [112,]), ), 5)
func_700_call = mod.get_global_var('func_700')
func_705_call = mutated_mod.get_global_var('func_705')
call_2692 = relay.TupleGetItem(func_700_call(relay.reshape(var_2678.astype('float32'), [2, 7, 8]), relay.reshape(var_2678.astype('float32'), [2, 7, 8]), relay.reshape(call_2687.astype('uint64'), [144,]), ), 1)
call_2693 = relay.TupleGetItem(func_705_call(relay.reshape(var_2678.astype('float32'), [2, 7, 8]), relay.reshape(var_2678.astype('float32'), [2, 7, 8]), relay.reshape(call_2687.astype('uint64'), [144,]), ), 1)
func_1864_call = mod.get_global_var('func_1864')
func_1869_call = mutated_mod.get_global_var('func_1869')
call_2699 = relay.TupleGetItem(func_1864_call(relay.reshape(var_2676.astype('float32'), [11, 8, 7]), relay.reshape(const_2677.astype('float32'), [6, 64]), relay.reshape(var_2678.astype('float32'), [112,]), ), 3)
call_2700 = relay.TupleGetItem(func_1869_call(relay.reshape(var_2676.astype('float32'), [11, 8, 7]), relay.reshape(const_2677.astype('float32'), [6, 64]), relay.reshape(var_2678.astype('float32'), [112,]), ), 3)
bop_2716 = relay.less_equal(call_2675.astype('bool'), relay.reshape(call_2661.astype('bool'), relay.shape_of(call_2675))) # shape=(720, 2)
bop_2719 = relay.less_equal(call_2679.astype('bool'), relay.reshape(call_2664.astype('bool'), relay.shape_of(call_2679))) # shape=(720, 2)
uop_2722 = relay.sinh(bop_2639.astype('float32')) # shape=(14, 16, 4)
output = relay.Tuple([var_2662,var_2663,var_2676,const_2677,var_2678,call_2687,call_2692,call_2699,bop_2716,uop_2722,])
output2 = relay.Tuple([var_2662,var_2663,var_2676,const_2677,var_2678,call_2688,call_2693,call_2700,bop_2719,uop_2722,])
func_2733 = relay.Function([var_2638,var_2662,var_2663,var_2676,var_2678,], output)
mod['func_2733'] = func_2733
mod = relay.transform.InferType()(mod)
var_2734 = relay.var("var_2734", dtype = "float64", shape = (14, 16, 4))#candidate|2734|(14, 16, 4)|var|float64
var_2735 = relay.var("var_2735", dtype = "uint64", shape = (144,))#candidate|2735|(144,)|var|uint64
var_2736 = relay.var("var_2736", dtype = "uint64", shape = (1440,))#candidate|2736|(1440,)|var|uint64
var_2737 = relay.var("var_2737", dtype = "float32", shape = (616,))#candidate|2737|(616,)|var|float32
var_2738 = relay.var("var_2738", dtype = "float32", shape = (112,))#candidate|2738|(112,)|var|float32
output = func_2733(var_2734,var_2735,var_2736,var_2737,var_2738,)
func_2739 = relay.Function([var_2734,var_2735,var_2736,var_2737,var_2738,], output)
mutated_mod['func_2739'] = func_2739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2967 = relay.var("var_2967", dtype = "float64", shape = (5, 5, 8))#candidate|2967|(5, 5, 8)|var|float64
var_2968 = relay.var("var_2968", dtype = "float64", shape = (5, 5, 8))#candidate|2968|(5, 5, 8)|var|float64
bop_2969 = relay.floor_mod(var_2967.astype('float64'), relay.reshape(var_2968.astype('float64'), relay.shape_of(var_2967))) # shape=(5, 5, 8)
uop_2978 = relay.cos(var_2968.astype('float64')) # shape=(5, 5, 8)
uop_2980 = relay.rsqrt(uop_2978.astype('float32')) # shape=(5, 5, 8)
output = relay.Tuple([bop_2969,uop_2980,])
output2 = relay.Tuple([bop_2969,uop_2980,])
func_2998 = relay.Function([var_2967,var_2968,], output)
mod['func_2998'] = func_2998
mod = relay.transform.InferType()(mod)
mutated_mod['func_2998'] = func_2998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2998_call = mutated_mod.get_global_var('func_2998')
var_3000 = relay.var("var_3000", dtype = "float64", shape = (5, 5, 8))#candidate|3000|(5, 5, 8)|var|float64
var_3001 = relay.var("var_3001", dtype = "float64", shape = (5, 5, 8))#candidate|3001|(5, 5, 8)|var|float64
call_2999 = func_2998_call(var_3000,var_3001,)
output = call_2999
func_3002 = relay.Function([var_3000,var_3001,], output)
mutated_mod['func_3002'] = func_3002
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3278 = relay.constdtype = "float32")#candidate|3278|(16, 13, 15)|const|float32
uop_3279 = relay.sin(const_3278.astype('float32')) # shape=(16, 13, 15)
func_700_call = mod.get_global_var('func_700')
func_705_call = mutated_mod.get_global_var('func_705')
var_3298 = relay.var("var_3298", dtype = "float32", shape = (112,))#candidate|3298|(112,)|var|float32
const_3299 = relay.const([1,-9,2,9,6,1,9,5,-3,9,-3,9,-2,-7,2,7,10,8,-7,-3,4,-10,-9,-10,-1,-10,-5,2,-6,4,-3,-1,-9,4,-5,-9,-4,-1,-6,-5,-1,-3,4,6,8,-7,-1,3,-9,-5,3,-5,-3,-10,-9,-7,-2,1,-8,7,6,-7,2,8,5,8,-5,7,-9,-8,5,-3,4,4,-10,7,5,-5,-2,-10,6,6,-9,1,3,-8,-3,-5,4,10,-8,-2,-1,-2,1,1,-8,-9,4,-6,-9,3,-5,10,8,5,-9,9,-7,-4,-2,6,-3,-8,-4,4,-7,5,5,-3,-7,9,7,-7,-10,3,-7,-2,3,-9,-4,-10,10,-5,1,10,-10,4,-10,4,-2,-1,-7,9], dtype = "uint64")#candidate|3299|(144,)|const|uint64
call_3297 = relay.TupleGetItem(func_700_call(relay.reshape(var_3298.astype('float32'), [2, 7, 8]), relay.reshape(var_3298.astype('float32'), [2, 7, 8]), relay.reshape(const_3299.astype('uint64'), [144,]), ), 1)
call_3300 = relay.TupleGetItem(func_705_call(relay.reshape(var_3298.astype('float32'), [2, 7, 8]), relay.reshape(var_3298.astype('float32'), [2, 7, 8]), relay.reshape(const_3299.astype('uint64'), [144,]), ), 1)
output = relay.Tuple([uop_3279,call_3297,var_3298,const_3299,])
output2 = relay.Tuple([uop_3279,call_3300,var_3298,const_3299,])
func_3302 = relay.Function([var_3298,], output)
mod['func_3302'] = func_3302
mod = relay.transform.InferType()(mod)
var_3303 = relay.var("var_3303", dtype = "float32", shape = (112,))#candidate|3303|(112,)|var|float32
output = func_3302(var_3303)
func_3304 = relay.Function([var_3303], output)
mutated_mod['func_3304'] = func_3304
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3431 = relay.var("var_3431", dtype = "float64", shape = (1, 10, 3))#candidate|3431|(1, 10, 3)|var|float64
uop_3432 = relay.sigmoid(var_3431.astype('float64')) # shape=(1, 10, 3)
func_2733_call = mod.get_global_var('func_2733')
func_2739_call = mutated_mod.get_global_var('func_2739')
const_3435 = relay.const([-2.192702,6.115731,7.314980,9.613896,7.063013,9.749234,7.477221,-6.628247,2.262651,-7.597211,8.977981,2.962119,-5.282808,-5.763589,0.623135,5.485062,5.509289,5.421562,4.468383,7.719031,-4.024403,-7.372787,-5.783827,-4.299449,-6.339817,8.568662,6.110519,-8.813542,9.169648,9.541844,2.348663,-1.986909,2.505568,8.163230,-1.760180,-2.873508,2.986912,-1.857777,2.984938,-1.229626,1.999078,6.526563,-2.262440,-7.330726,-0.626749,-3.880587,5.117664,0.789421,-7.590573,6.377548,2.128683,-1.246061,-5.998388,4.218623,4.299937,-0.646161,3.193506,5.857734,8.550805,0.336814,7.242464,0.048098,-1.260608,-4.876110,6.591007,9.851986,1.111621,-2.846734,-2.884864,5.124051,0.539553,1.630790,-8.217470,-8.541600,-7.684791,9.407925,-8.149923,-8.061359,1.919778,2.038522,3.196190,-9.128032,-9.542901,-8.078282,-4.348665,9.732871,3.773318,-9.898930,3.271690,0.339396,-6.342577,-6.138501,8.586844,1.572293,6.389603,-9.847460,3.236262,1.799957,5.630185,-6.706273,7.570562,8.864719,-4.978014,-2.484379,-7.851093,-2.240937,2.402340,0.616500,3.793710,5.463126,-7.059042,2.173507,-3.008844,5.068921,1.616733,1.867324,1.369453,8.344436,-5.144081,-4.829953,-9.480961,1.149282,3.544186,-8.058387,5.530149,4.843149,8.608545,0.285821,4.704120,0.609791,4.722593,8.752545,7.622391,-8.439947,9.962599,9.776783,3.739708,5.779716,2.623477,-2.500984,5.783226,-8.701582,-2.995466,0.003323,6.167731,-5.428856,3.870677,9.691538,1.728377,4.761679,-7.205329,-4.205085,6.650297,-1.387984,5.175396,-9.778384,-9.950044,-8.051145,-2.419957,-1.593318,-6.478880,-4.302345,3.565434,2.639413,-3.976522,5.029380,2.219931,-1.308693,9.956927,9.936009,3.274816,9.604663,0.054933,0.958340,2.251312,3.226680,-9.944832,-3.184834,2.546882,-8.295307,-6.551875,9.222867,4.903654,-9.288822,-6.863961,-4.961980,9.736005,-2.846527,9.306361,0.012600,0.121682,-8.450873,-0.036683,9.116734,-0.310666,7.189061,2.325556,-0.365228,1.021377,6.695137,5.964053,7.184966,-1.386123,9.864417,7.434955,-6.836060,2.333663,5.230399,1.892468,7.941207,-8.318379,-7.012538,7.549821,8.894718,-0.067674,3.296708,-7.968136,-4.827115,-0.437980,-2.480629,-7.165023,-1.291532,8.807509,-7.897845,4.030464,6.006962,-7.023825,9.493323,-2.672438,-5.981536,-1.097617,-1.824833,5.415490,1.545875,-8.094219,0.418612,-8.945153,-0.786799,1.145673,1.646665,0.791322,6.435791,-2.063442,5.629485,0.442403,1.698621,1.705061,-3.577375,5.338489,-5.180981,1.707850,-7.546845,-8.881279,5.647920,7.893687,-9.055803,4.367494,5.484564,-8.630672,7.647604,-6.077818,4.342001,-2.841943,-1.322816,0.521392,-5.403271,6.726624,8.962644,6.212495,3.007842,5.593831,5.157141,9.479297,-0.542253,-3.419208,7.240422,8.144429,-5.466217,-0.661449,7.257465,-4.556340,-9.848078,-6.507269,6.544027,9.710581,7.472077,-9.274202,7.450609,7.670175,3.100013,8.262266,-9.280391,-7.507910,8.464824,-8.815260,-3.861736,-1.591680,-3.425697,-2.030229,-1.636433,-5.772263,-1.155601,4.061704,3.843802,-8.999532,-5.517711,1.187155,-9.802085,2.297045,3.705509,-6.989571,-2.862968,-6.964737,4.336276,-2.536071,-1.231223,7.994549,6.987649,1.278170,1.447670,-3.427271,3.163103,8.728911,8.735691,0.976736,-1.047657,-2.296243,-4.945145,3.052903,-2.326728,-7.113033,-8.110351,0.466763,-6.763378,-2.492856,-5.534263,4.126980,5.655851,8.139398,6.477954,7.046746,-0.915207,1.551954,-8.670111,6.462228,-3.373201,-4.267333,3.289791,7.116392,-2.075537,-6.010096,-8.361421,-9.647380,-1.161573,-0.172232,6.813291,6.860600,2.706327,-7.656999,8.061119,-3.559277,1.535414,-9.596888,3.550000,-5.753275,-0.843951,-2.981516,-5.319985,-2.077143,1.829373,0.952250,-2.741504,-8.647834,8.651749,2.710147,-7.638330,-9.317975,-5.304727,9.826750,-4.802127,8.190566,-1.665810,7.571523,3.624685,1.415753,-0.954715,4.175310,9.721598,6.058256,-3.952654,5.369488,-1.634649,2.047804,-4.516825,-4.695612,-9.785556,7.581039,-0.868237,-4.019103,-2.333974,-7.232906,-2.277473,6.529247,2.474704,-7.736824,-9.182597,5.342956,2.817182,8.571438,5.459722,5.375352,-8.868985,-9.982788,7.587200,-3.896255,-0.048987,8.025332,-0.962501,-7.923380,2.251984,2.721848,-4.589500,-4.022670,8.712687,8.222659,-3.949622,9.393588,-5.411101,5.022929,-7.429988,4.336628,-7.830616,6.520890,-6.092183,-0.575452,-8.865571,9.356282,-9.449935,-1.802177,4.600575,-8.310066,-1.834744,-4.806065,6.795411,2.619327,4.753616,-7.635668,8.652206,-2.229806,1.558259,4.275191,8.196506,-4.887373,-3.773788,9.599876,0.867269,9.136204,4.869357,-8.689858,2.570457,-1.460010,-6.570596,-1.014341,-8.464292,9.094995,-5.151427,9.944128,1.707553,7.977350,5.589680,-1.449154,9.993895,-3.271110,2.701317,3.934697,-4.484530,-5.271711,0.760007,-7.559966,2.745856,8.389482,-0.938197,2.442239,9.849522,-5.007693,-2.473014,6.911981,-9.632324,-4.750456,-3.249487,2.846003,-9.065332,8.401841,-0.374245,7.946285,-8.336644,9.241514,-7.865569,-3.550883,-6.531095,-9.633162,6.800849,-9.417888,6.032855,-6.787077,-4.581560,5.779077,7.145198,-6.681569,-2.133249,8.622630,3.520923,-2.240383,-5.906841,8.234579,3.073295,3.295446,1.737747,-7.868220,-3.373659,-6.279551,-3.360186,2.768982,-1.156051,-5.778138,-9.260492,8.723483,-4.644729,6.764644,5.760490,4.427428,-7.073336,9.163699,-8.464303,-2.363804,-3.553820,-8.241961,-7.513635,-8.948041,7.145979,-7.946870,2.205300,2.566708,8.340791,-4.953586,6.377004,1.397071,-2.093361,2.751580,-9.188873,1.596908,-3.777277,-1.861939,-8.391075,-2.823738,3.747855,0.391477,-4.641407,-0.890575,5.025900,-8.774393,0.300952,-4.247948,8.285974,-1.794871,0.544098,-0.846529,4.037492,9.671066,-6.955883,-4.524952,-5.471676,-0.654394,-5.176311,-8.961983,6.870253,2.277546,-6.804415,-0.574766,2.946336,4.387118,-2.046211,1.417166,-5.556170,2.336490,-9.221192,-8.196226,2.240878,0.059314,-2.177210,3.682150,4.327511,-0.705236,-6.068734,9.299792,9.578634,5.121182,-5.413859,-3.477088,8.224057,4.814333,1.375113,-0.508847,-1.379028,-2.528648,4.345258,-7.094253,-8.572848,-3.563196,0.422501,3.493510,-8.685774,6.062016,5.327806,-7.553135,7.818430,-7.836957,8.075036,-1.240432,-3.794021,-6.864078,-2.782463,-2.608918,4.910518,-4.616467,-2.118959,-5.821934,-4.976323,-0.295738,0.209131,-9.275706,-8.708115,3.076030,1.263211,-4.796340,-9.608179,3.285226,9.054260,-9.164799,-4.728779,-9.901235,-9.736575,3.072770,-1.979927,-7.759731,-4.851286,-4.600864,2.639880,9.386118,9.747659,-0.555761,-6.564134,5.352926,-3.595674,4.948907,-9.199531,1.864294,-6.839474,1.897448,-5.198066,-6.802197,-3.750963,-5.375359,-7.979327,-2.395460,1.190885,6.960361,-8.274711,2.975937,-2.401589,1.616552,-4.488720,4.682669,6.209043,8.423518,-2.206417,6.665752,6.078215,-5.054464,6.521382,4.060538,-9.024974,-6.858577,1.715352,2.107021,-1.513899,-5.552789,1.737335,1.480946,-3.396767,0.191055,-6.479795,0.929417,-0.979042,6.418586,-8.930755,-2.985252,-8.298620,1.415030,-5.584123,6.510731,4.936570,-1.824604,-8.504312,-7.322830,-1.037606,0.510979,-1.625334,-1.636436,5.728637,-4.678739,7.288189,-7.686461,3.409379,5.829819,-2.074143,2.179173,0.137670,-4.459144,6.077104,-3.384731,-9.124870,2.443084,3.702568,4.508935,9.483948,-7.247181,-5.498880,-3.870825,4.651365,-6.750267,5.405309,9.048043,6.909780,-6.939633,-7.703882,-9.563575,-8.886630,8.318463,-5.173315,-4.752962,-3.244204,-4.993689,1.633526,3.882355,-9.891805,-3.236086,9.874799,-1.080232,-5.909236,6.925918,-8.474262,2.518134,2.300162,-1.437408,-7.267907,-6.992531,6.140793,1.264928,2.060113,7.369344,-3.879625,9.223586,-9.101653,-5.401098,-6.333917,2.176030,-1.511792,-8.357280,-6.273622,2.417256,5.696047,9.218300,-5.311059,-4.908579,5.494892,9.516974,9.028818,5.771367,1.527867,-0.034532,-8.950775,-4.703540,5.980343,-5.682025,5.613897,-4.818629,6.191394,8.705023,-9.397814,-7.296181,-7.650393,-6.163355,-1.547578,6.963290,7.846671,-1.719443,7.343530,-2.126555,5.710333,-4.845407,-4.254927,0.613036,1.372860,5.678434,-1.177656,0.652505,-8.300582,7.373352,-5.833465,-1.035940,-3.565407,6.683162,7.938499,-8.793859,-8.359996,4.824244,7.490121,8.101907,8.329290,6.126192,-6.035238,-3.962608,-6.751635,1.887636,-8.620723,-5.864167,-4.881103,0.534851,-6.943064,-5.983301,-0.992043,5.966664,4.259524,-8.015956,-4.768772,-5.088844,2.647566,0.245061,-5.502518,-2.525483,-0.418164,-3.258072,-1.442773,-8.949332,5.297221,1.003193,-6.124528,-0.488137,7.008077,-9.245902,-8.953387,-0.422832,-1.029585,3.536754,4.421661,2.842664,-4.767024,-8.997250,4.136332,9.115990,-1.389944,0.723022,-0.528260,-0.442946,-0.677493,6.327361,9.079223,-1.100837,4.215684,0.811953,5.058811,-5.957053,-3.518804,-1.578406,5.791997,-1.477285,3.296797,-7.913325,3.245972,9.026263,8.548463,-9.615529,6.911274,-8.289235,-5.118142,7.693148,4.108157,-2.843166,-7.576723,5.259888,-6.293994,3.039094,5.646604,2.304295,-9.106942], dtype = "float64")#candidate|3435|(896,)|const|float64
const_3436 = relay.const([-5,9,-9,-4,8,6,4,2,7,1,-5,-2,1,-6,-4,-2,10,-8,10,-3,4,6,1,1,4,-9,-8,3,10,-4,2,3,9,4,5,-10,9,8,6,1,1,10,8,-1,-5,-5,10,9,-3,-9,-2,-7,4,2,-5,9,2,-7,5,1,10,-6,-7,-10,-10,9,5,-3,-3,9,8,4,-1,2,-9,-5,10,1,-10,10,-9,2,-6,5,9,-7,-3,-9,-4,-10,4,3,-9,-3,-5,-9,-1,10,-7,7,10,5,5,-10,4,3,7,2,-2,5,8,-4,6,-6,-9,-8,-7,4,8,-2,-4,-8,2,-5,7,-2,7,-7,1,5,-6,-1,-8,4,9,-6,-2,-1,8,-9,-9,3,-10,-8], dtype = "uint64")#candidate|3436|(144,)|const|uint64
var_3437 = relay.var("var_3437", dtype = "uint64", shape = (2, 720))#candidate|3437|(2, 720)|var|uint64
const_3438 = relay.const([[7.133689,6.782266],[-2.306929,-2.444761],[8.002115,-7.406833],[0.839009,1.203787],[9.094156,-3.355049],[-5.970925,-0.955989],[8.233483,7.768956],[-1.502315,2.109445],[1.997942,8.739414],[-4.148965,7.590229],[3.657903,2.527825],[-2.351719,1.709844],[6.274987,5.241992],[-7.168732,8.498589],[-3.142539,0.590311],[2.590000,-9.038751],[5.816636,-3.181447],[0.150453,-5.951193],[-6.419364,7.534083],[-2.068583,-3.671355],[6.721690,1.775887],[7.500615,7.121900],[4.724898,5.943362],[-8.499692,5.375222],[7.280691,7.396629],[-8.069179,0.040390],[-8.350602,2.847597],[6.239022,-1.733908],[-5.611476,7.844508],[-6.587428,6.442462],[4.629518,-4.924897],[-2.844506,-5.047773],[2.707288,-1.053811],[6.971396,-6.731051],[4.098490,-1.032642],[-7.161919,6.458490],[-9.537735,-1.527330],[9.586846,-5.763583],[-8.268765,-0.517912],[3.563837,-8.811372],[3.427169,-8.474044],[8.345033,-5.236045],[-0.756911,1.028574],[2.182362,4.516929],[3.659850,-0.694886],[9.554225,-5.054741],[3.423332,-3.794156],[8.486415,4.649660],[-4.539552,9.142184],[1.800020,-5.775689],[-7.752364,-9.908665],[-3.536468,2.262256],[9.910428,-5.627237],[-9.938274,9.658074],[-8.211455,-6.586212],[-5.426374,-2.125700],[6.525916,-6.073324],[0.569671,1.893529],[4.453807,5.988936],[8.990953,1.334711],[-6.141159,-6.246724],[-6.895499,-4.457406],[6.204683,-9.678911],[-8.288008,-5.567963],[-9.431614,-6.444761],[7.951663,4.234776],[9.225909,-0.414049],[3.722474,-3.648576],[-7.749546,6.717497],[-1.152720,7.792356],[-0.729785,8.434862],[-2.711633,9.991646],[0.768888,-6.244241],[8.630524,1.596696],[-8.968364,3.266903],[5.717542,6.498398],[-0.874427,5.892508],[-7.410954,3.357382],[-6.783867,8.372693],[-8.779210,-8.687421],[4.880704,8.715159],[-7.728686,7.229690],[-7.468897,1.636128],[-6.764979,8.123905],[0.771575,6.089987],[3.993746,-7.591423],[-8.252826,-8.295565],[-0.411480,-7.774399],[8.794938,-6.154816],[-8.269542,-9.885131],[0.661071,-8.442434],[-7.287054,-6.619050],[-9.299992,3.793538],[-8.699908,-1.606809],[-9.206889,-8.843400],[6.204119,-4.135702],[-8.189386,-8.962593],[-4.227887,6.292902],[-0.816213,-2.435461],[-7.132651,-3.139820],[-2.038060,-9.672320],[-2.582717,2.670854],[-4.072947,6.729453],[-5.970583,-1.736741],[5.827688,3.996620],[-7.992438,1.247722],[6.284923,7.933947],[-3.806948,-6.545806],[-4.637300,-7.926219],[4.306105,6.827639],[4.282707,9.054935],[-1.458049,-2.247415],[2.908047,0.330289],[-1.395367,-0.144698],[-9.666153,9.832267],[-2.622059,-5.845433],[0.159606,1.373022],[-9.426945,-9.794982],[4.957840,-8.070495],[7.653187,5.913386],[-8.104036,-8.305710],[7.104635,-1.154702],[2.155070,6.156698],[-4.713067,-2.081730],[-7.373974,-8.694025],[-4.342176,-2.310471],[3.457755,7.461964],[4.731862,4.658812],[4.750542,-6.963279],[-5.769112,0.148024],[7.471567,6.315950],[-0.205862,5.025093],[0.273616,2.982568],[-0.933922,-3.336941],[-5.054895,-4.124685],[-1.866199,-0.224498],[-3.904932,7.429421],[6.848116,-6.724891],[8.638726,-9.919249],[1.797467,-3.258217],[-9.305639,-4.134223],[5.185374,-3.755214],[-9.456975,2.074558],[-8.327266,-8.524476],[-0.215130,1.258977],[-8.002350,-8.105943],[-3.160386,3.337835],[-8.951314,-0.599376],[-9.078453,3.946661],[1.056690,2.662353],[2.071534,5.393244],[-1.060114,-2.468456],[7.240397,7.576412],[6.336955,1.241260],[-8.798633,6.150973],[-6.179187,2.513476],[-8.978914,-2.597572],[-1.981858,0.763613],[-8.782108,6.014457],[-2.859564,7.941648],[-3.896885,-1.431019],[8.215384,6.514282],[-5.831196,-3.697406],[-3.737168,6.503719],[2.072635,5.720727],[-6.793885,1.176104],[1.476195,6.166357],[-6.566120,5.837621],[2.081370,-6.740784],[9.824733,0.707577],[-2.408233,-2.463327],[1.355011,7.521434],[1.968234,1.907032],[5.617273,-3.633497],[7.059491,-2.866299],[-5.228770,-5.623684],[3.974288,-4.130268],[-4.016695,2.396084],[-0.781277,-5.223110],[1.797493,-5.007058],[-4.032442,-6.612260],[-0.820995,-2.807999],[0.014189,8.679127],[-2.301669,0.775980],[-2.761762,-2.613860],[7.587015,5.148360],[7.567524,-4.919941],[1.879619,7.457266],[-0.842660,1.790617],[-2.479618,-0.207942],[-7.406180,1.916238],[-9.498651,8.329121],[2.985536,4.259525],[6.571716,-8.042209],[-2.436064,0.368202],[3.034816,1.577154],[8.068317,-6.485715],[-4.958174,5.646272],[-2.614307,2.493496],[3.242963,4.738556],[-6.873768,-2.109400],[2.527004,-2.420177],[4.489643,8.688070],[-8.947160,-9.910289],[1.115152,6.201482],[3.788548,-6.711543],[-6.718063,-9.439624],[-3.861210,-3.982320],[2.735347,-0.371975],[7.720426,-1.975152],[6.519283,2.488669],[0.341154,8.844824],[-2.636279,-0.585615],[6.837452,3.672682],[4.647729,3.108350],[8.784371,-8.156552],[-4.557084,6.444008],[-9.661332,-6.882493],[6.478771,1.688871],[0.193313,5.979145],[-3.786822,-1.642835],[-1.411214,2.793261],[0.558939,-8.855166],[-0.369626,3.824365],[8.984272,-2.699169],[5.031307,2.986003],[-6.738513,1.493202],[2.831069,7.696410],[-4.069615,4.593143],[2.180562,-2.149287],[-4.455855,1.722133],[-0.876089,3.048545],[4.261296,5.684005],[0.528613,7.479593],[0.156418,2.833713],[0.164261,-7.706153],[-8.539336,-9.838195],[-9.416316,7.051179],[8.828798,1.464482],[3.179924,-8.115582],[-8.676775,5.233034],[-6.431079,7.521058],[4.415450,4.840800],[2.894787,9.604873],[7.772118,2.774175],[-2.478955,-1.233017],[6.088067,0.369287],[6.546105,7.218839],[3.746388,5.080069],[1.423240,-4.714134],[0.790385,4.098510],[1.684328,1.517249],[7.786308,9.106608],[9.636939,4.722714],[1.446018,2.555705],[-6.791874,9.245147],[-6.728027,-3.629026],[5.663424,-8.374540],[-5.747603,-1.360993],[-7.300331,-4.972115],[-1.409684,-5.280379],[-3.909180,7.804249],[-9.918707,-6.278883],[4.701900,1.400108],[-0.187287,-1.861941],[-0.707800,-3.648110],[-6.596572,-5.618013],[-2.773192,-4.915755],[-0.979238,-1.675641],[2.446412,4.064735],[6.654603,-8.714733],[5.305527,-6.014820],[4.265177,2.998626],[0.310965,-2.785034],[-0.761670,8.346887],[-3.805948,-7.360680],[-6.539093,5.671121],[-8.755717,7.958725],[-3.284992,-0.277345],[2.440417,5.351554],[0.073474,-0.760479],[-4.831163,3.022607],[-3.104313,-5.922556],[-1.758382,0.189648],[8.039687,-0.804580],[4.179107,8.151065],[-3.021555,6.648523],[-0.934741,-2.405128],[-9.215461,6.459416],[-9.032558,0.056636],[6.303049,9.225786],[-3.832929,-6.855041],[6.244038,1.986178],[-3.415463,-5.454774],[1.392993,3.773105],[-6.803251,4.720152],[-9.728791,0.513496],[8.565981,5.041728],[-4.164445,0.135178],[-8.160414,0.026218],[-6.817945,-2.966465],[1.491679,0.646744],[2.331936,5.655105],[7.267739,-9.867684],[0.577476,-6.351065],[-0.896271,0.775353],[-8.359917,-0.609374],[-4.649755,-5.942107]], dtype = "float32")#candidate|3438|(308, 2)|const|float32
var_3439 = relay.var("var_3439", dtype = "float32", shape = (112,))#candidate|3439|(112,)|var|float32
call_3434 = relay.TupleGetItem(func_2733_call(relay.reshape(const_3435.astype('float64'), [14, 16, 4]), relay.reshape(const_3436.astype('uint64'), [144,]), relay.reshape(var_3437.astype('uint64'), [1440,]), relay.reshape(const_3438.astype('float32'), [616,]), relay.reshape(var_3439.astype('float32'), [112,]), ), 6)
call_3440 = relay.TupleGetItem(func_2739_call(relay.reshape(const_3435.astype('float64'), [14, 16, 4]), relay.reshape(const_3436.astype('uint64'), [144,]), relay.reshape(var_3437.astype('uint64'), [1440,]), relay.reshape(const_3438.astype('float32'), [616,]), relay.reshape(var_3439.astype('float32'), [112,]), ), 6)
func_2733_call = mod.get_global_var('func_2733')
func_2739_call = mutated_mod.get_global_var('func_2739')
call_3441 = relay.TupleGetItem(func_2733_call(relay.reshape(const_3435.astype('float64'), [14, 16, 4]), relay.reshape(const_3436.astype('uint64'), [144,]), relay.reshape(var_3437.astype('uint64'), [1440,]), relay.reshape(const_3438.astype('float32'), [616,]), relay.reshape(var_3439.astype('float32'), [112,]), ), 0)
call_3442 = relay.TupleGetItem(func_2739_call(relay.reshape(const_3435.astype('float64'), [14, 16, 4]), relay.reshape(const_3436.astype('uint64'), [144,]), relay.reshape(var_3437.astype('uint64'), [1440,]), relay.reshape(const_3438.astype('float32'), [616,]), relay.reshape(var_3439.astype('float32'), [112,]), ), 0)
uop_3445 = relay.atan(uop_3432.astype('float32')) # shape=(1, 10, 3)
bop_3448 = relay.less_equal(uop_3432.astype('bool'), relay.reshape(var_3431.astype('bool'), relay.shape_of(uop_3432))) # shape=(1, 10, 3)
output = relay.Tuple([call_3434,const_3435,const_3436,var_3437,const_3438,var_3439,call_3441,uop_3445,bop_3448,])
output2 = relay.Tuple([call_3440,const_3435,const_3436,var_3437,const_3438,var_3439,call_3442,uop_3445,bop_3448,])
func_3456 = relay.Function([var_3431,var_3437,var_3439,], output)
mod['func_3456'] = func_3456
mod = relay.transform.InferType()(mod)
var_3457 = relay.var("var_3457", dtype = "float64", shape = (1, 10, 3))#candidate|3457|(1, 10, 3)|var|float64
var_3458 = relay.var("var_3458", dtype = "uint64", shape = (2, 720))#candidate|3458|(2, 720)|var|uint64
var_3459 = relay.var("var_3459", dtype = "float32", shape = (112,))#candidate|3459|(112,)|var|float32
output = func_3456(var_3457,var_3458,var_3459,)
func_3460 = relay.Function([var_3457,var_3458,var_3459,], output)
mutated_mod['func_3460'] = func_3460
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4037 = relay.var("var_4037", dtype = "int64", shape = (16, 12, 8))#candidate|4037|(16, 12, 8)|var|int64
var_4038 = relay.var("var_4038", dtype = "int64", shape = (16, 12, 8))#candidate|4038|(16, 12, 8)|var|int64
bop_4039 = relay.logical_xor(var_4037.astype('int64'), relay.reshape(var_4038.astype('int64'), relay.shape_of(var_4037))) # shape=(16, 12, 8)
output = relay.Tuple([bop_4039,])
output2 = relay.Tuple([bop_4039,])
func_4048 = relay.Function([var_4037,var_4038,], output)
mod['func_4048'] = func_4048
mod = relay.transform.InferType()(mod)
var_4049 = relay.var("var_4049", dtype = "int64", shape = (16, 12, 8))#candidate|4049|(16, 12, 8)|var|int64
var_4050 = relay.var("var_4050", dtype = "int64", shape = (16, 12, 8))#candidate|4050|(16, 12, 8)|var|int64
output = func_4048(var_4049,var_4050,)
func_4051 = relay.Function([var_4049,var_4050,], output)
mutated_mod['func_4051'] = func_4051
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4183 = relay.const([[[-5.792070,3.722225,9.841057,8.219536,1.929983,-6.594311,7.806724,3.141322,-6.565728,-8.036195,3.355398,8.593575,-2.201244,-7.589006,7.021001],[-0.481304,8.098474,7.078359,-0.369023,-5.367797,-3.056462,7.477255,-9.818240,-3.739203,6.071072,-6.356096,5.741157,0.615073,7.080342,3.735940],[7.113905,-6.354200,3.219468,-8.477346,-9.444852,-4.944975,9.024120,-3.893431,-4.243238,-0.953341,1.465805,-1.193657,-5.298272,-1.329662,8.080521],[-1.568035,3.809433,-6.961010,-6.106746,-7.729265,1.426519,-6.093653,-8.837313,0.643753,6.047498,-9.800838,-0.117896,9.855126,4.731387,-8.924792],[8.310489,4.960140,2.064331,-7.487695,-8.541338,-1.935791,0.902085,-3.888045,7.452871,-9.942848,6.640684,5.051856,-3.683223,3.998699,-3.871119],[-0.337608,-4.876809,2.096073,5.531085,-8.877512,-9.792982,-2.894515,5.527204,-5.809911,-1.711479,5.683450,8.596471,5.621877,5.318601,0.463690],[2.062841,6.316501,-7.720706,6.920644,-6.295683,0.467858,0.218364,-1.693153,8.034131,1.584111,-6.032421,5.418508,-6.011867,9.978277,1.337327],[9.314809,-5.701568,6.681270,1.146694,3.821772,-3.239733,7.601151,-2.591331,-1.861479,-0.056848,0.179098,-4.091047,-1.904054,3.352113,-5.562664],[6.237257,9.378682,-9.277465,-4.518904,-3.170978,-4.223643,-6.790355,-7.801475,4.536268,-7.605900,-8.089360,-6.388112,3.489761,3.318563,-7.128617],[6.924278,-4.582775,-7.136477,7.018500,-3.911930,-0.419795,-1.472011,-3.856447,1.023681,8.298257,4.259380,1.173593,-8.003679,0.007203,5.491245],[8.013932,8.391320,-0.534807,6.389746,-3.230616,3.259003,-8.831887,0.447008,-2.315782,-9.703560,0.776053,4.124389,-7.751457,0.619171,-2.231996]],[[0.769876,7.752496,4.638748,-3.783716,-6.105730,-5.526389,9.297491,1.937898,-2.400753,4.347721,-0.114315,-2.075278,5.936326,3.240410,-9.835152],[-4.029100,-4.550516,-0.133728,5.365059,-5.502806,2.795821,5.973460,8.621333,-1.032560,-5.797280,-5.575892,-9.964791,-5.565498,9.838934,-3.173591],[6.564745,-9.927209,-7.064443,2.331385,1.025052,3.482087,0.172708,-2.509916,-4.556355,-4.884167,-3.197523,2.396431,3.668754,6.974079,4.168206],[2.524867,-5.857291,-7.660950,-9.888468,-8.603495,2.136159,5.373980,-1.770661,0.736535,-1.575147,1.387465,3.305489,3.162262,-1.677766,0.419293],[-2.574742,8.775210,-8.556542,2.411688,0.456086,0.205344,-0.906439,1.012303,-7.178331,1.900800,-4.309296,3.169733,5.962452,0.499976,3.083585],[0.668062,9.356193,-8.397068,0.217598,-5.182802,4.670601,0.393440,-2.712058,-1.470642,-0.644253,2.546069,-1.370785,-0.741749,2.468357,-7.115609],[-4.780592,-1.396432,-0.291378,-9.831531,6.678563,-6.251472,-8.412046,-2.125699,2.848813,6.714478,-0.567331,-4.828849,9.810591,-8.762148,-6.157640],[-0.672382,-1.109130,-3.972196,6.197520,-2.982989,-2.624524,-9.605732,3.514825,7.604270,8.728244,-8.917528,-9.950218,6.282365,1.974164,-1.721332],[-5.738719,-3.855103,-7.606079,7.478948,9.039602,-0.104075,-0.378850,-2.195405,2.545072,-7.161815,-9.385431,-1.117573,-2.889403,5.807294,6.847036],[2.261495,-1.863718,-3.100810,7.585026,-5.125598,-8.415237,-5.069833,1.280159,-2.208659,-6.834834,-6.107430,9.610580,9.812234,-2.571124,4.128727],[0.451910,3.262468,-7.809654,-5.596144,0.837558,8.042656,6.917802,-7.516242,-3.931980,9.776135,-6.363932,-1.053905,-2.164514,5.681646,-8.548421]],[[-5.380199,9.533214,0.150505,8.936795,6.713252,-1.174033,-3.242526,-2.160253,7.408882,1.540929,-1.280006,-4.784639,6.598737,-1.129750,7.628339],[3.710733,-3.428265,4.043326,4.694630,6.665780,4.110821,4.596598,3.635975,-7.806419,-4.239880,2.195129,7.619853,1.782499,-3.705197,0.031872],[-1.777753,4.367385,-3.524586,-8.812841,-5.089739,-0.404446,-1.376164,3.282105,-4.239588,-9.393593,-5.082017,6.263318,7.912943,-7.110528,-1.646505],[4.257785,5.628480,-5.752833,4.850130,0.208313,-4.774556,5.528425,5.751635,9.823471,-8.312620,-8.392299,5.037711,2.881833,3.371471,2.927059],[6.055082,-1.432710,2.652646,-5.503739,-5.826265,-7.790465,-5.338575,1.326455,3.405286,1.634341,-7.378921,-8.077214,6.522886,-4.735057,0.579553],[-7.491280,-3.037357,7.643350,5.913289,-6.014874,3.152801,5.088788,-6.709818,4.563621,0.954211,3.956065,5.950221,8.012325,2.541250,8.188735],[3.759974,-7.792042,-9.023171,-1.717419,1.856621,9.655502,6.244276,-1.719007,5.009308,7.260435,-4.721787,-7.133080,-3.511595,-2.230420,1.555140],[3.406794,-1.084138,-1.545101,6.229602,-7.504771,6.738747,-8.950423,-3.409983,-9.133011,-1.319859,-5.153394,1.562071,-9.637774,0.261544,5.316003],[-8.700104,6.217426,-8.367337,-0.111481,-3.959702,5.951032,-2.684664,7.852087,-6.662239,0.591970,7.242983,-2.014509,-3.005607,4.142743,1.120935],[0.418382,6.282983,-2.190096,-7.291089,2.334248,-0.090833,9.062683,-4.233821,8.572969,-8.481309,-0.552105,3.834056,-4.498118,6.239865,2.168612],[6.388017,9.604429,0.932540,-3.448390,-3.479284,2.897564,-9.305676,1.773948,4.063832,-5.042581,2.343055,0.021715,8.681619,5.887955,5.667006]],[[1.019054,8.467793,9.925542,7.030068,-5.876160,-0.683298,-6.786250,-3.838677,5.242411,-6.311509,-4.515080,-6.100508,-0.119329,5.689494,2.732688],[-9.544937,8.332028,5.743046,0.898577,4.791480,-2.746581,6.397709,-7.103922,-4.580686,5.790564,0.236689,7.819076,4.309851,9.437229,1.161163],[-5.456597,-3.038005,8.211265,-4.691926,-1.422676,-9.225050,5.199740,0.489578,-0.488304,-1.534178,-5.378210,7.212798,3.519980,-6.286981,0.704363],[9.643488,3.285954,-0.741456,1.469489,4.068654,-3.252082,-4.141075,6.036986,7.829381,-3.344046,2.757772,-0.881845,-4.052423,-0.740812,-2.156856],[-7.095275,9.809770,0.655833,-4.590476,-9.145972,-8.761410,8.866836,5.902749,-1.721080,-2.491013,-9.425676,-7.769756,-5.595190,-3.226895,7.980516],[7.587263,7.762100,8.703227,-8.365830,7.708438,-7.473541,3.481199,2.402241,-9.053557,3.202017,-1.383836,2.358056,-6.949355,7.459865,-9.238101],[-6.329612,-5.062328,-2.195602,-8.054849,9.440643,8.416913,-9.394066,1.928210,3.612576,6.594671,2.077043,-2.596748,-6.088139,-9.763510,-1.015342],[-7.282938,-9.399912,-2.401616,3.533929,8.612456,-5.621538,-4.939264,5.855738,-2.555434,5.449640,-3.907103,7.673730,7.534403,3.270950,7.233325],[-6.449992,-5.602334,-5.306838,2.755467,-6.747535,-6.580105,-4.379474,9.091412,4.345422,-9.364911,8.644383,1.682131,-1.872630,8.458823,-2.664678],[4.908101,-9.262310,-0.133209,-5.775970,-1.624201,-7.146264,9.700124,4.238946,5.122839,7.008601,-6.926804,-5.521777,3.414304,-3.769187,-5.275221],[-7.754639,-9.018305,-4.349511,8.555674,-8.478369,8.482850,0.637321,8.908097,1.570731,5.426713,4.020472,5.636138,2.874106,-5.337160,1.546397]],[[-1.603146,-5.521054,3.410381,5.863594,3.229410,-4.883714,7.394714,8.380708,1.901349,2.074270,2.373927,-8.640315,-0.780918,-7.156925,8.640655],[9.498706,6.111484,-2.697810,-0.442816,9.212082,-0.959302,-3.114852,3.521908,-3.240411,-2.944133,9.382605,-8.157083,8.837606,5.207915,3.129619],[3.705817,7.720935,-7.422034,1.126045,8.588917,-8.288543,6.643910,2.193012,8.144928,8.406388,3.185339,6.899218,-7.578255,-4.424764,-1.560667],[-3.262221,0.143610,-0.362060,-3.672545,-3.974046,5.947304,0.962147,-8.955214,3.060053,-0.589242,6.531502,-0.683431,-0.521975,3.921914,-3.399071],[-5.672415,-6.263746,-0.889212,-5.447466,-6.376052,8.663586,8.334563,-1.680076,8.463638,0.855140,-0.224537,-1.867978,-7.075649,9.399020,6.892286],[7.179570,9.697772,2.756078,6.029331,-5.119217,5.070643,7.814424,-1.817266,-5.281868,2.891393,5.128575,-1.613606,-0.218752,-1.825624,3.299175],[-1.698278,-4.292508,-0.217469,9.434359,6.943824,7.452707,2.611209,0.840280,7.626388,-5.053725,-7.398371,-6.898265,6.466742,2.273431,9.126197],[4.777136,6.770177,4.376199,-0.561218,9.681426,-9.318079,-3.228977,4.160103,0.409104,8.075341,-4.743661,3.971491,-8.279193,3.899166,0.617769],[-2.764336,-7.863433,-5.866738,6.563291,1.420452,-1.411276,-4.009817,6.721397,-0.405052,-6.731892,-3.064427,8.279995,2.179649,-5.244547,6.635546],[5.785855,9.611245,-7.099847,3.477972,-6.006407,-4.835365,-9.603054,0.196210,8.478153,-4.549007,1.565711,-9.135767,2.771734,-5.340737,-3.201255],[8.896262,-0.821321,-3.225974,-4.667261,-0.743886,-2.068101,3.403891,2.273175,-1.530173,-3.356358,-3.045723,-8.485873,6.004033,1.026877,3.120575]],[[3.364543,0.565756,5.681233,-8.111720,-0.581696,-7.583028,-2.073096,8.181674,-4.747575,-5.026848,5.907190,-8.029874,3.291268,6.933013,-2.482396],[-1.368607,9.505966,4.184033,4.186834,-4.802805,-1.152009,-7.223261,-2.565287,4.792547,-5.230684,5.620399,-8.637820,1.059870,8.471527,-4.957990],[7.259425,-0.170119,2.950752,-4.994228,7.581165,-9.508347,5.900852,-3.387138,-0.254376,4.489117,7.623132,-3.139436,-7.888906,7.404069,-5.311055],[3.243436,2.022890,-9.675133,9.920945,0.436947,3.557951,0.018001,9.043064,-8.147197,8.697319,-2.142260,6.114922,-9.354781,-9.468968,8.024808],[-2.447642,-9.362453,-9.381915,-4.373283,6.896573,9.354236,5.650491,-5.185226,-2.572368,-5.640317,-6.724550,3.120107,-9.790396,7.699123,5.327869],[4.043993,-1.893857,7.461595,1.895532,-4.968110,-8.538676,6.502886,-5.521411,-2.713809,2.101031,-5.879328,0.476979,3.106773,-4.333127,-7.142328],[6.253260,1.024567,9.167524,2.233318,-0.036492,-7.248134,6.825790,-1.334067,8.859970,-6.452030,8.157460,-9.242818,-1.978785,-0.044101,-0.632109],[1.648859,4.018258,7.304233,3.030064,2.647083,8.450881,-1.029364,7.583287,-1.827311,8.051686,2.081605,-1.198518,1.048006,1.889916,8.275235],[-4.598460,-6.941421,8.561815,8.583262,-3.354278,-5.081709,-7.125519,-9.094312,8.917546,-6.761387,8.921390,7.679064,2.805818,9.105283,5.167545],[-6.407382,4.319510,6.372559,8.773709,0.777887,9.574678,0.370385,0.713201,8.966284,-5.918757,6.073623,-7.572426,2.700186,-5.007133,-5.343297],[5.778627,0.138815,5.225699,5.194022,3.816001,-2.259355,-5.535714,-9.856670,4.953819,-8.074338,3.875578,-0.283588,1.615590,3.697693,-4.300209]],[[1.796635,2.871349,-8.441208,6.047043,4.780102,-1.993981,4.202193,1.233039,-5.397392,0.564854,-5.805718,4.105083,-6.788824,5.794283,-9.199169],[-9.576968,7.101501,-1.742027,-3.168166,-6.657380,5.942269,-9.822725,0.659093,-0.042560,-6.693000,7.196176,5.312482,3.832920,0.001289,0.256523],[-8.948618,3.950089,9.080223,4.605762,6.255404,3.687311,0.766688,8.578067,0.750045,-5.981433,3.064522,1.217054,-7.188795,8.593658,0.173931],[7.515717,-8.884270,0.005773,1.382446,4.151852,-9.699723,3.669571,-5.216062,7.918148,-1.684375,-7.581813,8.170433,-9.265087,-7.974188,9.423654],[2.292162,-3.356748,5.409134,7.655775,-6.881995,2.738507,-8.206759,-4.137581,7.912483,-1.768279,-1.399456,2.259842,-9.010761,2.118802,4.965024],[-5.379216,-0.902089,-4.544855,5.095475,-9.941864,1.790315,-3.913095,-0.190875,-1.153801,-2.808148,2.574406,9.732302,-7.925251,9.558025,2.385114],[-6.772063,7.869385,-2.743625,-2.350674,8.042558,1.584196,-1.923660,-8.145863,9.268132,-8.543050,-0.198488,-8.102661,7.282653,5.144525,-1.023939],[4.618547,1.933067,6.603067,1.091805,9.780550,-1.034926,0.829733,-4.489634,0.650112,-0.483980,-9.754327,-8.716832,5.616896,8.975087,-6.761953],[4.824179,3.719455,-6.739807,-5.352073,-6.065217,-8.241893,-2.701793,-9.640806,-7.043138,-1.845292,0.071950,6.273799,0.591342,5.689155,1.699810],[2.291453,-2.698908,2.138409,3.687884,-7.187441,2.013171,3.563732,-3.425832,7.825592,1.013870,9.899009,-6.047192,-3.651739,1.174457,-7.631449],[3.417913,1.119799,-3.900238,-1.818171,-6.248317,-0.548184,-2.962636,-2.557258,0.551096,4.297841,3.442156,5.618011,8.947967,-8.155431,-5.386146]]], dtype = "float64")#candidate|4183|(7, 11, 15)|const|float64
var_4184 = relay.var("var_4184", dtype = "float64", shape = (7, 11, 15))#candidate|4184|(7, 11, 15)|var|float64
bop_4185 = relay.minimum(const_4183.astype('float64'), relay.reshape(var_4184.astype('float64'), relay.shape_of(const_4183))) # shape=(7, 11, 15)
func_2056_call = mod.get_global_var('func_2056')
func_2060_call = mutated_mod.get_global_var('func_2060')
var_4202 = relay.var("var_4202", dtype = "int8", shape = (702, 2))#candidate|4202|(702, 2)|var|int8
call_4201 = relay.TupleGetItem(func_2056_call(relay.reshape(var_4202.astype('int8'), [9, 12, 13]), relay.reshape(var_4202.astype('int8'), [9, 12, 13]), relay.reshape(var_4202.astype('int8'), [9, 12, 13]), ), 1)
call_4203 = relay.TupleGetItem(func_2060_call(relay.reshape(var_4202.astype('int8'), [9, 12, 13]), relay.reshape(var_4202.astype('int8'), [9, 12, 13]), relay.reshape(var_4202.astype('int8'), [9, 12, 13]), ), 1)
uop_4205 = relay.asinh(var_4184.astype('float32')) # shape=(7, 11, 15)
bop_4219 = relay.multiply(var_4184.astype('float32'), relay.reshape(bop_4185.astype('float32'), relay.shape_of(var_4184))) # shape=(7, 11, 15)
output = relay.Tuple([call_4201,var_4202,uop_4205,bop_4219,])
output2 = relay.Tuple([call_4203,var_4202,uop_4205,bop_4219,])
func_4226 = relay.Function([var_4184,var_4202,], output)
mod['func_4226'] = func_4226
mod = relay.transform.InferType()(mod)
var_4227 = relay.var("var_4227", dtype = "float64", shape = (7, 11, 15))#candidate|4227|(7, 11, 15)|var|float64
var_4228 = relay.var("var_4228", dtype = "int8", shape = (702, 2))#candidate|4228|(702, 2)|var|int8
output = func_4226(var_4227,var_4228,)
func_4229 = relay.Function([var_4227,var_4228,], output)
mutated_mod['func_4229'] = func_4229
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4631 = relay.const([[[-5,-2,-2,-4,-1,-7,8,6,-1],[-4,2,-2,8,-7,-6,-8,5,-3],[-6,9,9,-4,9,4,6,6,3],[-6,10,7,-8,-6,-6,1,5,1],[-5,2,6,5,-5,9,6,10,-1],[-1,-3,-1,5,10,9,5,-6,-9],[2,-4,2,4,9,4,-10,-8,-2],[-1,8,-9,3,-2,-1,-5,2,10],[3,3,-6,3,-4,9,9,-4,-1],[3,-9,7,3,-2,1,2,-6,9],[2,9,4,-3,-10,-7,2,-7,4],[-2,5,-5,-8,2,10,7,3,1],[6,8,2,6,-7,6,8,10,2],[10,2,3,3,-7,5,-4,1,8],[-1,-7,9,10,1,-1,-7,2,-2]],[[3,-4,4,8,4,-9,-1,7,9],[-3,-3,2,7,6,-1,6,-6,4],[-2,5,2,-8,-6,-2,1,5,8],[-10,9,6,-4,5,3,-9,4,10],[-10,8,3,3,3,-10,9,10,3],[9,-8,-9,-6,5,2,5,-6,-10],[-2,3,-4,8,2,-1,-4,4,5],[-1,10,10,-3,-4,5,-10,-8,4],[-7,-5,-10,3,9,4,-1,-6,4],[2,8,-8,1,-1,10,-3,8,5],[-8,-2,6,-2,4,7,-1,-5,7],[5,-3,9,4,10,1,1,-4,6],[-10,8,-6,2,-3,8,4,8,-2],[1,-8,-9,6,8,-3,-3,-3,-9],[-5,-6,-1,10,10,1,4,9,2]],[[-1,-7,2,3,3,4,7,-4,-10],[9,-8,-8,4,-2,-4,-10,7,-5],[-9,2,-6,-5,-8,6,-2,7,-6],[3,-5,-5,-1,7,4,5,-2,-5],[-5,-1,-7,-2,4,3,2,-1,10],[9,1,-7,8,8,1,8,2,-3],[-10,10,-4,-5,-6,7,-2,-7,-2],[10,6,-2,9,-5,1,10,2,-5],[-10,3,9,-3,-6,-6,5,-2,3],[-10,-4,-5,-4,6,2,2,-4,-1],[-7,-3,-3,5,8,10,1,-6,-6],[10,4,6,1,-2,-7,7,-5,8],[3,9,1,3,-9,7,-7,-5,-6],[9,-1,2,3,-1,-2,-10,4,-6],[-7,1,5,-1,-6,5,7,1,6]],[[7,7,-8,9,-5,7,2,-8,10],[-10,10,-9,-1,-9,-6,10,-4,1],[5,2,-7,-1,3,-3,-5,-5,-2],[-9,1,-7,-3,-2,3,1,-7,8],[-1,4,-8,-8,9,-7,-10,-6,-4],[-9,10,-4,-7,1,-7,6,7,2],[7,8,5,-9,-4,7,-7,-5,-8],[-10,-5,6,1,1,-4,-5,5,8],[-1,-5,1,-2,-8,5,-9,10,-7],[7,-10,6,-1,4,-4,-6,-9,-1],[4,-7,2,8,-9,7,-5,-2,5],[7,-10,-4,3,-1,-2,3,8,8],[-3,3,-5,6,7,2,-9,-9,-2],[-3,-4,7,7,-4,1,-6,8,-6],[2,-10,-1,2,-1,-7,4,8,-4]],[[-6,7,5,9,10,-1,-10,-8,1],[-5,1,5,-9,-8,9,-5,5,2],[-8,3,10,-6,-6,-1,6,-1,-1],[5,-5,10,8,-6,7,-3,9,-5],[-10,9,5,-5,7,-8,-2,10,-9],[-1,8,-8,-7,10,-8,7,5,-4],[-8,-1,-4,-3,3,2,-6,9,-2],[8,9,-7,2,7,-10,8,-9,-2],[10,-9,-1,-5,6,2,2,-9,-8],[9,10,7,-6,-7,4,10,-5,6],[-2,4,6,9,-3,-10,5,-3,3],[7,5,-6,3,2,7,-5,-1,-8],[-4,7,-5,10,-4,7,1,1,-7],[-4,5,2,3,2,8,-3,6,10],[4,-3,1,10,-3,-9,-9,5,-10]]], dtype = "uint16")#candidate|4631|(5, 15, 9)|const|uint16
var_4632 = relay.var("var_4632", dtype = "uint16", shape = (5, 15, 9))#candidate|4632|(5, 15, 9)|var|uint16
bop_4633 = relay.bitwise_and(const_4631.astype('uint16'), relay.reshape(var_4632.astype('uint16'), relay.shape_of(const_4631))) # shape=(5, 15, 9)
const_4650 = relay.const([[[8,5,-4,-8,6,5,-7,-4,-1],[-10,-4,2,-1,-9,-2,-2,-10,4],[5,6,1,-7,-10,-1,9,7,2],[-1,8,8,10,-2,-7,6,-8,5],[4,10,-10,7,2,3,7,-9,-4],[5,-6,-6,-3,7,7,-1,-2,4],[-1,3,5,9,10,7,6,-7,8],[7,8,-3,8,5,-4,-5,-10,-10],[4,8,-9,5,-6,-10,-8,8,-5],[-10,-6,4,-3,-6,-7,7,8,-3],[-10,-4,3,-1,-3,6,1,-10,2],[-6,10,6,-10,9,10,-7,-2,-5],[7,7,-6,-7,-10,3,-10,5,-2],[-9,5,4,-2,6,-4,-1,8,2],[-1,-2,-7,-1,7,-8,8,-3,7]],[[-10,8,3,8,6,9,1,-8,-1],[1,1,7,-7,1,9,7,7,7],[1,3,1,-5,4,-7,-6,6,-6],[-1,9,3,9,9,-9,-5,2,-6],[-2,5,-4,-2,3,-10,-2,-4,-4],[-2,8,7,10,8,2,4,6,-1],[-6,-1,-10,9,-3,-4,9,7,7],[-5,-8,10,-8,3,6,4,-6,8],[-5,7,-10,-4,6,4,-9,-2,-5],[-8,-5,-9,-4,2,6,-5,8,1],[-2,-5,-10,4,2,-6,-8,-10,-5],[5,-1,-1,-6,-10,-8,-10,-7,1],[-4,7,-10,-2,9,-1,-10,6,-1],[10,3,2,2,4,-7,-9,9,-8],[10,7,-2,4,3,5,6,3,-7]],[[5,-5,3,5,4,9,-4,9,-10],[8,-5,3,8,7,-3,4,-6,-6],[-2,2,-4,5,-1,9,-7,3,-9],[4,-10,-7,-7,-8,2,1,-4,10],[-3,-7,-1,-4,-3,-10,5,-10,-7],[7,-1,-7,8,9,-1,9,-3,-6],[1,1,-9,8,9,9,8,9,1],[-2,-4,-9,9,-6,-6,-5,4,-3],[-10,-7,9,-6,3,6,-1,-3,1],[-9,3,1,2,6,-3,-9,8,-2],[3,7,3,-2,-4,-3,-8,-5,10],[10,-1,7,3,-7,-1,1,-8,2],[2,10,-10,2,5,-8,-1,-8,5],[8,-1,-1,5,6,8,7,-3,-7],[7,-10,-5,1,7,10,-5,9,3]],[[-8,-2,4,-4,2,-5,8,-8,-6],[7,3,-5,7,3,-7,6,7,-4],[7,-9,5,10,7,4,-5,9,6],[-10,7,8,2,-1,-1,-1,3,7],[-5,1,-7,3,5,-9,-9,3,4],[10,-5,-8,-6,-5,8,-6,1,5],[2,1,2,-10,10,-5,-5,4,-5],[-6,-9,9,5,2,-3,-7,7,-4],[-9,-9,8,-3,8,4,-10,-6,3],[8,-1,5,9,10,-1,4,1,-7],[5,3,-9,-9,-7,-8,10,-10,8],[4,-7,-3,1,6,-9,2,-5,1],[3,-3,-5,-3,-6,-8,6,4,-8],[-4,4,-2,5,9,8,5,10,-4],[-8,-1,-7,1,-3,-9,-1,2,4]],[[-10,-6,8,9,-7,-1,5,5,-4],[-7,8,-1,2,1,-9,8,4,6],[-9,-5,-5,7,-6,8,-9,-6,-6],[5,8,4,2,5,-7,10,-8,-4],[3,-3,-6,-8,5,-1,8,-10,3],[-2,-5,1,-9,-8,5,-2,-5,-7],[7,7,7,4,5,2,10,-3,2],[-9,-4,-10,10,9,-8,-8,2,-6],[5,-4,7,-8,-9,-4,-4,2,1],[-1,3,-6,-6,5,-10,-7,-2,-5],[7,6,4,-7,-2,-6,-2,-3,9],[-5,6,5,2,10,4,-2,9,-7],[7,-1,2,1,-6,-8,-6,10,-4],[5,-6,9,-4,-1,1,6,-1,-7],[6,-6,4,7,-10,9,3,-1,3]]], dtype = "uint16")#candidate|4650|(5, 15, 9)|const|uint16
bop_4651 = relay.greater(var_4632.astype('bool'), relay.reshape(const_4650.astype('bool'), relay.shape_of(var_4632))) # shape=(5, 15, 9)
output = relay.Tuple([bop_4633,bop_4651,])
output2 = relay.Tuple([bop_4633,bop_4651,])
func_4654 = relay.Function([var_4632,], output)
mod['func_4654'] = func_4654
mod = relay.transform.InferType()(mod)
var_4655 = relay.var("var_4655", dtype = "uint16", shape = (5, 15, 9))#candidate|4655|(5, 15, 9)|var|uint16
output = func_4654(var_4655)
func_4656 = relay.Function([var_4655], output)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4882 = relay.const(-5, dtype = "uint16")#candidate|4882|()|const|uint16
const_4883 = relay.const([[[4,-8,9,-7,3,-8,6,-9,-2,-9,-6,-8],[10,-4,7,-4,1,5,-4,-2,10,-9,-5,1],[5,4,4,10,7,4,7,6,10,7,4,10],[1,-8,-10,-6,8,6,-1,10,10,3,-2,5],[-10,5,-4,-8,6,1,-7,-3,-8,-9,-7,10],[-4,5,2,7,4,6,1,-1,1,5,1,-5],[6,2,4,1,5,-4,-5,10,5,7,1,-4],[-2,-10,-6,-5,-10,6,-7,10,2,-10,6,-8],[6,-8,-5,-1,1,9,-8,-10,1,2,4,1],[-7,4,-1,-4,-8,-5,-7,10,-8,5,-5,-4],[-2,6,8,1,8,-9,-8,7,-9,10,9,-4]],[[-1,4,-6,4,-5,-6,-8,10,-2,5,4,-9],[4,-9,-1,9,1,-8,2,-5,-2,1,7,6],[-10,1,-2,-9,2,-9,-10,-5,-2,6,-4,-10],[-1,6,2,-9,-2,-10,-1,-1,6,3,8,5],[-10,-3,-3,5,-6,3,-3,-10,-1,9,9,6],[-2,1,9,-10,-8,-5,10,4,1,1,10,-8],[4,-4,9,-10,10,-1,-9,8,-7,-8,-5,2],[4,1,-9,-6,8,7,1,-10,-1,8,3,-9],[8,-7,4,8,-3,1,-8,4,-6,-5,10,-5],[-6,5,8,-10,-3,-9,6,-4,-6,2,1,-2],[-9,-3,-2,-4,-3,8,2,10,-4,-2,-8,-3]],[[1,-10,3,9,-9,-3,-1,7,-5,-7,-2,-2],[-8,9,1,2,-9,-6,4,-2,-6,-4,-1,2],[6,3,-6,6,-9,2,9,6,8,-8,-7,-7],[-7,-1,2,6,-3,-5,4,-5,-8,-7,-10,-5],[-4,3,5,-4,9,-3,-1,8,-8,4,-6,-6],[-5,3,5,4,-1,1,-6,-10,-2,-5,-2,8],[-8,1,-3,-10,10,-4,1,4,-6,2,10,7],[5,-7,-7,-6,-9,-10,-3,-1,-6,-10,4,1],[-9,-1,4,-2,-2,-7,-2,-3,-9,-3,5,-7],[-8,8,-5,3,-3,-4,4,8,-3,-4,-8,-7],[-10,-9,-2,-6,7,2,2,-5,-10,1,-3,10]],[[4,2,-1,-8,7,7,-6,-10,6,5,7,-2],[7,3,-4,7,-8,-1,7,-3,-7,-4,3,5],[9,-7,8,-5,5,-6,-2,-1,1,3,-1,2],[7,10,1,-9,-3,-7,8,-7,-2,5,7,8],[6,-6,6,-5,-4,-2,8,5,8,6,6,10],[-8,5,1,-3,-3,-5,7,-3,-5,-7,-4,8],[-6,9,-8,3,-6,-3,-2,-7,7,5,2,-6],[10,-1,6,8,4,8,-10,1,-9,-6,-5,5],[5,-8,5,5,7,-2,7,-9,-1,6,5,-9],[4,-5,-8,-10,8,1,4,-1,-6,-6,-4,6],[1,9,1,-10,3,3,4,6,3,-7,7,-8]],[[10,-6,8,-10,-5,-4,-6,3,-2,5,-2,-9],[-10,2,6,-10,3,-1,-9,-1,-1,-3,1,-10],[-4,2,8,1,-10,7,10,-2,-3,-5,5,7],[10,5,-7,8,-10,9,2,5,-2,5,10,-6],[-10,5,4,-1,5,-10,1,-6,-6,8,-3,-7],[-7,-7,-2,2,-4,7,-1,4,4,-8,2,5],[-9,4,-6,-6,-7,-10,6,1,8,-7,8,-5],[-7,-7,-9,5,-5,-9,-3,-6,8,9,7,-5],[10,8,-5,-2,7,1,4,-3,6,2,7,-8],[-3,10,-7,-8,8,6,-8,6,-10,3,-5,-4],[8,-10,3,9,-7,5,3,2,9,5,-8,3]],[[1,1,2,-7,-1,-3,-7,8,3,-7,-9,8],[-8,-7,7,4,6,4,-1,8,9,6,-6,-9],[10,-5,-6,-10,9,3,-7,-6,4,-3,-2,-7],[-4,5,7,-1,10,9,1,2,-5,8,2,7],[1,-1,2,-3,10,8,-4,6,7,9,3,9],[-6,1,8,-4,-7,3,-2,8,6,9,7,1],[-1,3,4,3,9,-8,2,-8,-6,10,9,7],[-4,-3,-4,-6,-7,-2,-10,-2,10,6,1,-5],[-6,4,3,-9,10,9,-6,-2,5,-5,8,6],[9,-2,-7,-7,1,6,-5,-2,-7,-10,7,10],[-5,-1,-2,2,10,-2,-2,9,2,-7,4,-3]],[[-2,6,4,-5,10,-3,4,4,1,10,8,-7],[9,-9,-5,4,5,9,5,-10,10,9,-9,8],[10,-1,9,9,2,-1,-8,4,-6,-3,-7,-7],[-6,-10,9,3,6,-6,-2,5,2,-10,-4,6],[-9,10,-1,4,-3,-2,-2,10,9,-5,2,4],[7,-6,2,10,10,7,8,9,-6,2,4,-6],[-9,-3,-10,-4,-2,-9,-2,-6,-8,2,-4,7],[-1,-6,10,-9,4,1,10,-2,-6,7,-9,-8],[3,2,4,7,-8,-4,6,9,-7,3,-6,10],[-5,9,7,2,-1,9,-6,1,-1,2,8,7],[-2,3,-7,-9,7,8,-9,-5,-7,-6,-1,6]],[[-3,9,-2,9,9,1,4,-10,-9,-6,-9,9],[-7,6,5,2,-10,1,9,5,1,-4,5,-5],[-2,-3,4,-6,8,-9,-4,10,3,-8,-1,-10],[9,5,-10,8,-3,-5,-2,8,-3,-4,-9,4],[8,-4,-5,9,-2,5,7,6,-4,-7,-1,8],[-3,4,-9,-5,10,-5,-6,8,1,2,9,-7],[8,-1,8,-5,-4,-4,5,1,9,-2,-10,-4],[6,-6,3,-7,-7,10,-8,8,-1,-6,-2,-4],[10,-5,-6,1,7,6,3,1,-2,5,7,3],[-6,6,3,-8,-8,5,-3,8,6,-10,-7,-8],[5,10,-9,-9,1,2,7,-9,4,-1,-10,9]],[[-10,4,-3,8,-6,-7,3,-9,-3,-8,-4,7],[1,-6,-4,-7,-7,6,1,-7,4,1,2,-2],[4,7,-7,5,2,-8,-8,5,-6,-5,-4,-4],[-8,8,7,-7,1,9,10,-7,5,1,2,9],[6,5,-8,-2,5,10,-1,-5,3,-2,9,-5],[9,-8,-1,-1,2,-9,-6,-1,-1,5,8,-4],[-7,3,-10,-8,4,1,4,-2,-9,-1,2,-6],[-2,4,-4,-2,9,-6,-6,9,2,-5,4,-5],[2,8,7,-6,-6,1,-3,10,2,10,-10,-8],[-10,9,2,-9,-9,8,-10,6,-7,7,-4,1],[-4,-2,1,-9,4,-9,3,1,-4,9,-5,1]],[[6,3,8,5,-6,-8,-8,-2,-4,-9,8,10],[-8,5,6,7,-5,-1,6,-2,-3,-1,-7,1],[3,-10,-1,10,-9,-5,10,-6,-4,-7,1,3],[10,-4,7,8,-7,-1,-9,8,-6,3,-6,-3],[6,-1,9,-10,7,6,1,-4,-4,-7,-5,-1],[9,-1,2,3,3,-4,7,-1,-10,-8,3,-9],[8,8,-2,-6,-2,4,-10,2,1,6,-10,2],[-6,-2,2,-3,-9,4,9,-2,9,-3,-5,6],[10,5,1,-1,8,3,7,2,7,7,8,-5],[5,9,4,7,-7,6,-8,2,-2,-7,3,5],[5,-5,1,-3,-9,-8,6,-7,-8,1,-1,1]],[[10,-2,-7,-4,-9,9,-1,8,-3,-3,2,3],[2,-5,9,-6,-5,-3,-3,7,7,2,6,-6],[-6,9,-8,9,8,-2,-1,-7,5,9,8,2],[1,1,-5,8,7,-1,-2,4,-6,7,5,4],[-4,1,-8,-7,-6,8,-7,-3,4,9,6,-3],[10,-2,4,6,-8,1,-10,8,-7,7,1,-8],[6,10,-1,-8,5,-7,-5,-8,-1,-2,-9,5],[5,2,4,10,9,3,4,-2,-9,-7,-3,-9],[6,-3,10,-3,-2,2,4,5,3,-3,9,-6],[-6,5,2,4,-3,-4,-9,-1,-9,8,-6,-7],[2,6,9,10,-6,5,-6,5,9,6,4,8]],[[10,-9,10,-5,-9,-4,2,-4,-8,6,9,5],[1,-6,9,-10,-2,5,-6,4,3,4,1,-6],[6,-1,3,2,9,1,-4,9,2,7,8,3],[-9,-7,-4,7,6,6,-8,-5,6,7,1,-5],[-1,10,6,-1,2,-7,-2,8,-6,9,-3,-3],[2,-1,7,5,10,9,1,-5,9,-1,8,-1],[4,-8,-4,-5,2,-1,-2,7,2,-10,-8,-7],[-6,-10,-8,9,-10,-8,-10,3,1,-9,10,6],[5,-4,2,-10,8,5,2,9,-10,8,-3,2],[-7,-6,-10,-7,-2,-8,2,5,9,-7,3,-4],[-6,5,-5,1,9,-9,4,3,-8,-10,-8,-10]]], dtype = "uint16")#candidate|4883|(12, 11, 12)|const|uint16
bop_4884 = relay.maximum(const_4882.astype('uint16'), const_4883.astype('uint16')) # shape=(12, 11, 12)
output = bop_4884
output2 = bop_4884
func_4887 = relay.Function([], output)
mod['func_4887'] = func_4887
mod = relay.transform.InferType()(mod)
output = func_4887()
func_4888 = relay.Function([], output)
mutated_mod['func_4888'] = func_4888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4891 = relay.var("var_4891", dtype = "float64", shape = (5, 15, 5))#candidate|4891|(5, 15, 5)|var|float64
uop_4892 = relay.log10(var_4891.astype('float64')) # shape=(5, 15, 5)
uop_4899 = relay.cos(uop_4892.astype('float64')) # shape=(5, 15, 5)
output = relay.Tuple([uop_4899,])
output2 = relay.Tuple([uop_4899,])
func_4902 = relay.Function([var_4891,], output)
mod['func_4902'] = func_4902
mod = relay.transform.InferType()(mod)
mutated_mod['func_4902'] = func_4902
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4903 = relay.var("var_4903", dtype = "float64", shape = (5, 15, 5))#candidate|4903|(5, 15, 5)|var|float64
func_4902_call = mutated_mod.get_global_var('func_4902')
call_4904 = func_4902_call(var_4903)
output = call_4904
func_4905 = relay.Function([var_4903], output)
mutated_mod['func_4905'] = func_4905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4887_call = mod.get_global_var('func_4887')
func_4888_call = mutated_mod.get_global_var('func_4888')
call_4951 = func_4887_call()
call_4952 = func_4887_call()
output = call_4951
output2 = call_4952
func_4962 = relay.Function([], output)
mod['func_4962'] = func_4962
mod = relay.transform.InferType()(mod)
output = func_4962()
func_4963 = relay.Function([], output)
mutated_mod['func_4963'] = func_4963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4962_call = mod.get_global_var('func_4962')
func_4963_call = mutated_mod.get_global_var('func_4963')
call_4972 = func_4962_call()
call_4973 = func_4962_call()
func_2056_call = mod.get_global_var('func_2056')
func_2060_call = mutated_mod.get_global_var('func_2060')
var_4981 = relay.var("var_4981", dtype = "int8", shape = (18, 78))#candidate|4981|(18, 78)|var|int8
call_4980 = relay.TupleGetItem(func_2056_call(relay.reshape(var_4981.astype('int8'), [9, 12, 13]), relay.reshape(var_4981.astype('int8'), [9, 12, 13]), relay.reshape(var_4981.astype('int8'), [9, 12, 13]), ), 0)
call_4982 = relay.TupleGetItem(func_2060_call(relay.reshape(var_4981.astype('int8'), [9, 12, 13]), relay.reshape(var_4981.astype('int8'), [9, 12, 13]), relay.reshape(var_4981.astype('int8'), [9, 12, 13]), ), 0)
func_1864_call = mod.get_global_var('func_1864')
func_1869_call = mutated_mod.get_global_var('func_1869')
const_5003 = relay.const([-1.543726,-7.281984,-5.021514,9.138668,3.420186,9.307659,-7.922940,-9.959587,6.302856,-1.954207,2.676221,-5.298115,9.986063,4.846483,8.042838,-3.127371,2.105455,1.319456,-6.380453,-9.647064,-0.098793,-4.338494,-4.435015,8.595293,-2.120398,7.424432,2.586503,3.967814,1.199656,2.093545,-3.524831,9.489180,-5.406944,7.825444,7.038197,5.624501,2.559324,-2.947527,-2.454314,-4.934885,0.089010,-6.320568,1.152284,3.192077,-1.401161,-7.071255,0.507193,-0.310107,-4.559221,-2.696401,4.503111,8.375019,0.174415,-8.791783,-6.469344,-5.670035,-2.966025,-8.840026,-8.612509,5.273225,9.773248,3.933505,1.070241,-8.529662,-6.159868,8.669303,-5.711600,-0.842125,5.902447,5.896299,0.651158,6.359585,-4.308186,-5.708588,-3.225471,7.225565,6.042983,-0.932268,3.071344,-4.369000,2.645924,0.199530,-9.453090,0.253131,9.824799,4.766494,2.774557,-5.025186,0.985267,-2.966972,-0.055673,7.095057,7.427199,-1.084736,-2.276751,-9.084740,4.003407,-9.983247,8.087292,5.639629,-9.672342,-5.559818,5.175878,-6.181650,1.993903,-8.404799,-0.862034,4.125261,1.188086,-2.681571,-0.463979,4.815123,4.733574,1.125663,-7.184148,1.242490,-5.266584,-2.269574,-8.392252,-6.375926,1.733767,-2.768484,-1.376879,5.293723,2.820802,2.961555,-6.372872,4.602071,-6.976961,1.300849,7.996456,-3.251655,-5.161211,-7.610574,3.877978,-0.497253,3.595037,-9.137989,-4.366898,-2.136527,-9.955828,6.789463,-4.444536,-6.494490,8.763794,3.741470,-2.786680,-0.431476,-2.196583,1.899785,0.279273,6.886141,-6.088725,-6.135365,1.602485,5.172972,8.755465,1.951347,0.682901,-8.770901,0.622401,-2.352151,9.320229,-8.594236,5.110063,1.810249,6.882599,1.041507,3.902209,-7.663444,-3.950250,-5.546323,-4.902192,-4.042855,0.925920,-1.517691,-4.386920,-1.471850,-4.062388,-3.824856,-6.829679,-1.473909,-4.820782,-7.555584,-2.119088,-3.728029,-0.620952,-2.994079,-1.154326,-8.384054,8.534803,-3.316150,2.621965,-7.871949,6.738290,8.001679,-0.572784,4.639633,-1.333102,-1.410332,-4.259041,3.930058,3.460777,1.780241,-1.006340,7.703837,3.214748,-6.070972,-0.107067,-6.620112,9.126250,-7.542721,7.645933,-8.142663,2.159532,-9.037097,7.239743,-0.903072,4.485596,8.359055,5.122215,-9.533509,-9.937030,-0.993011,7.648920,0.377698,-8.596954,-3.234125,9.033962,2.423433,-2.752088,3.662355,-8.336890,-6.420481,5.489182,9.490488,5.927430,6.114541,-6.035603,-4.348084,-2.239231,-8.525364,5.575379,8.305220,2.554172,6.126983,-9.402136,-9.621477,-8.311642,7.354082,-0.156907,0.804413,-3.151282,1.071374,-9.149377,-1.442497,7.232087,2.912981,4.989985,-6.370244,-3.477426,-6.876828,-6.446277,3.153017,-1.627594,-7.573471,3.342297,-3.138425,6.098370,8.081896,7.685830,-8.905708,-2.038248,-7.377718,-5.735877,9.318893,-9.630042,-6.051852,-6.057454,-3.889923,-4.759062,3.997915,-9.036618,8.086236,7.560623,7.775280,-6.965397,-0.840943,2.677999,-0.953596,5.038204,-1.879356,-7.437732,-0.287981,-0.100238,1.644701,4.595294,6.247753,-2.269995,0.728894,4.339973,-3.172500,1.792739,-4.141951,0.802775,-7.944217,-0.352785,9.927573,1.754341,4.117231,-2.411549,-6.972695,3.230386,6.832259,-6.727183,-5.314687,7.777185,0.182202,6.620357,6.120032,6.763356,2.613030,7.131694,-2.205808,-2.770384,-3.665597,-7.724125,-0.697922,-7.205247,4.124529,6.422493,-2.533418,-9.526214,3.784416,-4.402903,3.802120,-9.977113,2.987774,2.742496,1.349037,-3.912590,-5.272230,-8.410643,-5.736526,-8.006690,-9.469743,5.751954,-0.211751,-9.158548,1.539307,-2.970659,-7.529072,9.375933,-0.303746,7.399861,-2.386892,-6.725567,-1.119854,-1.008583,5.056799,-9.897649,-1.370541,2.497775,-4.579274,-7.106463,-5.510869,-4.036404,7.313977,-3.715826,-4.637687,7.306504,8.469256,6.820520,2.593698,5.924571,-2.695751,-7.749092,4.211806,1.605178,1.328350,-5.882655,-6.937848,5.736405,-8.239838,-1.637041,5.103019,-2.273888,1.754794,2.111464,5.730946,7.185434,-7.519119,-7.657395,6.617611,4.251342,2.834002,-7.232591,-6.840721,1.945009,-5.813622,9.016315,-4.858471,-7.401276,9.778295,-6.392602,-6.079848,-3.930718,5.466633,4.641304,-4.524542,1.205761,-3.364318,-9.454770,9.497763,1.919506,4.201534,-5.155174,-9.040899,3.926794,-0.041219,-1.471492,7.463040,5.822267,4.873130,-3.180724,-8.607442,4.500911,5.744530,0.491155,-5.095571,-1.936897,-3.446136,4.171713,-8.616069,-8.662032,-9.126193,1.330388,-1.472131,-5.320883,0.313119,0.132790,-3.788354,-5.709311,-9.050856,3.655502,8.454070,-5.241097,-1.735992,-4.904577,-8.370903,1.890479,-0.354408,2.407531,3.831080,-9.679535,-9.586614,-2.681598,5.787906,-5.726192,2.378090,-9.182681,-6.653629,-6.462428,-9.639685,7.675204,2.095907,0.751662,6.678822,-9.449879,-7.685687,-6.208885,1.830435,1.798257,9.903444,-7.624304,0.705813,4.291996,-0.529953,-8.955218,3.543807,7.934795,-6.484454,-9.030291,2.886020,7.911753,5.364097,-6.420425,-1.226552,5.548382,-4.859609,-1.312808,-7.526357,2.802706,3.570578,5.712955,1.088955,-6.528779,0.591637,4.423334,7.355514,-8.979126,-4.908858,6.942019,1.079748,2.867210,4.613475,0.592014,2.056435,-2.751358,6.409413,2.077175,-6.312770,-5.748560,-0.841618,9.936091,-6.145756,1.121170,-0.699732,-6.091804,2.022425,4.308246,6.210578,5.226543,4.973037,-8.465747,9.578710,2.740959,9.766693,-3.980073,-2.745047,8.954355,0.737982,6.079762,-6.459493,7.535079,6.747076,-4.589613,-5.363356,-7.823432,4.869242,-5.536269,-2.159774,-0.539329,2.663715,-1.300586,-9.107522,9.142761,-3.812982,-4.060952,-2.430825,-3.588519,-3.712966,-6.874622,-0.795910,3.271568,6.651093,1.004652,0.227009,8.917770,-9.524875,-8.203314,-0.997185,-9.095741,6.542664,2.744892,6.345831,0.882925,-3.892982,-3.174062,-1.345586,-8.789587,5.268666,-6.514505,9.322701,7.402809,2.155931,6.506579,4.253670,-4.672973,-0.535136,-8.943175,3.101392,2.293856,-6.804810,2.169927,5.421675,-2.193703,4.099467,-2.473413,7.391291,-8.347278,1.391644,-1.083413,6.863379,5.071637,-1.106936,7.661015,-4.810272,9.997827,-3.862101,2.319986,-6.676459,-5.335656,-2.999705,-6.003051,7.682628,-3.838948,-8.688771,4.517044,9.338350,9.185058,4.446756,-8.104366,-3.654098,-6.686837,-1.809598], dtype = "float32")#candidate|5003|(616,)|const|float32
var_5004 = relay.var("var_5004", dtype = "float32", shape = (384,))#candidate|5004|(384,)|var|float32
var_5005 = relay.var("var_5005", dtype = "float32", shape = (112,))#candidate|5005|(112,)|var|float32
call_5002 = relay.TupleGetItem(func_1864_call(relay.reshape(const_5003.astype('float32'), [11, 8, 7]), relay.reshape(var_5004.astype('float32'), [6, 64]), relay.reshape(var_5005.astype('float32'), [112,]), ), 0)
call_5006 = relay.TupleGetItem(func_1869_call(relay.reshape(const_5003.astype('float32'), [11, 8, 7]), relay.reshape(var_5004.astype('float32'), [6, 64]), relay.reshape(var_5005.astype('float32'), [112,]), ), 0)
bop_5012 = relay.maximum(var_4981.astype('uint8'), relay.reshape(call_4980.astype('uint8'), relay.shape_of(var_4981))) # shape=(18, 78)
bop_5015 = relay.maximum(var_4981.astype('uint8'), relay.reshape(call_4982.astype('uint8'), relay.shape_of(var_4981))) # shape=(18, 78)
bop_5020 = relay.logical_and(var_4981.astype('bool'), relay.reshape(call_4980.astype('bool'), relay.shape_of(var_4981))) # shape=(18, 78)
bop_5023 = relay.logical_and(var_4981.astype('bool'), relay.reshape(call_4982.astype('bool'), relay.shape_of(var_4981))) # shape=(18, 78)
uop_5030 = relay.atan(var_4981.astype('float32')) # shape=(18, 78)
func_3456_call = mod.get_global_var('func_3456')
func_3460_call = mutated_mod.get_global_var('func_3460')
var_5046 = relay.var("var_5046", dtype = "float64", shape = (30,))#candidate|5046|(30,)|var|float64
const_5047 = relay.const([[-1],[-2],[-6],[-3],[-3],[-2],[6],[4],[9],[2],[-9],[-2],[-5],[-4],[8],[5],[-6],[8],[-3],[6],[5],[-5],[-10],[-6],[-4],[-2],[-1],[-10],[3],[3],[5],[3],[-4],[-3],[10],[-7],[9],[-6],[2],[7],[4],[9],[-6],[-2],[-2],[-8],[-4],[8],[2],[6],[-1],[6],[4],[9],[4],[2],[-7],[-3],[-1],[-2],[1],[-9],[3],[-2],[-7],[4],[3],[9],[2],[5],[-6],[-5],[-9],[8],[7],[-10],[1],[5],[7],[8],[8],[-5],[4],[10],[4],[3],[4],[4],[8],[1],[3],[-4],[-3],[8],[-6],[3],[8],[9],[-3],[-9],[6],[-8],[-2],[2],[-6],[5],[-6],[-2],[10],[8],[-4],[-4],[-10],[6],[1],[10],[-7],[-8],[1],[-9],[4],[-4],[5],[-1],[6],[2],[2],[-4],[-8],[8],[8],[-5],[-6],[-2],[-4],[4],[4],[-8],[6],[5],[9],[-3],[3],[5],[-2],[9],[1],[-2],[8],[6],[4],[-9],[9],[-9],[-7],[6],[2],[-10],[1],[-4],[-8],[-10],[10],[8],[6],[9],[-3],[2],[8],[-7],[-4],[2],[6],[-10],[-9],[7],[-1],[8],[9],[-9],[-1],[8],[-9],[-8],[-10],[1],[-9],[1],[-6],[2],[7],[-3],[-6],[-10],[-1],[1],[9],[8],[10],[4],[-10],[-5],[7],[6],[-6],[9],[10],[4],[4],[-3],[4],[9],[-5],[-1],[2],[4],[-10],[2],[-2],[-1],[9],[-4],[3],[-4],[-3],[-6],[-3],[10],[9],[-3],[-7],[-4],[4],[6],[-4],[-6],[8],[-1],[9],[2],[4],[-7],[-10],[-7],[8],[-1],[-6],[4],[10],[-8],[9],[-9],[-6],[-10],[10],[7],[9],[-1],[2],[-9],[9],[-7],[-6],[7],[-3],[4],[10],[10],[6],[5],[3],[9],[7],[-10],[-9],[9],[-2],[3],[9],[6],[4],[5],[5],[-4],[-7],[-8],[10],[-10],[-7],[-3],[-1],[4],[-9],[1],[-6],[2],[-9],[6],[4],[7],[-8],[10],[10],[2],[-4],[8],[7],[9],[1],[-6],[1],[9],[-4],[-5],[4],[10],[5],[-9],[-1],[4],[7],[-1],[4],[-2],[3],[1],[5],[5],[-6],[10],[10],[-3],[9],[10],[4],[7],[6],[8],[9],[-6],[-10],[-8],[9],[-4],[2],[5],[3],[7],[-2],[4],[-10],[9],[-9],[7],[-9],[-2],[-2],[-3],[4],[3],[1],[-9],[6],[8],[2],[-3],[-3],[10],[1],[1],[2],[8],[4],[2],[9],[5],[5],[-6],[-2],[8],[6],[-10],[-6],[-2],[10],[9],[-7],[-4],[10],[-10],[-3],[-1],[-2],[1],[3],[10],[5],[-10],[-10],[9],[6],[-2],[5],[-5],[-3],[-4],[-3],[-7],[3],[-9],[-1],[6],[6],[-6],[6],[6],[3],[4],[-3],[-5],[-5],[5],[5],[3],[1],[-2],[8],[8],[-4],[10],[-10],[-4],[4],[3],[9],[2],[-8],[-4],[-10],[-10],[-8],[3],[10],[1],[6],[6],[10],[8],[-9],[9],[-8],[4],[1],[-8],[-4],[2],[-1],[-9],[8],[5],[-3],[-1],[2],[-7],[2],[-9],[-1],[6],[-10],[1],[-3],[7],[9],[4],[-5],[-3],[-1],[-3],[6],[4],[-6],[-10],[-5],[-8],[-3],[10],[-3],[-9],[-2],[-2],[-4],[-9],[-3],[-2],[10],[9],[-8],[-4],[-7],[9],[-3],[-5],[7],[-1],[-1],[-9],[-1],[-1],[-9],[-5],[8],[7],[-5],[10],[-5],[-2],[-9],[7],[5],[4],[4],[-10],[-10],[-1],[-6],[9],[2],[-2],[7],[9],[-3],[2],[-7],[8],[10],[7],[-5],[-9],[8],[7],[-8],[-9],[-10],[-7],[3],[1],[-6],[7],[-6],[7],[-7],[10],[-9],[-9],[10],[-2],[10],[-1],[2],[-1],[4],[10],[7],[-5],[-10],[-8],[5],[9],[8],[-5],[-5],[9],[8],[-8],[-7],[-5],[1],[3],[3],[-2],[8],[-10],[-10],[1],[8],[-6],[-2],[-10],[4],[3],[9],[4],[-5],[9],[-3],[-3],[-4],[8],[-3],[-4],[4],[5],[7],[-6],[-5],[4],[-7],[5],[3],[10],[-6],[-1],[-7],[6],[7],[-2],[-2],[-6],[-6],[9],[9],[5],[-2],[-6],[4],[-3],[10],[-3],[-4],[-6],[1],[-3],[-6],[-9],[9],[-4],[-1],[-4],[9],[8],[-7],[-6],[-6],[3],[-1],[2],[-6],[-2],[-5],[-7],[-1],[5],[-1],[-7],[-1],[6],[5],[-5],[4],[-2],[5],[-7],[-2],[-5],[2],[-1],[2],[6],[-5],[6],[7],[3],[7],[-4],[4],[-5],[3],[-1],[-3],[-10],[-8],[-9],[-9],[6],[8],[-9],[5],[9],[-8],[2],[-1],[2],[-1],[9],[-1],[10],[-3],[4],[1],[-5],[3],[6],[-6],[1],[-7],[7],[-1],[4],[-5],[-7],[-5],[8],[3],[-10],[-1],[7],[-9],[-3],[5],[-8],[-6],[-2],[5],[1],[10],[-4],[7],[3],[-3],[6],[7],[9],[6],[8],[5],[-6],[10],[-10],[-4],[3],[-10],[-1],[1],[9],[-8],[-10],[-10],[-3],[-3],[10],[9],[-9],[-3],[-2],[-1],[-3],[3],[10],[-1],[-10],[5],[5],[2],[-4],[1],[3],[9],[6],[2],[-9],[4],[7],[-7],[5],[-7],[-8],[-6],[-10],[3],[3],[9],[1],[-9],[-7],[7],[-5],[-9],[2],[9],[-5],[-2],[-9],[-8],[-9],[6],[-2],[-8],[-2],[-1],[8],[-7],[1],[-3],[-4],[-10],[-9],[2],[3],[10],[10],[3],[-10],[4],[-6],[10],[-3],[6],[3],[-8],[-4],[-5],[-1],[4],[8],[5],[9],[-7],[-9],[-10],[8],[-10],[9],[6],[7],[-8],[-2],[-7],[-4],[8],[-4],[-8],[-3],[5],[-10],[8],[7],[10],[5],[-7],[-1],[7],[-1],[-8],[-5],[5],[-3],[6],[9],[-9],[-8],[-8],[6],[2],[-5],[-6],[-5],[-2],[7],[-9],[10],[4],[8],[1],[-1],[8],[-1],[6],[-4],[9],[-7],[-8],[7],[-9],[3],[7],[-4],[7],[10],[3],[10],[5],[-8],[9],[7],[-3],[-4],[-9],[4],[7],[7],[-9],[4],[-5],[5],[10],[-9],[-7],[3],[-1],[3],[-9],[9],[-9],[-5],[8],[-8],[-3],[4],[1],[-7],[-5],[5],[5],[7],[10],[-2],[-8],[-6],[-1],[1],[3],[10],[-6],[-3],[6],[-7],[8],[4],[-7],[7],[-2],[8],[-9],[-6],[7],[4],[1],[-3],[8],[1],[8],[6],[9],[9],[-2],[5],[7],[-5],[10],[-9],[-1],[7],[6],[-8],[-8],[10],[-8],[-3],[-8],[-2],[1],[6],[5],[-4],[-5],[1],[7],[7],[-10],[10],[3],[-5],[8],[-5],[-2],[-1],[-6],[-9],[-8],[-5],[-8],[-8],[-6],[10],[7],[3],[4],[10],[-8],[10],[-4],[1],[8],[3],[4],[1],[-8],[-1],[-4],[-10],[5],[-3],[-3],[-10],[-2],[1],[3],[-7],[3],[-1],[10],[1],[10],[2],[-4],[-7],[8],[-7],[4],[10],[-10],[-1],[-2],[-6],[-10],[1],[6],[8],[5],[2],[-4],[8],[8],[1],[-3],[-10],[-3],[-5],[-1],[9],[5],[-3],[-4],[-9],[-3],[-10],[-9],[-7],[4],[-10],[10],[-9],[1],[9],[3],[3],[-9],[-9],[9],[4],[8],[-9],[4],[3],[-5],[-4],[-1],[9],[9],[3],[-7],[9],[7],[1],[-5],[-8],[-10],[-9],[4],[-2],[-3],[5],[1],[7],[3],[1],[-8],[-5],[8],[1],[-10],[-8],[9],[-5],[-9],[3],[3],[-7],[3],[6],[4],[5],[8],[9],[6],[1],[10],[-8],[-9],[1],[10],[-10],[-3],[9],[1],[-3],[1],[-8],[-7],[-4],[8],[1],[-9],[6],[-10],[5],[-2],[-2],[2],[-10],[-7],[7],[-2],[6],[2],[2],[-7],[8],[10],[3],[-3],[-9],[-3],[-10],[2],[-5],[5],[-6],[7],[-6],[-4],[-8],[1],[-7],[2],[-2],[-8],[9],[-4],[4],[9],[5],[-3],[10],[-5],[-10],[-5],[9],[4],[9],[-8],[10],[2],[7],[8],[-1],[3],[4],[-9],[8],[1],[2],[-6],[-3],[9],[-8],[-3],[-2],[10],[8],[-1],[7],[-5],[9],[-5],[9],[-5],[-5],[-3],[1],[2],[-6],[-8],[7],[-8],[-7],[4],[-10],[-5],[6],[-8],[-10],[-5],[3],[-3],[8],[4],[10],[4],[1],[2],[10],[2],[-8],[1],[-8],[8],[-3],[1],[1],[-10],[1],[6],[-7],[7],[-4],[-6],[9],[-4],[-4],[1],[-5],[8],[-2],[-6],[6],[3],[-2],[-9],[1],[9],[-6],[-10],[2],[10],[-3],[7],[-9],[-8],[7],[5],[9],[-1],[9],[2],[-5],[-7],[-5],[-6],[3],[10],[-8],[-3],[-4],[-10],[-4],[2],[-5],[6],[2],[-3],[-8],[-8],[7],[7],[-9],[-5],[-6],[3],[-1],[10],[-10],[-1],[-7],[8],[-5],[-6],[3],[-4],[-7],[2],[10],[4],[10],[-7],[-2],[8],[-1],[-6],[6],[-10],[9],[3],[-2],[-4],[-10],[7],[-6],[9],[8],[-6],[-2],[4],[-5],[-4],[8],[-3],[-1],[-9],[-5],[-6],[-1],[-8],[-5],[4],[-2],[-6],[7],[10],[10],[-3],[1],[5],[2],[7],[-9],[2],[-5],[9],[-5],[3],[-3],[4],[9],[-2],[-9],[7],[-8],[-3],[8],[-6],[2],[-7],[8],[9],[8],[5],[-3],[1],[-2],[-2],[5],[2],[-2],[4],[5],[-7],[1],[4],[-9],[-7],[4],[-8],[8],[10],[-10],[2],[2],[1],[-8],[-3],[6],[-10],[3],[8],[-6],[3],[-4],[9],[-10],[-1],[-1],[-8],[-6],[-6],[3],[-7],[-9],[-7],[10],[8],[-8],[-10],[-2],[4],[7],[-2],[10],[-1],[8],[-3],[7],[9],[-9],[-10],[-2],[7],[-9],[-2],[-5]], dtype = "uint64")#candidate|5047|(1440, 1)|const|uint64
call_5045 = relay.TupleGetItem(func_3456_call(relay.reshape(var_5046.astype('float64'), [1, 10, 3]), relay.reshape(const_5047.astype('uint64'), [2, 720]), relay.reshape(var_5005.astype('float32'), [112,]), ), 4)
call_5048 = relay.TupleGetItem(func_3460_call(relay.reshape(var_5046.astype('float64'), [1, 10, 3]), relay.reshape(const_5047.astype('uint64'), [2, 720]), relay.reshape(var_5005.astype('float32'), [112,]), ), 4)
func_1864_call = mod.get_global_var('func_1864')
func_1869_call = mutated_mod.get_global_var('func_1869')
call_5074 = relay.TupleGetItem(func_1864_call(relay.reshape(const_5003.astype('float32'), [11, 8, 7]), relay.reshape(var_5004.astype('float32'), [6, 64]), relay.reshape(var_5005.astype('float32'), [112,]), ), 1)
call_5075 = relay.TupleGetItem(func_1869_call(relay.reshape(const_5003.astype('float32'), [11, 8, 7]), relay.reshape(var_5004.astype('float32'), [6, 64]), relay.reshape(var_5005.astype('float32'), [112,]), ), 1)
bop_5078 = relay.divide(uop_5030.astype('float32'), relay.reshape(bop_5020.astype('float32'), relay.shape_of(uop_5030))) # shape=(18, 78)
bop_5081 = relay.divide(uop_5030.astype('float32'), relay.reshape(bop_5023.astype('float32'), relay.shape_of(uop_5030))) # shape=(18, 78)
func_3302_call = mod.get_global_var('func_3302')
func_3304_call = mutated_mod.get_global_var('func_3304')
call_5082 = relay.TupleGetItem(func_3302_call(relay.reshape(var_5005.astype('float32'), [112,])), 3)
call_5083 = relay.TupleGetItem(func_3304_call(relay.reshape(var_5005.astype('float32'), [112,])), 3)
func_4902_call = mod.get_global_var('func_4902')
func_4905_call = mutated_mod.get_global_var('func_4905')
const_5086 = relay.const([6.663755,-5.448076,9.126267,3.603250,0.146885,1.384290,1.798875,1.509561,0.023389,-6.346320,-1.224981,4.340963,-9.994983,-2.847721,-4.506263,0.019121,-4.040921,-5.298058,1.945935,3.080141,8.768930,-0.227967,-0.974430,-1.675872,-0.254417,-9.947934,0.290229,-3.450815,6.229568,7.218857,-3.351346,1.271526,-2.042845,-1.943327,7.057250,-6.285868,5.976919,7.310166,-9.931630,2.899354,6.047083,8.780532,0.647703,-2.394743,-9.681933,-1.855006,-6.481071,0.004507,6.274424,4.791591,-9.403523,-5.889230,-8.524640,0.599884,6.109982,1.516934,-4.912440,8.746438,7.188527,-1.717885,9.088052,-2.945560,-8.676156,-1.042865,-1.831589,-5.208525,-9.870338,-9.449253,6.738482,5.954448,-6.709639,0.695596,-9.803025,5.810506,-0.215444,4.912830,-6.921479,3.906580,-0.814422,4.132663,2.820603,9.236951,-0.184201,-8.448486,7.835448,-3.203174,9.765692,-1.034373,5.383503,7.026324,4.108931,4.840859,-3.394805,-8.170234,5.852970,7.869372,1.452820,-1.568910,-1.011159,6.450773,-0.594508,-1.955877,0.345926,4.029967,-9.176949,-2.301286,-8.704241,7.193078,2.429351,7.379563,4.851493,0.381963,8.178366,-9.067528,6.531883,1.227370,-7.160253,1.031120,-7.959167,-9.273391,7.266905,-8.099038,-3.014594,-4.092997,2.265015,-0.425481,9.615837,6.340576,8.212916,-5.585001,-8.684907,9.142483,1.060585,-2.194436,7.415178,-8.318238,-6.813353,-7.447320,5.708465,-5.593680,-3.809666,3.093500,-2.711855,-7.257220,3.949855,-0.172045,-5.473274,-7.907437,-2.394631,0.279976,8.934166,-5.792181,-7.434797,-6.690445,-0.206051,-0.786045,-4.145466,-4.655269,5.023214,-1.816554,7.923263,-8.806926,-7.071842,-0.261242,1.456603,9.744357,1.626136,-3.943643,-4.974562,0.486876,7.286962,-8.659956,-0.990261,2.191929,7.978624,-3.608024,-8.310234,3.860735,7.631959,-5.079415,4.115929,0.778656,2.528556,2.946635,-9.147301,-3.916683,-6.762571,3.730668,2.488080,-7.010591,6.236083,-7.863686,9.145738,-8.055024,9.037768,-4.269576,-6.199621,0.055928,2.969905,-7.738168,-7.393755,-4.899115,0.443547,7.014725,-7.012974,7.117398,-8.808827,7.845130,9.799042,-1.571120,-7.496925,-7.282055,-7.030040,0.219298,-3.721402,3.583436,-5.960600,7.533195,-1.636365,7.892768,6.568217,-0.139158,-1.744580,3.175544,1.222880,-3.673896,-0.669962,2.219942,-9.886743,0.578837,-9.748699,6.116423,-3.661037,-5.121073,3.329406,1.955824,-9.653237,-4.182484,0.142865,5.811693,4.214593,8.420183,-4.088055,-9.064513,4.390807,2.580170,8.028889,-9.034448,4.058843,-1.054394,-2.206305,5.543395,8.688732,7.242540,-1.819436,1.851358,-1.074993,4.626969,7.595978,-5.281835,3.226081,-8.047160,-1.516247,-3.498471,4.558976,0.254883,-7.048499,8.290422,-6.980758,2.474783,9.802130,1.605077,4.750173,-0.171630,-5.521074,3.275635,-6.352422,-9.150000,-1.247697,-6.170037,8.636422,-5.748783,4.020992,9.583218,-7.908100,-2.315762,-4.985271,-9.997788,-9.808344,-1.629550,6.670074,7.329336,-2.881439,-2.685036,-7.836742,-6.457721,-1.751944,-4.724198,-0.397149,-2.848552,-9.042784,-4.040754,-4.871900,-5.515589,4.803134,9.039148,-4.432711,-4.642514,6.400636,7.196771,-0.904827,2.071697,-1.805579,-3.413724,-5.171146,-8.743605,1.833992,5.133221,8.252246,-6.721487,-3.035835,2.176813,-3.735266,4.691897,-0.006959,-4.450569,5.054738,-8.668553,1.800624,-6.477052,8.449964,-3.953463,-2.993085,-8.532832,5.886876,-4.905398,-0.891977,-0.932058,-0.260653,-0.810255,-6.336191,7.564009,4.441173,-6.608536,-6.764267,-4.171925,8.810433,-9.127887,-3.625757,5.058663,6.846718,2.531564,2.728447,5.618790,-0.572287,-0.701554,-9.037432,-5.728051,8.673018,-3.743244,5.729449,9.642449,2.394827,-6.070387,-0.755237,1.139441,-7.492605,-8.464905,-6.277722,3.924042,7.600975,7.176017,9.109396,2.121605,-7.801384], dtype = "float64")#candidate|5086|(375,)|const|float64
call_5085 = relay.TupleGetItem(func_4902_call(relay.reshape(const_5086.astype('float64'), [5, 15, 5])), 0)
call_5087 = relay.TupleGetItem(func_4905_call(relay.reshape(const_5086.astype('float64'), [5, 15, 5])), 0)
output = relay.Tuple([call_4972,call_5002,const_5003,var_5004,var_5005,bop_5012,call_5045,var_5046,const_5047,call_5074,bop_5078,call_5082,call_5085,const_5086,])
output2 = relay.Tuple([call_4973,call_5006,const_5003,var_5004,var_5005,bop_5015,call_5048,var_5046,const_5047,call_5075,bop_5081,call_5083,call_5087,const_5086,])
func_5088 = relay.Function([var_4981,var_5004,var_5005,var_5046,], output)
mod['func_5088'] = func_5088
mod = relay.transform.InferType()(mod)
var_5089 = relay.var("var_5089", dtype = "int8", shape = (18, 78))#candidate|5089|(18, 78)|var|int8
var_5090 = relay.var("var_5090", dtype = "float32", shape = (384,))#candidate|5090|(384,)|var|float32
var_5091 = relay.var("var_5091", dtype = "float32", shape = (112,))#candidate|5091|(112,)|var|float32
var_5092 = relay.var("var_5092", dtype = "float64", shape = (30,))#candidate|5092|(30,)|var|float64
output = func_5088(var_5089,var_5090,var_5091,var_5092,)
func_5093 = relay.Function([var_5089,var_5090,var_5091,var_5092,], output)
mutated_mod['func_5093'] = func_5093
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5098 = relay.const([[[-7.818368,5.970153,2.096848,-2.149730,-3.171555,2.016927],[1.390388,3.868244,-7.125877,5.692643,-8.880368,5.199539],[7.201501,-3.519510,-4.949800,-0.028132,-7.692776,-4.641125],[-4.721178,-5.765426,1.882188,-4.361796,5.438781,5.001929],[5.480031,3.054947,-7.858062,-7.956284,-7.824949,7.348940],[3.950137,-0.105955,5.393022,0.534427,6.324407,5.815256],[-0.192143,1.883857,8.728922,2.372815,9.580994,-4.737767],[7.464507,8.272985,-3.425056,5.209684,-7.635402,7.178095],[-0.268471,5.460011,-4.994439,-8.600609,-7.795374,8.514895],[-1.826246,-3.761190,1.912430,7.268165,-9.169275,0.934878],[-1.872879,-6.645775,-7.376574,-2.883723,-9.770735,-6.831081],[-1.274824,6.218754,-6.853698,5.684931,-3.839320,-8.035777]],[[-7.673399,-7.951899,-2.733033,4.779462,-2.839710,1.880671],[6.061882,9.533954,0.988402,3.216092,4.040143,-6.029052],[4.062182,-4.008384,-9.376900,3.781103,2.933249,2.085521],[1.443200,-3.758331,-2.375462,-8.619512,4.176539,0.958023],[3.642077,5.238202,-3.327261,-0.363759,6.374160,0.528545],[2.575180,-1.113734,-4.962594,-5.166410,5.522806,-3.363891],[-0.459406,7.780081,-8.207693,-0.313459,3.403522,-3.657126],[-3.010234,5.747047,-3.273484,5.921539,-3.832610,-4.298422],[1.374019,-8.194381,6.315151,-1.975324,-2.480449,8.058529],[-7.767853,-9.794027,7.807699,8.475915,-9.575699,5.242007],[2.411442,-5.855152,5.051268,3.494154,-0.976657,6.937863],[-3.168526,2.166395,2.767111,5.386053,8.266760,-1.883145]],[[8.862586,-9.815183,-5.921592,-3.609960,-0.702976,1.882100],[7.465736,-0.258692,2.542418,9.537160,1.570016,-1.493766],[1.196093,-1.605165,1.079560,-7.622961,9.328937,-2.085045],[-2.104670,4.497289,-1.326482,-0.773367,8.503768,5.925890],[-6.869018,-2.476604,1.096972,7.868661,7.256046,9.855943],[-6.599112,9.440831,-7.056123,9.758327,-3.796901,2.405759],[-1.531390,-1.329189,-1.369348,-5.022532,-8.413754,-4.768970],[1.474996,-6.099162,-8.206207,5.494863,6.326485,-2.227527],[7.851165,8.166235,-1.361623,-8.996507,-7.007227,7.842655],[-3.937315,-2.513468,-8.086390,-8.645130,-8.953597,-1.767268],[6.660536,6.928436,-8.395016,-5.599204,8.848125,8.363690],[8.568521,-7.688018,-3.176610,-4.769864,1.383708,4.950888]],[[-9.715430,1.260510,9.887589,9.373536,-7.865584,3.376607],[-9.187249,-5.841442,1.976687,8.192162,1.363715,7.089715],[8.057089,-6.224331,-9.662899,3.746838,1.387337,4.339375],[-2.848513,2.549415,6.543979,-1.080937,4.659280,9.603596],[-0.715648,6.316021,2.620823,-6.014880,-4.953556,5.239904],[-0.545487,1.097347,-7.768995,-6.710827,5.659357,3.981814],[5.285855,-4.584843,-9.200697,1.321277,8.943722,-8.260557],[4.177320,4.601188,0.965174,-9.154816,6.343910,4.514983],[-6.308792,4.302393,-0.107711,-6.424479,-9.810992,-2.154050],[3.435691,1.594314,-0.768577,2.270526,-3.988624,5.101201],[3.290404,-7.144283,-8.354162,-1.918919,0.998810,-5.955535],[-5.841341,8.394867,-7.349209,9.740045,-7.407039,-4.205972]],[[-8.693777,-9.154254,-1.820179,-5.468262,-9.861643,0.709410],[4.163995,2.105857,5.418559,-0.914058,9.516660,-8.663554],[0.232599,3.362192,-1.606526,-7.355265,9.170871,-5.320350],[-9.973337,5.086705,7.347222,1.817591,0.762896,7.135711],[5.359826,-5.890328,-6.488443,-5.310910,9.385617,4.236928],[9.909725,-8.850835,-2.690314,-8.727794,-7.015167,6.037538],[-9.081143,-6.456961,-9.593132,-5.899446,0.186723,-2.346416],[0.435167,0.261866,-5.454631,2.531326,-2.733696,-0.649599],[-9.380072,7.306506,-9.898576,-4.360541,-1.229241,-2.660206],[-5.894774,-9.308701,-3.659322,6.231289,1.550670,-6.043406],[6.688655,4.583032,7.381080,7.173502,-3.462574,-6.450639],[9.391172,-2.380654,6.371152,-3.091675,2.866269,4.259989]],[[7.901126,-4.833744,6.908088,-9.245061,-7.578630,-6.017072],[6.512799,2.994601,1.515714,9.662769,-5.299334,-7.249290],[-1.941885,2.088847,4.074343,6.401294,-9.280450,6.333430],[-0.142076,-0.016363,3.378296,8.248284,-6.643316,-4.054996],[-3.957414,1.182848,4.797840,1.371967,-1.410626,-9.257190],[0.569099,9.456356,5.213242,-1.646784,-9.318929,-4.104487],[9.672484,8.664205,-6.306317,5.206223,2.935673,1.648524],[-7.715143,-1.287092,1.887497,-9.399168,8.116834,-7.686365],[-0.800559,-1.768558,-7.825275,-9.785241,-7.700266,8.549648],[-5.359585,-8.584682,2.900744,-0.249723,-8.479871,0.148055],[8.357574,-3.156676,3.382341,7.853170,1.579634,-5.015861],[-5.033294,-9.206180,-5.968478,6.728703,-2.729942,-7.820358]],[[4.493490,-4.913800,-3.537169,-0.104328,7.780490,-7.201270],[0.981041,2.569256,2.505228,-2.038810,-7.474922,8.510450],[5.505953,8.054781,-2.700542,9.315653,4.243038,1.150602],[2.191067,7.537344,-8.999648,4.106499,-1.638457,1.176181],[3.782962,1.684056,-5.777322,-9.858339,-8.672811,2.606296],[-1.820299,-0.938983,-9.009743,3.232982,0.634280,3.339616],[-1.276186,-0.093016,8.620443,-9.254009,3.075447,-2.272242],[-3.165357,1.987350,3.603347,8.995420,-5.188797,6.517438],[8.966799,-5.400178,1.738638,4.450018,7.802487,-0.465430],[7.121564,5.346031,0.527103,-9.471881,-5.480076,-7.361884],[-1.560521,8.104239,6.807711,-9.327899,9.729997,-3.410539],[-7.404089,-8.126398,1.977043,-7.029561,-8.724251,6.477254]],[[3.511173,2.153099,-9.770468,5.665182,-0.752135,2.815645],[7.238454,-5.752396,-0.656647,-5.670191,-8.290074,-7.686295],[7.117953,-0.466103,-0.105315,3.559352,6.849474,-5.212123],[-6.093695,6.285025,-9.195294,9.857605,-6.829982,8.146978],[-7.491402,5.744666,-8.336963,-4.462181,-6.203071,8.534855],[-8.377814,-4.005599,-5.082537,1.286585,5.111456,1.741957],[3.575140,8.110106,-3.087148,8.360889,-5.028571,-9.198026],[-1.856040,6.126618,2.562438,-8.783226,2.833811,-0.673772],[8.940969,7.723154,-6.991197,-6.827897,0.251368,6.141908],[-7.816919,-7.375029,9.733363,-0.835369,1.188908,-8.684970],[-9.078937,-2.927375,0.020280,9.139693,7.231578,3.928002],[8.309144,5.106979,-1.399499,7.241135,2.852966,2.127394]]], dtype = "float64")#candidate|5098|(8, 12, 6)|const|float64
uop_5099 = relay.sqrt(const_5098.astype('float64')) # shape=(8, 12, 6)
uop_5118 = relay.asin(uop_5099.astype('float64')) # shape=(8, 12, 6)
func_2998_call = mod.get_global_var('func_2998')
func_3002_call = mutated_mod.get_global_var('func_3002')
var_5139 = relay.var("var_5139", dtype = "float64", shape = (200,))#candidate|5139|(200,)|var|float64
call_5138 = relay.TupleGetItem(func_2998_call(relay.reshape(var_5139.astype('float64'), [5, 5, 8]), relay.reshape(var_5139.astype('float64'), [5, 5, 8]), ), 0)
call_5140 = relay.TupleGetItem(func_3002_call(relay.reshape(var_5139.astype('float64'), [5, 5, 8]), relay.reshape(var_5139.astype('float64'), [5, 5, 8]), ), 0)
func_78_call = mod.get_global_var('func_78')
func_81_call = mutated_mod.get_global_var('func_81')
const_5146 = relay.const([10,-6,-6,3,2,2,2,2,-7,-10,2,-5,-8,-8,-10,2,10,8,9,-9,-3,-5,-7,6,-4,10,-4,2,-9,-5,-9,8,-4,-5,-10,-6,-3,8,7,-4,2,-7,-7,10,-1,-7,-3,8,-3,-2,7,-6,8,10,9,8,-8,-10,6,-2,-9,5,-4,-1,8,-10,1,5,1,7,-9,-3,-10,1,7,10,4,7,-2,7,-2,-7,4,-4,-7,-8,8,5,-6,-3,-2,8,2,-6,-4,4,-9,-10,-3,1,-7,-10,10,-2,-2,1,8,1,-5,-4,-7,6,1,10,-10,6,8,4,-1,-4,3,-8,5,3,-4,10,7,-9,9,2,10,1,-6,-6,5,-10,7,9,5,3,-9,1,8,4], dtype = "uint64")#candidate|5146|(144,)|const|uint64
const_5147 = relay.const([1,8,7,-8,9,-7,10,-4,8,-3,9,4,9,9,-9,4,10,-1,4,-2,-3,-1,-4,3,4,-3,-9,-4,8,4,6,7,-9,-2,10,-5,4,-7,3,-2,-8,-2,1,7,-3,-7,8,2,-4,10,10,-6,-3,7,-5,-5,-4,-1,-4,2,-9,6,-5,-7,-5,-3,-4,3,4,-5,9,-1,6,-5,10,8,8,-7,4,-2,-10,-6,-5,-6,-9,7,3,-10,-2,1,-4,-1,5,-5,-3,8,3,-10,4,-9,-8,-10,8,10,-5,-2,-10,-1,-1,3,-7,-9,-6,-1,6,-3,8,-5,-3,8,6,7,3,10,-6,9,-6,4,-7,10,6,-8,-7,3,-6,8,-1,7,-2,-7,1,-2,4,7,-2,5,-2,-4,-5,-9,-8,-4,-1,-10,-9,-3,-4,-7,2,10,-5,-2,9,6,-3,-7,-1,9,-6,-8,7,-7,-8,-9,-2,-4,5,2,4,-8,-2,-9,9,-8,10,-10,-7,9,-3,8,7,-2,10,6,3,-4,-2,1,-2,6,7,10,-5,1,-7,-5,3,-9,-5,-8,1,-5,-6,4,-7,9,-6,-10,-7,-1,10,-9,5,-5,-4,-1,6,8,4,9,2,-5,-8,-1,8,9,10,-10,-7,7,1,-6,4,8,-6,9,-4,8,1,-6,3,-8,3,-10,-4,-2,5,-1,-2,6,5,-7,2,-2,-7,4,4,-3,-10,9,-1,1,7,-6,-1,6,-10,7,-8,-6,7,-5,10,10,-2,-5,10,-1,-8,-5,-1,-4,-3,2,-2,-6,-8,2,8,9,-2,3,10,8,-2,6,-3,-4,-5,-8,7,-6,3,-3,1,-9,6,-7,-7,-6,-8,-2,-5,7,-7,7,-9,8,-2,-2,-5,-7,6,-9,9,-2,8,-9,-2,-4,-3,2,-3,-5,5,9,-10,-3,2,-9,-9,-9,-5,-9,7,4,4,4,-10,2,6,-5,10,5,2,-5,5,8,-2,-4,10,-1,-6,2,3,1,-7,-10,-6,9,8,-9,-7,2,-3,10,-6,10,5,-10,-7,-10,7,1,4,1,3,-7,-6,2,7,5,-5,9,-6,-8,10,-7,-7,-2,6,3,5,2,8,3,5,1,2,2,9,-10,10,-9,6,8,-7,3,-10,3,8,7,3,-5,-10,-2,-7,-9,10,3,-1,7,-3,-10,-7,5,9,9,10,5,-3,8,-9,-8,-6,4,4,-5,-4,-2,-8,-6,-6,8,-3,7,-2,-5,-5,10,5,-1,7,-6,1,-4,2,7,-7,6,-2,3,10,-4,2,-6,-2,-6,3,2,7,-4,-5,8,9,-1,9,-4,-3,-3,6,2,6,-7,-9,2,4,-6,6,1,10,-6,-8,-7,3,-8,9,7,9,4,-4,3,-10,-6,-4,4,1,-4,-4,-1,-1,8,-10,-7,10,6,-6,9,-7,4,4,-7,2,3,2,-3,-5,-5,5,-6,3,-6,-1,7,-1,-1,-1,-7,10,8,-8,-5,9,9,-1,-6,5,3,8,3,-1,4,5,-6,3,-6,-3,3,-2,6,7,10,-8,7,-3,5,7,9,-1,4,8,-7,3,-5,-4,8,4,1,-1,8,-9,9,4,-7,-2,3,2,-1,9,8,6,5,2,-4,6,-8,-8,-2,-4,7,9,7,9,-6,3,-4,-10,3,-6,-6,8,7,10,8,8,1,7,-9,-8,-7,-9,-2,-1,-2,1,-9,-1,-4,-6,6,-10,-1,6,3,7,5,-2,-6,1,2,-5,10,9,-8,8,1,2,5,4,-4,-10,6,9,9,-9,3,-3,-1,-8,-7,4,6,-10,5,-1,-4,1,6,-3,9,7,-5,4,-3,4,1,-10,5,8,-5,-1,3,-10,-2,-6,-2,-3,-5,2,9,10,3,7,-9,7,7,2,2,10,4,4,-1,2,4,-4,9,5,1,9,6,-5,-6,2,8,3,-8,-7,-4,4,10,-4,-9,10,-8,1,4,8,2,7,4,9,7,-2,4,2,4,-2,3,-5,10,-9,-2,4,1,-2,-3,8,9,-4,7,-9,-2,-4,-3,-7,4,7,5,10,5,10,6,-10,9,10,-8,7,-9,4,-1,-7,9,3,-7,9,-6,10,6,-9,-3,-10,-7,10,1,10,-7,9,2,1,6,1,-6,3,2,6,10,-6,-5,5,-2,-10,-5,-6,-10,6,6,7,10,-5,-2,8,9,1,10,-9,-2,-5,7,-3,10,-4,-9,-8,1,-3,-4,-4,-5,-6,10,9,-6,10,8,2,-5,2,-7,4,6,10,-6,-1,-7,8,-4,-1,1,-4,5,7,-4,3,-1,-9,4,-7,2,-3,-6,-8,8,-1,-1,8,-2,-5,5,-8,-6,-3,6,1,7,9,-5,-2,-6,-1,-9,-2,-5,-7,-4,-7,4,1,8,-8,-5,6,3,2,2,-6,-6,2,-5,2,-6,10,-8,9,-2,-3,-3,-7,-9,-6,4,-2,10,2,2,5,-6,7,-7,-2,-3,-5,3,1,-5,-3,-8,-9,-8,2,-8,8,-3,8,1,-8,-4,-9,7,1,6,10,8,2,2,-5,-2,-2,10,-4,1,-5,5,4,-5,-3,-10,5,-2,-3,3,-3,-3,-2,9,1,-8,-7,-10,6,-7,-6,-3,4,-10,-10,-4,-9,-9,9,-9,-8,-7,-1,-7,4,-7,10,3,-5,-10,7,-7,-3,9,6,2,-4,-10,-10,3,2,6,2,-5,-4,10,-3,10,-7,7,5,-9,2,6,-10,-8,1,-4,3,7,-6,-1,-8,-4,9,8,5,-5,-1,-9,-1,3,10,2,9,-5,8,6,8,-1,-5,5,10,-7,2,-4,-4,3,-6,-1,6,-2,3,-2,-1,-10,-4,6,-6,7,-10,10,-9,10,-10,10,7,2,-3,-1,-9,-1,-5,-9,2,8,8,-8,3,-10,-10,-10,-6,9,9,2,-2,-1,1,-9,-7,-5,-6,-9,2,3,4,3,8,-7,-3,-4,-1,-3,4,-5,10,3,-6,7,6,2,-5,-7,-6,-1,5,-3,10,-1,7,-5,-8,4,-5,-2,3,8,-8,3,3,-2,-1,5,10,-8,-1,-5,-5,3,-8,-8,10,8,-5,3,-9,6,-1,-3,-6,9,6,-6,-10,1,-5,-10,-9,2,-3,1,1,4,-8,-4,-10,2,6,-8,-9,8,-8,-9,-9,2,-6,-6,10,-9,-6,3,-6,1,4,-2,-6,9,9,4,8,1,-9,-1,4,-9,2,6,8,-4,5,-9,6,-9,-5,2,9,5,10,-6,5,7,-9,9,-10,-4,-9,-8,-1,10,1,7,-7,7,10,6,-1,5,5,9,-9,2,6,-4,8,10,8,-1,-4,4,4,-9,4,4,2,-7,-6,8,9,-6,-8,8,8,2,-8,5,-8,-6,10,2,-3,2,7,1,4,5,-6,7,-4,7,5,3,-6,-6,7,10,-8,-1,-4,3,10,1,2,-3,7,8,9,7,-8,-6,2,9,8,-7,2,2,7,-9,1,5,1,-2,-3,-10,6,10,-1,8,-8,-4,4,-2,9,-9,-5,-8,6,-9,-3,-3,-4,-6,1,6,10,8,6,-4,5,-3,8,7,5,4,-6,8,-10,-4,-10,-8,10,6,-10,-9,6,3,7,-7,-9,-4,-9,-4,-7,-8,1,-1,6,7,10,10,1,-7,7,-3,-6,-9,9,4,4,-7,1,-7,5,-4,-9,-8,-8,-1,2,1,-2,5,-6,9,2,-6,-2,-10,5,2,8,6,-9,-3,2,-1,2,8,-6,9,-3,-10,6,-5,-6,6,-9,2,-1,10,-6,-2,8,8,8,-1,2,9,-5,-8], dtype = "uint64")#candidate|5147|(1440,)|const|uint64
call_5145 = relay.TupleGetItem(func_78_call(relay.reshape(const_5146.astype('uint64'), [9, 16, 1]), relay.reshape(const_5147.astype('uint64'), [9, 16, 10]), ), 0)
call_5148 = relay.TupleGetItem(func_81_call(relay.reshape(const_5146.astype('uint64'), [9, 16, 1]), relay.reshape(const_5147.astype('uint64'), [9, 16, 10]), ), 0)
func_3456_call = mod.get_global_var('func_3456')
func_3460_call = mutated_mod.get_global_var('func_3460')
const_5161 = relay.const([0.375100,-7.813935,-1.432177,3.470391,-7.220358,-4.861501,0.784198,5.378814,-0.691054,-4.117080,-2.997577,8.184812,-9.815601,-5.397672,-7.673193,0.511603,4.867487,-5.127209,-4.219844,-7.964562,1.487952,-2.154671,-4.072483,-0.658375,1.159491,-5.093191,-3.418595,9.258964,-2.010907,-1.422616], dtype = "float64")#candidate|5161|(30,)|const|float64
var_5162 = relay.var("var_5162", dtype = "float32", shape = (112,))#candidate|5162|(112,)|var|float32
call_5160 = relay.TupleGetItem(func_3456_call(relay.reshape(const_5161.astype('float64'), [1, 10, 3]), relay.reshape(const_5147.astype('uint64'), [2, 720]), relay.reshape(var_5162.astype('float32'), [112,]), ), 3)
call_5163 = relay.TupleGetItem(func_3460_call(relay.reshape(const_5161.astype('float64'), [1, 10, 3]), relay.reshape(const_5147.astype('uint64'), [2, 720]), relay.reshape(var_5162.astype('float32'), [112,]), ), 3)
output = relay.Tuple([uop_5118,call_5138,var_5139,call_5145,const_5146,const_5147,call_5160,const_5161,var_5162,])
output2 = relay.Tuple([uop_5118,call_5140,var_5139,call_5148,const_5146,const_5147,call_5163,const_5161,var_5162,])
func_5174 = relay.Function([var_5139,var_5162,], output)
mod['func_5174'] = func_5174
mod = relay.transform.InferType()(mod)
mutated_mod['func_5174'] = func_5174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5174_call = mutated_mod.get_global_var('func_5174')
var_5176 = relay.var("var_5176", dtype = "float64", shape = (200,))#candidate|5176|(200,)|var|float64
var_5177 = relay.var("var_5177", dtype = "float32", shape = (112,))#candidate|5177|(112,)|var|float32
call_5175 = func_5174_call(var_5176,var_5177,)
output = call_5175
func_5178 = relay.Function([var_5176,var_5177,], output)
mutated_mod['func_5178'] = func_5178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4962_call = mod.get_global_var('func_4962')
func_4963_call = mutated_mod.get_global_var('func_4963')
call_5183 = func_4962_call()
call_5184 = func_4962_call()
func_4654_call = mod.get_global_var('func_4654')
func_4656_call = mutated_mod.get_global_var('func_4656')
const_5187 = relay.const([[-6,9,3,7,5,-3,1,-9,8,-6,9,10,-6,10,8,6,-3,10,-9,5,2,-4,-3,5,-7,8,-2,7,-9,-3,6,-1,-6,-7,9,-9,-10,-5,6,-4,-2,-8,-1,4,1,-8,-7,-8,-9,10,-6,8,-5,-7,-4,-3,-5,3,-9,7,4,-7,-4,8,9,-1,10,-1,4,-6,-10,5,4,-3,-6,-1,8,5,-4,-5,-2,9,8,7,-9,10,-1,-7,4,-6,-2,3,6,10,-9,-6,-3,-3,7,5,-2,-9,4,10,8,8,-4,8,9,3,-6,10,-3,2,-4,6,-4,1,-1,-5,8,8,6,-3,5,4,-2,-1,-9,3,-2,1,3,3,2],[4,-5,1,8,6,-7,-5,5,4,-8,7,-7,7,10,-6,10,-4,2,-6,-9,-4,-3,7,-2,3,-9,2,-9,-6,1,-5,3,5,5,6,4,-4,6,8,-4,1,-3,9,-4,-3,10,5,7,9,-1,-8,4,3,-3,9,2,-3,3,-7,1,-1,7,-6,-7,-6,9,-3,-6,-2,-9,-8,-9,6,-7,10,-4,-10,-8,-5,1,-3,-5,-5,7,10,6,-7,-3,8,7,-7,-10,3,-5,-3,10,-9,4,-4,9,7,3,4,-8,-5,2,-7,3,2,-6,2,-1,-1,-5,8,-10,-1,8,9,10,10,-10,-6,-6,-8,-3,8,-5,1,-3,-4,-1,-6,-2,2],[2,4,10,4,-6,8,-7,3,7,-2,2,-3,-2,-1,-7,6,8,1,10,4,2,-7,-8,2,6,-8,-9,3,-2,-8,1,8,6,7,-7,-3,-1,-9,-3,-6,5,9,-5,-7,-9,5,9,-7,-3,10,-5,10,-5,7,-9,9,7,10,-2,-8,-2,-9,6,-7,-2,8,1,-3,6,8,-3,1,-7,-1,-10,10,-1,6,-8,-6,-9,8,-4,-10,-3,8,-7,7,2,5,-8,-7,-3,-8,-3,3,-1,-3,4,-3,-2,-6,-2,3,4,9,2,-2,-6,-7,-7,4,-1,-10,2,5,-6,3,5,-5,5,-10,-9,-5,3,7,-2,7,-8,10,10,-4,-6,8,6],[-10,-7,-9,3,1,-5,7,9,-1,-10,-5,-8,-1,-7,-6,10,3,8,-4,-7,8,-3,-9,10,-9,1,-3,4,-3,-10,-3,9,-8,9,8,6,8,-3,-4,-5,3,7,-6,1,2,-2,-4,3,6,3,-8,1,2,10,-7,9,4,-8,-8,2,10,7,3,-5,9,-4,-9,-2,-9,7,9,5,-1,-6,2,1,1,6,-5,4,9,3,-5,8,-7,-9,10,-2,9,-10,-5,2,8,-2,7,6,-6,-5,-4,-6,-8,1,-8,-9,-2,-7,1,-5,-7,9,-2,1,6,10,1,-2,10,-8,-8,-7,-7,9,6,-4,-10,-9,10,2,-8,-7,-10,-9,-4,-1,4],[-7,6,7,-10,5,6,4,-5,-3,1,-5,10,-1,9,-1,2,3,3,-10,-5,-5,-10,-8,-7,10,-2,7,9,10,-2,2,-6,1,-9,2,-5,-4,8,-10,4,1,6,-1,7,-2,10,-2,1,6,4,1,-9,-4,8,9,3,9,1,-4,-1,7,2,-8,5,-4,-5,8,-1,-8,4,10,-9,-9,-1,9,1,1,-9,8,-6,1,-9,-5,1,9,3,5,2,-4,-6,5,3,3,-7,-4,-3,-4,5,-3,3,10,-5,9,8,10,-8,-3,3,1,-7,4,-1,2,-8,-10,9,10,-6,1,4,-10,-8,-3,9,10,-10,-3,3,-7,-2,-5,-7,-7,3,9]], dtype = "uint16")#candidate|5187|(5, 135)|const|uint16
call_5186 = relay.TupleGetItem(func_4654_call(relay.reshape(const_5187.astype('uint16'), [5, 15, 9])), 1)
call_5188 = relay.TupleGetItem(func_4656_call(relay.reshape(const_5187.astype('uint16'), [5, 15, 9])), 1)
output = relay.Tuple([call_5183,call_5186,const_5187,])
output2 = relay.Tuple([call_5184,call_5188,const_5187,])
func_5208 = relay.Function([], output)
mod['func_5208'] = func_5208
mod = relay.transform.InferType()(mod)
mutated_mod['func_5208'] = func_5208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5208_call = mutated_mod.get_global_var('func_5208')
call_5209 = func_5208_call()
output = call_5209
func_5210 = relay.Function([], output)
mutated_mod['func_5210'] = func_5210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4887_call = mod.get_global_var('func_4887')
func_4888_call = mutated_mod.get_global_var('func_4888')
call_5216 = func_4887_call()
call_5217 = func_4887_call()
output = call_5216
output2 = call_5217
func_5227 = relay.Function([], output)
mod['func_5227'] = func_5227
mod = relay.transform.InferType()(mod)
output = func_5227()
func_5228 = relay.Function([], output)
mutated_mod['func_5228'] = func_5228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4887_call = mod.get_global_var('func_4887')
func_4888_call = mutated_mod.get_global_var('func_4888')
call_5243 = func_4887_call()
call_5244 = func_4887_call()
output = relay.Tuple([call_5243,])
output2 = relay.Tuple([call_5244,])
func_5291 = relay.Function([], output)
mod['func_5291'] = func_5291
mod = relay.transform.InferType()(mod)
mutated_mod['func_5291'] = func_5291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5291_call = mutated_mod.get_global_var('func_5291')
call_5292 = func_5291_call()
output = call_5292
func_5293 = relay.Function([], output)
mutated_mod['func_5293'] = func_5293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5227_call = mod.get_global_var('func_5227')
func_5228_call = mutated_mod.get_global_var('func_5228')
call_5326 = func_5227_call()
call_5327 = func_5227_call()
output = call_5326
output2 = call_5327
func_5339 = relay.Function([], output)
mod['func_5339'] = func_5339
mod = relay.transform.InferType()(mod)
mutated_mod['func_5339'] = func_5339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5339_call = mutated_mod.get_global_var('func_5339')
call_5340 = func_5339_call()
output = call_5340
func_5341 = relay.Function([], output)
mutated_mod['func_5341'] = func_5341
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5353 = relay.var("var_5353", dtype = "uint64", shape = (9, 8, 5))#candidate|5353|(9, 8, 5)|var|uint64
var_5354 = relay.var("var_5354", dtype = "uint64", shape = (9, 8, 5))#candidate|5354|(9, 8, 5)|var|uint64
bop_5355 = relay.bitwise_and(var_5353.astype('uint64'), relay.reshape(var_5354.astype('uint64'), relay.shape_of(var_5353))) # shape=(9, 8, 5)
output = bop_5355
output2 = bop_5355
func_5365 = relay.Function([var_5353,var_5354,], output)
mod['func_5365'] = func_5365
mod = relay.transform.InferType()(mod)
mutated_mod['func_5365'] = func_5365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5365_call = mutated_mod.get_global_var('func_5365')
var_5367 = relay.var("var_5367", dtype = "uint64", shape = (9, 8, 5))#candidate|5367|(9, 8, 5)|var|uint64
var_5368 = relay.var("var_5368", dtype = "uint64", shape = (9, 8, 5))#candidate|5368|(9, 8, 5)|var|uint64
call_5366 = func_5365_call(var_5367,var_5368,)
output = call_5366
func_5369 = relay.Function([var_5367,var_5368,], output)
mutated_mod['func_5369'] = func_5369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5291_call = mod.get_global_var('func_5291')
func_5293_call = mutated_mod.get_global_var('func_5293')
call_5427 = relay.TupleGetItem(func_5291_call(), 0)
call_5428 = relay.TupleGetItem(func_5293_call(), 0)
output = relay.Tuple([call_5427,])
output2 = relay.Tuple([call_5428,])
func_5446 = relay.Function([], output)
mod['func_5446'] = func_5446
mod = relay.transform.InferType()(mod)
mutated_mod['func_5446'] = func_5446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5446_call = mutated_mod.get_global_var('func_5446')
call_5447 = func_5446_call()
output = call_5447
func_5448 = relay.Function([], output)
mutated_mod['func_5448'] = func_5448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5291_call = mod.get_global_var('func_5291')
func_5293_call = mutated_mod.get_global_var('func_5293')
call_5510 = relay.TupleGetItem(func_5291_call(), 0)
call_5511 = relay.TupleGetItem(func_5293_call(), 0)
output = relay.Tuple([call_5510,])
output2 = relay.Tuple([call_5511,])
func_5523 = relay.Function([], output)
mod['func_5523'] = func_5523
mod = relay.transform.InferType()(mod)
output = func_5523()
func_5524 = relay.Function([], output)
mutated_mod['func_5524'] = func_5524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5523_call = mod.get_global_var('func_5523')
func_5524_call = mutated_mod.get_global_var('func_5524')
call_5533 = relay.TupleGetItem(func_5523_call(), 0)
call_5534 = relay.TupleGetItem(func_5524_call(), 0)
output = relay.Tuple([call_5533,])
output2 = relay.Tuple([call_5534,])
func_5535 = relay.Function([], output)
mod['func_5535'] = func_5535
mod = relay.transform.InferType()(mod)
output = func_5535()
func_5536 = relay.Function([], output)
mutated_mod['func_5536'] = func_5536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5208_call = mod.get_global_var('func_5208')
func_5210_call = mutated_mod.get_global_var('func_5210')
call_5537 = relay.TupleGetItem(func_5208_call(), 2)
call_5538 = relay.TupleGetItem(func_5210_call(), 2)
func_5446_call = mod.get_global_var('func_5446')
func_5448_call = mutated_mod.get_global_var('func_5448')
call_5547 = relay.TupleGetItem(func_5446_call(), 0)
call_5548 = relay.TupleGetItem(func_5448_call(), 0)
output = relay.Tuple([call_5537,call_5547,])
output2 = relay.Tuple([call_5538,call_5548,])
func_5554 = relay.Function([], output)
mod['func_5554'] = func_5554
mod = relay.transform.InferType()(mod)
mutated_mod['func_5554'] = func_5554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5554_call = mutated_mod.get_global_var('func_5554')
call_5555 = func_5554_call()
output = call_5555
func_5556 = relay.Function([], output)
mutated_mod['func_5556'] = func_5556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5291_call = mod.get_global_var('func_5291')
func_5293_call = mutated_mod.get_global_var('func_5293')
call_5613 = relay.TupleGetItem(func_5291_call(), 0)
call_5614 = relay.TupleGetItem(func_5293_call(), 0)
output = call_5613
output2 = call_5614
func_5619 = relay.Function([], output)
mod['func_5619'] = func_5619
mod = relay.transform.InferType()(mod)
output = func_5619()
func_5620 = relay.Function([], output)
mutated_mod['func_5620'] = func_5620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5227_call = mod.get_global_var('func_5227')
func_5228_call = mutated_mod.get_global_var('func_5228')
call_5641 = func_5227_call()
call_5642 = func_5227_call()
func_5446_call = mod.get_global_var('func_5446')
func_5448_call = mutated_mod.get_global_var('func_5448')
call_5657 = relay.TupleGetItem(func_5446_call(), 0)
call_5658 = relay.TupleGetItem(func_5448_call(), 0)
func_5523_call = mod.get_global_var('func_5523')
func_5524_call = mutated_mod.get_global_var('func_5524')
call_5659 = relay.TupleGetItem(func_5523_call(), 0)
call_5660 = relay.TupleGetItem(func_5524_call(), 0)
func_5339_call = mod.get_global_var('func_5339')
func_5341_call = mutated_mod.get_global_var('func_5341')
call_5661 = func_5339_call()
call_5662 = func_5339_call()
output = relay.Tuple([call_5641,call_5657,call_5659,call_5661,])
output2 = relay.Tuple([call_5642,call_5658,call_5660,call_5662,])
func_5663 = relay.Function([], output)
mod['func_5663'] = func_5663
mod = relay.transform.InferType()(mod)
mutated_mod['func_5663'] = func_5663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mutated_mod.get_global_var('func_5663')
call_5664 = func_5663_call()
output = call_5664
func_5665 = relay.Function([], output)
mutated_mod['func_5665'] = func_5665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4962_call = mod.get_global_var('func_4962')
func_4963_call = mutated_mod.get_global_var('func_4963')
call_5707 = func_4962_call()
call_5708 = func_4962_call()
func_2998_call = mod.get_global_var('func_2998')
func_3002_call = mutated_mod.get_global_var('func_3002')
const_5717 = relay.const([[6.470798,1.707409,-1.912826,6.927152,0.421325,7.943753,-5.904652,-5.386132,3.431475,-8.832964,5.653062,-8.615158,-4.897022,9.106273,3.759618,-3.046221,5.531084,-3.652523,5.589999,4.833149],[7.878314,-1.409981,7.861799,7.050802,-8.344462,-0.649114,0.448905,-1.401973,-9.043569,-6.893199,-8.361946,-8.415585,-1.884213,3.864090,-8.379674,1.918740,6.686212,7.105294,-2.915020,4.400743],[2.581921,-8.944522,-2.494445,-5.492404,-0.300291,-2.355197,7.339345,6.242832,-0.214259,-4.811604,2.537511,-1.299571,5.710942,-3.573316,8.288200,-6.429341,8.849579,4.524456,-3.391783,1.579923],[4.347172,6.833938,-2.663528,-1.635636,-3.254393,-5.558248,-0.460657,-0.232863,-5.146175,9.946670,6.546496,-6.848951,5.769083,-0.006999,-1.478356,-4.501688,-5.256520,-8.280625,-8.178308,2.284538],[0.184304,3.156533,-5.000887,-1.853337,-2.249007,-2.815717,1.567256,-6.487773,7.324885,-4.068722,-8.121322,1.461415,7.293953,-9.926003,-3.883064,-5.917744,6.236418,-4.504860,1.246201,-6.937412],[-8.891113,0.213387,-0.440750,-4.673204,9.700878,5.891073,-9.369314,-9.482170,-5.891789,9.643616,-2.715120,1.086026,7.551911,8.809267,-9.432533,-1.221829,0.298754,-5.959078,-0.136138,8.326389],[-3.171577,7.945995,0.595036,-0.769169,-5.556065,-9.000882,5.372668,-6.367135,6.127874,3.990993,-7.302619,0.526593,-4.111312,3.184089,-2.197856,-3.475406,7.026278,3.444043,1.953585,-6.640946],[-4.313534,-1.287981,-1.266182,-4.999414,-5.205893,3.966676,-4.693139,-3.341876,5.767998,9.132811,-8.228043,-7.525334,5.560958,-6.763656,7.988390,1.763051,-7.578984,0.368031,-0.890390,-4.623238],[7.000197,0.031642,-2.741013,-8.978129,4.212662,-3.388957,1.895783,3.346210,-0.378115,5.131061,9.073951,7.204969,-5.897079,-0.908343,3.578542,-9.475546,3.412785,-4.695106,4.710005,5.355012],[-8.857254,8.765449,-2.589772,-5.542991,-1.303866,-4.979640,-0.326952,9.451885,-3.986858,-7.135159,9.554002,-7.203119,-8.084462,-4.336877,-8.667463,6.797219,8.089754,-7.383576,6.967370,8.805704]], dtype = "float64")#candidate|5717|(10, 20)|const|float64
call_5716 = relay.TupleGetItem(func_2998_call(relay.reshape(const_5717.astype('float64'), [5, 5, 8]), relay.reshape(const_5717.astype('float64'), [5, 5, 8]), ), 0)
call_5718 = relay.TupleGetItem(func_3002_call(relay.reshape(const_5717.astype('float64'), [5, 5, 8]), relay.reshape(const_5717.astype('float64'), [5, 5, 8]), ), 0)
output = relay.Tuple([call_5707,call_5716,const_5717,])
output2 = relay.Tuple([call_5708,call_5718,const_5717,])
func_5734 = relay.Function([], output)
mod['func_5734'] = func_5734
mod = relay.transform.InferType()(mod)
output = func_5734()
func_5735 = relay.Function([], output)
mutated_mod['func_5735'] = func_5735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5339_call = mod.get_global_var('func_5339')
func_5341_call = mutated_mod.get_global_var('func_5341')
call_5748 = func_5339_call()
call_5749 = func_5339_call()
func_4048_call = mod.get_global_var('func_4048')
func_4051_call = mutated_mod.get_global_var('func_4051')
var_5752 = relay.var("var_5752", dtype = "int64", shape = (1536,))#candidate|5752|(1536,)|var|int64
call_5751 = relay.TupleGetItem(func_4048_call(relay.reshape(var_5752.astype('int64'), [16, 12, 8]), relay.reshape(var_5752.astype('int64'), [16, 12, 8]), ), 0)
call_5753 = relay.TupleGetItem(func_4051_call(relay.reshape(var_5752.astype('int64'), [16, 12, 8]), relay.reshape(var_5752.astype('int64'), [16, 12, 8]), ), 0)
func_5619_call = mod.get_global_var('func_5619')
func_5620_call = mutated_mod.get_global_var('func_5620')
call_5754 = func_5619_call()
call_5755 = func_5619_call()
func_2733_call = mod.get_global_var('func_2733')
func_2739_call = mutated_mod.get_global_var('func_2739')
const_5778 = relay.const([3.335707,1.293347,-0.088656,1.222529,-5.950839,-7.516336,5.397359,-1.563500,-1.604347,2.196351,9.673349,-2.481294,2.788140,0.238158,-3.316509,-0.452749,-9.876226,4.292683,-3.914483,6.172071,3.558907,0.687124,4.327340,-4.943744,0.163116,-7.998860,6.750243,-7.527854,-5.115676,0.229162,-2.913249,-5.267653,3.498116,5.842003,3.523364,3.983403,-3.313918,0.806096,-9.323413,7.977986,-5.963615,-7.026537,-2.630900,-2.274207,-5.737367,0.802057,6.606876,2.091693,-8.169807,-9.685951,5.722058,-7.360426,3.215292,-0.424712,5.623603,1.086382,4.166366,3.849724,-5.403174,-6.869622,7.533886,0.214206,-4.067984,-8.560764,-5.837062,-2.195729,-8.011538,1.699888,-2.701117,9.211464,-7.229661,6.289427,-1.090502,7.224515,-6.510346,1.051353,-4.759554,-2.006165,-3.833202,3.727987,-6.465469,-5.808766,-8.251289,-3.603970,4.009005,-6.034465,-0.022399,6.450992,-0.664829,9.943868,2.171128,-7.357192,2.282507,-7.997042,7.518415,-4.409510,7.774988,-5.897755,8.698497,-0.646854,-4.972297,-1.462821,3.951140,3.052854,-1.762220,-3.781369,-5.234171,9.152508,-3.653140,7.556338,1.711459,0.212183,-9.516715,-9.560459,-6.713986,8.285821,2.166780,5.287675,5.196887,-1.615941,1.485603,0.879296,-1.072100,8.717025,-4.678951,-8.480545,2.750610,-4.850623,-1.277249,3.437623,-9.020441,3.062041,-8.275161,-6.891432,-6.082519,4.779051,0.695856,2.940020,-0.399678,-3.204343,7.306536,-1.500974,-8.743505,-9.461105,-4.175672,0.943052,-5.239614,-4.426484,4.176955,6.425556,-0.438596,1.235429,7.004173,0.927288,-5.144987,5.907244,-1.036441,-6.729994,-0.078773,2.190786,-6.459318,3.821904,-6.918479,3.432258,-4.236065,4.701639,1.063661,0.262823,4.230523,-1.960689,-9.059829,1.263990,-2.293777,-3.513161,-8.765438,7.962199,-0.917787,-5.054990,-7.589334,6.348819,-6.939174,8.128588,8.241423,-0.919048,0.696096,-4.004356,-7.466897,6.055932,5.821248,-9.723738,3.716591,-7.114473,-6.860499,-7.681744,-3.083158,-2.368045,-2.316054,2.354757,-3.395327,-6.799781,-6.931323,2.164749,-9.450101,7.163498,-5.085793,-3.547464,3.595272,-5.401020,4.797423,0.157486,-5.549641,-0.113154,6.912049,-9.471632,0.690567,-4.557030,-2.166734,9.042926,-7.305550,-0.127312,-6.967775,-4.286001,-3.419810,8.263319,-7.518427,8.594739,-9.619032,9.295721,5.887371,4.247050,6.756865,7.769920,-4.665571,-0.986556,8.535785,5.946559,1.776171,-0.054121,-1.584747,1.191072,-1.797361,5.979104,-3.870436,-7.169791,7.123367,8.095545,6.418722,-0.825710,0.076093,-6.808238,0.997031,-6.396061,-4.397132,-2.807629,-7.836794,1.506182,1.039431,-8.185713,2.068601,8.808798,-1.926819,6.911225,8.885434,6.808601,6.997155,-9.117254,-5.497242,5.019757,8.609502,5.452197,-9.568152,-0.678040,-0.415485,6.325093,2.021920,-5.448800,1.526687,-5.677178,8.798199,1.536273,4.628898,2.967595,-0.084768,-2.383177,8.312679,-4.156055,-2.802027,7.884312,5.887947,3.165504,1.362998,-9.253512,7.666854,-0.513807,9.146200,7.905723,4.854776,-2.034395,-7.687554,2.782538,-7.086364,5.153654,-7.856919,9.083583,1.748136,-6.288729,-5.515949,-8.290559,8.530323,-1.387353,-3.171375,-6.321962,6.516206,-8.560786,4.396726,2.455078,4.849474,1.713865,7.813995,8.217972,5.869236,6.310767,-5.658075,6.845249,-3.294817,-3.316335,-4.607780,-9.053346,9.524777,0.649196,-3.644607,5.966499,0.898412,9.186954,9.713803,9.278079,0.197102,8.845922,-5.253818,7.496623,-2.534457,-2.686475,-1.463789,-9.455724,1.630733,4.501776,-8.595406,4.874629,9.841868,-4.437638,3.991068,2.508260,7.114466,-8.512754,7.168918,-8.107464,-6.979673,-7.767770,-7.408916,-8.133395,-4.481912,5.554830,-9.726753,-1.068449,-0.738657,0.552861,5.490304,-8.191634,3.043880,-5.131287,-2.705374,-5.269776,8.812438,-2.857061,-8.315073,6.011537,-5.989381,8.122358,5.428387,-1.018440,9.692112,9.606733,-0.583546,6.865244,5.882481,-8.978401,-5.865099,-1.912819,-9.559469,5.542854,2.860773,6.035007,-0.271906,8.443635,8.714177,8.979953,2.535716,0.228715,-6.831903,6.821416,-1.941085,6.700154,-0.037234,7.608745,-9.813034,5.746249,8.351666,3.640162,-8.596225,-3.256602,-6.187718,-7.817687,-5.194799,9.884090,-4.897851,-7.970668,9.362451,4.418376,4.015919,-1.406901,-5.782650,-0.942660,-2.313325,5.449493,-0.687161,-9.608696,0.495790,-6.408128,-2.639301,-8.532038,-2.478460,-3.742923,-4.270735,6.349039,-0.148435,-0.428148,-9.055191,-5.381913,-2.076569,0.359830,2.993430,-5.043610,-5.304623,6.788397,-6.415792,7.721525,-9.340477,-7.283275,6.775005,6.384331,6.898572,-2.678388,-4.576171,0.967100,-8.741116,7.869403,-4.850433,-7.903161,-8.229262,-3.851105,6.173822,0.666479,5.774003,6.061538,7.836014,-1.029028,-1.474860,-9.732303,0.044335,6.887069,-7.691535,-6.567471,-0.022122,4.480993,-8.518566,-5.581976,0.903170,3.816008,9.992987,-2.205361,8.859992,-1.322655,3.159669,-0.015402,-2.528565,8.030259,-1.374956,1.292152,-0.502981,5.473394,-3.902293,4.516183,7.900907,-0.180509,8.110130,-9.189049,6.660473,-8.698094,8.691562,-9.388395,-6.934341,9.887244,0.091580,-3.148400,0.563772,-4.329918,4.154955,-5.325009,-0.076502,5.796848,1.787350,3.491437,-1.215111,6.066721,-2.268102,0.973151,2.793536,-0.030919,-1.208646,4.639689,-2.272410,9.226951,4.511722,1.303986,7.836044,8.467790,-4.734271,7.338900,-2.714286,-9.743676,-1.794038,4.324588,-0.690574,-7.498741,-3.916167,6.261761,0.811878,-2.122681,-6.092089,7.769682,4.679993,-4.061978,6.895936,-8.978769,-3.492594,-2.934377,8.742382,4.369091,9.511919,-5.748971,4.116366,7.444079,-7.713508,7.223971,1.200485,-2.311688,5.817469,-1.668637,3.853941,-3.220518,5.364276,-8.030991,-8.936729,7.631918,-2.455284,-5.711996,5.986919,-6.786876,6.999143,-7.107707,-0.521050,9.875207,0.097208,-2.712812,1.609918,-0.953757,-2.934129,3.842869,-4.656667,-7.821152,-4.698662,-8.052261,-2.491172,9.699538,-0.927920,-8.022451,2.689014,-7.434309,7.713858,7.358863,8.708790,-8.042269,-2.635883,6.509154,-6.507745,7.452083,-6.815863,-9.199156,1.972010,-6.799053,1.883216,-8.204137,9.758515,2.098213,-3.149010,5.501552,-6.400182,4.623283,2.681035,-7.403805,-6.781628,-9.189775,1.394569,-1.215533,-1.096578,7.868562,1.146547,-6.376473,-3.022023,-1.428244,-2.159233,5.188164,8.522208,-7.621031,5.754048,-1.016303,-8.048873,-8.453345,2.629301,-5.446919,1.710105,1.117063,-4.168495,7.219480,5.576265,0.779670,0.403451,-0.780325,2.425146,4.558878,0.291767,-3.930501,-1.601168,-9.861571,4.300941,-0.331379,-4.573623,-4.578137,1.176040,6.770831,6.460304,8.457759,0.845954,2.680354,-7.174652,8.047992,-0.365645,4.864431,-6.752032,-8.438145,1.458575,9.247236,-0.669657,-8.030045,5.749894,-2.762979,-0.092107,-4.592148,1.982429,-4.907215,-0.921431,-8.221185,8.395343,-4.011640,8.404330,-8.836678,5.797421,-1.866219,2.946627,3.538107,-8.291706,8.755265,8.434863,2.577687,7.538765,-5.907527,2.879140,-7.420474,5.504547,6.203071,6.946260,9.835956,2.138222,-0.991124,-5.493683,5.920952,5.612289,5.390947,-3.000544,7.773155,-7.094500,-0.697876,-6.701586,-1.114010,4.648232,-5.113167,6.116573,9.362970,0.182174,5.245283,4.445567,7.204877,0.156439,-6.280142,1.190915,9.882392,5.338770,3.257836,-2.855929,9.315056,2.164235,-6.713979,1.047888,5.581617,5.972049,-5.966259,-1.196390,1.511910,-1.109335,7.633425,-3.421665,8.389263,-1.943403,8.534869,6.638668,-0.851795,6.544597,4.681814,-4.677198,6.334890,-4.827523,9.295646,8.682039,-2.280275,-9.326970,5.185782,1.023661,-3.655978,-2.908756,-2.630845,6.900864,-4.474628,-7.511041,1.574555,6.044136,-2.577377,6.471615,-0.176399,6.413330,-0.031039,-1.511239,-9.482745,4.465046,-7.814994,-3.864351,3.653300,1.026305,-1.892710,0.879914,8.066315,2.605361,-2.471501,6.419226,3.118873,-7.710263,-6.156773,-0.559657,-6.744062,5.829953,0.837027,2.185457,8.901608,-7.135583,-7.378349,-0.578278,-2.636957,-3.724557,-1.626056,7.082621,-3.273546,7.476496,3.344800,3.352041,2.395597,-7.960458,-0.938319,0.896046,-4.595426,-1.053266,-3.581780,-5.992966,-4.553465,1.041036,-4.557724,-0.364698,-1.085615,1.048357,8.751126,0.887569,-6.551593,4.841391,-4.550352,-5.613041,1.909911,6.068339,4.058552,-9.188756,-1.755238,-1.259031,7.021259,8.432963,8.103276,4.703041,5.867686,8.586926,-8.509747,6.501963,-5.574093,0.785701,-9.371555,5.983175,4.809324,5.729703,1.044291,-1.205565,-5.344213,9.589737,7.273219,5.451561,6.073223,-5.448912,6.635414,-7.087930,4.477481,0.939569,0.818777,-4.923705,2.407215,-6.404260,4.207772,8.252276,2.798707,6.639468,3.377788,7.543047,-1.314647,-2.014713,5.040452,5.997669,-4.139560,-2.347003,9.513150,-8.137734,-4.452788,8.561085,-5.655439,-1.154052,7.705577,-1.655969,-9.698446,-6.801741,1.420417,-3.978576,5.806007,7.947791,3.643568,2.465749,-0.820251,6.606412,6.511515,0.647265,6.663224,0.640701,6.425788,1.693577,3.820098,-7.230917,-3.385628,-0.624104,-2.219851,6.311935,8.473884,-7.714913,1.682088,0.087364,1.619570], dtype = "float64")#candidate|5778|(896,)|const|float64
var_5779 = relay.var("var_5779", dtype = "uint64", shape = (24, 6))#candidate|5779|(24, 6)|var|uint64
const_5780 = relay.const([6,6,-1,1,2,-7,9,-6,5,-1,2,-10,-7,-9,4,-2,-7,8,-1,3,7,8,-2,-2,-4,1,-5,6,-9,5,-10,-6,3,-7,2,-2,2,5,-8,-2,-10,-10,-4,-8,-1,6,2,-8,-7,1,-5,-10,-5,-4,4,5,8,10,2,-5,-3,-4,-7,9,-7,3,5,2,10,3,9,9,-5,-1,9,10,9,4,-8,9,-3,-9,8,10,-5,-4,-1,6,-4,-3,-3,4,10,-9,2,6,-2,6,8,10,7,10,6,5,2,-4,2,-10,-7,3,-9,-5,-3,1,-4,-7,-4,2,4,2,7,3,-6,-4,-2,-10,-5,1,5,1,2,4,-4,8,6,-6,-9,-2,1,-6,2,-1,-5,7,4,-1,6,4,4,10,5,-2,-2,-7,-2,-6,-3,3,9,7,-8,10,6,3,-8,-7,-8,7,-3,5,-9,2,-7,-7,-5,-10,3,-8,-5,-8,-6,8,-3,-6,-7,-4,3,8,10,-6,10,-9,-7,-3,-10,7,-7,9,-8,-8,7,1,9,10,5,-6,4,-9,2,3,-4,-7,-3,-10,-5,-6,-2,2,6,-9,-10,7,10,-4,9,-6,6,-3,4,-2,4,1,4,-5,7,-3,-1,-10,-6,7,2,10,1,-8,1,-3,-7,10,8,-4,-3,4,7,7,8,3,-9,7,10,-4,5,-5,10,4,3,4,6,10,-4,1,2,2,-8,-3,4,7,-3,-2,10,-2,7,-8,6,8,-8,-1,-2,-4,-2,9,2,-7,-10,7,-8,-10,-7,-10,8,-2,-9,-9,-6,3,9,7,-8,8,5,6,6,-10,6,-5,-8,-3,2,7,-4,-9,2,6,-10,6,2,1,-9,1,9,-2,-5,-3,6,8,-10,-4,-2,-2,9,-8,-1,-8,-7,8,7,2,-4,2,5,-3,-6,9,1,10,9,-8,-4,1,-5,9,8,5,-8,-5,6,2,-6,10,2,5,8,4,-10,-5,-5,-9,10,6,-3,-3,-8,1,-5,9,-10,9,-8,10,-7,4,-1,-4,9,9,10,10,-6,-1,-1,6,-5,-9,-9,8,6,-9,-5,10,-4,5,-2,1,-4,-6,-3,8,9,-10,8,6,1,5,-8,-9,3,-6,7,-2,10,-9,2,2,5,-2,9,9,3,6,-8,-4,9,7,-9,-8,-6,-3,-4,-4,6,-4,-5,-7,-6,2,7,6,-7,-3,-1,-7,-10,7,-7,5,-8,10,-3,-4,7,-4,3,2,4,-8,8,3,-6,-2,-3,6,-5,5,-1,-6,2,-5,-1,-6,-2,-9,8,8,2,4,-8,-7,7,10,8,8,-7,6,10,4,-6,4,-5,-7,4,-4,-4,-5,2,8,-3,-3,-9,-2,-3,-3,-9,3,9,3,-3,-6,-8,7,6,2,-2,-4,4,-10,-2,5,9,-5,10,-2,5,-10,-8,-10,4,8,7,-7,-9,7,7,5,2,4,8,-4,5,5,-1,-2,7,1,3,4,-4,-5,4,6,-10,7,8,2,-5,9,-1,3,10,-3,-3,-4,9,7,-9,-1,-5,10,2,-9,8,5,8,7,-3,8,7,-2,-1,-2,-1,-1,3,-2,-3,2,-10,9,4,-5,-6,2,6,2,10,-2,-6,1,-4,4,5,-9,10,4,-5,10,1,9,-5,-7,-4,8,-1,1,4,-5,9,6,5,5,9,5,7,-9,4,9,-4,10,-8,3,4,2,5,7,8,-9,-7,-6,8,-9,3,10,7,-5,1,-6,9,10,-6,3,9,10,6,-4,-3,-7,-3,6,-7,2,10,-4,-5,-2,-1,4,6,-8,2,-7,7,3,-10,-7,-9,-6,-8,-7,-5,4,3,8,2,2,-9,10,2,5,2,1,-4,2,7,5,-10,8,6,5,-3,1,5,-8,-5,-8,-7,-10,-6,-3,2,5,-8,7,8,-2,-6,-2,4,-7,7,6,8,4,-8,9,8,2,-6,8,9,-6,2,-8,-2,-3,-4,-10,7,-6,-5,-3,-6,7,-5,7,-4,1,-1,-2,3,1,-6,-10,6,-6,-1,-4,-5,1,7,-4,-1,8,-3,6,-8,5,-7,-5,-3,6,1,10,-2,-7,-1,1,-7,5,-1,-8,-9,3,10,-2,10,-6,9,-10,-9,1,10,-3,3,9,-2,-3,1,-8,3,-3,-8,-5,-7,8,-3,-7,1,10,-9,-7,9,1,-7,3,6,4,-7,9,-7,-9,5,1,-5,9,-3,2,-8,2,-9,-7,2,-1,4,2,-8,-10,-6,-7,4,-2,4,-9,-6,-8,-5,-4,-6,-6,4,2,7,-4,-2,4,7,-5,2,3,-4,-5,-6,5,-3,-4,7,8,7,10,3,9,10,10,9,-9,6,3,-2,-8,9,1,-10,-3,9,8,5,-3,-3,-8,8,-5,-1,8,7,10,8,4,-10,-4,-10,2,-2,-2,-8,7,-8,-2,-1,4,-6,5,-6,1,8,7,-10,3,4,8,6,9,10,-4,-2,10,-5,-10,-6,8,-8,9,-4,1,8,1,7,-7,-9,-9,-9,9,-5,-6,-1,6,1,-7,-8,4,-10,-1,5,5,8,5,2,-1,4,-10,4,-4,1,-10,2,6,-9,8,-2,-7,6,8,-7,-4,10,6,8,-7,-1,-10,10,-4,1,-2,4,5,-3,-7,6,3,-7,-10,-9,6,3,-3,-9,6,9,-7,9,-3,7,-5,5,-8,9,7,-4,-7,8,2,5,9,5,-6,-10,-9,1,9,-3,8,5,-9,-10,-8,4,-6,-9,2,-3,-10,-7,1,2,8,8,-9,-1,2,5,-10,9,10,2,-1,10,9,8,-9,-9,8,-3,8,5,5,-9,1,-2,-5,-2,-9,-8,2,-8,10,8,-3,-5,4,5,2,-6,-4,-3,-3,7,-9,-2,-3,-6,8,-3,4,5,9,-9,2,5,6,-6,3,2,-8,-7,-5,-6,-6,5,6,-9,-8,8,-6,9,-1,2,6,-9,10,-9,-6,9,5,-1,-4,10,9,-5,2,-10,6,-8,7,1,1,2,9,1,-5,-7,-3,2,-6,8,10,-9,-1,3,4,5,5,5,9,8,-8,-5,-3,-2,6,4,-9,6,-2,8,-2,3,10,-3,-4,3,7,5,-6,8,-1,10,7,-10,5,-5,2,-6,6,9,10,5,9,9,9,7,-2,-9,-3,10,-8,-6,-2,1,2,9,-4,-3,-4,-8,4,2,4,-6,10,-6,-10,-9,5,-2,3,-2,8,8,2,5,-3,1,-8,-4,-3,-9,3,7,1,8,3,-9,-7,-2,-6,4,-6,7,-2,-4,-1,9,-2,-5,-8,-7,5,9,-4,1,-10,7,10,1,5,8,-10,-2,-5,-5,10,-3,7,-6,-5,-1,4,2,-4,-9,-8,-6,5,-1,7,-5,-8,-1,-2,-6,-6,1,-6,7,6,8,-4,-2,-4,-1,-9,-7,9,-3,-7,-8,-7,6,-2,3,8,9,10,10,6,-7,2,-3,-4,-1,-5,-5,-6,8,-3,-5,4,2,7,8,-7,-8,8,9,-8,-4,-9,-7,-9,2,-6,4,1,2,10,-1,4,6,-1,-6,5,-3,-1,9,3,-4,10,-9,-6,1,2,2,3,9,-3,4,7,2,6,-9,-3,-10,-5,-4,-1,-6,8,6,-6,-5,10,-8,-5,-6,-10,-3,-2,-5,-3,7,-5,4,10,5,7,-6,-1,5,-3,-8,9,-5,6,7,1,1,4,-1,7,10,-10,-2,-1,7,-9,-6,-8,-9,-2,-2,-8,-1,2,9,-10,3,7,10,-2,1,-2,10,-7,4,5,2,-3,-8,-5,-4,5,-6,3], dtype = "uint64")#candidate|5780|(1440,)|const|uint64
var_5781 = relay.var("var_5781", dtype = "float32", shape = (616,))#candidate|5781|(616,)|var|float32
const_5782 = relay.const([-3.023930,-1.087062,-2.763378,7.048311,-2.797051,5.206245,5.004240,-8.118617,6.907725,9.397495,-4.056159,-0.951103,5.310235,-1.481175,-9.707220,-8.382668,-9.407778,-1.853007,8.481382,6.246082,9.454885,-6.390627,9.988381,-4.587861,3.119805,9.485900,-4.643220,-4.513553,7.121003,-1.866255,-1.122280,-9.572504,0.580564,-3.794616,3.818047,3.089212,-4.112160,1.417900,-8.820628,-7.300888,3.671465,1.486067,0.255454,-0.936469,7.058455,-6.080038,9.050084,-0.031031,8.903197,-7.712353,-9.625265,1.860663,6.193480,4.182591,-9.761113,0.375355,0.545992,-0.804487,-1.123009,5.767924,9.323163,-7.143411,7.940449,-2.798688,5.578098,1.906385,-7.371943,-2.975454,4.408116,7.055281,5.313895,3.001049,0.043072,4.042381,-3.899153,7.738156,2.574633,2.006744,-5.901543,0.215081,-9.750966,-8.533147,-1.765420,-7.287214,-3.445061,7.215049,-5.264903,-4.699379,-1.116768,8.805222,4.992704,5.278928,-1.583917,5.417825,-9.061111,-6.517772,3.951088,5.630389,9.511082,1.131993,9.334750,3.584912,7.622472,9.889865,-7.210854,6.536846,-2.608798,-7.186900,4.807850,4.323269,-6.515877,-3.409975], dtype = "float32")#candidate|5782|(112,)|const|float32
call_5777 = relay.TupleGetItem(func_2733_call(relay.reshape(const_5778.astype('float64'), [14, 16, 4]), relay.reshape(var_5779.astype('uint64'), [144,]), relay.reshape(const_5780.astype('uint64'), [1440,]), relay.reshape(var_5781.astype('float32'), [616,]), relay.reshape(const_5782.astype('float32'), [112,]), ), 2)
call_5783 = relay.TupleGetItem(func_2739_call(relay.reshape(const_5778.astype('float64'), [14, 16, 4]), relay.reshape(var_5779.astype('uint64'), [144,]), relay.reshape(const_5780.astype('uint64'), [1440,]), relay.reshape(var_5781.astype('float32'), [616,]), relay.reshape(const_5782.astype('float32'), [112,]), ), 2)
bop_5799 = relay.greater(call_5751.astype('bool'), relay.reshape(var_5752.astype('bool'), relay.shape_of(call_5751))) # shape=(16, 12, 8)
bop_5802 = relay.greater(call_5753.astype('bool'), relay.reshape(var_5752.astype('bool'), relay.shape_of(call_5753))) # shape=(16, 12, 8)
output = relay.Tuple([call_5748,call_5754,call_5777,const_5778,var_5779,const_5780,var_5781,const_5782,bop_5799,])
output2 = relay.Tuple([call_5749,call_5755,call_5783,const_5778,var_5779,const_5780,var_5781,const_5782,bop_5802,])
func_5805 = relay.Function([var_5752,var_5779,var_5781,], output)
mod['func_5805'] = func_5805
mod = relay.transform.InferType()(mod)
mutated_mod['func_5805'] = func_5805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5805_call = mutated_mod.get_global_var('func_5805')
var_5807 = relay.var("var_5807", dtype = "int64", shape = (1536,))#candidate|5807|(1536,)|var|int64
var_5808 = relay.var("var_5808", dtype = "uint64", shape = (24, 6))#candidate|5808|(24, 6)|var|uint64
var_5809 = relay.var("var_5809", dtype = "float32", shape = (616,))#candidate|5809|(616,)|var|float32
call_5806 = func_5805_call(var_5807,var_5808,var_5809,)
output = call_5806
func_5810 = relay.Function([var_5807,var_5808,var_5809,], output)
mutated_mod['func_5810'] = func_5810
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5827 = relay.const([[[-1.909866,-9.645413,-0.612502,-6.563139],[-2.935759,7.051129,-9.475022,0.600479],[7.173822,-1.938086,5.352028,9.259029],[-7.600559,1.519126,-9.107049,-2.567239],[-0.658667,-4.028257,-8.375203,-0.025017],[-4.361852,9.333962,4.965732,8.974494],[-0.688376,7.943037,-5.707927,-6.388009],[1.934815,-7.283595,1.592101,-2.036079],[5.393057,-9.722864,1.226886,-1.319194],[-6.903951,0.681164,-1.891653,-5.636269],[-5.323802,-9.521605,-5.173518,1.804027],[-1.178797,-8.304041,3.544897,0.812549],[4.964922,-0.390005,-3.435466,5.383763]],[[-8.900139,5.762379,6.778808,0.979981],[4.687323,8.204154,8.869452,6.894592],[-1.536060,1.069413,1.786463,-1.745019],[-2.237308,1.415889,8.069611,0.688296],[0.883065,-9.729800,5.693449,-0.886878],[5.637042,-1.292387,1.477370,-0.949882],[9.774176,7.770892,0.019355,-2.108306],[-0.161411,-9.541974,-8.995515,6.596310],[-6.169879,-7.463149,-9.502931,-7.451045],[-7.827810,-6.336520,5.206578,6.351099],[-8.795099,2.493567,-4.133917,9.851802],[5.572283,-9.056524,1.003877,-8.196124],[7.612176,2.571718,3.711521,2.719974]],[[1.463229,5.510501,8.855079,1.757807],[9.977951,8.880702,-0.324548,-3.419174],[-6.529596,1.333157,9.192749,-6.532898],[6.573569,-3.489062,3.419938,-2.927762],[7.756924,7.564626,0.770179,-3.628109],[8.520467,-8.567471,-2.626457,-5.228198],[-4.440436,-1.788408,5.974672,-6.608915],[7.524537,2.470917,9.298422,3.582676],[-8.181151,5.365877,1.756110,-4.790977],[7.930600,1.693330,-5.088961,-0.755992],[0.258514,-6.065989,0.005593,1.513444],[5.984524,-0.009602,4.305659,8.797210],[-4.274225,2.925778,-4.237206,4.676659]],[[-3.477247,0.861660,-4.384343,2.458452],[-1.054593,-9.150872,1.957926,-1.930239],[-6.423959,6.247980,-8.319452,3.300673],[1.917142,2.006841,3.691849,0.875453],[2.979431,-2.860052,-2.458178,4.169130],[2.637896,4.270327,-7.772445,3.049206],[-2.100073,-5.411952,4.388566,3.157119],[-0.338607,-3.991607,2.948631,6.588651],[-4.127663,-9.229254,-9.466423,1.751901],[3.606302,-5.991026,0.378861,1.251333],[-8.493113,-7.417628,3.766529,-0.563753],[-6.350514,1.476075,-5.739360,-2.522735],[-5.742695,9.310656,2.329938,-2.352791]],[[9.229656,-7.004251,-6.951832,-1.412661],[8.328054,-1.436841,1.982592,-2.477751],[7.497347,0.815194,-3.158968,-1.039997],[0.665804,1.201151,3.855488,7.387066],[-1.669009,7.931235,9.087088,8.846250],[-3.852443,-1.170899,-6.133241,-4.722083],[-4.406615,3.387369,6.942804,-8.697704],[-1.212953,0.600167,9.804221,-9.344855],[-7.459199,5.196978,-8.735791,-5.314725],[-3.462240,-4.820481,6.288675,0.748207],[-8.670873,1.342852,-0.009702,-6.657024],[4.359958,-7.051107,7.201100,0.054216],[-6.243264,2.923945,3.062889,-5.610897]],[[-2.847669,2.012362,1.827242,-7.225705],[2.860651,9.407304,3.561382,-7.333036],[-4.129186,8.352494,-8.570315,4.671891],[0.269643,4.810792,6.791863,0.879461],[-0.771838,8.618020,5.457755,3.175954],[6.447269,-8.144407,7.185871,-0.358274],[-7.703512,1.051089,-9.115802,7.130687],[5.557747,-6.818212,-8.884766,9.088376],[-3.141676,-7.048732,-8.878051,8.257647],[0.138024,-1.740300,-4.822040,-2.205180],[-4.828187,4.036949,-2.708356,5.491596],[0.008779,-3.110644,1.320831,-6.426702],[9.983539,1.860676,6.020464,9.558132]],[[-3.584219,5.905775,-0.692072,5.153760],[1.470485,6.932072,-3.291069,4.423997],[4.915181,4.196198,1.458318,-1.688688],[7.194144,-7.633771,-2.774803,1.079071],[3.385747,-6.540244,-8.225061,5.730068],[-5.142727,8.637669,7.205449,1.742836],[8.969258,3.445456,-2.488555,3.334010],[7.206775,-6.614401,6.158548,-2.517271],[-0.277266,8.070640,8.285428,-9.961697],[1.337316,-1.546644,1.059689,6.532432],[-2.825749,6.002097,3.806727,-2.436561],[6.971709,-8.352620,-5.321959,8.210390],[5.920689,1.249601,8.197717,1.168366]],[[-8.306502,6.276005,9.024301,-4.571474],[9.145415,-3.679576,-3.700230,3.040045],[-5.880986,-3.915731,6.727936,7.737292],[-3.764659,2.613748,9.794725,7.646876],[-0.170995,9.493125,1.586406,4.583830],[3.834760,2.030177,1.795803,2.821539],[4.188342,-0.555627,-5.226969,9.218062],[3.335327,-6.878865,6.629220,-8.104015],[5.584428,3.316912,2.773265,4.282368],[9.907088,-4.177859,-5.062847,-8.084686],[9.183704,-0.541060,-6.317706,8.618925],[-5.423517,-5.746017,8.133894,9.860364],[-3.418717,6.318364,8.347916,4.916620]],[[-4.494759,7.276376,3.558927,-3.881833],[7.275232,-3.523375,-7.456557,5.249661],[-5.514066,0.079244,-4.367656,-4.491576],[5.842551,-0.638133,-0.347221,8.081672],[3.754158,1.156506,-7.782805,5.680540],[-7.761680,-1.712931,3.249445,6.884613],[1.659820,8.478964,0.909014,8.095948],[-4.320437,-2.566299,8.125492,3.224664],[-7.475071,2.741769,-2.933183,-5.907499],[8.854516,0.164072,-3.992060,-9.903073],[5.480504,2.894990,4.219441,-6.384768],[-7.667002,-1.935393,-8.375104,-4.677917],[0.842489,-1.180697,8.759931,-1.974587]]], dtype = "float32")#candidate|5827|(9, 13, 4)|const|float32
var_5828 = relay.var("var_5828", dtype = "float32", shape = (9, 13, 4))#candidate|5828|(9, 13, 4)|var|float32
bop_5829 = relay.mod(const_5827.astype('float32'), relay.reshape(var_5828.astype('float32'), relay.shape_of(const_5827))) # shape=(9, 13, 4)
uop_5835 = relay.sqrt(bop_5829.astype('float64')) # shape=(9, 13, 4)
var_5838 = relay.var("var_5838", dtype = "float64", shape = (9, 13, 4))#candidate|5838|(9, 13, 4)|var|float64
bop_5839 = relay.equal(uop_5835.astype('bool'), relay.reshape(var_5838.astype('bool'), relay.shape_of(uop_5835))) # shape=(9, 13, 4)
func_4962_call = mod.get_global_var('func_4962')
func_4963_call = mutated_mod.get_global_var('func_4963')
call_5845 = func_4962_call()
call_5846 = func_4962_call()
output = relay.Tuple([bop_5839,call_5845,])
output2 = relay.Tuple([bop_5839,call_5846,])
func_5854 = relay.Function([var_5828,var_5838,], output)
mod['func_5854'] = func_5854
mod = relay.transform.InferType()(mod)
var_5855 = relay.var("var_5855", dtype = "float32", shape = (9, 13, 4))#candidate|5855|(9, 13, 4)|var|float32
var_5856 = relay.var("var_5856", dtype = "float64", shape = (9, 13, 4))#candidate|5856|(9, 13, 4)|var|float64
output = func_5854(var_5855,var_5856,)
func_5857 = relay.Function([var_5855,var_5856,], output)
mutated_mod['func_5857'] = func_5857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5665_call = mutated_mod.get_global_var('func_5665')
call_5884 = relay.TupleGetItem(func_5663_call(), 3)
call_5885 = relay.TupleGetItem(func_5665_call(), 3)
output = relay.Tuple([call_5884,])
output2 = relay.Tuple([call_5885,])
func_5901 = relay.Function([], output)
mod['func_5901'] = func_5901
mod = relay.transform.InferType()(mod)
mutated_mod['func_5901'] = func_5901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mutated_mod.get_global_var('func_5901')
call_5902 = func_5901_call()
output = call_5902
func_5903 = relay.Function([], output)
mutated_mod['func_5903'] = func_5903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5339_call = mod.get_global_var('func_5339')
func_5341_call = mutated_mod.get_global_var('func_5341')
call_5921 = func_5339_call()
call_5922 = func_5339_call()
func_4887_call = mod.get_global_var('func_4887')
func_4888_call = mutated_mod.get_global_var('func_4888')
call_5934 = func_4887_call()
call_5935 = func_4887_call()
bop_5946 = relay.multiply(call_5921.astype('int8'), relay.reshape(call_5934.astype('int8'), relay.shape_of(call_5921))) # shape=(12, 11, 12)
bop_5949 = relay.multiply(call_5922.astype('int8'), relay.reshape(call_5935.astype('int8'), relay.shape_of(call_5922))) # shape=(12, 11, 12)
func_3456_call = mod.get_global_var('func_3456')
func_3460_call = mutated_mod.get_global_var('func_3460')
var_5952 = relay.var("var_5952", dtype = "float64", shape = (30,))#candidate|5952|(30,)|var|float64
const_5953 = relay.const([2,-6,9,3,10,5,-5,10,-4,7,-8,-1,4,7,9,-9,-3,9,7,-8,-9,-3,-5,-8,1,4,-4,2,-8,-4,-4,-9,7,7,-9,-3,1,5,-6,-4,10,-6,-4,2,9,8,-8,10,-4,-7,3,3,5,-9,-1,-8,2,5,4,5,-3,7,-9,-7,4,-10,-4,-3,1,10,7,-2,3,5,7,3,5,3,6,9,-4,1,1,8,7,3,7,-3,7,10,-9,5,-2,8,-8,2,-5,1,4,-8,-7,-5,6,-7,-9,6,9,-2,10,10,8,-8,-4,8,8,9,7,-2,-5,8,5,1,-5,-6,4,3,-10,4,-1,2,-8,-7,-6,-10,7,4,-1,-9,-10,3,4,8,8,8,6,-1,4,1,-8,-2,6,10,-2,6,-5,-10,5,-3,-9,6,-4,10,-6,7,-2,8,4,7,-6,-10,2,-8,-5,1,3,-1,-6,-2,-4,6,-5,-5,-2,-6,5,-9,-5,3,-7,8,-6,8,10,4,-8,-9,5,-3,6,7,-7,-8,3,-4,8,2,-9,-5,10,-2,-10,-3,-4,-1,-8,-2,5,7,1,-8,-3,4,1,-10,7,-9,-4,-1,7,-1,-2,-9,-4,3,-6,-6,-1,1,-8,-1,5,-3,10,-9,5,3,-4,-4,-7,-4,10,-3,2,3,7,6,-3,2,2,4,1,7,-10,-4,10,3,9,10,-2,-3,6,2,8,-5,-5,-10,-6,4,9,-4,-7,8,-5,-9,-1,5,-2,7,10,10,2,-4,8,6,-5,6,-9,7,-5,8,-9,-5,1,10,-5,9,-2,-8,10,-8,4,6,-2,-5,1,5,10,10,-4,-5,1,-8,8,3,-10,4,7,-5,-4,6,-6,7,10,7,6,-5,-7,-9,-9,-6,3,10,1,7,-8,3,5,-9,-5,-9,2,9,-6,-6,-9,3,4,2,-1,-1,3,2,-1,-2,-1,9,-6,-3,-7,7,-5,7,-6,-3,7,3,-5,9,9,-4,4,-4,-4,-3,7,-6,-4,10,-2,-4,-6,-1,3,-8,-1,3,-8,6,-3,2,2,-2,2,4,-8,5,7,-4,-5,-3,7,-4,10,-8,10,2,-9,-8,-10,-5,3,2,-5,10,-1,8,6,4,3,-8,-3,7,-9,-2,-9,7,6,-2,6,-3,-3,-2,5,7,-7,1,9,9,-2,7,8,3,-1,-5,7,1,-8,-2,-10,-1,6,-4,-9,-5,8,2,3,-9,10,-3,-1,8,-9,4,-9,-4,-6,-2,-5,-6,8,-8,3,7,-3,-4,-5,4,3,1,3,-9,-8,-4,9,-8,5,-9,-5,-6,5,3,-2,-3,-4,-9,4,6,10,-6,7,7,2,-4,10,-7,10,6,6,-7,6,9,-3,-3,-6,-3,5,-9,-5,7,-3,-4,-4,-4,-2,3,6,-9,1,-3,10,-10,-7,-3,-1,2,5,-8,-6,9,5,7,8,-2,7,3,-3,-4,3,-5,-10,-10,-10,-5,-3,8,8,1,1,-2,1,8,10,4,-1,-8,3,7,-4,-4,5,-7,7,-9,-1,9,-6,-4,8,10,7,10,5,5,-10,-8,-1,9,3,8,-9,-6,3,3,-9,3,-2,6,-2,7,-2,-8,10,-2,-5,4,7,-1,1,-4,-1,-4,3,8,-3,-9,2,9,-5,2,1,-6,-8,-1,-2,-9,3,6,5,5,-1,-4,-4,-4,6,-10,5,-7,4,-4,-4,-9,-6,5,1,9,4,6,8,8,-7,3,6,-7,-10,7,3,1,3,9,7,7,-3,1,4,-7,8,4,-2,2,-5,-5,7,8,-1,-7,6,10,-8,1,10,4,6,10,1,9,3,4,10,-1,10,-1,-1,-4,-4,10,10,10,1,7,1,8,10,3,6,2,1,10,4,10,10,-10,1,-8,9,4,1,-6,-8,2,-3,9,8,8,5,10,10,-6,1,3,1,-1,-1,-5,6,-2,2,6,1,9,-4,3,-8,-4,5,10,7,8,10,7,-1,-6,-10,-10,-8,9,8,5,3,7,-7,3,8,-1,5,4,-9,-6,5,-2,-4,5,6,-10,-1,4,1,3,-1,8,4,-1,-2,-4,4,10,-10,2,6,3,-6,-5,-6,-6,3,-4,-8,2,5,-9,-1,-9,-3,-6,-10,4,8,4,-8,-3,-6,9,-4,-4,-6,-8,-1,9,5,-2,-4,2,8,8,-6,-8,-7,-6,10,10,10,-3,2,-4,-7,3,-5,-5,-10,-10,1,-1,-6,1,-7,-2,-6,8,8,6,-8,-9,5,5,-7,4,-2,-8,3,6,10,-7,-4,-6,-6,-10,-1,-9,-4,-4,1,1,-4,-4,10,-5,10,7,-6,8,5,-8,10,-5,-4,-7,6,8,9,-8,-6,9,4,1,9,4,1,10,-3,-8,-3,-2,5,10,-6,2,1,7,7,9,-7,-10,7,10,9,7,-2,-3,-10,10,-1,-5,6,-2,-10,-3,-4,-5,-4,-2,-10,-5,7,9,10,3,-6,6,10,6,-8,7,1,6,-7,-10,-7,-9,-4,-2,-10,6,3,9,-1,-5,4,-5,-6,-4,-9,-7,-1,1,-7,-8,7,-4,-9,8,-7,-2,-7,-8,10,-5,6,5,10,-3,-8,7,-6,-8,5,-6,10,-3,-5,-9,5,-3,-6,10,-4,-7,3,-10,5,3,-5,-2,5,2,-10,-6,-5,-8,7,8,-1,8,7,3,7,3,3,6,3,-1,-7,8,5,-2,3,8,5,8,-3,5,6,-3,-3,8,-5,7,-5,-5,-10,-3,-8,-7,-4,-6,-5,-8,-1,10,9,10,-9,9,3,-2,-2,-5,5,-7,10,-7,-6,-8,7,-3,-7,2,1,10,5,8,-7,10,-9,-1,2,-4,3,5,9,8,-10,-4,10,-6,3,2,7,2,-1,-4,10,-1,-7,7,-4,-4,3,-5,9,8,5,6,6,-9,2,1,-1,-9,9,-6,8,5,-7,4,4,-10,4,1,3,-8,-3,-6,-9,3,-10,-1,9,10,6,4,8,9,9,3,-1,-6,9,-1,9,-8,-4,-7,-5,-1,-3,-3,8,-4,-3,10,9,10,-1,10,-4,-9,7,3,3,5,8,8,9,6,10,-5,3,-8,-6,-4,-7,1,9,6,-10,9,-8,-8,8,8,-10,-8,8,-7,6,-7,6,-7,-3,-8,-5,-3,-1,-9,-2,6,9,5,10,2,-7,9,8,-10,-2,-6,-3,-9,7,-5,4,-3,5,-10,1,-3,2,2,9,-5,-10,7,9,10,-3,-6,-8,9,6,2,-3,6,6,-9,1,5,4,-5,-7,8,-3,6,1,7,-7,5,-4,7,-10,-5,10,-2,-4,-7,5,-1,-8,-2,-2,-6,-7,-1,1,-1,4,-4,7,-9,5,2,-1,-10,7,10,10,10,-9,8,-9,-5,-6,7,4,-4,4,-1,-8,6,5,-9,-5,2,-2,-6,-9,3,-9,-1,-10,4,-3,-9,-7,8,-4,-7,-6,5,-9,-8,-1,6,-5,4,3,9,2,7,-6,3,10,9,9,3,-4,-8,5,-6,2,6,-8,1,5,-1,-1,-1,4,-8,-1,-1,-3,9,-5,-8,4,2,9,2,-9,6,-7,2,4,-2,-10,-9,4,-1,-2,-5,1,8,1,5,-5,4,8,3,6,7,10,7,4,2,4,-4,-7,6,-4,-1,-4,1,1,-3,1,10,-8,5,4,-9,7,7,6,1,8,7,7,3,-1,-2,8,4,-9,-9,-8,-5,-2,6,-6,7,9,6,-3,-3,-7,9,-6,-3,-1,10,-1,-4,-5,-2,-9,7,-5,5,1,-2], dtype = "uint64")#candidate|5953|(1440,)|const|uint64
var_5954 = relay.var("var_5954", dtype = "float32", shape = (28, 4))#candidate|5954|(28, 4)|var|float32
call_5951 = relay.TupleGetItem(func_3456_call(relay.reshape(var_5952.astype('float64'), [1, 10, 3]), relay.reshape(const_5953.astype('uint64'), [2, 720]), relay.reshape(var_5954.astype('float32'), [112,]), ), 1)
call_5955 = relay.TupleGetItem(func_3460_call(relay.reshape(var_5952.astype('float64'), [1, 10, 3]), relay.reshape(const_5953.astype('uint64'), [2, 720]), relay.reshape(var_5954.astype('float32'), [112,]), ), 1)
output = relay.Tuple([bop_5946,call_5951,var_5952,const_5953,var_5954,])
output2 = relay.Tuple([bop_5949,call_5955,var_5952,const_5953,var_5954,])
func_5964 = relay.Function([var_5952,var_5954,], output)
mod['func_5964'] = func_5964
mod = relay.transform.InferType()(mod)
mutated_mod['func_5964'] = func_5964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5964_call = mutated_mod.get_global_var('func_5964')
var_5966 = relay.var("var_5966", dtype = "float64", shape = (30,))#candidate|5966|(30,)|var|float64
var_5967 = relay.var("var_5967", dtype = "float32", shape = (28, 4))#candidate|5967|(28, 4)|var|float32
call_5965 = func_5964_call(var_5966,var_5967,)
output = call_5965
func_5968 = relay.Function([var_5966,var_5967,], output)
mutated_mod['func_5968'] = func_5968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5619_call = mod.get_global_var('func_5619')
func_5620_call = mutated_mod.get_global_var('func_5620')
call_6020 = func_5619_call()
call_6021 = func_5619_call()
output = call_6020
output2 = call_6021
func_6043 = relay.Function([], output)
mod['func_6043'] = func_6043
mod = relay.transform.InferType()(mod)
output = func_6043()
func_6044 = relay.Function([], output)
mutated_mod['func_6044'] = func_6044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5734_call = mod.get_global_var('func_5734')
func_5735_call = mutated_mod.get_global_var('func_5735')
call_6090 = relay.TupleGetItem(func_5734_call(), 1)
call_6091 = relay.TupleGetItem(func_5735_call(), 1)
output = relay.Tuple([call_6090,])
output2 = relay.Tuple([call_6091,])
func_6098 = relay.Function([], output)
mod['func_6098'] = func_6098
mod = relay.transform.InferType()(mod)
mutated_mod['func_6098'] = func_6098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6098_call = mutated_mod.get_global_var('func_6098')
call_6099 = func_6098_call()
output = call_6099
func_6100 = relay.Function([], output)
mutated_mod['func_6100'] = func_6100
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6136 = relay.var("var_6136", dtype = "float32", shape = (13, 8, 10))#candidate|6136|(13, 8, 10)|var|float32
uop_6137 = relay.asinh(var_6136.astype('float32')) # shape=(13, 8, 10)
bop_6139 = relay.left_shift(var_6136.astype('uint32'), relay.reshape(uop_6137.astype('uint32'), relay.shape_of(var_6136))) # shape=(13, 8, 10)
output = bop_6139
output2 = bop_6139
func_6147 = relay.Function([var_6136,], output)
mod['func_6147'] = func_6147
mod = relay.transform.InferType()(mod)
var_6148 = relay.var("var_6148", dtype = "float32", shape = (13, 8, 10))#candidate|6148|(13, 8, 10)|var|float32
output = func_6147(var_6148)
func_6149 = relay.Function([var_6148], output)
mutated_mod['func_6149'] = func_6149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5446_call = mod.get_global_var('func_5446')
func_5448_call = mutated_mod.get_global_var('func_5448')
call_6182 = relay.TupleGetItem(func_5446_call(), 0)
call_6183 = relay.TupleGetItem(func_5448_call(), 0)
output = call_6182
output2 = call_6183
func_6186 = relay.Function([], output)
mod['func_6186'] = func_6186
mod = relay.transform.InferType()(mod)
output = func_6186()
func_6187 = relay.Function([], output)
mutated_mod['func_6187'] = func_6187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mod.get_global_var('func_5901')
func_5903_call = mutated_mod.get_global_var('func_5903')
call_6262 = relay.TupleGetItem(func_5901_call(), 0)
call_6263 = relay.TupleGetItem(func_5903_call(), 0)
output = call_6262
output2 = call_6263
func_6298 = relay.Function([], output)
mod['func_6298'] = func_6298
mod = relay.transform.InferType()(mod)
mutated_mod['func_6298'] = func_6298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6298_call = mutated_mod.get_global_var('func_6298')
call_6299 = func_6298_call()
output = call_6299
func_6300 = relay.Function([], output)
mutated_mod['func_6300'] = func_6300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6043_call = mod.get_global_var('func_6043')
func_6044_call = mutated_mod.get_global_var('func_6044')
call_6301 = func_6043_call()
call_6302 = func_6043_call()
output = relay.Tuple([call_6301,])
output2 = relay.Tuple([call_6302,])
func_6310 = relay.Function([], output)
mod['func_6310'] = func_6310
mod = relay.transform.InferType()(mod)
mutated_mod['func_6310'] = func_6310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6310_call = mutated_mod.get_global_var('func_6310')
call_6311 = func_6310_call()
output = call_6311
func_6312 = relay.Function([], output)
mutated_mod['func_6312'] = func_6312
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6313 = relay.var("var_6313", dtype = "float32", shape = (10, 2, 16))#candidate|6313|(10, 2, 16)|var|float32
uop_6314 = relay.sin(var_6313.astype('float32')) # shape=(10, 2, 16)
output = relay.Tuple([uop_6314,])
output2 = relay.Tuple([uop_6314,])
func_6319 = relay.Function([var_6313,], output)
mod['func_6319'] = func_6319
mod = relay.transform.InferType()(mod)
mutated_mod['func_6319'] = func_6319
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6320 = relay.var("var_6320", dtype = "float32", shape = (10, 2, 16))#candidate|6320|(10, 2, 16)|var|float32
func_6319_call = mutated_mod.get_global_var('func_6319')
call_6321 = func_6319_call(var_6320)
output = call_6321
func_6322 = relay.Function([var_6320], output)
mutated_mod['func_6322'] = func_6322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5535_call = mod.get_global_var('func_5535')
func_5536_call = mutated_mod.get_global_var('func_5536')
call_6330 = relay.TupleGetItem(func_5535_call(), 0)
call_6331 = relay.TupleGetItem(func_5536_call(), 0)
const_6344 = relay.const([[[9,9,9,-4,-2,5,8,-8,-6,8,-6,-2],[-5,10,4,-7,9,2,3,10,7,-9,-7,-9],[-7,-2,5,6,9,-6,-3,5,1,9,5,9],[7,8,-6,6,4,-6,4,-1,-6,-3,1,3],[7,-6,-3,6,-3,-3,-1,-2,-7,-6,-10,3],[5,7,7,-8,3,-7,-8,-6,7,-2,8,-3],[-4,-7,7,2,-7,-8,8,9,7,-10,10,8],[7,6,-5,2,8,-4,1,-7,-5,-1,8,-6],[7,-1,-2,-4,10,4,-1,-3,-8,-5,2,-7],[6,2,9,10,4,3,-2,-6,-9,8,-9,-10],[-9,-7,-7,-8,4,7,-7,-9,10,-8,-1,7]],[[-5,1,-3,4,-5,4,5,5,3,-5,10,-1],[8,-7,4,-2,-6,-6,3,2,10,2,-8,-7],[2,9,-3,-4,-2,1,-2,4,5,8,9,-10],[4,4,-10,10,10,3,4,6,10,-9,-2,2],[-4,-5,-8,1,6,3,6,-7,-7,-2,10,4],[-7,4,-9,-7,5,-7,7,-5,3,1,1,8],[10,8,9,-2,6,-6,-10,-9,6,-8,-4,-8],[-8,10,8,-1,7,-2,3,3,-10,6,1,-5],[-1,-10,5,-6,8,6,4,-8,-5,5,6,9],[6,-6,-1,4,5,9,-5,-2,-2,10,-6,-5],[1,-10,10,3,-5,5,-9,7,4,-3,-4,-1]],[[-5,-10,-3,3,7,-1,3,2,-2,-3,5,-6],[-8,7,7,-8,-3,5,-3,2,-2,-6,-6,2],[-3,-10,4,7,-6,-6,6,-7,-2,7,-1,-5],[1,-9,-8,-6,7,-9,-3,-7,-3,-3,-6,-10],[-3,4,-3,10,-8,2,1,7,3,10,-4,-4],[-9,8,7,4,4,-7,-6,-2,7,10,-1,5],[5,-7,-10,8,7,-5,-3,-8,8,5,-4,8],[-10,-7,-7,4,-10,3,-3,9,8,-6,-4,9],[2,6,2,7,-4,4,9,-7,8,-8,2,2],[-5,10,-5,-3,-4,2,5,-7,-4,-2,8,1],[-9,8,-8,1,9,3,2,-10,7,2,3,-10]],[[-10,-1,2,-6,-3,-4,5,6,-1,-7,-7,9],[10,5,-1,-10,7,-1,5,2,4,-1,-5,2],[-8,-7,7,-8,-7,10,-7,-1,4,-5,-9,-9],[5,3,-6,4,-5,10,10,1,-10,7,5,-4],[-8,-8,-6,-2,-6,10,10,-8,8,-1,8,6],[-4,7,-1,-8,8,7,-4,6,4,4,2,2],[-1,-8,2,-7,9,6,5,-8,-10,8,4,4],[9,-5,-1,3,-8,1,7,8,1,5,-8,8],[7,-3,-9,-10,-4,-1,10,9,7,1,7,1],[5,-4,8,-2,10,-8,2,-7,-3,-3,4,-2],[-1,6,-2,6,4,10,-5,-9,-6,4,-4,-6]],[[1,9,-1,-8,-4,8,3,3,7,-9,6,7],[-6,-9,2,-9,-5,10,-1,-8,-3,3,2,1],[-9,-4,-2,-6,2,9,3,6,-8,3,5,6],[-8,1,-5,1,-5,-9,-6,5,10,-1,-4,10],[5,1,5,-7,-6,-4,1,5,2,4,8,-7],[5,-1,9,3,7,4,-1,6,9,8,-7,9],[8,-1,-5,5,8,-3,9,9,-9,-9,-5,-8],[5,6,1,-5,-1,5,5,-9,8,-8,-5,-3],[3,5,-7,4,-10,-5,-8,-2,-9,6,-9,-6],[5,1,4,-6,-6,-5,-3,4,-1,-6,3,9],[-5,7,10,-10,-9,6,-7,-2,-5,-7,-8,-4]],[[1,-10,-10,-8,4,10,1,8,10,-5,8,1],[4,4,8,3,-7,-6,1,-3,-1,8,10,-2],[-2,9,-2,-5,-6,-10,-6,6,5,-10,7,-9],[6,-10,3,-9,9,-7,8,-9,1,-1,-2,2],[-10,-2,-8,7,8,10,-9,8,-7,-9,9,9],[9,10,-6,9,-5,-5,3,6,-9,-5,-5,4],[-10,-7,3,2,6,3,4,-10,-2,3,6,7],[4,-2,6,1,3,8,3,-7,-4,5,-10,-9],[1,-8,-9,-10,8,4,-2,-2,2,-8,-2,6],[-3,3,5,8,2,-2,-10,6,6,3,-4,2],[5,-4,5,2,-10,-5,-9,-2,-8,1,-7,-7]],[[-6,3,-5,9,5,8,5,9,-7,4,-5,6],[-1,3,-6,4,-1,6,-10,-8,10,4,-8,-1],[-7,-10,1,8,-4,1,1,4,2,10,4,-8],[5,-10,-7,9,-5,-8,6,-10,9,2,7,-4],[3,3,-5,2,5,5,2,-7,5,-5,5,3],[7,4,9,-4,-5,10,10,-7,3,-8,-6,-3],[-4,1,-2,-3,-8,-2,6,-9,-5,-8,2,-9],[-9,-1,-3,7,-3,-7,3,-3,-7,-9,-2,-4],[1,9,9,-10,4,5,-6,-5,1,3,9,6],[-2,9,-5,-1,6,10,8,4,-3,-1,1,9],[9,-3,-7,-6,-4,-5,9,5,-5,-1,-7,9]],[[5,-1,8,-6,10,-7,8,10,-10,3,8,-7],[7,8,-4,-5,6,3,4,3,1,-4,3,3],[6,5,5,9,-1,-5,-3,-3,-6,5,6,-5],[7,-7,1,6,-5,-3,4,-4,10,-9,2,2],[-8,8,-4,-2,2,1,-9,-5,7,-7,-2,5],[10,5,-6,10,3,-10,2,-7,-1,-10,-7,-7],[2,7,-6,-6,-8,8,5,10,7,6,-1,-4],[5,-7,8,7,7,-6,8,-1,10,-2,9,-6],[1,-4,8,7,3,-6,-7,2,8,-8,9,-5],[-9,5,-7,4,4,-2,-7,4,2,-2,-4,6],[-2,10,-4,-2,10,-10,-8,-6,-2,3,-5,1]],[[10,10,-8,7,1,-3,2,9,-3,-8,-5,3],[3,9,6,7,3,-9,-6,-3,4,3,1,6],[10,5,10,-3,6,3,3,-6,-9,-9,1,-1],[8,-1,-5,5,2,-3,7,-7,9,5,-10,-10],[7,-6,-1,-5,3,10,-2,-5,4,-1,5,6],[-10,6,3,10,5,-2,5,5,-3,5,-9,-4],[-10,6,4,9,-4,-3,3,10,-1,4,10,-3],[-2,2,1,-4,10,-6,1,-6,4,-3,5,5],[-6,4,-6,-10,-7,10,6,-1,-4,-1,-4,-2],[-8,-5,8,9,-9,-9,9,-5,-2,4,-1,-4],[-4,1,-2,6,10,3,1,4,-6,-5,2,3]],[[5,2,4,10,-3,-8,8,6,-7,-7,-2,10],[-4,5,7,10,5,7,-9,9,-1,-8,-1,6],[1,6,-4,3,1,4,6,-9,5,2,4,8],[8,-6,-8,5,-6,5,7,-8,6,4,7,2],[-9,7,-6,3,-9,-3,9,-6,-10,7,-1,-4],[10,-6,3,-8,-2,8,-8,-2,-7,-3,4,3],[2,-9,-8,9,-3,2,5,-8,3,-7,-6,7],[5,-4,-1,10,9,-8,4,-5,-4,-5,-7,6],[-1,-2,-1,4,10,4,5,7,-5,2,-2,-10],[-4,-5,-10,-2,3,1,4,1,-5,5,1,5],[9,-9,4,9,-6,10,7,-10,5,-6,9,1]],[[2,-4,-10,-9,6,-1,-7,2,-7,9,2,4],[-1,6,-6,3,-5,-9,6,5,5,-6,-8,-6],[-9,-7,-6,-10,-9,-8,3,3,10,4,-1,10],[9,-8,2,-10,-1,-4,9,-6,10,5,7,3],[1,1,-10,-8,7,-4,2,-10,4,-9,-9,1],[-1,5,6,3,-7,9,-7,8,5,-1,-7,-9],[6,-4,-5,6,-3,1,-9,9,1,7,7,10],[-7,-8,-5,-7,-4,-5,8,-4,2,-2,-10,-9],[9,6,1,-7,-8,-3,1,-3,-1,-6,2,1],[3,-5,4,-1,1,-8,-5,1,9,6,3,9],[-8,4,4,3,1,-10,3,-10,3,7,5,1]],[[1,6,-5,-10,9,-4,-3,10,-5,1,-6,-4],[-8,-4,8,-9,-1,5,-1,2,2,2,-4,-1],[5,-9,-2,-9,-2,5,8,-3,2,-6,4,4],[-5,3,-1,8,-6,-8,-8,9,9,3,8,6],[-3,-3,-2,5,5,7,-2,-3,-2,7,7,-1],[7,-4,10,-7,4,-10,-8,4,-4,-1,-7,-5],[9,-10,-7,5,-5,-1,8,-7,-1,-9,-1,4],[7,2,-2,-3,-10,-7,4,-10,-10,-5,2,-3],[9,2,6,-7,-1,-6,-7,-6,-2,5,7,-6],[-10,-7,2,-3,-3,-5,1,1,3,7,-6,9],[5,5,-1,9,1,2,-8,-6,-2,-10,-5,6]]], dtype = "uint16")#candidate|6344|(12, 11, 12)|const|uint16
bop_6345 = relay.logical_or(call_6330.astype('bool'), relay.reshape(const_6344.astype('bool'), relay.shape_of(call_6330))) # shape=(12, 11, 12)
bop_6348 = relay.logical_or(call_6331.astype('bool'), relay.reshape(const_6344.astype('bool'), relay.shape_of(call_6331))) # shape=(12, 11, 12)
output = relay.Tuple([bop_6345,])
output2 = relay.Tuple([bop_6348,])
func_6351 = relay.Function([], output)
mod['func_6351'] = func_6351
mod = relay.transform.InferType()(mod)
output = func_6351()
func_6352 = relay.Function([], output)
mutated_mod['func_6352'] = func_6352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6098_call = mod.get_global_var('func_6098')
func_6100_call = mutated_mod.get_global_var('func_6100')
call_6367 = relay.TupleGetItem(func_6098_call(), 0)
call_6368 = relay.TupleGetItem(func_6100_call(), 0)
output = relay.Tuple([call_6367,])
output2 = relay.Tuple([call_6368,])
func_6378 = relay.Function([], output)
mod['func_6378'] = func_6378
mod = relay.transform.InferType()(mod)
mutated_mod['func_6378'] = func_6378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6378_call = mutated_mod.get_global_var('func_6378')
call_6379 = func_6378_call()
output = call_6379
func_6380 = relay.Function([], output)
mutated_mod['func_6380'] = func_6380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5619_call = mod.get_global_var('func_5619')
func_5620_call = mutated_mod.get_global_var('func_5620')
call_6418 = func_5619_call()
call_6419 = func_5619_call()
func_78_call = mod.get_global_var('func_78')
func_81_call = mutated_mod.get_global_var('func_81')
const_6427 = relay.const([-5,-7,-7,-9,-7,-4,10,8,-1,-6,-9,-8,8,-4,-7,6,-3,-8,-3,3,-2,7,-5,4,2,-10,2,7,-1,5,-5,9,-1,8,-8,3,10,-1,-5,-2,5,-9,1,-9,8,-10,4,-8,-8,10,-1,-5,-3,7,-3,6,-10,7,10,4,1,-8,5,1,-6,9,-5,8,1,5,-4,-2,-5,-8,6,-2,7,-1,10,6,-4,-1,9,7,5,-2,3,7,-2,5,-8,4,-1,-8,8,4,8,10,-7,5,-9,2,10,3,4,-1,-7,6,1,-6,7,-2,-7,10,9,5,4,-1,-7,-8,2,-3,-6,6,2,-8,-4,-4,7,7,1,6,-1,2,1,1,1,4,-1,-7,-6,4,7,3], dtype = "uint64")#candidate|6427|(144,)|const|uint64
const_6428 = relay.const([-2,3,-8,4,4,-9,-3,-7,10,-9,2,1,-5,1,-4,9,-5,-3,7,-10,-3,4,-1,-2,8,7,-7,6,-9,-2,-9,9,3,6,9,9,-7,7,3,-1,3,2,6,-3,-3,8,-6,-8,10,7,10,-1,-10,-6,-10,-5,-5,-4,-3,8,2,1,-4,6,-1,-3,-10,7,-5,-4,-10,-9,-6,-7,-1,-6,-10,10,-6,-10,-9,9,9,9,10,8,-10,6,1,-4,8,-5,9,-6,2,-3,1,10,7,-4,1,-9,-9,9,-8,-2,5,7,-3,-2,-9,5,6,-9,-3,1,5,6,-3,-5,8,-7,7,10,5,4,-4,3,6,-4,-3,4,-3,3,5,-6,5,9,-5,1,-8,3,8,5,-8,-3,-2,-10,-9,-10,10,9,-9,-7,-7,4,7,-1,-5,-9,3,-5,-10,1,-9,4,-7,5,3,-10,-2,10,-4,-4,-5,-4,-4,-5,-6,-4,7,2,-2,2,1,-10,8,2,-8,3,-9,4,-7,-8,7,-8,1,-10,9,10,6,2,-9,8,-3,3,-9,5,-9,-9,-6,-1,-6,-10,3,-4,-2,-2,3,10,-2,-7,-3,-7,9,9,10,2,10,-3,-2,1,5,6,-7,3,-1,-10,-5,7,10,1,5,-8,-3,-10,-7,-2,-6,2,5,3,-6,-10,-10,8,4,-2,1,4,10,-1,-4,-1,1,6,-7,-4,1,-7,-3,-1,-2,-6,2,9,3,-8,4,9,-3,3,-5,-4,-1,9,7,10,2,4,-7,5,4,-9,5,4,-5,7,-4,-6,3,2,5,9,10,-3,-6,-7,6,-9,-3,8,-3,-6,7,3,-7,-1,-9,-2,-8,5,5,-6,-5,-1,-1,-6,5,1,-6,-5,-1,7,-9,-6,4,-10,-3,-10,-3,-9,-2,-7,9,-9,4,9,-10,-5,5,-7,5,8,6,-6,-10,3,2,-7,10,7,9,1,-2,8,10,-6,3,-2,-1,7,-5,-3,2,1,5,-8,-4,4,5,-5,9,9,5,-2,2,-8,-2,6,-1,8,5,-2,4,6,10,-6,3,1,-7,-4,2,7,-5,10,10,-3,3,-3,-3,-8,-2,-10,-2,-5,-3,9,3,1,-9,-5,8,-1,7,-10,4,-1,-4,5,5,-6,-1,6,-1,3,8,6,-9,-9,-2,5,8,-4,1,10,-9,4,3,3,7,-5,-7,-4,-9,-1,3,7,-5,6,10,2,4,9,-6,-3,-10,1,-9,-2,-8,-9,10,-4,9,-1,-6,8,10,7,-10,2,-7,7,-8,4,3,-8,-9,8,-2,7,-3,-8,-2,1,-7,2,-4,2,8,-1,-9,-4,3,8,-4,-3,-10,1,8,-4,3,-9,-6,2,-6,7,-1,-6,4,10,-9,-6,-6,10,7,8,-3,8,9,5,10,-3,-2,7,-4,-5,-2,1,6,-1,-5,-2,6,-10,-9,-10,-7,-1,-3,5,7,-10,9,-8,-3,7,-6,8,8,-8,-1,5,3,-6,-8,4,1,6,-5,6,-1,-6,3,-2,-2,-9,9,10,1,8,9,7,-10,-1,-5,-3,-1,7,4,8,-8,-8,10,-10,-6,-2,-4,4,-2,-9,5,5,-2,1,-2,10,5,-10,6,7,8,-6,10,6,-8,-9,6,8,-8,4,9,3,-1,-8,-1,-10,4,-3,9,-6,-6,-9,-1,-2,7,1,9,-9,-5,9,10,8,5,-10,-5,-3,-3,5,9,-5,5,-4,9,5,8,3,3,-6,3,5,4,8,8,1,3,8,3,-2,-3,8,1,1,-1,2,-5,-3,-5,-6,4,-4,5,-5,-2,-1,-4,-10,10,-10,-8,-6,-1,2,10,1,-5,-3,7,-1,6,7,10,-6,-9,-3,9,2,8,6,-1,-2,-3,9,4,2,3,-10,7,5,-2,-2,6,3,-7,-2,7,7,8,4,7,1,-5,4,9,-7,6,6,-3,-7,-7,1,2,7,-5,3,-9,3,-7,6,-6,9,-2,3,-3,6,-9,5,6,-1,-5,4,-9,7,-5,4,-6,1,-7,3,-7,1,9,-7,-9,5,-3,7,-7,-9,-9,-2,-5,5,1,3,1,4,-9,-3,9,4,9,5,-8,-8,7,-6,-5,6,2,-2,3,-3,6,1,-5,7,-6,10,7,5,-8,-8,-3,-8,6,-8,-5,1,8,-7,7,-7,-6,-1,6,7,-6,-8,-1,-3,-6,4,-1,-5,7,2,-5,8,-9,-4,-4,1,-8,-8,5,8,2,5,8,-2,3,10,-4,-1,7,10,-8,9,1,-7,-9,-10,-8,4,-6,-1,-2,-8,9,-1,-5,-8,-3,-1,4,-3,-4,4,9,-9,8,-3,-1,9,2,-6,5,2,-1,-4,-2,10,9,9,5,10,-8,-4,-8,8,-6,-7,-8,-9,-9,-6,8,-6,-9,5,-2,7,-10,6,-3,7,1,-10,-2,-8,10,3,-9,6,-5,1,-6,7,9,-7,10,-4,8,9,-3,-3,10,-2,7,8,1,-9,-8,-6,-10,1,-6,2,-9,4,-10,4,4,-1,-5,1,8,2,6,5,10,-9,-3,8,2,5,-2,-3,4,-5,3,-7,-8,9,7,-2,-1,1,2,9,5,5,10,2,-2,-5,5,-5,10,-6,7,-4,-9,-6,8,6,-7,1,-10,3,9,6,1,6,-5,-8,10,-3,-1,-1,-2,2,-7,7,5,-7,8,-10,-5,10,-9,-2,-4,-8,-4,4,6,-3,1,8,10,2,-3,6,-9,7,7,-6,6,6,3,-6,-7,1,1,-2,9,8,8,-7,2,-6,-5,10,6,-1,-7,9,-8,-10,2,-7,-7,10,-10,-4,-2,3,-3,-1,10,-2,-1,-9,-1,-5,2,-1,-8,4,-7,2,1,9,10,-4,3,7,7,2,-6,1,10,5,-5,8,1,1,7,7,1,-8,-7,10,-3,-4,-9,5,8,-7,-2,5,7,5,-8,-1,-4,-5,6,-7,-6,-7,5,-6,3,6,-10,-9,6,1,6,5,3,-3,5,-9,2,-8,10,-1,-7,8,-7,4,-3,-1,9,3,6,-10,-7,-2,4,5,3,-7,-5,10,4,-9,-1,9,4,1,-7,1,-9,-2,-2,-7,5,5,-8,3,-9,10,1,-1,1,-7,2,-2,-2,3,3,8,3,7,-10,-3,3,10,-3,2,-2,2,-8,6,1,5,1,-2,-7,-6,-1,8,4,-9,9,-3,-10,-5,-1,10,10,4,9,6,6,4,2,-1,-10,-5,10,9,3,10,-5,-4,6,-8,7,-2,7,10,8,6,-10,4,-7,1,9,3,-4,10,-8,-4,4,8,1,-1,-7,-6,7,10,5,3,-5,-5,-5,8,5,8,9,1,2,-9,-10,-8,5,1,9,1,2,2,2,3,-1,9,5,-10,-3,-7,-1,7,3,5,4,6,1,5,8,-3,9,1,-1,2,-9,4,-6,-8,-1,-10,9,2,6,5,7,6,-9,9,-7,3,-4,10,2,-8,2,-9,-8,3,2,9,-6,-3,-10,-7,7,-7,-1,-10,4,7,8,7,10,-9,7,-10,-2,10,-9,-3,10,-7,6,5,7,-5,1,2,-1,-4,10,-3,-8,6,-1,6,-8,4,2,1,-3,-6,-10,6,1,2,-3,-6,8,-2,1,-2,-3,-1,6,-6,-10,-5,-3,4,10,-9,-8,6,7,5,-6,-8,-3,-3,3,-10,-4,-5,-4,4,4,-9,-8,-10,-4,4,-2,-8,1,6,1,-9,8,3,-5,-8,-8,-3,3,-1,10,5,-8,-9,-4,-3,8,1,7,10,1,-3,6,-7,-1,3,6,5], dtype = "uint64")#candidate|6428|(1440,)|const|uint64
call_6426 = relay.TupleGetItem(func_78_call(relay.reshape(const_6427.astype('uint64'), [9, 16, 1]), relay.reshape(const_6428.astype('uint64'), [9, 16, 10]), ), 0)
call_6429 = relay.TupleGetItem(func_81_call(relay.reshape(const_6427.astype('uint64'), [9, 16, 1]), relay.reshape(const_6428.astype('uint64'), [9, 16, 10]), ), 0)
func_5854_call = mod.get_global_var('func_5854')
func_5857_call = mutated_mod.get_global_var('func_5857')
var_6431 = relay.var("var_6431", dtype = "float32", shape = (468,))#candidate|6431|(468,)|var|float32
call_6430 = relay.TupleGetItem(func_5854_call(relay.reshape(var_6431.astype('float32'), [9, 13, 4]), relay.reshape(var_6431.astype('float64'), [9, 13, 4]), ), 1)
call_6432 = relay.TupleGetItem(func_5857_call(relay.reshape(var_6431.astype('float32'), [9, 13, 4]), relay.reshape(var_6431.astype('float64'), [9, 13, 4]), ), 1)
func_6378_call = mod.get_global_var('func_6378')
func_6380_call = mutated_mod.get_global_var('func_6380')
call_6437 = relay.TupleGetItem(func_6378_call(), 0)
call_6438 = relay.TupleGetItem(func_6380_call(), 0)
func_3456_call = mod.get_global_var('func_3456')
func_3460_call = mutated_mod.get_global_var('func_3460')
const_6445 = relay.const([1.951781,6.018982,-3.360938,-1.628748,-6.388450,-9.065447,6.685844,-3.890161,-1.420786,-9.541358,9.904218,-4.875773,-5.228192,4.187456,0.187654,-1.456971,6.861677,8.391981,5.933201,4.870634,-0.492605,-8.414909,-3.167982,1.425268,2.029518,-5.500377,-7.282592,8.595179,-9.877556,5.856044], dtype = "float64")#candidate|6445|(30,)|const|float64
const_6446 = relay.const([6.618086,-5.205841,-0.741462,9.388443,-0.513386,-4.210617,-8.561943,6.101439,-3.028370,9.118337,-4.173620,-5.701314,6.104515,2.980791,-2.236075,-3.806301,1.009402,-7.319680,5.524896,-1.783521,-9.687886,2.524075,-0.407240,2.185514,-8.967258,9.519758,-0.049897,-0.842161,-9.498212,-8.165810,-0.365064,-1.755575,9.744841,-9.273790,-1.185715,-8.827254,6.906706,-6.792438,-5.678116,-3.970183,-8.787426,-3.074264,2.609464,2.360009,-1.733970,-7.321454,-6.216887,6.389363,-8.599677,-2.195406,-4.542708,8.980631,-6.993082,-2.709937,2.263388,9.848171,-9.471669,-6.678995,3.929571,8.279351,-0.267699,-6.154780,-1.587532,-5.586037,7.329843,-3.273046,-8.837608,8.859030,6.219696,9.871635,-7.240218,-3.319143,-8.741866,-3.947925,-0.558871,-6.256801,-7.722280,7.238103,-5.284037,1.359508,-8.490900,7.721851,0.725322,9.282282,-9.341277,7.019490,-6.807759,5.956552,-7.905446,-5.161618,0.935328,7.089974,9.977261,9.092312,5.011587,-9.177367,-1.947644,-9.062620,-7.987488,-1.173321,-2.084310,-4.153454,3.727796,-8.168617,6.880932,8.069566,0.685489,-8.682968,4.049694,-6.281236,-2.613193,5.028559], dtype = "float32")#candidate|6446|(112,)|const|float32
call_6444 = relay.TupleGetItem(func_3456_call(relay.reshape(const_6445.astype('float64'), [1, 10, 3]), relay.reshape(call_6426.astype('uint64'), [2, 720]), relay.reshape(const_6446.astype('float32'), [112,]), ), 1)
call_6447 = relay.TupleGetItem(func_3460_call(relay.reshape(const_6445.astype('float64'), [1, 10, 3]), relay.reshape(call_6426.astype('uint64'), [2, 720]), relay.reshape(const_6446.astype('float32'), [112,]), ), 1)
func_6043_call = mod.get_global_var('func_6043')
func_6044_call = mutated_mod.get_global_var('func_6044')
call_6449 = func_6043_call()
call_6450 = func_6043_call()
output = relay.Tuple([call_6418,call_6426,const_6427,const_6428,call_6430,var_6431,call_6437,call_6444,const_6445,const_6446,call_6449,])
output2 = relay.Tuple([call_6419,call_6429,const_6427,const_6428,call_6432,var_6431,call_6438,call_6447,const_6445,const_6446,call_6450,])
func_6453 = relay.Function([var_6431,], output)
mod['func_6453'] = func_6453
mod = relay.transform.InferType()(mod)
mutated_mod['func_6453'] = func_6453
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6454 = relay.var("var_6454", dtype = "float32", shape = (468,))#candidate|6454|(468,)|var|float32
func_6453_call = mutated_mod.get_global_var('func_6453')
call_6455 = func_6453_call(var_6454)
output = call_6455
func_6456 = relay.Function([var_6454], output)
mutated_mod['func_6456'] = func_6456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6310_call = mod.get_global_var('func_6310')
func_6312_call = mutated_mod.get_global_var('func_6312')
call_6463 = relay.TupleGetItem(func_6310_call(), 0)
call_6464 = relay.TupleGetItem(func_6312_call(), 0)
func_4226_call = mod.get_global_var('func_4226')
func_4229_call = mutated_mod.get_global_var('func_4229')
var_6466 = relay.var("var_6466", dtype = "float64", shape = (1155,))#candidate|6466|(1155,)|var|float64
var_6467 = relay.var("var_6467", dtype = "int8", shape = (1404,))#candidate|6467|(1404,)|var|int8
call_6465 = relay.TupleGetItem(func_4226_call(relay.reshape(var_6466.astype('float64'), [7, 11, 15]), relay.reshape(var_6467.astype('int8'), [702, 2]), ), 0)
call_6468 = relay.TupleGetItem(func_4229_call(relay.reshape(var_6466.astype('float64'), [7, 11, 15]), relay.reshape(var_6467.astype('int8'), [702, 2]), ), 0)
func_6351_call = mod.get_global_var('func_6351')
func_6352_call = mutated_mod.get_global_var('func_6352')
call_6471 = relay.TupleGetItem(func_6351_call(), 0)
call_6472 = relay.TupleGetItem(func_6352_call(), 0)
output = relay.Tuple([call_6463,call_6465,var_6466,var_6467,call_6471,])
output2 = relay.Tuple([call_6464,call_6468,var_6466,var_6467,call_6472,])
func_6473 = relay.Function([var_6466,var_6467,], output)
mod['func_6473'] = func_6473
mod = relay.transform.InferType()(mod)
var_6474 = relay.var("var_6474", dtype = "float64", shape = (1155,))#candidate|6474|(1155,)|var|float64
var_6475 = relay.var("var_6475", dtype = "int8", shape = (1404,))#candidate|6475|(1404,)|var|int8
output = func_6473(var_6474,var_6475,)
func_6476 = relay.Function([var_6474,var_6475,], output)
mutated_mod['func_6476'] = func_6476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6378_call = mod.get_global_var('func_6378')
func_6380_call = mutated_mod.get_global_var('func_6380')
call_6478 = relay.TupleGetItem(func_6378_call(), 0)
call_6479 = relay.TupleGetItem(func_6380_call(), 0)
output = call_6478
output2 = call_6479
func_6482 = relay.Function([], output)
mod['func_6482'] = func_6482
mod = relay.transform.InferType()(mod)
output = func_6482()
func_6483 = relay.Function([], output)
mutated_mod['func_6483'] = func_6483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6310_call = mod.get_global_var('func_6310')
func_6312_call = mutated_mod.get_global_var('func_6312')
call_6537 = relay.TupleGetItem(func_6310_call(), 0)
call_6538 = relay.TupleGetItem(func_6312_call(), 0)
func_4962_call = mod.get_global_var('func_4962')
func_4963_call = mutated_mod.get_global_var('func_4963')
call_6551 = func_4962_call()
call_6552 = func_4962_call()
output = relay.Tuple([call_6537,call_6551,])
output2 = relay.Tuple([call_6538,call_6552,])
func_6554 = relay.Function([], output)
mod['func_6554'] = func_6554
mod = relay.transform.InferType()(mod)
output = func_6554()
func_6555 = relay.Function([], output)
mutated_mod['func_6555'] = func_6555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5665_call = mutated_mod.get_global_var('func_5665')
call_6585 = relay.TupleGetItem(func_5663_call(), 0)
call_6586 = relay.TupleGetItem(func_5665_call(), 0)
func_4226_call = mod.get_global_var('func_4226')
func_4229_call = mutated_mod.get_global_var('func_4229')
var_6600 = relay.var("var_6600", dtype = "float64", shape = (1155,))#candidate|6600|(1155,)|var|float64
var_6601 = relay.var("var_6601", dtype = "int8", shape = (1404,))#candidate|6601|(1404,)|var|int8
call_6599 = relay.TupleGetItem(func_4226_call(relay.reshape(var_6600.astype('float64'), [7, 11, 15]), relay.reshape(var_6601.astype('int8'), [702, 2]), ), 2)
call_6602 = relay.TupleGetItem(func_4229_call(relay.reshape(var_6600.astype('float64'), [7, 11, 15]), relay.reshape(var_6601.astype('int8'), [702, 2]), ), 2)
uop_6607 = relay.rsqrt(call_6599.astype('float32')) # shape=(7, 11, 15)
uop_6609 = relay.rsqrt(call_6602.astype('float32')) # shape=(7, 11, 15)
output = relay.Tuple([call_6585,var_6600,var_6601,uop_6607,])
output2 = relay.Tuple([call_6586,var_6600,var_6601,uop_6609,])
func_6611 = relay.Function([var_6600,var_6601,], output)
mod['func_6611'] = func_6611
mod = relay.transform.InferType()(mod)
var_6612 = relay.var("var_6612", dtype = "float64", shape = (1155,))#candidate|6612|(1155,)|var|float64
var_6613 = relay.var("var_6613", dtype = "int8", shape = (1404,))#candidate|6613|(1404,)|var|int8
output = func_6611(var_6612,var_6613,)
func_6614 = relay.Function([var_6612,var_6613,], output)
mutated_mod['func_6614'] = func_6614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6186_call = mod.get_global_var('func_6186')
func_6187_call = mutated_mod.get_global_var('func_6187')
call_6689 = func_6186_call()
call_6690 = func_6186_call()
output = relay.Tuple([call_6689,])
output2 = relay.Tuple([call_6690,])
func_6694 = relay.Function([], output)
mod['func_6694'] = func_6694
mod = relay.transform.InferType()(mod)
output = func_6694()
func_6695 = relay.Function([], output)
mutated_mod['func_6695'] = func_6695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6763 = relay.var("var_6763", dtype = "int8", shape = (16, 1, 7))#candidate|6763|(16, 1, 7)|var|int8
var_6764 = relay.var("var_6764", dtype = "int8", shape = (16, 8, 7))#candidate|6764|(16, 8, 7)|var|int8
bop_6765 = relay.logical_xor(var_6763.astype('int8'), var_6764.astype('int8')) # shape=(16, 8, 7)
func_5901_call = mod.get_global_var('func_5901')
func_5903_call = mutated_mod.get_global_var('func_5903')
call_6768 = relay.TupleGetItem(func_5901_call(), 0)
call_6769 = relay.TupleGetItem(func_5903_call(), 0)
func_5734_call = mod.get_global_var('func_5734')
func_5735_call = mutated_mod.get_global_var('func_5735')
call_6770 = relay.TupleGetItem(func_5734_call(), 0)
call_6771 = relay.TupleGetItem(func_5735_call(), 0)
output = relay.Tuple([bop_6765,call_6768,call_6770,])
output2 = relay.Tuple([bop_6765,call_6769,call_6771,])
func_6773 = relay.Function([var_6763,var_6764,], output)
mod['func_6773'] = func_6773
mod = relay.transform.InferType()(mod)
mutated_mod['func_6773'] = func_6773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6773_call = mutated_mod.get_global_var('func_6773')
var_6775 = relay.var("var_6775", dtype = "int8", shape = (16, 1, 7))#candidate|6775|(16, 1, 7)|var|int8
var_6776 = relay.var("var_6776", dtype = "int8", shape = (16, 8, 7))#candidate|6776|(16, 8, 7)|var|int8
call_6774 = func_6773_call(var_6775,var_6776,)
output = call_6774
func_6777 = relay.Function([var_6775,var_6776,], output)
mutated_mod['func_6777'] = func_6777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6554_call = mod.get_global_var('func_6554')
func_6555_call = mutated_mod.get_global_var('func_6555')
call_6792 = relay.TupleGetItem(func_6554_call(), 0)
call_6793 = relay.TupleGetItem(func_6555_call(), 0)
output = relay.Tuple([call_6792,])
output2 = relay.Tuple([call_6793,])
func_6798 = relay.Function([], output)
mod['func_6798'] = func_6798
mod = relay.transform.InferType()(mod)
output = func_6798()
func_6799 = relay.Function([], output)
mutated_mod['func_6799'] = func_6799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5208_call = mod.get_global_var('func_5208')
func_5210_call = mutated_mod.get_global_var('func_5210')
call_6839 = relay.TupleGetItem(func_5208_call(), 2)
call_6840 = relay.TupleGetItem(func_5210_call(), 2)
uop_6842 = relay.acosh(call_6839.astype('float32')) # shape=(5, 135)
uop_6844 = relay.acosh(call_6840.astype('float32')) # shape=(5, 135)
bop_6848 = relay.left_shift(uop_6842.astype('int16'), relay.reshape(call_6839.astype('int16'), relay.shape_of(uop_6842))) # shape=(5, 135)
bop_6851 = relay.left_shift(uop_6844.astype('int16'), relay.reshape(call_6840.astype('int16'), relay.shape_of(uop_6844))) # shape=(5, 135)
bop_6855 = relay.bitwise_and(uop_6842.astype('uint8'), relay.reshape(bop_6848.astype('uint8'), relay.shape_of(uop_6842))) # shape=(5, 135)
bop_6858 = relay.bitwise_and(uop_6844.astype('uint8'), relay.reshape(bop_6851.astype('uint8'), relay.shape_of(uop_6844))) # shape=(5, 135)
output = relay.Tuple([bop_6855,])
output2 = relay.Tuple([bop_6858,])
func_6861 = relay.Function([], output)
mod['func_6861'] = func_6861
mod = relay.transform.InferType()(mod)
output = func_6861()
func_6862 = relay.Function([], output)
mutated_mod['func_6862'] = func_6862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4962_call = mod.get_global_var('func_4962')
func_4963_call = mutated_mod.get_global_var('func_4963')
call_6866 = func_4962_call()
call_6867 = func_4962_call()
output = relay.Tuple([call_6866,])
output2 = relay.Tuple([call_6867,])
func_6885 = relay.Function([], output)
mod['func_6885'] = func_6885
mod = relay.transform.InferType()(mod)
output = func_6885()
func_6886 = relay.Function([], output)
mutated_mod['func_6886'] = func_6886
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6897 = relay.var("var_6897", dtype = "float64", shape = (5, 13, 10))#candidate|6897|(5, 13, 10)|var|float64
var_6898 = relay.var("var_6898", dtype = "float64", shape = (5, 13, 10))#candidate|6898|(5, 13, 10)|var|float64
bop_6899 = relay.add(var_6897.astype('float64'), relay.reshape(var_6898.astype('float64'), relay.shape_of(var_6897))) # shape=(5, 13, 10)
uop_6917 = relay.cosh(var_6898.astype('float64')) # shape=(5, 13, 10)
output = relay.Tuple([bop_6899,uop_6917,])
output2 = relay.Tuple([bop_6899,uop_6917,])
func_6921 = relay.Function([var_6897,var_6898,], output)
mod['func_6921'] = func_6921
mod = relay.transform.InferType()(mod)
var_6922 = relay.var("var_6922", dtype = "float64", shape = (5, 13, 10))#candidate|6922|(5, 13, 10)|var|float64
var_6923 = relay.var("var_6923", dtype = "float64", shape = (5, 13, 10))#candidate|6923|(5, 13, 10)|var|float64
output = func_6921(var_6922,var_6923,)
func_6924 = relay.Function([var_6922,var_6923,], output)
mutated_mod['func_6924'] = func_6924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6098_call = mod.get_global_var('func_6098')
func_6100_call = mutated_mod.get_global_var('func_6100')
call_6943 = relay.TupleGetItem(func_6098_call(), 0)
call_6944 = relay.TupleGetItem(func_6100_call(), 0)
var_6946 = relay.var("var_6946", dtype = "float64", shape = (5, 5, 8))#candidate|6946|(5, 5, 8)|var|float64
bop_6947 = relay.logical_and(call_6943.astype('bool'), relay.reshape(var_6946.astype('bool'), relay.shape_of(call_6943))) # shape=(5, 5, 8)
bop_6950 = relay.logical_and(call_6944.astype('bool'), relay.reshape(var_6946.astype('bool'), relay.shape_of(call_6944))) # shape=(5, 5, 8)
output = relay.Tuple([bop_6947,])
output2 = relay.Tuple([bop_6950,])
func_6951 = relay.Function([var_6946,], output)
mod['func_6951'] = func_6951
mod = relay.transform.InferType()(mod)
mutated_mod['func_6951'] = func_6951
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6952 = relay.var("var_6952", dtype = "float64", shape = (5, 5, 8))#candidate|6952|(5, 5, 8)|var|float64
func_6951_call = mutated_mod.get_global_var('func_6951')
call_6953 = func_6951_call(var_6952)
output = call_6953
func_6954 = relay.Function([var_6952], output)
mutated_mod['func_6954'] = func_6954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6861_call = mod.get_global_var('func_6861')
func_6862_call = mutated_mod.get_global_var('func_6862')
call_6986 = relay.TupleGetItem(func_6861_call(), 0)
call_6987 = relay.TupleGetItem(func_6862_call(), 0)
func_6482_call = mod.get_global_var('func_6482')
func_6483_call = mutated_mod.get_global_var('func_6483')
call_6997 = func_6482_call()
call_6998 = func_6482_call()
func_2056_call = mod.get_global_var('func_2056')
func_2060_call = mutated_mod.get_global_var('func_2060')
var_7027 = relay.var("var_7027", dtype = "int8", shape = (3, 468))#candidate|7027|(3, 468)|var|int8
call_7026 = relay.TupleGetItem(func_2056_call(relay.reshape(var_7027.astype('int8'), [9, 12, 13]), relay.reshape(var_7027.astype('int8'), [9, 12, 13]), relay.reshape(var_7027.astype('int8'), [9, 12, 13]), ), 0)
call_7028 = relay.TupleGetItem(func_2060_call(relay.reshape(var_7027.astype('int8'), [9, 12, 13]), relay.reshape(var_7027.astype('int8'), [9, 12, 13]), relay.reshape(var_7027.astype('int8'), [9, 12, 13]), ), 0)
func_6951_call = mod.get_global_var('func_6951')
func_6954_call = mutated_mod.get_global_var('func_6954')
call_7031 = relay.TupleGetItem(func_6951_call(relay.reshape(call_6997.astype('float64'), [5, 5, 8])), 0)
call_7032 = relay.TupleGetItem(func_6954_call(relay.reshape(call_6997.astype('float64'), [5, 5, 8])), 0)
output = relay.Tuple([call_6986,call_6997,call_7026,var_7027,call_7031,])
output2 = relay.Tuple([call_6987,call_6998,call_7028,var_7027,call_7032,])
func_7033 = relay.Function([var_7027,], output)
mod['func_7033'] = func_7033
mod = relay.transform.InferType()(mod)
var_7034 = relay.var("var_7034", dtype = "int8", shape = (3, 468))#candidate|7034|(3, 468)|var|int8
output = func_7033(var_7034)
func_7035 = relay.Function([var_7034], output)
mutated_mod['func_7035'] = func_7035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5339_call = mod.get_global_var('func_5339')
func_5341_call = mutated_mod.get_global_var('func_5341')
call_7066 = func_5339_call()
call_7067 = func_5339_call()
func_6473_call = mod.get_global_var('func_6473')
func_6476_call = mutated_mod.get_global_var('func_6476')
const_7080 = relay.const([[-7.991947,2.784990,8.339169],[-0.639322,1.705578,-1.995687],[-1.795532,2.410065,0.313528],[-6.978803,-6.758057,4.181722],[-1.054598,0.927122,-9.569360],[1.397485,-8.823772,-2.399681],[8.887070,8.853911,2.550674],[-8.219339,-6.231614,4.748105],[-1.760718,-6.698381,6.163178],[-0.709015,-9.097425,0.697364],[-3.577790,3.426092,6.042277],[-6.657912,-7.963425,4.403525],[-7.652811,-5.161529,8.817245],[-5.773872,5.036889,4.982200],[-7.924521,-7.225440,2.959568],[-6.090491,-4.348942,-7.079408],[9.379880,-9.786018,-1.067132],[0.520838,7.821266,-6.947801],[9.599049,-3.250092,7.948142],[-2.225205,-8.971366,-9.894395],[-6.828885,5.533517,-9.789528],[-2.205106,-5.952446,-2.202928],[-5.421174,4.229744,7.709623],[9.423090,3.882960,7.480998],[3.312818,-6.687638,-5.604474],[2.802612,9.311100,3.544565],[-9.652258,3.943474,-9.292307],[2.790547,-0.179942,0.632762],[-4.529898,-0.582075,-1.797224],[-3.175892,7.866728,6.798650],[1.604517,-4.842191,6.884266],[1.134351,1.837941,1.309244],[-0.328193,1.432935,5.228578],[-4.045594,3.263973,4.444468],[-8.728791,4.032581,8.168440],[6.111572,7.664492,0.527070],[5.705571,-4.654769,-1.524469],[-3.990153,-4.592463,1.000868],[-4.892030,-4.162130,-2.299387],[-4.267732,9.230856,4.159716],[-1.902265,-6.671516,-2.333892],[3.615142,-5.055433,2.369070],[2.429669,0.239491,8.265099],[7.088711,-1.462721,6.922861],[-0.927901,8.586695,0.981797],[-5.430516,9.845429,6.991272],[-7.777110,7.510301,-4.171901],[7.172914,-3.829537,8.740620],[5.371577,-7.848601,-3.297285],[7.766749,2.333663,3.214180],[2.565665,-5.746317,-0.540417],[-4.048380,-8.390847,9.144954],[-8.592025,-9.237502,5.845860],[-9.225004,7.639469,-1.152834],[-3.851639,-9.388944,-6.330464],[-5.716835,8.875983,-1.493282],[-3.572768,-2.302685,-8.445843],[9.175566,4.216201,0.263722],[-4.386659,7.408036,-0.396641],[5.407173,5.136939,-4.981012],[0.120738,7.694090,-3.338273],[-8.438497,4.303864,5.521944],[-7.495778,-1.293648,8.853419],[-6.479942,-3.910200,7.634890],[1.838698,9.550453,-4.287473],[-5.107366,4.682954,-0.718741],[9.925906,-9.362179,8.154473],[-2.490280,3.406821,9.932421],[9.146723,-8.913097,-7.191772],[-0.963254,-1.343507,-5.526001],[-7.498871,0.821933,8.625722],[5.097786,-9.965250,2.947983],[2.224935,-0.498317,-5.625503],[2.492782,0.518717,9.586076],[8.641533,-4.371363,-6.985868],[-7.624615,6.754380,-0.809134],[0.477882,-4.312739,2.538454],[-1.375258,8.488411,0.495465],[-0.544503,5.844252,-1.563184],[3.882828,2.495394,-1.594120],[1.021463,-1.978940,-3.206138],[3.865350,-4.968561,8.917955],[6.345251,-1.763547,-9.334143],[-5.270161,3.199366,8.471810],[3.662864,6.844873,-6.367973],[-5.662646,5.576885,-1.824925],[9.088538,9.913756,3.076134],[5.633224,-3.234590,-0.645620],[-5.022791,-1.160826,-4.190231],[0.102894,-1.953378,-8.859997],[-2.405462,-3.437362,2.418071],[1.793857,-0.520171,-4.687895],[-3.060265,-9.388821,-9.935233],[0.248874,-4.444604,-8.145798],[5.089514,-9.384719,-6.917683],[-6.795425,9.303742,-2.219544],[-3.096730,4.134871,9.714496],[-0.770271,9.340754,-1.574984],[8.255604,-6.415489,5.861889],[3.732512,8.556576,4.082790],[-7.574407,-8.444922,-2.347477],[3.213022,4.849051,-9.723949],[-8.372367,-3.120808,1.425385],[8.951341,-2.058762,-9.604780],[-8.139611,8.112078,5.040259],[-5.460710,-2.734379,8.968733],[5.899642,8.238842,9.771752],[6.270110,1.204357,-9.736700],[9.339097,3.088541,3.562148],[1.362773,1.033405,6.524698],[3.014032,9.058201,1.430729],[0.363986,9.354145,0.892316],[-5.727624,-7.410494,-8.241281],[-5.870926,3.652045,9.011039],[-9.193076,-0.897342,5.707450],[-2.024882,9.309440,4.173715],[3.182817,-9.671219,2.095461],[2.452912,-8.306503,2.725559],[-9.820886,-8.250794,-7.864630],[8.322195,6.820962,-8.802683],[8.634953,7.109729,-2.846488],[0.146024,8.948823,-4.597000],[4.876244,-6.884707,-7.342233],[-7.925428,-0.833715,-2.847023],[0.844427,5.401563,1.640904],[9.906953,-3.020084,-4.631596],[4.306599,-0.747308,0.926641],[-3.421655,0.818871,-8.268714],[-9.296122,-6.290383,-8.428522],[1.356241,-2.063223,-8.972693],[4.040605,0.367909,-2.227178],[-3.285747,7.373593,1.925228],[-2.029495,-3.807567,-1.048347],[0.454586,6.958699,6.479628],[-8.978199,1.043619,2.962955],[-2.815116,-9.602018,6.185101],[7.780198,-4.973962,-0.527786],[1.516309,3.865176,-8.902326],[6.531484,8.938411,-5.870352],[-9.167618,5.471859,6.492370],[9.417657,1.549785,4.120097],[-5.417722,9.637722,-1.909477],[-8.983640,-2.293757,9.568338],[-3.898894,-6.196200,2.253608],[-8.456263,9.285799,-4.488704],[2.817853,-4.174655,5.457504],[7.377756,4.962583,-5.608184],[-7.699498,2.864940,6.861755],[-4.583740,5.419529,6.010427],[5.557325,-8.407682,1.908054],[3.072873,-9.241327,-9.625886],[-7.174613,-9.444553,-0.784258],[5.315469,8.745202,9.785002],[6.772129,-0.092269,-4.502226],[3.918914,-7.570887,-0.091342],[-6.320402,-8.667024,5.678389],[-0.669153,-3.345072,7.992649],[-9.703426,2.580569,-4.277730],[-4.929910,-0.985252,-4.094446],[-3.576107,-1.558899,-6.077532],[-4.602385,5.631961,3.582698],[0.578102,-1.838367,-4.770119],[-5.731485,-6.422444,1.301281],[-2.125740,-5.371558,-1.859751],[7.926794,-0.722771,2.878976],[-3.789420,-4.648452,-3.124606],[1.756899,5.568577,2.937855],[4.483898,-6.388637,-8.494573],[-7.939715,2.031807,3.813053],[-7.442688,-3.610849,3.860533],[6.316000,-1.404433,5.729874],[1.558097,-4.491383,-1.253799],[4.013197,-6.865098,6.385545],[4.920356,6.765832,-3.519069],[-4.038630,-3.665775,3.282483],[5.884446,4.892243,-1.015285],[-1.795740,3.613022,0.772992],[7.982158,-1.041058,-9.963240],[-9.306478,4.985779,2.825319],[-5.762646,-5.688990,-0.498714],[-2.107336,-6.616983,5.270464],[-9.018985,8.768529,1.637046],[1.625784,1.563736,-4.655000],[2.533996,6.410479,-9.814653],[-2.875487,-8.560208,4.381197],[7.538265,-8.103671,-6.208856],[-1.303124,-4.998251,-1.521267],[-0.010393,-8.201860,4.646832],[-9.532749,4.449295,-6.971333],[-3.778983,-6.132619,6.177395],[4.259910,-4.769481,1.480381],[-3.814450,1.255310,7.556826],[-1.671152,-5.650154,6.857951],[7.289029,-1.726196,5.550899],[-5.012115,-1.201898,-7.091508],[3.648068,-5.483998,-4.712194],[-3.081068,4.218036,7.219712],[7.806193,8.962404,-1.531601],[-6.212373,-0.877782,-2.803194],[6.907267,4.759860,5.705167],[5.133056,0.939448,-5.791663],[0.284033,-2.149536,5.212790],[1.497106,1.233939,-3.341918],[0.874761,1.759027,7.462720],[3.529970,1.429953,-2.949563],[8.573373,9.709564,3.382372],[-4.657273,-6.598426,-8.045306],[-7.939333,-1.499411,-0.780801],[1.812502,4.313780,2.834018],[-7.492929,3.336778,9.874104],[-0.864595,-4.618212,3.962010],[-2.430107,-6.847499,8.205767],[-5.194785,8.989840,1.491839],[2.615513,5.501947,-7.904730],[6.519733,-4.260305,-8.797254],[6.678679,-4.277971,-3.212714],[2.335490,2.552728,6.453728],[-9.545515,-5.443685,-8.995212],[3.736264,-7.416372,8.135509],[0.146336,5.722210,4.275580],[5.512350,-7.707533,-5.431971],[-4.671126,5.748668,-0.150633],[-2.024236,-3.245511,-9.758341],[-2.005384,-5.383885,-0.334851],[7.665288,1.827757,5.050348],[-6.989432,6.857372,-0.895121],[6.533676,1.802307,-1.452807],[6.930953,3.607587,9.667749],[8.643203,7.324548,-2.397438],[4.009509,-8.797808,-8.972083],[3.680912,-2.068591,-5.001271],[6.199677,8.621697,-3.637202],[-2.152454,-1.682203,-1.958063],[3.691154,-6.136741,1.670274],[-9.934030,-8.229183,1.096101],[8.307760,-0.651206,0.947268],[-0.585748,-3.197877,-9.509359],[-2.770158,7.143759,-9.062968],[-9.878456,3.258918,-2.589127],[-7.569936,1.204141,9.381687],[7.144963,9.571760,7.595091],[-8.439646,0.598253,3.502098],[-4.740950,-8.217540,6.212433],[6.712741,-8.372117,-2.769053],[2.764092,-2.581320,2.661233],[-6.549674,-0.319513,-5.851218],[-8.826281,2.191068,-7.305985],[8.295085,-3.677839,-9.855158],[-3.354522,-5.829555,-1.865378],[-3.697134,0.758440,-2.361234],[-2.461154,4.187560,-9.374736],[-2.097888,4.233826,5.932838],[4.728550,-8.141804,-4.763571],[3.451727,-2.430873,-7.931637],[-3.620342,-2.517853,2.126378],[-5.660279,0.083893,-3.829552],[-7.428143,2.513956,-2.454739],[3.622502,0.402335,-9.691864],[-6.700659,2.054263,8.905333],[8.948664,-9.400706,9.040314],[-3.997437,3.088736,5.301756],[8.264307,5.565341,0.599850],[3.456633,7.512066,-7.707255],[2.365728,8.089086,2.919888],[-0.322179,-1.640892,3.359513],[-8.066939,9.509042,6.426707],[4.636043,-9.589546,7.409357],[-3.521645,-6.453841,-5.133010],[8.584140,0.372273,-7.678173],[9.836862,4.440246,3.386858],[0.708593,-8.834216,4.079123],[-3.604267,1.660888,2.179065],[-4.725887,4.522480,4.266121],[-6.438495,9.476796,3.289608],[-8.475668,-8.908120,-0.363290],[-5.451455,6.527033,3.265803],[9.355366,7.149473,-2.109029],[2.848320,0.656937,-0.156041],[-3.116801,8.154489,-0.471454],[4.442547,-6.765568,9.932968],[0.675441,-8.246825,-8.908910],[-9.484126,5.689999,-1.698938],[-7.200006,5.650122,7.698264],[7.566633,-5.850092,4.302110],[0.570951,3.123037,4.011712],[2.486866,2.342716,5.991739],[1.445869,5.597243,-9.769103],[-8.853823,0.409882,-5.294986],[6.047351,6.263361,-5.196455],[2.236595,1.695638,3.380219],[4.863918,-6.912456,7.794153],[-6.407676,2.815387,4.937394],[-1.151680,-9.526756,5.032838],[-2.813843,-1.631429,-0.079429],[-0.381653,1.821929,5.468663],[-3.260942,1.578931,8.116378],[6.867437,7.257261,4.516661],[-5.056679,-1.604399,4.403495],[5.518288,9.269624,8.484610],[-4.043210,8.929554,-8.367836],[9.954431,5.705183,4.697201],[3.387381,-1.103899,2.005363],[5.241902,8.749945,-8.680822],[-4.902314,-3.676074,-9.673569],[9.575584,-7.935879,-6.484274],[2.741134,3.528109,-7.711466],[6.419714,8.848600,-1.182505],[9.563379,-8.684088,3.427341],[-2.931476,-9.624854,3.733215],[-9.293861,-2.883417,1.875183],[9.064843,-3.383903,6.530600],[5.221920,-8.468757,4.479264],[9.788670,-2.786083,8.885339],[4.329478,1.662128,4.407974],[-7.727816,-0.907750,-9.472441],[9.053749,-7.122935,-5.931179],[-8.324267,1.252271,1.917197],[2.242365,2.227017,-3.857901],[9.915350,-2.336984,-6.327724],[-8.683414,-8.659014,2.889895],[-2.412212,-8.465099,-1.220786],[1.661255,1.404569,1.476936],[8.964663,9.914517,-2.043523],[6.624494,5.093075,9.044618],[7.709512,-1.512150,-6.606143],[-4.912640,-8.240904,4.780398],[-2.105093,8.080585,8.553437],[-6.884343,8.211800,-3.754526],[4.547940,-0.242824,9.446649],[-1.102211,4.191686,-0.899609],[-3.181988,-8.483057,-7.812656],[4.593431,-7.957253,-0.669311],[8.949184,-7.451430,-8.098271],[3.645248,2.878466,8.412088],[8.482451,2.651775,-8.737674],[-9.901315,8.829221,-8.219989],[-4.160211,-1.632567,-0.698490],[6.100919,8.982982,5.641647],[-4.928156,9.562822,-8.932219],[-0.341789,5.289415,-9.595612],[-9.068135,-2.143429,5.580374],[9.792169,8.529885,1.530545],[-4.934161,5.576037,-1.295386],[7.492135,5.544162,-9.790958],[8.040062,0.186623,9.436122],[5.647623,-4.201689,9.769254],[-7.989077,-5.050533,-9.529352],[8.160966,-3.290637,-0.337454],[6.164062,0.288114,-7.954468],[-3.644964,-4.568104,-6.713301],[5.491912,5.462842,-8.631939],[-4.636944,6.289360,-3.554088],[-4.653284,-5.123729,-1.164209],[8.957730,7.901407,7.753831],[1.599936,2.865354,3.141619],[2.370039,9.399417,7.533521],[9.152462,-8.183380,-6.729855],[-2.285825,9.275094,2.512619],[1.069930,3.561864,8.243004],[-3.698260,9.503224,-0.232476],[-6.199132,0.011612,6.052263],[3.664614,-8.784524,1.408034],[-2.008861,8.131461,0.826322],[4.128066,-6.073434,2.123743],[1.469810,-2.394447,9.552498],[-3.456026,-3.434704,-8.847975],[-8.135326,-5.272803,3.814568],[0.796410,5.459711,4.945246],[2.875976,2.495415,-2.012638],[1.041497,-2.291788,-1.847379],[-3.308265,6.795350,-1.903564],[-5.774606,2.225793,-5.419725],[8.801869,-7.065687,-3.763002],[6.137706,3.649049,9.237042],[0.279862,0.816374,-2.068901],[2.071027,-1.993997,1.827423],[-4.551728,2.430589,-3.796916],[9.086574,1.423541,-8.738526],[6.161066,2.827168,-4.748201],[-3.783006,7.792778,-3.317766],[5.352385,8.365317,-6.706774],[9.595487,-9.770765,3.413944],[-6.988192,-5.831779,-1.867871],[5.007133,-9.442959,-1.411589],[-1.600583,-8.099711,9.027716]], dtype = "float64")#candidate|7080|(385, 3)|const|float64
const_7081 = relay.const([-2,10,-7,7,-5,-10,6,-5,7,4,8,-6,-5,-1,-4,2,-1,7,-3,9,3,-1,9,8,3,-3,9,1,-2,5,-3,3,-1,-3,-9,4,-10,-2,2,-9,1,-5,-3,-6,-9,2,10,-5,8,-5,8,8,6,-9,10,-5,-9,-1,7,7,8,7,5,-1,7,1,-5,7,8,10,-5,-7,5,7,5,7,5,5,5,-4,-10,-10,-1,6,5,7,3,4,-2,-2,-9,2,5,4,3,-2,1,10,1,3,-4,-7,4,4,4,-7,-7,7,-8,9,10,-4,7,5,2,5,-10,-2,4,4,-4,-3,10,2,-2,9,4,3,9,-9,-9,4,7,-4,6,10,-9,-2,4,8,4,-10,-3,10,-2,-1,-5,10,5,-4,-4,-10,9,3,-7,-1,-10,-1,-3,-3,2,-6,10,-3,-10,5,-3,-8,-8,-6,-3,6,-6,-6,-10,4,4,-10,-5,-1,-10,-10,1,5,-10,6,6,7,-9,-10,2,2,3,-2,5,-5,10,-7,-5,2,-3,-9,2,-2,-8,1,-8,8,3,2,-3,-4,-2,6,5,-3,6,-7,7,-1,-4,7,-3,3,-6,5,-2,4,4,-3,8,7,-7,4,6,9,8,-1,-2,9,1,-7,5,-1,1,-9,-10,-3,-3,-1,4,10,-9,-1,9,-6,5,7,5,10,10,3,6,-8,-4,-1,-2,-10,-3,-9,2,5,9,9,8,7,9,-1,-7,5,8,2,8,-9,5,-5,3,4,2,3,-3,1,10,8,-10,1,-10,8,-4,-10,6,6,9,-1,-3,2,-7,-9,-4,-6,-9,-2,7,8,-8,-10,8,-4,-6,-8,1,9,5,-7,-5,3,10,-5,-7,10,-3,-8,6,10,6,3,7,5,7,3,5,-8,-3,-3,5,-6,4,3,-5,-2,-8,10,6,-9,7,7,-10,-10,5,3,-9,-2,4,-2,6,-2,10,2,-7,-9,5,-10,-10,-7,-4,-6,-1,5,-2,6,3,-4,10,-9,1,3,5,-10,-4,9,-9,-10,-3,-8,3,5,-2,1,7,10,1,5,-9,-10,-3,-2,3,-5,-8,-1,4,7,7,9,9,3,5,5,-2,-8,3,7,3,-2,2,-1,1,4,7,3,5,3,3,-5,-2,-8,-2,-1,-7,-5,8,7,4,-9,-7,7,8,1,10,6,10,7,1,6,-2,-6,6,2,-7,1,5,7,7,-7,-5,-9,9,6,7,-5,-4,1,-8,-2,-6,-10,-2,-4,-4,-6,-6,-3,-2,-2,-2,9,-1,8,3,-4,-4,10,9,2,7,-4,4,5,-6,-8,5,4,6,-5,3,-10,2,-10,-3,6,-2,-2,-10,6,-3,6,-2,4,-4,8,8,2,-7,-3,-7,-10,-1,-7,9,-7,-10,10,3,9,-5,-5,-5,3,9,2,-8,5,7,10,-7,-8,-2,-10,-6,-4,-8,-4,-6,-4,-6,1,1,1,9,-3,10,7,4,9,-6,1,-2,6,-3,-4,-9,10,2,9,7,-2,-5,-1,6,-7,2,6,-4,-3,5,5,-4,-3,10,-10,3,-6,-10,-5,6,9,-1,-4,-9,1,6,-5,3,-9,-9,-10,2,9,2,8,-10,-7,-4,-8,-2,7,5,10,-10,-2,9,-9,7,-3,-4,6,10,8,6,6,-5,6,5,-9,-5,3,-3,5,2,9,-8,1,8,-3,5,2,4,-1,6,-5,-3,4,-1,-5,6,-1,7,-6,3,-1,1,-8,3,-6,-1,1,9,9,-6,-5,8,-1,-9,-2,-6,-1,-8,4,10,4,2,7,-3,-5,3,-3,5,-8,1,-7,6,-8,8,-8,3,-10,-9,10,5,1,5,-9,-10,-7,8,1,-1,-8,10,-9,-2,-2,8,-1,7,-9,7,-5,6,1,-3,9,1,6,7,-8,4,8,-6,-3,2,-7,1,-10,-1,2,-5,-9,10,2,1,-6,2,5,2,10,9,5,-9,-8,5,-4,2,-7,-1,2,10,4,-10,9,8,-8,-9,8,7,8,-9,4,-8,-4,1,10,3,-3,-5,-7,-6,-2,9,2,-8,-9,3,-8,6,9,-9,-7,2,-5,4,10,8,-4,-1,-2,1,6,7,-4,-6,-10,-1,-7,-9,-2,6,-5,-3,1,9,3,-7,3,-4,8,-1,7,7,7,-8,-1,8,-9,6,6,-5,3,-9,7,5,-3,4,-8,-4,9,3,-6,-7,-3,5,8,8,4,-10,-1,6,1,2,5,6,7,5,2,8,-6,-5,-5,-10,10,-1,4,5,-1,7,-4,-9,2,-6,-7,10,-9,2,7,4,9,-8,-3,10,-1,-10,-10,8,5,8,8,7,-2,5,8,-9,-5,2,2,-3,-9,-10,2,-2,-9,10,8,-9,6,-2,-3,3,-1,-7,-7,6,3,-2,3,3,4,-1,1,-5,-2,-1,-1,3,9,5,-2,9,-6,-2,7,-2,1,5,1,-8,10,-8,-4,-1,2,-7,6,10,9,4,9,8,7,-1,7,3,-9,-8,-3,5,6,10,10,-7,-5,-6,5,6,1,-10,7,6,4,8,-5,-5,-5,-5,6,-5,-3,7,6,9,9,6,5,-1,-7,8,-9,5,9,-8,-3,8,-5,3,-6,-9,-4,-2,-8,-7,3,-9,8,8,-7,4,1,-6,-7,-6,-3,-2,1,-5,-9,5,10,4,-1,7,9,10,3,4,6,5,-6,-8,10,-7,-8,1,-10,7,-5,9,-8,-4,4,-3,8,4,2,1,7,-1,2,-4,6,4,-6,5,-4,4,-7,-2,4,8,-8,-10,-1,-2,4,5,-7,-9,-6,8,-5,9,1,4,-5,-1,-5,10,3,-9,5,-5,5,-7,10,10,-10,-7,8,4,6,-8,10,7,9,-10,-9,9,1,-6,3,-6,5,-2,5,-10,-5,3,8,7,-5,-2,-2,-2,-8,5,6,-4,7,6,4,-4,-4,-4,-9,10,8,10,-4,4,-3,-5,2,-10,7,-10,1,10,3,8,5,-5,9,-6,2,-6,10,-3,-3,9,8,1,-3,5,-6,-7,-8,-5,-2,9,-2,-6,-8,-3,2,1,3,-9,6,4,6,3,6,10,-9,-1,-4,3,7,-3,10,-1,9,-9,6,4,-7,-6,5,2,-3,-6,1,10,-5,-1,8,-8,-5,-1,10,-3,-4,-9,-4,-4,-5,5,8,-6,-8,-10,10,-3,-4,-8,-4,3,-9,-9,-5,-10,-1,-8,10,-4,2,3,1,-9,-4,1,-7,6,-1,8,5,-8,-5,-9,-10,-1,8,-8,-2,4,-5,4,3,7,2,-10,5,5,-4,-5,9,1,-2,6,6,-1,-9,3,4,4,7,-5,3,4,-6,4,-7,-3,-3,-6,-9,10,-4,9,-4,4,-10,6,10,-1,-1,2,-9,8,3,1,-2,1,-5,-4,5,10,8,7,6,-4,2,-4,10,2,-7,-7,-3,5,-9,7,-10,7,5,-7,3,-7,-9,5,4,-5,10,9,10,-1,6,3,5,3,-6,-10,-4,-2,-9,-4,-4,-3,3,-8,-10,2,-7,2,-6,3,-7,-9,-1,6,9,2,-3,10,8,8,6,-4,6,-6,-4,4,-1,4,3,-1,-4,-8,9,10,5,-7,-10,6,10,-10,-1,6,7,-6,-2,3,-2,-2,10,-10,1,-5,-2,-1,-3,7,-5,-5,-2,1,8,1,-6,4,-4,10,-4,8,-8,-10,-10], dtype = "int8")#candidate|7081|(1404,)|const|int8
call_7079 = relay.TupleGetItem(func_6473_call(relay.reshape(const_7080.astype('float64'), [1155,]), relay.reshape(const_7081.astype('int8'), [1404,]), ), 4)
call_7082 = relay.TupleGetItem(func_6476_call(relay.reshape(const_7080.astype('float64'), [1155,]), relay.reshape(const_7081.astype('int8'), [1404,]), ), 4)
func_6951_call = mod.get_global_var('func_6951')
func_6954_call = mutated_mod.get_global_var('func_6954')
var_7084 = relay.var("var_7084", dtype = "float64", shape = (200,))#candidate|7084|(200,)|var|float64
call_7083 = relay.TupleGetItem(func_6951_call(relay.reshape(var_7084.astype('float64'), [5, 5, 8])), 0)
call_7085 = relay.TupleGetItem(func_6954_call(relay.reshape(var_7084.astype('float64'), [5, 5, 8])), 0)
uop_7086 = relay.erf(call_7066.astype('float32')) # shape=(12, 11, 12)
uop_7088 = relay.erf(call_7067.astype('float32')) # shape=(12, 11, 12)
func_5901_call = mod.get_global_var('func_5901')
func_5903_call = mutated_mod.get_global_var('func_5903')
call_7090 = relay.TupleGetItem(func_5901_call(), 0)
call_7091 = relay.TupleGetItem(func_5903_call(), 0)
output = relay.Tuple([call_7079,const_7080,const_7081,call_7083,var_7084,uop_7086,call_7090,])
output2 = relay.Tuple([call_7082,const_7080,const_7081,call_7085,var_7084,uop_7088,call_7091,])
func_7102 = relay.Function([var_7084,], output)
mod['func_7102'] = func_7102
mod = relay.transform.InferType()(mod)
var_7103 = relay.var("var_7103", dtype = "float64", shape = (200,))#candidate|7103|(200,)|var|float64
output = func_7102(var_7103)
func_7104 = relay.Function([var_7103], output)
mutated_mod['func_7104'] = func_7104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mod.get_global_var('func_5901')
func_5903_call = mutated_mod.get_global_var('func_5903')
call_7115 = relay.TupleGetItem(func_5901_call(), 0)
call_7116 = relay.TupleGetItem(func_5903_call(), 0)
output = relay.Tuple([call_7115,])
output2 = relay.Tuple([call_7116,])
func_7122 = relay.Function([], output)
mod['func_7122'] = func_7122
mod = relay.transform.InferType()(mod)
mutated_mod['func_7122'] = func_7122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7122_call = mutated_mod.get_global_var('func_7122')
call_7123 = func_7122_call()
output = call_7123
func_7124 = relay.Function([], output)
mutated_mod['func_7124'] = func_7124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4962_call = mod.get_global_var('func_4962')
func_4963_call = mutated_mod.get_global_var('func_4963')
call_7130 = func_4962_call()
call_7131 = func_4962_call()
func_5663_call = mod.get_global_var('func_5663')
func_5665_call = mutated_mod.get_global_var('func_5665')
call_7148 = relay.TupleGetItem(func_5663_call(), 2)
call_7149 = relay.TupleGetItem(func_5665_call(), 2)
func_78_call = mod.get_global_var('func_78')
func_81_call = mutated_mod.get_global_var('func_81')
const_7155 = relay.const([-1,4,4,3,2,4,2,5,-5,-10,-7,-2,10,5,-8,-10,-1,-4,4,9,-3,-3,2,-8,10,-9,-10,1,5,-10,6,4,2,10,-9,1,3,8,-5,-2,8,-1,2,-6,8,2,6,9,5,-6,-10,8,-3,9,-3,-3,2,-9,8,1,-3,-7,-8,7,-8,10,1,9,2,-2,-9,-10,-10,5,-4,1,-1,6,-7,-5,-5,-10,10,-10,1,1,-8,-3,8,6,6,1,8,-7,10,1,-6,4,2,10,6,3,2,2,-6,4,-8,9,4,-10,-9,-2,1,3,-7,-9,6,-9,-10,8,9,-7,-1,-2,4,9,-4,10,-4,3,8,6,-3,-10,-6,-8,4,-4,4,10,-10,3,8,1], dtype = "uint64")#candidate|7155|(144,)|const|uint64
var_7156 = relay.var("var_7156", dtype = "uint64", shape = (1440,))#candidate|7156|(1440,)|var|uint64
call_7154 = relay.TupleGetItem(func_78_call(relay.reshape(const_7155.astype('uint64'), [9, 16, 1]), relay.reshape(var_7156.astype('uint64'), [9, 16, 10]), ), 0)
call_7157 = relay.TupleGetItem(func_81_call(relay.reshape(const_7155.astype('uint64'), [9, 16, 1]), relay.reshape(var_7156.astype('uint64'), [9, 16, 10]), ), 0)
output = relay.Tuple([call_7130,call_7148,call_7154,const_7155,var_7156,])
output2 = relay.Tuple([call_7131,call_7149,call_7157,const_7155,var_7156,])
func_7164 = relay.Function([var_7156,], output)
mod['func_7164'] = func_7164
mod = relay.transform.InferType()(mod)
var_7165 = relay.var("var_7165", dtype = "uint64", shape = (1440,))#candidate|7165|(1440,)|var|uint64
output = func_7164(var_7165)
func_7166 = relay.Function([var_7165], output)
mutated_mod['func_7166'] = func_7166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5554_call = mod.get_global_var('func_5554')
func_5556_call = mutated_mod.get_global_var('func_5556')
call_7192 = relay.TupleGetItem(func_5554_call(), 1)
call_7193 = relay.TupleGetItem(func_5556_call(), 1)
output = relay.Tuple([call_7192,])
output2 = relay.Tuple([call_7193,])
func_7204 = relay.Function([], output)
mod['func_7204'] = func_7204
mod = relay.transform.InferType()(mod)
output = func_7204()
func_7205 = relay.Function([], output)
mutated_mod['func_7205'] = func_7205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5523_call = mod.get_global_var('func_5523')
func_5524_call = mutated_mod.get_global_var('func_5524')
call_7211 = relay.TupleGetItem(func_5523_call(), 0)
call_7212 = relay.TupleGetItem(func_5524_call(), 0)
func_6473_call = mod.get_global_var('func_6473')
func_6476_call = mutated_mod.get_global_var('func_6476')
var_7214 = relay.var("var_7214", dtype = "float64", shape = (1155,))#candidate|7214|(1155,)|var|float64
const_7215 = relay.const([-9,10,1,-6,1,-7,-6,5,-4,8,1,-7,3,-8,-10,-4,5,2,4,-1,7,6,-2,7,-2,-4,-10,3,4,10,-8,2,8,1,5,5,-9,-3,5,-9,-5,-1,-5,-8,-6,2,1,-9,-9,9,2,5,-8,-4,-10,-10,-3,10,5,-6,4,-7,3,4,-8,-7,-10,2,1,-10,9,6,1,2,1,9,8,-2,1,5,2,10,2,-9,9,6,9,2,5,8,-3,-3,10,-4,-3,2,10,-9,-7,-9,-8,-6,4,-9,-3,-9,3,-9,-9,-7,3,10,-3,-8,-9,-7,-2,6,-1,7,1,10,9,-8,-2,5,-4,9,-5,-6,-5,-1,-5,3,1,10,7,7,-1,6,-10,1,7,-1,-8,-9,1,-8,-9,6,10,-4,-8,-2,-10,2,-1,-3,-2,5,3,-3,-5,3,-3,-2,7,-1,-10,3,3,-9,-8,-7,9,10,-5,6,-5,2,10,-2,-3,-1,8,-3,9,7,4,-8,5,5,-3,2,4,10,1,2,-7,-6,-6,7,-3,-5,-8,2,-2,-5,-9,-7,-2,-6,10,-6,-10,-1,-3,4,-3,-5,-1,-6,1,10,-10,-3,-5,-7,5,-2,-8,-1,-3,9,3,9,-8,-9,-8,-10,-7,5,10,-4,7,-1,-1,8,-7,-2,-2,4,-5,10,1,4,-3,-9,10,9,1,4,2,10,10,10,2,-1,-7,2,3,8,-4,-10,-10,4,10,-7,-10,4,6,4,-9,7,-6,-4,5,-4,8,-5,-2,4,-7,-6,6,8,3,-2,-7,-8,7,3,-5,1,10,4,5,5,6,10,1,-6,2,-7,-6,-3,7,5,4,5,-1,9,6,-9,-7,-6,7,-3,1,-9,4,-2,-9,-3,2,-10,-9,-1,4,7,9,10,-5,-4,-4,3,-4,-1,1,-7,-3,10,-7,-5,10,-2,5,-4,6,7,2,2,-7,2,-8,-5,-7,1,5,-3,-9,-6,9,-7,2,7,-5,2,1,-2,-3,9,3,4,-7,-4,3,3,4,7,1,1,-2,-10,7,1,10,-3,-2,-10,3,-5,6,8,-5,7,8,4,1,2,-7,-1,5,-7,-9,5,-10,10,-8,7,3,1,-10,-1,10,-10,-8,-3,4,-1,-8,-7,-9,-6,7,-2,7,-2,-10,-9,-6,-9,-1,1,-4,-10,-1,1,-6,-6,-10,5,-2,6,2,4,8,4,8,5,-10,-2,-4,8,10,4,2,9,8,8,3,-8,7,-8,-9,-7,-2,7,-2,7,-1,-3,-2,-7,-6,-10,8,9,2,-10,-2,8,-6,9,4,-1,7,-7,6,9,10,-2,7,-4,9,-10,1,-5,4,6,-2,-2,2,-7,-5,10,-4,-4,2,-2,1,1,9,-8,4,1,-2,-2,-2,3,-3,-3,-5,-2,6,-9,-3,9,-10,4,-1,-7,-6,5,8,-3,1,2,4,5,7,7,6,-9,-2,-8,8,4,-6,1,-9,9,-2,-7,6,-6,-10,10,-10,-2,-3,-3,-10,2,10,-2,-8,10,-3,-8,-3,-1,-9,8,-1,10,-3,-3,-4,8,10,2,10,-10,10,-3,2,5,2,-1,-4,-7,5,-9,-6,-2,7,-6,7,2,-6,10,9,-1,9,-4,-4,9,2,10,-4,-6,-8,10,2,3,-8,-8,-10,-8,3,-1,4,8,-7,5,1,-4,8,6,-7,8,4,10,6,-3,9,-6,6,-10,2,-6,-1,-4,4,10,9,-5,-5,6,-3,10,7,-9,-10,5,6,-5,-2,5,10,-5,5,-1,7,2,10,-5,6,9,-3,-7,6,6,-2,-3,-6,1,-10,-2,4,8,5,-1,7,6,6,9,-7,1,-3,4,-3,-3,-9,-2,8,-7,5,-4,9,2,-5,-9,-5,-4,5,10,-2,2,9,-4,-6,-1,-2,5,9,9,10,8,8,-4,9,2,-10,-5,-8,7,2,5,5,5,9,7,2,3,-9,-5,-2,10,-9,10,-3,-1,6,-9,6,-4,8,4,-1,1,5,-8,1,10,2,7,-8,-2,-4,7,7,-7,-7,6,-8,-5,1,2,1,3,-4,3,-9,-8,8,-7,7,1,-4,1,3,9,-9,-7,-2,6,-1,10,3,-4,-3,7,4,-5,4,2,-10,-1,-1,1,-9,1,-3,-9,-9,9,-4,4,-4,-6,-3,-6,-9,-5,-7,6,-1,-5,8,-3,9,-10,10,-10,-3,5,-7,2,-9,-8,3,-4,3,-1,5,9,-7,8,-5,6,-7,7,-3,1,5,-10,-5,3,6,-8,-7,7,-8,-3,-5,2,-9,7,-7,6,10,-2,-4,5,-8,-3,2,1,6,4,3,3,-4,-8,1,-2,-1,7,9,5,7,-2,-9,8,7,7,5,-3,-2,-9,-4,5,-7,-3,6,-6,6,-1,-1,8,-8,-9,7,-3,5,-4,-7,8,-1,10,9,-10,6,-7,10,-6,-4,-5,-8,-2,2,-6,4,3,-5,5,-9,-6,-8,-1,-2,-7,3,-7,-10,-8,6,-1,7,8,-7,3,-9,2,-6,6,-1,2,6,-6,10,-1,5,-7,-8,-4,9,2,10,5,-8,-2,5,4,5,8,-2,-10,-2,3,1,4,7,-7,-9,-3,-5,-7,-8,2,1,-9,-10,3,-5,10,4,-5,10,-7,6,8,-4,-4,8,-8,-7,-3,5,6,10,7,10,4,7,10,3,7,-5,-4,6,-1,10,-7,-9,8,-1,-3,8,-2,1,8,-10,-3,-5,-9,10,1,5,6,3,3,-8,6,6,-3,-9,-2,8,-5,4,-2,-3,6,-3,2,-6,-1,-3,-2,-6,-7,6,6,-7,-4,5,7,1,8,8,3,6,10,-2,10,7,-2,9,8,-9,8,10,-1,-1,-8,-8,-6,-4,6,1,3,3,5,-3,7,5,3,-1,10,-3,2,7,8,6,-5,-1,-7,4,-8,4,9,1,7,-6,5,-3,-5,-6,-2,-8,-9,7,-5,9,10,-9,3,10,-1,6,8,-2,2,7,-10,10,5,-7,-8,4,-10,-6,-2,-2,3,-6,7,-5,7,2,-8,-7,10,3,-2,6,1,-2,8,-3,-2,-3,10,8,1,-3,2,4,-7,10,6,-1,7,10,-9,-6,4,2,7,-1,9,9,-5,-3,-2,4,-8,6,10,9,-9,-10,4,8,1,-2,-5,-6,-6,5,-2,9,-3,5,1,3,-9,-6,7,4,5,-2,7,-1,7,-2,-4,-8,5,2,-7,7,-10,-7,-7,8,-7,2,-8,-8,8,3,10,-1,-7,1,10,8,-1,10,5,1,6,-5,-6,-9,-2,8,-6,-9,4,6,9,3,-8,9,-10,-7,-4,1,5,6,-6,1,3,-4,-9,-8,-6,-10,5,10,-2,2,-9,-7,6,-2,-8,-4,-3,6,1,-4,-9,1,-6,9,-8,-7,5,3,-7,-2,10,-6,6,-8,-7,4,-7,-10,-6,2,-2,-2,4,8,2,6,6,6,-5,-9,-5,8,5,-6,9,-6,-8,7,6,1,5,-8,1,-3,8,-9,-2,-4,7,10,7,-8,-6,5,10,8,7,-6,-1,5,10,2,-10,-1,-6,4,8,-8,-7,-4,1,10,-1,-8,-5,2,6,-9,2,-5,10,-4,1,3,-7,3,-1,7,1,-4,8,-6,-2,3,3,-2,9,-3,8,-6,-3,4,-6,-7,6,-5,-9,-9,6,-5,-1,-3,-5,-1,-10,-9,-8], dtype = "int8")#candidate|7215|(1404,)|const|int8
call_7213 = relay.TupleGetItem(func_6473_call(relay.reshape(var_7214.astype('float64'), [1155,]), relay.reshape(const_7215.astype('int8'), [1404,]), ), 3)
call_7216 = relay.TupleGetItem(func_6476_call(relay.reshape(var_7214.astype('float64'), [1155,]), relay.reshape(const_7215.astype('int8'), [1404,]), ), 3)
func_2056_call = mod.get_global_var('func_2056')
func_2060_call = mutated_mod.get_global_var('func_2060')
call_7251 = relay.TupleGetItem(func_2056_call(relay.reshape(call_7213.astype('int8'), [9, 12, 13]), relay.reshape(const_7215.astype('int8'), [9, 12, 13]), relay.reshape(call_7213.astype('int8'), [9, 12, 13]), ), 2)
call_7252 = relay.TupleGetItem(func_2060_call(relay.reshape(call_7213.astype('int8'), [9, 12, 13]), relay.reshape(const_7215.astype('int8'), [9, 12, 13]), relay.reshape(call_7213.astype('int8'), [9, 12, 13]), ), 2)
output = relay.Tuple([call_7211,call_7213,var_7214,const_7215,call_7251,])
output2 = relay.Tuple([call_7212,call_7216,var_7214,const_7215,call_7252,])
func_7262 = relay.Function([var_7214,], output)
mod['func_7262'] = func_7262
mod = relay.transform.InferType()(mod)
var_7263 = relay.var("var_7263", dtype = "float64", shape = (1155,))#candidate|7263|(1155,)|var|float64
output = func_7262(var_7263)
func_7264 = relay.Function([var_7263], output)
mutated_mod['func_7264'] = func_7264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6186_call = mod.get_global_var('func_6186')
func_6187_call = mutated_mod.get_global_var('func_6187')
call_7269 = func_6186_call()
call_7270 = func_6186_call()
output = relay.Tuple([call_7269,])
output2 = relay.Tuple([call_7270,])
func_7274 = relay.Function([], output)
mod['func_7274'] = func_7274
mod = relay.transform.InferType()(mod)
output = func_7274()
func_7275 = relay.Function([], output)
mutated_mod['func_7275'] = func_7275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5665_call = mutated_mod.get_global_var('func_5665')
call_7293 = relay.TupleGetItem(func_5663_call(), 2)
call_7294 = relay.TupleGetItem(func_5665_call(), 2)
uop_7317 = relay.cos(call_7293.astype('float64')) # shape=(12, 11, 12)
uop_7319 = relay.cos(call_7294.astype('float64')) # shape=(12, 11, 12)
output = uop_7317
output2 = uop_7319
func_7334 = relay.Function([], output)
mod['func_7334'] = func_7334
mod = relay.transform.InferType()(mod)
output = func_7334()
func_7335 = relay.Function([], output)
mutated_mod['func_7335'] = func_7335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7334_call = mod.get_global_var('func_7334')
func_7335_call = mutated_mod.get_global_var('func_7335')
call_7360 = func_7334_call()
call_7361 = func_7334_call()
output = relay.Tuple([call_7360,])
output2 = relay.Tuple([call_7361,])
func_7362 = relay.Function([], output)
mod['func_7362'] = func_7362
mod = relay.transform.InferType()(mod)
mutated_mod['func_7362'] = func_7362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7362_call = mutated_mod.get_global_var('func_7362')
call_7363 = func_7362_call()
output = call_7363
func_7364 = relay.Function([], output)
mutated_mod['func_7364'] = func_7364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mod.get_global_var('func_5901')
func_5903_call = mutated_mod.get_global_var('func_5903')
call_7379 = relay.TupleGetItem(func_5901_call(), 0)
call_7380 = relay.TupleGetItem(func_5903_call(), 0)
output = call_7379
output2 = call_7380
func_7383 = relay.Function([], output)
mod['func_7383'] = func_7383
mod = relay.transform.InferType()(mod)
output = func_7383()
func_7384 = relay.Function([], output)
mutated_mod['func_7384'] = func_7384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6098_call = mod.get_global_var('func_6098')
func_6100_call = mutated_mod.get_global_var('func_6100')
call_7389 = relay.TupleGetItem(func_6098_call(), 0)
call_7390 = relay.TupleGetItem(func_6100_call(), 0)
func_5663_call = mod.get_global_var('func_5663')
func_5665_call = mutated_mod.get_global_var('func_5665')
call_7400 = relay.TupleGetItem(func_5663_call(), 0)
call_7401 = relay.TupleGetItem(func_5665_call(), 0)
output = relay.Tuple([call_7389,call_7400,])
output2 = relay.Tuple([call_7390,call_7401,])
func_7406 = relay.Function([], output)
mod['func_7406'] = func_7406
mod = relay.transform.InferType()(mod)
output = func_7406()
func_7407 = relay.Function([], output)
mutated_mod['func_7407'] = func_7407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mod.get_global_var('func_5901')
func_5903_call = mutated_mod.get_global_var('func_5903')
call_7431 = relay.TupleGetItem(func_5901_call(), 0)
call_7432 = relay.TupleGetItem(func_5903_call(), 0)
output = relay.Tuple([call_7431,])
output2 = relay.Tuple([call_7432,])
func_7441 = relay.Function([], output)
mod['func_7441'] = func_7441
mod = relay.transform.InferType()(mod)
mutated_mod['func_7441'] = func_7441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7441_call = mutated_mod.get_global_var('func_7441')
call_7442 = func_7441_call()
output = call_7442
func_7443 = relay.Function([], output)
mutated_mod['func_7443'] = func_7443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7441_call = mod.get_global_var('func_7441')
func_7443_call = mutated_mod.get_global_var('func_7443')
call_7497 = relay.TupleGetItem(func_7441_call(), 0)
call_7498 = relay.TupleGetItem(func_7443_call(), 0)
output = call_7497
output2 = call_7498
func_7515 = relay.Function([], output)
mod['func_7515'] = func_7515
mod = relay.transform.InferType()(mod)
mutated_mod['func_7515'] = func_7515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7515_call = mutated_mod.get_global_var('func_7515')
call_7516 = func_7515_call()
output = call_7516
func_7517 = relay.Function([], output)
mutated_mod['func_7517'] = func_7517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6482_call = mod.get_global_var('func_6482')
func_6483_call = mutated_mod.get_global_var('func_6483')
call_7518 = func_6482_call()
call_7519 = func_6482_call()
func_5291_call = mod.get_global_var('func_5291')
func_5293_call = mutated_mod.get_global_var('func_5293')
call_7535 = relay.TupleGetItem(func_5291_call(), 0)
call_7536 = relay.TupleGetItem(func_5293_call(), 0)
uop_7549 = relay.asinh(call_7535.astype('float64')) # shape=(12, 11, 12)
uop_7551 = relay.asinh(call_7536.astype('float64')) # shape=(12, 11, 12)
output = relay.Tuple([call_7518,uop_7549,])
output2 = relay.Tuple([call_7519,uop_7551,])
func_7552 = relay.Function([], output)
mod['func_7552'] = func_7552
mod = relay.transform.InferType()(mod)
mutated_mod['func_7552'] = func_7552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7552_call = mutated_mod.get_global_var('func_7552')
call_7553 = func_7552_call()
output = call_7553
func_7554 = relay.Function([], output)
mutated_mod['func_7554'] = func_7554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7583 = relay.var("var_7583", dtype = "uint8", shape = ())#candidate|7583|()|var|uint8
var_7584 = relay.var("var_7584", dtype = "uint8", shape = (14, 10, 8))#candidate|7584|(14, 10, 8)|var|uint8
bop_7585 = relay.left_shift(var_7583.astype('uint8'), var_7584.astype('uint8')) # shape=(14, 10, 8)
output = bop_7585
output2 = bop_7585
func_7593 = relay.Function([var_7583,var_7584,], output)
mod['func_7593'] = func_7593
mod = relay.transform.InferType()(mod)
var_7594 = relay.var("var_7594", dtype = "uint8", shape = ())#candidate|7594|()|var|uint8
var_7595 = relay.var("var_7595", dtype = "uint8", shape = (14, 10, 8))#candidate|7595|(14, 10, 8)|var|uint8
output = func_7593(var_7594,var_7595,)
func_7596 = relay.Function([var_7594,var_7595,], output)
mutated_mod['func_7596'] = func_7596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5554_call = mod.get_global_var('func_5554')
func_5556_call = mutated_mod.get_global_var('func_5556')
call_7598 = relay.TupleGetItem(func_5554_call(), 0)
call_7599 = relay.TupleGetItem(func_5556_call(), 0)
uop_7600 = relay.atanh(call_7598.astype('float64')) # shape=(5, 135)
uop_7602 = relay.atanh(call_7599.astype('float64')) # shape=(5, 135)
uop_7611 = relay.sin(call_7598.astype('float64')) # shape=(5, 135)
uop_7613 = relay.sin(call_7599.astype('float64')) # shape=(5, 135)
output = relay.Tuple([uop_7600,uop_7611,])
output2 = relay.Tuple([uop_7602,uop_7613,])
func_7621 = relay.Function([], output)
mod['func_7621'] = func_7621
mod = relay.transform.InferType()(mod)
mutated_mod['func_7621'] = func_7621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7621_call = mutated_mod.get_global_var('func_7621')
call_7622 = func_7621_call()
output = call_7622
func_7623 = relay.Function([], output)
mutated_mod['func_7623'] = func_7623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6798_call = mod.get_global_var('func_6798')
func_6799_call = mutated_mod.get_global_var('func_6799')
call_7643 = relay.TupleGetItem(func_6798_call(), 0)
call_7644 = relay.TupleGetItem(func_6799_call(), 0)
output = call_7643
output2 = call_7644
func_7648 = relay.Function([], output)
mod['func_7648'] = func_7648
mod = relay.transform.InferType()(mod)
mutated_mod['func_7648'] = func_7648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7648_call = mutated_mod.get_global_var('func_7648')
call_7649 = func_7648_call()
output = call_7649
func_7650 = relay.Function([], output)
mutated_mod['func_7650'] = func_7650
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7664 = relay.var("var_7664", dtype = "float64", shape = ())#candidate|7664|()|var|float64
var_7665 = relay.var("var_7665", dtype = "float64", shape = (4, 16, 5))#candidate|7665|(4, 16, 5)|var|float64
bop_7666 = relay.less(var_7664.astype('bool'), var_7665.astype('bool')) # shape=(4, 16, 5)
output = relay.Tuple([bop_7666,])
output2 = relay.Tuple([bop_7666,])
func_7669 = relay.Function([var_7664,var_7665,], output)
mod['func_7669'] = func_7669
mod = relay.transform.InferType()(mod)
var_7670 = relay.var("var_7670", dtype = "float64", shape = ())#candidate|7670|()|var|float64
var_7671 = relay.var("var_7671", dtype = "float64", shape = (4, 16, 5))#candidate|7671|(4, 16, 5)|var|float64
output = func_7669(var_7670,var_7671,)
func_7672 = relay.Function([var_7670,var_7671,], output)
mutated_mod['func_7672'] = func_7672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6554_call = mod.get_global_var('func_6554')
func_6555_call = mutated_mod.get_global_var('func_6555')
call_7690 = relay.TupleGetItem(func_6554_call(), 1)
call_7691 = relay.TupleGetItem(func_6555_call(), 1)
output = relay.Tuple([call_7690,])
output2 = relay.Tuple([call_7691,])
func_7697 = relay.Function([], output)
mod['func_7697'] = func_7697
mod = relay.transform.InferType()(mod)
output = func_7697()
func_7698 = relay.Function([], output)
mutated_mod['func_7698'] = func_7698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7648_call = mod.get_global_var('func_7648')
func_7650_call = mutated_mod.get_global_var('func_7650')
call_7705 = func_7648_call()
call_7706 = func_7648_call()
func_6147_call = mod.get_global_var('func_6147')
func_6149_call = mutated_mod.get_global_var('func_6149')
var_7724 = relay.var("var_7724", dtype = "float32", shape = (1040,))#candidate|7724|(1040,)|var|float32
call_7723 = func_6147_call(relay.reshape(var_7724.astype('float32'), [13, 8, 10]))
call_7725 = func_6147_call(relay.reshape(var_7724.astype('float32'), [13, 8, 10]))
func_5208_call = mod.get_global_var('func_5208')
func_5210_call = mutated_mod.get_global_var('func_5210')
call_7753 = relay.TupleGetItem(func_5208_call(), 0)
call_7754 = relay.TupleGetItem(func_5210_call(), 0)
func_6319_call = mod.get_global_var('func_6319')
func_6322_call = mutated_mod.get_global_var('func_6322')
const_7758 = relay.const([1.530795,5.491384,-3.485440,-2.704510,7.147247,-9.888555,3.621213,-3.023770,-3.400065,0.324398,-3.748502,-6.973474,6.765876,-2.263160,-7.553935,-2.126210,5.802262,5.816744,1.196037,9.398760,-7.761930,-8.931814,-9.396035,7.889222,-2.640674,-2.726418,-1.872785,-1.303136,0.562706,-9.329548,-3.016093,5.310806,1.109637,9.143435,1.338311,3.689182,-1.441269,7.178427,-5.739564,-4.064134,0.339774,-5.968335,0.625346,3.605839,7.549459,-8.258238,3.801183,3.755667,-3.163591,1.696814,0.208353,9.437554,6.820081,-1.253849,4.249368,-7.521072,-2.556889,1.568516,-7.065872,-9.050621,-7.584641,1.045231,5.204270,-9.928189,-2.468176,4.285438,9.699724,0.241775,7.846520,-0.998475,-9.175613,3.915420,8.058244,-7.904751,-4.241913,5.122898,6.319758,-9.350834,1.668479,-2.629036,-8.025520,1.265006,8.247553,-8.713629,8.774487,3.046998,-1.357417,-0.397580,0.275223,5.083849,6.517072,8.754147,4.304316,0.928468,-2.366746,-7.578497,4.005478,-5.497008,2.506600,8.852360,-3.764733,-2.647536,-6.324492,-5.438805,-9.173739,7.885213,5.858113,-7.757388,-6.392061,2.162314,-7.462411,4.160839,-8.325727,-1.877447,7.434964,-9.580394,-6.519967,-7.655769,6.191388,7.907314,-1.818912,0.284272,4.853548,-8.674920,-6.697398,-1.963803,-9.444166,-1.779126,-5.123709,-3.134966,7.027056,6.630673,3.278751,-2.647919,-1.749814,-6.637356,-1.724868,-6.424273,-2.254019,2.451639,4.414035,3.001247,5.640730,-7.421566,-1.430940,5.727706,1.704887,5.026756,-8.707516,3.141154,5.981154,4.015012,3.351567,1.986797,5.012807,-7.263991,1.717513,-8.860944,-5.766772,-3.469467,2.420229,-4.358220,-5.149094,2.196265,6.424094,4.114603,9.913696,-0.585426,3.552030,-8.142657,-0.620870,5.756389,-7.586311,-1.343657,-6.765957,3.938283,6.207685,-7.245971,5.994205,-5.527377,-6.681923,-8.205118,7.624309,-2.648418,-9.172071,4.683149,-8.661295,-1.095087,-6.082345,5.368700,0.615400,-8.139077,-9.286524,-8.199219,-1.621659,-4.794599,5.930673,-8.426334,5.642784,9.344092,9.656008,-0.964615,3.186688,-5.818651,0.159611,-5.912309,-4.826738,8.025060,7.956421,5.003150,5.256266,-4.613640,-4.455454,3.690797,9.595014,4.444245,8.574516,-3.117856,0.095245,-6.314845,-8.186272,3.042058,5.245848,7.287382,0.078107,-0.987787,-9.735657,6.487283,-4.470211,-2.102649,8.526506,-1.380917,3.539730,3.822196,-5.532103,-3.107258,-0.539217,4.645828,-8.268205,-8.184087,6.221700,-0.610263,6.541086,-9.259552,-7.293398,6.372816,4.662468,-1.032948,7.466496,0.155549,9.970694,-0.625225,8.687034,9.086377,3.820532,3.624318,5.348396,-3.148541,8.380150,-7.406634,-2.631932,5.803712,1.815896,-7.839610,3.644979,-2.123734,0.840094,-9.681484,3.794434,9.972585,1.974954,0.922055,-4.037831,1.548611,8.772238,-5.522394,-5.800378,5.284137,2.759708,-7.900007,5.760207,-4.209269,4.547398,2.229070,-2.833865,6.436287,-5.252702,-3.678017,9.557958,-0.816655,8.029731,-8.565177,8.550695,-2.605218,3.851475,6.342191,5.972197,-5.650709,2.388309,0.234166,-1.895252,7.357475,-7.072143,9.484154,-7.079673,-9.119213,-6.464749,5.652881,-5.602106,6.307668,-5.762312,-9.775214,-5.473676,-6.854707,-3.442956,0.928829,4.394638,4.603362,2.479891,9.780374], dtype = "float32")#candidate|7758|(320,)|const|float32
call_7757 = relay.TupleGetItem(func_6319_call(relay.reshape(const_7758.astype('float32'), [10, 2, 16])), 0)
call_7759 = relay.TupleGetItem(func_6322_call(relay.reshape(const_7758.astype('float32'), [10, 2, 16])), 0)
output = relay.Tuple([call_7705,call_7723,var_7724,call_7753,call_7757,const_7758,])
output2 = relay.Tuple([call_7706,call_7725,var_7724,call_7754,call_7759,const_7758,])
func_7769 = relay.Function([var_7724,], output)
mod['func_7769'] = func_7769
mod = relay.transform.InferType()(mod)
var_7770 = relay.var("var_7770", dtype = "float32", shape = (1040,))#candidate|7770|(1040,)|var|float32
output = func_7769(var_7770)
func_7771 = relay.Function([var_7770], output)
mutated_mod['func_7771'] = func_7771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6351_call = mod.get_global_var('func_6351')
func_6352_call = mutated_mod.get_global_var('func_6352')
call_7797 = relay.TupleGetItem(func_6351_call(), 0)
call_7798 = relay.TupleGetItem(func_6352_call(), 0)
uop_7804 = relay.cosh(call_7797.astype('float32')) # shape=(12, 11, 12)
uop_7806 = relay.cosh(call_7798.astype('float32')) # shape=(12, 11, 12)
output = uop_7804
output2 = uop_7806
func_7816 = relay.Function([], output)
mod['func_7816'] = func_7816
mod = relay.transform.InferType()(mod)
mutated_mod['func_7816'] = func_7816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7816_call = mutated_mod.get_global_var('func_7816')
call_7817 = func_7816_call()
output = call_7817
func_7818 = relay.Function([], output)
mutated_mod['func_7818'] = func_7818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5535_call = mod.get_global_var('func_5535')
func_5536_call = mutated_mod.get_global_var('func_5536')
call_7830 = relay.TupleGetItem(func_5535_call(), 0)
call_7831 = relay.TupleGetItem(func_5536_call(), 0)
func_6351_call = mod.get_global_var('func_6351')
func_6352_call = mutated_mod.get_global_var('func_6352')
call_7838 = relay.TupleGetItem(func_6351_call(), 0)
call_7839 = relay.TupleGetItem(func_6352_call(), 0)
output = relay.Tuple([call_7830,call_7838,])
output2 = relay.Tuple([call_7831,call_7839,])
func_7845 = relay.Function([], output)
mod['func_7845'] = func_7845
mod = relay.transform.InferType()(mod)
mutated_mod['func_7845'] = func_7845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7845_call = mutated_mod.get_global_var('func_7845')
call_7846 = func_7845_call()
output = call_7846
func_7847 = relay.Function([], output)
mutated_mod['func_7847'] = func_7847
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7852 = relay.var("var_7852", dtype = "float64", shape = (12, 16, 5))#candidate|7852|(12, 16, 5)|var|float64
uop_7853 = relay.exp(var_7852.astype('float64')) # shape=(12, 16, 5)
func_7515_call = mod.get_global_var('func_7515')
func_7517_call = mutated_mod.get_global_var('func_7517')
call_7878 = func_7515_call()
call_7879 = func_7515_call()
func_4654_call = mod.get_global_var('func_4654')
func_4656_call = mutated_mod.get_global_var('func_4656')
var_7887 = relay.var("var_7887", dtype = "uint16", shape = (675,))#candidate|7887|(675,)|var|uint16
call_7886 = relay.TupleGetItem(func_4654_call(relay.reshape(var_7887.astype('uint16'), [5, 15, 9])), 1)
call_7888 = relay.TupleGetItem(func_4656_call(relay.reshape(var_7887.astype('uint16'), [5, 15, 9])), 1)
const_7893 = relay.const([[[-5.810770,-9.093076,6.534912,-3.113491,-0.438697],[1.174643,7.601075,1.983732,-9.258265,-6.522567],[8.320625,9.166924,2.312942,-4.255146,3.689817],[0.025928,0.627183,-1.957125,-7.508238,5.589616],[-4.467987,-3.915721,-1.743909,5.812162,3.133707],[-3.777535,-0.288047,6.733977,3.813498,-4.584315],[-5.265379,-0.209469,-4.991775,-3.433723,9.531464],[3.857175,-2.981447,-7.016056,2.306199,8.270116],[9.333954,1.862385,9.450550,-3.705274,-4.743573],[1.836824,-5.044021,0.544504,0.253401,7.596027],[9.365082,-6.800680,-5.580460,9.656661,-8.611147],[-1.796717,-9.871411,4.019623,7.047079,-6.199419],[4.686715,-7.373954,9.094032,-4.510825,5.122000],[-3.821965,-4.702984,2.640044,9.922122,-3.262835],[5.259885,4.676064,0.057717,-0.097580,-1.874280],[-8.848831,-1.606836,8.467598,-2.326912,-9.405351]],[[-6.157953,5.247460,2.238607,6.615244,6.757772],[4.329744,7.868385,-5.451330,3.319095,7.904516],[-1.813155,4.054270,-8.900430,-5.944724,-3.546860],[-8.562731,9.911291,8.520605,-3.547620,2.473286],[5.821781,3.188705,-4.187363,5.334180,-3.764515],[1.791838,-5.860457,7.703138,-9.310988,-0.362125],[9.376292,8.436388,-8.171838,3.660158,5.359108],[-3.678816,8.545081,3.691430,0.010630,-9.431154],[2.803033,-3.175881,-4.376384,-6.039931,-8.429930],[-5.715450,-1.918081,-8.993082,-8.848551,1.501495],[2.699724,-7.009625,3.419066,-0.976981,-9.120935],[-1.169276,-4.886954,-8.698718,7.365498,7.236646],[1.894661,2.083685,1.031845,-6.717589,6.317451],[-6.127171,9.272583,-6.641104,-6.171396,8.274176],[2.541742,0.025764,4.085588,-5.562127,-6.203218],[-0.140956,9.178159,2.234819,8.365132,2.034364]],[[-0.409593,9.941954,-0.844431,-1.672043,-0.956059],[-5.314574,-7.212351,-4.841336,1.261822,-5.132426],[-9.379585,7.495315,-3.195102,0.780648,-4.095753],[-8.579438,-2.828391,-7.603670,4.795234,7.967046],[-2.642191,0.930252,3.304572,-4.274031,3.603980],[8.525113,9.531027,1.995017,7.958787,-3.888006],[7.280725,-6.748826,-0.121891,8.750721,-2.800570],[-9.616789,-9.295328,4.747102,3.605447,-9.224126],[-2.752158,-2.341165,-6.407016,3.670301,-0.972885],[2.310234,-3.472072,9.679956,-7.676547,6.725034],[-9.869333,2.240498,3.186941,-6.134459,2.990294],[0.484920,-7.703439,1.531819,-9.786744,9.927609],[-3.868604,-9.614002,-1.732847,-2.256877,-8.808496],[2.646472,9.912382,2.296761,3.874441,8.286040],[-6.594464,-4.379341,-0.149226,1.667505,-3.826859],[-1.790590,5.605432,-2.772095,-7.672192,-7.013918]],[[-0.456774,2.315057,8.624454,-6.516051,8.956219],[7.594242,4.902222,-6.207639,8.774606,-7.111120],[-6.806763,0.636190,4.642632,-2.489757,-7.346461],[2.772404,-9.718744,-2.618654,5.516570,6.808565],[-6.112843,0.446476,-6.632696,6.920528,8.757069],[-8.767716,-2.653214,-6.099759,4.566088,-9.580857],[3.603405,-5.956185,-9.132242,6.600475,1.787703],[-8.654621,9.812723,1.863777,-5.776980,-3.500530],[-4.898943,6.466039,-5.095946,3.330720,-2.925133],[4.464284,4.419395,-0.937782,-4.104589,3.380662],[-5.355704,2.074649,6.238342,4.315658,7.419305],[-0.544973,-9.053587,2.355177,1.401511,-8.795266],[-3.612737,9.417592,4.073036,8.014132,-8.436940],[-2.438945,0.041657,-8.224407,-8.420879,-7.117540],[7.876902,-5.234735,-1.869294,-0.223330,-3.491151],[-6.213220,-2.370690,-9.076156,1.030268,7.146443]],[[-8.814358,-6.960628,6.139419,7.315469,-0.528085],[-4.179392,-6.981191,-5.874239,-0.412478,-7.271757],[7.148785,3.374116,-1.820249,-0.603650,2.005341],[0.564161,5.686446,8.294481,2.976428,-5.427614],[-0.100290,8.477993,9.330235,-1.649004,2.082764],[-1.451024,7.428000,-0.649445,4.730686,1.880741],[6.484047,9.509305,-0.285161,8.157779,3.255199],[5.871777,-5.614431,-9.123821,-0.770293,3.226412],[0.635910,4.194720,6.979829,-6.684090,-9.745991],[-8.870063,9.983272,-9.891661,-1.527372,6.748101],[1.579251,-6.838634,0.148261,-3.939131,6.859610],[2.061796,3.314431,2.200848,4.528181,-2.322236],[9.452172,8.259029,-9.897587,-0.057083,4.528637],[-7.938373,-3.287794,7.024430,2.125922,-8.674849],[6.299971,1.861542,-8.299909,-7.601220,-1.228805],[5.570608,1.149851,-1.302253,-4.996428,-6.845510]],[[-4.368734,-2.469965,3.503762,8.041399,1.545298],[4.468838,7.058153,-5.595580,6.954403,2.378914],[9.836992,1.398701,8.666330,-6.569693,-8.390930],[-2.329604,8.264925,-1.118986,-8.496637,9.088729],[4.168535,-0.301061,8.743956,-6.105240,3.688036],[-8.235520,-5.503587,8.204993,-9.988489,8.569040],[0.330126,2.367528,-4.348963,5.982435,5.807484],[4.879499,-7.396490,-9.176785,-6.158837,-4.150655],[-0.597463,-9.335478,1.765108,1.977626,0.951011],[-4.732023,-9.505797,0.290637,7.211162,3.514205],[0.601469,3.796883,-5.110920,3.168539,-7.604117],[8.176163,-0.940586,3.785446,6.094964,3.056503],[4.207688,0.534668,-9.317653,4.578036,-9.960378],[-8.550460,9.257061,6.297430,3.830552,-4.827977],[-7.095945,9.119381,7.139266,-0.789058,0.936522],[1.000979,-7.300203,-7.451877,8.536329,-7.938698]],[[-1.790514,4.071339,6.534061,5.636140,5.086945],[-4.429156,1.500160,-8.080204,2.545328,-9.168184],[7.148881,7.503865,-2.374126,-7.027828,1.508526],[7.892183,8.967555,3.658835,1.768760,-3.314373],[-6.953037,3.981603,-8.538036,-0.159547,-4.327086],[-5.900828,-9.238407,4.074236,2.961075,-9.672608],[0.932295,-0.398400,-7.258864,7.754661,-4.813627],[-6.678072,-2.052009,6.248029,-2.534601,-2.601886],[-1.252945,-6.561380,8.124148,5.148135,7.759375],[6.789872,-5.212701,5.687316,-3.195426,-3.638420],[-8.251649,1.875459,-7.511167,1.578244,6.626665],[-6.940786,-3.921225,-4.554012,-8.041226,-7.436174],[-7.181136,-0.065496,6.764774,1.398679,-2.585083],[5.734479,4.812998,-3.479579,0.761022,-8.826125],[7.866508,-7.176302,4.237272,8.443105,-1.542244],[4.981458,-9.273650,2.215045,3.892143,7.679519]],[[8.453551,3.567617,7.936637,-1.651978,5.331380],[0.712347,9.134919,0.576749,7.102694,9.350918],[-3.848972,-5.665730,-4.665123,4.617062,-2.501395],[-4.850329,0.798437,-8.051748,8.586965,1.215818],[3.471693,5.433963,-6.001463,9.685721,-4.819603],[7.263851,1.128979,9.163385,-6.081826,-7.566669],[8.961431,-4.309024,-4.388857,8.160674,4.070086],[-8.542107,-0.232118,-7.053319,-6.221492,-3.598230],[-9.448274,-3.395996,2.478739,7.676796,-8.352230],[-5.444417,-2.380664,-5.811927,-7.301963,-8.302641],[-0.948061,-0.880409,8.894708,4.705726,1.180555],[-2.785118,5.880146,7.855142,-0.666165,-9.074802],[-5.766925,-8.231720,4.595838,8.238386,-9.597482],[-7.327430,4.914194,9.410822,6.600220,-1.508669],[-3.906322,-0.849670,0.709421,-7.503609,-3.290068],[-1.832331,-6.811331,-2.466477,2.649236,3.828315]],[[5.363292,-8.553573,-0.680802,0.135426,-2.281329],[-7.116605,-1.262625,9.250001,2.759806,2.974556],[-0.691346,-6.302755,-6.941653,8.197690,1.386751],[-6.154805,-0.819449,7.073158,-6.700572,-5.631121],[-8.264952,-1.467107,0.332572,6.245127,0.757622],[-2.497577,-8.174007,-3.309205,0.873964,4.526258],[-0.472748,-2.828624,-4.221688,-2.169970,-5.319012],[-2.329328,8.914314,-6.319977,-1.704583,2.479417],[-8.778711,0.583702,2.326124,-1.046933,1.173971],[6.880344,1.981264,-7.946739,2.316865,-9.805318],[0.933915,-9.599000,6.228147,3.359444,-2.416154],[-5.154074,7.027384,-1.183377,8.902878,6.927234],[-1.752696,3.425524,-9.544988,2.798052,-4.039823],[-8.049929,-0.558541,-1.454061,6.893694,0.834561],[3.599157,-3.816450,-1.557973,0.289227,2.077017],[-2.328035,4.754611,5.431027,-7.959336,6.148067]],[[6.210745,-8.385352,-5.765241,7.844195,0.333325],[-4.894476,-9.316204,6.388537,0.986656,0.655308],[2.010236,-5.463382,0.696972,5.522820,-1.603820],[-9.819412,-3.571083,-6.673589,3.035484,-8.942582],[-6.643421,3.035927,5.999462,9.736466,0.429327],[-6.448541,6.446090,1.456107,-9.255223,-0.624193],[0.907704,-4.950441,3.773151,8.638847,1.807388],[2.774500,-4.580697,-0.811917,4.976831,-6.835697],[-4.743292,-9.118629,4.454325,-3.241200,-5.989530],[-8.421507,4.519472,9.806706,3.841034,-3.784259],[-4.295153,9.922717,-3.873232,-7.165087,3.124155],[7.441705,9.609978,5.864154,1.704394,2.298177],[-0.893776,-0.522049,-9.353172,5.286018,-5.690125],[-4.280307,1.588174,5.475239,-6.136849,-8.330221],[-5.628337,4.178278,9.967046,-8.396335,6.625258],[-8.142764,0.311586,8.142099,-6.363614,-7.826675]],[[-1.735660,3.706467,-5.933935,-9.273985,-7.021360],[-7.601892,-5.139402,1.372854,2.143711,-4.875534],[6.180842,-0.300916,4.738481,-9.087272,-3.379720],[-0.226664,-2.956325,3.471302,-0.110821,0.322551],[-2.701230,8.269590,4.431701,-3.429034,-7.061201],[0.596670,6.001047,0.366062,-4.152532,-6.755245],[-6.254720,3.709838,-2.214097,9.966823,-2.658365],[3.662251,-9.653910,8.485240,6.549996,-0.834226],[3.774846,8.194894,-2.308834,2.852638,5.406806],[7.011142,2.101784,-9.769495,8.723997,-6.276167],[-8.734692,-6.569290,3.748200,-0.710354,4.369416],[-9.223733,2.676279,4.368257,-8.679809,-5.629929],[-6.857347,9.270539,-9.166301,7.074581,6.225460],[-8.182888,-3.982224,2.686059,-8.580113,-4.541452],[-8.991654,-9.355838,0.500534,7.326894,8.166446],[3.242791,-5.018567,8.404625,-0.803279,-0.861729]],[[-5.066219,3.319195,-4.571893,-0.175109,-0.555821],[-9.592426,-7.596247,-6.519542,9.930430,2.374654],[9.707012,-4.299434,-9.585063,3.602511,0.907670],[-5.673747,-1.288076,-8.006367,-9.757030,9.857568],[5.021598,-7.363818,6.492650,8.497910,-6.959864],[4.240648,3.799406,1.210393,4.845363,-5.726943],[5.767538,-3.490151,-8.076346,-0.494591,-7.366659],[-4.089782,7.658712,8.104925,6.764707,4.620267],[5.046695,-6.914923,3.971804,-9.737361,-1.214261],[2.292454,-7.215474,3.359263,-1.261144,8.550108],[0.195552,-6.075684,-5.029190,4.879956,3.088123],[-0.949598,9.533389,6.603219,-8.178746,2.047635],[9.078634,-3.123304,9.098906,-2.239023,8.165903],[-6.086962,8.093689,-3.630761,-5.818895,-7.448868],[-2.462782,-1.522577,0.036331,-3.673502,-6.936262],[-8.052877,-3.928899,6.671513,-0.921541,1.641042]]], dtype = "float64")#candidate|7893|(12, 16, 5)|const|float64
bop_7894 = relay.logical_and(var_7852.astype('bool'), relay.reshape(const_7893.astype('bool'), relay.shape_of(var_7852))) # shape=(12, 16, 5)
output = relay.Tuple([uop_7853,call_7878,call_7886,var_7887,bop_7894,])
output2 = relay.Tuple([uop_7853,call_7879,call_7888,var_7887,bop_7894,])
func_7899 = relay.Function([var_7852,var_7887,], output)
mod['func_7899'] = func_7899
mod = relay.transform.InferType()(mod)
mutated_mod['func_7899'] = func_7899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7899_call = mutated_mod.get_global_var('func_7899')
var_7901 = relay.var("var_7901", dtype = "float64", shape = (12, 16, 5))#candidate|7901|(12, 16, 5)|var|float64
var_7902 = relay.var("var_7902", dtype = "uint16", shape = (675,))#candidate|7902|(675,)|var|uint16
call_7900 = func_7899_call(var_7901,var_7902,)
output = call_7900
func_7903 = relay.Function([var_7901,var_7902,], output)
mutated_mod['func_7903'] = func_7903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6310_call = mod.get_global_var('func_6310')
func_6312_call = mutated_mod.get_global_var('func_6312')
call_7946 = relay.TupleGetItem(func_6310_call(), 0)
call_7947 = relay.TupleGetItem(func_6312_call(), 0)
output = relay.Tuple([call_7946,])
output2 = relay.Tuple([call_7947,])
func_7952 = relay.Function([], output)
mod['func_7952'] = func_7952
mod = relay.transform.InferType()(mod)
output = func_7952()
func_7953 = relay.Function([], output)
mutated_mod['func_7953'] = func_7953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6861_call = mod.get_global_var('func_6861')
func_6862_call = mutated_mod.get_global_var('func_6862')
call_7980 = relay.TupleGetItem(func_6861_call(), 0)
call_7981 = relay.TupleGetItem(func_6862_call(), 0)
var_7987 = relay.var("var_7987", dtype = "uint8", shape = (5, 135))#candidate|7987|(5, 135)|var|uint8
bop_7988 = relay.subtract(call_7980.astype('uint32'), relay.reshape(var_7987.astype('uint32'), relay.shape_of(call_7980))) # shape=(5, 135)
bop_7991 = relay.subtract(call_7981.astype('uint32'), relay.reshape(var_7987.astype('uint32'), relay.shape_of(call_7981))) # shape=(5, 135)
bop_8003 = relay.add(call_7980.astype('uint16'), relay.reshape(var_7987.astype('uint16'), relay.shape_of(call_7980))) # shape=(5, 135)
bop_8006 = relay.add(call_7981.astype('uint16'), relay.reshape(var_7987.astype('uint16'), relay.shape_of(call_7981))) # shape=(5, 135)
uop_8023 = relay.cos(bop_7988.astype('float64')) # shape=(5, 135)
uop_8025 = relay.cos(bop_7991.astype('float64')) # shape=(5, 135)
func_6473_call = mod.get_global_var('func_6473')
func_6476_call = mutated_mod.get_global_var('func_6476')
var_8037 = relay.var("var_8037", dtype = "float64", shape = (385, 3))#candidate|8037|(385, 3)|var|float64
var_8038 = relay.var("var_8038", dtype = "int8", shape = (1404,))#candidate|8038|(1404,)|var|int8
call_8036 = relay.TupleGetItem(func_6473_call(relay.reshape(var_8037.astype('float64'), [1155,]), relay.reshape(var_8038.astype('int8'), [1404,]), ), 0)
call_8039 = relay.TupleGetItem(func_6476_call(relay.reshape(var_8037.astype('float64'), [1155,]), relay.reshape(var_8038.astype('int8'), [1404,]), ), 0)
uop_8040 = relay.rsqrt(uop_8023.astype('float64')) # shape=(5, 135)
uop_8042 = relay.rsqrt(uop_8025.astype('float64')) # shape=(5, 135)
func_7816_call = mod.get_global_var('func_7816')
func_7818_call = mutated_mod.get_global_var('func_7818')
call_8049 = func_7816_call()
call_8050 = func_7816_call()
func_6378_call = mod.get_global_var('func_6378')
func_6380_call = mutated_mod.get_global_var('func_6380')
call_8057 = relay.TupleGetItem(func_6378_call(), 0)
call_8058 = relay.TupleGetItem(func_6380_call(), 0)
output = relay.Tuple([bop_8003,call_8036,var_8037,var_8038,uop_8040,call_8049,call_8057,])
output2 = relay.Tuple([bop_8006,call_8039,var_8037,var_8038,uop_8042,call_8050,call_8058,])
func_8064 = relay.Function([var_7987,var_8037,var_8038,], output)
mod['func_8064'] = func_8064
mod = relay.transform.InferType()(mod)
mutated_mod['func_8064'] = func_8064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8064_call = mutated_mod.get_global_var('func_8064')
var_8066 = relay.var("var_8066", dtype = "uint8", shape = (5, 135))#candidate|8066|(5, 135)|var|uint8
var_8067 = relay.var("var_8067", dtype = "float64", shape = (385, 3))#candidate|8067|(385, 3)|var|float64
var_8068 = relay.var("var_8068", dtype = "int8", shape = (1404,))#candidate|8068|(1404,)|var|int8
call_8065 = func_8064_call(var_8066,var_8067,var_8068,)
output = call_8065
func_8069 = relay.Function([var_8066,var_8067,var_8068,], output)
mutated_mod['func_8069'] = func_8069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5446_call = mod.get_global_var('func_5446')
func_5448_call = mutated_mod.get_global_var('func_5448')
call_8082 = relay.TupleGetItem(func_5446_call(), 0)
call_8083 = relay.TupleGetItem(func_5448_call(), 0)
func_5663_call = mod.get_global_var('func_5663')
func_5665_call = mutated_mod.get_global_var('func_5665')
call_8097 = relay.TupleGetItem(func_5663_call(), 0)
call_8098 = relay.TupleGetItem(func_5665_call(), 0)
uop_8102 = relay.log10(call_8082.astype('float32')) # shape=(12, 11, 12)
uop_8104 = relay.log10(call_8083.astype('float32')) # shape=(12, 11, 12)
output = relay.Tuple([call_8097,uop_8102,])
output2 = relay.Tuple([call_8098,uop_8104,])
func_8106 = relay.Function([], output)
mod['func_8106'] = func_8106
mod = relay.transform.InferType()(mod)
mutated_mod['func_8106'] = func_8106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8106_call = mutated_mod.get_global_var('func_8106')
call_8107 = func_8106_call()
output = call_8107
func_8108 = relay.Function([], output)
mutated_mod['func_8108'] = func_8108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6043_call = mod.get_global_var('func_6043')
func_6044_call = mutated_mod.get_global_var('func_6044')
call_8132 = func_6043_call()
call_8133 = func_6043_call()
output = relay.Tuple([call_8132,])
output2 = relay.Tuple([call_8133,])
func_8134 = relay.Function([], output)
mod['func_8134'] = func_8134
mod = relay.transform.InferType()(mod)
mutated_mod['func_8134'] = func_8134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8134_call = mutated_mod.get_global_var('func_8134')
call_8135 = func_8134_call()
output = call_8135
func_8136 = relay.Function([], output)
mutated_mod['func_8136'] = func_8136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8156 = relay.var("var_8156", dtype = "uint64", shape = (1, 10, 13))#candidate|8156|(1, 10, 13)|var|uint64
var_8157 = relay.var("var_8157", dtype = "uint64", shape = (3, 10, 13))#candidate|8157|(3, 10, 13)|var|uint64
bop_8158 = relay.bitwise_or(var_8156.astype('uint64'), var_8157.astype('uint64')) # shape=(3, 10, 13)
uop_8166 = relay.tan(var_8156.astype('float32')) # shape=(1, 10, 13)
func_5663_call = mod.get_global_var('func_5663')
func_5665_call = mutated_mod.get_global_var('func_5665')
call_8180 = relay.TupleGetItem(func_5663_call(), 1)
call_8181 = relay.TupleGetItem(func_5665_call(), 1)
func_7122_call = mod.get_global_var('func_7122')
func_7124_call = mutated_mod.get_global_var('func_7124')
call_8192 = relay.TupleGetItem(func_7122_call(), 0)
call_8193 = relay.TupleGetItem(func_7124_call(), 0)
bop_8200 = relay.bitwise_xor(uop_8166.astype('uint8'), bop_8158.astype('uint8')) # shape=(3, 10, 13)
func_7593_call = mod.get_global_var('func_7593')
func_7596_call = mutated_mod.get_global_var('func_7596')
var_8205 = relay.var("var_8205", dtype = "uint8", shape = ())#candidate|8205|()|var|uint8
const_8206 = relay.const([8,-7,2,-1,10,1,2,8,-4,-4,4,7,-9,-10,-5,8,-5,-8,-1,-9,5,-1,-5,4,-1,2,-4,-1,-7,-7,-5,6,2,-4,-4,-3,3,8,3,9,2,-9,2,1,-2,2,5,-7,3,-1,-4,-10,6,-7,9,3,7,10,-6,1,-1,-7,-2,-5,-8,3,-1,-1,10,6,-5,-3,-4,4,-3,-10,-7,-1,1,-3,2,-3,1,-10,3,2,-8,10,7,-2,6,-5,10,1,1,2,-4,-6,8,-7,3,-9,-6,3,-3,-4,-8,2,-4,-9,1,-8,-6,-9,2,5,5,8,-3,5,-5,-4,7,-1,3,5,3,6,-10,6,-2,9,7,1,8,5,-6,-8,-7,3,1,3,-1,-3,-5,-5,2,-4,-1,8,-2,3,-3,10,-10,-1,1,2,10,-5,6,2,3,-6,3,-6,-8,3,-9,-1,-4,-7,4,-8,-7,-1,-2,1,-3,2,1,-2,-6,-10,8,4,-4,8,4,-6,7,-6,-4,-6,3,4,-5,-5,-3,-8,6,4,4,-2,8,-9,-7,5,1,-10,-9,-10,-3,9,-10,7,-8,-8,3,-1,9,-5,5,10,1,-2,-4,-7,7,-1,1,-5,-8,-3,2,-1,8,-7,-6,-10,-5,-7,7,6,-8,-3,4,1,-10,3,10,2,10,2,-6,-2,5,2,3,-7,4,3,-7,-1,9,-8,-10,9,-2,5,-1,1,-8,9,-10,4,4,3,10,-8,-2,9,9,-1,7,8,-4,-6,-1,-4,1,6,-5,-9,-5,-3,-3,8,-10,-2,-6,7,-9,-4,7,-1,8,-6,-8,-10,-1,-1,-5,8,-7,-2,-1,5,-3,-10,9,-1,-1,-1,-9,2,-4,-4,-2,-4,-3,4,-9,-3,9,3,5,6,8,-4,8,6,-9,-1,-5,9,-5,-9,5,-7,3,4,-1,-5,10,7,-5,10,-7,4,9,-7,8,1,8,-8,5,1,2,8,-3,-10,9,-2,-4,-8,10,1,1,-3,-9,10,-3,-3,-6,7,-5,-10,10,3,-8,8,4,10,-1,-4,4,-8,6,-1,2,4,6,4,-5,1,5,5,-9,7,-6,4,-7,-6,-4,5,-7,-3,-2,1,1,-3,1,8,-1,-2,9,8,8,9,10,-8,-3,-10,-8,-2,-10,7,-3,3,-1,-2,3,-6,-3,-5,-9,8,3,-6,-8,10,-5,1,-2,-3,-1,3,6,-7,4,-2,4,-6,-9,-10,3,6,6,8,-6,-5,8,3,9,3,-1,-8,-6,-1,-7,3,-10,-9,-10,8,-8,5,3,7,5,7,6,10,-10,-8,-4,8,-4,4,-4,2,-5,7,2,-2,-8,4,2,6,8,10,9,-6,5,-8,2,4,-6,7,-6,6,8,8,5,4,9,5,-2,-8,-1,-9,-6,-2,3,-10,-10,5,-6,10,6,-5,7,-3,-1,5,9,6,-6,-8,8,10,-2,-8,7,-2,-1,9,8,-7,5,2,-6,9,-7,-3,-3,-4,7,5,-1,10,-7,2,-3,6,-2,9,-7,2,-5,8,7,3,6,-9,-9,3,-7,3,3,-7,-10,-5,-5,10,1,8,-1,-1,10,-6,-6,-5,3,5,7,-2,-8,-3,-3,5,-10,1,5,-10,1,-4,-6,-2,-6,6,-8,-10,7,-1,6,-6,10,-2,9,-10,10,9,-2,7,-9,3,3,-6,-9,-1,-5,-3,-4,2,7,-6,-5,-2,-6,-4,4,-10,1,5,5,4,3,-6,2,-2,7,5,3,-8,-8,1,2,-9,9,4,10,-3,5,1,7,-8,3,8,-3,-4,1,-3,1,5,-5,-6,-6,9,-8,3,-8,-2,4,-9,-6,-8,-2,-9,4,-3,-2,-6,-7,2,-7,-5,-5,8,-6,-4,3,9,-6,8,-2,-1,-1,-5,-1,-6,-1,5,-7,-5,1,-5,-3,8,3,-1,9,9,8,10,10,-2,-8,-7,10,-8,-1,-5,-7,6,-1,5,1,-9,8,10,5,9,7,-8,7,-9,-9,5,-7,8,-1,5,-6,1,-6,-10,-3,6,-2,-8,-10,-9,9,-7,-8,4,5,-9,6,3,-1,4,-1,-3,-5,-3,-7,-4,-8,-5,-5,6,-10,10,-7,9,7,3,4,-2,8,-3,-2,3,7,8,9,-1,1,7,6,7,9,-5,5,-1,-5,-7,-9,-6,-2,-10,8,-2,-5,-6,-2,6,2,-4,9,1,-8,-2,1,-7,2,-6,9,1,4,4,-2,-9,4,-1,-7,-8,1,3,-7,8,8,-4,-9,-10,2,-1,6,9,1,4,2,-6,9,-8,-10,8,10,6,6,-4,-9,3,5,7,1,8,1,-10,-3,-1,-5,-2,2,6,-3,-6,-5,10,-2,8,8,9,-7,-4,-7,3,3,-7,-3,-2,-3,-9,-1,8,7,9,1,-5,-6,7,3,5,5,-2,7,5,6,8,-4,-1,4,6,-7,-4,-9,4,2,9,-3,6,-5,-10,6,8,-6,-10,-8,-6,7,-6,10,10,9,-7,-10,-2,7,-6,2,4,-3,-8,3,4,3,-10,-1,-3,2,5,-7,9,-1,-9,-8,-2,-1,2,6,8,7,2,-10,8,-7,4,-10,-7,7,-5,-1,6,7,8,3,3,-3,7,10,-5,-6,10,-1,8,-5,5,-8,-9,-10,-10,-2,4,-8,9,6,-4,3,10,-10,-4,-9,-2,1,-6,8,-3,-9,-8,-7,8,2,-8,5,-1,-6,4,5,4,5,8,-4,-6,7,3,-4,9,-2,-1,5,-5,-8,-6,-3,2,10,3,-10,-10,-6,4,3,-4,-2,-3,-10,10,7,4,8,-2,-5,-6,-6,3,-9,-10,10,-1,-2,1,-5,1,-7,-6,8,-7,2,7,10,-8,4,-3,-5,-7,1,8,-9,9,-3,-2,2,-3,3,-10,9,-1,-9,9,1,10,4,-7,8,-10,3,-1,3,7,5,8,7,-7,8,-10,-2,10], dtype = "uint8")#candidate|8206|(1120,)|const|uint8
call_8204 = func_7593_call(relay.reshape(var_8205.astype('uint8'), []), relay.reshape(const_8206.astype('uint8'), [14, 10, 8]), )
call_8207 = func_7593_call(relay.reshape(var_8205.astype('uint8'), []), relay.reshape(const_8206.astype('uint8'), [14, 10, 8]), )
output = relay.Tuple([call_8180,call_8192,bop_8200,call_8204,var_8205,const_8206,])
output2 = relay.Tuple([call_8181,call_8193,bop_8200,call_8207,var_8205,const_8206,])
func_8216 = relay.Function([var_8156,var_8157,var_8205,], output)
mod['func_8216'] = func_8216
mod = relay.transform.InferType()(mod)
mutated_mod['func_8216'] = func_8216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8216_call = mutated_mod.get_global_var('func_8216')
var_8218 = relay.var("var_8218", dtype = "uint64", shape = (1, 10, 13))#candidate|8218|(1, 10, 13)|var|uint64
var_8219 = relay.var("var_8219", dtype = "uint64", shape = (3, 10, 13))#candidate|8219|(3, 10, 13)|var|uint64
var_8220 = relay.var("var_8220", dtype = "uint8", shape = ())#candidate|8220|()|var|uint8
call_8217 = func_8216_call(var_8218,var_8219,var_8220,)
output = call_8217
func_8221 = relay.Function([var_8218,var_8219,var_8220,], output)
mutated_mod['func_8221'] = func_8221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5339_call = mod.get_global_var('func_5339')
func_5341_call = mutated_mod.get_global_var('func_5341')
call_8223 = func_5339_call()
call_8224 = func_5339_call()
func_6351_call = mod.get_global_var('func_6351')
func_6352_call = mutated_mod.get_global_var('func_6352')
call_8225 = relay.TupleGetItem(func_6351_call(), 0)
call_8226 = relay.TupleGetItem(func_6352_call(), 0)
output = relay.Tuple([call_8223,call_8225,])
output2 = relay.Tuple([call_8224,call_8226,])
func_8243 = relay.Function([], output)
mod['func_8243'] = func_8243
mod = relay.transform.InferType()(mod)
mutated_mod['func_8243'] = func_8243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8243_call = mutated_mod.get_global_var('func_8243')
call_8244 = func_8243_call()
output = call_8244
func_8245 = relay.Function([], output)
mutated_mod['func_8245'] = func_8245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6482_call = mod.get_global_var('func_6482')
func_6483_call = mutated_mod.get_global_var('func_6483')
call_8251 = func_6482_call()
call_8252 = func_6482_call()
uop_8255 = relay.erf(call_8251.astype('float32')) # shape=(5, 5, 8)
uop_8257 = relay.erf(call_8252.astype('float32')) # shape=(5, 5, 8)
output = relay.Tuple([uop_8255,])
output2 = relay.Tuple([uop_8257,])
func_8266 = relay.Function([], output)
mod['func_8266'] = func_8266
mod = relay.transform.InferType()(mod)
mutated_mod['func_8266'] = func_8266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8266_call = mutated_mod.get_global_var('func_8266')
call_8267 = func_8266_call()
output = call_8267
func_8268 = relay.Function([], output)
mutated_mod['func_8268'] = func_8268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8277 = relay.var("var_8277", dtype = "float64", shape = (1, 6, 2))#candidate|8277|(1, 6, 2)|var|float64
var_8278 = relay.var("var_8278", dtype = "float64", shape = (8, 6, 2))#candidate|8278|(8, 6, 2)|var|float64
bop_8279 = relay.floor_mod(var_8277.astype('float64'), var_8278.astype('float64')) # shape=(8, 6, 2)
func_6043_call = mod.get_global_var('func_6043')
func_6044_call = mutated_mod.get_global_var('func_6044')
call_8291 = func_6043_call()
call_8292 = func_6043_call()
func_7952_call = mod.get_global_var('func_7952')
func_7953_call = mutated_mod.get_global_var('func_7953')
call_8305 = relay.TupleGetItem(func_7952_call(), 0)
call_8306 = relay.TupleGetItem(func_7953_call(), 0)
func_6043_call = mod.get_global_var('func_6043')
func_6044_call = mutated_mod.get_global_var('func_6044')
call_8308 = func_6043_call()
call_8309 = func_6043_call()
uop_8312 = relay.cosh(var_8277.astype('float64')) # shape=(1, 6, 2)
func_6043_call = mod.get_global_var('func_6043')
func_6044_call = mutated_mod.get_global_var('func_6044')
call_8314 = func_6043_call()
call_8315 = func_6043_call()
output = relay.Tuple([bop_8279,call_8291,call_8305,call_8308,uop_8312,call_8314,])
output2 = relay.Tuple([bop_8279,call_8292,call_8306,call_8309,uop_8312,call_8315,])
func_8324 = relay.Function([var_8277,var_8278,], output)
mod['func_8324'] = func_8324
mod = relay.transform.InferType()(mod)
var_8325 = relay.var("var_8325", dtype = "float64", shape = (1, 6, 2))#candidate|8325|(1, 6, 2)|var|float64
var_8326 = relay.var("var_8326", dtype = "float64", shape = (8, 6, 2))#candidate|8326|(8, 6, 2)|var|float64
output = func_8324(var_8325,var_8326,)
func_8327 = relay.Function([var_8325,var_8326,], output)
mutated_mod['func_8327'] = func_8327
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6298_call = mod.get_global_var('func_6298')
func_6300_call = mutated_mod.get_global_var('func_6300')
call_8335 = func_6298_call()
call_8336 = func_6298_call()
output = call_8335
output2 = call_8336
func_8354 = relay.Function([], output)
mod['func_8354'] = func_8354
mod = relay.transform.InferType()(mod)
output = func_8354()
func_8355 = relay.Function([], output)
mutated_mod['func_8355'] = func_8355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5523_call = mod.get_global_var('func_5523')
func_5524_call = mutated_mod.get_global_var('func_5524')
call_8448 = relay.TupleGetItem(func_5523_call(), 0)
call_8449 = relay.TupleGetItem(func_5524_call(), 0)
output = call_8448
output2 = call_8449
func_8463 = relay.Function([], output)
mod['func_8463'] = func_8463
mod = relay.transform.InferType()(mod)
mutated_mod['func_8463'] = func_8463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8463_call = mutated_mod.get_global_var('func_8463')
call_8464 = func_8463_call()
output = call_8464
func_8465 = relay.Function([], output)
mutated_mod['func_8465'] = func_8465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6351_call = mod.get_global_var('func_6351')
func_6352_call = mutated_mod.get_global_var('func_6352')
call_8473 = relay.TupleGetItem(func_6351_call(), 0)
call_8474 = relay.TupleGetItem(func_6352_call(), 0)
const_8475 = relay.const([[[False,True,True,True,True,True,True,True,True,False,True,False],[True,False,True,True,False,False,False,False,True,True,True,True],[False,True,True,False,False,True,True,False,True,False,True,False],[True,True,True,False,True,False,True,False,True,False,True,True],[False,True,True,False,True,False,True,True,False,False,False,False],[False,True,True,True,True,False,True,False,True,False,False,True],[True,True,True,False,False,True,True,False,False,False,False,True],[False,True,True,False,False,True,True,False,False,False,True,True],[False,False,True,False,False,True,True,True,True,False,True,True],[True,False,True,False,False,False,True,True,True,False,True,True],[True,False,True,True,False,False,False,True,False,True,True,True]],[[True,False,False,False,False,False,True,False,False,False,False,True],[False,True,False,False,False,True,True,True,False,True,True,False],[True,True,True,False,True,False,True,False,False,True,False,True],[True,True,True,False,True,True,True,False,False,True,False,False],[False,True,False,False,False,True,True,False,False,False,False,True],[True,True,True,True,False,True,False,False,False,True,False,False],[False,True,False,True,False,False,True,False,True,True,True,False],[False,False,False,True,False,False,False,True,True,False,True,True],[True,True,True,False,True,True,False,True,False,False,False,False],[False,False,True,True,True,False,True,False,False,True,True,False],[True,True,False,False,True,True,False,True,False,True,True,True]],[[True,True,True,True,True,True,False,True,True,True,False,True],[True,False,True,True,True,False,True,True,True,True,True,True],[False,True,False,True,True,True,False,False,False,True,True,True],[True,True,False,False,False,False,True,True,False,False,False,False],[False,False,True,False,True,False,True,False,False,True,True,True],[False,True,True,False,True,False,True,False,False,True,False,False],[True,False,False,False,False,False,False,True,False,True,True,False],[True,False,False,True,True,True,False,True,False,True,True,True],[False,False,True,False,True,False,False,False,False,False,False,False],[True,False,True,True,True,False,True,True,False,True,False,True],[False,True,False,True,False,True,False,False,True,False,False,False]],[[False,True,True,False,True,True,False,False,False,False,False,True],[False,True,False,True,True,True,False,True,False,True,False,False],[False,True,True,False,True,True,False,True,False,True,True,False],[True,True,False,True,True,False,False,False,False,True,True,True],[False,True,False,False,False,True,False,True,False,True,True,True],[True,True,False,True,True,True,True,False,False,False,True,False],[False,True,False,False,False,True,True,False,False,False,False,True],[True,True,False,True,False,True,False,True,False,False,True,True],[True,False,True,True,False,False,True,True,False,True,True,False],[False,True,True,True,True,True,False,False,False,False,True,True],[True,True,False,True,True,True,True,False,False,False,True,False]],[[True,True,True,True,False,True,True,True,False,False,False,True],[False,False,True,False,False,False,True,True,True,False,False,False],[True,True,False,True,False,True,False,True,False,True,False,True],[False,True,False,False,False,False,True,False,False,False,False,False],[False,False,True,True,False,True,True,True,True,True,True,True],[True,True,False,True,False,False,False,True,True,False,True,True],[False,True,True,False,True,False,False,False,False,True,True,False],[True,True,True,False,False,False,True,True,True,True,True,False],[True,True,True,False,False,False,False,False,True,True,True,True],[True,True,True,True,True,False,True,False,True,True,False,False],[True,True,True,True,False,False,True,True,False,False,True,False]],[[False,True,False,False,True,True,True,False,True,False,False,False],[False,True,False,False,False,False,False,False,True,True,True,True],[False,False,False,False,False,True,False,False,True,False,False,False],[False,True,False,True,True,False,True,False,False,True,False,False],[True,False,False,False,True,True,True,True,True,True,True,True],[False,True,False,True,False,False,True,False,False,False,True,True],[False,False,True,False,True,True,True,False,True,True,False,True],[True,True,False,False,False,False,False,False,True,False,False,True],[False,True,True,False,True,False,False,False,False,True,False,True],[True,True,True,False,True,True,True,False,False,False,False,False],[False,False,True,True,False,True,True,True,False,False,True,False]],[[True,True,False,True,True,False,True,False,False,False,False,True],[False,False,True,False,False,True,True,False,False,False,True,False],[True,False,True,True,True,True,True,False,False,True,True,True],[False,False,True,False,True,False,True,True,False,False,True,False],[True,False,False,True,False,True,False,True,False,True,True,True],[False,False,True,True,False,False,False,False,True,False,False,False],[False,True,True,False,True,False,False,False,True,False,False,True],[True,False,True,True,True,False,False,False,False,True,True,False],[False,True,False,True,True,False,True,True,True,False,True,False],[False,True,True,True,True,True,True,True,True,False,False,False],[False,True,False,False,False,True,True,False,True,True,True,False]],[[False,False,False,True,False,True,False,True,True,True,False,False],[False,True,True,True,True,False,True,True,True,False,False,True],[True,True,False,False,False,True,True,False,False,True,False,False],[False,False,True,True,True,False,False,True,True,True,False,True],[True,True,False,False,True,False,False,True,True,False,True,False],[True,False,False,True,True,False,False,False,False,True,True,True],[True,True,False,True,True,False,False,False,False,False,True,True],[True,True,False,False,True,False,False,False,False,True,False,False],[True,False,False,False,True,True,True,True,True,False,False,False],[False,False,False,False,False,True,False,True,False,False,False,True],[False,False,False,True,True,False,True,True,False,True,True,True]],[[False,False,False,True,False,False,True,True,False,False,True,True],[True,True,False,False,False,False,True,False,True,True,True,False],[True,False,True,True,True,False,True,False,True,True,True,True],[False,True,False,False,True,False,True,False,True,False,False,True],[False,False,False,True,True,True,False,True,False,True,False,True],[False,True,True,True,True,True,False,True,False,True,True,True],[True,True,True,False,True,False,False,True,False,False,True,True],[True,True,False,True,False,True,True,False,False,False,True,True],[True,False,False,True,True,False,False,False,True,False,False,False],[False,False,True,False,False,False,True,False,True,False,True,False],[True,False,False,True,True,False,True,False,False,True,False,True]],[[True,False,True,False,False,True,False,False,False,False,False,False],[False,False,False,False,False,False,False,True,False,False,False,True],[False,True,False,False,True,False,True,False,False,False,True,True],[False,True,True,False,True,False,False,False,False,True,False,False],[True,False,True,True,False,True,True,True,True,True,True,False],[True,True,False,True,True,True,False,True,True,False,True,False],[False,False,False,False,True,False,False,False,False,True,True,True],[False,False,False,True,True,True,True,False,False,False,False,False],[True,False,True,False,False,True,True,False,True,True,False,False],[False,False,False,False,True,True,True,False,False,True,True,True],[True,True,False,True,True,False,True,False,False,True,True,True]],[[False,False,True,True,True,False,True,True,False,True,False,False],[False,True,False,False,True,True,False,False,False,False,True,True],[False,True,False,False,False,True,True,False,True,True,True,False],[True,False,False,True,True,False,True,True,True,True,False,False],[True,False,False,True,False,False,True,False,True,True,False,True],[False,False,True,True,True,False,True,False,False,True,True,True],[True,True,False,True,False,False,True,True,False,False,True,False],[False,False,False,True,True,True,False,True,True,True,False,False],[True,True,False,True,True,True,False,False,False,False,True,True],[True,True,False,True,True,True,False,True,True,False,False,False],[True,False,True,False,True,True,False,False,True,False,True,False]],[[False,True,False,False,True,False,True,False,True,False,False,False],[True,False,True,True,False,True,True,False,True,True,False,False],[False,True,False,True,True,True,True,True,False,False,False,True],[False,True,False,True,True,False,True,True,False,False,False,False],[True,True,False,False,False,True,False,True,False,False,False,True],[True,False,True,True,False,True,False,False,False,False,True,False],[False,False,True,False,False,True,True,True,False,True,True,True],[False,True,False,False,True,False,False,False,False,True,True,False],[False,True,False,False,False,True,False,False,True,True,True,True],[False,False,False,True,True,True,False,False,False,False,False,True],[False,False,True,True,True,False,True,True,False,False,False,False]]], dtype = "bool")#candidate|8475|(12, 11, 12)|const|bool
bop_8476 = relay.bitwise_or(call_8473.astype('int64'), relay.reshape(const_8475.astype('int64'), relay.shape_of(call_8473))) # shape=(12, 11, 12)
bop_8479 = relay.bitwise_or(call_8474.astype('int64'), relay.reshape(const_8475.astype('int64'), relay.shape_of(call_8474))) # shape=(12, 11, 12)
func_6773_call = mod.get_global_var('func_6773')
func_6777_call = mutated_mod.get_global_var('func_6777')
var_8489 = relay.var("var_8489", dtype = "int8", shape = (112,))#candidate|8489|(112,)|var|int8
var_8490 = relay.var("var_8490", dtype = "int8", shape = (896,))#candidate|8490|(896,)|var|int8
call_8488 = relay.TupleGetItem(func_6773_call(relay.reshape(var_8489.astype('int8'), [16, 1, 7]), relay.reshape(var_8490.astype('int8'), [16, 8, 7]), ), 2)
call_8491 = relay.TupleGetItem(func_6777_call(relay.reshape(var_8489.astype('int8'), [16, 1, 7]), relay.reshape(var_8490.astype('int8'), [16, 8, 7]), ), 2)
uop_8495 = relay.atanh(const_8475.astype('float32')) # shape=(12, 11, 12)
output = relay.Tuple([bop_8476,call_8488,var_8489,var_8490,uop_8495,])
output2 = relay.Tuple([bop_8479,call_8491,var_8489,var_8490,uop_8495,])
func_8500 = relay.Function([var_8489,var_8490,], output)
mod['func_8500'] = func_8500
mod = relay.transform.InferType()(mod)
mutated_mod['func_8500'] = func_8500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8500_call = mutated_mod.get_global_var('func_8500')
var_8502 = relay.var("var_8502", dtype = "int8", shape = (112,))#candidate|8502|(112,)|var|int8
var_8503 = relay.var("var_8503", dtype = "int8", shape = (896,))#candidate|8503|(896,)|var|int8
call_8501 = func_8500_call(var_8502,var_8503,)
output = call_8501
func_8504 = relay.Function([var_8502,var_8503,], output)
mutated_mod['func_8504'] = func_8504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7383_call = mod.get_global_var('func_7383')
func_7384_call = mutated_mod.get_global_var('func_7384')
call_8506 = func_7383_call()
call_8507 = func_7383_call()
output = call_8506
output2 = call_8507
func_8508 = relay.Function([], output)
mod['func_8508'] = func_8508
mod = relay.transform.InferType()(mod)
mutated_mod['func_8508'] = func_8508
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8508_call = mutated_mod.get_global_var('func_8508')
call_8509 = func_8508_call()
output = call_8509
func_8510 = relay.Function([], output)
mutated_mod['func_8510'] = func_8510
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8549 = relay.const([[[-3],[-10],[-8],[5],[4],[-9],[10],[-9],[-10],[-6]],[[7],[7],[-5],[6],[7],[-5],[-10],[9],[-5],[1]],[[-8],[8],[10],[10],[-4],[10],[-4],[-5],[3],[-8]]], dtype = "uint64")#candidate|8549|(3, 10, 1)|const|uint64
var_8550 = relay.var("var_8550", dtype = "uint64", shape = (3, 10, 11))#candidate|8550|(3, 10, 11)|var|uint64
bop_8551 = relay.bitwise_xor(const_8549.astype('uint64'), var_8550.astype('uint64')) # shape=(3, 10, 11)
output = relay.Tuple([bop_8551,])
output2 = relay.Tuple([bop_8551,])
func_8561 = relay.Function([var_8550,], output)
mod['func_8561'] = func_8561
mod = relay.transform.InferType()(mod)
mutated_mod['func_8561'] = func_8561
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8562 = relay.var("var_8562", dtype = "uint64", shape = (3, 10, 11))#candidate|8562|(3, 10, 11)|var|uint64
func_8561_call = mutated_mod.get_global_var('func_8561')
call_8563 = func_8561_call(var_8562)
output = call_8563
func_8564 = relay.Function([var_8562], output)
mutated_mod['func_8564'] = func_8564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7406_call = mod.get_global_var('func_7406')
func_7407_call = mutated_mod.get_global_var('func_7407')
call_8606 = relay.TupleGetItem(func_7406_call(), 1)
call_8607 = relay.TupleGetItem(func_7407_call(), 1)
func_7122_call = mod.get_global_var('func_7122')
func_7124_call = mutated_mod.get_global_var('func_7124')
call_8617 = relay.TupleGetItem(func_7122_call(), 0)
call_8618 = relay.TupleGetItem(func_7124_call(), 0)
bop_8623 = relay.greater_equal(call_8606.astype('bool'), relay.reshape(call_8617.astype('bool'), relay.shape_of(call_8606))) # shape=(12, 11, 12)
bop_8626 = relay.greater_equal(call_8607.astype('bool'), relay.reshape(call_8618.astype('bool'), relay.shape_of(call_8607))) # shape=(12, 11, 12)
output = bop_8623
output2 = bop_8626
func_8636 = relay.Function([], output)
mod['func_8636'] = func_8636
mod = relay.transform.InferType()(mod)
output = func_8636()
func_8637 = relay.Function([], output)
mutated_mod['func_8637'] = func_8637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7362_call = mod.get_global_var('func_7362')
func_7364_call = mutated_mod.get_global_var('func_7364')
call_8722 = relay.TupleGetItem(func_7362_call(), 0)
call_8723 = relay.TupleGetItem(func_7364_call(), 0)
func_7204_call = mod.get_global_var('func_7204')
func_7205_call = mutated_mod.get_global_var('func_7205')
call_8742 = relay.TupleGetItem(func_7204_call(), 0)
call_8743 = relay.TupleGetItem(func_7205_call(), 0)
func_6147_call = mod.get_global_var('func_6147')
func_6149_call = mutated_mod.get_global_var('func_6149')
const_8771 = relay.const([7.858185,-1.651649,4.992058,2.272966,4.528298,-3.707946,-8.462092,9.642035,-3.573734,0.017410,-7.119821,1.331008,-7.632192,-3.804910,1.671221,-9.016228,-8.471090,-2.436817,-1.646955,-0.332080,6.787928,-3.836670,-0.183935,0.675215,6.302590,-6.325278,-5.794219,-5.821191,7.168880,6.812320,1.326602,1.365104,-0.518888,8.747157,1.992702,-2.804216,-4.328180,-2.153555,-3.330386,-2.626095,-6.197926,7.520589,-0.570862,-0.970741,-1.311165,-4.345190,3.723536,-6.148752,1.437978,3.830742,7.965053,-9.437798,-8.105927,4.695092,-2.701347,-6.735316,-4.745199,0.883750,-9.973110,-7.098340,7.071097,-8.556047,8.421351,-7.743222,-6.614037,0.196477,3.574648,6.598846,8.917591,-6.174018,-8.774825,-5.105057,-8.020541,9.419046,4.431327,-0.678457,3.161880,-0.453157,7.058507,3.899937,-0.486801,9.319112,-8.775787,7.728876,3.907673,6.500956,-3.194191,-9.375541,-1.388025,2.457540,-4.074692,-9.164458,-4.284907,-9.022312,-8.029976,0.522028,-3.042679,-3.574825,-9.310412,-0.550441,-7.191492,1.406433,-5.935460,0.073392,-8.436159,-0.374776,-3.010290,-8.950642,0.866573,-3.767947,-8.280274,-1.860213,0.848646,-3.276610,-2.880510,6.719816,-2.429879,-9.414846,0.215145,0.436273,-7.089882,-4.181492,1.001040,-8.220042,0.473695,-9.185284,-3.122339,-5.543758,6.282675,4.600581,-3.611552,-1.436272,-8.089352,9.688637,3.292787,3.527887,-2.258218,-7.464960,-2.059706,7.257469,-2.788704,9.467326,-2.670082,-6.568996,-6.945341,-8.952636,-3.673186,-9.527388,6.513878,-3.506202,-8.850058,-6.904146,0.212014,-0.205051,7.356207,7.525745,9.848764,5.699083,5.443681,-5.832465,7.258232,-5.778397,8.445735,-7.208099,-7.851054,7.762330,-9.760624,5.011543,9.200352,3.200507,9.999043,-3.726539,-0.768236,2.156648,7.346615,2.374601,-7.230048,-7.878479,-2.224627,-9.936187,-4.782683,-8.600746,3.541297,-9.767537,4.121199,-0.598869,8.498190,-7.150328,-1.429986,7.302941,8.828448,-1.218485,-0.870302,7.895013,-7.371424,0.172684,-7.435910,7.745066,0.508158,-1.941063,-3.470028,-7.484532,9.684655,9.050690,-3.232136,9.080897,9.440402,4.543200,-0.125231,4.761138,-8.535503,3.438108,-8.394957,-3.336680,7.598924,-7.138476,1.575712,4.831467,1.463700,-3.980307,7.691776,8.731713,-0.328095,-8.596491,-6.173424,8.853264,-4.897673,5.302658,7.322360,-0.806214,-8.003757,-8.752525,7.699292,-9.902335,-8.622545,-6.832291,-0.463107,0.815034,-5.296736,1.149391,9.582720,3.054632,-1.329959,-3.781756,2.924845,-4.749709,3.829970,0.182101,-9.977831,-1.011329,6.862535,-6.506911,-6.740914,-0.232887,0.103345,1.623262,-3.330219,-2.747415,3.645062,-1.691248,4.475817,-7.125424,-7.394681,-8.319303,4.604566,6.805868,8.876649,-4.387395,8.278191,8.406266,0.014383,2.843700,7.241235,-9.745320,-2.492251,1.858826,9.605016,9.687620,-6.888446,-9.333735,-0.775575,-6.214630,2.469587,9.779795,7.297281,4.182668,-1.717197,-5.277603,-7.089048,-7.925868,3.210894,-2.576665,-4.043560,-9.672448,3.330619,-6.710932,9.029292,-5.919631,-2.933638,7.341338,-6.733638,-3.727945,-7.744137,-7.921769,8.054344,5.346019,1.964268,2.695815,9.105695,-1.843678,-8.771414,-2.619740,4.370078,-2.889349,4.487473,2.166014,-2.502427,-4.595938,-0.165007,3.007198,7.954149,-6.696439,-7.759702,-1.641378,-5.288404,3.851078,-2.067884,-2.658849,-8.463011,4.281530,-1.629016,5.788996,-1.690503,3.406451,-8.718932,-7.679462,-9.588466,-7.578019,-8.979777,-0.982597,5.380107,4.850546,-1.073220,0.706643,-8.886176,-0.257328,9.758707,1.004858,6.149770,-0.561109,5.215450,4.692669,-1.271907,-2.776722,8.305622,7.950146,-2.696724,-2.643244,-3.543886,8.884073,-4.456444,0.163366,8.169144,6.106285,-0.404475,2.283651,-3.239113,8.451183,-1.647902,4.974914,-8.705004,0.954752,6.710818,3.568431,5.329927,-8.403231,-2.846843,-6.675414,-3.817316,-6.491692,8.698197,-6.563664,3.868593,-4.971527,0.572920,3.853507,-4.436904,3.438864,-7.948370,6.944527,2.769155,7.203245,-3.679946,-8.141583,7.557868,2.893224,-0.276644,-7.072490,9.556437,6.953825,-3.606441,-9.693049,4.126285,-1.386900,6.943925,-5.095880,4.938594,-4.479411,1.144297,-9.926648,-0.631734,1.766903,3.418549,-4.836436,9.376339,7.432790,-1.555909,-8.987198,9.205382,7.768185,7.720230,-3.020523,6.959367,-3.498303,8.108153,3.726466,-2.601019,-8.973378,-7.859720,-6.224757,-1.527232,0.163104,6.544411,3.085198,-9.515743,2.289715,-9.387577,-5.900457,4.852639,-2.010948,1.054519,-0.793389,-2.221374,4.307233,8.786249,-1.947017,6.343105,-7.228170,-8.585915,-5.034550,-8.436093,-2.867160,9.125712,-0.503788,7.276730,7.809010,-4.745119,-3.654623,-4.508728,7.637499,0.050120,2.067873,0.077995,0.160866,7.087701,-6.164581,-7.828278,-3.445547,2.812224,-0.111806,3.907630,3.727829,3.880376,0.799989,7.538066,8.146196,-2.128650,3.662824,-4.151761,2.937463,-2.440411,5.199596,-9.351864,-1.673871,-7.192810,-2.111561,-2.922413,8.939923,6.497109,0.937491,2.603877,7.451638,-3.263983,6.040381,-2.541124,-2.649116,-2.103445,1.694906,-8.573417,-8.449879,-5.462220,-8.628139,-7.772637,-2.457044,-0.767380,-5.604313,-3.293263,-9.795972,-7.252446,0.232642,-0.135511,-6.468742,2.962266,-5.115462,6.563725,-5.281006,0.413153,0.300037,-8.289762,-8.211990,8.531766,-4.966498,-8.806244,-0.485644,-7.165960,6.474531,-6.064119,4.287293,6.138604,5.011303,-9.880455,-1.864807,-7.695355,0.504499,1.549933,-0.128994,-9.505342,-9.430056,7.272666,8.405062,-0.450592,-0.615479,-1.000327,-4.842777,0.201980,7.947575,4.710606,-7.662943,2.419276,-7.165000,5.735814,1.715873,6.838883,-8.196095,8.736339,-8.069869,2.106721,-2.728678,-5.698234,5.680106,-6.701181,4.399882,4.071522,0.418484,5.237598,5.605856,-0.453904,-8.039994,2.805985,-0.741116,0.940434,-2.882063,-7.402534,-5.937501,-5.950855,-8.065301,-4.849087,-2.687505,1.705926,-6.623877,-2.035621,2.523476,4.011277,-9.936365,8.975739,2.921203,-7.167363,8.151516,-9.913746,3.253320,1.349724,5.662243,-2.759722,1.429581,2.009115,-4.783951,-6.947648,8.186446,-7.017956,-2.225323,-0.144188,-0.824508,0.692847,7.320696,6.109255,-8.517999,1.824072,4.763351,-2.297540,5.208727,-0.698661,6.946736,-3.687776,-1.900618,-1.250332,-5.364518,-7.367122,8.365064,-4.991833,5.313973,-8.468233,-2.621914,7.339966,3.793981,8.202767,-3.872808,-9.109627,-1.222246,-3.010893,6.235649,2.573356,4.396469,-5.555233,3.402575,-5.705026,1.998421,2.179664,-3.123744,1.965315,-5.842821,-5.374182,-9.087540,-8.390220,4.774017,-9.690338,9.048573,-1.855052,8.072237,-0.776859,3.961811,-1.914360,4.113054,1.398549,-7.669526,0.465601,1.459718,9.044081,-2.031981,-9.562157,-8.881423,9.156409,-9.873049,7.047879,-6.783801,-6.953406,-4.850330,-6.893366,-0.660001,3.044173,-2.520130,5.045307,-7.737359,-0.664559,-1.660339,7.309780,5.210719,4.579645,-4.570603,4.733323,-5.050759,3.216432,-0.148771,-4.487086,6.723430,-9.768644,-4.040763,8.122815,-1.201979,3.811685,-9.772625,-5.016798,7.425169,7.986288,-3.595718,4.635610,-6.806751,9.633023,-8.348668,-9.706736,0.978461,-7.481374,-8.668793,-6.572083,7.975471,-7.192509,-9.571839,3.770793,-0.117090,-3.611872,4.724679,2.246739,-0.077219,1.020721,-5.727734,-8.162897,-8.467617,1.969975,-6.292245,8.094453,5.092469,9.027801,-9.737696,-9.084147,2.197425,0.086841,-0.021543,-7.318685,2.159795,9.345187,1.514453,2.844920,-3.672312,2.972468,9.530760,-2.507234,-0.283280,-2.974216,-2.760495,9.121709,4.943198,8.466636,3.860981,-7.299866,1.565891,-9.854164,8.139758,-1.307816,-7.361830,-4.285811,-6.784877,-1.119098,-1.910343,-3.295530,4.397802,-1.093629,-9.552431,-4.280637,-3.098203,7.015848,4.758751,-4.746101,8.359656,-1.825838,-0.554407,0.778942,-2.833737,9.101056,4.494996,8.331626,3.485971,2.032601,4.009062,4.974700,0.033146,8.151587,-2.713681,1.758926,-2.752236,1.874610,4.904099,-4.761479,4.719171,-8.547574,9.498596,1.495016,-4.037686,-7.793022,5.401793,0.239550,-7.997012,9.429796,-1.020333,3.831281,-5.304002,-4.375556,9.622910,9.232118,-6.736860,3.454495,-0.447510,1.974552,-3.697881,-0.234679,2.628408,-7.634948,5.254861,3.712669,-9.139318,-3.668603,5.530056,-0.975270,0.068281,5.121319,-4.516296,4.667055,-4.674926,8.089168,7.939894,-2.407639,2.470504,-5.668537,-6.905882,-3.694741,-9.753342,8.487808,0.395053,5.000856,-9.485938,0.407112,1.593897,9.464071,1.822617,-3.280784,-3.827366,0.160232,7.894447,-2.869895,6.995233,1.705998,-9.797896,-2.053874,-5.587894,-0.886494,-0.096909,8.321228,1.577406,8.731392,5.282421,8.436169,-0.012904,4.399208,-5.735750,7.161098,9.865717,-7.756477,-4.474261,5.998413,-6.353615,5.279755,0.647924,-8.577973,0.668914,6.115384,-0.044168,-4.687238,-9.589218,-1.268418,-1.940698,-7.373121,-2.156745,5.042275,9.425922,-3.635362,-3.855572,1.798987,-0.192780,-4.602666,6.082109,5.591739,-7.331312,6.113564,1.979309,-7.271307,8.245105,1.848330,2.340306,-8.316986,-1.877128,-6.989234,-3.242984,-9.691493,7.792394,-6.893057,5.320396,-4.291269,-5.900827,-4.047363,-2.101677,4.368685,3.828832,8.751531,4.224634,-3.188765,-3.299649,-0.348582,-2.389476,-1.646394,-1.714058,-7.813233,-3.744474,4.437384,-0.199846,-9.794675,-2.105661,8.716978,4.939311,-7.175161,-7.599285,-9.201250,6.194998,-9.262402,7.516709,-3.320275,0.310611,9.695056,0.496217,-3.263556,-3.242701,-9.423214,-9.505056,2.077109,5.210865,-7.968914,-2.469774,-0.486955,-7.182356,1.896912,2.828099,4.283802,-8.461211,-1.961669,3.471950,-7.747817,-9.929248,4.380625,-0.725340,-7.024367,-1.325779,5.463715,5.621154,3.551312,-3.007038,9.687253,-1.581351,1.469003,-3.338907,-7.578698,-7.892539,2.476218,-1.785768,-4.444451,6.923631,-1.230554,8.203866,-0.402206,5.002071,-7.639489,-1.846267,-6.314225,-4.148356,-6.444298,5.599183,4.565824,6.907474,-4.639265,1.864032,-3.640931,3.293722,-5.914104,-5.492634,9.690433,-1.655954,-5.420801,-9.820988,2.321364,-3.136313,1.157424,7.704699,4.786661,4.898087,-7.737003,-3.218937,-7.610715,8.157008,2.805758,3.647741,6.511742,-3.990722,9.724871,-4.157508,-1.597815,-8.187272,8.254852,-1.870292,-9.714001,-0.158956,-0.164209,7.298597,1.794424,3.387341,-6.123129,4.647596,3.711414,7.148186,-7.553143,6.582359,-1.965806,-6.692132,6.356543,0.166840,8.037735,-3.437308,-5.511402,-4.088738,-0.128130,-8.614788,-4.454673,7.213196,-1.076041,-6.125416,-7.994259,5.955862,4.771838,-6.470438,-4.213098,-2.991967,-6.138465,6.280326,-3.163316,-4.604791], dtype = "float32")#candidate|8771|(1040,)|const|float32
call_8770 = func_6147_call(relay.reshape(const_8771.astype('float32'), [13, 8, 10]))
call_8772 = func_6147_call(relay.reshape(const_8771.astype('float32'), [13, 8, 10]))
output = relay.Tuple([call_8722,call_8742,call_8770,const_8771,])
output2 = relay.Tuple([call_8723,call_8743,call_8772,const_8771,])
func_8777 = relay.Function([], output)
mod['func_8777'] = func_8777
mod = relay.transform.InferType()(mod)
output = func_8777()
func_8778 = relay.Function([], output)
mutated_mod['func_8778'] = func_8778
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8816 = relay.const([[[-6.051884,3.314599,-3.731615,9.999128,-9.499905,7.549290],[6.341553,3.609964,-9.903058,-6.082315,0.613503,-8.924196],[4.336160,1.200168,-4.999826,-6.974262,-6.759654,5.269288],[-6.076214,-3.013382,0.809985,-3.304716,-1.403790,5.560033],[5.222400,-0.324254,-4.531959,-3.087203,-0.816063,8.242593],[8.883249,1.133993,8.848649,-6.425921,2.050846,-3.578846],[3.819584,8.773230,-4.417584,-7.638349,6.531967,-0.285242],[-7.455340,7.493915,-3.263052,4.054996,-3.542704,-7.607765],[7.605043,2.017879,1.678441,4.424472,-3.156007,-3.108216]],[[6.032811,4.214305,-2.383432,-8.457782,-8.209676,7.623663],[-0.844938,-5.163775,-5.052936,-6.360246,-8.544159,-7.191089],[-1.085466,-5.334753,2.525107,3.124393,9.891597,6.003778],[8.007402,-0.604109,6.148239,-0.978336,-3.627312,-2.533082],[3.181094,-7.277780,-8.648748,0.558333,-0.116401,3.573238],[3.973057,-3.181305,6.883733,-5.692479,8.522148,6.380837],[-8.699474,-8.220719,-1.118816,1.814082,-4.181859,3.388347],[6.716449,8.649446,-3.374923,5.064838,6.881118,9.536648],[9.142714,0.986271,-6.835931,0.857787,4.830320,-8.192506]],[[-7.667331,9.391237,1.699680,1.392930,-3.784426,6.930694],[6.622305,-0.033557,-5.705831,-9.529364,4.391299,3.237370],[-1.641225,-4.641324,-1.821924,2.734478,2.178542,3.515173],[-5.493349,7.790349,5.381162,3.659885,8.564108,-1.613883],[1.587653,4.162724,-6.212093,5.682758,2.779806,-4.738560],[-9.916821,-8.598070,9.447062,-8.918214,-8.496951,-5.755852],[-4.564417,-2.771936,4.902964,-8.277853,0.860510,4.552465],[-0.323115,-5.749698,-4.399663,7.015458,4.069042,-8.007930],[-6.166808,-5.061132,-6.055263,-2.819788,-3.912047,-1.907620]],[[2.001000,3.247584,-1.865988,8.355711,8.499070,-7.728268],[-8.638409,-7.944738,8.958341,-4.557385,5.684670,-1.744571],[7.813325,7.770760,-9.993991,5.188594,-8.509156,-7.806935],[6.600229,8.363515,-4.776343,6.676783,9.898031,-9.051279],[-9.206583,-2.542883,3.661450,-6.135245,-4.329493,-4.876809],[6.839622,-0.953310,-0.872167,4.469724,-7.220713,-7.491693],[-6.921741,-2.431928,2.145728,5.946343,8.328544,-2.548852],[-1.639743,-0.411748,-4.524637,9.486818,-1.831835,5.224685],[3.281097,4.377959,6.230295,-5.760761,5.597191,8.322032]],[[8.802556,-3.107873,2.954350,8.570539,0.124806,-0.582979],[-2.021201,-1.607875,6.713049,-4.142446,-0.007756,8.720267],[8.807043,5.492160,-6.969797,-7.083813,9.452229,-5.308370],[5.802343,5.088350,3.937368,-7.145091,2.079289,9.855048],[-2.303927,4.438130,2.715552,-3.887213,-2.227115,3.595787],[-4.741149,-7.277526,-2.055509,-2.469088,-5.441731,6.353250],[0.950005,-7.866588,-6.102048,-3.962082,2.358832,8.538709],[-6.903880,1.927832,3.068829,3.351538,-8.494163,-3.039414],[-1.422519,-1.533922,-0.244133,4.055061,2.310398,-6.455869]],[[9.432714,-7.886158,2.716322,9.522150,7.366302,-7.674116],[1.137248,4.208554,-9.493750,-8.767121,-3.592475,0.783252],[-9.487567,4.067406,-9.861871,7.141408,-3.141711,-4.272766],[8.474429,2.390388,2.397929,-4.637082,5.847819,-6.979430],[9.497820,-8.933964,-6.816190,-2.296179,-9.136187,-6.191324],[5.609491,-6.508827,-8.413419,1.773706,-1.574699,-0.778213],[8.113069,-7.384273,-1.639439,-2.575881,-4.407950,-8.206795],[-8.531435,2.632073,-7.240208,-5.968707,-7.025591,6.139767],[8.521335,-8.279011,1.618544,0.515530,2.606532,6.889878]]], dtype = "float64")#candidate|8816|(6, 9, 6)|const|float64
var_8817 = relay.var("var_8817", dtype = "float64", shape = (6, 9, 6))#candidate|8817|(6, 9, 6)|var|float64
bop_8818 = relay.mod(const_8816.astype('float64'), relay.reshape(var_8817.astype('float64'), relay.shape_of(const_8816))) # shape=(6, 9, 6)
output = relay.Tuple([bop_8818,])
output2 = relay.Tuple([bop_8818,])
func_8838 = relay.Function([var_8817,], output)
mod['func_8838'] = func_8838
mod = relay.transform.InferType()(mod)
var_8839 = relay.var("var_8839", dtype = "float64", shape = (6, 9, 6))#candidate|8839|(6, 9, 6)|var|float64
output = func_8838(var_8839)
func_8840 = relay.Function([var_8839], output)
mutated_mod['func_8840'] = func_8840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7621_call = mod.get_global_var('func_7621')
func_7623_call = mutated_mod.get_global_var('func_7623')
call_8878 = relay.TupleGetItem(func_7621_call(), 0)
call_8879 = relay.TupleGetItem(func_7623_call(), 0)
output = relay.Tuple([call_8878,])
output2 = relay.Tuple([call_8879,])
func_8890 = relay.Function([], output)
mod['func_8890'] = func_8890
mod = relay.transform.InferType()(mod)
mutated_mod['func_8890'] = func_8890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8890_call = mutated_mod.get_global_var('func_8890')
call_8891 = func_8890_call()
output = call_8891
func_8892 = relay.Function([], output)
mutated_mod['func_8892'] = func_8892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6298_call = mod.get_global_var('func_6298')
func_6300_call = mutated_mod.get_global_var('func_6300')
call_8967 = func_6298_call()
call_8968 = func_6298_call()
output = call_8967
output2 = call_8968
func_8999 = relay.Function([], output)
mod['func_8999'] = func_8999
mod = relay.transform.InferType()(mod)
output = func_8999()
func_9000 = relay.Function([], output)
mutated_mod['func_9000'] = func_9000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7648_call = mod.get_global_var('func_7648')
func_7650_call = mutated_mod.get_global_var('func_7650')
call_9001 = func_7648_call()
call_9002 = func_7648_call()
output = call_9001
output2 = call_9002
func_9006 = relay.Function([], output)
mod['func_9006'] = func_9006
mod = relay.transform.InferType()(mod)
output = func_9006()
func_9007 = relay.Function([], output)
mutated_mod['func_9007'] = func_9007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6298_call = mod.get_global_var('func_6298')
func_6300_call = mutated_mod.get_global_var('func_6300')
call_9082 = func_6298_call()
call_9083 = func_6298_call()
output = relay.Tuple([call_9082,])
output2 = relay.Tuple([call_9083,])
func_9091 = relay.Function([], output)
mod['func_9091'] = func_9091
mod = relay.transform.InferType()(mod)
output = func_9091()
func_9092 = relay.Function([], output)
mutated_mod['func_9092'] = func_9092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9091_call = mod.get_global_var('func_9091')
func_9092_call = mutated_mod.get_global_var('func_9092')
call_9108 = relay.TupleGetItem(func_9091_call(), 0)
call_9109 = relay.TupleGetItem(func_9092_call(), 0)
func_7164_call = mod.get_global_var('func_7164')
func_7166_call = mutated_mod.get_global_var('func_7166')
const_9115 = relay.const([2,-3,-6,-7,10,6,8,-8,5,-3,-7,7,-4,2,6,4,-3,-5,4,8,3,-7,-6,-8,-8,7,1,-7,-7,-5,-2,3,7,-6,1,4,-8,8,7,4,-8,1,3,2,-6,-4,-5,-6,4,-5,6,10,-2,9,-2,-7,3,10,5,-5,1,1,-6,-8,9,-7,5,-2,-4,8,-3,8,2,-2,-10,-10,-6,-6,-10,-5,10,-7,-9,-1,9,3,-4,-7,-9,-3,-6,1,-6,6,-3,-6,-5,9,-1,1,2,1,4,-2,5,-3,2,4,-3,5,-3,1,3,6,-2,3,10,2,2,-7,3,9,-6,-3,-3,-4,-9,-6,5,-8,8,3,-5,-2,-8,5,10,7,5,4,-6,6,-3,8,6,-5,7,-4,2,3,-4,-1,10,-10,-6,5,-3,7,-3,4,-3,4,6,6,4,9,-6,4,-10,1,9,10,-6,7,-4,-9,-1,-6,-2,6,2,6,6,3,4,-2,9,6,8,5,6,8,-8,4,-9,-8,6,6,-1,7,-3,10,-10,-9,2,2,-9,-7,5,7,-4,4,8,-1,8,-4,-7,-3,3,-7,6,-4,8,-2,-5,-8,5,-10,-1,-1,8,-10,-2,-4,-6,1,-8,7,-8,-10,9,3,-9,8,-3,7,-6,8,1,-4,-3,-9,2,9,-6,-3,7,2,1,6,-8,-7,1,4,-9,8,-5,-5,4,5,4,-6,7,9,-7,4,-1,2,10,5,-6,3,2,6,-3,6,10,10,-10,-7,-5,4,4,9,4,3,-7,-1,8,2,8,-1,-2,8,-8,-10,-6,9,2,3,-2,-6,-5,-7,-4,-6,-9,-5,-6,2,9,-8,-6,-4,7,-4,4,-9,9,-3,6,-9,4,5,-8,5,1,-2,-2,-7,4,9,3,8,-3,7,10,-4,10,6,10,-5,7,-8,-2,10,-8,5,-5,3,5,7,6,2,3,-5,-1,4,6,7,-8,-5,5,6,-4,-8,-1,-6,6,-4,-8,-4,9,-7,1,-4,-2,-5,-10,7,-2,-7,-1,1,-1,-8,3,-7,1,7,9,-3,2,-10,-1,-8,-3,9,8,-1,4,-9,3,-1,-2,-8,-2,4,1,8,-10,-6,-3,-4,4,9,5,8,4,2,-10,8,3,7,7,-5,-4,-1,7,-8,-1,8,-7,-5,8,8,8,-1,2,-5,5,-8,-5,6,4,-1,-2,-4,9,-1,-7,-4,-7,-7,5,9,-4,-9,-6,10,-8,9,-4,-9,10,-8,1,1,-9,8,-2,3,4,6,-6,1,9,-4,-1,-6,4,-10,-7,4,1,9,-9,-9,4,-4,-2,-4,3,2,2,-8,1,3,9,4,-9,3,-5,2,8,10,9,8,4,9,-7,4,5,8,7,3,-4,6,1,-1,-4,-6,6,8,-6,-8,3,3,-1,1,-2,4,3,7,9,-2,6,-9,-3,-2,5,-4,-2,-6,9,-1,-4,-8,6,-2,1,2,-3,2,10,-5,-4,3,5,10,-9,-6,5,-3,-7,-10,10,-6,2,10,-1,-7,3,4,-1,3,-5,-4,-3,3,-3,-8,4,-5,3,-10,-10,1,7,3,-10,-8,7,5,-9,2,3,5,4,-8,7,3,-5,3,2,1,-6,6,3,5,-2,-3,7,-4,8,-9,-10,-4,-7,-8,-3,-2,10,-4,1,-4,-4,-10,3,-1,-8,7,3,4,8,-2,2,2,1,-6,3,7,-5,8,3,-2,-4,-10,10,-8,5,-1,-3,3,-7,6,7,9,10,-1,-1,-5,-1,1,-6,-10,-10,-2,-4,-4,-3,10,4,1,9,9,6,4,-7,-1,-3,-8,1,-5,-4,-7,1,-7,9,1,2,7,-3,7,5,5,-8,10,-2,6,5,-2,-1,3,9,-9,5,-8,6,-8,-3,10,5,-1,-6,-4,-10,-7,-7,2,-6,6,-6,10,2,-4,3,4,-3,-7,-2,10,-9,-5,-9,2,-8,9,-5,-6,10,-9,4,-3,8,6,10,6,-6,4,7,-3,4,-9,-4,5,-4,5,8,5,-7,-10,8,6,6,-9,8,8,-7,-3,1,-3,10,3,7,8,10,10,-3,-3,-8,9,-6,10,-3,4,-8,-9,6,-8,1,-8,-3,10,-7,-2,5,1,-8,9,-1,-5,10,9,7,1,-3,-10,7,10,-3,1,6,3,2,-7,-5,-3,-6,2,-10,-1,2,-7,1,5,2,4,-9,-3,-9,5,3,-10,2,4,5,-3,9,7,1,-6,9,2,8,-8,-6,-2,3,-7,2,-7,9,3,1,-9,-2,-7,6,-7,-3,-1,8,-7,5,-5,7,3,1,-5,-6,7,9,6,-3,10,-10,4,-6,10,-7,8,9,2,-9,-4,-3,-2,-7,10,3,-6,2,-2,1,2,9,3,-3,-9,2,-9,8,-7,-10,-5,-6,-10,10,-1,-4,-10,4,2,-8,2,-6,-5,2,7,1,-7,-2,-7,8,3,8,-6,7,-2,9,-5,4,-7,-3,8,-8,-1,1,3,6,1,1,8,5,3,3,9,9,2,4,-6,-7,5,4,9,-7,-4,8,-8,-2,-9,10,-10,5,1,-4,-4,-1,-10,10,-3,-10,5,8,2,-4,-3,-10,3,9,-7,-8,-5,-1,-6,-4,7,-7,-1,8,5,8,-8,4,-6,-5,5,5,6,7,-8,-10,-5,9,-2,-1,9,-8,8,8,5,8,-9,-4,-2,7,-9,4,4,10,-8,-6,2,4,7,5,-5,4,9,-1,6,-10,-4,1,-8,7,-3,5,-6,7,-10,5,-7,-1,6,7,9,1,10,5,-4,-5,5,2,6,-5,2,-4,-9,-7,-7,9,10,3,-3,-9,9,3,4,5,7,-8,2,-9,-7,7,1,-3,-7,2,-3,4,4,7,-5,10,4,2,-10,-6,7,4,-9,-8,1,6,-10,-9,-10,-2,1,-8,10,1,-10,8,10,7,8,8,5,7,-6,2,5,2,8,10,-9,1,-8,7,10,9,-9,-9,-3,-4,3,7,-1,-3,-1,8,-6,9,7,-1,-2,-7,7,9,-2,-9,8,4,-6,-8,-4,9,3,-5,8,7,6,2,10,3,4,-1,-9,2,6,6,-6,1,5,-8,-9,2,1,-1,7,4,-8,-8,4,4,-9,9,5,3,-5,4,7,1,2,-8,-8,4,1,-4,-1,-2,-9,6,-2,-6,1,1,8,8,6,2,-10,9,-8,4,-3,10,1,8,4,-10,-7,-4,5,-4,-8,4,-3,-9,7,-10,2,-4,3,-6,-9,-1,9,1,9,-4,4,-5,2,7,9,-4,5,-4,2,-7,-6,9,-6,-1,8,2,-5,8,-2,1,-4,2,2,10,-6,7,7,-9,-6,8,6,-5,-8,10,-10,1,5,5,-9,-3,4,-9,8,4,8,10,-1,-7,-10,10,8,-5,-7,10,7,-3,5,-2,7,1,-7,9,7,-8,3,-8,1,5,8,-6,-1,8,10,-1,5,4,2,-9,-1,8,6,6,1,-7,-7,4,3,-3,1,2,5,-7,3,-8,2,10,-3,-5,-10,-3,-7,-4,-10,-5,-3,6,-5,9,-8,2,-4,-10,-1,-1,-1,-7,-3,9,9,6,-1,4,-7,3,9,-7,-10,-9,-4,-9,3,3,6,-1,6,-9,-10,-4,-3,2,6,4,-8,4,-3,7,8,4,-4,9,2,6,8,-1,-10,-4,2,-10,-2,2,-9,1,-1,-1,10,4,7,-6,-1,-7,-9,7,10,-2,2,-8,-5,8,4,2,1,-9,-7,7,-3,-10,7,4,5,-2,1,9,8,3,-9], dtype = "uint64")#candidate|9115|(1440,)|const|uint64
call_9114 = relay.TupleGetItem(func_7164_call(relay.reshape(const_9115.astype('uint64'), [1440,])), 2)
call_9116 = relay.TupleGetItem(func_7166_call(relay.reshape(const_9115.astype('uint64'), [1440,])), 2)
func_2056_call = mod.get_global_var('func_2056')
func_2060_call = mutated_mod.get_global_var('func_2060')
var_9126 = relay.var("var_9126", dtype = "int8", shape = (1404,))#candidate|9126|(1404,)|var|int8
call_9125 = relay.TupleGetItem(func_2056_call(relay.reshape(var_9126.astype('int8'), [9, 12, 13]), relay.reshape(var_9126.astype('int8'), [9, 12, 13]), relay.reshape(var_9126.astype('int8'), [9, 12, 13]), ), 0)
call_9127 = relay.TupleGetItem(func_2060_call(relay.reshape(var_9126.astype('int8'), [9, 12, 13]), relay.reshape(var_9126.astype('int8'), [9, 12, 13]), relay.reshape(var_9126.astype('int8'), [9, 12, 13]), ), 0)
bop_9135 = relay.logical_xor(call_9125.astype('int32'), relay.reshape(var_9126.astype('int32'), relay.shape_of(call_9125))) # shape=(9, 12, 13)
bop_9138 = relay.logical_xor(call_9127.astype('int32'), relay.reshape(var_9126.astype('int32'), relay.shape_of(call_9127))) # shape=(9, 12, 13)
output = relay.Tuple([call_9108,call_9114,const_9115,bop_9135,])
output2 = relay.Tuple([call_9109,call_9116,const_9115,bop_9138,])
func_9149 = relay.Function([var_9126,], output)
mod['func_9149'] = func_9149
mod = relay.transform.InferType()(mod)
var_9150 = relay.var("var_9150", dtype = "int8", shape = (1404,))#candidate|9150|(1404,)|var|int8
output = func_9149(var_9150)
func_9151 = relay.Function([var_9150], output)
mutated_mod['func_9151'] = func_9151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7122_call = mod.get_global_var('func_7122')
func_7124_call = mutated_mod.get_global_var('func_7124')
call_9198 = relay.TupleGetItem(func_7122_call(), 0)
call_9199 = relay.TupleGetItem(func_7124_call(), 0)
func_3302_call = mod.get_global_var('func_3302')
func_3304_call = mutated_mod.get_global_var('func_3304')
const_9226 = relay.const([-2.062658,-4.667373,-5.333861,-7.111267,-5.347536,-2.299057,-6.130151,-7.824179,9.958386,0.482740,-7.013969,9.775471,5.426741,5.875561,1.921200,1.029311,3.080540,-4.984629,-9.622343,7.553892,-3.592979,-8.892824,6.421470,-5.263388,8.322581,4.597777,-3.128739,-8.626244,6.258415,-7.183409,9.052770,-8.174800,2.968319,-6.194982,6.192245,-6.498155,1.568447,8.068269,1.305604,-2.022575,8.292537,1.609541,-2.042123,3.712795,3.590379,-8.271843,-4.056960,7.766734,-9.420565,3.203761,-8.484485,3.000711,-6.433252,-5.118508,-8.731346,-7.335301,-5.635527,1.684527,9.324305,-3.461174,-5.692820,4.859830,1.556356,-8.669255,-6.221481,-1.036774,7.542431,7.433489,-3.643852,-1.915682,-7.100580,-4.685177,-6.370242,6.875174,-9.617899,-6.271492,-8.275351,3.284607,1.062075,6.823822,-0.701692,-4.136179,-0.773888,8.163565,4.103455,1.288390,7.730864,9.971415,-9.601764,2.989884,-4.658548,5.435426,-7.390416,7.588263,7.367840,2.955718,-8.080146,3.001538,1.087280,9.874117,-5.981199,-0.812526,-1.029235,0.240433,-6.426244,2.542844,9.521467,-0.921765,-4.370887,9.767197,-6.812536,9.258489], dtype = "float32")#candidate|9226|(112,)|const|float32
call_9225 = relay.TupleGetItem(func_3302_call(relay.reshape(const_9226.astype('float32'), [112,])), 2)
call_9227 = relay.TupleGetItem(func_3304_call(relay.reshape(const_9226.astype('float32'), [112,])), 2)
output = relay.Tuple([call_9198,call_9225,const_9226,])
output2 = relay.Tuple([call_9199,call_9227,const_9226,])
func_9240 = relay.Function([], output)
mod['func_9240'] = func_9240
mod = relay.transform.InferType()(mod)
mutated_mod['func_9240'] = func_9240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9240_call = mutated_mod.get_global_var('func_9240')
call_9241 = func_9240_call()
output = call_9241
func_9242 = relay.Function([], output)
mutated_mod['func_9242'] = func_9242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8508_call = mod.get_global_var('func_8508')
func_8510_call = mutated_mod.get_global_var('func_8510')
call_9255 = func_8508_call()
call_9256 = func_8508_call()
output = relay.Tuple([call_9255,])
output2 = relay.Tuple([call_9256,])
func_9275 = relay.Function([], output)
mod['func_9275'] = func_9275
mod = relay.transform.InferType()(mod)
mutated_mod['func_9275'] = func_9275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9275_call = mutated_mod.get_global_var('func_9275')
call_9276 = func_9275_call()
output = call_9276
func_9277 = relay.Function([], output)
mutated_mod['func_9277'] = func_9277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6694_call = mod.get_global_var('func_6694')
func_6695_call = mutated_mod.get_global_var('func_6695')
call_9320 = relay.TupleGetItem(func_6694_call(), 0)
call_9321 = relay.TupleGetItem(func_6695_call(), 0)
output = call_9320
output2 = call_9321
func_9329 = relay.Function([], output)
mod['func_9329'] = func_9329
mod = relay.transform.InferType()(mod)
mutated_mod['func_9329'] = func_9329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9329_call = mutated_mod.get_global_var('func_9329')
call_9330 = func_9329_call()
output = call_9330
func_9331 = relay.Function([], output)
mutated_mod['func_9331'] = func_9331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9329_call = mod.get_global_var('func_9329')
func_9331_call = mutated_mod.get_global_var('func_9331')
call_9349 = func_9329_call()
call_9350 = func_9329_call()
func_3456_call = mod.get_global_var('func_3456')
func_3460_call = mutated_mod.get_global_var('func_3460')
var_9374 = relay.var("var_9374", dtype = "float64", shape = (30,))#candidate|9374|(30,)|var|float64
var_9375 = relay.var("var_9375", dtype = "uint64", shape = (1440,))#candidate|9375|(1440,)|var|uint64
var_9376 = relay.var("var_9376", dtype = "float32", shape = (112,))#candidate|9376|(112,)|var|float32
call_9373 = relay.TupleGetItem(func_3456_call(relay.reshape(var_9374.astype('float64'), [1, 10, 3]), relay.reshape(var_9375.astype('uint64'), [2, 720]), relay.reshape(var_9376.astype('float32'), [112,]), ), 2)
call_9377 = relay.TupleGetItem(func_3460_call(relay.reshape(var_9374.astype('float64'), [1, 10, 3]), relay.reshape(var_9375.astype('uint64'), [2, 720]), relay.reshape(var_9376.astype('float32'), [112,]), ), 2)
output = relay.Tuple([call_9349,call_9373,var_9374,var_9375,var_9376,])
output2 = relay.Tuple([call_9350,call_9377,var_9374,var_9375,var_9376,])
func_9408 = relay.Function([var_9374,var_9375,var_9376,], output)
mod['func_9408'] = func_9408
mod = relay.transform.InferType()(mod)
var_9409 = relay.var("var_9409", dtype = "float64", shape = (30,))#candidate|9409|(30,)|var|float64
var_9410 = relay.var("var_9410", dtype = "uint64", shape = (1440,))#candidate|9410|(1440,)|var|uint64
var_9411 = relay.var("var_9411", dtype = "float32", shape = (112,))#candidate|9411|(112,)|var|float32
output = func_9408(var_9409,var_9410,var_9411,)
func_9412 = relay.Function([var_9409,var_9410,var_9411,], output)
mutated_mod['func_9412'] = func_9412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5901_call = mod.get_global_var('func_5901')
func_5903_call = mutated_mod.get_global_var('func_5903')
call_9451 = relay.TupleGetItem(func_5901_call(), 0)
call_9452 = relay.TupleGetItem(func_5903_call(), 0)
func_3302_call = mod.get_global_var('func_3302')
func_3304_call = mutated_mod.get_global_var('func_3304')
const_9454 = relay.const([0.326549,2.067787,-4.971383,8.041385,-9.835169,-6.150643,1.493560,-3.263545,1.193311,4.867264,0.806431,-0.679038,-8.064229,4.593178,4.323373,-3.858961,3.102988,6.825116,-8.060311,-0.630645,-8.752172,8.187360,8.702860,7.780060,6.194173,-7.272758,8.277361,-2.338954,-2.706021,1.782013,0.304088,-0.538169,-1.978986,-4.984225,-9.772294,6.016596,0.159386,-3.964844,-1.010552,1.528113,-1.072492,4.444921,3.844361,-1.384502,5.706085,1.753683,4.122500,5.717645,6.981287,-7.775523,5.539819,-9.332388,-4.664907,4.997764,-0.352773,-4.785148,-4.457636,6.760640,8.104518,6.961968,4.595796,-8.061103,2.716170,-0.452745,4.165762,-5.987810,3.234168,-2.760478,-9.122150,-9.822539,-6.353916,7.415311,-1.775300,-7.324831,-3.528093,3.605213,-5.947998,-4.515206,0.236714,1.597566,3.342973,0.684687,-2.197440,4.451038,-8.243541,-2.603781,-8.377820,0.458787,-9.289612,8.958021,-8.046663,-5.116612,-4.882573,-3.954512,-5.991353,-5.644598,6.490964,-7.665636,0.446684,-5.396169,0.633641,8.583159,3.927604,9.773046,-6.888459,-5.811256,7.875448,-9.979262,-1.021446,2.614848,-7.150627,-2.304462], dtype = "float32")#candidate|9454|(112,)|const|float32
call_9453 = relay.TupleGetItem(func_3302_call(relay.reshape(const_9454.astype('float32'), [112,])), 0)
call_9455 = relay.TupleGetItem(func_3304_call(relay.reshape(const_9454.astype('float32'), [112,])), 0)
output = relay.Tuple([call_9451,call_9453,const_9454,])
output2 = relay.Tuple([call_9452,call_9455,const_9454,])
func_9456 = relay.Function([], output)
mod['func_9456'] = func_9456
mod = relay.transform.InferType()(mod)
mutated_mod['func_9456'] = func_9456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9456_call = mutated_mod.get_global_var('func_9456')
call_9457 = func_9456_call()
output = call_9457
func_9458 = relay.Function([], output)
mutated_mod['func_9458'] = func_9458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9472 = relay.var("var_9472", dtype = "float64", shape = (3, 6, 6))#candidate|9472|(3, 6, 6)|var|float64
uop_9473 = relay.log(var_9472.astype('float64')) # shape=(3, 6, 6)
output = uop_9473
output2 = uop_9473
func_9490 = relay.Function([var_9472,], output)
mod['func_9490'] = func_9490
mod = relay.transform.InferType()(mod)
mutated_mod['func_9490'] = func_9490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9491 = relay.var("var_9491", dtype = "float64", shape = (3, 6, 6))#candidate|9491|(3, 6, 6)|var|float64
func_9490_call = mutated_mod.get_global_var('func_9490')
call_9492 = func_9490_call(var_9491)
output = call_9492
func_9493 = relay.Function([var_9491], output)
mutated_mod['func_9493'] = func_9493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7952_call = mod.get_global_var('func_7952')
func_7953_call = mutated_mod.get_global_var('func_7953')
call_9506 = relay.TupleGetItem(func_7952_call(), 0)
call_9507 = relay.TupleGetItem(func_7953_call(), 0)
func_7952_call = mod.get_global_var('func_7952')
func_7953_call = mutated_mod.get_global_var('func_7953')
call_9513 = relay.TupleGetItem(func_7952_call(), 0)
call_9514 = relay.TupleGetItem(func_7953_call(), 0)
func_7899_call = mod.get_global_var('func_7899')
func_7903_call = mutated_mod.get_global_var('func_7903')
const_9523 = relay.const([[3.210708,3.899005,5.255024,-6.955628,8.593940,6.894891,-5.084455,-0.503759,2.518184,8.617167,-0.934168,-9.605991,4.195958,-2.814641,9.661153,5.403600],[5.261696,-9.337042,-7.957829,-7.980053,-7.146614,1.409014,-3.575947,-9.683239,1.024260,-2.378709,-2.220608,6.381338,-5.941686,7.938881,-2.492347,-5.913934],[0.147872,-9.906865,-2.735747,-9.420413,-8.581712,7.403671,1.462369,-6.256565,5.807512,9.531536,-8.658509,7.844040,-7.462132,-4.641521,5.004789,-9.785540],[7.713580,-9.049152,-2.242490,-8.899665,-3.636120,2.428253,5.661585,-7.680578,-9.392086,-9.753946,7.987094,2.500870,-5.628422,-6.416388,7.347310,5.016741],[-3.483805,-0.429765,-2.727992,4.294637,-9.761121,-6.872962,2.813355,-3.606702,-2.334634,-3.976528,-5.811399,6.877445,3.814256,-6.604627,0.754002,5.023161],[8.901909,-5.672079,2.466050,-7.163456,-1.663430,5.164585,-3.190262,-6.440578,7.450497,-1.301558,-1.768384,-8.002008,2.517838,-9.385766,-2.207845,-8.122974],[1.210453,9.685799,6.449406,-5.450355,0.956526,0.504335,6.524402,-8.091799,-0.732473,-9.072448,4.743688,-2.104123,8.085509,6.309654,-0.240407,4.285987],[-3.598210,-6.922087,8.212614,4.656925,1.116291,-4.492088,-1.043549,3.351630,6.731215,-9.755282,-0.072982,8.699078,6.331433,-5.812020,0.674460,-7.065625],[-2.216783,1.195611,5.094799,-9.497573,6.025066,-2.819868,-9.909015,-1.251029,2.439313,-3.729150,9.094922,-0.733225,-5.987403,-7.978230,-6.199924,0.584993],[-6.529065,-8.904390,3.370886,-0.014879,3.931568,4.686377,-7.767114,4.883671,-3.156766,9.699284,-1.241707,-3.171566,-5.537247,-9.982115,3.104889,-9.932195],[-1.180221,-7.514733,2.851985,-5.753165,9.246513,-5.569883,9.798388,4.030455,4.852702,3.218127,-8.139858,-5.590197,-1.942986,-6.165787,-2.263967,2.467190],[4.581262,3.598630,-5.747049,-2.958677,5.121553,8.916660,-1.268324,-7.158259,-8.582481,4.771480,1.859215,9.951610,-9.560182,-3.917255,-1.040512,1.708534],[7.154946,4.980325,-9.920108,3.170490,-5.013316,-3.817634,7.487980,0.708635,-2.666058,2.467227,-9.118989,-1.098221,-8.292608,-5.266755,-4.257341,-4.330081],[-3.246929,-1.740375,7.001394,-2.016569,-8.441645,9.100214,2.687795,5.377516,0.202477,1.393803,-2.322593,7.764364,-7.258371,9.560438,9.588343,-2.475089],[6.336599,6.330167,-3.738195,1.716704,-3.173829,7.244320,8.356501,-7.496166,3.724194,-9.472948,0.631144,-1.088720,3.109046,-9.267643,3.342315,-6.367240],[8.862783,-2.267902,8.722340,0.647500,-5.063038,2.613131,1.285922,-0.164060,-9.925997,-3.636345,-9.332439,5.379723,8.787257,0.865800,2.780386,1.093640],[2.358049,-2.135213,8.414858,-2.575679,-2.163194,7.242776,9.896133,-2.348423,5.474740,2.365766,8.242742,8.419177,7.199096,-6.538522,4.613938,8.089266],[9.588537,9.054376,4.758277,-2.589975,-6.680262,-8.315524,4.172054,8.099821,8.643315,9.181362,4.779578,1.563680,1.372668,1.141966,-7.751396,0.195770],[1.605090,-7.497701,-0.729014,-6.943302,8.864928,4.886900,-0.334611,6.573327,5.885238,-0.597790,9.893711,9.142913,9.072581,6.314738,-9.143159,9.243232],[-7.203103,-5.431005,-0.383474,7.433511,9.094832,3.127034,7.705948,-0.962779,9.469786,2.140497,-0.699730,9.871513,-1.704736,1.131093,8.343889,-8.109361],[2.681702,-9.475550,3.384693,8.077257,-7.918358,-9.645524,0.590843,9.592240,-1.054869,7.507512,9.099228,-2.576168,-2.758140,-6.335542,7.155491,9.940820],[-3.702608,-9.419420,0.538810,-6.514419,-8.577703,2.160254,0.372269,-2.515380,9.078828,0.137219,-4.426928,-5.307257,3.191939,-0.025760,1.220198,9.022825],[-3.665461,-1.255171,8.727193,9.100690,5.761318,4.058254,0.134446,-6.657024,-3.206765,-4.957008,-7.925588,1.601444,8.698595,-4.112634,9.002686,-2.906384],[6.331600,2.965898,-4.324736,2.542429,3.787415,-1.109487,-9.957403,5.592937,-7.758732,-6.816430,6.351160,1.883883,1.848762,3.713922,7.446206,-7.149729],[-4.868523,-4.588026,4.516016,4.649623,-2.680703,0.152425,-5.029242,4.306157,-8.600375,7.298898,5.545076,5.389942,-3.711971,1.200012,-1.025666,0.929063],[5.855699,8.979879,5.307747,7.516952,2.588685,-8.589191,-5.915983,-8.508418,1.498335,-8.978829,-9.831469,-1.419340,-8.291894,4.012382,5.066197,-7.375177],[-1.785597,4.970633,-9.219244,0.200967,-3.610004,4.006807,-8.756425,0.933594,-8.486084,-8.551142,5.446527,2.893042,8.590181,3.306363,7.510450,9.015446],[5.744015,8.685785,-4.609092,1.821126,8.024554,1.100922,8.343077,1.389780,-4.325512,-8.471742,-6.614211,8.732867,-2.863501,0.031588,-3.215294,2.875110],[1.087585,3.550700,-1.984660,-5.154337,-0.108380,7.933685,5.456148,4.945311,-8.733186,6.561221,6.442206,-1.957625,4.903481,-7.370346,1.480074,-3.221517],[-4.413356,-0.695028,-5.534046,-1.390113,-1.535532,-7.126820,4.272325,3.694143,-2.376960,-5.266648,5.691088,2.015234,-8.863201,4.146800,-3.152354,7.917363],[5.101588,9.811264,-9.771023,-5.324031,1.301586,-5.968652,-5.203777,-7.797156,2.403827,8.021601,-8.671177,5.046429,-5.665662,-5.954073,-9.216837,2.914743],[4.572673,-7.223892,2.170342,-0.574360,9.371627,6.651912,-2.609996,-1.006817,-0.954245,-0.301557,9.345031,-6.968359,-2.576367,-0.824696,-3.250696,9.366865],[-8.060541,4.716978,-9.507339,-8.606869,9.015783,-1.510398,7.171539,9.032640,-8.225262,-1.209477,3.899762,1.647941,1.135334,5.217242,2.115069,7.327083],[-8.574763,9.305955,-1.814851,-5.951892,9.717897,0.466289,-6.214091,7.313074,3.450961,-3.596532,-0.241854,-7.056295,6.550054,5.256477,-9.947762,-1.208853],[5.836260,-5.519880,8.456762,1.809069,4.221726,5.754459,2.265955,-3.689718,9.025432,-5.191394,-1.190188,7.034256,-6.196119,-8.934428,-8.809806,0.795475],[1.961360,8.335695,-5.971671,2.899765,-0.620422,3.062782,9.450393,-4.475826,-9.802961,-9.120902,9.475887,-4.521947,-0.233262,0.947496,0.509407,4.159633],[-2.592355,9.640870,2.309762,-8.811627,-2.520619,-1.953077,7.476882,-9.440497,5.771846,-9.422051,-8.496739,-4.230076,7.353280,9.521512,-9.214611,4.825664],[-9.084318,2.102516,-1.308023,6.140972,-9.670679,-2.089554,-7.792346,3.262122,-1.274213,-8.904981,5.843816,3.996162,-9.050286,5.653575,9.989236,0.852353],[-4.960302,-1.658347,-5.980494,7.960195,2.438232,-2.763232,-5.288846,0.997505,4.260578,0.731569,-5.570531,-3.810596,-6.830078,5.384753,-4.822858,2.966717],[4.589536,9.806259,1.604862,-3.089092,6.774506,-3.883148,7.265963,-4.666714,9.574271,6.474635,-1.920744,1.326396,2.087563,6.388075,8.633790,-3.611675],[-0.587731,2.507542,-3.138726,-1.512853,-2.781802,8.540947,-8.106749,2.833160,-8.270405,2.517961,-5.870432,0.878035,4.178509,9.219948,4.347586,4.088409],[-3.115129,8.039608,3.676020,-4.124423,-9.254684,4.289730,3.347077,-3.746652,9.526506,-4.570986,-5.026811,1.416234,-0.093973,1.746981,2.158855,4.759009],[3.453585,-3.472440,-0.255665,-3.962485,1.311645,2.258521,-3.562757,-0.487678,8.456206,0.859254,-2.025113,1.488498,-4.396595,-0.882137,-4.879149,4.346208],[-2.656396,-4.801638,-1.628913,0.697093,-3.849508,-8.450192,-0.609532,-6.029196,4.637210,-9.017026,-5.265244,2.680648,-7.622796,-7.843246,5.171061,-9.788042],[-9.196742,8.375241,0.396025,-3.536976,4.021781,2.384157,0.414091,-4.900852,6.198638,-1.115541,-7.004653,-3.000256,6.767048,0.422415,-7.257910,-0.113556],[-3.885993,6.050713,-5.980451,0.525713,-7.954929,7.995657,-1.508052,4.122881,-8.626285,-4.481810,9.059279,4.519544,7.332274,6.700989,-0.492391,-8.983026],[4.868715,5.076000,2.938799,-6.531418,2.067600,6.231445,9.941199,8.774669,-4.825106,-7.567099,9.826561,-5.842864,2.413650,-1.003445,0.579658,-7.578755],[5.930346,-8.130704,8.106866,-6.856244,7.776576,-0.583828,-8.189193,-9.831925,2.791525,-2.755271,6.738143,-9.522730,6.770121,-9.200322,1.968272,8.439552],[-7.868640,-9.290950,-8.496519,-5.713298,-1.775850,-1.037750,8.253201,-9.192855,-6.818889,2.904586,2.093263,-4.811908,-8.107027,-8.990988,0.160238,-1.924512],[1.846959,1.840012,-1.419951,5.481115,2.711125,3.081980,2.267712,9.987754,5.334685,3.485226,-4.784303,1.071014,-4.482622,3.997502,8.386262,-1.999807],[-9.914188,4.522412,8.532077,5.484887,-7.713375,8.700197,-4.670974,8.642983,4.840821,2.705055,-0.208091,2.063054,-0.009963,7.529719,-7.523564,-8.431282],[7.658826,7.954624,8.845832,9.543807,-5.052818,0.252011,-0.944392,-5.497651,3.458128,9.625278,-5.206582,-1.167677,0.622393,-7.976805,8.098732,-9.064534],[-0.156600,-1.313255,4.814993,-6.679190,-7.057779,-4.606791,-7.578048,9.504481,-7.717006,-6.412336,0.553129,1.109358,-6.645223,-8.273013,8.062386,-2.008704],[0.491751,0.672242,5.086572,-4.806469,3.661146,-6.471462,9.567643,7.058554,-1.805140,-3.814332,-6.472958,6.969498,9.032884,0.738626,-8.134088,6.190739],[-1.412354,-9.608025,-4.028214,2.031684,-6.955511,1.059475,5.521757,0.467690,-5.073448,5.949547,-2.382687,1.450990,8.610156,-2.859995,7.087048,5.610958],[-1.517994,8.623434,-5.122344,-0.302373,-9.994300,-4.668856,-4.356860,2.569171,7.780390,9.348646,0.127637,4.968967,8.174538,9.487334,6.111117,-4.595730],[-9.001758,-6.891022,5.742455,2.411185,0.809824,1.607615,-5.409974,-2.244745,-1.022658,5.551660,8.458744,-6.717005,-8.784203,5.931454,-9.899104,8.112465],[3.007112,2.548599,-5.912490,-5.520302,-4.366663,6.100255,-3.856122,-4.201336,9.074301,7.220928,-3.571790,-9.464984,9.341846,2.649568,5.050015,-1.298424],[-4.755177,9.023958,0.934205,-0.234005,-2.569637,-7.820847,-3.973008,6.393012,-9.287734,-1.026981,-6.920596,7.476506,-7.220502,4.355457,1.773251,-7.604576],[7.607872,-9.480733,6.480057,-6.274392,-3.924633,-9.703875,5.860836,-2.096987,-4.976421,-8.045425,1.126153,-8.228290,-1.211280,-9.396979,-8.848232,-9.051414]], dtype = "float64")#candidate|9523|(60, 16)|const|float64
var_9524 = relay.var("var_9524", dtype = "uint16", shape = (675,))#candidate|9524|(675,)|var|uint16
call_9522 = relay.TupleGetItem(func_7899_call(relay.reshape(const_9523.astype('float64'), [12, 16, 5]), relay.reshape(var_9524.astype('uint16'), [675,]), ), 0)
call_9525 = relay.TupleGetItem(func_7903_call(relay.reshape(const_9523.astype('float64'), [12, 16, 5]), relay.reshape(var_9524.astype('uint16'), [675,]), ), 0)
uop_9526 = relay.acosh(call_9506.astype('float64')) # shape=(12, 11, 12)
uop_9528 = relay.acosh(call_9507.astype('float64')) # shape=(12, 11, 12)
output = relay.Tuple([call_9513,call_9522,const_9523,var_9524,uop_9526,])
output2 = relay.Tuple([call_9514,call_9525,const_9523,var_9524,uop_9528,])
func_9531 = relay.Function([var_9524,], output)
mod['func_9531'] = func_9531
mod = relay.transform.InferType()(mod)
mutated_mod['func_9531'] = func_9531
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9532 = relay.var("var_9532", dtype = "uint16", shape = (675,))#candidate|9532|(675,)|var|uint16
func_9531_call = mutated_mod.get_global_var('func_9531')
call_9533 = func_9531_call(var_9532)
output = call_9533
func_9534 = relay.Function([var_9532], output)
mutated_mod['func_9534'] = func_9534
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9539 = relay.const(-10, dtype = "int64")#candidate|9539|()|const|int64
const_9540 = relay.const([[[-5],[-9],[-1],[-5],[6],[-10]],[[-4],[-7],[2],[3],[6],[1]],[[-5],[8],[-3],[1],[5],[-2]],[[-3],[-1],[-2],[5],[6],[8]],[[7],[1],[7],[7],[-10],[-7]],[[-5],[-10],[10],[-9],[10],[5]],[[-2],[9],[-4],[9],[8],[5]]], dtype = "int64")#candidate|9540|(7, 6, 1)|const|int64
bop_9541 = relay.less(const_9539.astype('bool'), const_9540.astype('bool')) # shape=(7, 6, 1)
output = bop_9541
output2 = bop_9541
func_9546 = relay.Function([], output)
mod['func_9546'] = func_9546
mod = relay.transform.InferType()(mod)
output = func_9546()
func_9547 = relay.Function([], output)
mutated_mod['func_9547'] = func_9547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5663_call = mod.get_global_var('func_5663')
func_5665_call = mutated_mod.get_global_var('func_5665')
call_9572 = relay.TupleGetItem(func_5663_call(), 0)
call_9573 = relay.TupleGetItem(func_5665_call(), 0)
output = call_9572
output2 = call_9573
func_9574 = relay.Function([], output)
mod['func_9574'] = func_9574
mod = relay.transform.InferType()(mod)
mutated_mod['func_9574'] = func_9574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9574_call = mutated_mod.get_global_var('func_9574')
call_9575 = func_9574_call()
output = call_9575
func_9576 = relay.Function([], output)
mutated_mod['func_9576'] = func_9576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6798_call = mod.get_global_var('func_6798')
func_6799_call = mutated_mod.get_global_var('func_6799')
call_9592 = relay.TupleGetItem(func_6798_call(), 0)
call_9593 = relay.TupleGetItem(func_6799_call(), 0)
output = relay.Tuple([call_9592,])
output2 = relay.Tuple([call_9593,])
func_9594 = relay.Function([], output)
mod['func_9594'] = func_9594
mod = relay.transform.InferType()(mod)
output = func_9594()
func_9595 = relay.Function([], output)
mutated_mod['func_9595'] = func_9595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9456_call = mod.get_global_var('func_9456')
func_9458_call = mutated_mod.get_global_var('func_9458')
call_9606 = relay.TupleGetItem(func_9456_call(), 1)
call_9607 = relay.TupleGetItem(func_9458_call(), 1)
const_9608 = relay.const([[[9.546489,-8.494961,-4.993638,8.114126,9.923603,0.799204,8.300805,-5.743812,7.173964,-0.932412,0.830601,-6.185393,-0.855813,-0.893522,8.105455],[3.158480,7.848808,7.876110,3.751666,2.306151,-8.164015,-5.395948,4.887283,-7.204923,2.616685,-4.337577,3.775298,-3.759643,2.101644,9.209789],[0.759623,8.238858,-0.590319,-9.283785,2.605390,3.191563,-5.452487,7.680611,-5.728012,7.713713,-4.703218,-1.126572,-2.745946,2.199969,-0.264442],[2.350395,-0.205666,-9.601853,6.365519,-9.423456,-4.180002,-7.068900,7.722781,-1.871965,0.473090,9.758603,6.057164,-4.919672,-6.997702,0.869809],[-8.536648,-3.934675,-2.123684,5.972173,1.653967,-7.059290,5.132570,9.509540,5.521559,-7.912656,3.134095,-6.254469,-6.867971,-0.507955,9.576541],[2.804079,-8.696368,-9.973748,-3.865539,-0.349606,4.451268,8.848531,7.971908,0.140632,-0.368401,-2.711016,7.583145,2.948865,1.937305,-8.845432],[0.690151,-2.542742,-7.397611,-7.880467,-0.085187,-1.706051,-0.628941,7.739351,-7.753041,-5.342462,-0.219940,-5.925207,7.899574,6.097631,-9.858807],[9.470699,4.047209,6.273935,-1.255520,-0.328408,8.405583,-0.483915,-1.238567,6.528455,-7.164188,-1.358854,-7.878307,-9.198737,-7.046417,-5.211587],[-1.299414,-1.204388,5.161597,8.853371,-1.365509,2.658303,-0.320425,6.441533,5.295885,-9.600335,-1.401362,-5.355202,1.453660,-2.422854,4.489744],[-0.620444,8.486037,3.346327,3.350836,-4.135245,5.301810,0.416279,-0.202941,-8.642621,3.704122,1.128959,3.605161,5.855228,7.944542,-7.976532],[-8.196575,-3.691371,-9.355066,0.081359,-2.542780,9.315052,4.604478,6.623188,9.297060,7.948823,-2.449157,-1.908474,-6.049914,3.929265,7.676382],[-1.761719,-4.715093,6.516797,8.075074,-6.245199,9.828537,4.640198,-4.896964,-6.380853,-6.729620,0.088061,-9.362911,0.257787,3.166296,-4.902090],[-5.034043,-6.861540,7.089658,9.412060,-6.538192,-5.226615,0.603696,-0.841629,6.090404,0.157882,-2.528933,-0.351788,-7.868252,-0.812364,-2.924984]],[[7.835585,0.286665,-2.629145,5.862208,9.138157,0.209262,1.976410,1.243034,2.605250,-5.205673,9.084277,8.062924,-7.650976,0.360334,4.891635],[5.439063,-9.631615,-0.511334,-8.780193,1.832190,-1.640152,0.384578,5.929530,0.997713,7.818386,-1.319616,3.191243,0.484138,5.516933,-3.532169],[-2.233129,3.449400,-1.155463,2.245864,-6.783975,9.072113,-5.077927,-2.278492,4.869685,-8.575096,-6.656863,3.530348,-7.728080,5.376014,9.922611],[-8.920391,0.584314,1.740869,8.832685,-7.369008,6.198188,-9.248214,3.507309,3.321037,1.650210,1.196899,-6.810562,6.665040,3.833562,1.200367],[-6.349616,0.891308,2.584941,7.416548,5.349708,-6.177533,2.291981,-7.236923,-3.226524,-5.399278,9.655188,4.708304,-8.804020,-0.564780,3.774706],[7.401421,9.016791,7.484770,0.983899,-1.917164,8.385685,0.264863,1.856407,1.270271,3.843851,4.728247,9.514146,6.340782,2.783884,-9.329407],[7.194404,-2.106407,-0.438008,0.601276,0.893964,-0.989196,1.323645,8.436073,-7.443283,-2.814326,-5.008128,-0.982866,-2.957386,-5.018127,-4.375492],[-0.582521,-4.998284,-9.042008,-3.691604,-7.386724,3.610846,-6.738145,-2.166634,-0.667731,-1.440829,-1.213332,-5.019487,6.039976,-7.584451,3.118046],[-2.457280,-2.873962,-9.666162,0.077896,4.203834,-7.813851,-8.104563,3.135074,3.637607,1.676959,-5.051224,-5.285416,8.215785,0.439273,9.972986],[-2.765777,-4.962149,-9.195994,5.925514,0.686104,5.437422,-1.152268,6.294333,-2.430470,7.438285,-8.204558,-0.702548,-1.198465,-1.210626,9.462435],[-5.427272,1.075765,5.185964,-6.053073,3.764489,2.277412,1.786858,6.106502,8.374120,0.477179,1.130086,-6.398846,6.665378,7.468416,-1.121180],[3.834760,-1.718261,3.240305,6.964528,0.609601,7.496400,7.738695,-1.700068,8.399288,1.014947,-5.431032,9.724852,-5.460393,7.224183,-2.747050],[-1.556701,1.227733,3.793613,-6.902344,-9.272409,6.502900,-3.465788,-2.775766,5.007229,-4.007310,2.189820,-3.097925,9.872277,4.676407,-1.267622]],[[-5.283468,9.691567,-8.481898,-6.276132,8.146339,-7.641785,2.160272,-0.251178,2.280790,0.019469,-4.301616,-7.398192,0.606263,9.377803,-0.150588],[2.403718,-3.710959,-9.973398,2.239816,-8.601003,1.899028,7.321479,4.800649,8.860217,-6.076736,0.469425,4.835072,7.837583,5.245409,3.078106],[-1.532058,4.330302,0.303324,2.958145,-8.778654,-4.438583,-8.506611,-5.378961,5.429802,-2.410924,3.548956,-1.271288,7.431637,9.149005,-9.659842],[6.552191,7.385646,6.513289,-6.253236,7.643693,-7.155875,4.231980,-5.409024,9.836694,6.130511,8.400602,7.127520,3.408148,4.733674,5.007572],[2.033001,-9.821298,2.411085,9.126178,4.596153,2.979053,-1.591660,-7.389355,-9.240948,-3.788183,-4.715711,-8.865466,2.381676,-4.980420,3.135576],[-7.867834,-4.997665,6.889349,0.800268,-5.164258,-2.998433,-0.572589,-8.828445,7.550890,-6.479817,-8.371323,1.747418,-4.507544,-6.666011,3.093546],[8.375600,-3.640232,-7.112420,6.514938,-7.703597,-5.296654,4.332841,-7.041810,-4.472019,1.233372,2.491887,5.465740,-4.211279,-5.342626,-7.070317],[-7.557483,5.196263,-7.132660,4.622162,1.567573,0.213930,-8.543544,0.773012,-7.107513,-9.109633,-7.332222,1.025702,-3.191529,-5.267847,-3.468575],[-6.950142,-2.458864,7.349890,1.228437,-7.151675,-0.733427,5.025737,8.195854,1.020112,-1.285626,0.200199,-6.248087,-1.594588,-0.034387,0.034464],[2.836096,-4.560962,8.331022,-9.856103,-0.552284,-0.081135,-4.789806,8.180468,-8.697658,8.338439,-6.559796,8.803357,3.563055,1.349378,-6.004760],[-3.087308,-3.706131,9.617296,-1.135503,-4.734830,3.659893,-4.777540,-8.101407,2.257703,-6.696034,9.406048,7.125877,7.835842,-7.778411,-8.276912],[5.846343,8.404316,0.208048,-1.928277,-9.225744,-6.743055,3.481433,-5.130942,-1.901380,-7.826026,-4.341467,5.342366,-9.490912,1.377271,1.463466],[-0.723773,-5.463769,-5.269693,-6.810401,-6.530009,-3.246217,-4.853093,0.013489,6.096598,-2.517119,-8.000818,-6.183596,-6.883846,2.651674,4.556541]],[[-7.755806,1.166686,2.447607,-1.099066,-9.681319,8.615031,-9.956744,-3.690565,-3.490237,5.921474,7.065452,1.312869,-2.356726,6.754741,5.210995],[-6.899685,-0.188927,9.899059,-2.481368,4.891430,-7.670678,7.096530,8.225990,-6.178368,3.400499,-9.713659,7.595110,-8.649086,-6.545185,2.641296],[8.133353,4.556366,-5.742269,1.770089,-3.715221,7.048897,7.329552,7.105484,6.219714,-1.596217,-3.827848,1.770778,0.814072,8.074469,6.335424],[4.327607,-9.294490,-4.363342,0.036290,2.801077,8.042943,-1.053481,5.725557,2.600757,1.786978,-8.845894,-6.222881,-7.437756,0.213275,8.301795],[-6.467377,0.176065,5.132634,4.345021,-0.591520,5.354612,-8.390522,-7.973292,3.619691,-7.096024,-9.804134,-7.374841,-4.228333,-5.983873,-1.344744],[6.425317,-4.559130,-5.682465,-6.078272,1.312730,-0.019145,-3.074142,-0.096496,6.510757,-2.314137,1.367348,-2.404564,-5.863027,-0.725071,-4.351320],[-0.944586,7.187050,8.556020,6.989073,-1.962507,-2.794153,4.666272,5.252368,4.683285,1.109735,-6.196741,-1.885446,8.918686,9.404303,4.303069],[-2.024211,5.104951,3.531888,0.035826,8.162872,2.852757,0.834620,-6.798565,-1.307575,6.012297,-8.809626,-4.170460,-3.245430,9.168222,8.389618],[4.939093,-2.751564,-8.434790,3.054850,-2.610292,0.768905,-6.120303,-3.832235,5.204481,9.504827,6.278726,-0.118226,-1.124158,3.454965,-4.372986],[2.993800,-8.598804,4.163662,4.589315,2.291133,5.879756,6.433120,9.022865,-5.334383,-3.763302,7.585205,1.323260,-3.680380,-9.363088,6.316904],[-9.556988,-9.978863,1.440609,5.054112,2.967410,-6.877066,0.769745,-2.598013,-7.268311,2.988153,-8.652558,-5.130298,-4.630771,-8.746551,-2.859967],[-7.404434,-3.828961,8.825920,-4.641235,-0.523110,8.734059,-8.539406,-7.600369,0.320485,5.203607,8.421787,3.410563,-6.678885,-0.403865,-8.658239],[-1.252613,-6.085224,-8.609287,-5.220464,-8.907652,-4.604082,-7.180761,3.138521,1.574941,5.530048,5.445663,8.288297,-2.635479,0.288573,-2.748471]],[[3.497218,-0.563070,5.877577,5.851545,2.207873,-1.524120,-5.000363,-3.462398,2.240006,-1.642349,-7.312006,6.286796,2.782970,9.691342,4.961966],[-5.412800,1.262011,-6.526548,0.138873,-2.652280,2.567851,-1.074458,6.316337,8.616915,1.318781,4.541086,-1.503887,9.994180,-3.999345,-6.991066],[-8.305608,-5.090623,4.301828,-6.133815,3.224402,6.382613,2.345246,-4.917042,-8.386483,4.055957,7.108411,8.204630,9.664415,6.755541,-7.016706],[5.306508,5.196048,-2.619364,-5.598357,6.596742,9.725588,5.430550,9.673574,-2.424693,5.387081,6.125228,-5.811920,-3.820542,2.657339,-6.060778],[1.759583,-5.627753,1.348675,9.992508,2.406622,6.172760,7.804265,6.477508,-1.700919,-7.627616,4.123285,3.727593,0.318780,5.841094,9.407511],[-2.729468,-5.496986,2.007271,9.829920,9.087155,-4.356374,5.246231,9.016925,-6.827935,-1.616740,-3.392030,-2.535450,-9.612921,4.197946,-8.815016],[9.841721,-3.689834,3.579014,9.600232,-8.108113,7.599768,-9.158585,1.460335,7.155375,4.282223,-4.404530,8.959930,8.054692,-6.410116,5.691088],[-0.070562,9.578787,-3.061609,-4.485830,5.070659,8.625996,7.738473,-7.919066,2.076407,-0.830806,0.964565,-2.599628,4.100651,-7.439704,8.439140],[-2.152694,-7.922432,-6.715407,-8.846417,1.422793,4.974297,-3.832600,-6.559503,0.887698,-7.508677,-1.828970,0.748535,-2.777277,1.309562,-2.957028],[4.255958,-4.290652,3.419266,-1.896242,4.500049,6.567134,-6.192627,-3.891313,-2.032001,5.295609,7.578191,0.616492,-2.797050,-9.831160,-9.279518],[-4.390799,4.069867,-1.848267,4.636762,9.845167,-1.075791,-8.487159,-5.986150,2.733801,-4.961470,-0.707385,-1.126577,-5.839684,3.232068,-0.613558],[-3.515042,8.251655,7.110554,-8.203439,4.823238,-2.003278,-5.827731,-6.346611,6.128941,-0.615881,-0.883412,1.916822,-9.926899,-3.342592,-2.060055],[2.719805,9.472877,8.701843,-9.323881,-9.472626,4.769752,7.067239,9.872223,-3.171632,9.484849,-5.839864,2.811838,2.969140,-5.904853,-7.020354]],[[-6.508755,2.347346,-6.022161,1.869172,-9.580868,-2.210017,-4.902432,9.181447,-3.441351,-0.970918,-2.096510,6.080659,-4.874270,0.772892,-5.207800],[-5.447831,-0.898989,4.900933,-7.306801,2.038825,-5.065884,-8.513852,-9.809730,-1.440202,9.665312,-7.405972,3.310865,-6.382501,-4.000571,-2.273819],[4.921892,-4.834284,-8.743452,-4.672787,-1.149878,3.514868,-9.619274,5.717108,-6.861847,7.098953,-9.775105,3.863895,3.093699,9.180073,-9.197744],[7.109981,-9.081414,0.484042,7.781726,5.683167,0.005189,-0.599838,-2.240503,-9.905236,4.300038,4.899984,-8.200544,3.954108,-5.379410,1.868457],[9.666152,-3.183425,-3.954922,-4.574792,8.806691,6.925334,3.128839,-7.729054,7.554865,-0.750268,-3.114033,-7.848287,-5.951064,3.133139,5.121707],[8.210780,5.630511,-8.871778,5.144305,7.643738,6.089625,-0.086761,-1.091371,-1.865228,6.598228,-2.876843,-8.663437,-7.985976,-0.728021,2.840787],[2.283545,-3.550363,-3.796199,-6.544057,-8.897718,3.713709,3.207611,-7.356080,-5.858442,9.612017,4.841157,-0.024882,7.883160,-8.134948,-2.526449],[7.775923,3.551330,-8.947571,-1.270492,5.521129,-6.616457,-9.101996,-2.579395,4.436936,-6.890657,1.411065,-1.151826,7.680707,-0.712392,8.313032],[-5.015622,-3.952531,4.486007,7.903143,-6.936122,-8.444754,8.633175,-7.687395,4.543458,3.370079,-7.660037,4.287175,-0.494682,-3.264840,-7.512107],[1.344126,-7.153659,-3.932958,-4.645604,-7.568365,3.060255,3.717660,7.409375,-7.135785,4.777043,-4.841250,-0.920759,-5.253541,8.902264,-6.503310],[-3.142403,-6.463457,9.660413,-2.397303,-0.910472,-8.370857,6.375270,1.028640,7.603428,9.234048,6.369315,8.126244,4.862594,-2.292474,-4.222307],[2.107319,-6.460228,-9.118005,-2.614676,5.728073,2.581729,-2.039862,7.744154,1.350454,-5.116047,2.678224,8.097036,5.158870,-7.890148,1.276527],[-2.548043,4.209067,-7.816610,9.677516,6.710067,0.313172,-0.577594,9.926730,7.823242,7.286488,-2.048553,8.896550,2.676661,-1.427231,-6.329408]],[[-9.820006,-4.178496,6.841265,6.682638,-4.063466,5.547005,2.703714,4.782553,3.655257,-2.604403,-8.941146,4.253124,-2.228938,1.987942,-2.515719],[-6.869241,-0.695584,4.350681,8.648972,-5.650702,0.284322,3.703938,-2.256574,3.882129,-1.936712,-9.917447,-3.301666,-3.920102,-5.859565,-0.160388],[-0.572213,3.899547,9.792113,-0.908419,-3.117142,-2.473740,3.406374,-1.166843,0.493773,1.780789,0.452925,-7.946321,-6.528105,-5.499838,-7.681755],[8.134191,8.675604,-7.377650,8.332733,6.959433,3.124502,9.741631,-1.433044,-8.928203,-0.940447,9.782388,4.263549,2.542107,-5.218387,-5.120831],[-9.909235,5.373967,0.828300,5.421131,2.731005,-6.980436,-6.649024,5.565530,6.941997,-1.063703,8.297853,-1.726444,-4.269484,-7.837768,8.380665],[8.187552,7.571915,-6.273472,-3.202560,3.820230,-3.165178,0.533397,-0.413541,0.220777,-2.871259,7.621824,4.862413,2.009983,3.192666,7.228119],[-0.639471,0.885877,3.882584,-6.994987,6.860196,0.631344,6.202414,-3.170997,9.514965,-0.290854,-6.480897,-7.658649,9.480490,9.802307,5.687966],[5.486186,9.341785,9.095856,-3.813194,3.406152,-3.729431,-8.585461,4.448198,6.851404,-9.429451,-8.084821,6.021821,4.825292,-3.767669,4.637116],[1.478575,-3.824815,3.381281,0.520918,2.582135,8.337824,-7.325843,-2.309207,0.932766,-4.715390,9.929739,-8.545223,3.667607,0.124491,-7.042713],[-0.790164,2.947164,-3.938458,-3.017402,4.515803,-3.253047,0.539560,-9.164733,-6.619743,9.645762,4.464483,-8.493205,8.670433,5.207964,4.669770],[-9.435697,6.609996,-3.975001,-4.172237,-9.056709,0.822818,5.438792,3.887565,-6.774838,1.825194,-0.468740,-2.782253,-3.119405,1.209386,-3.452872],[2.642181,-0.073788,-4.214904,-3.590105,3.649981,-2.023351,-5.633079,-9.679057,4.490335,1.602016,-0.687189,-8.197798,-0.925206,7.356636,-7.433661],[9.533764,-4.079318,1.333166,-7.944456,8.789691,-5.744887,-6.679793,0.709775,-7.217079,6.763382,5.742688,0.537108,-7.660351,-8.014918,4.499461]],[[1.550540,-1.326165,-5.265106,5.735396,-9.064823,0.748127,-9.278704,0.675582,-7.945441,4.874530,0.920343,8.816910,-6.416437,8.786034,1.858929],[9.127371,3.577796,-7.560375,6.531674,-5.516785,7.834776,-3.025932,-1.402568,2.593360,9.747069,-7.025656,-1.548366,-7.385526,-3.056976,1.351168],[-8.105213,-9.344915,2.675027,-3.377945,-8.061535,-8.060424,-2.656571,-2.316118,-2.863555,6.179158,-4.898024,-7.671947,9.098171,8.608013,-0.424403],[-8.762780,7.814366,-9.935672,1.307600,-2.693138,-9.511100,9.788781,5.961916,6.100960,-3.239264,-4.876172,-3.204701,8.014294,5.510721,8.930270],[0.763546,-5.253187,5.091485,4.837081,3.078574,-4.179066,-6.991278,-7.630983,4.700781,6.464718,-3.415507,-9.198153,2.051939,4.321832,-6.965049],[-1.539245,-4.653899,2.147351,-7.330037,-8.348465,-9.832832,1.344351,8.448672,-8.785071,6.851366,-6.175512,7.755803,-8.224938,-6.784218,7.358180],[2.884282,-6.471701,0.402992,1.521114,4.212068,2.456329,-6.649560,-4.590303,9.444565,1.780432,0.260763,-2.090165,-0.294883,5.875181,-7.509285],[-3.041654,-5.865375,1.723907,-7.071521,5.071959,6.053121,6.595848,6.357438,6.968704,-9.348571,5.998099,-8.323731,3.023522,4.530071,6.488155],[4.914169,2.401386,-3.602570,5.293187,2.529012,-9.324525,-2.196347,-7.214905,-8.152740,-8.340226,-9.495901,-4.550193,5.576346,-9.419705,-6.077870],[9.047442,3.553270,2.181887,2.833821,-0.529846,-7.684835,9.076036,-0.094387,-9.961236,9.245452,6.688733,7.814412,-2.133366,7.600911,3.766238],[-8.068733,-0.411018,0.296501,-3.717846,-6.951770,4.387792,0.054611,5.344245,-1.892129,-2.070058,-9.848217,-5.158600,7.816303,1.955337,0.365917],[-7.914711,3.071212,0.931136,0.143454,8.164160,-2.369396,-5.608711,-4.481435,5.026522,9.456666,-3.136984,1.156063,3.037155,-5.043454,-8.785795],[5.432850,4.625954,4.932693,5.093051,-6.228103,-8.508336,2.825594,6.681209,3.102381,8.214242,-6.454927,-0.562664,-4.224154,8.595130,-7.591952]],[[-9.767089,-1.237226,-0.418831,-5.949677,-8.906441,7.279316,6.188073,4.397676,-9.254522,1.357074,-7.155043,4.460470,4.976407,-8.062848,-4.790070],[-5.180719,1.491760,0.228592,-3.772333,9.746318,-2.000985,-0.676127,-4.996153,-5.382669,-5.901983,-3.340856,-4.209777,0.538769,6.820614,-0.758880],[0.924510,-9.716678,8.576628,-9.867585,6.331677,2.423224,-9.487505,4.741367,1.603430,1.255679,6.837588,-4.112133,-6.642579,6.414035,-3.003291],[4.601254,5.808649,-0.551282,9.946775,-8.136846,-9.400077,4.069869,1.292925,6.178590,-7.254187,-7.552637,-3.414621,1.158276,6.421785,-1.468006],[-5.387773,5.983679,3.198012,1.427436,-7.062011,5.599901,4.064824,-5.457765,5.353578,7.611443,-4.406762,1.144118,8.283563,1.648775,-4.630335],[-7.854640,-0.880152,-7.828922,4.446199,-5.380472,3.291509,-1.653207,-0.785144,-9.731477,4.228594,-6.662561,7.077283,-8.240750,-7.180989,7.668913],[-0.146589,-7.953884,9.848316,-0.638952,-5.308056,4.316472,5.138404,-4.061564,-2.043693,2.277558,-1.011728,6.777440,-5.263281,-1.611746,-8.548737],[4.482173,3.969897,1.817782,-0.497707,8.601999,-1.264458,-2.347549,3.845649,-2.341622,7.221241,0.603003,7.262503,-6.139972,-0.002960,-8.774587],[-9.950832,6.010215,2.152192,9.560038,7.509264,-0.671798,3.696055,8.611413,6.200464,-7.500145,0.921049,7.498030,-3.426902,-4.261437,-6.495117],[9.138799,-3.193590,5.434604,2.521304,4.327516,4.591011,3.580250,6.870501,9.111510,-8.307007,4.212128,0.300024,-8.402211,-1.281525,8.775681],[7.429144,-3.710957,8.596115,-8.899583,-1.099448,6.821696,5.313259,-2.685081,6.000081,-4.714872,5.744439,-2.261609,-5.261129,-7.754897,7.558193],[5.646279,6.490181,9.911318,6.009516,1.049713,7.856599,-6.331935,9.033600,6.263954,-5.492720,-6.171874,-0.219540,3.411562,6.457335,7.723588],[7.811982,-6.359093,-2.729357,6.922513,1.420291,0.953888,-9.130717,4.629714,-7.643425,-2.775833,-4.057458,-3.949320,1.000507,0.148669,-4.326870]],[[-8.685839,-3.684693,-8.898295,-9.845903,-8.439078,-6.178291,-5.224961,3.379757,8.963389,7.093068,9.396002,-9.431971,-6.777042,4.130783,5.372859],[-8.282587,3.604944,-0.582442,-4.049022,9.262973,-2.339391,-3.712368,-4.503985,-6.056197,-8.011386,-6.369890,-4.816048,5.865539,-3.907405,-1.079803],[-8.473413,3.254932,2.032811,4.221008,-5.731531,1.663330,6.173615,-3.913328,1.867956,0.128994,-1.983220,5.497552,-8.258969,9.610503,9.315058],[-8.687565,-3.000230,7.468707,5.238095,3.293537,-0.020497,-7.627352,2.402559,5.478403,-0.068798,-1.676743,-5.990024,0.307245,-8.978091,-6.932624],[-9.780597,-8.460798,-1.961774,3.320217,-4.368402,-8.777241,2.087100,-5.907445,7.016260,4.588134,-6.866634,-5.393216,-0.843331,-3.422870,-5.253908],[-3.511311,9.073733,5.685003,9.792856,-1.313720,-2.525967,-1.449917,8.268492,-1.415054,-3.648326,-3.226784,3.950338,-4.515559,-8.890873,-7.618892],[1.518654,-1.159504,5.337080,-8.591498,-6.747831,2.411790,9.237252,-1.936004,-6.231653,3.569870,-3.822523,-8.112316,-3.808335,8.024246,7.330746],[8.717227,2.567538,0.747778,-8.898862,9.646776,-9.410745,7.729631,-7.366120,0.747430,-4.803846,9.991853,-3.293047,-2.182893,-1.840849,-0.073433],[4.918568,-4.671996,0.294731,-6.856453,-9.661975,-5.991360,-3.465266,-0.900724,1.030425,9.459346,3.105135,-8.040343,-8.785611,-3.291937,7.301373],[-0.690193,8.711951,8.308148,0.844103,-1.775036,4.693781,-4.907871,-8.895365,-1.918449,-0.210132,3.817038,-7.315929,-3.476733,-7.340046,-4.236208],[8.781195,-4.771743,4.550340,0.502191,7.621934,-8.725717,-8.832038,-8.862954,-1.307123,-9.178925,9.231627,-1.678302,6.276637,-9.376378,9.498587],[2.217734,-6.229253,2.760456,4.538359,-4.488333,-3.976228,3.425009,9.091882,1.316481,-1.618832,1.889789,2.876086,-2.347548,-2.396132,-9.145828],[9.252245,-3.345755,-9.352813,9.135530,-1.612883,-1.347856,5.949098,5.450570,-3.155461,-7.979348,-9.823303,-2.888847,7.553423,-3.333805,8.467369]],[[0.953383,5.611416,-5.566056,-7.214940,4.023727,4.503264,5.993262,-9.674607,-0.954712,-0.317636,2.130928,-7.251390,-2.575881,-8.402097,0.604206],[-3.698707,-9.820157,-3.244721,9.660192,2.891445,5.931826,-6.787334,6.044328,3.705168,4.881120,-3.900276,-2.948436,-2.989835,-6.209075,1.901288],[7.420269,-8.162360,1.693077,-7.600260,6.611011,-7.377587,4.552299,-4.017966,7.406836,-1.977588,9.036307,2.773597,2.661559,-8.449393,7.890927],[8.015116,2.848497,-8.050504,-3.680321,6.464048,-8.218904,-0.975081,4.374324,-1.598970,-4.362712,6.023060,5.182560,2.830682,3.148479,-6.849512],[5.675506,0.634708,-5.014048,-4.188991,-8.419316,-5.685145,0.956494,-9.760830,4.792630,9.268628,5.082049,3.972177,3.062381,3.467601,2.010996],[2.895507,2.769975,2.039004,2.913182,-4.621013,-3.975392,-1.498332,8.082725,-9.466646,-8.229446,-9.520973,-0.723097,-4.552705,-2.231160,-3.475050],[-5.917040,9.825137,-7.497961,2.798255,-9.976419,-7.381116,-1.779152,-5.580104,8.403406,0.078485,-4.132390,-7.963683,8.819120,-9.360213,-2.420924],[6.992473,2.847550,4.813690,-4.171430,6.757778,-1.290635,5.673179,-9.554115,0.724224,-5.376146,0.555266,-5.365605,9.911953,4.166351,-2.388212],[5.346907,-9.814181,-1.786851,-5.116245,-4.942501,4.444717,1.281655,5.420393,-4.648484,-4.128382,4.309682,5.423914,9.263827,-1.890816,-2.876405],[-0.697839,-2.526849,-0.171638,-1.366849,6.941452,-6.040935,-1.910388,1.511026,-6.535870,-2.888055,-5.011606,-2.101092,2.159262,1.077136,-9.043903],[-4.077465,7.315729,5.979197,9.479228,-8.105523,-3.151623,2.557558,4.533714,9.879259,-3.538314,-6.814071,2.016767,-8.874271,-3.027352,-8.080746],[-6.193430,4.278111,-1.539860,8.150923,4.796165,-8.763859,7.321546,-2.772049,3.440938,-4.064052,8.230822,-8.617202,4.674092,3.298829,-0.768816],[0.790852,4.803207,-7.182416,8.976131,3.094969,-9.795633,7.415899,-2.388292,-1.746763,6.713311,8.603681,0.278596,1.367858,3.063373,-4.055344]],[[3.053616,-3.549927,-0.626249,-7.253928,-3.537795,-7.960840,2.544659,-2.097381,0.584611,5.094198,1.927425,1.412474,5.666450,-8.556018,-3.939180],[-8.433234,-5.240592,-2.856032,-9.624734,-4.663486,-5.318429,0.241878,-9.377375,9.883373,-1.913900,-1.376040,-4.683916,-7.436330,2.637939,-4.892349],[5.240637,4.900874,1.477120,-0.245580,-3.383139,-0.379010,-2.135817,-5.182955,-0.486508,-4.715647,9.973931,-9.283181,0.502178,5.425696,5.455835],[-4.523801,-5.645490,-3.156051,9.268764,4.324340,-5.273761,-9.328683,8.374819,1.974288,9.894652,-0.426748,5.793170,-3.904276,5.912019,7.473252],[6.283603,9.639441,2.440667,6.275178,7.315779,-6.850939,-7.811140,-2.510270,0.706564,3.731738,3.370897,1.780432,2.528846,9.768744,1.863689],[0.107076,-2.364900,0.010267,4.948110,-9.126656,3.201015,-1.170982,-7.143000,-1.561194,-5.223582,-6.234372,2.677694,-7.723290,2.453333,-3.429527],[-0.669233,1.343431,-8.275421,-8.357820,3.413247,-0.174772,6.815967,-0.430064,8.114305,-5.794648,9.631064,-1.178626,-1.221104,2.668738,-3.612891],[7.891577,0.520132,-1.020413,1.875924,3.215025,5.681151,9.322514,-9.590437,-0.825743,-1.512492,-4.372976,2.717613,0.027660,7.551777,8.078515],[-7.376734,8.411078,8.576942,8.115316,-5.309166,3.494178,6.189042,2.102256,9.920589,8.737623,-4.054189,1.102141,-0.365598,2.789513,8.820957],[-9.441529,4.002833,9.231282,1.304466,5.010374,-4.862527,5.724045,-5.554225,1.774461,1.069580,0.427661,-9.581085,2.486043,5.371928,9.901455],[-8.530996,-8.557715,0.975711,-5.870363,8.816478,-5.022898,0.354943,7.454664,-5.187603,2.530960,6.919362,8.667119,9.928988,6.953636,-3.400531],[5.279387,-6.323725,-7.625370,8.508945,-7.180833,6.992816,-5.163086,-6.491825,-0.321451,2.416312,-3.886564,-8.831747,-5.807365,1.456121,6.357576],[-2.549536,-2.504462,-6.227465,-1.620210,5.448624,-1.813386,-1.544074,4.736143,-9.186994,0.563546,4.549012,1.736966,-3.275270,3.653821,1.210221]],[[9.039847,8.041554,-8.602195,-2.269652,-9.645652,2.728238,-0.896667,7.698795,-9.901443,4.234678,6.680243,-3.128565,7.461751,8.231609,-5.485846],[4.114009,-8.486297,6.471511,-6.705062,-2.377729,7.282405,-5.102350,8.336761,-6.247526,7.430328,0.978311,-5.739996,0.204056,-7.289651,5.738309],[5.650217,-7.794717,1.882861,-7.508448,-3.222101,-9.577804,-8.023482,5.940568,9.522788,-4.258919,-5.929056,5.459788,5.795076,-6.100538,7.543042],[-1.073206,-3.641337,2.532356,-5.798790,4.517359,-8.092936,-7.129556,-8.737016,-2.289618,5.033064,7.816636,-6.460063,0.956968,4.221911,-3.416201],[4.525404,-9.608103,0.979048,4.371146,2.503657,-4.053664,8.145575,5.769724,0.781596,6.702294,-7.186804,-5.913675,4.594765,-5.714105,3.025084],[-4.477641,5.313478,-6.107452,-2.005097,-2.382639,-1.814097,7.802884,9.199717,-1.832481,-7.582556,-3.850466,-1.198260,6.542902,-8.281838,-1.291884],[-7.636872,-6.431416,0.098370,9.800359,-9.817398,-3.253971,-1.497835,-6.799288,-0.267250,-4.844801,-6.497137,3.570701,1.728535,7.615917,-7.894425],[3.452346,-8.709578,-3.641585,-9.754957,7.850355,5.578676,-3.405738,7.321971,1.459047,5.842914,-1.591153,-1.866209,-0.545319,-2.876706,7.363338],[9.871994,-8.346105,-3.279316,-9.410181,-6.413626,-5.088788,9.589334,7.276380,3.181001,-8.756430,2.961111,9.591371,-8.056097,2.821768,2.725470],[4.393172,-8.876172,-8.876387,-2.359939,9.572039,-6.535161,-0.391711,-4.160335,-3.648714,-8.698112,-5.230565,8.192672,-9.881347,5.103176,-0.290553],[-7.021790,-6.408068,9.554396,-7.829272,0.387582,-2.490399,7.778641,4.705352,9.327797,5.204211,-4.246415,5.816385,0.327135,4.173653,0.204162],[2.894892,4.242278,-6.417614,-9.194428,-1.530678,6.210225,4.689212,8.429708,-2.059000,-6.305911,-1.206758,-8.773102,-8.464442,0.540876,-7.779622],[-7.962659,9.700612,8.822940,-5.280715,-0.247186,4.982653,-5.649182,-5.978657,9.647478,-8.983202,-3.422942,-1.046710,-4.380476,2.073324,-7.224456]],[[-1.248200,1.656884,-5.352657,-2.517858,6.289177,6.020992,-2.867618,1.039421,9.869023,4.428271,3.206948,3.203750,-4.563383,-6.185791,5.908661],[-4.302475,6.502544,8.961894,-5.974257,9.155073,-8.254800,4.449743,-7.569469,2.620316,9.364146,3.942809,7.489655,2.170326,-2.774173,6.391304],[-7.674056,7.569166,1.546319,-7.341236,-7.934993,8.008527,-1.541482,2.644851,-9.591573,2.557840,-0.328244,-5.136792,9.604959,0.845775,0.968099],[9.859089,-9.950724,-6.501961,-5.481830,-2.772153,-0.225215,7.898838,-6.801037,5.430106,-3.937952,-7.741450,4.054771,-1.930855,-6.107163,-5.468782],[-0.926601,-1.962514,-4.562857,-4.793474,9.974320,-6.624055,7.758708,-1.633129,-5.893532,-8.876150,-1.805905,6.491049,1.372884,-5.061235,-9.717037],[7.071497,8.952583,6.009096,-9.357956,-8.258696,-6.785266,5.753487,-7.976999,5.762649,5.933043,7.269380,9.831075,8.303052,-4.999279,-1.195902],[-6.487880,1.359830,3.937749,-2.674975,7.907992,8.076078,1.448770,2.115192,4.247812,-0.968464,-2.678379,-1.645376,8.189210,-6.758700,-4.814356],[-5.432030,-3.182036,-1.061106,-8.343367,-1.918324,3.876692,-1.806960,-2.385922,-5.889261,-0.997346,5.428972,7.550440,-5.808229,9.705767,-7.426420],[-2.818109,6.240838,1.128910,-5.074179,-0.795190,1.831718,3.557442,-6.426835,3.333164,6.750557,6.474091,-4.211362,-7.245871,3.098459,9.528216],[8.147583,-3.917115,-1.517554,-7.083808,-0.283411,8.976379,-3.734685,8.310967,8.135751,-8.671959,-7.301402,7.869717,-6.866691,-2.908417,4.888498],[6.090556,2.337952,7.570165,1.287267,-5.259933,-7.553809,0.590161,-2.991826,4.606553,4.401048,-3.652027,-3.739163,-9.185832,-1.630369,-1.174729],[-0.247846,-0.392763,-1.147973,-0.761175,-4.816506,6.307412,-7.212627,6.588832,8.866795,-1.194391,-8.541132,-7.538170,-6.606790,5.394722,8.880691],[1.338342,-5.861320,8.925351,5.901483,-8.135237,3.696376,8.458889,0.504418,-3.330934,9.472958,5.008341,-1.619548,-5.680059,2.352434,1.931875]],[[-9.091717,-1.951095,-1.486688,4.851412,4.244848,3.848708,5.105355,7.189457,-8.765193,7.006679,-1.202151,6.737608,-4.043553,-9.494947,-9.277787],[7.602088,-6.319317,2.570152,9.079322,-9.704664,-5.784600,0.444152,-6.779926,-2.068862,3.962523,9.960269,0.608645,-4.229951,-1.305397,2.680719],[-5.045394,2.705821,-3.227551,5.482004,5.145196,4.243328,-5.212389,1.863140,3.652244,3.183132,8.290145,-6.082328,1.664239,0.994987,1.346907],[-1.537727,6.329657,-3.992826,-4.055979,7.682827,-1.911285,-6.375117,-9.051598,2.656500,1.420100,-6.554706,2.598488,6.836066,2.718283,0.938977],[0.597067,-2.843492,6.088904,5.805937,-8.722654,-9.230551,8.001081,2.985855,-3.745393,2.902406,9.700201,2.762580,-1.323897,-8.057188,4.940778],[6.900223,9.427314,0.321464,-1.198845,2.748442,0.759386,0.863915,-3.937811,-8.468417,-6.113954,-7.288823,0.938055,-6.716396,2.684835,4.253163],[-1.928962,3.292398,-3.555236,9.457006,0.623575,-5.368679,-0.553696,1.249133,-9.886039,3.904311,4.434138,7.651944,9.455239,8.082262,-4.573538],[2.803942,3.133429,-7.189684,7.421618,-4.947446,-9.048036,-4.055672,8.864290,5.994950,1.017708,-9.018922,3.824526,-2.552952,6.576890,4.056886],[-9.126930,3.577385,7.782679,-1.031424,1.738759,-0.871025,4.118694,-9.292004,-7.862718,-7.835969,-5.452200,0.086559,-4.431071,3.534215,6.609765],[6.774185,7.937923,1.035474,4.921631,-5.978388,-1.147971,-5.339578,6.158757,-6.657404,9.334531,8.149399,8.467479,1.316200,-4.079455,-9.254938],[8.300617,-3.911193,-3.193318,3.467268,2.318327,-3.706606,-8.316223,2.017776,7.069111,-1.062422,-5.860025,-9.855398,-2.322657,-4.381391,-8.139009],[-7.879164,-1.636420,7.082582,-3.191653,-5.691857,-8.421354,0.944096,-6.003406,-0.875564,0.091979,-6.198046,-9.284088,3.417367,-2.356206,-7.994326],[-9.589858,-0.607548,5.627050,8.457064,-2.631629,7.240266,-9.232640,-0.973605,1.125094,-0.417354,1.568912,-4.464233,-3.459632,-0.004755,4.191234]],[[9.875962,8.451186,7.151677,1.219390,-3.761185,-5.910455,-1.610640,-2.745185,3.288245,1.116693,-9.903073,-1.673276,8.996001,8.608246,0.541972],[-4.655988,-3.858499,-8.341286,-7.096905,0.970298,-7.850665,-6.512780,-2.404932,5.384133,-7.462795,-4.275193,2.327257,4.090424,2.541900,-1.567329],[-2.845746,1.578893,-0.206599,-7.113205,-6.405230,9.274613,8.229787,2.347049,-1.080765,-6.983621,-9.067048,-0.660591,7.068459,-1.243910,-8.793025],[-3.771670,0.916999,3.345956,2.247081,-1.970715,7.085977,-8.445243,1.046559,6.680636,-3.635918,-2.554629,-7.616915,-5.104925,-0.962696,-9.347823],[3.949692,3.672817,-2.176590,-8.349848,-1.840741,2.435793,-9.616247,4.041500,-4.927290,-1.829306,-4.376030,0.059067,9.115570,-7.580034,-6.377032],[-7.277375,7.401787,-0.181973,-6.661223,-1.842810,8.047076,3.134084,3.628969,3.167721,2.519581,5.030887,-9.535547,-5.922041,-0.949708,0.871546],[4.441365,8.758058,-0.885339,-8.472016,-4.007358,3.889771,0.163500,-5.810919,6.852008,-3.656979,4.735879,-5.489963,-4.770705,5.170456,-5.635184],[0.656216,-4.785844,-4.968065,-8.744481,3.160113,2.828889,-1.806491,3.477078,-7.990630,-7.402868,8.174354,-7.283593,4.896882,-6.294279,5.561840],[7.374456,-1.675768,8.536958,-9.793975,-7.647147,1.123288,6.450345,-8.826952,-7.531484,5.617847,4.995581,-3.099888,3.736627,-7.695430,-4.460019],[-1.461900,-5.028636,8.931424,8.018437,3.350669,1.111365,-9.319498,-8.141710,-7.898152,4.244250,4.068878,-5.628591,-0.558186,6.383462,-3.881708],[-5.462083,5.886223,5.151840,1.779778,5.521047,-4.092273,7.002894,5.259571,8.491975,-2.884603,1.840510,7.037882,1.397642,3.768669,-4.557252],[-6.731439,-6.368206,4.413383,-8.216093,9.899744,3.821479,-9.844125,-2.705882,-4.939833,8.596485,-2.287452,-7.106344,6.151612,5.253577,-2.531032],[-0.010741,-3.113272,6.935486,-9.589475,-5.382266,4.752520,-3.858341,-2.582984,6.787641,-5.338077,1.600711,4.064395,0.480063,7.380915,-1.683419]]], dtype = "float32")#candidate|9608|(16, 13, 15)|const|float32
bop_9609 = relay.floor_divide(call_9606.astype('float32'), relay.reshape(const_9608.astype('float32'), relay.shape_of(call_9606))) # shape=(16, 13, 15)
bop_9612 = relay.floor_divide(call_9607.astype('float32'), relay.reshape(const_9608.astype('float32'), relay.shape_of(call_9607))) # shape=(16, 13, 15)
output = relay.Tuple([bop_9609,])
output2 = relay.Tuple([bop_9612,])
func_9620 = relay.Function([], output)
mod['func_9620'] = func_9620
mod = relay.transform.InferType()(mod)
mutated_mod['func_9620'] = func_9620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9620_call = mutated_mod.get_global_var('func_9620')
call_9621 = func_9620_call()
output = call_9621
func_9622 = relay.Function([], output)
mutated_mod['func_9622'] = func_9622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9546_call = mod.get_global_var('func_9546')
func_9547_call = mutated_mod.get_global_var('func_9547')
call_9660 = func_9546_call()
call_9661 = func_9546_call()
output = relay.Tuple([call_9660,])
output2 = relay.Tuple([call_9661,])
func_9669 = relay.Function([], output)
mod['func_9669'] = func_9669
mod = relay.transform.InferType()(mod)
output = func_9669()
func_9670 = relay.Function([], output)
mutated_mod['func_9670'] = func_9670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9669_call = mod.get_global_var('func_9669')
func_9670_call = mutated_mod.get_global_var('func_9670')
call_9749 = relay.TupleGetItem(func_9669_call(), 0)
call_9750 = relay.TupleGetItem(func_9670_call(), 0)
func_7122_call = mod.get_global_var('func_7122')
func_7124_call = mutated_mod.get_global_var('func_7124')
call_9751 = relay.TupleGetItem(func_7122_call(), 0)
call_9752 = relay.TupleGetItem(func_7124_call(), 0)
func_5901_call = mod.get_global_var('func_5901')
func_5903_call = mutated_mod.get_global_var('func_5903')
call_9788 = relay.TupleGetItem(func_5901_call(), 0)
call_9789 = relay.TupleGetItem(func_5903_call(), 0)
func_8216_call = mod.get_global_var('func_8216')
func_8221_call = mutated_mod.get_global_var('func_8221')
const_9794 = relay.const([[-5],[10],[8],[2],[-8],[7],[-5],[-3],[7],[-2],[-6],[-3],[9],[-3],[10],[-9],[4],[3],[-5],[9],[9],[5],[5],[5],[-4],[4],[-3],[10],[3],[-7],[7],[-7],[5],[-3],[4],[-6],[-10],[-9],[2],[6],[10],[-5],[8],[-5],[1],[3],[-7],[-6],[-10],[-7],[-1],[-9],[5],[-5],[-1],[-1],[10],[4],[-3],[7],[2],[-9],[10],[-5],[4],[-9],[4],[-7],[8],[-6],[-10],[10],[4],[6],[-6],[1],[-4],[-8],[6],[7],[3],[7],[3],[-6],[6],[10],[10],[-6],[7],[-2],[-6],[10],[5],[-4],[-3],[-3],[4],[6],[5],[-10],[6],[9],[-1],[8],[8],[10],[5],[3],[10],[-1],[8],[-1],[-7],[2],[1],[-5],[2],[-10],[-8],[1],[-10],[-9],[1],[-7],[1],[5],[-3],[4],[5],[1]], dtype = "uint64")#candidate|9794|(130, 1)|const|uint64
const_9795 = relay.const([-10,-9,-2,-1,-4,-3,8,-7,6,2,-7,-10,-4,-6,9,-3,4,9,3,-8,3,-2,-5,5,-8,3,-3,-8,-7,5,10,7,2,-10,8,-1,-1,-1,3,8,-2,-9,-5,3,1,-8,-6,7,-2,4,-6,8,-10,-4,4,4,-4,-2,-10,-2,3,-4,-6,-8,7,-6,-8,10,3,1,-7,-3,8,1,10,-8,5,5,-10,-8,6,-10,8,2,-6,-9,10,6,-9,7,-2,6,7,-9,-6,-6,10,-7,-5,-2,-6,4,6,5,8,-5,-6,-8,-2,-10,1,-1,1,1,-10,9,-7,1,4,7,7,2,4,-4,4,-5,9,10,-5,-6,-6,-9,9,-6,-8,-4,-6,-6,-6,-9,6,9,-1,3,-10,10,-5,10,-3,-6,-9,5,9,-10,-4,9,-4,-3,-7,-2,9,-4,-3,8,-1,6,-9,7,-2,4,5,-6,-10,-5,-9,-6,9,3,-4,-9,-7,7,3,3,1,1,-1,-7,8,-9,-9,5,5,-1,1,6,-4,-6,-6,-2,8,-7,4,1,-5,9,5,5,4,-9,-5,-2,7,-6,9,-2,-5,8,-4,-1,9,-5,8,4,-6,-6,7,2,8,-7,-7,-3,-9,-4,-10,-1,9,-5,6,8,2,4,1,-1,5,-5,-6,-9,-1,-5,-9,2,-2,2,6,-3,3,-6,-5,-5,-5,-5,1,8,-6,-5,-9,1,-3,3,-5,6,6,-2,10,-1,8,-8,9,-2,-8,10,-3,-1,5,4,2,8,1,-9,9,-6,8,-7,9,-2,8,4,-4,-8,9,-9,-1,9,8,4,7,-8,5,2,7,-9,-7,-6,8,-9,5,9,4,-1,3,-4,7,-3,-7,6,-10,-1,-10,5,-1,6,-2,-6,-3,3,-2,6,8,4,6,-1,7,-3,-1,6,5,-9,-8,-5,10,7,-4,-3,-4,-10,-7,7,5,2,8,-7,3,-10,-1,-4,-5,-4,7,3,-4,-2,-8,-8,10,-8,-9,3,-10,-7,-10,-1,3,5,-5,-1,-5,-2,3,5], dtype = "uint64")#candidate|9795|(390,)|const|uint64
var_9796 = relay.var("var_9796", dtype = "uint8", shape = ())#candidate|9796|()|var|uint8
call_9793 = relay.TupleGetItem(func_8216_call(relay.reshape(const_9794.astype('uint64'), [1, 10, 13]), relay.reshape(const_9795.astype('uint64'), [3, 10, 13]), relay.reshape(var_9796.astype('uint8'), []), ), 3)
call_9797 = relay.TupleGetItem(func_8221_call(relay.reshape(const_9794.astype('uint64'), [1, 10, 13]), relay.reshape(const_9795.astype('uint64'), [3, 10, 13]), relay.reshape(var_9796.astype('uint8'), []), ), 3)
output = relay.Tuple([call_9749,call_9751,call_9788,call_9793,const_9794,const_9795,var_9796,])
output2 = relay.Tuple([call_9750,call_9752,call_9789,call_9797,const_9794,const_9795,var_9796,])
func_9800 = relay.Function([var_9796,], output)
mod['func_9800'] = func_9800
mod = relay.transform.InferType()(mod)
var_9801 = relay.var("var_9801", dtype = "uint8", shape = ())#candidate|9801|()|var|uint8
output = func_9800(var_9801)
func_9802 = relay.Function([var_9801], output)
mutated_mod['func_9802'] = func_9802
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9818 = relay.var("var_9818", dtype = "float64", shape = (15, 15, 1))#candidate|9818|(15, 15, 1)|var|float64
uop_9819 = relay.atan(var_9818.astype('float64')) # shape=(15, 15, 1)
func_9546_call = mod.get_global_var('func_9546')
func_9547_call = mutated_mod.get_global_var('func_9547')
call_9824 = func_9546_call()
call_9825 = func_9546_call()
uop_9827 = relay.sqrt(var_9818.astype('float32')) # shape=(15, 15, 1)
uop_9840 = relay.sigmoid(var_9818.astype('float64')) # shape=(15, 15, 1)
bop_9843 = relay.logical_or(uop_9840.astype('bool'), relay.reshape(uop_9827.astype('bool'), relay.shape_of(uop_9840))) # shape=(15, 15, 1)
uop_9849 = relay.tan(uop_9827.astype('float64')) # shape=(15, 15, 1)
bop_9851 = relay.not_equal(uop_9849.astype('bool'), relay.reshape(var_9818.astype('bool'), relay.shape_of(uop_9849))) # shape=(15, 15, 1)
func_7593_call = mod.get_global_var('func_7593')
func_7596_call = mutated_mod.get_global_var('func_7596')
var_9858 = relay.var("var_9858", dtype = "uint8", shape = ())#candidate|9858|()|var|uint8
var_9859 = relay.var("var_9859", dtype = "uint8", shape = (1120,))#candidate|9859|(1120,)|var|uint8
call_9857 = func_7593_call(relay.reshape(var_9858.astype('uint8'), []), relay.reshape(var_9859.astype('uint8'), [14, 10, 8]), )
call_9860 = func_7593_call(relay.reshape(var_9858.astype('uint8'), []), relay.reshape(var_9859.astype('uint8'), [14, 10, 8]), )
uop_9861 = relay.log10(uop_9827.astype('float32')) # shape=(15, 15, 1)
func_7697_call = mod.get_global_var('func_7697')
func_7698_call = mutated_mod.get_global_var('func_7698')
call_9870 = relay.TupleGetItem(func_7697_call(), 0)
call_9871 = relay.TupleGetItem(func_7698_call(), 0)
func_700_call = mod.get_global_var('func_700')
func_705_call = mutated_mod.get_global_var('func_705')
const_9874 = relay.const([5.219417,-3.340607,4.821987,4.486589,-0.795202,9.293460,2.251169,-1.365936,7.476978,2.085600,-9.079665,-9.765979,8.851316,5.296386,5.198320,-4.337274,-3.995375,5.471268,7.335353,3.407395,4.883045,5.546186,-8.160977,0.220309,4.048747,8.538849,1.671806,1.179570,-3.964215,5.741412,-2.422556,-8.933614,-8.747518,-0.932125,5.550155,-5.784982,-3.247271,2.091521,7.596496,-4.048837,7.987425,-5.744545,3.253522,2.650515,-7.345936,9.979360,9.953459,-9.365917,-3.432986,6.396173,-1.362546,-5.637945,5.475969,-6.858380,-2.513366,-4.621637,-6.819211,6.337595,-6.580373,8.146515,4.600495,6.145239,-8.605656,3.999351,-4.449294,-3.665904,-2.534273,3.100700,-0.990811,-0.889054,-9.113049,-2.643351,-2.640377,-0.483496,0.550789,1.049355,1.435505,7.298874,-1.949276,-0.747994,2.417427,-1.494569,9.676074,6.301589,0.252426,8.226075,-7.737891,-7.294447,0.407024,-6.466664,-2.458467,1.885813,-1.061311,4.757235,6.305141,-2.030877,3.732695,-5.093308,-6.202717,-3.682300,-8.819220,-5.021691,-5.248896,0.026703,3.016061,-8.474990,5.122072,7.930682,-1.162466,3.832026,-5.071699,-0.575512], dtype = "float32")#candidate|9874|(112,)|const|float32
const_9875 = relay.const([10,6,9,10,-10,8,4,-7,-2,-9,-10,9,5,-10,-10,9,-8,-7,-8,-3,-9,10,-6,-8,-3,5,9,7,-1,-4,-4,10,-10,1,3,-8,-4,8,5,-2,4,-10,-1,-6,5,-1,2,1,10,10,5,-8,6,10,-3,-10,8,-9,-8,-1,-6,10,-6,2,2,-3,-1,5,-8,-9,-7,-7,10,6,-2,2,9,-10,4,3,5,4,-7,-3,6,-6,-2,10,9,-1,2,9,-5,6,-10,-5,5,2,8,6,9,9,-5,5,-6,2,-2,-9,1,-6,6,-9,3,-2,-7,7,2,-9,-4,8,-5,-7,-5,-3,4,1,-3,3,-10,-8,-5,2,10,4,-10,-5,-7,9,1,-8,3,6,-10,3], dtype = "uint64")#candidate|9875|(144,)|const|uint64
call_9873 = relay.TupleGetItem(func_700_call(relay.reshape(const_9874.astype('float32'), [2, 7, 8]), relay.reshape(const_9874.astype('float32'), [2, 7, 8]), relay.reshape(const_9875.astype('uint64'), [144,]), ), 1)
call_9876 = relay.TupleGetItem(func_705_call(relay.reshape(const_9874.astype('float32'), [2, 7, 8]), relay.reshape(const_9874.astype('float32'), [2, 7, 8]), relay.reshape(const_9875.astype('uint64'), [144,]), ), 1)
func_9456_call = mod.get_global_var('func_9456')
func_9458_call = mutated_mod.get_global_var('func_9458')
call_9885 = relay.TupleGetItem(func_9456_call(), 0)
call_9886 = relay.TupleGetItem(func_9458_call(), 0)
bop_9890 = relay.bitwise_xor(bop_9843.astype('int8'), relay.reshape(uop_9827.astype('int8'), relay.shape_of(bop_9843))) # shape=(15, 15, 1)
func_6298_call = mod.get_global_var('func_6298')
func_6300_call = mutated_mod.get_global_var('func_6300')
call_9900 = func_6298_call()
call_9901 = func_6298_call()
bop_9909 = relay.bitwise_and(uop_9840.astype('int32'), relay.reshape(bop_9851.astype('int32'), relay.shape_of(uop_9840))) # shape=(15, 15, 1)
bop_9916 = relay.logical_xor(bop_9890.astype('uint64'), relay.reshape(bop_9843.astype('uint64'), relay.shape_of(bop_9890))) # shape=(15, 15, 1)
uop_9934 = relay.acosh(uop_9849.astype('float64')) # shape=(15, 15, 1)
bop_9937 = relay.bitwise_or(uop_9934.astype('uint32'), relay.reshape(bop_9843.astype('uint32'), relay.shape_of(uop_9934))) # shape=(15, 15, 1)
output = relay.Tuple([uop_9819,call_9824,call_9857,var_9858,var_9859,uop_9861,call_9870,call_9873,const_9874,const_9875,call_9885,call_9900,bop_9909,bop_9916,bop_9937,])
output2 = relay.Tuple([uop_9819,call_9825,call_9860,var_9858,var_9859,uop_9861,call_9871,call_9876,const_9874,const_9875,call_9886,call_9901,bop_9909,bop_9916,bop_9937,])
func_9960 = relay.Function([var_9818,var_9858,var_9859,], output)
mod['func_9960'] = func_9960
mod = relay.transform.InferType()(mod)
mutated_mod['func_9960'] = func_9960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9960_call = mutated_mod.get_global_var('func_9960')
var_9962 = relay.var("var_9962", dtype = "float64", shape = (15, 15, 1))#candidate|9962|(15, 15, 1)|var|float64
var_9963 = relay.var("var_9963", dtype = "uint8", shape = ())#candidate|9963|()|var|uint8
var_9964 = relay.var("var_9964", dtype = "uint8", shape = (1120,))#candidate|9964|(1120,)|var|uint8
call_9961 = func_9960_call(var_9962,var_9963,var_9964,)
output = call_9961
func_9965 = relay.Function([var_9962,var_9963,var_9964,], output)
mutated_mod['func_9965'] = func_9965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7552_call = mod.get_global_var('func_7552')
func_7554_call = mutated_mod.get_global_var('func_7554')
call_10010 = relay.TupleGetItem(func_7552_call(), 0)
call_10011 = relay.TupleGetItem(func_7554_call(), 0)
uop_10025 = relay.asin(call_10010.astype('float64')) # shape=(5, 5, 8)
uop_10027 = relay.asin(call_10011.astype('float64')) # shape=(5, 5, 8)
output = relay.Tuple([uop_10025,])
output2 = relay.Tuple([uop_10027,])
func_10029 = relay.Function([], output)
mod['func_10029'] = func_10029
mod = relay.transform.InferType()(mod)
mutated_mod['func_10029'] = func_10029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10029_call = mutated_mod.get_global_var('func_10029')
call_10030 = func_10029_call()
output = call_10030
func_10031 = relay.Function([], output)
mutated_mod['func_10031'] = func_10031
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10038 = relay.var("var_10038", dtype = "float64", shape = (14, 11, 2))#candidate|10038|(14, 11, 2)|var|float64
uop_10039 = relay.erf(var_10038.astype('float64')) # shape=(14, 11, 2)
const_10049 = relay.const([[[4.454588,8.806138],[8.606037,-3.958151],[-6.640951,9.260861],[-5.530194,0.571882],[-1.595409,8.562700],[3.328330,3.409511],[6.464934,-0.495968],[6.867911,-7.787370],[-3.922929,4.106750],[-8.259270,0.881835],[-5.484329,-4.239618]],[[-6.192666,3.366911],[-4.065374,-5.887988],[-9.045786,5.634115],[-2.140102,-6.729158],[5.142841,-0.452384],[-2.589013,5.354073],[0.516440,4.849223],[-4.705789,-3.694788],[6.996467,4.940083],[-9.962762,3.583357],[4.648993,-1.681271]],[[-3.590794,1.372645],[-3.701844,8.757379],[-7.598487,4.551271],[-7.130985,6.041604],[-9.526660,9.760935],[-0.361111,-1.064575],[-8.243928,5.963925],[-8.336104,7.130288],[-0.374607,-4.759687],[-9.484147,1.343215],[1.670616,-8.225306]],[[2.036565,-9.188307],[6.524730,9.758054],[-3.855319,-6.108664],[0.447850,-8.479093],[-6.764254,-3.017618],[-5.672937,9.834635],[-8.904830,4.740705],[8.852056,7.792044],[-3.482538,-2.318541],[3.379651,9.107412],[1.812796,-7.983907]],[[0.349047,-2.996310],[-6.636322,-8.453886],[-4.067676,7.619250],[-6.050740,-5.454566],[-6.558787,-2.482694],[5.243320,-8.264522],[-1.723413,-1.737030],[-5.047998,-3.052520],[0.557295,4.023480],[6.804988,-9.169823],[6.876601,-7.524718]],[[7.669841,6.065421],[3.718379,-0.464629],[-5.257938,3.599876],[-6.786517,4.191411],[7.187879,-0.714814],[-3.301528,-6.449917],[1.493088,9.935577],[0.679128,-6.146607],[-0.941715,-5.548210],[4.413917,-8.660790],[-7.085604,-0.363299]],[[1.570070,5.982318],[0.212485,3.455860],[0.860892,1.433972],[6.716579,6.680117],[-3.529746,9.849220],[9.031346,-4.899803],[-5.421250,-0.126488],[2.442428,4.882095],[-5.372583,5.050068],[-6.926613,-7.912864],[-5.243210,-9.956683]],[[-8.217498,-9.336942],[1.390764,-7.117999],[-7.760470,7.869126],[8.055870,7.042917],[-1.705541,-7.616007],[4.651743,-7.842894],[-2.942153,6.510723],[-9.109201,-3.220864],[8.484023,0.501382],[-0.557592,0.648079],[8.609313,8.064193]],[[-0.895660,8.695761],[6.827005,-8.002498],[6.643520,-3.120396],[8.910411,-5.182354],[0.001459,-3.592828],[-5.064658,8.413029],[9.282853,7.386605],[7.000824,-5.222131],[9.539724,-7.197913],[9.739498,8.707231],[2.648993,-9.955670]],[[6.021207,-7.887371],[-8.484071,5.622323],[3.528799,7.304133],[5.331005,1.788180],[-4.181791,-2.247628],[0.734230,-2.724564],[3.092527,4.785374],[-7.299936,0.446032],[-5.240264,-6.765890],[4.865683,3.363427],[1.889093,3.579191]],[[8.856507,8.035949],[-4.185601,1.555394],[5.988228,-5.977445],[3.612861,4.888940],[-8.956655,6.922601],[3.359524,6.578439],[2.257277,5.160519],[3.484298,1.636385],[0.962850,-8.057314],[1.108513,4.032135],[-7.397079,7.273964]],[[7.002447,9.458121],[-3.478846,-5.595225],[-2.359434,-2.347457],[0.576751,-6.664653],[-7.709901,9.884030],[2.346547,-4.565725],[-2.646082,1.187816],[5.199433,-5.283749],[1.663754,-7.788505],[6.605914,0.321850],[-4.145505,7.768960]],[[8.311511,9.672170],[-9.535704,8.028066],[-3.620360,-4.533847],[7.977243,3.712929],[-3.475306,1.802204],[8.315628,9.092592],[0.788953,2.209858],[-3.588925,4.809465],[-2.773420,-2.605468],[4.138995,-8.155375],[4.452702,-1.458840]],[[-7.207459,8.382680],[-8.231399,0.824283],[7.571051,-5.449446],[9.242981,-6.078815],[-7.801686,-0.448129],[-2.286219,4.412200],[-0.986471,-6.442156],[-7.862547,3.549822],[-3.995955,-4.994509],[5.300365,9.922502],[-7.391872,6.439425]]], dtype = "float64")#candidate|10049|(14, 11, 2)|const|float64
bop_10050 = relay.logical_or(uop_10039.astype('bool'), relay.reshape(const_10049.astype('bool'), relay.shape_of(uop_10039))) # shape=(14, 11, 2)
func_5088_call = mod.get_global_var('func_5088')
func_5093_call = mutated_mod.get_global_var('func_5093')
const_10056 = relay.const([2,1,6,2,-3,-5,9,7,-7,-4,8,-9,-1,9,10,7,9,3,8,-1,4,-1,7,3,-5,-1,4,-10,-10,-6,2,10,9,-5,3,-9,2,-10,-10,-5,1,-9,-7,9,9,8,7,3,3,5,3,-3,-4,4,-7,8,-6,-10,-6,-10,4,-6,-6,-9,6,3,7,-6,8,-2,8,2,7,-7,-2,-7,5,-7,4,-9,1,-2,7,-9,8,1,-3,2,-4,-2,5,3,5,-10,8,-9,-1,-7,-1,-5,-8,-6,9,1,-6,2,-2,-3,4,6,-3,1,8,-2,4,9,-6,-3,5,-10,6,-4,4,-5,-3,2,-6,9,3,-4,-1,-9,1,3,7,-9,-5,1,-2,-10,7,-8,7,8,1,6,-8,10,-6,-5,6,6,-9,-1,-5,-4,4,-9,1,2,-1,7,-3,1,2,2,10,-1,9,9,-4,-8,7,3,5,2,-4,-9,8,6,-6,9,-10,-6,-4,-3,-8,-9,8,-2,9,-3,5,-10,2,4,-6,-3,-5,5,3,-8,-1,-7,10,6,-5,4,10,4,2,7,3,6,8,7,-1,4,3,1,-1,7,-5,-8,5,-5,2,-4,-4,4,4,-5,8,5,9,7,2,-5,-4,-1,7,-3,10,7,-10,5,-4,-8,-10,-4,-10,8,-6,8,10,-7,7,-7,1,-10,6,-6,-8,1,-9,8,7,-1,10,2,-1,6,-3,5,-10,-7,-4,5,9,-9,-4,-8,-2,-5,-10,-4,-8,-1,5,6,-2,-2,-8,-8,6,7,-6,-10,-6,5,-3,-9,9,-3,9,-2,2,9,2,9,7,-7,-1,-3,3,4,-7,7,4,-2,9,4,-7,-1,10,-6,-6,-2,-9,5,-5,8,-2,9,6,1,-5,-7,9,1,10,10,10,4,-9,1,-7,-9,3,7,7,-5,4,-5,9,-4,-3,6,6,-1,8,2,-3,4,-9,7,10,8,-3,-9,-9,3,9,5,7,2,-10,-1,-5,8,8,10,7,-6,-1,3,9,-1,-3,-4,2,8,-10,4,-5,-1,-8,-5,-9,5,5,9,6,-2,8,-1,-4,2,-9,-1,-1,-1,3,5,-4,-1,10,5,-4,5,5,-2,-7,4,3,2,8,-2,-9,3,7,4,-8,3,8,-1,6,-1,-8,-8,-10,4,4,-1,4,6,-1,-1,9,-8,2,9,3,-10,5,-3,-10,5,4,7,-1,9,7,-9,-4,5,-8,-5,-6,-5,2,-8,-6,6,-10,-8,-10,-2,-9,-3,-10,10,-3,-3,7,-2,6,1,4,4,2,4,2,-9,1,-1,-10,-10,-5,4,1,-3,5,-10,3,2,9,7,5,10,8,6,-4,5,-1,3,2,-8,-10,-7,-4,10,6,-5,-3,-5,-10,-3,9,-6,-4,2,-3,-6,-1,-7,1,-10,-5,7,4,3,5,8,1,-4,-1,2,7,10,-10,-2,-4,-7,9,-9,6,-7,-5,6,-9,2,9,5,-3,-3,-1,3,1,-6,-3,-3,6,-9,5,10,8,-5,7,2,-6,-2,-3,-4,-6,5,7,8,10,-8,-3,-10,-8,7,-6,7,7,10,-6,-4,-9,2,9,-1,7,3,-8,10,-7,-3,-7,6,10,4,2,-10,9,7,2,-6,-7,-1,-1,3,10,-10,4,3,-1,2,6,-4,-6,2,9,8,-8,-3,2,6,9,2,-1,-1,-1,6,5,-2,-9,10,4,-5,9,-9,1,-4,1,-8,-9,7,-10,-7,2,-7,-4,10,4,-8,3,-3,-5,7,-3,2,-1,-1,-1,9,8,4,-2,-9,8,-9,-9,5,9,3,8,3,-2,2,7,-7,-9,8,-3,-10,-8,-4,-3,-2,3,-6,9,-10,-8,-6,-6,-9,-2,-8,5,10,9,10,-4,-6,-8,-10,4,7,4,6,-6,7,-3,5,-3,1,8,3,6,1,-2,10,-10,-9,-2,-6,-9,8,-8,-9,-7,-4,-4,9,6,5,-8,5,3,2,-6,-8,3,-8,9,3,-8,3,4,5,1,-8,-4,-8,-5,-6,1,10,8,-5,3,-4,-7,-4,-10,-10,8,9,1,1,-8,-8,1,-2,-4,-7,-9,10,10,8,3,-9,6,-3,7,-4,2,-5,2,3,6,-4,5,-2,8,-2,-6,1,3,10,9,5,7,-6,9,4,-1,2,-2,10,-2,2,5,3,-9,-8,-8,2,6,4,-7,-3,-7,-6,-7,1,-9,9,-6,4,5,6,8,9,-7,-9,1,5,-7,7,7,5,-10,-10,9,4,7,-7,9,8,1,2,-9,10,-8,-10,-6,9,-1,4,4,-4,-9,5,-1,4,10,3,-3,-7,-1,-5,4,-3,-4,5,-5,10,-3,2,10,5,-3,1,-1,-8,5,-9,9,6,-9,3,3,7,-10,2,-8,10,-5,-7,9,-1,9,5,-2,-3,-3,6,-10,2,4,10,10,3,-8,4,-8,-2,-4,6,10,-10,6,9,-1,-5,-4,8,2,-9,-2,10,9,8,10,1,1,-3,7,2,2,2,-4,-9,-2,1,-3,-5,-2,8,-4,2,-10,4,-6,3,6,3,6,8,-2,1,9,-10,8,3,-6,-9,1,-2,-8,6,-2,5,10,-5,4,10,3,-4,-7,-3,5,1,-3,-4,10,6,8,-2,-5,-1,-5,2,-2,-9,3,-3,-1,-4,-7,-5,8,-1,-3,5,1,8,-8,4,-7,8,-4,-10,-5,-7,-3,-1,6,-9,6,8,9,-3,-6,-6,1,-5,-5,8,-7,4,1,-5,7,5,-8,-1,1,-6,1,10,-4,-5,-9,-8,-1,-8,-8,-7,-9,-10,-7,5,-5,5,-3,-7,1,7,-6,6,-9,-10,-9,4,1,-4,5,8,-10,-5,1,1,6,2,5,9,-4,1,-8,-3,8,-9,9,-2,-4,4,-1,-7,-5,8,9,-3,6,8,8,-3,3,9,3,2,10,-3,5,5,1,9,1,-4,-6,3,6,-10,9,-10,3,-2,-10,-4,-6,-4,-2,-10,-2,2,-7,-2,2,-1,-1,5,-2,5,-3,6,9,8,-10,-6,1,2,4,2,-4,-9,3,-9,3,7,-4,-3,5,-4,-10,-9,8,-2,5,-10,-6,-4,-3,3,6,9,-7,2,-8,6,5,-10,7,9,5,-3,-8,-9,9,-8,4,-6,4,10,4,-9,-1,4,-10,-2,-2,-7,1,3,7,-8,1,-1,-1,4,-9,4,1,-10,3,-7,8,-9,-7,10,6,-7,3,9,-1,1,5,9,-5,6,-4,7,6,-10,10,8,-1,2,-3,8,-5,3,4,7,-3,-1,7,-9,-4,5,1,10,6,-6,5,2,-2,-2,-7,10,-4,-6,-9,-4,-4,-6,2,-8,10,-9,7,4,8,-10,7,-6,-10,-1,-7,-9,8,5,3,-10,7,-5,5,-6,7,10,5,-4,8,2,-2,4,8,10,3,4,1,4,1,9,-5,10,2,-5,-9,6,7,3,-1,7,-3,6,10,-10,-10,-9,-5,-7,2,9,-8,-7,5,2,-3,10,2,1,-5,-5,7,2,-2,1,8,9,3,10,-4,-3,-1,-4,-10,5,6,-10,3,-7,8,10,7,1,3,-9,-6,-5,-9,2,-4,3,-8,-4,-7,-5,-8,3,4,9,-7,-6,5,2,10,1,2,3,9,10,-8,-2,-3,4,-1,7,-3,3,-4,-10,-10,10,7,3,-9,-5,-9,3], dtype = "int8")#candidate|10056|(1404,)|const|int8
var_10057 = relay.var("var_10057", dtype = "float32", shape = (384,))#candidate|10057|(384,)|var|float32
const_10058 = relay.const([-1.201146,6.663737,-6.072333,-7.793162,8.594959,-0.739143,6.451101,-7.871339,0.601483,-8.966242,0.169538,-2.480192,0.110498,6.433565,-5.078478,0.346255,6.576746,-3.075468,6.143101,1.103279,1.776900,0.057733,-0.915653,1.276174,3.463382,1.548728,-5.478055,-6.343162,-9.452324,-8.109479,8.683653,3.187284,6.085534,-2.867418,6.200839,3.630912,-7.427315,0.777979,-3.931666,-5.197672,-1.700056,9.260036,-5.799955,-3.036567,5.414734,1.529521,2.517304,2.416172,2.696054,1.691320,3.801507,6.365060,-2.937255,-3.240261,-8.426131,-0.476363,-6.527474,6.662172,7.676820,-2.192273,-6.285457,0.094132,-7.700449,-8.728600,-2.169078,-0.711782,-0.501016,5.771225,-4.730613,-9.334778,2.250556,0.769237,-4.321182,-3.264743,7.127470,-8.432488,-4.703949,6.822809,-6.857031,-5.445700,8.982318,-8.715324,6.565521,-6.319212,8.934282,-9.720611,0.161927,8.373691,-6.305285,0.003122,-0.865337,8.521692,8.822868,5.820428,0.101069,9.395819,2.264045,-2.094069,0.266057,-3.968306,9.513827,2.802408,1.301168,-0.895568,-1.918364,9.205660,7.766895,-8.592187,5.914834,-7.822815,4.021237,7.319999], dtype = "float32")#candidate|10058|(112,)|const|float32
const_10059 = relay.const([4.333666,-3.080372,-1.311932,0.786476,-5.017476,1.907313,-0.428544,8.744839,-5.500693,-8.736887,3.040376,-5.285643,-4.347578,9.630990,8.826118,0.989861,6.729453,-3.745080,2.591244,3.336600,7.636545,6.846423,8.304323,-0.362308,-3.333105,6.438321,7.050942,-6.959236,6.585080,-6.762494], dtype = "float64")#candidate|10059|(30,)|const|float64
call_10055 = relay.TupleGetItem(func_5088_call(relay.reshape(const_10056.astype('int8'), [18, 78]), relay.reshape(var_10057.astype('float32'), [384,]), relay.reshape(const_10058.astype('float32'), [112,]), relay.reshape(const_10059.astype('float64'), [30,]), ), 8)
call_10060 = relay.TupleGetItem(func_5093_call(relay.reshape(const_10056.astype('int8'), [18, 78]), relay.reshape(var_10057.astype('float32'), [384,]), relay.reshape(const_10058.astype('float32'), [112,]), relay.reshape(const_10059.astype('float64'), [30,]), ), 8)
output = relay.Tuple([bop_10050,call_10055,const_10056,var_10057,const_10058,const_10059,])
output2 = relay.Tuple([bop_10050,call_10060,const_10056,var_10057,const_10058,const_10059,])
func_10062 = relay.Function([var_10038,var_10057,], output)
mod['func_10062'] = func_10062
mod = relay.transform.InferType()(mod)
mutated_mod['func_10062'] = func_10062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10062_call = mutated_mod.get_global_var('func_10062')
var_10064 = relay.var("var_10064", dtype = "float64", shape = (14, 11, 2))#candidate|10064|(14, 11, 2)|var|float64
var_10065 = relay.var("var_10065", dtype = "float32", shape = (384,))#candidate|10065|(384,)|var|float32
call_10063 = func_10062_call(var_10064,var_10065,)
output = call_10063
func_10066 = relay.Function([var_10064,var_10065,], output)
mutated_mod['func_10066'] = func_10066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7621_call = mod.get_global_var('func_7621')
func_7623_call = mutated_mod.get_global_var('func_7623')
call_10090 = relay.TupleGetItem(func_7621_call(), 1)
call_10091 = relay.TupleGetItem(func_7623_call(), 1)
var_10097 = relay.var("var_10097", dtype = "float64", shape = (5, 135))#candidate|10097|(5, 135)|var|float64
bop_10098 = relay.divide(call_10090.astype('float64'), relay.reshape(var_10097.astype('float64'), relay.shape_of(call_10090))) # shape=(5, 135)
bop_10101 = relay.divide(call_10091.astype('float64'), relay.reshape(var_10097.astype('float64'), relay.shape_of(call_10091))) # shape=(5, 135)
output = relay.Tuple([bop_10098,])
output2 = relay.Tuple([bop_10101,])
func_10106 = relay.Function([var_10097,], output)
mod['func_10106'] = func_10106
mod = relay.transform.InferType()(mod)
var_10107 = relay.var("var_10107", dtype = "float64", shape = (5, 135))#candidate|10107|(5, 135)|var|float64
output = func_10106(var_10107)
func_10108 = relay.Function([var_10107], output)
mutated_mod['func_10108'] = func_10108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7552_call = mod.get_global_var('func_7552')
func_7554_call = mutated_mod.get_global_var('func_7554')
call_10110 = relay.TupleGetItem(func_7552_call(), 0)
call_10111 = relay.TupleGetItem(func_7554_call(), 0)
output = relay.Tuple([call_10110,])
output2 = relay.Tuple([call_10111,])
func_10112 = relay.Function([], output)
mod['func_10112'] = func_10112
mod = relay.transform.InferType()(mod)
mutated_mod['func_10112'] = func_10112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10112_call = mutated_mod.get_global_var('func_10112')
call_10113 = func_10112_call()
output = call_10113
func_10114 = relay.Function([], output)
mutated_mod['func_10114'] = func_10114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7816_call = mod.get_global_var('func_7816')
func_7818_call = mutated_mod.get_global_var('func_7818')
call_10145 = func_7816_call()
call_10146 = func_7816_call()
uop_10159 = relay.atan(call_10145.astype('float32')) # shape=(12, 11, 12)
uop_10161 = relay.atan(call_10146.astype('float32')) # shape=(12, 11, 12)
output = uop_10159
output2 = uop_10161
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

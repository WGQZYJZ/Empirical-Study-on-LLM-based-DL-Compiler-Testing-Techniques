import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_359 = relay.var("var_359", dtype = "float64", shape = (6, 8, 1))#candidate|359|(6, 8, 1)|var|float64
const_360 = relay.const([[[5.444131,1.819600,-5.836294,8.582307],[6.660717,1.139614,-6.736846,7.128081],[-3.556441,4.420686,-8.041948,5.113184],[-5.938694,-8.859269,-7.836645,8.620585],[-7.539639,9.756392,-4.409014,-9.345722],[-6.514409,7.933984,0.690995,-4.783833],[2.113422,-1.215921,-3.857546,0.260598],[1.715003,8.501501,2.428200,-6.481343]],[[5.605561,-3.370229,-0.447148,6.666444],[-4.273041,-4.898220,-5.139297,-7.827299],[-9.303313,1.832719,-4.356722,3.592545],[4.448003,2.114411,8.431080,-7.477612],[-1.964627,4.782533,1.786647,8.829513],[2.756673,-4.612672,-7.899983,9.550668],[0.310442,5.512350,3.724104,-9.103344],[4.030531,-7.578032,3.600013,2.756689]],[[6.286383,-9.181223,-7.115281,7.951012],[9.586809,8.248002,-5.941294,5.228959],[9.987051,9.085501,8.420304,9.416794],[6.704934,-0.303622,7.970661,-4.222464],[-5.874104,6.010362,-2.400378,-7.223058],[-8.226101,-6.742034,6.510082,1.614802],[-7.858032,4.600043,-4.252190,7.639429],[-0.908549,-8.092828,9.238196,6.349452]],[[8.098529,-4.129833,8.074721,-6.620067],[-3.835421,-6.335229,-5.272957,8.448112],[-3.903336,-8.400028,7.217666,-8.303997],[7.579938,0.805822,-0.963811,-0.974790],[-1.094622,8.765229,-8.669549,9.202263],[-3.755635,-5.579224,0.702177,-5.960961],[-8.931312,-7.395106,-2.091802,-4.412264],[4.457012,-3.485651,-3.077070,-7.181618]],[[-8.472751,-6.856052,9.457492,8.165985],[2.509097,-5.921006,9.338261,-2.519245],[3.463611,-1.535177,9.100467,-3.877135],[-7.338458,-1.908860,4.079394,9.353206],[4.822850,-9.627517,-2.533348,-1.078515],[4.294601,-1.879453,8.206496,1.055436],[-7.091359,-0.365942,-9.229995,-2.449347],[-4.109297,2.375731,6.374141,9.488638]],[[-9.251591,0.129365,6.442280,-0.538061],[-7.059646,-5.017440,2.802166,5.621766],[2.675299,5.840392,-1.087333,-8.252192],[1.134200,-3.450781,3.837330,1.396581],[-0.557677,-9.075833,-9.399723,-2.184179],[2.902539,5.425130,-3.542246,-5.691359],[-7.928084,9.246720,-5.123196,0.360251],[8.302026,-3.130307,6.075228,-1.628861]]], dtype = "float64")#candidate|360|(6, 8, 4)|const|float64
bop_361 = relay.less(var_359.astype('bool'), const_360.astype('bool')) # shape=(6, 8, 4)
output = bop_361
output2 = bop_361
func_389 = relay.Function([var_359,], output)
mod['func_389'] = func_389
mod = relay.transform.InferType()(mod)
var_390 = relay.var("var_390", dtype = "float64", shape = (6, 8, 1))#candidate|390|(6, 8, 1)|var|float64
output = func_389(var_390)
func_391 = relay.Function([var_390], output)
mutated_mod['func_391'] = func_391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_472 = relay.var("var_472", dtype = "float64", shape = (3, 7, 15))#candidate|472|(3, 7, 15)|var|float64
uop_473 = relay.sigmoid(var_472.astype('float64')) # shape=(3, 7, 15)
uop_487 = relay.cosh(uop_473.astype('float64')) # shape=(3, 7, 15)
func_389_call = mod.get_global_var('func_389')
func_391_call = mutated_mod.get_global_var('func_391')
var_491 = relay.var("var_491", dtype = "float64", shape = (48,))#candidate|491|(48,)|var|float64
call_490 = func_389_call(relay.reshape(var_491.astype('float64'), [6, 8, 1]))
call_492 = func_389_call(relay.reshape(var_491.astype('float64'), [6, 8, 1]))
output = relay.Tuple([uop_487,call_490,var_491,])
output2 = relay.Tuple([uop_487,call_492,var_491,])
func_493 = relay.Function([var_472,var_491,], output)
mod['func_493'] = func_493
mod = relay.transform.InferType()(mod)
var_494 = relay.var("var_494", dtype = "float64", shape = (3, 7, 15))#candidate|494|(3, 7, 15)|var|float64
var_495 = relay.var("var_495", dtype = "float64", shape = (48,))#candidate|495|(48,)|var|float64
output = func_493(var_494,var_495,)
func_496 = relay.Function([var_494,var_495,], output)
mutated_mod['func_496'] = func_496
mutated_mod = relay.transform.InferType()(mutated_mod)
var_520 = relay.var("var_520", dtype = "float64", shape = (3, 16, 16))#candidate|520|(3, 16, 16)|var|float64
const_521 = relay.const([[[-2.274637,-3.770286,3.744871,-9.766250,-3.404301,0.765247,-2.611440,3.436384,-5.328194,-9.384642,-3.990891,3.753387,-3.079229,-1.011297,-0.535573,0.729105],[2.591772,-9.496319,-6.313523,-1.665389,6.754932,-2.035364,-6.295676,-0.246190,-7.699443,8.773982,-6.323516,-4.460455,-2.995478,2.268556,-0.315529,4.497903],[3.201945,-0.235353,9.827136,-6.496210,-4.082467,-3.144315,-7.766489,6.795620,3.320275,1.076469,2.270889,-4.499132,-2.992351,-0.289819,-2.473459,-4.372695],[-8.622591,3.643670,1.587755,-0.899116,-5.089642,6.874403,1.418638,-6.986791,3.875170,-9.077461,4.717653,1.346231,-7.759754,-0.868837,5.716998,-3.797109],[-1.653804,0.968776,-7.388475,1.621915,-5.932905,2.634168,-7.387614,-2.694628,-5.633919,-6.874213,-5.712969,5.334457,-6.776569,1.384014,9.719357,2.224753],[-5.996827,4.388874,-6.724060,1.753693,4.998693,-3.678895,-6.135047,-7.078766,2.849135,-1.206767,-9.211606,-2.950328,-7.656304,-0.384459,-0.185753,6.475505],[0.920339,1.451436,2.716504,-3.004153,0.243017,-7.282836,-5.692971,-3.092733,-0.168016,8.991062,9.309411,1.725968,1.076160,4.080080,8.797505,-9.262721],[3.032277,-2.139383,8.398051,-7.148240,1.371056,-8.554435,7.460698,0.343152,-3.078086,-5.673907,-2.012702,0.103499,5.862098,5.706958,7.033639,6.693245],[5.433115,1.303639,8.009351,-4.452677,4.111259,-7.196322,2.137058,-4.983700,-6.549598,7.831258,-8.192841,-7.839118,3.033941,-0.547228,-8.989806,-3.050616],[6.908211,-9.038107,7.457484,8.589721,0.436828,7.169668,5.283159,-7.849452,-1.436602,-8.345996,-9.358952,-3.214197,7.490727,-6.570580,2.953228,9.065643],[8.083509,9.741110,-0.801055,4.022998,-6.531060,7.402114,-9.770501,0.472080,1.303104,5.519342,-4.111357,-5.291927,-6.780051,5.792990,7.856701,-3.270268],[-8.468925,6.680527,-3.384457,4.801527,7.187279,-8.839864,-4.888376,-8.558174,5.150441,-1.236634,1.937510,4.704541,0.453286,4.812887,-5.422692,8.357775],[9.042733,9.181419,2.153760,-8.289880,4.409702,-1.379053,-2.131582,-4.750657,-8.871308,-2.107452,6.373852,6.608164,-1.771648,5.015132,-2.669197,-1.484952],[9.116605,2.533613,-4.710738,1.217135,-8.460721,2.209665,-5.579404,0.935896,-8.995973,-4.141936,4.321119,0.328756,3.602368,-8.112308,5.669157,9.311140],[2.989174,-5.266514,5.466282,2.684843,8.938285,-5.298511,-1.171917,9.222493,3.111857,-5.781672,1.804472,8.585960,-1.507383,4.998818,-2.016925,-0.426708],[3.430802,7.016336,-6.539250,7.307908,7.787204,7.651839,9.187695,0.961186,2.377905,7.514948,4.613057,3.590725,2.538550,0.859369,6.077764,9.654231]],[[-4.445644,4.377744,0.627922,8.551448,5.130516,4.935380,5.477047,3.848504,-8.640932,1.417804,5.325537,-5.428152,2.848557,-6.691789,7.586799,-6.719646],[-9.156099,2.137156,-4.381054,7.342110,4.025218,-1.288017,9.319960,5.435168,-9.990797,6.045345,7.959535,-3.189030,8.702916,-4.827967,-8.997185,4.479335],[-2.430981,4.550379,3.005894,-4.963245,4.977723,0.399290,1.516231,-7.351586,6.398889,2.331211,6.034435,-0.854145,0.875752,-0.506724,7.385017,-6.884975],[-1.584182,-2.870209,-4.295451,-0.698843,9.288776,-3.956106,1.619679,-0.769570,-0.243600,0.689193,-2.613901,7.190462,-4.442785,2.095858,1.286486,-0.458213],[3.139630,2.806282,9.896391,6.731596,5.069345,8.916701,5.174702,7.054767,-2.175989,6.642864,-3.811334,-5.844461,-2.777506,-9.881833,2.039047,0.656231],[3.269713,6.380029,4.155409,4.027877,-2.596911,1.401645,1.025691,-0.460019,2.095152,-8.345828,-6.742254,1.519108,-8.720545,-2.423448,-3.726395,1.504016],[-4.630543,-0.703132,3.330019,-4.923982,3.593319,3.369872,-0.017887,-6.565016,-9.537532,-9.859244,2.998875,3.066547,3.608350,6.426537,-6.565367,-2.141990],[0.852461,-7.976231,-8.450054,1.865882,-9.047880,-9.032845,-7.217827,-3.215133,8.148071,7.891859,-2.483106,9.352528,-5.002855,5.300246,5.894988,0.122657],[6.936894,6.568074,-2.553143,5.685113,-9.073536,7.537604,-1.171139,2.021461,-5.213168,-5.429300,1.239654,4.485815,-5.525330,-9.761950,-2.090541,7.137031],[9.180560,0.701778,3.219359,-0.974986,8.719996,-5.795699,-7.623088,7.447290,-4.183297,6.559158,8.476925,5.784943,-7.630114,9.533819,6.000969,-9.130127],[-5.695492,-1.077915,-5.266817,6.331719,-9.663249,8.140450,3.866942,-4.271120,-7.651414,8.042948,-8.276105,0.649025,9.981434,2.305845,6.438070,6.347505],[1.037270,9.463762,6.059215,3.878792,-3.653052,-5.667247,-8.694249,8.074307,-5.254948,-6.129035,3.726851,5.337193,3.849868,3.613616,-5.083709,-2.457809],[-6.103188,6.414272,-9.909296,-8.930354,5.297469,-5.779277,6.527357,-0.547935,-3.959918,-1.769635,2.498904,-4.676452,-6.728194,8.471972,3.580464,-6.552312],[-1.641808,3.133935,2.259097,6.693213,-5.292136,-5.809385,-7.631797,9.116398,5.213099,-0.983590,-6.947265,2.196015,1.671556,9.858667,-5.799807,-6.774403],[-7.386775,3.209914,0.955152,-1.627711,-9.736642,6.012528,-1.689319,-4.234149,-7.980603,-7.196180,9.561655,2.421509,-5.797325,6.731493,8.426913,1.753430],[1.336491,3.650518,-4.086070,-7.473054,-2.174357,7.641489,3.262983,-1.131607,-5.789147,-5.081047,1.734693,-9.898989,-5.533791,-2.860643,-9.178584,2.054290]],[[8.235356,-3.425083,9.148779,-0.320553,6.975504,-9.841713,6.426099,-1.644628,3.790997,-9.444542,5.458198,-3.534296,-5.871701,8.634397,0.095857,6.485487],[4.413993,-4.435571,-5.379013,-6.272924,-9.023611,-4.729657,2.616094,0.867080,6.522501,5.958326,7.188874,3.786512,2.370204,-7.652216,3.877119,2.392976],[1.606300,8.547507,-8.302974,8.831099,-5.769826,1.252321,5.184506,-3.259763,-8.195296,9.207252,-7.521007,0.540545,3.973540,-5.110894,3.595513,3.366790],[7.100835,6.830267,-7.336802,-3.270471,-3.192992,-1.504835,-5.616485,7.172042,2.652088,-9.258860,0.532167,7.122614,8.147709,3.518961,2.141105,-3.470331],[-6.261374,-8.709504,-1.594640,0.714545,-4.952107,-6.460058,6.730213,6.709852,-1.531840,-1.767896,-3.599575,-3.398364,6.806189,-9.635893,-0.401517,5.241920],[-2.105336,8.038510,-5.092372,-5.328241,7.730082,5.374210,-1.929816,0.413374,0.906008,-0.327506,5.159903,8.535660,-3.607421,3.530128,-4.428236,3.274513],[-5.006162,-0.488407,-7.038196,-8.176671,0.172560,-6.360884,-4.893082,0.394321,7.710775,0.856095,-5.837256,4.627201,4.114461,-3.625927,4.180857,-8.611446],[-3.853583,-8.276556,3.501507,-3.301764,-7.602291,-3.383218,-4.037250,-4.666852,8.842348,-8.200776,8.732194,0.617977,-9.417641,-4.358243,8.059822,-4.483380],[4.925166,-3.645602,6.270633,-6.118191,3.413466,-6.604726,-5.045087,3.012590,2.443400,6.324186,8.992625,3.682279,-5.957355,3.979389,-5.900778,-2.801724],[-2.546846,6.658209,2.168918,-7.979175,-8.288914,4.483286,4.824304,2.023575,-9.521088,3.814236,3.381864,-3.319294,7.628155,7.357455,8.404936,3.122219],[9.508751,0.181253,-8.665798,4.867091,-1.064519,4.421511,-0.503048,-5.487633,-4.608057,-4.475198,-8.449530,5.561987,0.179906,-3.873547,-4.923739,-1.440391],[-5.131626,8.593255,4.090490,9.171277,9.169102,-4.336423,4.421798,-8.005539,-5.184255,9.848065,7.184039,-0.190333,-6.974137,0.525774,1.134632,-2.726277],[3.805493,-5.028358,-8.764608,9.216239,8.358360,4.918169,-7.453915,-7.580742,1.052826,-8.691565,-6.245708,4.064782,0.470017,-3.902995,-0.822675,-9.023440],[-2.953978,1.094668,-7.647193,-9.272818,-2.209535,1.487462,7.649911,4.630789,0.758414,-5.081196,1.447713,-6.893483,-4.022999,9.924685,2.789822,7.961051],[-1.810228,6.375538,0.511211,-6.866127,1.897962,-5.751636,0.783510,4.738655,7.963807,2.425534,0.860982,5.741218,-7.763576,4.924314,-8.098128,4.805213],[5.021303,-5.109640,-6.323980,-3.295684,-5.485952,-6.831465,-3.684574,-0.062971,1.461990,-6.868352,-4.345133,1.341698,-9.108063,-7.263339,8.167212,-1.228132]]], dtype = "float64")#candidate|521|(3, 16, 16)|const|float64
bop_522 = relay.power(var_520.astype('float64'), relay.reshape(const_521.astype('float64'), relay.shape_of(var_520))) # shape=(3, 16, 16)
output = relay.Tuple([bop_522,])
output2 = relay.Tuple([bop_522,])
func_528 = relay.Function([var_520,], output)
mod['func_528'] = func_528
mod = relay.transform.InferType()(mod)
var_529 = relay.var("var_529", dtype = "float64", shape = (3, 16, 16))#candidate|529|(3, 16, 16)|var|float64
output = func_528(var_529)
func_530 = relay.Function([var_529], output)
mutated_mod['func_530'] = func_530
mutated_mod = relay.transform.InferType()(mutated_mod)
var_542 = relay.var("var_542", dtype = "float32", shape = (14, 8, 5))#candidate|542|(14, 8, 5)|var|float32
var_543 = relay.var("var_543", dtype = "float32", shape = (14, 8, 5))#candidate|543|(14, 8, 5)|var|float32
bop_544 = relay.floor_divide(var_542.astype('float32'), relay.reshape(var_543.astype('float32'), relay.shape_of(var_542))) # shape=(14, 8, 5)
func_493_call = mod.get_global_var('func_493')
func_496_call = mutated_mod.get_global_var('func_496')
const_562 = relay.const([8.524794,-0.089167,0.681925,-8.282060,9.167033,1.794996,3.050144,5.455821,8.677565,1.599794,6.024847,-9.600076,5.883191,-2.712343,6.859308,6.336102,-6.183135,-0.111808,-8.195905,-6.031761,-6.862375,-6.037605,-0.448417,0.717304,-1.223526,5.048515,-6.674096,-5.638986,-0.927124,6.363117,0.078027,-7.118646,-7.478698,2.788580,6.655782,-5.291914,-0.534156,-5.647350,1.195264,-2.018174,-0.267974,6.585548,2.028339,3.515404,-8.297192,4.156621,8.408789,5.382574,5.458398,-1.822004,4.076270,-7.522148,2.177739,-6.333003,-4.333001,-7.254580,-0.425857,-0.381973,3.991331,-3.657105,-0.237776,-9.931270,4.100866,3.607104,-5.770503,-2.541317,-9.777502,9.522926,2.818927,-8.053231,-3.867751,-3.281819,4.658451,-2.667942,-6.856077,-1.873621,5.545294,9.287594,7.716712,3.911518,-8.133129,7.119274,-9.886548,4.525893,-2.681317,-6.649856,-2.669034,-6.160885,3.622704,7.805701,2.969194,-0.436425,-8.995156,5.408673,-2.531583,9.802550,-6.584241,9.045824,-6.848898,-7.564636,4.854530,7.725550,-6.887451,8.264246,8.836242,0.685803,-8.408217,1.125725,8.443968,-1.081475,7.175245,5.288197,-5.605002,-5.045682,9.607265,-1.681629,8.250107,-6.767219,8.828632,5.184017,-5.268870,6.034543,-2.141353,9.493745,7.822751,8.114576,-4.318573,3.806148,-0.645393,4.686852,-6.453422,-0.133605,5.688800,8.277208,-1.950229,1.013832,-3.963645,0.577076,4.145761,-0.633176,5.133771,8.692570,-0.153974,-7.527839,5.396175,-6.149667,3.104922,9.691333,-4.583398,8.156206,-7.343328,4.147575,4.865783,6.998569,-3.832473,-2.600659,-2.697303,4.370390,-7.069990,2.580586,0.898747,0.858717,-5.861767,6.471977,-5.243704,6.821313,-4.223590,6.155559,0.269982,-0.530996,-6.218443,8.819072,5.618115,-3.802002,5.622892,9.205010,1.607896,9.599983,0.428219,-3.133425,-4.993788,-0.551831,8.058611,-1.907232,1.683798,-9.810034,2.376768,-4.472879,-6.574637,-2.054354,-8.681329,-4.505728,0.258571,3.883500,-2.736986,-7.665056,6.094962,1.196721,-1.800770,5.045801,4.834351,2.307045,-0.878342,7.838619,-6.168081,-9.853784,1.217344,8.049346,-2.852098,3.941575,-5.259737,4.360790,5.946768,-7.350513,6.892799,0.423267,0.480618,0.556609,-8.812203,-8.081408,2.285499,7.159175,7.276340,5.796047,3.842954,6.453081,-7.731979,4.324516,5.937745,8.643122,5.263266,5.572869,2.964156,-1.479128,1.059334,2.755830,5.724096,4.583066,6.250215,1.029497,-5.856714,-7.702154,8.070740,-9.210654,-2.008290,4.343004,-7.611805,-9.045372,-2.438746,5.405092,-8.870255,-8.161478,6.646778,-6.836476,-5.952758,5.423509,-5.924463,1.569327,5.861028,3.973789,1.762979,7.371655,5.851450,1.502295,1.416624,-6.305622,8.308952,0.538182,-0.655434,9.368285,4.280763,2.618743,3.797628,-2.499808,-3.389807,-9.598002,-3.130837,2.906160,9.445043,8.230979,3.684828,-9.307947,-4.970716,6.618727,-0.730051,7.937397,4.068498,9.540709,6.116236,1.834572,0.466681,7.615988,-2.544647,-4.146442,-4.387404,-7.807457,5.206932,-9.214370,-9.072803,-5.987142,7.959840,1.108382,9.610669,1.793619,-6.147562,-4.608390,-6.190601,7.118776,4.613256,-1.226323,-0.087600,9.083048,-8.820253,8.420838,-7.030613], dtype = "float64")#candidate|562|(315,)|const|float64
const_563 = relay.const([-5.156936,3.888465,-8.930713,8.282385,-6.251457,8.750120,-4.320367,3.834360,-9.859116,2.684050,6.673276,9.642618,-6.617034,-5.796292,5.226149,-1.188655,-8.687102,3.269664,0.773982,-7.001480,-1.645629,-0.704576,-3.650305,-2.896241,7.774214,-3.386240,5.912716,3.414517,4.226075,7.850383,-5.458868,5.206490,0.890948,-8.443775,3.511440,-9.314643,-0.128229,-4.486420,-9.684253,6.168864,-1.959518,-1.296034,5.009051,2.361620,-7.949846,-3.919555,0.557220,6.397984], dtype = "float64")#candidate|563|(48,)|const|float64
call_561 = relay.TupleGetItem(func_493_call(relay.reshape(const_562.astype('float64'), [3, 7, 15]), relay.reshape(const_563.astype('float64'), [48,]), ), 2)
call_564 = relay.TupleGetItem(func_496_call(relay.reshape(const_562.astype('float64'), [3, 7, 15]), relay.reshape(const_563.astype('float64'), [48,]), ), 2)
bop_569 = relay.less_equal(var_542.astype('bool'), relay.reshape(bop_544.astype('bool'), relay.shape_of(var_542))) # shape=(14, 8, 5)
func_389_call = mod.get_global_var('func_389')
func_391_call = mutated_mod.get_global_var('func_391')
call_572 = func_389_call(relay.reshape(call_561.astype('float64'), [6, 8, 1]))
call_573 = func_389_call(relay.reshape(call_561.astype('float64'), [6, 8, 1]))
uop_574 = relay.sigmoid(call_572.astype('float32')) # shape=(6, 8, 4)
uop_576 = relay.sigmoid(call_573.astype('float32')) # shape=(6, 8, 4)
bop_582 = relay.logical_xor(call_572.astype('uint8'), relay.reshape(uop_574.astype('uint8'), relay.shape_of(call_572))) # shape=(6, 8, 4)
bop_585 = relay.logical_xor(call_573.astype('uint8'), relay.reshape(uop_576.astype('uint8'), relay.shape_of(call_573))) # shape=(6, 8, 4)
uop_600 = relay.sin(uop_574.astype('float32')) # shape=(6, 8, 4)
uop_602 = relay.sin(uop_576.astype('float32')) # shape=(6, 8, 4)
func_493_call = mod.get_global_var('func_493')
func_496_call = mutated_mod.get_global_var('func_496')
call_612 = relay.TupleGetItem(func_493_call(relay.reshape(const_562.astype('float64'), [3, 7, 15]), relay.reshape(call_561.astype('float64'), [48,]), ), 0)
call_613 = relay.TupleGetItem(func_496_call(relay.reshape(const_562.astype('float64'), [3, 7, 15]), relay.reshape(call_561.astype('float64'), [48,]), ), 0)
func_528_call = mod.get_global_var('func_528')
func_530_call = mutated_mod.get_global_var('func_530')
const_617 = relay.const([-1.225313,-3.289959,-4.045941,-0.827400,-3.604613,0.086042,-3.715246,-0.758604,4.109893,8.922644,-0.755209,7.984081,-6.156980,1.251336,-6.051009,3.062922,-2.654840,-3.200575,3.468440,-5.196551,-0.067762,-7.805140,2.145829,4.444370,-6.309659,6.268222,5.953699,-3.567346,-8.457958,6.006696,6.367006,8.562033,-1.272075,-1.110260,-0.499809,6.918087,-5.383337,6.714071,-1.756787,-1.073772,-2.972181,-7.914460,-0.269610,2.978522,-7.289338,2.990474,8.276125,6.024731,-2.602080,-3.534926,-0.433555,-5.005918,9.312461,-0.935303,-6.427380,5.960339,-2.239192,-1.765576,-5.058525,5.285030,-9.362819,-8.123313,7.143504,5.206489,5.580998,-8.670350,-8.802114,-0.550731,0.444562,4.602903,8.360510,-6.067449,-0.694585,-7.658679,-5.015085,7.279442,0.178798,-4.948524,-9.286705,-4.055892,8.569728,9.587188,2.047585,-2.019342,4.817013,7.496931,-5.803272,-8.161344,-3.320558,1.544103,0.107805,-3.121456,7.160333,7.023081,-2.452336,1.554203,1.072137,4.468761,2.962325,5.777538,-5.303119,8.918302,-7.016004,4.107993,6.799741,5.619724,-4.066603,2.830715,-4.567415,9.420866,-9.874417,9.036895,6.759874,2.554540,-1.400812,9.509765,8.420279,6.480682,3.851393,-2.003946,5.483152,5.629503,8.853502,4.724810,4.063780,4.189884,-5.709882,3.493497,1.465619,-8.611035,6.778212,-3.559058,-3.147217,-0.820286,9.590353,-3.050048,-8.488667,-6.575945,-5.269396,-7.546436,-9.877349,-7.903366,-0.639261,-5.950762,-0.796378,1.764802,0.509920,-3.118330,8.684793,1.974221,7.432292,4.036251,4.889688,-3.931806,-0.607654,5.015333,-4.965032,2.643290,-9.668309,-9.403062,-8.143385,-4.767478,-2.432833,6.613668,-0.776627,-1.175896,1.044856,7.529171,8.804084,-1.075316,-8.563642,-7.372609,2.357922,0.020949,3.145882,-2.185626,8.870149,6.986465,7.395118,2.707597,5.486134,-5.243200,-1.571965,7.110501,2.580928,4.154243,-5.685146,-7.141810,0.226401,6.686035,8.862292,-5.396587,-0.233944,-5.828393,-8.715325,5.003607,8.198768,-1.506682,-0.133709,4.602828,-1.671356,9.623198,-8.255557,-5.529372,-0.904736,0.165715,-4.995658,-6.245249,1.613431,-8.105332,4.525389,-7.692399,8.332106,-0.938299,-4.205457,6.495049,-9.094373,9.718777,-0.505620,-4.289416,6.370806,8.810520,6.763708,8.284305,-6.399281,-0.351324,8.665490,4.968563,-5.446549,-8.796803,0.847734,1.015311,1.028820,5.239552,-4.032152,-5.486596,3.695381,5.998771,5.276643,9.982290,2.302131,8.549038,-6.997260,0.071866,-5.846234,-6.883743,-7.645726,2.012722,-2.288379,4.950750,-7.475113,8.511722,9.423424,-9.361583,6.842106,4.016719,-6.757185,0.175196,6.826464,0.889368,3.289739,2.844325,1.412914,9.789039,1.769165,-3.292016,-1.303133,6.341023,8.150867,-5.137043,-3.594822,1.965663,4.612064,7.519570,7.295505,-3.985878,-3.862963,-9.611959,3.914546,-0.214616,8.530627,-9.342373,-8.791521,9.508181,-9.123105,-0.321345,6.661180,0.421736,-2.838737,3.409967,1.458520,-9.844319,-6.872183,1.331640,-3.660908,-4.072338,-8.103244,6.115319,7.004753,-9.211728,1.941691,-0.832164,-1.761112,2.595234,-8.315465,3.496119,-7.385414,-1.877067,-0.996446,-7.492531,7.414682,-2.877871,-5.346040,-9.270993,4.666803,6.882719,5.648089,7.964653,8.137384,-3.762418,-0.261181,9.721442,-6.540020,7.873580,8.321225,1.041068,-2.070142,-9.253411,-8.488438,-3.091436,-1.066379,-4.474865,0.791740,9.771884,-5.268576,9.963150,5.185043,9.323479,-6.934004,9.546164,3.208460,-5.312661,-4.461815,-6.264665,5.306694,-0.029820,-7.532634,4.840227,4.801370,-1.636895,-9.612584,-4.478775,-1.500538,7.155052,-2.787239,-2.319779,-6.594020,2.833075,9.527400,9.102350,1.175774,-6.777441,-2.146219,7.650935,9.496495,9.367720,1.383343,5.714861,4.124243,-3.938000,7.784999,9.218083,6.066272,0.806825,-7.898238,4.757551,-8.886868,5.179940,1.737573,-7.154629,-6.513562,7.124580,6.331901,9.662686,7.648419,-7.344791,-6.531252,-0.113781,7.537729,4.659250,-6.976901,0.532509,-6.165975,4.456247,0.829697,-7.620238,7.230440,-9.826458,3.146697,-4.121321,5.662940,0.010724,-4.012215,-4.787190,5.902414,-5.677435,-5.836295,3.677938,-8.230944,3.894427,-4.055669,-0.842179,6.568991,5.285775,-2.950162,7.307396,-7.654250,-4.206664,9.029572,-7.930934,-0.306515,-7.730883,-3.873806,0.141869,3.077009,9.656401,7.960393,6.754495,-1.941188,1.468159,-3.727959,-3.522077,9.064484,-3.843017,6.873082,-1.648855,4.491472,3.613875,-2.603676,-8.057572,0.625276,1.885790,7.819359,7.849486,6.624991,3.846211,3.529377,9.392426,-3.424048,9.671945,-1.906866,1.603296,6.840114,-4.237077,8.554808,0.044195,-5.235825,4.332602,3.668308,9.317712,5.341338,2.935207,-8.106890,-9.033747,-3.316807,3.665713,8.860225,-3.912353,2.215853,-5.795557,2.134312,6.698844,-1.950106,-9.878794,8.491227,4.495707,-9.834546,2.480803,8.733168,5.460605,-3.571141,-3.852471,1.036917,-1.306881,9.667665,7.959892,-2.938847,-4.971504,-9.333262,-0.313256,-0.113665,-9.089190,-7.033308,-3.380289,4.220973,4.668260,-9.759277,6.764234,-9.914918,-7.766098,-7.910891,0.564045,-0.024311,-6.415947,-9.191441,-7.587386,-5.205988,1.939173,-8.272104,-6.259078,2.297882,2.427249,7.197314,4.769981,-8.237448,-4.915386,3.857394,8.283487,2.232242,-5.450735,4.951013,0.979416,-8.726462,-8.717707,-5.405437,-2.431479,6.116579,0.711031,3.872681,-5.000515,-8.296373,-9.416496,-2.167126,4.719320,3.360054,4.233637,-1.096638,-9.473784,2.316466,8.490288,3.476335,2.671883,-0.199659,-3.357533,1.748192,7.332740,7.575867,-0.383297,-3.393863,5.723277,1.874194,-3.302934,8.508756,-7.859385,4.280277,-6.091020,-7.371507,7.662019,-8.084316,-8.356674,9.498531,4.080998,2.902563,-8.488586,0.078404,-5.616826,0.470830,-8.026158,6.540599,0.483940,4.830043,-0.972040,-6.123323,-5.722395,3.098380,-4.949911,-1.597571,5.061174,6.807091,2.982208,3.907801,-4.936337,-5.304496,-4.603322,4.536406,2.066375,5.562402,-8.420105,0.151534,9.395406,8.491156,1.440334,8.023456,-9.293240,5.856496,-5.078094,6.562682,4.059149,9.261814,4.502129,9.835183,8.000799,-7.145625,-5.565682,-8.864609,-4.632384,-6.309672,-3.587021,-2.723719,-3.089573,-0.090001,5.912897,7.255324,-4.967063,-6.801848,-7.457199,-5.870444,-5.338716,6.105631,-3.503683,-3.075933,-3.041579,3.199846,0.648781,1.356502,1.719982,-0.440610,9.083542,3.145308,-5.014802,2.387466,2.367164,9.210960,8.057672,5.055593,-5.899741,-3.728313,-1.248215,8.812947,-9.514995,0.867281,4.948245,-3.917089,-5.355879,-0.222230,3.364549,8.695466,7.514041,-4.843509,1.630821,-1.182244,-8.983969,-0.073828,-3.538367,-5.682667,-4.798682,-5.997838,7.993189,-3.340478,-2.666106,-4.865005,1.962305,0.352548,-4.987234,9.877783,3.206567,-5.795574,-4.809431,-5.976142,-9.150463,3.385453,-9.644360,-4.423140,-0.123935,3.733459,4.689030,-4.310545,3.082656,4.959030,-1.527449,-5.560552,4.639054,5.893737,8.433842,-2.842035,-3.690008,5.697234,-1.607147,-9.510495,-4.549066,3.642821,2.957820,-4.963892,1.185276,5.928473,-7.667358,1.214635,-8.742392,-9.559991,-2.646338,4.625049,-7.141351,-1.704362,0.952355,-6.099920,-6.454399,7.716482,0.222452,0.723614,-9.352525,-7.105250,-7.224872,-9.445009,-2.347574,-5.828713,7.988983,4.580778,-5.965071,-3.823914,-3.652145,-9.333785,9.259584,5.842850,9.020819,2.854063,7.137882,8.217917,-4.419385,-4.987171,-5.648328,8.868304,-8.982679,6.418424,-6.134184,-6.665834,-3.364389,-5.247309,8.283654,7.759395,-4.738709,-4.065108,-3.190768,1.468375,8.852649,-4.093661,-2.475725,3.325592,-6.557200,-6.764880,7.478838,-4.850220,7.235068,2.943828,-6.039126,1.255845,9.761894,-6.732280,5.534683,-3.535467,0.769297,-7.892685,3.874705,-7.715170,0.364456,-4.832899,-4.671347,-2.211415,7.400854], dtype = "float64")#candidate|617|(768,)|const|float64
call_616 = relay.TupleGetItem(func_528_call(relay.reshape(const_617.astype('float64'), [3, 16, 16])), 0)
call_618 = relay.TupleGetItem(func_530_call(relay.reshape(const_617.astype('float64'), [3, 16, 16])), 0)
uop_619 = relay.asinh(uop_600.astype('float32')) # shape=(6, 8, 4)
uop_621 = relay.asinh(uop_602.astype('float32')) # shape=(6, 8, 4)
output = relay.Tuple([call_561,const_562,const_563,bop_569,bop_582,call_612,call_616,const_617,uop_619,])
output2 = relay.Tuple([call_564,const_562,const_563,bop_569,bop_585,call_613,call_618,const_617,uop_621,])
func_622 = relay.Function([var_542,var_543,], output)
mod['func_622'] = func_622
mod = relay.transform.InferType()(mod)
mutated_mod['func_622'] = func_622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_622_call = mutated_mod.get_global_var('func_622')
var_624 = relay.var("var_624", dtype = "float32", shape = (14, 8, 5))#candidate|624|(14, 8, 5)|var|float32
var_625 = relay.var("var_625", dtype = "float32", shape = (14, 8, 5))#candidate|625|(14, 8, 5)|var|float32
call_623 = func_622_call(var_624,var_625,)
output = call_623
func_626 = relay.Function([var_624,var_625,], output)
mutated_mod['func_626'] = func_626
mutated_mod = relay.transform.InferType()(mutated_mod)
var_721 = relay.var("var_721", dtype = "uint16", shape = (5, 6, 1))#candidate|721|(5, 6, 1)|var|uint16
const_722 = relay.const([[[1,8,-1,9,4,2,1,7,-9,9,-4],[5,5,9,4,-1,-9,1,9,-7,-5,-4],[10,-10,4,10,-2,-10,-6,-8,-10,7,8],[-9,-7,-2,5,7,-9,-4,-6,1,-1,6],[1,-10,-3,-10,5,7,-6,-2,-7,8,-6],[1,9,2,4,-9,-2,-5,8,-5,5,-2]],[[-3,3,3,-7,6,-3,-1,-6,2,9,-6],[10,-10,-4,-7,5,3,1,1,-7,8,-3],[6,6,-5,-4,9,-3,-9,5,5,5,10],[-6,-5,-10,-4,4,4,-9,-4,10,-9,4],[3,-3,9,-8,5,2,6,3,-8,-3,-4],[1,-7,1,5,-3,5,7,-3,5,-9,-6]],[[-10,7,5,-10,2,6,4,7,-5,10,-6],[7,3,5,-10,9,1,8,5,4,-1,1],[10,-5,-8,-8,-3,4,-9,-8,-2,-9,-2],[-1,-4,8,-5,-1,7,-3,-2,-9,-8,-10],[2,3,6,8,-8,-7,-4,-10,-2,-8,-6],[5,-2,2,7,-6,-2,6,-1,-6,-3,-3]],[[-5,-8,3,-7,-6,6,7,9,-10,7,-6],[-9,-7,-7,-5,-1,-5,-9,-4,-7,1,2],[3,-3,6,6,3,8,10,4,8,-8,-4],[-9,-7,1,-2,-5,-4,-10,2,-2,-3,7],[-8,9,-6,-6,5,-9,4,10,2,-2,8],[7,-8,-5,9,-4,-4,-2,-1,-9,4,9]],[[-7,-3,-4,5,5,-2,-9,5,10,7,-2],[2,-7,-10,-10,-6,-7,6,-2,-3,-1,3],[3,-9,7,5,-7,1,-2,3,-9,7,-8],[7,-3,10,-7,-3,-10,3,10,-7,7,-1],[10,-8,-4,4,9,-3,-4,-6,7,1,-4],[5,2,-3,1,-9,7,-9,-6,5,4,8]]], dtype = "uint16")#candidate|722|(5, 6, 11)|const|uint16
bop_723 = relay.multiply(var_721.astype('uint16'), const_722.astype('uint16')) # shape=(5, 6, 11)
output = bop_723
output2 = bop_723
func_726 = relay.Function([var_721,], output)
mod['func_726'] = func_726
mod = relay.transform.InferType()(mod)
mutated_mod['func_726'] = func_726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_727 = relay.var("var_727", dtype = "uint16", shape = (5, 6, 1))#candidate|727|(5, 6, 1)|var|uint16
func_726_call = mutated_mod.get_global_var('func_726')
call_728 = func_726_call(var_727)
output = call_728
func_729 = relay.Function([var_727], output)
mutated_mod['func_729'] = func_729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_739 = relay.var("var_739", dtype = "float32", shape = (14, 7, 13))#candidate|739|(14, 7, 13)|var|float32
uop_740 = relay.sin(var_739.astype('float32')) # shape=(14, 7, 13)
uop_746 = relay.atanh(var_739.astype('float32')) # shape=(14, 7, 13)
bop_750 = relay.divide(uop_740.astype('float64'), relay.reshape(uop_746.astype('float64'), relay.shape_of(uop_740))) # shape=(14, 7, 13)
output = bop_750
output2 = bop_750
func_760 = relay.Function([var_739,], output)
mod['func_760'] = func_760
mod = relay.transform.InferType()(mod)
mutated_mod['func_760'] = func_760
mutated_mod = relay.transform.InferType()(mutated_mod)
var_761 = relay.var("var_761", dtype = "float32", shape = (14, 7, 13))#candidate|761|(14, 7, 13)|var|float32
func_760_call = mutated_mod.get_global_var('func_760')
call_762 = func_760_call(var_761)
output = call_762
func_763 = relay.Function([var_761], output)
mutated_mod['func_763'] = func_763
mutated_mod = relay.transform.InferType()(mutated_mod)
var_827 = relay.var("var_827", dtype = "float32", shape = (3, 4, 3))#candidate|827|(3, 4, 3)|var|float32
var_828 = relay.var("var_828", dtype = "float32", shape = (3, 4, 3))#candidate|828|(3, 4, 3)|var|float32
bop_829 = relay.not_equal(var_827.astype('bool'), relay.reshape(var_828.astype('bool'), relay.shape_of(var_827))) # shape=(3, 4, 3)
bop_834 = relay.greater(bop_829.astype('bool'), relay.reshape(var_828.astype('bool'), relay.shape_of(bop_829))) # shape=(3, 4, 3)
func_726_call = mod.get_global_var('func_726')
func_729_call = mutated_mod.get_global_var('func_729')
const_846 = relay.const([-10,4,-3,-1,4,-7,6,2,9,-3,-3,6,2,-7,1,10,3,5,-6,4,-2,-2,-9,6,10,-3,-10,3,6,3], dtype = "uint16")#candidate|846|(30,)|const|uint16
call_845 = func_726_call(relay.reshape(const_846.astype('uint16'), [5, 6, 1]))
call_847 = func_726_call(relay.reshape(const_846.astype('uint16'), [5, 6, 1]))
func_760_call = mod.get_global_var('func_760')
func_763_call = mutated_mod.get_global_var('func_763')
const_849 = relay.const([-9.979737,8.510855,7.690434,-9.142056,-8.735152,-2.079493,-5.140766,-7.583901,-3.689611,-7.894281,0.713978,-1.347787,5.883069,-7.547207,-7.336351,-2.624331,-5.631615,-6.291424,6.221290,8.291653,-3.322313,5.016351,-8.431400,7.287998,2.923187,-7.671410,7.804850,-5.347274,5.697079,0.095466,-4.907626,-7.931774,-0.608751,2.971580,1.708073,4.024405,-3.230252,7.003362,-1.773760,1.634247,-2.773302,-2.186700,-1.584058,-8.740967,-6.070409,-6.010601,4.447573,3.793468,2.626750,2.489520,-4.924854,-5.984251,-3.723077,3.895254,3.396432,-5.537673,-8.369796,2.214281,6.873034,-6.116791,-6.319255,1.473088,8.136975,6.174536,9.304557,-3.623821,4.937521,-0.779173,-3.278555,8.826595,8.797185,6.233512,-2.646543,-5.954300,-2.565316,5.695774,1.009658,-0.775153,-7.951677,-3.999241,-0.357432,8.804477,0.602413,6.016499,6.901578,7.728330,5.726790,-8.813242,-6.128154,1.192635,2.484083,9.191768,3.801291,5.651784,4.774752,9.397965,-4.816924,6.662569,1.614677,6.642064,0.843379,1.608089,0.082264,2.629845,-2.601593,-9.173080,5.794431,6.963228,5.352716,-3.441823,-7.883192,4.382549,-4.067802,-1.556906,8.952923,-2.013408,2.067237,4.831313,8.058623,-3.254468,-2.838576,6.150995,-1.825649,-7.561950,-8.897191,-6.860385,6.244092,2.024477,-7.221724,1.121592,-9.960548,0.884119,2.636844,-0.642383,6.280928,-3.778827,-4.081551,6.485174,-0.898471,-9.629473,2.490116,7.728994,-9.679279,-0.350001,2.087780,0.141023,-4.222855,4.916499,0.274640,-5.880943,-7.306323,-6.140038,8.098057,8.973295,-8.770787,-7.997912,-2.628552,-6.260530,-6.520925,4.776611,-4.992329,8.592204,1.277626,-1.109368,5.355071,6.996213,9.630271,-7.111136,-9.852826,4.748137,8.185338,-2.561594,8.984658,3.907090,4.907180,1.731892,1.449901,-5.720479,4.277916,3.922580,-4.574055,-2.866326,4.774373,-8.968376,-4.240240,-6.721034,7.894493,1.604118,7.303056,-7.340495,-8.512335,-1.202196,6.749587,-6.272399,7.645731,7.310264,8.423597,4.634937,-4.521585,-0.611255,1.054004,-2.323547,0.782340,-5.668528,-6.291627,2.711534,-5.183923,-8.743924,5.954776,8.880577,7.110106,-6.693585,-9.745530,1.203883,2.985983,-4.283556,-6.789889,6.437186,-7.095506,-4.984789,-3.003608,8.664660,2.847042,-2.336112,8.828507,0.538216,-2.373595,6.559184,0.614395,5.196119,-7.688141,-3.105697,2.339746,-5.449277,1.733628,-1.875138,-9.798869,-8.698819,-9.499859,-0.448344,-1.634886,-4.115810,6.057250,-4.035806,-2.636612,6.928962,9.487261,1.029994,0.886871,-5.499129,-7.377180,2.329521,9.112648,-6.296925,-0.521606,1.181439,-8.846214,-6.846073,7.657474,-0.927044,-8.781522,-9.840923,2.315451,-5.038111,4.596734,1.935162,-3.312311,-7.311466,0.110970,2.053529,-0.053100,-4.562991,-7.210637,-3.858120,0.028754,6.466749,0.766868,5.352304,6.405910,0.372720,6.115386,-8.733021,9.241418,4.775111,0.734900,1.189154,4.636984,-7.393554,-1.556737,7.169105,0.092992,2.738085,-0.581974,-4.070384,1.876251,-3.094612,-4.067784,-7.542321,1.343524,-0.685905,-1.504395,-1.802581,-2.629688,8.383815,-9.324671,-7.292987,9.796677,-8.110353,4.051094,2.100094,-9.880877,0.528556,-2.724088,6.845982,1.310554,-1.258316,9.348579,5.249229,7.538885,-2.599755,7.321586,4.196354,-8.217841,-5.601071,-7.910436,-6.621569,2.930344,-6.069463,2.660401,5.852722,2.663572,-4.170141,8.083557,-0.815616,-0.617026,-6.808982,-3.346476,-2.437625,9.768104,-2.609655,-1.092786,-0.727687,-3.491884,2.328922,-1.086953,-5.647976,-7.588439,-6.973366,-5.920011,-3.809091,0.773549,-5.351078,8.311601,6.349247,7.802201,-5.279427,-1.150918,4.139446,6.725370,8.851865,3.044562,-5.256747,-2.278532,8.912601,9.218809,-7.355680,-1.368655,-9.420685,7.487458,-9.306489,9.965623,1.685776,-0.662438,-4.773736,1.854231,4.114631,8.996787,0.213024,9.775701,-0.725838,-1.979799,0.102895,4.670302,-1.303143,6.721314,5.967451,-4.109237,3.472993,1.089210,-4.877372,0.450064,-3.655907,9.257387,-6.169428,-3.617572,-7.000095,5.148385,-3.757766,0.506747,-7.785076,1.138553,-2.464380,-0.644551,-4.218554,8.032013,-9.093129,4.935140,-4.249564,-7.855963,0.816559,6.120968,-7.171124,9.612803,-5.067262,8.037487,-2.659214,-7.822210,-3.696747,-6.568152,8.633625,-1.658553,-8.200752,-0.436409,-1.815876,8.029730,5.026877,2.875913,-3.658276,-5.616751,-3.825077,0.676509,5.565595,1.999034,-8.868659,-4.603049,1.968586,1.804721,-1.608070,-4.055010,0.568389,-0.730899,3.579443,-1.742793,2.046583,-9.738757,-1.692724,-9.800225,0.544015,-1.113372,6.768318,9.792828,2.398076,-6.190579,-4.852996,-9.402067,-8.033280,3.665649,4.626517,2.285879,-7.470852,-0.251387,4.195378,-1.365333,-3.420098,-2.307493,-9.313415,-9.223146,5.219088,2.457269,-9.754122,1.805847,3.183617,-0.115924,-0.198391,7.339943,2.878432,8.139433,-0.171293,5.567972,-1.702620,-1.375210,-3.563010,-6.436208,7.273138,9.892581,-4.992411,-5.013202,4.762663,-6.080226,0.987516,0.375523,4.943532,3.393392,-4.487360,-5.720080,6.876911,6.899891,7.117655,3.868652,-8.671166,-6.535575,2.187320,-5.945149,2.020818,-7.465955,-4.598924,7.599955,-1.962703,5.857373,-6.519199,-0.861419,-0.351397,5.027392,0.265498,-4.512711,3.225742,-6.232702,9.834394,-1.361599,3.146958,8.582889,-1.103665,9.823542,-4.233085,7.057865,-9.470060,-8.405668,-0.492444,5.714879,-6.702481,1.271803,-1.388457,-6.435979,-0.484518,3.010235,8.493777,4.455597,2.983306,-7.841963,0.170357,-7.250489,9.737549,-4.008016,-8.951111,-0.763928,1.680235,3.087177,7.633944,0.850094,-3.653725,-4.786423,-8.118503,1.447729,-2.114305,0.498519,8.537522,-9.330699,-4.517817,-8.232794,-0.021272,1.005084,-4.515220,2.956760,-2.413915,3.125315,1.974295,-0.640990,4.522183,-8.070220,6.286274,4.757373,5.978129,-5.091140,-1.822386,6.504522,3.632779,-2.868029,3.803557,5.359012,7.807954,-8.514299,-0.051321,-0.091308,-5.091373,-6.875513,-9.755771,-7.495261,2.704680,3.219225,-7.647393,-7.845695,3.662430,2.682706,-0.925451,-5.962802,-7.902432,7.528205,0.368943,-2.986041,-7.258458,1.598269,1.724006,-5.720725,-3.770368,-3.709980,-5.263905,-1.776424,-2.539089,-9.245693,4.538927,-7.993689,4.180499,-8.606776,5.368674,-1.924843,0.732150,-8.894374,-2.835282,1.077715,-1.224669,2.938718,-9.969353,-9.485452,4.956828,-4.851156,9.991711,-2.368566,-5.755275,3.819249,-8.366554,1.510097,6.908596,-7.258510,-6.350398,5.937086,5.037904,-3.405603,-0.542366,-5.448152,8.874724,-8.355822,5.553985,-5.014458,-1.283775,3.575715,6.111014,-8.358173,-0.985408,-2.572689,4.499314,4.970463,-1.454159,-5.023082,-4.602693,3.707543,5.189491,-5.548955,-1.079925,-7.855005,-3.086925,7.420869,-9.285433,6.386595,-5.921874,-5.040773,9.697730,3.426882,2.121704,-7.162628,-4.615857,3.601377,-2.104266,8.160887,-5.010748,5.410298,1.312530,0.302967,-5.754232,9.070737,-3.324419,-7.346967,5.271148,-4.887539,-1.795124,4.052951,-9.109483,-2.843042,-3.190067,1.494197,-6.728215,-6.621751,-7.033272,8.119413,-3.911159,6.823600,-1.529671,-2.103898,7.646198,-8.385791,8.165801,1.403868,7.776066,-5.098678,5.422170,-8.539034,-3.275392,7.513137,-0.789005,-0.073552,0.006701,-8.402439,7.620208,-3.462164,0.884320,-1.924688,-0.451227,-6.895847,-5.525655,1.961141,-4.735879,3.217365,-0.731296,7.480644,3.343873,7.770315,-0.484676,9.096841,-2.808527,-0.270647,-2.841892,3.573580,-3.282693,-8.790396,-4.015455,-8.139813,-0.849826,-7.057506,1.669145,8.536347,2.520426,6.117532,-8.028657,3.167186,-6.810096,-1.797187,2.899184,9.071405,2.753917,-0.910863,-3.911991,8.435446,-3.254373,0.786010,6.410617,-9.968320,-9.177327,-6.659764,-9.237024,4.017565,-4.857607,-8.906386,5.293252,2.541104,3.116041,9.194800,4.104763,-7.907914,-7.754440,6.234176,8.795749,-0.388404,8.103397,-2.469653,-5.222505,4.733197,-1.989953,-3.718294,6.342289,-6.098195,8.978451,-9.170495,-1.405850,-9.082447,8.910620,6.642512,-3.495317,-0.705087,-3.483529,7.574934,-7.294584,6.124438,-8.899151,3.968294,-5.859121,3.106479,8.872046,-9.727890,-2.590164,-8.094152,-7.944939,-7.566787,4.449887,-1.102116,-5.605779,-0.495983,-1.321386,0.509307,-2.138357,7.887954,-4.849819,-4.251500,-8.029803,-0.120126,-2.221340,-8.464109,-1.903969,5.366205,5.549685,6.121418,4.481112,5.290618,-7.271106,9.058298,5.533976,1.636591,3.326109,7.107282,-6.082456,-9.861875,-3.317413,0.722463,-1.871629,-7.195521,-7.444190,3.061261,3.767201,-2.208030,3.136948,-4.837359,-3.872240,-0.650248,-7.232136,7.655441,2.113965,3.541312,8.849561,-3.461058,1.856145,1.978708,5.258621,7.674155,5.073210,-6.070965,2.104375,0.597044,-5.454594,2.447476,8.966610,2.786892,3.857226,-2.444235,4.325250,-1.146761,0.012465,-6.632712,-2.236502,-7.317255,7.223205,-4.022233,6.667999,-7.450621,8.346184,-8.963195,5.294542,-6.856164,-6.133235,1.523758,3.282692,-7.791050,1.326390,3.246582,9.406394,-4.713134,-1.440389,5.681382,-7.154658,7.989550,-5.670084,2.609623,9.209236,-1.286188,-9.192120,0.533107,0.804939,8.593901,7.406858,-0.422056,-3.055777,2.697792,8.434503,-9.424532,4.221702,8.307358,-5.651570,9.059341,-7.042131,1.617251,7.153818,4.571937,1.227829,9.093601,5.686733,5.459821,-5.189502,6.890711,4.366406,-8.314801,3.150336,-6.814846,-1.928346,-4.259425,5.544205,0.816349,-3.270138,1.110511,5.507738,-9.452316,-6.224679,-2.455050,8.946088,-4.727007,-1.694728,7.440189,1.305368,8.025263,0.705575,-2.684345,7.368304,4.925529,-5.188285,4.353385,1.095285,0.663501,5.963885,5.123806,6.657764,-1.086526,-2.430569,8.386784,0.786374,6.434129,-0.485166,-9.453304,5.525288,-6.696764,-7.499405,-6.482179,4.627746,-6.405451,6.796367,2.119838,8.547612,-2.939448,5.157949,3.219587,-6.488880,1.420261,8.391279,5.115123,4.002202,-6.069815,9.972351,-0.186390,-8.540471,-6.932314,-6.135465,-7.668624,7.551453,4.843302,5.621917,4.926641,9.906649,-5.771711,-7.806124,6.604708,7.447311,-8.080934,-1.949309,-3.914018,4.920965,2.057496,-1.528484,0.900629,-7.362144,9.953738,-1.064615,-3.879519,1.411122,-9.867551,-1.582393,-7.735143,8.638426,-1.454338,7.543544,5.082321,6.316994,-0.031546,-1.017063,3.846972,-6.602645,-8.319382,-9.640830,-4.014665,-1.481732,9.734899,-1.679592,-3.994960,-1.900799,-5.756240,8.759306,-8.586101,-1.353656,5.979047,0.815398,6.472149,8.802175,-2.650444,-1.758775,2.902148,2.631149,2.762079,-3.705103,9.609523,0.932629,-3.371803,7.015911,6.923875,6.633653,5.086185,-5.985598,-3.188704,-1.261128,4.308181,8.516553,0.879950,0.280880,6.252117,3.944169,9.028165,-7.731935,3.545946,-2.441564,6.489939,2.615091,-9.911654,0.020248,1.480021,5.496531,1.157340,-0.116614,9.128024,6.641931,5.217280,-0.295052,0.850288,4.918840,-5.751611,-0.046820,7.060393,-8.622603,8.110966,9.751128,-5.767735,4.339312,7.831633,-8.410319,8.264513,2.322153,-3.977055,0.993851,-9.931434,7.360814,6.467571,-5.464795,4.148065,-0.816755,6.863116,-0.242544,7.313509,7.354863,5.382356,5.660768,2.869112,2.029043,-1.954772,-7.314459,3.380237,-4.532288,4.247417,-4.675137,7.548566,9.649397,-7.626729,-5.962403,0.983610,-4.188562,-1.931595,5.921129,6.506292,5.030350,-6.851552,-0.690535,3.568916,-5.374741,-6.573600,-4.821504,8.208144,-1.611185,6.992103,7.958368,-0.081465,0.106822,-5.197537,-1.344991,1.212582,6.605926,4.956046,-6.740774,-7.453690,7.586496,0.026193,4.056348,1.352807,-8.095498,-2.048529,6.199212,9.370702,5.424095,-3.463609,8.602913,-9.579227,2.354408,2.631724,-8.278738,-7.296809,-9.888804,4.983317,-9.578384,5.131119,9.762322,5.159503,-9.957351,9.380385,-6.503083,2.578268,-4.915116,-7.139831,-9.103546,3.923800,-9.319794,-7.703669,6.964410,-7.132325,2.701855,-8.425737,8.222933,0.894342,-5.769577,-0.919941,-2.304157,0.351225,0.224898,-9.884919,5.993335,-9.081024,4.668373,-8.650971,1.975759,1.356223,-0.607288,8.979594,2.487780,4.555220,-0.444995,-9.568605,9.305371,1.604596,0.720236,-9.755907,6.617508,-2.899019,-7.930466,0.396526,9.472028,-5.174905,-9.330310,-9.067267,-2.446163,8.435743,0.780614,-6.480990,0.731517,1.150336,5.886483,2.447332,-6.797787,-2.622912,-3.829715,-1.284980,-3.949838,3.040787,0.180187,-0.156538,1.026804,-1.775500,3.142316,-9.167618,-2.991071,5.207418,5.998878,-5.481132,1.571797,-1.569646,-8.645284,5.877743,2.737168,6.691776,-7.336259,2.977199,6.512001,-4.567551,-4.956998,-1.151087,-2.845262,-0.530944,-0.254303,-2.463262,9.871488,-4.720365,7.034571,-9.830970,-2.220102,1.897737,6.445953,6.318476,-3.310929,6.993530,-2.122835,7.248097,-7.947084,-3.212073,-6.172529,-8.997432,-5.415564,6.044464,-8.289834,-2.586719,7.485798,-4.487279,-9.926197,-8.771467,8.170697,7.281926,9.037508,0.456014,8.458785,-4.911334,-2.677056,3.644984,7.510414,-5.346289,4.723492,9.744493,8.152639], dtype = "float32")#candidate|849|(1274,)|const|float32
call_848 = func_760_call(relay.reshape(const_849.astype('float32'), [14, 7, 13]))
call_850 = func_760_call(relay.reshape(const_849.astype('float32'), [14, 7, 13]))
func_493_call = mod.get_global_var('func_493')
func_496_call = mutated_mod.get_global_var('func_496')
const_861 = relay.const([-4.908955,-9.072109,8.591778,1.255394,4.094840,3.500988,-3.271794,6.523182,6.200846,-4.593945,2.077999,-0.947873,-5.102663,-8.768648,4.326275,-9.567341,3.047542,1.507080,-1.963011,9.546323,5.595429,-5.746485,-1.118307,8.285300,-3.639394,-7.686590,9.257360,4.552383,8.731385,2.785847,-0.538769,-4.472162,-8.576625,-8.909797,-6.389998,-3.798630,6.078391,-2.028085,8.618736,9.902757,2.960548,0.659584,1.897119,1.478286,1.393862,8.003984,-9.085261,5.947011,6.903755,5.795290,6.375176,8.711922,-4.038939,0.853499,1.489145,-5.573546,-8.729260,8.025828,-6.997708,7.579607,4.469047,0.363819,-2.645578,-6.280986,9.894002,-1.612447,-7.071857,7.845464,3.546623,-9.483104,2.844461,4.497475,-5.522251,0.305074,1.221251,-8.483728,4.918080,6.137075,1.524701,-7.135507,8.477863,9.172846,-8.646025,2.709943,4.491998,6.680972,-1.459261,8.412052,0.666635,8.836295,7.477988,-4.580586,-5.318914,-4.526388,5.811214,-5.879970,8.732965,-5.267701,-0.124947,6.309154,6.274612,-3.450659,-5.019805,4.326667,9.983732,-6.315280,-4.373659,6.413204,-3.183508,-6.214943,-3.801239,0.722234,7.938079,-9.122975,1.095345,3.261102,-3.210222,-7.654094,1.997219,-4.087335,-5.648708,4.245615,9.912401,2.832566,5.980138,-3.601185,-2.666160,1.750752,6.971667,8.707322,-6.752690,-0.206850,5.272550,2.473151,-1.700273,7.327474,-9.527337,4.035979,7.869634,-8.282540,5.431322,1.020688,-8.195254,2.263472,-8.535840,-6.186515,7.392630,0.676037,9.761488,-1.385165,-7.098866,-7.770341,-2.398782,2.283186,6.353727,-1.383474,-7.610530,-8.065660,6.411228,-8.322135,0.894135,-1.919353,3.154026,5.650392,-8.663145,-4.243473,6.225519,3.460564,1.572557,9.830070,-0.148340,9.170320,4.906164,5.794192,5.043861,-4.797140,-3.181491,7.622787,-8.754822,-1.415464,-6.902421,-7.588059,-2.741587,-3.339701,-5.369998,-2.588242,4.423106,8.201396,5.356154,6.869194,-6.445897,8.939830,-0.838018,4.339198,4.056887,1.625233,-3.117162,6.664362,-4.079453,-1.712065,-1.488240,5.534948,-2.904419,-7.553710,-0.882558,-6.029356,-2.694348,4.162891,7.771514,6.599507,5.769889,-4.854238,-6.999925,-4.996166,0.993111,3.059498,2.290354,-8.343233,6.642093,7.161639,-3.091100,6.266411,-2.691809,-7.635939,7.990821,-3.268499,-8.337100,-4.309181,6.772800,8.726538,-8.320642,-4.710613,-5.040131,1.790361,0.486145,8.251794,6.614836,-3.156915,7.393329,6.691610,8.650208,5.180307,-2.286416,-8.348680,-4.025633,2.248012,4.608662,-0.425669,-9.921860,4.323785,1.906784,8.930189,6.274146,-7.665449,-4.534415,1.358712,3.888259,-3.293261,5.045140,7.508278,-3.526563,-3.645227,-2.016599,7.111455,-7.120485,1.267906,8.868352,-9.836163,-6.834915,-2.793573,-2.705946,-1.654853,-3.655049,-0.887253,-7.553647,-3.199692,-2.259334,-9.070562,4.879015,2.340846,-2.390382,1.426732,9.159506,9.226186,-6.587498,7.006111,8.903240,8.550367,-4.566592,8.828677,0.889355,9.180319,-0.020307,8.730142,-4.070547,-8.634614,3.252630,-7.879786,1.869564,-6.097983,0.867577,0.996367,-3.911184,1.638316,-3.135793,7.793420,-5.585535,1.522840,-4.261038,-6.638732,9.473897,6.321655,4.215071,8.326009,9.464216], dtype = "float64")#candidate|861|(315,)|const|float64
var_862 = relay.var("var_862", dtype = "float64", shape = (48,))#candidate|862|(48,)|var|float64
call_860 = relay.TupleGetItem(func_493_call(relay.reshape(const_861.astype('float64'), [3, 7, 15]), relay.reshape(var_862.astype('float64'), [48,]), ), 0)
call_863 = relay.TupleGetItem(func_496_call(relay.reshape(const_861.astype('float64'), [3, 7, 15]), relay.reshape(var_862.astype('float64'), [48,]), ), 0)
bop_868 = relay.multiply(var_827.astype('uint16'), relay.reshape(var_828.astype('uint16'), relay.shape_of(var_827))) # shape=(3, 4, 3)
func_528_call = mod.get_global_var('func_528')
func_530_call = mutated_mod.get_global_var('func_530')
const_873 = relay.const([-7.619768,1.539015,9.005460,-2.260955,3.533598,1.448774,7.495674,-6.378619,4.298014,-5.383094,0.016709,-4.641388,-1.733255,5.473970,1.741143,-0.240772,-8.910352,1.872301,0.313164,-2.480901,-2.878301,-7.020018,8.516037,9.746356,4.538183,7.602775,-1.958670,6.810449,2.456521,-4.839167,-3.797985,-3.726239,-7.518799,-0.858537,9.769000,1.212898,-4.020694,-3.663393,-2.544842,9.562969,8.837048,-0.762468,-5.099203,9.930514,-5.659524,-0.028872,-1.354185,-1.845569,2.823263,-8.122954,6.317488,-3.916955,-9.775614,4.794994,-2.198025,-7.193788,0.483570,-3.270002,-2.926475,5.698643,9.765566,0.681922,-9.838813,6.751792,4.862204,0.275498,1.934300,-8.455707,-5.734034,-5.327843,-1.865842,-4.911316,8.039102,6.591268,-7.159413,1.229993,9.034184,1.741727,-6.287678,4.648981,3.391622,-5.924881,-0.948227,-1.400352,3.355476,7.959241,2.832153,7.677364,-6.785840,-0.202442,-9.946489,4.148678,4.698486,5.882139,8.170194,8.799163,4.692860,2.029299,-3.845968,-4.415058,-6.102233,-8.532585,-3.120817,-8.540682,-5.447882,2.813481,-1.837411,-5.828732,-8.081682,4.238629,-1.128107,-0.144856,9.921234,6.063699,3.383473,6.173793,-6.005384,9.513012,2.509471,3.557804,-9.693489,-3.889772,7.232228,-3.986961,8.481769,7.980214,-5.710891,8.405569,6.409664,-0.688046,5.353281,-1.043384,8.157119,-2.067085,-5.806952,-0.240361,-8.679080,9.058300,-7.557973,3.175716,-1.183723,3.240677,-3.667854,-3.670196,-9.670148,-5.298517,-0.088549,3.541046,-9.168857,-1.817921,0.976300,-0.303000,-9.860308,-9.632388,8.659139,-3.307678,-3.693257,6.848276,-2.191313,0.673878,-2.613925,-5.662879,-4.205827,-9.969748,0.457033,9.420831,1.823622,8.623472,-0.528426,-4.274351,5.276412,3.978354,4.409897,6.012728,-0.440008,-7.662596,-7.157882,6.898280,-1.683069,-9.213311,-0.597328,-6.516578,5.962197,4.074925,0.375856,7.623177,-0.305861,9.031503,9.665048,-6.930458,1.181214,-4.360995,0.195059,-3.237288,1.167420,-3.946579,2.251283,-9.004234,-9.939192,-1.352608,3.933875,-7.608865,-0.560585,1.133149,-4.052534,4.677222,-4.184745,-7.607132,4.680247,4.045012,5.268207,-4.144230,8.508709,8.977112,6.992125,0.703630,3.595178,-0.123136,3.866633,-4.482754,2.814309,5.594634,7.096250,-2.163133,6.342532,-0.528951,5.082026,6.823406,4.077545,-4.501700,-2.638754,8.508965,1.944880,3.861351,-4.670799,2.379173,4.780909,5.869227,-0.733492,6.167440,-5.321829,-8.207438,-2.203869,-5.363399,-7.547925,-8.819671,-2.276147,-2.792996,-2.332566,1.108152,6.039594,-1.921860,4.995933,-2.276644,4.450051,0.708407,6.915904,9.293912,5.056053,4.714610,-7.548529,-6.170898,3.677126,9.384440,-3.823627,-3.226533,5.925653,-3.446994,2.798900,-8.791103,-4.646355,-6.535428,8.407623,-7.618655,4.164386,-8.543297,7.456556,-6.242969,9.001178,-0.364822,-7.388598,-3.164624,-3.595424,7.163891,6.237475,-5.234203,0.309772,5.654722,5.739334,-2.213885,2.543736,-7.893284,0.960357,9.951916,-0.040589,5.954691,9.222672,-0.640660,-3.312679,4.355667,0.882065,-0.058314,-6.105409,3.580338,7.313216,-4.895500,-7.964880,0.864274,4.731966,7.079488,4.896587,8.299771,-4.988366,-2.467543,6.886791,-7.391862,9.281271,4.406826,-8.413472,4.899504,-1.194842,-0.375342,7.568750,5.949675,-4.778525,-7.689242,5.712527,-4.790542,-6.555302,-6.165869,-5.944510,-8.900265,8.959771,5.398106,9.704634,1.134323,-9.297598,-5.742919,-0.115686,6.674183,-2.940185,-0.065103,4.955271,0.176849,3.706599,1.400345,-5.067053,3.912885,8.114055,5.095189,-8.548392,0.527750,-1.530862,-9.665587,7.749422,-4.601211,9.045139,8.081664,7.800900,-7.753373,-0.204455,0.618515,-0.982906,8.324743,7.240459,-8.210458,7.975729,9.252856,3.205452,-6.930966,7.976073,8.915285,4.295287,2.571463,4.846685,9.753232,3.632653,4.801705,-0.836069,5.853078,0.222712,8.707781,4.112404,4.107931,-8.327905,8.452648,-3.248969,-2.173347,1.114873,-3.129003,-0.462099,4.300933,-1.504229,5.265648,0.340257,1.526881,-6.056540,6.923783,2.848497,-7.097897,0.627876,1.965539,-5.703038,6.992223,3.394657,6.837636,-4.172663,0.123611,5.593869,9.752739,1.230551,9.837862,4.233576,-0.537580,6.934506,-4.295076,-3.926728,-3.707095,8.840864,9.151699,-5.769891,-3.042884,7.287674,6.675301,-8.189059,6.386850,9.601400,6.406176,0.844395,9.376693,6.044007,7.425794,4.640763,-9.319623,-7.903339,2.971151,-3.251088,2.821682,9.687674,-8.387823,1.700421,-8.851279,7.588705,6.425718,6.913793,4.057085,-5.621171,-7.796337,3.194266,-9.684921,-2.717902,-2.946432,-4.939967,-1.490157,-9.850879,6.083278,-1.200748,3.690587,-5.291044,9.460029,0.122680,-9.137289,7.433534,-3.003456,4.106713,-5.508559,-9.485576,8.914729,-2.353525,0.977079,-6.385669,-5.605573,-9.036129,-3.590827,-7.418361,-8.044682,5.515579,5.313940,6.816529,9.553824,7.705845,2.660915,-9.515347,-9.510757,-7.121086,2.863699,-1.514866,-4.252631,5.246607,0.500354,-0.877681,-8.450139,-7.977272,-9.205573,3.344000,8.558151,-8.758567,-7.504798,6.201534,0.048062,-4.426999,-5.147773,8.041580,7.563591,-8.012094,-9.083198,-2.852935,-4.474066,1.770078,2.644183,-3.318315,7.566413,2.686677,2.352339,-9.894054,-1.539205,8.655487,4.023861,4.006182,-4.346539,-2.587484,-6.076548,3.266266,7.326212,-4.357847,0.964932,3.980762,4.192746,-9.422830,7.531130,4.793729,-1.529795,9.396577,8.027343,-9.539293,-5.653292,6.135940,-3.042445,0.531918,1.990880,-3.677157,-5.543004,2.315149,-2.157016,-0.563807,-2.197533,2.584530,-8.967929,-8.773654,-7.133104,4.639370,0.035412,5.096333,5.762650,-2.538922,-2.604042,7.422189,-1.328585,-6.891359,3.315641,4.634373,7.416255,-3.001930,0.140873,5.491685,9.650031,-2.877959,0.155012,-3.257357,-1.227150,4.244931,6.462141,3.987156,7.925910,-5.163507,-2.321812,-0.320239,5.094447,4.393396,-3.788404,-6.235665,-1.351711,-5.655323,-9.521396,-4.460657,7.675416,-7.034695,6.638734,4.048639,4.966756,2.379963,0.253063,0.863999,-0.288371,3.618295,-3.757082,-7.869034,-7.679368,-4.217986,-8.439792,0.060013,6.841162,-2.248846,4.943304,0.318372,-9.520626,-4.110877,4.380485,-1.245806,-6.359040,-0.340280,2.700515,7.695392,6.584179,-9.751577,4.762905,-0.132348,1.022404,6.242488,-2.024188,-1.494645,8.528228,-3.119036,-3.028904,-6.287772,-9.139167,0.288779,6.797848,1.988640,9.345461,-3.217801,7.271904,4.711300,-5.037357,3.986776,5.069046,8.471544,-2.750296,4.020381,-1.451410,6.955782,-8.707493,-6.767004,-0.343433,1.207809,5.187438,-9.291264,-7.776142,-9.771603,-5.959215,3.450723,5.754720,-7.106370,-8.566130,-6.078784,5.994247,7.242254,3.877772,9.427308,5.124039,2.360805,9.872473,1.577282,2.507046,-2.681665,4.660389,5.615210,-7.854385,-2.355427,-1.616228,0.267198,-6.878543,2.580479,-9.876403,3.886158,3.877952,-3.505992,-2.765098,-3.081802,2.633543,9.858035,-9.201418,7.941901,-1.140135,9.391115,5.835112,-3.123153,5.379728,1.618988,3.617620,9.648219,6.468556,4.404517,9.324751,5.692154,-3.517976,7.041821,9.840851,4.566241,-0.222276,-3.865860,2.602242,-5.126149,3.036040,-9.842933,-2.762571,4.276481,0.445346,-9.851953,1.423133,-4.205750,-1.598114,-2.786320,-5.239036,-6.170217,9.329230,-6.367522,2.843247,2.703441,-9.377134,3.265991,-7.117294,-2.100003,4.128330,-3.640309,-8.445776,-6.459357,1.864134,1.019789,-9.312620,-4.229016,-2.084964,-1.575074,5.640869,-2.061623,0.563741,5.895441,4.772200,-0.857053,-3.743206,9.023481,9.308216,5.759688,-0.988197,-0.898825,-7.428819,-0.317454,-6.060510,4.901975,7.837664,2.352840,7.157258,-4.964906,1.541411,-6.696701,9.957876,-9.324876,1.788264,0.936183,-4.437287,7.207984,3.010616,-8.918514,-1.432513,6.970570,2.856215,0.511509,2.889360], dtype = "float64")#candidate|873|(768,)|const|float64
call_872 = relay.TupleGetItem(func_528_call(relay.reshape(const_873.astype('float64'), [3, 16, 16])), 0)
call_874 = relay.TupleGetItem(func_530_call(relay.reshape(const_873.astype('float64'), [3, 16, 16])), 0)
func_389_call = mod.get_global_var('func_389')
func_391_call = mutated_mod.get_global_var('func_391')
call_877 = func_389_call(relay.reshape(var_862.astype('float64'), [6, 8, 1]))
call_878 = func_389_call(relay.reshape(var_862.astype('float64'), [6, 8, 1]))
output = relay.Tuple([bop_834,call_845,const_846,call_848,const_849,call_860,const_861,var_862,bop_868,call_872,const_873,call_877,])
output2 = relay.Tuple([bop_834,call_847,const_846,call_850,const_849,call_863,const_861,var_862,bop_868,call_874,const_873,call_878,])
func_879 = relay.Function([var_827,var_828,var_862,], output)
mod['func_879'] = func_879
mod = relay.transform.InferType()(mod)
mutated_mod['func_879'] = func_879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_879_call = mutated_mod.get_global_var('func_879')
var_881 = relay.var("var_881", dtype = "float32", shape = (3, 4, 3))#candidate|881|(3, 4, 3)|var|float32
var_882 = relay.var("var_882", dtype = "float32", shape = (3, 4, 3))#candidate|882|(3, 4, 3)|var|float32
var_883 = relay.var("var_883", dtype = "float64", shape = (48,))#candidate|883|(48,)|var|float64
call_880 = func_879_call(var_881,var_882,var_883,)
output = call_880
func_884 = relay.Function([var_881,var_882,var_883,], output)
mutated_mod['func_884'] = func_884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_923 = relay.var("var_923", dtype = "float64", shape = (10, 14, 12))#candidate|923|(10, 14, 12)|var|float64
uop_924 = relay.sqrt(var_923.astype('float64')) # shape=(10, 14, 12)
bop_927 = relay.power(var_923.astype('float32'), relay.reshape(uop_924.astype('float32'), relay.shape_of(var_923))) # shape=(10, 14, 12)
func_389_call = mod.get_global_var('func_389')
func_391_call = mutated_mod.get_global_var('func_391')
var_932 = relay.var("var_932", dtype = "float64", shape = (48,))#candidate|932|(48,)|var|float64
call_931 = func_389_call(relay.reshape(var_932.astype('float64'), [6, 8, 1]))
call_933 = func_389_call(relay.reshape(var_932.astype('float64'), [6, 8, 1]))
func_622_call = mod.get_global_var('func_622')
func_626_call = mutated_mod.get_global_var('func_626')
var_945 = relay.var("var_945", dtype = "float32", shape = (8, 70))#candidate|945|(8, 70)|var|float32
call_944 = relay.TupleGetItem(func_622_call(relay.reshape(var_945.astype('float32'), [14, 8, 5]), relay.reshape(var_945.astype('float32'), [14, 8, 5]), ), 3)
call_946 = relay.TupleGetItem(func_626_call(relay.reshape(var_945.astype('float32'), [14, 8, 5]), relay.reshape(var_945.astype('float32'), [14, 8, 5]), ), 3)
uop_950 = relay.exp(uop_924.astype('float32')) # shape=(10, 14, 12)
uop_952 = relay.atan(uop_950.astype('float64')) # shape=(10, 14, 12)
bop_956 = relay.logical_xor(uop_952.astype('int16'), relay.reshape(bop_927.astype('int16'), relay.shape_of(uop_952))) # shape=(10, 14, 12)
output = relay.Tuple([call_931,var_932,call_944,var_945,bop_956,])
output2 = relay.Tuple([call_933,var_932,call_946,var_945,bop_956,])
func_962 = relay.Function([var_923,var_932,var_945,], output)
mod['func_962'] = func_962
mod = relay.transform.InferType()(mod)
var_963 = relay.var("var_963", dtype = "float64", shape = (10, 14, 12))#candidate|963|(10, 14, 12)|var|float64
var_964 = relay.var("var_964", dtype = "float64", shape = (48,))#candidate|964|(48,)|var|float64
var_965 = relay.var("var_965", dtype = "float32", shape = (8, 70))#candidate|965|(8, 70)|var|float32
output = func_962(var_963,var_964,var_965,)
func_966 = relay.Function([var_963,var_964,var_965,], output)
mutated_mod['func_966'] = func_966
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1378 = relay.var("var_1378", dtype = "float32", shape = (8, 12, 8))#candidate|1378|(8, 12, 8)|var|float32
const_1379 = relay.const([[[0.690321,0.570554,-8.073066,-8.785998,-8.363547,6.381081,6.304299,5.805217],[-5.159660,8.326229,6.059463,-4.995958,7.021905,9.939954,7.196863,-5.925090],[4.366969,7.793428,-3.126698,7.769650,-8.170302,5.757192,8.531184,8.313728],[-1.228383,-0.213118,-3.197438,1.916550,2.892325,5.961777,7.250198,7.583671],[-6.006427,-9.663440,-4.927617,4.513936,-2.009491,-0.981689,9.383994,9.061520],[-0.190405,3.180783,-5.560375,4.840453,-8.558778,-9.836863,-7.637488,-4.633895],[-6.975555,1.491327,-3.850178,2.171354,0.633244,-1.904088,2.295581,-0.981178],[9.291462,8.466179,-2.510398,2.545153,9.884390,-7.481697,-9.157657,-5.167828],[-4.563161,3.115133,-7.873537,1.934915,1.333642,-3.994208,-0.816323,-9.939682],[3.967207,1.523548,-3.117061,-9.556361,0.007444,1.973547,9.992668,-9.733742],[-6.618052,4.433875,0.285912,-5.124761,-8.175453,1.274391,-8.982386,7.161568],[5.772003,7.904467,3.718861,-3.080535,1.557534,-1.394966,1.495252,-1.188205]],[[6.307725,0.592507,-8.187655,3.390343,-2.038501,0.440665,-5.172252,-5.175583],[-6.905692,-2.443268,3.351953,-1.517232,-4.937770,-7.231357,8.280794,6.390208],[-2.872858,6.951398,6.535061,1.597107,-2.920915,-2.638622,7.145745,-6.156150],[-4.102069,-6.520905,0.924860,-4.850512,4.448385,-4.604803,8.445510,5.016487],[-3.436685,0.395613,3.502932,3.604584,1.148070,8.446758,9.133555,-5.432097],[-0.997235,7.375220,6.432720,7.864151,-7.144363,-9.413199,-5.232334,9.319470],[-9.697221,-9.427296,-0.535808,1.124572,4.747747,-6.417889,5.422933,-8.328794],[5.937029,9.701324,-3.181817,-1.402209,-5.413063,-4.543521,-2.472647,1.960449],[-5.821837,7.253984,-8.278025,3.163379,0.789984,-0.268194,-9.687990,-3.246482],[-8.251038,9.385117,-8.638190,-4.898046,-0.811369,4.101565,-4.172864,7.696593],[-1.004691,5.424106,-6.100014,-4.898561,5.530322,-5.755600,-2.159445,5.223316],[-2.105549,6.598616,-3.124300,-5.442480,-5.529835,-5.786049,-4.539046,-2.470015]],[[-4.950659,4.522125,-3.663260,-8.002368,-6.851609,2.608443,4.447634,-8.354734],[7.440947,-0.348429,3.772002,-3.811599,0.515237,-5.735861,1.065240,-6.040717],[1.113899,-0.932114,-2.962866,5.094939,5.395409,5.800669,3.044845,-7.502691],[3.055980,1.988825,9.690185,-9.250585,-6.110189,2.703228,4.602589,3.454876],[5.817740,-1.518292,-3.915009,9.058090,7.375595,-5.204578,-5.325226,2.502789],[6.999311,-4.324686,9.151057,2.985923,7.408749,7.410934,1.029760,8.391786],[-8.772987,-3.359504,7.238129,-3.823672,-6.884427,-4.111844,9.597047,-7.611765],[-5.228480,-9.475641,4.352706,7.836865,-1.171673,-1.420284,4.722448,-1.935140],[2.181693,-0.791695,-2.405050,6.473313,7.575830,7.539749,-9.644503,8.180489],[-9.563105,-4.471514,-1.787205,6.357285,-6.422033,-4.025506,9.515835,3.969464],[6.148943,-6.536994,-2.827409,-9.208173,2.884502,-3.405446,6.708578,-2.367978],[8.539742,3.778483,-7.302654,-5.942891,-2.399038,-5.839356,-7.054011,7.630299]],[[8.169705,4.912612,1.642684,1.769876,-7.397574,-7.794161,8.665190,3.608209],[6.591047,-8.677434,0.711234,-1.623832,6.588643,-2.507786,-9.554469,3.386546],[1.655106,8.113591,-8.412500,8.506224,0.529548,-5.086211,-0.065784,9.731102],[2.428003,3.148461,5.125035,-3.496748,-5.256187,-3.942857,-6.491625,-0.458874],[-8.911569,9.566530,-6.689345,2.540697,-1.557645,-5.150662,-3.863150,9.945261],[-8.311969,-7.746500,-2.476834,-2.318444,1.670638,-0.839523,2.116533,0.692995],[-8.605741,-4.795297,0.373832,-1.903688,-3.381239,-3.397485,7.838050,-5.597405],[-6.418737,9.560325,6.739370,7.165233,-3.565673,5.896034,-4.080641,4.944907],[2.042894,9.198736,-9.809650,-0.525250,7.805644,7.605391,-4.302933,-3.308033],[-0.477206,-3.165171,0.738268,0.270409,5.483346,8.905216,9.178502,-9.821234],[2.260114,-1.436122,-3.576030,-6.403061,4.707859,-8.639902,2.946289,2.953775],[-5.239747,1.339414,8.465979,2.747135,6.740034,9.729567,8.004736,2.275192]],[[0.142177,-3.910172,7.939177,8.546764,-7.200529,-4.491092,-4.280798,-9.068685],[8.889803,6.172613,-6.872472,6.591348,4.824178,-1.347464,3.751524,2.827670],[6.313904,-3.827899,-9.081068,-7.418373,9.527172,-4.010601,-1.091663,-3.130350],[1.986143,-3.061199,-7.904950,8.715322,-2.965920,-6.731793,-8.084060,0.624958],[-0.994230,-6.217505,0.311650,8.626030,5.806253,5.890732,-7.544762,-3.389555],[8.098872,8.008908,-3.337272,9.203183,5.128785,-2.484590,-5.595417,9.152604],[5.024544,8.389147,-4.572255,0.831269,2.613911,1.044236,-7.122041,6.735480],[1.970160,0.478276,5.504134,-0.778625,5.484336,-8.029202,-6.412952,-8.429423],[5.518103,0.535439,-1.245920,-4.660813,5.282034,-8.622751,9.350803,9.177834],[-5.310482,-3.748568,5.097429,-9.894476,-0.052330,-4.804718,7.353602,-8.820274],[9.957642,-2.129919,6.853394,3.359932,7.064351,-5.123528,1.164054,9.742499],[4.342680,4.276412,-5.628483,9.678951,7.254520,-9.520559,-9.543357,7.379293]],[[-9.950747,3.585451,-5.852589,-9.387333,-5.813896,-6.851610,-2.332933,-6.270288],[-6.010036,-6.130647,2.545409,3.282889,-8.723828,0.027057,-6.219733,-4.190097],[5.315739,-5.483277,-9.975551,1.334865,-9.313220,-7.980209,6.737545,-6.000041],[-3.614519,-5.640546,-6.771029,-1.670396,7.848428,9.649706,5.114730,-7.941950],[3.127477,-5.569341,7.243341,5.139248,-1.195129,-4.865063,-8.985938,6.959676],[-6.224379,-6.598660,1.765737,7.260938,2.061464,-7.161455,-6.231287,2.384328],[-7.596824,8.510875,3.154228,2.485027,-6.958803,5.137381,-2.934513,4.668176],[-5.947610,1.310481,6.462545,3.288999,5.904968,6.601919,-2.427398,3.738929],[-1.037523,5.732073,7.543217,3.659833,-1.698531,-5.259675,2.623278,4.990808],[-2.106068,7.068682,1.478351,-3.309332,9.393545,-1.107403,-5.744701,-2.478676],[-8.602041,-1.601913,-0.648760,3.775706,-5.397770,2.393600,-4.612959,9.528093],[1.064868,-1.506814,7.122580,7.893644,-5.634325,4.823577,9.656119,0.475813]],[[7.753750,-6.224377,-9.021081,-9.409493,1.851743,-3.988567,5.046450,-1.411925],[9.517238,3.317667,1.259464,7.984853,5.708646,-2.132340,-7.840750,-0.137853],[4.157105,2.870762,6.549723,-9.453417,3.185603,-1.907066,6.530987,2.658412],[0.400164,1.542471,1.672854,-0.318515,8.085810,5.041298,-9.676695,3.100839],[-0.580401,7.660691,5.109138,6.664384,0.701738,1.668792,-1.497702,5.011524],[0.501257,2.280381,9.926146,1.455699,-8.623525,-7.732773,8.464241,0.546132],[-3.774643,2.420911,-4.970418,-5.944452,-2.190429,-4.557861,-5.679783,-4.220039],[9.795736,-4.598422,1.651577,1.130318,-2.452589,-5.845336,-7.519099,-4.045803],[8.614065,-4.274371,-0.217070,3.047389,-0.423518,6.535213,9.977056,-7.307500],[1.442256,8.134987,5.338482,2.109710,-4.049215,1.665655,1.497568,5.431523],[9.086453,-7.735909,-9.526799,-9.074111,-6.853324,4.719428,0.549012,-7.852994],[-6.121432,6.997139,-4.959107,4.056590,-3.324027,8.923088,-0.972043,-4.829154]],[[-9.299824,3.151760,-9.382326,5.661523,-0.238992,-0.946966,5.092105,-0.276071],[-9.681684,1.718559,-8.830275,4.391694,7.962806,-9.511758,5.560204,4.521531],[-1.109511,-8.255415,-9.630643,3.748576,-3.686544,-9.104321,-8.228859,4.679162],[-8.591467,2.192222,-9.152395,7.915811,-7.866883,7.409308,9.346776,8.248188],[-2.861841,-9.518136,-5.506680,0.877327,-5.263575,-5.132539,-0.623511,4.070498],[-3.533589,-4.889402,-4.917205,-4.267770,6.324216,-5.946655,-2.610106,-1.547376],[-0.768608,8.998880,-2.594381,9.772775,-7.747881,7.726310,-7.666145,2.889918],[-7.979185,3.646812,1.154744,8.954539,6.705634,1.098653,6.807666,-9.109027],[1.175972,-1.738499,-2.838040,-5.822837,4.888655,-6.102821,-1.182404,-9.903272],[4.899936,8.361393,9.129142,3.741805,4.059887,-1.869004,1.320506,-1.735588],[-0.160934,-6.909930,-2.658988,1.168731,9.461393,0.727108,8.381607,-2.593492],[0.361937,-5.473647,-9.036170,-6.522377,-4.231955,-8.757558,8.277628,-6.768589]]], dtype = "float32")#candidate|1379|(8, 12, 8)|const|float32
bop_1380 = relay.less(var_1378.astype('bool'), relay.reshape(const_1379.astype('bool'), relay.shape_of(var_1378))) # shape=(8, 12, 8)
func_879_call = mod.get_global_var('func_879')
func_884_call = mutated_mod.get_global_var('func_884')
var_1386 = relay.var("var_1386", dtype = "float32", shape = (36,))#candidate|1386|(36,)|var|float32
var_1387 = relay.var("var_1387", dtype = "float64", shape = (48,))#candidate|1387|(48,)|var|float64
call_1385 = relay.TupleGetItem(func_879_call(relay.reshape(var_1386.astype('float32'), [3, 4, 3]), relay.reshape(var_1386.astype('float32'), [3, 4, 3]), relay.reshape(var_1387.astype('float64'), [48,]), ), 3)
call_1388 = relay.TupleGetItem(func_884_call(relay.reshape(var_1386.astype('float32'), [3, 4, 3]), relay.reshape(var_1386.astype('float32'), [3, 4, 3]), relay.reshape(var_1387.astype('float64'), [48,]), ), 3)
output = relay.Tuple([bop_1380,call_1385,var_1386,var_1387,])
output2 = relay.Tuple([bop_1380,call_1388,var_1386,var_1387,])
func_1389 = relay.Function([var_1378,var_1386,var_1387,], output)
mod['func_1389'] = func_1389
mod = relay.transform.InferType()(mod)
var_1390 = relay.var("var_1390", dtype = "float32", shape = (8, 12, 8))#candidate|1390|(8, 12, 8)|var|float32
var_1391 = relay.var("var_1391", dtype = "float32", shape = (36,))#candidate|1391|(36,)|var|float32
var_1392 = relay.var("var_1392", dtype = "float64", shape = (48,))#candidate|1392|(48,)|var|float64
output = func_1389(var_1390,var_1391,var_1392,)
func_1393 = relay.Function([var_1390,var_1391,var_1392,], output)
mutated_mod['func_1393'] = func_1393
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1642 = relay.var("var_1642", dtype = "float64", shape = (1, 14, 13))#candidate|1642|(1, 14, 13)|var|float64
uop_1643 = relay.asinh(var_1642.astype('float64')) # shape=(1, 14, 13)
output = relay.Tuple([uop_1643,])
output2 = relay.Tuple([uop_1643,])
func_1647 = relay.Function([var_1642,], output)
mod['func_1647'] = func_1647
mod = relay.transform.InferType()(mod)
mutated_mod['func_1647'] = func_1647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1648 = relay.var("var_1648", dtype = "float64", shape = (1, 14, 13))#candidate|1648|(1, 14, 13)|var|float64
func_1647_call = mutated_mod.get_global_var('func_1647')
call_1649 = func_1647_call(var_1648)
output = call_1649
func_1650 = relay.Function([var_1648], output)
mutated_mod['func_1650'] = func_1650
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1783 = relay.const([[[-9.764859,-9.899669,2.335154,-2.972279,9.904605,3.634470,-7.385268],[-0.979743,-5.836849,3.156543,-0.986997,3.782613,-1.192838,-0.772063],[-6.555067,7.969578,1.971800,-6.620521,-7.716322,-3.275856,5.489314],[3.123222,-4.425228,0.366515,3.783834,6.396480,-2.511733,7.862814],[-4.244527,-9.933079,-5.061148,4.240258,0.768279,-9.957412,-7.380266],[4.576262,-5.881926,-4.411274,-7.781051,-5.937617,-3.570436,-0.786506],[-4.639327,2.166463,1.808682,-6.155614,9.458663,7.867414,6.224323],[-6.616455,-7.135683,5.134866,6.208159,9.963962,9.470578,3.930549],[-0.544787,-8.443300,5.621867,8.376543,-4.525613,-4.316563,3.053500],[-0.006602,6.879100,9.503091,0.836043,8.043861,-2.052152,-5.441633],[-6.003439,6.087565,4.695681,1.688275,1.208254,9.707766,-9.693210],[5.884823,8.948290,0.911317,-3.845520,-6.098829,9.561603,-1.726097],[4.267482,-7.413923,-2.461207,-3.229928,7.090852,1.053868,-0.125008]],[[-0.887022,-3.972904,-3.900928,-1.753809,2.774386,-5.004649,-7.892008],[1.800635,5.233990,1.598195,-4.903818,0.833911,-0.659972,-3.204148],[1.972205,-8.549809,-6.487327,8.818111,2.535368,-6.672216,2.469269],[-6.562963,-7.506621,-9.760047,-8.926443,2.830169,-4.343583,6.050509],[-4.653579,-1.567778,-6.975150,1.190515,6.921287,-8.110443,-2.560612],[5.459197,2.086760,0.383337,5.664354,-2.725004,-5.897980,-8.861839],[-9.741113,7.917691,-9.562462,0.653527,-6.448163,9.811113,3.988915],[-7.898601,-8.681914,6.850972,-6.824838,1.919992,0.898156,3.665242],[-5.047082,-9.869332,-2.757079,8.710171,4.422364,2.458421,1.997596],[5.285879,-4.213283,9.700220,-4.932461,9.917548,7.250054,-6.725250],[-7.968746,-7.358053,-7.800912,5.552372,-2.020947,7.917843,7.147720],[-9.787070,4.956068,-9.132304,6.782760,-9.318103,-6.930431,-1.828747],[-3.243118,-6.853404,3.313528,9.568684,2.187424,-0.934814,7.160776]],[[2.481760,-8.067984,-4.150804,-1.090499,-8.281688,-0.548552,6.710517],[-7.010505,-3.115864,-4.544096,7.847908,-7.164220,7.331964,6.948377],[6.881663,7.247364,-9.135032,-7.161273,2.147473,8.720527,6.136303],[-6.507134,-8.072489,-4.827560,-6.950718,-4.192105,-8.932580,-4.510878],[-4.557458,2.668974,0.896750,6.468972,0.151001,-4.387435,-9.604357],[-4.036264,7.302183,-1.302061,7.231185,-0.160102,6.585445,7.775360],[2.859945,-5.333840,9.620590,-5.329456,-3.241558,-1.457722,5.301282],[3.173281,-4.829284,4.106247,-0.397527,-7.045518,4.709364,6.557935],[8.730536,-9.557739,8.457942,-0.489407,3.213475,5.265780,-2.372267],[8.753695,-1.631960,4.133967,-3.801758,-9.058140,-4.567184,-0.689735],[9.215035,7.272442,-3.109332,-1.293698,-4.447010,-4.441921,8.530039],[8.238035,-6.121326,5.105555,7.495416,1.593095,-0.503175,7.766808],[-0.140412,-9.350978,3.912384,-2.771361,4.060206,1.415626,-4.652557]]], dtype = "float32")#candidate|1783|(3, 13, 7)|const|float32
const_1784 = relay.const([[[0.013426,9.605305,3.826575,-9.166298,-8.783833,-2.678851,3.205288],[2.264650,5.966094,-4.287246,7.667693,-1.492815,4.373378,-1.275033],[-5.746265,7.564224,5.558107,4.439091,1.015563,9.476110,7.733490],[-4.466070,3.730363,9.066192,0.984750,-8.297791,-1.235905,-3.042164],[-2.783114,1.552860,-5.745958,0.953449,-1.058785,3.695674,-5.942592],[2.280253,-6.579726,7.101696,4.044275,1.563613,-4.401349,-9.726707],[-9.717579,-8.588112,9.654957,8.180315,-3.986483,0.140408,9.012827],[-7.897448,-1.249348,-8.219198,-2.542281,-1.900979,-1.994826,-0.770989],[7.710201,3.275796,6.382545,0.963327,-9.142990,6.414126,4.496993],[0.909603,5.021373,-2.944917,3.951465,-9.865428,-6.783022,7.777732],[-4.542168,6.714882,-1.475578,-7.810792,-0.471521,8.397304,-7.772105],[2.478060,8.588179,9.903392,1.224739,-1.554176,-9.245072,-3.219514],[-7.904926,7.784105,4.107792,-5.976200,4.133330,-1.079080,-9.912891]],[[-5.021300,-5.098285,-7.290341,-0.098954,-4.569802,-5.597716,-6.924594],[7.264489,8.814322,7.212663,4.750438,-5.043441,-7.166828,-6.415674],[3.932674,-1.440564,5.049344,-1.524478,5.459114,6.948250,-1.744421],[-6.482623,-5.309080,2.246362,8.883837,-3.896529,5.487125,0.647574],[0.996322,-4.063114,-9.665998,-3.155060,7.023941,-8.466123,-1.337564],[-9.541483,0.791416,6.797794,3.765656,3.951820,4.151450,0.271404],[-9.325021,3.248066,-1.734789,2.829744,-9.236486,-7.418038,-8.712305],[-5.186319,4.657152,9.527945,-5.722217,-0.597566,4.165375,-1.647159],[-6.916757,0.309412,-5.702439,-6.841232,6.860593,-3.641607,3.551479],[0.876397,9.870123,-0.686171,4.904041,1.659771,9.830085,4.196477],[3.429660,4.300074,2.255232,5.389779,7.810810,-9.396879,8.754181],[8.921950,6.885448,-3.816721,-7.871104,3.573282,-7.194588,6.148412],[6.996269,-3.366052,9.425838,-7.204779,-6.800273,-9.558724,9.092583]],[[-8.633304,0.236943,5.084916,5.927845,1.686019,0.887377,1.298562],[8.475481,5.431200,2.629843,-4.130024,0.996423,3.871314,-3.652701],[-9.833810,-4.716036,-8.550436,-3.479765,-1.794586,0.933664,1.802165],[5.371410,-0.035530,-9.971722,3.378981,2.911600,-1.813390,-1.968949],[-6.314179,4.301274,-5.459140,-6.066635,-0.712343,-0.242385,-2.520877],[-5.063838,-4.740025,-4.074247,2.912263,-4.479592,-8.121988,-7.720426],[9.942753,-2.868331,6.188844,-6.711102,2.695489,-2.026087,1.309004],[-3.632253,-4.362607,3.850334,-9.091534,8.819508,-2.112455,-8.582200],[0.530202,3.372218,2.216218,-9.894504,-4.502721,-2.761000,0.088746],[5.101649,-2.831359,-3.356862,-1.768360,0.142762,6.610247,-8.905243],[8.134158,-9.310794,4.178355,2.451051,7.229133,3.522253,-1.347990],[8.095578,-6.618166,-7.323160,7.955650,0.159521,-4.662330,-4.893480],[9.687218,-9.766210,-5.721864,3.927542,-9.129538,-5.527861,3.509309]]], dtype = "float32")#candidate|1784|(3, 13, 7)|const|float32
bop_1785 = relay.multiply(const_1783.astype('float32'), relay.reshape(const_1784.astype('float32'), relay.shape_of(const_1783))) # shape=(3, 13, 7)
output = relay.Tuple([bop_1785,])
output2 = relay.Tuple([bop_1785,])
func_1795 = relay.Function([], output)
mod['func_1795'] = func_1795
mod = relay.transform.InferType()(mod)
output = func_1795()
func_1796 = relay.Function([], output)
mutated_mod['func_1796'] = func_1796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1795_call = mod.get_global_var('func_1795')
func_1796_call = mutated_mod.get_global_var('func_1796')
call_1842 = relay.TupleGetItem(func_1795_call(), 0)
call_1843 = relay.TupleGetItem(func_1796_call(), 0)
uop_1846 = relay.sqrt(call_1842.astype('float32')) # shape=(3, 13, 7)
uop_1848 = relay.sqrt(call_1843.astype('float32')) # shape=(3, 13, 7)
output = relay.Tuple([uop_1846,])
output2 = relay.Tuple([uop_1848,])
func_1850 = relay.Function([], output)
mod['func_1850'] = func_1850
mod = relay.transform.InferType()(mod)
output = func_1850()
func_1851 = relay.Function([], output)
mutated_mod['func_1851'] = func_1851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_1885 = relay.TupleGetItem(func_1850_call(), 0)
call_1886 = relay.TupleGetItem(func_1851_call(), 0)
uop_1889 = relay.asin(call_1885.astype('float64')) # shape=(3, 13, 7)
uop_1891 = relay.asin(call_1886.astype('float64')) # shape=(3, 13, 7)
bop_1895 = relay.floor_mod(uop_1889.astype('float32'), relay.reshape(call_1885.astype('float32'), relay.shape_of(uop_1889))) # shape=(3, 13, 7)
bop_1898 = relay.floor_mod(uop_1891.astype('float32'), relay.reshape(call_1886.astype('float32'), relay.shape_of(uop_1891))) # shape=(3, 13, 7)
output = bop_1895
output2 = bop_1898
func_1899 = relay.Function([], output)
mod['func_1899'] = func_1899
mod = relay.transform.InferType()(mod)
mutated_mod['func_1899'] = func_1899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1899_call = mutated_mod.get_global_var('func_1899')
call_1900 = func_1899_call()
output = call_1900
func_1901 = relay.Function([], output)
mutated_mod['func_1901'] = func_1901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_1912 = relay.TupleGetItem(func_1850_call(), 0)
call_1913 = relay.TupleGetItem(func_1851_call(), 0)
func_879_call = mod.get_global_var('func_879')
func_884_call = mutated_mod.get_global_var('func_884')
const_1915 = relay.const([-6.008160,0.015507,6.660394,4.835668,4.107356,-9.338859,0.316113,-8.070396,4.071939,-9.057976,3.580075,6.817662,4.992138,-3.908951,-0.087833,3.134681,4.390272,5.190602,-6.909400,8.087135,-6.893669,-9.305085,0.067086,2.344774,-6.224064,-5.495007,2.509515,4.282081,6.560546,3.092835,9.456033,4.424154,7.037157,-7.341699,6.905524,-4.123346], dtype = "float32")#candidate|1915|(36,)|const|float32
var_1916 = relay.var("var_1916", dtype = "float64", shape = (48,))#candidate|1916|(48,)|var|float64
call_1914 = relay.TupleGetItem(func_879_call(relay.reshape(const_1915.astype('float32'), [3, 4, 3]), relay.reshape(const_1915.astype('float32'), [3, 4, 3]), relay.reshape(var_1916.astype('float64'), [48,]), ), 7)
call_1917 = relay.TupleGetItem(func_884_call(relay.reshape(const_1915.astype('float32'), [3, 4, 3]), relay.reshape(const_1915.astype('float32'), [3, 4, 3]), relay.reshape(var_1916.astype('float64'), [48,]), ), 7)
func_1795_call = mod.get_global_var('func_1795')
func_1796_call = mutated_mod.get_global_var('func_1796')
call_1926 = relay.TupleGetItem(func_1795_call(), 0)
call_1927 = relay.TupleGetItem(func_1796_call(), 0)
func_1795_call = mod.get_global_var('func_1795')
func_1796_call = mutated_mod.get_global_var('func_1796')
call_1928 = relay.TupleGetItem(func_1795_call(), 0)
call_1929 = relay.TupleGetItem(func_1796_call(), 0)
var_1932 = relay.var("var_1932", dtype = "float32", shape = (3, 13, 7))#candidate|1932|(3, 13, 7)|var|float32
bop_1933 = relay.less_equal(call_1912.astype('bool'), relay.reshape(var_1932.astype('bool'), relay.shape_of(call_1912))) # shape=(3, 13, 7)
bop_1936 = relay.less_equal(call_1913.astype('bool'), relay.reshape(var_1932.astype('bool'), relay.shape_of(call_1913))) # shape=(3, 13, 7)
func_528_call = mod.get_global_var('func_528')
func_530_call = mutated_mod.get_global_var('func_530')
const_1940 = relay.const([4.559920,-4.258766,1.541140,7.831290,-0.086919,-3.260700,7.622604,1.722585,-9.032910,-3.021500,-4.428695,4.779528,-3.505756,9.713381,-7.739367,-6.660563,9.522453,7.657890,-0.188365,4.003081,5.695921,-3.935689,-9.670849,9.592899,-1.972870,9.494491,-5.496203,1.420422,9.098204,-3.670158,-6.234962,1.335948,3.605917,-0.174781,-0.596835,5.962693,8.340678,-0.660790,6.063341,0.757119,6.542893,-3.754555,4.775410,0.518544,7.669376,-0.893206,-6.208641,0.733035,-5.862917,-9.246042,9.518042,-1.644298,6.697592,-3.540297,-5.327096,-1.827278,5.982513,-2.289680,1.484161,3.765441,2.457592,-4.844718,8.598189,-9.285973,6.048737,-7.420366,-1.755160,7.957084,-2.780487,-0.831802,8.883985,-7.086073,-6.955338,0.344175,-2.104747,-1.734761,-7.439352,-4.894434,-0.276383,6.901052,0.081158,-0.770679,-9.334744,8.889499,5.879437,-5.784980,-7.706280,1.154993,1.093318,-3.912867,9.774608,1.389377,3.760783,-1.598830,-7.494502,7.891988,8.945421,1.112192,-5.993570,-7.829550,7.998802,-0.139102,-9.886771,-0.159206,6.234044,0.336041,2.623810,-7.514929,-7.014906,-3.976204,1.800869,-1.394115,1.357791,-5.400887,-7.807894,2.976770,4.530883,-7.304500,-0.550897,2.880376,1.247874,-3.285946,-0.616177,-7.432233,9.703039,0.319782,-6.098900,-4.960024,-8.059204,7.392424,3.337381,-4.882575,9.058470,-1.517204,7.402771,8.458431,2.349354,7.679385,-7.865741,-4.399623,-3.673466,-9.689350,-4.686419,-9.421253,-7.302970,5.945042,-8.766309,-7.208771,-7.829296,7.815166,3.050742,3.812625,5.503985,-9.833616,-5.875096,2.521183,-8.359102,0.234247,-9.898458,0.207253,-5.853752,4.663952,-0.328744,-6.931550,-3.473423,-8.259162,-9.788034,-3.752067,-2.811320,1.559910,-9.405154,3.033923,6.969897,6.139235,-8.741395,-8.199917,9.417308,-9.847098,0.738925,6.405229,-7.046796,2.219727,4.659259,-6.076016,-9.552706,-0.152131,5.555669,-3.588620,-5.090414,-1.706350,-4.305748,2.429094,-5.800887,-7.971577,-9.258450,-4.166955,4.256181,0.509517,1.384616,9.073039,-6.318954,-3.016575,0.458242,-9.467147,-9.066424,1.226702,8.727747,8.705453,-4.420858,5.790875,7.177021,5.059622,-0.928005,2.830080,8.842464,4.736647,-6.949626,3.647968,-1.736033,2.083239,-9.505568,-7.935570,-3.594194,-6.582761,8.160623,0.946127,7.676023,7.377654,-1.651476,5.474445,4.542328,9.635063,0.427731,-8.978211,-1.818652,-2.395486,-9.432168,-9.904104,-6.324274,3.289733,-2.609092,-2.235040,9.007768,1.468149,-0.861462,6.533833,-2.194390,2.946001,3.833532,0.120187,-7.420308,8.340615,-1.000130,5.393047,-6.749374,-4.173989,7.231036,-2.919061,5.591196,-5.180387,-9.393377,9.812024,-7.529650,-9.895246,-3.794919,6.358265,-9.204851,6.539891,-3.801457,7.582113,8.787174,-1.949259,0.820179,-2.919973,-4.675670,-7.707530,-2.022983,6.831624,1.208762,9.659391,-8.865591,-8.221813,9.357107,1.959592,-3.726221,-6.988609,1.262801,-1.436641,2.198284,1.891913,-0.881628,-1.404853,8.125978,3.331859,-2.238568,1.562367,-4.757544,3.412179,4.023432,8.841337,8.335944,-4.705200,-5.315564,4.246964,2.822012,-3.299341,7.617684,-1.640337,-7.765083,1.834339,-7.818656,8.692777,-2.607532,-3.203467,-7.213422,2.789400,3.512527,-8.457454,-3.048421,6.322774,-0.309596,9.523143,7.269988,-4.345051,-8.339751,-1.709155,-2.393363,6.803690,-3.490919,6.870928,7.691596,-4.656732,-0.081431,1.308924,4.319810,-0.594797,-6.829423,9.438274,9.638911,2.155832,8.364253,8.046361,-1.111897,-7.349428,-0.858028,6.732589,-8.896594,9.507777,-2.959854,8.164075,1.921950,3.480858,-5.091656,8.492245,-5.995425,6.264612,-7.920045,-1.414776,7.732835,7.145689,-9.489013,0.025859,6.413798,0.819209,2.159330,8.945320,-2.855890,-4.614802,2.528123,-3.572199,1.429410,9.224251,-3.194172,-1.980290,-2.492950,-3.170150,-1.431826,7.469311,-6.635243,7.904331,5.132264,-6.939052,2.642754,-5.942356,0.046903,-2.155143,-3.405924,-6.203936,8.848288,-6.081325,6.670848,-8.697442,2.372319,0.793274,-9.765076,4.133029,4.312354,5.225754,9.402086,2.116713,5.702712,7.441632,7.540376,-7.457495,-8.769048,-2.198612,4.986159,5.586280,-7.750895,-1.786640,5.714878,-8.187971,-5.599653,5.366776,-5.260041,-0.067433,-4.138368,0.992130,8.017529,3.757675,0.893984,4.295245,-2.764883,9.736770,8.361448,-2.963407,9.589280,6.617850,-8.489761,3.837125,2.994392,-5.411852,5.614532,5.327649,-3.901827,-1.956809,-8.759128,-2.911034,-4.420647,5.104408,-6.035404,-2.374541,2.680025,5.774810,-9.719133,-9.793184,-5.832796,-8.080238,-0.107013,-3.825883,-0.116312,-8.978806,3.516154,7.282522,-9.711152,4.385497,-7.153419,2.327271,-1.207817,-2.761989,1.664653,-1.156638,8.424245,-3.824186,7.803812,-5.437619,3.222979,-5.004395,-9.406292,8.447141,2.426171,5.926997,-0.941240,4.737390,5.852762,-3.075052,-7.037895,-0.902652,7.644108,4.882320,4.055622,-5.038919,4.828406,2.078218,-5.826457,-6.021645,-4.530769,-9.658155,-6.471179,0.571735,0.472256,2.127050,-5.606732,3.045419,-9.268236,-2.601334,2.295591,-7.795749,-2.122585,-0.033077,-6.332505,-3.671486,-1.185375,-6.893273,-5.559000,-8.406603,5.545507,9.696650,8.763841,6.824435,5.280256,2.994869,-4.591827,2.088871,-9.811673,7.309900,6.699136,6.313502,-4.136163,-2.305894,2.576745,-1.277488,-0.656200,-3.032574,0.282810,5.913034,-7.956445,3.928923,9.829732,7.528459,-3.842589,-3.890375,-1.565093,1.766030,6.611692,1.685595,-0.995477,2.657524,2.881231,-3.323278,0.860310,8.231432,-8.148937,-2.407360,-5.689312,0.260429,4.395581,-8.897196,6.265682,-2.651062,2.357427,0.703590,-6.663296,6.272906,4.698002,-4.013857,5.283024,-6.143051,-0.231000,7.884907,-3.951481,2.765050,3.769004,3.585421,6.360006,3.470499,3.478210,-8.244292,-5.169890,2.509700,2.202967,-2.003556,8.694810,-6.300675,-7.603550,-5.930260,0.189683,-5.264608,3.701518,4.029784,5.729891,-5.893021,-3.945006,-4.508975,-0.520125,-2.511226,6.199100,-5.419265,5.751929,-7.587337,1.471657,-4.728546,-7.779530,9.330370,-6.967145,-4.188436,3.065162,-1.628288,1.473156,-4.296939,-1.195264,4.994192,-8.108824,-9.146373,8.071576,6.698125,-9.495739,6.679357,-5.632508,-0.172528,3.420250,-8.840604,5.446464,-9.390842,-6.576336,-1.792818,4.448905,-3.690472,-7.166636,0.831724,-9.128960,-8.261436,-1.243407,4.298009,-7.822351,4.743091,1.103575,-5.170700,-6.627387,6.018885,-4.092521,0.146385,-0.787543,3.030832,3.909490,-3.411495,7.925802,-6.070875,-0.490258,-9.112937,4.554298,-1.515347,4.362639,-2.777998,-2.789490,-9.928917,5.670917,-0.126081,-3.535829,-2.833016,0.328148,5.376660,1.206307,-8.699534,5.034438,-1.849779,5.109547,8.217123,-0.112475,-7.551916,-5.292891,9.278331,4.653079,5.996584,7.990230,0.339525,-2.640028,2.506653,-8.292381,2.970658,-7.446139,-6.560497,-3.313359,-6.298813,2.186145,8.780813,-5.594181,-4.607816,7.760049,2.441026,5.980393,5.115123,1.880926,-6.113477,-8.364070,9.087430,0.085120,-4.323249,-5.283039,-2.371102,-7.534932,7.951457,-5.359006,-2.257255,9.740734,-1.682221,-4.458572,-0.834075,-7.143600,6.736119,-4.911092,3.421893,-7.697787,2.052977,8.995534,8.254406,-6.695702,-0.947643,-8.685408,-6.350850,-4.203786,-8.823012,-6.582338,-3.231890,9.192775,8.676051,-4.452347,-5.877111,8.027882,4.467731,0.378204,-9.387248,5.637704,8.355426,6.959494,0.170290,-3.599264,-7.911374,-3.402946,-8.628781,-3.282665,3.611933,-6.486057,3.099941,-9.042589,-5.207030,8.683507,6.287030,7.767568,-8.891634,-0.896610,-8.492496,-4.334078,8.987381,1.814656,-5.436516,8.546115,4.095993,9.341753,8.995626,9.534039,-7.005338,-3.634209,-5.619209,-7.610761,-5.591721,-9.000691,6.725656,4.403229,-7.310149,-0.230365,-2.193218,-2.890028,-7.960863,0.086633,1.663117,7.666639,5.681416], dtype = "float64")#candidate|1940|(768,)|const|float64
call_1939 = relay.TupleGetItem(func_528_call(relay.reshape(const_1940.astype('float64'), [3, 16, 16])), 0)
call_1941 = relay.TupleGetItem(func_530_call(relay.reshape(const_1940.astype('float64'), [3, 16, 16])), 0)
var_1942 = relay.var("var_1942", dtype = "float64", shape = (3, 16, 16))#candidate|1942|(3, 16, 16)|var|float64
bop_1943 = relay.greater_equal(call_1939.astype('bool'), relay.reshape(var_1942.astype('bool'), relay.shape_of(call_1939))) # shape=(3, 16, 16)
bop_1946 = relay.greater_equal(call_1941.astype('bool'), relay.reshape(var_1942.astype('bool'), relay.shape_of(call_1941))) # shape=(3, 16, 16)
func_493_call = mod.get_global_var('func_493')
func_496_call = mutated_mod.get_global_var('func_496')
var_1950 = relay.var("var_1950", dtype = "float64", shape = (315,))#candidate|1950|(315,)|var|float64
call_1949 = relay.TupleGetItem(func_493_call(relay.reshape(var_1950.astype('float64'), [3, 7, 15]), relay.reshape(call_1914.astype('float64'), [48,]), ), 2)
call_1951 = relay.TupleGetItem(func_496_call(relay.reshape(var_1950.astype('float64'), [3, 7, 15]), relay.reshape(call_1914.astype('float64'), [48,]), ), 2)
uop_1953 = relay.acosh(bop_1933.astype('float64')) # shape=(3, 13, 7)
uop_1955 = relay.acosh(bop_1936.astype('float64')) # shape=(3, 13, 7)
func_962_call = mod.get_global_var('func_962')
func_966_call = mutated_mod.get_global_var('func_966')
const_1957 = relay.const([-1.818469,3.310028,7.805431,4.231794,-6.097906,-2.342198,0.823919,-2.268468,0.806738,-0.696380,7.782734,2.264584,-6.161119,6.129189,-9.542929,2.973767,5.991353,-4.741763,5.004702,-9.271347,9.784200,5.644813,-3.792202,9.150500,8.528901,-3.738082,-0.576086,2.623536,3.844802,-7.465395,-2.298176,6.326544,3.399391,-0.731094,6.767006,-6.705633,1.573446,-6.679658,0.040667,3.716847,7.137463,1.378103,5.952946,-8.749956,-8.030199,-0.963082,-5.859023,-2.492039,-1.479907,-8.300838,9.559434,-3.316652,5.878344,0.148816,-6.208090,1.009886,-0.542284,4.666600,8.888640,1.011538,2.561736,-9.622574,6.121903,8.743653,0.143496,1.294208,-7.675267,2.287454,-2.023537,-2.497611,-5.054636,3.044302,-3.662062,-2.987813,-3.390384,9.222398,-3.399440,-4.442002,-6.756687,5.093494,7.542343,1.055079,-9.711791,3.038087,8.847114,-8.604762,3.339387,-2.142470,-3.706936,5.931307,-0.376315,-9.096261,-2.658412,-9.344612,-4.560956,-4.005745,5.733352,0.806331,7.222788,-0.974790,-8.131102,-7.338811,-8.762681,-9.186995,8.506075,-8.076301,-9.344047,-7.253732,0.653646,-2.083593,-7.598294,6.737762,-5.743694,-4.497409,-6.812109,-9.102380,3.893736,-1.015504,8.401723,-7.938341,4.393937,9.281799,-4.341142,-7.801571,-6.220891,3.905222,-6.683918,-5.660402,-6.806912,-9.408017,-1.012470,7.728760,0.202248,9.750096,-0.494081,2.321650,-9.149027,-3.865970,5.503591,-6.692979,5.873081,-8.012939,0.996057,-3.109667,7.488456,-8.879586,3.011185,7.773140,3.472136,8.998958,2.801417,8.563848,0.405352,-4.763771,1.314825,4.786198,-9.062925,-7.682183,-6.351940,2.504088,3.235425,8.749067,-6.861151,0.308940,-2.197004,6.571313,0.566994,9.278113,-8.940684,5.090521,0.391336,-5.882643,8.603032,4.665327,4.674457,1.979335,-0.279430,5.959305,-3.710240,-4.847735,-1.431831,-4.146181,4.904739,-1.570228,3.477103,9.768533,-2.710048,-1.133801,-7.720402,-7.784636,5.920805,-6.425901,-1.376833,-1.484457,-8.344109,0.239953,-1.486021,-1.866370,-0.044504,-4.177409,5.352436,-6.194399,3.924913,7.208299,-7.942815,-2.773838,9.172460,6.152482,-7.202307,-2.861236,-5.204280,2.637988,8.742805,-0.376732,0.627522,0.115690,-8.386971,-3.782857,7.901810,2.342650,4.145774,6.771616,-7.829953,1.268181,-0.524944,7.911068,3.404125,8.034245,5.770654,-8.770145,-2.794009,4.524656,8.292573,0.685602,6.342166,-0.035249,-4.161738,5.968554,-5.571393,5.905899,1.165313,-2.871538,-1.027191,3.459622,5.712385,-8.438851,-1.666040,1.812158,3.392966,-5.979173,3.869461,-7.266596,-0.294749,9.842390,-0.485921,2.412158,0.507531,-2.661783,8.229278,6.994074,-8.834309,2.217779,2.239944,-8.736788,6.438303,0.070282,-7.327920,-0.765387,-8.506390,3.250913,-4.489957,-7.493462,-8.060102,9.492991,-7.120188,2.066618,-3.053459,6.641590,3.363585,2.686821,-8.899150,9.912527,-2.691878,2.177501,4.755527,4.310109,9.507455,-5.994290,-0.078535,-1.162714,-3.327512,5.133576,-2.451586,5.705362,6.953261,-3.608953,3.599173,-4.181098,7.173853,-5.233046,-6.794583,-7.749841,1.779334,-3.729812,9.484647,1.882249,-4.600465,-0.891386,7.291583,-8.827270,-7.523730,9.207225,-2.829063,0.148924,7.580025,6.964517,8.342830,-2.723229,-3.757781,8.763073,0.833173,4.368858,9.506812,-8.373204,7.336921,0.810473,0.151392,-0.262369,-5.193596,3.744022,8.022257,-4.849847,-6.014960,-7.149731,9.402744,-1.663204,-3.885735,-6.559716,-4.561128,-8.017480,8.176134,2.975019,-9.419793,-7.462578,-9.355350,2.093548,-0.082850,-0.604715,-5.415505,2.130663,-5.072354,-8.591643,-0.558150,9.222316,0.500097,-7.995369,2.844263,0.730442,2.695906,6.927546,8.010710,-7.219132,-1.142765,-1.565767,7.029080,-7.424648,-3.463510,-5.834233,2.948342,4.939567,8.426005,4.196742,7.743739,4.505865,-3.946082,-5.935543,7.410423,-5.876305,-4.385878,-5.536674,-5.416397,6.579839,5.524472,2.340143,3.550622,5.659247,1.629498,-8.403928,0.003382,5.018642,-0.362218,3.928117,-7.381739,9.145283,-6.430601,-9.152127,-5.741455,0.915308,1.603012,-9.358254,4.036494,-1.996953,-2.216715,-2.326448,-1.563784,8.733782,8.108610,-9.593997,-9.066225,-3.588231,8.207548,-6.907951,4.322722,2.611440,-0.190854,9.008929,1.819887,-2.283663,-2.230696,9.183214,4.340889,4.528400,5.469764,-3.796942,5.072184,-6.354296,-4.228870,-6.417673,1.596930,-3.784785,1.919281,6.073099,9.836687,-7.745718,-1.880192,-7.458016,0.426755,5.268024,2.630572,-9.393589,-1.404372,7.014475,5.428974,-1.425283,5.991659,4.761550,4.634289,7.644630,-0.046968,-4.824727,9.715773,-1.235687,4.226871,2.265840,-8.175577,4.957039,1.214840,1.235134,0.001871,1.688607,-5.032373,5.478273,1.099450,7.866777,1.179091,5.280964,-0.633105,6.869494,4.070918,9.524090,-4.733060,-8.238543,9.754127,8.084636,-0.406938,-4.242180,5.038217,-1.502194,-9.090253,-8.927357,7.033804,0.078751,-5.975202,0.436750,2.099599,1.163992,-9.021372,2.508763,6.686809,-7.573866,3.244561,-0.600533,-8.162486,-4.362301,-6.736065,-0.882444,-0.163410,-1.256835,-3.202423,-7.555384,-9.138733,-4.792308,3.734564,-3.931148,-7.559396,-0.564627,5.894737,-0.951066,6.098733,2.554510,3.255858,-2.760825,0.300343,-9.458696,-7.106092,2.209197,-5.640089,0.393872,-0.288216,-7.776883,-0.042196,-7.165123,-9.543989,-0.494912,4.798500,8.157324,6.402232,-1.563781,-3.698854,8.510842,4.072822,7.828033,-1.975194,-1.533086,4.601314,9.187471,6.464030,8.370223,-7.703545,-5.377786,5.393794,-5.033813,6.179532,0.271213,-1.650131,-4.698624,-8.110520,7.522957,9.933489,0.456651,1.031510,-4.309506,-1.666210,-9.497118,2.722479,8.533292,-7.056398,-4.112457,-3.497229,-4.912669,-6.584781,0.511028,-0.052944,0.633436,-1.346478,-2.189755,2.816547,-4.747309,1.429100,-9.818312,7.776547,7.364075,9.789413,9.231755,-9.613433,-3.203626,6.694924,3.751643,6.717573,3.460785,1.998502,7.496116,-2.177710,-9.026563,-7.609811,1.824698,-9.566415,4.759905,-3.709975,-9.048641,-6.488480,1.499250,-6.159139,-2.727447,6.205645,9.682893,3.374780,3.359109,-7.825812,5.541765,-3.905278,7.600709,-0.080397,-6.769187,2.471369,5.423805,-5.595896,5.043009,4.904422,-6.343402,5.157117,7.958116,-3.279621,5.362956,-2.304625,0.953170,6.000297,-6.207568,1.506371,-5.068276,5.394762,8.009050,-8.609007,-1.985328,-3.173903,-9.218231,-3.685189,-3.606371,-8.958831,3.337111,5.579174,0.523013,4.652252,-0.221043,-6.632982,-0.610952,-6.716806,6.987957,-3.387128,-5.204996,-8.422127,1.927246,-5.700954,9.987422,4.824569,4.234056,4.485658,6.038022,-6.767790,-2.575767,-5.068201,-8.918404,-7.363645,5.554971,8.365863,8.212146,-2.989384,-1.987115,-3.133173,8.706338,3.773655,-2.349182,4.556431,7.588256,9.065962,-5.033304,-3.943028,-1.506723,8.521970,-4.353247,7.386660,-9.357017,-0.181756,-2.812473,1.983475,-7.524987,1.711270,4.915103,-2.897399,-1.363468,-4.388852,8.393601,-7.583827,6.345701,8.433474,-0.352785,7.366434,-4.073297,-7.804083,0.683386,-9.060950,-7.753766,-7.480147,-4.932796,-7.538307,1.401724,0.174931,-6.087347,-6.152086,8.448984,7.748492,8.076938,9.912149,-3.144705,-6.301384,3.980892,8.553967,-9.601003,9.920384,-5.887893,-5.566662,6.297639,-2.493288,2.157336,5.291550,-0.750631,-3.842853,-5.360653,5.523346,1.615427,-6.691269,-8.141527,-0.413598,9.778275,3.770026,-3.374921,1.537204,8.519890,3.054203,8.232451,-2.352038,6.036382,7.968908,-3.783103,-9.601034,-6.950946,-3.705679,-3.475482,-0.983919,-7.744216,0.052796,2.922831,-6.755878,-1.945668,2.422635,4.547323,4.487651,-9.729697,-5.466789,0.650313,2.750095,7.612204,-2.251985,-4.065356,0.608393,-7.346472,3.505254,-7.575684,-7.011281,2.218276,-4.347275,3.607724,5.732311,-2.902017,-1.334956,-6.237323,9.221634,3.983134,1.449745,-0.357353,8.442834,7.990284,-7.807095,-8.395629,-7.789609,-0.449407,-1.756801,-2.369803,-4.412202,9.158608,-5.796604,-7.014854,9.176581,8.173161,2.475214,-1.894464,-0.293184,-1.695661,4.709590,-1.220682,-1.101416,-4.196625,-3.170650,8.404871,2.220175,-5.222039,-8.759780,7.436531,-6.471463,0.992093,5.206290,-4.841301,8.973176,-4.522478,-1.509944,4.121607,-0.087060,8.654674,-2.637076,6.179011,-3.392162,-2.632460,-4.487466,-3.025332,-2.705829,-6.887852,8.844519,-7.642845,1.794423,5.990336,0.503867,4.707015,-6.880165,-0.234256,4.445946,-5.170032,4.656073,-7.050414,8.544172,2.941374,-5.240820,0.280419,-5.162297,9.749617,-7.870514,4.013064,1.976430,7.498443,-7.843078,-8.173414,2.283376,9.633189,7.239813,-1.039821,-2.368612,3.918052,-6.075976,1.753169,-6.118606,-4.557644,7.354393,-2.550039,-8.075439,6.970167,9.952696,-6.615701,-9.450733,-1.762303,-4.041544,-3.386086,-7.427004,8.186096,-4.029723,1.394541,7.431927,-6.103979,-8.699947,4.540198,-8.847470,2.184147,7.398529,3.663710,8.131922,3.632099,-8.844582,-1.869275,9.661597,3.776701,-5.947392,-0.921929,8.737917,5.308299,2.074881,-8.375212,7.022898,-4.798153,-2.377565,-3.548103,9.739456,6.447171,-4.563495,-7.428937,2.871325,9.695787,-5.846113,-5.146855,-1.376301,8.435430,-8.210592,-0.989146,2.126424,-3.102902,-0.340721,3.123284,7.524294,6.028300,2.207760,2.702946,-2.990200,-9.898637,3.946102,-8.860852,-2.303610,7.569304,3.583877,-2.122631,-4.966930,-5.752695,-8.746384,-6.273533,-9.973619,9.951601,9.471743,2.362975,1.309297,0.502183,-8.175096,3.625039,8.503613,9.833221,-4.630164,-2.635281,1.766065,4.974398,-2.422483,5.096447,8.717348,-5.736355,7.351788,-3.466914,-3.848456,1.390389,6.942603,7.001959,-5.532277,-5.482587,0.813485,8.229064,5.918777,-8.595743,1.274552,4.288562,-1.983024,4.607624,8.255835,-9.610746,9.538416,-0.220597,-6.454602,-2.752573,-6.687147,5.484338,1.617639,-1.203940,1.798091,-7.685796,-9.646020,-0.462584,-3.746535,2.725820,7.926946,1.552716,0.106781,-3.293298,0.604556,-8.421785,1.695701,0.843791,0.949413,4.128922,-3.625329,3.953990,7.621551,3.519107,7.800277,7.164256,2.388735,-2.453181,-6.584110,-6.068639,4.143719,-7.045626,9.769833,6.672801,7.480825,6.629423,-2.710685,0.413380,-2.526276,2.980509,9.362537,9.912722,1.134697,4.999094,-8.205515,-8.143648,7.138414,-3.189726,-5.571491,9.932224,-9.490978,-2.417799,3.841095,2.127164,-0.639572,8.863331,9.772755,-8.932522,-7.459237,3.641067,-1.411853,-9.228778,-3.755391,-4.532582,-0.353970,-0.808858,-1.390311,-3.789378,-5.536268,-9.984385,-9.460419,-5.983910,-4.915278,8.128898,6.321700,6.217899,-3.157188,7.124798,-2.357928,6.174496,4.472362,0.435457,-1.445239,1.772146,3.659145,-8.290667,9.079788,-3.760893,8.523286,4.672911,-0.549889,-2.371043,-0.221991,0.686749,3.535045,-2.189326,-6.162049,5.960973,0.835760,-4.328356,-1.080409,-8.110783,2.434967,1.401611,-1.729487,9.559703,9.820795,6.992764,5.237876,-2.370621,-6.795619,6.077974,-8.404667,5.572021,7.947421,6.041057,-7.016768,-6.573150,-7.878413,5.639565,-8.601379,9.813116,-5.161594,5.072142,8.173345,5.060018,-2.259816,-4.042313,4.812795,-7.291011,1.588257,-4.640056,-0.052619,-7.291688,-6.836535,9.822209,-8.407190,-9.110579,-7.741315,0.186284,1.406222,1.325537,0.524070,-7.271404,0.811228,-7.474484,-5.488565,0.117744,7.792306,2.697265,0.574827,-4.945105,7.143484,-7.486749,-0.324273,7.473957,-0.126183,-4.310887,3.551514,-7.565185,5.717995,1.483938,9.852291,-3.845282,-2.514797,-3.365490,6.599665,-4.742622,0.180426,-2.179115,-6.257674,4.943525,-6.017172,-7.323060,1.845438,-3.518218,5.440101,-9.342910,-8.478161,6.882882,4.649152,-5.258202,-8.122992,4.424233,-8.091271,-5.348933,-2.650583,9.249597,0.046551,-8.457149,2.450396,6.704759,-8.165121,7.083072,6.648998,-1.580227,7.945972,8.674748,6.637775,7.003714,-9.973219,-4.856426,-3.734361,3.325954,9.512697,-5.961416,-2.921618,-2.037111,5.573255,-8.675493,-3.172364,8.480332,5.844306,-2.136459,-2.892669,-4.293966,0.146908,2.725946,3.498268,1.951038,-5.556119,6.936654,7.377459,1.409663,5.623858,8.922563,-3.382894,6.739173,9.953280,-1.322881,-2.181500,-4.020242,5.112676,5.853698,-5.908846,-8.223054,-6.365575,-9.920342,8.381650,-7.714264,1.763158,-6.876380,0.077411,3.165378,7.040568,-5.627178,6.548537,8.600296,-9.181547,8.463838,7.257457,8.587528,0.549356,-2.799290,4.503863,6.079046,-6.543839,1.292020,-1.896325,0.604711,-9.293315,9.065016,-8.437247,5.604310,9.458866,-1.860487,-4.638474,-0.824007,9.373999,-9.270235,7.778462,9.698378,4.024962,8.864445,3.411903,-0.063626,-0.152739,9.902225,-3.653934,7.099251,3.640436,2.746597,0.896076,3.710814,-0.529430,-8.873785,-5.609817,6.030011,-5.648270,1.987083,5.648820,5.405543,4.199989,9.991774,5.777324,2.449908,-1.539427,-1.674929,-7.445329,-1.755242,1.045236,-6.245705,-8.123838,-0.706848,4.297325,-5.284072,6.523636,-9.023953,5.483016,-8.443346,4.970592,8.548739,-6.149760,6.586327,-9.614590,1.467781,-6.167670,7.089744,-1.115344,8.040520,1.641488,-0.799055,-6.145088,5.199665,-0.422917,-6.817288,8.539959,8.560035,-1.624668,-2.794791,-7.190597,-8.368982,9.168493,1.658641,2.822932,0.064634,7.564225,2.009099,6.779947,3.975332,1.406445,1.056672,4.551391,-2.374173,5.037902,-1.501837,4.768121,7.031676,-0.892069,-9.517116,9.683143,-1.841734,4.440018,-8.587794,-3.115582,3.446945,-7.803670,-8.042237,9.584291,2.026028,7.155952,6.111654,-8.957991,-0.949385,7.623930,4.275485,-9.695473,4.546252,7.275979,-1.999911,9.472451,8.639727,-6.868503,-7.246143,0.540455,9.759490,8.977799,9.199677,5.787770,1.003836,-8.965112,9.643320,-3.568195,-6.819605,9.030834,-6.262078,-6.089202,-0.211017,6.638161,0.183757,-9.165032,-6.125858,7.928631,1.080202,2.130186,6.181112,2.074623,-4.300413,-4.063288,-7.495779,-2.989869,-6.425207,-5.038519,7.084733,2.999552,-4.422768,1.846531,-2.269852,-0.263634,5.798835,-5.569404,5.612353,-1.470115,5.821766,1.001464,-9.616645,-5.593133,-4.019203,4.113907,3.937314,-0.761196,-7.201182,-3.003713,-9.470167,-3.328703,-4.834728,5.051121,1.523526,0.692378,-6.568635,-2.745659,-9.058215,1.854167,9.096858,2.296473,-3.973528,5.216869,2.763526,7.742271,-8.262226,-0.459172,-3.065711,5.122699,2.477060,-2.491879,0.879741,-7.020183,-0.676850,-5.945139,-5.003448,-0.644848,-1.770590,2.484479,4.312673,0.045804,-0.959678,-0.611177,4.062341,-9.194331,-3.473455,-3.376754,0.048737,-7.452139,3.914048,-6.053496,-6.686557,-2.978646,-1.182576,-8.380877,-9.715210,9.045955,3.677657,7.342935,6.635042,3.684169,-0.606371,6.930925,-7.820750,3.880307,6.927186,8.373791,-2.715205,-4.471165,7.443244,-5.507182,-7.936429,9.243544,6.675743,4.430523,-2.748963,7.426888,-7.061805,7.691093,-3.104679,-7.152745,-0.771829,0.913939,1.663270,3.806762,-5.502925,-6.164799,2.120573,5.792499,-2.335578,-4.276310,0.977413,-2.896317,-9.247864,0.941032,-1.985019,-5.662942,2.922805,-9.234995,4.002830,-4.765721,0.886018,1.078549,-1.561556,-8.853713,5.957342,6.259389,-2.202631,-9.905163,7.060661,1.881574,-9.528683,-5.190867,8.155222,-4.199517,-9.070531,-4.399771,-1.555667,2.788023,-1.508730,4.735272,-8.500808,0.494812,-9.979898,3.970076,2.433290,-1.940771,5.208216,4.159543,8.194662,8.326852,-4.244982,1.511087,6.174866,7.753931,-8.158254,9.198930,-3.893485,8.834419,9.095729,-4.958983,2.689626,-9.332904,-5.437509,1.973253,6.503044,1.406575,6.654326,-2.427806,8.123656,-2.168787,5.419854,-4.964761,-0.398444,-4.132992,1.164513,-3.960855,0.613965,5.567745,1.874899,1.915625,8.989094,-6.496087,-1.990230,-1.740318,8.066157,4.178976,-5.928379,-6.295342,-8.643067,-6.439503,7.168570,-6.873345,6.829566,-2.323863,0.924337,-8.097734,6.801873,7.635838,2.092469,7.721718,-7.072944,7.154636,1.736918,-5.687758,5.552459,3.247218,8.444215,5.065702,9.998148,4.223769,-5.224882,8.257923,4.607362,8.608114,-9.486032,4.788471,6.461598,-0.425013,-0.203723,-0.228706,4.793439,-4.000984,-4.547944,-1.763561,-5.664950,-6.411399,3.852888,-1.107693,-1.636012,1.343729,-8.624562,9.749262,-1.108836,-3.841273,-5.516780,-1.987089,-8.866313,0.744366,-0.062353,-5.957564,2.266209,6.645080,2.709387,5.683905,6.411120,-8.706038,9.517446,-1.267964,2.121528,-4.965081,5.351013,-1.386020,-1.112881,-2.315913,1.145922,5.099118,9.902602,3.576016,-2.897617,-2.109972,9.732760,8.271027,7.884863,-5.929036,1.810667,-4.509726,9.739110,-1.345623,-8.983197,0.828970,-5.518951,8.929429,2.803635,-0.825679,3.782918,-6.175055,8.507902,-0.455195,0.430137,-0.153716,3.531258,1.394335,4.158930,-9.621168,9.762111,9.989450,-5.535662,8.361322,5.580255,4.972432,7.925434,8.667140,-4.877597,5.479447,8.671737,-1.145302,-5.573337,9.584631,2.287885,-7.137497,9.385723,-6.165836,-7.550167,-4.218342,6.437090,-4.083452,3.812930,-7.898637,2.406979,4.799852,7.671853,-5.429917,1.652792,6.532894,0.915301,8.149087,9.018587,0.908106,-6.953310,1.210122,1.181772,-7.442675,6.357723,-3.942031,-0.407229], dtype = "float64")#candidate|1957|(1680,)|const|float64
const_1958 = relay.const([-2.444476,-5.423782,-8.231669,-8.070337,2.265887,2.558601,4.286733,-4.349182,6.332809,1.608137,7.495774,1.110962,7.437999,3.366754,-7.189173,-3.380733,4.066405,1.380815,-2.664160,2.429697,4.372164,2.775903,4.766670,3.648881,-7.919309,5.054903,5.614729,2.108255,-8.364410,0.919286,-4.393195,0.426639,-6.763077,4.280658,-1.005408,7.237386,-6.140022,5.543905,-5.161124,-8.009624,0.371672,-5.182263,-2.088215,-4.303794,-0.898605,-2.402660,8.080182,-7.767467,-0.686010,-0.772777,-5.033137,-6.215619,9.083711,-9.811398,-1.544268,-0.294715,-3.788261,-5.510375,3.437907,1.876508,8.716188,-9.270695,4.866883,-6.819054,-4.938080,6.639927,-9.497459,4.284640,5.203961,3.577319,-9.281755,5.654127,-8.488998,-5.894994,-4.889261,6.930263,0.066090,-4.087032,-6.643282,-2.304309,-1.732910,3.640719,5.458820,-5.555013,-7.967594,-3.613804,2.524063,-7.375917,-8.142789,7.315811,-9.271565,-8.952933,-9.337186,2.660163,9.605836,-2.143961,1.640186,2.615734,-7.275584,0.499525,4.275931,-7.495547,6.992020,6.477837,3.829488,2.710659,9.550422,0.268742,-3.915566,5.609862,-6.242284,8.031746,1.636088,-9.829993,-3.646101,1.677194,2.636523,4.207822,-5.271922,-8.831912,1.204347,3.628117,4.631965,4.121724,4.366418,-0.532048,-5.093835,1.339394,-7.062203,4.544955,5.266248,-8.689905,-2.053327,-8.020114,-8.666467,-4.947969,-4.443504,9.032334,-0.927722,6.379432,9.471168,0.037636,-8.174577,1.878819,-7.140983,2.720029,7.595972,5.322147,7.975048,-9.550120,-9.382411,-7.538078,6.228760,7.172743,-8.352284,9.546786,-2.231999,5.623193,-3.628243,3.557592,0.331506,-0.872853,-3.248917,4.358875,3.388867,-4.783527,-3.174604,-0.775873,-0.494834,-7.252213,4.665587,-7.356904,-1.708325,-2.458812,-2.674296,-1.957197,-1.542777,1.006922,-5.614217,2.843716,-6.936890,5.871128,-2.516113,-6.777876,6.695395,4.048670,0.554466,-7.683348,7.485769,-6.056679,-4.578214,4.404416,0.296923,-2.566499,7.651645,-2.598060,9.448240,0.410400,4.373777,-9.790084,-9.278753,9.747050,2.668322,3.248654,-6.183533,-0.592783,-2.830758,-4.141767,-5.864713,4.211828,-5.813786,-2.353464,-9.237302,8.632388,0.795367,-0.463986,5.777578,3.440350,-6.419740,9.237972,-4.645326,1.729406,4.723251,7.215262,-7.687227,-1.857087,-5.228517,-8.177692,-4.806070,-8.520049,7.023586,1.383870,8.550422,6.196998,3.588511,-5.150474,9.966742,4.465860,1.089195,-3.318729,5.340398,-3.567353,7.698715,-4.462424,-7.195198,-4.765183,-7.152328,-8.364392,-0.053595,4.765175,-7.189176,-5.986815,5.804894,2.304877,-0.812594,9.863866,-4.991665,7.069258,-1.281742,7.636261,-9.272523,9.669785,1.485698,-2.818386,6.041999,2.863580,-1.239185,3.661383,6.714497,-0.941734,2.466522,-2.653019,-1.701289,3.737296,2.363524,9.942121,-1.401833,-8.439861,7.528724,-9.348249,-4.054940,-0.892864,7.673126,8.895589,-0.287623,-5.339989,4.690219,2.263528,-9.142665,-6.209475,7.668863,7.484601,-5.350009,8.482754,3.100848,9.028677,-1.718323,-1.355011,1.671437,-3.290045,8.124860,4.085726,9.300640,-3.623596,-5.243115,-7.978890,0.298646,2.800855,6.164466,1.038272,-9.429682,5.512907,-8.829900,-3.895019,5.975646,-0.279853,8.039119,4.487282,-2.805111,-7.823360,-1.823661,1.046734,4.228649,-9.944573,6.968197,6.418236,-4.752230,-6.092984,-3.588063,-8.916933,-1.057008,-6.820165,0.963393,-1.355210,-6.451404,-3.764748,1.987515,-8.180894,-9.565890,-7.834459,-8.885304,-4.783556,-8.520562,8.882713,6.270086,-5.156129,-5.438992,-9.353715,-0.151739,-2.218358,5.979158,0.303563,-2.452778,3.704189,-2.638834,-6.042421,7.219408,1.031931,-2.497538,-6.676906,8.475648,5.664175,-8.450352,2.949162,-3.132170,6.331853,-6.901732,3.364516,-3.390414,8.801045,-6.442509,1.982182,-8.887371,6.399782,2.080144,8.651669,-2.972645,2.842607,-2.491865,7.831190,-4.803640,-5.292993,1.729075,8.684292,9.596460,9.939891,-4.770145,8.671671,9.698567,9.567244,7.164345,1.132935,4.263781,-7.846761,0.343618,1.065524,-8.048693,-6.029561,3.059464,2.097988,1.177417,-6.427407,7.324994,-8.795521,-7.162084,4.827460,-9.275465,4.603462,2.426265,5.666237,1.300667,-2.742306,2.763695,0.600116,-4.634870,8.638156,4.340084,-1.109505,3.406726,-8.327632,-5.081921,6.808670,-6.322753,1.318289,-3.450081,3.323653,0.264886,9.424285,-7.908891,2.388379,5.896327,-8.035271,-8.102019,2.181718,-8.192761,6.654087,-1.402789,1.305726,1.328112,-5.076517,-7.658903,6.920266,-7.771741,-6.861907,9.829868,6.449125,-7.195701,-2.850271,-9.327876,-4.506601,1.818207,-1.524120,9.837761,-1.657298,-1.790419,-8.083686,-3.904406,-7.211856,7.536083,-9.840041,-6.913467,0.045776,8.641219,8.064631,-4.832269,-1.849215,9.454488,7.312868,4.728939,0.101036,-8.122554,-1.409684,8.567977,0.620877,3.308971,5.796842,-9.141031,-1.848813,-0.627000,3.509853,7.670758,-1.758814,-3.438058,3.133140,-4.877450,0.663354,3.707023,0.574927,-1.225118,7.094217,-6.038371,3.376367,6.202650,1.823869,4.322092,-7.734587,-3.078645,1.710911,-6.254853,-4.685326,2.687630,-3.927455,1.547149,0.459506,-0.279417,6.346484,-9.794270,0.973657,-0.146048,6.300923,-1.543553,9.961333,8.588243,0.285669,7.434436,-1.363760,-2.065231,9.651220,-5.450666,2.069155,5.048647,-3.062415,-7.006899,-9.931727,-1.598670,-3.642069,7.632415,5.845839,3.761402,9.531664,5.412229,3.339880,-6.287035,3.982701,-4.041322,1.266165,-7.839661,0.669980,-8.153182,0.070404,1.948424,5.361954,1.792566,0.624888,5.041612,-0.587924,-6.039925,-2.293239,-5.899294,-2.179340,1.429389,5.610733,5.233645,-1.559674,-6.853721,-6.047446,6.399444,-3.652048,-9.961840,9.179042], dtype = "float32")#candidate|1958|(560,)|const|float32
call_1956 = relay.TupleGetItem(func_962_call(relay.reshape(const_1957.astype('float64'), [10, 14, 12]), relay.reshape(call_1949.astype('float64'), [48,]), relay.reshape(const_1958.astype('float32'), [8, 70]), ), 1)
call_1959 = relay.TupleGetItem(func_966_call(relay.reshape(const_1957.astype('float64'), [10, 14, 12]), relay.reshape(call_1949.astype('float64'), [48,]), relay.reshape(const_1958.astype('float32'), [8, 70]), ), 1)
output = relay.Tuple([call_1914,const_1915,var_1916,call_1926,call_1928,const_1940,bop_1943,call_1949,var_1950,uop_1953,call_1956,const_1957,const_1958,])
output2 = relay.Tuple([call_1917,const_1915,var_1916,call_1927,call_1929,const_1940,bop_1946,call_1951,var_1950,uop_1955,call_1959,const_1957,const_1958,])
func_1960 = relay.Function([var_1916,var_1932,var_1942,var_1950,], output)
mod['func_1960'] = func_1960
mod = relay.transform.InferType()(mod)
var_1961 = relay.var("var_1961", dtype = "float64", shape = (48,))#candidate|1961|(48,)|var|float64
var_1962 = relay.var("var_1962", dtype = "float32", shape = (3, 13, 7))#candidate|1962|(3, 13, 7)|var|float32
var_1963 = relay.var("var_1963", dtype = "float64", shape = (3, 16, 16))#candidate|1963|(3, 16, 16)|var|float64
var_1964 = relay.var("var_1964", dtype = "float64", shape = (315,))#candidate|1964|(315,)|var|float64
output = func_1960(var_1961,var_1962,var_1963,var_1964,)
func_1965 = relay.Function([var_1961,var_1962,var_1963,var_1964,], output)
mutated_mod['func_1965'] = func_1965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1795_call = mod.get_global_var('func_1795')
func_1796_call = mutated_mod.get_global_var('func_1796')
call_1967 = relay.TupleGetItem(func_1795_call(), 0)
call_1968 = relay.TupleGetItem(func_1796_call(), 0)
var_1980 = relay.var("var_1980", dtype = "float32", shape = (3, 13, 7))#candidate|1980|(3, 13, 7)|var|float32
bop_1981 = relay.maximum(call_1967.astype('int64'), relay.reshape(var_1980.astype('int64'), relay.shape_of(call_1967))) # shape=(3, 13, 7)
bop_1984 = relay.maximum(call_1968.astype('int64'), relay.reshape(var_1980.astype('int64'), relay.shape_of(call_1968))) # shape=(3, 13, 7)
uop_1999 = relay.asinh(var_1980.astype('float32')) # shape=(3, 13, 7)
output = relay.Tuple([bop_1981,uop_1999,])
output2 = relay.Tuple([bop_1984,uop_1999,])
func_2005 = relay.Function([var_1980,], output)
mod['func_2005'] = func_2005
mod = relay.transform.InferType()(mod)
var_2006 = relay.var("var_2006", dtype = "float32", shape = (3, 13, 7))#candidate|2006|(3, 13, 7)|var|float32
output = func_2005(var_2006)
func_2007 = relay.Function([var_2006], output)
mutated_mod['func_2007'] = func_2007
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2092 = relay.const([[[-5.609518,7.930277,-7.576457,2.978415],[-9.939302,0.193379,-3.917444,-8.945242],[-9.857412,6.993527,5.424816,-1.715452],[0.047194,-2.714921,-2.199415,0.445293],[-9.987066,-5.422657,4.285532,-1.797794],[3.266800,-2.614050,-6.462634,1.986696],[-5.412354,5.152943,4.808364,8.537527],[3.044667,-0.830851,-9.082468,-7.337728],[-7.393508,5.579362,4.726032,5.564912],[-9.920812,-4.966107,8.049374,7.744847],[-9.527011,6.365034,-7.971673,-6.289882],[-9.799944,2.891884,-0.096525,-7.535457],[-0.227295,-0.688795,7.523496,3.392170]],[[2.916076,9.896527,0.988602,-0.225973],[3.757619,6.019501,1.104851,-6.452268],[-5.980822,-8.111848,6.626954,6.676434],[-6.396088,7.502881,-0.096082,6.455163],[-8.964839,-4.790761,5.350010,2.683744],[-9.960022,-2.685643,-5.676979,5.120553],[1.011500,1.128077,-7.328951,-2.017850],[-1.368322,2.683801,-0.174923,0.551464],[7.710894,4.801325,-9.445152,1.813558],[1.983349,-1.252115,-8.067575,4.074742],[1.114002,5.307967,0.519230,6.993272],[4.581361,-8.453410,9.534067,5.357211],[0.167495,-2.514810,3.211339,-4.649650]],[[8.346952,6.242598,7.705219,5.938073],[9.372752,-5.041892,2.271477,9.887106],[-0.553594,-2.364321,9.890365,-8.939273],[-6.845086,-1.301077,5.191585,6.936684],[-2.252812,-9.107624,8.573232,-7.700136],[-2.867926,6.030759,-1.953748,1.015791],[2.879886,6.168001,6.439203,3.865571],[-2.918839,2.880716,6.592307,-7.504033],[6.725676,0.805839,9.766344,-1.673727],[-3.002147,0.915582,-0.890632,-0.114050],[-2.728823,-4.579137,3.571630,-3.362381],[4.629381,5.476310,-9.556139,-7.294929],[3.015692,-6.800455,-3.551714,-0.472702]],[[-3.626206,5.712141,-1.565267,-5.911746],[8.214639,-1.229264,3.182144,-9.539292],[6.398848,3.964843,-0.231041,1.038776],[4.636263,-3.350162,-1.976723,-2.079759],[-8.760742,9.869218,1.697340,0.677978],[-7.496158,-7.954462,-9.254069,6.232694],[-1.861631,6.959563,-5.425819,-0.858946],[-7.276958,0.538604,-4.517687,-5.950034],[-2.986378,9.530430,0.188546,-5.988887],[5.170016,4.688712,-9.316609,1.393726],[4.780412,2.441350,9.459624,9.207027],[-0.810533,8.045928,0.536496,7.190879],[7.791209,0.937554,9.031915,5.754353]],[[-9.369710,3.128495,1.575125,-6.797113],[7.698099,-6.854593,3.729677,7.799652],[4.794757,-9.009890,-8.638601,-0.786622],[7.062264,-8.547531,6.162086,4.556619],[8.649690,-9.991143,3.229034,6.855820],[-0.989871,2.772964,-8.975193,0.079314],[7.958213,-5.693265,3.707905,-5.584962],[-6.305936,-6.167289,-5.422178,-7.294900],[-3.072826,-5.058780,4.421106,-4.162335],[5.588097,7.734230,-9.469446,7.042092],[2.879015,9.137854,-8.359439,2.410032],[4.884067,4.518960,9.154698,6.470223],[-4.728688,1.131018,7.310478,-6.918342]],[[3.674813,-6.119129,-4.171033,-0.550968],[1.544822,2.943728,0.750363,7.927372],[-4.556819,-2.598020,-2.035276,2.601133],[6.895746,-9.528796,-8.325331,2.460062],[-5.681868,-4.075956,-5.539478,-3.227642],[-3.089876,5.427559,-1.484440,-8.885255],[5.642477,-0.897186,-9.825804,9.212268],[-4.804783,8.057291,-8.673504,0.696427],[-4.438998,1.373457,-9.493471,7.195385],[4.303634,-1.037933,6.031199,-6.538439],[9.833699,-5.695012,-2.312413,1.260803],[0.498097,-8.554276,7.487603,-8.033042],[1.699697,-6.503838,-3.816173,-0.604489]],[[4.423962,9.241118,-6.712744,1.845000],[9.242415,4.084230,2.413959,-7.068437],[8.762788,-2.883038,-2.808646,5.657764],[9.621629,2.045883,9.811097,3.031363],[-8.568789,7.082944,3.696905,-5.867431],[-6.247005,-7.836646,-1.541957,-9.726076],[9.991704,7.038152,1.441617,7.247740],[-6.483742,-0.516043,1.217900,-8.925108],[6.729398,-8.440976,3.048158,1.493964],[-3.631313,8.666843,-7.275448,3.209303],[1.543512,-7.489623,5.932121,8.062764],[-0.312202,6.025334,5.097845,-8.241771],[0.643270,6.755311,5.126680,-7.515317]],[[9.216472,4.951197,9.253336,8.662531],[1.719575,3.996062,-1.605258,-6.694617],[9.217921,-3.163468,-1.399048,5.924331],[6.816750,-3.060594,0.310844,-0.469089],[-9.734381,-3.072064,-6.799871,-8.946910],[2.235958,-2.260170,-4.295644,2.780706],[-2.374521,4.788502,-4.350080,-0.424957],[0.432952,-5.101688,3.021879,8.664411],[-7.763168,3.551525,-5.717893,-1.765146],[-6.796465,6.128218,-1.736942,-4.444334],[-8.116802,9.004253,-0.519121,-6.058381],[-1.983273,-4.244464,9.816614,0.144263],[1.793302,0.884328,7.990849,-0.709466]],[[-2.710921,-6.087356,-1.242928,-6.748914],[-9.496610,3.582598,4.873268,1.583756],[-8.107981,-8.916759,9.892316,-0.662202],[-5.272272,-1.885323,3.007494,7.755316],[-3.025220,-9.165397,-1.924222,2.121090],[-0.638218,2.374656,-4.621476,3.051673],[-8.862122,6.320060,-0.863835,3.977351],[8.033330,-1.457069,-3.552403,-1.473948],[7.492541,8.600526,0.890758,4.273453],[7.806398,-8.486840,8.112361,-5.213434],[5.877774,9.949849,1.242545,-4.341609],[3.619353,-1.005798,6.900764,-3.665191],[8.013758,-2.245136,5.492980,0.628960]],[[1.602293,-1.868982,2.552822,-3.578990],[-9.074445,-9.139727,-5.972097,-3.454561],[6.208505,2.949346,-6.162303,-7.799949],[6.101316,-1.020805,-2.702705,1.629046],[4.132097,-8.520757,2.249090,4.862254],[-5.837431,5.880320,8.197043,-4.977034],[-5.465525,8.883250,-3.830809,0.283246],[-5.648108,-9.693353,0.609155,-8.041218],[9.579856,7.004347,-7.872363,4.054590],[8.712837,8.295700,-1.212226,8.321505],[-8.864728,5.530461,-3.187501,-5.046342],[7.538189,6.441782,5.510395,1.754570],[-1.005911,3.221370,-8.754747,-5.602246]]], dtype = "float32")#candidate|2092|(10, 13, 4)|const|float32
uop_2093 = relay.asin(const_2092.astype('float32')) # shape=(10, 13, 4)
bop_2096 = relay.left_shift(const_2092.astype('int16'), relay.reshape(uop_2093.astype('int16'), relay.shape_of(const_2092))) # shape=(10, 13, 4)
output = relay.Tuple([bop_2096,])
output2 = relay.Tuple([bop_2096,])
func_2100 = relay.Function([], output)
mod['func_2100'] = func_2100
mod = relay.transform.InferType()(mod)
mutated_mod['func_2100'] = func_2100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2100_call = mutated_mod.get_global_var('func_2100')
call_2101 = func_2100_call()
output = call_2101
func_2102 = relay.Function([], output)
mutated_mod['func_2102'] = func_2102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2100_call = mod.get_global_var('func_2100')
func_2102_call = mutated_mod.get_global_var('func_2102')
call_2144 = relay.TupleGetItem(func_2100_call(), 0)
call_2145 = relay.TupleGetItem(func_2102_call(), 0)
const_2150 = relay.const([[[-5,4,-4,1],[-2,6,-8,-6],[-3,7,-5,-5],[-10,9,-4,-4],[7,-10,-9,-8],[-3,-8,-3,9],[7,5,5,-9],[2,8,4,4],[8,-6,-6,7],[-1,2,1,-1],[5,10,-5,4],[-9,-3,4,6],[-5,8,-7,3]],[[-2,-3,6,1],[9,3,10,-3],[-2,2,6,-8],[10,-2,-3,-6],[-10,7,-2,-7],[-10,7,10,9],[-6,5,-10,-3],[-9,7,10,6],[-2,-3,-3,-5],[3,-5,4,4],[-6,2,-2,-6],[9,-2,5,-8],[4,1,-6,-2]],[[-10,1,-2,4],[1,-4,2,-5],[-3,2,6,-5],[3,-10,2,-7],[1,-6,10,1],[-5,-6,6,10],[8,-7,3,-7],[-8,7,-10,-4],[-2,-6,-2,6],[3,-6,5,8],[9,-2,-9,-1],[5,-9,-2,-8],[7,7,-10,-7]],[[-8,3,9,9],[-9,10,-9,5],[9,-10,10,5],[1,-5,6,-5],[-2,-8,-10,-9],[-7,6,-10,-9],[-6,-9,-9,2],[-8,-3,8,9],[-8,3,3,8],[-10,7,7,8],[6,-10,4,7],[2,8,-9,1],[5,5,5,9]],[[10,-3,1,10],[1,-4,-5,-10],[-2,6,7,-9],[1,-10,9,-10],[-7,-6,6,-8],[10,-3,5,-2],[2,-10,-5,-1],[5,3,-5,5],[-5,10,10,8],[2,-5,-5,-5],[4,7,-6,-8],[-2,-9,3,8],[-8,9,8,8]],[[-1,10,9,-4],[-3,-6,1,-4],[-4,-1,8,5],[10,1,-3,10],[1,1,-7,7],[-6,-1,-7,-10],[-7,-8,-10,8],[-8,10,10,-7],[-9,-3,3,-6],[-10,-6,9,8],[8,-10,10,8],[7,-1,-7,-7],[7,5,-9,9]],[[-8,-8,2,5],[-3,-8,-3,5],[4,8,-6,-10],[-7,3,7,-7],[6,6,-3,-7],[7,1,2,1],[-4,7,-6,-1],[5,-10,5,-9],[-5,10,-5,-6],[2,2,5,-10],[-2,7,8,-2],[-1,3,-4,-10],[9,-8,-8,-7]],[[-2,-6,4,-4],[-5,-4,-8,-5],[-3,-8,3,5],[-5,-6,-5,-5],[4,4,7,4],[-10,6,7,8],[10,-6,-1,4],[-1,-10,3,-5],[-7,5,-6,8],[9,3,-5,-7],[-8,-9,1,-6],[-4,-9,2,-6],[-3,-2,1,-7]],[[4,-8,3,-4],[-8,10,4,2],[-2,5,-6,-2],[-1,10,-4,2],[-8,-5,-6,4],[1,1,-1,3],[7,9,10,-4],[8,3,-2,-8],[-5,-3,-3,5],[4,9,-3,1],[4,-3,3,-5],[1,3,-5,4],[-5,3,8,1]],[[-5,7,5,-8],[-8,-1,-6,4],[-6,-1,-9,5],[5,-1,7,3],[2,-10,8,6],[-8,-8,3,4],[-10,-2,-3,2],[-6,-9,7,-5],[-9,-8,4,2],[-8,8,4,-3],[-6,-3,4,7],[10,-3,5,8],[4,3,-7,-1]]], dtype = "int16")#candidate|2150|(10, 13, 4)|const|int16
bop_2151 = relay.not_equal(call_2144.astype('bool'), relay.reshape(const_2150.astype('bool'), relay.shape_of(call_2144))) # shape=(10, 13, 4)
bop_2154 = relay.not_equal(call_2145.astype('bool'), relay.reshape(const_2150.astype('bool'), relay.shape_of(call_2145))) # shape=(10, 13, 4)
output = bop_2151
output2 = bop_2154
func_2161 = relay.Function([], output)
mod['func_2161'] = func_2161
mod = relay.transform.InferType()(mod)
mutated_mod['func_2161'] = func_2161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mutated_mod.get_global_var('func_2161')
call_2162 = func_2161_call()
output = call_2162
func_2163 = relay.Function([], output)
mutated_mod['func_2163'] = func_2163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1899_call = mod.get_global_var('func_1899')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_2193 = func_1899_call()
call_2194 = func_1899_call()
output = call_2193
output2 = call_2194
func_2199 = relay.Function([], output)
mod['func_2199'] = func_2199
mod = relay.transform.InferType()(mod)
output = func_2199()
func_2200 = relay.Function([], output)
mutated_mod['func_2200'] = func_2200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2199_call = mod.get_global_var('func_2199')
func_2200_call = mutated_mod.get_global_var('func_2200')
call_2260 = func_2199_call()
call_2261 = func_2199_call()
uop_2269 = relay.sin(call_2260.astype('float32')) # shape=(3, 13, 7)
uop_2271 = relay.sin(call_2261.astype('float32')) # shape=(3, 13, 7)
output = relay.Tuple([uop_2269,])
output2 = relay.Tuple([uop_2271,])
func_2281 = relay.Function([], output)
mod['func_2281'] = func_2281
mod = relay.transform.InferType()(mod)
mutated_mod['func_2281'] = func_2281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mutated_mod.get_global_var('func_2281')
call_2282 = func_2281_call()
output = call_2282
func_2283 = relay.Function([], output)
mutated_mod['func_2283'] = func_2283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_2284 = relay.TupleGetItem(func_1850_call(), 0)
call_2285 = relay.TupleGetItem(func_1851_call(), 0)
uop_2301 = relay.cosh(call_2284.astype('float32')) # shape=(3, 13, 7)
uop_2303 = relay.cosh(call_2285.astype('float32')) # shape=(3, 13, 7)
func_962_call = mod.get_global_var('func_962')
func_966_call = mutated_mod.get_global_var('func_966')
const_2309 = relay.const([-8.082862,-7.332882,-3.032841,1.933356,3.264380,-5.435287,2.632336,9.216784,-0.317247,-3.944537,2.247621,-1.556294,1.166493,6.666458,0.721238,3.901804,-9.305543,-2.223146,-1.245618,3.314740,9.600026,7.505247,-9.423225,0.009769,7.657846,7.550309,4.247000,-6.023603,-6.051282,9.203716,-6.011008,-3.255532,-0.135174,6.945118,-6.263223,3.476548,-5.324832,4.053867,9.730913,6.218808,-0.576591,-4.129090,-5.650077,-2.799908,-8.635158,-5.877995,5.070243,-8.186349,-1.212264,-9.304174,-9.261213,-2.188631,9.648654,4.255263,-5.814714,3.538511,4.392429,-0.957707,-0.846462,0.604472,-7.704229,7.464908,-3.529903,-2.917499,6.323864,3.970912,-1.705449,-9.494120,3.277284,-1.300449,-1.501523,2.272424,8.068010,8.203748,-0.009773,0.944949,6.343888,-1.527277,-1.261800,-7.158181,-4.607213,6.489723,9.972987,-3.471506,-2.976578,2.178939,-4.903289,-7.628762,-8.320927,6.938460,-4.423514,-3.761101,-6.322541,5.362157,2.443171,-5.582536,-9.280326,-4.971357,-4.622293,-3.739353,8.301860,5.408840,-0.770802,-1.953598,-4.885073,-6.280986,-8.441136,-1.791138,7.450917,5.313391,6.627698,-0.436558,8.335587,4.572755,1.172819,-2.697753,2.762215,-4.755720,-3.385016,9.720862,8.046285,9.464890,-0.573306,-4.957296,-0.514060,-5.879794,7.212541,5.887062,9.499483,-7.020223,-8.298487,3.356189,5.782103,-1.101580,-6.102522,-8.028589,5.006850,0.472542,9.437956,1.944863,7.190924,3.539283,3.472358,-5.613143,3.384787,2.337452,3.152727,-6.556047,2.259730,-0.634512,-5.031259,2.872228,9.514342,4.700232,-2.594599,-4.558537,-6.300148,-1.653348,-3.740425,-5.508425,-0.068355,7.563374,-3.603787,-5.252728,-5.724258,-7.877284,0.402130,-8.305600,-6.115876,9.239642,1.095695,0.833575,2.727100,0.013555,-4.016301,3.658994,5.970477,-5.147226,-1.056802,5.245387,-6.725394,8.506073,0.924113,-1.696142,3.693817,-2.114531,4.176911,-1.063105,-5.486887,-5.850740,0.633281,1.117632,-3.512139,0.917909,-6.156677,-7.208132,-1.085106,-0.333715,8.677829,8.571540,-6.699719,5.089307,5.864849,-1.395920,7.826729,-4.642734,-4.859266,-9.551397,-0.294212,-7.424018,-4.858030,9.301729,-2.383924,5.832970,-0.145405,0.609287,-8.295126,-5.762584,-5.491951,5.046922,3.959998,9.537608,3.375298,-9.423236,4.737283,-1.255123,8.129652,-4.827348,3.940847,-4.669452,-1.358412,-9.837974,-8.251865,3.125013,4.586244,1.496281,-3.816628,2.576327,-9.272521,1.321680,-0.971719,5.920411,0.196868,8.651530,2.153926,-8.531219,0.834885,3.603798,0.735458,9.306637,8.047247,0.856450,1.401644,-8.725830,8.387818,2.867044,2.151237,9.571671,-5.628423,-0.842499,-4.207903,2.753587,5.894809,-3.963485,0.333351,-7.924641,-2.658419,9.143386,-9.256771,1.689399,5.701872,9.460642,1.754247,-8.326816,0.495788,-5.664954,6.308219,-3.591650,-7.930716,-8.259168,-6.936896,-5.403558,-6.300614,-3.527652,0.251364,-1.552183,-2.463541,-5.424832,5.309458,6.279319,0.397168,-2.270766,7.179249,7.448676,0.306451,-6.936463,-0.234818,-3.865968,-9.689685,0.660661,-4.772804,-4.428932,4.086807,1.885003,9.444908,-3.069342,-0.289535,-1.351748,0.855423,3.648904,8.201732,-3.220366,-8.587453,-6.267076,5.217046,8.595702,-9.174472,-3.988121,-6.518308,-0.819322,-3.889692,-5.716376,6.885408,-1.674038,-6.481857,-7.791769,7.597776,-4.231869,4.737901,-5.194661,-9.477725,0.843920,-6.209038,7.162481,0.643734,-7.006055,-6.497652,-2.210951,6.736549,-6.603449,-2.945687,6.180090,7.885853,6.615276,9.895200,7.436364,6.810473,-4.948277,-6.136788,-8.134990,1.152728,6.767157,2.908314,3.159736,-0.152478,1.019187,-8.378781,4.590390,-5.625050,0.857095,-5.720697,3.679195,6.193651,2.120719,7.670161,9.792292,2.355418,-7.782510,-0.035997,4.138738,9.956053,9.668233,-5.141016,7.840386,6.930914,-8.315543,7.233445,-6.843241,9.737567,-9.830478,3.740310,0.090705,-0.274946,-9.109976,2.671626,-0.292497,-5.739527,0.907707,-9.551703,9.180579,2.897528,6.129658,2.981955,0.011837,-4.795276,-2.413210,5.407963,-7.956447,0.833632,-1.806613,-2.822035,-5.605249,-7.470917,7.632079,-4.217760,-2.705360,-1.218442,9.249139,1.871916,-9.384292,-9.634228,-2.218389,-5.877958,-8.876294,5.739171,2.549025,6.259787,-5.456236,3.943301,-6.421954,-0.410208,5.366028,-9.752623,-5.838020,6.640749,4.709686,9.559802,4.912596,-4.462852,-2.439556,-0.335512,-4.353631,2.802176,2.395277,-5.872955,-2.702893,-0.259651,-5.337280,-2.170535,7.447835,3.800891,-5.610500,-0.081187,5.765225,2.777597,-7.540500,2.825976,7.773565,9.299319,2.749257,-7.691082,-1.057319,1.538928,3.010213,8.155905,8.220359,-0.192611,-2.486449,6.196626,9.025852,4.384504,-8.318176,-5.245836,2.160595,-7.142079,-1.519276,-3.595950,7.815905,2.730818,-0.035114,5.820431,7.792421,2.222021,-6.835381,3.426747,2.451234,0.003587,8.298045,6.998174,3.563937,6.289383,-4.019079,-6.447582,9.734007,-7.501277,6.712912,4.700322,7.138922,-0.591280,8.211867,-6.744516,-0.827872,-5.188883,7.379676,-2.039590,7.262706,-2.261473,2.591178,-5.823765,-7.819685,-2.942049,-7.283216,9.418157,-5.483946,-7.828971,2.392425,-2.653261,-3.674140,-9.451950,-8.753756,5.363860,-8.998915,1.534554,-0.389705,8.850905,1.452839,-2.265632,3.311200,3.758383,6.298854,-2.583187,-5.088974,-7.415795,3.015526,7.912091,5.715020,-0.491615,-9.830048,-0.337418,5.997453,-0.225276,1.614745,-1.350294,-6.015774,3.881512,2.345155,-7.472701,-9.950194,4.134644,6.402701,-5.908275,1.854882,2.927027,-0.358046,-8.873249,6.029063,-6.477759,-9.271983,0.236514,9.177353,-2.730758,-9.411347,-9.051113,-5.301794,9.220994,-0.449200,-1.300638,-3.813850,-3.018735,4.350648,-5.109827,0.559682,-9.288918,7.865285,-5.140327,-7.495132,-6.077034,1.166951,3.717720,-2.737966,-4.464952,-0.584286,-9.275175,-1.707101,-2.665416,6.922664,-2.427055,9.678772,-5.840533,-8.848391,6.697865,-6.742771,-1.574364,0.592579,9.618891,-1.088348,-4.402441,-2.466048,9.714971,7.186111,1.258235,-1.301894,9.522279,-5.453401,-3.627549,-6.307928,4.412730,8.773671,7.597149,0.421983,-9.699353,-1.908184,9.621714,0.706707,6.366908,-7.912451,-4.292317,-3.521235,-1.247706,6.848115,1.267364,0.325262,-8.533340,-5.369637,0.356310,-3.499481,4.091060,-3.215550,-1.519257,1.468966,6.257777,-4.112703,-7.526306,7.499543,5.377830,-7.488530,9.483364,8.235048,-0.113697,1.303983,4.022535,-5.581373,-0.224608,4.199151,-1.381416,-1.305815,-5.870018,8.289275,3.959367,-8.490125,-0.012439,4.159754,-6.341921,8.516300,1.361356,-1.278387,7.018591,1.743072,2.596426,-2.391056,-4.827128,0.636909,2.745693,3.568539,-9.048726,3.190433,-7.804716,-0.351109,6.177545,-7.466832,-0.274085,9.182681,9.381650,1.176043,-2.044744,-8.257774,-3.630142,4.662414,6.188934,-1.547971,-7.646050,-0.170290,-4.547893,4.392394,-5.976321,-7.783457,-7.379137,-3.961167,1.105849,4.261087,5.044974,-2.118608,7.506692,0.620603,-6.913638,-5.342719,3.238007,-2.234888,1.171405,9.542348,5.092746,-7.012326,-7.097588,4.644872,-7.882270,1.355220,-0.891155,6.075353,8.263851,-5.323021,-7.288142,7.238153,2.727134,-2.715079,9.283822,0.858855,9.918559,9.623080,-8.704433,7.948073,3.878043,8.462366,-4.163504,8.018496,2.010265,-8.458920,5.570970,-0.860781,2.635834,4.115487,-2.003698,3.454122,3.259798,5.291328,5.937257,-0.723068,6.095185,-4.455921,7.003394,-7.710784,-9.874614,-7.140840,-0.390620,-5.580931,3.890478,-1.706679,-1.777519,-4.444717,-4.788566,-4.266598,-8.538409,-2.309244,-7.484407,-8.709408,2.680127,-7.434206,4.972773,2.089325,0.505990,4.421432,2.752411,6.009778,7.785545,8.051300,5.513408,3.070508,9.196901,-2.077612,-1.582284,8.871755,4.939144,7.893650,-5.734492,-6.934515,6.666494,6.303807,2.830246,-6.486902,-6.894285,5.096384,5.991609,6.944893,-8.247281,-1.592178,-7.175766,-3.376797,-0.537985,-9.619228,-7.793333,-3.354364,-4.305992,4.016050,-0.541703,-4.930860,9.028970,4.852135,-8.319309,6.931876,-0.549286,-2.855777,4.246922,-7.126746,-5.428731,7.168628,9.064331,-9.033145,5.573532,9.463675,-0.918351,-2.593649,8.636477,-4.787203,-5.739089,3.893818,-8.578731,-0.220295,-4.609928,6.148973,1.610437,-7.930357,-0.176068,9.617212,-1.026074,-4.307701,-3.920764,-1.911756,-2.739795,-0.548340,0.586246,3.212484,3.418392,2.481278,-2.978042,-6.372558,5.586071,-7.992204,-1.027200,7.677230,-1.394951,2.141129,-0.748654,3.462349,-7.609178,-1.423800,5.596155,4.216672,3.166451,-1.720541,7.432664,3.228424,4.625491,0.313129,0.078414,-5.530565,-4.051043,7.153555,-5.310673,4.265575,-9.367175,-7.187323,1.847956,-0.119840,-3.419327,-6.317672,9.731176,6.293145,8.773280,-5.830692,8.441431,-7.008168,-9.224726,2.739298,-5.022159,-2.141249,-1.045787,-0.057295,-6.231082,-3.431852,-5.193991,7.683200,-7.240848,-9.700194,1.145664,3.005214,-3.695374,-8.104614,0.178068,0.658649,-6.338995,-6.551782,-7.943103,-3.405816,5.645699,5.797192,7.563330,6.252758,1.739578,5.015176,2.727291,-8.576350,-6.382492,-3.121417,-2.950984,-4.654152,7.126421,3.473555,1.628913,4.227908,-3.000124,-2.760948,5.999203,6.614010,-9.946564,5.373703,4.589410,2.385237,-8.154428,4.739521,9.973348,7.970298,-1.707502,-2.768033,-0.672977,-5.445168,-6.942487,-4.442924,2.091962,0.868913,-8.424789,3.783545,-7.447913,5.435917,-1.652137,7.981481,-8.902877,9.255178,1.184261,3.397252,8.575355,-0.487748,-4.422363,0.565862,-9.814284,1.112018,6.361814,8.223331,8.786635,-9.527644,0.757019,5.783313,-6.181695,7.273870,-1.635676,7.084321,-4.336193,-2.938237,-9.876279,-7.131570,-9.879289,9.265452,-3.038388,6.896948,9.061243,-4.719234,7.517335,9.349337,-8.344457,0.648160,4.677346,-3.722606,-6.602258,-1.538932,-7.513636,0.634489,3.656401,-6.770954,9.073698,4.948773,2.046294,-4.510835,-4.957710,-2.887772,-5.287805,2.586632,-3.727197,0.606170,-4.321199,5.815639,3.030592,7.666874,5.933392,-7.740207,2.356990,4.295968,4.029800,6.098222,2.684624,-7.187284,6.097097,1.419948,6.322787,-2.732828,3.775439,-5.307802,6.453098,1.353062,7.207567,6.842668,4.784672,8.642420,-2.863407,-1.813633,-2.039218,2.964572,4.508600,6.723407,-2.064665,-0.942070,4.921489,-3.593843,7.882286,4.804850,6.760084,9.776954,-8.818037,-3.854185,-1.525015,-2.134663,8.901376,-0.308971,2.785792,-2.737833,-5.638155,7.276769,6.446802,-4.036175,6.666811,-6.790949,-1.024511,2.798285,-1.566976,-1.894404,0.682876,-7.716250,-8.670341,0.719726,-3.109998,0.500538,-4.655102,3.243517,-1.085530,-6.066086,0.276119,0.474199,2.991646,-1.893410,-1.421304,-8.819814,-0.773019,-6.553382,2.351638,-2.356890,5.304841,-0.878923,-5.452141,-7.460041,0.898267,-5.899593,8.258668,5.055024,-4.619517,-3.656982,-4.194427,-8.862241,6.387570,2.996916,-7.114155,2.455103,-2.114082,-3.755308,2.286134,4.545601,8.095839,8.276394,3.148637,5.937437,7.402264,-3.372615,-3.567213,-9.876225,-6.477065,7.225255,1.417344,-5.662954,-5.118376,-0.625014,6.216666,4.355631,8.963582,0.866920,2.972495,-7.517006,3.265029,-5.824998,-1.554115,0.806170,-6.098154,2.093775,8.253330,0.802103,-1.908031,0.598175,-9.215707,6.833323,-6.390867,-0.367553,1.709373,-6.054906,-7.437014,1.004068,2.207627,5.670858,7.571299,2.409885,-0.642520,-7.631838,-1.876624,9.608520,-8.073290,-0.247465,4.917083,-5.993794,9.131205,2.009630,4.253918,-4.299722,-9.939412,4.537635,3.819320,-2.726982,2.847288,-9.034536,1.878345,-6.659192,-5.133182,-0.968182,-9.936559,1.443990,1.148569,0.179685,0.824922,0.990956,9.604006,3.126865,0.971530,-3.699791,-4.676236,-3.800651,-6.106344,-9.222074,4.560367,4.731705,6.067115,9.180323,6.102806,-9.889391,1.817021,-7.354885,-2.074127,8.260005,-9.903383,-1.877738,-7.717251,-3.196295,-0.669947,-9.802627,7.847424,9.649782,-8.885235,0.590721,0.739877,-2.142050,5.519183,6.914945,-6.235029,6.794073,-6.362375,6.625675,-8.861362,-7.359017,-3.565125,-5.996615,-1.834460,2.471340,-3.369868,-4.877829,-3.828537,-0.738525,-5.429697,1.850447,-1.943253,4.746921,-2.437672,-6.331952,-2.529256,9.892362,5.434545,-0.148206,6.260631,-3.498012,-0.520837,5.235215,5.636049,-2.138019,3.974701,-6.979055,-1.043190,1.969388,-2.992620,6.049368,-2.120256,-1.347932,-6.350717,9.094512,-9.411325,5.358216,-2.643978,5.997515,1.367950,9.921997,0.085860,-1.673009,1.398993,-1.338141,8.284821,-0.446060,8.246959,4.286231,1.474127,0.496687,-0.015513,-6.053209,-8.484111,-1.332873,9.878069,-1.515677,4.945925,-3.188675,-8.935016,9.732155,-8.985148,4.648044,-7.835079,0.390065,0.629112,6.912451,-3.169737,9.283575,1.973603,-2.833124,6.520985,1.866020,6.807781,-6.761461,-8.156405,-7.415691,0.975055,-4.259639,-3.062279,-1.010219,6.468973,-4.678361,4.729424,-9.296416,5.656417,-9.261482,3.018449,-3.109988,0.373467,2.183659,-4.639673,8.546992,7.688927,6.644548,0.790704,-9.364666,7.100276,-3.318131,-0.083506,3.300925,9.509480,-8.059539,1.482014,-3.913235,6.910062,-7.451335,8.957102,-3.594847,-6.124895,-5.505470,1.400051,-6.062608,6.374688,7.956069,5.462735,-9.244686,-2.423315,9.831038,2.511127,0.269684,0.863415,-7.736602,6.779675,-9.227589,-6.013462,4.116805,5.694827,-2.349791,9.485500,-7.232383,-7.676472,3.019469,4.898337,-6.095461,-2.614628,-4.396742,5.075943,-7.162901,8.670868,-8.732238,-6.712205,9.472387,3.249511,-6.628310,1.647612,9.376739,9.042940,3.432837,-4.312809,1.317045,9.492001,-2.009505,-5.618056,2.989985,6.072384,5.207751,9.660716,4.471530,-0.046134,0.672784,-7.232972,8.147245,-0.507924,6.764661,-5.809660,0.415447,-1.342129,5.360744,3.325367,-4.362914,-8.329293,-5.528691,-8.005425,6.081926,0.991323,-0.519673,5.060441,-1.313968,-7.387181,-2.659646,-4.609050,-6.756724,-1.809571,-8.093696,-3.085634,-5.079989,-7.785555,9.761039,3.489969,-6.886361,4.190804,-2.095075,-7.321283,-4.881991,-0.633422,-9.727290,4.180199,2.365648,-5.197705,4.257609,-2.730019,8.266002,-2.104372,9.240228,5.970455,-4.445591,8.809672,-2.279205,5.564542,-6.297263,2.715938,0.257552,-5.703924,-2.007774,-0.745110,0.230075,-5.958471,7.714402,3.146367,-7.534697,-7.758348,-7.606062,0.951395,-3.593695,3.396360,6.476317,3.416882,5.746408,0.579451,-1.526489,9.617331,3.280430,-2.258402,-8.802125,9.200542,8.376526,-6.152938,1.558299,-4.180433,-2.330696,4.664656,-1.467276,-6.087680,-6.025631,-5.712228,3.309014,-7.057862,4.542092,-3.014281,5.566659,-5.626134,3.177381,-6.240208,-7.936521,-9.935010,-8.706459,-4.595748,-8.393567,0.379766,2.330778,6.254757,5.403023,1.208730,5.907368,7.086305,6.757201,8.687284,-7.976991,-5.132787,-8.950943,1.427276,-9.228036,9.042345,5.362734,5.713065,-3.939609,8.558858,-6.674675,-3.400136,-9.062899,-3.440163,8.505217,3.901324,6.365461,3.901429,-2.213508,6.450003,-3.169653,-9.191845,9.995371,-7.855626,-1.531205,8.987129,-5.071993,-2.838241,8.431653,5.566818,-2.061475,-7.746174,-8.013547,6.611984,3.799459,4.081896,-5.807668,6.344970,6.107080,3.367944,1.667257,-1.634035,1.746681,8.956022,-1.619977,0.371406,1.120571,-0.481676,1.122271,-8.739716,-2.009896,1.692623,8.547956,-2.412509,-7.180821,5.162392,9.472939,-3.518352,-6.595595,8.597498,-6.628861,-7.585699,9.241035,4.252984,-1.601391,5.975085,4.498517,9.020606,6.182053,3.388367,-5.047910,1.716458,-1.489728,-3.771343,9.961576,9.293178,-2.907703,2.443176,4.289440,3.891365,0.265583,-4.239812,0.155763,3.696205,-6.949503,-9.456927,4.760800,-3.673598,0.299885,3.462319,-9.643785,-1.016302,-5.970324,-9.769330,-0.074823,8.348173,-0.585629,-8.970221,-2.794827,-4.269192,-9.878943,3.228832,6.306606,-2.676346,-4.572474,0.081055,-8.904283,2.398555,-5.958474,-9.601466,8.023439,-5.246440,-3.417356,3.784130,-6.282175,3.225971,7.402276,9.572037,-1.530025,2.463017,3.351363,6.023478,7.278402,-1.784352,5.564787,-4.894498,-1.897729,-5.991724,-3.982378,1.536347,-0.575875,9.427211,4.697774,-9.058745,-1.197517,-8.814819,-2.039785,-2.742426,3.075208,8.595214,5.950133,4.277894,-0.873524,-4.433923,-4.753099,-2.600411,-1.356420,-6.292463,-2.552338,0.114569,-8.515445,-9.676236,-3.854858,-0.040251,8.196487,-5.924029,-9.400301,-4.106766,7.759719,8.435039,6.270719,-5.815855,2.913215,9.688420,4.306367,3.995586,2.363266,8.397975,-4.210902,7.035102,7.808284,-6.540092,8.496149,8.563296,-6.780899,-6.947654,-7.038190,2.557514,4.805672,8.846677,-5.481684,4.550332,-7.627131,2.193121,-9.440041,-2.691565,-4.190897,2.062227,9.705954,-4.187311,6.232120,2.826777,-5.331099,-6.826089,-1.967520,-9.033464,-7.602543,-1.672808,-7.504016,9.691727,-1.971449,8.561833,-8.661532,-7.160636,3.936287,9.650855,-1.742519,-9.204105,-3.774285,-6.383865,-4.078818,2.043263,-6.775742,0.004324,9.624066,-7.597479,-0.058602,-7.596263,-1.670073,-5.731585,7.265903,0.619180,4.610673,-5.619102,-8.795125,-3.924518,-3.698913,4.209067,6.779664,9.347985,3.256887,-0.618346,5.461899], dtype = "float64")#candidate|2309|(1680,)|const|float64
var_2310 = relay.var("var_2310", dtype = "float64", shape = (48,))#candidate|2310|(48,)|var|float64
const_2311 = relay.const([-9.182724,-9.561441,-6.953251,-1.934503,3.059321,-6.306376,9.829043,6.249950,-6.648007,-0.499102,-5.889383,8.787913,-4.981640,-7.803104,1.241366,-9.783509,-5.117674,7.513293,9.570167,7.618095,-6.627563,6.115663,3.107946,-8.082962,3.779670,-4.208483,2.258877,-1.612976,-9.777602,0.528865,-3.408867,-3.324641,7.782092,9.465774,9.130549,0.036252,-6.481586,5.387031,-6.347917,6.721977,9.935340,4.387091,9.511798,-6.736031,-7.465429,-0.225006,7.331215,6.533728,-7.490386,2.550161,7.008688,7.850021,2.317620,5.769758,-3.344342,6.316615,-0.146928,-2.295283,-8.255881,-7.993683,9.778805,-6.811443,6.086865,4.026324,-1.408839,0.729784,7.122674,-2.319604,5.642430,-4.705307,-7.516584,9.018223,7.862043,4.806668,-1.457837,-9.051280,-1.123748,-7.101868,7.606018,1.974921,-3.182672,1.164451,0.104181,-2.758932,-2.038633,-3.843201,-0.585558,8.399903,-9.359954,-8.529624,-5.330445,-5.030127,0.574467,-8.698333,-3.187372,-6.306026,-0.365257,-8.257988,6.369563,4.562996,-2.995239,6.436108,1.999617,-0.820127,0.209147,8.586815,2.523575,-0.370386,-8.463149,5.746491,-1.667772,-4.854585,-8.492104,-2.715678,2.301966,6.680231,4.932926,7.899931,3.496969,-2.372417,-3.966643,9.075178,7.147854,-7.824775,-1.891943,-6.850744,9.488566,-2.815762,-9.871173,-3.529168,-8.700593,6.008891,-4.975653,-7.757742,-8.816453,-3.348069,-6.235714,-2.393019,5.423551,-6.865422,4.662974,-0.387664,4.488097,-3.200722,1.616607,0.347646,-0.183460,4.490380,5.890175,-0.731128,5.924983,-2.007889,-7.915066,5.026736,9.668800,-4.423997,4.029020,-5.259149,1.541151,-6.936539,9.208207,-1.472424,-7.006015,-2.897663,4.440390,3.150260,1.514550,8.341523,-0.453238,9.571663,-2.827333,-4.655166,-3.990851,-9.295101,7.136299,-3.053642,-2.842439,-6.885677,-3.109186,4.965779,-4.973572,-3.901667,-7.241479,4.898871,3.056799,2.037313,-7.466438,8.863525,-8.032923,-1.305113,-2.320372,-0.370096,0.522229,5.673272,6.940374,-4.583095,8.339376,3.497200,-3.035359,-7.043565,3.538381,4.630411,-8.865429,-0.756742,-6.441958,-8.765645,4.511765,8.764624,-4.031096,-3.843924,4.343340,2.151569,-6.960855,7.985795,4.896356,-4.800379,9.683842,3.759121,-8.095897,-4.614695,-8.514165,5.746483,6.725173,9.707450,6.115349,8.206190,-6.706978,0.488484,5.163901,0.220218,-9.169004,9.000099,1.239220,9.320498,-0.663579,-6.235931,1.652761,-0.560240,-6.518790,-0.651159,8.509188,9.016386,-6.087861,-7.719982,7.282928,-6.882043,3.218069,1.690592,-6.392273,-9.950957,-4.354174,-5.686563,-3.186899,-2.806581,-5.163370,-2.520233,-4.614339,0.108270,-4.120373,-7.289177,2.927217,-1.024111,-9.618485,2.178189,-0.034581,0.113815,-7.646556,-4.939255,-0.575719,1.646913,7.433216,-9.230532,5.477604,-2.872157,-6.208796,6.077708,-1.918174,-9.761975,7.685885,5.321141,-5.105188,-8.687221,-6.323876,7.228422,1.570278,8.200850,3.575130,-4.067890,4.231224,-6.915854,8.071119,5.969907,1.401357,-2.176227,5.604936,4.838430,-0.352168,-2.280310,-4.612569,9.641049,4.032066,8.593387,4.768604,0.506172,-7.397679,-5.368202,-2.251377,2.635493,3.783591,-9.508890,-0.835440,-4.772575,-8.902397,5.479095,8.728785,-8.165925,-6.135668,4.893482,-1.663238,-3.567022,-1.233917,-9.836553,5.609986,5.383544,-2.004889,2.987277,0.378970,9.757113,8.465419,-0.258189,-7.804774,7.116114,-0.561289,-2.283386,2.046889,-9.021843,1.134441,-2.198519,-2.163882,3.984902,-0.858078,6.211914,6.574748,9.233805,-1.763641,5.954974,-4.991641,0.423971,7.346498,0.998098,-0.965659,-1.584621,6.746790,-1.284523,-8.134137,-8.336190,4.384095,-3.868923,-2.929427,0.951836,-9.415775,2.429542,8.089031,5.107804,-6.559107,2.333561,-4.693990,-7.069987,6.586913,-3.033916,9.588892,-5.490344,-7.984415,7.254929,-2.993980,2.567544,7.661823,1.466102,9.728563,5.700596,-7.160951,8.382093,-0.841786,-0.683501,-9.615617,-8.949777,2.643010,-7.533707,5.581045,-0.937677,-2.406369,-8.408956,4.905979,-7.939034,1.743670,-2.040406,9.195020,-5.479445,-6.463843,9.565119,9.597073,-5.660626,-6.643504,2.024667,-3.967207,5.372278,5.015341,-2.447860,9.639060,-6.281119,-8.750780,-4.314551,-2.877811,2.891585,7.022832,9.839253,-1.207767,0.745269,7.025621,0.696478,7.775622,-7.078544,-4.686432,8.387062,-1.577346,-9.572623,-4.785142,-5.005048,-0.846784,4.229904,-6.996586,-3.063964,-2.695075,2.388169,-4.358432,4.595721,2.443688,4.040776,-0.717340,5.308985,-4.758274,0.459181,3.745490,5.890340,-2.911859,3.655238,6.572234,0.576056,-4.705223,6.856991,6.840419,-2.569667,0.116492,6.700054,-5.523637,-5.705872,-4.204452,6.010111,7.644944,3.149029,-9.316116,-4.290258,5.025426,1.011300,-2.557927,-3.516781,-5.072210,-6.983072,-9.828602,6.851214,-9.644492,9.567299,-3.245224,-3.664519,2.430007,3.674927,2.436202,-0.782683,5.107509,-9.412135,-2.129284,-6.678015,9.036546,-8.860220,-1.617440,-3.525543,1.163474,2.538243,-5.475531,1.696258,-7.960596,0.435321,-0.248132,-7.670230,-8.305094,6.439412,6.057264,7.056520,-0.765337,8.928276,8.520329,-4.265375,1.609825,-1.656046,6.003120,-8.034816,-1.664640,6.159777,1.057993,8.895896,-5.258619,-0.840258,-4.075372,-7.849652,-1.828326,3.947646,0.166016,-7.726804,0.540762,1.928842,8.447571,-5.764609,3.808692,-7.321393,5.436117,-5.020122,3.760847,-0.097227,-6.458605,-8.285728,-0.246543,4.255448,4.879150,-8.862489,-7.158137,-8.272403,0.463810,-9.582237,-5.597162,6.522546,-3.891413,-6.138903,8.718804,5.010638,2.799259,-0.804548,9.823586,-0.929856,4.848314,3.237283,-1.235830,2.042860,8.078207,-0.485656,4.035400,6.872264,-1.310261,1.078215,-5.601270,6.102573], dtype = "float32")#candidate|2311|(560,)|const|float32
call_2308 = relay.TupleGetItem(func_962_call(relay.reshape(const_2309.astype('float64'), [10, 14, 12]), relay.reshape(var_2310.astype('float64'), [48,]), relay.reshape(const_2311.astype('float32'), [8, 70]), ), 1)
call_2312 = relay.TupleGetItem(func_966_call(relay.reshape(const_2309.astype('float64'), [10, 14, 12]), relay.reshape(var_2310.astype('float64'), [48,]), relay.reshape(const_2311.astype('float32'), [8, 70]), ), 1)
uop_2335 = relay.sinh(uop_2301.astype('float32')) # shape=(3, 13, 7)
uop_2337 = relay.sinh(uop_2303.astype('float32')) # shape=(3, 13, 7)
bop_2344 = relay.logical_and(uop_2335.astype('bool'), relay.reshape(uop_2301.astype('bool'), relay.shape_of(uop_2335))) # shape=(3, 13, 7)
bop_2347 = relay.logical_and(uop_2337.astype('bool'), relay.reshape(uop_2303.astype('bool'), relay.shape_of(uop_2337))) # shape=(3, 13, 7)
output = relay.Tuple([call_2308,const_2309,var_2310,const_2311,bop_2344,])
output2 = relay.Tuple([call_2312,const_2309,var_2310,const_2311,bop_2347,])
func_2348 = relay.Function([var_2310,], output)
mod['func_2348'] = func_2348
mod = relay.transform.InferType()(mod)
mutated_mod['func_2348'] = func_2348
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2349 = relay.var("var_2349", dtype = "float64", shape = (48,))#candidate|2349|(48,)|var|float64
func_2348_call = mutated_mod.get_global_var('func_2348')
call_2350 = func_2348_call(var_2349)
output = call_2350
func_2351 = relay.Function([var_2349], output)
mutated_mod['func_2351'] = func_2351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1795_call = mod.get_global_var('func_1795')
func_1796_call = mutated_mod.get_global_var('func_1796')
call_2443 = relay.TupleGetItem(func_1795_call(), 0)
call_2444 = relay.TupleGetItem(func_1796_call(), 0)
func_2100_call = mod.get_global_var('func_2100')
func_2102_call = mutated_mod.get_global_var('func_2102')
call_2445 = relay.TupleGetItem(func_2100_call(), 0)
call_2446 = relay.TupleGetItem(func_2102_call(), 0)
uop_2448 = relay.rsqrt(call_2445.astype('float32')) # shape=(10, 13, 4)
uop_2450 = relay.rsqrt(call_2446.astype('float32')) # shape=(10, 13, 4)
var_2452 = relay.var("var_2452", dtype = "int16", shape = (10, 13, 4))#candidate|2452|(10, 13, 4)|var|int16
bop_2453 = relay.logical_xor(call_2445.astype('uint64'), relay.reshape(var_2452.astype('uint64'), relay.shape_of(call_2445))) # shape=(10, 13, 4)
bop_2456 = relay.logical_xor(call_2446.astype('uint64'), relay.reshape(var_2452.astype('uint64'), relay.shape_of(call_2446))) # shape=(10, 13, 4)
output = relay.Tuple([call_2443,uop_2448,bop_2453,])
output2 = relay.Tuple([call_2444,uop_2450,bop_2456,])
func_2465 = relay.Function([var_2452,], output)
mod['func_2465'] = func_2465
mod = relay.transform.InferType()(mod)
var_2466 = relay.var("var_2466", dtype = "int16", shape = (10, 13, 4))#candidate|2466|(10, 13, 4)|var|int16
output = func_2465(var_2466)
func_2467 = relay.Function([var_2466], output)
mutated_mod['func_2467'] = func_2467
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2520 = relay.var("var_2520", dtype = "bool", shape = (15, 14, 6))#candidate|2520|(15, 14, 6)|var|bool
var_2521 = relay.var("var_2521", dtype = "bool", shape = (15, 14, 6))#candidate|2521|(15, 14, 6)|var|bool
bop_2522 = relay.logical_or(var_2520.astype('bool'), relay.reshape(var_2521.astype('bool'), relay.shape_of(var_2520))) # shape=(15, 14, 6)
func_2161_call = mod.get_global_var('func_2161')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2526 = func_2161_call()
call_2527 = func_2161_call()
output = relay.Tuple([bop_2522,call_2526,])
output2 = relay.Tuple([bop_2522,call_2527,])
func_2529 = relay.Function([var_2520,var_2521,], output)
mod['func_2529'] = func_2529
mod = relay.transform.InferType()(mod)
mutated_mod['func_2529'] = func_2529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2529_call = mutated_mod.get_global_var('func_2529')
var_2531 = relay.var("var_2531", dtype = "bool", shape = (15, 14, 6))#candidate|2531|(15, 14, 6)|var|bool
var_2532 = relay.var("var_2532", dtype = "bool", shape = (15, 14, 6))#candidate|2532|(15, 14, 6)|var|bool
call_2530 = func_2529_call(var_2531,var_2532,)
output = call_2530
func_2533 = relay.Function([var_2531,var_2532,], output)
mutated_mod['func_2533'] = func_2533
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2574 = relay.var("var_2574", dtype = "int16", shape = ())#candidate|2574|()|var|int16
const_2575 = relay.const([[[-8,9,10],[8,6,-10],[-2,1,-6],[2,3,-7],[5,3,2],[-7,-2,2],[8,8,1],[-1,2,2]],[[4,-1,-9],[-7,4,2],[-1,-8,9],[7,-9,1],[4,4,3],[-6,-1,-4],[-7,-7,-1],[9,-9,-7]],[[9,6,-10],[2,7,9],[-4,-9,-4],[-7,5,4],[-4,2,-3],[4,4,2],[6,-7,9],[-5,3,-10]],[[-8,-1,-1],[-1,-9,-2],[1,-4,5],[8,-7,-4],[-2,-1,-4],[5,-8,-9],[1,-5,4],[-3,-3,-1]],[[-3,10,5],[-10,5,-4],[-10,3,5],[-6,3,-9],[9,1,10],[-10,10,-7],[-6,-3,-6],[-9,8,-4]],[[-5,9,4],[-4,-1,4],[-6,6,-4],[2,10,10],[2,6,-5],[-3,3,-10],[-2,-9,-9],[4,-7,3]],[[5,-3,9],[-5,-7,1],[1,2,-5],[-10,-9,10],[10,-5,-6],[10,4,-10],[-9,5,6],[-5,1,-1]],[[-4,-3,-10],[10,9,-8],[-6,10,-4],[-4,-7,-8],[-9,10,-2],[6,3,-8],[-6,-4,-6],[2,3,-1]]], dtype = "int16")#candidate|2575|(8, 8, 3)|const|int16
bop_2576 = relay.subtract(var_2574.astype('int16'), const_2575.astype('int16')) # shape=(8, 8, 3)
func_1899_call = mod.get_global_var('func_1899')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_2582 = func_1899_call()
call_2583 = func_1899_call()
output = relay.Tuple([bop_2576,call_2582,])
output2 = relay.Tuple([bop_2576,call_2583,])
func_2585 = relay.Function([var_2574,], output)
mod['func_2585'] = func_2585
mod = relay.transform.InferType()(mod)
mutated_mod['func_2585'] = func_2585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2586 = relay.var("var_2586", dtype = "int16", shape = ())#candidate|2586|()|var|int16
func_2585_call = mutated_mod.get_global_var('func_2585')
call_2587 = func_2585_call(var_2586)
output = call_2587
func_2588 = relay.Function([var_2586], output)
mutated_mod['func_2588'] = func_2588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2626 = func_2161_call()
call_2627 = func_2161_call()
func_493_call = mod.get_global_var('func_493')
func_496_call = mutated_mod.get_global_var('func_496')
var_2655 = relay.var("var_2655", dtype = "float64", shape = (315,))#candidate|2655|(315,)|var|float64
var_2656 = relay.var("var_2656", dtype = "float64", shape = (2, 24))#candidate|2656|(2, 24)|var|float64
call_2654 = relay.TupleGetItem(func_493_call(relay.reshape(var_2655.astype('float64'), [3, 7, 15]), relay.reshape(var_2656.astype('float64'), [48,]), ), 1)
call_2657 = relay.TupleGetItem(func_496_call(relay.reshape(var_2655.astype('float64'), [3, 7, 15]), relay.reshape(var_2656.astype('float64'), [48,]), ), 1)
func_1960_call = mod.get_global_var('func_1960')
func_1965_call = mutated_mod.get_global_var('func_1965')
const_2670 = relay.const([-6.985104,-9.303971,-9.871249,-5.962906,-9.337339,6.000639,-7.941384,-7.745021,7.625083,9.751442,-7.098200,2.505984,8.853031,-9.352412,5.052057,2.866002,-5.657750,-0.043416,-0.618488,-6.057008,7.268234,-1.910612,3.506468,-0.214922,-1.300861,4.401392,-0.705498,4.000591,5.759150,-8.248033,2.030050,-8.230538,5.230644,-5.960268,-0.937188,4.803347,3.921619,8.323583,-5.897594,9.098930,6.159851,-5.816035,5.855048,6.714344,7.977378,4.151676,-6.546756,8.545728,-8.773702,9.751192,-8.665150,-5.080501,8.504055,-4.640370,6.239216,-6.848314,-2.460141,-1.672313,-7.093140,4.128816,9.706961,-2.363572,-7.369499,-9.146103,-6.060268,6.740517,-4.420749,-2.855479,-9.972867,9.156111,-1.154705,-4.542279,-8.085148,-0.206376,8.428973,9.632862,-6.588522,-3.416379,4.092745,7.167334,-2.922449,-7.941835,-7.671495,-6.238576,-0.764099,-3.766145,4.104755,8.770014,4.117664,1.155122,2.285097,8.063042,-5.832959,1.544408,-1.037282,6.664992,2.913153,5.682157,-8.261255,-8.032055,-4.718897,9.223117,-2.249888,9.817862,-2.698409,-5.239406,5.240802,5.455360,3.123189,0.853984,3.989241,-2.408884,7.803981,-2.449874,-9.113943,-5.431951,0.600489,-2.175148,-5.849858,7.718789,-9.178604,2.603476,-3.940943,-3.191356,0.802288,7.731275,-2.844836,5.194107,-3.697044,-7.055821,6.094360,4.847075,-8.966994,-6.372426,3.772334,-3.094403,8.328646,-5.934375,-4.918181,3.963014,-1.495237,6.313621,-7.410878,-9.537171,-5.629728,4.311864,8.074301,7.201574,1.929652,5.592270,6.727835,-8.292137,2.278874,-0.200913,1.626618,2.053816,0.096279,7.230719,8.210023,-3.367410,-7.021968,7.828445,-3.951833,8.488340,-6.035846,-0.534151,-2.455102,-4.970369,7.743782,-2.368381,-7.700523,8.976533,-7.155837,-7.486475,-3.380796,8.384051,-4.497249,0.598284,9.507772,-9.050354,8.634935,-5.253869,-7.413104,4.676453,4.704121,-4.902932,7.107953,5.943915,-7.937071,6.262234,-6.926936,4.838009,-4.523426,6.522218,-5.303658,9.930914,7.594192,0.297637,8.718696,2.144801,-3.973050,-6.839280,4.748989,5.658821,0.285217,8.716525,-5.776755,3.320178,5.811480,-0.783844,-0.593967,5.433571,3.104207,9.775631,3.795655,-6.789591,8.454804,7.399321,-0.540217,-7.905426,3.519648,-2.679699,8.108830,-5.046228,-3.591411,-6.917343,4.854308,-8.967049,-5.839088,5.952710,5.946078,-3.445481,-8.471403,0.463708,-6.125985,4.267880,3.418773,8.048361,8.694737,2.082151,5.374558,-4.568530,0.424952,7.189354,2.508324,0.716972,-3.876956,5.245224,5.958195,-9.499951,-4.539022,-6.110865,5.452781,-9.137689,9.947016,-4.013389,7.928343,5.229304,-4.308020,1.992243,1.126044,-3.047758,-3.748042,0.350453,-8.968714,4.269646,6.333659,4.270576,-5.207272,2.746413,4.405004,-2.248374,-0.456142], dtype = "float32")#candidate|2670|(273,)|const|float32
var_2671 = relay.var("var_2671", dtype = "float64", shape = (768,))#candidate|2671|(768,)|var|float64
call_2669 = relay.TupleGetItem(func_1960_call(relay.reshape(var_2656.astype('float64'), [48,]), relay.reshape(const_2670.astype('float32'), [3, 13, 7]), relay.reshape(var_2671.astype('float64'), [3, 16, 16]), relay.reshape(var_2655.astype('float64'), [315,]), ), 3)
call_2672 = relay.TupleGetItem(func_1965_call(relay.reshape(var_2656.astype('float64'), [48,]), relay.reshape(const_2670.astype('float32'), [3, 13, 7]), relay.reshape(var_2671.astype('float64'), [3, 16, 16]), relay.reshape(var_2655.astype('float64'), [315,]), ), 3)
func_760_call = mod.get_global_var('func_760')
func_763_call = mutated_mod.get_global_var('func_763')
var_2682 = relay.var("var_2682", dtype = "float32", shape = (1274,))#candidate|2682|(1274,)|var|float32
call_2681 = func_760_call(relay.reshape(var_2682.astype('float32'), [14, 7, 13]))
call_2683 = func_760_call(relay.reshape(var_2682.astype('float32'), [14, 7, 13]))
uop_2687 = relay.sin(var_2656.astype('float32')) # shape=(2, 24)
uop_2697 = relay.sqrt(uop_2687.astype('float32')) # shape=(2, 24)
bop_2707 = relay.not_equal(uop_2697.astype('bool'), relay.reshape(uop_2687.astype('bool'), relay.shape_of(uop_2697))) # shape=(2, 24)
output = relay.Tuple([call_2626,call_2654,var_2655,call_2669,const_2670,var_2671,call_2681,var_2682,bop_2707,])
output2 = relay.Tuple([call_2627,call_2657,var_2655,call_2672,const_2670,var_2671,call_2683,var_2682,bop_2707,])
func_2722 = relay.Function([var_2655,var_2656,var_2671,var_2682,], output)
mod['func_2722'] = func_2722
mod = relay.transform.InferType()(mod)
mutated_mod['func_2722'] = func_2722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2722_call = mutated_mod.get_global_var('func_2722')
var_2724 = relay.var("var_2724", dtype = "float64", shape = (315,))#candidate|2724|(315,)|var|float64
var_2725 = relay.var("var_2725", dtype = "float64", shape = (2, 24))#candidate|2725|(2, 24)|var|float64
var_2726 = relay.var("var_2726", dtype = "float64", shape = (768,))#candidate|2726|(768,)|var|float64
var_2727 = relay.var("var_2727", dtype = "float32", shape = (1274,))#candidate|2727|(1274,)|var|float32
call_2723 = func_2722_call(var_2724,var_2725,var_2726,var_2727,)
output = call_2723
func_2728 = relay.Function([var_2724,var_2725,var_2726,var_2727,], output)
mutated_mod['func_2728'] = func_2728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2738 = func_2161_call()
call_2739 = func_2161_call()
uop_2750 = relay.sinh(call_2738.astype('float32')) # shape=(10, 13, 4)
uop_2752 = relay.sinh(call_2739.astype('float32')) # shape=(10, 13, 4)
output = relay.Tuple([uop_2750,])
output2 = relay.Tuple([uop_2752,])
func_2758 = relay.Function([], output)
mod['func_2758'] = func_2758
mod = relay.transform.InferType()(mod)
output = func_2758()
func_2759 = relay.Function([], output)
mutated_mod['func_2759'] = func_2759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2786 = func_2161_call()
call_2787 = func_2161_call()
var_2802 = relay.var("var_2802", dtype = "bool", shape = (10, 13, 4))#candidate|2802|(10, 13, 4)|var|bool
bop_2803 = relay.floor_mod(call_2786.astype('float64'), relay.reshape(var_2802.astype('float64'), relay.shape_of(call_2786))) # shape=(10, 13, 4)
bop_2806 = relay.floor_mod(call_2787.astype('float64'), relay.reshape(var_2802.astype('float64'), relay.shape_of(call_2787))) # shape=(10, 13, 4)
output = relay.Tuple([bop_2803,])
output2 = relay.Tuple([bop_2806,])
func_2807 = relay.Function([var_2802,], output)
mod['func_2807'] = func_2807
mod = relay.transform.InferType()(mod)
var_2808 = relay.var("var_2808", dtype = "bool", shape = (10, 13, 4))#candidate|2808|(10, 13, 4)|var|bool
output = func_2807(var_2808)
func_2809 = relay.Function([var_2808], output)
mutated_mod['func_2809'] = func_2809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2897 = func_2161_call()
call_2898 = func_2161_call()
func_2281_call = mod.get_global_var('func_2281')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_2923 = relay.TupleGetItem(func_2281_call(), 0)
call_2924 = relay.TupleGetItem(func_2283_call(), 0)
var_2931 = relay.var("var_2931", dtype = "bool", shape = (10, 13, 4))#candidate|2931|(10, 13, 4)|var|bool
bop_2932 = relay.divide(call_2897.astype('float32'), relay.reshape(var_2931.astype('float32'), relay.shape_of(call_2897))) # shape=(10, 13, 4)
bop_2935 = relay.divide(call_2898.astype('float32'), relay.reshape(var_2931.astype('float32'), relay.shape_of(call_2898))) # shape=(10, 13, 4)
func_2161_call = mod.get_global_var('func_2161')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2943 = func_2161_call()
call_2944 = func_2161_call()
func_493_call = mod.get_global_var('func_493')
func_496_call = mutated_mod.get_global_var('func_496')
const_2950 = relay.const([0.362718,3.856779,1.829244,1.637662,-0.847159,6.901298,-6.731567,6.282232,-5.014820,-2.529242,-4.706405,9.676078,9.658668,4.337467,1.649453,1.258677,5.298919,-3.962329,-8.686839,0.855161,3.894744,8.102451,3.965602,-5.755573,-7.366481,9.861888,-6.088954,5.909711,3.922341,6.023030,1.023063,-7.424389,5.055323,4.864264,-5.377683,-8.502305,2.525400,1.596500,-9.466925,6.416733,1.480426,0.620157,7.790118,1.909050,1.143081,-8.283672,6.516932,6.863733,5.085753,-9.371866,3.455555,6.876923,-8.915551,-7.880914,-0.104912,-5.455059,-2.952397,-2.989685,-8.412140,5.969121,-9.534813,6.835467,-3.388635,-0.293932,7.375224,4.070989,-6.345341,-4.383017,-3.768723,8.533907,-4.784281,-9.196087,-4.481921,-2.625998,-2.505972,-7.996616,0.287418,0.593082,5.543069,-5.025758,-7.899115,2.285062,-9.174741,-4.520316,-0.015603,-4.915985,8.034698,-3.957325,0.213684,-5.314458,-0.297501,-9.766130,-7.071292,4.443109,5.195894,2.490698,4.131190,-7.179056,-8.092993,-3.723633,4.991309,1.805883,4.075125,-3.682319,-5.279994,9.556787,8.981581,6.008650,9.269409,1.079340,-0.529932,-3.307194,-5.065084,1.824057,2.595758,4.940846,-0.778235,7.141992,-4.390505,-7.552175,7.498080,6.524371,8.308036,-9.795785,0.950291,-8.901904,-1.446826,-3.767708,5.814146,8.053427,7.068057,6.914411,7.044456,-8.282679,-4.178629,1.425428,-0.479138,8.183341,4.839457,-4.208128,4.960618,-3.933670,8.517036,-5.633351,-7.341273,-7.378144,6.466726,-6.003656,-5.579816,-8.993631,8.213705,-0.739463,1.146777,-7.990259,-0.524833,0.001560,9.548273,9.052273,-9.357693,3.721005,-0.865104,1.357900,-5.198639,-1.785348,-8.441822,7.812967,-3.875890,0.061340,9.203796,-2.170668,-6.328172,-6.700279,7.456125,-4.688783,3.537207,8.109358,9.708473,6.060927,-4.159966,2.413491,4.654616,-0.270380,-5.072018,2.346911,5.117196,8.013192,5.296825,2.671056,-9.437836,0.261209,-1.663681,9.009595,7.485217,3.983841,-8.015771,-7.589646,3.283472,-4.072766,-7.893824,-7.220196,1.835359,8.849026,5.269122,-0.801615,-3.052699,7.897318,-2.743877,3.959773,-9.840681,9.598144,8.176785,-0.687168,-1.189902,-4.867408,-5.345302,4.861209,4.559263,-5.725895,1.018912,-8.793910,-5.520935,-5.592538,-8.679126,-3.934962,-7.251599,4.571768,3.252950,2.257829,-5.788122,-7.422888,-2.482705,1.540034,-0.645718,-5.624482,-9.281693,-6.555195,-6.011610,6.721398,-7.332544,6.600513,9.110975,-0.071767,-8.989204,-7.205993,7.204035,2.186096,-7.032894,2.285481,7.276230,8.826070,-4.323667,-4.354916,-1.833393,4.209038,-9.627422,-7.932551,-2.465661,-4.573011,-7.205912,1.739357,-0.414170,2.119303,9.699191,0.333439,-2.527193,-7.991391,-9.411053,8.067195,-3.861081,4.850001,-3.247398,-4.149341,-8.584302,3.443448,-9.491255,2.304332,-2.600435,4.016668,7.225610,-9.562271,3.979271,0.782264,5.586674,0.751987,7.795788,-0.722889,-5.570066,-1.598723,-9.368004,5.967117,0.144255,5.830373,0.638815,0.075409,8.819847,-8.464569,7.186728,2.005740,-6.253003,-4.004601,9.705030,2.061199,-1.649553,3.313307,-9.093765,4.390379,9.401361,7.200744,1.821147,7.844143,-1.126169,-4.082211,9.959810,-8.306418,-7.724969], dtype = "float64")#candidate|2950|(315,)|const|float64
var_2951 = relay.var("var_2951", dtype = "float64", shape = (4, 12))#candidate|2951|(4, 12)|var|float64
call_2949 = relay.TupleGetItem(func_493_call(relay.reshape(const_2950.astype('float64'), [3, 7, 15]), relay.reshape(var_2951.astype('float64'), [48,]), ), 1)
call_2952 = relay.TupleGetItem(func_496_call(relay.reshape(const_2950.astype('float64'), [3, 7, 15]), relay.reshape(var_2951.astype('float64'), [48,]), ), 1)
func_1647_call = mod.get_global_var('func_1647')
func_1650_call = mutated_mod.get_global_var('func_1650')
var_2977 = relay.var("var_2977", dtype = "float64", shape = (182,))#candidate|2977|(182,)|var|float64
call_2976 = relay.TupleGetItem(func_1647_call(relay.reshape(var_2977.astype('float64'), [1, 14, 13])), 0)
call_2978 = relay.TupleGetItem(func_1650_call(relay.reshape(var_2977.astype('float64'), [1, 14, 13])), 0)
uop_3005 = relay.log10(var_2931.astype('float32')) # shape=(10, 13, 4)
bop_3023 = relay.logical_and(var_2977.astype('bool'), relay.reshape(call_2976.astype('bool'), relay.shape_of(var_2977))) # shape=(182,)
bop_3026 = relay.logical_and(var_2977.astype('bool'), relay.reshape(call_2978.astype('bool'), relay.shape_of(var_2977))) # shape=(182,)
bop_3039 = relay.divide(call_2976.astype('float64'), relay.reshape(var_2977.astype('float64'), relay.shape_of(call_2976))) # shape=(1, 14, 13)
bop_3042 = relay.divide(call_2978.astype('float64'), relay.reshape(var_2977.astype('float64'), relay.shape_of(call_2978))) # shape=(1, 14, 13)
output = relay.Tuple([call_2923,bop_2932,call_2943,call_2949,const_2950,var_2951,uop_3005,bop_3023,bop_3039,])
output2 = relay.Tuple([call_2924,bop_2935,call_2944,call_2952,const_2950,var_2951,uop_3005,bop_3026,bop_3042,])
func_3045 = relay.Function([var_2931,var_2951,var_2977,], output)
mod['func_3045'] = func_3045
mod = relay.transform.InferType()(mod)
mutated_mod['func_3045'] = func_3045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3045_call = mutated_mod.get_global_var('func_3045')
var_3047 = relay.var("var_3047", dtype = "bool", shape = (10, 13, 4))#candidate|3047|(10, 13, 4)|var|bool
var_3048 = relay.var("var_3048", dtype = "float64", shape = (4, 12))#candidate|3048|(4, 12)|var|float64
var_3049 = relay.var("var_3049", dtype = "float64", shape = (182,))#candidate|3049|(182,)|var|float64
call_3046 = func_3045_call(var_3047,var_3048,var_3049,)
output = call_3046
func_3050 = relay.Function([var_3047,var_3048,var_3049,], output)
mutated_mod['func_3050'] = func_3050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mod.get_global_var('func_2281')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_3052 = relay.TupleGetItem(func_2281_call(), 0)
call_3053 = relay.TupleGetItem(func_2283_call(), 0)
uop_3063 = relay.tan(call_3052.astype('float64')) # shape=(3, 13, 7)
uop_3065 = relay.tan(call_3053.astype('float64')) # shape=(3, 13, 7)
func_2005_call = mod.get_global_var('func_2005')
func_2007_call = mutated_mod.get_global_var('func_2007')
call_3081 = relay.TupleGetItem(func_2005_call(relay.reshape(uop_3063.astype('float32'), [3, 13, 7])), 1)
call_3082 = relay.TupleGetItem(func_2007_call(relay.reshape(uop_3063.astype('float32'), [3, 13, 7])), 1)
output = relay.Tuple([uop_3063,call_3081,])
output2 = relay.Tuple([uop_3065,call_3082,])
func_3083 = relay.Function([], output)
mod['func_3083'] = func_3083
mod = relay.transform.InferType()(mod)
mutated_mod['func_3083'] = func_3083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3083_call = mutated_mod.get_global_var('func_3083')
call_3084 = func_3083_call()
output = call_3084
func_3085 = relay.Function([], output)
mutated_mod['func_3085'] = func_3085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1899_call = mod.get_global_var('func_1899')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_3092 = func_1899_call()
call_3093 = func_1899_call()
var_3097 = relay.var("var_3097", dtype = "float32", shape = (3, 13, 7))#candidate|3097|(3, 13, 7)|var|float32
bop_3098 = relay.floor_divide(call_3092.astype('float64'), relay.reshape(var_3097.astype('float64'), relay.shape_of(call_3092))) # shape=(3, 13, 7)
bop_3101 = relay.floor_divide(call_3093.astype('float64'), relay.reshape(var_3097.astype('float64'), relay.shape_of(call_3093))) # shape=(3, 13, 7)
uop_3105 = relay.sigmoid(var_3097.astype('float64')) # shape=(3, 13, 7)
func_1647_call = mod.get_global_var('func_1647')
func_1650_call = mutated_mod.get_global_var('func_1650')
const_3138 = relay.const([[-5.884289,8.928099,-5.311571,5.831700,-6.466931,1.693823,-0.180987],[-9.385760,-2.963432,-6.094459,-7.237125,-3.326734,-7.472741,4.308431],[-8.402915,-6.726455,-5.269017,1.755869,-7.263461,-7.597577,-9.439674],[4.322907,1.869394,-5.412095,-3.073044,-8.484145,9.169155,2.797715],[-1.509705,2.379611,8.415629,-5.177829,4.720891,-1.613037,-1.650788],[1.997505,-8.499077,1.045335,-2.047613,3.701655,-3.461230,4.119499],[1.588382,5.734301,-9.923745,-0.926455,-5.852521,4.303009,-0.803944],[0.130422,-0.025881,4.885691,-5.284038,-0.336940,2.725366,4.763619],[7.481206,6.072455,4.163208,2.690245,0.299990,6.028001,-3.921465],[-6.974699,-5.821425,0.066967,-6.898176,7.816297,5.710873,2.616592],[-5.670563,-7.808137,3.667164,-0.812879,-4.275230,-4.940283,8.393963],[-3.080931,-4.944494,2.953877,-2.836511,9.792447,8.569351,5.884897],[5.569282,9.860332,5.428723,3.346673,-6.089442,3.547920,8.075937],[-7.594634,2.946637,-6.210734,9.047295,-1.116632,-6.656679,-9.691103],[7.762500,-9.887501,-5.197858,-5.523052,6.503650,5.037646,0.360148],[4.519238,-6.994391,4.743393,-2.162639,-4.596921,0.590943,2.623980],[-9.621308,-5.690615,-7.814562,-3.015730,-3.664982,-1.776568,4.651241],[3.049585,8.083231,6.864258,4.274602,5.403008,6.636015,0.653415],[6.150818,-8.616044,7.876220,9.267838,-2.170132,-7.878164,-1.711756],[-3.023963,-6.215243,-2.566930,-5.297050,-1.602503,-0.599059,5.821558],[9.202974,0.017332,-3.962671,-3.661352,-1.114506,4.548341,-3.375265],[7.696645,-0.923325,-8.362019,-1.243237,-8.231208,-0.369796,-2.259948],[8.897027,-1.310378,-9.484185,5.384565,-3.905262,-3.439535,2.193467],[2.615221,-4.777911,-6.098806,-1.408380,7.367188,6.059514,-1.307852],[-7.056391,-4.070505,-0.342181,-4.202193,-3.096857,2.822112,-0.497274],[8.603239,6.535112,4.531766,-7.978781,3.682166,-3.716314,9.499147]], dtype = "float64")#candidate|3138|(26, 7)|const|float64
call_3137 = relay.TupleGetItem(func_1647_call(relay.reshape(const_3138.astype('float64'), [1, 14, 13])), 0)
call_3139 = relay.TupleGetItem(func_1650_call(relay.reshape(const_3138.astype('float64'), [1, 14, 13])), 0)
output = relay.Tuple([bop_3098,uop_3105,call_3137,const_3138,])
output2 = relay.Tuple([bop_3101,uop_3105,call_3139,const_3138,])
func_3145 = relay.Function([var_3097,], output)
mod['func_3145'] = func_3145
mod = relay.transform.InferType()(mod)
var_3146 = relay.var("var_3146", dtype = "float32", shape = (3, 13, 7))#candidate|3146|(3, 13, 7)|var|float32
output = func_3145(var_3146)
func_3147 = relay.Function([var_3146], output)
mutated_mod['func_3147'] = func_3147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3083_call = mod.get_global_var('func_3083')
func_3085_call = mutated_mod.get_global_var('func_3085')
call_3162 = relay.TupleGetItem(func_3083_call(), 0)
call_3163 = relay.TupleGetItem(func_3085_call(), 0)
func_2722_call = mod.get_global_var('func_2722')
func_2728_call = mutated_mod.get_global_var('func_2728')
const_3167 = relay.const([6.195498,2.294248,-1.966602,2.812746,3.109995,2.158137,-0.650576,-1.668802,9.390386,-1.224264,-3.542253,-2.593814,-2.365316,-0.853795,-0.183624,0.507725,4.495324,8.015916,-4.192445,8.489545,8.131167,-6.294051,8.058797,4.230514,1.845802,-6.590776,3.370829,-5.963371,7.444386,-7.480917,-1.156918,-7.582725,-3.067639,-5.203215,-8.459843,-1.122644,-2.174820,4.670610,0.249522,-5.230472,-8.410811,-9.107362,-9.340574,9.499934,2.326472,9.167331,8.614372,3.939150,2.404816,-1.162923,7.023427,0.536021,1.984438,3.447168,0.921820,8.027570,4.048025,7.670533,0.382710,5.742904,-2.584653,-1.895055,-4.990961,5.073419,3.794784,8.434745,-5.628654,-8.175775,8.955364,-0.353219,-6.209318,-7.728020,3.236547,1.381100,7.032605,1.209903,5.248395,5.763792,6.635219,8.380770,2.904878,-0.397171,6.788765,9.617429,-1.919796,1.655854,-6.586686,-3.843390,0.302831,-1.278826,6.058154,4.807703,7.709822,-8.482764,3.908105,-8.002619,2.621299,1.677606,2.229542,3.393081,-0.550728,-2.397648,5.232906,8.621301,-5.985827,1.345244,6.751583,-0.379855,9.789070,-0.922320,-5.652226,3.618216,6.381446,-6.277344,-2.903414,-9.798549,-0.945739,6.839215,-1.326300,4.831632,-1.764432,-5.645950,3.999959,-3.514358,5.664129,3.775848,5.332167,4.766890,0.335219,-1.864205,-9.459732,1.743841,8.793855,-4.970877,6.602998,8.667539,-3.261102,5.573482,-5.108471,-9.955472,-8.969257,-7.269662,9.496733,-7.155882,4.758761,-3.786654,-6.879771,3.842113,-4.094749,2.497737,3.607152,8.402296,-3.846220,2.389948,-2.810978,-1.594395,9.538850,5.028417,4.663431,-7.952602,-1.778027,-7.256744,-2.190919,-4.266170,1.443467,-0.296248,-8.844172,-3.297207,-6.665393,-4.203933,0.116366,-7.749331,8.973847,0.776487,9.393505,1.752796,-2.200408,-2.755468,3.444404,0.106155,-7.959915,5.702982,5.603653,9.119824,2.031721,4.034177,5.999805,-2.321000,9.813021,0.736525,7.132567,-0.624865,-9.745904,-2.692140,5.453522,-1.308558,1.714302,6.564261,4.808698,-5.308531,-5.130397,1.408273,4.133967,-7.019536,-6.098580,-1.446191,-7.115027,4.246521,1.191732,8.931729,-0.256442,5.434318,9.654726,-9.328938,6.047816,-5.492501,-2.279488,6.956117,9.371213,-1.007577,9.710748,9.056683,9.568204,-8.689574,-6.976186,-5.594190,5.819512,-4.296031,-7.196427,9.371715,0.806350,8.416891,-7.089134,-3.852230,-3.313640,6.272163,0.456933,0.441632,7.715605,4.735952,0.038213,-1.299732,1.489525,-8.230878,-7.432020,-7.062916,4.487799,5.631312,-8.011334,5.856632,1.160603,4.033113,9.977153,8.067828,-0.476369,-5.917900,-3.762431,3.617171,0.952928,8.391480,8.205877,8.862195,3.522117,-3.223957,-5.693311,-9.350929,-7.852083,-6.212899,2.837076,0.574925,2.590085,2.833673,-3.857678,7.640729,-8.582870,4.970019,-3.573242,-1.946073,-7.691548,-2.376069,-4.484776,-6.488806,-6.435602,-8.842024,-8.310994,8.365893,2.631882,-0.663536,4.347581,6.636608,-4.471723,-5.373088,-5.069052,7.433845,8.389624,1.568455,-3.716221,7.362925,5.966950,-4.591296,8.781161,0.897227,0.764417,-3.528064,5.555282,-3.877748,7.824859,2.395843,-2.990748,-3.668112,-7.591555,5.459580,7.680562,6.710962,6.164726], dtype = "float64")#candidate|3167|(315,)|const|float64
var_3168 = relay.var("var_3168", dtype = "float64", shape = (48,))#candidate|3168|(48,)|var|float64
const_3169 = relay.const([-8.099688,-9.672746,1.387815,5.540827,4.368969,5.778822,4.353949,4.753553,-1.651165,9.946898,6.486184,-7.670587,3.191415,1.033870,-9.247557,1.769158,-6.688042,0.198231,0.121221,-6.270531,-6.829594,-2.680848,2.864857,8.623138,-3.090010,7.520816,4.324053,9.614282,9.283829,2.942017,-0.128280,-2.057588,-9.270412,-6.581450,-5.791331,-7.094429,-3.739411,3.471831,7.538734,5.103833,2.659996,7.845588,-5.334496,-2.652788,-5.108305,7.572650,-3.161684,0.039365,-4.776574,-0.210536,-1.596218,5.160442,1.978872,-9.224505,5.768158,-2.648897,-6.157146,1.098504,-3.179151,-3.427332,-2.674511,8.912417,-1.606296,9.796011,-4.247333,7.299297,0.714124,7.677761,5.491828,4.574857,-7.761408,-1.724739,2.806237,8.306683,2.998909,-7.485947,-5.831107,-4.146852,-1.077714,2.948123,0.017292,8.783502,6.643861,0.928138,-8.081193,-3.286402,-6.939951,3.989697,-7.176261,2.786908,2.320011,4.320896,-5.246201,-2.197448,-6.369160,2.466527,-4.676392,-9.156029,-9.528978,2.016621,-3.733823,3.714614,-3.546906,-2.337414,6.419740,-9.759226,-4.621993,-5.080557,8.046106,6.560792,-2.778076,8.922253,-0.118344,0.195325,6.320210,2.516197,-1.964557,-3.983208,-1.592581,7.206930,-0.572161,-1.665983,-0.385590,3.187596,7.021376,7.954985,-0.844044,-3.317978,-0.019914,3.946397,-8.440372,8.508060,9.871234,0.762563,-6.765960,3.538419,-8.986027,0.151011,5.277031,-8.740254,-0.818263,-3.738529,-8.815376,6.216756,-7.805779,-4.500154,1.671889,8.814644,7.894475,-4.431097,-2.594693,0.107918,1.891900,8.632788,6.683919,1.192606,0.753222,-6.839703,9.167681,-7.942850,-6.748525,-2.280534,-4.991393,-2.897187,7.057289,9.024479,1.658832,-7.709401,-6.361721,1.937475,-2.823777,8.164721,-6.196273,4.111414,7.260892,-2.502407,2.277877,1.078815,-6.402150,2.113631,6.477913,5.471356,4.726895,8.191929,0.412513,-0.961265,-2.953073,6.602344,3.608296,-9.539404,-1.207385,4.196835,3.289506,0.459519,-5.085705,2.740599,-7.494348,-1.762737,9.193857,4.795317,-6.788155,-5.369386,5.382404,-7.102334,-2.251210,5.523281,9.251395,-7.990022,7.548750,-6.462296,5.155134,4.429271,2.448099,3.176249,-5.605121,1.954339,-6.541488,7.896308,-5.373473,0.677405,-1.236846,5.604737,8.953871,-2.646071,-3.998217,-3.538739,5.100134,4.309071,-0.824826,4.013088,4.507356,9.132001,-2.022351,7.509269,-1.888254,5.491240,9.356232,-7.221169,3.028687,4.320882,-2.402950,8.604887,-5.005765,-9.884702,5.405030,2.169578,-8.088726,7.386944,7.838027,8.550001,4.255352,-7.344493,-8.705818,8.464849,3.951449,7.780410,-4.494386,3.710853,9.151059,5.851978,2.485333,4.561124,-8.310766,-9.784817,0.229937,8.714600,0.463496,5.197897,5.587928,3.782118,4.572977,-1.628027,2.035216,-5.574191,9.677045,8.287502,-2.789258,-6.933316,7.721493,-5.029491,0.793548,8.663339,5.789292,-3.537217,6.182690,-0.288080,-5.405825,1.630084,-8.501461,-3.135941,5.352878,1.533071,-9.325929,-8.375187,-7.665270,-9.041806,4.935962,-8.521033,-3.466436,1.236576,-3.344756,-5.068222,-5.384670,-3.993262,-6.695656,-1.826029,8.838271,9.528574,1.861435,9.781154,4.536511,1.048922,-0.078482,2.869621,-0.662954,-1.504271,-2.547343,8.125773,-4.485708,-5.987944,-6.270253,9.221572,-2.067698,2.717884,-0.937141,9.159222,-1.805404,-1.208552,2.921819,2.343306,-6.879950,-0.138772,4.731159,7.855935,-8.380776,-8.923692,-1.809470,-2.631672,-1.282870,8.589911,-7.327549,-6.676694,4.538813,2.655859,3.382041,7.644413,8.092056,-8.128604,3.089324,-0.939055,4.730417,3.056719,-9.398887,-4.292387,3.532473,-4.681589,3.950804,7.306672,8.868475,1.217737,0.563906,9.304353,-6.690237,9.725262,4.603547,4.010677,-6.596224,7.017851,-2.469861,-2.829316,8.263295,-6.258202,8.615634,6.576179,-8.499801,3.471819,8.372667,-6.771717,1.079227,-5.221639,-2.411068,5.062240,-2.479823,6.914667,4.252609,-8.692820,-4.762679,2.472919,-4.194877,3.758436,1.215277,4.099917,6.297891,-1.818605,4.991751,9.952986,4.756342,6.686377,9.590135,-6.118504,-4.168513,3.646944,6.113803,-9.301685,-9.302462,8.170549,9.126459,-4.673686,-5.172091,8.878855,2.976845,8.923532,3.287759,-0.123405,-5.406654,7.687391,-1.283904,7.932999,5.879435,0.926824,8.602189,1.396303,0.904126,9.378335,0.890816,-0.242611,-2.152425,8.095944,-4.892363,-9.975350,-4.296108,2.534048,9.938727,5.178815,-2.126671,-6.769951,9.477844,-8.438790,2.341650,-6.835335,-7.888905,-5.833492,2.839577,1.349736,5.612698,-5.821721,9.214744,-7.144039,-5.536304,-8.747186,7.646429,5.943166,-9.786638,8.470123,3.262644,-6.350618,-4.534688,-4.822960,-2.416664,0.788138,-8.629495,-3.636893,4.641378,-6.060623,-5.680078,3.852825,0.793101,-6.909151,-9.126509,5.847411,0.981235,-1.470263,-1.275386,2.162549,-7.398931,2.664806,-1.916002,-4.697639,-8.465964,-8.556227,5.683450,-5.113824,-5.290547,7.404954,1.393795,-9.842958,-4.850265,-8.224941,-0.029339,-7.563052,5.675509,3.920680,3.111723,6.514489,-8.714757,-8.974893,6.139717,-9.998555,4.415001,6.118755,-7.541670,1.628951,-0.131562,-1.939155,-3.792743,8.551792,-1.563671,7.582662,-7.683242,1.631837,-6.681253,0.793434,8.736979,3.417393,6.917971,2.403861,1.253910,-0.949393,-4.580198,-6.788233,6.593427,-7.475200,-6.241421,3.077526,2.096512,5.511713,-1.715773,6.755210,-0.001923,-0.610892,5.077563,1.176696,2.419426,-5.433728,-9.585592,-7.936317,-3.604049,7.026229,-9.820818,-2.390420,-3.753118,-1.993647,-2.622371,-5.381856,-6.537355,-5.780168,-2.255902,-3.086328,2.570212,5.398812,5.052019,-1.077115,2.097318,-8.248594,-8.805219,5.230200,-8.378615,-6.343565,9.866459,1.519394,9.162249,-7.964852,-4.025728,0.750257,0.087362,6.713679,-4.251558,1.816408,-2.377918,-4.550447,-0.141632,4.477579,5.416048,2.541665,-2.284384,-9.704064,-9.734096,0.406738,-1.073692,-0.684008,6.750859,-9.111667,6.101850,0.840490,-2.014061,3.204866,4.772308,0.285464,-8.019521,-9.783898,-3.551064,-9.867972,1.890911,7.574275,4.066953,6.034934,8.914373,-4.563257,0.699815,-7.155525,9.461636,-4.913145,-7.328986,3.164458,-8.687721,6.268569,8.134248,5.975273,5.186646,-9.311965,6.103486,-4.786178,6.829919,4.153149,-1.580007,-0.559445,6.570815,1.970691,6.388921,-9.060158,-8.132018,-5.897489,-9.642219,-8.774516,-7.406582,-0.098479,-8.244654,-9.896744,3.295927,7.292727,-5.374902,-0.043581,-8.653504,2.678745,-4.928559,-8.614848,-3.600964,-8.905486,-1.386398,-0.922504,9.092876,-6.626808,6.844265,-9.753956,8.717723,3.297696,4.426431,1.301308,5.588206,6.310597,0.785630,-9.276518,-3.083095,-0.938837,8.207359,7.632147,6.473279,-5.236417,7.573738,8.306435,-6.500286,-3.948900,-5.929911,-9.721998,-8.276958,-7.097563,6.216861,6.999005,2.384670,-2.127156,4.819213,-4.592354,-3.438057,0.326171,5.021240,-9.725946,7.230947,1.703606,-9.322587,6.709600,-6.221398,-3.400318,-3.087357,1.156225,3.569286,-0.059927,-1.298992,7.365908,-3.707058,-1.732050,-6.596468,7.111925,1.031932,9.098092,-4.247533,-7.019837,-6.401994,-2.319156,2.128993,6.385545,-6.634122,8.702265,-7.720438,6.169220,8.549238,-1.316540,-2.683943,-5.550515,-5.346655,5.021289,-3.098916,3.490134,2.643731,-9.009060,-5.372682,9.034819,7.694425,4.673917,-3.003727,-7.031970,-7.600333,1.233170,8.183492,-7.532603,0.873355,-9.272536,1.035051,4.536086,-8.261569,5.184935,9.756529,6.551843,5.963498,-6.244696,1.629345,-6.940091,3.738198,-1.323971,4.558858,-3.914384,-7.054322,-4.191493,8.100846,-9.032294,0.652241,-8.256748,5.286800,-8.876608,-7.588247,-8.478138,8.152708,4.115028,-4.943344,3.305669,-4.921076,-7.400420,9.778310,-4.012325,-1.039057,-2.433874,2.563477,-2.701322,-6.099225,5.698494,3.775372,-5.281623,-7.672221,8.043282], dtype = "float64")#candidate|3169|(768,)|const|float64
const_3170 = relay.const([[-1.571549,-8.320589,4.466173,-1.272755,-5.336759,-2.450106,-3.904193,7.297268,6.340531,5.314849,-0.468128,3.705067,-4.004989,-4.509205],[-7.195070,2.687812,-2.513376,6.262363,7.638819,8.935928,3.932444,-8.113668,-1.292557,-6.703239,6.293642,2.999437,1.533799,2.737333],[2.219748,3.569393,8.518116,8.420568,-1.490065,7.718993,-8.269101,6.332526,-2.339096,4.376600,-2.702748,-2.171418,2.634643,1.029101],[-2.517560,-4.668277,-1.307536,2.635417,-7.095282,-3.966074,-5.952107,-9.858890,-4.411863,-5.647284,-6.560860,-4.578926,0.379685,-0.235090],[-7.982644,-5.381446,-4.825623,8.710432,-1.767263,9.166612,2.001162,9.707993,8.587655,-8.893699,2.945636,6.936878,-8.448330,-7.373519],[-4.006902,-3.796201,-4.274224,-2.787887,1.782578,-9.509287,-5.912080,-4.843592,6.122487,9.253225,-8.472472,-0.641952,2.375095,1.552817],[8.049263,9.796604,-6.312942,4.150492,-4.923106,9.693746,1.931231,5.763146,9.748217,5.812221,7.213430,-4.874871,-9.473065,-0.862720],[-1.150250,3.596401,1.555042,3.085584,-6.529229,4.532652,-4.932779,-7.533101,-0.375498,-0.478082,0.150421,-3.428832,-2.576565,-2.388935],[2.013238,-5.868102,-0.559469,-6.017302,8.296996,8.763617,-1.299023,-8.273375,-1.649134,-2.938448,2.494620,-8.118440,-4.576566,6.127265],[8.440546,3.640796,-9.027230,-8.071393,4.755869,9.797815,5.142675,-7.043100,1.038232,-7.378176,0.906803,-8.269709,5.711217,0.203415],[1.568098,0.321120,0.872767,4.208433,-2.276380,-1.406119,-7.906222,-1.148774,2.559703,0.072325,-9.616610,-4.224916,-4.507744,-0.589768],[4.287792,3.252902,-1.214812,-4.111417,0.204768,-5.705757,1.784204,5.293490,-3.598669,0.789258,-4.402853,-0.092489,2.506205,-4.410264],[6.359063,0.511472,2.572324,4.647020,9.471592,1.163670,1.605496,4.836435,-1.229894,2.107983,-7.954823,-1.452729,5.481162,6.127480],[6.008393,9.787449,-0.409941,-9.446031,0.156501,-3.509302,6.691250,-5.066607,1.990478,9.167309,-1.514847,-0.838976,-9.056306,-8.961789],[7.900196,-3.133047,0.130587,3.440396,-6.366619,4.937692,8.441763,3.499160,2.022518,0.593917,7.669904,7.984726,3.462529,-8.489432],[-0.254407,-3.941910,2.370828,3.906166,-7.823077,-4.558435,-1.971822,-3.184569,6.267016,-3.749525,3.493681,4.533846,-4.918161,9.526379],[-1.444989,0.959029,-7.096084,-1.838961,-3.526136,-7.052627,-0.091851,-0.382813,8.744415,-8.442819,-9.768826,7.618849,0.289807,-4.762738],[4.083035,7.458776,0.536329,6.608194,-6.189389,1.211314,6.388622,8.532288,4.171662,-0.129340,1.396292,6.919060,6.394046,3.766578],[-7.441252,-2.315351,1.878662,0.610633,2.617992,-4.241916,7.829782,-1.342162,-8.343448,-0.534353,0.561284,-7.859956,-4.305624,-1.934776],[-5.973086,-0.356113,9.320312,5.193075,-0.064280,-2.911273,2.496747,-6.925026,-6.814752,7.000098,-6.060749,-9.875362,-5.003315,-1.007302],[4.274871,-4.460023,7.795176,-7.301616,0.936012,0.443978,-4.629907,5.303583,9.839734,-3.154429,4.978598,-7.962311,-7.486462,6.694268],[4.458050,4.333533,9.013780,-8.711247,-0.382605,0.780694,-5.865664,0.863514,-3.435227,-7.962327,-4.670294,-4.824263,-3.512129,-6.739856],[7.089504,6.832409,4.659147,5.471764,-0.612343,7.207868,-9.904383,4.970801,-2.949554,-4.446249,7.112969,-5.305037,5.028135,6.906029],[1.006379,-1.217436,-9.028425,8.561065,-3.604925,-8.569987,-2.957474,1.785100,-2.146799,-9.929716,-8.753626,-3.773081,4.303519,1.409479],[9.757132,4.732279,-2.904650,2.904209,8.452383,6.049939,-0.257371,6.668940,1.627955,2.604967,8.375963,-6.873244,-8.203289,5.810817],[8.033227,1.949445,-3.622141,4.202068,-2.358742,1.499585,3.781007,-0.790098,-1.874504,8.589031,-9.369949,6.566299,-5.365829,3.628286],[-7.309908,-6.023958,-4.877009,-8.796347,-9.240966,3.802481,9.029502,3.319279,9.566835,-6.037698,7.557694,-0.537971,-0.563225,1.209286],[0.165898,-5.957558,2.045043,-9.599320,-0.373738,-3.387083,-6.919294,7.623386,-6.270030,5.334740,-6.300475,9.911469,5.682084,-4.245126],[-0.731819,-4.872888,-5.353650,9.172947,0.594526,0.142160,3.777437,5.380597,-5.125950,1.367142,2.115653,-5.250276,-6.337967,1.968581],[4.748282,1.370743,1.463717,-3.943398,-2.897191,0.208012,2.667971,5.539889,7.033851,-7.468063,-6.247976,-6.728230,-3.942291,0.550054],[7.125494,-2.998673,-9.881108,-2.888889,2.108149,-0.406308,-5.168903,-7.173016,-1.584028,-4.332676,-7.788376,1.469823,-2.566512,-4.134984],[7.492538,8.761172,-1.458223,0.034797,-4.836219,-0.856211,-4.667077,9.538064,-0.475396,-0.297673,-7.312723,-7.401798,-6.553668,4.400491],[-4.800717,4.184133,0.207771,-3.323598,4.232075,8.962146,3.283932,2.025519,-2.021810,-1.820503,-1.431796,7.979775,-0.361986,1.951107],[-0.396476,5.041990,-7.504284,-2.097178,-8.620313,8.892111,-5.976973,3.808567,-0.134662,-2.505422,1.194124,-9.519803,6.638310,-7.605406],[0.618383,-7.269998,-4.282631,-8.412044,7.611795,4.801540,4.280492,0.790768,9.569651,9.137809,8.978716,-8.923468,3.050406,8.522766],[-7.758581,-3.554454,4.657824,7.721186,-2.669430,8.101595,-3.711132,1.710006,0.593833,-5.039508,5.119599,1.742013,8.333801,-8.829467],[-2.133320,1.832776,0.237414,-5.267618,2.194002,9.021542,-7.557291,1.320088,3.123817,-2.757201,3.017726,8.515742,8.791940,6.718603],[-9.009021,9.525810,6.898357,3.499687,-6.205272,-8.535626,-8.901511,3.110179,-1.417927,2.283286,-1.445962,-2.818218,-4.286951,-2.748732],[-6.129869,-3.309838,2.671980,9.248520,7.215176,-0.189161,2.640446,0.170171,-5.387822,-5.268414,8.925566,-5.063216,1.007706,7.917908],[-8.965763,7.991541,9.077585,6.605760,9.622490,-9.020617,4.430143,-7.955679,0.964725,-2.067250,9.345093,-8.549900,0.162094,-4.782453],[0.332081,-6.749180,7.071068,1.115263,-5.642012,-0.817202,9.788369,-0.322715,9.411371,2.923780,-9.106514,-1.524084,-5.032295,-2.821030],[0.491909,6.032428,-0.378871,-8.225288,0.671170,-8.132498,-6.057007,-9.726642,2.952284,-6.129501,8.492859,1.249346,-9.263896,3.231775],[-2.318046,-4.499476,-7.632500,9.634032,3.312740,2.944632,1.893556,-5.093609,-4.003767,2.289963,1.148138,-9.788334,-7.677699,-1.619505],[5.290307,7.817523,0.484889,0.489605,1.408853,-8.872820,-4.183634,-7.343440,-8.588123,4.228864,0.845894,-1.948745,-8.452090,7.270763],[8.441959,2.176843,-7.324922,-4.923063,-3.240296,9.875317,-4.244060,1.036199,9.547007,-7.093291,-9.983808,-9.936567,7.364459,6.987396],[9.552484,-1.344667,-7.202389,4.511767,-3.394798,4.971466,5.999257,0.425820,-1.915384,-6.837993,-5.361154,2.425791,-7.325934,-2.642855],[5.322452,-6.944796,-0.674227,1.919931,-3.114859,9.518996,-0.061079,-8.317902,-2.419819,-7.291199,-9.258737,-5.250495,9.109514,5.926494],[-1.386347,7.929701,5.548674,-3.960465,-3.476932,5.334946,6.934630,-5.150035,1.010142,4.674770,-0.997604,-9.701477,3.785202,6.220193],[4.030682,-3.912331,-6.010903,2.055111,7.510422,1.208118,6.641405,3.942304,-2.250298,-9.979575,-9.545325,6.074214,3.640979,9.749775],[-3.619233,-1.584203,1.368707,5.469464,-2.702269,-1.982650,0.274760,-8.142235,-6.434430,8.593742,7.225505,-7.714027,9.637101,-3.060665],[6.313222,8.967827,-3.341734,1.449141,0.204185,5.009911,1.510946,5.513574,4.541568,8.929657,9.436722,-0.590555,6.251851,-1.491242],[-3.905792,3.460105,-9.385426,-2.821529,-8.522865,7.430108,-6.455873,-4.256065,-4.383784,-9.389530,6.536875,7.405845,-7.271630,6.124735],[-2.989975,7.910597,-2.478932,-8.936812,6.565856,3.960618,2.913158,8.274571,7.383079,9.179184,-4.431193,6.713971,-8.158744,-9.408470],[1.252653,-4.827450,-3.478552,-7.239056,-1.741733,7.907839,3.083759,-2.779399,0.380168,4.363672,6.825597,-7.719821,-2.507236,1.349403],[-1.762435,-0.040117,1.944019,8.747137,-1.485699,-5.579624,5.356582,-7.643234,-2.600692,4.310428,3.399296,-8.467202,4.883394,-1.729948],[-6.059465,-9.806142,8.342740,-8.476223,3.729120,-9.795423,-9.128587,2.271170,5.228668,-6.517837,-4.223135,7.428090,-9.624367,-2.770167],[5.532660,-1.793105,-6.522917,-5.442245,5.514345,-2.538801,3.536849,-1.028093,1.075471,7.106193,0.088263,-7.233485,4.351483,3.052195],[0.212618,2.883159,-5.316898,-7.890655,1.221154,4.320893,-1.647434,0.947653,-8.389114,9.476223,7.264090,-4.256761,-0.601178,-9.836654],[6.112886,-6.107321,8.903659,2.578205,3.282316,-0.751088,-7.062161,7.660722,6.902410,-7.671656,-4.846154,1.560832,-7.895924,-0.412353],[-8.338446,-6.042747,1.249263,-3.403270,0.112595,-2.240422,-8.262242,9.729633,-1.647916,8.856439,6.660996,-2.866774,2.125455,-0.134191],[5.459829,-7.293190,1.544886,1.732934,3.665896,-1.929947,9.820035,6.830366,6.086665,3.268960,4.632400,-3.779381,-9.009014,-9.196681],[-5.898314,-7.944798,-4.034419,-7.931596,7.104624,-5.336406,8.112969,5.594410,1.579495,-6.095632,0.244235,4.372622,-9.880403,-8.787178],[-7.898914,-4.787381,8.333211,-4.043051,-9.580830,6.815715,2.466122,-8.274425,-1.360290,9.206359,3.251131,1.769786,8.760723,7.454743],[-0.399037,6.841859,1.484256,2.398924,-5.807552,-1.137102,-8.021208,-0.804344,1.963208,0.653921,4.509034,9.290013,-8.373225,3.946663],[1.491115,-5.963059,-4.818957,-5.740700,8.705297,-9.261349,-6.411896,-1.438888,7.384832,-9.669021,-6.881347,-5.181642,-6.142201,-5.276398],[-7.428339,3.938771,-7.588563,0.340573,3.337672,-7.674984,-5.884327,-7.608496,1.116657,9.411812,0.559425,4.286909,4.540769,2.170016],[-0.030529,0.930495,-7.721144,-1.334039,-5.812463,1.167900,-9.826604,-1.033718,3.321764,9.567338,-8.206849,6.590611,-1.802912,3.382799],[-2.532043,9.848190,-9.337671,-8.209288,9.668358,2.285947,-3.341853,6.028990,3.579753,7.291136,-6.452138,4.670342,-0.072795,0.364871],[-9.498062,-7.880262,6.019858,9.886006,-5.950742,-7.751419,-5.826558,0.703738,5.555020,1.618653,6.299298,9.233504,9.161967,-4.280352],[0.481616,-0.832426,-6.455891,-2.788138,9.962111,4.914451,2.957724,9.584712,2.560773,5.685656,-3.162806,2.218391,4.748811,2.698070],[-1.391055,-5.764622,5.036612,9.102355,-2.568882,-9.161374,3.475486,9.761490,9.052472,-8.468522,-9.433832,9.969929,7.493474,-4.759517],[5.646522,4.022886,6.352727,6.785061,3.596731,-5.814565,0.980090,2.438187,-7.683122,3.388729,6.503703,-3.253641,0.138923,-9.836555],[8.046418,-2.025056,9.371997,-7.608640,7.512613,2.534180,-2.839609,-0.111226,-9.184537,-2.127068,0.775425,9.766544,0.956370,-2.597199],[6.394567,7.703595,8.079639,-1.249755,-8.856008,3.125599,-0.991198,-3.439215,-1.592536,-4.821958,-1.683887,3.410889,6.896608,-4.403966],[-4.643007,5.908268,-9.443450,-1.015115,-7.768062,-6.947049,1.784828,2.431031,-2.006563,-0.229321,-2.321952,-5.916691,7.138555,-8.611484],[-2.679687,-7.079382,4.693909,-5.118253,-9.518576,2.294963,2.648070,5.921960,9.687686,1.781836,-1.604606,-9.600118,-3.231915,4.846079],[-1.171637,-4.762398,6.955711,-3.854549,6.287093,-7.280416,5.109299,-2.953046,7.143002,-7.691537,-4.118843,-4.424108,5.191490,-9.191177],[4.748273,-2.610452,3.979462,-7.395283,7.210564,-3.689984,-4.456146,-3.861302,-7.035878,-3.517048,3.291559,2.562737,-9.736095,-9.202424],[-1.921281,-8.622898,5.144738,-8.759354,7.981579,8.414547,2.116257,7.673422,-9.256791,3.767416,9.405907,-9.156631,-8.775016,-7.227945],[3.024589,1.278408,5.965886,-0.413691,-6.256441,-2.976150,4.611898,-7.571998,6.606380,-0.398674,8.127064,-2.975549,-0.514999,4.548974],[-0.445671,2.668593,8.548268,-1.195830,-4.686126,0.848568,9.655827,3.996913,2.395003,2.585131,5.864916,-0.957620,9.639129,6.188168],[8.500408,7.795962,3.090537,1.213427,8.762451,8.930957,-7.441658,-0.239146,-6.165592,9.966589,9.340154,-9.181788,-5.520119,2.062863],[-5.771213,1.445170,-4.742989,1.611792,-9.784882,-5.756045,-9.217873,5.931755,-3.559667,-6.998830,5.039957,-2.099768,-0.002531,-0.025651],[7.154017,9.031172,-2.834129,6.788825,0.313708,-4.102112,6.639326,2.269315,3.193005,5.512267,-4.451170,-8.527181,5.028519,-4.979236],[-1.262009,-3.327765,-2.961860,3.547331,5.440078,3.220903,1.916147,-0.160405,-4.937494,5.069095,-7.857609,1.924398,-9.990659,5.953065],[-9.257232,-8.440598,-4.885495,-8.434430,-2.824021,4.812237,-8.982474,-0.017173,8.457314,6.456180,-9.313978,1.442131,9.131937,2.999859],[-7.854203,2.120672,-9.869670,9.465111,-5.313923,6.503644,2.861561,-0.181191,-1.153740,-8.303949,0.837665,5.142608,-9.603791,0.589470],[-6.034472,5.279086,9.208144,4.214839,-0.474357,-9.108104,1.441544,3.653783,-3.408125,-9.305315,-8.345815,-7.909547,-2.988465,9.999872],[-7.331309,-9.923585,3.456098,-0.484195,-5.020736,-7.195377,-5.587831,-4.176685,1.824558,5.464874,9.748941,-6.024966,-8.977088,-0.986723],[-4.126653,3.625983,-3.613744,4.362764,7.509977,-5.908774,-5.428310,4.862320,7.223842,-7.069709,3.718527,-0.582891,3.482928,2.270731],[-4.306429,7.613787,6.305910,2.739178,-4.052543,-3.367141,-9.582184,-4.445020,1.307344,-4.274745,2.820914,7.477022,-7.823474,5.180764]], dtype = "float32")#candidate|3170|(91, 14)|const|float32
call_3166 = relay.TupleGetItem(func_2722_call(relay.reshape(const_3167.astype('float64'), [315,]), relay.reshape(var_3168.astype('float64'), [2, 24]), relay.reshape(const_3169.astype('float64'), [768,]), relay.reshape(const_3170.astype('float32'), [1274,]), ), 8)
call_3171 = relay.TupleGetItem(func_2728_call(relay.reshape(const_3167.astype('float64'), [315,]), relay.reshape(var_3168.astype('float64'), [2, 24]), relay.reshape(const_3169.astype('float64'), [768,]), relay.reshape(const_3170.astype('float32'), [1274,]), ), 8)
uop_3181 = relay.erf(const_3170.astype('float32')) # shape=(91, 14)
output = relay.Tuple([call_3162,call_3166,const_3167,var_3168,const_3169,uop_3181,])
output2 = relay.Tuple([call_3163,call_3171,const_3167,var_3168,const_3169,uop_3181,])
func_3185 = relay.Function([var_3168,], output)
mod['func_3185'] = func_3185
mod = relay.transform.InferType()(mod)
var_3186 = relay.var("var_3186", dtype = "float64", shape = (48,))#candidate|3186|(48,)|var|float64
output = func_3185(var_3186)
func_3187 = relay.Function([var_3186], output)
mutated_mod['func_3187'] = func_3187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1899_call = mod.get_global_var('func_1899')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_3203 = func_1899_call()
call_3204 = func_1899_call()
func_1647_call = mod.get_global_var('func_1647')
func_1650_call = mutated_mod.get_global_var('func_1650')
const_3206 = relay.const([5.619371,-9.293403,6.662819,-2.045153,-0.277596,7.586642,4.067974,-4.929483,3.135693,-7.217600,-1.528694,1.065357,-9.662097,6.533170,5.311286,7.140521,3.447483,1.619163,-1.287694,5.174643,6.982207,2.631260,6.755380,-3.325341,8.630857,-8.159154,5.059027,-5.948974,-9.085552,3.242409,2.974661,-9.699586,-3.574274,7.684265,4.854233,4.082326,8.246625,7.355303,-3.434385,-4.118503,8.722039,7.470225,-2.098246,-7.533076,8.553558,3.329079,-5.644808,-8.513992,0.207102,2.679814,-0.731994,0.038507,2.583497,0.781653,-2.233470,-5.306447,-4.853951,7.258352,1.882015,7.651790,2.358348,-4.089969,-5.453596,0.185334,-6.404974,2.800542,2.844518,7.638816,5.963464,6.387399,-9.593206,4.251827,9.104748,9.972614,-4.742489,-2.481271,7.001828,4.122265,0.767265,9.687011,7.287239,-1.082231,0.672563,-8.234106,-2.070642,0.128656,1.005378,-1.871095,9.972371,9.456314,-3.529253,5.234493,-8.602474,-4.380782,6.827116,-7.895535,-3.477796,-6.215257,-3.289140,-8.940256,-1.671429,9.883016,3.595971,-8.089455,9.904526,-1.414118,0.342865,-5.268335,6.112952,2.941769,-1.669833,8.542028,3.107363,1.734547,-0.045392,-8.622399,1.594442,-5.416087,3.750961,6.057521,4.512970,6.826421,0.963856,-1.313263,-4.772017,-9.014768,0.758748,1.727295,1.108491,-2.660417,-8.409263,-8.295598,-9.455872,-7.146082,6.191692,1.113814,-9.845578,-2.818926,-6.044543,-8.752334,-6.089116,3.005953,-2.235078,-6.633807,0.661566,-3.175907,-2.750252,6.467977,5.221801,-6.810115,9.731640,4.629067,-1.035281,-1.009968,5.647053,8.550929,1.767764,5.347241,7.489914,7.748133,9.872955,3.235421,-7.298812,-5.213914,-0.595433,-1.323757,-2.867534,9.689112,8.746951,7.944114,-6.829507,6.544512,-1.681139,-6.790824,-4.737887,-8.065872,5.188911,3.300704,7.066457,4.556953,9.686144,1.489330], dtype = "float64")#candidate|3206|(182,)|const|float64
call_3205 = relay.TupleGetItem(func_1647_call(relay.reshape(const_3206.astype('float64'), [1, 14, 13])), 0)
call_3207 = relay.TupleGetItem(func_1650_call(relay.reshape(const_3206.astype('float64'), [1, 14, 13])), 0)
uop_3223 = relay.atan(const_3206.astype('float64')) # shape=(182,)
output = relay.Tuple([call_3203,call_3205,uop_3223,])
output2 = relay.Tuple([call_3204,call_3207,uop_3223,])
func_3226 = relay.Function([], output)
mod['func_3226'] = func_3226
mod = relay.transform.InferType()(mod)
output = func_3226()
func_3227 = relay.Function([], output)
mutated_mod['func_3227'] = func_3227
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_3233 = relay.TupleGetItem(func_2758_call(), 0)
call_3234 = relay.TupleGetItem(func_2759_call(), 0)
func_726_call = mod.get_global_var('func_726')
func_729_call = mutated_mod.get_global_var('func_729')
var_3237 = relay.var("var_3237", dtype = "uint16", shape = (30,))#candidate|3237|(30,)|var|uint16
call_3236 = func_726_call(relay.reshape(var_3237.astype('uint16'), [5, 6, 1]))
call_3238 = func_726_call(relay.reshape(var_3237.astype('uint16'), [5, 6, 1]))
uop_3249 = relay.exp(call_3233.astype('float32')) # shape=(10, 13, 4)
uop_3251 = relay.exp(call_3234.astype('float32')) # shape=(10, 13, 4)
bop_3252 = relay.add(uop_3249.astype('uint64'), relay.reshape(call_3233.astype('uint64'), relay.shape_of(uop_3249))) # shape=(10, 13, 4)
bop_3255 = relay.add(uop_3251.astype('uint64'), relay.reshape(call_3234.astype('uint64'), relay.shape_of(uop_3251))) # shape=(10, 13, 4)
output = relay.Tuple([call_3236,var_3237,bop_3252,])
output2 = relay.Tuple([call_3238,var_3237,bop_3255,])
func_3258 = relay.Function([var_3237,], output)
mod['func_3258'] = func_3258
mod = relay.transform.InferType()(mod)
var_3259 = relay.var("var_3259", dtype = "uint16", shape = (30,))#candidate|3259|(30,)|var|uint16
output = func_3258(var_3259)
func_3260 = relay.Function([var_3259], output)
mutated_mod['func_3260'] = func_3260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3083_call = mod.get_global_var('func_3083')
func_3085_call = mutated_mod.get_global_var('func_3085')
call_3262 = relay.TupleGetItem(func_3083_call(), 0)
call_3263 = relay.TupleGetItem(func_3085_call(), 0)
output = call_3262
output2 = call_3263
func_3273 = relay.Function([], output)
mod['func_3273'] = func_3273
mod = relay.transform.InferType()(mod)
output = func_3273()
func_3274 = relay.Function([], output)
mutated_mod['func_3274'] = func_3274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_3342 = func_2161_call()
call_3343 = func_2161_call()
func_2348_call = mod.get_global_var('func_2348')
func_2351_call = mutated_mod.get_global_var('func_2351')
var_3356 = relay.var("var_3356", dtype = "float64", shape = (48,))#candidate|3356|(48,)|var|float64
call_3355 = relay.TupleGetItem(func_2348_call(relay.reshape(var_3356.astype('float64'), [48,])), 3)
call_3357 = relay.TupleGetItem(func_2351_call(relay.reshape(var_3356.astype('float64'), [48,])), 3)
output = relay.Tuple([call_3342,call_3355,var_3356,])
output2 = relay.Tuple([call_3343,call_3357,var_3356,])
func_3358 = relay.Function([var_3356,], output)
mod['func_3358'] = func_3358
mod = relay.transform.InferType()(mod)
mutated_mod['func_3358'] = func_3358
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3359 = relay.var("var_3359", dtype = "float64", shape = (48,))#candidate|3359|(48,)|var|float64
func_3358_call = mutated_mod.get_global_var('func_3358')
call_3360 = func_3358_call(var_3359)
output = call_3360
func_3361 = relay.Function([var_3359], output)
mutated_mod['func_3361'] = func_3361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3383 = relay.var("var_3383", dtype = "float64", shape = (7, 1, 8))#candidate|3383|(7, 1, 8)|var|float64
uop_3384 = relay.erf(var_3383.astype('float64')) # shape=(7, 1, 8)
func_760_call = mod.get_global_var('func_760')
func_763_call = mutated_mod.get_global_var('func_763')
const_3393 = relay.const([[-0.107504,0.379117,-7.327082,6.606260,-7.244686,6.985969,-2.459502,2.896241,2.654026,4.420595,-1.915611,6.478690,-0.466409,-5.712065],[2.366606,1.271088,4.142631,-6.560254,-3.741584,-9.000564,9.372995,-4.061672,6.185580,-8.556670,-6.759316,-5.112875,8.352431,-4.952846],[-1.106264,-0.279891,-2.959802,2.805694,7.836209,0.109095,3.542440,-7.290010,7.866580,-2.216099,4.797730,7.045680,8.084318,-4.442347],[-6.089303,-7.040309,0.099730,-3.037637,-5.283830,6.520208,6.863705,2.058132,-2.652649,0.702236,-8.642327,-3.281225,-3.019242,-3.692753],[2.715681,-4.905011,1.481918,2.242406,-1.074847,-9.089209,4.308183,-6.346900,7.078466,-0.856112,8.365413,6.165280,3.482066,8.429393],[-9.426583,6.544095,-4.731452,5.803810,-6.499159,-1.737861,-2.182586,-2.856151,5.065609,-7.480181,-0.237479,-4.123880,-1.835062,-8.734122],[-9.366059,4.828263,4.278432,-8.293790,-9.122822,6.213138,-2.572519,0.970487,-9.803438,0.383705,-1.993162,-3.581673,-4.256730,7.910394],[4.949309,-3.353041,6.775114,-1.281609,5.670518,9.424040,-0.206832,-0.550700,-7.201301,8.777438,6.119855,-4.070438,-6.540159,3.684345],[-0.210294,2.636272,-5.128790,3.062467,1.200167,-0.608385,-5.904297,-6.969759,-2.416980,-4.089896,8.680925,8.590651,-9.880833,-6.356970],[5.579625,0.647370,-1.385051,4.911519,-4.740000,1.856068,-7.606567,-5.855356,7.859713,9.746276,-1.414965,-7.101955,9.912877,-6.524201],[-7.714269,-5.246957,-3.279603,1.688372,-0.463626,2.101074,6.386871,-9.810336,-5.019997,-3.514491,5.267661,1.847931,0.460714,1.873284],[-9.038657,-2.627716,7.698488,-2.151203,-7.147079,-8.003216,-2.987263,-5.411777,-8.405772,6.354687,9.113543,-3.181640,4.590352,-0.422240],[-8.365658,2.583424,-7.831541,3.472616,-2.257488,1.815968,4.636088,6.465273,-3.992739,5.177643,-5.241026,2.599861,-7.526472,-4.870437],[-4.199970,0.699693,3.310933,3.829117,-0.684860,6.006707,-2.194547,-9.618541,-3.265715,7.039921,8.453520,-3.566288,7.614487,1.254799],[8.846982,6.726287,0.701002,-7.938735,0.606833,-8.414895,-0.152224,-6.080377,-6.553829,-5.877719,-3.814499,9.542717,-2.851265,3.935807],[-0.574890,-3.924818,-1.788455,3.877998,-8.318235,-9.712060,2.372124,6.908227,-0.138785,-8.141481,-1.715835,-5.767037,-3.084327,-5.045348],[8.687830,-5.784139,5.527679,7.252274,-3.985466,2.010584,8.477433,-9.049176,-0.294367,-9.499077,0.374909,2.860306,-1.792187,-0.380166],[-3.505635,8.912550,-9.535375,2.910304,-8.597419,1.775711,2.491495,0.627847,5.030208,4.957230,-9.447477,-7.840671,-0.358225,6.783919],[3.155848,2.934775,1.438433,7.985182,-6.153744,4.552194,-1.343524,1.373680,4.445988,-5.244275,-3.562214,-5.177381,9.262537,-5.852875],[-0.701008,-8.786748,4.316405,2.743362,4.705775,-8.550640,4.329960,-5.068667,-8.517294,6.545602,8.324862,-2.524457,8.496632,-1.163920],[-6.417594,-5.201439,-6.585697,-8.540502,-9.216941,-3.145990,9.012231,8.258158,-6.376157,-4.778606,2.241750,-4.500133,1.118989,-6.748127],[5.889503,5.257042,5.362362,2.762941,1.347922,8.597772,7.031310,0.717949,-2.431776,-1.926102,-7.725088,-0.351860,-8.952901,-9.356863],[6.533145,8.265106,4.339257,-2.013913,-5.838042,0.868231,-4.925352,-2.499426,-8.508806,-9.724299,-6.810232,-9.004801,6.511665,7.567761],[2.536324,3.045145,-1.667919,-8.055916,8.840723,7.211929,-4.411878,2.963617,5.249634,-8.595405,7.236321,1.970493,8.748736,3.932070],[-6.648647,1.554113,-4.778643,-4.995506,0.866096,3.048320,-1.289044,-0.772514,2.908641,4.925301,9.789604,-2.033947,-5.129835,7.904198],[1.865391,-9.265472,7.555837,-4.861714,-8.714220,-1.031871,7.733799,-5.205101,-6.041968,-8.016153,5.203138,0.797688,0.921580,6.888513],[2.161231,-9.927736,9.341692,-7.061730,-6.418634,0.716713,4.733021,-2.251940,1.275673,-6.068005,5.802936,9.135918,-7.739286,-6.001037],[-3.595545,7.894108,-7.022594,2.719559,-1.042897,-0.788306,-1.184442,3.191807,9.218254,-9.518580,4.289421,8.776539,6.591592,9.798493],[1.633019,6.087110,3.561757,4.144662,-7.256572,-3.933338,-8.115414,0.400732,-9.307156,-7.434708,-0.617361,-5.902847,-5.756516,9.134560],[-2.867558,3.950631,-5.418213,5.395828,-5.385499,4.878173,0.877239,7.894620,-6.987921,-1.659654,-9.541547,-4.774353,6.816384,-9.202252],[-7.901889,5.770089,-1.789516,-4.071224,-9.791244,-7.946577,-2.796845,6.254940,1.855325,4.483815,-8.015367,-8.621766,2.223189,5.926104],[2.072262,-2.151402,8.990975,-4.677648,-8.857811,-6.408789,2.555256,4.112852,-9.383035,5.953445,-4.614707,7.236386,0.592413,9.361663],[9.979203,0.385073,-0.319066,-9.606988,-6.474900,6.079336,-5.553246,0.192761,-2.914726,6.019533,3.002247,0.104580,-7.620269,-7.409146],[-9.323974,-6.723768,2.699693,5.072618,3.135291,3.070811,-5.657634,-5.190544,4.694392,-4.683535,0.311874,-6.910708,4.857531,-0.247692],[3.822767,9.544644,-3.409101,0.464311,1.760939,7.787192,-2.918427,-5.198693,5.539381,5.354907,-4.914441,-9.943672,-4.718561,1.262398],[-5.703555,6.623070,-9.661120,-5.416474,-1.063549,-1.755830,-2.756869,-0.130604,0.876178,1.080296,4.312435,0.121034,3.481098,3.254111],[-5.200581,7.225896,-1.901239,-3.359928,4.585780,2.147380,-8.439048,0.363023,7.864944,-6.627184,7.521773,5.627198,-5.871504,-5.750247],[2.243167,8.400185,-9.369130,-3.425967,4.803593,-2.989557,1.685833,-8.220148,5.131950,-8.930100,1.005545,0.278913,5.758121,-9.341792],[4.135037,2.537356,-0.978101,9.862970,5.098918,-8.762455,-7.725969,9.445336,-8.739629,-1.096615,7.103125,1.288607,6.933508,0.273994],[4.044562,-5.531477,3.292255,3.098643,3.940533,-9.781276,2.497889,9.625587,8.682956,7.878725,4.217262,-7.061335,8.829980,7.415707],[-0.500891,6.750323,-1.893181,6.461220,9.109981,-9.501637,6.657980,4.278262,0.554115,-4.782376,4.032902,-7.345967,0.538962,5.190467],[-4.773222,3.577611,-5.759879,7.036253,0.229224,-8.544309,2.838475,6.240469,3.271092,7.168823,5.473478,-4.681525,-3.266638,8.962004],[0.802524,-1.306921,-6.320112,-5.685036,-4.282894,6.187363,-7.711817,-5.902503,-8.949285,-2.853549,-7.869185,-7.095881,-4.237498,-4.614907],[-9.287113,-6.620917,-7.350291,8.761278,9.535083,0.834965,7.892753,7.820090,-6.354934,-5.637966,8.749162,0.638697,-7.081140,8.739349],[-7.040065,7.615950,-7.568361,-2.681312,-1.878617,0.840149,0.762894,4.674636,3.486444,4.430200,-5.599172,6.854251,-5.598563,8.064665],[-9.625891,7.851534,-5.507987,6.739520,9.574172,-6.360645,-1.420425,7.732998,-3.798945,-0.478756,0.479904,-3.001229,2.839379,1.979269],[-5.114514,1.870670,1.774224,2.973959,7.575326,-3.766050,-8.090172,9.953178,-6.045334,-3.593477,4.941005,8.560910,-5.862091,0.886106],[0.738214,-3.385827,5.413048,-5.314909,-1.416163,6.923935,5.294939,-9.734455,-9.022132,-0.193532,-1.933335,4.503855,9.335355,-0.749725],[-6.798249,-8.861043,-1.215751,5.004873,-5.555593,1.020545,4.338345,-5.947884,-2.752725,-0.403336,-6.135274,-8.369396,-4.420334,4.931280],[-4.217483,2.181372,1.489593,-0.208855,-0.010728,5.086598,1.270753,-7.029279,6.594702,3.437439,7.141874,-1.605828,-4.702445,2.567625],[3.521747,1.407905,-8.024873,-9.643583,-2.640449,-0.572962,2.665770,8.253264,-9.362021,9.798058,-2.887089,9.500781,6.852761,-2.340676],[-2.442399,-2.177560,-9.780852,0.753615,-8.559369,-0.068502,-5.999811,-6.297164,-7.203168,8.466765,0.738595,8.389050,1.100317,8.074942],[-7.776104,0.414775,2.723764,-6.987002,1.597418,3.848795,-1.116386,-2.085942,-0.848791,-6.616921,-2.904858,9.846046,-8.500910,3.795243],[0.609465,-3.334419,-7.444516,9.362627,8.505385,6.136766,1.838934,6.608895,-4.435938,7.282140,-3.945801,-2.683265,7.029593,-1.611891],[-9.824612,4.305133,-8.753153,1.833203,2.660709,1.044271,4.455087,6.382363,4.922073,-8.347976,-9.361621,-2.843321,2.848722,4.839182],[-2.139833,-6.573597,-8.536691,-9.591104,-0.420964,7.370698,-7.199531,-0.502169,-4.221352,7.484926,-1.183787,8.919010,9.886554,4.647534],[-1.881371,9.612668,-0.095771,6.757970,3.945105,-4.233855,-0.392155,-9.581237,-8.814615,-3.860159,-6.273457,-0.250743,8.238156,-6.701902],[1.261243,6.753610,-8.037428,-3.029896,-7.880705,3.296105,8.999267,8.217894,-5.721763,4.175153,6.479615,7.640378,0.537517,-4.942612],[6.125129,8.980274,1.635503,7.391974,0.092740,-2.691242,8.413822,2.874431,2.994519,-5.125513,-4.786605,-3.277173,6.349646,-2.314917],[4.134172,4.233152,2.316581,3.954928,0.162602,-4.656067,-8.311397,4.290096,0.355061,3.641341,0.320128,-9.807041,4.753757,8.864008],[-0.141799,8.564616,7.987755,-4.616205,7.201204,0.542487,-8.597612,0.028293,-7.156015,4.966088,6.549521,4.889042,-2.685004,4.199645],[-9.350833,8.204694,-8.119908,4.067818,6.431553,-0.392391,8.787553,-0.302071,3.904589,9.461884,-8.468186,7.144396,7.722404,-9.380847],[-1.385119,9.310173,2.417943,8.851391,0.081033,1.806125,9.670665,6.549366,0.674395,-4.478636,4.663437,-5.913957,-1.841822,3.413935],[-7.232476,-9.233719,6.417407,-0.319297,-0.754846,-4.373245,-7.349689,-9.667707,2.969094,-2.403828,5.724153,-5.848001,-2.840268,-4.076963],[-5.877276,-6.694089,-5.503948,-8.256864,-2.303157,-2.190915,-2.015053,-7.369485,-6.057426,-0.732514,-1.075917,-1.116510,-0.997980,-1.591793],[9.081379,6.260704,3.201079,6.333128,-2.241251,0.953325,-1.271370,3.325440,7.537040,7.539396,4.398693,8.191790,-3.383401,3.423204],[-2.356946,-8.979603,5.640020,-6.360902,4.851448,-9.797883,1.779445,4.812163,8.204463,-5.655705,-5.760120,-4.308549,-2.759399,-1.902814],[1.013157,1.423738,2.421465,4.682058,1.066764,3.532344,2.975312,6.002039,-8.057103,-1.542206,2.803864,-3.200134,-4.186899,9.357362],[-3.867541,-2.429411,-2.429834,-4.851410,5.147760,-7.473750,7.396317,9.071553,1.429917,9.680349,1.964788,4.098455,-2.772140,9.907762],[-8.176643,0.898628,-4.405927,-2.512616,3.089898,-7.405500,-2.531050,-0.541406,9.745089,7.297204,-1.349517,-6.911054,-9.921883,-8.304279],[8.790804,-6.154573,2.610359,-0.064854,2.069313,-2.359724,2.451832,0.924772,4.941590,9.235163,5.825141,8.740349,8.377686,-3.722850],[8.718288,1.650937,-9.678994,-6.553866,1.281900,5.698817,7.495772,-6.925602,-4.795334,-1.128899,2.916768,-2.844710,-8.132895,-0.646285],[6.873383,-8.085834,9.945585,9.128217,6.752151,5.021122,2.816375,9.156441,-2.104785,7.606259,6.263334,-8.564111,-1.031090,8.876230],[-7.040121,-7.399179,-3.351324,-9.570503,-4.422319,4.499421,4.303511,0.941144,7.521947,0.843889,-7.514847,8.288278,3.238140,-7.993552],[-7.000002,-5.719359,5.364185,1.341393,6.511511,1.792465,3.344929,3.990615,-1.573497,9.477663,8.550295,3.208381,-1.651856,4.264702],[3.793060,6.782154,-2.694933,-6.574858,-7.459207,6.576570,-8.679635,-2.852634,-1.706114,-2.751517,-0.130545,-3.240187,8.799350,1.875467],[-5.663787,3.128259,-9.288119,-5.076892,-1.035788,-2.469057,-5.331101,3.050680,-7.008930,-8.196773,4.558032,0.953623,0.914667,-6.082984],[-6.958753,-0.028217,-5.586540,-9.682090,-8.994314,7.406596,6.803144,4.779473,-2.714468,-5.382174,-5.430744,8.052092,-7.611983,7.921141],[-7.529427,-3.782340,4.578498,-0.452838,-2.967853,-2.515486,5.929023,1.563396,1.707706,-8.957591,8.464044,2.842595,1.907999,-9.387607],[4.383747,2.039643,9.226117,-0.428239,-6.829215,-8.106440,7.621333,5.715820,7.533430,-2.206702,-9.690580,-4.135548,3.794411,5.071182],[-7.156544,-6.292558,-8.462387,3.933816,8.969534,-6.352858,-6.192032,-2.449824,-8.361604,-5.114750,5.797709,-9.572037,2.078505,4.953909],[-2.368842,-1.789959,-9.751438,3.552037,-8.653723,-6.185096,-5.714854,-8.695521,-0.022302,3.141679,-7.390732,-3.863539,-8.344108,6.794416],[3.398713,-3.168476,-0.113078,-5.395990,-4.563962,9.046675,-5.958160,-2.313023,-1.465316,-3.410860,-2.650946,2.448901,4.216411,-2.531780],[6.898170,-4.647670,-7.182033,-3.726604,7.641999,-6.159351,-0.624940,-0.240337,3.588659,-9.386410,0.611780,-6.902499,-5.156368,0.130955],[2.928746,7.295906,5.236441,3.147333,-3.076905,-9.499627,-0.209163,3.167646,-7.027143,-8.357946,6.501419,-9.386210,6.612418,-9.539999],[-0.199430,8.029267,2.826990,-0.561758,-8.674944,-7.243521,-4.442672,-9.627717,0.336930,8.037205,-9.057587,-5.394245,-4.592822,-4.307061],[3.338629,6.535200,-8.233590,-3.265293,1.743230,7.606144,-3.745384,7.849817,-0.168434,-5.390992,8.589721,-1.250057,9.182136,2.814065],[7.444923,4.337323,-1.356075,-6.163375,4.013598,-8.379076,-2.719528,1.258031,-9.457500,0.102522,-7.762738,-1.148683,8.372419,8.815241],[7.339156,5.720911,6.275669,-7.159426,4.734540,-9.423416,5.309932,-2.018885,-7.740555,-8.644840,-5.481152,-0.403134,9.089649,-8.572435],[3.378795,0.507566,4.653488,4.453347,7.704033,-4.974640,-9.653234,-5.574023,-2.638428,2.343075,-0.860642,9.817486,6.379597,0.264895],[-7.777679,-8.099541,-9.406034,1.457258,-0.991681,-7.433492,-1.709697,-8.350118,4.046463,-1.464802,8.738068,9.298426,1.394953,-7.010845]], dtype = "float32")#candidate|3393|(91, 14)|const|float32
call_3392 = func_760_call(relay.reshape(const_3393.astype('float32'), [14, 7, 13]))
call_3394 = func_760_call(relay.reshape(const_3393.astype('float32'), [14, 7, 13]))
bop_3398 = relay.floor_mod(uop_3384.astype('float32'), relay.reshape(var_3383.astype('float32'), relay.shape_of(uop_3384))) # shape=(7, 1, 8)
bop_3408 = relay.logical_and(uop_3384.astype('bool'), relay.reshape(bop_3398.astype('bool'), relay.shape_of(uop_3384))) # shape=(7, 1, 8)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_3427 = relay.TupleGetItem(func_1850_call(), 0)
call_3428 = relay.TupleGetItem(func_1851_call(), 0)
uop_3436 = relay.log10(bop_3408.astype('float64')) # shape=(7, 1, 8)
output = relay.Tuple([call_3392,const_3393,call_3427,uop_3436,])
output2 = relay.Tuple([call_3394,const_3393,call_3428,uop_3436,])
func_3438 = relay.Function([var_3383,], output)
mod['func_3438'] = func_3438
mod = relay.transform.InferType()(mod)
var_3439 = relay.var("var_3439", dtype = "float64", shape = (7, 1, 8))#candidate|3439|(7, 1, 8)|var|float64
output = func_3438(var_3439)
func_3440 = relay.Function([var_3439], output)
mutated_mod['func_3440'] = func_3440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3493 = relay.var("var_3493", dtype = "uint64", shape = (15, 14, 14))#candidate|3493|(15, 14, 14)|var|uint64
const_3494 = relay.const([[[2,-7,3,2,2,-7,-3,8,7,8,-10,-4,5,-2],[2,-1,7,3,-10,10,-6,8,1,-9,-5,2,1,-4],[-2,7,4,-8,-8,1,-5,9,-1,-3,3,3,-8,5],[2,6,-8,8,5,-2,-7,10,-7,-5,7,1,9,10],[-10,7,-4,8,7,5,3,4,2,4,-6,6,-9,3],[-2,5,8,7,-6,6,-2,7,6,-9,-7,8,4,-7],[4,8,5,-1,7,6,3,-9,1,-4,5,-7,-8,6],[-2,2,-4,-1,8,-1,10,-8,-7,9,3,7,9,-2],[1,-7,-2,-7,3,-3,-10,6,2,-2,-3,9,8,-3],[9,4,-5,1,1,-2,-7,-5,-1,-6,7,4,-1,-5],[10,-8,3,-9,2,-4,9,9,-10,3,-7,6,7,3],[4,8,6,-3,7,-7,-3,2,-6,-7,7,-10,9,8],[8,7,-1,-6,-3,6,-10,-9,-4,4,-3,-10,3,5],[-8,1,6,7,-2,-4,9,-7,3,-3,-6,-10,-10,-9]],[[2,6,-9,-5,-2,2,-3,-3,6,-3,-3,-9,3,-9],[-10,7,-4,-2,-9,-8,9,-9,8,-7,1,5,-6,4],[-6,4,3,7,-6,2,6,-8,-4,7,8,-6,4,4],[10,1,3,9,1,-5,7,-4,-1,-7,-1,7,-8,10],[-8,4,-10,-1,2,-1,8,-10,5,-7,6,1,8,-7],[-3,-8,9,9,7,-4,-2,10,1,4,-3,2,2,-5],[3,9,-8,9,1,9,-9,-6,10,-10,5,-6,-4,-6],[-6,-9,2,7,4,-7,7,10,-1,-7,-2,1,-1,-8],[7,-1,6,2,-7,7,-6,-6,-2,-8,-5,-3,2,-6],[1,9,-7,-9,-2,8,9,-1,-4,9,-3,9,10,5],[-6,-8,-3,2,-7,3,-3,9,8,8,-4,8,-2,5],[8,7,-3,8,-1,-7,3,-8,-1,-10,-4,1,-5,-7],[-5,-2,-4,-7,-3,-2,7,-3,-9,9,-7,-7,9,-2],[8,-3,4,5,4,5,-7,2,-8,8,-7,5,8,-8]],[[3,-3,-9,-1,-2,1,8,-5,-4,-3,-3,2,-10,7],[-1,6,5,5,6,7,4,-3,-3,-7,5,-1,-1,-2],[10,-10,4,-6,-5,-3,7,-8,5,3,-10,-6,2,-5],[10,5,-7,-2,-3,10,-9,3,-2,-9,2,6,4,-1],[7,1,-3,7,5,1,-8,-10,-3,-3,1,1,-5,9],[6,6,-6,-5,7,-9,1,-10,10,-6,-10,7,4,-9],[4,6,8,7,1,10,-4,-8,-10,6,10,-4,-4,4],[-8,4,-10,6,-4,-9,3,-3,-2,-3,-1,4,-2,4],[9,1,10,3,-8,10,-10,-7,10,-1,10,7,-3,-5],[-9,-1,6,8,-7,-7,-8,7,6,2,-1,-2,-6,-4],[-8,-4,-7,-5,-6,8,2,8,-2,9,-8,-6,1,-10],[7,-6,3,1,-4,1,-9,-3,4,-2,-6,-6,1,3],[-2,-1,-9,3,6,1,10,7,-3,-2,-2,5,7,-4],[5,-2,-4,-3,9,-4,10,6,1,1,6,3,2,-9]],[[1,-7,3,-1,-2,10,10,10,-1,-10,-10,6,-6,5],[9,7,7,6,3,9,-2,1,-4,2,5,-8,4,-2],[-5,10,-1,5,1,2,-9,-3,9,-4,3,8,9,5],[-10,-6,4,-10,-3,4,8,-1,-6,-9,8,-8,1,-9],[10,6,10,6,7,10,-2,-5,-2,-7,-1,-3,-2,-10],[-7,-3,-2,10,10,6,3,-9,-2,-5,-3,5,9,-4],[1,5,-4,8,9,8,3,9,3,10,4,-2,-8,-4],[-6,-1,6,-6,4,6,1,5,1,-1,1,10,9,-6],[-8,5,3,-1,-1,7,1,1,9,-6,-7,5,-8,-7],[8,3,6,-1,5,-5,-1,2,-8,-5,-8,-9,8,6],[10,5,7,-5,-8,-1,2,-1,-10,6,5,-7,2,9],[2,8,-9,2,-10,10,-5,1,8,-10,-5,8,-6,7],[3,-8,1,6,8,7,-7,6,-7,1,10,-6,8,7],[9,3,-9,-6,8,10,2,-2,4,2,6,9,-3,-1]],[[8,-6,-1,8,10,10,-6,4,10,6,5,-5,1,4],[-10,-4,2,-5,9,-5,-7,-6,9,-2,5,3,8,-10],[-4,3,-9,10,7,6,-9,4,8,-1,-2,-6,-3,-9],[-6,7,3,-4,7,6,1,3,-5,-8,-8,1,-1,9],[3,4,4,9,-3,10,7,5,9,8,4,-6,4,-4],[-4,1,-8,-7,8,2,1,1,-9,7,-4,-2,10,5],[-7,3,2,9,10,-4,3,10,-9,3,-7,8,5,4],[-9,-1,7,-8,-1,1,-4,-2,1,3,2,2,4,5],[-1,7,9,6,4,-7,2,6,2,-5,9,5,-5,3],[4,-1,6,-4,-5,-2,-8,-6,6,-8,-2,-1,4,2],[-10,9,2,10,-7,6,-7,-3,-9,7,2,4,-10,-7],[-1,-4,-6,9,-4,-8,3,4,-2,7,9,7,-9,7],[7,4,3,-3,2,6,8,6,10,3,9,5,4,-9],[-4,2,10,-1,5,-1,3,2,3,-5,10,-9,8,8]],[[6,4,-6,3,-6,9,8,8,-7,-5,10,7,7,-10],[-8,6,-8,5,-1,-9,3,-8,-8,-4,-9,-9,-8,9],[-10,2,-7,-3,-1,8,7,8,-5,-10,-5,2,-3,2],[-5,9,-2,-5,-9,4,7,3,9,-3,-8,-9,-9,-8],[2,-6,-3,-2,5,-3,-6,-8,9,8,-1,-2,5,-3],[-2,7,-10,-1,-9,9,-2,2,-9,4,10,-4,2,3],[7,2,-6,3,5,1,1,-9,10,3,-2,7,-9,-4],[-7,10,2,5,-2,-3,4,-10,2,10,-1,-3,-1,4],[3,1,-4,8,-3,-3,1,4,10,10,3,7,-2,8],[3,3,1,-10,7,2,-8,6,3,-5,-4,-8,-7,-3],[-5,4,3,6,3,9,-1,-9,8,-10,-5,-5,-2,-4],[-7,-9,7,2,1,4,-3,4,-5,-5,-10,5,10,2],[4,10,-4,4,2,-3,-4,-7,-1,-1,5,9,-10,9],[-4,-3,-9,-10,2,4,1,-7,4,4,-4,-2,-2,6]],[[-7,4,-6,-2,10,9,7,5,1,-5,-5,-10,5,-2],[7,8,1,-7,-9,-5,10,-10,-5,7,9,3,-2,-5],[-9,1,-2,-1,-3,3,9,10,2,-8,-6,-5,8,1],[2,-4,-2,6,8,-1,4,-10,4,2,-9,-2,-7,2],[-6,-3,6,7,4,5,9,-2,10,7,1,9,-2,-7],[-10,4,9,-2,7,-6,-3,5,-5,-8,-9,10,-6,2],[-1,-9,-7,7,-10,-4,10,-8,-8,-6,9,1,-9,-10],[1,-3,2,-5,4,-8,3,-1,-9,-8,1,-4,-10,-8],[6,-3,9,-3,-9,1,-2,-8,-10,-10,8,-8,3,-7],[4,3,-3,-1,2,5,-2,-5,-5,9,-1,-4,8,8],[-3,6,2,9,6,10,-4,1,1,-10,8,4,10,-8],[2,-2,3,-2,9,-8,1,-5,3,1,-2,2,2,-1],[6,1,-5,2,-4,3,-8,-10,-9,6,-9,-7,9,10],[5,-2,-1,10,-7,-6,-9,-6,-9,7,-9,1,-1,-10]],[[-10,-2,2,-8,8,-10,10,-9,6,7,-10,-5,-9,-7],[-7,-3,-7,-1,-10,3,7,-6,-1,8,-8,3,1,-7],[4,-3,2,9,-2,2,9,1,-9,5,-1,7,1,-9],[6,5,3,5,5,-7,-4,10,-4,-1,9,3,10,1],[-8,4,-8,7,6,-7,4,9,-4,-3,-9,9,2,-7],[-2,6,1,-5,10,8,-4,8,-10,-7,-5,3,7,-3],[6,3,-10,-9,10,10,5,-7,-5,-6,3,1,6,-3],[8,3,-8,3,7,1,-5,7,-10,-9,-9,-2,-10,2],[9,-10,3,-10,-8,-1,2,-2,2,8,-4,-7,-4,7],[3,2,7,8,3,-1,10,8,5,-10,-1,-8,-7,-2],[-5,-7,-8,-10,-10,5,8,-6,9,2,-6,-2,3,2],[7,3,2,-2,-8,7,3,-1,7,7,1,-9,-4,-4],[3,6,-9,-1,8,3,-6,-6,-10,9,-4,3,-8,4],[5,6,3,7,-1,-5,2,5,-6,-8,-7,6,-3,-1]],[[-3,-10,3,8,8,-2,-4,7,2,-7,-4,7,-9,-5],[1,-1,10,-5,-7,-3,-10,5,-9,-1,4,-3,10,10],[-2,2,-10,10,-6,5,9,8,2,-3,-6,3,-2,-10],[6,-2,4,4,8,-4,-10,-8,8,8,1,-10,-8,9],[-1,2,7,-8,1,7,-3,-4,1,-1,9,-6,3,-9],[10,10,-5,1,-10,4,-8,-1,-1,7,8,-10,9,9],[-3,4,-4,-7,9,-2,-6,10,-9,-8,-3,-4,-2,8],[-2,7,5,1,8,-8,-7,-5,1,10,6,2,-2,2],[3,-7,-9,10,-6,3,8,-10,-4,-9,-2,-4,-6,10],[5,2,-2,-4,-5,-4,5,4,9,-8,1,-7,-6,-3],[-9,8,5,-3,3,7,-2,-1,-6,-10,-1,7,8,6],[7,4,-4,-2,-4,-3,4,7,1,-3,-2,-2,-3,-4],[-5,5,-2,1,-1,3,10,6,-8,-2,-10,-5,-9,-3],[8,-5,10,8,-7,5,2,7,6,9,-6,-2,-7,-7]],[[6,1,9,-8,4,-8,4,2,3,-1,-1,-4,9,-1],[3,-3,10,-2,9,-8,7,-5,1,-9,7,5,8,4],[5,4,-7,-8,10,-6,9,4,-9,-7,6,-5,3,10],[-9,-9,-2,-4,-1,-6,2,1,-5,7,4,2,-9,-1],[-9,6,-5,-4,-9,6,1,-2,-1,4,8,9,7,-1],[10,-1,-5,7,-1,7,-1,9,-2,-5,-5,-10,-2,6],[2,-8,-1,3,3,4,-3,3,3,-6,-4,-1,-1,4],[9,7,-9,-6,-1,6,3,9,2,-1,-3,-1,9,-7],[-2,8,-3,5,-9,2,-3,5,10,-1,-5,7,-9,-8],[-2,-1,-8,-8,-3,2,-7,1,5,-6,-9,5,-1,-3],[-5,-1,5,-3,-10,-3,7,4,-2,-4,10,-9,-8,2],[-1,2,-5,4,4,3,2,8,1,-3,-6,9,-8,-4],[7,8,2,-5,-2,8,-10,-3,-7,2,-4,3,6,9],[-2,-2,10,4,-9,-10,10,10,-9,10,5,-5,1,-2]],[[-10,10,-3,-9,-2,6,4,6,-6,-3,9,-2,-7,7],[5,-4,-10,8,-7,-8,-2,2,-2,1,7,2,7,-2],[1,4,-9,-4,1,2,-9,-6,-7,-8,-9,9,-4,1],[5,8,3,5,-10,-10,-10,-10,-7,9,-7,4,-9,1],[4,-5,-7,8,-6,-1,1,-9,6,-10,-6,-8,8,-10],[-5,-10,-4,1,-9,1,-1,2,-6,2,10,6,1,-10],[5,5,2,-10,-2,10,-1,5,-5,-3,5,6,5,3],[5,-4,5,10,-9,-6,3,-10,-6,6,1,-2,-5,4],[-10,6,10,6,3,1,-10,1,-2,10,6,-7,5,3],[-10,10,4,5,-9,-7,1,-6,-6,6,10,6,-2,-2],[6,9,-4,6,-8,-2,-6,-1,1,-7,4,7,-9,-1],[7,10,-3,-9,-9,-7,-10,3,-1,2,-2,9,4,2],[-10,-6,8,-10,4,-8,-6,9,-5,1,-7,-8,-4,6],[4,1,1,-8,-3,8,10,2,10,-4,-6,-10,10,3]],[[-4,3,-7,9,2,-6,8,2,-9,-5,-8,5,8,6],[-3,3,5,3,-10,9,2,7,-9,-9,5,-9,-7,-4],[2,-2,-8,2,10,-5,-10,10,-10,-1,8,-9,-7,6],[5,-6,10,1,2,-1,-9,-1,-3,-10,-10,3,-4,-10],[5,3,-6,8,-7,-5,-2,-1,5,9,-5,-2,-1,-4],[1,6,-10,5,-7,5,2,7,8,-7,10,-2,7,1],[-1,5,-8,8,-7,5,8,2,-2,5,6,5,-8,-2],[-1,4,-7,3,-7,5,-4,2,2,1,2,4,-8,6],[5,2,1,7,-7,5,-1,-10,1,-4,-7,-7,-1,-8],[9,6,10,-2,-5,10,9,-8,6,-5,1,7,6,-8],[4,-9,-8,9,-4,10,9,-1,-5,-9,8,-5,-5,6],[8,-10,10,5,4,-7,-2,8,-6,10,-10,10,4,7],[-10,1,-1,-10,2,-8,-9,5,-1,-5,-5,-8,-3,-3],[8,6,-6,-5,10,7,-3,10,-1,5,9,-3,-4,-9]],[[1,-6,3,8,1,-8,1,4,-2,5,-9,-7,10,-1],[3,1,-4,-5,-9,8,-6,-2,2,10,8,9,-8,6],[-8,-10,10,5,10,-1,-2,-8,7,-5,6,3,5,-3],[-8,-8,-9,5,2,1,9,1,-3,10,-1,-9,4,-2],[3,1,6,10,-10,3,7,5,6,-9,-9,8,-6,6],[10,9,3,7,-9,-3,1,4,9,-4,-7,5,2,3],[-2,-7,7,6,-6,-9,1,6,9,-10,7,-5,-8,10],[8,9,-4,-2,2,3,4,-3,-6,-5,-6,5,-2,10],[3,-10,-3,10,-5,8,-2,-7,5,-1,8,-7,-2,2],[3,4,1,-6,4,4,10,-9,7,1,6,2,-10,2],[1,6,5,-1,-5,-3,-5,-8,-2,-1,5,-10,6,6],[-1,7,-2,6,-4,-4,-6,-8,7,-7,-7,8,10,2],[10,-1,-8,-2,3,8,7,-8,10,-3,6,-5,-6,-2],[1,-2,5,1,-2,-4,3,4,-3,-10,-8,9,2,-6]],[[7,5,-3,-2,-10,2,7,7,-5,9,-3,10,-3,7],[10,-4,-1,-8,7,5,-4,9,10,-1,-7,4,1,-3],[-10,10,4,-1,-6,-1,1,-10,10,6,5,8,8,-4],[-5,-3,-7,-9,10,6,-10,-9,-3,-8,6,7,-9,-5],[-7,6,-6,-9,4,4,7,-10,-8,-10,5,6,-1,-5],[7,7,-1,-8,-2,7,-6,-1,-10,-9,-7,-9,-8,6],[-7,-10,-2,-10,10,9,-6,9,9,4,1,8,-6,-2],[2,-2,10,-5,8,9,-5,1,5,5,2,-3,-7,-2],[-8,5,-4,-8,10,-1,1,6,8,-9,-9,-9,8,-5],[3,-5,-4,10,9,6,-3,8,9,-10,-3,-2,-7,-5],[-2,-9,-8,7,-7,1,7,5,-8,-4,1,4,6,8],[8,8,4,7,2,-5,3,4,5,9,-6,-10,8,-3],[-3,-8,6,3,5,-3,5,7,4,-7,-5,-4,-1,10],[-10,4,5,4,-1,-3,-10,7,-2,5,-8,-7,-9,3]],[[-7,9,-7,-3,-8,6,-6,10,-3,1,-1,-3,9,1],[-3,9,-9,-9,3,9,-9,-5,-3,-10,9,-2,-10,-1],[-7,8,-1,1,-5,-6,-2,-2,-1,-7,9,1,-1,-10],[7,1,-6,-5,-3,-6,-7,-7,-9,-10,-5,7,6,-3],[10,-9,7,-3,6,7,-4,-8,-7,-2,3,9,10,-3],[3,-1,-9,1,10,-8,-2,6,10,-9,-10,-5,4,2],[-1,8,10,8,2,7,3,-8,2,3,9,-1,4,1],[-2,-1,9,9,-1,-3,8,4,-5,8,-8,1,6,6],[8,9,-4,4,-10,-3,4,3,-5,-3,1,10,-6,-9],[-3,-4,4,-2,4,10,-3,-2,-10,-6,3,-7,-5,-6],[-10,-7,9,5,-5,-10,4,-10,6,3,8,-10,3,7],[-4,10,7,-8,-9,10,1,2,1,-2,5,-4,7,5],[-1,7,-7,-1,4,-1,-2,8,10,-1,-1,9,-10,-10],[6,6,-10,-5,10,3,7,9,-4,5,7,6,-8,-6]]], dtype = "uint64")#candidate|3494|(15, 14, 14)|const|uint64
bop_3495 = relay.bitwise_and(var_3493.astype('uint64'), relay.reshape(const_3494.astype('uint64'), relay.shape_of(var_3493))) # shape=(15, 14, 14)
func_879_call = mod.get_global_var('func_879')
func_884_call = mutated_mod.get_global_var('func_884')
const_3503 = relay.const([7.806977,9.233447,-9.017954,-9.636628,-9.256111,4.409003,-3.045661,4.467531,-3.472787,-4.564134,0.578122,7.334842,-3.133959,-9.429622,9.573321,-7.223556,6.749410,-2.145202,-5.237581,-7.959444,5.686988,0.554921,-0.023542,-8.213555,-7.183848,-0.263667,2.063675,8.706045,0.098321,2.436029,-4.642759,1.218552,-2.524317,9.072216,0.379741,3.044727], dtype = "float32")#candidate|3503|(36,)|const|float32
var_3504 = relay.var("var_3504", dtype = "float64", shape = (48,))#candidate|3504|(48,)|var|float64
call_3502 = relay.TupleGetItem(func_879_call(relay.reshape(const_3503.astype('float32'), [3, 4, 3]), relay.reshape(const_3503.astype('float32'), [3, 4, 3]), relay.reshape(var_3504.astype('float64'), [48,]), ), 11)
call_3505 = relay.TupleGetItem(func_884_call(relay.reshape(const_3503.astype('float32'), [3, 4, 3]), relay.reshape(const_3503.astype('float32'), [3, 4, 3]), relay.reshape(var_3504.astype('float64'), [48,]), ), 11)
func_2281_call = mod.get_global_var('func_2281')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_3506 = relay.TupleGetItem(func_2281_call(), 0)
call_3507 = relay.TupleGetItem(func_2283_call(), 0)
func_2281_call = mod.get_global_var('func_2281')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_3510 = relay.TupleGetItem(func_2281_call(), 0)
call_3511 = relay.TupleGetItem(func_2283_call(), 0)
func_1850_call = mod.get_global_var('func_1850')
func_1851_call = mutated_mod.get_global_var('func_1851')
call_3512 = relay.TupleGetItem(func_1850_call(), 0)
call_3513 = relay.TupleGetItem(func_1851_call(), 0)
func_2465_call = mod.get_global_var('func_2465')
func_2467_call = mutated_mod.get_global_var('func_2467')
const_3515 = relay.const([-5,4,-5,5,-2,-7,3,8,-1,2,2,4,6,-8,-8,-2,1,7,4,-3,7,1,4,-9,-8,2,7,-4,5,10,6,8,-10,5,-7,10,10,3,3,-8,4,-3,-6,-4,8,6,-7,-1,-9,1,-5,-1,2,-9,-7,8,-9,-4,9,-7,3,-2,10,-7,10,-7,9,-9,4,-8,7,6,-10,-10,-8,9,-2,4,-4,1,9,8,7,-10,7,6,7,-7,-2,-7,6,4,5,-10,-8,-3,-8,-6,-10,10,6,9,-7,10,7,-10,1,3,-3,-5,3,-10,10,-7,-4,-8,-2,4,5,-9,-9,-7,4,-8,-10,-7,-2,-3,-3,-3,-9,7,-9,-1,3,9,10,4,-4,8,-5,7,10,-10,-4,9,-5,5,5,10,-7,-4,3,-10,10,10,-10,5,-9,-4,1,6,-10,-1,10,-5,-8,-5,-6,-7,2,-6,-6,-4,-7,10,4,5,1,-10,-7,10,-5,10,10,2,7,-6,-8,-8,1,-4,-3,10,6,5,-7,3,-1,-7,-10,-5,-4,8,1,8,3,8,2,-2,-10,-4,-3,10,9,7,6,-6,2,2,-3,9,4,-4,5,-5,-6,-3,9,4,-3,-9,2,-9,1,-2,-4,10,6,4,-3,-8,1,7,5,8,-10,-6,2,9,-9,-10,9,2,-6,-9,-7,-6,-8,-8,4,-10,-3,-7,2,-10,6,-5,-2,2,-3,-6,2,1,-5,-5,-5,3,9,-4,-7,-3,6,10,5,3,7,-10,-1,10,-10,-7,8,-4,2,-2,-4,-4,3,6,9,5,1,6,-8,2,-1,-4,8,8,8,1,-2,-2,-10,-2,10,-7,-5,-4,9,-3,-4,-9,-7,-4,-6,-8,-9,-5,9,-8,-5,1,-7,-4,-1,-9,6,-9,5,-9,-8,1,-7,6,2,-8,-10,8,6,-8,-9,-3,-4,-7,4,10,-4,9,7,-1,3,7,-10,5,-9,2,9,-2,-6,10,6,3,-10,5,-10,-6,6,8,-10,-2,5,6,1,-5,-8,8,4,8,-6,1,9,-8,-3,-3,-7,-4,2,6,-8,10,-3,-2,4,3,10,5,-5,6,-9,-3,-3,9,-6,9,-6,-2,1,-8,-3,-4,-8,4,-10,-3,9,-5,2,-8,-1,-2,7,-5,-7,3,7,5,-6,9,9,-5,8,1,-6,-10,-7,3,8,2,3,7,5,-5,1,7,8,8,-1,-5,9,5,8,10,8,-3,-1,2,2,-7,3,-5,-3,6,6,-5,9,-1,-10,4,6,10,8,5,3,-5,3,7,6,4,-9,7,6,6,10,3,-7,-5,-9,5,10,8,1,-3,-1,9,3,7,-3,-7,-2,10,7,6,-6,6,4,-3,-9,2], dtype = "int16")#candidate|3515|(520,)|const|int16
call_3514 = relay.TupleGetItem(func_2465_call(relay.reshape(const_3515.astype('int16'), [10, 13, 4])), 0)
call_3516 = relay.TupleGetItem(func_2467_call(relay.reshape(const_3515.astype('int16'), [10, 13, 4])), 0)
output = relay.Tuple([bop_3495,call_3502,const_3503,var_3504,call_3506,call_3510,call_3512,call_3514,const_3515,])
output2 = relay.Tuple([bop_3495,call_3505,const_3503,var_3504,call_3507,call_3511,call_3513,call_3516,const_3515,])
func_3517 = relay.Function([var_3493,var_3504,], output)
mod['func_3517'] = func_3517
mod = relay.transform.InferType()(mod)
var_3518 = relay.var("var_3518", dtype = "uint64", shape = (15, 14, 14))#candidate|3518|(15, 14, 14)|var|uint64
var_3519 = relay.var("var_3519", dtype = "float64", shape = (48,))#candidate|3519|(48,)|var|float64
output = func_3517(var_3518,var_3519,)
func_3520 = relay.Function([var_3518,var_3519,], output)
mutated_mod['func_3520'] = func_3520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3273_call = mod.get_global_var('func_3273')
func_3274_call = mutated_mod.get_global_var('func_3274')
call_3536 = func_3273_call()
call_3537 = func_3273_call()
func_2005_call = mod.get_global_var('func_2005')
func_2007_call = mutated_mod.get_global_var('func_2007')
call_3552 = relay.TupleGetItem(func_2005_call(relay.reshape(call_3536.astype('float32'), [3, 13, 7])), 1)
call_3553 = relay.TupleGetItem(func_2007_call(relay.reshape(call_3536.astype('float32'), [3, 13, 7])), 1)
func_2100_call = mod.get_global_var('func_2100')
func_2102_call = mutated_mod.get_global_var('func_2102')
call_3570 = relay.TupleGetItem(func_2100_call(), 0)
call_3571 = relay.TupleGetItem(func_2102_call(), 0)
func_3145_call = mod.get_global_var('func_3145')
func_3147_call = mutated_mod.get_global_var('func_3147')
call_3574 = relay.TupleGetItem(func_3145_call(relay.reshape(call_3536.astype('float32'), [3, 13, 7])), 2)
call_3575 = relay.TupleGetItem(func_3147_call(relay.reshape(call_3536.astype('float32'), [3, 13, 7])), 2)
var_3579 = relay.var("var_3579", dtype = "float64", shape = (1, 14, 13))#candidate|3579|(1, 14, 13)|var|float64
bop_3580 = relay.less_equal(call_3574.astype('bool'), relay.reshape(var_3579.astype('bool'), relay.shape_of(call_3574))) # shape=(1, 14, 13)
bop_3583 = relay.less_equal(call_3575.astype('bool'), relay.reshape(var_3579.astype('bool'), relay.shape_of(call_3575))) # shape=(1, 14, 13)
output = relay.Tuple([call_3536,call_3552,call_3570,bop_3580,])
output2 = relay.Tuple([call_3537,call_3553,call_3571,bop_3583,])
func_3584 = relay.Function([var_3579,], output)
mod['func_3584'] = func_3584
mod = relay.transform.InferType()(mod)
mutated_mod['func_3584'] = func_3584
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3585 = relay.var("var_3585", dtype = "float64", shape = (1, 14, 13))#candidate|3585|(1, 14, 13)|var|float64
func_3584_call = mutated_mod.get_global_var('func_3584')
call_3586 = func_3584_call(var_3585)
output = call_3586
func_3587 = relay.Function([var_3585], output)
mutated_mod['func_3587'] = func_3587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_3589 = relay.TupleGetItem(func_2758_call(), 0)
call_3590 = relay.TupleGetItem(func_2759_call(), 0)
func_1389_call = mod.get_global_var('func_1389')
func_1393_call = mutated_mod.get_global_var('func_1393')
const_3598 = relay.const([5.524317,8.989391,3.141818,5.635663,2.322417,9.372679,-2.303289,9.323495,4.351315,-5.143359,-7.424875,-3.644310,1.519502,6.021675,-6.673463,-0.759792,-0.891060,4.694306,-9.253985,5.786109,-7.776676,7.532626,7.739982,-2.378500,0.557536,-8.994082,1.732598,4.362614,-1.987692,-4.678592,9.911812,-8.156829,-4.458351,7.499878,9.468726,-7.509307,7.897488,-0.071965,-1.452357,-1.264167,2.086037,-6.825255,4.668974,9.356667,-4.562759,-7.148593,2.850177,9.826328,5.383313,-3.637909,0.523500,-8.718784,-4.597762,1.580503,-3.966707,-5.102788,-5.124592,-4.525398,-7.341004,-1.241914,8.094148,-3.158447,5.975165,3.139852,-6.048936,9.061979,-7.991793,4.256937,-1.036227,-7.863377,-4.014769,-2.520668,5.282027,-8.986396,3.075617,-3.856659,9.960340,1.010943,-8.149937,1.952975,-0.293255,-5.776196,4.794843,4.250565,-1.156769,-8.917519,-5.026366,7.220757,3.606589,7.288417,-1.173432,-8.208786,4.761363,4.684715,-4.871847,-3.386724,8.394914,4.279650,-1.749128,3.680030,-1.397603,5.242673,-2.843787,-2.613862,-2.515514,-7.008324,2.700403,3.965807,-3.841395,-4.743051,7.819316,1.757243,3.351156,5.595242,5.850158,-8.478280,-1.681889,-9.595224,6.413420,4.605238,0.508367,-5.388729,-9.857005,5.645946,-1.306497,8.869653,-6.050913,7.454486,4.544488,-1.189193,3.165806,6.027038,-9.057550,-8.422465,-1.939184,-4.970162,-1.784767,8.705966,-6.842080,9.060929,-9.944637,-4.727911,-8.609209,3.691794,3.320140,-3.756097,-4.288736,-2.162458,-0.104786,-2.778797,-1.708891,-5.258121,-8.661246,7.205413,-5.188714,7.970329,0.366434,0.566499,9.975431,-4.822584,-3.588693,7.984365,-8.399218,-4.814607,2.889628,9.152509,8.087978,-2.226591,7.457776,-2.370956,-5.267798,7.519935,0.604362,0.850119,6.758808,2.753990,1.595719,-8.152843,6.506368,-7.204025,-9.474140,-9.316999,0.610216,5.411286,0.755339,-5.989506,9.764661,7.868356,-6.462400,-8.523059,-5.435147,-4.673013,-1.435202,1.859846,7.043229,-9.355617,-1.468046,7.201522,1.698979,-7.598022,-3.279192,2.485160,-6.980435,-9.270859,8.861062,-2.063965,5.817697,1.699269,-0.633428,8.421247,-3.892610,6.782849,-6.981201,-7.077599,7.252923,-7.239445,6.856806,8.529846,2.150538,0.085460,-8.483371,-5.360696,-7.673391,-1.623377,4.484602,-5.740250,4.458668,-8.830865,-1.283503,-9.779628,3.353291,8.124795,-2.925609,3.562826,-9.079459,-7.630383,-5.314537,-5.263237,2.992042,1.657753,-1.656294,-2.584260,3.637582,-1.523255,-6.699863,4.568109,8.277764,-3.500023,-7.615473,3.007204,-9.597905,5.547727,1.272193,2.717847,-2.612051,4.595223,-1.473930,7.894292,-8.056702,8.004076,-5.581570,-5.748537,1.809541,5.035866,-3.103697,5.388632,-1.380968,-7.680209,-2.852151,-5.446309,-0.687694,-3.748315,-6.916408,2.793706,4.979030,2.944651,3.601337,6.411215,-4.359011,-9.712772,-4.469570,-5.785728,5.753874,-5.527133,-2.789991,-1.643172,-4.743770,-6.780137,-8.969963,0.104527,-3.038476,6.922128,-9.776325,0.230611,8.104897,-4.308719,7.324158,7.963302,0.932480,-3.025751,-4.790852,-3.250563,6.230270,1.489253,-3.405185,1.800157,1.992971,5.706194,-6.533244,2.244147,-5.299945,9.060785,-2.089524,-8.025378,-1.134354,4.672747,-5.652809,9.382761,-6.156493,4.642834,2.168633,-5.841689,-0.360500,-6.103657,-5.127784,-2.409855,5.441728,-8.071321,-7.627712,9.738656,1.653324,-4.426466,9.185606,-8.552430,-5.694566,-4.498862,-5.862879,9.480454,-4.543123,0.540920,1.323520,-4.827091,2.849154,-9.752888,2.601770,-4.821393,-3.718856,-6.684074,-6.419482,-7.666970,5.670578,-0.931377,9.840781,-9.827237,-1.366100,-7.738793,9.100503,-1.056063,8.924245,6.852130,6.697205,2.122457,-0.324352,1.699320,-6.096991,2.359323,-1.682794,-3.057626,9.346916,-3.601274,-2.222178,0.252904,6.910234,8.563838,-6.418401,2.811400,-8.227507,-5.272080,8.501035,-7.535946,5.883408,7.609518,7.616872,1.118246,-1.912207,-6.406348,-1.094656,-6.983937,-5.370279,-3.171295,-3.469167,-3.042117,-6.984004,1.727841,-6.649283,-3.953847,-3.893680,2.141730,7.534722,-1.056830,-2.457109,-1.380060,4.316383,-4.189694,-4.628550,-1.049789,0.169966,-1.880691,2.619908,1.491178,6.906188,3.457289,2.698188,7.981661,9.762262,-9.454522,2.474197,-0.577285,6.123462,-8.387099,7.981324,6.661100,4.583589,4.753337,3.154494,-5.890686,-6.159249,-2.099259,-7.676844,-4.224511,-6.473565,-3.241063,5.521830,-3.190367,9.645503,6.592212,4.108862,4.790454,-7.033156,-7.550876,3.967752,-2.831589,-9.376783,8.171708,-4.402535,6.490057,-2.935337,-0.318299,-3.006582,8.237976,9.515871,9.690363,8.392580,0.033967,3.924005,1.439987,-9.076986,-9.982458,3.866640,-6.729012,6.121116,-2.773998,5.751655,9.007790,8.953220,1.379197,8.333113,1.271178,-5.505744,-5.974727,-2.325720,-7.037134,1.710351,-5.319659,1.468774,3.676208,-2.126281,-3.683161,-6.616910,6.328307,-5.024587,0.821917,4.810420,-1.920290,1.090669,6.721538,1.839772,7.015269,-2.925303,9.304836,-8.858997,-4.546239,-9.274770,-0.460146,6.302751,-4.415562,-4.437956,2.838419,-8.305959,1.465148,8.239596,-1.746158,3.853418,6.180265,6.424401,3.085333,4.573263,-8.714518,-9.285193,0.651826,-3.448710,-2.624175,9.559016,1.994366,7.562057,5.543201,5.158490,1.941528,8.379963,3.714610,8.937965,-9.413017,-8.166985,-0.168883,6.702266,-8.027461,9.093267,2.426740,4.323754,9.201838,3.351409,2.525004,-9.570404,6.431659,9.017705,-9.648797,6.580870,-7.428443,3.384542,3.571104,-5.626316,-2.236632,-6.900877,-4.718533,-1.188748,-6.066508,-5.281406,8.324788,7.649632,7.113347,9.918406,4.833559,-2.754980,-1.787673,3.509183,5.351734,-3.996776,4.390601,3.988298,-5.864078,8.592759,9.141052,-5.534297,-8.950240,-8.230394,-5.991497,1.795423,-4.422162,2.775278,0.444535,-0.517523,-3.173017,7.598575,6.246579,7.579146,-7.233907,5.857170,1.073389,-2.684776,9.907728,7.951895,-1.795534,5.074801,-5.108985,-8.367321,7.680242,-3.983094,8.769046,-6.932565,-8.019051,-2.001045,-1.679168,9.317731,6.782523,-5.912108,-1.577432,-1.011881,-9.027277,5.496948,2.708777,1.747631,9.845814,-1.573879,6.596685,9.943557,1.279045,-2.565159,1.057970,6.236199,-1.652535,7.607155,5.353951,6.517891,-9.646629,-9.712612,-5.103150,-8.392961,-5.771190,-0.052468,7.401441,1.169263,7.297964,5.715453,9.119234,3.850644,-1.749555,-0.259150,3.615839,0.486630,1.311954,4.597051,9.410972,4.684947,-3.718477,5.357071,9.619347,-6.001645,3.619422,-9.701037,-2.756620,-9.036228,-9.579729,-3.918678,-9.043186,2.974628,-7.793757,-5.232367,9.568990,6.687565,7.229428,4.680905,0.937401,-0.324899,2.519509,-1.883501,-5.978814,-1.575382,9.597428,-0.956142,9.597308,4.956946,-6.769077,5.947795,7.123323,-8.312942,-2.802311,-0.848529,6.452069,-0.705995,2.759020,2.627624,7.218388,-3.820027,-8.192884,-5.050653,5.574962,2.785167,9.027892,2.890312,9.555068,-2.240344,0.730787,-9.206363,0.755286,-8.855583,8.257588,-4.463399,0.980179,0.773648,-9.226364,4.577947,-6.166552,0.228352,-4.576586,-7.746010,-1.163665,7.422263,4.555398,7.414693,-5.392936,0.464221,2.960648,-8.293882,1.564655,-2.342497,0.023836,1.376518,1.820005,-1.973767,4.896175,0.080973,7.625995,6.310889,-8.830743,5.369846,-8.413099,-3.050675,-6.046226,0.078682,9.597506,8.531550,5.503151,-5.090635,-9.295994,-7.130047,5.281203,4.336299,-3.797661,-3.321839,4.082083,1.752332,-9.523664,0.371576,-7.147437,-2.184282,9.651809,1.025455,-1.329691,7.424297,-9.079991,-0.707302,5.864736,-2.201859,6.410820,3.052094,-2.697383,-7.533968,-5.608415,6.358343,-7.329465,-4.600922,-0.058294,3.031242,4.433261,0.756153,-4.779632,-2.490069,0.538327,-7.364011,0.327772,-3.672773,-6.931566,-4.566549,-5.125734,-8.829916,-7.233619,-3.915919,-2.831009], dtype = "float32")#candidate|3598|(768,)|const|float32
const_3599 = relay.const([[2.558558,0.370884,-3.914646,9.216178,6.875339,8.832473,-9.103237,-8.715389,1.318725,-9.424722,-6.441235,-6.402496],[-2.951247,-8.300489,-8.754678,1.040107,9.042299,0.003450,-9.977256,6.550583,-5.878213,-2.693858,5.577261,9.866979],[6.976549,-7.362623,3.007171,-1.111671,-2.803540,-1.946743,-2.690667,-9.323793,-1.480087,8.831016,-5.923782,-3.640014]], dtype = "float32")#candidate|3599|(3, 12)|const|float32
const_3600 = relay.const([[0.858598,3.240471,0.897276,7.139047],[-7.126936,-4.427223,-2.072997,-4.543267],[7.413793,-3.374033,-6.474680,5.352124],[7.027073,2.581125,6.196483,-1.832642],[1.325326,-8.242604,-4.798826,-7.796187],[-0.690949,6.785712,5.430086,6.817605],[3.713537,4.737724,0.186733,-7.307913],[6.985734,-0.341531,4.031168,4.734735],[-2.328797,2.072039,2.311187,9.172996],[3.070344,9.095199,-4.842278,5.521813],[-4.711160,7.441469,4.862183,3.365637],[8.443716,-4.553005,-5.271194,0.581916]], dtype = "float64")#candidate|3600|(12, 4)|const|float64
call_3597 = relay.TupleGetItem(func_1389_call(relay.reshape(const_3598.astype('float32'), [8, 12, 8]), relay.reshape(const_3599.astype('float32'), [36,]), relay.reshape(const_3600.astype('float64'), [48,]), ), 0)
call_3601 = relay.TupleGetItem(func_1393_call(relay.reshape(const_3598.astype('float32'), [8, 12, 8]), relay.reshape(const_3599.astype('float32'), [36,]), relay.reshape(const_3600.astype('float64'), [48,]), ), 0)
output = relay.Tuple([call_3589,call_3597,const_3598,const_3599,const_3600,])
output2 = relay.Tuple([call_3590,call_3601,const_3598,const_3599,const_3600,])
func_3611 = relay.Function([], output)
mod['func_3611'] = func_3611
mod = relay.transform.InferType()(mod)
mutated_mod['func_3611'] = func_3611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mutated_mod.get_global_var('func_3611')
call_3612 = func_3611_call()
output = call_3612
func_3613 = relay.Function([], output)
mutated_mod['func_3613'] = func_3613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1899_call = mod.get_global_var('func_1899')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_3638 = func_1899_call()
call_3639 = func_1899_call()
output = call_3638
output2 = call_3639
func_3642 = relay.Function([], output)
mod['func_3642'] = func_3642
mod = relay.transform.InferType()(mod)
mutated_mod['func_3642'] = func_3642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3642_call = mutated_mod.get_global_var('func_3642')
call_3643 = func_3642_call()
output = call_3643
func_3644 = relay.Function([], output)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_3648 = relay.TupleGetItem(func_3611_call(), 2)
call_3649 = relay.TupleGetItem(func_3613_call(), 2)
func_1960_call = mod.get_global_var('func_1960')
func_1965_call = mutated_mod.get_global_var('func_1965')
const_3670 = relay.const([-5.073965,-3.777398,-0.569391,0.622459,-0.043241,2.239261,-8.030194,-2.590332,-4.048833,9.639127,5.621942,-4.303585,1.105884,-2.669330,-0.344743,8.023565,2.493820,2.861240,9.728954,-8.583751,-9.584497,-4.590732,-7.971271,-5.478942,4.834216,8.450269,-9.315197,-0.238952,7.216916,-1.487063,0.976709,-6.005851,-8.007136,-0.751911,-5.060188,0.833826,-7.097328,-3.229755,-7.376439,1.013053,-8.310381,-5.649188,8.142688,9.947287,-8.535224,-5.912457,5.099807,-3.740158], dtype = "float64")#candidate|3670|(48,)|const|float64
var_3671 = relay.var("var_3671", dtype = "float32", shape = (273,))#candidate|3671|(273,)|var|float32
var_3672 = relay.var("var_3672", dtype = "float64", shape = (315,))#candidate|3672|(315,)|var|float64
call_3669 = relay.TupleGetItem(func_1960_call(relay.reshape(const_3670.astype('float64'), [48,]), relay.reshape(var_3671.astype('float32'), [3, 13, 7]), relay.reshape(call_3648.astype('float64'), [3, 16, 16]), relay.reshape(var_3672.astype('float64'), [315,]), ), 2)
call_3673 = relay.TupleGetItem(func_1965_call(relay.reshape(const_3670.astype('float64'), [48,]), relay.reshape(var_3671.astype('float32'), [3, 13, 7]), relay.reshape(call_3648.astype('float64'), [3, 16, 16]), relay.reshape(var_3672.astype('float64'), [315,]), ), 2)
func_726_call = mod.get_global_var('func_726')
func_729_call = mutated_mod.get_global_var('func_729')
const_3675 = relay.const([-9,-7,-2,-1,2,1,-2,-6,-6,5,-10,-4,4,4,-2,-3,7,-3,-5,-3,-2,-8,9,-1,9,-2,4,10,4,1], dtype = "uint16")#candidate|3675|(30,)|const|uint16
call_3674 = func_726_call(relay.reshape(const_3675.astype('uint16'), [5, 6, 1]))
call_3676 = func_726_call(relay.reshape(const_3675.astype('uint16'), [5, 6, 1]))
output = relay.Tuple([call_3648,call_3669,const_3670,var_3671,var_3672,call_3674,const_3675,])
output2 = relay.Tuple([call_3649,call_3673,const_3670,var_3671,var_3672,call_3676,const_3675,])
func_3700 = relay.Function([var_3671,var_3672,], output)
mod['func_3700'] = func_3700
mod = relay.transform.InferType()(mod)
mutated_mod['func_3700'] = func_3700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3700_call = mutated_mod.get_global_var('func_3700')
var_3702 = relay.var("var_3702", dtype = "float32", shape = (273,))#candidate|3702|(273,)|var|float32
var_3703 = relay.var("var_3703", dtype = "float64", shape = (315,))#candidate|3703|(315,)|var|float64
call_3701 = func_3700_call(var_3702,var_3703,)
output = call_3701
func_3704 = relay.Function([var_3702,var_3703,], output)
mutated_mod['func_3704'] = func_3704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_3706 = relay.TupleGetItem(func_3611_call(), 2)
call_3707 = relay.TupleGetItem(func_3613_call(), 2)
output = relay.Tuple([call_3706,])
output2 = relay.Tuple([call_3707,])
func_3712 = relay.Function([], output)
mod['func_3712'] = func_3712
mod = relay.transform.InferType()(mod)
mutated_mod['func_3712'] = func_3712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3712_call = mutated_mod.get_global_var('func_3712')
call_3713 = func_3712_call()
output = call_3713
func_3714 = relay.Function([], output)
mutated_mod['func_3714'] = func_3714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_3715 = relay.TupleGetItem(func_3611_call(), 3)
call_3716 = relay.TupleGetItem(func_3613_call(), 3)
output = relay.Tuple([call_3715,])
output2 = relay.Tuple([call_3716,])
func_3751 = relay.Function([], output)
mod['func_3751'] = func_3751
mod = relay.transform.InferType()(mod)
output = func_3751()
func_3752 = relay.Function([], output)
mutated_mod['func_3752'] = func_3752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_3767 = relay.TupleGetItem(func_2758_call(), 0)
call_3768 = relay.TupleGetItem(func_2759_call(), 0)
func_962_call = mod.get_global_var('func_962')
func_966_call = mutated_mod.get_global_var('func_966')
const_3770 = relay.const([6.073520,2.522395,0.349362,2.991274,-8.037429,-1.241450,-1.994464,9.352098,0.198960,5.327943,7.863540,-6.182122,1.994629,2.169948,-4.325913,2.364008,9.736974,5.709005,9.171915,-2.979058,8.822633,-7.350618,9.625318,1.516275,-6.968950,-5.131383,-3.355431,3.771952,3.463280,-0.745086,3.299939,3.464117,3.574629,7.447459,-8.050119,-3.813581,-4.549973,4.105117,-3.234543,3.297141,8.399716,-1.929491,-5.456333,1.428859,-8.512030,6.047057,3.246295,-9.832013,6.680030,1.204527,6.952910,-0.203679,1.486287,-2.600257,-3.081674,-4.684426,5.942802,-6.491039,-0.348050,-4.995783,3.956485,5.764284,-1.590887,3.362224,0.286396,2.263685,-8.244370,9.562384,5.911155,8.150429,3.168806,0.357017,-4.713848,-8.662527,5.587976,-6.054897,6.187444,-9.315808,4.563057,7.328157,-7.131256,-0.131982,-1.820706,-4.184891,6.324724,-5.076116,1.255420,1.980491,4.214753,7.721250,-7.639771,0.129071,5.091798,-9.195260,-7.343221,8.643909,-7.625057,3.737684,1.882279,5.984613,-8.916858,7.946369,9.967202,8.179822,4.924345,-2.843069,-8.797079,4.918574,7.757555,4.302534,1.627678,-0.297835,-2.024509,9.377291,-4.889674,-2.712607,-6.964583,-0.472215,-6.293016,-2.586660,-3.155242,-8.380422,-3.169945,-8.905824,0.338799,5.174987,9.772051,-9.749205,-7.535551,1.572909,-7.373915,3.622761,-3.534823,5.341172,5.440266,-0.129371,-6.837853,5.934261,-1.627973,-7.678021,0.006365,-5.978306,9.671833,-8.071300,-4.549990,-6.413490,2.480084,7.595018,-5.119283,-6.473772,-1.867161,1.684171,6.177229,-5.415442,8.687168,9.100235,-0.078700,6.193004,7.328541,4.898542,4.122408,-4.272924,4.286541,-8.186184,-5.598766,-0.157182,6.050429,8.242189,-5.851540,-9.772519,-8.355622,-4.214837,-0.240841,9.941183,6.489398,6.681714,-7.625164,6.566982,-1.341966,3.779754,-4.375337,2.132164,-3.748265,2.442939,-7.378698,-9.846096,5.119578,-0.109628,-0.677560,3.978629,-4.271101,-2.314994,7.840855,9.973556,-7.213858,-3.510717,-3.520857,-0.695177,0.111399,1.561012,-9.356082,-7.443266,-3.430973,2.988525,-6.517293,-7.246373,0.373911,-6.461416,-9.594692,-4.365667,-9.464578,7.525272,7.105066,0.761077,2.132114,-9.586571,-3.958442,-9.406194,2.848506,0.469701,-6.596506,6.637885,4.394949,-3.987516,3.945734,-3.563131,-1.451611,-0.655010,5.961427,-9.689395,-5.049423,-1.730085,0.057975,0.064671,-4.078193,5.047458,-6.160078,4.998625,-6.010866,0.232248,-1.396003,1.938911,7.134161,-9.263165,-2.025740,-9.648424,-7.196049,1.431941,4.493030,-0.452139,-7.765664,-4.857112,-9.107918,-1.973806,-2.949272,-7.952694,4.771722,8.515816,4.242550,1.354566,-6.579968,-9.797783,5.432340,-1.158606,-7.616067,-7.205197,-6.438184,2.409034,-3.879550,0.394902,4.621942,-1.457918,-4.253145,-3.674040,4.660180,6.810472,8.610832,-4.435952,2.961207,0.325153,-8.748494,-6.114558,-5.704924,5.459626,5.428035,6.236672,8.197197,5.691148,2.707358,4.492289,-8.190198,-2.040793,6.695096,-3.822862,-7.669309,-3.544053,1.509525,5.339639,9.260850,1.465430,-4.789951,3.841043,-4.719703,5.752124,-7.920761,-6.949246,1.894697,-9.969750,-3.175756,4.452732,-9.664462,1.671999,2.326441,-9.701295,8.523414,9.760529,-0.007285,1.473719,-7.608235,3.672227,-8.570040,7.193725,-2.169349,-9.291791,-0.094853,1.732975,3.568844,-2.736214,-5.686831,2.147863,-9.609842,3.141851,-5.073004,8.299249,9.234422,0.538247,9.086562,4.762549,5.439578,-1.009187,7.313160,-0.873485,-0.616048,3.954032,9.294161,-3.301234,-5.812169,4.599436,9.685012,9.745954,9.765043,-5.008841,0.817073,-4.729052,9.377975,-0.582207,7.961808,1.668782,1.268755,-6.478608,-5.732047,6.267403,-8.027302,3.545471,7.175819,-3.988957,8.884290,1.043976,-4.280430,5.673816,-9.636228,-4.028632,4.809250,3.002070,6.599796,5.289338,8.069873,-8.308144,9.028025,1.857725,-2.178680,9.737548,-6.705013,-5.762750,0.739771,-4.281434,8.605536,5.424248,-1.865726,8.641327,-1.427425,0.406415,7.020963,6.338072,9.806096,-0.075060,-5.746103,-1.897098,-5.296689,8.446068,-7.994074,-2.795518,-6.907520,-4.777061,-1.834770,-3.742679,3.117188,-6.056184,2.081647,5.572320,-9.203743,-6.379905,-9.282980,5.816193,7.824855,-6.726479,-7.709134,9.458733,-5.878130,-3.418166,-6.492174,2.944906,-2.492637,-5.311972,4.733276,0.426578,8.391011,-4.706176,-3.159117,3.119828,-7.933353,9.523744,-0.625453,0.341928,4.480417,8.881970,9.000439,9.808646,9.722250,0.069638,3.124105,-6.626169,7.487296,-8.137478,3.487971,3.949722,3.625123,-6.497380,-3.725804,-1.182852,5.238439,9.022752,-9.934053,9.711758,-7.948024,-2.151936,9.877535,6.330998,1.893701,-4.595033,6.504350,-9.810754,-6.774618,-1.159905,8.905479,-9.745139,-3.243152,0.491619,-3.665369,-8.757838,9.426395,0.724894,-8.550514,5.280409,-3.583512,-3.815247,-7.033665,6.505456,4.415579,1.815565,-7.750701,-5.539982,5.176504,-0.623402,-8.687485,-6.870278,7.756424,-4.464115,-5.038166,-4.357122,3.357586,-6.108286,5.043793,-4.987246,9.269136,1.556007,-9.925955,2.724298,0.142458,6.067313,-8.845291,-1.055181,8.688099,2.191266,-8.665580,4.024033,-6.462620,9.243780,5.451224,4.444810,1.630663,-0.132431,-6.866604,8.319903,1.419708,6.307478,1.693118,-0.673474,-7.291161,-1.684430,2.506954,-2.603747,-1.767159,9.806848,2.277165,-7.676663,-7.161035,-4.672986,-7.474336,-6.036944,4.251383,-8.581454,1.105007,4.134104,-0.527503,5.547533,3.222802,-6.145223,6.859831,6.136138,-1.670244,-1.497606,3.139396,5.487542,-0.916284,8.840091,8.501276,-6.038563,-8.467455,-7.607446,-3.519563,-6.735478,1.223436,3.062139,9.205481,5.252017,-2.475758,-6.380024,5.441255,-9.070986,1.964870,2.670497,8.228829,-3.374184,7.676213,-3.027552,-7.087296,-3.839616,6.742793,-9.377500,-0.931534,-9.809236,6.728565,-0.797267,-7.301017,2.968653,8.538912,-7.941780,-0.105982,-2.990202,7.195860,7.531463,-6.517544,8.184675,4.708700,-5.030624,-3.864680,7.740705,7.336002,-1.554816,-3.318923,2.648190,-3.347902,-7.095908,-4.641280,-7.102586,5.367691,6.698183,3.841887,-0.597580,2.575845,8.548911,7.796500,9.735862,-1.129269,9.195599,3.731987,-0.791466,-8.238842,9.119943,-2.979279,2.843255,1.490168,1.679773,8.554369,-5.810858,-2.701331,-2.924394,-8.601497,-5.133504,2.506067,5.254213,-7.824038,-1.352500,-5.051587,-2.716781,-4.287433,-9.841319,-9.780724,-5.518049,7.625570,-7.862457,-9.060912,-2.885711,3.687605,-7.406049,-0.944914,3.813898,0.805214,3.747380,7.017448,-1.040326,1.612159,-6.493994,-8.264120,-8.345769,7.994890,4.058696,0.880997,-4.603500,-2.064849,-5.685004,-1.156268,-9.399523,2.195814,2.318439,5.045378,-2.368084,-1.528930,-1.028166,-1.585332,4.818048,-4.291065,6.443210,-8.577548,-7.515978,-4.474347,7.767474,-1.049806,6.991435,4.124876,2.217633,-3.675125,-3.663985,-5.798136,-8.527485,0.971552,-9.524716,-7.295587,8.581961,9.237191,-5.914914,-8.091578,-2.604787,1.148212,4.877863,-9.329205,7.941617,-8.440300,8.471101,-0.996806,6.878962,0.820820,6.182581,-3.546668,-3.906807,-7.570853,2.433149,-7.379094,-0.639802,8.605313,2.815385,-1.152814,6.256873,-5.958698,4.328824,-0.086923,-2.646943,-3.244914,3.763486,-0.562551,-8.035069,-8.916770,-4.627491,3.603886,-1.382546,-2.952366,-0.424840,-6.741507,8.234322,-5.768651,-1.026384,-8.457041,2.715641,-7.813681,9.602411,-5.652339,-7.992587,7.310341,-7.266922,9.149943,-7.876657,-1.337910,-2.824199,-6.693799,4.772208,-4.809716,5.044045,-8.848122,8.229095,2.404402,2.146246,-1.170275,0.804560,-8.103392,-1.212227,-3.812747,2.463960,8.407322,-2.342335,-4.103914,-9.636675,8.001402,6.418247,-9.860074,-7.052349,7.116018,-8.709806,4.659029,0.964754,3.719701,6.623764,-3.926234,-4.424449,-0.307064,1.630048,-6.582010,4.427017,0.119953,9.973324,6.730150,-7.299650,7.956947,-4.074983,-5.481590,8.690505,8.810833,6.513867,7.847126,6.600111,-0.697524,-8.905657,9.663703,-0.135620,-0.190062,-0.903491,-9.757179,-2.535321,7.492274,-8.898250,7.957198,9.485039,0.717009,-9.451894,-9.921475,-2.600363,5.516942,1.323013,9.108131,6.320366,4.792832,1.710755,-4.978522,-0.872378,1.730600,8.259288,-8.991075,5.499712,-7.045354,-5.792371,-3.593320,7.210127,-7.427921,-9.525776,9.401675,1.403320,1.119071,-1.553481,7.009243,-5.271561,4.617342,0.377858,-5.060607,3.143661,-4.274091,-0.154457,7.905491,-0.339551,-5.429581,3.794051,0.084082,2.730068,8.717192,-6.627438,-0.713844,2.146322,9.448262,1.806427,-5.470619,-6.901390,-4.745463,0.491314,-8.754349,7.508320,-5.733676,-9.717280,-8.355678,-3.735443,0.971606,-4.942214,8.677182,-3.198983,-9.678523,7.465592,-7.367961,5.644370,-2.803438,-5.244670,4.795919,7.084620,-3.902937,7.617708,7.370433,2.843855,-2.002045,-6.032960,2.640810,-9.658619,-2.253890,-7.440200,5.472722,-9.956296,-6.757866,9.166995,-8.414410,8.452779,-5.932095,4.841203,6.182786,6.080005,-4.745165,8.663575,-0.866267,6.832438,0.882135,6.006754,-2.530819,-6.232990,4.033012,-2.330335,0.640390,-8.737896,-1.286726,5.967215,-1.203016,6.842536,7.169293,8.660331,8.269710,-7.658233,-8.888590,6.831428,4.750559,-4.940538,3.630594,8.437063,-8.173660,6.813218,6.406306,-1.257049,4.289930,6.479567,7.774191,-3.608799,4.170663,8.915439,-4.821319,-7.718326,4.897071,-5.577039,5.110806,5.036905,-4.800381,-9.844017,8.647752,5.425704,9.914692,9.385184,1.792212,7.453138,5.440231,4.931285,4.228492,8.303661,-8.299040,-4.164161,0.438641,5.328294,-4.948203,-4.837445,3.737380,-8.202451,-5.214970,6.330349,7.421292,-8.209325,6.680091,-0.653639,-3.928463,4.721285,-3.967713,-4.709297,7.489836,3.443483,-2.718713,-0.029323,0.008572,-3.772499,-1.807108,-5.309281,-7.163294,-5.876028,-7.321812,-2.469537,9.238495,4.240291,0.545586,3.695290,9.633359,-2.580564,-3.400743,7.615461,2.085607,9.616399,5.840643,2.040506,6.201997,-5.691846,1.904103,-8.731539,-7.015966,-8.432519,1.396357,2.570535,-9.000865,-6.296074,-5.513637,-7.171398,8.291566,1.702941,7.895871,-0.844872,2.130703,-2.056203,-2.361538,0.350532,-3.335842,-8.328246,2.499233,1.053884,-0.719738,7.792935,5.012004,-0.291094,2.775779,-5.231641,0.241970,7.724893,5.600570,2.434796,-6.869809,-1.986919,-2.748935,3.973040,-5.137080,8.625840,-7.532803,0.649398,-3.696425,7.595050,-8.286831,2.056843,-9.266805,-2.442171,-1.676098,5.921528,-9.687445,-5.949424,3.652063,-4.027971,-1.917409,-8.061454,-5.640526,-7.953806,1.945213,8.668072,1.421949,4.846514,7.435080,4.778974,3.154519,7.349055,2.501476,-1.279902,3.935724,-7.491294,-8.039814,-2.821738,7.654715,-0.675940,-1.134012,-6.210113,-4.657304,-2.381565,7.129827,5.938618,-5.962435,-5.820970,-5.967272,-3.638074,5.401922,3.594049,8.199595,8.382360,2.642220,-7.181185,3.746178,2.292801,-7.596597,2.740163,-8.680871,4.773945,0.524011,-3.993794,-0.684103,3.930354,6.422291,-5.616024,2.648251,0.636493,6.547783,-3.418954,-8.563810,-5.869287,3.698234,-2.445935,-7.001310,6.582801,9.828577,-9.230204,-2.971301,-1.360192,-0.425115,1.648277,-5.734496,-0.373752,-3.176298,-9.385131,2.193975,9.893617,-8.367915,-8.141221,7.787177,0.405698,4.754596,8.308894,9.934406,0.709674,-2.927182,5.021394,-3.407677,-7.961958,9.742676,2.633700,9.870194,8.926103,5.268387,-1.559572,3.796828,6.444084,8.710815,0.115918,-6.132474,9.409837,0.304180,0.462285,-0.465337,-3.917876,-7.559538,-2.524740,-6.420423,-7.302374,9.028116,3.393806,-0.214164,8.039948,5.868504,-0.159237,-5.947518,-0.763203,2.306265,6.423119,3.298451,5.621204,3.633026,6.971383,9.615258,5.421556,-4.941878,-4.791679,-8.300301,0.175783,-5.299870,8.196077,0.630916,-0.542131,-0.135509,-5.071104,5.404309,4.108510,-6.626823,-9.422111,-4.621590,-7.006228,-7.867186,0.718018,7.037576,-5.652051,0.238512,-1.317466,0.750973,5.644736,-6.057764,1.045379,2.318812,-2.302216,6.595517,3.984163,5.065142,4.661910,-8.909059,-0.804168,1.364883,2.850411,-4.658360,1.442403,-3.416743,0.545580,-0.254399,-6.575361,-4.191611,9.081572,-5.525784,4.710817,3.250195,9.368673,-6.196821,7.984527,1.888365,-0.603409,-7.174243,6.642850,-5.159523,1.467073,-8.337785,-9.942284,-7.901801,-5.498629,-5.831190,-1.698381,-1.004400,-8.818767,9.968554,-3.473767,-5.808164,0.142877,-2.145157,-9.115793,9.620005,-2.774480,1.083286,-7.900556,-4.740875,-1.898526,7.641671,-7.007098,2.450139,-0.574905,-0.684344,3.830278,1.674969,8.182121,2.063215,-0.126932,1.443772,-2.182820,5.518678,6.496572,-8.409186,-7.246930,-8.062617,9.759681,9.663245,8.270792,4.000391,0.654626,2.757940,-4.383703,-7.411274,3.391815,2.899478,-6.977290,0.637653,5.203572,-2.850048,6.413707,-6.053121,-3.467278,-7.383780,-2.054808,-3.184685,-0.419026,-2.265403,-0.186657,5.524105,0.292149,-4.571249,8.955626,2.827991,1.415572,-5.369055,-3.391880,9.087201,4.756455,-8.928929,1.280110,7.746566,-1.773039,7.149715,-7.660293,9.186511,0.658349,1.722858,7.170578,3.410032,-8.529570,5.397520,5.100534,7.519748,-5.000228,-6.878554,-4.264364,6.766884,1.475506,-8.340355,1.685862,1.644291,3.628290,8.751513,0.512753,9.282693,-9.595535,7.481990,7.669676,-1.031951,-4.984034,-6.135205,-9.270105,-8.621806,-1.564949,5.853263,-8.525327,-6.981949,-0.424538,-6.235569,0.958784,0.318536,-6.435791,1.109513,-8.255243,5.256627,-9.629993,1.904590,1.648319,-2.803730,-3.145128,1.980690,4.164590,-8.464767,7.122585,3.313191,-9.307403,-0.445006,4.197886,1.659613,-3.510606,9.049268,-6.642386,9.149585,-2.602179,5.065364,-7.338028,5.018326,-8.550614,1.637013,-2.798236,-3.596161,2.994440,6.653491,-7.833884,-7.712241,4.321506,0.277397,7.739124,0.018503,1.158170,-6.303886,2.659791,4.557313,-5.775144,2.644577,1.685716,9.684330,-0.657000,-8.392824,3.789718,4.252828,-7.594534,-3.214326,-1.151362,2.339408,-8.831698,9.513785,3.898551,-9.280292,1.587553,-1.309106,1.696758,0.304533,-4.082423,1.977600,3.173236,-7.317075,6.158490,0.287702,-4.242717,7.464797,-3.274840,-2.065045,7.477107,2.685655,-6.862547,-8.742945,-1.831510,7.644454,7.439703,-2.167139,-3.802717,-6.679172,-7.117696,0.976055,-9.773313,1.687494,0.550423,-3.118325,-1.444525,0.154249,3.443539,5.545043,6.312814,-6.080123,1.390367,0.573435,0.277257,5.183174,4.191227,-0.526028,-6.690296,2.625452,5.577933,-6.732972,7.127815,-9.841253,3.448315,-9.198727,-5.119609,8.918310,-8.946730,7.842796,-2.630754,7.247195,3.671304,2.461111,4.853616,2.980495,-5.021049,4.010900,4.618041,-5.922073,7.681628,-2.361033,7.089152,8.946910,-6.114664,1.187555,9.508757,4.514617,-3.738780,-9.942381,6.360836,-4.117704,-9.751720,5.320274,8.139071,-4.046478,4.223452,9.426345,4.197087,-2.592797,0.650431,-3.667125,-0.031027,-7.138157,6.006997,-4.832707,-2.009077,-6.454897,-0.518535,3.444869,-1.517168,-0.077535,-6.171052,-1.541077,-6.777051,1.648542,1.619393,8.572083,6.236533,-4.199948,-0.882272,6.948142,-6.991597,4.433560,-3.957196,-6.883196,3.417873,-1.206885,-9.494982,7.862980,8.740018,8.755157,-5.562793,-1.469043,-1.564049,-0.009600,3.810451,2.293162,-6.560404,2.265538,3.821352,5.509106,-9.165423,-5.361985,-9.564431,-4.702016,1.685689,-2.397194,-5.990171,3.380560,-9.930939,3.379150,-2.531459,7.788631,-6.748848,0.395441,-4.659548,-6.238587,-8.375720,-4.569101,-4.760642,-9.056409,-8.707259,3.782809,4.099491,6.753983,4.992328,9.229583,3.106791,-3.365413,3.828797,-3.469642,-8.472604,5.631767,2.500993,8.006007,-3.858240,8.451980,2.702655,2.386157,-1.331844,-2.272724,8.164664,8.278251,-7.925546,-8.673684,2.179015,2.058574,4.713237,-5.490083,-1.790822,-7.827260,2.087261,7.911515,5.074922,2.855756,6.009152,8.308183,1.049797,-6.401800,-9.961174,-5.692766,6.481071,6.498998,-7.202742,2.982982,1.021249,4.290818,-7.519674,2.727681,9.519180,4.654244,-2.011403,0.517848,9.422434,4.545123,4.491700,0.256931,-1.637405,9.284309,-1.086252,9.881055,7.804809,-4.347121,-2.986023,7.197014,-5.507221,-6.621613,3.589647,-3.684514,9.790210,-7.333915,6.846429,1.528090,-2.421679,-0.655977,-3.076712,-0.642555,-4.670152,9.765835,9.416864,-0.974663,8.186927,-8.363432,0.960576,5.041760,2.005092,8.091503,7.350666,-0.936571,0.762789,-2.440995,-7.365291,6.594889,2.055528,7.893195,4.752237,-8.588656,6.302007,2.513184,6.185655,4.739723,-0.715649,-9.135084,-5.764297,7.686132,7.133756,6.786369,5.438904,0.603537,1.282379,0.877339,-9.388071,0.592730,-5.707779,-6.278282,3.109284,-7.697383,-7.373187,6.485748,0.202729,8.741380,-8.430907,4.282790,3.284039,-1.064201,4.482341,-0.244141,2.157617,5.050103,-7.943669,2.042496,-5.711282,-3.002592,-9.933309,6.178738,-3.281516,5.955875,3.711829,-3.632192,5.073671,8.753774,-4.260437,-1.985715,9.657181,-8.379907,-3.068934,6.839489,1.539537,9.150947,2.840875,-5.852194,5.202472,-3.257263,-9.397183,-3.124373,2.280225,-4.085091,2.364143,7.112816,3.850238], dtype = "float64")#candidate|3770|(1680,)|const|float64
var_3771 = relay.var("var_3771", dtype = "float64", shape = (48,))#candidate|3771|(48,)|var|float64
var_3772 = relay.var("var_3772", dtype = "float32", shape = (560,))#candidate|3772|(560,)|var|float32
call_3769 = relay.TupleGetItem(func_962_call(relay.reshape(const_3770.astype('float64'), [10, 14, 12]), relay.reshape(var_3771.astype('float64'), [48,]), relay.reshape(var_3772.astype('float32'), [8, 70]), ), 3)
call_3773 = relay.TupleGetItem(func_966_call(relay.reshape(const_3770.astype('float64'), [10, 14, 12]), relay.reshape(var_3771.astype('float64'), [48,]), relay.reshape(var_3772.astype('float32'), [8, 70]), ), 3)
output = relay.Tuple([call_3767,call_3769,const_3770,var_3771,var_3772,])
output2 = relay.Tuple([call_3768,call_3773,const_3770,var_3771,var_3772,])
func_3774 = relay.Function([var_3771,var_3772,], output)
mod['func_3774'] = func_3774
mod = relay.transform.InferType()(mod)
var_3775 = relay.var("var_3775", dtype = "float64", shape = (48,))#candidate|3775|(48,)|var|float64
var_3776 = relay.var("var_3776", dtype = "float32", shape = (560,))#candidate|3776|(560,)|var|float32
output = func_3774(var_3775,var_3776,)
func_3777 = relay.Function([var_3775,var_3776,], output)
mutated_mod['func_3777'] = func_3777
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3805 = relay.const([[[7.792117,8.183993,-2.695528,-1.303370,-9.426923,9.943843,2.436318,-7.160839,-1.290148,-7.189239,7.865136],[-4.748615,-4.630293,-8.787632,7.721694,1.704457,0.400850,-2.872927,7.726370,9.075998,-2.118024,-8.935183],[4.342340,5.709153,-6.056303,-9.496163,-8.093572,4.725850,-6.234296,5.202498,4.300527,-6.919112,4.546491],[-7.864493,-0.303751,1.670138,-5.234403,-3.683916,-1.678379,-5.759505,9.705855,-1.963132,6.129533,2.128988]],[[2.724842,4.938417,5.856072,-8.605810,2.064930,7.250826,-4.510819,-6.412041,-5.064335,2.438632,-9.644462],[4.426490,-3.053510,-9.673417,2.702923,9.497490,-2.438177,3.228387,6.489371,-7.620347,4.293800,-9.196242],[-2.667171,-8.082430,8.635840,4.431877,4.272044,6.364947,-9.239721,-8.854393,6.352847,1.627491,-3.991513],[5.877632,-8.870929,-0.204605,6.367391,7.372353,0.912206,-6.165710,1.850301,4.555455,3.603207,4.616331]],[[-5.559579,1.451909,9.204567,8.408392,-2.301031,3.852330,-3.162008,-8.699344,-4.735619,-6.258733,4.984660],[-6.608911,-9.668156,-0.086353,5.146517,-7.619718,5.037254,1.456870,-4.382248,-0.686349,-5.656371,5.233130],[-9.766013,-5.212703,1.153732,-0.597424,-4.097127,-1.293241,-6.946426,-8.456996,-2.333049,3.165199,-5.911840],[-8.320122,1.905317,6.174065,2.937336,1.540062,-0.454916,-7.512965,-7.690687,3.458553,-0.983303,3.669186]],[[-7.855288,-4.633678,-3.849965,-0.538666,-1.222321,7.228973,9.530303,1.485684,2.493627,-3.548361,7.742559],[-9.498189,-4.868116,-3.871384,4.520994,5.880544,9.262797,-4.390560,-0.680000,-4.746634,4.220368,-6.662694],[8.422111,5.048382,-0.614053,-7.586851,6.984969,1.415403,-8.830881,-0.625854,-2.346807,8.504433,8.823736],[8.792446,-5.875217,-2.001685,-3.645987,2.592395,4.205886,-5.765167,-0.571302,9.839272,6.109890,4.316460]],[[-7.166676,9.310130,-6.554925,-5.729479,-4.405869,8.411950,2.162365,3.654140,-1.163975,6.269670,8.150016],[-1.429180,5.454968,8.780993,-0.124570,-3.402119,-9.235857,9.532895,6.077518,-7.716488,-7.525121,-2.234612],[-7.078041,7.444033,-1.407093,-5.413647,-1.794630,-6.289213,-7.099890,2.358236,-5.429482,7.781672,9.709165],[3.987516,-0.942515,4.968102,4.265122,-1.266232,2.152718,6.606225,6.333914,5.676171,-3.545485,1.921551]],[[-5.520484,9.261909,-6.947669,4.194487,-6.391024,-2.653417,2.727510,2.996665,-8.240504,-0.469629,8.266989],[5.753475,0.568819,-5.493481,-0.958350,-3.985543,-5.858929,-0.805433,-5.150328,5.702837,-6.704560,2.647551],[3.139880,9.007411,-7.149193,7.380160,6.720795,-6.045152,1.855670,-7.547922,-8.758176,-7.848632,-2.984094],[-0.743335,8.330333,1.194271,3.586162,4.050630,3.910449,-0.540832,-9.507256,1.032669,5.975411,-4.499713]],[[7.156617,-7.386145,0.724291,-7.117812,1.151218,-8.967759,-3.219708,0.958834,-4.686897,-4.075408,6.185076],[3.966706,-0.566657,4.355979,0.612549,6.162791,-0.686556,-0.127007,-1.911963,6.345515,8.516347,-9.660246],[-2.652948,-0.205869,-2.638172,-2.727248,8.509481,7.502316,1.573455,9.943751,-9.249863,4.216227,6.946659],[-5.596537,-5.035960,7.718094,1.714806,-3.244036,7.141777,-2.573649,4.754734,9.757226,8.896881,2.942133]],[[2.183493,0.559126,1.752686,-7.301287,-8.462677,-6.740835,1.730756,0.704150,-2.855797,-2.409722,-1.692145],[8.507210,6.309706,-4.476132,-6.959809,2.723712,6.528453,2.055908,8.043584,1.096976,8.162750,8.754953],[6.482347,9.791546,-8.532750,-6.477648,2.884064,-5.733758,-8.863429,9.952938,-6.501157,1.049970,2.251280],[-6.858690,-5.307072,-4.452931,-7.307605,-9.349369,-6.319767,4.382496,1.895426,5.019917,7.614176,-1.494339]],[[9.249408,-4.166461,-8.356994,0.921756,0.942789,5.811576,9.758147,8.043615,9.705064,6.090272,5.743770],[-5.769628,-5.699046,0.682745,4.273339,-7.366309,8.202471,9.072171,-1.677352,5.862608,-7.950875,7.498081],[7.697061,8.216607,1.476511,-3.460831,7.037595,6.667656,1.443480,-4.414750,-9.675844,3.873349,7.606567],[-8.845791,2.615545,2.165000,-1.202677,9.756537,3.812875,-0.965826,3.462011,-2.116382,6.192760,8.768359]],[[-6.551775,7.044387,-0.941752,0.142751,8.961430,0.863217,5.445901,5.349951,8.157812,6.463237,1.814641],[8.252983,8.472740,-9.222322,-6.785383,6.378042,5.522718,8.841467,2.478606,1.199065,-2.033802,6.027906],[-5.183929,4.175851,0.401562,-6.398768,-7.674681,4.244017,2.479787,-9.994340,5.227355,8.735649,1.447836],[-3.530017,0.479943,1.221455,-9.013020,6.573391,5.580044,8.061949,-5.426841,-2.514478,5.835624,-4.814195]],[[9.893494,-5.655618,-0.662892,5.899629,7.728149,-4.989218,5.983469,-1.087505,-8.916160,-0.225853,7.246327],[-0.068432,-0.386330,-0.224506,-3.587536,-5.244618,-6.292199,6.824060,-2.361207,-5.196052,-7.258014,-6.900115],[-7.742688,-7.484124,1.760917,5.878730,-7.458295,-6.587857,-3.847070,-6.951631,7.334414,-5.235699,-1.398744],[-2.496936,-1.952806,-7.625057,7.994261,-5.341064,8.433296,-4.926469,-7.865232,7.329335,5.429957,4.175355]]], dtype = "float32")#candidate|3805|(11, 4, 11)|const|float32
uop_3806 = relay.log(const_3805.astype('float32')) # shape=(11, 4, 11)
output = relay.Tuple([uop_3806,])
output2 = relay.Tuple([uop_3806,])
func_3808 = relay.Function([], output)
mod['func_3808'] = func_3808
mod = relay.transform.InferType()(mod)
output = func_3808()
func_3809 = relay.Function([], output)
mutated_mod['func_3809'] = func_3809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3829 = relay.var("var_3829", dtype = "float64", shape = (8, 13, 12))#candidate|3829|(8, 13, 12)|var|float64
uop_3830 = relay.cos(var_3829.astype('float64')) # shape=(8, 13, 12)
output = uop_3830
output2 = uop_3830
func_3832 = relay.Function([var_3829,], output)
mod['func_3832'] = func_3832
mod = relay.transform.InferType()(mod)
mutated_mod['func_3832'] = func_3832
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3833 = relay.var("var_3833", dtype = "float64", shape = (8, 13, 12))#candidate|3833|(8, 13, 12)|var|float64
func_3832_call = mutated_mod.get_global_var('func_3832')
call_3834 = func_3832_call(var_3833)
output = call_3834
func_3835 = relay.Function([var_3833], output)
mutated_mod['func_3835'] = func_3835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1899_call = mod.get_global_var('func_1899')
func_1901_call = mutated_mod.get_global_var('func_1901')
call_3925 = func_1899_call()
call_3926 = func_1899_call()
func_2348_call = mod.get_global_var('func_2348')
func_2351_call = mutated_mod.get_global_var('func_2351')
const_3939 = relay.const([0.440021,0.787741,3.560732,8.995361,-9.518061,7.912031,0.352820,6.987592,5.248905,-9.455814,7.058107,-5.445888,-9.597235,9.110849,-7.828389,-6.825340,-3.959937,-7.295819,1.505153,-2.269152,-5.062136,-5.305594,-3.569503,-1.494590,-6.827763,8.745834,7.402359,-0.212336,2.276386,8.981914,-1.697610,-7.060032,-1.239704,-4.676400,-1.384958,4.316616,-4.012135,-5.749733,-7.896634,2.923791,9.180970,-8.717254,-8.383502,-7.454086,-5.231845,7.656915,8.957502,7.767601], dtype = "float64")#candidate|3939|(48,)|const|float64
call_3938 = relay.TupleGetItem(func_2348_call(relay.reshape(const_3939.astype('float64'), [48,])), 3)
call_3940 = relay.TupleGetItem(func_2351_call(relay.reshape(const_3939.astype('float64'), [48,])), 3)
output = relay.Tuple([call_3925,call_3938,const_3939,])
output2 = relay.Tuple([call_3926,call_3940,const_3939,])
func_3942 = relay.Function([], output)
mod['func_3942'] = func_3942
mod = relay.transform.InferType()(mod)
mutated_mod['func_3942'] = func_3942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3942_call = mutated_mod.get_global_var('func_3942')
call_3943 = func_3942_call()
output = call_3943
func_3944 = relay.Function([], output)
mutated_mod['func_3944'] = func_3944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3273_call = mod.get_global_var('func_3273')
func_3274_call = mutated_mod.get_global_var('func_3274')
call_3960 = func_3273_call()
call_3961 = func_3273_call()
func_1647_call = mod.get_global_var('func_1647')
func_1650_call = mutated_mod.get_global_var('func_1650')
var_3965 = relay.var("var_3965", dtype = "float64", shape = (182,))#candidate|3965|(182,)|var|float64
call_3964 = relay.TupleGetItem(func_1647_call(relay.reshape(var_3965.astype('float64'), [1, 14, 13])), 0)
call_3966 = relay.TupleGetItem(func_1650_call(relay.reshape(var_3965.astype('float64'), [1, 14, 13])), 0)
output = relay.Tuple([call_3960,call_3964,var_3965,])
output2 = relay.Tuple([call_3961,call_3966,var_3965,])
func_3967 = relay.Function([var_3965,], output)
mod['func_3967'] = func_3967
mod = relay.transform.InferType()(mod)
mutated_mod['func_3967'] = func_3967
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3968 = relay.var("var_3968", dtype = "float64", shape = (182,))#candidate|3968|(182,)|var|float64
func_3967_call = mutated_mod.get_global_var('func_3967')
call_3969 = func_3967_call(var_3968)
output = call_3969
func_3970 = relay.Function([var_3968], output)
mutated_mod['func_3970'] = func_3970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3972 = relay.var("var_3972", dtype = "int32", shape = (7, 9, 16))#candidate|3972|(7, 9, 16)|var|int32
var_3973 = relay.var("var_3973", dtype = "int32", shape = (7, 9, 16))#candidate|3973|(7, 9, 16)|var|int32
bop_3974 = relay.minimum(var_3972.astype('int32'), relay.reshape(var_3973.astype('int32'), relay.shape_of(var_3972))) # shape=(7, 9, 16)
uop_3978 = relay.atan(var_3972.astype('float64')) # shape=(7, 9, 16)
func_3358_call = mod.get_global_var('func_3358')
func_3361_call = mutated_mod.get_global_var('func_3361')
const_3984 = relay.const([-2.192929,-4.309762,6.088549,8.565100,-2.804296,5.423892,2.714310,0.188152,-5.330989,-9.268878,3.121213,6.156860,5.232234,8.571584,-1.004741,5.235748,5.236974,-4.886206,-4.730952,-8.546617,9.534149,0.068869,8.873461,7.522345,-1.740417,8.437357,8.235321,-1.685780,5.791921,8.824875,9.293689,9.165538,-1.975813,1.558965,1.857316,0.053268,1.843848,2.438160,-3.575229,-2.190079,-2.889430,-4.987382,-7.328309,-7.420815,2.230920,9.800308,-3.640048,1.411135], dtype = "float64")#candidate|3984|(48,)|const|float64
call_3983 = relay.TupleGetItem(func_3358_call(relay.reshape(const_3984.astype('float64'), [48,])), 1)
call_3985 = relay.TupleGetItem(func_3361_call(relay.reshape(const_3984.astype('float64'), [48,])), 1)
uop_3988 = relay.acosh(uop_3978.astype('float64')) # shape=(7, 9, 16)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_3995 = relay.TupleGetItem(func_3611_call(), 0)
call_3996 = relay.TupleGetItem(func_3613_call(), 0)
func_3258_call = mod.get_global_var('func_3258')
func_3260_call = mutated_mod.get_global_var('func_3260')
const_4005 = relay.const([4,6,8,-2,10,7,6,-9,4,5,4,5,10,-1,4,-9,9,-10,-9,-2,-8,6,-2,-10,-4,2,-10,9,2,2], dtype = "uint16")#candidate|4005|(30,)|const|uint16
call_4004 = relay.TupleGetItem(func_3258_call(relay.reshape(const_4005.astype('uint16'), [30,])), 1)
call_4006 = relay.TupleGetItem(func_3260_call(relay.reshape(const_4005.astype('uint16'), [30,])), 1)
output = relay.Tuple([bop_3974,call_3983,const_3984,uop_3988,call_3995,call_4004,const_4005,])
output2 = relay.Tuple([bop_3974,call_3985,const_3984,uop_3988,call_3996,call_4006,const_4005,])
func_4010 = relay.Function([var_3972,var_3973,], output)
mod['func_4010'] = func_4010
mod = relay.transform.InferType()(mod)
mutated_mod['func_4010'] = func_4010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4010_call = mutated_mod.get_global_var('func_4010')
var_4012 = relay.var("var_4012", dtype = "int32", shape = (7, 9, 16))#candidate|4012|(7, 9, 16)|var|int32
var_4013 = relay.var("var_4013", dtype = "int32", shape = (7, 9, 16))#candidate|4013|(7, 9, 16)|var|int32
call_4011 = func_4010_call(var_4012,var_4013,)
output = call_4011
func_4014 = relay.Function([var_4012,var_4013,], output)
mutated_mod['func_4014'] = func_4014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4044 = relay.var("var_4044", dtype = "float64", shape = (16, 10, 4))#candidate|4044|(16, 10, 4)|var|float64
var_4045 = relay.var("var_4045", dtype = "float64", shape = (16, 10, 4))#candidate|4045|(16, 10, 4)|var|float64
bop_4046 = relay.power(var_4044.astype('float64'), relay.reshape(var_4045.astype('float64'), relay.shape_of(var_4044))) # shape=(16, 10, 4)
uop_4049 = relay.sinh(var_4045.astype('float64')) # shape=(16, 10, 4)
output = relay.Tuple([bop_4046,uop_4049,])
output2 = relay.Tuple([bop_4046,uop_4049,])
func_4064 = relay.Function([var_4044,var_4045,], output)
mod['func_4064'] = func_4064
mod = relay.transform.InferType()(mod)
var_4065 = relay.var("var_4065", dtype = "float64", shape = (16, 10, 4))#candidate|4065|(16, 10, 4)|var|float64
var_4066 = relay.var("var_4066", dtype = "float64", shape = (16, 10, 4))#candidate|4066|(16, 10, 4)|var|float64
output = func_4064(var_4065,var_4066,)
func_4067 = relay.Function([var_4065,var_4066,], output)
mutated_mod['func_4067'] = func_4067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2100_call = mod.get_global_var('func_2100')
func_2102_call = mutated_mod.get_global_var('func_2102')
call_4091 = relay.TupleGetItem(func_2100_call(), 0)
call_4092 = relay.TupleGetItem(func_2102_call(), 0)
output = relay.Tuple([call_4091,])
output2 = relay.Tuple([call_4092,])
func_4111 = relay.Function([], output)
mod['func_4111'] = func_4111
mod = relay.transform.InferType()(mod)
mutated_mod['func_4111'] = func_4111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mutated_mod.get_global_var('func_4111')
call_4112 = func_4111_call()
output = call_4112
func_4113 = relay.Function([], output)
mutated_mod['func_4113'] = func_4113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3751_call = mod.get_global_var('func_3751')
func_3752_call = mutated_mod.get_global_var('func_3752')
call_4133 = relay.TupleGetItem(func_3751_call(), 0)
call_4134 = relay.TupleGetItem(func_3752_call(), 0)
output = relay.Tuple([call_4133,])
output2 = relay.Tuple([call_4134,])
func_4135 = relay.Function([], output)
mod['func_4135'] = func_4135
mod = relay.transform.InferType()(mod)
mutated_mod['func_4135'] = func_4135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4135_call = mutated_mod.get_global_var('func_4135')
call_4136 = func_4135_call()
output = call_4136
func_4137 = relay.Function([], output)
mutated_mod['func_4137'] = func_4137
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4144 = relay.var("var_4144", dtype = "int16", shape = ())#candidate|4144|()|var|int16
const_4145 = relay.const([[[10,6,-2],[-4,1,8],[2,-8,7],[4,-10,-8],[-2,-9,7],[-6,2,1],[-6,-5,-9],[-6,-4,-5],[-8,4,7],[-2,-9,3]],[[-9,-7,10],[-4,-2,-3],[3,3,8],[8,-9,1],[-6,-5,5],[3,9,-4],[-5,-5,-7],[-10,-10,8],[5,3,8],[-9,10,-9]],[[4,-9,-1],[9,-1,-5],[-5,-1,-9],[4,-2,-7],[-2,7,2],[6,-10,-6],[10,-5,2],[-3,6,-1],[-10,-9,1],[-5,4,-6]],[[9,-2,-9],[-10,-4,1],[-6,2,-6],[-6,-7,1],[5,-2,9],[5,9,9],[-6,6,5],[-7,-10,2],[1,4,-7],[5,-2,-10]],[[6,-9,5],[-5,-6,-4],[-8,1,-1],[8,2,-9],[7,-8,-4],[10,-6,-4],[-8,3,-10],[6,-7,10],[9,-9,9],[8,5,-5]],[[-8,8,7],[-6,-1,-10],[7,8,2],[-1,5,-1],[-1,10,-9],[-4,1,3],[-4,-4,10],[-3,-1,-1],[1,5,-6],[-10,-7,3]],[[-7,-3,1],[-6,-4,7],[6,3,2],[-10,7,-1],[-2,-2,-3],[-5,3,9],[-5,-6,-7],[7,2,-9],[-3,1,2],[5,-5,3]]], dtype = "int16")#candidate|4145|(7, 10, 3)|const|int16
bop_4146 = relay.minimum(var_4144.astype('int16'), const_4145.astype('int16')) # shape=(7, 10, 3)
func_1389_call = mod.get_global_var('func_1389')
func_1393_call = mutated_mod.get_global_var('func_1393')
var_4152 = relay.var("var_4152", dtype = "float32", shape = (768, 1))#candidate|4152|(768, 1)|var|float32
var_4153 = relay.var("var_4153", dtype = "float32", shape = (36,))#candidate|4153|(36,)|var|float32
const_4154 = relay.const([-2.470030,-2.585530,3.469869,1.427631,-2.200059,4.117658,-2.399689,-4.965613,-0.539181,-3.283566,3.723204,-6.401874,-1.762735,-6.415370,-2.366749,-1.214765,-7.586967,5.508741,-8.994446,7.860432,-7.074374,5.247833,-4.743591,-2.421698,0.550986,-3.791052,9.436426,-3.593235,6.953301,-3.098426,-4.518680,-4.530707,8.945298,-1.362973,7.788642,-1.319263,-6.155183,-9.076523,-6.330081,4.702923,3.613465,-4.062235,-4.645593,-4.800150,2.371624,1.075529,4.752895,-7.603909], dtype = "float64")#candidate|4154|(48,)|const|float64
call_4151 = relay.TupleGetItem(func_1389_call(relay.reshape(var_4152.astype('float32'), [8, 12, 8]), relay.reshape(var_4153.astype('float32'), [36,]), relay.reshape(const_4154.astype('float64'), [48,]), ), 0)
call_4155 = relay.TupleGetItem(func_1393_call(relay.reshape(var_4152.astype('float32'), [8, 12, 8]), relay.reshape(var_4153.astype('float32'), [36,]), relay.reshape(const_4154.astype('float64'), [48,]), ), 0)
bop_4219 = relay.left_shift(const_4145.astype('int64'), var_4144.astype('int64')) # shape=(7, 10, 3)
func_879_call = mod.get_global_var('func_879')
func_884_call = mutated_mod.get_global_var('func_884')
call_4233 = relay.TupleGetItem(func_879_call(relay.reshape(var_4153.astype('float32'), [3, 4, 3]), relay.reshape(var_4153.astype('float32'), [3, 4, 3]), relay.reshape(const_4154.astype('float64'), [48,]), ), 7)
call_4234 = relay.TupleGetItem(func_884_call(relay.reshape(var_4153.astype('float32'), [3, 4, 3]), relay.reshape(var_4153.astype('float32'), [3, 4, 3]), relay.reshape(const_4154.astype('float64'), [48,]), ), 7)
output = relay.Tuple([bop_4146,call_4151,var_4152,var_4153,const_4154,bop_4219,call_4233,])
output2 = relay.Tuple([bop_4146,call_4155,var_4152,var_4153,const_4154,bop_4219,call_4234,])
func_4239 = relay.Function([var_4144,var_4152,var_4153,], output)
mod['func_4239'] = func_4239
mod = relay.transform.InferType()(mod)
var_4240 = relay.var("var_4240", dtype = "int16", shape = ())#candidate|4240|()|var|int16
var_4241 = relay.var("var_4241", dtype = "float32", shape = (768, 1))#candidate|4241|(768, 1)|var|float32
var_4242 = relay.var("var_4242", dtype = "float32", shape = (36,))#candidate|4242|(36,)|var|float32
output = func_4239(var_4240,var_4241,var_4242,)
func_4243 = relay.Function([var_4240,var_4241,var_4242,], output)
mutated_mod['func_4243'] = func_4243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3712_call = mod.get_global_var('func_3712')
func_3714_call = mutated_mod.get_global_var('func_3714')
call_4253 = relay.TupleGetItem(func_3712_call(), 0)
call_4254 = relay.TupleGetItem(func_3714_call(), 0)
output = call_4253
output2 = call_4254
func_4259 = relay.Function([], output)
mod['func_4259'] = func_4259
mod = relay.transform.InferType()(mod)
mutated_mod['func_4259'] = func_4259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4259_call = mutated_mod.get_global_var('func_4259')
call_4260 = func_4259_call()
output = call_4260
func_4261 = relay.Function([], output)
mutated_mod['func_4261'] = func_4261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4259_call = mod.get_global_var('func_4259')
func_4261_call = mutated_mod.get_global_var('func_4261')
call_4274 = func_4259_call()
call_4275 = func_4259_call()
func_3942_call = mod.get_global_var('func_3942')
func_3944_call = mutated_mod.get_global_var('func_3944')
call_4294 = relay.TupleGetItem(func_3942_call(), 1)
call_4295 = relay.TupleGetItem(func_3944_call(), 1)
func_2585_call = mod.get_global_var('func_2585')
func_2588_call = mutated_mod.get_global_var('func_2588')
var_4301 = relay.var("var_4301", dtype = "int16", shape = ())#candidate|4301|()|var|int16
call_4300 = relay.TupleGetItem(func_2585_call(relay.reshape(var_4301.astype('int16'), [])), 1)
call_4302 = relay.TupleGetItem(func_2588_call(relay.reshape(var_4301.astype('int16'), [])), 1)
uop_4304 = relay.acos(call_4274.astype('float32')) # shape=(768,)
uop_4306 = relay.acos(call_4275.astype('float32')) # shape=(768,)
output = relay.Tuple([call_4294,call_4300,var_4301,uop_4304,])
output2 = relay.Tuple([call_4295,call_4302,var_4301,uop_4306,])
func_4308 = relay.Function([var_4301,], output)
mod['func_4308'] = func_4308
mod = relay.transform.InferType()(mod)
var_4309 = relay.var("var_4309", dtype = "int16", shape = ())#candidate|4309|()|var|int16
output = func_4308(var_4309)
func_4310 = relay.Function([var_4309], output)
mutated_mod['func_4310'] = func_4310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3083_call = mod.get_global_var('func_3083')
func_3085_call = mutated_mod.get_global_var('func_3085')
call_4346 = relay.TupleGetItem(func_3083_call(), 0)
call_4347 = relay.TupleGetItem(func_3085_call(), 0)
func_2100_call = mod.get_global_var('func_2100')
func_2102_call = mutated_mod.get_global_var('func_2102')
call_4357 = relay.TupleGetItem(func_2100_call(), 0)
call_4358 = relay.TupleGetItem(func_2102_call(), 0)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_4366 = relay.TupleGetItem(func_3611_call(), 1)
call_4367 = relay.TupleGetItem(func_3613_call(), 1)
var_4371 = relay.var("var_4371", dtype = "int16", shape = (10, 13, 4))#candidate|4371|(10, 13, 4)|var|int16
bop_4372 = relay.floor_divide(call_4357.astype('float64'), relay.reshape(var_4371.astype('float64'), relay.shape_of(call_4357))) # shape=(10, 13, 4)
bop_4375 = relay.floor_divide(call_4358.astype('float64'), relay.reshape(var_4371.astype('float64'), relay.shape_of(call_4358))) # shape=(10, 13, 4)
var_4385 = relay.var("var_4385", dtype = "float64", shape = (3, 13, 7))#candidate|4385|(3, 13, 7)|var|float64
bop_4386 = relay.bitwise_or(call_4346.astype('int16'), relay.reshape(var_4385.astype('int16'), relay.shape_of(call_4346))) # shape=(3, 13, 7)
bop_4389 = relay.bitwise_or(call_4347.astype('int16'), relay.reshape(var_4385.astype('int16'), relay.shape_of(call_4347))) # shape=(3, 13, 7)
output = relay.Tuple([call_4366,bop_4372,bop_4386,])
output2 = relay.Tuple([call_4367,bop_4375,bop_4389,])
func_4397 = relay.Function([var_4371,var_4385,], output)
mod['func_4397'] = func_4397
mod = relay.transform.InferType()(mod)
var_4398 = relay.var("var_4398", dtype = "int16", shape = (10, 13, 4))#candidate|4398|(10, 13, 4)|var|int16
var_4399 = relay.var("var_4399", dtype = "float64", shape = (3, 13, 7))#candidate|4399|(3, 13, 7)|var|float64
output = func_4397(var_4398,var_4399,)
func_4400 = relay.Function([var_4398,var_4399,], output)
mutated_mod['func_4400'] = func_4400
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4461 = relay.const([[[1,2,9,9,3,10,-3,8,-1,1,-1,10,2,4,4],[5,3,5,-1,-1,-10,-4,5,5,8,3,5,-1,5,-5],[5,6,7,-1,6,3,-4,-10,-8,7,5,9,-3,6,-6],[-9,-1,8,-8,6,-10,1,5,-4,-6,-3,1,10,-2,4],[-9,8,7,10,2,9,-5,5,2,7,10,-1,-9,9,-9],[-9,5,10,1,9,-6,-7,-9,-2,-4,10,-8,7,2,-9],[10,-9,5,-6,9,-2,-4,-7,3,-3,-10,-3,4,4,-7],[-8,2,1,-1,6,2,7,8,10,-5,10,-8,2,6,-9],[-2,1,8,-1,-9,-9,4,-9,-9,-6,2,2,1,-1,1],[-2,-10,-6,3,5,6,-4,-1,-5,-4,7,-8,-7,2,-8],[9,-5,-10,-7,-8,-6,-8,7,7,-10,-4,6,-5,-3,-10],[-9,10,2,-4,-5,-3,1,3,-1,-9,-1,9,4,-10,-4],[-9,-3,-8,3,4,-8,-10,8,-4,-4,-3,5,4,-9,-10],[7,5,-10,-5,-5,-2,-5,10,6,4,9,6,-1,-5,5],[1,-5,-3,9,10,6,7,-2,7,-2,-1,2,5,8,-4],[-7,6,-1,-9,-7,-4,-8,-6,-9,2,8,2,-1,-3,-1]],[[3,-2,-10,-7,5,5,-9,-2,7,2,3,-3,9,-6,-4],[-9,-4,7,8,-10,-2,-2,-10,-7,-6,-6,-6,7,-2,10],[-1,2,-4,7,7,-2,-4,9,1,-3,-3,-7,6,6,7],[4,9,-1,-9,2,10,4,-10,-10,-8,-7,9,-10,8,-5],[-4,-2,6,-5,-6,10,2,-7,-6,-5,-9,-3,-6,3,1],[-8,-8,-9,6,7,10,5,1,4,1,2,-2,6,10,-2],[1,7,2,2,-9,-7,8,10,-6,-9,-6,6,-5,-7,-4],[-5,3,-4,7,1,7,-4,-2,8,-1,-6,7,-6,-4,5],[-4,-3,-4,1,3,9,2,6,-10,-3,-9,-9,-10,-9,7],[-10,-6,-9,-2,-4,-2,4,8,7,4,10,-10,-2,-3,-3],[-6,-3,-8,3,-3,-4,9,1,7,5,10,7,-4,10,-1],[-8,-8,9,7,5,-10,7,8,-7,5,-8,-9,7,-5,3],[-10,3,3,-3,6,2,-8,5,6,10,-6,-6,-5,-2,-10],[8,-5,-7,5,-1,-7,-4,10,8,3,-7,6,6,8,4],[3,7,5,6,-1,2,10,2,7,-7,-8,9,-10,9,-3],[6,-7,3,7,3,-8,8,10,9,-10,6,-3,-5,-10,-10]],[[7,8,-1,5,2,-7,-10,-10,7,-8,8,-6,-8,3,-5],[-10,9,4,3,-9,7,7,3,8,1,-6,7,-1,2,3],[-6,-10,5,8,-3,-2,1,8,1,3,-1,10,-10,4,-6],[9,-2,-1,-3,6,4,-8,9,10,-1,1,-1,-9,5,-2],[2,3,2,-2,10,3,-6,-10,7,7,2,-10,-3,3,4],[-7,1,-10,-3,-8,-10,9,-3,3,9,-8,9,6,-6,-10],[-6,-5,-8,-10,9,5,10,-5,5,3,-7,-6,6,10,3],[-4,-8,6,6,-6,3,-4,5,5,7,-5,8,3,-3,8],[5,-5,-3,-7,-8,-3,4,5,7,1,-10,8,-8,-4,6],[-9,5,3,6,8,3,-6,-1,8,2,1,4,2,2,2],[-9,8,4,2,3,5,-3,7,-3,3,-2,9,-4,9,8],[-4,4,-9,-7,-10,4,8,-8,3,-8,7,9,-10,-9,-8],[2,-4,-8,-5,-7,-5,10,-8,8,10,-6,-8,6,-7,-8],[-4,1,-5,10,-3,-4,-7,2,5,-7,-6,3,-7,5,-4],[2,-1,5,-1,-5,3,3,-4,-5,4,3,4,-7,4,6],[-5,5,1,-2,-4,-9,4,7,6,8,-2,4,-8,-7,-3]],[[10,1,-3,-5,7,2,6,-9,-6,5,-6,7,-4,-9,9],[6,-1,7,1,9,-3,5,8,2,-8,-10,-3,2,-5,-8],[6,-6,-1,1,4,4,-2,9,-3,-6,10,-5,4,-10,-2],[-3,-4,-5,1,1,-5,-5,1,7,-6,7,8,9,-3,2],[1,4,-6,2,-3,5,5,-7,5,-4,-6,7,5,7,-8],[3,-8,-5,-6,-4,-2,-8,-8,-7,6,5,2,-5,9,7],[5,-5,7,-7,-10,1,-9,-1,4,1,-9,2,-8,10,-3],[3,7,8,1,-8,-6,3,9,-2,1,-3,-8,4,3,1],[1,1,3,3,-7,-5,9,6,-1,1,2,6,8,-5,-4],[-7,2,4,-9,9,7,9,-1,5,3,-8,9,-4,4,8],[-6,2,2,3,-2,-9,6,4,-3,9,-7,1,-1,-3,-4],[10,5,-10,-9,-2,5,9,-9,9,5,10,-7,8,-7,10],[3,3,-3,6,-8,-4,-8,-6,-7,9,-5,4,9,7,-2],[-7,-8,-2,5,-4,6,8,10,-3,9,10,2,-5,5,-8],[8,3,-8,-8,5,-8,9,-7,7,9,-3,-9,3,7,-5],[-7,10,10,5,3,-9,10,-6,-10,-6,-9,8,-5,4,-10]],[[-7,-4,7,7,2,-3,-2,1,-10,10,-10,7,9,-10,4],[-3,-7,7,1,-9,5,-3,4,4,-5,-2,-5,2,2,8],[3,6,10,-7,9,-3,-5,3,10,-3,-4,-1,-5,7,-6],[1,8,-1,-1,7,-2,6,7,-7,9,-4,-5,3,8,7],[-5,-5,-6,-1,-5,-10,-9,4,-6,-4,3,7,5,-7,-10],[-8,3,-9,-10,-9,-9,9,3,-7,-6,-3,1,6,2,8],[10,-10,-9,-3,9,1,-8,9,6,2,7,1,-7,-3,-2],[2,6,4,-1,2,8,-10,-6,10,3,7,9,-7,5,-5],[10,9,-9,9,2,10,7,-6,6,-8,-10,-10,-3,5,-6],[6,-8,-2,-10,7,-4,-1,6,5,-5,-3,-8,-4,-10,8],[9,-6,1,-4,-10,-2,-9,-9,-2,8,-7,-2,6,5,-5],[5,-9,1,-8,-10,9,7,6,-4,10,6,5,-4,4,-8],[-4,-2,-4,2,9,4,-7,7,-7,-2,5,4,-7,-10,10],[1,2,5,-8,8,1,5,-3,1,-3,6,-4,7,-1,-2],[6,-2,-9,-2,8,-4,4,-8,2,-8,4,-3,6,-10,9],[-7,9,3,10,3,-9,-6,-6,1,-4,5,3,-8,9,6]],[[-4,-3,4,-9,3,-2,-8,-5,-5,-2,-5,8,-6,7,-8],[1,7,7,10,-8,9,-5,-10,-3,9,3,4,-2,-10,4],[-1,4,-9,-3,-6,-3,-1,-3,-3,6,-4,5,-2,8,3],[2,7,4,-6,8,-8,-8,-3,3,-9,-7,-10,1,-7,-6],[9,6,3,-5,-9,-2,5,-7,10,2,9,-2,-2,-10,10],[-9,3,8,-5,8,5,10,-9,8,-9,9,-2,6,4,10],[4,-6,5,5,-8,-6,3,2,-5,1,1,-1,-3,-6,4],[4,7,5,5,-4,4,-5,-5,9,7,3,10,-2,10,-1],[-6,-2,-6,-5,-10,-1,10,-3,4,5,2,3,2,6,-5],[-6,-3,-4,-9,9,9,-6,-7,-3,3,-2,8,8,1,1],[4,-7,-8,-7,1,6,7,10,-3,6,-3,-2,4,-8,-7],[-2,-6,9,1,3,-3,3,-3,5,-8,-3,-9,-1,-4,-1],[7,1,6,1,7,1,-3,1,9,-1,8,7,8,2,8],[4,-9,-1,6,-2,6,-4,-10,-4,-2,6,-10,7,3,-9],[-5,8,-7,-10,-3,-7,-8,7,-5,-4,7,-6,7,6,-5],[2,-9,5,-9,10,-9,-10,-7,4,-9,8,10,-4,9,6]],[[-4,-3,7,10,7,10,4,-5,-9,2,7,4,6,-4,-8],[9,9,7,-2,-3,-5,-6,-5,2,10,-9,-8,4,-3,-8],[-9,4,-9,-5,8,-3,-3,3,-10,9,3,-6,-3,4,1],[4,9,9,9,-2,-1,9,3,-9,1,2,-8,-6,1,4],[1,1,7,1,-3,4,-7,-6,-9,1,5,-5,-4,-1,-10],[-4,-4,-3,4,-9,-7,10,8,-2,3,6,-1,-8,-1,-7],[-7,-3,7,-3,2,-7,-7,-2,-3,1,-2,-1,-9,5,1],[10,-4,-8,-1,-9,7,1,-2,-10,-9,-10,-9,3,1,7],[-1,-1,-1,5,4,-4,-1,4,2,-10,-8,-4,-3,-4,-7],[8,9,5,8,2,6,-2,5,-2,-1,-7,-3,5,-8,-2],[-1,4,-10,10,1,-2,9,3,2,-8,8,-4,-6,8,-10],[-10,-1,-1,-5,8,2,-2,4,5,-1,-8,10,-3,-1,-10],[-1,9,7,2,-10,10,10,3,9,9,2,-2,-1,9,-4],[-2,9,7,-1,10,9,3,1,-5,-5,4,-6,-10,-9,-9],[-7,-10,-2,4,5,-7,3,-6,-8,-9,-7,-10,7,-10,-8],[3,-7,4,9,-3,4,-1,-1,-3,7,-2,5,7,-4,10]],[[3,-9,-6,8,-5,-2,-2,-5,-9,2,2,-10,7,-9,-2],[5,2,-6,9,6,8,2,-2,-2,7,6,-9,-4,-2,1],[4,3,-10,-6,4,4,3,-3,2,5,1,-1,-6,1,10],[5,-8,9,7,8,1,-5,-7,-7,-6,-10,-2,9,8,7],[2,1,10,7,-7,-9,8,-3,4,3,2,7,6,3,6],[1,2,7,4,-9,8,1,4,10,-2,10,-8,-8,-2,8],[3,-7,3,-8,7,-10,-5,-2,3,-9,-5,-10,5,-7,1],[7,7,10,8,-7,-5,-2,7,1,6,-6,-6,-3,-8,-8],[-8,-4,2,4,-2,-7,-9,-7,-2,6,-6,-6,1,-5,-2],[2,1,4,10,3,3,10,6,-6,-4,4,-5,6,2,6],[4,1,-4,9,6,-9,-10,9,-4,4,-5,10,1,-7,7],[4,-3,-9,1,-2,-7,-6,-10,5,-7,-4,9,4,1,-4],[5,2,-4,-5,-6,-4,10,4,-4,-1,-7,-3,10,10,-9],[8,2,-3,10,5,-7,-2,10,4,-4,3,2,10,3,1],[-4,-7,-10,7,8,-7,3,-9,-5,7,10,1,-7,-5,-2],[-4,9,7,10,1,-7,1,10,-3,7,-4,-9,10,-9,6]],[[-1,-10,-2,10,-2,-9,1,-7,4,-6,9,7,-7,5,1],[-7,-4,5,-3,-7,7,-2,-8,9,-10,-2,-5,8,-7,5],[-4,2,-9,-3,1,-9,-8,9,1,-9,-3,1,-9,9,2],[3,8,6,-2,2,-1,-4,-4,-4,-10,-6,-3,10,-8,7],[5,-7,-5,2,4,-3,-9,-5,-9,-7,-3,10,2,9,1],[9,7,-2,-9,-2,-2,-1,1,1,-4,-8,1,-4,-10,-2],[-8,-10,7,9,-6,-10,-5,7,-6,5,9,8,3,-5,-4],[7,-8,-6,9,-10,6,3,-2,5,-3,7,-6,-1,6,6],[-3,-1,-10,-5,-4,-3,-6,10,-9,5,9,-1,4,6,8],[-9,4,3,8,-2,6,1,-10,-9,7,-10,-5,-1,-2,10],[-10,-4,-10,8,-6,8,-4,3,1,-4,7,7,4,10,7],[-8,10,3,9,-8,2,7,7,1,-2,-8,-8,1,-5,9],[-3,-10,9,3,-5,-2,-8,-2,-9,-5,-7,-1,10,-10,-3],[6,6,-8,-9,2,3,10,3,6,-4,-4,-6,9,-5,10],[6,3,-3,-6,4,-8,-3,10,-10,-9,-9,-7,-8,-10,5],[-2,-5,-4,9,-3,-1,-2,9,2,6,6,-6,10,-9,-8]],[[10,7,8,6,-3,-8,3,-9,-2,4,2,-5,2,2,-6],[6,-2,-3,-6,6,1,-4,-6,7,-3,5,-10,4,6,3],[-8,-1,-4,1,-5,-7,-4,1,5,-9,-8,4,7,-9,-5],[8,-3,-6,-3,-5,7,-5,5,3,5,-8,6,-2,-1,-7],[-5,-2,2,-3,6,-3,10,-1,5,6,-6,4,8,5,9],[8,7,-2,9,-5,-3,-5,8,9,2,3,10,9,5,7],[-8,-8,6,-5,5,-9,8,-3,-2,10,-10,1,2,7,-6],[1,-1,10,-1,2,6,-6,5,-9,-2,8,-3,1,1,-3],[2,2,7,9,-6,3,2,6,-9,-2,-5,-2,-3,2,-10],[-10,2,-6,-1,-6,7,1,-1,7,-4,-10,3,-7,-6,10],[-5,10,10,6,-4,2,-4,-3,2,2,10,6,5,-10,2],[10,-10,-7,-10,-4,7,-6,-1,-5,-10,2,2,-5,-1,9],[7,-3,2,9,-4,4,1,4,10,6,8,-2,-5,-9,-4],[-10,-10,9,-4,1,1,3,9,3,-9,-1,-8,7,-10,2],[5,-4,-6,6,-1,-9,-4,4,2,-5,8,-7,-9,-4,1],[2,7,-2,8,4,-4,-10,7,-6,-1,7,-6,-10,1,1]],[[-9,9,-8,-8,10,8,4,4,3,-10,10,-6,4,-9,-9],[6,-5,5,-7,-2,4,10,-7,1,6,-4,3,-3,7,9],[-6,5,1,5,-2,6,6,-6,-4,-2,-2,-9,8,9,7],[1,-6,-5,6,-6,8,6,2,8,1,-6,-8,-8,-8,10],[-9,-9,1,2,5,-8,4,8,6,-1,5,1,-2,-10,6],[-8,-2,9,-2,-3,-1,-9,-2,10,-2,-4,8,-2,4,3],[-1,6,9,-9,6,-7,2,5,-4,2,6,6,-3,6,-10],[9,1,7,9,-10,-9,-6,-6,4,6,9,6,-5,4,6],[2,5,9,3,1,6,2,-2,-3,-10,4,2,-5,-9,-10],[-2,10,-4,-1,-8,-2,-4,-6,-5,-3,-9,-6,-7,8,1],[10,-8,3,9,1,-10,-10,7,9,7,9,-8,-5,-8,-2],[-10,-4,-3,2,-5,-7,-6,-9,5,5,1,7,10,6,-8],[-9,-1,7,-2,-5,-2,3,-9,8,-2,7,-8,-3,-8,-6],[-9,5,10,5,-10,10,-1,7,5,6,-10,-1,9,9,-4],[6,-2,5,-2,3,-1,4,-7,-5,-8,-10,-6,-1,4,2],[6,3,-8,9,1,2,6,5,8,-6,1,-5,8,1,5]],[[-1,-1,9,3,1,-4,5,10,-3,-1,3,8,10,5,7],[-5,2,-3,9,-1,-9,3,6,5,10,-10,-8,4,-4,9],[2,10,-4,-7,8,-1,-4,2,-8,9,2,4,8,10,-10],[3,-7,-7,5,-3,-3,-9,-1,-7,7,8,5,-1,-3,-7],[2,-6,-3,9,7,1,6,-7,9,5,-9,-5,-6,-1,9],[-1,-6,-1,10,-6,-2,6,-7,5,8,3,-3,-4,-7,8],[-1,-9,8,7,-8,4,2,-7,5,-6,-2,-10,9,3,-9],[4,-2,8,-10,7,-1,-7,-2,-3,-8,10,10,-4,6,-7],[-2,4,3,-5,6,-1,4,-10,-6,-5,-4,4,-7,-6,-10],[7,-5,6,-10,1,5,-4,1,5,-9,-2,7,10,6,6],[-9,8,3,-10,-6,-2,-4,-10,-10,-4,7,-3,-4,8,-9],[8,9,-9,-1,-7,1,-10,6,2,8,7,2,2,5,9],[-6,1,4,-8,-3,4,6,1,-5,-8,-8,10,6,-7,-2],[4,-3,3,-7,2,8,5,1,6,8,-1,-10,6,1,-7],[-2,-10,8,-4,-6,6,-4,8,5,-1,9,-9,3,6,-9],[-6,6,7,1,10,10,1,-6,-9,-4,-6,-2,-3,10,-8]],[[2,1,-2,-1,-2,10,8,-5,-10,-7,-7,-9,-8,4,2],[7,8,2,-8,4,-6,1,-4,8,3,8,8,10,8,4],[-8,3,-10,-7,-10,8,5,-9,8,-5,-5,-10,8,1,-4],[9,-5,-9,9,-3,8,4,1,-4,-3,9,-2,10,-8,10],[-5,3,1,-7,7,7,1,1,-5,2,-6,5,-9,9,-8],[-9,-6,-7,6,7,-3,-3,8,-10,-8,2,-3,-3,-3,-10],[-9,-8,-5,2,-6,-7,3,-5,3,-5,-8,-7,1,-3,-2],[7,-4,-6,9,-2,-7,6,-10,-3,6,8,-3,5,6,-2],[3,-8,6,7,2,-8,10,-2,-5,-7,-5,7,9,3,9],[4,7,-8,5,-6,-7,-9,10,-9,-8,-8,-1,-10,6,-8],[1,7,-1,10,-2,-7,3,-6,-7,8,3,-10,-8,7,-6],[-10,-4,-8,2,4,-4,-3,-7,10,5,-3,3,-5,4,6],[8,8,1,-10,3,8,-5,6,9,-7,-3,5,2,6,3],[-7,-8,-4,2,-3,-7,2,-2,-3,-4,5,1,-3,9,2],[-3,-4,3,-1,1,-9,7,-10,2,1,-4,-5,-6,1,-10],[-1,9,4,-3,-8,-9,5,-10,6,-6,10,-1,6,-5,-7]],[[7,8,3,-9,-6,-5,6,2,2,-8,5,10,-4,5,3],[-4,2,-10,5,5,8,8,-7,8,10,-10,7,-1,6,10],[-10,4,8,8,3,5,-1,-3,-5,2,10,-8,-1,8,7],[-9,-4,-10,4,8,-9,-9,9,-3,-5,-10,4,-10,9,2],[-7,2,1,8,7,-3,10,-9,3,3,-6,3,-1,6,-2],[-5,-9,-2,8,-8,-5,-5,4,-6,-7,-5,2,-4,-2,4],[-9,4,-5,-10,4,1,-10,4,10,1,9,-10,-7,-5,-5],[4,7,3,4,-6,-3,8,3,9,4,-1,-9,5,7,6],[6,-5,-8,4,4,-2,8,2,6,5,3,-4,-10,8,-8],[9,-4,6,3,-8,1,-3,10,2,-7,7,-4,-4,-9,-2],[-7,-10,5,7,-9,4,2,10,-3,9,9,3,6,-10,10],[-1,-2,1,8,-5,2,-8,-7,10,1,3,5,3,-3,-6],[4,-3,-8,-4,-2,-5,8,-1,-2,-6,-10,2,3,7,-8],[-1,10,-9,-8,-7,9,7,7,-2,-10,-3,7,8,-1,-8],[-7,1,10,-6,-2,9,6,1,-3,-4,1,-3,-5,8,5],[-6,4,-10,7,3,8,3,9,7,6,6,1,6,2,1]],[[-10,10,2,8,-5,-3,6,-6,9,-6,-5,2,4,1,2],[1,-6,-7,2,-10,-8,-9,8,-9,9,1,10,1,9,-9],[-1,-4,3,7,-9,-10,1,-3,-5,5,-8,9,8,-3,1],[10,2,8,7,9,-2,5,10,-2,8,10,-4,7,8,-10],[10,2,-8,-9,6,1,9,-3,3,6,3,-9,-5,-10,6],[4,10,10,-6,2,-7,2,-10,6,2,-5,8,-3,-10,-7],[-3,-2,7,-10,1,7,-9,-5,-5,4,-3,-4,5,-5,10],[-1,5,7,-9,6,-1,9,3,-10,-5,8,3,10,-1,3],[8,-6,1,-6,-10,-10,7,-10,-3,1,-5,5,-2,4,-1],[5,-2,4,-2,-4,7,3,3,-6,-4,-2,7,6,4,3],[8,-7,-6,-6,5,1,3,-8,7,-1,-5,1,2,-3,9],[4,-1,8,5,-6,-3,4,10,10,-10,-10,6,6,9,4],[3,-5,-2,4,8,-10,6,5,-8,5,8,2,9,1,9],[-5,-5,9,-5,5,-2,2,-10,5,-6,5,-8,-7,7,2],[-5,-8,-9,-8,-9,-8,9,-10,1,-7,6,10,-1,8,6],[5,10,2,2,4,4,-2,-3,1,8,10,2,-9,-8,-2]],[[-8,8,2,-7,-1,-6,4,7,2,9,6,5,9,2,2],[6,2,-10,-5,7,-10,10,-2,-1,-4,4,2,-9,-5,2],[6,-7,-3,1,4,3,-2,9,-1,8,-5,-7,-4,-9,9],[6,9,-4,-2,10,4,1,-6,1,5,3,6,6,-8,10],[-6,3,-4,8,3,-2,-1,4,-7,7,8,1,-1,3,4],[9,2,7,-10,-1,-5,1,-8,-3,1,9,9,-3,-9,-2],[-2,2,6,1,4,-10,-7,-5,5,1,8,-5,-10,-9,-7],[-1,-5,-4,-2,-8,8,-7,6,-9,-2,7,10,8,2,-8],[-10,7,-2,6,-7,10,2,-8,1,-1,8,2,-2,8,10],[3,5,-7,3,10,-10,3,10,-2,9,-4,3,-4,8,1],[8,-10,-3,9,-2,6,-9,-6,10,-10,3,-7,1,3,3],[-7,-7,-3,6,8,3,2,3,-1,-9,-4,-8,-9,10,8],[6,-4,2,5,3,6,7,8,-9,3,-3,-10,-5,7,3],[-1,-1,-3,-4,3,-2,-3,-10,-7,9,4,-6,-10,3,8],[-5,6,4,2,-8,5,-5,-6,-7,-3,2,8,-2,-9,-10],[-5,-6,4,10,9,-3,7,3,5,8,-10,-5,-10,-9,-6]]], dtype = "int64")#candidate|4461|(16, 16, 15)|const|int64
var_4462 = relay.var("var_4462", dtype = "int64", shape = (16, 16, 15))#candidate|4462|(16, 16, 15)|var|int64
bop_4463 = relay.not_equal(const_4461.astype('bool'), relay.reshape(var_4462.astype('bool'), relay.shape_of(const_4461))) # shape=(16, 16, 15)
bop_4467 = relay.less(bop_4463.astype('bool'), relay.reshape(const_4461.astype('bool'), relay.shape_of(bop_4463))) # shape=(16, 16, 15)
output = relay.Tuple([bop_4467,])
output2 = relay.Tuple([bop_4467,])
func_4483 = relay.Function([var_4462,], output)
mod['func_4483'] = func_4483
mod = relay.transform.InferType()(mod)
mutated_mod['func_4483'] = func_4483
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4484 = relay.var("var_4484", dtype = "int64", shape = (16, 16, 15))#candidate|4484|(16, 16, 15)|var|int64
func_4483_call = mutated_mod.get_global_var('func_4483')
call_4485 = func_4483_call(var_4484)
output = call_4485
func_4486 = relay.Function([var_4484], output)
mutated_mod['func_4486'] = func_4486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4259_call = mod.get_global_var('func_4259')
func_4261_call = mutated_mod.get_global_var('func_4261')
call_4491 = func_4259_call()
call_4492 = func_4259_call()
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_4493 = relay.TupleGetItem(func_2758_call(), 0)
call_4494 = relay.TupleGetItem(func_2759_call(), 0)
func_493_call = mod.get_global_var('func_493')
func_496_call = mutated_mod.get_global_var('func_496')
const_4499 = relay.const([-7.201757,-1.480979,-9.508474,2.800417,3.413962,-4.843947,1.175298,7.844791,5.383551,-2.860987,-9.026976,-1.611400,-2.759508,-8.689825,-2.566876,-1.071021,-2.341623,1.142262,-5.278472,-2.900428,9.795607,3.903668,4.280818,-4.510761,-3.297731,2.092340,-6.510540,3.295009,0.004627,-5.237916,5.005073,3.514866,-9.164917,1.662056,2.540519,-4.938103,-2.253021,1.748635,1.035486,-3.706758,-7.447819,-8.121465,4.408906,3.213748,8.164409,-7.289043,4.791037,6.133827,4.440708,-2.654276,-6.561577,6.686710,2.708694,7.133154,-7.103734,-6.628953,1.990259,-4.355422,-6.245869,0.251541,0.362583,-6.946413,7.526912,-9.538797,-0.361409,2.529576,-4.054680,9.671588,1.739469,-3.128746,-5.371306,6.087330,4.137006,-4.428129,7.619387,-3.700744,-5.395840,0.456342,-2.994501,-0.332249,4.088182,5.668915,-4.082024,4.692446,2.075656,-4.633584,-1.260397,8.783243,4.115109,0.154745,-6.132228,9.979730,-9.222856,-3.913065,6.684571,-7.870835,7.996863,-6.772692,-6.167537,1.982389,8.261181,-6.478303,3.719756,0.195943,4.068645,-8.605513,-8.249832,-4.741260,-0.927710,2.208616,9.882120,-5.453777,-7.144871,5.248621,-4.558401,-2.795082,-8.697458,8.972951,0.580991,-9.587197,9.195569,-4.140002,-6.927918,0.989695,2.959934,-0.104032,-6.644374,7.678392,8.764725,0.704368,-4.333178,6.376200,-7.976567,-9.260010,-5.843057,4.262069,5.838174,2.621886,-3.938371,2.720926,-2.093687,0.510063,-0.577082,7.486871,9.195907,-1.424028,-8.647550,-3.689676,-7.955985,-8.607450,5.028538,1.678784,6.399544,-3.598880,7.714347,-6.399159,-3.895342,-8.308662,-9.153941,-4.237996,-0.595797,2.247650,8.533846,-6.284231,1.822712,-5.732211,-5.739974,3.513804,-1.650513,4.964375,6.755769,2.092596,4.882013,7.213959,5.935416,2.816303,-3.384521,6.759307,-6.536268,5.076553,-3.642697,-1.332653,8.363890,5.551178,-1.936871,5.996286,-0.066484,1.164172,-9.911726,3.586846,-2.191108,-1.349371,-0.737734,-5.081693,1.284305,-5.380269,8.141567,-2.370023,-8.787213,9.194935,-4.857929,3.261072,9.134016,2.624349,2.782649,-7.891588,4.338366,-4.126688,-3.984453,0.526796,-7.261103,5.943797,-6.544931,0.443977,7.367047,4.200874,6.399039,-2.473520,6.317934,4.786163,2.392245,9.286772,-3.001021,-3.381139,-1.901193,-6.038933,2.809620,2.775575,8.366680,-4.122727,0.974588,-3.642284,-0.407326,1.113941,-3.332217,-5.625739,-8.577315,6.400387,2.621539,0.810554,6.358009,1.117671,-8.966258,-2.897510,7.055965,-2.921647,4.767094,2.580365,-5.476394,0.267739,7.959838,-4.047163,1.600185,-7.151715,4.395809,4.391773,7.223257,9.893499,5.016139,3.831930,-0.033648,9.866555,0.171114,-7.883940,2.418921,-6.031248,5.164791,0.768564,-3.240403,-2.868019,3.434104,-7.152495,-9.555700,-7.302650,-1.776157,-6.583872,-6.990542,-6.686076,-3.525129,7.576772,-2.657176,8.738358,-3.752261,8.237972,-3.805567,-1.460973,3.604521,1.688481,-0.495018,4.539297,0.524551,5.379977,0.944733,0.886564,-6.294725,4.372140,9.657039,9.563780,0.250376,-2.812470,-6.581349,-4.742792,-9.897570,4.754199,8.514570,3.592326,-7.964490,-3.149110,-3.620633,7.304951,-8.398605,5.977443,0.585276,1.930231,7.055990], dtype = "float64")#candidate|4499|(315,)|const|float64
const_4500 = relay.const([[7.792098,5.977229,2.224337,8.562960,-0.487053,9.163051,-7.535781,6.423756,-8.268047,-8.337244,1.677104,-4.009892],[0.963741,-1.867340,7.697944,-2.741536,-6.255335,-6.064831,-2.631012,9.022853,8.271287,5.203371,-8.362757,4.053315],[-8.368900,-0.042595,2.548468,-6.718699,-4.302149,7.727555,3.698286,-8.774595,0.712469,8.522498,3.985961,-3.059692],[-2.907125,-5.862544,5.401552,6.284205,9.117855,7.519660,-3.087866,9.703307,6.337027,9.994683,0.395519,-0.280057]], dtype = "float64")#candidate|4500|(4, 12)|const|float64
call_4498 = relay.TupleGetItem(func_493_call(relay.reshape(const_4499.astype('float64'), [3, 7, 15]), relay.reshape(const_4500.astype('float64'), [48,]), ), 2)
call_4501 = relay.TupleGetItem(func_496_call(relay.reshape(const_4499.astype('float64'), [3, 7, 15]), relay.reshape(const_4500.astype('float64'), [48,]), ), 2)
var_4528 = relay.var("var_4528", dtype = "float64", shape = (315,))#candidate|4528|(315,)|var|float64
bop_4529 = relay.less_equal(const_4499.astype('bool'), relay.reshape(var_4528.astype('bool'), relay.shape_of(const_4499))) # shape=(315,)
output = relay.Tuple([call_4491,call_4493,call_4498,const_4500,bop_4529,])
output2 = relay.Tuple([call_4492,call_4494,call_4501,const_4500,bop_4529,])
func_4533 = relay.Function([var_4528,], output)
mod['func_4533'] = func_4533
mod = relay.transform.InferType()(mod)
var_4534 = relay.var("var_4534", dtype = "float64", shape = (315,))#candidate|4534|(315,)|var|float64
output = func_4533(var_4534)
func_4535 = relay.Function([var_4534], output)
mutated_mod['func_4535'] = func_4535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_4554 = relay.TupleGetItem(func_4111_call(), 0)
call_4555 = relay.TupleGetItem(func_4113_call(), 0)
func_3045_call = mod.get_global_var('func_3045')
func_3050_call = mutated_mod.get_global_var('func_3050')
const_4565 = relay.const([0.742148,-6.840711,-3.974551,-2.787365,-3.871677,8.101124,-6.691564,-8.078964,-3.098285,-0.662393,3.846967,-6.674182,0.084856,0.003335,6.927946,-4.943982,-8.687576,-4.947281,-2.157221,-9.784612,7.046513,-1.855827,8.336805,9.857399,-6.277348,-4.254961,-4.301513,-9.317521,-8.414087,-5.832731,-5.243602,-9.847598,0.205880,-8.994640,3.099951,1.870456,-9.681148,9.366693,-5.575295,1.675705,-7.716271,-4.056593,1.057230,-3.952278,-0.684349,9.554261,5.791918,4.652515], dtype = "float64")#candidate|4565|(48,)|const|float64
const_4566 = relay.const([[9.616292,5.228241,5.418304,-2.952960,2.119153,-5.578591,6.862135],[-2.831688,5.413347,0.600731,5.006301,-6.660418,2.495266,-2.097826],[3.954093,6.946538,4.995766,6.767974,-2.574755,-9.053583,-1.809530],[8.257586,-6.054044,7.251882,-2.044107,-5.555612,1.627381,9.178497],[-2.630756,2.837099,0.039727,5.141059,3.258129,7.174653,-0.025428],[5.150441,-5.793305,-5.437311,-3.231043,-2.651274,-0.485651,1.689587],[8.559354,8.274515,-9.927738,3.653068,1.742158,5.312076,1.324445],[5.382070,-1.743940,-6.731862,4.185148,7.938862,-7.871556,2.162025],[-6.324073,3.929076,4.081043,-7.325371,2.112166,9.845443,-8.769625],[7.197780,4.489779,2.216018,-1.403268,-2.642014,-1.331329,4.851158],[0.071679,-3.908259,5.765666,9.141685,-9.078121,7.085933,-8.273559],[-8.719493,3.282262,-8.146527,-5.385296,-0.954530,-4.305305,8.272853],[-8.002547,1.008848,2.033857,2.376587,9.473971,9.045596,-6.158472],[7.494561,4.356133,5.380295,-3.717619,2.257700,6.555277,9.175784],[-2.965346,9.383846,5.101349,-6.569475,-0.979892,-1.420209,-4.016939],[4.975599,-8.502157,3.024434,-5.076899,-4.544252,7.696480,-6.143004],[2.703439,-0.150300,-6.761826,-9.903336,-0.766151,-9.020579,-4.796956],[0.275217,-2.136902,-7.409668,1.650461,-1.209842,-4.488478,-5.270359],[-4.938703,6.155583,-3.577473,0.053202,2.771747,3.462893,-3.760772],[-8.548974,-8.850487,0.472603,-4.633315,6.298829,-2.511503,9.080387],[-5.457544,-3.003981,-7.034562,-4.742151,2.726064,5.425339,2.828859],[-0.321148,-8.667328,-7.219926,-2.584632,1.846088,7.468633,5.678107],[-6.498062,8.616217,-1.517190,8.063168,4.226839,-0.880220,5.511674],[0.030496,-1.959284,-5.746872,-5.161080,2.774645,3.776143,9.186846],[7.094293,-9.184975,4.302275,-1.134678,0.468572,0.804674,7.161675],[3.110799,7.726733,7.600601,-4.025456,8.302393,-2.337284,-7.097659]], dtype = "float64")#candidate|4566|(26, 7)|const|float64
call_4564 = relay.TupleGetItem(func_3045_call(relay.reshape(call_4554.astype('bool'), [10, 13, 4]), relay.reshape(const_4565.astype('float64'), [4, 12]), relay.reshape(const_4566.astype('float64'), [182,]), ), 5)
call_4567 = relay.TupleGetItem(func_3050_call(relay.reshape(call_4554.astype('bool'), [10, 13, 4]), relay.reshape(const_4565.astype('float64'), [4, 12]), relay.reshape(const_4566.astype('float64'), [182,]), ), 5)
func_3517_call = mod.get_global_var('func_3517')
func_3520_call = mutated_mod.get_global_var('func_3520')
const_4600 = relay.const([[6,3,4,5,6,3,-1,-8,1,-4,3,3,9,-10,5,-10,-5,2,-1,-5,3,7,-4,6,-4,4,8,3,-9,10,-6,-4,3,4,4,-3,9,3,-6,-9,-9,8,-8,-7,-5,-10,7,-5,1,6,-1,4,-10,-3,6,-7,-3,-4,-7,10,8,-4,-8,-7,2,-4,-6,-3,5,-1,6,-6,2,-1,-1,-2,5,-5,-6,-1,10,1,4,-10,-10,8,10,4,-1,10,10,-10,7,7,10,4,-1,-3,9,-4,8,-4,7,10,-6,2,4,10,-9,-7,-5,8,7,3,-7,-6,10,-3,9,4,6,1,8,-3,2,-6,2,5,7,7,6,1,3,-4,9,-10,-6,7,4,-2,10,3,4,-1,-5,-7,4,-10,3,-1,-4,7,4,5,-2,6,9,-3,-7,-5,7,-7,1,-9,-1,-5,3,-6,-8,7,-2,-3,2,3,4,-4,-2,-3,-8,5,5,8,-6,7,7,-5,6,-9,5,8,4,10,4,-6,6,-4,5,-8,-8,2,-8,-6,4,3,-1,-9,-2,8,-4,10,8,-10,-8,4,7,3,3,-10,-7,8,-3,-1,-10,2,-5,-4,8,8,6,4,-7,9,-8,-9,-1,3,8,10,6,9,-6,-6,1,-10,3,-8,-3,-10,-5,8,-10,9,-6,3,1,-3,9,1,1,-4,-9,5,-9,-5,-6,2,3,-3,10,-2,9,10,-5,7,4,10,-4,-5,4,1,2,-7,5,-7,5,8,3,4,-10,-3,10,10,-2,1,7,-5,5,8,-3,5,-4,-4,2,6,6,-10,5,-4,-7,3,7,6,4,-10,-1,-5,-9,-2,4,6,-7,10,-8,-1,9,10,-5,-8,2,-4,-4,-8,5,-7,-5,-10,-9,4,-5,2,-10,10,3,-2,7,-10,4,-5,5,1,4,2,-2,-1,-3,10,9,7,-7,7,-7,-6,-4,-2,-4,-8,-4,2,-9,4,-7,-5,4,8,-3,5,3,-2,2,-3,7,-5,-4,-1,-1,6,7,4,-3,3,9,-5,9,7,-1,10,-4,3,1,2,6,9,7,-7,8,-6,9,-7,-1,10,5,-10,-4,-8,6,6,-5,-9,10,5,-7,-5,6,-5,-6,-7,-6,3,-1,-6,8,2,8,-8,-9,-6,-5,5,5,-6,-6,4,-1,3,-8,10,-10,1,-4,-6,-3,-9,5,2,3,-1,-3,2,-3,-8,3,-9,2,9,-3,9,9,-6,4,-2,-8,-8,9,-4,5,5,2,1,8,-10,-6,8,-10,10,2,3,-5,10,-10,-8,8,5,1,-4,9,-9,6,2,2,10,-4,-6,3,-6,-2,-10,-2,-10,4,-2,-9,-1,8,1,-5,-6,3,1,9,10,4,2,6,8,6,-2,1,-10,-7,1,-3,5,2,-3,-5,-2,1,-6,-8,7,-6,-8,4,-10,-10,-7,9,-8,-9,-1,2,-7,9,-9,10,2,-7,-7,-8,-4,-7,1,10,-6,-8,5,-2,2,6,10,-9,3,3,-9,-6,-1,-1,-6,2,1,-1,-10,9,-4,-5,-2,-7,2,-7,-2,1,4,6,4,6,-7,-2,-7,1,7,-8,-2,-7,6,7,-7,-3,-2,-4,8,10,4,4,-4,-5,-3,-3,7,-1,-4,-2,9,-5,-4,-5,-9,-10,6,6,-1,2,-5,10,5,-6,-2,-1,4,9,-6,-2,9,10,8,-7,9,4,4,-8,7,-7,2,9,-5,6,5,8,2,9,-6,-2,6,10,1,-7,2,9,-4,-8,9,4,-3,-7,-2,6,3,-4,-3,-10,-2,3,3,-8,10,-7,1,4,4,9,-8,-4,3,1,-4,-8,-10,-2,3,-1,5,4,1,-10,-9,-1,-3,7,4,-10,1,-5,-9,5,7,6,7,-10,8,-3,8,-4,-10,-5,-1,1,2,-6,-4,-4,-8,-3,-2,1,-2,9,-10,-8,-3,5,7,9,-1,-2,-5,-6,-1,-8,-3,-7,5,4,8,-6,-5,9,6,-3,1,3,-6,-9,-1,9,5,-8,1,-8,4,-2,-6,2,8,-10,-3,-5,6,-5,10,-9,-10,-7,-1,-2,2,7,-6,1,-6,-3,6,7,1,-6,-6,7,-6,-8,1,3,5,-1,-8,-5,3,-5,-5,10,-6,6,-5,-9,9,-9,7,-6,-1,3,9,-8,-5,3,7,5,-4,-7,-6,-2,-4,-7,-5,5,-2,-9,-8,5,-10,-3,-6,10,1,-10,4,4,-5,10,6,7,-4,10,3,-5,-8,10,7,3,-7,-5,-7,8,-1,-3,4,6,-6,9,-6,2,3,7,4,-7,4,-2,10,4,-8,10,-9,-9,-5,-6,-5,4,-2,9,2,7,-8,9,-10,-1,2,-10,10,-9,10,-5,-6,4,-9,-4,-10,6,-1,-8,-10,9,2,4,-1,-8,-10,7,-3,6,5,-2,-2,-3,-5,-3,-3,6,2,-9,5,-5,10,3,-2,-5,8,3,8,-2,-8,10,7,-9,8,-1,5,9,7,-7,8,7,-1,-5,-8,-4,2,-10,-9,-8,-6,9,-7,5,8,-5,5,-4,4,-5,-8,9,-2,9,-7,-8,9,4,-6,2,-4,2,-10,-6,-6],[9,4,6,-8,-7,3,9,5,-8,4,-8,-8,8,9,-4,-8,10,2,8,-10,-4,2,-5,-7,-9,4,9,-10,-1,4,-3,-8,-4,9,-8,-9,-2,-6,-10,-3,-5,-8,10,-3,6,-6,-8,4,-3,-6,-1,-5,-5,-1,5,-4,2,7,2,3,-5,-9,-3,7,-7,9,7,3,7,7,-8,4,-4,4,-1,6,-5,-1,7,6,-2,-1,1,10,-8,3,7,7,-8,-9,-9,-7,7,5,-7,-9,-6,-7,-4,8,-4,-9,-8,-2,9,-7,4,5,1,9,-10,8,-9,-4,4,7,3,-6,-4,9,-2,6,-10,9,-10,1,7,8,6,10,-6,-5,5,-1,-4,4,9,-1,-10,2,1,2,5,-5,-3,-1,4,-9,-9,-9,1,8,5,10,-2,-7,-8,-2,-8,5,5,-2,4,-9,-2,-6,4,-4,3,-6,6,9,-4,-8,9,-6,1,-3,-9,-8,3,-5,-7,-7,1,-7,-7,-1,-7,-3,-2,1,7,8,10,-7,9,-9,-1,9,10,-8,-2,9,-8,8,-3,5,4,-8,-7,-7,-6,-5,3,-8,-1,1,7,-5,-6,5,1,-1,-3,-1,-3,9,5,8,-9,2,-5,3,4,-7,10,-10,-3,-6,-8,-9,5,2,-3,7,-7,1,-1,5,2,-6,5,-3,-8,7,8,-9,-5,3,1,1,9,1,-8,-5,-10,5,10,-6,-9,-4,-2,-1,2,-4,-4,-3,8,-4,10,-7,2,-6,1,1,-6,8,6,4,5,-2,-4,3,9,-8,-7,-7,-6,3,6,7,9,-1,-7,4,4,1,3,2,1,10,7,-9,2,-2,6,-10,7,9,-6,-3,10,-10,10,-6,-4,-9,4,3,1,-4,-7,1,6,5,4,-2,-6,9,6,6,-2,10,4,1,1,4,10,1,7,9,5,-10,-6,4,-6,4,5,3,-1,5,-10,9,6,7,7,-7,-7,-3,5,7,-10,-9,-4,6,-7,-7,-2,8,-8,1,2,8,-4,4,-8,1,1,5,-2,-1,4,5,-6,-1,-1,10,10,-5,-8,-4,-2,-6,-6,-10,-2,7,-1,-9,9,-3,-4,-4,-10,-1,-1,-5,-1,-8,2,5,-1,7,7,10,7,6,6,-6,-2,5,1,6,2,8,4,-5,8,-6,7,-10,-9,6,10,-2,-10,-6,8,4,8,4,-5,-8,1,9,1,-4,8,6,3,-10,6,5,-8,5,-1,9,-10,-9,10,-10,-9,-1,-4,5,-4,2,1,-7,-6,-6,-3,-3,1,-3,9,-1,-8,5,9,1,7,7,-1,-6,9,4,-6,-5,8,-7,1,-5,-10,3,2,-5,9,8,6,-9,-5,-7,7,-5,1,-3,-2,3,1,-1,2,-6,10,1,6,-3,2,-2,-3,5,1,-8,6,-4,9,-4,3,-10,-1,-1,2,8,3,4,-8,-1,8,-3,1,3,-5,1,-4,3,3,-4,7,10,3,5,4,2,5,6,3,8,-6,-7,9,8,3,6,4,-9,1,-10,-10,-6,-8,-3,-2,10,-9,10,5,1,-2,8,-2,-2,-1,-7,-5,-7,3,-5,-2,-7,-9,10,-7,-4,5,-4,6,-1,10,-7,-9,9,4,-1,8,7,4,-3,-6,1,-8,-2,3,-3,-1,10,-5,-6,-5,-5,-6,2,2,3,2,-1,9,9,9,6,2,-4,7,6,-8,4,-5,-3,2,5,8,-6,-3,10,7,-4,4,-6,7,-2,4,8,-2,6,-7,-10,1,3,-3,6,8,8,7,2,7,10,10,3,-10,-8,2,-3,3,6,8,-5,1,10,-7,-3,-6,6,-2,-10,7,-1,-3,3,2,-4,-1,-9,-4,2,1,8,8,-5,-4,-5,10,-2,-2,-3,-2,5,9,6,4,9,-3,5,2,4,-3,-6,6,-8,-3,-3,9,10,5,-3,4,-6,-8,10,1,5,4,-8,1,1,8,-1,-3,7,7,-8,-10,7,5,6,-3,9,4,10,-3,1,4,-10,-3,4,5,-10,-6,2,6,7,-1,-7,-4,-4,7,-10,-9,9,-7,3,-4,-8,-4,4,-8,-9,7,-6,4,-10,7,-3,10,10,4,-1,8,1,-10,2,-5,-9,-9,-3,-6,4,-3,-2,9,-2,7,5,3,-7,-10,2,-2,-10,-7,3,-8,-9,-4,-5,2,7,-3,7,8,-10,5,-6,3,7,8,3,7,-8,2,-7,1,6,-8,-9,-8,-7,-8,-1,10,1,10,-6,4,1,7,10,3,1,8,-8,-8,-9,-1,-9,10,10,2,8,-10,-1,6,5,7,9,-6,4,-3,2,3,4,1,-3,2,8,10,-8,-3,4,-1,-7,-1,4,-4,-7,-8,-2,6,2,1,-9,3,7,-4,-8,-5,3,8,9,4,10,-8,-2,2,-2,8,-3,-1,-7,-1,-10,-9,-10,10,8,-7,7,3,-2,5,-7,7,4,-8,3,-3,4,9,7,-5,-5,-3,10,4,-10,-5,-4,5,-10,-6,-2,9,-10,-4,-8,-4,-3,-7,-3,-2,10,10,-10,1,-7,7,7,-9,-2,6,2,-5,6,-8,1,-2,9,-6,-6,-1,3],[6,1,6,6,5,1,5,-2,-8,4,5,-3,-2,-7,6,8,9,-7,7,9,3,2,9,10,-6,-1,-8,3,5,-1,-1,3,2,-6,-5,-1,-7,6,-6,5,-1,-4,-1,8,-8,-9,10,8,3,-1,1,7,-4,5,-1,1,-9,2,-3,-7,9,-9,-7,-3,4,-7,5,-4,8,8,-2,-1,7,10,-4,-10,-3,4,-9,-8,-2,-8,2,-7,-1,-8,-5,5,-4,9,-4,-1,-1,4,-3,-10,1,3,10,-4,2,-6,-10,-8,-6,2,-9,4,7,7,-4,4,-5,-1,-6,7,-6,6,4,2,-2,-9,-7,-8,-4,-6,-2,-6,-9,3,1,-5,5,-2,-5,10,-9,6,-1,-10,-9,-5,-7,7,7,1,-2,-4,-8,-7,-3,10,-3,7,1,10,6,-1,6,10,2,1,10,10,-4,-10,-1,10,-7,9,-8,9,6,-8,-10,6,-2,3,-4,9,-1,6,1,7,3,-7,-8,-5,-6,7,-1,-5,9,4,-4,-1,4,-8,-1,5,4,-7,10,-7,4,2,4,-8,-7,6,5,-8,-3,4,-5,10,-2,-2,-8,7,-2,5,8,10,-6,-9,-2,-10,5,-10,4,10,6,8,-10,6,-4,7,-6,9,3,-5,-7,9,10,2,9,9,3,-3,-2,4,-2,10,-10,-4,-7,8,-3,-5,8,6,-1,-5,2,-9,9,-2,6,2,1,1,-4,-1,7,9,-5,-3,2,3,7,8,-5,8,-10,-9,4,-8,-8,5,-7,1,1,-10,-3,7,-5,8,3,1,-6,-6,-2,-9,7,8,-10,8,4,-6,-1,10,8,-5,-4,6,-7,-10,-1,9,-5,-4,7,-8,-7,7,7,-3,-5,-8,5,9,-10,-2,8,-1,-10,9,4,-6,4,-1,3,8,2,-9,1,8,-6,2,-2,8,5,-9,7,-2,-1,3,-6,-3,8,5,9,1,-6,1,6,-1,-7,2,6,-6,-8,2,-4,4,7,1,7,-3,-3,-2,-6,-1,-1,-8,6,5,-4,10,2,-8,-3,6,1,2,8,4,-7,6,8,7,7,-10,7,-9,-3,-9,-7,6,-6,3,-4,-5,-2,1,4,-5,-9,2,-4,6,-7,4,10,2,-10,-10,-2,5,8,5,3,-5,-7,-10,-9,8,9,-9,-4,7,-8,10,3,-5,3,-5,1,1,-8,-9,-5,-2,-9,-5,4,8,-10,3,6,-6,-9,7,4,6,-7,8,1,8,3,-4,-7,10,-1,-1,-2,-7,-10,8,2,-6,10,3,-4,-1,6,5,-8,-9,9,-9,6,1,-10,-10,5,-3,9,-6,9,-3,3,-6,-4,-3,6,-3,5,10,3,10,-7,-4,-1,1,-8,-4,-2,-5,7,1,-7,6,8,-1,-8,-10,-6,-1,-5,-10,7,-7,6,7,-9,7,-3,-1,-2,2,5,-3,6,-1,-6,-7,5,-4,-7,4,-9,3,-5,3,-9,7,6,-7,4,5,-9,3,-8,2,-9,-1,-7,-2,-1,2,-9,7,7,-10,-2,-2,-9,4,3,-1,2,3,-8,-4,10,-2,2,-4,3,-3,1,7,-10,7,9,-8,-2,2,7,-1,-3,4,10,8,2,-8,5,-2,8,-2,9,-10,2,3,10,-4,6,-8,-8,2,8,-4,7,9,7,-4,1,9,6,1,-5,6,-5,-2,3,-2,5,-3,3,-10,3,-9,8,8,-2,-7,-3,10,1,10,5,-4,-9,-5,-9,7,10,8,5,-9,4,4,3,5,8,-8,9,-5,9,3,6,-1,7,4,3,7,-1,5,6,10,5,-9,1,3,6,9,-7,8,-8,-3,6,-8,-4,-3,-3,6,-2,-2,-1,-5,2,-6,-2,2,5,-3,-9,9,4,-6,6,4,-9,3,3,4,9,6,-4,-3,6,-1,-7,-10,10,-7,-10,-4,-9,-6,4,10,1,7,4,6,6,-7,-8,3,5,-6,-4,1,-9,8,10,-9,3,8,-5,-9,4,5,5,1,9,4,-10,-9,-3,-2,-4,-3,6,8,6,4,5,1,7,-9,-9,-2,-7,8,7,-2,3,-9,7,-2,-5,4,-4,-2,-8,9,-6,-8,9,3,-8,-8,10,-9,5,9,-6,1,-9,2,4,5,-2,2,-9,-9,2,5,5,9,5,-1,3,4,-5,-9,10,10,7,5,-9,-2,-10,-2,-2,6,-3,10,-10,-7,-3,-5,-10,-4,7,2,4,8,2,-10,3,4,4,3,10,-9,8,-5,9,7,1,-3,-5,10,2,-4,7,-2,-1,4,-5,-6,7,1,-3,5,8,-8,10,2,9,7,-1,-8,2,-6,5,1,-3,1,1,-9,-3,-3,6,-4,-1,-2,10,7,-2,-10,-6,10,-3,7,-6,-6,7,3,-7,10,-8,10,-2,1,-1,10,3,-9,10,2,-6,6,-8,-7,-6,2,-9,3,9,-5,6,-10,-5,7,6,-1,8,8,-8,10,3,-9,4,4,-7,-4,2,6,-2,3,2,4,5,5,-6,7,-7,-4,8,4,6,-2,1,-8,-1,-5,-6,3,1,-5,5,8,8,-4,-9,6,6,4,6,-2,-2,9,6,-1]], dtype = "uint64")#candidate|4600|(3, 980)|const|uint64
call_4599 = relay.TupleGetItem(func_3517_call(relay.reshape(const_4600.astype('uint64'), [15, 14, 14]), relay.reshape(call_4564.astype('float64'), [48,]), ), 8)
call_4601 = relay.TupleGetItem(func_3520_call(relay.reshape(const_4600.astype('uint64'), [15, 14, 14]), relay.reshape(call_4564.astype('float64'), [48,]), ), 8)
bop_4603 = relay.bitwise_xor(call_4554.astype('uint32'), relay.reshape(call_4599.astype('uint32'), relay.shape_of(call_4554))) # shape=(10, 13, 4)
bop_4606 = relay.bitwise_xor(call_4555.astype('uint32'), relay.reshape(call_4601.astype('uint32'), relay.shape_of(call_4555))) # shape=(10, 13, 4)
func_2807_call = mod.get_global_var('func_2807')
func_2809_call = mutated_mod.get_global_var('func_2809')
call_4608 = relay.TupleGetItem(func_2807_call(relay.reshape(bop_4603.astype('bool'), [10, 13, 4])), 0)
call_4609 = relay.TupleGetItem(func_2809_call(relay.reshape(bop_4603.astype('bool'), [10, 13, 4])), 0)
func_2529_call = mod.get_global_var('func_2529')
func_2533_call = mutated_mod.get_global_var('func_2533')
var_4611 = relay.var("var_4611", dtype = "bool", shape = (1260,))#candidate|4611|(1260,)|var|bool
call_4610 = relay.TupleGetItem(func_2529_call(relay.reshape(var_4611.astype('bool'), [15, 14, 6]), relay.reshape(var_4611.astype('bool'), [15, 14, 6]), ), 0)
call_4612 = relay.TupleGetItem(func_2533_call(relay.reshape(var_4611.astype('bool'), [15, 14, 6]), relay.reshape(var_4611.astype('bool'), [15, 14, 6]), ), 0)
output = relay.Tuple([call_4564,const_4565,const_4566,const_4600,bop_4603,call_4608,call_4610,var_4611,])
output2 = relay.Tuple([call_4567,const_4565,const_4566,const_4600,bop_4606,call_4609,call_4612,var_4611,])
func_4614 = relay.Function([var_4611,], output)
mod['func_4614'] = func_4614
mod = relay.transform.InferType()(mod)
var_4615 = relay.var("var_4615", dtype = "bool", shape = (1260,))#candidate|4615|(1260,)|var|bool
output = func_4614(var_4615)
func_4616 = relay.Function([var_4615], output)
mutated_mod['func_4616'] = func_4616
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4696 = relay.const([[[9.598229,2.739475,1.518460,-3.005731,5.194540,2.221911,-3.495111,-3.948649,-8.521237,3.809157,2.719784,-0.055490,0.655934],[6.188754,-5.100574,-4.947671,0.986249,-0.289500,3.731171,3.136471,-6.168482,6.117107,0.307790,-6.290296,-7.603967,1.326344],[1.076079,-4.255546,-1.896434,1.768645,-1.700760,1.358928,6.146176,-1.775565,-5.882162,-0.508721,5.797916,-9.479132,7.484751],[-4.556020,-3.953253,3.192004,4.702866,8.813031,8.451474,-3.465908,-7.699343,6.016474,8.758893,-9.434874,6.818056,-7.375212],[6.584216,6.088608,-4.302305,-5.590164,-2.962508,-9.523641,9.791679,4.587007,5.447101,-4.730569,5.196462,7.480150,8.415861],[4.246721,-2.445803,6.227064,-6.708681,-1.547965,-5.622589,3.890390,-5.955235,-6.699821,0.426962,3.265124,9.901401,0.023609],[5.100977,-9.748409,-2.145000,-9.231255,4.576656,-4.972940,-1.176828,-4.946285,4.696268,6.515492,-9.766498,0.279699,-6.390745],[-2.292011,-6.958006,-6.870942,-7.158552,3.194127,-9.295240,-6.916966,8.758817,0.921684,1.048830,4.662303,-0.564940,0.818513],[-9.300340,-2.753337,1.057055,6.968699,-8.984353,3.651128,-4.530171,-1.502001,-3.033504,-5.455075,7.347808,-5.651861,-7.091159],[-5.822419,-1.041352,2.244376,-6.380273,0.658153,-9.147750,-5.119381,5.640599,2.480950,-8.231108,-7.574552,-6.293868,-5.046478],[3.048484,3.685853,-2.306432,-8.982717,3.907533,-7.158799,2.029735,4.812256,-2.081377,6.941972,0.458306,5.066960,-2.718634],[6.528252,-5.988298,-4.067155,-5.168371,6.025526,9.020425,4.315685,6.354681,9.836855,-6.730723,-1.637726,-4.006288,-2.774731],[7.385742,0.336485,8.436643,-8.649656,-4.233371,3.818737,-2.984449,-2.549095,-1.877210,-3.193292,2.991007,1.088305,-0.029326],[-5.045797,7.420777,1.638693,-4.493572,-8.374103,5.978652,9.084778,6.248588,-4.992322,-2.302943,-5.360054,-6.289006,-6.457355],[-9.502168,5.015602,-5.280407,9.182398,-2.691315,-9.713924,9.763659,0.517638,0.148354,-5.338002,1.321897,5.429062,3.772153],[0.603911,-5.509737,9.521383,5.509816,-1.571514,-2.064061,7.591872,-8.472638,4.403841,-9.549261,-8.032045,-6.489721,-7.373977]],[[2.630561,6.568272,5.308301,-7.083493,-0.441758,-7.060209,9.274284,5.265159,-9.256177,-6.665418,-4.230003,-9.129130,-6.799790],[4.050674,-9.001756,6.611517,8.091312,-5.958997,0.129197,-2.575857,8.345754,8.327480,5.271243,-9.305221,9.862412,-9.636673],[6.396746,-1.486457,9.853573,-9.878221,4.058619,0.025140,-7.935740,-5.821721,7.476184,3.332591,6.555167,2.584584,-7.597682],[7.963858,-6.379609,0.026781,-4.941421,-1.930683,9.581718,1.311535,-6.558301,7.186514,2.895418,-3.961307,3.275067,9.965702],[-0.160262,7.920469,-7.633252,-8.790418,5.728661,-2.610820,2.612528,6.976533,8.427704,2.768016,-0.539635,-1.427658,-3.010135],[-5.839485,0.574766,2.840431,-0.997071,-9.813276,6.641737,6.030542,-0.586269,-5.879433,-6.293174,7.851766,8.747315,3.990751],[8.104458,0.561090,-2.353971,5.981487,5.690680,3.085534,-8.579794,-6.496716,-6.794045,-7.918183,-5.983458,-4.034817,-9.441226],[-1.953522,7.478774,6.712195,-0.041088,-4.666963,-7.097521,-3.453767,-2.418196,9.027992,0.151442,-1.401803,-4.965920,-7.933376],[-6.456248,7.272650,-5.961117,-5.942525,-8.319995,9.581660,-9.411149,8.311970,3.927405,-9.126782,-7.145524,-3.839054,1.253724],[6.613794,3.122796,-1.362007,1.262250,0.277184,-3.279099,2.076655,4.684125,2.521287,-9.489229,9.858963,-0.278798,-4.043019],[9.060477,-8.910153,7.461259,-3.555863,9.341685,-7.429870,8.362794,5.848231,9.890292,-4.614100,9.195457,-2.459305,-5.403120],[2.561257,7.622195,5.207850,2.503331,-3.024979,-9.445493,6.255769,8.473763,-6.102923,7.086340,-9.855674,-8.231051,-5.353754],[-6.884412,6.721638,-6.717259,9.819163,-3.098832,-5.589151,-5.004151,0.339896,-9.129432,8.844829,-4.297837,-8.674271,4.286484],[2.251880,7.335523,4.318938,-4.831866,-0.184177,6.224234,6.993561,5.829499,6.767590,-4.562046,-5.894831,-2.535998,-4.027076],[8.461324,-7.708368,-4.354548,-5.674406,8.121183,9.606479,-7.614347,-1.683815,-3.365907,-1.416425,-3.727951,2.427233,-7.898448],[4.264926,5.331596,5.337046,-2.663031,7.339589,8.258558,-1.464102,8.378697,5.403889,9.276537,-0.151473,0.229226,8.508103]],[[-3.727358,-7.550021,-3.317714,8.662842,7.721425,-4.719993,8.455341,-9.683653,9.075558,5.368141,1.309200,5.210612,4.260145],[-2.379425,-1.786495,-6.642774,-1.306802,0.765382,-0.087754,2.404122,6.506027,5.368693,7.529498,-2.891577,-3.046584,-0.035868],[-1.577303,-1.591468,5.306707,-0.963551,0.954118,-8.018126,3.818466,-6.472125,5.073199,6.793174,-7.064355,2.576599,1.121553],[-3.581223,8.519825,6.398548,-9.986368,6.248373,-2.950797,9.460132,-4.320745,6.656107,2.165228,3.377030,5.564505,-9.600798],[6.513791,-4.026266,2.695361,-8.036434,5.924794,-3.478078,-7.008068,0.455153,4.596364,-8.136259,-3.305879,8.844822,0.945185],[-8.530291,6.971781,-1.640754,-4.153916,9.653076,-4.305301,2.718000,6.649935,9.134424,6.802241,-8.516474,-3.012545,5.457656],[1.891341,-7.426540,4.231931,3.108362,0.629893,-9.976721,-6.104989,4.408977,9.200218,-4.534960,-9.092587,-0.043444,-9.543577],[-5.616063,8.713522,-0.821333,-5.358015,-7.631086,7.343867,3.328193,3.136623,9.383793,9.818301,-1.858583,8.376770,-0.095515],[7.725560,4.215257,1.523038,-1.090047,1.847935,0.065616,0.421004,-2.260446,-7.725840,-5.509532,2.521608,0.332640,-1.097806],[2.232000,9.395589,-5.823120,2.930353,-2.254135,8.149016,9.444292,9.073256,5.731936,-5.943082,-9.338958,8.481514,8.176563],[-1.801187,6.084978,-3.463693,-2.399094,-7.026118,-0.502009,-2.396082,5.364436,7.313264,2.455904,9.359421,-7.373083,-2.627778],[-1.577818,6.086764,-4.121493,9.378331,-5.614064,-4.128993,6.257382,9.970082,-7.549711,-1.931151,-2.377596,9.135596,7.073858],[-6.185099,-8.415363,-0.018976,-6.706562,-4.951777,9.356319,-5.631559,-5.138671,-5.454160,-2.441238,2.797017,5.853514,-1.219881],[-1.897890,9.351276,-2.104365,0.913449,-3.348623,-4.520564,0.290173,5.313441,-7.920628,-4.483242,1.837523,-6.599378,8.493180],[-6.052616,8.852476,-6.132810,-6.299045,1.528176,3.114740,-4.260971,-0.136183,-0.002307,4.279921,-2.506118,2.177206,-0.388863],[7.524618,-8.139379,7.617589,-1.586596,5.601539,-3.796837,-9.416982,5.320543,-7.537694,-8.527945,-3.422658,-9.686467,-9.248737]],[[5.228030,1.853608,-6.865004,-6.520230,7.594713,-5.480149,-4.914503,-0.609374,2.111950,6.287064,-4.665315,-1.972953,-9.617163],[8.529628,8.325953,-2.851371,-9.082273,-0.050248,-4.686639,3.442218,-6.034202,4.188607,-7.942711,1.837038,0.320832,-0.307241],[-8.905797,-5.333477,6.644149,1.947686,9.329406,9.014745,-2.033256,8.262665,-2.418955,-5.595601,-9.413202,8.385828,-9.525874],[-4.972778,8.800979,5.051034,-3.989114,1.536878,-4.603472,-2.628069,-4.134271,1.987709,8.184868,8.320749,8.513565,1.743046],[-2.128247,-4.756622,2.869997,-2.950201,5.976571,9.699643,1.884961,0.504240,5.771352,5.024714,0.252700,-4.872296,2.671902],[-4.274866,-3.729300,-0.097899,7.234246,3.883198,-9.312527,2.370084,6.558487,9.311963,8.911149,-3.822518,-8.126878,-3.977036],[-4.654201,-7.413838,6.104025,6.615543,-1.202582,-1.245090,-3.308863,0.308540,8.207054,6.826946,4.826358,7.856329,2.782577],[5.540866,7.176217,-9.572579,1.211366,-1.107394,4.236456,-9.936889,3.903659,3.189992,-4.714017,-9.290021,-2.205478,-1.220399],[-4.524267,-3.344160,-8.746093,5.750817,-4.733653,7.385345,1.004598,-5.031966,8.260211,-1.956915,1.983980,1.649984,-4.856702],[8.199429,1.364174,-6.944316,6.738246,6.230494,1.920508,9.846269,-3.911948,0.714946,-4.186585,3.647459,-6.033969,4.862720],[2.874351,0.692189,-6.860458,-8.212025,-0.405531,-4.352620,-3.966526,1.790851,-9.788985,2.240336,-7.535994,-2.316009,-8.163404],[-2.678831,-7.096695,-2.310219,-1.598623,6.302445,-3.440476,-9.547686,5.400944,-5.844800,7.399453,0.690011,-7.025900,-2.958912],[6.382950,-5.590665,-5.603175,-9.995952,-0.894372,4.641964,-9.634710,2.333197,-7.876234,4.571614,-6.301511,3.026826,-7.577344],[-0.007718,4.006867,9.510989,4.100021,-3.087115,-3.121596,-8.892375,4.314219,-3.654913,3.004787,-9.394078,9.262017,6.137863],[4.741634,5.861149,6.946835,0.369217,5.204911,9.098484,-8.898877,-8.269416,-8.220406,1.858497,-2.671357,8.755942,8.038169],[-2.912619,2.292240,8.087028,-1.099558,-4.118003,-8.684405,1.735114,-6.068112,-4.969124,-1.329324,-8.145932,-3.243620,9.037116]],[[4.102306,-8.354285,-7.629012,0.655136,-9.274349,0.558712,-0.959344,-9.803900,5.184777,-1.139523,-6.207099,-8.644620,1.974510],[2.929714,-3.513744,5.929447,7.741633,-6.637633,-4.598744,3.250608,-5.735591,2.849410,6.800911,4.354273,6.996870,-2.892781],[9.336524,6.081850,6.421180,-2.486406,7.687104,1.824000,1.969032,-1.472763,-9.617408,-2.415893,-4.597161,4.449530,2.244150],[-0.122072,-6.397843,-7.536272,2.887884,-0.878960,-9.792454,-3.859496,-2.410372,-7.070141,-1.531992,2.365291,-5.955077,3.980011],[-3.038141,-8.379747,-0.853818,-1.214062,-8.470227,-4.521732,-4.130334,-9.314869,7.226341,-2.890305,8.450636,7.922446,-0.978696],[-3.885045,-2.199862,1.008366,-6.629880,-3.275456,0.975753,7.911838,5.751650,6.352733,-0.178915,-8.661091,3.564740,-5.812643],[0.784064,-2.359909,-0.708709,-3.078826,-0.943571,2.326862,-2.417689,6.462175,8.321462,8.095217,-1.164259,-8.439361,-7.241535],[-8.312546,-6.424350,-6.486803,-2.249148,5.989596,4.152533,9.037919,2.576056,-6.889351,-9.398505,8.932036,-6.616526,-6.469252],[-5.628522,-9.647315,3.994518,-7.366019,5.720117,5.822954,9.837405,-2.543231,5.330932,-3.113363,0.013103,-7.488455,7.125892],[5.221734,-9.508079,-8.799517,-1.798783,0.053424,-5.648265,0.306122,9.325984,7.664633,8.057195,9.127568,-0.495937,-5.445467],[1.214285,4.921125,-3.303634,-0.538257,7.488229,2.257404,7.579921,9.110463,-4.680924,4.909116,-0.584785,-9.967716,3.461664],[-6.329123,-7.095187,1.456528,6.079283,-9.815887,9.149392,-5.480729,6.850749,-1.035066,-1.321191,-3.714621,4.837593,-0.357743],[1.239772,2.948944,2.059877,-4.310310,-0.960243,5.004294,-4.479340,-2.978531,-1.932128,-4.406957,-3.803633,2.824956,2.813645],[-9.176879,2.610726,-4.870339,1.430425,5.444895,1.996992,-7.882370,4.379832,5.106820,7.933445,1.375245,-8.255679,-6.491741],[7.762826,4.025944,7.739621,7.900661,9.027873,7.131251,1.574795,5.708711,-4.341960,7.537911,5.881401,-9.685960,-2.087285],[-5.892066,2.004182,7.279677,-2.421919,2.633172,-3.892085,4.583068,-7.858968,2.556993,6.209957,-1.202453,-8.352906,-0.441536]],[[-5.762006,4.420294,-7.531706,8.201875,-2.611771,-9.654651,-0.438622,-0.655377,-0.039049,-1.607362,5.216586,3.034983,-5.501880],[-6.970061,9.322074,-5.530612,5.095764,-7.038460,5.618763,-2.291250,-5.349054,7.159753,-4.371027,-4.069125,3.197362,-7.472734],[-5.617878,4.777551,1.155088,7.060681,-0.847452,3.412063,0.446120,-6.320186,9.838132,-9.152023,5.147041,-6.474432,-9.234386],[9.514925,0.242708,-7.514197,0.404200,-5.251023,4.160941,2.791120,3.761457,-2.791901,-9.222678,-8.755759,2.634167,2.371161],[-7.804699,-4.828680,-8.540992,-3.116039,3.176324,2.138106,-3.408221,-5.088833,-7.644774,-1.581654,-1.748830,-0.751754,8.112479],[-4.714667,-8.276624,9.761420,-3.891559,1.700327,6.707720,-9.449009,-7.670254,7.294246,-9.634166,-0.161688,4.050412,-2.930811],[2.802834,-3.833684,4.166967,1.129796,5.388786,-2.034255,1.691455,-6.551658,1.264378,8.072515,9.769677,2.083088,-4.715071],[-0.786625,-8.660244,3.878574,6.173662,-8.876457,8.613097,-4.998447,-2.094027,-9.888769,-3.456730,7.913397,2.303368,8.058378],[2.602663,-4.241203,0.843220,-8.882407,-4.760520,1.741932,2.029446,-9.106659,-1.673826,8.273021,-3.730011,-5.446552,1.044743],[-8.745846,-7.945414,3.625877,-8.317199,-4.015994,-7.534006,4.348045,-7.495404,-2.826605,-3.841334,-7.386513,-3.136744,-3.807087],[5.729543,2.622018,-7.387358,-5.502547,-6.258510,-5.923614,8.128052,-6.571680,2.427022,-1.541985,-8.299554,-8.698128,-6.392106],[1.000528,-0.259648,5.263988,-8.012131,-2.068752,-2.343182,-7.896059,-8.613828,-3.808412,4.482699,7.789039,-6.969807,-7.914404],[5.739593,-5.944358,-9.699490,-0.044610,8.464433,-9.255187,-0.669408,-7.961788,7.697070,0.391406,1.669306,-0.070423,-7.222066],[-4.035637,9.940904,-6.817545,7.845468,-1.813929,-2.763614,-0.576711,-6.712901,-1.101891,-7.623536,-0.380952,5.846768,4.738916],[4.803429,5.727942,-6.567541,-7.155899,-1.695142,-7.514824,0.771428,9.252581,5.668405,3.985359,5.940673,-6.349198,-0.372005],[0.002196,3.256770,2.484737,-1.905819,-9.086170,-5.295935,1.779462,3.797821,-1.426083,-5.052581,8.788407,4.905218,-0.801624]],[[-9.528165,-3.126863,3.169771,-9.814469,5.944039,6.194945,-8.712633,-4.760050,-4.295751,5.462058,7.317210,5.842899,-3.128384],[5.296796,0.979069,-3.722149,-4.964813,8.651321,-3.188936,-2.424346,7.617739,-2.815311,-6.824696,-5.364971,-5.569028,-8.949860],[6.943826,9.274159,-7.811728,4.038526,-9.732550,2.832398,3.538077,-3.533828,-8.865450,3.625050,-4.880154,1.898133,-0.358780],[-9.764072,-4.728145,-5.149166,-8.258560,1.589456,-8.922135,-6.470444,-9.857334,4.185143,-4.666267,0.214593,6.532164,-2.813197],[-4.309142,-8.917111,2.461966,2.075840,7.221453,4.887903,-5.660774,1.522250,-2.253337,2.473044,7.353841,-9.461256,8.071698],[5.816175,-2.603739,-6.270648,6.676581,5.629354,6.431580,-6.211760,-6.443293,-7.639596,-2.639982,7.332406,-5.863875,5.657906],[6.730183,9.130489,-1.846586,5.953938,1.017454,9.503247,-8.445061,2.763771,-1.869601,2.096191,-5.980526,0.360323,8.871635],[8.834382,9.808074,7.009376,-2.296496,1.953091,7.452376,6.428471,3.018484,-7.419769,4.606076,1.728168,9.538986,-8.881901],[4.598386,9.166574,-4.397222,-8.328634,5.445949,-4.358062,-4.651887,-2.592916,7.761565,-8.281827,7.299768,-4.025493,8.932856],[-7.577793,-0.884118,-7.045133,-0.212259,-9.156922,-7.683013,-4.339954,5.632681,7.923493,4.692729,7.356878,2.211199,5.367384],[-1.932527,5.859068,3.993689,8.121297,-2.530661,5.658175,5.513637,3.440263,-0.450306,3.802302,-0.400441,-6.725836,0.012005],[-8.017584,8.133337,1.840157,-3.874877,5.271103,-6.700021,4.945076,-2.883373,7.574908,3.232698,4.213382,-0.414401,8.281171],[9.179673,-9.456218,5.566221,2.971547,-9.584660,7.712344,0.530984,6.634328,5.717251,-6.828079,5.145587,7.282772,-0.628509],[1.323854,3.893606,-5.158690,-1.487283,5.853204,4.719152,-7.639475,6.562064,-8.767067,8.986233,-3.580937,6.964156,-0.369918],[-2.475653,8.784135,1.918168,-5.621033,9.798186,4.667711,2.525239,6.189989,-2.112186,0.899592,9.670499,-4.752857,8.618320],[0.922361,-1.271967,8.017490,4.382462,4.679417,4.423709,-2.209112,-7.475050,-4.847706,-7.044407,1.336316,-4.084155,2.950258]]], dtype = "float64")#candidate|4696|(7, 16, 13)|const|float64
uop_4697 = relay.log10(const_4696.astype('float64')) # shape=(7, 16, 13)
output = uop_4697
output2 = uop_4697
func_4703 = relay.Function([], output)
mod['func_4703'] = func_4703
mod = relay.transform.InferType()(mod)
mutated_mod['func_4703'] = func_4703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4703_call = mutated_mod.get_global_var('func_4703')
call_4704 = func_4703_call()
output = call_4704
func_4705 = relay.Function([], output)
mutated_mod['func_4705'] = func_4705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3942_call = mod.get_global_var('func_3942')
func_3944_call = mutated_mod.get_global_var('func_3944')
call_4719 = relay.TupleGetItem(func_3942_call(), 1)
call_4720 = relay.TupleGetItem(func_3944_call(), 1)
output = relay.Tuple([call_4719,])
output2 = relay.Tuple([call_4720,])
func_4721 = relay.Function([], output)
mod['func_4721'] = func_4721
mod = relay.transform.InferType()(mod)
mutated_mod['func_4721'] = func_4721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4721_call = mutated_mod.get_global_var('func_4721')
call_4722 = func_4721_call()
output = call_4722
func_4723 = relay.Function([], output)
mutated_mod['func_4723'] = func_4723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_4787 = relay.TupleGetItem(func_2758_call(), 0)
call_4788 = relay.TupleGetItem(func_2759_call(), 0)
uop_4791 = relay.sqrt(call_4787.astype('float64')) # shape=(10, 13, 4)
uop_4793 = relay.sqrt(call_4788.astype('float64')) # shape=(10, 13, 4)
output = relay.Tuple([uop_4791,])
output2 = relay.Tuple([uop_4793,])
func_4807 = relay.Function([], output)
mod['func_4807'] = func_4807
mod = relay.transform.InferType()(mod)
mutated_mod['func_4807'] = func_4807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4807_call = mutated_mod.get_global_var('func_4807')
call_4808 = func_4807_call()
output = call_4808
func_4809 = relay.Function([], output)
mutated_mod['func_4809'] = func_4809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_4821 = func_2161_call()
call_4822 = func_2161_call()
var_4835 = relay.var("var_4835", dtype = "bool", shape = (10, 13, 4))#candidate|4835|(10, 13, 4)|var|bool
bop_4836 = relay.bitwise_and(call_4821.astype('uint32'), relay.reshape(var_4835.astype('uint32'), relay.shape_of(call_4821))) # shape=(10, 13, 4)
bop_4839 = relay.bitwise_and(call_4822.astype('uint32'), relay.reshape(var_4835.astype('uint32'), relay.shape_of(call_4822))) # shape=(10, 13, 4)
output = relay.Tuple([bop_4836,])
output2 = relay.Tuple([bop_4839,])
func_4858 = relay.Function([var_4835,], output)
mod['func_4858'] = func_4858
mod = relay.transform.InferType()(mod)
var_4859 = relay.var("var_4859", dtype = "bool", shape = (10, 13, 4))#candidate|4859|(10, 13, 4)|var|bool
output = func_4858(var_4859)
func_4860 = relay.Function([var_4859], output)
mutated_mod['func_4860'] = func_4860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_4867 = relay.TupleGetItem(func_2758_call(), 0)
call_4868 = relay.TupleGetItem(func_2759_call(), 0)
output = call_4867
output2 = call_4868
func_4878 = relay.Function([], output)
mod['func_4878'] = func_4878
mod = relay.transform.InferType()(mod)
output = func_4878()
func_4879 = relay.Function([], output)
mutated_mod['func_4879'] = func_4879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3642_call = mod.get_global_var('func_3642')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_4894 = func_3642_call()
call_4895 = func_3642_call()
var_4914 = relay.var("var_4914", dtype = "float32", shape = (3, 13, 7))#candidate|4914|(3, 13, 7)|var|float32
bop_4915 = relay.subtract(call_4894.astype('uint64'), relay.reshape(var_4914.astype('uint64'), relay.shape_of(call_4894))) # shape=(3, 13, 7)
bop_4918 = relay.subtract(call_4895.astype('uint64'), relay.reshape(var_4914.astype('uint64'), relay.shape_of(call_4895))) # shape=(3, 13, 7)
uop_4919 = relay.cos(var_4914.astype('float64')) # shape=(3, 13, 7)
bop_4924 = relay.minimum(uop_4919.astype('uint64'), relay.reshape(var_4914.astype('uint64'), relay.shape_of(uop_4919))) # shape=(3, 13, 7)
output = relay.Tuple([bop_4915,bop_4924,])
output2 = relay.Tuple([bop_4918,bop_4924,])
func_4931 = relay.Function([var_4914,], output)
mod['func_4931'] = func_4931
mod = relay.transform.InferType()(mod)
mutated_mod['func_4931'] = func_4931
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4932 = relay.var("var_4932", dtype = "float32", shape = (3, 13, 7))#candidate|4932|(3, 13, 7)|var|float32
func_4931_call = mutated_mod.get_global_var('func_4931')
call_4933 = func_4931_call(var_4932)
output = call_4933
func_4934 = relay.Function([var_4932], output)
mutated_mod['func_4934'] = func_4934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3226_call = mod.get_global_var('func_3226')
func_3227_call = mutated_mod.get_global_var('func_3227')
call_4939 = relay.TupleGetItem(func_3226_call(), 1)
call_4940 = relay.TupleGetItem(func_3227_call(), 1)
func_4533_call = mod.get_global_var('func_4533')
func_4535_call = mutated_mod.get_global_var('func_4535')
const_4967 = relay.const([[9.740002,1.008848,-5.933700],[-1.684183,-5.041292,9.668956],[-7.855337,-5.380602,2.585710],[3.391364,1.644415,-4.985452],[8.948854,5.106313,9.055199],[3.578924,1.228202,8.736392],[5.366529,-3.360368,-3.133896],[-5.823301,2.696617,6.184628],[5.620917,6.056031,9.212934],[8.239273,0.513617,-3.308150],[8.705581,8.277631,-4.261436],[-0.681857,2.758160,4.489620],[-9.470250,-7.657757,0.265716],[-1.891064,-1.223483,1.143846],[2.748498,-3.934120,6.696560],[0.129888,4.566975,-2.374139],[7.682728,3.588549,4.004233],[-7.643615,-7.030247,1.396403],[-7.056263,-5.026601,0.742168],[-6.887880,2.992558,-4.532106],[-5.189313,4.763893,-7.851954],[9.861047,-0.283323,-7.583729],[-4.140252,0.285793,-3.174109],[-3.780630,-8.425751,9.705294],[-1.517695,-4.141272,6.616639],[-0.281897,-7.477939,6.104832],[9.507488,-5.351939,5.519855],[-5.203880,2.469265,-6.174877],[-1.110589,-1.682394,-4.553083],[8.092131,7.053014,-6.046151],[-2.955574,-5.769753,-6.503037],[7.132323,4.618627,0.686901],[8.861643,-7.273253,9.624542],[-5.468476,9.709515,-2.969334],[-6.400483,-2.178204,8.384739],[-9.470920,6.699698,-3.082434],[-0.308710,-7.269716,6.912032],[-3.206614,8.227796,3.694785],[-8.360162,-2.290536,-1.871877],[3.963150,-8.977307,-9.900680],[-1.210001,0.144797,-7.110755],[3.287467,-9.189098,-6.452822],[8.684388,-3.049998,9.648344],[3.236239,8.764699,4.657489],[-5.989566,-9.882311,-4.990372],[-5.364406,-8.918186,-3.757905],[8.480166,4.397953,9.055352],[2.078114,1.028327,2.958079],[8.978388,-9.876835,4.240782],[-6.348936,-9.502533,-9.942524],[1.483628,8.791521,4.408909],[-2.379878,6.892148,-2.772145],[3.716225,4.248657,8.067826],[2.777445,7.696665,9.361141],[2.990697,-8.295962,-6.910790],[-1.775963,7.883622,9.626238],[-7.332193,5.917638,-7.123133],[-1.192598,4.183524,-5.147149],[1.324046,4.837880,1.332615],[7.236708,-7.176608,-0.908455],[-8.657800,-0.884131,-2.851927],[-7.534473,-6.362835,-1.766317],[6.257349,-3.000968,-2.944343],[1.589186,3.221018,-8.084681],[4.468097,9.831022,3.679248],[0.352564,2.360108,4.686009],[7.952213,-6.703593,0.030992],[-8.625922,2.876131,0.586330],[2.673056,8.664282,7.062280],[1.363706,1.706167,-0.497285],[-3.474528,5.452699,9.412325],[2.978984,-2.910424,-3.649843],[-0.108927,6.028438,-4.580450],[8.855562,7.103998,-2.921627],[-4.595468,-7.447014,-9.318183],[-6.728406,-6.706963,-1.807210],[-2.346909,-9.193865,1.560254],[-5.599462,-4.085851,-4.402514],[-7.947986,-7.631049,-7.675578],[-7.783285,8.570242,7.878855],[4.033181,-3.542354,0.297136],[-9.120820,7.693507,-9.039136],[1.190258,-4.337502,-4.903696],[-2.026096,8.649699,7.813844],[6.165896,-8.300409,-2.823508],[5.880162,-2.882846,9.016185],[-2.851470,7.827171,-7.235452],[9.062434,3.449073,3.191154],[-7.274831,-1.598466,9.584368],[0.860837,-6.579090,2.957169],[5.038898,-9.826336,-5.550366],[2.697195,1.823380,-2.121634],[5.497009,-1.375369,-4.095800],[-3.861137,7.014211,-6.001237],[-3.688875,-1.620737,6.533046],[6.131026,-2.577388,-2.020990],[5.819204,9.022364,2.909009],[1.388251,8.681294,5.649672],[4.904671,-3.511696,-2.705781],[5.230130,0.797842,4.424492],[4.360381,5.811916,3.986670],[3.513106,-8.633850,5.536521],[-8.858591,-0.694319,-0.799040],[5.599815,1.608023,7.811292],[-7.728819,8.597430,-9.948866]], dtype = "float64")#candidate|4967|(105, 3)|const|float64
call_4966 = relay.TupleGetItem(func_4533_call(relay.reshape(const_4967.astype('float64'), [315,])), 1)
call_4968 = relay.TupleGetItem(func_4535_call(relay.reshape(const_4967.astype('float64'), [315,])), 1)
func_3774_call = mod.get_global_var('func_3774')
func_3777_call = mutated_mod.get_global_var('func_3777')
var_4981 = relay.var("var_4981", dtype = "float64", shape = (48,))#candidate|4981|(48,)|var|float64
var_4982 = relay.var("var_4982", dtype = "float32", shape = (280, 2))#candidate|4982|(280, 2)|var|float32
call_4980 = relay.TupleGetItem(func_3774_call(relay.reshape(var_4981.astype('float64'), [48,]), relay.reshape(var_4982.astype('float32'), [560,]), ), 2)
call_4983 = relay.TupleGetItem(func_3777_call(relay.reshape(var_4981.astype('float64'), [48,]), relay.reshape(var_4982.astype('float32'), [560,]), ), 2)
output = relay.Tuple([call_4939,call_4966,const_4967,call_4980,var_4981,var_4982,])
output2 = relay.Tuple([call_4940,call_4968,const_4967,call_4983,var_4981,var_4982,])
func_4989 = relay.Function([var_4981,var_4982,], output)
mod['func_4989'] = func_4989
mod = relay.transform.InferType()(mod)
var_4990 = relay.var("var_4990", dtype = "float64", shape = (48,))#candidate|4990|(48,)|var|float64
var_4991 = relay.var("var_4991", dtype = "float32", shape = (280, 2))#candidate|4991|(280, 2)|var|float32
output = func_4989(var_4990,var_4991,)
func_4992 = relay.Function([var_4990,var_4991,], output)
mutated_mod['func_4992'] = func_4992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_5000 = relay.TupleGetItem(func_3611_call(), 4)
call_5001 = relay.TupleGetItem(func_3613_call(), 4)
output = call_5000
output2 = call_5001
func_5015 = relay.Function([], output)
mod['func_5015'] = func_5015
mod = relay.transform.InferType()(mod)
output = func_5015()
func_5016 = relay.Function([], output)
mutated_mod['func_5016'] = func_5016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_5019 = relay.TupleGetItem(func_3808_call(), 0)
call_5020 = relay.TupleGetItem(func_3809_call(), 0)
output = relay.Tuple([call_5019,])
output2 = relay.Tuple([call_5020,])
func_5026 = relay.Function([], output)
mod['func_5026'] = func_5026
mod = relay.transform.InferType()(mod)
mutated_mod['func_5026'] = func_5026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5026_call = mutated_mod.get_global_var('func_5026')
call_5027 = func_5026_call()
output = call_5027
func_5028 = relay.Function([], output)
mutated_mod['func_5028'] = func_5028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4878_call = mod.get_global_var('func_4878')
func_4879_call = mutated_mod.get_global_var('func_4879')
call_5058 = func_4878_call()
call_5059 = func_4878_call()
func_2281_call = mod.get_global_var('func_2281')
func_2283_call = mutated_mod.get_global_var('func_2283')
call_5060 = relay.TupleGetItem(func_2281_call(), 0)
call_5061 = relay.TupleGetItem(func_2283_call(), 0)
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_5076 = relay.TupleGetItem(func_3808_call(), 0)
call_5077 = relay.TupleGetItem(func_3809_call(), 0)
func_3611_call = mod.get_global_var('func_3611')
func_3613_call = mutated_mod.get_global_var('func_3613')
call_5099 = relay.TupleGetItem(func_3611_call(), 4)
call_5100 = relay.TupleGetItem(func_3613_call(), 4)
output = relay.Tuple([call_5058,call_5060,call_5076,call_5099,])
output2 = relay.Tuple([call_5059,call_5061,call_5077,call_5100,])
func_5106 = relay.Function([], output)
mod['func_5106'] = func_5106
mod = relay.transform.InferType()(mod)
output = func_5106()
func_5107 = relay.Function([], output)
mutated_mod['func_5107'] = func_5107
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5127 = relay.const([[[5.917792,7.241738,3.801407,-2.810261],[6.069042,-6.744946,-4.436852,4.559314],[5.705038,0.880913,-5.638694,-5.776863],[5.159771,6.099183,1.520231,-7.312024]],[[6.249635,-0.066624,-0.846365,9.458626],[-5.344919,-2.875646,6.838653,5.311164],[7.784703,-9.367680,-4.410255,7.808978],[3.070844,4.223728,-8.073852,3.034806]],[[0.784162,-8.542063,-8.086309,0.988779],[9.980353,2.274625,4.089948,2.128479],[1.677290,-8.212827,6.372154,1.264235],[6.416577,2.298279,-4.014582,3.077630]]], dtype = "float64")#candidate|5127|(3, 4, 4)|const|float64
uop_5128 = relay.atanh(const_5127.astype('float64')) # shape=(3, 4, 4)
func_4010_call = mod.get_global_var('func_4010')
func_4014_call = mutated_mod.get_global_var('func_4014')
var_5135 = relay.var("var_5135", dtype = "int32", shape = (1008,))#candidate|5135|(1008,)|var|int32
call_5134 = relay.TupleGetItem(func_4010_call(relay.reshape(var_5135.astype('int32'), [7, 9, 16]), relay.reshape(var_5135.astype('int32'), [7, 9, 16]), ), 6)
call_5136 = relay.TupleGetItem(func_4014_call(relay.reshape(var_5135.astype('int32'), [7, 9, 16]), relay.reshape(var_5135.astype('int32'), [7, 9, 16]), ), 6)
func_3273_call = mod.get_global_var('func_3273')
func_3274_call = mutated_mod.get_global_var('func_3274')
call_5137 = func_3273_call()
call_5138 = func_3273_call()
func_4483_call = mod.get_global_var('func_4483')
func_4486_call = mutated_mod.get_global_var('func_4486')
const_5155 = relay.const([2,-10,-8,6,-4,6,-8,7,-4,-10,3,-10,-9,-5,1,-9,-7,3,10,9,-2,1,3,-2,4,-8,7,6,-10,10,4,2,10,9,5,-6,-2,-9,-5,-1,-10,8,1,-3,6,2,-5,-3,2,-7,-9,-7,9,7,-6,-5,-9,6,-6,1,-4,-1,-1,-6,-8,1,-7,8,6,-10,-6,-1,-7,-5,7,4,-2,2,1,6,10,-7,-8,3,-2,8,-7,5,7,-6,7,-6,6,2,-6,7,6,5,2,-7,2,-4,-4,4,8,-6,1,-6,1,-4,-4,7,8,-5,-1,-7,-8,3,-10,5,-8,-5,-4,3,6,-4,-10,-2,4,-9,10,9,4,1,-10,2,-9,6,5,-9,-1,-3,6,9,3,-3,1,2,-6,9,-1,-4,7,4,-3,7,7,-5,5,1,10,-4,5,-6,1,7,-8,4,4,1,10,1,6,-8,-8,3,-2,8,-5,10,-2,9,1,7,-1,3,6,9,-10,7,6,7,-6,-9,3,-6,8,7,1,5,2,-5,3,-2,-3,-4,-8,-8,8,-5,9,-6,-1,8,-6,-5,-2,9,-4,-10,-10,5,7,-2,3,8,3,10,-6,5,3,2,-10,-3,-2,1,-9,-9,10,-3,-1,4,4,5,2,4,1,1,9,-4,-8,4,-1,-4,-6,-5,-8,10,-5,-6,6,4,-9,9,-10,-10,9,-6,1,-1,-8,4,7,10,9,-9,-7,2,-10,4,5,-8,10,-5,3,7,-4,7,-5,3,4,-8,-7,-7,-3,-6,-6,3,6,8,5,1,6,-1,7,-2,-8,-4,-3,9,-3,-6,-9,5,-8,5,8,-5,5,3,1,-5,-8,-1,9,8,-7,10,-5,1,8,9,3,-10,9,10,-3,-9,3,3,-4,-3,7,-8,10,6,-7,-6,8,-9,-1,8,-6,-6,-9,-1,2,-5,-9,1,-2,7,-3,-10,-9,9,9,-6,8,-6,-1,-1,2,9,-9,-1,9,-10,3,3,-2,3,-2,8,1,7,10,-2,-4,-4,-3,-3,6,-5,7,2,10,1,-4,-10,-3,-6,6,5,-3,2,7,8,-1,2,-1,-5,10,1,-7,1,-1,-2,7,5,-6,5,2,-7,-8,-1,3,-8,-4,-7,3,10,4,-8,-9,2,2,9,5,-7,4,10,3,-10,-8,-7,-4,-4,1,1,7,-5,5,2,-3,10,6,5,-9,-6,4,7,-2,-6,5,3,5,2,6,-9,-5,-6,-1,2,-8,7,4,9,7,1,7,5,-3,-1,2,-8,10,-10,7,-1,10,8,-3,2,-4,-3,4,-2,-4,-6,6,-3,-7,7,5,-8,5,-1,-3,-10,3,-8,1,5,-7,-4,-4,9,-2,-5,2,3,9,10,4,-1,-5,-5,-10,-6,3,2,-6,9,5,6,7,-7,-3,10,-8,6,1,2,4,-10,7,-4,-3,1,-7,5,6,2,-10,-7,-7,-4,6,10,3,9,-4,-2,-8,-4,2,8,-1,7,7,2,9,-10,1,9,4,1,-2,4,8,4,-7,-7,-7,2,10,-5,9,6,-7,-3,6,10,8,10,2,-5,-8,-9,-7,-8,8,-8,9,8,-10,1,-4,-3,-5,-8,7,-9,-6,-10,1,9,-1,6,-10,10,-5,5,-1,4,1,4,7,-5,-2,-7,-4,4,-3,7,-7,5,-7,-3,-1,4,-3,10,-4,5,1,-2,-6,8,9,5,2,7,-10,-8,9,3,-4,2,-9,5,8,-4,-4,-6,-10,8,-10,-3,-7,-3,5,-8,10,-7,8,-10,-1,-1,-9,-7,-9,-10,2,-3,-4,-5,4,-8,-5,5,8,10,-10,-4,9,7,-10,6,10,-3,6,3,-1,-4,9,2,5,-7,-4,-3,6,-10,6,-8,-7,-1,9,5,-9,10,8,-5,5,-9,7,-1,-1,9,1,4,-10,-3,2,-1,-6,-9,3,7,-10,-7,8,9,-3,9,-8,3,9,-9,3,2,-10,-4,-6,3,9,10,1,9,10,9,-2,-7,8,1,-3,1,-5,10,-7,-5,4,6,-9,-1,-4,6,-3,-6,-7,2,-2,-7,1,-8,10,-7,-1,2,-9,-8,5,6,6,-1,-10,5,10,-1,-9,9,4,-6,10,-6,4,1,-7,1,10,-8,-7,-4,-7,9,-6,7,-6,-5,-4,-7,-5,8,-5,7,3,8,10,-8,-1,-7,5,6,-9,-10,-2,-1,-5,-10,10,-10,5,-2,3,6,-8,8,-6,-7,-5,-10,-5,-7,2,5,-7,6,2,-8,9,-7,-6,-10,-9,-9,-7,-5,-2,3,10,-7,-2,10,10,-10,-4,5,4,-4,6,9,-4,4,-7,-7,6,3,-6,3,-2,4,10,8,7,-6,5,4,2,-5,-6,3,6,-1,10,8,-7,-10,10,-10,9,-9,3,-6,-1,3,3,1,-3,-2,8,-7,-2,3,-6,-8,1,1,-1,1,8,-9,-10,-2,7,-10,-6,2,-5,-10,10,-7,-5,6,-7,-8,-1,-8,9,5,-6,1,-1,9,-9,-8,7,9,4,-10,4,-8,4,5,-7,-9,7,-4,4,6,-2,-4,10,3,-1,-8,8,8,-3,-7,-7,-5,8,-5,-3,-8,7,-4,-5,2,-7,-1,-8,8,3,-4,-2,5,8,-2,10,6,2,-6,-8,-3,1,-1,-2,-10,4,5,3,-6,9,2,10,9,-1,-8,-5,5,6,3,-6,-3,7,8,10,-10,4,2,-3,7,-8,-2,-8,7,2,-2,-4,-1,-6,2,-5,-7,-8,4,-2,5,5,-4,-6,-7,-2,-9,5,-7,10,-7,4,3,-6,3,-5,-9,8,3,4,-4,-8,-3,4,-6,-1,-7,-8,7,7,-4,-8,5,6,-10,8,9,7,-3,-5,-3,-1,-1,3,2,6,2,-9,-10,5,-7,5,2,-9,-3,1,1,10,-10,-10,1,-10,-9,-2,-4,-10,3,-7,7,10,-10,-8,5,-3,-1,1,8,-8,8,10,8,-5,5,-8,7,2,2,-10,-10,-4,-5,-4,4,-4,2,6,-1,-3,-2,9,-8,1,-3,-7,-4,-5,-5,4,10,6,1,2,-3,-10,-5,-6,-10,-2,-8,5,1,-10,8,8,3,2,5,6,8,-5,-3,-5,-10,7,6,-9,-1,-5,-5,8,6,2,5,-3,3,7,1,-10,-1,-6,-8,-5,-5,1,1,8,1,-3,7,9,-4,-8,8,-3,-5,-5,-5,4,-1,10,4,1,9,10,-10,7,-5,6,-5,2,9,2,10,-1,-1,-4,10,-10,1,-6,9,4,10,-9,8,-4,-3,-10,4,-5,-2,-10,4,1,10,-6,-1,-4,10,-4,9,7,4,-4,-9,-3,-7,5,-3,-9,-4,-1,-7,3,-10,-8,-7,-10,2,-9,-4,4,-3,5,5,-8,-8,3,-6,3,-5,7,-5,3,1,-2,4,6,-5,5,4,-1,4,8,-10,8,-1,9,3,7,6,1,-5,9,-10,4,-8,6,6,-2,4,-6,-6,-5,9,-3,1,-4,2,8,8,4,6,-7,-6,1,-10,7,1,7,1,-4,-5,-1,-4,7,-1,-7,2,9,3,-10,-6,1,8,-9,7,3,4,6,-3,9,5,10,9,7,-9,7,1,-5,3,8,-7,-9,-5,8,-10,-1,-2,4,10,5,6,9,7,8,7,-9,9,5,5,-1,10,-9,4,-6,-5,-8,-1,10,-10,-10,-8,-1,-7,2,-2,4,-6,-4,8,-7,-1,4,1,-1,-6,-7,-10,-1,9,-6,6,-2,-6,-5,8,-7,-6,-2,7,-7,6,7,-6,-10,4,5,9,4,-4,8,-10,3,-6,-2,-2,-7,-5,-4,-7,-6,-2,8,-8,7,-1,6,-1,-9,5,1,-2,-6,7,10,4,-2,6,-10,-4,6,3,7,10,1,7,5,-2,-8,2,-2,1,7,-4,2,5,3,10,1,8,-7,4,8,-6,-7,-2,7,1,-3,-10,-4,2,2,-1,-2,-5,-6,3,-6,-10,-7,10,-8,-7,-7,-5,-1,-8,7,-6,-10,7,1,-10,9,10,2,2,-2,-10,-6,-9,2,-2,9,-7,10,-5,-4,-9,-6,-2,10,10,-3,-10,5,-7,-9,7,8,6,-8,8,5,6,6,-2,2,-8,-2,5,10,-6,1,-6,7,-9,-1,8,6,-9,-4,1,-1,-10,-7,-2,-6,-5,-2,-8,-1,4,3,7,-8,2,-7,7,-1,-3,-1,-7,-5,-6,1,6,10,-3,-3,-4,9,10,-8,8,-5,10,-7,-5,-7,-9,-6,2,6,8,-10,-8,-10,-6,7,-10,6,8,-6,6,-3,-4,2,4,-5,-7,7,-3,6,-5,-5,7,4,-5,-8,6,7,-10,-9,-7,9,7,-1,-4,4,-2,-4,-10,-4,-1,-7,-6,6,-5,2,-9,-8,-10,-9,-6,2,1,8,-6,-8,5,-3,-2,-8,-4,-9,-3,9,5,-6,10,10,-7,3,-1,10,8,8,2,9,8,1,6,-5,-10,2,2,-1,10,-2,-7,-8,4,7,2,2,-5,-3,2,1,-10,2,-5,-3,-7,8,7,-8,-2,7,-10,-5,-1,-5,-6,-7,-1,10,-1,1,-8,-1,4,6,-4,-9,-1,3,-3,-6,-7,7,1,-4,-2,8,3,-7,-9,-3,5,1,-8,-9,-3,2,-8,-7,-6,-1,5,8,-1,7,7,4,5,7,10,-6,1,-4,-5,-9,-4,-9,2,-9,4,2,7,3,-3,-7,6,-9,-9,7,-8,5,9,-10,-1,3,-4,-7,2,7,10,-2,5,-5,-8,8,-9,5,7,8,-4,-5,5,-3,2,6,-2,-10,2,3,6,-4,-4,-4,6,-1,2,-1,10,5,4,5,10,6,9,-1,-9,-3,-6,6,-6,2,-2,6,-9,-5,-2,2,6,-7,-5,3,3,-9,-10,1,-1,-5,-8,-7,1,1,-4,7,-10,6,-3,1,2,7,6,-7,10,2,-2,6,-4,-7,9,8,-8,-7,1,7,2,5,-1,-7,-6,-1,-9,-10,-4,-9,2,-6,-2,-1,5,-8,3,4,-8,7,1,4,6,3,2,-7,-1,-3,8,-8,6,-9,-1,-3,6,-5,-1,-7,3,-9,3,-7,8,9,-8,8,-3,10,-2,3,6,-2,-6,-4,-10,6,-8,8,-5,-4,4,-4,9,-10,-9,-6,2,-2,9,-1,-8,2,8,-3,-9,-5,-7,9,-4,-4,4,10,1,8,9,-1,-4,4,-5,6,-2,-6,-3,6,5,-2,1,7,-7,2,-4,-2,7,2,-1,-7,-3,-3,-9,-4,10,-5,2,-2,9,-3,-8,1,1,9,-4,-6,-9,-1,-9,-3,5,-9,-10,-5,9,-1,-5,4,6,9,-8,-6,5,5,6,-2,-4,9,-1,4,-4,-7,-7,-6,-4,4,-9,1,8,7,-2,5,7,-3,-8,-10,-1,-1,10,1,2,8,-6,5,-2,7,1,-1,6,9,-10,6,10,8,-7,-5,-6,10,9,5,-8,-7,-6,7,4,-6,7,-6,1,6,-4,-5,-4,-4,10,8,2,7,6,10,2,-6,7,-7,-5,6,-5,-4,8,4,5,-8,-7,-7,-10,5,-2,-4,-3,9,5,-1,-6,1,-1,2,9,5,4,1,10,8,8,-2,5,1,7,-2,7,7,-2,-3,8,7,3,-9,-5,-4,-9,6,-6,-5,10,-5,3,-4,10,4,-9,-3,-8,-3,9,7,-4,3,-1,2,-6,-8,-9,-3,-10,-1,9,-1,-6,1,-2,5,-1,-5,-7,-4,3,3,2,1,3,3,5,9,8,9,8,5,6,-2,6,7,7,1,6,-3,5,-10,-10,6,-1,-8,-2,-10,3,-1,-9,-10,8,6,-5,-2,-7,-3,-1,4,5,-3,-5,3,-5,6,-5,-10,8,-7,-9,3,3,-2,6,-6,-6,-8,-2,-8,7,2,-2,5,2,-3,2,4,4,10,2,3,-7,-10,1,-7,-3,8,-3,5,6,-4,-6,6,4,1,3,5,-4,8,-2,4,4,-3,7,-2,-6,1,-5,-1,2,7,8,7,9,-7,-10,8,-3,3,-9,-2,1,6,-8,-7,10,8,-5,10,-10,-7,-10,-6,-6,-2,4,-7,-7,1,1,-8,1,3,-10,-2,-1,-1,-1,-3,-8,9,9,6,-2,-1,-4,-6,-4,-1,-1,5,9,3,6,7,1,7,4,7,-10,-9,-9,7,3,10,-8,-7,2,7,8,-4,-9,-10,-4,-9,5,-9,4,-10,6,2,-6,3,3,-7,-5,9,-10,7,5,-8,-5,-7,-5,-5,-8,4,-9,1,8,-2,-7,-7,9,-2,-1,9,7,6,-4,2,-1,5,5,2,1,6,-5,6,-6,-8,-9,4,2,10,10,-9,10,1,-7,-1,-6,-8,-10,5,-1,5,-2,5,-9,-2,-9,-2,-5,6,-7,-10,-8,4,-3,5,3,-5,1,3,-7,10,7,6,-6,-4,1,-6,2,-6,10,-2,-1,2,-9,3,9,1,-7,6,9,-6,3,1,3,-2,-1,10,1,6,-6,-5,2,8,3,3,-3,-6,3,4,9,3,-10,3,-4,1,-10,4,2,-1,6,-1,-5,7,-6,-7,9,-6,2,10,2,7,-8,4,-3,-7,3,9,-4,-7,9,7,4,7,-5,-4,-8,9,-2,-6,-9,3,10,1,10,6,4,7,7,5,-1,-8,-2,5,-9,-8,-3,-4,2,-6,-5,-4,-8,-10,5,8,6,2,-3,3,-7,4,-3,4,-6,-10,5,-4,4,-7,-9,2,-2,-7,-1,-9,-3,-2,-3,-2,7,2,5,-6,-9,-8,9,-6,-6,6,-5,-10,9,-3,-6,-3,-8,-8,10,3,-6,-8,3,-6,8,8,8,-10,-8,1,-9,-1,-1,1,1,-3,-7,4,6,10,-3,-7,-6,5,-1,10,-3,6,-9,5,3,9,-8,1,-6,-10,-1,7,4,-3,-10,-3,-5,-7,8,-4,-10,2,-9,-4,5,-1,10,4,-2,7,4,-7,10,3,5,-10,4,3,-4,6,2,6,7,-4,-8,5,10,1,5,10,3,5,2,9,-8,7,-6,1,-2,-6,-5,-2,-2,-9,-7,9,10,5,5,-10,-1,-10,-8,2,-6,-10,-7,10,-5,10,-7,-10,-4,-9,-1,1,-5,-10,-2,5,-9,10,9,-7,8,-8,8,-2,-5,3,-1,9,-5,-3,9,6,-4,6,-8,-10,2,-1,-8,-3,3,8,-10,2,-5,-4,-2,4,9,-1,-5,-3,-1,-5,7,-1,-6,6,7,1,10,10,-4,-8,-6,-9,-2,-8,-9,1,3,-6,-2,-4,10,-4,-9,-4,9,-7,3,-8,10,-9,8,-5,-3,-1,3,7,-1,4,5,4,-10,-1,-8,-9,4,7,7,5,3,6,-3,9,-3,-5,-1,-4,-1,5,3,-10,-3,9,9,1,-1,-7,-1,10,1,2,-6,4,-1,-9,-4,-1,5,6,-5,-5,-5,3,-1,2,10,-4,2,6,-9,-8,-5,10,1,4,-7,4,-3,8,2,6,5,10,7,1,-2,-9,-9,7,-8,-8,1,-7,-1,-10,6,-6,-5,-6,-4,-8,-5,-5,9,4,2,10,-6,-8,3,-1,-4,-8,3,1,1,4,-10,2,-9,-7,-10,6,6,-4,-2,6,2,-6,9,10,9,-10,3,8,-8,-4,-4,6,-4,8,9,-3,1,-6,9,2,2,-8,-4,6,3,-2,-10,-6,-3,4,10,3,-7,2,4,3,-8,10,9,-5,8,9,8,-6,-2,10,-8,-3,-9,10,-3,-1,5,-4,-1,-5,6,1,-1,-2,-5,-5,5,-9,-7,10,-3,-10,6,3,2,-6,-3,-2,-4,-7,7,4,-2,-8,2,-8,1,-3,1,-4,-3,-1,9,-1,8,-4,2,6,-10,4,2,-5,9,10,4,-4,8,3,9,-2,2,1,-3,7,-1,3,2,-6,8,4,4,8,3,9,3,-8,-7,-8,-4,-4,-7,-8,-7,-3,-2,8,3,8,-5,-8,10,7,3,-6,2,3,8,-10,8,1,-8,-8,5,7,-4,-2,8,-10,5,-9,-9,-6,-6,2,-8,5,-2,-7,10,-10,-6,9,-10,-7,8,-1,8,1,-2,7,-8,5,5,8,3,-2,-10,5,1,-6,7,5,5,-9,-1,-6,-9,10,5,1,-7,9,3,7,7,4,-1,9,-7,2,5,8,10,-9,-7,3,3,-9,-7,10,-10,-5,-3,4,3,9,-3,-1,6,-10,-8,7,6,-8,2,6,-4,10,7,9,-1,7,9,9,-6,8,-3,-7,-1,-9,-5,-5,-7,-6,1,2,8,-8,-7,-2,-7,9,5,6,-1,9,1,4,-8,-2,-10,3,-6,-4,-7,6,-7,3,-10,-8,-5,8,-10,3,5,-9,10,2,2,-8,10,-2,-8,-9,-5,3,5,-7,4,-10,-7,-3,-10,2,-10,-10,4,-9,8,-5,6,-4,-9,-3,1,3,4,-5,-10,-4,-9,1,8,-8,-10,9,2,7,4,-4,5,5,3,4,8,6,-4,-1,-6,9,3,-2,-3,6,-10,6,-10,-7,-10,-8,10,-6,-10,-7,5,4,5,-2,-6,-8,9,-4,-5,-1,1,-3,-3,5,5,2,9,-7,2,5,-8,-6,8,-5,8,-8,-5,-10,-2,-4,9,7,1,-2,-3,-3,-1,7,9,-10,10,-8,3,-5,-4,-1,4,1,-2,-8,-2,-8,-10,-10,-9,-7,-2,-5,-4,-9,-9,3,8,9,-1,-7,-10,5,9,10,-8,8,4,5,2,-10,6,-6,-9,6,-2,4,7,-1,-5,-6,-9,-4,-8,5,-5,-2,-8,5,3,-9,2,8,-1,8,1,-10,10,5,5,7,5,-8,8,-10,5,-8,3,8,5,1,-2,8,6,-10,-3,8,-6,9,-2,-7,-10,-5,8,-6,-1,-9,-7,5,-10,4,-3,1,1,-5,1,-9,6,-2,7,-9,7,1,7,-9,2,2,6,-5,3,7,2,7,-9,-4,8,-5,3,9,4,7,-1,-1,2,1,6,1,5,-7,8,-1,5,1,3,-8,-8,-3,3,6,-2,3,7,7,2,6,-7,8,4,2,9,-2,-6,-8,1,-6,-8,-10,-1,-7,-4,4,-10,3,-2,-1,4,10,8,-1,-9,-1,-4,-4,-1,1,-3,-5,9,-9,3,-2,3,9,9,2,4,6,6,4,-2,1,10,-2,-5,10,3,5,3,9,3,-1,-7,-5,-1,-2,-2,10,-10,10,5,1,1,6,-1,7,8,-9,9,10,4,2,-7,-9,5,10,9,-8,9,-6,10,-2,-5,5,-6,-3,9,8,8,-10,-7,4,4,-8,-7,1,10,-6,-6,-9,10,-3,-7,-4,8,-9,6,1,-5,-1,3,-10,5,8,-8,4,-8,6,9,2,8,2,-5,4,-2,-4,8,8,1,7,-2,9,1,7,7,-9,3,9,-4,7,9,-3,-7,-2,-8,10,-3,1,-6,4,-10,-10,-4,-10,-3,6,-10,9,-1,-8,4,-10,8,-1,-2,2,7,4,1,2,10,-6,-1,8,9,-1,-5,-10,-2,9,-5,5,-1,5,-2,-5,-7,5,-7,-9,10,-7,-3,-7,-7,9,5,4,-3,-9,-8,-9,5,-4,-8,9,5,4,3,10,-8,-2,3,1,8,2,4,2,7,2,-9,5,6,-9,-1,-1,-10,-3,2,8,2,6,1,-5,-4,-6,-7,6,-10,-6,-3,-1,-1,-5,-8,5,-5,8,-8,4,2,-6,1,-6,-4,4,-9,-4,3,5,4,-5,-2,-5,-8,4,-1,10,-10,-4,7,6,7,8,9,3,-5,2,-1,-10,10,-6,-2,-4,3,9,-8,-7,6,6,1,1,-8,-5,-2,8,9,-2,10,-5,5,-4,2,-9,7,4,-7,-7,-7,-3,-9,10,3,-9,9,-10,10,7,-3,10,4,-9,-8,5,9,6,-7,6,-10,6,2,4,-8,-6,1,-1,10,5,6,-3,6,-5,-6,4,9,-5,-4,3,-2,-10,-4,8,-3,-2,-5,-4,-6,3,-1,10,-6,10,-6,9,3,4,4,-1,-7,6,2,2,-10,-4,3,-10,10,9,5,7,9,7,-3,10,5,-9,-5,-7,-7,5,-4,9,9,10,-5,-3,-6,10,1,9,-4,-3,1,-4,-10,8,-6,-5,-6,10,-2,8,3,9,-7,-10,-7], dtype = "int64")#candidate|5155|(3840,)|const|int64
call_5154 = relay.TupleGetItem(func_4483_call(relay.reshape(const_5155.astype('int64'), [16, 16, 15])), 0)
call_5156 = relay.TupleGetItem(func_4486_call(relay.reshape(const_5155.astype('int64'), [16, 16, 15])), 0)
func_2807_call = mod.get_global_var('func_2807')
func_2809_call = mutated_mod.get_global_var('func_2809')
const_5160 = relay.const([False,True,False,False,False,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,False,True,True,False,True,False,False,False,True], dtype = "bool")#candidate|5160|(520,)|const|bool
call_5159 = relay.TupleGetItem(func_2807_call(relay.reshape(const_5160.astype('bool'), [10, 13, 4])), 0)
call_5161 = relay.TupleGetItem(func_2809_call(relay.reshape(const_5160.astype('bool'), [10, 13, 4])), 0)
const_5184 = relay.const([[[-8.157605,-6.515796,-4.186066,9.741510],[8.517019,5.922125,-9.864933,2.698852],[7.965108,1.179720,-9.136975,6.746526],[-5.979850,2.223330,9.674863,6.989152]],[[-4.428987,9.780338,-2.337851,-0.310743],[3.144366,5.232750,9.519139,8.105126],[1.479597,9.849679,-6.544158,5.648165],[8.706713,0.229950,1.490763,-9.724331]],[[-0.803198,5.112762,-6.177886,-4.349464],[4.422575,8.593067,2.942505,5.891368],[-3.820058,-1.645783,9.953161,7.280276],[-3.185486,-6.356860,4.958212,5.217582]]], dtype = "float64")#candidate|5184|(3, 4, 4)|const|float64
bop_5185 = relay.add(uop_5128.astype('int64'), relay.reshape(const_5184.astype('int64'), relay.shape_of(uop_5128))) # shape=(3, 4, 4)
output = relay.Tuple([call_5134,var_5135,call_5137,call_5154,const_5155,call_5159,const_5160,bop_5185,])
output2 = relay.Tuple([call_5136,var_5135,call_5138,call_5156,const_5155,call_5161,const_5160,bop_5185,])
func_5194 = relay.Function([var_5135,], output)
mod['func_5194'] = func_5194
mod = relay.transform.InferType()(mod)
var_5195 = relay.var("var_5195", dtype = "int32", shape = (1008,))#candidate|5195|(1008,)|var|int32
output = func_5194(var_5195)
func_5196 = relay.Function([var_5195], output)
mutated_mod['func_5196'] = func_5196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4878_call = mod.get_global_var('func_4878')
func_4879_call = mutated_mod.get_global_var('func_4879')
call_5241 = func_4878_call()
call_5242 = func_4878_call()
func_2465_call = mod.get_global_var('func_2465')
func_2467_call = mutated_mod.get_global_var('func_2467')
call_5250 = relay.TupleGetItem(func_2465_call(relay.reshape(call_5241.astype('int16'), [10, 13, 4])), 2)
call_5251 = relay.TupleGetItem(func_2467_call(relay.reshape(call_5241.astype('int16'), [10, 13, 4])), 2)
uop_5254 = relay.sin(call_5250.astype('float64')) # shape=(10, 13, 4)
uop_5256 = relay.sin(call_5251.astype('float64')) # shape=(10, 13, 4)
uop_5263 = relay.log(call_5241.astype('float32')) # shape=(10, 13, 4)
uop_5265 = relay.log(call_5242.astype('float32')) # shape=(10, 13, 4)
func_1647_call = mod.get_global_var('func_1647')
func_1650_call = mutated_mod.get_global_var('func_1650')
var_5283 = relay.var("var_5283", dtype = "float64", shape = (182,))#candidate|5283|(182,)|var|float64
call_5282 = relay.TupleGetItem(func_1647_call(relay.reshape(var_5283.astype('float64'), [1, 14, 13])), 0)
call_5284 = relay.TupleGetItem(func_1650_call(relay.reshape(var_5283.astype('float64'), [1, 14, 13])), 0)
func_4483_call = mod.get_global_var('func_4483')
func_4486_call = mutated_mod.get_global_var('func_4486')
var_5291 = relay.var("var_5291", dtype = "int64", shape = (3840,))#candidate|5291|(3840,)|var|int64
call_5290 = relay.TupleGetItem(func_4483_call(relay.reshape(var_5291.astype('int64'), [16, 16, 15])), 0)
call_5292 = relay.TupleGetItem(func_4486_call(relay.reshape(var_5291.astype('int64'), [16, 16, 15])), 0)
output = relay.Tuple([uop_5254,uop_5263,call_5282,var_5283,call_5290,var_5291,])
output2 = relay.Tuple([uop_5256,uop_5265,call_5284,var_5283,call_5292,var_5291,])
func_5305 = relay.Function([var_5283,var_5291,], output)
mod['func_5305'] = func_5305
mod = relay.transform.InferType()(mod)
var_5306 = relay.var("var_5306", dtype = "float64", shape = (182,))#candidate|5306|(182,)|var|float64
var_5307 = relay.var("var_5307", dtype = "int64", shape = (3840,))#candidate|5307|(3840,)|var|int64
output = func_5305(var_5306,var_5307,)
func_5308 = relay.Function([var_5306,var_5307,], output)
mutated_mod['func_5308'] = func_5308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4259_call = mod.get_global_var('func_4259')
func_4261_call = mutated_mod.get_global_var('func_4261')
call_5343 = func_4259_call()
call_5344 = func_4259_call()
func_879_call = mod.get_global_var('func_879')
func_884_call = mutated_mod.get_global_var('func_884')
const_5350 = relay.const([-7.240931,7.953728,4.768984,5.940279,-1.821377,-7.179703,-2.293631,1.594290,6.930086,-3.036174,-1.273092,-2.674072,-1.273333,0.853409,7.011009,8.523007,-4.059113,-9.342080,8.508847,-7.775848,-0.021609,5.334018,4.282589,-9.303645,8.266261,-4.002174,-0.197924,1.951693,5.121609,-3.702384,6.143453,-3.000471,-2.619778,9.981711,-1.268477,4.170990], dtype = "float32")#candidate|5350|(36,)|const|float32
const_5351 = relay.const([[-1.230419,1.673260],[-7.569715,-1.342786],[5.919918,-6.943498],[-5.378544,-2.931935],[-7.193360,3.161085],[-5.568016,0.285414],[9.634762,-1.008838],[-2.689814,6.933154],[4.288138,1.353158],[-6.737426,9.970459],[6.246319,-7.554638],[1.636238,-5.484462],[6.152828,-2.924450],[9.509471,5.168714],[5.280474,-9.127218],[6.632205,-7.515605],[-8.702853,-0.781966],[3.429301,-0.963742],[5.886244,8.070259],[5.050415,-7.111016],[5.317439,-9.315799],[-1.090299,6.979947],[9.656234,7.148810],[-7.149821,6.254358]], dtype = "float64")#candidate|5351|(24, 2)|const|float64
call_5349 = relay.TupleGetItem(func_879_call(relay.reshape(const_5350.astype('float32'), [3, 4, 3]), relay.reshape(const_5350.astype('float32'), [3, 4, 3]), relay.reshape(const_5351.astype('float64'), [48,]), ), 5)
call_5352 = relay.TupleGetItem(func_884_call(relay.reshape(const_5350.astype('float32'), [3, 4, 3]), relay.reshape(const_5350.astype('float32'), [3, 4, 3]), relay.reshape(const_5351.astype('float64'), [48,]), ), 5)
func_2199_call = mod.get_global_var('func_2199')
func_2200_call = mutated_mod.get_global_var('func_2200')
call_5366 = func_2199_call()
call_5367 = func_2199_call()
output = relay.Tuple([call_5343,call_5349,const_5350,const_5351,call_5366,])
output2 = relay.Tuple([call_5344,call_5352,const_5350,const_5351,call_5367,])
func_5375 = relay.Function([], output)
mod['func_5375'] = func_5375
mod = relay.transform.InferType()(mod)
mutated_mod['func_5375'] = func_5375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5375_call = mutated_mod.get_global_var('func_5375')
call_5376 = func_5375_call()
output = call_5376
func_5377 = relay.Function([], output)
mutated_mod['func_5377'] = func_5377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5375_call = mod.get_global_var('func_5375')
func_5377_call = mutated_mod.get_global_var('func_5377')
call_5395 = relay.TupleGetItem(func_5375_call(), 1)
call_5396 = relay.TupleGetItem(func_5377_call(), 1)
uop_5407 = relay.erf(call_5395.astype('float32')) # shape=(3, 7, 15)
uop_5409 = relay.erf(call_5396.astype('float32')) # shape=(3, 7, 15)
var_5445 = relay.var("var_5445", dtype = "float32", shape = (3, 7, 15))#candidate|5445|(3, 7, 15)|var|float32
bop_5446 = relay.greater_equal(uop_5407.astype('bool'), relay.reshape(var_5445.astype('bool'), relay.shape_of(uop_5407))) # shape=(3, 7, 15)
bop_5449 = relay.greater_equal(uop_5409.astype('bool'), relay.reshape(var_5445.astype('bool'), relay.shape_of(uop_5409))) # shape=(3, 7, 15)
func_4064_call = mod.get_global_var('func_4064')
func_4067_call = mutated_mod.get_global_var('func_4067')
var_5454 = relay.var("var_5454", dtype = "float64", shape = (320, 2))#candidate|5454|(320, 2)|var|float64
call_5453 = relay.TupleGetItem(func_4064_call(relay.reshape(var_5454.astype('float64'), [16, 10, 4]), relay.reshape(var_5454.astype('float64'), [16, 10, 4]), ), 0)
call_5455 = relay.TupleGetItem(func_4067_call(relay.reshape(var_5454.astype('float64'), [16, 10, 4]), relay.reshape(var_5454.astype('float64'), [16, 10, 4]), ), 0)
uop_5456 = relay.log10(bop_5446.astype('float64')) # shape=(3, 7, 15)
uop_5458 = relay.log10(bop_5449.astype('float64')) # shape=(3, 7, 15)
bop_5475 = relay.floor_mod(uop_5456.astype('float32'), relay.reshape(uop_5407.astype('float32'), relay.shape_of(uop_5456))) # shape=(3, 7, 15)
bop_5478 = relay.floor_mod(uop_5458.astype('float32'), relay.reshape(uop_5409.astype('float32'), relay.shape_of(uop_5458))) # shape=(3, 7, 15)
bop_5485 = relay.subtract(uop_5456.astype('int8'), relay.reshape(call_5395.astype('int8'), relay.shape_of(uop_5456))) # shape=(3, 7, 15)
bop_5488 = relay.subtract(uop_5458.astype('int8'), relay.reshape(call_5396.astype('int8'), relay.shape_of(uop_5458))) # shape=(3, 7, 15)
uop_5492 = relay.acosh(uop_5407.astype('float64')) # shape=(3, 7, 15)
uop_5494 = relay.acosh(uop_5409.astype('float64')) # shape=(3, 7, 15)
output = relay.Tuple([call_5453,var_5454,bop_5475,bop_5485,uop_5492,])
output2 = relay.Tuple([call_5455,var_5454,bop_5478,bop_5488,uop_5494,])
func_5495 = relay.Function([var_5445,var_5454,], output)
mod['func_5495'] = func_5495
mod = relay.transform.InferType()(mod)
mutated_mod['func_5495'] = func_5495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5495_call = mutated_mod.get_global_var('func_5495')
var_5497 = relay.var("var_5497", dtype = "float32", shape = (3, 7, 15))#candidate|5497|(3, 7, 15)|var|float32
var_5498 = relay.var("var_5498", dtype = "float64", shape = (320, 2))#candidate|5498|(320, 2)|var|float64
call_5496 = func_5495_call(var_5497,var_5498,)
output = call_5496
func_5499 = relay.Function([var_5497,var_5498,], output)
mutated_mod['func_5499'] = func_5499
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5529 = relay.var("var_5529", dtype = "float32", shape = (8, 12))#candidate|5529|(8, 12)|var|float32
uop_5530 = relay.rsqrt(var_5529.astype('float32')) # shape=(8, 12)
func_4533_call = mod.get_global_var('func_4533')
func_4535_call = mutated_mod.get_global_var('func_4535')
const_5536 = relay.const([[-9.508227,-7.423121,-5.505470,-5.620622,4.065612,0.542258,-6.019796,-4.555820,1.411736],[-4.961841,4.453186,-0.764470,-5.780775,0.850632,-0.735635,5.780986,-1.666536,-3.660363],[-1.412060,6.634050,-2.815168,-3.635092,-8.709257,-9.603940,5.093626,-4.804653,-7.932228],[6.998076,-9.185613,3.025060,-4.090526,-3.819796,-7.729841,-9.814727,2.157931,-3.878295],[-2.797940,-3.249033,3.911254,-8.918205,6.890235,9.796543,5.290079,-5.378475,7.758720],[-8.062063,-1.962959,6.376286,-5.533439,-8.765296,6.095617,2.704402,3.854279,-1.141626],[-4.627940,1.523231,3.129541,9.775199,-4.537513,7.257204,-5.941508,3.451162,-7.592357],[9.593233,-0.169277,-5.158264,9.172069,4.328856,0.401314,3.261840,-3.908321,-8.432583],[-7.948050,4.220210,8.717416,-1.891962,-7.921152,6.661167,-8.619062,5.729301,-9.617965],[-5.333653,5.224609,-2.123623,9.550799,-6.629800,1.386127,-9.588319,2.011814,-9.792934],[-5.295162,-0.183258,-7.461883,5.663637,-3.716439,-8.884269,-7.093322,-9.167274,-0.851530],[-0.724016,9.079335,-3.223825,1.136930,-7.301906,-1.752532,-4.597778,9.948878,7.223059],[-5.105963,5.376756,-9.472378,2.834606,-2.238330,-0.691086,-0.070574,4.787837,-2.131951],[-8.622607,-7.760943,-9.427718,3.458353,6.545927,7.005462,4.817722,2.555454,-5.555089],[-9.738356,-8.850572,-4.890008,6.183211,9.972258,-8.837861,-9.302916,-5.625690,6.095859],[5.932533,0.920819,9.044495,-3.828387,-9.666514,0.819868,9.679198,-6.097971,9.623165],[-5.509460,8.794232,1.943243,5.473009,9.264725,-0.001816,-6.158865,1.679074,-6.316196],[-7.244300,8.691281,-0.761364,-4.648307,-4.340568,6.899854,3.285992,1.692966,3.314641],[-3.677000,-4.709677,-1.925290,-3.886516,4.954803,-8.293185,-8.662003,-1.786326,1.961497],[6.777033,-8.503164,-9.793161,0.146450,5.951604,2.024927,5.849677,-2.212623,7.461044],[-2.145132,1.894917,6.789437,8.591897,1.871808,-9.627140,-5.307389,-6.299030,7.585362],[-4.069056,-8.787046,3.577733,-2.119450,6.153054,6.348512,-6.966307,-4.188047,9.879544],[2.860527,4.919990,-3.896399,-3.154615,5.461118,5.019430,7.111788,3.216193,0.769710],[1.854781,7.130120,-1.862122,8.263370,-1.247352,6.545981,-3.495323,-0.536344,2.643478],[5.376376,3.526856,-5.181734,1.612127,-4.130572,8.814584,-6.283800,-8.674164,1.815836],[-3.300145,1.131297,-5.820368,-6.852530,0.289857,-3.759695,9.034229,-8.155139,4.764827],[6.591266,1.318525,3.786208,7.270308,5.088590,-1.657117,5.910405,-4.577283,4.469269],[1.056042,1.742484,1.023474,1.201148,5.978469,7.865843,-0.427907,7.029725,2.397807],[-9.959263,-2.761812,-2.740687,-4.289766,6.776041,-5.570081,8.185085,-3.313109,-4.220107],[-6.349056,-7.043903,-2.522253,-0.419516,-1.253844,-7.705280,4.271651,3.839866,-3.113279],[-5.660753,7.660780,0.821588,-8.592522,3.687500,5.311186,-9.102407,7.477857,5.766584],[0.464449,-7.640211,-5.793602,8.456924,8.312584,8.012897,-5.278137,-3.497737,-1.650735],[0.556815,-4.546174,9.861886,-0.513485,5.132901,2.636240,9.935568,6.401562,-9.389570],[-8.397837,9.508562,-7.098319,-5.835773,-5.788340,-3.261442,-6.108275,7.736440,-3.658270],[1.207199,3.960641,-6.945561,2.342878,3.969172,0.928591,-4.815207,5.706205,2.163264]], dtype = "float64")#candidate|5536|(35, 9)|const|float64
call_5535 = relay.TupleGetItem(func_4533_call(relay.reshape(const_5536.astype('float64'), [315,])), 0)
call_5537 = relay.TupleGetItem(func_4535_call(relay.reshape(const_5536.astype('float64'), [315,])), 0)
output = relay.Tuple([uop_5530,call_5535,const_5536,])
output2 = relay.Tuple([uop_5530,call_5537,const_5536,])
func_5541 = relay.Function([var_5529,], output)
mod['func_5541'] = func_5541
mod = relay.transform.InferType()(mod)
mutated_mod['func_5541'] = func_5541
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5542 = relay.var("var_5542", dtype = "float32", shape = (8, 12))#candidate|5542|(8, 12)|var|float32
func_5541_call = mutated_mod.get_global_var('func_5541')
call_5543 = func_5541_call(var_5542)
output = call_5543
func_5544 = relay.Function([var_5542], output)
mutated_mod['func_5544'] = func_5544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5575 = relay.var("var_5575", dtype = "uint8", shape = (14, 15, 4))#candidate|5575|(14, 15, 4)|var|uint8
var_5576 = relay.var("var_5576", dtype = "uint8", shape = (14, 15, 4))#candidate|5576|(14, 15, 4)|var|uint8
bop_5577 = relay.bitwise_or(var_5575.astype('uint8'), relay.reshape(var_5576.astype('uint8'), relay.shape_of(var_5575))) # shape=(14, 15, 4)
output = bop_5577
output2 = bop_5577
F = relay.Function([var_5575,var_5576,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5575,var_5576,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

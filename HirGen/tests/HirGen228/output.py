import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_125 = relay.var("var_125", dtype = "bool", shape = ())#candidate|125|()|var|bool
const_126 = relay.const([[[True,True,True,True,False,True,True,False,False,True]]], dtype = "bool")#candidate|126|(1, 1, 10)|const|bool
bop_127 = relay.logical_or(var_125.astype('bool'), const_126.astype('bool')) # shape=(1, 1, 10)
output = relay.Tuple([bop_127,])
output2 = relay.Tuple([bop_127,])
func_148 = relay.Function([var_125,], output)
mod['func_148'] = func_148
mod = relay.transform.InferType()(mod)
var_149 = relay.var("var_149", dtype = "bool", shape = ())#candidate|149|()|var|bool
output = func_148(var_149)
func_150 = relay.Function([var_149], output)
mutated_mod['func_150'] = func_150
mutated_mod = relay.transform.InferType()(mutated_mod)
var_314 = relay.var("var_314", dtype = "float64", shape = (15, 6, 8))#candidate|314|(15, 6, 8)|var|float64
var_315 = relay.var("var_315", dtype = "float64", shape = (15, 6, 8))#candidate|315|(15, 6, 8)|var|float64
bop_316 = relay.floor_mod(var_314.astype('float64'), relay.reshape(var_315.astype('float64'), relay.shape_of(var_314))) # shape=(15, 6, 8)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
var_329 = relay.var("var_329", dtype = "bool", shape = ())#candidate|329|()|var|bool
call_328 = relay.TupleGetItem(func_148_call(relay.reshape(var_329.astype('bool'), [])), 0)
call_330 = relay.TupleGetItem(func_150_call(relay.reshape(var_329.astype('bool'), [])), 0)
output = relay.Tuple([bop_316,call_328,var_329,])
output2 = relay.Tuple([bop_316,call_330,var_329,])
func_335 = relay.Function([var_314,var_315,var_329,], output)
mod['func_335'] = func_335
mod = relay.transform.InferType()(mod)
var_336 = relay.var("var_336", dtype = "float64", shape = (15, 6, 8))#candidate|336|(15, 6, 8)|var|float64
var_337 = relay.var("var_337", dtype = "float64", shape = (15, 6, 8))#candidate|337|(15, 6, 8)|var|float64
var_338 = relay.var("var_338", dtype = "bool", shape = ())#candidate|338|()|var|bool
output = func_335(var_336,var_337,var_338,)
func_339 = relay.Function([var_336,var_337,var_338,], output)
mutated_mod['func_339'] = func_339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_403 = relay.var("var_403", dtype = "float64", shape = (4, 14, 5))#candidate|403|(4, 14, 5)|var|float64
uop_404 = relay.acos(var_403.astype('float64')) # shape=(4, 14, 5)
output = relay.Tuple([uop_404,])
output2 = relay.Tuple([uop_404,])
func_420 = relay.Function([var_403,], output)
mod['func_420'] = func_420
mod = relay.transform.InferType()(mod)
var_421 = relay.var("var_421", dtype = "float64", shape = (4, 14, 5))#candidate|421|(4, 14, 5)|var|float64
output = func_420(var_421)
func_422 = relay.Function([var_421], output)
mutated_mod['func_422'] = func_422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_475 = relay.var("var_475", dtype = "float64", shape = (16, 1))#candidate|475|(16, 1)|var|float64
uop_476 = relay.acos(var_475.astype('float64')) # shape=(16, 1)
output = uop_476
output2 = uop_476
func_490 = relay.Function([var_475,], output)
mod['func_490'] = func_490
mod = relay.transform.InferType()(mod)
var_491 = relay.var("var_491", dtype = "float64", shape = (16, 1))#candidate|491|(16, 1)|var|float64
output = func_490(var_491)
func_492 = relay.Function([var_491], output)
mutated_mod['func_492'] = func_492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_499 = relay.var("var_499", dtype = "float64", shape = (16, 13, 6))#candidate|499|(16, 13, 6)|var|float64
const_500 = relay.const([[[-2.560171,-3.286576,-4.505741,8.211005,-0.450269,0.664989],[-5.205959,-3.977304,5.788761,-5.582977,-8.740858,1.026921],[4.391074,-7.921678,-0.909864,-7.888182,7.463040,-1.078986],[-0.202151,2.786538,4.025138,8.564291,-5.923204,-3.648685],[9.810880,7.153324,6.530408,4.682176,-6.535187,2.305798],[7.797846,3.074348,-3.540535,-7.891710,8.089748,1.721309],[4.313197,6.233159,9.573878,4.599745,-1.165869,-5.904087],[2.731332,-7.561464,-8.871771,-6.496779,9.112621,-5.747099],[7.458558,-1.360276,-2.628896,-0.575762,-7.684475,1.366178],[1.939073,-0.422609,5.154936,2.958008,-5.514826,-8.277789],[1.365181,6.462977,-9.471790,-8.782712,-3.216768,-1.135027],[-9.318510,-4.435626,-5.113055,-1.685619,-6.530111,-8.951862],[-4.483219,3.573169,2.368923,8.333703,-0.938215,-7.155323]],[[-7.780980,1.126459,7.041979,1.652315,-6.781215,2.303989],[0.844944,-6.054248,-4.444922,4.849880,-1.839730,-4.253502],[-2.498543,-7.992469,-5.833359,6.029899,8.659537,4.626849],[-5.777601,-0.086962,0.583847,-0.220796,-7.216209,-5.587754],[0.373032,3.197686,-4.271458,7.208735,1.028805,-6.519387],[-8.433221,-3.001978,-5.482571,1.950547,-0.742729,9.736038],[0.888683,-7.251935,-0.880681,-8.690592,-0.144811,1.026444],[5.792054,3.217885,-1.050613,-1.524191,3.022171,-0.437668],[9.588845,-8.800098,3.730383,8.419892,4.930722,-5.929038],[-2.322663,0.672301,-6.647160,-2.435063,-9.861867,-5.730441],[8.090651,2.268276,9.246836,-4.344484,1.086852,-7.590411],[-1.295192,8.915589,8.643921,7.226066,1.764546,-7.103987],[2.584468,9.174414,-7.743352,-3.972385,9.848515,-7.908979]],[[2.008011,9.170067,-2.283514,3.311461,0.880849,-1.812382],[4.073535,-4.079331,9.663642,-8.876429,5.743311,-1.837909],[-3.893261,8.734633,-7.526756,-2.003749,-3.990291,7.137355],[-4.858055,1.606149,2.629803,-0.262296,6.101588,1.286486],[-6.044595,3.266634,-9.976259,9.720749,-5.257825,-5.056962],[8.332359,-8.821974,-0.931495,-8.512118,2.900822,-3.950876],[7.625967,7.404450,6.739485,1.256108,-5.594611,-4.968677],[-8.100577,9.565782,-1.595421,-3.445166,1.344107,-5.840494],[-1.353308,-1.018871,-1.859979,-8.505663,7.624053,5.162141],[2.070487,-7.848569,9.622282,-6.210845,4.435823,2.344993],[0.057096,2.714488,-6.508770,-3.447181,-7.154321,-8.547188],[9.913831,-7.288406,-0.421655,3.504393,9.964810,-9.855832],[-9.586468,-9.858930,-4.902097,-0.107323,3.444265,-3.515087]],[[4.618121,-4.545064,6.389146,-8.601191,-9.523024,-4.318898],[-9.678732,-5.208225,9.710895,0.897509,6.908404,6.818105],[6.828718,6.550063,2.281739,-0.180041,-3.224867,-0.186341],[-7.079183,-5.063257,-1.547883,5.773800,-5.942050,-7.840515],[-5.264096,-3.538660,6.907591,-1.966905,8.262787,-1.765057],[9.074279,2.975899,5.541547,-9.460732,-8.648959,-9.784015],[6.035446,-4.307960,7.894173,8.622841,-0.734831,8.649228],[-2.575948,-0.921016,2.381579,-5.774823,6.307479,-2.086708],[-2.657890,-2.291633,9.372854,2.338015,1.046822,3.462507],[-9.149472,-9.010940,-7.486509,-3.275117,1.558684,-8.780135],[9.104070,-1.512189,-1.952604,-8.211816,3.164142,2.575641],[7.381669,5.314468,-5.160034,-9.594239,5.315874,6.197101],[-2.039747,-6.750336,-6.917898,8.716737,-1.223952,6.649538]],[[-1.654954,4.552889,-9.800482,4.354677,4.953134,-6.590903],[5.499330,-5.218828,-2.207876,-9.807931,6.397165,-6.533252],[9.042990,-4.041849,2.071583,-3.740850,3.538646,2.981206],[-8.131028,7.678326,9.035157,-7.720465,-0.316108,-2.751479],[-7.935130,-3.651953,6.459483,-8.160590,-6.516429,-4.774322],[-6.837891,1.711435,-0.230542,0.871033,4.261708,-1.357051],[7.767151,4.402671,4.115102,-3.186622,-0.126694,-9.878521],[7.752962,-9.311639,4.843840,-4.558539,3.011026,3.044510],[-9.290497,7.450660,2.310502,5.850506,-4.319697,5.533885],[-8.928393,6.151231,-3.756374,-9.796609,-4.476895,5.549353],[-7.725248,5.384348,7.530956,5.932387,-5.817631,-5.367424],[5.632021,-6.535648,-4.302671,4.933676,2.836005,-8.090756],[-1.556710,3.262883,0.133032,-1.012592,-2.755882,-6.158770]],[[-6.912025,-4.352714,-1.613915,3.358051,-2.687332,8.963345],[4.904329,3.205912,0.399170,-8.756038,-5.945953,8.147742],[-6.434204,3.708401,0.209808,-1.694784,-3.200284,-5.830567],[7.974541,-3.198809,1.812377,0.819035,-3.704595,9.446033],[-9.491195,-7.541675,-4.341241,-4.386066,6.955388,4.835658],[3.543512,8.484796,-0.306673,-9.906716,8.846754,6.089677],[-0.722829,5.945641,0.237537,1.122665,-7.050046,5.800397],[4.512222,0.634752,9.599484,5.687366,-1.639314,-2.838154],[1.105730,1.642591,6.859499,7.225334,6.002596,7.741424],[-1.033238,-7.241808,-7.328525,6.003218,6.847029,-4.521178],[5.769137,-1.120003,-6.509044,3.756921,8.611112,-8.968683],[2.916150,5.573434,-3.779159,-2.928116,2.593593,5.491614],[-9.735115,9.389508,5.462129,-1.768598,0.402211,7.034407]],[[-9.788270,2.597647,1.764928,-4.470936,-7.443493,6.316621],[-0.660270,5.635337,-3.675429,7.883178,9.210493,-3.786090],[4.459689,2.063676,9.332960,-6.799457,4.086373,-6.575973],[-9.488733,-2.163355,-9.329459,7.980559,3.018906,-3.257324],[-9.318875,-2.970996,-0.649655,-9.637699,1.948028,-1.010678],[-1.999146,-1.641341,3.826049,-2.128051,-8.234415,-6.556059],[-7.769492,2.265399,-6.556878,3.896125,-0.448438,-9.188416],[8.527199,-1.322363,-9.466707,4.225299,5.671421,4.921440],[-8.340466,-0.594674,-4.799536,8.306549,4.775764,-8.002683],[-8.485367,-9.190531,1.185256,6.246829,7.014321,4.219254],[1.005182,2.283578,8.433272,3.355433,-5.733718,-7.649302],[-7.413388,-3.038525,-0.021584,3.376951,-4.935662,4.366736],[-8.615308,-8.537596,-3.718170,6.762056,0.171382,2.279706]],[[4.157303,-6.562208,-7.596844,-9.200612,6.569043,-4.715051],[0.261759,-9.837717,7.269099,6.123004,2.814498,-6.019029],[-1.543309,0.229566,-3.876819,-5.440698,8.910088,9.964605],[3.031116,-8.173143,-9.131516,-5.986760,-5.654716,-1.107291],[2.001187,1.524402,9.961640,-6.053046,3.397938,6.159492],[-4.810008,-9.831420,7.882731,-4.852926,6.863148,4.339671],[5.642583,-8.885267,-5.420523,-4.585669,-4.922861,-8.897783],[0.067862,7.265889,-1.960056,-7.370384,-5.440108,-2.706995],[-1.702798,-6.035324,2.939199,-4.780240,-8.100761,-8.886601],[8.525542,-5.216043,-5.662283,2.953325,7.177867,0.676737],[-4.106407,4.297394,-9.664855,-8.540646,-7.401551,-0.727820],[-9.156198,-1.069952,9.488401,8.826566,1.339960,9.921944],[6.127069,3.325260,4.128575,-1.265443,-8.797931,3.799217]],[[-8.225073,-2.344486,-1.985930,-1.743140,1.933121,8.933891],[-4.133444,0.652695,-0.957655,1.078515,7.694002,5.275123],[6.342083,-3.900383,7.136705,-5.287050,2.691087,-8.614220],[-5.613169,-2.700896,5.931536,-7.053021,1.479076,-1.533405],[-3.658238,8.301414,-4.548064,0.696958,-9.763360,-9.066030],[9.543471,8.495632,7.226842,-5.175141,2.201820,8.324976],[1.994091,-4.648105,9.544166,-4.482601,-9.937585,0.353537],[-3.406500,9.148960,6.960226,-9.972225,-8.654525,0.611063],[0.366175,1.295122,0.473861,-9.975446,6.017622,1.321467],[4.819015,-8.524388,9.448774,-4.240598,-0.608368,-8.843428],[5.187568,-3.347261,2.259734,7.685164,-9.503907,5.740180],[3.580767,-1.900222,-7.558822,0.214339,4.386497,8.274109],[-7.560266,8.564528,9.119308,-3.671417,-5.065459,2.995682]],[[-2.092543,5.347721,2.022596,-5.725271,-2.291102,8.825476],[-9.468421,-6.918390,3.522892,-4.761224,0.551490,-8.098632],[-4.907162,-5.371516,-3.333809,-0.950780,-1.039521,2.858634],[-6.891364,9.793853,-3.461129,1.088520,5.451554,-2.028760],[7.444180,-3.927958,-1.517370,-8.196818,8.273271,-0.237007],[-0.438705,2.045437,-7.496839,-2.273829,-8.108062,6.530282],[1.565138,-0.974852,-8.037796,1.013266,5.265352,-1.871039],[-4.757854,-9.079507,9.257257,2.947214,5.302835,0.942937],[0.666966,-6.240439,2.363713,-5.523153,-3.848185,9.258483],[-6.095278,5.993558,6.927907,7.064757,-7.422457,4.023815],[-3.418739,9.946960,0.523006,2.570594,-7.222269,1.756955],[7.364923,-9.027614,-9.050379,-8.766304,-6.555625,-6.614600],[-0.905844,-1.824164,-8.743996,-8.049840,-6.043060,-4.755314]],[[-7.929656,0.372135,-1.354762,-1.324788,-7.893037,6.539881],[3.959059,2.949680,6.761314,2.924235,-7.335462,-0.408317],[2.987656,5.131290,-0.361259,-3.613527,-0.431704,-6.744588],[-1.961241,-3.625481,2.657357,6.898373,-1.410494,0.973090],[-1.690103,6.249961,-0.952015,6.481020,-2.040847,0.036093],[3.358338,-4.950826,3.993770,-2.535410,0.755182,5.206922],[-4.399982,9.818747,5.157794,7.285334,5.781648,-0.697519],[-5.282960,-5.437967,2.917349,-9.009516,5.000302,-1.316208],[5.357079,-3.271932,2.104614,5.077687,-3.216792,-5.602901],[4.678265,1.489785,-1.233159,-6.639058,-2.003634,-6.073752],[8.227711,-2.603727,5.701464,9.493700,9.262008,9.661154],[5.756840,-4.561389,-3.394289,-0.217239,-9.699170,-6.075575],[2.170777,-0.078889,1.149676,8.940389,0.792808,4.286727]],[[-3.850461,7.994234,-0.973585,9.246930,4.993183,0.430997],[-9.514717,-9.371172,-1.913549,-4.230305,1.434017,4.418219],[9.595282,9.655450,-3.029781,7.465586,-1.279669,-8.724195],[6.713403,-4.311880,1.407775,-5.868612,2.336991,3.241673],[-6.117142,-5.962959,-2.857034,-3.849105,-6.328969,-9.946088],[1.347030,-9.396704,-9.719527,-7.123933,-4.431906,-1.183915],[3.717388,9.568034,8.976134,-0.583650,-2.039995,-6.362334],[-2.039324,-7.976215,-0.694736,4.263886,-8.040807,7.038482],[-1.676578,4.766942,5.117781,-4.274442,-8.274472,0.787708],[-2.175731,9.636526,-2.906738,2.637329,2.810704,-9.938591],[-4.610787,5.477581,6.330184,6.125557,-6.454033,-3.600781],[9.891551,-2.604830,-9.892146,9.128431,6.718655,-0.589915],[-8.280698,-0.231816,7.425210,-3.133756,-3.847649,0.860853]],[[-8.584379,5.453547,4.928064,-4.777150,8.358486,-4.774175],[5.886948,-9.891583,3.552180,-8.849234,6.027510,3.108569],[1.067248,-0.878675,5.851106,9.666542,9.507310,-3.621150],[-4.500990,4.950227,-2.288330,-3.161760,1.423290,-8.172700],[0.986385,8.104409,-1.589628,7.291955,-8.567061,7.569599],[9.344380,4.188248,-3.997929,3.089850,1.768914,-4.094836],[1.533139,2.281678,0.113634,9.821249,-6.210501,4.136358],[6.493624,3.436742,2.080736,6.614535,3.911635,4.895325],[-3.093717,3.694553,8.312934,6.085402,-8.438415,8.947954],[5.325214,-4.369213,1.768347,-7.683282,-9.610319,-1.553154],[-0.205254,2.115025,0.658604,7.195405,8.698147,7.662022],[-9.623827,2.014033,7.728232,6.190097,1.485614,-7.539615],[1.249858,9.483672,-6.113672,2.127367,5.041620,4.145428]],[[3.764858,1.015429,9.713504,8.749758,6.137235,-1.478519],[-7.032833,6.731903,3.465796,-3.629227,-1.728320,-5.115366],[-2.917360,-0.142903,-6.261247,-7.755086,-7.054424,1.252617],[-8.725330,-8.193416,1.625271,-6.122580,-5.439654,-3.911692],[5.735502,-7.901036,-8.216205,7.730734,7.521753,9.095486],[1.407259,4.467698,9.754652,4.058119,-2.728012,7.865252],[-0.747183,8.830344,-7.022248,-0.563994,-3.324672,8.862324],[2.094989,3.432231,-7.020015,9.343247,-9.322715,-3.630952],[1.566437,5.407226,6.672869,5.329079,-7.489143,-9.619336],[-8.973002,2.671943,1.637818,-3.295329,4.135756,6.022592],[-4.253256,5.869385,-3.733410,-9.974228,2.422140,2.469348],[-4.163317,-0.619628,9.288771,5.672695,3.237945,-7.805264],[-1.411578,2.323931,0.661480,3.303931,3.788913,-2.727414]],[[-0.914694,4.716828,0.495035,-8.644326,-6.713642,-4.822296],[3.598002,6.192369,-1.974786,-9.797522,-7.076897,-4.941782],[-4.737119,1.863693,-2.638744,4.472353,-0.451773,-9.238348],[1.198569,-2.897842,8.978576,4.943027,-8.239506,1.751528],[4.082531,9.806238,-6.222472,4.086736,-0.013010,-5.267993],[-6.353020,9.974902,7.198261,-7.384283,8.527566,-1.014756],[-0.109769,1.603487,-3.919552,6.820768,-7.738982,-5.668408],[3.775910,-4.016730,-2.209280,-6.476046,-6.473773,-3.299244],[-1.093571,2.989909,2.969401,-3.731381,6.091797,-2.613396],[0.500210,6.965890,9.332757,-1.291349,5.521409,-0.058852],[8.626291,5.786603,-7.344000,7.059132,-3.543946,-0.766305],[-3.237413,7.118676,2.502560,-0.816868,-3.450477,-8.885927],[3.730258,-9.434638,9.941201,-6.512968,0.800033,5.371456]],[[5.729799,-1.977965,8.469324,5.604371,-7.248891,3.107277],[9.179472,-9.102430,-2.022789,5.425661,7.235884,-6.687971],[-9.103362,4.792620,-7.735714,5.349777,-2.185687,-6.672216],[8.087546,6.339782,-1.993494,6.264167,-3.123766,0.726623],[-4.151573,-3.772493,-7.273620,8.962442,-2.242204,3.230209],[1.994086,-3.654079,-1.275848,3.274137,0.141032,6.377023],[5.014383,0.271761,-2.425243,-0.887837,5.072272,-0.393454],[-3.998043,-4.955254,6.120263,2.670708,-2.647381,-5.568525],[-2.260629,-1.688048,-4.732152,-5.526249,-1.689829,-2.590344],[-8.110289,-5.080390,4.958957,-9.171019,-7.196184,-8.579971],[-6.960054,-5.397328,-9.427281,3.663435,-5.486506,-3.449006],[-0.987613,-6.643850,-9.855118,8.764325,-3.238082,-9.771347],[3.948162,9.319983,1.188914,3.020174,1.807890,-6.219929]]], dtype = "float64")#candidate|500|(16, 13, 6)|const|float64
bop_501 = relay.floor_mod(var_499.astype('float64'), relay.reshape(const_500.astype('float64'), relay.shape_of(var_499))) # shape=(16, 13, 6)
var_504 = relay.var("var_504", dtype = "float64", shape = (16, 13, 6))#candidate|504|(16, 13, 6)|var|float64
bop_505 = relay.less(const_500.astype('bool'), relay.reshape(var_504.astype('bool'), relay.shape_of(const_500))) # shape=(16, 13, 6)
output = relay.Tuple([bop_501,bop_505,])
output2 = relay.Tuple([bop_501,bop_505,])
func_529 = relay.Function([var_499,var_504,], output)
mod['func_529'] = func_529
mod = relay.transform.InferType()(mod)
mutated_mod['func_529'] = func_529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_529_call = mutated_mod.get_global_var('func_529')
var_531 = relay.var("var_531", dtype = "float64", shape = (16, 13, 6))#candidate|531|(16, 13, 6)|var|float64
var_532 = relay.var("var_532", dtype = "float64", shape = (16, 13, 6))#candidate|532|(16, 13, 6)|var|float64
call_530 = func_529_call(var_531,var_532,)
output = call_530
func_533 = relay.Function([var_531,var_532,], output)
mutated_mod['func_533'] = func_533
mutated_mod = relay.transform.InferType()(mutated_mod)
const_544 = relay.const([[[-0.009173,2.908914,3.383996,-6.945704,-3.814378,-8.408186,-3.854429,1.188861],[8.995452,-4.336349,7.617305,5.545791,0.338495,4.067670,0.754598,3.894888],[9.023836,5.979922,8.498054,-1.199788,-7.309915,-7.079584,-4.853507,9.306946],[-5.456459,-2.278156,-2.488744,-0.727213,3.662570,3.221640,-2.400695,-4.156480],[1.958723,4.637324,9.518051,-2.523717,-6.027086,-5.310948,-9.241320,-2.556175],[8.079470,5.376541,2.327002,-4.229888,7.564785,7.413246,-9.251454,3.982983],[0.798695,-7.993586,9.268014,-3.288567,9.159549,-9.662260,-2.849197,-3.296846],[4.169200,0.256550,-4.278070,5.777620,3.151631,0.634011,-7.312150,2.230232],[1.273698,-5.726252,5.235802,-9.292338,7.191115,-8.242942,-6.828542,7.576380],[-5.989889,-0.601878,-0.698258,9.484317,-3.336973,-6.938901,8.967934,-4.192787],[5.816539,4.231565,-2.252866,-5.394622,-8.927433,4.811969,5.544835,-2.811193],[-0.951413,-2.880531,-1.561718,-0.705682,8.141912,7.889291,8.831824,6.045523],[-5.139837,0.976234,5.994595,-4.729084,-3.441654,-8.611333,2.250191,-5.318774],[8.022238,-2.268991,-8.385807,-7.174967,6.684166,-4.280561,8.208691,-8.187617],[7.716201,-8.215175,2.412080,-5.227219,2.175041,0.557610,-2.745768,-8.753397],[3.719851,9.189375,4.913686,9.608544,-3.345546,8.454581,9.377570,2.577959]],[[9.230812,2.311801,1.766577,5.033404,-0.619905,3.568509,-6.856477,-7.170464],[-2.345166,3.749383,8.311907,3.916643,-3.827407,-6.299810,-2.384503,-3.250662],[8.304315,-0.388684,-0.814791,4.361109,-7.647257,5.246246,-3.470239,-7.064668],[4.155447,7.208171,-6.534447,-7.057828,5.929302,5.264741,4.213219,-5.393894],[0.518159,2.696432,-6.181030,0.720610,2.920324,9.054852,-1.114603,-4.860516],[8.592226,5.242390,-7.906325,-0.545530,-6.388765,7.947165,-0.002949,-7.116683],[-8.919827,7.627162,4.191032,-8.651688,2.702362,-0.012181,0.808206,9.317165],[-1.468958,7.849669,9.139331,2.008071,1.779255,5.024089,-9.657471,1.443239],[9.139802,4.175751,7.639524,9.048308,3.162856,2.095788,-9.438861,0.752311],[5.214225,-4.882725,-2.321407,-6.918974,-8.117518,9.709893,5.964720,-2.261969],[4.012040,8.317333,6.937667,5.959192,0.855708,4.031018,-9.525602,-3.687031],[3.504316,-3.253474,-3.574763,3.854849,-5.088705,9.410996,-2.176152,-4.545029],[4.504981,-1.352226,-5.411597,9.982930,-2.150616,7.085946,2.920602,-4.635887],[-8.872504,7.516199,0.500673,-4.895030,9.202911,-0.170166,3.939539,-6.053272],[-4.762859,1.350884,-3.367644,-4.324271,2.647030,6.199603,-7.423002,-2.118535],[-1.322999,2.824541,-7.227446,3.332822,-2.418003,0.257763,-4.959180,-7.800668]],[[7.430484,3.593915,5.759568,-0.193636,-5.269904,2.096636,-4.180624,1.228900],[4.468196,-7.016126,-9.821089,-4.495155,5.307963,-8.292614,1.589635,1.997895],[-1.176919,-5.356719,-2.920674,7.463584,3.925168,9.262829,-4.169527,-2.032686],[-6.440724,8.815551,9.515591,5.903016,-2.315420,-6.606258,-0.899498,-7.693900],[6.564270,-5.640979,4.887128,-9.809284,7.987509,-0.203381,-8.954412,9.019428],[-8.064042,-3.637981,-2.652138,-1.553838,4.589114,-4.984769,-9.790596,4.108042],[-3.435059,-5.606900,8.953523,-6.122214,-4.924678,-1.773275,2.709037,3.384607],[-5.503209,7.229245,4.973339,3.639801,7.218746,0.318493,-9.466493,0.187600],[-4.764622,9.913789,-8.677622,-9.955670,-3.197366,5.766663,6.770760,2.002476],[-4.433750,-3.031663,3.953630,1.310974,-3.096865,-0.852254,7.851711,7.676939],[3.367668,3.957751,-8.066719,8.868629,-7.492184,-4.789466,4.492137,7.657114],[4.705342,-7.630556,-5.894644,8.747351,-0.729978,4.411100,8.568010,1.568181],[6.005190,-4.588258,3.553653,9.877386,-9.824045,4.783325,3.351186,-4.351585],[-0.991324,5.108503,-6.467264,2.398500,6.147112,-0.914083,5.261595,4.798876],[-7.265263,-4.185997,9.241967,4.040051,-1.249117,-9.336826,9.644544,-0.031359],[9.691078,-4.470050,-2.462368,-1.891473,9.491132,-1.524808,-7.994530,1.014077]],[[8.211829,-5.785846,4.139004,-0.943624,-4.978917,-5.661929,2.234710,-9.028377],[-1.233839,-4.937936,-1.794511,-8.276614,7.733133,7.729618,9.350751,-7.058270],[-3.778560,1.195357,-5.062994,8.580782,-3.557290,6.166132,-1.831813,-5.204322],[-1.701808,8.853403,1.212149,-9.839836,-6.659745,9.344064,6.956801,-7.520840],[-4.940842,9.078140,-1.620381,-1.243620,-9.444613,-1.026482,5.706469,-0.937837],[-7.271422,-3.986853,5.292353,-4.611291,-5.930887,6.317894,-0.538973,-1.942545],[-7.198484,3.450509,-6.680264,3.760208,5.235868,-1.634254,7.084697,7.303805],[-2.502313,9.004584,-1.963883,-1.837177,0.041644,-7.027532,5.168982,0.981806],[8.196773,-2.249337,-3.674185,-5.129014,-4.318445,-4.962496,0.088252,5.588850],[5.727563,-9.541303,-3.561011,2.051592,-3.655270,0.690578,-6.411637,4.591611],[-7.679226,7.054539,-3.912637,-3.969194,-1.349443,-4.886007,-6.182542,-6.874932],[-7.328393,-9.668380,0.505639,5.562901,9.327491,1.848850,9.903200,1.325707],[6.248784,-6.239881,8.476624,-7.244112,6.447785,6.207602,-8.058639,5.271341],[-0.474361,8.605641,0.538705,-1.688521,-9.057526,-6.347519,-0.918955,0.722669],[0.298368,7.767555,-7.595528,-4.756947,-1.691784,-8.925363,0.923927,-5.865729],[5.575046,6.946401,-5.959369,8.519681,-6.167071,-8.866575,-2.988794,-1.957565]],[[6.888002,-7.422226,0.303700,3.098365,-1.557174,-3.796000,5.776069,-2.582157],[-3.466388,-4.089988,0.793225,2.570035,8.753467,-3.412700,7.947741,3.027334],[5.472134,8.339373,4.029424,-5.958564,-9.031449,0.850576,6.961495,-0.651298],[-4.718529,-1.099475,-3.708975,8.157271,0.158311,4.422587,-7.198078,8.451585],[-0.638469,-5.527325,6.613207,-8.882661,0.819576,-4.471252,4.731239,-3.182440],[6.494858,2.106728,1.672146,8.433910,-6.838101,4.078186,-6.944593,-3.262375],[8.794220,-8.981290,-1.165021,-1.319546,-3.351889,-8.449375,1.636302,6.754405],[-5.156102,8.830774,1.929231,-0.187819,7.019524,-2.741174,8.560603,8.017581],[0.539585,8.611206,-3.170487,3.704728,-2.971870,-7.165767,9.605175,-6.277905],[-6.778507,2.829087,8.621874,6.617134,3.372031,-2.302755,6.528614,-0.615956],[3.035588,-2.742911,0.708855,-7.447045,7.058298,-1.076938,0.188787,-2.369229],[-2.209099,3.715770,-8.079541,-0.449008,1.949079,-1.170628,-0.027529,5.278817],[-8.271986,9.854445,-3.983820,-3.315717,-1.139269,-7.013553,6.211827,3.482048],[-7.591252,0.378726,-1.959686,-0.175017,-8.315374,-4.005033,4.838703,-1.221611],[2.197636,-7.268096,-5.688277,0.067442,4.841752,-7.789867,1.034144,-7.091521],[-6.340402,-3.929863,0.901687,-6.815046,5.141345,2.858085,0.149144,-5.368703]],[[3.751006,-8.632211,0.579797,6.007445,4.245585,-0.720930,1.596145,-0.689458],[-6.179085,-4.101654,4.698576,-4.976509,8.398664,-9.782894,3.278598,8.787292],[7.174707,-7.625606,-1.892398,9.188736,1.392514,-5.611954,-9.882189,0.478242],[5.344841,-6.390974,-8.254468,2.146364,-4.667526,-5.316319,-8.936716,5.339316],[2.726867,8.847361,5.455543,5.962488,-4.209267,3.117736,-7.081769,2.350081],[9.871623,2.752769,-1.414660,5.241583,-6.819892,7.702308,-9.523338,-9.718620],[-6.659526,9.320158,-1.110144,6.958714,-6.072409,6.326228,6.439341,-0.636045],[-8.243719,-3.501292,-6.009707,-4.850976,-3.816766,5.409889,-9.178537,-7.387240],[2.460343,-9.759663,7.637502,-3.522962,-3.922400,-7.101124,3.782144,-4.843105],[-1.048335,-4.512506,7.143047,5.063923,-2.588512,-0.581863,-8.507329,-8.526043],[-4.149837,8.153258,-3.911704,4.005255,4.051586,-0.369908,-1.832805,4.961943],[2.345310,8.785056,-1.480116,-9.500487,2.313253,4.044118,-9.950413,-1.415699],[-3.972064,-2.008195,3.697550,9.724645,8.317835,3.013401,9.651298,8.537850],[2.682464,3.433681,8.148935,-9.488072,-0.280516,7.622335,2.943044,1.859380],[3.018564,-4.848437,3.342074,-0.634473,4.741886,-7.596626,-0.123571,-8.380712],[-1.896377,1.310412,5.257889,-2.624709,1.725568,-1.972325,6.196367,-7.143389]],[[4.892115,-6.598773,-2.885079,-1.089821,-6.052672,-2.322253,-5.891972,-0.823100],[-5.583058,-0.108058,-8.530405,6.302810,-8.618759,-0.982506,7.613182,4.031084],[-2.711201,0.233570,-6.543727,-2.630604,-1.163692,8.055769,8.717829,5.639962],[6.874169,-4.342535,4.377125,9.678280,4.204938,9.106953,-0.216355,-9.666971],[-2.046447,4.218092,7.213858,-8.461821,6.205986,-7.789171,3.949496,-7.103464],[2.919389,-2.857301,8.512946,2.497462,-9.921274,1.676346,3.532682,3.209939],[-8.163143,-2.095398,-0.208191,6.555803,-6.134864,0.394022,-5.256196,-1.270872],[-7.092285,-7.313628,-2.388155,-2.943072,-2.097793,7.547191,9.490881,-2.729695],[1.934266,3.082532,6.599918,5.005562,-0.424579,7.253701,3.045184,7.792491],[2.543833,3.488362,8.909379,-8.519813,6.238140,6.100749,-6.806072,-5.102608],[-1.069017,5.306202,0.501445,0.529529,8.898145,-5.157318,-1.048358,-6.686580],[2.175431,4.850655,-9.545628,-4.596673,9.063857,-1.977718,1.502983,9.800538],[4.887293,1.655300,-8.679963,-8.049545,-9.932266,-2.209858,-4.202152,-9.702971],[-1.856528,-9.748753,9.888723,-1.628899,-8.495520,-5.328241,-7.778353,9.624504],[-1.767503,-6.602114,5.753889,0.042837,7.874873,-9.028003,-0.339241,0.011824],[-4.710002,3.776582,-9.921728,-3.673326,1.978433,8.728156,5.693098,0.349042]],[[1.426678,-0.046700,-6.662711,-6.957014,5.657051,-7.900298,3.474479,-2.055011],[9.572657,8.717998,3.363743,2.884651,-5.099233,-5.110651,2.233343,-1.890813],[9.471470,-2.786018,-8.340192,9.239597,9.088536,1.151129,6.477565,2.591653],[-6.848484,8.325119,-7.353202,-0.416907,3.768349,-8.473881,-1.134532,7.029079],[1.637311,2.801954,4.831380,4.544008,-7.848722,8.147985,-9.710980,6.187302],[-7.384514,8.037031,4.243258,1.456644,-8.720361,8.746070,-0.581268,6.867994],[-5.129070,4.201331,9.920935,6.039907,-8.510855,-0.280135,8.919985,4.216473],[-6.303061,-5.978375,-8.169471,-1.715413,-5.878190,7.185141,-7.722573,-8.379804],[9.379475,-1.717309,0.021467,8.259299,9.094499,-4.810189,9.210783,-8.365276],[-7.496872,9.914173,-3.566036,-0.629255,9.298322,-0.996796,-4.326906,9.036070],[-4.690832,-0.897299,3.205878,6.690318,6.043642,6.656866,0.908267,-8.288794],[-2.901084,-2.154780,8.815574,4.267575,-8.216072,5.235772,5.765840,0.616163],[-6.204642,6.923895,7.521061,-4.081433,-0.276294,8.505164,2.437497,-0.372193],[9.950957,4.182973,2.638926,3.671004,-0.233601,-8.153445,0.368947,9.122276],[2.961383,1.833014,-4.014901,-3.948339,7.835336,-0.181587,8.190698,4.830589],[-6.228708,-3.934321,9.694420,2.643496,-9.663569,4.951605,8.792031,1.288552]],[[2.048238,0.523665,6.969552,1.645485,0.286077,2.604866,-5.974462,9.140210],[7.924221,-7.621403,-2.806699,-3.348513,2.892032,-9.264306,3.534362,2.715588],[3.731804,-1.456309,-4.837429,8.409626,2.874838,4.556278,3.676744,-1.819974],[-3.899106,-2.070632,8.389334,5.317425,-6.759311,1.775100,1.295781,5.021624],[-5.149560,3.188912,3.375492,-2.696220,-7.821308,-5.282397,2.539792,-1.788405],[2.685127,-9.625120,-8.654325,3.289967,6.666680,-7.608076,9.720012,9.881967],[5.284104,8.532672,-5.564566,7.284716,8.955183,-4.486583,9.693687,-7.505847],[1.046397,8.146730,-7.242646,1.933402,3.047866,-1.214156,0.979788,-5.355047],[9.415745,2.444336,-1.985524,-4.473491,-4.446957,-6.513063,1.402043,-0.872146],[1.165147,-5.290405,-0.041121,3.446427,4.625049,-6.146028,-2.168159,9.850953],[-4.121231,6.890117,-1.249341,-9.421183,-8.927887,-7.206296,9.117211,8.691886],[-3.203972,-3.393503,0.667476,-8.399820,-2.321866,4.376094,-9.054247,-5.283681],[1.735126,2.533423,1.920707,-7.959914,-6.270125,0.731487,6.216384,-1.033297],[9.985843,-6.710766,-6.835554,7.109586,3.806156,8.748547,-9.216979,7.671113],[5.317301,4.916736,-1.448811,7.980825,-0.077929,0.999769,1.607672,1.477701],[-1.287583,0.511678,-5.244282,1.447572,4.599854,7.439419,-2.132960,3.534095]],[[8.027808,-6.469891,-6.881743,-7.118047,6.371458,-1.861545,6.148843,4.085887],[1.439394,4.357673,0.670955,5.240085,7.805226,-3.504559,9.029135,-5.760715],[-5.783312,1.904909,-7.416007,8.993140,6.884445,-5.937423,1.259402,-5.708815],[-1.672470,9.033425,3.212564,-2.554259,8.517016,-9.142062,-7.039883,-7.204719],[-5.800835,8.503818,6.067006,-2.388123,-7.925270,-3.901285,-8.879597,-4.080077],[-8.329476,-3.381084,-7.357707,-7.030352,-7.599600,4.422279,9.023566,1.373478],[0.945783,-2.490487,-0.522503,2.760588,9.479932,-5.094375,-7.415536,-1.611583],[-0.906368,-3.074193,2.251779,6.738120,-9.650085,-3.466294,-1.266089,7.181146],[-8.104309,-8.843862,-8.141190,1.528552,1.550390,4.095008,-6.296259,-7.084177],[-3.194702,-1.878280,-7.303431,2.885173,-7.629716,-4.736041,-9.908933,-2.418935],[-0.014041,4.463512,-8.638752,-0.483050,-7.504437,5.100973,-7.634923,-0.503295],[3.043112,-9.201533,-2.832042,-4.592267,-6.581032,3.289070,-0.759347,6.310876],[-7.704685,5.570738,-5.842000,4.653028,9.485125,6.949235,-4.654745,-2.157181],[-5.970210,4.597159,2.176029,5.370501,1.523449,-7.862158,-7.014339,-5.902150],[-4.009391,5.827368,4.214439,9.039612,-8.281829,-7.293443,-0.740624,-9.003756],[-5.014374,5.906962,0.355441,8.215134,3.963451,-8.135643,1.067625,7.997514]],[[-8.052925,-8.489520,4.499242,-4.873235,9.211488,-6.296569,9.249117,-8.805694],[2.227227,7.398799,0.236356,4.755891,-8.935876,-5.194191,-7.047001,4.345934],[9.868149,-1.029431,-0.555527,-6.078209,-7.135313,7.874671,0.878509,5.696339],[-8.885645,6.201612,8.985273,-8.374436,-9.244844,0.517417,-3.452477,1.852556],[2.327345,-8.388334,-7.011517,7.460264,-1.506259,-2.602187,-2.057858,-3.648424],[5.975650,-8.128834,-5.766008,-0.111583,-1.133493,2.705485,5.139903,-3.672140],[-7.595000,-2.684287,7.104657,0.031888,-2.046033,7.717692,9.073807,6.349089],[0.451838,9.598376,6.072186,-6.226125,-2.708867,-7.417941,-2.988234,-2.463035],[-3.431922,2.280053,-4.424703,2.979679,-6.193247,2.853211,-8.952357,-9.524198],[9.146816,5.950394,-4.027132,-2.445309,7.834826,-9.296429,4.190423,-8.429305],[9.382475,0.366954,5.926537,-2.798582,4.882302,3.860042,9.255980,4.807722],[-8.558884,2.768672,-9.223854,9.638390,-1.092631,6.661105,-1.101310,9.862339],[2.315622,0.665297,4.491598,-9.563765,3.936175,-2.808339,-6.219994,3.599187],[-5.096646,6.376634,-8.719913,-1.674457,-3.788647,-4.732462,-9.039409,-4.055040],[-8.609122,-0.808704,6.377548,-1.060627,-2.064212,7.000977,-9.355906,4.583888],[5.071967,9.659047,0.902307,8.054780,9.760336,-9.396736,1.515132,7.946402]],[[-3.847989,-4.839728,3.412935,6.909302,4.233628,-9.329706,2.295912,1.255108],[-1.626010,5.570619,-4.541686,3.864757,-5.188133,6.999492,-0.964423,-2.104779],[-1.829076,-0.051540,6.153707,-6.534310,1.729318,3.840942,-2.623256,7.017468],[3.346553,7.766164,4.982558,-7.851094,-6.819448,-3.921570,-4.546086,-6.988391],[5.815014,-4.901498,-8.088909,0.035726,3.020240,-8.516517,2.367063,-4.845172],[-4.828388,5.063388,-6.546976,-3.193253,5.771238,2.186724,9.795626,1.417180],[5.083652,0.090631,-8.209926,8.551858,2.470698,1.912021,1.293174,-3.511365],[3.543104,-7.612554,9.415310,6.911586,9.310789,-7.849122,-1.695606,2.957639],[-3.041985,2.490743,4.724152,-0.526343,-7.199583,-2.187242,-5.083283,-0.436226],[-5.595736,3.626935,0.721821,-4.256591,-0.196490,9.963517,-9.912640,-4.702237],[5.671587,2.950090,-1.576388,-2.016885,-5.607441,-2.991041,6.479473,-3.860067],[5.327581,2.986309,-3.426299,2.803685,-5.292732,2.469653,1.017956,4.654321],[6.206358,-6.944977,9.465930,4.765873,6.993740,-2.864921,-5.070114,-7.436981],[-3.647443,-3.602193,6.642126,4.009486,-9.992019,5.734543,-3.308491,-9.926457],[2.634940,3.301052,4.316207,-8.627924,2.750981,3.331314,-7.318970,1.543171],[6.689298,0.916699,-1.020111,4.002296,-9.970740,-8.141236,4.642371,-3.110067]],[[3.438725,0.386274,-7.576859,9.216982,-7.466302,3.218854,-8.799997,-9.676088],[-5.777180,4.790594,-2.863504,3.910748,3.047820,-3.850238,2.081135,9.471606],[-4.511099,4.983735,1.920033,-3.158276,-9.220973,-7.295591,8.177331,-6.636820],[-0.575371,-2.923578,-5.421351,8.442272,0.045918,2.145002,4.389551,-3.406586],[0.015791,-7.956779,-8.393281,1.174534,9.130336,-4.217009,-3.644632,-0.530765],[-0.689638,7.762723,5.815386,-2.780344,-4.367816,8.500091,-3.823910,-3.348347],[3.646067,-3.681087,0.473085,-9.760406,7.162381,7.058132,-3.429050,4.003331],[-0.266373,8.374243,0.363273,4.035056,4.297648,4.150727,-3.035503,-1.163841],[6.264976,8.809789,-7.908378,8.824838,-7.011673,4.826429,-5.256858,4.626904],[3.221855,-2.890022,-2.899611,3.470099,-8.001179,-1.656566,-5.703508,3.399259],[1.700783,-2.273620,-1.916930,-6.312819,8.284540,1.379638,-7.869380,-2.452902],[-1.887701,-6.516487,-1.024816,-2.282043,2.867771,1.865692,8.735191,1.310663],[-2.435836,-8.907201,5.282661,7.946513,-3.530103,-1.841969,-1.205378,3.775700],[-2.532701,4.575553,3.012592,3.829555,-4.489305,-6.161037,8.264170,8.879565],[8.346250,2.107124,-2.269898,5.456731,1.611358,2.552735,8.024844,-8.404923],[-6.392475,-4.790457,-3.475603,-8.552649,7.490080,-1.985853,-9.604465,-9.184686]],[[-0.143205,-7.825095,-3.501925,8.858510,-9.841840,1.213061,3.950318,0.541014],[-9.019370,9.395624,4.076114,1.308825,-7.468914,-2.230022,9.614168,2.673094],[-4.714332,-2.438238,1.387791,-2.048962,-2.742218,9.161457,-9.512838,-8.255367],[4.507377,5.065447,2.326859,4.985599,-7.324083,4.709163,-4.320578,4.982774],[-7.609745,8.310108,-3.657298,1.380099,-0.945173,-0.874252,6.168585,6.567283],[8.440372,-2.675861,2.477672,-1.833182,8.094310,-8.572753,-8.793577,-1.068590],[4.152674,3.075588,0.561903,6.701296,1.822140,-0.895439,-0.669633,0.066139],[-6.333731,-5.003470,7.619836,-7.752490,-1.531272,-0.842603,-5.893709,-4.131834],[8.832587,7.466572,-4.334009,-6.612453,8.522642,6.332193,-6.801883,9.433805],[-6.375083,-4.729578,-9.134948,-2.286789,9.950002,-0.556449,3.468141,-1.979658],[-7.134778,1.487983,-9.394795,-0.248568,7.928392,5.981170,8.094120,-7.794552],[-1.097668,9.697228,2.142091,-0.217397,6.607754,1.603805,9.170705,3.389143],[5.532757,-6.329721,-5.503842,8.317640,-0.322966,9.583830,0.577200,4.552951],[-7.037579,5.907453,-2.037628,8.030058,-2.730604,-5.227320,-2.845980,5.769630],[7.415281,9.434769,-1.493827,3.032473,8.797127,-6.496270,-0.212273,-5.829563],[6.060600,3.990516,0.150901,5.526455,9.306409,9.433126,5.653466,9.516951]],[[2.054206,-6.441802,-8.786120,-8.369241,-0.492615,-6.944157,0.822942,9.468977],[-6.129297,-5.156409,0.673400,0.313753,-0.843834,-4.822012,6.276143,-7.401758],[-4.212015,4.117133,-0.330550,-3.758941,-9.690116,1.540675,-9.058556,-1.851582],[7.482933,-6.000951,-5.430010,6.560352,2.700087,-2.435432,-0.770526,5.198198],[2.923506,2.963347,-3.154008,-6.530745,-8.257310,-9.278113,3.902029,-7.807070],[-1.350138,9.028442,-9.306197,4.249194,9.564161,5.863733,-9.220900,-1.780982],[7.754495,9.544304,-3.507014,-1.587978,5.178107,2.118619,-6.755616,-5.953100],[-9.072961,3.546758,-1.412459,-2.350213,3.973142,0.075159,-9.232932,3.032286],[6.585237,-1.767260,3.496726,7.002245,1.659382,3.503942,-4.114191,-6.555430],[3.756003,6.928367,-2.122710,9.384524,3.710035,0.898535,7.322981,6.914627],[4.316802,-8.967965,5.644454,-2.343059,-3.914116,-6.985743,5.018282,0.661314],[-6.017348,-0.322841,0.532528,-3.123097,8.894559,-3.139804,6.893867,6.855050],[7.820152,6.124753,8.121506,-3.357037,9.374423,-1.476289,5.063314,3.364106],[4.414320,5.606029,-7.977402,8.659213,7.554070,-6.923295,-6.884859,-7.382868],[0.033408,-3.037382,9.653502,-5.941072,0.582503,6.621703,-2.029347,-3.800701],[-8.503934,-0.357738,-5.181125,-2.084937,-5.834643,-4.280562,1.445732,-4.729245]]], dtype = "float64")#candidate|544|(15, 16, 8)|const|float64
uop_545 = relay.sqrt(const_544.astype('float64')) # shape=(15, 16, 8)
uop_552 = relay.atan(uop_545.astype('float64')) # shape=(15, 16, 8)
var_574 = relay.var("var_574", dtype = "float64", shape = (15, 16, 8))#candidate|574|(15, 16, 8)|var|float64
bop_575 = relay.minimum(uop_552.astype('uint32'), relay.reshape(var_574.astype('uint32'), relay.shape_of(uop_552))) # shape=(15, 16, 8)
bop_592 = relay.greater(uop_545.astype('bool'), relay.reshape(var_574.astype('bool'), relay.shape_of(uop_545))) # shape=(15, 16, 8)
output = relay.Tuple([bop_575,bop_592,])
output2 = relay.Tuple([bop_575,bop_592,])
func_596 = relay.Function([var_574,], output)
mod['func_596'] = func_596
mod = relay.transform.InferType()(mod)
mutated_mod['func_596'] = func_596
mutated_mod = relay.transform.InferType()(mutated_mod)
var_597 = relay.var("var_597", dtype = "float64", shape = (15, 16, 8))#candidate|597|(15, 16, 8)|var|float64
func_596_call = mutated_mod.get_global_var('func_596')
call_598 = func_596_call(var_597)
output = call_598
func_599 = relay.Function([var_597], output)
mutated_mod['func_599'] = func_599
mutated_mod = relay.transform.InferType()(mutated_mod)
var_690 = relay.var("var_690", dtype = "float32", shape = (13, 14, 8))#candidate|690|(13, 14, 8)|var|float32
uop_691 = relay.log10(var_690.astype('float32')) # shape=(13, 14, 8)
output = uop_691
output2 = uop_691
func_693 = relay.Function([var_690,], output)
mod['func_693'] = func_693
mod = relay.transform.InferType()(mod)
mutated_mod['func_693'] = func_693
mutated_mod = relay.transform.InferType()(mutated_mod)
var_694 = relay.var("var_694", dtype = "float32", shape = (13, 14, 8))#candidate|694|(13, 14, 8)|var|float32
func_693_call = mutated_mod.get_global_var('func_693')
call_695 = func_693_call(var_694)
output = call_695
func_696 = relay.Function([var_694], output)
mutated_mod['func_696'] = func_696
mutated_mod = relay.transform.InferType()(mutated_mod)
var_717 = relay.var("var_717", dtype = "float64", shape = (16, 4, 5))#candidate|717|(16, 4, 5)|var|float64
var_718 = relay.var("var_718", dtype = "float64", shape = (16, 4, 5))#candidate|718|(16, 4, 5)|var|float64
bop_719 = relay.divide(var_717.astype('float64'), relay.reshape(var_718.astype('float64'), relay.shape_of(var_717))) # shape=(16, 4, 5)
bop_727 = relay.bitwise_xor(bop_719.astype('uint16'), relay.reshape(var_717.astype('uint16'), relay.shape_of(bop_719))) # shape=(16, 4, 5)
uop_743 = relay.cos(var_718.astype('float64')) # shape=(16, 4, 5)
output = relay.Tuple([bop_727,uop_743,])
output2 = relay.Tuple([bop_727,uop_743,])
func_763 = relay.Function([var_717,var_718,], output)
mod['func_763'] = func_763
mod = relay.transform.InferType()(mod)
mutated_mod['func_763'] = func_763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_763_call = mutated_mod.get_global_var('func_763')
var_765 = relay.var("var_765", dtype = "float64", shape = (16, 4, 5))#candidate|765|(16, 4, 5)|var|float64
var_766 = relay.var("var_766", dtype = "float64", shape = (16, 4, 5))#candidate|766|(16, 4, 5)|var|float64
call_764 = func_763_call(var_765,var_766,)
output = call_764
func_767 = relay.Function([var_765,var_766,], output)
mutated_mod['func_767'] = func_767
mutated_mod = relay.transform.InferType()(mutated_mod)
var_904 = relay.var("var_904", dtype = "float64", shape = (14, 9, 16))#candidate|904|(14, 9, 16)|var|float64
uop_905 = relay.cosh(var_904.astype('float64')) # shape=(14, 9, 16)
output = uop_905
output2 = uop_905
func_919 = relay.Function([var_904,], output)
mod['func_919'] = func_919
mod = relay.transform.InferType()(mod)
mutated_mod['func_919'] = func_919
mutated_mod = relay.transform.InferType()(mutated_mod)
var_920 = relay.var("var_920", dtype = "float64", shape = (14, 9, 16))#candidate|920|(14, 9, 16)|var|float64
func_919_call = mutated_mod.get_global_var('func_919')
call_921 = func_919_call(var_920)
output = call_921
func_922 = relay.Function([var_920], output)
mutated_mod['func_922'] = func_922
mutated_mod = relay.transform.InferType()(mutated_mod)
const_983 = relay.const([[[6.184944,7.148324,7.874298,-9.004947,3.535186,-9.726015,2.520135,6.306070,9.284077,9.064655],[9.875466,-7.515367,7.009970,4.372239,-6.070736,-8.328146,-8.376233,8.223789,3.497038,-7.238320],[9.947254,2.793705,8.896969,3.592641,-4.820852,6.328457,-3.362786,1.234524,8.633746,-5.026087],[-6.830844,-4.243778,-2.901172,-9.725780,6.975144,-1.004653,5.679974,3.689849,9.732827,1.023010],[9.420845,6.820960,-6.297107,0.658943,-1.004887,7.647452,8.922838,4.714323,8.787478,7.165499]],[[-3.848444,-3.517678,-0.117377,-8.759199,-5.788792,2.906997,-7.815159,1.236466,-0.671749,4.599076],[-7.285979,7.842624,-0.586787,3.235507,-8.135853,-0.990268,0.489180,3.645399,-5.477552,9.095340],[3.581639,5.170324,1.881975,9.675531,9.546283,-3.110525,8.742973,8.434676,-7.941767,-3.965209],[-8.122295,6.373510,1.202395,3.850461,8.172440,-1.097144,1.219996,-0.195399,-5.396282,-9.193833],[-1.457030,-1.022767,-5.132568,4.249939,-1.665777,-6.132529,-3.858593,-2.501949,-4.722891,-4.431195]],[[-8.741616,-4.858476,-0.583180,9.740064,-2.135583,-9.008884,-3.385732,7.502741,5.164073,-6.386371],[-6.527261,-3.134601,-2.221111,-2.630959,-8.604746,-7.425326,8.798426,-7.850478,-7.729251,-5.602791],[-2.147496,1.157126,0.613901,5.945165,-3.745202,7.073587,-9.907147,6.234953,-5.639318,9.426121],[-0.156407,-2.885140,8.518878,7.226183,-2.782529,-2.056316,4.311598,2.521890,-7.469684,0.529929],[-6.131167,6.390419,-7.824318,-0.643560,-5.915419,2.513471,0.826277,-7.014009,-5.462264,-7.008701]],[[-8.507345,7.475463,0.810686,-1.796485,-6.092480,-4.732055,-7.597134,1.940984,-6.631457,-0.857781],[-3.598310,-9.536383,5.925919,-4.084023,-1.139923,-1.732604,9.632352,-8.435545,-8.273476,6.987829],[-9.099354,-4.036340,8.831944,9.474865,6.388632,4.444414,2.301137,0.441356,-9.852279,7.140220],[4.017277,7.441057,8.349983,7.170495,8.588175,-2.474322,-8.493773,-5.835235,3.918435,6.015473],[4.363066,-1.623489,-8.497485,6.993692,4.244198,-8.022937,-1.327492,0.869090,1.334340,-9.034401]]], dtype = "float32")#candidate|983|(4, 5, 10)|const|float32
var_984 = relay.var("var_984", dtype = "float32", shape = (4, 5, 10))#candidate|984|(4, 5, 10)|var|float32
bop_985 = relay.floor_divide(const_983.astype('float32'), relay.reshape(var_984.astype('float32'), relay.shape_of(const_983))) # shape=(4, 5, 10)
bop_1001 = relay.add(bop_985.astype('uint16'), relay.reshape(const_983.astype('uint16'), relay.shape_of(bop_985))) # shape=(4, 5, 10)
func_529_call = mod.get_global_var('func_529')
func_533_call = mutated_mod.get_global_var('func_533')
const_1010 = relay.const([7.713825,7.544053,6.948910,2.480884,-4.983359,5.321084,-2.821977,-6.406731,-4.793096,-8.479344,8.137106,4.181747,0.030882,3.496956,-0.040010,-3.986938,-9.235497,-9.047277,7.750746,8.835426,7.920756,3.774451,-9.383891,-1.151020,7.580968,3.024936,-7.046726,8.278904,-5.604611,-0.476362,6.423719,-9.537982,-8.942465,9.996546,-1.998487,-0.379590,-5.174848,7.874669,5.540318,6.336016,-0.641108,5.303881,9.487126,4.534005,-2.026848,1.482586,-6.255306,7.091160,-7.248937,-7.779053,6.859859,-9.705088,-6.358128,6.381470,4.138682,4.443511,0.770097,-7.882865,3.582954,-9.105842,9.667690,8.352555,2.401260,5.834617,-3.966355,-1.625946,-8.713349,1.958620,-6.300128,-7.747005,9.994671,7.142709,-7.050706,3.897495,5.777071,8.930162,0.965240,-3.230371,-6.327451,-4.221954,-2.740734,-3.642354,3.957666,0.373945,-5.623512,0.131713,3.682068,-0.090690,-0.965128,4.696753,8.392438,2.367267,-4.568881,9.547104,7.543297,8.265292,-8.677586,-9.780958,2.294900,5.912808,1.611320,8.048657,-6.385776,-8.456021,2.783878,-5.982301,7.629884,-8.693931,-1.965118,-3.635486,6.501722,2.185915,2.308967,-4.287449,7.300709,6.898552,-8.316302,-4.336661,-4.381893,-2.177173,-9.594124,1.686238,-7.566055,8.005311,2.033330,-1.806863,7.129782,3.903818,7.167329,3.254142,4.487011,4.900245,2.922084,-3.159729,-2.134696,-7.585509,-4.244959,-9.621284,1.018896,7.670507,2.220887,7.793119,7.239696,-5.715170,-2.697039,9.631023,-2.009604,-3.120330,-8.210894,8.675515,5.575772,-8.957191,5.191584,-5.755140,-4.644855,-2.112564,8.331667,0.147949,-2.375432,5.821384,8.509149,-9.362094,3.416591,-1.562225,-1.455077,-5.012021,2.651850,8.001996,-9.432249,1.815826,4.879349,-9.733121,4.766445,5.351023,3.930783,1.069949,2.768237,-0.113173,-7.083022,8.067634,9.485945,-4.939842,-4.779524,5.223257,8.845132,9.902849,-6.238608,0.900718,9.066171,1.418907,0.512283,-4.403238,0.136317,9.155893,2.279505,-4.082607,-4.822961,2.498599,-8.711578,1.441131,6.326129,-4.071007,9.669923,5.397260,-5.609698,6.111598,9.387751,-7.682101,2.122524,-6.454268,-5.871347,9.799904,1.375259,9.327522,4.062863,0.052713,-3.955968,9.979346,8.173347,-0.609339,9.189837,4.261677,2.450822,3.220363,1.988974,0.116029,-3.522601,1.529660,4.905171,2.194379,0.648396,0.485775,-8.503305,5.073404,-4.846294,6.425157,-7.847889,-9.054912,5.128655,-2.424830,-1.582015,-5.040940,-7.098589,-7.978608,0.721459,-5.113235,6.188075,-3.409687,-6.498197,4.675504,0.070869,8.060814,-3.120833,-9.029995,0.743707,-7.539265,-5.533076,7.998736,-3.266628,6.424686,2.854734,0.170387,4.378768,3.466281,7.734114,-6.196556,6.427450,-2.258663,-3.698520,9.466058,8.522197,8.752685,9.663237,-6.040424,-6.925315,1.641929,-7.395314,-8.332256,-9.479178,6.574864,2.419351,-6.193773,2.585469,-6.340632,5.187042,-7.482235,9.599973,6.109411,-6.487075,4.907172,1.118477,-3.482315,8.823733,5.032029,-9.925614,4.656911,2.635594,3.854472,6.684224,-6.893000,8.869185,2.155567,-9.045598,6.251545,5.053505,4.235616,9.838274,-4.417402,7.677129,-3.298885,-5.888876,8.432153,-0.191047,9.016916,-5.966985,-5.227380,-3.969152,-8.482756,-3.119060,6.437576,-2.075323,-8.051934,-7.300259,-3.215869,8.009302,-7.468781,9.165017,3.848299,-7.568410,1.246314,-9.411059,-4.870805,5.616735,3.649073,8.092594,4.351544,7.167021,6.563517,-0.747545,0.479889,3.606214,-5.121422,7.394221,-7.035344,-7.873027,-1.874698,8.510606,2.204251,-4.992490,2.868184,4.194412,0.992702,-9.919324,-1.800297,4.778956,-1.464858,5.201091,0.261607,-9.988566,-4.578390,7.923515,4.285839,-6.662193,9.748994,0.704801,-4.455171,-8.964926,-0.343973,-6.290292,0.845669,-3.754569,-1.855972,-0.204295,4.586265,8.504026,5.710544,-6.934685,-5.820112,8.911439,9.684760,-2.236944,1.450302,-6.540044,7.233901,3.311438,-8.921342,1.551805,8.982506,-0.542888,-5.076070,5.891021,-2.100766,2.991174,-2.438462,-9.063772,0.934425,5.252100,5.521120,-2.133919,-1.383178,-8.221158,-8.483158,-3.392717,7.532985,-5.430639,-5.984240,-1.546207,7.865407,1.238601,-2.891823,-9.524634,-1.855537,2.985493,6.669407,1.366944,3.786787,-8.090252,1.129198,8.828013,6.400703,-4.280351,0.221971,-8.755370,-1.804173,-3.111884,6.744360,5.743939,-3.407906,-2.050557,-2.932518,-1.684900,7.272874,0.774492,5.069931,7.526675,-9.722128,-3.764687,-8.144123,6.258301,8.613901,-3.978494,-1.273950,-9.454077,-0.654010,-7.478159,-8.588379,-8.214662,0.342356,-9.506145,-9.878236,7.200563,-5.113574,8.642158,-2.583864,2.191849,-7.564064,-9.512457,9.679933,-0.526444,8.856835,9.147583,2.875620,5.097863,3.878121,1.629973,-0.683915,4.422493,-2.712779,2.519566,0.824786,-7.159695,-0.242489,-8.987149,-5.620176,1.355180,9.638718,4.023899,-9.606987,1.146244,2.352242,-5.777258,2.444088,-7.518085,-9.490873,-6.898498,-0.929680,0.718494,1.330344,0.607956,-7.719510,-5.456255,8.538541,-9.743158,-6.480275,8.982048,-2.262172,8.399691,2.163182,-1.576889,-9.984891,4.413640,0.491175,9.670266,-4.276849,-6.700910,-9.017622,-6.265105,4.037800,8.345576,-9.053373,4.109674,-7.052618,-5.566617,-4.850200,1.303283,8.195081,7.560997,-7.314446,-7.251471,0.646979,7.538777,7.200180,2.487457,1.152615,-7.598907,-4.750524,-5.357530,8.926127,-8.225437,6.484895,-9.049664,0.277489,-3.473517,-6.874875,-3.260496,1.979853,7.631775,-8.105823,4.925296,-3.035156,1.669449,6.144448,3.560912,0.580076,-1.849644,-9.796344,3.693002,7.472503,0.076532,-4.065637,4.002071,1.412982,-4.495050,-8.484651,5.240920,-4.315983,6.959029,3.729667,-9.619101,-1.090341,8.472806,7.098041,-0.485115,-9.100205,-3.212381,-5.346205,7.688019,4.680754,2.977383,2.241388,-4.182383,2.872994,-2.424062,-1.849988,3.231521,5.598326,1.103999,-5.580231,7.048787,1.129465,0.635084,-0.773922,-8.559946,6.274092,3.502599,-7.846616,-5.717488,0.375559,-2.972520,8.318566,-7.029956,6.214406,2.642414,-4.560425,-8.208347,-4.969624,7.388874,-3.517903,-4.924167,9.154579,7.090297,8.995931,9.259605,-9.906913,1.084830,-4.792084,-3.070052,3.294803,0.236131,5.282517,-0.699724,3.925483,-3.003100,1.190069,9.797952,-0.459265,-2.484948,-1.287076,-0.749684,-0.090232,-5.404586,1.225276,-8.855369,-4.399272,-2.837782,8.536363,-2.592728,-0.186960,6.996877,7.023547,-7.314561,1.185185,-0.074510,2.398201,-9.960509,-6.786064,-7.317687,0.725385,-0.649045,-0.080432,8.238884,7.517233,-2.295127,-9.736015,2.035369,1.050320,9.792867,3.778602,-3.665082,-9.376109,-2.864095,-7.186149,0.220579,4.716473,1.440638,-6.956682,7.759056,-6.665485,-7.039823,6.839520,1.528176,1.421928,1.476321,-3.994520,1.954384,-8.288415,4.490448,-3.938223,5.603114,-7.967679,8.421751,6.396955,2.403984,3.201233,4.273223,3.086847,0.989598,6.864284,8.375852,-7.541393,1.933121,-5.508641,3.198024,8.021372,-5.359800,-2.380620,-4.285139,5.711098,1.110798,4.721123,9.407365,8.585028,-3.682508,-6.988095,-2.742652,-2.976488,8.049312,-6.464888,-8.394502,1.613446,-0.138601,-0.162141,-5.505667,-1.423435,-3.101556,-6.879799,-5.481999,-8.837430,-4.891023,3.895282,-0.202719,-3.343025,-8.267359,-1.154814,-3.982165,-6.679424,8.243159,-8.484635,-7.829518,-4.857683,-2.413518,-5.134978,-6.846939,4.242252,6.490406,-3.970734,6.815989,-0.439930,5.862061,-5.134399,-5.427122,-2.793960,3.592042,5.257553,9.499483,5.171896,-8.733541,1.776962,-8.329857,-3.442599,1.604365,0.815594,9.517819,-2.206791,9.825715,0.225104,3.193454,1.421603,-4.996100,-9.944812,-7.355847,6.175258,-9.380880,-0.381286,-1.423062,-1.555637,1.402214,-2.448543,8.127827,2.219726,8.987086,1.042232,9.546369,8.729994,7.230063,9.607958,8.207174,9.747526,1.508071,2.274014,-8.898773,8.619680,1.894455,-9.889660,5.769528,0.611009,-8.870169,7.788723,-7.465080,5.992542,0.038475,5.223058,-5.372583,-0.135459,-7.652467,1.745297,5.476171,-8.000776,-2.868720,-8.790355,1.773664,-4.962659,-9.846015,3.607346,-2.032451,-9.317114,6.143633,7.983372,-2.401155,-0.238206,2.405888,6.376932,-4.322325,1.330769,6.095904,-1.685498,-5.730273,-1.035676,3.318419,1.796724,1.052906,2.956815,3.267355,-3.051694,-1.392911,6.235644,-5.639119,-7.108528,-1.087046,0.196868,3.378543,-5.990425,-4.021755,-2.526327,-5.803836,7.500573,-1.627852,3.800463,3.294030,7.375979,-1.397422,8.395272,-5.623052,0.178929,-0.448271,-9.933089,9.337565,2.911655,4.964155,0.421973,9.802890,7.997101,1.291216,5.626850,-8.804273,-3.982257,3.514985,5.338949,6.524248,8.347997,8.637829,-3.472308,-7.168579,-0.606385,8.921181,-2.503601,5.791916,-0.538165,-2.228285,6.758363,6.921928,6.417112,-8.269656,-8.607470,6.223863,7.387198,6.923698,7.210182,1.955427,7.736934,2.926745,6.685176,-5.893336,6.109417,0.693978,3.194599,-6.230336,-1.777068,-7.134350,3.852730,-9.822627,-1.112173,-9.158785,9.146916,-6.744959,-9.552926,-8.964837,-7.478844,-2.291455,2.743129,-3.239129,-1.262029,3.102516,7.995673,4.379860,-5.681781,6.479034,3.311554,-8.917726,7.689970,2.506698,5.655459,4.924606,-4.396902,2.612380,-7.126098,0.692447,9.262240,0.424869,-4.920647,3.970316,-6.932695,1.879061,-1.020596,-4.532203,-9.183990,1.731858,-2.904094,2.251509,-6.888839,-0.627534,1.160571,0.483844,9.434778,0.346978,5.885865,-9.284354,-7.647543,8.741126,5.788861,-2.194002,-2.741794,5.030512,0.855317,2.905739,-7.190826,-3.511616,4.917636,-8.767386,-9.817805,-9.818130,-3.346896,2.826555,8.514150,1.968850,-6.050630,-9.959377,3.464359,2.993057,6.769107,5.807440,7.201833,8.390532,6.898231,6.572120,9.088270,-3.064834,-7.024362,-2.526653,-2.640382,-8.242148,-1.607501,5.173083,4.424040,-2.932949,-2.390344,-0.291317,1.802851,-7.176328,7.397032,-1.329984,-0.316785,-0.314687,-2.579678,-9.751809,-6.641876,1.926593,9.269548,-0.276121,-0.362170,6.238577,-0.075845,-9.531189,3.892307,2.299211,-2.976311,-4.827867,-3.590696,5.532364,8.627188,2.612569,-8.927130,-5.598401,-7.178317,-6.178458,8.762246,2.796583,8.167476,1.967301,-3.858292,7.321391,-5.889585,1.140469,-8.685201,1.667421,-1.261430,3.727930,-1.580124,1.541150,2.368948,4.675096,0.378419,-6.768773,-0.043547,-0.706638,-0.028831,5.719024,3.340029,3.964941,9.777590,5.529711,-3.743697,-6.688944,7.408036,4.588222,-8.691026,8.748853,3.015509,-7.015812,-3.352176,-2.432294,2.978289,8.466948,1.849249,-1.287522,-3.434242,-3.419567,0.593059,7.469903,-5.195198,3.450153,8.529231,8.461147,-6.111589,-4.300283,-3.799842,-8.301198,-2.496003,-8.415505,-2.769744,-5.198273,-7.254020,5.657862,0.586332,-6.359578,8.639159,-0.771164,9.446001,6.840098,-6.957777,-7.143527,7.837637,-4.224685,-1.968966,8.977345,7.321534,5.695075,-1.115230,2.940501,3.008377,-3.546140,6.521362,4.081650,-4.647814,6.229045,-0.462418,4.994699,-6.181418,7.427004,-6.176129,6.075576,-2.874678,2.453067,-9.988969,0.235103,3.400810,-0.860607,-1.550090,4.733640,7.475543,2.212532,-7.116681,6.219593,-5.074718,1.980380,7.910800,7.655724,-6.797112,-3.945111,2.405398,-9.780321,9.996992,-2.287963,2.527080,-0.415520,-3.419684,-3.680603,-7.357110,7.635291,0.458243,7.873761,8.658113,-6.136590,-2.263856,-9.412767,-5.323046,-9.814225,-0.502320,-4.945024,-0.689291,-3.779320,-5.694340,5.648031,-0.644823,-0.904862,5.634544,-6.181342,-8.198703,-1.928359,8.818583,-8.932877,-8.067533,-7.048130,9.392514,-3.967127,9.976047,-7.198158,8.398771,6.054291,-8.952816,8.616792,5.340554,8.566475,3.685494,-3.714824,-6.135168,-2.557863,9.870838,6.031477,1.183688,-9.020090,-3.417286,1.452623,-4.121451,6.848361,-8.111615,0.025681,-1.445032,5.468939,-3.078014,1.613653,-4.366384,6.887553,-2.823487,2.667269,-9.294747,-5.890847,-4.653516,1.638223,-5.938707,-5.796469,4.496492,0.751776,-6.544363,5.077738,-1.831576,4.706859,3.834422,6.474579,-3.810138,6.474007,-5.188899,2.601573,8.931206,-8.172222,-5.096946,-7.331388,-3.091789,1.316980,-6.787413,3.119547,3.142729,-7.403658,-7.001384,-4.712173,-0.774627,7.332096,-5.921788,3.401111,9.163557,3.908023,-2.960829,-6.825613,4.216185,8.556043,-3.170460,4.352465,-3.680727,-9.746931,9.474846,4.405890,4.158745,-7.705301,6.011798,1.118145,8.712068,-0.394508,0.417761,-2.228757,6.534402,-6.528851,1.180782,2.671560,5.952127,-1.560165,3.561325,-1.366006,-4.993574,-8.748306,2.423922,5.173449,-3.410615,-6.983601,-5.507841,3.687933,0.994500,9.528460,2.137999,-5.572693,9.274778,3.992918,-4.842197,6.944280,-8.991689,-4.333288,1.720781,5.487948,-8.231126], dtype = "float64")#candidate|1010|(1248,)|const|float64
call_1009 = relay.TupleGetItem(func_529_call(relay.reshape(const_1010.astype('float64'), [16, 13, 6]), relay.reshape(const_1010.astype('float64'), [16, 13, 6]), ), 1)
call_1011 = relay.TupleGetItem(func_533_call(relay.reshape(const_1010.astype('float64'), [16, 13, 6]), relay.reshape(const_1010.astype('float64'), [16, 13, 6]), ), 1)
output = relay.Tuple([bop_1001,call_1009,const_1010,])
output2 = relay.Tuple([bop_1001,call_1011,const_1010,])
func_1024 = relay.Function([var_984,], output)
mod['func_1024'] = func_1024
mod = relay.transform.InferType()(mod)
var_1025 = relay.var("var_1025", dtype = "float32", shape = (4, 5, 10))#candidate|1025|(4, 5, 10)|var|float32
output = func_1024(var_1025)
func_1026 = relay.Function([var_1025], output)
mutated_mod['func_1026'] = func_1026
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1388 = relay.var("var_1388", dtype = "float64", shape = (9, 15, 12))#candidate|1388|(9, 15, 12)|var|float64
uop_1389 = relay.cos(var_1388.astype('float64')) # shape=(9, 15, 12)
output = relay.Tuple([uop_1389,])
output2 = relay.Tuple([uop_1389,])
func_1399 = relay.Function([var_1388,], output)
mod['func_1399'] = func_1399
mod = relay.transform.InferType()(mod)
var_1400 = relay.var("var_1400", dtype = "float64", shape = (9, 15, 12))#candidate|1400|(9, 15, 12)|var|float64
output = func_1399(var_1400)
func_1401 = relay.Function([var_1400], output)
mutated_mod['func_1401'] = func_1401
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1888 = relay.var("var_1888", dtype = "int8", shape = ())#candidate|1888|()|var|int8
var_1889 = relay.var("var_1889", dtype = "int8", shape = (14, 3, 16))#candidate|1889|(14, 3, 16)|var|int8
bop_1890 = relay.maximum(var_1888.astype('int8'), var_1889.astype('int8')) # shape=(14, 3, 16)
bop_1902 = relay.power(bop_1890.astype('float32'), var_1888.astype('float32')) # shape=(14, 3, 16)
output = relay.Tuple([bop_1902,])
output2 = relay.Tuple([bop_1902,])
func_1909 = relay.Function([var_1888,var_1889,], output)
mod['func_1909'] = func_1909
mod = relay.transform.InferType()(mod)
mutated_mod['func_1909'] = func_1909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1909_call = mutated_mod.get_global_var('func_1909')
var_1911 = relay.var("var_1911", dtype = "int8", shape = ())#candidate|1911|()|var|int8
var_1912 = relay.var("var_1912", dtype = "int8", shape = (14, 3, 16))#candidate|1912|(14, 3, 16)|var|int8
call_1910 = func_1909_call(var_1911,var_1912,)
output = call_1910
func_1913 = relay.Function([var_1911,var_1912,], output)
mutated_mod['func_1913'] = func_1913
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2445 = relay.var("var_2445", dtype = "float32", shape = (5, 16, 16))#candidate|2445|(5, 16, 16)|var|float32
uop_2446 = relay.asin(var_2445.astype('float32')) # shape=(5, 16, 16)
func_596_call = mod.get_global_var('func_596')
func_599_call = mutated_mod.get_global_var('func_599')
var_2452 = relay.var("var_2452", dtype = "float64", shape = (1920,))#candidate|2452|(1920,)|var|float64
call_2451 = relay.TupleGetItem(func_596_call(relay.reshape(var_2452.astype('float64'), [15, 16, 8])), 1)
call_2453 = relay.TupleGetItem(func_599_call(relay.reshape(var_2452.astype('float64'), [15, 16, 8])), 1)
output = relay.Tuple([uop_2446,call_2451,var_2452,])
output2 = relay.Tuple([uop_2446,call_2453,var_2452,])
func_2455 = relay.Function([var_2445,var_2452,], output)
mod['func_2455'] = func_2455
mod = relay.transform.InferType()(mod)
mutated_mod['func_2455'] = func_2455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2455_call = mutated_mod.get_global_var('func_2455')
var_2457 = relay.var("var_2457", dtype = "float32", shape = (5, 16, 16))#candidate|2457|(5, 16, 16)|var|float32
var_2458 = relay.var("var_2458", dtype = "float64", shape = (1920,))#candidate|2458|(1920,)|var|float64
call_2456 = func_2455_call(var_2457,var_2458,)
output = call_2456
func_2459 = relay.Function([var_2457,var_2458,], output)
mutated_mod['func_2459'] = func_2459
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2653 = relay.var("var_2653", dtype = "float64", shape = (3, 1, 16))#candidate|2653|(3, 1, 16)|var|float64
uop_2654 = relay.asin(var_2653.astype('float64')) # shape=(3, 1, 16)
output = uop_2654
output2 = uop_2654
func_2677 = relay.Function([var_2653,], output)
mod['func_2677'] = func_2677
mod = relay.transform.InferType()(mod)
mutated_mod['func_2677'] = func_2677
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2678 = relay.var("var_2678", dtype = "float64", shape = (3, 1, 16))#candidate|2678|(3, 1, 16)|var|float64
func_2677_call = mutated_mod.get_global_var('func_2677')
call_2679 = func_2677_call(var_2678)
output = call_2679
func_2680 = relay.Function([var_2678], output)
mutated_mod['func_2680'] = func_2680
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2727 = relay.var("var_2727", dtype = "float32", shape = (2, 8, 3))#candidate|2727|(2, 8, 3)|var|float32
uop_2728 = relay.rsqrt(var_2727.astype('float32')) # shape=(2, 8, 3)
output = relay.Tuple([uop_2728,])
output2 = relay.Tuple([uop_2728,])
func_2744 = relay.Function([var_2727,], output)
mod['func_2744'] = func_2744
mod = relay.transform.InferType()(mod)
var_2745 = relay.var("var_2745", dtype = "float32", shape = (2, 8, 3))#candidate|2745|(2, 8, 3)|var|float32
output = func_2744(var_2745)
func_2746 = relay.Function([var_2745], output)
mutated_mod['func_2746'] = func_2746
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2972 = relay.var("var_2972", dtype = "float64", shape = (3, 15, 5))#candidate|2972|(3, 15, 5)|var|float64
uop_2973 = relay.acosh(var_2972.astype('float64')) # shape=(3, 15, 5)
const_2975 = relay.const([[[-6.519461,-5.780490,9.401710,3.302951,5.890428],[-8.093319,-6.271723,4.123143,1.171405,2.583839],[4.210689,2.796579,-9.442704,0.622394,4.634035],[6.778133,-9.328226,7.318743,-6.156939,6.233543],[8.132205,-5.764931,6.010321,-0.609813,6.236858],[2.389414,-1.448157,1.113919,-6.477277,-3.544424],[3.906901,-4.441531,4.137688,-0.593976,-0.358827],[-4.963637,7.376861,0.338760,-5.306653,0.982722],[6.739422,-6.944274,-5.491856,5.586056,5.801605],[-5.048417,7.796376,-3.880976,-7.639056,-0.372808],[-0.207505,-5.458979,3.985034,-6.854677,2.874212],[1.166268,3.740932,-1.732284,6.102244,-4.614423],[4.189914,-9.886658,0.284863,-2.025757,1.017192],[8.955807,4.576248,9.450999,0.432052,-2.577963],[1.178536,-8.437136,-8.470323,-3.966649,-7.301279]],[[-7.065305,3.196460,-8.793540,5.927593,-5.640879],[-8.240410,-7.483577,6.596735,-0.052072,7.343531],[9.169793,6.601070,1.875543,6.876121,1.612191],[8.791332,2.147652,-5.239414,7.008836,-5.050211],[-1.500800,8.806089,-4.219003,-7.818758,-3.251426],[-5.365471,2.511546,9.529379,5.253491,-2.965411],[-0.035071,-2.358696,6.389761,6.679619,-2.030325],[-8.563981,-7.239750,8.054290,3.577948,-0.160080],[2.873092,7.768618,-0.485678,-4.475007,7.686604],[-4.407476,-6.741494,-7.411318,-2.912574,-1.878314],[6.852854,2.812460,3.510606,8.257255,7.988964],[-9.188731,-3.097424,0.086489,-4.232436,-4.152027],[-2.867801,4.123346,7.860829,-3.064803,4.783886],[-4.129863,-9.493432,6.748395,-7.005315,-5.390976],[-8.180858,-4.626202,-5.203519,8.390254,4.826478]],[[6.337036,-3.326872,-6.762241,-3.676638,2.962394],[-7.138666,-0.670945,-0.423873,-8.627121,-1.684037],[-9.917413,2.268576,3.560744,-4.629916,-3.721125],[-1.645580,9.183072,-9.047005,-3.599348,3.820321],[-0.943584,6.450843,-3.908624,-0.018489,-2.586462],[1.080975,6.953460,-6.484774,-7.731699,0.485784],[-2.799943,-2.057134,5.049379,-9.097340,8.186601],[3.680768,0.223254,5.630459,-1.831050,-4.506104],[-5.510665,2.556916,-5.391480,3.065563,-5.770776],[1.257744,-6.283200,6.013583,-7.978669,-9.521066],[5.457497,0.784961,-3.761207,-3.321733,4.802079],[-4.007435,-8.239046,7.390463,2.174402,5.359398],[-3.817496,-5.586363,1.154125,-9.545231,9.301740],[8.348924,-4.263571,3.627393,2.212686,-7.491661],[-3.714852,3.545001,-4.667325,3.708304,2.084359]]], dtype = "float64")#candidate|2975|(3, 15, 5)|const|float64
bop_2976 = relay.bitwise_xor(uop_2973.astype('int8'), relay.reshape(const_2975.astype('int8'), relay.shape_of(uop_2973))) # shape=(3, 15, 5)
bop_2987 = relay.subtract(uop_2973.astype('uint32'), relay.reshape(const_2975.astype('uint32'), relay.shape_of(uop_2973))) # shape=(3, 15, 5)
uop_2995 = relay.cosh(bop_2976.astype('float64')) # shape=(3, 15, 5)
uop_3010 = relay.cos(var_2972.astype('float64')) # shape=(3, 15, 5)
uop_3028 = relay.exp(uop_2995.astype('float64')) # shape=(3, 15, 5)
output = relay.Tuple([bop_2987,uop_3010,uop_3028,])
output2 = relay.Tuple([bop_2987,uop_3010,uop_3028,])
func_3038 = relay.Function([var_2972,], output)
mod['func_3038'] = func_3038
mod = relay.transform.InferType()(mod)
var_3039 = relay.var("var_3039", dtype = "float64", shape = (3, 15, 5))#candidate|3039|(3, 15, 5)|var|float64
output = func_3038(var_3039)
func_3040 = relay.Function([var_3039], output)
mutated_mod['func_3040'] = func_3040
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3248 = relay.var("var_3248", dtype = "int64", shape = (6, 2, 6))#candidate|3248|(6, 2, 6)|var|int64
var_3249 = relay.var("var_3249", dtype = "int64", shape = (6, 2, 6))#candidate|3249|(6, 2, 6)|var|int64
bop_3250 = relay.equal(var_3248.astype('bool'), relay.reshape(var_3249.astype('bool'), relay.shape_of(var_3248))) # shape=(6, 2, 6)
func_919_call = mod.get_global_var('func_919')
func_922_call = mutated_mod.get_global_var('func_922')
const_3259 = relay.const([2.990049,1.397287,-4.281910,4.700117,7.930827,6.348219,-0.330091,-8.540940,2.918043,1.491658,9.312436,-8.515579,9.909538,-1.937865,2.422363,8.121913,2.072396,-8.291275,7.327261,9.932105,8.600264,3.375909,-9.416173,-0.013923,-3.105830,-9.526559,1.939954,5.745675,-4.942522,1.435899,6.026136,9.076278,3.758289,-3.812237,1.976430,-2.271240,-8.802223,3.703619,7.170259,-0.305670,4.005566,1.474514,-7.791220,-4.164900,-4.434056,-9.050635,-3.214376,-5.240730,-5.242512,-6.828276,-6.185343,-9.351336,2.118337,2.719809,9.529118,-5.921386,-5.322955,-5.231609,-9.596953,-2.146549,-3.724636,4.630860,-9.387583,9.242696,-7.948155,-7.022218,-7.299270,-4.974867,-4.453584,-0.004346,0.630069,1.011165,6.430065,-5.812568,-6.364568,-0.405089,-6.588567,3.454841,-4.463532,1.779516,-3.105982,4.285251,-2.974776,-6.685610,-9.017838,3.399008,-1.451243,6.936363,-1.045072,8.369159,-6.551526,2.509444,6.229497,7.112040,5.225687,5.046398,0.706619,-6.972773,-0.103523,-6.281093,-7.562688,-1.845419,-8.939971,-3.967900,-1.469446,6.271229,3.515598,6.030787,3.834282,-7.314212,2.312545,6.690913,4.789576,-8.391156,-0.899758,-3.087095,-2.375463,8.211613,-4.423484,5.740948,-8.693485,-0.110983,-5.815766,-1.339923,-3.230075,-2.415892,-1.603197,-1.312189,-6.212483,1.358320,-1.532056,8.209935,4.090445,0.516536,-8.803862,-6.506063,-9.076314,-5.135098,-9.856469,-3.894932,-1.916218,-7.236637,-1.387321,-9.926840,2.148995,-7.030180,4.831523,5.450972,-2.612663,-6.235591,2.386344,8.253382,5.793624,-2.296743,9.274432,1.615644,-9.794678,-2.478860,-4.950250,4.157676,2.550219,3.962919,9.402380,8.943010,-5.707005,-0.869443,-8.856020,7.778197,6.920182,4.885802,-4.510691,-1.169543,-3.045376,-6.397778,6.186421,-5.942600,1.411157,5.393310,-2.169581,-8.799504,2.198723,6.325393,5.343334,8.875372,-8.021703,5.709149,7.145866,0.766290,-5.756634,7.726899,5.757793,-1.034433,7.482758,8.810156,-7.225867,-9.206374,-3.782564,8.531350,-4.859438,3.366240,0.930626,-6.031190,-8.917529,-4.422403,6.504913,6.618768,-4.144891,0.025175,8.798854,7.025883,-9.149869,1.712578,0.033404,-6.056686,-5.728688,4.693304,-2.239987,-1.598079,8.035717,-6.911193,-0.437831,-9.730978,1.038266,3.774842,-0.722229,2.594568,-5.090053,-0.145343,1.825606,-2.519865,-0.756820,-9.392275,7.275968,4.020403,7.470046,3.809357,5.117803,-4.651298,3.831753,-6.463796,9.368257,-1.751421,-4.540792,8.323651,-3.115378,7.299134,4.501442,0.707049,8.106381,-0.554399,-6.966575,-2.033166,9.135258,7.395691,-2.212700,-4.064117,3.431820,-8.174939,6.541132,5.389282,3.009714,-1.305900,-1.591829,8.139729,4.349177,5.155167,8.863384,3.172666,-9.719693,8.534000,-3.344270,-9.135300,-6.743476,-9.026883,8.564265,7.385276,-9.613716,5.159413,-9.113421,-4.989178,-2.802610,3.240427,-4.719592,-7.558369,5.792518,8.887951,-1.113640,3.093083,-6.817670,-8.075505,-8.355450,-3.281761,-7.013570,6.329137,-6.815804,-5.648721,5.717591,-6.560172,-5.872502,6.923479,-0.509900,-9.078127,-4.307236,-2.320756,9.411671,-0.440679,-0.320057,-9.667918,4.940428,9.154951,-2.254938,-5.013075,-7.818603,5.394536,-2.022589,-3.636489,2.901950,7.061433,2.352811,6.801047,-2.918253,-0.463453,-9.564546,6.080981,-6.894332,-2.086006,-6.162687,9.593553,2.683318,-2.444974,6.901153,5.042625,0.684286,-1.057091,-6.895944,3.996575,-7.456591,0.777186,-3.645306,-6.439814,-1.230172,9.161178,6.169371,5.147580,5.638484,-1.821697,-7.343160,-9.882884,-1.672639,-0.852365,-4.767374,-8.817009,3.317635,5.228283,-9.595640,4.566251,-3.163330,-6.841364,4.602926,2.064358,2.428744,8.080422,6.037689,4.524062,-3.499167,-2.849255,8.310625,5.574584,-4.321258,-4.084963,-9.559716,2.450020,1.551437,1.815996,5.049040,4.496104,-4.953271,7.905674,-9.405488,-2.538620,-7.396248,1.346557,8.070662,4.150523,-7.122198,-5.139195,7.710797,1.962930,5.194923,6.548556,8.077493,3.528127,2.112791,0.788115,0.087243,-9.813823,-9.836777,1.161339,5.288071,-5.637673,7.093713,-9.688865,-1.546662,3.349299,-0.807819,3.602675,3.219436,-4.978036,6.241382,9.670813,7.212950,-7.951904,8.479991,2.657383,-9.140604,-7.670848,-9.247677,-6.618772,5.620035,5.394675,-4.047052,1.946937,5.340148,-4.219458,-1.460909,-7.700963,-2.192399,9.719040,-5.558293,-8.421824,-7.217533,-5.044254,8.290326,-8.500397,-7.850700,6.352129,-7.398837,9.515192,-3.693558,-4.197118,9.213593,-3.264415,4.263314,6.460193,-1.749220,9.956439,0.420972,0.611080,-1.492667,1.758799,9.419016,-8.737884,5.502630,-6.342785,1.188368,-2.022655,4.930828,-9.779338,4.742786,-1.759127,0.779799,-8.882124,-0.319605,-0.586456,3.458845,2.751495,-3.838770,-5.419835,2.066701,8.396226,2.714064,2.338608,-8.864141,-1.526150,-3.663961,1.861350,-5.481463,-2.836273,2.003303,9.096697,-1.704059,-8.490098,-9.792943,-6.046182,7.103865,9.233851,-6.392050,9.808291,-9.161581,-8.356217,-6.938004,3.392663,1.197283,8.098666,-0.129998,-6.988028,-3.486739,2.954611,7.173648,-3.031580,6.311041,-9.845496,9.575595,-3.699596,2.451911,-6.737718,-4.906758,-2.461985,4.505075,-8.799484,-7.966352,-3.984933,1.375851,-1.967636,3.195410,4.569890,-5.545890,-8.839455,8.429172,2.040861,6.584025,3.705626,6.267995,-5.187097,2.300916,-3.851791,7.760043,-4.441486,-7.123467,7.438103,-4.974595,-8.940962,-7.503715,-2.180900,2.000057,-9.111482,0.072362,-5.383763,1.515444,0.047111,-0.475336,8.700735,-5.694801,-6.122791,-9.967874,-1.545973,5.890728,1.073497,-7.121802,1.716635,8.511260,-6.329453,0.211997,-9.368425,3.440208,-9.527095,9.834554,9.888213,2.256184,3.599086,-0.271861,-7.860856,-4.272229,7.966327,9.391036,7.627144,9.218211,9.189038,-3.373140,9.021109,4.896041,5.711420,4.653098,-2.948739,8.674590,-2.585641,-3.557737,5.375373,-9.426002,7.059459,1.198660,5.173587,-2.674341,-9.031726,-4.106095,4.187714,3.526672,-0.049093,0.430485,6.739006,-1.034453,-0.726037,1.326362,-3.473407,2.681897,5.634215,-2.231617,7.076414,-1.245543,2.342840,9.384885,-4.256411,-9.166599,-4.255762,-1.677699,-8.838738,4.509339,3.848527,-6.838645,4.272754,7.720951,-9.875454,9.893838,-1.676604,8.863077,-5.127273,-2.299400,1.162344,4.556669,1.804258,-9.785921,8.897523,-7.456837,-2.454907,-3.896233,-6.743884,-6.455680,8.134382,-5.092047,1.300197,6.191599,1.600501,6.746510,-3.594947,-2.999778,-6.881380,5.063124,-6.930701,-7.018457,-8.768709,-6.591824,-4.840157,-9.332103,-5.842084,4.305412,-7.183390,9.150879,2.900838,1.806056,-0.432432,9.364002,-0.920815,-5.319877,-5.339322,3.791212,1.746817,-1.176627,-8.800173,4.851018,9.923783,2.942310,3.145373,0.880939,6.814057,3.467060,-9.570193,-7.819388,9.208896,-6.177680,6.999872,7.945839,0.051275,-0.685293,-9.430741,8.681824,-0.290902,1.375541,1.582678,-5.816380,5.608859,-9.703553,-1.469355,-4.589114,7.597371,-4.400377,-8.566909,0.847271,7.295972,-9.477767,2.233478,4.034136,-0.868050,-1.126342,-8.247096,-3.222748,-1.338810,8.715511,0.086439,-0.042075,-9.805349,2.653456,-2.918722,2.661742,-8.724042,7.312240,9.755410,0.345583,-1.968049,1.926314,7.054991,-5.491381,4.168534,-0.220064,-4.279842,3.355595,9.429128,4.584041,-9.383740,3.142178,-1.814584,-7.333920,-1.514920,9.127887,3.890716,5.524476,-1.898151,-7.533179,6.629764,-6.916598,-7.778747,3.418588,-6.218951,2.512070,9.318120,5.705825,-0.026069,6.731689,-3.684432,2.821830,7.195469,-7.201971,-2.342205,3.521455,3.684170,6.522444,-0.502068,-8.521139,-6.617578,5.198461,-1.623730,6.122876,-6.927115,6.931871,-6.449485,2.422092,0.357681,5.770443,-7.320639,-3.302579,2.300127,3.218226,-5.919295,-9.561330,-6.180317,-0.557187,4.665568,0.598295,-6.062024,-4.605832,4.951331,-6.765598,3.857301,-3.436066,3.276268,8.071378,2.795291,-2.023088,-0.173969,-2.712710,-6.329248,-6.878822,-0.179136,6.046832,-9.632744,9.451977,5.455041,1.989416,-2.395332,1.961777,-2.512830,-0.490717,0.829280,2.611498,2.248633,-8.782528,-1.202424,7.591781,-9.024095,9.217755,-5.492370,-4.768452,-1.087564,-6.336840,-4.057209,-2.568607,5.054874,-2.572637,5.331216,-3.554623,0.762918,-3.588190,7.426896,-3.420371,8.812466,0.177291,2.117114,5.076771,1.150163,-1.018223,2.327619,-6.844677,2.341404,-9.298901,-6.997238,4.132954,7.183168,6.381663,-6.002174,0.900120,4.562568,3.299823,-2.681393,-7.984889,2.306714,6.543203,-6.467518,3.045643,-6.181060,-8.581892,-1.530948,-1.075276,-8.685777,2.638321,-0.570290,-2.467598,2.638045,-7.998429,-3.098521,3.308294,9.553147,9.553718,-4.039224,8.748203,-1.709852,4.689320,1.837309,-3.928433,7.893582,-3.333158,-9.988549,6.430765,2.636129,-0.766052,-6.997119,1.216446,-2.651391,0.183953,5.160251,-6.929367,4.238902,-4.650966,6.224832,-0.322259,-1.461284,-0.540032,4.958921,-3.123537,0.056001,-3.444966,-0.202139,6.883474,-6.478262,4.446376,9.995739,7.708958,9.663932,-8.218635,9.339962,5.443572,1.486315,-0.227355,1.447007,0.830688,8.931621,3.401571,7.005191,3.158181,1.227655,7.344099,-8.884691,1.131315,8.832217,-4.408752,-9.595341,-7.352934,-2.808269,-7.501951,-1.550325,-8.129713,-9.195976,3.954519,2.538212,4.979751,-1.542869,5.545982,-2.178419,-6.014650,-8.520691,-4.659233,1.991617,5.116734,3.672631,1.615658,7.945531,-4.930242,0.786287,-6.324011,-3.438872,-1.534160,-6.797364,6.914649,-4.570409,-9.072248,-2.606571,-4.749199,-9.753390,4.002313,0.352727,2.923356,1.867089,-1.142631,3.318778,6.204885,0.923103,-9.009734,4.677254,-4.781777,-7.929281,5.884041,5.037178,-7.720974,5.012042,8.371457,-8.296608,9.246216,-4.415443,2.628960,-2.943991,5.755247,-7.699541,-8.716167,7.648876,1.808995,1.934177,2.444469,-1.682873,-6.988743,4.011595,9.161579,-8.232628,8.087502,-3.906669,2.797317,0.384749,-9.301581,-1.344285,-1.768508,7.996858,9.457086,-6.927879,1.551170,-7.978557,-6.030806,-2.294458,-3.260073,-0.838147,0.490473,-5.421718,-4.745460,-5.349907,4.613677,5.997924,-5.583102,6.191995,0.637256,-9.320563,8.717059,9.359068,0.568736,8.982590,-4.208680,4.258947,-5.518624,-4.265097,-3.537675,-1.498069,-6.799749,4.425729,-1.315409,-1.893191,-8.427639,2.904621,-9.780229,2.268209,-9.268252,1.132250,-7.842895,-4.926769,-0.206669,6.686876,0.398602,-3.958745,6.990996,5.941891,-6.661919,-2.756018,-1.693442,-7.857911,-9.615980,-3.199383,-3.112987,3.127889,6.790533,-7.659686,3.001260,-3.923485,8.674105,-1.971190,-5.422697,-6.522172,0.695144,0.253594,-9.492004,-6.479258,5.932714,1.697213,-3.278585,-0.503567,9.903013,8.938360,0.491837,5.284864,-9.371633,6.122573,4.663340,-2.050602,-5.763604,7.494029,4.614294,1.223744,-5.002806,1.257225,-7.834493,-5.244644,-2.121269,-4.386474,1.322014,-9.104118,6.744505,-0.006336,4.792556,5.964615,-6.209165,8.196743,8.881524,-6.192448,2.241119,-3.654759,-8.585649,2.803541,0.529169,-0.001695,-5.051720,-9.350479,-5.266087,-7.277735,4.415505,-6.027215,-4.054639,-8.779378,-5.699830,-5.129135,-6.146928,1.661496,0.145879,5.285009,-4.924472,-7.732081,-1.993533,-2.578521,1.356871,-7.466656,6.960566,9.501088,-6.481105,0.518382,-4.231613,5.790429,-6.852629,0.314170,9.903811,-9.180347,-5.288071,-1.602364,-7.273287,-0.370538,-2.421087,-2.379470,8.078732,4.232800,1.874160,-9.070547,-3.643565,-0.351876,0.844325,2.177476,-6.076735,-8.296932,-0.623260,2.121497,-6.867477,-6.754872,3.880784,-3.567339,-0.386119,-3.492118,-8.477731,-6.088296,-7.230443,3.726833,-6.962561,2.136068,7.040180,-1.057273,-7.802321,-9.812879,5.763482,6.230328,0.249086,5.202035,-2.405459,-8.364886,-1.348139,2.039203,3.535043,-8.331663,7.621477,0.956992,-3.919341,-9.113680,3.731777,6.617023,-3.256730,6.394520,-2.780476,5.648450,5.746297,4.594403,-5.365886,-7.033182,5.191573,-7.368773,-4.801574,6.160464,5.476095,-8.867803,-7.194699,8.896338,-3.831602,1.625668,2.100584,3.114799,-1.569689,-6.321857,-2.039907,-8.153281,-8.155506,-7.331780,-3.334822,7.247231,-4.815186,6.277674,3.084720,5.009042,7.832470,-9.705742,2.659547,9.281617,-5.778149,2.151413,0.294447,-9.129833,-7.303053,-5.907484,4.964111,-3.880574,4.769460,-1.003296,-3.197277,8.606330,-8.398754,-1.459010,5.776852,4.428700,9.765087,-8.015859,4.719061,-1.924978,-0.434892,-3.541888,-5.787648,2.802587,-4.961244,-9.160105,2.492678,2.057263,2.733156,7.036830,3.066186,-1.129607,6.020883,1.869965,-4.739837,-7.153482,5.817184,-2.231991,1.052406,2.100924,4.523457,-0.615928,6.547063,8.602977,1.726719,-3.263319,6.186762,-4.850177,1.257863,7.239601,6.862532,-3.520025,1.238946,4.986442,-2.948777,-5.015488,-8.473056,-8.938074,-6.784556,9.384807,9.367485,3.232200,-4.836335,7.137580,8.037639,8.479628,8.434080,0.217671,-4.733609,5.249337,-1.490340,2.205044,1.739863,-3.684390,9.690489,0.674387,1.578529,4.949114,-1.754723,-0.547399,-7.681428,7.605544,2.260189,-1.435134,7.699982,3.234422,4.805386,-4.981651,-1.237936,7.617484,-5.823888,-9.297109,5.936081,-4.665059,0.015923,1.809302,-2.679202,8.397384,-6.984046,-1.359868,8.269989,4.913344,-3.479456,7.496442,-4.413782,-8.918039,-5.398342,7.891892,-1.118581,5.194702,-1.460356,7.825382,4.809064,-2.323470,-6.381253,3.356058,-4.527686,5.419927,5.112657,-5.025801,3.736064,-2.433541,4.437138,7.885116,2.943740,5.127675,3.590482,9.277779,6.653790,-1.731336,-6.893775,-0.138952,-3.711322,7.496015,-6.796288,-2.166818,-4.154363,3.773500,-2.053668,9.896310,-4.039579,6.242825,-7.951301,-3.141109,-1.076999,0.608374,4.478207,-3.818628,8.935525,6.150068,7.327878,3.318766,-1.653660,6.301586,9.565689,2.865812,-7.022569,-4.195796,5.839922,-7.628695,2.538421,-0.247405,0.891946,7.377596,-1.549691,6.079349,-0.529059,4.439749,8.270166,7.077694,8.956676,-0.879978,7.182675,-0.589619,-4.426996,-7.007469,2.266513,-7.613363,5.312507,2.705692,-9.671582,4.772509,-5.312846,5.380064,-2.008518,-6.566123,5.779410,8.810081,9.857838,4.350188,-1.285566,-8.361032,-5.400737,8.967687,-2.774409,8.082649,6.630277,3.767665,8.598500,9.062210,0.798085,-5.203819,5.337331,1.584373,1.014367,-0.665466,-4.277004,1.809588,4.893653,6.292507,-5.996423,-3.367738,1.004720,5.247720,-3.423907,-5.423977,-3.964143,8.894908,-8.646121,8.922997,8.047173,-9.495081,-4.437310,2.938236,-2.720730,6.154358,7.664323,-4.633472,1.279327,-2.827456,-3.149419,5.899068,9.557876,-6.885861,7.207998,2.995648,8.418907,-3.024829,-5.367578,8.535876,-7.465758,9.557935,-0.784587,8.359948,4.758140,-1.446046,-9.263979,-5.833926,-9.517025,-9.632144,-9.152501,-1.939704,5.020321,7.964521,-7.929714,-5.576820,4.979538,0.223767,1.657258,1.729121,-6.659954,-6.845521,7.955192,-0.224086,-8.988368,8.129999,-7.645871,-5.332747,9.050684,0.916073,6.616209,-3.343860,3.148260,-3.456735,-3.180609,4.421562,6.151294,-6.340509,6.040615,-7.073983,6.337294,-9.321354,-7.564121,6.523135,6.462850,2.923375,-5.261847,9.353021,7.201877,-4.960129,-8.252224,-8.163468,0.547263,-8.999041,9.173618,-2.614271,9.477609,2.505501,-0.655302,1.698205,6.345798,-6.667738,-9.527799,-7.537748,7.279651,-6.563147,-8.213812,-9.222535,1.747424,-3.132281,8.010190,0.111635,-5.611580,-1.388805,3.077111,-9.937789,1.800266,-0.708515,-7.117367,2.329507,3.489388,2.484206,5.201046,6.373994,5.424809,6.580612,2.838207,7.252981,1.193714,-6.779698,0.715630,-1.975343,1.606819,-3.416108,4.406445,6.029709,9.893039,-7.107690,-2.626943,0.069280,-3.844095,8.019049,6.670762,6.906821,-8.805957,1.867663,-6.379731,-2.866208,-9.520188,4.228431,5.025997,-1.202984,-6.628314,9.480038,0.478463,-8.413596,9.999821,2.874789,-4.103395,-6.703483,-6.121281,-4.506206,8.319170,-2.033850,5.002433,1.466996,-7.520457,-6.942813,-1.577199,-3.664783,-0.559120,9.521292,-1.885951,4.372096,1.590935,8.403893,9.794876,-2.468765,7.535625,7.781693,6.751550,8.949417,-1.049704,-7.381123,7.989092,-1.244414,9.720235,9.281162,-6.483965,-8.946969,-8.340938,5.439564,9.829676,-6.078186,-2.157250,8.241495,-5.026242,-4.932826,-6.452103,-3.126535,4.587970,-1.046295,-8.422622,-4.566920,-6.151057,7.231246,-3.387408,-2.053305,-2.799348,-9.633050,-2.446606,-1.080087,-0.427171,-9.468403,4.301643,-4.646325,5.762208,6.165323,8.870621,7.593556,-3.883325,-5.889152,8.109304,-5.624745,-1.341974,3.940408,8.721211,6.515775,-9.636126,-7.344577,-3.229857,-4.020696,7.079210,-8.197541,7.368607,-5.763479,-2.193551,-1.084908,-6.839815,4.901925,-1.455908,2.661747,1.096257,3.331166,-3.989328,2.014554,6.943715,4.752498,-0.984874,2.786084,4.448248,7.196672,-7.148474,9.822266,4.128320,6.716314,4.413940,4.146308,-0.786199,-5.787567,-8.341900,2.395685,6.166508,4.733455,-1.281229,9.644952,-4.485284,9.412859,0.003043,3.202239,-5.854229,-1.683876,-1.343484,-7.136765,-8.890513,9.353126,-1.307997,-7.865350,9.642817,8.551908,-5.053923,3.618918,-4.411195,-0.239659,-2.528850,-5.026404,-9.298397,-4.360625,-8.002569,4.348739,-5.627948,8.691789,-3.947985,-3.630030,6.732491,3.337876,0.349115,4.939309,-9.817862,1.400592,1.415096,8.377746,-7.551034,-7.042082,-7.276609,0.249692,9.265040,5.494640,2.463945,3.720891,-2.872445,-1.521078,-0.991330,7.518427,8.495673,5.793461,-5.190916,4.094055,-0.044539,5.875769,2.233894,8.582193,8.103935,-1.262550,5.397200,-4.482167,5.219354,7.859423,-9.181954,-6.750995,4.936317,-7.162783,-2.976512,-9.737874,-3.387261,6.107517,-9.123618,-9.871844,6.381701,-3.769383,-5.232245,-9.641668,-7.129246,7.040703,-5.059184,-0.494765,2.228375,3.079318,-2.655202,7.453592,2.446987,9.445927,6.382578,-1.766427,-2.506307,4.460913,6.305930,-0.029349,5.553901,-8.761454,8.591138,0.505333,9.912112,-4.434130,-4.767745,-2.779602,-0.364372,-2.600250,1.113996,5.300762,0.883687,3.494125,-4.752667,-8.700186,6.255092,-0.582361,-4.073474,-4.909308,-5.384553,0.690787,-3.268019,7.721986,9.257399,-8.340359,-4.102600,7.234851,4.401101,-7.099190,-2.123876,8.817186,8.410764,0.704229,-6.496433,3.674828,-4.779030,0.916302,7.023064,-2.649321,-6.982761,3.995548,-4.071274,8.428980,2.229961,7.189106,-6.068418,-6.709317,-8.457574,4.563435,6.333199,-0.434668,-5.328592,-9.489476,-7.031076,-8.088902,8.346454,0.512732,-0.894793,2.763634,-6.552066,-7.309871,-7.577343,-8.821980,-6.090655,1.702121,-8.091340,5.182274,8.703739,-8.070636,-2.087505,5.592346,4.433642,8.664577,3.850866,7.006088,-9.810699,-1.728542,-8.945127,1.204153,0.700132,-2.741998,-3.601222,-2.963403,6.314314,1.261884,2.930957,-6.014980,5.314281,4.932601,-6.777975,-9.706604,-4.497229,7.358922,7.641524,9.301082,5.243659,2.322148,5.727863,-5.637941,-5.953221,5.959456,-1.347745,-3.983144,8.160071,-2.711279,0.161078,-9.817323,8.818623,-5.956249,4.109296,5.107674,-2.173029,-7.678909,-9.253229,-5.451214,4.041933,3.069292,5.769723,7.268028,0.232122,3.607060,4.346209,-1.079586,1.234109,4.056552,-7.790371,-9.851518,9.815655,-2.996705,1.836732,7.593271,-5.776410,-4.540192,-9.893950,4.950189,8.767126,-3.672938,-7.687984,4.119384,-6.132848,-3.308923,-7.725046,4.558426,-6.476760,6.959669,-8.609709,-5.302517,8.329659,7.912503,-1.374612,8.734457,9.969823,-3.455507,-8.786212,2.113505,6.830413,1.538908,-1.269774,1.550574,8.683596,-0.213947,3.176697,-1.275090,8.437309,7.339041,-3.846556,3.021745,-9.382780,-7.239116,-0.379785,5.339815,7.724809,2.105969,4.933743,-5.654189,5.948775,0.075669,5.221366,-4.108391,8.528463,0.305183,-2.479834,3.378219,-9.579201,-9.264680,6.229794,-3.503353,-7.877932,4.135763,0.915125,-4.723388,-9.023094,6.020110,-4.085235,2.672577,6.187488,9.014065,7.418017,3.778665,-3.728526,-7.897524,9.163223,2.300284,-4.268557,-5.243835,-1.108622,8.253032,-5.696310,9.084713,-2.066063,-6.270273,4.779144,1.627660,-4.635240,-6.367153,-2.803103,-7.772895,-5.564482,-6.644275,-5.376940,-4.838865,9.670454,-3.209331,-7.595996,-1.869382,-3.179180,0.358071,3.838979,-8.130005,2.503152,-1.807907,-3.035753,1.318398,-1.015534,4.013099,-4.458415,-6.525944,5.419324,7.118906,-8.833639,-0.489608,-3.866565,-0.583989,7.273257,1.990039,8.999122,-1.248737,9.324433,-1.277742,3.030057,-5.702714,9.114068,-3.173124,5.555171,7.404504,8.741813,-9.662422,7.741183,2.147806], dtype = "float64")#candidate|3259|(2016,)|const|float64
call_3258 = func_919_call(relay.reshape(const_3259.astype('float64'), [14, 9, 16]))
call_3260 = func_919_call(relay.reshape(const_3259.astype('float64'), [14, 9, 16]))
func_420_call = mod.get_global_var('func_420')
func_422_call = mutated_mod.get_global_var('func_422')
const_3265 = relay.const([[5.132490,0.992158],[9.626506,9.307308],[-1.178026,-4.052036],[1.551671,-6.387355],[1.765466,2.339488],[-2.242390,0.812104],[-4.473875,-5.418147],[6.198542,-6.045741],[-9.016458,2.462383],[-3.762693,-6.163186],[2.820730,9.984926],[8.226807,8.692171],[-1.080044,7.201007],[3.479578,-2.318474],[0.013134,-6.539010],[-4.637314,-8.530614],[2.063930,9.859652],[-9.689520,-8.518576],[-4.384717,-9.705518],[2.528354,-5.071550],[-8.998995,-0.306241],[7.092420,7.992981],[7.723600,0.169699],[-0.759993,-8.315815],[1.578671,-1.046755],[-7.674850,-0.859934],[-6.025947,-7.147748],[-6.453008,6.953035],[-6.604134,-9.861362],[9.805105,-5.998205],[-5.901861,-7.781658],[1.233539,-8.656103],[-8.228863,-6.141401],[3.132567,-6.287792],[-5.891288,8.691177],[3.067794,8.431104],[-6.662783,1.933745],[-6.981331,-3.570725],[-8.819352,7.843032],[5.427978,-9.633649],[-6.936829,-4.311657],[1.585102,-1.889662],[6.527237,-1.020219],[-1.144380,-1.915651],[-1.949923,-9.253833],[-3.644776,2.206424],[-0.676411,-1.412917],[-5.862335,2.189833],[-3.052803,-9.862902],[-5.072382,2.043066],[-5.483175,7.072524],[3.923270,9.314930],[4.239936,-5.751836],[-2.328774,-7.495586],[1.126785,-0.942089],[-0.198517,-5.279369],[-5.458803,-9.984622],[5.871410,-6.264845],[-9.339647,6.843868],[-5.389595,5.356210],[-7.634028,7.680403],[8.404363,7.546509],[-6.976850,-0.043428],[-5.409391,8.439941],[6.030252,8.414932],[0.167315,-9.957236],[4.883818,-8.355123],[-0.088514,-6.697077],[8.039751,8.220167],[6.360889,2.098950],[-4.508407,-7.688537],[6.606859,5.560287],[-3.051813,9.883376],[2.599437,1.058051],[1.607944,-0.420456],[0.948144,2.334789],[-7.453608,9.936273],[8.231574,4.235201],[-7.034881,-5.728526],[-2.085768,-9.124851],[3.471330,-7.125641],[3.767663,1.769293],[8.781117,-8.678126],[-1.613471,-7.302122],[-4.433694,2.876797],[-7.011443,3.983287],[-0.453198,-0.360286],[-8.361799,9.581165],[7.310784,-3.254208],[7.463854,7.327428],[3.745192,0.801668],[6.093784,-7.237903],[7.729613,-9.787338],[-7.338628,-1.206021],[9.020310,7.637499],[8.879224,9.563840],[7.252065,2.476838],[-8.255474,4.747720],[-8.846220,4.385446],[-1.425289,1.273530],[1.205859,-1.306282],[-7.467114,5.997072],[9.203371,9.171732],[3.886829,2.679440],[-1.579627,-6.010205],[-3.175879,-3.513262],[-7.976561,-5.564741],[8.676175,0.901034],[3.126593,-1.408152],[-4.224094,-8.738066],[0.310652,0.070195],[-7.091362,3.095329],[9.782641,2.754243],[4.776231,6.923103],[-8.589128,3.243990],[9.201642,-1.672999],[-9.298669,-6.056076],[-1.444561,-6.120489],[-2.439769,7.995813],[3.523636,3.863367],[-6.851921,-5.013928],[-3.060280,7.503357],[8.005485,-6.480982],[0.056148,-5.365334],[-2.152665,6.183765],[9.764845,-2.223385],[2.893196,-3.911747],[-9.687684,1.304595],[1.856411,-1.397083],[8.747311,-4.684280],[-0.232045,-7.476662],[2.660208,2.419680],[4.491194,2.870685],[5.849487,7.143984],[8.282785,5.397687],[4.224710,-8.694277],[-0.953197,1.716359],[-2.154719,-4.377410],[-6.553390,5.159390],[6.759456,6.863410]], dtype = "float64")#candidate|3265|(140, 2)|const|float64
call_3264 = relay.TupleGetItem(func_420_call(relay.reshape(const_3265.astype('float64'), [4, 14, 5])), 0)
call_3266 = relay.TupleGetItem(func_422_call(relay.reshape(const_3265.astype('float64'), [4, 14, 5])), 0)
output = relay.Tuple([bop_3250,call_3258,const_3259,call_3264,const_3265,])
output2 = relay.Tuple([bop_3250,call_3260,const_3259,call_3266,const_3265,])
func_3267 = relay.Function([var_3248,var_3249,], output)
mod['func_3267'] = func_3267
mod = relay.transform.InferType()(mod)
mutated_mod['func_3267'] = func_3267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3267_call = mutated_mod.get_global_var('func_3267')
var_3269 = relay.var("var_3269", dtype = "int64", shape = (6, 2, 6))#candidate|3269|(6, 2, 6)|var|int64
var_3270 = relay.var("var_3270", dtype = "int64", shape = (6, 2, 6))#candidate|3270|(6, 2, 6)|var|int64
call_3268 = func_3267_call(var_3269,var_3270,)
output = call_3268
func_3271 = relay.Function([var_3269,var_3270,], output)
mutated_mod['func_3271'] = func_3271
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3418 = relay.const([[[3.119431,-4.397709,3.240193,-6.594988],[-8.707879,5.675781,-0.820493,-0.610618],[7.146300,0.419515,3.137439,7.414739],[-0.699576,-3.245568,2.868337,3.282178]],[[9.185044,-3.642012,-3.386341,8.614842],[6.732714,7.708063,9.171713,-9.282395],[6.768433,-0.139569,9.872785,0.045549],[8.792769,0.534922,1.663646,5.071970]]], dtype = "float64")#candidate|3418|(2, 4, 4)|const|float64
uop_3419 = relay.atan(const_3418.astype('float64')) # shape=(2, 4, 4)
func_2744_call = mod.get_global_var('func_2744')
func_2746_call = mutated_mod.get_global_var('func_2746')
var_3423 = relay.var("var_3423", dtype = "float32", shape = (48,))#candidate|3423|(48,)|var|float32
call_3422 = relay.TupleGetItem(func_2744_call(relay.reshape(var_3423.astype('float32'), [2, 8, 3])), 0)
call_3424 = relay.TupleGetItem(func_2746_call(relay.reshape(var_3423.astype('float32'), [2, 8, 3])), 0)
output = relay.Tuple([uop_3419,call_3422,var_3423,])
output2 = relay.Tuple([uop_3419,call_3424,var_3423,])
func_3436 = relay.Function([var_3423,], output)
mod['func_3436'] = func_3436
mod = relay.transform.InferType()(mod)
mutated_mod['func_3436'] = func_3436
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3437 = relay.var("var_3437", dtype = "float32", shape = (48,))#candidate|3437|(48,)|var|float32
func_3436_call = mutated_mod.get_global_var('func_3436')
call_3438 = func_3436_call(var_3437)
output = call_3438
func_3439 = relay.Function([var_3437], output)
mutated_mod['func_3439'] = func_3439
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3579 = relay.var("var_3579", dtype = "int16", shape = (12, 6, 12))#candidate|3579|(12, 6, 12)|var|int16
const_3580 = relay.const([[[-2,10,-5,-5,-8,6,-8,10,-1,8,-4,5],[-6,-5,-3,-10,7,8,-2,-6,-10,8,-5,3],[-3,-5,1,7,2,-10,4,2,10,5,3,-2],[-4,-10,-9,8,-5,9,1,-7,-7,-10,7,-2],[5,8,-1,-10,1,3,-6,-3,3,9,7,9],[-3,7,-4,-6,8,-7,-4,-3,1,-8,8,8]],[[-3,-5,4,-4,-6,6,10,9,6,7,4,-7],[-8,10,6,5,-6,10,8,-7,-7,-4,-5,-6],[-10,-2,-5,-9,-4,8,10,9,-6,6,-5,8],[-5,10,7,10,-3,2,-1,-2,4,7,3,-10],[9,5,-8,-7,-5,-5,-2,-10,9,-4,6,7],[6,-2,4,-10,-7,-6,-9,-9,7,-9,-9,6]],[[2,8,6,6,1,-10,9,5,-6,10,-1,2],[-3,1,-1,-9,6,10,5,3,5,9,5,1],[-5,9,-2,-6,-1,8,-3,-6,6,-3,4,-7],[9,-5,9,6,-9,-2,5,7,-4,-9,-1,5],[10,8,-4,-5,10,9,-7,5,-9,6,-4,1],[7,-4,6,-8,7,-2,-1,-6,-6,4,10,-9]],[[6,-3,10,10,-6,6,6,-8,-9,6,5,5],[-8,5,8,-9,9,7,-5,-5,-1,-3,-6,-2],[9,-9,1,-6,-2,-9,2,5,9,1,8,5],[8,8,8,10,-7,2,2,-7,10,5,1,5],[1,-3,1,-10,-7,4,-8,3,-3,3,4,10],[-5,5,-2,-5,-6,1,6,6,-2,9,5,5]],[[-6,3,-6,1,7,-7,-6,-1,-1,-10,6,2],[-6,-7,-4,7,9,-7,3,8,6,9,8,-6],[4,5,2,9,-10,-9,7,4,7,2,-1,-2],[-6,1,-2,-2,-3,-10,6,-4,-4,-3,-10,6],[8,1,-8,6,-5,5,-6,-6,4,5,-5,-8],[-4,9,-6,3,-3,-5,7,-5,10,2,7,-6]],[[-3,-2,-2,7,-1,-1,-3,3,1,9,9,10],[3,7,9,-4,-4,3,9,3,-8,1,1,7],[1,-9,9,-4,-3,-4,-2,-9,7,4,3,7],[2,-3,1,-4,-8,-7,-6,1,9,4,-8,-8],[4,-10,-9,-8,-3,7,-5,-8,-6,1,-3,-1],[-2,4,5,-2,5,-6,8,-7,-7,9,-5,-4]],[[-2,-5,9,-7,-9,10,4,5,-3,4,-6,-6],[-7,-4,2,7,3,8,6,-5,-6,-2,-5,2],[7,3,8,6,-6,2,-8,-1,1,-5,5,-3],[-2,-3,-2,-9,10,-2,-3,8,9,-5,-8,-8],[-6,-5,10,3,-3,-1,1,3,3,-2,4,-4],[-9,-7,-7,-6,-7,-3,-9,1,3,6,-3,5]],[[-2,10,8,-6,5,4,8,7,10,-4,-6,-2],[6,-3,5,-3,-7,-3,-9,2,4,-7,9,-10],[4,10,9,-9,8,-4,-9,1,1,1,-3,-3],[-2,-3,-6,9,-7,10,-1,-10,8,-3,2,1],[8,-3,-6,9,-9,-8,-5,3,-6,-9,9,-7],[7,3,3,-3,7,-3,-2,-10,7,4,-5,-6]],[[-1,9,8,8,-7,3,7,3,1,7,-10,-6],[9,9,-8,-6,-3,8,2,-7,7,10,-7,7],[1,-3,5,8,-9,7,-5,6,-7,-9,2,-9],[-5,4,4,-2,-7,5,-4,5,3,1,-4,-6],[-3,1,1,6,-1,-8,2,-9,4,-1,1,2],[-8,10,3,-3,10,-4,6,-9,-10,1,6,3]],[[7,8,9,-2,6,1,9,-6,9,-2,-9,1],[7,-3,3,-2,-9,-8,2,-7,3,6,1,-3],[-3,5,-7,1,-10,6,10,6,10,-8,-6,-3],[-5,3,2,-8,2,-6,2,2,4,7,-9,3],[-7,-4,-8,-1,7,-10,-1,-3,-4,3,-8,9],[-6,6,-7,5,-10,4,5,4,1,-10,-2,7]],[[-3,1,-9,1,-7,1,6,6,6,-7,-9,-4],[2,-5,8,-10,6,10,4,-1,8,2,9,-1],[10,-5,-8,-9,2,5,-8,10,-8,9,2,10],[-1,4,-2,4,-5,-1,7,-1,6,8,-5,-9],[-7,-5,-8,8,9,1,1,5,2,6,8,8],[-7,9,5,7,6,-10,8,6,-4,-1,2,-10]],[[4,6,5,-5,10,-6,-3,8,2,-6,8,2],[-10,-8,10,9,-3,-3,8,-3,-5,-7,10,2],[3,-6,1,-4,10,-5,7,-4,8,-1,7,-9],[2,5,-9,-6,4,-3,8,7,-7,-10,-6,-9],[2,-5,3,-5,9,-7,-4,3,4,4,3,-4],[4,9,8,6,-7,1,4,4,-4,4,-3,8]]], dtype = "int16")#candidate|3580|(12, 6, 12)|const|int16
bop_3581 = relay.less_equal(var_3579.astype('bool'), relay.reshape(const_3580.astype('bool'), relay.shape_of(var_3579))) # shape=(12, 6, 12)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
const_3586 = relay.const(True, dtype = "bool")#candidate|3586|()|const|bool
call_3585 = relay.TupleGetItem(func_148_call(relay.reshape(const_3586.astype('bool'), [])), 0)
call_3587 = relay.TupleGetItem(func_150_call(relay.reshape(const_3586.astype('bool'), [])), 0)
bop_3590 = relay.equal(const_3586.astype('bool'), call_3585.astype('bool')) # shape=(1, 1, 10)
bop_3593 = relay.equal(const_3586.astype('bool'), call_3587.astype('bool')) # shape=(1, 1, 10)
output = relay.Tuple([bop_3581,bop_3590,])
output2 = relay.Tuple([bop_3581,bop_3593,])
func_3603 = relay.Function([var_3579,], output)
mod['func_3603'] = func_3603
mod = relay.transform.InferType()(mod)
var_3604 = relay.var("var_3604", dtype = "int16", shape = (12, 6, 12))#candidate|3604|(12, 6, 12)|var|int16
output = func_3603(var_3604)
func_3605 = relay.Function([var_3604], output)
mutated_mod['func_3605'] = func_3605
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3736 = relay.var("var_3736", dtype = "int16", shape = ())#candidate|3736|()|var|int16
var_3737 = relay.var("var_3737", dtype = "int16", shape = (15, 9, 12))#candidate|3737|(15, 9, 12)|var|int16
bop_3738 = relay.logical_xor(var_3736.astype('int16'), var_3737.astype('int16')) # shape=(15, 9, 12)
func_596_call = mod.get_global_var('func_596')
func_599_call = mutated_mod.get_global_var('func_599')
const_3745 = relay.const([[3.022960,0.697828,7.443593,-5.607727,-3.898950,-6.080963,-4.122315,9.096630,1.386162,-4.526311,-9.501612,3.401772,-2.811836,9.355887,4.244421,-5.777401,7.926073,-7.190180,2.387316,-7.431194,-9.306885,3.342678,-1.746272,-5.373751,1.215143,-9.585615,8.592715,8.201979,3.085668,-0.432665,-9.553281,1.799182,-5.473349,-1.083077,-8.321866,-4.875308,5.191181,5.943309,-3.573467,-7.888079,-6.933007,6.972277,-9.235588,-2.061406,9.292752,-2.798255,7.009297,-8.526751,5.253707,8.635433,1.478990,5.858921,8.874969,-7.422991,-0.003839,1.041848,7.268495,-3.004561,1.071119,2.676669,6.399363,-2.676989,7.999018,2.038549,-5.493580,6.529751,-4.375629,-0.100382,7.685216,0.705583,3.859414,5.144279,8.690855,-4.124331,-9.769294,2.642491,-4.051241,-2.293058,-2.374008,-2.216310],[-5.042075,-1.659695,-1.848358,-8.770457,6.740093,1.211411,-4.140898,-3.318874,-1.148904,-3.176694,-4.333747,9.232090,-0.471573,7.425147,2.287920,7.721039,9.376119,-0.351580,-0.693054,2.933782,-6.029701,0.254055,8.366476,-8.651515,-2.545665,-2.129997,-6.620843,7.574134,0.328249,-0.777798,3.936255,-9.458306,1.794424,-1.627196,7.318134,-5.804323,3.119088,-2.654566,0.053810,-6.668263,-9.687953,-4.157236,-6.797090,4.064008,-4.255182,-9.262512,6.089982,-3.598874,6.739736,-2.447969,1.648730,-6.781734,-4.094006,0.336366,1.901176,-6.896897,5.252190,1.080446,-2.862455,2.334862,-5.691257,-4.399245,5.785320,-0.174028,-1.107846,0.069013,1.622985,-9.929171,9.690836,6.859329,8.318558,-8.929183,9.281791,8.047061,-3.406554,-5.846784,-0.309036,-6.559807,-6.486217,1.610170],[3.188326,-4.916750,-9.025661,6.899284,-0.081524,3.631270,-9.637642,-8.987983,1.828281,7.482645,1.348242,-3.255647,3.582752,2.180302,7.488596,-8.803046,5.893648,-0.586685,9.431009,8.571207,-5.685967,6.117832,-0.841655,-6.006644,4.162299,1.184976,-1.548328,9.717760,-0.631768,5.056574,0.009045,5.320244,-3.980381,-9.675970,2.669547,0.692596,-4.517823,-4.182782,3.006960,-5.715203,-0.570682,9.274906,3.736349,-2.270428,3.688806,-4.756450,6.149822,0.921242,8.139766,1.364564,-8.068961,-1.742654,-2.549966,4.795679,-9.613121,-3.393136,-5.960569,9.310997,-4.310267,4.805087,4.438094,-3.522388,7.978795,-5.167051,-4.586914,5.343610,-5.682621,3.858691,-1.248549,-3.638031,1.541773,-2.522554,-1.592540,4.406182,9.520295,-3.227014,-8.443963,-7.092364,4.766457,-8.012605],[-6.368705,-7.393341,-0.512692,9.923416,-4.927888,7.435958,7.933100,9.687404,7.556557,-8.834824,-0.942681,2.720182,-8.568661,-6.507871,-4.482679,9.187072,4.832799,7.521583,2.264038,-7.072507,7.230117,7.655162,7.691189,-2.249324,-2.877940,-0.266130,-4.230275,3.922789,1.320550,-7.566773,7.704266,-8.704833,7.747503,-9.121730,6.821152,-8.908203,-7.913148,0.295842,0.326439,-2.372524,-1.594116,-7.659496,-7.073935,9.581793,4.537531,2.586458,9.778673,0.649975,3.427822,-6.492963,7.171653,6.050152,-5.725860,6.284627,3.681192,6.378622,-1.564370,-0.108923,-0.559149,-7.599998,6.364093,-1.691099,-2.379686,2.461025,7.594838,-4.904681,-7.385789,-6.694662,-3.908858,-1.487392,7.844278,8.612927,0.917104,-3.221287,-1.899888,-4.338932,-3.874623,-4.912323,-7.123859,-1.517344],[3.950577,-6.663896,3.331710,8.202199,1.078830,1.905869,5.492832,-4.957870,-5.161624,-7.370179,-8.346877,-2.657394,6.361006,2.873967,-0.973422,9.931747,-8.729063,8.809183,-3.139344,4.834848,9.005187,-6.572430,2.149845,4.360542,9.769207,-7.808552,-4.688755,-2.517340,-3.925773,-6.713571,-1.443340,-7.833801,3.763027,-5.204017,-7.554739,3.653080,-5.415787,9.557641,5.161440,2.381473,-3.538924,-4.915570,-5.964642,2.041167,-0.256883,2.953702,9.409886,4.818595,5.966594,8.754335,0.189334,2.741607,-8.510649,7.525081,-1.088320,1.024921,2.083461,4.258637,-4.058200,-1.950589,-0.517594,1.810344,6.460505,9.344993,-4.875347,8.523138,4.439950,1.457164,9.407917,9.110440,7.535588,-2.628347,-3.262180,-1.217596,-5.248410,6.201186,-6.436604,9.172717,9.089162,1.097728],[8.798385,9.085235,6.010825,-6.986642,-6.690510,-8.560544,-1.233199,-8.136169,1.184015,-2.679148,2.010744,-6.257817,-4.081601,4.245680,-7.925142,-1.528054,3.271721,4.595239,-5.950529,9.156318,9.401806,8.051894,2.661726,7.084165,-5.010406,-9.843818,5.769896,-3.810427,-5.044153,-3.780823,-7.896740,-6.044378,-6.881493,-3.148564,-3.884182,6.785239,-9.491502,5.246006,-4.451768,-7.838393,-7.925998,-3.869037,5.710484,-1.686663,1.168024,7.422207,8.590933,2.123739,4.631770,-1.047141,-4.143006,0.815217,-6.455014,-8.064316,5.514110,-1.065617,6.039491,-0.767246,8.179932,9.813022,5.565295,-0.119241,-3.123352,-7.497448,6.693236,6.010090,4.883362,-0.607728,-1.998829,-2.055426,0.337857,9.797490,-4.714615,-1.013119,-7.928767,-8.375291,-6.665724,-8.994916,-5.517359,-7.667736],[-6.287075,7.895169,-7.360994,1.124988,-7.429987,6.699140,-8.697816,9.812079,-0.161059,-8.535324,1.852480,-5.498774,0.009400,-8.377149,5.349360,-8.473333,0.482932,7.139724,9.375371,-0.459316,2.004258,-7.381818,-8.474513,-2.087096,4.057909,-6.683390,8.789417,-7.145215,9.237091,-6.232400,3.145481,-2.440035,5.525065,-9.069157,5.419915,-6.525039,-9.221310,-5.115034,-2.628229,3.868732,-9.673188,-9.332928,-2.286575,-2.380676,-1.193553,0.294922,9.223748,-1.831795,6.121723,-9.032448,7.708981,9.515907,5.004607,-6.972918,-2.014273,9.733166,6.170180,-5.232702,-1.163322,-5.006373,-6.105258,-3.319966,0.562933,-0.165721,8.850304,4.300658,7.294374,3.923560,1.859572,1.365202,8.590901,-8.651605,-4.255827,6.305259,0.518382,8.170813,3.091845,-4.981154,-3.688338,1.002305],[8.782977,-8.597196,-3.083703,4.586592,-0.113700,1.607166,2.374326,-5.733935,8.755909,-2.992227,2.466461,-0.915986,9.464778,-0.985899,0.508017,4.598553,-0.702614,1.474560,6.438667,-8.206511,5.323791,-8.680550,2.406232,6.726754,-5.133084,-2.303449,8.901136,-7.166524,7.881413,0.597594,-7.533010,5.675730,-3.937966,7.195059,5.661834,3.160884,-3.217928,4.361038,6.706195,-4.294030,-3.007567,8.541148,2.816360,-3.010835,-9.733034,0.135509,-5.299653,-0.387400,1.573027,4.311869,3.515532,-8.570031,-2.305161,-7.814232,-5.289469,6.737142,3.225328,-7.299716,-4.790248,2.862030,-7.546758,6.077587,5.313146,-4.174306,-8.910232,6.902414,-0.058943,5.020948,4.173032,-9.427373,-6.179242,-5.214503,2.298811,-1.633487,9.640841,-7.981800,-7.033259,-8.298954,5.973622,-3.152651],[-3.524103,-8.631512,2.619986,3.375833,9.008974,-2.118578,4.084952,8.629623,-1.961035,-6.180245,4.920433,5.313331,2.851790,1.590671,-6.172828,-7.200256,2.633394,-3.636616,-2.999332,9.446331,9.258162,2.374383,-7.373526,0.947622,-7.894082,-7.588208,0.316811,9.464999,1.624308,3.391341,-3.460994,2.033770,-4.308302,6.638199,6.635671,-7.083223,-2.136414,-3.419490,-0.321435,8.491749,5.491042,-9.777813,-3.572189,5.153049,-0.885037,5.375331,-6.269999,-1.709803,-8.492929,3.510732,-2.852335,1.595400,2.253987,4.417597,9.339211,-4.916849,-4.088522,2.181971,-7.298954,0.536712,-6.772023,-6.296592,9.201950,3.823610,-2.213424,3.874839,1.229452,6.063991,-4.778378,-2.890730,-7.670806,2.699717,-3.320178,2.011088,8.906576,0.814021,2.358179,3.315102,1.828428,2.765755],[6.919885,-5.372141,2.989722,-2.549775,9.760315,7.618641,5.250491,-1.096566,-1.997081,6.736576,-2.549184,3.845343,-4.882113,-1.271095,9.614028,3.719903,5.413445,0.337596,2.147746,-6.538208,0.170981,-1.826993,-2.321067,-4.015117,-3.371652,5.434644,-7.827739,4.824517,2.285425,-5.193506,3.202264,1.319615,-1.555370,6.447317,-0.342067,-2.096118,2.317329,8.717361,7.195623,-4.115931,5.885961,6.892587,-2.828668,-4.667901,-1.448476,4.971246,-5.080172,-4.039315,7.189911,-1.722913,-0.656698,4.001980,-9.732801,0.899105,-5.370111,3.864463,7.759173,-2.519812,3.796815,6.281891,3.689787,2.465216,-2.209950,-9.360476,2.025587,2.348141,1.271009,-3.616218,5.937457,-2.713460,2.942222,7.440790,-9.290375,8.610408,-9.432554,5.224130,6.182847,9.228432,5.064176,4.442044],[6.650888,-2.492528,-5.923379,-7.015947,-8.748457,6.120468,-7.174839,2.114187,-3.905889,3.295373,8.361458,0.479985,9.889750,-6.744160,-9.142646,-0.992491,7.613399,6.640323,2.286805,3.722308,-5.991519,1.308494,-5.950971,4.751661,4.602240,8.218693,8.804438,7.597658,-6.478107,9.013177,-4.809827,-8.038895,-4.980564,8.913003,6.637232,-6.545743,9.742327,-6.703769,-2.051745,2.932840,-4.979988,-7.335979,2.556106,1.367767,-2.650626,-1.187768,-1.501960,-3.853349,-8.437779,-7.363414,-0.546368,4.161765,-9.771661,7.875351,7.665160,3.912035,-0.225927,-8.525316,4.716777,0.219703,-8.431266,-7.331786,-1.989501,-0.346315,-0.925289,-8.049129,1.663822,8.604745,2.790600,-7.079697,5.424211,9.085883,8.257838,8.056508,6.169300,-1.054643,-0.029518,-1.527238,0.407275,-5.567173],[7.573383,9.799267,-6.941362,-4.171924,4.431383,3.334410,-1.130287,-9.955024,-0.644071,4.799798,-0.341296,6.942753,-2.481219,5.552976,-0.889238,-4.508850,-2.587351,-7.488497,-4.261165,8.775083,9.408535,-5.942059,0.808874,-8.180379,-7.125396,8.875204,5.069541,7.991775,-3.910515,-2.096262,-2.969896,-0.199629,-4.268785,-9.747112,8.539055,-4.827498,-3.824282,9.392888,-7.920943,8.886394,4.865283,4.188697,0.124233,-9.538855,-1.330922,1.877125,2.737844,9.641369,-9.578412,-0.103541,6.202731,6.749678,3.029357,3.120064,-1.757239,-6.357681,5.571588,-9.851737,6.804076,-2.911341,3.647957,-0.609044,3.848361,-4.695043,3.270517,-3.839573,-1.964339,-9.395701,-2.273612,2.511470,-4.399783,-1.364012,5.228279,0.762104,1.742503,-3.731001,1.677915,-4.505675,4.388384,-3.985142],[7.826476,0.292215,-5.709821,-6.831932,-2.904370,8.924821,1.757957,-2.120075,4.525414,0.553854,-2.259285,6.692391,7.183510,-3.524096,6.207250,9.736476,7.815334,-0.903541,6.218747,-8.829706,-1.525576,-4.411258,4.830612,-7.941550,-3.094340,-6.027504,-5.045181,-5.241795,7.210444,-4.389200,-5.211726,7.398004,-1.959537,5.870751,-6.106762,9.754022,-9.025936,8.850397,2.845351,-4.854005,3.236418,-3.138678,-4.632044,4.661205,6.142739,-0.011534,-5.619753,-9.855716,3.205454,-8.713437,2.498668,-7.969815,3.126765,-1.190819,-1.588395,4.321215,6.182879,8.495539,-9.599835,7.112971,-7.330481,6.027673,5.890467,3.465709,-7.638541,4.808963,-9.048661,7.351359,6.609980,-1.009951,-0.070427,6.919469,1.723813,6.497826,-3.707522,9.870868,3.038977,1.888334,-3.502524,7.399758],[-9.190675,9.796585,8.014250,-8.878064,-3.163912,-9.406097,-4.800387,-8.451152,-9.518480,-2.348482,-4.217946,2.115069,-1.545615,-9.262394,9.926550,2.780109,-9.226514,-2.198375,4.457938,-9.463422,3.241704,-1.560417,0.343615,8.904558,8.493137,-1.511393,-9.367935,5.760499,-9.419651,3.567953,5.276413,9.772194,5.517615,8.960865,-5.355167,-7.405992,-2.938126,-7.527093,8.784803,3.302859,1.714968,-6.849472,4.716235,-2.168325,-8.428968,-5.661570,3.494328,1.883847,8.311609,0.157327,0.135808,-4.513812,9.479714,5.224353,-8.168480,5.502601,-2.318091,1.392717,4.899156,9.031633,-4.948378,1.765656,3.030123,-4.189575,-1.280228,-5.045727,-5.523841,3.082100,0.350488,-6.916344,-9.564374,8.154030,-9.290248,-5.171143,6.946240,5.226974,3.034558,5.586126,7.600614,-5.251692],[7.554963,2.109242,3.928169,6.928306,5.001753,-1.672760,9.677603,-5.113954,7.327485,1.057270,-7.240511,-4.124713,-3.063008,-6.830651,0.456578,1.130714,-9.718529,-9.556111,2.027902,-2.554606,-9.220708,-9.283109,7.100511,0.706902,-8.499977,5.465990,7.634913,-3.314132,7.551021,3.081294,1.647496,7.816858,-7.567845,0.309075,-9.940008,-4.774539,9.750569,-4.596058,-9.176136,6.502624,2.768774,5.757781,-5.966865,-0.456611,2.101270,-7.458971,-8.117474,-8.514795,-9.458118,-8.934049,8.775666,9.392034,-5.468732,5.680254,7.558488,3.831433,9.095638,8.287170,-4.351782,8.598560,1.029530,6.737623,-9.334393,-3.906725,3.975805,4.576049,-8.646422,1.764627,-7.222935,6.504143,2.176340,-6.394653,0.819349,-3.408096,8.291734,5.619231,-5.779628,-2.540679,-4.592414,2.352178],[-4.292610,8.543031,8.110452,4.565628,1.987916,8.364929,7.299319,-6.117092,6.707684,-4.695322,-8.008514,1.392072,-0.141486,6.769172,9.156199,3.825950,3.573942,-6.659894,5.929795,6.072767,-7.015941,-5.672916,-6.063561,-9.835416,9.665650,0.818912,4.839526,-8.432801,-7.167529,-1.693552,-6.477808,4.734621,-1.667870,-9.749504,3.404765,9.917002,-4.748022,9.600516,-0.583140,-4.186019,1.201970,1.988986,6.855202,-1.016577,-7.228783,8.805057,-4.876395,-4.931720,-5.463032,2.563032,-0.155392,9.756819,-3.618420,-5.027241,-4.165707,-7.653976,-9.120569,-1.029965,-3.021581,0.526982,-9.203584,2.206489,-5.721612,0.720051,2.677704,-9.862483,5.395054,-2.166687,7.409106,-6.411762,-0.349555,7.855482,8.468812,-3.541226,-3.046492,-3.747539,-6.697450,-3.250638,0.094674,6.215951],[-2.130266,2.867044,8.982968,3.844961,-7.971294,-3.912862,-6.842974,6.369348,-2.029762,8.498383,9.045426,6.627928,-8.714008,-4.124419,2.559381,-6.386533,-4.976555,-0.223589,8.137147,-9.943769,6.843966,-6.727454,-3.513029,9.931602,5.627542,1.465842,-7.857011,-7.549441,-0.876846,2.366004,-4.445459,2.623114,6.479765,-8.371119,8.873612,-1.232524,-8.603117,2.100652,-0.133550,6.667406,4.099421,-2.293161,2.915588,-4.411176,-6.247258,2.474560,1.289861,8.028089,-1.294299,-9.350597,-7.271514,9.264526,9.676057,3.657465,1.823885,-8.880457,5.025750,4.676348,8.921565,6.447255,3.622587,1.450760,1.375825,6.451806,-7.733772,-6.622613,-3.623219,0.620736,-7.743850,0.918279,7.471778,-5.125996,-4.037558,9.945829,-8.917419,6.661033,-8.761989,-4.820649,1.352851,2.836067],[7.757184,-4.643764,4.375134,-7.424703,-0.945076,-5.839559,5.134701,4.611712,-1.575318,1.880098,1.752818,-1.874035,1.276821,8.525793,-4.396706,3.082616,-7.944854,1.893303,8.079195,7.679295,4.770658,-0.143480,1.937925,-6.371384,-2.244954,-7.155310,9.140207,5.080898,6.618696,7.083296,-3.653464,-2.848697,8.552113,-1.747073,9.268960,-6.125587,1.545380,5.370298,-7.769474,-1.613386,3.686656,-1.682818,4.519540,-0.999865,5.200533,-8.180794,-0.467872,-9.238736,-2.839943,-4.458612,4.791796,-3.605039,6.046466,0.890845,-6.433826,0.806589,-8.397892,-0.071071,8.370144,-7.609443,-4.357066,-0.976535,4.393169,-0.207924,-3.231345,8.829489,-8.470785,-3.822161,0.520890,2.840016,-4.703265,-6.655674,7.520573,-4.419400,1.473634,0.471505,-2.859605,-0.070093,-2.465990,7.589067],[7.315847,-6.372363,4.286720,-4.622022,-8.510302,-5.141505,-9.729964,4.653960,0.223040,-5.362314,1.834345,-0.657472,-6.101808,6.361712,-1.216611,8.504921,-6.395434,0.700433,-6.078568,-7.690933,9.893674,7.131235,8.244826,2.089923,8.476619,4.029134,0.459085,-1.721857,-4.065748,7.052965,-3.831115,4.622465,-6.278258,-3.799186,-2.922781,-9.216999,3.958279,8.148309,-0.301508,6.643086,-8.089447,-1.922533,2.212625,8.125290,2.879868,-3.492088,1.875410,-4.838459,-4.302425,7.910488,9.587831,-0.032428,9.219054,-1.610357,5.201321,4.922948,-0.604747,6.528709,-3.274954,-7.922904,3.625976,-5.234441,-4.437258,7.762011,9.942115,0.768043,-7.942035,-7.913882,4.338426,9.112682,-1.653130,-4.043854,5.680318,-2.520248,1.876369,0.540280,4.263759,1.141018,-6.485796,-9.948892],[5.734250,-0.529118,-8.338491,-0.805242,3.665951,-2.829035,-8.141226,4.425731,-6.650159,-4.501598,-0.241356,6.885562,8.053747,8.214478,4.577517,6.066797,7.065646,-0.582482,-4.020948,9.932168,-1.807795,-7.667666,-4.017988,-3.039756,7.316721,-2.186742,-3.779684,-2.491454,3.319976,7.872671,4.037505,5.277963,4.731110,-6.507577,-6.846225,9.981607,2.054187,-6.957323,1.262019,5.349895,2.528623,-8.115367,7.943778,0.410085,-8.598861,1.924439,6.572722,-0.884797,-5.227241,9.898398,-6.441887,0.015098,-7.077696,-8.347167,4.272676,-6.028241,0.318723,-3.567935,1.119739,4.258995,0.862508,-8.525234,-3.049385,8.161455,4.688662,7.745778,1.244704,-0.954751,-9.952467,-3.885256,-8.579639,-9.465743,6.410662,-4.254377,-0.331094,2.036672,-5.511285,0.372362,-0.852143,1.691666],[7.391844,-6.692193,6.865233,-9.549043,0.522848,5.638937,6.873261,9.663622,0.733138,-7.422102,-7.062932,8.916094,1.909912,8.094384,2.353337,3.404742,0.926998,3.633406,-5.022131,3.723441,-6.894435,1.504110,-6.305296,6.085213,-5.763998,-2.991872,9.268404,5.553690,-6.291786,-5.378295,7.521278,-8.753376,3.768340,-4.811776,2.079810,6.419140,-5.567446,5.618707,-3.393652,-9.567731,-3.703519,1.128819,-4.526163,-2.860342,8.086408,-3.548479,8.992831,5.120042,6.052745,-1.522967,6.985659,-1.231772,1.572678,7.896795,-7.410540,-0.425060,-6.313707,-2.428270,9.086181,1.934822,-2.465211,6.547775,-9.992946,-7.847052,-8.508621,-7.149516,2.355429,-0.459628,-8.941184,-3.411555,6.315064,-2.873149,-2.802324,1.524163,4.724544,-4.544290,-3.815348,4.287648,-7.127097,-3.281353],[6.729586,3.175629,-4.309892,6.465666,1.155006,1.337799,-8.331397,-8.211896,2.772474,-2.700054,-4.977339,-7.981735,9.336131,4.648335,4.380276,-3.850411,-8.369620,4.989993,9.928200,1.897685,-8.122752,-9.139019,-6.537432,6.096677,-8.380138,7.790763,-4.814043,1.208360,1.330220,-4.977498,0.413747,5.293563,-7.116111,-5.964792,6.789087,-4.041076,-3.008207,3.421077,2.880438,-6.358095,-7.334812,-4.610579,9.090156,-8.239181,-9.631096,-1.958829,-6.471340,4.705578,-9.238187,-3.745678,2.357546,-8.280374,7.453096,6.228005,-0.451543,-3.668852,1.064988,-9.268651,0.964104,3.751950,4.959214,0.991892,-7.328593,-8.358961,-2.286078,-7.395030,7.652644,0.775910,-1.250364,5.832524,6.385434,-4.207299,-5.212592,1.134516,2.392916,4.052365,-9.289960,-7.060528,0.858499,-9.587242],[-3.368055,2.114759,9.196002,-9.864415,7.467617,-3.457287,-1.207413,9.953245,4.738424,-1.565345,-5.948910,7.256829,-4.263221,9.886336,-2.131181,4.196336,-2.131063,-6.324785,4.407065,-7.424600,-4.152176,0.084697,6.731006,1.682581,-4.649173,5.184764,3.288939,5.824485,5.930152,3.318280,-1.744786,-0.824157,-5.515286,-6.083253,2.583463,-5.501547,-1.254488,-8.486147,3.966617,-7.941306,7.261576,-2.498807,1.586691,-2.208734,-3.424534,-0.933253,-4.913978,4.262454,-0.750409,2.673541,-4.488393,5.150914,1.071039,-6.710520,-5.356798,-1.443908,6.173631,-3.735627,0.132399,5.978398,3.911531,-7.548496,-9.058168,-2.708625,-6.023330,-6.287654,9.885111,0.630189,-8.774326,1.330590,-9.543494,-6.482393,-6.346686,-5.782254,-4.444842,6.597164,-8.295168,9.654864,-8.559594,8.810446],[7.323317,2.423700,0.894032,-7.099496,8.314919,-4.948354,3.285047,5.638392,-5.084295,6.726800,6.688433,-3.709965,8.940796,-7.596170,2.318190,-7.402144,4.499413,9.460985,-1.619402,-7.014703,-5.431752,1.758323,-9.477968,1.435150,9.680257,5.946151,-0.507578,-9.677031,0.142941,6.655631,-2.472220,-3.097232,9.548660,-0.460017,0.829986,0.362940,-0.333216,2.552584,4.018036,1.000485,-3.284638,6.848815,-9.157020,-4.426713,-0.215882,-7.728862,5.450060,9.624717,-2.203816,-5.632183,-4.121676,6.740289,-4.968029,6.795246,-4.681787,-1.106980,5.031133,5.036472,8.631004,-4.901128,0.342580,-1.800211,3.982849,3.246307,-9.093576,8.987848,-8.026679,7.403590,5.488098,-6.646371,9.971532,-9.491139,4.951400,-5.558570,4.366780,-7.374907,7.611437,5.659797,-2.439475,-9.693109]], dtype = "float64")#candidate|3745|(24, 80)|const|float64
call_3744 = relay.TupleGetItem(func_596_call(relay.reshape(const_3745.astype('float64'), [15, 16, 8])), 0)
call_3746 = relay.TupleGetItem(func_599_call(relay.reshape(const_3745.astype('float64'), [15, 16, 8])), 0)
uop_3753 = relay.sin(call_3744.astype('float32')) # shape=(15, 16, 8)
uop_3755 = relay.sin(call_3746.astype('float32')) # shape=(15, 16, 8)
func_420_call = mod.get_global_var('func_420')
func_422_call = mutated_mod.get_global_var('func_422')
var_3757 = relay.var("var_3757", dtype = "float64", shape = (280,))#candidate|3757|(280,)|var|float64
call_3756 = relay.TupleGetItem(func_420_call(relay.reshape(var_3757.astype('float64'), [4, 14, 5])), 0)
call_3758 = relay.TupleGetItem(func_422_call(relay.reshape(var_3757.astype('float64'), [4, 14, 5])), 0)
uop_3763 = relay.acosh(uop_3753.astype('float64')) # shape=(15, 16, 8)
uop_3765 = relay.acosh(uop_3755.astype('float64')) # shape=(15, 16, 8)
uop_3768 = relay.acos(uop_3763.astype('float64')) # shape=(15, 16, 8)
uop_3770 = relay.acos(uop_3765.astype('float64')) # shape=(15, 16, 8)
output = relay.Tuple([bop_3738,const_3745,call_3756,var_3757,uop_3768,])
output2 = relay.Tuple([bop_3738,const_3745,call_3758,var_3757,uop_3770,])
func_3773 = relay.Function([var_3736,var_3737,var_3757,], output)
mod['func_3773'] = func_3773
mod = relay.transform.InferType()(mod)
var_3774 = relay.var("var_3774", dtype = "int16", shape = ())#candidate|3774|()|var|int16
var_3775 = relay.var("var_3775", dtype = "int16", shape = (15, 9, 12))#candidate|3775|(15, 9, 12)|var|int16
var_3776 = relay.var("var_3776", dtype = "float64", shape = (280,))#candidate|3776|(280,)|var|float64
output = func_3773(var_3774,var_3775,var_3776,)
func_3777 = relay.Function([var_3774,var_3775,var_3776,], output)
mutated_mod['func_3777'] = func_3777
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3930 = relay.var("var_3930", dtype = "int8", shape = (10, 3, 4))#candidate|3930|(10, 3, 4)|var|int8
var_3931 = relay.var("var_3931", dtype = "int8", shape = (10, 3, 4))#candidate|3931|(10, 3, 4)|var|int8
bop_3932 = relay.add(var_3930.astype('int8'), relay.reshape(var_3931.astype('int8'), relay.shape_of(var_3930))) # shape=(10, 3, 4)
output = bop_3932
output2 = bop_3932
func_3935 = relay.Function([var_3930,var_3931,], output)
mod['func_3935'] = func_3935
mod = relay.transform.InferType()(mod)
var_3936 = relay.var("var_3936", dtype = "int8", shape = (10, 3, 4))#candidate|3936|(10, 3, 4)|var|int8
var_3937 = relay.var("var_3937", dtype = "int8", shape = (10, 3, 4))#candidate|3937|(10, 3, 4)|var|int8
output = func_3935(var_3936,var_3937,)
func_3938 = relay.Function([var_3936,var_3937,], output)
mutated_mod['func_3938'] = func_3938
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3966 = relay.var("var_3966", dtype = "float64", shape = (15, 13, 1))#candidate|3966|(15, 13, 1)|var|float64
var_3967 = relay.var("var_3967", dtype = "float64", shape = (15, 13, 2))#candidate|3967|(15, 13, 2)|var|float64
bop_3968 = relay.power(var_3966.astype('float64'), var_3967.astype('float64')) # shape=(15, 13, 2)
output = bop_3968
output2 = bop_3968
func_3976 = relay.Function([var_3966,var_3967,], output)
mod['func_3976'] = func_3976
mod = relay.transform.InferType()(mod)
var_3977 = relay.var("var_3977", dtype = "float64", shape = (15, 13, 1))#candidate|3977|(15, 13, 1)|var|float64
var_3978 = relay.var("var_3978", dtype = "float64", shape = (15, 13, 2))#candidate|3978|(15, 13, 2)|var|float64
output = func_3976(var_3977,var_3978,)
func_3979 = relay.Function([var_3977,var_3978,], output)
mutated_mod['func_3979'] = func_3979
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5074 = relay.var("var_5074", dtype = "int16", shape = ())#candidate|5074|()|var|int16
var_5075 = relay.var("var_5075", dtype = "int16", shape = (12, 11, 5))#candidate|5075|(12, 11, 5)|var|int16
bop_5076 = relay.bitwise_and(var_5074.astype('int16'), var_5075.astype('int16')) # shape=(12, 11, 5)
func_3436_call = mod.get_global_var('func_3436')
func_3439_call = mutated_mod.get_global_var('func_3439')
var_5080 = relay.var("var_5080", dtype = "float32", shape = (48,))#candidate|5080|(48,)|var|float32
call_5079 = relay.TupleGetItem(func_3436_call(relay.reshape(var_5080.astype('float32'), [48,])), 1)
call_5081 = relay.TupleGetItem(func_3439_call(relay.reshape(var_5080.astype('float32'), [48,])), 1)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
call_5082 = relay.TupleGetItem(func_148_call(relay.reshape(var_5074.astype('bool'), [])), 0)
call_5083 = relay.TupleGetItem(func_150_call(relay.reshape(var_5074.astype('bool'), [])), 0)
output = relay.Tuple([bop_5076,call_5079,var_5080,call_5082,])
output2 = relay.Tuple([bop_5076,call_5081,var_5080,call_5083,])
func_5089 = relay.Function([var_5074,var_5075,var_5080,], output)
mod['func_5089'] = func_5089
mod = relay.transform.InferType()(mod)
var_5090 = relay.var("var_5090", dtype = "int16", shape = ())#candidate|5090|()|var|int16
var_5091 = relay.var("var_5091", dtype = "int16", shape = (12, 11, 5))#candidate|5091|(12, 11, 5)|var|int16
var_5092 = relay.var("var_5092", dtype = "float32", shape = (48,))#candidate|5092|(48,)|var|float32
output = func_5089(var_5090,var_5091,var_5092,)
func_5093 = relay.Function([var_5090,var_5091,var_5092,], output)
mutated_mod['func_5093'] = func_5093
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5210 = relay.var("var_5210", dtype = "float32", shape = (14, 12, 13))#candidate|5210|(14, 12, 13)|var|float32
uop_5211 = relay.sin(var_5210.astype('float32')) # shape=(14, 12, 13)
uop_5216 = relay.erf(uop_5211.astype('float64')) # shape=(14, 12, 13)
func_490_call = mod.get_global_var('func_490')
func_492_call = mutated_mod.get_global_var('func_492')
const_5224 = relay.const([-6.592712,1.430219,-7.079403,-0.664304,0.002355,-9.933854,-6.704427,-7.577533,6.028012,-5.458124,1.772845,5.478670,-6.412387,-0.937294,-5.737919,-2.561949], dtype = "float64")#candidate|5224|(16,)|const|float64
call_5223 = func_490_call(relay.reshape(const_5224.astype('float64'), [16, 1]))
call_5225 = func_490_call(relay.reshape(const_5224.astype('float64'), [16, 1]))
output = relay.Tuple([uop_5216,call_5223,const_5224,])
output2 = relay.Tuple([uop_5216,call_5225,const_5224,])
func_5226 = relay.Function([var_5210,], output)
mod['func_5226'] = func_5226
mod = relay.transform.InferType()(mod)
mutated_mod['func_5226'] = func_5226
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5227 = relay.var("var_5227", dtype = "float32", shape = (14, 12, 13))#candidate|5227|(14, 12, 13)|var|float32
func_5226_call = mutated_mod.get_global_var('func_5226')
call_5228 = func_5226_call(var_5227)
output = call_5228
func_5229 = relay.Function([var_5227], output)
mutated_mod['func_5229'] = func_5229
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5389 = relay.var("var_5389", dtype = "float64", shape = (9, 15, 6))#candidate|5389|(9, 15, 6)|var|float64
uop_5390 = relay.acos(var_5389.astype('float64')) # shape=(9, 15, 6)
uop_5392 = relay.erf(uop_5390.astype('float32')) # shape=(9, 15, 6)
func_596_call = mod.get_global_var('func_596')
func_599_call = mutated_mod.get_global_var('func_599')
const_5422 = relay.const([-0.991371,-0.574118,-5.968302,-0.458362,1.208356,-3.171352,9.733430,6.102979,-0.188634,7.902387,-7.673534,-8.404549,1.114153,-1.096123,5.287588,9.331245,-6.957230,8.671307,-5.865696,0.293036,5.662225,-3.019964,-4.687727,0.311904,-6.449091,-7.615199,-7.726865,6.314262,-5.573420,-2.490204,-5.785408,1.572221,8.423112,4.147332,-5.871251,2.609837,0.659196,2.247631,-9.882550,-3.348590,3.735931,7.319413,-9.367065,-1.270200,-5.856019,-9.873959,-8.610405,-2.548169,-8.923994,3.840621,-0.513702,4.300333,8.393585,-7.347899,3.415607,-1.022908,8.239617,-7.558923,-9.776841,1.099748,-6.032946,7.744047,6.018014,-2.111934,-6.874235,9.842780,4.389158,-7.754379,4.588366,-4.121492,7.287717,0.937864,-5.550852,-0.371638,-3.241739,-8.190677,-1.107994,8.697995,7.286905,4.434395,-8.666905,-6.339178,9.134156,-8.929752,1.480782,-0.843668,9.600605,-1.905784,0.041710,-2.782505,-3.580386,-7.949958,7.719132,-2.099309,-0.828209,-7.167615,-0.201837,-5.467525,9.244075,-1.480441,6.539883,1.245369,6.892315,-6.671965,5.272185,-7.634258,7.237915,-3.697036,6.715380,9.193478,-2.438070,-5.337810,4.964039,7.390036,5.368515,6.056558,-6.424712,9.894083,-8.853538,-6.153338,-4.758877,9.258270,-4.072001,-9.104318,8.591065,2.556894,3.597097,-6.841010,-4.003268,5.230373,-4.204733,-7.256828,-6.599070,-4.800206,8.636278,-3.886590,7.722975,-9.392213,1.781109,9.009558,-4.426236,-4.222199,-3.724922,-1.812662,-2.455876,-9.057380,0.340368,3.181200,-7.424857,-5.883539,9.799470,-2.684224,3.145684,-8.994674,3.201944,3.087988,-1.625002,-7.995393,-2.444416,6.041395,-0.425591,5.129826,-8.282176,9.283055,-5.218430,-1.407134,-0.713517,7.330268,4.726682,-0.967278,7.507739,5.082366,-6.391657,3.976788,-5.657247,1.585467,-7.172885,-4.374554,-7.056604,-2.390556,-5.027221,-4.928751,4.529583,-0.121004,0.976182,9.377529,-6.548236,-5.771224,-3.796432,1.754089,-6.683208,-0.548429,-2.083919,9.367650,-8.566847,4.497952,-5.837447,-1.692891,9.086072,4.124831,3.274609,-6.699228,3.360287,-1.269200,-7.302882,-6.790880,9.975688,7.437357,-4.398642,-1.157870,-7.592243,2.763868,0.615182,-2.307299,-5.374914,1.545803,5.183952,1.773961,-7.857169,-5.757044,6.157596,3.227369,3.776558,-1.595049,5.585714,4.307145,7.817973,-5.489585,-6.086201,6.917801,-1.403784,-6.561738,-7.486369,-8.331538,-6.845610,7.222048,-8.655361,-3.481165,-6.218760,1.303260,0.850982,9.173594,1.928519,7.521875,1.957290,-2.478143,0.142525,0.599238,-8.218346,-3.942854,-5.379644,-7.981931,-4.372440,2.903876,-4.784987,-8.484597,8.432075,-9.826993,7.657703,-7.211378,-6.973819,0.780320,0.658950,-6.121483,-9.927641,-5.563873,-6.741318,3.037756,2.521933,9.994177,1.477663,2.046603,-0.600889,4.488019,0.867291,-0.495964,-9.511349,3.330747,-9.670716,9.179133,-0.208561,1.225511,6.807805,1.321852,5.971169,-5.253238,-8.604248,8.067942,3.103346,6.734480,-1.917143,-3.379680,7.453610,9.212763,7.725687,-9.096150,-3.650158,4.836110,4.331426,8.551788,1.927637,8.094966,9.033861,-4.281782,-9.011222,-8.268332,6.983823,9.231434,-2.913019,-1.198302,-4.746162,-4.618951,5.175400,-9.114060,-3.569585,8.627900,9.164144,-3.890934,-3.231987,3.284776,-6.830923,0.869352,-2.531642,-1.142580,8.577527,7.632511,7.913418,0.587277,7.250973,8.090199,0.287245,6.104164,-0.484985,5.643332,7.393716,2.080327,-7.160591,9.670102,3.947187,-3.000419,3.981063,-3.615639,2.725094,5.231039,4.019221,-5.549524,4.594045,9.087387,2.508108,-9.321397,6.566979,-7.204852,4.796294,7.141432,4.578627,2.368406,1.871984,-3.701946,4.051804,3.457628,-8.326129,5.016892,4.179704,7.917349,-3.441817,6.378756,8.809798,4.160846,-3.337794,-3.536884,-0.874401,-1.965703,1.441843,-4.207751,-5.238940,-8.997264,-5.278760,-8.886898,-0.735578,-5.105211,-6.015585,2.449398,-5.013317,-3.891932,1.649411,-0.219449,-7.090348,6.955466,4.179387,2.918450,9.234523,2.254701,2.366311,4.334462,8.451200,-4.797706,-2.893635,-1.511941,4.654846,4.134041,9.236158,-9.405461,-3.665782,2.259131,-4.776755,8.132897,-9.378542,9.426493,-0.387963,-6.443540,-4.067024,1.910358,-7.815573,6.853214,-2.868735,-6.650539,8.010885,-3.726471,-3.178520,4.512799,-0.301901,-9.793695,8.732478,-1.746919,-3.982151,-1.775245,-5.983811,8.746010,2.796270,-7.592666,2.154508,9.803783,4.565149,-0.696446,9.494517,-3.589398,-4.964519,2.897736,-0.756143,-5.385217,-5.129967,-1.190444,-7.229596,0.539179,-9.902186,-1.042333,-8.666691,-9.739582,2.349136,4.813837,7.950621,-8.738152,-4.403511,6.902512,4.519257,5.612462,-0.229173,-9.539326,-6.369992,-6.180829,0.817194,-6.831585,-7.179409,-6.823958,-9.428668,1.370981,1.930898,2.976442,5.839692,2.213252,-4.620378,-9.444481,-5.688709,-9.873645,-6.858310,5.319609,6.975165,5.492883,4.685966,0.287409,7.448307,0.494037,-3.385350,-5.996530,9.403205,-0.024960,-9.089686,2.383522,-4.543497,4.040953,-5.660678,-7.338616,4.766441,-5.998546,8.257654,-9.932070,-4.647525,-2.425057,-5.332035,-0.049332,-1.989794,-7.392229,6.152002,7.775329,0.099580,-1.927830,3.305705,4.139139,-5.778291,7.677086,5.682809,-4.726131,9.789392,-5.647652,1.127481,-7.375468,7.818564,-1.719541,-8.451921,-8.876376,3.186894,8.901920,-2.040398,4.259100,-0.698490,-0.071012,-3.233097,9.387170,4.049292,4.296469,-5.082506,-8.267304,-6.515108,-7.007501,-8.533084,-2.113061,6.286192,9.122119,-9.672299,-6.264695,7.219308,-8.030488,0.336477,-8.600860,7.637752,0.582405,7.304495,-0.345867,8.803712,-3.707608,5.721249,0.414078,-4.207239,-6.929892,9.994550,-3.400089,-0.124868,-3.447698,-7.996057,-9.726089,-3.404962,-1.216723,-9.477512,-5.921401,1.302230,2.798912,7.237030,-3.146498,9.465730,2.995074,1.990092,-2.364205,-8.885249,-3.806882,0.293157,6.303915,-9.914451,8.530068,-9.438835,-8.784507,-6.713860,-8.216786,-9.993391,8.062547,-4.231881,-8.245541,-9.612860,3.035179,1.304129,-3.570582,-7.773512,5.164681,4.773678,2.595596,-2.605842,9.976890,-8.196252,-7.720931,-3.265056,-3.708213,-8.579800,8.940919,4.650144,-7.461483,-7.518993,7.743346,-6.866003,1.043125,1.202093,1.564336,8.926048,-4.387970,-9.796828,-3.746991,8.677036,9.012457,-2.928202,-8.572890,9.442288,-8.846502,4.975998,5.178803,-2.824145,5.549017,8.390552,2.387439,-1.159358,-5.445458,3.435916,5.406778,-5.434312,-0.758744,5.522927,-5.984491,0.254078,-2.931544,9.779054,-3.578235,6.624019,9.406753,-5.484977,4.083649,5.878142,-5.630485,-3.556401,2.657399,-0.668120,9.152171,-0.301552,7.683254,2.060388,2.619078,1.536614,-1.403206,1.687492,4.277113,5.576198,-7.681599,5.623504,2.737733,9.921054,-9.820682,-2.718087,3.282596,4.074992,8.530719,6.346711,5.953777,-5.930169,4.581978,-6.816979,-4.799090,3.909623,-4.512544,0.557924,-0.289346,-6.829038,-3.712831,9.015311,4.851776,-6.227818,6.154843,8.315773,-9.023063,-5.798101,-2.302139,0.967538,-9.330527,9.583239,9.631997,-8.746126,1.419619,-8.399846,-7.968893,-0.917325,-9.582939,-4.903709,-5.870570,4.815720,1.741349,-8.399486,-0.085241,-3.601034,-4.883535,5.046106,-8.331651,1.711155,-5.958191,-5.425387,6.164736,-0.194761,2.937647,5.184727,5.645782,9.422272,0.809241,-8.441331,2.918031,-7.069990,-2.804176,4.713383,-2.624935,6.982289,-9.910032,7.292926,-2.479140,2.636858,-9.276274,1.688534,0.722729,-2.942996,-3.020529,-6.191410,-3.476355,1.105532,-6.918204,7.776455,5.578062,3.677177,-4.380382,-8.526938,4.705508,6.107933,-2.997953,2.955181,6.385546,-9.852628,-1.748196,5.224935,-8.177050,7.127060,5.870817,9.920381,8.304465,-8.962712,6.548632,-3.087815,-2.903332,-2.449626,-7.655596,6.277199,6.947770,9.621122,-3.153441,-5.784234,2.120016,-5.323003,4.180690,-5.343795,-0.424159,-0.808929,7.531147,-6.467632,-0.440505,-4.449629,-3.857350,-6.913981,-4.875032,6.918492,-0.078562,9.503482,-4.774462,-2.696712,1.100530,-2.102024,4.665611,6.149072,-1.608624,2.630702,-7.088362,4.600071,8.571669,-1.122476,-9.838047,-6.411214,-4.749995,-8.025065,1.340920,-5.491994,0.502067,1.393761,1.860907,6.141781,-6.729153,0.856248,8.002837,-2.803943,-3.330450,-0.969153,-9.077094,-2.662366,-2.720550,7.159913,2.815750,-9.019301,7.843303,-3.992000,-9.521952,-1.990045,-0.305080,3.138366,-6.967372,-3.202011,-9.630907,1.522272,2.069508,8.082291,3.596098,-5.178241,-1.279362,4.859051,-9.507768,2.160006,-4.739032,3.146742,9.160561,-7.426661,-2.390725,-0.557062,4.441906,-0.801028,8.775073,-5.137586,-9.551357,-3.524592,7.455945,-8.653710,4.313345,-1.572887,3.637291,-2.251507,-0.727929,1.227001,7.522154,6.317517,3.186707,5.534866,-5.434235,9.556614,-3.256403,0.332904,-1.961423,2.611657,0.430198,2.508859,-2.048987,0.491783,-0.898183,8.024354,1.789248,-9.847953,-3.836440,0.610066,6.334323,-2.069022,-4.532877,4.316349,0.968308,-5.234018,-7.405522,-3.280547,3.818799,5.291145,-5.116165,8.684908,1.469595,-0.141039,-2.659101,-7.146126,8.460922,4.387419,2.890990,-1.438572,-7.514421,9.362412,-5.710738,6.732680,-8.536573,4.931021,8.983167,-7.625169,-4.248425,8.257368,-6.277547,-1.101524,-2.774901,-8.434902,-9.734218,-8.950187,7.705753,9.696291,1.366000,-3.316698,2.477022,-0.147842,-1.881337,6.423075,-6.993662,2.447296,5.639563,-6.381179,-1.911787,9.691725,6.287810,0.299609,7.770635,-7.388834,7.143220,-2.436298,-1.933641,5.286757,8.719010,8.345325,4.979615,8.365983,-7.642261,-6.563131,-6.450779,1.474397,-9.129123,-9.650991,0.376015,-3.835996,5.242488,3.961626,-3.823398,3.845335,4.155194,9.338842,8.814799,6.896110,-9.865178,-0.887590,9.883754,-6.504478,-0.326100,-1.989483,0.107869,-8.314697,6.512801,-2.108141,5.819646,-8.558052,-9.977426,1.285968,-1.046438,6.763048,8.939019,6.701611,3.177215,-3.467024,-3.786568,4.766389,3.422214,9.580976,0.887427,-2.940077,1.691875,8.092160,-6.767847,1.919363,-0.327127,7.571486,7.898471,-7.836701,-1.464330,-5.676731,5.990885,-9.332457,-1.273031,-8.662079,3.411163,-8.091679,9.335823,-0.886351,-9.906073,-8.045612,-1.316518,-3.971335,-8.823085,-5.514697,6.553398,8.724901,-9.527096,-6.301691,4.424565,-5.298903,0.825444,8.532646,2.455536,1.190609,-7.566800,-0.931872,6.430610,-3.379636,7.258565,8.615533,8.656456,-0.033616,-2.780540,-9.883300,4.230096,2.741274,7.274035,7.381749,-4.771654,5.409449,-9.671559,-1.624237,-5.137151,9.663267,9.023416,7.768388,0.410825,4.582430,-7.927946,-0.636420,-1.050197,-0.346911,-4.447388,-7.986158,-1.284426,1.316432,5.042544,5.666614,-2.933828,-4.891034,1.071525,0.608166,9.288869,-2.940135,-6.271794,6.656208,-3.055200,7.894571,9.629346,-3.360955,6.394147,-3.527274,3.736376,-4.517777,-7.550902,3.222725,-4.840450,-3.976840,8.671060,5.971287,3.677887,0.037477,4.741771,1.464555,-6.729396,-7.780766,4.723145,1.942655,-1.123417,6.426204,-6.794969,-1.833714,8.011671,-1.890679,-7.201153,-6.733439,-5.834042,6.047344,-9.094460,-7.515840,-1.782096,-0.852735,6.471165,-6.043124,-8.951020,-9.622862,2.038455,5.422703,9.731074,6.161338,-9.566973,-5.954108,2.381831,-6.053045,-8.168127,6.826659,6.521708,-3.294309,2.506442,8.059940,-4.907412,-9.252821,-5.788861,-8.598587,8.684959,0.361707,-4.808333,-1.838930,-4.549103,6.813615,8.951651,1.018669,1.372087,8.344684,1.506167,-7.340026,-2.886398,4.661372,-4.673216,-3.051762,2.496884,6.840725,3.585467,-8.037116,-2.147260,-7.536702,-3.974672,6.608065,-1.133889,-6.201878,3.011476,6.161998,6.998532,-8.356628,7.208501,9.559697,5.743710,-1.615932,-2.507602,-7.621155,-6.274827,-5.926286,-5.070001,-7.703996,-5.007515,-5.058109,0.742695,8.323188,-0.477030,4.223206,-8.145614,4.319794,0.153313,8.258735,-9.579109,9.666186,-5.239453,2.257646,1.529039,5.947589,-0.733836,0.541409,-8.187180,-8.942775,-4.569857,-9.312455,-2.158548,-4.265458,9.487991,2.429697,0.109906,-2.659026,-7.349167,0.315099,-2.982025,3.365717,-0.013880,-9.842208,7.924315,-5.136787,-6.741975,-2.011707,-5.260938,1.230365,-2.131536,7.297156,9.777802,-6.532822,2.048044,0.406597,-0.993643,-8.097471,0.660259,2.049880,4.374829,-0.764159,-3.202062,-3.980149,-9.385001,-7.963275,-5.383609,-4.158951,-2.562876,6.289920,-8.202780,2.408996,6.838548,-8.458006,-2.311112,9.753187,7.667295,-3.321651,-0.934195,-8.891042,-5.007623,-4.037124,-1.255288,-4.992643,2.855975,-1.859216,-2.757023,-8.367488,2.512706,-6.137425,6.824760,0.561925,8.960544,-1.044807,-8.279021,-7.044353,-2.195091,1.860692,-7.690206,8.724318,9.810822,2.039902,9.578718,9.519626,-1.911984,-7.813423,6.665696,-9.334422,2.040372,-3.953134,0.490881,-1.804904,1.649218,-8.508031,3.013558,0.883987,8.610169,-3.894701,4.897138,0.486923,0.655445,6.803543,5.269051,-8.115416,-9.545189,-6.639559,7.614713,4.724883,-9.307964,-9.795223,4.073539,-1.294334,5.863336,3.992796,-1.000246,-0.897508,9.709095,-6.309209,-8.765500,1.695359,-1.938392,-5.871287,6.408436,-2.250610,-0.849174,4.776173,4.682524,-2.413279,0.612052,2.241729,8.288938,8.129721,4.583200,7.695850,-5.645475,-0.389707,3.242406,1.859441,2.078261,-0.794224,-1.300287,7.894220,-6.225732,-1.276943,-9.708513,7.860617,-9.778829,-6.221997,1.640119,5.482249,-0.507426,-4.751228,-8.931223,-6.037546,1.215399,3.894300,0.871064,3.707222,2.866847,2.691355,0.145079,5.083165,2.858828,9.113810,7.911574,6.341336,5.895322,0.854485,5.798512,8.323167,6.727154,-2.943779,3.360865,-0.422101,-1.841572,-3.300422,-6.529500,3.807517,7.900374,-0.281645,6.081893,0.111736,4.218033,-9.585361,-7.195563,-9.136605,4.752444,-5.788216,-4.491792,8.465268,-3.938032,5.063427,8.595915,0.793468,4.819645,7.104829,8.520617,2.490897,-8.803752,9.662030,0.042582,-7.151050,-0.294656,-6.557996,3.342609,7.179507,8.141064,-4.802971,4.289052,-6.339682,-4.210467,4.852705,-2.309061,-3.566499,5.983676,7.116730,9.144379,4.460107,4.126072,8.337072,8.409004,-6.456452,6.551451,8.956238,-7.299177,2.268060,7.938052,-6.176337,-6.316189,-2.371795,-8.865380,-6.559900,2.817776,-0.894045,5.252584,4.947888,-2.250632,-0.118377,2.819512,1.492890,4.897606,-9.471877,6.669040,-1.635705,5.609686,0.209282,-9.742130,-4.338126,1.082650,-9.885640,-2.931291,7.902942,-6.866215,-9.099094,2.641474,8.086097,-4.502782,-2.277375,3.191247,4.684973,2.981485,-0.788689,2.919587,-1.607957,3.984234,9.560872,-4.523582,0.994121,-2.744321,-9.846074,9.751324,-9.067272,4.353330,9.559545,3.364245,-0.274122,-5.437495,1.484134,9.929482,-0.316172,-6.713687,-1.238184,5.561134,2.325509,2.313818,5.841805,-6.973782,-5.992420,-5.416578,-6.467759,3.300935,5.645635,0.283193,3.748056,-3.927251,-2.519685,5.151443,7.743393,-5.929726,3.745186,6.367847,-4.452856,-3.664218,8.607159,-3.499441,9.741484,-9.425609,7.515200,9.906382,-4.130128,8.196231,-6.509496,9.664822,4.525804,2.705888,5.214598,0.617865,-7.296957,8.073370,5.235894,6.126499,6.846978,7.338734,1.264664,3.641534,-7.124582,-3.168242,6.953187,-5.038793,6.451157,7.966142,-8.019694,-1.224714,8.804235,8.813048,-0.710910,4.114911,-3.415645,-4.404357,3.597131,-1.212741,-6.206428,-8.613349,-3.778073,-6.228189,-0.677857,9.438489,6.504425,1.820810,1.786339,5.529361,5.677601,9.917223,9.225169,-2.052321,9.533421,-9.766850,7.418404,7.599642,9.120159,-1.556842,-5.104285,3.205230,5.026810,-5.500294,0.521661,-0.741493,-3.655961,-3.664470,-7.273906,-1.575336,2.399366,3.242392,2.621563,8.548723,9.480897,4.802235,8.465930,3.703159,5.958474,9.914850,3.901435,-9.200959,2.855402,5.708194,6.087914,4.521843,-1.249903,9.150209,4.695396,-6.730191,-1.446172,-9.580653,-3.832730,2.906128,9.047145,-0.543720,-2.459334,-6.533801,-8.909984,5.388165,0.505330,-2.749278,-1.979125,-6.590401,-3.645713,-4.373841,-2.982752,-5.474224,-8.301881,-6.857288,-6.624234,-9.972569,3.182814,-8.675584,-7.683254,1.097767,-2.940147,9.252747,-8.650727,1.731930,-6.612649,3.316703,-4.507539,-8.617374,6.423448,4.236614,6.569913,3.147861,-0.636596,-0.181533,8.787981,4.527583,-9.707492,-4.796430,-7.834086,7.072671,0.280127,2.749598,6.969033,-1.983934,-9.733977,-1.740779,7.875156,1.117133,-8.017509,-3.629889,1.437738,9.203299,-7.576667,-9.456559,8.979428,-1.696263,1.564402,2.774812,0.341203,4.947252,0.592232,2.679644,8.476659,-4.855849,8.422072,-5.764357,-2.663376,-4.617317,4.201833,8.575630,-6.883810,-5.833678,0.059069,-7.644661,0.571459,3.883802,-9.292160,-0.776918,9.719519,5.624613,4.873669,3.165211,1.450598,1.932509,1.215948,-6.771609,-5.677166,5.525053,-0.518689,-8.911780,7.483538,-5.879379,-6.591434,-6.487503,6.310644,-8.756310,4.782773,3.558273,1.725430,0.227840,0.047929,1.658719,-3.155260,-2.572504,-6.083786,9.228615,-3.346281,3.801013,-9.418801,-0.168128,2.636286,-2.419155,-5.028004,-2.608405,-6.387970,-3.713410,0.344451,5.274162,-5.116730,-2.802204,-0.916176,2.790373,2.292050,-8.261030,-1.236346,4.332828,6.077800,-8.365017,6.684927,-5.863377,-8.257296,-4.926486,-0.982586,-3.644514,6.892165,5.336700,-8.696969,-7.987396,-2.708647,7.038635,0.323077,-3.544525,-2.982313,-1.762493,3.093538,-2.585052,-2.043726,2.787944,-5.167408,5.730674,-8.981195,-5.753530,3.264386,-0.216109,8.239454,-9.004380,2.628432,1.436003,7.551678,2.370876,-1.172980,9.562743,-9.673596,8.381731,-1.998697,-0.300696,-2.389641,3.962919,3.587638,3.507912,6.614105,9.079779,-4.092755,-6.837291,6.377986,4.560516,7.841278,-3.819207,0.562067,2.063468,-8.659904,2.014456,-1.510044,6.722160,-6.945178,-7.702127,-8.446174,-1.401473,-2.631980,2.621949,4.915533,-4.068289,4.220305,-5.740218,-5.504478,-0.284428,-4.540948,7.721397,-3.414568,-3.626493,4.687019,-0.323151,4.249629,4.799114,7.512938,1.608542,8.244927,-6.678965,-4.587303,4.096816,-2.719085,5.757524,5.413806,3.174701,0.586295,5.449314,-2.792130,7.634669,-3.049308,6.876660,3.556895,-6.770127,-5.949155,0.109014,-1.285235,-0.913493,-2.505217,0.809984,-5.192712,6.386818,-8.669929,7.650547,-6.341212,-3.839022,2.513839,-5.198189,-9.907395,3.343902,4.974399,1.785874,7.376664,-1.757731,-2.309348,-4.770236,-1.757330,-1.308549,-0.719983,1.563169,-5.333262,4.612913,-8.847592,-9.004260,0.244804,7.416689,-1.078233,-8.266396,-9.388132,5.892711,-5.048809,-4.173092,2.881886,0.964560,-0.703135,-5.813135,7.609726,-3.319605,-3.109187,-4.815729,-8.662748,-3.452795,6.271764,-0.634488,-1.654240,-4.986438,8.199853,9.903646,5.299287,-2.425609,-6.758197,9.805069,1.865059,4.181478,-3.963806,4.236039,3.847473,-5.718644,-2.430339,4.228227,-3.231312,4.802176,-7.062379,0.273525,0.918258,8.289545,-9.587060,5.408553,-0.650203,1.669817,3.088965,2.375850,3.638150,5.358385,-3.153260,-1.999190,-4.126298,3.262794,-4.195043,-5.602046,-7.109512,6.411655,-9.828408,-2.696120,0.385415,-8.013430,-0.392857,-4.869455,0.893483,9.007779,-2.177759,-3.115977,8.353508,5.959444,-8.683745,-5.110216,3.751844,-5.858127,-4.256382,-8.100497,-2.927957,-0.913446,-9.377757,-5.619712,-3.596895,2.341566,9.468977,8.916225,9.419102,9.059520,2.648942,3.896263,7.747646,-9.263661,-0.645154,-3.162486,2.524511,-1.419994,2.968429,6.758981,-8.310848,-7.717211,0.396337,2.915178,-2.321742,-0.232230,-6.065731,-3.338019,8.488762,9.570298,2.964155,0.575759,2.320962,-2.444015], dtype = "float64")#candidate|5422|(1920,)|const|float64
call_5421 = relay.TupleGetItem(func_596_call(relay.reshape(const_5422.astype('float64'), [15, 16, 8])), 0)
call_5423 = relay.TupleGetItem(func_599_call(relay.reshape(const_5422.astype('float64'), [15, 16, 8])), 0)
output = relay.Tuple([uop_5392,call_5421,const_5422,])
output2 = relay.Tuple([uop_5392,call_5423,const_5422,])
func_5425 = relay.Function([var_5389,], output)
mod['func_5425'] = func_5425
mod = relay.transform.InferType()(mod)
mutated_mod['func_5425'] = func_5425
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5426 = relay.var("var_5426", dtype = "float64", shape = (9, 15, 6))#candidate|5426|(9, 15, 6)|var|float64
func_5425_call = mutated_mod.get_global_var('func_5425')
call_5427 = func_5425_call(var_5426)
output = call_5427
func_5428 = relay.Function([var_5426], output)
mutated_mod['func_5428'] = func_5428
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5544 = relay.var("var_5544", dtype = "float32", shape = (15, 10, 14))#candidate|5544|(15, 10, 14)|var|float32
uop_5545 = relay.sigmoid(var_5544.astype('float32')) # shape=(15, 10, 14)
output = uop_5545
output2 = uop_5545
func_5551 = relay.Function([var_5544,], output)
mod['func_5551'] = func_5551
mod = relay.transform.InferType()(mod)
var_5552 = relay.var("var_5552", dtype = "float32", shape = (15, 10, 14))#candidate|5552|(15, 10, 14)|var|float32
output = func_5551(var_5552)
func_5553 = relay.Function([var_5552], output)
mutated_mod['func_5553'] = func_5553
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5567 = relay.const([[[1.520531,7.646860,-7.281094,-3.098084,-8.787809,0.283869,9.800541,0.102778,-9.139604],[4.762218,8.763704,-5.841693,8.249123,8.427924,-4.921650,-2.290833,6.691711,9.158546],[-6.089528,7.666879,6.497970,1.675849,-1.759699,8.055220,-2.574892,-5.001480,-7.341036],[-6.605033,-3.313608,-1.541733,-1.860070,5.134916,-3.976823,7.755811,-2.008318,8.606052],[0.630450,7.298850,4.427706,0.326914,9.472121,-3.704324,-5.899414,2.712556,-8.141576],[-6.958705,0.266747,-0.367539,-3.645772,-4.566963,-6.266228,-2.023619,-8.428873,2.414560],[-6.110427,3.561171,4.174987,8.101716,2.831375,-2.640564,-4.837367,-8.261853,-2.454968],[7.820476,7.143298,-1.816992,-7.931774,8.148209,-0.805090,-2.596759,8.850924,-9.816150],[8.396446,7.641430,7.158725,-2.337270,-4.579180,7.172408,5.519996,0.428915,-3.096146],[3.601803,5.960354,4.378190,5.180189,-0.584739,5.620718,5.328976,9.974139,2.016911],[0.941512,-0.273135,4.442848,-5.678763,8.548684,1.540456,1.436213,-4.443147,7.252766]],[[-6.142626,2.844992,-1.645561,-8.037029,-3.937907,-9.436726,-9.544832,5.877497,7.302994],[-2.232255,-8.752377,2.630570,3.965638,-8.720596,0.172544,9.542935,-9.525444,2.029519],[8.024008,5.996923,5.102494,-0.360121,0.594954,-3.098063,-6.344525,-5.656500,-8.088819],[-8.139713,8.679562,9.126333,-9.064511,-4.548815,-3.815206,5.755196,9.563782,1.621045],[-4.419316,-3.180680,8.594648,-7.602639,3.928503,-0.620533,6.703860,5.420584,0.544465],[5.479118,8.160663,8.807571,1.195407,-3.082253,1.659333,2.801126,7.684283,1.905852],[3.297341,-9.702132,-7.068571,-8.031502,2.233377,-1.829547,8.729315,-9.930746,-8.443643],[-8.962848,7.282863,-5.455375,-7.256532,-9.167489,-0.026083,-5.954239,-1.820000,-2.244489],[-4.077699,-6.021652,0.873700,-9.472776,-5.344447,8.395992,-3.182569,7.086577,-3.836535],[-1.940463,7.168519,-3.672103,-7.321613,0.140062,5.596815,-4.082984,5.690278,5.336192],[3.747524,7.388548,0.410770,-7.162782,-4.458827,6.886093,-8.807408,3.911242,-8.909177]],[[4.660314,-9.221235,2.825584,-6.939314,9.306168,-9.216051,-6.006557,4.721479,-3.391864],[2.978490,-5.504989,-5.774222,-3.020801,-7.807194,-9.684568,-7.770185,6.576281,5.709439],[-1.085194,-2.949438,6.971930,4.258603,2.343020,7.539686,9.437163,-1.627984,-3.810078],[2.137008,8.414819,-5.901299,-3.337545,3.781305,7.660825,6.991148,6.584540,-1.880055],[-5.912672,-6.179123,-5.110054,7.886743,-4.545431,7.552971,-7.727713,-7.726233,-2.423965],[-2.516491,3.309292,8.236974,-0.251451,-7.039658,-8.896971,-9.160604,-4.437473,-2.118790],[-8.657834,-6.810952,-6.817542,0.003425,-0.866474,-5.316752,-8.143821,-9.715751,6.647135],[-6.132017,-7.809462,9.627317,6.087416,5.263778,-3.584241,-5.178840,-6.645476,-0.865548],[7.688886,6.197341,4.138430,-3.783757,-0.344392,6.174513,-6.477152,3.127319,-7.769629],[-8.565032,-7.864407,-7.891825,3.914120,6.541711,0.103036,-5.990182,7.692628,3.474992],[-4.345817,-2.610866,-1.044590,-8.588895,-8.400367,8.707788,-7.756476,-0.940465,1.343705]],[[8.086137,-9.673111,-8.353614,-9.736799,-2.220030,5.914367,-5.142605,8.887921,-5.863535],[-2.824712,2.667053,7.903612,-0.553654,-7.236281,-6.983995,8.138480,-9.581640,3.847163],[9.121050,-3.032110,1.914827,1.501851,5.839187,6.749359,-6.261435,-2.153622,-7.414907],[-6.199854,9.260634,8.589446,3.621634,8.611330,-7.366763,-0.344679,0.020668,7.848118],[-3.689463,-5.653325,-8.827797,-2.157021,-0.560622,-2.502973,-9.165806,8.725613,5.552746],[5.078204,8.431658,-1.311601,2.918451,5.322597,2.997228,-2.175653,-0.454088,9.663202],[-8.444481,3.494464,-0.931637,3.923394,1.452568,-7.445858,8.826177,1.966991,1.250088],[5.298297,-0.534649,8.796595,3.716622,-4.489285,-6.105752,-5.956396,8.179187,7.384907],[8.001278,-1.683081,4.818882,1.521098,-2.010264,2.052906,0.646159,9.880117,-4.787778],[2.700949,-4.977151,6.487453,-6.193729,4.117890,6.601398,9.135971,6.827147,8.400280],[2.059639,9.600511,7.193316,8.927951,0.912884,2.705368,9.039026,-0.983578,-6.827178]],[[-0.431394,0.349743,-8.212324,4.642489,-9.981885,1.896245,0.236140,-0.305820,-1.440742],[-1.356590,-4.420057,-9.950985,0.244271,8.975219,8.539577,9.133492,-7.757695,0.506253],[4.460277,-3.491195,1.975916,-0.539352,-9.091510,-4.520828,-6.697293,-6.536623,-4.285380],[-8.463328,-2.884947,4.711550,3.428346,-3.128336,-2.867150,-6.566679,-1.656487,8.359785],[-0.365105,-3.034322,-6.467513,-5.222091,3.735559,-7.156025,4.935656,1.501698,-5.663697],[-6.304494,3.235775,5.029110,-9.292415,-7.940073,-7.361346,4.656217,8.243498,-0.652198],[-0.387430,-0.562180,8.589028,8.295251,-0.341853,8.967123,-5.869534,-2.208201,-4.106561],[2.042972,-9.960395,8.027267,8.183535,3.923786,-5.378803,-9.620964,-7.459730,1.393890],[0.671461,1.615608,5.835270,-7.734051,-1.494841,-5.362696,-0.031152,7.050150,4.765139],[-1.425774,7.344079,3.369043,5.357349,-4.623374,-9.717311,2.764238,3.989725,3.729503],[5.088874,-1.902985,3.519044,-1.593013,-4.389405,-7.483453,-9.932681,-0.129827,-5.744431]],[[-9.148717,7.558280,-4.872201,-2.566643,-5.571208,-3.294295,-6.276541,3.272700,9.099408],[9.462029,5.299956,9.016963,6.056460,-0.693186,-5.541032,6.357938,-2.980978,1.131625],[4.288831,-6.717257,5.071895,1.271476,9.774092,-9.947885,8.875867,-3.912835,5.779020],[-5.095278,-6.786855,-4.540107,-1.463498,1.974319,6.116164,7.010745,-4.010874,-4.073341],[-6.612873,5.617303,-8.717903,-6.141762,-0.559380,-6.494797,-3.110493,-1.081227,3.684951],[9.422623,4.633343,-2.733028,-6.338473,2.584431,-1.122063,-5.407366,8.562825,-5.797035],[-7.905047,-4.971600,8.304167,-4.603454,9.970172,-1.755663,-6.396359,-1.799816,-8.150158],[-1.539217,-7.296239,8.964086,9.002254,2.728175,-6.599198,-3.256473,-0.798594,8.304860],[-4.252227,-2.082210,-0.430854,-0.790939,-4.240008,-4.628830,-7.643893,8.748038,-9.348034],[9.121144,9.762966,6.403347,-4.473552,-1.549341,-7.848085,-1.937213,2.504926,-6.611469],[-1.201177,-4.072390,-9.906340,1.635050,2.427208,1.794046,-7.093718,0.420031,-9.078555]],[[5.876609,2.744496,8.859375,5.758515,-3.459810,-8.443640,-9.114028,6.692106,-6.251603],[-4.867084,-0.856426,-7.739862,6.133854,-9.693014,-1.773720,9.013508,8.217909,1.990386],[-6.708883,6.180146,-8.673942,-8.864325,-5.733964,1.540557,4.188162,-7.933642,-7.494041],[8.757721,1.226149,-9.784700,-5.937026,4.996522,-1.535818,2.450547,7.171046,0.809825],[-1.010243,7.408508,-8.400996,7.114962,-6.541064,5.648429,1.768979,-8.978791,9.954121],[-5.152483,4.422716,8.763496,4.421421,-7.018269,2.174466,-0.536151,7.533990,-7.153403],[-6.329154,2.846332,-8.600646,0.114594,-5.694703,-1.193357,3.148724,6.302238,8.061713],[-0.824498,0.563143,1.639963,2.253925,0.917749,2.452841,-6.918492,0.651255,-8.873180],[-9.865015,4.996037,-7.978171,-6.933796,4.744833,-0.371394,0.729212,1.952842,5.075578],[8.057274,-3.152957,-1.217326,5.682564,4.297702,-1.349537,-4.566267,-1.883033,6.545954],[8.177998,-9.087934,-4.200240,9.012988,4.921943,-0.432630,-1.553828,0.088732,-9.707818]],[[-6.287829,-0.867345,0.979897,-6.248131,-8.068755,5.120648,0.802305,6.686546,1.102051],[-8.575106,9.116452,9.338022,-3.342945,-2.932044,-6.433783,1.389981,-1.641475,5.014618],[0.524990,5.977894,-8.676912,1.440745,0.556868,6.341151,-2.617548,-9.921968,3.813420],[-7.219711,1.896295,-2.244583,0.464666,-9.793046,7.707101,8.695910,4.166071,-6.209708],[-7.739600,6.656750,1.343946,-0.319551,-2.478219,6.786144,5.635842,-5.796239,-9.394312],[-8.539790,-2.115659,5.610305,-2.573712,-0.333129,0.365225,6.516883,6.477464,-3.307597],[3.565358,-3.702320,2.642595,-3.283908,8.222682,4.813906,2.105535,-2.351295,-6.629345],[0.042651,-9.138595,6.470488,8.973927,1.188160,3.298021,8.908224,6.761354,7.538351],[7.254884,4.119246,-3.806616,4.128148,-9.826354,1.226645,3.213290,-7.207328,4.619674],[-0.713378,-8.226687,8.780739,5.156527,0.743517,-2.055238,1.034440,-9.480730,6.982672],[1.021594,-7.066378,-4.872856,-2.998154,-3.058872,6.059262,-0.327589,-4.908382,-0.245424]],[[4.182988,-5.136424,-3.173156,0.458700,4.760555,-6.151621,-9.741154,3.510072,7.169051],[-0.872372,4.050051,-6.067643,-1.709440,-7.471464,-8.666222,-7.450834,-3.195524,-3.494851],[-8.546055,-4.293058,3.240308,-9.097473,-1.844183,-2.762766,6.954742,-9.277260,9.919333],[0.430260,4.474727,5.050983,-2.237851,2.506396,-3.622737,5.601155,6.781620,-2.178159],[-4.534231,-9.020699,-0.480731,2.692469,-4.129305,4.350599,-8.127231,1.190283,-7.812390],[2.280622,1.689624,-4.909599,-2.694468,-5.058332,1.232086,-0.698510,7.668059,2.032621],[6.657915,1.465458,-4.805264,-7.007941,2.585185,-2.274444,-4.844393,5.268428,0.616298],[6.861819,8.678631,0.890358,7.183917,9.907228,8.921267,-3.915679,1.079272,-4.855638],[-1.743014,-0.572433,-2.621734,-7.451296,3.089293,-3.315763,4.238944,-2.058377,2.352944],[8.581784,-3.777200,5.084826,3.679210,-7.689723,8.936431,-6.251771,8.747781,-9.623935],[-9.346403,-3.862337,-4.500985,-2.956371,3.715975,-1.877661,-9.126070,3.588296,-6.551441]],[[-4.658522,-4.333923,-3.581681,7.991961,-7.210731,-9.414375,6.360116,0.318075,-4.053904],[-2.471539,7.036687,0.055953,3.353411,9.409557,-6.809109,7.793558,-9.822149,-9.303903],[-0.839388,4.072568,-0.029898,8.563821,-3.256528,-1.788169,-6.718320,3.657818,-8.095737],[1.408512,7.053515,-0.749857,4.546214,-6.360878,6.841038,-6.781884,6.854070,-0.389642],[9.938294,8.103850,-3.518072,-6.544364,-1.084733,-1.623206,8.462610,-5.550995,9.239964],[-9.632272,4.611496,-3.627534,3.893549,-0.259060,-5.324008,2.804740,-2.361587,-6.184872],[-1.779622,6.938535,-8.700538,2.168448,7.028325,-0.989536,-0.758887,6.400019,-8.922758],[-8.866847,9.611550,-8.395837,-2.110149,9.025937,-7.053000,1.934867,9.597421,1.974238],[0.731290,0.828257,6.828481,5.324561,-3.807479,9.737284,-3.210827,7.061721,-1.310202],[7.756176,4.993807,9.369998,-0.079005,-3.818934,0.187651,-6.555004,-6.577665,1.038259],[5.349692,1.444215,-5.955587,-4.632027,-3.954881,-8.626867,0.635904,0.099751,-6.766509]],[[-6.822412,-6.555509,-4.219268,0.573140,-6.500102,-0.156905,2.155089,-1.013458,-5.721238],[0.117456,9.920035,-7.775910,-8.012495,7.488897,-5.920895,-0.181401,7.735191,8.493131],[-7.769705,-6.858969,-0.878922,-2.532398,-4.889377,-4.478044,9.196562,-6.595400,2.668644],[-4.399430,-4.999668,-9.227349,-0.259535,-7.669153,0.403676,4.985880,-7.832872,-6.439501],[2.933453,-2.667203,6.940466,-1.893813,-4.456230,6.821782,5.464785,9.212563,3.371196],[-9.842647,-1.460205,7.102789,-7.626860,2.613315,-0.251821,2.381193,-4.949964,-0.708310],[-3.464126,8.293619,8.499694,-5.386433,-9.916614,-9.920192,4.093729,9.811983,2.675641],[3.512424,-5.832470,-0.549804,-3.893085,-0.303496,6.868286,-7.231403,7.672075,-9.017396],[-1.709710,1.735919,-3.297184,0.572451,-5.320117,0.504087,1.662951,1.604196,4.110791],[6.892634,0.629547,5.162074,-1.159633,-8.017340,7.360338,-4.614901,7.853248,-0.415147],[9.895856,-5.623306,5.184648,-4.370010,-2.695028,-4.065058,1.760424,-2.536423,4.844591]],[[-1.942757,4.605779,0.568907,3.949757,3.977333,1.688390,4.100503,5.965055,-7.611616],[5.942717,6.616243,-4.739859,-1.801752,4.316653,-5.763623,-2.847715,-4.797505,6.938943],[-3.505519,9.673718,0.043174,7.511882,-7.186743,-3.857925,7.261582,1.882733,-7.022623],[-8.662115,7.388199,0.087763,-2.593501,-9.905892,6.671717,-2.337022,4.836488,1.107504],[-3.983742,9.387853,6.774589,6.956813,4.330326,-5.907812,-2.814820,-7.464299,-9.382991],[8.654376,5.977382,-8.684898,0.075315,-1.588735,-8.544192,-2.782280,6.707445,4.383474],[0.482833,1.425206,3.607213,-6.006234,5.270986,-8.282915,-8.351847,-7.152405,0.485536],[6.537870,-2.607267,8.018526,8.783660,8.136821,1.101897,-1.971026,-5.088072,-0.430938],[4.152207,0.182259,4.891066,-1.672148,-7.118731,-7.811886,1.394879,-2.792960,0.522296],[3.721251,3.030880,3.320899,2.691076,-5.681171,-2.541861,-4.578685,1.847216,-3.424529],[8.854083,1.689876,3.371807,7.577920,8.974062,-2.999305,-1.771086,9.880900,4.306165]],[[-3.884503,-5.501792,-7.519218,3.407914,-8.983479,-2.939802,-9.107714,-6.441654,3.220581],[0.566051,-8.108024,1.304021,0.615514,-5.718591,7.301128,-7.497794,4.200088,-1.073220],[9.007209,-4.996197,0.394937,-6.264927,-2.729713,1.140715,-9.551469,-0.605704,2.476672],[-1.881244,5.126584,9.475815,-0.508745,6.166005,6.122844,0.348489,3.963930,-2.176473],[-6.471740,-7.188184,2.876199,5.892096,-6.354510,1.841422,6.303349,6.698690,-4.885361],[5.487119,-6.743984,-0.999293,5.579428,-8.653634,0.424260,7.023351,5.026852,-9.984654],[1.007069,-6.726882,-1.351851,7.015280,2.144749,-3.841261,4.322824,-7.479201,-0.112051],[3.420801,-0.323969,4.813750,9.275104,-9.643049,-4.556059,6.384243,-8.790293,-6.290477],[5.307237,-3.556231,-7.479073,9.757794,-7.381552,8.459843,-8.046252,-9.029735,-1.750291],[1.657666,-2.892101,-6.270919,-7.366131,-7.723442,7.738994,4.402200,-9.287010,-8.678203],[6.875429,5.264669,0.434949,-7.165690,4.019351,4.198012,-3.831473,3.007406,-2.514442]],[[-2.856233,-1.084398,6.853399,3.161221,-6.171387,-4.954409,-6.817821,-9.982975,4.823367],[-4.393160,-8.684167,9.408622,5.379903,-5.952616,-1.747824,-1.564934,1.192141,-3.166941],[-9.464927,-3.690712,9.454088,1.698490,-7.943874,8.149997,-9.862071,4.265167,-4.596577],[-7.244787,5.607704,-8.780669,2.763149,-8.050989,5.105353,8.349507,-0.351130,0.290514],[-5.229819,2.398427,-4.041523,-8.252284,-3.136542,2.246164,-9.481266,-3.028236,-0.353849],[-1.098275,2.813860,4.460615,9.586280,-3.128052,-9.928047,5.296479,7.729987,7.128003],[-7.004561,-5.556379,9.724211,4.184604,4.723881,6.821934,-5.367366,0.132924,-7.535116],[7.281964,7.367077,5.293818,1.689712,-3.815404,0.545464,-6.278188,5.151304,-3.149677],[1.290689,5.085355,4.689281,-8.160945,-8.360188,1.757356,-9.733069,-3.019151,1.028049],[2.324418,-0.269554,8.589926,4.613549,9.894840,-5.198106,-9.204470,0.735994,-6.584799],[-2.543618,1.131687,-2.796090,-1.063888,2.117503,-1.792018,-5.066145,3.039397,5.700043]],[[4.733081,-3.532745,5.433384,-4.121245,-5.061986,5.207752,2.451555,-9.716931,-2.991137],[5.976933,4.871759,9.898426,8.596856,-4.937909,1.613173,4.368724,-2.920627,3.528946],[-0.693575,5.789934,-5.619009,0.326968,4.132700,-7.114888,-6.078415,-5.478352,-5.107160],[2.561897,1.554971,-5.253018,5.532204,2.667168,5.656639,-2.586897,2.527883,3.850477],[-4.696344,4.914041,-5.955416,-5.561792,2.539846,-2.712286,-1.930037,-6.575819,1.068892],[-5.950481,-7.536746,6.545646,0.929323,-2.215221,6.991098,-5.400695,-9.596702,5.259829],[2.155602,-2.815579,-6.310480,-6.593664,-0.261161,7.392200,9.574065,8.604580,8.973845],[3.914293,-5.982610,5.833088,4.030271,8.418320,3.873904,-6.529730,-4.984411,-5.831708],[-2.009789,-6.012514,2.840911,-3.097135,9.535307,-9.966314,-8.148701,1.635346,7.382778],[2.007652,-7.152210,7.197488,3.390577,-0.783658,-2.908888,5.136225,3.381353,2.009181],[7.568618,2.406276,5.346490,4.228666,-3.787352,-0.821607,-3.145916,-0.622995,5.432230]]], dtype = "float64")#candidate|5567|(15, 11, 9)|const|float64
var_5568 = relay.var("var_5568", dtype = "float64", shape = (15, 11, 9))#candidate|5568|(15, 11, 9)|var|float64
bop_5569 = relay.floor_mod(const_5567.astype('float64'), relay.reshape(var_5568.astype('float64'), relay.shape_of(const_5567))) # shape=(15, 11, 9)
output = relay.Tuple([bop_5569,])
output2 = relay.Tuple([bop_5569,])
func_5588 = relay.Function([var_5568,], output)
mod['func_5588'] = func_5588
mod = relay.transform.InferType()(mod)
var_5589 = relay.var("var_5589", dtype = "float64", shape = (15, 11, 9))#candidate|5589|(15, 11, 9)|var|float64
output = func_5588(var_5589)
func_5590 = relay.Function([var_5589], output)
mutated_mod['func_5590'] = func_5590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5616 = relay.var("var_5616", dtype = "uint32", shape = ())#candidate|5616|()|var|uint32
var_5617 = relay.var("var_5617", dtype = "uint32", shape = (1, 14, 2))#candidate|5617|(1, 14, 2)|var|uint32
bop_5618 = relay.bitwise_xor(var_5616.astype('uint32'), var_5617.astype('uint32')) # shape=(1, 14, 2)
output = bop_5618
output2 = bop_5618
func_5621 = relay.Function([var_5616,var_5617,], output)
mod['func_5621'] = func_5621
mod = relay.transform.InferType()(mod)
mutated_mod['func_5621'] = func_5621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5621_call = mutated_mod.get_global_var('func_5621')
var_5623 = relay.var("var_5623", dtype = "uint32", shape = ())#candidate|5623|()|var|uint32
var_5624 = relay.var("var_5624", dtype = "uint32", shape = (1, 14, 2))#candidate|5624|(1, 14, 2)|var|uint32
call_5622 = func_5621_call(var_5623,var_5624,)
output = call_5622
func_5625 = relay.Function([var_5623,var_5624,], output)
mutated_mod['func_5625'] = func_5625
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5636 = relay.var("var_5636", dtype = "float64", shape = (5, 3, 8))#candidate|5636|(5, 3, 8)|var|float64
uop_5637 = relay.atanh(var_5636.astype('float64')) # shape=(5, 3, 8)
var_5640 = relay.var("var_5640", dtype = "float64", shape = (5, 3, 8))#candidate|5640|(5, 3, 8)|var|float64
bop_5641 = relay.add(uop_5637.astype('int16'), relay.reshape(var_5640.astype('int16'), relay.shape_of(uop_5637))) # shape=(5, 3, 8)
func_2744_call = mod.get_global_var('func_2744')
func_2746_call = mutated_mod.get_global_var('func_2746')
const_5649 = relay.const([-5.772498,1.152070,2.242960,-2.450223,-1.170169,0.150544,5.173867,-0.763173,3.879588,5.822056,2.130873,-5.963846,2.862457,-0.260407,3.094734,-8.320069,2.483459,3.422698,-8.203845,1.590026,9.981160,5.465326,8.175645,9.427028,-1.969533,5.525388,4.062961,-3.706904,-7.198465,-3.255467,-1.806992,5.569786,-1.722433,4.508279,-7.549894,4.460786,5.975966,-8.405493,-5.782446,-8.815151,0.461539,-7.083129,2.810844,4.384983,-9.371489,-7.438935,-0.646581,-9.662383], dtype = "float32")#candidate|5649|(48,)|const|float32
call_5648 = relay.TupleGetItem(func_2744_call(relay.reshape(const_5649.astype('float32'), [2, 8, 3])), 0)
call_5650 = relay.TupleGetItem(func_2746_call(relay.reshape(const_5649.astype('float32'), [2, 8, 3])), 0)
func_5226_call = mod.get_global_var('func_5226')
func_5229_call = mutated_mod.get_global_var('func_5229')
var_5652 = relay.var("var_5652", dtype = "float32", shape = (2184,))#candidate|5652|(2184,)|var|float32
call_5651 = relay.TupleGetItem(func_5226_call(relay.reshape(var_5652.astype('float32'), [14, 12, 13])), 0)
call_5653 = relay.TupleGetItem(func_5229_call(relay.reshape(var_5652.astype('float32'), [14, 12, 13])), 0)
output = relay.Tuple([bop_5641,call_5648,const_5649,call_5651,var_5652,])
output2 = relay.Tuple([bop_5641,call_5650,const_5649,call_5653,var_5652,])
func_5654 = relay.Function([var_5636,var_5640,var_5652,], output)
mod['func_5654'] = func_5654
mod = relay.transform.InferType()(mod)
var_5655 = relay.var("var_5655", dtype = "float64", shape = (5, 3, 8))#candidate|5655|(5, 3, 8)|var|float64
var_5656 = relay.var("var_5656", dtype = "float64", shape = (5, 3, 8))#candidate|5656|(5, 3, 8)|var|float64
var_5657 = relay.var("var_5657", dtype = "float32", shape = (2184,))#candidate|5657|(2184,)|var|float32
output = func_5654(var_5655,var_5656,var_5657,)
func_5658 = relay.Function([var_5655,var_5656,var_5657,], output)
mutated_mod['func_5658'] = func_5658
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5879 = relay.const([[[3,-2],[-1,-7],[7,-7],[2,-9],[7,5],[-9,5],[-10,-8],[-3,6],[-10,-7],[9,5],[6,1],[3,10],[-5,6],[-10,4]],[[5,-5],[-4,-4],[-1,3],[-5,-8],[-10,8],[6,5],[-3,-7],[-4,-6],[-5,-7],[4,-1],[-2,-7],[-5,-9],[-1,-2],[7,2]],[[8,4],[2,-9],[1,-6],[-7,1],[5,6],[2,-9],[-2,-2],[6,-10],[3,6],[-4,-4],[1,1],[9,7],[2,4],[-1,-5]],[[-3,2],[2,6],[8,3],[-7,8],[-7,5],[-2,9],[-6,-6],[-5,-9],[-1,-2],[5,-10],[-9,6],[10,-1],[-4,10],[-9,-2]],[[2,-3],[10,-9],[-5,5],[6,4],[6,1],[-3,-2],[9,4],[1,-6],[-3,-3],[-10,-5],[-1,8],[6,5],[1,8],[8,-2]],[[-4,-8],[2,9],[10,-10],[4,7],[8,5],[9,-5],[-3,6],[-7,-10],[-7,-5],[10,-4],[-5,5],[2,7],[9,-3],[9,9]],[[-5,5],[5,10],[-6,9],[-10,-10],[-9,-6],[-7,10],[-2,-2],[-5,5],[6,-9],[-9,-3],[5,-1],[-6,9],[6,-8],[-8,-8]],[[-3,1],[3,-7],[10,-2],[-8,-4],[-8,7],[-7,-1],[2,5],[10,-10],[6,-3],[1,-2],[8,10],[8,9],[8,-9],[-2,8]],[[-2,4],[8,4],[-9,-5],[-7,-1],[-10,10],[-4,3],[5,-9],[-4,1],[-1,7],[2,3],[8,-2],[-4,9],[6,1],[10,-6]],[[-8,2],[-1,10],[-1,-3],[-8,-6],[4,-1],[-3,-4],[2,10],[1,-7],[-10,-3],[-5,5],[1,10],[-4,-6],[-6,-1],[-9,-9]],[[10,3],[7,2],[-10,-10],[-9,-2],[5,-2],[8,-1],[6,5],[-7,-4],[-6,-10],[-6,2],[-7,-2],[9,9],[-6,7],[10,10]]], dtype = "int16")#candidate|5879|(11, 14, 2)|const|int16
var_5880 = relay.var("var_5880", dtype = "int16", shape = (11, 14, 2))#candidate|5880|(11, 14, 2)|var|int16
bop_5881 = relay.less_equal(const_5879.astype('bool'), relay.reshape(var_5880.astype('bool'), relay.shape_of(const_5879))) # shape=(11, 14, 2)
output = relay.Tuple([bop_5881,])
output2 = relay.Tuple([bop_5881,])
func_5886 = relay.Function([var_5880,], output)
mod['func_5886'] = func_5886
mod = relay.transform.InferType()(mod)
var_5887 = relay.var("var_5887", dtype = "int16", shape = (11, 14, 2))#candidate|5887|(11, 14, 2)|var|int16
output = func_5886(var_5887)
func_5888 = relay.Function([var_5887], output)
mutated_mod['func_5888'] = func_5888
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5968 = relay.var("var_5968", dtype = "uint8", shape = (3, 10, 16))#candidate|5968|(3, 10, 16)|var|uint8
var_5969 = relay.var("var_5969", dtype = "uint8", shape = (3, 10, 16))#candidate|5969|(3, 10, 16)|var|uint8
bop_5970 = relay.left_shift(var_5968.astype('uint8'), relay.reshape(var_5969.astype('uint8'), relay.shape_of(var_5968))) # shape=(3, 10, 16)
uop_5977 = relay.acos(bop_5970.astype('float64')) # shape=(3, 10, 16)
uop_5983 = relay.atan(uop_5977.astype('float32')) # shape=(3, 10, 16)
uop_5986 = relay.log(uop_5977.astype('float32')) # shape=(3, 10, 16)
func_5621_call = mod.get_global_var('func_5621')
func_5625_call = mutated_mod.get_global_var('func_5625')
const_6001 = relay.const(-8, dtype = "uint32")#candidate|6001|()|const|uint32
var_6002 = relay.var("var_6002", dtype = "uint32", shape = (28,))#candidate|6002|(28,)|var|uint32
call_6000 = func_5621_call(relay.reshape(const_6001.astype('uint32'), []), relay.reshape(var_6002.astype('uint32'), [1, 14, 2]), )
call_6003 = func_5621_call(relay.reshape(const_6001.astype('uint32'), []), relay.reshape(var_6002.astype('uint32'), [1, 14, 2]), )
func_5551_call = mod.get_global_var('func_5551')
func_5553_call = mutated_mod.get_global_var('func_5553')
var_6008 = relay.var("var_6008", dtype = "float32", shape = (2100,))#candidate|6008|(2100,)|var|float32
call_6007 = func_5551_call(relay.reshape(var_6008.astype('float32'), [15, 10, 14]))
call_6009 = func_5551_call(relay.reshape(var_6008.astype('float32'), [15, 10, 14]))
func_2455_call = mod.get_global_var('func_2455')
func_2459_call = mutated_mod.get_global_var('func_2459')
const_6014 = relay.const([4.242730,4.971114,-9.243433,9.716809,-1.039424,5.217688,0.129337,7.351432,-0.926323,-4.693269,-7.230187,6.914481,2.887979,4.607353,-5.221538,7.761953,6.152247,7.104258,-3.635738,-6.925925,-9.273323,2.323493,-2.132011,-5.814343,-1.458881,-7.338801,4.156266,-2.261548,2.315001,9.286462,-7.014965,6.012939,0.918444,-3.363593,4.702113,-3.865411,-8.347127,1.948018,-9.573754,-5.895467,-0.623018,-9.722090,-7.788578,8.981475,-6.104490,1.285154,5.692998,-2.527546,9.535519,-9.307363,4.371698,-1.847133,4.345735,-3.450662,-3.382926,-9.805444,5.750540,-7.092543,5.679024,1.981540,-7.423389,-0.475760,4.279097,-8.208550,3.463356,7.079379,1.238505,3.140243,5.827780,-7.369730,-1.670610,7.057855,6.879254,4.920651,9.071361,6.389445,4.980742,1.445250,-5.257543,-4.271983,-4.618612,8.259671,4.297774,-6.962954,-9.657457,-6.887004,9.486064,0.406518,4.825907,0.395983,7.275987,-3.759965,9.427437,-9.663153,5.978864,0.219071,-9.549235,0.580795,6.756124,0.588673,3.453914,-9.104542,6.125192,7.368912,-3.584854,0.062594,5.433935,9.606351,4.082983,9.457516,-4.269884,-5.292896,1.089026,-4.097491,-5.393474,-3.690393,-1.129437,-5.283798,-8.601289,-1.455741,7.337062,8.457605,-8.250911,1.629205,-8.044544,-0.630330,2.929014,7.151985,4.480390,-3.154630,1.344892,8.047254,3.568018,9.531723,1.622698,5.632693,8.706189,-1.794828,7.143831,0.496738,-4.857273,-3.798632,9.705522,-9.062857,9.705082,-8.970254,5.341550,-1.986687,9.584797,1.145821,-8.975777,9.030601,3.250899,8.352496,5.071366,-5.563663,-3.129949,-0.797534,-7.813754,-5.909835,8.262815,0.052899,-3.032355,0.901058,8.852349,9.107235,3.385969,-1.555037,-4.358664,1.553185,-3.844972,4.530386,-7.760180,-5.419037,-5.761184,5.339489,1.169187,-7.092505,-7.461260,-0.652070,-8.512249,4.461109,-8.192367,-7.999299,0.064432,3.458812,0.169587,1.732163,-1.646003,0.361489,-1.194262,-8.344827,8.521074,-2.416633,-6.041241,6.931694,-2.428430,6.571001,-5.234460,4.518245,4.296236,-6.104628,9.488464,8.258428,4.926030,-1.450442,6.655500,-3.860696,4.051973,-6.304109,0.629599,4.686517,6.347732,-9.550396,-4.316958,7.220757,-4.389754,8.831104,8.238050,5.688928,2.649627,6.575615,-8.307804,3.594962,-9.134213,-5.144340,7.488472,2.322660,-9.365536,9.569764,0.807889,-8.628163,-3.407074,2.446068,-1.832959,-3.300219,-4.158857,-1.498734,7.533187,-2.569285,-4.842986,7.201301,-2.764211,-3.429270,7.476911,-4.341943,-8.007069,-9.743043,-3.793706,6.903185,2.913056,-6.106510,6.127497,-6.849202,-4.837365,-7.977371,1.861029,-6.994726,-8.829711,-3.500150,-4.946721,-4.087457,-0.895998,4.545890,-8.266801,1.985015,5.927791,7.299368,0.990869,8.035917,-6.901481,-5.638110,-0.783653,-4.177924,5.997164,-1.430442,0.130666,-5.920821,5.603564,-2.214605,-9.284126,5.109343,0.102069,-0.812066,7.716183,-4.659502,7.668640,8.824249,7.080350,-4.154675,2.343545,8.156542,8.747304,-2.681480,7.563056,-5.694969,-3.237434,1.780173,-9.612861,-1.958652,-5.861994,-7.058170,2.685724,3.639894,6.548898,6.936678,-6.645415,6.432930,0.060753,-2.175273,-9.011580,-8.344107,3.063870,-6.483418,-1.451895,6.733684,7.131872,-0.367776,6.293836,4.757554,-2.686265,2.625969,8.356858,-4.870786,-1.771274,-7.505539,-9.417621,-5.960157,-1.360638,9.984072,8.708538,1.464013,-1.530168,-5.579663,1.357061,-1.005294,-8.047628,-7.461097,-5.625647,-6.540270,-4.943469,6.509332,-6.372678,-3.188207,-4.779453,3.729649,-1.305367,-8.247467,-5.460464,-5.194173,7.458280,2.507499,0.933289,9.414914,0.663106,-7.415953,-8.493446,-8.475390,8.990113,-8.733771,-5.894568,-0.852570,-9.421063,-6.674744,0.958319,1.653365,7.145335,-8.493717,-3.649080,4.786169,-6.909374,4.384470,2.251623,1.225004,-6.413994,1.057928,2.583164,7.229230,-5.399268,-8.648234,6.404228,-2.872576,5.502141,6.070498,5.163536,1.975865,-3.786596,-0.905660,-4.548565,2.083959,5.250812,9.898039,-9.740692,5.400047,-7.131675,-2.956450,6.334652,1.387200,7.921966,-5.298227,3.275896,-5.816015,8.616699,2.459239,-3.821889,-1.947263,2.061741,-7.438610,4.457057,6.377423,-2.719694,2.432337,-4.535824,-8.419570,4.764892,-0.437899,-2.936184,-8.051705,-6.911634,8.286553,-2.782295,-8.567371,1.135926,6.242098,-6.215657,4.578772,-6.467454,-4.516915,8.706455,3.305423,-6.380249,1.015319,-0.377465,-2.402980,6.042560,-3.368431,8.671024,-0.035640,2.984049,2.751477,-1.170953,-6.599203,7.690962,9.464129,7.203302,9.279032,3.747720,-4.691737,7.532462,-7.246035,-9.708108,-8.811328,3.422182,9.093864,7.896041,3.431541,9.302414,-4.513606,-2.676442,6.256423,-1.021247,3.941089,5.174301,-0.837922,-5.470554,5.694296,3.383641,7.719932,-1.765929,2.537495,5.531442,6.787164,4.247285,-8.686561,-9.411576,7.603048,-3.486373,-0.872219,0.573624,-9.569715,4.465084,-3.453042,-5.137951,0.215455,-4.852447,-2.895552,6.825908,-7.894355,4.305522,2.953694,-2.180354,6.475230,4.828865,-8.742483,-5.294373,8.886413,1.518992,-7.521466,1.309222,-7.525516,-8.222277,3.819224,2.639271,-0.228461,-0.781137,-6.158413,6.287742,-4.846990,9.367035,6.547687,7.826750,5.432787,-3.350609,-2.576625,8.836916,-8.753495,6.874626,-3.833890,7.576036,-3.146251,-7.089406,6.680809,-6.754724,-0.144306,-8.516050,4.475248,-9.597697,-1.722089,-4.397798,-0.606230,-4.109908,2.238284,5.299105,-2.955305,8.270298,-4.035480,1.023157,7.708816,6.935155,9.786726,0.285667,-1.661080,4.138856,-3.339052,4.113690,8.405895,2.002443,-2.604517,-8.696423,-9.598237,5.774052,5.856195,-8.074076,-9.506692,3.158610,8.914142,-5.919836,-9.333342,4.097342,9.992311,-5.358664,-5.277208,4.800509,-6.262312,1.716879,2.725688,9.325245,3.021493,6.946144,-5.215357,1.797124,8.535998,5.916021,0.682010,3.689066,6.392933,7.370492,7.521357,-2.094747,6.958301,-4.059217,-0.462301,1.351468,2.569445,5.836796,1.904121,-6.716473,-3.251586,8.814770,-2.406533,-3.994445,-4.521469,0.088987,0.680191,5.793311,2.343312,0.071724,4.986210,5.288852,-6.079963,-3.834066,9.977693,-3.989894,-3.043368,0.846525,-0.258380,7.294869,4.800518,0.033333,-8.664089,7.649625,-6.087343,-8.664021,-3.287378,7.303687,-3.919034,-8.146897,-5.500980,-6.561882,-3.483502,0.863303,8.799372,6.179892,1.821043,0.479042,3.077379,7.954088,-9.948133,-0.181034,1.840806,5.447463,7.341395,0.669261,-4.059843,9.784211,2.134522,-6.165938,7.791336,2.504444,-1.966890,-8.783242,-7.019310,9.142480,6.342255,7.812566,5.492781,2.801850,-4.803534,-7.952958,-9.638364,-0.614909,-9.087730,-7.340123,-3.191019,-6.077295,4.542373,1.338800,-1.732735,-3.324677,-8.423958,-0.554824,-0.072544,-6.340347,-9.629315,3.445077,-0.824015,-6.452409,-6.527987,-1.156082,6.705290,1.695679,-5.282048,-4.851467,-3.570649,-9.588816,-7.213966,-4.519208,-1.331523,3.840335,-7.594435,3.094185,-4.933259,8.094793,8.117048,-7.867175,6.455980,2.073746,-4.912793,-6.558875,-9.232519,0.665074,-1.075977,2.734004,-3.107950,4.094200,8.245579,-1.516313,0.638499,2.022064,7.057353,6.872468,8.738854,-3.030356,-2.947102,-0.672144,-3.165496,5.148029,-2.804366,5.080544,7.311164,3.517185,-0.062519,1.014722,4.555563,-8.303956,-9.799455,6.307911,-8.514615,7.325514,8.492591,6.087082,0.289789,-0.794751,3.938323,-0.084556,-9.633824,5.712934,9.136654,-8.242352,1.516285,-6.718928,-8.822141,-6.591493,4.295870,7.948364,5.359461,-3.770715,6.264941,-7.800465,9.250226,-5.682620,-7.899160,-6.334869,-2.260532,2.009388,5.303914,1.770475,4.864034,-3.680417,5.861415,4.059786,-9.626113,0.509313,-7.085162,-8.042953,-0.486943,-7.300695,-9.733871,2.922983,5.884322,6.358246,-2.226303,0.138508,-3.370376,-6.970290,2.999778,-4.386592,-6.628996,-4.229941,-9.024324,-7.338717,6.968122,0.317052,3.946605,-3.834293,1.678965,8.975005,-6.730467,-0.934598,-6.077193,-5.143895,-0.957775,2.905510,-0.800343,-5.619533,-5.993499,7.609448,2.297053,0.557558,2.273200,2.960724,0.486090,-2.660171,3.664640,-9.614503,-3.428145,-1.948187,-1.028209,4.367425,6.886977,7.047384,-9.088668,7.412781,7.752084,-9.990010,-5.541547,-4.127856,-6.318003,9.164940,1.686687,1.756066,-9.733526,-1.290128,7.470458,4.257616,2.631677,-1.108723,6.943761,9.200820,-2.815602,-4.511315,-6.216893,2.456190,5.226905,-6.364328,-2.793480,-6.502551,5.225244,1.945960,-9.960319,9.031283,0.971094,8.474338,6.307246,-4.512009,-9.474274,-9.451868,0.445440,5.189846,-3.627955,1.475311,8.975330,9.573009,-3.202992,6.902966,7.369314,3.629009,-4.184362,-1.156601,2.295700,-3.891008,1.494287,-7.422953,-4.776861,2.217313,-0.615537,9.900488,1.038873,-8.597266,-8.099681,-8.932476,6.846424,-8.280542,1.727036,8.966860,7.573592,-2.999308,4.531890,7.852371,0.460655,-9.835351,3.715948,1.497406,1.067418,3.034611,-6.713436,0.978835,3.446144,6.993658,-4.955381,9.192580,-6.779840,-0.821971,5.425134,7.336965,7.944053,-3.779421,-6.502785,0.670702,0.035711,5.442503,-0.255467,1.413096,-6.580775,-6.359090,-8.990157,9.439347,-5.843116,-9.848077,1.818518,-4.163593,2.231369,-2.410461,-4.990428,7.172263,-1.276014,3.409977,-8.748823,-9.582842,-2.078317,9.147020,-9.536577,4.684253,5.599061,-8.000148,-4.570206,6.553651,9.258805,1.607891,9.416461,-6.812436,1.947712,-5.427100,-2.541005,-9.015835,-0.715498,6.114416,-3.103659,2.944099,-6.035445,4.211565,-3.024935,5.359701,-0.021906,6.363396,8.902990,6.137548,-6.416980,-8.659919,-8.487633,8.449433,4.980030,8.747874,8.743891,1.996427,8.339040,-1.617848,5.677296,1.756764,-5.774398,5.591472,-5.336961,-8.287031,-5.211996,-1.481339,-6.534989,5.131355,-9.535533,0.261192,1.445827,-9.624140,3.615161,-3.632659,-3.810359,-9.530473,7.931434,-0.947432,-1.757135,-0.859956,-6.939343,5.061854,-2.100054,-7.751637,-3.200403,-9.693812,-3.985754,-3.005342,-0.882316,-6.825490,-0.085009,8.374145,-8.095665,-4.407981,9.602779,5.464642,8.174538,-4.959278,-7.147932,-7.002886,-6.196970,-2.434083,0.412301,5.576805,-7.923179,-9.105416,-7.633130,-1.629399,-7.197683,-7.746987,7.863224,4.520718,-3.876959,-5.140268,-4.804604,4.244427,4.690193,2.767094,-3.514530,-5.773362,-5.217840,-0.032671,4.045108,3.534004,3.070601,8.344937,4.222600,4.078798,-6.483850,-9.376678,-3.061862,8.800231,-5.277570,1.548439,5.990322,0.846893,-7.203258,8.352741,-8.353122,2.462022,-4.778290,-6.093649,3.529498,4.117802,3.340154,-5.674152,-5.821207,3.306494,-2.357016,6.254647,4.242740,6.760903,-2.590607,7.842321,7.906734,-7.386733,1.228448,-0.073059,-1.314036,-2.713493,7.817091,-2.656992,-7.931244,-9.728511,-6.519805,7.849536,-9.354116,5.674353,1.075457,4.152096,-8.502425,-3.024991,-0.008469,-1.899163,-0.824439,-8.156677,-4.558646,4.952190,8.194769,2.329268,-3.543925,1.133976,-9.574438,3.908702,4.475842,-1.646061,7.278650,3.742809,1.977839,-6.275504,-2.054437,-9.830701,1.680027,3.151879,3.059294,-3.388369,8.148636,3.873311,5.462199,8.091810,7.253814,-0.864953,-3.423172,4.587227,7.482183,-6.016289,-6.127923,-5.457608,-1.237153,-6.119727,5.460789,0.372938,-8.732292,-2.454660,-7.331874,-1.258587,6.658809,-9.859072,-7.580009,-4.234181,6.699594,6.717082,4.985702,-6.341486,-7.225525,8.143866,6.405256,-4.869449,2.986989,4.927846,5.220661,-6.018191,-0.457490,-1.443506,-8.221551,5.524302,6.639908,0.751919,-4.959422,5.846410,3.041089,-4.357646,1.432015,-2.559569,2.737458,-7.944501,-5.586131,-8.183257,0.011087,0.197066,7.130729,-9.701047,-2.713531,5.220820,7.405971,0.199406,1.665483,7.511920,-4.066758,-5.694001,-2.554196,-8.416260,6.421017,3.798287,-6.780561,-4.052928,1.438873,-0.002023,-8.336721,2.200338,-8.781125,-6.086570,-3.578844,3.672791,-2.938651,9.910157,-2.160409,6.493125,-8.700763,3.440272,1.780165,-2.813655,-7.603929,-3.992228,-0.378404,-5.102202,-4.258607,-2.290531,-1.388829,-7.036960,4.645122,3.490391,6.185298,7.279955,-7.502441,-6.258485,-0.478690,-6.077891,-8.503558,-6.430513,-2.869058,2.514824,8.994719,-9.554947,2.421298,-5.519804,-0.543497,3.637296,-8.109177,6.652370,4.116408,0.342180,-6.112879,-8.419690,-3.516123,5.488084,5.173371,-0.334822,-8.353976,-6.418284,5.233587,0.561119,5.443353,3.257820,9.383348,-3.268101,6.921221,5.146607,6.853680,-2.501294,-6.653227,2.093684,-7.773439,-3.456156,-7.214243,1.754432,-4.509200,9.575260,5.333336,5.292366,4.833783,3.166387,0.403086,-5.827388,-2.261594,8.288362,-9.746457,-0.497508,-9.330331,6.218286,0.955611,-0.825353,8.691716,2.865575,-2.295702,-1.173198,-2.004927,-8.982801,-7.589490,3.160456,5.411454,5.547670,4.008267,0.621662,-1.625482,-7.746771,6.021710,0.222620,-3.508158,8.519331,-3.890392,-4.329360,4.583072,-7.063387,6.529331,-1.470291,-8.255832,-3.988262,4.672040,5.347519,-0.650090,1.434411,-1.215622,4.094721,-3.018365,-2.381527,-6.275193,8.814219,8.134389,8.017893,2.080098], dtype = "float32")#candidate|6014|(1280,)|const|float32
var_6015 = relay.var("var_6015", dtype = "float64", shape = (1920,))#candidate|6015|(1920,)|var|float64
call_6013 = relay.TupleGetItem(func_2455_call(relay.reshape(const_6014.astype('float32'), [5, 16, 16]), relay.reshape(var_6015.astype('float64'), [1920,]), ), 2)
call_6016 = relay.TupleGetItem(func_2459_call(relay.reshape(const_6014.astype('float32'), [5, 16, 16]), relay.reshape(var_6015.astype('float64'), [1920,]), ), 2)
func_2677_call = mod.get_global_var('func_2677')
func_2680_call = mutated_mod.get_global_var('func_2680')
var_6018 = relay.var("var_6018", dtype = "float64", shape = (48, 1))#candidate|6018|(48, 1)|var|float64
call_6017 = func_2677_call(relay.reshape(var_6018.astype('float64'), [3, 1, 16]))
call_6019 = func_2677_call(relay.reshape(var_6018.astype('float64'), [3, 1, 16]))
func_693_call = mod.get_global_var('func_693')
func_696_call = mutated_mod.get_global_var('func_696')
const_6023 = relay.const([3.468208,2.332651,7.285602,4.904923,2.856232,-7.471854,-4.550601,-3.919351,5.464404,-3.529798,-7.242907,0.736306,6.297570,-4.333202,-8.927072,-9.766715,7.495795,0.824892,0.458103,5.725377,-2.484938,-2.209589,-5.292509,9.947633,3.189322,8.798726,0.135056,3.685820,7.508350,1.223182,5.130760,6.385237,6.502055,-5.656920,9.191414,5.768608,7.300649,-4.354540,-8.772000,3.048210,-3.162625,5.093725,-6.632715,-9.540753,-0.622188,7.323047,-4.000208,1.947622,3.661348,-8.399697,7.657851,-8.813076,-8.694296,3.016201,4.308081,-4.095883,7.591469,3.108269,6.894280,0.437095,4.842724,9.615268,5.940147,-5.344390,-4.344171,-6.824059,-4.698909,4.880477,5.370216,-9.196244,4.766565,-0.686567,-1.317601,-9.793927,-4.603677,-1.601512,-2.369756,9.800592,-5.876387,6.823076,-6.730961,-1.131493,-3.666101,6.021741,-7.584353,-2.739305,1.202400,-1.880146,-5.175914,5.358941,-1.541883,1.512479,7.296770,6.037469,-4.423450,9.372968,-2.901951,6.638055,3.161604,-5.473717,-0.694320,1.657171,-1.604017,-5.516360,2.094797,3.649603,7.486438,-7.908250,3.239241,-4.268834,-9.367248,-5.767346,7.399541,-6.938524,0.971305,3.757627,8.833504,1.771848,-3.860038,5.347604,7.239232,-5.155308,3.362796,4.940512,-0.185801,-6.704318,3.484605,0.620613,-0.142956,2.387064,-5.659460,-8.106400,-0.470521,5.913673,3.356744,-9.306858,3.787173,8.743258,6.306289,6.241149,-9.948370,8.148999,4.034236,-9.385285,-9.725426,0.313633,-6.993718,-7.960825,4.480414,-2.744598,-3.950626,2.264406,9.058912,-8.224876,4.986874,-8.509932,1.671757,-5.448871,-1.495936,9.181617,-4.685687,7.127440,-7.560894,3.488204,-4.256541,-6.490281,-7.802202,-1.189773,-5.380164,7.229591,1.992846,8.771571,4.209255,3.027379,-6.620261,-9.569594,7.072372,-4.547022,5.867356,7.929329,5.447489,3.626157,0.816935,2.585341,-1.277475,5.340302,-2.935020,8.404751,-5.066939,5.060817,0.087636,-9.853363,4.792890,-9.204846,-5.706237,-7.213159,2.424765,-5.934621,-1.531813,-0.818835,-7.493701,-5.630085,-9.857565,-2.552151,-8.073702,2.521959,9.012462,-6.306123,-7.317128,8.492100,-9.438149,-5.993329,4.344247,-3.542515,-1.735806,6.522425,-0.514932,4.983329,4.845361,-4.299366,3.237281,1.381845,8.424580,-9.151749,-4.378512,-5.584279,6.235223,-9.053336,7.376952,-4.060651,4.791873,-7.239400,3.448572,-5.639528,7.770412,-9.345018,-6.754784,2.854926,0.132401,-6.200832,-6.946869,-3.636316,8.103101,-0.537931,4.691762,8.516324,-3.383132,1.065306,3.271684,-6.377561,-0.294846,-4.755095,-1.662642,-9.676184,9.947102,2.040940,1.103660,6.077022,-2.349929,-9.725591,7.033811,-6.782663,0.302291,3.675098,8.897024,-0.498352,5.373120,2.406771,-5.094871,3.905160,-0.204017,7.614984,3.333869,-9.322259,2.440994,8.348062,-6.038038,-6.555980,8.546063,6.147477,-8.116490,-6.122440,-0.090176,8.446540,0.227418,-6.514079,-0.655751,-4.036869,-9.523146,4.047114,8.306324,-3.908827,9.637876,1.043695,9.429172,4.712708,-6.779255,9.201856,6.913552,-5.914824,7.898673,-9.503948,-3.135497,7.281742,-4.909009,-6.648211,-6.705276,5.313460,-8.482357,-5.058909,0.198126,6.091761,-0.690307,-2.569700,1.165978,-4.088896,4.923451,-1.203410,6.804038,8.364575,4.389473,9.819639,-3.204990,2.941643,-8.383054,-7.341093,8.665418,1.749807,-9.734162,-6.564588,-8.059587,4.797895,7.044997,-1.175316,3.723324,-1.346434,0.724850,-7.821596,3.290915,-3.142168,-6.005206,0.995309,-3.027116,6.792012,5.968980,2.135738,-6.770562,6.841157,-1.237046,1.573730,1.883859,-0.816127,0.480496,2.425446,-7.552031,-8.565773,-4.727689,3.884327,6.197525,-4.627375,-7.047479,-3.556324,-4.200078,-2.547847,9.400633,-8.497872,-0.054234,-0.588871,-5.015937,-8.629885,6.436230,4.148958,-8.724788,5.300524,8.654689,-1.987927,0.031453,-9.150533,1.539870,-4.952054,-7.889691,2.911896,-5.383718,6.988699,5.197636,3.351794,-9.516004,2.858293,5.700596,-5.834110,-3.350628,-4.959989,-3.359685,2.012906,-9.951124,-8.711699,-0.399838,8.167915,6.564546,9.290982,-4.831369,-3.708635,9.739193,3.970353,-5.541404,7.486684,0.681723,-1.331364,7.832124,4.239563,6.948794,-2.735744,6.825577,-8.303243,-3.051132,-7.310120,9.405082,-3.670473,-1.081511,5.035730,9.249553,7.789856,4.221962,-5.989862,1.838056,-4.270919,-9.186962,-0.288142,-5.036444,-1.887044,7.159499,1.742376,7.930601,9.495590,5.740855,-0.022268,-6.253294,8.629137,2.241243,-5.549744,9.548285,-9.442418,0.583224,-8.893612,6.675145,7.779439,4.464746,8.732950,-8.546090,-0.328965,-8.001412,-3.121942,-5.881969,-1.198085,-2.456842,-7.789381,4.383094,0.484006,9.398148,-0.962238,-7.106440,5.167121,-9.402903,6.986991,-5.645536,-2.069489,-7.329028,4.266956,4.430983,5.087073,-5.705250,5.548298,-7.062974,-8.983012,-4.671978,-7.346131,-5.601592,-2.737924,0.933403,7.138247,2.684863,-8.392458,7.088492,-5.298058,4.891284,-0.942964,8.342736,2.932839,-4.823417,-5.693796,-2.014514,0.830767,-2.678411,2.051320,5.383632,4.873184,-2.881127,8.714967,9.401920,-7.315875,4.133218,-6.806647,1.955743,-4.240199,-3.016909,-2.602329,0.837813,5.454155,-7.754427,6.939622,-4.897974,-2.062918,-8.910503,-4.559782,-5.599770,-8.872155,4.153512,-2.987390,-3.655163,-3.948564,7.041507,5.914376,-8.890582,2.080570,8.778657,3.307855,6.966345,4.539246,3.317628,-6.130786,-3.070891,4.894102,7.608155,-8.149341,-5.622869,-5.589070,-2.061767,-3.592821,6.850561,7.194593,4.178863,-5.226046,-5.449360,-6.775205,9.251316,4.904649,-3.253865,5.538637,0.252347,1.487866,-0.317726,8.922158,-1.691124,9.635812,1.286956,-0.556060,4.510303,-2.859508,-9.634650,1.444774,4.963545,-2.665838,0.895030,9.898997,9.248820,-1.902535,7.104363,-7.384495,-6.005191,3.618225,-2.756773,-1.214934,-3.430088,-3.246910,4.403951,-3.422007,-3.816497,-9.340836,-1.874357,-4.961071,5.539796,9.699075,3.904580,-4.681806,3.158455,5.985642,7.062911,-7.994198,-8.836213,3.706047,-3.746880,-0.904370,-4.023231,3.576165,2.426630,-8.577704,-2.566427,0.709701,-1.744317,3.030588,3.934820,1.463319,-2.635591,-0.778570,-6.044172,1.718424,2.367872,-1.269293,-0.238660,-3.450437,0.843865,-2.893730,-5.663000,6.024075,6.929497,-6.472945,-2.462790,-2.072321,1.756912,3.678205,-4.437038,0.268747,2.136949,2.110107,5.609145,4.139847,-8.050100,-9.305838,6.530307,9.227537,7.368270,8.361619,-4.066720,-3.901847,-4.775896,0.324727,-8.241959,-8.323430,-8.063082,-7.233549,0.590924,9.058532,1.836916,-2.429637,3.187615,-3.907596,8.607846,-6.975786,1.255929,-8.510424,0.959901,-7.400089,-6.750270,8.819376,-5.720289,-8.446917,7.503809,1.288986,0.688404,1.855107,-7.745473,8.392294,0.440541,7.923663,3.022050,-3.895198,6.870878,-9.482871,1.224449,8.650340,1.876656,2.749639,6.267865,-9.967748,-2.598006,6.189557,7.920557,-4.199642,3.336136,3.998315,3.344831,8.369334,-4.996403,-9.552828,9.051106,6.028650,6.072230,3.415003,4.785224,-4.241673,5.122229,-7.506813,-9.557338,0.833119,-3.851579,-4.508272,-8.507041,7.128017,-6.700477,-4.131337,6.412900,-3.595149,-6.632750,1.183487,6.210677,4.553163,2.618824,6.757168,-7.981779,2.664778,0.234222,2.049029,2.988661,-5.589010,-3.203663,4.582637,-8.660770,2.702673,4.454238,8.290083,-3.790653,3.946903,-3.971030,6.802448,8.806516,-6.349453,1.974111,-1.553971,-2.722372,-3.141843,0.623214,-4.386857,9.899297,-2.345277,-4.771356,-4.655807,-8.160137,-4.210550,-3.698594,-7.778270,9.141053,1.188117,-3.501539,9.068626,-2.624453,9.609500,-9.855835,-3.627062,2.680396,-9.133181,-8.420263,-2.492866,4.767154,4.624614,3.261321,2.980071,-7.665938,3.942843,6.978006,3.134720,-7.652691,9.825899,-0.942169,-5.602466,5.370318,2.696455,8.228626,-3.553623,7.779992,4.273322,1.918144,3.430847,0.699236,-1.886995,4.716674,-2.494496,3.637794,-2.621900,8.820844,2.034554,-7.264960,-9.848028,9.779100,-6.238538,1.981963,2.401211,-4.307166,-6.325419,9.765178,-9.822380,9.007541,-2.233073,0.160796,-8.570586,4.224542,1.991844,8.563900,-8.577023,-1.756242,0.019587,-0.699256,4.765237,4.459592,-3.549378,-1.956520,1.118237,9.794249,-1.586781,7.046661,-4.295444,4.354199,-0.855150,6.226768,4.289652,5.082320,8.202672,6.823393,-6.671360,3.382674,5.957240,-4.109353,3.677934,-3.427764,-2.824370,-7.447956,-0.322738,-9.787609,-2.598526,4.687067,2.971041,-0.768046,-7.819289,3.112259,-3.779916,4.325010,8.837424,8.273422,-9.565418,-5.449041,8.802120,7.094714,-2.089345,-5.823816,1.004758,-9.227306,-7.859138,-0.178077,-2.414719,5.174758,-6.474274,-8.883744,-0.736643,-4.214515,3.657508,5.727136,2.409068,8.217163,-9.711373,1.765566,1.016334,5.618681,-0.118623,0.152729,9.286837,-2.992717,1.835418,9.345541,-0.844201,-6.074502,2.136230,-0.690961,-2.625179,-8.777347,2.601417,6.503934,-5.765767,-5.463298,-2.318162,0.308007,-6.784893,5.186258,4.842652,-8.182351,-8.239849,6.348605,-4.498450,-9.912952,8.971882,-5.675397,-6.100767,-2.922688,-5.015353,-6.846072,-6.872234,-0.912662,2.573673,-5.212961,0.534201,-2.035894,-7.587751,2.666572,3.813274,3.616942,-6.127519,6.670597,5.169912,0.579935,-8.859866,-8.503297,-7.165397,7.117463,-9.066617,-9.840211,-2.492040,0.933610,-3.552187,-0.192364,8.161105,5.026549,8.734608,-8.880962,-2.176358,-7.148455,8.454909,6.840527,4.152793,6.270945,-2.686015,9.016897,-8.585559,5.862297,9.760091,-0.928556,-8.107359,4.007635,-4.241834,-7.533117,0.939041,8.401400,-8.093872,-7.548009,-4.955488,7.081359,8.634257,3.254692,-4.163290,6.366941,-0.139219,-7.516121,1.339689,-6.006512,2.653030,-6.983416,3.724871,-1.601138,-9.418704,-1.888144,-8.739525,0.496064,-6.913531,-5.837131,-7.224366,6.134075,8.061689,4.505666,6.302488,7.626492,-3.057574,5.682946,6.594177,7.766554,5.809157,-6.597204,-3.548646,4.965069,2.087262,8.197737,3.820869,-5.466506,-0.223199,5.277714,-6.015898,-0.759854,-0.885765,-8.145529,1.865492,3.884903,8.528307,0.378381,-0.681165,2.584173,-9.611760,2.354954,8.663903,-4.861328,7.661488,9.444669,-9.957013,-1.160931,7.859774,1.206638,1.606843,1.479911,-2.049922,-0.630504,-3.204455,-1.915111,-1.376062,-4.210094,-6.450527,2.873020,7.696978,8.620339,-8.790907,-3.687252,-2.659124,9.664977,6.870885,6.274211,4.187306,-3.628506,1.473635,-1.675301,-6.639833,4.707088,8.734812,-9.477918,6.676138,8.271116,2.434550,5.395715,1.285481,7.715232,-8.277198,-7.274841,-6.510443,8.301396,-9.983901,6.193338,-1.314799,9.268566,7.104448,-5.984713,9.127972,1.819002,-3.045738,-9.182445,6.367783,-3.442063,-4.626791,0.973026,8.669628,-9.118996,-3.048428,-5.004569,-2.945046,-0.464920,0.312126,-4.287797,-2.735190,8.716695,1.860813,-4.095465,-1.456127,-2.423566,-9.559987,0.334527,-2.954761,9.332329,-5.953578,0.180881,8.734302,-8.611921,7.963646,9.927616,-5.190453,-5.435558,-3.590983,-4.953352,7.576525,-7.025953,-6.748461,1.980853,2.619425,5.792138,-8.396223,5.766782,9.566917,-5.637682,-5.368609,-7.131366,-4.118713,-5.024437,-4.784813,5.874990,1.884166,1.751326,-1.287440,-4.381059,4.672340,8.259496,1.291354,8.264234,-3.619767,4.237912,9.365926,-1.226272,-9.714411,-1.149155,2.921364,-0.968892,4.000092,1.787862,-9.949134,-6.711442,4.377550,0.144276,-2.751961,3.863143,-9.399992,0.931637,9.769578,3.989799,3.704720,-3.705552,-1.263256,8.291109,-7.831423,1.969038,4.600555,-4.401674,0.721172,7.389325,-0.926581,-0.820117,3.358185,-0.268832,3.160123,-9.912950,4.295317,-8.362576,9.610837,-2.917873,-2.149433,-7.449620,8.786522,-2.857688,-8.627015,-4.208819,7.084593,6.535103,-5.291321,8.607558,2.928357,-6.724760,-9.893465,-0.878531,4.594178,6.346190,-1.321684,1.446340,-3.111036,-1.072020,6.399743,7.060632,-9.753462,7.069712,-2.357030,-6.208104,-1.743673,-7.340387,0.181329,-6.186586,1.833021,-8.112206,6.897392,1.786734,-9.645690,-3.203549,-3.614930,-3.235041,-2.882922,-2.939686,-2.874170,-2.507174,4.504382,7.311957,-8.528328,5.071008,8.363583,1.567693,2.980766,-5.905492,9.287224,9.782627,-9.807047,-7.094216,5.019999,4.422435,7.270292,-9.149216,-6.666938,-1.124172,7.634226,0.551211,0.952569,3.410251,4.327287,-3.991071,-7.890505,0.631804,3.516299,7.571542,-0.467180,-8.316015,0.095361,-0.628464,-1.882734,-7.430345,4.798085,-0.769963,-4.664835,4.424340,7.819825,-4.541608,-0.746538,-5.513010,4.800351,-0.732323,-1.911055,-4.288074,-0.729559,-5.812991,5.556390,-1.762837,-4.520016,4.617533,0.637243,-1.145542,5.564132,-2.123194,-6.673416,3.262675,4.810699,7.789874,9.081075,8.775222,8.764578,-8.756995,-3.704621,9.784564,-0.552723,4.553622,1.949515,-4.179494,0.869520,-6.774124,-0.685814,4.654532,-4.105536,0.762231,-1.173521,2.678697,-0.603134,-5.070541,-5.586430,2.961630,4.058001,-9.108728,7.324537,8.511109,-9.676787,-7.146264,9.265556,-7.965368,7.508872,4.595762,-7.968759,5.910836,3.443420,7.740203,2.898347,-8.215063,4.678448,2.015048,2.497537,0.521595,4.529036,-9.848922,-5.559332,-2.802208,4.186863,8.911930,-3.590533,-9.259841,8.226630,1.199327,7.582210,3.068934,8.140140,9.469969,7.969997,-1.139478,-7.776742,6.265654,7.886246,-9.946004,-3.917844,-2.179411,-9.165927,-0.092390,-0.238995,-4.389209,3.924291,-7.295074,9.650411,4.045148,3.949213,2.098739,2.846203,-2.426480,-3.423062,0.147034,-7.624792,9.859898,-5.218249,-3.746012,6.053220,-4.278401,-2.977040,9.109677,-4.015416,-4.696497,-1.956894,-5.273190,1.669330,-5.019335,5.642962,-1.394014,9.433789,1.019095,0.617586,-1.439628,-5.458553,3.954295,-2.293175,-5.667601,2.772512,-9.952013,-1.475703,0.283645,9.201061,6.630763,1.040645,-4.327698,0.298035,2.636936,-0.459321,-2.976357,-5.440011,5.658674,-9.191484,-9.429505,4.855534,-2.610142,3.102121,7.310737,4.270237,9.245001,-3.532037,-8.655874,2.200732,-0.877019,0.841629,3.718223,-7.032540,-3.030444,-5.835894,-6.414553,5.384377,-8.868929,7.365211,7.593002,-9.341486,2.893846,2.666133,3.358305,3.079420,-8.015776,-8.636541,2.540930,-0.032344,6.323768,-5.131239,-6.020426,-6.396018,-7.346660,-2.363268,8.929361,-5.651395,5.089644,-9.730097,9.088167,-9.333685,-3.861500,2.489853,6.435938,-3.169113,-1.943952,2.206962,-3.189690,6.875276,2.515993,7.847723,9.295061,0.594088,9.490816,6.859711,-6.832989,-9.537503,-3.705739,-4.504085,4.878879,-8.849596,8.254225,3.798619,-2.919794,-8.445314,-9.433327,-2.620907,2.048705,4.707119,6.350281,5.036264,-3.794968,-5.221488,6.279215,7.528829,4.601535,1.314285,1.116520,7.068779,0.221035,8.488369,2.247748,2.929880,4.787472,6.036940,3.713636,-1.953789,-3.702113,-4.868469,0.218317,-8.276373,-2.940105,6.402301], dtype = "float32")#candidate|6023|(1456,)|const|float32
call_6022 = func_693_call(relay.reshape(const_6023.astype('float32'), [13, 14, 8]))
call_6024 = func_693_call(relay.reshape(const_6023.astype('float32'), [13, 14, 8]))
output = relay.Tuple([uop_5983,uop_5986,call_6000,const_6001,var_6002,call_6007,var_6008,call_6013,const_6014,var_6015,call_6017,var_6018,call_6022,const_6023,])
output2 = relay.Tuple([uop_5983,uop_5986,call_6003,const_6001,var_6002,call_6009,var_6008,call_6016,const_6014,var_6015,call_6019,var_6018,call_6024,const_6023,])
func_6025 = relay.Function([var_5968,var_5969,var_6002,var_6008,var_6015,var_6018,], output)
mod['func_6025'] = func_6025
mod = relay.transform.InferType()(mod)
mutated_mod['func_6025'] = func_6025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6025_call = mutated_mod.get_global_var('func_6025')
var_6027 = relay.var("var_6027", dtype = "uint8", shape = (3, 10, 16))#candidate|6027|(3, 10, 16)|var|uint8
var_6028 = relay.var("var_6028", dtype = "uint8", shape = (3, 10, 16))#candidate|6028|(3, 10, 16)|var|uint8
var_6029 = relay.var("var_6029", dtype = "uint32", shape = (28,))#candidate|6029|(28,)|var|uint32
var_6030 = relay.var("var_6030", dtype = "float32", shape = (2100,))#candidate|6030|(2100,)|var|float32
var_6031 = relay.var("var_6031", dtype = "float64", shape = (1920,))#candidate|6031|(1920,)|var|float64
var_6032 = relay.var("var_6032", dtype = "float64", shape = (48, 1))#candidate|6032|(48, 1)|var|float64
call_6026 = func_6025_call(var_6027,var_6028,var_6029,var_6030,var_6031,var_6032,)
output = call_6026
func_6033 = relay.Function([var_6027,var_6028,var_6029,var_6030,var_6031,var_6032,], output)
mutated_mod['func_6033'] = func_6033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6283 = relay.var("var_6283", dtype = "bool", shape = (3, 16, 10))#candidate|6283|(3, 16, 10)|var|bool
var_6284 = relay.var("var_6284", dtype = "bool", shape = (3, 16, 10))#candidate|6284|(3, 16, 10)|var|bool
bop_6285 = relay.logical_and(var_6283.astype('bool'), relay.reshape(var_6284.astype('bool'), relay.shape_of(var_6283))) # shape=(3, 16, 10)
uop_6295 = relay.sin(bop_6285.astype('float32')) # shape=(3, 16, 10)
func_3773_call = mod.get_global_var('func_3773')
func_3777_call = mutated_mod.get_global_var('func_3777')
var_6306 = relay.var("var_6306", dtype = "int16", shape = ())#candidate|6306|()|var|int16
const_6307 = relay.const([-7,-6,2,-2,-9,1,-2,7,6,-1,-7,-6,-1,1,5,-5,-7,-3,-2,1,10,3,10,7,-9,8,9,-3,5,8,9,4,6,-6,-2,10,-10,-6,-2,-8,-1,-9,2,-1,-3,9,-2,-10,10,-7,-5,-6,1,-7,5,5,2,6,-5,9,8,2,10,-8,-7,5,-3,9,3,8,1,-5,7,-5,2,2,1,-10,5,-3,7,6,-7,6,3,1,9,-5,9,1,-3,1,-9,6,1,8,-5,9,-3,5,1,10,-2,-8,-4,-2,4,-4,4,-6,-9,-4,3,10,10,-2,1,-3,-6,6,2,10,9,8,3,-10,-10,-9,-10,9,-4,3,2,10,8,9,-2,-5,-2,-6,-7,-9,1,-2,-5,-8,-1,-6,-8,-2,-10,6,1,-5,-2,-9,-7,8,6,-6,-10,-2,7,3,-4,-2,7,10,-9,2,-8,-10,9,3,-7,-6,5,-7,8,10,6,-6,-1,-10,3,-2,1,6,-2,-5,7,-6,-1,-7,-5,-9,-2,-4,3,-5,-4,-7,-1,-6,9,-1,-5,1,2,-5,8,9,-2,4,9,-4,-6,-1,-4,-9,-10,-1,9,-3,1,-1,-3,-8,-7,2,2,8,-7,-7,8,3,-8,3,6,2,5,4,-4,-4,-5,-7,-4,-8,-6,3,-3,-9,3,-10,-9,6,-6,3,5,2,-6,10,6,3,3,5,4,-8,-8,-6,3,-5,6,-10,7,-2,1,-5,10,-8,-5,10,8,6,10,-7,6,1,-9,-3,-5,9,7,-4,1,-1,-6,6,10,-2,-4,3,-8,-1,7,1,-9,7,-4,4,-4,2,5,-6,7,-5,-6,2,3,10,5,2,-4,9,-2,3,-9,10,10,1,3,-10,-4,-10,4,-7,-3,-5,9,-5,9,9,-1,-2,-4,-2,-6,-3,-5,-7,6,1,2,8,-10,-4,-1,4,3,-6,-6,-3,1,5,2,-8,-8,10,5,-3,1,3,-2,3,-3,-2,7,5,5,5,-4,8,2,-3,-3,9,4,5,8,-1,9,2,-3,4,-7,-7,-10,2,-10,8,-1,-7,-10,1,10,-9,-9,5,-7,10,-7,-4,10,10,1,5,-4,9,5,-2,-3,-8,-5,4,1,6,1,-7,-8,-2,3,-4,-10,-3,-2,3,-9,2,3,5,-10,-2,-3,-3,-3,1,-2,7,8,8,8,-9,-2,10,-7,-7,-6,-9,7,-1,6,-10,-6,10,-8,6,-10,2,4,-5,-7,-7,3,-1,9,-5,-3,-5,2,5,-2,8,5,-3,-2,-1,1,1,5,6,-5,1,4,8,-1,-9,-7,-4,7,-3,-6,-5,4,2,-9,7,7,-1,-4,-10,4,-8,4,-5,-1,-9,5,-5,1,10,4,-1,5,-4,3,-2,1,9,-3,-8,3,3,-1,-6,-4,2,2,-8,7,6,6,-8,9,4,-10,-8,10,-10,8,5,10,9,-3,1,-1,-2,6,-3,5,-8,-2,7,-8,4,1,-7,1,5,4,-5,-4,9,-5,6,4,5,10,9,-1,3,6,-4,-5,8,8,4,10,-3,-10,5,5,-9,5,5,2,-9,10,-3,4,-6,-7,-4,4,2,-8,-7,8,-10,-5,-9,2,5,-1,9,-2,-8,3,-7,-3,10,-5,-4,4,-6,-10,-6,-2,4,-1,-9,-6,-3,-10,8,9,-5,-7,-9,-5,-10,1,7,8,7,6,4,2,3,-10,-9,10,-5,-5,8,1,-6,5,-6,-9,-2,-8,9,6,3,-4,4,6,-1,-6,-4,-8,-7,-6,-3,5,-7,4,2,9,-5,-8,5,10,9,-6,3,1,-4,-3,1,-6,9,-4,9,6,6,-5,-2,-8,1,1,-7,-3,1,-2,4,-1,-8,-5,8,-3,7,-7,2,-9,-9,-8,3,9,-9,-6,-9,-9,-2,5,8,-6,5,4,-9,2,-3,8,4,-2,10,-8,-5,-5,-9,-8,-8,2,8,-3,-10,8,-7,-3,-4,4,5,3,8,8,10,-6,10,4,-5,8,-1,-3,1,-1,-1,6,-8,-5,-7,-4,10,-7,-10,-10,-5,-2,-5,9,9,10,7,-5,7,1,-4,2,5,-4,-10,9,5,4,-6,-7,-2,-6,-6,-4,-2,8,-10,-2,10,1,2,-5,-3,8,-3,6,-3,6,5,2,-7,-5,-1,-3,3,-10,5,-6,6,10,1,9,-10,3,7,3,6,-10,-5,7,-4,-6,2,-9,-6,-10,-7,-2,3,2,-3,-3,-3,7,3,-5,-10,-8,-3,-1,-4,-7,-7,7,6,-10,-4,-1,6,-4,-1,8,10,-2,-2,3,1,8,8,-9,-5,-5,-4,6,4,2,1,-7,-7,5,1,5,5,-1,1,9,-1,-6,3,-6,4,-4,-8,-5,7,4,5,1,5,4,4,-3,-10,-9,-5,-1,4,3,4,7,-7,1,-2,-3,-4,4,-2,10,-8,-4,7,1,9,-3,1,6,3,-1,8,4,10,-10,5,-4,-1,5,4,-9,-9,7,4,-7,1,-4,1,-2,3,5,2,-2,-10,2,2,-6,-4,2,-8,-7,-6,-7,8,-2,-3,-3,-8,9,2,1,-5,-7,-2,8,-8,9,9,-5,-7,-10,-5,7,-5,-3,-10,-5,3,-3,-2,5,10,-6,-9,-6,7,9,6,-5,-2,2,-3,6,-8,9,4,2,7,10,8,-4,-1,-4,9,-2,8,-5,-10,6,-4,9,-10,-9,-6,7,-7,8,-4,-5,-4,5,10,4,3,-9,7,-2,-7,-6,-3,9,-3,-8,-1,-1,-1,-8,8,-2,-4,-7,-6,-7,-3,-10,-5,-6,7,-7,-8,-3,5,-1,-5,-4,-1,7,-4,-4,9,-3,4,3,3,8,-8,-2,4,8,6,8,4,9,-2,-5,9,-5,5,-2,8,2,3,-9,-9,6,-10,7,10,2,-8,-2,4,10,5,-8,4,-9,5,-3,6,2,-6,1,-4,7,-1,1,-4,3,-2,2,-4,-2,8,3,-9,-1,-5,-10,-5,-3,3,10,-4,9,-7,-2,2,9,-1,6,-9,-4,1,-3,8,3,-7,-3,9,7,-2,6,-4,6,7,-7,10,1,5,8,-8,-7,5,8,-3,-1,-5,-1,-9,-6,10,5,7,3,-1,-5,3,6,3,5,8,-3,10,1,10,10,-1,3,-2,-7,-9,-2,8,4,1,-9,3,1,5,-5,-7,6,1,-5,-6,-5,-7,-9,4,-6,1,3,7,-9,6,-7,10,-1,3,-3,-10,-5,-5,4,8,-6,7,-6,5,-7,1,4,-9,4,2,-2,8,-1,-4,6,-5,4,4,-4,-5,-10,7,2,8,8,5,-2,1,-10,8,-8,8,3,-2,-1,-10,-7,-4,2,7,3,2,-7,-1,-10,2,-2,-2,2,-3,-2,5,-9,8,-4,3,-7,5,10,2,6,7,-4,-10,2,-1,-6,6,7,9,9,9,9,-1,-1,-8,-8,-3,-6,9,6,-4,6,10,-2,-5,10,-8,-7,5,-1,-4,-2,1,10,5,2,10,9,-1,8,-3,-9,5,-9,5,7,-1,6,4,4,6,9,3,-8,9,2,4,3,1,-2,-4,-6,8,8,10,3,7,-1,-2,-7,-5,-4,-4,10,1,-2,3,-1,-9,-4,1,4,1,-8,-6,-5,8,2,8,-7,-6,-5,6,9,-5,6,-2,1,10,8,6,9,-5,-6,-2,4,-2,6,-5,5,2,3,2,9,5,7,3,7,-8,-2,8,10,-5,7,-3,-9,4,9,7,-9,7,8,-4,7,10,2,-7,7,9,1,6,9,3,-5,7,-5,-2,4,7,-7,3,4,-2,-2,-5,-4,-7,3,2,10,-4,2,7,-9,9,3,5,-2,10,-9,10,-8,-6,-5,-8,8,2,-7,7,-5,-2,-6,8,6,-3,3,-8,-10,-1,-5,-2,1,4,-2,4,5,6,4,3,-1,7,-2,4,-1,7,-6,-10,2,4,5,1,-5,5,-2,1,5,-9,3,8,-10,2,5,-2,-6,-1,6,2,1,-3,6,-6,4,-9,-9,-2,6,-5,-6,10,-3,4,2,-1,5,-6,1,-3,7,3,3,-9,7,-9,-10,4,9,3,4,-6,9,2,-4,-7,9,1,3,-10,-1,-5,10,-4,-9,-2,-2,-2,8,3,10,-5,9,-2,3,5,5,-4,-1,-3,7,3,-4,10,-10,-4,-4,1,4,-6,-9,10,2,8,4,6,-9,-1,-6,4,6,8,8,3,-7,6,1,10,2,7,-1,7,1,-2,-9,-7,-6,-4,6,-6,-6,1,-2,1], dtype = "int16")#candidate|6307|(1620,)|const|int16
var_6308 = relay.var("var_6308", dtype = "float64", shape = (280,))#candidate|6308|(280,)|var|float64
call_6305 = relay.TupleGetItem(func_3773_call(relay.reshape(var_6306.astype('int16'), []), relay.reshape(const_6307.astype('int16'), [15, 9, 12]), relay.reshape(var_6308.astype('float64'), [280,]), ), 4)
call_6309 = relay.TupleGetItem(func_3777_call(relay.reshape(var_6306.astype('int16'), []), relay.reshape(const_6307.astype('int16'), [15, 9, 12]), relay.reshape(var_6308.astype('float64'), [280,]), ), 4)
output = relay.Tuple([uop_6295,call_6305,var_6306,const_6307,var_6308,])
output2 = relay.Tuple([uop_6295,call_6309,var_6306,const_6307,var_6308,])
func_6310 = relay.Function([var_6283,var_6284,var_6306,var_6308,], output)
mod['func_6310'] = func_6310
mod = relay.transform.InferType()(mod)
mutated_mod['func_6310'] = func_6310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6310_call = mutated_mod.get_global_var('func_6310')
var_6312 = relay.var("var_6312", dtype = "bool", shape = (3, 16, 10))#candidate|6312|(3, 16, 10)|var|bool
var_6313 = relay.var("var_6313", dtype = "bool", shape = (3, 16, 10))#candidate|6313|(3, 16, 10)|var|bool
var_6314 = relay.var("var_6314", dtype = "int16", shape = ())#candidate|6314|()|var|int16
var_6315 = relay.var("var_6315", dtype = "float64", shape = (280,))#candidate|6315|(280,)|var|float64
call_6311 = func_6310_call(var_6312,var_6313,var_6314,var_6315,)
output = call_6311
func_6316 = relay.Function([var_6312,var_6313,var_6314,var_6315,], output)
mutated_mod['func_6316'] = func_6316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6436 = relay.var("var_6436", dtype = "bool", shape = (16, 10, 13))#candidate|6436|(16, 10, 13)|var|bool
var_6437 = relay.var("var_6437", dtype = "bool", shape = (16, 10, 13))#candidate|6437|(16, 10, 13)|var|bool
bop_6438 = relay.logical_or(var_6436.astype('bool'), relay.reshape(var_6437.astype('bool'), relay.shape_of(var_6436))) # shape=(16, 10, 13)
func_5089_call = mod.get_global_var('func_5089')
func_5093_call = mutated_mod.get_global_var('func_5093')
const_6452 = relay.const(-9, dtype = "int16")#candidate|6452|()|const|int16
var_6453 = relay.var("var_6453", dtype = "int16", shape = (1, 660))#candidate|6453|(1, 660)|var|int16
const_6454 = relay.const([-2.571390,3.963418,-6.587999,8.174855,0.108950,-5.634013,-3.989725,-7.807924,4.655990,8.411205,-9.510611,2.111568,-8.053461,9.940310,9.535618,-2.469596,-6.211446,-8.817267,0.097752,4.189326,2.086363,1.637041,6.792606,1.469803,7.817328,-5.660452,5.694031,-3.320640,-9.666095,0.139791,5.157703,-2.415102,8.561449,-8.438387,-6.347637,-9.555647,2.319213,0.377959,1.783805,8.351705,-4.063507,-3.465299,5.476737,5.601802,7.118525,-9.472415,-7.101720,-0.808682], dtype = "float32")#candidate|6454|(48,)|const|float32
call_6451 = relay.TupleGetItem(func_5089_call(relay.reshape(const_6452.astype('int16'), []), relay.reshape(var_6453.astype('int16'), [12, 11, 5]), relay.reshape(const_6454.astype('float32'), [48,]), ), 2)
call_6455 = relay.TupleGetItem(func_5093_call(relay.reshape(const_6452.astype('int16'), []), relay.reshape(var_6453.astype('int16'), [12, 11, 5]), relay.reshape(const_6454.astype('float32'), [48,]), ), 2)
func_919_call = mod.get_global_var('func_919')
func_922_call = mutated_mod.get_global_var('func_922')
const_6467 = relay.const([9.077837,-7.345344,3.790937,5.305619,2.293343,4.690407,0.724858,-1.668037,3.990245,7.400097,1.223591,4.638619,-4.382557,-0.609706,9.845516,3.340100,-4.814197,9.588409,-8.517444,-2.195208,4.344160,9.198635,-3.455751,8.453754,3.397183,3.705684,-4.446207,4.345799,-7.087547,-7.381966,8.802910,-5.238293,2.728973,-2.448135,-6.007840,-9.744925,-8.583772,5.341821,9.955367,-2.480876,6.356779,1.704010,-8.628648,0.546740,8.750643,-0.847314,4.225848,-9.985339,2.131892,-0.647741,-2.901370,7.537250,-2.154102,3.901507,6.600912,-2.874354,8.307702,0.069041,-3.486539,-3.037529,-9.635712,3.376112,5.490232,4.816436,-5.779515,6.596795,-3.106867,0.508112,7.556143,-3.056812,-4.539840,5.602116,4.866184,-7.335544,1.759245,1.726689,6.340847,7.835835,-5.898680,3.983317,-6.975404,6.545019,6.757337,4.741859,3.580478,-5.133728,3.080154,-2.493091,-7.792882,-0.348234,4.432101,3.446485,-2.194181,-7.174647,8.927576,9.747209,-4.625399,-5.687241,2.190005,-9.156285,-4.267682,5.603432,-7.070619,-8.591603,-6.376417,8.811760,-2.161371,-3.850021,9.319061,2.802578,5.868932,2.778494,-9.933064,1.390671,4.211247,-8.334299,-7.838437,5.656110,9.740033,5.973580,7.465563,-5.020810,-9.153106,-6.853640,8.423811,-6.437124,6.881011,-2.822027,-7.343562,1.777631,3.604441,5.149426,5.776819,-4.312676,-1.607753,-4.940262,-0.809417,0.002823,-6.292764,7.444309,0.937480,-1.101063,5.922298,-2.840289,-6.544713,8.907712,-2.502583,-3.056428,-2.104116,-5.304234,-0.543824,-2.399884,6.765123,8.814396,2.463896,5.484756,3.386477,3.855162,-4.883514,-0.017913,-3.942956,-1.523541,-7.815644,-8.714469,-0.721787,0.618270,-3.683019,5.054559,2.883829,4.077693,6.100128,9.657719,-9.397930,7.463841,3.201558,5.880302,-3.221664,-5.812693,-0.447608,3.007569,5.786890,-8.804058,-1.474073,-1.241628,-4.293038,-5.381875,-5.210973,-6.300307,2.094458,-2.887284,5.489971,-2.155582,0.297681,-3.433421,3.479158,-3.730701,-4.633105,-7.326540,6.528055,-5.599577,-3.970812,1.454005,6.846299,7.610837,-9.621607,1.467138,-4.676896,2.172897,-2.790866,1.128976,0.645955,-7.050594,-7.210794,-8.121630,8.857330,-8.409933,1.796732,9.581760,0.996883,4.840226,-1.839163,-1.790973,-8.026472,-1.457865,5.665181,2.651381,-0.812054,8.492268,-1.462506,-3.125752,-9.928382,-7.471366,-7.160695,-8.548325,-0.850800,3.330518,-1.724484,0.024094,8.190382,7.091365,-5.454363,0.875296,4.888092,8.830028,-3.632434,6.231209,-3.009974,7.092847,2.481537,1.094754,7.040438,-0.245439,-1.836427,8.406848,-5.755162,-4.440419,1.062093,2.209509,-5.690543,-9.431849,-3.843690,-9.323077,3.612872,2.688757,4.433194,5.963093,-2.105808,4.308553,6.607717,-1.017173,1.374905,-8.495420,6.874114,8.994220,5.303620,-3.436135,-9.747294,-1.661736,-8.487160,-8.758624,-2.087723,6.769475,-4.417687,7.124355,9.142727,3.762891,2.459800,1.041559,3.036395,-0.932494,-5.698223,-3.128968,8.982896,0.149057,-8.414903,-7.285753,1.052328,2.021343,-7.842590,7.343559,1.132910,-1.012824,8.393138,8.264175,9.789154,8.908249,-5.349078,-3.662149,-8.198053,-5.996784,1.040359,-6.106280,-1.987597,-2.099776,-9.200578,-7.134192,-4.960257,-5.009176,-6.739425,-5.163769,-4.638648,7.644661,3.596197,-2.244238,7.944917,3.433950,2.241586,1.153110,2.805518,-5.874139,-1.190332,0.229641,-8.154234,-7.093653,8.423835,-9.406203,-3.105530,3.303115,3.729049,3.736083,-6.670845,0.175129,-6.262205,3.853809,5.842667,-9.669666,-6.759703,-6.729523,2.322893,6.033089,-9.305789,-8.484541,6.796861,-4.890369,-3.912941,-5.563081,-2.248318,-3.106742,-5.579664,7.682098,-5.049132,1.022840,4.505574,1.691919,-7.070062,-3.606893,-3.201083,8.928097,-5.170195,-8.890821,-1.953855,3.890473,-5.436878,1.777313,5.272127,-2.231954,-9.145643,-3.170039,-6.370818,8.626699,-3.865591,7.086777,-6.967298,-7.064179,-8.676646,6.291424,3.857945,-1.641540,9.856260,0.241506,-7.859456,-4.328343,3.159015,-1.566858,-5.043313,1.412081,0.701472,7.131076,7.090967,-8.624463,-2.105467,-5.910702,-1.915687,2.747053,4.213765,-7.882179,4.604830,-2.626791,9.828794,-1.543999,-5.282889,-4.773612,-7.981460,-0.321229,-9.780523,7.302997,-9.727971,-9.776615,-4.535069,-5.888354,-8.872227,3.367621,1.761564,2.071697,8.170308,-5.635220,3.535866,6.230787,-3.067813,0.649252,5.348900,5.344028,7.832065,-6.389616,-4.580294,8.159987,-2.850159,-6.114129,-3.855228,-3.854093,5.220927,-3.206592,-5.764457,-2.722466,2.139131,5.327783,-1.792841,-7.841186,-2.344327,-4.946795,-2.560969,-2.660578,-5.379779,-1.107067,-0.199897,-0.518936,-0.960708,-6.976455,0.557980,8.730595,-3.784483,4.927266,-8.029920,-2.242825,-0.525958,0.814253,-0.595575,5.685957,-4.618273,-7.193949,4.028965,-0.299910,8.785112,-1.234835,4.201637,1.985802,-4.769206,-5.028766,-7.994531,5.617476,5.070392,9.823384,-0.312369,3.881541,2.421738,2.767668,-3.692463,-4.677861,-7.078618,-8.039409,-6.132022,-8.079668,-8.526998,8.527608,9.619476,-9.749635,5.204479,9.454745,-4.476103,-6.123374,-9.823868,-0.322008,3.507698,-4.142757,4.918430,6.421690,-9.998954,-8.286254,2.225175,2.458015,4.507905,7.860276,-4.759502,-6.630815,8.786403,-0.533224,9.857320,2.676007,7.121871,-3.176626,-7.748631,-3.053372,3.331079,-4.319543,1.461949,-9.049176,8.425639,1.814964,-4.339363,-1.979737,7.572326,3.903728,-3.758608,5.297528,-4.339178,-2.773497,-1.129032,6.652878,-8.406145,-9.567195,4.602443,-0.974349,-1.431357,-7.118483,7.347558,3.036749,5.844793,8.774321,2.392325,2.248281,5.300168,-7.084607,5.875051,7.456299,5.898165,1.885217,-8.273137,0.641457,7.873597,1.488575,2.912174,2.686080,6.625537,-1.795535,-6.118289,-8.388296,2.232279,5.570282,-4.670368,-8.020610,-6.329355,8.493797,6.613301,7.384282,-8.474991,-3.974035,5.708594,9.229029,-7.945373,5.542702,3.499036,-9.766590,8.497948,9.128912,7.645205,8.026175,8.848942,-9.906735,-0.028765,-8.848792,6.997501,-4.863670,-3.083542,1.201458,9.187745,3.030637,0.348515,2.482023,9.824388,-7.123237,5.275880,-2.174358,-9.970814,7.998560,2.703193,-1.208658,-0.544975,3.791408,-8.332393,-2.444115,-0.618723,-4.799757,4.047437,-6.803657,0.076824,4.702717,-0.338010,9.345192,9.616783,7.338388,-2.507130,3.796616,-9.372039,-1.580568,0.438968,-5.825183,-9.065393,7.734257,6.378962,3.273392,3.118118,7.655030,-9.454693,-2.592574,7.942037,-4.956130,4.915099,8.100722,3.530725,-7.232401,-1.999827,-0.175723,-3.432206,-3.595214,4.673079,-8.521329,9.139954,-6.968555,-4.321469,0.322671,1.271041,-2.507771,3.650622,-5.021120,9.886051,7.797846,-8.907953,-2.231662,-5.575462,-2.071541,-3.155605,-3.481159,-6.773326,-7.004362,1.512530,-8.745755,7.522765,-0.786285,-9.110380,1.341308,1.627730,3.201355,-0.683362,-7.197390,5.049759,-9.929746,6.741305,0.904479,-5.364499,7.471931,2.973807,-8.354536,-6.650845,4.784247,5.981323,-9.340552,2.549332,-1.770688,5.549354,-8.111827,2.760913,7.145043,3.405360,-2.109662,-4.460899,-9.263471,-5.622664,-0.078501,8.065387,3.029862,3.560272,7.446619,-8.393185,-3.948529,7.534859,-8.020043,-9.182420,4.275333,-5.625693,6.095586,3.612576,-0.219888,-5.522478,-9.593728,-4.536284,-0.269969,3.243077,-5.131730,-4.401395,-7.307084,-6.170174,-8.410346,-4.650182,-1.774515,-3.859210,6.978169,9.541636,3.486553,-7.626459,9.472259,4.708936,-5.653532,-9.129962,-5.213421,-0.200722,-5.615276,9.703509,9.329047,-4.632596,-2.425926,7.046806,8.539520,7.517383,-2.336968,-5.865845,-0.558257,7.524986,1.268496,-1.704297,-0.170397,-2.891041,7.766244,-6.665582,9.356612,-5.496771,5.471396,0.559687,4.084171,3.179348,-8.524195,5.543487,7.887482,-9.863152,-8.629465,7.396584,5.722404,5.558274,9.081687,9.052637,9.166676,9.877676,8.205522,0.925493,7.056500,-9.038353,-3.358704,6.960761,-3.205203,-8.189121,-2.994250,-7.061387,9.969475,-9.781910,6.399235,9.167848,1.393463,9.213929,0.074172,6.260638,0.753317,0.299981,-2.057893,0.641296,-1.078608,5.018733,7.969725,-2.649457,-1.353481,-4.376084,-0.648706,-9.436854,-3.038537,-2.471603,-0.711213,-2.263983,2.947016,2.565630,-1.776334,-9.873016,7.098210,0.180373,0.734566,7.872433,-8.608336,9.322307,-5.356965,2.157402,1.696708,-4.754076,8.711669,4.783272,-4.562322,-8.489753,-5.928565,4.804584,0.360201,-5.807693,-9.355639,-5.250246,8.546242,7.143509,0.347890,-6.258996,-0.289678,-1.763901,-6.120472,-0.889603,-4.160367,0.254314,-6.809787,-9.349531,-0.145291,-3.373815,5.407302,3.601379,8.231963,-2.968243,0.840577,0.744637,1.190037,-0.840324,-3.944016,8.477668,2.414351,0.616283,3.235872,0.915031,-5.061284,7.526577,-1.019062,3.143103,5.982745,-1.135604,-2.507350,8.360507,4.531032,8.727022,-8.453859,9.822348,-0.058200,5.488999,-4.314238,2.890180,8.127603,-8.167797,8.597664,6.038820,1.161407,-7.348117,8.096225,-6.066167,7.884916,-7.535351,-5.406028,0.883797,-8.893729,-4.555273,-7.372236,-4.292390,-0.994500,5.391729,-7.760158,7.740523,1.226216,5.739787,4.138610,7.844872,-0.419628,-3.737191,4.382875,2.104136,0.755225,0.393030,6.808013,4.065807,-7.598180,2.409611,8.676350,7.123608,-3.477628,3.516002,-3.327270,-8.922669,0.043178,4.404747,3.009650,-1.729623,-8.201255,-2.753801,8.154260,-8.970818,-6.513673,-7.292364,-6.375314,-9.453261,2.861174,-3.962894,0.427948,-2.871098,7.640119,0.902223,-7.096217,2.086403,2.474814,-3.221303,0.881732,7.739174,-1.100180,5.738389,0.558241,-4.438894,-4.111610,-8.998066,7.659188,-7.645272,-5.049659,3.048367,1.255478,4.514574,-4.286831,-9.852830,-3.588727,-3.202865,3.490143,2.879813,9.522481,6.023647,-6.614333,8.248354,-0.207851,2.123612,-7.504583,4.334802,8.397923,-4.925010,-3.253158,-4.851713,-7.905010,-8.002031,-5.469396,-9.572600,8.167704,7.591466,1.999970,2.300834,-5.062314,-7.198366,-1.032594,3.412975,2.512674,5.525119,-3.693220,-7.469620,-8.507624,-7.597841,6.382245,9.131440,5.000846,-8.254261,4.350044,-1.536012,-8.835737,-5.467820,0.565593,5.795317,-7.262401,-7.254935,-6.244010,6.027599,3.178696,0.317765,6.981497,8.276527,-2.013873,4.371802,-0.915570,2.349070,1.872474,6.494262,9.745822,5.889965,6.826037,-1.600973,-8.298458,6.326319,-1.591225,-8.268671,4.771888,-0.602600,-7.396356,9.680265,7.781586,9.860369,1.639911,1.755944,7.447542,-9.531311,3.386771,-3.642835,-8.027038,6.033630,3.458806,-1.948643,-5.051286,-7.418985,7.217142,1.663473,-5.066464,8.358405,9.730974,6.287556,2.269468,7.110853,-9.014935,-2.774370,6.247499,5.955733,-9.609488,7.856147,-3.248526,1.655795,-7.977834,0.440737,2.327873,-9.670607,1.348155,-8.873442,9.340258,5.925800,4.218671,-2.116283,-5.845653,6.723293,-6.959111,4.543361,-6.596282,-4.189690,5.305110,-6.583113,-5.869284,7.143431,-9.671251,-6.200298,2.938416,8.987924,2.754852,-7.924832,-4.545997,-2.297896,-0.384799,8.343334,-2.114315,2.693597,2.087642,7.256966,-9.043542,-5.175268,-7.572106,-2.787787,-4.930778,-1.612827,-8.418186,1.185737,1.190249,0.773324,8.462076,-8.146971,-1.342505,6.203690,6.090903,5.594706,7.019582,-3.887675,-8.740427,-8.668871,2.450145,-5.740877,9.185983,-6.758776,-6.773203,-0.859656,-2.697614,4.238912,4.528090,8.597091,5.688433,-8.676280,-8.542647,-5.061725,-5.501678,3.025029,-3.079695,4.952864,-2.760336,-4.734814,0.416190,-8.666648,1.879813,-0.495930,5.279404,-1.702935,-7.648044,2.655813,8.203603,4.590169,-7.667788,0.853721,-5.404253,-5.492995,-6.381369,0.848180,-6.111136,-7.143551,-8.420218,-2.659949,-5.533379,-1.421086,6.733276,7.070276,-1.447226,-0.185902,4.239566,3.309588,-4.509036,-8.624665,-1.168416,-4.219472,-9.795244,-2.337093,3.102576,-4.609669,9.271801,-2.044171,-6.742451,-0.821570,-0.539550,-8.000249,-1.988874,-7.521474,2.069226,-5.743991,-0.044648,-9.111474,4.788767,4.867317,1.971613,-3.864856,8.335842,-2.282065,-6.496679,-3.214283,5.913573,-8.065586,-9.122423,0.104015,-0.037098,9.232953,-4.165759,1.266197,-5.358344,7.574919,-4.052427,6.699287,-3.877861,3.159900,-7.145690,-3.101390,-5.213544,9.547675,2.123158,7.018074,-9.930586,-9.724898,-2.754444,-8.335614,5.978774,9.415484,9.992395,7.766381,-1.962536,-2.503322,-4.525985,-0.410371,-1.684533,0.012702,-1.220915,3.863833,4.552844,-4.053958,4.935830,-7.029582,-1.667995,-1.786469,-2.012066,7.015880,-9.043612,5.352676,-8.240568,-0.021298,-8.292270,-2.236190,-0.714408,7.761966,-2.492715,1.721767,4.711361,-2.099222,8.957041,9.240096,-9.734470,-9.415924,5.716394,8.721859,-8.620195,-8.771091,6.965897,0.298665,-1.269942,8.212264,-9.587559,-2.668461,-2.540600,1.880660,5.516408,-4.356834,-0.120941,-5.093041,-1.345342,3.197425,1.263658,6.086896,3.439191,-2.169501,-1.563429,-2.338071,8.509838,-1.252793,3.990470,3.164192,-5.201199,-7.567619,8.108477,-6.488090,-3.241597,-7.798459,5.081735,-9.383492,-2.848209,-0.303025,-6.122207,-0.767405,0.365118,6.279950,-4.085258,3.034384,-7.634657,5.364179,6.870540,-7.719127,-0.731702,2.749392,-5.496732,-4.562081,4.565944,7.617482,3.292137,3.198647,-2.752343,6.074527,8.045406,-4.328299,-3.452178,1.807981,6.092099,4.190934,-6.362435,-9.622614,-3.861472,-5.894633,9.955671,5.235916,8.619620,-4.326604,4.095036,-1.148942,-8.354895,2.251562,7.695689,-6.911213,-2.833314,-9.749306,4.684030,3.178085,5.719248,1.464132,-0.168496,2.236276,1.336366,2.888361,3.655628,9.056324,-6.425561,-7.260830,-6.619544,2.825213,-0.325227,4.892152,-1.264071,3.476188,-0.653104,-6.166474,5.198697,-0.477852,8.809300,3.523396,-1.176820,7.355915,2.694428,-2.555632,-4.246625,-2.733214,5.085114,-6.573366,4.911799,3.053645,-2.863599,-8.967605,7.700665,-6.156576,-5.959324,5.161654,9.138129,-7.515739,-1.592823,-9.860127,-3.612997,0.190499,-8.818781,2.154217,7.339755,-0.127231,-1.361300,4.979152,7.448108,1.920710,0.912346,-5.495554,4.959873,-0.903785,6.250061,-6.922631,2.271418,1.631756,-3.353641,5.194435,7.662409,3.700135,-3.036707,8.796231,6.240295,-8.048853,1.955860,7.517748,1.062575,-8.130088,-7.189290,-3.642724,-7.014764,8.185760,-9.368433,-7.852993,-7.723970,3.295020,-0.284159,9.817506,4.432936,9.703408,-9.861365,5.894252,-2.460563,1.749865,0.321308,-8.717409,7.758832,-1.431877,5.174740,-5.344465,-9.905882,-8.543436,-8.544760,-4.545905,1.516808,8.899277,-1.455428,9.362312,-8.186101,2.023663,-5.287395,-2.637534,-5.246040,1.613668,3.961825,8.533441,-6.394290,4.146382,7.916145,-8.575149,4.833566,8.526784,2.820755,-0.604585,9.503428,3.993510,1.683720,2.796240,-5.271538,0.677601,-2.908417,8.539474,3.301009,-4.212476,0.083399,7.299873,-8.560381,-9.328660,-8.915574,9.373394,1.333082,7.278995,-5.937582,-4.060155,-6.874963,0.148017,-3.399875,3.211377,2.230958,7.656169,-2.247656,4.201293,7.810841,-5.302589,-7.514904,2.776915,-8.622669,-7.049864,2.918369,9.166944,2.399408,7.923631,-5.136527,6.495621,-9.889634,-4.317309,9.266307,1.244532,1.761015,-6.512453,9.364855,3.141998,6.892473,0.175934,-3.315719,-9.494699,2.917880,-0.197589,-8.751307,0.354923,-0.151010,1.528835,9.789620,-2.507921,9.696702,-5.666286,-0.794802,-9.834228,1.914482,-0.237904,8.355983,6.076913,-9.817838,-3.753236,1.363286,1.312730,4.947805,-5.257391,4.793320,6.601724,9.315790,-3.118172,-4.698656,8.405030,-7.946209,6.570500,-1.618214,-7.148275,-7.825212,9.626508,-9.553573,3.101410,-0.475258,-0.856645,-6.060188,-8.007457,1.495986,7.211847,5.645539,9.112306,9.189104,4.774593,-0.104541,-9.503217,-4.613468,-7.384359,3.495721,-8.923342,5.005845,0.297388,0.434261,-8.972738,-8.607789,-0.378942,-9.520901,5.531328,-5.138971,-9.818920,-6.157690,-6.749478,-4.134704,7.767140,-3.451687,6.442649,-8.752947,-7.094211,-1.609307,-1.714770,-9.766651,0.541758,7.757610,-9.571331,0.696558,-2.109500,-7.162464,9.564455,9.848341,-1.944327,-1.798435,-4.393966,-5.716276,-7.293483,3.153558,-8.197564,6.234401,-2.730648,-1.222090,7.840416,6.114899,-8.515837,-0.931531,1.016146,-0.094718,6.625465,9.666394,-3.918796,-8.227335,3.287236,4.568659,-3.848665,2.666129,8.691009,1.843378,0.479583,-9.999235,-5.219399,5.601767,8.880524,8.527060,2.949879,-6.204571,7.356114,-7.527889,-2.535748,-0.660860,4.658296,5.891619,8.195779,2.660169,-7.172198,-4.690112,-5.195679,-7.783746,-8.835495,-0.238721,-2.303966,3.243731,-0.590761,-6.838369,9.615627,8.104822,-0.976792,-7.079155,3.995184,3.965901,6.235056,4.041636,1.328168,2.628287,0.715951,5.541003,-8.459349,2.743441,3.921245,2.760295,-7.149719,4.273595,-5.305756,3.288815,6.862180,0.488190,-1.672901,-2.904610,-3.881741,1.452485,7.122039,8.505070,6.720327,-6.327946,9.079394,-6.411922,-1.383084,-6.560602,2.215401,6.524918,-8.325417,2.994551,2.252759,3.933141,-3.281126,1.774038,8.319592,6.867510,-9.446073,7.220144,-4.945307,1.035001,6.228096,7.631353,5.078412,4.057231,1.302659,2.102327,-7.099710,-9.236656,7.945868,0.132059,-5.130206,-1.105548,-5.643111,-7.579572,5.978431,-0.265758,-5.378780,7.580371,-2.817546,1.319202,2.459317,-2.405941,5.414522,-5.220579,-4.343469,-4.497614,2.599057,4.899683,-2.576288,-9.406000,-2.030850,8.031762,-7.199384,-7.249653,5.704895,-4.102526,-0.023379,5.478536,0.067583,4.246122,6.987540,-9.697475,-4.418172,-5.379498,-5.247066,-9.835034,4.070931,4.892706,-3.636164,-1.008657,0.563166,-6.280176,4.935563,-4.925375,-4.260866,7.502955,7.763825,-0.758557,9.267721,-3.692065,9.637138,-9.191523,-4.466876,-5.446512,-1.459358,4.984140,9.741438,6.621454,0.073923,9.552953,4.707294,7.487295,-6.257721,-3.185541,-3.129145,9.150794,7.111319,6.963430,5.299657,-9.198500,-4.272050,-4.331621,-7.638060,5.262852,7.957593,1.953026,1.726976,5.590214,-1.339986,7.618236,-8.839615,-5.843158,6.422122,-5.474720,1.341544,-3.016364,-5.246295,9.479668,-9.158707,-6.214437,0.222545,8.699106,-4.345193,-2.516129,-5.968278,0.077126,3.890193,9.433089,7.185975,7.942711,-5.555705,7.579394,-8.556313,5.849221,4.691251,-1.185064,1.938458,1.183195,-9.491362,-7.822101,7.992178,-9.208343,1.493403,2.797163,6.542226,0.432826,-8.331164,-2.938871,9.137450,-2.883762,5.470851,6.169045,-5.627234,-1.496312,4.942001,2.770115,-5.909756,4.855292,4.209997,7.608601,0.343949,3.750200,6.607833,0.124777,9.855891,1.483967,-7.151539,-0.054380,1.027168,-8.488678,7.847172,6.423197,3.555134,-7.251214,-7.883121,9.116513,-8.601782,1.774048,-3.944559,9.946265,-3.301443,-8.573042,9.454679,2.659008,7.070112,9.362993,-8.371826,-6.571786,3.916802,-8.582896,-5.398136,-9.309749,-7.905389,-4.334704,-9.634584,7.826687,-3.958998,4.258757,-4.915382,-2.601434,-4.240584,-6.528240,5.193894,-6.013449,0.949173,-8.925142,-2.001174,0.396367,-0.536942,9.034375,1.438199,-2.826194,-3.555962,0.353906,-2.291374,-8.467599,-7.692645,2.310127,-0.249554,-5.805936,9.890662,0.224490,1.036095,-5.557450,0.650436,-9.373171,-7.952612,-5.580112,4.589175,7.203379,-8.213905,-3.996319,9.096242,-4.778807,-0.190754,6.529281,0.809958,9.896885,0.904417,-1.858125,-0.645997,4.559408,2.571557,0.964227,-0.246799,6.489267,5.452483,2.483882,4.304805,-6.657994,-2.284664,0.271932,-9.515206,0.283049,6.093641,-5.306371,-3.949745,-5.187366,-4.003086,-5.357933,9.552057,2.872704,-5.385489,9.189097,-5.455842,9.054771,3.158145,-1.775287,4.323640,-2.884148,2.971957,-5.791424,-5.531560,-1.553222,3.686711,0.663972,-6.565350,3.409171,6.685638,-1.464733,-8.220883,6.197353,5.333923,8.783134,7.956667,0.161276,6.590501,-1.725634,-8.878340,-5.220610,-7.753508,-1.772712,-3.433645,6.240551,-6.957213,7.621570,6.085735,0.788060,-1.717127,3.240148,-7.123670,-2.908679,1.085725,7.894445,9.226870,5.918830,-8.833808,-1.349837,1.077237,-8.887846,-8.459485,-9.594552,-5.904884,-1.766281,-7.529061,-6.004915,-6.760782,-3.297329,-5.290173,1.377999,9.486999,3.441404,4.332399,-1.923289,0.270909,-1.644068,-4.903665,1.187188,-2.077642,9.474632,8.417844,2.379219,7.582909,2.818788,-7.869804,9.028759,1.176155,0.244844,3.466601,0.296785,-8.372993,-5.364889,-3.189011,-3.631060,8.301638,-7.562833,9.710996,-8.890387,8.934630,-6.133623,-3.627333,-3.335118,-1.610864,-3.401591,0.211953,-8.387873,-8.696364,8.096056,-0.381463,5.417159,4.722507,1.623814], dtype = "float64")#candidate|6467|(2016,)|const|float64
call_6466 = func_919_call(relay.reshape(const_6467.astype('float64'), [14, 9, 16]))
call_6468 = func_919_call(relay.reshape(const_6467.astype('float64'), [14, 9, 16]))
output = relay.Tuple([bop_6438,call_6451,const_6452,var_6453,const_6454,call_6466,const_6467,])
output2 = relay.Tuple([bop_6438,call_6455,const_6452,var_6453,const_6454,call_6468,const_6467,])
func_6475 = relay.Function([var_6436,var_6437,var_6453,], output)
mod['func_6475'] = func_6475
mod = relay.transform.InferType()(mod)
mutated_mod['func_6475'] = func_6475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6475_call = mutated_mod.get_global_var('func_6475')
var_6477 = relay.var("var_6477", dtype = "bool", shape = (16, 10, 13))#candidate|6477|(16, 10, 13)|var|bool
var_6478 = relay.var("var_6478", dtype = "bool", shape = (16, 10, 13))#candidate|6478|(16, 10, 13)|var|bool
var_6479 = relay.var("var_6479", dtype = "int16", shape = (1, 660))#candidate|6479|(1, 660)|var|int16
call_6476 = func_6475_call(var_6477,var_6478,var_6479,)
output = call_6476
func_6480 = relay.Function([var_6477,var_6478,var_6479,], output)
mutated_mod['func_6480'] = func_6480
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6647 = relay.const([[[-10,-9,2,-5,-7,-7,5,8,-8,3,-4,6,1,6,-5],[-8,-4,3,10,-7,2,8,5,-1,6,-5,-1,6,-6,-4],[3,-5,6,5,4,3,-7,3,-8,-7,10,-5,-10,-1,-5],[-9,-8,7,2,1,5,4,-6,-4,-3,9,2,4,-6,2],[1,-10,-8,2,1,6,7,6,8,8,-2,5,-2,9,4],[-1,-5,-4,10,-2,9,-4,9,4,1,-9,10,8,2,1],[-1,3,-3,-10,2,1,10,-2,5,-6,-9,-1,8,-10,-9],[10,-3,-7,-9,9,-8,7,-8,-7,-6,-1,-8,3,-4,-10],[-5,-4,-3,-9,9,-8,-10,5,5,-1,6,7,6,2,6],[-4,2,1,10,-2,8,6,-6,-6,-4,3,10,-2,1,-6],[-5,9,-8,-5,-2,9,-6,8,7,-2,-2,9,-8,-6,-6],[-7,5,-10,-6,-3,-3,-8,9,-2,1,-5,10,3,-6,6],[-3,7,-9,-3,4,-3,8,10,9,-4,-6,1,5,-6,7],[7,5,8,-10,10,6,-3,-5,4,4,4,8,-6,1,6],[-5,8,4,5,8,10,-9,10,5,-7,3,9,-7,6,8]]], dtype = "int64")#candidate|6647|(1, 15, 15)|const|int64
var_6648 = relay.var("var_6648", dtype = "int64", shape = (12, 15, 15))#candidate|6648|(12, 15, 15)|var|int64
bop_6649 = relay.bitwise_or(const_6647.astype('int64'), var_6648.astype('int64')) # shape=(12, 15, 15)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
const_6653 = relay.const(False, dtype = "bool")#candidate|6653|()|const|bool
call_6652 = relay.TupleGetItem(func_148_call(relay.reshape(const_6653.astype('bool'), [])), 0)
call_6654 = relay.TupleGetItem(func_150_call(relay.reshape(const_6653.astype('bool'), [])), 0)
func_2455_call = mod.get_global_var('func_2455')
func_2459_call = mutated_mod.get_global_var('func_2459')
var_6664 = relay.var("var_6664", dtype = "float32", shape = (32, 40))#candidate|6664|(32, 40)|var|float32
var_6665 = relay.var("var_6665", dtype = "float64", shape = (1920,))#candidate|6665|(1920,)|var|float64
call_6663 = relay.TupleGetItem(func_2455_call(relay.reshape(var_6664.astype('float32'), [5, 16, 16]), relay.reshape(var_6665.astype('float64'), [1920,]), ), 0)
call_6666 = relay.TupleGetItem(func_2459_call(relay.reshape(var_6664.astype('float32'), [5, 16, 16]), relay.reshape(var_6665.astype('float64'), [1920,]), ), 0)
output = relay.Tuple([bop_6649,call_6652,const_6653,call_6663,var_6664,var_6665,])
output2 = relay.Tuple([bop_6649,call_6654,const_6653,call_6666,var_6664,var_6665,])
func_6674 = relay.Function([var_6648,var_6664,var_6665,], output)
mod['func_6674'] = func_6674
mod = relay.transform.InferType()(mod)
mutated_mod['func_6674'] = func_6674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6674_call = mutated_mod.get_global_var('func_6674')
var_6676 = relay.var("var_6676", dtype = "int64", shape = (12, 15, 15))#candidate|6676|(12, 15, 15)|var|int64
var_6677 = relay.var("var_6677", dtype = "float32", shape = (32, 40))#candidate|6677|(32, 40)|var|float32
var_6678 = relay.var("var_6678", dtype = "float64", shape = (1920,))#candidate|6678|(1920,)|var|float64
call_6675 = func_6674_call(var_6676,var_6677,var_6678,)
output = call_6675
func_6679 = relay.Function([var_6676,var_6677,var_6678,], output)
mutated_mod['func_6679'] = func_6679
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6756 = relay.var("var_6756", dtype = "float32", shape = (16, 9, 3))#candidate|6756|(16, 9, 3)|var|float32
uop_6757 = relay.acosh(var_6756.astype('float32')) # shape=(16, 9, 3)
output = relay.Tuple([uop_6757,])
output2 = relay.Tuple([uop_6757,])
func_6762 = relay.Function([var_6756,], output)
mod['func_6762'] = func_6762
mod = relay.transform.InferType()(mod)
var_6763 = relay.var("var_6763", dtype = "float32", shape = (16, 9, 3))#candidate|6763|(16, 9, 3)|var|float32
output = func_6762(var_6763)
func_6764 = relay.Function([var_6763], output)
mutated_mod['func_6764'] = func_6764
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6778 = relay.const([[[-9.541577,-5.845376,3.702152,-6.368056,-1.142594,-2.216266,-9.506390,9.302718,-2.377836,-7.595987,9.472125,-1.254081,5.423541],[-1.425060,9.676266,3.742546,-1.056256,9.761613,6.370855,4.950799,9.528794,-3.313157,-5.188192,1.165426,-1.605720,1.021265],[-3.626163,-5.909220,9.848709,-2.088488,-0.079837,-7.939165,1.818379,6.371099,9.664780,-7.043796,-5.153256,-8.761299,-0.527896],[3.826519,8.769515,9.189910,-2.823684,7.099468,-2.732562,-4.991775,3.975321,-6.217279,0.186939,-0.932442,-3.789577,3.733579],[4.958963,3.985044,6.055423,-4.243062,3.368091,2.307044,8.722085,9.541634,-8.558315,0.751310,-7.676307,2.316367,3.918613],[-2.155351,-0.527646,-3.536033,5.253618,-6.382158,-1.040032,-2.559777,-5.959745,6.874791,-4.095378,4.751659,-3.684873,9.815012],[-7.565385,-5.835062,-2.706657,0.584946,-2.639481,-1.430296,3.618087,4.937433,0.190098,4.412546,4.968491,1.120120,0.212972],[-4.601551,4.175493,-1.385470,-1.811506,8.095284,6.902240,-4.674120,-7.140379,-7.036451,5.865748,6.525313,3.775256,-0.700702],[5.943050,-9.756096,-8.727573,8.777881,-4.729159,-5.283590,-0.400520,6.922978,-5.354564,-6.171463,-9.384129,1.991662,-1.883988],[-2.854849,3.134380,-1.255520,4.151624,-6.006491,1.013447,0.498365,9.318840,2.773981,-0.551249,-3.215804,-0.302565,4.919699],[7.728359,-5.534484,-7.536809,5.996079,5.688183,-8.925824,-7.007559,-1.577736,-7.571442,-4.933066,7.424733,-0.679832,-8.057704]],[[6.057028,5.947810,-9.067198,1.683511,-6.515161,8.216010,2.039775,2.742898,7.782238,-0.352516,7.126698,-3.029660,4.525437],[8.277639,4.507689,-7.032423,-4.711833,5.533248,-8.006063,4.690672,-4.168311,-5.695074,7.598744,-6.418921,1.776432,2.144711],[0.176264,-5.863943,9.989555,-4.983648,-9.182619,6.362818,-3.088993,4.316318,0.177333,8.645478,1.197130,-4.844133,5.846899],[-3.437149,5.047871,-5.952434,9.101092,1.518415,-3.731785,3.345824,-8.755389,-6.171796,4.828609,2.185273,-2.501045,6.203428],[-9.032744,3.620016,-1.459279,7.495601,4.163001,-5.552502,-2.808582,3.964263,-2.281842,6.313606,-8.378875,8.168783,7.121017],[-3.324176,-0.937473,-0.209137,6.174719,-5.288713,2.035581,-8.337111,5.209676,2.094708,-8.588340,7.994063,8.398720,-5.604396],[-4.051693,6.268870,-7.161947,1.564627,3.491877,-8.437565,8.608534,-8.541368,-6.385189,7.764247,-4.130787,2.633640,-5.783440],[4.733466,-1.956356,5.454351,1.501910,-7.026915,-0.902995,-0.847513,4.145096,9.443505,-8.363144,7.147302,-2.920491,-2.557164],[2.502879,8.633444,-0.005796,2.594003,-1.415262,0.181246,-9.285098,-3.606177,-2.532569,-9.531681,9.610348,-3.971315,-2.614721],[-7.280832,5.971216,7.959132,-6.726013,-5.915148,6.237056,8.636750,-5.545469,6.730523,8.396460,4.306494,8.113724,8.383219],[7.205110,-0.624916,-4.768669,-1.467030,3.834458,-3.888413,0.260982,3.416819,2.706084,-6.388072,4.975357,-7.628731,1.133698]],[[-8.679767,4.180974,4.533186,-0.060956,-8.872823,-3.651834,-0.194386,-2.481516,-7.941596,3.296978,-2.825781,-2.930497,-5.523907],[9.984300,-4.904069,-4.999317,5.558940,9.527848,9.641621,-0.136295,-0.271519,-4.905482,-1.264221,9.600203,-2.496260,-6.840861],[7.051449,-2.994313,4.894109,-2.253273,-4.727827,-6.426044,9.028780,5.592013,5.562406,-9.183026,-7.380992,-2.503027,-4.482625],[0.883879,-7.617325,8.489833,4.164326,7.338070,0.111356,-6.053699,2.466813,1.074643,-7.221337,4.946268,-9.703852,0.227166],[-8.201387,-8.093648,-2.260853,-2.975797,2.521507,-1.312041,2.504000,1.302540,-7.283170,-6.215638,3.410570,-4.101155,-7.456685],[1.129268,9.432888,-7.105540,0.124362,-3.823895,-1.916476,-4.197923,9.986388,-1.602165,7.516582,4.460203,-2.132336,8.402671],[-8.294307,5.528856,0.652289,2.435208,-2.963253,-6.244432,-7.394774,9.148907,6.620572,9.334800,-7.806596,3.518417,2.398514],[1.689689,3.178446,0.541476,-9.339868,-8.172913,-3.801451,0.514110,2.877481,-8.933994,-8.671085,6.488024,0.201031,-3.040906],[-7.920276,1.677706,9.980816,4.944450,4.648443,-0.160250,-4.253039,9.635671,-8.342030,7.325880,7.433969,-5.391016,4.725525],[6.688109,-3.510131,-9.900884,-1.353066,-5.842059,8.718712,-5.311062,1.727768,-2.783025,6.327561,-4.187680,-3.498396,-9.996139],[6.522422,-5.435428,-1.527933,3.742093,5.687128,6.866623,-4.741557,7.456140,-7.926740,-6.764290,-8.528756,8.485950,1.061561]]], dtype = "float32")#candidate|6778|(3, 11, 13)|const|float32
uop_6779 = relay.cos(const_6778.astype('float32')) # shape=(3, 11, 13)
func_693_call = mod.get_global_var('func_693')
func_696_call = mutated_mod.get_global_var('func_696')
var_6786 = relay.var("var_6786", dtype = "float32", shape = (8, 182))#candidate|6786|(8, 182)|var|float32
call_6785 = func_693_call(relay.reshape(var_6786.astype('float32'), [13, 14, 8]))
call_6787 = func_693_call(relay.reshape(var_6786.astype('float32'), [13, 14, 8]))
output = relay.Tuple([uop_6779,call_6785,var_6786,])
output2 = relay.Tuple([uop_6779,call_6787,var_6786,])
func_6804 = relay.Function([var_6786,], output)
mod['func_6804'] = func_6804
mod = relay.transform.InferType()(mod)
var_6805 = relay.var("var_6805", dtype = "float32", shape = (8, 182))#candidate|6805|(8, 182)|var|float32
output = func_6804(var_6805)
func_6806 = relay.Function([var_6805], output)
mutated_mod['func_6806'] = func_6806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6825 = relay.var("var_6825", dtype = "float64", shape = ())#candidate|6825|()|var|float64
var_6826 = relay.var("var_6826", dtype = "float64", shape = (1, 5, 1))#candidate|6826|(1, 5, 1)|var|float64
bop_6827 = relay.floor_mod(var_6825.astype('float64'), var_6826.astype('float64')) # shape=(1, 5, 1)
output = bop_6827
output2 = bop_6827
func_6835 = relay.Function([var_6825,var_6826,], output)
mod['func_6835'] = func_6835
mod = relay.transform.InferType()(mod)
var_6836 = relay.var("var_6836", dtype = "float64", shape = ())#candidate|6836|()|var|float64
var_6837 = relay.var("var_6837", dtype = "float64", shape = (1, 5, 1))#candidate|6837|(1, 5, 1)|var|float64
output = func_6835(var_6836,var_6837,)
func_6838 = relay.Function([var_6836,var_6837,], output)
mutated_mod['func_6838'] = func_6838
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7187 = relay.var("var_7187", dtype = "float32", shape = (10, 15, 16))#candidate|7187|(10, 15, 16)|var|float32
uop_7188 = relay.cos(var_7187.astype('float32')) # shape=(10, 15, 16)
func_1909_call = mod.get_global_var('func_1909')
func_1913_call = mutated_mod.get_global_var('func_1913')
const_7199 = relay.const(2, dtype = "int8")#candidate|7199|()|const|int8
var_7200 = relay.var("var_7200", dtype = "int8", shape = (672,))#candidate|7200|(672,)|var|int8
call_7198 = relay.TupleGetItem(func_1909_call(relay.reshape(const_7199.astype('int8'), []), relay.reshape(var_7200.astype('int8'), [14, 3, 16]), ), 0)
call_7201 = relay.TupleGetItem(func_1913_call(relay.reshape(const_7199.astype('int8'), []), relay.reshape(var_7200.astype('int8'), [14, 3, 16]), ), 0)
func_148_call = mod.get_global_var('func_148')
func_150_call = mutated_mod.get_global_var('func_150')
call_7217 = relay.TupleGetItem(func_148_call(relay.reshape(const_7199.astype('bool'), [])), 0)
call_7218 = relay.TupleGetItem(func_150_call(relay.reshape(const_7199.astype('bool'), [])), 0)
bop_7228 = relay.power(uop_7188.astype('float32'), const_7199.astype('float32')) # shape=(10, 15, 16)
func_2455_call = mod.get_global_var('func_2455')
func_2459_call = mutated_mod.get_global_var('func_2459')
const_7236 = relay.const([-1.834715,-7.394784,3.178519,-1.081099,-8.877807,-8.900036,2.919263,5.596174,2.367749,-5.301524,5.123969,-3.304119,5.925059,-6.105895,-4.892200,7.358695,1.954854,-6.015788,-8.369437,5.442199,9.473616,0.601999,9.702346,2.226367,7.933047,-5.664146,-5.588666,-2.444091,4.987716,-8.069110,5.921846,-2.482186,-5.906654,-4.909666,4.364988,7.495695,9.581094,4.795783,-8.809922,9.509717,-5.069068,-3.559510,-4.474289,0.733340,1.090812,-4.488354,2.656377,7.983837,1.716103,1.986541,8.286230,4.340687,7.729190,-0.341398,-2.024933,-9.400732,7.181883,6.235997,2.491954,7.031412,7.548101,2.723309,5.667473,-6.838626,-3.488507,9.007716,-8.262175,-5.634156,-1.802983,8.384664,8.568057,4.876940,-4.132907,-4.870086,3.573903,-8.021512,4.008542,-1.045213,-8.439697,7.032844,-4.128365,2.300721,-9.626492,-5.921466,-2.275082,1.142982,2.890321,-2.459795,6.664055,9.139757,8.617641,3.387332,-7.102582,7.397285,-1.164050,2.992940,8.617098,-6.602927,2.845834,-0.236156,-2.354699,2.120594,0.416433,-6.351256,-5.077749,1.044218,9.784283,9.452509,-0.433227,2.931609,3.323581,4.728874,0.907317,-0.322460,3.851027,-0.174556,-5.911535,4.711853,7.103093,7.787765,-9.504343,9.947166,2.404699,3.633492,4.230145,1.730554,8.057195,-0.841005,-5.844186,4.760215,8.993581,4.178129,1.842461,8.828201,-6.482944,8.768950,-0.140817,2.972713,3.500833,8.967942,9.170552,8.410264,-6.005908,3.162023,3.126982,-9.378387,-7.042379,-8.479720,-8.355058,-8.749361,-5.000732,1.117143,8.109796,4.447829,3.807792,6.577623,9.625319,-3.851869,-4.350303,-6.634862,-3.836813,7.350226,-1.555375,4.541822,2.791926,-1.828729,9.566672,-0.169098,-4.193567,3.358939,9.262590,-7.048768,1.397388,-5.308612,-2.495125,0.787319,8.632812,4.556350,5.586445,-0.480305,-3.695920,-2.922700,7.999934,-1.677401,-7.392791,9.915805,1.720918,-3.431145,-9.793065,-9.591522,1.740688,-8.833763,-0.580182,6.555683,-1.609765,7.956535,-0.370492,-6.178528,-4.617216,8.826890,-3.295400,-9.509811,-6.544355,-8.871627,9.091292,5.807669,8.000938,3.244720,9.587588,7.173253,7.865313,-9.661420,-3.926503,1.779297,-6.785550,-7.750842,8.706385,-7.299064,5.650443,4.157997,2.960733,-8.212731,-5.686164,7.378121,-1.016520,1.510797,0.563662,2.717935,-0.825053,-2.056646,9.896197,8.857215,-0.996340,-1.206522,-4.744525,-7.985821,-1.775795,-5.213237,7.562609,-1.999119,-2.053024,6.701160,9.055087,-1.399547,7.536088,-8.772736,6.491989,9.594797,2.842073,2.139709,9.705896,-8.795218,-3.852889,-5.289319,-3.392102,2.290174,-9.624768,-6.402571,9.330152,6.250319,5.160861,5.061230,5.716328,-8.987278,-3.573740,8.228463,-1.990710,7.675995,-8.357540,-6.151161,-4.481497,-3.186209,-0.143596,9.546179,5.380369,-6.401167,-9.788154,4.420084,-3.278811,0.879919,8.302662,4.834682,-5.467216,2.911824,-2.379562,8.663065,3.322846,-4.516211,-9.124304,-3.770967,-1.395185,-5.957549,-4.192542,8.413087,-0.997032,-1.198459,4.393207,9.113118,-7.807506,-9.706970,-6.526208,-2.697623,0.443401,8.661371,-4.426906,1.860240,-8.127560,9.269345,9.130356,0.119581,3.491898,-2.777323,7.309435,-4.873232,-2.813584,6.185572,-4.658589,-2.347626,-5.260370,9.869170,8.914074,0.976468,0.716594,3.869589,7.559474,-5.188067,-7.114117,0.117105,-7.672360,5.274615,0.695697,7.957724,-6.954187,6.346894,4.717901,3.557762,-0.572463,-2.510393,-4.075273,-8.936330,-1.369452,-3.946305,7.282603,7.605032,-7.879589,-3.836496,1.027365,2.805365,-7.322074,-2.442298,-7.267889,-8.754044,-1.002635,-9.960445,-6.360175,6.036980,6.607423,4.169071,1.856952,-6.612203,-4.928548,9.024344,-1.416082,0.422152,-7.213344,-2.324619,-8.743657,8.405280,6.813554,3.323420,-5.164672,-1.010237,-3.635220,7.278190,-9.935593,4.474676,-4.291398,-0.102056,-6.387960,4.297568,8.805333,0.757365,9.482411,6.850971,-7.367496,-6.103574,4.154699,-8.889727,1.867354,4.042079,3.075179,-2.931158,-1.451301,-6.814631,-9.903656,3.326391,2.592506,7.151533,6.451911,3.305548,6.103757,-4.704487,-5.900786,4.465279,-3.390200,-4.154009,6.482328,-0.688355,4.217827,-2.392841,-4.023083,-4.569403,-0.911739,-1.738706,-8.605617,6.711483,-6.589616,-5.440042,-4.069392,-6.423596,-4.341742,-4.396475,5.422477,8.732311,2.114863,-6.224925,5.569064,0.985119,3.222298,0.249997,2.222842,0.842457,1.041092,8.475322,8.082815,-5.936811,-2.060683,-6.361711,3.138597,-7.871427,4.350388,5.434500,2.218657,9.142195,-7.752674,-7.623780,2.263232,0.666611,4.930171,4.484124,-7.884531,1.132229,-5.386946,-4.806662,1.106278,8.545837,-7.794294,-8.928563,2.032072,-5.403867,-8.093399,-9.701802,-1.324730,-3.547458,-6.336797,1.575284,-1.144562,2.510296,-3.836668,-9.484253,-3.589212,-5.667634,-5.944987,9.334361,-8.592327,-9.538978,-6.872266,5.242637,-7.275754,9.629507,9.641659,-6.263357,0.727982,-3.643897,1.273223,5.971228,-2.252904,-8.851323,-2.983624,8.330450,5.028286,-8.627119,-2.820230,6.103705,9.720414,5.641736,0.023221,-1.054632,1.322414,-7.977507,-1.413070,-5.270642,8.314341,2.910645,-8.385485,9.075155,-0.376916,-4.665193,0.997993,-9.856545,-9.908630,6.640365,1.140843,-4.667235,-1.322008,6.074286,-9.854187,-2.424758,2.017825,-6.740202,-4.560003,1.302083,6.764562,5.880482,8.178899,3.979817,5.212894,3.672392,7.106380,1.222314,-0.030678,-0.026520,-7.433253,8.739440,-1.077940,-5.136455,5.755643,-4.887278,8.151908,0.832699,1.659314,-9.375787,4.542729,0.514323,5.090240,-5.071661,2.804971,-5.718773,0.850213,1.617365,2.107282,-1.587240,-8.755641,3.969299,-1.533699,-1.068277,-6.369104,-6.012701,0.941871,-5.894680,-4.586519,-8.256172,5.739640,-4.136741,-1.055871,-7.312111,5.910616,-5.499718,5.325250,2.000041,-7.492274,3.580398,-3.869378,-2.627744,5.636175,-5.609783,-2.009979,-5.243623,3.319023,-6.617436,-9.140043,-6.470461,-8.322414,3.915370,-4.866685,2.974236,6.018964,9.188488,7.933612,4.726527,-0.522853,-2.407680,-4.910287,-0.129890,9.851740,-4.435853,-6.371831,0.261521,0.695063,-3.991932,4.592382,3.999082,9.610308,-4.223907,-7.379510,8.674385,1.978551,4.477665,-6.413755,-6.092617,4.349072,-1.023024,4.578305,-9.813892,-8.956287,-2.970964,-4.990791,-5.984125,8.765871,-8.998875,-1.430214,-8.882363,-5.648925,-0.606081,-3.706311,-9.654849,9.259131,4.088872,0.716887,1.775450,-2.248869,3.850499,8.829286,-1.946076,5.650198,3.949496,9.708894,2.468318,7.311790,-7.204903,-1.133362,5.448118,6.472252,-2.811628,-4.256056,0.459509,-1.479241,-1.999541,-4.330867,-7.458432,2.350787,-0.598311,8.244438,-4.791606,0.243342,-2.632763,-3.014164,6.167219,-8.765855,-3.048744,8.495841,-3.765037,-8.697388,-7.313625,3.239520,-4.897317,-8.314139,9.777282,9.762918,-9.372956,9.624579,-9.440691,0.844808,5.235361,-6.161794,-9.030126,9.295706,2.371027,8.333075,0.544675,-2.633455,-9.736500,-6.576761,-9.801031,2.240652,-5.739392,-2.230802,-1.973638,-3.634539,8.937447,3.323137,-7.798960,-6.302776,2.061954,5.486703,3.409932,-9.546930,-0.615237,0.544553,-3.163842,-8.888164,3.630849,-4.346638,-0.283667,-9.020421,9.046024,7.150423,-1.988125,4.420760,-3.228515,-0.467205,-6.800972,2.524514,3.847688,1.551977,5.157055,-2.227605,-0.541840,0.908515,3.870532,7.746389,9.865149,0.396968,-2.442023,5.739171,6.787865,-6.501084,4.565617,4.937149,1.176684,-8.398685,-3.413517,6.494305,2.203843,1.270590,-1.333589,9.394638,9.929664,-4.338034,8.645180,-3.016783,4.905152,-4.895903,-5.771487,-1.812598,5.261403,3.392108,7.739351,-1.074198,4.158557,-8.175178,-5.602276,0.043612,-5.714953,-7.849361,-0.924115,-1.532356,5.374278,-2.507066,-6.331290,3.848838,3.132135,6.383111,-9.449736,-4.447147,7.562581,6.251610,-9.091793,-1.287910,-4.756007,1.476264,8.503408,0.090818,-7.191373,2.311869,-1.865169,-7.298488,8.699740,-8.722506,-1.026228,8.032445,9.793860,8.768224,9.517404,-8.737106,-3.017775,-6.699785,-6.379565,3.645135,2.268645,8.589548,1.912289,-7.634458,-7.513778,-7.012558,6.291415,-4.786615,7.109786,-7.864983,4.042958,-3.905560,-8.429749,-2.428769,-9.965685,-5.414728,-5.559954,7.252212,3.103254,-2.971581,8.688632,-2.049689,-0.268844,0.656473,1.679275,-3.500886,0.087426,-3.515934,-5.493007,-5.370412,-7.787247,-9.305208,-9.516926,6.893587,1.589675,1.620407,-0.115874,8.150205,7.683119,-4.123741,1.549748,0.881837,-9.657806,-6.340004,-7.470929,2.669743,8.470872,4.777174,-2.040919,-8.357671,-5.076150,-3.255684,0.085731,6.742941,-6.459776,4.373954,1.705553,-9.274956,8.831907,-9.250164,5.069094,-5.593378,6.961969,5.040118,-2.750246,-7.944473,0.913501,-4.646149,-9.727947,2.934379,8.630297,-2.133472,-9.753698,-5.426569,-9.582202,5.435345,1.631578,-3.689944,-5.534775,-9.802321,1.370760,1.822375,6.985399,-3.161870,-1.223204,-3.617623,-7.687806,-3.476708,-3.197578,-0.534111,6.133059,-7.236622,-4.821761,0.716003,-7.981716,3.509402,-7.497321,8.052989,-9.733404,-2.864491,3.010642,5.839134,3.309563,-1.224970,-6.159347,-5.811077,4.660697,-7.077242,-3.219095,-3.954260,8.063653,-4.063821,-1.970563,0.857542,3.460228,9.398092,9.799468,6.230000,-9.532713,-4.467956,-1.864592,-1.562346,2.442920,5.159381,0.980681,3.423661,-3.013981,-1.821067,7.980189,5.209527,3.855218,7.045982,0.785054,-5.920065,1.478778,0.065679,1.325323,9.922032,-7.862058,-9.648395,-8.719006,1.471269,-8.107376,9.439849,3.299642,-7.909873,-1.176705,5.164970,-7.964093,5.373575,-1.904296,-4.147810,7.521806,2.483385,-4.283482,2.834598,0.162166,6.926351,-4.333387,2.756605,-4.585914,6.163639,0.164975,-4.238892,-9.412193,8.818542,-6.016415,-4.788959,6.202271,-3.512009,-0.825845,-1.807589,-0.985385,1.994225,6.816114,-1.853445,-2.973925,-0.762167,4.703370,-1.289192,-0.142337,-3.105719,6.558193,-6.244675,-7.190134,-0.346876,-8.411277,-6.363470,1.301378,-9.710928,-0.219949,-3.549846,-8.981770,4.150301,9.098299,3.406192,3.793581,3.543665,-7.996212,-7.291537,-3.103272,4.794408,6.521721,3.828309,8.183062,3.820678,-6.351204,0.416420,-8.745129,-9.112492,-3.019594,-5.434473,-1.300248,-5.266400,9.039633,6.539135,6.895444,5.452998,9.704223,0.225138,-1.518212,-2.992109,-0.092670,9.786533,-1.851175,8.844700,1.197701,4.375606,5.823141,-3.982279,-3.537551,-8.364324,7.049776,-8.991381,-2.045491,7.924189,1.376797,5.687860,7.496954,-8.548317,2.208989,-2.593357,4.797141,-9.103477,7.107755,-8.407077,-0.060784,-7.519438,-1.898750,-7.125942,-1.623582,0.550658,-0.080879,-3.377450,6.924888,2.863356,-0.972714,4.436650,3.326370,-5.852390,-3.241423,-2.238461,1.536710,-5.419083,-8.003680,-4.682004,0.240387,-7.844500,-7.546857,6.216450,5.652711,-7.086152,5.113686,-3.303918,8.867757,2.199126,8.489060,9.200996,-9.528243,-1.458260,-4.899715,-0.302101,-0.231625,5.554191,3.048625,-8.577528,-0.317622,-7.660193,-5.880039,-9.772059,0.738155,8.116375,-7.763896,5.706526,2.696181,7.186096,-2.517419,2.241693,-2.694571,4.724461,1.826171,-0.210754,6.624867,6.977061,3.652883,1.530473,-2.887860,1.982533,8.215694,4.621827,-7.344572,9.319078,-4.402896,1.780989,2.792844,-9.999976,-1.104647,-0.404358,5.021256,1.834154,-9.089153,1.654620,-0.843592,8.588551,5.255572,-1.307931,3.650200,-5.943854,-1.948331,-2.806705,6.267506,-2.937656,8.796392,5.244400,0.900643,-1.117721,8.505559,-9.255381,-6.793423,-4.216064,-9.839033,-4.719429,-2.756554,-5.814947,-8.016946,-8.717726,2.341494,-3.534646,-8.450358,-4.120557,-5.875098,6.962732,-0.077664,6.939630,7.394689,2.960778,-8.927449,1.110476,-8.477971,5.974211,-5.868061,-8.538689,6.530337,-7.145546,-4.411366,2.542482,0.130308,1.560341,-6.243243,9.576445,-5.335597,5.448120,-8.908085,6.895207,-0.306926,1.832012,-2.008561,6.317732,-6.802222,8.966080,-8.060074,-2.175602,3.746268,2.902007,-2.569910,1.507571,6.235966,-2.539167,2.278980,6.275268,-0.100350,-0.502789,-4.153228,-0.741440,-8.191289,-1.415752,-2.733502,-1.577378,-4.918675,2.954068,-3.811551,3.484251,-2.931892,3.265259,8.978122,0.624701,-5.418582,-7.453084,2.024668,2.397939,6.267964,-6.763759,-5.820157,7.707131,8.991765,-6.930659,-0.260063,8.635748,5.590250,-8.468214,9.322336,-1.509538,-7.282221,2.354218,-5.384478,0.140771,-8.937965,9.563732,-3.719438,0.275048,-2.705560,-2.987105,5.741524,3.118088,-6.269062,2.878721,3.246023,1.021968,-7.414486,-0.693458,-5.937200,-6.604461,7.048542,3.181886,9.428988,3.678501,-6.481264,-3.464292,-6.105957,-4.914593,2.715411,-3.466705,-7.943094,-3.129899,-3.660169,8.047130,-6.254996,9.523234,2.648235,-7.631554,9.427552,-5.279540,1.195696,5.354752,-5.239054,-8.318784,2.447917,5.466793,9.451098,8.554410,-4.446732,-2.077236,-2.714871,-1.628470,-7.869689,-2.162806,4.903238,-8.960090,0.581229,-0.554463,8.416389,-4.366795,7.673313,-7.381699,2.260156,4.439210,-7.298743,4.134847,3.336308,6.932321,-8.117308], dtype = "float32")#candidate|7236|(1280,)|const|float32
var_7237 = relay.var("var_7237", dtype = "float64", shape = (2, 960))#candidate|7237|(2, 960)|var|float64
call_7235 = relay.TupleGetItem(func_2455_call(relay.reshape(const_7236.astype('float32'), [5, 16, 16]), relay.reshape(var_7237.astype('float64'), [1920,]), ), 1)
call_7238 = relay.TupleGetItem(func_2459_call(relay.reshape(const_7236.astype('float32'), [5, 16, 16]), relay.reshape(var_7237.astype('float64'), [1920,]), ), 1)
func_6310_call = mod.get_global_var('func_6310')
func_6316_call = mutated_mod.get_global_var('func_6316')
const_7247 = relay.const([False,True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False], dtype = "bool")#candidate|7247|(480,)|const|bool
const_7248 = relay.const([9.775616,5.052437,-6.140672,5.270514,-6.319731,-4.944467,-0.051354,-0.912999,3.593524,9.381469,7.675998,5.385757,7.957136,-2.854913,-5.530474,-9.886345,8.653944,2.249208,6.766143,-3.319475,-3.315707,4.357333,9.537164,-5.307902,-2.534600,8.042866,-9.245729,3.534230,-0.718555,-6.349482,3.022627,-9.668229,-1.507762,-9.903522,2.174460,6.000239,0.959293,-6.599354,-2.497066,3.266240,-9.523283,7.398409,9.200278,4.582250,-5.987635,-6.399680,-1.504820,-6.801966,0.583057,-9.130198,0.479332,-3.346236,4.195876,5.291416,4.022446,-2.068009,1.819867,-8.373520,-2.930136,2.390690,-6.500145,-1.929677,-5.879398,4.809940,-2.785420,-0.765322,-4.793469,-8.729406,-8.855959,1.933516,2.666232,4.047510,5.763697,0.213147,2.979636,-0.295921,6.800565,-5.675159,-8.185852,5.198083,-4.855840,-6.325999,-5.270729,-2.760120,7.252835,-1.316111,4.457514,7.207242,5.629755,0.865346,2.426428,-9.344416,-8.021926,5.091616,2.447723,1.504031,-4.666417,-3.272897,4.730260,6.883292,-7.559508,1.080621,-0.815846,3.898446,4.719088,-2.121965,-1.236959,7.718721,-4.740082,8.256424,3.488194,4.175604,6.381409,-9.059813,-9.003696,0.478974,0.169089,-5.706956,8.352474,-3.166816,-5.688775,-5.284395,9.792262,-7.695474,-9.187159,0.899929,-8.034726,0.385667,-9.310947,-4.414639,-0.533004,-2.734439,-3.787417,9.152835,-5.124725,6.558514,-7.918883,4.259381,2.409274,8.782740,-0.407677,-2.662470,7.391977,-9.468627,4.041638,-2.639564,-9.657818,-0.358132,-8.081789,-8.518921,4.687029,1.158496,4.356988,5.517534,-4.789765,-2.813151,-3.958342,-7.972370,5.236875,8.068519,6.336471,-1.353599,-6.991657,8.647480,-5.550517,6.450023,0.864102,8.893744,-2.776667,4.365597,-0.610956,2.697654,-2.191355,-9.170814,-1.790470,6.090483,-8.154351,6.747322,-2.618153,3.862421,-0.635459,-1.159656,6.411705,0.783577,-0.877530,1.551161,-5.418127,3.122795,-4.694803,-2.489825,-2.672383,-3.312812,4.218839,6.910453,-6.392861,-2.256536,-4.949844,-6.028354,1.105142,7.752392,5.867630,-4.058080,3.953718,-5.341015,3.352113,-4.085006,-8.442773,-3.172833,-1.594152,9.869726,-4.131221,4.677471,-6.096540,4.247212,6.563340,-5.372305,0.176992,8.397184,-0.025408,-2.553082,-4.672181,3.625249,6.938597,9.127760,-8.611648,8.581899,-4.735164,3.181872,-4.262447,-3.475343,7.700745,-0.743552,4.707103,1.305261,-5.546327,-7.000855,-2.088086,7.592076,4.662258,0.134888,-9.784960,6.071629,2.120784,1.768002,2.924931,-5.099270,-3.972191,0.637903,-4.701336,-0.385074,-3.447640,9.228116,-3.694113,-3.206569,9.691520,0.478497,-0.375557,7.310746,7.028315,-0.475787,-0.122131,2.387482,7.027024,7.641394,2.376999,-1.763874,-8.513266,-9.011195,1.408834,-6.571520,-9.220846,-5.784581,-1.294674,5.873830,-2.269052,-6.244471,-4.998315,-3.844575,-0.461125,9.090906], dtype = "float64")#candidate|7248|(280,)|const|float64
call_7246 = relay.TupleGetItem(func_6310_call(relay.reshape(const_7247.astype('bool'), [3, 16, 10]), relay.reshape(const_7247.astype('bool'), [3, 16, 10]), relay.reshape(const_7199.astype('int16'), []), relay.reshape(const_7248.astype('float64'), [280,]), ), 4)
call_7249 = relay.TupleGetItem(func_6316_call(relay.reshape(const_7247.astype('bool'), [3, 16, 10]), relay.reshape(const_7247.astype('bool'), [3, 16, 10]), relay.reshape(const_7199.astype('int16'), []), relay.reshape(const_7248.astype('float64'), [280,]), ), 4)
func_6762_call = mod.get_global_var('func_6762')
func_6764_call = mutated_mod.get_global_var('func_6764')
var_7257 = relay.var("var_7257", dtype = "float32", shape = (432,))#candidate|7257|(432,)|var|float32
call_7256 = relay.TupleGetItem(func_6762_call(relay.reshape(var_7257.astype('float32'), [16, 9, 3])), 0)
call_7258 = relay.TupleGetItem(func_6764_call(relay.reshape(var_7257.astype('float32'), [16, 9, 3])), 0)
func_6310_call = mod.get_global_var('func_6310')
func_6316_call = mutated_mod.get_global_var('func_6316')
call_7279 = relay.TupleGetItem(func_6310_call(relay.reshape(const_7247.astype('bool'), [3, 16, 10]), relay.reshape(const_7247.astype('bool'), [3, 16, 10]), relay.reshape(const_7199.astype('int16'), []), relay.reshape(const_7248.astype('float64'), [280,]), ), 4)
call_7280 = relay.TupleGetItem(func_6316_call(relay.reshape(const_7247.astype('bool'), [3, 16, 10]), relay.reshape(const_7247.astype('bool'), [3, 16, 10]), relay.reshape(const_7199.astype('int16'), []), relay.reshape(const_7248.astype('float64'), [280,]), ), 4)
func_490_call = mod.get_global_var('func_490')
func_492_call = mutated_mod.get_global_var('func_492')
const_7295 = relay.const([[1.647023,-2.486243],[2.555908,-4.878248],[6.611741,-3.254347],[6.644433,7.703321],[6.948081,-3.099277],[-9.195033,-8.302988],[-2.776728,5.325107],[-9.739582,-0.496629]], dtype = "float64")#candidate|7295|(8, 2)|const|float64
call_7294 = func_490_call(relay.reshape(const_7295.astype('float64'), [16, 1]))
call_7296 = func_490_call(relay.reshape(const_7295.astype('float64'), [16, 1]))
output = relay.Tuple([call_7198,var_7200,call_7217,bop_7228,call_7235,const_7236,var_7237,call_7246,const_7247,const_7248,call_7256,var_7257,call_7279,call_7294,const_7295,])
output2 = relay.Tuple([call_7201,var_7200,call_7218,bop_7228,call_7238,const_7236,var_7237,call_7249,const_7247,const_7248,call_7258,var_7257,call_7280,call_7296,const_7295,])
func_7299 = relay.Function([var_7187,var_7200,var_7237,var_7257,], output)
mod['func_7299'] = func_7299
mod = relay.transform.InferType()(mod)
mutated_mod['func_7299'] = func_7299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7299_call = mutated_mod.get_global_var('func_7299')
var_7301 = relay.var("var_7301", dtype = "float32", shape = (10, 15, 16))#candidate|7301|(10, 15, 16)|var|float32
var_7302 = relay.var("var_7302", dtype = "int8", shape = (672,))#candidate|7302|(672,)|var|int8
var_7303 = relay.var("var_7303", dtype = "float64", shape = (2, 960))#candidate|7303|(2, 960)|var|float64
var_7304 = relay.var("var_7304", dtype = "float32", shape = (432,))#candidate|7304|(432,)|var|float32
call_7300 = func_7299_call(var_7301,var_7302,var_7303,var_7304,)
output = call_7300
func_7305 = relay.Function([var_7301,var_7302,var_7303,var_7304,], output)
mutated_mod['func_7305'] = func_7305
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7386 = relay.var("var_7386", dtype = "float64", shape = (16, 10))#candidate|7386|(16, 10)|var|float64
uop_7387 = relay.sqrt(var_7386.astype('float64')) # shape=(16, 10)
output = uop_7387
output2 = uop_7387
func_7403 = relay.Function([var_7386,], output)
mod['func_7403'] = func_7403
mod = relay.transform.InferType()(mod)
mutated_mod['func_7403'] = func_7403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7404 = relay.var("var_7404", dtype = "float64", shape = (16, 10))#candidate|7404|(16, 10)|var|float64
func_7403_call = mutated_mod.get_global_var('func_7403')
call_7405 = func_7403_call(var_7404)
output = call_7405
func_7406 = relay.Function([var_7404], output)
mutated_mod['func_7406'] = func_7406
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7458 = relay.var("var_7458", dtype = "float32", shape = (12, 1, 13))#candidate|7458|(12, 1, 13)|var|float32
uop_7459 = relay.cos(var_7458.astype('float32')) # shape=(12, 1, 13)
bop_7465 = relay.less(uop_7459.astype('bool'), relay.reshape(var_7458.astype('bool'), relay.shape_of(uop_7459))) # shape=(12, 1, 13)
output = bop_7465
output2 = bop_7465
func_7478 = relay.Function([var_7458,], output)
mod['func_7478'] = func_7478
mod = relay.transform.InferType()(mod)
var_7479 = relay.var("var_7479", dtype = "float32", shape = (12, 1, 13))#candidate|7479|(12, 1, 13)|var|float32
output = func_7478(var_7479)
func_7480 = relay.Function([var_7479], output)
mutated_mod['func_7480'] = func_7480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7644 = relay.var("var_7644", dtype = "uint16", shape = ())#candidate|7644|()|var|uint16
var_7645 = relay.var("var_7645", dtype = "uint16", shape = (12, 11, 8))#candidate|7645|(12, 11, 8)|var|uint16
bop_7646 = relay.subtract(var_7644.astype('uint16'), var_7645.astype('uint16')) # shape=(12, 11, 8)
output = relay.Tuple([bop_7646,])
output2 = relay.Tuple([bop_7646,])
func_7650 = relay.Function([var_7644,var_7645,], output)
mod['func_7650'] = func_7650
mod = relay.transform.InferType()(mod)
var_7651 = relay.var("var_7651", dtype = "uint16", shape = ())#candidate|7651|()|var|uint16
var_7652 = relay.var("var_7652", dtype = "uint16", shape = (12, 11, 8))#candidate|7652|(12, 11, 8)|var|uint16
output = func_7650(var_7651,var_7652,)
func_7653 = relay.Function([var_7651,var_7652,], output)
mutated_mod['func_7653'] = func_7653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7829 = relay.var("var_7829", dtype = "uint32", shape = (4, 8, 10))#candidate|7829|(4, 8, 10)|var|uint32
var_7830 = relay.var("var_7830", dtype = "uint32", shape = (4, 8, 10))#candidate|7830|(4, 8, 10)|var|uint32
bop_7831 = relay.greater(var_7829.astype('bool'), relay.reshape(var_7830.astype('bool'), relay.shape_of(var_7829))) # shape=(4, 8, 10)
func_5226_call = mod.get_global_var('func_5226')
func_5229_call = mutated_mod.get_global_var('func_5229')
var_7835 = relay.var("var_7835", dtype = "float32", shape = (2184,))#candidate|7835|(2184,)|var|float32
call_7834 = relay.TupleGetItem(func_5226_call(relay.reshape(var_7835.astype('float32'), [14, 12, 13])), 1)
call_7836 = relay.TupleGetItem(func_5229_call(relay.reshape(var_7835.astype('float32'), [14, 12, 13])), 1)
func_7478_call = mod.get_global_var('func_7478')
func_7480_call = mutated_mod.get_global_var('func_7480')
const_7843 = relay.const([4.989878,5.276221,-6.505142,-0.674738,7.719965,-1.230536,7.364181,0.081121,3.467768,5.524033,-6.147812,-7.856823,7.531568,-1.458057,-3.051826,-4.668257,7.239381,-3.211515,9.615408,5.787696,-5.149475,4.022413,5.356371,1.160706,-7.541358,-6.806037,-3.009847,-0.210093,5.889937,-3.129184,7.984967,2.204312,-9.369052,5.466089,-3.516058,-6.095778,-8.360118,6.567232,-4.753099,-9.115249,4.725211,2.092605,3.441507,9.931434,-2.972988,3.674920,-5.428474,-5.086329,-2.550999,-1.928912,-7.025679,3.764277,-0.021024,5.698754,-1.486688,-7.328407,-0.519392,7.168428,6.320294,-6.879336,-0.102409,-9.995947,3.939406,-5.593838,-8.168487,-2.318775,2.393963,0.160628,-8.472693,8.662323,-0.364829,-7.007487,4.257649,-2.721299,-4.333092,1.152287,-1.332373,-0.633837,-7.696453,-3.703734,2.310926,-6.445337,-0.327714,4.176949,-3.870279,8.503165,-0.470525,5.601447,5.810509,-9.880168,0.666312,3.889685,3.126289,7.973368,-9.577515,-0.668802,-3.506776,-7.515085,-8.807019,-2.196287,-7.201157,9.622480,4.286346,2.990859,0.032407,4.192681,6.688969,-9.288982,-4.700512,-1.887918,6.733951,-9.615000,9.575820,0.869816,-4.107523,-6.544204,4.986057,0.612965,0.186023,-4.040333,3.575438,2.114000,-6.036811,0.819776,0.801981,1.034141,2.639234,-3.750741,-8.211406,-3.049274,7.512370,-3.330967,8.749703,-1.624876,-2.827225,1.369158,-5.194480,-9.929179,-3.582846,4.326246,7.532392,3.776229,-8.580196,-4.737203,2.998236,-6.563859,7.851449,3.520924,-0.195951,1.374138,-2.115004,-2.015457,4.420437,5.820081,6.617284,6.863219], dtype = "float32")#candidate|7843|(156,)|const|float32
call_7842 = func_7478_call(relay.reshape(const_7843.astype('float32'), [12, 1, 13]))
call_7844 = func_7478_call(relay.reshape(const_7843.astype('float32'), [12, 1, 13]))
output = relay.Tuple([bop_7831,call_7834,var_7835,call_7842,const_7843,])
output2 = relay.Tuple([bop_7831,call_7836,var_7835,call_7844,const_7843,])
func_7850 = relay.Function([var_7829,var_7830,var_7835,], output)
mod['func_7850'] = func_7850
mod = relay.transform.InferType()(mod)
mutated_mod['func_7850'] = func_7850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7850_call = mutated_mod.get_global_var('func_7850')
var_7852 = relay.var("var_7852", dtype = "uint32", shape = (4, 8, 10))#candidate|7852|(4, 8, 10)|var|uint32
var_7853 = relay.var("var_7853", dtype = "uint32", shape = (4, 8, 10))#candidate|7853|(4, 8, 10)|var|uint32
var_7854 = relay.var("var_7854", dtype = "float32", shape = (2184,))#candidate|7854|(2184,)|var|float32
call_7851 = func_7850_call(var_7852,var_7853,var_7854,)
output = call_7851
func_7855 = relay.Function([var_7852,var_7853,var_7854,], output)
mutated_mod['func_7855'] = func_7855
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8013 = relay.var("var_8013", dtype = "float32", shape = (9, 1, 6))#candidate|8013|(9, 1, 6)|var|float32
uop_8014 = relay.sqrt(var_8013.astype('float32')) # shape=(9, 1, 6)
bop_8021 = relay.less_equal(uop_8014.astype('bool'), relay.reshape(var_8013.astype('bool'), relay.shape_of(uop_8014))) # shape=(9, 1, 6)
func_919_call = mod.get_global_var('func_919')
func_922_call = mutated_mod.get_global_var('func_922')
const_8037 = relay.const([1.678161,-3.489401,-2.028566,-0.242803,8.722929,-8.864841,-4.248848,-9.395250,4.405762,0.719536,-2.191700,-1.172259,-4.264948,-3.437077,9.571942,7.757192,-4.418256,2.284786,3.179802,4.238494,-1.315627,0.260704,0.647206,3.882595,-1.944515,-9.012930,-0.759660,-8.902753,-6.643607,-9.437690,1.937291,-0.828252,6.852154,-1.165271,-0.442336,6.827513,-3.133904,4.001646,-9.260159,-9.331812,2.251104,9.962863,1.666632,3.690274,-4.462293,-3.866305,8.403406,7.556600,-1.500781,-8.910769,7.679160,9.176932,-0.725813,1.496202,-7.102109,2.245851,-3.956824,9.745434,-7.801435,-9.773176,-5.009236,4.479365,5.270840,-5.548586,-0.070311,-6.287845,-3.954238,6.825019,8.843957,4.892479,-2.211983,8.844414,3.622939,9.971300,5.496964,-4.513703,-5.898284,-7.160860,1.511409,0.960899,5.636205,1.984806,-3.435819,-3.752537,-7.045728,5.566563,-9.954632,2.999057,2.481279,-1.112873,-2.908576,-3.752322,-5.504119,9.253985,6.965203,6.064820,-9.823852,-3.206868,-7.937438,-5.091874,-3.336255,5.714734,2.489305,-1.732274,9.295566,0.437992,7.459969,-0.804881,-8.666066,9.193734,8.128239,-7.693784,-0.695322,-8.905193,8.245027,8.161893,-6.049200,4.041855,3.685628,-2.033513,-5.044456,1.165324,6.442877,6.476262,2.639558,0.667103,6.536995,-1.527454,-6.901123,-4.962161,-9.683327,9.167052,5.245951,-5.569030,-0.405748,3.538679,-0.746496,-9.917320,9.814726,-3.601513,7.739669,9.823402,7.421779,-0.025468,-0.418017,-0.610603,-7.158860,6.020232,-4.813101,-7.108389,-8.343377,6.500068,-2.468783,-0.712933,5.208544,-7.583603,-9.451066,2.946573,-5.875709,3.041817,8.855917,4.496881,3.022696,1.425209,-2.712021,-6.287097,9.404561,8.734306,8.560856,8.744880,-5.730068,8.972759,8.949318,3.675813,-4.910668,-0.063478,-2.690058,7.331516,-6.918912,5.987323,9.128171,0.184277,1.765500,-6.788157,-0.572165,9.780264,-1.575893,8.803874,4.057963,8.935109,7.737412,4.502806,5.849393,1.795823,1.717094,-3.284889,-2.217137,-5.585371,-3.317615,0.062315,-1.311202,-3.904641,6.026678,9.636398,-3.584986,9.112962,-1.362659,6.441340,6.766186,-5.301992,4.397477,8.039942,-5.353997,2.072653,8.529333,-4.725805,0.775992,-9.606316,-5.858617,0.924939,-4.710914,3.368622,-6.961426,-1.994062,8.481270,-1.240576,0.557858,5.888541,3.559112,-9.656899,7.422220,9.650814,6.545361,4.682922,8.043988,-1.857288,9.855075,-8.175810,-4.744984,-2.667208,0.416737,-1.340463,-3.775358,5.817884,-9.626031,-5.149793,-9.784822,-6.006562,6.414585,4.750677,9.691235,-5.625288,2.927119,-4.159561,3.925236,-8.507612,1.194626,2.758170,-6.602728,-5.618093,8.146335,-7.877203,-1.344096,8.375284,-1.578315,-6.058952,6.126842,5.418680,3.574677,-8.105704,-3.641114,-4.932633,-7.827392,7.678129,-8.265694,0.536912,6.340446,0.099049,6.254498,8.030581,6.596622,9.788421,1.607118,-0.400621,-0.530482,4.948799,8.992989,-5.579238,-2.424368,-1.450018,3.047388,-6.272413,8.031024,-5.126579,-7.185977,-0.154491,8.551857,-9.012648,-1.103749,-3.700766,-3.818567,8.271495,3.670619,5.129604,-2.892899,-7.045718,9.271539,-2.742274,-2.327068,2.977808,-6.020174,-0.777115,4.669796,-8.321994,1.453464,-0.097208,8.868435,4.831202,-1.447728,-8.670119,-5.713795,-3.115247,8.329079,-8.162058,-6.298239,-2.659350,-2.903251,-5.517624,-8.907716,7.340356,5.759724,6.752163,-8.118994,2.059931,8.254992,2.494792,-0.105845,0.032757,-7.878305,9.658428,-6.803105,4.481017,0.461533,-2.629318,9.991560,6.062324,-3.588811,8.630946,-4.297670,7.929277,-4.517860,1.335214,-9.358687,-5.078458,8.877645,5.480813,6.681137,-6.642290,9.940090,-6.284254,-5.947928,7.383106,-7.402934,1.920527,-3.128125,-3.428855,8.738288,2.783906,3.880275,-9.193396,-8.106781,-3.006990,1.275246,-0.436084,1.391032,3.241858,-3.402300,-7.669774,3.964094,7.092452,-2.119346,-9.593168,-3.143862,-9.855764,7.969325,-4.249557,-4.791956,2.999560,9.960394,-3.808797,2.406776,-6.954827,2.911196,-0.669563,1.598575,-0.774202,-9.134177,1.856601,-2.923265,-5.202275,9.797348,3.294013,8.505771,2.713367,-9.921995,1.112172,4.619473,-8.707225,2.904854,1.287642,-1.250077,-0.694612,-5.229214,9.272170,3.212804,-5.863626,-9.888456,2.060417,-4.423162,-4.099199,-8.033907,-0.335571,-6.551331,-0.426988,-8.787717,-6.667944,1.294980,4.328824,-9.122020,4.179579,-3.662653,-8.852933,9.794522,-5.389203,-2.067354,7.685080,-6.992146,-0.610955,-8.457120,-5.923133,-4.967534,6.956100,-6.766906,5.490999,-2.045316,-7.952668,-2.520513,9.454500,-0.978502,-7.499439,9.374330,-3.926611,9.600767,-9.906956,2.476360,-4.139296,9.503969,-2.581421,-2.096740,-9.831277,-6.280641,6.782762,-1.456223,-2.701936,-4.320767,4.677944,-5.706024,-1.238581,3.330974,9.960186,9.208991,-5.599530,-8.550481,-7.168038,3.349835,5.410933,-0.929250,-6.047863,7.977206,7.366032,3.527763,9.822240,-0.540455,-3.290637,-7.272040,3.722796,8.989633,-7.381393,-0.846553,9.364237,-7.119984,4.396972,4.141060,6.248861,-8.687733,7.268135,0.624515,-0.082659,-8.763161,4.313291,-5.604897,-7.341195,5.974604,0.219956,-4.315171,2.918600,0.870735,9.251409,-1.143275,-8.126345,4.982619,3.488977,-2.548028,4.116111,-7.724012,-3.911818,8.942390,-3.343843,7.203875,-4.256393,-2.013490,-5.552606,-5.832245,1.120241,-6.004271,4.051715,5.836642,3.998732,-0.715439,-9.881703,7.488637,-6.285751,4.353698,7.883700,-7.261448,-6.183063,4.243801,3.072899,-5.408610,4.856437,-9.426026,4.586370,7.187166,0.297666,3.058056,-0.702484,-7.271994,3.384268,1.653529,0.984248,-3.071270,6.992386,-7.621351,1.248115,5.949752,-5.875176,2.765828,8.796046,-2.555611,7.010596,-8.417519,-4.078049,-6.192671,-3.318754,5.788532,0.228634,-4.518179,1.233968,5.804425,6.273682,7.074292,-3.319499,4.620394,1.223261,3.184205,0.867197,-7.152561,-3.684887,2.792166,0.832102,-7.325681,-2.950436,3.581464,-8.370892,-9.441498,7.778141,1.563674,0.990881,6.611248,-8.071292,3.261069,-2.238774,5.064002,-9.921480,5.400749,8.355183,-8.424443,-4.475887,-2.044201,8.728815,0.747898,-9.240448,-9.216942,1.415074,2.788892,-6.120251,-6.123760,-8.175319,-5.516615,-6.512321,-8.467243,0.799053,-4.357344,-1.714218,-7.511869,2.900145,-8.255778,-0.499850,9.971647,-1.316257,9.633641,5.485027,9.815141,-8.740153,-0.147715,-4.292762,-7.023476,-4.536773,3.399360,9.813661,-9.871676,5.957065,1.165393,5.485206,-2.057136,3.906695,0.499337,9.641456,-2.195806,-2.279809,-2.291746,-1.190569,-8.232299,2.731645,3.439905,-4.386281,-7.922461,2.137025,3.698179,-9.706812,-8.159351,-3.982012,6.327572,9.863720,0.643885,-9.490330,-2.362413,-2.242613,3.363105,-8.916785,9.075493,-4.658974,6.104308,0.072365,1.155619,-6.000942,9.996606,9.543549,-6.339897,-1.459791,-9.403445,3.227383,6.127231,7.706372,-3.764223,-9.879467,-2.994718,4.088296,-2.541514,3.304310,-7.918230,1.903696,-2.555952,-6.109013,7.922297,-1.805201,-6.764419,-7.018220,8.078034,-2.782617,-5.079541,3.560656,-0.153506,-5.269131,2.848057,-3.713154,3.666935,9.813680,-3.182339,-6.924093,6.840399,1.798991,-5.369264,9.646819,9.214246,6.945971,-3.947886,5.066353,4.972778,1.613430,3.860997,9.097039,-3.253112,-8.055785,-1.951105,-6.653448,8.434253,1.510777,-0.458646,5.381848,3.335052,6.230935,-1.481480,-9.629600,-3.696465,-0.351370,1.525650,-7.450912,5.692091,-6.127100,7.092366,5.143140,-3.517187,-2.806334,7.581188,-8.812762,5.118884,7.216411,-5.822457,1.560684,8.262936,-2.928645,5.482429,-2.597651,3.107489,7.368229,-3.278957,9.048125,7.923209,3.184566,-4.080822,1.833424,8.405788,3.447877,-0.648056,-2.436634,-9.709678,-4.000288,0.918052,-2.118737,9.699601,4.456903,-8.827458,-4.532900,-4.625848,3.557631,-2.405306,-2.528082,4.545343,5.495649,2.575046,3.714948,5.638493,4.225313,6.260358,2.759648,4.508068,-6.879290,-5.768511,-4.247930,-1.077005,1.533814,-1.474282,-1.125591,8.922745,-2.349322,3.264965,-0.230242,2.301964,7.526016,-8.624214,-7.110474,0.419436,8.384412,1.086141,-8.796488,6.135613,-2.759680,-7.881713,6.273676,5.540556,-5.263212,-7.098873,5.105998,-8.418244,-7.618479,8.252565,3.087950,6.738744,-9.460756,-1.616955,-9.069401,-7.105867,6.184149,4.480638,-2.765310,-3.706282,9.523782,-0.026942,8.620076,7.813120,7.639171,-8.202978,4.064214,1.941567,-6.893951,-5.051852,-6.494538,-9.278902,9.128604,-8.430910,-3.529680,-1.260066,4.071775,-5.867846,-6.376618,-1.633209,-0.228460,-3.523642,-3.312518,-4.180953,0.065201,4.230031,8.792317,5.906406,6.966111,4.420858,0.790343,9.555228,-2.510634,7.568435,5.429143,-4.305639,-5.644481,6.067704,-1.323433,8.879324,2.935248,1.191976,-6.024591,2.533375,7.860939,2.569222,6.643035,9.019531,-0.581198,-8.800850,1.964915,-2.393829,3.222540,-5.366233,0.897457,8.262737,1.286237,6.154801,6.740020,7.178638,8.963143,7.989563,-2.005262,-2.731908,7.749517,-4.955415,0.585984,-0.078181,0.805153,7.133002,3.153393,1.595987,4.693985,-2.949401,5.859873,6.749594,2.776241,9.339212,-8.537288,-4.051240,-4.104649,-1.092092,7.317627,-4.294573,6.009793,9.661738,-5.179259,0.212251,-0.052781,7.751233,-1.843233,-9.137673,9.136226,6.765132,-9.449559,-4.823255,-9.069698,-4.869781,2.542580,-5.394352,-2.319779,2.841554,-2.281633,1.383865,8.435277,4.669073,0.420956,0.555961,6.136203,-1.916733,-1.459404,4.028650,0.290246,4.794921,-6.019511,-3.972199,4.002390,-5.163471,-4.153058,-5.656761,-3.428590,5.771653,-3.963281,-4.805730,7.109618,7.695473,4.357280,7.609707,-3.246135,-3.347495,-7.893510,-6.907443,-3.984669,-1.417033,-0.833856,-8.533138,-1.928533,-7.966979,-0.375604,-1.132914,-4.563970,-6.031494,-8.283524,-9.653697,-8.578640,-0.178740,3.779084,-6.728864,4.564042,4.310576,-8.645031,-5.014951,1.451653,9.311791,0.289921,-8.298424,9.710923,-4.414578,-0.737259,-5.063202,1.736847,7.342702,5.819000,-3.708873,-4.953671,-8.204675,-1.849546,1.556942,-3.055485,0.127616,3.154805,7.564109,-1.220924,-9.023663,-0.141054,8.233372,4.315007,2.639474,7.370513,4.561758,6.277569,-7.470960,-6.534501,3.321069,-0.078003,1.454114,-5.963379,-1.989127,-6.987841,2.565010,1.997999,-4.872906,-7.294894,-4.396209,4.811960,4.260663,9.998844,-4.741776,-8.566352,-4.955919,4.632331,-0.981944,-4.062066,-5.235675,5.702237,-8.851427,0.679087,-4.690303,-2.225213,6.027958,-3.548480,-3.673078,-6.656630,-6.584828,-6.081042,8.689753,-4.990515,-0.545450,-4.425519,3.505217,-8.147579,-6.525824,-5.971953,8.023443,7.041414,-7.921476,-5.353617,-0.664411,-8.527841,0.012458,4.990400,-5.638217,-6.261542,9.448925,1.711098,-3.486696,-0.340965,9.268891,5.873403,5.776525,6.551844,5.438912,-1.918686,-7.550169,-8.779447,5.094815,-8.882125,6.814486,-2.942506,9.727005,9.860269,-8.125053,5.582094,-8.948043,-3.009705,8.713639,7.099795,6.159233,-3.100042,-8.178782,8.254647,3.676036,6.934297,-5.532879,7.950871,-9.978728,-0.202563,-1.680300,-0.463505,-1.712078,-6.022131,8.779368,-5.159185,8.457195,-2.087252,3.457419,0.052568,-2.036016,8.118645,4.295486,-6.950733,7.844292,-5.486547,-4.130407,-1.888685,2.832914,7.984035,7.541084,-1.390617,-9.844954,-0.549803,-0.339289,-5.617538,8.307688,-5.280479,-6.277889,-8.887205,5.354339,6.501102,5.052086,-6.106923,-0.422495,7.242165,-1.869256,-6.921314,9.552363,-7.425382,9.415192,-9.969325,0.576265,1.413487,5.056951,6.718357,-0.439911,9.118766,1.065717,-6.418329,6.932023,9.545959,7.362888,-1.183993,-7.532602,1.169422,-3.839005,-9.722994,-8.722248,0.932891,2.268209,-0.668198,-3.464775,-8.174855,6.628373,4.562136,-5.383706,-1.540093,0.335243,-9.542663,-5.325368,2.681200,8.557779,-3.781376,4.482036,-0.339967,-7.321936,-8.297564,-1.972548,-3.552658,2.959983,-7.246480,-7.249251,-4.647015,0.655214,-8.340997,-8.504198,-7.504924,3.027520,0.147648,0.224632,-2.981090,-7.820571,-6.542564,5.266231,-5.848638,-4.179322,-1.137694,-5.476665,-4.834143,-6.931613,2.837031,-6.591673,-3.499934,-3.006304,-3.098039,2.697801,7.413383,2.786345,-9.583515,4.786670,-9.740943,9.012086,-8.645408,9.254989,-0.276974,8.488338,-9.372684,2.316751,-9.632301,-2.672878,5.699505,9.378011,6.179179,-4.042895,2.254002,-9.305211,-0.008425,-5.728335,3.953542,3.045524,6.422325,8.610544,5.736526,9.209912,-4.092449,-3.038694,7.595170,3.747015,2.928874,4.837247,1.708095,-7.186640,2.267292,-2.931229,-2.322266,-8.072145,0.282103,3.689659,2.908886,-2.861054,-7.642308,3.090123,-4.286516,-7.488049,0.644421,-8.802001,4.503347,-0.919482,9.849746,-8.531740,-5.324860,-8.161772,-5.237254,-8.419160,-1.287248,-7.857975,-9.524385,-6.904964,-6.151020,-2.320182,-7.429400,-7.790664,4.621814,5.234414,3.507636,-2.267959,-0.166644,8.311092,-1.991814,-5.262062,-2.681371,3.083103,1.951407,8.641093,-3.029199,1.463236,-6.069819,-2.390166,-7.617900,5.718508,5.689945,2.262345,-7.491847,5.106412,6.613893,8.529741,-0.339914,-6.251792,-3.557545,3.988813,9.663505,-3.572423,-3.218978,2.849070,-6.533598,-0.381287,-4.238399,7.407798,6.493538,3.898873,4.652955,-8.512661,7.257148,4.474903,2.830061,-1.292983,8.303331,-7.329747,7.248789,-3.720179,-2.689047,-6.866464,-2.339987,1.789910,-8.359485,-2.091958,3.935403,2.878102,6.177056,0.620109,9.856660,5.905655,-9.819464,-0.855624,4.210522,0.161415,1.609714,-7.925958,7.521304,6.095306,-4.811162,0.797675,6.519262,-0.616051,0.286745,9.032662,1.735694,5.663022,-1.812944,-4.116267,-7.996469,-9.574665,2.182582,-0.973439,-5.912810,-2.426054,6.907182,4.163974,-4.307252,-4.599728,0.445686,-0.364537,-0.580411,-5.841168,4.017754,9.513343,-7.538595,6.882178,-8.528985,-7.419896,-6.599941,-6.909536,3.923844,-4.031174,5.622345,7.046393,-6.549140,-1.767704,-6.475745,6.535742,7.832534,4.829824,-1.757643,6.862980,-1.121464,-8.204928,-2.502505,0.849197,-5.785415,7.929646,-9.941907,-5.922636,-2.447539,1.903760,4.351314,-2.377566,2.307325,-7.029767,-8.751346,7.599555,3.896647,3.981048,-2.420620,8.665641,-4.712884,-0.202472,-3.122973,3.908334,6.190769,6.722269,-0.093398,3.365579,1.202454,8.461964,7.502279,7.150649,-6.182282,-6.179588,1.134634,5.224171,-8.704451,-3.022060,-4.268236,3.395707,-3.701805,-2.944790,-9.060456,8.412905,0.699086,-1.858716,8.645081,-4.180329,-4.942992,-5.430898,-6.254543,-0.559096,4.232239,3.199365,-7.711661,-2.919957,7.983864,6.483955,-2.255788,-4.034979,-8.183105,7.067544,-1.360767,0.968669,-4.108586,-5.166817,-7.851372,-8.097935,9.130508,6.002589,-3.912951,-2.370537,3.617532,-9.998121,-4.533409,2.735996,2.606093,-4.498293,-9.068305,-3.622703,7.137836,-2.742984,5.307586,-7.640187,-0.547746,0.873824,8.774651,5.357612,8.556878,-6.763252,-6.961236,-3.127555,-4.463470,4.674491,3.700578,-6.527460,-0.540308,-7.942881,3.013877,-7.726440,-0.060915,-8.659399,5.636477,-4.676965,5.319740,4.960455,9.622621,4.986063,-7.705370,-4.199027,1.724189,0.102526,4.188220,1.401905,-2.437533,1.474057,3.174757,-8.174351,8.982612,-9.737833,1.922044,-2.675854,1.216092,2.526488,-0.521111,0.943129,-7.175531,4.636992,-4.673970,-4.127663,-1.483959,-5.320880,9.653323,-2.366258,9.617018,-7.203093,-6.973925,7.545413,-3.084357,-1.611329,6.985631,-2.962951,-9.808478,1.532086,2.303022,8.333887,0.553401,7.469213,-8.155826,8.449730,-0.807422,-8.182953,-9.846807,0.754510,-9.257301,5.025455,9.846056,0.490210,5.885960,7.699514,-1.660451,-5.189154,-1.628703,5.197046,-4.661071,-1.061957,-5.931980,7.535102,0.061740,3.719735,-0.871423,2.703960,7.526915,0.526145,1.683663,4.584597,6.012546,-1.081785,5.071611,-1.668828,-9.972049,0.783822,-5.062942,-8.710887,5.364949,0.908319,-1.874648,0.144105,-9.725200,4.570528,5.624257,0.916257,-9.979448,-6.497514,1.735046,9.675321,-1.340466,-6.529589,-2.611935,-0.938218,6.559428,3.489854,-1.616707,6.812028,-6.934075,-0.447780,6.390557,-1.761296,2.726323,1.453525,-6.467064,4.898553,6.194279,8.023751,-7.022255,1.431401,6.605532,2.938044,-1.949785,-6.139122,8.134616,-5.093279,9.884885,9.739134,-5.498042,5.011164,3.209158,5.291889,3.487040,-9.923198,-4.763407,4.900020,9.236402,7.881338,8.764091,-4.029822,-8.714565,3.909452,9.295190,3.490598,8.011038,-2.440245,9.003706,-8.825497,-1.615437,-5.608698,-3.960297,1.911795,-3.067404,4.563861,-1.330469,3.149939,7.523285,-3.858640,0.197982,-6.918838,9.669444,0.841098,-2.004472,4.037201,0.746687,2.493987,6.654396,2.643167,3.649306,8.619147,-8.611935,-3.271465,3.352387,-2.855868,-3.046872,9.485833,-3.857454,-1.534507,-0.100342,4.657811,7.784363,-7.165072,1.616690,7.352642,-1.499062,7.014273,4.084171,-7.462374,-5.918422,2.796361,6.684383,-8.373927,6.123698,-4.980055,-3.974333,8.164715,-3.375699,-8.598125,0.125942,-9.623093,-7.583015,-9.943021,-9.450359,-9.411656,-7.480642,3.641890,9.914430,8.403167,6.578798,-8.657141,6.444368,5.332497,7.461862,-3.252856,9.390741,9.364580,-4.922834,3.111995,-2.069042,4.934938,5.403383,3.160687,6.319730,-1.700855,-1.030903,-7.086634,-5.873670,-1.019369,-0.539934,9.140474,3.133679,8.362281,-7.969288,-2.465843,9.252842,7.566151,0.707744,0.432268,6.652962,1.615867,-9.419261,-7.813599,6.252981,4.178819,4.449054,-6.571311,4.708943,-9.167796,-3.553938,-6.434668,-9.821574,0.486745,-7.501216,-0.814894,-6.175920,-2.300488,-4.087984,2.080113,0.110735,7.694122,3.739456,1.679797,2.281518,1.466807,3.830773,3.185704,9.587728,9.774210,7.637850,-8.572945,7.895903,7.039845,6.204440,3.356998,1.145085,6.887719,-9.134100,8.558030,-7.068909,-2.096441,-6.650404,8.390199,-6.534337,-0.666449,0.574139,5.894115,5.687334,-9.585305,9.549063,4.735122,-0.062460,-8.433905,4.715656,-7.568180,-7.891704,5.896515,7.474247,-8.556445,8.126968,4.588552,7.058378,3.818912,8.258903,3.334078,-5.344020,3.565646,6.899198,7.989203,5.466844,-9.918831,-4.096784,8.976876,1.582717,6.813257,-2.070519,5.745026,4.506320,-7.331215,-1.976448,-8.125181,-4.100078,4.466913,5.532600,-8.473940,-9.021521,-5.192107,8.729649,-4.614447,9.151394,6.909999,4.943170,-1.963170,-6.186172,1.059114,-5.963802,7.937436,-7.663945,9.517892,6.088686,-3.204184,-0.852396,0.227122,-8.438344,-0.545249,1.008056,2.596872,-8.197772,-8.707054,-0.137885,9.504536,9.131499,2.701761,9.252321,6.303366,9.658962,2.779778,-5.229289,9.255671,-5.830608,-9.588847,0.802830,-6.990851,1.399777,-8.990547,4.170614,1.571205,-7.514085,-2.784337,6.867406,7.670237,5.964326,-2.218481,2.583048,6.437380,-1.045587,6.062091,3.983616,8.366260,-1.007941,8.719094,-8.428980,-3.631651,7.500239,-1.509317,-4.946136,2.917507,-5.756571,1.119926,6.401905,-7.676010,6.302360,-4.668046,5.524745,6.138069,5.893125,4.345202,7.101421,4.681181,-1.461538,5.934025,8.761211,9.980187,2.895324,6.299833,2.028757,-7.118305,1.418081,9.294552,-0.107389,5.928177,6.469512,6.644605,-5.816335,-1.019008,3.389633,-2.921130,-1.485622,-5.385226,-4.905571,4.128980,8.300986,-1.945557,-4.476503,-7.760193,6.082112,-9.864788,-1.113729,3.592401,-1.080311,-7.880404,-6.864480,-9.932808,-9.492736,-7.171947,-1.743619,-3.789752,6.142765,8.401270,-2.339143,-6.135602,9.514144,1.977508,0.286343,-8.691560,-5.998162,1.539805,9.820872,0.760531,-4.050784,0.732858,3.830304,7.797619,-9.233173,-2.102627,-8.021518,-8.175009,-6.478556,6.219199,1.262432,9.310457,-9.799317,-6.984534,5.477114,4.607957,3.798861,-0.240505,-2.353890,1.280722,-2.836732,-0.377190,-9.449399,-3.037904,-0.669664,-6.042725,-0.576857,3.481910,-0.758965,-8.526826,2.159355,-8.571156,-6.141384,-4.422772,-4.908224,-9.710280,7.784035,4.611458,3.001088,-6.457768,4.969819,0.584467,9.965540,9.293269,-0.497921,2.998308,3.346888,-9.966651,-7.604207,7.548388,-7.227537,-5.313577,-9.145895,-5.127646,8.564949,7.614639,9.165712,-7.982916,9.956995,4.696518,-0.937327,9.143550,-5.608883,3.118569,-0.573444,9.016909,-9.567292,4.658782,7.985900,1.773184,-6.425062,0.842961,5.231622,-8.188570,0.423256,0.696906,-6.149468,-7.365176,-3.209086,-1.145670,-8.384789,-5.716975,7.738542,2.277428,0.435142,8.817761,6.287138,4.971060,5.764210,4.597196,2.498479,-6.413277,5.524739,-7.498067,-4.564746,4.339841,-8.054834,-4.540775,4.087030,-6.412855,-9.203922,-4.831483,6.193921], dtype = "float64")#candidate|8037|(2016,)|const|float64
call_8036 = func_919_call(relay.reshape(const_8037.astype('float64'), [14, 9, 16]))
call_8038 = func_919_call(relay.reshape(const_8037.astype('float64'), [14, 9, 16]))
uop_8046 = relay.exp(uop_8014.astype('float64')) # shape=(9, 1, 6)
func_3436_call = mod.get_global_var('func_3436')
func_3439_call = mutated_mod.get_global_var('func_3439')
var_8052 = relay.var("var_8052", dtype = "float32", shape = (48,))#candidate|8052|(48,)|var|float32
call_8051 = relay.TupleGetItem(func_3436_call(relay.reshape(var_8052.astype('float32'), [48,])), 2)
call_8053 = relay.TupleGetItem(func_3439_call(relay.reshape(var_8052.astype('float32'), [48,])), 2)
bop_8054 = relay.divide(uop_8046.astype('float64'), relay.reshape(uop_8014.astype('float64'), relay.shape_of(uop_8046))) # shape=(9, 1, 6)
output = relay.Tuple([bop_8021,call_8036,const_8037,call_8051,var_8052,bop_8054,])
output2 = relay.Tuple([bop_8021,call_8038,const_8037,call_8053,var_8052,bop_8054,])
func_8058 = relay.Function([var_8013,var_8052,], output)
mod['func_8058'] = func_8058
mod = relay.transform.InferType()(mod)
var_8059 = relay.var("var_8059", dtype = "float32", shape = (9, 1, 6))#candidate|8059|(9, 1, 6)|var|float32
var_8060 = relay.var("var_8060", dtype = "float32", shape = (48,))#candidate|8060|(48,)|var|float32
output = func_8058(var_8059,var_8060,)
func_8061 = relay.Function([var_8059,var_8060,], output)
mutated_mod['func_8061'] = func_8061
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8405 = relay.const([[[-7],[3],[8],[-5],[-3],[9],[-1],[3],[2],[3],[-2],[-8]]], dtype = "int64")#candidate|8405|(1, 12, 1)|const|int64
var_8406 = relay.var("var_8406", dtype = "int64", shape = (4, 12, 10))#candidate|8406|(4, 12, 10)|var|int64
bop_8407 = relay.subtract(const_8405.astype('int64'), var_8406.astype('int64')) # shape=(4, 12, 10)
output = relay.Tuple([bop_8407,])
output2 = relay.Tuple([bop_8407,])
func_8418 = relay.Function([var_8406,], output)
mod['func_8418'] = func_8418
mod = relay.transform.InferType()(mod)
mutated_mod['func_8418'] = func_8418
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8419 = relay.var("var_8419", dtype = "int64", shape = (4, 12, 10))#candidate|8419|(4, 12, 10)|var|int64
func_8418_call = mutated_mod.get_global_var('func_8418')
call_8420 = func_8418_call(var_8419)
output = call_8420
func_8421 = relay.Function([var_8419], output)
mutated_mod['func_8421'] = func_8421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8425 = relay.var("var_8425", dtype = "int64", shape = (3, 3, 5))#candidate|8425|(3, 3, 5)|var|int64
var_8426 = relay.var("var_8426", dtype = "int64", shape = (3, 3, 5))#candidate|8426|(3, 3, 5)|var|int64
bop_8427 = relay.greater(var_8425.astype('bool'), relay.reshape(var_8426.astype('bool'), relay.shape_of(var_8425))) # shape=(3, 3, 5)
output = relay.Tuple([bop_8427,])
output2 = relay.Tuple([bop_8427,])
func_8432 = relay.Function([var_8425,var_8426,], output)
mod['func_8432'] = func_8432
mod = relay.transform.InferType()(mod)
var_8433 = relay.var("var_8433", dtype = "int64", shape = (3, 3, 5))#candidate|8433|(3, 3, 5)|var|int64
var_8434 = relay.var("var_8434", dtype = "int64", shape = (3, 3, 5))#candidate|8434|(3, 3, 5)|var|int64
output = func_8432(var_8433,var_8434,)
func_8435 = relay.Function([var_8433,var_8434,], output)
mutated_mod['func_8435'] = func_8435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8453 = relay.var("var_8453", dtype = "uint64", shape = (12, 5, 6))#candidate|8453|(12, 5, 6)|var|uint64
var_8454 = relay.var("var_8454", dtype = "uint64", shape = (12, 5, 6))#candidate|8454|(12, 5, 6)|var|uint64
bop_8455 = relay.right_shift(var_8453.astype('uint64'), relay.reshape(var_8454.astype('uint64'), relay.shape_of(var_8453))) # shape=(12, 5, 6)
bop_8468 = relay.multiply(bop_8455.astype('uint64'), relay.reshape(var_8453.astype('uint64'), relay.shape_of(bop_8455))) # shape=(12, 5, 6)
output = bop_8468
output2 = bop_8468
func_8472 = relay.Function([var_8453,var_8454,], output)
mod['func_8472'] = func_8472
mod = relay.transform.InferType()(mod)
var_8473 = relay.var("var_8473", dtype = "uint64", shape = (12, 5, 6))#candidate|8473|(12, 5, 6)|var|uint64
var_8474 = relay.var("var_8474", dtype = "uint64", shape = (12, 5, 6))#candidate|8474|(12, 5, 6)|var|uint64
output = func_8472(var_8473,var_8474,)
func_8475 = relay.Function([var_8473,var_8474,], output)
mutated_mod['func_8475'] = func_8475
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8663 = relay.var("var_8663", dtype = "float32", shape = (6, 1, 1))#candidate|8663|(6, 1, 1)|var|float32
var_8664 = relay.var("var_8664", dtype = "float32", shape = (6, 1, 15))#candidate|8664|(6, 1, 15)|var|float32
bop_8665 = relay.add(var_8663.astype('float32'), var_8664.astype('float32')) # shape=(6, 1, 15)
func_5886_call = mod.get_global_var('func_5886')
func_5888_call = mutated_mod.get_global_var('func_5888')
var_8669 = relay.var("var_8669", dtype = "int16", shape = (308,))#candidate|8669|(308,)|var|int16
call_8668 = relay.TupleGetItem(func_5886_call(relay.reshape(var_8669.astype('int16'), [11, 14, 2])), 0)
call_8670 = relay.TupleGetItem(func_5888_call(relay.reshape(var_8669.astype('int16'), [11, 14, 2])), 0)
bop_8674 = relay.logical_and(bop_8665.astype('bool'), relay.reshape(var_8664.astype('bool'), relay.shape_of(bop_8665))) # shape=(6, 1, 15)
func_3603_call = mod.get_global_var('func_3603')
func_3605_call = mutated_mod.get_global_var('func_3605')
const_8691 = relay.const([7,8,-1,3,6,8,-2,-10,-4,4,-7,3,-9,6,-5,1,2,-4,-10,9,-1,-7,-6,7,-5,-7,9,8,-1,9,-9,8,2,4,-2,-9,2,5,1,9,4,10,-7,3,-1,4,5,-3,7,-10,-2,2,-2,-3,1,-1,-7,-10,9,2,8,-4,-1,9,-6,-5,-7,-2,3,4,-7,-1,-5,-9,-6,8,1,8,-1,-10,-7,5,1,5,-5,8,-3,6,-1,4,-8,-3,6,-10,10,4,-4,-3,10,-9,-4,-7,-7,7,-10,5,-5,6,2,10,6,3,-5,-3,4,-10,-10,-7,1,-4,5,8,10,5,10,5,-9,3,5,-9,-9,-7,-5,7,8,-7,-5,-5,9,-6,-5,-4,-1,6,-3,5,3,3,6,-6,-5,7,9,4,4,-8,3,3,9,2,-6,5,10,-1,-2,-1,1,-7,-2,2,-1,6,2,-1,-1,-4,9,8,9,-8,-6,8,-6,10,5,7,4,-1,-5,7,5,-2,-3,6,8,5,-2,1,-9,10,-5,-2,-10,-5,-5,-10,-6,-7,-1,-2,-6,4,9,5,-8,-4,2,4,-6,7,-3,-2,-9,7,1,-10,-6,4,-2,5,-6,5,-4,-9,7,-2,5,7,-4,-6,6,3,-2,1,-7,-6,-5,10,9,10,7,4,9,-8,10,9,1,1,-10,-9,-9,2,7,3,-3,-2,6,-4,1,-7,5,-8,7,-4,-10,-6,10,-2,1,-3,-8,-5,-2,9,-1,4,-2,4,2,8,1,-10,3,-7,7,9,6,-2,-2,-4,5,1,-2,9,-5,7,-3,8,-1,2,-9,-5,-4,-5,-6,-9,1,-2,-7,9,10,-7,-5,2,-3,5,-3,7,5,-4,-3,6,3,6,-1,-1,1,5,-4,-3,9,-9,6,2,7,6,8,-1,2,-10,-4,-1,10,2,-2,1,3,-8,5,2,-5,-2,-2,4,2,-4,-7,-1,2,-1,8,-8,3,10,3,9,-10,-2,2,4,-2,-10,5,5,5,-2,9,4,3,9,-5,5,-7,-8,3,-5,-2,5,6,-3,-10,-4,2,-1,1,4,-10,1,-5,8,-3,-6,-10,10,-3,-7,-7,-1,8,-5,-6,2,7,-3,4,-4,-6,2,3,4,-7,10,9,-5,7,-5,-1,9,2,-4,-5,5,-1,9,-9,10,1,9,3,-8,-6,-3,2,6,-4,-2,9,2,2,-1,-4,6,3,7,1,-6,10,3,3,-8,8,-6,7,6,-9,10,-2,-1,6,-10,-5,4,-10,-9,-6,10,7,2,3,-3,7,-8,-4,1,-6,4,1,-9,5,-4,7,7,-9,7,-7,6,6,10,-2,-9,-5,-10,-3,9,-8,-10,-6,-8,8,-9,-10,8,9,-5,2,-9,-8,-5,-9,8,-9,4,-7,-2,-2,9,-8,-7,6,7,-7,-5,9,-4,8,8,4,7,-6,8,2,9,4,-6,-7,8,-1,-9,-5,-9,-6,-10,-10,-4,6,6,7,7,-1,-2,5,-4,-3,7,5,10,-4,4,9,-10,-9,-4,-2,-10,3,-3,1,5,8,3,9,-7,-4,-6,-8,-10,3,-3,-3,7,-4,4,-8,1,-4,-1,8,7,8,6,10,-3,8,-7,9,-8,-6,10,5,2,-8,4,3,-9,-5,-7,9,-9,3,9,-3,7,-3,-5,-2,8,10,-7,3,3,1,4,-7,-8,-10,4,-7,-3,10,7,-5,-4,-8,9,9,3,10,-9,-10,-9,7,4,-6,2,-4,-2,7,3,6,-9,4,4,-9,2,3,2,9,-2,4,3,-5,9,10,9,4,3,-10,-1,-4,-10,6,-7,-9,-2,-4,-3,9,-3,3,-8,-10,6,-10,10,-2,8,-2,5,-3,6,-1,8,-2,2,5,-4,-1,-4,7,-2,4,-9,7,8,10,-1,5,-2,2,-2,-1,1,-5,2,1,-5,8,-1,-9,-6,5,1,-7,-4,-8,-6,-1,3,-4,-1,1,-9,-1,1,-9,10,-6,-1,5,-4,2,-2,-6,2,-9,4,1,6,-4,-2,8,5,5,7,-3,-3,-8,1,-9,6,8,-8,5,-2,3,-2,-6,-2,-4,10,-9,-4,7,5,-10,6,2,8,-7,6,4,10,-6,-2,-3,-10,5,-1,1,10,6,-9,9,-8,8,8,-4,2,5,10,6,2,2,-6,9,4,4,-4,3,-1,7,-10,10,-9,-8,4,-7,-5,-8,-3,7,-2,3,5,-9,-4,6,5,10,4,5,9,-2,4,-7,9,-6,-6,9,4,6,4,4,1], dtype = "int16")#candidate|8691|(864,)|const|int16
call_8690 = relay.TupleGetItem(func_3603_call(relay.reshape(const_8691.astype('int16'), [12, 6, 12])), 1)
call_8692 = relay.TupleGetItem(func_3605_call(relay.reshape(const_8691.astype('int16'), [12, 6, 12])), 1)
uop_8695 = relay.sinh(var_8669.astype('float32')) # shape=(308,)
uop_8697 = relay.sigmoid(bop_8665.astype('float32')) # shape=(6, 1, 15)
bop_8701 = relay.divide(uop_8697.astype('float32'), relay.reshape(bop_8674.astype('float32'), relay.shape_of(uop_8697))) # shape=(6, 1, 15)
uop_8713 = relay.log10(uop_8695.astype('float32')) # shape=(308,)
output = relay.Tuple([call_8668,call_8690,const_8691,bop_8701,uop_8713,])
output2 = relay.Tuple([call_8670,call_8692,const_8691,bop_8701,uop_8713,])
func_8731 = relay.Function([var_8663,var_8664,var_8669,], output)
mod['func_8731'] = func_8731
mod = relay.transform.InferType()(mod)
var_8732 = relay.var("var_8732", dtype = "float32", shape = (6, 1, 1))#candidate|8732|(6, 1, 1)|var|float32
var_8733 = relay.var("var_8733", dtype = "float32", shape = (6, 1, 15))#candidate|8733|(6, 1, 15)|var|float32
var_8734 = relay.var("var_8734", dtype = "int16", shape = (308,))#candidate|8734|(308,)|var|int16
output = func_8731(var_8732,var_8733,var_8734,)
func_8735 = relay.Function([var_8732,var_8733,var_8734,], output)
mutated_mod['func_8735'] = func_8735
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8767 = relay.var("var_8767", dtype = "int64", shape = (7, 4, 7))#candidate|8767|(7, 4, 7)|var|int64
var_8768 = relay.var("var_8768", dtype = "int64", shape = (7, 4, 7))#candidate|8768|(7, 4, 7)|var|int64
bop_8769 = relay.logical_xor(var_8767.astype('int64'), relay.reshape(var_8768.astype('int64'), relay.shape_of(var_8767))) # shape=(7, 4, 7)
uop_8773 = relay.log2(bop_8769.astype('float64')) # shape=(7, 4, 7)
output = relay.Tuple([uop_8773,])
output2 = relay.Tuple([uop_8773,])
func_8776 = relay.Function([var_8767,var_8768,], output)
mod['func_8776'] = func_8776
mod = relay.transform.InferType()(mod)
mutated_mod['func_8776'] = func_8776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8776_call = mutated_mod.get_global_var('func_8776')
var_8778 = relay.var("var_8778", dtype = "int64", shape = (7, 4, 7))#candidate|8778|(7, 4, 7)|var|int64
var_8779 = relay.var("var_8779", dtype = "int64", shape = (7, 4, 7))#candidate|8779|(7, 4, 7)|var|int64
call_8777 = func_8776_call(var_8778,var_8779,)
output = call_8777
func_8780 = relay.Function([var_8778,var_8779,], output)
mutated_mod['func_8780'] = func_8780
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8788 = relay.const([[[-2.006845,4.720142,-6.122383,-8.778742,-6.702477,6.312820,-7.573950,0.308586,-7.560553],[3.264694,5.514268,1.059512,-7.007439,-2.527668,9.354410,-3.105390,5.425895,8.809518],[0.574628,-2.582680,-4.105416,6.129006,1.625479,-2.604454,1.511727,-7.513374,7.848841],[2.878756,4.577959,6.712193,3.925200,4.766491,5.317776,6.763526,-7.936318,-1.466268]],[[5.269103,1.791658,-3.113213,-8.310248,0.093069,-4.828765,-3.481216,-2.570899,7.324916],[-7.278571,3.580128,9.559318,3.547159,-7.753156,-4.993368,-8.398801,-8.145610,2.744302],[2.187844,9.688153,-4.613487,3.575458,6.766554,-9.052378,8.757837,-1.871258,-8.051081],[2.803853,-9.529267,1.845250,-2.810919,-6.882776,7.837104,8.923139,8.601402,6.301299]],[[-9.805094,8.307529,-7.849134,-5.891140,-0.347235,8.950455,1.456336,-4.165108,-6.703837],[-4.714564,-1.274569,1.165552,-1.902576,-6.823295,4.208677,7.088944,0.693506,-7.615357],[4.883793,6.632523,4.067159,-0.038980,-5.573779,-9.598703,0.236814,2.166345,3.121039],[3.754459,-2.416188,1.367961,-1.515219,6.159994,0.582283,3.377858,7.071211,6.318471]],[[8.399442,3.931466,-9.491483,-0.844254,-3.170320,7.578876,9.812621,-3.354982,8.128379],[7.986425,-5.500133,2.703504,-4.458584,-4.420765,6.636974,-3.540698,-8.745510,-8.244032],[0.758634,-0.980692,8.781081,2.317998,-2.537538,-2.232450,-9.121670,3.334625,-3.039821],[-0.022308,-1.478748,-1.462770,-8.145874,-7.564150,-5.363966,-0.891663,-6.960553,-5.700883]],[[-3.032743,-2.982767,5.005867,-7.939713,-3.583786,-1.934459,-2.563648,-3.342021,-5.675038],[3.980323,5.991555,6.989944,-9.374682,-9.621746,-1.543152,-0.457961,-1.933736,7.922098],[8.169571,1.686433,-5.044847,1.581038,4.433193,9.806105,-2.485655,-7.881953,-8.564557],[-1.315876,2.245092,6.486670,0.057083,6.953175,-0.244233,4.612367,-6.356249,-6.978222]],[[-7.019744,-7.656831,3.718528,1.008726,-0.909476,7.035599,6.308829,9.646880,-3.057014],[-4.478855,1.095322,-4.054467,0.397102,8.054594,-3.051035,-6.553827,4.860496,-2.679839],[-1.879296,7.918659,-9.162907,8.348953,-5.516262,-3.558278,-8.602235,-5.390661,-8.427349],[4.330150,-1.684969,-7.720983,-8.853227,9.956177,5.624231,-3.405388,-5.168021,-1.552267]],[[6.524514,-0.359146,-6.873823,-5.175612,-0.733452,-6.523577,5.688619,-3.036105,2.048280],[8.911625,2.454569,2.032701,-9.542808,-9.654474,6.696974,4.702236,-3.771996,-2.130293],[2.586468,2.606721,1.285889,-3.316878,-3.706478,-4.108013,1.156635,0.155478,6.320349],[2.704736,9.255212,-2.088248,-1.622094,8.907487,5.535239,-4.470437,-2.622924,-8.459165]]], dtype = "float64")#candidate|8788|(7, 4, 9)|const|float64
uop_8789 = relay.log(const_8788.astype('float64')) # shape=(7, 4, 9)
func_8472_call = mod.get_global_var('func_8472')
func_8475_call = mutated_mod.get_global_var('func_8475')
const_8795 = relay.const([[-6,-9,1,8,10,-5,3,3,-10,7,3,-8,-9,-4,6,4,10,-2,1,-8,-8,-5,1,-5,2,4,-1,2,9,-2,-3,-7,-10,-7,1,-1,8,-3,6,9,9,3,6,-9,5,-1,8,3,-7,8,-4,10,-6,1,1,2,-3,-10,-4,5,-10,10,-4,-5,-3,-10,3,7,3,3,-7,-5,-4,1,-4,1,-3,-4,-4,-8,4,-4,-8,-6,10,-6,-6,7,-6,2,-7,3,-2,4,6,4,10,6,-8,10,2,5,8,10,2,-1,-2,8,-1,-3,4,8,-3,3,-5,-9,10,-6,8,2,9,1,-8,-7,-1,10,6,-9,-10,-2,7,3,5,-8,7,-5,3,-8,-2,2,7,-9,9,4,2,6,7,-1,-1,5,10,6,7,4,1,3,9,-1,-1,10,2,7,7,2,-8,8,9,1,8,-5,3,-6,-1,-5,-3,10,-10,5,-6,5],[-5,1,-5,-2,-8,-1,-9,5,6,-4,2,-6,-2,10,-9,-1,-8,-10,3,-5,1,1,-2,1,6,-9,-1,3,-6,-9,-7,-1,3,7,7,6,-9,9,-3,1,6,-8,-5,-8,5,7,-10,-7,4,-8,8,-9,10,8,6,1,-9,9,-1,6,6,7,6,8,8,10,-1,10,-7,-3,8,-7,4,-3,-2,-10,-2,4,-1,-7,2,4,6,-5,6,10,-3,-3,4,1,-2,-4,-7,4,5,-8,9,-10,-10,10,4,-10,-6,3,6,5,6,4,-2,-3,10,-5,5,-3,-2,-9,-2,3,-1,-9,-10,-4,-6,2,-7,-8,-6,3,10,-4,-9,-1,3,1,10,-8,-4,9,-3,9,-5,6,-10,1,-6,-2,-10,-8,-7,-5,-6,-9,7,10,10,1,-8,7,7,8,4,10,5,7,6,-8,6,3,-9,5,-4,-7,5,-10,1,-8,10,-9,8,4]], dtype = "uint64")#candidate|8795|(2, 180)|const|uint64
call_8794 = func_8472_call(relay.reshape(const_8795.astype('uint64'), [12, 5, 6]), relay.reshape(const_8795.astype('uint64'), [12, 5, 6]), )
call_8796 = func_8472_call(relay.reshape(const_8795.astype('uint64'), [12, 5, 6]), relay.reshape(const_8795.astype('uint64'), [12, 5, 6]), )
output = relay.Tuple([uop_8789,call_8794,const_8795,])
output2 = relay.Tuple([uop_8789,call_8796,const_8795,])
func_8797 = relay.Function([], output)
mod['func_8797'] = func_8797
mod = relay.transform.InferType()(mod)
output = func_8797()
func_8798 = relay.Function([], output)
mutated_mod['func_8798'] = func_8798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8797_call = mod.get_global_var('func_8797')
func_8798_call = mutated_mod.get_global_var('func_8798')
call_8801 = relay.TupleGetItem(func_8797_call(), 0)
call_8802 = relay.TupleGetItem(func_8798_call(), 0)
uop_8804 = relay.atan(call_8801.astype('float32')) # shape=(7, 4, 9)
uop_8806 = relay.atan(call_8802.astype('float32')) # shape=(7, 4, 9)
var_8823 = relay.var("var_8823", dtype = "float32", shape = (7, 4, 9))#candidate|8823|(7, 4, 9)|var|float32
bop_8824 = relay.maximum(uop_8804.astype('float32'), relay.reshape(var_8823.astype('float32'), relay.shape_of(uop_8804))) # shape=(7, 4, 9)
bop_8827 = relay.maximum(uop_8806.astype('float32'), relay.reshape(var_8823.astype('float32'), relay.shape_of(uop_8806))) # shape=(7, 4, 9)
output = bop_8824
output2 = bop_8827
func_8849 = relay.Function([var_8823,], output)
mod['func_8849'] = func_8849
mod = relay.transform.InferType()(mod)
var_8850 = relay.var("var_8850", dtype = "float32", shape = (7, 4, 9))#candidate|8850|(7, 4, 9)|var|float32
output = func_8849(var_8850)
func_8851 = relay.Function([var_8850], output)
mutated_mod['func_8851'] = func_8851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8797_call = mod.get_global_var('func_8797')
func_8798_call = mutated_mod.get_global_var('func_8798')
call_8862 = relay.TupleGetItem(func_8797_call(), 2)
call_8863 = relay.TupleGetItem(func_8798_call(), 2)
var_8866 = relay.var("var_8866", dtype = "uint64", shape = (2, 180))#candidate|8866|(2, 180)|var|uint64
bop_8867 = relay.bitwise_xor(call_8862.astype('int16'), relay.reshape(var_8866.astype('int16'), relay.shape_of(call_8862))) # shape=(2, 180)
bop_8870 = relay.bitwise_xor(call_8863.astype('int16'), relay.reshape(var_8866.astype('int16'), relay.shape_of(call_8863))) # shape=(2, 180)
func_1399_call = mod.get_global_var('func_1399')
func_1401_call = mutated_mod.get_global_var('func_1401')
var_8873 = relay.var("var_8873", dtype = "float64", shape = (1620,))#candidate|8873|(1620,)|var|float64
call_8872 = relay.TupleGetItem(func_1399_call(relay.reshape(var_8873.astype('float64'), [9, 15, 12])), 0)
call_8874 = relay.TupleGetItem(func_1401_call(relay.reshape(var_8873.astype('float64'), [9, 15, 12])), 0)
var_8875 = relay.var("var_8875", dtype = "uint64", shape = (2, 180))#candidate|8875|(2, 180)|var|uint64
bop_8876 = relay.multiply(var_8866.astype('int8'), relay.reshape(var_8875.astype('int8'), relay.shape_of(var_8866))) # shape=(2, 180)
bop_8887 = relay.power(var_8873.astype('float64'), relay.reshape(call_8872.astype('float64'), relay.shape_of(var_8873))) # shape=(1620,)
bop_8890 = relay.power(var_8873.astype('float64'), relay.reshape(call_8874.astype('float64'), relay.shape_of(var_8873))) # shape=(1620,)
uop_8902 = relay.sin(bop_8867.astype('float64')) # shape=(2, 180)
uop_8904 = relay.sin(bop_8870.astype('float64')) # shape=(2, 180)
func_3436_call = mod.get_global_var('func_3436')
func_3439_call = mutated_mod.get_global_var('func_3439')
const_8910 = relay.const([[3.797149,0.480084],[3.898389,2.912831],[-9.232062,9.613271],[5.951367,0.116080],[-6.084621,-0.798101],[-8.002539,-7.893618],[-9.654735,-2.537463],[-2.317565,-0.133563],[7.465077,3.001343],[-9.623706,0.788770],[7.400379,-2.896074],[7.435338,7.223697],[-2.066221,3.407323],[-0.760294,2.042196],[-1.792802,8.529266],[-7.800527,-0.429929],[-1.065806,-9.635898],[-7.039168,5.005737],[-3.111311,-3.163778],[0.675451,-9.721425],[5.023941,-6.666643],[2.150750,0.887379],[1.965791,7.923914],[-1.417464,1.337066]], dtype = "float32")#candidate|8910|(24, 2)|const|float32
call_8909 = relay.TupleGetItem(func_3436_call(relay.reshape(const_8910.astype('float32'), [48,])), 2)
call_8911 = relay.TupleGetItem(func_3439_call(relay.reshape(const_8910.astype('float32'), [48,])), 2)
func_3773_call = mod.get_global_var('func_3773')
func_3777_call = mutated_mod.get_global_var('func_3777')
const_8913 = relay.const(1, dtype = "int16")#candidate|8913|()|const|int16
var_8914 = relay.var("var_8914", dtype = "float64", shape = (140, 2))#candidate|8914|(140, 2)|var|float64
call_8912 = relay.TupleGetItem(func_3773_call(relay.reshape(const_8913.astype('int16'), []), relay.reshape(bop_8887.astype('int16'), [15, 9, 12]), relay.reshape(var_8914.astype('float64'), [280,]), ), 3)
call_8915 = relay.TupleGetItem(func_3777_call(relay.reshape(const_8913.astype('int16'), []), relay.reshape(bop_8887.astype('int16'), [15, 9, 12]), relay.reshape(var_8914.astype('float64'), [280,]), ), 3)
output = relay.Tuple([bop_8876,bop_8887,uop_8902,call_8909,const_8910,call_8912,const_8913,var_8914,])
output2 = relay.Tuple([bop_8876,bop_8890,uop_8904,call_8911,const_8910,call_8915,const_8913,var_8914,])
func_8918 = relay.Function([var_8866,var_8873,var_8875,var_8914,], output)
mod['func_8918'] = func_8918
mod = relay.transform.InferType()(mod)
mutated_mod['func_8918'] = func_8918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8918_call = mutated_mod.get_global_var('func_8918')
var_8920 = relay.var("var_8920", dtype = "uint64", shape = (2, 180))#candidate|8920|(2, 180)|var|uint64
var_8921 = relay.var("var_8921", dtype = "float64", shape = (1620,))#candidate|8921|(1620,)|var|float64
var_8922 = relay.var("var_8922", dtype = "uint64", shape = (2, 180))#candidate|8922|(2, 180)|var|uint64
var_8923 = relay.var("var_8923", dtype = "float64", shape = (140, 2))#candidate|8923|(140, 2)|var|float64
call_8919 = func_8918_call(var_8920,var_8921,var_8922,var_8923,)
output = call_8919
func_8924 = relay.Function([var_8920,var_8921,var_8922,var_8923,], output)
mutated_mod['func_8924'] = func_8924
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8976 = relay.var("var_8976", dtype = "float32", shape = ())#candidate|8976|()|var|float32
var_8977 = relay.var("var_8977", dtype = "float32", shape = (4, 6, 12))#candidate|8977|(4, 6, 12)|var|float32
bop_8978 = relay.power(var_8976.astype('float32'), var_8977.astype('float32')) # shape=(4, 6, 12)
func_3976_call = mod.get_global_var('func_3976')
func_3979_call = mutated_mod.get_global_var('func_3979')
var_8982 = relay.var("var_8982", dtype = "float64", shape = (195,))#candidate|8982|(195,)|var|float64
var_8983 = relay.var("var_8983", dtype = "float64", shape = (390,))#candidate|8983|(390,)|var|float64
call_8981 = func_3976_call(relay.reshape(var_8982.astype('float64'), [15, 13, 1]), relay.reshape(var_8983.astype('float64'), [15, 13, 2]), )
call_8984 = func_3976_call(relay.reshape(var_8982.astype('float64'), [15, 13, 1]), relay.reshape(var_8983.astype('float64'), [15, 13, 2]), )
output = relay.Tuple([bop_8978,call_8981,var_8982,var_8983,])
output2 = relay.Tuple([bop_8978,call_8984,var_8982,var_8983,])
func_8986 = relay.Function([var_8976,var_8977,var_8982,var_8983,], output)
mod['func_8986'] = func_8986
mod = relay.transform.InferType()(mod)
var_8987 = relay.var("var_8987", dtype = "float32", shape = ())#candidate|8987|()|var|float32
var_8988 = relay.var("var_8988", dtype = "float32", shape = (4, 6, 12))#candidate|8988|(4, 6, 12)|var|float32
var_8989 = relay.var("var_8989", dtype = "float64", shape = (195,))#candidate|8989|(195,)|var|float64
var_8990 = relay.var("var_8990", dtype = "float64", shape = (390,))#candidate|8990|(390,)|var|float64
output = func_8986(var_8987,var_8988,var_8989,var_8990,)
func_8991 = relay.Function([var_8987,var_8988,var_8989,var_8990,], output)
mutated_mod['func_8991'] = func_8991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8797_call = mod.get_global_var('func_8797')
func_8798_call = mutated_mod.get_global_var('func_8798')
call_9029 = relay.TupleGetItem(func_8797_call(), 1)
call_9030 = relay.TupleGetItem(func_8798_call(), 1)
func_3976_call = mod.get_global_var('func_3976')
func_3979_call = mutated_mod.get_global_var('func_3979')
var_9034 = relay.var("var_9034", dtype = "float64", shape = (195,))#candidate|9034|(195,)|var|float64
const_9035 = relay.const([-3.907203,-6.221510,-6.877578,4.412897,-2.854225,0.964408,9.077847,5.954230,0.008488,-9.959433,-6.389335,-9.616869,1.747100,-3.518806,-5.160219,4.264834,-5.252665,6.640805,7.029672,8.054854,8.339324,-5.219395,0.875156,-1.901241,8.561553,-2.149663,0.213362,-0.364190,-3.734235,1.520656,-0.989394,5.809053,9.551084,8.938618,-8.946145,-1.082801,-2.414933,-6.599109,-7.377920,-9.251769,3.621653,-5.690813,2.454888,3.304124,8.428831,-9.117384,-8.788842,-8.134062,-2.750161,-0.422405,-0.710198,2.954837,9.275407,-8.889998,-1.921023,0.293311,-2.364452,-6.675694,-9.735757,4.230896,7.467600,5.778423,-7.365521,1.112710,0.417896,2.269061,-4.432159,-6.418248,-8.756345,6.810059,5.044619,-8.539004,-2.155589,-2.238251,3.530474,0.519245,2.380088,-5.383875,-0.520105,5.474145,4.874880,-1.561539,1.125192,0.199308,6.812937,-2.736046,0.746403,-8.894546,0.865295,-4.248362,9.543315,3.686614,-8.380888,-0.399551,6.925596,-5.378823,-3.529684,-6.197290,-2.144330,6.745636,5.283396,-7.514681,-7.804032,-9.808865,9.295935,-9.920242,-1.065460,-3.184317,6.124403,-2.276204,-5.943289,2.468667,6.023205,-0.087232,0.539320,1.722798,9.563040,5.187721,8.342226,9.100168,-9.541138,5.801756,-2.368132,2.455265,-3.103409,-0.725134,4.498129,6.209211,-6.579703,-1.131421,2.177904,-2.709322,0.094078,-8.976038,9.292552,-6.780589,-5.183707,3.213890,4.482675,-8.569797,-5.238828,-1.955726,1.144747,-4.577857,9.346434,9.254757,-9.416328,5.326433,-9.162292,-5.953392,7.509116,7.127637,-7.926869,-3.895974,-1.506218,8.899755,-2.025729,-7.653889,4.406914,1.752269,9.546527,4.956274,-1.013658,9.218233,3.151076,-3.887844,-4.595607,-2.767437,-0.278208,-9.768338,6.941742,7.752059,4.866597,7.838569,-2.854992,6.732578,-8.515194,-4.292812,7.494528,7.764828,0.898901,-0.607719,2.342797,7.600807,8.831505,-6.122843,8.271048,-2.611706,0.258040,-8.300261,-1.102787,6.833966,-7.201833,9.199117,-9.692194,-3.773942,6.909242,6.021969,4.727489,-5.425774,9.493690,-6.284243,8.244792,7.726547,-9.097583,-2.482837,-8.535196,2.052148,0.811982,-5.915861,9.222341,-0.688144,9.433660,-9.316347,-6.426017,-1.957158,8.700178,-5.053701,6.122886,-5.160074,0.984151,9.424868,-6.872027,6.089095,9.924468,3.881620,-7.924523,7.807696,-2.078881,9.104494,8.962702,-7.219894,-5.506197,6.437388,-3.677957,9.169019,-1.090109,7.205472,-8.326927,0.982491,6.238436,-5.424387,-2.096145,4.464645,4.855735,9.284220,-6.085215,-6.890097,-2.701136,9.826868,2.145716,5.452090,7.832117,-1.965220,0.356259,6.520451,1.256630,-2.218083,-1.276847,-7.362372,-5.223132,-0.051300,0.862133,3.543436,-5.780291,-9.958911,-4.739705,2.551706,8.914927,1.557768,6.726116,4.491767,-0.705253,-9.386476,8.861247,2.369890,-3.194005,8.418513,-1.332592,-2.310128,7.010712,-6.350436,-4.774871,6.183938,4.021594,-0.096967,8.763423,5.391778,7.572251,-6.635066,-3.085216,9.786702,7.899414,-0.010874,8.180668,-2.884802,-2.008445,-2.371173,6.070864,-4.087588,-2.477041,1.192297,-4.137877,-2.896837,2.569746,-2.196512,-0.469935,-0.175566,-0.323153,2.107783,4.937583,-3.098142,-0.756331,-4.583811,-4.590438,-9.250135,0.702889,0.741665,0.617102,-3.567343,-6.270706,-5.279233,-4.285602,1.354540,-1.929039,-6.813900,-8.808319,8.826351,-9.205463,-6.841885,-1.411283,9.346316,0.448504,6.888444,-8.447539,2.528734,-1.768240,3.447397,-4.490265,-8.715340,6.002152,7.326212,2.238830,-1.859393,-3.907898,8.900365,-5.913840,7.197781,2.516026,-1.475327,-7.308799,-9.707035,5.661809,0.746160,-2.067349,-9.818527,-8.145690,-3.868749,-5.618041,5.227729,4.294209,6.808687,-2.136199,2.835000,8.464349,0.914329,2.781384,6.107260,-9.592355,2.282744,-2.430881,-2.576793,6.355687,-1.474741,-8.771183,-0.587744,-1.360092,6.425484,-5.415072,-3.081809,-5.789331,3.338600,-8.633945,-9.251692,7.603301,4.302474,-2.617361,1.210530,-6.862493,6.179543], dtype = "float64")#candidate|9035|(390,)|const|float64
call_9033 = func_3976_call(relay.reshape(var_9034.astype('float64'), [15, 13, 1]), relay.reshape(const_9035.astype('float64'), [15, 13, 2]), )
call_9036 = func_3976_call(relay.reshape(var_9034.astype('float64'), [15, 13, 1]), relay.reshape(const_9035.astype('float64'), [15, 13, 2]), )
func_8432_call = mod.get_global_var('func_8432')
func_8435_call = mutated_mod.get_global_var('func_8435')
var_9040 = relay.var("var_9040", dtype = "int64", shape = (45,))#candidate|9040|(45,)|var|int64
call_9039 = relay.TupleGetItem(func_8432_call(relay.reshape(var_9040.astype('int64'), [3, 3, 5]), relay.reshape(var_9040.astype('int64'), [3, 3, 5]), ), 0)
call_9041 = relay.TupleGetItem(func_8435_call(relay.reshape(var_9040.astype('int64'), [3, 3, 5]), relay.reshape(var_9040.astype('int64'), [3, 3, 5]), ), 0)
func_335_call = mod.get_global_var('func_335')
func_339_call = mutated_mod.get_global_var('func_339')
var_9050 = relay.var("var_9050", dtype = "float64", shape = (720,))#candidate|9050|(720,)|var|float64
const_9051 = relay.const(False, dtype = "bool")#candidate|9051|()|const|bool
call_9049 = relay.TupleGetItem(func_335_call(relay.reshape(var_9050.astype('float64'), [15, 6, 8]), relay.reshape(var_9050.astype('float64'), [15, 6, 8]), relay.reshape(const_9051.astype('bool'), []), ), 0)
call_9052 = relay.TupleGetItem(func_339_call(relay.reshape(var_9050.astype('float64'), [15, 6, 8]), relay.reshape(var_9050.astype('float64'), [15, 6, 8]), relay.reshape(const_9051.astype('bool'), []), ), 0)
var_9069 = relay.var("var_9069", dtype = "float64", shape = (15, 13, 2))#candidate|9069|(15, 13, 2)|var|float64
bop_9070 = relay.multiply(call_9033.astype('uint16'), relay.reshape(var_9069.astype('uint16'), relay.shape_of(call_9033))) # shape=(15, 13, 2)
bop_9073 = relay.multiply(call_9036.astype('uint16'), relay.reshape(var_9069.astype('uint16'), relay.shape_of(call_9036))) # shape=(15, 13, 2)
func_919_call = mod.get_global_var('func_919')
func_922_call = mutated_mod.get_global_var('func_922')
var_9082 = relay.var("var_9082", dtype = "float64", shape = (2016,))#candidate|9082|(2016,)|var|float64
call_9081 = func_919_call(relay.reshape(var_9082.astype('float64'), [14, 9, 16]))
call_9083 = func_919_call(relay.reshape(var_9082.astype('float64'), [14, 9, 16]))
bop_9096 = relay.bitwise_or(call_9039.astype('int8'), const_9051.astype('int8')) # shape=(3, 3, 5)
bop_9099 = relay.bitwise_or(call_9041.astype('int8'), const_9051.astype('int8')) # shape=(3, 3, 5)
output = relay.Tuple([call_9029,var_9034,const_9035,var_9040,call_9049,var_9050,bop_9070,call_9081,var_9082,bop_9096,])
output2 = relay.Tuple([call_9030,var_9034,const_9035,var_9040,call_9052,var_9050,bop_9073,call_9083,var_9082,bop_9099,])
func_9106 = relay.Function([var_9034,var_9040,var_9050,var_9069,var_9082,], output)
mod['func_9106'] = func_9106
mod = relay.transform.InferType()(mod)
mutated_mod['func_9106'] = func_9106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9106_call = mutated_mod.get_global_var('func_9106')
var_9108 = relay.var("var_9108", dtype = "float64", shape = (195,))#candidate|9108|(195,)|var|float64
var_9109 = relay.var("var_9109", dtype = "int64", shape = (45,))#candidate|9109|(45,)|var|int64
var_9110 = relay.var("var_9110", dtype = "float64", shape = (720,))#candidate|9110|(720,)|var|float64
var_9111 = relay.var("var_9111", dtype = "float64", shape = (15, 13, 2))#candidate|9111|(15, 13, 2)|var|float64
var_9112 = relay.var("var_9112", dtype = "float64", shape = (2016,))#candidate|9112|(2016,)|var|float64
call_9107 = func_9106_call(var_9108,var_9109,var_9110,var_9111,var_9112,)
output = call_9107
func_9113 = relay.Function([var_9108,var_9109,var_9110,var_9111,var_9112,], output)
mutated_mod['func_9113'] = func_9113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9158 = relay.var("var_9158", dtype = "int16", shape = (4, 6, 12))#candidate|9158|(4, 6, 12)|var|int16
var_9159 = relay.var("var_9159", dtype = "int16", shape = (4, 6, 12))#candidate|9159|(4, 6, 12)|var|int16
bop_9160 = relay.less_equal(var_9158.astype('bool'), relay.reshape(var_9159.astype('bool'), relay.shape_of(var_9158))) # shape=(4, 6, 12)
bop_9167 = relay.add(var_9158.astype('int8'), relay.reshape(bop_9160.astype('int8'), relay.shape_of(var_9158))) # shape=(4, 6, 12)
func_3603_call = mod.get_global_var('func_3603')
func_3605_call = mutated_mod.get_global_var('func_3605')
var_9175 = relay.var("var_9175", dtype = "int16", shape = (2, 432))#candidate|9175|(2, 432)|var|int16
call_9174 = relay.TupleGetItem(func_3603_call(relay.reshape(var_9175.astype('int16'), [12, 6, 12])), 0)
call_9176 = relay.TupleGetItem(func_3605_call(relay.reshape(var_9175.astype('int16'), [12, 6, 12])), 0)
uop_9177 = relay.rsqrt(call_9174.astype('float32')) # shape=(12, 6, 12)
uop_9179 = relay.rsqrt(call_9176.astype('float32')) # shape=(12, 6, 12)
bop_9185 = relay.not_equal(uop_9177.astype('bool'), relay.reshape(var_9175.astype('bool'), relay.shape_of(uop_9177))) # shape=(12, 6, 12)
bop_9188 = relay.not_equal(uop_9179.astype('bool'), relay.reshape(var_9175.astype('bool'), relay.shape_of(uop_9179))) # shape=(12, 6, 12)
output = relay.Tuple([bop_9167,bop_9185,])
output2 = relay.Tuple([bop_9167,bop_9188,])
func_9192 = relay.Function([var_9158,var_9159,var_9175,], output)
mod['func_9192'] = func_9192
mod = relay.transform.InferType()(mod)
mutated_mod['func_9192'] = func_9192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9192_call = mutated_mod.get_global_var('func_9192')
var_9194 = relay.var("var_9194", dtype = "int16", shape = (4, 6, 12))#candidate|9194|(4, 6, 12)|var|int16
var_9195 = relay.var("var_9195", dtype = "int16", shape = (4, 6, 12))#candidate|9195|(4, 6, 12)|var|int16
var_9196 = relay.var("var_9196", dtype = "int16", shape = (2, 432))#candidate|9196|(2, 432)|var|int16
call_9193 = func_9192_call(var_9194,var_9195,var_9196,)
output = call_9193
func_9197 = relay.Function([var_9194,var_9195,var_9196,], output)
mutated_mod['func_9197'] = func_9197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8797_call = mod.get_global_var('func_8797')
func_8798_call = mutated_mod.get_global_var('func_8798')
call_9231 = relay.TupleGetItem(func_8797_call(), 2)
call_9232 = relay.TupleGetItem(func_8798_call(), 2)
func_3935_call = mod.get_global_var('func_3935')
func_3938_call = mutated_mod.get_global_var('func_3938')
const_9234 = relay.const([[-6,1,-8,-6],[-3,-10,6,2],[-5,-10,1,9],[1,6,1,-3],[6,-8,-6,-1],[3,-8,7,10],[10,-8,8,-3],[-9,8,-9,-6],[5,-9,-10,-2],[2,-3,7,-3],[-3,-9,8,-9],[1,6,10,-4],[8,8,6,3],[9,8,-1,-6],[-2,7,-7,9],[-8,9,-7,-5],[-8,4,-4,-1],[3,8,10,8],[8,-4,-4,4],[-7,9,6,10],[-6,8,-1,2],[8,-8,5,2],[3,-8,-6,6],[5,-9,9,5],[-6,-5,3,1],[-9,-4,4,8],[10,4,-10,1],[-6,-6,-4,2],[5,-4,-7,4],[3,10,1,-7]], dtype = "int8")#candidate|9234|(30, 4)|const|int8
call_9233 = func_3935_call(relay.reshape(const_9234.astype('int8'), [10, 3, 4]), relay.reshape(const_9234.astype('int8'), [10, 3, 4]), )
call_9235 = func_3935_call(relay.reshape(const_9234.astype('int8'), [10, 3, 4]), relay.reshape(const_9234.astype('int8'), [10, 3, 4]), )
output = relay.Tuple([call_9231,call_9233,const_9234,])
output2 = relay.Tuple([call_9232,call_9235,const_9234,])
func_9238 = relay.Function([], output)
mod['func_9238'] = func_9238
mod = relay.transform.InferType()(mod)
mutated_mod['func_9238'] = func_9238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9238_call = mutated_mod.get_global_var('func_9238')
call_9239 = func_9238_call()
output = call_9239
func_9240 = relay.Function([], output)
mutated_mod['func_9240'] = func_9240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8797_call = mod.get_global_var('func_8797')
func_8798_call = mutated_mod.get_global_var('func_8798')
call_9241 = relay.TupleGetItem(func_8797_call(), 0)
call_9242 = relay.TupleGetItem(func_8798_call(), 0)
func_3603_call = mod.get_global_var('func_3603')
func_3605_call = mutated_mod.get_global_var('func_3605')
var_9244 = relay.var("var_9244", dtype = "int16", shape = (864,))#candidate|9244|(864,)|var|int16
call_9243 = relay.TupleGetItem(func_3603_call(relay.reshape(var_9244.astype('int16'), [12, 6, 12])), 0)
call_9245 = relay.TupleGetItem(func_3605_call(relay.reshape(var_9244.astype('int16'), [12, 6, 12])), 0)
var_9246 = relay.var("var_9246", dtype = "int16", shape = (864,))#candidate|9246|(864,)|var|int16
bop_9247 = relay.greater_equal(var_9244.astype('bool'), relay.reshape(var_9246.astype('bool'), relay.shape_of(var_9244))) # shape=(864,)
func_8058_call = mod.get_global_var('func_8058')
func_8061_call = mutated_mod.get_global_var('func_8061')
var_9257 = relay.var("var_9257", dtype = "float32", shape = (54, 1))#candidate|9257|(54, 1)|var|float32
const_9258 = relay.const([[-4.782126,0.315389,-3.241057,8.592660,5.311960,-8.221214,-0.329528,5.196022,7.496696,1.646657,2.481883,8.488112,-0.847129,-2.515401,7.602217,6.207440,0.641367,-6.735282,5.937941,-1.656030,-2.600989,3.343170,6.137985,7.229587,3.068335,-7.364986,-5.272780,0.871303,-2.093400,8.905074,9.839529,-4.560510,8.938994,-7.288806,-2.377491,3.427599,8.756954,2.292672,0.963803,4.043672,7.356985,-2.331695,-8.751064,9.750224,5.322031,-6.210981,6.081578,9.456857]], dtype = "float32")#candidate|9258|(1, 48)|const|float32
call_9256 = relay.TupleGetItem(func_8058_call(relay.reshape(var_9257.astype('float32'), [9, 1, 6]), relay.reshape(const_9258.astype('float32'), [48,]), ), 4)
call_9259 = relay.TupleGetItem(func_8061_call(relay.reshape(var_9257.astype('float32'), [9, 1, 6]), relay.reshape(const_9258.astype('float32'), [48,]), ), 4)
output = relay.Tuple([call_9241,call_9243,bop_9247,call_9256,var_9257,const_9258,])
output2 = relay.Tuple([call_9242,call_9245,bop_9247,call_9259,var_9257,const_9258,])
func_9261 = relay.Function([var_9244,var_9246,var_9257,], output)
mod['func_9261'] = func_9261
mod = relay.transform.InferType()(mod)
mutated_mod['func_9261'] = func_9261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9261_call = mutated_mod.get_global_var('func_9261')
var_9263 = relay.var("var_9263", dtype = "int16", shape = (864,))#candidate|9263|(864,)|var|int16
var_9264 = relay.var("var_9264", dtype = "int16", shape = (864,))#candidate|9264|(864,)|var|int16
var_9265 = relay.var("var_9265", dtype = "float32", shape = (54, 1))#candidate|9265|(54, 1)|var|float32
call_9262 = func_9261_call(var_9263,var_9264,var_9265,)
output = call_9262
func_9266 = relay.Function([var_9263,var_9264,var_9265,], output)
mutated_mod['func_9266'] = func_9266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9238_call = mod.get_global_var('func_9238')
func_9240_call = mutated_mod.get_global_var('func_9240')
call_9268 = relay.TupleGetItem(func_9238_call(), 0)
call_9269 = relay.TupleGetItem(func_9240_call(), 0)
func_1024_call = mod.get_global_var('func_1024')
func_1026_call = mutated_mod.get_global_var('func_1026')
const_9273 = relay.const([[-7.158519,6.581646,8.853169,-7.673568,6.972648,5.460557,-3.980603,-5.010489,2.867799,6.904624,5.315988,6.399762,-0.705551,0.726893,5.626324,9.707444,-5.938779,-0.524103,2.432308,-4.108134,4.774279,-9.306240,-1.792931,-9.953503,9.716139,-2.370662,3.977886,-2.377434,3.371341,9.678777,5.545254,-9.068795,1.005674,-3.136794,9.478819,-7.556355,-5.496229,-8.238503,6.595024,-4.122081],[-9.254545,8.176568,7.522185,7.051410,2.268420,2.241037,-3.121789,-9.102109,2.909567,-5.800580,-6.954596,9.727163,8.507049,5.938743,5.777679,1.834271,-4.414127,5.229785,-3.363014,-7.979619,0.848004,7.008165,4.486958,-4.187135,-8.835143,9.499172,3.468546,6.295892,2.692888,6.331880,-9.100380,-8.002800,4.687794,-1.559211,8.955288,-6.493238,6.825408,-2.299772,5.748983,1.370294],[2.717595,-1.439721,4.523785,5.302733,-4.224768,9.563531,-8.977291,-3.345216,-8.490183,8.619112,8.552706,-2.016346,4.071044,-1.592424,2.533067,-5.616703,-2.913832,6.035187,-8.560153,-3.965437,1.805536,-2.137142,-6.861674,-1.022581,6.502944,-0.402317,7.798869,5.487460,9.617382,8.506973,2.412685,7.687650,4.854752,-1.909188,2.676375,-4.513930,-0.854767,-7.054632,0.252137,4.961717],[3.912963,-6.057316,8.251034,2.916640,0.953106,1.417889,6.085092,-2.643977,-8.124773,-6.429434,-9.336382,-5.892921,9.092305,9.728078,9.842526,-4.932893,-2.793078,0.105957,-2.372405,-1.560519,-1.215870,2.557701,-3.002539,-4.953529,-6.049647,-1.716659,4.009244,5.790824,-1.000821,-9.003193,-5.353576,-5.536157,2.745932,-4.046976,-1.362407,2.331044,-2.205735,-5.637001,-0.770604,1.562884],[-2.296705,7.465823,5.984889,-5.938017,0.476173,3.588684,9.202632,-2.895396,-6.956281,1.284381,2.532684,8.815391,3.257491,-5.462496,-6.404067,-3.512267,-6.384127,-6.181559,-8.219564,7.865530,7.065361,6.137860,-7.413623,9.658092,-1.683695,3.133550,0.910982,-0.957624,3.030912,1.150183,-1.828866,-9.086002,3.686756,-3.532104,8.199316,-9.803513,7.504996,-9.129305,4.456243,-0.119648]], dtype = "float32")#candidate|9273|(5, 40)|const|float32
call_9272 = relay.TupleGetItem(func_1024_call(relay.reshape(const_9273.astype('float32'), [4, 5, 10])), 2)
call_9274 = relay.TupleGetItem(func_1026_call(relay.reshape(const_9273.astype('float32'), [4, 5, 10])), 2)
func_8776_call = mod.get_global_var('func_8776')
func_8780_call = mutated_mod.get_global_var('func_8780')
const_9293 = relay.const([-6,3,2,3,-8,-8,-3,-4,7,-10,-7,-3,6,1,7,-7,8,6,-10,3,-9,4,-4,-3,-10,9,3,-10,-5,10,-9,-4,7,-9,2,4,7,-3,6,-3,8,-6,5,7,7,2,6,-4,-8,1,-9,3,-3,-6,-2,-7,-10,-9,-9,4,8,3,-2,9,2,-1,-5,6,9,-6,10,1,-8,-4,1,-4,-4,4,-6,5,3,10,8,-7,-7,-2,-8,-6,5,3,7,-6,-6,6,-3,1,-7,-5,8,-6,5,-9,-10,1,-4,3,4,2,-8,-2,-1,7,6,5,-4,-9,8,3,-1,-5,-9,-6,-8,4,9,6,-1,-8,-7,-2,-5,-1,7,10,10,-4,-4,3,3,7,-3,3,-10,-2,-5,9,3,2,-7,1,8,6,8,-5,5,2,-6,2,8,-2,-8,3,-4,3,-7,-7,-10,10,-2,-8,6,-7,-6,8,-2,-7,3,2,-6,9,9,-10,-10,-6,5,9,3,4,4,-3,2,7,-3,5,5,-3], dtype = "int64")#candidate|9293|(196,)|const|int64
call_9292 = relay.TupleGetItem(func_8776_call(relay.reshape(const_9293.astype('int64'), [7, 4, 7]), relay.reshape(const_9293.astype('int64'), [7, 4, 7]), ), 0)
call_9294 = relay.TupleGetItem(func_8780_call(relay.reshape(const_9293.astype('int64'), [7, 4, 7]), relay.reshape(const_9293.astype('int64'), [7, 4, 7]), ), 0)
output = relay.Tuple([call_9268,call_9272,const_9273,call_9292,const_9293,])
output2 = relay.Tuple([call_9269,call_9274,const_9273,call_9294,const_9293,])
func_9307 = relay.Function([], output)
mod['func_9307'] = func_9307
mod = relay.transform.InferType()(mod)
output = func_9307()
func_9308 = relay.Function([], output)
mutated_mod['func_9308'] = func_9308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8797_call = mod.get_global_var('func_8797')
func_8798_call = mutated_mod.get_global_var('func_8798')
call_9314 = relay.TupleGetItem(func_8797_call(), 1)
call_9315 = relay.TupleGetItem(func_8798_call(), 1)
var_9331 = relay.var("var_9331", dtype = "uint64", shape = (12, 5, 6))#candidate|9331|(12, 5, 6)|var|uint64
bop_9332 = relay.minimum(call_9314.astype('uint16'), relay.reshape(var_9331.astype('uint16'), relay.shape_of(call_9314))) # shape=(12, 5, 6)
bop_9335 = relay.minimum(call_9315.astype('uint16'), relay.reshape(var_9331.astype('uint16'), relay.shape_of(call_9315))) # shape=(12, 5, 6)
output = bop_9332
output2 = bop_9335
F = relay.Function([var_9331,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9331,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

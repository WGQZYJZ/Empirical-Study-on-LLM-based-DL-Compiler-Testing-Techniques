==========mod==========
#[version = "0.0.5"]
def @func_6509() -> Tensor[(12, 14, 13), bool] {
  %0 = @func_6125() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %0.0
}

def @func_6210() -> (Tensor[(60), float64],) {
  %1 = @func_4724() /* ty=(Tensor[(60), float64],) */;
  %2 = %1.0;
  (%2,)
}

def @func_13245(%var_13222: Tensor[(588, 126), float32]) -> (Tensor[(588, 126), bool], Tensor[(8, 6, 12), float64]) {
  %3 = @func_5939() /* ty=Tensor[(588, 126), float32] */;
  %4 = cast(%var_13222, dtype="bool") /* ty=Tensor[(588, 126), bool] */;
  %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(2), int32] */;
  %6 = cast(%3, dtype="bool") /* ty=Tensor[(588, 126), bool] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %8 = @func_12734() /* ty=(Tensor[(8, 6, 12), float64],) */;
  %9 = logical_or(%6, %7) /* ty=Tensor[(588, 126), bool] */;
  %10 = %8.0;
  (%9, %10)
}

def @func_5180() -> (Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) {
  %11 = @func_4724() /* ty=(Tensor[(60), float64],) */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 1320), float32] */, dtype="float32") /* ty=Tensor[(2, 1320), float32] */;
  %13 = reshape(%12, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float32] */;
  %14 = @func_663(%13) /* ty=(Tensor[(15, 11, 16), float32], Tensor[(7, 2, 9), int16], Tensor[(126), float32]) */;
  %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %16 = reshape(%15, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %17 = @func_3884(%16) /* ty=(Tensor[(12, 14, 13), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) */;
  %18 = %17.0;
  %19 = cast(%18, dtype="float64") /* ty=Tensor[(12, 14, 13), float64] */;
  %20 = log10(%19) /* ty=Tensor[(12, 14, 13), float64] */;
  %21 = cast(%18, dtype="bool") /* ty=Tensor[(12, 14, 13), bool] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(3), int32] */;
  %23 = cast(%20, dtype="bool") /* ty=Tensor[(12, 14, 13), bool] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %25 = %11.0;
  %26 = %14.0;
  %27 = less_equal(%23, %24) /* ty=Tensor[(12, 14, 13), bool] */;
  (%25, %26, meta[relay.Constant][0] /* ty=Tensor[(2, 1320), float32] */, meta[relay.Constant][1] /* ty=Tensor[(72), float64] */, %27)
}

def @func_7735() -> (Tensor[(72), float64],) {
  %28 = @func_7516() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(126), float32], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) */;
  %29 = %28.5;
  (%29,)
}

def @func_5695() -> Tensor[(72), float64] {
  %30 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
  %30.3
}

def @func_7659() -> (int16, int16, Tensor[(60), float64]) {
  %31 = @func_6674() /* ty=(int16,) */;
  %32 = @func_6674() /* ty=(int16,) */;
  %33 = @func_6210() /* ty=(Tensor[(60), float64],) */;
  %34 = %31.0;
  %35 = %32.0;
  %36 = %33.0;
  (%34, %35, %36)
}

def @func_9336() -> int16 {
  %37 = @func_5137() /* ty=(Tensor[(7, 2, 5), float64], int16) */;
  %37.1
}

def @func_11191() -> Tensor[(2, 1320), uint8] {
  %38 = @func_10086() /* ty=(Tensor[(12, 14, 13), uint8], int16) */;
  %39 = %38.1;
  %40 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
  %41 = %40.2;
  %42 = cast(%39, dtype="uint8") /* ty=uint8 */;
  %43 = cast(%41, dtype="uint8") /* ty=Tensor[(2, 1320), uint8] */;
  bitwise_xor(%42, %43) /* ty=Tensor[(2, 1320), uint8] */
}

def @func_6050(%var_6026: Tensor[(9, 5, 6), float32]) -> (Tensor[(9, 5, 6), float32], int16, Tensor[(7, 2, 5), float64], Tensor[(7, 2, 5), bool]) {
  %44 = cast(%var_6026, dtype="float32") /* ty=Tensor[(9, 5, 6), float32] */;
  %45 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(9, 5, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 5, 6), float32] */, dtype="float32") /* ty=Tensor[(9, 5, 6), float32] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %48 = @func_5345() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %49 = @func_4886() /* ty=int16 */;
  %50 = cast(%49, dtype="int16") /* ty=int16 */;
  %51 = reshape(%50, newshape=[]) /* ty=int16 */;
  %52 = @func_921(%51) /* ty=(Tensor[(7, 2, 5), bool],) */;
  %53 = mod(%46, %47) /* ty=Tensor[(9, 5, 6), float32] */;
  %54 = %48.0;
  %55 = %52.0;
  (%53, %49, %54, %55)
}

def @func_9070() -> (Tensor[(8, 6, 12), float64], Tensor[(6, 1, 15), uint8], uint8, Tensor[(1, 90), uint8]) {
  %56 = cast(meta[relay.Constant][3] /* ty=Tensor[(8, 6, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
  %57 = cast(meta[relay.Constant][4] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %58 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 90), uint8] */, dtype="uint8") /* ty=Tensor[(1, 90), uint8] */;
  %59 = reshape(%57, newshape=[]) /* ty=uint8 */;
  %60 = reshape(%58, newshape=[6, 1, 15]) /* ty=Tensor[(6, 1, 15), uint8] */;
  %61 = @func_7476(%59, %60) /* ty=(Tensor[(6, 1, 15), uint8], Tensor[(6, 1, 15), float64]) */;
  %62 = cosh(%56) /* ty=Tensor[(8, 6, 12), float64] */;
  %63 = %61.0;
  (%62, %63, meta[relay.Constant][4] /* ty=uint8 */, meta[relay.Constant][5] /* ty=Tensor[(1, 90), uint8] */)
}

def @func_14751() -> (Tensor[(7, 2, 5), float64],) {
  %64 = @func_9715() /* ty=Tensor[(7, 2, 5), float64] */;
  (%64,)
}

def @func_7277() -> (Tensor[(7, 2, 5), float64],) {
  %65 = @func_7035() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(7, 14, 2), float64]) */;
  %66 = %65.0;
  (%66,)
}

def @func_9683() -> (int16, Tensor[(72), float64]) {
  %67 = @func_6700() /* ty=(int16,) */;
  %68 = @func_7082() /* ty=(int16, Tensor[(72), float64], Tensor[(2288), uint64]) */;
  %69 = %67.0;
  %70 = %68.1;
  (%69, %70)
}

def @func_9997(%var_9981: Tensor[(224), int16]) -> (int16, int16, Tensor[(224), int16], Tensor[(224), int16], int16) {
  %71 = @func_6674() /* ty=(int16,) */;
  %72 = cast(%var_9981, dtype="int16") /* ty=Tensor[(224), int16] */;
  %73 = reshape(%72, newshape=[224]) /* ty=Tensor[(224), int16] */;
  %74 = @func_5465(%73) /* ty=(int16, int16, Tensor[(224), int16], Tensor[(2288), uint64], Tensor[(60), float64]) */;
  %75 = %71.0;
  %76 = @func_8657() /* ty=int16 */;
  %77 = %74.2;
  %78 = @func_9336() /* ty=int16 */;
  (%75, %76, %77, %var_9981, %78)
}

def @func_14373(%var_14352: Tensor[(3, 24), float64]) -> (Tensor[(15, 8, 14), float64], Tensor[(2288), uint64], Tensor[(378), int8], Tensor[(3, 24), float64]) {
  %79 = @func_10308() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(15, 8, 14), float64]) */;
  %80 = cast(meta[relay.Constant][6] /* ty=Tensor[(378), int8] */, dtype="int8") /* ty=Tensor[(378), int8] */;
  %81 = cast(%var_14352, dtype="float64") /* ty=Tensor[(3, 24), float64] */;
  %82 = reshape(%80, newshape=[378]) /* ty=Tensor[(378), int8] */;
  %83 = reshape(%81, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %84 = @func_10743(%82, %83) /* ty=(Tensor[(60), float64], Tensor[(14, 3, 9), bool], Tensor[(378), int8], Tensor[(2288), uint64], Tensor[(72), float64], int16, Tensor[(60), float64]) */;
  %85 = %79.2;
  %86 = %84.3;
  (%85, %86, meta[relay.Constant][6] /* ty=Tensor[(378), int8] */, %var_14352)
}

def @func_12560() -> Tensor[(7, 2, 5), float64] {
  %87 = @func_5345() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %87.0
}

def @func_5865() -> Tensor[(12, 14, 13), bool] {
  %88 = @func_5829() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %88.0
}

def @func_6560(%var_6554: Tensor[(7, 13, 16), uint64]) -> (Tensor[(7, 13, 16), bool],) {
  %89 = cast(meta[relay.Constant][7] /* ty=Tensor[(7, 1, 16), uint64] */, dtype="bool") /* ty=Tensor[(7, 1, 16), bool] */;
  %90 = cast(%var_6554, dtype="bool") /* ty=Tensor[(7, 13, 16), bool] */;
  %91 = less(%89, %90) /* ty=Tensor[(7, 13, 16), bool] */;
  (%91,)
}

def @func_5211() -> (Tensor[(60), float64],) {
  %92 = @func_4672() /* ty=Tensor[(60), float64] */;
  (%92,)
}

def @func_618(%var_576: Tensor[(5, 3, 4), float64], %var_591: Tensor[(126), float32]) -> (Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) {
  %93 = cast(%var_576, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %94 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(5, 3, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 3, 4), float64] */, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %97 = cast(%var_591, dtype="float32") /* ty=Tensor[(126), float32] */;
  %98 = cast(%var_591, dtype="float32") /* ty=Tensor[(126), float32] */;
  %99 = reshape(%97, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %100 = reshape(%98, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %101 = cast(meta[relay.Constant][8] /* ty=Tensor[(5, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %102 = cast(%var_591, dtype="float32") /* ty=Tensor[(126), float32] */;
  %103 = cast(%var_591, dtype="float32") /* ty=Tensor[(126), float32] */;
  %104 = reshape(%102, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %105 = reshape(%103, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %106 = less(%95, %96) /* ty=Tensor[(5, 3, 4), bool] */;
  %107 = @func_447(%99, %100) /* ty=Tensor[(7, 2, 9), int16] */;
  %108 = tan(%101) /* ty=Tensor[(5, 3, 4), float64] */;
  %109 = @func_447(%104, %105) /* ty=Tensor[(7, 2, 9), int16] */;
  (%106, %107, %var_591, %108, %109)
}

def @func_1796(%var_1789: Tensor[(2288), uint64]) -> (Tensor[(3, 7, 15), uint32], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 9), int16], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) {
  %110 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 7, 1), uint32] */, dtype="uint32") /* ty=Tensor[(3, 7, 1), uint32] */;
  %111 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 7, 15), uint32] */, dtype="uint32") /* ty=Tensor[(3, 7, 15), uint32] */;
  %112 = cast(meta[relay.Constant][11] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %113 = cast(meta[relay.Constant][12] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %114 = reshape(%112, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %115 = reshape(%113, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %116 = @func_618(%114, %115) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) */;
  %117 = cast(meta[relay.Constant][12] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %118 = %116.1;
  %119 = cast(%118, dtype="float32") /* ty=Tensor[(7, 2, 9), float32] */;
  %120 = reshape(%117, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %121 = reshape(%119, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %122 = cast(%var_1789, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %123 = cast(%var_1789, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %124 = reshape(%122, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %125 = reshape(%123, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %126 = add(%110, %111) /* ty=Tensor[(3, 7, 15), uint32] */;
  %127 = @func_447(%120, %121) /* ty=Tensor[(7, 2, 9), int16] */;
  %128 = @func_848(%124, %125) /* ty=Tensor[(16, 11, 13), uint64] */;
  (%126, %118, meta[relay.Constant][11] /* ty=Tensor[(60), float64] */, meta[relay.Constant][12] /* ty=Tensor[(126), float32] */, %127, %128, %var_1789)
}

def @func_447(%var_421: Tensor[(7, 2, 9), float32], %var_427: Tensor[(7, 2, 9), float32]) -> Tensor[(7, 2, 9), int16] {
  %129 = cast(%var_421, dtype="float32") /* ty=Tensor[(7, 2, 9), float32] */;
  %130 = asin(%129) /* ty=Tensor[(7, 2, 9), float32] */;
  %131 = cast(%var_427, dtype="int16") /* ty=Tensor[(7, 2, 9), int16] */;
  %132 = shape_of(%130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%130, dtype="int16") /* ty=Tensor[(7, 2, 9), int16] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  subtract(%133, %134) /* ty=Tensor[(7, 2, 9), int16] */
}

def @func_7067() -> (int16, Tensor[(60), float64]) {
  %135 = @func_5664() /* ty=(Tensor[(60), float64], int16) */;
  %136 = @func_6210() /* ty=(Tensor[(60), float64],) */;
  %137 = %135.1;
  %138 = %136.0;
  (%137, %138)
}

def @func_9152(%var_9124: Tensor[(6, 7, 6), float64]) -> (Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(6, 7, 6), float32]) {
  %139 = @func_7277() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %140 = @func_8754() /* ty=(Tensor[(60), float64],) */;
  %141 = cast(%var_9124, dtype="float64") /* ty=Tensor[(6, 7, 6), float64] */;
  %142 = acos(%141) /* ty=Tensor[(6, 7, 6), float64] */;
  %143 = cast(%142, dtype="float32") /* ty=Tensor[(6, 7, 6), float32] */;
  %144 = %139.0;
  %145 = %140.0;
  %146 = log10(%143) /* ty=Tensor[(6, 7, 6), float32] */;
  (%144, %145, %146)
}

def @func_8232() -> (Tensor[(60), float64],) {
  %147 = @func_6125() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %148 = %147.1;
  (%148,)
}

def @func_4838(%var_4832: Tensor[(126), float32]) -> (int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) {
  %149 = @func_4446() /* ty=(int16,) */;
  %150 = cast(meta[relay.Constant][13] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %151 = cast(%var_4832, dtype="float32") /* ty=Tensor[(126), float32] */;
  %152 = reshape(%150, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), float64] */;
  %153 = reshape(%151, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %154 = @func_2517(%152, %153) /* ty=(Tensor[(12, 15, 8), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
  %155 = %149.0;
  %156 = %154.1;
  (%155, %156, meta[relay.Constant][13] /* ty=Tensor[(1440), float64] */, %var_4832)
}

def @func_7299() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) {
  %157 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %158 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
  %159 = @func_5372() /* ty=Tensor[(60), float64] */;
  %160 = %157.0;
  %161 = %158.2;
  (%159, %160, %161)
}

def @func_3104(%var_3057: Tensor[(7, 8, 4), int16], %var_3068: Tensor[(2288), uint64], %var_3079: Tensor[(30, 2), float64]) -> (Tensor[(7, 8, 4), int16], Tensor[(4, 3, 6), float64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(5, 3, 4), bool], Tensor[(30, 2), float64], Tensor[(126), float32]) {
  %162 = cast(%var_3057, dtype="int16") /* ty=Tensor[(7, 8, 4), int16] */;
  %163 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(7, 8, 4), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %164 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 8, 4), int16] */, dtype="int16") /* ty=Tensor[(7, 8, 4), int16] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %166 = cast(meta[relay.Constant][15] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %167 = cast(%var_3068, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %168 = reshape(%166, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float64] */;
  %169 = reshape(%167, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %170 = @func_3045(%168, %169) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
  %171 = cast(%var_3079, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
  %172 = cast(meta[relay.Constant][16] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %173 = reshape(%171, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %174 = reshape(%172, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %175 = @func_618(%173, %174) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) */;
  %176 = logical_xor(%164, %165) /* ty=Tensor[(7, 8, 4), int16] */;
  %177 = %170.0;
  %178 = %175.0;
  (%176, %177, meta[relay.Constant][15] /* ty=Tensor[(72), float64] */, %var_3068, %178, %var_3079, meta[relay.Constant][16] /* ty=Tensor[(126), float32] */)
}

def @func_5664() -> (Tensor[(60), float64], int16) {
  %179 = @func_5211() /* ty=(Tensor[(60), float64],) */;
  %180 = %179.0;
  %181 = @func_4886() /* ty=int16 */;
  (%180, %181)
}

def @func_15163() -> (Tensor[(196), float64],) {
  %182 = @func_14483() /* ty=(Tensor[(196), float64], Tensor[(60), float64]) */;
  %183 = %182.0;
  (%183,)
}

def @func_9629(%var_9588: Tensor[(4096), int16], %var_9621: Tensor[(72), float64], %var_9622: Tensor[(88, 26), uint64]) -> (Tensor[(60), float64], Tensor[(16, 16, 16), int16], Tensor[(4096), int16], Tensor[(12, 14, 13), bool], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(60), float64], Tensor[(2288), uint64], Tensor[(72), float64], Tensor[(88, 26), uint64]) {
  %184 = cast(%var_9588, dtype="int16") /* ty=Tensor[(4096), int16] */;
  %185 = reshape(%184, newshape=[16, 16, 16]) /* ty=Tensor[(16, 16, 16), int16] */;
  %186 = @func_8111(%185) /* ty=(Tensor[(16, 16, 16), int16], Tensor[(2288), uint64]) */;
  %187 = @func_5829() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %188 = cast(meta[relay.Constant][17] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %189 = reshape(%188, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %190 = @func_4838(%189) /* ty=(int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) */;
  %191 = @func_9122() /* ty=(Tensor[(60), float64], Tensor[(60), float64]) */;
  %192 = cast(%var_9621, dtype="float64") /* ty=Tensor[(72), float64] */;
  %193 = cast(%var_9622, dtype="uint64") /* ty=Tensor[(88, 26), uint64] */;
  %194 = reshape(%192, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float64] */;
  %195 = reshape(%193, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %196 = @func_3045(%194, %195) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
  %197 = @func_5113() /* ty=Tensor[(60), float64] */;
  %198 = %186.0;
  %199 = %187.0;
  %200 = %190.2;
  %201 = %191.1;
  %202 = %196.2;
  (%197, %198, %var_9588, %199, %200, meta[relay.Constant][17] /* ty=Tensor[(126), float32] */, %201, %202, %var_9621, %var_9622)
}

def @func_11565() -> (Tensor[(196), float64], Tensor[(2, 1320), bool]) {
  %203 = @func_8712() /* ty=(Tensor[(196), float64], Tensor[(60), float64], Tensor[(154), float64]) */;
  %204 = @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */;
  %205 = %204.2;
  %206 = cast(%205, dtype="float32") /* ty=Tensor[(2, 1320), float32] */;
  %207 = sin(%206) /* ty=Tensor[(2, 1320), float32] */;
  %208 = cast(%207, dtype="bool") /* ty=Tensor[(2, 1320), bool] */;
  %209 = shape_of(%205, dtype="int32") /* ty=Tensor[(2), int32] */;
  %210 = cast(%205, dtype="bool") /* ty=Tensor[(2, 1320), bool] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %212 = %203.0;
  %213 = less(%210, %211) /* ty=Tensor[(2, 1320), bool] */;
  (%212, %213)
}

def @func_10021() -> (int16,) {
  %214 = @func_8293() /* ty=int16 */;
  (%214,)
}

def @func_5939() -> Tensor[(588, 126), float32] {
  %215 = @func_4963() /* ty=(int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) */;
  %216 = %215.7;
  %217 = cast(%216, dtype="float32") /* ty=Tensor[(588, 126), float32] */;
  asin(%217) /* ty=Tensor[(588, 126), float32] */
}

def @func_4052(%var_4024: Tensor[(7, 11, 1), float64], %var_4038: int16) -> (Tensor[(7, 11, 1), float64], Tensor[(7, 2, 5), bool], int16) {
  %218 = cast(%var_4024, dtype="float64") /* ty=Tensor[(7, 11, 1), float64] */;
  %219 = cast(%var_4038, dtype="int16") /* ty=int16 */;
  %220 = reshape(%219, newshape=[]) /* ty=int16 */;
  %221 = @func_921(%220) /* ty=(Tensor[(7, 2, 5), bool],) */;
  %222 = asin(%218) /* ty=Tensor[(7, 11, 1), float64] */;
  %223 = %221.0;
  (%222, %223, %var_4038)
}

def @func_6979() -> (Tensor[(196), float64], Tensor[(7, 14, 2), float64]) {
  %224 = @func_6926() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(7, 14, 2), float64], Tensor[(196), float64]) */;
  %225 = %224.3;
  %226 = cast(%225, dtype="float64") /* ty=Tensor[(196), float64] */;
  %227 = reshape(%226, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), float64] */;
  %228 = @func_2300(%227) /* ty=Tensor[(7, 14, 2), float64] */;
  (%225, %228)
}

def @func_7162(%var_7143: Tensor[(7, 2, 5), float64]) -> Tensor[(7, 2, 5), float64] {
  %229 = @func_5345() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %230 = %229.0;
  %231 = cast(%var_7143, dtype="float64") /* ty=Tensor[(7, 2, 5), float64] */;
  %232 = shape_of(%230, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%230, dtype="float64") /* ty=Tensor[(7, 2, 5), float64] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%233, %234) /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_8657() -> int16 {
  %235 = @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */;
  %235.1
}

def @func_10586() -> (Tensor[(7, 2, 5), int16],) {
  %236 = @func_5427() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */;
  %237 = %236.1;
  %238 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 2, 5), float64] */, dtype="int16") /* ty=Tensor[(7, 2, 5), int16] */;
  %239 = shape_of(%237, dtype="int32") /* ty=Tensor[(3), int32] */;
  %240 = cast(%237, dtype="int16") /* ty=Tensor[(7, 2, 5), int16] */;
  %241 = dyn.reshape(%238, %239, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %242 = left_shift(%240, %241) /* ty=Tensor[(7, 2, 5), int16] */;
  (%242,)
}

def @func_9715() -> Tensor[(7, 2, 5), float64] {
  %243 = @func_5234() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %243.0
}

def @func_11698() -> (Tensor[(7, 2, 5), float64],) {
  %244 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %245 = %244.0;
  (%245,)
}

def @func_14159() -> (int16, Tensor[(7, 14, 2), float64], Tensor[(196), float64]) {
  %246 = @func_5906() /* ty=(int16,) */;
  %247 = cast(meta[relay.Constant][19] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %248 = reshape(%247, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), float64] */;
  %249 = %246.0;
  %250 = @func_2300(%248) /* ty=Tensor[(7, 14, 2), float64] */;
  (%249, %250, meta[relay.Constant][19] /* ty=Tensor[(196), float64] */)
}

def @func_12885() -> Tensor[(7, 2, 5), float64] {
  %251 = @func_11638() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %251.0
}

def @func_4602(%var_4596: Tensor[(14, 3, 9), int8], %var_4597: Tensor[(14, 3, 9), int8]) -> Tensor[(14, 3, 9), bool] {
  %252 = cast(%var_4597, dtype="bool") /* ty=Tensor[(14, 3, 9), bool] */;
  %253 = shape_of(%var_4596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %254 = cast(%var_4596, dtype="bool") /* ty=Tensor[(14, 3, 9), bool] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%254, %255) /* ty=Tensor[(14, 3, 9), bool] */
}

def @func_9252() -> int16 {
  @func_4758() /* ty=int16 */
}

def @func_12752() -> Tensor[(7, 2, 5), float64] {
  @func_7440() /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_7577() -> (Tensor[(60), float64],) {
  %256 = @func_6551() /* ty=(Tensor[(15, 11, 16), float32], Tensor[(60), float64]) */;
  %257 = %256.1;
  (%257,)
}

def @func_6274(%var_6267: Tensor[(15, 8, 14), float64]) -> (Tensor[(15, 8, 14), float64],) {
  %258 = cast(%var_6267, dtype="float64") /* ty=Tensor[(15, 8, 14), float64] */;
  %259 = exp(%258) /* ty=Tensor[(15, 8, 14), float64] */;
  (%259,)
}

def @func_6330() -> (Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 5), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %260 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
  %261 = @func_5345() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %262 = cast(meta[relay.Constant][20] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %263 = reshape(%262, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
  %264 = @func_5372() /* ty=Tensor[(60), float64] */;
  %265 = %260.0;
  %266 = %261.0;
  %267 = @func_1209(%263) /* ty=Tensor[(11, 7, 2), float64] */;
  (%264, %265, %266, %267, meta[relay.Constant][20] /* ty=Tensor[(154), float64] */)
}

def @func_7082() -> (int16, Tensor[(72), float64], Tensor[(2288), uint64]) {
  %268 = @func_5137() /* ty=(Tensor[(7, 2, 5), float64], int16) */;
  %269 = cast(meta[relay.Constant][21] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %270 = reshape(%269, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %271 = @func_6011(%270) /* ty=(Tensor[(72), float64], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %272 = %268.1;
  %273 = %271.0;
  (%272, %273, meta[relay.Constant][21] /* ty=Tensor[(2288), uint64] */)
}

def @func_4325() -> (Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) {
  %274 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 16, 15), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 15), float64] */;
  %275 = cast(meta[relay.Constant][23] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %276 = cast(meta[relay.Constant][24] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %277 = reshape(%275, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %278 = reshape(%276, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %279 = @func_618(%277, %278) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) */;
  %280 = atan(%274) /* ty=Tensor[(16, 16, 15), float64] */;
  %281 = %279.4;
  (%280, %281, meta[relay.Constant][23] /* ty=Tensor[(60), float64] */, meta[relay.Constant][24] /* ty=Tensor[(126), float32] */)
}

def @func_11028() -> (Tensor[(60), float64], int16, Tensor[(60), float64], Tensor[(7, 2, 5), bool], Tensor[(2288), uint64], Tensor[(2288), uint64], Tensor[(7, 2, 5), float64]) {
  %282 = @func_6926() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(7, 14, 2), float64], Tensor[(196), float64]) */;
  %283 = @func_6125() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %284 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
  %285 = cast(meta[relay.Constant][25] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %286 = reshape(%285, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %287 = @func_6480(%286) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %288 = %282.1;
  %289 = @func_5807() /* ty=int16 */;
  %290 = %283.1;
  %291 = %284.1;
  %292 = %287.2;
  %293 = @func_9936() /* ty=Tensor[(7, 2, 5), float64] */;
  (%288, %289, %290, %291, %292, meta[relay.Constant][25] /* ty=Tensor[(2288), uint64] */, %293)
}

def @func_5372() -> Tensor[(60), float64] {
  @func_5113() /* ty=Tensor[(60), float64] */
}

def @func_14965() -> (Tensor[(7, 2, 5), float64], int16) {
  %294 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %295 = %294.0;
  %296 = @func_5807() /* ty=int16 */;
  (%295, %296)
}

def @func_2517(%var_2497: Tensor[(12, 15, 8), float64], %var_2511: Tensor[(126), float32]) -> (Tensor[(12, 15, 8), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) {
  %297 = cast(%var_2497, dtype="float64") /* ty=Tensor[(12, 15, 8), float64] */;
  %298 = cast(meta[relay.Constant][26] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %299 = cast(%var_2511, dtype="float32") /* ty=Tensor[(126), float32] */;
  %300 = reshape(%298, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %301 = reshape(%299, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %302 = @func_618(%300, %301) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) */;
  %303 = asinh(%297) /* ty=Tensor[(12, 15, 8), float64] */;
  %304 = %302.1;
  (%303, %304, meta[relay.Constant][26] /* ty=Tensor[(60), float64] */, %var_2511)
}

def @func_13495() -> Tensor[(7, 2, 5), float32] {
  %305 = @func_8776() /* ty=(int16, Tensor[(7, 2, 5), float32]) */;
  %305.1
}

def @func_14001() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), bool]) {
  %306 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %307 = %306.0;
  %308 = cast(%307, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %309 = sin(%308) /* ty=Tensor[(7, 2, 5), float32] */;
  %310 = @func_12200() /* ty=Tensor[(7, 2, 5), bool] */;
  (%309, %310)
}

def @func_5906() -> (int16,) {
  %311 = @func_4758() /* ty=int16 */;
  (%311,)
}

def @func_10086() -> (Tensor[(12, 14, 13), uint8], int16) {
  %312 = @func_5829() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %313 = %312.0;
  %314 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 14, 13), bool] */, dtype="uint8") /* ty=Tensor[(12, 14, 13), uint8] */;
  %315 = shape_of(%313, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%313, dtype="uint8") /* ty=Tensor[(12, 14, 13), uint8] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %318 = @func_5906() /* ty=(int16,) */;
  %319 = maximum(%316, %317) /* ty=Tensor[(12, 14, 13), uint8] */;
  %320 = %318.0;
  (%319, %320)
}

def @func_8438() -> (Tensor[(15, 11, 16), float32], Tensor[(14, 10, 14), int16]) {
  %321 = @func_6551() /* ty=(Tensor[(15, 11, 16), float32], Tensor[(60), float64]) */;
  %322 = cast(meta[relay.Constant][28] /* ty=Tensor[(140, 14), uint16] */, dtype="uint16") /* ty=Tensor[(140, 14), uint16] */;
  %323 = reshape(%322, newshape=[14, 10, 14]) /* ty=Tensor[(14, 10, 14), uint16] */;
  %324 = @func_3717(%323) /* ty=(Tensor[(14, 10, 14), float32], Tensor[(7, 14, 2), float64]) */;
  %325 = %324.0;
  %326 = cast(meta[relay.Constant][28] /* ty=Tensor[(140, 14), uint16] */, dtype="int16") /* ty=Tensor[(140, 14), int16] */;
  %327 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%325, dtype="int16") /* ty=Tensor[(14, 10, 14), int16] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %330 = %321.0;
  %331 = bitwise_xor(%328, %329) /* ty=Tensor[(14, 10, 14), int16] */;
  (%330, %331)
}

def @func_7516() -> (Tensor[(12, 14, 13), bool], Tensor[(126), float32], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) {
  %332 = @func_5829() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %333 = cast(meta[relay.Constant][29] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %334 = cast(meta[relay.Constant][30] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %335 = reshape(%333, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), float64] */;
  %336 = reshape(%334, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %337 = @func_2517(%335, %336) /* ty=(Tensor[(12, 15, 8), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
  %338 = cast(meta[relay.Constant][31] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %339 = cast(meta[relay.Constant][32] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %340 = reshape(%338, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float64] */;
  %341 = reshape(%339, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %342 = @func_3045(%340, %341) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
  %343 = %332.0;
  %344 = %337.3;
  %345 = %342.1;
  (%343, %344, meta[relay.Constant][29] /* ty=Tensor[(1440), float64] */, meta[relay.Constant][30] /* ty=Tensor[(126), float32] */, %345, meta[relay.Constant][31] /* ty=Tensor[(72), float64] */, meta[relay.Constant][32] /* ty=Tensor[(2288), uint64] */)
}

def @func_9492() -> Tensor[(7, 2, 5), float32] {
  %346 = @func_9357() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %347 = %346.0;
  %348 = cast(%347, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  cosh(%348) /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_12348() -> (int16, Tensor[(12, 14, 13), float64]) {
  %349 = @func_9683() /* ty=(int16, Tensor[(72), float64]) */;
  %350 = @func_5865() /* ty=Tensor[(12, 14, 13), bool] */;
  %351 = cast(%350, dtype="float64") /* ty=Tensor[(12, 14, 13), float64] */;
  %352 = %349.0;
  %353 = cosh(%351) /* ty=Tensor[(12, 14, 13), float64] */;
  (%352, %353)
}

def @func_12851() -> (int16, Tensor[(2, 1320), float32]) {
  %354 = @func_12348() /* ty=(int16, Tensor[(12, 14, 13), float64]) */;
  %355 = %354.0;
  %356 = @func_11901() /* ty=Tensor[(2, 1320), float32] */;
  (%355, %356)
}

def @func_848(%var_840: Tensor[(16, 11, 13), uint64], %var_841: Tensor[(16, 11, 13), uint64]) -> Tensor[(16, 11, 13), uint64] {
  %357 = cast(%var_841, dtype="uint64") /* ty=Tensor[(16, 11, 13), uint64] */;
  %358 = shape_of(%var_840, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%var_840, dtype="uint64") /* ty=Tensor[(16, 11, 13), uint64] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  maximum(%359, %360) /* ty=Tensor[(16, 11, 13), uint64] */
}

def @func_15634() -> int16 {
  %361 = @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */;
  %361.1
}

def @func_13146(%var_13110: Tensor[(126), float32], %var_13134: Tensor[(2, 1320), float64]) -> (Tensor[(60), float64], Tensor[(196), float64], Tensor[(2288, 1), uint64], Tensor[(7, 84), bool], Tensor[(126), float32], Tensor[(2, 1320), float32], Tensor[(2, 1320), float32], Tensor[(2, 1320), float64], Tensor[(12, 14, 13), float64]) {
  %362 = @func_7227() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), bool]) */;
  %363 = @func_11565() /* ty=(Tensor[(196), float64], Tensor[(2, 1320), bool]) */;
  %364 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 84), bool] */, dtype="bool") /* ty=Tensor[(7, 84), bool] */;
  %365 = cast(%var_13110, dtype="float32") /* ty=Tensor[(126), float32] */;
  %366 = @func_11565() /* ty=(Tensor[(196), float64], Tensor[(2, 1320), bool]) */;
  %367 = %366.1;
  %368 = cast(%367, dtype="float32") /* ty=Tensor[(2, 1320), float32] */;
  %369 = reshape(%364, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), bool] */;
  %370 = reshape(%365, newshape=[126, 1]) /* ty=Tensor[(126, 1), float32] */;
  %371 = reshape(%368, newshape=[4, 660]) /* ty=Tensor[(4, 660), float32] */;
  %372 = @func_3334(%369, %370, %371) /* ty=(Tensor[(7, 7, 12), bool], Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(16, 11, 13), uint64], Tensor[(2288, 1), uint64], Tensor[(7, 2, 9), int16], Tensor[(4, 660), float32]) */;
  %373 = cast(%367, dtype="float64") /* ty=Tensor[(2, 1320), float64] */;
  %374 = asin(%373) /* ty=Tensor[(2, 1320), float64] */;
  %375 = cast(%374, dtype="float64") /* ty=Tensor[(2, 1320), float64] */;
  %376 = asinh(%375) /* ty=Tensor[(2, 1320), float64] */;
  %377 = cast(%376, dtype="float32") /* ty=Tensor[(2, 1320), float32] */;
  %378 = cast(%374, dtype="int64") /* ty=Tensor[(2, 1320), int64] */;
  %379 = shape_of(%376, dtype="int32") /* ty=Tensor[(2), int32] */;
  %380 = cast(%376, dtype="int64") /* ty=Tensor[(2, 1320), int64] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %382 = bitwise_and(%380, %381) /* ty=Tensor[(2, 1320), int64] */;
  %383 = cast(%382, dtype="float32") /* ty=Tensor[(2, 1320), float32] */;
  %384 = cast(%var_13134, dtype="float64") /* ty=Tensor[(2, 1320), float64] */;
  %385 = shape_of(%374, dtype="int32") /* ty=Tensor[(2), int32] */;
  %386 = cast(%374, dtype="float64") /* ty=Tensor[(2, 1320), float64] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %388 = %362.0;
  %389 = %363.0;
  %390 = %372.5;
  %391 = sqrt(%377) /* ty=Tensor[(2, 1320), float32] */;
  %392 = atanh(%383) /* ty=Tensor[(2, 1320), float32] */;
  %393 = floor_divide(%386, %387) /* ty=Tensor[(2, 1320), float64] */;
  %394 = @func_12911() /* ty=Tensor[(12, 14, 13), float64] */;
  (%388, %389, %390, meta[relay.Constant][33] /* ty=Tensor[(7, 84), bool] */, %var_13110, %391, %392, %393, %394)
}

def @func_15092() -> (Tensor[(588, 126), float32], Tensor[(12, 14, 13), bool]) {
  %395 = @func_7516() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(126), float32], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) */;
  %396 = @func_5939() /* ty=Tensor[(588, 126), float32] */;
  %397 = %395.0;
  (%396, %397)
}

def @func_11977() -> (Tensor[(196), float64],) {
  %398 = @func_7608() /* ty=Tensor[(196), float64] */;
  (%398,)
}

def @func_5223() -> (Tensor[(7, 2, 5), float64],) {
  %399 = @func_5137() /* ty=(Tensor[(7, 2, 5), float64], int16) */;
  %400 = %399.0;
  (%400,)
}

def @func_12318(%var_12312: Tensor[(11, 7, 2), float64]) -> (Tensor[(11, 7, 2), float64],) {
  %401 = cast(%var_12312, dtype="float64") /* ty=Tensor[(11, 7, 2), float64] */;
  %402 = sin(%401) /* ty=Tensor[(11, 7, 2), float64] */;
  (%402,)
}

def @func_7476(%var_7451: uint8, %var_7452: Tensor[(6, 1, 15), uint8]) -> (Tensor[(6, 1, 15), uint8], Tensor[(6, 1, 15), float64]) {
  %403 = cast(%var_7451, dtype="uint8") /* ty=uint8 */;
  %404 = cast(%var_7452, dtype="uint8") /* ty=Tensor[(6, 1, 15), uint8] */;
  %405 = cast(%var_7451, dtype="float64") /* ty=float64 */;
  %406 = cast(%var_7452, dtype="float64") /* ty=Tensor[(6, 1, 15), float64] */;
  %407 = mod(%405, %406) /* ty=Tensor[(6, 1, 15), float64] */;
  %408 = cast(%407, dtype="float64") /* ty=Tensor[(6, 1, 15), float64] */;
  %409 = cast(%var_7451, dtype="float64") /* ty=float64 */;
  %410 = left_shift(%403, %404) /* ty=Tensor[(6, 1, 15), uint8] */;
  %411 = floor_mod(%408, %409) /* ty=Tensor[(6, 1, 15), float64] */;
  (%410, %411)
}

def @func_13193() -> (Tensor[(72), float64],) {
  %412 = @func_7783() /* ty=(Tensor[(72), float64],) */;
  %413 = %412.0;
  (%413,)
}

def @func_11828(%var_11810: Tensor[(15, 3, 4), float32]) -> (Tensor[(15, 3, 4), float32],) {
  %414 = cast(%var_11810, dtype="float32") /* ty=Tensor[(15, 3, 4), float32] */;
  %415 = sqrt(%414) /* ty=Tensor[(15, 3, 4), float32] */;
  (%415,)
}

def @func_8712() -> (Tensor[(196), float64], Tensor[(60), float64], Tensor[(154), float64]) {
  %416 = @func_7702() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */;
  %417 = @func_6330() /* ty=(Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 5), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %418 = @func_7608() /* ty=Tensor[(196), float64] */;
  %419 = %416.1;
  %420 = %417.4;
  (%418, %419, %420)
}

def @func_11063(%var_11051: Tensor[(9, 10, 16), float64]) -> Tensor[(9, 10, 16), float64] {
  %421 = cast(%var_11051, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
  asinh(%421) /* ty=Tensor[(9, 10, 16), float64] */
}

def @func_6125() -> (Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) {
  %422 = @func_5191() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %423 = cast(meta[relay.Constant][34] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %424 = reshape(%423, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %425 = @func_1796(%424) /* ty=(Tensor[(3, 7, 15), uint32], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 9), int16], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
  %426 = %422.0;
  %427 = %425.2;
  (%426, %427, meta[relay.Constant][34] /* ty=Tensor[(2288), uint64] */)
}

def @func_15430(%var_15401: Tensor[(3, 42), float32], %var_15416: Tensor[(351), uint8]) -> (Tensor[(12, 14, 13), bool], Tensor[(2288), uint64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(13, 3, 9), uint8], Tensor[(351), uint8], Tensor[(3, 42), bool]) {
  %428 = @func_9273() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %429 = cast(meta[relay.Constant][35] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %430 = cast(meta[relay.Constant][36] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %431 = reshape(%429, newshape=[72, 1]) /* ty=Tensor[(72, 1), float64] */;
  %432 = reshape(%430, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %433 = @func_8612(%431, %432) /* ty=(int16, Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64]) */;
  %434 = cast(%var_15416, dtype="uint8") /* ty=Tensor[(351), uint8] */;
  %435 = cast(%var_15416, dtype="uint8") /* ty=Tensor[(351), uint8] */;
  %436 = reshape(%434, newshape=[13, 3, 9]) /* ty=Tensor[(13, 3, 9), uint8] */;
  %437 = reshape(%435, newshape=[13, 3, 9]) /* ty=Tensor[(13, 3, 9), uint8] */;
  %438 = @func_14026(%436, %437) /* ty=(Tensor[(13, 3, 9), uint8], Tensor[(7, 2, 5), bool]) */;
  %439 = cast(%var_15401, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
  %440 = reshape(%439, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %441 = @func_4838(%440) /* ty=(int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) */;
  %442 = %441.0;
  %443 = cast(%var_15401, dtype="bool") /* ty=Tensor[(3, 42), bool] */;
  %444 = cast(%442, dtype="bool") /* ty=bool */;
  %445 = %428.0;
  %446 = %433.1;
  %447 = %438.0;
  %448 = greater_equal(%443, %444) /* ty=Tensor[(3, 42), bool] */;
  (%445, %446, meta[relay.Constant][35] /* ty=Tensor[(72), float64] */, meta[relay.Constant][36] /* ty=Tensor[(2288), uint64] */, %447, %var_15416, %448)
}

def @func_11936(%var_11911: Tensor[(2, 1320), float32], %var_11934: Tensor[(8, 286), uint64]) -> (Tensor[(2, 1320), uint16], Tensor[(2, 1320), int64], Tensor[(16, 11, 13), uint64], Tensor[(8, 286), uint64]) {
  %449 = @func_8321() /* ty=Tensor[(2, 1320), float32] */;
  %450 = cast(%var_11911, dtype="uint16") /* ty=Tensor[(2, 1320), uint16] */;
  %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(2), int32] */;
  %452 = cast(%449, dtype="uint16") /* ty=Tensor[(2, 1320), uint16] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %454 = cast(%var_11911, dtype="int64") /* ty=Tensor[(2, 1320), int64] */;
  %455 = shape_of(%449, dtype="int32") /* ty=Tensor[(2), int32] */;
  %456 = cast(%449, dtype="int64") /* ty=Tensor[(2, 1320), int64] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %458 = cast(%var_11934, dtype="uint64") /* ty=Tensor[(8, 286), uint64] */;
  %459 = cast(%var_11934, dtype="uint64") /* ty=Tensor[(8, 286), uint64] */;
  %460 = reshape(%458, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %461 = reshape(%459, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %462 = left_shift(%452, %453) /* ty=Tensor[(2, 1320), uint16] */;
  %463 = subtract(%456, %457) /* ty=Tensor[(2, 1320), int64] */;
  %464 = @func_848(%460, %461) /* ty=Tensor[(16, 11, 13), uint64] */;
  (%462, %463, %464, %var_11934)
}

def @func_10950() -> (Tensor[(60), float64], Tensor[(60), float64], int16, Tensor[(7, 2, 5), float64]) {
  %465 = @func_5272() /* ty=(Tensor[(60), float64],) */;
  %466 = @func_9122() /* ty=(Tensor[(60), float64], Tensor[(60), float64]) */;
  %467 = @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */;
  %468 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %469 = %465.0;
  %470 = %466.0;
  %471 = %467.0;
  %472 = %468.0;
  (%469, %470, %471, %472)
}

def @func_8293() -> int16 {
  %473 = @func_6700() /* ty=(int16,) */;
  %473.0
}

def @func_11159() -> Tensor[(12, 14, 13), bool] {
  %474 = @func_5191() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %474.0
}

def @func_14026(%var_14004: Tensor[(13, 3, 9), uint8], %var_14005: Tensor[(13, 3, 9), uint8]) -> (Tensor[(13, 3, 9), uint8], Tensor[(7, 2, 5), bool]) {
  %475 = cast(%var_14005, dtype="uint8") /* ty=Tensor[(13, 3, 9), uint8] */;
  %476 = shape_of(%var_14004, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%var_14004, dtype="uint8") /* ty=Tensor[(13, 3, 9), uint8] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %479 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
  %480 = subtract(%477, %478) /* ty=Tensor[(13, 3, 9), uint8] */;
  %481 = %479.1;
  (%480, %481)
}

def @func_12979() -> (Tensor[(60), float64],) {
  %482 = @func_4724() /* ty=(Tensor[(60), float64],) */;
  %483 = %482.0;
  (%483,)
}

def @func_4584(%var_4572: Tensor[(7, 2, 9), int16]) -> (Tensor[(7, 2, 9), uint32],) {
  %484 = @func_4325() /* ty=(Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
  %485 = %484.1;
  %486 = cast(%var_4572, dtype="uint32") /* ty=Tensor[(7, 2, 9), uint32] */;
  %487 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%485, dtype="uint32") /* ty=Tensor[(7, 2, 9), uint32] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %490 = bitwise_xor(%488, %489) /* ty=Tensor[(7, 2, 9), uint32] */;
  (%490,)
}

def @func_5465(%var_5456: Tensor[(224), int16]) -> (int16, int16, Tensor[(224), int16], Tensor[(2288), uint64], Tensor[(60), float64]) {
  %491 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
  %492 = cast(%var_5456, dtype="int16") /* ty=Tensor[(224), int16] */;
  %493 = cast(meta[relay.Constant][37] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %494 = cast(meta[relay.Constant][38] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %495 = reshape(%492, newshape=[16, 14]) /* ty=Tensor[(16, 14), int16] */;
  %496 = reshape(%493, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %497 = reshape(%494, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %498 = @func_4638(%495, %496, %497) /* ty=(int16, Tensor[(4, 3, 6), float64], Tensor[(16, 14), int16], Tensor[(2288), uint64], Tensor[(60), float64]) */;
  %499 = %491.2;
  %500 = %498.0;
  (%499, %500, %var_5456, meta[relay.Constant][37] /* ty=Tensor[(2288), uint64] */, meta[relay.Constant][38] /* ty=Tensor[(60), float64] */)
}

def @func_9216() -> Tensor[(60), float64] {
  @func_5372() /* ty=Tensor[(60), float64] */
}

def @func_3884(%var_3881: Tensor[(72), float64]) -> (Tensor[(12, 14, 13), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) {
  %501 = cast(meta[relay.Constant][39] /* ty=Tensor[(12, 14, 13), float32] */, dtype="float32") /* ty=Tensor[(12, 14, 13), float32] */;
  %502 = cast(%var_3881, dtype="float64") /* ty=Tensor[(72), float64] */;
  %503 = cast(meta[relay.Constant][40] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %504 = reshape(%502, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float64] */;
  %505 = reshape(%503, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %506 = @func_3045(%504, %505) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
  %507 = exp(%501) /* ty=Tensor[(12, 14, 13), float32] */;
  %508 = %506.1;
  (%507, %508, %var_3881, meta[relay.Constant][40] /* ty=Tensor[(2288), uint64] */)
}

def @func_10617() -> Tensor[(60), float64] {
  %509 = @func_4724() /* ty=(Tensor[(60), float64],) */;
  %509.0
}

def @func_4758() -> int16 {
  %510 = @func_4446() /* ty=(int16,) */;
  %510.0
}

def @func_11638() -> (Tensor[(7, 2, 5), float64],) {
  %511 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %512 = %511.0;
  (%512,)
}

def @func_14559() -> Tensor[(2, 1320), bool] {
  %513 = @func_11565() /* ty=(Tensor[(196), float64], Tensor[(2, 1320), bool]) */;
  %513.1
}

def @func_3334(%var_3302: Tensor[(7, 7, 12), bool], %var_3310: Tensor[(126, 1), float32], %var_3323: Tensor[(4, 660), float32]) -> (Tensor[(7, 7, 12), bool], Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(16, 11, 13), uint64], Tensor[(2288, 1), uint64], Tensor[(7, 2, 9), int16], Tensor[(4, 660), float32]) {
  %514 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 7, 12), bool] */, dtype="bool") /* ty=Tensor[(7, 7, 12), bool] */;
  %515 = shape_of(%var_3302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%var_3302, dtype="bool") /* ty=Tensor[(7, 7, 12), bool] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %518 = cast(meta[relay.Constant][42] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %519 = cast(%var_3310, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %520 = reshape(%518, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), float64] */;
  %521 = reshape(%519, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %522 = @func_2517(%520, %521) /* ty=(Tensor[(12, 15, 8), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
  %523 = cast(meta[relay.Constant][43] /* ty=Tensor[(2288, 1), uint64] */, dtype="uint64") /* ty=Tensor[(2288, 1), uint64] */;
  %524 = cast(meta[relay.Constant][43] /* ty=Tensor[(2288, 1), uint64] */, dtype="uint64") /* ty=Tensor[(2288, 1), uint64] */;
  %525 = reshape(%523, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %526 = reshape(%524, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %527 = cast(%var_3323, dtype="float32") /* ty=Tensor[(4, 660), float32] */;
  %528 = reshape(%527, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float32] */;
  %529 = @func_663(%528) /* ty=(Tensor[(15, 11, 16), float32], Tensor[(7, 2, 9), int16], Tensor[(126), float32]) */;
  %530 = logical_or(%516, %517) /* ty=Tensor[(7, 7, 12), bool] */;
  %531 = %522.1;
  %532 = @func_848(%525, %526) /* ty=Tensor[(16, 11, 13), uint64] */;
  %533 = %529.1;
  (%530, %531, meta[relay.Constant][42] /* ty=Tensor[(1440), float64] */, %var_3310, %532, meta[relay.Constant][43] /* ty=Tensor[(2288, 1), uint64] */, %533, %var_3323)
}

def @func_13579() -> (Tensor[(588, 126), float32], Tensor[(60), float64]) {
  %534 = @func_10308() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(15, 8, 14), float64]) */;
  %535 = @func_5939() /* ty=Tensor[(588, 126), float32] */;
  %536 = %534.0;
  (%535, %536)
}

def @func_5113() -> Tensor[(60), float64] {
  %537 = @func_4325() /* ty=(Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
  %537.2
}

def @func_8776() -> (int16, Tensor[(7, 2, 5), float32]) {
  %538 = @func_7440() /* ty=Tensor[(7, 2, 5), float64] */;
  %539 = cast(%538, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %540 = @func_4886() /* ty=int16 */;
  %541 = log2(%539) /* ty=Tensor[(7, 2, 5), float32] */;
  (%540, %541)
}

def @func_13922() -> Tensor[(196), float64] {
  %542 = @func_11977() /* ty=(Tensor[(196), float64],) */;
  %542.0
}

def @func_13361() -> (int16, Tensor[(12, 14, 13), bool], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %543 = @func_10552() /* ty=(int16,) */;
  %544 = cast(meta[relay.Constant][44] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %545 = reshape(%544, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
  %546 = %543.0;
  %547 = @func_6509() /* ty=Tensor[(12, 14, 13), bool] */;
  %548 = @func_1209(%545) /* ty=Tensor[(11, 7, 2), float64] */;
  (%546, %547, %548, meta[relay.Constant][44] /* ty=Tensor[(154), float64] */)
}

def @func_8894() -> Tensor[(60), float64] {
  %549 = @func_7067() /* ty=(int16, Tensor[(60), float64]) */;
  %549.1
}

def @func_10636() -> Tensor[(7, 2, 5), uint32] {
  %550 = @func_9413() /* ty=(Tensor[(7, 2, 5), uint32],) */;
  %550.0
}

def @func_14312(%var_14305: Tensor[(3, 20), float64]) -> (Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(3, 20), float64]) {
  %551 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %552 = cast(%var_14305, dtype="float64") /* ty=Tensor[(3, 20), float64] */;
  %553 = reshape(%552, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %554 = @func_7553(%553) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(224), int16], Tensor[(60), float64], Tensor[(2288, 1), float32], int16) */;
  %555 = %551.0;
  %556 = %554.1;
  (%555, %556, %var_14305)
}

def @func_12149() -> Tensor[(12, 14, 13), float64] {
  %557 = @func_9786() /* ty=Tensor[(12, 14, 13), bool] */;
  %558 = cast(%557, dtype="float64") /* ty=Tensor[(12, 14, 13), float64] */;
  atanh(%558) /* ty=Tensor[(12, 14, 13), float64] */
}

def @func_15341() -> (Tensor[(7, 2, 5), float64],) {
  %559 = @func_5345() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %560 = %559.0;
  (%560,)
}

def @func_12734() -> (Tensor[(8, 6, 12), float64],) {
  %561 = @func_9661() /* ty=(Tensor[(8, 6, 12), float64],) */;
  %562 = %561.0;
  (%562,)
}

def @func_5807() -> int16 {
  @func_4886() /* ty=int16 */
}

def @func_8612(%var_8565: Tensor[(72, 1), float64], %var_8566: Tensor[(2288), uint64]) -> (int16, Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64]) {
  %563 = cast(%var_8565, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %564 = cast(%var_8566, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %565 = reshape(%563, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float64] */;
  %566 = reshape(%564, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %567 = @func_3045(%565, %566) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
  %568 = @func_4758() /* ty=int16 */;
  %569 = %567.2;
  (%568, %569, %var_8565, %var_8566)
}

def @func_9208(%var_9198: Tensor[(588, 126), int64], %var_9203: Tensor[(588, 126), bool]) -> (Tensor[(12, 14, 13), bool], Tensor[(588, 126), int32]) {
  %570 = @func_8369() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %571 = @func_4963() /* ty=(int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) */;
  %572 = %571.2;
  %573 = cast(%var_9198, dtype="bool") /* ty=Tensor[(588, 126), bool] */;
  %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(2), int32] */;
  %575 = cast(%572, dtype="bool") /* ty=Tensor[(588, 126), bool] */;
  %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %577 = less(%575, %576) /* ty=Tensor[(588, 126), bool] */;
  %578 = cast(%var_9203, dtype="int32") /* ty=Tensor[(588, 126), int32] */;
  %579 = shape_of(%577, dtype="int32") /* ty=Tensor[(2), int32] */;
  %580 = cast(%577, dtype="int32") /* ty=Tensor[(588, 126), int32] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %582 = %570.0;
  %583 = subtract(%580, %581) /* ty=Tensor[(588, 126), int32] */;
  (%582, %583)
}

def @func_4386() -> (Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) {
  %584 = @func_4325() /* ty=(Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
  %585 = cast(meta[relay.Constant][45] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %586 = reshape(%585, newshape=[]) /* ty=int16 */;
  %587 = @func_921(%586) /* ty=(Tensor[(7, 2, 5), bool],) */;
  %588 = %584.3;
  %589 = %587.0;
  (%588, %589, meta[relay.Constant][45] /* ty=int16 */)
}

def @func_9122() -> (Tensor[(60), float64], Tensor[(60), float64]) {
  %590 = @func_4724() /* ty=(Tensor[(60), float64],) */;
  %591 = @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */;
  %592 = %590.0;
  %593 = %591.2;
  (%592, %593)
}

def @func_15602(%var_15580: Tensor[(60), float64]) -> (Tensor[(72), float64], Tensor[(2288, 1), float32], Tensor[(60), float64], Tensor[(12, 14, 13), bool]) {
  %594 = @func_14802() /* ty=(Tensor[(72), float64],) */;
  %595 = cast(%var_15580, dtype="float64") /* ty=Tensor[(60), float64] */;
  %596 = reshape(%595, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %597 = @func_7553(%596) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(224), int16], Tensor[(60), float64], Tensor[(2288, 1), float32], int16) */;
  %598 = %594.0;
  %599 = %597.4;
  %600 = @func_9786() /* ty=Tensor[(12, 14, 13), bool] */;
  (%598, %599, %var_15580, %600)
}

def @func_6800() -> (int16,) {
  %601 = @func_5664() /* ty=(Tensor[(60), float64], int16) */;
  %602 = %601.1;
  (%602,)
}

def @func_4724() -> (Tensor[(60), float64],) {
  %603 = @func_4672() /* ty=Tensor[(60), float64] */;
  (%603,)
}

def @func_9357() -> (Tensor[(7, 2, 5), float64],) {
  %604 = @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */;
  %605 = %604.1;
  (%605,)
}

def @func_8265(%var_8237: Tensor[(8, 2, 5), float64]) -> (Tensor[(8, 2, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(270), float32], Tensor[(8, 2, 5), float32]) {
  %606 = cast(%var_8237, dtype="float64") /* ty=Tensor[(8, 2, 5), float64] */;
  %607 = acosh(%606) /* ty=Tensor[(8, 2, 5), float64] */;
  %608 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 2, 5), float64] */, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%607, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %612 = cast(meta[relay.Constant][47] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %613 = reshape(%612, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), float32] */;
  %614 = @func_6050(%613) /* ty=(Tensor[(9, 5, 6), float32], int16, Tensor[(7, 2, 5), float64], Tensor[(7, 2, 5), bool]) */;
  %615 = cast(%607, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %616 = floor_mod(%610, %611) /* ty=Tensor[(8, 2, 5), float32] */;
  %617 = %614.2;
  %618 = asin(%615) /* ty=Tensor[(8, 2, 5), float32] */;
  (%616, %617, meta[relay.Constant][47] /* ty=Tensor[(270), float32] */, %618)
}

def @func_10516(%var_10463: Tensor[(8, 28), int16]) -> (Tensor[(60), float64], Tensor[(5, 3, 4), bool], Tensor[(8, 28), int16], Tensor[(2288), uint64], Tensor[(2288), uint64], Tensor[(16, 11, 13), uint64], Tensor[(7, 2, 5), float64]) {
  %619 = @func_7577() /* ty=(Tensor[(60), float64],) */;
  %620 = cast(%var_10463, dtype="int16") /* ty=Tensor[(8, 28), int16] */;
  %621 = cast(meta[relay.Constant][48] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %622 = %619.0;
  %623 = cast(%622, dtype="float64") /* ty=Tensor[(60), float64] */;
  %624 = reshape(%620, newshape=[7, 8, 4]) /* ty=Tensor[(7, 8, 4), int16] */;
  %625 = reshape(%621, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %626 = reshape(%623, newshape=[30, 2]) /* ty=Tensor[(30, 2), float64] */;
  %627 = @func_3104(%624, %625, %626) /* ty=(Tensor[(7, 8, 4), int16], Tensor[(4, 3, 6), float64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(5, 3, 4), bool], Tensor[(30, 2), float64], Tensor[(126), float32]) */;
  %628 = cast(%var_10463, dtype="int16") /* ty=Tensor[(8, 28), int16] */;
  %629 = cast(meta[relay.Constant][48] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %630 = cast(%622, dtype="float64") /* ty=Tensor[(60), float64] */;
  %631 = reshape(%628, newshape=[16, 14]) /* ty=Tensor[(16, 14), int16] */;
  %632 = reshape(%629, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %633 = reshape(%630, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %634 = @func_4638(%631, %632, %633) /* ty=(int16, Tensor[(4, 3, 6), float64], Tensor[(16, 14), int16], Tensor[(2288), uint64], Tensor[(60), float64]) */;
  %635 = cast(meta[relay.Constant][48] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %636 = cast(meta[relay.Constant][48] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %637 = reshape(%635, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %638 = reshape(%636, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %639 = %627.4;
  %640 = %634.3;
  %641 = @func_848(%637, %638) /* ty=Tensor[(16, 11, 13), uint64] */;
  %642 = @func_9715() /* ty=Tensor[(7, 2, 5), float64] */;
  (%622, %639, %var_10463, meta[relay.Constant][48] /* ty=Tensor[(2288), uint64] */, %640, %641, %642)
}

def @func_15482() -> (Tensor[(7, 2, 5), float64], Tensor[(2288), uint64]) {
  %643 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %644 = @func_6125() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %645 = %643.0;
  %646 = %644.2;
  (%645, %646)
}

def @func_7316(%var_7310: Tensor[(2640), float32]) -> (Tensor[(60), float64], Tensor[(4, 660), float32], Tensor[(588), bool], Tensor[(126, 1), float32], Tensor[(2640), float32], Tensor[(1440), float64]) {
  %647 = cast(meta[relay.Constant][49] /* ty=Tensor[(588), bool] */, dtype="bool") /* ty=Tensor[(588), bool] */;
  %648 = cast(meta[relay.Constant][50] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %649 = cast(%var_7310, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %650 = reshape(%647, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), bool] */;
  %651 = reshape(%648, newshape=[126, 1]) /* ty=Tensor[(126, 1), float32] */;
  %652 = reshape(%649, newshape=[4, 660]) /* ty=Tensor[(4, 660), float32] */;
  %653 = @func_3334(%650, %651, %652) /* ty=(Tensor[(7, 7, 12), bool], Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(16, 11, 13), uint64], Tensor[(2288, 1), uint64], Tensor[(7, 2, 9), int16], Tensor[(4, 660), float32]) */;
  %654 = cast(meta[relay.Constant][50] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %655 = reshape(%654, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %656 = @func_4838(%655) /* ty=(int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) */;
  %657 = @func_5113() /* ty=Tensor[(60), float64] */;
  %658 = %653.7;
  %659 = %656.2;
  (%657, %658, meta[relay.Constant][49] /* ty=Tensor[(588), bool] */, meta[relay.Constant][50] /* ty=Tensor[(126, 1), float32] */, %var_7310, %659)
}

def @func_10190(%var_10119: Tensor[(126), float32]) -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float64], int16, Tensor[(126), float32], Tensor[(2640), float32], Tensor[(72, 2640), int16], Tensor[(72, ?), bool]) {
  %660 = @func_6330() /* ty=(Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 5), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
  %661 = @func_7702() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */;
  %662 = cast(%var_10119, dtype="float32") /* ty=Tensor[(126), float32] */;
  %663 = reshape(%662, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %664 = @func_4838(%663) /* ty=(int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) */;
  %665 = cast(meta[relay.Constant][51] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %666 = reshape(%665, newshape=[2640]) /* ty=Tensor[(2640), float32] */;
  %667 = @func_7316(%666) /* ty=(Tensor[(60), float64], Tensor[(4, 660), float32], Tensor[(588), bool], Tensor[(126, 1), float32], Tensor[(2640), float32], Tensor[(1440), float64]) */;
  %668 = %667.4;
  %669 = @func_4963() /* ty=(int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) */;
  %670 = %669.4;
  %671 = cast(%668, dtype="int16") /* ty=Tensor[(2640), int16] */;
  %672 = cast(%670, dtype="int16") /* ty=Tensor[(72, 1), int16] */;
  %673 = cast(%670, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
  %674 = atan(%673) /* ty=Tensor[(72, 1), float32] */;
  %675 = @func_7783() /* ty=(Tensor[(72), float64],) */;
  %676 = %675.0;
  %677 = cast(%676, dtype="bool") /* ty=Tensor[(72), bool] */;
  %678 = shape_of(%674, dtype="int32") /* ty=Tensor[(2), int32] */;
  %679 = cast(%674, dtype="bool") /* ty=Tensor[(72, 1), bool] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %681 = %660.3;
  %682 = %661.2;
  %683 = %664.0;
  %684 = bitwise_or(%671, %672) /* ty=Tensor[(72, 2640), int16] */;
  %685 = not_equal(%679, %680) /* ty=Tensor[(72, ?), bool] */;
  (%681, %682, %683, %var_10119, meta[relay.Constant][51] /* ty=Tensor[(2640), float32] */, %684, %685)
}

def @func_12518(%var_12500: Tensor[(8, 6, 12), float64]) -> (Tensor[(8, 6, 12), float32], Tensor[(60), float64], Tensor[(252), float64]) {
  %686 = @func_9661() /* ty=(Tensor[(8, 6, 12), float64],) */;
  %687 = %686.0;
  %688 = cast(%var_12500, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
  %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%687, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %692 = cast(meta[relay.Constant][52] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %693 = reshape(%692, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), float64] */;
  %694 = @func_9152(%693) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(6, 7, 6), float32]) */;
  %695 = floor_mod(%690, %691) /* ty=Tensor[(8, 6, 12), float32] */;
  %696 = %694.1;
  (%695, %696, meta[relay.Constant][52] /* ty=Tensor[(252), float64] */)
}

def @func_9936() -> Tensor[(7, 2, 5), float64] {
  %697 = @func_9357() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %697.0
}

def @func_6551() -> (Tensor[(15, 11, 16), float32], Tensor[(60), float64]) {
  %698 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
  %699 = @func_4325() /* ty=(Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
  %700 = %698.1;
  %701 = %699.2;
  (%700, %701)
}

def @func_5727(%var_5708: Tensor[(3, 12, 14), float64]) -> (Tensor[(3, 12, 14), bool],) {
  %702 = cast(%var_5708, dtype="float64") /* ty=Tensor[(3, 12, 14), float64] */;
  %703 = log(%702) /* ty=Tensor[(3, 12, 14), float64] */;
  %704 = cast(%703, dtype="bool") /* ty=Tensor[(3, 12, 14), bool] */;
  %705 = shape_of(%var_5708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%var_5708, dtype="bool") /* ty=Tensor[(3, 12, 14), bool] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %708 = logical_and(%706, %707) /* ty=Tensor[(3, 12, 14), bool] */;
  (%708,)
}

def @func_663(%var_655: Tensor[(15, 11, 16), float32]) -> (Tensor[(15, 11, 16), float32], Tensor[(7, 2, 9), int16], Tensor[(126), float32]) {
  %709 = cast(1.6264f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %710 = cast(%var_655, dtype="float32") /* ty=Tensor[(15, 11, 16), float32] */;
  %711 = cast(meta[relay.Constant][53] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %712 = cast(meta[relay.Constant][53] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %713 = reshape(%711, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %714 = reshape(%712, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %715 = divide(%709, %710) /* ty=Tensor[(15, 11, 16), float32] */;
  %716 = @func_447(%713, %714) /* ty=Tensor[(7, 2, 9), int16] */;
  (%715, %716, meta[relay.Constant][53] /* ty=Tensor[(126), float32] */)
}

def @func_14831() -> (Tensor[(7, 2, 5), float64], Tensor[(72), float64]) {
  %717 = @func_12091() /* ty=(Tensor[(8, 6, 12), float64], Tensor[(72), float64]) */;
  %718 = @func_12752() /* ty=Tensor[(7, 2, 5), float64] */;
  %719 = %717.1;
  (%718, %719)
}

def @func_15673(%var_15657: Tensor[(224), int16]) -> (Tensor[(60), float64], Tensor[(5, 3, 4), bool], Tensor[(224), int16], Tensor[(2288), uint64]) {
  %720 = cast(%var_15657, dtype="int16") /* ty=Tensor[(224), int16] */;
  %721 = cast(meta[relay.Constant][54] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %722 = @func_12233() /* ty=Tensor[(60), float64] */;
  %723 = cast(%722, dtype="float64") /* ty=Tensor[(60), float64] */;
  %724 = reshape(%720, newshape=[7, 8, 4]) /* ty=Tensor[(7, 8, 4), int16] */;
  %725 = reshape(%721, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %726 = reshape(%723, newshape=[30, 2]) /* ty=Tensor[(30, 2), float64] */;
  %727 = @func_3104(%724, %725, %726) /* ty=(Tensor[(7, 8, 4), int16], Tensor[(4, 3, 6), float64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(5, 3, 4), bool], Tensor[(30, 2), float64], Tensor[(126), float32]) */;
  %728 = %727.4;
  (%722, %728, %var_15657, meta[relay.Constant][54] /* ty=Tensor[(2288), uint64] */)
}

def @func_9012(%var_8953: Tensor[(378), int8]) -> (Tensor[(72), float64], Tensor[(14, 3, 9), bool], int16, int16, Tensor[(378), bool]) {
  %729 = @func_7735() /* ty=(Tensor[(72), float64],) */;
  %730 = cast(%var_8953, dtype="int8") /* ty=Tensor[(378), int8] */;
  %731 = cast(%var_8953, dtype="int8") /* ty=Tensor[(378), int8] */;
  %732 = reshape(%730, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int8] */;
  %733 = reshape(%731, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int8] */;
  %734 = @func_6674() /* ty=(int16,) */;
  %735 = @func_7067() /* ty=(int16, Tensor[(60), float64]) */;
  %736 = cast(meta[relay.Constant][55] /* ty=Tensor[(378), int8] */, dtype="bool") /* ty=Tensor[(378), bool] */;
  %737 = shape_of(%var_8953, dtype="int32") /* ty=Tensor[(1), int32] */;
  %738 = cast(%var_8953, dtype="bool") /* ty=Tensor[(378), bool] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?), bool] */;
  %740 = %729.0;
  %741 = @func_4602(%732, %733) /* ty=Tensor[(14, 3, 9), bool] */;
  %742 = %734.0;
  %743 = %735.0;
  %744 = logical_and(%738, %739) /* ty=Tensor[(378), bool] */;
  (%740, %741, %742, %743, %744)
}

def @func_3045(%var_3032: Tensor[(4, 3, 6), float64], %var_3037: Tensor[(2288), uint64]) -> (Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) {
  %745 = cast(%var_3032, dtype="float64") /* ty=Tensor[(4, 3, 6), float64] */;
  %746 = cast(%var_3037, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %747 = cast(%var_3037, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %748 = reshape(%746, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %749 = reshape(%747, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %750 = atan(%745) /* ty=Tensor[(4, 3, 6), float64] */;
  %751 = @func_848(%748, %749) /* ty=Tensor[(16, 11, 13), uint64] */;
  (%750, %751, %var_3037)
}

def @func_13383(%var_13381: Tensor[(2288), uint64]) -> (Tensor[(7, 2, 5), float32], Tensor[(2288), uint64], Tensor[(2288), uint64]) {
  %752 = cast(%var_13381, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %753 = reshape(%752, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %754 = @func_6011(%753) /* ty=(Tensor[(72), float64], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %755 = @func_9492() /* ty=Tensor[(7, 2, 5), float32] */;
  %756 = %754.2;
  (%755, %756, %var_13381)
}

def @func_13280(%var_13255: Tensor[(72), float64], %var_13256: Tensor[(2288), uint64]) -> (int16, int16, Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(14, 10, 14), int16]) {
  %757 = @func_7082() /* ty=(int16, Tensor[(72), float64], Tensor[(2288), uint64]) */;
  %758 = cast(%var_13255, dtype="float64") /* ty=Tensor[(72), float64] */;
  %759 = cast(%var_13256, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %760 = reshape(%758, newshape=[72, 1]) /* ty=Tensor[(72, 1), float64] */;
  %761 = reshape(%759, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %762 = @func_8612(%760, %761) /* ty=(int16, Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64]) */;
  %763 = @func_8438() /* ty=(Tensor[(15, 11, 16), float32], Tensor[(14, 10, 14), int16]) */;
  %764 = %757.0;
  %765 = %762.0;
  %766 = %763.1;
  (%764, %765, %var_13255, %var_13256, %766)
}

def @func_11799() -> Tensor[(7, 2, 5), float64] {
  @func_9715() /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_13163() -> int16 {
  @func_5807() /* ty=int16 */
}

def @func_5345() -> (Tensor[(7, 2, 5), float64],) {
  %767 = @func_5234() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %768 = %767.0;
  (%768,)
}

def @func_6480(%var_6463: Tensor[(2288), uint64]) -> (Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(2288), uint64]) {
  %769 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %770 = cast(%var_6463, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %771 = reshape(%770, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %772 = @func_6011(%771) /* ty=(Tensor[(72), float64], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %773 = %769.0;
  %774 = %772.1;
  (%773, %774, %var_6463)
}

def @func_9867(%var_9836: Tensor[(12, 220), float32], %var_9838: Tensor[(12, 220), float32]) -> (Tensor[(7, 14, 2), float64], Tensor[(1440), float64], Tensor[(12, 220), uint8]) {
  %775 = @func_6926() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(7, 14, 2), float64], Tensor[(196), float64]) */;
  %776 = cast(%var_9836, dtype="float32") /* ty=Tensor[(12, 220), float32] */;
  %777 = reshape(%776, newshape=[2640]) /* ty=Tensor[(2640), float32] */;
  %778 = @func_7316(%777) /* ty=(Tensor[(60), float64], Tensor[(4, 660), float32], Tensor[(588), bool], Tensor[(126, 1), float32], Tensor[(2640), float32], Tensor[(1440), float64]) */;
  %779 = cast(%var_9838, dtype="bool") /* ty=Tensor[(12, 220), bool] */;
  %780 = shape_of(%var_9836, dtype="int32") /* ty=Tensor[(2), int32] */;
  %781 = cast(%var_9836, dtype="bool") /* ty=Tensor[(12, 220), bool] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %783 = not_equal(%781, %782) /* ty=Tensor[(12, 220), bool] */;
  %784 = cast(%783, dtype="float64") /* ty=Tensor[(12, 220), float64] */;
  %785 = log2(%784) /* ty=Tensor[(12, 220), float64] */;
  %786 = cast(%783, dtype="bool") /* ty=Tensor[(12, 220), bool] */;
  %787 = shape_of(%var_9836, dtype="int32") /* ty=Tensor[(2), int32] */;
  %788 = cast(%var_9836, dtype="bool") /* ty=Tensor[(12, 220), bool] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %790 = less_equal(%788, %789) /* ty=Tensor[(12, 220), bool] */;
  %791 = cast(%790, dtype="uint8") /* ty=Tensor[(12, 220), uint8] */;
  %792 = shape_of(%785, dtype="int32") /* ty=Tensor[(2), int32] */;
  %793 = cast(%785, dtype="uint8") /* ty=Tensor[(12, 220), uint8] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %795 = %775.2;
  %796 = %778.5;
  %797 = minimum(%793, %794) /* ty=Tensor[(12, 220), uint8] */;
  (%795, %796, %797)
}

def @func_5234() -> (Tensor[(7, 2, 5), float64],) {
  %798 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %799 = %798.0;
  (%799,)
}

def @func_15529() -> (int16, int16, Tensor[(7, 2, 5), float64], Tensor[(7, 2, 5), float64]) {
  %800 = @func_11099() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(72), float64], int16) */;
  %801 = @func_7277() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %802 = @func_14252() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */;
  %803 = @func_4758() /* ty=int16 */;
  %804 = %800.2;
  %805 = %801.0;
  %806 = %802.1;
  (%803, %804, %805, %806)
}

def @func_10536() -> (Tensor[(196), float64],) {
  %807 = @func_7608() /* ty=Tensor[(196), float64] */;
  (%807,)
}

def @func_13621() -> (Tensor[(12, 14, 13), float64],) {
  %808 = @func_12348() /* ty=(int16, Tensor[(12, 14, 13), float64]) */;
  %809 = %808.1;
  (%809,)
}

def @func_14903(%var_14871: Tensor[(7, 2, 5), float32]) -> Tensor[(7, 2, 5), float64] {
  %810 = @func_9492() /* ty=Tensor[(7, 2, 5), float32] */;
  %811 = cast(%var_14871, dtype="uint64") /* ty=Tensor[(7, 2, 5), uint64] */;
  %812 = shape_of(%810, dtype="int32") /* ty=Tensor[(3), int32] */;
  %813 = cast(%810, dtype="uint64") /* ty=Tensor[(7, 2, 5), uint64] */;
  %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %815 = add(%813, %814) /* ty=Tensor[(7, 2, 5), uint64] */;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(7, 2, 5), float64] */;
  log10(%816) /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_5137() -> (Tensor[(7, 2, 5), float64], int16) {
  %817 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
  %818 = %817.1;
  %819 = cast(%818, dtype="float64") /* ty=Tensor[(7, 2, 5), float64] */;
  %820 = @func_4446() /* ty=(int16,) */;
  %821 = atan(%819) /* ty=Tensor[(7, 2, 5), float64] */;
  %822 = %820.0;
  (%821, %822)
}

def @func_7608() -> Tensor[(196), float64] {
  %823 = @func_6979() /* ty=(Tensor[(196), float64], Tensor[(7, 14, 2), float64]) */;
  %823.0
}

def @func_4963() -> (int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) {
  %824 = cast(meta[relay.Constant][57] /* ty=Tensor[(588, 1), bool] */, dtype="bool") /* ty=Tensor[(588, 1), bool] */;
  %825 = cast(meta[relay.Constant][56] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %826 = reshape(%824, newshape=[588, 1]) /* ty=Tensor[(588, 1), bool] */;
  %827 = reshape(%825, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %828 = @func_4476(%826, %827) /* ty=(int16, Tensor[(2288, 1), uint64], Tensor[(588, 1), bool], Tensor[(126), float32], Tensor[(2640), float32]) */;
  %829 = %828.3;
  %830 = cast(%829, dtype="bool") /* ty=Tensor[(126), bool] */;
  %831 = cast(meta[relay.Constant][57] /* ty=Tensor[(588, 1), bool] */, dtype="bool") /* ty=Tensor[(588, 1), bool] */;
  %832 = not_equal(%830, %831) /* ty=Tensor[(588, 126), bool] */;
  %833 = cast(meta[relay.Constant][57] /* ty=Tensor[(588, 1), bool] */, dtype="int64") /* ty=Tensor[(588, 1), int64] */;
  %834 = cast(%832, dtype="int64") /* ty=Tensor[(588, 126), int64] */;
  %835 = cast(meta[relay.Constant][58] /* ty=Tensor[(72, 1), float64] */, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %836 = cast(meta[relay.Constant][59] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %837 = reshape(%835, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float64] */;
  %838 = reshape(%836, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %839 = @func_3045(%837, %838) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
  %840 = @func_4724() /* ty=(Tensor[(60), float64],) */;
  %841 = cast(%832, dtype="float32") /* ty=Tensor[(588, 126), float32] */;
  %842 = asinh(%841) /* ty=Tensor[(588, 126), float32] */;
  %843 = cast(%832, dtype="uint8") /* ty=Tensor[(588, 126), uint8] */;
  %844 = shape_of(%842, dtype="int32") /* ty=Tensor[(2), int32] */;
  %845 = cast(%842, dtype="uint8") /* ty=Tensor[(588, 126), uint8] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %847 = @func_4758() /* ty=int16 */;
  %848 = bitwise_and(%833, %834) /* ty=Tensor[(588, 126), int64] */;
  %849 = %839.2;
  %850 = %840.0;
  %851 = bitwise_xor(%845, %846) /* ty=Tensor[(588, 126), uint8] */;
  (%847, meta[relay.Constant][56] /* ty=Tensor[(126), float32] */, %848, %849, meta[relay.Constant][58] /* ty=Tensor[(72, 1), float64] */, meta[relay.Constant][59] /* ty=Tensor[(2288), uint64] */, %850, %851)
}

def @func_12165(%var_12159: Tensor[(2288), uint64]) -> (Tensor[(2288), bool],) {
  %852 = @func_6125() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %853 = %852.2;
  %854 = cast(%var_12159, dtype="bool") /* ty=Tensor[(2288), bool] */;
  %855 = shape_of(%853, dtype="int32") /* ty=Tensor[(1), int32] */;
  %856 = cast(%853, dtype="bool") /* ty=Tensor[(2288), bool] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?), bool] */;
  %858 = logical_or(%856, %857) /* ty=Tensor[(2288), bool] */;
  (%858,)
}

def @func_13330() -> (Tensor[(7, 2, 5), float64],) {
  %859 = @func_11028() /* ty=(Tensor[(60), float64], int16, Tensor[(60), float64], Tensor[(7, 2, 5), bool], Tensor[(2288), uint64], Tensor[(2288), uint64], Tensor[(7, 2, 5), float64]) */;
  %860 = %859.6;
  (%860,)
}

def @func_10344() -> Tensor[(12, 16, 11), int64] {
  %861 = cast(meta[relay.Constant][61] /* ty=Tensor[(12, 16, 11), int64] */, dtype="int64") /* ty=Tensor[(12, 16, 11), int64] */;
  %862 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(12, 16, 11), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(meta[relay.Constant][60] /* ty=Tensor[(12, 16, 11), int64] */, dtype="int64") /* ty=Tensor[(12, 16, 11), int64] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  add(%863, %864) /* ty=Tensor[(12, 16, 11), int64] */
}

def @func_13420(%var_13397: Tensor[(3, 16, 9), int8], %var_13403: Tensor[(126), int16]) -> (Tensor[(3, 16, 9), int8], Tensor[(7, 2, 9), uint32], Tensor[(1100), float64], Tensor[(126), int16], int16) {
  %865 = cast(%var_13397, dtype="int8") /* ty=Tensor[(3, 16, 9), int8] */;
  %866 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(3, 16, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(meta[relay.Constant][62] /* ty=Tensor[(3, 16, 9), int8] */, dtype="int8") /* ty=Tensor[(3, 16, 9), int8] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %869 = cast(meta[relay.Constant][63] /* ty=Tensor[(1100), float64] */, dtype="float64") /* ty=Tensor[(1100), float64] */;
  %870 = cast(meta[relay.Constant][63] /* ty=Tensor[(1100), float64] */, dtype="float64") /* ty=Tensor[(1100), float64] */;
  %871 = cast(%var_13403, dtype="int16") /* ty=Tensor[(126), int16] */;
  %872 = reshape(%869, newshape=[10, 10, 11]) /* ty=Tensor[(10, 10, 11), float64] */;
  %873 = reshape(%870, newshape=[10, 10, 11]) /* ty=Tensor[(10, 10, 11), float64] */;
  %874 = reshape(%871, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %875 = @func_7391(%872, %873, %874) /* ty=(Tensor[(10, 10, 11), float64], Tensor[(72), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), int16], int16, Tensor[(60), float64], Tensor[(2, 1320), float32]) */;
  %876 = @func_10552() /* ty=(int16,) */;
  %877 = bitwise_or(%867, %868) /* ty=Tensor[(3, 16, 9), int8] */;
  %878 = %875.2;
  %879 = %876.0;
  (%877, %878, meta[relay.Constant][63] /* ty=Tensor[(1100), float64] */, %var_13403, %879)
}

def @main(%var_15758: Tensor[(351), uint8]) -> (Tensor[(7, 2, 5), bool], Tensor[(60), float64], Tensor[(7, 2, 5), bool], Tensor[(351), int8]) {
  %880 = cast(%var_15758, dtype="uint8") /* ty=Tensor[(351), uint8] */;
  %881 = cast(%var_15758, dtype="uint8") /* ty=Tensor[(351), uint8] */;
  %882 = reshape(%880, newshape=[13, 3, 9]) /* ty=Tensor[(13, 3, 9), uint8] */;
  %883 = reshape(%881, newshape=[13, 3, 9]) /* ty=Tensor[(13, 3, 9), uint8] */;
  %884 = @func_14026(%882, %883) /* ty=(Tensor[(13, 3, 9), uint8], Tensor[(7, 2, 5), bool]) */;
  %885 = cast(meta[relay.Constant][64] /* ty=Tensor[(351), uint8] */, dtype="int8") /* ty=Tensor[(351), int8] */;
  %886 = shape_of(%var_15758, dtype="int32") /* ty=Tensor[(1), int32] */;
  %887 = cast(%var_15758, dtype="int8") /* ty=Tensor[(351), int8] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?), int8] */;
  %889 = @func_12200() /* ty=Tensor[(7, 2, 5), bool] */;
  %890 = @func_14587() /* ty=Tensor[(60), float64] */;
  %891 = %884.1;
  %892 = bitwise_xor(%887, %888) /* ty=Tensor[(351), int8] */;
  (%889, %890, %891, %892)
}

def @func_8111(%var_8090: Tensor[(16, 16, 16), int16]) -> (Tensor[(16, 16, 16), int16], Tensor[(2288), uint64]) {
  %893 = @func_5906() /* ty=(int16,) */;
  %894 = %893.0;
  %895 = cast(%894, dtype="int16") /* ty=int16 */;
  %896 = cast(%var_8090, dtype="int16") /* ty=Tensor[(16, 16, 16), int16] */;
  %897 = @func_4963() /* ty=(int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) */;
  %898 = maximum(%895, %896) /* ty=Tensor[(16, 16, 16), int16] */;
  %899 = %897.5;
  (%898, %899)
}

def @func_9273() -> (Tensor[(12, 14, 13), bool],) {
  %900 = @func_8369() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %901 = %900.0;
  (%901,)
}

def @func_13684(%var_13633: Tensor[(180), float32], %var_13652: Tensor[(1456), uint64], %var_13668: Tensor[(2288), uint64]) -> (Tensor[(72), float64], Tensor[(15, 3, 4), float32], Tensor[(180), float32], Tensor[(7, 13, 16), bool], Tensor[(1456), uint64], int16, Tensor[(2288), uint64]) {
  %902 = @func_13193() /* ty=(Tensor[(72), float64],) */;
  %903 = cast(%var_13633, dtype="float32") /* ty=Tensor[(180), float32] */;
  %904 = reshape(%903, newshape=[15, 3, 4]) /* ty=Tensor[(15, 3, 4), float32] */;
  %905 = @func_11828(%904) /* ty=(Tensor[(15, 3, 4), float32],) */;
  %906 = cast(%var_13652, dtype="uint64") /* ty=Tensor[(1456), uint64] */;
  %907 = reshape(%906, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), uint64] */;
  %908 = @func_6560(%907) /* ty=(Tensor[(7, 13, 16), bool],) */;
  %909 = %902.0;
  %910 = cast(%909, dtype="float64") /* ty=Tensor[(72), float64] */;
  %911 = cast(%var_13668, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %912 = reshape(%910, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %913 = reshape(%911, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %914 = @func_13280(%912, %913) /* ty=(int16, int16, Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(14, 10, 14), int16]) */;
  %915 = %905.0;
  %916 = %908.0;
  %917 = %914.1;
  (%909, %915, %var_13633, %916, %var_13652, %917, %var_13668)
}

def @func_10308() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(15, 8, 14), float64]) {
  %918 = @func_8019() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(15, 8, 14), float64], Tensor[(1680), float64], Tensor[(7, 2, 5), float64], int16) */;
  %919 = @func_5372() /* ty=Tensor[(60), float64] */;
  %920 = @func_10246() /* ty=Tensor[(7, 2, 5), float64] */;
  %921 = %918.1;
  (%919, %920, %921)
}

def @func_14646(%var_14610: Tensor[(588, 126), float32]) -> (Tensor[(588, 126), bool], Tensor[(588, 126), float32]) {
  %922 = @func_13579() /* ty=(Tensor[(588, 126), float32], Tensor[(60), float64]) */;
  %923 = %922.0;
  %924 = cast(%var_14610, dtype="bool") /* ty=Tensor[(588, 126), bool] */;
  %925 = shape_of(%923, dtype="int32") /* ty=Tensor[(2), int32] */;
  %926 = cast(%923, dtype="bool") /* ty=Tensor[(588, 126), bool] */;
  %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %928 = cast(%923, dtype="float32") /* ty=Tensor[(588, 126), float32] */;
  %929 = shape_of(%var_14610, dtype="int32") /* ty=Tensor[(2), int32] */;
  %930 = cast(%var_14610, dtype="float32") /* ty=Tensor[(588, 126), float32] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %932 = equal(%926, %927) /* ty=Tensor[(588, 126), bool] */;
  %933 = mod(%930, %931) /* ty=Tensor[(588, 126), float32] */;
  (%932, %933)
}

def @func_6926() -> (Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(7, 14, 2), float64], Tensor[(196), float64]) {
  %934 = cast(meta[relay.Constant][65] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
  %935 = reshape(%934, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), float64] */;
  %936 = @func_5865() /* ty=Tensor[(12, 14, 13), bool] */;
  %937 = @func_5113() /* ty=Tensor[(60), float64] */;
  %938 = @func_2300(%935) /* ty=Tensor[(7, 14, 2), float64] */;
  (%936, %937, %938, meta[relay.Constant][65] /* ty=Tensor[(196), float64] */)
}

def @func_910(%var_896: Tensor[(2, 10, 10), float64], %var_906: Tensor[(2, 10, 10), float64]) -> (Tensor[(2, 10, 10), int16],) {
  %939 = cast(%var_896, dtype="float64") /* ty=Tensor[(2, 10, 10), float64] */;
  %940 = log10(%939) /* ty=Tensor[(2, 10, 10), float64] */;
  %941 = cast(%var_906, dtype="int16") /* ty=Tensor[(2, 10, 10), int16] */;
  %942 = shape_of(%940, dtype="int32") /* ty=Tensor[(3), int32] */;
  %943 = cast(%940, dtype="int16") /* ty=Tensor[(2, 10, 10), int16] */;
  %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %945 = bitwise_xor(%943, %944) /* ty=Tensor[(2, 10, 10), int16] */;
  (%945,)
}

def @func_14703() -> (Tensor[(72), float64], Tensor[(2, 10, 10), int16], Tensor[(200), float64], Tensor[(7, 2, 5), float32]) {
  %946 = @func_7783() /* ty=(Tensor[(72), float64],) */;
  %947 = cast(meta[relay.Constant][66] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %948 = cast(meta[relay.Constant][66] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %949 = reshape(%947, newshape=[2, 10, 10]) /* ty=Tensor[(2, 10, 10), float64] */;
  %950 = reshape(%948, newshape=[2, 10, 10]) /* ty=Tensor[(2, 10, 10), float64] */;
  %951 = @func_910(%949, %950) /* ty=(Tensor[(2, 10, 10), int16],) */;
  %952 = @func_8776() /* ty=(int16, Tensor[(7, 2, 5), float32]) */;
  %953 = %946.0;
  %954 = %951.0;
  %955 = %952.1;
  (%953, %954, meta[relay.Constant][66] /* ty=Tensor[(200), float64] */, %955)
}

def @func_7783() -> (Tensor[(72), float64],) {
  %956 = @func_5695() /* ty=Tensor[(72), float64] */;
  (%956,)
}

def @func_7227() -> (Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), bool]) {
  %957 = @func_6551() /* ty=(Tensor[(15, 11, 16), float32], Tensor[(60), float64]) */;
  %958 = @func_6405() /* ty=(Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */;
  %959 = @func_5372() /* ty=Tensor[(60), float64] */;
  %960 = %957.1;
  %961 = %958.0;
  (%959, %960, %961)
}

def @func_7440() -> Tensor[(7, 2, 5), float64] {
  %962 = @func_7277() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %962.0
}

def @func_13311() -> int16 {
  %963 = @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */;
  %963.0
}

def @func_12200() -> Tensor[(7, 2, 5), bool] {
  %964 = @func_7227() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), bool]) */;
  %964.2
}

def @func_14456(%var_14416: Tensor[(10, 8, 10), bool], %var_14417: Tensor[(10, 8, 10), bool]) -> (Tensor[(10, 8, 10), bool], Tensor[(7, 2, 5), float64], Tensor[(12, 14, 13), float64]) {
  %965 = cast(%var_14417, dtype="bool") /* ty=Tensor[(10, 8, 10), bool] */;
  %966 = shape_of(%var_14416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %967 = cast(%var_14416, dtype="bool") /* ty=Tensor[(10, 8, 10), bool] */;
  %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %969 = @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */;
  %970 = @func_13621() /* ty=(Tensor[(12, 14, 13), float64],) */;
  %971 = logical_and(%967, %968) /* ty=Tensor[(10, 8, 10), bool] */;
  %972 = %969.1;
  %973 = %970.0;
  (%971, %972, %973)
}

def @func_6011(%var_5987: Tensor[(2288), uint64]) -> (Tensor[(72), float64], Tensor[(60), float64], Tensor[(2288), uint64]) {
  %974 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
  %975 = cast(%var_5987, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %976 = reshape(%975, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %977 = @func_1796(%976) /* ty=(Tensor[(3, 7, 15), uint32], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 9), int16], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
  %978 = %974.3;
  %979 = %977.2;
  (%978, %979, %var_5987)
}

def @func_13973() -> (Tensor[(588, 126), float32],) {
  %980 = @func_5939() /* ty=Tensor[(588, 126), float32] */;
  (%980,)
}

def @func_7843(%var_7823: Tensor[(126), float32]) -> (Tensor[(196), float64], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(72), float64]) {
  %981 = cast(%var_7823, dtype="float32") /* ty=Tensor[(126), float32] */;
  %982 = reshape(%981, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %983 = @func_4838(%982) /* ty=(int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) */;
  %984 = @func_7608() /* ty=Tensor[(196), float64] */;
  %985 = %983.1;
  %986 = @func_5695() /* ty=Tensor[(72), float64] */;
  (%984, %985, %var_7823, %986)
}

def @func_7391(%var_7336: Tensor[(10, 10, 11), float64], %var_7337: Tensor[(10, 10, 11), float64], %var_7351: Tensor[(126), int16]) -> (Tensor[(10, 10, 11), float64], Tensor[(72), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), int16], int16, Tensor[(60), float64], Tensor[(2, 1320), float32]) {
  %987 = cast(%var_7337, dtype="float64") /* ty=Tensor[(10, 10, 11), float64] */;
  %988 = shape_of(%var_7336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %989 = cast(%var_7336, dtype="float64") /* ty=Tensor[(10, 10, 11), float64] */;
  %990 = dyn.reshape(%987, %988, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %991 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
  %992 = cast(%var_7351, dtype="int16") /* ty=Tensor[(126), int16] */;
  %993 = reshape(%992, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), int16] */;
  %994 = @func_4584(%993) /* ty=(Tensor[(7, 2, 9), uint32],) */;
  %995 = @func_6700() /* ty=(int16,) */;
  %996 = @func_7067() /* ty=(int16, Tensor[(60), float64]) */;
  %997 = @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */;
  %998 = divide(%989, %990) /* ty=Tensor[(10, 10, 11), float64] */;
  %999 = %991.3;
  %1000 = %994.0;
  %1001 = %995.0;
  %1002 = %996.1;
  %1003 = %997.2;
  (%998, %999, %1000, %var_7351, %1001, %1002, %1003)
}

def @func_9413() -> (Tensor[(7, 2, 5), uint32],) {
  %1004 = @func_7440() /* ty=Tensor[(7, 2, 5), float64] */;
  %1005 = @func_6700() /* ty=(int16,) */;
  %1006 = %1005.0;
  %1007 = cast(%1004, dtype="uint32") /* ty=Tensor[(7, 2, 5), uint32] */;
  %1008 = cast(%1006, dtype="uint32") /* ty=uint32 */;
  %1009 = right_shift(%1007, %1008) /* ty=Tensor[(7, 2, 5), uint32] */;
  (%1009,)
}

def @func_10552() -> (int16,) {
  %1010 = @func_4446() /* ty=(int16,) */;
  %1011 = %1010.0;
  (%1011,)
}

def @func_4672() -> Tensor[(60), float64] {
  %1012 = @func_4325() /* ty=(Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
  %1012.2
}

def @func_5191() -> (Tensor[(12, 14, 13), bool],) {
  %1013 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
  %1014 = %1013.4;
  (%1014,)
}

def @func_4446() -> (int16,) {
  %1015 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
  %1016 = %1015.2;
  (%1016,)
}

def @func_8019() -> (Tensor[(12, 14, 13), bool], Tensor[(15, 8, 14), float64], Tensor[(1680), float64], Tensor[(7, 2, 5), float64], int16) {
  %1017 = @func_7516() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(126), float32], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) */;
  %1018 = cast(meta[relay.Constant][67] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %1019 = reshape(%1018, newshape=[15, 8, 14]) /* ty=Tensor[(15, 8, 14), float64] */;
  %1020 = @func_6274(%1019) /* ty=(Tensor[(15, 8, 14), float64],) */;
  %1021 = @func_7702() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */;
  %1022 = @func_6700() /* ty=(int16,) */;
  %1023 = %1017.0;
  %1024 = %1020.0;
  %1025 = %1021.2;
  %1026 = %1022.0;
  (%1023, %1024, meta[relay.Constant][67] /* ty=Tensor[(1680), float64] */, %1025, %1026)
}

def @func_10413(%var_10386: Tensor[(2288), uint64]) -> (Tensor[(588, 126), float32], Tensor[(588, 126), int64], Tensor[(7, 2, 5), float64], Tensor[(2288), uint64]) {
  %1027 = @func_4963() /* ty=(int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) */;
  %1028 = cast(%var_10386, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %1029 = reshape(%1028, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %1030 = @func_6480(%1029) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %1031 = @func_5939() /* ty=Tensor[(588, 126), float32] */;
  %1032 = %1027.2;
  %1033 = %1030.0;
  (%1031, %1032, %1033, %var_10386)
}

def @func_10051() -> (int16, Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %1034 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
  %1035 = cast(meta[relay.Constant][68] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1036 = reshape(%1035, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
  %1037 = %1034.2;
  %1038 = @func_1209(%1036) /* ty=Tensor[(11, 7, 2), float64] */;
  (%1037, %1038, meta[relay.Constant][68] /* ty=Tensor[(154), float64] */)
}

def @func_5829() -> (Tensor[(12, 14, 13), bool],) {
  %1039 = @func_5191() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %1040 = %1039.0;
  (%1040,)
}

def @func_8321() -> Tensor[(2, 1320), float32] {
  %1041 = @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */;
  %1041.2
}

def @func_4476(%var_4472: Tensor[(588, 1), bool], %var_4473: Tensor[(126), float32]) -> (int16, Tensor[(2288, 1), uint64], Tensor[(588, 1), bool], Tensor[(126), float32], Tensor[(2640), float32]) {
  %1042 = @func_4446() /* ty=(int16,) */;
  %1043 = cast(%var_4472, dtype="bool") /* ty=Tensor[(588, 1), bool] */;
  %1044 = cast(%var_4473, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1045 = cast(meta[relay.Constant][69] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %1046 = reshape(%1043, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), bool] */;
  %1047 = reshape(%1044, newshape=[126, 1]) /* ty=Tensor[(126, 1), float32] */;
  %1048 = reshape(%1045, newshape=[4, 660]) /* ty=Tensor[(4, 660), float32] */;
  %1049 = @func_3334(%1046, %1047, %1048) /* ty=(Tensor[(7, 7, 12), bool], Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(16, 11, 13), uint64], Tensor[(2288, 1), uint64], Tensor[(7, 2, 9), int16], Tensor[(4, 660), float32]) */;
  %1050 = %1042.0;
  %1051 = %1049.5;
  (%1050, %1051, %var_4472, %var_4473, meta[relay.Constant][69] /* ty=Tensor[(2640), float32] */)
}

def @func_11901() -> Tensor[(2, 1320), float32] {
  %1052 = @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */;
  %1052.2
}

def @func_9928() -> (int16, Tensor[(7, 2, 5), float64]) {
  %1053 = @func_6405() /* ty=(Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */;
  %1054 = @func_4886() /* ty=int16 */;
  %1055 = %1053.1;
  (%1054, %1055)
}

def @func_2300(%var_2290: Tensor[(7, 14, 2), float64]) -> Tensor[(7, 14, 2), float64] {
  %1056 = cast(%var_2290, dtype="float64") /* ty=Tensor[(7, 14, 2), float64] */;
  acosh(%1056) /* ty=Tensor[(7, 14, 2), float64] */
}

def @func_12233() -> Tensor[(60), float64] {
  %1057 = @func_9122() /* ty=(Tensor[(60), float64], Tensor[(60), float64]) */;
  %1057.1
}

def @func_9786() -> Tensor[(12, 14, 13), bool] {
  @func_5865() /* ty=Tensor[(12, 14, 13), bool] */
}

def @func_9661() -> (Tensor[(8, 6, 12), float64],) {
  %1058 = @func_9070() /* ty=(Tensor[(8, 6, 12), float64], Tensor[(6, 1, 15), uint8], uint8, Tensor[(1, 90), uint8]) */;
  %1059 = %1058.0;
  (%1059,)
}

def @func_12911() -> Tensor[(12, 14, 13), float64] {
  %1060 = @func_12348() /* ty=(int16, Tensor[(12, 14, 13), float64]) */;
  %1060.1
}

def @func_4886() -> int16 {
  @func_4758() /* ty=int16 */
}

def @func_7035() -> (Tensor[(7, 2, 5), float64], Tensor[(7, 14, 2), float64]) {
  %1061 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %1062 = @func_6979() /* ty=(Tensor[(196), float64], Tensor[(7, 14, 2), float64]) */;
  %1063 = %1061.0;
  %1064 = %1062.1;
  (%1063, %1064)
}

def @func_4638(%var_4622: Tensor[(16, 14), int16], %var_4623: Tensor[(2288), uint64], %var_4624: Tensor[(60), float64]) -> (int16, Tensor[(4, 3, 6), float64], Tensor[(16, 14), int16], Tensor[(2288), uint64], Tensor[(60), float64]) {
  %1065 = @func_4446() /* ty=(int16,) */;
  %1066 = cast(%var_4622, dtype="int16") /* ty=Tensor[(16, 14), int16] */;
  %1067 = cast(%var_4623, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %1068 = cast(%var_4624, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1069 = reshape(%1066, newshape=[7, 8, 4]) /* ty=Tensor[(7, 8, 4), int16] */;
  %1070 = reshape(%1067, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %1071 = reshape(%1068, newshape=[30, 2]) /* ty=Tensor[(30, 2), float64] */;
  %1072 = @func_3104(%1069, %1070, %1071) /* ty=(Tensor[(7, 8, 4), int16], Tensor[(4, 3, 6), float64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(5, 3, 4), bool], Tensor[(30, 2), float64], Tensor[(126), float32]) */;
  %1073 = %1065.0;
  %1074 = %1072.1;
  (%1073, %1074, %var_4622, %var_4623, %var_4624)
}

def @func_14587() -> Tensor[(60), float64] {
  %1075 = @func_6551() /* ty=(Tensor[(15, 11, 16), float32], Tensor[(60), float64]) */;
  %1075.1
}

def @func_15310(%var_15252: Tensor[(200, 1), float64]) -> (int16, Tensor[(2, 10, 10), int16], Tensor[(200, 1), float64], Tensor[(7, 2, 5), float64], Tensor[(7, 14, 2), float64]) {
  %1076 = cast(%var_15252, dtype="float64") /* ty=Tensor[(200, 1), float64] */;
  %1077 = cast(%var_15252, dtype="float64") /* ty=Tensor[(200, 1), float64] */;
  %1078 = reshape(%1076, newshape=[2, 10, 10]) /* ty=Tensor[(2, 10, 10), float64] */;
  %1079 = reshape(%1077, newshape=[2, 10, 10]) /* ty=Tensor[(2, 10, 10), float64] */;
  %1080 = @func_910(%1078, %1079) /* ty=(Tensor[(2, 10, 10), int16],) */;
  %1081 = @func_7277() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %1082 = @func_6979() /* ty=(Tensor[(196), float64], Tensor[(7, 14, 2), float64]) */;
  %1083 = @func_9336() /* ty=int16 */;
  %1084 = %1080.0;
  %1085 = %1081.0;
  %1086 = %1082.1;
  (%1083, %1084, %var_15252, %1085, %1086)
}

def @func_8369() -> (Tensor[(12, 14, 13), bool],) {
  %1087 = @func_5191() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %1088 = %1087.0;
  (%1088,)
}

def @func_10246() -> Tensor[(7, 2, 5), float64] {
  %1089 = @func_5234() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %1089.0
}

def @func_14802() -> (Tensor[(72), float64],) {
  %1090 = @func_5695() /* ty=Tensor[(72), float64] */;
  (%1090,)
}

def @func_11336() -> (Tensor[(588, 126), float64],) {
  %1091 = @func_5939() /* ty=Tensor[(588, 126), float32] */;
  %1092 = cast(%1091, dtype="float64") /* ty=Tensor[(588, 126), float64] */;
  %1093 = log(%1092) /* ty=Tensor[(588, 126), float64] */;
  (%1093,)
}

def @func_7553(%var_7538: Tensor[(60), float64]) -> (Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(224), int16], Tensor[(60), float64], Tensor[(2288, 1), float32], int16) {
  %1094 = @func_5137() /* ty=(Tensor[(7, 2, 5), float64], int16) */;
  %1095 = cast(meta[relay.Constant][70] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
  %1096 = cast(meta[relay.Constant][71] /* ty=Tensor[(2288, 1), uint64] */, dtype="uint64") /* ty=Tensor[(2288, 1), uint64] */;
  %1097 = cast(%var_7538, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1098 = reshape(%1095, newshape=[16, 14]) /* ty=Tensor[(16, 14), int16] */;
  %1099 = reshape(%1096, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %1100 = reshape(%1097, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %1101 = @func_4638(%1098, %1099, %1100) /* ty=(int16, Tensor[(4, 3, 6), float64], Tensor[(16, 14), int16], Tensor[(2288), uint64], Tensor[(60), float64]) */;
  %1102 = cast(meta[relay.Constant][71] /* ty=Tensor[(2288, 1), uint64] */, dtype="float32") /* ty=Tensor[(2288, 1), float32] */;
  %1103 = %1094.0;
  %1104 = %1101.4;
  %1105 = rsqrt(%1102) /* ty=Tensor[(2288, 1), float32] */;
  %1106 = @func_4886() /* ty=int16 */;
  (%1103, %1104, meta[relay.Constant][70] /* ty=Tensor[(224), int16] */, %var_7538, %1105, %1106)
}

def @func_8754() -> (Tensor[(60), float64],) {
  %1107 = @func_8712() /* ty=(Tensor[(196), float64], Tensor[(60), float64], Tensor[(154), float64]) */;
  %1108 = %1107.1;
  (%1108,)
}

def @func_14252() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float64]) {
  %1109 = @func_8232() /* ty=(Tensor[(60), float64],) */;
  %1110 = @func_7277() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %1111 = %1109.0;
  %1112 = %1110.0;
  (%1111, %1112)
}

def @func_14134() -> (int16,) {
  %1113 = @func_9336() /* ty=int16 */;
  (%1113,)
}

def @func_14483() -> (Tensor[(196), float64], Tensor[(60), float64]) {
  %1114 = @func_10536() /* ty=(Tensor[(196), float64],) */;
  %1115 = @func_9122() /* ty=(Tensor[(60), float64], Tensor[(60), float64]) */;
  %1116 = %1114.0;
  %1117 = %1115.1;
  (%1116, %1117)
}

def @func_6098(%var_6083: Tensor[(1440), float64]) -> (Tensor[(60), float64], Tensor[(12, 15, 8), float64], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(7, 2, 9), int16]) {
  %1118 = @func_5272() /* ty=(Tensor[(60), float64],) */;
  %1119 = cast(%var_6083, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %1120 = cast(meta[relay.Constant][72] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %1121 = reshape(%1119, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), float64] */;
  %1122 = reshape(%1120, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %1123 = @func_2517(%1121, %1122) /* ty=(Tensor[(12, 15, 8), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
  %1124 = %1118.0;
  %1125 = cast(%1124, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1126 = cast(meta[relay.Constant][72] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %1127 = reshape(%1125, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %1128 = reshape(%1126, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %1129 = @func_618(%1127, %1128) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) */;
  %1130 = %1123.0;
  %1131 = %1129.1;
  (%1124, %1130, %var_6083, meta[relay.Constant][72] /* ty=Tensor[(126, 1), float32] */, %1131)
}

def @func_7702() -> (Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), float64]) {
  %1132 = @func_4724() /* ty=(Tensor[(60), float64],) */;
  %1133 = @func_7035() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(7, 14, 2), float64]) */;
  %1134 = %1132.0;
  %1135 = @func_5113() /* ty=Tensor[(60), float64] */;
  %1136 = %1133.0;
  (%1134, %1135, %1136)
}

def @func_14082(%var_14057: uint8, %var_14058: Tensor[(10, 8, 15), uint8], %var_14079: Tensor[(154), float64]) -> (Tensor[(10, 8, 15), uint8], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %1137 = cast(%var_14057, dtype="uint8") /* ty=uint8 */;
  %1138 = cast(%var_14058, dtype="uint8") /* ty=Tensor[(10, 8, 15), uint8] */;
  %1139 = cast(%var_14079, dtype="float64") /* ty=Tensor[(154), float64] */;
  %1140 = reshape(%1139, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
  %1141 = left_shift(%1137, %1138) /* ty=Tensor[(10, 8, 15), uint8] */;
  %1142 = @func_1209(%1140) /* ty=Tensor[(11, 7, 2), float64] */;
  (%1141, %1142, %var_14079)
}

def @func_3717(%var_3665: Tensor[(14, 10, 14), uint16]) -> (Tensor[(14, 10, 14), float32], Tensor[(7, 14, 2), float64]) {
  %1143 = cast(meta[relay.Constant][73] /* ty=Tensor[(14, 1, 14), uint16] */, dtype="uint16") /* ty=Tensor[(14, 1, 14), uint16] */;
  %1144 = cast(%var_3665, dtype="uint16") /* ty=Tensor[(14, 10, 14), uint16] */;
  %1145 = bitwise_or(%1143, %1144) /* ty=Tensor[(14, 10, 14), uint16] */;
  %1146 = cast(%var_3665, dtype="float32") /* ty=Tensor[(14, 10, 14), float32] */;
  %1147 = shape_of(%1145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1148 = cast(%1145, dtype="float32") /* ty=Tensor[(14, 10, 14), float32] */;
  %1149 = dyn.reshape(%1146, %1147, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1150 = cast(meta[relay.Constant][73] /* ty=Tensor[(14, 1, 14), uint16] */, dtype="float64") /* ty=Tensor[(14, 1, 14), float64] */;
  %1151 = reshape(%1150, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), float64] */;
  %1152 = floor_divide(%1148, %1149) /* ty=Tensor[(14, 10, 14), float32] */;
  %1153 = @func_2300(%1151) /* ty=Tensor[(7, 14, 2), float64] */;
  (%1152, %1153)
}

def @func_921(%var_916: int16) -> (Tensor[(7, 2, 5), bool],) {
  %1154 = cast(%var_916, dtype="bool") /* ty=bool */;
  %1155 = cast(meta[relay.Constant][74] /* ty=Tensor[(7, 2, 5), int16] */, dtype="bool") /* ty=Tensor[(7, 2, 5), bool] */;
  %1156 = equal(%1154, %1155) /* ty=Tensor[(7, 2, 5), bool] */;
  (%1156,)
}

def @func_9551() -> (int16, Tensor[(60), float64]) {
  %1157 = @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */;
  %1158 = @func_5664() /* ty=(Tensor[(60), float64], int16) */;
  %1159 = %1157.1;
  %1160 = %1158.0;
  (%1159, %1160)
}

def @func_6674() -> (int16,) {
  %1161 = @func_4758() /* ty=int16 */;
  (%1161,)
}

def @func_1209(%var_1193: Tensor[(11, 7, 2), float64]) -> Tensor[(11, 7, 2), float64] {
  %1162 = cast(%var_1193, dtype="float64") /* ty=Tensor[(11, 7, 2), float64] */;
  log2(%1162) /* ty=Tensor[(11, 7, 2), float64] */
}

def @func_11099() -> (Tensor[(7, 2, 5), float64], Tensor[(72), float64], int16) {
  %1163 = @func_10308() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(15, 8, 14), float64]) */;
  %1164 = @func_7735() /* ty=(Tensor[(72), float64],) */;
  %1165 = @func_5906() /* ty=(int16,) */;
  %1166 = %1163.1;
  %1167 = %1164.0;
  %1168 = %1165.0;
  (%1166, %1167, %1168)
}

def @func_15719() -> (Tensor[(7, 2, 5), float64], Tensor[(12, 14, 13), bool]) {
  %1169 = @func_15482() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(2288), uint64]) */;
  %1170 = @func_6125() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %1171 = %1169.0;
  %1172 = %1170.0;
  (%1171, %1172)
}

def @func_6700() -> (int16,) {
  %1173 = @func_4758() /* ty=int16 */;
  (%1173,)
}

def @func_10743(%var_10664: Tensor[(378), int8], %var_10667: Tensor[(72), float64]) -> (Tensor[(60), float64], Tensor[(14, 3, 9), bool], Tensor[(378), int8], Tensor[(2288), uint64], Tensor[(72), float64], int16, Tensor[(60), float64]) {
  %1174 = cast(%var_10664, dtype="int8") /* ty=Tensor[(378), int8] */;
  %1175 = cast(%var_10664, dtype="int8") /* ty=Tensor[(378), int8] */;
  %1176 = reshape(%1174, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int8] */;
  %1177 = reshape(%1175, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int8] */;
  %1178 = cast(%var_10667, dtype="float64") /* ty=Tensor[(72), float64] */;
  %1179 = reshape(%1178, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %1180 = @func_3884(%1179) /* ty=(Tensor[(12, 14, 13), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) */;
  %1181 = @func_5137() /* ty=(Tensor[(7, 2, 5), float64], int16) */;
  %1182 = @func_6210() /* ty=(Tensor[(60), float64],) */;
  %1183 = @func_10617() /* ty=Tensor[(60), float64] */;
  %1184 = @func_4602(%1176, %1177) /* ty=Tensor[(14, 3, 9), bool] */;
  %1185 = %1180.3;
  %1186 = %1181.1;
  %1187 = %1182.0;
  (%1183, %1184, %var_10664, %1185, %var_10667, %1186, %1187)
}

def @func_14722() -> (Tensor[(14, 12, 7), float32],) {
  %1188 = cast(meta[relay.Constant][76] /* ty=Tensor[(14, 12, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 12, 7), float32] */;
  %1189 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(14, 12, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1190 = cast(meta[relay.Constant][75] /* ty=Tensor[(14, 12, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 12, 7), float32] */;
  %1191 = dyn.reshape(%1188, %1189, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1192 = mod(%1190, %1191) /* ty=Tensor[(14, 12, 7), float32] */;
  (%1192,)
}

def @func_5272() -> (Tensor[(60), float64],) {
  %1193 = @func_5211() /* ty=(Tensor[(60), float64],) */;
  %1194 = %1193.0;
  (%1194,)
}

def @func_5427() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float64]) {
  %1195 = @func_5345() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %1196 = @func_5113() /* ty=Tensor[(60), float64] */;
  %1197 = %1195.0;
  (%1196, %1197)
}

def @func_6405() -> (Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) {
  %1198 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
  %1199 = @func_5234() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %1200 = %1198.1;
  %1201 = %1199.0;
  (%1200, %1201)
}

def @func_9756(%var_9749: Tensor[(8, 12, 9), float32], %var_9750: Tensor[(8, 12, 9), float32]) -> Tensor[(8, 12, 9), float32] {
  %1202 = cast(%var_9750, dtype="float32") /* ty=Tensor[(8, 12, 9), float32] */;
  %1203 = shape_of(%var_9749, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1204 = cast(%var_9749, dtype="float32") /* ty=Tensor[(8, 12, 9), float32] */;
  %1205 = dyn.reshape(%1202, %1203, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  maximum(%1204, %1205) /* ty=Tensor[(8, 12, 9), float32] */
}

def @func_12091() -> (Tensor[(8, 6, 12), float64], Tensor[(72), float64]) {
  %1206 = @func_9661() /* ty=(Tensor[(8, 6, 12), float64],) */;
  %1207 = %1206.0;
  %1208 = cast(%1207, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
  %1209 = @func_7735() /* ty=(Tensor[(72), float64],) */;
  %1210 = log(%1208) /* ty=Tensor[(8, 6, 12), float64] */;
  %1211 = %1209.0;
  (%1210, %1211)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7162(%var_7143: Tensor[(7, 2, 5), float64]) -> Tensor[(7, 2, 5), float64] {
  %0 = @func_5345() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %1 = %0.0;
  %2 = cast(%var_7143, dtype="float64") /* ty=Tensor[(7, 2, 5), float64] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%1, dtype="float64") /* ty=Tensor[(7, 2, 5), float64] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%4, %5) /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_9012(%var_8953: Tensor[(378), int8]) -> (Tensor[(72), float64], Tensor[(14, 3, 9), bool], int16, int16, Tensor[(378), bool]) {
  %6 = @func_7735() /* ty=(Tensor[(72), float64],) */;
  %7 = cast(%var_8953, dtype="int8") /* ty=Tensor[(378), int8] */;
  %8 = cast(%var_8953, dtype="int8") /* ty=Tensor[(378), int8] */;
  %9 = reshape(%7, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int8] */;
  %10 = reshape(%8, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int8] */;
  %11 = @func_6674() /* ty=(int16,) */;
  %12 = @func_7067() /* ty=(int16, Tensor[(60), float64]) */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(378), int8] */, dtype="bool") /* ty=Tensor[(378), bool] */;
  %14 = shape_of(%var_8953, dtype="int32") /* ty=Tensor[(1), int32] */;
  %15 = cast(%var_8953, dtype="bool") /* ty=Tensor[(378), bool] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?), bool] */;
  %17 = %6.0;
  %18 = @func_4602(%9, %10) /* ty=Tensor[(14, 3, 9), bool] */;
  %19 = %11.0;
  %20 = %12.0;
  %21 = logical_and(%15, %16) /* ty=Tensor[(378), bool] */;
  (%17, %18, %19, %20, %21)
}

def @func_13495() -> Tensor[(7, 2, 5), float32] {
  %22 = @func_8776() /* ty=(int16, Tensor[(7, 2, 5), float32]) */;
  %22.1
}

def @func_15634() -> int16 {
  %23 = @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */;
  %23.1
}

def @func_12235() -> Tensor[(60), float64] {
  @func_12233() /* ty=Tensor[(60), float64] */
}

def @func_6511() -> Tensor[(12, 14, 13), bool] {
  @func_6509() /* ty=Tensor[(12, 14, 13), bool] */
}

def @func_8616(%var_8614: Tensor[(72, 1), float64], %var_8615: Tensor[(2288), uint64]) -> (int16, Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64]) {
  @func_8612(%var_8614, %var_8615) /* ty=(int16, Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64]) */
}

def @func_7082() -> (int16, Tensor[(72), float64], Tensor[(2288), uint64]) {
  %24 = @func_5137() /* ty=(Tensor[(7, 2, 5), float64], int16) */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %26 = reshape(%25, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %27 = @func_6011(%26) /* ty=(Tensor[(72), float64], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %28 = %24.1;
  %29 = %27.0;
  (%28, %29, meta[relay.Constant][1] /* ty=Tensor[(2288), uint64] */)
}

def @func_8370() -> (Tensor[(12, 14, 13), bool],) {
  %32 = fn () -> (Tensor[(12, 14, 13), bool],) {
    %30 = @func_5191() /* ty=(Tensor[(12, 14, 13), bool],) */;
    %31 = %30.0;
    (%31,)
  };
  %32() /* ty=(Tensor[(12, 14, 13), bool],) */
}

def @func_9154(%var_9153: Tensor[(6, 7, 6), float64]) -> (Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(6, 7, 6), float32]) {
  %41 = fn (%var_9124: Tensor[(6, 7, 6), float64]) -> (Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(6, 7, 6), float32]) {
    %33 = @func_7277() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %34 = @func_8754() /* ty=(Tensor[(60), float64],) */;
    %35 = cast(%var_9124, dtype="float64") /* ty=Tensor[(6, 7, 6), float64] */;
    %36 = acos(%35) /* ty=Tensor[(6, 7, 6), float64] */;
    %37 = cast(%36, dtype="float32") /* ty=Tensor[(6, 7, 6), float32] */;
    %38 = %33.0;
    %39 = %34.0;
    %40 = log10(%37) /* ty=Tensor[(6, 7, 6), float32] */;
    (%38, %39, %40)
  };
  %41(%var_9153) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(6, 7, 6), float32]) */
}

def @func_14001() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), bool]) {
  %42 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %43 = %42.0;
  %44 = cast(%43, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %45 = sin(%44) /* ty=Tensor[(7, 2, 5), float32] */;
  %46 = @func_12200() /* ty=Tensor[(7, 2, 5), bool] */;
  (%45, %46)
}

def @func_15093() -> (Tensor[(588, 126), float32], Tensor[(12, 14, 13), bool]) {
  %50 = fn () -> (Tensor[(588, 126), float32], Tensor[(12, 14, 13), bool]) {
    %47 = @func_7516() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(126), float32], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) */;
    %48 = @func_5939() /* ty=Tensor[(588, 126), float32] */;
    %49 = %47.0;
    (%48, %49)
  };
  %50() /* ty=(Tensor[(588, 126), float32], Tensor[(12, 14, 13), bool]) */
}

def @func_14135() -> (int16,) {
  %52 = fn () -> (int16,) {
    %51 = @func_9336() /* ty=int16 */;
    (%51,)
  };
  %52() /* ty=(int16,) */
}

def @func_14903(%var_14871: Tensor[(7, 2, 5), float32]) -> Tensor[(7, 2, 5), float64] {
  %53 = @func_9492() /* ty=Tensor[(7, 2, 5), float32] */;
  %54 = cast(%var_14871, dtype="uint64") /* ty=Tensor[(7, 2, 5), uint64] */;
  %55 = shape_of(%53, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%53, dtype="uint64") /* ty=Tensor[(7, 2, 5), uint64] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %58 = add(%56, %57) /* ty=Tensor[(7, 2, 5), uint64] */;
  %59 = cast(%58, dtype="float64") /* ty=Tensor[(7, 2, 5), float64] */;
  log10(%59) /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_15673(%var_15657: Tensor[(224), int16]) -> (Tensor[(60), float64], Tensor[(5, 3, 4), bool], Tensor[(224), int16], Tensor[(2288), uint64]) {
  %60 = cast(%var_15657, dtype="int16") /* ty=Tensor[(224), int16] */;
  %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %62 = @func_12233() /* ty=Tensor[(60), float64] */;
  %63 = cast(%62, dtype="float64") /* ty=Tensor[(60), float64] */;
  %64 = reshape(%60, newshape=[7, 8, 4]) /* ty=Tensor[(7, 8, 4), int16] */;
  %65 = reshape(%61, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %66 = reshape(%63, newshape=[30, 2]) /* ty=Tensor[(30, 2), float64] */;
  %67 = @func_3104(%64, %65, %66) /* ty=(Tensor[(7, 8, 4), int16], Tensor[(4, 3, 6), float64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(5, 3, 4), bool], Tensor[(30, 2), float64], Tensor[(126), float32]) */;
  %68 = %67.4;
  (%62, %68, %var_15657, meta[relay.Constant][2] /* ty=Tensor[(2288), uint64] */)
}

def @func_4963() -> (int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) {
  %69 = cast(meta[relay.Constant][4] /* ty=Tensor[(588, 1), bool] */, dtype="bool") /* ty=Tensor[(588, 1), bool] */;
  %70 = cast(meta[relay.Constant][3] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %71 = reshape(%69, newshape=[588, 1]) /* ty=Tensor[(588, 1), bool] */;
  %72 = reshape(%70, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %73 = @func_4476(%71, %72) /* ty=(int16, Tensor[(2288, 1), uint64], Tensor[(588, 1), bool], Tensor[(126), float32], Tensor[(2640), float32]) */;
  %74 = %73.3;
  %75 = cast(%74, dtype="bool") /* ty=Tensor[(126), bool] */;
  %76 = cast(meta[relay.Constant][4] /* ty=Tensor[(588, 1), bool] */, dtype="bool") /* ty=Tensor[(588, 1), bool] */;
  %77 = not_equal(%75, %76) /* ty=Tensor[(588, 126), bool] */;
  %78 = cast(meta[relay.Constant][4] /* ty=Tensor[(588, 1), bool] */, dtype="int64") /* ty=Tensor[(588, 1), int64] */;
  %79 = cast(%77, dtype="int64") /* ty=Tensor[(588, 126), int64] */;
  %80 = cast(meta[relay.Constant][5] /* ty=Tensor[(72, 1), float64] */, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %81 = cast(meta[relay.Constant][6] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %82 = reshape(%80, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float64] */;
  %83 = reshape(%81, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %84 = @func_3045(%82, %83) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
  %85 = @func_4724() /* ty=(Tensor[(60), float64],) */;
  %86 = cast(%77, dtype="float32") /* ty=Tensor[(588, 126), float32] */;
  %87 = asinh(%86) /* ty=Tensor[(588, 126), float32] */;
  %88 = cast(%77, dtype="uint8") /* ty=Tensor[(588, 126), uint8] */;
  %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(2), int32] */;
  %90 = cast(%87, dtype="uint8") /* ty=Tensor[(588, 126), uint8] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %92 = @func_4758() /* ty=int16 */;
  %93 = bitwise_and(%78, %79) /* ty=Tensor[(588, 126), int64] */;
  %94 = %84.2;
  %95 = %85.0;
  %96 = bitwise_xor(%90, %91) /* ty=Tensor[(588, 126), uint8] */;
  (%92, meta[relay.Constant][3] /* ty=Tensor[(126), float32] */, %93, %94, meta[relay.Constant][5] /* ty=Tensor[(72, 1), float64] */, meta[relay.Constant][6] /* ty=Tensor[(2288), uint64] */, %95, %96)
}

def @func_9683() -> (int16, Tensor[(72), float64]) {
  %97 = @func_6700() /* ty=(int16,) */;
  %98 = @func_7082() /* ty=(int16, Tensor[(72), float64], Tensor[(2288), uint64]) */;
  %99 = %97.0;
  %100 = %98.1;
  (%99, %100)
}

def @func_1796(%var_1789: Tensor[(2288), uint64]) -> (Tensor[(3, 7, 15), uint32], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 9), int16], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) {
  %101 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 7, 1), uint32] */, dtype="uint32") /* ty=Tensor[(3, 7, 1), uint32] */;
  %102 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 7, 15), uint32] */, dtype="uint32") /* ty=Tensor[(3, 7, 15), uint32] */;
  %103 = cast(meta[relay.Constant][9] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %104 = cast(meta[relay.Constant][10] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %105 = reshape(%103, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %106 = reshape(%104, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %107 = @func_618(%105, %106) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) */;
  %108 = cast(meta[relay.Constant][10] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %109 = %107.1;
  %110 = cast(%109, dtype="float32") /* ty=Tensor[(7, 2, 9), float32] */;
  %111 = reshape(%108, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %112 = reshape(%110, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %113 = cast(%var_1789, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %114 = cast(%var_1789, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %115 = reshape(%113, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %116 = reshape(%114, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %117 = add(%101, %102) /* ty=Tensor[(3, 7, 15), uint32] */;
  %118 = @func_447(%111, %112) /* ty=Tensor[(7, 2, 9), int16] */;
  %119 = @func_848(%115, %116) /* ty=Tensor[(16, 11, 13), uint64] */;
  (%117, %109, meta[relay.Constant][9] /* ty=Tensor[(60), float64] */, meta[relay.Constant][10] /* ty=Tensor[(126), float32] */, %118, %119, %var_1789)
}

def @func_5192() -> (Tensor[(12, 14, 13), bool],) {
  %122 = fn () -> (Tensor[(12, 14, 13), bool],) {
    %120 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
    %121 = %120.4;
    (%121,)
  };
  %122() /* ty=(Tensor[(12, 14, 13), bool],) */
}

def @func_5213() -> (Tensor[(60), float64],) {
  @func_5211() /* ty=(Tensor[(60), float64],) */
}

def @func_10516(%var_10463: Tensor[(8, 28), int16]) -> (Tensor[(60), float64], Tensor[(5, 3, 4), bool], Tensor[(8, 28), int16], Tensor[(2288), uint64], Tensor[(2288), uint64], Tensor[(16, 11, 13), uint64], Tensor[(7, 2, 5), float64]) {
  %123 = @func_7577() /* ty=(Tensor[(60), float64],) */;
  %124 = cast(%var_10463, dtype="int16") /* ty=Tensor[(8, 28), int16] */;
  %125 = cast(meta[relay.Constant][11] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %126 = %123.0;
  %127 = cast(%126, dtype="float64") /* ty=Tensor[(60), float64] */;
  %128 = reshape(%124, newshape=[7, 8, 4]) /* ty=Tensor[(7, 8, 4), int16] */;
  %129 = reshape(%125, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %130 = reshape(%127, newshape=[30, 2]) /* ty=Tensor[(30, 2), float64] */;
  %131 = @func_3104(%128, %129, %130) /* ty=(Tensor[(7, 8, 4), int16], Tensor[(4, 3, 6), float64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(5, 3, 4), bool], Tensor[(30, 2), float64], Tensor[(126), float32]) */;
  %132 = cast(%var_10463, dtype="int16") /* ty=Tensor[(8, 28), int16] */;
  %133 = cast(meta[relay.Constant][11] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %134 = cast(%126, dtype="float64") /* ty=Tensor[(60), float64] */;
  %135 = reshape(%132, newshape=[16, 14]) /* ty=Tensor[(16, 14), int16] */;
  %136 = reshape(%133, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %137 = reshape(%134, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %138 = @func_4638(%135, %136, %137) /* ty=(int16, Tensor[(4, 3, 6), float64], Tensor[(16, 14), int16], Tensor[(2288), uint64], Tensor[(60), float64]) */;
  %139 = cast(meta[relay.Constant][11] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %140 = cast(meta[relay.Constant][11] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %141 = reshape(%139, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %142 = reshape(%140, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %143 = %131.4;
  %144 = %138.3;
  %145 = @func_848(%141, %142) /* ty=Tensor[(16, 11, 13), uint64] */;
  %146 = @func_9715() /* ty=Tensor[(7, 2, 5), float64] */;
  (%126, %143, %var_10463, meta[relay.Constant][11] /* ty=Tensor[(2288), uint64] */, %144, %145, %146)
}

def @func_8113(%var_8112: Tensor[(16, 16, 16), int16]) -> (Tensor[(16, 16, 16), int16], Tensor[(2288), uint64]) {
  %154 = fn (%var_8090: Tensor[(16, 16, 16), int16]) -> (Tensor[(16, 16, 16), int16], Tensor[(2288), uint64]) {
    %147 = @func_5906() /* ty=(int16,) */;
    %148 = %147.0;
    %149 = cast(%148, dtype="int16") /* ty=int16 */;
    %150 = cast(%var_8090, dtype="int16") /* ty=Tensor[(16, 16, 16), int16] */;
    %151 = @func_4963() /* ty=(int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) */;
    %152 = maximum(%149, %150) /* ty=Tensor[(16, 16, 16), int16] */;
    %153 = %151.5;
    (%152, %153)
  };
  %154(%var_8112) /* ty=(Tensor[(16, 16, 16), int16], Tensor[(2288), uint64]) */
}

def @func_14252() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float64]) {
  %155 = @func_8232() /* ty=(Tensor[(60), float64],) */;
  %156 = @func_7277() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %157 = %155.0;
  %158 = %156.0;
  (%157, %158)
}

def @func_5428() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float64]) {
  %162 = fn () -> (Tensor[(60), float64], Tensor[(7, 2, 5), float64]) {
    %159 = @func_5345() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %160 = @func_5113() /* ty=Tensor[(60), float64] */;
    %161 = %159.0;
    (%160, %161)
  };
  %162() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */
}

def @func_8265(%var_8237: Tensor[(8, 2, 5), float64]) -> (Tensor[(8, 2, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(270), float32], Tensor[(8, 2, 5), float32]) {
  %163 = cast(%var_8237, dtype="float64") /* ty=Tensor[(8, 2, 5), float64] */;
  %164 = acosh(%163) /* ty=Tensor[(8, 2, 5), float64] */;
  %165 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 2, 5), float64] */, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %166 = shape_of(%164, dtype="int32") /* ty=Tensor[(3), int32] */;
  %167 = cast(%164, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %168 = dyn.reshape(%165, %166, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %169 = cast(meta[relay.Constant][13] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %170 = reshape(%169, newshape=[9, 5, 6]) /* ty=Tensor[(9, 5, 6), float32] */;
  %171 = @func_6050(%170) /* ty=(Tensor[(9, 5, 6), float32], int16, Tensor[(7, 2, 5), float64], Tensor[(7, 2, 5), bool]) */;
  %172 = cast(%164, dtype="float32") /* ty=Tensor[(8, 2, 5), float32] */;
  %173 = floor_mod(%167, %168) /* ty=Tensor[(8, 2, 5), float32] */;
  %174 = %171.2;
  %175 = asin(%172) /* ty=Tensor[(8, 2, 5), float32] */;
  (%173, %174, meta[relay.Constant][13] /* ty=Tensor[(270), float32] */, %175)
}

def @func_14459(%var_14457: Tensor[(10, 8, 10), bool], %var_14458: Tensor[(10, 8, 10), bool]) -> (Tensor[(10, 8, 10), bool], Tensor[(7, 2, 5), float64], Tensor[(12, 14, 13), float64]) {
  %185 = fn (%var_14416: Tensor[(10, 8, 10), bool], %var_14417: Tensor[(10, 8, 10), bool]) -> (Tensor[(10, 8, 10), bool], Tensor[(7, 2, 5), float64], Tensor[(12, 14, 13), float64]) {
    %176 = cast(%var_14417, dtype="bool") /* ty=Tensor[(10, 8, 10), bool] */;
    %177 = shape_of(%var_14416, dtype="int32") /* ty=Tensor[(3), int32] */;
    %178 = cast(%var_14416, dtype="bool") /* ty=Tensor[(10, 8, 10), bool] */;
    %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %180 = @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */;
    %181 = @func_13621() /* ty=(Tensor[(12, 14, 13), float64],) */;
    %182 = logical_and(%178, %179) /* ty=Tensor[(10, 8, 10), bool] */;
    %183 = %180.1;
    %184 = %181.0;
    (%182, %183, %184)
  };
  %185(%var_14457, %var_14458) /* ty=(Tensor[(10, 8, 10), bool], Tensor[(7, 2, 5), float64], Tensor[(12, 14, 13), float64]) */
}

def @func_666(%var_664: Tensor[(15, 11, 16), float32]) -> (Tensor[(15, 11, 16), float32], Tensor[(7, 2, 9), int16], Tensor[(126), float32]) {
  @func_663(%var_664) /* ty=(Tensor[(15, 11, 16), float32], Tensor[(7, 2, 9), int16], Tensor[(126), float32]) */
}

def @func_10346() -> Tensor[(12, 16, 11), int64] {
  @func_10344() /* ty=Tensor[(12, 16, 11), int64] */
}

def @func_13247(%var_13246: Tensor[(588, 126), float32]) -> (Tensor[(588, 126), bool], Tensor[(8, 6, 12), float64]) {
  %194 = fn (%var_13222: Tensor[(588, 126), float32]) -> (Tensor[(588, 126), bool], Tensor[(8, 6, 12), float64]) {
    %186 = @func_5939() /* ty=Tensor[(588, 126), float32] */;
    %187 = cast(%var_13222, dtype="bool") /* ty=Tensor[(588, 126), bool] */;
    %188 = shape_of(%186, dtype="int32") /* ty=Tensor[(2), int32] */;
    %189 = cast(%186, dtype="bool") /* ty=Tensor[(588, 126), bool] */;
    %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %191 = @func_12734() /* ty=(Tensor[(8, 6, 12), float64],) */;
    %192 = logical_or(%189, %190) /* ty=Tensor[(588, 126), bool] */;
    %193 = %191.0;
    (%192, %193)
  };
  %194(%var_13246) /* ty=(Tensor[(588, 126), bool], Tensor[(8, 6, 12), float64]) */
}

def @func_10638() -> Tensor[(7, 2, 5), uint32] {
  @func_10636() /* ty=Tensor[(7, 2, 5), uint32] */
}

def @func_5225() -> (Tensor[(7, 2, 5), float64],) {
  @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */
}

def @func_13383(%var_13381: Tensor[(2288), uint64]) -> (Tensor[(7, 2, 5), float32], Tensor[(2288), uint64], Tensor[(2288), uint64]) {
  %195 = cast(%var_13381, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %196 = reshape(%195, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %197 = @func_6011(%196) /* ty=(Tensor[(72), float64], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %198 = @func_9492() /* ty=Tensor[(7, 2, 5), float32] */;
  %199 = %197.2;
  (%198, %199, %var_13381)
}

def @func_451(%var_449: Tensor[(7, 2, 9), float32], %var_450: Tensor[(7, 2, 9), float32]) -> Tensor[(7, 2, 9), int16] {
  @func_447(%var_449, %var_450) /* ty=Tensor[(7, 2, 9), int16] */
}

def @func_10747(%var_10745: Tensor[(378), int8], %var_10746: Tensor[(72), float64]) -> (Tensor[(60), float64], Tensor[(14, 3, 9), bool], Tensor[(378), int8], Tensor[(2288), uint64], Tensor[(72), float64], int16, Tensor[(60), float64]) {
  @func_10743(%var_10745, %var_10746) /* ty=(Tensor[(60), float64], Tensor[(14, 3, 9), bool], Tensor[(378), int8], Tensor[(2288), uint64], Tensor[(72), float64], int16, Tensor[(60), float64]) */
}

def @func_14375(%var_14374: Tensor[(3, 24), float64]) -> (Tensor[(15, 8, 14), float64], Tensor[(2288), uint64], Tensor[(378), int8], Tensor[(3, 24), float64]) {
  %208 = fn (%var_14352: Tensor[(3, 24), float64]) -> (Tensor[(15, 8, 14), float64], Tensor[(2288), uint64], Tensor[(378), int8], Tensor[(3, 24), float64]) {
    %200 = @func_10308() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(15, 8, 14), float64]) */;
    %201 = cast(meta[relay.Constant][14] /* ty=Tensor[(378), int8] */, dtype="int8") /* ty=Tensor[(378), int8] */;
    %202 = cast(%var_14352, dtype="float64") /* ty=Tensor[(3, 24), float64] */;
    %203 = reshape(%201, newshape=[378]) /* ty=Tensor[(378), int8] */;
    %204 = reshape(%202, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %205 = @func_10743(%203, %204) /* ty=(Tensor[(60), float64], Tensor[(14, 3, 9), bool], Tensor[(378), int8], Tensor[(2288), uint64], Tensor[(72), float64], int16, Tensor[(60), float64]) */;
    %206 = %200.2;
    %207 = %205.3;
    (%206, %207, meta[relay.Constant][14] /* ty=Tensor[(378), int8] */, %var_14352)
  };
  %208(%var_14374) /* ty=(Tensor[(15, 8, 14), float64], Tensor[(2288), uint64], Tensor[(378), int8], Tensor[(3, 24), float64]) */
}

def @func_7845(%var_7844: Tensor[(126), float32]) -> (Tensor[(196), float64], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(72), float64]) {
  %215 = fn (%var_7823: Tensor[(126), float32]) -> (Tensor[(196), float64], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(72), float64]) {
    %209 = cast(%var_7823, dtype="float32") /* ty=Tensor[(126), float32] */;
    %210 = reshape(%209, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %211 = @func_4838(%210) /* ty=(int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) */;
    %212 = @func_7608() /* ty=Tensor[(196), float64] */;
    %213 = %211.1;
    %214 = @func_5695() /* ty=Tensor[(72), float64] */;
    (%212, %213, %var_7823, %214)
  };
  %215(%var_7844) /* ty=(Tensor[(196), float64], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(72), float64]) */
}

def @func_14802() -> (Tensor[(72), float64],) {
  %216 = @func_5695() /* ty=Tensor[(72), float64] */;
  (%216,)
}

def @main(%var_15758: Tensor[(351), uint8]) -> (Tensor[(7, 2, 5), bool], Tensor[(60), float64], Tensor[(7, 2, 5), bool], Tensor[(351), int8]) {
  %217 = cast(%var_15758, dtype="uint8") /* ty=Tensor[(351), uint8] */;
  %218 = cast(%var_15758, dtype="uint8") /* ty=Tensor[(351), uint8] */;
  %219 = reshape(%217, newshape=[13, 3, 9]) /* ty=Tensor[(13, 3, 9), uint8] */;
  %220 = reshape(%218, newshape=[13, 3, 9]) /* ty=Tensor[(13, 3, 9), uint8] */;
  %221 = @func_14030(%219, %220) /* ty=(Tensor[(13, 3, 9), uint8], Tensor[(7, 2, 5), bool]) */;
  %222 = cast(meta[relay.Constant][15] /* ty=Tensor[(351), uint8] */, dtype="int8") /* ty=Tensor[(351), int8] */;
  %223 = shape_of(%var_15758, dtype="int32") /* ty=Tensor[(1), int32] */;
  %224 = cast(%var_15758, dtype="int8") /* ty=Tensor[(351), int8] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?), int8] */;
  %226 = @func_12200() /* ty=Tensor[(7, 2, 5), bool] */;
  %227 = @func_14587() /* ty=Tensor[(60), float64] */;
  %228 = %221.1;
  %229 = bitwise_xor(%224, %225) /* ty=Tensor[(351), int8] */;
  (%226, %227, %228, %229)
}

def @func_9929() -> (int16, Tensor[(7, 2, 5), float64]) {
  %233 = fn () -> (int16, Tensor[(7, 2, 5), float64]) {
    %230 = @func_6405() /* ty=(Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */;
    %231 = @func_4886() /* ty=int16 */;
    %232 = %230.1;
    (%231, %232)
  };
  %233() /* ty=(int16, Tensor[(7, 2, 5), float64]) */
}

def @func_10310() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(15, 8, 14), float64]) {
  @func_10308() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(15, 8, 14), float64]) */
}

def @func_13580() -> (Tensor[(588, 126), float32], Tensor[(60), float64]) {
  %237 = fn () -> (Tensor[(588, 126), float32], Tensor[(60), float64]) {
    %234 = @func_10308() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(15, 8, 14), float64]) */;
    %235 = @func_5939() /* ty=Tensor[(588, 126), float32] */;
    %236 = %234.0;
    (%235, %236)
  };
  %237() /* ty=(Tensor[(588, 126), float32], Tensor[(60), float64]) */
}

def @func_7784() -> (Tensor[(72), float64],) {
  %239 = fn () -> (Tensor[(72), float64],) {
    %238 = @func_5695() /* ty=Tensor[(72), float64] */;
    (%238,)
  };
  %239() /* ty=(Tensor[(72), float64],) */
}

def @func_13313() -> int16 {
  @func_13311() /* ty=int16 */
}

def @func_8322() -> Tensor[(2, 1320), float32] {
  %241 = fn () -> Tensor[(2, 1320), float32] {
    %240 = @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */;
    %240.2
  };
  %241() /* ty=Tensor[(2, 1320), float32] */
}

def @func_12348() -> (int16, Tensor[(12, 14, 13), float64]) {
  %242 = @func_9683() /* ty=(int16, Tensor[(72), float64]) */;
  %243 = @func_5865() /* ty=Tensor[(12, 14, 13), bool] */;
  %244 = cast(%243, dtype="float64") /* ty=Tensor[(12, 14, 13), float64] */;
  %245 = %242.0;
  %246 = cosh(%244) /* ty=Tensor[(12, 14, 13), float64] */;
  (%245, %246)
}

def @func_7067() -> (int16, Tensor[(60), float64]) {
  %247 = @func_5664() /* ty=(Tensor[(60), float64], int16) */;
  %248 = @func_6210() /* ty=(Tensor[(60), float64],) */;
  %249 = %247.1;
  %250 = %248.0;
  (%249, %250)
}

def @func_12734() -> (Tensor[(8, 6, 12), float64],) {
  %251 = @func_9661() /* ty=(Tensor[(8, 6, 12), float64],) */;
  %252 = %251.0;
  (%252,)
}

def @func_10743(%var_10664: Tensor[(378), int8], %var_10667: Tensor[(72), float64]) -> (Tensor[(60), float64], Tensor[(14, 3, 9), bool], Tensor[(378), int8], Tensor[(2288), uint64], Tensor[(72), float64], int16, Tensor[(60), float64]) {
  %253 = cast(%var_10664, dtype="int8") /* ty=Tensor[(378), int8] */;
  %254 = cast(%var_10664, dtype="int8") /* ty=Tensor[(378), int8] */;
  %255 = reshape(%253, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int8] */;
  %256 = reshape(%254, newshape=[14, 3, 9]) /* ty=Tensor[(14, 3, 9), int8] */;
  %257 = cast(%var_10667, dtype="float64") /* ty=Tensor[(72), float64] */;
  %258 = reshape(%257, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %259 = @func_3884(%258) /* ty=(Tensor[(12, 14, 13), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) */;
  %260 = @func_5137() /* ty=(Tensor[(7, 2, 5), float64], int16) */;
  %261 = @func_6210() /* ty=(Tensor[(60), float64],) */;
  %262 = @func_10617() /* ty=Tensor[(60), float64] */;
  %263 = @func_4602(%255, %256) /* ty=Tensor[(14, 3, 9), bool] */;
  %264 = %259.3;
  %265 = %260.1;
  %266 = %261.0;
  (%262, %263, %var_10664, %264, %var_10667, %265, %266)
}

def @func_5235() -> (Tensor[(7, 2, 5), float64],) {
  %269 = fn () -> (Tensor[(7, 2, 5), float64],) {
    %267 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %268 = %267.0;
    (%268,)
  };
  %269() /* ty=(Tensor[(7, 2, 5), float64],) */
}

def @func_8895() -> Tensor[(60), float64] {
  %271 = fn () -> Tensor[(60), float64] {
    %270 = @func_7067() /* ty=(int16, Tensor[(60), float64]) */;
    %270.1
  };
  %271() /* ty=Tensor[(60), float64] */
}

def @func_7736() -> (Tensor[(72), float64],) {
  %274 = fn () -> (Tensor[(72), float64],) {
    %272 = @func_7516() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(126), float32], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) */;
    %273 = %272.5;
    (%273,)
  };
  %274() /* ty=(Tensor[(72), float64],) */
}

def @func_14561() -> Tensor[(2, 1320), bool] {
  @func_14559() /* ty=Tensor[(2, 1320), bool] */
}

def @func_11902() -> Tensor[(2, 1320), float32] {
  %276 = fn () -> Tensor[(2, 1320), float32] {
    %275 = @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */;
    %275.2
  };
  %276() /* ty=Tensor[(2, 1320), float32] */
}

def @func_7440() -> Tensor[(7, 2, 5), float64] {
  %277 = @func_7277() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %277.0
}

def @func_10308() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(15, 8, 14), float64]) {
  %278 = @func_8019() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(15, 8, 14), float64], Tensor[(1680), float64], Tensor[(7, 2, 5), float64], int16) */;
  %279 = @func_5372() /* ty=Tensor[(60), float64] */;
  %280 = @func_10246() /* ty=Tensor[(7, 2, 5), float64] */;
  %281 = %278.1;
  (%279, %280, %281)
}

def @func_7442() -> Tensor[(7, 2, 5), float64] {
  @func_7440() /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_8021() -> (Tensor[(12, 14, 13), bool], Tensor[(15, 8, 14), float64], Tensor[(1680), float64], Tensor[(7, 2, 5), float64], int16) {
  @func_8019() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(15, 8, 14), float64], Tensor[(1680), float64], Tensor[(7, 2, 5), float64], int16) */
}

def @func_9015(%var_9013: Tensor[(378), int8]) -> (Tensor[(72), float64], Tensor[(14, 3, 9), bool], int16, int16, Tensor[(378), bool]) {
  @func_9012(%var_9013) /* ty=(Tensor[(72), float64], Tensor[(14, 3, 9), bool], int16, int16, Tensor[(378), bool]) */
}

def @func_15482() -> (Tensor[(7, 2, 5), float64], Tensor[(2288), uint64]) {
  %282 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %283 = @func_6125() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %284 = %282.0;
  %285 = %283.2;
  (%284, %285)
}

def @func_8778() -> (int16, Tensor[(7, 2, 5), float32]) {
  @func_8776() /* ty=(int16, Tensor[(7, 2, 5), float32]) */
}

def @func_6212() -> (Tensor[(60), float64],) {
  @func_6210() /* ty=(Tensor[(60), float64],) */
}

def @func_5273() -> (Tensor[(60), float64],) {
  %288 = fn () -> (Tensor[(60), float64],) {
    %286 = @func_5211() /* ty=(Tensor[(60), float64],) */;
    %287 = %286.0;
    (%287,)
  };
  %288() /* ty=(Tensor[(60), float64],) */
}

def @func_12320(%var_12319: Tensor[(11, 7, 2), float64]) -> (Tensor[(11, 7, 2), float64],) {
  %291 = fn (%var_12312: Tensor[(11, 7, 2), float64]) -> (Tensor[(11, 7, 2), float64],) {
    %289 = cast(%var_12312, dtype="float64") /* ty=Tensor[(11, 7, 2), float64] */;
    %290 = sin(%289) /* ty=Tensor[(11, 7, 2), float64] */;
    (%290,)
  };
  %291(%var_12319) /* ty=(Tensor[(11, 7, 2), float64],) */
}

def @func_15636() -> int16 {
  @func_15634() /* ty=int16 */
}

def @func_9217() -> Tensor[(60), float64] {
  %292 = fn () -> Tensor[(60), float64] {
    @func_5372() /* ty=Tensor[(60), float64] */
  };
  %292() /* ty=Tensor[(60), float64] */
}

def @func_14026(%var_14004: Tensor[(13, 3, 9), uint8], %var_14005: Tensor[(13, 3, 9), uint8]) -> (Tensor[(13, 3, 9), uint8], Tensor[(7, 2, 5), bool]) {
  %293 = cast(%var_14005, dtype="uint8") /* ty=Tensor[(13, 3, 9), uint8] */;
  %294 = shape_of(%var_14004, dtype="int32") /* ty=Tensor[(3), int32] */;
  %295 = cast(%var_14004, dtype="uint8") /* ty=Tensor[(13, 3, 9), uint8] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %297 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
  %298 = subtract(%295, %296) /* ty=Tensor[(13, 3, 9), uint8] */;
  %299 = %297.1;
  (%298, %299)
}

def @func_7661() -> (int16, int16, Tensor[(60), float64]) {
  @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */
}

def @func_3048(%var_3046: Tensor[(4, 3, 6), float64], %var_3047: Tensor[(2288), uint64]) -> (Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) {
  %307 = fn (%var_3032: Tensor[(4, 3, 6), float64], %var_3037: Tensor[(2288), uint64]) -> (Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) {
    %300 = cast(%var_3032, dtype="float64") /* ty=Tensor[(4, 3, 6), float64] */;
    %301 = cast(%var_3037, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
    %302 = cast(%var_3037, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
    %303 = reshape(%301, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
    %304 = reshape(%302, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
    %305 = atan(%300) /* ty=Tensor[(4, 3, 6), float64] */;
    %306 = @func_848(%303, %304) /* ty=Tensor[(16, 11, 13), uint64] */;
    (%305, %306, %var_3037)
  };
  %307(%var_3046, %var_3047) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */
}

def @func_10588() -> (Tensor[(7, 2, 5), int16],) {
  @func_10586() /* ty=(Tensor[(7, 2, 5), int16],) */
}

def @func_11099() -> (Tensor[(7, 2, 5), float64], Tensor[(72), float64], int16) {
  %308 = @func_10308() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(15, 8, 14), float64]) */;
  %309 = @func_7735() /* ty=(Tensor[(72), float64],) */;
  %310 = @func_5906() /* ty=(int16,) */;
  %311 = %308.1;
  %312 = %309.0;
  %313 = %310.0;
  (%311, %312, %313)
}

def @func_10950() -> (Tensor[(60), float64], Tensor[(60), float64], int16, Tensor[(7, 2, 5), float64]) {
  %314 = @func_5272() /* ty=(Tensor[(60), float64],) */;
  %315 = @func_9122() /* ty=(Tensor[(60), float64], Tensor[(60), float64]) */;
  %316 = @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */;
  %317 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %318 = %314.0;
  %319 = %315.0;
  %320 = %316.0;
  %321 = %317.0;
  (%318, %319, %320, %321)
}

def @func_11565() -> (Tensor[(196), float64], Tensor[(2, 1320), bool]) {
  %322 = @func_8712() /* ty=(Tensor[(196), float64], Tensor[(60), float64], Tensor[(154), float64]) */;
  %323 = @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */;
  %324 = %323.2;
  %325 = cast(%324, dtype="float32") /* ty=Tensor[(2, 1320), float32] */;
  %326 = sin(%325) /* ty=Tensor[(2, 1320), float32] */;
  %327 = cast(%326, dtype="bool") /* ty=Tensor[(2, 1320), bool] */;
  %328 = shape_of(%324, dtype="int32") /* ty=Tensor[(2), int32] */;
  %329 = cast(%324, dtype="bool") /* ty=Tensor[(2, 1320), bool] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %331 = %322.0;
  %332 = less(%329, %330) /* ty=Tensor[(2, 1320), bool] */;
  (%331, %332)
}

def @func_11699() -> (Tensor[(7, 2, 5), float64],) {
  %335 = fn () -> (Tensor[(7, 2, 5), float64],) {
    %333 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %334 = %333.0;
    (%334,)
  };
  %335() /* ty=(Tensor[(7, 2, 5), float64],) */
}

def @func_6210() -> (Tensor[(60), float64],) {
  %336 = @func_4724() /* ty=(Tensor[(60), float64],) */;
  %337 = %336.0;
  (%337,)
}

def @func_5807() -> int16 {
  @func_4886() /* ty=int16 */
}

def @func_6562(%var_6561: Tensor[(7, 13, 16), uint64]) -> (Tensor[(7, 13, 16), bool],) {
  %341 = fn (%var_6554: Tensor[(7, 13, 16), uint64]) -> (Tensor[(7, 13, 16), bool],) {
    %338 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 1, 16), uint64] */, dtype="bool") /* ty=Tensor[(7, 1, 16), bool] */;
    %339 = cast(%var_6554, dtype="bool") /* ty=Tensor[(7, 13, 16), bool] */;
    %340 = less(%338, %339) /* ty=Tensor[(7, 13, 16), bool] */;
    (%340,)
  };
  %341(%var_6561) /* ty=(Tensor[(7, 13, 16), bool],) */
}

def @func_12092() -> (Tensor[(8, 6, 12), float64], Tensor[(72), float64]) {
  %348 = fn () -> (Tensor[(8, 6, 12), float64], Tensor[(72), float64]) {
    %342 = @func_9661() /* ty=(Tensor[(8, 6, 12), float64],) */;
    %343 = %342.0;
    %344 = cast(%343, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
    %345 = @func_7735() /* ty=(Tensor[(72), float64],) */;
    %346 = log(%344) /* ty=Tensor[(8, 6, 12), float64] */;
    %347 = %345.0;
    (%346, %347)
  };
  %348() /* ty=(Tensor[(8, 6, 12), float64], Tensor[(72), float64]) */
}

def @func_7555(%var_7554: Tensor[(60), float64]) -> (Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(224), int16], Tensor[(60), float64], Tensor[(2288, 1), float32], int16) {
  %362 = fn (%var_7538: Tensor[(60), float64]) -> (Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(224), int16], Tensor[(60), float64], Tensor[(2288, 1), float32], int16) {
    %349 = @func_5137() /* ty=(Tensor[(7, 2, 5), float64], int16) */;
    %350 = cast(meta[relay.Constant][17] /* ty=Tensor[(224), int16] */, dtype="int16") /* ty=Tensor[(224), int16] */;
    %351 = cast(meta[relay.Constant][18] /* ty=Tensor[(2288, 1), uint64] */, dtype="uint64") /* ty=Tensor[(2288, 1), uint64] */;
    %352 = cast(%var_7538, dtype="float64") /* ty=Tensor[(60), float64] */;
    %353 = reshape(%350, newshape=[16, 14]) /* ty=Tensor[(16, 14), int16] */;
    %354 = reshape(%351, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
    %355 = reshape(%352, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %356 = @func_4638(%353, %354, %355) /* ty=(int16, Tensor[(4, 3, 6), float64], Tensor[(16, 14), int16], Tensor[(2288), uint64], Tensor[(60), float64]) */;
    %357 = cast(meta[relay.Constant][18] /* ty=Tensor[(2288, 1), uint64] */, dtype="float32") /* ty=Tensor[(2288, 1), float32] */;
    %358 = %349.0;
    %359 = %356.4;
    %360 = rsqrt(%357) /* ty=Tensor[(2288, 1), float32] */;
    %361 = @func_4886() /* ty=int16 */;
    (%358, %359, meta[relay.Constant][17] /* ty=Tensor[(224), int16] */, %var_7538, %360, %361)
  };
  %362(%var_7554) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(224), int16], Tensor[(60), float64], Tensor[(2288, 1), float32], int16) */
}

def @func_4759() -> int16 {
  %364 = fn () -> int16 {
    %363 = @func_4446() /* ty=(int16,) */;
    %363.0
  };
  %364() /* ty=int16 */
}

def @func_13423(%var_13421: Tensor[(3, 16, 9), int8], %var_13422: Tensor[(126), int16]) -> (Tensor[(3, 16, 9), int8], Tensor[(7, 2, 9), uint32], Tensor[(1100), float64], Tensor[(126), int16], int16) {
  %380 = fn (%var_13397: Tensor[(3, 16, 9), int8], %var_13403: Tensor[(126), int16]) -> (Tensor[(3, 16, 9), int8], Tensor[(7, 2, 9), uint32], Tensor[(1100), float64], Tensor[(126), int16], int16) {
    %365 = cast(%var_13397, dtype="int8") /* ty=Tensor[(3, 16, 9), int8] */;
    %366 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(3, 16, 9), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %367 = cast(meta[relay.Constant][19] /* ty=Tensor[(3, 16, 9), int8] */, dtype="int8") /* ty=Tensor[(3, 16, 9), int8] */;
    %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %369 = cast(meta[relay.Constant][20] /* ty=Tensor[(1100), float64] */, dtype="float64") /* ty=Tensor[(1100), float64] */;
    %370 = cast(meta[relay.Constant][20] /* ty=Tensor[(1100), float64] */, dtype="float64") /* ty=Tensor[(1100), float64] */;
    %371 = cast(%var_13403, dtype="int16") /* ty=Tensor[(126), int16] */;
    %372 = reshape(%369, newshape=[10, 10, 11]) /* ty=Tensor[(10, 10, 11), float64] */;
    %373 = reshape(%370, newshape=[10, 10, 11]) /* ty=Tensor[(10, 10, 11), float64] */;
    %374 = reshape(%371, newshape=[126]) /* ty=Tensor[(126), int16] */;
    %375 = @func_7391(%372, %373, %374) /* ty=(Tensor[(10, 10, 11), float64], Tensor[(72), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), int16], int16, Tensor[(60), float64], Tensor[(2, 1320), float32]) */;
    %376 = @func_10552() /* ty=(int16,) */;
    %377 = bitwise_or(%367, %368) /* ty=Tensor[(3, 16, 9), int8] */;
    %378 = %375.2;
    %379 = %376.0;
    (%377, %378, meta[relay.Constant][20] /* ty=Tensor[(1100), float64] */, %var_13403, %379)
  };
  %380(%var_13421, %var_13422) /* ty=(Tensor[(3, 16, 9), int8], Tensor[(7, 2, 9), uint32], Tensor[(1100), float64], Tensor[(126), int16], int16) */
}

def @func_13386(%var_13384: Tensor[(2288), uint64]) -> (Tensor[(7, 2, 5), float32], Tensor[(2288), uint64], Tensor[(2288), uint64]) {
  @func_13383(%var_13384) /* ty=(Tensor[(7, 2, 5), float32], Tensor[(2288), uint64], Tensor[(2288), uint64]) */
}

def @func_663(%var_655: Tensor[(15, 11, 16), float32]) -> (Tensor[(15, 11, 16), float32], Tensor[(7, 2, 9), int16], Tensor[(126), float32]) {
  %381 = cast(1.6264f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %382 = cast(%var_655, dtype="float32") /* ty=Tensor[(15, 11, 16), float32] */;
  %383 = cast(meta[relay.Constant][21] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %384 = cast(meta[relay.Constant][21] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %385 = reshape(%383, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %386 = reshape(%384, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %387 = divide(%381, %382) /* ty=Tensor[(15, 11, 16), float32] */;
  %388 = @func_447(%385, %386) /* ty=Tensor[(7, 2, 9), int16] */;
  (%387, %388, meta[relay.Constant][21] /* ty=Tensor[(126), float32] */)
}

def @func_7610() -> Tensor[(196), float64] {
  @func_7608() /* ty=Tensor[(196), float64] */
}

def @func_15719() -> (Tensor[(7, 2, 5), float64], Tensor[(12, 14, 13), bool]) {
  %389 = @func_15482() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(2288), uint64]) */;
  %390 = @func_6125() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %391 = %389.0;
  %392 = %390.0;
  (%391, %392)
}

def @func_5665() -> (Tensor[(60), float64], int16) {
  %396 = fn () -> (Tensor[(60), float64], int16) {
    %393 = @func_5211() /* ty=(Tensor[(60), float64],) */;
    %394 = %393.0;
    %395 = @func_4886() /* ty=int16 */;
    (%394, %395)
  };
  %396() /* ty=(Tensor[(60), float64], int16) */
}

def @func_8713() -> (Tensor[(196), float64], Tensor[(60), float64], Tensor[(154), float64]) {
  %402 = fn () -> (Tensor[(196), float64], Tensor[(60), float64], Tensor[(154), float64]) {
    %397 = @func_7702() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */;
    %398 = @func_6330() /* ty=(Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 5), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
    %399 = @func_7608() /* ty=Tensor[(196), float64] */;
    %400 = %397.1;
    %401 = %398.4;
    (%399, %400, %401)
  };
  %402() /* ty=(Tensor[(196), float64], Tensor[(60), float64], Tensor[(154), float64]) */
}

def @func_7579() -> (Tensor[(60), float64],) {
  @func_7577() /* ty=(Tensor[(60), float64],) */
}

def @func_7084() -> (int16, Tensor[(72), float64], Tensor[(2288), uint64]) {
  @func_7082() /* ty=(int16, Tensor[(72), float64], Tensor[(2288), uint64]) */
}

def @func_14703() -> (Tensor[(72), float64], Tensor[(2, 10, 10), int16], Tensor[(200), float64], Tensor[(7, 2, 5), float32]) {
  %403 = @func_7783() /* ty=(Tensor[(72), float64],) */;
  %404 = cast(meta[relay.Constant][22] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %405 = cast(meta[relay.Constant][22] /* ty=Tensor[(200), float64] */, dtype="float64") /* ty=Tensor[(200), float64] */;
  %406 = reshape(%404, newshape=[2, 10, 10]) /* ty=Tensor[(2, 10, 10), float64] */;
  %407 = reshape(%405, newshape=[2, 10, 10]) /* ty=Tensor[(2, 10, 10), float64] */;
  %408 = @func_910(%406, %407) /* ty=(Tensor[(2, 10, 10), int16],) */;
  %409 = @func_8776() /* ty=(int16, Tensor[(7, 2, 5), float32]) */;
  %410 = %403.0;
  %411 = %408.0;
  %412 = %409.1;
  (%410, %411, meta[relay.Constant][22] /* ty=Tensor[(200), float64] */, %412)
}

def @func_9685() -> (int16, Tensor[(72), float64]) {
  @func_9683() /* ty=(int16, Tensor[(72), float64]) */
}

def @func_910(%var_896: Tensor[(2, 10, 10), float64], %var_906: Tensor[(2, 10, 10), float64]) -> (Tensor[(2, 10, 10), int16],) {
  %413 = cast(%var_896, dtype="float64") /* ty=Tensor[(2, 10, 10), float64] */;
  %414 = log10(%413) /* ty=Tensor[(2, 10, 10), float64] */;
  %415 = cast(%var_906, dtype="int16") /* ty=Tensor[(2, 10, 10), int16] */;
  %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%414, dtype="int16") /* ty=Tensor[(2, 10, 10), int16] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %419 = bitwise_xor(%417, %418) /* ty=Tensor[(2, 10, 10), int16] */;
  (%419,)
}

def @func_11936(%var_11911: Tensor[(2, 1320), float32], %var_11934: Tensor[(8, 286), uint64]) -> (Tensor[(2, 1320), uint16], Tensor[(2, 1320), int64], Tensor[(16, 11, 13), uint64], Tensor[(8, 286), uint64]) {
  %420 = @func_8321() /* ty=Tensor[(2, 1320), float32] */;
  %421 = cast(%var_11911, dtype="uint16") /* ty=Tensor[(2, 1320), uint16] */;
  %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(2), int32] */;
  %423 = cast(%420, dtype="uint16") /* ty=Tensor[(2, 1320), uint16] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %425 = cast(%var_11911, dtype="int64") /* ty=Tensor[(2, 1320), int64] */;
  %426 = shape_of(%420, dtype="int32") /* ty=Tensor[(2), int32] */;
  %427 = cast(%420, dtype="int64") /* ty=Tensor[(2, 1320), int64] */;
  %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %429 = cast(%var_11934, dtype="uint64") /* ty=Tensor[(8, 286), uint64] */;
  %430 = cast(%var_11934, dtype="uint64") /* ty=Tensor[(8, 286), uint64] */;
  %431 = reshape(%429, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %432 = reshape(%430, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
  %433 = left_shift(%423, %424) /* ty=Tensor[(2, 1320), uint16] */;
  %434 = subtract(%427, %428) /* ty=Tensor[(2, 1320), int64] */;
  %435 = @func_848(%431, %432) /* ty=Tensor[(16, 11, 13), uint64] */;
  (%433, %434, %435, %var_11934)
}

def @func_2521(%var_2519: Tensor[(12, 15, 8), float64], %var_2520: Tensor[(126), float32]) -> (Tensor[(12, 15, 8), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) {
  @func_2517(%var_2519, %var_2520) /* ty=(Tensor[(12, 15, 8), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */
}

def @func_6100(%var_6099: Tensor[(1440), float64]) -> (Tensor[(60), float64], Tensor[(12, 15, 8), float64], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(7, 2, 9), int16]) {
  %450 = fn (%var_6083: Tensor[(1440), float64]) -> (Tensor[(60), float64], Tensor[(12, 15, 8), float64], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(7, 2, 9), int16]) {
    %436 = @func_5272() /* ty=(Tensor[(60), float64],) */;
    %437 = cast(%var_6083, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %438 = cast(meta[relay.Constant][23] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
    %439 = reshape(%437, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), float64] */;
    %440 = reshape(%438, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %441 = @func_2517(%439, %440) /* ty=(Tensor[(12, 15, 8), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
    %442 = %436.0;
    %443 = cast(%442, dtype="float64") /* ty=Tensor[(60), float64] */;
    %444 = cast(meta[relay.Constant][23] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
    %445 = reshape(%443, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
    %446 = reshape(%444, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %447 = @func_618(%445, %446) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) */;
    %448 = %441.0;
    %449 = %447.1;
    (%442, %448, %var_6083, meta[relay.Constant][23] /* ty=Tensor[(126, 1), float32] */, %449)
  };
  %450(%var_6099) /* ty=(Tensor[(60), float64], Tensor[(12, 15, 8), float64], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(7, 2, 9), int16]) */
}

def @func_6980() -> (Tensor[(196), float64], Tensor[(7, 14, 2), float64]) {
  %456 = fn () -> (Tensor[(196), float64], Tensor[(7, 14, 2), float64]) {
    %451 = @func_6926() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(7, 14, 2), float64], Tensor[(196), float64]) */;
    %452 = %451.3;
    %453 = cast(%452, dtype="float64") /* ty=Tensor[(196), float64] */;
    %454 = reshape(%453, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), float64] */;
    %455 = @func_2300(%454) /* ty=Tensor[(7, 14, 2), float64] */;
    (%452, %455)
  };
  %456() /* ty=(Tensor[(196), float64], Tensor[(7, 14, 2), float64]) */
}

def @func_14705() -> (Tensor[(72), float64], Tensor[(2, 10, 10), int16], Tensor[(200), float64], Tensor[(7, 2, 5), float32]) {
  @func_14703() /* ty=(Tensor[(72), float64], Tensor[(2, 10, 10), int16], Tensor[(200), float64], Tensor[(7, 2, 5), float32]) */
}

def @func_5867() -> Tensor[(12, 14, 13), bool] {
  @func_5865() /* ty=Tensor[(12, 14, 13), bool] */
}

def @func_6675() -> (int16,) {
  %458 = fn () -> (int16,) {
    %457 = @func_4758() /* ty=int16 */;
    (%457,)
  };
  %458() /* ty=(int16,) */
}

def @func_5372() -> Tensor[(60), float64] {
  @func_5113() /* ty=Tensor[(60), float64] */
}

def @func_11639() -> (Tensor[(7, 2, 5), float64],) {
  %461 = fn () -> (Tensor[(7, 2, 5), float64],) {
    %459 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %460 = %459.0;
    (%460,)
  };
  %461() /* ty=(Tensor[(7, 2, 5), float64],) */
}

def @func_5697() -> Tensor[(72), float64] {
  @func_5695() /* ty=Tensor[(72), float64] */
}

def @func_5809() -> int16 {
  @func_5807() /* ty=int16 */
}

def @func_7703() -> (Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), float64]) {
  %467 = fn () -> (Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), float64]) {
    %462 = @func_4724() /* ty=(Tensor[(60), float64],) */;
    %463 = @func_7035() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(7, 14, 2), float64]) */;
    %464 = %462.0;
    %465 = @func_5113() /* ty=Tensor[(60), float64] */;
    %466 = %463.0;
    (%464, %465, %466)
  };
  %467() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */
}

def @func_12201() -> Tensor[(7, 2, 5), bool] {
  %469 = fn () -> Tensor[(7, 2, 5), bool] {
    %468 = @func_7227() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), bool]) */;
    %468.2
  };
  %469() /* ty=Tensor[(7, 2, 5), bool] */
}

def @func_11940(%var_11938: Tensor[(2, 1320), float32], %var_11939: Tensor[(8, 286), uint64]) -> (Tensor[(2, 1320), uint16], Tensor[(2, 1320), int64], Tensor[(16, 11, 13), uint64], Tensor[(8, 286), uint64]) {
  @func_11936(%var_11938, %var_11939) /* ty=(Tensor[(2, 1320), uint16], Tensor[(2, 1320), int64], Tensor[(16, 11, 13), uint64], Tensor[(8, 286), uint64]) */
}

def @func_5114() -> Tensor[(60), float64] {
  %471 = fn () -> Tensor[(60), float64] {
    %470 = @func_4325() /* ty=(Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
    %470.2
  };
  %471() /* ty=Tensor[(60), float64] */
}

def @func_6330() -> (Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 5), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %472 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
  %473 = @func_5345() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %474 = cast(meta[relay.Constant][24] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
  %475 = reshape(%474, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
  %476 = @func_5372() /* ty=Tensor[(60), float64] */;
  %477 = %472.0;
  %478 = %473.0;
  %479 = @func_1209(%475) /* ty=Tensor[(11, 7, 2), float64] */;
  (%476, %477, %478, %479, meta[relay.Constant][24] /* ty=Tensor[(154), float64] */)
}

def @func_9492() -> Tensor[(7, 2, 5), float32] {
  %480 = @func_9357() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %481 = %480.0;
  %482 = cast(%481, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  cosh(%482) /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_2302(%var_2301: Tensor[(7, 14, 2), float64]) -> Tensor[(7, 14, 2), float64] {
  %484 = fn (%var_2290: Tensor[(7, 14, 2), float64]) -> Tensor[(7, 14, 2), float64] {
    %483 = cast(%var_2290, dtype="float64") /* ty=Tensor[(7, 14, 2), float64] */;
    acosh(%483) /* ty=Tensor[(7, 14, 2), float64] */
  };
  %484(%var_2301) /* ty=Tensor[(7, 14, 2), float64] */
}

def @func_6332() -> (Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 5), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  @func_6330() /* ty=(Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 5), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */
}

def @func_15343() -> (Tensor[(7, 2, 5), float64],) {
  @func_15341() /* ty=(Tensor[(7, 2, 5), float64],) */
}

def @func_6053(%var_6051: Tensor[(9, 5, 6), float32]) -> (Tensor[(9, 5, 6), float32], int16, Tensor[(7, 2, 5), float64], Tensor[(7, 2, 5), bool]) {
  @func_6050(%var_6051) /* ty=(Tensor[(9, 5, 6), float32], int16, Tensor[(7, 2, 5), float64], Tensor[(7, 2, 5), bool]) */
}

def @func_9336() -> int16 {
  %485 = @func_5137() /* ty=(Tensor[(7, 2, 5), float64], int16) */;
  %485.1
}

def @func_11978() -> (Tensor[(196), float64],) {
  %487 = fn () -> (Tensor[(196), float64],) {
    %486 = @func_7608() /* ty=Tensor[(196), float64] */;
    (%486,)
  };
  %487() /* ty=(Tensor[(196), float64],) */
}

def @func_6700() -> (int16,) {
  %488 = @func_4758() /* ty=int16 */;
  (%488,)
}

def @func_13621() -> (Tensor[(12, 14, 13), float64],) {
  %489 = @func_12348() /* ty=(int16, Tensor[(12, 14, 13), float64]) */;
  %490 = %489.1;
  (%490,)
}

def @func_9760(%var_9758: Tensor[(8, 12, 9), float32], %var_9759: Tensor[(8, 12, 9), float32]) -> Tensor[(8, 12, 9), float32] {
  @func_9756(%var_9758, %var_9759) /* ty=Tensor[(8, 12, 9), float32] */
}

def @func_14587() -> Tensor[(60), float64] {
  %491 = @func_6551() /* ty=(Tensor[(15, 11, 16), float32], Tensor[(60), float64]) */;
  %491.1
}

def @func_9867(%var_9836: Tensor[(12, 220), float32], %var_9838: Tensor[(12, 220), float32]) -> (Tensor[(7, 14, 2), float64], Tensor[(1440), float64], Tensor[(12, 220), uint8]) {
  %492 = @func_6926() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(7, 14, 2), float64], Tensor[(196), float64]) */;
  %493 = cast(%var_9836, dtype="float32") /* ty=Tensor[(12, 220), float32] */;
  %494 = reshape(%493, newshape=[2640]) /* ty=Tensor[(2640), float32] */;
  %495 = @func_7316(%494) /* ty=(Tensor[(60), float64], Tensor[(4, 660), float32], Tensor[(588), bool], Tensor[(126, 1), float32], Tensor[(2640), float32], Tensor[(1440), float64]) */;
  %496 = cast(%var_9838, dtype="bool") /* ty=Tensor[(12, 220), bool] */;
  %497 = shape_of(%var_9836, dtype="int32") /* ty=Tensor[(2), int32] */;
  %498 = cast(%var_9836, dtype="bool") /* ty=Tensor[(12, 220), bool] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %500 = not_equal(%498, %499) /* ty=Tensor[(12, 220), bool] */;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(12, 220), float64] */;
  %502 = log2(%501) /* ty=Tensor[(12, 220), float64] */;
  %503 = cast(%500, dtype="bool") /* ty=Tensor[(12, 220), bool] */;
  %504 = shape_of(%var_9836, dtype="int32") /* ty=Tensor[(2), int32] */;
  %505 = cast(%var_9836, dtype="bool") /* ty=Tensor[(12, 220), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %507 = less_equal(%505, %506) /* ty=Tensor[(12, 220), bool] */;
  %508 = cast(%507, dtype="uint8") /* ty=Tensor[(12, 220), uint8] */;
  %509 = shape_of(%502, dtype="int32") /* ty=Tensor[(2), int32] */;
  %510 = cast(%502, dtype="uint8") /* ty=Tensor[(12, 220), uint8] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %512 = %492.2;
  %513 = %495.5;
  %514 = minimum(%510, %511) /* ty=Tensor[(12, 220), uint8] */;
  (%512, %513, %514)
}

def @func_622(%var_620: Tensor[(5, 3, 4), float64], %var_621: Tensor[(126), float32]) -> (Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) {
  @func_618(%var_620, %var_621) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) */
}

def @func_1209(%var_1193: Tensor[(11, 7, 2), float64]) -> Tensor[(11, 7, 2), float64] {
  %515 = cast(%var_1193, dtype="float64") /* ty=Tensor[(11, 7, 2), float64] */;
  log2(%515) /* ty=Tensor[(11, 7, 2), float64] */
}

def @func_914(%var_912: Tensor[(2, 10, 10), float64], %var_913: Tensor[(2, 10, 10), float64]) -> (Tensor[(2, 10, 10), int16],) {
  @func_910(%var_912, %var_913) /* ty=(Tensor[(2, 10, 10), int16],) */
}

def @func_3717(%var_3665: Tensor[(14, 10, 14), uint16]) -> (Tensor[(14, 10, 14), float32], Tensor[(7, 14, 2), float64]) {
  %516 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 1, 14), uint16] */, dtype="uint16") /* ty=Tensor[(14, 1, 14), uint16] */;
  %517 = cast(%var_3665, dtype="uint16") /* ty=Tensor[(14, 10, 14), uint16] */;
  %518 = bitwise_or(%516, %517) /* ty=Tensor[(14, 10, 14), uint16] */;
  %519 = cast(%var_3665, dtype="float32") /* ty=Tensor[(14, 10, 14), float32] */;
  %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%518, dtype="float32") /* ty=Tensor[(14, 10, 14), float32] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %523 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 1, 14), uint16] */, dtype="float64") /* ty=Tensor[(14, 1, 14), float64] */;
  %524 = reshape(%523, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), float64] */;
  %525 = floor_divide(%521, %522) /* ty=Tensor[(14, 10, 14), float32] */;
  %526 = @func_2300(%524) /* ty=Tensor[(7, 14, 2), float64] */;
  (%525, %526)
}

def @func_7396(%var_7393: Tensor[(10, 10, 11), float64], %var_7394: Tensor[(10, 10, 11), float64], %var_7395: Tensor[(126), int16]) -> (Tensor[(10, 10, 11), float64], Tensor[(72), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), int16], int16, Tensor[(60), float64], Tensor[(2, 1320), float32]) {
  @func_7391(%var_7393, %var_7394, %var_7395) /* ty=(Tensor[(10, 10, 11), float64], Tensor[(72), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), int16], int16, Tensor[(60), float64], Tensor[(2, 1320), float32]) */
}

def @func_4386() -> (Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) {
  %527 = @func_4325() /* ty=(Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
  %528 = cast(meta[relay.Constant][26] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %529 = reshape(%528, newshape=[]) /* ty=int16 */;
  %530 = @func_921(%529) /* ty=(Tensor[(7, 2, 5), bool],) */;
  %531 = %527.3;
  %532 = %530.0;
  (%531, %532, meta[relay.Constant][26] /* ty=int16 */)
}

def @func_9072() -> (Tensor[(8, 6, 12), float64], Tensor[(6, 1, 15), uint8], uint8, Tensor[(1, 90), uint8]) {
  @func_9070() /* ty=(Tensor[(8, 6, 12), float64], Tensor[(6, 1, 15), uint8], uint8, Tensor[(1, 90), uint8]) */
}

def @func_10952() -> (Tensor[(60), float64], Tensor[(60), float64], int16, Tensor[(7, 2, 5), float64]) {
  @func_10950() /* ty=(Tensor[(60), float64], Tensor[(60), float64], int16, Tensor[(7, 2, 5), float64]) */
}

def @func_13280(%var_13255: Tensor[(72), float64], %var_13256: Tensor[(2288), uint64]) -> (int16, int16, Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(14, 10, 14), int16]) {
  %533 = @func_7082() /* ty=(int16, Tensor[(72), float64], Tensor[(2288), uint64]) */;
  %534 = cast(%var_13255, dtype="float64") /* ty=Tensor[(72), float64] */;
  %535 = cast(%var_13256, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %536 = reshape(%534, newshape=[72, 1]) /* ty=Tensor[(72, 1), float64] */;
  %537 = reshape(%535, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %538 = @func_8612(%536, %537) /* ty=(int16, Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64]) */;
  %539 = @func_8438() /* ty=(Tensor[(15, 11, 16), float32], Tensor[(14, 10, 14), int16]) */;
  %540 = %533.0;
  %541 = %538.0;
  %542 = %539.1;
  (%540, %541, %var_13255, %var_13256, %542)
}

def @func_14967() -> (Tensor[(7, 2, 5), float64], int16) {
  @func_14965() /* ty=(Tensor[(7, 2, 5), float64], int16) */
}

def @func_5695() -> Tensor[(72), float64] {
  %543 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
  %543.3
}

def @func_9070() -> (Tensor[(8, 6, 12), float64], Tensor[(6, 1, 15), uint8], uint8, Tensor[(1, 90), uint8]) {
  %544 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 6, 12), float64] */, dtype="float64") /* ty=Tensor[(8, 6, 12), float64] */;
  %545 = cast(meta[relay.Constant][28] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %546 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 90), uint8] */, dtype="uint8") /* ty=Tensor[(1, 90), uint8] */;
  %547 = reshape(%545, newshape=[]) /* ty=uint8 */;
  %548 = reshape(%546, newshape=[6, 1, 15]) /* ty=Tensor[(6, 1, 15), uint8] */;
  %549 = @func_7476(%547, %548) /* ty=(Tensor[(6, 1, 15), uint8], Tensor[(6, 1, 15), float64]) */;
  %550 = cosh(%544) /* ty=Tensor[(8, 6, 12), float64] */;
  %551 = %549.0;
  (%550, %551, meta[relay.Constant][28] /* ty=uint8 */, meta[relay.Constant][29] /* ty=Tensor[(1, 90), uint8] */)
}

def @func_7476(%var_7451: uint8, %var_7452: Tensor[(6, 1, 15), uint8]) -> (Tensor[(6, 1, 15), uint8], Tensor[(6, 1, 15), float64]) {
  %552 = cast(%var_7451, dtype="uint8") /* ty=uint8 */;
  %553 = cast(%var_7452, dtype="uint8") /* ty=Tensor[(6, 1, 15), uint8] */;
  %554 = cast(%var_7451, dtype="float64") /* ty=float64 */;
  %555 = cast(%var_7452, dtype="float64") /* ty=Tensor[(6, 1, 15), float64] */;
  %556 = mod(%554, %555) /* ty=Tensor[(6, 1, 15), float64] */;
  %557 = cast(%556, dtype="float64") /* ty=Tensor[(6, 1, 15), float64] */;
  %558 = cast(%var_7451, dtype="float64") /* ty=float64 */;
  %559 = left_shift(%552, %553) /* ty=Tensor[(6, 1, 15), uint8] */;
  %560 = floor_mod(%557, %558) /* ty=Tensor[(6, 1, 15), float64] */;
  (%559, %560)
}

def @func_7517() -> (Tensor[(12, 14, 13), bool], Tensor[(126), float32], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) {
  %575 = fn () -> (Tensor[(12, 14, 13), bool], Tensor[(126), float32], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) {
    %561 = @func_5829() /* ty=(Tensor[(12, 14, 13), bool],) */;
    %562 = cast(meta[relay.Constant][30] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %563 = cast(meta[relay.Constant][31] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %564 = reshape(%562, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), float64] */;
    %565 = reshape(%563, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %566 = @func_2517(%564, %565) /* ty=(Tensor[(12, 15, 8), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
    %567 = cast(meta[relay.Constant][32] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %568 = cast(meta[relay.Constant][33] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
    %569 = reshape(%567, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float64] */;
    %570 = reshape(%568, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
    %571 = @func_3045(%569, %570) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
    %572 = %561.0;
    %573 = %566.3;
    %574 = %571.1;
    (%572, %573, meta[relay.Constant][30] /* ty=Tensor[(1440), float64] */, meta[relay.Constant][31] /* ty=Tensor[(126), float32] */, %574, meta[relay.Constant][32] /* ty=Tensor[(72), float64] */, meta[relay.Constant][33] /* ty=Tensor[(2288), uint64] */)
  };
  %575() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(126), float32], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) */
}

def @func_13164() -> int16 {
  %576 = fn () -> int16 {
    @func_5807() /* ty=int16 */
  };
  %576() /* ty=int16 */
}

def @func_7279() -> (Tensor[(7, 2, 5), float64],) {
  @func_7277() /* ty=(Tensor[(7, 2, 5), float64],) */
}

def @func_11831(%var_11829: Tensor[(15, 3, 4), float32]) -> (Tensor[(15, 3, 4), float32],) {
  @func_11828(%var_11829) /* ty=(Tensor[(15, 3, 4), float32],) */
}

def @func_10192(%var_10191: Tensor[(126), float32]) -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float64], int16, Tensor[(126), float32], Tensor[(2640), float32], Tensor[(72, 2640), int16], Tensor[(72, ?), bool]) {
  %603 = fn (%var_10119: Tensor[(126), float32]) -> (Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float64], int16, Tensor[(126), float32], Tensor[(2640), float32], Tensor[(72, 2640), int16], Tensor[(72, ?), bool]) {
    %577 = @func_6330() /* ty=(Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 5), float64], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */;
    %578 = @func_7702() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */;
    %579 = cast(%var_10119, dtype="float32") /* ty=Tensor[(126), float32] */;
    %580 = reshape(%579, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %581 = @func_4838(%580) /* ty=(int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) */;
    %582 = cast(meta[relay.Constant][34] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
    %583 = reshape(%582, newshape=[2640]) /* ty=Tensor[(2640), float32] */;
    %584 = @func_7316(%583) /* ty=(Tensor[(60), float64], Tensor[(4, 660), float32], Tensor[(588), bool], Tensor[(126, 1), float32], Tensor[(2640), float32], Tensor[(1440), float64]) */;
    %585 = %584.4;
    %586 = @func_4963() /* ty=(int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) */;
    %587 = %586.4;
    %588 = cast(%585, dtype="int16") /* ty=Tensor[(2640), int16] */;
    %589 = cast(%587, dtype="int16") /* ty=Tensor[(72, 1), int16] */;
    %590 = cast(%587, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
    %591 = atan(%590) /* ty=Tensor[(72, 1), float32] */;
    %592 = @func_7783() /* ty=(Tensor[(72), float64],) */;
    %593 = %592.0;
    %594 = cast(%593, dtype="bool") /* ty=Tensor[(72), bool] */;
    %595 = shape_of(%591, dtype="int32") /* ty=Tensor[(2), int32] */;
    %596 = cast(%591, dtype="bool") /* ty=Tensor[(72, 1), bool] */;
    %597 = dyn.reshape(%594, %595, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %598 = %577.3;
    %599 = %578.2;
    %600 = %581.0;
    %601 = bitwise_or(%588, %589) /* ty=Tensor[(72, 2640), int16] */;
    %602 = not_equal(%596, %597) /* ty=Tensor[(72, ?), bool] */;
    (%598, %599, %600, %var_10119, meta[relay.Constant][34] /* ty=Tensor[(2640), float32] */, %601, %602)
  };
  %603(%var_10191) /* ty=(Tensor[(11, 7, 2), float64], Tensor[(7, 2, 5), float64], int16, Tensor[(126), float32], Tensor[(2640), float32], Tensor[(72, 2640), int16], Tensor[(72, ?), bool]) */
}

def @func_13497() -> Tensor[(7, 2, 5), float32] {
  @func_13495() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_5729(%var_5728: Tensor[(3, 12, 14), float64]) -> (Tensor[(3, 12, 14), bool],) {
  %611 = fn (%var_5708: Tensor[(3, 12, 14), float64]) -> (Tensor[(3, 12, 14), bool],) {
    %604 = cast(%var_5708, dtype="float64") /* ty=Tensor[(3, 12, 14), float64] */;
    %605 = log(%604) /* ty=Tensor[(3, 12, 14), float64] */;
    %606 = cast(%605, dtype="bool") /* ty=Tensor[(3, 12, 14), bool] */;
    %607 = shape_of(%var_5708, dtype="int32") /* ty=Tensor[(3), int32] */;
    %608 = cast(%var_5708, dtype="bool") /* ty=Tensor[(3, 12, 14), bool] */;
    %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %610 = logical_and(%608, %609) /* ty=Tensor[(3, 12, 14), bool] */;
    (%610,)
  };
  %611(%var_5728) /* ty=(Tensor[(3, 12, 14), bool],) */
}

def @func_11159() -> Tensor[(12, 14, 13), bool] {
  %612 = @func_5191() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %612.0
}

def @func_14649(%var_14647: Tensor[(588, 126), float32]) -> (Tensor[(588, 126), bool], Tensor[(588, 126), float32]) {
  @func_14646(%var_14647) /* ty=(Tensor[(588, 126), bool], Tensor[(588, 126), float32]) */
}

def @func_12736() -> (Tensor[(8, 6, 12), float64],) {
  @func_12734() /* ty=(Tensor[(8, 6, 12), float64],) */
}

def @func_6482(%var_6481: Tensor[(2288), uint64]) -> (Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(2288), uint64]) {
  %619 = fn (%var_6463: Tensor[(2288), uint64]) -> (Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(2288), uint64]) {
    %613 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %614 = cast(%var_6463, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
    %615 = reshape(%614, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
    %616 = @func_6011(%615) /* ty=(Tensor[(72), float64], Tensor[(60), float64], Tensor[(2288), uint64]) */;
    %617 = %613.0;
    %618 = %616.1;
    (%617, %618, %var_6463)
  };
  %619(%var_6481) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(2288), uint64]) */
}

def @func_6801() -> (int16,) {
  %622 = fn () -> (int16,) {
    %620 = @func_5664() /* ty=(Tensor[(60), float64], int16) */;
    %621 = %620.1;
    (%621,)
  };
  %622() /* ty=(int16,) */
}

def @func_14559() -> Tensor[(2, 1320), bool] {
  %623 = @func_11565() /* ty=(Tensor[(196), float64], Tensor[(2, 1320), bool]) */;
  %623.1
}

def @func_15484() -> (Tensor[(7, 2, 5), float64], Tensor[(2288), uint64]) {
  @func_15482() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(2288), uint64]) */
}

def @func_14906(%var_14904: Tensor[(7, 2, 5), float32]) -> Tensor[(7, 2, 5), float64] {
  @func_14903(%var_14904) /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_15165() -> (Tensor[(196), float64],) {
  @func_15163() /* ty=(Tensor[(196), float64],) */
}

def @func_14254() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float64]) {
  @func_14252() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */
}

def @func_6702() -> (int16,) {
  @func_6700() /* ty=(int16,) */
}

def @func_12521(%var_12519: Tensor[(8, 6, 12), float64]) -> (Tensor[(8, 6, 12), float32], Tensor[(60), float64], Tensor[(252), float64]) {
  @func_12518(%var_12519) /* ty=(Tensor[(8, 6, 12), float32], Tensor[(60), float64], Tensor[(252), float64]) */
}

def @func_9871(%var_9869: Tensor[(12, 220), float32], %var_9870: Tensor[(12, 220), float32]) -> (Tensor[(7, 14, 2), float64], Tensor[(1440), float64], Tensor[(12, 220), uint8]) {
  @func_9867(%var_9869, %var_9870) /* ty=(Tensor[(7, 14, 2), float64], Tensor[(1440), float64], Tensor[(12, 220), uint8]) */
}

def @func_10553() -> (int16,) {
  %626 = fn () -> (int16,) {
    %624 = @func_4446() /* ty=(int16,) */;
    %625 = %624.0;
    (%625,)
  };
  %626() /* ty=(int16,) */
}

def @func_3720(%var_3718: Tensor[(14, 10, 14), uint16]) -> (Tensor[(14, 10, 14), float32], Tensor[(7, 14, 2), float64]) {
  @func_3717(%var_3718) /* ty=(Tensor[(14, 10, 14), float32], Tensor[(7, 14, 2), float64]) */
}

def @func_9211(%var_9209: Tensor[(588, 126), int64], %var_9210: Tensor[(588, 126), bool]) -> (Tensor[(12, 14, 13), bool], Tensor[(588, 126), int32]) {
  %641 = fn (%var_9198: Tensor[(588, 126), int64], %var_9203: Tensor[(588, 126), bool]) -> (Tensor[(12, 14, 13), bool], Tensor[(588, 126), int32]) {
    %627 = @func_8369() /* ty=(Tensor[(12, 14, 13), bool],) */;
    %628 = @func_4963() /* ty=(int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) */;
    %629 = %628.2;
    %630 = cast(%var_9198, dtype="bool") /* ty=Tensor[(588, 126), bool] */;
    %631 = shape_of(%629, dtype="int32") /* ty=Tensor[(2), int32] */;
    %632 = cast(%629, dtype="bool") /* ty=Tensor[(588, 126), bool] */;
    %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %634 = less(%632, %633) /* ty=Tensor[(588, 126), bool] */;
    %635 = cast(%var_9203, dtype="int32") /* ty=Tensor[(588, 126), int32] */;
    %636 = shape_of(%634, dtype="int32") /* ty=Tensor[(2), int32] */;
    %637 = cast(%634, dtype="int32") /* ty=Tensor[(588, 126), int32] */;
    %638 = dyn.reshape(%635, %636, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %639 = %627.0;
    %640 = subtract(%637, %638) /* ty=Tensor[(588, 126), int32] */;
    (%639, %640)
  };
  %641(%var_9209, %var_9210) /* ty=(Tensor[(12, 14, 13), bool], Tensor[(588, 126), int32]) */
}

def @func_14030(%var_14028: Tensor[(13, 3, 9), uint8], %var_14029: Tensor[(13, 3, 9), uint8]) -> (Tensor[(13, 3, 9), uint8], Tensor[(7, 2, 5), bool]) {
  @func_14026(%var_14028, %var_14029) /* ty=(Tensor[(13, 3, 9), uint8], Tensor[(7, 2, 5), bool]) */
}

def @func_10636() -> Tensor[(7, 2, 5), uint32] {
  %642 = @func_9413() /* ty=(Tensor[(7, 2, 5), uint32],) */;
  %642.0
}

def @func_11192() -> Tensor[(2, 1320), uint8] {
  %649 = fn () -> Tensor[(2, 1320), uint8] {
    %643 = @func_10086() /* ty=(Tensor[(12, 14, 13), uint8], int16) */;
    %644 = %643.1;
    %645 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
    %646 = %645.2;
    %647 = cast(%644, dtype="uint8") /* ty=uint8 */;
    %648 = cast(%646, dtype="uint8") /* ty=Tensor[(2, 1320), uint8] */;
    bitwise_xor(%647, %648) /* ty=Tensor[(2, 1320), uint8] */
  };
  %649() /* ty=Tensor[(2, 1320), uint8] */
}

def @func_14722() -> (Tensor[(14, 12, 7), float32],) {
  %650 = cast(meta[relay.Constant][36] /* ty=Tensor[(14, 12, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 12, 7), float32] */;
  %651 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(14, 12, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(meta[relay.Constant][35] /* ty=Tensor[(14, 12, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 12, 7), float32] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %654 = mod(%652, %653) /* ty=Tensor[(14, 12, 7), float32] */;
  (%654,)
}

def @func_12980() -> (Tensor[(60), float64],) {
  %657 = fn () -> (Tensor[(60), float64],) {
    %655 = @func_4724() /* ty=(Tensor[(60), float64],) */;
    %656 = %655.0;
    (%656,)
  };
  %657() /* ty=(Tensor[(60), float64],) */
}

def @func_7480(%var_7478: uint8, %var_7479: Tensor[(6, 1, 15), uint8]) -> (Tensor[(6, 1, 15), uint8], Tensor[(6, 1, 15), float64]) {
  @func_7476(%var_7478, %var_7479) /* ty=(Tensor[(6, 1, 15), uint8], Tensor[(6, 1, 15), float64]) */
}

def @func_11801() -> Tensor[(7, 2, 5), float64] {
  @func_11799() /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_13623() -> (Tensor[(12, 14, 13), float64],) {
  @func_13621() /* ty=(Tensor[(12, 14, 13), float64],) */
}

def @func_14804() -> (Tensor[(72), float64],) {
  @func_14802() /* ty=(Tensor[(72), float64],) */
}

def @func_13688(%var_13685: Tensor[(180), float32], %var_13686: Tensor[(1456), uint64], %var_13687: Tensor[(2288), uint64]) -> (Tensor[(72), float64], Tensor[(15, 3, 4), float32], Tensor[(180), float32], Tensor[(7, 13, 16), bool], Tensor[(1456), uint64], int16, Tensor[(2288), uint64]) {
  %674 = fn (%var_13633: Tensor[(180), float32], %var_13652: Tensor[(1456), uint64], %var_13668: Tensor[(2288), uint64]) -> (Tensor[(72), float64], Tensor[(15, 3, 4), float32], Tensor[(180), float32], Tensor[(7, 13, 16), bool], Tensor[(1456), uint64], int16, Tensor[(2288), uint64]) {
    %658 = @func_13193() /* ty=(Tensor[(72), float64],) */;
    %659 = cast(%var_13633, dtype="float32") /* ty=Tensor[(180), float32] */;
    %660 = reshape(%659, newshape=[15, 3, 4]) /* ty=Tensor[(15, 3, 4), float32] */;
    %661 = @func_11828(%660) /* ty=(Tensor[(15, 3, 4), float32],) */;
    %662 = cast(%var_13652, dtype="uint64") /* ty=Tensor[(1456), uint64] */;
    %663 = reshape(%662, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), uint64] */;
    %664 = @func_6560(%663) /* ty=(Tensor[(7, 13, 16), bool],) */;
    %665 = %658.0;
    %666 = cast(%665, dtype="float64") /* ty=Tensor[(72), float64] */;
    %667 = cast(%var_13668, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
    %668 = reshape(%666, newshape=[72]) /* ty=Tensor[(72), float64] */;
    %669 = reshape(%667, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
    %670 = @func_13280(%668, %669) /* ty=(int16, int16, Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(14, 10, 14), int16]) */;
    %671 = %661.0;
    %672 = %664.0;
    %673 = %670.1;
    (%665, %671, %var_13633, %672, %var_13652, %673, %var_13668)
  };
  %674(%var_13685, %var_13686, %var_13687) /* ty=(Tensor[(72), float64], Tensor[(15, 3, 4), float32], Tensor[(180), float32], Tensor[(7, 13, 16), bool], Tensor[(1456), uint64], int16, Tensor[(2288), uint64]) */
}

def @func_15310(%var_15252: Tensor[(200, 1), float64]) -> (int16, Tensor[(2, 10, 10), int16], Tensor[(200, 1), float64], Tensor[(7, 2, 5), float64], Tensor[(7, 14, 2), float64]) {
  %675 = cast(%var_15252, dtype="float64") /* ty=Tensor[(200, 1), float64] */;
  %676 = cast(%var_15252, dtype="float64") /* ty=Tensor[(200, 1), float64] */;
  %677 = reshape(%675, newshape=[2, 10, 10]) /* ty=Tensor[(2, 10, 10), float64] */;
  %678 = reshape(%676, newshape=[2, 10, 10]) /* ty=Tensor[(2, 10, 10), float64] */;
  %679 = @func_910(%677, %678) /* ty=(Tensor[(2, 10, 10), int16],) */;
  %680 = @func_7277() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %681 = @func_6979() /* ty=(Tensor[(196), float64], Tensor[(7, 14, 2), float64]) */;
  %682 = @func_9336() /* ty=int16 */;
  %683 = %679.0;
  %684 = %680.0;
  %685 = %681.1;
  (%682, %683, %var_15252, %684, %685)
}

def @func_8233() -> (Tensor[(60), float64],) {
  %688 = fn () -> (Tensor[(60), float64],) {
    %686 = @func_6125() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */;
    %687 = %686.1;
    (%687,)
  };
  %688() /* ty=(Tensor[(60), float64],) */
}

def @func_8754() -> (Tensor[(60), float64],) {
  %689 = @func_8712() /* ty=(Tensor[(196), float64], Tensor[(60), float64], Tensor[(154), float64]) */;
  %690 = %689.1;
  (%690,)
}

def @func_4388() -> (Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) {
  @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */
}

def @func_8294() -> int16 {
  %692 = fn () -> int16 {
    %691 = @func_6700() /* ty=(int16,) */;
    %691.0
  };
  %692() /* ty=int16 */
}

def @func_3338(%var_3335: Tensor[(7, 7, 12), bool], %var_3336: Tensor[(126, 1), float32], %var_3337: Tensor[(4, 660), float32]) -> (Tensor[(7, 7, 12), bool], Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(16, 11, 13), uint64], Tensor[(2288, 1), uint64], Tensor[(7, 2, 9), int16], Tensor[(4, 660), float32]) {
  %713 = fn (%var_3302: Tensor[(7, 7, 12), bool], %var_3310: Tensor[(126, 1), float32], %var_3323: Tensor[(4, 660), float32]) -> (Tensor[(7, 7, 12), bool], Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(16, 11, 13), uint64], Tensor[(2288, 1), uint64], Tensor[(7, 2, 9), int16], Tensor[(4, 660), float32]) {
    %693 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 7, 12), bool] */, dtype="bool") /* ty=Tensor[(7, 7, 12), bool] */;
    %694 = shape_of(%var_3302, dtype="int32") /* ty=Tensor[(3), int32] */;
    %695 = cast(%var_3302, dtype="bool") /* ty=Tensor[(7, 7, 12), bool] */;
    %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %697 = cast(meta[relay.Constant][38] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %698 = cast(%var_3310, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
    %699 = reshape(%697, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), float64] */;
    %700 = reshape(%698, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %701 = @func_2517(%699, %700) /* ty=(Tensor[(12, 15, 8), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
    %702 = cast(meta[relay.Constant][39] /* ty=Tensor[(2288, 1), uint64] */, dtype="uint64") /* ty=Tensor[(2288, 1), uint64] */;
    %703 = cast(meta[relay.Constant][39] /* ty=Tensor[(2288, 1), uint64] */, dtype="uint64") /* ty=Tensor[(2288, 1), uint64] */;
    %704 = reshape(%702, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
    %705 = reshape(%703, newshape=[16, 11, 13]) /* ty=Tensor[(16, 11, 13), uint64] */;
    %706 = cast(%var_3323, dtype="float32") /* ty=Tensor[(4, 660), float32] */;
    %707 = reshape(%706, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float32] */;
    %708 = @func_663(%707) /* ty=(Tensor[(15, 11, 16), float32], Tensor[(7, 2, 9), int16], Tensor[(126), float32]) */;
    %709 = logical_or(%695, %696) /* ty=Tensor[(7, 7, 12), bool] */;
    %710 = %701.1;
    %711 = @func_848(%704, %705) /* ty=Tensor[(16, 11, 13), uint64] */;
    %712 = %708.1;
    (%709, %710, meta[relay.Constant][38] /* ty=Tensor[(1440), float64] */, %var_3310, %711, meta[relay.Constant][39] /* ty=Tensor[(2288, 1), uint64] */, %712, %var_3323)
  };
  %713(%var_3335, %var_3336, %var_3337) /* ty=(Tensor[(7, 7, 12), bool], Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(16, 11, 13), uint64], Tensor[(2288, 1), uint64], Tensor[(7, 2, 9), int16], Tensor[(4, 660), float32]) */
}

def @func_10536() -> (Tensor[(196), float64],) {
  %714 = @func_7608() /* ty=Tensor[(196), float64] */;
  (%714,)
}

def @func_3886(%var_3885: Tensor[(72), float64]) -> (Tensor[(12, 14, 13), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) {
  %723 = fn (%var_3881: Tensor[(72), float64]) -> (Tensor[(12, 14, 13), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) {
    %715 = cast(meta[relay.Constant][40] /* ty=Tensor[(12, 14, 13), float32] */, dtype="float32") /* ty=Tensor[(12, 14, 13), float32] */;
    %716 = cast(%var_3881, dtype="float64") /* ty=Tensor[(72), float64] */;
    %717 = cast(meta[relay.Constant][41] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
    %718 = reshape(%716, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float64] */;
    %719 = reshape(%717, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
    %720 = @func_3045(%718, %719) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
    %721 = exp(%715) /* ty=Tensor[(12, 14, 13), float32] */;
    %722 = %720.1;
    (%721, %722, %var_3881, meta[relay.Constant][41] /* ty=Tensor[(2288), uint64] */)
  };
  %723(%var_3885) /* ty=(Tensor[(12, 14, 13), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) */
}

def @func_10519(%var_10517: Tensor[(8, 28), int16]) -> (Tensor[(60), float64], Tensor[(5, 3, 4), bool], Tensor[(8, 28), int16], Tensor[(2288), uint64], Tensor[(2288), uint64], Tensor[(16, 11, 13), uint64], Tensor[(7, 2, 5), float64]) {
  @func_10516(%var_10517) /* ty=(Tensor[(60), float64], Tensor[(5, 3, 4), bool], Tensor[(8, 28), int16], Tensor[(2288), uint64], Tensor[(2288), uint64], Tensor[(16, 11, 13), uint64], Tensor[(7, 2, 5), float64]) */
}

def @func_12886() -> Tensor[(7, 2, 5), float64] {
  %725 = fn () -> Tensor[(7, 2, 5), float64] {
    %724 = @func_11638() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %724.0
  };
  %725() /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_7391(%var_7336: Tensor[(10, 10, 11), float64], %var_7337: Tensor[(10, 10, 11), float64], %var_7351: Tensor[(126), int16]) -> (Tensor[(10, 10, 11), float64], Tensor[(72), float64], Tensor[(7, 2, 9), uint32], Tensor[(126), int16], int16, Tensor[(60), float64], Tensor[(2, 1320), float32]) {
  %726 = cast(%var_7337, dtype="float64") /* ty=Tensor[(10, 10, 11), float64] */;
  %727 = shape_of(%var_7336, dtype="int32") /* ty=Tensor[(3), int32] */;
  %728 = cast(%var_7336, dtype="float64") /* ty=Tensor[(10, 10, 11), float64] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %730 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
  %731 = cast(%var_7351, dtype="int16") /* ty=Tensor[(126), int16] */;
  %732 = reshape(%731, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), int16] */;
  %733 = @func_4584(%732) /* ty=(Tensor[(7, 2, 9), uint32],) */;
  %734 = @func_6700() /* ty=(int16,) */;
  %735 = @func_7067() /* ty=(int16, Tensor[(60), float64]) */;
  %736 = @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */;
  %737 = divide(%728, %729) /* ty=Tensor[(10, 10, 11), float64] */;
  %738 = %730.3;
  %739 = %733.0;
  %740 = %734.0;
  %741 = %735.1;
  %742 = %736.2;
  (%737, %738, %739, %var_7351, %740, %741, %742)
}

def @func_4606(%var_4604: Tensor[(14, 3, 9), int8], %var_4605: Tensor[(14, 3, 9), int8]) -> Tensor[(14, 3, 9), bool] {
  @func_4602(%var_4604, %var_4605) /* ty=Tensor[(14, 3, 9), bool] */
}

def @func_15433(%var_15431: Tensor[(3, 42), float32], %var_15432: Tensor[(351), uint8]) -> (Tensor[(12, 14, 13), bool], Tensor[(2288), uint64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(13, 3, 9), uint8], Tensor[(351), uint8], Tensor[(3, 42), bool]) {
  %764 = fn (%var_15401: Tensor[(3, 42), float32], %var_15416: Tensor[(351), uint8]) -> (Tensor[(12, 14, 13), bool], Tensor[(2288), uint64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(13, 3, 9), uint8], Tensor[(351), uint8], Tensor[(3, 42), bool]) {
    %743 = @func_9273() /* ty=(Tensor[(12, 14, 13), bool],) */;
    %744 = cast(meta[relay.Constant][42] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %745 = cast(meta[relay.Constant][43] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
    %746 = reshape(%744, newshape=[72, 1]) /* ty=Tensor[(72, 1), float64] */;
    %747 = reshape(%745, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
    %748 = @func_8612(%746, %747) /* ty=(int16, Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64]) */;
    %749 = cast(%var_15416, dtype="uint8") /* ty=Tensor[(351), uint8] */;
    %750 = cast(%var_15416, dtype="uint8") /* ty=Tensor[(351), uint8] */;
    %751 = reshape(%749, newshape=[13, 3, 9]) /* ty=Tensor[(13, 3, 9), uint8] */;
    %752 = reshape(%750, newshape=[13, 3, 9]) /* ty=Tensor[(13, 3, 9), uint8] */;
    %753 = @func_14026(%751, %752) /* ty=(Tensor[(13, 3, 9), uint8], Tensor[(7, 2, 5), bool]) */;
    %754 = cast(%var_15401, dtype="float32") /* ty=Tensor[(3, 42), float32] */;
    %755 = reshape(%754, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %756 = @func_4838(%755) /* ty=(int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) */;
    %757 = %756.0;
    %758 = cast(%var_15401, dtype="bool") /* ty=Tensor[(3, 42), bool] */;
    %759 = cast(%757, dtype="bool") /* ty=bool */;
    %760 = %743.0;
    %761 = %748.1;
    %762 = %753.0;
    %763 = greater_equal(%758, %759) /* ty=Tensor[(3, 42), bool] */;
    (%760, %761, meta[relay.Constant][42] /* ty=Tensor[(72), float64] */, meta[relay.Constant][43] /* ty=Tensor[(2288), uint64] */, %762, %var_15416, %763)
  };
  %764(%var_15431, %var_15432) /* ty=(Tensor[(12, 14, 13), bool], Tensor[(2288), uint64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(13, 3, 9), uint8], Tensor[(351), uint8], Tensor[(3, 42), bool]) */
}

def @func_923(%var_922: int16) -> (Tensor[(7, 2, 5), bool],) {
  %768 = fn (%var_916: int16) -> (Tensor[(7, 2, 5), bool],) {
    %765 = cast(%var_916, dtype="bool") /* ty=bool */;
    %766 = cast(meta[relay.Constant][44] /* ty=Tensor[(7, 2, 5), int16] */, dtype="bool") /* ty=Tensor[(7, 2, 5), bool] */;
    %767 = equal(%765, %766) /* ty=Tensor[(7, 2, 5), bool] */;
    (%767,)
  };
  %768(%var_922) /* ty=(Tensor[(7, 2, 5), bool],) */
}

def @func_6552() -> (Tensor[(15, 11, 16), float32], Tensor[(60), float64]) {
  %773 = fn () -> (Tensor[(15, 11, 16), float32], Tensor[(60), float64]) {
    %769 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
    %770 = @func_4325() /* ty=(Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
    %771 = %769.1;
    %772 = %770.2;
    (%771, %772)
  };
  %773() /* ty=(Tensor[(15, 11, 16), float32], Tensor[(60), float64]) */
}

def @func_7069() -> (int16, Tensor[(60), float64]) {
  @func_7067() /* ty=(int16, Tensor[(60), float64]) */
}

def @func_8439() -> (Tensor[(15, 11, 16), float32], Tensor[(14, 10, 14), int16]) {
  %785 = fn () -> (Tensor[(15, 11, 16), float32], Tensor[(14, 10, 14), int16]) {
    %774 = @func_6551() /* ty=(Tensor[(15, 11, 16), float32], Tensor[(60), float64]) */;
    %775 = cast(meta[relay.Constant][45] /* ty=Tensor[(140, 14), uint16] */, dtype="uint16") /* ty=Tensor[(140, 14), uint16] */;
    %776 = reshape(%775, newshape=[14, 10, 14]) /* ty=Tensor[(14, 10, 14), uint16] */;
    %777 = @func_3717(%776) /* ty=(Tensor[(14, 10, 14), float32], Tensor[(7, 14, 2), float64]) */;
    %778 = %777.0;
    %779 = cast(meta[relay.Constant][45] /* ty=Tensor[(140, 14), uint16] */, dtype="int16") /* ty=Tensor[(140, 14), int16] */;
    %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(3), int32] */;
    %781 = cast(%778, dtype="int16") /* ty=Tensor[(14, 10, 14), int16] */;
    %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %783 = %774.0;
    %784 = bitwise_xor(%781, %782) /* ty=Tensor[(14, 10, 14), int16] */;
    (%783, %784)
  };
  %785() /* ty=(Tensor[(15, 11, 16), float32], Tensor[(14, 10, 14), int16]) */
}

def @func_9937() -> Tensor[(7, 2, 5), float64] {
  %787 = fn () -> Tensor[(7, 2, 5), float64] {
    %786 = @func_9357() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %786.0
  };
  %787() /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_14965() -> (Tensor[(7, 2, 5), float64], int16) {
  %788 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %789 = %788.0;
  %790 = @func_5807() /* ty=int16 */;
  (%789, %790)
}

def @func_9788() -> Tensor[(12, 14, 13), bool] {
  @func_9786() /* ty=Tensor[(12, 14, 13), bool] */
}

def @func_9253() -> int16 {
  %791 = fn () -> int16 {
    @func_4758() /* ty=int16 */
  };
  %791() /* ty=int16 */
}

def @func_7608() -> Tensor[(196), float64] {
  %792 = @func_6979() /* ty=(Tensor[(196), float64], Tensor[(7, 14, 2), float64]) */;
  %792.0
}

def @func_10344() -> Tensor[(12, 16, 11), int64] {
  %793 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 16, 11), int64] */, dtype="int64") /* ty=Tensor[(12, 16, 11), int64] */;
  %794 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(12, 16, 11), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %795 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 16, 11), int64] */, dtype="int64") /* ty=Tensor[(12, 16, 11), int64] */;
  %796 = dyn.reshape(%793, %794, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  add(%795, %796) /* ty=Tensor[(12, 16, 11), int64] */
}

def @func_10586() -> (Tensor[(7, 2, 5), int16],) {
  %797 = @func_5427() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */;
  %798 = %797.1;
  %799 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 2, 5), float64] */, dtype="int16") /* ty=Tensor[(7, 2, 5), int16] */;
  %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%798, dtype="int16") /* ty=Tensor[(7, 2, 5), int16] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %803 = left_shift(%801, %802) /* ty=Tensor[(7, 2, 5), int16] */;
  (%803,)
}

def @func_13923() -> Tensor[(196), float64] {
  %805 = fn () -> Tensor[(196), float64] {
    %804 = @func_11977() /* ty=(Tensor[(196), float64],) */;
    %804.0
  };
  %805() /* ty=Tensor[(196), float64] */
}

def @func_6509() -> Tensor[(12, 14, 13), bool] {
  %806 = @func_6125() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %806.0
}

def @func_10413(%var_10386: Tensor[(2288), uint64]) -> (Tensor[(588, 126), float32], Tensor[(588, 126), int64], Tensor[(7, 2, 5), float64], Tensor[(2288), uint64]) {
  %807 = @func_4963() /* ty=(int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) */;
  %808 = cast(%var_10386, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %809 = reshape(%808, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %810 = @func_6480(%809) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(2288), uint64]) */;
  %811 = @func_5939() /* ty=Tensor[(588, 126), float32] */;
  %812 = %807.2;
  %813 = %810.0;
  (%811, %812, %813, %var_10386)
}

def @func_13362() -> (int16, Tensor[(12, 14, 13), bool], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %820 = fn () -> (int16, Tensor[(12, 14, 13), bool], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
    %814 = @func_10552() /* ty=(int16,) */;
    %815 = cast(meta[relay.Constant][49] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
    %816 = reshape(%815, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
    %817 = %814.0;
    %818 = @func_6509() /* ty=Tensor[(12, 14, 13), bool] */;
    %819 = @func_1209(%816) /* ty=Tensor[(11, 7, 2), float64] */;
    (%817, %818, %819, meta[relay.Constant][49] /* ty=Tensor[(154), float64] */)
  };
  %820() /* ty=(int16, Tensor[(12, 14, 13), bool], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */
}

def @func_6407() -> (Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) {
  @func_6405() /* ty=(Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */
}

def @func_14646(%var_14610: Tensor[(588, 126), float32]) -> (Tensor[(588, 126), bool], Tensor[(588, 126), float32]) {
  %821 = @func_13579() /* ty=(Tensor[(588, 126), float32], Tensor[(60), float64]) */;
  %822 = %821.0;
  %823 = cast(%var_14610, dtype="bool") /* ty=Tensor[(588, 126), bool] */;
  %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(2), int32] */;
  %825 = cast(%822, dtype="bool") /* ty=Tensor[(588, 126), bool] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %827 = cast(%822, dtype="float32") /* ty=Tensor[(588, 126), float32] */;
  %828 = shape_of(%var_14610, dtype="int32") /* ty=Tensor[(2), int32] */;
  %829 = cast(%var_14610, dtype="float32") /* ty=Tensor[(588, 126), float32] */;
  %830 = dyn.reshape(%827, %828, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %831 = equal(%825, %826) /* ty=Tensor[(588, 126), bool] */;
  %832 = mod(%829, %830) /* ty=Tensor[(588, 126), float32] */;
  (%831, %832)
}

def @func_5374() -> Tensor[(60), float64] {
  @func_5372() /* ty=Tensor[(60), float64] */
}

def @func_4643(%var_4640: Tensor[(16, 14), int16], %var_4641: Tensor[(2288), uint64], %var_4642: Tensor[(60), float64]) -> (int16, Tensor[(4, 3, 6), float64], Tensor[(16, 14), int16], Tensor[(2288), uint64], Tensor[(60), float64]) {
  @func_4638(%var_4640, %var_4641, %var_4642) /* ty=(int16, Tensor[(4, 3, 6), float64], Tensor[(16, 14), int16], Tensor[(2288), uint64], Tensor[(60), float64]) */
}

def @func_11101() -> (Tensor[(7, 2, 5), float64], Tensor[(72), float64], int16) {
  @func_11099() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(72), float64], int16) */
}

def @func_5346() -> (Tensor[(7, 2, 5), float64],) {
  %835 = fn () -> (Tensor[(7, 2, 5), float64],) {
    %833 = @func_5234() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %834 = %833.0;
    (%834,)
  };
  %835() /* ty=(Tensor[(7, 2, 5), float64],) */
}

def @func_11567() -> (Tensor[(196), float64], Tensor[(2, 1320), bool]) {
  @func_11565() /* ty=(Tensor[(196), float64], Tensor[(2, 1320), bool]) */
}

def @func_10086() -> (Tensor[(12, 14, 13), uint8], int16) {
  %836 = @func_5829() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %837 = %836.0;
  %838 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 14, 13), bool] */, dtype="uint8") /* ty=Tensor[(12, 14, 13), uint8] */;
  %839 = shape_of(%837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%837, dtype="uint8") /* ty=Tensor[(12, 14, 13), uint8] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %842 = @func_5906() /* ty=(int16,) */;
  %843 = maximum(%840, %841) /* ty=Tensor[(12, 14, 13), uint8] */;
  %844 = %842.0;
  (%843, %844)
}

def @func_2517(%var_2497: Tensor[(12, 15, 8), float64], %var_2511: Tensor[(126), float32]) -> (Tensor[(12, 15, 8), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) {
  %845 = cast(%var_2497, dtype="float64") /* ty=Tensor[(12, 15, 8), float64] */;
  %846 = cast(meta[relay.Constant][51] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %847 = cast(%var_2511, dtype="float32") /* ty=Tensor[(126), float32] */;
  %848 = reshape(%846, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
  %849 = reshape(%847, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %850 = @func_618(%848, %849) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) */;
  %851 = asinh(%845) /* ty=Tensor[(12, 15, 8), float64] */;
  %852 = %850.1;
  (%851, %852, meta[relay.Constant][51] /* ty=Tensor[(60), float64] */, %var_2511)
}

def @func_10416(%var_10414: Tensor[(2288), uint64]) -> (Tensor[(588, 126), float32], Tensor[(588, 126), int64], Tensor[(7, 2, 5), float64], Tensor[(2288), uint64]) {
  @func_10413(%var_10414) /* ty=(Tensor[(588, 126), float32], Tensor[(588, 126), int64], Tensor[(7, 2, 5), float64], Tensor[(2288), uint64]) */
}

def @func_1212(%var_1210: Tensor[(11, 7, 2), float64]) -> Tensor[(11, 7, 2), float64] {
  @func_1209(%var_1210) /* ty=Tensor[(11, 7, 2), float64] */
}

def @func_9756(%var_9749: Tensor[(8, 12, 9), float32], %var_9750: Tensor[(8, 12, 9), float32]) -> Tensor[(8, 12, 9), float32] {
  %853 = cast(%var_9750, dtype="float32") /* ty=Tensor[(8, 12, 9), float32] */;
  %854 = shape_of(%var_9749, dtype="int32") /* ty=Tensor[(3), int32] */;
  %855 = cast(%var_9749, dtype="float32") /* ty=Tensor[(8, 12, 9), float32] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  maximum(%855, %856) /* ty=Tensor[(8, 12, 9), float32] */
}

def @func_12754() -> Tensor[(7, 2, 5), float64] {
  @func_12752() /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_8756() -> (Tensor[(60), float64],) {
  @func_8754() /* ty=(Tensor[(60), float64],) */
}

def @func_7036() -> (Tensor[(7, 2, 5), float64], Tensor[(7, 14, 2), float64]) {
  %861 = fn () -> (Tensor[(7, 2, 5), float64], Tensor[(7, 14, 2), float64]) {
    %857 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %858 = @func_6979() /* ty=(Tensor[(196), float64], Tensor[(7, 14, 2), float64]) */;
    %859 = %857.0;
    %860 = %858.1;
    (%859, %860)
  };
  %861() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(7, 14, 2), float64]) */
}

def @func_5908() -> (int16,) {
  @func_5906() /* ty=(int16,) */
}

def @func_10538() -> (Tensor[(196), float64],) {
  @func_10536() /* ty=(Tensor[(196), float64],) */
}

def @func_4326() -> (Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) {
  %870 = fn () -> (Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) {
    %862 = cast(meta[relay.Constant][52] /* ty=Tensor[(16, 16, 15), float64] */, dtype="float64") /* ty=Tensor[(16, 16, 15), float64] */;
    %863 = cast(meta[relay.Constant][53] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %864 = cast(meta[relay.Constant][54] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %865 = reshape(%863, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
    %866 = reshape(%864, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %867 = @func_618(%865, %866) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) */;
    %868 = atan(%862) /* ty=Tensor[(16, 16, 15), float64] */;
    %869 = %867.4;
    (%868, %869, meta[relay.Constant][53] /* ty=Tensor[(60), float64] */, meta[relay.Constant][54] /* ty=Tensor[(126), float32] */)
  };
  %870() /* ty=(Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */
}

def @func_14314(%var_14313: Tensor[(3, 20), float64]) -> (Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(3, 20), float64]) {
  %877 = fn (%var_14305: Tensor[(3, 20), float64]) -> (Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(3, 20), float64]) {
    %871 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %872 = cast(%var_14305, dtype="float64") /* ty=Tensor[(3, 20), float64] */;
    %873 = reshape(%872, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %874 = @func_7553(%873) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(224), int16], Tensor[(60), float64], Tensor[(2288, 1), float32], int16) */;
    %875 = %871.0;
    %876 = %874.1;
    (%875, %876, %var_14305)
  };
  %877(%var_14313) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(3, 20), float64]) */
}

def @func_14003() -> (Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), bool]) {
  @func_14001() /* ty=(Tensor[(7, 2, 5), float32], Tensor[(7, 2, 5), bool]) */
}

def @func_12167(%var_12166: Tensor[(2288), uint64]) -> (Tensor[(2288), bool],) {
  %885 = fn (%var_12159: Tensor[(2288), uint64]) -> (Tensor[(2288), bool],) {
    %878 = @func_6125() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */;
    %879 = %878.2;
    %880 = cast(%var_12159, dtype="bool") /* ty=Tensor[(2288), bool] */;
    %881 = shape_of(%879, dtype="int32") /* ty=Tensor[(1), int32] */;
    %882 = cast(%879, dtype="bool") /* ty=Tensor[(2288), bool] */;
    %883 = dyn.reshape(%880, %881, newshape=[]) /* ty=Tensor[(?), bool] */;
    %884 = logical_or(%882, %883) /* ty=Tensor[(2288), bool] */;
    (%884,)
  };
  %885(%var_12166) /* ty=(Tensor[(2288), bool],) */
}

def @func_7277() -> (Tensor[(7, 2, 5), float64],) {
  %886 = @func_7035() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(7, 14, 2), float64]) */;
  %887 = %886.0;
  (%887,)
}

def @func_10618() -> Tensor[(60), float64] {
  %889 = fn () -> Tensor[(60), float64] {
    %888 = @func_4724() /* ty=(Tensor[(60), float64],) */;
    %888.0
  };
  %889() /* ty=Tensor[(60), float64] */
}

def @func_11799() -> Tensor[(7, 2, 5), float64] {
  @func_9715() /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_4447() -> (int16,) {
  %892 = fn () -> (int16,) {
    %890 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
    %891 = %890.2;
    (%891,)
  };
  %892() /* ty=(int16,) */
}

def @func_8268(%var_8266: Tensor[(8, 2, 5), float64]) -> (Tensor[(8, 2, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(270), float32], Tensor[(8, 2, 5), float32]) {
  @func_8265(%var_8266) /* ty=(Tensor[(8, 2, 5), float32], Tensor[(7, 2, 5), float64], Tensor[(270), float32], Tensor[(8, 2, 5), float32]) */
}

def @func_13975() -> (Tensor[(588, 126), float32],) {
  @func_13973() /* ty=(Tensor[(588, 126), float32],) */
}

def @func_12853() -> (int16, Tensor[(2, 1320), float32]) {
  @func_12851() /* ty=(int16, Tensor[(2, 1320), float32]) */
}

def @func_7659() -> (int16, int16, Tensor[(60), float64]) {
  %893 = @func_6674() /* ty=(int16,) */;
  %894 = @func_6674() /* ty=(int16,) */;
  %895 = @func_6210() /* ty=(Tensor[(60), float64],) */;
  %896 = %893.0;
  %897 = %894.0;
  %898 = %895.0;
  (%896, %897, %898)
}

def @func_9716() -> Tensor[(7, 2, 5), float64] {
  %900 = fn () -> Tensor[(7, 2, 5), float64] {
    %899 = @func_5234() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %899.0
  };
  %900() /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_5138() -> (Tensor[(7, 2, 5), float64], int16) {
  %907 = fn () -> (Tensor[(7, 2, 5), float64], int16) {
    %901 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
    %902 = %901.1;
    %903 = cast(%902, dtype="float64") /* ty=Tensor[(7, 2, 5), float64] */;
    %904 = @func_4446() /* ty=(int16,) */;
    %905 = atan(%903) /* ty=Tensor[(7, 2, 5), float64] */;
    %906 = %904.0;
    (%905, %906)
  };
  %907() /* ty=(Tensor[(7, 2, 5), float64], int16) */
}

def @func_12752() -> Tensor[(7, 2, 5), float64] {
  @func_7440() /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_13284(%var_13282: Tensor[(72), float64], %var_13283: Tensor[(2288), uint64]) -> (int16, int16, Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(14, 10, 14), int16]) {
  @func_13280(%var_13282, %var_13283) /* ty=(int16, int16, Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(14, 10, 14), int16]) */
}

def @func_15605(%var_15603: Tensor[(60), float64]) -> (Tensor[(72), float64], Tensor[(2288, 1), float32], Tensor[(60), float64], Tensor[(12, 14, 13), bool]) {
  @func_15602(%var_15603) /* ty=(Tensor[(72), float64], Tensor[(2288, 1), float32], Tensor[(60), float64], Tensor[(12, 14, 13), bool]) */
}

def @func_14484() -> (Tensor[(196), float64], Tensor[(60), float64]) {
  %912 = fn () -> (Tensor[(196), float64], Tensor[(60), float64]) {
    %908 = @func_10536() /* ty=(Tensor[(196), float64],) */;
    %909 = @func_9122() /* ty=(Tensor[(60), float64], Tensor[(60), float64]) */;
    %910 = %908.0;
    %911 = %909.1;
    (%910, %911)
  };
  %912() /* ty=(Tensor[(196), float64], Tensor[(60), float64]) */
}

def @func_9999(%var_9998: Tensor[(224), int16]) -> (int16, int16, Tensor[(224), int16], Tensor[(224), int16], int16) {
  %921 = fn (%var_9981: Tensor[(224), int16]) -> (int16, int16, Tensor[(224), int16], Tensor[(224), int16], int16) {
    %913 = @func_6674() /* ty=(int16,) */;
    %914 = cast(%var_9981, dtype="int16") /* ty=Tensor[(224), int16] */;
    %915 = reshape(%914, newshape=[224]) /* ty=Tensor[(224), int16] */;
    %916 = @func_5465(%915) /* ty=(int16, int16, Tensor[(224), int16], Tensor[(2288), uint64], Tensor[(60), float64]) */;
    %917 = %913.0;
    %918 = @func_8657() /* ty=int16 */;
    %919 = %916.2;
    %920 = @func_9336() /* ty=int16 */;
    (%917, %918, %919, %var_9981, %920)
  };
  %921(%var_9998) /* ty=(int16, int16, Tensor[(224), int16], Tensor[(224), int16], int16) */
}

def @func_6011(%var_5987: Tensor[(2288), uint64]) -> (Tensor[(72), float64], Tensor[(60), float64], Tensor[(2288), uint64]) {
  %922 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
  %923 = cast(%var_5987, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %924 = reshape(%923, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %925 = @func_1796(%924) /* ty=(Tensor[(3, 7, 15), uint32], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 9), int16], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
  %926 = %922.3;
  %927 = %925.2;
  (%926, %927, %var_5987)
}

def @func_6050(%var_6026: Tensor[(9, 5, 6), float32]) -> (Tensor[(9, 5, 6), float32], int16, Tensor[(7, 2, 5), float64], Tensor[(7, 2, 5), bool]) {
  %928 = cast(%var_6026, dtype="float32") /* ty=Tensor[(9, 5, 6), float32] */;
  %929 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(9, 5, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %930 = cast(meta[relay.Constant][55] /* ty=Tensor[(9, 5, 6), float32] */, dtype="float32") /* ty=Tensor[(9, 5, 6), float32] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %932 = @func_5345() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %933 = @func_4886() /* ty=int16 */;
  %934 = cast(%933, dtype="int16") /* ty=int16 */;
  %935 = reshape(%934, newshape=[]) /* ty=int16 */;
  %936 = @func_921(%935) /* ty=(Tensor[(7, 2, 5), bool],) */;
  %937 = mod(%930, %931) /* ty=Tensor[(9, 5, 6), float32] */;
  %938 = %932.0;
  %939 = %936.0;
  (%937, %933, %938, %939)
}

def @func_8019() -> (Tensor[(12, 14, 13), bool], Tensor[(15, 8, 14), float64], Tensor[(1680), float64], Tensor[(7, 2, 5), float64], int16) {
  %940 = @func_7516() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(126), float32], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) */;
  %941 = cast(meta[relay.Constant][56] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %942 = reshape(%941, newshape=[15, 8, 14]) /* ty=Tensor[(15, 8, 14), float64] */;
  %943 = @func_6274(%942) /* ty=(Tensor[(15, 8, 14), float64],) */;
  %944 = @func_7702() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */;
  %945 = @func_6700() /* ty=(int16,) */;
  %946 = %940.0;
  %947 = %943.0;
  %948 = %944.2;
  %949 = %945.0;
  (%946, %947, meta[relay.Constant][56] /* ty=Tensor[(1680), float64] */, %948, %949)
}

def @func_13311() -> int16 {
  %950 = @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */;
  %950.0
}

def @func_7299() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) {
  %951 = @func_5223() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %952 = @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */;
  %953 = @func_5372() /* ty=Tensor[(60), float64] */;
  %954 = %951.0;
  %955 = %952.2;
  (%953, %954, %955)
}

def @func_14724() -> (Tensor[(14, 12, 7), float32],) {
  @func_14722() /* ty=(Tensor[(14, 12, 7), float32],) */
}

def @func_12233() -> Tensor[(60), float64] {
  %956 = @func_9122() /* ty=(Tensor[(60), float64], Tensor[(60), float64]) */;
  %956.1
}

def @func_4724() -> (Tensor[(60), float64],) {
  %957 = @func_4672() /* ty=Tensor[(60), float64] */;
  (%957,)
}

def @func_12150() -> Tensor[(12, 14, 13), float64] {
  %960 = fn () -> Tensor[(12, 14, 13), float64] {
    %958 = @func_9786() /* ty=Tensor[(12, 14, 13), bool] */;
    %959 = cast(%958, dtype="float64") /* ty=Tensor[(12, 14, 13), float64] */;
    atanh(%959) /* ty=Tensor[(12, 14, 13), float64] */
  };
  %960() /* ty=Tensor[(12, 14, 13), float64] */
}

def @func_7577() -> (Tensor[(60), float64],) {
  %961 = @func_6551() /* ty=(Tensor[(15, 11, 16), float32], Tensor[(60), float64]) */;
  %962 = %961.1;
  (%962,)
}

def @func_9661() -> (Tensor[(8, 6, 12), float64],) {
  %963 = @func_9070() /* ty=(Tensor[(8, 6, 12), float64], Tensor[(6, 1, 15), uint8], uint8, Tensor[(1, 90), uint8]) */;
  %964 = %963.0;
  (%964,)
}

def @func_6126() -> (Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) {
  %971 = fn () -> (Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) {
    %965 = @func_5191() /* ty=(Tensor[(12, 14, 13), bool],) */;
    %966 = cast(meta[relay.Constant][57] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
    %967 = reshape(%966, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
    %968 = @func_1796(%967) /* ty=(Tensor[(3, 7, 15), uint32], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 9), int16], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
    %969 = %965.0;
    %970 = %968.2;
    (%969, %970, meta[relay.Constant][57] /* ty=Tensor[(2288), uint64] */)
  };
  %971() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */
}

def @func_6014(%var_6012: Tensor[(2288), uint64]) -> (Tensor[(72), float64], Tensor[(60), float64], Tensor[(2288), uint64]) {
  @func_6011(%var_6012) /* ty=(Tensor[(72), float64], Tensor[(60), float64], Tensor[(2288), uint64]) */
}

def @func_9786() -> Tensor[(12, 14, 13), bool] {
  @func_5865() /* ty=Tensor[(12, 14, 13), bool] */
}

def @func_1799(%var_1797: Tensor[(2288), uint64]) -> (Tensor[(3, 7, 15), uint32], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 9), int16], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) {
  @func_1796(%var_1797) /* ty=(Tensor[(3, 7, 15), uint32], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32], Tensor[(7, 2, 9), int16], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */
}

def @func_5223() -> (Tensor[(7, 2, 5), float64],) {
  %972 = @func_5137() /* ty=(Tensor[(7, 2, 5), float64], int16) */;
  %973 = %972.0;
  (%973,)
}

def @func_6405() -> (Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) {
  %974 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
  %975 = @func_5234() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %976 = %974.1;
  %977 = %975.0;
  (%976, %977)
}

def @func_12851() -> (int16, Tensor[(2, 1320), float32]) {
  %978 = @func_12348() /* ty=(int16, Tensor[(12, 14, 13), float64]) */;
  %979 = %978.0;
  %980 = @func_11901() /* ty=Tensor[(2, 1320), float32] */;
  (%979, %980)
}

def @func_6927() -> (Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(7, 14, 2), float64], Tensor[(196), float64]) {
  %986 = fn () -> (Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(7, 14, 2), float64], Tensor[(196), float64]) {
    %981 = cast(meta[relay.Constant][58] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
    %982 = reshape(%981, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), float64] */;
    %983 = @func_5865() /* ty=Tensor[(12, 14, 13), bool] */;
    %984 = @func_5113() /* ty=Tensor[(60), float64] */;
    %985 = @func_2300(%982) /* ty=Tensor[(7, 14, 2), float64] */;
    (%983, %984, %985, meta[relay.Constant][58] /* ty=Tensor[(196), float64] */)
  };
  %986() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(7, 14, 2), float64], Tensor[(196), float64]) */
}

def @func_9358() -> (Tensor[(7, 2, 5), float64],) {
  %989 = fn () -> (Tensor[(7, 2, 5), float64],) {
    %987 = @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */;
    %988 = %987.1;
    (%988,)
  };
  %989() /* ty=(Tensor[(7, 2, 5), float64],) */
}

def @func_852(%var_850: Tensor[(16, 11, 13), uint64], %var_851: Tensor[(16, 11, 13), uint64]) -> Tensor[(16, 11, 13), uint64] {
  @func_848(%var_850, %var_851) /* ty=Tensor[(16, 11, 13), uint64] */
}

def @func_9338() -> int16 {
  @func_9336() /* ty=int16 */
}

def @func_5465(%var_5456: Tensor[(224), int16]) -> (int16, int16, Tensor[(224), int16], Tensor[(2288), uint64], Tensor[(60), float64]) {
  %990 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
  %991 = cast(%var_5456, dtype="int16") /* ty=Tensor[(224), int16] */;
  %992 = cast(meta[relay.Constant][59] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %993 = cast(meta[relay.Constant][60] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %994 = reshape(%991, newshape=[16, 14]) /* ty=Tensor[(16, 14), int16] */;
  %995 = reshape(%992, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %996 = reshape(%993, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %997 = @func_4638(%994, %995, %996) /* ty=(int16, Tensor[(4, 3, 6), float64], Tensor[(16, 14), int16], Tensor[(2288), uint64], Tensor[(60), float64]) */;
  %998 = %990.2;
  %999 = %997.0;
  (%998, %999, %var_5456, meta[relay.Constant][59] /* ty=Tensor[(2288), uint64] */, meta[relay.Constant][60] /* ty=Tensor[(60), float64] */)
}

def @func_13194() -> (Tensor[(72), float64],) {
  %1002 = fn () -> (Tensor[(72), float64],) {
    %1000 = @func_7783() /* ty=(Tensor[(72), float64],) */;
    %1001 = %1000.0;
    (%1001,)
  };
  %1002() /* ty=(Tensor[(72), float64],) */
}

def @func_11161() -> Tensor[(12, 14, 13), bool] {
  @func_11159() /* ty=Tensor[(12, 14, 13), bool] */
}

def @func_13973() -> (Tensor[(588, 126), float32],) {
  %1003 = @func_5939() /* ty=Tensor[(588, 126), float32] */;
  (%1003,)
}

def @func_10022() -> (int16,) {
  %1005 = fn () -> (int16,) {
    %1004 = @func_8293() /* ty=int16 */;
    (%1004,)
  };
  %1005() /* ty=(int16,) */
}

def @func_5211() -> (Tensor[(60), float64],) {
  %1006 = @func_4672() /* ty=Tensor[(60), float64] */;
  (%1006,)
}

def @func_5180() -> (Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) {
  %1007 = @func_4724() /* ty=(Tensor[(60), float64],) */;
  %1008 = cast(meta[relay.Constant][61] /* ty=Tensor[(2, 1320), float32] */, dtype="float32") /* ty=Tensor[(2, 1320), float32] */;
  %1009 = reshape(%1008, newshape=[15, 11, 16]) /* ty=Tensor[(15, 11, 16), float32] */;
  %1010 = @func_663(%1009) /* ty=(Tensor[(15, 11, 16), float32], Tensor[(7, 2, 9), int16], Tensor[(126), float32]) */;
  %1011 = cast(meta[relay.Constant][62] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
  %1012 = reshape(%1011, newshape=[72]) /* ty=Tensor[(72), float64] */;
  %1013 = @func_3884(%1012) /* ty=(Tensor[(12, 14, 13), float32], Tensor[(16, 11, 13), uint64], Tensor[(72), float64], Tensor[(2288), uint64]) */;
  %1014 = %1013.0;
  %1015 = cast(%1014, dtype="float64") /* ty=Tensor[(12, 14, 13), float64] */;
  %1016 = log10(%1015) /* ty=Tensor[(12, 14, 13), float64] */;
  %1017 = cast(%1014, dtype="bool") /* ty=Tensor[(12, 14, 13), bool] */;
  %1018 = shape_of(%1016, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1019 = cast(%1016, dtype="bool") /* ty=Tensor[(12, 14, 13), bool] */;
  %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1021 = %1007.0;
  %1022 = %1010.0;
  %1023 = less_equal(%1019, %1020) /* ty=Tensor[(12, 14, 13), bool] */;
  (%1021, %1022, meta[relay.Constant][61] /* ty=Tensor[(2, 1320), float32] */, meta[relay.Constant][62] /* ty=Tensor[(72), float64] */, %1023)
}

def @func_13149(%var_13147: Tensor[(126), float32], %var_13148: Tensor[(2, 1320), float64]) -> (Tensor[(60), float64], Tensor[(196), float64], Tensor[(2288, 1), uint64], Tensor[(7, 84), bool], Tensor[(126), float32], Tensor[(2, 1320), float32], Tensor[(2, 1320), float32], Tensor[(2, 1320), float64], Tensor[(12, 14, 13), float64]) {
  %1057 = fn (%var_13110: Tensor[(126), float32], %var_13134: Tensor[(2, 1320), float64]) -> (Tensor[(60), float64], Tensor[(196), float64], Tensor[(2288, 1), uint64], Tensor[(7, 84), bool], Tensor[(126), float32], Tensor[(2, 1320), float32], Tensor[(2, 1320), float32], Tensor[(2, 1320), float64], Tensor[(12, 14, 13), float64]) {
    %1024 = @func_7227() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), bool]) */;
    %1025 = @func_11565() /* ty=(Tensor[(196), float64], Tensor[(2, 1320), bool]) */;
    %1026 = cast(meta[relay.Constant][63] /* ty=Tensor[(7, 84), bool] */, dtype="bool") /* ty=Tensor[(7, 84), bool] */;
    %1027 = cast(%var_13110, dtype="float32") /* ty=Tensor[(126), float32] */;
    %1028 = @func_11565() /* ty=(Tensor[(196), float64], Tensor[(2, 1320), bool]) */;
    %1029 = %1028.1;
    %1030 = cast(%1029, dtype="float32") /* ty=Tensor[(2, 1320), float32] */;
    %1031 = reshape(%1026, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), bool] */;
    %1032 = reshape(%1027, newshape=[126, 1]) /* ty=Tensor[(126, 1), float32] */;
    %1033 = reshape(%1030, newshape=[4, 660]) /* ty=Tensor[(4, 660), float32] */;
    %1034 = @func_3334(%1031, %1032, %1033) /* ty=(Tensor[(7, 7, 12), bool], Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(16, 11, 13), uint64], Tensor[(2288, 1), uint64], Tensor[(7, 2, 9), int16], Tensor[(4, 660), float32]) */;
    %1035 = cast(%1029, dtype="float64") /* ty=Tensor[(2, 1320), float64] */;
    %1036 = asin(%1035) /* ty=Tensor[(2, 1320), float64] */;
    %1037 = cast(%1036, dtype="float64") /* ty=Tensor[(2, 1320), float64] */;
    %1038 = asinh(%1037) /* ty=Tensor[(2, 1320), float64] */;
    %1039 = cast(%1038, dtype="float32") /* ty=Tensor[(2, 1320), float32] */;
    %1040 = cast(%1036, dtype="int64") /* ty=Tensor[(2, 1320), int64] */;
    %1041 = shape_of(%1038, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1042 = cast(%1038, dtype="int64") /* ty=Tensor[(2, 1320), int64] */;
    %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %1044 = bitwise_and(%1042, %1043) /* ty=Tensor[(2, 1320), int64] */;
    %1045 = cast(%1044, dtype="float32") /* ty=Tensor[(2, 1320), float32] */;
    %1046 = cast(%var_13134, dtype="float64") /* ty=Tensor[(2, 1320), float64] */;
    %1047 = shape_of(%1036, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1048 = cast(%1036, dtype="float64") /* ty=Tensor[(2, 1320), float64] */;
    %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1050 = %1024.0;
    %1051 = %1025.0;
    %1052 = %1034.5;
    %1053 = sqrt(%1039) /* ty=Tensor[(2, 1320), float32] */;
    %1054 = atanh(%1045) /* ty=Tensor[(2, 1320), float32] */;
    %1055 = floor_divide(%1048, %1049) /* ty=Tensor[(2, 1320), float64] */;
    %1056 = @func_12911() /* ty=Tensor[(12, 14, 13), float64] */;
    (%1050, %1051, %1052, meta[relay.Constant][63] /* ty=Tensor[(7, 84), bool] */, %var_13110, %1053, %1054, %1055, %1056)
  };
  %1057(%var_13147, %var_13148) /* ty=(Tensor[(60), float64], Tensor[(196), float64], Tensor[(2288, 1), uint64], Tensor[(7, 84), bool], Tensor[(126), float32], Tensor[(2, 1320), float32], Tensor[(2, 1320), float32], Tensor[(2, 1320), float64], Tensor[(12, 14, 13), float64]) */
}

def @func_4602(%var_4596: Tensor[(14, 3, 9), int8], %var_4597: Tensor[(14, 3, 9), int8]) -> Tensor[(14, 3, 9), bool] {
  %1058 = cast(%var_4597, dtype="bool") /* ty=Tensor[(14, 3, 9), bool] */;
  %1059 = shape_of(%var_4596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1060 = cast(%var_4596, dtype="bool") /* ty=Tensor[(14, 3, 9), bool] */;
  %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1060, %1061) /* ty=Tensor[(14, 3, 9), bool] */
}

def @func_13330() -> (Tensor[(7, 2, 5), float64],) {
  %1062 = @func_11028() /* ty=(Tensor[(60), float64], int16, Tensor[(60), float64], Tensor[(7, 2, 5), bool], Tensor[(2288), uint64], Tensor[(2288), uint64], Tensor[(7, 2, 5), float64]) */;
  %1063 = %1062.6;
  (%1063,)
}

def @func_14086(%var_14083: uint8, %var_14084: Tensor[(10, 8, 15), uint8], %var_14085: Tensor[(154), float64]) -> (Tensor[(10, 8, 15), uint8], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %1070 = fn (%var_14057: uint8, %var_14058: Tensor[(10, 8, 15), uint8], %var_14079: Tensor[(154), float64]) -> (Tensor[(10, 8, 15), uint8], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
    %1064 = cast(%var_14057, dtype="uint8") /* ty=uint8 */;
    %1065 = cast(%var_14058, dtype="uint8") /* ty=Tensor[(10, 8, 15), uint8] */;
    %1066 = cast(%var_14079, dtype="float64") /* ty=Tensor[(154), float64] */;
    %1067 = reshape(%1066, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
    %1068 = left_shift(%1064, %1065) /* ty=Tensor[(10, 8, 15), uint8] */;
    %1069 = @func_1209(%1067) /* ty=Tensor[(11, 7, 2), float64] */;
    (%1068, %1069, %var_14079)
  };
  %1070(%var_14083, %var_14084, %var_14085) /* ty=(Tensor[(10, 8, 15), uint8], Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */
}

def @func_9414() -> (Tensor[(7, 2, 5), uint32],) {
  %1077 = fn () -> (Tensor[(7, 2, 5), uint32],) {
    %1071 = @func_7440() /* ty=Tensor[(7, 2, 5), float64] */;
    %1072 = @func_6700() /* ty=(int16,) */;
    %1073 = %1072.0;
    %1074 = cast(%1071, dtype="uint32") /* ty=Tensor[(7, 2, 5), uint32] */;
    %1075 = cast(%1073, dtype="uint32") /* ty=uint32 */;
    %1076 = right_shift(%1074, %1075) /* ty=Tensor[(7, 2, 5), uint32] */;
    (%1076,)
  };
  %1077() /* ty=(Tensor[(7, 2, 5), uint32],) */
}

def @func_12912() -> Tensor[(12, 14, 13), float64] {
  %1079 = fn () -> Tensor[(12, 14, 13), float64] {
    %1078 = @func_12348() /* ty=(int16, Tensor[(12, 14, 13), float64]) */;
    %1078.1
  };
  %1079() /* ty=Tensor[(12, 14, 13), float64] */
}

def @func_5182() -> (Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) {
  @func_5180() /* ty=(Tensor[(60), float64], Tensor[(15, 11, 16), float32], Tensor[(2, 1320), float32], Tensor[(72), float64], Tensor[(12, 14, 13), bool]) */
}

def @func_4476(%var_4472: Tensor[(588, 1), bool], %var_4473: Tensor[(126), float32]) -> (int16, Tensor[(2288, 1), uint64], Tensor[(588, 1), bool], Tensor[(126), float32], Tensor[(2640), float32]) {
  %1080 = @func_4446() /* ty=(int16,) */;
  %1081 = cast(%var_4472, dtype="bool") /* ty=Tensor[(588, 1), bool] */;
  %1082 = cast(%var_4473, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1083 = cast(meta[relay.Constant][64] /* ty=Tensor[(2640), float32] */, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %1084 = reshape(%1081, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), bool] */;
  %1085 = reshape(%1082, newshape=[126, 1]) /* ty=Tensor[(126, 1), float32] */;
  %1086 = reshape(%1083, newshape=[4, 660]) /* ty=Tensor[(4, 660), float32] */;
  %1087 = @func_3334(%1084, %1085, %1086) /* ty=(Tensor[(7, 7, 12), bool], Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(16, 11, 13), uint64], Tensor[(2288, 1), uint64], Tensor[(7, 2, 9), int16], Tensor[(4, 660), float32]) */;
  %1088 = %1080.0;
  %1089 = %1087.5;
  (%1088, %1089, %var_4472, %var_4473, meta[relay.Constant][64] /* ty=Tensor[(2640), float32] */)
}

def @func_15721() -> (Tensor[(7, 2, 5), float64], Tensor[(12, 14, 13), bool]) {
  @func_15719() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(12, 14, 13), bool]) */
}

def @func_15313(%var_15311: Tensor[(200, 1), float64]) -> (int16, Tensor[(2, 10, 10), int16], Tensor[(200, 1), float64], Tensor[(7, 2, 5), float64], Tensor[(7, 14, 2), float64]) {
  @func_15310(%var_15311) /* ty=(int16, Tensor[(2, 10, 10), int16], Tensor[(200, 1), float64], Tensor[(7, 2, 5), float64], Tensor[(7, 14, 2), float64]) */
}

def @func_9663() -> (Tensor[(8, 6, 12), float64],) {
  @func_9661() /* ty=(Tensor[(8, 6, 12), float64],) */
}

def @func_4480(%var_4478: Tensor[(588, 1), bool], %var_4479: Tensor[(126), float32]) -> (int16, Tensor[(2288, 1), uint64], Tensor[(588, 1), bool], Tensor[(126), float32], Tensor[(2640), float32]) {
  @func_4476(%var_4478, %var_4479) /* ty=(int16, Tensor[(2288, 1), uint64], Tensor[(588, 1), bool], Tensor[(126), float32], Tensor[(2640), float32]) */
}

def @func_4888() -> int16 {
  @func_4886() /* ty=int16 */
}

def @func_7228() -> (Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), bool]) {
  %1095 = fn () -> (Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), bool]) {
    %1090 = @func_6551() /* ty=(Tensor[(15, 11, 16), float32], Tensor[(60), float64]) */;
    %1091 = @func_6405() /* ty=(Tensor[(7, 2, 5), bool], Tensor[(7, 2, 5), float64]) */;
    %1092 = @func_5372() /* ty=Tensor[(60), float64] */;
    %1093 = %1090.1;
    %1094 = %1091.0;
    (%1092, %1093, %1094)
  };
  %1095() /* ty=(Tensor[(60), float64], Tensor[(60), float64], Tensor[(7, 2, 5), bool]) */
}

def @func_11029() -> (Tensor[(60), float64], int16, Tensor[(60), float64], Tensor[(7, 2, 5), bool], Tensor[(2288), uint64], Tensor[(2288), uint64], Tensor[(7, 2, 5), float64]) {
  %1108 = fn () -> (Tensor[(60), float64], int16, Tensor[(60), float64], Tensor[(7, 2, 5), bool], Tensor[(2288), uint64], Tensor[(2288), uint64], Tensor[(7, 2, 5), float64]) {
    %1096 = @func_6926() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(7, 14, 2), float64], Tensor[(196), float64]) */;
    %1097 = @func_6125() /* ty=(Tensor[(12, 14, 13), bool], Tensor[(60), float64], Tensor[(2288), uint64]) */;
    %1098 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
    %1099 = cast(meta[relay.Constant][65] /* ty=Tensor[(2288), uint64] */, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
    %1100 = reshape(%1099, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
    %1101 = @func_6480(%1100) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(2288), uint64]) */;
    %1102 = %1096.1;
    %1103 = @func_5807() /* ty=int16 */;
    %1104 = %1097.1;
    %1105 = %1098.1;
    %1106 = %1101.2;
    %1107 = @func_9936() /* ty=Tensor[(7, 2, 5), float64] */;
    (%1102, %1103, %1104, %1105, %1106, meta[relay.Constant][65] /* ty=Tensor[(2288), uint64] */, %1107)
  };
  %1108() /* ty=(Tensor[(60), float64], int16, Tensor[(60), float64], Tensor[(7, 2, 5), bool], Tensor[(2288), uint64], Tensor[(2288), uint64], Tensor[(7, 2, 5), float64]) */
}

def @func_15676(%var_15674: Tensor[(224), int16]) -> (Tensor[(60), float64], Tensor[(5, 3, 4), bool], Tensor[(224), int16], Tensor[(2288), uint64]) {
  @func_15673(%var_15674) /* ty=(Tensor[(60), float64], Tensor[(5, 3, 4), bool], Tensor[(224), int16], Tensor[(2288), uint64]) */
}

def @func_14160() -> (int16, Tensor[(7, 14, 2), float64], Tensor[(196), float64]) {
  %1114 = fn () -> (int16, Tensor[(7, 14, 2), float64], Tensor[(196), float64]) {
    %1109 = @func_5906() /* ty=(int16,) */;
    %1110 = cast(meta[relay.Constant][66] /* ty=Tensor[(196), float64] */, dtype="float64") /* ty=Tensor[(196), float64] */;
    %1111 = reshape(%1110, newshape=[7, 14, 2]) /* ty=Tensor[(7, 14, 2), float64] */;
    %1112 = %1109.0;
    %1113 = @func_2300(%1111) /* ty=Tensor[(7, 14, 2), float64] */;
    (%1112, %1113, meta[relay.Constant][66] /* ty=Tensor[(196), float64] */)
  };
  %1114() /* ty=(int16, Tensor[(7, 14, 2), float64], Tensor[(196), float64]) */
}

def @func_7319(%var_7317: Tensor[(2640), float32]) -> (Tensor[(60), float64], Tensor[(4, 660), float32], Tensor[(588), bool], Tensor[(126, 1), float32], Tensor[(2640), float32], Tensor[(1440), float64]) {
  @func_7316(%var_7317) /* ty=(Tensor[(60), float64], Tensor[(4, 660), float32], Tensor[(588), bool], Tensor[(126, 1), float32], Tensor[(2640), float32], Tensor[(1440), float64]) */
}

def @func_9274() -> (Tensor[(12, 14, 13), bool],) {
  %1117 = fn () -> (Tensor[(12, 14, 13), bool],) {
    %1115 = @func_8369() /* ty=(Tensor[(12, 14, 13), bool],) */;
    %1116 = %1115.0;
    (%1116,)
  };
  %1117() /* ty=(Tensor[(12, 14, 13), bool],) */
}

def @func_4586(%var_4585: Tensor[(7, 2, 9), int16]) -> (Tensor[(7, 2, 9), uint32],) {
  %1125 = fn (%var_4572: Tensor[(7, 2, 9), int16]) -> (Tensor[(7, 2, 9), uint32],) {
    %1118 = @func_4325() /* ty=(Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
    %1119 = %1118.1;
    %1120 = cast(%var_4572, dtype="uint32") /* ty=Tensor[(7, 2, 9), uint32] */;
    %1121 = shape_of(%1119, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1122 = cast(%1119, dtype="uint32") /* ty=Tensor[(7, 2, 9), uint32] */;
    %1123 = dyn.reshape(%1120, %1121, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1124 = bitwise_xor(%1122, %1123) /* ty=Tensor[(7, 2, 9), uint32] */;
    (%1124,)
  };
  %1125(%var_4585) /* ty=(Tensor[(7, 2, 9), uint32],) */
}

def @func_4673() -> Tensor[(60), float64] {
  %1127 = fn () -> Tensor[(60), float64] {
    %1126 = @func_4325() /* ty=(Tensor[(16, 16, 15), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
    %1126.2
  };
  %1127() /* ty=Tensor[(60), float64] */
}

def @func_10052() -> (int16, Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
  %1133 = fn () -> (int16, Tensor[(11, 7, 2), float64], Tensor[(154), float64]) {
    %1128 = @func_4386() /* ty=(Tensor[(126), float32], Tensor[(7, 2, 5), bool], int16) */;
    %1129 = cast(meta[relay.Constant][67] /* ty=Tensor[(154), float64] */, dtype="float64") /* ty=Tensor[(154), float64] */;
    %1130 = reshape(%1129, newshape=[11, 7, 2]) /* ty=Tensor[(11, 7, 2), float64] */;
    %1131 = %1128.2;
    %1132 = @func_1209(%1130) /* ty=Tensor[(11, 7, 2), float64] */;
    (%1131, %1132, meta[relay.Constant][67] /* ty=Tensor[(154), float64] */)
  };
  %1133() /* ty=(int16, Tensor[(11, 7, 2), float64], Tensor[(154), float64]) */
}

def @func_14589() -> Tensor[(60), float64] {
  @func_14587() /* ty=Tensor[(60), float64] */
}

def @func_15341() -> (Tensor[(7, 2, 5), float64],) {
  %1134 = @func_5345() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %1135 = %1134.0;
  (%1135,)
}

def @func_14832() -> (Tensor[(7, 2, 5), float64], Tensor[(72), float64]) {
  %1139 = fn () -> (Tensor[(7, 2, 5), float64], Tensor[(72), float64]) {
    %1136 = @func_12091() /* ty=(Tensor[(8, 6, 12), float64], Tensor[(72), float64]) */;
    %1137 = @func_12752() /* ty=Tensor[(7, 2, 5), float64] */;
    %1138 = %1136.1;
    (%1137, %1138)
  };
  %1139() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(72), float64]) */
}

def @func_9633(%var_9630: Tensor[(4096), int16], %var_9631: Tensor[(72), float64], %var_9632: Tensor[(88, 26), uint64]) -> (Tensor[(60), float64], Tensor[(16, 16, 16), int16], Tensor[(4096), int16], Tensor[(12, 14, 13), bool], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(60), float64], Tensor[(2288), uint64], Tensor[(72), float64], Tensor[(88, 26), uint64]) {
  %1159 = fn (%var_9588: Tensor[(4096), int16], %var_9621: Tensor[(72), float64], %var_9622: Tensor[(88, 26), uint64]) -> (Tensor[(60), float64], Tensor[(16, 16, 16), int16], Tensor[(4096), int16], Tensor[(12, 14, 13), bool], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(60), float64], Tensor[(2288), uint64], Tensor[(72), float64], Tensor[(88, 26), uint64]) {
    %1140 = cast(%var_9588, dtype="int16") /* ty=Tensor[(4096), int16] */;
    %1141 = reshape(%1140, newshape=[16, 16, 16]) /* ty=Tensor[(16, 16, 16), int16] */;
    %1142 = @func_8111(%1141) /* ty=(Tensor[(16, 16, 16), int16], Tensor[(2288), uint64]) */;
    %1143 = @func_5829() /* ty=(Tensor[(12, 14, 13), bool],) */;
    %1144 = cast(meta[relay.Constant][68] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %1145 = reshape(%1144, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %1146 = @func_4838(%1145) /* ty=(int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) */;
    %1147 = @func_9122() /* ty=(Tensor[(60), float64], Tensor[(60), float64]) */;
    %1148 = cast(%var_9621, dtype="float64") /* ty=Tensor[(72), float64] */;
    %1149 = cast(%var_9622, dtype="uint64") /* ty=Tensor[(88, 26), uint64] */;
    %1150 = reshape(%1148, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float64] */;
    %1151 = reshape(%1149, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
    %1152 = @func_3045(%1150, %1151) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
    %1153 = @func_5113() /* ty=Tensor[(60), float64] */;
    %1154 = %1142.0;
    %1155 = %1143.0;
    %1156 = %1146.2;
    %1157 = %1147.1;
    %1158 = %1152.2;
    (%1153, %1154, %var_9588, %1155, %1156, meta[relay.Constant][68] /* ty=Tensor[(126), float32] */, %1157, %1158, %var_9621, %var_9622)
  };
  %1159(%var_9630, %var_9631, %var_9632) /* ty=(Tensor[(60), float64], Tensor[(16, 16, 16), int16], Tensor[(4096), int16], Tensor[(12, 14, 13), bool], Tensor[(1440), float64], Tensor[(126), float32], Tensor[(60), float64], Tensor[(2288), uint64], Tensor[(72), float64], Tensor[(88, 26), uint64]) */
}

def @func_13332() -> (Tensor[(7, 2, 5), float64],) {
  @func_13330() /* ty=(Tensor[(7, 2, 5), float64],) */
}

def @func_848(%var_840: Tensor[(16, 11, 13), uint64], %var_841: Tensor[(16, 11, 13), uint64]) -> Tensor[(16, 11, 13), uint64] {
  %1160 = cast(%var_841, dtype="uint64") /* ty=Tensor[(16, 11, 13), uint64] */;
  %1161 = shape_of(%var_840, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1162 = cast(%var_840, dtype="uint64") /* ty=Tensor[(16, 11, 13), uint64] */;
  %1163 = dyn.reshape(%1160, %1161, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  maximum(%1162, %1163) /* ty=Tensor[(16, 11, 13), uint64] */
}

def @func_5939() -> Tensor[(588, 126), float32] {
  %1164 = @func_4963() /* ty=(int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) */;
  %1165 = %1164.7;
  %1166 = cast(%1165, dtype="float32") /* ty=Tensor[(588, 126), float32] */;
  asin(%1166) /* ty=Tensor[(588, 126), float32] */
}

def @func_447(%var_421: Tensor[(7, 2, 9), float32], %var_427: Tensor[(7, 2, 9), float32]) -> Tensor[(7, 2, 9), int16] {
  %1167 = cast(%var_421, dtype="float32") /* ty=Tensor[(7, 2, 9), float32] */;
  %1168 = asin(%1167) /* ty=Tensor[(7, 2, 9), float32] */;
  %1169 = cast(%var_427, dtype="int16") /* ty=Tensor[(7, 2, 9), int16] */;
  %1170 = shape_of(%1168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1171 = cast(%1168, dtype="int16") /* ty=Tensor[(7, 2, 9), int16] */;
  %1172 = dyn.reshape(%1169, %1170, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  subtract(%1171, %1172) /* ty=Tensor[(7, 2, 9), int16] */
}

def @func_4886() -> int16 {
  @func_4758() /* ty=int16 */
}

def @func_5468(%var_5466: Tensor[(224), int16]) -> (int16, int16, Tensor[(224), int16], Tensor[(2288), uint64], Tensor[(60), float64]) {
  @func_5465(%var_5466) /* ty=(int16, int16, Tensor[(224), int16], Tensor[(2288), uint64], Tensor[(60), float64]) */
}

def @func_14752() -> (Tensor[(7, 2, 5), float64],) {
  %1174 = fn () -> (Tensor[(7, 2, 5), float64],) {
    %1173 = @func_9715() /* ty=Tensor[(7, 2, 5), float64] */;
    (%1173,)
  };
  %1174() /* ty=(Tensor[(7, 2, 5), float64],) */
}

def @func_15163() -> (Tensor[(196), float64],) {
  %1175 = @func_14483() /* ty=(Tensor[(196), float64], Tensor[(60), float64]) */;
  %1176 = %1175.0;
  (%1176,)
}

def @func_8776() -> (int16, Tensor[(7, 2, 5), float32]) {
  %1177 = @func_7440() /* ty=Tensor[(7, 2, 5), float64] */;
  %1178 = cast(%1177, dtype="float32") /* ty=Tensor[(7, 2, 5), float32] */;
  %1179 = @func_4886() /* ty=int16 */;
  %1180 = log2(%1178) /* ty=Tensor[(7, 2, 5), float32] */;
  (%1179, %1180)
}

def @func_11065(%var_11064: Tensor[(9, 10, 16), float64]) -> Tensor[(9, 10, 16), float64] {
  %1182 = fn (%var_11051: Tensor[(9, 10, 16), float64]) -> Tensor[(9, 10, 16), float64] {
    %1181 = cast(%var_11051, dtype="float64") /* ty=Tensor[(9, 10, 16), float64] */;
    asinh(%1181) /* ty=Tensor[(9, 10, 16), float64] */
  };
  %1182(%var_11064) /* ty=Tensor[(9, 10, 16), float64] */
}

def @func_5865() -> Tensor[(12, 14, 13), bool] {
  %1183 = @func_5829() /* ty=(Tensor[(12, 14, 13), bool],) */;
  %1183.0
}

def @func_9553() -> (int16, Tensor[(60), float64]) {
  @func_9551() /* ty=(int16, Tensor[(60), float64]) */
}

def @func_5906() -> (int16,) {
  %1184 = @func_4758() /* ty=int16 */;
  (%1184,)
}

def @func_10088() -> (Tensor[(12, 14, 13), uint8], int16) {
  @func_10086() /* ty=(Tensor[(12, 14, 13), uint8], int16) */
}

def @func_7165(%var_7163: Tensor[(7, 2, 5), float64]) -> Tensor[(7, 2, 5), float64] {
  @func_7162(%var_7163) /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_11336() -> (Tensor[(588, 126), float64],) {
  %1185 = @func_5939() /* ty=Tensor[(588, 126), float32] */;
  %1186 = cast(%1185, dtype="float64") /* ty=Tensor[(588, 126), float64] */;
  %1187 = log(%1186) /* ty=Tensor[(588, 126), float64] */;
  (%1187,)
}

def @func_12561() -> Tensor[(7, 2, 5), float64] {
  %1189 = fn () -> Tensor[(7, 2, 5), float64] {
    %1188 = @func_5345() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %1188.0
  };
  %1189() /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_15530() -> (int16, int16, Tensor[(7, 2, 5), float64], Tensor[(7, 2, 5), float64]) {
  %1197 = fn () -> (int16, int16, Tensor[(7, 2, 5), float64], Tensor[(7, 2, 5), float64]) {
    %1190 = @func_11099() /* ty=(Tensor[(7, 2, 5), float64], Tensor[(72), float64], int16) */;
    %1191 = @func_7277() /* ty=(Tensor[(7, 2, 5), float64],) */;
    %1192 = @func_14252() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64]) */;
    %1193 = @func_4758() /* ty=int16 */;
    %1194 = %1190.2;
    %1195 = %1191.0;
    %1196 = %1192.1;
    (%1193, %1194, %1195, %1196)
  };
  %1197() /* ty=(int16, int16, Tensor[(7, 2, 5), float64], Tensor[(7, 2, 5), float64]) */
}

def @func_12518(%var_12500: Tensor[(8, 6, 12), float64]) -> (Tensor[(8, 6, 12), float32], Tensor[(60), float64], Tensor[(252), float64]) {
  %1198 = @func_9661() /* ty=(Tensor[(8, 6, 12), float64],) */;
  %1199 = %1198.0;
  %1200 = cast(%var_12500, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
  %1201 = shape_of(%1199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1202 = cast(%1199, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
  %1203 = dyn.reshape(%1200, %1201, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1204 = cast(meta[relay.Constant][69] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1205 = reshape(%1204, newshape=[6, 7, 6]) /* ty=Tensor[(6, 7, 6), float64] */;
  %1206 = @func_9152(%1205) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(6, 7, 6), float32]) */;
  %1207 = floor_mod(%1202, %1203) /* ty=Tensor[(8, 6, 12), float32] */;
  %1208 = %1206.1;
  (%1207, %1208, meta[relay.Constant][69] /* ty=Tensor[(252), float64] */)
}

def @func_6276(%var_6275: Tensor[(15, 8, 14), float64]) -> (Tensor[(15, 8, 14), float64],) {
  %1211 = fn (%var_6267: Tensor[(15, 8, 14), float64]) -> (Tensor[(15, 8, 14), float64],) {
    %1209 = cast(%var_6267, dtype="float64") /* ty=Tensor[(15, 8, 14), float64] */;
    %1210 = exp(%1209) /* ty=Tensor[(15, 8, 14), float64] */;
    (%1210,)
  };
  %1211(%var_6275) /* ty=(Tensor[(15, 8, 14), float64],) */
}

def @func_4726() -> (Tensor[(60), float64],) {
  @func_4724() /* ty=(Tensor[(60), float64],) */
}

def @func_4840(%var_4839: Tensor[(126), float32]) -> (int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) {
  %1220 = fn (%var_4832: Tensor[(126), float32]) -> (int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) {
    %1212 = @func_4446() /* ty=(int16,) */;
    %1213 = cast(meta[relay.Constant][70] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %1214 = cast(%var_4832, dtype="float32") /* ty=Tensor[(126), float32] */;
    %1215 = reshape(%1213, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), float64] */;
    %1216 = reshape(%1214, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %1217 = @func_2517(%1215, %1216) /* ty=(Tensor[(12, 15, 8), float64], Tensor[(7, 2, 9), int16], Tensor[(60), float64], Tensor[(126), float32]) */;
    %1218 = %1212.0;
    %1219 = %1217.1;
    (%1218, %1219, meta[relay.Constant][70] /* ty=Tensor[(1440), float64] */, %var_4832)
  };
  %1220(%var_4839) /* ty=(int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) */
}

def @func_618(%var_576: Tensor[(5, 3, 4), float64], %var_591: Tensor[(126), float32]) -> (Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) {
  %1221 = cast(%var_576, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %1222 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(5, 3, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1223 = cast(meta[relay.Constant][71] /* ty=Tensor[(5, 3, 4), float64] */, dtype="bool") /* ty=Tensor[(5, 3, 4), bool] */;
  %1224 = dyn.reshape(%1221, %1222, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1225 = cast(%var_591, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1226 = cast(%var_591, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1227 = reshape(%1225, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %1228 = reshape(%1226, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %1229 = cast(meta[relay.Constant][71] /* ty=Tensor[(5, 3, 4), float64] */, dtype="float64") /* ty=Tensor[(5, 3, 4), float64] */;
  %1230 = cast(%var_591, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1231 = cast(%var_591, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1232 = reshape(%1230, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %1233 = reshape(%1231, newshape=[7, 2, 9]) /* ty=Tensor[(7, 2, 9), float32] */;
  %1234 = less(%1223, %1224) /* ty=Tensor[(5, 3, 4), bool] */;
  %1235 = @func_447(%1227, %1228) /* ty=Tensor[(7, 2, 9), int16] */;
  %1236 = tan(%1229) /* ty=Tensor[(5, 3, 4), float64] */;
  %1237 = @func_447(%1232, %1233) /* ty=Tensor[(7, 2, 9), int16] */;
  (%1234, %1235, %var_591, %1236, %1237)
}

def @func_9123() -> (Tensor[(60), float64], Tensor[(60), float64]) {
  %1242 = fn () -> (Tensor[(60), float64], Tensor[(60), float64]) {
    %1238 = @func_4724() /* ty=(Tensor[(60), float64],) */;
    %1239 = @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */;
    %1240 = %1238.0;
    %1241 = %1239.2;
    (%1240, %1241)
  };
  %1242() /* ty=(Tensor[(60), float64], Tensor[(60), float64]) */
}

def @func_8612(%var_8565: Tensor[(72, 1), float64], %var_8566: Tensor[(2288), uint64]) -> (int16, Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64]) {
  %1243 = cast(%var_8565, dtype="float64") /* ty=Tensor[(72, 1), float64] */;
  %1244 = cast(%var_8566, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %1245 = reshape(%1243, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float64] */;
  %1246 = reshape(%1244, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %1247 = @func_3045(%1245, %1246) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
  %1248 = @func_4758() /* ty=int16 */;
  %1249 = %1247.2;
  (%1248, %1249, %var_8565, %var_8566)
}

def @func_8658() -> int16 {
  %1251 = fn () -> int16 {
    %1250 = @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */;
    %1250.1
  };
  %1251() /* ty=int16 */
}

def @func_12350() -> (int16, Tensor[(12, 14, 13), float64]) {
  @func_12348() /* ty=(int16, Tensor[(12, 14, 13), float64]) */
}

def @func_4638(%var_4622: Tensor[(16, 14), int16], %var_4623: Tensor[(2288), uint64], %var_4624: Tensor[(60), float64]) -> (int16, Tensor[(4, 3, 6), float64], Tensor[(16, 14), int16], Tensor[(2288), uint64], Tensor[(60), float64]) {
  %1252 = @func_4446() /* ty=(int16,) */;
  %1253 = cast(%var_4622, dtype="int16") /* ty=Tensor[(16, 14), int16] */;
  %1254 = cast(%var_4623, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
  %1255 = cast(%var_4624, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1256 = reshape(%1253, newshape=[7, 8, 4]) /* ty=Tensor[(7, 8, 4), int16] */;
  %1257 = reshape(%1254, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
  %1258 = reshape(%1255, newshape=[30, 2]) /* ty=Tensor[(30, 2), float64] */;
  %1259 = @func_3104(%1256, %1257, %1258) /* ty=(Tensor[(7, 8, 4), int16], Tensor[(4, 3, 6), float64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(5, 3, 4), bool], Tensor[(30, 2), float64], Tensor[(126), float32]) */;
  %1260 = %1252.0;
  %1261 = %1259.1;
  (%1260, %1261, %var_4622, %var_4623, %var_4624)
}

def @func_3108(%var_3105: Tensor[(7, 8, 4), int16], %var_3106: Tensor[(2288), uint64], %var_3107: Tensor[(30, 2), float64]) -> (Tensor[(7, 8, 4), int16], Tensor[(4, 3, 6), float64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(5, 3, 4), bool], Tensor[(30, 2), float64], Tensor[(126), float32]) {
  %1279 = fn (%var_3057: Tensor[(7, 8, 4), int16], %var_3068: Tensor[(2288), uint64], %var_3079: Tensor[(30, 2), float64]) -> (Tensor[(7, 8, 4), int16], Tensor[(4, 3, 6), float64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(5, 3, 4), bool], Tensor[(30, 2), float64], Tensor[(126), float32]) {
    %1262 = cast(%var_3057, dtype="int16") /* ty=Tensor[(7, 8, 4), int16] */;
    %1263 = shape_of(meta[relay.Constant][72] /* ty=Tensor[(7, 8, 4), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1264 = cast(meta[relay.Constant][72] /* ty=Tensor[(7, 8, 4), int16] */, dtype="int16") /* ty=Tensor[(7, 8, 4), int16] */;
    %1265 = dyn.reshape(%1262, %1263, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1266 = cast(meta[relay.Constant][73] /* ty=Tensor[(72), float64] */, dtype="float64") /* ty=Tensor[(72), float64] */;
    %1267 = cast(%var_3068, dtype="uint64") /* ty=Tensor[(2288), uint64] */;
    %1268 = reshape(%1266, newshape=[4, 3, 6]) /* ty=Tensor[(4, 3, 6), float64] */;
    %1269 = reshape(%1267, newshape=[2288]) /* ty=Tensor[(2288), uint64] */;
    %1270 = @func_3045(%1268, %1269) /* ty=(Tensor[(4, 3, 6), float64], Tensor[(16, 11, 13), uint64], Tensor[(2288), uint64]) */;
    %1271 = cast(%var_3079, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
    %1272 = cast(meta[relay.Constant][74] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %1273 = reshape(%1271, newshape=[5, 3, 4]) /* ty=Tensor[(5, 3, 4), float64] */;
    %1274 = reshape(%1272, newshape=[126]) /* ty=Tensor[(126), float32] */;
    %1275 = @func_618(%1273, %1274) /* ty=(Tensor[(5, 3, 4), bool], Tensor[(7, 2, 9), int16], Tensor[(126), float32], Tensor[(5, 3, 4), float64], Tensor[(7, 2, 9), int16]) */;
    %1276 = logical_xor(%1264, %1265) /* ty=Tensor[(7, 8, 4), int16] */;
    %1277 = %1270.0;
    %1278 = %1275.0;
    (%1276, %1277, meta[relay.Constant][73] /* ty=Tensor[(72), float64] */, %var_3068, %1278, %var_3079, meta[relay.Constant][74] /* ty=Tensor[(126), float32] */)
  };
  %1279(%var_3105, %var_3106, %var_3107) /* ty=(Tensor[(7, 8, 4), int16], Tensor[(4, 3, 6), float64], Tensor[(72), float64], Tensor[(2288), uint64], Tensor[(5, 3, 4), bool], Tensor[(30, 2), float64], Tensor[(126), float32]) */
}

def @func_15602(%var_15580: Tensor[(60), float64]) -> (Tensor[(72), float64], Tensor[(2288, 1), float32], Tensor[(60), float64], Tensor[(12, 14, 13), bool]) {
  %1280 = @func_14802() /* ty=(Tensor[(72), float64],) */;
  %1281 = cast(%var_15580, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1282 = reshape(%1281, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %1283 = @func_7553(%1282) /* ty=(Tensor[(7, 2, 5), float64], Tensor[(60), float64], Tensor[(224), int16], Tensor[(60), float64], Tensor[(2288, 1), float32], int16) */;
  %1284 = %1280.0;
  %1285 = %1283.4;
  %1286 = @func_9786() /* ty=Tensor[(12, 14, 13), bool] */;
  (%1284, %1285, %var_15580, %1286)
}

def @func_9551() -> (int16, Tensor[(60), float64]) {
  %1287 = @func_7659() /* ty=(int16, int16, Tensor[(60), float64]) */;
  %1288 = @func_5664() /* ty=(Tensor[(60), float64], int16) */;
  %1289 = %1287.1;
  %1290 = %1288.0;
  (%1289, %1290)
}

def @func_10246() -> Tensor[(7, 2, 5), float64] {
  %1291 = @func_5234() /* ty=(Tensor[(7, 2, 5), float64],) */;
  %1291.0
}

def @func_5941() -> Tensor[(588, 126), float32] {
  @func_5939() /* ty=Tensor[(588, 126), float32] */
}

def @func_7301() -> (Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) {
  @func_7299() /* ty=(Tensor[(60), float64], Tensor[(7, 2, 5), float64], Tensor[(2, 1320), float32]) */
}

def @func_5830() -> (Tensor[(12, 14, 13), bool],) {
  %1294 = fn () -> (Tensor[(12, 14, 13), bool],) {
    %1292 = @func_5191() /* ty=(Tensor[(12, 14, 13), bool],) */;
    %1293 = %1292.0;
    (%1293,)
  };
  %1294() /* ty=(Tensor[(12, 14, 13), bool],) */
}

def @func_9494() -> Tensor[(7, 2, 5), float32] {
  @func_9492() /* ty=Tensor[(7, 2, 5), float32] */
}

def @func_11828(%var_11810: Tensor[(15, 3, 4), float32]) -> (Tensor[(15, 3, 4), float32],) {
  %1295 = cast(%var_11810, dtype="float32") /* ty=Tensor[(15, 3, 4), float32] */;
  %1296 = sqrt(%1295) /* ty=Tensor[(15, 3, 4), float32] */;
  (%1296,)
}

def @func_11338() -> (Tensor[(588, 126), float64],) {
  @func_11336() /* ty=(Tensor[(588, 126), float64],) */
}

def @func_4965() -> (int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) {
  @func_4963() /* ty=(int16, Tensor[(126), float32], Tensor[(588, 126), int64], Tensor[(2288), uint64], Tensor[(72, 1), float64], Tensor[(2288), uint64], Tensor[(60), float64], Tensor[(588, 126), uint8]) */
}

def @func_10248() -> Tensor[(7, 2, 5), float64] {
  @func_10246() /* ty=Tensor[(7, 2, 5), float64] */
}

def @func_7316(%var_7310: Tensor[(2640), float32]) -> (Tensor[(60), float64], Tensor[(4, 660), float32], Tensor[(588), bool], Tensor[(126, 1), float32], Tensor[(2640), float32], Tensor[(1440), float64]) {
  %1297 = cast(meta[relay.Constant][75] /* ty=Tensor[(588), bool] */, dtype="bool") /* ty=Tensor[(588), bool] */;
  %1298 = cast(meta[relay.Constant][76] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %1299 = cast(%var_7310, dtype="float32") /* ty=Tensor[(2640), float32] */;
  %1300 = reshape(%1297, newshape=[7, 7, 12]) /* ty=Tensor[(7, 7, 12), bool] */;
  %1301 = reshape(%1298, newshape=[126, 1]) /* ty=Tensor[(126, 1), float32] */;
  %1302 = reshape(%1299, newshape=[4, 660]) /* ty=Tensor[(4, 660), float32] */;
  %1303 = @func_3334(%1300, %1301, %1302) /* ty=(Tensor[(7, 7, 12), bool], Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126, 1), float32], Tensor[(16, 11, 13), uint64], Tensor[(2288, 1), uint64], Tensor[(7, 2, 9), int16], Tensor[(4, 660), float32]) */;
  %1304 = cast(meta[relay.Constant][76] /* ty=Tensor[(126, 1), float32] */, dtype="float32") /* ty=Tensor[(126, 1), float32] */;
  %1305 = reshape(%1304, newshape=[126]) /* ty=Tensor[(126), float32] */;
  %1306 = @func_4838(%1305) /* ty=(int16, Tensor[(7, 2, 9), int16], Tensor[(1440), float64], Tensor[(126), float32]) */;
  %1307 = @func_5113() /* ty=Tensor[(60), float64] */;
  %1308 = %1303.7;
  %1309 = %1306.2;
  (%1307, %1308, meta[relay.Constant][75] /* ty=Tensor[(588), bool] */, meta[relay.Constant][76] /* ty=Tensor[(126, 1), float32] */, %var_7310, %1309)
}

def @func_4055(%var_4053: Tensor[(7, 11, 1), float64], %var_4054: int16) -> (Tensor[(7, 11, 1), float64], Tensor[(7, 2, 5), bool], int16) {
  %1316 = fn (%var_4024: Tensor[(7, 11, 1), float64], %var_4038: int16) -> (Tensor[(7, 11, 1), float64], Tensor[(7, 2, 5), bool], int16) {
    %1310 = cast(%var_4024, dtype="float64") /* ty=Tensor[(7, 11, 1), float64] */;
    %1311 = cast(%var_4038, dtype="int16") /* ty=int16 */;
    %1312 = reshape(%1311, newshape=[]) /* ty=int16 */;
    %1313 = @func_921(%1312) /* ty=(Tensor[(7, 2, 5), bool],) */;
    %1314 = asin(%1310) /* ty=Tensor[(7, 11, 1), float64] */;
    %1315 = %1313.0;
    (%1314, %1315, %var_4038)
  };
  %1316(%var_4053, %var_4054) /* ty=(Tensor[(7, 11, 1), float64], Tensor[(7, 2, 5), bool], int16) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen861/build/output.py", line 4290, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:31:05] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


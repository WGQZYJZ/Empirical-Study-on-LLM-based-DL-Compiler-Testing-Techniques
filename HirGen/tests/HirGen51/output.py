import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_287 = relay.var("var_287", dtype = "float64", shape = (16, 13, 1))#candidate|287|(16, 13, 1)|var|float64
uop_288 = relay.atan(var_287.astype('float64')) # shape=(16, 13, 1)
output = uop_288
output2 = uop_288
func_296 = relay.Function([var_287,], output)
mod['func_296'] = func_296
mod = relay.transform.InferType()(mod)
mutated_mod['func_296'] = func_296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_297 = relay.var("var_297", dtype = "float64", shape = (16, 13, 1))#candidate|297|(16, 13, 1)|var|float64
func_296_call = mutated_mod.get_global_var('func_296')
call_298 = func_296_call(var_297)
output = call_298
func_299 = relay.Function([var_297], output)
mutated_mod['func_299'] = func_299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_474 = relay.var("var_474", dtype = "bool", shape = (4, 1, 6))#candidate|474|(4, 1, 6)|var|bool
var_475 = relay.var("var_475", dtype = "bool", shape = (4, 16, 6))#candidate|475|(4, 16, 6)|var|bool
bop_476 = relay.logical_or(var_474.astype('bool'), var_475.astype('bool')) # shape=(4, 16, 6)
func_296_call = mod.get_global_var('func_296')
func_299_call = mutated_mod.get_global_var('func_299')
var_498 = relay.var("var_498", dtype = "float64", shape = (208,))#candidate|498|(208,)|var|float64
call_497 = func_296_call(relay.reshape(var_498.astype('float64'), [16, 13, 1]))
call_499 = func_296_call(relay.reshape(var_498.astype('float64'), [16, 13, 1]))
func_296_call = mod.get_global_var('func_296')
func_299_call = mutated_mod.get_global_var('func_299')
call_516 = func_296_call(relay.reshape(call_497.astype('float64'), [16, 13, 1]))
call_517 = func_296_call(relay.reshape(call_497.astype('float64'), [16, 13, 1]))
func_296_call = mod.get_global_var('func_296')
func_299_call = mutated_mod.get_global_var('func_299')
call_527 = func_296_call(relay.reshape(call_497.astype('float64'), [16, 13, 1]))
call_528 = func_296_call(relay.reshape(call_497.astype('float64'), [16, 13, 1]))
func_296_call = mod.get_global_var('func_296')
func_299_call = mutated_mod.get_global_var('func_299')
call_534 = func_296_call(relay.reshape(var_498.astype('float64'), [16, 13, 1]))
call_535 = func_296_call(relay.reshape(var_498.astype('float64'), [16, 13, 1]))
const_547 = relay.const([[[4.775838,-9.317280,6.989745,-5.170648,7.023825],[-6.061365,2.293993,3.653358,-1.204837,8.333504],[-9.476194,-4.722066,-0.492399,-1.872246,-1.919985],[4.872782,-5.262899,-3.980698,7.434301,-7.686382],[-8.048453,-3.238235,-2.128680,-8.317034,8.572702],[2.629069,3.550497,-7.780627,7.233929,2.897105],[-9.822925,-4.244312,-5.873451,-4.664575,0.908899],[-2.135655,7.954172,0.830615,-5.947991,9.695638],[1.010796,9.647338,-9.621312,1.004539,-6.291348],[-8.837045,0.278134,-3.296535,2.914540,-3.228989],[0.485663,-7.202786,1.625070,-2.623138,3.185204],[-3.299127,-7.008838,0.639348,2.037037,4.551865],[4.574087,-7.345558,-0.559060,-0.223200,3.102666]],[[-6.789445,6.829583,3.719547,-4.309390,-3.292890],[8.682979,-1.912864,2.416181,4.104356,-6.170001],[-9.849679,-3.907405,0.094182,3.537486,-3.993316],[-6.835735,7.561733,-0.403758,-4.101613,-1.841811],[-0.307286,9.289248,-1.765002,9.450813,9.098423],[-7.276151,1.847840,-7.728928,8.732740,6.554609],[-5.871125,-7.056633,9.280996,2.432645,3.235733],[1.929958,2.228729,-2.104148,5.636773,7.038907],[-5.839451,-7.811763,-7.583799,-9.805411,1.902548],[-9.393787,7.270903,1.991156,9.680923,-5.974313],[8.613210,-7.853809,0.419422,-7.635155,-4.599309],[1.810265,9.582095,2.666609,4.717431,7.573961],[1.255743,-7.639642,-5.114519,2.673984,-2.605521]],[[-6.203832,9.591898,3.495049,7.228173,4.147756],[8.083932,-4.361181,3.172337,9.657167,9.404709],[1.465377,-6.813284,3.617146,8.780853,-9.370363],[1.089717,3.854087,6.921146,4.069950,-3.187465],[7.984936,8.763049,-7.916882,1.224505,1.192377],[-2.668918,1.090458,7.678096,0.881767,5.983143],[-3.633738,-1.945655,-0.302780,-8.735716,8.788463],[-8.798315,4.711394,-3.617290,-0.165859,1.565997],[9.750659,-2.391606,-1.515276,2.028033,3.078223],[9.194209,9.412898,9.062736,7.489724,7.426323],[6.325380,5.029488,-2.302790,-8.153924,7.911921],[-4.341888,-2.699653,8.528425,-1.087674,-0.429630],[-8.990002,-6.818425,-9.909365,7.266789,7.065478]],[[-2.802644,-8.736097,3.942808,1.934936,-0.798882],[3.169285,5.861099,3.449686,-2.128048,-8.059936],[4.605915,-6.538596,-3.159813,-2.786170,4.700099],[5.196768,-4.728500,7.082282,-5.652013,0.678564],[-4.341007,9.846370,-3.511150,-6.411507,8.824140],[-3.579224,5.681997,-2.554996,2.289585,2.198330],[-3.429674,-6.831808,9.973476,1.031658,-3.937975],[-3.804420,2.276590,3.411805,-6.308216,3.304108],[-1.635881,1.948818,-2.334396,7.615721,-6.294239],[-2.079790,0.614464,1.102793,8.176509,-9.699156],[1.748557,-9.730129,7.137887,2.011734,7.004831],[1.171319,-2.256936,-8.563235,-1.507488,-7.993460],[-5.031808,2.745079,8.154280,-6.056236,4.628779]],[[-4.687034,6.942015,-4.918481,-7.338130,4.357906],[-3.333496,6.585985,2.804909,8.327295,-2.747969],[-5.718576,4.310479,-1.200267,-0.468416,6.324296],[-5.331204,-6.180535,-6.541075,-9.262081,-6.297828],[-8.390106,-4.436028,2.452075,4.804181,7.028995],[-4.718938,6.346670,9.335668,-9.149502,-7.562977],[-2.046396,-1.076882,8.155846,4.313189,6.026011],[8.278978,-6.970907,-6.473164,4.980483,-2.527968],[7.317377,-1.702160,-0.677664,-0.680671,0.739589],[-0.552555,8.436455,-4.385440,2.276339,-8.741403],[-1.184132,9.492943,7.461511,-3.133273,8.243235],[7.775152,-1.261308,1.532172,-4.135066,4.015359],[8.080041,5.588643,-0.370593,2.455486,9.593088]],[[2.085271,7.120833,-5.605174,-8.513916,9.864612],[7.502387,-3.863408,-0.928350,7.544274,8.802609],[-4.830703,-5.568148,-4.957435,2.177698,7.124890],[0.493992,-9.975173,3.254533,-7.551758,-1.384882],[4.763424,-7.086067,9.367992,-2.530248,3.952090],[3.164971,-7.995032,7.355623,2.343299,-9.129846],[8.258111,7.335357,-2.421747,-5.376409,-1.374041],[-5.257402,4.368580,6.366299,3.143766,4.240890],[6.004347,-2.876386,-7.559729,-4.699328,-2.877861],[-1.469570,4.968427,-0.123374,-3.986306,-6.284032],[1.210191,0.975588,9.739939,0.815011,-0.165528],[-8.793457,9.463713,9.139394,-3.147741,9.427104],[-9.533414,1.440554,4.785251,2.515537,-6.570104]],[[-6.852867,-5.014304,-8.135243,-5.259193,-7.107438],[-4.285319,4.176190,2.317801,-6.716381,-0.299563],[-1.883089,2.642392,-3.339895,5.165688,2.336750],[9.756581,6.359171,2.216384,-3.506915,8.325241],[-6.954493,1.954564,-8.284555,-8.019511,-4.027834],[-9.654857,0.771795,-4.850126,6.356575,3.432564],[-7.669191,-1.962323,-9.351378,0.818857,-5.209364],[6.983475,1.005963,-6.225752,1.737414,-2.237156],[2.318008,-6.626213,-9.012738,9.215511,3.682730],[-0.380998,2.413020,4.491745,-6.460262,-0.398945],[-2.253023,7.970046,-4.500406,3.439683,-0.364678],[-6.096030,-3.034582,-6.706732,3.317839,-2.940159],[-1.629145,-5.902482,-3.089897,7.153264,3.376742]],[[6.608055,5.017441,5.251797,-6.714022,8.433173],[-5.663153,-8.831750,1.894293,5.419162,-8.444720],[5.419110,4.637597,8.485374,4.571755,-0.639853],[-6.911636,-9.738367,5.078143,-7.585074,-1.623494],[-1.088630,3.702306,-3.548272,-6.469399,9.212213],[8.338773,0.049153,4.535358,-2.648476,-8.829035],[3.681568,-1.262040,-7.330913,8.865007,8.075703],[0.275003,-3.366053,8.959439,3.034094,-6.677097],[-7.627439,3.573287,-2.364329,-8.306057,8.241131],[-3.149874,-3.937878,9.604921,-2.693595,5.975301],[-7.115116,6.018391,9.508881,2.049212,-1.007870],[8.638860,-8.698573,6.611942,8.644383,2.249519],[-2.918704,6.336676,7.859030,0.223044,4.424505]],[[9.071183,2.414677,-5.266356,1.458614,2.031801],[-0.758150,5.083828,9.441938,4.541055,-4.333790],[-4.381058,-4.769048,6.710507,-6.719332,4.935084],[2.736040,4.079901,-4.923605,0.768052,-2.822324],[7.246489,-1.738830,7.453351,8.695950,-4.646566],[8.809003,-2.887324,4.793043,8.175620,0.142384],[1.406414,-8.153821,0.315134,0.547656,-1.535966],[-1.418101,-7.213783,-2.911034,-9.130508,-2.550354],[-4.667531,9.738828,-2.782805,-9.910900,-6.654651],[-9.510142,0.246391,7.078865,9.882717,0.591807],[-8.184304,-7.229560,-0.818216,-3.119482,-6.358457],[-3.732145,-1.576420,-2.948829,-3.576206,1.889329],[-6.986683,-8.769950,-7.791643,-4.235679,-4.732876]],[[9.647247,6.130516,2.115776,9.244523,9.584590],[2.016813,-7.994269,0.352131,-2.312232,6.423687],[0.370971,0.305740,7.642805,9.109410,-2.012606],[-1.414561,-0.569066,7.604316,5.153478,7.141343],[-3.951690,-2.093434,-5.077392,6.127961,0.739354],[-3.812217,-8.857782,4.565865,6.929829,-3.071959],[-9.118782,-0.205180,-8.429736,4.207318,-8.398740],[-4.484322,3.290929,8.712647,8.195789,-6.139634],[4.513271,1.198984,-2.372213,-2.114211,9.986909],[9.061483,0.007522,-9.028734,7.903880,4.087335],[-1.705599,2.086471,9.188033,2.390609,4.854015],[3.215248,6.916374,9.830132,6.382418,4.317123],[-6.232758,4.252433,-3.944917,3.467893,0.376711]],[[7.030448,1.666933,6.241376,9.462134,0.968288],[-4.102840,-9.987444,7.424062,9.312410,0.980297],[2.260306,-0.248259,1.877011,-3.011630,-0.806479],[8.286745,5.758072,-8.604437,0.130572,5.912054],[9.225426,-5.755716,0.927190,4.039861,-5.377519],[-3.730457,-3.640590,-2.188854,8.862325,-1.657605],[-3.389692,-6.406767,-7.359157,-1.299056,-9.474299],[-8.863653,8.390296,5.304717,-5.696685,-6.632446],[7.050881,-9.626092,2.904573,8.871963,9.028939],[-8.215448,-3.054952,8.737661,-7.936650,-8.945208],[-3.372524,-5.510449,3.509505,-1.337790,-8.204948],[8.430978,7.709848,2.031775,-5.170177,-8.699304],[-1.743500,-5.947145,9.806938,-6.304845,1.502510]],[[-3.433015,8.558791,-5.631652,0.809848,9.535774],[1.143157,0.916404,-8.346476,1.857175,-7.595753],[6.149230,-0.748841,6.326818,3.118480,2.725179],[-4.403599,-4.075784,-5.736664,9.343011,-4.510457],[0.019545,8.851442,-9.608520,9.658118,-3.275635],[6.994211,9.640819,4.510440,9.919706,-9.291963],[-5.861604,4.700934,-7.126572,3.052012,8.080385],[-1.027721,1.425452,3.403531,-7.570353,8.428980],[-2.919277,-4.195725,-3.994447,-9.420468,-1.242559],[4.642938,-1.440482,-1.433897,-9.516587,-5.563733],[5.605427,6.248938,-2.718097,-4.942112,6.762366],[2.528588,1.513510,6.830719,-8.274061,2.042169],[-9.729462,1.770077,5.384822,-3.186799,8.884891]],[[3.483810,5.600352,9.335320,-3.162131,-8.080161],[4.367709,2.213528,0.944745,-7.459982,7.322151],[0.098121,-5.812240,-2.294990,-4.294039,-0.635948],[5.991858,-2.111870,-2.668284,-8.421187,5.780644],[-1.777877,-9.800600,1.428173,0.863978,8.669031],[-1.113538,-1.683636,0.161519,-6.432327,9.692913],[7.750396,9.338028,-7.438802,5.135189,-6.658573],[6.071868,3.394510,-6.454340,-6.124230,1.778938],[-5.225436,-7.709740,-8.863845,5.758688,5.537374],[9.095845,4.398713,-7.406576,-6.581447,-7.101757],[-6.193988,-6.111891,-2.356489,4.837041,-7.954146],[-6.551440,-7.326606,8.477113,4.284368,0.710725],[-4.693431,9.108592,4.545460,9.105113,-5.346909]],[[-6.926748,1.404798,-4.338595,-7.675642,-2.561256],[-8.645686,1.351991,6.073917,-2.638659,-6.901304],[8.039012,-9.772350,-7.551453,-1.925162,-0.185852],[-7.921651,-1.535429,2.287043,0.839348,-7.084875],[-8.992741,-5.115593,2.313230,-2.280126,-6.889045],[4.477274,0.525607,9.522398,-8.768905,2.860163],[-2.954121,5.666580,-3.370142,6.138630,-5.678452],[7.296364,4.540085,8.282306,-7.367961,-2.586612],[-1.287856,-1.476355,1.232816,3.526455,-8.695966],[-8.514145,-9.206870,9.714294,-2.564064,-0.182751],[-0.582689,5.760242,-4.567961,-3.740385,6.325501],[3.944061,-5.512806,3.842043,7.342403,5.100937],[-2.955682,-0.476128,-9.435346,8.947435,1.977394]],[[4.287016,0.041077,3.852755,8.021545,-6.925907],[-8.759632,-9.145444,-3.317096,-9.651256,2.194620],[6.124066,-8.783388,-1.681338,5.867907,3.795145],[-2.724325,-7.259342,-0.013257,0.892094,5.733919],[-2.296739,2.380688,-1.695407,-5.106521,-0.549327],[8.983583,1.074976,8.012504,-6.893106,7.261316],[7.197118,-1.628239,-3.206941,6.045492,1.537732],[6.172104,-5.103129,-3.199726,-5.894501,-4.560121],[-4.453626,-5.789846,1.983823,-0.192494,-0.174100],[3.603695,6.178886,5.622717,-8.022755,0.791404],[8.012561,9.443235,8.439496,1.858737,0.433704],[-5.987962,6.949172,9.835564,0.770996,-7.259656],[-1.110513,7.761824,8.505276,6.134200,-7.823472]],[[3.066780,8.085564,1.326262,3.061982,1.105291],[-5.882144,-2.106460,-8.721239,-3.939429,8.003904],[-9.982846,6.927574,1.961989,-8.123871,-0.379569],[8.045122,7.872954,1.489952,-1.311600,4.043218],[4.179332,3.923453,2.643290,1.441647,4.868505],[-8.705720,-0.698147,-0.279335,-6.093605,-2.012404],[2.182128,2.163302,0.890896,5.313782,4.201151],[3.843679,8.726521,-9.107432,-8.853663,-3.851789],[1.459345,0.137879,-3.517830,2.565953,3.005914],[-1.886299,-8.556653,2.109803,-2.150733,2.213956],[1.392702,-1.431351,5.408052,4.750100,-5.124449],[-9.769319,-2.697251,-8.953720,2.037570,4.650319],[5.114814,1.710388,5.967848,6.458600,6.952069]]], dtype = "float64")#candidate|547|(16, 13, 5)|const|float64
bop_548 = relay.maximum(call_527.astype('uint8'), const_547.astype('uint8')) # shape=(16, 13, 5)
bop_551 = relay.maximum(call_528.astype('uint8'), const_547.astype('uint8')) # shape=(16, 13, 5)
func_296_call = mod.get_global_var('func_296')
func_299_call = mutated_mod.get_global_var('func_299')
call_552 = func_296_call(relay.reshape(call_516.astype('float64'), [16, 13, 1]))
call_553 = func_296_call(relay.reshape(call_516.astype('float64'), [16, 13, 1]))
output = relay.Tuple([bop_476,call_497,var_498,call_516,call_534,bop_548,call_552,])
output2 = relay.Tuple([bop_476,call_499,var_498,call_517,call_535,bop_551,call_553,])
func_559 = relay.Function([var_474,var_475,var_498,], output)
mod['func_559'] = func_559
mod = relay.transform.InferType()(mod)
var_560 = relay.var("var_560", dtype = "bool", shape = (4, 1, 6))#candidate|560|(4, 1, 6)|var|bool
var_561 = relay.var("var_561", dtype = "bool", shape = (4, 16, 6))#candidate|561|(4, 16, 6)|var|bool
var_562 = relay.var("var_562", dtype = "float64", shape = (208,))#candidate|562|(208,)|var|float64
output = func_559(var_560,var_561,var_562,)
func_563 = relay.Function([var_560,var_561,var_562,], output)
mutated_mod['func_563'] = func_563
mutated_mod = relay.transform.InferType()(mutated_mod)
var_768 = relay.var("var_768", dtype = "float64", shape = (15, 3, 5))#candidate|768|(15, 3, 5)|var|float64
uop_769 = relay.acosh(var_768.astype('float64')) # shape=(15, 3, 5)
bop_775 = relay.maximum(var_768.astype('uint64'), relay.reshape(uop_769.astype('uint64'), relay.shape_of(var_768))) # shape=(15, 3, 5)
func_559_call = mod.get_global_var('func_559')
func_563_call = mutated_mod.get_global_var('func_563')
const_781 = relay.const([False,True,True,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True], dtype = "bool")#candidate|781|(24,)|const|bool
var_782 = relay.var("var_782", dtype = "bool", shape = (384,))#candidate|782|(384,)|var|bool
const_783 = relay.const([-6.467676,9.678604,4.158764,-0.877218,-1.442537,1.033486,7.351457,3.620823,9.388907,-9.353630,4.607588,9.690235,6.334024,-6.177840,8.674756,-9.804548,4.634398,0.460784,-6.685974,4.371366,0.737534,-5.157997,-5.395305,-1.344526,-8.084096,9.304447,8.600750,5.334466,1.142826,8.873990,0.145546,-7.726545,7.971337,9.896601,7.615917,-2.827089,8.889823,1.759757,-5.008963,8.066065,6.238477,-5.063571,-1.426354,8.172891,6.008428,-6.871598,-0.086208,0.351345,-3.110160,3.363023,-7.477000,3.031447,-6.524496,9.901456,-4.624237,5.880790,6.509093,-1.189591,2.544744,2.514128,-9.278868,8.009565,-1.794220,-0.509579,8.664994,-7.738434,6.728322,-4.942271,-0.860071,-5.242942,-5.535745,-5.637466,5.875188,0.523302,-9.527002,8.068480,1.102436,7.258460,-8.379768,-0.373562,1.039690,7.380423,-8.557742,-3.771692,3.355638,2.726316,-8.998294,9.505388,-6.882937,-3.481713,9.551835,4.363613,-0.377855,-7.485195,-6.059848,7.491268,0.536293,-4.894621,-3.259335,-9.592059,3.785044,6.432213,-9.200186,7.076173,-1.875237,4.404433,-8.609484,-3.898773,-9.641820,3.050849,5.386444,-4.876777,8.826821,1.582576,-2.703006,9.405762,8.242077,0.433392,9.148048,4.025618,2.062144,8.594705,9.160509,-2.133669,-7.438660,5.165287,-3.949885,-6.977506,-9.443197,0.560714,3.548949,6.149533,-8.234405,-9.481499,6.522523,6.448687,9.282324,-8.968581,-4.007920,-9.852907,-8.433277,-3.996771,0.321815,-5.067653,-6.207943,-9.501119,-0.147916,6.478670,3.278493,-6.189661,8.608046,7.016590,-1.005695,7.192963,-3.790712,2.318034,3.025862,-6.298030,-4.782834,2.829077,-5.142510,8.291611,7.604019,3.908276,-8.736720,9.590410,0.656016,-4.761289,8.888484,-2.136451,5.390559,-6.848612,-8.795699,-1.903230,-9.740694,8.883693,2.550600,1.382031,4.457231,3.279924,4.299813,6.782092,9.035875,-8.841395,-0.057963,6.632496,9.566795,-7.002350,-2.730233,-1.529330,-9.078545,0.190920,-8.043493,-3.124755,-2.262297,-3.078762,4.142857,-5.702432,9.034755,5.588965,-7.812587,-8.133087,-2.939359,6.336264,8.076958,7.399794,1.147012,1.227369], dtype = "float64")#candidate|783|(208,)|const|float64
call_780 = relay.TupleGetItem(func_559_call(relay.reshape(const_781.astype('bool'), [4, 1, 6]), relay.reshape(var_782.astype('bool'), [4, 16, 6]), relay.reshape(const_783.astype('float64'), [208,]), ), 1)
call_784 = relay.TupleGetItem(func_563_call(relay.reshape(const_781.astype('bool'), [4, 1, 6]), relay.reshape(var_782.astype('bool'), [4, 16, 6]), relay.reshape(const_783.astype('float64'), [208,]), ), 1)
const_799 = relay.const([[[-3,-2,4,-5,10],[6,3,-8,-6,10],[3,-2,9,10,6]],[[-7,-4,5,4,1],[-7,6,4,-8,-1],[6,-6,-8,8,9]],[[10,2,5,-4,-9],[-1,-3,-10,-4,-7],[9,-10,-4,9,10]],[[5,-4,-4,6,5],[4,-6,6,-1,-4],[-7,4,7,-8,9]],[[6,6,2,-8,7],[-4,3,5,5,10],[-6,2,4,9,8]],[[8,3,6,3,4],[9,-10,-9,4,2],[-3,10,-10,5,-6]],[[9,-6,7,10,6],[-9,-5,9,-3,7],[-4,-6,6,-9,-7]],[[-3,-9,1,-1,-8],[-6,-1,-6,-4,-3],[6,3,-4,-10,-1]],[[9,5,3,4,6],[10,-8,10,1,-5],[-5,4,5,-7,10]],[[-1,-2,-7,-2,-8],[4,8,-10,8,-2],[-8,5,5,7,-6]],[[1,-7,4,7,-6],[4,-4,-4,5,-6],[4,-6,-5,9,-4]],[[-10,-2,8,-3,-4],[10,1,-4,-10,6],[6,9,8,-2,7]],[[-4,10,6,-4,3],[-9,7,8,-6,10],[4,1,7,-9,-8]],[[6,-5,-8,4,-9],[-1,9,2,-1,8],[2,9,-7,-3,-7]],[[5,3,-10,1,4],[-9,10,-4,7,-3],[-9,7,8,-4,4]]], dtype = "uint64")#candidate|799|(15, 3, 5)|const|uint64
bop_800 = relay.power(bop_775.astype('float32'), relay.reshape(const_799.astype('float32'), relay.shape_of(bop_775))) # shape=(15, 3, 5)
bop_811 = relay.subtract(uop_769.astype('float32'), relay.reshape(const_799.astype('float32'), relay.shape_of(uop_769))) # shape=(15, 3, 5)
func_559_call = mod.get_global_var('func_559')
func_563_call = mutated_mod.get_global_var('func_563')
call_819 = relay.TupleGetItem(func_559_call(relay.reshape(const_781.astype('bool'), [4, 1, 6]), relay.reshape(var_782.astype('bool'), [4, 16, 6]), relay.reshape(const_783.astype('float64'), [208,]), ), 3)
call_820 = relay.TupleGetItem(func_563_call(relay.reshape(const_781.astype('bool'), [4, 1, 6]), relay.reshape(var_782.astype('bool'), [4, 16, 6]), relay.reshape(const_783.astype('float64'), [208,]), ), 3)
output = relay.Tuple([call_780,const_781,var_782,const_783,bop_800,bop_811,call_819,])
output2 = relay.Tuple([call_784,const_781,var_782,const_783,bop_800,bop_811,call_820,])
func_821 = relay.Function([var_768,var_782,], output)
mod['func_821'] = func_821
mod = relay.transform.InferType()(mod)
var_822 = relay.var("var_822", dtype = "float64", shape = (15, 3, 5))#candidate|822|(15, 3, 5)|var|float64
var_823 = relay.var("var_823", dtype = "bool", shape = (384,))#candidate|823|(384,)|var|bool
output = func_821(var_822,var_823,)
func_824 = relay.Function([var_822,var_823,], output)
mutated_mod['func_824'] = func_824
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1095 = relay.var("var_1095", dtype = "float64", shape = (10, 8, 5))#candidate|1095|(10, 8, 5)|var|float64
uop_1096 = relay.erf(var_1095.astype('float64')) # shape=(10, 8, 5)
output = uop_1096
output2 = uop_1096
func_1108 = relay.Function([var_1095,], output)
mod['func_1108'] = func_1108
mod = relay.transform.InferType()(mod)
mutated_mod['func_1108'] = func_1108
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1109 = relay.var("var_1109", dtype = "float64", shape = (10, 8, 5))#candidate|1109|(10, 8, 5)|var|float64
func_1108_call = mutated_mod.get_global_var('func_1108')
call_1110 = func_1108_call(var_1109)
output = call_1110
func_1111 = relay.Function([var_1109], output)
mutated_mod['func_1111'] = func_1111
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1210 = relay.var("var_1210", dtype = "float32", shape = (14, 6, 15))#candidate|1210|(14, 6, 15)|var|float32
const_1211 = relay.const([[[4.596475,6.998053,-3.894452,-9.419067,3.158052,-4.649227,-9.012763,-3.257685,2.093747,5.474291,-0.749211,-8.367511,5.781194,6.787934,6.663087],[-4.486881,9.791555,0.832015,-4.739911,8.801833,3.078787,3.841679,8.780883,5.643668,-7.052804,-8.910954,-9.743828,-1.550308,3.337220,-6.083327],[-8.404722,1.004858,7.274667,2.454729,-3.375303,6.927139,-6.716087,-4.271167,-1.962502,3.835276,-5.595116,8.484429,-2.764521,6.425563,9.430855],[4.672457,-0.628062,1.523482,8.733735,3.282255,-8.204259,9.010261,-8.496967,-1.365502,1.107980,4.748959,4.963748,-2.807229,-7.153215,0.131459],[-6.886665,0.111928,-6.898989,-1.425743,4.209892,0.340528,-4.353672,9.758401,-0.111375,9.338147,5.488955,-8.614709,-2.096302,-2.640466,-1.942424],[-5.957133,-2.871514,7.204204,4.880469,-6.349916,-8.543595,-4.170193,5.110178,0.553674,3.545285,4.254236,9.330722,6.683246,2.284200,8.523331]],[[-1.449787,-7.255565,0.466960,4.226348,2.633897,-9.522408,8.872466,-2.244983,-0.397316,5.484013,-0.827468,-5.197689,-6.962521,4.914911,0.177830],[8.155143,5.458641,1.524844,7.170359,4.389370,-7.997229,-3.352439,-1.838697,-9.240668,-5.925749,-1.251447,6.338735,1.524683,-1.132322,6.004270],[3.658918,3.987615,-2.222238,9.911457,9.133103,-2.003511,-7.415880,-6.206090,8.552097,1.135258,-5.996495,-7.556293,-8.028049,4.637798,2.049314],[8.275989,8.611217,5.930089,5.902307,7.370929,0.739840,-4.673569,6.325700,-9.400631,-0.008616,-0.865953,1.192097,-9.766084,-7.404685,-6.152153],[-2.254288,-8.708749,0.870450,2.937410,7.697526,3.428210,-4.607829,-5.690952,-3.390536,-9.389252,7.611645,8.408637,3.131669,-6.208376,6.595024],[6.679615,-3.080600,4.947591,5.614283,-7.925562,-8.770695,8.271364,-9.571975,-4.415419,-1.601071,4.515985,9.805774,-5.944309,-9.887690,2.069511]],[[-4.817393,0.563754,-4.657756,-6.520387,2.112848,-8.593372,-6.699702,-9.333141,-1.581755,-9.895714,8.043305,-2.887164,-3.252214,9.633517,9.991035],[2.154952,-2.059896,6.274930,3.367702,-4.632108,-3.502598,-0.775986,9.846917,0.686527,0.059013,-7.320713,5.107044,-8.456798,-4.159838,-4.426802],[-7.343603,0.242499,-7.323621,5.320262,-9.371070,-4.940126,9.733038,7.051903,6.015805,-3.107388,-9.014013,3.907651,7.021258,-1.383709,-9.214835],[8.165459,-5.992009,0.694892,7.342113,-0.342872,-2.026551,8.880499,-5.684825,-2.074168,5.662489,-8.661196,-9.832619,-9.251266,6.526331,0.979350],[8.484527,-3.431580,5.647260,8.206357,4.921862,-2.665120,-2.275635,5.967596,-7.407602,0.048309,-4.074818,-4.938029,3.068045,-6.295701,3.141154],[-7.937348,-2.734943,-8.380460,-0.285487,5.551742,2.683671,-4.093809,0.332009,-3.630428,6.101389,1.956599,-5.410095,-8.892169,-2.179029,-0.604963]],[[-8.683756,4.161337,-0.991796,-1.745039,7.383381,-2.407678,0.114777,-4.082880,-8.827530,9.630201,-7.362752,3.688385,-6.696229,6.682137,-0.502027],[-2.763389,-1.336585,7.326925,3.982315,-5.339481,2.605390,7.784516,7.009106,1.541580,4.628145,2.423602,-2.148587,-2.624533,1.898511,7.473783],[8.208493,-2.962229,4.582843,-3.212987,-3.516423,0.741461,4.642052,-4.753652,4.110001,-9.045732,-2.089290,-2.992677,-2.269790,9.360058,-8.003629],[5.369410,-8.955245,-8.549800,-8.133048,-5.791673,9.197905,-1.781076,7.054679,2.553449,7.013461,0.829260,9.391786,-4.362748,-9.236198,1.692076],[-9.942500,-7.557585,1.270743,2.564733,-6.216936,-0.558315,3.797494,-0.403814,2.253959,7.446544,-6.794675,0.511925,2.097924,1.282502,8.819291],[-6.795441,-2.943591,0.838529,7.411062,4.337773,-1.864909,9.149609,-6.598765,-4.997863,1.220180,-3.601435,-3.295512,-2.576451,9.834778,5.576559]],[[-9.304873,2.140703,9.330773,-2.314517,4.313860,-1.077017,9.306175,7.741185,8.439534,-1.285880,-2.704255,-9.700397,-1.438625,-7.521658,9.358905],[-9.764546,5.378957,-5.335225,-5.512079,-0.671420,-1.402013,-2.596125,-4.060148,0.252623,7.720743,1.209047,1.914792,5.073445,-8.715112,4.501097],[8.081263,1.096032,8.746665,3.807949,9.998118,5.026558,-8.889020,6.921551,-9.529313,1.115814,-7.357508,2.579867,-4.907023,1.201467,-3.511394],[-7.349896,7.271322,-5.073700,7.014380,-5.681547,0.703308,-4.905032,5.044035,6.466666,9.139923,-0.020555,1.987082,1.114684,-6.835140,-6.036948],[7.368654,-1.687001,-0.227083,-8.881027,0.667557,-0.438262,-2.585552,-3.037188,2.490354,1.601676,-2.565385,-0.160548,0.325609,-1.865914,9.535895],[-8.500289,9.827960,4.646189,-5.620711,-7.192533,-0.031981,-6.848496,3.089695,8.578308,-7.975570,6.367172,-2.688240,-4.421924,2.823903,7.693519]],[[5.661265,-2.067086,-5.208443,1.722938,8.682054,-8.114555,-1.142763,-8.857894,-4.603093,-3.209804,8.474754,7.417606,-4.112492,8.334729,-4.615973],[-8.246331,0.779241,9.425200,-0.482630,-0.056868,-2.635150,0.071911,1.704106,-9.536666,2.803786,5.918186,3.909498,-3.067202,-0.744421,3.072291],[-4.202269,6.575289,-7.593956,-5.496784,7.779135,-6.710626,6.478813,-8.965657,-7.050198,-8.659333,-8.730712,-2.210223,6.044328,1.022643,-6.816733],[-0.104852,-2.411587,-6.792267,-6.465210,3.773807,9.854046,2.208724,6.374019,-2.408153,5.442427,-7.857407,-5.878412,3.694999,4.381822,4.234117],[7.342219,2.079000,1.781679,9.046027,-4.377783,7.586617,-6.972411,-4.637329,4.300784,2.674819,-0.319275,-3.111159,-3.576428,-7.563338,-9.210920],[-8.187419,4.340667,7.230503,2.558915,5.324523,2.922777,-2.246697,9.374871,3.954906,7.808551,3.848529,-2.364627,-2.112335,8.198829,6.542661]],[[-6.230843,-4.232608,8.023704,3.759927,-9.453769,-7.479045,4.310489,0.011534,2.753793,9.857889,-9.306525,-7.334497,-0.938830,6.692434,6.069484],[9.481360,-9.692863,-8.682750,8.087202,3.223939,-5.604996,8.631738,-5.694921,-5.124844,-0.750054,-5.426028,5.212731,8.780670,0.378838,9.544877],[3.950385,-6.942453,-3.576307,8.805073,-3.305113,7.945503,-3.146356,4.055961,-6.588786,9.090833,5.191820,2.732554,-0.003736,7.959032,6.748161],[1.371059,9.363669,2.544359,-0.228900,-9.803846,9.600910,7.211238,-4.063693,-8.199328,-0.228664,6.755926,0.130524,-1.807476,-9.254724,9.392117],[4.509423,-4.324559,-8.357534,-8.469409,4.230425,-4.348744,0.180175,-0.388519,-9.544809,-0.250201,-0.711375,-2.264579,-8.351180,-0.068955,-4.656645],[-3.911731,-1.085906,8.314669,-1.717505,0.245900,-9.179220,-7.989163,3.844664,1.824861,8.682027,-9.134844,-8.387618,7.734215,-3.285933,5.061369]],[[2.716180,-7.424952,-4.628320,7.809787,9.745119,-1.062261,-0.541476,0.383737,-3.382214,4.245289,-0.005543,9.744230,-1.591208,4.319099,-9.249708],[-2.513269,5.039243,2.101537,-5.180787,-6.599359,5.278691,0.720486,-4.184249,0.825365,7.802954,-5.746804,6.926223,-7.652154,3.636233,-6.220924],[-2.471491,7.036891,9.798220,-4.892116,7.165105,6.917849,1.389273,-1.680721,-7.826675,-8.283225,-8.513664,3.392652,9.848072,-1.082993,-5.175975],[-2.737676,6.777520,-6.676499,5.559286,-3.460569,0.925359,7.311353,-8.617524,-8.109615,-1.982178,-9.961826,-9.776071,-5.786339,-2.729763,-5.102528],[3.187333,4.860636,-4.182372,6.572411,-0.782471,7.731337,4.833833,6.083815,-4.369688,-3.394084,-2.797906,-0.766875,2.998002,-6.428463,1.284530],[-9.600865,-1.349238,3.723235,9.580804,-9.600934,-5.041669,9.892074,-0.764804,3.516678,1.556752,2.523664,-7.339872,-7.851925,-1.225547,1.127627]],[[4.072725,-2.162405,-6.250363,-6.153529,-8.561399,4.393396,-0.876872,7.597111,4.688448,-6.592904,-7.942704,3.655438,6.901409,-0.163084,-7.656918],[1.857507,7.344189,6.120527,8.318979,8.697720,-0.956566,-4.629150,-5.387027,-0.604287,-6.962927,-1.756035,-3.434069,7.343734,7.924981,-3.666313],[-1.298639,4.442181,0.333446,4.818181,-7.746411,2.572585,8.921083,-1.218634,9.963589,-8.538121,1.468420,-2.456840,-0.389414,3.866367,-7.951245],[3.480856,4.359263,-5.378334,-1.285548,1.865772,3.006368,7.615727,-0.066567,-4.517187,-0.326847,3.527573,1.839462,-5.301177,9.139900,8.921227],[0.383411,-9.579039,4.564627,5.863565,-8.027303,-5.643821,7.251777,0.684659,8.384399,6.826564,-6.265206,5.766907,2.065555,4.442672,4.987438],[-2.104722,8.057431,5.465564,2.044479,-6.511031,4.471113,5.883486,6.384171,-6.207842,-2.735361,-0.960575,-5.279183,-5.391557,6.561839,1.552679]],[[-5.697353,3.131672,-6.812622,-2.987401,-3.834855,-4.187229,-7.650539,-7.379636,-1.445170,-7.996819,5.128469,7.748027,5.434835,5.857535,7.167317],[2.588055,-9.067253,2.468458,-8.850885,-3.367757,7.621315,-4.379089,4.563832,4.032900,-7.952005,-5.396891,-0.257930,3.216428,-8.266946,7.307856],[6.981652,3.247416,3.440408,7.698887,7.865291,-0.972911,-0.103498,-4.406582,-7.760701,9.137702,0.682249,-2.420667,9.871375,3.262127,-3.117426],[3.600190,-2.225235,5.821301,8.098680,4.410984,-6.519261,6.819926,-8.788237,-2.337178,6.938821,9.390455,-9.544047,4.977270,-9.175282,6.424850],[1.732135,-2.989436,3.500053,1.156087,-9.787286,3.162978,9.351788,8.215476,-3.982272,-5.285790,1.842045,4.172608,6.403703,5.354588,9.273794],[-5.285602,3.720890,-5.501889,-0.132367,-8.440884,-0.595755,6.467681,-3.724820,-3.205718,7.556146,8.158563,-0.070301,-6.382697,2.475493,1.752801]],[[-1.422319,9.685336,4.286336,-1.150479,1.216106,-8.246317,8.847696,6.534115,5.465366,-0.010869,-3.770992,5.349735,-0.377193,-0.127377,-5.984529],[8.699972,4.671547,-6.627025,-4.154390,-5.217041,1.811433,-8.359425,3.512476,1.693743,2.566001,6.259187,8.408291,-6.269321,-8.362852,9.207809],[1.481787,9.260356,2.243348,6.660842,-4.423888,9.030326,-6.911195,-8.302128,-1.857922,-4.483847,-6.656537,5.130476,3.332191,7.266701,6.113758],[-2.012253,8.559822,3.649471,3.339384,1.682422,9.449008,-0.139657,-3.317016,8.974001,-2.359618,-8.956593,1.363349,-2.036652,5.887756,-8.872371],[-0.658591,3.774573,-6.199667,-9.304856,3.697899,0.359193,-7.372656,6.372783,6.835128,6.026362,-1.528710,-1.534577,-6.950859,-3.951694,-6.704305],[-5.507158,1.814302,0.529731,-3.807832,-7.872903,5.288496,-2.973750,9.535494,-4.576252,-7.196024,-0.167574,7.229188,-9.219384,5.346827,7.689406]],[[9.274460,-7.148300,-7.207952,-0.098200,9.472128,-0.568648,6.456686,-1.955098,-6.767813,2.123838,8.627281,-0.660792,-6.028194,-0.338871,6.540261],[5.262327,0.324398,-5.921124,8.600120,-5.133488,4.632432,3.123778,-3.574290,7.624254,-9.062938,8.982822,-7.582175,-5.588250,7.869037,-9.717500],[6.124157,9.601693,8.141317,-2.358571,5.670411,7.288243,4.053654,0.416354,-8.146515,9.097818,6.007203,-9.665470,-7.541114,-7.935552,4.077097],[-0.260745,-2.871322,8.092538,0.375300,8.511694,1.889427,7.004308,9.264184,-1.327316,7.594523,8.667606,-5.597286,-3.966906,-3.178482,-8.223304],[2.324517,-2.249231,2.122988,0.769515,9.018043,2.304356,7.207226,-1.005150,2.874446,0.315193,-9.922254,9.439793,-4.080465,4.384227,-0.184438],[8.418880,-2.526171,4.015499,5.909666,4.262299,5.548762,4.402801,5.216585,-4.804019,-1.147585,-6.183359,-9.881010,-2.776871,9.952834,9.162357]],[[4.870453,-2.386807,9.338903,4.701706,-3.157313,1.923058,8.892118,3.973353,-1.252725,7.770984,3.952927,3.477787,3.162767,-5.232285,4.565112],[-5.635513,-1.035595,1.973264,7.145540,4.425066,3.321318,7.198750,3.645010,6.519610,-4.877516,3.262256,-1.747112,4.416149,-6.921920,1.932442],[-8.102994,-7.650560,-4.208386,-7.783403,9.567566,5.453309,-3.932188,2.419340,8.372973,-7.324052,-7.878717,2.552308,-6.140534,-9.436780,3.351428],[9.643587,-2.533601,-8.606659,8.757275,-8.635990,-4.454717,1.237125,-0.342878,2.050151,0.664798,-1.873139,2.668890,9.999861,-7.957335,-5.616930],[0.466075,5.244806,4.830812,-1.982933,-3.276275,0.194020,-9.959932,-1.319148,-6.553192,1.611245,0.952299,0.384379,8.894472,-3.427801,-8.009188],[0.027630,-0.105729,4.469304,6.619755,-5.156049,-3.790761,-1.210072,-4.406497,-0.443128,-7.977973,4.718519,2.237196,-7.318128,0.683195,-9.921021]],[[4.911947,1.930522,0.242644,-2.073153,-9.988656,-0.621795,-4.455925,7.263669,3.465564,4.235426,1.026769,9.670056,3.659998,-1.337913,7.530117],[0.849853,-7.145657,-6.863472,1.057176,-6.400330,-8.742856,2.579500,-5.350644,8.428475,-6.028002,8.684324,3.707564,-0.952339,9.660182,8.540953],[5.769693,4.891593,0.619798,8.516613,-7.758623,-3.426876,8.089208,-5.531778,8.693647,3.621142,-2.384206,6.882660,-3.500526,5.164795,-8.084467],[-5.740583,4.467088,-7.914420,7.010207,7.235807,2.462785,-0.141668,8.350499,-0.603872,0.996981,-3.580599,3.453742,1.534922,2.468058,5.568150],[-2.805817,-0.960449,4.934541,-9.722333,-8.754688,9.951553,-5.394372,-0.112591,-5.222550,-5.308355,9.410669,1.299486,-4.676987,-7.270065,3.836113],[-3.446379,0.114754,5.427883,1.876955,7.247294,-2.672041,0.774954,2.604861,-8.077934,6.308027,8.971513,-9.135082,8.053445,2.627815,-3.155945]]], dtype = "float32")#candidate|1211|(14, 6, 15)|const|float32
bop_1212 = relay.maximum(var_1210.astype('float32'), relay.reshape(const_1211.astype('float32'), relay.shape_of(var_1210))) # shape=(14, 6, 15)
output = relay.Tuple([bop_1212,])
output2 = relay.Tuple([bop_1212,])
func_1247 = relay.Function([var_1210,], output)
mod['func_1247'] = func_1247
mod = relay.transform.InferType()(mod)
mutated_mod['func_1247'] = func_1247
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1248 = relay.var("var_1248", dtype = "float32", shape = (14, 6, 15))#candidate|1248|(14, 6, 15)|var|float32
func_1247_call = mutated_mod.get_global_var('func_1247')
call_1249 = func_1247_call(var_1248)
output = call_1249
func_1250 = relay.Function([var_1248], output)
mutated_mod['func_1250'] = func_1250
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1285 = relay.const([[[-7.425093,4.205250,-6.682155,0.621423,7.408818,3.002772,-6.938120,3.471671,-5.009287,-6.083418,-3.660098,2.686789,-5.237602,0.368429,6.388156],[6.094045,-9.290090,3.259052,-3.246521,-1.752044,7.599533,8.176013,0.943254,9.064867,-6.146964,3.898419,-8.099089,-2.064431,1.997664,0.110834],[-7.402635,-3.806986,0.811440,-3.659624,-9.868334,2.602409,-8.440189,-0.673998,8.027180,4.492379,1.229588,-1.668297,-9.254306,-3.005299,3.569893],[-9.311336,-0.709381,-0.958743,-7.403894,9.646046,6.618773,2.252029,-3.117994,6.339801,7.310882,9.490093,-2.729775,-0.939548,-7.030718,-8.346380],[-1.614770,-2.493279,2.493757,-3.608814,3.747009,9.060487,8.039171,-9.191868,-6.543310,2.815272,-1.424310,-2.909454,2.689702,7.354010,8.650456],[6.430984,7.509064,1.315486,-1.651204,-5.732551,0.733106,-7.382305,-8.134533,-7.279061,5.595951,-2.393134,-5.581435,-8.464786,-1.088139,-5.484518],[7.590898,1.842916,8.340991,8.257206,5.893350,4.553961,9.241829,7.724091,-2.665634,-2.807637,7.927680,1.285476,5.844854,0.754367,-2.586964],[-9.256898,2.996015,-8.436999,-2.010444,-6.352443,5.800357,-1.919063,-4.142636,6.167689,-9.864590,-1.136586,-5.033111,0.557084,6.153522,1.195831],[-7.624494,5.275831,-8.548480,-9.750043,0.368282,-5.488150,-3.477441,-4.531999,-2.332760,6.978191,6.472992,-3.383886,-4.573237,-0.919321,4.060855],[5.014477,2.712616,5.542595,-6.920124,-2.697876,1.078767,-3.043964,7.862230,-4.466707,-8.803591,-5.775574,5.213339,-1.045233,5.056312,9.036438],[-9.530516,-5.500389,2.518094,2.469756,-2.587998,7.916403,-6.943911,5.598575,-7.006588,0.780277,-8.891195,8.045860,5.432691,6.248160,-9.656051],[6.016868,2.317951,-4.768458,2.203992,-2.893990,3.092198,1.969751,8.658291,0.651754,-8.561863,7.325779,5.407119,-7.108404,-3.407210,0.542033],[-4.416974,9.393878,-9.193057,-0.619846,-3.415900,5.147723,5.385847,5.859480,-8.847884,-0.329087,-1.963244,1.426914,-4.048906,-8.452395,5.637824],[8.020942,-9.061177,1.051128,-6.767611,-3.890281,-1.853219,-5.160256,7.927543,-6.239083,5.465132,-5.443030,-5.761652,7.076415,-5.246212,2.606058]],[[0.428800,8.768036,-6.989957,-7.776205,3.607018,4.955871,6.341298,4.360546,9.586306,-9.119637,-8.571327,-1.688279,-7.722322,-1.576255,7.716107],[-1.971096,-5.950921,-9.843590,-0.680948,-5.606827,-6.227200,9.119408,2.394675,-3.442633,-4.892654,3.498782,8.873000,-3.151703,1.164107,-4.660615],[-9.929005,6.115750,9.805234,0.129276,1.368159,3.592854,4.622669,6.497773,5.198954,-3.332869,-1.430558,-8.982775,0.951293,3.033133,4.749282],[-4.060420,-6.320384,1.589169,3.257666,3.182772,-1.651451,-4.001103,6.116466,-5.661961,3.833162,-7.431768,2.727768,-2.583136,2.886373,3.031066],[8.321619,1.679350,-7.676969,4.798635,6.443910,-8.217010,1.090637,-2.231349,-0.124212,9.179565,4.536545,8.940070,6.333467,5.462953,1.193203],[3.164013,-8.953047,-4.782712,8.841313,1.106631,-6.282984,-3.445896,-7.075846,-9.537500,-7.525489,6.859917,0.756185,-7.478688,-7.288008,-7.653773],[-3.540249,-2.133524,-0.984931,1.509912,7.129570,-0.129576,-3.855419,6.557358,5.827230,5.242468,-7.213401,0.508287,9.904899,-8.741084,-3.425927],[7.571979,-5.301392,1.861155,-8.938174,5.120593,2.016268,1.291233,-2.125388,6.544465,-4.341092,5.499837,4.260657,3.851733,-9.276640,-2.520813],[-5.356689,-6.143451,1.833308,0.486388,-5.680934,7.415163,-8.460493,-1.314713,-1.699092,9.367247,-5.396450,6.913983,6.570026,2.132690,-2.098277],[-8.114518,6.440774,7.334353,1.558718,9.555548,3.804262,1.268309,4.726822,9.319717,0.362177,5.908442,3.313703,3.425181,1.800366,5.657162],[-3.015492,-8.610156,-8.004075,4.859351,-5.901233,5.530647,3.957982,9.941107,-7.747942,-6.556928,5.304084,-7.087648,-5.510446,-9.331174,-5.196719],[5.700608,8.482675,-4.744381,-1.902354,8.413100,-8.623619,-4.100453,-3.512194,1.893506,-2.088365,-9.238260,8.143325,2.063676,9.412200,7.862175],[4.700140,-2.177168,-0.733809,-4.082461,-7.631188,6.458717,-6.559193,3.346381,1.116232,-4.634626,-8.854429,-5.572074,1.251996,-9.060998,7.461473],[-5.252047,-6.392654,1.839937,0.119503,6.804759,-8.461613,0.071399,1.575781,1.288634,8.014808,-7.183892,-6.351786,7.899108,-9.200931,-3.998426]],[[2.370537,-1.426117,-2.950375,-6.121741,0.303245,6.846065,-4.294855,5.209505,2.712390,-9.063259,-8.367581,2.202530,8.992915,-1.790819,-1.144161],[9.101222,0.900429,6.921436,-9.837771,6.529247,-0.049888,2.847315,6.712463,-3.039699,1.372403,2.667302,0.948438,-0.142297,8.881614,6.357450],[-0.284378,4.992255,-9.290318,5.654671,-6.863211,9.728654,1.309242,1.269803,8.997239,-2.793853,8.332172,-4.554816,-9.750341,6.431495,2.153173],[4.951978,-6.664250,7.521775,4.657633,4.497852,8.914072,-5.010910,2.617603,-9.481735,9.384545,4.235446,-9.188107,-5.743894,-5.044491,4.185360],[-9.868055,6.376157,9.600821,8.058302,1.320175,9.078114,2.753719,-3.640371,3.264156,9.837368,1.217052,5.623659,-9.917194,-7.940899,-1.799458],[-7.358610,-1.231351,7.100985,-9.253991,-7.051603,0.113138,2.405631,-6.891756,2.429600,-7.566751,-2.522943,8.202833,4.628778,4.549428,-1.077274],[6.893189,-2.862955,0.431328,-4.153458,2.223996,1.153171,-1.249051,1.174627,-2.314054,-5.432623,-5.444979,-0.740884,9.001566,4.223289,5.442031],[-4.905652,1.748694,-5.729013,-9.227603,-8.217984,-2.607060,-3.934196,-5.880401,9.182102,-9.653982,4.820249,-2.419732,-9.405937,-7.238650,1.995414],[9.185649,-6.800537,-6.070606,8.272669,6.772518,-5.409738,-5.670926,-4.206930,1.023908,1.948028,-8.962080,-1.143094,7.757517,-5.553388,-2.503416],[0.261811,7.991554,-4.969247,5.769710,-0.180985,-1.859880,-6.571307,7.777985,7.200279,-8.348400,-0.274356,-6.688573,4.440381,6.456755,2.389638],[2.563721,4.431109,-9.509092,6.577458,-3.195494,7.819658,-9.383225,3.186373,-5.776595,-8.110921,6.396726,4.948050,4.310153,3.767351,-1.106974],[9.139304,-3.300111,-2.301060,-6.035292,-6.740531,1.660268,4.848871,7.376432,9.211079,-3.466919,-4.595583,-4.464793,5.270048,-0.441981,-6.277842],[5.752398,3.566777,1.965846,-7.027779,9.386610,-1.571863,-9.340507,-8.763737,-5.270596,-8.926755,-2.628537,-1.600491,-0.305640,-9.348416,7.143550],[-7.799711,-6.166022,-2.961770,2.320043,-2.009882,2.014728,-0.592798,-9.362046,3.547704,-6.116130,6.259510,-7.312183,-4.910039,5.695296,6.846481]]], dtype = "float64")#candidate|1285|(3, 14, 15)|const|float64
uop_1286 = relay.atan(const_1285.astype('float64')) # shape=(3, 14, 15)
func_296_call = mod.get_global_var('func_296')
func_299_call = mutated_mod.get_global_var('func_299')
var_1297 = relay.var("var_1297", dtype = "float64", shape = (208, 1))#candidate|1297|(208, 1)|var|float64
call_1296 = func_296_call(relay.reshape(var_1297.astype('float64'), [16, 13, 1]))
call_1298 = func_296_call(relay.reshape(var_1297.astype('float64'), [16, 13, 1]))
func_821_call = mod.get_global_var('func_821')
func_824_call = mutated_mod.get_global_var('func_824')
var_1301 = relay.var("var_1301", dtype = "float64", shape = (225,))#candidate|1301|(225,)|var|float64
var_1302 = relay.var("var_1302", dtype = "bool", shape = (24, 16))#candidate|1302|(24, 16)|var|bool
call_1300 = relay.TupleGetItem(func_821_call(relay.reshape(var_1301.astype('float64'), [15, 3, 5]), relay.reshape(var_1302.astype('bool'), [384,]), ), 1)
call_1303 = relay.TupleGetItem(func_824_call(relay.reshape(var_1301.astype('float64'), [15, 3, 5]), relay.reshape(var_1302.astype('bool'), [384,]), ), 1)
var_1309 = relay.var("var_1309", dtype = "float64", shape = (3, 14, 15))#candidate|1309|(3, 14, 15)|var|float64
bop_1310 = relay.left_shift(uop_1286.astype('uint64'), relay.reshape(var_1309.astype('uint64'), relay.shape_of(uop_1286))) # shape=(3, 14, 15)
output = relay.Tuple([call_1296,var_1297,call_1300,var_1301,var_1302,bop_1310,])
output2 = relay.Tuple([call_1298,var_1297,call_1303,var_1301,var_1302,bop_1310,])
func_1315 = relay.Function([var_1297,var_1301,var_1302,var_1309,], output)
mod['func_1315'] = func_1315
mod = relay.transform.InferType()(mod)
mutated_mod['func_1315'] = func_1315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1315_call = mutated_mod.get_global_var('func_1315')
var_1317 = relay.var("var_1317", dtype = "float64", shape = (208, 1))#candidate|1317|(208, 1)|var|float64
var_1318 = relay.var("var_1318", dtype = "float64", shape = (225,))#candidate|1318|(225,)|var|float64
var_1319 = relay.var("var_1319", dtype = "bool", shape = (24, 16))#candidate|1319|(24, 16)|var|bool
var_1320 = relay.var("var_1320", dtype = "float64", shape = (3, 14, 15))#candidate|1320|(3, 14, 15)|var|float64
call_1316 = func_1315_call(var_1317,var_1318,var_1319,var_1320,)
output = call_1316
func_1321 = relay.Function([var_1317,var_1318,var_1319,var_1320,], output)
mutated_mod['func_1321'] = func_1321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1340 = relay.var("var_1340", dtype = "int32", shape = (9, 8, 4))#candidate|1340|(9, 8, 4)|var|int32
var_1341 = relay.var("var_1341", dtype = "int32", shape = (9, 8, 4))#candidate|1341|(9, 8, 4)|var|int32
bop_1342 = relay.subtract(var_1340.astype('int32'), relay.reshape(var_1341.astype('int32'), relay.shape_of(var_1340))) # shape=(9, 8, 4)
func_1315_call = mod.get_global_var('func_1315')
func_1321_call = mutated_mod.get_global_var('func_1321')
var_1346 = relay.var("var_1346", dtype = "float64", shape = (208,))#candidate|1346|(208,)|var|float64
var_1347 = relay.var("var_1347", dtype = "float64", shape = (225, 1))#candidate|1347|(225, 1)|var|float64
var_1348 = relay.var("var_1348", dtype = "bool", shape = (384,))#candidate|1348|(384,)|var|bool
var_1349 = relay.var("var_1349", dtype = "float64", shape = (630,))#candidate|1349|(630,)|var|float64
call_1345 = relay.TupleGetItem(func_1315_call(relay.reshape(var_1346.astype('float64'), [208, 1]), relay.reshape(var_1347.astype('float64'), [225,]), relay.reshape(var_1348.astype('bool'), [24, 16]), relay.reshape(var_1349.astype('float64'), [3, 14, 15]), ), 1)
call_1350 = relay.TupleGetItem(func_1321_call(relay.reshape(var_1346.astype('float64'), [208, 1]), relay.reshape(var_1347.astype('float64'), [225,]), relay.reshape(var_1348.astype('bool'), [24, 16]), relay.reshape(var_1349.astype('float64'), [3, 14, 15]), ), 1)
output = relay.Tuple([bop_1342,call_1345,var_1346,var_1347,var_1348,var_1349,])
output2 = relay.Tuple([bop_1342,call_1350,var_1346,var_1347,var_1348,var_1349,])
func_1351 = relay.Function([var_1340,var_1341,var_1346,var_1347,var_1348,var_1349,], output)
mod['func_1351'] = func_1351
mod = relay.transform.InferType()(mod)
mutated_mod['func_1351'] = func_1351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1351_call = mutated_mod.get_global_var('func_1351')
var_1353 = relay.var("var_1353", dtype = "int32", shape = (9, 8, 4))#candidate|1353|(9, 8, 4)|var|int32
var_1354 = relay.var("var_1354", dtype = "int32", shape = (9, 8, 4))#candidate|1354|(9, 8, 4)|var|int32
var_1355 = relay.var("var_1355", dtype = "float64", shape = (208,))#candidate|1355|(208,)|var|float64
var_1356 = relay.var("var_1356", dtype = "float64", shape = (225, 1))#candidate|1356|(225, 1)|var|float64
var_1357 = relay.var("var_1357", dtype = "bool", shape = (384,))#candidate|1357|(384,)|var|bool
var_1358 = relay.var("var_1358", dtype = "float64", shape = (630,))#candidate|1358|(630,)|var|float64
call_1352 = func_1351_call(var_1353,var_1354,var_1355,var_1356,var_1357,var_1358,)
output = call_1352
func_1359 = relay.Function([var_1353,var_1354,var_1355,var_1356,var_1357,var_1358,], output)
mutated_mod['func_1359'] = func_1359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1382 = relay.var("var_1382", dtype = "float64", shape = (11, 9, 9))#candidate|1382|(11, 9, 9)|var|float64
const_1383 = relay.const([[[-3.842098,9.916588,-6.054510,1.358416,7.151823,4.409825,9.136072,-5.636682,-2.006669],[-0.311098,2.398560,8.595212,3.707736,-0.557229,-3.132063,-6.591025,-0.151764,5.622934],[1.665245,0.516200,5.314963,0.294056,1.868796,-2.544505,6.160830,4.918298,-3.839502],[8.720459,8.547158,-4.892695,6.134930,3.615065,-6.860192,-8.663266,3.317676,-6.920115],[-2.152611,-7.607953,-9.511921,0.283894,3.833309,-1.155621,0.623530,8.521241,5.864442],[-3.107947,-0.626613,-6.522695,-6.829271,2.561140,4.320549,-1.911458,0.851884,5.307033],[-2.887763,2.481222,1.141288,9.672077,3.623841,-4.657689,-1.345029,1.243847,-4.043607],[4.425088,-2.118429,-1.107154,8.705083,4.292389,3.796768,-0.085607,6.189036,0.299886],[6.429408,2.989348,-6.257452,8.665085,-3.568835,4.855424,-0.538888,9.657399,7.459884]],[[-0.172904,4.087845,4.853877,7.061189,-4.768983,1.591195,6.019347,-8.146549,6.696836],[-1.134756,-6.209797,4.266581,1.902388,-7.395090,-9.166666,6.658495,-3.608547,-2.915629],[5.690387,7.086667,-7.998737,-5.296667,9.472813,-9.707700,9.078445,8.688345,2.047001],[4.453183,0.540547,-2.075191,-6.052713,-0.862450,-2.604633,-6.222066,-9.756977,1.615640],[5.547972,6.951362,-0.287869,8.026132,-7.526776,3.248173,-6.621091,4.193086,4.869421],[6.316393,5.176522,-3.944647,0.967906,7.733892,3.112897,-2.767040,-7.021232,9.093448],[-9.418831,-5.181157,-7.460925,-6.084679,5.235152,-8.897166,8.332267,-9.752030,3.234888],[-1.990876,7.105227,4.804440,-9.433601,6.401304,8.884559,-1.796369,-9.078474,-6.573204],[-8.880944,4.941958,-6.513864,-4.000962,6.932723,-9.029971,-4.459612,3.623613,5.758166]],[[-8.248391,9.335668,-5.375300,-7.193001,-4.915703,-2.360457,3.724073,4.919665,-3.102613],[-4.774721,-5.310142,1.066299,8.169208,4.800624,0.043103,4.984080,6.211168,-8.767134],[3.643142,-9.869269,7.340953,-1.277992,3.139363,0.359770,-5.437290,5.709758,3.169409],[8.348336,-5.513192,-6.267353,1.612772,8.155287,-9.873200,3.098854,-1.804264,1.959838],[-6.636526,6.667520,1.351132,6.209222,-3.668867,-7.575774,4.442813,-9.462646,4.883441],[2.786784,-4.044164,4.752054,-9.458332,-9.955751,-7.229766,-6.693710,-5.954216,-0.209723],[-3.099931,8.213330,-7.633599,7.561777,9.784023,7.051665,-4.564001,-9.581487,6.208016],[2.971965,-3.806599,0.871736,2.284358,5.949478,7.338739,6.342970,4.647423,-9.538020],[7.962705,0.519819,-0.222106,3.309531,8.316028,1.229090,1.875569,8.530820,3.545483]],[[-3.539674,-6.438948,-4.529743,4.838565,-6.513251,-7.896758,9.378874,-6.038233,-0.749623],[0.352704,6.881315,3.448073,-9.043759,8.010329,-4.524707,-0.373690,4.273861,-1.862012],[-5.740239,8.063423,-7.127196,8.555746,7.030569,-4.980283,-3.697425,7.952982,8.052954],[1.908657,7.297042,3.704833,1.835820,-3.135735,-5.353867,-7.071580,7.916731,7.267936],[1.198679,2.153449,-4.618158,-6.894577,4.948785,-5.756338,2.619522,-4.073572,-3.645745],[-2.559960,1.433800,-4.098290,-4.483749,-7.909111,1.962194,6.937827,7.003646,3.650738],[2.250763,-6.191799,-4.809306,4.509712,-8.908643,-9.924620,7.153968,-2.089852,-6.723835],[-2.434599,2.066017,-2.904516,7.777071,0.790556,-8.334998,-0.676068,1.024585,-4.801604],[-6.230506,7.897597,-5.459735,6.782817,-7.904771,-0.318210,6.156052,6.517012,-5.042988]],[[7.450714,-5.716363,-6.793146,8.908901,-8.266863,8.404570,-2.965187,-5.343719,2.446195],[-8.272882,-6.423253,-5.414118,4.938749,8.471397,7.203684,-6.007031,5.872667,6.049521],[9.444621,0.175590,6.862072,-6.895919,-7.101606,8.474782,0.823854,-2.192195,6.606842],[4.795496,-7.895064,7.963650,-9.824500,-0.656949,-9.019308,7.391073,3.659740,6.210280],[9.016434,-5.531322,-0.243323,5.835610,2.485360,3.868207,8.525450,7.551970,-8.681370],[6.342097,-8.124381,-3.981699,4.657344,-2.338932,-7.384914,-6.520502,-1.641994,9.627569],[-7.384339,-2.500515,1.938800,-3.482248,-7.588105,-1.818189,5.151986,7.162971,-3.773810],[-3.118167,8.719774,-1.807258,8.403934,-3.071605,8.586137,-9.671312,-8.705201,-7.629175],[9.007571,-2.243373,-7.133357,-4.393501,-6.393252,-2.547850,3.248121,6.057067,1.209779]],[[4.645907,-1.824663,-4.922075,7.176097,7.976870,-1.688051,6.777842,1.639985,9.299712],[3.775767,5.380862,-9.288528,-1.327407,-0.545721,-9.685433,8.881484,-6.990371,2.993300],[9.356082,-3.736053,4.765844,-4.916156,-2.809880,-5.170524,-6.633455,8.553434,-2.046366],[7.246815,6.163809,-1.591756,0.406460,4.373513,8.111938,8.441851,-7.004889,2.757088],[-5.802511,-0.908470,2.388135,-3.242875,-5.331733,0.865086,9.427993,8.484289,7.684366],[2.125031,9.299817,-8.505415,9.771974,-0.942383,3.996163,1.280703,0.978199,-2.855895],[2.537221,-2.343170,-9.405885,-4.317838,-6.448405,8.266907,1.005785,3.658443,3.342167],[9.835504,6.157947,-2.646984,9.395998,-6.647106,-3.312927,-2.831497,7.096449,2.125210],[-1.257682,-3.628741,-9.091509,-2.358456,-1.965343,-8.326866,-1.803691,-6.269478,1.424472]],[[-7.021703,7.336729,-2.509761,-8.599505,6.359641,1.740974,6.470312,-8.522178,8.206640],[6.935446,-0.194222,0.054339,-9.560548,-7.108317,3.530434,4.737582,-1.705660,-9.740262],[-8.203316,0.794428,-7.826952,7.667254,1.173022,1.594924,-7.699450,-0.450819,-9.955814],[0.446829,6.462686,-1.378339,-0.796400,8.245885,-4.370322,7.815177,-5.365302,-9.818175],[5.437402,-8.662185,2.321348,8.968270,4.525695,-3.207048,8.023464,-3.162040,5.092935],[8.184744,-6.408982,-7.061459,-2.600650,-1.780815,1.915971,-4.128140,-9.107545,6.556292],[-9.681564,7.652793,-7.080264,-0.578617,7.454312,5.669839,0.431737,-1.364746,4.930732],[-2.915856,-4.945436,-1.695543,7.002132,7.775758,5.877430,6.996999,6.434092,3.754210],[-2.323672,-5.455285,-5.543055,-2.764808,-5.847569,-5.721181,3.204102,-6.980697,2.920167]],[[2.719186,4.514738,-6.417385,1.245738,-3.698828,-2.226140,0.073355,0.533323,-8.557470],[9.168224,5.792562,-9.539416,8.461015,-0.757638,5.395260,-8.762481,-0.284979,5.010799],[-5.485971,-4.601313,-8.370224,6.919304,6.956939,2.057587,-2.300392,-0.191408,-9.702375],[4.883256,4.665727,9.570404,1.534379,3.227020,1.199566,-8.789583,-8.543252,0.741590],[8.700062,-7.792221,1.388822,1.215692,-0.424102,-1.695356,-6.456866,-4.256868,1.757857],[-2.662424,7.818991,1.044081,1.485911,-8.536366,-3.410531,-6.918140,-8.742888,3.917520],[-3.699759,-1.545119,-7.308356,3.188618,-0.107148,-0.336672,-7.331171,9.516534,5.202515],[-4.489715,-3.596193,-8.737658,-7.487743,1.024009,2.707469,7.290708,8.510131,-9.914913],[-5.794047,-3.316794,3.786703,-5.956926,0.154479,5.622668,-6.434187,4.429390,-7.934454]],[[-2.868768,-1.342821,-5.844189,-4.019300,3.288791,0.899740,4.660964,-9.099996,-3.393752],[0.657326,2.946637,-5.318876,6.802313,-2.118753,-3.142759,-7.660124,-8.489783,-2.268013],[-4.072694,-8.975543,-6.684387,4.095992,2.285289,9.978446,6.558586,-8.269420,9.861585],[8.496085,-4.313682,-8.299781,-5.174776,9.447408,5.058009,4.606688,-3.544691,-2.214233],[4.136592,-6.175029,2.716552,4.917559,-4.881777,7.308731,-5.442607,-4.897623,-2.473182],[7.564633,2.621829,8.066312,-9.331026,-4.613960,-7.631008,4.699217,-3.172925,-7.059228],[5.224256,-4.176813,-5.256403,-0.668125,-3.776098,1.150377,9.375113,-2.529625,6.372512],[6.324222,-1.496609,-9.101915,-8.877380,3.612826,1.978097,-7.968204,7.506103,8.630820],[-2.470183,-1.244426,-8.447227,-1.969527,4.465145,4.098517,-6.696407,-8.443953,-2.008901]],[[-6.774547,7.856428,-4.210864,3.369016,6.175243,7.961944,-8.508343,-7.356365,6.655923],[-8.193022,-6.722625,-4.449865,-4.764251,9.638049,7.135232,5.566513,-6.495862,4.199228],[-0.577290,-9.695716,0.409464,-4.551036,8.230627,7.234011,0.093065,-4.713934,1.348028],[8.844140,-5.503521,-4.482345,9.103878,6.464691,-1.630233,-7.782625,4.133765,4.710821],[-2.009648,9.909033,-7.186137,-8.393286,-6.717090,-6.720769,7.455817,-2.791994,-8.128914],[-3.027693,-0.148261,3.744117,-7.776967,2.857067,-9.409943,7.645742,-1.523310,2.289373],[2.418458,8.142523,-2.364313,7.004560,7.861480,0.393421,-8.454122,6.969296,3.337449],[-9.808564,-3.828755,-9.112108,-7.998147,-3.457499,-5.393605,4.014477,8.511384,7.348115],[-4.692981,-3.479499,-3.843785,0.074309,1.331093,-1.451905,-2.954927,-4.935826,-5.865891]],[[8.426400,-7.576338,-6.653339,7.764578,-9.632189,-5.569208,0.784543,-0.225294,-6.984062],[2.080066,-5.653198,8.781630,-3.589624,5.836597,-4.289455,7.009625,-2.772105,5.764744],[-9.376961,-8.494252,-6.486031,-9.769823,-3.329150,4.316264,-7.834098,-3.419779,0.654354],[0.972996,7.840602,-1.389014,-1.422792,-1.461671,-2.009286,9.897957,-2.334824,9.767472],[-8.313082,-5.961486,5.934069,-5.362544,9.918835,-9.084021,-6.721488,-5.425426,-5.770084],[4.042233,-8.280508,5.182875,-3.732168,5.156134,-6.281239,6.693987,-7.056710,4.422960],[4.017866,1.475785,2.335956,6.608478,5.958682,9.756602,-5.757277,7.829847,-0.763503],[1.600103,7.960994,-0.358503,-1.143466,1.221912,2.944774,-1.957148,-6.200361,0.457780],[7.846758,7.375691,-2.665571,-9.966168,4.641308,5.282012,-1.739290,-6.061865,5.519632]]], dtype = "float64")#candidate|1383|(11, 9, 9)|const|float64
bop_1384 = relay.maximum(var_1382.astype('float64'), relay.reshape(const_1383.astype('float64'), relay.shape_of(var_1382))) # shape=(11, 9, 9)
uop_1387 = relay.sinh(var_1382.astype('float64')) # shape=(11, 9, 9)
func_1108_call = mod.get_global_var('func_1108')
func_1111_call = mutated_mod.get_global_var('func_1111')
var_1394 = relay.var("var_1394", dtype = "float64", shape = (400,))#candidate|1394|(400,)|var|float64
call_1393 = func_1108_call(relay.reshape(var_1394.astype('float64'), [10, 8, 5]))
call_1395 = func_1108_call(relay.reshape(var_1394.astype('float64'), [10, 8, 5]))
func_821_call = mod.get_global_var('func_821')
func_824_call = mutated_mod.get_global_var('func_824')
const_1419 = relay.const([4.227051,5.099881,6.785821,-0.052822,-9.002851,-9.295944,8.998897,5.707271,2.780366,5.319569,-9.146842,0.769903,5.986767,8.541082,1.316400,-5.099079,-6.289864,-6.958259,-5.008917,-2.791014,8.161735,7.314959,2.432605,-3.718113,-7.847763,8.173544,-8.383380,-4.481712,1.064002,7.217487,2.448110,5.830804,5.744321,-8.854981,-7.054265,-0.472179,6.225856,-7.181794,9.291271,2.859783,7.915898,-1.949732,-3.465297,8.365497,-0.761974,-9.890970,-7.192147,5.985385,9.286585,2.187900,-9.742632,-1.721688,-1.157975,7.366093,3.277607,8.876018,2.847788,3.842068,7.628932,0.530571,6.045881,3.890535,3.296160,4.995506,-2.937948,-9.952499,-8.493022,6.398550,-4.367973,-7.494953,5.158223,-1.464698,9.139003,-0.768667,-7.377742,-0.329999,-4.956570,-5.260094,-2.189071,-5.506472,-6.643736,-1.306157,5.893823,3.757822,-6.921137,-6.386983,-0.537623,-7.269919,-8.887210,-9.764949,-5.688857,-9.271997,-0.662328,-5.377718,-3.544190,-3.814836,5.751498,7.936944,-9.552404,-4.377265,6.323629,-0.652623,0.987928,2.636217,-9.900635,9.457067,1.886860,0.952536,-1.437760,-8.403924,-1.590240,8.906144,3.312984,1.817647,-9.857222,-4.262945,-3.352088,9.576502,8.934903,1.998922,-3.708658,-3.405831,-6.248635,7.153986,8.917334,5.681467,-8.384181,-5.358879,6.456344,6.593245,5.007904,9.229520,4.360713,-8.662041,-0.472478,-5.342511,-9.173602,-9.305319,-5.892384,2.312378,1.047113,1.800542,0.389614,-0.251130,8.982911,-8.138166,3.161914,-6.184800,-2.273195,-6.190047,-8.631430,1.558079,1.796618,8.773214,-4.365318,-0.648352,3.172622,8.286796,4.921682,-1.731956,-7.713382,6.836312,-5.451685,-1.761771,-0.256501,5.421439,9.782830,1.237558,-9.511980,-1.933805,3.410681,5.345307,-0.208363,-9.635083,-8.166793,6.591838,5.395304,-5.173965,-8.187322,3.752060,5.065762,-8.003550,9.373032,-4.921628,-8.068727,-6.081956,5.661288,3.209802,3.721169,4.840767,-5.756011,-9.467363,5.739885,8.922293,4.537657,1.938806,-2.358958,1.067273,0.795986,8.404650,-9.503439,-1.194435,4.534059,9.604489,3.860635,-8.511696,4.413631,4.534632,-9.339973,4.812654,6.771430,-1.944926,-0.584005,-6.725540,3.429092,8.847945,4.066848,3.241637,7.204817,3.705229,5.165494,-9.275118,-0.343404,-6.986787,3.349053], dtype = "float64")#candidate|1419|(225,)|const|float64
var_1420 = relay.var("var_1420", dtype = "bool", shape = (384,))#candidate|1420|(384,)|var|bool
call_1418 = relay.TupleGetItem(func_821_call(relay.reshape(const_1419.astype('float64'), [15, 3, 5]), relay.reshape(var_1420.astype('bool'), [384,]), ), 3)
call_1421 = relay.TupleGetItem(func_824_call(relay.reshape(const_1419.astype('float64'), [15, 3, 5]), relay.reshape(var_1420.astype('bool'), [384,]), ), 3)
output = relay.Tuple([bop_1384,uop_1387,call_1393,var_1394,call_1418,const_1419,var_1420,])
output2 = relay.Tuple([bop_1384,uop_1387,call_1395,var_1394,call_1421,const_1419,var_1420,])
func_1422 = relay.Function([var_1382,var_1394,var_1420,], output)
mod['func_1422'] = func_1422
mod = relay.transform.InferType()(mod)
var_1423 = relay.var("var_1423", dtype = "float64", shape = (11, 9, 9))#candidate|1423|(11, 9, 9)|var|float64
var_1424 = relay.var("var_1424", dtype = "float64", shape = (400,))#candidate|1424|(400,)|var|float64
var_1425 = relay.var("var_1425", dtype = "bool", shape = (384,))#candidate|1425|(384,)|var|bool
output = func_1422(var_1423,var_1424,var_1425,)
func_1426 = relay.Function([var_1423,var_1424,var_1425,], output)
mutated_mod['func_1426'] = func_1426
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1447 = relay.var("var_1447", dtype = "float32", shape = (9, 13, 16))#candidate|1447|(9, 13, 16)|var|float32
uop_1448 = relay.sigmoid(var_1447.astype('float32')) # shape=(9, 13, 16)
uop_1460 = relay.log2(uop_1448.astype('float64')) # shape=(9, 13, 16)
var_1491 = relay.var("var_1491", dtype = "float32", shape = (9, 13, 16))#candidate|1491|(9, 13, 16)|var|float32
bop_1492 = relay.floor_mod(uop_1448.astype('float64'), relay.reshape(var_1491.astype('float64'), relay.shape_of(uop_1448))) # shape=(9, 13, 16)
func_1351_call = mod.get_global_var('func_1351')
func_1359_call = mutated_mod.get_global_var('func_1359')
var_1516 = relay.var("var_1516", dtype = "int32", shape = (288,))#candidate|1516|(288,)|var|int32
const_1517 = relay.const([[0.214115,1.581234,-9.331800,-4.626649,-6.638549,-3.712142,8.426702,0.900343,-4.207814,-8.725048,6.979817,-0.260163,-3.876646,9.789952,-7.972713,-1.257786,-3.760884,9.797144,6.336999,-4.019033,6.121673,4.656208,-2.936169,3.257775,-1.523708,6.834740,-5.263033,-8.071353,8.932563,8.342158,-2.212757,3.516654,7.790361,-4.464750,-5.487317,-7.561702,7.048051,2.151955,3.106416,6.106029,-8.601270,4.983619,-8.140062,4.310630,9.482003,2.205923,-2.967331,-2.692314,-8.003632,-1.766114,9.090893,-6.505659,-7.922158,-2.905456,-5.323565,7.313064,-4.135329,3.885599,-2.565613,-0.483246,6.855773,-2.675922,2.247788,0.064000,7.130267,-1.161387,-5.092572,0.881722,-0.057654,-2.410767,2.040842,-2.031663,-4.893096,-7.280991,-5.811571,-5.961661,9.152247,-6.927958,8.716329,-6.573691,2.880866,4.936124,2.285499,8.365043,-4.583924,-3.826909,5.388504,8.841848,-5.137975,4.724960,0.829973,-9.036172,-7.164747,3.762286,-4.979779,-1.545016,-9.476786,0.843637,-9.309375,-9.433331,9.684856,9.027438,7.655724,-7.350048,-2.227944,-7.418713,-7.464049,-5.812635,7.859172,-0.539113,8.576995,-8.705702,3.217794,9.733668,-0.620132,-0.226497,-2.616261,-1.363986,1.050062,7.024491,-0.425843,9.564608,-1.422675,8.108871,7.891683,3.972649,-7.064395,-7.765088,-5.107305,-9.239968,8.209174,-4.575007,-4.009541,1.379192,4.061154,2.766650,0.773463,-1.611602,0.043770,4.851931,-5.655764,1.684673,-5.720100,-7.419761,-5.793284,7.781524,4.740400,9.181812,4.492550,6.852035,-6.001847,-4.667219,5.508558,5.143630,3.908622,8.193295,-3.067376,-1.027726,5.534735,3.671869,3.910580,2.664680,-3.932971,-9.631609,-1.889677,-1.243402,0.759109,-1.389562,-1.982918,2.758934,-7.222649,4.552815,7.371423,-4.105544,-4.093981,-6.594581,-6.209212,-0.986212,0.386163,-1.156212,9.504689,-2.862845,-9.948567,3.980896,-9.305872,-2.660160,-0.216188,1.865184,5.363799,-7.953053,5.219184,-3.649499,-3.869999,-4.763111,4.770453,2.152467,-4.868044,3.588625,-2.608166,7.916047,0.296026,-0.024854,3.817388,-1.113026,1.425660,-9.296129,7.622579,-0.751386]], dtype = "float64")#candidate|1517|(1, 208)|const|float64
const_1518 = relay.const([-5.916835,1.770957,-3.546404,3.754946,-1.871330,-6.873760,-8.334709,8.862770,-1.217274,-3.211246,-1.155021,8.608207,1.637842,0.321864,-0.916194,-4.435630,-0.988391,4.288124,-7.677213,7.819902,5.206636,7.995419,-9.691275,6.778925,-1.104780,-1.786887,-3.787639,-7.492694,-6.632609,0.833201,2.209795,4.612737,3.503340,-3.209617,9.559954,-8.298984,8.542994,-5.994561,-7.424330,1.369093,6.283938,8.187172,5.731420,-9.039809,-0.540821,-2.875706,9.326688,9.987645,4.920988,-0.591853,4.558873,4.193256,-1.673048,7.740712,-5.663927,7.105113,-3.810153,1.470669,3.101802,8.126760,5.299905,8.491583,6.347602,-5.610375,-5.151753,1.795871,3.445774,9.286821,-1.201160,7.654432,8.648511,2.595155,3.418004,9.308076,-8.008146,-0.480857,-1.161182,-5.713205,-9.158761,-7.474965,4.671433,9.926220,7.049103,3.546892,5.624594,-8.003419,1.915562,-7.272633,-6.848174,6.305844,0.828352,2.609875,7.076028,0.905665,-8.723418,2.351105,-3.913764,-7.854697,3.421039,0.733181,-2.338693,5.827248,6.209607,9.332680,8.683235,-8.715414,-0.264480,-9.042175,1.097721,-3.524002,-5.339984,-5.827087,-2.355551,-0.329785,-5.571637,-3.462031,9.104547,-7.140737,9.512796,-1.314070,5.927883,5.374519,-6.316597,8.680424,-1.130821,1.839378,6.297900,7.539822,4.048185,3.506482,9.206824,-7.074451,2.185039,-6.005306,-4.859848,9.948874,8.676728,-6.173402,1.569622,-5.564130,5.883060,-6.536058,8.452263,-8.039744,8.967774,-2.982837,6.189112,7.787015,1.557519,2.435495,-5.925312,7.747767,-8.047083,-1.815644,-0.018011,4.316131,-4.079256,-5.186795,1.350465,-9.320761,9.935776,7.323396,-3.165667,6.805612,-2.221968,7.024197,-8.190498,7.474205,-0.215647,-8.038215,-2.868594,-7.192554,8.703335,-9.523812,9.789276,8.774731,5.236092,4.043737,8.572765,6.524607,-0.516527,-5.082931,-8.438110,7.407577,8.324750,1.110133,3.546554,7.007776,-9.072823,5.155100,-3.013544,-7.182393,1.605456,4.978161,1.342098,0.667062,-1.059552,-3.720093,6.951152,1.437716,2.209765,-3.895463,8.512284,8.754472,4.511361,7.650499,6.981879,5.784629,-6.462085,9.900537,0.354087,5.286081,-3.982903,-0.850460,5.349667,7.911569,-3.739337,2.348237,3.229317,-2.900718,7.681803,-1.826407,3.966207,7.008290,5.697533], dtype = "float64")#candidate|1518|(225,)|const|float64
const_1519 = relay.const([True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,False,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,False,False,True,False,False,True,True,False,True,True], dtype = "bool")#candidate|1519|(384,)|const|bool
const_1520 = relay.const([[-8.521101],[0.650908],[-4.925520],[-2.830135],[-5.382735],[-6.005660],[6.229515],[-3.127641],[-2.507276],[-8.699216],[0.248739],[2.896029],[4.501686],[-8.600435],[5.932988],[-7.182317],[3.352469],[6.010834],[-4.340742],[1.792100],[-1.165213],[-8.810328],[8.987441],[-7.781325],[1.329195],[-6.775645],[8.907104],[5.833350],[-5.890841],[0.566414],[-2.469480],[-3.214208],[4.228972],[8.967680],[5.654399],[-1.611508],[5.072101],[9.164120],[5.892894],[-5.582820],[-2.866575],[-0.779709],[-1.870539],[8.917115],[6.369322],[7.309931],[-2.778667],[-1.665157],[9.852807],[5.654937],[-9.785616],[9.320726],[-8.808451],[9.858307],[-7.060984],[-2.957763],[-4.735522],[-4.660846],[-9.676487],[3.777234],[-9.557057],[-0.237485],[-8.125258],[-0.910313],[-1.394400],[-2.231221],[5.629743],[-3.955425],[-7.974374],[-0.509970],[-3.848718],[-4.140481],[8.361223],[5.406088],[-7.091141],[1.035397],[9.257230],[2.898568],[-7.247948],[-4.303605],[3.583724],[-9.449636],[-5.663798],[-8.834918],[-1.735078],[8.570169],[3.623817],[3.798923],[-7.699930],[6.079329],[6.412725],[-6.094626],[-3.123499],[5.245860],[7.381226],[7.139146],[-4.256733],[-6.237720],[8.156610],[-2.513441],[6.133354],[-6.059029],[9.775628],[8.711693],[-2.736700],[-5.403044],[6.180220],[6.803442],[-8.012978],[8.414198],[-6.126525],[-1.376472],[-7.814480],[1.758010],[2.071534],[0.503879],[6.698213],[8.111531],[1.409539],[-5.169506],[9.692425],[5.608577],[7.261810],[-4.097861],[6.543647],[-7.803248],[7.722301],[9.854064],[5.723749],[2.294699],[-6.823525],[0.169844],[-9.574546],[-5.489330],[6.576374],[0.231986],[2.589174],[3.392405],[7.065984],[-2.114929],[4.304395],[-0.536529],[4.457986],[-0.449759],[-7.055051],[9.446999],[-6.332735],[-9.380245],[6.254850],[-5.991508],[-3.312620],[-3.773623],[2.705799],[-4.949862],[1.890125],[2.378263],[0.921488],[9.696998],[6.094534],[7.637257],[7.631510],[-4.197243],[4.633062],[-9.492571],[1.178281],[5.634448],[9.778831],[6.345729],[-3.445716],[5.253360],[-0.185258],[-1.252561],[1.496398],[-4.437053],[-2.271468],[-3.751556],[-4.156299],[3.606067],[-7.087436],[9.396008],[6.652362],[0.546627],[-2.425020],[3.220257],[-2.570968],[-6.505796],[0.911922],[0.725904],[3.776880],[-5.574856],[0.077390],[1.408123],[5.559420],[-8.811984],[3.169525],[-4.992274],[-9.040458],[8.490003],[-1.133622],[5.416148],[4.708499],[-6.998498],[9.524493],[6.495381],[4.852283],[-4.037072],[2.799745],[8.727983],[-0.584447],[-2.989996],[3.538654],[-8.226389],[-9.084687],[-2.745533],[-6.771937],[2.345975],[0.838374],[0.747033],[7.274467],[8.750038],[-0.900143],[-2.082939],[-4.347366],[-6.985433],[4.286244],[-7.479034],[9.054486],[-6.018830],[-6.704771],[5.397831],[0.859846],[-9.420149],[-0.161768],[6.392404],[4.967940],[-3.816819],[-7.086783],[6.963735],[-5.742170],[1.596804],[-8.789928],[-3.032708],[0.602030],[3.481678],[0.437151],[-3.914124],[6.683010],[-4.510048],[-0.388736],[-5.254040],[-6.995817],[0.931623],[7.863538],[4.770821],[9.248677],[1.425166],[-0.043306],[2.313054],[-3.323962],[6.227405],[6.748605],[-4.744593],[8.698697],[-3.795664],[-9.769940],[1.444721],[-0.810126],[2.573739],[0.631238],[8.334913],[-2.052554],[-7.731341],[2.584540],[-8.438531],[-9.793194],[4.180816],[0.230251],[-4.637471],[-7.950917],[5.109725],[7.789405],[-9.640011],[4.623344],[9.656068],[-2.951237],[2.680708],[5.946356],[-7.675039],[-9.027077],[0.829947],[-2.592895],[-9.959917],[-7.001956],[-4.190131],[-9.894391],[-1.308195],[-7.687108],[6.174953],[-7.632161],[-7.122343],[4.357946],[5.368516],[1.408257],[3.405589],[-2.226994],[-1.645871],[-7.357940],[2.773755],[-5.100475],[4.081674],[3.491287],[-6.016428],[-9.711151],[8.658090],[7.738758],[-3.123559],[-1.140740],[2.763315],[0.518967],[4.522795],[0.210274],[-0.315645],[-0.326695],[1.905250],[-5.859130],[1.484676],[-2.005423],[0.308637],[4.788848],[6.152489],[1.515289],[-1.831967],[-6.109347],[0.201107],[-4.018075],[3.151436],[4.510898],[1.229643],[6.602202],[-0.580784],[-0.384741],[3.320793],[0.267020],[3.599328],[-6.462979],[0.642688],[-2.563841],[0.247581],[-2.517463],[-9.102847],[1.233563],[-9.317868],[-5.836004],[-9.812821],[-9.743128],[7.514731],[7.479048],[0.942737],[0.017691],[1.487305],[-9.570934],[5.461730],[-6.416415],[5.429556],[-5.982313],[-4.012912],[8.772995],[-2.602439],[-8.239674],[-2.993949],[3.809035],[3.451014],[-1.416105],[8.969343],[-9.551572],[0.316787],[-2.971940],[3.694539],[0.311411],[7.524034],[6.021582],[7.129382],[-9.766175],[-6.338289],[1.046408],[-1.102704],[-7.858732],[4.857913],[-2.213723],[-7.741120],[7.824658],[1.252788],[4.627184],[7.658828],[3.055676],[-0.182758],[-9.188446],[-7.768181],[2.623789],[5.778160],[7.109338],[1.143397],[-6.690293],[-6.260661],[3.166456],[5.003709],[9.621720],[-3.378154],[7.719481],[7.456465],[-7.617087],[9.252242],[-1.064073],[-0.442600],[-0.224910],[-9.653518],[5.492534],[2.830421],[-8.613686],[-2.926579],[0.596859],[-1.349938],[4.210745],[7.878078],[-9.084771],[9.741125],[-5.390658],[6.399262],[-2.910564],[-2.071288],[-2.242431],[-3.671958],[-3.550345],[3.174192],[-9.704446],[-8.187394],[5.941473],[-5.907109],[-6.598584],[7.852981],[-5.952317],[5.861166],[-3.998663],[4.116740],[-2.916535],[7.287846],[-9.582253],[-1.246191],[-4.159425],[1.113602],[-5.679571],[-3.833248],[2.559418],[-4.779366],[-7.885984],[-4.361468],[-5.182640],[9.327400],[3.823702],[-8.473444],[-7.506658],[-8.719474],[9.959416],[6.026454],[-5.119416],[-1.911742],[-4.358930],[-5.745109],[8.036433],[8.484404],[-7.531235],[0.152397],[-6.999460],[9.107912],[9.545808],[5.589819],[-5.356242],[9.988064],[5.925967],[6.176813],[8.160382],[-8.700082],[-6.803388],[9.182961],[6.787146],[4.165126],[7.788598],[-7.283947],[5.858490],[4.731518],[0.288493],[-3.847772],[-3.212749],[-4.199205],[-7.232205],[0.582624],[6.768244],[8.188817],[-5.415441],[-6.034754],[-5.904676],[0.322763],[-4.269011],[5.463678],[-2.682164],[-1.263759],[5.029247],[6.704090],[-4.099064],[4.195231],[0.226311],[1.229539],[-0.303743],[-6.898266],[3.616650],[-8.810268],[-4.537404],[5.486771],[-5.564511],[-7.187389],[4.820401],[-7.632212],[2.395716],[-2.752377],[8.035937],[-1.549142],[-2.110778],[-7.116140],[-7.094707],[5.399957],[6.817362],[3.581507],[-0.364244],[-7.111373],[4.911992],[2.621727],[4.060213],[-6.322129],[1.074865],[5.704382],[-1.834151],[7.979502],[8.131529],[-4.194165],[-2.122470],[2.678010],[2.276205],[2.316959],[-7.646586],[-3.058934],[-2.810183],[-8.123131],[-1.018674],[-7.060519],[-7.793263],[-6.227015],[5.967773],[4.428531],[2.692703],[-6.781452],[-9.307330],[6.112650],[5.521474],[2.315063],[-8.692085],[1.441026],[0.004633],[3.724228],[-7.870184],[3.187459],[3.427183],[-2.371149],[0.142387],[7.509528],[6.981549],[-2.061944],[2.831509],[4.042158],[-0.686837],[-5.050790],[2.050426],[0.237461],[-8.243110],[-4.136349],[-8.720103],[8.704649],[6.668627],[-7.196450],[2.914131],[-8.126485],[4.795617],[-5.900506],[-7.144736],[5.601272],[-1.771625],[-6.493357],[-3.585367],[-5.188938],[-3.162163],[3.713860],[-2.200794],[-3.256788],[-5.765920],[-2.831809],[-0.457284],[-2.609331],[4.680841],[-0.767124],[4.602208],[-3.015704],[-3.133996],[7.497040],[-2.729138],[9.577484],[-4.584672],[6.209666],[2.238806],[-7.688751],[-5.704166],[4.675045],[0.577634],[9.280809],[8.401646],[7.147342],[4.917327],[-8.212948],[-8.107125],[-4.033813],[-2.662041],[3.637417]], dtype = "float64")#candidate|1520|(630, 1)|const|float64
call_1515 = relay.TupleGetItem(func_1351_call(relay.reshape(var_1516.astype('int32'), [9, 8, 4]), relay.reshape(var_1516.astype('int32'), [9, 8, 4]), relay.reshape(const_1517.astype('float64'), [208,]), relay.reshape(const_1518.astype('float64'), [225, 1]), relay.reshape(const_1519.astype('bool'), [384,]), relay.reshape(const_1520.astype('float64'), [630,]), ), 5)
call_1521 = relay.TupleGetItem(func_1359_call(relay.reshape(var_1516.astype('int32'), [9, 8, 4]), relay.reshape(var_1516.astype('int32'), [9, 8, 4]), relay.reshape(const_1517.astype('float64'), [208,]), relay.reshape(const_1518.astype('float64'), [225, 1]), relay.reshape(const_1519.astype('bool'), [384,]), relay.reshape(const_1520.astype('float64'), [630,]), ), 5)
bop_1525 = relay.greater_equal(bop_1492.astype('bool'), relay.reshape(uop_1460.astype('bool'), relay.shape_of(bop_1492))) # shape=(9, 13, 16)
func_1315_call = mod.get_global_var('func_1315')
func_1321_call = mutated_mod.get_global_var('func_1321')
call_1530 = relay.TupleGetItem(func_1315_call(relay.reshape(const_1517.astype('float64'), [208, 1]), relay.reshape(const_1518.astype('float64'), [225,]), relay.reshape(const_1519.astype('bool'), [24, 16]), relay.reshape(const_1520.astype('float64'), [3, 14, 15]), ), 1)
call_1531 = relay.TupleGetItem(func_1321_call(relay.reshape(const_1517.astype('float64'), [208, 1]), relay.reshape(const_1518.astype('float64'), [225,]), relay.reshape(const_1519.astype('bool'), [24, 16]), relay.reshape(const_1520.astype('float64'), [3, 14, 15]), ), 1)
output = relay.Tuple([call_1515,var_1516,const_1517,const_1518,const_1519,const_1520,bop_1525,call_1530,])
output2 = relay.Tuple([call_1521,var_1516,const_1517,const_1518,const_1519,const_1520,bop_1525,call_1531,])
func_1533 = relay.Function([var_1447,var_1491,var_1516,], output)
mod['func_1533'] = func_1533
mod = relay.transform.InferType()(mod)
var_1534 = relay.var("var_1534", dtype = "float32", shape = (9, 13, 16))#candidate|1534|(9, 13, 16)|var|float32
var_1535 = relay.var("var_1535", dtype = "float32", shape = (9, 13, 16))#candidate|1535|(9, 13, 16)|var|float32
var_1536 = relay.var("var_1536", dtype = "int32", shape = (288,))#candidate|1536|(288,)|var|int32
output = func_1533(var_1534,var_1535,var_1536,)
func_1537 = relay.Function([var_1534,var_1535,var_1536,], output)
mutated_mod['func_1537'] = func_1537
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1591 = relay.var("var_1591", dtype = "uint64", shape = ())#candidate|1591|()|var|uint64
const_1592 = relay.const([[[-3,-2,-8,-6,-1,1,1,-10,1,-6],[-3,-2,-10,10,2,-5,-6,10,8,-4],[-10,-2,10,2,6,-8,6,-6,2,-8],[-9,-9,-2,1,-3,-8,-2,4,4,1],[3,1,-9,6,4,-8,-8,9,8,-9],[5,-5,-10,10,6,6,-3,9,-5,-5],[-8,5,10,8,-6,-8,-4,9,-2,10]],[[2,-7,4,-9,10,1,7,-6,1,-6],[10,-9,6,10,9,-8,-7,-8,-3,-1],[10,-3,-7,-5,-4,5,-6,-2,-2,-2],[4,4,7,2,8,4,-5,-7,9,-3],[7,-9,-2,-5,5,9,-9,3,-4,7],[8,2,-10,8,-4,-2,-8,-4,-6,-9],[6,2,-3,-3,-10,1,-4,3,-5,-5]],[[3,2,10,6,-4,-7,-4,-6,-4,4],[-1,-3,-7,1,9,-2,5,4,7,1],[4,2,7,-3,-8,6,-1,4,-7,-1],[-3,9,-5,3,-2,5,-2,-3,6,-1],[-4,-4,10,-4,-5,5,8,-7,-6,8],[5,-7,-2,-8,-8,-3,-10,9,4,-6],[10,10,5,2,-8,-3,-4,9,-1,-4]],[[-6,3,-1,5,-8,8,-2,6,6,1],[8,4,-2,-8,2,4,-9,5,1,-9],[10,-9,-6,2,-4,-3,-6,-6,1,-3],[-6,-10,-6,-6,4,-8,-3,-1,-3,-8],[-5,-9,7,1,-9,-3,-3,-1,10,6],[5,10,-10,-6,3,9,-4,-9,4,-10],[-6,10,-6,8,10,-9,9,-2,10,1]],[[-1,-1,1,-5,2,9,-10,1,2,3],[-5,-7,-6,3,-5,1,-9,1,4,6],[-5,6,-6,3,-6,7,3,-6,-3,4],[7,3,6,5,-2,-6,6,4,10,-7],[4,-10,10,-5,-6,10,-2,9,-9,-10],[5,-9,9,-2,-1,-7,-3,-3,2,-3],[-4,-6,-7,4,1,-8,1,7,3,1]],[[8,-8,-5,-3,6,7,-10,6,-10,-5],[6,7,-3,7,4,7,-6,-3,5,-7],[-2,2,-9,-1,-1,-8,-8,-6,9,-6],[-1,-5,9,7,-1,-6,1,7,8,-9],[-4,8,3,-4,9,-7,2,-9,-9,-6],[3,5,2,3,2,1,-10,10,2,6],[-4,2,-5,9,-9,4,7,-5,-5,-8]],[[-10,-3,-7,4,8,3,-4,-10,-7,-3],[-3,8,10,10,-2,2,-9,-2,9,10],[-5,7,-9,8,-5,-4,-2,10,-6,7],[1,1,4,8,1,-9,10,-8,5,7],[-9,-10,-5,-2,3,10,9,-3,7,6],[-7,4,5,6,-8,-9,6,-9,-2,-4],[2,-8,-7,6,10,4,9,5,-2,1]],[[8,8,-3,-6,7,9,-6,-10,6,9],[-10,-5,10,2,-3,-1,-4,4,5,-2],[10,4,10,8,-2,4,-7,10,9,9],[-4,2,1,-7,5,-1,-3,-10,-10,9],[-3,-5,-1,10,-4,1,-1,-8,-10,1],[6,-10,-8,4,-7,2,-5,2,2,8],[-1,6,4,6,-10,-9,10,7,-8,-8]],[[3,4,-6,6,8,-4,4,1,-5,-2],[-4,1,-10,2,9,-2,-7,-10,5,-3],[-9,2,-8,-1,-9,-9,-6,7,-9,6],[6,-10,-6,-7,6,6,8,9,10,-10],[7,-2,-8,-10,5,-8,-6,3,9,-5],[-2,2,-8,6,5,6,3,-6,4,-1],[4,9,8,-1,4,3,8,7,-6,-3]]], dtype = "uint64")#candidate|1592|(9, 7, 10)|const|uint64
bop_1593 = relay.multiply(var_1591.astype('uint64'), const_1592.astype('uint64')) # shape=(9, 7, 10)
func_821_call = mod.get_global_var('func_821')
func_824_call = mutated_mod.get_global_var('func_824')
const_1601 = relay.const([8.024094,-6.976234,6.489332,-2.210874,-5.377056,7.888614,-8.720548,-4.471005,-8.948178,7.893391,4.091782,6.316667,2.612746,9.205047,-4.729086,0.911398,-9.033329,-0.664618,-4.356755,-9.920565,-2.407191,1.957753,5.714211,-7.937727,-9.899564,-9.840970,7.925654,5.412888,-0.289371,-7.716094,-8.929632,-3.528978,7.569363,-9.668200,3.368373,-9.803756,-1.113104,0.266758,-1.286341,-8.190100,8.414204,-6.300000,-2.325967,1.048591,-7.339324,1.975293,8.245446,9.434736,-5.270840,-4.720598,7.475300,4.204618,5.594324,8.493044,-4.607877,-9.938043,-9.421857,5.912014,-4.122574,2.729200,-5.359020,3.649634,-7.498518,-1.883550,-9.297143,9.413471,6.233560,-7.460630,6.239327,-3.118632,2.632658,3.278314,6.493757,-9.346418,5.481561,-6.294866,-5.168417,9.351078,0.615364,2.094228,0.614170,4.252291,2.703514,0.526295,8.809089,-0.234363,-9.472736,-2.228538,-2.655991,3.800761,8.817235,0.552421,4.386763,-5.329261,-5.648720,-5.917090,-2.324909,5.788018,0.895811,-2.033686,-7.633728,8.779135,-0.229706,0.649219,-9.738699,-0.609778,-6.564506,0.393214,6.566184,-9.797635,1.121121,0.601270,-4.233349,8.700761,2.674598,-4.818425,6.651305,-4.729442,-5.925212,-9.443599,-7.205335,-8.356448,7.880254,-1.836216,3.497482,-6.886982,5.775891,4.388300,-9.236897,-7.121417,-2.335528,-2.520753,-6.011529,-5.737563,-3.685637,-7.122540,4.922833,7.744135,-2.817270,0.203892,6.803134,9.738591,3.298162,-6.874633,1.968261,0.850537,-5.421628,4.552849,-8.338493,5.700829,8.974374,0.860725,-5.323537,8.689675,-3.381805,-1.388506,-4.552749,4.092220,-5.969085,-1.911059,-7.383277,-8.032756,3.430046,4.379666,1.653266,-6.742111,-2.153904,6.175035,-2.489319,-7.543871,-4.015307,-8.512678,-6.983001,-5.956712,-2.137682,-7.595473,6.261377,1.102341,4.828683,-2.558280,5.947495,6.463031,0.417812,-6.578805,5.805962,-5.872462,9.573617,-8.621688,-5.339215,1.183892,6.882733,9.440144,-6.847741,4.216945,-9.631012,-3.172310,-3.123516,0.345170,-2.830607,-6.426451,-3.197732,4.900724,2.317951,5.475180,1.059168,-5.319604,2.506076,5.678069,-9.757970,8.758055,-8.556411,-4.817125,1.485115,-8.204756,3.777878,3.292663,-7.709383,-7.783813,-9.940517,7.259904,-8.871029,6.104591,-0.092300,5.912444,3.600066], dtype = "float64")#candidate|1601|(225,)|const|float64
const_1602 = relay.const([False,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,False,False,True,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,True,False,False,False,False], dtype = "bool")#candidate|1602|(384,)|const|bool
call_1600 = relay.TupleGetItem(func_821_call(relay.reshape(const_1601.astype('float64'), [15, 3, 5]), relay.reshape(const_1602.astype('bool'), [384,]), ), 0)
call_1603 = relay.TupleGetItem(func_824_call(relay.reshape(const_1601.astype('float64'), [15, 3, 5]), relay.reshape(const_1602.astype('bool'), [384,]), ), 0)
output = relay.Tuple([bop_1593,call_1600,const_1601,const_1602,])
output2 = relay.Tuple([bop_1593,call_1603,const_1601,const_1602,])
func_1604 = relay.Function([var_1591,], output)
mod['func_1604'] = func_1604
mod = relay.transform.InferType()(mod)
mutated_mod['func_1604'] = func_1604
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1605 = relay.var("var_1605", dtype = "uint64", shape = ())#candidate|1605|()|var|uint64
func_1604_call = mutated_mod.get_global_var('func_1604')
call_1606 = func_1604_call(var_1605)
output = call_1606
func_1607 = relay.Function([var_1605], output)
mutated_mod['func_1607'] = func_1607
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1715 = relay.const([[[-0.726241],[5.356847],[-6.799746]],[[-2.733462],[-7.144704],[0.127127]],[[-4.075153],[1.830342],[-3.709315]],[[-4.336674],[-7.517920],[-6.018945]],[[4.908700],[4.432133],[2.715474]],[[6.485942],[4.558940],[2.622894]],[[4.783429],[8.150445],[-3.260429]],[[-0.579350],[-0.249006],[3.226724]],[[-0.429813],[-9.475589],[-9.557454]],[[3.850704],[-0.408031],[-6.562054]],[[6.631895],[-4.322950],[7.915273]]], dtype = "float64")#candidate|1715|(11, 3, 1)|const|float64
uop_1716 = relay.sin(const_1715.astype('float64')) # shape=(11, 3, 1)
func_1422_call = mod.get_global_var('func_1422')
func_1426_call = mutated_mod.get_global_var('func_1426')
const_1735 = relay.const([0.577002,-2.052108,2.711976,-0.736103,-5.334665,9.141207,4.284010,6.385856,6.823331,-5.340444,9.491268,9.853839,-2.090990,6.026621,0.034696,5.154424,-8.615301,1.973496,6.537208,-0.932817,-2.767985,-1.410339,6.129140,7.649787,3.363151,1.617146,1.925226,7.049210,-0.220942,6.440492,0.626239,4.847285,-1.310184,5.369044,-0.753694,2.159431,2.379964,-4.356643,1.722399,-4.882591,1.602696,-2.865678,-8.579593,2.522666,-8.029436,-2.619007,9.923156,-1.178971,-7.840065,8.154478,3.764571,-5.782884,-2.532134,3.207591,-0.331028,8.125202,7.601125,-1.932949,1.813886,2.458425,-2.158414,4.777694,6.775663,7.230192,7.060883,-2.046059,9.975917,-4.033648,6.339503,-0.014037,3.484975,-4.288599,5.881562,-6.857622,-4.286150,-4.136997,7.482281,-4.583232,0.406476,-9.104745,2.151750,5.632348,5.382350,-7.759203,-5.914512,-4.469491,-6.375291,-9.199040,4.009794,-3.301396,-6.468980,-8.132526,-3.002892,-6.020723,-1.582199,1.931790,8.992380,5.682713,-2.281724,-8.832325,-9.894611,-5.735223,0.685031,-5.540418,6.383891,-5.932124,0.230866,9.906611,7.695226,-2.392794,-0.379184,8.918690,-2.540296,5.784491,8.568093,5.308763,-4.257936,-5.771081,0.396641,8.877434,-7.979782,-6.039060,-3.985998,8.240872,-6.583350,-2.057962,0.342057,-7.805906,-6.630679,-7.708568,9.229560,6.754769,6.311672,7.421052,-7.697635,4.949718,-8.138606,-8.584212,9.066224,2.443526,2.103273,9.873505,4.216764,0.600796,1.414846,3.252975,5.759322,-8.258462,4.000352,6.832709,-4.549538,-6.571925,1.084404,-6.172837,-9.343274,-2.047907,3.683157,5.287452,0.555550,-6.531227,-1.469904,-9.383318,-0.748303,1.765760,-5.497515,5.455036,4.904810,-2.210849,-0.177524,-1.763569,-3.017364,0.619797,-5.426630,-4.030233,3.260509,-0.620191,8.510585,6.261572,5.045140,1.099354,-3.442209,9.113288,-8.010368,-9.225360,-5.929732,6.346046,2.672284,-3.919427,3.663616,0.107570,3.067077,5.737149,-9.620843,-3.200063,5.782846,-6.093992,-7.660878,6.221611,1.642312,0.062687,-8.127554,-2.643387,0.809672,7.918686,9.135214,1.187639,-7.790140,2.392416,-3.064730,1.001863,4.957043,4.613290,0.165810,-6.914833,-6.379718,-0.119523,7.816806,-2.908035,9.926343,8.241406,-1.987104,4.245232,9.353524,-3.747427,-9.001455,0.930475,4.086561,8.459270,-7.016884,8.242252,4.059699,6.758934,-4.463775,-1.048801,-3.736779,-3.795059,-2.604324,1.205777,7.210816,3.696878,3.485761,6.488336,7.612764,2.139921,8.711865,-6.065963,-2.930921,2.881945,3.187242,-5.552885,0.430228,1.353993,-8.397685,-6.591682,-1.082403,7.578936,-0.566390,-8.391868,4.808069,5.339757,-6.746053,-1.864736,-7.992101,9.355028,4.039813,7.069347,-9.325138,-1.780708,8.996264,-5.177227,8.579635,-0.586434,5.460060,5.735961,-7.359890,8.433383,2.272280,-1.814703,8.106867,3.879738,0.406278,0.292128,9.606037,9.636695,-2.293193,-5.315275,6.347530,-4.199052,4.210039,-7.306110,-7.081890,-9.750720,9.581931,6.396418,-2.268739,1.606049,2.737706,-0.307505,-0.232820,-8.317340,2.228598,-0.839043,1.813958,0.875466,5.445394,-3.208223,0.803573,7.461367,6.999107,1.290772,1.132306,-6.072983,-7.780409,-5.305522,-2.848382,9.211039,6.432916,-7.312753,-5.249738,-8.855399,3.168084,-5.841715,2.096614,8.188268,-2.244173,8.506790,4.847393,0.581410,-9.475181,6.336258,-0.884948,-3.257951,-1.211538,-6.669799,1.049913,-0.355764,0.565857,7.756384,-3.133306,-2.474625,-2.288020,6.546628,6.820104,8.664165,-5.253163,-0.162463,7.573296,-0.282272,3.820001,5.646037,7.486802,-2.249813,-4.323681,-4.242153,-2.926915,9.927647,-3.492237,0.427931,1.756496,4.859246,1.635197,-9.108837,-0.664108,-6.966836,8.486236,-2.950151,-2.055944,-9.321405,0.179650,6.315147,5.371406,-7.091384,7.865478,4.315859,-3.399752,-3.113180,-8.056342,-5.768996,-7.450214,-3.187892,-1.306633,-2.090869,7.090620,4.952693,1.660606,5.477042,-5.811277,-2.422724,9.554057,-4.893580,-8.506585,1.475842,-0.521361,-0.450760,-8.225360,-9.796278,7.554961,0.151968,8.998964,7.379767,-0.467051,7.275899,-6.192783,-1.701566,0.049229,4.816951,-3.635965,-3.311007,1.025254,2.847452,-9.428341,-2.886781,-4.864175,-5.929204,0.153961,6.195962,-3.320543,-8.944730,-8.608095,-2.141484,7.518100,-9.657544,-6.337790,-0.801699,4.200101,-0.682183,-0.520704,3.945989,-6.121584,-8.249003,-3.260079,9.413346,5.938287,3.431104,9.230122,3.264943,-9.257914,-9.666166,6.338808,-4.822311,-5.849725,-2.647752,6.411639,2.070960,7.353285,3.130243,2.603754,4.671355,-1.608181,2.291324,-5.669801,7.040134,-9.227754,-3.308352,-8.675702,-1.916820,1.954908,8.106150,-8.184880,-3.046113,7.596550,7.390144,3.366799,0.589004,-5.594685,5.678573,2.316065,3.910597,-7.976508,3.633997,-4.494960,9.899639,-4.818777,-2.395210,2.008119,9.173204,0.786029,-3.210663,2.946234,-3.733204,-0.708185,-6.127411,-3.523626,5.641281,7.064079,-3.744252,-3.684231,8.866642,-5.325109,2.242600,9.623124,-8.846213,-1.493932,8.975257,-5.198848,3.511044,0.909765,8.434506,6.282593,-4.703165,4.702837,-0.523339,-5.780824,3.405293,6.411302,-4.927342,7.721777,5.567888,4.778337,8.234909,0.285848,-8.820978,-4.456446,-0.115961,-2.022817,6.965491,7.348960,8.699319,5.688014,4.244986,-1.805924,3.518603,-2.663030,3.021386,8.302670,-1.204357,6.701397,0.200686,-4.208967,9.423056,-5.610613,-8.911651,-8.365937,6.743569,-3.022789,-8.559456,7.860301,-8.641987,6.685095,6.081944,-8.260562,8.011406,2.658347,-2.785855,-5.281804,-5.873783,-3.341994,3.409763,0.524783,-7.218632,1.052386,-9.823781,7.967113,-9.030556,-2.331803,5.966078,9.817375,-6.312168,-1.560653,-7.402161,-6.435186,6.082565,-9.778998,3.270343,-2.900455,1.526376,-7.709946,-2.313602,9.644147,-0.952429,-6.539264,-2.431854,-2.215769,-7.451254,0.857097,-0.724020,-3.119317,-6.002867,-0.398620,-4.776309,-7.542794,-9.313617,7.861166,-4.169671,4.608019,-5.755793,-7.407787,-8.866766,4.774383,6.910799,2.497662,-6.832727,-5.560595,-1.562043,-7.541613,6.347113,5.733382,2.811415,-3.999868,4.068836,9.689206,7.112363,-2.271320,-1.789265,5.460397,1.626441,9.901061,-0.954952,-6.233427,-8.444586,6.052672,8.315986,3.250079,9.952239,-2.537004,-9.476154,-8.551312,-5.685046,0.948759,-4.995194,-4.859783,6.519082,5.239349,9.608973,9.716756,-0.869937,0.929803,4.556355,-6.551001,-0.544702,2.503836,-2.458554,0.345260,-5.266833,-7.550702,5.955379,-6.999681,-1.766828,-4.569357,-7.682432,-1.282669,-3.578087,-8.599052,-7.456002,-0.804483,-8.119669,0.541249,3.840571,1.028625,3.101441,-8.950688,-9.253522,-0.429134,-1.625923,4.240701,-4.292029,7.237672,7.926723,-8.829291,-3.098749,1.596069,-0.589391,-5.490015,8.383241,7.442597,3.907464,0.220679,5.890268,-7.967190,-9.711120,-7.837184,8.494441,7.980113,0.267053,9.934201,-6.881989,-4.402500,8.365212,-4.685916,-0.221687,-3.243395,2.037284,-7.012949,4.253727,-6.420650,-3.169247,-7.173933,-4.580848,-6.724946,6.210689,5.867791,-3.418984,-6.558712,-5.571546,-0.473421,-5.155516,-0.218477,-8.925038,-2.051873,-6.774006,1.098083,7.035938,-6.099755,6.031682,-3.830187,-1.742580,-3.563794,2.503571,3.111739,7.284788,8.549885,-1.905651,9.288084,-6.326063,-1.589960,-5.959152,0.141685,2.949015,2.070622,-9.679406,9.339281,-0.311625,-4.588190,-7.547954,5.938633,7.777387,6.293873,3.320973,9.754796,2.793311,-9.782063,7.039523,1.289892,6.282755,-8.589107,-7.698838,3.732021,2.004472,4.667909,4.880726,-3.143154,6.930208,-7.883143,-6.709694,-3.200679,9.490636,-6.946894,-4.360164,5.123201,-8.115184,3.412793,0.289726,8.659606,-4.957792,-9.222098,-7.768797,5.085458,-1.606409,-4.883333,6.083403,-1.308347,4.865477,4.714610,7.186765,2.153962,-2.960983,-4.093816,8.543710,8.991159,-4.192598,2.399511,-9.188569,-6.045807,-6.369607,8.484888,7.678956,-9.309673,-3.432014,-1.800091,-5.012526,-3.276311,2.599270,-8.332833,-7.395457,-4.306917,6.176086,8.766465,-3.995268,9.004403,-5.422373,-8.276288,-1.759056,-2.595372,3.719079,-0.268016,8.479802,-1.639755,-2.805913,1.242019,-2.396519,9.543860,-3.765662,5.990109,9.415272,1.120016,-7.240272,4.487703,8.109803,1.995576,9.970324,-5.643211,-7.825448,0.805256,-7.473164,-8.372106,-8.642838,-1.914167,-5.347757,-5.410781,-5.892759,-0.114266,0.794927,-9.551060,5.071395,1.030119,2.524980,5.699495,3.681968,-5.290839,-6.764843,-5.034437,6.624511,5.547182,6.231403,7.669137,4.316028,-2.439094,7.298350,0.314738,-2.063565,8.108568,1.728678,-7.950602,4.476328,-1.283705,5.600735,7.595971,7.203143,-6.137480,-6.309462,2.066983,8.038599,-9.261576,-0.341143,-2.582492,8.870659,-9.958317,-1.897738,0.646727,-2.342243,9.515842,-0.099639,-2.660171,7.833948,-4.023604,-9.553683,-9.593092,9.061634,-1.948563,-6.004382,0.553652,4.931248,-9.275788,-8.636460,7.067171,7.943634,-9.993020,9.249938,-5.587531,8.010259,-4.767729,-3.039942,-4.257731,-4.850031,3.254211,3.142334,-1.531424,-2.972742,-2.813698,-0.256165,9.245495], dtype = "float64")#candidate|1735|(891,)|const|float64
const_1736 = relay.const([-0.777413,7.883020,7.796365,8.521369,-0.787444,4.576701,2.522188,-4.355026,5.180423,5.905146,0.718063,-3.698803,8.217939,-3.207893,1.309445,-2.947830,1.072572,-9.832411,5.063038,-0.362996,5.124849,-6.873580,-6.197303,4.006510,7.631596,6.732842,-6.688487,-5.739372,-2.530676,-9.129169,3.299170,8.346320,9.514940,7.285139,-8.280405,-8.182918,4.677426,-8.927852,7.662584,-5.229682,-9.504511,-6.443038,5.878251,-5.081511,6.123695,-0.521653,9.085777,8.197684,9.228519,-7.359505,-7.434520,5.583416,6.658525,7.050608,7.547296,-4.778535,4.636374,-0.178048,7.496704,-1.743939,-9.674730,9.920915,0.569358,-2.678795,3.770273,-0.398383,7.040674,-3.196061,2.757762,-6.212265,6.947420,-4.511796,7.798488,5.598668,4.922108,5.818640,-0.434174,-1.953960,0.425359,-8.835374,4.477781,-2.006964,-3.932084,5.191303,-2.521086,-5.721754,-4.505213,-1.407913,-2.038019,7.392739,-1.763929,3.564937,7.797610,-2.362393,-6.576772,-6.705856,5.715068,-0.216980,0.485191,5.943705,9.703820,8.193671,-2.892105,9.263328,5.642979,-7.971115,8.963129,6.284336,7.059174,7.748972,-3.841807,0.359999,-6.210691,-1.589789,-4.323854,4.182894,4.260811,8.120189,9.079453,-6.356114,1.929233,-4.972045,-4.429834,-6.720167,9.763721,1.741428,9.872126,2.129394,3.659440,0.769111,5.447223,4.675420,6.125785,-0.418721,-3.032985,2.218343,8.873763,-8.938985,4.880128,-1.199866,5.437797,3.763376,-5.964216,-3.127012,-7.236815,2.095082,6.369313,-4.228917,-4.276117,9.874449,-9.236464,-3.718661,-9.484640,7.829149,6.108469,-8.669992,-1.350403,0.596511,-0.545700,-0.920745,8.138731,-3.176258,-2.578948,7.335373,6.484137,0.813832,-5.087461,0.256603,3.116312,-5.315965,-2.409121,6.574061,-9.460505,-6.071967,-5.834354,6.171491,-4.361947,-4.941709,2.917694,0.047118,-2.083143,-5.599785,2.603072,8.868465,-1.299180,4.758924,-6.192132,0.936176,-4.684990,5.309333,-4.200023,-0.657716,-7.535338,-1.123946,9.762113,-3.568098,-3.490394,-7.536920,8.552857,-2.103945,0.866314,-0.304279,-8.155487,4.607866,0.352135,-8.963372,0.063829,1.464743,0.760697,1.922876,5.801464,3.893653,-7.856686,8.818833,7.001067,-5.526660,-8.443945,5.768533,-1.771646,5.679301,1.802903,-0.079184,-0.380121,1.815696,4.550389,-9.268939,-8.442798,-9.179659,2.114411,-1.726424,-0.288055,-3.989508,-8.315303,8.354694,-5.086407,-3.717294,-4.364284,-1.474765,-5.994773,9.228163,0.555271,9.580798,0.571347,-9.361012,1.149437,9.385515,7.102894,-6.465180,7.079420,0.389219,-9.320100,-3.740209,-8.911922,-2.212138,-4.615410,-1.123653,0.599352,0.671325,8.955950,-5.527238,1.316614,-7.130714,7.805194,-2.010426,9.429011,-6.865159,7.769450,-1.573677,9.824003,2.974591,-2.175997,1.322462,8.136834,-9.152642,5.571485,8.217160,5.673725,6.077787,7.094767,3.460677,1.891933,-4.112661,-8.062277,-1.985148,0.625429,8.132015,6.636043,-8.623913,-2.191210,-3.795003,5.955993,-2.932333,5.332052,8.417188,0.566117,1.491514,-1.136167,1.498443,6.524682,-6.203889,9.787439,-6.378445,5.896849,9.573734,-1.699156,0.377339,-9.176309,-9.283937,9.704720,-1.622730,-7.286236,-3.386025,6.809988,-1.266412,9.672150,-9.249827,-1.575862,-3.055304,8.024612,8.507203,2.051627,1.017314,-6.523997,4.877216,5.721891,-3.555776,-1.212214,-7.614520,7.695277,-7.062982,8.725506,7.922050,0.084475,3.208372,-5.387623,-3.990366,7.261444,8.790787,4.021498,-1.755522,-6.397383,0.998474,0.798980,-4.460043,-0.342730,1.960768,8.416784,6.162790,-8.192557,4.721953,-4.078590,-3.275786,6.679278,5.447526,6.030830,4.534633,2.801115,-9.237468,-6.262786,6.127553,3.459401,7.170213,2.379754,2.730992,2.274360,-0.617066,3.238808,-0.011756,-0.120613,9.030270,1.925658,0.869392,9.974239,9.489611,7.175675,-8.138178,3.267488,5.580718,2.451163,7.646763,-2.256905,-6.968927,-5.852067,-1.054085,-7.404794,-9.882265,2.899975,-0.410589,5.530807,-3.200784,-8.504625,5.119312,-7.262483,5.207120,-4.844811,8.960854,-4.370818,-0.872157,-2.082930,-7.869515], dtype = "float64")#candidate|1736|(400,)|const|float64
var_1737 = relay.var("var_1737", dtype = "bool", shape = (384,))#candidate|1737|(384,)|var|bool
call_1734 = relay.TupleGetItem(func_1422_call(relay.reshape(const_1735.astype('float64'), [11, 9, 9]), relay.reshape(const_1736.astype('float64'), [400,]), relay.reshape(var_1737.astype('bool'), [384,]), ), 6)
call_1738 = relay.TupleGetItem(func_1426_call(relay.reshape(const_1735.astype('float64'), [11, 9, 9]), relay.reshape(const_1736.astype('float64'), [400,]), relay.reshape(var_1737.astype('bool'), [384,]), ), 6)
output = relay.Tuple([uop_1716,call_1734,const_1735,const_1736,var_1737,])
output2 = relay.Tuple([uop_1716,call_1738,const_1735,const_1736,var_1737,])
func_1740 = relay.Function([var_1737,], output)
mod['func_1740'] = func_1740
mod = relay.transform.InferType()(mod)
var_1741 = relay.var("var_1741", dtype = "bool", shape = (384,))#candidate|1741|(384,)|var|bool
output = func_1740(var_1741)
func_1742 = relay.Function([var_1741], output)
mutated_mod['func_1742'] = func_1742
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2219 = relay.var("var_2219", dtype = "float32", shape = (4, 8))#candidate|2219|(4, 8)|var|float32
uop_2220 = relay.asinh(var_2219.astype('float32')) # shape=(4, 8)
bop_2223 = relay.floor_divide(uop_2220.astype('float32'), relay.reshape(var_2219.astype('float32'), relay.shape_of(uop_2220))) # shape=(4, 8)
func_1533_call = mod.get_global_var('func_1533')
func_1537_call = mutated_mod.get_global_var('func_1537')
var_2230 = relay.var("var_2230", dtype = "float32", shape = (1872,))#candidate|2230|(1872,)|var|float32
var_2231 = relay.var("var_2231", dtype = "int32", shape = (72, 4))#candidate|2231|(72, 4)|var|int32
call_2229 = relay.TupleGetItem(func_1533_call(relay.reshape(var_2230.astype('float32'), [9, 13, 16]), relay.reshape(var_2230.astype('float32'), [9, 13, 16]), relay.reshape(var_2231.astype('int32'), [288,]), ), 6)
call_2232 = relay.TupleGetItem(func_1537_call(relay.reshape(var_2230.astype('float32'), [9, 13, 16]), relay.reshape(var_2230.astype('float32'), [9, 13, 16]), relay.reshape(var_2231.astype('int32'), [288,]), ), 6)
func_1422_call = mod.get_global_var('func_1422')
func_1426_call = mutated_mod.get_global_var('func_1426')
const_2234 = relay.const([4.656209,-9.328960,-1.430968,-3.371898,1.988086,-1.452021,-0.106965,-1.316657,-2.620768,4.234821,6.242892,6.056047,-9.012235,7.570395,3.130815,4.216289,5.670953,1.075117,-5.594118,6.320002,-7.254042,7.524912,9.819846,7.462746,-8.265426,-1.667656,-4.319890,4.483792,2.360899,5.010693,2.282766,4.376032,-1.874807,1.863521,9.506016,5.614352,-6.973738,-0.475529,-6.827823,0.524428,-9.254871,-7.156479,7.018119,-5.428913,-2.124692,0.893642,-2.005903,-6.721768,2.085548,9.519096,6.339041,1.976143,8.889199,8.684670,7.326815,-1.173376,7.061278,9.468601,8.907319,7.899243,3.357751,6.859128,4.828308,-5.077996,5.009928,7.262249,-2.454087,9.679076,6.536925,1.451065,7.852721,-4.665382,-1.179143,-1.443403,6.063019,-8.422414,-3.239477,-0.784601,8.396331,5.962576,4.227712,6.775477,1.098421,6.519580,-3.058564,0.592786,2.655747,-7.740549,6.760090,1.917397,-7.190499,3.552414,9.377395,-2.334513,7.801186,-0.527293,8.383173,-4.025572,-8.104628,0.507448,4.522340,-7.464972,-8.959158,-9.510678,4.444720,1.920840,4.918172,1.227320,-4.280784,-0.023843,6.630685,-7.396278,-4.425377,5.611117,8.858704,1.345212,6.716097,5.259593,-3.006429,-3.149577,1.199869,8.921288,-8.887574,0.146868,8.841078,-2.643817,-3.708001,2.721352,-7.835342,7.242214,6.055838,-2.455769,9.057521,-3.596005,0.527228,2.461139,-3.844324,-5.113756,4.818255,-5.056435,0.347951,1.325202,1.717888,-4.394301,0.088171,6.840264,4.036921,-9.230522,1.355821,-1.955218,7.353102,5.173564,7.181427,-2.798699,-4.077050,7.788300,-7.988486,7.974228,6.032272,9.107154,-7.786364,2.961098,-1.224483,-5.570452,-5.620558,-2.770781,-6.689723,-7.538384,3.216854,0.027503,3.540977,8.283962,2.850882,4.810606,8.548053,-4.768264,-7.215800,5.484577,5.604489,-0.121802,-7.374321,2.182316,5.905206,-8.007197,-3.191452,-3.440637,-4.504086,1.014293,-4.981030,-1.549297,0.059848,1.677138,-8.800382,-6.038037,-3.433022,-7.420275,-4.117675,-9.759143,9.181217,-6.328607,-4.021731,4.290148,2.535036,-8.825082,8.272209,4.010441,4.676392,-2.210503,7.607096,2.878057,-4.311907,-2.350874,1.077969,-9.129721,-6.733647,1.202414,6.066135,3.946421,8.371284,-6.442256,1.685849,-3.045359,1.435496,-4.691148,4.261412,-6.034650,1.064746,-8.344233,1.566211,6.620348,-8.033691,-6.990467,0.518712,-3.931928,-6.698231,-9.368517,-5.920350,-2.497260,0.002242,-8.356364,3.418309,-1.987638,9.649177,8.859270,2.003296,-3.521936,2.176303,3.993194,2.171264,-2.666508,1.603428,7.228350,2.973548,3.465272,-2.039029,7.898792,-3.365255,8.770592,1.086569,9.605742,2.914993,-3.875162,-9.496744,-6.497135,6.761922,8.871584,6.751709,-5.732873,4.891360,0.782078,2.133686,5.238766,9.043407,8.260238,2.408256,2.562558,7.639585,-3.251476,-1.425582,3.525714,6.006882,-9.988814,8.059256,7.472150,-4.581263,-6.255320,5.803797,0.727154,-4.356876,8.043230,3.350512,1.939107,-6.096101,2.026883,-2.088680,-3.446206,8.502366,-7.419342,8.873577,0.075049,-6.024161,8.937787,4.464741,-1.065263,-1.627426,-6.002946,0.861518,-6.238898,8.082459,-9.534610,-3.620300,3.135806,9.130348,-1.566910,4.156875,-1.631692,9.844504,0.549192,-5.168517,1.708179,-3.615656,7.048493,6.637490,8.440402,8.160874,-0.123630,8.441484,4.633424,3.762537,2.677737,-3.777964,-2.256234,-7.641472,-8.605093,-8.880528,4.146120,2.738503,-1.341634,-2.374633,8.319876,4.541080,7.166285,6.930784,0.894471,-0.139000,8.169407,-5.511922,-7.412394,-7.476707,9.691823,-6.723003,8.133458,7.943214,-2.009051,0.606802,3.198116,9.765800,9.703187,-6.921997,2.394239,-3.793631,7.185053,6.195392,2.888731,-0.793059,-8.845422,4.628459,2.028105,0.250652,-6.546064,5.216645,4.479570,-1.781901,-7.943588,9.902776,5.028136,-3.077043,-6.307714,-0.135880,9.640901,-8.339771,-1.319233,6.428528,4.725889,5.786356,-4.507272,0.861135,-0.572056,-5.653113,-7.296789,-6.348855,0.572358,-3.664692,-5.349895,6.094768,-6.506596,2.204972,9.768786,-4.097493,6.653242,-4.917735,-8.213371,1.825534,8.146410,8.853302,6.713814,6.878815,6.110517,-2.854399,3.460609,3.268416,-8.203140,-0.073721,-7.472360,-8.193338,-7.807449,0.503536,-7.316562,8.854899,-9.886633,-1.313376,0.572353,9.078562,4.904726,-8.786537,6.077335,-8.066987,4.353698,-8.798905,8.424889,5.903059,5.556775,2.494306,-1.217122,-1.645568,2.525775,-6.824634,-8.130738,9.501512,-4.301568,-1.926430,-3.114599,2.606258,0.199608,8.707998,-7.118034,1.907576,9.271317,0.580065,5.071536,-8.127217,-0.010599,9.842545,-2.377225,1.685355,2.511525,6.825326,-9.845129,3.528515,-1.704892,5.562375,9.759757,-6.545040,8.786890,-1.512843,6.834729,7.188148,-9.726320,3.495409,-9.530184,9.745717,-1.966676,2.987668,8.269805,8.208897,5.038757,-6.384148,8.014608,4.285822,-0.178406,1.678752,-0.693355,-3.507460,-9.328402,-1.625562,-5.978781,-9.479220,-1.192778,1.989617,-5.736463,8.672624,2.409859,-9.937323,-1.216862,2.846359,-1.631770,1.962268,-4.231370,6.595727,1.535206,0.926787,8.496703,-5.821793,8.605932,7.191080,-2.413471,5.854620,-2.611571,-7.484591,0.513926,4.682430,7.007538,-6.166484,-1.941171,-4.466772,9.958481,3.506114,3.321746,-3.412795,-4.102857,-7.996258,-3.735435,-4.759283,1.355497,-5.278323,9.210079,-1.019975,-5.250718,-9.609189,-8.563083,-0.413588,-1.145224,-7.935515,4.297335,-0.324564,-0.425112,3.459817,-6.697385,5.313462,-3.677015,-3.862993,-7.141824,-3.584093,6.782727,5.007415,4.351835,-9.002081,-2.412646,5.870654,5.033676,6.480857,-9.203486,7.523890,-8.308551,3.014192,-0.613153,-2.369699,-7.352895,9.128363,5.271490,-0.121959,-1.121491,-5.619304,4.937213,-0.386592,8.531243,3.724273,-4.948701,-4.246790,8.289104,-6.878327,6.620545,-8.041349,5.768130,-9.520677,6.979764,-3.134787,5.117861,-8.626992,-1.603943,1.893547,-7.770887,-4.688367,8.037647,2.353339,-9.422490,-1.938987,5.452012,7.082279,-9.909067,2.461428,-8.059185,0.307735,9.175446,1.336506,3.590362,5.763723,1.229757,-9.698304,6.744402,6.167780,3.774103,3.613856,1.772680,-6.549853,-1.261924,3.009264,3.010108,-5.990152,-0.038925,-2.727285,0.963772,8.360695,7.698326,0.184391,1.571095,-8.805988,0.841261,5.468573,1.455146,-8.450728,-9.241184,-7.085968,8.556898,-5.952090,-3.878803,8.469510,-9.978196,-2.933055,-5.319462,-2.250957,4.783087,1.776234,6.617041,7.682294,-9.581080,-6.578814,8.482879,-0.859305,-3.393943,-8.328743,6.041931,-0.551819,-7.434216,-5.221305,-4.725082,-1.525699,6.661889,-8.575839,1.997961,1.236313,-0.573317,-2.602445,9.387162,-3.258635,1.018526,-4.752894,-8.963502,-9.633048,-2.324330,4.762965,-7.653619,-9.748372,4.700148,-0.331593,-7.906086,-5.345256,7.174938,-7.436169,0.968626,-4.996624,0.274606,-2.079765,3.461601,-4.084577,3.964808,7.846122,6.136315,8.978217,-0.775836,7.647668,-2.068975,3.009044,-7.324923,-3.249883,-6.659010,-7.216465,2.885278,2.528159,-1.711736,-4.805439,-2.845983,2.478958,5.432772,-5.048845,-4.817564,-0.473089,-4.666253,-4.454114,4.319050,-8.470822,-6.324991,8.517603,6.710181,-8.887980,-7.293445,9.484833,-8.409163,2.485618,-3.216489,-3.990532,7.480297,7.420532,-0.333240,2.847815,-9.254090,-6.871244,-1.429509,-0.388440,-1.810841,3.380714,-0.237235,1.568202,4.996346,-9.823752,1.656547,-0.254033,-0.863551,-3.781775,-5.598505,-1.910669,0.670960,8.750715,9.360074,-2.562790,-3.949587,-4.866170,-3.262352,-7.309433,-3.568570,2.780962,6.976161,4.756862,4.811004,-5.129617,0.579962,-3.765954,6.596328,-1.637111,-7.297828,3.647660,2.370550,1.401619,3.605928,6.505332,-7.477491,6.746605,1.170791,3.501931,-1.526330,-3.869282,8.164230,7.688682,-9.001510,2.680298,-7.714446,6.497816,-1.066074,2.395820,-4.257428,-7.483861,-4.174447,-8.815483,-0.069065,-1.130196,-0.332486,-7.107632,-9.673812,-1.576139,7.143452,3.693870,-9.812335,3.378064,6.942855,7.705111,-3.485344,-2.073807,3.046376,-0.392891,5.440433,2.257332,3.712624,1.355522,0.099852,-2.986973,9.424366,-9.332255,-0.932582,-7.072056,-6.316843,-1.604257,9.069770,0.931258,5.418828,-0.898254,2.309708,-1.509972,7.074483,-1.073241,-1.977513,-4.595135,-8.456380,6.770936,-7.482394,-5.968145,1.000787,9.625256,6.607132,-3.590182,-3.059832,5.629601,-0.954319,-8.422352,5.719289,-0.938877,0.182869,9.324759,6.362782,4.516150,8.392745,-3.423915,-9.455953,2.416130,6.522179,-4.521518,2.702320,4.974122,-9.690249,7.318300,-0.772402,8.591081,-0.075760,5.395026,2.081539,-9.271888,-1.500343,-6.060806,-9.259431,-5.873438,9.952784,-1.051955,7.823083,-1.109449,4.712409,3.242927,9.595064,-4.189360,-4.652784,5.224824,-1.773449,-3.657078,-5.728196,4.045031,-8.129012,-3.850528,-6.956112,-4.480093,-2.408077,1.482369,5.584912,6.635933,1.021270,-9.195253,1.234975,-6.232979,3.634993,-3.147867,1.641022,7.648743,-1.062779,6.913414,-2.900834,-9.877569,-9.756318,-9.744348,-8.652309,-4.176722,9.287997,9.925742,-8.795967,-6.195123], dtype = "float64")#candidate|2234|(891,)|const|float64
var_2235 = relay.var("var_2235", dtype = "float64", shape = (400,))#candidate|2235|(400,)|var|float64
var_2236 = relay.var("var_2236", dtype = "bool", shape = (96, 4))#candidate|2236|(96, 4)|var|bool
call_2233 = relay.TupleGetItem(func_1422_call(relay.reshape(const_2234.astype('float64'), [11, 9, 9]), relay.reshape(var_2235.astype('float64'), [400,]), relay.reshape(var_2236.astype('bool'), [384,]), ), 2)
call_2237 = relay.TupleGetItem(func_1426_call(relay.reshape(const_2234.astype('float64'), [11, 9, 9]), relay.reshape(var_2235.astype('float64'), [400,]), relay.reshape(var_2236.astype('bool'), [384,]), ), 2)
func_1108_call = mod.get_global_var('func_1108')
func_1111_call = mutated_mod.get_global_var('func_1111')
call_2242 = func_1108_call(relay.reshape(call_2233.astype('float64'), [10, 8, 5]))
call_2243 = func_1108_call(relay.reshape(call_2233.astype('float64'), [10, 8, 5]))
output = relay.Tuple([bop_2223,call_2229,var_2230,var_2231,call_2233,const_2234,var_2235,var_2236,call_2242,])
output2 = relay.Tuple([bop_2223,call_2232,var_2230,var_2231,call_2237,const_2234,var_2235,var_2236,call_2243,])
func_2258 = relay.Function([var_2219,var_2230,var_2231,var_2235,var_2236,], output)
mod['func_2258'] = func_2258
mod = relay.transform.InferType()(mod)
mutated_mod['func_2258'] = func_2258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2258_call = mutated_mod.get_global_var('func_2258')
var_2260 = relay.var("var_2260", dtype = "float32", shape = (4, 8))#candidate|2260|(4, 8)|var|float32
var_2261 = relay.var("var_2261", dtype = "float32", shape = (1872,))#candidate|2261|(1872,)|var|float32
var_2262 = relay.var("var_2262", dtype = "int32", shape = (72, 4))#candidate|2262|(72, 4)|var|int32
var_2263 = relay.var("var_2263", dtype = "float64", shape = (400,))#candidate|2263|(400,)|var|float64
var_2264 = relay.var("var_2264", dtype = "bool", shape = (96, 4))#candidate|2264|(96, 4)|var|bool
call_2259 = func_2258_call(var_2260,var_2261,var_2262,var_2263,var_2264,)
output = call_2259
func_2265 = relay.Function([var_2260,var_2261,var_2262,var_2263,var_2264,], output)
mutated_mod['func_2265'] = func_2265
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2369 = relay.var("var_2369", dtype = "float32", shape = (10, 8, 9))#candidate|2369|(10, 8, 9)|var|float32
var_2370 = relay.var("var_2370", dtype = "float32", shape = (10, 8, 9))#candidate|2370|(10, 8, 9)|var|float32
bop_2371 = relay.floor_mod(var_2369.astype('float32'), relay.reshape(var_2370.astype('float32'), relay.shape_of(var_2369))) # shape=(10, 8, 9)
output = bop_2371
output2 = bop_2371
func_2376 = relay.Function([var_2369,var_2370,], output)
mod['func_2376'] = func_2376
mod = relay.transform.InferType()(mod)
var_2377 = relay.var("var_2377", dtype = "float32", shape = (10, 8, 9))#candidate|2377|(10, 8, 9)|var|float32
var_2378 = relay.var("var_2378", dtype = "float32", shape = (10, 8, 9))#candidate|2378|(10, 8, 9)|var|float32
output = func_2376(var_2377,var_2378,)
func_2379 = relay.Function([var_2377,var_2378,], output)
mutated_mod['func_2379'] = func_2379
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2413 = relay.const([[[3.694409,4.563476,-4.163881,4.811336,0.407309,1.167021,6.626319,4.428663,-3.503814,2.330787,9.384626,-4.233070,3.504535,-0.077636,-5.244129],[4.210713,5.928508,6.209109,5.407431,-8.824878,8.311326,-3.119708,2.449596,2.062784,-6.016518,-3.253257,-2.191088,-7.540364,-6.271890,-3.848342],[-2.100852,-0.849917,-6.646198,7.379532,0.634703,2.994942,9.440649,8.074990,9.629876,-4.670694,2.216867,0.787602,9.392481,-5.768593,-4.483431],[-1.136059,-9.932324,-7.697180,0.694883,-2.819730,6.220668,3.461063,-4.912274,4.600628,-9.370308,2.981707,3.593897,4.671212,-6.103983,-2.772195],[8.516233,-7.969307,7.101448,-4.664896,-9.200824,6.085802,-6.861413,1.463113,-7.510867,-1.809108,-0.249635,-3.794511,-9.182209,5.948305,9.346436],[2.131161,-8.415135,4.563616,4.921115,-7.929255,-7.460548,5.736228,3.281557,2.866007,-9.378015,-7.691181,0.554510,-6.294600,-4.897786,3.191391]],[[7.324205,-4.611513,-1.890296,7.204194,-5.378862,4.440051,-8.268131,9.625561,7.400830,2.914929,4.064676,4.945986,-5.625418,-8.236951,6.835668],[6.796079,8.650841,-5.970397,9.048618,8.684878,-3.132285,-4.744106,6.094265,-5.345007,6.285035,-6.147419,2.737113,8.886141,1.069491,-4.340834],[2.210757,6.151226,-8.402485,-2.296792,-8.660104,0.510283,1.897028,3.385986,9.229921,9.702500,4.190164,7.244307,8.664599,-6.724140,8.569920],[3.581616,-3.533566,5.716511,3.173154,-5.516729,4.818380,-2.779338,-1.995865,0.385846,7.179555,-2.387842,3.982654,6.401614,-3.550102,5.417422],[-4.814073,7.517222,-1.991847,9.108314,-7.358906,5.669431,7.836607,-6.073928,8.389322,-3.105379,2.393631,0.958090,-2.369038,9.921754,-6.788403],[-7.162479,-0.607669,-8.408402,-0.649124,-2.540082,7.496295,-6.163043,5.572904,-5.676216,1.169239,2.789868,0.301323,9.651471,9.264541,7.934974]],[[8.010480,-3.986897,7.612163,-5.434432,8.632203,-0.907791,-0.726815,3.242651,-8.633432,-5.838234,-6.567837,-5.715016,-2.959183,-4.334536,-3.000651],[-1.886903,5.348303,2.888631,3.348919,4.942647,-4.282372,1.396063,-2.968849,-8.278760,4.489985,-3.020771,-2.377435,6.396251,-0.228649,-7.495968],[1.772736,8.244939,-6.310479,9.458272,-5.952197,-0.440889,3.718433,-4.285595,-0.282182,-8.731387,3.314873,-0.130496,2.604758,7.014844,2.201784],[-4.530006,-9.798469,8.695810,2.538509,-8.778381,7.820058,-1.494302,-2.992342,8.127095,-1.855265,-4.899764,-3.056514,0.295872,0.609239,-7.722701],[8.686810,6.775131,-6.854166,-8.371811,-4.636849,8.391514,8.795166,-6.218880,-0.862613,-1.156914,7.477641,9.401087,0.276967,1.791261,5.972996],[7.443251,-7.260553,-4.707007,-4.919113,-0.789535,5.206950,-5.713699,-0.025194,-1.358461,-0.983067,4.895974,-5.775685,-7.456711,7.821956,-8.691734]]], dtype = "float32")#candidate|2413|(3, 6, 15)|const|float32
uop_2414 = relay.log10(const_2413.astype('float32')) # shape=(3, 6, 15)
bop_2417 = relay.logical_or(uop_2414.astype('bool'), relay.reshape(const_2413.astype('bool'), relay.shape_of(uop_2414))) # shape=(3, 6, 15)
output = bop_2417
output2 = bop_2417
func_2423 = relay.Function([], output)
mod['func_2423'] = func_2423
mod = relay.transform.InferType()(mod)
output = func_2423()
func_2424 = relay.Function([], output)
mutated_mod['func_2424'] = func_2424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mod.get_global_var('func_2423')
func_2424_call = mutated_mod.get_global_var('func_2424')
call_2427 = func_2423_call()
call_2428 = func_2423_call()
output = call_2427
output2 = call_2428
func_2432 = relay.Function([], output)
mod['func_2432'] = func_2432
mod = relay.transform.InferType()(mod)
output = func_2432()
func_2433 = relay.Function([], output)
mutated_mod['func_2433'] = func_2433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2432_call = mod.get_global_var('func_2432')
func_2433_call = mutated_mod.get_global_var('func_2433')
call_2461 = func_2432_call()
call_2462 = func_2432_call()
uop_2463 = relay.tan(call_2461.astype('float64')) # shape=(3, 6, 15)
uop_2465 = relay.tan(call_2462.astype('float64')) # shape=(3, 6, 15)
func_1422_call = mod.get_global_var('func_1422')
func_1426_call = mutated_mod.get_global_var('func_1426')
const_2481 = relay.const([-6.351683,7.591169,-3.497565,0.251302,-8.230522,9.162720,-5.517724,-3.887113,-2.058728,2.538953,-5.425822,3.228156,-8.073685,-7.588009,0.522499,1.754752,-5.084418,-6.081464,3.786256,8.467185,2.285470,5.846681,1.904745,8.773246,-7.342546,-1.812357,7.257098,-6.037738,-7.926373,2.752713,-8.986204,1.004907,-2.395744,-7.239978,0.380691,2.898539,-2.479978,-0.491661,-9.146636,4.985838,-7.793391,3.491572,5.756806,-8.444394,-8.627143,3.221255,-9.962766,-2.166411,-8.920638,-0.384525,-6.073572,-7.231853,4.441251,-2.939423,9.467846,-9.142143,-7.875036,4.278020,-0.541987,8.440103,1.500912,0.612725,8.353080,-3.911452,-0.092055,0.314521,-3.994236,6.629969,-3.752134,9.596127,0.661470,-4.642901,5.696855,7.075972,8.918156,2.667709,1.403823,-3.181910,-7.765753,-4.925699,-8.630349,6.451172,-4.235138,-5.984509,3.206893,-8.717714,9.692318,-6.852597,-5.695021,-1.365590,-5.387919,-2.386679,1.157404,-5.960318,-9.934561,-4.115891,-2.204957,6.702300,4.377949,9.988747,-7.478374,0.192973,-6.489103,-6.313756,-8.856845,-7.481775,-2.520010,-6.440197,-1.591870,3.603617,-2.128810,9.079059,-6.959717,2.943590,-5.643909,-1.471587,-6.857704,-6.818310,5.528534,1.966557,-4.978575,-8.912323,-9.513748,-3.645342,8.780325,6.460419,4.298831,-3.568464,-9.505265,4.917697,-8.999260,7.310010,-8.120334,-6.346285,-8.017927,8.367872,9.320843,-0.869756,-0.890181,-0.574261,-9.987613,0.248521,-2.447718,5.110369,0.541933,3.414545,-5.370116,-6.253785,2.727458,-5.653865,-1.162016,-3.385298,4.669759,-1.074833,7.960356,6.634766,-2.881479,7.040456,-0.457402,2.293314,-9.216464,-4.085107,1.223933,6.188052,9.372214,8.530576,1.124350,3.218386,-4.967404,-0.385702,2.149080,6.897759,1.274861,-1.194643,-0.910836,1.366886,1.762639,8.326559,4.877993,1.717433,9.236985,-5.040679,-3.844440,9.367791,9.699259,-4.432165,-5.075329,8.222451,-4.832475,6.814945,4.187075,6.394077,-6.829545,-8.374140,9.862985,-1.258734,-7.205271,7.441393,6.487688,4.913926,2.133896,5.200562,1.234444,7.112857,-1.191917,-1.609783,4.963765,-8.403096,6.399707,9.991749,-5.240034,7.644453,9.586281,4.482681,3.514165,7.986848,-4.953025,-5.778740,5.112433,-2.780615,2.012280,-6.917124,-0.984833,-0.237278,9.465055,7.354501,-2.902586,-7.871668,1.051024,-2.781691,-9.066996,2.756974,-8.137492,-7.357824,0.011406,2.221873,-8.139686,-4.606265,4.558777,-6.595063,-0.954138,-2.118030,-8.203342,-8.633833,9.426363,-0.958658,8.027266,-3.640381,-0.456780,1.643845,0.932208,-2.161794,-0.912455,7.271733,4.657327,-1.552830,0.965868,-4.041551,3.293839,1.183508,0.851001,-0.783434,-9.308444,-8.444488,-3.169071,-3.043751,7.392119,7.565378,9.512324,6.474233,-3.881554,0.589332,-3.723925,3.046490,-2.163283,-4.102970,-5.646844,-7.280053,-5.509950,4.371250,3.655989,-0.560794,-9.044375,-2.458766,-1.415465,6.171224,-6.612176,-1.861857,-4.620852,-6.010494,3.837760,3.428915,-4.611994,-8.405686,-6.041465,8.832268,3.824096,-9.952038,6.840843,-9.354915,-2.286643,-4.754848,-3.532246,-6.279165,-6.971037,4.056676,2.883860,1.400362,2.488169,-9.700110,-3.608549,0.977319,-0.958341,6.871436,-6.307757,9.649939,5.360332,6.292067,6.250348,9.447334,7.341506,6.928792,7.783575,-2.547323,-8.410499,-6.945960,-2.101303,-7.524924,-0.087146,-2.149978,9.294172,5.146449,1.238197,-5.160333,-6.394418,-7.485650,5.234609,9.657979,-8.086826,7.996894,-1.037862,4.271177,4.457815,4.922362,-4.211803,-5.586027,-1.718889,-7.246559,9.535027,-2.252433,-6.671567,5.247532,-6.139280,-3.565199,-4.696701,9.118551,-6.398580,6.447780,-4.461567,6.402701,-6.549710,3.249023,5.906196,-8.646548,-2.870629,5.308518,8.716698,-5.079570,8.184655,-9.183357,-0.471548,-9.520791,9.343020,-4.388533,3.278048,-0.846764,-5.088977,-3.496994,9.561579,-1.928939,7.974455,8.098207,-0.203163,-1.160870,-3.985066,6.738098,-8.343095,5.209354,5.838563,3.605957,3.828184,-0.124849,5.079687,-2.281397,5.153545,1.839001,-1.101382,9.374645,-0.309255,-7.308338,-7.742736,-9.616174,7.450154,-3.876652,4.861936,3.072146,4.333005,-0.892871,-0.967148,-2.230839,3.963720,-4.867896,-4.450483,-1.350513,0.447715,6.849650,-9.921347,-3.620491,-1.987202,-6.889926,5.388982,-3.964368,4.379258,4.283282,8.354543,6.644701,8.227827,-1.449292,7.147970,4.927032,4.323014,2.766544,-0.804251,-0.823582,-0.686495,-9.710366,-8.457456,9.693189,-1.759097,-2.298236,-0.559651,-5.137760,3.937490,2.667496,-9.578068,-2.137463,7.249230,5.178149,8.067803,-0.775918,3.976761,4.740442,-8.192926,7.615891,-0.186005,-1.741398,-6.144485,-0.206448,-2.739647,-9.479844,-6.603428,-1.065623,-6.213959,6.709675,8.948985,-1.116224,4.932634,6.886476,-0.772165,-8.520509,-9.072415,1.317159,6.747219,-9.220222,0.316006,-8.802419,1.453826,2.237882,5.679689,-6.377527,8.469900,2.782884,-9.259979,-1.276680,7.781667,1.361800,1.479188,-0.106157,3.041834,-7.168820,-9.489817,-2.837246,-3.396918,5.680805,6.765414,-7.978119,-2.340552,3.265472,-5.124777,8.553550,-0.873504,4.611502,5.604308,-8.486443,8.380704,2.948798,-6.020936,8.042092,-3.994961,-9.328768,-0.222625,-2.006458,-9.984188,-7.540934,6.828342,-4.800614,-2.759287,9.963199,-7.707543,-3.989479,8.890805,4.734416,-6.581601,-4.177386,2.549709,-3.595192,1.538058,5.531058,-9.087103,7.978808,0.891065,6.062739,1.708955,-4.430567,-6.832674,9.478366,-2.681620,7.275046,-3.569282,8.164861,-8.258387,7.121070,-0.436072,4.128942,-5.068822,-0.645514,0.771311,-2.032751,5.101784,-1.860365,0.355934,4.850034,-3.102532,-2.068062,-4.980634,-7.475621,5.945585,-0.913698,-2.060745,-9.654620,-7.010854,6.335001,-7.524975,8.680815,-4.407368,-3.626635,5.673346,7.464254,-1.904625,-6.394696,-6.854568,-7.881398,3.802195,0.593898,-7.785437,-9.293791,4.484751,-8.416982,3.657738,4.756779,6.954908,-7.510005,7.544119,-4.452917,7.061933,-0.587099,-1.243004,-0.373359,3.199166,4.950233,9.369886,0.802564,8.916400,6.317728,5.881634,-7.099469,-6.397481,8.693473,0.249070,3.179643,9.838861,-1.898007,-5.974025,3.632216,-6.062749,-7.205464,-6.357386,-3.504253,7.133595,1.635560,-9.775512,-1.566408,-4.589141,-8.786513,0.717614,-5.891299,5.212322,-3.005138,2.730248,-3.988330,4.223776,-0.554878,-2.225994,6.793210,-5.550485,-8.889283,9.779535,8.717330,-0.733327,7.455019,8.950943,-0.350026,-5.713391,0.601834,-0.727470,8.054187,-8.466851,-2.914284,7.799489,-6.088853,-6.195168,-7.340064,2.532674,3.966390,-8.694715,-7.560498,-5.588684,-0.934720,6.641164,5.702244,0.529160,0.529773,-7.227532,-6.125408,-7.716417,1.860101,0.987545,-4.846569,7.696571,1.734352,-1.371761,3.435969,-6.680043,3.007326,7.557194,-8.791566,1.635533,-1.993336,9.645673,6.405195,-9.432058,-9.033792,2.643360,-7.235736,-2.753790,-8.102944,5.131389,5.537370,1.044120,-9.155608,9.891218,-8.836481,-5.939905,-2.892844,2.880673,0.615689,-4.350875,-7.816736,-6.784490,-5.148568,-9.929077,3.227152,9.237165,4.293725,7.147344,7.836366,-6.803990,-0.471136,4.966928,-0.033087,-0.616441,-1.046457,3.038509,-5.878849,2.541342,-7.249111,2.411850,-7.765933,7.245818,-1.657831,8.967433,0.315014,3.800017,-2.538089,9.900039,3.555560,5.198213,-2.733226,-0.442105,-9.765365,-5.753667,4.079664,4.262613,-5.850389,-3.915273,0.081905,-8.111183,5.870001,-9.034737,-5.335397,6.348625,-8.942461,3.862430,5.372710,1.446032,-3.384224,0.341632,-0.210026,2.624518,6.448150,0.085988,8.636481,3.997225,9.224058,-3.557956,3.026978,6.123428,-1.527561,1.792163,4.287987,-0.832727,-6.329292,2.670285,-6.886994,1.584214,-9.601567,-6.051139,-4.046148,5.158054,-0.785695,-7.587723,2.425585,7.672118,-7.301498,0.162843,7.324992,5.885194,5.644977,-0.045296,3.254410,3.717985,-2.584108,5.567987,-7.018243,-2.136544,7.753697,-7.347061,3.353825,-8.953543,-7.910709,0.841476,9.022099,5.758151,6.606203,-5.470099,0.913669,9.346145,-4.946492,3.283004,5.560625,7.160794,-0.483648,9.059834,5.588834,6.919233,1.295257,3.099934,-9.708084,-0.010540,5.844666,-6.996206,-0.781589,-8.431592,3.641940,8.115286,-5.270310,9.643850,5.701331,-4.696240,-6.293485,-4.472036,-6.922029,3.363881,7.472966,-8.292269,-6.176775,9.633368,-1.230162,3.701873,1.970881,-5.698737,2.090648,-2.268655,-1.552213,8.586974,8.345492,9.677629,-9.806300,-8.132107,-0.750706,-3.220996,4.928577,0.265038,5.475540,7.232754,-2.871495,-4.095874,4.613902,-8.544294,3.568247,9.880848,2.837790,-3.958773,0.093144,5.273703,-6.380647,-1.832253,-6.720441,3.771824,9.135469,-8.580824,4.238322,5.942977,-1.819830,-5.550220,-0.158545,-6.111235,-9.745866,9.774465,8.853157,9.546485,-1.295396,5.847805,-2.221766,-6.604728,-8.623772,2.604047,-0.684441,-9.494985,-0.925011,-8.567933,-8.513139,-1.978049,-3.238479,-3.608512,2.554208,6.947270,-1.395775,-0.916211,4.752013,-1.434708,3.229597,7.631910,-2.714054,-7.055293,9.487666,9.089233,2.989068,-1.235175,0.738621,7.997998], dtype = "float64")#candidate|2481|(891,)|const|float64
const_2482 = relay.const([[-5.502489,-7.447345,2.533344,-5.105920,5.437235,-4.720693,7.104050,-2.247991,-3.271330,-7.817639,9.416970,7.475515,-2.725234,0.206764,-6.316481,4.502033,-6.589183,9.859711,-5.441142,-9.614164,9.968786,1.920011,-5.474785,2.202291,-8.330006,-8.953741,-3.851211,-9.281603,-5.036999,4.607219,3.429934,3.386839,-2.782127,1.879082,-5.244203,-6.598118,1.328358,-4.899070,-7.420781,-6.876989,4.574298,-6.209204,-0.600837,2.062698,3.887149,-6.227727,8.840905,-2.733076,-3.355962,-5.128777],[4.003364,-7.107292,2.375651,9.529302,3.091423,-4.159180,-6.731319,-0.713678,6.777760,6.852650,-1.452567,-8.334172,9.419907,-9.845328,-0.598745,-2.605268,0.702422,-4.839703,7.687699,-8.436561,9.069175,1.417820,-7.032445,9.594616,5.778592,-7.314057,-2.249022,-2.541183,8.451693,4.611816,7.107085,5.103980,8.956851,0.636371,7.613091,9.647427,-6.238078,-3.873575,-4.759443,9.505663,-8.933875,4.436127,-9.415020,-9.123400,-3.103354,5.062280,7.860943,6.739885,1.507719,5.117790],[-7.234581,9.759748,-0.051856,7.155074,3.917347,-0.864935,-2.816098,-2.646944,1.552785,-1.215513,4.176236,-6.780453,9.685961,3.698066,-2.231555,7.115184,4.455742,-2.916796,0.844156,-4.696927,-2.056563,-4.053965,-1.898526,9.403552,-3.319075,-8.813537,1.487407,-7.350787,-4.914889,7.681349,2.830541,6.516251,-9.836772,-7.103364,-4.616032,-5.834556,5.311315,0.130246,-5.984842,-4.942406,5.436394,-8.467652,1.945621,7.723028,-3.905195,-2.214793,7.097366,-5.215435,9.015742,5.558950],[8.853194,-3.498374,1.730765,-8.379140,-0.901007,-4.466516,2.420130,1.375346,5.036890,-5.737433,1.316721,5.672143,8.942462,-6.982797,-0.751738,-6.652477,-1.181932,7.583839,-7.093876,2.155501,-4.627481,-9.535109,-8.805261,-9.719299,-3.743397,8.153099,7.100323,2.783993,-3.857115,-0.467629,0.904563,-5.943143,9.263886,8.155787,0.393361,6.145434,-8.399604,-3.540632,9.133413,8.287132,6.109783,8.703555,2.744423,0.832543,7.083271,3.233968,-8.783975,-0.778166,1.065736,-0.195295],[-8.589993,-2.426290,6.150742,5.409044,2.369450,9.364754,4.565587,4.513459,5.468872,-2.061983,-5.527183,3.889060,7.921706,9.054067,-7.404648,9.749355,7.688332,4.780774,-7.372791,9.233055,0.235105,6.032327,1.587917,-2.109394,8.581046,1.360289,-4.487101,4.318370,-8.615824,-8.371363,-4.302282,6.666396,1.967281,-6.626357,4.265418,1.938015,-2.883647,1.233075,1.998361,-8.866680,-8.991150,8.497135,5.938726,-9.104107,2.570594,-0.461385,2.528076,0.332311,-3.728009,-8.001389],[5.868916,3.906723,-0.277254,1.248158,-2.781535,2.922361,-9.943235,6.872146,0.726046,7.166254,-3.947821,-8.851119,-2.903308,-3.997218,7.120637,-6.742621,-6.779850,1.240965,4.046728,-5.814621,-8.288987,-1.279037,-6.857271,-4.741802,-0.540228,-1.543048,8.165437,-0.523127,-0.461413,9.747663,2.912859,-6.113303,6.046285,9.302942,6.406887,-8.175543,7.083283,-3.228449,-8.590240,4.465019,-9.396816,5.198823,-4.972119,2.642374,-0.002470,-0.544752,1.241433,9.449889,-3.470181,5.148169],[-0.195480,-0.183240,-6.595521,-2.006927,7.201916,0.295008,9.315612,-7.854593,-2.172535,4.539360,-5.163330,3.085975,-3.521147,-4.705962,0.102939,-2.070758,1.974186,7.698634,7.813439,-4.903161,4.353935,9.236423,-9.149600,-1.977719,3.601464,0.348895,3.184164,3.002841,1.808722,5.990093,8.267789,-2.028500,-2.241818,9.668984,0.070765,-5.987689,6.445055,-4.068563,9.641954,9.843147,-1.089298,-2.815982,1.240631,9.118977,3.453816,9.569643,0.981302,2.316180,5.468533,3.074689],[-6.440283,9.804728,3.809014,7.078824,-8.108074,-3.559870,7.725130,-5.411805,-0.723134,3.664683,-1.637615,8.280099,2.546438,8.755987,5.420019,1.771898,9.150472,8.629235,-9.549659,2.887285,9.432052,8.359056,7.056806,3.388377,-9.922773,9.372443,0.994544,-2.303269,-2.337384,6.146297,-5.951344,7.982684,6.715570,3.828265,-9.621011,-8.763177,-3.351141,-0.467902,-2.616543,2.010403,2.529695,7.979868,5.005687,4.043947,-4.009831,2.748144,2.485170,-4.822823,-9.293996,8.085547]], dtype = "float64")#candidate|2482|(8, 50)|const|float64
var_2483 = relay.var("var_2483", dtype = "bool", shape = (384,))#candidate|2483|(384,)|var|bool
call_2480 = relay.TupleGetItem(func_1422_call(relay.reshape(const_2481.astype('float64'), [11, 9, 9]), relay.reshape(const_2482.astype('float64'), [400,]), relay.reshape(var_2483.astype('bool'), [384,]), ), 2)
call_2484 = relay.TupleGetItem(func_1426_call(relay.reshape(const_2481.astype('float64'), [11, 9, 9]), relay.reshape(const_2482.astype('float64'), [400,]), relay.reshape(var_2483.astype('bool'), [384,]), ), 2)
bop_2490 = relay.floor_divide(uop_2463.astype('float64'), relay.reshape(call_2461.astype('float64'), relay.shape_of(uop_2463))) # shape=(3, 6, 15)
bop_2493 = relay.floor_divide(uop_2465.astype('float64'), relay.reshape(call_2462.astype('float64'), relay.shape_of(uop_2465))) # shape=(3, 6, 15)
func_2258_call = mod.get_global_var('func_2258')
func_2265_call = mutated_mod.get_global_var('func_2265')
const_2507 = relay.const([4.903796,-9.641218,-1.636102,-1.069040,-2.898370,8.126434,4.344837,2.937344,-2.717178,9.368315,2.368738,9.619726,8.113471,-4.420277,8.629837,4.633323,-4.092594,8.876630,5.546429,-9.777363,6.582382,-1.348361,-3.018278,9.983866,-1.742529,4.121942,4.574752,-2.355365,6.097071,-7.997393,3.253156,7.072120], dtype = "float32")#candidate|2507|(32,)|const|float32
const_2508 = relay.const([-9.059805,-9.982539,5.313946,-2.293079,-8.731329,-2.410156,-3.432369,-3.826412,-0.647857,-6.304494,6.696559,-4.895957,-9.336123,-8.976658,4.050922,-4.121877,5.661996,8.597069,-1.592684,0.412155,7.262249,9.287099,3.695514,-6.741780,-0.624784,2.431581,9.237641,-0.417806,3.223899,4.791432,-4.866966,-3.856436,8.513250,-2.198712,1.822094,-2.662883,9.737447,-3.134748,-7.184596,-7.131555,-2.432431,-6.333175,0.796904,5.692193,-7.259389,6.097387,4.958851,-7.913358,-8.006902,-4.700943,-6.664719,-2.733564,-6.213251,-1.332257,6.026478,1.835198,-5.465195,9.640325,1.651061,-4.914958,-9.919787,-2.341826,2.177132,-9.216220,9.315208,7.697330,9.615177,2.720326,8.864727,-0.022956,-1.663329,-6.231630,-1.903664,-9.500486,-2.938865,5.980706,1.186635,-5.748062,-7.821292,-8.906872,5.906422,-9.845264,6.187684,-0.340118,4.576995,-3.335453,4.661537,2.789145,-4.557764,6.801898,-5.296181,1.132612,-6.446543,7.274165,-4.489455,-8.465586,7.565998,5.532446,-4.776207,5.061499,-3.551561,0.516955,-2.059803,0.241249,-6.119379,-6.096176,2.661820,-3.840276,2.512913,6.491650,4.240360,-2.733881,-3.475521,-0.507408,1.914885,-9.862630,9.382968,2.989096,-1.019931,-7.757907,6.694204,-9.096601,3.524438,-6.594994,-0.422260,-0.748789,6.153785,-3.285681,-0.651989,-7.643501,3.711400,-6.307891,-1.741600,-5.441947,-6.050096,-2.186617,6.194316,2.188131,3.494099,-0.399670,5.994661,-3.503835,8.580950,-7.189484,6.490483,3.392733,4.138687,7.855666,-8.547119,3.182625,-3.803797,-2.024923,-5.801557,-2.881682,-1.712134,9.987114,-4.029809,-8.303547,-3.502097,8.192855,-0.092936,-6.731934,-2.119140,2.079476,-4.759535,-6.969065,-3.313680,-1.663259,-3.617136,1.734359,5.621742,-8.574501,-8.985426,9.507533,1.965131,-8.870092,-3.825670,0.659240,-9.856227,2.764996,9.567084,0.111213,-5.711315,-4.509721,9.685662,5.669477,-8.818104,-5.317930,4.115888,-9.824995,-3.196346,-5.353076,5.315917,-2.660424,-5.935843,-2.528909,1.131251,-2.914871,-8.278410,-0.463392,-6.924303,-6.856869,6.956663,3.077940,7.150623,5.653257,-7.189948,-1.095890,6.805578,3.637313,-2.823698,-7.065335,3.982829,2.950512,0.353947,5.186426,-7.004465,2.902620,-7.031829,-0.305257,-0.515926,-5.352385,6.052897,-8.488897,1.173800,-4.202740,-3.595681,8.306105,8.765742,6.991220,-9.313165,-5.284969,-0.599024,-0.926880,-9.222484,-4.286930,-0.464224,1.445082,9.967554,-3.788957,0.462030,-5.561560,9.796872,-3.017444,3.369781,-0.605301,-6.536504,-6.312594,-0.544277,-6.635209,3.346188,4.580775,2.840310,1.812112,-1.986884,1.043366,-5.502187,8.962840,6.420706,1.299596,7.981796,-3.665129,-2.803528,8.314931,4.220190,-6.371169,-1.573207,-6.638342,-3.732068,5.971835,9.621000,6.181903,-9.976244,-2.945666,-9.072516,-3.621971,0.074580,6.888762,5.541659,-4.270159,-8.942788,7.338700,-2.999545,-1.718726,9.511709,4.267196,-8.843479,5.694961,-6.175220,-1.775523,1.313941,-4.799724,6.145871,-8.303723,-9.862389,6.978892,5.073107,-4.178819,-3.989573,2.186523,-4.231309,6.520579,9.634533,5.998262,-8.178957,-7.820358,0.985516,-6.088998,-9.344547,2.579590,4.074458,-4.627504,-4.923770,-3.650601,1.296895,-8.953687,-3.615727,9.493078,-6.196970,7.215248,-4.749354,-2.376895,2.320302,6.865174,-5.195243,-9.378994,0.155514,-4.883529,5.520074,7.382374,-1.744318,-2.462811,3.500936,-9.420358,5.025902,-4.943868,9.731671,3.126006,3.919828,8.775358,7.893417,1.546347,-1.590365,-0.544394,-8.471309,-9.497673,-0.183434,5.996177,-6.708568,9.889303,-8.493054,-4.699394,3.286170,-5.770433,-5.447615,-1.653479,3.429950,-1.686803,4.863595,-7.667081,-3.475585,3.414649,6.771424,-0.417815,-8.733671,5.878459,5.339525,3.272293,2.474635,2.313625,2.959610,-9.904604,2.986238,-2.728461,6.247538,-1.499632,4.310935,-1.361896,9.834610,4.809779,9.112780,-6.334867,-7.065741,5.434908,1.538056,5.410816,-5.096561,3.198161,-1.999169,-2.253936,-3.325918,-5.683593,-0.317528,5.510797,2.569951,-9.712339,5.259687,-0.726148,-8.282512,-6.408727,-4.442894,-6.660316,0.933052,3.964226,5.442320,1.061686,-2.954479,5.404247,4.312969,-9.199354,9.150571,6.757075,0.213363,-3.161795,0.625599,8.274945,-9.865652,-1.536021,-8.160064,-9.661579,7.546835,8.938439,6.151013,2.406633,9.159710,6.027294,-4.712728,-2.213609,-0.422413,0.397971,4.510207,-5.404606,-7.439316,2.698326,-5.288677,-9.103043,1.990822,4.379506,-3.569157,2.719026,8.820299,5.666441,0.980020,3.360603,-1.549778,7.981320,-1.583584,-7.850320,-1.228595,4.361454,1.912717,1.251098,8.866141,8.997691,2.801561,-9.614329,0.254520,-8.405076,8.323392,3.745363,-0.029418,1.899680,-6.228825,0.487523,5.842475,4.473128,-5.740976,3.176758,7.455221,0.403962,-4.595008,7.734712,9.815903,-6.622410,-5.170020,0.617091,8.678173,4.463192,-7.337604,-5.247112,1.407021,-0.140815,-7.431542,4.439039,-4.486884,-7.295236,-3.316060,-0.559761,1.568361,-6.309117,-5.003871,-3.087364,-1.978487,9.657728,-7.637463,-5.894825,5.780940,8.414954,6.986585,-9.431531,-3.009867,-1.693371,-8.211208,-2.849209,3.150609,2.085702,-0.954473,0.423259,4.099255,2.890681,2.309000,4.145757,-0.317798,-6.395860,-9.845157,6.487767,-7.562434,9.256635,6.117887,-6.200190,0.895450,-9.654239,-9.786386,-0.314941,4.242665,0.914161,-6.704562,4.432644,-2.167389,-3.460427,-9.444862,6.830460,7.410994,-5.853302,-3.261364,6.963941,-0.303762,-2.847953,-4.743934,4.138233,-0.937490,-6.202089,9.236966,-4.569943,1.759376,-4.540288,-7.072571,-9.588806,4.339923,-9.475025,-3.343564,5.449523,-4.350189,8.436652,-0.029806,-7.304057,5.593257,6.095380,-1.415165,-6.555322,-1.166919,-0.093682,-5.215540,-3.074133,1.787580,-5.251201,1.493203,-1.036500,2.754931,-7.945701,-5.479873,-0.571434,4.104171,8.900470,0.012549,8.915667,-9.054606,7.179093,1.598607,-1.709079,-3.285707,-8.549203,-6.499612,3.159685,-5.474919,-5.994158,-5.438088,-5.871540,-8.274490,-5.433010,-9.025771,-9.408536,7.953666,2.475232,5.853462,0.201216,-3.491683,4.059986,-4.632637,-6.507092,-5.163722,-8.008910,-2.820873,-3.836680,-3.993116,-0.094648,5.217030,4.188780,-0.708619,6.232287,5.650557,-3.785812,-0.784831,-1.746657,-0.489455,1.056236,9.432932,-6.551747,-0.851386,7.658896,3.130849,2.311567,-7.252362,6.087258,-0.096717,-2.237208,0.953138,2.809301,5.677935,-5.049229,4.999589,-5.820148,7.155608,-4.014357,-8.612793,-0.177222,0.547885,-7.339689,4.220972,9.857792,-6.401061,4.238881,-2.232421,6.011397,-6.909705,0.183249,6.894387,1.456162,-0.112355,-6.442196,3.089034,-1.169477,0.120585,-8.412117,-7.010197,-6.755835,3.505296,-4.670351,-5.725363,0.924554,-6.099626,-4.009002,6.387760,-1.542590,8.211217,-4.192821,-4.106556,-5.838861,5.005243,-8.228600,-2.178482,-5.492625,-3.851556,0.835152,-7.304415,3.916544,8.704207,-4.909129,7.948401,1.668765,4.176796,9.809713,-6.485051,2.766607,-7.995459,-2.363072,-1.463299,1.018595,6.210799,-3.765579,8.426597,-5.632647,0.497024,5.579435,-0.194810,-3.522627,-8.085689,5.401250,1.602442,-7.250135,-6.272460,-1.501188,2.821722,4.562780,-6.193954,-0.708432,2.665043,-6.657076,9.036813,-1.970924,-8.692760,-9.511209,-0.356193,-1.002854,-0.046069,-7.522555,4.645366,-4.199094,-5.782206,2.045153,4.362025,-2.795975,8.440729,4.277903,3.945718,-5.139522,-0.908273,-3.374341,-7.927359,-1.015987,-9.133394,9.391606,6.967694,-7.329297,3.144184,-5.595108,-4.175545,4.819317,-0.091045,-7.934857,-7.879219,1.431828,7.440088,-3.079108,-3.165000,9.469503,3.358238,-6.076299,-2.361602,-6.272006,1.824381,-8.725123,8.285116,6.925593,-0.941165,0.438871,-2.931539,-5.685577,9.912880,3.779924,6.870589,-5.930532,9.681329,-9.873022,0.898197,4.083422,7.786327,-2.919761,1.313181,-0.945432,-3.499365,1.073002,3.493506,-9.806887,-6.373350,-3.473949,-3.642779,-6.698663,-1.764092,0.093757,4.889520,-9.214320,-3.965306,7.133684,-3.964364,-8.170809,-8.277062,0.378170,2.614891,-1.171270,9.025324,9.801896,5.985401,1.375289,-4.821161,3.714947,7.826847,4.126609,9.628388,6.819904,-3.636294,-2.772917,1.051166,-7.159632,8.556084,-0.441281,-3.457348,5.889136,9.478706,2.640588,6.167788,2.632206,-6.154969,0.319565,-7.182878,3.728073,-8.201831,0.714795,6.725415,-2.691979,-4.064922,7.052527,-5.102777,-6.742049,4.396899,-2.256093,-0.078237,0.172341,-8.503157,-9.483003,3.714187,3.747809,0.677737,-2.045697,6.250143,-3.421834,8.522520,-3.542794,-0.295630,-2.701142,-8.495632,-3.581258,-1.321466,9.950980,-0.264234,6.842329,4.746243,4.154464,7.966004,9.672388,-6.794455,-0.750318,9.349098,-2.040404,2.047371,0.952174,1.545738,9.021617,0.089520,-1.993541,-2.406634,9.699919,-1.181011,2.926374,-0.862290,-9.521832,-6.059238,0.022090,8.067229,3.799639,-2.943505,-0.784723,-8.424463,5.419768,-7.454578,-5.504675,-6.795964,-2.460044,-1.388025,-2.837744,-8.900707,-6.887850,-3.832210,-9.275928,3.587938,-3.562242,-8.419051,7.593024,-3.232074,-6.372501,-4.493646,-1.121952,9.456517,4.952525,-5.192630,-8.254747,1.401366,6.276746,-5.925022,4.354798,1.809708,9.699818,8.567221,-3.546934,-7.044539,-7.720440,7.936114,3.133259,-7.161121,6.541682,-8.462554,6.068420,-5.098664,1.111343,6.951183,-6.395112,5.505392,-5.222619,-4.105673,-5.503074,-9.874447,4.835675,4.036216,-5.792926,9.796100,-8.001324,0.632229,3.633140,-1.599251,7.145657,-8.587027,-7.386923,9.185333,-3.099648,-5.825299,-4.698459,9.918385,-5.906795,-7.741986,-6.280667,-2.173052,-8.331674,9.409201,4.779712,-3.418998,2.778091,-7.159685,-3.815289,-5.001943,7.723334,-8.433660,8.815092,2.436119,-7.672284,-0.142273,-9.715005,-0.637160,6.046804,-7.473203,1.314440,2.124347,8.852643,7.845779,1.581597,-1.842365,-4.663179,3.001269,9.224878,0.618888,-0.615606,-7.268457,4.004648,5.571712,-4.383201,2.958144,6.691852,-0.442114,4.529414,-8.802467,-0.372177,4.118353,3.529490,-4.193471,-0.117901,3.833490,-3.833385,1.440632,-5.501328,-8.775830,-7.547537,-8.944886,-1.417420,2.274976,-8.468779,-3.362791,-2.422398,2.367981,-4.745328,-7.420711,-3.619517,-4.351184,-2.308878,-7.983539,-9.420382,8.810443,-5.463078,-9.528214,1.102345,-2.759841,-1.194915,-8.373818,4.566582,-9.572554,4.863646,-3.949137,-8.325175,-6.013817,-9.860566,7.511689,0.156814,9.086965,9.875369,-6.998192,4.847765,-8.921421,-0.950430,4.285692,3.558220,5.731515,-1.569569,-6.092091,-4.860773,4.952115,5.031135,-2.845996,-0.258115,-3.584459,2.506110,-1.827454,-8.007314,-2.553912,6.333893,-7.943000,-6.297334,6.557676,8.302476,0.927662,5.730769,-9.277511,-5.851507,3.592652,-0.061462,-5.087415,1.008915,8.709938,2.614968,-4.178615,3.291861,9.880531,-8.613717,-2.706224,-7.616295,-6.156929,5.109699,-2.842755,7.949676,-9.681079,-2.239855,4.114377,8.316537,0.458961,5.658348,9.297558,-6.927796,-2.920213,2.218093,-8.507702,-7.312244,4.713828,7.215755,7.625838,-3.581579,-0.820800,-6.009087,-4.898471,-9.857334,2.067491,6.753051,-8.311522,5.846747,-3.599796,-1.126067,5.378407,9.747785,-3.514573,-7.201722,1.487218,0.368588,8.624699,-2.069757,5.901562,2.040473,-1.305742,9.637233,-7.295144,6.112028,7.458865,5.822010,-4.486933,-7.333301,1.322464,5.791701,5.618571,0.377640,-9.124155,-2.186149,-9.818436,-1.241365,-5.912247,-5.493725,4.496573,7.118504,6.515583,3.108442,-8.345061,-3.407874,-8.542239,-2.482524,-8.205836,8.727304,5.734187,-1.492396,7.886163,-2.961445,-4.062598,7.383328,-8.052490,-8.362959,2.367782,-6.092522,8.190597,-8.662819,-3.212551,4.671403,-1.626157,9.714243,-1.428882,2.719521,2.480567,5.782483,-6.307367,0.254830,-5.695336,-8.182947,2.458982,4.091059,2.542380,-2.820259,-8.285329,-3.817360,-7.088882,6.428952,8.509391,2.044512,-4.599876,-2.677165,7.126780,-8.092742,-0.993488,5.011423,6.271884,-9.385502,-6.658758,-5.866651,9.287494,2.620799,-5.317513,-1.079788,-7.200974,-0.502465,4.195214,3.965831,-4.206897,-2.286379,3.022752,-3.881388,-7.886922,1.859640,-2.303845,0.128131,3.743063,5.004877,9.022297,5.370520,2.362177,5.240289,8.841733,8.133300,-4.039685,-8.382436,-7.394356,-0.764188,0.472901,6.597959,4.576596,1.539133,-1.501807,-3.949388,4.007443,0.222499,-3.004070,5.566843,4.801408,8.245408,-4.317157,2.620554,2.328916,6.055952,-1.848335,-3.832293,3.966394,-2.384801,-8.613728,-4.227030,-8.054173,4.983768,-3.526543,-1.285837,6.302309,2.964986,9.174308,-0.309261,-4.584739,-1.114551,0.732977,-2.171928,-9.108886,-2.315028,0.007995,-2.905907,-9.031710,-6.870914,-2.470107,-8.083324,7.279023,9.895605,0.073448,7.552746,2.329874,-6.491648,-1.228088,-1.179596,4.795584,1.229822,6.167369,-0.983047,7.940494,-0.905137,-0.718825,-4.867397,-9.772929,-1.006713,8.938030,1.092772,6.298149,3.477371,-2.218060,8.785204,-4.156299,-3.020885,-4.982797,2.154273,-1.720321,-9.348766,8.746539,-5.248961,-2.395874,6.999081,-8.172568,6.758562,-3.539899,5.231781,-7.391929,-3.714534,0.876082,-0.290441,9.978743,-1.428053,2.711739,-4.071188,0.704549,-3.992762,-5.528727,3.150481,-1.576506,-5.566328,-3.295395,1.230613,-3.103749,0.080218,-0.730595,-5.361166,-7.058772,9.260226,6.987462,-6.780256,-9.612923,-5.877673,-8.793364,1.666980,-4.997103,1.215651,5.800170,2.407971,-1.119982,-7.117654,-1.135731,-0.922212,0.858510,-5.674072,-7.942969,2.028915,3.235467,1.022826,9.282249,-5.886130,-2.023492,-9.209237,-3.352753,-2.771293,1.599237,-0.023538,4.894792,-7.418842,-9.584285,6.871421,3.733362,-7.139746,-4.700267,-7.096108,-2.835399,-4.149347,-4.663745,9.240202,-4.429134,5.094936,-4.021984,-4.588522,-7.137426,-6.863954,9.831799,6.590165,-4.959801,-0.398320,2.204020,-4.557395,6.583994,5.496219,-2.606601,1.864979,-1.780484,-8.994118,-5.045405,-2.978325,7.937361,4.659274,-8.783959,9.617392,-4.571196,2.162133,-7.164831,-3.234351,-3.711365,7.476158,-5.948057,-6.590274,4.855339,7.933553,8.537996,-0.886553,-9.468325,5.086341,9.182380,9.235632,-3.486799,7.547382,-1.609555,0.756206,5.414340,8.784879,9.955433,-5.824766,-2.782271,-6.187173,8.036253,-5.449511,-8.057001,-9.889160,-5.013157,-5.461336,2.984166,0.864162,2.613378,-7.422806,0.678472,-9.914946,4.290659,4.968003,-4.905140,9.853209,2.513737,0.407563,-0.377889,9.789708,3.800368,3.574498,1.941998,-1.963836,7.255136,-8.770616,4.838707,1.337855,7.058314,-3.251179,-1.958580,-3.267039,-6.091576,-3.204458,3.983494,3.221474,8.160061,4.207181,-7.189182,7.729932,6.555876,-6.968363,-0.922988,8.041277,5.547709,6.263584,-7.799635,2.070165,0.776430,2.848369,8.529794,0.538884,6.849912,3.967732,-6.371490,-3.027575,-4.532452,-4.758110,-0.232190,2.802033,-2.334482,-9.287271,-3.791888,8.477450,2.744881,-8.573498,7.117086,4.830430,2.449492,-7.655567,0.904565,9.073169,-9.175210,-3.570286,5.952059,-1.631796,-5.611268,-4.608344,-6.460312,-5.794999,-4.859723,-3.230691,-1.259562,7.781733,-3.876493,7.645797,-7.901425,-8.119034,0.131422,3.959442,-8.046314,-3.153083,-3.614812,4.480956,-1.384687,-5.402861,-2.018853,-7.663280,-8.202189,-0.325498,-1.253630,-0.474508,-1.931529,8.960644,1.514121,3.741581,-2.048056,-8.516966,-9.471836,0.939642,4.743315,-0.084137,-0.365825,-4.740714,-0.615708,1.495072,2.575150,7.947044,-2.340992,0.122442,5.132112,0.701778,-6.113219,7.868621,6.205628,6.183389,-2.273846,6.902818,-9.059299,-0.476121,-3.262632,4.926877,9.606650,-3.085728,6.422322,-1.904005,-5.440492,-8.353202,4.017909,9.982721,-1.665843,-2.242944,-2.205182,0.031207,4.596575,4.865129,-5.134375,1.745232,1.958515,1.778029,2.755578,-3.277584,-8.555801,-7.062066,-3.426681,-3.960390,-1.522478,9.846634,-3.934709,-2.599264,-4.326649,-6.639579,-9.326503,5.829559,8.982741,9.071522,-1.742456,-5.570713,-1.550392,-8.652737,-1.865914,-9.413048,6.787377,-4.360746,-6.903885,-8.135610,-6.103554,2.384997,-1.022231,2.895054,-2.747530,2.991271,-8.286155,8.744083,-1.158544,2.307310,-7.700626,-0.409113,3.580061,-3.463119,7.064756,8.731344,9.594365,-1.823561,2.454714,2.896002,-1.328258,-5.878381,-5.376675,-3.434744,8.985288,3.146020,7.799588,-1.626910,-4.138586,-0.196411,3.746135,-8.167699,8.384609,-9.511689,-7.263069,-4.185411,-5.995333,1.341283,-0.684882,-3.981702,5.238073,5.589299,5.857205,0.986796,-9.614889,5.049978,2.934266,-7.097241,-5.461103,1.621645,-4.418283,-0.416490,-7.328414,6.649790,5.634128,4.957304,-8.872029,2.069290,-1.478602,3.046934,-6.614702,-1.353422,-6.174299,-8.313143,4.015511,0.287441,4.067654,4.755929,2.321478,-9.172995,-7.889197,9.227480,4.624847,-4.160567,-2.752917,-1.650885,-3.455779,-7.581247,-9.840674,3.893288,8.538566,6.223415,-3.450245,-8.337795,-5.307809,-5.297401,-8.672199,1.462936,-1.621990,2.198056,4.704514,-3.061590,-2.746828,3.941725,0.026683,4.020788,9.589416,-3.581920,5.904520,-8.245301,4.047145,-8.198106,-4.389790,5.399247,3.801376,4.143490,9.736935,-3.635680,0.597222,-0.379029,-0.234609,6.506603,-8.024975,-8.985589,-2.552064,4.700601,8.886245,-5.759836,3.578712,3.143887,-5.362082,-9.106356,-2.781145,-6.338253,-6.399656,-8.114614,-9.448200,-0.037032,7.261847,-6.739246,4.660036,-8.774766,7.082199,9.429089,-2.779165,0.871915,6.401305,-7.131232,-0.336435,3.018778,8.618903,1.779581,7.184627,9.247000,-1.691550,3.798482,3.958289,6.202267,-0.569092,-1.310819,0.144571,0.541273,3.985645,-8.611236,-0.405122,-6.683386,2.422239,5.534951,0.092022,-7.965612,-0.716222,-5.715447,5.082737,-9.549672,-6.760277,-1.116985,-5.730209,-6.949647,-9.744445,9.082421,1.737999,-6.896221,-6.064051,7.339113,-3.935358,1.746859,7.413375,0.475284,1.933079,-4.461987,-3.508933,2.250334,5.270162,-7.929216,-6.743012,-5.161640,3.794993,1.722289,5.951943,2.189935,-6.238354,-9.645901,-2.600715,-8.668662,-6.531649,9.884810,0.916623,1.379151,9.748632,-1.329614,-2.433825,9.178813,-0.278253,4.399442,7.760614,4.094606,7.516219,-7.537222,6.097224,-3.890914,4.634759,-6.661868,-3.717462,9.332084,5.374818,-7.502382,1.449498,0.281143,-5.840720,4.024285,-3.571383,7.718631,-9.784197,1.014051,-7.076127,1.456384,-6.879085,-8.135836,-7.020630,-9.827357,-3.334053,7.188330,-2.200661,9.497950,7.775920,-6.070559,5.251310,5.770294,1.512955,-9.899519,-6.964575,-1.293233,7.780980,-3.801105,-9.350588,-6.534531,6.271042,-7.805180,-6.733559,-8.021043,-3.370236,0.397761,-0.600495,-5.688984,-1.074646,2.163118,-0.365560,6.505024,-9.870751,0.176199,-8.286175,2.217950,4.181387,6.168277,8.784515,5.565733,-4.010163,-1.530389,-5.932023,6.802184,2.092617,3.750693,-5.654348,7.968195,-3.360302,1.193533,-7.300451,-5.318662,8.585418,-6.004719,6.154169,-6.835625,-7.336966,-7.262308,9.856662,5.519528,-2.584654,7.155440,9.037704,-0.425801,7.693422,-5.476291,-9.893754,-9.725010,-4.764550,2.138057,-9.579234,-9.888512,-4.951196,0.551458,-6.898054,-2.444533], dtype = "float32")#candidate|2508|(1872,)|const|float32
var_2509 = relay.var("var_2509", dtype = "int32", shape = (288,))#candidate|2509|(288,)|var|int32
call_2506 = relay.TupleGetItem(func_2258_call(relay.reshape(const_2507.astype('float32'), [4, 8]), relay.reshape(const_2508.astype('float32'), [1872,]), relay.reshape(var_2509.astype('int32'), [72, 4]), relay.reshape(call_2480.astype('float64'), [400,]), relay.reshape(var_2483.astype('bool'), [96, 4]), ), 8)
call_2510 = relay.TupleGetItem(func_2265_call(relay.reshape(const_2507.astype('float32'), [4, 8]), relay.reshape(const_2508.astype('float32'), [1872,]), relay.reshape(var_2509.astype('int32'), [72, 4]), relay.reshape(call_2480.astype('float64'), [400,]), relay.reshape(var_2483.astype('bool'), [96, 4]), ), 8)
uop_2514 = relay.acos(uop_2463.astype('float32')) # shape=(3, 6, 15)
uop_2516 = relay.acos(uop_2465.astype('float32')) # shape=(3, 6, 15)
var_2517 = relay.var("var_2517", dtype = "float64", shape = (3, 6, 15))#candidate|2517|(3, 6, 15)|var|float64
bop_2518 = relay.multiply(uop_2463.astype('int64'), relay.reshape(var_2517.astype('int64'), relay.shape_of(uop_2463))) # shape=(3, 6, 15)
bop_2521 = relay.multiply(uop_2465.astype('int64'), relay.reshape(var_2517.astype('int64'), relay.shape_of(uop_2465))) # shape=(3, 6, 15)
bop_2523 = relay.greater_equal(uop_2514.astype('bool'), relay.reshape(var_2517.astype('bool'), relay.shape_of(uop_2514))) # shape=(3, 6, 15)
bop_2526 = relay.greater_equal(uop_2516.astype('bool'), relay.reshape(var_2517.astype('bool'), relay.shape_of(uop_2516))) # shape=(3, 6, 15)
var_2527 = relay.var("var_2527", dtype = "float32", shape = (3, 6, 15))#candidate|2527|(3, 6, 15)|var|float32
bop_2528 = relay.divide(uop_2514.astype('float32'), relay.reshape(var_2527.astype('float32'), relay.shape_of(uop_2514))) # shape=(3, 6, 15)
bop_2531 = relay.divide(uop_2516.astype('float32'), relay.reshape(var_2527.astype('float32'), relay.shape_of(uop_2516))) # shape=(3, 6, 15)
func_2432_call = mod.get_global_var('func_2432')
func_2433_call = mutated_mod.get_global_var('func_2433')
call_2532 = func_2432_call()
call_2533 = func_2432_call()
output = relay.Tuple([call_2480,const_2481,const_2482,var_2483,bop_2490,call_2506,const_2507,const_2508,var_2509,bop_2518,bop_2523,bop_2528,call_2532,])
output2 = relay.Tuple([call_2484,const_2481,const_2482,var_2483,bop_2493,call_2510,const_2507,const_2508,var_2509,bop_2521,bop_2526,bop_2531,call_2533,])
func_2535 = relay.Function([var_2483,var_2509,var_2517,var_2527,], output)
mod['func_2535'] = func_2535
mod = relay.transform.InferType()(mod)
mutated_mod['func_2535'] = func_2535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2535_call = mutated_mod.get_global_var('func_2535')
var_2537 = relay.var("var_2537", dtype = "bool", shape = (384,))#candidate|2537|(384,)|var|bool
var_2538 = relay.var("var_2538", dtype = "int32", shape = (288,))#candidate|2538|(288,)|var|int32
var_2539 = relay.var("var_2539", dtype = "float64", shape = (3, 6, 15))#candidate|2539|(3, 6, 15)|var|float64
var_2540 = relay.var("var_2540", dtype = "float32", shape = (3, 6, 15))#candidate|2540|(3, 6, 15)|var|float32
call_2536 = func_2535_call(var_2537,var_2538,var_2539,var_2540,)
output = call_2536
func_2541 = relay.Function([var_2537,var_2538,var_2539,var_2540,], output)
mutated_mod['func_2541'] = func_2541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2432_call = mod.get_global_var('func_2432')
func_2433_call = mutated_mod.get_global_var('func_2433')
call_2552 = func_2432_call()
call_2553 = func_2432_call()
func_559_call = mod.get_global_var('func_559')
func_563_call = mutated_mod.get_global_var('func_563')
const_2557 = relay.const([[True,True,True,False],[False,True,False,True],[False,True,True,False],[True,True,False,True],[True,True,False,True],[True,True,True,True]], dtype = "bool")#candidate|2557|(6, 4)|const|bool
const_2558 = relay.const([True,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,False,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True], dtype = "bool")#candidate|2558|(384,)|const|bool
var_2559 = relay.var("var_2559", dtype = "float64", shape = (208,))#candidate|2559|(208,)|var|float64
call_2556 = relay.TupleGetItem(func_559_call(relay.reshape(const_2557.astype('bool'), [4, 1, 6]), relay.reshape(const_2558.astype('bool'), [4, 16, 6]), relay.reshape(var_2559.astype('float64'), [208,]), ), 5)
call_2560 = relay.TupleGetItem(func_563_call(relay.reshape(const_2557.astype('bool'), [4, 1, 6]), relay.reshape(const_2558.astype('bool'), [4, 16, 6]), relay.reshape(var_2559.astype('float64'), [208,]), ), 5)
func_1315_call = mod.get_global_var('func_1315')
func_1321_call = mutated_mod.get_global_var('func_1321')
const_2565 = relay.const([-4.477048,-9.775865,-5.678425,5.928356,-8.043755,-5.988588,7.335567,-1.768883,8.747458,2.085323,6.933354,2.100852,-9.843547,2.013869,-4.230199,-2.924298,7.005530,-8.582535,-8.255133,2.467292,-8.962403,3.259570,-6.888314,-6.545333,8.755961,9.020104,4.803508,-1.632745,6.052541,7.064084,-7.263338,8.356536,7.307291,-3.495802,3.673051,-3.418468,0.754013,1.024608,4.693892,8.663225,7.827164,5.576128,6.471727,-5.282167,-6.743836,-0.553137,-8.804444,-0.584109,0.629391,9.558207,-4.460138,4.001594,-8.774443,-8.869719,-5.717202,-3.537550,-3.383108,-3.833525,7.702893,-7.058397,5.885040,-0.952714,-5.270428,9.244324,1.156861,-9.769637,-6.108895,4.095321,6.584629,3.493410,-0.842462,6.928603,3.102180,-2.693345,6.860523,-6.467083,-7.639605,-3.432125,-6.985567,-9.606547,-5.069656,2.251584,-6.704438,5.340983,-4.583539,2.839910,-9.487717,4.015137,1.479711,-8.370163,0.490086,8.177319,-0.231195,-7.145710,5.394462,-2.850811,-2.643331,-0.660473,2.869910,-5.632116,-1.233113,-0.121779,-5.035822,0.089249,7.046311,-8.027258,-4.414734,-6.875841,1.547132,6.411181,-3.662862,1.683758,-1.024715,5.080067,2.287611,4.649454,-0.100848,2.294348,-9.209658,-1.916683,-9.773431,-0.534857,-1.074540,0.391084,5.196962,-5.720786,1.887452,-4.066741,3.412566,4.679791,5.698484,5.003225,-1.409217,1.023487,1.285524,-1.691481,-5.256255,-3.410766,-2.919056,6.339262,5.259962,9.431890,9.291584,-5.927137,1.199855,3.716469,-8.843430,-0.200167,7.863906,5.713940,7.274944,7.773999,-6.503620,-8.273980,2.374489,8.244957,5.254673,2.760578,-4.883703,-9.833908,0.138450,1.887760,-3.410726,-2.408530,4.944946,-9.587036,-0.090210,-2.616818,2.791879,2.708110,-7.923867,1.444970,2.339443,-5.449602,-0.399963,1.309005,6.144286,-8.395273,4.926384,8.948030,-6.355380,1.496819,3.390034,-0.822515,7.179696,-2.880551,-7.180039,2.325168,-9.369883,3.084103,-0.651086,3.105162,5.941757,3.595030,-4.928533,9.427853,-3.403581,9.853654,4.700744,8.502495,7.399631,-3.417847,1.723577,4.916270,-9.881435,1.913371,-1.451737,-1.888190,-0.614238,-6.479437,-2.890499,6.905552,-5.343362,3.181318,-8.647132,-4.022010,-2.607840,4.768980,2.462076,0.219299,-6.241075,-5.793341,9.021246,-6.073884,9.129497], dtype = "float64")#candidate|2565|(225,)|const|float64
const_2566 = relay.const([[2.767424,-6.548356,-1.673608],[-8.441895,2.974952,-7.313880],[8.351927,9.609631,6.474661],[-2.842073,-3.524359,-8.677294],[-2.588146,-0.834489,-7.916698],[-1.309889,-4.078766,2.871359],[6.852657,-5.930331,9.359705],[6.282865,5.341587,6.416186],[-0.018457,9.717065,4.406791],[-2.428440,3.946721,-7.002845],[-8.678426,3.605413,-4.907921],[0.657150,-5.583012,-7.874087],[1.621465,6.114481,-0.919717],[3.767308,-4.185304,6.932572],[2.826259,6.163111,-3.066193],[-7.495405,-1.832350,0.731308],[-8.711873,-9.810017,7.585987],[4.510210,4.246054,5.097149],[5.804889,-8.575383,2.481087],[0.499816,3.952921,1.064353],[-9.964396,-7.986671,3.201839],[2.119700,3.836370,9.657049],[-1.984314,7.876676,9.040132],[2.871287,3.303295,-1.014359],[7.985247,6.436351,4.197345],[9.927196,-7.880297,-1.175860],[1.688910,-4.026250,-0.287837],[7.841497,-0.938133,-4.815170],[-9.978648,-0.559095,1.951785],[-5.876077,-9.821800,9.713692],[7.839952,3.840388,-2.711583],[6.388051,-7.460235,-3.357845],[5.926593,6.255142,-1.330875],[2.278951,-3.395428,9.928888],[0.673040,-9.066072,0.308929],[5.438704,-3.359757,1.406600],[-8.775514,5.969777,-0.957157],[0.766400,5.087190,4.070386],[-1.424976,-9.147402,-4.407973],[-6.297801,-3.956358,5.029188],[-8.704945,-0.092026,5.877172],[-0.955164,-1.735890,-6.866016],[8.818525,7.521633,4.638638],[0.892203,2.492848,-3.541838],[9.830206,9.610681,9.950614],[1.408113,9.280595,2.892846],[8.949125,3.591712,1.500270],[-8.813204,3.596558,2.982571],[-9.954557,6.265590,3.471225],[0.678576,-3.025440,-3.349341],[0.880242,-9.064030,4.220197],[-5.145743,6.059932,-7.690935],[8.190554,0.032635,-2.006897],[8.827219,8.719427,0.417261],[-4.275348,2.363518,1.338804],[4.738268,-2.930695,-1.256291],[0.257786,-3.447517,-0.846269],[8.514538,-6.179129,-8.754882],[3.784545,2.480909,-2.617383],[3.013843,-2.131027,-9.482025],[-7.797878,-8.014474,3.393133],[-4.614385,9.510288,9.991884],[-8.148677,-3.450269,3.468266],[4.883066,-8.236840,-0.642733],[2.436057,-2.470191,-0.611116],[-7.986828,-6.575084,6.543697],[4.558294,-1.336755,3.443798],[-7.912803,-3.301250,-8.946347],[9.095992,-3.864742,-8.351696],[0.766543,1.299565,2.078837],[-6.149955,-8.120114,8.439822],[-8.263588,-0.817336,0.874985],[-5.753402,8.762602,-1.076777],[-0.764356,8.379873,-9.907044],[0.926219,-3.485170,3.366939],[2.904975,3.662121,-8.225527],[0.308328,1.386452,9.002156],[1.338189,-2.453483,-6.610893],[-6.986569,-3.540089,5.384082],[-7.990016,-4.957349,5.819219],[-3.166851,9.087017,8.320469],[-6.222024,-1.310142,-5.098385],[9.767718,6.183797,-8.380692],[-7.714177,5.647729,-5.678851],[3.463024,1.412055,6.110012],[2.689965,0.857939,8.067049],[-6.240466,-5.548510,0.852679],[-2.042193,-1.177255,-7.862698],[4.720014,-1.125025,-0.126097],[-4.846156,1.710622,8.376403],[-4.609709,-3.418613,-4.769531],[-6.666654,-6.660313,6.907104],[3.673662,-3.286387,-5.559318],[-8.327973,5.306960,-4.659632],[-7.481270,-5.445804,-4.351990],[-6.947340,-2.515788,5.863644],[7.709534,-0.152865,-9.246880],[0.206080,9.013267,2.238783],[5.910494,-8.114928,-3.480439],[-8.781808,6.243922,-9.906331],[-7.998958,-2.968043,-3.625417],[4.196058,-3.088865,5.634657],[-1.503440,-6.316844,-0.176349],[9.253593,-6.941024,-8.511581],[-1.424574,3.795689,6.372742],[4.740613,-7.061070,4.043525],[1.955357,-3.297685,-9.074737],[-1.971953,1.491501,-9.778860],[8.351991,2.749981,6.505915],[-4.929716,-0.313768,0.253214],[-6.327589,7.711046,7.882622],[9.666585,-6.994435,-9.016536],[1.611556,6.936822,8.743198],[-8.769743,1.375900,-4.178787],[3.363022,-8.192033,-2.933561],[-2.474759,-1.437171,-7.582264],[-3.123887,0.058521,1.611117],[4.893117,-5.975604,5.297254],[-6.605052,-8.054143,0.442135],[9.583029,-7.713759,-1.124798],[4.508561,5.394094,8.892983],[6.238767,8.573262,-6.917936],[-9.073645,6.240574,-7.137180],[3.580371,-2.582210,-2.246540],[-2.966862,-4.807554,6.937319],[-5.558899,2.152645,-6.185828],[1.139719,-4.463948,-9.257296],[8.216073,-6.521058,-2.843889],[-6.523834,-1.442494,5.868452],[-4.303350,-0.243630,-8.204304],[-5.705506,-4.708849,-9.274477],[-4.937487,8.475377,-1.907912],[1.527362,-0.182423,-5.991109],[-9.043106,-9.892433,8.837964],[2.469363,-4.147712,3.686011],[6.554274,6.441557,8.104038],[-8.117301,4.044180,2.584306],[-0.839075,2.948813,-7.742538],[9.212789,-8.159550,6.303270],[8.346467,-4.267696,-5.787098],[6.789009,0.597963,-3.365674],[-6.834340,-5.689935,-7.977549],[-9.830299,-9.245078,7.955179],[7.073783,0.130407,8.329647],[-6.883664,7.561686,-3.516935],[-4.199699,4.862356,-4.252496],[-8.518718,-4.782242,-6.135606],[-8.126990,7.955224,-4.927654],[-4.921551,2.587827,-5.361698],[-3.984207,-2.768795,9.507055],[-5.579652,-8.688022,9.209952],[0.218802,9.811333,-9.437169],[-3.720003,-1.283245,2.246751],[-3.355235,6.591153,9.468341],[-1.707221,-5.117679,3.180821],[2.305317,7.929801,2.833433],[-3.448818,-2.341808,-7.658908],[9.289347,-7.449971,2.914126],[9.621421,4.771043,2.691642],[-5.402151,-6.487660,-9.160957],[-7.435710,0.156043,3.517056],[-6.478664,8.871318,-8.456452],[3.920923,-3.268847,0.866772],[3.217753,-9.176222,7.032888],[5.753875,2.394070,-5.736588],[6.559604,-1.782600,-1.097305],[9.036078,2.072215,-5.425864],[-1.049387,-5.085978,6.607566],[-2.942414,-3.224429,5.050551],[6.109084,0.853164,-7.008077],[-0.364419,-7.039538,6.284570],[8.198997,1.507721,8.021869],[-3.684269,0.360611,4.929286],[-1.779579,8.029817,-1.661953],[1.536961,4.131727,-4.712906],[-4.010397,6.912158,0.339130],[-2.113626,2.642343,-9.291485],[9.438071,-8.527585,3.942263],[6.697450,-0.840206,-0.345560],[1.084153,-9.722741,-2.542984],[-9.742687,9.720330,0.283627],[-6.931590,6.476032,4.326139],[5.059699,-9.084610,0.326625],[0.798350,-7.358909,0.453813],[-4.252751,-9.636467,2.421537],[7.243721,4.363061,7.195362],[-3.807385,-5.734454,3.299388],[2.291663,-1.652868,-7.045033],[5.224660,-5.192259,7.825227],[-6.620366,-4.358789,-5.299484],[6.854541,-5.653126,5.618224],[5.243038,0.298637,8.689455],[1.268812,8.094876,3.314694],[6.144248,8.015226,-8.893561],[5.092899,-1.673135,9.106293],[6.627484,4.914171,7.076276],[5.020122,-2.221163,9.181501],[3.622327,-6.365156,-3.852619],[-5.589086,-4.614967,-0.688873],[3.900076,1.965007,8.930868],[-9.939282,1.922627,-2.716503],[-3.017442,6.071843,0.439497],[4.906683,5.972225,0.078774],[5.821190,2.686701,-4.188558],[-7.260635,5.333670,2.477857],[-6.383486,6.368405,4.739083],[-0.256630,5.204768,-2.886304],[-2.990339,0.348669,3.505608],[-6.851211,-7.647754,-1.004772],[1.159406,-9.520693,-6.564281]], dtype = "float64")#candidate|2566|(210, 3)|const|float64
call_2564 = relay.TupleGetItem(func_1315_call(relay.reshape(var_2559.astype('float64'), [208, 1]), relay.reshape(const_2565.astype('float64'), [225,]), relay.reshape(const_2558.astype('bool'), [24, 16]), relay.reshape(const_2566.astype('float64'), [3, 14, 15]), ), 3)
call_2567 = relay.TupleGetItem(func_1321_call(relay.reshape(var_2559.astype('float64'), [208, 1]), relay.reshape(const_2565.astype('float64'), [225,]), relay.reshape(const_2558.astype('bool'), [24, 16]), relay.reshape(const_2566.astype('float64'), [3, 14, 15]), ), 3)
func_1315_call = mod.get_global_var('func_1315')
func_1321_call = mutated_mod.get_global_var('func_1321')
call_2574 = relay.TupleGetItem(func_1315_call(relay.reshape(var_2559.astype('float64'), [208, 1]), relay.reshape(const_2565.astype('float64'), [225,]), relay.reshape(const_2558.astype('bool'), [24, 16]), relay.reshape(const_2566.astype('float64'), [3, 14, 15]), ), 2)
call_2575 = relay.TupleGetItem(func_1321_call(relay.reshape(var_2559.astype('float64'), [208, 1]), relay.reshape(const_2565.astype('float64'), [225,]), relay.reshape(const_2558.astype('bool'), [24, 16]), relay.reshape(const_2566.astype('float64'), [3, 14, 15]), ), 2)
uop_2586 = relay.atan(const_2566.astype('float32')) # shape=(210, 3)
output = relay.Tuple([call_2552,call_2556,const_2557,const_2558,var_2559,call_2564,const_2565,call_2574,uop_2586,])
output2 = relay.Tuple([call_2553,call_2560,const_2557,const_2558,var_2559,call_2567,const_2565,call_2575,uop_2586,])
func_2588 = relay.Function([var_2559,], output)
mod['func_2588'] = func_2588
mod = relay.transform.InferType()(mod)
mutated_mod['func_2588'] = func_2588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2589 = relay.var("var_2589", dtype = "float64", shape = (208,))#candidate|2589|(208,)|var|float64
func_2588_call = mutated_mod.get_global_var('func_2588')
call_2590 = func_2588_call(var_2589)
output = call_2590
func_2591 = relay.Function([var_2589], output)
mutated_mod['func_2591'] = func_2591
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2668 = relay.var("var_2668", dtype = "uint32", shape = (4, 13, 5))#candidate|2668|(4, 13, 5)|var|uint32
var_2669 = relay.var("var_2669", dtype = "uint32", shape = (4, 13, 5))#candidate|2669|(4, 13, 5)|var|uint32
bop_2670 = relay.maximum(var_2668.astype('uint32'), relay.reshape(var_2669.astype('uint32'), relay.shape_of(var_2668))) # shape=(4, 13, 5)
var_2689 = relay.var("var_2689", dtype = "uint32", shape = (4, 13, 5))#candidate|2689|(4, 13, 5)|var|uint32
bop_2690 = relay.greater_equal(var_2668.astype('bool'), relay.reshape(var_2689.astype('bool'), relay.shape_of(var_2668))) # shape=(4, 13, 5)
func_1533_call = mod.get_global_var('func_1533')
func_1537_call = mutated_mod.get_global_var('func_1537')
const_2697 = relay.const([-1.214732,-8.233317,7.442315,-4.231382,1.435810,2.648469,-0.696055,3.387990,0.977051,-6.771811,-3.253260,8.035031,8.444618,7.249417,6.200850,-0.444271,-1.766780,8.879286,9.703110,-0.989924,-2.549115,6.616034,-8.234949,2.775096,5.023624,9.051099,9.590624,9.737820,8.283910,-4.695734,-0.041192,-9.673710,4.804983,-2.609800,6.144677,8.249455,-8.704386,-0.553704,-7.498122,-6.666345,8.655147,5.947530,0.351590,-5.554909,-7.731770,3.634456,5.609542,0.996134,-6.860900,0.521871,2.042961,2.797168,8.818242,-9.417904,-5.824598,-3.589212,-2.209322,-7.103498,-7.854977,-6.973499,3.287041,-5.992831,-0.269261,-7.269649,9.060597,-1.797180,-7.851074,1.342272,-6.810029,0.334456,-8.944507,-6.646165,-6.857846,-5.171605,5.656823,0.851925,6.409851,-0.936105,7.365966,-9.454754,-9.938084,6.979367,-7.305163,8.576495,4.944967,5.715312,-3.307144,-6.707183,1.844965,6.420897,-1.249618,8.953740,-6.067270,5.264371,-4.055933,0.014164,-3.966265,-3.852397,9.854396,4.046487,-5.547640,-3.495920,2.701794,6.305837,-5.563284,3.651912,2.873524,-6.597503,-8.366991,-1.708181,2.270815,-0.648680,-1.229804,-2.873481,-9.476456,-3.291601,6.494155,5.612671,-6.438716,6.738904,0.341654,1.650325,1.049595,1.976678,7.005125,2.150447,6.272100,-9.274705,-3.469608,9.448294,0.868804,5.053931,-7.569308,9.303867,-3.942103,4.412265,4.923888,-7.875445,-9.625913,7.420411,5.368168,-1.778565,-5.378406,5.298689,-4.911119,1.523908,-0.154341,-7.889309,9.601458,4.457479,-6.995282,8.006844,6.236203,-4.553447,4.062833,4.654845,-9.435034,9.409589,5.065267,1.203520,7.242069,4.523470,-9.396842,6.250074,1.322359,9.339856,0.713766,2.598757,-4.318420,6.057122,5.874482,7.349179,-3.055923,-9.360197,8.944810,8.585026,-6.416554,-9.383530,-8.387670,-0.214909,3.902732,2.434589,7.862121,6.389678,8.379354,7.538201,-4.246160,-4.932285,-1.353826,-6.072163,1.888324,-7.104039,-8.622966,-8.890594,-8.194910,-4.140962,-5.464004,0.402759,-6.885014,2.943778,4.247734,1.673342,1.867823,-7.518986,-0.840072,1.457280,1.883213,-8.428364,6.604351,-0.208772,4.945600,3.582527,2.041241,3.811608,9.867497,7.642416,-8.621779,-5.657154,-6.297426,0.987021,8.919247,-6.345841,-6.812121,-3.939009,9.314059,-3.090921,7.080665,-4.233580,-7.470214,8.362032,6.560616,-8.721327,2.214643,2.412196,7.819895,-3.028081,-2.216421,7.434125,1.928918,-8.957604,2.588331,-8.213551,-4.878590,5.357999,-6.882828,-6.069419,0.840711,4.733764,-1.126470,-0.539684,4.064981,-5.458079,-2.459146,6.444763,-0.891410,-3.527408,-1.972980,-3.943149,-2.255693,7.606234,-4.418800,-2.388511,-6.993846,-8.374838,-1.256862,-1.139684,-0.256358,9.649397,7.449821,-4.730422,-8.301717,0.340855,8.135636,3.588553,6.059370,3.858173,3.501443,3.896721,0.243402,-9.026876,-2.665598,-3.774147,4.824263,3.033812,-2.011942,-1.153271,3.788478,4.481093,-9.931681,-8.238849,3.770460,4.683746,1.616362,-5.043686,5.496507,-4.506096,9.313825,-0.389354,8.330999,7.156091,1.349286,-9.386306,4.145863,-6.868599,3.117106,0.170505,-5.763291,6.452925,7.706568,-6.154280,-2.610393,7.597688,6.213803,-2.784040,0.089780,-2.582043,-1.707345,2.167948,-5.423763,1.319588,-8.053423,-2.777242,9.304776,-8.604097,4.858592,9.760935,-8.451017,-3.740606,-7.276588,-0.678372,-4.012340,4.090517,7.287354,4.605581,-7.391707,0.303919,5.124897,7.424113,1.078924,-6.336747,-8.509424,-8.986795,-8.198920,9.364713,-2.592468,-7.575077,-4.927478,4.869366,1.931026,-2.824998,5.980974,-8.938393,9.249930,7.988900,-1.713676,-3.632699,-0.798325,9.389539,9.590910,8.828897,-6.929509,-2.373826,2.786176,-3.485588,-7.933102,-2.614551,0.799184,7.929190,-9.427427,3.190520,-9.473580,-0.820395,9.898311,6.500120,-3.897745,-5.978885,-1.118865,3.699374,-2.099328,-5.985930,-5.936168,-2.196031,-1.778311,8.307934,-6.981578,6.758010,-3.129102,0.067347,9.032451,-5.098570,-3.404968,-4.961394,9.842494,-3.482227,7.457980,6.020788,-6.157629,2.013428,3.446021,9.687538,-5.022356,-5.972412,-3.803470,-3.172263,-3.358241,7.617666,8.525235,5.548380,-3.102139,-0.622878,4.407656,6.165451,5.735673,-0.098939,2.099789,-3.181752,-8.250421,-0.329666,5.010914,-8.250521,9.458500,-7.669165,4.343067,-1.446720,8.396566,9.570816,-7.499114,-9.002749,-3.857064,-4.746369,6.765280,9.694623,4.112613,-7.015553,-7.211099,-2.275833,6.007940,-1.375142,-2.513511,-3.678864,7.133941,-8.149196,-8.547484,7.249559,4.140719,3.234308,-6.186357,-3.442985,-0.712123,-6.931905,9.968851,1.047725,5.801153,2.198126,-1.316107,-5.329110,-8.345638,3.513722,5.137268,1.500975,-7.893735,9.049161,5.750684,-2.275236,8.058505,-5.654880,4.036004,0.375379,3.125588,-0.022588,-1.859409,7.373912,-5.089426,4.982065,9.419736,-2.633413,2.385569,-6.010183,-1.552042,3.786043,-2.335023,-5.055539,0.626564,-4.463058,4.765550,-8.963084,7.134578,-9.180037,-8.791420,-9.240706,-1.321208,5.853480,-0.934318,-9.319534,-7.379633,-9.317428,5.109619,-6.721764,-6.965107,2.308504,3.464359,7.752258,5.879900,-2.113096,-3.742181,5.433723,-0.976989,-4.109526,-2.736035,2.808458,-0.345843,8.136029,-6.801212,-6.892808,3.694930,-1.091284,4.749955,9.852916,0.031321,-3.800484,-3.049221,-3.532123,-8.101461,-7.416481,9.853403,6.362132,4.629908,0.994586,-3.424410,2.724464,0.610470,6.338320,5.234267,9.809760,-0.727499,-8.311179,7.566756,0.691533,-7.000296,7.929795,9.581840,8.283423,8.018458,3.847084,3.937796,9.930817,-0.045089,0.570545,-1.608205,2.913856,0.313726,9.769425,-8.726573,-2.241110,-0.571622,2.979264,9.399307,6.988165,1.489784,-1.775701,3.460146,-0.477914,-9.479453,4.246943,-8.921521,-4.201716,2.686370,9.727862,-3.406907,-5.654918,6.469153,7.412471,-2.084428,3.886620,2.106253,-9.555183,-9.718954,-9.035829,2.861674,7.112200,-1.127942,3.158612,5.376220,-7.449061,-4.349988,3.555407,-9.529766,-6.772610,5.384200,-4.681260,-1.313410,7.919429,2.222424,4.375041,0.977408,2.834802,-9.432151,7.877444,3.537267,-4.560018,-3.035502,7.542414,-8.281140,-8.169198,9.595430,-3.925150,2.380438,-3.747018,8.037688,1.058799,-5.352490,6.691754,7.545253,4.856654,-8.691584,5.930467,3.610731,8.786215,-0.335807,3.160994,-9.679215,5.605732,4.600608,0.046771,-0.899926,6.532151,8.742413,2.513737,-0.527159,7.854036,-8.265054,3.237172,7.095198,4.744139,-3.329489,8.897297,-2.977392,5.754218,6.186008,7.897388,7.942799,-7.588754,8.647402,-2.122849,-0.317169,-6.033151,-7.367510,-0.817217,-7.936141,5.766552,-4.378858,9.305226,-3.909427,-2.660023,3.677306,2.915621,9.031579,6.753975,5.558374,-4.565681,4.034741,2.549110,-4.368092,6.911428,0.687745,-0.053597,-6.586265,0.518083,-5.572322,-5.909443,4.927690,-7.409605,3.111465,4.582062,0.083189,1.663154,-5.123385,-3.447989,-6.137883,3.761408,8.964830,-8.816966,6.918494,-5.537520,5.354202,-4.957363,-8.541200,3.491972,-3.052409,-4.242208,-3.411284,0.607554,-4.947716,-3.702036,3.241457,5.346308,9.931683,-8.963775,4.985873,-9.863040,0.167610,0.366548,6.831715,-3.994475,6.555261,-9.722256,-1.157515,-8.570415,7.469732,2.206593,-7.805428,6.859458,-1.412126,-9.328161,-1.694882,1.952833,8.774062,3.800271,1.184548,2.468461,9.038616,8.131557,0.809621,-1.530714,-6.740860,6.901860,-3.340110,-5.767890,6.649008,-3.965359,0.282526,4.061626,-3.190043,7.444744,-8.983034,-1.182308,-7.452828,7.946130,2.997481,6.257502,-7.656611,-4.408583,2.901196,2.745331,-9.921936,7.963254,4.963433,-4.256113,2.629897,-1.897061,-9.631177,8.814579,-1.030273,-6.292961,0.895762,7.555354,1.973255,-0.028002,-4.787046,1.495203,-3.145559,-5.960778,0.372883,4.920189,-6.869778,0.638680,8.860378,-6.470741,0.621680,2.240854,-0.138138,-4.528846,4.261228,-0.901230,1.400426,-0.336050,-0.009880,0.687916,0.977852,0.842711,-6.170327,8.109134,0.354873,7.420730,-5.942212,1.955910,1.793519,-3.862080,7.124406,-6.649671,-4.430317,-1.502768,3.851889,5.588594,-0.719484,9.110274,1.780799,-2.624109,-6.293222,4.934474,9.519615,6.618996,5.701005,9.111774,-8.582107,7.162748,-7.152247,-1.929968,7.016998,-1.343831,-8.486508,2.661979,-0.046111,-3.424707,4.937843,-5.022778,5.198832,-9.951598,5.552699,7.771071,3.978724,6.604212,-0.052781,-2.610085,9.320694,6.913791,-7.145367,7.131642,5.393363,0.215798,1.247931,8.297806,1.702850,0.429816,7.640494,-3.530078,2.617929,-8.428609,6.061406,-2.420088,2.477982,-1.978648,-8.362063,5.638948,-9.384639,-6.397582,-0.501792,-9.593499,0.398515,-2.764596,-6.122469,-5.161383,-0.445419,9.077435,8.576882,-8.484066,8.070182,-2.120763,-5.193994,1.868580,-5.706772,5.075175,1.149748,-7.856002,1.774350,4.752788,7.240407,-9.416374,-3.970732,-8.636186,0.758522,5.316719,5.513979,-8.618785,7.345406,-2.024170,4.240681,-6.268992,6.850193,-1.743617,0.110997,-1.812764,3.782030,0.924411,-9.081018,3.184948,-2.980546,4.581495,-3.857624,-5.610753,9.001777,0.627772,-7.308470,-6.706499,-6.650105,-0.711576,-0.346138,-6.559620,4.914673,-6.852762,4.195687,6.711147,-1.372963,-0.431136,-5.396517,-4.282461,2.256119,5.243277,9.718252,-0.610890,-9.193949,1.527776,0.361756,-3.886289,1.294262,8.925589,-8.300589,6.454711,1.794821,5.481306,-9.048143,7.182146,8.537564,5.339356,-8.801991,-8.414290,-6.654566,-8.517198,6.293052,1.998827,9.816464,-3.751632,1.137078,-6.088521,4.714554,3.194920,6.957094,7.068248,8.966618,7.483166,-8.795337,-8.541927,3.869873,1.607156,7.436111,-0.218491,2.896620,-0.425117,-9.085127,3.578740,-7.917219,1.445715,1.118619,-6.790559,8.820066,6.690780,0.825474,-0.452730,-2.468551,2.744587,-9.767736,-4.034093,-3.122553,8.069341,4.063539,-9.040696,8.702892,7.937149,7.205766,7.003067,1.157722,-0.392921,-8.895989,8.190965,-2.018090,-9.043699,-8.938820,-7.367098,7.709179,1.049423,-0.891415,-5.643259,0.964537,0.500122,2.162969,8.909132,4.558827,6.971835,4.669353,-1.561347,1.626732,-0.122595,2.434698,9.920760,-5.015643,4.328954,-7.393435,-2.239735,7.847174,-3.340034,-3.781726,5.309862,-3.778155,6.357200,3.705718,3.274488,-5.713771,7.862398,7.962413,-8.127905,5.141787,-1.097730,4.620021,-8.930014,-1.260453,5.578601,-3.746972,-8.813573,3.604520,-3.644815,9.512451,-9.958544,-5.911326,6.837749,-7.864417,3.094823,9.880597,0.313149,3.982685,3.493515,8.637913,-7.986690,6.195391,-2.665255,4.426261,-6.900675,-2.271790,-6.153299,-4.672326,-0.336419,-6.280919,-8.477287,-6.632378,-6.632917,4.560382,3.048559,4.594414,8.290101,0.888727,4.074344,-5.458782,3.975080,-3.353648,6.787137,-5.351563,9.174565,-3.989606,-5.839066,-0.582708,-5.880955,5.325451,-5.970929,8.357195,7.869394,6.789478,4.586788,-4.922384,-6.581000,3.146933,4.820780,-1.029924,-2.810731,8.351983,0.401245,7.414363,9.944746,4.652657,4.052756,1.309726,7.811225,-1.883680,2.409871,-7.425771,6.431705,8.820438,2.740605,-2.466745,-6.589084,-5.822225,1.331862,7.284377,-8.080724,-3.756055,-2.490706,5.944149,-1.083306,-6.811934,-4.615067,4.103105,-7.261497,9.310810,-7.915836,5.302422,7.434765,-2.730892,-1.509399,9.384552,8.280337,-7.980148,-2.454489,7.078801,3.941948,-4.810436,-7.945945,-3.743706,-1.674806,-2.238054,2.827456,-7.516499,-3.542471,9.046375,-3.164355,5.629234,-8.553235,2.423058,7.654884,7.960946,5.232864,6.790306,6.581021,-1.031285,1.837466,1.103061,1.665145,3.360108,-2.517767,-7.361952,3.297559,-2.440740,4.750073,-8.896666,8.479014,-5.752859,3.530807,-6.803772,8.504530,0.508743,-8.130544,1.991053,-8.808900,5.754482,0.283476,6.819321,2.777290,-2.192974,-1.630491,-8.461317,-0.838565,-9.875409,-9.863247,-6.835097,7.038017,-0.861685,-1.096631,9.633894,-6.789332,-3.376354,-8.012479,-9.672421,1.811112,6.964636,-2.442032,4.803145,-7.419868,-9.248776,2.631679,-3.650905,-7.867719,-6.582368,-4.390955,2.729118,-3.922206,-3.774300,-2.794390,-6.610236,9.676260,4.917940,5.310515,-2.858654,-3.983016,-2.110283,6.728488,-6.216416,5.820311,2.944993,1.449714,-3.247224,-6.786585,-2.481206,-7.012015,-8.131820,-1.957391,0.637335,6.328567,0.841244,-8.250090,8.047747,-8.054060,-8.552008,-5.438524,0.411285,-3.712965,4.662134,-9.584759,1.360608,-3.076654,-7.583463,9.830934,9.641041,3.218199,-4.939935,-7.585257,-4.919814,-8.031689,3.065797,-8.710162,-5.065797,-0.412523,2.668034,2.049146,8.854658,-8.857462,9.538907,1.292914,-7.184472,0.176274,1.596357,-5.729445,0.583532,-9.959247,0.490265,4.992350,5.614850,4.843245,2.341140,-7.127710,3.453566,-0.129819,-2.301240,9.131426,3.745756,-2.465842,-5.343240,-8.715222,7.994942,-7.760822,0.623741,-2.581618,-5.832669,5.480429,-9.852755,-4.138972,-9.713071,-5.840027,4.839929,-2.778239,5.791047,5.967418,6.285058,6.317714,-6.683163,-1.287200,9.657740,-3.206149,-0.385685,7.791667,9.441749,-2.318822,0.750736,0.591857,-3.425213,5.805527,-3.467549,-8.471100,-3.275897,-4.003593,7.089948,-5.644195,9.196503,-8.295030,-0.120022,-0.145466,-0.070175,5.723939,-9.257049,-8.178783,-7.854221,-4.378259,-7.305122,9.945463,-5.073739,9.207652,-0.024068,-1.544562,-3.323277,9.582354,4.279722,1.423268,9.752087,1.295057,0.527995,-4.976362,6.143992,-8.093577,3.452405,-1.704645,5.841190,-3.457219,0.238367,0.331167,4.017296,-5.703740,-3.958936,-9.165292,-2.813008,3.473834,3.458379,-8.950825,-1.023251,-9.874156,-7.695201,6.472913,-7.736175,0.996242,4.774299,-4.841406,1.878368,5.565997,-2.445040,6.697014,0.955408,-9.619315,1.592724,1.725392,0.949739,3.484910,-6.372381,2.723651,-7.951221,-6.575326,0.099373,1.680898,4.044658,-5.413519,-6.900012,-6.613455,7.611072,1.431708,1.152278,-6.656453,-5.367229,-0.778138,1.156775,-2.707278,-6.754914,5.340359,9.630532,6.026267,4.582585,-6.740846,0.645366,6.244003,8.214824,5.532331,4.368324,9.298970,-1.075836,-6.718170,0.663097,1.138872,1.233732,7.629618,1.673174,4.133241,-1.175069,6.767858,-2.048272,-0.809642,6.433234,8.144881,-9.087101,-1.491288,-0.016198,-5.795046,9.593658,-2.110693,-3.607865,1.738364,-7.875429,-3.498521,-6.108717,-7.442693,-0.604590,-8.555086,9.581907,-1.920185,-6.498272,-8.657294,1.811491,-1.141533,-0.622425,0.160395,-0.881984,8.835027,0.168583,-8.803070,6.932494,-8.213167,8.861214,7.602990,-4.662139,-2.903984,-7.581202,-3.705166,1.080790,4.997315,3.827254,-9.106420,2.921052,-6.121193,4.649063,6.474479,9.518504,-2.922101,-5.981646,6.804165,4.765075,-9.753942,-6.669167,6.420203,9.614086,-2.747435,4.628324,9.643863,-6.743571,0.767673,-6.123250,-7.112919,0.231358,-1.872743,-0.437115,-9.312681,-2.594911,8.250762,1.790027,-9.913478,4.306961,5.880038,-2.053314,-4.223371,-2.192136,-7.611507,-2.987209,6.936671,-9.783053,7.366570,2.986428,-6.426731,-6.875442,7.484283,3.721846,7.161270,-3.189181,4.983016,5.794026,0.613582,-4.132362,-1.554696,-8.171003,-3.237103,6.471324,1.896109,4.106139,-4.116318,5.378090,-5.629056,-4.227407,-5.196275,-1.477007,9.921994,4.963713,-8.125619,-7.795069,-4.331539,-9.032673,9.566577,-6.551768,-8.948719,2.847144,-6.758342,-2.442071,0.688731,-1.753879,4.253931,0.024692,-9.255278,6.848497,-7.706046,0.430702,-3.059624,0.905925,7.755732,-5.671663,-5.350230,2.009960,0.884632,9.453238,-6.577401,-0.988957,-8.462511,-3.750124,-5.355954,8.105313,4.741064,3.232007,-5.050612,-4.266407,-9.520073,-8.227117,-3.060685,3.702716,7.117306,-0.361376,-9.321473,-6.984637,-4.495607,5.118866,-0.933558,-0.934316,2.885658,-2.123693,-9.289887,-0.430644,0.516321,1.121509,-0.850726,2.851037,4.477207,8.952528,-4.573071,8.024132,-6.018978,7.933455,5.898984,-6.572134,6.655865,2.788985,4.057082,2.278646,-1.680433,-5.606160,4.083106,-0.204275,3.501264,7.761130,1.177535,1.931301,7.973696,2.267516,-2.779263,-0.070570,-5.880628,0.271898,5.300252,-3.553202,-8.938510,-7.669166,6.383484,-4.666599,-4.506995,-8.784631,-1.718340,7.072471,5.856995,6.617650,-3.332320,1.107782,5.177949,8.934858,3.850480,-7.536387,-6.710119,-8.810517,3.697758,5.080974,-0.473509,-0.003807,4.441633,-6.376232,-5.484333,-9.985381,2.373959,7.580251,-0.513544,7.780610,-0.906927,5.676220,-6.701971,-7.135122,1.810529,0.994577,-0.493037,-9.574242,5.148232,-7.781339,-1.829470,9.351518,-0.698735,-3.277180,7.587972,1.711814,9.476636,-5.626520,-4.237571,-1.659590,-2.728565,9.410434,7.512845,-3.495938,-1.724902,-9.491168,4.033451,3.055513,-0.271758,9.582205,7.852924,9.899784,5.057153,3.253721,9.798000,7.795052,5.779227,-3.941931,0.229668,-4.022752,8.702956,-7.123952,-0.701580,-5.265511,-6.539650,-4.484638,-9.754089,-2.953222,3.387958,3.813949,4.604795,7.676151,8.437135,5.876853,-4.953701,7.025502,-6.695962,6.278749,1.962444,6.717218,4.930239,4.063615,-4.196680,3.890157,5.226019,-3.169367,-2.271301,-7.832294,9.236479,-0.452803,8.683829,5.515375,9.428836,-5.446644,-2.820543,-0.639398,2.002429,-2.819540,-1.944199,6.717514,-6.441184,-6.328396,5.612191,1.597778,7.967684,7.278736,7.828801,-0.987785,3.273904,7.094647,1.113284,9.095299,9.643925,-7.260840,4.673982,-5.910040,6.465547,-3.961249,2.560966,9.001397,2.773638,5.837203,3.223996,-1.067869,-1.759921,-2.174329,8.827729,-5.625856,2.781130,-6.973280,-7.056104,9.767248,-8.821780,1.287994,9.437092,-2.032498,4.183679,0.680759,3.697031,3.875442,9.208638,2.887497,0.707711,4.856784,-5.109286,5.928721,-5.833067,-2.340008,8.447377,-5.639915,-2.044792,3.286296,-7.808629,-8.070760,-6.590767,0.140343,-1.292826,2.384394,-1.578056,-0.996208,-3.427182,-4.701629,-1.348587,6.759798,-9.839925,-3.631237,-6.546031,-8.654338,-1.041461,5.039953,-6.119735,-1.114012,4.936079,-7.211610,8.378897,0.053292,-0.328783,-0.897341,-2.098954,-5.105306,-5.022210,-3.289748,3.495121,0.098583,5.565296,-1.969097,-6.180916,-4.684426,-2.045841,4.266032,-6.125108,-9.276516,-7.368482,1.127289,-8.474448,6.866145,2.337164,-8.678104,-5.857845,-2.932524,-5.694626,7.720067,-4.537808,-7.502885,-0.133036,-9.227751,-7.356063,-7.038537,3.607296,-1.255663,4.190872,-8.363055,5.761436,9.673057,7.001840,3.131149,2.835245,-3.838280,2.413210,-6.861303,-9.800816,-0.827019,3.691120,-7.401292,-6.152379,8.758681,-3.901231,-2.245490,-2.698388,-1.395770,-9.078933,0.023431,-5.058618,5.243496,-8.036957,-2.559222,-3.982797,-7.172092,6.326724,-1.031547,8.466467,6.407480,-8.881668,0.655068,-9.831125,-2.456278,4.809095,-8.297661,3.889234,2.000031,7.939198,-6.717305,-9.710352,-8.671943,2.920175,-3.063263,-8.494974,3.750323,4.594228,0.361699,-6.051951,-6.031343,7.591885,2.206677,-3.452398,-6.034204,-1.168925,7.968559,4.736367,-0.471224,6.594381,6.933118,8.229508,-0.762551,5.360830,-8.418562,7.940858,-9.103889,8.208067,8.449670,-6.037481,4.899009,-9.543981,-6.320428,-2.146486,1.548020,6.875310], dtype = "float32")#candidate|2697|(1872,)|const|float32
const_2698 = relay.const([-3,3,-4,-5,7,9,2,-2,-10,-3,6,9,-4,-7,1,8,-10,-10,-6,-1,10,2,8,7,10,3,3,-1,-6,-5,10,-3,-6,5,9,-4,7,-1,9,-5,9,-4,9,-3,-4,4,-4,4,-9,4,8,6,-4,-2,-8,4,4,-2,-5,-8,3,-3,-8,-9,-8,4,2,1,9,-1,-8,-4,4,5,-3,6,-6,5,6,2,8,9,-8,-6,-2,5,1,-2,9,4,-2,-8,-1,-4,-10,2,4,7,-2,10,9,3,7,7,-5,-8,3,-5,2,3,8,7,7,-4,9,2,-1,10,-10,-6,9,-2,-1,-1,8,2,-1,8,4,-8,7,-3,-5,-8,1,2,9,4,-2,-4,1,6,8,-2,7,-7,10,-3,-10,-1,-5,3,-8,-6,4,-3,-8,8,5,8,10,6,-3,4,-8,-6,-2,8,8,10,-6,6,4,-9,6,2,-3,5,-5,-3,5,-7,8,7,-1,-7,-4,10,1,-8,7,10,-8,5,-5,8,10,7,1,6,-4,9,-8,-5,-8,-5,-3,-4,9,4,-10,3,8,-7,-7,2,-6,9,-10,4,-7,3,-3,1,-6,7,7,-3,-4,-3,1,-2,6,2,6,-6,-2,-5,5,8,-10,7,-5,-2,1,7,1,-1,-3,-7,-7,-5,1,6,5,9,-7,1,-7,10,-8,-1,8,-8,-5,3,-7,2,8,5,-10,-7,1,10,2,-7,6,-1,-10,-7,-3,6,1,-7,-6,10,-9,6], dtype = "int32")#candidate|2698|(288,)|const|int32
call_2696 = relay.TupleGetItem(func_1533_call(relay.reshape(const_2697.astype('float32'), [9, 13, 16]), relay.reshape(const_2697.astype('float32'), [9, 13, 16]), relay.reshape(const_2698.astype('int32'), [288,]), ), 6)
call_2699 = relay.TupleGetItem(func_1537_call(relay.reshape(const_2697.astype('float32'), [9, 13, 16]), relay.reshape(const_2697.astype('float32'), [9, 13, 16]), relay.reshape(const_2698.astype('int32'), [288,]), ), 6)
bop_2702 = relay.divide(var_2689.astype('float32'), relay.reshape(bop_2670.astype('float32'), relay.shape_of(var_2689))) # shape=(4, 13, 5)
func_559_call = mod.get_global_var('func_559')
func_563_call = mutated_mod.get_global_var('func_563')
var_2708 = relay.var("var_2708", dtype = "bool", shape = (24,))#candidate|2708|(24,)|var|bool
const_2709 = relay.const([False,False,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False], dtype = "bool")#candidate|2709|(384,)|const|bool
var_2710 = relay.var("var_2710", dtype = "float64", shape = (52, 4))#candidate|2710|(52, 4)|var|float64
call_2707 = relay.TupleGetItem(func_559_call(relay.reshape(var_2708.astype('bool'), [4, 1, 6]), relay.reshape(const_2709.astype('bool'), [4, 16, 6]), relay.reshape(var_2710.astype('float64'), [208,]), ), 4)
call_2711 = relay.TupleGetItem(func_563_call(relay.reshape(var_2708.astype('bool'), [4, 1, 6]), relay.reshape(const_2709.astype('bool'), [4, 16, 6]), relay.reshape(var_2710.astype('float64'), [208,]), ), 4)
bop_2713 = relay.bitwise_or(var_2710.astype('uint16'), relay.reshape(call_2707.astype('uint16'), relay.shape_of(var_2710))) # shape=(52, 4)
bop_2716 = relay.bitwise_or(var_2710.astype('uint16'), relay.reshape(call_2711.astype('uint16'), relay.shape_of(var_2710))) # shape=(52, 4)
uop_2717 = relay.acos(const_2698.astype('float64')) # shape=(288,)
output = relay.Tuple([bop_2690,call_2696,const_2697,bop_2702,var_2708,const_2709,bop_2713,uop_2717,])
output2 = relay.Tuple([bop_2690,call_2699,const_2697,bop_2702,var_2708,const_2709,bop_2716,uop_2717,])
func_2721 = relay.Function([var_2668,var_2669,var_2689,var_2708,var_2710,], output)
mod['func_2721'] = func_2721
mod = relay.transform.InferType()(mod)
var_2722 = relay.var("var_2722", dtype = "uint32", shape = (4, 13, 5))#candidate|2722|(4, 13, 5)|var|uint32
var_2723 = relay.var("var_2723", dtype = "uint32", shape = (4, 13, 5))#candidate|2723|(4, 13, 5)|var|uint32
var_2724 = relay.var("var_2724", dtype = "uint32", shape = (4, 13, 5))#candidate|2724|(4, 13, 5)|var|uint32
var_2725 = relay.var("var_2725", dtype = "bool", shape = (24,))#candidate|2725|(24,)|var|bool
var_2726 = relay.var("var_2726", dtype = "float64", shape = (52, 4))#candidate|2726|(52, 4)|var|float64
output = func_2721(var_2722,var_2723,var_2724,var_2725,var_2726,)
func_2727 = relay.Function([var_2722,var_2723,var_2724,var_2725,var_2726,], output)
mutated_mod['func_2727'] = func_2727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2432_call = mod.get_global_var('func_2432')
func_2433_call = mutated_mod.get_global_var('func_2433')
call_2729 = func_2432_call()
call_2730 = func_2432_call()
func_2535_call = mod.get_global_var('func_2535')
func_2541_call = mutated_mod.get_global_var('func_2541')
var_2732 = relay.var("var_2732", dtype = "bool", shape = (384,))#candidate|2732|(384,)|var|bool
const_2733 = relay.const([-4,-5,4,2,2,-9,-1,-9,8,6,6,1,-9,-9,4,2,-4,2,-2,1,-10,-3,3,-1,-1,-3,6,-8,-6,4,6,5,-2,9,-3,-8,-9,7,10,-5,4,9,-3,-7,-7,-8,-6,4,-3,-1,-1,1,-9,-6,-8,-1,10,-4,-8,-1,-3,-7,-3,10,4,-2,2,7,-4,10,5,-8,-3,7,5,-6,8,-9,6,4,-1,-5,2,4,-6,-9,8,-7,10,-4,-3,-3,-8,9,-4,-6,-1,-7,4,8,8,2,-5,-10,-2,-9,-7,-5,7,-10,8,5,6,10,-5,-1,-6,-2,-1,-5,7,9,6,-10,7,1,4,3,-8,-10,-1,-8,6,-7,10,-2,-4,2,5,3,2,7,10,7,-5,2,10,3,8,4,10,9,-1,5,5,-9,-2,4,-8,-1,-8,9,1,-5,-9,-10,-7,4,10,-3,5,-1,-8,-10,-5,-9,2,-2,-7,-3,-6,-7,10,2,-1,6,-8,-5,-1,3,4,1,-10,-8,-10,3,-3,-10,2,-4,10,8,-6,-4,-6,5,1,-5,-8,7,-3,3,-1,-9,-6,3,-3,-4,2,8,-9,9,10,10,-8,-6,-7,6,-4,10,-10,-8,4,3,-3,5,5,-1,-9,-5,-10,-7,-1,-7,-10,7,-8,2,-6,-7,6,-1,9,10,-7,-4,-7,5,7,-3,7,-6,2,6,-7,-8,-8,-5,-5,4,9,8,-10,-2,-5,4,4,6,2,-7,-8,1,6,-4,1,2,5,-6], dtype = "int32")#candidate|2733|(288,)|const|int32
call_2731 = relay.TupleGetItem(func_2535_call(relay.reshape(var_2732.astype('bool'), [384,]), relay.reshape(const_2733.astype('int32'), [288,]), relay.reshape(call_2729.astype('float64'), [3, 6, 15]), relay.reshape(call_2729.astype('float32'), [3, 6, 15]), ), 1)
call_2734 = relay.TupleGetItem(func_2541_call(relay.reshape(var_2732.astype('bool'), [384,]), relay.reshape(const_2733.astype('int32'), [288,]), relay.reshape(call_2729.astype('float64'), [3, 6, 15]), relay.reshape(call_2729.astype('float32'), [3, 6, 15]), ), 1)
var_2745 = relay.var("var_2745", dtype = "float64", shape = (891,))#candidate|2745|(891,)|var|float64
bop_2746 = relay.left_shift(call_2731.astype('uint16'), relay.reshape(var_2745.astype('uint16'), relay.shape_of(call_2731))) # shape=(891,)
bop_2749 = relay.left_shift(call_2734.astype('uint16'), relay.reshape(var_2745.astype('uint16'), relay.shape_of(call_2734))) # shape=(891,)
const_2755 = relay.const([3.520628,-6.688507,-9.722192,-2.214216,-0.692442,-6.487491,5.073347,8.454193,-4.542505,-7.405577,3.750476,6.572404,5.361808,-9.981233,-6.026013,3.836603,-2.287218,-6.720367,-9.098373,-7.405567,6.458413,-7.065948,8.962179,2.480390,1.651650,4.943327,8.158218,-5.242935,1.272030,-3.489157,-7.547729,7.217581,3.938078,-0.855059,8.202672,1.418939,6.707047,6.390888,9.556026,-8.501188,-5.761971,9.504854,-0.625045,-9.948748,6.759113,-2.725238,8.058172,-6.641718,8.245563,-7.093457,9.416833,8.765379,8.900769,2.296765,5.247471,-3.270521,-2.410206,8.122850,0.359915,-0.602261,2.239358,9.079649,-7.737577,9.071064,-6.438369,-9.632716,7.202157,-6.872096,3.976228,2.182223,-2.633056,-5.531059,-4.874089,1.436706,-0.688980,-3.206139,-3.992775,-8.440785,3.734853,2.549838,9.349888,5.473160,9.552050,-2.561372,-3.499644,-4.847585,1.199264,6.069892,-9.294612,6.907271,-7.921601,-3.150946,2.169654,2.696314,0.410497,-5.411834,1.703250,7.557554,-8.420343,1.759919,-9.379137,0.005162,-5.013434,0.557970,4.590334,1.620907,-4.680027,9.177698,-6.953533,-5.521713,7.792484,1.772135,-8.391700,3.358612,-0.812811,3.245166,-0.893942,-7.244000,0.097451,-5.739483,-3.295877,-6.305580,1.957487,4.009747,6.154023,3.916470,-8.833368,5.512782,-7.548783,4.365451,4.920729,5.088056,3.607900,-3.550159,9.577816,-7.899403,5.988608,-4.492878,-5.646880,-4.436043,2.267230,-8.994032,-0.650083,-3.241556,-9.031421,9.712581,8.637998,-7.549226,-6.525079,3.285007,7.999431,-1.646625,1.936994,2.143352,-8.827001,0.401306,-8.443928,5.009304,3.558573,1.847156,-4.421618,1.307875,3.609927,-5.821094,-3.692473,4.684015,1.707677,-6.712021,-4.041847,-3.071021,-9.486191,-9.433596,7.652863,2.569525,9.344161,1.705684,-4.476830,3.016847,-3.676049,7.765674,-6.151069,-5.788574,-7.253493,-6.056694,-7.562025,3.680399,-9.956656,2.704243,-3.856146,-4.890724,5.560160,9.246364,-7.854295,1.098829,-8.365183,9.351537,5.518757,7.071169,6.404374,-1.680543,-4.693114,-1.174712,5.469519,7.959209,-5.525048,-0.926517,4.719033,0.545816,-1.563014,-0.299135,-9.809748,0.171151,0.789402,5.211575,-5.396266,-4.412429,-5.626572,2.638759,5.816299,1.927977,-7.958068,4.141287,7.794907,9.740632,-0.333013,-8.925445,-4.090882,-2.909611,-9.295933,-3.076884,-8.697714,-9.127976,5.853326,-8.396466,-5.822170,-2.581958,7.985840,-1.115211,4.173964,9.250942,3.701969,-4.594601,2.685461,4.197477,-8.403631,5.222808,-9.625746,5.250256,2.889657,-2.558529,5.638748,6.257947,4.291380,3.024087,6.820336,-5.039227,7.536002,-3.091381,3.115297,-6.586997,7.743688,-6.069179,9.967747,3.595906,-7.803903,-1.064017,5.351701,-7.242958,3.485206,6.929287,-1.768828,0.461141,-2.837152,0.261991,6.612173,0.569746,8.602093,3.175674,-5.252727,0.693323,-5.581941,-9.820358,7.055418,-4.063755,6.135337,-9.034909,3.361990,8.411619,3.159710,-4.945302,-2.440787,-7.715237,6.934083,8.598223,-0.853337,-6.393280,-7.109059,-1.972743,-6.761064,7.569773,-4.932853,8.659984,8.652598,1.174910,1.501498,-6.665909,-8.467268,1.390773,-3.448423,9.693897,-4.451065,9.893501,-4.647522,-0.574562,2.805651,-2.121765,6.719290,2.181442,-7.379379,-6.807327,-0.615669,-9.103138,4.469403,7.154529,-0.873863,-6.771895,-3.724659,0.924558,-7.078521,1.663653,9.078413,4.839824,-3.479540,-9.466583,-9.781379,-3.407430,7.156550,0.514455,3.812938,-4.716275,0.613780,-2.606912,-9.202845,-7.177535,3.247220,-8.019069,-3.062162,-4.162762,5.621668,4.458822,6.583124,-6.450835,-4.214727,8.269544,-6.663917,7.981580,-5.411618,-2.553360,-7.327604,8.414892,-3.146773,-6.387882,-7.347749,1.007320,0.595831,3.133786,8.622999,5.623341,1.832423,1.860683,-6.557057,0.927918,-8.260684,-5.219835,-3.954974,-8.360698,9.820112,8.956262,5.865270,7.266939,-9.329111,5.020823,1.066905,6.424004,3.611423,-5.722671,-8.834080,0.163423,0.871039,6.656275,4.212904,6.219956,-1.526799,-1.489959,9.565583,6.527546,-3.083294,9.254171,6.311792,-7.261397,4.731574,4.325662,-9.743246,-4.138359,-0.361660,-7.764961,-3.344277,-3.932813,-1.895039,-9.325775,2.630177,4.302743,0.513152,5.947784,-2.705745,3.329344,-5.761513,1.432107,3.764530,4.811403,6.839793,-9.826408,9.440481,-7.330231,6.105931,5.675657,-7.108905,2.428025,-7.014219,3.273826,-1.411514,-7.043226,4.654809,-4.136745,-3.186071,-0.633897,4.757293,3.235126,1.644870,-7.064645,-3.290483,9.150833,4.560709,-2.453398,5.093742,-7.926196,6.183806,9.689311,-4.504753,5.143232,1.406414,-0.051220,-3.087483,5.012303,5.817812,5.984812,0.346375,0.699722,2.585291,-0.993906,2.791157,-5.248526,-0.766649,1.969414,1.316772,7.258824,-4.604884,9.722339,6.206877,-5.053761,9.846074,-7.065813,3.095254,7.412063,-8.222448,9.506693,-2.286491,-8.508009,6.701065,6.341434,-0.161874,8.481324,-8.449603,-6.789729,0.100456,-5.085269,-3.353649,-5.236755,-7.451136,-3.896445,3.311758,-3.349884,1.939173,-5.566335,-1.563182,-7.996576,-7.183657,1.381856,-6.407441,-8.630638,5.461444,-2.809027,-6.714897,0.946906,-8.160428,7.965730,9.389316,7.496067,-6.681345,-7.080751,1.093291,7.656368,-2.004466,-4.948636,-3.872581,8.206664,-9.742647,9.964392,-2.140256,1.632984,-2.829963,-2.894158,2.307554,0.205948,-9.243059,-9.206271,-6.264928,6.436475,7.851691,6.163931,5.709794,9.788197,6.234111,-3.311250,1.603224,-5.242985,-2.928261,9.830223,9.639994,8.929651,-7.606900,4.604326,6.876665,-0.681228,7.417928,2.227618,-7.260460,-6.878927,4.761355,5.691481,-6.081535,4.669948,-7.705415,-7.306754,3.774647,3.601624,-2.563555,-2.060054,-0.981640,-8.897604,-2.607919,-4.458327,-3.913589,-7.738508,1.999529,-1.198175,-6.658792,-4.285540,-6.821211,-8.541965,-0.618721,-1.464642,-7.977924,-1.619845,4.063933,-4.598581,-3.095254,-1.611176,1.350967,4.750193,-7.032423,6.841941,9.992543,1.248245,-8.344099,1.050464,-3.209901,5.190848,-5.610870,5.216977,-4.718649,2.711822,-2.703372,6.144859,6.742083,-4.998622,-5.229590,-7.722663,0.686813,-9.544456,8.435102,-9.176968,0.440057,-9.135816,3.298145,1.626914,-2.508460,0.127429,-2.404102,-6.611588,8.813275,3.919312,-7.734009,8.691775,3.150035,-5.741833,6.908205,-8.383608,-8.269539,-7.682211,-8.221163,-3.921318,-9.202427,1.145813,-8.397977,-1.042354,-5.269102,-9.605041,8.241493,-9.596297,3.547012,1.754179,3.780558,9.513000,8.715067,-4.990115,7.216477,-6.844439,-7.942161,-8.239820,3.497983,-8.723305,-8.181342,1.327139,-4.004296,-9.846523,-9.326328,-8.399253,-0.854666,3.684396,7.444868,7.039592,-5.104734,-7.248137,-7.390235,-2.731681,-4.217213,3.933376,6.195339,-5.198459,8.110232,6.277895,9.460472,6.063330,7.696748,9.681369,-6.567822,0.309510,-5.307957,3.846271,-9.305230,-4.506565,-7.858306,6.872888,-4.438774,7.988398,-6.967507,0.974397,-5.664455,4.678943,-0.015842,-2.160186,-2.909831,3.460709,-4.482211,5.752123,-4.225575,1.732757,1.841588,-4.192858,-7.629118,5.651118,-1.559387,-5.105397,-2.156022,-4.524294,-0.868969,1.203874,-7.806710,1.622296,-5.549489,7.412951,2.506555,0.166689,9.277557,-9.739586,-3.809329,2.333225,4.165805,3.525099,7.078526,-2.579677,7.475167,-4.550296,-6.124689,-7.568272,-3.489361,-7.334699,-7.121671,2.543462,3.758556,7.263117,7.099880,4.795861,1.279367,-2.254149,-3.107198,-5.764987,3.844321,-3.489778,5.623503,-8.794798,-0.313359,7.774694,-3.582919,0.472891,-7.210662,4.398284,9.646109,-9.152789,-0.029420,2.706788,0.750979,-2.758829,1.567793,9.343137,8.717352,-8.322366,-4.684489,-4.664748,-6.441808,-0.597745,-9.935983,2.916979,-7.862569,-0.264447,-6.383645,-4.918481,-8.159255,-2.417254,4.553305,-9.802079,7.843481,-5.451686,-6.581129,6.434870,-1.198564,1.176340,4.845897,-0.738915,8.182549,-8.879747,2.635830,9.665250,8.024772,1.852340,0.285439,3.023018,-1.159419,-6.872736,-8.549097,-4.992550,-5.173575,-7.294245,-6.464791,3.859492,5.290377,8.702451,-5.755602,-1.827504,1.409265,-0.473583,3.463578,9.922982,-4.452861,-3.072604,6.993564,8.390597,8.926711,-2.845829,6.803855,4.722191,1.865395,6.190425,4.667428,-0.319217,1.225285,-2.082282,-1.323783,-7.127591,7.967052,-0.799350,1.078185,-2.550653,0.079805,-8.324692,5.438750,1.953413,4.370668,-9.104053,9.543066,7.284794,-8.971028,3.761396,4.732839,6.559996,2.133777,-2.324950,4.618608,8.293314,3.569033,7.526003,5.544622,5.771757,7.598074,2.277999,-1.920156,2.390537,-9.807935,-7.653398,8.450509,7.669284,6.727449,6.808120,-9.796373,8.952492,2.161986,-4.975747,3.722377,9.947872,-5.202854,9.348411,2.508754,7.805255,-8.479656,9.570697,6.834729,-1.677710,-6.799373,7.804775,-7.772032,-1.417136,-2.900158,-9.316413,4.332050,-9.148120,-1.842039,-7.486488,2.274961,-7.465788,6.966173,3.938913,-0.988085,0.950792,8.744989,6.511889,0.443227,8.303943,7.007443,-9.768663,4.911404,-5.124441,-1.742897,4.440930,-1.967421,9.846274,-2.368351,-7.403924,-0.615368,7.845694,-9.618295], dtype = "float64")#candidate|2755|(891,)|const|float64
bop_2756 = relay.logical_xor(call_2731.astype('int32'), relay.reshape(const_2755.astype('int32'), relay.shape_of(call_2731))) # shape=(891,)
bop_2759 = relay.logical_xor(call_2734.astype('int32'), relay.reshape(const_2755.astype('int32'), relay.shape_of(call_2734))) # shape=(891,)
output = relay.Tuple([call_2729,var_2732,const_2733,bop_2746,bop_2756,])
output2 = relay.Tuple([call_2730,var_2732,const_2733,bop_2749,bop_2759,])
func_2768 = relay.Function([var_2732,var_2745,], output)
mod['func_2768'] = func_2768
mod = relay.transform.InferType()(mod)
var_2769 = relay.var("var_2769", dtype = "bool", shape = (384,))#candidate|2769|(384,)|var|bool
var_2770 = relay.var("var_2770", dtype = "float64", shape = (891,))#candidate|2770|(891,)|var|float64
output = func_2768(var_2769,var_2770,)
func_2771 = relay.Function([var_2769,var_2770,], output)
mutated_mod['func_2771'] = func_2771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2432_call = mod.get_global_var('func_2432')
func_2433_call = mutated_mod.get_global_var('func_2433')
call_2786 = func_2432_call()
call_2787 = func_2432_call()
uop_2805 = relay.sin(call_2786.astype('float32')) # shape=(3, 6, 15)
uop_2807 = relay.sin(call_2787.astype('float32')) # shape=(3, 6, 15)
uop_2812 = relay.atan(uop_2805.astype('float32')) # shape=(3, 6, 15)
uop_2814 = relay.atan(uop_2807.astype('float32')) # shape=(3, 6, 15)
output = relay.Tuple([uop_2812,])
output2 = relay.Tuple([uop_2814,])
func_2815 = relay.Function([], output)
mod['func_2815'] = func_2815
mod = relay.transform.InferType()(mod)
mutated_mod['func_2815'] = func_2815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mutated_mod.get_global_var('func_2815')
call_2816 = func_2815_call()
output = call_2816
func_2817 = relay.Function([], output)
mutated_mod['func_2817'] = func_2817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mod.get_global_var('func_2423')
func_2424_call = mutated_mod.get_global_var('func_2424')
call_2835 = func_2423_call()
call_2836 = func_2423_call()
var_2863 = relay.var("var_2863", dtype = "bool", shape = (3, 6, 15))#candidate|2863|(3, 6, 15)|var|bool
bop_2864 = relay.power(call_2835.astype('float64'), relay.reshape(var_2863.astype('float64'), relay.shape_of(call_2835))) # shape=(3, 6, 15)
bop_2867 = relay.power(call_2836.astype('float64'), relay.reshape(var_2863.astype('float64'), relay.shape_of(call_2836))) # shape=(3, 6, 15)
func_1422_call = mod.get_global_var('func_1422')
func_1426_call = mutated_mod.get_global_var('func_1426')
var_2870 = relay.var("var_2870", dtype = "float64", shape = (891,))#candidate|2870|(891,)|var|float64
var_2871 = relay.var("var_2871", dtype = "float64", shape = (400,))#candidate|2871|(400,)|var|float64
const_2872 = relay.const([True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True], dtype = "bool")#candidate|2872|(384,)|const|bool
call_2869 = relay.TupleGetItem(func_1422_call(relay.reshape(var_2870.astype('float64'), [11, 9, 9]), relay.reshape(var_2871.astype('float64'), [400,]), relay.reshape(const_2872.astype('bool'), [384,]), ), 1)
call_2873 = relay.TupleGetItem(func_1426_call(relay.reshape(var_2870.astype('float64'), [11, 9, 9]), relay.reshape(var_2871.astype('float64'), [400,]), relay.reshape(const_2872.astype('bool'), [384,]), ), 1)
const_2890 = relay.const([[[6.067573,0.868331,2.376122,-0.992069,5.809745,-1.283280,-6.519000,4.083109,-5.090097,-5.123921,1.205976,-9.902085,-2.670523,7.413534,-1.845376],[4.763866,0.452261,-2.433800,9.262688,6.531177,-0.021273,-3.465060,-2.726197,-1.723491,-4.028664,-6.101008,7.758979,9.809897,-4.835242,-0.016114],[-9.656450,-1.037662,3.337167,-3.887779,-5.421801,0.501623,5.341543,2.510116,4.963516,-6.467974,-4.211449,-0.421480,4.130129,-6.792162,-8.967894],[-5.499976,-6.991506,0.032629,1.359689,-7.435472,3.681270,3.501670,6.251632,-6.113456,-3.736050,-8.575840,-4.943038,-5.329223,9.252889,5.196222],[7.682386,-1.557779,-3.878115,3.788900,4.908833,4.253799,-1.914383,0.126107,7.883326,-2.361154,-9.411623,9.851496,5.369496,0.174298,-5.870570],[1.570105,-2.211981,3.013898,8.874933,1.436873,-1.296015,4.071422,6.355225,5.847854,-0.188111,-1.644147,-2.084475,7.197418,0.158421,-8.694337]],[[3.263039,6.928912,1.484435,4.237587,-7.821037,0.185641,1.691334,8.203726,7.076373,-6.078217,-2.222802,1.122183,-3.612153,6.048566,5.855862],[8.420893,3.345629,-3.671931,4.455587,0.368750,-3.660983,-2.510704,3.787687,-2.118430,-7.525000,-7.876910,7.898470,-0.426066,9.570932,1.725380],[6.944527,6.251310,-5.379371,-0.586618,1.157429,7.189467,-6.118770,-8.380244,5.190800,1.308318,0.464565,-7.102551,6.952133,-3.019534,-2.378108],[9.209041,-2.878030,-5.881821,-6.690866,-5.057810,-4.589379,-9.168894,3.352776,-2.791897,0.213284,2.096817,-2.527111,-7.511642,-8.768243,-3.730074],[-0.384486,-6.376493,-8.335019,6.278841,0.231238,1.623892,5.666012,8.566631,-2.740100,4.231595,6.069072,-6.986454,9.567991,3.813935,8.844032],[-0.845936,2.314796,-1.882952,-1.471589,-2.451828,5.164800,7.421951,1.875658,8.440246,8.648178,-5.153767,3.400523,-1.168116,1.836120,-8.065786]],[[7.117521,-0.757490,-4.233582,-9.272149,4.228586,-8.119809,-7.855813,6.028953,-4.533006,1.369411,-0.050610,-8.315613,-9.232015,-0.943965,-2.245273],[-2.886782,9.666548,-7.676486,6.873442,-9.138660,-1.531219,5.287968,1.495572,-7.821215,-2.730380,2.501216,1.068522,-2.287787,-3.292895,5.512174],[-2.758185,-9.157410,6.439924,8.997217,4.302939,8.047685,-7.545080,8.224866,9.053762,-0.424113,7.216175,-3.171378,2.811056,7.138881,4.955809],[3.518870,-1.326248,-7.508264,-7.209959,9.742426,5.332914,5.584662,5.004423,4.261219,0.014032,-0.768205,3.956700,7.549632,-9.466814,-8.457453],[-2.956891,0.445730,0.923348,-1.620353,5.636385,-1.749732,-5.980581,-0.502160,-1.923604,-6.231432,1.605797,-4.347051,-8.218367,-2.472914,-3.945806],[-0.298122,-0.399275,-2.603071,3.237311,3.436118,-1.295214,-7.426412,-8.953019,-8.265504,-6.535507,-2.493963,-1.382709,6.371273,-7.869660,1.789264]]], dtype = "float64")#candidate|2890|(3, 6, 15)|const|float64
bop_2891 = relay.not_equal(bop_2864.astype('bool'), relay.reshape(const_2890.astype('bool'), relay.shape_of(bop_2864))) # shape=(3, 6, 15)
bop_2894 = relay.not_equal(bop_2867.astype('bool'), relay.reshape(const_2890.astype('bool'), relay.shape_of(bop_2867))) # shape=(3, 6, 15)
bop_2907 = relay.add(const_2890.astype('uint64'), relay.reshape(bop_2891.astype('uint64'), relay.shape_of(const_2890))) # shape=(3, 6, 15)
bop_2910 = relay.add(const_2890.astype('uint64'), relay.reshape(bop_2894.astype('uint64'), relay.shape_of(const_2890))) # shape=(3, 6, 15)
var_2915 = relay.var("var_2915", dtype = "float64", shape = (400,))#candidate|2915|(400,)|var|float64
bop_2916 = relay.less(var_2871.astype('bool'), relay.reshape(var_2915.astype('bool'), relay.shape_of(var_2871))) # shape=(400,)
output = relay.Tuple([call_2869,var_2870,const_2872,bop_2907,bop_2916,])
output2 = relay.Tuple([call_2873,var_2870,const_2872,bop_2910,bop_2916,])
func_2921 = relay.Function([var_2863,var_2870,var_2871,var_2915,], output)
mod['func_2921'] = func_2921
mod = relay.transform.InferType()(mod)
mutated_mod['func_2921'] = func_2921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2921_call = mutated_mod.get_global_var('func_2921')
var_2923 = relay.var("var_2923", dtype = "bool", shape = (3, 6, 15))#candidate|2923|(3, 6, 15)|var|bool
var_2924 = relay.var("var_2924", dtype = "float64", shape = (891,))#candidate|2924|(891,)|var|float64
var_2925 = relay.var("var_2925", dtype = "float64", shape = (400,))#candidate|2925|(400,)|var|float64
var_2926 = relay.var("var_2926", dtype = "float64", shape = (400,))#candidate|2926|(400,)|var|float64
call_2922 = func_2921_call(var_2923,var_2924,var_2925,var_2926,)
output = call_2922
func_2927 = relay.Function([var_2923,var_2924,var_2925,var_2926,], output)
mutated_mod['func_2927'] = func_2927
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2988 = relay.var("var_2988", dtype = "float64", shape = (6, 11, 2))#candidate|2988|(6, 11, 2)|var|float64
const_2989 = relay.const([[[2.614863,-7.828849],[-0.824004,8.963281],[-6.039495,-7.498100],[8.630839,5.600663],[-4.537509,9.034800],[-2.274271,-0.103261],[6.208947,8.483126],[-7.442361,-3.543686],[-8.987987,6.109660],[-4.937461,7.449003],[0.111372,4.174792]],[[-7.690310,2.691663],[3.110709,3.666847],[-5.142232,2.535611],[-0.160492,7.330088],[1.313923,-3.977914],[2.833000,-8.586583],[2.620100,-9.242956],[3.965330,8.802764],[-7.947837,6.607839],[5.262038,8.251006],[-0.480846,6.688700]],[[5.088575,-1.017347],[-4.210959,8.997243],[-7.249729,3.547874],[0.752839,-2.693401],[1.554078,-6.341838],[-7.287938,7.502028],[-1.103866,3.351651],[8.302078,5.673312],[-0.988964,0.704502],[3.593336,-2.542347],[-9.938922,1.990414]],[[6.719606,2.436754],[7.212281,9.586836],[3.156893,-7.937481],[7.917594,-2.752676],[-0.786056,-1.980791],[8.605045,-0.775134],[-6.111528,1.652927],[-0.306608,-1.815534],[-3.028411,3.140942],[-4.835563,-5.794578],[5.079605,8.208957]],[[-1.770636,-0.607947],[-6.304063,0.951019],[-6.871480,-4.359252],[-7.216981,-9.642508],[-2.085141,6.868415],[-2.113675,-9.139491],[9.567409,-0.678505],[2.567935,5.739739],[4.223450,2.981636],[-9.550472,-7.437823],[-0.045462,8.841758]],[[-0.783232,0.674393],[4.994558,8.024472],[4.202006,-8.526710],[-3.726349,-4.054971],[-4.593088,-1.811926],[8.139515,1.100025],[-5.063494,-0.377941],[-7.532995,-7.074263],[3.498800,8.616383],[-3.598145,-1.428006],[4.612796,-5.031992]]], dtype = "float64")#candidate|2989|(6, 11, 2)|const|float64
bop_2990 = relay.mod(var_2988.astype('float64'), relay.reshape(const_2989.astype('float64'), relay.shape_of(var_2988))) # shape=(6, 11, 2)
uop_2993 = relay.acosh(const_2989.astype('float32')) # shape=(6, 11, 2)
output = relay.Tuple([bop_2990,uop_2993,])
output2 = relay.Tuple([bop_2990,uop_2993,])
func_2996 = relay.Function([var_2988,], output)
mod['func_2996'] = func_2996
mod = relay.transform.InferType()(mod)
mutated_mod['func_2996'] = func_2996
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2997 = relay.var("var_2997", dtype = "float64", shape = (6, 11, 2))#candidate|2997|(6, 11, 2)|var|float64
func_2996_call = mutated_mod.get_global_var('func_2996')
call_2998 = func_2996_call(var_2997)
output = call_2998
func_2999 = relay.Function([var_2997], output)
mutated_mod['func_2999'] = func_2999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2432_call = mod.get_global_var('func_2432')
func_2433_call = mutated_mod.get_global_var('func_2433')
call_3021 = func_2432_call()
call_3022 = func_2432_call()
output = call_3021
output2 = call_3022
func_3027 = relay.Function([], output)
mod['func_3027'] = func_3027
mod = relay.transform.InferType()(mod)
mutated_mod['func_3027'] = func_3027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3027_call = mutated_mod.get_global_var('func_3027')
call_3028 = func_3027_call()
output = call_3028
func_3029 = relay.Function([], output)
mutated_mod['func_3029'] = func_3029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_3069 = relay.TupleGetItem(func_2815_call(), 0)
call_3070 = relay.TupleGetItem(func_2817_call(), 0)
output = relay.Tuple([call_3069,])
output2 = relay.Tuple([call_3070,])
func_3076 = relay.Function([], output)
mod['func_3076'] = func_3076
mod = relay.transform.InferType()(mod)
mutated_mod['func_3076'] = func_3076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3076_call = mutated_mod.get_global_var('func_3076')
call_3077 = func_3076_call()
output = call_3077
func_3078 = relay.Function([], output)
mutated_mod['func_3078'] = func_3078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3027_call = mod.get_global_var('func_3027')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_3090 = func_3027_call()
call_3091 = func_3027_call()
output = relay.Tuple([call_3090,])
output2 = relay.Tuple([call_3091,])
func_3103 = relay.Function([], output)
mod['func_3103'] = func_3103
mod = relay.transform.InferType()(mod)
output = func_3103()
func_3104 = relay.Function([], output)
mutated_mod['func_3104'] = func_3104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3114 = relay.var("var_3114", dtype = "int32", shape = (4, 13, 8))#candidate|3114|(4, 13, 8)|var|int32
var_3115 = relay.var("var_3115", dtype = "int32", shape = (4, 13, 8))#candidate|3115|(4, 13, 8)|var|int32
bop_3116 = relay.left_shift(var_3114.astype('int32'), relay.reshape(var_3115.astype('int32'), relay.shape_of(var_3114))) # shape=(4, 13, 8)
func_1108_call = mod.get_global_var('func_1108')
func_1111_call = mutated_mod.get_global_var('func_1111')
var_3120 = relay.var("var_3120", dtype = "float64", shape = (400,))#candidate|3120|(400,)|var|float64
call_3119 = func_1108_call(relay.reshape(var_3120.astype('float64'), [10, 8, 5]))
call_3121 = func_1108_call(relay.reshape(var_3120.astype('float64'), [10, 8, 5]))
func_2423_call = mod.get_global_var('func_2423')
func_2424_call = mutated_mod.get_global_var('func_2424')
call_3132 = func_2423_call()
call_3133 = func_2423_call()
func_821_call = mod.get_global_var('func_821')
func_824_call = mutated_mod.get_global_var('func_824')
const_3135 = relay.const([[-8.787556,-0.609591,-4.217217,-6.594494,-4.321558,-7.310726,-9.384338,-6.372885,-2.545841,-5.386993,6.722848,-8.596358,4.494126,-5.008501,-4.083506,1.970837,7.376141,4.084211,2.266578,0.250621,-1.505635,-4.847788,8.211105,-0.537198,2.962929,-1.740840,0.230370,-1.519178,-0.396209,-2.348155,-7.865490,2.281517,4.510534,8.771486,-6.023658,9.264654,-6.543872,8.880142,-2.548356,7.426087,3.050694,-2.151573,3.386941,0.257965,-9.987585,-7.779520,-7.238584,-0.130891,-3.186856,-5.736633,-6.723799,1.678895,8.339964,-4.355484,-8.879141,-7.170381,9.326646,3.614350,1.982425,-1.619610,-4.961062,-7.657373,-7.100483,0.023980,-2.754523,-9.529393,0.336635,9.675728,-7.576373,-1.120171,-2.473225,-6.165294,-3.247393,-9.429462,7.854318,5.856022,0.902875,-4.900422,-4.604724,7.070829,6.333214,2.538688,5.221958,-6.497398,-9.883689,1.150648,5.275674,5.305557,8.110935,6.441265,-6.560515,-6.447550,-8.745798,-7.259061,-8.804157,1.486573,2.169647,-7.026988,4.003242,-6.194882,-5.276307,-2.543520,-7.418397,5.975005,5.386859,-6.262400,9.969929,-9.201535,9.422630,-4.928900,-0.027411,9.123506,-0.088529,-6.903526,-1.548485,2.205527,-2.728975,-3.735340,5.006546,-4.368386,-0.325495,3.487845,-1.888414,6.187121,-8.853872,8.184420,9.440012,-9.544683,6.779539,-5.051538,2.065712,-4.022098,3.114603,-8.397884,-8.207335,-9.162504,6.526170,-7.247300,8.215946,0.740104,7.627068,-2.765077,-2.931325,-6.966798,6.185581,9.084721,-5.847163,9.833625,7.368654,9.303047,-6.838666,-3.074921,8.161974,2.389649,3.745322,-6.210638,-8.931166,5.934518,9.380227,-2.460625,-3.347547,0.895337,5.711247,1.350005,8.835438,-7.421588,-5.912185,5.852774,4.507091,-7.031045,-7.251495,9.420780,4.378451,6.326842,-6.229920,3.076119,4.637941,7.333531,0.365839,4.056468,3.603125,1.015640,3.745342,8.841088,0.377889,4.028447,-0.919425,-5.694617,6.376869,-1.142188,9.752197,1.980800,3.876199,9.570035,9.172166,2.991948,-2.435885,-6.596616,5.219410,-4.711699,3.708483,-6.408566,-5.868054,8.644797,-5.164183,4.213613,4.683376,9.999875,-1.653288,-3.758911,6.170069,-1.308938,-4.193670,5.999846,5.628320,-8.317196,8.040804,-6.849427,-6.352471,-9.202238,-1.274550,-0.304211,-4.390724,-6.175038,8.056312]], dtype = "float64")#candidate|3135|(1, 225)|const|float64
var_3136 = relay.var("var_3136", dtype = "bool", shape = (384,))#candidate|3136|(384,)|var|bool
call_3134 = relay.TupleGetItem(func_821_call(relay.reshape(const_3135.astype('float64'), [15, 3, 5]), relay.reshape(var_3136.astype('bool'), [384,]), ), 3)
call_3137 = relay.TupleGetItem(func_824_call(relay.reshape(const_3135.astype('float64'), [15, 3, 5]), relay.reshape(var_3136.astype('bool'), [384,]), ), 3)
bop_3142 = relay.floor_mod(var_3114.astype('float32'), relay.reshape(bop_3116.astype('float32'), relay.shape_of(var_3114))) # shape=(4, 13, 8)
output = relay.Tuple([call_3119,var_3120,call_3132,call_3134,const_3135,var_3136,bop_3142,])
output2 = relay.Tuple([call_3121,var_3120,call_3133,call_3137,const_3135,var_3136,bop_3142,])
func_3156 = relay.Function([var_3114,var_3115,var_3120,var_3136,], output)
mod['func_3156'] = func_3156
mod = relay.transform.InferType()(mod)
var_3157 = relay.var("var_3157", dtype = "int32", shape = (4, 13, 8))#candidate|3157|(4, 13, 8)|var|int32
var_3158 = relay.var("var_3158", dtype = "int32", shape = (4, 13, 8))#candidate|3158|(4, 13, 8)|var|int32
var_3159 = relay.var("var_3159", dtype = "float64", shape = (400,))#candidate|3159|(400,)|var|float64
var_3160 = relay.var("var_3160", dtype = "bool", shape = (384,))#candidate|3160|(384,)|var|bool
output = func_3156(var_3157,var_3158,var_3159,var_3160,)
func_3161 = relay.Function([var_3157,var_3158,var_3159,var_3160,], output)
mutated_mod['func_3161'] = func_3161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3076_call = mod.get_global_var('func_3076')
func_3078_call = mutated_mod.get_global_var('func_3078')
call_3163 = relay.TupleGetItem(func_3076_call(), 0)
call_3164 = relay.TupleGetItem(func_3078_call(), 0)
func_2768_call = mod.get_global_var('func_2768')
func_2771_call = mutated_mod.get_global_var('func_2771')
var_3171 = relay.var("var_3171", dtype = "bool", shape = (384,))#candidate|3171|(384,)|var|bool
const_3172 = relay.const([-8.130994,-7.992407,-4.160177,8.059921,-3.263645,-8.307186,-6.101889,-5.173549,5.183647,2.253903,-3.127955,-6.215860,4.716637,7.149634,-3.596288,-8.568498,-8.600333,6.577180,3.818088,-5.860826,7.198856,5.077567,5.665740,3.380612,3.634434,3.497600,-6.925496,-3.005935,-1.896489,-7.261856,-5.066496,4.927648,7.505746,2.067390,-4.108500,-0.848473,-7.911609,2.040038,0.197614,-9.336631,1.641409,3.311470,9.828854,0.187438,6.990740,-4.573949,-7.803483,-2.256315,4.546442,8.574804,2.829559,0.076340,5.487338,9.612784,5.627339,4.507924,-6.356506,-7.123740,-8.949914,9.201611,-6.409941,5.222011,8.579837,-7.826055,0.190738,-0.085420,-2.502451,-3.067174,-6.070896,-0.902488,8.845958,-4.753028,-1.680186,9.533196,-5.172688,0.058414,0.338508,-7.637334,-2.679863,5.670795,-5.650088,6.965552,3.002252,-6.646513,7.142594,7.385320,-8.888000,-2.595924,-5.373919,4.617476,-5.571868,8.762177,3.341390,4.816057,8.817165,6.677366,-1.246448,-8.833291,-3.246480,-5.594945,0.086356,-1.178667,6.631723,0.222813,-7.132598,8.686493,9.409055,-8.028226,-6.091217,-8.259903,-5.437417,1.678417,-5.204035,-0.960390,-2.722003,3.060657,-1.598050,5.253254,-5.113369,-4.770885,6.508742,-3.257159,-1.442101,9.019890,-3.762490,-4.309222,2.153863,4.747440,3.106154,-5.997775,-9.593177,-9.286151,0.967329,2.418427,-7.640784,-9.905684,2.338903,-8.005612,-3.915554,-8.005694,6.458949,3.322066,-8.613304,2.302224,1.981212,0.896587,1.386916,-3.055006,7.826004,-4.525109,2.360992,3.653870,0.489015,3.343111,2.933414,-4.666259,-4.869670,3.657793,2.627318,3.424358,-4.121377,-7.885804,-0.251798,-8.020002,-4.421745,8.745140,6.174495,-0.467484,-4.908958,-9.783867,2.104537,-4.733452,2.812953,-8.271479,-3.046799,9.475400,-2.929958,-8.267672,-0.853964,-3.002947,-2.896882,4.980722,-9.729597,-6.581885,7.980560,-5.331115,-2.801578,-3.649148,-5.260632,-2.472213,-4.383507,0.620886,7.869390,7.448828,-6.275905,9.075588,1.061874,1.375508,-1.610479,-8.343165,-1.965045,5.442467,-2.452783,-4.506203,-0.133915,5.300015,-9.767897,-9.306207,2.659536,-6.454387,8.993330,-8.180891,-6.533229,3.276862,9.370654,-9.745508,-1.544783,-5.484287,5.681041,-0.816358,3.021674,9.724148,-3.979511,-3.928625,3.799303,-7.772442,-6.432520,-9.687025,-1.212503,1.957773,3.982189,0.698444,6.620660,-9.016790,0.292360,9.553644,8.599605,-5.265193,-7.190099,0.936365,3.397751,-8.458014,-6.754984,-3.560656,-8.563975,-6.439927,4.732317,-7.037126,-9.279988,-8.477463,9.219924,-2.599442,-6.639545,-8.460126,0.815976,-9.416796,6.212243,-8.438657,0.192389,-4.626503,7.626960,-1.641203,3.850410,1.746891,4.349282,2.354903,1.126636,2.251656,-2.965021,-7.452166,2.171771,2.361464,-0.132631,-2.859161,-1.253515,3.652931,-7.242805,6.022920,-9.039994,6.197177,-2.790857,-7.856076,-8.642874,9.323733,-2.315736,6.069182,-2.649109,-2.296028,-3.707832,1.807758,-0.914071,-5.183819,-7.449711,-5.691209,9.728201,-8.397487,-4.125640,8.484141,6.443087,3.678698,5.064171,9.262626,6.039739,-8.624391,7.233741,8.333584,-5.020390,-3.523386,1.975489,-1.971102,-6.906940,-5.577388,5.434726,0.645899,-6.436919,-5.513383,4.332842,2.580223,-5.257054,7.779054,8.048894,7.048208,-4.651597,-0.436409,-6.733182,-1.293294,-3.822949,0.149976,7.770021,-7.662845,8.399255,5.089274,-4.949574,-4.083375,-1.512494,-7.324007,-5.899788,8.607033,0.373028,-5.357572,-6.040675,-6.161986,3.331542,0.934944,1.204034,-1.570649,-7.147048,7.800158,-6.745555,5.600459,9.143037,0.952193,2.662034,9.077112,-9.732881,-3.969829,-7.515108,8.651563,-5.831607,-9.063791,-9.122139,6.160558,-3.596971,-8.175145,-1.309801,7.006337,4.048286,3.393428,-5.558504,-7.383487,-4.738994,0.814773,3.035741,-7.670820,9.488446,7.303839,0.461528,3.950336,-9.297028,-8.051849,7.222092,-7.094823,-7.830393,-6.610004,-3.718446,-8.712526,9.484384,-9.345714,-4.485321,0.694860,9.846299,-3.342434,1.249814,1.218945,5.670360,-8.066350,4.168368,3.552640,-6.057816,-5.983008,-4.218495,3.363103,9.886703,5.601139,-3.009870,8.461958,9.548503,-1.048015,2.118377,-9.335280,9.552970,-9.388850,-4.440417,9.219142,1.619737,1.984941,-6.225702,7.906659,-4.472155,0.752461,9.145031,8.515434,-7.359510,6.006004,0.087474,-8.833487,-7.329555,2.669194,6.035954,9.560127,5.040414,-3.101456,7.820919,7.338770,-3.462020,-8.049236,0.600208,2.312316,4.381788,-4.799951,-0.394827,-8.476052,2.039105,6.013222,-4.010210,3.353924,-6.184464,4.701294,6.640107,1.543250,0.966718,-6.851640,1.330930,2.290604,-7.419710,7.410882,-4.903736,-3.862081,-1.928297,-5.465894,-2.576648,-5.674503,-0.008222,0.159525,-9.331671,1.250924,-7.622610,-3.830002,9.206783,1.651824,1.088504,6.561989,-9.877320,9.269734,0.596931,4.254595,4.826999,-4.872040,2.823945,-4.159550,8.894607,7.508405,0.554479,0.737082,4.563439,-2.899030,-0.446697,9.334445,0.168685,0.792487,-5.068359,8.928864,-3.422867,3.344862,4.422923,9.121365,-1.986470,-1.619648,-8.553559,-1.914836,-0.874790,7.613732,-8.520959,4.514497,2.099642,6.335223,6.225569,-8.129453,-7.204054,6.465448,7.328209,-4.592824,-1.466564,0.165628,4.052127,-4.533074,-2.743193,-7.099381,-6.603132,9.237688,-5.977218,-4.136701,9.640498,3.621837,-7.284496,1.557282,6.871859,8.177008,-7.978988,-2.579835,7.619351,-2.969528,-1.425508,-7.708003,-2.369969,0.977213,-2.264498,0.982270,-3.703975,-0.455347,9.075399,-3.607506,4.256749,-3.237175,-0.536668,3.688886,-0.681042,5.088186,-7.137888,4.800197,8.832861,7.349847,-3.523468,3.173757,6.271735,-8.997854,0.131390,5.353961,-7.216597,7.323741,0.560508,-4.431244,-4.843621,-1.572633,-9.998537,6.688292,-7.693266,7.495707,0.213669,4.223597,-2.465034,-8.508717,-8.031565,1.188882,4.328776,5.875763,1.087625,-7.148867,-8.871022,4.301830,9.492440,-2.554433,2.991788,-9.643607,6.169124,-9.285632,9.478339,8.477371,-1.706899,9.484629,3.487664,-0.827308,-2.281867,-0.734102,-6.562221,3.111975,2.530246,2.760801,-6.774833,6.236866,-2.621153,0.816954,-7.075669,7.983110,1.221998,0.772936,-8.801629,-9.424552,-6.998706,0.359497,-1.685502,-8.857754,-6.298696,-2.668427,-1.505410,-7.307484,0.908948,-5.621180,3.477312,1.905292,-8.257861,6.707377,-7.456372,-9.384800,8.244441,8.715105,-5.939628,3.023610,-2.791900,8.648212,8.693713,9.943645,-5.273253,4.259037,7.063665,-6.214139,3.935898,-7.499483,1.322073,-1.648804,-6.574074,-4.175771,-0.014444,-3.091474,-3.693947,9.047191,2.565309,-9.639586,-0.694778,2.212270,-4.799574,-8.304622,-6.063031,-3.118023,5.426746,-6.532456,-0.469174,-9.156178,-5.522726,7.797066,1.894574,-7.533028,7.692735,-5.018658,-6.574807,-2.180535,0.682632,-7.494852,6.829373,-6.004960,-5.480194,6.680778,5.010355,9.124749,-0.558066,-1.069083,3.236619,-1.353980,-9.125208,-9.751890,9.454491,4.151746,6.268327,-0.125508,-2.177954,7.650134,1.964752,-2.097707,0.814340,-9.333780,-5.301536,2.091624,1.101078,6.001514,-6.996409,4.715146,-0.502206,-5.004760,-7.555801,-1.265643,0.082557,1.924384,-9.167321,-3.816978,8.657428,1.555533,8.784942,5.906843,2.199217,-0.946490,4.154803,8.924523,4.068836,4.556896,-1.796891,-4.770069,-8.670838,-2.918522,6.095939,-1.997166,3.063657,5.894028,-6.944370,7.344398,2.695501,0.463989,7.485963,-0.441427,-2.845922,4.558352,9.352514,1.068476,8.914739,4.232018,-2.635815,-9.013669,9.545885,-3.466215,-6.477821,6.021475,-0.891891,-2.147742,2.385899,-3.610236,6.426670,-9.231908,0.668260,-6.225778,7.221144,-8.743850,6.308482,6.298920,-9.282679,-2.968784,-7.525434,-6.314876,-6.163269,-0.363816,4.679552,5.628872,-2.152853,6.703581,4.650623,0.870092,2.430016,-9.343242,-3.779524,-3.619130,-2.125873,4.904636,-6.596095,4.066728,6.816648,9.846014,-9.360082,5.321755,-2.320682,-2.593529,-4.606992,4.812908,6.825676,-8.303480,9.990824,-5.552385,7.455973,-0.687836,3.029487,-9.935983,-3.499519,9.794517,-8.370340,0.826937,-8.700864,7.129288,3.563825,-9.540010,-8.201621,-6.998784,6.370167,8.212718,4.435339,7.458584,6.151226,4.007567,1.946730,-0.067393,0.227178,-3.418344,-3.235632,-6.731176,-5.742725,-5.655457,1.670025,8.818655,-0.848520,1.885515,-4.787947,-5.752213,-0.210468,0.925460,2.476761,2.816383,-1.958870,-0.839752,2.858378,-7.277897,4.019081,7.424115,-4.663132,-5.586477,2.566954,-7.613984,-9.318892,-1.086529,-5.361649,-7.719417,4.714029,-5.318089,2.907935,-8.007003,2.312927,8.893153,-9.829479,5.964842,4.409693,1.921319,9.517905,-2.486680,-8.804951,-7.089934,9.089951,-0.193594,-6.705275,-6.171326,2.059999,0.158815,5.536282,-0.787566,5.173781,-0.531371,1.039877,3.990208,2.698081,-0.734108,-9.765544,-6.545562,0.522676,7.059951,6.936711,3.169563,-1.618124,4.548561,6.244486,2.635996,6.648692,9.812146,0.023898,6.153602,5.648853,1.933978,-7.928697,1.750773,-7.029103,-3.479301,-6.699199,6.631664,-5.992424,-7.449255,-9.096654,-0.156921,-2.476978], dtype = "float64")#candidate|3172|(891,)|const|float64
call_3170 = relay.TupleGetItem(func_2768_call(relay.reshape(var_3171.astype('bool'), [384,]), relay.reshape(const_3172.astype('float64'), [891,]), ), 1)
call_3173 = relay.TupleGetItem(func_2771_call(relay.reshape(var_3171.astype('bool'), [384,]), relay.reshape(const_3172.astype('float64'), [891,]), ), 1)
func_2721_call = mod.get_global_var('func_2721')
func_2727_call = mutated_mod.get_global_var('func_2727')
var_3178 = relay.var("var_3178", dtype = "uint32", shape = (260,))#candidate|3178|(260,)|var|uint32
var_3179 = relay.var("var_3179", dtype = "bool", shape = (24,))#candidate|3179|(24,)|var|bool
var_3180 = relay.var("var_3180", dtype = "float64", shape = (208,))#candidate|3180|(208,)|var|float64
call_3177 = relay.TupleGetItem(func_2721_call(relay.reshape(var_3178.astype('uint32'), [4, 13, 5]), relay.reshape(var_3178.astype('uint32'), [4, 13, 5]), relay.reshape(var_3178.astype('uint32'), [4, 13, 5]), relay.reshape(var_3179.astype('bool'), [24,]), relay.reshape(var_3180.astype('float64'), [52, 4]), ), 3)
call_3181 = relay.TupleGetItem(func_2727_call(relay.reshape(var_3178.astype('uint32'), [4, 13, 5]), relay.reshape(var_3178.astype('uint32'), [4, 13, 5]), relay.reshape(var_3178.astype('uint32'), [4, 13, 5]), relay.reshape(var_3179.astype('bool'), [24,]), relay.reshape(var_3180.astype('float64'), [52, 4]), ), 3)
output = relay.Tuple([call_3163,call_3170,var_3171,const_3172,call_3177,var_3178,var_3179,var_3180,])
output2 = relay.Tuple([call_3164,call_3173,var_3171,const_3172,call_3181,var_3178,var_3179,var_3180,])
func_3189 = relay.Function([var_3171,var_3178,var_3179,var_3180,], output)
mod['func_3189'] = func_3189
mod = relay.transform.InferType()(mod)
var_3190 = relay.var("var_3190", dtype = "bool", shape = (384,))#candidate|3190|(384,)|var|bool
var_3191 = relay.var("var_3191", dtype = "uint32", shape = (260,))#candidate|3191|(260,)|var|uint32
var_3192 = relay.var("var_3192", dtype = "bool", shape = (24,))#candidate|3192|(24,)|var|bool
var_3193 = relay.var("var_3193", dtype = "float64", shape = (208,))#candidate|3193|(208,)|var|float64
output = func_3189(var_3190,var_3191,var_3192,var_3193,)
func_3194 = relay.Function([var_3190,var_3191,var_3192,var_3193,], output)
mutated_mod['func_3194'] = func_3194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3103_call = mod.get_global_var('func_3103')
func_3104_call = mutated_mod.get_global_var('func_3104')
call_3251 = relay.TupleGetItem(func_3103_call(), 0)
call_3252 = relay.TupleGetItem(func_3104_call(), 0)
func_1315_call = mod.get_global_var('func_1315')
func_1321_call = mutated_mod.get_global_var('func_1321')
const_3258 = relay.const([[-9.302594,-6.027397],[9.823826,7.710609],[-9.410586,-3.634936],[-4.598209,9.404324],[-1.746504,1.493043],[-7.448950,-1.108919],[-5.520616,3.303707],[-8.993507,-8.145417],[-9.127455,8.679542],[9.998733,7.574011],[6.468456,-7.222265],[-5.885763,0.696343],[8.345535,-7.868732],[5.152187,-7.491067],[-0.996445,-6.664621],[-0.038387,5.174051],[7.668930,4.755972],[4.825652,7.461747],[-6.674826,6.862481],[2.877102,7.470003],[6.612973,-1.061240],[4.629566,-0.127346],[-8.241585,-3.776485],[6.550282,5.000909],[-8.492113,3.850153],[-4.420554,0.399691],[1.013396,6.073731],[5.172617,9.584830],[-1.342715,8.481744],[-5.999039,6.122729],[0.253347,8.846935],[-9.556390,9.912727],[9.083324,-2.893619],[3.323493,-2.990804],[-0.506728,-1.130651],[8.674099,1.843447],[4.055405,4.992028],[-6.723104,2.314507],[-2.102702,2.651888],[0.275718,-7.024841],[8.482341,-3.914159],[-6.717629,0.217105],[-6.687186,-2.626061],[8.974403,3.774097],[-4.204122,-2.640825],[-5.228062,-6.119519],[0.974585,7.436715],[1.593996,9.047503],[-1.461453,7.064436],[0.184937,-7.106332],[-3.688744,6.911803],[-9.539124,1.698186],[8.810886,5.257019],[6.189691,-9.721844],[9.355253,6.741741],[5.149691,-3.316871],[7.831150,-1.211537],[-6.884413,-7.587114],[4.818725,7.522259],[9.492526,7.972566],[-9.429024,-3.354643],[-5.538139,-9.050539],[-8.433868,-4.767433],[2.754818,7.640458],[6.364868,0.238347],[-7.557424,-9.060699],[1.202429,3.386346],[-8.160230,1.094969],[-5.142953,-4.170011],[-8.115271,-4.046187],[2.032951,6.346072],[5.671409,1.318095],[-5.714261,5.226776],[-1.460012,6.770392],[7.749484,-0.978057],[3.445673,-5.514622],[2.022810,-9.484071],[-2.439975,-9.174795],[-2.347368,-6.852607],[4.151110,-8.480667],[-0.656468,-5.197022],[7.869322,-6.255260],[8.576520,7.242067],[-1.883818,-0.272976],[-0.500825,0.948187],[4.983276,-7.492735],[0.988888,-7.952786],[-1.718601,7.204307],[-6.169353,-1.794448],[2.839774,-5.040401],[8.401190,3.157624],[1.213693,-8.134378],[-9.806400,-4.978185],[7.018829,8.662628],[1.501113,6.235760],[-3.486769,-1.084999],[9.119738,1.146525],[1.153320,8.802531],[1.364478,-8.669208],[-7.615343,-6.033495],[7.886660,-8.652839],[-2.332543,3.450217],[7.607973,5.161735],[1.149814,-2.597472]], dtype = "float64")#candidate|3258|(104, 2)|const|float64
var_3259 = relay.var("var_3259", dtype = "float64", shape = (225,))#candidate|3259|(225,)|var|float64
const_3260 = relay.const([False,True,True,False,False,True,False,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,False,False,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,False,True,False,False], dtype = "bool")#candidate|3260|(384,)|const|bool
var_3261 = relay.var("var_3261", dtype = "float64", shape = (630,))#candidate|3261|(630,)|var|float64
call_3257 = relay.TupleGetItem(func_1315_call(relay.reshape(const_3258.astype('float64'), [208, 1]), relay.reshape(var_3259.astype('float64'), [225,]), relay.reshape(const_3260.astype('bool'), [24, 16]), relay.reshape(var_3261.astype('float64'), [3, 14, 15]), ), 3)
call_3262 = relay.TupleGetItem(func_1321_call(relay.reshape(const_3258.astype('float64'), [208, 1]), relay.reshape(var_3259.astype('float64'), [225,]), relay.reshape(const_3260.astype('bool'), [24, 16]), relay.reshape(var_3261.astype('float64'), [3, 14, 15]), ), 3)
output = relay.Tuple([call_3251,call_3257,const_3258,var_3259,const_3260,var_3261,])
output2 = relay.Tuple([call_3252,call_3262,const_3258,var_3259,const_3260,var_3261,])
func_3266 = relay.Function([var_3259,var_3261,], output)
mod['func_3266'] = func_3266
mod = relay.transform.InferType()(mod)
mutated_mod['func_3266'] = func_3266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3266_call = mutated_mod.get_global_var('func_3266')
var_3268 = relay.var("var_3268", dtype = "float64", shape = (225,))#candidate|3268|(225,)|var|float64
var_3269 = relay.var("var_3269", dtype = "float64", shape = (630,))#candidate|3269|(630,)|var|float64
call_3267 = func_3266_call(var_3268,var_3269,)
output = call_3267
func_3270 = relay.Function([var_3268,var_3269,], output)
mutated_mod['func_3270'] = func_3270
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3285 = relay.var("var_3285", dtype = "float64", shape = (4, 2, 2))#candidate|3285|(4, 2, 2)|var|float64
uop_3286 = relay.atanh(var_3285.astype('float64')) # shape=(4, 2, 2)
uop_3290 = relay.asin(var_3285.astype('float64')) # shape=(4, 2, 2)
output = relay.Tuple([uop_3286,uop_3290,])
output2 = relay.Tuple([uop_3286,uop_3290,])
func_3309 = relay.Function([var_3285,], output)
mod['func_3309'] = func_3309
mod = relay.transform.InferType()(mod)
var_3310 = relay.var("var_3310", dtype = "float64", shape = (4, 2, 2))#candidate|3310|(4, 2, 2)|var|float64
output = func_3309(var_3310)
func_3311 = relay.Function([var_3310], output)
mutated_mod['func_3311'] = func_3311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_3322 = relay.TupleGetItem(func_2815_call(), 0)
call_3323 = relay.TupleGetItem(func_2817_call(), 0)
output = relay.Tuple([call_3322,])
output2 = relay.Tuple([call_3323,])
func_3332 = relay.Function([], output)
mod['func_3332'] = func_3332
mod = relay.transform.InferType()(mod)
mutated_mod['func_3332'] = func_3332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3332_call = mutated_mod.get_global_var('func_3332')
call_3333 = func_3332_call()
output = call_3333
func_3334 = relay.Function([], output)
mutated_mod['func_3334'] = func_3334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2432_call = mod.get_global_var('func_2432')
func_2433_call = mutated_mod.get_global_var('func_2433')
call_3431 = func_2432_call()
call_3432 = func_2432_call()
uop_3434 = relay.atanh(call_3431.astype('float64')) # shape=(3, 6, 15)
uop_3436 = relay.atanh(call_3432.astype('float64')) # shape=(3, 6, 15)
var_3441 = relay.var("var_3441", dtype = "bool", shape = (3, 6, 15))#candidate|3441|(3, 6, 15)|var|bool
bop_3442 = relay.subtract(call_3431.astype('float32'), relay.reshape(var_3441.astype('float32'), relay.shape_of(call_3431))) # shape=(3, 6, 15)
bop_3445 = relay.subtract(call_3432.astype('float32'), relay.reshape(var_3441.astype('float32'), relay.shape_of(call_3432))) # shape=(3, 6, 15)
output = relay.Tuple([uop_3434,bop_3442,])
output2 = relay.Tuple([uop_3436,bop_3445,])
func_3448 = relay.Function([var_3441,], output)
mod['func_3448'] = func_3448
mod = relay.transform.InferType()(mod)
var_3449 = relay.var("var_3449", dtype = "bool", shape = (3, 6, 15))#candidate|3449|(3, 6, 15)|var|bool
output = func_3448(var_3449)
func_3450 = relay.Function([var_3449], output)
mutated_mod['func_3450'] = func_3450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3027_call = mod.get_global_var('func_3027')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_3462 = func_3027_call()
call_3463 = func_3027_call()
uop_3467 = relay.rsqrt(call_3462.astype('float32')) # shape=(3, 6, 15)
uop_3469 = relay.rsqrt(call_3463.astype('float32')) # shape=(3, 6, 15)
uop_3471 = relay.sigmoid(uop_3467.astype('float32')) # shape=(3, 6, 15)
uop_3473 = relay.sigmoid(uop_3469.astype('float32')) # shape=(3, 6, 15)
var_3483 = relay.var("var_3483", dtype = "float32", shape = (3, 6, 15))#candidate|3483|(3, 6, 15)|var|float32
bop_3484 = relay.greater(uop_3471.astype('bool'), relay.reshape(var_3483.astype('bool'), relay.shape_of(uop_3471))) # shape=(3, 6, 15)
bop_3487 = relay.greater(uop_3473.astype('bool'), relay.reshape(var_3483.astype('bool'), relay.shape_of(uop_3473))) # shape=(3, 6, 15)
output = relay.Tuple([bop_3484,])
output2 = relay.Tuple([bop_3487,])
func_3509 = relay.Function([var_3483,], output)
mod['func_3509'] = func_3509
mod = relay.transform.InferType()(mod)
mutated_mod['func_3509'] = func_3509
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3510 = relay.var("var_3510", dtype = "float32", shape = (3, 6, 15))#candidate|3510|(3, 6, 15)|var|float32
func_3509_call = mutated_mod.get_global_var('func_3509')
call_3511 = func_3509_call(var_3510)
output = call_3511
func_3512 = relay.Function([var_3510], output)
mutated_mod['func_3512'] = func_3512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_3562 = relay.TupleGetItem(func_2815_call(), 0)
call_3563 = relay.TupleGetItem(func_2817_call(), 0)
uop_3564 = relay.asin(call_3562.astype('float32')) # shape=(3, 6, 15)
uop_3566 = relay.asin(call_3563.astype('float32')) # shape=(3, 6, 15)
func_3027_call = mod.get_global_var('func_3027')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_3582 = func_3027_call()
call_3583 = func_3027_call()
output = relay.Tuple([uop_3564,call_3582,])
output2 = relay.Tuple([uop_3566,call_3583,])
func_3587 = relay.Function([], output)
mod['func_3587'] = func_3587
mod = relay.transform.InferType()(mod)
output = func_3587()
func_3588 = relay.Function([], output)
mutated_mod['func_3588'] = func_3588
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3600 = relay.const([[[-6.508716,3.834281,2.196628,-6.645983,-2.114659,-8.850533,9.085889,-7.411922,1.657061,-2.352388]],[[-5.936335,-4.388732,-0.568287,-2.162597,-8.252508,-8.861412,4.510845,-5.813941,9.896112,-4.758029]],[[9.006930,9.945366,6.114535,-7.246892,-5.792084,-9.005538,4.693894,0.487764,9.206697,5.800049]],[[3.915755,-6.740971,0.233280,9.891804,6.462434,5.502136,-5.816134,3.159464,-2.390880,-4.878234]],[[-8.617507,0.155488,-5.419002,-3.848586,-4.324375,1.561486,3.634358,-0.047467,-9.735941,6.922442]]], dtype = "float32")#candidate|3600|(5, 1, 10)|const|float32
uop_3601 = relay.acos(const_3600.astype('float32')) # shape=(5, 1, 10)
bop_3609 = relay.floor_divide(uop_3601.astype('float32'), relay.reshape(const_3600.astype('float32'), relay.shape_of(uop_3601))) # shape=(5, 1, 10)
func_1422_call = mod.get_global_var('func_1422')
func_1426_call = mutated_mod.get_global_var('func_1426')
var_3614 = relay.var("var_3614", dtype = "float64", shape = (3, 297))#candidate|3614|(3, 297)|var|float64
const_3615 = relay.const([0.674004,-3.623478,6.829266,-8.694619,0.311195,-1.265708,6.359992,-9.002373,3.995309,2.566117,7.147290,-5.755547,3.201678,0.617787,-3.660209,5.212755,-5.197661,6.452385,3.520490,1.553414,3.304559,8.550905,3.251177,2.513359,-3.553382,0.644893,-7.231060,-8.864030,-8.585001,6.445554,1.841254,-5.167513,-4.723233,0.343293,1.662438,-6.221629,8.104751,-1.911687,2.771340,9.045117,-7.697522,-2.189544,-5.946214,7.210089,-2.173252,1.190914,5.433309,2.679063,2.123373,-4.857139,3.577755,6.430472,-8.746941,5.388880,-2.052140,-3.542657,3.822770,9.144180,6.777733,0.175419,3.357011,4.051036,-3.676748,1.980857,4.275692,8.685439,-0.789364,8.623282,-9.555609,9.484203,2.370157,8.868648,-1.933172,-8.472882,3.107490,5.557055,-7.483939,-7.372920,6.292478,-1.261894,0.766701,-7.293290,7.054805,-4.076856,-7.409711,-1.315786,5.212637,7.139461,-9.709155,1.846821,5.441695,6.122628,9.935689,-2.737974,6.853387,-4.983926,-4.972654,-9.237240,-0.401047,0.117227,-1.443162,1.775121,-9.826589,6.172692,-3.838501,-7.886532,9.512958,-9.407319,3.573752,-1.213417,2.976498,9.423039,7.925037,1.584922,9.316544,-9.667847,-9.463341,5.539401,-7.139110,-2.868563,-9.399502,-1.454719,-5.449529,-5.930979,-7.983287,-4.621680,1.745197,7.094898,6.976969,7.040355,-3.983286,9.459397,8.518124,1.966046,2.932710,-3.812127,-3.754345,-2.532295,1.264719,6.028406,3.778405,-8.150770,9.217376,1.108647,-6.513353,9.475915,-7.086189,-7.644996,-4.596777,-6.448948,2.698265,1.757714,1.394991,-7.925409,-9.559218,-8.778961,6.255079,9.380239,5.082211,8.326529,6.529329,-4.515768,1.414391,5.861048,-9.108639,-9.964966,-6.657988,4.711195,3.604300,2.251731,0.458780,3.170899,-5.257291,-1.012736,3.351665,9.911821,-3.570055,-3.451449,-0.629509,5.888335,9.694755,-5.037933,1.115541,-3.176570,5.103866,1.006538,4.639341,7.918140,5.452697,7.702525,-3.926728,9.031693,-1.162025,-0.047017,0.436092,5.026584,9.590707,-2.698322,-8.569695,1.633547,-2.630634,-9.025666,7.667466,9.191019,5.775643,5.191449,-4.252734,9.423921,5.630808,5.172304,5.881571,0.280822,1.101566,-7.019899,-5.342952,2.553459,-9.577483,9.531939,-9.090532,-1.983839,7.172682,2.294617,-5.726801,7.533746,-8.435526,-3.854231,4.573119,7.852389,3.805438,-0.623692,1.097874,2.991985,-2.932068,-0.080225,9.875313,-5.067645,-0.256096,-1.918876,-1.679768,-1.408446,8.705774,6.492825,1.823589,0.018499,-4.932711,-6.537614,7.721891,3.853481,-5.753687,-9.575969,-2.441380,7.211482,-9.087255,2.111070,7.030671,-3.208975,-3.502806,0.627654,-3.195538,-0.777646,7.475313,-0.535925,-4.443747,-7.796601,4.571074,9.556417,6.266888,8.187386,-7.995361,0.299791,-0.471391,-3.262336,8.669007,-0.128561,-8.187743,-5.319988,-6.523742,5.741107,-5.458253,3.451608,-1.933020,6.923321,0.196384,-7.032785,1.823051,8.879175,2.138639,-1.642731,-4.141511,-4.332091,5.173680,-8.617533,0.372124,1.859145,5.102260,-0.104540,1.333584,9.073672,-0.151000,-4.291671,1.424783,8.610892,-9.995773,7.572336,1.355620,8.111827,-9.348396,-3.342056,5.062137,6.298238,-9.403097,7.484576,7.955079,8.884707,-2.134840,8.310699,7.716904,-3.691921,-3.141689,-2.588997,4.058907,9.502910,6.789703,0.682990,2.226838,1.585091,-4.114256,6.090233,-8.911309,2.498281,-9.306349,-0.467850,-4.080406,6.569062,9.428580,-5.862159,-1.863023,-8.990202,9.268726,-9.565197,3.660725,-9.741224,-2.853781,2.335685,-1.451001,6.333375,-4.164075,4.894413,-1.716710,9.548044,-2.482240,-0.663231,5.884097,2.134976,7.550652,2.346250,4.934895,-7.261899,4.547756,-2.334785,0.996962,8.949775,-1.618260,-5.177247,5.155007,-1.431630,0.260710,-5.323264,1.298878,2.276353,-1.591981,1.826569,-7.236082,7.249126,-5.851771,-9.283423,-1.182567,2.252625,-6.301689,6.562098,5.265936,6.059481,9.912481,-6.879826,5.370815,3.493765,-1.675778,-5.979808,-9.602420,0.215326,3.149560,-4.225222,0.874043,-4.858157,0.906077,7.547871,9.017774,0.174467,1.978889,-6.886253], dtype = "float64")#candidate|3615|(400,)|const|float64
const_3616 = relay.const([True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True], dtype = "bool")#candidate|3616|(384,)|const|bool
call_3613 = relay.TupleGetItem(func_1422_call(relay.reshape(var_3614.astype('float64'), [11, 9, 9]), relay.reshape(const_3615.astype('float64'), [400,]), relay.reshape(const_3616.astype('bool'), [384,]), ), 2)
call_3617 = relay.TupleGetItem(func_1426_call(relay.reshape(var_3614.astype('float64'), [11, 9, 9]), relay.reshape(const_3615.astype('float64'), [400,]), relay.reshape(const_3616.astype('bool'), [384,]), ), 2)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_3621 = relay.TupleGetItem(func_2815_call(), 0)
call_3622 = relay.TupleGetItem(func_2817_call(), 0)
bop_3624 = relay.power(uop_3601.astype('float32'), relay.reshape(const_3600.astype('float32'), relay.shape_of(uop_3601))) # shape=(5, 1, 10)
func_296_call = mod.get_global_var('func_296')
func_299_call = mutated_mod.get_global_var('func_299')
const_3635 = relay.const([[-5.780294,-6.727897,5.391788,3.542883,-8.690131,-9.916789,8.036910,8.420204,-3.472727,2.588936,2.232520,9.478019,0.256218,-8.965554,-9.849597,5.033434,6.832398,9.781739,-0.737799,3.200658,0.382755,-5.783376,8.147678,-7.307214,-6.237601,0.611765,6.546835,-3.879209,8.298865,-5.809177,-4.948018,-7.226234,2.851581,-9.414850,-2.589817,3.209928,1.295454,-0.620633,1.191292,-5.680310,-3.795086,0.640643,-4.858684,-8.347507,-7.624155,-0.103637,-5.014595,-0.527874,-3.880505,3.405943,-1.043421,5.690215,-8.015558,-8.885552,-7.160646,6.003460,-1.517130,-3.101315,7.014813,-4.981641,-4.977594,-7.206289,6.196246,-9.320575,-3.713878,-6.153639,-6.098185,-2.938852,2.907529,-4.101530,-3.697283,-4.078577,-2.151766,7.964942,7.684818,0.048417,-7.883576,-7.020332,-1.680230,-4.931340,-7.029274,4.734324,-3.613992,-3.421933,9.719287,6.230590,-5.428617,-7.310147,-8.628936,-8.991383,-2.021284,9.215957,-8.436297,-0.757632,1.565391,9.478213,-0.022553,-3.254070,-5.013921,-6.538330,-0.496414,0.998377,-2.177255,2.732612,-3.703478,-9.145185,-8.441164,3.350158,-3.670707,3.248203,-9.005553,4.800040,-8.719405,1.982432,-7.446857,-9.057827,1.122855,-8.722727,1.904241,0.417319,8.685927,-2.110593,3.437590,-1.864402,-4.987646,1.908083,-8.797941,3.911678,1.721931,-4.061666,-5.649478,-6.810409,-5.425981,5.833623,-0.206614,8.316690,9.544501,4.958779,-2.327247,-5.473058,-6.054789,0.791784,-7.286431,3.469683,-1.850511,-4.489724,-8.542001,-9.707223,9.739156,-2.922771,-5.193861,4.630344,-8.140085,0.327150,0.829390,7.069438,3.944029,-0.958432,5.471224,1.393636,5.994458,-3.152814,-5.005373,7.301633,9.941352,-0.316916,8.549258,3.680030,-7.644172,-6.281193,-9.195829,1.743653,0.440398,9.661259,9.629241,-2.970806,-2.695019,-7.018867,6.114138,-3.839299,-7.170097,5.398038,1.448491,7.188576,3.036598,1.495325,9.334872,8.266485,-0.599402,5.022938,-0.464722,7.341139,-0.821993,5.527951,8.404046,-8.851637,-8.849196,8.764748,-9.257805,-4.941124,0.107273,6.587046,-0.004328,2.467021,-4.981187,8.066405,-1.892287,6.990980]], dtype = "float64")#candidate|3635|(1, 208)|const|float64
call_3634 = func_296_call(relay.reshape(const_3635.astype('float64'), [16, 13, 1]))
call_3636 = func_296_call(relay.reshape(const_3635.astype('float64'), [16, 13, 1]))
func_3156_call = mod.get_global_var('func_3156')
func_3161_call = mutated_mod.get_global_var('func_3161')
const_3638 = relay.const([[-5,3,-5,-1,2,-8,-2,-1,5,-2,5,-6,-4,-9,8,4,-4,-9,-5,5,8,8,-4,-4,-2,-5,6,9,-6,8,2,7,-8,3,9,-1,-3,-6,-10,5,-5,-9,4,3,-6,5,-3,-2,-9,6,-4,4],[6,4,8,-7,10,6,-4,3,1,8,10,-7,-6,8,10,7,2,3,9,-5,-6,4,-1,1,-6,-8,-10,7,7,-6,-7,-6,-4,-9,9,-5,-4,-8,-5,8,8,8,-10,4,10,6,-4,-6,-1,3,-6,8],[7,-6,-5,-6,8,-10,10,-8,5,10,6,10,-9,-9,3,-9,-3,5,-9,10,-8,8,6,10,9,3,-6,-7,5,-1,5,-1,5,6,-10,3,-9,-5,6,6,-5,-5,1,-7,-9,-7,10,-3,-5,-9,7,2],[-3,-9,-2,8,-6,-10,6,5,6,8,-9,1,1,-10,1,2,-9,-7,-10,10,-10,2,8,1,-9,-9,1,-4,-9,-9,-8,-6,-4,2,10,9,-2,9,-6,3,-1,-6,10,5,6,-2,6,5,-3,-5,9,-6],[-3,-1,5,-6,6,-1,2,8,1,-6,7,1,8,-4,10,-10,-3,3,4,-6,-1,-9,-2,-3,-4,-4,-10,-1,-10,5,-3,2,5,5,5,2,-8,-1,7,-7,-4,-3,5,3,9,7,5,9,5,1,-5,7],[7,6,-3,6,4,-4,-3,6,6,-3,5,1,6,-1,9,8,10,-10,7,-10,5,-1,10,-2,3,7,7,-9,4,-8,9,-6,10,-2,2,-9,8,7,7,6,7,9,5,-1,-7,-9,4,5,-1,-2,-1,-10],[-1,10,-10,-10,-2,-3,7,6,-2,10,2,2,4,-6,5,7,7,-3,-4,4,-2,-4,10,10,-7,-9,-8,4,-3,9,10,-1,3,-4,9,-4,-4,9,-8,-5,1,-8,5,3,4,-5,9,-1,-1,9,4,10],[-2,1,8,-7,-2,-8,-8,-4,-4,-7,4,-5,-5,-7,-8,7,4,1,6,2,4,-6,2,5,8,7,3,8,-6,9,2,5,-5,-9,-4,-2,3,-1,7,-9,1,8,-9,4,-3,-9,-10,-2,-9,-10,2,-3]], dtype = "int32")#candidate|3638|(8, 52)|const|int32
call_3637 = relay.TupleGetItem(func_3156_call(relay.reshape(const_3638.astype('int32'), [4, 13, 8]), relay.reshape(const_3638.astype('int32'), [4, 13, 8]), relay.reshape(const_3615.astype('float64'), [400,]), relay.reshape(const_3616.astype('bool'), [384,]), ), 5)
call_3639 = relay.TupleGetItem(func_3161_call(relay.reshape(const_3638.astype('int32'), [4, 13, 8]), relay.reshape(const_3638.astype('int32'), [4, 13, 8]), relay.reshape(const_3615.astype('float64'), [400,]), relay.reshape(const_3616.astype('bool'), [384,]), ), 5)
func_2921_call = mod.get_global_var('func_2921')
func_2927_call = mutated_mod.get_global_var('func_2927')
call_3642 = relay.TupleGetItem(func_2921_call(relay.reshape(call_3621.astype('bool'), [3, 6, 15]), relay.reshape(var_3614.astype('float64'), [891,]), relay.reshape(call_3613.astype('float64'), [400,]), relay.reshape(const_3615.astype('float64'), [400,]), ), 0)
call_3643 = relay.TupleGetItem(func_2927_call(relay.reshape(call_3621.astype('bool'), [3, 6, 15]), relay.reshape(var_3614.astype('float64'), [891,]), relay.reshape(call_3613.astype('float64'), [400,]), relay.reshape(const_3615.astype('float64'), [400,]), ), 0)
const_3645 = relay.const([[[3.472028,-5.030066,-8.327156,-1.426808,-1.208787,-3.047401,0.851710,6.564430,4.893787,-3.789474],[-9.919191,-9.122680,1.872942,-1.841111,4.484109,9.887717,1.499964,-9.402813,8.705964,1.315523],[6.123526,-1.364653,-1.336077,6.164958,-1.372216,4.538613,2.439698,-7.522329,-6.159295,-3.268875],[-8.657410,-6.601446,3.188272,4.570017,7.944963,-5.818923,0.094666,-4.115877,-7.754101,5.301421],[8.319679,0.625188,-4.267284,7.607224,-5.098325,-2.982210,-9.688002,-8.647646,3.574028,-8.930637],[-5.852527,1.052395,3.649613,-6.536139,-5.835111,-8.193868,-7.998504,-6.113863,5.195780,8.729456],[1.197138,6.500110,-7.938794,8.448457,0.386528,-2.963753,6.605597,8.091496,0.352985,-9.916911],[3.680973,9.017707,1.137626,-4.314461,-1.303444,-6.199386,1.058606,2.530924,-1.655881,-8.402686],[-4.915207,6.193334,-8.633004,-2.228482,-9.353684,7.889762,7.118301,9.590848,8.008234,-6.893739],[7.537337,1.074891,-5.085559,-9.405768,-6.460147,-3.673575,-5.920588,-9.961214,2.531442,-8.698268],[8.695339,4.554063,2.703630,3.952305,0.385068,-0.672087,8.924859,7.994334,-6.140200,-8.081170],[-1.728695,9.796100,-2.786084,-0.731136,-9.469302,-0.674594,-9.561760,-0.577506,-1.988224,-6.478840],[9.022823,9.312319,0.683138,-2.990839,-7.779167,-8.366764,-8.566492,2.413338,7.946585,-6.729492]],[[2.188737,0.461406,-8.464797,1.780490,-5.735509,-7.723919,-4.183153,-2.498525,3.412377,2.289639],[1.788829,-5.023761,6.242008,-6.703934,3.344135,-5.643830,2.942755,0.531612,0.775237,5.193209],[-8.374305,-8.738178,4.319237,-6.272108,2.339369,-3.156633,0.224515,-0.041432,5.223600,2.437809],[0.309310,1.788172,-9.036825,9.850685,6.898508,5.756388,-1.500139,-0.522533,-3.249683,-6.373842],[-3.547706,-2.169751,-2.654280,-4.603399,0.214493,-5.652924,2.463752,-8.054885,-3.793609,2.788187],[-6.658378,-1.742845,-7.013907,-7.784857,6.740146,2.364625,8.290980,-1.136211,-0.629329,8.696829],[-9.939151,8.649172,3.001080,1.697584,4.445360,6.420659,9.493255,-9.521435,-1.697014,-1.998118],[-2.366414,5.440045,4.221405,8.529689,-0.488420,-7.188414,-5.789341,-2.475930,0.236793,-5.047777],[8.440046,-7.821422,3.583648,-8.819672,8.007240,4.111260,-3.327035,9.346987,-1.617244,-9.895331],[-9.794582,-7.550676,-6.455781,-4.174112,-6.512594,-6.270334,5.328547,4.183403,3.668936,-4.500907],[-2.502021,-0.716966,5.544398,3.773097,-6.117462,-6.396119,-8.392703,-7.236646,-7.819938,-9.135314],[4.249618,-6.656834,0.175584,6.481610,2.009651,6.633399,4.512327,1.135804,8.081540,1.637572],[-6.363537,-4.995432,-1.824758,4.607320,-7.324319,3.976295,-5.185916,-9.929710,9.049828,-7.693310]],[[9.807000,2.976148,-1.518902,8.761080,6.644291,2.182540,6.047919,-6.529198,-9.471556,-3.285201],[1.572931,-2.649488,6.851123,3.140540,-0.968665,3.967127,9.662894,4.246565,4.355360,3.246591],[4.371014,-0.888826,7.095351,-5.217152,-9.269076,-6.637726,-2.474977,4.925706,5.957795,9.545056],[0.787566,1.889536,6.396489,-1.959953,-2.591562,2.866011,-0.795800,-6.096815,-0.701372,-7.770031],[0.312433,-6.611529,0.132210,7.611612,-2.069086,6.758719,8.089877,-1.160116,6.308295,-2.278161],[-9.166987,9.369828,6.046766,-2.559642,-3.550119,2.124145,7.113100,7.531840,4.664650,3.626825],[7.352761,2.548365,-3.455758,3.772728,-6.465615,7.539521,8.581955,-4.620459,-5.050620,-7.635957],[1.045547,-3.861334,9.348164,7.633773,-0.683806,-8.570451,1.911545,-6.516272,6.421413,1.383121],[5.042503,6.039589,1.467616,-2.587011,-2.528944,-4.196951,-5.605888,2.641900,3.714187,-3.647948],[9.627545,1.825669,3.205697,-4.127710,-4.510910,-0.069661,-4.788615,-5.839908,5.994104,4.211236],[-9.557577,1.363678,-7.622734,-2.508959,-4.217150,9.454539,-0.280512,-0.138600,4.985239,-9.097578],[4.400430,8.288652,-5.633540,5.792483,-5.785936,-1.550514,7.643819,8.770958,-8.271149,7.826383],[7.681693,-8.957557,8.321747,2.093288,-3.099535,-7.474874,-7.407728,9.277985,-3.093927,1.259912]],[[-8.502165,9.594809,5.980806,5.866565,-4.723864,-1.026156,-9.929912,0.168598,-0.407974,-6.996506],[1.598165,-9.542232,-7.364108,-6.762957,-9.191856,-6.685752,4.411079,-3.868952,-4.462337,-7.303713],[-1.474236,-5.016199,-3.049192,4.494157,-9.891900,5.648211,-0.022121,-0.804300,2.559915,3.052763],[-5.713884,-0.819469,3.045369,-9.847549,2.327841,5.245548,-6.340354,-4.260574,1.572525,0.877123],[9.205560,3.472403,-0.492645,-5.554213,5.945416,6.109515,4.238303,6.351558,9.151172,4.218633],[5.346609,-3.552467,-4.630801,-6.574136,-9.706355,-8.600009,-6.905697,-8.989838,4.394668,-2.670536],[-6.753635,-7.401362,-6.616888,9.586707,0.533360,-7.327066,5.762493,-6.742429,4.258227,4.879786],[-1.448231,6.155013,-1.539588,8.994892,-4.526257,-8.200195,-4.143494,1.832734,-3.029206,-7.200585],[2.186787,-1.394858,6.674468,-3.957264,7.458279,6.596095,4.737106,-7.075589,-2.461502,8.139993],[-8.469277,7.987754,-7.829745,6.673210,2.705497,8.197810,-4.193533,0.274035,-7.471671,-4.397333],[-4.904917,-1.987126,-8.221317,6.291375,-4.642819,2.926109,-9.732308,7.147577,9.802937,4.783863],[-8.889156,5.728801,2.124435,2.779414,7.631516,5.833032,9.399218,7.936291,2.300677,-3.780443],[-1.783893,-2.951187,-5.024457,4.937686,-5.177138,5.835103,8.576646,3.127061,2.161084,1.635668]],[[-7.029668,-8.724510,-0.756433,5.101504,-7.375617,7.177145,7.986227,6.409554,-0.166441,-4.390924],[-6.613363,3.425364,-6.502379,-2.041789,9.054823,-4.535884,-9.095529,9.292168,1.112932,-1.916994],[-6.503742,-9.161245,8.680574,-7.367464,-8.359709,-7.316967,-3.574943,8.999813,-0.308212,-7.701551],[7.882651,8.872640,-7.332942,-7.379743,5.495198,1.837917,-3.570171,-4.725203,-3.742094,7.112449],[9.703585,8.426756,-8.431631,-8.606085,-3.865787,-5.309454,-9.030858,6.548957,6.927614,-0.722941],[8.489813,-1.037753,8.347948,5.764601,7.058739,-2.308258,7.707367,-9.484298,-1.720074,-6.705211],[-0.710688,-9.645691,4.355978,0.138692,5.946788,2.919203,0.773864,4.540406,-6.973188,-2.888668],[3.092218,-8.115260,-2.916751,-6.718280,-5.459625,1.187360,-6.349413,1.097275,-8.006306,-0.105487],[-5.717784,-3.125761,3.049962,-4.423548,-7.949539,-4.084668,8.601745,-3.591144,9.544187,7.327174],[-2.759555,-4.871118,-9.295978,-8.703074,-0.518203,8.310386,-2.289851,9.000494,9.818833,-7.983301],[-6.779856,2.877480,9.967366,-8.479249,2.057470,-0.857033,-4.309890,-1.062425,-5.411114,2.659259],[0.284092,6.480184,-5.923834,1.052669,-0.546609,-9.674285,-3.406284,5.158824,2.199902,3.951644],[8.014062,-5.076064,-6.673391,-5.674160,6.743469,-1.893626,-7.340067,5.067829,-1.991103,-6.732963]]], dtype = "float32")#candidate|3645|(5, 13, 10)|const|float32
bop_3646 = relay.right_shift(uop_3601.astype('int64'), const_3645.astype('int64')) # shape=(5, 13, 10)
output = relay.Tuple([bop_3609,call_3613,var_3614,const_3615,const_3616,call_3621,bop_3624,call_3634,const_3635,call_3637,const_3638,call_3642,bop_3646,])
output2 = relay.Tuple([bop_3609,call_3617,var_3614,const_3615,const_3616,call_3622,bop_3624,call_3636,const_3635,call_3639,const_3638,call_3643,bop_3646,])
func_3652 = relay.Function([var_3614,], output)
mod['func_3652'] = func_3652
mod = relay.transform.InferType()(mod)
mutated_mod['func_3652'] = func_3652
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3653 = relay.var("var_3653", dtype = "float64", shape = (3, 297))#candidate|3653|(3, 297)|var|float64
func_3652_call = mutated_mod.get_global_var('func_3652')
call_3654 = func_3652_call(var_3653)
output = call_3654
func_3655 = relay.Function([var_3653], output)
mutated_mod['func_3655'] = func_3655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3027_call = mod.get_global_var('func_3027')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_3662 = func_3027_call()
call_3663 = func_3027_call()
output = relay.Tuple([call_3662,])
output2 = relay.Tuple([call_3663,])
func_3665 = relay.Function([], output)
mod['func_3665'] = func_3665
mod = relay.transform.InferType()(mod)
mutated_mod['func_3665'] = func_3665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3665_call = mutated_mod.get_global_var('func_3665')
call_3666 = func_3665_call()
output = call_3666
func_3667 = relay.Function([], output)
mutated_mod['func_3667'] = func_3667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3103_call = mod.get_global_var('func_3103')
func_3104_call = mutated_mod.get_global_var('func_3104')
call_3681 = relay.TupleGetItem(func_3103_call(), 0)
call_3682 = relay.TupleGetItem(func_3104_call(), 0)
const_3685 = relay.const([[[True,False,False,True,False,True,False,False,False,False,True,True,True,False,False],[False,True,False,True,True,False,False,False,False,True,False,True,False,True,True],[True,False,True,True,False,False,False,False,False,False,False,False,True,False,False],[True,False,False,True,True,True,True,True,True,True,False,True,False,True,True],[False,False,True,True,True,True,True,True,False,False,True,False,False,False,False],[False,True,False,False,False,False,False,True,True,True,False,False,True,True,True]],[[False,True,True,True,False,False,True,False,True,True,False,False,True,False,False],[False,False,True,False,True,True,False,True,False,False,False,False,False,True,True],[True,True,False,False,True,True,False,False,True,True,True,True,True,False,True],[True,False,True,False,True,False,True,True,True,True,True,False,True,True,True],[True,False,True,True,False,False,False,False,False,True,True,True,False,False,True],[True,True,False,True,True,True,True,False,False,True,True,False,True,True,True]],[[False,False,False,True,True,False,True,False,True,True,True,False,False,False,True],[False,True,False,False,False,False,True,False,False,True,True,False,True,False,True],[True,False,True,True,False,False,True,True,False,False,True,False,True,True,False],[False,True,True,False,True,False,False,False,False,True,False,True,True,True,True],[False,False,True,True,True,True,True,True,True,False,True,False,False,False,True],[False,False,True,True,True,False,True,True,True,True,False,True,False,True,False]]], dtype = "bool")#candidate|3685|(3, 6, 15)|const|bool
bop_3686 = relay.maximum(call_3681.astype('int64'), relay.reshape(const_3685.astype('int64'), relay.shape_of(call_3681))) # shape=(3, 6, 15)
bop_3689 = relay.maximum(call_3682.astype('int64'), relay.reshape(const_3685.astype('int64'), relay.shape_of(call_3682))) # shape=(3, 6, 15)
func_2376_call = mod.get_global_var('func_2376')
func_2379_call = mutated_mod.get_global_var('func_2379')
const_3694 = relay.const([3.079417,-9.271515,7.016923,-8.497984,4.475669,-4.883877,5.283981,-5.171504,8.232673,0.513158,0.316870,-9.707782,7.115872,7.721566,9.902926,1.585608,2.327244,-7.749506,4.486123,-9.650609,-3.818792,1.086161,8.301443,5.798035,5.265827,9.346394,7.427883,8.071377,-0.567705,6.899817,-4.538636,6.527373,1.416597,-9.559274,-2.307179,1.104626,6.604180,-6.322987,-9.414534,-9.141382,-6.560084,-3.022749,1.429353,0.933311,2.278104,7.601633,8.693210,0.445952,8.915214,-5.132369,-3.229003,-6.676220,-0.505587,-3.780096,-9.976629,4.939653,8.705304,-4.014184,2.505230,-2.896612,-0.202907,-3.921777,-4.464960,-8.169410,4.786868,0.520242,6.064330,-7.351969,9.008753,-3.744728,7.464624,-8.049039,-8.755286,0.068091,-9.749797,-7.173657,-4.121037,5.854672,-5.655491,-4.398020,-3.004667,8.573626,3.810522,3.372799,-6.269646,-4.026532,8.231428,-0.575969,0.853746,5.510603,-4.937517,-0.480669,-3.855519,0.928003,-5.838175,6.087517,-5.512619,-3.509889,-9.136865,-7.796132,3.607999,-9.817936,6.123020,-0.542106,-5.473348,5.980272,4.694374,4.783240,4.964454,-2.975336,-5.772812,-4.231887,-4.824743,-4.877285,-3.332799,-9.210000,4.522946,2.303109,8.397496,9.137986,1.101077,-4.893828,9.991282,3.069058,7.401519,-4.886394,8.772185,-6.388813,2.745577,-9.117113,4.898295,0.162256,4.292610,2.005205,9.073311,-7.797951,9.705732,5.597898,5.396798,4.460341,6.952035,-3.984455,-8.775038,-3.608652,-0.231832,-1.513924,5.932530,-7.472092,-7.527602,-7.834320,8.908098,-1.190718,6.895191,4.855883,-8.642107,0.812880,-6.158134,-9.312221,-8.407232,-9.156302,0.686169,-2.377637,-5.697249,4.079238,5.344572,-0.662460,7.759632,0.431095,1.425330,7.828603,-8.118056,3.004985,-4.243066,7.473769,-8.634602,3.017476,-0.237073,7.129767,9.725080,3.129013,-9.658391,6.866181,1.336125,-3.109013,4.060258,-7.946120,9.866405,-6.698076,-2.656522,-2.293026,6.468348,-9.831681,-6.065115,-9.829863,2.792323,-9.744176,-1.817821,2.310704,-6.467768,-2.252821,7.540347,9.266113,-4.134255,-0.470707,-9.223395,4.952564,8.500927,9.390150,2.794057,1.784885,-6.749871,-0.179944,2.082834,-6.287363,-4.351610,4.328914,7.645217,-8.443341,-5.928404,-0.121920,7.335202,-7.502940,-5.891088,-9.079116,2.533023,-5.369413,8.260642,-3.726633,-8.902460,0.087638,1.669492,-6.205593,4.340585,-9.114084,2.238055,-2.117911,5.382604,7.155571,2.291886,1.346092,0.752814,-0.496574,0.986596,2.327602,8.268365,-6.101316,1.419849,5.379889,5.883595,-9.477181,6.508153,0.095141,3.152248,-9.813542,7.852181,-5.727133,5.915258,3.929742,4.752076,-1.982663,7.649812,-4.102346,9.684524,-9.347836,9.936816,6.853540,9.742260,4.263714,-6.250477,0.620039,-6.792912,-7.001369,-6.985018,-8.062531,7.384716,-1.822008,8.224943,9.262553,6.138356,3.257291,9.908988,8.637381,5.407991,8.988163,-0.477930,1.041678,-8.214437,-5.239032,-3.344191,9.747956,4.419765,-4.398700,-6.371383,2.997251,9.207806,-1.224527,8.407660,-4.928966,8.822033,-3.482696,-0.844274,-8.329347,-8.157168,-3.647396,7.507321,-9.156774,0.386012,0.248862,-0.627244,1.782735,3.596827,-1.792390,3.926830,2.814939,9.856045,-4.743304,-3.466587,-9.153682,4.851069,5.115398,-8.825724,6.128622,-5.393563,7.255138,8.560649,1.226621,7.871082,-6.323432,-7.066051,6.534004,7.134910,2.457745,-4.999921,-7.787212,-2.703800,-4.069302,9.099919,0.661204,-1.617795,8.809960,6.915957,-7.418052,-4.113556,-6.987743,-8.319700,-5.044822,4.272768,3.243018,-8.565160,-9.260424,8.273112,2.913146,-4.539164,5.023066,-5.877986,3.125903,3.843668,-2.139322,-5.975576,-9.571089,-5.421051,-9.265066,-4.030116,1.165821,-3.191610,-4.258175,-3.881634,-3.038616,-3.773296,3.946128,-0.108287,-1.700453,-9.100082,-7.039762,9.189873,0.839361,0.082254,-6.801373,-3.850108,-3.127716,7.647108,-8.699863,4.259785,-7.816299,-9.639641,-2.248343,-8.564665,-8.806017,6.101334,4.622814,7.505239,-6.485995,8.530293,1.276888,-4.532849,-4.561499,-5.791600,7.421631,7.437792,0.602613,8.206725,2.719431,-0.037661,-3.834906,-4.968973,8.825206,-9.461675,-6.867219,-6.309789,0.028514,-1.045869,-4.133464,6.297597,-7.098070,9.396950,-7.666071,3.297022,3.698826,-4.109556,8.295313,0.700076,-9.040375,-3.751502,7.482890,-3.029914,1.945300,-8.518653,1.621172,4.238023,4.827023,3.092671,8.736961,6.894747,2.648521,-6.033577,-7.457775,4.518107,9.866809,2.589313,-0.750728,-6.381901,-2.555306,4.990304,-5.859947,6.038391,0.366302,2.243427,1.203190,2.694773,-8.003057,1.436672,-4.922560,-0.030562,-1.295691,-3.546715,1.175554,-4.702597,-2.776410,-2.788363,-3.337481,-6.011233,-3.109967,-7.947904,-1.603263,-5.905827,8.803724,2.968949,-4.784222,-7.360032,1.640955,7.169698,1.545721,9.088062,5.398045,-6.080690,8.043010,-7.599457,-8.152765,-8.445350,-3.086920,-1.341719,-3.816693,4.608020,8.448530,-9.664440,0.261264,7.331747,5.799260,-8.050459,-3.887627,7.695064,1.293875,-8.991884,-5.528018,-6.261622,8.181059,1.545938,-6.925100,4.933299,-8.944773,-2.961794,0.480983,-1.494798,-4.298982,-2.134957,7.870848,0.017968,6.164633,-5.865628,-5.062722,-2.669350,7.501786,7.509137,7.525214,4.286313,-9.247043,3.523408,-2.191559,1.931127,-0.796604,6.133369,3.477127,-5.639709,-2.597743,-9.377773,1.885109,0.454700,-0.268027,-5.324190,2.180914,0.859595,0.256368,4.372367,-6.776503,6.719743,-9.901436,-1.649801,2.669749,-5.720337,-3.205905,-5.264052,-4.808552,-6.573949,-1.721117,-6.645116,0.317914,-1.983314,-1.159345,-7.832006,-8.920240,1.104098,-2.173095,-0.986354,-5.825910,-3.480353,2.689938,-3.068701,-4.364866,4.515743,3.032359,-3.463271,8.567601,0.521941,-6.968539,3.083695,0.450687,-8.479711,-7.879231,7.328961,6.287212,6.995430,-9.114814,-0.436547,2.728483,-6.441148,6.654259,4.650645,0.256996,-5.016523,-6.136056,-3.442142,-3.894990,7.384674,9.462718,2.515905,-7.856782,2.904250,-2.699941,8.385046,6.247079,-1.599854,-4.826542,-6.816012,7.034262,-5.414661,-0.543039,0.478729,5.023857,4.662637,-6.697611,1.574214,-4.463740,4.106366,1.901323,-5.079129,-9.997820,3.401085,-5.507880,-4.254679,4.566334,9.142736,7.529774,-1.018857,6.730726,9.947405,4.322737,1.241878,-9.604187,-8.499634,7.640909,-6.839139,-4.225595,1.510040,1.408809,-4.237317,-5.888362,-1.239000,-4.931304,-9.225090,3.527615,9.980823,-3.905713,-3.962768,-5.687212,-7.847775,0.726847,5.563292,4.351756,-7.958988,3.192679,5.012753,-0.974683,6.106795,-4.984810,-4.716025,-9.977927,-2.763853,-4.868640,3.799760,-3.662482,1.659529,-6.261644,8.899101,6.618769,4.509780,-0.842486,-8.726737,-9.920069,4.259868,4.433268,-3.590969,-4.921707,-7.220011,8.273382,7.012086,-3.283236,3.777626,9.134124,-1.178649,-4.855253,7.636883,-1.498603,9.076851,-2.149224,9.324832,1.241756,8.240124,0.736858,-2.473830,2.308160,-7.729425,-7.677082,-2.232573,-4.449672,-0.828899,-0.646514,8.407622,2.837205,-8.900188,1.995213,0.304364,9.868647,-1.218186,4.190445,-6.023634,-2.284980,-7.690501,-1.990358,6.514674,5.289556,-2.493923,1.098618,-1.902759,-2.432174,-8.806676,-4.114748,-9.105677,-8.453976,-2.572174,-0.008677,-3.982773,0.451367,5.057853,-3.635200,-4.889070,0.362987,9.264625,-3.181958,5.854776,-1.005991], dtype = "float32")#candidate|3694|(720,)|const|float32
call_3693 = func_2376_call(relay.reshape(const_3694.astype('float32'), [10, 8, 9]), relay.reshape(const_3694.astype('float32'), [10, 8, 9]), )
call_3695 = func_2376_call(relay.reshape(const_3694.astype('float32'), [10, 8, 9]), relay.reshape(const_3694.astype('float32'), [10, 8, 9]), )
output = relay.Tuple([bop_3686,call_3693,const_3694,])
output2 = relay.Tuple([bop_3689,call_3695,const_3694,])
func_3705 = relay.Function([], output)
mod['func_3705'] = func_3705
mod = relay.transform.InferType()(mod)
output = func_3705()
func_3706 = relay.Function([], output)
mutated_mod['func_3706'] = func_3706
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3783 = relay.var("var_3783", dtype = "float64", shape = (6, 8, 9))#candidate|3783|(6, 8, 9)|var|float64
var_3784 = relay.var("var_3784", dtype = "float64", shape = (6, 8, 9))#candidate|3784|(6, 8, 9)|var|float64
bop_3785 = relay.power(var_3783.astype('float64'), relay.reshape(var_3784.astype('float64'), relay.shape_of(var_3783))) # shape=(6, 8, 9)
func_2258_call = mod.get_global_var('func_2258')
func_2265_call = mutated_mod.get_global_var('func_2265')
const_3790 = relay.const([0.586170,2.158453,-7.819422,-1.557669,-1.833104,-7.489611,8.567511,3.151850,9.910244,-1.223863,-6.556909,2.863831,9.718454,-6.114680,-8.708911,-0.912033,1.894840,7.674537,-8.012273,0.069868,4.344420,-3.019277,-8.689027,-4.938103,5.741073,8.456946,-6.032663,-8.033017,1.310226,-4.232498,-2.360515,5.707774], dtype = "float32")#candidate|3790|(32,)|const|float32
var_3791 = relay.var("var_3791", dtype = "float32", shape = (1872,))#candidate|3791|(1872,)|var|float32
var_3792 = relay.var("var_3792", dtype = "int32", shape = (2, 144))#candidate|3792|(2, 144)|var|int32
var_3793 = relay.var("var_3793", dtype = "float64", shape = (1, 400))#candidate|3793|(1, 400)|var|float64
const_3794 = relay.const([False,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,True,False,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,True], dtype = "bool")#candidate|3794|(384,)|const|bool
call_3789 = relay.TupleGetItem(func_2258_call(relay.reshape(const_3790.astype('float32'), [4, 8]), relay.reshape(var_3791.astype('float32'), [1872,]), relay.reshape(var_3792.astype('int32'), [72, 4]), relay.reshape(var_3793.astype('float64'), [400,]), relay.reshape(const_3794.astype('bool'), [96, 4]), ), 6)
call_3795 = relay.TupleGetItem(func_2265_call(relay.reshape(const_3790.astype('float32'), [4, 8]), relay.reshape(var_3791.astype('float32'), [1872,]), relay.reshape(var_3792.astype('int32'), [72, 4]), relay.reshape(var_3793.astype('float64'), [400,]), relay.reshape(const_3794.astype('bool'), [96, 4]), ), 6)
const_3798 = relay.const([[-7,-7,2,-2,-9,-7,-3,-9,-9,7,-8,7,-6,6,-3,7,3,-2,6,-9,-8,-7,3,-9,8,6,-5,-3,10,-2,-6,-6,7,-6,-1,-9,1,-9,-1,-7,-4,-9,6,9,-3,-10,2,-10,3,1,10,4,-5,4,-1,6,-5,-6,9,8,8,1,-5,10,-8,3,-2,-7,-2,-4,-3,-8,-7,9,10,8,-7,-10,1,-2,3,-4,4,4,2,9,-10,4,-3,-5,-4,3,-1,4,4,-10,-3,2,6,1,5,5,-9,5,6,5,3,9,-10,8,1,1,-2,9,-10,-8,-2,-10,-4,3,5,7,-5,-5,-1,10,-1,-4,-3,-5,-7,8,5,-2,-5,8,10,-1,2,-1,9,7,-10,6],[-5,-10,1,-4,8,-5,9,-4,-9,-6,-10,-5,8,-10,-2,6,5,-2,4,5,1,6,5,1,-6,6,5,5,-5,6,3,-7,-5,-7,4,-10,3,-5,5,-4,-4,-7,4,-4,10,6,-1,-2,-1,-7,10,-10,-3,-3,2,1,10,4,-3,2,-10,5,-3,-8,-5,-9,-2,9,-5,-8,-4,2,-9,9,-9,-5,3,-10,6,-9,3,-7,-1,2,3,-5,-9,2,-7,1,-5,-5,-6,-3,3,5,-3,10,-3,2,-2,-6,5,-10,10,-6,-6,3,8,-6,1,-6,6,-8,8,-8,8,3,1,-4,3,-5,-3,-10,-6,1,-8,10,2,-6,10,3,5,9,-7,6,-5,10,-9,8,-7,-1,-5,-2]], dtype = "int32")#candidate|3798|(2, 144)|const|int32
bop_3799 = relay.less(var_3792.astype('bool'), relay.reshape(const_3798.astype('bool'), relay.shape_of(var_3792))) # shape=(2, 144)
output = relay.Tuple([bop_3785,call_3789,const_3790,var_3791,var_3793,const_3794,bop_3799,])
output2 = relay.Tuple([bop_3785,call_3795,const_3790,var_3791,var_3793,const_3794,bop_3799,])
func_3825 = relay.Function([var_3783,var_3784,var_3791,var_3792,var_3793,], output)
mod['func_3825'] = func_3825
mod = relay.transform.InferType()(mod)
var_3826 = relay.var("var_3826", dtype = "float64", shape = (6, 8, 9))#candidate|3826|(6, 8, 9)|var|float64
var_3827 = relay.var("var_3827", dtype = "float64", shape = (6, 8, 9))#candidate|3827|(6, 8, 9)|var|float64
var_3828 = relay.var("var_3828", dtype = "float32", shape = (1872,))#candidate|3828|(1872,)|var|float32
var_3829 = relay.var("var_3829", dtype = "int32", shape = (2, 144))#candidate|3829|(2, 144)|var|int32
var_3830 = relay.var("var_3830", dtype = "float64", shape = (1, 400))#candidate|3830|(1, 400)|var|float64
output = func_3825(var_3826,var_3827,var_3828,var_3829,var_3830,)
func_3831 = relay.Function([var_3826,var_3827,var_3828,var_3829,var_3830,], output)
mutated_mod['func_3831'] = func_3831
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3849 = relay.var("var_3849", dtype = "float32", shape = ())#candidate|3849|()|var|float32
var_3850 = relay.var("var_3850", dtype = "float32", shape = (2, 7, 15))#candidate|3850|(2, 7, 15)|var|float32
bop_3851 = relay.maximum(var_3849.astype('float32'), var_3850.astype('float32')) # shape=(2, 7, 15)
output = bop_3851
output2 = bop_3851
func_3859 = relay.Function([var_3849,var_3850,], output)
mod['func_3859'] = func_3859
mod = relay.transform.InferType()(mod)
var_3860 = relay.var("var_3860", dtype = "float32", shape = ())#candidate|3860|()|var|float32
var_3861 = relay.var("var_3861", dtype = "float32", shape = (2, 7, 15))#candidate|3861|(2, 7, 15)|var|float32
output = func_3859(var_3860,var_3861,)
func_3862 = relay.Function([var_3860,var_3861,], output)
mutated_mod['func_3862'] = func_3862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3332_call = mod.get_global_var('func_3332')
func_3334_call = mutated_mod.get_global_var('func_3334')
call_3881 = relay.TupleGetItem(func_3332_call(), 0)
call_3882 = relay.TupleGetItem(func_3334_call(), 0)
output = relay.Tuple([call_3881,])
output2 = relay.Tuple([call_3882,])
func_3894 = relay.Function([], output)
mod['func_3894'] = func_3894
mod = relay.transform.InferType()(mod)
mutated_mod['func_3894'] = func_3894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3894_call = mutated_mod.get_global_var('func_3894')
call_3895 = func_3894_call()
output = call_3895
func_3896 = relay.Function([], output)
mutated_mod['func_3896'] = func_3896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3027_call = mod.get_global_var('func_3027')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_3939 = func_3027_call()
call_3940 = func_3027_call()
output = relay.Tuple([call_3939,])
output2 = relay.Tuple([call_3940,])
func_3945 = relay.Function([], output)
mod['func_3945'] = func_3945
mod = relay.transform.InferType()(mod)
mutated_mod['func_3945'] = func_3945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3945_call = mutated_mod.get_global_var('func_3945')
call_3946 = func_3945_call()
output = call_3946
func_3947 = relay.Function([], output)
mutated_mod['func_3947'] = func_3947
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3948 = relay.var("var_3948", dtype = "int16", shape = (12, 2))#candidate|3948|(12, 2)|var|int16
var_3949 = relay.var("var_3949", dtype = "int16", shape = (12, 2))#candidate|3949|(12, 2)|var|int16
bop_3950 = relay.greater_equal(var_3948.astype('bool'), relay.reshape(var_3949.astype('bool'), relay.shape_of(var_3948))) # shape=(12, 2)
output = bop_3950
output2 = bop_3950
func_3961 = relay.Function([var_3948,var_3949,], output)
mod['func_3961'] = func_3961
mod = relay.transform.InferType()(mod)
var_3962 = relay.var("var_3962", dtype = "int16", shape = (12, 2))#candidate|3962|(12, 2)|var|int16
var_3963 = relay.var("var_3963", dtype = "int16", shape = (12, 2))#candidate|3963|(12, 2)|var|int16
output = func_3961(var_3962,var_3963,)
func_3964 = relay.Function([var_3962,var_3963,], output)
mutated_mod['func_3964'] = func_3964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3894_call = mod.get_global_var('func_3894')
func_3896_call = mutated_mod.get_global_var('func_3896')
call_4030 = relay.TupleGetItem(func_3894_call(), 0)
call_4031 = relay.TupleGetItem(func_3896_call(), 0)
func_2768_call = mod.get_global_var('func_2768')
func_2771_call = mutated_mod.get_global_var('func_2771')
var_4066 = relay.var("var_4066", dtype = "bool", shape = (384, 1))#candidate|4066|(384, 1)|var|bool
var_4067 = relay.var("var_4067", dtype = "float64", shape = (891,))#candidate|4067|(891,)|var|float64
call_4065 = relay.TupleGetItem(func_2768_call(relay.reshape(var_4066.astype('bool'), [384,]), relay.reshape(var_4067.astype('float64'), [891,]), ), 1)
call_4068 = relay.TupleGetItem(func_2771_call(relay.reshape(var_4066.astype('bool'), [384,]), relay.reshape(var_4067.astype('float64'), [891,]), ), 1)
func_1604_call = mod.get_global_var('func_1604')
func_1607_call = mutated_mod.get_global_var('func_1607')
var_4074 = relay.var("var_4074", dtype = "uint64", shape = ())#candidate|4074|()|var|uint64
call_4073 = relay.TupleGetItem(func_1604_call(relay.reshape(var_4074.astype('uint64'), [])), 0)
call_4075 = relay.TupleGetItem(func_1607_call(relay.reshape(var_4074.astype('uint64'), [])), 0)
output = relay.Tuple([call_4030,call_4065,var_4066,var_4067,call_4073,var_4074,])
output2 = relay.Tuple([call_4031,call_4068,var_4066,var_4067,call_4075,var_4074,])
func_4091 = relay.Function([var_4066,var_4067,var_4074,], output)
mod['func_4091'] = func_4091
mod = relay.transform.InferType()(mod)
mutated_mod['func_4091'] = func_4091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4091_call = mutated_mod.get_global_var('func_4091')
var_4093 = relay.var("var_4093", dtype = "bool", shape = (384, 1))#candidate|4093|(384, 1)|var|bool
var_4094 = relay.var("var_4094", dtype = "float64", shape = (891,))#candidate|4094|(891,)|var|float64
var_4095 = relay.var("var_4095", dtype = "uint64", shape = ())#candidate|4095|()|var|uint64
call_4092 = func_4091_call(var_4093,var_4094,var_4095,)
output = call_4092
func_4096 = relay.Function([var_4093,var_4094,var_4095,], output)
mutated_mod['func_4096'] = func_4096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3945_call = mod.get_global_var('func_3945')
func_3947_call = mutated_mod.get_global_var('func_3947')
call_4145 = relay.TupleGetItem(func_3945_call(), 0)
call_4146 = relay.TupleGetItem(func_3947_call(), 0)
func_3894_call = mod.get_global_var('func_3894')
func_3896_call = mutated_mod.get_global_var('func_3896')
call_4161 = relay.TupleGetItem(func_3894_call(), 0)
call_4162 = relay.TupleGetItem(func_3896_call(), 0)
output = relay.Tuple([call_4145,call_4161,])
output2 = relay.Tuple([call_4146,call_4162,])
func_4163 = relay.Function([], output)
mod['func_4163'] = func_4163
mod = relay.transform.InferType()(mod)
output = func_4163()
func_4164 = relay.Function([], output)
mutated_mod['func_4164'] = func_4164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3027_call = mod.get_global_var('func_3027')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_4191 = func_3027_call()
call_4192 = func_3027_call()
func_3859_call = mod.get_global_var('func_3859')
func_3862_call = mutated_mod.get_global_var('func_3862')
var_4194 = relay.var("var_4194", dtype = "float32", shape = ())#candidate|4194|()|var|float32
var_4195 = relay.var("var_4195", dtype = "float32", shape = (210,))#candidate|4195|(210,)|var|float32
call_4193 = func_3859_call(relay.reshape(var_4194.astype('float32'), []), relay.reshape(var_4195.astype('float32'), [2, 7, 15]), )
call_4196 = func_3859_call(relay.reshape(var_4194.astype('float32'), []), relay.reshape(var_4195.astype('float32'), [2, 7, 15]), )
output = relay.Tuple([call_4191,call_4193,var_4194,var_4195,])
output2 = relay.Tuple([call_4192,call_4196,var_4194,var_4195,])
func_4197 = relay.Function([var_4194,var_4195,], output)
mod['func_4197'] = func_4197
mod = relay.transform.InferType()(mod)
var_4198 = relay.var("var_4198", dtype = "float32", shape = ())#candidate|4198|()|var|float32
var_4199 = relay.var("var_4199", dtype = "float32", shape = (210,))#candidate|4199|(210,)|var|float32
output = func_4197(var_4198,var_4199,)
func_4200 = relay.Function([var_4198,var_4199,], output)
mutated_mod['func_4200'] = func_4200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3945_call = mod.get_global_var('func_3945')
func_3947_call = mutated_mod.get_global_var('func_3947')
call_4207 = relay.TupleGetItem(func_3945_call(), 0)
call_4208 = relay.TupleGetItem(func_3947_call(), 0)
var_4219 = relay.var("var_4219", dtype = "bool", shape = (3, 6, 15))#candidate|4219|(3, 6, 15)|var|bool
bop_4220 = relay.bitwise_or(call_4207.astype('int32'), relay.reshape(var_4219.astype('int32'), relay.shape_of(call_4207))) # shape=(3, 6, 15)
bop_4223 = relay.bitwise_or(call_4208.astype('int32'), relay.reshape(var_4219.astype('int32'), relay.shape_of(call_4208))) # shape=(3, 6, 15)
output = bop_4220
output2 = bop_4223
func_4225 = relay.Function([var_4219,], output)
mod['func_4225'] = func_4225
mod = relay.transform.InferType()(mod)
mutated_mod['func_4225'] = func_4225
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4226 = relay.var("var_4226", dtype = "bool", shape = (3, 6, 15))#candidate|4226|(3, 6, 15)|var|bool
func_4225_call = mutated_mod.get_global_var('func_4225')
call_4227 = func_4225_call(var_4226)
output = call_4227
func_4228 = relay.Function([var_4226], output)
mutated_mod['func_4228'] = func_4228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mod.get_global_var('func_2423')
func_2424_call = mutated_mod.get_global_var('func_2424')
call_4243 = func_2423_call()
call_4244 = func_2423_call()
uop_4249 = relay.sinh(call_4243.astype('float32')) # shape=(3, 6, 15)
uop_4251 = relay.sinh(call_4244.astype('float32')) # shape=(3, 6, 15)
output = relay.Tuple([uop_4249,])
output2 = relay.Tuple([uop_4251,])
func_4274 = relay.Function([], output)
mod['func_4274'] = func_4274
mod = relay.transform.InferType()(mod)
mutated_mod['func_4274'] = func_4274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4274_call = mutated_mod.get_global_var('func_4274')
call_4275 = func_4274_call()
output = call_4275
func_4276 = relay.Function([], output)
mutated_mod['func_4276'] = func_4276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3665_call = mod.get_global_var('func_3665')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_4283 = relay.TupleGetItem(func_3665_call(), 0)
call_4284 = relay.TupleGetItem(func_3667_call(), 0)
output = relay.Tuple([call_4283,])
output2 = relay.Tuple([call_4284,])
func_4285 = relay.Function([], output)
mod['func_4285'] = func_4285
mod = relay.transform.InferType()(mod)
output = func_4285()
func_4286 = relay.Function([], output)
mutated_mod['func_4286'] = func_4286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3103_call = mod.get_global_var('func_3103')
func_3104_call = mutated_mod.get_global_var('func_3104')
call_4315 = relay.TupleGetItem(func_3103_call(), 0)
call_4316 = relay.TupleGetItem(func_3104_call(), 0)
const_4322 = relay.const([[[False,False,False,True,False,True,False,True,False,True,True,True,False,False,False],[False,True,False,False,True,False,False,True,False,True,False,True,True,False,False],[True,False,False,False,False,False,True,False,True,True,True,True,False,False,True],[False,False,False,False,False,True,False,True,False,True,False,False,False,True,True],[False,True,True,False,True,True,True,False,False,False,False,True,True,False,True],[False,True,True,False,True,False,True,False,True,True,True,True,False,True,False]],[[True,False,True,False,False,False,False,True,True,False,False,True,True,True,True],[True,False,False,False,False,False,False,False,False,True,True,True,False,True,False],[True,False,False,False,True,True,True,True,False,False,True,False,True,False,False],[False,True,False,True,False,False,True,False,False,True,False,False,False,False,True],[False,True,False,True,False,True,False,True,False,False,True,True,True,False,True],[True,False,True,True,True,True,True,False,True,False,True,True,False,True,False]],[[True,False,True,True,True,True,False,True,False,False,True,True,True,False,True],[True,True,False,False,False,True,True,False,False,False,False,True,False,False,True],[False,True,True,True,True,False,True,True,True,True,False,False,True,True,True],[False,False,False,False,False,True,False,True,True,False,False,True,True,False,True],[False,False,False,True,True,True,True,False,True,False,False,True,True,True,False],[False,True,True,False,False,True,True,False,True,False,False,True,True,True,True]]], dtype = "bool")#candidate|4322|(3, 6, 15)|const|bool
bop_4323 = relay.floor_mod(call_4315.astype('float32'), relay.reshape(const_4322.astype('float32'), relay.shape_of(call_4315))) # shape=(3, 6, 15)
bop_4326 = relay.floor_mod(call_4316.astype('float32'), relay.reshape(const_4322.astype('float32'), relay.shape_of(call_4316))) # shape=(3, 6, 15)
func_3103_call = mod.get_global_var('func_3103')
func_3104_call = mutated_mod.get_global_var('func_3104')
call_4330 = relay.TupleGetItem(func_3103_call(), 0)
call_4331 = relay.TupleGetItem(func_3104_call(), 0)
output = relay.Tuple([bop_4323,call_4330,])
output2 = relay.Tuple([bop_4326,call_4331,])
func_4336 = relay.Function([], output)
mod['func_4336'] = func_4336
mod = relay.transform.InferType()(mod)
output = func_4336()
func_4337 = relay.Function([], output)
mutated_mod['func_4337'] = func_4337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2423_call = mod.get_global_var('func_2423')
func_2424_call = mutated_mod.get_global_var('func_2424')
call_4348 = func_2423_call()
call_4349 = func_2423_call()
output = call_4348
output2 = call_4349
func_4351 = relay.Function([], output)
mod['func_4351'] = func_4351
mod = relay.transform.InferType()(mod)
mutated_mod['func_4351'] = func_4351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4351_call = mutated_mod.get_global_var('func_4351')
call_4352 = func_4351_call()
output = call_4352
func_4353 = relay.Function([], output)
mutated_mod['func_4353'] = func_4353
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4374 = relay.var("var_4374", dtype = "float32", shape = (1, 3, 3))#candidate|4374|(1, 3, 3)|var|float32
uop_4375 = relay.sqrt(var_4374.astype('float32')) # shape=(1, 3, 3)
const_4377 = relay.const([[[-3.577960,5.134680,-6.124947],[-5.565966,9.798099,-6.693959],[7.192821,9.881560,8.989202]],[[-2.138326,-6.552648,-5.634540],[-4.761016,7.597999,-2.038268],[8.529137,6.100892,1.701542]],[[-3.208519,-9.583223,-0.689162],[-5.049086,-6.329320,-4.677779],[-5.263454,8.326781,8.402030]],[[-8.397498,9.022845,-5.322374],[-3.121968,-6.577170,-6.299199],[0.036257,5.153320,-8.978228]],[[-4.135988,0.741409,-6.770527],[-0.603667,-6.765211,9.788249],[-9.089352,-7.171045,9.125422]],[[2.064510,-1.262762,-9.855009],[0.174338,1.041717,3.411949],[-7.104821,5.327449,-8.810261]],[[-8.820070,-6.645028,-5.040803],[-0.379247,6.638274,-5.091985],[6.673480,-7.180807,3.681211]],[[-6.923786,-2.389486,8.601796],[-6.060250,3.921025,0.557071],[8.984793,4.153871,-7.464867]],[[-3.532754,-9.854031,4.644941],[-6.337525,-1.875252,-7.030306],[8.013333,-5.075736,9.370153]],[[8.524955,-8.470736,5.338200],[-5.723399,9.066585,-3.450490],[9.112474,-2.257501,-9.466340]]], dtype = "float32")#candidate|4377|(10, 3, 3)|const|float32
bop_4378 = relay.greater_equal(uop_4375.astype('bool'), const_4377.astype('bool')) # shape=(10, 3, 3)
func_4197_call = mod.get_global_var('func_4197')
func_4200_call = mutated_mod.get_global_var('func_4200')
var_4386 = relay.var("var_4386", dtype = "float32", shape = ())#candidate|4386|()|var|float32
var_4387 = relay.var("var_4387", dtype = "float32", shape = (210,))#candidate|4387|(210,)|var|float32
call_4385 = relay.TupleGetItem(func_4197_call(relay.reshape(var_4386.astype('float32'), []), relay.reshape(var_4387.astype('float32'), [210,]), ), 0)
call_4388 = relay.TupleGetItem(func_4200_call(relay.reshape(var_4386.astype('float32'), []), relay.reshape(var_4387.astype('float32'), [210,]), ), 0)
output = relay.Tuple([bop_4378,call_4385,var_4386,var_4387,])
output2 = relay.Tuple([bop_4378,call_4388,var_4386,var_4387,])
func_4393 = relay.Function([var_4374,var_4386,var_4387,], output)
mod['func_4393'] = func_4393
mod = relay.transform.InferType()(mod)
mutated_mod['func_4393'] = func_4393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mutated_mod.get_global_var('func_4393')
var_4395 = relay.var("var_4395", dtype = "float32", shape = (1, 3, 3))#candidate|4395|(1, 3, 3)|var|float32
var_4396 = relay.var("var_4396", dtype = "float32", shape = ())#candidate|4396|()|var|float32
var_4397 = relay.var("var_4397", dtype = "float32", shape = (210,))#candidate|4397|(210,)|var|float32
call_4394 = func_4393_call(var_4395,var_4396,var_4397,)
output = call_4394
func_4398 = relay.Function([var_4395,var_4396,var_4397,], output)
mutated_mod['func_4398'] = func_4398
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4419 = relay.const([[[-7,8,-1,3,2,3],[1,5,-10,-6,5,-9],[7,-8,5,2,10,-5],[10,-4,-2,-4,-8,-2],[2,-7,6,-9,-9,9],[-8,7,3,-10,-4,5],[-1,6,8,8,-5,-6],[-10,-3,2,5,5,8],[4,10,4,3,-4,7],[-6,-1,-1,-4,-2,1],[1,5,-6,5,-5,-9],[10,-6,-2,8,1,10]],[[6,2,3,3,-9,-3],[3,6,-2,-7,-8,9],[-10,-7,6,-5,-3,2],[2,1,6,-6,-1,9],[9,8,-10,5,-5,5],[2,-4,6,-1,3,-10],[6,-10,-8,2,4,5],[8,6,-2,5,-10,9],[6,6,1,-8,2,8],[4,9,2,2,2,5],[10,2,-10,-5,10,-6],[7,-2,10,1,9,-2]]], dtype = "int16")#candidate|4419|(2, 12, 6)|const|int16
var_4420 = relay.var("var_4420", dtype = "int16", shape = (2, 12, 6))#candidate|4420|(2, 12, 6)|var|int16
bop_4421 = relay.bitwise_xor(const_4419.astype('int16'), relay.reshape(var_4420.astype('int16'), relay.shape_of(const_4419))) # shape=(2, 12, 6)
output = bop_4421
output2 = bop_4421
func_4429 = relay.Function([var_4420,], output)
mod['func_4429'] = func_4429
mod = relay.transform.InferType()(mod)
mutated_mod['func_4429'] = func_4429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4430 = relay.var("var_4430", dtype = "int16", shape = (2, 12, 6))#candidate|4430|(2, 12, 6)|var|int16
func_4429_call = mutated_mod.get_global_var('func_4429')
call_4431 = func_4429_call(var_4430)
output = call_4431
func_4432 = relay.Function([var_4430], output)
mutated_mod['func_4432'] = func_4432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4452 = relay.var("var_4452", dtype = "float32", shape = (12, 13, 12))#candidate|4452|(12, 13, 12)|var|float32
uop_4453 = relay.sinh(var_4452.astype('float32')) # shape=(12, 13, 12)
output = relay.Tuple([uop_4453,])
output2 = relay.Tuple([uop_4453,])
func_4455 = relay.Function([var_4452,], output)
mod['func_4455'] = func_4455
mod = relay.transform.InferType()(mod)
mutated_mod['func_4455'] = func_4455
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4456 = relay.var("var_4456", dtype = "float32", shape = (12, 13, 12))#candidate|4456|(12, 13, 12)|var|float32
func_4455_call = mutated_mod.get_global_var('func_4455')
call_4457 = func_4455_call(var_4456)
output = call_4457
func_4458 = relay.Function([var_4456], output)
mutated_mod['func_4458'] = func_4458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3103_call = mod.get_global_var('func_3103')
func_3104_call = mutated_mod.get_global_var('func_3104')
call_4499 = relay.TupleGetItem(func_3103_call(), 0)
call_4500 = relay.TupleGetItem(func_3104_call(), 0)
func_2432_call = mod.get_global_var('func_2432')
func_2433_call = mutated_mod.get_global_var('func_2433')
call_4505 = func_2432_call()
call_4506 = func_2432_call()
func_3509_call = mod.get_global_var('func_3509')
func_3512_call = mutated_mod.get_global_var('func_3512')
call_4510 = relay.TupleGetItem(func_3509_call(relay.reshape(call_4505.astype('float32'), [3, 6, 15])), 0)
call_4511 = relay.TupleGetItem(func_3512_call(relay.reshape(call_4505.astype('float32'), [3, 6, 15])), 0)
uop_4515 = relay.cosh(call_4510.astype('float32')) # shape=(3, 6, 15)
uop_4517 = relay.cosh(call_4511.astype('float32')) # shape=(3, 6, 15)
output = relay.Tuple([call_4499,call_4505,uop_4515,])
output2 = relay.Tuple([call_4500,call_4506,uop_4517,])
func_4522 = relay.Function([], output)
mod['func_4522'] = func_4522
mod = relay.transform.InferType()(mod)
mutated_mod['func_4522'] = func_4522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4522_call = mutated_mod.get_global_var('func_4522')
call_4523 = func_4522_call()
output = call_4523
func_4524 = relay.Function([], output)
mutated_mod['func_4524'] = func_4524
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4555 = relay.const([[[0.849643,-3.177789,3.816492,-7.314064,9.342036,-5.484391,8.588633,-0.679114,-4.107281,0.939166,0.579747,2.305471,-6.786703],[-1.512886,-3.468134,-0.641163,-8.102317,6.780506,-2.461232,-9.604924,4.148740,2.543226,0.027714,2.010109,-8.206554,-4.518705],[-8.127556,7.511769,3.568039,-7.316014,1.340686,-3.226932,5.493445,-7.507015,1.455779,-8.435979,0.390257,4.992537,0.446014],[-8.445077,0.591229,3.506990,-8.870531,5.415686,-6.205163,3.453647,-1.123429,-3.519724,1.938397,7.632628,2.503911,8.763251],[9.015928,2.524561,7.039704,3.880940,-9.559177,-2.287081,4.270957,1.963458,2.371538,5.782405,-8.234288,-2.354099,-8.082928],[-5.589156,9.155514,-5.601582,7.490841,0.830032,1.370715,0.184232,-6.954769,-6.647476,5.898827,9.213209,-8.935893,-8.563565],[-6.975879,-9.046951,-3.837566,-2.872483,9.672063,5.501273,-8.174468,2.762658,8.381285,-6.301063,3.218485,5.207628,-8.047296],[5.714535,5.148348,6.944622,-1.624039,2.535520,-7.130398,-9.721323,-9.047363,-8.794237,5.039895,0.835073,4.599682,-4.639759],[-3.404821,5.642387,-3.527497,-4.921940,1.090963,-8.325584,4.840442,-1.730385,8.671267,3.807214,-7.161484,1.054963,-8.650425],[-7.590765,-4.741756,-8.675904,-9.748255,5.019392,-0.410886,2.902463,8.607336,-1.093282,9.154802,-6.217877,8.222829,-0.065057],[-1.440775,2.179398,-1.317265,-6.249464,-6.806867,-1.814925,-5.582707,-6.986560,5.731669,-8.591633,4.467865,5.916243,-4.020002],[3.269828,-4.105409,7.162756,9.471337,9.462587,8.249509,-3.165145,-9.677102,-6.631481,-6.197800,6.410498,-6.843289,-2.620122]],[[-0.147822,-7.773819,-5.752513,4.122310,-7.281751,8.346888,3.692563,5.666511,-5.339483,3.620490,-1.356454,5.009114,-5.533236],[-4.393444,9.991697,-5.371152,2.116307,-5.440730,-2.992047,-3.969889,-1.954961,9.177822,-9.686719,-7.293282,-5.599262,4.357492],[-0.174258,-3.607162,7.553997,5.426720,3.174003,7.082147,0.383873,-9.006495,5.563062,-3.833864,-4.255430,9.541132,-2.826919],[1.267291,8.974385,-9.222914,-2.605301,-2.786919,6.531468,-1.353258,6.568682,0.411349,4.440084,2.901550,-7.911842,-8.742627],[0.027107,6.264244,-1.035590,-8.075584,4.875502,7.602741,1.156774,-8.129941,1.120274,-3.454889,-8.023391,8.634369,5.740416],[-1.982957,-7.213447,8.844427,-9.785639,-6.526404,0.995458,2.970464,3.704604,-8.714785,-3.900356,4.055136,8.201241,3.947434],[-3.876052,6.983248,6.350400,8.079448,2.778746,5.639074,-7.359020,-6.629194,-9.581863,-3.682255,-5.195954,9.052084,6.920386],[-9.352109,-6.147350,-0.559383,6.437842,-9.621019,6.109306,-0.793130,-6.537600,9.231698,2.454570,5.642378,3.492216,5.026198],[-0.645319,-7.749062,-2.353228,8.713842,-0.189182,6.771080,4.798526,-2.055318,6.131641,2.476628,-2.325997,-1.521396,-4.061264],[-1.375807,-7.957772,6.870759,-3.401097,-5.498717,7.916201,1.261950,-3.918237,1.208430,-5.936502,-1.092655,-5.746659,-4.568606],[-7.622184,2.535064,-4.768478,-2.728423,2.442217,8.971826,-3.487285,-3.008344,4.140865,1.672311,-6.400771,-3.923277,3.883107],[1.277835,-1.210125,-2.442591,-5.704205,-2.516563,2.648502,5.905501,-9.647965,-1.801010,4.348627,-4.892027,-0.745847,-3.433891]],[[-9.235616,-2.060689,3.840826,-6.324272,6.314344,3.467849,-9.451363,-5.809672,-0.688529,-7.646782,-8.456162,2.091032,-4.513310],[6.862288,-0.435611,8.341431,-3.113147,-8.120176,3.075682,8.378434,1.060427,7.731205,-9.317483,-6.474252,1.240265,-8.388861],[0.299940,6.489003,3.458074,3.358446,-6.980012,7.393535,-9.254005,4.266169,-8.143635,-5.594784,5.567476,7.306845,3.136888],[-6.525970,-7.436449,-6.350205,1.388923,1.966528,-1.049898,-1.653834,-5.344798,9.489517,3.765665,-0.605711,-5.802311,4.322126],[-1.924119,5.879621,-1.919210,7.109340,-6.727438,4.247575,2.027295,3.251709,7.154509,3.158858,2.325352,-7.166481,4.782242],[-4.787961,7.485087,2.804386,-7.567485,3.633830,-0.910188,9.515707,-4.125194,-3.875406,-3.626105,-8.493643,3.048696,0.300987],[-1.831774,4.683999,-7.178156,6.040970,-2.970666,-9.804704,-7.459735,1.129293,-1.773207,3.029707,5.037725,-8.407357,0.448522],[3.353594,-7.526127,0.108013,-0.595255,-3.121673,-3.202452,-0.923298,-7.374048,6.594953,-5.965035,-9.308800,-9.605440,-7.157976],[1.794017,0.290127,5.927720,-9.370859,2.687691,-1.515702,-5.602990,-8.098569,1.689577,5.205321,6.717414,-6.520046,-3.928340],[-5.074152,-9.334568,-1.072268,-1.860236,2.760298,0.333692,1.400099,2.887079,-2.221826,1.227611,7.581958,-4.390104,-4.066521],[3.227273,8.737207,5.511541,-5.571891,-6.327720,-7.791457,-9.507803,-4.635143,6.988790,-4.020239,-1.009752,-6.041233,-6.778702],[-1.978542,9.381384,-3.946009,7.648842,-2.263086,-0.730385,-3.266086,4.871381,4.807807,-7.050347,3.220330,2.518995,5.377637]]], dtype = "float32")#candidate|4555|(3, 12, 13)|const|float32
uop_4556 = relay.sigmoid(const_4555.astype('float32')) # shape=(3, 12, 13)
output = relay.Tuple([uop_4556,])
output2 = relay.Tuple([uop_4556,])
func_4565 = relay.Function([], output)
mod['func_4565'] = func_4565
mod = relay.transform.InferType()(mod)
mutated_mod['func_4565'] = func_4565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4565_call = mutated_mod.get_global_var('func_4565')
call_4566 = func_4565_call()
output = call_4566
func_4567 = relay.Function([], output)
mutated_mod['func_4567'] = func_4567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4336_call = mod.get_global_var('func_4336')
func_4337_call = mutated_mod.get_global_var('func_4337')
call_4570 = relay.TupleGetItem(func_4336_call(), 0)
call_4571 = relay.TupleGetItem(func_4337_call(), 0)
uop_4573 = relay.asinh(call_4570.astype('float32')) # shape=(3, 6, 15)
uop_4575 = relay.asinh(call_4571.astype('float32')) # shape=(3, 6, 15)
output = uop_4573
output2 = uop_4575
func_4578 = relay.Function([], output)
mod['func_4578'] = func_4578
mod = relay.transform.InferType()(mod)
output = func_4578()
func_4579 = relay.Function([], output)
mutated_mod['func_4579'] = func_4579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4351_call = mod.get_global_var('func_4351')
func_4353_call = mutated_mod.get_global_var('func_4353')
call_4671 = func_4351_call()
call_4672 = func_4351_call()
func_1247_call = mod.get_global_var('func_1247')
func_1250_call = mutated_mod.get_global_var('func_1250')
var_4686 = relay.var("var_4686", dtype = "float32", shape = (1260,))#candidate|4686|(1260,)|var|float32
call_4685 = relay.TupleGetItem(func_1247_call(relay.reshape(var_4686.astype('float32'), [14, 6, 15])), 0)
call_4687 = relay.TupleGetItem(func_1250_call(relay.reshape(var_4686.astype('float32'), [14, 6, 15])), 0)
func_1422_call = mod.get_global_var('func_1422')
func_1426_call = mutated_mod.get_global_var('func_1426')
var_4697 = relay.var("var_4697", dtype = "float64", shape = (891,))#candidate|4697|(891,)|var|float64
const_4698 = relay.const([[0.082864,5.743236,4.088292,4.276998,-5.105975,-1.113960,3.291009,2.219273,-9.229031,5.183907,-9.530801,-2.460277,2.872398,0.579908,-7.120221,4.876547,1.936392,-9.211340,6.043138,3.872705,-4.237316,-3.977397,-3.507583,1.884671,-0.760369,-3.056010,-5.694325,-1.069700,8.684025,3.373209,7.061174,8.057323,7.375295,6.593143,4.953290,-1.839979,-7.530140,4.963942,8.078231,7.601140,5.635532,-8.545351,7.124634,-9.061510,0.281240,-7.826800,-9.481616,8.636182,8.316199,-5.972355,8.185744,-2.574775,9.058782,-5.403597,-1.825942,-4.462195,-7.821722,5.397217,-8.340887,-8.662122,6.438705,-9.485594,-2.029139,7.966327,-5.996314,1.753314,-0.138774,0.749702,4.539468,-6.913180,-1.943847,-6.371777,-1.859576,-0.069605,3.068378,-0.204154,3.822375,-4.018988,-6.503552,8.798327,-8.081195,4.926790,-8.823025,-6.941856,-8.970177,1.943398,-5.094612,8.399141,1.601729,5.335174,-0.680986,6.083957,-1.652215,-3.690036,3.838998,5.995495,-2.380861,-2.899313,9.839591,-2.535597],[-4.478192,-2.913951,9.303865,8.070178,6.227888,3.631321,-5.377489,8.138740,7.397279,7.619698,7.940551,-1.908585,5.956578,-9.694998,0.048583,2.866228,-1.527578,-0.998376,2.093439,-2.406426,-4.882563,1.892707,-1.426933,3.827039,-8.800641,-9.898371,5.809475,7.906567,-0.306380,-8.894310,-4.341068,2.734765,1.013529,2.873204,9.344894,-8.365722,1.167408,-6.219932,-4.466300,5.342869,-4.615544,7.671298,-9.110727,1.437181,-7.224608,6.666480,6.054238,-0.265264,-1.272965,7.431946,3.126208,-2.357641,0.614417,9.057462,-9.941238,-7.205255,-0.655169,6.984083,-1.034457,7.980507,-7.121308,-3.836748,8.038649,-5.814047,-6.309221,8.416699,4.403980,-5.981367,-5.168801,2.161643,1.037224,-6.356408,1.511695,-9.878071,-8.571136,-7.400988,-5.499584,-2.971288,3.629176,-9.009562,-3.406141,-6.496858,9.353514,1.109607,-4.982023,-7.043788,-2.683124,8.230135,-7.022845,-5.401497,-4.027131,3.494785,6.561229,-9.935016,3.538782,-4.482418,8.290189,4.506980,8.108882,-2.942120],[3.442219,0.005896,0.927370,8.303958,4.640702,-4.621972,0.092935,-7.131727,3.649594,4.979911,4.775821,9.843880,-1.749183,3.829287,7.807203,0.446012,6.869670,-1.702115,-6.933610,-5.588723,7.941004,0.668260,7.551751,8.257421,-8.406144,4.365204,-9.078142,-2.102318,1.855717,2.649355,-4.350829,-2.219224,0.487489,-7.538341,-5.542619,8.519931,-7.560186,-1.784731,8.206404,-4.041498,5.080674,1.021961,-1.038494,-8.464498,-7.881011,-7.366529,2.074089,-3.408804,-4.238672,-7.588039,6.830266,-7.434311,-5.697331,8.980101,4.662344,2.335496,4.094950,-5.895076,4.386377,-6.080750,-6.146798,-9.836758,3.227132,8.483799,7.224497,-9.412660,8.915364,-1.525147,-6.770916,9.970740,-7.299955,-9.996711,-0.289082,1.606751,8.980166,3.645385,5.442864,3.659187,-4.393678,-0.461151,-4.626214,-3.468370,0.841941,1.807083,7.327912,9.364156,-0.305121,5.501875,2.585077,-0.262713,-0.501560,-8.221873,4.218862,-2.258244,-3.277306,9.657853,-1.957080,2.507497,4.329159,2.164134],[0.951902,-0.626561,-1.912337,-7.277997,-3.485505,-8.228672,-3.901153,-7.243886,1.638724,6.611787,5.192960,-6.373193,9.201551,-8.743624,8.722746,7.935781,-4.006144,-8.897630,5.859265,-5.901928,3.320385,8.737631,-1.978324,1.593792,-6.771675,1.178456,7.310193,1.318674,6.497796,6.844251,6.170523,-1.984374,-7.959636,-8.805953,8.367981,-4.809674,-2.034063,8.409547,0.109177,-6.071659,3.247270,-3.030377,5.866218,3.549471,1.990655,3.819887,9.351560,-3.509830,-6.104758,-7.134452,-7.180001,-2.570973,-9.238676,6.190146,-6.298816,3.331737,0.081998,6.885208,-3.760158,-1.615646,9.470291,-2.394851,0.781422,4.695007,-2.936118,7.033786,-6.339828,0.262092,2.376710,-3.044672,-7.776233,-7.554708,7.930297,-8.273407,-2.322495,8.264833,4.050382,8.391125,1.426079,-9.755882,-5.373846,-1.088156,-2.346615,4.607999,-2.677028,6.093464,5.446985,-6.259359,6.038708,-7.230703,3.179000,-1.906210,-6.211821,9.937310,-9.160867,3.461800,-3.293801,0.009696,2.780798,-9.852481]], dtype = "float64")#candidate|4698|(4, 100)|const|float64
var_4699 = relay.var("var_4699", dtype = "bool", shape = (6, 64))#candidate|4699|(6, 64)|var|bool
call_4696 = relay.TupleGetItem(func_1422_call(relay.reshape(var_4697.astype('float64'), [11, 9, 9]), relay.reshape(const_4698.astype('float64'), [400,]), relay.reshape(var_4699.astype('bool'), [384,]), ), 1)
call_4700 = relay.TupleGetItem(func_1426_call(relay.reshape(var_4697.astype('float64'), [11, 9, 9]), relay.reshape(const_4698.astype('float64'), [400,]), relay.reshape(var_4699.astype('bool'), [384,]), ), 1)
func_3665_call = mod.get_global_var('func_3665')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_4705 = relay.TupleGetItem(func_3665_call(), 0)
call_4706 = relay.TupleGetItem(func_3667_call(), 0)
var_4711 = relay.var("var_4711", dtype = "float64", shape = (4, 100))#candidate|4711|(4, 100)|var|float64
bop_4712 = relay.bitwise_xor(const_4698.astype('int64'), relay.reshape(var_4711.astype('int64'), relay.shape_of(const_4698))) # shape=(4, 100)
const_4716 = relay.const([-5.217202,-4.673102,-4.660269,0.362203,-6.376459,-9.976637,6.671551,8.962038,4.282847,5.803320,8.214778,0.656163,9.304578,3.997516,6.632017,5.999961,-1.357680,9.550394,-3.683405,6.028834,0.202474,3.619643,-0.335250,2.686223,0.742078,-7.647208,-9.922429,-6.386704,5.366471,-5.850468,-4.429710,-2.655699,7.819183,8.222838,5.063146,-3.612552,-7.212448,5.781569,-9.193423,-4.286232,7.239754,8.156669,-8.119554,2.515197,5.209255,-4.584671,8.272839,-8.015321,-0.532372,-3.706815,3.370831,6.761371,9.430986,-2.451960,2.341741,4.520505,1.379930,-1.507323,-0.063297,4.221295,-5.158719,6.841199,0.062967,-6.335187,-4.050811,0.770903,-2.090287,0.956126,5.013848,1.008263,4.839387,-7.549288,7.657101,-8.636210,-3.386582,-7.205552,-4.398133,1.403787,6.894230,3.988598,-8.437807,6.224808,0.682089,-4.158087,-2.045496,5.166264,-3.317006,-0.902814,7.705138,0.394761,5.618963,-1.703874,-6.801507,9.123772,9.099847,0.971090,5.521050,-2.063748,5.108042,7.396442,4.384615,8.594261,-6.171845,0.592536,9.389364,-1.728874,-9.376246,-6.699344,-1.925384,7.293312,-4.471312,4.348406,9.136938,0.760246,3.742759,7.873929,7.264927,-1.371179,-3.232361,4.302874,9.674223,-6.549820,-5.505401,-9.112202,-7.356441,4.141862,-0.733717,-7.825691,-5.967121,-5.951315,2.964633,-2.098603,2.190166,-2.074680,6.013942,1.050651,9.198576,-4.571784,-5.705908,-0.031632,-2.360838,1.968967,8.490021,6.898228,4.134061,1.058800,5.489241,-0.538387,-3.930265,-6.776683,-6.109098,-1.917079,-0.262012,-0.467683,6.181657,0.781916,-1.490481,-3.202111,3.141480,8.889983,-0.404926,4.969753,2.051179,-3.184807,-3.165719,1.127045,-1.988540,3.208602,-8.418407,8.236023,-5.119749,-1.255514,8.055124,-6.160114,-3.751998,-3.544148,-4.430818,-2.656494,8.294836,-9.335526,5.304553,-4.307828,3.991786,-5.477491,1.257569,-3.839102,6.401640,-8.880133,5.262534,2.177484,4.171136,-8.919775,4.444853,8.816035,9.009083,-1.322177,0.154805,-6.302713,-3.780596,-8.234398,-5.863966,-6.001857,4.156531,8.505659,0.234845,-2.714348,-4.486855,4.637532,1.924247,-5.386167,-1.677482,-0.883855,9.571153,-8.878337,8.135697,-1.422408,5.324298,0.806040,4.091701,-3.000984,6.341794,3.488546,4.159231,6.643654,3.579018,-8.167036,9.655392,2.849769,0.179411,-4.677628,5.691154,5.573521,5.995861,6.513892,7.339474,-7.576635,7.723274,-8.245690,-6.021252,0.832217,6.297564,9.529971,-8.711434,3.269943,-9.069825,6.957910,-1.031156,8.671802,4.200529,5.797045,-5.021536,-0.612283,7.146810,-8.747322,-5.974031,-9.473407,1.979006,-0.550469,-7.379944,-5.001873,-0.469202,-5.903316,-2.383099,-5.620378,5.674567,-4.296976,9.318929,9.225380,0.370110,-9.282454,9.124556,8.957887,-4.292642,2.774693,3.800819,-7.335165,7.850098,6.504541,-6.967372,1.302532,5.537816,4.454397,-4.392494,4.774400,-3.284005,-9.804252,-0.281120,0.236270,9.157559,-6.845363,-5.460107,-2.613286,0.429786,0.135100,-2.090525,7.338462,-3.917801,-0.375187,1.547392,-0.272240,-8.123586,-0.745603,-6.195166,3.406705,-0.656988,-9.870466,-2.051280,-6.967958,-9.623111,4.747722,-3.987490,-7.657004,0.151864,-8.691902,1.534720,4.334641,0.843780,-2.376187,4.968630,2.198547,7.982166,-0.070764,4.107625,-8.059903,-4.701691,-4.495762,-8.778084,1.251221,0.726696,8.481552,-3.899581,-0.376438,-3.705773,5.797793,3.250378,7.829755,-6.657152,-6.419129,-6.884785,-1.035651,1.119849,6.842788,6.929562,8.705674,-2.812176,4.083472,0.630838,-2.266078,4.034651,9.559557,3.929478,5.969906,-5.120039,2.828783,-6.188091,3.696050,-9.085217,-2.579514,2.310210,-4.284329,-3.614290,-9.068490,-6.019776,3.208312,-7.706378,-0.694958,7.553104,-9.183322,8.392638,-2.369384,6.319056,7.836715,-5.366707,9.681391,-3.714548,-5.553069,-4.040975,-1.990627,3.599939,-3.734106,4.584846,4.506330,-5.372348,-8.634862,0.894699,-9.419615,1.740526,-4.802818,9.949759,9.679606,-7.136108,-3.275019,1.021719,0.977648,-2.391921,-2.307341,-8.925474,-4.819469,1.382287,-8.863387,6.843983,5.374340,0.044060,-9.276855,-0.470608,-0.189638,6.407280,8.280221,5.604183,-4.578177,-0.464817,2.598760,-0.333002,4.558460,7.326789,0.265071,-1.005916,7.979474,-8.792780,-5.474532,5.253281,6.016885,9.152304,8.386952,8.667514,-6.866441,7.696377,-5.559020,9.144670,8.808593,-9.670209,5.041533,-8.794842,-6.541707,0.498165,4.233377,3.802363,1.299677,0.082029,5.610028,-7.352267,-0.588591,-4.093445,-4.095087,-4.328410,-0.644588,-3.720379,-9.535732,-6.553182,6.463417,7.527696,-1.511370,-2.024328,-4.327555,0.850739,-7.051131,1.365499,6.570396,-9.415477,-3.811509,3.809391,0.055486,-1.818383,-4.243242,-7.226216,-3.290253,-1.565432,-2.381528,4.754859,-8.785609,-5.880626,-1.666710,9.669006,9.614382,0.457581,3.753508,-6.392085,-6.288775,-4.910786,8.089720,7.796910,-4.461636,1.747746,-4.666720,3.044112,3.880434,2.432462,-5.795792,1.791135,-1.564466,1.127823,7.206646,-5.328603,-4.362425,9.672429,1.172612,-0.169635,-2.627665,-3.985661,-6.261466,-4.233915,-5.771293,2.602276,-8.718375,-3.790489,-2.602844,-9.578249,-6.257025,2.700901,0.489122,-6.824368,1.708441,5.190764,-8.909220,-3.478676,7.078977,-8.434477,2.487987,-3.482457,-0.428284,-8.566872,-8.007640,2.124763,-1.039662,-4.645574,0.334042,-7.844810,2.536525,-4.645861,-6.792134,-1.302895,8.726742,8.879855,-5.197407,6.250939,-1.586872,0.567671,-9.557485,4.037243,-3.024694,2.612731,0.418641,-0.744115,1.993488,-6.680518,-0.854410,4.747018,-6.476372,-6.954281,1.756937,5.196793,3.027892,-6.303693,2.824988,-3.437107,5.978058,9.796869,-4.730679,8.068543,0.542049,4.907876,-9.426159,5.124999,3.691714,-3.984309,9.066192,-9.653435,-1.135662,3.671643,6.069916,1.622989,9.396294,0.731420,4.009512,6.385914,-5.932405,-8.506972,9.906236,8.794001,7.592267,6.326591,-8.293230,4.939656,8.525858,-2.635423,3.419158,6.773615,1.771202,-0.851764,-0.293215,2.046267,-9.587532,0.181657,0.797585,-7.937684,-6.373546,-5.324439,6.759197,-0.836386,-7.277176,8.764173,-8.603292,-6.147607,9.937803,-8.655456,-1.460504,6.066895,0.623245,-1.765871,6.365961,2.556333,9.789205,-3.197928,-4.362024,1.169395,-4.447564,-6.505837,8.303024,-1.028138,5.478725,-7.493399,-2.074195,-9.220755,8.611553,-3.396760,0.218264,-2.411869,4.471291,0.821043,3.274377,-0.483529,-9.556109,5.810382,4.082851,-8.061446,-0.509997,-4.882637,-1.643950,0.615493,-7.597370,5.499161,3.183841,-6.333425,-7.343402,-6.250384,-6.591695,8.522319,4.384855,-3.418505,-6.757418,3.372182,-5.629460,8.928025,-7.915016,-9.163208,8.542099,-0.320961,9.165155,9.378907,7.327435,-7.448909,2.388320,-2.501569,-5.048443,0.439904,6.944432,2.365975,7.138234,0.813299,8.778593,-9.396746,9.031713,-2.158241,2.631860,-7.600648,1.736588,-1.431969,4.501900,-4.507686,1.442160,-8.312258,-7.443518,-5.781215,4.226704,-9.137543,6.481657,1.708116,0.348668,-2.479083,9.900781,3.950908,2.413281,9.583224,-9.554880,-7.300181,-1.681170,8.148572,-5.763696,-3.240719,6.000740,0.475524,5.073099,4.293791,-0.763184,4.853438,-9.189186,-4.711655,-4.240879,-6.057134,5.931954,-5.148937,-1.858938,2.949233,-6.377866,-5.140318,-9.288527,-3.590988,-1.971520,-4.979067,1.932320,-1.337551,8.059793,6.366213,4.161640,-2.775674,-0.539234,-9.608617,-2.309953,-2.764044,2.157949,-4.974698,-6.724917,2.380137,-2.847091,4.186428,6.973993,-8.476077,-7.027540,-8.460470,2.730804,3.386631,2.819419,-9.878727,5.455034,-6.509681,0.716913,-4.828155,-9.795187,-2.752831,1.065695,-4.626203,-5.466761,2.283665,3.511479,-9.709611,4.724508,-3.555527,0.884467,-5.730005,8.974397,5.785218,-7.809074,-1.902853,1.638140,6.103333,-3.087986,5.472619,-7.784170,-3.190458,-6.076351,5.131283,-2.434632,-2.627879,-5.018913,-8.419096,-4.942195,1.697760,8.029610,6.976928,-2.380453,5.047228,-5.896550,9.740260,-6.285151,-2.757287,-3.228276,-6.279080,-2.866077,-4.593180,9.142475,-9.608245,-0.742466,-8.921385,-2.290783,-9.625121,3.762503,6.819171,-3.379264,-0.845376,-2.787386,4.712391,-6.127819,7.725258,6.981848,-4.007764,-4.216726,-8.865355,-0.541205,-3.745476,-5.096809,4.485561,5.345968,0.370994,-4.589441,-7.826397,4.140388,5.492611,4.079667,-0.396419,8.533744,3.861154,3.329334,-8.112804,1.935832,-7.899996,-5.437886,3.055528,9.324160,7.327551,-0.601024,-4.076150,-2.570388,-0.669987,1.643506,-1.004716,7.033468,-3.577202,8.470888,-9.891609,-6.219640,-6.387176,-6.899463,-7.088628,-2.929731,1.766012,0.939400,-3.865102,-3.981941,5.770437,8.708835,-3.884892,0.416002,-9.963839,4.128718,5.414913,0.530111,-2.435064,3.053231,9.271484,5.066581,4.522126,9.723894,-1.540211,-7.632289,9.786206,8.863915,-2.420333,-6.553556,7.025074,4.462081,9.181858,-7.006731,-2.224773,-2.870968,1.437318,7.484641,-9.259381,2.255914,-6.746484,-3.831870,9.405237,8.415479,7.380643,-4.924564,1.586162,0.270453,5.598870,8.149578,-4.866869,6.967436,5.193384], dtype = "float64")#candidate|4716|(891,)|const|float64
bop_4717 = relay.bitwise_or(var_4697.astype('uint64'), relay.reshape(const_4716.astype('uint64'), relay.shape_of(var_4697))) # shape=(891,)
bop_4732 = relay.logical_xor(var_4711.astype('uint16'), relay.reshape(const_4698.astype('uint16'), relay.shape_of(var_4711))) # shape=(4, 100)
func_3309_call = mod.get_global_var('func_3309')
func_3311_call = mutated_mod.get_global_var('func_3311')
var_4745 = relay.var("var_4745", dtype = "float64", shape = (16,))#candidate|4745|(16,)|var|float64
call_4744 = relay.TupleGetItem(func_3309_call(relay.reshape(var_4745.astype('float64'), [4, 2, 2])), 1)
call_4746 = relay.TupleGetItem(func_3311_call(relay.reshape(var_4745.astype('float64'), [4, 2, 2])), 1)
bop_4751 = relay.power(bop_4717.astype('float32'), relay.reshape(call_4696.astype('float32'), relay.shape_of(bop_4717))) # shape=(891,)
bop_4754 = relay.power(bop_4717.astype('float32'), relay.reshape(call_4700.astype('float32'), relay.shape_of(bop_4717))) # shape=(891,)
output = relay.Tuple([call_4671,call_4685,var_4686,var_4699,call_4705,bop_4712,bop_4732,call_4744,var_4745,bop_4751,])
output2 = relay.Tuple([call_4672,call_4687,var_4686,var_4699,call_4706,bop_4712,bop_4732,call_4746,var_4745,bop_4754,])
func_4757 = relay.Function([var_4686,var_4697,var_4699,var_4711,var_4745,], output)
mod['func_4757'] = func_4757
mod = relay.transform.InferType()(mod)
var_4758 = relay.var("var_4758", dtype = "float32", shape = (1260,))#candidate|4758|(1260,)|var|float32
var_4759 = relay.var("var_4759", dtype = "float64", shape = (891,))#candidate|4759|(891,)|var|float64
var_4760 = relay.var("var_4760", dtype = "bool", shape = (6, 64))#candidate|4760|(6, 64)|var|bool
var_4761 = relay.var("var_4761", dtype = "float64", shape = (4, 100))#candidate|4761|(4, 100)|var|float64
var_4762 = relay.var("var_4762", dtype = "float64", shape = (16,))#candidate|4762|(16,)|var|float64
output = func_4757(var_4758,var_4759,var_4760,var_4761,var_4762,)
func_4763 = relay.Function([var_4758,var_4759,var_4760,var_4761,var_4762,], output)
mutated_mod['func_4763'] = func_4763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4163_call = mod.get_global_var('func_4163')
func_4164_call = mutated_mod.get_global_var('func_4164')
call_4787 = relay.TupleGetItem(func_4163_call(), 0)
call_4788 = relay.TupleGetItem(func_4164_call(), 0)
output = relay.Tuple([call_4787,])
output2 = relay.Tuple([call_4788,])
func_4789 = relay.Function([], output)
mod['func_4789'] = func_4789
mod = relay.transform.InferType()(mod)
output = func_4789()
func_4790 = relay.Function([], output)
mutated_mod['func_4790'] = func_4790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3027_call = mod.get_global_var('func_3027')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_4794 = func_3027_call()
call_4795 = func_3027_call()
const_4833 = relay.const([[[True,False,False,False,False,False,False,False,True,False,False,True,False,True,True],[True,False,False,False,True,False,True,True,False,True,False,True,True,True,True],[True,True,True,True,True,False,False,True,False,True,True,True,False,False,False],[True,True,True,False,True,False,False,False,True,False,True,True,True,False,True],[False,False,False,False,True,True,False,True,True,False,True,False,True,True,False],[False,True,True,True,True,False,True,True,True,False,True,False,False,True,True]],[[True,True,True,True,True,False,False,True,False,True,False,True,False,True,False],[False,True,True,False,False,False,False,True,True,True,False,True,False,False,False],[True,True,True,False,False,True,False,False,False,False,False,False,True,False,False],[False,False,True,True,False,False,False,True,True,True,False,True,False,False,True],[False,True,False,False,True,False,True,False,True,True,False,True,False,False,True],[False,False,True,True,True,False,True,True,True,True,True,True,False,True,False]],[[False,False,True,False,False,True,True,True,True,False,False,True,True,False,True],[False,False,True,True,False,True,True,True,False,False,False,True,False,True,True],[False,True,True,True,True,True,False,False,False,True,False,False,True,True,True],[False,True,True,False,True,True,True,False,True,True,True,True,True,True,False],[False,True,True,True,False,True,False,True,True,False,False,False,False,True,True],[True,False,True,True,False,False,False,True,False,True,False,True,True,True,False]]], dtype = "bool")#candidate|4833|(3, 6, 15)|const|bool
bop_4834 = relay.bitwise_and(call_4794.astype('int64'), relay.reshape(const_4833.astype('int64'), relay.shape_of(call_4794))) # shape=(3, 6, 15)
bop_4837 = relay.bitwise_and(call_4795.astype('int64'), relay.reshape(const_4833.astype('int64'), relay.shape_of(call_4795))) # shape=(3, 6, 15)
output = bop_4834
output2 = bop_4837
func_4844 = relay.Function([], output)
mod['func_4844'] = func_4844
mod = relay.transform.InferType()(mod)
mutated_mod['func_4844'] = func_4844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4844_call = mutated_mod.get_global_var('func_4844')
call_4845 = func_4844_call()
output = call_4845
func_4846 = relay.Function([], output)
mutated_mod['func_4846'] = func_4846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_4885 = relay.TupleGetItem(func_2815_call(), 0)
call_4886 = relay.TupleGetItem(func_2817_call(), 0)
uop_4901 = relay.exp(call_4885.astype('float32')) # shape=(3, 6, 15)
uop_4903 = relay.exp(call_4886.astype('float32')) # shape=(3, 6, 15)
func_4455_call = mod.get_global_var('func_4455')
func_4458_call = mutated_mod.get_global_var('func_4458')
var_4910 = relay.var("var_4910", dtype = "float32", shape = (2, 936))#candidate|4910|(2, 936)|var|float32
call_4909 = relay.TupleGetItem(func_4455_call(relay.reshape(var_4910.astype('float32'), [12, 13, 12])), 0)
call_4911 = relay.TupleGetItem(func_4458_call(relay.reshape(var_4910.astype('float32'), [12, 13, 12])), 0)
func_4565_call = mod.get_global_var('func_4565')
func_4567_call = mutated_mod.get_global_var('func_4567')
call_4913 = relay.TupleGetItem(func_4565_call(), 0)
call_4914 = relay.TupleGetItem(func_4567_call(), 0)
var_4917 = relay.var("var_4917", dtype = "float32", shape = (3, 12, 13))#candidate|4917|(3, 12, 13)|var|float32
bop_4918 = relay.floor_divide(call_4913.astype('float64'), relay.reshape(var_4917.astype('float64'), relay.shape_of(call_4913))) # shape=(3, 12, 13)
bop_4921 = relay.floor_divide(call_4914.astype('float64'), relay.reshape(var_4917.astype('float64'), relay.shape_of(call_4914))) # shape=(3, 12, 13)
func_1422_call = mod.get_global_var('func_1422')
func_1426_call = mutated_mod.get_global_var('func_1426')
var_4930 = relay.var("var_4930", dtype = "float64", shape = (891,))#candidate|4930|(891,)|var|float64
var_4931 = relay.var("var_4931", dtype = "float64", shape = (400,))#candidate|4931|(400,)|var|float64
const_4932 = relay.const([True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True], dtype = "bool")#candidate|4932|(384,)|const|bool
call_4929 = relay.TupleGetItem(func_1422_call(relay.reshape(var_4930.astype('float64'), [11, 9, 9]), relay.reshape(var_4931.astype('float64'), [400,]), relay.reshape(const_4932.astype('bool'), [384,]), ), 3)
call_4933 = relay.TupleGetItem(func_1426_call(relay.reshape(var_4930.astype('float64'), [11, 9, 9]), relay.reshape(var_4931.astype('float64'), [400,]), relay.reshape(const_4932.astype('bool'), [384,]), ), 3)
uop_4939 = relay.log2(uop_4901.astype('float64')) # shape=(3, 6, 15)
uop_4941 = relay.log2(uop_4903.astype('float64')) # shape=(3, 6, 15)
func_3027_call = mod.get_global_var('func_3027')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_4946 = func_3027_call()
call_4947 = func_3027_call()
func_3076_call = mod.get_global_var('func_3076')
func_3078_call = mutated_mod.get_global_var('func_3078')
call_4950 = relay.TupleGetItem(func_3076_call(), 0)
call_4951 = relay.TupleGetItem(func_3078_call(), 0)
func_2921_call = mod.get_global_var('func_2921')
func_2927_call = mutated_mod.get_global_var('func_2927')
call_4968 = relay.TupleGetItem(func_2921_call(relay.reshape(call_4946.astype('bool'), [3, 6, 15]), relay.reshape(var_4930.astype('float64'), [891,]), relay.reshape(var_4931.astype('float64'), [400,]), relay.reshape(call_4929.astype('float64'), [400,]), ), 0)
call_4969 = relay.TupleGetItem(func_2927_call(relay.reshape(call_4946.astype('bool'), [3, 6, 15]), relay.reshape(var_4930.astype('float64'), [891,]), relay.reshape(var_4931.astype('float64'), [400,]), relay.reshape(call_4929.astype('float64'), [400,]), ), 0)
func_4757_call = mod.get_global_var('func_4757')
func_4763_call = mutated_mod.get_global_var('func_4763')
var_4977 = relay.var("var_4977", dtype = "float32", shape = (1260,))#candidate|4977|(1260,)|var|float32
const_4978 = relay.const([[3.688632,-6.685933,0.506505,-2.643851],[-3.662015,-7.199403,-2.809964,5.840469],[5.177489,4.353933,6.729399,7.067422],[1.931615,6.949711,4.950839,-6.998764]], dtype = "float64")#candidate|4978|(4, 4)|const|float64
call_4976 = relay.TupleGetItem(func_4757_call(relay.reshape(var_4977.astype('float32'), [1260,]), relay.reshape(call_4968.astype('float64'), [891,]), relay.reshape(const_4932.astype('bool'), [6, 64]), relay.reshape(call_4929.astype('float64'), [4, 100]), relay.reshape(const_4978.astype('float64'), [16,]), ), 9)
call_4979 = relay.TupleGetItem(func_4763_call(relay.reshape(var_4977.astype('float32'), [1260,]), relay.reshape(call_4968.astype('float64'), [891,]), relay.reshape(const_4932.astype('bool'), [6, 64]), relay.reshape(call_4929.astype('float64'), [4, 100]), relay.reshape(const_4978.astype('float64'), [16,]), ), 9)
output = relay.Tuple([call_4909,var_4910,bop_4918,call_4929,var_4930,var_4931,const_4932,uop_4939,call_4946,call_4950,call_4968,call_4976,var_4977,const_4978,])
output2 = relay.Tuple([call_4911,var_4910,bop_4921,call_4933,var_4930,var_4931,const_4932,uop_4941,call_4947,call_4951,call_4969,call_4979,var_4977,const_4978,])
func_4983 = relay.Function([var_4910,var_4917,var_4930,var_4931,var_4977,], output)
mod['func_4983'] = func_4983
mod = relay.transform.InferType()(mod)
var_4984 = relay.var("var_4984", dtype = "float32", shape = (2, 936))#candidate|4984|(2, 936)|var|float32
var_4985 = relay.var("var_4985", dtype = "float32", shape = (3, 12, 13))#candidate|4985|(3, 12, 13)|var|float32
var_4986 = relay.var("var_4986", dtype = "float64", shape = (891,))#candidate|4986|(891,)|var|float64
var_4987 = relay.var("var_4987", dtype = "float64", shape = (400,))#candidate|4987|(400,)|var|float64
var_4988 = relay.var("var_4988", dtype = "float32", shape = (1260,))#candidate|4988|(1260,)|var|float32
output = func_4983(var_4984,var_4985,var_4986,var_4987,var_4988,)
func_4989 = relay.Function([var_4984,var_4985,var_4986,var_4987,var_4988,], output)
mutated_mod['func_4989'] = func_4989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4844_call = mod.get_global_var('func_4844')
func_4846_call = mutated_mod.get_global_var('func_4846')
call_5020 = func_4844_call()
call_5021 = func_4844_call()
output = relay.Tuple([call_5020,])
output2 = relay.Tuple([call_5021,])
func_5022 = relay.Function([], output)
mod['func_5022'] = func_5022
mod = relay.transform.InferType()(mod)
mutated_mod['func_5022'] = func_5022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5022_call = mutated_mod.get_global_var('func_5022')
call_5023 = func_5022_call()
output = call_5023
func_5024 = relay.Function([], output)
mutated_mod['func_5024'] = func_5024
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5073 = relay.var("var_5073", dtype = "int32", shape = (3, 15, 14))#candidate|5073|(3, 15, 14)|var|int32
var_5074 = relay.var("var_5074", dtype = "int32", shape = (3, 15, 14))#candidate|5074|(3, 15, 14)|var|int32
bop_5075 = relay.greater(var_5073.astype('bool'), relay.reshape(var_5074.astype('bool'), relay.shape_of(var_5073))) # shape=(3, 15, 14)
bop_5097 = relay.greater_equal(var_5073.astype('bool'), relay.reshape(var_5074.astype('bool'), relay.shape_of(var_5073))) # shape=(3, 15, 14)
var_5103 = relay.var("var_5103", dtype = "bool", shape = (3, 15, 14))#candidate|5103|(3, 15, 14)|var|bool
bop_5104 = relay.left_shift(bop_5075.astype('uint32'), relay.reshape(var_5103.astype('uint32'), relay.shape_of(bop_5075))) # shape=(3, 15, 14)
output = relay.Tuple([bop_5097,bop_5104,])
output2 = relay.Tuple([bop_5097,bop_5104,])
func_5108 = relay.Function([var_5073,var_5074,var_5103,], output)
mod['func_5108'] = func_5108
mod = relay.transform.InferType()(mod)
mutated_mod['func_5108'] = func_5108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5108_call = mutated_mod.get_global_var('func_5108')
var_5110 = relay.var("var_5110", dtype = "int32", shape = (3, 15, 14))#candidate|5110|(3, 15, 14)|var|int32
var_5111 = relay.var("var_5111", dtype = "int32", shape = (3, 15, 14))#candidate|5111|(3, 15, 14)|var|int32
var_5112 = relay.var("var_5112", dtype = "bool", shape = (3, 15, 14))#candidate|5112|(3, 15, 14)|var|bool
call_5109 = func_5108_call(var_5110,var_5111,var_5112,)
output = call_5109
func_5113 = relay.Function([var_5110,var_5111,var_5112,], output)
mutated_mod['func_5113'] = func_5113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5190 = relay.var("var_5190", dtype = "uint32", shape = (10, 4, 13))#candidate|5190|(10, 4, 13)|var|uint32
const_5191 = relay.const([[[-9,5,3,-5,5,-3,-3,-7,4,8,7,2,8],[10,9,-7,6,-6,-8,-3,-2,4,-3,4,-5,9],[-4,5,-2,3,-10,2,2,4,10,-3,-8,-8,9],[8,-4,-8,-7,8,6,3,-4,2,2,6,-7,-2]],[[5,4,4,10,1,4,-10,7,8,2,4,5,-1],[-8,9,1,-2,2,9,3,1,-7,-4,5,-6,-1],[2,-6,9,1,-6,6,9,3,9,9,-5,-10,-1],[-10,-3,-9,9,6,-9,-5,-1,-2,-8,-10,3,8]],[[-6,-9,-3,-5,-2,-9,-10,-8,-4,-4,6,5,5],[1,-5,-7,7,-7,7,-7,6,9,-1,-5,-1,-7],[-8,-1,10,-10,2,3,5,10,-1,2,-10,-3,7],[-5,-8,-5,9,-9,7,1,7,7,-5,6,3,-5]],[[-1,6,-8,-6,7,5,5,-4,-3,2,-10,-4,7],[3,7,2,8,-6,3,5,5,-6,3,-5,-3,-6],[5,8,-7,-1,-10,-4,3,7,6,-5,-3,1,1],[2,-4,-8,6,2,-8,-10,8,-1,8,8,-1,2]],[[6,-1,1,10,2,4,-6,1,-9,-4,-9,-1,-4],[-8,2,2,5,-4,7,-2,1,-6,4,3,-10,-2],[4,5,-2,5,-3,1,-10,-4,8,3,4,8,-7],[-1,8,8,-7,-9,8,-3,1,-10,-1,-8,-2,10]],[[-2,-2,-9,-8,6,-8,10,2,-3,10,-2,-5,-7],[-2,5,3,-2,8,7,8,-3,6,4,-3,4,-9],[6,-9,-10,-9,5,-2,-6,8,-8,7,-1,-7,1],[-1,3,-1,-5,-1,-3,10,4,-5,-4,-4,-1,4]],[[-3,8,10,1,9,-4,4,9,-8,5,5,-2,5],[3,-6,10,9,7,5,-5,-2,1,6,1,-1,6],[8,-4,4,1,-4,3,-8,3,8,10,-6,-4,-10],[-6,1,4,-2,2,-4,7,-3,1,1,-7,-9,9]],[[-7,-10,7,-8,10,10,10,7,7,4,-6,-3,7],[8,-6,-3,-7,10,1,-4,1,10,-8,-5,-2,-4],[4,-7,-5,8,9,6,6,-2,5,-7,-10,8,-5],[2,2,8,-3,-8,10,-2,9,9,-4,-4,8,7]],[[-10,7,-8,5,-5,7,-1,-6,10,2,-4,5,-3],[-8,10,-9,10,8,-5,9,7,7,10,-9,-1,-8],[-5,4,-1,6,-10,2,3,8,-4,-7,3,-8,-7],[-3,-1,3,5,-3,2,8,6,-3,-1,-4,-8,-5]],[[-5,3,-4,-10,7,-1,1,-9,-3,4,-10,-6,-8],[5,5,8,-4,2,9,-3,5,9,9,-8,6,2],[9,-6,-10,4,10,5,-4,4,-1,2,-2,-2,8],[3,-2,-9,-3,-9,-5,-8,6,10,2,-5,-2,9]]], dtype = "uint32")#candidate|5191|(10, 4, 13)|const|uint32
bop_5192 = relay.less(var_5190.astype('bool'), relay.reshape(const_5191.astype('bool'), relay.shape_of(var_5190))) # shape=(10, 4, 13)
func_2996_call = mod.get_global_var('func_2996')
func_2999_call = mutated_mod.get_global_var('func_2999')
var_5199 = relay.var("var_5199", dtype = "float64", shape = (132,))#candidate|5199|(132,)|var|float64
call_5198 = relay.TupleGetItem(func_2996_call(relay.reshape(var_5199.astype('float64'), [6, 11, 2])), 1)
call_5200 = relay.TupleGetItem(func_2999_call(relay.reshape(var_5199.astype('float64'), [6, 11, 2])), 1)
bop_5219 = relay.floor_divide(const_5191.astype('float64'), relay.reshape(bop_5192.astype('float64'), relay.shape_of(const_5191))) # shape=(10, 4, 13)
var_5230 = relay.var("var_5230", dtype = "uint32", shape = (10, 4, 13))#candidate|5230|(10, 4, 13)|var|uint32
bop_5231 = relay.not_equal(const_5191.astype('bool'), relay.reshape(var_5230.astype('bool'), relay.shape_of(const_5191))) # shape=(10, 4, 13)
func_4274_call = mod.get_global_var('func_4274')
func_4276_call = mutated_mod.get_global_var('func_4276')
call_5246 = relay.TupleGetItem(func_4274_call(), 0)
call_5247 = relay.TupleGetItem(func_4276_call(), 0)
output = relay.Tuple([call_5198,var_5199,bop_5219,bop_5231,call_5246,])
output2 = relay.Tuple([call_5200,var_5199,bop_5219,bop_5231,call_5247,])
func_5251 = relay.Function([var_5190,var_5199,var_5230,], output)
mod['func_5251'] = func_5251
mod = relay.transform.InferType()(mod)
mutated_mod['func_5251'] = func_5251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5251_call = mutated_mod.get_global_var('func_5251')
var_5253 = relay.var("var_5253", dtype = "uint32", shape = (10, 4, 13))#candidate|5253|(10, 4, 13)|var|uint32
var_5254 = relay.var("var_5254", dtype = "float64", shape = (132,))#candidate|5254|(132,)|var|float64
var_5255 = relay.var("var_5255", dtype = "uint32", shape = (10, 4, 13))#candidate|5255|(10, 4, 13)|var|uint32
call_5252 = func_5251_call(var_5253,var_5254,var_5255,)
output = call_5252
func_5256 = relay.Function([var_5253,var_5254,var_5255,], output)
mutated_mod['func_5256'] = func_5256
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5283 = relay.var("var_5283", dtype = "bool", shape = (10, 1, 5))#candidate|5283|(10, 1, 5)|var|bool
var_5284 = relay.var("var_5284", dtype = "bool", shape = (10, 8, 5))#candidate|5284|(10, 8, 5)|var|bool
bop_5285 = relay.logical_or(var_5283.astype('bool'), var_5284.astype('bool')) # shape=(10, 8, 5)
output = bop_5285
output2 = bop_5285
func_5298 = relay.Function([var_5283,var_5284,], output)
mod['func_5298'] = func_5298
mod = relay.transform.InferType()(mod)
var_5299 = relay.var("var_5299", dtype = "bool", shape = (10, 1, 5))#candidate|5299|(10, 1, 5)|var|bool
var_5300 = relay.var("var_5300", dtype = "bool", shape = (10, 8, 5))#candidate|5300|(10, 8, 5)|var|bool
output = func_5298(var_5299,var_5300,)
func_5301 = relay.Function([var_5299,var_5300,], output)
mutated_mod['func_5301'] = func_5301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3705_call = mod.get_global_var('func_3705')
func_3706_call = mutated_mod.get_global_var('func_3706')
call_5351 = relay.TupleGetItem(func_3705_call(), 2)
call_5352 = relay.TupleGetItem(func_3706_call(), 2)
output = call_5351
output2 = call_5352
func_5374 = relay.Function([], output)
mod['func_5374'] = func_5374
mod = relay.transform.InferType()(mod)
output = func_5374()
func_5375 = relay.Function([], output)
mutated_mod['func_5375'] = func_5375
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5379 = relay.var("var_5379", dtype = "float64", shape = (6, 5, 11))#candidate|5379|(6, 5, 11)|var|float64
uop_5380 = relay.atanh(var_5379.astype('float64')) # shape=(6, 5, 11)
output = relay.Tuple([uop_5380,])
output2 = relay.Tuple([uop_5380,])
func_5406 = relay.Function([var_5379,], output)
mod['func_5406'] = func_5406
mod = relay.transform.InferType()(mod)
mutated_mod['func_5406'] = func_5406
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5407 = relay.var("var_5407", dtype = "float64", shape = (6, 5, 11))#candidate|5407|(6, 5, 11)|var|float64
func_5406_call = mutated_mod.get_global_var('func_5406')
call_5408 = func_5406_call(var_5407)
output = call_5408
func_5409 = relay.Function([var_5407], output)
mutated_mod['func_5409'] = func_5409
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5423 = relay.var("var_5423", dtype = "uint64", shape = (15, 16, 2))#candidate|5423|(15, 16, 2)|var|uint64
var_5424 = relay.var("var_5424", dtype = "uint64", shape = (15, 16, 2))#candidate|5424|(15, 16, 2)|var|uint64
bop_5425 = relay.equal(var_5423.astype('bool'), relay.reshape(var_5424.astype('bool'), relay.shape_of(var_5423))) # shape=(15, 16, 2)
output = relay.Tuple([bop_5425,])
output2 = relay.Tuple([bop_5425,])
func_5452 = relay.Function([var_5423,var_5424,], output)
mod['func_5452'] = func_5452
mod = relay.transform.InferType()(mod)
var_5453 = relay.var("var_5453", dtype = "uint64", shape = (15, 16, 2))#candidate|5453|(15, 16, 2)|var|uint64
var_5454 = relay.var("var_5454", dtype = "uint64", shape = (15, 16, 2))#candidate|5454|(15, 16, 2)|var|uint64
output = func_5452(var_5453,var_5454,)
func_5455 = relay.Function([var_5453,var_5454,], output)
mutated_mod['func_5455'] = func_5455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3076_call = mod.get_global_var('func_3076')
func_3078_call = mutated_mod.get_global_var('func_3078')
call_5489 = relay.TupleGetItem(func_3076_call(), 0)
call_5490 = relay.TupleGetItem(func_3078_call(), 0)
func_3027_call = mod.get_global_var('func_3027')
func_3029_call = mutated_mod.get_global_var('func_3029')
call_5516 = func_3027_call()
call_5517 = func_3027_call()
output = relay.Tuple([call_5489,call_5516,])
output2 = relay.Tuple([call_5490,call_5517,])
func_5520 = relay.Function([], output)
mod['func_5520'] = func_5520
mod = relay.transform.InferType()(mod)
output = func_5520()
func_5521 = relay.Function([], output)
mutated_mod['func_5521'] = func_5521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4163_call = mod.get_global_var('func_4163')
func_4164_call = mutated_mod.get_global_var('func_4164')
call_5526 = relay.TupleGetItem(func_4163_call(), 0)
call_5527 = relay.TupleGetItem(func_4164_call(), 0)
func_3705_call = mod.get_global_var('func_3705')
func_3706_call = mutated_mod.get_global_var('func_3706')
call_5541 = relay.TupleGetItem(func_3705_call(), 0)
call_5542 = relay.TupleGetItem(func_3706_call(), 0)
uop_5573 = relay.cos(call_5541.astype('float64')) # shape=(3, 6, 15)
uop_5575 = relay.cos(call_5542.astype('float64')) # shape=(3, 6, 15)
func_1740_call = mod.get_global_var('func_1740')
func_1742_call = mutated_mod.get_global_var('func_1742')
const_5578 = relay.const([False,False,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,True,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,False,False,False,False,False], dtype = "bool")#candidate|5578|(384,)|const|bool
call_5577 = relay.TupleGetItem(func_1740_call(relay.reshape(const_5578.astype('bool'), [384,])), 1)
call_5579 = relay.TupleGetItem(func_1742_call(relay.reshape(const_5578.astype('bool'), [384,])), 1)
func_3665_call = mod.get_global_var('func_3665')
func_3667_call = mutated_mod.get_global_var('func_3667')
call_5584 = relay.TupleGetItem(func_3665_call(), 0)
call_5585 = relay.TupleGetItem(func_3667_call(), 0)
func_1604_call = mod.get_global_var('func_1604')
func_1607_call = mutated_mod.get_global_var('func_1607')
const_5595 = relay.const(-5, dtype = "uint64")#candidate|5595|()|const|uint64
call_5594 = relay.TupleGetItem(func_1604_call(relay.reshape(const_5595.astype('uint64'), [])), 3)
call_5596 = relay.TupleGetItem(func_1607_call(relay.reshape(const_5595.astype('uint64'), [])), 3)
func_4197_call = mod.get_global_var('func_4197')
func_4200_call = mutated_mod.get_global_var('func_4200')
const_5607 = relay.const([-7.710673,4.924369,-6.923084,-6.682520,-4.805322,8.074567,7.191674,-4.799010,-7.741341,4.149895,9.555263,-8.162763,-7.821888,-6.889604,-4.633631,9.886457,-6.953294,-6.552802,1.614894,4.757756,-4.495933,6.374324,-0.904964,-2.289797,5.866221,-1.395139,-2.309270,-0.441216,4.325480,-4.497867,-8.139913,-5.263998,-1.867718,5.661888,-6.102941,4.874952,4.174523,-6.587617,2.734306,-2.758010,-4.012212,0.627285,8.039551,4.548440,-4.240791,4.579911,-7.965012,-2.483117,-3.990696,-7.810846,-5.217624,8.029824,-8.493332,4.399327,-7.697420,-8.300977,8.796341,-0.826367,2.135236,3.676968,5.778595,-5.401376,-3.076606,8.065972,-4.235365,2.849572,9.545807,-9.045849,-0.346877,1.390570,-8.715739,2.002661,1.769570,-8.208545,-9.131249,0.225507,-1.018951,0.197566,-3.268146,6.016551,-0.167567,9.096884,2.462874,5.369485,2.977232,3.809772,-8.004394,8.291570,-5.990127,4.344672,7.775525,-0.033822,-3.298686,6.674258,-1.420157,-8.036056,2.309647,8.955945,9.988258,4.801800,5.059046,-2.976168,3.274526,-6.829900,-1.891170,-8.222719,-8.259047,8.423781,-6.290784,3.499421,-5.402721,9.951505,9.106391,-9.833618,9.267787,1.650996,-2.830511,9.693856,-2.883654,3.316507,6.381579,-9.180047,2.910282,-6.963142,-5.299016,-9.620972,8.137835,6.571561,-6.009409,-2.716150,6.644564,0.458465,4.264059,7.541263,-1.016742,-9.247757,8.502957,1.381770,0.184863,-1.419543,8.640776,-7.307089,7.845533,5.262198,2.304347,2.268945,1.739599,1.235559,3.832875,-5.743178,5.318388,5.239677,-0.609980,3.082615,9.163890,2.101740,4.831612,2.244034,0.413064,-1.387298,-6.593743,2.020367,-9.374172,3.438100,-1.339631,4.095059,-4.501104,-1.685696,3.024272,-0.818391,7.523792,1.655231,9.336895,3.191946,0.282206,-1.070032,-9.702421,-8.952697,-1.415214,-0.005164,4.280019,-7.291519,0.913934,-3.288002,0.594287,2.788956,1.528822,8.434565,6.824430,0.067243,-1.092813,7.027969,-2.876491,-9.823611,7.683065,1.404059,-4.166726,-5.579437,-8.400509,8.645062,-4.818624,-5.480563,1.904204,-5.064808,2.751211,-3.479912,3.088962,-5.331840,0.296806,-4.488573], dtype = "float32")#candidate|5607|(210,)|const|float32
call_5606 = relay.TupleGetItem(func_4197_call(relay.reshape(const_5595.astype('float32'), []), relay.reshape(const_5607.astype('float32'), [210,]), ), 2)
call_5608 = relay.TupleGetItem(func_4200_call(relay.reshape(const_5595.astype('float32'), []), relay.reshape(const_5607.astype('float32'), [210,]), ), 2)
output = relay.Tuple([call_5526,uop_5573,call_5577,const_5578,call_5584,call_5594,const_5595,call_5606,const_5607,])
output2 = relay.Tuple([call_5527,uop_5575,call_5579,const_5578,call_5585,call_5596,const_5595,call_5608,const_5607,])
func_5614 = relay.Function([], output)
mod['func_5614'] = func_5614
mod = relay.transform.InferType()(mod)
output = func_5614()
func_5615 = relay.Function([], output)
mutated_mod['func_5615'] = func_5615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4522_call = mod.get_global_var('func_4522')
func_4524_call = mutated_mod.get_global_var('func_4524')
call_5669 = relay.TupleGetItem(func_4522_call(), 0)
call_5670 = relay.TupleGetItem(func_4524_call(), 0)
func_3189_call = mod.get_global_var('func_3189')
func_3194_call = mutated_mod.get_global_var('func_3194')
const_5676 = relay.const([True,False,True,False,False,False,True,False,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,False,True,False,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,False,False,True,True], dtype = "bool")#candidate|5676|(384,)|const|bool
var_5677 = relay.var("var_5677", dtype = "uint32", shape = (260,))#candidate|5677|(260,)|var|uint32
var_5678 = relay.var("var_5678", dtype = "bool", shape = (24,))#candidate|5678|(24,)|var|bool
const_5679 = relay.const([9.112806,-6.833275,-8.262679,-1.396519,-8.577886,9.969560,0.553186,2.709204,-0.637541,0.540154,4.066178,-3.691995,-7.501178,6.979043,-5.520103,-8.892519,1.981372,-1.443382,-9.069037,-1.180431,3.178597,8.324188,-1.555341,-9.021541,-3.589012,1.319404,5.904904,8.059044,-8.954732,2.497611,-3.465200,-7.209236,3.607722,-1.503581,-5.305416,-0.455159,-2.495934,-8.666578,0.820279,-8.919766,8.489632,8.295126,8.458485,-6.929853,-4.689829,-0.904997,2.015760,-6.522906,-7.696102,7.003417,0.979281,-5.406069,9.906604,-2.984444,-5.815676,-9.549320,8.949977,-5.449298,-6.610403,-0.994646,-1.136005,0.119879,-1.386388,-5.695950,-6.305643,8.173837,-3.613099,-2.514381,-6.519041,-6.399649,1.188848,-3.903432,-2.719416,0.368262,3.554787,6.690950,7.947466,-4.159999,-4.531673,-7.188674,-0.316466,-4.668564,9.788398,-6.115490,-2.565296,-2.266204,8.995885,-1.847247,0.966392,-4.409440,0.461965,6.682992,-2.645077,-5.756880,-1.717109,-4.564039,-0.504530,7.869208,1.065265,-9.052696,-3.511321,8.017897,3.991450,-6.011896,1.237427,-3.795317,-3.239461,4.142322,1.637237,-5.512568,-4.521867,-8.082004,5.901941,7.456578,0.820702,-4.602376,-2.327761,9.517149,0.349392,6.767471,-3.714599,-0.222701,0.270711,2.258098,3.465517,-2.702880,-9.104378,9.768489,2.904894,-8.722032,-4.040830,-7.545598,-7.172339,-3.591748,6.596692,6.255617,5.755785,5.776935,5.643222,1.295032,-9.814299,5.978884,-4.325473,-2.298198,7.504234,-9.593588,-9.142884,-2.581287,-8.214598,-0.620838,-7.245607,4.819136,1.390411,-4.492396,-1.381982,-1.680971,-4.265719,1.084120,-9.069297,-9.616811,4.275522,1.508581,5.823759,-6.179631,-2.165474,-5.638944,-9.424365,4.005021,-2.652539,4.696219,2.877172,6.810036,7.438292,3.698655,-1.191392,8.572137,-5.335553,1.338680,-7.294581,-1.060064,3.202437,-3.100692,-9.818338,9.862981,9.778544,3.686849,-0.922611,-6.672097,-7.139879,9.388464,9.252961,-7.652538,1.450816,-5.265481,2.425236,5.315677,8.198009,1.885164,2.263721,-4.408915,6.744178,8.069040,-0.781728,5.332167,0.786785,5.027590,6.856900,6.172810], dtype = "float64")#candidate|5679|(208,)|const|float64
call_5675 = relay.TupleGetItem(func_3189_call(relay.reshape(const_5676.astype('bool'), [384,]), relay.reshape(var_5677.astype('uint32'), [260,]), relay.reshape(var_5678.astype('bool'), [24,]), relay.reshape(const_5679.astype('float64'), [208,]), ), 0)
call_5680 = relay.TupleGetItem(func_3194_call(relay.reshape(const_5676.astype('bool'), [384,]), relay.reshape(var_5677.astype('uint32'), [260,]), relay.reshape(var_5678.astype('bool'), [24,]), relay.reshape(const_5679.astype('float64'), [208,]), ), 0)
func_3266_call = mod.get_global_var('func_3266')
func_3270_call = mutated_mod.get_global_var('func_3270')
var_5689 = relay.var("var_5689", dtype = "float64", shape = (75, 3))#candidate|5689|(75, 3)|var|float64
const_5690 = relay.const([9.024070,3.037568,7.285406,-6.200549,-3.192930,-7.187859,-2.424947,9.702380,6.683584,3.707068,4.226793,1.308835,3.178350,9.296692,0.044066,-8.847622,6.176401,-7.419127,-2.975322,-4.032838,-7.236955,9.523805,5.042166,-3.340943,8.295988,-0.484009,-5.624163,-4.187129,-9.006971,-0.600339,4.923561,-8.620967,-1.246003,-0.746177,-6.475988,4.391798,3.864990,0.539783,-1.484658,8.443084,-4.852671,-1.351572,3.684696,-6.487391,9.364061,6.974471,7.471294,3.074768,-4.483493,-7.959941,-6.841007,2.958718,4.530229,-1.177207,-1.391270,5.914509,4.308953,0.035165,-4.473137,-2.688796,2.451332,-7.056609,-5.144536,-6.757575,4.931906,2.895487,4.003784,5.133196,2.036274,-2.304257,8.285942,-7.225621,3.258470,3.942502,4.063721,7.535250,5.288553,-9.057311,-1.379212,-4.904998,7.995153,1.619700,-2.293230,4.831477,6.494016,-4.276694,5.009193,1.634075,-3.282945,-1.597014,2.825769,-6.184242,-5.412460,-8.726000,-1.943128,-0.165995,-0.742929,-2.735147,1.696707,-8.327110,3.210519,9.497785,-6.143480,8.057775,-0.255074,-4.683351,-4.048226,-2.240060,8.317457,1.349178,-8.476039,-8.857078,1.318109,0.553453,-8.099799,6.398898,-0.977956,1.847813,-2.938358,-2.786328,-1.053993,-3.495140,2.246446,0.861304,7.682728,-3.668574,8.227607,-3.348323,0.892731,2.303324,7.222083,6.945364,7.721215,-4.701995,-0.414071,-7.761016,-2.568424,1.885487,-4.188378,-8.058998,3.887694,6.571785,1.527040,1.983030,9.101776,7.276762,-5.630452,6.451370,0.379876,6.017279,-0.224559,-2.818144,-0.196034,-5.971089,9.864806,-8.144626,-2.749859,5.172867,9.258876,-1.901994,8.261511,4.586027,0.296049,5.485065,1.817607,-8.088340,3.440094,-1.569309,-1.067876,-0.866601,0.899493,-3.589263,-2.106204,-5.919050,-2.077148,-4.875879,-9.476262,7.467025,-6.047674,-5.696510,5.877595,1.524553,0.415708,-7.753617,0.549758,7.465326,9.201905,-4.673074,3.864106,3.676775,7.318273,8.171927,-0.060102,5.390091,-9.582274,-5.970543,-9.155282,-4.597842,1.307413,9.244016,2.454903,3.709851,-3.923722,-1.301039,-1.318065,-2.582342,1.848933,2.852640,-2.770468,0.802426,-6.611522,1.966051,3.920789,5.459000,-5.718328,8.699261,0.250956,1.217386,-2.185924,-7.239451,4.769120,4.082310,-4.935784,-7.106648,5.709913,4.095678,7.226617,8.584184,-8.141946,8.353496,8.700147,-2.619009,-8.310717,3.535484,9.771301,5.853669,-1.359441,-5.699378,-5.327847,6.503524,-9.947348,8.125118,2.205082,-2.167164,6.647223,2.307584,0.412347,-3.248312,4.434564,-4.843973,4.241175,8.564938,-2.703260,-6.840134,2.673487,8.128773,6.114487,7.599303,4.782248,-2.236072,-0.587808,4.571545,-2.588747,1.535521,6.730194,-8.004815,9.447919,-2.088568,5.624087,-2.337311,7.939725,-9.082715,2.576616,9.108394,-9.487770,3.391067,9.373690,-1.811666,-6.769769,5.105731,4.030067,-9.707594,-7.820539,2.247697,-8.754910,-0.950067,5.768938,-2.256824,-4.978713,5.229793,5.293205,8.990646,5.227483,-1.043152,4.753070,-9.375501,-3.838355,-6.125404,1.827139,-0.294506,0.944538,9.456901,-2.828360,0.851145,-4.328123,2.361213,-3.049785,-0.359699,-1.671253,3.801029,6.328620,-0.478451,6.371041,-2.534474,-6.520175,-5.729288,8.244142,-8.005465,4.710337,-4.104312,-8.613403,2.257588,1.985879,8.723710,1.171997,8.710308,-2.442835,-2.202670,-3.448444,-9.061812,6.478106,8.137754,6.533789,-9.447766,4.229534,-6.498179,-6.585323,-0.730694,0.131474,2.328996,5.682448,7.199104,8.890546,3.720928,-7.747870,-0.792093,-9.379539,-5.278197,-5.803348,-7.657993,-2.854747,3.422544,-4.053492,-5.614117,0.510040,-2.434317,-0.179579,-2.739276,3.016233,-3.139361,-1.821513,-4.222585,-7.393741,-0.138895,4.129745,-8.347319,4.718068,1.229627,-5.124515,2.406208,9.405435,-6.380131,-5.962571,3.996720,-0.162570,9.599579,0.837216,6.908032,8.389776,-1.572290,-1.760026,-5.173533,-4.111093,2.300241,9.739257,0.647821,0.199487,-5.831044,-6.006439,6.884317,8.845155,8.899926,-5.458176,-2.199893,-9.407730,7.716202,-1.845451,-6.192022,0.800558,6.574377,1.201465,9.234036,-5.629644,-9.203687,-2.681712,0.431436,-7.332821,-6.192519,0.717890,-6.056900,2.304209,-4.717490,5.283341,-6.657807,-9.654476,3.238372,-8.128643,-5.842045,3.510614,-6.410222,6.881777,4.205996,-3.497643,-3.487369,7.743360,-9.530797,-5.053447,-0.030704,7.666716,-9.035147,-8.992717,0.788086,0.171246,3.755558,-4.499574,-3.219223,9.463042,-5.446491,6.434780,9.889345,1.167246,3.837616,-3.884296,-2.593881,-4.486124,8.174240,-4.439981,-7.337272,9.526455,-7.629382,5.111674,1.446350,9.153552,-0.300784,-8.515622,8.015593,0.911957,-8.470320,-4.309556,-2.883688,2.364485,6.889836,-2.831769,7.279014,4.226412,-4.355724,-1.174600,8.248617,3.508400,-5.882864,2.713810,6.387919,-3.509603,-3.706526,-3.766695,-1.481509,-8.490244,-9.021578,6.148778,-5.526944,2.847633,0.223916,-7.336169,3.179863,-6.235197,-0.058375,4.954488,2.643028,7.478383,-7.728526,-8.421600,1.888801,-3.588160,0.520702,-0.579096,-1.494141,-3.296808,2.609416,-3.770262,-2.905490,7.666970,-6.210011,5.306475,-2.620436,3.383567,-4.776385,3.645961,5.329280,6.917278,4.230439,-3.930562,-5.436743,6.910875,-8.445869,-8.394232,4.848543,1.975501,8.897414,5.898536,4.256761,-7.526533,-4.894902,9.597217,-6.699187,-5.954839,-9.588573,4.575118,-1.324626,6.266120,6.340326,4.511029,6.479266,-8.588442,0.657755,-0.302620,7.039000,8.975167,1.957787,3.063526,2.047525,4.376669,-3.134339,-4.747030,-1.053301,2.263910,-6.189342,-1.127065,2.630622,-6.850499,-1.416670,7.898172,1.249352,6.127749,-2.108548,-6.157153,-6.732522,7.638581,4.136960,7.909918,0.404505,2.532760,-8.839904,9.247616,-7.097799,-3.508275,4.044191,-2.285053,-4.845787,2.285646,-4.974575,6.298171,1.326556,-2.363459,-1.735865,-8.535477,-4.440066,4.978065,1.976993,2.896484,-8.010616,-7.297624,1.922471,1.590226,-7.167181,-2.968731,-6.454899,-7.452978,5.253086,-0.609471,-6.015857,2.913614,-7.503993,0.485182,-3.057735,-3.658619,8.207595,-4.251461,8.311088,-3.801401,-5.923015,3.890840,-0.291777,-7.993710,-0.041445,-7.322075,-9.014787,8.143577,-5.101131,-2.689159,2.398671,-9.252336,-1.620116,-6.192787,-2.885595,5.904129,3.589851,0.700615,-0.015166,4.782888,9.612351,-0.143771,-2.826598,-2.214904,-6.600386,1.606240,4.482340,-2.623376,-7.611731,-8.067900,-6.182019], dtype = "float64")#candidate|5690|(630,)|const|float64
call_5688 = relay.TupleGetItem(func_3266_call(relay.reshape(var_5689.astype('float64'), [225,]), relay.reshape(const_5690.astype('float64'), [630,]), ), 3)
call_5691 = relay.TupleGetItem(func_3270_call(relay.reshape(var_5689.astype('float64'), [225,]), relay.reshape(const_5690.astype('float64'), [630,]), ), 3)
output = relay.Tuple([call_5669,call_5675,const_5676,var_5677,var_5678,const_5679,call_5688,var_5689,const_5690,])
output2 = relay.Tuple([call_5670,call_5680,const_5676,var_5677,var_5678,const_5679,call_5691,var_5689,const_5690,])
func_5699 = relay.Function([var_5677,var_5678,var_5689,], output)
mod['func_5699'] = func_5699
mod = relay.transform.InferType()(mod)
mutated_mod['func_5699'] = func_5699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5699_call = mutated_mod.get_global_var('func_5699')
var_5701 = relay.var("var_5701", dtype = "uint32", shape = (260,))#candidate|5701|(260,)|var|uint32
var_5702 = relay.var("var_5702", dtype = "bool", shape = (24,))#candidate|5702|(24,)|var|bool
var_5703 = relay.var("var_5703", dtype = "float64", shape = (75, 3))#candidate|5703|(75, 3)|var|float64
call_5700 = func_5699_call(var_5701,var_5702,var_5703,)
output = call_5700
func_5704 = relay.Function([var_5701,var_5702,var_5703,], output)
mutated_mod['func_5704'] = func_5704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4789_call = mod.get_global_var('func_4789')
func_4790_call = mutated_mod.get_global_var('func_4790')
call_5753 = relay.TupleGetItem(func_4789_call(), 0)
call_5754 = relay.TupleGetItem(func_4790_call(), 0)
func_1740_call = mod.get_global_var('func_1740')
func_1742_call = mutated_mod.get_global_var('func_1742')
const_5778 = relay.const([True,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,True,True,True,False,False,False,True,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False], dtype = "bool")#candidate|5778|(384,)|const|bool
call_5777 = relay.TupleGetItem(func_1740_call(relay.reshape(const_5778.astype('bool'), [384,])), 3)
call_5779 = relay.TupleGetItem(func_1742_call(relay.reshape(const_5778.astype('bool'), [384,])), 3)
func_4285_call = mod.get_global_var('func_4285')
func_4286_call = mutated_mod.get_global_var('func_4286')
call_5782 = relay.TupleGetItem(func_4285_call(), 0)
call_5783 = relay.TupleGetItem(func_4286_call(), 0)
output = relay.Tuple([call_5753,call_5777,const_5778,call_5782,])
output2 = relay.Tuple([call_5754,call_5779,const_5778,call_5783,])
func_5784 = relay.Function([], output)
mod['func_5784'] = func_5784
mod = relay.transform.InferType()(mod)
output = func_5784()
func_5785 = relay.Function([], output)
mutated_mod['func_5785'] = func_5785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2432_call = mod.get_global_var('func_2432')
func_2433_call = mutated_mod.get_global_var('func_2433')
call_5796 = func_2432_call()
call_5797 = func_2432_call()
output = relay.Tuple([call_5796,])
output2 = relay.Tuple([call_5797,])
func_5817 = relay.Function([], output)
mod['func_5817'] = func_5817
mod = relay.transform.InferType()(mod)
output = func_5817()
func_5818 = relay.Function([], output)
mutated_mod['func_5818'] = func_5818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3894_call = mod.get_global_var('func_3894')
func_3896_call = mutated_mod.get_global_var('func_3896')
call_5843 = relay.TupleGetItem(func_3894_call(), 0)
call_5844 = relay.TupleGetItem(func_3896_call(), 0)
uop_5858 = relay.erf(call_5843.astype('float32')) # shape=(3, 6, 15)
uop_5860 = relay.erf(call_5844.astype('float32')) # shape=(3, 6, 15)
func_5108_call = mod.get_global_var('func_5108')
func_5113_call = mutated_mod.get_global_var('func_5113')
const_5864 = relay.const([-8,-4,10,3,7,3,-10,-10,7,-7,3,6,-1,-7,5,-3,-10,1,-10,7,8,1,7,2,-9,6,8,-1,8,-7,-3,-9,-9,2,7,-7,9,2,3,1,-2,-3,1,-1,-1,6,-1,4,-5,1,8,-6,10,-5,3,3,5,8,-10,-6,9,3,-7,2,-7,-6,3,-2,-4,-3,6,-2,4,8,-9,4,-8,-8,6,-1,-4,-8,10,7,-8,9,-10,7,-1,7,1,7,-8,6,-6,-7,-3,7,-4,5,7,-7,7,1,9,9,9,9,3,-3,2,9,-4,9,3,1,-10,-8,-2,-8,-9,1,2,-5,-7,4,-10,-5,9,2,9,-1,4,9,-10,-7,3,5,9,-2,10,-6,-1,5,-6,-2,-2,8,-4,-10,-4,-1,6,-6,-10,9,-6,-2,-7,-7,-4,10,3,2,4,4,-2,9,-3,-2,5,2,-8,10,-1,-8,7,-3,-5,2,10,9,10,-7,-5,3,10,-3,10,-4,2,8,-2,-4,7,-8,1,-6,-7,2,-1,4,-10,2,2,-3,-7,-6,3,8,7,6,5,-6,4,-6,3,-8,9,-7,5,-7,-2,-3,-4,-2,7,6,-9,-6,-2,-9,4,-2,-1,-6,-8,1,8,4,7,5,-5,5,5,6,-4,4,6,3,-4,4,-3,-3,-8,-5,2,-8,10,10,7,-3,-3,-10,-5,-6,3,-3,4,-7,3,-1,1,2,5,9,8,-4,10,-1,1,6,-9,10,4,-10,-3,-2,10,-6,-3,-8,6,3,-8,-3,-4,-4,-9,-6,4,-10,7,-1,-5,2,3,-1,2,7,10,2,2,-5,-10,1,-9,1,4,-2,1,7,6,5,3,9,-5,-5,4,-5,3,10,-9,-9,-5,2,-7,-9,8,-10,-7,4,9,-6,-1,9,9,9,10,-10,9,10,10,8,5,-9,-6,-4,-4,7,-5,1,-6,1,8,-9,-3,4,10,1,1,-8,5,-3,-6,4,9,-5,-8,10,-8,-5,-10,4,5,5,-7,5,7,-1,-2,-4,2,7,6,8,-8,4,-3,6,-8,-4,-4,-7,10,-5,4,-5,-1,-8,10,2,8,6,6,7,-2,9,1,8,5,-4,-7,5,1,-6,7,1,-3,7,6,5,7,6,1,7,-1,5,10,-5,-3,-2,-10,8,-7,-5,10,-4,6,-5,8,-5,5,-7,1,-5,-5,-9,-9,10,-3,-2,-5,-2,-8,9,10,-5,5,-9,-5,5,1,-7,-10,-10,-2,-7,-9,-9,7,3,4,-4,1,9,8,-6,-7,-1,9,-1,-4,-7,9,-1,4,6,3,8,3,-10,9,-2,-10,-3,-4,8,-7,10,1,-4,7,-4,10,-4,7,-6,9,-3,10,-8,4,-2,-2,-7,-6,-9,-1,-3,5,5,-1,-8,-8,-9,-9,-5,-4,-4,-1,-9,-9,10,-3,2,10,2,10,-4,-3,1,10,4,4,10,8,4,2,-9,9,-5,-1,-10,6,-3,7,-10,-9,2,-4,-1,-4,10,-1,2,-2,-8,-1,6,-2,-6,-5,9,1,-9,6,7,-5,7,-8,3,-4,-3,-1,4,-9,4,7,8,-7,-4,7,2,-2,9,7,-10,-4,10,5,9,-6,-8,8,-2,-4,-7,-2,4,-1,-2,4,-1,-6,-4,-5,-4,7,6], dtype = "int32")#candidate|5864|(630,)|const|int32
call_5863 = relay.TupleGetItem(func_5108_call(relay.reshape(const_5864.astype('int32'), [3, 15, 14]), relay.reshape(const_5864.astype('int32'), [3, 15, 14]), relay.reshape(const_5864.astype('bool'), [3, 15, 14]), ), 1)
call_5865 = relay.TupleGetItem(func_5113_call(relay.reshape(const_5864.astype('int32'), [3, 15, 14]), relay.reshape(const_5864.astype('int32'), [3, 15, 14]), relay.reshape(const_5864.astype('bool'), [3, 15, 14]), ), 1)
output = relay.Tuple([uop_5858,call_5863,const_5864,])
output2 = relay.Tuple([uop_5860,call_5865,const_5864,])
func_5866 = relay.Function([], output)
mod['func_5866'] = func_5866
mod = relay.transform.InferType()(mod)
mutated_mod['func_5866'] = func_5866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5866_call = mutated_mod.get_global_var('func_5866')
call_5867 = func_5866_call()
output = call_5867
func_5868 = relay.Function([], output)
mutated_mod['func_5868'] = func_5868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4285_call = mod.get_global_var('func_4285')
func_4286_call = mutated_mod.get_global_var('func_4286')
call_5951 = relay.TupleGetItem(func_4285_call(), 0)
call_5952 = relay.TupleGetItem(func_4286_call(), 0)
output = relay.Tuple([call_5951,])
output2 = relay.Tuple([call_5952,])
func_5961 = relay.Function([], output)
mod['func_5961'] = func_5961
mod = relay.transform.InferType()(mod)
mutated_mod['func_5961'] = func_5961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5961_call = mutated_mod.get_global_var('func_5961')
call_5962 = func_5961_call()
output = call_5962
func_5963 = relay.Function([], output)
mutated_mod['func_5963'] = func_5963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4844_call = mod.get_global_var('func_4844')
func_4846_call = mutated_mod.get_global_var('func_4846')
call_5989 = func_4844_call()
call_5990 = func_4844_call()
var_5998 = relay.var("var_5998", dtype = "int64", shape = (3, 6, 15))#candidate|5998|(3, 6, 15)|var|int64
bop_5999 = relay.less_equal(call_5989.astype('bool'), relay.reshape(var_5998.astype('bool'), relay.shape_of(call_5989))) # shape=(3, 6, 15)
bop_6002 = relay.less_equal(call_5990.astype('bool'), relay.reshape(var_5998.astype('bool'), relay.shape_of(call_5990))) # shape=(3, 6, 15)
output = relay.Tuple([bop_5999,])
output2 = relay.Tuple([bop_6002,])
func_6005 = relay.Function([var_5998,], output)
mod['func_6005'] = func_6005
mod = relay.transform.InferType()(mod)
mutated_mod['func_6005'] = func_6005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6006 = relay.var("var_6006", dtype = "int64", shape = (3, 6, 15))#candidate|6006|(3, 6, 15)|var|int64
func_6005_call = mutated_mod.get_global_var('func_6005')
call_6007 = func_6005_call(var_6006)
output = call_6007
func_6008 = relay.Function([var_6006], output)
mutated_mod['func_6008'] = func_6008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3587_call = mod.get_global_var('func_3587')
func_3588_call = mutated_mod.get_global_var('func_3588')
call_6029 = relay.TupleGetItem(func_3587_call(), 1)
call_6030 = relay.TupleGetItem(func_3588_call(), 1)
output = relay.Tuple([call_6029,])
output2 = relay.Tuple([call_6030,])
func_6068 = relay.Function([], output)
mod['func_6068'] = func_6068
mod = relay.transform.InferType()(mod)
output = func_6068()
func_6069 = relay.Function([], output)
mutated_mod['func_6069'] = func_6069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3076_call = mod.get_global_var('func_3076')
func_3078_call = mutated_mod.get_global_var('func_3078')
call_6095 = relay.TupleGetItem(func_3076_call(), 0)
call_6096 = relay.TupleGetItem(func_3078_call(), 0)
uop_6098 = relay.acosh(call_6095.astype('float64')) # shape=(3, 6, 15)
uop_6100 = relay.acosh(call_6096.astype('float64')) # shape=(3, 6, 15)
func_1351_call = mod.get_global_var('func_1351')
func_1359_call = mutated_mod.get_global_var('func_1359')
const_6109 = relay.const([1,10,-1,2,-1,-1,10,5,3,-9,-9,5,1,-8,-3,5,-10,-9,-9,-2,-8,5,-4,9,2,4,10,7,-5,8,-1,-2,-6,-1,-4,5,-8,9,1,-3,7,-4,-9,10,-3,1,-1,-4,-4,10,-10,9,7,3,-5,1,-4,-10,-6,-6,-1,5,-10,7,-6,1,5,-5,7,2,-2,5,-10,8,7,4,-1,-8,-10,6,-3,3,8,-10,-7,8,-5,-5,7,-10,-9,4,7,-2,6,-4,-6,7,-8,6,9,-5,6,1,5,-2,10,-8,-6,4,10,-3,9,-8,-8,10,-10,-6,-5,2,2,8,-9,-9,-9,-9,2,-5,5,-8,10,2,3,8,7,-1,5,-9,8,-9,10,5,-3,5,-4,1,-10,-5,1,4,5,-6,-7,-7,4,1,6,-10,-6,5,7,-3,-8,-2,2,-8,-3,9,1,4,-2,3,-1,-6,-5,5,8,-9,-6,7,8,7,2,-9,2,2,8,-1,-6,4,-10,5,10,-4,6,-6,-7,-4,-1,-3,6,-6,-1,-3,-5,-10,9,3,-1,6,10,-2,7,7,-8,-8,8,-1,4,-7,5,4,-5,3,-5,3,-3,4,10,-7,-2,7,10,10,-5,2,2,-4,-4,3,8,-7,-3,-2,-2,5,3,-5,-1,-6,2,4,4,3,7,-1,5,9,-1,-3,7,1,10,-10,3,-5,3,-8,-9,9,8,4,-2,-1,1,7,2,7,-4,-2,4,1,-9,6,-2,8,7,-3], dtype = "int32")#candidate|6109|(288,)|const|int32
var_6110 = relay.var("var_6110", dtype = "float64", shape = (208,))#candidate|6110|(208,)|var|float64
const_6111 = relay.const([1.361233,-0.991150,0.805734,-9.396035,-4.337514,9.022262,2.507946,-2.764257,8.069655,-3.994345,5.057760,7.786815,-6.783592,5.301667,8.375943,7.179537,2.822710,9.847705,-0.051203,-6.402570,-9.765015,7.420622,-8.296026,9.194938,5.553414,7.266972,1.551343,-8.955756,9.530627,0.852967,-7.858069,-7.251434,-3.760850,-1.386876,0.173612,-7.066611,8.756694,5.371245,5.264384,9.854646,-7.183488,5.860306,5.102315,7.275507,-3.105319,6.661061,2.987350,-0.138324,1.159206,8.207336,9.960037,4.988547,6.432921,5.103450,2.288154,9.570547,1.934604,2.852669,9.860300,-0.040530,2.455447,-2.645146,4.770339,2.839315,3.646352,3.628098,-7.857785,8.102730,3.173706,-6.053912,3.292606,-3.011588,-8.758988,0.545499,-9.543867,8.650588,6.861056,-2.382449,-8.351195,-2.895831,-6.229892,8.617603,-5.887283,-9.340374,8.561804,-2.928832,4.440489,7.050711,-0.422912,6.651389,-0.742814,-6.303326,-8.588148,-7.601179,-6.774316,-2.837198,-3.476728,9.885968,9.924255,-8.014898,-1.841233,7.987973,8.394746,-8.865975,-9.704959,-6.451555,-6.589945,-2.720987,-1.478964,-1.080284,5.156691,6.581021,-8.774306,-6.610261,5.208195,-5.901610,4.495676,0.660928,-3.936512,-4.312620,5.911696,-8.331723,-4.749848,-5.118375,7.804695,0.746429,4.900517,2.556181,-1.125854,1.080600,-0.106363,5.458800,-0.309885,6.576326,-9.301633,0.530503,-3.040857,-9.995184,-0.808601,0.057383,6.876998,8.057033,-5.131474,-2.192136,-7.951458,-6.343659,4.808337,9.592934,-8.928320,-9.274326,-8.285323,-8.143620,8.029318,8.607267,0.015554,-4.816219,-3.993292,1.798414,-5.315730,4.111702,-2.023944,8.206387,5.007715,4.866812,5.496839,8.816075,7.739237,7.810899,-2.069585,-3.531673,5.604435,-9.569695,-4.743325,-8.592192,8.172114,-1.806757,2.486127,2.104887,-9.083751,-0.494281,-7.756339,8.476376,1.292590,5.570185,-6.768083,9.229464,-7.998804,3.357037,-6.041443,6.091488,8.174420,0.574882,1.048286,5.517228,6.074475,-5.921836,4.589425,4.194413,-3.809495,-2.840666,-4.040370,-2.019909,0.024877,-7.317787,-6.049197,7.727180,1.596777,-0.050354,7.347687,-4.425228,-8.735446,5.268422,-7.722105,-8.262179,7.597273,9.647167,4.434572,-3.228393,6.201609,-2.340940,-2.042243,3.581853,-8.355489,-2.512006,-5.780041], dtype = "float64")#candidate|6111|(225,)|const|float64
var_6112 = relay.var("var_6112", dtype = "bool", shape = (384,))#candidate|6112|(384,)|var|bool
var_6113 = relay.var("var_6113", dtype = "float64", shape = (630,))#candidate|6113|(630,)|var|float64
call_6108 = relay.TupleGetItem(func_1351_call(relay.reshape(const_6109.astype('int32'), [9, 8, 4]), relay.reshape(const_6109.astype('int32'), [9, 8, 4]), relay.reshape(var_6110.astype('float64'), [208,]), relay.reshape(const_6111.astype('float64'), [225, 1]), relay.reshape(var_6112.astype('bool'), [384,]), relay.reshape(var_6113.astype('float64'), [630,]), ), 0)
call_6114 = relay.TupleGetItem(func_1359_call(relay.reshape(const_6109.astype('int32'), [9, 8, 4]), relay.reshape(const_6109.astype('int32'), [9, 8, 4]), relay.reshape(var_6110.astype('float64'), [208,]), relay.reshape(const_6111.astype('float64'), [225, 1]), relay.reshape(var_6112.astype('bool'), [384,]), relay.reshape(var_6113.astype('float64'), [630,]), ), 0)
output = relay.Tuple([uop_6098,call_6108,const_6109,var_6110,const_6111,var_6112,var_6113,])
output2 = relay.Tuple([uop_6100,call_6114,const_6109,var_6110,const_6111,var_6112,var_6113,])
func_6133 = relay.Function([var_6110,var_6112,var_6113,], output)
mod['func_6133'] = func_6133
mod = relay.transform.InferType()(mod)
mutated_mod['func_6133'] = func_6133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6133_call = mutated_mod.get_global_var('func_6133')
var_6135 = relay.var("var_6135", dtype = "float64", shape = (208,))#candidate|6135|(208,)|var|float64
var_6136 = relay.var("var_6136", dtype = "bool", shape = (384,))#candidate|6136|(384,)|var|bool
var_6137 = relay.var("var_6137", dtype = "float64", shape = (630,))#candidate|6137|(630,)|var|float64
call_6134 = func_6133_call(var_6135,var_6136,var_6137,)
output = call_6134
func_6138 = relay.Function([var_6135,var_6136,var_6137,], output)
mutated_mod['func_6138'] = func_6138
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6174 = relay.var("var_6174", dtype = "int8", shape = (13, 13, 5))#candidate|6174|(13, 13, 5)|var|int8
var_6175 = relay.var("var_6175", dtype = "int8", shape = (13, 13, 5))#candidate|6175|(13, 13, 5)|var|int8
bop_6176 = relay.less(var_6174.astype('bool'), relay.reshape(var_6175.astype('bool'), relay.shape_of(var_6174))) # shape=(13, 13, 5)
uop_6188 = relay.sqrt(var_6174.astype('float32')) # shape=(13, 13, 5)
bop_6197 = relay.subtract(uop_6188.astype('int32'), relay.reshape(var_6175.astype('int32'), relay.shape_of(uop_6188))) # shape=(13, 13, 5)
output = relay.Tuple([bop_6176,bop_6197,])
output2 = relay.Tuple([bop_6176,bop_6197,])
F = relay.Function([var_6174,var_6175,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6174,var_6175,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

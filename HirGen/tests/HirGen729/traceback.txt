==========mod==========
#[version = "0.0.5"]
def @func_18918() -> (Tensor[(12, 7, 14), float64],) {
  %0 = @func_16471() /* ty=(Tensor[(12, 7, 14), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_18336(%var_18296: Tensor[(15, 6, 1), float32]) -> (Tensor[(15, 6, 1), float32], Tensor[(15, 16, 2), float64], Tensor[(15), uint16], Tensor[(1176), float64], Tensor[(21, 5), float64]) {
  %2 = cast(%var_18296, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
  %3 = @func_4601() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %6 = reshape(%4, newshape=[1176, 1]) /* ty=Tensor[(1176, 1), float64] */;
  %7 = reshape(%5, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %8 = @func_10362(%6, %7) /* ty=(Tensor[(1344), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(208), uint32], Tensor[(105), float64], Tensor[(320), float32], Tensor[(15), uint16], Tensor[(1176, 1), float64]) */;
  %9 = sinh(%2) /* ty=Tensor[(15, 6, 1), float32] */;
  %10 = %3.0;
  %11 = %8.6;
  (%9, %10, %11, meta[relay.Constant][0] /* ty=Tensor[(1176), float64] */, meta[relay.Constant][1] /* ty=Tensor[(21, 5), float64] */)
}

def @func_5514() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %12 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %13 = @func_3628() /* ty=Tensor[(15, 16, 2), float32] */;
  %14 = %12.0;
  %15 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  (%13, %14, %15)
}

def @func_8696() -> Tensor[(15, 16, 2), float32] {
  %16 = @func_6637() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %16.0
}

def @func_19769(%var_19746: Tensor[(7, 7, 7), float64]) -> (Tensor[(7, 7, 7), float64], Tensor[(1344), float32]) {
  %17 = cast(%var_19746, dtype="float64") /* ty=Tensor[(7, 7, 7), float64] */;
  %18 = asinh(%17) /* ty=Tensor[(7, 7, 7), float64] */;
  %19 = cast(%18, dtype="float64") /* ty=Tensor[(7, 7, 7), float64] */;
  %20 = @func_6001() /* ty=(Tensor[(1344), float32],) */;
  %21 = rsqrt(%19) /* ty=Tensor[(7, 7, 7), float64] */;
  %22 = %20.0;
  (%21, %22)
}

def @func_7471() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) {
  %23 = @func_5425() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %24 = @func_6473() /* ty=Tensor[(15, 16, 2), float32] */;
  %25 = @func_3089() /* ty=Tensor[(15, 16, 2), float32] */;
  %26 = %23.1;
  (%24, %25, %26)
}

def @func_3551() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) {
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %28 = reshape(%27, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
  %29 = @func_3478() /* ty=Tensor[(15, 16, 2), float32] */;
  %30 = @func_3478() /* ty=Tensor[(15, 16, 2), float32] */;
  %31 = @func_164(%28) /* ty=Tensor[(12, 7, 14), float64] */;
  (%29, %30, %31, meta[relay.Constant][2] /* ty=Tensor[(1176), float64] */)
}

def @func_6104() -> Tensor[(15, 16, 2), float32] {
  %32 = @func_5514() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %32.1
}

def @func_3622() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %33 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %34 = %33.0;
  %35 = @func_3478() /* ty=Tensor[(15, 16, 2), float32] */;
  (%34, %35)
}

def @func_11284() -> (Tensor[(15, 16, 2), float32], Tensor[(1, 63), uint32]) {
  %36 = @func_4344() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(7, 12, 9), uint32], Tensor[(1, 63), uint32], Tensor[(756), uint32]) */;
  %37 = @func_10996() /* ty=Tensor[(15, 16, 2), float32] */;
  %38 = %36.2;
  (%37, %38)
}

def @func_15239() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %39 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %40 = @func_8901() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %41 = @func_8025() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %42 = @func_12513() /* ty=Tensor[(15, 16, 2), float32] */;
  %43 = %39.0;
  %44 = %40.0;
  %45 = %41.0;
  (%42, %43, %44, %45)
}

def @func_6637() -> (Tensor[(15, 16, 2), float32],) {
  %46 = @func_5514() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %47 = %46.0;
  (%47,)
}

def @func_19076() -> (Tensor[(1176), float64],) {
  %48 = @func_17953() /* ty=Tensor[(1176), float64] */;
  (%48,)
}

def @func_4284(%var_4272: Tensor[(15, 16, 2), float64]) -> (Tensor[(15, 16, 2), int16],) {
  %49 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  %50 = cast(%var_4272, dtype="int16") /* ty=Tensor[(15, 16, 2), int16] */;
  %51 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%49, dtype="int16") /* ty=Tensor[(15, 16, 2), int16] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %54 = multiply(%52, %53) /* ty=Tensor[(15, 16, 2), int16] */;
  (%54,)
}

def @func_16545(%var_16537: Tensor[(180, 2), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(63), bool], Tensor[(360), uint8], Tensor[(180, 2), uint8]) {
  %55 = @func_11186() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %56 = @func_15110() /* ty=(Tensor[(63), bool],) */;
  %57 = cast(%var_16537, dtype="uint8") /* ty=Tensor[(180, 2), uint8] */;
  %58 = reshape(%57, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %59 = @func_5048(%58) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) */;
  %60 = %55.0;
  %61 = %56.0;
  %62 = %59.2;
  (%60, %61, %62, %var_16537)
}

def @func_5251() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(360), uint8]) {
  %63 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  %64 = cast(%63, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
  %65 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  %66 = cast(%63, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
  %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
  %68 = cast(%65, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %70 = cast(meta[relay.Constant][3] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %71 = reshape(%70, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %72 = @func_5048(%71) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) */;
  %73 = exp(%64) /* ty=Tensor[(15, 16, 2), float32] */;
  %74 = less_equal(%68, %69) /* ty=Tensor[(15, 16, 2), bool] */;
  %75 = %72.2;
  (%73, %74, %75, meta[relay.Constant][3] /* ty=Tensor[(360), uint8] */)
}

def @func_15008() -> (Tensor[(15, 16, 2), float32],) {
  %76 = @func_5085() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %77 = %76.1;
  (%77,)
}

def @func_7650() -> Tensor[(15, 16, 2), float32] {
  @func_3628() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_8901() -> (Tensor[(15, 16, 2), float32],) {
  %78 = @func_3089() /* ty=Tensor[(15, 16, 2), float32] */;
  (%78,)
}

def @func_17182() -> (Tensor[(15, 16, 2), float32],) {
  %79 = @func_15748() /* ty=Tensor[(15, 16, 2), float32] */;
  (%79,)
}

def @func_10546() -> (Tensor[(15, 16, 2), bool],) {
  %80 = @func_8369() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %81 = %80.0;
  %82 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 16, 2), float32] */, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
  %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%81, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %86 = greater_equal(%84, %85) /* ty=Tensor[(15, 16, 2), bool] */;
  (%86,)
}

def @func_8546(%var_8528: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(1872), float32], Tensor[(1176), float32], Tensor[(15, 16, 2), float32]) {
  %87 = @func_8095() /* ty=(Tensor[(756), uint32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %88 = cast(meta[relay.Constant][5] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %89 = reshape(%88, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %90 = @func_4661(%89) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %91 = cast(%var_8528, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %92 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(1176), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %93 = cast(meta[relay.Constant][5] /* ty=Tensor[(1176), float64] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?), float32] */;
  %95 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %96 = @func_6909() /* ty=Tensor[(15, 16, 2), float32] */;
  %97 = %87.0;
  %98 = %90.2;
  %99 = divide(%93, %94) /* ty=Tensor[(1176), float32] */;
  %100 = %95.0;
  (%96, %97, %98, %99, %100)
}

def @func_9072() -> (Tensor[(15, 16, 2), float64],) {
  %101 = @func_7144() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %102 = %101.0;
  (%102,)
}

def @func_16471() -> (Tensor[(12, 7, 14), float64],) {
  %103 = @func_8630() /* ty=(Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %104 = %103.0;
  (%104,)
}

def @func_13541() -> (Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %105 = @func_5899() /* ty=(Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32]) */;
  %106 = %105.0;
  %107 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  %108 = @func_12513() /* ty=Tensor[(15, 16, 2), float32] */;
  (%106, %107, %108)
}

def @func_18276() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %109 = @func_9409() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %110 = @func_15735() /* ty=Tensor[(15, 16, 2), float32] */;
  %111 = %109.1;
  %112 = @func_10925() /* ty=Tensor[(15, 16, 2), float32] */;
  (%110, %111, %112)
}

def @func_7947() -> Tensor[(15, 16, 2), float32] {
  %113 = @func_5653() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %113.0
}

def @func_6962() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %114 = @func_6637() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %115 = @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %116 = %114.0;
  %117 = %115.0;
  (%116, %117)
}

def @func_17279(%var_17269: Tensor[(1872), float32]) -> (Tensor[(756), uint32], Tensor[(15, 16, 2), float32], Tensor[(105), float64], Tensor[(1872), float32]) {
  %118 = @func_14130() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %119 = @func_6205() /* ty=Tensor[(756), uint32] */;
  %120 = cast(%119, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %121 = cast(%var_17269, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %122 = reshape(%120, newshape=[54, 14]) /* ty=Tensor[(54, 14), uint32] */;
  %123 = reshape(%121, newshape=[1872]) /* ty=Tensor[(1872), float32] */;
  %124 = @func_7577(%122, %123) /* ty=(Tensor[(1344), float32], Tensor[(144), float32], Tensor[(2880), uint16], Tensor[(54, 14), uint32], Tensor[(105), float64], Tensor[(1872), float32], Tensor[(84, 14), float32]) */;
  %125 = %118.0;
  %126 = %124.4;
  (%119, %125, %126, %var_17269)
}

def @func_1499(%var_1464: Tensor[(10, 8, 4), float32], %var_1469: Tensor[(15), uint16]) -> (Tensor[(588, 2), float64], uint16, Tensor[(15), uint16], Tensor[(1176), float64], Tensor[(588, 2), float64], Tensor[(10, 8, 4), float64]) {
  %127 = cast(meta[relay.Constant][6] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %128 = cast(%var_1469, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %129 = cast(meta[relay.Constant][7] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %130 = reshape(%127, newshape=[]) /* ty=uint16 */;
  %131 = reshape(%128, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
  %132 = reshape(%129, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
  %133 = @func_813(%130, %131, %132) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
  %134 = cast(meta[relay.Constant][6] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %135 = cast(%var_1469, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %136 = cast(meta[relay.Constant][7] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %137 = reshape(%134, newshape=[]) /* ty=uint16 */;
  %138 = reshape(%135, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
  %139 = reshape(%136, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
  %140 = @func_813(%137, %138, %139) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
  %141 = cast(%var_1464, dtype="float32") /* ty=Tensor[(10, 8, 4), float32] */;
  %142 = exp(%141) /* ty=Tensor[(10, 8, 4), float32] */;
  %143 = cast(%var_1464, dtype="uint16") /* ty=Tensor[(10, 8, 4), uint16] */;
  %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%142, dtype="uint16") /* ty=Tensor[(10, 8, 4), uint16] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %147 = minimum(%145, %146) /* ty=Tensor[(10, 8, 4), uint16] */;
  %148 = cast(%147, dtype="float64") /* ty=Tensor[(10, 8, 4), float64] */;
  %149 = %133.2;
  %150 = %140.2;
  %151 = asin(%148) /* ty=Tensor[(10, 8, 4), float64] */;
  (%149, meta[relay.Constant][6] /* ty=uint16 */, %var_1469, meta[relay.Constant][7] /* ty=Tensor[(1176), float64] */, %150, %151)
}

def @func_5683() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  %152 = @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %153 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %154 = cast(meta[relay.Constant][8] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %155 = reshape(%154, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %156 = %152.0;
  %157 = %153.1;
  %158 = @func_2152(%155) /* ty=Tensor[(8, 14, 12), float32] */;
  (%156, %157, %158, meta[relay.Constant][8] /* ty=Tensor[(1344), float32] */)
}

def @func_9183(%var_9179: uint16) -> (Tensor[(15, 16, 2), float32], Tensor[(1176), bool], uint16, Tensor[(5, 3), uint16]) {
  %159 = @func_8919() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) */;
  %160 = cast(%var_9179, dtype="uint16") /* ty=uint16 */;
  %161 = cast(meta[relay.Constant][9] /* ty=Tensor[(5, 3), uint16] */, dtype="uint16") /* ty=Tensor[(5, 3), uint16] */;
  %162 = reshape(%160, newshape=[]) /* ty=uint16 */;
  %163 = reshape(%161, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %164 = @func_7832(%162, %163) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1, 1, 15), bool], uint16, Tensor[(15), uint16], Tensor[(1176), bool]) */;
  %165 = %159.0;
  %166 = %164.4;
  (%165, %166, %var_9179, meta[relay.Constant][9] /* ty=Tensor[(5, 3), uint16] */)
}

def @func_12127(%var_12122: Tensor[(2, 1, 3), float32]) -> (Tensor[(2, 1, 3), float32],) {
  %167 = cast(2.37668f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %168 = cast(%var_12122, dtype="float32") /* ty=Tensor[(2, 1, 3), float32] */;
  %169 = power(%167, %168) /* ty=Tensor[(2, 1, 3), float32] */;
  (%169,)
}

def @func_13293() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) {
  %170 = @func_11435() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %171 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %172 = @func_7673() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %173 = @func_8358() /* ty=Tensor[(15, 16, 2), float32] */;
  %174 = %170.0;
  %175 = %171.0;
  %176 = @func_6909() /* ty=Tensor[(15, 16, 2), float32] */;
  %177 = %172.0;
  (%173, %174, %175, %176, %177)
}

def @func_11190() -> (Tensor[(15, 16, 2), float32],) {
  %178 = @func_10863() /* ty=Tensor[(15, 16, 2), float32] */;
  (%178,)
}

def @func_14903(%var_14879: Tensor[(1, 13, 15), int32]) -> (Tensor[(9, 13, 15), bool], Tensor[(1, 13, 15), float64]) {
  %179 = cast(%var_14879, dtype="bool") /* ty=Tensor[(1, 13, 15), bool] */;
  %180 = cast(meta[relay.Constant][10] /* ty=Tensor[(9, 13, 15), int32] */, dtype="bool") /* ty=Tensor[(9, 13, 15), bool] */;
  %181 = cast(%var_14879, dtype="float64") /* ty=Tensor[(1, 13, 15), float64] */;
  %182 = equal(%179, %180) /* ty=Tensor[(9, 13, 15), bool] */;
  %183 = log2(%181) /* ty=Tensor[(1, 13, 15), float64] */;
  (%182, %183)
}

def @func_19359() -> Tensor[(12, 10, 8), float32] {
  @func_15302() /* ty=Tensor[(12, 10, 8), float32] */
}

def @func_7673() -> (Tensor[(15, 16, 2), float64],) {
  %184 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  (%184,)
}

def @func_8630() -> (Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %185 = @func_8095() /* ty=(Tensor[(756), uint32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %186 = @func_5913() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %187 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %188 = %185.1;
  %189 = %186.0;
  %190 = %187.0;
  %191 = @func_3891() /* ty=Tensor[(15, 16, 2), float32] */;
  (%188, %189, %190, %191)
}

def @func_14005() -> (Tensor[(15, 16, 2), float32],) {
  %192 = @func_8838() /* ty=(Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) */;
  %193 = %192.1;
  (%193,)
}

def @func_8919() -> (Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) {
  %194 = @func_8119() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %195 = cast(meta[relay.Constant][11] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
  %196 = reshape(%195, newshape=[4, 4, 1]) /* ty=Tensor[(4, 4, 1), float32] */;
  %197 = @func_2815(%196) /* ty=(Tensor[(4, 4, 1), float32],) */;
  %198 = @func_8838() /* ty=(Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) */;
  %199 = %194.0;
  %200 = %197.0;
  %201 = %198.1;
  (%199, %200, meta[relay.Constant][11] /* ty=Tensor[(16), float32] */, %201)
}

def @func_17447() -> (Tensor[(15, 16, 2), float32],) {
  %202 = @func_5085() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %203 = %202.0;
  (%203,)
}

def @func_15302() -> Tensor[(12, 10, 8), float32] {
  %204 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %204.0
}

def @func_11340() -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %205 = @func_4344() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(7, 12, 9), uint32], Tensor[(1, 63), uint32], Tensor[(756), uint32]) */;
  %206 = @func_5653() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %207 = @func_5653() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %208 = %205.0;
  %209 = %206.0;
  %210 = %207.0;
  %211 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  (%208, %209, %210, %211)
}

def @func_17854() -> Tensor[(15, 16, 2), float32] {
  %212 = @func_9031() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %212.0
}

def @func_3891() -> Tensor[(15, 16, 2), float32] {
  %213 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %213.0
}

def @func_6001() -> (Tensor[(1344), float32],) {
  %214 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %215 = %214.3;
  (%215,)
}

def @func_17409() -> (Tensor[(15, 16, 2), float64], Tensor[(63), bool], Tensor[(15, 16, 2), float32]) {
  %216 = @func_9072() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %217 = @func_15110() /* ty=(Tensor[(63), bool],) */;
  %218 = @func_13507() /* ty=(Tensor[(1344), float32], Tensor[(15, 16, 2), float32]) */;
  %219 = %216.0;
  %220 = %217.0;
  %221 = %218.1;
  (%219, %220, %221)
}

def @func_6473() -> Tensor[(15, 16, 2), float32] {
  %222 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %222.0
}

def @func_9409() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %223 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %224 = @func_5170() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %225 = %223.0;
  %226 = %224.1;
  (%225, %226)
}

def @func_18201() -> (Tensor[(15, 16, 2), float32],) {
  %227 = @func_10996() /* ty=Tensor[(15, 16, 2), float32] */;
  (%227,)
}

def @func_7016(%var_7007: Tensor[(182), int8]) -> (Tensor[(15, 16, 2), float64], Tensor[(13, ?, 14), bool], Tensor[(182), int8]) {
  %228 = cast(%var_7007, dtype="int8") /* ty=Tensor[(182), int8] */;
  %229 = cast(%var_7007, dtype="int8") /* ty=Tensor[(182), int8] */;
  %230 = reshape(%228, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), int8] */;
  %231 = reshape(%229, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), int8] */;
  %232 = @func_6550(%230, %231) /* ty=(Tensor[(13, ?, 14), bool],) */;
  %233 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  %234 = %232.0;
  (%233, %234, %var_7007)
}

def @func_13356() -> Tensor[(15, 16, 2), float32] {
  %235 = @func_10252() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %235.0
}

def @func_7044(%var_7023: Tensor[(9, 6, 11), int32], %var_7024: Tensor[(9, 6, 11), int32], %var_7036: Tensor[(21, 5), float64], %var_7042: Tensor[(12, 30), uint8]) -> (Tensor[(9, 6, 11), int32], Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(21, 5), float64], Tensor[(144), float32], Tensor[(9, 5, 8), uint8], Tensor[(12, 30), uint8]) {
  %236 = cast(%var_7024, dtype="int32") /* ty=Tensor[(9, 6, 11), int32] */;
  %237 = shape_of(%var_7023, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%var_7023, dtype="int32") /* ty=Tensor[(9, 6, 11), int32] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %240 = cast(meta[relay.Constant][12] /* ty=Tensor[(756), uint32] */, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %241 = cast(%var_7036, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %242 = cast(meta[relay.Constant][13] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %243 = reshape(%240, newshape=[756]) /* ty=Tensor[(756), uint32] */;
  %244 = reshape(%241, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
  %245 = reshape(%242, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %246 = @func_3710(%243, %244, %245) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(2880), uint16], Tensor[(756), uint32], Tensor[(7, 15), float64], Tensor[(1176), float64], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(144), float32]) */;
  %247 = cast(%var_7042, dtype="uint8") /* ty=Tensor[(12, 30), uint8] */;
  %248 = reshape(%247, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %249 = @func_5048(%248) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) */;
  %250 = bitwise_or(%238, %239) /* ty=Tensor[(9, 6, 11), int32] */;
  %251 = %246.0;
  %252 = %249.1;
  (%250, %251, meta[relay.Constant][12] /* ty=Tensor[(756), uint32] */, %var_7036, meta[relay.Constant][13] /* ty=Tensor[(144), float32] */, %252, %var_7042)
}

def @func_18403() -> Tensor[(15, 16, 2), float32] {
  @func_17173() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_18842() -> (Tensor[(15, 16, 2), float32],) {
  %253 = @func_9907() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %254 = %253.0;
  (%254,)
}

def @func_14686() -> Tensor[(15, 16, 2), float64] {
  %255 = @func_7144() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %255.0
}

def @func_3560() -> (Tensor[(15, 16, 2), float32],) {
  %256 = @func_3089() /* ty=Tensor[(15, 16, 2), float32] */;
  (%256,)
}

def @func_9458() -> (Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) {
  %257 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %258 = @func_7144() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %259 = %257.0;
  %260 = %258.0;
  (%259, %260)
}

def @func_14607(%var_14593: float64, %var_14595: Tensor[(18816), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(18816), float64], float64, Tensor[(4, 4), float64], Tensor[(18816), float64]) {
  %261 = @func_10432() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %262 = @func_9409() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %263 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %264 = cast(%var_14593, dtype="float64") /* ty=float64 */;
  %265 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 4), float64] */;
  %266 = cast(%var_14595, dtype="float64") /* ty=Tensor[(18816), float64] */;
  %267 = reshape(%264, newshape=[]) /* ty=float64 */;
  %268 = reshape(%265, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %269 = reshape(%266, newshape=[18816]) /* ty=Tensor[(18816), float64] */;
  %270 = @func_9588(%267, %268, %269) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(1, 144), float32], Tensor[(1344), float32], Tensor[(1, 15), uint16], float64, Tensor[(16), float64], Tensor[(18816), float64], Tensor[(21, 3), uint32]) */;
  %271 = %261.1;
  %272 = %262.1;
  %273 = %263.1;
  %274 = %270.7;
  (%271, %272, %273, %274, %var_14593, meta[relay.Constant][14] /* ty=Tensor[(4, 4), float64] */, %var_14595)
}

def @func_9831() -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
  %275 = @func_9458() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
  %276 = @func_6637() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %277 = %275.1;
  %278 = %276.0;
  (%277, %278)
}

def @func_7098(%var_7072: Tensor[(2, 8, 13), uint32], %var_7073: Tensor[(2, 8, 13), uint32], %var_7082: Tensor[(1, 1176), float64], %var_7091: Tensor[(105), float64], %var_7093: Tensor[(320), float32], %var_7094: Tensor[(5, 3), uint16]) -> (Tensor[(2, 8, 13), uint32], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(10, 8, 4), float64], Tensor[(63), uint32], Tensor[(105), float64], Tensor[(14, 96), float32], Tensor[(320), float32], Tensor[(5, 3), uint16]) {
  %279 = cast(%var_7073, dtype="uint32") /* ty=Tensor[(2, 8, 13), uint32] */;
  %280 = shape_of(%var_7072, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%var_7072, dtype="uint32") /* ty=Tensor[(2, 8, 13), uint32] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %283 = cast(%var_7082, dtype="float64") /* ty=Tensor[(1, 1176), float64] */;
  %284 = reshape(%283, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %285 = @func_4661(%284) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %286 = cast(meta[relay.Constant][15] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %287 = cast(%var_7091, dtype="float64") /* ty=Tensor[(105), float64] */;
  %288 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 96), float32] */, dtype="float32") /* ty=Tensor[(14, 96), float32] */;
  %289 = cast(%var_7093, dtype="float32") /* ty=Tensor[(320), float32] */;
  %290 = cast(%var_7094, dtype="uint16") /* ty=Tensor[(5, 3), uint16] */;
  %291 = reshape(%286, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %292 = reshape(%287, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %293 = reshape(%288, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
  %294 = reshape(%289, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %295 = reshape(%290, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %296 = @func_4865(%291, %292, %293, %294, %295) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64], Tensor[(3, 252), float64], Tensor[(63), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(12, 7, 14), float64], Tensor[(10, 8, 4), float64], Tensor[(320), float32], Tensor[(15), uint16]) */;
  %297 = add(%281, %282) /* ty=Tensor[(2, 8, 13), uint32] */;
  %298 = %285.4;
  %299 = %296.11;
  (%297, %298, %var_7082, %299, meta[relay.Constant][15] /* ty=Tensor[(63), uint32] */, %var_7091, meta[relay.Constant][16] /* ty=Tensor[(14, 96), float32] */, %var_7093, %var_7094)
}

def @func_6895(%var_6881: Tensor[(144), float32], %var_6883: Tensor[(1176), float64], %var_6890: Tensor[(2, 672), float32]) -> (Tensor[(14, 3, 16), float32], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(8, 14, 12), float32], Tensor[(2, 672), float32]) {
  %300 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 3, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 16), float32] */;
  %301 = cast(%var_6881, dtype="float32") /* ty=Tensor[(144), float32] */;
  %302 = cast(meta[relay.Constant][18] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %303 = cast(%var_6883, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %304 = reshape(%301, newshape=[1, 9, 16]) /* ty=Tensor[(1, 9, 16), float32] */;
  %305 = reshape(%302, newshape=[13, 9, 16]) /* ty=Tensor[(13, 9, 16), float32] */;
  %306 = reshape(%303, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %307 = @func_1537(%304, %305, %306) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) */;
  %308 = cast(%var_6890, dtype="float32") /* ty=Tensor[(2, 672), float32] */;
  %309 = reshape(%308, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %310 = log(%300) /* ty=Tensor[(14, 3, 16), float32] */;
  %311 = %307.2;
  %312 = @func_2152(%309) /* ty=Tensor[(8, 14, 12), float32] */;
  (%310, %311, %var_6881, meta[relay.Constant][18] /* ty=Tensor[(1872), float32] */, %var_6883, %312, %var_6890)
}

def @func_7381(%var_7366: Tensor[(21, 5), float64], %var_7367: Tensor[(360), uint8]) -> (Tensor[(15, 16, 2), float64], Tensor[(9, 5, 8), uint8], Tensor[(594), int32], Tensor[(21, 5), float64], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) {
  %313 = cast(meta[relay.Constant][19] /* ty=Tensor[(594), int32] */, dtype="int32") /* ty=Tensor[(594), int32] */;
  %314 = cast(meta[relay.Constant][19] /* ty=Tensor[(594), int32] */, dtype="int32") /* ty=Tensor[(594), int32] */;
  %315 = cast(%var_7366, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %316 = cast(%var_7367, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %317 = reshape(%313, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), int32] */;
  %318 = reshape(%314, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), int32] */;
  %319 = reshape(%315, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %320 = reshape(%316, newshape=[12, 30]) /* ty=Tensor[(12, 30), uint8] */;
  %321 = @func_7044(%317, %318, %319, %320) /* ty=(Tensor[(9, 6, 11), int32], Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(21, 5), float64], Tensor[(144), float32], Tensor[(9, 5, 8), uint8], Tensor[(12, 30), uint8]) */;
  %322 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  %323 = %321.5;
  %324 = @func_3891() /* ty=Tensor[(15, 16, 2), float32] */;
  (%322, %323, meta[relay.Constant][19] /* ty=Tensor[(594), int32] */, %var_7366, %var_7367, %324)
}

def @func_17953() -> Tensor[(1176), float64] {
  %325 = @func_17153() /* ty=(Tensor[(1176), float64], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) */;
  %325.0
}

def @func_12063(%var_12012: Tensor[(360), uint8], %var_12054: Tensor[(8), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8], Tensor[(15, 16, 2), float64], Tensor[(2, 4, 1), float32], Tensor[(8), float32]) {
  %326 = @func_9100() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %327 = cast(%var_12012, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %328 = reshape(%327, newshape=[2, 180]) /* ty=Tensor[(2, 180), uint8] */;
  %329 = @func_11679(%328) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(2, 180), uint8], Tensor[(15, 16, 2), bool], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
  %330 = @func_9072() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %331 = cast(%var_12054, dtype="float32") /* ty=Tensor[(8), float32] */;
  %332 = reshape(%331, newshape=[2, 4, 1]) /* ty=Tensor[(2, 4, 1), float32] */;
  %333 = %326.0;
  %334 = %329.1;
  %335 = %330.0;
  %336 = @func_9063(%332) /* ty=Tensor[(2, 4, 1), float32] */;
  (%333, %334, %var_12012, %335, %336, %var_12054)
}

def @func_16178(%var_16150: Tensor[(1, 2, 7), float32]) -> (Tensor[(?, 2, 7), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %337 = cast(%var_16150, dtype="float32") /* ty=Tensor[(1, 2, 7), float32] */;
  %338 = acos(%337) /* ty=Tensor[(1, 2, 7), float32] */;
  %339 = cast(%var_16150, dtype="float64") /* ty=Tensor[(1, 2, 7), float64] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%338, dtype="float64") /* ty=Tensor[(1, 2, 7), float64] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %343 = @func_9831() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %344 = @func_13679() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %345 = divide(%341, %342) /* ty=Tensor[(?, 2, 7), float64] */;
  %346 = %343.1;
  %347 = %344.0;
  (%345, %346, %347)
}

def @func_13907() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %348 = @func_9800() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %349 = @func_6473() /* ty=Tensor[(15, 16, 2), float32] */;
  %350 = %348.0;
  (%349, %350)
}

def @func_12477() -> (Tensor[(7, 8, 3), float64],) {
  %351 = @func_4159() /* ty=Tensor[(7, 8, 3), float64] */;
  (%351,)
}

def @func_15517(%var_15476: Tensor[(14, 10, 5), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(14, 10, 5), bool], Tensor[(756), uint32], Tensor[(14, 10, 5), int16], Tensor[(14, 10, 5), float64]) {
  %352 = @func_6396() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %353 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 10, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 5), float32] */;
  %354 = shape_of(%var_15476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%var_15476, dtype="float32") /* ty=Tensor[(14, 10, 5), float32] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %357 = floor_mod(%355, %356) /* ty=Tensor[(14, 10, 5), float32] */;
  %358 = cast(%var_15476, dtype="bool") /* ty=Tensor[(14, 10, 5), bool] */;
  %359 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%357, dtype="bool") /* ty=Tensor[(14, 10, 5), bool] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %362 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 10, 5), float32] */, dtype="int16") /* ty=Tensor[(14, 10, 5), int16] */;
  %363 = shape_of(%357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%357, dtype="int16") /* ty=Tensor[(14, 10, 5), int16] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %366 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 10, 5), float32] */, dtype="float64") /* ty=Tensor[(14, 10, 5), float64] */;
  %367 = %352.2;
  %368 = @func_8358() /* ty=Tensor[(15, 16, 2), float32] */;
  %369 = logical_or(%360, %361) /* ty=Tensor[(14, 10, 5), bool] */;
  %370 = @func_12540() /* ty=Tensor[(756), uint32] */;
  %371 = bitwise_and(%364, %365) /* ty=Tensor[(14, 10, 5), int16] */;
  %372 = cos(%366) /* ty=Tensor[(14, 10, 5), float64] */;
  (%367, %368, %369, %370, %371, %372)
}

def @func_19317() -> (Tensor[(15, 16, 2), float32],) {
  %373 = @func_10709() /* ty=Tensor[(15, 16, 2), float32] */;
  (%373,)
}

def @func_6396() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
  %374 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %375 = @func_5085() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %376 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  %377 = %374.0;
  %378 = %375.0;
  %379 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  %380 = @func_3478() /* ty=Tensor[(15, 16, 2), float32] */;
  (%376, %377, %378, %379, %380)
}

def @func_15551(%var_15543: Tensor[(3, 30), uint16]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 3, 12), float32], Tensor[(3, 30), uint16], Tensor[(1350), uint16], Tensor[(144), float32]) {
  %381 = @func_9907() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %382 = @func_11284() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1, 63), uint32]) */;
  %383 = cast(%var_15543, dtype="uint16") /* ty=Tensor[(3, 30), uint16] */;
  %384 = cast(meta[relay.Constant][21] /* ty=Tensor[(1350), uint16] */, dtype="uint16") /* ty=Tensor[(1350), uint16] */;
  %385 = cast(meta[relay.Constant][22] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %386 = reshape(%383, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), uint16] */;
  %387 = reshape(%384, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), uint16] */;
  %388 = reshape(%385, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %389 = @func_5763(%386, %387, %388) /* ty=(Tensor[(15, 9, 10), uint16], Tensor[(15, 3, 12), float32], bool, Tensor[(540), bool], Tensor[(144), float32]) */;
  %390 = %381.0;
  %391 = %382.0;
  %392 = %389.1;
  (%390, %391, %392, %var_15543, meta[relay.Constant][21] /* ty=Tensor[(1350), uint16] */, meta[relay.Constant][22] /* ty=Tensor[(144), float32] */)
}

def @func_8825() -> Tensor[(15, 16, 2), float32] {
  @func_6473() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_16457() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %393 = @func_5514() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %394 = @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %395 = %393.2;
  %396 = %394.0;
  (%395, %396)
}

def @func_14172() -> Tensor[(15, 16, 2), float32] {
  %397 = @func_8025() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %397.0
}

def @func_8681(%var_8651: Tensor[(7, 8, 3), float64], %var_8678: Tensor[(378, 2), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(7, 8, 3), int8], Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(378, 2), uint32], Tensor[(1872), float32]) {
  %398 = @func_4159() /* ty=Tensor[(7, 8, 3), float64] */;
  %399 = cast(%var_8651, dtype="int8") /* ty=Tensor[(7, 8, 3), int8] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="int8") /* ty=Tensor[(7, 8, 3), int8] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %403 = @func_3551() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %404 = cast(%var_8678, dtype="uint32") /* ty=Tensor[(378, 2), uint32] */;
  %405 = cast(meta[relay.Constant][23] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %406 = reshape(%404, newshape=[54, 14]) /* ty=Tensor[(54, 14), uint32] */;
  %407 = reshape(%405, newshape=[1872]) /* ty=Tensor[(1872), float32] */;
  %408 = @func_7577(%406, %407) /* ty=(Tensor[(1344), float32], Tensor[(144), float32], Tensor[(2880), uint16], Tensor[(54, 14), uint32], Tensor[(105), float64], Tensor[(1872), float32], Tensor[(84, 14), float32]) */;
  %409 = @func_4133() /* ty=Tensor[(15, 16, 2), float32] */;
  %410 = minimum(%401, %402) /* ty=Tensor[(7, 8, 3), int8] */;
  %411 = %403.2;
  %412 = %408.1;
  (%409, %410, %411, %412, %var_8678, meta[relay.Constant][23] /* ty=Tensor[(1872), float32] */)
}

def @func_12513() -> Tensor[(15, 16, 2), float32] {
  %413 = @func_6962() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %413.0
}

def @func_8594() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) {
  %414 = @func_6962() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %415 = @func_5899() /* ty=(Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32]) */;
  %416 = %414.0;
  %417 = %415.0;
  (%416, %417)
}

def @func_10107() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) {
  %418 = @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %419 = %418.0;
  %420 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
  (%419, %420)
}

def @func_13886(%var_13864: Tensor[(90), uint16], %var_13865: Tensor[(1350), uint16], %var_13866: Tensor[(144), float32]) -> (Tensor[(1344), float32], Tensor[(144), float32], Tensor[(90), uint16], Tensor[(1350), uint16], Tensor[(144), float32], Tensor[(13, ?, 14), bool], Tensor[(182), int8]) {
  %421 = @func_6001() /* ty=(Tensor[(1344), float32],) */;
  %422 = cast(%var_13864, dtype="uint16") /* ty=Tensor[(90), uint16] */;
  %423 = cast(%var_13865, dtype="uint16") /* ty=Tensor[(1350), uint16] */;
  %424 = cast(%var_13866, dtype="float32") /* ty=Tensor[(144), float32] */;
  %425 = reshape(%422, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), uint16] */;
  %426 = reshape(%423, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), uint16] */;
  %427 = reshape(%424, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %428 = @func_5763(%425, %426, %427) /* ty=(Tensor[(15, 9, 10), uint16], Tensor[(15, 3, 12), float32], bool, Tensor[(540), bool], Tensor[(144), float32]) */;
  %429 = cast(meta[relay.Constant][24] /* ty=Tensor[(182), int8] */, dtype="int8") /* ty=Tensor[(182), int8] */;
  %430 = cast(meta[relay.Constant][24] /* ty=Tensor[(182), int8] */, dtype="int8") /* ty=Tensor[(182), int8] */;
  %431 = reshape(%429, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), int8] */;
  %432 = reshape(%430, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), int8] */;
  %433 = @func_6550(%431, %432) /* ty=(Tensor[(13, ?, 14), bool],) */;
  %434 = %421.0;
  %435 = %428.4;
  %436 = %433.0;
  (%434, %435, %var_13864, %var_13865, %var_13866, %436, meta[relay.Constant][24] /* ty=Tensor[(182), int8] */)
}

def @func_15841() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) {
  %437 = @func_11764() /* ty=Tensor[(15, 16, 2), float32] */;
  %438 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
  (%437, %438)
}

def @func_15058() -> Tensor[(15, 16, 2), float32] {
  @func_3628() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_13794() -> Tensor[(15, 16, 2), float32] {
  %439 = @func_11931() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %439.0
}

def @func_19377() -> Tensor[(63), bool] {
  %440 = @func_15110() /* ty=(Tensor[(63), bool],) */;
  %440.0
}

def @func_9100() -> (Tensor[(15, 16, 2), float32],) {
  %441 = @func_8050() /* ty=Tensor[(15, 16, 2), float32] */;
  (%441,)
}

def @func_11679(%var_11657: Tensor[(2, 180), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(2, 180), uint8], Tensor[(15, 16, 2), bool], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) {
  %442 = @func_7471() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */;
  %443 = cast(%var_11657, dtype="uint8") /* ty=Tensor[(2, 180), uint8] */;
  %444 = reshape(%443, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %445 = @func_8859(%444) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) */;
  %446 = @func_10546() /* ty=(Tensor[(15, 16, 2), bool],) */;
  %447 = @func_9458() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
  %448 = @func_6396() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %449 = %442.0;
  %450 = %445.1;
  %451 = %446.0;
  %452 = %447.0;
  %453 = %448.3;
  (%449, %450, %var_11657, %451, %452, %453)
}

def @func_15992() -> (Tensor[(15, 16, 2), float32],) {
  %454 = @func_9031() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %455 = %454.0;
  (%455,)
}

def @func_9508() -> Tensor[(15, 16, 2), float64] {
  %456 = @func_5425() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %456.1
}

def @func_10120() -> Tensor[(15, 16, 2), float32] {
  %457 = @func_8119() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %457.0
}

def @func_9588(%var_9570: float64, %var_9571: Tensor[(16), float64], %var_9572: Tensor[(18816), float64]) -> (Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(1, 144), float32], Tensor[(1344), float32], Tensor[(1, 15), uint16], float64, Tensor[(16), float64], Tensor[(18816), float64], Tensor[(21, 3), uint32]) {
  %458 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 144), float32] */, dtype="float32") /* ty=Tensor[(1, 144), float32] */;
  %459 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
  %460 = cast(%459, dtype="float64") /* ty=Tensor[(12, 7, 14), float64] */;
  %461 = cast(meta[relay.Constant][26] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %462 = reshape(%458, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %463 = reshape(%460, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %464 = reshape(%461, newshape=[2, 672]) /* ty=Tensor[(2, 672), float32] */;
  %465 = @func_6895(%462, %463, %464) /* ty=(Tensor[(14, 3, 16), float32], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(8, 14, 12), float32], Tensor[(2, 672), float32]) */;
  %466 = cast(%var_9570, dtype="float64") /* ty=float64 */;
  %467 = cast(%var_9571, dtype="float64") /* ty=Tensor[(16), float64] */;
  %468 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 144), float32] */, dtype="float32") /* ty=Tensor[(1, 144), float32] */;
  %469 = cast(%var_9572, dtype="float64") /* ty=Tensor[(18816), float64] */;
  %470 = cast(meta[relay.Constant][27] /* ty=Tensor[(21, 3), uint32] */, dtype="uint32") /* ty=Tensor[(21, 3), uint32] */;
  %471 = reshape(%466, newshape=[]) /* ty=float64 */;
  %472 = reshape(%467, newshape=[16, 1, 1]) /* ty=Tensor[(16, 1, 1), float64] */;
  %473 = reshape(%468, newshape=[24, 6]) /* ty=Tensor[(24, 6), float32] */;
  %474 = reshape(%469, newshape=[16, 1176]) /* ty=Tensor[(16, 1176), float64] */;
  %475 = reshape(%470, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %476 = @func_3001(%471, %472, %473, %474, %475) /* ty=(Tensor[(16, 1, 1), float64], Tensor[(13, 9, 16), float64], Tensor[(24, 6), float32], Tensor[(1872), float32], Tensor[(16, 1176), float64], Tensor[(12, 7, 14), float64], Tensor[(1, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), uint32]) */;
  %477 = %465.4;
  %478 = %476.6;
  (%459, %477, meta[relay.Constant][25] /* ty=Tensor[(1, 144), float32] */, meta[relay.Constant][26] /* ty=Tensor[(1344), float32] */, %478, %var_9570, %var_9571, %var_9572, meta[relay.Constant][27] /* ty=Tensor[(21, 3), uint32] */)
}

def @func_7792(%var_7762: Tensor[(105), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(756), uint32], Tensor[(15, 16, 2), float32]) {
  %479 = @func_6396() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %480 = @func_5251() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(360), uint8]) */;
  %481 = cast(%var_7762, dtype="float64") /* ty=Tensor[(105), float64] */;
  %482 = reshape(%481, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %483 = @func_3797() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %484 = %479.2;
  %485 = %480.1;
  %486 = @func_1694(%482) /* ty=Tensor[(5, 7, 3), float64] */;
  %487 = %483.1;
  %488 = @func_6205() /* ty=Tensor[(756), uint32] */;
  %489 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  (%484, %485, %486, %var_7762, %487, %488, %489)
}

def @func_14441() -> Tensor[(15, 16, 2), float32] {
  %490 = @func_9031() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %490.0
}

def @func_5170() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %491 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %492 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %493 = %491.0;
  %494 = %492.0;
  (%493, %494)
}

def @func_8010() -> (Tensor[(15, 16, 2), float32],) {
  %495 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %496 = %495.0;
  (%496,)
}

def @func_7577(%var_7530: Tensor[(54, 14), uint32], %var_7533: Tensor[(1872), float32]) -> (Tensor[(1344), float32], Tensor[(144), float32], Tensor[(2880), uint16], Tensor[(54, 14), uint32], Tensor[(105), float64], Tensor[(1872), float32], Tensor[(84, 14), float32]) {
  %497 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %498 = cast(meta[relay.Constant][28] /* ty=Tensor[(2880), uint16] */, dtype="uint16") /* ty=Tensor[(2880), uint16] */;
  %499 = cast(%var_7530, dtype="uint32") /* ty=Tensor[(54, 14), uint32] */;
  %500 = cast(meta[relay.Constant][29] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %501 = cast(meta[relay.Constant][30] /* ty=Tensor[(84, 14), float64] */, dtype="float64") /* ty=Tensor[(84, 14), float64] */;
  %502 = cast(%var_7533, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %503 = reshape(%498, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), uint16] */;
  %504 = reshape(%499, newshape=[756]) /* ty=Tensor[(756), uint32] */;
  %505 = reshape(%500, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %506 = reshape(%501, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %507 = reshape(%502, newshape=[1, 1872]) /* ty=Tensor[(1, 1872), float32] */;
  %508 = @func_3222(%503, %504, %505, %506, %507) /* ty=(Tensor[(12, 16, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(756), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(12, 7, 14), float64], uint16, Tensor[(5, 3), uint16], Tensor[(1176), float64], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1, 1872), float32]) */;
  %509 = cast(meta[relay.Constant][30] /* ty=Tensor[(84, 14), float64] */, dtype="float32") /* ty=Tensor[(84, 14), float32] */;
  %510 = %497.3;
  %511 = %508.11;
  %512 = erf(%509) /* ty=Tensor[(84, 14), float32] */;
  (%510, %511, meta[relay.Constant][28] /* ty=Tensor[(2880), uint16] */, %var_7530, meta[relay.Constant][29] /* ty=Tensor[(105), float64] */, %var_7533, %512)
}

def @func_9716(%var_9679: Tensor[(105), float64], %var_9689: Tensor[(12, 30), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(594), int32], Tensor[(105), float64], Tensor[(15, 16, 2), float32], Tensor[(12, 30), uint16]) {
  %513 = @func_5514() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %514 = cast(%var_9679, dtype="float64") /* ty=Tensor[(105), float64] */;
  %515 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 30), uint8] */, dtype="uint8") /* ty=Tensor[(12, 30), uint8] */;
  %516 = reshape(%514, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %517 = reshape(%515, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %518 = @func_7381(%516, %517) /* ty=(Tensor[(15, 16, 2), float64], Tensor[(9, 5, 8), uint8], Tensor[(594), int32], Tensor[(21, 5), float64], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) */;
  %519 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %520 = cast(%var_9689, dtype="uint16") /* ty=Tensor[(12, 30), uint16] */;
  %521 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(12, 30), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %522 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 30), uint8] */, dtype="uint16") /* ty=Tensor[(12, 30), uint16] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %524 = %513.0;
  %525 = %518.2;
  %526 = %519.1;
  %527 = bitwise_and(%522, %523) /* ty=Tensor[(12, 30), uint16] */;
  (%524, %525, %var_9679, %526, %527)
}

def @func_4133() -> Tensor[(15, 16, 2), float32] {
  @func_3269() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_11398() -> (Tensor[(15, 16, 2), float32],) {
  %528 = @func_8838() /* ty=(Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) */;
  %529 = %528.1;
  (%529,)
}

def @func_19303() -> (Tensor[(15, 16, 2), float32],) {
  %530 = @func_5653() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %531 = %530.0;
  (%531,)
}

def @func_14218(%var_14183: Tensor[(16, 10, 14), float32], %var_14203: Tensor[(40, 2), int8], %var_14204: Tensor[(960), int8]) -> (Tensor[(12, 5, 16), int8], Tensor[(40, 2), int8], Tensor[(960), int8], Tensor[(16, 10, 14), float32]) {
  %532 = cast(%var_14203, dtype="int8") /* ty=Tensor[(40, 2), int8] */;
  %533 = cast(%var_14204, dtype="int8") /* ty=Tensor[(960), int8] */;
  %534 = reshape(%532, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), int8] */;
  %535 = reshape(%533, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), int8] */;
  %536 = @func_11218(%534, %535) /* ty=(Tensor[(12, 5, 16), int8],) */;
  %537 = cast(%var_14183, dtype="float32") /* ty=Tensor[(16, 10, 14), float32] */;
  %538 = cosh(%537) /* ty=Tensor[(16, 10, 14), float32] */;
  %539 = cast(%538, dtype="float32") /* ty=Tensor[(16, 10, 14), float32] */;
  %540 = exp(%539) /* ty=Tensor[(16, 10, 14), float32] */;
  %541 = cast(%540, dtype="float32") /* ty=Tensor[(16, 10, 14), float32] */;
  %542 = %536.0;
  %543 = log(%541) /* ty=Tensor[(16, 10, 14), float32] */;
  (%542, %var_14203, %var_14204, %543)
}

def @func_14350(%var_14346: Tensor[(63), uint32]) -> (Tensor[(1344), float32], Tensor[(16), float32], float64, Tensor[(18816), float64], Tensor[(63), uint32]) {
  %544 = @func_13389() /* ty=(Tensor[(7, 8, 3), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %545 = cast(meta[relay.Constant][32] /* ty=Tensor[(18816), float64] */, dtype="float64") /* ty=Tensor[(18816), float64] */;
  %546 = cast(%var_14346, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %547 = reshape(%545, newshape=[18816]) /* ty=Tensor[(18816), float64] */;
  %548 = reshape(%546, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %549 = @func_3592(%547, %548) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(5, 7, 3), float64], Tensor[(21, 5), float64], Tensor[(12, 7, 14), float64], float64, Tensor[(16), float64], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) */;
  %550 = %544.2;
  %551 = @func_13675() /* ty=Tensor[(16), float32] */;
  %552 = %549.4;
  (%550, %551, %552, meta[relay.Constant][32] /* ty=Tensor[(18816), float64] */, %var_14346)
}

def @func_14990() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %553 = @func_9907() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %554 = %553.1;
  %555 = @func_3478() /* ty=Tensor[(15, 16, 2), float32] */;
  (%554, %555)
}

def @func_5899() -> (Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32]) {
  %556 = @func_4457() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %557 = %556.0;
  %558 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %559 = %558.0;
  %560 = cast(%559, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
  %561 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %562 = cast(%557, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
  %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %564 = not_equal(%562, %563) /* ty=Tensor[(15, 16, 2), bool] */;
  %565 = @func_3478() /* ty=Tensor[(15, 16, 2), float32] */;
  (%564, %565)
}

def @func_3628() -> Tensor[(15, 16, 2), float32] {
  %566 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %566.0
}

def @func_4377() -> (Tensor[(15, 16, 2), float32],) {
  %567 = @func_3089() /* ty=Tensor[(15, 16, 2), float32] */;
  (%567,)
}

def @func_11617() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %568 = @func_7471() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */;
  %569 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  %570 = %568.1;
  (%569, %570)
}

def @func_7201(%var_7178: Tensor[(1344), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  %571 = @func_5913() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %572 = cast(meta[relay.Constant][33] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %573 = cast(meta[relay.Constant][33] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %574 = reshape(%572, newshape=[9, 5, 8]) /* ty=Tensor[(9, 5, 8), uint8] */;
  %575 = reshape(%573, newshape=[9, 5, 8]) /* ty=Tensor[(9, 5, 8), uint8] */;
  %576 = @func_2875(%574, %575) /* ty=(Tensor[(9, 5, 8), uint8],) */;
  %577 = cast(%var_7178, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %578 = reshape(%577, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %579 = %571.0;
  %580 = %576.0;
  %581 = @func_2152(%578) /* ty=Tensor[(8, 14, 12), float32] */;
  (%579, %580, meta[relay.Constant][33] /* ty=Tensor[(360), uint8] */, %581, %var_7178)
}

def @func_11791() -> (Tensor[(15, 16, 2), float32],) {
  %582 = @func_10120() /* ty=Tensor[(15, 16, 2), float32] */;
  (%582,)
}

def @func_3222(%var_3177: Tensor[(12, 16, 15), uint16], %var_3190: Tensor[(756), uint32], %var_3197: Tensor[(105), float64], %var_3206: Tensor[(1176), float64], %var_3220: Tensor[(1, 1872), float32]) -> (Tensor[(12, 16, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(756), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(12, 7, 14), float64], uint16, Tensor[(5, 3), uint16], Tensor[(1176), float64], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1, 1872), float32]) {
  %583 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 16, 15), uint16] */, dtype="uint16") /* ty=Tensor[(12, 16, 15), uint16] */;
  %584 = shape_of(%var_3177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%var_3177, dtype="uint16") /* ty=Tensor[(12, 16, 15), uint16] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %587 = cast(meta[relay.Constant][35] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %588 = cast(%var_3190, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %589 = reshape(%587, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
  %590 = reshape(%588, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), uint32] */;
  %591 = cast(%var_3197, dtype="float64") /* ty=Tensor[(105), float64] */;
  %592 = reshape(%591, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %593 = cast(meta[relay.Constant][36] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %594 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 3), uint16] */, dtype="uint16") /* ty=Tensor[(5, 3), uint16] */;
  %595 = cast(%var_3206, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %596 = reshape(%593, newshape=[]) /* ty=uint16 */;
  %597 = reshape(%594, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
  %598 = reshape(%595, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
  %599 = @func_813(%596, %597, %598) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
  %600 = cast(meta[relay.Constant][38] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %601 = cast(%var_3220, dtype="float32") /* ty=Tensor[(1, 1872), float32] */;
  %602 = cast(%var_3206, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %603 = reshape(%600, newshape=[1, 9, 16]) /* ty=Tensor[(1, 9, 16), float32] */;
  %604 = reshape(%601, newshape=[13, 9, 16]) /* ty=Tensor[(13, 9, 16), float32] */;
  %605 = reshape(%602, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %606 = @func_1537(%603, %604, %605) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) */;
  %607 = right_shift(%585, %586) /* ty=Tensor[(12, 16, 15), uint16] */;
  %608 = @func_2119(%589, %590) /* ty=Tensor[(7, 12, 9), uint32] */;
  %609 = @func_1694(%592) /* ty=Tensor[(5, 7, 3), float64] */;
  %610 = %599.3;
  %611 = %606.2;
  (%607, %608, meta[relay.Constant][35] /* ty=Tensor[(63), uint32] */, %var_3190, %609, %var_3197, %610, meta[relay.Constant][36] /* ty=uint16 */, meta[relay.Constant][37] /* ty=Tensor[(5, 3), uint16] */, %var_3206, %611, meta[relay.Constant][38] /* ty=Tensor[(144), float32] */, %var_3220)
}

def @func_10709() -> Tensor[(15, 16, 2), float32] {
  @func_10120() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_19197() -> (Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float64]) {
  %612 = @func_16471() /* ty=(Tensor[(12, 7, 14), float64],) */;
  %613 = @func_5425() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %614 = %612.0;
  %615 = %613.1;
  (%614, %615)
}

def @func_6042(%var_6023: Tensor[(63), uint32], %var_6032: Tensor[(3, 252), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(3, 252), bool], Tensor[(3, 252), float32]) {
  %616 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %617 = cast(%var_6023, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %618 = reshape(%617, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %619 = @func_3421(%618) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), float64]) */;
  %620 = %619.3;
  %621 = cast(%var_6032, dtype="bool") /* ty=Tensor[(3, 252), bool] */;
  %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(2), int32] */;
  %623 = cast(%620, dtype="bool") /* ty=Tensor[(3, 252), bool] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %625 = cast(%var_6032, dtype="float32") /* ty=Tensor[(3, 252), float32] */;
  %626 = %616.0;
  %627 = logical_and(%623, %624) /* ty=Tensor[(3, 252), bool] */;
  %628 = cosh(%625) /* ty=Tensor[(3, 252), float32] */;
  (%626, %var_6023, %627, %628)
}

def @func_8050() -> Tensor[(15, 16, 2), float32] {
  %629 = @func_7471() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */;
  %629.1
}

def @func_1537(%var_1504: Tensor[(1, 9, 16), float32], %var_1505: Tensor[(13, 9, 16), float32], %var_1511: Tensor[(1176), float64]) -> (Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) {
  %630 = cast(%var_1511, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %631 = reshape(%630, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
  %632 = cast(%var_1504, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
  %633 = cast(%var_1505, dtype="float32") /* ty=Tensor[(13, 9, 16), float32] */;
  %634 = mod(%632, %633) /* ty=Tensor[(13, 9, 16), float32] */;
  %635 = cast(%634, dtype="float64") /* ty=Tensor[(13, 9, 16), float64] */;
  %636 = @func_164(%631) /* ty=Tensor[(12, 7, 14), float64] */;
  %637 = tan(%635) /* ty=Tensor[(13, 9, 16), float64] */;
  (%636, %var_1511, %637)
}

def @func_10863() -> Tensor[(15, 16, 2), float32] {
  %638 = @func_9831() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %638.1
}

def @func_10996() -> Tensor[(15, 16, 2), float32] {
  %639 = @func_8010() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %639.0
}

def @func_15139() -> Tensor[(15, 16, 2), float64] {
  @func_5487() /* ty=Tensor[(15, 16, 2), float64] */
}

def @func_16220() -> Tensor[(15, 16, 2), float32] {
  @func_6909() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_16843() -> (Tensor[(15, 16, 2), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) {
  %640 = @func_6637() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %641 = @func_11435() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %642 = %640.0;
  %643 = @func_16427() /* ty=Tensor[(16), float32] */;
  %644 = %641.2;
  (%642, %643, %644)
}

def @func_14522() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
  %645 = @func_12589() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %646 = @func_11617() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %647 = @func_11190() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %648 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %649 = %645.0;
  %650 = %646.1;
  %651 = %647.0;
  %652 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  %653 = %648.0;
  (%649, %650, %651, %652, %653)
}

def @func_5763(%var_5740: Tensor[(1, 9, 10), uint16], %var_5741: Tensor[(15, 9, 10), uint16], %var_5752: Tensor[(144), float32]) -> (Tensor[(15, 9, 10), uint16], Tensor[(15, 3, 12), float32], bool, Tensor[(540), bool], Tensor[(144), float32]) {
  %654 = cast(%var_5740, dtype="uint16") /* ty=Tensor[(1, 9, 10), uint16] */;
  %655 = cast(%var_5741, dtype="uint16") /* ty=Tensor[(15, 9, 10), uint16] */;
  %656 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %657 = cast(meta[relay.Constant][39] /* ty=Tensor[(540), bool] */, dtype="bool") /* ty=Tensor[(540), bool] */;
  %658 = cast(%var_5752, dtype="float32") /* ty=Tensor[(144), float32] */;
  %659 = reshape(%656, newshape=[]) /* ty=bool */;
  %660 = reshape(%657, newshape=[15, 3, 12]) /* ty=Tensor[(15, 3, 12), bool] */;
  %661 = reshape(%658, newshape=[2, 72]) /* ty=Tensor[(2, 72), float32] */;
  %662 = @func_4208(%659, %660, %661) /* ty=(Tensor[(15, 3, 12), float32], Tensor[(1176), float64], Tensor[(756, 1), uint32], Tensor[(21, 5), float64], Tensor[(2, 72), float32]) */;
  %663 = right_shift(%654, %655) /* ty=Tensor[(15, 9, 10), uint16] */;
  %664 = %662.0;
  (%663, %664, True /* ty=bool */, meta[relay.Constant][39] /* ty=Tensor[(540), bool] */, %var_5752)
}

def @func_11931() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %665 = @func_8010() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %666 = @func_11190() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %667 = @func_4133() /* ty=Tensor[(15, 16, 2), float32] */;
  %668 = @func_11764() /* ty=Tensor[(15, 16, 2), float32] */;
  %669 = %665.0;
  %670 = %666.0;
  (%667, %668, %669, %670)
}

def @func_13781(%var_13702: Tensor[(36, 10), uint8], %var_13733: Tensor[(1344), float32], %var_13734: Tensor[(320), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(36, 10), uint8], Tensor[(5, 7, 3), float64], Tensor[(7, 15), float64], Tensor[(1344), float32], Tensor[(320), float32], Tensor[(3, 3, 5), float32], Tensor[(63, 15), bool]) {
  %671 = cast(%var_13702, dtype="uint8") /* ty=Tensor[(36, 10), uint8] */;
  %672 = reshape(%671, newshape=[2, 180]) /* ty=Tensor[(2, 180), uint8] */;
  %673 = @func_11679(%672) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(2, 180), uint8], Tensor[(15, 16, 2), bool], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
  %674 = cast(meta[relay.Constant][40] /* ty=Tensor[(63, 1), uint32] */, dtype="uint32") /* ty=Tensor[(63, 1), uint32] */;
  %675 = cast(meta[relay.Constant][41] /* ty=Tensor[(7, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
  %676 = cast(%var_13733, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %677 = cast(%var_13734, dtype="float32") /* ty=Tensor[(320), float32] */;
  %678 = cast(meta[relay.Constant][42] /* ty=Tensor[(15), uint16] */, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %679 = reshape(%674, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %680 = reshape(%675, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %681 = reshape(%676, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
  %682 = reshape(%677, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %683 = reshape(%678, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %684 = @func_4865(%679, %680, %681, %682, %683) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64], Tensor[(3, 252), float64], Tensor[(63), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(12, 7, 14), float64], Tensor[(10, 8, 4), float64], Tensor[(320), float32], Tensor[(15), uint16]) */;
  %685 = cast(meta[relay.Constant][40] /* ty=Tensor[(63, 1), uint32] */, dtype="bool") /* ty=Tensor[(63, 1), bool] */;
  %686 = cast(meta[relay.Constant][42] /* ty=Tensor[(15), uint16] */, dtype="bool") /* ty=Tensor[(15), bool] */;
  %687 = @func_5320() /* ty=Tensor[(15, 16, 2), float32] */;
  %688 = %673.1;
  %689 = %684.6;
  %690 = @func_9003() /* ty=Tensor[(3, 3, 5), float32] */;
  %691 = equal(%685, %686) /* ty=Tensor[(63, 15), bool] */;
  (%687, %688, %var_13702, %689, meta[relay.Constant][41] /* ty=Tensor[(7, 15), float64] */, %var_13733, %var_13734, %690, %691)
}

def @func_10252() -> (Tensor[(15, 16, 2), float32],) {
  %692 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %693 = %692.0;
  (%693,)
}

def @func_16772() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %694 = @func_11791() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %695 = @func_12814() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float64]) */;
  %696 = @func_15326() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */;
  %697 = %694.0;
  %698 = %695.0;
  %699 = %696.0;
  (%697, %698, %699)
}

def @func_15585() -> Tensor[(15, 16, 2), float32] {
  %700 = @func_14522() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %700.2
}

def @func_3001(%var_2964: float64, %var_2965: Tensor[(16, 1, 1), float64], %var_2972: Tensor[(24, 6), float32], %var_2978: Tensor[(16, 1176), float64], %var_2995: Tensor[(63), uint32]) -> (Tensor[(16, 1, 1), float64], Tensor[(13, 9, 16), float64], Tensor[(24, 6), float32], Tensor[(1872), float32], Tensor[(16, 1176), float64], Tensor[(12, 7, 14), float64], Tensor[(1, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), uint32]) {
  %701 = cast(%var_2964, dtype="float64") /* ty=float64 */;
  %702 = cast(%var_2965, dtype="float64") /* ty=Tensor[(16, 1, 1), float64] */;
  %703 = cast(%var_2972, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %704 = cast(meta[relay.Constant][43] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %705 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 1176), float64] */, dtype="float64") /* ty=Tensor[(1, 1176), float64] */;
  %706 = reshape(%703, newshape=[1, 9, 16]) /* ty=Tensor[(1, 9, 16), float32] */;
  %707 = reshape(%704, newshape=[13, 9, 16]) /* ty=Tensor[(13, 9, 16), float32] */;
  %708 = reshape(%705, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %709 = @func_1537(%706, %707, %708) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) */;
  %710 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 1176), float64] */, dtype="float64") /* ty=Tensor[(1, 1176), float64] */;
  %711 = cast(%var_2978, dtype="float64") /* ty=Tensor[(16, 1176), float64] */;
  %712 = cast(%var_2964, dtype="uint16") /* ty=uint16 */;
  %713 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 15), uint16] */, dtype="uint16") /* ty=Tensor[(1, 15), uint16] */;
  %714 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 1176), float64] */, dtype="float64") /* ty=Tensor[(1, 1176), float64] */;
  %715 = reshape(%712, newshape=[]) /* ty=uint16 */;
  %716 = reshape(%713, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
  %717 = reshape(%714, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
  %718 = @func_813(%715, %716, %717) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
  %719 = cast(%var_2995, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %720 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 252), uint32] */, dtype="uint32") /* ty=Tensor[(3, 252), uint32] */;
  %721 = reshape(%719, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
  %722 = reshape(%720, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), uint32] */;
  %723 = power(%701, %702) /* ty=Tensor[(16, 1, 1), float64] */;
  %724 = %709.2;
  %725 = power(%710, %711) /* ty=Tensor[(16, 1176), float64] */;
  %726 = %718.3;
  %727 = @func_2119(%721, %722) /* ty=Tensor[(7, 12, 9), uint32] */;
  (%723, %724, %var_2972, meta[relay.Constant][43] /* ty=Tensor[(1872), float32] */, %725, %726, meta[relay.Constant][45] /* ty=Tensor[(1, 15), uint16] */, %727, %var_2995, meta[relay.Constant][46] /* ty=Tensor[(3, 252), uint32] */)
}

def @func_12540() -> Tensor[(756), uint32] {
  @func_6205() /* ty=Tensor[(756), uint32] */
}

def @func_9800() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %728 = @func_7947() /* ty=Tensor[(15, 16, 2), float32] */;
  %729 = @func_7862() /* ty=Tensor[(15, 16, 2), float32] */;
  (%728, %729)
}

def @func_4029() -> Tensor[(15, 16, 2), float64] {
  %730 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  %731 = cast(%730, dtype="float64") /* ty=Tensor[(15, 16, 2), float64] */;
  asin(%731) /* ty=Tensor[(15, 16, 2), float64] */
}

def @func_10763() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %732 = @func_6962() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %733 = @func_7947() /* ty=Tensor[(15, 16, 2), float32] */;
  %734 = %732.1;
  (%733, %734)
}

def @func_4159() -> Tensor[(7, 8, 3), float64] {
  %735 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 8, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 3), float64] */;
  rsqrt(%735) /* ty=Tensor[(7, 8, 3), float64] */
}

def @func_4732() -> Tensor[(15, 16, 2), float32] {
  @func_3089() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_9907() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %736 = @func_5085() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %737 = @func_7640() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) */;
  %738 = %736.1;
  %739 = %737.1;
  (%738, %739)
}

def @func_18011(%var_18003: int8) -> Tensor[(16, 12, 8), bool] {
  %740 = cast(%var_18003, dtype="bool") /* ty=bool */;
  %741 = cast(meta[relay.Constant][48] /* ty=Tensor[(16, 12, 8), int8] */, dtype="bool") /* ty=Tensor[(16, 12, 8), bool] */;
  not_equal(%740, %741) /* ty=Tensor[(16, 12, 8), bool] */
}

def @func_12754(%var_12706: Tensor[(11, 1, 3), float32], %var_12714: Tensor[(11, 16, 3), float32]) -> (Tensor[(11, 16, 3), bool], Tensor[(11, 1, 3), float64], Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) {
  %742 = cast(%var_12706, dtype="float32") /* ty=Tensor[(11, 1, 3), float32] */;
  %743 = sqrt(%742) /* ty=Tensor[(11, 1, 3), float32] */;
  %744 = cast(%743, dtype="bool") /* ty=Tensor[(11, 1, 3), bool] */;
  %745 = cast(%var_12714, dtype="bool") /* ty=Tensor[(11, 16, 3), bool] */;
  %746 = cast(%743, dtype="float32") /* ty=Tensor[(11, 1, 3), float32] */;
  %747 = sigmoid(%746) /* ty=Tensor[(11, 1, 3), float32] */;
  %748 = cast(%747, dtype="float64") /* ty=Tensor[(11, 1, 3), float64] */;
  %749 = cast(meta[relay.Constant][49] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %750 = reshape(%749, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
  %751 = cast(meta[relay.Constant][50] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %752 = cast(meta[relay.Constant][50] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %753 = reshape(%751, newshape=[9, 4, 9]) /* ty=Tensor[(9, 4, 9), float64] */;
  %754 = reshape(%752, newshape=[9, 4, 9]) /* ty=Tensor[(9, 4, 9), float64] */;
  %755 = not_equal(%744, %745) /* ty=Tensor[(11, 16, 3), bool] */;
  %756 = acosh(%748) /* ty=Tensor[(11, 1, 3), float64] */;
  %757 = @func_164(%750) /* ty=Tensor[(12, 7, 14), float64] */;
  %758 = @func_12188(%753, %754) /* ty=Tensor[(9, 4, 9), float64] */;
  (%755, %756, %757, meta[relay.Constant][49] /* ty=Tensor[(1176), float64] */, %758, meta[relay.Constant][50] /* ty=Tensor[(324), float64] */)
}

def @func_5604(%var_5550: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(1176), float64]) {
  %759 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %760 = cast(%var_5550, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %761 = reshape(%760, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %762 = @func_4661(%761) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %763 = %759.0;
  %764 = %762.4;
  (%763, %764, %var_5550)
}

def @func_15375(%var_15371: uint16, %var_15373: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], uint16, Tensor[(15), uint16], Tensor[(1176), float64]) {
  %765 = @func_7640() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) */;
  %766 = cast(%var_15371, dtype="uint16") /* ty=uint16 */;
  %767 = cast(meta[relay.Constant][51] /* ty=Tensor[(15), uint16] */, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %768 = cast(%var_15373, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %769 = reshape(%766, newshape=[]) /* ty=uint16 */;
  %770 = reshape(%767, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
  %771 = reshape(%768, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
  %772 = @func_813(%769, %770, %771) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
  %773 = %765.1;
  %774 = %772.1;
  (%773, %774, %var_15371, meta[relay.Constant][51] /* ty=Tensor[(15), uint16] */, %var_15373)
}

def @func_17760(%var_17735: Tensor[(182), int8]) -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), bool], Tensor[(13, ?, 14), bool], Tensor[(182), int8], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) {
  %775 = @func_13541() /* ty=(Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %776 = cast(%var_17735, dtype="int8") /* ty=Tensor[(182), int8] */;
  %777 = cast(%var_17735, dtype="int8") /* ty=Tensor[(182), int8] */;
  %778 = reshape(%776, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), int8] */;
  %779 = reshape(%777, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), int8] */;
  %780 = @func_6550(%778, %779) /* ty=(Tensor[(13, ?, 14), bool],) */;
  %781 = cast(meta[relay.Constant][52] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %782 = reshape(%781, newshape=[360, 1]) /* ty=Tensor[(360, 1), uint8] */;
  %783 = @func_15951(%782) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360, 1), uint8], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %784 = @func_17334() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %785 = @func_9508() /* ty=Tensor[(15, 16, 2), float64] */;
  %786 = %775.0;
  %787 = %780.0;
  %788 = %783.1;
  %789 = %784.0;
  (%785, %786, %787, %var_17735, %788, meta[relay.Constant][52] /* ty=Tensor[(360), uint8] */, %789)
}

def @func_4865(%var_4814: Tensor[(63), uint32], %var_4818: Tensor[(105), float64], %var_4829: Tensor[(1344), float32], %var_4838: Tensor[(320), float32], %var_4839: Tensor[(15), uint16]) -> (Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64], Tensor[(3, 252), float64], Tensor[(63), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(12, 7, 14), float64], Tensor[(10, 8, 4), float64], Tensor[(320), float32], Tensor[(15), uint16]) {
  %790 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %791 = cast(meta[relay.Constant][53] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %792 = reshape(%791, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %793 = @func_4661(%792) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %794 = cast(%var_4814, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %795 = reshape(%794, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %796 = @func_3421(%795) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), float64]) */;
  %797 = cast(%var_4818, dtype="float64") /* ty=Tensor[(105), float64] */;
  %798 = reshape(%797, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %799 = cast(%var_4829, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %800 = reshape(%799, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %801 = cast(meta[relay.Constant][53] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %802 = reshape(%801, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
  %803 = cast(%var_4838, dtype="float32") /* ty=Tensor[(320), float32] */;
  %804 = cast(%var_4839, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %805 = reshape(%803, newshape=[10, 8, 4]) /* ty=Tensor[(10, 8, 4), float32] */;
  %806 = reshape(%804, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %807 = @func_1499(%805, %806) /* ty=(Tensor[(588, 2), float64], uint16, Tensor[(15), uint16], Tensor[(1176), float64], Tensor[(588, 2), float64], Tensor[(10, 8, 4), float64]) */;
  %808 = %790.0;
  %809 = %793.1;
  %810 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  %811 = %796.3;
  %812 = @func_1694(%798) /* ty=Tensor[(5, 7, 3), float64] */;
  %813 = @func_2152(%800) /* ty=Tensor[(8, 14, 12), float32] */;
  %814 = @func_164(%802) /* ty=Tensor[(12, 7, 14), float64] */;
  %815 = %807.5;
  (%808, %809, meta[relay.Constant][53] /* ty=Tensor[(1176), float64] */, %810, %811, %var_4814, %812, %var_4818, %813, %var_4829, %814, %815, %var_4838, %var_4839)
}

def @func_12851() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], uint16, Tensor[(15), uint16]) {
  %816 = cast(meta[relay.Constant][54] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %817 = cast(meta[relay.Constant][55] /* ty=Tensor[(15), uint16] */, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %818 = reshape(%816, newshape=[]) /* ty=uint16 */;
  %819 = reshape(%817, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %820 = @func_11115(%818, %819) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1176), bool], uint16, Tensor[(15), uint16], Tensor[(15, 16, 2), float64], Tensor[(756), uint32], Tensor[(21, 5), float64], uint16, Tensor[(320), float32]) */;
  %821 = @func_9944() /* ty=Tensor[(15, 16, 2), float32] */;
  %822 = %820.4;
  (%821, %822, meta[relay.Constant][54] /* ty=uint16 */, meta[relay.Constant][55] /* ty=Tensor[(15), uint16] */)
}

def @func_13980() -> (Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) {
  %823 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %824 = @func_9072() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %825 = %823.0;
  %826 = %824.0;
  (%825, %826)
}

def @func_19818() -> (Tensor[(1176), float64],) {
  %827 = @func_17953() /* ty=Tensor[(1176), float64] */;
  (%827,)
}

def @func_12975() -> Tensor[(15, 16, 2), float64] {
  %828 = @func_7673() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %828.0
}

def @func_17441() -> Tensor[(15, 16, 2), bool] {
  %829 = @func_5251() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(360), uint8]) */;
  %829.1
}

def @func_15418() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %830 = @func_15239() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %831 = %830.3;
  %832 = @func_11764() /* ty=Tensor[(15, 16, 2), float32] */;
  (%831, %832)
}

def @func_13605(%var_13603: Tensor[(960), int8]) -> (Tensor[(1344), float32], Tensor[(12, 5, 16), int8], Tensor[(80), int8], Tensor[(960), int8]) {
  %833 = @func_13507() /* ty=(Tensor[(1344), float32], Tensor[(15, 16, 2), float32]) */;
  %834 = cast(meta[relay.Constant][56] /* ty=Tensor[(80), int8] */, dtype="int8") /* ty=Tensor[(80), int8] */;
  %835 = cast(%var_13603, dtype="int8") /* ty=Tensor[(960), int8] */;
  %836 = reshape(%834, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), int8] */;
  %837 = reshape(%835, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), int8] */;
  %838 = @func_11218(%836, %837) /* ty=(Tensor[(12, 5, 16), int8],) */;
  %839 = %833.0;
  %840 = %838.0;
  (%839, %840, meta[relay.Constant][56] /* ty=Tensor[(80), int8] */, %var_13603)
}

def @func_9529() -> Tensor[(15, 16, 2), float32] {
  @func_7947() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_13338(%var_13298: Tensor[(12, 10, 8), float32], %var_13336: Tensor[(144), float32]) -> (Tensor[(12, 10, 8), uint16], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(144), float32]) {
  %841 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %842 = %841.0;
  %843 = cast(%var_13298, dtype="uint16") /* ty=Tensor[(12, 10, 8), uint16] */;
  %844 = shape_of(%842, dtype="int32") /* ty=Tensor[(3), int32] */;
  %845 = cast(%842, dtype="uint16") /* ty=Tensor[(12, 10, 8), uint16] */;
  %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %847 = cast(%var_13336, dtype="float32") /* ty=Tensor[(144), float32] */;
  %848 = reshape(%847, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %849 = @func_11572(%848) /* ty=(Tensor[(10, 8, 11), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(8, 14, 12), float32], Tensor[(144), float32], Tensor[(1344), float32], Tensor[(8, 14, 12), float32]) */;
  %850 = logical_xor(%845, %846) /* ty=Tensor[(12, 10, 8), uint16] */;
  %851 = @func_11764() /* ty=Tensor[(15, 16, 2), float32] */;
  %852 = %849.3;
  (%850, %851, %852, %var_13336)
}

def @func_813(%var_795: uint16, %var_796: Tensor[(1, 1, 15), uint16], %var_802: Tensor[(588, 2), float64]) -> (Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) {
  %853 = cast(%var_795, dtype="bool") /* ty=bool */;
  %854 = cast(%var_796, dtype="bool") /* ty=Tensor[(1, 1, 15), bool] */;
  %855 = cast(%var_802, dtype="float64") /* ty=Tensor[(588, 2), float64] */;
  %856 = reshape(%855, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
  %857 = cast(%var_802, dtype="float64") /* ty=Tensor[(588, 2), float64] */;
  %858 = reshape(%857, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
  %859 = greater_equal(%853, %854) /* ty=Tensor[(1, 1, 15), bool] */;
  %860 = @func_164(%856) /* ty=Tensor[(12, 7, 14), float64] */;
  %861 = @func_164(%858) /* ty=Tensor[(12, 7, 14), float64] */;
  (%859, %860, %var_802, %861)
}

def @func_3089() -> Tensor[(15, 16, 2), float32] {
  %862 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %862.0
}

def @func_5653() -> (Tensor[(15, 16, 2), float32],) {
  %863 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  (%863,)
}

def @func_13182() -> Tensor[(15, 16, 2), float32] {
  %864 = @func_9209() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %864.0
}

def @func_9031() -> (Tensor[(15, 16, 2), float32],) {
  %865 = @func_5425() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %866 = %865.3;
  (%866,)
}

def @func_15690() -> (Tensor[(15, 16, 2), float32],) {
  %867 = @func_7471() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */;
  %868 = %867.0;
  (%868,)
}

def @func_15457() -> Tensor[(15, 16, 2), float32] {
  %869 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %869.0
}

def @func_13841(%var_13819: Tensor[(168, 8), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(168, 8), float64]) {
  %870 = @func_11931() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %871 = @func_10797() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(168, 8), float32]) */;
  %872 = %871.2;
  %873 = cast(%var_13819, dtype="bool") /* ty=Tensor[(168, 8), bool] */;
  %874 = shape_of(%872, dtype="int32") /* ty=Tensor[(2), int32] */;
  %875 = cast(%872, dtype="bool") /* ty=Tensor[(168, 8), bool] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %877 = not_equal(%875, %876) /* ty=Tensor[(168, 8), bool] */;
  %878 = cast(%877, dtype="float64") /* ty=Tensor[(168, 8), float64] */;
  %879 = %870.0;
  %880 = cosh(%878) /* ty=Tensor[(168, 8), float64] */;
  (%879, %880)
}

def @func_15735() -> Tensor[(15, 16, 2), float32] {
  %881 = @func_15690() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %881.0
}

def @func_4601() -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
  %882 = @func_3628() /* ty=Tensor[(15, 16, 2), float32] */;
  %883 = cast(%882, dtype="float64") /* ty=Tensor[(15, 16, 2), float64] */;
  %884 = cast(%882, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
  %885 = acosh(%883) /* ty=Tensor[(15, 16, 2), float64] */;
  %886 = sinh(%884) /* ty=Tensor[(15, 16, 2), float32] */;
  (%885, %886)
}

def @main(%var_19860: Tensor[(144, 1), float32]) -> (Tensor[(12, 10, 8), float32], Tensor[(1176), float64], Tensor[(144, 105), int32]) {
  %887 = cast(meta[relay.Constant][57] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %888 = cast(%var_19860, dtype="float32") /* ty=Tensor[(144, 1), float32] */;
  %889 = reshape(%887, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %890 = reshape(%888, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %891 = @func_4101(%889, %890) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(3, 252), uint32], Tensor[(105), float64], Tensor[(144), float32]) */;
  %892 = cast(%var_19860, dtype="int32") /* ty=Tensor[(144, 1), int32] */;
  %893 = cast(meta[relay.Constant][57] /* ty=Tensor[(105), float64] */, dtype="int32") /* ty=Tensor[(105), int32] */;
  %894 = @func_19359() /* ty=Tensor[(12, 10, 8), float32] */;
  %895 = %891.1;
  %896 = logical_xor(%892, %893) /* ty=Tensor[(144, 105), int32] */;
  (%894, %895, %896)
}

def @func_10903() -> Tensor[(15, 16, 2), float32] {
  @func_3269() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_9253() -> (Tensor[(15, 16, 2), float32],) {
  %897 = @func_6909() /* ty=Tensor[(15, 16, 2), float32] */;
  (%897,)
}

def @func_11977() -> (Tensor[(15, 16, 2), float32],) {
  %898 = @func_5251() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(360), uint8]) */;
  %899 = %898.0;
  (%899,)
}

def @func_8493(%var_8392: Tensor[(21, 5), float64], %var_8400: Tensor[(420), float64], %var_8425: uint16, %var_8426: Tensor[(15), uint16], %var_8427: Tensor[(84, 14), float64]) -> (Tensor[(8, 14, 12), float32], Tensor[(5, 7, 3), float64], Tensor[(21, 5), float64], Tensor[(420), float64], Tensor[(12, 7, 14), float64], Tensor[(15), uint16], Tensor[(15, 16, 2), float32], Tensor[(84, 14), int64], Tensor[(2, 14, 15), float64], Tensor[(5, 7, 3), float64], Tensor[(15, 16, 2), float32]) {
  %900 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %901 = cast(%var_8392, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %902 = reshape(%901, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %903 = cast(%var_8425, dtype="uint16") /* ty=uint16 */;
  %904 = cast(%var_8426, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %905 = cast(%var_8427, dtype="float64") /* ty=Tensor[(84, 14), float64] */;
  %906 = reshape(%903, newshape=[]) /* ty=uint16 */;
  %907 = reshape(%904, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
  %908 = reshape(%905, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
  %909 = @func_813(%906, %907, %908) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
  %910 = @func_6637() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %911 = cast(%var_8427, dtype="int64") /* ty=Tensor[(84, 14), int64] */;
  %912 = cast(%var_8425, dtype="int64") /* ty=int64 */;
  %913 = cast(%var_8400, dtype="float64") /* ty=Tensor[(420), float64] */;
  %914 = reshape(%913, newshape=[2, 14, 15]) /* ty=Tensor[(2, 14, 15), float64] */;
  %915 = @func_7894(%914) /* ty=(Tensor[(2, 14, 15), float64],) */;
  %916 = %915.0;
  %917 = cast(%916, dtype="float64") /* ty=Tensor[(2, 14, 15), float64] */;
  %918 = cast(%var_8392, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %919 = reshape(%918, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %920 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %921 = %900.2;
  %922 = @func_1694(%902) /* ty=Tensor[(5, 7, 3), float64] */;
  %923 = %909.1;
  %924 = %910.0;
  %925 = logical_xor(%911, %912) /* ty=Tensor[(84, 14), int64] */;
  %926 = atanh(%917) /* ty=Tensor[(2, 14, 15), float64] */;
  %927 = @func_1694(%919) /* ty=Tensor[(5, 7, 3), float64] */;
  %928 = %920.0;
  (%921, %922, %var_8392, %var_8400, %923, %var_8426, %924, %925, %926, %927, %928)
}

def @func_16652(%var_16594: Tensor[(5, 16, 8), bool]) -> (Tensor[(5, 16, 8), bool], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32]) {
  %929 = cast(%var_16594, dtype="bool") /* ty=Tensor[(5, 16, 8), bool] */;
  %930 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(5, 16, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(meta[relay.Constant][58] /* ty=Tensor[(5, 16, 8), bool] */, dtype="bool") /* ty=Tensor[(5, 16, 8), bool] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %933 = @func_11791() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %934 = @func_13907() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %935 = @func_8919() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) */;
  %936 = logical_and(%931, %932) /* ty=Tensor[(5, 16, 8), bool] */;
  %937 = %933.0;
  %938 = %934.0;
  %939 = %935.1;
  (%936, %937, %938, %939)
}

def @func_7862() -> Tensor[(15, 16, 2), float32] {
  %940 = @func_6962() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %940.0
}

def @func_5048(%var_5046: Tensor[(360), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) {
  %941 = cast(%var_5046, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %942 = cast(%var_5046, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %943 = reshape(%941, newshape=[9, 5, 8]) /* ty=Tensor[(9, 5, 8), uint8] */;
  %944 = reshape(%942, newshape=[9, 5, 8]) /* ty=Tensor[(9, 5, 8), uint8] */;
  %945 = @func_2875(%943, %944) /* ty=(Tensor[(9, 5, 8), uint8],) */;
  %946 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  %947 = %945.0;
  (%946, %947, %var_5046)
}

def @func_8095() -> (Tensor[(756), uint32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) {
  %948 = @func_4344() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(7, 12, 9), uint32], Tensor[(1, 63), uint32], Tensor[(756), uint32]) */;
  %949 = cast(meta[relay.Constant][59] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %950 = reshape(%949, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %951 = @func_4661(%950) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %952 = %948.3;
  %953 = %951.0;
  (%952, %953, meta[relay.Constant][59] /* ty=Tensor[(1176), float64] */)
}

def @func_5913() -> (Tensor[(15, 16, 2), float32],) {
  %954 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %955 = %954.0;
  (%955,)
}

def @func_5085() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %956 = @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %957 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  %958 = %956.0;
  (%957, %958)
}

def @func_7894(%var_7891: Tensor[(2, 14, 15), float64]) -> (Tensor[(2, 14, 15), float64],) {
  %959 = cast(%var_7891, dtype="float64") /* ty=Tensor[(2, 14, 15), float64] */;
  %960 = erf(%959) /* ty=Tensor[(2, 14, 15), float64] */;
  (%960,)
}

def @func_8181(%var_8170: Tensor[(7, 15), float64], %var_8171: Tensor[(1344, 1), float32], %var_8172: Tensor[(320), float32], %var_8173: Tensor[(5, 3), uint16]) -> (Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64], Tensor[(1176), float64], Tensor[(1, 63), uint32], Tensor[(7, 15), float64], Tensor[(1344, 1), float32], Tensor[(320), float32], Tensor[(5, 3), uint16]) {
  %961 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %962 = @func_7673() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %963 = cast(meta[relay.Constant][60] /* ty=Tensor[(1, 63), uint32] */, dtype="uint32") /* ty=Tensor[(1, 63), uint32] */;
  %964 = cast(%var_8170, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
  %965 = cast(%var_8171, dtype="float32") /* ty=Tensor[(1344, 1), float32] */;
  %966 = cast(%var_8172, dtype="float32") /* ty=Tensor[(320), float32] */;
  %967 = cast(%var_8173, dtype="uint16") /* ty=Tensor[(5, 3), uint16] */;
  %968 = reshape(%963, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %969 = reshape(%964, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %970 = reshape(%965, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
  %971 = reshape(%966, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %972 = reshape(%967, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %973 = @func_4865(%968, %969, %970, %971, %972) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64], Tensor[(3, 252), float64], Tensor[(63), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(12, 7, 14), float64], Tensor[(10, 8, 4), float64], Tensor[(320), float32], Tensor[(15), uint16]) */;
  %974 = %961.0;
  %975 = %962.0;
  %976 = %973.2;
  (%974, %975, %976, meta[relay.Constant][60] /* ty=Tensor[(1, 63), uint32] */, %var_8170, %var_8171, %var_8172, %var_8173)
}

def @func_6205() -> Tensor[(756), uint32] {
  %977 = @func_4344() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(7, 12, 9), uint32], Tensor[(1, 63), uint32], Tensor[(756), uint32]) */;
  %977.3
}

def @func_11435() -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) {
  %978 = @func_11340() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %979 = @func_10797() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(168, 8), float32]) */;
  %980 = @func_11340() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %981 = cast(meta[relay.Constant][61] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %982 = reshape(%981, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
  %983 = %978.3;
  %984 = %979.1;
  %985 = %980.2;
  %986 = @func_164(%982) /* ty=Tensor[(12, 7, 14), float64] */;
  (%983, %984, %985, %986, meta[relay.Constant][61] /* ty=Tensor[(1176), float64] */)
}

def @func_9003() -> Tensor[(3, 3, 5), float32] {
  %987 = cast(meta[relay.Constant][62] /* ty=Tensor[(3, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(3, 3, 5), float32] */;
  cos(%987) /* ty=Tensor[(3, 3, 5), float32] */
}

def @func_10673() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %988 = @func_9209() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %989 = @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %990 = %988.0;
  %991 = %989.0;
  (%990, %991)
}

def @func_5487() -> Tensor[(15, 16, 2), float64] {
  %992 = @func_5085() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %993 = %992.1;
  %994 = cast(meta[relay.Constant][63] /* ty=Tensor[(15, 16, 2), float32] */, dtype="float64") /* ty=Tensor[(15, 16, 2), float64] */;
  %995 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %996 = cast(%993, dtype="float64") /* ty=Tensor[(15, 16, 2), float64] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%996, %997) /* ty=Tensor[(15, 16, 2), float64] */
}

def @func_9282() -> Tensor[(4, 4, 1), float32] {
  %998 = @func_8919() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) */;
  %998.1
}

def @func_12311() -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(168, 8), float32]) {
  %999 = @func_5425() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1000 = cast(meta[relay.Constant][64] /* ty=Tensor[(168, 8), float32] */, dtype="float32") /* ty=Tensor[(168, 8), float32] */;
  %1001 = reshape(%1000, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %1002 = cast(meta[relay.Constant][64] /* ty=Tensor[(168, 8), float32] */, dtype="float32") /* ty=Tensor[(168, 8), float32] */;
  %1003 = %999.4;
  %1004 = @func_2152(%1001) /* ty=Tensor[(8, 14, 12), float32] */;
  %1005 = log2(%1002) /* ty=Tensor[(168, 8), float32] */;
  (%1003, %1004, %1005)
}

def @func_2815(%var_2812: Tensor[(4, 4, 1), float32]) -> (Tensor[(4, 4, 1), float32],) {
  %1006 = cast(%var_2812, dtype="float32") /* ty=Tensor[(4, 4, 1), float32] */;
  %1007 = cosh(%1006) /* ty=Tensor[(4, 4, 1), float32] */;
  (%1007,)
}

def @func_17817() -> Tensor[(15, 16, 2), float32] {
  %1008 = @func_10945() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1008.1
}

def @func_16399(%var_16387: Tensor[(90), uint16], %var_16388: Tensor[(1350), uint16]) -> (Tensor[(12, 10, 8), float32], Tensor[(144), float32], Tensor[(90), uint16], Tensor[(1350), uint16], Tensor[(144), float32], Tensor[(15, 16, 2), float32]) {
  %1009 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %1010 = cast(%var_16387, dtype="uint16") /* ty=Tensor[(90), uint16] */;
  %1011 = cast(%var_16388, dtype="uint16") /* ty=Tensor[(1350), uint16] */;
  %1012 = cast(meta[relay.Constant][65] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1013 = reshape(%1010, newshape=[90]) /* ty=Tensor[(90), uint16] */;
  %1014 = reshape(%1011, newshape=[1350]) /* ty=Tensor[(1350), uint16] */;
  %1015 = reshape(%1012, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1016 = @func_13886(%1013, %1014, %1015) /* ty=(Tensor[(1344), float32], Tensor[(144), float32], Tensor[(90), uint16], Tensor[(1350), uint16], Tensor[(144), float32], Tensor[(13, ?, 14), bool], Tensor[(182), int8]) */;
  %1017 = %1009.0;
  %1018 = %1016.1;
  %1019 = @func_16079() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1017, %1018, %var_16387, %var_16388, meta[relay.Constant][65] /* ty=Tensor[(144), float32] */, %1019)
}

def @func_10945() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1020 = @func_9100() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1021 = @func_6473() /* ty=Tensor[(15, 16, 2), float32] */;
  %1022 = %1020.0;
  (%1021, %1022)
}

def @func_1694(%var_1680: Tensor[(5, 7, 3), float64]) -> Tensor[(5, 7, 3), float64] {
  %1023 = cast(%var_1680, dtype="float64") /* ty=Tensor[(5, 7, 3), float64] */;
  cos(%1023) /* ty=Tensor[(5, 7, 3), float64] */
}

def @func_7832(%var_7818: uint16, %var_7819: Tensor[(15), uint16]) -> (Tensor[(15, 16, 2), float32], Tensor[(1, 1, 15), bool], uint16, Tensor[(15), uint16], Tensor[(1176), bool]) {
  %1024 = @func_4457() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1025 = cast(%var_7818, dtype="uint16") /* ty=uint16 */;
  %1026 = cast(%var_7819, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %1027 = cast(meta[relay.Constant][66] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1028 = reshape(%1025, newshape=[]) /* ty=uint16 */;
  %1029 = reshape(%1026, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
  %1030 = reshape(%1027, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
  %1031 = @func_813(%1028, %1029, %1030) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
  %1032 = cast(meta[relay.Constant][67] /* ty=Tensor[(1176), float64] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
  %1033 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(1176), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1034 = cast(meta[relay.Constant][66] /* ty=Tensor[(1176), float64] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1036 = %1024.0;
  %1037 = %1031.0;
  %1038 = not_equal(%1034, %1035) /* ty=Tensor[(1176), bool] */;
  (%1036, %1037, %var_7818, %var_7819, %1038)
}

def @func_10432() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1039 = @func_8010() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1040 = @func_9800() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1041 = %1039.0;
  %1042 = %1040.1;
  (%1041, %1042)
}

def @func_5320() -> Tensor[(15, 16, 2), float32] {
  %1043 = @func_4601() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %1043.1
}

def @func_8025() -> (Tensor[(15, 16, 2), float32],) {
  %1044 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1045 = %1044.0;
  (%1045,)
}

def @func_10418(%var_10413: Tensor[(13, 7, 1), float32]) -> Tensor[(13, 7, 1), float32] {
  %1046 = cast(%var_10413, dtype="float32") /* ty=Tensor[(13, 7, 1), float32] */;
  asinh(%1046) /* ty=Tensor[(13, 7, 1), float32] */
}

def @func_13675() -> Tensor[(16), float32] {
  %1047 = @func_8919() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) */;
  %1047.2
}

def @func_6909() -> Tensor[(15, 16, 2), float32] {
  %1048 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1048.0
}

def @func_16363(%var_16353: Tensor[(3, 3, 5), float32]) -> Tensor[(3, 3, 5), float64] {
  %1049 = @func_12439() /* ty=(Tensor[(3, 3, 5), float32],) */;
  %1050 = %1049.0;
  %1051 = cast(%var_16353, dtype="float64") /* ty=Tensor[(3, 3, 5), float64] */;
  %1052 = shape_of(%1050, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1053 = cast(%1050, dtype="float64") /* ty=Tensor[(3, 3, 5), float64] */;
  %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%1053, %1054) /* ty=Tensor[(3, 3, 5), float64] */
}

def @func_16339() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(16), float32]) {
  %1055 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1056 = %1055.0;
  %1057 = @func_3628() /* ty=Tensor[(15, 16, 2), float32] */;
  %1058 = @func_13675() /* ty=Tensor[(16), float32] */;
  (%1056, %1057, %1058)
}

def @func_3970() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1059 = @func_3551() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %1060 = @func_3089() /* ty=Tensor[(15, 16, 2), float32] */;
  %1061 = %1059.0;
  (%1060, %1061)
}

def @func_15635(%var_15625: Tensor[(13, 2, 15), uint8], %var_15626: Tensor[(13, 2, 15), uint8]) -> (Tensor[(13, 2, 15), uint8], Tensor[(15, 16, 2), float32]) {
  %1062 = cast(%var_15626, dtype="uint8") /* ty=Tensor[(13, 2, 15), uint8] */;
  %1063 = shape_of(%var_15625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1064 = cast(%var_15625, dtype="uint8") /* ty=Tensor[(13, 2, 15), uint8] */;
  %1065 = dyn.reshape(%1062, %1063, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1066 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1067 = bitwise_and(%1064, %1065) /* ty=Tensor[(13, 2, 15), uint8] */;
  %1068 = %1066.0;
  (%1067, %1068)
}

def @func_4457() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1069 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1070 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1071 = %1069.0;
  %1072 = %1070.1;
  (%1071, %1072)
}

def @func_7144() -> (Tensor[(15, 16, 2), float64],) {
  %1073 = @func_4601() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %1074 = %1073.0;
  (%1074,)
}

def @func_3592(%var_3584: Tensor[(18816), float64], %var_3585: Tensor[(63), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(5, 7, 3), float64], Tensor[(21, 5), float64], Tensor[(12, 7, 14), float64], float64, Tensor[(16), float64], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) {
  %1075 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1076 = %1075.0;
  %1077 = cast(%1076, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
  %1078 = cast(meta[relay.Constant][68] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %1079 = reshape(%1078, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %1080 = cast(1.42188f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1081 = cast(meta[relay.Constant][69] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %1082 = cast(meta[relay.Constant][70] /* ty=Tensor[(8, 18), float32] */, dtype="float32") /* ty=Tensor[(8, 18), float32] */;
  %1083 = cast(%var_3584, dtype="float64") /* ty=Tensor[(18816), float64] */;
  %1084 = cast(%var_3585, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1085 = reshape(%1080, newshape=[]) /* ty=float64 */;
  %1086 = reshape(%1081, newshape=[16, 1, 1]) /* ty=Tensor[(16, 1, 1), float64] */;
  %1087 = reshape(%1082, newshape=[24, 6]) /* ty=Tensor[(24, 6), float32] */;
  %1088 = reshape(%1083, newshape=[16, 1176]) /* ty=Tensor[(16, 1176), float64] */;
  %1089 = reshape(%1084, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1090 = @func_3001(%1085, %1086, %1087, %1088, %1089) /* ty=(Tensor[(16, 1, 1), float64], Tensor[(13, 9, 16), float64], Tensor[(24, 6), float32], Tensor[(1872), float32], Tensor[(16, 1176), float64], Tensor[(12, 7, 14), float64], Tensor[(1, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), uint32]) */;
  %1091 = asinh(%1077) /* ty=Tensor[(15, 16, 2), float32] */;
  %1092 = @func_1694(%1079) /* ty=Tensor[(5, 7, 3), float64] */;
  %1093 = %1090.5;
  (%1091, %1092, meta[relay.Constant][68] /* ty=Tensor[(21, 5), float64] */, %1093, 1.42188f64 /* ty=float64 */, meta[relay.Constant][69] /* ty=Tensor[(16), float64] */, meta[relay.Constant][70] /* ty=Tensor[(8, 18), float32] */, %var_3584, %var_3585)
}

def @func_15257() -> Tensor[(15, 16, 2), float32] {
  @func_10709() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_3710(%var_3682: Tensor[(756), uint32], %var_3683: Tensor[(7, 15), float64], %var_3691: Tensor[(144), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(2880), uint16], Tensor[(756), uint32], Tensor[(7, 15), float64], Tensor[(1176), float64], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(144), float32]) {
  %1094 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1095 = cast(meta[relay.Constant][71] /* ty=Tensor[(2880), uint16] */, dtype="uint16") /* ty=Tensor[(2880), uint16] */;
  %1096 = cast(%var_3682, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %1097 = cast(%var_3683, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
  %1098 = cast(meta[relay.Constant][72] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1099 = cast(meta[relay.Constant][73] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %1100 = reshape(%1095, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), uint16] */;
  %1101 = reshape(%1096, newshape=[756]) /* ty=Tensor[(756), uint32] */;
  %1102 = reshape(%1097, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %1103 = reshape(%1098, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1104 = reshape(%1099, newshape=[1, 1872]) /* ty=Tensor[(1, 1872), float32] */;
  %1105 = @func_3222(%1100, %1101, %1102, %1103, %1104) /* ty=(Tensor[(12, 16, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(756), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(12, 7, 14), float64], uint16, Tensor[(5, 3), uint16], Tensor[(1176), float64], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1, 1872), float32]) */;
  %1106 = cast(%var_3691, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1107 = cast(meta[relay.Constant][73] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %1108 = cast(meta[relay.Constant][72] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1109 = reshape(%1106, newshape=[1, 9, 16]) /* ty=Tensor[(1, 9, 16), float32] */;
  %1110 = reshape(%1107, newshape=[13, 9, 16]) /* ty=Tensor[(13, 9, 16), float32] */;
  %1111 = reshape(%1108, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1112 = @func_1537(%1109, %1110, %1111) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) */;
  %1113 = %1094.0;
  %1114 = @func_3628() /* ty=Tensor[(15, 16, 2), float32] */;
  %1115 = %1105.9;
  %1116 = %1112.1;
  (%1113, %1114, %1115, meta[relay.Constant][71] /* ty=Tensor[(2880), uint16] */, %var_3682, %var_3683, meta[relay.Constant][72] /* ty=Tensor[(1176), float64] */, meta[relay.Constant][73] /* ty=Tensor[(1872), float32] */, %1116, %var_3691)
}

def @func_12439() -> (Tensor[(3, 3, 5), float32],) {
  %1117 = @func_9003() /* ty=Tensor[(3, 3, 5), float32] */;
  (%1117,)
}

def @func_19047() -> (Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(12, 7, 14), float64]) {
  %1118 = @func_10546() /* ty=(Tensor[(15, 16, 2), bool],) */;
  %1119 = @func_5251() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(360), uint8]) */;
  %1120 = @func_18918() /* ty=(Tensor[(12, 7, 14), float64],) */;
  %1121 = %1118.0;
  %1122 = %1119.2;
  %1123 = %1120.0;
  (%1121, %1122, %1123)
}

def @func_6128() -> (Tensor[(12, 10, 8), float32],) {
  %1124 = cast(meta[relay.Constant][74] /* ty=Tensor[(12, 10, 8), float32] */, dtype="float32") /* ty=Tensor[(12, 10, 8), float32] */;
  %1125 = cosh(%1124) /* ty=Tensor[(12, 10, 8), float32] */;
  (%1125,)
}

def @func_13389() -> (Tensor[(7, 8, 3), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  %1126 = cast(meta[relay.Constant][75] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %1127 = reshape(%1126, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %1128 = @func_4159() /* ty=Tensor[(7, 8, 3), float64] */;
  %1129 = @func_2152(%1127) /* ty=Tensor[(8, 14, 12), float32] */;
  (%1128, %1129, meta[relay.Constant][75] /* ty=Tensor[(1344), float32] */)
}

def @func_17469() -> (Tensor[(756), uint32], Tensor[(15, 16, 2), float32]) {
  %1130 = @func_15659() /* ty=(Tensor[(756), uint32],) */;
  %1131 = @func_14522() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %1132 = %1130.0;
  %1133 = %1131.1;
  (%1132, %1133)
}

def @func_18541() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) {
  %1134 = @func_9529() /* ty=Tensor[(15, 16, 2), float32] */;
  %1135 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
  (%1134, %1135)
}

def @func_14028() -> Tensor[(15, 16, 2), float64] {
  %1136 = @func_12851() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], uint16, Tensor[(15), uint16]) */;
  %1136.1
}

def @func_3269() -> Tensor[(15, 16, 2), float32] {
  @func_3089() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_16079() -> Tensor[(15, 16, 2), float32] {
  @func_13794() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_17314(%var_17300: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float32]) {
  %1137 = cast(%var_17300, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1138 = reshape(%1137, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1139 = @func_4661(%1138) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %1140 = @func_8825() /* ty=Tensor[(15, 16, 2), float32] */;
  %1141 = %1139.1;
  %1142 = @func_15199() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1140, %1141, %var_17300, %1142)
}

def @func_19214() -> (Tensor[(15, 16, 2), float32],) {
  %1143 = @func_15690() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1144 = %1143.0;
  (%1144,)
}

def @func_5795(%var_5789: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(7, 8, 3), float64]) {
  %1145 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %1146 = cast(%var_5789, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1147 = reshape(%1146, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1148 = @func_4661(%1147) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %1149 = @func_3891() /* ty=Tensor[(15, 16, 2), float32] */;
  %1150 = %1145.2;
  %1151 = %1148.2;
  %1152 = @func_4159() /* ty=Tensor[(7, 8, 3), float64] */;
  (%1149, %1150, %1151, %var_5789, %1152)
}

def @func_4344() -> (Tensor[(15, 16, 2), float64], Tensor[(7, 12, 9), uint32], Tensor[(1, 63), uint32], Tensor[(756), uint32]) {
  %1153 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 63), uint32] */, dtype="uint32") /* ty=Tensor[(1, 63), uint32] */;
  %1154 = cast(meta[relay.Constant][77] /* ty=Tensor[(756), uint32] */, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %1155 = reshape(%1153, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
  %1156 = reshape(%1154, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), uint32] */;
  %1157 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  %1158 = @func_2119(%1155, %1156) /* ty=Tensor[(7, 12, 9), uint32] */;
  (%1157, %1158, meta[relay.Constant][76] /* ty=Tensor[(1, 63), uint32] */, meta[relay.Constant][77] /* ty=Tensor[(756), uint32] */)
}

def @func_4661(%var_4646: Tensor[(1176), float64]) -> (Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) {
  %1159 = cast(meta[relay.Constant][78] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1160 = cast(meta[relay.Constant][79] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %1161 = cast(%var_4646, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1162 = reshape(%1159, newshape=[1, 9, 16]) /* ty=Tensor[(1, 9, 16), float32] */;
  %1163 = reshape(%1160, newshape=[13, 9, 16]) /* ty=Tensor[(13, 9, 16), float32] */;
  %1164 = reshape(%1161, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1165 = @func_1537(%1162, %1163, %1164) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) */;
  %1166 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1167 = %1166.0;
  %1168 = cast(%1167, dtype="float64") /* ty=Tensor[(15, 16, 2), float64] */;
  %1169 = %1165.0;
  %1170 = cos(%1168) /* ty=Tensor[(15, 16, 2), float64] */;
  (%1169, meta[relay.Constant][78] /* ty=Tensor[(144), float32] */, meta[relay.Constant][79] /* ty=Tensor[(1872), float32] */, %var_4646, %1170)
}

def @func_11649() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) {
  %1171 = @func_5653() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1172 = @func_4457() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1173 = @func_8838() /* ty=(Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) */;
  %1174 = %1171.0;
  %1175 = %1172.0;
  %1176 = %1173.0;
  %1177 = @func_3628() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1174, %1175, %1176, %1177)
}

def @func_164(%var_113: Tensor[(12, 7, 14), float64]) -> Tensor[(12, 7, 14), float64] {
  %1178 = cast(%var_113, dtype="float64") /* ty=Tensor[(12, 7, 14), float64] */;
  sinh(%1178) /* ty=Tensor[(12, 7, 14), float64] */
}

def @func_19401() -> Tensor[(15, 16, 2), float32] {
  @func_15748() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_17041(%var_16884: Tensor[(18816), float64], %var_16925: Tensor[(18816), float64], %var_16936: Tensor[(168, 8), float32]) -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(1, 14), float32], Tensor[(15, 16, 2), float32], Tensor[(21, 3), uint32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(168, 8), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(144), float32], Tensor[(168), float64], Tensor[(15, 16, 2), float32], Tensor[(640), bool], Tensor[(18816), uint16]) {
  %1179 = @func_6396() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %1180 = cast(meta[relay.Constant][80] /* ty=Tensor[(1, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
  %1181 = reshape(%1180, newshape=[1, 2, 7]) /* ty=Tensor[(1, 2, 7), float32] */;
  %1182 = @func_16178(%1181) /* ty=(Tensor[(?, 2, 7), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1183 = cast(%var_16884, dtype="float64") /* ty=Tensor[(18816), float64] */;
  %1184 = cast(meta[relay.Constant][81] /* ty=Tensor[(21, 3), uint32] */, dtype="uint32") /* ty=Tensor[(21, 3), uint32] */;
  %1185 = reshape(%1183, newshape=[18816]) /* ty=Tensor[(18816), float64] */;
  %1186 = reshape(%1184, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1187 = @func_11727(%1185, %1186) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 10, 8), float32], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) */;
  %1188 = @func_11340() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1189 = @func_12589() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1190 = cast(%var_16936, dtype="float32") /* ty=Tensor[(168, 8), float32] */;
  %1191 = reshape(%1190, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
  %1192 = @func_7201(%1191) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %1193 = @func_9100() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1194 = @func_9209() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1195 = cast(meta[relay.Constant][82] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1196 = @func_12540() /* ty=Tensor[(756), uint32] */;
  %1197 = cast(%1196, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %1198 = reshape(%1195, newshape=[7, 8, 3]) /* ty=Tensor[(7, 8, 3), float64] */;
  %1199 = reshape(%1197, newshape=[378, 2]) /* ty=Tensor[(378, 2), uint32] */;
  %1200 = @func_8681(%1198, %1199) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(7, 8, 3), int8], Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(378, 2), uint32], Tensor[(1872), float32]) */;
  %1201 = cast(meta[relay.Constant][83] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
  %1202 = reshape(%1201, newshape=[5, 16, 8]) /* ty=Tensor[(5, 16, 8), bool] */;
  %1203 = @func_16652(%1202) /* ty=(Tensor[(5, 16, 8), bool], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32]) */;
  %1204 = cast(%var_16925, dtype="float32") /* ty=Tensor[(18816), float32] */;
  %1205 = shape_of(%var_16884, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1206 = cast(%var_16884, dtype="float32") /* ty=Tensor[(18816), float32] */;
  %1207 = dyn.reshape(%1204, %1205, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1208 = floor_mod(%1206, %1207) /* ty=Tensor[(18816), float32] */;
  %1209 = cast(meta[relay.Constant][84] /* ty=Tensor[(18816), float32] */, dtype="uint16") /* ty=Tensor[(18816), uint16] */;
  %1210 = shape_of(%1208, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1211 = cast(%1208, dtype="uint16") /* ty=Tensor[(18816), uint16] */;
  %1212 = dyn.reshape(%1209, %1210, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %1213 = %1179.3;
  %1214 = %1182.1;
  %1215 = %1187.0;
  %1216 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  %1217 = %1188.3;
  %1218 = %1189.0;
  %1219 = %1192.0;
  %1220 = %1193.0;
  %1221 = %1194.0;
  %1222 = %1200.3;
  %1223 = %1203.2;
  %1224 = right_shift(%1211, %1212) /* ty=Tensor[(18816), uint16] */;
  (%1213, %1214, meta[relay.Constant][80] /* ty=Tensor[(1, 14), float32] */, %1215, meta[relay.Constant][81] /* ty=Tensor[(21, 3), uint32] */, %1216, %1217, %1218, %1219, %var_16936, %1220, %1221, %1196, %1222, meta[relay.Constant][82] /* ty=Tensor[(168), float64] */, %1223, meta[relay.Constant][83] /* ty=Tensor[(640), bool] */, %1224)
}

def @func_8119() -> (Tensor[(15, 16, 2), float32],) {
  %1225 = @func_5425() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1226 = %1225.4;
  (%1226,)
}

def @func_15110() -> (Tensor[(63), bool],) {
  %1227 = @func_7640() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) */;
  %1228 = %1227.2;
  %1229 = cast(meta[relay.Constant][85] /* ty=Tensor[(63), uint32] */, dtype="bool") /* ty=Tensor[(63), bool] */;
  %1230 = shape_of(%1228, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1231 = cast(%1228, dtype="bool") /* ty=Tensor[(63), bool] */;
  %1232 = dyn.reshape(%1229, %1230, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1233 = equal(%1231, %1232) /* ty=Tensor[(63), bool] */;
  (%1233,)
}

def @func_12416() -> (Tensor[(15, 16, 2), float64], Tensor[(7, 8, 3), float64]) {
  %1234 = @func_7673() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %1235 = %1234.0;
  %1236 = @func_4159() /* ty=Tensor[(7, 8, 3), float64] */;
  (%1235, %1236)
}

def @func_15748() -> Tensor[(15, 16, 2), float32] {
  %1237 = @func_11284() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1, 63), uint32]) */;
  %1237.0
}

def @func_19132(%var_19090: Tensor[(1176), float64], %var_19091: Tensor[(1344), float32], %var_19104: Tensor[(105), float64], %var_19105: Tensor[(360), uint8]) -> (Tensor[(15, 1, 13), float64], Tensor[(14, 3, 16), float32], Tensor[(1, 144), float32], Tensor[(1176), float64], Tensor[(1344), float32], Tensor[(594), int32], Tensor[(105), float64], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) {
  %1238 = cast(meta[relay.Constant][86] /* ty=Tensor[(15, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(15, 1, 13), float64] */;
  %1239 = cast(meta[relay.Constant][87] /* ty=Tensor[(1, 144), float32] */, dtype="float32") /* ty=Tensor[(1, 144), float32] */;
  %1240 = cast(%var_19090, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1241 = cast(%var_19091, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %1242 = reshape(%1239, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1243 = reshape(%1240, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1244 = reshape(%1241, newshape=[2, 672]) /* ty=Tensor[(2, 672), float32] */;
  %1245 = @func_6895(%1242, %1243, %1244) /* ty=(Tensor[(14, 3, 16), float32], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(8, 14, 12), float32], Tensor[(2, 672), float32]) */;
  %1246 = cast(%var_19104, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1247 = cast(%var_19105, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %1248 = reshape(%1246, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %1249 = reshape(%1247, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %1250 = @func_7381(%1248, %1249) /* ty=(Tensor[(15, 16, 2), float64], Tensor[(9, 5, 8), uint8], Tensor[(594), int32], Tensor[(21, 5), float64], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) */;
  %1251 = @func_11617() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1252 = acosh(%1238) /* ty=Tensor[(15, 1, 13), float64] */;
  %1253 = %1245.0;
  %1254 = %1250.2;
  %1255 = %1251.1;
  (%1252, %1253, meta[relay.Constant][87] /* ty=Tensor[(1, 144), float32] */, %var_19090, %var_19091, %1254, %var_19104, %var_19105, %1255)
}

def @func_17153() -> (Tensor[(1176), float64], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) {
  %1256 = @func_8095() /* ty=(Tensor[(756), uint32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %1257 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
  %1258 = cast(%1257, dtype="float64") /* ty=Tensor[(12, 7, 14), float64] */;
  %1259 = %1256.2;
  %1260 = @func_10925() /* ty=Tensor[(15, 16, 2), float32] */;
  %1261 = exp(%1258) /* ty=Tensor[(12, 7, 14), float64] */;
  (%1259, %1260, %1261)
}

def @func_19636() -> (Tensor[(15, 16, 2), float32],) {
  %1262 = @func_8358() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1262,)
}

def @func_18639() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(3, 10, 10), float64], Tensor[(30), uint64], Tensor[(300), uint64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1263 = cast(meta[relay.Constant][88] /* ty=Tensor[(30), uint64] */, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %1264 = cast(meta[relay.Constant][89] /* ty=Tensor[(300), uint64] */, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %1265 = reshape(%1263, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), uint64] */;
  %1266 = reshape(%1264, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), uint64] */;
  %1267 = @func_8119() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1268 = @func_10925() /* ty=Tensor[(15, 16, 2), float32] */;
  %1269 = @func_10987() /* ty=Tensor[(15, 16, 2), float32] */;
  %1270 = @func_12513() /* ty=Tensor[(15, 16, 2), float32] */;
  %1271 = @func_9615(%1265, %1266) /* ty=Tensor[(3, 10, 10), float64] */;
  %1272 = @func_13794() /* ty=Tensor[(15, 16, 2), float32] */;
  %1273 = @func_3891() /* ty=Tensor[(15, 16, 2), float32] */;
  %1274 = %1267.0;
  (%1268, %1269, %1270, %1271, meta[relay.Constant][88] /* ty=Tensor[(30), uint64] */, meta[relay.Constant][89] /* ty=Tensor[(300), uint64] */, %1272, %1273, %1274)
}

def @func_19503() -> Tensor[(756), uint32] {
  @func_6205() /* ty=Tensor[(756), uint32] */
}

def @func_15199() -> Tensor[(15, 16, 2), float32] {
  %1275 = @func_8025() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1275.0
}

def @func_18152() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(1344), uint64]) {
  %1276 = @func_9031() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1277 = @func_6001() /* ty=(Tensor[(1344), float32],) */;
  %1278 = %1277.0;
  %1279 = cast(meta[relay.Constant][90] /* ty=Tensor[(1344), float32] */, dtype="uint64") /* ty=Tensor[(1344), uint64] */;
  %1280 = shape_of(%1278, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1281 = cast(%1278, dtype="uint64") /* ty=Tensor[(1344), uint64] */;
  %1282 = dyn.reshape(%1279, %1280, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %1283 = %1276.0;
  %1284 = @func_17441() /* ty=Tensor[(15, 16, 2), bool] */;
  %1285 = left_shift(%1281, %1282) /* ty=Tensor[(1344), uint64] */;
  (%1283, %1284, %1285)
}

def @func_18512() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1286 = @func_11835() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1287 = %1286.0;
  %1288 = @func_15199() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1287, %1288)
}

def @func_3797() -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  %1289 = cast(meta[relay.Constant][91] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %1290 = reshape(%1289, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %1291 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  %1292 = @func_2152(%1290) /* ty=Tensor[(8, 14, 12), float32] */;
  (%1291, %1292, meta[relay.Constant][91] /* ty=Tensor[(1344), float32] */)
}

def @func_13507() -> (Tensor[(1344), float32], Tensor[(15, 16, 2), float32]) {
  %1293 = @func_6001() /* ty=(Tensor[(1344), float32],) */;
  %1294 = @func_11931() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1295 = %1293.0;
  %1296 = %1294.2;
  (%1295, %1296)
}

def @func_12814() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float64]) {
  %1297 = @func_9831() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %1298 = @func_10903() /* ty=Tensor[(15, 16, 2), float32] */;
  %1299 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
  %1300 = %1297.0;
  (%1298, %1299, %1300)
}

def @func_15659() -> (Tensor[(756), uint32],) {
  %1301 = @func_12540() /* ty=Tensor[(756), uint32] */;
  (%1301,)
}

def @func_7640() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) {
  %1302 = cast(meta[relay.Constant][92] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1303 = reshape(%1302, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1304 = @func_3421(%1303) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), float64]) */;
  %1305 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  %1306 = %1304.0;
  (%1305, %1306, meta[relay.Constant][92] /* ty=Tensor[(63), uint32] */)
}

def @func_8553() -> Tensor[(12, 7, 14), float64] {
  %1307 = @func_3551() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %1307.2
}

def @func_2875(%var_2870: Tensor[(9, 5, 8), uint8], %var_2871: Tensor[(9, 5, 8), uint8]) -> (Tensor[(9, 5, 8), uint8],) {
  %1308 = cast(%var_2871, dtype="uint8") /* ty=Tensor[(9, 5, 8), uint8] */;
  %1309 = shape_of(%var_2870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1310 = cast(%var_2870, dtype="uint8") /* ty=Tensor[(9, 5, 8), uint8] */;
  %1311 = dyn.reshape(%1308, %1309, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1312 = logical_xor(%1310, %1311) /* ty=Tensor[(9, 5, 8), uint8] */;
  (%1312,)
}

def @func_3421(%var_3408: Tensor[(63), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), float64]) {
  %1313 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1314 = cast(%var_3408, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1315 = cast(meta[relay.Constant][93] /* ty=Tensor[(3, 252), uint32] */, dtype="uint32") /* ty=Tensor[(3, 252), uint32] */;
  %1316 = reshape(%1314, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
  %1317 = reshape(%1315, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), uint32] */;
  %1318 = cast(meta[relay.Constant][93] /* ty=Tensor[(3, 252), uint32] */, dtype="float64") /* ty=Tensor[(3, 252), float64] */;
  %1319 = %1313.0;
  %1320 = @func_2119(%1316, %1317) /* ty=Tensor[(7, 12, 9), uint32] */;
  %1321 = sin(%1318) /* ty=Tensor[(3, 252), float64] */;
  (%1319, %1320, %var_3408, %1321)
}

def @func_3478() -> Tensor[(15, 16, 2), float32] {
  @func_3269() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_2119(%var_2114: Tensor[(7, 1, 9), uint32], %var_2115: Tensor[(7, 12, 9), uint32]) -> Tensor[(7, 12, 9), uint32] {
  %1322 = cast(%var_2114, dtype="uint32") /* ty=Tensor[(7, 1, 9), uint32] */;
  %1323 = cast(%var_2115, dtype="uint32") /* ty=Tensor[(7, 12, 9), uint32] */;
  left_shift(%1322, %1323) /* ty=Tensor[(7, 12, 9), uint32] */
}

def @func_8763(%var_8727: Tensor[(2, 588), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(2, 588), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(168), float64], Tensor[(756), uint32]) {
  %1324 = @func_5514() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1325 = cast(%var_8727, dtype="float64") /* ty=Tensor[(2, 588), float64] */;
  %1326 = reshape(%1325, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1327 = @func_5795(%1326) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(7, 8, 3), float64]) */;
  %1328 = %1327.3;
  %1329 = cast(%1328, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %1330 = shape_of(%var_8727, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1331 = cast(%var_8727, dtype="float32") /* ty=Tensor[(2, 588), float32] */;
  %1332 = dyn.reshape(%1329, %1330, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1333 = cast(meta[relay.Constant][94] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1334 = cast(meta[relay.Constant][95] /* ty=Tensor[(756), uint32] */, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %1335 = reshape(%1333, newshape=[7, 8, 3]) /* ty=Tensor[(7, 8, 3), float64] */;
  %1336 = reshape(%1334, newshape=[378, 2]) /* ty=Tensor[(378, 2), uint32] */;
  %1337 = @func_8681(%1335, %1336) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(7, 8, 3), int8], Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(378, 2), uint32], Tensor[(1872), float32]) */;
  %1338 = %1324.1;
  %1339 = floor_divide(%1331, %1332) /* ty=Tensor[(2, 588), float32] */;
  %1340 = @func_7862() /* ty=Tensor[(15, 16, 2), float32] */;
  %1341 = %1337.0;
  (%1338, %1339, %1340, %1341, meta[relay.Constant][94] /* ty=Tensor[(168), float64] */, meta[relay.Constant][95] /* ty=Tensor[(756), uint32] */)
}

def @func_4101(%var_4085: Tensor[(105), float64], %var_4086: Tensor[(144), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(3, 252), uint32], Tensor[(105), float64], Tensor[(144), float32]) {
  %1342 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1343 = cast(meta[relay.Constant][96] /* ty=Tensor[(3, 252), uint32] */, dtype="uint32") /* ty=Tensor[(3, 252), uint32] */;
  %1344 = cast(%var_4085, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1345 = cast(%var_4086, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1346 = reshape(%1343, newshape=[756]) /* ty=Tensor[(756), uint32] */;
  %1347 = reshape(%1344, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
  %1348 = reshape(%1345, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1349 = @func_3710(%1346, %1347, %1348) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(2880), uint16], Tensor[(756), uint32], Tensor[(7, 15), float64], Tensor[(1176), float64], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(144), float32]) */;
  %1350 = %1342.0;
  %1351 = %1349.6;
  (%1350, %1351, meta[relay.Constant][96] /* ty=Tensor[(3, 252), uint32] */, %var_4085, %var_4086)
}

def @func_9615(%var_9604: Tensor[(3, 10, 1), uint64], %var_9605: Tensor[(3, 10, 10), uint64]) -> Tensor[(3, 10, 10), float64] {
  %1352 = cast(%var_9604, dtype="uint64") /* ty=Tensor[(3, 10, 1), uint64] */;
  %1353 = cast(%var_9605, dtype="uint64") /* ty=Tensor[(3, 10, 10), uint64] */;
  %1354 = bitwise_or(%1352, %1353) /* ty=Tensor[(3, 10, 10), uint64] */;
  %1355 = cast(%1354, dtype="float64") /* ty=Tensor[(3, 10, 10), float64] */;
  atan(%1355) /* ty=Tensor[(3, 10, 10), float64] */
}

def @func_6550(%var_6521: Tensor[(13, 1, 14), int8], %var_6522: Tensor[(13, 1, 14), int8]) -> (Tensor[(13, ?, 14), bool],) {
  %1356 = cast(%var_6522, dtype="bool") /* ty=Tensor[(13, 1, 14), bool] */;
  %1357 = shape_of(%var_6521, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1358 = cast(%var_6521, dtype="bool") /* ty=Tensor[(13, 1, 14), bool] */;
  %1359 = dyn.reshape(%1356, %1357, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1360 = equal(%1358, %1359) /* ty=Tensor[(13, ?, 14), bool] */;
  (%1360,)
}

def @func_8859(%var_8851: Tensor[(360), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) {
  %1361 = cast(%var_8851, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %1362 = reshape(%1361, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %1363 = @func_5048(%1362) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) */;
  %1364 = @func_6104() /* ty=Tensor[(15, 16, 2), float32] */;
  %1365 = %1363.1;
  (%1364, %1365, %var_8851)
}

def @func_13122() -> (Tensor[(15, 16, 2), float32],) {
  %1366 = @func_10673() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1367 = %1366.0;
  (%1367,)
}

def @func_13679() -> (Tensor[(15, 16, 2), float32],) {
  %1368 = @func_8358() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1368,)
}

def @func_14130() -> (Tensor[(15, 16, 2), float32],) {
  %1369 = @func_10987() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1369,)
}

def @func_10189() -> (Tensor[(15, ?, 9), uint16], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(1344), float32]) {
  %1370 = cast(meta[relay.Constant][97] /* ty=Tensor[(15, 1, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 1, 9), float64] */;
  %1371 = rsqrt(%1370) /* ty=Tensor[(15, 1, 9), float64] */;
  %1372 = cast(%1371, dtype="uint16") /* ty=Tensor[(15, 1, 9), uint16] */;
  %1373 = shape_of(meta[relay.Constant][97] /* ty=Tensor[(15, 1, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1374 = cast(meta[relay.Constant][97] /* ty=Tensor[(15, 1, 9), float64] */, dtype="uint16") /* ty=Tensor[(15, 1, 9), uint16] */;
  %1375 = dyn.reshape(%1372, %1373, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1376 = @func_7673() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %1377 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1378 = @func_6001() /* ty=(Tensor[(1344), float32],) */;
  %1379 = bitwise_and(%1374, %1375) /* ty=Tensor[(15, ?, 9), uint16] */;
  %1380 = %1376.0;
  %1381 = %1377.0;
  %1382 = %1378.0;
  (%1379, %1380, %1381, %1382)
}

def @func_16090(%var_16084: Tensor[(4, 14, 2), float32], %var_16085: Tensor[(4, 14, 2), float32]) -> (Tensor[(4, 14, 2), float32],) {
  %1383 = cast(%var_16085, dtype="float32") /* ty=Tensor[(4, 14, 2), float32] */;
  %1384 = shape_of(%var_16084, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1385 = cast(%var_16084, dtype="float32") /* ty=Tensor[(4, 14, 2), float32] */;
  %1386 = dyn.reshape(%1383, %1384, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1387 = floor_mod(%1385, %1386) /* ty=Tensor[(4, 14, 2), float32] */;
  (%1387,)
}

def @func_9944() -> Tensor[(15, 16, 2), float32] {
  @func_7947() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_11186() -> (Tensor[(15, 16, 2), float32],) {
  %1388 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1389 = %1388.1;
  (%1389,)
}

def @func_2152(%var_2146: Tensor[(8, 14, 12), float32]) -> Tensor[(8, 14, 12), float32] {
  %1390 = cast(%var_2146, dtype="float32") /* ty=Tensor[(8, 14, 12), float32] */;
  cos(%1390) /* ty=Tensor[(8, 14, 12), float32] */
}

def @func_8369() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1391 = @func_8119() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1392 = @func_8358() /* ty=Tensor[(15, 16, 2), float32] */;
  %1393 = %1391.0;
  (%1392, %1393)
}

def @func_14141() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) {
  %1394 = @func_10763() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1395 = @func_10546() /* ty=(Tensor[(15, 16, 2), bool],) */;
  %1396 = %1394.1;
  %1397 = %1395.0;
  (%1396, %1397)
}

def @func_11572(%var_11552: Tensor[(144), float32]) -> (Tensor[(10, 8, 11), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(8, 14, 12), float32], Tensor[(144), float32], Tensor[(1344), float32], Tensor[(8, 14, 12), float32]) {
  %1398 = cast(meta[relay.Constant][98] /* ty=Tensor[(10, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(10, 8, 11), float32] */;
  %1399 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1400 = @func_9800() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1401 = cast(%var_11552, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1402 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
  %1403 = cast(%1402, dtype="float64") /* ty=Tensor[(12, 7, 14), float64] */;
  %1404 = cast(meta[relay.Constant][99] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %1405 = reshape(%1401, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1406 = reshape(%1403, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1407 = reshape(%1404, newshape=[2, 672]) /* ty=Tensor[(2, 672), float32] */;
  %1408 = @func_6895(%1405, %1406, %1407) /* ty=(Tensor[(14, 3, 16), float32], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(8, 14, 12), float32], Tensor[(2, 672), float32]) */;
  %1409 = %1408.5;
  %1410 = cast(%1409, dtype="float32") /* ty=Tensor[(8, 14, 12), float32] */;
  %1411 = reshape(%1410, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %1412 = sqrt(%1398) /* ty=Tensor[(10, 8, 11), float32] */;
  %1413 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  %1414 = @func_7650() /* ty=Tensor[(15, 16, 2), float32] */;
  %1415 = %1399.0;
  %1416 = %1400.0;
  %1417 = @func_2152(%1411) /* ty=Tensor[(8, 14, 12), float32] */;
  (%1412, %1413, %1414, %1415, %1416, %1402, %1409, %var_11552, meta[relay.Constant][99] /* ty=Tensor[(1344), float32] */, %1417)
}

def @func_18057() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1418 = @func_12513() /* ty=Tensor[(15, 16, 2), float32] */;
  %1419 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1418, %1419)
}

def @func_15326() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) {
  %1420 = @func_9831() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %1421 = %1420.1;
  %1422 = @func_14028() /* ty=Tensor[(15, 16, 2), float64] */;
  (%1421, %1422)
}

def @func_11727(%var_11713: Tensor[(18816), float64], %var_11714: Tensor[(63), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(12, 10, 8), float32], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) {
  %1423 = @func_5170() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1424 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %1425 = cast(%var_11713, dtype="float64") /* ty=Tensor[(18816), float64] */;
  %1426 = cast(%var_11714, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1427 = reshape(%1425, newshape=[18816]) /* ty=Tensor[(18816), float64] */;
  %1428 = reshape(%1426, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1429 = @func_3592(%1427, %1428) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(5, 7, 3), float64], Tensor[(21, 5), float64], Tensor[(12, 7, 14), float64], float64, Tensor[(16), float64], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) */;
  %1430 = %1423.1;
  %1431 = %1424.0;
  %1432 = %1429.6;
  (%1430, %1431, %1432, %var_11713, %var_11714)
}

def @func_12188(%var_12179: Tensor[(9, 4, 9), float64], %var_12180: Tensor[(9, 4, 9), float64]) -> Tensor[(9, 4, 9), float64] {
  %1433 = cast(%var_12180, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
  %1434 = shape_of(%var_12179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1435 = cast(%var_12179, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
  %1436 = dyn.reshape(%1433, %1434, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%1435, %1436) /* ty=Tensor[(9, 4, 9), float64] */
}

def @func_6582(%var_6573: Tensor[(16), float64], %var_6574: Tensor[(144, 1), float32], %var_6576: Tensor[(21, 3), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], float64, Tensor[(16), float64], Tensor[(144, 1), float32], Tensor[(18816), float64], Tensor[(21, 3), uint32]) {
  %1437 = cast(-5.46042f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1438 = cast(%var_6573, dtype="float64") /* ty=Tensor[(16), float64] */;
  %1439 = cast(%var_6574, dtype="float32") /* ty=Tensor[(144, 1), float32] */;
  %1440 = cast(meta[relay.Constant][100] /* ty=Tensor[(18816), float64] */, dtype="float64") /* ty=Tensor[(18816), float64] */;
  %1441 = cast(%var_6576, dtype="uint32") /* ty=Tensor[(21, 3), uint32] */;
  %1442 = reshape(%1437, newshape=[]) /* ty=float64 */;
  %1443 = reshape(%1438, newshape=[16, 1, 1]) /* ty=Tensor[(16, 1, 1), float64] */;
  %1444 = reshape(%1439, newshape=[24, 6]) /* ty=Tensor[(24, 6), float32] */;
  %1445 = reshape(%1440, newshape=[16, 1176]) /* ty=Tensor[(16, 1176), float64] */;
  %1446 = reshape(%1441, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1447 = @func_3001(%1442, %1443, %1444, %1445, %1446) /* ty=(Tensor[(16, 1, 1), float64], Tensor[(13, 9, 16), float64], Tensor[(24, 6), float32], Tensor[(1872), float32], Tensor[(16, 1176), float64], Tensor[(12, 7, 14), float64], Tensor[(1, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), uint32]) */;
  %1448 = @func_6104() /* ty=Tensor[(15, 16, 2), float32] */;
  %1449 = %1447.5;
  (%1448, %1449, -5.46042f64 /* ty=float64 */, %var_6573, %var_6574, meta[relay.Constant][100] /* ty=Tensor[(18816), float64] */, %var_6576)
}

def @func_9063(%var_9054: Tensor[(2, 4, 1), float32]) -> Tensor[(2, 4, 1), float32] {
  %1450 = cast(%var_9054, dtype="float32") /* ty=Tensor[(2, 4, 1), float32] */;
  exp(%1450) /* ty=Tensor[(2, 4, 1), float32] */
}

def @func_10362(%var_10304: Tensor[(1176, 1), float64], %var_10305: Tensor[(105), float64]) -> (Tensor[(1344), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(208), uint32], Tensor[(105), float64], Tensor[(320), float32], Tensor[(15), uint16], Tensor[(1176, 1), float64]) {
  %1451 = @func_6001() /* ty=(Tensor[(1344), float32],) */;
  %1452 = @func_8025() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1453 = cast(meta[relay.Constant][101] /* ty=Tensor[(208), uint32] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
  %1454 = cast(meta[relay.Constant][101] /* ty=Tensor[(208), uint32] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
  %1455 = cast(%var_10304, dtype="float64") /* ty=Tensor[(1176, 1), float64] */;
  %1456 = cast(%var_10305, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1457 = cast(meta[relay.Constant][102] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1458 = cast(meta[relay.Constant][103] /* ty=Tensor[(15), uint16] */, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %1459 = reshape(%1453, newshape=[2, 8, 13]) /* ty=Tensor[(2, 8, 13), uint32] */;
  %1460 = reshape(%1454, newshape=[2, 8, 13]) /* ty=Tensor[(2, 8, 13), uint32] */;
  %1461 = reshape(%1455, newshape=[1, 1176]) /* ty=Tensor[(1, 1176), float64] */;
  %1462 = reshape(%1456, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %1463 = reshape(%1457, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %1464 = reshape(%1458, newshape=[5, 3]) /* ty=Tensor[(5, 3), uint16] */;
  %1465 = @func_7098(%1459, %1460, %1461, %1462, %1463, %1464) /* ty=(Tensor[(2, 8, 13), uint32], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(10, 8, 4), float64], Tensor[(63), uint32], Tensor[(105), float64], Tensor[(14, 96), float32], Tensor[(320), float32], Tensor[(5, 3), uint16]) */;
  %1466 = cast(%var_10304, dtype="float64") /* ty=Tensor[(1176, 1), float64] */;
  %1467 = asinh(%1466) /* ty=Tensor[(1176, 1), float64] */;
  %1468 = cast(%1467, dtype="float64") /* ty=Tensor[(1176, 1), float64] */;
  %1469 = cos(%1468) /* ty=Tensor[(1176, 1), float64] */;
  %1470 = cast(%1469, dtype="float64") /* ty=Tensor[(1176, 1), float64] */;
  %1471 = %1451.0;
  %1472 = %1452.0;
  %1473 = %1465.4;
  %1474 = sinh(%1470) /* ty=Tensor[(1176, 1), float64] */;
  (%1471, %1472, %1473, meta[relay.Constant][101] /* ty=Tensor[(208), uint32] */, %var_10305, meta[relay.Constant][102] /* ty=Tensor[(320), float32] */, meta[relay.Constant][103] /* ty=Tensor[(15), uint16] */, %1474)
}

def @func_12589() -> (Tensor[(15, 16, 2), float32],) {
  %1475 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1476 = %1475.1;
  (%1476,)
}

def @func_10797() -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(168, 8), float32]) {
  %1477 = cast(meta[relay.Constant][104] /* ty=Tensor[(168, 8), float32] */, dtype="float32") /* ty=Tensor[(168, 8), float32] */;
  %1478 = reshape(%1477, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %1479 = @func_7862() /* ty=Tensor[(15, 16, 2), float32] */;
  %1480 = @func_2152(%1478) /* ty=Tensor[(8, 14, 12), float32] */;
  (%1479, %1480, meta[relay.Constant][104] /* ty=Tensor[(168, 8), float32] */)
}

def @func_14374(%var_14369: Tensor[(12, 10, 8), float32]) -> Tensor[(12, 10, 8), uint64] {
  %1481 = @func_14073() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float32]) */;
  %1482 = %1481.0;
  %1483 = cast(%var_14369, dtype="uint64") /* ty=Tensor[(12, 10, 8), uint64] */;
  %1484 = shape_of(%1482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1485 = cast(%1482, dtype="uint64") /* ty=Tensor[(12, 10, 8), uint64] */;
  %1486 = dyn.reshape(%1483, %1484, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%1485, %1486) /* ty=Tensor[(12, 10, 8), uint64] */
}

def @func_8838() -> (Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) {
  %1487 = @func_7640() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) */;
  %1488 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1489 = %1487.2;
  %1490 = %1488.1;
  (%1489, %1490)
}

def @func_8358() -> Tensor[(15, 16, 2), float32] {
  %1491 = @func_7640() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) */;
  %1491.0
}

def @func_14045() -> (Tensor[(15, 16, 2), float32], Tensor[(1176), float64]) {
  %1492 = @func_9100() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1493 = @func_3551() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %1494 = %1492.0;
  %1495 = %1493.3;
  (%1494, %1495)
}

def @func_4208(%var_4185: bool, %var_4186: Tensor[(15, 3, 12), bool], %var_4205: Tensor[(2, 72), float32]) -> (Tensor[(15, 3, 12), float32], Tensor[(1176), float64], Tensor[(756, 1), uint32], Tensor[(21, 5), float64], Tensor[(2, 72), float32]) {
  %1496 = cast(%var_4185, dtype="bool") /* ty=bool */;
  %1497 = cast(%var_4186, dtype="bool") /* ty=Tensor[(15, 3, 12), bool] */;
  %1498 = logical_or(%1496, %1497) /* ty=Tensor[(15, 3, 12), bool] */;
  %1499 = cast(%1498, dtype="float32") /* ty=Tensor[(15, 3, 12), float32] */;
  %1500 = cast(meta[relay.Constant][105] /* ty=Tensor[(756, 1), uint32] */, dtype="uint32") /* ty=Tensor[(756, 1), uint32] */;
  %1501 = cast(meta[relay.Constant][106] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %1502 = cast(%var_4205, dtype="float32") /* ty=Tensor[(2, 72), float32] */;
  %1503 = reshape(%1500, newshape=[756]) /* ty=Tensor[(756), uint32] */;
  %1504 = reshape(%1501, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
  %1505 = reshape(%1502, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1506 = @func_3710(%1503, %1504, %1505) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(2880), uint16], Tensor[(756), uint32], Tensor[(7, 15), float64], Tensor[(1176), float64], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(144), float32]) */;
  %1507 = asinh(%1499) /* ty=Tensor[(15, 3, 12), float32] */;
  %1508 = %1506.2;
  (%1507, %1508, meta[relay.Constant][105] /* ty=Tensor[(756, 1), uint32] */, meta[relay.Constant][106] /* ty=Tensor[(21, 5), float64] */, %var_4205)
}

def @func_17334() -> (Tensor[(15, 16, 2), float32],) {
  %1509 = @func_15585() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1509,)
}

def @func_3063() -> (Tensor[(15, 16, 2), float32],) {
  %1510 = cast(meta[relay.Constant][107] /* ty=Tensor[(15, 16, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
  %1511 = acos(%1510) /* ty=Tensor[(15, 16, 2), float32] */;
  (%1511,)
}

def @func_11115(%var_11080: uint16, %var_11081: Tensor[(15), uint16]) -> (Tensor[(15, 16, 2), float32], Tensor[(1176), bool], uint16, Tensor[(15), uint16], Tensor[(15, 16, 2), float64], Tensor[(756), uint32], Tensor[(21, 5), float64], uint16, Tensor[(320), float32]) {
  %1512 = cast(%var_11080, dtype="uint16") /* ty=uint16 */;
  %1513 = cast(%var_11081, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %1514 = reshape(%1512, newshape=[]) /* ty=uint16 */;
  %1515 = reshape(%1513, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %1516 = @func_7832(%1514, %1515) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1, 1, 15), bool], uint16, Tensor[(15), uint16], Tensor[(1176), bool]) */;
  %1517 = @func_7471() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */;
  %1518 = cast(meta[relay.Constant][108] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %1519 = reshape(%1518, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %1520 = @func_7792(%1519) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(756), uint32], Tensor[(15, 16, 2), float32]) */;
  %1521 = cast(meta[relay.Constant][109] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1522 = cast(%var_11081, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %1523 = reshape(%1521, newshape=[10, 8, 4]) /* ty=Tensor[(10, 8, 4), float32] */;
  %1524 = reshape(%1522, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %1525 = @func_1499(%1523, %1524) /* ty=(Tensor[(588, 2), float64], uint16, Tensor[(15), uint16], Tensor[(1176), float64], Tensor[(588, 2), float64], Tensor[(10, 8, 4), float64]) */;
  %1526 = @func_6104() /* ty=Tensor[(15, 16, 2), float32] */;
  %1527 = %1516.4;
  %1528 = %1517.2;
  %1529 = %1520.5;
  %1530 = %1525.1;
  (%1526, %1527, %var_11080, %var_11081, %1528, %1529, meta[relay.Constant][108] /* ty=Tensor[(21, 5), float64] */, %1530, meta[relay.Constant][109] /* ty=Tensor[(320), float32] */)
}

def @func_12931(%var_12883: Tensor[(2, 180), uint8]) -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(2, 180), uint8], Tensor[(7, 8, 3), float32]) {
  %1531 = cast(%var_12883, dtype="uint8") /* ty=Tensor[(2, 180), uint8] */;
  %1532 = reshape(%1531, newshape=[2, 180]) /* ty=Tensor[(2, 180), uint8] */;
  %1533 = @func_11679(%1532) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(2, 180), uint8], Tensor[(15, 16, 2), bool], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
  %1534 = @func_12477() /* ty=(Tensor[(7, 8, 3), float64],) */;
  %1535 = %1534.0;
  %1536 = cast(%1535, dtype="float32") /* ty=Tensor[(7, 8, 3), float32] */;
  %1537 = @func_9508() /* ty=Tensor[(15, 16, 2), float64] */;
  %1538 = %1533.0;
  %1539 = tan(%1536) /* ty=Tensor[(7, 8, 3), float32] */;
  (%1537, %1538, %var_12883, %1539)
}

def @func_11835() -> (Tensor[(15, 16, 2), float32],) {
  %1540 = @func_8119() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1541 = %1540.0;
  (%1541,)
}

def @func_11764() -> Tensor[(15, 16, 2), float32] {
  @func_8825() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_14073() -> (Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float32]) {
  %1542 = @func_13980() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
  %1543 = @func_9800() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1544 = %1542.0;
  %1545 = %1543.0;
  (%1544, %1545)
}

def @func_9209() -> (Tensor[(15, 16, 2), float32],) {
  %1546 = @func_3089() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1546,)
}

def @func_19783() -> (Tensor[(15, 16, 2), float32],) {
  %1547 = @func_13356() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1547,)
}

def @func_10925() -> Tensor[(15, 16, 2), float32] {
  @func_8050() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_5425() -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1548 = cast(meta[relay.Constant][110] /* ty=Tensor[(1, 1176), float64] */, dtype="float64") /* ty=Tensor[(1, 1176), float64] */;
  %1549 = reshape(%1548, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1550 = @func_4661(%1549) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %1551 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1552 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  %1553 = %1550.4;
  %1554 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  %1555 = %1551.0;
  (%1552, %1553, meta[relay.Constant][110] /* ty=Tensor[(1, 1176), float64] */, %1554, %1555)
}

def @func_17173() -> Tensor[(15, 16, 2), float32] {
  @func_3089() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_19721() -> Tensor[(15, 16, 2), float32] {
  %1556 = @func_18201() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1556.0
}

def @func_11218(%var_11212: Tensor[(1, 5, 16), int8], %var_11213: Tensor[(12, 5, 16), int8]) -> (Tensor[(12, 5, 16), int8],) {
  %1557 = cast(%var_11212, dtype="int8") /* ty=Tensor[(1, 5, 16), int8] */;
  %1558 = cast(%var_11213, dtype="int8") /* ty=Tensor[(12, 5, 16), int8] */;
  %1559 = bitwise_xor(%1557, %1558) /* ty=Tensor[(12, 5, 16), int8] */;
  (%1559,)
}

def @func_18958(%var_18955: Tensor[(1, 8, 13), float32]) -> (Tensor[(1, 8, 13), float32],) {
  %1560 = cast(%var_18955, dtype="float32") /* ty=Tensor[(1, 8, 13), float32] */;
  %1561 = asin(%1560) /* ty=Tensor[(1, 8, 13), float32] */;
  (%1561,)
}

def @func_15951(%var_15909: Tensor[(360, 1), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360, 1), uint8], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
  %1562 = cast(%var_15909, dtype="uint8") /* ty=Tensor[(360, 1), uint8] */;
  %1563 = reshape(%1562, newshape=[2, 180]) /* ty=Tensor[(2, 180), uint8] */;
  %1564 = @func_11679(%1563) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(2, 180), uint8], Tensor[(15, 16, 2), bool], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
  %1565 = @func_9458() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
  %1566 = @func_6909() /* ty=Tensor[(15, 16, 2), float32] */;
  %1567 = %1564.3;
  %1568 = %1565.1;
  %1569 = @func_10903() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1566, %1567, %var_15909, %1568, %1569)
}

def @func_12273() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1570 = @func_9100() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1571 = @func_9529() /* ty=Tensor[(15, 16, 2), float32] */;
  %1572 = %1570.0;
  (%1571, %1572)
}

def @func_10987() -> Tensor[(15, 16, 2), float32] {
  @func_10903() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_19442() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1573 = @func_5320() /* ty=Tensor[(15, 16, 2), float32] */;
  %1574 = @func_10987() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1573, %1574)
}

def @func_16427() -> Tensor[(16), float32] {
  %1575 = @func_8919() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) */;
  %1575.2
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8493(%var_8392: Tensor[(21, 5), float64], %var_8400: Tensor[(420), float64], %var_8425: uint16, %var_8426: Tensor[(15), uint16], %var_8427: Tensor[(84, 14), float64]) -> (Tensor[(8, 14, 12), float32], Tensor[(5, 7, 3), float64], Tensor[(21, 5), float64], Tensor[(420), float64], Tensor[(12, 7, 14), float64], Tensor[(15), uint16], Tensor[(15, 16, 2), float32], Tensor[(84, 14), int64], Tensor[(2, 14, 15), float64], Tensor[(5, 7, 3), float64], Tensor[(15, 16, 2), float32]) {
  %0 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %1 = cast(%var_8392, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %2 = reshape(%1, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %3 = cast(%var_8425, dtype="uint16") /* ty=uint16 */;
  %4 = cast(%var_8426, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %5 = cast(%var_8427, dtype="float64") /* ty=Tensor[(84, 14), float64] */;
  %6 = reshape(%3, newshape=[]) /* ty=uint16 */;
  %7 = reshape(%4, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
  %8 = reshape(%5, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
  %9 = @func_813(%6, %7, %8) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
  %10 = @func_6637() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %11 = cast(%var_8427, dtype="int64") /* ty=Tensor[(84, 14), int64] */;
  %12 = cast(%var_8425, dtype="int64") /* ty=int64 */;
  %13 = cast(%var_8400, dtype="float64") /* ty=Tensor[(420), float64] */;
  %14 = reshape(%13, newshape=[2, 14, 15]) /* ty=Tensor[(2, 14, 15), float64] */;
  %15 = @func_7894(%14) /* ty=(Tensor[(2, 14, 15), float64],) */;
  %16 = %15.0;
  %17 = cast(%16, dtype="float64") /* ty=Tensor[(2, 14, 15), float64] */;
  %18 = cast(%var_8392, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %19 = reshape(%18, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %20 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %21 = %0.2;
  %22 = @func_1694(%2) /* ty=Tensor[(5, 7, 3), float64] */;
  %23 = %9.1;
  %24 = %10.0;
  %25 = logical_xor(%11, %12) /* ty=Tensor[(84, 14), int64] */;
  %26 = atanh(%17) /* ty=Tensor[(2, 14, 15), float64] */;
  %27 = @func_1694(%19) /* ty=Tensor[(5, 7, 3), float64] */;
  %28 = %20.0;
  (%21, %22, %var_8392, %var_8400, %23, %var_8426, %24, %25, %26, %27, %28)
}

def @func_17334() -> (Tensor[(15, 16, 2), float32],) {
  %29 = @func_15585() /* ty=Tensor[(15, 16, 2), float32] */;
  (%29,)
}

def @func_11399() -> (Tensor[(15, 16, 2), float32],) {
  %32 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %30 = @func_8838() /* ty=(Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) */;
    %31 = %30.1;
    (%31,)
  };
  %32() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_14030() -> Tensor[(15, 16, 2), float64] {
  @func_14028() /* ty=Tensor[(15, 16, 2), float64] */
}

def @func_18403() -> Tensor[(15, 16, 2), float32] {
  @func_17173() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_18338(%var_18337: Tensor[(15, 6, 1), float32]) -> (Tensor[(15, 6, 1), float32], Tensor[(15, 16, 2), float64], Tensor[(15), uint16], Tensor[(1176), float64], Tensor[(21, 5), float64]) {
  %43 = fn (%var_18296: Tensor[(15, 6, 1), float32]) -> (Tensor[(15, 6, 1), float32], Tensor[(15, 16, 2), float64], Tensor[(15), uint16], Tensor[(1176), float64], Tensor[(21, 5), float64]) {
    %33 = cast(%var_18296, dtype="float32") /* ty=Tensor[(15, 6, 1), float32] */;
    %34 = @func_4601() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
    %35 = cast(meta[relay.Constant][0] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
    %37 = reshape(%35, newshape=[1176, 1]) /* ty=Tensor[(1176, 1), float64] */;
    %38 = reshape(%36, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %39 = @func_10362(%37, %38) /* ty=(Tensor[(1344), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(208), uint32], Tensor[(105), float64], Tensor[(320), float32], Tensor[(15), uint16], Tensor[(1176, 1), float64]) */;
    %40 = sinh(%33) /* ty=Tensor[(15, 6, 1), float32] */;
    %41 = %34.0;
    %42 = %39.6;
    (%40, %41, %42, meta[relay.Constant][0] /* ty=Tensor[(1176), float64] */, meta[relay.Constant][1] /* ty=Tensor[(21, 5), float64] */)
  };
  %43(%var_18337) /* ty=(Tensor[(15, 6, 1), float32], Tensor[(15, 16, 2), float64], Tensor[(15), uint16], Tensor[(1176), float64], Tensor[(21, 5), float64]) */
}

def @func_19784() -> (Tensor[(15, 16, 2), float32],) {
  %45 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %44 = @func_13356() /* ty=Tensor[(15, 16, 2), float32] */;
    (%44,)
  };
  %45() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_15241() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_15239() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_11682(%var_11680: Tensor[(2, 180), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(2, 180), uint8], Tensor[(15, 16, 2), bool], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) {
  @func_11679(%var_11680) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(2, 180), uint8], Tensor[(15, 16, 2), bool], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */
}

def @func_2122(%var_2120: Tensor[(7, 1, 9), uint32], %var_2121: Tensor[(7, 12, 9), uint32]) -> Tensor[(7, 12, 9), uint32] {
  %48 = fn (%var_2114: Tensor[(7, 1, 9), uint32], %var_2115: Tensor[(7, 12, 9), uint32]) -> Tensor[(7, 12, 9), uint32] {
    %46 = cast(%var_2114, dtype="uint32") /* ty=Tensor[(7, 1, 9), uint32] */;
    %47 = cast(%var_2115, dtype="uint32") /* ty=Tensor[(7, 12, 9), uint32] */;
    left_shift(%46, %47) /* ty=Tensor[(7, 12, 9), uint32] */
  };
  %48(%var_2120, %var_2121) /* ty=Tensor[(7, 12, 9), uint32] */
}

def @func_9032() -> (Tensor[(15, 16, 2), float32],) {
  %51 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %49 = @func_5425() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %50 = %49.3;
    (%50,)
  };
  %51() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_15200() -> Tensor[(15, 16, 2), float32] {
  %53 = fn () -> Tensor[(15, 16, 2), float32] {
    %52 = @func_8025() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %52.0
  };
  %53() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_4344() -> (Tensor[(15, 16, 2), float64], Tensor[(7, 12, 9), uint32], Tensor[(1, 63), uint32], Tensor[(756), uint32]) {
  %54 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 63), uint32] */, dtype="uint32") /* ty=Tensor[(1, 63), uint32] */;
  %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(756), uint32] */, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %56 = reshape(%54, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
  %57 = reshape(%55, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), uint32] */;
  %58 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  %59 = @func_2119(%56, %57) /* ty=Tensor[(7, 12, 9), uint32] */;
  (%58, %59, meta[relay.Constant][2] /* ty=Tensor[(1, 63), uint32] */, meta[relay.Constant][3] /* ty=Tensor[(756), uint32] */)
}

def @func_8187(%var_8183: Tensor[(7, 15), float64], %var_8184: Tensor[(1344, 1), float32], %var_8185: Tensor[(320), float32], %var_8186: Tensor[(5, 3), uint16]) -> (Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64], Tensor[(1176), float64], Tensor[(1, 63), uint32], Tensor[(7, 15), float64], Tensor[(1344, 1), float32], Tensor[(320), float32], Tensor[(5, 3), uint16]) {
  @func_8181(%var_8183, %var_8184, %var_8185, %var_8186) /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64], Tensor[(1176), float64], Tensor[(1, 63), uint32], Tensor[(7, 15), float64], Tensor[(1344, 1), float32], Tensor[(320), float32], Tensor[(5, 3), uint16]) */
}

def @func_10711() -> Tensor[(15, 16, 2), float32] {
  @func_10709() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_19401() -> Tensor[(15, 16, 2), float32] {
  @func_15748() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_18919() -> (Tensor[(12, 7, 14), float64],) {
  %62 = fn () -> (Tensor[(12, 7, 14), float64],) {
    %60 = @func_16471() /* ty=(Tensor[(12, 7, 14), float64],) */;
    %61 = %60.0;
    (%61,)
  };
  %62() /* ty=(Tensor[(12, 7, 14), float64],) */
}

def @func_12976() -> Tensor[(15, 16, 2), float64] {
  %64 = fn () -> Tensor[(15, 16, 2), float64] {
    %63 = @func_7673() /* ty=(Tensor[(15, 16, 2), float64],) */;
    %63.0
  };
  %64() /* ty=Tensor[(15, 16, 2), float64] */
}

def @func_15586() -> Tensor[(15, 16, 2), float32] {
  %66 = fn () -> Tensor[(15, 16, 2), float32] {
    %65 = @func_14522() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
    %65.2
  };
  %66() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_13676() -> Tensor[(16), float32] {
  %68 = fn () -> Tensor[(16), float32] {
    %67 = @func_8919() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) */;
    %67.2
  };
  %68() /* ty=Tensor[(16), float32] */
}

def @func_5768(%var_5765: Tensor[(1, 9, 10), uint16], %var_5766: Tensor[(15, 9, 10), uint16], %var_5767: Tensor[(144), float32]) -> (Tensor[(15, 9, 10), uint16], Tensor[(15, 3, 12), float32], bool, Tensor[(540), bool], Tensor[(144), float32]) {
  @func_5763(%var_5765, %var_5766, %var_5767) /* ty=(Tensor[(15, 9, 10), uint16], Tensor[(15, 3, 12), float32], bool, Tensor[(540), bool], Tensor[(144), float32]) */
}

def @func_11933() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_11931() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_5489() -> Tensor[(15, 16, 2), float64] {
  @func_5487() /* ty=Tensor[(15, 16, 2), float64] */
}

def @func_19132(%var_19090: Tensor[(1176), float64], %var_19091: Tensor[(1344), float32], %var_19104: Tensor[(105), float64], %var_19105: Tensor[(360), uint8]) -> (Tensor[(15, 1, 13), float64], Tensor[(14, 3, 16), float32], Tensor[(1, 144), float32], Tensor[(1176), float64], Tensor[(1344), float32], Tensor[(594), int32], Tensor[(105), float64], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) {
  %69 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 1, 13), float64] */, dtype="float64") /* ty=Tensor[(15, 1, 13), float64] */;
  %70 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 144), float32] */, dtype="float32") /* ty=Tensor[(1, 144), float32] */;
  %71 = cast(%var_19090, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %72 = cast(%var_19091, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %73 = reshape(%70, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %74 = reshape(%71, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %75 = reshape(%72, newshape=[2, 672]) /* ty=Tensor[(2, 672), float32] */;
  %76 = @func_6895(%73, %74, %75) /* ty=(Tensor[(14, 3, 16), float32], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(8, 14, 12), float32], Tensor[(2, 672), float32]) */;
  %77 = cast(%var_19104, dtype="float64") /* ty=Tensor[(105), float64] */;
  %78 = cast(%var_19105, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %79 = reshape(%77, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %80 = reshape(%78, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %81 = @func_7381(%79, %80) /* ty=(Tensor[(15, 16, 2), float64], Tensor[(9, 5, 8), uint8], Tensor[(594), int32], Tensor[(21, 5), float64], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) */;
  %82 = @func_11617() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %83 = acosh(%69) /* ty=Tensor[(15, 1, 13), float64] */;
  %84 = %76.0;
  %85 = %81.2;
  %86 = %82.1;
  (%83, %84, meta[relay.Constant][5] /* ty=Tensor[(1, 144), float32] */, %var_19090, %var_19091, %85, %var_19104, %var_19105, %86)
}

def @func_7105(%var_7099: Tensor[(2, 8, 13), uint32], %var_7100: Tensor[(2, 8, 13), uint32], %var_7101: Tensor[(1, 1176), float64], %var_7102: Tensor[(105), float64], %var_7103: Tensor[(320), float32], %var_7104: Tensor[(5, 3), uint16]) -> (Tensor[(2, 8, 13), uint32], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(10, 8, 4), float64], Tensor[(63), uint32], Tensor[(105), float64], Tensor[(14, 96), float32], Tensor[(320), float32], Tensor[(5, 3), uint16]) {
  %108 = fn (%var_7072: Tensor[(2, 8, 13), uint32], %var_7073: Tensor[(2, 8, 13), uint32], %var_7082: Tensor[(1, 1176), float64], %var_7091: Tensor[(105), float64], %var_7093: Tensor[(320), float32], %var_7094: Tensor[(5, 3), uint16]) -> (Tensor[(2, 8, 13), uint32], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(10, 8, 4), float64], Tensor[(63), uint32], Tensor[(105), float64], Tensor[(14, 96), float32], Tensor[(320), float32], Tensor[(5, 3), uint16]) {
    %87 = cast(%var_7073, dtype="uint32") /* ty=Tensor[(2, 8, 13), uint32] */;
    %88 = shape_of(%var_7072, dtype="int32") /* ty=Tensor[(3), int32] */;
    %89 = cast(%var_7072, dtype="uint32") /* ty=Tensor[(2, 8, 13), uint32] */;
    %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %91 = cast(%var_7082, dtype="float64") /* ty=Tensor[(1, 1176), float64] */;
    %92 = reshape(%91, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %93 = @func_4661(%92) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
    %94 = cast(meta[relay.Constant][6] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
    %95 = cast(%var_7091, dtype="float64") /* ty=Tensor[(105), float64] */;
    %96 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 96), float32] */, dtype="float32") /* ty=Tensor[(14, 96), float32] */;
    %97 = cast(%var_7093, dtype="float32") /* ty=Tensor[(320), float32] */;
    %98 = cast(%var_7094, dtype="uint16") /* ty=Tensor[(5, 3), uint16] */;
    %99 = reshape(%94, newshape=[63]) /* ty=Tensor[(63), uint32] */;
    %100 = reshape(%95, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %101 = reshape(%96, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
    %102 = reshape(%97, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %103 = reshape(%98, newshape=[15]) /* ty=Tensor[(15), uint16] */;
    %104 = @func_4865(%99, %100, %101, %102, %103) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64], Tensor[(3, 252), float64], Tensor[(63), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(12, 7, 14), float64], Tensor[(10, 8, 4), float64], Tensor[(320), float32], Tensor[(15), uint16]) */;
    %105 = add(%89, %90) /* ty=Tensor[(2, 8, 13), uint32] */;
    %106 = %93.4;
    %107 = %104.11;
    (%105, %106, %var_7082, %107, meta[relay.Constant][6] /* ty=Tensor[(63), uint32] */, %var_7091, meta[relay.Constant][7] /* ty=Tensor[(14, 96), float32] */, %var_7093, %var_7094)
  };
  %108(%var_7099, %var_7100, %var_7101, %var_7102, %var_7103, %var_7104) /* ty=(Tensor[(2, 8, 13), uint32], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(10, 8, 4), float64], Tensor[(63), uint32], Tensor[(105), float64], Tensor[(14, 96), float32], Tensor[(320), float32], Tensor[(5, 3), uint16]) */
}

def @func_5900() -> (Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32]) {
  %119 = fn () -> (Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32]) {
    %109 = @func_4457() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %110 = %109.0;
    %111 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
    %112 = %111.0;
    %113 = cast(%112, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
    %114 = shape_of(%110, dtype="int32") /* ty=Tensor[(3), int32] */;
    %115 = cast(%110, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
    %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %117 = not_equal(%115, %116) /* ty=Tensor[(15, 16, 2), bool] */;
    %118 = @func_3478() /* ty=Tensor[(15, 16, 2), float32] */;
    (%117, %118)
  };
  %119() /* ty=(Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32]) */
}

def @func_19216() -> (Tensor[(15, 16, 2), float32],) {
  @func_19214() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_14028() -> Tensor[(15, 16, 2), float64] {
  %120 = @func_12851() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], uint16, Tensor[(15), uint16]) */;
  %120.1
}

def @func_6045(%var_6043: Tensor[(63), uint32], %var_6044: Tensor[(3, 252), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(3, 252), bool], Tensor[(3, 252), float32]) {
  %134 = fn (%var_6023: Tensor[(63), uint32], %var_6032: Tensor[(3, 252), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(3, 252), bool], Tensor[(3, 252), float32]) {
    %121 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %122 = cast(%var_6023, dtype="uint32") /* ty=Tensor[(63), uint32] */;
    %123 = reshape(%122, newshape=[63]) /* ty=Tensor[(63), uint32] */;
    %124 = @func_3421(%123) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), float64]) */;
    %125 = %124.3;
    %126 = cast(%var_6032, dtype="bool") /* ty=Tensor[(3, 252), bool] */;
    %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(2), int32] */;
    %128 = cast(%125, dtype="bool") /* ty=Tensor[(3, 252), bool] */;
    %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %130 = cast(%var_6032, dtype="float32") /* ty=Tensor[(3, 252), float32] */;
    %131 = %121.0;
    %132 = logical_and(%128, %129) /* ty=Tensor[(3, 252), bool] */;
    %133 = cosh(%130) /* ty=Tensor[(3, 252), float32] */;
    (%131, %var_6023, %132, %133)
  };
  %134(%var_6043, %var_6044) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(3, 252), bool], Tensor[(3, 252), float32]) */
}

def @func_13908() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %138 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %135 = @func_9800() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %136 = @func_6473() /* ty=Tensor[(15, 16, 2), float32] */;
    %137 = %135.0;
    (%136, %137)
  };
  %138() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_14172() -> Tensor[(15, 16, 2), float32] {
  %139 = @func_8025() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %139.0
}

def @func_9410() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %144 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %140 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %141 = @func_5170() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %142 = %140.0;
    %143 = %141.1;
    (%142, %143)
  };
  %144() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_17184() -> (Tensor[(15, 16, 2), float32],) {
  @func_17182() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_11679(%var_11657: Tensor[(2, 180), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(2, 180), uint8], Tensor[(15, 16, 2), bool], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) {
  %145 = @func_7471() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */;
  %146 = cast(%var_11657, dtype="uint8") /* ty=Tensor[(2, 180), uint8] */;
  %147 = reshape(%146, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %148 = @func_8859(%147) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) */;
  %149 = @func_10546() /* ty=(Tensor[(15, 16, 2), bool],) */;
  %150 = @func_9458() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
  %151 = @func_6396() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %152 = %145.0;
  %153 = %148.1;
  %154 = %149.0;
  %155 = %150.0;
  %156 = %151.3;
  (%152, %153, %var_11657, %154, %155, %156)
}

def @func_15735() -> Tensor[(15, 16, 2), float32] {
  %157 = @func_15690() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %157.0
}

def @func_7146() -> (Tensor[(15, 16, 2), float64],) {
  @func_7144() /* ty=(Tensor[(15, 16, 2), float64],) */
}

def @func_18202() -> (Tensor[(15, 16, 2), float32],) {
  %159 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %158 = @func_10996() /* ty=Tensor[(15, 16, 2), float32] */;
    (%158,)
  };
  %159() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_11837() -> (Tensor[(15, 16, 2), float32],) {
  @func_11835() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_10362(%var_10304: Tensor[(1176, 1), float64], %var_10305: Tensor[(105), float64]) -> (Tensor[(1344), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(208), uint32], Tensor[(105), float64], Tensor[(320), float32], Tensor[(15), uint16], Tensor[(1176, 1), float64]) {
  %160 = @func_6001() /* ty=(Tensor[(1344), float32],) */;
  %161 = @func_8025() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %162 = cast(meta[relay.Constant][8] /* ty=Tensor[(208), uint32] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
  %163 = cast(meta[relay.Constant][8] /* ty=Tensor[(208), uint32] */, dtype="uint32") /* ty=Tensor[(208), uint32] */;
  %164 = cast(%var_10304, dtype="float64") /* ty=Tensor[(1176, 1), float64] */;
  %165 = cast(%var_10305, dtype="float64") /* ty=Tensor[(105), float64] */;
  %166 = cast(meta[relay.Constant][9] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %167 = cast(meta[relay.Constant][10] /* ty=Tensor[(15), uint16] */, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %168 = reshape(%162, newshape=[2, 8, 13]) /* ty=Tensor[(2, 8, 13), uint32] */;
  %169 = reshape(%163, newshape=[2, 8, 13]) /* ty=Tensor[(2, 8, 13), uint32] */;
  %170 = reshape(%164, newshape=[1, 1176]) /* ty=Tensor[(1, 1176), float64] */;
  %171 = reshape(%165, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %172 = reshape(%166, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %173 = reshape(%167, newshape=[5, 3]) /* ty=Tensor[(5, 3), uint16] */;
  %174 = @func_7098(%168, %169, %170, %171, %172, %173) /* ty=(Tensor[(2, 8, 13), uint32], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(10, 8, 4), float64], Tensor[(63), uint32], Tensor[(105), float64], Tensor[(14, 96), float32], Tensor[(320), float32], Tensor[(5, 3), uint16]) */;
  %175 = cast(%var_10304, dtype="float64") /* ty=Tensor[(1176, 1), float64] */;
  %176 = asinh(%175) /* ty=Tensor[(1176, 1), float64] */;
  %177 = cast(%176, dtype="float64") /* ty=Tensor[(1176, 1), float64] */;
  %178 = cos(%177) /* ty=Tensor[(1176, 1), float64] */;
  %179 = cast(%178, dtype="float64") /* ty=Tensor[(1176, 1), float64] */;
  %180 = %160.0;
  %181 = %161.0;
  %182 = %174.4;
  %183 = sinh(%179) /* ty=Tensor[(1176, 1), float64] */;
  (%180, %181, %182, meta[relay.Constant][8] /* ty=Tensor[(208), uint32] */, %var_10305, meta[relay.Constant][9] /* ty=Tensor[(320), float32] */, meta[relay.Constant][10] /* ty=Tensor[(15), uint16] */, %183)
}

def @func_9073() -> (Tensor[(15, 16, 2), float64],) {
  %186 = fn () -> (Tensor[(15, 16, 2), float64],) {
    %184 = @func_7144() /* ty=(Tensor[(15, 16, 2), float64],) */;
    %185 = %184.0;
    (%185,)
  };
  %186() /* ty=(Tensor[(15, 16, 2), float64],) */
}

def @func_19771(%var_19770: Tensor[(7, 7, 7), float64]) -> (Tensor[(7, 7, 7), float64], Tensor[(1344), float32]) {
  %193 = fn (%var_19746: Tensor[(7, 7, 7), float64]) -> (Tensor[(7, 7, 7), float64], Tensor[(1344), float32]) {
    %187 = cast(%var_19746, dtype="float64") /* ty=Tensor[(7, 7, 7), float64] */;
    %188 = asinh(%187) /* ty=Tensor[(7, 7, 7), float64] */;
    %189 = cast(%188, dtype="float64") /* ty=Tensor[(7, 7, 7), float64] */;
    %190 = @func_6001() /* ty=(Tensor[(1344), float32],) */;
    %191 = rsqrt(%189) /* ty=Tensor[(7, 7, 7), float64] */;
    %192 = %190.0;
    (%191, %192)
  };
  %193(%var_19770) /* ty=(Tensor[(7, 7, 7), float64], Tensor[(1344), float32]) */
}

def @func_13122() -> (Tensor[(15, 16, 2), float32],) {
  %194 = @func_10673() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %195 = %194.0;
  (%195,)
}

def @func_1502(%var_1500: Tensor[(10, 8, 4), float32], %var_1501: Tensor[(15), uint16]) -> (Tensor[(588, 2), float64], uint16, Tensor[(15), uint16], Tensor[(1176), float64], Tensor[(588, 2), float64], Tensor[(10, 8, 4), float64]) {
  %221 = fn (%var_1464: Tensor[(10, 8, 4), float32], %var_1469: Tensor[(15), uint16]) -> (Tensor[(588, 2), float64], uint16, Tensor[(15), uint16], Tensor[(1176), float64], Tensor[(588, 2), float64], Tensor[(10, 8, 4), float64]) {
    %196 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %197 = cast(%var_1469, dtype="uint16") /* ty=Tensor[(15), uint16] */;
    %198 = cast(meta[relay.Constant][12] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %199 = reshape(%196, newshape=[]) /* ty=uint16 */;
    %200 = reshape(%197, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
    %201 = reshape(%198, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
    %202 = @func_813(%199, %200, %201) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
    %203 = cast(meta[relay.Constant][11] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %204 = cast(%var_1469, dtype="uint16") /* ty=Tensor[(15), uint16] */;
    %205 = cast(meta[relay.Constant][12] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %206 = reshape(%203, newshape=[]) /* ty=uint16 */;
    %207 = reshape(%204, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
    %208 = reshape(%205, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
    %209 = @func_813(%206, %207, %208) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
    %210 = cast(%var_1464, dtype="float32") /* ty=Tensor[(10, 8, 4), float32] */;
    %211 = exp(%210) /* ty=Tensor[(10, 8, 4), float32] */;
    %212 = cast(%var_1464, dtype="uint16") /* ty=Tensor[(10, 8, 4), uint16] */;
    %213 = shape_of(%211, dtype="int32") /* ty=Tensor[(3), int32] */;
    %214 = cast(%211, dtype="uint16") /* ty=Tensor[(10, 8, 4), uint16] */;
    %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %216 = minimum(%214, %215) /* ty=Tensor[(10, 8, 4), uint16] */;
    %217 = cast(%216, dtype="float64") /* ty=Tensor[(10, 8, 4), float64] */;
    %218 = %202.2;
    %219 = %209.2;
    %220 = asin(%217) /* ty=Tensor[(10, 8, 4), float64] */;
    (%218, meta[relay.Constant][11] /* ty=uint16 */, %var_1469, meta[relay.Constant][12] /* ty=Tensor[(1176), float64] */, %219, %220)
  };
  %221(%var_1500, %var_1501) /* ty=(Tensor[(588, 2), float64], uint16, Tensor[(15), uint16], Tensor[(1176), float64], Tensor[(588, 2), float64], Tensor[(10, 8, 4), float64]) */
}

def @func_9530() -> Tensor[(15, 16, 2), float32] {
  %222 = fn () -> Tensor[(15, 16, 2), float32] {
    @func_7947() /* ty=Tensor[(15, 16, 2), float32] */
  };
  %222() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_4208(%var_4185: bool, %var_4186: Tensor[(15, 3, 12), bool], %var_4205: Tensor[(2, 72), float32]) -> (Tensor[(15, 3, 12), float32], Tensor[(1176), float64], Tensor[(756, 1), uint32], Tensor[(21, 5), float64], Tensor[(2, 72), float32]) {
  %223 = cast(%var_4185, dtype="bool") /* ty=bool */;
  %224 = cast(%var_4186, dtype="bool") /* ty=Tensor[(15, 3, 12), bool] */;
  %225 = logical_or(%223, %224) /* ty=Tensor[(15, 3, 12), bool] */;
  %226 = cast(%225, dtype="float32") /* ty=Tensor[(15, 3, 12), float32] */;
  %227 = cast(meta[relay.Constant][13] /* ty=Tensor[(756, 1), uint32] */, dtype="uint32") /* ty=Tensor[(756, 1), uint32] */;
  %228 = cast(meta[relay.Constant][14] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %229 = cast(%var_4205, dtype="float32") /* ty=Tensor[(2, 72), float32] */;
  %230 = reshape(%227, newshape=[756]) /* ty=Tensor[(756), uint32] */;
  %231 = reshape(%228, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
  %232 = reshape(%229, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %233 = @func_3710(%230, %231, %232) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(2880), uint16], Tensor[(756), uint32], Tensor[(7, 15), float64], Tensor[(1176), float64], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(144), float32]) */;
  %234 = asinh(%226) /* ty=Tensor[(15, 3, 12), float32] */;
  %235 = %233.2;
  (%234, %235, meta[relay.Constant][13] /* ty=Tensor[(756, 1), uint32] */, meta[relay.Constant][14] /* ty=Tensor[(21, 5), float64] */, %var_4205)
}

def @func_10420(%var_10419: Tensor[(13, 7, 1), float32]) -> Tensor[(13, 7, 1), float32] {
  %237 = fn (%var_10413: Tensor[(13, 7, 1), float32]) -> Tensor[(13, 7, 1), float32] {
    %236 = cast(%var_10413, dtype="float32") /* ty=Tensor[(13, 7, 1), float32] */;
    asinh(%236) /* ty=Tensor[(13, 7, 1), float32] */
  };
  %237(%var_10419) /* ty=Tensor[(13, 7, 1), float32] */
}

def @func_15842() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) {
  %240 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) {
    %238 = @func_11764() /* ty=Tensor[(15, 16, 2), float32] */;
    %239 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
    (%238, %239)
  };
  %240() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) */
}

def @func_3715(%var_3712: Tensor[(756), uint32], %var_3713: Tensor[(7, 15), float64], %var_3714: Tensor[(144), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(2880), uint16], Tensor[(756), uint32], Tensor[(7, 15), float64], Tensor[(1176), float64], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(144), float32]) {
  @func_3710(%var_3712, %var_3713, %var_3714) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(2880), uint16], Tensor[(756), uint32], Tensor[(7, 15), float64], Tensor[(1176), float64], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(144), float32]) */
}

def @func_15661() -> (Tensor[(756), uint32],) {
  @func_15659() /* ty=(Tensor[(756), uint32],) */
}

def @func_5085() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %241 = @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %242 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  %243 = %241.0;
  (%242, %243)
}

def @func_12814() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float64]) {
  %244 = @func_9831() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %245 = @func_10903() /* ty=Tensor[(15, 16, 2), float32] */;
  %246 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
  %247 = %244.0;
  (%245, %246, %247)
}

def @func_16843() -> (Tensor[(15, 16, 2), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) {
  %248 = @func_6637() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %249 = @func_11435() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %250 = %248.0;
  %251 = @func_16427() /* ty=Tensor[(16), float32] */;
  %252 = %249.2;
  (%250, %251, %252)
}

def @func_9063(%var_9054: Tensor[(2, 4, 1), float32]) -> Tensor[(2, 4, 1), float32] {
  %253 = cast(%var_9054, dtype="float32") /* ty=Tensor[(2, 4, 1), float32] */;
  exp(%253) /* ty=Tensor[(2, 4, 1), float32] */
}

def @func_9832() -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
  %258 = fn () -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
    %254 = @func_9458() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
    %255 = @func_6637() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %256 = %254.1;
    %257 = %255.0;
    (%256, %257)
  };
  %258() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */
}

def @func_17182() -> (Tensor[(15, 16, 2), float32],) {
  %259 = @func_15748() /* ty=Tensor[(15, 16, 2), float32] */;
  (%259,)
}

def @func_9615(%var_9604: Tensor[(3, 10, 1), uint64], %var_9605: Tensor[(3, 10, 10), uint64]) -> Tensor[(3, 10, 10), float64] {
  %260 = cast(%var_9604, dtype="uint64") /* ty=Tensor[(3, 10, 1), uint64] */;
  %261 = cast(%var_9605, dtype="uint64") /* ty=Tensor[(3, 10, 10), uint64] */;
  %262 = bitwise_or(%260, %261) /* ty=Tensor[(3, 10, 10), uint64] */;
  %263 = cast(%262, dtype="float64") /* ty=Tensor[(3, 10, 10), float64] */;
  atan(%263) /* ty=Tensor[(3, 10, 10), float64] */
}

def @func_16772() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %264 = @func_11791() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %265 = @func_12814() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float64]) */;
  %266 = @func_15326() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */;
  %267 = %264.0;
  %268 = %265.0;
  %269 = %266.0;
  (%267, %268, %269)
}

def @func_11727(%var_11713: Tensor[(18816), float64], %var_11714: Tensor[(63), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(12, 10, 8), float32], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) {
  %270 = @func_5170() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %271 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %272 = cast(%var_11713, dtype="float64") /* ty=Tensor[(18816), float64] */;
  %273 = cast(%var_11714, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %274 = reshape(%272, newshape=[18816]) /* ty=Tensor[(18816), float64] */;
  %275 = reshape(%273, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %276 = @func_3592(%274, %275) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(5, 7, 3), float64], Tensor[(21, 5), float64], Tensor[(12, 7, 14), float64], float64, Tensor[(16), float64], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) */;
  %277 = %270.1;
  %278 = %271.0;
  %279 = %276.6;
  (%277, %278, %279, %var_11713, %var_11714)
}

def @func_18514() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_18512() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_12757(%var_12755: Tensor[(11, 1, 3), float32], %var_12756: Tensor[(11, 16, 3), float32]) -> (Tensor[(11, 16, 3), bool], Tensor[(11, 1, 3), float64], Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) {
  %297 = fn (%var_12706: Tensor[(11, 1, 3), float32], %var_12714: Tensor[(11, 16, 3), float32]) -> (Tensor[(11, 16, 3), bool], Tensor[(11, 1, 3), float64], Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) {
    %280 = cast(%var_12706, dtype="float32") /* ty=Tensor[(11, 1, 3), float32] */;
    %281 = sqrt(%280) /* ty=Tensor[(11, 1, 3), float32] */;
    %282 = cast(%281, dtype="bool") /* ty=Tensor[(11, 1, 3), bool] */;
    %283 = cast(%var_12714, dtype="bool") /* ty=Tensor[(11, 16, 3), bool] */;
    %284 = cast(%281, dtype="float32") /* ty=Tensor[(11, 1, 3), float32] */;
    %285 = sigmoid(%284) /* ty=Tensor[(11, 1, 3), float32] */;
    %286 = cast(%285, dtype="float64") /* ty=Tensor[(11, 1, 3), float64] */;
    %287 = cast(meta[relay.Constant][15] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %288 = reshape(%287, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
    %289 = cast(meta[relay.Constant][16] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
    %290 = cast(meta[relay.Constant][16] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
    %291 = reshape(%289, newshape=[9, 4, 9]) /* ty=Tensor[(9, 4, 9), float64] */;
    %292 = reshape(%290, newshape=[9, 4, 9]) /* ty=Tensor[(9, 4, 9), float64] */;
    %293 = not_equal(%282, %283) /* ty=Tensor[(11, 16, 3), bool] */;
    %294 = acosh(%286) /* ty=Tensor[(11, 1, 3), float64] */;
    %295 = @func_164(%288) /* ty=Tensor[(12, 7, 14), float64] */;
    %296 = @func_12188(%291, %292) /* ty=Tensor[(9, 4, 9), float64] */;
    (%293, %294, %295, meta[relay.Constant][15] /* ty=Tensor[(1176), float64] */, %296, meta[relay.Constant][16] /* ty=Tensor[(324), float64] */)
  };
  %297(%var_12755, %var_12756) /* ty=(Tensor[(11, 16, 3), bool], Tensor[(11, 1, 3), float64], Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(9, 4, 9), float64], Tensor[(324), float64]) */
}

def @func_4287(%var_4285: Tensor[(15, 16, 2), float64]) -> (Tensor[(15, 16, 2), int16],) {
  @func_4284(%var_4285) /* ty=(Tensor[(15, 16, 2), int16],) */
}

def @func_10107() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) {
  %298 = @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %299 = %298.0;
  %300 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
  (%299, %300)
}

def @func_8120() -> (Tensor[(15, 16, 2), float32],) {
  %303 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %301 = @func_5425() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %302 = %301.4;
    (%302,)
  };
  %303() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_8359() -> Tensor[(15, 16, 2), float32] {
  %305 = fn () -> Tensor[(15, 16, 2), float32] {
    %304 = @func_7640() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) */;
    %304.0
  };
  %305() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_4161() -> Tensor[(7, 8, 3), float64] {
  @func_4159() /* ty=Tensor[(7, 8, 3), float64] */
}

def @func_12188(%var_12179: Tensor[(9, 4, 9), float64], %var_12180: Tensor[(9, 4, 9), float64]) -> Tensor[(9, 4, 9), float64] {
  %306 = cast(%var_12180, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
  %307 = shape_of(%var_12179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%var_12179, dtype="float64") /* ty=Tensor[(9, 4, 9), float64] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%308, %309) /* ty=Tensor[(9, 4, 9), float64] */
}

def @func_3478() -> Tensor[(15, 16, 2), float32] {
  @func_3269() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_1541(%var_1538: Tensor[(1, 9, 16), float32], %var_1539: Tensor[(13, 9, 16), float32], %var_1540: Tensor[(1176), float64]) -> (Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) {
  %318 = fn (%var_1504: Tensor[(1, 9, 16), float32], %var_1505: Tensor[(13, 9, 16), float32], %var_1511: Tensor[(1176), float64]) -> (Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) {
    %310 = cast(%var_1511, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %311 = reshape(%310, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
    %312 = cast(%var_1504, dtype="float32") /* ty=Tensor[(1, 9, 16), float32] */;
    %313 = cast(%var_1505, dtype="float32") /* ty=Tensor[(13, 9, 16), float32] */;
    %314 = mod(%312, %313) /* ty=Tensor[(13, 9, 16), float32] */;
    %315 = cast(%314, dtype="float64") /* ty=Tensor[(13, 9, 16), float64] */;
    %316 = @func_164(%311) /* ty=Tensor[(12, 7, 14), float64] */;
    %317 = tan(%315) /* ty=Tensor[(13, 9, 16), float64] */;
    (%316, %var_1511, %317)
  };
  %318(%var_1538, %var_1539, %var_1540) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) */
}

def @func_6104() -> Tensor[(15, 16, 2), float32] {
  %319 = @func_5514() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %319.1
}

def @func_15953(%var_15952: Tensor[(360, 1), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360, 1), uint8], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
  %328 = fn (%var_15909: Tensor[(360, 1), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360, 1), uint8], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
    %320 = cast(%var_15909, dtype="uint8") /* ty=Tensor[(360, 1), uint8] */;
    %321 = reshape(%320, newshape=[2, 180]) /* ty=Tensor[(2, 180), uint8] */;
    %322 = @func_11679(%321) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(2, 180), uint8], Tensor[(15, 16, 2), bool], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
    %323 = @func_9458() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
    %324 = @func_6909() /* ty=Tensor[(15, 16, 2), float32] */;
    %325 = %322.3;
    %326 = %323.1;
    %327 = @func_10903() /* ty=Tensor[(15, 16, 2), float32] */;
    (%324, %325, %var_15909, %326, %327)
  };
  %328(%var_15952) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360, 1), uint8], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */
}

def @func_6206() -> Tensor[(756), uint32] {
  %330 = fn () -> Tensor[(756), uint32] {
    %329 = @func_4344() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(7, 12, 9), uint32], Tensor[(1, 63), uint32], Tensor[(756), uint32]) */;
    %329.3
  };
  %330() /* ty=Tensor[(756), uint32] */
}

def @func_3480() -> Tensor[(15, 16, 2), float32] {
  @func_3478() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_8838() -> (Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) {
  %331 = @func_7640() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) */;
  %332 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %333 = %331.2;
  %334 = %332.1;
  (%333, %334)
}

def @func_16428() -> Tensor[(16), float32] {
  %336 = fn () -> Tensor[(16), float32] {
    %335 = @func_8919() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) */;
    %335.2
  };
  %336() /* ty=Tensor[(16), float32] */
}

def @func_8766(%var_8764: Tensor[(2, 588), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(2, 588), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(168), float64], Tensor[(756), uint32]) {
  @func_8763(%var_8764) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(2, 588), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(168), float64], Tensor[(756), uint32]) */
}

def @func_13293() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) {
  %337 = @func_11435() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %338 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %339 = @func_7673() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %340 = @func_8358() /* ty=Tensor[(15, 16, 2), float32] */;
  %341 = %337.0;
  %342 = %338.0;
  %343 = @func_6909() /* ty=Tensor[(15, 16, 2), float32] */;
  %344 = %339.0;
  (%340, %341, %342, %343, %344)
}

def @func_13982() -> (Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) {
  @func_13980() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */
}

def @func_4346() -> (Tensor[(15, 16, 2), float64], Tensor[(7, 12, 9), uint32], Tensor[(1, 63), uint32], Tensor[(756), uint32]) {
  @func_4344() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(7, 12, 9), uint32], Tensor[(1, 63), uint32], Tensor[(756), uint32]) */
}

def @func_5795(%var_5789: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(7, 8, 3), float64]) {
  %345 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %346 = cast(%var_5789, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %347 = reshape(%346, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %348 = @func_4661(%347) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %349 = @func_3891() /* ty=Tensor[(15, 16, 2), float32] */;
  %350 = %345.2;
  %351 = %348.2;
  %352 = @func_4159() /* ty=Tensor[(7, 8, 3), float64] */;
  (%349, %350, %351, %var_5789, %352)
}

def @func_17471() -> (Tensor[(756), uint32], Tensor[(15, 16, 2), float32]) {
  @func_17469() /* ty=(Tensor[(756), uint32], Tensor[(15, 16, 2), float32]) */
}

def @func_19378() -> Tensor[(63), bool] {
  %354 = fn () -> Tensor[(63), bool] {
    %353 = @func_15110() /* ty=(Tensor[(63), bool],) */;
    %353.0
  };
  %354() /* ty=Tensor[(63), bool] */
}

def @func_11341() -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %362 = fn () -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %355 = @func_4344() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(7, 12, 9), uint32], Tensor[(1, 63), uint32], Tensor[(756), uint32]) */;
    %356 = @func_5653() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %357 = @func_5653() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %358 = %355.0;
    %359 = %356.0;
    %360 = %357.0;
    %361 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
    (%358, %359, %360, %361)
  };
  %362() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_15009() -> (Tensor[(15, 16, 2), float32],) {
  %365 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %363 = @func_5085() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %364 = %363.1;
    (%364,)
  };
  %365() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_14141() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) {
  %366 = @func_10763() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %367 = @func_10546() /* ty=(Tensor[(15, 16, 2), bool],) */;
  %368 = %366.1;
  %369 = %367.0;
  (%368, %369)
}

def @func_10903() -> Tensor[(15, 16, 2), float32] {
  @func_3269() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_12273() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %370 = @func_9100() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %371 = @func_9529() /* ty=Tensor[(15, 16, 2), float32] */;
  %372 = %370.0;
  (%371, %372)
}

def @func_12816() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float64]) {
  @func_12814() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float64]) */
}

def @func_12192(%var_12190: Tensor[(9, 4, 9), float64], %var_12191: Tensor[(9, 4, 9), float64]) -> Tensor[(9, 4, 9), float64] {
  @func_12188(%var_12190, %var_12191) /* ty=Tensor[(9, 4, 9), float64] */
}

def @func_10433() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %377 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %373 = @func_8010() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %374 = @func_9800() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %375 = %373.0;
    %376 = %374.1;
    (%375, %376)
  };
  %377() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_13356() -> Tensor[(15, 16, 2), float32] {
  %378 = @func_10252() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %378.0
}

def @func_3799() -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  @func_3797() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */
}

def @func_8549(%var_8547: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(1872), float32], Tensor[(1176), float32], Tensor[(15, 16, 2), float32]) {
  @func_8546(%var_8547) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(1872), float32], Tensor[(1176), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_3596(%var_3594: Tensor[(18816), float64], %var_3595: Tensor[(63), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(5, 7, 3), float64], Tensor[(21, 5), float64], Tensor[(12, 7, 14), float64], float64, Tensor[(16), float64], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) {
  @func_3592(%var_3594, %var_3595) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(5, 7, 3), float64], Tensor[(21, 5), float64], Tensor[(12, 7, 14), float64], float64, Tensor[(16), float64], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) */
}

def @func_5170() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %379 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %380 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %381 = %379.0;
  %382 = %380.0;
  (%381, %382)
}

def @func_7385(%var_7383: Tensor[(21, 5), float64], %var_7384: Tensor[(360), uint8]) -> (Tensor[(15, 16, 2), float64], Tensor[(9, 5, 8), uint8], Tensor[(594), int32], Tensor[(21, 5), float64], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) {
  @func_7381(%var_7383, %var_7384) /* ty=(Tensor[(15, 16, 2), float64], Tensor[(9, 5, 8), uint8], Tensor[(594), int32], Tensor[(21, 5), float64], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) */
}

def @func_10121() -> Tensor[(15, 16, 2), float32] {
  %384 = fn () -> Tensor[(15, 16, 2), float32] {
    %383 = @func_8119() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %383.0
  };
  %384() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_13980() -> (Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) {
  %385 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %386 = @func_9072() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %387 = %385.0;
  %388 = %386.0;
  (%387, %388)
}

def @func_13389() -> (Tensor[(7, 8, 3), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  %389 = cast(meta[relay.Constant][17] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %390 = reshape(%389, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %391 = @func_4159() /* ty=Tensor[(7, 8, 3), float64] */;
  %392 = @func_2152(%390) /* ty=Tensor[(8, 14, 12), float32] */;
  (%391, %392, meta[relay.Constant][17] /* ty=Tensor[(1344), float32] */)
}

def @func_15375(%var_15371: uint16, %var_15373: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], uint16, Tensor[(15), uint16], Tensor[(1176), float64]) {
  %393 = @func_7640() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) */;
  %394 = cast(%var_15371, dtype="uint16") /* ty=uint16 */;
  %395 = cast(meta[relay.Constant][18] /* ty=Tensor[(15), uint16] */, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %396 = cast(%var_15373, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %397 = reshape(%394, newshape=[]) /* ty=uint16 */;
  %398 = reshape(%395, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
  %399 = reshape(%396, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
  %400 = @func_813(%397, %398, %399) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
  %401 = %393.1;
  %402 = %400.1;
  (%401, %402, %var_15371, meta[relay.Constant][18] /* ty=Tensor[(15), uint16] */, %var_15373)
}

def @func_6397() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
  %410 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
    %403 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %404 = @func_5085() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %405 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
    %406 = %403.0;
    %407 = %404.0;
    %408 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
    %409 = @func_3478() /* ty=Tensor[(15, 16, 2), float32] */;
    (%405, %406, %407, %408, %409)
  };
  %410() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */
}

def @func_16471() -> (Tensor[(12, 7, 14), float64],) {
  %411 = @func_8630() /* ty=(Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %412 = %411.0;
  (%412,)
}

def @func_15748() -> Tensor[(15, 16, 2), float32] {
  %413 = @func_11284() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1, 63), uint32]) */;
  %413.0
}

def @func_10254() -> (Tensor[(15, 16, 2), float32],) {
  @func_10252() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_9945() -> Tensor[(15, 16, 2), float32] {
  %414 = fn () -> Tensor[(15, 16, 2), float32] {
    @func_7947() /* ty=Tensor[(15, 16, 2), float32] */
  };
  %414() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_18639() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(3, 10, 10), float64], Tensor[(30), uint64], Tensor[(300), uint64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %415 = cast(meta[relay.Constant][19] /* ty=Tensor[(30), uint64] */, dtype="uint64") /* ty=Tensor[(30), uint64] */;
  %416 = cast(meta[relay.Constant][20] /* ty=Tensor[(300), uint64] */, dtype="uint64") /* ty=Tensor[(300), uint64] */;
  %417 = reshape(%415, newshape=[3, 10, 1]) /* ty=Tensor[(3, 10, 1), uint64] */;
  %418 = reshape(%416, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), uint64] */;
  %419 = @func_8119() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %420 = @func_10925() /* ty=Tensor[(15, 16, 2), float32] */;
  %421 = @func_10987() /* ty=Tensor[(15, 16, 2), float32] */;
  %422 = @func_12513() /* ty=Tensor[(15, 16, 2), float32] */;
  %423 = @func_9615(%417, %418) /* ty=Tensor[(3, 10, 10), float64] */;
  %424 = @func_13794() /* ty=Tensor[(15, 16, 2), float32] */;
  %425 = @func_3891() /* ty=Tensor[(15, 16, 2), float32] */;
  %426 = %419.0;
  (%420, %421, %422, %423, meta[relay.Constant][19] /* ty=Tensor[(30), uint64] */, meta[relay.Constant][20] /* ty=Tensor[(300), uint64] */, %424, %425, %426)
}

def @func_10252() -> (Tensor[(15, 16, 2), float32],) {
  %427 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %428 = %427.0;
  (%428,)
}

def @func_17447() -> (Tensor[(15, 16, 2), float32],) {
  %429 = @func_5085() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %430 = %429.0;
  (%430,)
}

def @func_9186(%var_9184: uint16) -> (Tensor[(15, 16, 2), float32], Tensor[(1176), bool], uint16, Tensor[(5, 3), uint16]) {
  @func_9183(%var_9184) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1176), bool], uint16, Tensor[(5, 3), uint16]) */
}

def @func_17045(%var_17042: Tensor[(18816), float64], %var_17043: Tensor[(18816), float64], %var_17044: Tensor[(168, 8), float32]) -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(1, 14), float32], Tensor[(15, 16, 2), float32], Tensor[(21, 3), uint32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(168, 8), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(144), float32], Tensor[(168), float64], Tensor[(15, 16, 2), float32], Tensor[(640), bool], Tensor[(18816), uint16]) {
  %477 = fn (%var_16884: Tensor[(18816), float64], %var_16925: Tensor[(18816), float64], %var_16936: Tensor[(168, 8), float32]) -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(1, 14), float32], Tensor[(15, 16, 2), float32], Tensor[(21, 3), uint32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(168, 8), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(144), float32], Tensor[(168), float64], Tensor[(15, 16, 2), float32], Tensor[(640), bool], Tensor[(18816), uint16]) {
    %431 = @func_6396() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
    %432 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
    %433 = reshape(%432, newshape=[1, 2, 7]) /* ty=Tensor[(1, 2, 7), float32] */;
    %434 = @func_16178(%433) /* ty=(Tensor[(?, 2, 7), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %435 = cast(%var_16884, dtype="float64") /* ty=Tensor[(18816), float64] */;
    %436 = cast(meta[relay.Constant][22] /* ty=Tensor[(21, 3), uint32] */, dtype="uint32") /* ty=Tensor[(21, 3), uint32] */;
    %437 = reshape(%435, newshape=[18816]) /* ty=Tensor[(18816), float64] */;
    %438 = reshape(%436, newshape=[63]) /* ty=Tensor[(63), uint32] */;
    %439 = @func_11727(%437, %438) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 10, 8), float32], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) */;
    %440 = @func_11340() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %441 = @func_12589() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %442 = cast(%var_16936, dtype="float32") /* ty=Tensor[(168, 8), float32] */;
    %443 = reshape(%442, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
    %444 = @func_7201(%443) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
    %445 = @func_9100() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %446 = @func_9209() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %447 = cast(meta[relay.Constant][23] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
    %448 = @func_12540() /* ty=Tensor[(756), uint32] */;
    %449 = cast(%448, dtype="uint32") /* ty=Tensor[(756), uint32] */;
    %450 = reshape(%447, newshape=[7, 8, 3]) /* ty=Tensor[(7, 8, 3), float64] */;
    %451 = reshape(%449, newshape=[378, 2]) /* ty=Tensor[(378, 2), uint32] */;
    %452 = @func_8681(%450, %451) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(7, 8, 3), int8], Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(378, 2), uint32], Tensor[(1872), float32]) */;
    %453 = cast(meta[relay.Constant][24] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
    %454 = reshape(%453, newshape=[5, 16, 8]) /* ty=Tensor[(5, 16, 8), bool] */;
    %455 = @func_16652(%454) /* ty=(Tensor[(5, 16, 8), bool], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32]) */;
    %456 = cast(%var_16925, dtype="float32") /* ty=Tensor[(18816), float32] */;
    %457 = shape_of(%var_16884, dtype="int32") /* ty=Tensor[(1), int32] */;
    %458 = cast(%var_16884, dtype="float32") /* ty=Tensor[(18816), float32] */;
    %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?), float32] */;
    %460 = floor_mod(%458, %459) /* ty=Tensor[(18816), float32] */;
    %461 = cast(meta[relay.Constant][25] /* ty=Tensor[(18816), float32] */, dtype="uint16") /* ty=Tensor[(18816), uint16] */;
    %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(1), int32] */;
    %463 = cast(%460, dtype="uint16") /* ty=Tensor[(18816), uint16] */;
    %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %465 = %431.3;
    %466 = %434.1;
    %467 = %439.0;
    %468 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
    %469 = %440.3;
    %470 = %441.0;
    %471 = %444.0;
    %472 = %445.0;
    %473 = %446.0;
    %474 = %452.3;
    %475 = %455.2;
    %476 = right_shift(%463, %464) /* ty=Tensor[(18816), uint16] */;
    (%465, %466, meta[relay.Constant][21] /* ty=Tensor[(1, 14), float32] */, %467, meta[relay.Constant][22] /* ty=Tensor[(21, 3), uint32] */, %468, %469, %470, %471, %var_16936, %472, %473, %448, %474, meta[relay.Constant][23] /* ty=Tensor[(168), float64] */, %475, meta[relay.Constant][24] /* ty=Tensor[(640), bool] */, %476)
  };
  %477(%var_17042, %var_17043, %var_17044) /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(1, 14), float32], Tensor[(15, 16, 2), float32], Tensor[(21, 3), uint32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(168, 8), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(144), float32], Tensor[(168), float64], Tensor[(15, 16, 2), float32], Tensor[(640), bool], Tensor[(18816), uint16]) */
}

def @func_4603() -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
  @func_4601() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */
}

def @func_13391() -> (Tensor[(7, 8, 3), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  @func_13389() /* ty=(Tensor[(7, 8, 3), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */
}

def @func_4865(%var_4814: Tensor[(63), uint32], %var_4818: Tensor[(105), float64], %var_4829: Tensor[(1344), float32], %var_4838: Tensor[(320), float32], %var_4839: Tensor[(15), uint16]) -> (Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64], Tensor[(3, 252), float64], Tensor[(63), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(12, 7, 14), float64], Tensor[(10, 8, 4), float64], Tensor[(320), float32], Tensor[(15), uint16]) {
  %478 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %479 = cast(meta[relay.Constant][26] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %480 = reshape(%479, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %481 = @func_4661(%480) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %482 = cast(%var_4814, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %483 = reshape(%482, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %484 = @func_3421(%483) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), float64]) */;
  %485 = cast(%var_4818, dtype="float64") /* ty=Tensor[(105), float64] */;
  %486 = reshape(%485, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %487 = cast(%var_4829, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %488 = reshape(%487, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %489 = cast(meta[relay.Constant][26] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %490 = reshape(%489, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
  %491 = cast(%var_4838, dtype="float32") /* ty=Tensor[(320), float32] */;
  %492 = cast(%var_4839, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %493 = reshape(%491, newshape=[10, 8, 4]) /* ty=Tensor[(10, 8, 4), float32] */;
  %494 = reshape(%492, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %495 = @func_1499(%493, %494) /* ty=(Tensor[(588, 2), float64], uint16, Tensor[(15), uint16], Tensor[(1176), float64], Tensor[(588, 2), float64], Tensor[(10, 8, 4), float64]) */;
  %496 = %478.0;
  %497 = %481.1;
  %498 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  %499 = %484.3;
  %500 = @func_1694(%486) /* ty=Tensor[(5, 7, 3), float64] */;
  %501 = @func_2152(%488) /* ty=Tensor[(8, 14, 12), float32] */;
  %502 = @func_164(%490) /* ty=Tensor[(12, 7, 14), float64] */;
  %503 = %495.5;
  (%496, %497, meta[relay.Constant][26] /* ty=Tensor[(1176), float64] */, %498, %499, %var_4814, %500, %var_4818, %501, %var_4829, %502, %503, %var_4838, %var_4839)
}

def @func_3623() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %507 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %504 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %505 = %504.0;
    %506 = @func_3478() /* ty=Tensor[(15, 16, 2), float32] */;
    (%505, %506)
  };
  %507() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_11572(%var_11552: Tensor[(144), float32]) -> (Tensor[(10, 8, 11), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(8, 14, 12), float32], Tensor[(144), float32], Tensor[(1344), float32], Tensor[(8, 14, 12), float32]) {
  %508 = cast(meta[relay.Constant][27] /* ty=Tensor[(10, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(10, 8, 11), float32] */;
  %509 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %510 = @func_9800() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %511 = cast(%var_11552, dtype="float32") /* ty=Tensor[(144), float32] */;
  %512 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
  %513 = cast(%512, dtype="float64") /* ty=Tensor[(12, 7, 14), float64] */;
  %514 = cast(meta[relay.Constant][28] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %515 = reshape(%511, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %516 = reshape(%513, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %517 = reshape(%514, newshape=[2, 672]) /* ty=Tensor[(2, 672), float32] */;
  %518 = @func_6895(%515, %516, %517) /* ty=(Tensor[(14, 3, 16), float32], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(8, 14, 12), float32], Tensor[(2, 672), float32]) */;
  %519 = %518.5;
  %520 = cast(%519, dtype="float32") /* ty=Tensor[(8, 14, 12), float32] */;
  %521 = reshape(%520, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %522 = sqrt(%508) /* ty=Tensor[(10, 8, 11), float32] */;
  %523 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  %524 = @func_7650() /* ty=Tensor[(15, 16, 2), float32] */;
  %525 = %509.0;
  %526 = %510.0;
  %527 = @func_2152(%521) /* ty=Tensor[(8, 14, 12), float32] */;
  (%522, %523, %524, %525, %526, %512, %519, %var_11552, meta[relay.Constant][28] /* ty=Tensor[(1344), float32] */, %527)
}

def @func_7144() -> (Tensor[(15, 16, 2), float64],) {
  %528 = @func_4601() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %529 = %528.0;
  (%529,)
}

def @func_15327() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) {
  %533 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) {
    %530 = @func_9831() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
    %531 = %530.1;
    %532 = @func_14028() /* ty=Tensor[(15, 16, 2), float64] */;
    (%531, %532)
  };
  %533() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */
}

def @func_13680() -> (Tensor[(15, 16, 2), float32],) {
  %535 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %534 = @func_8358() /* ty=Tensor[(15, 16, 2), float32] */;
    (%534,)
  };
  %535() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_17155() -> (Tensor[(1176), float64], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) {
  @func_17153() /* ty=(Tensor[(1176), float64], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) */
}

def @func_18059() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_18057() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_3271() -> Tensor[(15, 16, 2), float32] {
  @func_3269() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_3630() -> Tensor[(15, 16, 2), float32] {
  @func_3628() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_9801() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %538 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %536 = @func_7947() /* ty=Tensor[(15, 16, 2), float32] */;
    %537 = @func_7862() /* ty=Tensor[(15, 16, 2), float32] */;
    (%536, %537)
  };
  %538() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_17819() -> Tensor[(15, 16, 2), float32] {
  @func_17817() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_17817() -> Tensor[(15, 16, 2), float32] {
  %539 = @func_10945() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %539.1
}

def @func_19078() -> (Tensor[(1176), float64],) {
  @func_19076() /* ty=(Tensor[(1176), float64],) */
}

def @func_10927() -> Tensor[(15, 16, 2), float32] {
  @func_10925() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_5172() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_5170() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_5604(%var_5550: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(1176), float64]) {
  %540 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %541 = cast(%var_5550, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %542 = reshape(%541, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %543 = @func_4661(%542) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %544 = %540.0;
  %545 = %543.4;
  (%544, %545, %var_5550)
}

def @func_8826() -> Tensor[(15, 16, 2), float32] {
  %546 = fn () -> Tensor[(15, 16, 2), float32] {
    @func_6473() /* ty=Tensor[(15, 16, 2), float32] */
  };
  %546() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_11978() -> (Tensor[(15, 16, 2), float32],) {
  %549 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %547 = @func_5251() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(360), uint8]) */;
    %548 = %547.0;
    (%548,)
  };
  %549() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_14990() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %550 = @func_9907() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %551 = %550.1;
  %552 = @func_3478() /* ty=Tensor[(15, 16, 2), float32] */;
  (%551, %552)
}

def @func_8697() -> Tensor[(15, 16, 2), float32] {
  %554 = fn () -> Tensor[(15, 16, 2), float32] {
    %553 = @func_6637() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %553.0
  };
  %554() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_11119(%var_11117: uint16, %var_11118: Tensor[(15), uint16]) -> (Tensor[(15, 16, 2), float32], Tensor[(1176), bool], uint16, Tensor[(15), uint16], Tensor[(15, 16, 2), float64], Tensor[(756), uint32], Tensor[(21, 5), float64], uint16, Tensor[(320), float32]) {
  @func_11115(%var_11117, %var_11118) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1176), bool], uint16, Tensor[(15), uint16], Tensor[(15, 16, 2), float64], Tensor[(756), uint32], Tensor[(21, 5), float64], uint16, Tensor[(320), float32]) */
}

def @func_12513() -> Tensor[(15, 16, 2), float32] {
  %555 = @func_6962() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %555.0
}

def @func_13841(%var_13819: Tensor[(168, 8), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(168, 8), float64]) {
  %556 = @func_11931() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %557 = @func_10797() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(168, 8), float32]) */;
  %558 = %557.2;
  %559 = cast(%var_13819, dtype="bool") /* ty=Tensor[(168, 8), bool] */;
  %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(2), int32] */;
  %561 = cast(%558, dtype="bool") /* ty=Tensor[(168, 8), bool] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %563 = not_equal(%561, %562) /* ty=Tensor[(168, 8), bool] */;
  %564 = cast(%563, dtype="float64") /* ty=Tensor[(168, 8), float64] */;
  %565 = %556.0;
  %566 = cosh(%564) /* ty=Tensor[(168, 8), float64] */;
  (%565, %566)
}

def @func_8861(%var_8860: Tensor[(360), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) {
  %572 = fn (%var_8851: Tensor[(360), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) {
    %567 = cast(%var_8851, dtype="uint8") /* ty=Tensor[(360), uint8] */;
    %568 = reshape(%567, newshape=[360]) /* ty=Tensor[(360), uint8] */;
    %569 = @func_5048(%568) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) */;
    %570 = @func_6104() /* ty=Tensor[(15, 16, 2), float32] */;
    %571 = %569.1;
    (%570, %571, %var_8851)
  };
  %572(%var_8860) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) */
}

def @func_15418() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %573 = @func_15239() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %574 = %573.3;
  %575 = @func_11764() /* ty=Tensor[(15, 16, 2), float32] */;
  (%574, %575)
}

def @func_11435() -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) {
  %576 = @func_11340() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %577 = @func_10797() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(168, 8), float32]) */;
  %578 = @func_11340() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %579 = cast(meta[relay.Constant][29] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %580 = reshape(%579, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
  %581 = %576.3;
  %582 = %577.1;
  %583 = %578.2;
  %584 = @func_164(%580) /* ty=Tensor[(12, 7, 14), float64] */;
  (%581, %582, %583, %584, meta[relay.Constant][29] /* ty=Tensor[(1176), float64] */)
}

def @func_15554(%var_15552: Tensor[(3, 30), uint16]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 3, 12), float32], Tensor[(3, 30), uint16], Tensor[(1350), uint16], Tensor[(144), float32]) {
  @func_15551(%var_15552) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 3, 12), float32], Tensor[(3, 30), uint16], Tensor[(1350), uint16], Tensor[(144), float32]) */
}

def @func_7049(%var_7045: Tensor[(9, 6, 11), int32], %var_7046: Tensor[(9, 6, 11), int32], %var_7047: Tensor[(21, 5), float64], %var_7048: Tensor[(12, 30), uint8]) -> (Tensor[(9, 6, 11), int32], Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(21, 5), float64], Tensor[(144), float32], Tensor[(9, 5, 8), uint8], Tensor[(12, 30), uint8]) {
  %602 = fn (%var_7023: Tensor[(9, 6, 11), int32], %var_7024: Tensor[(9, 6, 11), int32], %var_7036: Tensor[(21, 5), float64], %var_7042: Tensor[(12, 30), uint8]) -> (Tensor[(9, 6, 11), int32], Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(21, 5), float64], Tensor[(144), float32], Tensor[(9, 5, 8), uint8], Tensor[(12, 30), uint8]) {
    %585 = cast(%var_7024, dtype="int32") /* ty=Tensor[(9, 6, 11), int32] */;
    %586 = shape_of(%var_7023, dtype="int32") /* ty=Tensor[(3), int32] */;
    %587 = cast(%var_7023, dtype="int32") /* ty=Tensor[(9, 6, 11), int32] */;
    %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %589 = cast(meta[relay.Constant][30] /* ty=Tensor[(756), uint32] */, dtype="uint32") /* ty=Tensor[(756), uint32] */;
    %590 = cast(%var_7036, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
    %591 = cast(meta[relay.Constant][31] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %592 = reshape(%589, newshape=[756]) /* ty=Tensor[(756), uint32] */;
    %593 = reshape(%590, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
    %594 = reshape(%591, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %595 = @func_3710(%592, %593, %594) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(2880), uint16], Tensor[(756), uint32], Tensor[(7, 15), float64], Tensor[(1176), float64], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(144), float32]) */;
    %596 = cast(%var_7042, dtype="uint8") /* ty=Tensor[(12, 30), uint8] */;
    %597 = reshape(%596, newshape=[360]) /* ty=Tensor[(360), uint8] */;
    %598 = @func_5048(%597) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) */;
    %599 = bitwise_or(%587, %588) /* ty=Tensor[(9, 6, 11), int32] */;
    %600 = %595.0;
    %601 = %598.1;
    (%599, %600, meta[relay.Constant][30] /* ty=Tensor[(756), uint32] */, %var_7036, meta[relay.Constant][31] /* ty=Tensor[(144), float32] */, %601, %var_7042)
  };
  %602(%var_7045, %var_7046, %var_7047, %var_7048) /* ty=(Tensor[(9, 6, 11), int32], Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(21, 5), float64], Tensor[(144), float32], Tensor[(9, 5, 8), uint8], Tensor[(12, 30), uint8]) */
}

def @func_17174() -> Tensor[(15, 16, 2), float32] {
  %603 = fn () -> Tensor[(15, 16, 2), float32] {
    @func_3089() /* ty=Tensor[(15, 16, 2), float32] */
  };
  %603() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_17411() -> (Tensor[(15, 16, 2), float64], Tensor[(63), bool], Tensor[(15, 16, 2), float32]) {
  @func_17409() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(63), bool], Tensor[(15, 16, 2), float32]) */
}

def @func_13508() -> (Tensor[(1344), float32], Tensor[(15, 16, 2), float32]) {
  %608 = fn () -> (Tensor[(1344), float32], Tensor[(15, 16, 2), float32]) {
    %604 = @func_6001() /* ty=(Tensor[(1344), float32],) */;
    %605 = @func_11931() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %606 = %604.0;
    %607 = %605.2;
    (%606, %607)
  };
  %608() /* ty=(Tensor[(1344), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_16403(%var_16401: Tensor[(90), uint16], %var_16402: Tensor[(1350), uint16]) -> (Tensor[(12, 10, 8), float32], Tensor[(144), float32], Tensor[(90), uint16], Tensor[(1350), uint16], Tensor[(144), float32], Tensor[(15, 16, 2), float32]) {
  @func_16399(%var_16401, %var_16402) /* ty=(Tensor[(12, 10, 8), float32], Tensor[(144), float32], Tensor[(90), uint16], Tensor[(1350), uint16], Tensor[(144), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_19198() -> (Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float64]) {
  %613 = fn () -> (Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float64]) {
    %609 = @func_16471() /* ty=(Tensor[(12, 7, 14), float64],) */;
    %610 = @func_5425() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %611 = %609.0;
    %612 = %610.1;
    (%611, %612)
  };
  %613() /* ty=(Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float64]) */
}

def @func_5653() -> (Tensor[(15, 16, 2), float32],) {
  %614 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  (%614,)
}

def @func_3229(%var_3224: Tensor[(12, 16, 15), uint16], %var_3225: Tensor[(756), uint32], %var_3226: Tensor[(105), float64], %var_3227: Tensor[(1176), float64], %var_3228: Tensor[(1, 1872), float32]) -> (Tensor[(12, 16, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(756), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(12, 7, 14), float64], uint16, Tensor[(5, 3), uint16], Tensor[(1176), float64], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1, 1872), float32]) {
  @func_3222(%var_3224, %var_3225, %var_3226, %var_3227, %var_3228) /* ty=(Tensor[(12, 16, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(756), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(12, 7, 14), float64], uint16, Tensor[(5, 3), uint16], Tensor[(1176), float64], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1, 1872), float32]) */
}

def @func_8763(%var_8727: Tensor[(2, 588), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(2, 588), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(168), float64], Tensor[(756), uint32]) {
  %615 = @func_5514() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %616 = cast(%var_8727, dtype="float64") /* ty=Tensor[(2, 588), float64] */;
  %617 = reshape(%616, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %618 = @func_5795(%617) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(7, 8, 3), float64]) */;
  %619 = %618.3;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %621 = shape_of(%var_8727, dtype="int32") /* ty=Tensor[(2), int32] */;
  %622 = cast(%var_8727, dtype="float32") /* ty=Tensor[(2, 588), float32] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %624 = cast(meta[relay.Constant][32] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %625 = cast(meta[relay.Constant][33] /* ty=Tensor[(756), uint32] */, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %626 = reshape(%624, newshape=[7, 8, 3]) /* ty=Tensor[(7, 8, 3), float64] */;
  %627 = reshape(%625, newshape=[378, 2]) /* ty=Tensor[(378, 2), uint32] */;
  %628 = @func_8681(%626, %627) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(7, 8, 3), int8], Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(378, 2), uint32], Tensor[(1872), float32]) */;
  %629 = %615.1;
  %630 = floor_divide(%622, %623) /* ty=Tensor[(2, 588), float32] */;
  %631 = @func_7862() /* ty=Tensor[(15, 16, 2), float32] */;
  %632 = %628.0;
  (%629, %630, %631, %632, meta[relay.Constant][32] /* ty=Tensor[(168), float64] */, meta[relay.Constant][33] /* ty=Tensor[(756), uint32] */)
}

def @func_3628() -> Tensor[(15, 16, 2), float32] {
  %633 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %633.0
}

def @func_1696(%var_1695: Tensor[(5, 7, 3), float64]) -> Tensor[(5, 7, 3), float64] {
  %635 = fn (%var_1680: Tensor[(5, 7, 3), float64]) -> Tensor[(5, 7, 3), float64] {
    %634 = cast(%var_1680, dtype="float64") /* ty=Tensor[(5, 7, 3), float64] */;
    cos(%634) /* ty=Tensor[(5, 7, 3), float64] */
  };
  %635(%var_1695) /* ty=Tensor[(5, 7, 3), float64] */
}

def @func_18961(%var_18959: Tensor[(1, 8, 13), float32]) -> (Tensor[(1, 8, 13), float32],) {
  @func_18958(%var_18959) /* ty=(Tensor[(1, 8, 13), float32],) */
}

def @func_12313() -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(168, 8), float32]) {
  @func_12311() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(168, 8), float32]) */
}

def @func_5515() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %640 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %636 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %637 = @func_3628() /* ty=Tensor[(15, 16, 2), float32] */;
    %638 = %636.0;
    %639 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
    (%637, %638, %639)
  };
  %640() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_9253() -> (Tensor[(15, 16, 2), float32],) {
  %641 = @func_6909() /* ty=Tensor[(15, 16, 2), float32] */;
  (%641,)
}

def @func_14074() -> (Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float32]) {
  %646 = fn () -> (Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float32]) {
    %642 = @func_13980() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
    %643 = @func_9800() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %644 = %642.0;
    %645 = %643.0;
    (%644, %645)
  };
  %646() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_16652(%var_16594: Tensor[(5, 16, 8), bool]) -> (Tensor[(5, 16, 8), bool], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32]) {
  %647 = cast(%var_16594, dtype="bool") /* ty=Tensor[(5, 16, 8), bool] */;
  %648 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(5, 16, 8), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 16, 8), bool] */, dtype="bool") /* ty=Tensor[(5, 16, 8), bool] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %651 = @func_11791() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %652 = @func_13907() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %653 = @func_8919() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) */;
  %654 = logical_and(%649, %650) /* ty=Tensor[(5, 16, 8), bool] */;
  %655 = %651.0;
  %656 = %652.0;
  %657 = %653.1;
  (%654, %655, %656, %657)
}

def @func_18542() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) {
  %660 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) {
    %658 = @func_9529() /* ty=Tensor[(15, 16, 2), float32] */;
    %659 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
    (%658, %659)
  };
  %660() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) */
}

def @func_3091() -> Tensor[(15, 16, 2), float32] {
  @func_3089() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_2817(%var_2816: Tensor[(4, 4, 1), float32]) -> (Tensor[(4, 4, 1), float32],) {
  %663 = fn (%var_2812: Tensor[(4, 4, 1), float32]) -> (Tensor[(4, 4, 1), float32],) {
    %661 = cast(%var_2812, dtype="float32") /* ty=Tensor[(4, 4, 1), float32] */;
    %662 = cosh(%661) /* ty=Tensor[(4, 4, 1), float32] */;
    (%662,)
  };
  %663(%var_2816) /* ty=(Tensor[(4, 4, 1), float32],) */
}

def @func_8025() -> (Tensor[(15, 16, 2), float32],) {
  %664 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %665 = %664.0;
  (%665,)
}

def @func_3797() -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  %666 = cast(meta[relay.Constant][35] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %667 = reshape(%666, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %668 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  %669 = @func_2152(%667) /* ty=Tensor[(8, 14, 12), float32] */;
  (%668, %669, meta[relay.Constant][35] /* ty=Tensor[(1344), float32] */)
}

def @func_11618() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %673 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %670 = @func_7471() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */;
    %671 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
    %672 = %670.1;
    (%671, %672)
  };
  %673() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_5763(%var_5740: Tensor[(1, 9, 10), uint16], %var_5741: Tensor[(15, 9, 10), uint16], %var_5752: Tensor[(144), float32]) -> (Tensor[(15, 9, 10), uint16], Tensor[(15, 3, 12), float32], bool, Tensor[(540), bool], Tensor[(144), float32]) {
  %674 = cast(%var_5740, dtype="uint16") /* ty=Tensor[(1, 9, 10), uint16] */;
  %675 = cast(%var_5741, dtype="uint16") /* ty=Tensor[(15, 9, 10), uint16] */;
  %676 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %677 = cast(meta[relay.Constant][36] /* ty=Tensor[(540), bool] */, dtype="bool") /* ty=Tensor[(540), bool] */;
  %678 = cast(%var_5752, dtype="float32") /* ty=Tensor[(144), float32] */;
  %679 = reshape(%676, newshape=[]) /* ty=bool */;
  %680 = reshape(%677, newshape=[15, 3, 12]) /* ty=Tensor[(15, 3, 12), bool] */;
  %681 = reshape(%678, newshape=[2, 72]) /* ty=Tensor[(2, 72), float32] */;
  %682 = @func_4208(%679, %680, %681) /* ty=(Tensor[(15, 3, 12), float32], Tensor[(1176), float64], Tensor[(756, 1), uint32], Tensor[(21, 5), float64], Tensor[(2, 72), float32]) */;
  %683 = right_shift(%674, %675) /* ty=Tensor[(15, 9, 10), uint16] */;
  %684 = %682.0;
  (%683, %684, True /* ty=bool */, meta[relay.Constant][36] /* ty=Tensor[(540), bool] */, %var_5752)
}

def @func_8684(%var_8682: Tensor[(7, 8, 3), float64], %var_8683: Tensor[(378, 2), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(7, 8, 3), int8], Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(378, 2), uint32], Tensor[(1872), float32]) {
  %700 = fn (%var_8651: Tensor[(7, 8, 3), float64], %var_8678: Tensor[(378, 2), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(7, 8, 3), int8], Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(378, 2), uint32], Tensor[(1872), float32]) {
    %685 = @func_4159() /* ty=Tensor[(7, 8, 3), float64] */;
    %686 = cast(%var_8651, dtype="int8") /* ty=Tensor[(7, 8, 3), int8] */;
    %687 = shape_of(%685, dtype="int32") /* ty=Tensor[(3), int32] */;
    %688 = cast(%685, dtype="int8") /* ty=Tensor[(7, 8, 3), int8] */;
    %689 = dyn.reshape(%686, %687, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %690 = @func_3551() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
    %691 = cast(%var_8678, dtype="uint32") /* ty=Tensor[(378, 2), uint32] */;
    %692 = cast(meta[relay.Constant][37] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
    %693 = reshape(%691, newshape=[54, 14]) /* ty=Tensor[(54, 14), uint32] */;
    %694 = reshape(%692, newshape=[1872]) /* ty=Tensor[(1872), float32] */;
    %695 = @func_7577(%693, %694) /* ty=(Tensor[(1344), float32], Tensor[(144), float32], Tensor[(2880), uint16], Tensor[(54, 14), uint32], Tensor[(105), float64], Tensor[(1872), float32], Tensor[(84, 14), float32]) */;
    %696 = @func_4133() /* ty=Tensor[(15, 16, 2), float32] */;
    %697 = minimum(%688, %689) /* ty=Tensor[(7, 8, 3), int8] */;
    %698 = %690.2;
    %699 = %695.1;
    (%696, %697, %698, %699, %var_8678, meta[relay.Constant][37] /* ty=Tensor[(1872), float32] */)
  };
  %700(%var_8682, %var_8683) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(7, 8, 3), int8], Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(378, 2), uint32], Tensor[(1872), float32]) */
}

def @func_11191() -> (Tensor[(15, 16, 2), float32],) {
  %702 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %701 = @func_10863() /* ty=Tensor[(15, 16, 2), float32] */;
    (%701,)
  };
  %702() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_15111() -> (Tensor[(63), bool],) {
  %710 = fn () -> (Tensor[(63), bool],) {
    %703 = @func_7640() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) */;
    %704 = %703.2;
    %705 = cast(meta[relay.Constant][38] /* ty=Tensor[(63), uint32] */, dtype="bool") /* ty=Tensor[(63), bool] */;
    %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(1), int32] */;
    %707 = cast(%704, dtype="bool") /* ty=Tensor[(63), bool] */;
    %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?), bool] */;
    %709 = equal(%707, %708) /* ty=Tensor[(63), bool] */;
    (%709,)
  };
  %710() /* ty=(Tensor[(63), bool],) */
}

def @func_11931() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %711 = @func_8010() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %712 = @func_11190() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %713 = @func_4133() /* ty=Tensor[(15, 16, 2), float32] */;
  %714 = @func_11764() /* ty=Tensor[(15, 16, 2), float32] */;
  %715 = %711.0;
  %716 = %712.0;
  (%713, %714, %715, %716)
}

def @func_8011() -> (Tensor[(15, 16, 2), float32],) {
  %719 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %717 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
    %718 = %717.0;
    (%718,)
  };
  %719() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_13341(%var_13339: Tensor[(12, 10, 8), float32], %var_13340: Tensor[(144), float32]) -> (Tensor[(12, 10, 8), uint16], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(144), float32]) {
  %732 = fn (%var_13298: Tensor[(12, 10, 8), float32], %var_13336: Tensor[(144), float32]) -> (Tensor[(12, 10, 8), uint16], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(144), float32]) {
    %720 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
    %721 = %720.0;
    %722 = cast(%var_13298, dtype="uint16") /* ty=Tensor[(12, 10, 8), uint16] */;
    %723 = shape_of(%721, dtype="int32") /* ty=Tensor[(3), int32] */;
    %724 = cast(%721, dtype="uint16") /* ty=Tensor[(12, 10, 8), uint16] */;
    %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %726 = cast(%var_13336, dtype="float32") /* ty=Tensor[(144), float32] */;
    %727 = reshape(%726, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %728 = @func_11572(%727) /* ty=(Tensor[(10, 8, 11), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(8, 14, 12), float32], Tensor[(144), float32], Tensor[(1344), float32], Tensor[(8, 14, 12), float32]) */;
    %729 = logical_xor(%724, %725) /* ty=Tensor[(12, 10, 8), uint16] */;
    %730 = @func_11764() /* ty=Tensor[(15, 16, 2), float32] */;
    %731 = %728.3;
    (%729, %730, %731, %var_13336)
  };
  %732(%var_13339, %var_13340) /* ty=(Tensor[(12, 10, 8), uint16], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(144), float32]) */
}

def @func_5798(%var_5796: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(7, 8, 3), float64]) {
  @func_5795(%var_5796) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(7, 8, 3), float64]) */
}

def @func_4601() -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
  %733 = @func_3628() /* ty=Tensor[(15, 16, 2), float32] */;
  %734 = cast(%733, dtype="float64") /* ty=Tensor[(15, 16, 2), float64] */;
  %735 = cast(%733, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
  %736 = acosh(%734) /* ty=Tensor[(15, 16, 2), float64] */;
  %737 = sinh(%735) /* ty=Tensor[(15, 16, 2), float32] */;
  (%736, %737)
}

def @func_3971() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %741 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %738 = @func_3551() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
    %739 = @func_3089() /* ty=Tensor[(15, 16, 2), float32] */;
    %740 = %738.0;
    (%739, %740)
  };
  %741() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_8840() -> (Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) {
  @func_8838() /* ty=(Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) */
}

def @func_6106() -> Tensor[(15, 16, 2), float32] {
  @func_6104() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_15458() -> Tensor[(15, 16, 2), float32] {
  %743 = fn () -> Tensor[(15, 16, 2), float32] {
    %742 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %742.0
  };
  %743() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_17954() -> Tensor[(1176), float64] {
  %745 = fn () -> Tensor[(1176), float64] {
    %744 = @func_17153() /* ty=(Tensor[(1176), float64], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) */;
    %744.0
  };
  %745() /* ty=Tensor[(1176), float64] */
}

def @func_6638() -> (Tensor[(15, 16, 2), float32],) {
  %748 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %746 = @func_5514() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %747 = %746.0;
    (%747,)
  };
  %748() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_19360() -> Tensor[(12, 10, 8), float32] {
  %749 = fn () -> Tensor[(12, 10, 8), float32] {
    @func_15302() /* ty=Tensor[(12, 10, 8), float32] */
  };
  %749() /* ty=Tensor[(12, 10, 8), float32] */
}

def @func_14688() -> Tensor[(15, 16, 2), float64] {
  @func_14686() /* ty=Tensor[(15, 16, 2), float64] */
}

def @func_13182() -> Tensor[(15, 16, 2), float32] {
  %750 = @func_9209() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %750.0
}

def @func_4284(%var_4272: Tensor[(15, 16, 2), float64]) -> (Tensor[(15, 16, 2), int16],) {
  %751 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  %752 = cast(%var_4272, dtype="int16") /* ty=Tensor[(15, 16, 2), int16] */;
  %753 = shape_of(%751, dtype="int32") /* ty=Tensor[(3), int32] */;
  %754 = cast(%751, dtype="int16") /* ty=Tensor[(15, 16, 2), int16] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %756 = multiply(%754, %755) /* ty=Tensor[(15, 16, 2), int16] */;
  (%756,)
}

def @func_7018(%var_7017: Tensor[(182), int8]) -> (Tensor[(15, 16, 2), float64], Tensor[(13, ?, 14), bool], Tensor[(182), int8]) {
  %764 = fn (%var_7007: Tensor[(182), int8]) -> (Tensor[(15, 16, 2), float64], Tensor[(13, ?, 14), bool], Tensor[(182), int8]) {
    %757 = cast(%var_7007, dtype="int8") /* ty=Tensor[(182), int8] */;
    %758 = cast(%var_7007, dtype="int8") /* ty=Tensor[(182), int8] */;
    %759 = reshape(%757, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), int8] */;
    %760 = reshape(%758, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), int8] */;
    %761 = @func_6550(%759, %760) /* ty=(Tensor[(13, ?, 14), bool],) */;
    %762 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
    %763 = %761.0;
    (%762, %763, %var_7007)
  };
  %764(%var_7017) /* ty=(Tensor[(15, 16, 2), float64], Tensor[(13, ?, 14), bool], Tensor[(182), int8]) */
}

def @func_12478() -> (Tensor[(7, 8, 3), float64],) {
  %766 = fn () -> (Tensor[(7, 8, 3), float64],) {
    %765 = @func_4159() /* ty=Tensor[(7, 8, 3), float64] */;
    (%765,)
  };
  %766() /* ty=(Tensor[(7, 8, 3), float64],) */
}

def @func_8097() -> (Tensor[(756), uint32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) {
  @func_8095() /* ty=(Tensor[(756), uint32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */
}

def @func_5607(%var_5605: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(1176), float64]) {
  @func_5604(%var_5605) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(1176), float64]) */
}

def @func_10547() -> (Tensor[(15, 16, 2), bool],) {
  %774 = fn () -> (Tensor[(15, 16, 2), bool],) {
    %767 = @func_8369() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %768 = %767.0;
    %769 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 16, 2), float32] */, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
    %770 = shape_of(%768, dtype="int32") /* ty=Tensor[(3), int32] */;
    %771 = cast(%768, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
    %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %773 = greater_equal(%771, %772) /* ty=Tensor[(15, 16, 2), bool] */;
    (%773,)
  };
  %774() /* ty=(Tensor[(15, 16, 2), bool],) */
}

def @func_7896(%var_7895: Tensor[(2, 14, 15), float64]) -> (Tensor[(2, 14, 15), float64],) {
  %777 = fn (%var_7891: Tensor[(2, 14, 15), float64]) -> (Tensor[(2, 14, 15), float64],) {
    %775 = cast(%var_7891, dtype="float64") /* ty=Tensor[(2, 14, 15), float64] */;
    %776 = erf(%775) /* ty=Tensor[(2, 14, 15), float64] */;
    (%776,)
  };
  %777(%var_7895) /* ty=(Tensor[(2, 14, 15), float64],) */
}

def @func_13886(%var_13864: Tensor[(90), uint16], %var_13865: Tensor[(1350), uint16], %var_13866: Tensor[(144), float32]) -> (Tensor[(1344), float32], Tensor[(144), float32], Tensor[(90), uint16], Tensor[(1350), uint16], Tensor[(144), float32], Tensor[(13, ?, 14), bool], Tensor[(182), int8]) {
  %778 = @func_6001() /* ty=(Tensor[(1344), float32],) */;
  %779 = cast(%var_13864, dtype="uint16") /* ty=Tensor[(90), uint16] */;
  %780 = cast(%var_13865, dtype="uint16") /* ty=Tensor[(1350), uint16] */;
  %781 = cast(%var_13866, dtype="float32") /* ty=Tensor[(144), float32] */;
  %782 = reshape(%779, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), uint16] */;
  %783 = reshape(%780, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), uint16] */;
  %784 = reshape(%781, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %785 = @func_5763(%782, %783, %784) /* ty=(Tensor[(15, 9, 10), uint16], Tensor[(15, 3, 12), float32], bool, Tensor[(540), bool], Tensor[(144), float32]) */;
  %786 = cast(meta[relay.Constant][40] /* ty=Tensor[(182), int8] */, dtype="int8") /* ty=Tensor[(182), int8] */;
  %787 = cast(meta[relay.Constant][40] /* ty=Tensor[(182), int8] */, dtype="int8") /* ty=Tensor[(182), int8] */;
  %788 = reshape(%786, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), int8] */;
  %789 = reshape(%787, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), int8] */;
  %790 = @func_6550(%788, %789) /* ty=(Tensor[(13, ?, 14), bool],) */;
  %791 = %778.0;
  %792 = %785.4;
  %793 = %790.0;
  (%791, %792, %var_13864, %var_13865, %var_13866, %793, meta[relay.Constant][40] /* ty=Tensor[(182), int8] */)
}

def @func_8370() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %797 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %794 = @func_8119() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %795 = @func_8358() /* ty=Tensor[(15, 16, 2), float32] */;
    %796 = %794.0;
    (%795, %796)
  };
  %797() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_13844(%var_13842: Tensor[(168, 8), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(168, 8), float64]) {
  @func_13841(%var_13842) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(168, 8), float64]) */
}

def @func_12541() -> Tensor[(756), uint32] {
  %798 = fn () -> Tensor[(756), uint32] {
    @func_6205() /* ty=Tensor[(756), uint32] */
  };
  %798() /* ty=Tensor[(756), uint32] */
}

def @func_16473() -> (Tensor[(12, 7, 14), float64],) {
  @func_16471() /* ty=(Tensor[(12, 7, 14), float64],) */
}

def @func_16545(%var_16537: Tensor[(180, 2), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(63), bool], Tensor[(360), uint8], Tensor[(180, 2), uint8]) {
  %799 = @func_11186() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %800 = @func_15110() /* ty=(Tensor[(63), bool],) */;
  %801 = cast(%var_16537, dtype="uint8") /* ty=Tensor[(180, 2), uint8] */;
  %802 = reshape(%801, newshape=[360]) /* ty=Tensor[(360), uint8] */;
  %803 = @func_5048(%802) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) */;
  %804 = %799.0;
  %805 = %800.0;
  %806 = %803.2;
  (%804, %805, %806, %var_16537)
}

def @func_17760(%var_17735: Tensor[(182), int8]) -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), bool], Tensor[(13, ?, 14), bool], Tensor[(182), int8], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) {
  %807 = @func_13541() /* ty=(Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %808 = cast(%var_17735, dtype="int8") /* ty=Tensor[(182), int8] */;
  %809 = cast(%var_17735, dtype="int8") /* ty=Tensor[(182), int8] */;
  %810 = reshape(%808, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), int8] */;
  %811 = reshape(%809, newshape=[13, 1, 14]) /* ty=Tensor[(13, 1, 14), int8] */;
  %812 = @func_6550(%810, %811) /* ty=(Tensor[(13, ?, 14), bool],) */;
  %813 = cast(meta[relay.Constant][41] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %814 = reshape(%813, newshape=[360, 1]) /* ty=Tensor[(360, 1), uint8] */;
  %815 = @func_15951(%814) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360, 1), uint8], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %816 = @func_17334() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %817 = @func_9508() /* ty=Tensor[(15, 16, 2), float64] */;
  %818 = %807.0;
  %819 = %812.0;
  %820 = %815.1;
  %821 = %816.0;
  (%817, %818, %819, %var_17735, %820, meta[relay.Constant][41] /* ty=Tensor[(360), uint8] */, %821)
}

def @func_4135() -> Tensor[(15, 16, 2), float32] {
  @func_4133() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_9588(%var_9570: float64, %var_9571: Tensor[(16), float64], %var_9572: Tensor[(18816), float64]) -> (Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(1, 144), float32], Tensor[(1344), float32], Tensor[(1, 15), uint16], float64, Tensor[(16), float64], Tensor[(18816), float64], Tensor[(21, 3), uint32]) {
  %822 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 144), float32] */, dtype="float32") /* ty=Tensor[(1, 144), float32] */;
  %823 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
  %824 = cast(%823, dtype="float64") /* ty=Tensor[(12, 7, 14), float64] */;
  %825 = cast(meta[relay.Constant][43] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %826 = reshape(%822, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %827 = reshape(%824, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %828 = reshape(%825, newshape=[2, 672]) /* ty=Tensor[(2, 672), float32] */;
  %829 = @func_6895(%826, %827, %828) /* ty=(Tensor[(14, 3, 16), float32], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(8, 14, 12), float32], Tensor[(2, 672), float32]) */;
  %830 = cast(%var_9570, dtype="float64") /* ty=float64 */;
  %831 = cast(%var_9571, dtype="float64") /* ty=Tensor[(16), float64] */;
  %832 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 144), float32] */, dtype="float32") /* ty=Tensor[(1, 144), float32] */;
  %833 = cast(%var_9572, dtype="float64") /* ty=Tensor[(18816), float64] */;
  %834 = cast(meta[relay.Constant][44] /* ty=Tensor[(21, 3), uint32] */, dtype="uint32") /* ty=Tensor[(21, 3), uint32] */;
  %835 = reshape(%830, newshape=[]) /* ty=float64 */;
  %836 = reshape(%831, newshape=[16, 1, 1]) /* ty=Tensor[(16, 1, 1), float64] */;
  %837 = reshape(%832, newshape=[24, 6]) /* ty=Tensor[(24, 6), float32] */;
  %838 = reshape(%833, newshape=[16, 1176]) /* ty=Tensor[(16, 1176), float64] */;
  %839 = reshape(%834, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %840 = @func_3001(%835, %836, %837, %838, %839) /* ty=(Tensor[(16, 1, 1), float64], Tensor[(13, 9, 16), float64], Tensor[(24, 6), float32], Tensor[(1872), float32], Tensor[(16, 1176), float64], Tensor[(12, 7, 14), float64], Tensor[(1, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), uint32]) */;
  %841 = %829.4;
  %842 = %840.6;
  (%823, %841, meta[relay.Constant][42] /* ty=Tensor[(1, 144), float32] */, meta[relay.Constant][43] /* ty=Tensor[(1344), float32] */, %842, %var_9570, %var_9571, %var_9572, meta[relay.Constant][44] /* ty=Tensor[(21, 3), uint32] */)
}

def @func_19318() -> (Tensor[(15, 16, 2), float32],) {
  %844 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %843 = @func_10709() /* ty=Tensor[(15, 16, 2), float32] */;
    (%843,)
  };
  %844() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_7864() -> Tensor[(15, 16, 2), float32] {
  @func_7862() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_9907() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %845 = @func_5085() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %846 = @func_7640() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) */;
  %847 = %845.1;
  %848 = %846.1;
  (%847, %848)
}

def @func_10799() -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(168, 8), float32]) {
  @func_10797() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(168, 8), float32]) */
}

def @func_11187() -> (Tensor[(15, 16, 2), float32],) {
  %851 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %849 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %850 = %849.1;
    (%850,)
  };
  %851() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_13795() -> Tensor[(15, 16, 2), float32] {
  %853 = fn () -> Tensor[(15, 16, 2), float32] {
    %852 = @func_11931() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %852.0
  };
  %853() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_8554() -> Tensor[(12, 7, 14), float64] {
  %855 = fn () -> Tensor[(12, 7, 14), float64] {
    %854 = @func_3551() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
    %854.2
  };
  %855() /* ty=Tensor[(12, 7, 14), float64] */
}

def @func_19819() -> (Tensor[(1176), float64],) {
  %857 = fn () -> (Tensor[(1176), float64],) {
    %856 = @func_17953() /* ty=Tensor[(1176), float64] */;
    (%856,)
  };
  %857() /* ty=(Tensor[(1176), float64],) */
}

def @func_17317(%var_17315: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float32]) {
  @func_17314(%var_17315) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float32]) */
}

def @func_8920() -> (Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) {
  %866 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) {
    %858 = @func_8119() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %859 = cast(meta[relay.Constant][45] /* ty=Tensor[(16), float32] */, dtype="float32") /* ty=Tensor[(16), float32] */;
    %860 = reshape(%859, newshape=[4, 4, 1]) /* ty=Tensor[(4, 4, 1), float32] */;
    %861 = @func_2815(%860) /* ty=(Tensor[(4, 4, 1), float32],) */;
    %862 = @func_8838() /* ty=(Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) */;
    %863 = %858.0;
    %864 = %861.0;
    %865 = %862.1;
    (%863, %864, meta[relay.Constant][45] /* ty=Tensor[(16), float32] */, %865)
  };
  %866() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_16655(%var_16653: Tensor[(5, 16, 8), bool]) -> (Tensor[(5, 16, 8), bool], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32]) {
  @func_16652(%var_16653) /* ty=(Tensor[(5, 16, 8), bool], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32]) */
}

def @func_18958(%var_18955: Tensor[(1, 8, 13), float32]) -> (Tensor[(1, 8, 13), float32],) {
  %867 = cast(%var_18955, dtype="float32") /* ty=Tensor[(1, 8, 13), float32] */;
  %868 = asin(%867) /* ty=Tensor[(1, 8, 13), float32] */;
  (%868,)
}

def @func_2154(%var_2153: Tensor[(8, 14, 12), float32]) -> Tensor[(8, 14, 12), float32] {
  %870 = fn (%var_2146: Tensor[(8, 14, 12), float32]) -> Tensor[(8, 14, 12), float32] {
    %869 = cast(%var_2146, dtype="float32") /* ty=Tensor[(8, 14, 12), float32] */;
    cos(%869) /* ty=Tensor[(8, 14, 12), float32] */
  };
  %870(%var_2153) /* ty=Tensor[(8, 14, 12), float32] */
}

def @func_9458() -> (Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) {
  %871 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %872 = @func_7144() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %873 = %871.0;
  %874 = %872.0;
  (%873, %874)
}

def @func_3089() -> Tensor[(15, 16, 2), float32] {
  %875 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %875.0
}

def @func_14005() -> (Tensor[(15, 16, 2), float32],) {
  %876 = @func_8838() /* ty=(Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) */;
  %877 = %876.1;
  (%877,)
}

def @func_9284() -> Tensor[(4, 4, 1), float32] {
  @func_9282() /* ty=Tensor[(4, 4, 1), float32] */
}

def @func_9460() -> (Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) {
  @func_9458() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */
}

def @func_19305() -> (Tensor[(15, 16, 2), float32],) {
  @func_19303() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_3892() -> Tensor[(15, 16, 2), float32] {
  %879 = fn () -> Tensor[(15, 16, 2), float32] {
    %878 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %878.0
  };
  %879() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_11221(%var_11219: Tensor[(1, 5, 16), int8], %var_11220: Tensor[(12, 5, 16), int8]) -> (Tensor[(12, 5, 16), int8],) {
  %883 = fn (%var_11212: Tensor[(1, 5, 16), int8], %var_11213: Tensor[(12, 5, 16), int8]) -> (Tensor[(12, 5, 16), int8],) {
    %880 = cast(%var_11212, dtype="int8") /* ty=Tensor[(1, 5, 16), int8] */;
    %881 = cast(%var_11213, dtype="int8") /* ty=Tensor[(12, 5, 16), int8] */;
    %882 = bitwise_xor(%880, %881) /* ty=Tensor[(12, 5, 16), int8] */;
    (%882,)
  };
  %883(%var_11219, %var_11220) /* ty=(Tensor[(12, 5, 16), int8],) */
}

def @func_12063(%var_12012: Tensor[(360), uint8], %var_12054: Tensor[(8), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8], Tensor[(15, 16, 2), float64], Tensor[(2, 4, 1), float32], Tensor[(8), float32]) {
  %884 = @func_9100() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %885 = cast(%var_12012, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %886 = reshape(%885, newshape=[2, 180]) /* ty=Tensor[(2, 180), uint8] */;
  %887 = @func_11679(%886) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(2, 180), uint8], Tensor[(15, 16, 2), bool], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
  %888 = @func_9072() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %889 = cast(%var_12054, dtype="float32") /* ty=Tensor[(8), float32] */;
  %890 = reshape(%889, newshape=[2, 4, 1]) /* ty=Tensor[(2, 4, 1), float32] */;
  %891 = %884.0;
  %892 = %887.1;
  %893 = %888.0;
  %894 = @func_9063(%890) /* ty=Tensor[(2, 4, 1), float32] */;
  (%891, %892, %var_12012, %893, %894, %var_12054)
}

def @func_12440() -> (Tensor[(3, 3, 5), float32],) {
  %896 = fn () -> (Tensor[(3, 3, 5), float32],) {
    %895 = @func_9003() /* ty=Tensor[(3, 3, 5), float32] */;
    (%895,)
  };
  %896() /* ty=(Tensor[(3, 3, 5), float32],) */
}

def @func_4379() -> (Tensor[(15, 16, 2), float32],) {
  @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_5655() -> (Tensor[(15, 16, 2), float32],) {
  @func_5653() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_3560() -> (Tensor[(15, 16, 2), float32],) {
  %897 = @func_3089() /* ty=Tensor[(15, 16, 2), float32] */;
  (%897,)
}

def @func_6899(%var_6896: Tensor[(144), float32], %var_6897: Tensor[(1176), float64], %var_6898: Tensor[(2, 672), float32]) -> (Tensor[(14, 3, 16), float32], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(8, 14, 12), float32], Tensor[(2, 672), float32]) {
  %911 = fn (%var_6881: Tensor[(144), float32], %var_6883: Tensor[(1176), float64], %var_6890: Tensor[(2, 672), float32]) -> (Tensor[(14, 3, 16), float32], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(8, 14, 12), float32], Tensor[(2, 672), float32]) {
    %898 = cast(meta[relay.Constant][46] /* ty=Tensor[(14, 3, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 16), float32] */;
    %899 = cast(%var_6881, dtype="float32") /* ty=Tensor[(144), float32] */;
    %900 = cast(meta[relay.Constant][47] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
    %901 = cast(%var_6883, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %902 = reshape(%899, newshape=[1, 9, 16]) /* ty=Tensor[(1, 9, 16), float32] */;
    %903 = reshape(%900, newshape=[13, 9, 16]) /* ty=Tensor[(13, 9, 16), float32] */;
    %904 = reshape(%901, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %905 = @func_1537(%902, %903, %904) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) */;
    %906 = cast(%var_6890, dtype="float32") /* ty=Tensor[(2, 672), float32] */;
    %907 = reshape(%906, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
    %908 = log(%898) /* ty=Tensor[(14, 3, 16), float32] */;
    %909 = %905.2;
    %910 = @func_2152(%907) /* ty=Tensor[(8, 14, 12), float32] */;
    (%908, %909, %var_6881, meta[relay.Constant][47] /* ty=Tensor[(1872), float32] */, %var_6883, %910, %var_6890)
  };
  %911(%var_6896, %var_6897, %var_6898) /* ty=(Tensor[(14, 3, 16), float32], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(8, 14, 12), float32], Tensor[(2, 672), float32]) */
}

def @func_8052() -> Tensor[(15, 16, 2), float32] {
  @func_8050() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_13605(%var_13603: Tensor[(960), int8]) -> (Tensor[(1344), float32], Tensor[(12, 5, 16), int8], Tensor[(80), int8], Tensor[(960), int8]) {
  %912 = @func_13507() /* ty=(Tensor[(1344), float32], Tensor[(15, 16, 2), float32]) */;
  %913 = cast(meta[relay.Constant][48] /* ty=Tensor[(80), int8] */, dtype="int8") /* ty=Tensor[(80), int8] */;
  %914 = cast(%var_13603, dtype="int8") /* ty=Tensor[(960), int8] */;
  %915 = reshape(%913, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), int8] */;
  %916 = reshape(%914, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), int8] */;
  %917 = @func_11218(%915, %916) /* ty=(Tensor[(12, 5, 16), int8],) */;
  %918 = %912.0;
  %919 = %917.0;
  (%918, %919, meta[relay.Constant][48] /* ty=Tensor[(80), int8] */, %var_13603)
}

def @func_18512() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %920 = @func_11835() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %921 = %920.0;
  %922 = @func_15199() /* ty=Tensor[(15, 16, 2), float32] */;
  (%921, %922)
}

def @func_5252() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(360), uint8]) {
  %936 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(360), uint8]) {
    %923 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
    %924 = cast(%923, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
    %925 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
    %926 = cast(%923, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
    %927 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
    %928 = cast(%925, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
    %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %930 = cast(meta[relay.Constant][49] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
    %931 = reshape(%930, newshape=[360]) /* ty=Tensor[(360), uint8] */;
    %932 = @func_5048(%931) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) */;
    %933 = exp(%924) /* ty=Tensor[(15, 16, 2), float32] */;
    %934 = less_equal(%928, %929) /* ty=Tensor[(15, 16, 2), bool] */;
    %935 = %932.2;
    (%933, %934, %935, meta[relay.Constant][49] /* ty=Tensor[(360), uint8] */)
  };
  %936() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(360), uint8]) */
}

def @func_7795(%var_7793: Tensor[(105), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(756), uint32], Tensor[(15, 16, 2), float32]) {
  @func_7792(%var_7793) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(756), uint32], Tensor[(15, 16, 2), float32]) */
}

def @func_13184() -> Tensor[(15, 16, 2), float32] {
  @func_13182() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_15737() -> Tensor[(15, 16, 2), float32] {
  @func_15735() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_19076() -> (Tensor[(1176), float64],) {
  %937 = @func_17953() /* ty=Tensor[(1176), float64] */;
  (%937,)
}

def @func_19721() -> Tensor[(15, 16, 2), float32] {
  %938 = @func_18201() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %938.0
}

def @func_14222(%var_14219: Tensor[(16, 10, 14), float32], %var_14220: Tensor[(40, 2), int8], %var_14221: Tensor[(960), int8]) -> (Tensor[(12, 5, 16), int8], Tensor[(40, 2), int8], Tensor[(960), int8], Tensor[(16, 10, 14), float32]) {
  %951 = fn (%var_14183: Tensor[(16, 10, 14), float32], %var_14203: Tensor[(40, 2), int8], %var_14204: Tensor[(960), int8]) -> (Tensor[(12, 5, 16), int8], Tensor[(40, 2), int8], Tensor[(960), int8], Tensor[(16, 10, 14), float32]) {
    %939 = cast(%var_14203, dtype="int8") /* ty=Tensor[(40, 2), int8] */;
    %940 = cast(%var_14204, dtype="int8") /* ty=Tensor[(960), int8] */;
    %941 = reshape(%939, newshape=[1, 5, 16]) /* ty=Tensor[(1, 5, 16), int8] */;
    %942 = reshape(%940, newshape=[12, 5, 16]) /* ty=Tensor[(12, 5, 16), int8] */;
    %943 = @func_11218(%941, %942) /* ty=(Tensor[(12, 5, 16), int8],) */;
    %944 = cast(%var_14183, dtype="float32") /* ty=Tensor[(16, 10, 14), float32] */;
    %945 = cosh(%944) /* ty=Tensor[(16, 10, 14), float32] */;
    %946 = cast(%945, dtype="float32") /* ty=Tensor[(16, 10, 14), float32] */;
    %947 = exp(%946) /* ty=Tensor[(16, 10, 14), float32] */;
    %948 = cast(%947, dtype="float32") /* ty=Tensor[(16, 10, 14), float32] */;
    %949 = %943.0;
    %950 = log(%948) /* ty=Tensor[(16, 10, 14), float32] */;
    (%949, %var_14203, %var_14204, %950)
  };
  %951(%var_14219, %var_14220, %var_14221) /* ty=(Tensor[(12, 5, 16), int8], Tensor[(40, 2), int8], Tensor[(960), int8], Tensor[(16, 10, 14), float32]) */
}

def @main(%var_19860: Tensor[(144, 1), float32]) -> (Tensor[(12, 10, 8), float32], Tensor[(1176), float64], Tensor[(144, 105), int32]) {
  %952 = cast(meta[relay.Constant][50] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %953 = cast(%var_19860, dtype="float32") /* ty=Tensor[(144, 1), float32] */;
  %954 = reshape(%952, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %955 = reshape(%953, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %956 = @func_4104(%954, %955) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(3, 252), uint32], Tensor[(105), float64], Tensor[(144), float32]) */;
  %957 = cast(%var_19860, dtype="int32") /* ty=Tensor[(144, 1), int32] */;
  %958 = cast(meta[relay.Constant][50] /* ty=Tensor[(105), float64] */, dtype="int32") /* ty=Tensor[(105), int32] */;
  %959 = @func_19359() /* ty=Tensor[(12, 10, 8), float32] */;
  %960 = %956.1;
  %961 = logical_xor(%957, %958) /* ty=Tensor[(144, 105), int32] */;
  (%959, %960, %961)
}

def @func_6911() -> Tensor[(15, 16, 2), float32] {
  @func_6909() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_19443() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %964 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %962 = @func_5320() /* ty=Tensor[(15, 16, 2), float32] */;
    %963 = @func_10987() /* ty=Tensor[(15, 16, 2), float32] */;
    (%962, %963)
  };
  %964() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_18011(%var_18003: int8) -> Tensor[(16, 12, 8), bool] {
  %965 = cast(%var_18003, dtype="bool") /* ty=bool */;
  %966 = cast(meta[relay.Constant][51] /* ty=Tensor[(16, 12, 8), int8] */, dtype="bool") /* ty=Tensor[(16, 12, 8), bool] */;
  not_equal(%965, %966) /* ty=Tensor[(16, 12, 8), bool] */
}

def @func_19504() -> Tensor[(756), uint32] {
  %967 = fn () -> Tensor[(756), uint32] {
    @func_6205() /* ty=Tensor[(756), uint32] */
  };
  %967() /* ty=Tensor[(756), uint32] */
}

def @func_5051(%var_5049: Tensor[(360), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) {
  @func_5048(%var_5049) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) */
}

def @func_3063() -> (Tensor[(15, 16, 2), float32],) {
  %968 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 16, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
  %969 = acos(%968) /* ty=Tensor[(15, 16, 2), float32] */;
  (%969,)
}

def @func_12275() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_12273() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_10947() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_10945() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_9593(%var_9590: float64, %var_9591: Tensor[(16), float64], %var_9592: Tensor[(18816), float64]) -> (Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(1, 144), float32], Tensor[(1344), float32], Tensor[(1, 15), uint16], float64, Tensor[(16), float64], Tensor[(18816), float64], Tensor[(21, 3), uint32]) {
  @func_9588(%var_9590, %var_9591, %var_9592) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(1, 144), float32], Tensor[(1344), float32], Tensor[(1, 15), uint16], float64, Tensor[(16), float64], Tensor[(18816), float64], Tensor[(21, 3), uint32]) */
}

def @func_10797() -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(168, 8), float32]) {
  %970 = cast(meta[relay.Constant][53] /* ty=Tensor[(168, 8), float32] */, dtype="float32") /* ty=Tensor[(168, 8), float32] */;
  %971 = reshape(%970, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %972 = @func_7862() /* ty=Tensor[(15, 16, 2), float32] */;
  %973 = @func_2152(%971) /* ty=Tensor[(8, 14, 12), float32] */;
  (%972, %973, meta[relay.Constant][53] /* ty=Tensor[(168, 8), float32] */)
}

def @func_7201(%var_7178: Tensor[(1344), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  %974 = @func_5913() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %975 = cast(meta[relay.Constant][54] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %976 = cast(meta[relay.Constant][54] /* ty=Tensor[(360), uint8] */, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %977 = reshape(%975, newshape=[9, 5, 8]) /* ty=Tensor[(9, 5, 8), uint8] */;
  %978 = reshape(%976, newshape=[9, 5, 8]) /* ty=Tensor[(9, 5, 8), uint8] */;
  %979 = @func_2875(%977, %978) /* ty=(Tensor[(9, 5, 8), uint8],) */;
  %980 = cast(%var_7178, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %981 = reshape(%980, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %982 = %974.0;
  %983 = %979.0;
  %984 = @func_2152(%981) /* ty=Tensor[(8, 14, 12), float32] */;
  (%982, %983, meta[relay.Constant][54] /* ty=Tensor[(360), uint8] */, %984, %var_7178)
}

def @func_10988() -> Tensor[(15, 16, 2), float32] {
  %985 = fn () -> Tensor[(15, 16, 2), float32] {
    @func_10903() /* ty=Tensor[(15, 16, 2), float32] */
  };
  %985() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_16774() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_16772() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_18641() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(3, 10, 10), float64], Tensor[(30), uint64], Tensor[(300), uint64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_18639() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(3, 10, 10), float64], Tensor[(30), uint64], Tensor[(300), uint64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_16845() -> (Tensor[(15, 16, 2), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) {
  @func_16843() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_7835(%var_7833: uint16, %var_7834: Tensor[(15), uint16]) -> (Tensor[(15, 16, 2), float32], Tensor[(1, 1, 15), bool], uint16, Tensor[(15), uint16], Tensor[(1176), bool]) {
  %1001 = fn (%var_7818: uint16, %var_7819: Tensor[(15), uint16]) -> (Tensor[(15, 16, 2), float32], Tensor[(1, 1, 15), bool], uint16, Tensor[(15), uint16], Tensor[(1176), bool]) {
    %986 = @func_4457() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %987 = cast(%var_7818, dtype="uint16") /* ty=uint16 */;
    %988 = cast(%var_7819, dtype="uint16") /* ty=Tensor[(15), uint16] */;
    %989 = cast(meta[relay.Constant][55] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %990 = reshape(%987, newshape=[]) /* ty=uint16 */;
    %991 = reshape(%988, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
    %992 = reshape(%989, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
    %993 = @func_813(%990, %991, %992) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
    %994 = cast(meta[relay.Constant][56] /* ty=Tensor[(1176), float64] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
    %995 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(1176), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %996 = cast(meta[relay.Constant][55] /* ty=Tensor[(1176), float64] */, dtype="bool") /* ty=Tensor[(1176), bool] */;
    %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?), bool] */;
    %998 = %986.0;
    %999 = %993.0;
    %1000 = not_equal(%996, %997) /* ty=Tensor[(1176), bool] */;
    (%998, %999, %var_7818, %var_7819, %1000)
  };
  %1001(%var_7833, %var_7834) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1, 1, 15), bool], uint16, Tensor[(15), uint16], Tensor[(1176), bool]) */
}

def @func_10945() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1002 = @func_9100() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1003 = @func_6473() /* ty=Tensor[(15, 16, 2), float32] */;
  %1004 = %1002.0;
  (%1003, %1004)
}

def @func_6473() -> Tensor[(15, 16, 2), float32] {
  %1005 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1005.0
}

def @func_7381(%var_7366: Tensor[(21, 5), float64], %var_7367: Tensor[(360), uint8]) -> (Tensor[(15, 16, 2), float64], Tensor[(9, 5, 8), uint8], Tensor[(594), int32], Tensor[(21, 5), float64], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) {
  %1006 = cast(meta[relay.Constant][57] /* ty=Tensor[(594), int32] */, dtype="int32") /* ty=Tensor[(594), int32] */;
  %1007 = cast(meta[relay.Constant][57] /* ty=Tensor[(594), int32] */, dtype="int32") /* ty=Tensor[(594), int32] */;
  %1008 = cast(%var_7366, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %1009 = cast(%var_7367, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %1010 = reshape(%1006, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), int32] */;
  %1011 = reshape(%1007, newshape=[9, 6, 11]) /* ty=Tensor[(9, 6, 11), int32] */;
  %1012 = reshape(%1008, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
  %1013 = reshape(%1009, newshape=[12, 30]) /* ty=Tensor[(12, 30), uint8] */;
  %1014 = @func_7044(%1010, %1011, %1012, %1013) /* ty=(Tensor[(9, 6, 11), int32], Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(21, 5), float64], Tensor[(144), float32], Tensor[(9, 5, 8), uint8], Tensor[(12, 30), uint8]) */;
  %1015 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  %1016 = %1014.5;
  %1017 = @func_3891() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1015, %1016, meta[relay.Constant][57] /* ty=Tensor[(594), int32] */, %var_7366, %var_7367, %1017)
}

def @func_14174() -> Tensor[(15, 16, 2), float32] {
  @func_14172() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_15993() -> (Tensor[(15, 16, 2), float32],) {
  %1020 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %1018 = @func_9031() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1019 = %1018.0;
    (%1019,)
  };
  %1020() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_12852() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], uint16, Tensor[(15), uint16]) {
  %1028 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], uint16, Tensor[(15), uint16]) {
    %1021 = cast(meta[relay.Constant][58] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1022 = cast(meta[relay.Constant][59] /* ty=Tensor[(15), uint16] */, dtype="uint16") /* ty=Tensor[(15), uint16] */;
    %1023 = reshape(%1021, newshape=[]) /* ty=uint16 */;
    %1024 = reshape(%1022, newshape=[15]) /* ty=Tensor[(15), uint16] */;
    %1025 = @func_11115(%1023, %1024) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1176), bool], uint16, Tensor[(15), uint16], Tensor[(15, 16, 2), float64], Tensor[(756), uint32], Tensor[(21, 5), float64], uint16, Tensor[(320), float32]) */;
    %1026 = @func_9944() /* ty=Tensor[(15, 16, 2), float32] */;
    %1027 = %1025.4;
    (%1026, %1027, meta[relay.Constant][58] /* ty=uint16 */, meta[relay.Constant][59] /* ty=Tensor[(15), uint16] */)
  };
  %1028() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], uint16, Tensor[(15), uint16]) */
}

def @func_4159() -> Tensor[(7, 8, 3), float64] {
  %1029 = cast(meta[relay.Constant][60] /* ty=Tensor[(7, 8, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 3), float64] */;
  rsqrt(%1029) /* ty=Tensor[(7, 8, 3), float64] */
}

def @func_4031() -> Tensor[(15, 16, 2), float64] {
  @func_4029() /* ty=Tensor[(15, 16, 2), float64] */
}

def @func_4213(%var_4210: bool, %var_4211: Tensor[(15, 3, 12), bool], %var_4212: Tensor[(2, 72), float32]) -> (Tensor[(15, 3, 12), float32], Tensor[(1176), float64], Tensor[(756, 1), uint32], Tensor[(21, 5), float64], Tensor[(2, 72), float32]) {
  @func_4208(%var_4210, %var_4211, %var_4212) /* ty=(Tensor[(15, 3, 12), float32], Tensor[(1176), float64], Tensor[(756, 1), uint32], Tensor[(21, 5), float64], Tensor[(2, 72), float32]) */
}

def @func_10905() -> Tensor[(15, 16, 2), float32] {
  @func_10903() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_13124() -> (Tensor[(15, 16, 2), float32],) {
  @func_13122() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_8027() -> (Tensor[(15, 16, 2), float32],) {
  @func_8025() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_166(%var_165: Tensor[(12, 7, 14), float64]) -> Tensor[(12, 7, 14), float64] {
  %1031 = fn (%var_113: Tensor[(12, 7, 14), float64]) -> Tensor[(12, 7, 14), float64] {
    %1030 = cast(%var_113, dtype="float64") /* ty=Tensor[(12, 7, 14), float64] */;
    sinh(%1030) /* ty=Tensor[(12, 7, 14), float64] */
  };
  %1031(%var_165) /* ty=Tensor[(12, 7, 14), float64] */
}

def @func_8902() -> (Tensor[(15, 16, 2), float32],) {
  %1033 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %1032 = @func_3089() /* ty=Tensor[(15, 16, 2), float32] */;
    (%1032,)
  };
  %1033() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_4029() -> Tensor[(15, 16, 2), float64] {
  %1034 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  %1035 = cast(%1034, dtype="float64") /* ty=Tensor[(15, 16, 2), float64] */;
  asin(%1035) /* ty=Tensor[(15, 16, 2), float64] */
}

def @func_3423(%var_3422: Tensor[(63), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), float64]) {
  %1045 = fn (%var_3408: Tensor[(63), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), float64]) {
    %1036 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1037 = cast(%var_3408, dtype="uint32") /* ty=Tensor[(63), uint32] */;
    %1038 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 252), uint32] */, dtype="uint32") /* ty=Tensor[(3, 252), uint32] */;
    %1039 = reshape(%1037, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
    %1040 = reshape(%1038, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), uint32] */;
    %1041 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 252), uint32] */, dtype="float64") /* ty=Tensor[(3, 252), float64] */;
    %1042 = %1036.0;
    %1043 = @func_2119(%1039, %1040) /* ty=Tensor[(7, 12, 9), uint32] */;
    %1044 = sin(%1041) /* ty=Tensor[(3, 252), float64] */;
    (%1042, %1043, %var_3408, %1044)
  };
  %1045(%var_3422) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), float64]) */
}

def @func_7792(%var_7762: Tensor[(105), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(756), uint32], Tensor[(15, 16, 2), float32]) {
  %1046 = @func_6396() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %1047 = @func_5251() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(360), uint8]) */;
  %1048 = cast(%var_7762, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1049 = reshape(%1048, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %1050 = @func_3797() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %1051 = %1046.2;
  %1052 = %1047.1;
  %1053 = @func_1694(%1049) /* ty=Tensor[(5, 7, 3), float64] */;
  %1054 = %1050.1;
  %1055 = @func_6205() /* ty=Tensor[(756), uint32] */;
  %1056 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1051, %1052, %1053, %var_7762, %1054, %1055, %1056)
}

def @func_9066(%var_9064: Tensor[(2, 4, 1), float32]) -> Tensor[(2, 4, 1), float32] {
  @func_9063(%var_9064) /* ty=Tensor[(2, 4, 1), float32] */
}

def @func_15379(%var_15377: uint16, %var_15378: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], uint16, Tensor[(15), uint16], Tensor[(1176), float64]) {
  @func_15375(%var_15377, %var_15378) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], uint16, Tensor[(15), uint16], Tensor[(1176), float64]) */
}

def @func_16340() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(16), float32]) {
  %1061 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(16), float32]) {
    %1057 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1058 = %1057.0;
    %1059 = @func_3628() /* ty=Tensor[(15, 16, 2), float32] */;
    %1060 = @func_13675() /* ty=Tensor[(16), float32] */;
    (%1058, %1059, %1060)
  };
  %1061() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(16), float32]) */
}

def @func_9183(%var_9179: uint16) -> (Tensor[(15, 16, 2), float32], Tensor[(1176), bool], uint16, Tensor[(5, 3), uint16]) {
  %1062 = @func_8919() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) */;
  %1063 = cast(%var_9179, dtype="uint16") /* ty=uint16 */;
  %1064 = cast(meta[relay.Constant][62] /* ty=Tensor[(5, 3), uint16] */, dtype="uint16") /* ty=Tensor[(5, 3), uint16] */;
  %1065 = reshape(%1063, newshape=[]) /* ty=uint16 */;
  %1066 = reshape(%1064, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %1067 = @func_7832(%1065, %1066) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1, 1, 15), bool], uint16, Tensor[(15), uint16], Tensor[(1176), bool]) */;
  %1068 = %1062.0;
  %1069 = %1067.4;
  (%1068, %1069, %var_9179, meta[relay.Constant][62] /* ty=Tensor[(5, 3), uint16] */)
}

def @func_9004() -> Tensor[(3, 3, 5), float32] {
  %1071 = fn () -> Tensor[(3, 3, 5), float32] {
    %1070 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(3, 3, 5), float32] */;
    cos(%1070) /* ty=Tensor[(3, 3, 5), float32] */
  };
  %1071() /* ty=Tensor[(3, 3, 5), float32] */
}

def @func_3553() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) {
  @func_3551() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */
}

def @func_11285() -> (Tensor[(15, 16, 2), float32], Tensor[(1, 63), uint32]) {
  %1075 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(1, 63), uint32]) {
    %1072 = @func_4344() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(7, 12, 9), uint32], Tensor[(1, 63), uint32], Tensor[(756), uint32]) */;
    %1073 = @func_10996() /* ty=Tensor[(15, 16, 2), float32] */;
    %1074 = %1072.2;
    (%1073, %1074)
  };
  %1075() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1, 63), uint32]) */
}

def @func_3222(%var_3177: Tensor[(12, 16, 15), uint16], %var_3190: Tensor[(756), uint32], %var_3197: Tensor[(105), float64], %var_3206: Tensor[(1176), float64], %var_3220: Tensor[(1, 1872), float32]) -> (Tensor[(12, 16, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(756), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(12, 7, 14), float64], uint16, Tensor[(5, 3), uint16], Tensor[(1176), float64], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1, 1872), float32]) {
  %1076 = cast(meta[relay.Constant][64] /* ty=Tensor[(12, 16, 15), uint16] */, dtype="uint16") /* ty=Tensor[(12, 16, 15), uint16] */;
  %1077 = shape_of(%var_3177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1078 = cast(%var_3177, dtype="uint16") /* ty=Tensor[(12, 16, 15), uint16] */;
  %1079 = dyn.reshape(%1076, %1077, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1080 = cast(meta[relay.Constant][65] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1081 = cast(%var_3190, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %1082 = reshape(%1080, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
  %1083 = reshape(%1081, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), uint32] */;
  %1084 = cast(%var_3197, dtype="float64") /* ty=Tensor[(105), float64] */;
  %1085 = reshape(%1084, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %1086 = cast(meta[relay.Constant][66] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1087 = cast(meta[relay.Constant][67] /* ty=Tensor[(5, 3), uint16] */, dtype="uint16") /* ty=Tensor[(5, 3), uint16] */;
  %1088 = cast(%var_3206, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1089 = reshape(%1086, newshape=[]) /* ty=uint16 */;
  %1090 = reshape(%1087, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
  %1091 = reshape(%1088, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
  %1092 = @func_813(%1089, %1090, %1091) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
  %1093 = cast(meta[relay.Constant][68] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1094 = cast(%var_3220, dtype="float32") /* ty=Tensor[(1, 1872), float32] */;
  %1095 = cast(%var_3206, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1096 = reshape(%1093, newshape=[1, 9, 16]) /* ty=Tensor[(1, 9, 16), float32] */;
  %1097 = reshape(%1094, newshape=[13, 9, 16]) /* ty=Tensor[(13, 9, 16), float32] */;
  %1098 = reshape(%1095, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1099 = @func_1537(%1096, %1097, %1098) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) */;
  %1100 = right_shift(%1078, %1079) /* ty=Tensor[(12, 16, 15), uint16] */;
  %1101 = @func_2119(%1082, %1083) /* ty=Tensor[(7, 12, 9), uint32] */;
  %1102 = @func_1694(%1085) /* ty=Tensor[(5, 7, 3), float64] */;
  %1103 = %1092.3;
  %1104 = %1099.2;
  (%1100, %1101, meta[relay.Constant][65] /* ty=Tensor[(63), uint32] */, %var_3190, %1102, %var_3197, %1103, meta[relay.Constant][66] /* ty=uint16 */, meta[relay.Constant][67] /* ty=Tensor[(5, 3), uint16] */, %var_3206, %1104, meta[relay.Constant][68] /* ty=Tensor[(144), float32] */, %var_3220)
}

def @func_14376(%var_14375: Tensor[(12, 10, 8), float32]) -> Tensor[(12, 10, 8), uint64] {
  %1111 = fn (%var_14369: Tensor[(12, 10, 8), float32]) -> Tensor[(12, 10, 8), uint64] {
    %1105 = @func_14073() /* ty=(Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float32]) */;
    %1106 = %1105.0;
    %1107 = cast(%var_14369, dtype="uint64") /* ty=Tensor[(12, 10, 8), uint64] */;
    %1108 = shape_of(%1106, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1109 = cast(%1106, dtype="uint64") /* ty=Tensor[(12, 10, 8), uint64] */;
    %1110 = dyn.reshape(%1107, %1108, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_or(%1109, %1110) /* ty=Tensor[(12, 10, 8), uint64] */
  };
  %1111(%var_14375) /* ty=Tensor[(12, 10, 8), uint64] */
}

def @func_14523() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
  %1121 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) {
    %1112 = @func_12589() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1113 = @func_11617() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1114 = @func_11190() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1115 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1116 = %1112.0;
    %1117 = %1113.1;
    %1118 = %1114.0;
    %1119 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
    %1120 = %1115.0;
    (%1116, %1117, %1118, %1119, %1120)
  };
  %1121() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */
}

def @func_8595() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) {
  %1126 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) {
    %1122 = @func_6962() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1123 = @func_5899() /* ty=(Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32]) */;
    %1124 = %1122.0;
    %1125 = %1123.0;
    (%1124, %1125)
  };
  %1126() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) */
}

def @func_4734() -> Tensor[(15, 16, 2), float32] {
  @func_4732() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_14130() -> (Tensor[(15, 16, 2), float32],) {
  %1127 = @func_10987() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1127,)
}

def @func_15257() -> Tensor[(15, 16, 2), float32] {
  @func_10709() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_17409() -> (Tensor[(15, 16, 2), float64], Tensor[(63), bool], Tensor[(15, 16, 2), float32]) {
  %1128 = @func_9072() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %1129 = @func_15110() /* ty=(Tensor[(63), bool],) */;
  %1130 = @func_13507() /* ty=(Tensor[(1344), float32], Tensor[(15, 16, 2), float32]) */;
  %1131 = %1128.0;
  %1132 = %1129.0;
  %1133 = %1130.1;
  (%1131, %1132, %1133)
}

def @func_16548(%var_16546: Tensor[(180, 2), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(63), bool], Tensor[(360), uint8], Tensor[(180, 2), uint8]) {
  @func_16545(%var_16546) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(63), bool], Tensor[(360), uint8], Tensor[(180, 2), uint8]) */
}

def @func_3065() -> (Tensor[(15, 16, 2), float32],) {
  @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_11835() -> (Tensor[(15, 16, 2), float32],) {
  %1134 = @func_8119() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1135 = %1134.0;
  (%1135,)
}

def @func_10366(%var_10364: Tensor[(1176, 1), float64], %var_10365: Tensor[(105), float64]) -> (Tensor[(1344), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(208), uint32], Tensor[(105), float64], Tensor[(320), float32], Tensor[(15), uint16], Tensor[(1176, 1), float64]) {
  @func_10362(%var_10364, %var_10365) /* ty=(Tensor[(1344), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(208), uint32], Tensor[(105), float64], Tensor[(320), float32], Tensor[(15), uint16], Tensor[(1176, 1), float64]) */
}

def @func_15058() -> Tensor[(15, 16, 2), float32] {
  @func_3628() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_7675() -> (Tensor[(15, 16, 2), float64],) {
  @func_7673() /* ty=(Tensor[(15, 16, 2), float64],) */
}

def @func_11766() -> Tensor[(15, 16, 2), float32] {
  @func_11764() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_3551() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) {
  %1136 = cast(meta[relay.Constant][69] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1137 = reshape(%1136, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
  %1138 = @func_3478() /* ty=Tensor[(15, 16, 2), float32] */;
  %1139 = @func_3478() /* ty=Tensor[(15, 16, 2), float32] */;
  %1140 = @func_164(%1137) /* ty=Tensor[(12, 7, 14), float64] */;
  (%1138, %1139, %1140, meta[relay.Constant][69] /* ty=Tensor[(1176), float64] */)
}

def @func_15303() -> Tensor[(12, 10, 8), float32] {
  %1142 = fn () -> Tensor[(12, 10, 8), float32] {
    %1141 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
    %1141.0
  };
  %1142() /* ty=Tensor[(12, 10, 8), float32] */
}

def @func_15420() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_15418() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_16093(%var_16091: Tensor[(4, 14, 2), float32], %var_16092: Tensor[(4, 14, 2), float32]) -> (Tensor[(4, 14, 2), float32],) {
  %1148 = fn (%var_16084: Tensor[(4, 14, 2), float32], %var_16085: Tensor[(4, 14, 2), float32]) -> (Tensor[(4, 14, 2), float32],) {
    %1143 = cast(%var_16085, dtype="float32") /* ty=Tensor[(4, 14, 2), float32] */;
    %1144 = shape_of(%var_16084, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1145 = cast(%var_16084, dtype="float32") /* ty=Tensor[(4, 14, 2), float32] */;
    %1146 = dyn.reshape(%1143, %1144, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1147 = floor_mod(%1145, %1146) /* ty=Tensor[(4, 14, 2), float32] */;
    (%1147,)
  };
  %1148(%var_16091, %var_16092) /* ty=(Tensor[(4, 14, 2), float32],) */
}

def @func_14132() -> (Tensor[(15, 16, 2), float32],) {
  @func_14130() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_18844() -> (Tensor[(15, 16, 2), float32],) {
  @func_18842() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_7472() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) {
  %1153 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) {
    %1149 = @func_5425() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1150 = @func_6473() /* ty=Tensor[(15, 16, 2), float32] */;
    %1151 = @func_3089() /* ty=Tensor[(15, 16, 2), float32] */;
    %1152 = %1149.1;
    (%1150, %1151, %1152)
  };
  %1153() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */
}

def @func_11115(%var_11080: uint16, %var_11081: Tensor[(15), uint16]) -> (Tensor[(15, 16, 2), float32], Tensor[(1176), bool], uint16, Tensor[(15), uint16], Tensor[(15, 16, 2), float64], Tensor[(756), uint32], Tensor[(21, 5), float64], uint16, Tensor[(320), float32]) {
  %1154 = cast(%var_11080, dtype="uint16") /* ty=uint16 */;
  %1155 = cast(%var_11081, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %1156 = reshape(%1154, newshape=[]) /* ty=uint16 */;
  %1157 = reshape(%1155, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %1158 = @func_7832(%1156, %1157) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1, 1, 15), bool], uint16, Tensor[(15), uint16], Tensor[(1176), bool]) */;
  %1159 = @func_7471() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */;
  %1160 = cast(meta[relay.Constant][70] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %1161 = reshape(%1160, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %1162 = @func_7792(%1161) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(756), uint32], Tensor[(15, 16, 2), float32]) */;
  %1163 = cast(meta[relay.Constant][71] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1164 = cast(%var_11081, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %1165 = reshape(%1163, newshape=[10, 8, 4]) /* ty=Tensor[(10, 8, 4), float32] */;
  %1166 = reshape(%1164, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %1167 = @func_1499(%1165, %1166) /* ty=(Tensor[(588, 2), float64], uint16, Tensor[(15), uint16], Tensor[(1176), float64], Tensor[(588, 2), float64], Tensor[(10, 8, 4), float64]) */;
  %1168 = @func_6104() /* ty=Tensor[(15, 16, 2), float32] */;
  %1169 = %1158.4;
  %1170 = %1159.2;
  %1171 = %1162.5;
  %1172 = %1167.1;
  (%1168, %1169, %var_11080, %var_11081, %1170, %1171, meta[relay.Constant][70] /* ty=Tensor[(21, 5), float64] */, %1172, meta[relay.Constant][71] /* ty=Tensor[(320), float32] */)
}

def @func_3562() -> (Tensor[(15, 16, 2), float32],) {
  @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_11437() -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) {
  @func_11435() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */
}

def @func_13295() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) {
  @func_13293() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */
}

def @func_5322() -> Tensor[(15, 16, 2), float32] {
  @func_5320() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_6001() -> (Tensor[(1344), float32],) {
  %1173 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
  %1174 = %1173.3;
  (%1174,)
}

def @func_6003() -> (Tensor[(1344), float32],) {
  @func_6001() /* ty=(Tensor[(1344), float32],) */
}

def @func_19303() -> (Tensor[(15, 16, 2), float32],) {
  %1175 = @func_5653() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1176 = %1175.0;
  (%1176,)
}

def @func_17314(%var_17300: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float32]) {
  %1177 = cast(%var_17300, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1178 = reshape(%1177, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1179 = @func_4661(%1178) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %1180 = @func_8825() /* ty=Tensor[(15, 16, 2), float32] */;
  %1181 = %1179.1;
  %1182 = @func_15199() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1180, %1181, %var_17300, %1182)
}

def @func_10709() -> Tensor[(15, 16, 2), float32] {
  @func_10120() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_10190() -> (Tensor[(15, ?, 9), uint16], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(1344), float32]) {
  %1196 = fn () -> (Tensor[(15, ?, 9), uint16], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(1344), float32]) {
    %1183 = cast(meta[relay.Constant][72] /* ty=Tensor[(15, 1, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 1, 9), float64] */;
    %1184 = rsqrt(%1183) /* ty=Tensor[(15, 1, 9), float64] */;
    %1185 = cast(%1184, dtype="uint16") /* ty=Tensor[(15, 1, 9), uint16] */;
    %1186 = shape_of(meta[relay.Constant][72] /* ty=Tensor[(15, 1, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1187 = cast(meta[relay.Constant][72] /* ty=Tensor[(15, 1, 9), float64] */, dtype="uint16") /* ty=Tensor[(15, 1, 9), uint16] */;
    %1188 = dyn.reshape(%1185, %1186, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1189 = @func_7673() /* ty=(Tensor[(15, 16, 2), float64],) */;
    %1190 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1191 = @func_6001() /* ty=(Tensor[(1344), float32],) */;
    %1192 = bitwise_and(%1187, %1188) /* ty=Tensor[(15, ?, 9), uint16] */;
    %1193 = %1189.0;
    %1194 = %1190.0;
    %1195 = %1191.0;
    (%1192, %1193, %1194, %1195)
  };
  %1196() /* ty=(Tensor[(15, ?, 9), uint16], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(1344), float32]) */
}

def @func_13786(%var_13783: Tensor[(36, 10), uint8], %var_13784: Tensor[(1344), float32], %var_13785: Tensor[(320), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(36, 10), uint8], Tensor[(5, 7, 3), float64], Tensor[(7, 15), float64], Tensor[(1344), float32], Tensor[(320), float32], Tensor[(3, 3, 5), float32], Tensor[(63, 15), bool]) {
  @func_13781(%var_13783, %var_13784, %var_13785) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(36, 10), uint8], Tensor[(5, 7, 3), float64], Tensor[(7, 15), float64], Tensor[(1344), float32], Tensor[(320), float32], Tensor[(3, 3, 5), float32], Tensor[(63, 15), bool]) */
}

def @func_15517(%var_15476: Tensor[(14, 10, 5), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(14, 10, 5), bool], Tensor[(756), uint32], Tensor[(14, 10, 5), int16], Tensor[(14, 10, 5), float64]) {
  %1197 = @func_6396() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %1198 = cast(meta[relay.Constant][73] /* ty=Tensor[(14, 10, 5), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 5), float32] */;
  %1199 = shape_of(%var_15476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1200 = cast(%var_15476, dtype="float32") /* ty=Tensor[(14, 10, 5), float32] */;
  %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1202 = floor_mod(%1200, %1201) /* ty=Tensor[(14, 10, 5), float32] */;
  %1203 = cast(%var_15476, dtype="bool") /* ty=Tensor[(14, 10, 5), bool] */;
  %1204 = shape_of(%1202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1205 = cast(%1202, dtype="bool") /* ty=Tensor[(14, 10, 5), bool] */;
  %1206 = dyn.reshape(%1203, %1204, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1207 = cast(meta[relay.Constant][73] /* ty=Tensor[(14, 10, 5), float32] */, dtype="int16") /* ty=Tensor[(14, 10, 5), int16] */;
  %1208 = shape_of(%1202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1209 = cast(%1202, dtype="int16") /* ty=Tensor[(14, 10, 5), int16] */;
  %1210 = dyn.reshape(%1207, %1208, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1211 = cast(meta[relay.Constant][73] /* ty=Tensor[(14, 10, 5), float32] */, dtype="float64") /* ty=Tensor[(14, 10, 5), float64] */;
  %1212 = %1197.2;
  %1213 = @func_8358() /* ty=Tensor[(15, 16, 2), float32] */;
  %1214 = logical_or(%1205, %1206) /* ty=Tensor[(14, 10, 5), bool] */;
  %1215 = @func_12540() /* ty=Tensor[(756), uint32] */;
  %1216 = bitwise_and(%1209, %1210) /* ty=Tensor[(14, 10, 5), int16] */;
  %1217 = cos(%1211) /* ty=Tensor[(14, 10, 5), float64] */;
  (%1212, %1213, %1214, %1215, %1216, %1217)
}

def @func_13358() -> Tensor[(15, 16, 2), float32] {
  @func_13356() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_18842() -> (Tensor[(15, 16, 2), float32],) {
  %1218 = @func_9907() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1219 = %1218.0;
  (%1219,)
}

def @func_15520(%var_15518: Tensor[(14, 10, 5), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(14, 10, 5), bool], Tensor[(756), uint32], Tensor[(14, 10, 5), int16], Tensor[(14, 10, 5), float64]) {
  @func_15517(%var_15518) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(14, 10, 5), bool], Tensor[(756), uint32], Tensor[(14, 10, 5), int16], Tensor[(14, 10, 5), float64]) */
}

def @func_18153() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(1344), uint64]) {
  %1230 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(1344), uint64]) {
    %1220 = @func_9031() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1221 = @func_6001() /* ty=(Tensor[(1344), float32],) */;
    %1222 = %1221.0;
    %1223 = cast(meta[relay.Constant][74] /* ty=Tensor[(1344), float32] */, dtype="uint64") /* ty=Tensor[(1344), uint64] */;
    %1224 = shape_of(%1222, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1225 = cast(%1222, dtype="uint64") /* ty=Tensor[(1344), uint64] */;
    %1226 = dyn.reshape(%1223, %1224, newshape=[]) /* ty=Tensor[(?), uint64] */;
    %1227 = %1220.0;
    %1228 = @func_17441() /* ty=Tensor[(15, 16, 2), bool] */;
    %1229 = left_shift(%1225, %1226) /* ty=Tensor[(1344), uint64] */;
    (%1227, %1228, %1229)
  };
  %1230() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(1344), uint64]) */
}

def @func_5685() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */
}

def @func_12590() -> (Tensor[(15, 16, 2), float32],) {
  %1233 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %1231 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1232 = %1231.1;
    (%1232,)
  };
  %1233() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_2879(%var_2877: Tensor[(9, 5, 8), uint8], %var_2878: Tensor[(9, 5, 8), uint8]) -> (Tensor[(9, 5, 8), uint8],) {
  @func_2875(%var_2877, %var_2878) /* ty=(Tensor[(9, 5, 8), uint8],) */
}

def @func_14047() -> (Tensor[(15, 16, 2), float32], Tensor[(1176), float64]) {
  @func_14045() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1176), float64]) */
}

def @func_19637() -> (Tensor[(15, 16, 2), float32],) {
  %1235 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %1234 = @func_8358() /* ty=Tensor[(15, 16, 2), float32] */;
    (%1234,)
  };
  %1235() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_5087() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_5085() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_16459() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_16457() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_10675() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_10673() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_15060() -> Tensor[(15, 16, 2), float32] {
  @func_15058() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_18014(%var_18012: int8) -> Tensor[(16, 12, 8), bool] {
  @func_18011(%var_18012) /* ty=Tensor[(16, 12, 8), bool] */
}

def @func_12127(%var_12122: Tensor[(2, 1, 3), float32]) -> (Tensor[(2, 1, 3), float32],) {
  %1236 = cast(2.37668f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1237 = cast(%var_12122, dtype="float32") /* ty=Tensor[(2, 1, 3), float32] */;
  %1238 = power(%1236, %1237) /* ty=Tensor[(2, 1, 3), float32] */;
  (%1238,)
}

def @func_3007(%var_3002: float64, %var_3003: Tensor[(16, 1, 1), float64], %var_3004: Tensor[(24, 6), float32], %var_3005: Tensor[(16, 1176), float64], %var_3006: Tensor[(63), uint32]) -> (Tensor[(16, 1, 1), float64], Tensor[(13, 9, 16), float64], Tensor[(24, 6), float32], Tensor[(1872), float32], Tensor[(16, 1176), float64], Tensor[(12, 7, 14), float64], Tensor[(1, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), uint32]) {
  %1266 = fn (%var_2964: float64, %var_2965: Tensor[(16, 1, 1), float64], %var_2972: Tensor[(24, 6), float32], %var_2978: Tensor[(16, 1176), float64], %var_2995: Tensor[(63), uint32]) -> (Tensor[(16, 1, 1), float64], Tensor[(13, 9, 16), float64], Tensor[(24, 6), float32], Tensor[(1872), float32], Tensor[(16, 1176), float64], Tensor[(12, 7, 14), float64], Tensor[(1, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), uint32]) {
    %1239 = cast(%var_2964, dtype="float64") /* ty=float64 */;
    %1240 = cast(%var_2965, dtype="float64") /* ty=Tensor[(16, 1, 1), float64] */;
    %1241 = cast(%var_2972, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
    %1242 = cast(meta[relay.Constant][75] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
    %1243 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 1176), float64] */, dtype="float64") /* ty=Tensor[(1, 1176), float64] */;
    %1244 = reshape(%1241, newshape=[1, 9, 16]) /* ty=Tensor[(1, 9, 16), float32] */;
    %1245 = reshape(%1242, newshape=[13, 9, 16]) /* ty=Tensor[(13, 9, 16), float32] */;
    %1246 = reshape(%1243, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %1247 = @func_1537(%1244, %1245, %1246) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) */;
    %1248 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 1176), float64] */, dtype="float64") /* ty=Tensor[(1, 1176), float64] */;
    %1249 = cast(%var_2978, dtype="float64") /* ty=Tensor[(16, 1176), float64] */;
    %1250 = cast(%var_2964, dtype="uint16") /* ty=uint16 */;
    %1251 = cast(meta[relay.Constant][77] /* ty=Tensor[(1, 15), uint16] */, dtype="uint16") /* ty=Tensor[(1, 15), uint16] */;
    %1252 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 1176), float64] */, dtype="float64") /* ty=Tensor[(1, 1176), float64] */;
    %1253 = reshape(%1250, newshape=[]) /* ty=uint16 */;
    %1254 = reshape(%1251, newshape=[1, 1, 15]) /* ty=Tensor[(1, 1, 15), uint16] */;
    %1255 = reshape(%1252, newshape=[588, 2]) /* ty=Tensor[(588, 2), float64] */;
    %1256 = @func_813(%1253, %1254, %1255) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */;
    %1257 = cast(%var_2995, dtype="uint32") /* ty=Tensor[(63), uint32] */;
    %1258 = cast(meta[relay.Constant][78] /* ty=Tensor[(3, 252), uint32] */, dtype="uint32") /* ty=Tensor[(3, 252), uint32] */;
    %1259 = reshape(%1257, newshape=[7, 1, 9]) /* ty=Tensor[(7, 1, 9), uint32] */;
    %1260 = reshape(%1258, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), uint32] */;
    %1261 = power(%1239, %1240) /* ty=Tensor[(16, 1, 1), float64] */;
    %1262 = %1247.2;
    %1263 = power(%1248, %1249) /* ty=Tensor[(16, 1176), float64] */;
    %1264 = %1256.3;
    %1265 = @func_2119(%1259, %1260) /* ty=Tensor[(7, 12, 9), uint32] */;
    (%1261, %1262, %var_2972, meta[relay.Constant][75] /* ty=Tensor[(1872), float32] */, %1263, %1264, meta[relay.Constant][77] /* ty=Tensor[(1, 15), uint16] */, %1265, %var_2995, meta[relay.Constant][78] /* ty=Tensor[(3, 252), uint32] */)
  };
  %1266(%var_3002, %var_3003, %var_3004, %var_3005, %var_3006) /* ty=(Tensor[(16, 1, 1), float64], Tensor[(13, 9, 16), float64], Tensor[(24, 6), float32], Tensor[(1872), float32], Tensor[(16, 1176), float64], Tensor[(12, 7, 14), float64], Tensor[(1, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), uint32]) */
}

def @func_12933(%var_12932: Tensor[(2, 180), uint8]) -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(2, 180), uint8], Tensor[(7, 8, 3), float32]) {
  %1276 = fn (%var_12883: Tensor[(2, 180), uint8]) -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(2, 180), uint8], Tensor[(7, 8, 3), float32]) {
    %1267 = cast(%var_12883, dtype="uint8") /* ty=Tensor[(2, 180), uint8] */;
    %1268 = reshape(%1267, newshape=[2, 180]) /* ty=Tensor[(2, 180), uint8] */;
    %1269 = @func_11679(%1268) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(2, 180), uint8], Tensor[(15, 16, 2), bool], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
    %1270 = @func_12477() /* ty=(Tensor[(7, 8, 3), float64],) */;
    %1271 = %1270.0;
    %1272 = cast(%1271, dtype="float32") /* ty=Tensor[(7, 8, 3), float32] */;
    %1273 = @func_9508() /* ty=Tensor[(15, 16, 2), float64] */;
    %1274 = %1269.0;
    %1275 = tan(%1272) /* ty=Tensor[(7, 8, 3), float32] */;
    (%1273, %1274, %var_12883, %1275)
  };
  %1276(%var_12932) /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32], Tensor[(2, 180), uint8], Tensor[(7, 8, 3), float32]) */
}

def @func_17763(%var_17761: Tensor[(182), int8]) -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), bool], Tensor[(13, ?, 14), bool], Tensor[(182), int8], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) {
  @func_17760(%var_17761) /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), bool], Tensor[(13, ?, 14), bool], Tensor[(182), int8], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) */
}

def @func_7673() -> (Tensor[(15, 16, 2), float64],) {
  %1277 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
  (%1277,)
}

def @func_4377() -> (Tensor[(15, 16, 2), float32],) {
  %1278 = @func_3089() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1278,)
}

def @func_19403() -> Tensor[(15, 16, 2), float32] {
  @func_19401() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_10865() -> Tensor[(15, 16, 2), float32] {
  @func_10863() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_10764() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1282 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %1279 = @func_6962() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1280 = @func_7947() /* ty=Tensor[(15, 16, 2), float32] */;
    %1281 = %1279.1;
    (%1280, %1281)
  };
  %1282() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_15692() -> (Tensor[(15, 16, 2), float32],) {
  @func_15690() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_19214() -> (Tensor[(15, 16, 2), float32],) {
  %1283 = @func_15690() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1284 = %1283.0;
  (%1284,)
}

def @func_14442() -> Tensor[(15, 16, 2), float32] {
  %1286 = fn () -> Tensor[(15, 16, 2), float32] {
    %1285 = @func_9031() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1285.0
  };
  %1286() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_4104(%var_4102: Tensor[(105), float64], %var_4103: Tensor[(144), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(3, 252), uint32], Tensor[(105), float64], Tensor[(144), float32]) {
  %1297 = fn (%var_4085: Tensor[(105), float64], %var_4086: Tensor[(144), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(3, 252), uint32], Tensor[(105), float64], Tensor[(144), float32]) {
    %1287 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1288 = cast(meta[relay.Constant][79] /* ty=Tensor[(3, 252), uint32] */, dtype="uint32") /* ty=Tensor[(3, 252), uint32] */;
    %1289 = cast(%var_4085, dtype="float64") /* ty=Tensor[(105), float64] */;
    %1290 = cast(%var_4086, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1291 = reshape(%1288, newshape=[756]) /* ty=Tensor[(756), uint32] */;
    %1292 = reshape(%1289, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
    %1293 = reshape(%1290, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %1294 = @func_3710(%1291, %1292, %1293) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(2880), uint16], Tensor[(756), uint32], Tensor[(7, 15), float64], Tensor[(1176), float64], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(144), float32]) */;
    %1295 = %1287.0;
    %1296 = %1294.6;
    (%1295, %1296, meta[relay.Constant][79] /* ty=Tensor[(3, 252), uint32] */, %var_4085, %var_4086)
  };
  %1297(%var_4102, %var_4103) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(3, 252), uint32], Tensor[(105), float64], Tensor[(144), float32]) */
}

def @func_3710(%var_3682: Tensor[(756), uint32], %var_3683: Tensor[(7, 15), float64], %var_3691: Tensor[(144), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(1176), float64], Tensor[(2880), uint16], Tensor[(756), uint32], Tensor[(7, 15), float64], Tensor[(1176), float64], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(144), float32]) {
  %1298 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1299 = cast(meta[relay.Constant][80] /* ty=Tensor[(2880), uint16] */, dtype="uint16") /* ty=Tensor[(2880), uint16] */;
  %1300 = cast(%var_3682, dtype="uint32") /* ty=Tensor[(756), uint32] */;
  %1301 = cast(%var_3683, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
  %1302 = cast(meta[relay.Constant][81] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1303 = cast(meta[relay.Constant][82] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %1304 = reshape(%1299, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), uint16] */;
  %1305 = reshape(%1300, newshape=[756]) /* ty=Tensor[(756), uint32] */;
  %1306 = reshape(%1301, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %1307 = reshape(%1302, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1308 = reshape(%1303, newshape=[1, 1872]) /* ty=Tensor[(1, 1872), float32] */;
  %1309 = @func_3222(%1304, %1305, %1306, %1307, %1308) /* ty=(Tensor[(12, 16, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(756), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(12, 7, 14), float64], uint16, Tensor[(5, 3), uint16], Tensor[(1176), float64], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1, 1872), float32]) */;
  %1310 = cast(%var_3691, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1311 = cast(meta[relay.Constant][82] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
  %1312 = cast(meta[relay.Constant][81] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1313 = reshape(%1310, newshape=[1, 9, 16]) /* ty=Tensor[(1, 9, 16), float32] */;
  %1314 = reshape(%1311, newshape=[13, 9, 16]) /* ty=Tensor[(13, 9, 16), float32] */;
  %1315 = reshape(%1312, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1316 = @func_1537(%1313, %1314, %1315) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) */;
  %1317 = %1298.0;
  %1318 = @func_3628() /* ty=Tensor[(15, 16, 2), float32] */;
  %1319 = %1309.9;
  %1320 = %1316.1;
  (%1317, %1318, %1319, meta[relay.Constant][80] /* ty=Tensor[(2880), uint16] */, %var_3682, %var_3683, meta[relay.Constant][81] /* ty=Tensor[(1176), float64] */, meta[relay.Constant][82] /* ty=Tensor[(1872), float32] */, %1320, %var_3691)
}

def @func_12067(%var_12065: Tensor[(360), uint8], %var_12066: Tensor[(8), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8], Tensor[(15, 16, 2), float64], Tensor[(2, 4, 1), float32], Tensor[(8), float32]) {
  @func_12063(%var_12065, %var_12066) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8], Tensor[(15, 16, 2), float64], Tensor[(2, 4, 1), float32], Tensor[(8), float32]) */
}

def @func_15690() -> (Tensor[(15, 16, 2), float32],) {
  %1321 = @func_7471() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */;
  %1322 = %1321.0;
  (%1322,)
}

def @func_4872(%var_4867: Tensor[(63), uint32], %var_4868: Tensor[(105), float64], %var_4869: Tensor[(1344), float32], %var_4870: Tensor[(320), float32], %var_4871: Tensor[(15), uint16]) -> (Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64], Tensor[(3, 252), float64], Tensor[(63), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(12, 7, 14), float64], Tensor[(10, 8, 4), float64], Tensor[(320), float32], Tensor[(15), uint16]) {
  @func_4865(%var_4867, %var_4868, %var_4869, %var_4870, %var_4871) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64], Tensor[(3, 252), float64], Tensor[(63), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(12, 7, 14), float64], Tensor[(10, 8, 4), float64], Tensor[(320), float32], Tensor[(15), uint16]) */
}

def @func_11731(%var_11729: Tensor[(18816), float64], %var_11730: Tensor[(63), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(12, 10, 8), float32], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) {
  @func_11727(%var_11729, %var_11730) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 10, 8), float32], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) */
}

def @func_3592(%var_3584: Tensor[(18816), float64], %var_3585: Tensor[(63), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(5, 7, 3), float64], Tensor[(21, 5), float64], Tensor[(12, 7, 14), float64], float64, Tensor[(16), float64], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) {
  %1323 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1324 = %1323.0;
  %1325 = cast(%1324, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
  %1326 = cast(meta[relay.Constant][83] /* ty=Tensor[(21, 5), float64] */, dtype="float64") /* ty=Tensor[(21, 5), float64] */;
  %1327 = reshape(%1326, newshape=[5, 7, 3]) /* ty=Tensor[(5, 7, 3), float64] */;
  %1328 = cast(1.42188f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1329 = cast(meta[relay.Constant][84] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %1330 = cast(meta[relay.Constant][85] /* ty=Tensor[(8, 18), float32] */, dtype="float32") /* ty=Tensor[(8, 18), float32] */;
  %1331 = cast(%var_3584, dtype="float64") /* ty=Tensor[(18816), float64] */;
  %1332 = cast(%var_3585, dtype="uint32") /* ty=Tensor[(63), uint32] */;
  %1333 = reshape(%1328, newshape=[]) /* ty=float64 */;
  %1334 = reshape(%1329, newshape=[16, 1, 1]) /* ty=Tensor[(16, 1, 1), float64] */;
  %1335 = reshape(%1330, newshape=[24, 6]) /* ty=Tensor[(24, 6), float32] */;
  %1336 = reshape(%1331, newshape=[16, 1176]) /* ty=Tensor[(16, 1176), float64] */;
  %1337 = reshape(%1332, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1338 = @func_3001(%1333, %1334, %1335, %1336, %1337) /* ty=(Tensor[(16, 1, 1), float64], Tensor[(13, 9, 16), float64], Tensor[(24, 6), float32], Tensor[(1872), float32], Tensor[(16, 1176), float64], Tensor[(12, 7, 14), float64], Tensor[(1, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), uint32]) */;
  %1339 = asinh(%1325) /* ty=Tensor[(15, 16, 2), float32] */;
  %1340 = @func_1694(%1327) /* ty=Tensor[(5, 7, 3), float64] */;
  %1341 = %1338.5;
  (%1339, %1340, meta[relay.Constant][83] /* ty=Tensor[(21, 5), float64] */, %1341, 1.42188f64 /* ty=float64 */, meta[relay.Constant][84] /* ty=Tensor[(16), float64] */, meta[relay.Constant][85] /* ty=Tensor[(8, 18), float32] */, %var_3584, %var_3585)
}

def @func_9508() -> Tensor[(15, 16, 2), float64] {
  %1342 = @func_5425() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1342.1
}

def @func_17336() -> (Tensor[(15, 16, 2), float32],) {
  @func_17334() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_14045() -> (Tensor[(15, 16, 2), float32], Tensor[(1176), float64]) {
  %1343 = @func_9100() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1344 = @func_3551() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %1345 = %1343.0;
  %1346 = %1344.3;
  (%1345, %1346)
}

def @func_17449() -> (Tensor[(15, 16, 2), float32],) {
  @func_17447() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_16221() -> Tensor[(15, 16, 2), float32] {
  %1347 = fn () -> Tensor[(15, 16, 2), float32] {
    @func_6909() /* ty=Tensor[(15, 16, 2), float32] */
  };
  %1347() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_8181(%var_8170: Tensor[(7, 15), float64], %var_8171: Tensor[(1344, 1), float32], %var_8172: Tensor[(320), float32], %var_8173: Tensor[(5, 3), uint16]) -> (Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64], Tensor[(1176), float64], Tensor[(1, 63), uint32], Tensor[(7, 15), float64], Tensor[(1344, 1), float32], Tensor[(320), float32], Tensor[(5, 3), uint16]) {
  %1348 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %1349 = @func_7673() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %1350 = cast(meta[relay.Constant][86] /* ty=Tensor[(1, 63), uint32] */, dtype="uint32") /* ty=Tensor[(1, 63), uint32] */;
  %1351 = cast(%var_8170, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
  %1352 = cast(%var_8171, dtype="float32") /* ty=Tensor[(1344, 1), float32] */;
  %1353 = cast(%var_8172, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1354 = cast(%var_8173, dtype="uint16") /* ty=Tensor[(5, 3), uint16] */;
  %1355 = reshape(%1350, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1356 = reshape(%1351, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %1357 = reshape(%1352, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
  %1358 = reshape(%1353, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %1359 = reshape(%1354, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %1360 = @func_4865(%1355, %1356, %1357, %1358, %1359) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64], Tensor[(3, 252), float64], Tensor[(63), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(12, 7, 14), float64], Tensor[(10, 8, 4), float64], Tensor[(320), float32], Tensor[(15), uint16]) */;
  %1361 = %1348.0;
  %1362 = %1349.0;
  %1363 = %1360.2;
  (%1361, %1362, %1363, meta[relay.Constant][86] /* ty=Tensor[(1, 63), uint32] */, %var_8170, %var_8171, %var_8172, %var_8173)
}

def @func_13542() -> (Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1368 = fn () -> (Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %1364 = @func_5899() /* ty=(Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32]) */;
    %1365 = %1364.0;
    %1366 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
    %1367 = @func_12513() /* ty=Tensor[(15, 16, 2), float32] */;
    (%1365, %1366, %1367)
  };
  %1368() /* ty=(Tensor[(15, 16, 2), bool], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_5487() -> Tensor[(15, 16, 2), float64] {
  %1369 = @func_5085() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1370 = %1369.1;
  %1371 = cast(meta[relay.Constant][87] /* ty=Tensor[(15, 16, 2), float32] */, dtype="float64") /* ty=Tensor[(15, 16, 2), float64] */;
  %1372 = shape_of(%1370, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1373 = cast(%1370, dtype="float64") /* ty=Tensor[(15, 16, 2), float64] */;
  %1374 = dyn.reshape(%1371, %1372, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%1373, %1374) /* ty=Tensor[(15, 16, 2), float64] */
}

def @func_15750() -> Tensor[(15, 16, 2), float32] {
  @func_15748() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_5683() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  %1375 = @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1376 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1377 = cast(meta[relay.Constant][88] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %1378 = reshape(%1377, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %1379 = %1375.0;
  %1380 = %1376.1;
  %1381 = @func_2152(%1378) /* ty=Tensor[(8, 14, 12), float32] */;
  (%1379, %1380, %1381, meta[relay.Constant][88] /* ty=Tensor[(1344), float32] */)
}

def @func_14352(%var_14351: Tensor[(63), uint32]) -> (Tensor[(1344), float32], Tensor[(16), float32], float64, Tensor[(18816), float64], Tensor[(63), uint32]) {
  %1391 = fn (%var_14346: Tensor[(63), uint32]) -> (Tensor[(1344), float32], Tensor[(16), float32], float64, Tensor[(18816), float64], Tensor[(63), uint32]) {
    %1382 = @func_13389() /* ty=(Tensor[(7, 8, 3), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
    %1383 = cast(meta[relay.Constant][89] /* ty=Tensor[(18816), float64] */, dtype="float64") /* ty=Tensor[(18816), float64] */;
    %1384 = cast(%var_14346, dtype="uint32") /* ty=Tensor[(63), uint32] */;
    %1385 = reshape(%1383, newshape=[18816]) /* ty=Tensor[(18816), float64] */;
    %1386 = reshape(%1384, newshape=[63]) /* ty=Tensor[(63), uint32] */;
    %1387 = @func_3592(%1385, %1386) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(5, 7, 3), float64], Tensor[(21, 5), float64], Tensor[(12, 7, 14), float64], float64, Tensor[(16), float64], Tensor[(8, 18), float32], Tensor[(18816), float64], Tensor[(63), uint32]) */;
    %1388 = %1382.2;
    %1389 = @func_13675() /* ty=Tensor[(16), float32] */;
    %1390 = %1387.4;
    (%1388, %1389, %1390, meta[relay.Constant][89] /* ty=Tensor[(18816), float64] */, %var_14346)
  };
  %1391(%var_14351) /* ty=(Tensor[(1344), float32], Tensor[(16), float32], float64, Tensor[(18816), float64], Tensor[(63), uint32]) */
}

def @func_8500(%var_8495: Tensor[(21, 5), float64], %var_8496: Tensor[(420), float64], %var_8497: uint16, %var_8498: Tensor[(15), uint16], %var_8499: Tensor[(84, 14), float64]) -> (Tensor[(8, 14, 12), float32], Tensor[(5, 7, 3), float64], Tensor[(21, 5), float64], Tensor[(420), float64], Tensor[(12, 7, 14), float64], Tensor[(15), uint16], Tensor[(15, 16, 2), float32], Tensor[(84, 14), int64], Tensor[(2, 14, 15), float64], Tensor[(5, 7, 3), float64], Tensor[(15, 16, 2), float32]) {
  @func_8493(%var_8495, %var_8496, %var_8497, %var_8498, %var_8499) /* ty=(Tensor[(8, 14, 12), float32], Tensor[(5, 7, 3), float64], Tensor[(21, 5), float64], Tensor[(420), float64], Tensor[(12, 7, 14), float64], Tensor[(15), uint16], Tensor[(15, 16, 2), float32], Tensor[(84, 14), int64], Tensor[(2, 14, 15), float64], Tensor[(5, 7, 3), float64], Tensor[(15, 16, 2), float32]) */
}

def @func_7948() -> Tensor[(15, 16, 2), float32] {
  %1393 = fn () -> Tensor[(15, 16, 2), float32] {
    %1392 = @func_5653() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1392.0
  };
  %1393() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_17442() -> Tensor[(15, 16, 2), bool] {
  %1395 = fn () -> Tensor[(15, 16, 2), bool] {
    %1394 = @func_5251() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(360), uint8]) */;
    %1394.1
  };
  %1395() /* ty=Tensor[(15, 16, 2), bool] */
}

def @func_10997() -> Tensor[(15, 16, 2), float32] {
  %1397 = fn () -> Tensor[(15, 16, 2), float32] {
    %1396 = @func_8010() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1396.0
  };
  %1397() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_6909() -> Tensor[(15, 16, 2), float32] {
  %1398 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1398.0
}

def @func_12515() -> Tensor[(15, 16, 2), float32] {
  @func_12513() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_17855() -> Tensor[(15, 16, 2), float32] {
  %1400 = fn () -> Tensor[(15, 16, 2), float32] {
    %1399 = @func_9031() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1399.0
  };
  %1400() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_18057() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1401 = @func_12513() /* ty=Tensor[(15, 16, 2), float32] */;
  %1402 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1401, %1402)
}

def @func_8095() -> (Tensor[(756), uint32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) {
  %1403 = @func_4344() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(7, 12, 9), uint32], Tensor[(1, 63), uint32], Tensor[(756), uint32]) */;
  %1404 = cast(meta[relay.Constant][90] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1405 = reshape(%1404, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1406 = @func_4661(%1405) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %1407 = %1403.3;
  %1408 = %1406.0;
  (%1407, %1408, meta[relay.Constant][90] /* ty=Tensor[(1176), float64] */)
}

def @func_11764() -> Tensor[(15, 16, 2), float32] {
  @func_8825() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_7651() -> Tensor[(15, 16, 2), float32] {
  %1409 = fn () -> Tensor[(15, 16, 2), float32] {
    @func_3628() /* ty=Tensor[(15, 16, 2), float32] */
  };
  %1409() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_4458() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1414 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %1410 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1411 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1412 = %1410.0;
    %1413 = %1411.1;
    (%1412, %1413)
  };
  %1414() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_9209() -> (Tensor[(15, 16, 2), float32],) {
  %1415 = @func_3089() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1415,)
}

def @func_14905(%var_14904: Tensor[(1, 13, 15), int32]) -> (Tensor[(9, 13, 15), bool], Tensor[(1, 13, 15), float64]) {
  %1421 = fn (%var_14879: Tensor[(1, 13, 15), int32]) -> (Tensor[(9, 13, 15), bool], Tensor[(1, 13, 15), float64]) {
    %1416 = cast(%var_14879, dtype="bool") /* ty=Tensor[(1, 13, 15), bool] */;
    %1417 = cast(meta[relay.Constant][91] /* ty=Tensor[(9, 13, 15), int32] */, dtype="bool") /* ty=Tensor[(9, 13, 15), bool] */;
    %1418 = cast(%var_14879, dtype="float64") /* ty=Tensor[(1, 13, 15), float64] */;
    %1419 = equal(%1416, %1417) /* ty=Tensor[(9, 13, 15), bool] */;
    %1420 = log2(%1418) /* ty=Tensor[(1, 13, 15), float64] */;
    (%1419, %1420)
  };
  %1421(%var_14904) /* ty=(Tensor[(9, 13, 15), bool], Tensor[(1, 13, 15), float64]) */
}

def @func_3269() -> Tensor[(15, 16, 2), float32] {
  @func_3089() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_7862() -> Tensor[(15, 16, 2), float32] {
  %1422 = @func_6962() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1422.0
}

def @func_14686() -> Tensor[(15, 16, 2), float64] {
  %1423 = @func_7144() /* ty=(Tensor[(15, 16, 2), float64],) */;
  %1423.0
}

def @func_5913() -> (Tensor[(15, 16, 2), float32],) {
  %1424 = @func_3970() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1425 = %1424.0;
  (%1425,)
}

def @func_8546(%var_8528: Tensor[(1176), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(756), uint32], Tensor[(1872), float32], Tensor[(1176), float32], Tensor[(15, 16, 2), float32]) {
  %1426 = @func_8095() /* ty=(Tensor[(756), uint32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %1427 = cast(meta[relay.Constant][92] /* ty=Tensor[(1176), float64] */, dtype="float64") /* ty=Tensor[(1176), float64] */;
  %1428 = reshape(%1427, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
  %1429 = @func_4661(%1428) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
  %1430 = cast(%var_8528, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %1431 = shape_of(meta[relay.Constant][92] /* ty=Tensor[(1176), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1432 = cast(meta[relay.Constant][92] /* ty=Tensor[(1176), float64] */, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %1433 = dyn.reshape(%1430, %1431, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1434 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1435 = @func_6909() /* ty=Tensor[(15, 16, 2), float32] */;
  %1436 = %1426.0;
  %1437 = %1429.2;
  %1438 = divide(%1432, %1433) /* ty=Tensor[(1176), float32] */;
  %1439 = %1434.0;
  (%1435, %1436, %1437, %1438, %1439)
}

def @func_12417() -> (Tensor[(15, 16, 2), float64], Tensor[(7, 8, 3), float64]) {
  %1443 = fn () -> (Tensor[(15, 16, 2), float64], Tensor[(7, 8, 3), float64]) {
    %1440 = @func_7673() /* ty=(Tensor[(15, 16, 2), float64],) */;
    %1441 = %1440.0;
    %1442 = @func_4159() /* ty=Tensor[(7, 8, 3), float64] */;
    (%1441, %1442)
  };
  %1443() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(7, 8, 3), float64]) */
}

def @func_19048() -> (Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(12, 7, 14), float64]) {
  %1450 = fn () -> (Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(12, 7, 14), float64]) {
    %1444 = @func_10546() /* ty=(Tensor[(15, 16, 2), bool],) */;
    %1445 = @func_5251() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(360), uint8]) */;
    %1446 = @func_18918() /* ty=(Tensor[(12, 7, 14), float64],) */;
    %1447 = %1444.0;
    %1448 = %1445.2;
    %1449 = %1446.0;
    (%1447, %1448, %1449)
  };
  %1450() /* ty=(Tensor[(15, 16, 2), bool], Tensor[(360), uint8], Tensor[(12, 7, 14), float64]) */
}

def @func_15259() -> Tensor[(15, 16, 2), float32] {
  @func_15257() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_16080() -> Tensor[(15, 16, 2), float32] {
  %1451 = fn () -> Tensor[(15, 16, 2), float32] {
    @func_13794() /* ty=Tensor[(15, 16, 2), float32] */
  };
  %1451() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_4663(%var_4662: Tensor[(1176), float64]) -> (Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) {
  %1464 = fn (%var_4646: Tensor[(1176), float64]) -> (Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) {
    %1452 = cast(meta[relay.Constant][93] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1453 = cast(meta[relay.Constant][94] /* ty=Tensor[(1872), float32] */, dtype="float32") /* ty=Tensor[(1872), float32] */;
    %1454 = cast(%var_4646, dtype="float64") /* ty=Tensor[(1176), float64] */;
    %1455 = reshape(%1452, newshape=[1, 9, 16]) /* ty=Tensor[(1, 9, 16), float32] */;
    %1456 = reshape(%1453, newshape=[13, 9, 16]) /* ty=Tensor[(13, 9, 16), float32] */;
    %1457 = reshape(%1454, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %1458 = @func_1537(%1455, %1456, %1457) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(13, 9, 16), float64]) */;
    %1459 = @func_3063() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1460 = %1459.0;
    %1461 = cast(%1460, dtype="float64") /* ty=Tensor[(15, 16, 2), float64] */;
    %1462 = %1458.0;
    %1463 = cos(%1461) /* ty=Tensor[(15, 16, 2), float64] */;
    (%1462, meta[relay.Constant][93] /* ty=Tensor[(144), float32] */, meta[relay.Constant][94] /* ty=Tensor[(1872), float32] */, %var_4646, %1463)
  };
  %1464(%var_4662) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */
}

def @func_5048(%var_5046: Tensor[(360), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8]) {
  %1465 = cast(%var_5046, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %1466 = cast(%var_5046, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %1467 = reshape(%1465, newshape=[9, 5, 8]) /* ty=Tensor[(9, 5, 8), uint8] */;
  %1468 = reshape(%1466, newshape=[9, 5, 8]) /* ty=Tensor[(9, 5, 8), uint8] */;
  %1469 = @func_2875(%1467, %1468) /* ty=(Tensor[(9, 5, 8), uint8],) */;
  %1470 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
  %1471 = %1469.0;
  (%1470, %1471, %var_5046)
}

def @func_7641() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) {
  %1477 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) {
    %1472 = cast(meta[relay.Constant][95] /* ty=Tensor[(63), uint32] */, dtype="uint32") /* ty=Tensor[(63), uint32] */;
    %1473 = reshape(%1472, newshape=[63]) /* ty=Tensor[(63), uint32] */;
    %1474 = @func_3421(%1473) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), float64]) */;
    %1475 = @func_4732() /* ty=Tensor[(15, 16, 2), float32] */;
    %1476 = %1474.0;
    (%1475, %1476, meta[relay.Constant][95] /* ty=Tensor[(63), uint32] */)
  };
  %1477() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32]) */
}

def @func_5426() -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1486 = fn () -> (Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %1478 = cast(meta[relay.Constant][96] /* ty=Tensor[(1, 1176), float64] */, dtype="float64") /* ty=Tensor[(1, 1176), float64] */;
    %1479 = reshape(%1478, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %1480 = @func_4661(%1479) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(144), float32], Tensor[(1872), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64]) */;
    %1481 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1482 = @func_4029() /* ty=Tensor[(15, 16, 2), float64] */;
    %1483 = %1480.4;
    %1484 = @func_3269() /* ty=Tensor[(15, 16, 2), float32] */;
    %1485 = %1481.0;
    (%1482, %1483, meta[relay.Constant][96] /* ty=Tensor[(1, 1176), float64] */, %1484, %1485)
  };
  %1486() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_14007() -> (Tensor[(15, 16, 2), float32],) {
  @func_14005() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_13608(%var_13606: Tensor[(960), int8]) -> (Tensor[(1344), float32], Tensor[(12, 5, 16), int8], Tensor[(80), int8], Tensor[(960), int8]) {
  @func_13605(%var_13606) /* ty=(Tensor[(1344), float32], Tensor[(12, 5, 16), int8], Tensor[(80), int8], Tensor[(960), int8]) */
}

def @func_17469() -> (Tensor[(756), uint32], Tensor[(15, 16, 2), float32]) {
  %1487 = @func_15659() /* ty=(Tensor[(756), uint32],) */;
  %1488 = @func_14522() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %1489 = %1487.0;
  %1490 = %1488.1;
  (%1489, %1490)
}

def @func_12130(%var_12128: Tensor[(2, 1, 3), float32]) -> (Tensor[(2, 1, 3), float32],) {
  @func_12127(%var_12128) /* ty=(Tensor[(2, 1, 3), float32],) */
}

def @func_17153() -> (Tensor[(1176), float64], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) {
  %1491 = @func_8095() /* ty=(Tensor[(756), uint32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
  %1492 = @func_8553() /* ty=Tensor[(12, 7, 14), float64] */;
  %1493 = cast(%1492, dtype="float64") /* ty=Tensor[(12, 7, 14), float64] */;
  %1494 = %1491.2;
  %1495 = @func_10925() /* ty=Tensor[(15, 16, 2), float32] */;
  %1496 = exp(%1493) /* ty=Tensor[(12, 7, 14), float64] */;
  (%1494, %1495, %1496)
}

def @func_15239() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1497 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %1498 = @func_8901() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1499 = @func_8025() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1500 = @func_12513() /* ty=Tensor[(15, 16, 2), float32] */;
  %1501 = %1497.0;
  %1502 = %1498.0;
  %1503 = %1499.0;
  (%1500, %1501, %1502, %1503)
}

def @func_16180(%var_16179: Tensor[(1, 2, 7), float32]) -> (Tensor[(?, 2, 7), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1515 = fn (%var_16150: Tensor[(1, 2, 7), float32]) -> (Tensor[(?, 2, 7), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %1504 = cast(%var_16150, dtype="float32") /* ty=Tensor[(1, 2, 7), float32] */;
    %1505 = acos(%1504) /* ty=Tensor[(1, 2, 7), float32] */;
    %1506 = cast(%var_16150, dtype="float64") /* ty=Tensor[(1, 2, 7), float64] */;
    %1507 = shape_of(%1505, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1508 = cast(%1505, dtype="float64") /* ty=Tensor[(1, 2, 7), float64] */;
    %1509 = dyn.reshape(%1506, %1507, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1510 = @func_9831() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
    %1511 = @func_13679() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1512 = divide(%1508, %1509) /* ty=Tensor[(?, 2, 7), float64] */;
    %1513 = %1510.1;
    %1514 = %1511.0;
    (%1512, %1513, %1514)
  };
  %1515(%var_16179) /* ty=(Tensor[(?, 2, 7), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_13891(%var_13888: Tensor[(90), uint16], %var_13889: Tensor[(1350), uint16], %var_13890: Tensor[(144), float32]) -> (Tensor[(1344), float32], Tensor[(144), float32], Tensor[(90), uint16], Tensor[(1350), uint16], Tensor[(144), float32], Tensor[(13, ?, 14), bool], Tensor[(182), int8]) {
  @func_13886(%var_13888, %var_13889, %var_13890) /* ty=(Tensor[(1344), float32], Tensor[(144), float32], Tensor[(90), uint16], Tensor[(1350), uint16], Tensor[(144), float32], Tensor[(13, ?, 14), bool], Tensor[(182), int8]) */
}

def @func_16457() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1516 = @func_5514() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1517 = @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1518 = %1516.2;
  %1519 = %1517.0;
  (%1518, %1519)
}

def @func_19138(%var_19134: Tensor[(1176), float64], %var_19135: Tensor[(1344), float32], %var_19136: Tensor[(105), float64], %var_19137: Tensor[(360), uint8]) -> (Tensor[(15, 1, 13), float64], Tensor[(14, 3, 16), float32], Tensor[(1, 144), float32], Tensor[(1176), float64], Tensor[(1344), float32], Tensor[(594), int32], Tensor[(105), float64], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) {
  @func_19132(%var_19134, %var_19135, %var_19136, %var_19137) /* ty=(Tensor[(15, 1, 13), float64], Tensor[(14, 3, 16), float32], Tensor[(1, 144), float32], Tensor[(1176), float64], Tensor[(1344), float32], Tensor[(594), int32], Tensor[(105), float64], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) */
}

def @func_18277() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1524 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %1520 = @func_9409() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1521 = @func_15735() /* ty=Tensor[(15, 16, 2), float32] */;
    %1522 = %1520.1;
    %1523 = @func_10925() /* ty=Tensor[(15, 16, 2), float32] */;
    (%1521, %1522, %1523)
  };
  %1524() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_16365(%var_16364: Tensor[(3, 3, 5), float32]) -> Tensor[(3, 3, 5), float64] {
  %1531 = fn (%var_16353: Tensor[(3, 3, 5), float32]) -> Tensor[(3, 3, 5), float64] {
    %1525 = @func_12439() /* ty=(Tensor[(3, 3, 5), float32],) */;
    %1526 = %1525.0;
    %1527 = cast(%var_16353, dtype="float64") /* ty=Tensor[(3, 3, 5), float64] */;
    %1528 = shape_of(%1526, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1529 = cast(%1526, dtype="float64") /* ty=Tensor[(3, 3, 5), float64] */;
    %1530 = dyn.reshape(%1527, %1528, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%1529, %1530) /* ty=Tensor[(3, 3, 5), float64] */
  };
  %1531(%var_16364) /* ty=Tensor[(3, 3, 5), float64] */
}

def @func_15635(%var_15625: Tensor[(13, 2, 15), uint8], %var_15626: Tensor[(13, 2, 15), uint8]) -> (Tensor[(13, 2, 15), uint8], Tensor[(15, 16, 2), float32]) {
  %1532 = cast(%var_15626, dtype="uint8") /* ty=Tensor[(13, 2, 15), uint8] */;
  %1533 = shape_of(%var_15625, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1534 = cast(%var_15625, dtype="uint8") /* ty=Tensor[(13, 2, 15), uint8] */;
  %1535 = dyn.reshape(%1532, %1533, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1536 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1537 = bitwise_and(%1534, %1535) /* ty=Tensor[(13, 2, 15), uint8] */;
  %1538 = %1536.0;
  (%1537, %1538)
}

def @func_9719(%var_9717: Tensor[(105), float64], %var_9718: Tensor[(12, 30), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(594), int32], Tensor[(105), float64], Tensor[(15, 16, 2), float32], Tensor[(12, 30), uint16]) {
  %1554 = fn (%var_9679: Tensor[(105), float64], %var_9689: Tensor[(12, 30), uint8]) -> (Tensor[(15, 16, 2), float32], Tensor[(594), int32], Tensor[(105), float64], Tensor[(15, 16, 2), float32], Tensor[(12, 30), uint16]) {
    %1539 = @func_5514() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1540 = cast(%var_9679, dtype="float64") /* ty=Tensor[(105), float64] */;
    %1541 = cast(meta[relay.Constant][97] /* ty=Tensor[(12, 30), uint8] */, dtype="uint8") /* ty=Tensor[(12, 30), uint8] */;
    %1542 = reshape(%1540, newshape=[21, 5]) /* ty=Tensor[(21, 5), float64] */;
    %1543 = reshape(%1541, newshape=[360]) /* ty=Tensor[(360), uint8] */;
    %1544 = @func_7381(%1542, %1543) /* ty=(Tensor[(15, 16, 2), float64], Tensor[(9, 5, 8), uint8], Tensor[(594), int32], Tensor[(21, 5), float64], Tensor[(360), uint8], Tensor[(15, 16, 2), float32]) */;
    %1545 = @func_3622() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1546 = cast(%var_9689, dtype="uint16") /* ty=Tensor[(12, 30), uint16] */;
    %1547 = shape_of(meta[relay.Constant][97] /* ty=Tensor[(12, 30), uint8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1548 = cast(meta[relay.Constant][97] /* ty=Tensor[(12, 30), uint8] */, dtype="uint16") /* ty=Tensor[(12, 30), uint16] */;
    %1549 = dyn.reshape(%1546, %1547, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %1550 = %1539.0;
    %1551 = %1544.2;
    %1552 = %1545.1;
    %1553 = bitwise_and(%1548, %1549) /* ty=Tensor[(12, 30), uint16] */;
    (%1550, %1551, %var_9679, %1552, %1553)
  };
  %1554(%var_9717, %var_9718) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(594), int32], Tensor[(105), float64], Tensor[(15, 16, 2), float32], Tensor[(12, 30), uint16]) */
}

def @func_15659() -> (Tensor[(756), uint32],) {
  %1555 = @func_12540() /* ty=Tensor[(756), uint32] */;
  (%1555,)
}

def @func_7204(%var_7202: Tensor[(1344), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) {
  @func_7201(%var_7202) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(360), uint8], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */
}

def @func_10863() -> Tensor[(15, 16, 2), float32] {
  %1556 = @func_9831() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %1556.1
}

def @func_15140() -> Tensor[(15, 16, 2), float64] {
  %1557 = fn () -> Tensor[(15, 16, 2), float64] {
    @func_5487() /* ty=Tensor[(15, 16, 2), float64] */
  };
  %1557() /* ty=Tensor[(15, 16, 2), float64] */
}

def @func_12311() -> (Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(168, 8), float32]) {
  %1558 = @func_5425() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float64], Tensor[(1, 1176), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1559 = cast(meta[relay.Constant][98] /* ty=Tensor[(168, 8), float32] */, dtype="float32") /* ty=Tensor[(168, 8), float32] */;
  %1560 = reshape(%1559, newshape=[8, 14, 12]) /* ty=Tensor[(8, 14, 12), float32] */;
  %1561 = cast(meta[relay.Constant][98] /* ty=Tensor[(168, 8), float32] */, dtype="float32") /* ty=Tensor[(168, 8), float32] */;
  %1562 = %1558.4;
  %1563 = @func_2152(%1560) /* ty=Tensor[(8, 14, 12), float32] */;
  %1564 = log2(%1561) /* ty=Tensor[(168, 8), float32] */;
  (%1562, %1563, %1564)
}

def @func_10673() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1565 = @func_9209() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1566 = @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */;
  %1567 = %1565.0;
  %1568 = %1566.0;
  (%1567, %1568)
}

def @func_5915() -> (Tensor[(15, 16, 2), float32],) {
  @func_5913() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_15551(%var_15543: Tensor[(3, 30), uint16]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 3, 12), float32], Tensor[(3, 30), uint16], Tensor[(1350), uint16], Tensor[(144), float32]) {
  %1569 = @func_9907() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
  %1570 = @func_11284() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(1, 63), uint32]) */;
  %1571 = cast(%var_15543, dtype="uint16") /* ty=Tensor[(3, 30), uint16] */;
  %1572 = cast(meta[relay.Constant][99] /* ty=Tensor[(1350), uint16] */, dtype="uint16") /* ty=Tensor[(1350), uint16] */;
  %1573 = cast(meta[relay.Constant][100] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1574 = reshape(%1571, newshape=[1, 9, 10]) /* ty=Tensor[(1, 9, 10), uint16] */;
  %1575 = reshape(%1572, newshape=[15, 9, 10]) /* ty=Tensor[(15, 9, 10), uint16] */;
  %1576 = reshape(%1573, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1577 = @func_5763(%1574, %1575, %1576) /* ty=(Tensor[(15, 9, 10), uint16], Tensor[(15, 3, 12), float32], bool, Tensor[(540), bool], Tensor[(144), float32]) */;
  %1578 = %1569.0;
  %1579 = %1570.0;
  %1580 = %1577.1;
  (%1578, %1579, %1580, %var_15543, meta[relay.Constant][99] /* ty=Tensor[(1350), uint16] */, meta[relay.Constant][100] /* ty=Tensor[(144), float32] */)
}

def @func_9909() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_9907() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_6475() -> Tensor[(15, 16, 2), float32] {
  @func_6473() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_9510() -> Tensor[(15, 16, 2), float64] {
  @func_9508() /* ty=Tensor[(15, 16, 2), float64] */
}

def @func_9619(%var_9617: Tensor[(3, 10, 1), uint64], %var_9618: Tensor[(3, 10, 10), uint64]) -> Tensor[(3, 10, 10), float64] {
  @func_9615(%var_9617, %var_9618) /* ty=Tensor[(3, 10, 10), float64] */
}

def @func_9101() -> (Tensor[(15, 16, 2), float32],) {
  %1582 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %1581 = @func_8050() /* ty=Tensor[(15, 16, 2), float32] */;
    (%1581,)
  };
  %1582() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_13781(%var_13702: Tensor[(36, 10), uint8], %var_13733: Tensor[(1344), float32], %var_13734: Tensor[(320), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(36, 10), uint8], Tensor[(5, 7, 3), float64], Tensor[(7, 15), float64], Tensor[(1344), float32], Tensor[(320), float32], Tensor[(3, 3, 5), float32], Tensor[(63, 15), bool]) {
  %1583 = cast(%var_13702, dtype="uint8") /* ty=Tensor[(36, 10), uint8] */;
  %1584 = reshape(%1583, newshape=[2, 180]) /* ty=Tensor[(2, 180), uint8] */;
  %1585 = @func_11679(%1584) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(9, 5, 8), uint8], Tensor[(2, 180), uint8], Tensor[(15, 16, 2), bool], Tensor[(12, 10, 8), float32], Tensor[(15, 16, 2), float64]) */;
  %1586 = cast(meta[relay.Constant][101] /* ty=Tensor[(63, 1), uint32] */, dtype="uint32") /* ty=Tensor[(63, 1), uint32] */;
  %1587 = cast(meta[relay.Constant][102] /* ty=Tensor[(7, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
  %1588 = cast(%var_13733, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %1589 = cast(%var_13734, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1590 = cast(meta[relay.Constant][103] /* ty=Tensor[(15), uint16] */, dtype="uint16") /* ty=Tensor[(15), uint16] */;
  %1591 = reshape(%1586, newshape=[63]) /* ty=Tensor[(63), uint32] */;
  %1592 = reshape(%1587, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %1593 = reshape(%1588, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
  %1594 = reshape(%1589, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %1595 = reshape(%1590, newshape=[15]) /* ty=Tensor[(15), uint16] */;
  %1596 = @func_4865(%1591, %1592, %1593, %1594, %1595) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(144), float32], Tensor[(1176), float64], Tensor[(15, 16, 2), float64], Tensor[(3, 252), float64], Tensor[(63), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(8, 14, 12), float32], Tensor[(1344), float32], Tensor[(12, 7, 14), float64], Tensor[(10, 8, 4), float64], Tensor[(320), float32], Tensor[(15), uint16]) */;
  %1597 = cast(meta[relay.Constant][101] /* ty=Tensor[(63, 1), uint32] */, dtype="bool") /* ty=Tensor[(63, 1), bool] */;
  %1598 = cast(meta[relay.Constant][103] /* ty=Tensor[(15), uint16] */, dtype="bool") /* ty=Tensor[(15), bool] */;
  %1599 = @func_5320() /* ty=Tensor[(15, 16, 2), float32] */;
  %1600 = %1585.1;
  %1601 = %1596.6;
  %1602 = @func_9003() /* ty=Tensor[(3, 3, 5), float32] */;
  %1603 = equal(%1597, %1598) /* ty=Tensor[(63, 15), bool] */;
  (%1599, %1600, %var_13702, %1601, meta[relay.Constant][102] /* ty=Tensor[(7, 15), float64] */, %var_13733, %var_13734, %1602, %1603)
}

def @func_11575(%var_11573: Tensor[(144), float32]) -> (Tensor[(10, 8, 11), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(8, 14, 12), float32], Tensor[(144), float32], Tensor[(1344), float32], Tensor[(8, 14, 12), float32]) {
  @func_11572(%var_11573) /* ty=(Tensor[(10, 8, 11), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], Tensor[(8, 14, 12), float32], Tensor[(144), float32], Tensor[(1344), float32], Tensor[(8, 14, 12), float32]) */
}

def @func_2875(%var_2870: Tensor[(9, 5, 8), uint8], %var_2871: Tensor[(9, 5, 8), uint8]) -> (Tensor[(9, 5, 8), uint8],) {
  %1604 = cast(%var_2871, dtype="uint8") /* ty=Tensor[(9, 5, 8), uint8] */;
  %1605 = shape_of(%var_2870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1606 = cast(%var_2870, dtype="uint8") /* ty=Tensor[(9, 5, 8), uint8] */;
  %1607 = dyn.reshape(%1604, %1605, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1608 = logical_xor(%1606, %1607) /* ty=Tensor[(9, 5, 8), uint8] */;
  (%1608,)
}

def @func_4732() -> Tensor[(15, 16, 2), float32] {
  @func_3089() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_19723() -> Tensor[(15, 16, 2), float32] {
  @func_19721() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_6963() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1613 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %1609 = @func_6637() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1610 = @func_3560() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1611 = %1609.0;
    %1612 = %1610.0;
    (%1611, %1612)
  };
  %1613() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_11650() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) {
  %1621 = fn () -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) {
    %1614 = @func_5653() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1615 = @func_4457() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1616 = @func_8838() /* ty=(Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) */;
    %1617 = %1614.0;
    %1618 = %1615.0;
    %1619 = %1616.0;
    %1620 = @func_3628() /* ty=Tensor[(15, 16, 2), float32] */;
    (%1617, %1618, %1619, %1620)
  };
  %1621() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(63), uint32], Tensor[(15, 16, 2), float32]) */
}

def @func_5320() -> Tensor[(15, 16, 2), float32] {
  %1622 = @func_4601() /* ty=(Tensor[(15, 16, 2), float64], Tensor[(15, 16, 2), float32]) */;
  %1622.1
}

def @func_11792() -> (Tensor[(15, 16, 2), float32],) {
  %1624 = fn () -> (Tensor[(15, 16, 2), float32],) {
    %1623 = @func_10120() /* ty=Tensor[(15, 16, 2), float32] */;
    (%1623,)
  };
  %1624() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_10109() -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) {
  @func_10107() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64]) */
}

def @func_14143() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) {
  @func_14141() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) */
}

def @func_16399(%var_16387: Tensor[(90), uint16], %var_16388: Tensor[(1350), uint16]) -> (Tensor[(12, 10, 8), float32], Tensor[(144), float32], Tensor[(90), uint16], Tensor[(1350), uint16], Tensor[(144), float32], Tensor[(15, 16, 2), float32]) {
  %1625 = @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */;
  %1626 = cast(%var_16387, dtype="uint16") /* ty=Tensor[(90), uint16] */;
  %1627 = cast(%var_16388, dtype="uint16") /* ty=Tensor[(1350), uint16] */;
  %1628 = cast(meta[relay.Constant][104] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1629 = reshape(%1626, newshape=[90]) /* ty=Tensor[(90), uint16] */;
  %1630 = reshape(%1627, newshape=[1350]) /* ty=Tensor[(1350), uint16] */;
  %1631 = reshape(%1628, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1632 = @func_13886(%1629, %1630, %1631) /* ty=(Tensor[(1344), float32], Tensor[(144), float32], Tensor[(90), uint16], Tensor[(1350), uint16], Tensor[(144), float32], Tensor[(13, ?, 14), bool], Tensor[(182), int8]) */;
  %1633 = %1625.0;
  %1634 = %1632.1;
  %1635 = @func_16079() /* ty=Tensor[(15, 16, 2), float32] */;
  (%1633, %1634, %var_16387, %var_16388, meta[relay.Constant][104] /* ty=Tensor[(144), float32] */, %1635)
}

def @func_9211() -> (Tensor[(15, 16, 2), float32],) {
  @func_9209() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_6128() -> (Tensor[(12, 10, 8), float32],) {
  %1636 = cast(meta[relay.Constant][105] /* ty=Tensor[(12, 10, 8), float32] */, dtype="float32") /* ty=Tensor[(12, 10, 8), float32] */;
  %1637 = cosh(%1636) /* ty=Tensor[(12, 10, 8), float32] */;
  (%1637,)
}

def @func_17281(%var_17280: Tensor[(1872), float32]) -> (Tensor[(756), uint32], Tensor[(15, 16, 2), float32], Tensor[(105), float64], Tensor[(1872), float32]) {
  %1647 = fn (%var_17269: Tensor[(1872), float32]) -> (Tensor[(756), uint32], Tensor[(15, 16, 2), float32], Tensor[(105), float64], Tensor[(1872), float32]) {
    %1638 = @func_14130() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1639 = @func_6205() /* ty=Tensor[(756), uint32] */;
    %1640 = cast(%1639, dtype="uint32") /* ty=Tensor[(756), uint32] */;
    %1641 = cast(%var_17269, dtype="float32") /* ty=Tensor[(1872), float32] */;
    %1642 = reshape(%1640, newshape=[54, 14]) /* ty=Tensor[(54, 14), uint32] */;
    %1643 = reshape(%1641, newshape=[1872]) /* ty=Tensor[(1872), float32] */;
    %1644 = @func_7577(%1642, %1643) /* ty=(Tensor[(1344), float32], Tensor[(144), float32], Tensor[(2880), uint16], Tensor[(54, 14), uint32], Tensor[(105), float64], Tensor[(1872), float32], Tensor[(84, 14), float32]) */;
    %1645 = %1638.0;
    %1646 = %1644.4;
    (%1639, %1645, %1646, %var_17269)
  };
  %1647(%var_17280) /* ty=(Tensor[(756), uint32], Tensor[(15, 16, 2), float32], Tensor[(105), float64], Tensor[(1872), float32]) */
}

def @func_817(%var_814: uint16, %var_815: Tensor[(1, 1, 15), uint16], %var_816: Tensor[(588, 2), float64]) -> (Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) {
  %1657 = fn (%var_795: uint16, %var_796: Tensor[(1, 1, 15), uint16], %var_802: Tensor[(588, 2), float64]) -> (Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) {
    %1648 = cast(%var_795, dtype="bool") /* ty=bool */;
    %1649 = cast(%var_796, dtype="bool") /* ty=Tensor[(1, 1, 15), bool] */;
    %1650 = cast(%var_802, dtype="float64") /* ty=Tensor[(588, 2), float64] */;
    %1651 = reshape(%1650, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
    %1652 = cast(%var_802, dtype="float64") /* ty=Tensor[(588, 2), float64] */;
    %1653 = reshape(%1652, newshape=[12, 7, 14]) /* ty=Tensor[(12, 7, 14), float64] */;
    %1654 = greater_equal(%1648, %1649) /* ty=Tensor[(1, 1, 15), bool] */;
    %1655 = @func_164(%1651) /* ty=Tensor[(12, 7, 14), float64] */;
    %1656 = @func_164(%1653) /* ty=Tensor[(12, 7, 14), float64] */;
    (%1654, %1655, %var_802, %1656)
  };
  %1657(%var_814, %var_815, %var_816) /* ty=(Tensor[(1, 1, 15), bool], Tensor[(12, 7, 14), float64], Tensor[(588, 2), float64], Tensor[(12, 7, 14), float64]) */
}

def @func_9282() -> Tensor[(4, 4, 1), float32] {
  %1658 = @func_8919() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(4, 4, 1), float32], Tensor[(16), float32], Tensor[(15, 16, 2), float32]) */;
  %1658.1
}

def @func_6130() -> (Tensor[(12, 10, 8), float32],) {
  @func_6128() /* ty=(Tensor[(12, 10, 8), float32],) */
}

def @func_10925() -> Tensor[(15, 16, 2), float32] {
  @func_8050() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_9255() -> (Tensor[(15, 16, 2), float32],) {
  @func_9253() /* ty=(Tensor[(15, 16, 2), float32],) */
}

def @func_7580(%var_7578: Tensor[(54, 14), uint32], %var_7579: Tensor[(1872), float32]) -> (Tensor[(1344), float32], Tensor[(144), float32], Tensor[(2880), uint16], Tensor[(54, 14), uint32], Tensor[(105), float64], Tensor[(1872), float32], Tensor[(84, 14), float32]) {
  %1675 = fn (%var_7530: Tensor[(54, 14), uint32], %var_7533: Tensor[(1872), float32]) -> (Tensor[(1344), float32], Tensor[(144), float32], Tensor[(2880), uint16], Tensor[(54, 14), uint32], Tensor[(105), float64], Tensor[(1872), float32], Tensor[(84, 14), float32]) {
    %1659 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
    %1660 = cast(meta[relay.Constant][106] /* ty=Tensor[(2880), uint16] */, dtype="uint16") /* ty=Tensor[(2880), uint16] */;
    %1661 = cast(%var_7530, dtype="uint32") /* ty=Tensor[(54, 14), uint32] */;
    %1662 = cast(meta[relay.Constant][107] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %1663 = cast(meta[relay.Constant][108] /* ty=Tensor[(84, 14), float64] */, dtype="float64") /* ty=Tensor[(84, 14), float64] */;
    %1664 = cast(%var_7533, dtype="float32") /* ty=Tensor[(1872), float32] */;
    %1665 = reshape(%1660, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), uint16] */;
    %1666 = reshape(%1661, newshape=[756]) /* ty=Tensor[(756), uint32] */;
    %1667 = reshape(%1662, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %1668 = reshape(%1663, newshape=[1176]) /* ty=Tensor[(1176), float64] */;
    %1669 = reshape(%1664, newshape=[1, 1872]) /* ty=Tensor[(1, 1872), float32] */;
    %1670 = @func_3222(%1665, %1666, %1667, %1668, %1669) /* ty=(Tensor[(12, 16, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(756), uint32], Tensor[(5, 7, 3), float64], Tensor[(105), float64], Tensor[(12, 7, 14), float64], uint16, Tensor[(5, 3), uint16], Tensor[(1176), float64], Tensor[(13, 9, 16), float64], Tensor[(144), float32], Tensor[(1, 1872), float32]) */;
    %1671 = cast(meta[relay.Constant][108] /* ty=Tensor[(84, 14), float64] */, dtype="float32") /* ty=Tensor[(84, 14), float32] */;
    %1672 = %1659.3;
    %1673 = %1670.11;
    %1674 = erf(%1671) /* ty=Tensor[(84, 14), float32] */;
    (%1672, %1673, meta[relay.Constant][106] /* ty=Tensor[(2880), uint16] */, %var_7530, meta[relay.Constant][107] /* ty=Tensor[(105), float64] */, %var_7533, %1674)
  };
  %1675(%var_7578, %var_7579) /* ty=(Tensor[(1344), float32], Tensor[(144), float32], Tensor[(2880), uint16], Tensor[(54, 14), uint32], Tensor[(105), float64], Tensor[(1872), float32], Tensor[(84, 14), float32]) */
}

def @func_15639(%var_15637: Tensor[(13, 2, 15), uint8], %var_15638: Tensor[(13, 2, 15), uint8]) -> (Tensor[(13, 2, 15), uint8], Tensor[(15, 16, 2), float32]) {
  @func_15635(%var_15637, %var_15638) /* ty=(Tensor[(13, 2, 15), uint8], Tensor[(15, 16, 2), float32]) */
}

def @func_8050() -> Tensor[(15, 16, 2), float32] {
  %1676 = @func_7471() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float64]) */;
  %1676.1
}

def @func_18405() -> Tensor[(15, 16, 2), float32] {
  @func_18403() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_8631() -> (Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  %1684 = fn () -> (Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
    %1677 = @func_8095() /* ty=(Tensor[(756), uint32], Tensor[(12, 7, 14), float64], Tensor[(1176), float64]) */;
    %1678 = @func_5913() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1679 = @func_4377() /* ty=(Tensor[(15, 16, 2), float32],) */;
    %1680 = %1677.1;
    %1681 = %1678.0;
    %1682 = %1679.0;
    %1683 = @func_3891() /* ty=Tensor[(15, 16, 2), float32] */;
    (%1680, %1681, %1682, %1683)
  };
  %1684() /* ty=(Tensor[(12, 7, 14), float64], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_6553(%var_6551: Tensor[(13, 1, 14), int8], %var_6552: Tensor[(13, 1, 14), int8]) -> (Tensor[(13, ?, 14), bool],) {
  %1690 = fn (%var_6521: Tensor[(13, 1, 14), int8], %var_6522: Tensor[(13, 1, 14), int8]) -> (Tensor[(13, ?, 14), bool],) {
    %1685 = cast(%var_6522, dtype="bool") /* ty=Tensor[(13, 1, 14), bool] */;
    %1686 = shape_of(%var_6521, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1687 = cast(%var_6521, dtype="bool") /* ty=Tensor[(13, 1, 14), bool] */;
    %1688 = dyn.reshape(%1685, %1686, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1689 = equal(%1687, %1688) /* ty=Tensor[(13, ?, 14), bool] */;
    (%1689,)
  };
  %1690(%var_6551, %var_6552) /* ty=(Tensor[(13, ?, 14), bool],) */
}

def @func_14992() -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) {
  @func_14990() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */
}

def @func_6586(%var_6583: Tensor[(16), float64], %var_6584: Tensor[(144, 1), float32], %var_6585: Tensor[(21, 3), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], float64, Tensor[(16), float64], Tensor[(144, 1), float32], Tensor[(18816), float64], Tensor[(21, 3), uint32]) {
  %1704 = fn (%var_6573: Tensor[(16), float64], %var_6574: Tensor[(144, 1), float32], %var_6576: Tensor[(21, 3), uint32]) -> (Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], float64, Tensor[(16), float64], Tensor[(144, 1), float32], Tensor[(18816), float64], Tensor[(21, 3), uint32]) {
    %1691 = cast(-5.46042f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1692 = cast(%var_6573, dtype="float64") /* ty=Tensor[(16), float64] */;
    %1693 = cast(%var_6574, dtype="float32") /* ty=Tensor[(144, 1), float32] */;
    %1694 = cast(meta[relay.Constant][109] /* ty=Tensor[(18816), float64] */, dtype="float64") /* ty=Tensor[(18816), float64] */;
    %1695 = cast(%var_6576, dtype="uint32") /* ty=Tensor[(21, 3), uint32] */;
    %1696 = reshape(%1691, newshape=[]) /* ty=float64 */;
    %1697 = reshape(%1692, newshape=[16, 1, 1]) /* ty=Tensor[(16, 1, 1), float64] */;
    %1698 = reshape(%1693, newshape=[24, 6]) /* ty=Tensor[(24, 6), float32] */;
    %1699 = reshape(%1694, newshape=[16, 1176]) /* ty=Tensor[(16, 1176), float64] */;
    %1700 = reshape(%1695, newshape=[63]) /* ty=Tensor[(63), uint32] */;
    %1701 = @func_3001(%1696, %1697, %1698, %1699, %1700) /* ty=(Tensor[(16, 1, 1), float64], Tensor[(13, 9, 16), float64], Tensor[(24, 6), float32], Tensor[(1872), float32], Tensor[(16, 1176), float64], Tensor[(12, 7, 14), float64], Tensor[(1, 15), uint16], Tensor[(7, 12, 9), uint32], Tensor[(63), uint32], Tensor[(3, 252), uint32]) */;
    %1702 = @func_6104() /* ty=Tensor[(15, 16, 2), float32] */;
    %1703 = %1701.5;
    (%1702, %1703, -5.46042f64 /* ty=float64 */, %var_6573, %var_6574, meta[relay.Constant][109] /* ty=Tensor[(18816), float64] */, %var_6576)
  };
  %1704(%var_6583, %var_6584, %var_6585) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(12, 7, 14), float64], float64, Tensor[(16), float64], Tensor[(144, 1), float32], Tensor[(18816), float64], Tensor[(21, 3), uint32]) */
}

def @func_4133() -> Tensor[(15, 16, 2), float32] {
  @func_3269() /* ty=Tensor[(15, 16, 2), float32] */
}

def @func_14610(%var_14608: float64, %var_14609: Tensor[(18816), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(18816), float64], float64, Tensor[(4, 4), float64], Tensor[(18816), float64]) {
  %1719 = fn (%var_14593: float64, %var_14595: Tensor[(18816), float64]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(18816), float64], float64, Tensor[(4, 4), float64], Tensor[(18816), float64]) {
    %1705 = @func_10432() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1706 = @func_9409() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32]) */;
    %1707 = @func_5683() /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(8, 14, 12), float32], Tensor[(1344), float32]) */;
    %1708 = cast(%var_14593, dtype="float64") /* ty=float64 */;
    %1709 = cast(meta[relay.Constant][110] /* ty=Tensor[(4, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 4), float64] */;
    %1710 = cast(%var_14595, dtype="float64") /* ty=Tensor[(18816), float64] */;
    %1711 = reshape(%1708, newshape=[]) /* ty=float64 */;
    %1712 = reshape(%1709, newshape=[16]) /* ty=Tensor[(16), float64] */;
    %1713 = reshape(%1710, newshape=[18816]) /* ty=Tensor[(18816), float64] */;
    %1714 = @func_9588(%1711, %1712, %1713) /* ty=(Tensor[(12, 7, 14), float64], Tensor[(1176), float64], Tensor[(1, 144), float32], Tensor[(1344), float32], Tensor[(1, 15), uint16], float64, Tensor[(16), float64], Tensor[(18816), float64], Tensor[(21, 3), uint32]) */;
    %1715 = %1705.1;
    %1716 = %1706.1;
    %1717 = %1707.1;
    %1718 = %1714.7;
    (%1715, %1716, %1717, %1718, %var_14593, meta[relay.Constant][110] /* ty=Tensor[(4, 4), float64] */, %var_14595)
  };
  %1719(%var_14608, %var_14609) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(18816), float64], float64, Tensor[(4, 4), float64], Tensor[(18816), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen729/build/output.py", line 5934, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:01:00] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


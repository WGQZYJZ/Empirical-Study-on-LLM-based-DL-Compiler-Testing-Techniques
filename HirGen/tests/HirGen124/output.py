import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_32 = relay.var("var_32", dtype = "bool", shape = (4, 13, 1))#candidate|32|(4, 13, 1)|var|bool
const_33 = relay.const([[[True,False,False,True,True,True,True,False,True,True,False,False],[True,False,False,True,False,False,True,False,True,True,True,True],[False,False,True,False,True,True,False,False,True,True,True,True],[False,True,True,True,False,True,False,False,True,False,True,True],[False,False,True,True,True,False,True,True,True,False,True,False],[True,False,True,True,True,False,False,True,True,True,True,False],[True,True,False,False,True,True,False,True,True,True,False,False],[False,True,True,True,False,False,True,True,False,False,False,True],[True,False,True,False,False,False,False,True,True,False,True,False],[True,True,True,False,True,True,False,True,True,True,False,True],[False,True,False,False,False,True,False,True,True,True,True,True],[True,False,False,False,False,False,False,False,True,True,False,False],[False,True,True,True,False,True,False,False,True,True,True,True]],[[False,True,False,True,False,True,True,True,True,True,True,False],[True,True,False,True,False,False,True,False,True,True,False,False],[False,False,False,True,True,True,False,True,False,False,True,False],[False,False,True,True,True,False,True,True,True,True,False,True],[False,True,False,True,False,False,True,True,False,False,False,False],[True,True,True,False,True,False,False,True,False,False,True,False],[False,False,True,False,False,True,True,False,False,True,True,True],[True,True,False,False,True,False,False,False,True,True,False,True],[False,True,False,False,True,True,False,True,False,True,True,False],[False,True,False,True,False,True,False,False,False,False,False,True],[False,False,False,False,True,False,True,True,True,True,False,False],[True,False,False,True,False,True,True,False,False,True,True,True],[False,True,True,True,True,True,False,False,True,False,False,False]],[[True,True,False,False,False,False,True,True,False,True,False,False],[False,True,True,True,False,False,False,True,False,True,False,True],[False,False,True,True,True,True,True,False,False,True,False,True],[True,True,False,False,False,True,False,True,False,True,False,True],[False,False,False,False,True,False,True,True,False,True,False,True],[False,True,True,True,True,False,False,False,True,False,False,False],[True,True,True,False,False,True,True,False,True,True,False,False],[True,False,True,True,True,True,True,True,False,False,False,True],[False,False,False,False,True,False,False,False,True,True,False,False],[False,True,False,True,False,True,True,True,True,False,True,False],[True,False,True,True,False,False,True,True,False,True,True,True],[True,True,False,True,False,False,True,False,False,True,True,False],[False,False,False,True,False,True,True,True,True,True,False,True]],[[True,True,False,True,False,True,True,False,False,True,True,False],[True,False,False,True,True,True,False,False,True,False,True,True],[True,True,False,False,False,True,True,True,False,False,False,True],[True,True,True,False,False,False,False,False,False,True,True,True],[False,True,True,False,True,True,True,False,False,False,False,False],[True,False,True,True,False,True,False,True,True,True,True,True],[True,False,True,True,True,True,True,True,False,False,True,False],[True,True,False,True,True,True,True,False,True,False,True,True],[False,False,False,True,True,False,False,True,False,False,False,True],[True,True,False,True,False,False,True,True,True,False,True,False],[True,False,False,False,True,True,True,True,True,True,False,True],[True,False,False,True,False,False,False,True,False,True,True,False],[True,False,True,False,False,False,False,True,True,False,True,False]]], dtype = "bool")#candidate|33|(4, 13, 12)|const|bool
bop_34 = relay.logical_and(var_32.astype('bool'), const_33.astype('bool')) # shape=(4, 13, 12)
output = bop_34
output2 = bop_34
func_41 = relay.Function([var_32,], output)
mod['func_41'] = func_41
mod = relay.transform.InferType()(mod)
var_42 = relay.var("var_42", dtype = "bool", shape = (4, 13, 1))#candidate|42|(4, 13, 1)|var|bool
output = func_41(var_42)
func_43 = relay.Function([var_42], output)
mutated_mod['func_43'] = func_43
mutated_mod = relay.transform.InferType()(mutated_mod)
const_75 = relay.const([[[1.748880,7.492220,-4.629257,1.043011,8.183222,9.208584,8.768578,4.358092,-1.680444,5.945045,5.729146,5.081195,-9.395451,8.253873,6.922870,-1.202387],[-1.956569,-7.556728,3.162226,-7.431470,0.221430,-5.498498,-7.915458,-4.929945,5.745752,-9.012280,9.869905,-3.465681,4.478555,3.788029,1.606450,-8.568038],[3.256107,-9.131087,-6.215280,-1.953426,-2.927328,-9.058591,-7.311413,3.534412,7.810091,-0.276504,-9.635995,-2.243382,-4.999633,-6.921252,-0.001658,2.617807],[-5.729580,-7.801736,-1.127415,-0.455424,5.303307,-5.765695,3.580952,9.227447,8.211102,1.810452,-0.721810,-7.685879,9.819792,-8.761711,7.283698,-4.448906],[5.488636,-4.490614,7.878007,-6.664079,-6.337504,-5.407394,4.583682,-4.713461,-3.606942,-7.797653,2.896609,9.735975,5.274210,-5.515606,-6.393790,-7.742581],[1.871287,0.790335,5.512847,3.835364,-2.743683,9.000772,6.663513,7.299895,-7.630519,1.171237,-3.138521,-6.799018,-3.033986,-8.616739,8.297653,8.428927],[5.155901,4.746224,-6.366807,-0.116635,3.588646,-1.439156,9.561282,-1.330111,4.120960,-8.423214,-3.508190,-1.968655,1.043769,2.659811,7.222310,-1.447300],[-6.186983,-8.223739,-3.813787,2.110860,-0.215726,9.687080,6.949365,9.235781,9.478417,-9.453326,9.462687,-9.544187,2.359049,5.689583,-2.142895,-9.083387],[-0.842593,-2.882859,3.582963,-1.093517,7.987660,-9.949290,1.584613,-0.872615,0.369097,-8.201628,1.524388,8.417290,9.363899,7.775148,-4.407979,-0.828999],[-6.090586,-0.450050,-5.467175,-2.332102,-8.800098,8.699137,-5.823984,-6.416385,-4.866730,-4.821223,5.332762,3.259452,1.285960,8.447123,-0.665219,-3.403431],[-7.536502,-5.228013,0.672838,-6.886411,0.568040,0.173354,3.205077,5.224472,-8.875532,6.532805,-0.623852,-3.880315,-6.428636,8.636455,7.179625,4.450576],[-0.290770,4.877075,-3.993740,4.389313,0.420211,-7.246620,-8.001744,-5.625145,0.273622,1.995093,-2.488682,6.400555,8.779451,4.668603,-0.749853,-3.420607],[3.611622,-7.263841,9.048317,5.229154,-3.065569,-3.696420,-1.778856,-8.931163,-1.963173,8.395577,4.571692,7.044332,1.888817,-5.245474,-5.632818,7.721571],[-7.255311,7.658852,8.132794,-3.044849,-0.759499,7.829981,1.225688,4.198815,3.774370,8.890787,1.143543,1.538721,4.447928,9.156930,-6.580099,3.843901]],[[-5.129623,-3.473803,-2.902545,-3.863506,7.193404,8.462372,3.970029,6.245565,8.212273,2.321900,8.517263,5.606405,-6.417715,-1.065166,2.536830,7.299415],[6.193764,-4.675409,-3.675422,-8.990177,-4.513680,1.738125,-7.476450,-4.426598,4.422642,2.579940,-3.274646,9.093960,8.607315,6.822707,-8.982673,-6.568713],[-5.392203,5.366554,5.557510,3.406147,9.275491,7.363038,5.947991,0.865359,-0.410941,0.989892,2.665797,0.935948,2.811181,-3.341795,-5.133993,1.060374],[2.817149,3.816906,-9.263337,-4.061352,1.846533,-3.254589,1.137269,7.416959,-4.744121,-5.416574,-6.508947,-8.091743,-7.517860,6.573562,9.027444,4.463826],[9.976233,-6.619646,8.774608,7.672024,-4.581424,2.933425,6.144181,6.573648,-4.900712,4.798208,-1.512298,-2.830678,-5.886516,0.920522,-6.834827,-3.875631],[4.559009,7.168606,2.380039,-8.325005,-8.294505,7.953096,-7.360554,4.127119,-8.393233,2.026386,-3.394413,8.654581,6.149791,5.216990,-6.581882,8.383031],[-1.610177,-0.513658,8.893614,6.622470,9.901324,9.008896,-5.878337,-0.754182,-8.238663,1.138352,9.832991,5.375310,6.203373,-3.784454,7.816975,0.862288],[-6.203293,9.065553,-9.785558,-6.281917,-3.132910,-9.940179,-7.183007,7.034947,-8.951437,-1.857259,-7.526141,2.393239,-2.136857,3.323043,4.238038,9.943875],[-9.428905,-9.301582,1.527803,-6.958986,-7.039164,-9.404683,3.559986,0.675029,-3.602629,0.294582,-9.409635,-2.753218,-3.121910,-7.440205,3.428783,-2.003554],[-6.701078,-1.345963,3.434453,3.362595,4.630147,-2.589867,-5.674967,7.524736,4.996451,2.870067,4.751678,-1.251034,2.336172,6.471741,-4.850500,-9.739699],[-9.813874,4.611469,-5.000345,-4.396705,-7.509666,-2.456395,-9.054395,-6.245926,8.118845,6.723814,6.198697,-3.595680,-2.128258,1.703976,1.711043,-8.709825],[5.098955,1.761016,-3.684811,7.538035,5.857754,0.522725,0.839736,6.134578,7.618969,7.165564,7.555497,0.044175,-9.755255,-0.612097,8.605506,3.477060],[-4.247816,-7.177263,-8.643134,-9.010017,1.551266,-7.223363,9.818074,9.430613,-9.755141,1.902727,4.343107,-7.714169,-4.566261,3.915354,1.792073,-8.891073],[-2.625675,-5.484151,-2.309247,-1.712891,1.740107,5.256961,-9.886369,5.707598,7.231091,-3.794763,-8.109656,-1.880208,-1.461904,-0.208411,4.459143,4.679676]],[[6.472160,-0.623162,-4.733521,2.545598,1.267789,-0.559767,-5.999866,4.698340,1.656131,-2.287746,-6.812853,-6.760696,-2.189139,-0.204263,7.072138,9.520114],[7.422547,-9.399576,-2.787816,7.299407,-9.715598,-3.701129,-1.261321,8.727272,8.452531,9.007391,-8.126851,-3.908168,-9.017076,-8.072140,5.888162,-1.226348],[-4.249133,-1.796846,-1.245127,-2.760692,-9.520228,4.298416,-0.778201,-9.665901,-9.580213,2.047505,6.589315,-4.317960,-9.681610,3.945109,-5.983992,9.581215],[-1.401456,-5.535918,9.888263,-0.518149,1.575603,-9.921357,-3.805469,0.395603,-1.547159,3.741148,2.857766,3.127053,0.489332,1.904106,-3.691186,-1.864919],[-9.589552,-3.912999,0.993305,0.005769,-7.582471,1.013598,-9.978902,-4.432454,5.665867,-9.718858,5.346661,2.519049,-4.460470,-1.963041,8.053376,-0.621469],[5.556291,6.170725,8.412651,1.893133,2.022048,-3.828318,-6.257687,-4.678836,-3.115200,-2.166012,4.488256,-9.787099,-1.766775,-5.358750,9.908590,5.079486],[7.059588,-8.217480,-9.942061,6.103242,-7.429847,1.897199,-8.801386,-4.530602,9.787877,-9.436028,-6.541291,-6.329624,7.905928,-0.665538,1.715005,-1.109640],[1.971800,5.838377,-1.968098,2.812402,-7.382445,4.608793,-9.917555,-5.500001,-8.107633,-8.569778,0.637097,9.406730,-2.055559,-2.627604,-6.606545,-8.711857],[3.773716,7.660046,-9.473886,-7.416030,0.070111,8.923060,6.933529,5.861762,-3.839573,5.536173,1.330520,6.697810,-9.106611,8.869976,-4.193184,-2.399131],[-7.953890,4.796481,-7.211031,6.487544,-3.805486,-9.810031,-0.445913,5.219664,9.392154,0.822469,-5.847280,-8.162009,-2.272144,5.076224,-5.625202,-5.138665],[1.398308,7.778857,0.848370,3.827351,-4.499458,9.868837,-4.458890,7.257631,9.073515,-0.467806,6.126213,0.315090,-8.435302,-5.083917,-3.748700,2.198008],[0.716725,-6.439433,-9.228299,-2.723646,2.622411,2.342539,-2.850084,0.750661,7.976341,3.469490,6.974512,-2.712102,6.488023,-8.399843,6.224711,7.751661],[-4.259449,7.446294,-6.602934,0.913778,-6.189123,5.735586,-2.415655,-9.622282,-5.832455,-4.872487,-2.010674,8.918671,-2.652521,-7.039494,-3.564125,-1.894449],[9.635376,5.364437,0.605913,4.513449,3.442022,-6.660892,4.997050,-2.370455,3.351179,8.500093,6.418839,1.773768,-4.745177,-1.458157,-7.024746,-2.005065]],[[-7.644497,3.920915,-4.318516,9.942951,5.906790,5.590664,5.967643,-2.324448,6.614247,-4.952319,-6.064069,-4.559798,1.649566,3.488730,0.103676,3.648220],[8.027510,7.705426,6.346434,-6.801922,-4.087507,-9.393534,4.200296,-2.748227,-9.428693,5.020183,2.210857,-3.960471,-1.071251,-4.016730,3.196975,-0.342871],[-5.816748,-6.387777,-9.212314,-9.569232,5.249504,-0.965144,6.665709,8.004401,-1.036485,-4.016628,-6.202532,-6.975906,5.251010,-7.533658,3.236881,1.526979],[-7.036704,3.605398,-0.773177,7.578449,-9.809246,-9.231304,3.046534,-2.248338,4.569067,6.441118,2.494204,-1.628916,-3.640808,0.808312,3.037715,4.358497],[-8.969208,7.441711,-7.232217,-4.634238,-0.501163,-4.334228,-6.628467,6.299748,9.597736,3.592753,5.826851,1.430152,-8.600207,6.409019,-2.588804,6.747320],[9.887650,1.826562,-4.001032,0.007414,1.105648,-3.450288,-1.444822,9.028327,-8.982614,-7.311716,-3.166686,9.673643,-5.257961,2.001625,1.167229,5.868811],[3.227919,-9.248974,5.070274,-8.147066,8.380161,-5.311892,8.636272,1.935576,5.195908,6.207329,-1.609199,-8.018335,0.281736,7.861796,1.227344,0.594341],[9.565925,-3.347249,9.150439,0.672689,9.129523,-5.641159,2.528452,-4.614170,5.734680,8.522910,-0.766465,-7.336343,8.513276,-1.397886,7.350384,9.666765],[5.253993,5.445505,-2.504105,2.177305,-1.002736,-1.912133,6.050649,-1.418930,-8.412944,-3.916835,-4.347922,-6.902761,-1.094484,-5.252864,5.488771,5.353127],[4.587622,2.411385,2.524437,3.842041,0.664063,-9.061401,-3.423104,7.991187,-8.997543,4.038612,3.955953,-0.968740,-0.005867,4.055732,-2.809346,-0.611926],[3.861922,9.925754,-8.938021,-3.854302,6.091734,-6.505343,-1.855219,-1.161372,-7.945076,1.230196,-9.525911,8.591722,-9.219218,-2.149165,9.529093,-1.171741],[-3.965067,-5.984961,-4.139608,-8.305903,7.891136,2.344754,4.938310,-1.080746,5.960059,1.447963,5.324599,-8.402385,6.587984,-5.457759,2.542576,4.965304],[-5.419561,-0.245426,-1.116727,-1.065269,2.255939,8.080909,-8.499244,-1.257921,1.347477,8.280930,3.098462,-3.508998,-0.517375,4.035599,6.262739,3.508994],[-3.465343,-3.748723,3.731046,-4.598556,-2.284701,4.556328,5.928958,-6.393913,9.308201,7.267169,9.357523,8.435821,-0.304241,4.098822,1.438274,-5.928447]],[[-1.108580,-7.581599,2.902055,8.979677,5.874719,-1.448114,-4.765727,5.490564,-0.833224,-5.542824,4.894860,7.938961,8.380383,4.633236,-0.566384,-1.452563],[6.527598,-2.518148,-0.297418,-7.111799,-4.137766,-6.346559,-2.937345,-6.586297,8.535059,-7.220129,-5.914142,-0.056998,3.522649,-4.678251,8.574201,-7.769218],[9.152535,-8.678475,-9.607749,3.710458,7.896272,-5.462323,-4.968774,8.638427,1.690143,-7.781410,7.547943,1.848123,-4.963582,-2.061254,8.701641,-5.188143],[6.121818,-0.739089,-4.750170,-4.534151,3.445899,2.239509,5.238049,3.913175,-0.767655,-8.388771,9.950360,-7.645376,1.398858,1.089640,-8.007961,-9.931225],[-4.947544,1.449076,-6.843874,3.494595,-6.481822,3.406632,9.300001,0.889613,-3.591138,2.897872,6.349838,-5.376101,9.815811,5.350573,8.567694,4.823521],[-4.372147,-3.679446,5.552777,9.715102,-6.936319,2.069231,7.533174,-1.116634,7.707977,7.257005,5.075275,6.999912,-3.992390,-9.757735,-4.575134,5.708936],[1.655506,-5.488495,5.115089,-7.244310,-1.131229,2.931403,-6.743560,-2.904688,-8.816521,3.266472,4.895583,-6.449170,9.780654,2.731776,-5.864397,2.805808],[0.442970,-8.488607,4.982711,-5.326116,5.141505,5.490699,9.391189,8.591455,-8.002677,-5.790789,2.984281,3.872912,3.963260,5.597280,4.873984,0.446101],[-5.302780,-5.275178,7.268872,3.412969,-7.260295,-8.569085,-9.968831,5.805220,-9.323110,-1.843179,-6.028705,7.639906,3.600545,-7.141892,4.612005,1.483369],[4.876287,1.956444,-7.768727,9.195201,1.759448,9.581157,4.197845,-6.566110,-8.478138,-5.448037,-8.669895,-1.636012,-2.798377,3.102621,1.876242,0.973578],[-2.017153,5.260058,9.933175,9.994321,-2.321611,2.119987,-1.089842,-5.577644,-7.728312,6.415231,-6.539944,-6.974396,-9.646503,-3.601571,-1.730181,6.312053],[-8.859529,-5.578083,4.646998,-9.458064,-8.389607,-0.010309,-9.241650,7.872982,7.441030,1.159719,-4.978187,-6.869871,2.819917,-2.564677,-9.762438,-5.044620],[-4.752620,-2.075237,5.085974,-7.330714,-7.370127,-4.792301,1.932276,-7.815799,-2.980769,-0.370181,8.966994,-2.618603,3.241779,7.240253,-0.825146,-8.302541],[-0.501397,-8.817645,9.398712,9.625719,2.370564,-5.755423,4.210362,7.711817,4.912161,-6.075053,-1.064508,1.853079,-4.573632,6.092247,2.823902,4.005804]],[[0.478128,0.225917,-0.099473,-7.587424,-2.558517,-7.777724,8.045471,0.968143,0.089157,-7.880404,-4.632538,9.185023,-1.306510,9.761101,-8.995444,3.940673],[7.396641,4.458262,4.952788,5.351888,-2.628109,5.215896,-0.047514,-2.502395,-2.820357,2.796198,8.630847,8.083613,-3.078623,8.758637,-1.834828,-3.961461],[6.293232,8.487578,3.578698,-4.375132,6.424199,-7.793937,-8.091369,3.694092,4.653696,-8.618186,-8.282346,-1.221883,-7.206620,5.009354,-2.375862,-2.272688],[0.975191,-5.660489,4.755214,3.350109,-6.708626,-9.008699,-2.739239,6.777462,-1.756688,-0.888591,-8.891735,3.832219,-4.694957,1.887859,-3.762303,-2.028616],[9.879824,8.027612,8.913847,7.499704,-6.837235,7.274735,-8.287142,-4.349874,-6.155608,5.287971,8.569208,5.179325,9.075969,-7.145116,6.910626,-0.654268],[5.016567,0.896842,-4.441631,-3.536943,-0.415516,8.233292,-3.132383,0.926375,1.666073,1.293408,-4.467012,-4.001322,7.007706,5.194959,-4.596527,-8.241123],[4.842750,-7.047242,-3.594623,-7.431372,-3.104132,7.552486,5.826341,3.160074,1.782669,5.624613,-6.176083,-1.587707,-2.922851,-1.659360,1.151160,-6.288701],[-5.790964,-7.178688,0.333895,4.795152,-3.915527,0.766301,3.004885,-5.580331,0.289388,-7.558980,-3.611230,-9.080685,8.024137,9.034432,0.345310,7.127869],[-8.270623,-1.361775,1.077830,-0.382960,3.965352,4.148272,-7.066621,5.658359,-6.412293,3.660372,-7.560600,4.955119,-0.670247,-7.809689,4.145522,0.701846],[1.025330,1.749878,8.075903,7.212931,0.252861,-6.888039,-6.736649,-8.155422,8.506566,8.024497,9.560935,2.204782,8.017134,4.334469,-9.996193,4.641593],[-6.803265,-0.826667,-9.132804,-0.647843,-1.245082,7.528203,6.714694,4.667797,-7.819841,-1.672719,-5.335479,9.049808,-3.302736,-9.729606,-9.992727,-6.044872],[-4.462535,-3.498606,-3.504908,8.312389,5.385772,-8.310156,-3.652475,-4.724374,-1.857600,-0.504812,-3.270302,5.098933,-2.883557,1.391955,7.309638,5.698758],[-6.614108,-1.982171,6.495514,-2.233988,-7.329170,5.423345,-9.411631,1.365283,-2.569193,7.864916,-3.905373,1.103936,-0.989260,2.994876,0.103582,-3.771622],[-0.011162,-8.984682,-5.030757,5.275465,5.322715,8.390351,-6.090384,8.576415,-1.280853,2.403379,5.478149,1.499604,-9.813007,1.067913,0.145732,2.783637]],[[-9.642171,7.547676,-2.822819,3.254025,8.160981,-1.919745,-5.392310,1.668108,-0.025111,3.984009,2.754977,-6.444031,7.161740,5.113150,2.575030,-6.416113],[9.690035,-3.815835,-6.680108,0.944783,-9.407074,3.805725,9.408798,8.393987,-7.045038,1.271526,2.762120,8.839380,7.789633,3.171312,7.519261,-3.207799],[-3.620103,5.685255,2.462148,-2.025232,-7.352870,-4.396108,-9.727450,2.518580,-8.068143,1.526737,-5.527264,-5.272967,5.060138,-5.242186,1.764224,3.233302],[0.336923,1.494575,-2.713606,-9.906560,7.915140,-1.951087,-9.862609,-8.475346,7.026199,-6.763954,-3.860851,7.117707,7.376471,8.420916,3.164721,-5.381156],[6.107778,4.859488,3.014708,-6.447964,-9.440986,3.031366,-7.967293,1.374130,0.886032,-9.335341,-6.794593,0.303605,4.314537,-7.142360,-1.679770,-3.255411],[-6.481980,6.732026,6.491315,0.490159,-9.773629,5.841910,-2.725734,-9.907044,-2.055228,-6.052330,6.000716,-0.248840,-6.980598,2.677030,0.883003,-5.593401],[3.574545,-3.879739,6.944432,-7.761702,-3.291782,-3.599927,-5.052145,-8.262709,6.221479,2.537697,-4.833666,-0.447764,-4.184668,0.280522,0.290880,-1.519852],[4.756125,5.862350,-5.204851,0.154854,2.443112,3.741769,-7.748026,8.938398,-0.252146,-8.798549,-8.137139,5.016636,-9.741352,7.148457,-8.247380,-2.050871],[-4.841883,-4.138441,8.642038,1.808116,-3.209756,-9.991695,-4.778608,-5.038156,-1.665926,1.168869,0.745639,-2.885410,-4.207504,3.004056,5.540835,-5.125986],[-4.023799,-7.380961,-4.864087,-9.775049,-5.306224,-9.228589,-1.465045,-7.454738,3.871221,-8.331783,-3.687083,6.239851,-1.865252,-4.923832,-2.963934,3.936756],[7.359215,2.742808,3.417422,-4.036975,-6.184588,-7.846903,-4.790299,-2.554678,-2.544173,-1.797812,4.699358,7.604349,9.681144,0.185009,9.106691,-5.767704],[-7.794818,-7.014958,5.559197,4.395128,1.451069,1.126873,-2.271049,-0.273868,-2.043471,-9.199116,-2.130382,4.599606,0.820731,7.570604,0.709479,8.174436],[4.898662,1.423908,7.783821,5.220048,-5.914482,-8.001900,-8.535049,8.789531,2.909144,-4.728985,-1.090376,2.164970,-6.799751,-6.169953,-2.743568,4.796159],[7.825807,7.503987,1.859509,-2.545219,6.246048,8.006442,3.677242,-2.665428,-5.508272,-6.025319,-0.273293,-0.519504,-6.139161,-4.547919,-2.520111,2.834958]],[[-5.218317,-3.308695,1.277391,2.720012,1.960074,-4.487594,4.909951,-6.950823,2.739990,-6.752417,-8.131265,-1.600558,4.729574,-3.411720,-5.081588,-6.026943],[-0.054612,-7.865601,7.158482,-0.140352,-1.159321,6.237269,3.018864,0.412072,-5.605489,-6.581411,-8.531820,1.436337,7.334234,-4.517393,7.465527,-0.794107],[6.212978,7.734268,-4.999844,-7.263462,-2.659856,-1.545698,3.510418,-6.916104,-8.057777,-3.811988,2.030930,-5.162628,9.872876,-2.821455,5.294841,-4.425828],[-1.971281,7.953697,1.923791,7.635662,6.955529,1.308054,-4.401028,-3.155434,-6.171915,8.466340,1.131983,-4.385580,-0.495418,4.462659,8.166964,7.026090],[-5.385631,-5.682002,-5.338503,9.148771,-2.054688,-4.294640,6.268817,9.383918,1.602645,4.121928,-6.220494,-1.920948,2.342580,5.410525,0.907839,-6.893356],[4.202426,-6.062451,-4.756614,-6.514100,-7.029508,1.394031,4.762238,-3.201976,-8.674108,8.142680,1.605439,6.864204,-2.200804,-3.651822,5.474855,0.653350],[5.774284,-7.114370,1.538251,-0.466075,3.436983,3.644872,-0.201528,-4.824955,-9.351229,-3.065086,4.615217,-2.427988,-6.253428,8.216482,0.855276,-6.564122],[-3.498033,-8.310731,9.754529,-6.614297,5.015759,-1.044158,4.975454,-8.935037,-8.539240,7.918274,-7.702465,2.888953,-1.489147,5.607565,4.316988,5.118524],[-0.328020,-8.423313,-6.072735,1.021764,-5.011523,-5.717884,-6.684573,1.653209,8.878251,-5.452853,-6.333601,-2.079035,-4.574268,-1.831728,6.059952,-7.926894],[-4.935198,-7.751538,0.710210,-9.517832,8.060287,1.947347,6.752696,-5.442517,8.067855,-6.709728,3.541154,9.120407,-9.153575,3.860305,0.260729,-0.741646],[-3.100271,-1.944439,-3.697231,-2.943331,8.887885,7.459824,-5.905067,6.625680,-7.341934,-8.254421,-6.999030,9.889556,3.772048,4.491462,-6.335802,-8.725336],[-7.871842,-7.375155,4.360041,-5.409499,-5.571859,3.872989,8.204174,5.946420,5.475510,3.070671,7.046024,-3.096771,-0.984788,0.340581,8.731242,3.435383],[-0.107879,-9.757616,-4.196455,9.767382,-6.437367,-6.692278,4.284538,0.597115,1.214338,4.617427,-9.883457,4.244336,9.685653,5.200508,8.383377,-4.913911],[3.582561,6.647142,6.468819,-1.021945,-3.833076,3.199926,-7.271341,-3.667787,-9.625837,-7.908519,3.998240,7.716737,-4.821797,-0.294275,5.144831,-6.803547]],[[0.575903,8.156226,-5.581498,4.348625,-1.829196,-9.691217,5.411187,-5.516988,-5.330926,-2.101866,-9.526065,-1.654145,9.412503,-0.967619,1.499440,2.895307],[4.625893,3.936935,-7.726007,-5.095424,-3.311385,-9.912385,1.723384,1.212753,1.936215,6.140677,7.478515,5.365910,-5.991555,8.499093,-0.242765,2.318680],[9.709240,1.831729,6.888152,-5.773154,-8.767589,7.668056,7.572989,-1.806262,7.923735,7.359242,1.996799,2.145064,-4.351413,-5.171421,4.774712,-3.774994],[-6.506262,-2.715553,6.202070,3.568441,3.178372,7.847802,9.580525,-0.787646,-0.130696,7.079569,-9.692298,1.134328,-8.589177,8.258827,9.152783,-1.159273],[2.542038,8.800223,-4.998923,-3.313755,-3.057757,-7.886597,7.882261,-2.682229,-0.907426,-9.516281,-5.421841,-1.825776,8.546031,-4.064491,0.189443,-3.252435],[7.373067,-2.527094,8.385826,-3.652303,-3.083868,1.474094,0.402238,0.355970,-7.007797,-4.319794,-0.659171,0.506993,-5.117510,-8.354209,-2.551372,-9.809991],[8.291707,1.708516,9.566957,-5.245361,3.142084,-4.007857,9.712028,-0.590242,2.341198,-8.581770,1.501429,0.516257,3.023866,-9.066922,-3.055254,6.567174],[7.188697,-3.840624,-9.561132,-7.037651,3.662558,-5.101330,7.462990,-8.745362,9.545206,-3.850328,-8.955686,-4.279292,0.620809,2.653801,8.990222,8.777378],[-6.945938,-2.160631,-5.162248,-1.274850,9.748438,-3.627903,2.657124,1.061355,2.574007,-9.730246,2.329899,7.819673,6.484269,-2.828515,-0.952672,8.511850],[-1.173275,7.111501,-9.658339,-4.388982,2.690279,-1.925647,7.013207,0.056492,9.663184,-3.191449,5.112787,-4.421858,-5.682821,5.346551,-4.596546,2.686320],[-1.614411,-6.584539,-5.578991,-4.138109,4.999087,5.162945,-2.123534,-8.210652,-7.475345,-4.463141,-7.954643,-9.209225,-0.417276,4.592300,-8.550644,2.977815],[-6.132944,6.677311,-6.170472,-3.567157,5.368499,-4.870587,-3.553149,4.135971,9.155792,-8.525722,-7.234237,-4.002899,4.047824,-4.515747,1.018769,-2.324943],[4.150948,-4.148231,-0.916094,1.639073,-9.960486,7.509978,-4.084296,5.679052,3.521272,-6.969084,-2.849323,-0.873137,-5.501053,4.392344,-1.510976,7.471353],[-5.742687,7.155191,-8.049906,-9.971247,-4.259441,-1.135650,-9.044955,-8.276515,7.919686,-8.954149,5.111553,0.829746,5.833801,7.638363,7.016204,2.126742]],[[4.605071,-3.273468,1.785961,-3.774322,-8.472999,4.703026,4.756933,-9.755081,-5.531883,-2.496263,4.637180,2.370170,1.566846,-3.075768,-3.679662,-3.148340],[-8.553948,0.077463,8.899918,5.000057,-1.047689,-7.963191,-6.548215,7.156825,0.014629,0.038266,8.820102,5.815155,5.273089,9.056953,0.629447,6.467768],[-4.247205,-6.673632,6.634497,-5.718058,-6.395881,8.150490,5.314392,7.445475,-8.541824,-2.947715,3.333555,-6.287489,8.141034,-7.324919,5.252049,2.107567],[3.732094,1.139341,6.078570,-8.849053,7.684420,8.350467,-7.539352,3.922609,4.775273,4.182065,-8.590245,1.888309,6.859760,-4.850235,-1.864372,2.681373],[7.597197,-2.487467,-7.696049,-0.649900,-3.015508,-0.037803,-9.953136,2.270299,3.828101,7.249526,7.047289,-9.052159,-0.119852,0.841648,-1.583683,-3.100829],[-6.339918,-6.394326,-9.140519,-5.209951,-9.533267,6.450460,-0.413597,-7.559861,7.552264,3.693614,7.087702,-0.892398,5.729598,-8.359687,-2.351995,5.718564],[3.418319,7.539650,6.015405,-2.781378,-8.192530,-5.228948,-6.631815,7.065317,-2.727946,-6.154412,-0.466097,-1.863202,4.828089,9.194814,4.551417,-2.234282],[-6.831723,-7.178111,1.485737,-1.009857,3.929758,-8.341563,6.998084,6.395997,5.387357,2.206813,-6.898397,1.343458,-7.254164,4.771871,9.531012,-4.874357],[5.487216,1.304957,1.850553,2.788867,3.114233,3.451785,3.056004,-3.241328,-8.565399,-2.123249,9.370426,-7.065246,-8.936123,-6.727191,9.539428,0.775252],[3.991399,2.782850,-9.431166,5.469094,1.636197,1.018967,-6.111441,3.963580,8.104681,2.659310,3.629417,3.000356,-6.360957,6.798111,-4.708672,-8.884408],[-1.160357,6.690249,-8.999342,-6.796817,2.456384,-4.757673,2.100037,-9.868452,8.186351,-4.657825,-4.583616,-8.622741,5.133776,-8.347639,6.381218,3.120336],[3.461037,-6.344105,-9.858314,9.099803,-3.525909,0.218054,6.655596,4.005474,4.039889,0.510035,2.072550,-7.815578,3.888992,-5.540094,-8.491732,-6.714032],[-5.590703,8.219400,6.538774,-3.985211,5.183778,-7.888231,-6.387752,8.696959,8.652693,6.832239,7.187030,8.981481,-0.952422,6.388626,4.945362,-3.901637],[-3.620705,-2.019451,-4.285683,-3.636118,-1.019225,-7.216515,-3.922827,8.296389,-4.357375,-6.456566,-2.927548,8.592198,8.530467,1.280991,-6.859995,8.857386]],[[-9.779260,4.020682,-4.473143,-9.524224,-0.004584,3.139100,-7.511845,-6.434539,0.348906,-7.725845,-0.377069,3.639190,-8.999758,-7.729876,-4.674631,-3.048119],[-8.538162,-4.138837,8.267811,7.670394,1.763235,-5.755483,8.443231,1.417634,1.361881,6.437989,1.697400,5.157831,5.291231,-3.688308,1.320331,-7.919587],[-9.106318,6.471683,7.694637,7.672994,8.504737,4.733571,-3.926032,-9.616839,-7.192730,8.791013,-7.617340,-2.745401,1.737346,4.882209,1.711944,-9.753990],[-2.967750,6.581796,-0.401040,3.487669,-7.979798,6.019683,2.763830,-0.557831,5.547281,0.030853,-8.536680,4.263460,-8.736006,0.372096,1.959314,-9.087202],[2.971202,2.472153,-0.347302,5.839951,4.396559,-9.931804,-7.509221,4.735963,-5.520011,7.930271,-2.899471,-5.906435,-3.705930,-2.695144,1.979230,5.479142],[-8.431245,9.929562,3.875399,9.350157,4.474106,2.948038,-1.250290,8.693781,5.844343,5.207354,2.544196,2.278844,4.275566,6.925538,-3.301722,5.942735],[-1.860026,3.476194,-2.224605,-3.296231,-4.826342,1.754461,-5.327368,-2.754782,-4.136661,4.696329,1.000677,8.252340,-7.015628,-3.760820,9.726519,5.317894],[-5.387874,-2.205204,6.889297,-1.711529,-3.199527,-8.899079,-7.445624,5.794332,2.368126,-1.628483,3.596423,8.166069,0.736372,-0.801552,-6.440837,-6.069750],[-8.966593,3.057690,0.664816,-2.405187,8.973192,3.212952,9.740072,-2.146051,7.141868,1.599286,-0.827941,1.522896,-7.340728,8.150012,3.499797,5.063372],[-1.309821,-0.546673,-2.660769,6.910966,9.559717,1.127015,7.695416,8.111099,5.977330,6.659748,-5.256878,0.431488,-5.899509,6.676132,-1.600291,-0.782814],[6.458940,-2.635399,5.406938,8.622663,-4.078578,8.150171,3.315306,1.668618,3.661865,-1.363605,2.812946,4.295074,-8.488564,4.050091,7.662471,4.682582],[-4.058954,2.166325,-4.904446,2.259235,8.607254,-9.435586,6.802840,3.996828,6.910800,-1.715205,4.588608,-2.256618,-2.760881,-0.614124,9.597463,-4.204614],[-5.030320,4.936998,2.424003,9.716275,6.081831,9.482037,9.147239,-5.662244,-7.182062,8.635019,-9.329929,-8.197558,-3.544153,-3.912982,-7.248282,8.021537],[-1.756166,0.784149,0.393173,3.503341,5.838696,-3.542710,1.559939,8.148307,7.192879,-4.356458,-3.990569,8.642397,0.710576,0.916342,-3.597824,-7.990582]],[[1.002156,-1.322503,1.432527,-1.221244,-4.276673,3.810749,3.343537,-3.167380,-3.083960,-5.858931,0.837213,3.434642,0.716929,-8.610993,6.773289,3.368265],[2.177297,-9.185526,8.899805,8.800944,5.563071,0.749043,7.782112,3.021645,-8.539518,-0.538682,1.746629,8.235142,-9.321108,2.630522,-3.828610,3.401808],[-8.878747,-1.564468,-9.613090,-9.277052,8.862801,-1.823070,5.368334,-8.103699,4.285078,8.870010,-1.508869,9.152857,-9.431147,-7.791756,1.831004,-0.951736],[3.706548,2.997669,-1.574449,2.590637,-3.532336,-2.391155,-3.674002,4.448278,-2.942807,-0.348074,7.374811,3.330272,-8.688052,2.241788,6.125313,-0.456951],[-7.941851,-2.317691,0.919058,-8.020782,8.959161,7.572449,5.348462,2.898610,9.179099,-7.389848,-1.508323,-6.827005,-9.719510,-1.484910,-6.762907,-6.986813],[3.092829,3.900994,8.174981,-7.296188,3.223426,-0.081312,-8.660816,-9.294643,9.555493,0.011882,-9.888152,7.402009,9.152626,3.480695,-7.221590,-3.812227],[-5.314583,-9.841079,-2.529732,3.217514,-0.824358,-5.996581,5.366874,-3.927245,-6.969005,-9.931961,5.305810,7.902374,-6.393653,-0.647148,-2.189574,-0.155070],[5.574603,-7.643348,8.923600,2.383930,2.293599,-9.722853,-4.898740,-0.887148,-7.075682,1.986336,-9.475506,-2.447073,1.035315,0.460564,-7.055054,4.101373],[-3.265690,8.136025,5.133150,6.637114,-5.686367,7.551270,-5.860958,6.013766,9.966462,-9.599792,2.658200,-3.858085,-4.046327,6.564569,4.685044,-5.290503],[-4.246334,2.871626,-2.852076,0.108964,-1.063432,9.601849,-5.093548,-4.776494,8.593172,8.427085,2.446898,-4.137640,2.146440,-2.170338,-3.936979,-6.865063],[-6.298426,-0.147418,-2.872632,-6.294183,-3.346031,8.168162,-0.819696,-3.986720,-1.850221,8.539154,4.753918,3.724460,8.724193,5.647258,-4.301325,-0.453124],[4.237295,4.459811,-2.334783,0.845323,8.252228,4.116156,-2.700187,-5.960782,6.054984,-6.321319,2.024197,0.695103,-7.594445,-5.382582,-0.448022,6.485199],[1.773824,6.583847,-6.206337,-7.173026,4.107908,-7.717384,-9.512322,3.765132,-2.623594,-2.172909,1.037590,-6.902093,5.780983,0.840734,0.219233,4.385037],[4.440545,8.345402,3.009374,-6.256653,8.555813,-0.888756,2.318703,-6.236728,-6.227333,3.365602,-4.060353,9.262829,-6.125593,-5.390616,2.570064,-2.100924]],[[-7.692386,6.440828,7.765273,3.757258,-0.344435,-6.040768,6.248480,6.310557,-1.593811,4.214402,-4.048367,-0.444927,9.747341,-2.000288,-4.760888,-8.386112],[-8.402806,1.097400,5.422266,4.272521,-6.361523,6.272806,-7.200537,2.090316,5.414804,1.151550,6.065811,-5.596285,-2.672704,-0.412849,8.130184,-6.342763],[-5.653110,1.463284,-0.176091,6.536824,6.502805,-5.011387,2.945126,-1.730084,-0.977860,-8.844359,8.039741,3.130154,0.903899,-6.643109,-2.228025,1.849845],[-9.217717,-1.318647,0.092560,-6.200469,-4.754318,-1.795892,-9.219459,-3.290625,-9.566868,6.239904,2.343577,-4.733120,-0.965525,9.227937,0.582510,9.545315],[4.243528,-1.090219,8.629033,7.910421,4.714854,4.199128,-4.635982,-3.432619,-1.166609,-5.500865,-1.904084,-8.799766,-0.387149,8.151260,-3.644682,0.548468],[-1.263916,-8.887504,-7.750804,8.696087,0.052405,-8.005922,-4.598453,4.457578,-0.154102,-3.511423,-5.912604,1.974123,-1.407651,-4.746044,2.723546,0.763891],[2.241456,8.600355,6.331735,4.187635,1.214174,2.039860,-8.761123,-0.330774,-1.698176,-1.406375,0.721050,3.776229,-9.088091,2.519928,-4.904840,-2.963963],[-5.433611,8.135439,-6.238448,3.358090,-8.804572,-7.483759,8.248103,6.446049,0.053541,-5.983892,7.000393,6.268891,1.249454,0.526403,7.049329,0.870007],[9.100565,6.591296,5.346529,0.851301,9.202502,-6.293706,-5.531339,9.180122,3.829186,7.819707,2.745719,2.432585,9.270284,-1.121749,-5.477367,-4.819082],[7.180044,1.937325,-6.322566,-4.857130,-6.287891,-9.185012,9.575243,6.189176,1.127348,8.586100,7.405489,3.289342,-4.717727,1.066813,7.875283,-5.447245],[4.635848,9.929995,8.114092,-0.348751,6.811056,-9.202787,-2.712300,0.522364,-2.631757,-9.739558,4.394277,-2.954895,-8.211265,-0.661251,-8.773712,-5.348645],[0.362730,7.513988,4.881443,-7.907662,4.518483,2.638078,-8.510481,1.132886,-3.700721,-9.633073,-5.194655,4.778707,-6.901523,-1.615151,-5.577003,0.382313],[9.132846,-7.843728,-6.990217,1.178953,-0.060709,0.937162,0.558746,6.004321,-2.288159,-1.118098,6.703713,4.867405,8.899409,-5.496718,-1.407646,4.723979],[-3.429808,2.610688,1.568716,-0.873168,0.426138,-0.554203,4.386331,-1.250791,-3.595082,-4.247750,-1.644246,7.732510,4.795006,-2.254307,1.337150,4.373464]],[[2.583558,-4.232057,0.399461,-6.735774,-7.607928,-3.423806,9.407203,-4.190760,0.073084,2.786176,-6.299093,1.963539,-4.253361,-3.886942,-2.276250,2.376332],[-5.319347,-1.921311,0.289937,-4.006501,6.932745,9.223315,-7.404242,-6.135390,-2.419313,9.767425,5.371167,-5.632832,-1.474566,7.821239,2.880934,6.073703],[8.379917,2.575857,-7.222654,-3.516795,-0.631073,-9.071368,4.971581,-9.371729,-1.076690,0.577085,0.617855,8.629879,-4.577635,-0.474687,-2.060127,5.672364],[3.784201,-3.772898,-7.661510,6.529770,-3.397677,3.716217,4.841811,8.455624,-2.325999,1.737636,-5.407442,0.580268,8.318480,-1.796665,0.421391,1.666841],[6.257620,7.389518,4.754378,-1.374565,-4.189296,0.203228,-1.457904,-8.900655,5.973947,-2.312096,-6.820745,-2.823397,1.746814,6.935729,-8.187608,4.719855],[-1.085925,-0.582458,2.343271,5.600447,-5.481814,4.427921,6.577809,4.614159,2.468828,3.843464,-0.934963,-3.969478,-7.690337,-0.275054,-6.500512,-3.992049],[-9.642632,-3.712697,-3.254489,-5.686915,2.394576,8.041511,0.874716,5.387993,-9.439606,-4.811925,1.728361,-9.177385,8.212575,-6.859833,-6.886477,-1.609887],[3.943170,-1.033193,6.718791,4.559378,1.618706,1.198148,9.446851,2.672516,2.428959,-6.475568,-3.222208,9.992375,-8.225485,-4.319397,-5.457472,1.704963],[4.315906,9.079021,-6.242181,5.324948,2.812974,-2.743993,-6.404047,-6.902036,-3.043918,-4.534709,8.591006,-7.600674,3.075984,-3.678413,0.238422,-7.989597],[-2.279118,1.060986,-3.818237,-6.392764,-6.117851,-6.254808,-2.969253,-1.247480,-4.008036,-1.881201,-8.283795,1.814920,6.104321,-3.983022,4.105634,3.482990],[-4.663994,4.947553,-3.663832,8.739403,-4.867566,1.523381,-6.769875,8.933726,-0.340594,3.954513,-4.616428,-0.669050,-9.085445,7.927113,0.569789,8.453210],[4.627577,-1.133020,-7.299664,-0.090322,-9.264933,-2.032204,-1.930956,0.630466,2.206484,9.371306,1.999055,1.686150,-2.340059,9.402537,6.634504,-7.651931],[0.097245,-4.387926,-4.806203,8.553767,-3.945018,5.319514,0.378773,2.777499,5.379419,3.535641,9.378857,4.815761,5.576340,0.971543,0.878204,8.799432],[6.500332,9.893450,9.767652,-1.645902,-4.925571,-9.052956,-5.275548,-5.194767,-9.562528,-5.660212,-8.313683,-8.769691,-5.516177,-9.463033,3.068163,3.611479]],[[-1.844376,-0.152919,1.765543,4.226903,-6.095813,6.175419,-6.068941,4.257024,6.720590,-1.874842,4.985632,0.969177,-7.286370,3.410412,-6.522790,-3.574087],[3.140499,-0.299123,3.407622,-2.135558,7.918686,-1.516536,4.615787,-7.748837,6.382104,-0.707987,4.732560,9.036815,-5.656558,7.782173,2.682692,0.145379],[-3.913917,5.541854,6.565796,-9.587126,8.007289,-4.390335,-1.420589,-8.939914,0.562285,-8.942762,-0.743616,3.675416,-2.660289,0.058622,-8.429883,4.554404],[-2.831946,6.829680,-9.824794,-1.020278,-7.602020,7.518767,-2.389039,0.574088,-4.193717,-7.256042,9.730884,2.179063,7.290880,5.941601,7.934011,-8.673349],[7.728793,-4.328288,0.627387,8.797125,0.873790,-3.454274,-1.416897,-9.967555,5.130074,-5.087123,-4.862639,4.177320,-1.810711,5.533480,7.568489,-5.294335],[9.801316,-8.480491,0.612971,8.638798,-0.382312,-6.446347,9.117155,-1.044446,-5.207810,6.172572,-5.464574,-9.264460,2.251918,0.288849,3.583476,5.489705],[-0.504324,-0.773726,1.710885,-0.858789,1.203397,5.456618,4.293457,-1.326041,-7.773457,-6.967899,-6.637860,3.187710,0.731408,-3.103423,-7.470401,9.020676],[4.368631,2.517848,6.489357,7.051765,-7.592767,4.193228,-7.061642,3.018810,3.286390,6.843031,-1.052708,2.501324,4.270606,0.713831,0.289546,-2.296969],[-8.592681,-7.812734,-5.616571,-0.724072,-4.524844,-2.985572,9.870566,0.691808,-0.918689,-4.833078,6.640644,-6.209321,2.657973,0.717868,-2.481988,-0.033541],[6.007892,2.090626,-3.887791,-5.254192,3.955530,0.436019,5.020416,-7.659995,7.854680,-2.497293,-1.181052,-4.149922,-1.488594,3.928574,7.055194,1.936212],[-5.336990,-4.525202,8.750513,1.888069,-4.491762,0.769283,6.147670,9.236142,6.202079,1.044757,-6.200118,8.499088,6.675400,9.982078,-1.686493,8.071648],[0.054195,6.377877,6.423880,-1.990549,4.527778,9.549947,0.689920,-3.146511,-8.269488,-3.995468,5.857626,-7.181659,-0.494685,8.370753,-3.285956,3.624465],[4.101579,-6.773401,6.432692,-0.944272,3.317632,9.845336,-6.586671,5.409319,-8.987296,9.146106,0.171728,-9.529140,6.345145,2.369804,0.546929,-4.671355],[4.315820,6.584420,1.568043,-5.025528,2.314360,2.881644,0.038647,-6.983563,-4.332181,0.859132,6.647488,-6.885220,7.484444,2.652537,-9.420698,5.732661]],[[-2.737806,4.408435,-8.593650,-8.555249,0.382359,8.294372,-0.750577,-0.374312,1.176368,6.421132,-8.838692,-7.815209,1.101030,-6.275343,8.720022,4.601103],[-6.939761,9.526282,-1.247851,-9.724517,0.932105,-7.080020,6.269003,-8.900650,-6.695175,-3.193886,8.987114,5.453142,-0.370657,6.355178,4.682439,5.021097],[8.514247,9.929710,6.667389,2.307113,0.358302,-1.768100,5.129239,-5.341278,-1.799959,-1.587546,1.982759,-1.698733,5.377793,8.807799,8.184114,-3.070600],[8.228694,-1.168668,7.290793,2.572036,-1.338513,2.613804,-8.597783,3.358272,-0.678611,7.476435,9.016228,9.266957,4.162646,-5.282551,-7.608109,1.382823],[-8.611525,-4.641302,5.291263,-7.692813,5.207586,2.344516,3.935788,6.131566,-3.745736,3.072768,-4.877405,-3.797300,9.247788,-6.400954,3.435283,5.776107],[-0.399431,7.473459,0.381362,8.204247,-6.956112,9.519739,8.811842,3.979747,5.718736,-9.825533,-7.141450,2.806820,5.700106,0.543294,7.855472,-7.484224],[-6.667841,6.295752,4.817815,-4.155256,-0.688222,-2.099502,-4.877523,2.020806,-5.826002,-9.981035,4.037696,8.650181,8.419006,3.227234,2.884437,-0.294960],[-4.948230,-8.667727,-3.879106,1.014855,-0.932185,8.043926,8.439491,-2.846145,-6.490837,-3.454023,-9.664274,-3.863515,-5.169580,-1.944499,9.744026,8.238661],[-0.532537,6.456300,8.054169,4.122998,-5.536407,-7.732399,-9.205346,-0.321090,6.732236,-7.945981,-9.731322,-5.769949,-9.354087,-4.107369,6.274887,6.330014],[3.010476,3.814860,0.007336,-2.950189,0.027167,-2.051765,9.532525,-0.236740,4.564719,-5.390728,6.863177,1.693283,5.253840,9.958783,1.277094,3.566243],[9.248458,6.427975,8.355121,1.409465,6.913837,-8.128679,-8.578193,7.897330,0.133835,7.367848,-2.811463,8.525759,-3.576035,3.938422,2.328065,4.123964],[8.888584,-6.362187,-0.139274,5.585472,8.404369,6.413272,-7.089376,4.155642,-8.135929,-8.655297,9.437202,8.310120,-5.030547,-4.351009,2.385212,-8.347716],[-2.656760,5.216743,-4.302875,-0.295378,5.761187,6.650401,0.568654,6.978326,7.492577,-7.419865,7.114565,0.731276,-4.615745,-2.619003,7.032384,-6.528561],[4.633732,-6.586828,-9.858860,5.055404,-1.282154,3.406687,7.036503,-7.407298,-0.018146,-5.394316,-9.386182,4.846453,1.346093,-1.834955,9.040072,-1.437171]]], dtype = "float64")#candidate|75|(16, 14, 16)|const|float64
uop_76 = relay.tan(const_75.astype('float64')) # shape=(16, 14, 16)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
const_93 = relay.const([True,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False], dtype = "bool")#candidate|93|(52,)|const|bool
call_92 = func_41_call(relay.reshape(const_93.astype('bool'), [4, 13, 1]))
call_94 = func_41_call(relay.reshape(const_93.astype('bool'), [4, 13, 1]))
const_101 = relay.constdtype = "float64")#candidate|101|(16, 14, 16)|const|float64
bop_102 = relay.greater(uop_76.astype('bool'), relay.reshape(const_101.astype('bool'), relay.shape_of(uop_76))) # shape=(16, 14, 16)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
call_106 = func_41_call(relay.reshape(const_93.astype('bool'), [4, 13, 1]))
call_107 = func_41_call(relay.reshape(const_93.astype('bool'), [4, 13, 1]))
output = relay.Tuple([call_92,const_93,bop_102,call_106,])
output2 = relay.Tuple([call_94,const_93,bop_102,call_107,])
func_108 = relay.Function([], output)
mod['func_108'] = func_108
mod = relay.transform.InferType()(mod)
output = func_108()
func_109 = relay.Function([], output)
mutated_mod['func_109'] = func_109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_108_call = mod.get_global_var('func_108')
func_109_call = mutated_mod.get_global_var('func_109')
call_155 = relay.TupleGetItem(func_108_call(), 2)
call_156 = relay.TupleGetItem(func_109_call(), 2)
func_108_call = mod.get_global_var('func_108')
func_109_call = mutated_mod.get_global_var('func_109')
call_187 = relay.TupleGetItem(func_108_call(), 1)
call_188 = relay.TupleGetItem(func_109_call(), 1)
const_191 = relay.const([True,True,True,True,True,False,True,False,True,True,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False], dtype = "bool")#candidate|191|(52,)|const|bool
bop_192 = relay.subtract(call_187.astype('float64'), relay.reshape(const_191.astype('float64'), relay.shape_of(call_187))) # shape=(52,)
bop_195 = relay.subtract(call_188.astype('float64'), relay.reshape(const_191.astype('float64'), relay.shape_of(call_188))) # shape=(52,)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
call_196 = func_41_call(relay.reshape(bop_192.astype('bool'), [4, 13, 1]))
call_197 = func_41_call(relay.reshape(bop_192.astype('bool'), [4, 13, 1]))
output = relay.Tuple([call_155,bop_192,call_196,])
output2 = relay.Tuple([call_156,bop_195,call_197,])
func_208 = relay.Function([], output)
mod['func_208'] = func_208
mod = relay.transform.InferType()(mod)
mutated_mod['func_208'] = func_208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_208_call = mutated_mod.get_global_var('func_208')
call_209 = func_208_call()
output = call_209
func_210 = relay.Function([], output)
mutated_mod['func_210'] = func_210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_243 = relay.TupleGetItem(func_208_call(), 1)
call_244 = relay.TupleGetItem(func_210_call(), 1)
func_108_call = mod.get_global_var('func_108')
func_109_call = mutated_mod.get_global_var('func_109')
call_255 = relay.TupleGetItem(func_108_call(), 2)
call_256 = relay.TupleGetItem(func_109_call(), 2)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_261 = relay.TupleGetItem(func_208_call(), 0)
call_262 = relay.TupleGetItem(func_210_call(), 0)
uop_263 = relay.erf(call_255.astype('float64')) # shape=(16, 14, 16)
uop_265 = relay.erf(call_256.astype('float64')) # shape=(16, 14, 16)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_277 = relay.TupleGetItem(func_208_call(), 0)
call_278 = relay.TupleGetItem(func_210_call(), 0)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_280 = relay.TupleGetItem(func_208_call(), 1)
call_281 = relay.TupleGetItem(func_210_call(), 1)
output = relay.Tuple([call_243,call_261,uop_263,call_277,call_280,])
output2 = relay.Tuple([call_244,call_262,uop_265,call_278,call_281,])
func_283 = relay.Function([], output)
mod['func_283'] = func_283
mod = relay.transform.InferType()(mod)
output = func_283()
func_284 = relay.Function([], output)
mutated_mod['func_284'] = func_284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_320 = relay.TupleGetItem(func_208_call(), 0)
call_321 = relay.TupleGetItem(func_210_call(), 0)
uop_347 = relay.rsqrt(call_320.astype('float64')) # shape=(16, 14, 16)
uop_349 = relay.rsqrt(call_321.astype('float64')) # shape=(16, 14, 16)
func_283_call = mod.get_global_var('func_283')
func_284_call = mutated_mod.get_global_var('func_284')
call_352 = relay.TupleGetItem(func_283_call(), 1)
call_353 = relay.TupleGetItem(func_284_call(), 1)
output = relay.Tuple([uop_347,call_352,])
output2 = relay.Tuple([uop_349,call_353,])
func_361 = relay.Function([], output)
mod['func_361'] = func_361
mod = relay.transform.InferType()(mod)
mutated_mod['func_361'] = func_361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_361_call = mutated_mod.get_global_var('func_361')
call_362 = func_361_call()
output = call_362
func_363 = relay.Function([], output)
mutated_mod['func_363'] = func_363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_108_call = mod.get_global_var('func_108')
func_109_call = mutated_mod.get_global_var('func_109')
call_396 = relay.TupleGetItem(func_108_call(), 2)
call_397 = relay.TupleGetItem(func_109_call(), 2)
output = call_396
output2 = call_397
func_408 = relay.Function([], output)
mod['func_408'] = func_408
mod = relay.transform.InferType()(mod)
output = func_408()
func_409 = relay.Function([], output)
mutated_mod['func_409'] = func_409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_361_call = mod.get_global_var('func_361')
func_363_call = mutated_mod.get_global_var('func_363')
call_419 = relay.TupleGetItem(func_361_call(), 0)
call_420 = relay.TupleGetItem(func_363_call(), 0)
func_361_call = mod.get_global_var('func_361')
func_363_call = mutated_mod.get_global_var('func_363')
call_443 = relay.TupleGetItem(func_361_call(), 1)
call_444 = relay.TupleGetItem(func_363_call(), 1)
bop_449 = relay.equal(call_419.astype('bool'), relay.reshape(call_443.astype('bool'), relay.shape_of(call_419))) # shape=(16, 14, 16)
bop_452 = relay.equal(call_420.astype('bool'), relay.reshape(call_444.astype('bool'), relay.shape_of(call_420))) # shape=(16, 14, 16)
output = relay.Tuple([bop_449,])
output2 = relay.Tuple([bop_452,])
func_496 = relay.Function([], output)
mod['func_496'] = func_496
mod = relay.transform.InferType()(mod)
mutated_mod['func_496'] = func_496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_496_call = mutated_mod.get_global_var('func_496')
call_497 = func_496_call()
output = call_497
func_498 = relay.Function([], output)
mutated_mod['func_498'] = func_498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_496_call = mod.get_global_var('func_496')
func_498_call = mutated_mod.get_global_var('func_498')
call_501 = relay.TupleGetItem(func_496_call(), 0)
call_502 = relay.TupleGetItem(func_498_call(), 0)
output = relay.Tuple([call_501,])
output2 = relay.Tuple([call_502,])
func_525 = relay.Function([], output)
mod['func_525'] = func_525
mod = relay.transform.InferType()(mod)
mutated_mod['func_525'] = func_525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_525_call = mutated_mod.get_global_var('func_525')
call_526 = func_525_call()
output = call_526
func_527 = relay.Function([], output)
mutated_mod['func_527'] = func_527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_496_call = mod.get_global_var('func_496')
func_498_call = mutated_mod.get_global_var('func_498')
call_528 = relay.TupleGetItem(func_496_call(), 0)
call_529 = relay.TupleGetItem(func_498_call(), 0)
uop_543 = relay.asin(call_528.astype('float64')) # shape=(16, 14, 16)
uop_545 = relay.asin(call_529.astype('float64')) # shape=(16, 14, 16)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_552 = relay.TupleGetItem(func_208_call(), 1)
call_553 = relay.TupleGetItem(func_210_call(), 1)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_556 = relay.TupleGetItem(func_208_call(), 1)
call_557 = relay.TupleGetItem(func_210_call(), 1)
output = relay.Tuple([uop_543,call_552,call_556,])
output2 = relay.Tuple([uop_545,call_553,call_557,])
func_572 = relay.Function([], output)
mod['func_572'] = func_572
mod = relay.transform.InferType()(mod)
mutated_mod['func_572'] = func_572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_572_call = mutated_mod.get_global_var('func_572')
call_573 = func_572_call()
output = call_573
func_574 = relay.Function([], output)
mutated_mod['func_574'] = func_574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_496_call = mod.get_global_var('func_496')
func_498_call = mutated_mod.get_global_var('func_498')
call_637 = relay.TupleGetItem(func_496_call(), 0)
call_638 = relay.TupleGetItem(func_498_call(), 0)
func_361_call = mod.get_global_var('func_361')
func_363_call = mutated_mod.get_global_var('func_363')
call_660 = relay.TupleGetItem(func_361_call(), 1)
call_661 = relay.TupleGetItem(func_363_call(), 1)
output = relay.Tuple([call_637,call_660,])
output2 = relay.Tuple([call_638,call_661,])
func_665 = relay.Function([], output)
mod['func_665'] = func_665
mod = relay.transform.InferType()(mod)
output = func_665()
func_666 = relay.Function([], output)
mutated_mod['func_666'] = func_666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_714 = relay.TupleGetItem(func_208_call(), 0)
call_715 = relay.TupleGetItem(func_210_call(), 0)
uop_720 = relay.sinh(call_714.astype('float64')) # shape=(16, 14, 16)
uop_722 = relay.sinh(call_715.astype('float64')) # shape=(16, 14, 16)
output = relay.Tuple([uop_720,])
output2 = relay.Tuple([uop_722,])
func_739 = relay.Function([], output)
mod['func_739'] = func_739
mod = relay.transform.InferType()(mod)
mutated_mod['func_739'] = func_739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_739_call = mutated_mod.get_global_var('func_739')
call_740 = func_739_call()
output = call_740
func_741 = relay.Function([], output)
mutated_mod['func_741'] = func_741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_408_call = mod.get_global_var('func_408')
func_409_call = mutated_mod.get_global_var('func_409')
call_750 = func_408_call()
call_751 = func_408_call()
func_283_call = mod.get_global_var('func_283')
func_284_call = mutated_mod.get_global_var('func_284')
call_803 = relay.TupleGetItem(func_283_call(), 4)
call_804 = relay.TupleGetItem(func_284_call(), 4)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
call_809 = func_41_call(relay.reshape(call_803.astype('bool'), [4, 13, 1]))
call_810 = func_41_call(relay.reshape(call_803.astype('bool'), [4, 13, 1]))
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_819 = relay.TupleGetItem(func_208_call(), 0)
call_820 = relay.TupleGetItem(func_210_call(), 0)
func_496_call = mod.get_global_var('func_496')
func_498_call = mutated_mod.get_global_var('func_498')
call_827 = relay.TupleGetItem(func_496_call(), 0)
call_828 = relay.TupleGetItem(func_498_call(), 0)
uop_850 = relay.log(call_803.astype('float64')) # shape=(52,)
uop_852 = relay.log(call_804.astype('float64')) # shape=(52,)
func_408_call = mod.get_global_var('func_408')
func_409_call = mutated_mod.get_global_var('func_409')
call_859 = func_408_call()
call_860 = func_408_call()
func_665_call = mod.get_global_var('func_665')
func_666_call = mutated_mod.get_global_var('func_666')
call_865 = relay.TupleGetItem(func_665_call(), 0)
call_866 = relay.TupleGetItem(func_666_call(), 0)
output = relay.Tuple([call_750,call_809,call_819,call_827,uop_850,call_859,call_865,])
output2 = relay.Tuple([call_751,call_810,call_820,call_828,uop_852,call_860,call_866,])
func_875 = relay.Function([], output)
mod['func_875'] = func_875
mod = relay.transform.InferType()(mod)
mutated_mod['func_875'] = func_875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_875_call = mutated_mod.get_global_var('func_875')
call_876 = func_875_call()
output = call_876
func_877 = relay.Function([], output)
mutated_mod['func_877'] = func_877
mutated_mod = relay.transform.InferType()(mutated_mod)
var_889 = relay.var("var_889", dtype = "int64", shape = (5, 10, 13))#candidate|889|(5, 10, 13)|var|int64
const_890 = relay.const([[[5,5,5,4,9,-4,-2,-9,-5,-5,-9,2,10],[10,1,3,9,-8,9,-6,-5,1,7,8,-1,5],[-1,-6,6,-2,-5,2,2,8,-4,-10,-5,10,-10],[-3,1,-1,-6,1,6,-10,-10,-4,-4,4,9,1],[-2,5,9,-3,6,1,4,6,7,10,10,-10,10],[-4,-7,-2,-6,-10,-5,-3,8,4,8,-1,-8,4],[7,-2,-7,6,9,-2,-7,8,-7,2,7,-7,-8],[1,9,3,1,-1,-10,-4,-6,-4,1,4,4,-3],[-4,7,-9,7,8,-4,-5,-9,3,-4,10,-10,9],[-8,10,4,-2,-5,3,-10,3,-8,-8,-3,-10,10]],[[2,-10,-5,-4,2,10,-2,6,8,4,8,10,-1],[-7,-8,1,-8,-3,-1,-8,8,6,3,-5,6,2],[3,1,3,-5,6,2,-6,7,-3,-10,-2,-3,8],[6,7,-1,-10,-4,-2,-7,-6,-4,-6,-2,5,4],[-8,-10,2,4,6,2,8,2,-7,-10,-7,-5,-5],[-4,9,-6,4,5,4,7,-5,-7,-7,2,-7,8],[7,7,-10,-10,10,8,-6,9,-2,-1,7,9,6],[-9,6,-6,-1,-6,-7,-2,4,10,2,-9,8,-1],[-7,-9,4,5,7,4,6,1,-6,-10,-2,10,2],[8,9,-2,-10,9,-1,3,-8,6,-6,-9,9,-5]],[[-2,4,-4,1,-2,10,-8,-5,5,-6,8,9,10],[-8,-9,-1,6,4,-10,3,-2,5,2,-8,9,-2],[-6,10,-8,5,1,-8,-3,-7,9,-6,-5,-10,10],[-3,-10,5,5,3,6,-3,-6,-4,-5,-4,2,-7],[9,-3,-5,-8,-3,-2,2,6,-5,-5,-9,-2,3],[-1,7,4,-5,-5,-5,-7,7,1,-7,7,3,5],[-2,-8,-4,-10,7,7,2,4,8,-8,-1,4,3],[9,5,7,2,4,4,-7,9,5,-9,-7,-10,-1],[3,8,9,1,1,3,5,9,1,-10,-3,10,-4],[8,3,5,-7,1,10,1,-9,-5,4,-4,2,-7]],[[-1,-7,-5,8,-4,-5,6,6,5,-7,4,1,-8],[4,2,-4,-10,9,6,5,-10,9,-4,4,-4,6],[-5,-7,3,-2,5,-8,-7,-10,4,-2,-6,4,8],[3,-9,2,-7,6,4,-7,-3,4,3,4,-1,-6],[9,-1,8,-1,-5,10,3,4,-1,6,7,6,8],[-1,-8,8,-7,-6,-4,-3,-9,-1,-6,-2,7,2],[10,7,-10,6,5,7,6,-8,-10,9,3,-4,6],[-7,3,-8,9,-10,-4,-9,2,-3,-9,9,4,-9],[-10,6,-10,-1,-4,6,6,4,-6,-1,1,9,6],[9,5,-7,-2,1,7,5,-10,-7,-10,-6,-6,-5]],[[2,-6,1,10,-5,3,1,-9,7,-10,-6,-5,7],[-3,10,-1,1,3,-3,7,4,-7,-5,3,-10,-1],[1,-5,9,3,-5,2,-10,-5,1,-2,4,-8,-6],[3,8,-4,-9,-5,-6,-8,3,-4,-6,-7,-5,-10],[10,9,2,4,5,-7,9,-3,-2,-6,10,7,1],[2,7,-6,-1,5,-7,1,8,-6,-2,6,9,-9],[3,4,-2,-1,-8,5,2,-3,8,-2,-4,7,-7],[-9,4,3,4,1,-4,4,-9,-1,7,-1,10,3],[-2,-1,3,5,-10,5,8,9,-8,3,-1,2,10],[5,7,-3,10,9,-6,1,3,-9,1,2,-2,-1]]], dtype = "int64")#candidate|890|(5, 10, 13)|const|int64
bop_891 = relay.left_shift(var_889.astype('int64'), relay.reshape(const_890.astype('int64'), relay.shape_of(var_889))) # shape=(5, 10, 13)
func_108_call = mod.get_global_var('func_108')
func_109_call = mutated_mod.get_global_var('func_109')
call_908 = relay.TupleGetItem(func_108_call(), 3)
call_909 = relay.TupleGetItem(func_109_call(), 3)
output = relay.Tuple([bop_891,call_908,])
output2 = relay.Tuple([bop_891,call_909,])
func_917 = relay.Function([var_889,], output)
mod['func_917'] = func_917
mod = relay.transform.InferType()(mod)
var_918 = relay.var("var_918", dtype = "int64", shape = (5, 10, 13))#candidate|918|(5, 10, 13)|var|int64
output = func_917(var_918)
func_919 = relay.Function([var_918], output)
mutated_mod['func_919'] = func_919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_408_call = mod.get_global_var('func_408')
func_409_call = mutated_mod.get_global_var('func_409')
call_964 = func_408_call()
call_965 = func_408_call()
func_496_call = mod.get_global_var('func_496')
func_498_call = mutated_mod.get_global_var('func_498')
call_966 = relay.TupleGetItem(func_496_call(), 0)
call_967 = relay.TupleGetItem(func_498_call(), 0)
func_283_call = mod.get_global_var('func_283')
func_284_call = mutated_mod.get_global_var('func_284')
call_972 = relay.TupleGetItem(func_283_call(), 2)
call_973 = relay.TupleGetItem(func_284_call(), 2)
func_496_call = mod.get_global_var('func_496')
func_498_call = mutated_mod.get_global_var('func_498')
call_980 = relay.TupleGetItem(func_496_call(), 0)
call_981 = relay.TupleGetItem(func_498_call(), 0)
func_665_call = mod.get_global_var('func_665')
func_666_call = mutated_mod.get_global_var('func_666')
call_985 = relay.TupleGetItem(func_665_call(), 0)
call_986 = relay.TupleGetItem(func_666_call(), 0)
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
call_990 = relay.TupleGetItem(func_525_call(), 0)
call_991 = relay.TupleGetItem(func_527_call(), 0)
func_283_call = mod.get_global_var('func_283')
func_284_call = mutated_mod.get_global_var('func_284')
call_1007 = relay.TupleGetItem(func_283_call(), 1)
call_1008 = relay.TupleGetItem(func_284_call(), 1)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
var_1013 = relay.var("var_1013", dtype = "bool", shape = (52,))#candidate|1013|(52,)|var|bool
call_1012 = func_41_call(relay.reshape(var_1013.astype('bool'), [4, 13, 1]))
call_1014 = func_41_call(relay.reshape(var_1013.astype('bool'), [4, 13, 1]))
output = relay.Tuple([call_964,call_966,call_972,call_980,call_985,call_990,call_1007,call_1012,var_1013,])
output2 = relay.Tuple([call_965,call_967,call_973,call_981,call_986,call_991,call_1008,call_1014,var_1013,])
func_1017 = relay.Function([var_1013,], output)
mod['func_1017'] = func_1017
mod = relay.transform.InferType()(mod)
var_1018 = relay.var("var_1018", dtype = "bool", shape = (52,))#candidate|1018|(52,)|var|bool
output = func_1017(var_1018)
func_1019 = relay.Function([var_1018], output)
mutated_mod['func_1019'] = func_1019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_572_call = mod.get_global_var('func_572')
func_574_call = mutated_mod.get_global_var('func_574')
call_1029 = relay.TupleGetItem(func_572_call(), 1)
call_1030 = relay.TupleGetItem(func_574_call(), 1)
output = call_1029
output2 = call_1030
func_1047 = relay.Function([], output)
mod['func_1047'] = func_1047
mod = relay.transform.InferType()(mod)
output = func_1047()
func_1048 = relay.Function([], output)
mutated_mod['func_1048'] = func_1048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_875_call = mod.get_global_var('func_875')
func_877_call = mutated_mod.get_global_var('func_877')
call_1064 = relay.TupleGetItem(func_875_call(), 6)
call_1065 = relay.TupleGetItem(func_877_call(), 6)
output = call_1064
output2 = call_1065
func_1067 = relay.Function([], output)
mod['func_1067'] = func_1067
mod = relay.transform.InferType()(mod)
output = func_1067()
func_1068 = relay.Function([], output)
mutated_mod['func_1068'] = func_1068
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1085 = relay.var("var_1085", dtype = "int64", shape = (3, 13, 5))#candidate|1085|(3, 13, 5)|var|int64
var_1086 = relay.var("var_1086", dtype = "int64", shape = (3, 13, 5))#candidate|1086|(3, 13, 5)|var|int64
bop_1087 = relay.multiply(var_1085.astype('int64'), relay.reshape(var_1086.astype('int64'), relay.shape_of(var_1085))) # shape=(3, 13, 5)
bop_1092 = relay.subtract(bop_1087.astype('uint64'), relay.reshape(var_1086.astype('uint64'), relay.shape_of(bop_1087))) # shape=(3, 13, 5)
output = relay.Tuple([bop_1092,])
output2 = relay.Tuple([bop_1092,])
func_1097 = relay.Function([var_1085,var_1086,], output)
mod['func_1097'] = func_1097
mod = relay.transform.InferType()(mod)
mutated_mod['func_1097'] = func_1097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1097_call = mutated_mod.get_global_var('func_1097')
var_1099 = relay.var("var_1099", dtype = "int64", shape = (3, 13, 5))#candidate|1099|(3, 13, 5)|var|int64
var_1100 = relay.var("var_1100", dtype = "int64", shape = (3, 13, 5))#candidate|1100|(3, 13, 5)|var|int64
call_1098 = func_1097_call(var_1099,var_1100,)
output = call_1098
func_1101 = relay.Function([var_1099,var_1100,], output)
mutated_mod['func_1101'] = func_1101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_108_call = mod.get_global_var('func_108')
func_109_call = mutated_mod.get_global_var('func_109')
call_1181 = relay.TupleGetItem(func_108_call(), 1)
call_1182 = relay.TupleGetItem(func_109_call(), 1)
output = relay.Tuple([call_1181,])
output2 = relay.Tuple([call_1182,])
func_1183 = relay.Function([], output)
mod['func_1183'] = func_1183
mod = relay.transform.InferType()(mod)
output = func_1183()
func_1184 = relay.Function([], output)
mutated_mod['func_1184'] = func_1184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_875_call = mod.get_global_var('func_875')
func_877_call = mutated_mod.get_global_var('func_877')
call_1187 = relay.TupleGetItem(func_875_call(), 1)
call_1188 = relay.TupleGetItem(func_877_call(), 1)
output = call_1187
output2 = call_1188
func_1197 = relay.Function([], output)
mod['func_1197'] = func_1197
mod = relay.transform.InferType()(mod)
output = func_1197()
func_1198 = relay.Function([], output)
mutated_mod['func_1198'] = func_1198
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1236 = relay.const([[[7.073217,0.687610,4.541183,8.591779,0.939878,1.132354,5.919166,5.773623,-4.081098,-8.750929,4.292763,-0.873312,-2.742105,9.102104,6.904618],[7.453533,-3.031097,-5.602147,5.998199,0.600298,-0.847756,-9.487434,9.646350,8.793013,6.881161,-3.017971,7.570890,-7.967246,-0.244291,2.551993],[-9.833421,9.189255,-5.223246,-4.968287,4.140839,-9.370919,-3.596648,-1.028962,-0.442321,-1.303143,4.844619,-2.110215,9.592966,2.445258,-2.633375],[0.208075,5.933306,9.826285,3.301333,0.631492,3.714816,-7.218259,7.018931,6.342819,-3.405074,9.588936,5.725935,-3.404453,-3.408454,-4.836811],[5.938640,5.915438,-5.000555,-0.412241,6.019520,8.566273,9.440450,-7.191875,-7.296645,-5.792481,2.458757,-8.678698,7.387859,8.923796,-0.565485],[-4.219040,-1.109136,-9.785808,-4.613015,-5.681104,3.211823,-4.114053,3.719829,9.858908,-3.929593,-1.274745,3.498420,-0.371300,-9.611725,4.755450],[-4.738017,-0.797763,0.204290,7.002616,5.662466,4.647124,9.862918,7.690723,7.380853,-3.358043,-5.218571,2.318323,-5.945781,-3.156566,-6.456743]],[[7.907067,2.359235,5.471557,9.172976,-6.058661,-1.569894,5.946928,3.636366,-6.171158,3.832136,-7.522569,2.636352,1.617109,-2.475479,-8.668798],[3.083862,7.475614,9.275788,-8.438272,0.991704,2.390078,-9.264055,-7.436385,8.715863,-3.352383,0.073519,-0.499024,2.455562,-4.874329,9.763688],[-2.494010,3.407278,2.253370,-4.262584,3.756297,-8.373936,5.630518,3.906212,-8.606091,-0.837459,3.784770,-3.580140,-6.813029,5.535480,5.252851],[-8.257106,-1.928813,3.186670,-3.159152,7.877122,5.126312,9.319136,-5.474379,-2.483127,3.512250,-6.001157,3.274766,2.744669,-3.075643,-6.713485],[3.433584,5.257774,-6.551917,-9.448778,-3.523091,-8.111808,1.154937,-7.659460,-2.735315,2.668654,6.653708,-4.743433,-8.950774,-6.241808,2.549119],[-6.790020,7.715498,-7.666527,-5.813223,2.767681,-9.134981,-6.188531,8.025852,6.849374,-6.928027,2.143514,-2.180244,-5.301788,4.866709,1.007212],[7.492894,-7.328239,8.508717,2.525340,9.178722,-1.873105,-7.179001,5.013786,7.340298,-7.540472,4.900974,5.731282,2.165430,-6.918836,7.046122]],[[6.662460,1.176020,0.092486,-2.252971,-7.989341,2.925894,2.858732,-8.252565,0.758355,-8.935911,9.485905,-5.387912,6.840365,-6.576205,-7.532338],[-6.635920,-3.087147,8.117969,-6.255760,-8.295216,1.368242,-0.974193,-8.673648,-4.277267,-8.014417,2.010588,-8.911477,0.808900,2.831036,-5.072808],[8.289982,-9.998958,-6.328543,3.133961,4.891363,-6.989791,-6.105849,-6.912145,4.035263,-0.850899,5.629823,2.859953,6.211264,9.819167,-9.073904],[0.106182,-9.715617,5.800437,8.481565,-9.256859,7.305866,-7.871494,7.433032,-7.653996,5.545339,-0.066584,-9.908769,-6.508929,-9.568062,-8.942438],[6.155129,-9.893721,6.912858,7.173885,0.188456,-1.666149,-0.581351,-1.879451,7.885892,-6.014646,6.692462,8.543410,-1.282857,-1.468900,4.904177],[7.711178,-8.481530,4.532920,4.114943,-3.979620,-7.557957,0.057139,0.542496,-5.422227,-6.392072,7.445454,8.937611,2.061036,0.553029,0.319254],[1.916926,9.829406,-7.973784,0.408554,9.445856,-0.217967,-9.605263,-4.460458,8.401458,-0.821271,5.076279,-1.335541,-7.341886,-2.013035,3.541312]],[[0.072582,-9.124911,-9.709359,8.684860,1.293145,7.520718,-4.237787,8.713795,-2.632340,9.513089,8.999382,-3.623257,8.571241,2.955971,-3.931842],[3.472359,6.821498,3.957103,4.096533,-8.988560,3.176852,-9.787841,8.082456,3.991380,4.635415,0.117580,0.976956,-9.026722,-9.984449,0.834308],[-8.763445,-1.839832,-3.332811,2.690646,-9.388878,-8.162074,2.385824,7.703239,6.462732,-9.951866,3.692012,6.571309,-2.275918,-1.279232,4.907003],[1.076886,-0.307208,-6.454750,8.453998,-7.485191,0.289868,-5.888809,-4.007254,7.174384,-1.858090,-5.087963,0.987182,-7.416415,0.456307,8.314335],[-1.453022,-5.735150,-8.199141,-2.084188,-9.111975,-5.399878,9.545583,-6.349763,-6.726856,3.040195,-8.177732,5.783525,8.695780,0.356033,-3.547004],[-9.472585,7.771139,9.754753,2.403115,-8.536307,6.133760,8.260201,1.078276,-7.679156,2.974114,-8.873038,1.442297,-7.609976,4.488120,2.898942],[-5.591682,3.638565,-2.186113,1.921642,-4.070556,4.477324,-2.566687,-5.728641,-5.269215,-0.016386,9.514978,9.884077,-2.585480,1.524044,7.361235]],[[8.174499,-4.767631,-0.223669,2.405402,-3.370887,8.112304,6.412276,-9.589731,3.736890,-2.029592,4.533645,-5.720661,-2.928966,-6.439684,-3.910356],[-0.986357,9.534401,-6.345760,0.051475,1.617483,1.661267,1.639877,1.914205,8.483432,9.565963,-7.206721,6.104535,2.778667,0.402038,3.931090],[-3.827008,9.287095,7.287468,9.559700,8.066847,-3.621831,1.421566,-7.677773,-5.799818,7.968730,2.321531,-7.046661,-8.687317,2.762265,1.971504],[5.885029,-0.970797,0.549935,1.019174,4.654093,8.161303,7.054396,5.288533,4.261099,1.452875,4.334902,-0.830086,2.544414,-3.343234,-3.845742],[-1.176368,6.961615,-8.784255,-4.982140,2.560556,5.792293,9.317314,6.502207,-2.851606,-2.881538,9.471250,-8.439955,0.905159,-5.805496,-3.814515],[3.792628,-0.304322,-0.911376,2.259064,-5.953278,-0.548236,-5.882404,2.756694,-8.209774,-6.159155,0.268838,6.073139,-4.263130,-7.747328,-9.951364],[6.772599,4.944051,-1.960291,5.227112,-9.488653,-5.608683,9.591971,-7.644471,-4.660925,-1.686548,-6.997877,-2.425896,5.586888,-8.603750,4.037678]]], dtype = "float32")#candidate|1236|(5, 7, 15)|const|float32
const_1237 = relay.const([[[7.594130,-5.890578,-7.374037,2.756269,-3.288960,4.206125,-4.725305,-4.387881,-7.579004,-2.934158,-8.071954,-4.151238,0.143825,9.801256,9.231774],[6.561538,4.127889,-8.569756,6.081809,-3.361649,3.078918,8.973650,-1.792279,-0.734342,-5.099025,4.613084,9.038839,8.660916,-7.034181,5.384286],[2.351064,-0.888695,3.125669,-1.993684,4.884001,-1.019400,-0.586236,-3.156743,3.645314,9.730944,4.254229,-1.057400,5.912944,3.091128,5.499158],[0.932611,-9.938198,5.396063,0.370563,-1.241151,0.809786,8.162186,8.998489,-5.757798,8.809309,-5.977231,-4.627373,0.542473,-5.077823,8.218141],[-4.848706,-5.594825,8.108216,-7.692100,1.709026,0.467967,9.711858,-7.177557,-3.478057,6.442395,2.773344,1.243645,-1.612126,6.287364,1.106893],[-0.676170,8.045267,-4.080778,3.751585,3.771708,-8.554491,5.465460,-9.840714,-5.757692,-5.455381,-5.615242,7.693224,8.013340,-4.088845,8.633068],[8.738371,2.376963,-3.079816,9.151526,-8.221865,4.603199,7.752717,-6.867805,-8.654372,5.831915,-5.580943,-2.317584,3.385411,-3.194022,-9.620033]],[[6.896374,2.163332,1.880614,0.710025,4.518590,0.953746,-7.666078,3.556323,-3.483095,5.972553,-3.423894,0.022815,9.651295,-8.170310,6.406196],[4.242929,4.505404,0.574486,3.474861,4.726531,9.322241,7.912501,-5.847285,-7.117163,-7.485397,-4.075338,-0.624241,-7.139586,-2.835364,9.460050],[5.356063,-4.329401,4.477528,8.610498,-5.626265,-5.788597,-7.468958,1.583592,-4.454064,4.373590,0.568888,-2.145108,-6.315700,-6.881711,4.853120],[-7.445073,-0.581108,2.041648,-3.445036,-0.822516,-3.946623,-9.586234,-9.774263,6.156305,-0.868158,-6.022715,-8.793939,2.062318,5.474723,7.694368],[6.927962,3.035080,-7.550212,6.270514,-9.119621,-8.145250,-7.334479,5.555625,-3.088979,-0.094598,5.148821,1.607119,8.251580,-1.606834,-2.306881],[8.208775,4.474187,6.760733,-7.806116,7.332263,5.426589,2.391009,-9.778538,-6.855183,0.679270,7.383541,3.027837,-9.679240,5.602437,5.158265],[-5.995225,2.978117,-5.818185,8.934345,-7.970280,3.356811,-9.126472,7.192495,1.747636,-2.555626,-0.674211,9.428936,-6.419729,-5.406290,9.186470]],[[8.145153,7.896375,6.343211,2.335094,-1.667493,2.337993,0.621608,-4.512241,4.040659,8.103011,-2.372735,2.422748,8.963339,3.456200,-6.708173],[-7.610349,-8.153154,-8.983195,1.882378,-8.868055,9.076152,1.344463,-7.692674,-6.781273,9.381472,8.987243,8.253596,5.656305,-5.556056,6.801110],[4.505522,-7.081481,0.846936,-6.241580,-4.311989,-5.744538,-0.662500,1.181514,3.596641,-3.186596,8.979188,-4.487070,5.563344,3.741917,-2.519409],[-2.079358,-4.045055,3.151453,1.468230,-6.825372,-9.470651,-8.272384,-6.801735,1.259396,4.482229,-6.078031,9.747834,6.876930,2.235081,-6.338977],[1.393249,0.177947,3.357531,5.481495,-2.601964,1.948679,-4.731762,-8.719275,0.356737,-2.662137,4.274057,0.438777,1.508625,2.895355,1.819571],[-9.544052,-4.307331,1.644422,-5.157396,7.688370,-7.760137,-1.448686,-2.066667,-3.479130,-8.615663,-1.559408,7.376943,6.420307,-7.881587,3.886472],[-2.420035,5.070163,-7.088437,1.060403,5.328673,9.993798,6.267592,8.631658,-7.561220,5.752494,-1.872770,1.240367,5.331730,2.134511,2.589381]],[[8.407464,-0.679017,3.954714,6.921776,-6.988922,0.945570,0.525686,5.200885,-8.978253,-7.674617,-8.910555,7.298183,-4.335177,-6.101726,-5.878770],[5.016361,-9.372699,-5.419791,-8.927056,-9.904181,9.650478,-3.964241,-3.694149,1.693072,-2.778568,-8.875038,-0.494329,-2.650449,-0.342732,-3.988322],[-4.932907,-2.519673,-7.273079,-9.144143,4.765715,8.592697,-3.672703,8.322072,5.632168,6.208254,-2.524230,-6.699495,8.473826,3.563753,-2.085529],[1.990337,4.313540,6.113244,-9.088311,-5.386152,-9.642522,-9.606501,-0.868435,5.717854,-9.744915,6.698813,-5.430450,-6.640857,-0.439572,0.150476],[9.462376,4.178239,-8.122427,-7.074360,2.037697,-4.494681,-5.851569,-1.582612,-9.247372,-3.863366,2.888111,9.848991,-9.351745,9.065494,-2.345893],[4.827880,7.784688,-9.941732,9.539448,2.869613,-6.899274,-9.394084,-5.100952,9.245167,-9.135995,-8.559330,4.807542,8.855572,1.315820,-7.609864],[7.613441,9.770706,-7.037232,-4.146986,0.505790,-7.314521,-7.591251,-9.082917,-9.437419,6.523631,-4.868881,-5.271612,-0.480085,8.755377,-3.574312]],[[9.924523,1.216571,2.644811,-0.523467,1.091226,4.059914,4.646579,-3.539459,-1.551830,8.155925,4.470470,9.654219,1.266694,1.687224,9.427189],[-6.913076,6.316365,-3.646245,-1.518402,-1.939342,-6.055527,1.324257,5.456219,4.705769,-5.999334,-7.072038,-1.277674,5.008659,7.803668,-7.902565],[2.145807,5.905023,-5.768650,8.273969,-6.286275,-8.271429,0.482376,3.486276,8.092419,-0.128981,0.900024,4.560180,2.911338,-9.880919,6.614788],[9.610114,5.304360,5.691245,-4.945019,-3.020725,2.151710,6.089058,0.784869,0.264179,-7.163382,-1.118195,-5.442290,8.604595,4.841216,-3.799089],[6.888650,5.232359,-4.732783,-5.072376,2.924432,-8.939280,-9.180164,0.484401,-6.005423,-4.748364,-8.523511,-7.758009,8.212272,-3.903622,2.360677],[0.361280,9.518260,-8.046292,-9.513928,-5.303282,2.591722,-1.416793,8.824077,4.480223,-5.366060,-4.393086,3.516026,-5.681400,-6.173028,5.069491],[5.046341,-6.323326,3.129527,4.459186,-6.462412,4.930119,-0.982488,4.066726,5.547521,2.697485,-9.560760,-0.803506,-4.261055,-9.234725,-1.805835]]], dtype = "float32")#candidate|1237|(5, 7, 15)|const|float32
bop_1238 = relay.floor_divide(const_1236.astype('float32'), relay.reshape(const_1237.astype('float32'), relay.shape_of(const_1236))) # shape=(5, 7, 15)
uop_1241 = relay.cosh(const_1236.astype('float32')) # shape=(5, 7, 15)
output = relay.Tuple([bop_1238,uop_1241,])
output2 = relay.Tuple([bop_1238,uop_1241,])
func_1247 = relay.Function([], output)
mod['func_1247'] = func_1247
mod = relay.transform.InferType()(mod)
mutated_mod['func_1247'] = func_1247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1247_call = mutated_mod.get_global_var('func_1247')
call_1248 = func_1247_call()
output = call_1248
func_1249 = relay.Function([], output)
mutated_mod['func_1249'] = func_1249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_1323 = func_1067_call()
call_1324 = func_1067_call()
func_665_call = mod.get_global_var('func_665')
func_666_call = mutated_mod.get_global_var('func_666')
call_1329 = relay.TupleGetItem(func_665_call(), 0)
call_1330 = relay.TupleGetItem(func_666_call(), 0)
bop_1331 = relay.divide(call_1329.astype('float32'), relay.reshape(call_1323.astype('float32'), relay.shape_of(call_1329))) # shape=(16, 14, 16)
bop_1334 = relay.divide(call_1330.astype('float32'), relay.reshape(call_1324.astype('float32'), relay.shape_of(call_1330))) # shape=(16, 14, 16)
output = bop_1331
output2 = bop_1334
func_1336 = relay.Function([], output)
mod['func_1336'] = func_1336
mod = relay.transform.InferType()(mod)
output = func_1336()
func_1337 = relay.Function([], output)
mutated_mod['func_1337'] = func_1337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_108_call = mod.get_global_var('func_108')
func_109_call = mutated_mod.get_global_var('func_109')
call_1362 = relay.TupleGetItem(func_108_call(), 2)
call_1363 = relay.TupleGetItem(func_109_call(), 2)
output = call_1362
output2 = call_1363
func_1380 = relay.Function([], output)
mod['func_1380'] = func_1380
mod = relay.transform.InferType()(mod)
output = func_1380()
func_1381 = relay.Function([], output)
mutated_mod['func_1381'] = func_1381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_1391 = func_1380_call()
call_1392 = func_1380_call()
output = relay.Tuple([call_1391,])
output2 = relay.Tuple([call_1392,])
func_1414 = relay.Function([], output)
mod['func_1414'] = func_1414
mod = relay.transform.InferType()(mod)
mutated_mod['func_1414'] = func_1414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1414_call = mutated_mod.get_global_var('func_1414')
call_1415 = func_1414_call()
output = call_1415
func_1416 = relay.Function([], output)
mutated_mod['func_1416'] = func_1416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_1503 = func_1067_call()
call_1504 = func_1067_call()
func_739_call = mod.get_global_var('func_739')
func_741_call = mutated_mod.get_global_var('func_741')
call_1512 = relay.TupleGetItem(func_739_call(), 0)
call_1513 = relay.TupleGetItem(func_741_call(), 0)
var_1521 = relay.var("var_1521", dtype = "float64", shape = (16, 14, 16))#candidate|1521|(16, 14, 16)|var|float64
bop_1522 = relay.floor_mod(call_1512.astype('float32'), relay.reshape(var_1521.astype('float32'), relay.shape_of(call_1512))) # shape=(16, 14, 16)
bop_1525 = relay.floor_mod(call_1513.astype('float32'), relay.reshape(var_1521.astype('float32'), relay.shape_of(call_1513))) # shape=(16, 14, 16)
bop_1533 = relay.mod(bop_1522.astype('float64'), relay.reshape(var_1521.astype('float64'), relay.shape_of(bop_1522))) # shape=(16, 14, 16)
bop_1536 = relay.mod(bop_1525.astype('float64'), relay.reshape(var_1521.astype('float64'), relay.shape_of(bop_1525))) # shape=(16, 14, 16)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_1541 = func_1380_call()
call_1542 = func_1380_call()
uop_1543 = relay.sin(bop_1522.astype('float32')) # shape=(16, 14, 16)
uop_1545 = relay.sin(bop_1525.astype('float32')) # shape=(16, 14, 16)
func_1097_call = mod.get_global_var('func_1097')
func_1101_call = mutated_mod.get_global_var('func_1101')
var_1550 = relay.var("var_1550", dtype = "int64", shape = (195, 1))#candidate|1550|(195, 1)|var|int64
call_1549 = relay.TupleGetItem(func_1097_call(relay.reshape(var_1550.astype('int64'), [3, 13, 5]), relay.reshape(var_1550.astype('int64'), [3, 13, 5]), ), 0)
call_1551 = relay.TupleGetItem(func_1101_call(relay.reshape(var_1550.astype('int64'), [3, 13, 5]), relay.reshape(var_1550.astype('int64'), [3, 13, 5]), ), 0)
var_1552 = relay.var("var_1552", dtype = "uint64", shape = (3, 13, 5))#candidate|1552|(3, 13, 5)|var|uint64
bop_1553 = relay.greater_equal(call_1549.astype('bool'), relay.reshape(var_1552.astype('bool'), relay.shape_of(call_1549))) # shape=(3, 13, 5)
bop_1556 = relay.greater_equal(call_1551.astype('bool'), relay.reshape(var_1552.astype('bool'), relay.shape_of(call_1551))) # shape=(3, 13, 5)
func_572_call = mod.get_global_var('func_572')
func_574_call = mutated_mod.get_global_var('func_574')
call_1560 = relay.TupleGetItem(func_572_call(), 2)
call_1561 = relay.TupleGetItem(func_574_call(), 2)
output = relay.Tuple([call_1503,bop_1533,call_1541,uop_1543,var_1550,bop_1553,call_1560,])
output2 = relay.Tuple([call_1504,bop_1536,call_1542,uop_1545,var_1550,bop_1556,call_1561,])
func_1602 = relay.Function([var_1521,var_1550,var_1552,], output)
mod['func_1602'] = func_1602
mod = relay.transform.InferType()(mod)
var_1603 = relay.var("var_1603", dtype = "float64", shape = (16, 14, 16))#candidate|1603|(16, 14, 16)|var|float64
var_1604 = relay.var("var_1604", dtype = "int64", shape = (195, 1))#candidate|1604|(195, 1)|var|int64
var_1605 = relay.var("var_1605", dtype = "uint64", shape = (3, 13, 5))#candidate|1605|(3, 13, 5)|var|uint64
output = func_1602(var_1603,var_1604,var_1605,)
func_1606 = relay.Function([var_1603,var_1604,var_1605,], output)
mutated_mod['func_1606'] = func_1606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1184_call = mutated_mod.get_global_var('func_1184')
call_1649 = relay.TupleGetItem(func_1183_call(), 0)
call_1650 = relay.TupleGetItem(func_1184_call(), 0)
func_496_call = mod.get_global_var('func_496')
func_498_call = mutated_mod.get_global_var('func_498')
call_1656 = relay.TupleGetItem(func_496_call(), 0)
call_1657 = relay.TupleGetItem(func_498_call(), 0)
func_917_call = mod.get_global_var('func_917')
func_919_call = mutated_mod.get_global_var('func_919')
var_1664 = relay.var("var_1664", dtype = "int64", shape = (650,))#candidate|1664|(650,)|var|int64
call_1663 = relay.TupleGetItem(func_917_call(relay.reshape(var_1664.astype('int64'), [5, 10, 13])), 1)
call_1665 = relay.TupleGetItem(func_919_call(relay.reshape(var_1664.astype('int64'), [5, 10, 13])), 1)
func_361_call = mod.get_global_var('func_361')
func_363_call = mutated_mod.get_global_var('func_363')
call_1667 = relay.TupleGetItem(func_361_call(), 0)
call_1668 = relay.TupleGetItem(func_363_call(), 0)
func_1183_call = mod.get_global_var('func_1183')
func_1184_call = mutated_mod.get_global_var('func_1184')
call_1674 = relay.TupleGetItem(func_1183_call(), 0)
call_1675 = relay.TupleGetItem(func_1184_call(), 0)
func_1247_call = mod.get_global_var('func_1247')
func_1249_call = mutated_mod.get_global_var('func_1249')
call_1686 = relay.TupleGetItem(func_1247_call(), 0)
call_1687 = relay.TupleGetItem(func_1249_call(), 0)
output = relay.Tuple([call_1649,call_1656,call_1663,var_1664,call_1667,call_1674,call_1686,])
output2 = relay.Tuple([call_1650,call_1657,call_1665,var_1664,call_1668,call_1675,call_1687,])
func_1704 = relay.Function([var_1664,], output)
mod['func_1704'] = func_1704
mod = relay.transform.InferType()(mod)
var_1705 = relay.var("var_1705", dtype = "int64", shape = (650,))#candidate|1705|(650,)|var|int64
output = func_1704(var_1705)
func_1706 = relay.Function([var_1705], output)
mutated_mod['func_1706'] = func_1706
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1722 = relay.var("var_1722", dtype = "float64", shape = (7, 12, 9))#candidate|1722|(7, 12, 9)|var|float64
uop_1723 = relay.asin(var_1722.astype('float64')) # shape=(7, 12, 9)
output = relay.Tuple([uop_1723,])
output2 = relay.Tuple([uop_1723,])
func_1725 = relay.Function([var_1722,], output)
mod['func_1725'] = func_1725
mod = relay.transform.InferType()(mod)
mutated_mod['func_1725'] = func_1725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1726 = relay.var("var_1726", dtype = "float64", shape = (7, 12, 9))#candidate|1726|(7, 12, 9)|var|float64
func_1725_call = mutated_mod.get_global_var('func_1725')
call_1727 = func_1725_call(var_1726)
output = call_1727
func_1728 = relay.Function([var_1726], output)
mutated_mod['func_1728'] = func_1728
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1414_call = mod.get_global_var('func_1414')
func_1416_call = mutated_mod.get_global_var('func_1416')
call_1743 = relay.TupleGetItem(func_1414_call(), 0)
call_1744 = relay.TupleGetItem(func_1416_call(), 0)
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_1745 = func_1336_call()
call_1746 = func_1336_call()
var_1758 = relay.var("var_1758", dtype = "float32", shape = (16, 14, 16))#candidate|1758|(16, 14, 16)|var|float32
bop_1759 = relay.bitwise_and(call_1745.astype('uint32'), relay.reshape(var_1758.astype('uint32'), relay.shape_of(call_1745))) # shape=(16, 14, 16)
bop_1762 = relay.bitwise_and(call_1746.astype('uint32'), relay.reshape(var_1758.astype('uint32'), relay.shape_of(call_1746))) # shape=(16, 14, 16)
func_496_call = mod.get_global_var('func_496')
func_498_call = mutated_mod.get_global_var('func_498')
call_1770 = relay.TupleGetItem(func_496_call(), 0)
call_1771 = relay.TupleGetItem(func_498_call(), 0)
output = relay.Tuple([call_1743,bop_1759,call_1770,])
output2 = relay.Tuple([call_1744,bop_1762,call_1771,])
func_1778 = relay.Function([var_1758,], output)
mod['func_1778'] = func_1778
mod = relay.transform.InferType()(mod)
mutated_mod['func_1778'] = func_1778
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1779 = relay.var("var_1779", dtype = "float32", shape = (16, 14, 16))#candidate|1779|(16, 14, 16)|var|float32
func_1778_call = mutated_mod.get_global_var('func_1778')
call_1780 = func_1778_call(var_1779)
output = call_1780
func_1781 = relay.Function([var_1779], output)
mutated_mod['func_1781'] = func_1781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_1786 = func_1380_call()
call_1787 = func_1380_call()
func_1602_call = mod.get_global_var('func_1602')
func_1606_call = mutated_mod.get_global_var('func_1606')
var_1793 = relay.var("var_1793", dtype = "int64", shape = (195,))#candidate|1793|(195,)|var|int64
call_1792 = relay.TupleGetItem(func_1602_call(relay.reshape(call_1786.astype('float64'), [16, 14, 16]), relay.reshape(var_1793.astype('int64'), [195, 1]), relay.reshape(var_1793.astype('uint64'), [3, 13, 5]), ), 1)
call_1794 = relay.TupleGetItem(func_1606_call(relay.reshape(call_1786.astype('float64'), [16, 14, 16]), relay.reshape(var_1793.astype('int64'), [195, 1]), relay.reshape(var_1793.astype('uint64'), [3, 13, 5]), ), 1)
func_1602_call = mod.get_global_var('func_1602')
func_1606_call = mutated_mod.get_global_var('func_1606')
call_1795 = relay.TupleGetItem(func_1602_call(relay.reshape(call_1786.astype('float64'), [16, 14, 16]), relay.reshape(var_1793.astype('int64'), [195, 1]), relay.reshape(var_1793.astype('uint64'), [3, 13, 5]), ), 4)
call_1796 = relay.TupleGetItem(func_1606_call(relay.reshape(call_1786.astype('float64'), [16, 14, 16]), relay.reshape(var_1793.astype('int64'), [195, 1]), relay.reshape(var_1793.astype('uint64'), [3, 13, 5]), ), 4)
func_1247_call = mod.get_global_var('func_1247')
func_1249_call = mutated_mod.get_global_var('func_1249')
call_1801 = relay.TupleGetItem(func_1247_call(), 1)
call_1802 = relay.TupleGetItem(func_1249_call(), 1)
uop_1809 = relay.log2(call_1786.astype('float32')) # shape=(16, 14, 16)
uop_1811 = relay.log2(call_1787.astype('float32')) # shape=(16, 14, 16)
output = relay.Tuple([call_1792,var_1793,call_1795,call_1801,uop_1809,])
output2 = relay.Tuple([call_1794,var_1793,call_1796,call_1802,uop_1811,])
func_1814 = relay.Function([var_1793,], output)
mod['func_1814'] = func_1814
mod = relay.transform.InferType()(mod)
mutated_mod['func_1814'] = func_1814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1815 = relay.var("var_1815", dtype = "int64", shape = (195,))#candidate|1815|(195,)|var|int64
func_1814_call = mutated_mod.get_global_var('func_1814')
call_1816 = func_1814_call(var_1815)
output = call_1816
func_1817 = relay.Function([var_1815], output)
mutated_mod['func_1817'] = func_1817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_1825 = func_1336_call()
call_1826 = func_1336_call()
func_1602_call = mod.get_global_var('func_1602')
func_1606_call = mutated_mod.get_global_var('func_1606')
const_1844 = relay.const([7,-1,4,3,5,7,-10,-7,2,6,4,4,9,7,5,8,-5,10,-9,1,1,-5,4,5,-4,8,4,-4,-3,-8,8,10,-5,7,3,9,-8,4,-6,6,1,2,5,8,-8,6,-10,-1,7,2,6,6,6,3,-7,4,2,-3,1,-5,-8,6,9,7,-3,-10,8,2,3,8,2,-2,-7,3,6,8,1,6,-1,-10,1,5,5,5,-1,-2,4,-9,-6,-10,10,-10,4,-3,-8,1,-2,-9,4,-6,5,-9,-9,2,1,-10,4,4,-4,4,9,-9,4,9,-2,-2,-1,7,-7,5,-3,-9,-5,-4,9,10,5,-10,-9,-6,3,7,-7,6,-3,4,-8,-2,5,1,-4,-1,-4,10,3,2,2,-2,6,-4,10,7,-10,-10,-5,-8,-6,9,-3,3,5,-2,7,-7,-3,-1,1,-3,-7,6,6,2,-7,3,-2,-6,2,-3,1,1,10,-6,-10,-2,2,8,5,3,2,2,10,10,-3,2,-2], dtype = "int64")#candidate|1844|(195,)|const|int64
call_1843 = relay.TupleGetItem(func_1602_call(relay.reshape(call_1825.astype('float64'), [16, 14, 16]), relay.reshape(const_1844.astype('int64'), [195, 1]), relay.reshape(const_1844.astype('uint64'), [3, 13, 5]), ), 5)
call_1845 = relay.TupleGetItem(func_1606_call(relay.reshape(call_1825.astype('float64'), [16, 14, 16]), relay.reshape(const_1844.astype('int64'), [195, 1]), relay.reshape(const_1844.astype('uint64'), [3, 13, 5]), ), 5)
output = relay.Tuple([call_1825,call_1843,const_1844,])
output2 = relay.Tuple([call_1826,call_1845,const_1844,])
func_1852 = relay.Function([], output)
mod['func_1852'] = func_1852
mod = relay.transform.InferType()(mod)
output = func_1852()
func_1853 = relay.Function([], output)
mutated_mod['func_1853'] = func_1853
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1889 = relay.var("var_1889", dtype = "int64", shape = (12, 4, 14))#candidate|1889|(12, 4, 14)|var|int64
const_1890 = relay.const([[[7,2,1,1,-9,-4,-8,-1,8,-4,7,-7,-1,-9],[-2,-6,3,4,-4,-3,-3,-8,-10,3,2,8,-9,6],[-1,-4,3,5,-9,-10,-8,-8,10,2,-6,-9,-10,-8],[1,8,8,-9,3,-9,-5,-7,-9,-1,-10,-2,-8,5]],[[-7,7,-6,4,-9,6,-8,-6,1,-5,-8,-3,9,-5],[6,5,2,3,-8,-9,-3,9,-10,-4,8,-3,-6,-5],[2,2,-9,-1,-8,8,-3,-3,3,-8,8,-4,-1,-5],[5,-4,9,5,2,10,2,9,4,-4,5,10,5,-4]],[[-4,5,-8,-8,-6,6,9,-9,-3,-6,2,5,-3,-3],[-10,-5,3,-6,1,-9,-7,5,2,-8,-2,-3,6,4],[-5,-6,-3,1,-2,-8,-3,8,-1,-7,-4,-9,9,3],[-3,3,-3,5,1,-1,-5,4,5,7,2,2,-8,6]],[[-4,-3,7,5,8,-5,5,1,-4,-9,6,8,1,8],[10,7,5,3,7,-2,-7,3,3,-4,-7,-10,1,3],[-8,1,4,-4,-9,1,-4,-10,-9,2,5,1,-1,6],[-8,5,-9,6,6,2,-8,1,5,-2,4,-6,-4,-10]],[[-9,8,-7,-5,-1,10,4,3,7,3,-5,8,-1,-6],[-3,-1,-5,2,-1,-8,10,10,-2,-6,-6,2,-6,-9],[-5,3,5,2,2,-2,3,-7,-8,8,9,8,3,-5],[10,-7,2,5,-3,-7,-3,9,-7,-10,3,-4,2,-6]],[[-3,5,8,10,-3,7,-4,-2,-1,4,9,-4,1,-5],[-3,-7,3,-2,5,2,9,-3,-4,-1,-8,-5,-10,-9],[9,4,-6,-10,3,1,4,-6,-1,-9,4,9,6,8],[5,6,1,7,1,6,7,-3,-9,7,8,6,-5,-3]],[[-1,6,-8,1,2,-9,-3,-10,2,-5,-2,4,8,1],[5,4,-5,-3,5,-4,-1,-2,10,7,7,7,-6,-1],[-1,8,6,-3,2,-6,1,6,7,-8,-1,-8,-1,-10],[-6,-1,-3,2,-1,-4,2,-2,2,-8,-7,5,-3,8]],[[10,1,1,2,1,5,10,4,9,-6,3,3,2,10],[3,-1,8,-10,4,-4,7,-6,9,10,8,-1,1,3],[-4,-9,2,1,-4,10,-6,-4,2,-9,-1,-10,-6,-10],[-7,-10,-7,-7,1,-1,-2,4,3,-10,-7,9,9,-7]],[[-2,-1,1,9,2,-8,-7,-9,-10,-4,10,-10,-2,-7],[8,-5,-2,-9,-10,4,8,7,1,-2,-9,-3,-10,-8],[-4,3,-10,2,5,-6,4,8,-1,5,1,4,6,8],[2,8,10,8,10,-1,-5,-1,-8,1,6,-3,5,-6]],[[5,-7,-10,5,-6,10,-4,2,-10,8,-4,9,-5,6],[10,-1,5,-5,2,-9,-2,-6,-1,-8,1,-9,3,4],[10,9,1,-8,9,3,3,10,10,6,4,2,-7,2],[-9,-9,-6,3,-8,4,-4,9,-1,-7,-6,-4,-4,-8]],[[9,3,6,-9,2,-10,2,-8,-4,-6,-7,-8,5,-5],[-10,1,3,-7,8,3,-7,10,8,-8,6,-9,-6,-8],[-9,-9,6,-6,6,7,-9,-3,5,8,3,8,-9,-2],[4,-5,3,-1,3,-7,3,2,6,10,1,7,-3,3]],[[3,-6,-7,9,-6,8,-8,-10,-9,-4,-10,-6,-2,4],[9,-7,3,7,-6,-10,7,-2,5,7,-6,8,-3,6],[-7,-3,6,-9,5,10,4,-6,10,-5,1,8,3,3],[8,3,8,4,-6,-4,10,-6,4,5,-1,-8,4,-2]]], dtype = "int64")#candidate|1890|(12, 4, 14)|const|int64
bop_1891 = relay.bitwise_xor(var_1889.astype('int64'), relay.reshape(const_1890.astype('int64'), relay.shape_of(var_1889))) # shape=(12, 4, 14)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_1899 = func_1380_call()
call_1900 = func_1380_call()
func_1247_call = mod.get_global_var('func_1247')
func_1249_call = mutated_mod.get_global_var('func_1249')
call_1909 = relay.TupleGetItem(func_1247_call(), 1)
call_1910 = relay.TupleGetItem(func_1249_call(), 1)
output = relay.Tuple([bop_1891,call_1899,call_1909,])
output2 = relay.Tuple([bop_1891,call_1900,call_1910,])
func_1914 = relay.Function([var_1889,], output)
mod['func_1914'] = func_1914
mod = relay.transform.InferType()(mod)
var_1915 = relay.var("var_1915", dtype = "int64", shape = (12, 4, 14))#candidate|1915|(12, 4, 14)|var|int64
output = func_1914(var_1915)
func_1916 = relay.Function([var_1915], output)
mutated_mod['func_1916'] = func_1916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1047_call = mod.get_global_var('func_1047')
func_1048_call = mutated_mod.get_global_var('func_1048')
call_1921 = func_1047_call()
call_1922 = func_1047_call()
output = relay.Tuple([call_1921,])
output2 = relay.Tuple([call_1922,])
func_1935 = relay.Function([], output)
mod['func_1935'] = func_1935
mod = relay.transform.InferType()(mod)
mutated_mod['func_1935'] = func_1935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1935_call = mutated_mod.get_global_var('func_1935')
call_1936 = func_1935_call()
output = call_1936
func_1937 = relay.Function([], output)
mutated_mod['func_1937'] = func_1937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_1946 = func_1067_call()
call_1947 = func_1067_call()
output = relay.Tuple([call_1946,])
output2 = relay.Tuple([call_1947,])
func_1968 = relay.Function([], output)
mod['func_1968'] = func_1968
mod = relay.transform.InferType()(mod)
mutated_mod['func_1968'] = func_1968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1968_call = mutated_mod.get_global_var('func_1968')
call_1969 = func_1968_call()
output = call_1969
func_1970 = relay.Function([], output)
mutated_mod['func_1970'] = func_1970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_875_call = mod.get_global_var('func_875')
func_877_call = mutated_mod.get_global_var('func_877')
call_1985 = relay.TupleGetItem(func_875_call(), 2)
call_1986 = relay.TupleGetItem(func_877_call(), 2)
func_1704_call = mod.get_global_var('func_1704')
func_1706_call = mutated_mod.get_global_var('func_1706')
var_2009 = relay.var("var_2009", dtype = "int64", shape = (650,))#candidate|2009|(650,)|var|int64
call_2008 = relay.TupleGetItem(func_1704_call(relay.reshape(var_2009.astype('int64'), [650,])), 6)
call_2010 = relay.TupleGetItem(func_1706_call(relay.reshape(var_2009.astype('int64'), [650,])), 6)
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
const_2014 = relay.const([-0.194469,-3.922661,4.657375,-0.427433,3.368649,3.109616,9.117054,4.116352,7.473596,1.469465,5.646972,-6.400748,-1.709319,-0.203992,-1.502817,-1.886739,-9.857576,-5.364717,6.386564,6.825455,7.853498,2.749524,-6.591637,9.599391,0.225461,-2.558776,9.214621,-7.436439,-6.690060,5.574870,7.778844,6.357744,-4.309968,2.966496,-8.738196,8.409446,6.027250,2.347018,0.700799,-5.738204,1.004916,5.198241,3.167673,-8.058541,-0.574636,-1.608587,-2.091163,-1.520498,8.192542,-4.107429,-7.810155,5.065524,-9.187004,4.500094,9.542713,8.039263,9.644313,-5.898699,-4.830830,-4.985316,-0.816765,-4.110702,-7.406939,-8.244805,8.257646,-1.195320,-0.602149,5.894664,-0.531011,-5.249026,-2.582162,-5.335622,-3.800838,-2.785598,-2.042602,5.766148,7.674156,6.741690,-2.138755,1.696618,-1.559749,3.417565,-3.379502,-0.587088,-9.581209,-1.867055,-8.410297,-9.298970,5.356485,1.911691,8.230914,4.700060,8.244650,-1.744191,-4.901604,3.824539,6.454194,4.098837,5.548413,-3.146312,-7.029436,3.790691,-7.826469,2.272622,-9.150769,6.214203,8.651629,3.119650,1.713232,0.762884,8.835207,-6.890635,8.595903,-7.838280,2.651843,-2.556500,-0.359773,-1.619328,5.956407,-9.691363,2.254175,5.486894,-2.315868,5.313965,2.215967,4.526967,6.608579,6.136590,5.245926,5.517819,6.126080,-1.277415,7.304523,-1.673304,-0.042812,0.740194,-9.044610,1.765038,5.862921,-7.989618,4.940422,8.414717,8.860700,8.675142,4.128143,-4.786625,4.636685,-7.712692,3.792030,0.278324,4.634343,4.952360,-5.107200,4.636583,4.621832,-2.118049,9.873715,7.588117,-0.991755,-1.773535,-7.196642,-7.500551,6.340553,-4.444377,2.962601,5.394280,-6.855877,-0.062888,5.321005,-8.575696,3.059139,4.323843,4.733712,-0.822287,5.444601,2.036588,7.603260,5.975480,-0.267975,5.524370,-3.028982,-0.967800,-9.947061,1.556574,-0.748188,-6.349687,-6.594977,9.474461,8.174150,7.243078,-2.706037,-3.645279,8.639418,-1.658908,4.101005,0.880989,-7.062588,5.179535,3.964987,-6.626841,-9.373667,8.046628,-2.207180,-0.491231,-2.187255,4.796876,-7.662860,-7.799438,3.452250,1.915327,2.103345,-9.945134,6.395193,-8.062453,-4.641738,-4.183334,6.752950,3.359162,-5.964545,3.311894,-2.512931,9.550722,-2.147354,-7.296045,1.124564,3.205870,-9.633651,-3.313310,4.790081,-7.432240,-5.337760,-6.169644,9.640304,1.889514,-7.453879,-9.162939,8.752157,4.944837,-6.400709,-5.276328,-9.268907,-0.903772,0.932739,-9.012941,9.569567,7.533149,6.849879,8.595906,6.570343,2.164361,-6.586257,-1.847535,5.482154,2.197939,2.614288,3.263130,4.164230,1.141890,4.465645,2.466967,-5.295765,-3.434720,4.254887,-2.673611,-5.577925,-5.123718,-7.896117,6.278275,-5.545986,2.418272,-6.611277,0.305763,-8.059097,-6.776128,-3.898364,-8.185454,-1.285898,7.005539,-4.034352,8.170696,6.620098,7.511204,-7.132884,9.431056,-4.417980,0.360767,-5.202564,-4.862056,8.921328,-0.352029,7.609752,-3.118368,8.053164,6.595078,-6.449693,-8.034500,-5.108165,7.095116,-0.147277,8.072533,8.345871,3.287252,-0.281147,-3.377058,7.827070,1.785802,3.920974,-3.372698,1.575658,-5.299628,-8.665748,0.779881,2.473688,-7.772298,-8.320420,-5.220677,-1.832258,8.843392,4.299953,-2.426142,-4.502496,6.175877,1.058066,-3.716058,1.933927,-3.417890,0.484902,-3.442210,-0.205919,6.789787,6.319851,-0.557814,2.156699,-3.682656,7.894318,0.659893,-1.079551,2.345548,7.183361,3.191745,3.365293,-4.142385,4.704860,0.839709,8.434714,-5.892130,-3.473232,-0.366287,-1.076706,-4.954753,5.275070,4.133919,0.469974,-0.944934,-9.802378,5.036044,7.333863,6.238660,0.203010,8.701764,3.588398,8.440764,-0.717860,0.735073,-0.840771,2.100781,-2.537680,6.122973,7.958386,-6.434365,0.277227,3.927306,8.547340,-8.254449,0.007535,-2.775691,4.017453,-3.907198,8.411434,1.787293,-0.537265,-0.115183,8.405998,-1.911183,1.819949,3.124628,-3.803648,4.017153,6.979589,-9.687953,9.101404,0.934384,-8.857080,5.322748,9.523000,4.886752,0.900693,-5.781929,-6.681579,2.107351,0.288156,-6.665575,-8.775377,-0.473080,4.369383,-9.454259,7.335017,-6.182456,-0.763860,0.736976,-7.138664,3.157381,-6.778600,-6.900665,-7.315004,-9.614071,-4.590536,0.265185,8.326300,-2.140961,7.375358,9.292704,-2.862384,-1.443411,5.806669,2.606202,2.731406,3.040225,-4.369027,-4.350493,-6.714991,9.018685,3.067124,5.301361,-4.097984,-4.385365,-0.683374,-4.704474,7.683515,9.767655,-0.394225,-4.579666,5.965277,-6.897803,9.424827,-4.928285,6.741989,3.818258,8.703989,3.429978,-6.958940,2.133107,-6.609179,-0.457738,-0.044764,-3.508431,-2.208686,-6.135720,8.322824,8.158673,5.500976,-8.292424,7.264790,-2.028445,-6.002737,-5.275034,5.778166,6.878480,4.266225,6.355210,-2.608052,9.340412,-3.341837,-0.329050,-1.462005,-5.901435,-2.025654,-0.327478,-1.565162,-5.182568,6.137236,-0.846979,-9.024989,-7.657625,2.427570,7.392705,0.731352,-1.692372,3.119390,4.199314,-2.322059,9.629267,-1.715468,8.298325,-6.319855,1.848357,-6.610159,-1.798050,-8.116745,3.338404,-5.211193,9.871223,2.118993,9.357610,-8.915677,-1.041623,4.199433,9.405679,0.502748,-0.948807,-0.939033,2.152495,3.338208,9.137480,-0.973024,3.291052,-9.495288,2.972989,-2.695426,-8.955558,0.415661,-2.781623,-7.247809,8.702546,-3.283683,-5.967993,8.522746,0.134251,0.812448,-9.089892,9.691974,8.883418,-7.650868,4.185302,8.869829,-1.153051,-0.513811,2.004523,-1.347795,3.686888,0.341065,-6.761245,6.618959,9.268013,-8.311500,9.311729,-6.262173,3.288253,9.239188,5.833084,-1.860295,6.108661,-3.527110,-9.292970,8.819915,6.966205,5.556037,-0.436264,-2.230188,6.311618,4.342309,-4.178438,7.424642,4.391433,8.406719,-9.494465,-8.125023,-1.751725,-5.114805,7.266658,-0.832474,-8.472650,-4.675528,0.973228,9.668549,-5.103298,4.419020,-6.218893,-1.113079,1.429719,-4.943831,-9.246881,6.649108,-5.528159,9.335853,-8.868038,-5.610992,5.337420,5.711355,3.107791,9.504643,4.352084,2.265549,-5.473006,5.463712,2.545009,4.339692,-0.049446,-7.836337,-2.243219,5.720137,-8.835258,-2.848072,-0.591767,-8.462693,-9.439395,4.149323,-4.756988,8.476543,2.400980,-1.749179,-5.366212,-3.865171,-0.515382,4.786866,-4.322534,7.080170,2.477656,-7.426069,7.679310,3.886793,-8.722247,-1.357941,7.855302,8.055003,-3.413081,4.526382,3.783751,-8.836515,1.365161,3.503279,-2.225743,-9.101391,-7.385437,0.262459,2.926474,5.044474,-3.294099,-9.640139,0.219962,-3.803311,0.738598,-2.713788,3.869888,-5.677421,4.973672,-7.424713,1.240388,9.196200,9.788245,6.521321,9.357029,-8.773307,-4.410117,-0.172370,3.079167,-5.828760,-4.745315,7.007885,3.991242,-3.220273,4.413079,-6.419607,8.588174,-4.524622,-6.237717,5.123903,-1.806333,7.277466,-5.965842,-2.616480,-4.338079,-4.888974,-4.209754,-9.666134,-1.213630,-6.934217,6.040853,-7.237766,-8.030293,5.032477,-5.349809,-3.621626,7.516848,-1.860084,1.104877,0.434454,5.932315,1.131052,0.564965,1.768113,-6.281333,-0.022556,-7.502469,9.558818,5.134645,0.641160,3.081931,6.204225,-0.864486,2.700155,-7.509843,4.954702,-2.816717,2.361277,4.364050,9.024076,-9.598626,5.364403,-8.047097,1.954640,-6.582532,-6.802012,7.578852,-9.459176,8.944726,2.372497,-0.205267,7.119818,2.972389,-8.713141,6.985892,0.739396,4.959219,-6.736353,1.216171,-9.507993,-2.532233,8.348062,-3.718551,5.565657,9.083272,2.531379,-7.152502,6.973106,-9.214656,-5.170700,2.194121,5.458474,-7.075425,3.657086,-4.580039,3.779602,-0.862286,-8.425683,-8.184255,-5.668266,-0.522945,8.341945,-3.529308,2.901799,8.548872,-6.711060,5.746196,6.805930,9.195242], dtype = "float64")#candidate|2014|(756,)|const|float64
call_2013 = relay.TupleGetItem(func_1725_call(relay.reshape(const_2014.astype('float64'), [7, 12, 9])), 0)
call_2015 = relay.TupleGetItem(func_1728_call(relay.reshape(const_2014.astype('float64'), [7, 12, 9])), 0)
output = relay.Tuple([call_1985,call_2008,var_2009,call_2013,const_2014,])
output2 = relay.Tuple([call_1986,call_2010,var_2009,call_2015,const_2014,])
func_2016 = relay.Function([var_2009,], output)
mod['func_2016'] = func_2016
mod = relay.transform.InferType()(mod)
var_2017 = relay.var("var_2017", dtype = "int64", shape = (650,))#candidate|2017|(650,)|var|int64
output = func_2016(var_2017)
func_2018 = relay.Function([var_2017], output)
mutated_mod['func_2018'] = func_2018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1968_call = mod.get_global_var('func_1968')
func_1970_call = mutated_mod.get_global_var('func_1970')
call_2089 = relay.TupleGetItem(func_1968_call(), 0)
call_2090 = relay.TupleGetItem(func_1970_call(), 0)
func_2016_call = mod.get_global_var('func_2016')
func_2018_call = mutated_mod.get_global_var('func_2018')
const_2101 = relay.const([-1,-4,5,-1,-7,-10,10,-6,9,-1,-9,5,7,9,-1,7,-3,-10,8,-1,-10,9,-5,8,-1,8,-10,-7,4,-10,-10,6,-1,-2,-10,2,-6,-1,-8,-4,8,10,-6,-6,2,-7,4,-8,2,3,-2,1,8,10,2,4,7,1,-2,6,-2,8,6,10,3,9,8,5,5,1,-9,-9,-10,10,7,8,8,-5,10,-2,9,-10,3,-3,3,8,-3,-8,7,-7,-3,4,-10,6,2,-5,-9,-8,-2,-3,-6,-7,-7,-4,-5,9,-3,-1,-1,5,5,4,4,-8,-4,-3,1,-1,-7,3,5,9,-6,-3,7,10,-7,-6,10,-9,-5,9,4,-4,-5,4,10,10,-4,-5,-10,-3,-1,7,-2,-6,-1,-3,-4,-8,6,1,-5,-4,-3,-10,-1,-9,1,-4,4,-10,-6,10,1,-1,1,-3,-2,-5,-3,9,9,8,5,3,-3,-2,7,9,3,-5,1,-1,4,-1,3,10,-9,2,-2,1,9,6,-9,-7,4,-7,9,-1,3,9,1,8,10,4,-6,-9,2,2,-10,-4,-1,1,-8,-5,4,9,-5,-7,-8,7,10,6,1,3,-6,-6,-7,-7,9,8,-5,-3,3,-5,3,-2,8,-6,9,-10,6,2,-3,8,2,-7,2,-7,-10,-5,-6,9,-8,-5,-2,-10,9,2,2,3,-6,2,10,3,4,4,-7,-4,-6,10,3,6,3,-3,-8,10,7,-1,1,-7,-4,-7,-6,3,-9,1,4,-4,-5,-3,-3,8,5,7,5,-3,6,9,-10,-3,-7,2,2,-8,5,2,6,-8,-1,-9,8,7,-3,-4,-9,3,-1,-7,3,10,9,-3,-5,-4,-5,-5,4,-5,-6,-9,7,-1,8,-1,-3,6,6,5,-2,8,-1,-8,-2,-3,5,-5,5,-1,4,-4,5,-9,1,10,4,-1,-10,-3,4,-5,9,1,8,8,6,-2,-2,-3,6,8,-3,4,-8,6,-4,-2,2,6,-7,-3,6,5,-6,-5,-2,-10,-2,8,3,5,-6,-10,-10,8,3,-10,7,-1,6,5,8,2,-4,-3,6,-6,-5,-1,-5,2,-10,-8,-2,4,-6,-5,-6,8,7,7,-7,6,-9,7,-5,3,3,-6,2,-2,-9,-5,-4,-3,2,6,4,3,8,7,-3,1,-4,3,-7,4,-10,8,-4,4,-4,-7,-2,-2,-4,-6,-1,-3,5,1,-8,7,8,1,8,-7,-6,1,-9,-10,3,-10,-2,9,8,9,-9,-6,-2,8,-6,10,-9,2,3,-1,-8,1,3,-9,-4,-8,5,-1,-5,-4,-3,-3,-7,-2,-8,9,3,8,-3,-6,-5,1,10,-4,-10,4,-7,6,5,-6,-1,9,-4,10,5,-6,10,-10,-9,5,-7,1,-7,7,4,-3,8,-9,-2,-2,4,-7,3,-7,4,-10,-1,2,-9,-10,-2,-8,-6,3,-5,-4,2,3,1,-10,2,-3,-2,-8,5,3,-10,10,-7,5,9,-9,3,6,2,6,-5,-6,7,7,-4,3,-1,-4,-5,8,-10,-5,-1,-6,9,8,4,-3,9,-5,10,9,-1,10,3,10,-7,8,-7,2,8,-2,-3,5,4,-5,10,-8,8,-8,7,4,-4,1,-7,-9,-2,-9,-3,7,8,2,9,-10,-7,5,6,-10,-2,-4,-6,3,-4,-3,9,-4,5,7,-5,10,-5,6,4,2,8,4], dtype = "int64")#candidate|2101|(650,)|const|int64
call_2100 = relay.TupleGetItem(func_2016_call(relay.reshape(const_2101.astype('int64'), [650,])), 0)
call_2102 = relay.TupleGetItem(func_2018_call(relay.reshape(const_2101.astype('int64'), [650,])), 0)
output = relay.Tuple([call_2089,call_2100,const_2101,])
output2 = relay.Tuple([call_2090,call_2102,const_2101,])
func_2105 = relay.Function([], output)
mod['func_2105'] = func_2105
mod = relay.transform.InferType()(mod)
mutated_mod['func_2105'] = func_2105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2105_call = mutated_mod.get_global_var('func_2105')
call_2106 = func_2105_call()
output = call_2106
func_2107 = relay.Function([], output)
mutated_mod['func_2107'] = func_2107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_2120 = relay.TupleGetItem(func_1935_call(), 0)
call_2121 = relay.TupleGetItem(func_1937_call(), 0)
var_2133 = relay.var("var_2133", dtype = "float64", shape = (52,))#candidate|2133|(52,)|var|float64
bop_2134 = relay.bitwise_or(call_2120.astype('int16'), relay.reshape(var_2133.astype('int16'), relay.shape_of(call_2120))) # shape=(52,)
bop_2137 = relay.bitwise_or(call_2121.astype('int16'), relay.reshape(var_2133.astype('int16'), relay.shape_of(call_2121))) # shape=(52,)
output = relay.Tuple([bop_2134,])
output2 = relay.Tuple([bop_2137,])
func_2143 = relay.Function([var_2133,], output)
mod['func_2143'] = func_2143
mod = relay.transform.InferType()(mod)
mutated_mod['func_2143'] = func_2143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2144 = relay.var("var_2144", dtype = "float64", shape = (52,))#candidate|2144|(52,)|var|float64
func_2143_call = mutated_mod.get_global_var('func_2143')
call_2145 = func_2143_call(var_2144)
output = call_2145
func_2146 = relay.Function([var_2144], output)
mutated_mod['func_2146'] = func_2146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2105_call = mod.get_global_var('func_2105')
func_2107_call = mutated_mod.get_global_var('func_2107')
call_2164 = relay.TupleGetItem(func_2105_call(), 0)
call_2165 = relay.TupleGetItem(func_2107_call(), 0)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_2185 = func_1197_call()
call_2186 = func_1197_call()
output = relay.Tuple([call_2164,call_2185,])
output2 = relay.Tuple([call_2165,call_2186,])
func_2251 = relay.Function([], output)
mod['func_2251'] = func_2251
mod = relay.transform.InferType()(mod)
mutated_mod['func_2251'] = func_2251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2251_call = mutated_mod.get_global_var('func_2251')
call_2252 = func_2251_call()
output = call_2252
func_2253 = relay.Function([], output)
mutated_mod['func_2253'] = func_2253
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2258 = relay.var("var_2258", dtype = "float64", shape = (5, 1, 6))#candidate|2258|(5, 1, 6)|var|float64
uop_2259 = relay.sigmoid(var_2258.astype('float64')) # shape=(5, 1, 6)
output = relay.Tuple([uop_2259,])
output2 = relay.Tuple([uop_2259,])
func_2267 = relay.Function([var_2258,], output)
mod['func_2267'] = func_2267
mod = relay.transform.InferType()(mod)
var_2268 = relay.var("var_2268", dtype = "float64", shape = (5, 1, 6))#candidate|2268|(5, 1, 6)|var|float64
output = func_2267(var_2268)
func_2269 = relay.Function([var_2268], output)
mutated_mod['func_2269'] = func_2269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_2271 = relay.TupleGetItem(func_208_call(), 0)
call_2272 = relay.TupleGetItem(func_210_call(), 0)
func_1047_call = mod.get_global_var('func_1047')
func_1048_call = mutated_mod.get_global_var('func_1048')
call_2281 = func_1047_call()
call_2282 = func_1047_call()
func_1704_call = mod.get_global_var('func_1704')
func_1706_call = mutated_mod.get_global_var('func_1706')
const_2315 = relay.const([7,10,-7,-8,3,-7,-4,-5,1,2,9,5,1,3,5,3,-6,-6,4,-9,7,9,3,2,1,10,-9,-3,1,10,8,2,8,6,-1,-8,-10,-8,10,-7,-5,-8,5,7,-9,-4,2,-10,5,4,-2,-2,7,3,1,-8,-10,3,2,-1,-6,-8,2,-1,-6,3,-5,-10,7,2,5,6,-8,1,6,-1,-1,-3,8,10,-8,4,7,8,7,-6,1,10,-9,-7,6,-1,8,-8,9,4,2,-3,-2,-7,-2,-1,-2,-2,3,10,-9,6,5,8,3,-1,10,6,-6,8,3,-1,-2,8,4,7,-8,-3,-7,7,2,7,-2,3,5,6,-5,-4,9,6,-1,7,6,-2,-2,4,-5,-8,-3,4,6,-5,6,10,3,-9,9,-2,9,-7,-3,6,2,-6,7,-5,8,4,1,-9,9,7,-5,2,-4,-6,-2,6,6,-10,-2,6,7,3,-5,10,-10,4,9,3,5,-2,-10,2,2,9,-7,5,-8,-1,1,-8,10,10,6,-3,-1,-7,-5,6,-10,-3,-3,-4,7,3,7,-10,-3,-4,-4,-9,4,-5,-6,-8,10,-7,10,-4,-7,6,10,8,-8,2,1,-6,-9,4,4,6,-3,-8,6,-1,-9,-4,-5,-10,-7,5,-4,-3,-2,2,8,1,-1,-4,1,10,2,-10,-6,-10,-5,-3,5,-3,4,6,-3,3,8,-3,-3,-10,6,-4,10,-7,8,-3,-5,-4,4,-1,9,-5,1,5,-2,9,-2,-2,6,7,-9,-8,9,-5,4,-1,10,-9,3,-5,8,3,-4,4,4,3,-4,-10,-7,-5,3,-3,10,-3,5,-8,-9,-2,-7,4,-8,5,-10,-4,-9,7,2,4,3,7,-5,-10,9,9,8,5,10,9,-4,6,-9,5,4,-7,5,4,10,-4,6,5,7,-4,-10,7,-4,-7,-8,6,10,-9,-7,4,-9,-8,-4,-10,3,-9,7,-6,1,-5,6,10,-5,10,4,-3,6,7,-4,-2,3,3,7,10,-5,-4,-6,-4,5,-5,9,9,9,5,5,4,9,5,-7,4,9,2,4,6,-1,6,9,7,-1,1,4,-3,3,10,4,1,-4,9,-10,-5,8,-4,9,4,8,8,-1,4,1,-3,8,8,-10,7,-4,4,8,-10,1,-8,9,10,9,3,8,4,-3,-7,1,-4,8,8,6,-4,-2,-6,2,-1,2,10,-4,-7,9,2,7,5,-2,3,3,-4,2,5,8,5,-2,1,1,2,1,10,-10,3,-9,1,-6,6,7,-3,7,-6,-3,2,-4,-6,8,2,10,-1,4,1,-7,1,10,10,10,-6,-4,10,5,-2,9,-3,1,-8,-6,-8,-7,6,1,-7,-3,-7,-3,6,3,5,3,-1,-1,-1,9,9,-6,-7,2,-9,7,3,-5,2,-8,9,4,-6,-10,-2,-6,-9,6,1,-10,-5,8,-8,9,-10,6,10,1,5,-5,-4,-5,-3,-7,-9,5,-3,-3,8,3,-3,-9,-1,1,4,2,-10,1,8,-10,-6,-2,-9,-1,9,7,7,4,-6,1,-4,-10,-1,-8,8,7,-2,-2,-4,-8,-1,4,10,-3,5,-8,8,-3,-8,8,-8,9,-4,1,-6,-2,3,-2,-7,9,10,3,3,8,7,-7,-1,-3,7,-4,2,-1,-5,7,-9,-6,-4,-8,-4,-10,2,-6,-4], dtype = "int64")#candidate|2315|(650,)|const|int64
call_2314 = relay.TupleGetItem(func_1704_call(relay.reshape(const_2315.astype('int64'), [650,])), 1)
call_2316 = relay.TupleGetItem(func_1706_call(relay.reshape(const_2315.astype('int64'), [650,])), 1)
var_2325 = relay.var("var_2325", dtype = "int64", shape = (650,))#candidate|2325|(650,)|var|int64
bop_2326 = relay.divide(const_2315.astype('float64'), relay.reshape(var_2325.astype('float64'), relay.shape_of(const_2315))) # shape=(650,)
func_1183_call = mod.get_global_var('func_1183')
func_1184_call = mutated_mod.get_global_var('func_1184')
call_2344 = relay.TupleGetItem(func_1183_call(), 0)
call_2345 = relay.TupleGetItem(func_1184_call(), 0)
uop_2376 = relay.cos(const_2315.astype('float64')) # shape=(650,)
output = relay.Tuple([call_2271,call_2281,call_2314,bop_2326,call_2344,uop_2376,])
output2 = relay.Tuple([call_2272,call_2282,call_2316,bop_2326,call_2345,uop_2376,])
func_2381 = relay.Function([var_2325,], output)
mod['func_2381'] = func_2381
mod = relay.transform.InferType()(mod)
mutated_mod['func_2381'] = func_2381
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2382 = relay.var("var_2382", dtype = "int64", shape = (650,))#candidate|2382|(650,)|var|int64
func_2381_call = mutated_mod.get_global_var('func_2381')
call_2383 = func_2381_call(var_2382)
output = call_2383
func_2384 = relay.Function([var_2382], output)
mutated_mod['func_2384'] = func_2384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_739_call = mod.get_global_var('func_739')
func_741_call = mutated_mod.get_global_var('func_741')
call_2409 = relay.TupleGetItem(func_739_call(), 0)
call_2410 = relay.TupleGetItem(func_741_call(), 0)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_2417 = func_1197_call()
call_2418 = func_1197_call()
output = relay.Tuple([call_2409,call_2417,])
output2 = relay.Tuple([call_2410,call_2418,])
func_2420 = relay.Function([], output)
mod['func_2420'] = func_2420
mod = relay.transform.InferType()(mod)
mutated_mod['func_2420'] = func_2420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2420_call = mutated_mod.get_global_var('func_2420')
call_2421 = func_2420_call()
output = call_2421
func_2422 = relay.Function([], output)
mutated_mod['func_2422'] = func_2422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_361_call = mod.get_global_var('func_361')
func_363_call = mutated_mod.get_global_var('func_363')
call_2432 = relay.TupleGetItem(func_361_call(), 0)
call_2433 = relay.TupleGetItem(func_363_call(), 0)
output = relay.Tuple([call_2432,])
output2 = relay.Tuple([call_2433,])
func_2434 = relay.Function([], output)
mod['func_2434'] = func_2434
mod = relay.transform.InferType()(mod)
output = func_2434()
func_2435 = relay.Function([], output)
mutated_mod['func_2435'] = func_2435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1047_call = mod.get_global_var('func_1047')
func_1048_call = mutated_mod.get_global_var('func_1048')
call_2463 = func_1047_call()
call_2464 = func_1047_call()
func_2420_call = mod.get_global_var('func_2420')
func_2422_call = mutated_mod.get_global_var('func_2422')
call_2488 = relay.TupleGetItem(func_2420_call(), 0)
call_2489 = relay.TupleGetItem(func_2422_call(), 0)
output = relay.Tuple([call_2463,call_2488,])
output2 = relay.Tuple([call_2464,call_2489,])
func_2494 = relay.Function([], output)
mod['func_2494'] = func_2494
mod = relay.transform.InferType()(mod)
mutated_mod['func_2494'] = func_2494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2494_call = mutated_mod.get_global_var('func_2494')
call_2495 = func_2494_call()
output = call_2495
func_2496 = relay.Function([], output)
mutated_mod['func_2496'] = func_2496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_2576 = func_1380_call()
call_2577 = func_1380_call()
output = relay.Tuple([call_2576,])
output2 = relay.Tuple([call_2577,])
func_2586 = relay.Function([], output)
mod['func_2586'] = func_2586
mod = relay.transform.InferType()(mod)
mutated_mod['func_2586'] = func_2586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mutated_mod.get_global_var('func_2586')
call_2587 = func_2586_call()
output = call_2587
func_2588 = relay.Function([], output)
mutated_mod['func_2588'] = func_2588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_2607 = func_1067_call()
call_2608 = func_1067_call()
output = call_2607
output2 = call_2608
func_2609 = relay.Function([], output)
mod['func_2609'] = func_2609
mod = relay.transform.InferType()(mod)
output = func_2609()
func_2610 = relay.Function([], output)
mutated_mod['func_2610'] = func_2610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1336_call = mod.get_global_var('func_1336')
func_1337_call = mutated_mod.get_global_var('func_1337')
call_2637 = func_1336_call()
call_2638 = func_1336_call()
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_2649 = relay.TupleGetItem(func_208_call(), 1)
call_2650 = relay.TupleGetItem(func_210_call(), 1)
output = relay.Tuple([call_2637,call_2649,])
output2 = relay.Tuple([call_2638,call_2650,])
func_2651 = relay.Function([], output)
mod['func_2651'] = func_2651
mod = relay.transform.InferType()(mod)
output = func_2651()
func_2652 = relay.Function([], output)
mutated_mod['func_2652'] = func_2652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_875_call = mod.get_global_var('func_875')
func_877_call = mutated_mod.get_global_var('func_877')
call_2672 = relay.TupleGetItem(func_875_call(), 3)
call_2673 = relay.TupleGetItem(func_877_call(), 3)
func_2251_call = mod.get_global_var('func_2251')
func_2253_call = mutated_mod.get_global_var('func_2253')
call_2680 = relay.TupleGetItem(func_2251_call(), 1)
call_2681 = relay.TupleGetItem(func_2253_call(), 1)
func_2434_call = mod.get_global_var('func_2434')
func_2435_call = mutated_mod.get_global_var('func_2435')
call_2687 = relay.TupleGetItem(func_2434_call(), 0)
call_2688 = relay.TupleGetItem(func_2435_call(), 0)
output = relay.Tuple([call_2672,call_2680,call_2687,])
output2 = relay.Tuple([call_2673,call_2681,call_2688,])
func_2708 = relay.Function([], output)
mod['func_2708'] = func_2708
mod = relay.transform.InferType()(mod)
mutated_mod['func_2708'] = func_2708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mutated_mod.get_global_var('func_2708')
call_2709 = func_2708_call()
output = call_2709
func_2710 = relay.Function([], output)
mutated_mod['func_2710'] = func_2710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2420_call = mod.get_global_var('func_2420')
func_2422_call = mutated_mod.get_global_var('func_2422')
call_2711 = relay.TupleGetItem(func_2420_call(), 0)
call_2712 = relay.TupleGetItem(func_2422_call(), 0)
func_41_call = mod.get_global_var('func_41')
func_43_call = mutated_mod.get_global_var('func_43')
const_2718 = relay.const([True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,False], dtype = "bool")#candidate|2718|(52,)|const|bool
call_2717 = func_41_call(relay.reshape(const_2718.astype('bool'), [4, 13, 1]))
call_2719 = func_41_call(relay.reshape(const_2718.astype('bool'), [4, 13, 1]))
output = relay.Tuple([call_2711,call_2717,const_2718,])
output2 = relay.Tuple([call_2712,call_2719,const_2718,])
func_2722 = relay.Function([], output)
mod['func_2722'] = func_2722
mod = relay.transform.InferType()(mod)
output = func_2722()
func_2723 = relay.Function([], output)
mutated_mod['func_2723'] = func_2723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_2763 = relay.TupleGetItem(func_2708_call(), 0)
call_2764 = relay.TupleGetItem(func_2710_call(), 0)
uop_2765 = relay.atanh(call_2763.astype('float64')) # shape=(16, 14, 16)
uop_2767 = relay.atanh(call_2764.astype('float64')) # shape=(16, 14, 16)
output = relay.Tuple([uop_2765,])
output2 = relay.Tuple([uop_2767,])
func_2768 = relay.Function([], output)
mod['func_2768'] = func_2768
mod = relay.transform.InferType()(mod)
mutated_mod['func_2768'] = func_2768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2768_call = mutated_mod.get_global_var('func_2768')
call_2769 = func_2768_call()
output = call_2769
func_2770 = relay.Function([], output)
mutated_mod['func_2770'] = func_2770
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2789 = relay.const([[[3.337768,-8.204399,-3.801835,-3.305019,-1.059893,-0.447650,-4.309479,-9.695346,9.221321,-5.021680,7.922130,3.953300,-7.529803,-1.086120]],[[5.318524,-0.959401,2.279594,0.334578,-1.377648,7.924032,-6.510723,-4.812947,-2.360360,-8.894367,0.196864,-1.297164,3.372674,8.588686]],[[-8.152238,-7.397119,6.504836,-6.621166,2.450305,-3.571479,-6.583783,5.019549,6.101499,9.221839,-7.929036,-1.450837,-4.804234,-4.072018]],[[-0.656989,-2.244676,5.138644,2.209350,5.679497,3.598505,4.090046,2.791515,0.401366,1.588245,-0.930015,-1.779045,-5.835914,-0.680262]],[[2.309018,-4.334679,-6.516751,-3.373496,9.354598,-1.338171,-8.663606,5.996718,2.139286,7.887166,4.565415,-5.501680,5.757886,-4.947917]],[[1.678416,-4.444631,3.718081,-1.397320,7.309807,1.067166,-3.088738,-1.438251,-2.023445,1.905604,-3.806394,-3.306959,9.247116,5.781788]],[[-0.287478,-2.627649,6.654923,-2.513626,0.224232,-7.066379,-1.753226,0.465776,-1.747976,5.845272,3.829810,-0.441147,2.852663,-5.024374]],[[3.734256,5.894464,5.710960,2.358310,-2.086512,-3.594043,7.260672,3.762140,-1.781502,-1.914879,-6.658012,5.201293,-9.148662,6.057888]],[[2.264717,-9.157442,8.742173,-7.436520,2.252739,5.451315,5.104178,1.731219,0.454971,-3.885253,0.610136,-0.670886,-4.037761,-3.879251]]], dtype = "float64")#candidate|2789|(9, 1, 14)|const|float64
uop_2790 = relay.cosh(const_2789.astype('float64')) # shape=(9, 1, 14)
func_408_call = mod.get_global_var('func_408')
func_409_call = mutated_mod.get_global_var('func_409')
call_2793 = func_408_call()
call_2794 = func_408_call()
func_2722_call = mod.get_global_var('func_2722')
func_2723_call = mutated_mod.get_global_var('func_2723')
call_2828 = relay.TupleGetItem(func_2722_call(), 2)
call_2829 = relay.TupleGetItem(func_2723_call(), 2)
output = relay.Tuple([uop_2790,call_2793,call_2828,])
output2 = relay.Tuple([uop_2790,call_2794,call_2829,])
func_2835 = relay.Function([], output)
mod['func_2835'] = func_2835
mod = relay.transform.InferType()(mod)
output = func_2835()
func_2836 = relay.Function([], output)
mutated_mod['func_2836'] = func_2836
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2853 = relay.var("var_2853", dtype = "float64", shape = ())#candidate|2853|()|var|float64
var_2854 = relay.var("var_2854", dtype = "float64", shape = (7, 5, 4))#candidate|2854|(7, 5, 4)|var|float64
bop_2855 = relay.mod(var_2853.astype('float64'), var_2854.astype('float64')) # shape=(7, 5, 4)
func_2251_call = mod.get_global_var('func_2251')
func_2253_call = mutated_mod.get_global_var('func_2253')
call_2869 = relay.TupleGetItem(func_2251_call(), 0)
call_2870 = relay.TupleGetItem(func_2253_call(), 0)
func_2143_call = mod.get_global_var('func_2143')
func_2146_call = mutated_mod.get_global_var('func_2146')
var_2882 = relay.var("var_2882", dtype = "float64", shape = (52,))#candidate|2882|(52,)|var|float64
call_2881 = relay.TupleGetItem(func_2143_call(relay.reshape(var_2882.astype('float64'), [52,])), 0)
call_2883 = relay.TupleGetItem(func_2146_call(relay.reshape(var_2882.astype('float64'), [52,])), 0)
output = relay.Tuple([bop_2855,call_2869,call_2881,var_2882,])
output2 = relay.Tuple([bop_2855,call_2870,call_2883,var_2882,])
func_2887 = relay.Function([var_2853,var_2854,var_2882,], output)
mod['func_2887'] = func_2887
mod = relay.transform.InferType()(mod)
var_2888 = relay.var("var_2888", dtype = "float64", shape = ())#candidate|2888|()|var|float64
var_2889 = relay.var("var_2889", dtype = "float64", shape = (7, 5, 4))#candidate|2889|(7, 5, 4)|var|float64
var_2890 = relay.var("var_2890", dtype = "float64", shape = (52,))#candidate|2890|(52,)|var|float64
output = func_2887(var_2888,var_2889,var_2890,)
func_2891 = relay.Function([var_2888,var_2889,var_2890,], output)
mutated_mod['func_2891'] = func_2891
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2904 = relay.const([[[4,10,2,-3,-9,1,3,8,-4],[-5,4,4,2,2,2,-1,-5,-6],[8,8,-10,-7,-8,-2,-8,7,-5],[-5,1,-4,7,1,8,-10,9,-6],[-8,-1,-10,9,2,-9,-9,5,2],[-4,7,-10,3,3,-2,10,-2,8],[-5,-9,3,7,-2,3,-4,-2,2],[-7,-6,8,9,-9,2,2,-6,-6],[9,-2,-6,5,-2,2,-3,-3,-1],[-6,-1,-1,4,-10,-6,-9,10,6],[-6,7,-9,6,-9,-10,9,1,1],[-3,-7,5,-1,-8,6,10,-6,2],[7,-9,4,-7,5,5,1,-3,10],[2,2,4,-8,2,1,-1,-9,-5],[8,-9,1,1,1,10,1,5,-6],[1,-3,-7,-6,-5,7,-1,-3,9]]], dtype = "uint64")#candidate|2904|(1, 16, 9)|const|uint64
const_2905 = relay.const([[[7,1,-7,1,-8,-10,2,4,2],[-6,-5,8,-9,6,-6,-8,-4,-2],[3,-4,2,-10,9,-4,1,9,-4],[-4,9,-10,10,10,7,6,7,1],[-4,-4,2,-6,-7,-1,-4,-3,-4],[-10,3,8,-3,-1,6,10,10,5],[-1,7,7,-10,-10,4,9,8,-5],[3,-3,-8,6,-9,1,10,-6,-3],[-4,4,7,-8,1,8,4,-3,6],[8,-9,-10,-2,6,7,10,2,5],[-9,6,1,-7,-5,-2,2,-5,-6],[3,5,-5,-9,-6,-9,2,6,-2],[-2,-9,-7,-2,-10,2,-1,-5,4],[-1,-7,6,9,-7,-6,9,-8,-8],[1,6,4,9,-2,-4,-4,-1,-3],[8,5,-7,4,10,4,7,-6,9]],[[10,7,-10,-8,5,5,8,-10,-9],[-3,-2,-3,9,-4,-10,6,10,-1],[4,5,1,-7,-3,10,-3,3,6],[-4,5,-1,-10,4,-10,-8,-6,-2],[-3,4,6,-8,-8,6,8,-8,-5],[-7,-6,5,-7,10,8,-8,3,-8],[7,9,8,1,3,-6,-8,5,5],[-10,5,-4,2,-5,-6,-5,1,-10],[9,-5,-1,-3,6,-3,-10,-1,-4],[7,9,-10,-4,-9,9,2,-1,10],[-1,-2,-5,-8,-1,7,6,-9,5],[-9,6,-2,7,3,-4,-3,8,-10],[2,7,8,9,9,10,-9,2,9],[10,-9,-6,-6,6,4,-8,-5,-2],[-8,-9,-8,2,10,-3,-8,-4,4],[8,9,-5,-1,1,-7,-10,-3,3]],[[-2,1,6,10,6,1,-6,-1,4],[-9,-8,-2,5,-9,5,-10,-4,-8],[4,6,-1,-10,-7,-1,-7,-7,-3],[10,-3,6,1,-4,6,7,7,10],[10,7,10,-10,2,-4,6,-1,-4],[-8,3,-10,-3,9,-2,-2,-8,2],[10,-9,-9,5,8,8,-5,7,-8],[6,-5,3,-3,-4,3,1,7,-4],[-2,4,9,1,8,-1,-6,10,-2],[-1,-6,-6,-10,-4,6,5,-9,7],[1,-9,8,5,-6,7,8,5,-4],[4,-9,-5,6,-10,-9,2,-6,10],[2,-10,-10,8,-9,-1,3,9,2],[6,3,5,-4,-3,8,8,9,-8],[-7,7,1,-8,-3,-8,-2,5,10],[-9,-6,9,-8,-4,5,5,2,7]],[[-2,-8,4,2,-10,-1,-8,7,3],[-8,2,-7,7,8,-6,1,-2,2],[6,-1,-2,7,3,4,1,-6,-5],[10,6,1,3,-9,2,-2,-9,5],[7,3,-7,7,-8,-10,7,7,8],[-3,-10,7,-8,-2,-3,-8,8,-10],[8,-4,-2,3,6,1,6,6,-10],[9,1,-5,-8,-5,-4,-1,2,-3],[10,2,-4,10,8,-7,9,6,-9],[4,-4,4,-4,2,-2,10,1,-10],[8,-6,-7,5,-10,6,4,7,-1],[-5,7,10,-4,-3,-6,-7,-4,1],[7,5,-8,9,3,7,-8,-8,2],[6,2,-9,4,-1,1,8,-7,-5],[6,-7,1,-4,8,6,1,8,-3],[2,-4,-4,6,-5,6,9,6,-2]],[[4,6,7,-4,3,-6,8,4,2],[9,1,-2,-5,-9,-1,-8,5,6],[7,4,3,-8,7,-5,9,8,9],[5,3,7,-4,-8,10,-5,-6,-6],[-9,10,-4,5,-10,-3,3,4,-3],[9,-7,-8,-10,3,2,-3,-4,6],[-9,-3,-4,-9,-6,2,-6,-9,-7],[-10,-10,1,2,4,8,-4,-1,-5],[3,3,-8,9,7,9,-6,10,-1],[9,-8,7,-3,2,-6,-10,-10,-8],[-7,4,-6,-9,-9,-10,2,4,-4],[-6,2,10,5,-8,-10,-5,5,2],[-2,6,10,2,7,3,-6,8,-7],[5,6,-8,10,-5,5,-10,8,8],[4,-9,-7,2,-1,1,-9,-1,10],[3,-5,8,-8,6,-4,4,-4,7]],[[-5,-7,9,4,4,5,7,7,8],[3,-4,2,3,4,-8,3,1,-8],[5,10,-9,5,-3,-9,8,9,-3],[7,-6,7,3,-5,-7,-9,-5,4],[-6,-2,-1,-1,5,10,8,5,-2],[6,-2,2,-4,-4,9,-4,6,3],[-7,8,-2,-1,8,4,10,-5,-3],[-4,7,-7,-3,-1,-7,6,-9,-5],[3,-3,3,2,1,6,4,2,-7],[8,-10,-8,-3,8,-9,5,10,-4],[5,-6,3,10,-3,9,-9,-9,7],[-5,-2,-2,-7,-4,5,10,3,-6],[-2,-6,-9,5,3,9,3,-8,-7],[5,-9,9,-6,2,8,8,4,-5],[8,-1,7,-10,-3,3,-1,2,-9],[4,1,-7,-5,9,6,2,-7,6]],[[4,2,4,-7,-8,-5,-1,2,-6],[-3,1,-10,-7,4,7,7,4,1],[9,-3,9,1,8,2,-2,2,-6],[-2,-7,6,-6,7,6,-8,-10,-9],[-10,8,6,9,-4,1,5,2,2],[8,-5,-8,7,-4,-6,5,-3,-3],[3,-7,4,7,-5,-3,-1,7,-8],[-4,2,9,1,3,6,-5,7,-4],[-1,-2,1,3,6,7,6,6,-7],[5,8,-4,-5,3,-8,-5,-9,-5],[-2,-4,10,-10,-1,4,3,10,9],[-8,-10,8,-8,-8,2,7,4,2],[-3,10,-9,5,-4,-5,-6,7,4],[7,10,6,1,-6,9,8,-10,-7],[3,-3,7,-1,-3,-1,6,6,3],[8,9,8,-1,9,7,10,-8,-8]],[[-3,7,7,-10,6,-7,-1,-5,-8],[-8,9,10,-3,-7,-5,5,-4,-5],[-4,2,-2,1,5,-4,8,3,7],[-3,-6,-3,-5,-1,5,-8,3,-9],[10,-10,5,-9,4,-10,7,-3,-4],[-6,-5,6,4,-8,-5,-2,6,-1],[6,4,5,-2,7,-5,-2,-10,7],[8,1,8,3,-2,-4,10,4,-1],[-9,-1,-8,7,-7,-10,4,-6,2],[-8,6,3,-2,1,8,5,4,-6],[-2,4,-2,4,10,9,-5,-8,9],[-10,-8,-9,2,-6,9,9,-4,9],[-7,10,-2,-3,7,8,5,-7,3],[-9,-9,1,6,-7,3,6,10,7],[-6,1,-2,-9,10,-9,-1,8,-3],[8,-7,10,3,-9,-2,7,7,-9]],[[-8,7,4,1,-4,5,-7,9,-8],[-3,-4,3,9,4,-9,-4,-3,7],[6,-5,8,-10,-5,-7,7,-3,4],[-7,-10,-8,3,-6,-4,-4,-2,3],[-10,-2,-3,7,1,-2,-10,8,9],[-6,10,9,-6,4,-3,-7,1,8],[-8,-5,7,-6,6,4,9,-8,-4],[3,-1,10,-4,-6,6,-7,9,5],[-9,10,4,1,-5,-2,-7,3,-2],[1,-9,8,-1,10,-9,5,-6,3],[10,-3,4,-6,-10,8,-1,7,4],[-5,-2,-6,-10,9,7,-7,-8,1],[-6,5,-5,10,-10,6,-2,-10,6],[5,8,-5,8,1,2,1,1,8],[7,-4,2,-2,10,9,9,-5,8],[3,2,3,7,4,8,-6,7,-3]],[[-9,-5,8,-7,8,5,2,3,1],[7,-9,-8,2,-5,5,10,-4,4],[-1,-10,-3,-6,-4,-8,-6,-5,-8],[4,-8,-1,-7,-8,7,3,-3,8],[2,2,4,3,4,7,-2,2,-1],[6,3,9,5,10,6,5,-2,4],[-6,-8,-6,2,7,9,-6,-6,-8],[-1,-6,3,8,10,5,-8,10,1],[10,-3,9,2,8,6,-2,8,-7],[10,9,5,-3,-4,8,10,-9,4],[-8,3,4,-1,-6,4,2,-9,3],[6,7,-2,5,3,-8,10,-3,1],[4,-4,3,-6,-2,-7,-10,-5,-2],[2,-1,-1,-9,-5,6,10,8,-2],[1,-7,2,-2,-4,9,-5,5,-5],[-7,7,-7,-9,-5,-2,-1,5,-10]],[[9,-1,-10,-1,3,-3,2,5,3],[6,-10,3,8,-6,10,-3,-7,-4],[-7,2,-2,-8,-4,-6,4,2,-3],[-7,9,-7,9,-9,-4,-1,-9,1],[-7,-8,4,1,5,6,-8,-10,-4],[9,-7,-10,-3,-2,-6,-6,5,-8],[-7,9,-2,-2,7,1,-1,7,-9],[8,9,-6,6,10,5,10,-6,-6],[5,-1,1,4,-2,-9,7,3,-1],[3,-1,9,-10,10,10,-6,-5,9],[-9,-10,-3,4,-8,8,-5,7,3],[-4,4,10,-1,3,5,3,-5,7],[-4,8,7,1,6,-10,3,3,-9],[5,1,-7,10,-2,-3,-2,7,10],[7,-6,1,-5,1,4,-3,9,9],[-2,-5,3,-1,-8,-5,4,10,-7]],[[5,7,-10,-7,2,-8,-3,-9,7],[10,-6,-8,-7,-5,2,9,-3,-7],[-7,-9,10,1,10,-4,3,4,-10],[-10,-7,-3,-8,8,9,8,8,7],[5,-3,-8,-1,-9,-10,-9,8,-9],[7,-3,1,-10,10,-4,-8,-4,3],[8,-5,-9,7,-9,-6,-6,-6,-5],[3,-3,5,-9,-6,6,5,3,10],[-6,10,10,4,6,-6,-6,-8,1],[8,-8,5,4,-5,-1,-9,-2,2],[6,9,-5,-6,-6,-10,8,9,2],[8,-3,5,10,10,-6,5,10,5],[-10,6,3,-5,2,9,-5,2,-1],[-3,-2,4,-5,9,4,-1,-2,2],[-3,-10,-10,-10,5,-4,-8,7,10],[-7,10,-2,-9,1,-2,-9,-10,9]],[[-8,-7,-1,-9,-8,1,10,4,-4],[-4,-1,-4,-8,7,4,9,5,4],[7,-8,-4,4,7,-3,6,5,4],[10,4,1,-3,9,4,-7,9,-7],[-4,-6,-3,-3,-10,-8,-8,8,8],[-10,-10,1,10,-7,3,3,-9,8],[10,2,-10,4,-9,-1,-2,7,8],[7,6,-1,10,-6,-1,-10,6,10],[-2,-7,7,-7,-9,-10,-4,6,-3],[-1,-9,1,-1,-2,4,-6,-6,-7],[-1,1,-3,-6,10,-9,9,5,4],[9,-10,4,-4,-10,3,3,-6,-1],[-7,-5,9,1,1,7,5,-3,-10],[9,-9,-2,10,4,10,-4,4,-8],[-1,-2,-7,10,-6,7,1,-10,8],[-1,-9,-4,-2,-8,8,-9,4,-1]],[[-10,-5,5,-4,1,-7,6,-7,4],[-6,10,5,9,-6,5,8,-2,6],[6,-4,-4,7,-10,6,6,2,-5],[5,-9,1,-2,-3,-1,-2,9,-7],[6,6,8,9,4,-3,8,-5,1],[-3,4,-5,-5,3,2,8,3,3],[-7,-5,-6,2,-6,-1,2,8,-1],[2,-10,1,-6,-10,-4,10,9,-2],[6,9,10,9,-5,1,-3,-4,-9],[-7,-8,4,1,-3,9,-5,1,7],[5,7,-6,-6,1,-2,-8,5,-5],[8,-3,8,8,9,9,-3,5,-4],[8,7,-1,2,-9,5,-8,-2,4],[6,-5,-3,2,-7,-8,5,-3,7],[-3,-3,-8,6,1,-10,8,-7,1],[-7,10,8,-7,3,-7,-3,-1,-3]],[[-7,8,7,-3,4,-9,-1,-7,-10],[-8,10,-6,4,-7,8,-8,1,2],[-4,4,-6,4,-9,10,-8,8,-10],[2,4,10,1,8,4,9,-7,-7],[-8,-10,-3,-8,-9,-6,-1,-6,10],[-8,6,3,7,9,9,-5,-6,-5],[7,10,4,-8,4,1,-10,7,4],[-7,3,5,1,-8,6,5,-1,-1],[1,-9,3,-3,8,2,-9,2,-2],[-4,6,-9,-7,8,-1,4,-10,1],[2,10,-1,1,9,1,-2,-6,7],[3,-2,-4,1,9,1,-7,-1,3],[9,-3,9,2,1,4,-1,-3,-9],[8,-7,1,6,-2,-5,2,-9,2],[10,-3,-10,-10,1,8,4,-10,-4],[10,-1,8,7,9,4,6,-7,-7]],[[-4,-10,4,-7,-3,-9,9,6,4],[-5,-3,-9,-10,-2,-3,-4,10,6],[-1,10,1,2,3,-2,-3,9,3],[-4,2,8,7,-4,5,8,-4,-1],[-2,-7,-2,-1,5,-2,8,1,-3],[7,2,-6,-3,2,-7,-6,-5,-3],[1,-3,-5,-7,2,5,9,-5,5],[-8,10,-8,5,5,9,9,3,8],[-9,-1,5,4,7,-6,5,-3,-6],[-1,4,-2,-3,3,-5,5,8,-2],[-3,-8,10,-5,10,9,8,8,5],[7,1,5,2,9,-6,-4,1,-9],[8,5,1,-5,-1,1,2,-5,7],[-8,-8,1,-10,-2,1,-2,-7,-8],[-1,9,3,-10,-7,8,3,-7,5],[-6,4,-7,-3,-5,-6,-1,3,8]]], dtype = "uint64")#candidate|2905|(16, 16, 9)|const|uint64
bop_2906 = relay.bitwise_xor(const_2904.astype('uint64'), const_2905.astype('uint64')) # shape=(16, 16, 9)
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
var_2911 = relay.var("var_2911", dtype = "float64", shape = (1, 756))#candidate|2911|(1, 756)|var|float64
call_2910 = relay.TupleGetItem(func_1725_call(relay.reshape(var_2911.astype('float64'), [7, 12, 9])), 0)
call_2912 = relay.TupleGetItem(func_1728_call(relay.reshape(var_2911.astype('float64'), [7, 12, 9])), 0)
func_1968_call = mod.get_global_var('func_1968')
func_1970_call = mutated_mod.get_global_var('func_1970')
call_2921 = relay.TupleGetItem(func_1968_call(), 0)
call_2922 = relay.TupleGetItem(func_1970_call(), 0)
bop_2923 = relay.floor_mod(const_2905.astype('float64'), relay.reshape(bop_2906.astype('float64'), relay.shape_of(const_2905))) # shape=(16, 16, 9)
func_2494_call = mod.get_global_var('func_2494')
func_2496_call = mutated_mod.get_global_var('func_2496')
call_2935 = relay.TupleGetItem(func_2494_call(), 0)
call_2936 = relay.TupleGetItem(func_2496_call(), 0)
bop_2937 = relay.less_equal(const_2904.astype('bool'), const_2905.astype('bool')) # shape=(16, 16, 9)
uop_2946 = relay.asinh(const_2904.astype('float32')) # shape=(1, 16, 9)
var_2949 = relay.var("var_2949", dtype = "float32", shape = (1, 16, 9))#candidate|2949|(1, 16, 9)|var|float32
bop_2950 = relay.floor_divide(uop_2946.astype('float64'), relay.reshape(var_2949.astype('float64'), relay.shape_of(uop_2946))) # shape=(1, 16, 9)
func_1725_call = mod.get_global_var('func_1725')
func_1728_call = mutated_mod.get_global_var('func_1728')
call_2954 = relay.TupleGetItem(func_1725_call(relay.reshape(var_2911.astype('float64'), [7, 12, 9])), 0)
call_2955 = relay.TupleGetItem(func_1728_call(relay.reshape(var_2911.astype('float64'), [7, 12, 9])), 0)
uop_2964 = relay.acos(uop_2946.astype('float32')) # shape=(1, 16, 9)
output = relay.Tuple([call_2910,var_2911,call_2921,bop_2923,call_2935,bop_2937,bop_2950,call_2954,uop_2964,])
output2 = relay.Tuple([call_2912,var_2911,call_2922,bop_2923,call_2936,bop_2937,bop_2950,call_2955,uop_2964,])
func_2983 = relay.Function([var_2911,var_2949,], output)
mod['func_2983'] = func_2983
mod = relay.transform.InferType()(mod)
var_2984 = relay.var("var_2984", dtype = "float64", shape = (1, 756))#candidate|2984|(1, 756)|var|float64
var_2985 = relay.var("var_2985", dtype = "float32", shape = (1, 16, 9))#candidate|2985|(1, 16, 9)|var|float32
output = func_2983(var_2984,var_2985,)
func_2986 = relay.Function([var_2984,var_2985,], output)
mutated_mod['func_2986'] = func_2986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1247_call = mod.get_global_var('func_1247')
func_1249_call = mutated_mod.get_global_var('func_1249')
call_3059 = relay.TupleGetItem(func_1247_call(), 0)
call_3060 = relay.TupleGetItem(func_1249_call(), 0)
uop_3062 = relay.log2(call_3059.astype('float64')) # shape=(5, 7, 15)
uop_3064 = relay.log2(call_3060.astype('float64')) # shape=(5, 7, 15)
func_1914_call = mod.get_global_var('func_1914')
func_1916_call = mutated_mod.get_global_var('func_1916')
var_3067 = relay.var("var_3067", dtype = "int64", shape = (672,))#candidate|3067|(672,)|var|int64
call_3066 = relay.TupleGetItem(func_1914_call(relay.reshape(var_3067.astype('int64'), [12, 4, 14])), 0)
call_3068 = relay.TupleGetItem(func_1916_call(relay.reshape(var_3067.astype('int64'), [12, 4, 14])), 0)
output = relay.Tuple([uop_3062,call_3066,var_3067,])
output2 = relay.Tuple([uop_3064,call_3068,var_3067,])
func_3083 = relay.Function([var_3067,], output)
mod['func_3083'] = func_3083
mod = relay.transform.InferType()(mod)
mutated_mod['func_3083'] = func_3083
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3084 = relay.var("var_3084", dtype = "int64", shape = (672,))#candidate|3084|(672,)|var|int64
func_3083_call = mutated_mod.get_global_var('func_3083')
call_3085 = func_3083_call(var_3084)
output = call_3085
func_3086 = relay.Function([var_3084], output)
mutated_mod['func_3086'] = func_3086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1414_call = mod.get_global_var('func_1414')
func_1416_call = mutated_mod.get_global_var('func_1416')
call_3117 = relay.TupleGetItem(func_1414_call(), 0)
call_3118 = relay.TupleGetItem(func_1416_call(), 0)
output = relay.Tuple([call_3117,])
output2 = relay.Tuple([call_3118,])
func_3127 = relay.Function([], output)
mod['func_3127'] = func_3127
mod = relay.transform.InferType()(mod)
mutated_mod['func_3127'] = func_3127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3127_call = mutated_mod.get_global_var('func_3127')
call_3128 = func_3127_call()
output = call_3128
func_3129 = relay.Function([], output)
mutated_mod['func_3129'] = func_3129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3130 = relay.var("var_3130", dtype = "uint8", shape = (7, 16, 9))#candidate|3130|(7, 16, 9)|var|uint8
var_3131 = relay.var("var_3131", dtype = "uint8", shape = (7, 16, 9))#candidate|3131|(7, 16, 9)|var|uint8
bop_3132 = relay.bitwise_xor(var_3130.astype('uint8'), relay.reshape(var_3131.astype('uint8'), relay.shape_of(var_3130))) # shape=(7, 16, 9)
var_3140 = relay.var("var_3140", dtype = "uint8", shape = (7, 16, 9))#candidate|3140|(7, 16, 9)|var|uint8
bop_3141 = relay.logical_xor(var_3130.astype('uint8'), relay.reshape(var_3140.astype('uint8'), relay.shape_of(var_3130))) # shape=(7, 16, 9)
uop_3151 = relay.atan(var_3131.astype('float32')) # shape=(7, 16, 9)
output = relay.Tuple([bop_3132,bop_3141,uop_3151,])
output2 = relay.Tuple([bop_3132,bop_3141,uop_3151,])
func_3168 = relay.Function([var_3130,var_3131,var_3140,], output)
mod['func_3168'] = func_3168
mod = relay.transform.InferType()(mod)
var_3169 = relay.var("var_3169", dtype = "uint8", shape = (7, 16, 9))#candidate|3169|(7, 16, 9)|var|uint8
var_3170 = relay.var("var_3170", dtype = "uint8", shape = (7, 16, 9))#candidate|3170|(7, 16, 9)|var|uint8
var_3171 = relay.var("var_3171", dtype = "uint8", shape = (7, 16, 9))#candidate|3171|(7, 16, 9)|var|uint8
output = func_3168(var_3169,var_3170,var_3171,)
func_3172 = relay.Function([var_3169,var_3170,var_3171,], output)
mutated_mod['func_3172'] = func_3172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_283_call = mod.get_global_var('func_283')
func_284_call = mutated_mod.get_global_var('func_284')
call_3174 = relay.TupleGetItem(func_283_call(), 0)
call_3175 = relay.TupleGetItem(func_284_call(), 0)
output = relay.Tuple([call_3174,])
output2 = relay.Tuple([call_3175,])
func_3181 = relay.Function([], output)
mod['func_3181'] = func_3181
mod = relay.transform.InferType()(mod)
output = func_3181()
func_3182 = relay.Function([], output)
mutated_mod['func_3182'] = func_3182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_3226 = func_1067_call()
call_3227 = func_1067_call()
output = relay.Tuple([call_3226,])
output2 = relay.Tuple([call_3227,])
func_3236 = relay.Function([], output)
mod['func_3236'] = func_3236
mod = relay.transform.InferType()(mod)
mutated_mod['func_3236'] = func_3236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3236_call = mutated_mod.get_global_var('func_3236')
call_3237 = func_3236_call()
output = call_3237
func_3238 = relay.Function([], output)
mutated_mod['func_3238'] = func_3238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mod.get_global_var('func_2586')
func_2588_call = mutated_mod.get_global_var('func_2588')
call_3239 = relay.TupleGetItem(func_2586_call(), 0)
call_3240 = relay.TupleGetItem(func_2588_call(), 0)
output = relay.Tuple([call_3239,])
output2 = relay.Tuple([call_3240,])
func_3259 = relay.Function([], output)
mod['func_3259'] = func_3259
mod = relay.transform.InferType()(mod)
mutated_mod['func_3259'] = func_3259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3259_call = mutated_mod.get_global_var('func_3259')
call_3260 = func_3259_call()
output = call_3260
func_3261 = relay.Function([], output)
mutated_mod['func_3261'] = func_3261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_283_call = mod.get_global_var('func_283')
func_284_call = mutated_mod.get_global_var('func_284')
call_3311 = relay.TupleGetItem(func_283_call(), 3)
call_3312 = relay.TupleGetItem(func_284_call(), 3)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_3334 = relay.TupleGetItem(func_2708_call(), 0)
call_3335 = relay.TupleGetItem(func_2710_call(), 0)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_3337 = relay.TupleGetItem(func_1935_call(), 0)
call_3338 = relay.TupleGetItem(func_1937_call(), 0)
output = relay.Tuple([call_3311,call_3334,call_3337,])
output2 = relay.Tuple([call_3312,call_3335,call_3338,])
func_3341 = relay.Function([], output)
mod['func_3341'] = func_3341
mod = relay.transform.InferType()(mod)
mutated_mod['func_3341'] = func_3341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3341_call = mutated_mod.get_global_var('func_3341')
call_3342 = func_3341_call()
output = call_3342
func_3343 = relay.Function([], output)
mutated_mod['func_3343'] = func_3343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3358 = relay.var("var_3358", dtype = "uint8", shape = (14, 15, 13))#candidate|3358|(14, 15, 13)|var|uint8
const_3359 = relay.const([[[-3,8,7,6,8,3,10,-1,-5,10,-4,5,9],[2,1,4,2,-7,7,8,7,-1,1,-1,10,-4],[4,-8,9,5,-7,-4,-2,9,6,-5,1,9,-7],[10,-6,2,4,-2,-3,-10,7,1,-5,-9,10,-4],[-9,4,-5,-3,-9,-10,-6,5,-9,-2,-1,6,-3],[-8,8,-3,7,2,2,-5,-10,-5,7,-8,6,-5],[-10,6,-5,-8,8,-9,-9,-9,6,-5,10,5,-1],[-4,-10,6,1,7,8,-2,-7,3,1,8,-7,6],[-2,-5,-3,-1,-9,4,1,-9,-7,5,-1,9,-10],[1,-1,-5,9,7,8,-6,-7,10,-4,-10,9,4],[-6,3,-1,5,3,-4,-9,-4,-10,-7,-1,-8,-5],[5,-4,3,-3,5,-1,7,-10,6,-3,-10,9,10],[6,4,-6,5,-9,7,-7,7,5,-1,4,-8,-8],[-9,-8,8,7,-5,-2,-3,1,4,-4,-7,4,4],[7,-4,-10,3,-2,-2,-2,1,7,6,6,7,10]],[[9,-4,-1,-6,-8,-8,6,10,8,-3,8,5,-10],[-4,10,-3,-8,-5,1,-4,10,10,3,-4,-3,-1],[8,5,-8,-7,2,9,-10,-9,-6,10,6,-1,-9],[9,1,5,8,7,8,4,5,-2,-10,6,5,-3],[5,9,9,7,9,-9,-9,-3,-4,1,-2,4,3],[9,5,10,-4,-5,-8,-4,2,2,-2,10,-3,5],[3,7,-1,-5,-8,8,5,-6,-4,10,4,9,8],[-1,-2,6,8,-3,-2,7,5,-4,7,-3,-10,10],[4,1,-3,-3,-3,-2,2,9,-6,-6,10,-9,-9],[1,-5,7,-2,-9,5,10,1,-8,-7,-9,-3,-2],[-4,-3,5,-6,7,-8,-4,-2,1,6,3,-6,-2],[5,-9,-8,10,-10,7,5,-9,-1,-4,-3,-6,-6],[4,-3,-7,2,5,-1,-3,-2,-4,4,-4,8,9],[-2,4,-8,-9,5,-9,-2,-8,3,-1,-2,6,2],[-1,7,-4,7,-8,-6,-7,-3,-9,3,7,9,-1]],[[-6,-6,-6,-1,-9,1,-2,-2,-5,3,-5,2,-10],[-4,-10,-9,-1,-5,2,-9,10,8,10,-4,10,3],[-8,3,-6,6,-1,4,-9,-10,-6,5,-2,10,4],[-7,9,-10,-4,6,2,-8,8,7,-3,-10,8,5],[-8,-2,-8,9,-8,8,-3,-4,8,-8,-7,4,1],[-9,1,1,-10,4,-3,-5,3,2,8,3,-1,-4],[5,8,-4,-7,2,4,2,-10,-2,-5,-10,3,5],[6,4,-6,-8,4,-3,6,-10,9,-8,-6,-6,5],[8,-6,1,-10,-3,-3,3,4,-2,-3,-9,-6,-3],[-7,-5,-7,-8,7,8,-6,6,-4,9,-4,8,-5],[2,-6,-8,-6,-7,8,-7,-7,-4,5,-2,-8,-9],[-6,-10,6,4,6,8,5,-4,-1,9,5,-8,-5],[3,5,-8,1,-2,9,-10,8,-7,-3,7,4,-9],[9,-1,-2,-10,6,-6,5,3,-5,-10,-3,5,10],[8,-8,-2,8,3,-8,5,-10,-1,10,-10,-9,8]],[[-9,-7,-7,-4,-4,1,-2,10,-9,3,7,-6,-8],[-3,-9,6,-6,-1,-8,7,3,-3,-4,4,9,5],[-3,-6,7,7,-2,4,-8,10,-9,-9,5,-7,7],[2,-1,4,8,-5,9,9,-7,-9,7,10,-6,-10],[2,-2,1,5,-3,-7,8,5,6,-9,8,-5,-9],[5,-5,-6,10,-6,-4,-2,9,-7,1,-6,-6,9],[3,3,2,-7,10,-4,3,-3,8,-3,7,5,2],[7,6,-5,2,3,3,1,-5,-6,-2,9,-6,-8],[-4,1,4,-5,-3,-1,6,9,4,-5,-2,1,-1],[5,-3,-10,-9,3,8,6,-6,-8,-1,-4,-6,7],[-3,3,9,1,2,8,-4,-7,-9,-6,9,7,-9],[-6,1,5,2,-8,-6,4,2,-1,3,1,-10,6],[8,-9,6,4,-1,-3,-4,3,-2,10,-8,-2,-9],[-4,-9,8,6,6,5,1,-6,-8,-7,-2,9,-7],[-5,10,4,-2,-4,10,-10,-4,-4,-10,9,-5,-10]],[[-7,1,9,-5,-9,-5,-1,3,-1,-6,9,-7,-2],[-8,5,6,-8,8,-2,-6,-1,5,-10,-3,-3,-3],[1,-1,10,-2,7,9,-2,3,-1,6,-2,5,-1],[-2,-7,7,6,-3,-7,-3,2,2,-10,-9,-7,-6],[7,-8,10,-3,6,-7,7,-1,6,1,-8,3,9],[1,-10,-3,-8,5,5,-7,9,-5,7,-1,10,10],[-4,-5,6,8,-3,-2,4,-1,7,-9,-3,3,10],[2,5,-9,-4,1,-10,-5,-10,6,-6,4,-4,-10],[-9,4,6,-1,-7,-9,5,-4,-8,10,7,5,-2],[9,-4,-2,1,-2,3,7,4,-2,5,-5,-4,-1],[2,6,-5,-1,-3,1,10,-2,-7,-4,6,-1,3],[-4,-3,-10,2,-1,9,5,-5,-8,10,-10,3,-9],[2,-10,7,4,10,5,9,7,7,2,10,9,-1],[8,-2,3,-6,9,-8,3,6,-7,3,-3,-8,2],[-6,-10,9,3,3,-7,10,4,10,5,5,-1,8]],[[9,-10,5,-2,-2,-3,4,2,6,-9,1,10,-5],[8,5,9,-5,5,-4,-7,9,3,5,-7,7,-5],[-5,-4,10,-6,1,9,4,-6,-10,-5,2,-4,-3],[-1,-9,9,-9,-4,-7,6,-6,4,10,8,-4,10],[-9,6,-7,4,-1,-10,8,-3,-6,4,5,-4,1],[-6,-3,2,3,5,5,8,2,8,3,8,-2,1],[-2,4,-7,10,-9,3,2,-5,-7,3,-2,1,4],[-5,4,8,3,9,4,-9,2,6,7,-1,6,-6],[-8,-2,-8,1,-4,-10,-10,-6,-8,7,4,6,-7],[-10,4,1,-4,-4,-9,6,1,2,-5,-6,-3,7],[-8,-3,-3,-10,-8,6,-4,-6,-3,-10,-8,-6,1],[8,-4,-3,9,1,-8,8,4,8,4,4,-6,-4],[7,9,-3,-1,-5,3,-2,-7,-5,-4,9,-8,-6],[4,7,8,9,1,8,1,8,-7,-8,1,-9,4],[-7,-3,-7,8,-7,5,6,10,-9,7,-6,-10,-9]],[[10,5,6,-8,-8,-7,8,-3,-2,10,2,2,9],[-4,-2,1,8,6,10,6,9,-2,-7,-10,5,10],[1,7,-10,2,-3,-4,9,-7,-3,6,-6,1,-5],[-2,-2,8,-4,7,5,6,2,-8,-9,9,8,6],[-6,-9,7,-3,-4,4,7,2,1,-9,9,4,-2],[1,-10,6,-3,1,6,3,-7,6,10,-4,-7,4],[10,-5,2,-2,3,10,-3,-10,-5,9,-9,3,-4],[-10,2,8,-1,2,-6,-6,4,-7,-7,8,-1,5],[1,-1,9,-5,-5,-10,-3,-8,9,-10,-9,2,7],[1,6,-7,-8,-9,10,-5,-8,-9,-7,1,-2,1],[-1,1,-2,3,-10,2,-9,-2,-8,1,-4,-8,-1],[7,2,-7,10,9,10,-9,-2,-6,-5,-9,-9,-10],[5,2,-6,7,8,9,2,1,9,2,-4,-4,9],[3,-6,-9,-10,4,3,-2,-7,-10,-10,-9,-2,10],[-9,6,-8,8,-1,-4,1,4,9,-4,8,5,6]],[[7,-7,5,-3,-8,7,6,2,-8,6,-6,10,3],[-7,-8,-4,-2,-3,-9,-7,9,2,3,-5,-8,4],[10,-7,4,3,6,6,-10,-6,-9,-7,-8,-4,-4],[1,-2,9,9,-4,9,-4,7,-4,10,10,-4,10],[8,2,-2,6,-8,-5,1,1,-7,5,-4,2,1],[-5,-9,-7,-8,-8,2,6,1,8,-9,1,3,-1],[-7,2,5,4,-4,-10,8,5,-4,-1,-2,-4,-7],[8,-3,8,2,-9,-9,10,2,6,-7,-9,9,5],[-8,-2,-6,-6,9,-8,-1,-9,-7,-4,8,10,-8],[-8,10,10,-4,2,5,6,1,-7,10,5,-7,-8],[-6,2,-9,2,-8,5,7,10,7,-5,2,3,10],[-1,6,1,8,-7,-8,6,3,5,-1,1,-5,-8],[-10,10,8,4,1,-5,1,-7,3,2,-5,8,-4],[-5,7,7,-4,-5,8,-4,7,9,-3,6,10,-6],[6,2,-4,10,-8,-7,2,5,-3,1,10,7,-8]],[[1,-2,-4,2,-8,-1,-8,-5,-1,8,9,5,-3],[-9,8,5,5,8,-8,3,5,-4,3,9,-8,-2],[-10,6,3,6,-5,3,-2,1,-1,6,10,-10,-1],[9,-8,8,-9,3,-2,-3,4,8,9,6,4,6],[1,-7,5,-2,8,-2,6,8,8,4,-9,10,2],[8,5,9,9,8,1,-8,-2,5,10,4,5,2],[2,4,5,9,-5,5,2,2,5,-4,2,3,-1],[8,6,-1,-1,2,6,-7,8,9,-7,-5,10,-7],[7,2,8,-5,1,1,-1,-9,4,10,-8,-4,-9],[-9,-8,-9,6,-6,-3,-9,7,6,4,-6,1,-10],[6,-6,-3,-2,-1,8,4,4,-5,10,2,9,-3],[-4,-1,-3,-8,-2,6,-10,6,-6,1,6,2,7],[5,-2,1,3,10,-10,7,-7,-7,9,8,4,5],[5,-9,1,-10,-2,-1,-6,-1,9,-10,10,-7,1],[-4,5,6,-9,4,-8,-5,7,5,6,10,3,-4]],[[-7,4,6,-4,9,5,-6,-8,-5,-5,8,4,8],[-1,-5,-6,8,2,-9,-7,6,-6,2,7,8,8],[3,-2,-9,2,8,6,-9,9,5,-6,-9,5,10],[-9,-7,-6,2,-1,-1,-2,-4,-4,-9,1,-1,6],[3,3,7,-2,8,5,6,-10,-1,-5,-3,8,-1],[7,-5,-4,-6,2,9,-8,-1,-7,-8,-5,1,6],[8,7,2,-5,-7,-7,-6,-8,2,1,10,-2,7],[9,-7,2,-8,9,3,7,1,-4,-3,-3,2,-10],[-6,-1,2,-2,3,-6,-5,1,7,7,-3,6,-5],[3,-4,10,-7,-2,-8,-10,10,-4,-1,10,-6,-7],[-8,-9,3,-2,6,9,-10,-6,7,1,-2,-10,-3],[-10,-9,-10,-1,2,2,2,-6,5,4,-6,5,-10],[-4,7,-3,8,3,1,-8,9,8,8,-4,2,2],[1,-7,4,1,1,-10,6,-7,-9,-9,-5,-10,3],[-5,4,-2,7,-3,-1,4,-10,2,-8,-2,-6,-3]],[[-10,-3,9,-7,-5,5,8,-5,-6,-2,-1,-2,-3],[-6,-7,-9,4,-9,10,-5,7,-9,1,6,10,4],[4,10,2,8,7,-8,7,-3,5,4,-9,9,-6],[9,-2,-9,9,-6,7,2,-9,-4,-10,-7,-6,-9],[3,-9,2,5,1,4,3,-2,-4,-4,-7,-1,-5],[5,9,-10,-3,-1,7,3,-10,-7,-5,-5,7,1],[-6,-2,3,6,-3,-6,7,3,5,-1,1,10,-1],[4,-2,2,9,3,-1,-6,7,-3,1,-8,10,-1],[-1,6,8,10,4,10,-5,-7,-3,-3,7,7,-9],[-6,6,9,-10,9,-4,-10,10,4,-4,-4,-6,-9],[2,-4,-1,-2,-8,6,6,8,6,-8,7,-10,5],[-9,-10,5,-4,-4,9,-6,9,-7,-9,4,-2,-10],[6,-9,5,-1,6,-10,5,7,-2,-1,5,5,-2],[9,-1,2,-10,-8,8,-1,-5,5,5,-4,-5,7],[2,3,-10,7,-1,1,-9,-6,8,1,10,-3,-10]],[[-3,1,-4,-3,8,-9,-7,5,2,8,-1,7,8],[-10,2,8,-2,7,-4,2,4,-9,2,8,8,-3],[-10,10,8,1,-9,-7,-9,-8,-5,-7,2,7,-9],[-9,10,-7,10,2,-9,-2,-3,-9,5,7,8,6],[-9,-7,9,7,-5,4,2,-7,-1,9,-8,-8,8],[1,-9,-9,2,-7,9,2,8,1,-2,-3,7,-6],[-2,6,-10,-7,7,-7,9,2,8,4,-2,6,-3],[-6,10,-5,-6,4,9,-7,7,-5,-8,8,3,-1],[-7,8,5,2,5,8,8,9,5,-6,-2,3,-8],[-7,3,5,-5,1,6,-5,-1,-4,7,8,3,-8],[-5,-4,-2,-3,9,4,-2,3,-6,-10,-1,8,2],[-2,10,-8,1,-7,5,5,-9,-7,3,8,6,8],[2,9,-2,7,-1,6,-10,-4,-4,-6,-9,1,-3],[-3,4,-8,9,-10,-8,-4,5,2,4,8,-8,-8],[-7,1,7,1,-7,-10,6,-9,1,7,3,9,7]],[[5,4,-4,-4,3,1,7,-2,-4,8,-7,7,7],[3,-9,-5,-10,10,2,-1,7,10,9,2,-4,-9],[1,5,7,-4,-10,1,-8,6,-6,6,8,-9,9],[2,-2,-4,-8,1,-9,-2,-3,-1,-5,-2,1,-8],[7,-5,9,-10,10,-5,5,4,2,2,-8,-8,-9],[5,10,8,3,4,5,-4,-9,3,-7,-7,2,4],[-4,4,3,-3,5,2,7,9,-9,-6,5,4,8],[-3,-3,-2,-9,10,8,-9,-5,8,-7,5,-1,6],[-2,-8,-4,-3,-9,-5,3,-2,-7,1,-4,-5,9],[6,-10,-6,5,-5,6,-7,6,3,7,10,10,5],[2,2,-9,1,-3,4,-4,10,-8,7,8,3,9],[9,-5,-1,6,8,6,-7,-10,-8,9,-6,-4,2],[3,9,-7,1,-5,-10,-8,8,-10,2,5,4,-7],[-2,-3,6,10,-8,-4,-10,1,-3,8,2,8,8],[3,9,2,2,-8,9,-4,6,6,-10,-3,8,4]],[[-9,-2,-6,-9,-5,-6,6,7,-1,-4,10,2,9],[-1,-9,4,7,-7,1,6,8,-6,8,-10,4,-8],[4,-2,-7,1,-8,-6,-3,8,2,3,-9,-2,10],[-8,6,9,-7,-6,-6,4,1,10,4,9,3,-6],[9,-9,-10,5,6,9,-7,-10,1,6,6,6,-4],[-6,7,9,-9,-6,7,6,-7,9,-9,4,4,2],[6,10,2,-6,9,6,-4,-9,-6,-6,-2,-7,-5],[1,-1,-9,-2,6,6,-5,-5,-3,5,-2,8,4],[-3,3,1,9,-8,8,9,3,4,-2,-1,10,8],[-7,-9,8,-3,2,-4,6,1,-1,-8,8,4,-2],[7,-1,3,-5,8,-4,4,-4,9,10,4,10,6],[5,-10,-5,9,5,-3,-2,-4,1,-4,-6,-7,-3],[-8,4,-3,-5,5,1,5,6,4,8,-6,-4,6],[-5,6,5,-1,9,-7,6,-4,8,2,-7,3,4],[6,2,-10,6,-3,2,-7,9,-7,10,3,-3,3]]], dtype = "uint8")#candidate|3359|(14, 15, 13)|const|uint8
bop_3360 = relay.minimum(var_3358.astype('uint8'), relay.reshape(const_3359.astype('uint8'), relay.shape_of(var_3358))) # shape=(14, 15, 13)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_3366 = func_1380_call()
call_3367 = func_1380_call()
func_1047_call = mod.get_global_var('func_1047')
func_1048_call = mutated_mod.get_global_var('func_1048')
call_3369 = func_1047_call()
call_3370 = func_1047_call()
func_1914_call = mod.get_global_var('func_1914')
func_1916_call = mutated_mod.get_global_var('func_1916')
const_3374 = relay.const([1,10,3,-7,2,10,5,5,8,8,-2,-1,8,-4,3,6,5,6,-5,-2,2,-2,-6,8,-4,-4,-7,-7,2,-5,5,8,1,-7,-8,3,10,5,-2,-10,1,3,6,2,5,4,3,9,8,10,4,-4,-9,-8,3,-9,1,-4,-6,-6,6,-1,4,2,-8,7,-6,-6,-1,-7,-4,1,-10,4,-1,-7,4,5,9,-9,-8,1,-9,-10,-3,5,5,7,-10,3,3,10,9,-5,-3,-5,3,6,3,2,-2,7,4,-7,5,10,2,-7,-3,9,-9,6,10,-5,7,1,8,-1,2,-1,-9,-6,8,2,-6,-9,5,8,-9,-6,-4,-8,-5,-5,4,-3,-6,4,4,7,-6,6,4,-7,-9,-9,-2,-5,3,-3,7,-10,8,-7,9,-2,-10,8,-4,-7,10,8,-1,10,-5,3,-10,5,6,-10,-5,1,3,-9,6,2,2,-7,-2,-8,-9,-1,3,-7,-7,3,-1,9,-6,1,-6,8,-2,2,-2,-3,3,-10,-9,5,-7,-7,-5,-2,-5,-2,7,-9,-3,-5,5,-5,-1,3,3,-5,8,-9,-6,-3,8,-2,-5,8,-3,-4,2,-7,6,4,-9,2,-10,-10,5,-9,-9,10,3,-4,10,7,9,6,3,7,-8,9,1,6,3,9,-8,9,-4,2,-1,7,-2,-7,2,8,4,-1,7,3,5,-5,10,6,5,1,6,9,-10,2,-10,-3,8,-1,1,6,-7,-1,-4,-2,-5,-6,10,9,-2,1,3,-8,8,-7,-3,-7,5,9,6,-8,-4,-4,-2,4,5,-5,9,-1,-3,6,-3,-8,2,8,9,-1,-4,9,9,9,-9,4,10,-3,-2,-10,-3,-5,-6,-4,-3,-1,-3,3,6,-6,8,2,-3,-10,-5,4,-1,-6,-4,-3,7,-3,4,2,10,4,-10,-6,3,-2,6,-8,-4,5,7,2,2,6,-3,-8,8,9,-10,3,-10,-2,8,5,-6,-10,8,9,-9,-8,5,3,9,3,8,-3,-8,7,6,-2,4,-7,5,-4,3,7,9,-3,-4,8,-10,-2,-5,-8,3,-5,-1,-9,10,-1,5,-3,7,-3,-2,-5,-3,5,-6,-8,3,5,-8,8,-6,-3,6,5,3,6,-10,-10,-8,10,-7,2,-4,4,1,-9,3,-10,-7,-2,-5,-6,9,-8,2,-2,8,1,-1,3,-8,-1,-4,8,5,2,10,5,-5,-8,-2,-7,6,-2,4,-1,8,3,-2,-3,-3,-7,2,-2,-8,3,-3,-10,-8,-6,-8,5,10,1,-1,8,-9,6,-10,10,1,8,6,10,10,8,-6,7,-3,5,3,9,-2,-5,3,10,1,-5,6,2,-5,6,-5,5,-1,3,8,6,-7,10,-8,-4,-8,5,8,2,10,-3,4,5,10,9,-2,-8,8,10,8,-5,5,-4,7,-4,-7,4,-7,-7,8,7,-5,-10,-2,-10,-4,-1,-5,2,3,3,-5,1,7,-10,-6,-7,-1,3,-7,4,-8,-10,9,6,-6,-2,-5,4,1,-7,1,5,10,5,-2,9,-5,-2,-9,-6,9,-7,-3,6,-4,-10,-8,-7,4,8,-3,6,5,10,-10,2,-8,-6,9,2,7,-10,-8,3,-1,8,7,-9,5,8,-8,7,-7,-7,-4,-4,3,-6,-3,3,-10,-5,6,-9,5,-8,-6,-1,7,3,-6,-4,1,8,-1,-7,1,-7,-7,-9,6,5,10,6,1,1,-8,-6,7,4,-4,-8,-4,3,-5,-2,-10,2], dtype = "int64")#candidate|3374|(672,)|const|int64
call_3373 = relay.TupleGetItem(func_1914_call(relay.reshape(const_3374.astype('int64'), [12, 4, 14])), 0)
call_3375 = relay.TupleGetItem(func_1916_call(relay.reshape(const_3374.astype('int64'), [12, 4, 14])), 0)
func_1097_call = mod.get_global_var('func_1097')
func_1101_call = mutated_mod.get_global_var('func_1101')
var_3386 = relay.var("var_3386", dtype = "int64", shape = (195,))#candidate|3386|(195,)|var|int64
call_3385 = relay.TupleGetItem(func_1097_call(relay.reshape(var_3386.astype('int64'), [3, 13, 5]), relay.reshape(var_3386.astype('int64'), [3, 13, 5]), ), 0)
call_3387 = relay.TupleGetItem(func_1101_call(relay.reshape(var_3386.astype('int64'), [3, 13, 5]), relay.reshape(var_3386.astype('int64'), [3, 13, 5]), ), 0)
bop_3393 = relay.logical_xor(var_3386.astype('uint8'), relay.reshape(call_3385.astype('uint8'), relay.shape_of(var_3386))) # shape=(195,)
bop_3396 = relay.logical_xor(var_3386.astype('uint8'), relay.reshape(call_3387.astype('uint8'), relay.shape_of(var_3386))) # shape=(195,)
const_3424 = relay.const([[[False,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False],[False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True],[False,True,True,True,True,False,True,False,False,False,False,False,True,False,True,True],[False,True,True,False,False,False,False,True,False,True,True,False,False,False,True,False],[True,False,True,True,False,False,True,False,False,True,True,False,True,False,True,True],[True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True],[False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True],[True,True,False,True,True,False,True,False,True,True,True,True,False,False,True,False],[False,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True],[False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False],[False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False],[False,True,False,True,False,False,True,False,True,True,False,True,False,True,False,True],[True,True,False,True,True,False,True,True,False,True,True,False,False,False,True,False],[True,True,True,True,True,True,True,False,False,False,False,True,True,False,False,True]],[[True,False,False,False,False,False,False,False,True,True,True,False,False,False,False,True],[True,False,True,False,True,False,False,True,False,False,False,False,False,False,True,False],[True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False],[True,False,False,False,True,False,False,True,True,False,True,True,True,False,True,False],[False,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False],[False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,True],[False,False,False,False,True,True,True,False,False,True,True,True,True,True,False,False],[False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,False],[False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,True],[True,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False],[False,True,False,False,True,False,True,False,True,False,False,False,False,True,True,False],[True,False,True,True,True,False,True,False,True,False,True,True,True,False,True,True],[False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True],[False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,False]],[[False,False,True,True,True,False,True,False,True,False,True,False,True,True,True,True],[False,False,True,True,False,True,False,True,False,False,False,False,True,True,False,True],[True,True,False,False,True,False,False,True,False,True,True,True,False,False,True,False],[True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True],[False,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True],[True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,False],[False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True],[True,True,True,True,False,False,False,False,False,False,False,False,True,True,False,True],[True,True,False,False,True,True,True,True,False,False,False,False,False,True,True,True],[False,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False],[False,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False],[False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False],[True,True,False,False,False,False,False,False,True,True,True,True,False,False,True,False],[False,True,True,False,True,True,True,True,True,True,False,True,True,True,False,False]],[[False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True],[False,False,True,False,True,False,True,False,True,False,False,True,True,False,True,False],[False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,True],[False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,False],[True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,True],[True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False],[True,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False],[True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True],[True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,True],[True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False],[True,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False],[False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True],[True,True,False,False,True,True,True,False,True,True,False,False,False,True,True,False],[True,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False]],[[False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True],[True,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False],[False,False,True,False,True,True,True,False,False,True,False,True,False,True,False,True],[True,False,True,False,False,True,True,True,True,False,False,True,False,False,False,False],[False,True,False,True,False,True,True,True,True,False,False,True,True,False,True,False],[True,False,False,True,False,True,False,True,True,True,False,True,True,False,True,True],[False,True,False,False,True,False,True,False,False,True,True,True,False,False,True,True],[True,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True],[False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,False],[True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False],[True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True],[False,False,False,False,True,True,True,True,False,True,True,False,True,True,False,False],[False,True,False,False,True,True,False,False,False,True,True,False,False,True,False,False],[True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,False]],[[False,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False],[True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False],[False,False,False,False,True,False,False,True,False,False,False,False,True,False,False,False],[True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False],[True,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True],[False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False],[True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False],[True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,False],[True,False,True,False,True,True,True,False,True,True,False,True,False,True,False,True],[False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,False],[False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,False],[False,False,False,False,True,False,True,False,False,False,True,True,False,False,False,False],[False,True,False,True,True,True,True,False,True,False,False,True,False,False,True,False],[False,True,False,False,False,False,False,False,False,True,True,False,True,True,False,True]],[[False,True,False,True,False,True,False,True,False,False,False,False,False,True,False,True],[True,True,True,True,True,True,True,True,True,False,True,False,False,True,False,False],[False,False,False,False,False,False,False,False,False,False,False,False,False,False,True,True],[True,False,False,False,False,True,True,True,True,False,True,True,False,True,False,False],[False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False],[False,False,False,False,True,False,True,True,False,True,False,False,False,False,True,False],[False,False,False,False,True,False,False,False,False,True,False,True,True,False,True,True],[True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True],[True,False,True,False,False,False,True,True,True,True,False,False,True,True,True,False],[False,True,True,False,True,False,False,True,False,False,False,True,False,False,False,True],[False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,True],[True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False],[False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False],[False,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False]],[[False,True,False,False,False,True,False,False,False,False,False,True,True,False,True,False],[False,False,False,False,True,False,True,True,True,True,True,True,True,True,True,True],[True,False,False,True,True,False,True,True,False,True,False,False,True,True,False,False],[False,False,False,True,False,True,False,True,False,True,False,True,True,True,True,False],[True,True,True,False,True,False,True,False,True,True,False,True,True,False,True,True],[False,True,False,False,False,True,True,False,False,True,False,True,False,True,True,False],[False,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True],[True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False],[True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,True],[False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,True],[False,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True],[True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True],[True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,False],[False,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True]],[[False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,True],[False,False,False,False,False,False,False,False,True,False,False,False,True,True,True,False],[False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,True],[False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False],[False,False,True,True,False,False,True,True,False,False,True,True,True,True,False,True],[False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,False],[True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False],[True,False,False,False,True,True,False,True,False,True,True,False,False,True,True,True],[True,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True],[False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,True],[False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,True],[False,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False],[False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,False],[False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False]],[[False,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False],[False,True,False,False,True,False,True,False,True,True,True,True,False,True,False,False],[False,False,False,True,False,True,True,False,False,True,False,False,True,False,False,True],[True,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False],[True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,True],[True,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False],[True,False,True,True,True,True,False,False,False,False,True,False,True,False,False,False],[False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True],[False,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True],[False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False],[False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,True],[True,False,False,False,False,False,True,True,True,False,False,False,False,True,False,False],[False,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True],[True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True]],[[True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,True],[True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True],[False,False,False,False,True,True,False,False,True,True,True,True,False,True,False,True],[True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False],[True,False,False,True,False,False,True,True,True,False,False,True,True,False,False,True],[False,False,True,False,False,False,True,False,True,False,True,False,True,False,False,False],[False,False,True,False,False,False,True,True,False,True,False,False,True,False,True,False],[True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True],[True,True,False,True,True,True,True,False,True,True,False,False,False,True,False,True],[True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False],[False,True,False,False,True,True,False,False,False,False,False,False,True,True,True,False],[False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,False],[False,True,False,True,False,False,True,True,False,True,True,True,False,True,True,False],[True,False,True,True,True,True,False,False,True,True,True,True,True,True,True,True]],[[False,True,False,True,True,True,False,True,True,True,False,True,False,True,False,True],[True,True,False,False,True,False,True,False,True,False,True,True,True,False,False,False],[True,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False],[False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,True],[True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False],[False,False,True,False,True,True,True,True,True,True,True,True,True,False,False,True],[True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True],[False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True],[False,True,False,False,True,False,True,False,False,False,True,True,False,True,False,False],[True,False,True,True,False,False,True,False,False,True,True,True,True,True,False,True],[False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,False],[False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True],[False,False,False,True,True,False,False,True,True,False,False,False,False,False,False,True],[True,True,False,False,True,True,False,True,True,True,True,False,True,True,True,True]],[[True,True,False,True,False,False,False,True,False,False,True,False,False,True,True,True],[False,True,False,False,False,False,True,True,False,False,True,True,False,False,False,True],[False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True],[True,True,True,False,True,False,True,True,False,True,False,False,True,False,False,True],[False,False,True,False,True,True,False,False,False,True,True,False,True,False,True,False],[True,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False],[False,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False],[True,False,True,True,False,False,False,True,True,False,True,False,True,True,False,True],[True,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False],[False,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True],[False,False,True,False,True,True,False,True,False,True,False,True,True,False,False,False],[True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True],[False,False,True,False,True,True,True,True,False,False,False,False,False,False,False,True],[False,False,True,True,False,True,False,True,True,True,True,True,True,False,False,False]],[[False,False,False,True,True,True,False,False,True,False,False,True,True,False,False,True],[False,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True],[True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,True],[True,False,False,False,False,True,False,False,False,True,True,False,False,False,True,False],[True,False,True,True,False,False,True,True,True,True,True,False,True,True,True,False],[True,False,False,True,True,False,True,True,True,False,True,False,False,True,False,True],[True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False],[True,True,False,False,False,True,False,True,False,True,True,False,False,True,False,True],[False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,False],[False,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True],[True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False],[True,False,False,True,True,True,True,True,False,True,False,True,False,True,False,True],[False,False,False,False,False,False,False,False,False,False,False,False,False,True,False,True],[True,False,False,False,True,True,False,False,True,False,True,True,True,True,False,False]],[[True,True,False,False,True,False,False,True,False,False,True,False,False,True,False,True],[True,False,False,True,False,False,True,True,False,False,False,False,True,False,False,False],[True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,True],[True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False],[True,True,True,True,True,True,True,False,True,True,True,True,False,False,False,True],[False,False,False,True,True,False,False,False,False,True,False,False,False,False,False,True],[True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True],[True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,False],[False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False],[True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True],[True,False,False,True,True,True,True,True,False,True,False,True,True,True,True,True],[False,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True],[False,True,False,True,False,True,True,True,True,True,False,False,False,True,True,False],[False,True,False,True,False,False,True,True,True,True,True,True,True,False,True,True]],[[True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,False],[True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False],[False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,True],[False,True,False,False,True,True,False,True,False,False,True,False,False,True,False,False],[True,False,True,False,True,False,True,False,False,True,False,True,True,True,False,True],[False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,False],[True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,False],[False,False,False,False,False,True,False,False,False,True,True,True,False,False,False,True],[False,True,False,True,True,False,False,False,True,True,False,True,False,True,False,False],[True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False],[False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,False],[True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,False],[False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True],[True,True,False,False,False,True,True,False,True,False,True,True,True,True,False,False]]], dtype = "bool")#candidate|3424|(16, 14, 16)|const|bool
bop_3425 = relay.subtract(call_3366.astype('int8'), relay.reshape(const_3424.astype('int8'), relay.shape_of(call_3366))) # shape=(16, 14, 16)
bop_3428 = relay.subtract(call_3367.astype('int8'), relay.reshape(const_3424.astype('int8'), relay.shape_of(call_3367))) # shape=(16, 14, 16)
output = relay.Tuple([bop_3360,call_3369,call_3373,const_3374,bop_3393,bop_3425,])
output2 = relay.Tuple([bop_3360,call_3370,call_3375,const_3374,bop_3396,bop_3428,])
func_3432 = relay.Function([var_3358,var_3386,], output)
mod['func_3432'] = func_3432
mod = relay.transform.InferType()(mod)
var_3433 = relay.var("var_3433", dtype = "uint8", shape = (14, 15, 13))#candidate|3433|(14, 15, 13)|var|uint8
var_3434 = relay.var("var_3434", dtype = "int64", shape = (195,))#candidate|3434|(195,)|var|int64
output = func_3432(var_3433,var_3434,)
func_3435 = relay.Function([var_3433,var_3434,], output)
mutated_mod['func_3435'] = func_3435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2494_call = mod.get_global_var('func_2494')
func_2496_call = mutated_mod.get_global_var('func_2496')
call_3467 = relay.TupleGetItem(func_2494_call(), 0)
call_3468 = relay.TupleGetItem(func_2496_call(), 0)
var_3469 = relay.var("var_3469", dtype = "float64", shape = (52,))#candidate|3469|(52,)|var|float64
bop_3470 = relay.maximum(call_3467.astype('int64'), relay.reshape(var_3469.astype('int64'), relay.shape_of(call_3467))) # shape=(52,)
bop_3473 = relay.maximum(call_3468.astype('int64'), relay.reshape(var_3469.astype('int64'), relay.shape_of(call_3468))) # shape=(52,)
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
call_3475 = relay.TupleGetItem(func_525_call(), 0)
call_3476 = relay.TupleGetItem(func_527_call(), 0)
output = relay.Tuple([bop_3470,call_3475,])
output2 = relay.Tuple([bop_3473,call_3476,])
func_3477 = relay.Function([var_3469,], output)
mod['func_3477'] = func_3477
mod = relay.transform.InferType()(mod)
mutated_mod['func_3477'] = func_3477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3478 = relay.var("var_3478", dtype = "float64", shape = (52,))#candidate|3478|(52,)|var|float64
func_3477_call = mutated_mod.get_global_var('func_3477')
call_3479 = func_3477_call(var_3478)
output = call_3479
func_3480 = relay.Function([var_3478], output)
mutated_mod['func_3480'] = func_3480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1247_call = mod.get_global_var('func_1247')
func_1249_call = mutated_mod.get_global_var('func_1249')
call_3492 = relay.TupleGetItem(func_1247_call(), 1)
call_3493 = relay.TupleGetItem(func_1249_call(), 1)
uop_3503 = relay.exp(call_3492.astype('float64')) # shape=(5, 7, 15)
uop_3505 = relay.exp(call_3493.astype('float64')) # shape=(5, 7, 15)
func_875_call = mod.get_global_var('func_875')
func_877_call = mutated_mod.get_global_var('func_877')
call_3506 = relay.TupleGetItem(func_875_call(), 1)
call_3507 = relay.TupleGetItem(func_877_call(), 1)
uop_3513 = relay.log(call_3492.astype('float64')) # shape=(5, 7, 15)
uop_3515 = relay.log(call_3493.astype('float64')) # shape=(5, 7, 15)
var_3516 = relay.var("var_3516", dtype = "float32", shape = (5, 7, 15))#candidate|3516|(5, 7, 15)|var|float32
bop_3517 = relay.add(call_3492.astype('uint32'), relay.reshape(var_3516.astype('uint32'), relay.shape_of(call_3492))) # shape=(5, 7, 15)
bop_3520 = relay.add(call_3493.astype('uint32'), relay.reshape(var_3516.astype('uint32'), relay.shape_of(call_3493))) # shape=(5, 7, 15)
output = relay.Tuple([uop_3503,call_3506,uop_3513,bop_3517,])
output2 = relay.Tuple([uop_3505,call_3507,uop_3515,bop_3520,])
func_3521 = relay.Function([var_3516,], output)
mod['func_3521'] = func_3521
mod = relay.transform.InferType()(mod)
mutated_mod['func_3521'] = func_3521
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3522 = relay.var("var_3522", dtype = "float32", shape = (5, 7, 15))#candidate|3522|(5, 7, 15)|var|float32
func_3521_call = mutated_mod.get_global_var('func_3521')
call_3523 = func_3521_call(var_3522)
output = call_3523
func_3524 = relay.Function([var_3522], output)
mutated_mod['func_3524'] = func_3524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1414_call = mod.get_global_var('func_1414')
func_1416_call = mutated_mod.get_global_var('func_1416')
call_3529 = relay.TupleGetItem(func_1414_call(), 0)
call_3530 = relay.TupleGetItem(func_1416_call(), 0)
func_2887_call = mod.get_global_var('func_2887')
func_2891_call = mutated_mod.get_global_var('func_2891')
const_3540 = relay.const(1.936025, dtype = "float64")#candidate|3540|()|const|float64
var_3541 = relay.var("var_3541", dtype = "float64", shape = (140,))#candidate|3541|(140,)|var|float64
const_3542 = relay.const([0.076897,-7.319819,-1.546087,-2.772806,-8.597345,8.199664,-7.634252,5.708111,-1.677403,-5.479283,7.508191,7.136413,4.783553,-2.991432,3.140690,0.489231,0.906891,-1.673753,1.940819,5.242737,-4.340014,9.487083,1.246489,7.795005,-3.736355,4.199477,8.573439,8.602357,6.449060,-7.111668,8.515640,3.895523,0.885348,1.191607,-7.571356,1.088008,8.132287,-4.313989,7.762439,6.042519,1.374623,2.641527,7.647981,-4.161422,-1.208214,2.615504,-0.600829,-2.900890,8.650596,6.671964,-6.974671,-6.776323], dtype = "float64")#candidate|3542|(52,)|const|float64
call_3539 = relay.TupleGetItem(func_2887_call(relay.reshape(const_3540.astype('float64'), []), relay.reshape(var_3541.astype('float64'), [7, 5, 4]), relay.reshape(const_3542.astype('float64'), [52,]), ), 3)
call_3543 = relay.TupleGetItem(func_2891_call(relay.reshape(const_3540.astype('float64'), []), relay.reshape(var_3541.astype('float64'), [7, 5, 4]), relay.reshape(const_3542.astype('float64'), [52,]), ), 3)
output = relay.Tuple([call_3529,call_3539,const_3540,var_3541,const_3542,])
output2 = relay.Tuple([call_3530,call_3543,const_3540,var_3541,const_3542,])
func_3553 = relay.Function([var_3541,], output)
mod['func_3553'] = func_3553
mod = relay.transform.InferType()(mod)
var_3554 = relay.var("var_3554", dtype = "float64", shape = (140,))#candidate|3554|(140,)|var|float64
output = func_3553(var_3554)
func_3555 = relay.Function([var_3554], output)
mutated_mod['func_3555'] = func_3555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_3561 = relay.TupleGetItem(func_3181_call(), 0)
call_3562 = relay.TupleGetItem(func_3182_call(), 0)
func_108_call = mod.get_global_var('func_108')
func_109_call = mutated_mod.get_global_var('func_109')
call_3563 = relay.TupleGetItem(func_108_call(), 0)
call_3564 = relay.TupleGetItem(func_109_call(), 0)
output = relay.Tuple([call_3561,call_3563,])
output2 = relay.Tuple([call_3562,call_3564,])
func_3570 = relay.Function([], output)
mod['func_3570'] = func_3570
mod = relay.transform.InferType()(mod)
output = func_3570()
func_3571 = relay.Function([], output)
mutated_mod['func_3571'] = func_3571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1852_call = mod.get_global_var('func_1852')
func_1853_call = mutated_mod.get_global_var('func_1853')
call_3588 = relay.TupleGetItem(func_1852_call(), 1)
call_3589 = relay.TupleGetItem(func_1853_call(), 1)
func_3127_call = mod.get_global_var('func_3127')
func_3129_call = mutated_mod.get_global_var('func_3129')
call_3599 = relay.TupleGetItem(func_3127_call(), 0)
call_3600 = relay.TupleGetItem(func_3129_call(), 0)
func_917_call = mod.get_global_var('func_917')
func_919_call = mutated_mod.get_global_var('func_919')
const_3629 = relay.const([-6,3,-9,-8,2,4,-1,-2,-8,8,-7,-1,-3,9,1,-5,-2,7,-3,-6,-6,-1,-5,-3,-9,2,2,-6,-4,-4,-6,-1,7,-2,2,-5,8,-7,-3,9,3,-6,5,-1,-7,-5,2,-3,-4,9,-3,-6,2,-8,-4,-7,-8,-2,-6,-3,8,6,-4,8,6,-3,4,1,-5,-3,8,7,-4,1,4,3,-4,1,-9,-5,8,3,-9,2,-5,-2,6,9,8,1,5,-3,4,4,-5,-8,9,7,-10,-2,5,-8,-3,2,-8,-5,-1,-10,4,-10,-5,2,-2,1,-1,6,5,8,4,3,-6,-3,-7,-2,8,-10,10,6,4,-5,8,-10,7,5,9,-3,6,-10,10,-4,1,1,7,-5,-5,-3,-2,-10,-10,-2,10,-3,-1,9,-2,10,-8,-7,10,-5,2,10,2,5,-4,2,2,10,6,-5,-6,-6,-5,9,-6,-10,2,-4,-1,-8,-10,9,-4,5,10,-2,2,1,2,-3,-6,-9,-5,5,-6,9,3,-5,-8,-9,-10,-7,9,-2,-9,1,5,6,-5,-6,-5,-6,-2,5,3,8,-5,8,2,6,2,-9,-9,9,-9,6,9,-2,3,10,-1,1,-3,9,6,9,3,9,6,-6,2,-8,-4,-3,-8,-4,3,-5,4,-4,-7,10,-2,4,6,2,1,-10,-2,3,6,-1,3,-5,-7,-9,3,-6,10,-4,9,-8,-8,9,-1,-2,-10,-8,-8,-1,-4,-1,2,4,9,-10,-4,3,7,1,-2,7,-5,-6,9,-10,-8,2,2,1,1,-2,-8,-8,4,-4,-2,10,-7,-2,4,1,-5,-1,6,6,1,-4,-2,-5,2,5,-10,3,1,-6,-7,8,-8,7,-1,5,3,-3,4,3,9,1,-3,7,-10,-1,-9,-9,8,-3,10,-10,-7,-10,-3,8,1,1,4,9,2,10,-9,-8,-4,-5,-1,7,-8,-1,-10,-2,8,6,-1,5,5,5,-6,-2,-8,-5,1,-6,-9,-1,6,1,-7,6,-1,3,8,-3,-5,-5,3,-1,-1,5,-6,2,-10,-7,-9,-8,4,8,1,6,-6,10,-8,4,-2,3,7,-1,6,5,1,-6,5,6,-7,6,1,3,-9,-3,7,-8,-1,3,-6,-5,-2,-1,6,6,2,-7,8,-4,-8,-7,-3,1,-3,-3,3,-8,-8,-3,-8,8,-1,-3,-6,7,6,-10,8,-2,8,-9,-3,7,8,8,2,-6,-2,1,7,-3,-1,-1,8,9,-1,8,-7,-7,-8,-1,-4,3,-7,5,4,5,3,-4,9,9,-2,-6,-4,6,-10,2,5,2,-2,5,7,1,8,-2,-9,-9,-8,1,-7,-3,3,1,-1,-9,-9,6,6,7,3,3,10,2,-6,-9,-10,-10,-6,-1,3,7,-6,-10,-10,-6,-6,-2,10,4,7,-9,-6,9,9,8,-10,5,-7,8,-2,2,-5,6,-10,-3,6,3,-10,-1,-2,2,3,10,2,9,6,4,6,9,10,3,6,5,10,-7,-6,-6,6,-9,8,2,9,-5,6,3,8,4,-3,1,7,-8,9,-2,-2,3,10,3,-3,-4,-6,7,-2,9,-1,1,-10,-3,-2,4,-7,-7,-4,4,-1,-6,-5,3,5,-5,4,-4,-4,3,-3,4,-4,5,-1,3,9,-9,4,6,-3,6,6,2,-7,7,-2,10,-2,-3,-5,-5,8,3,-7,1], dtype = "int64")#candidate|3629|(650,)|const|int64
call_3628 = relay.TupleGetItem(func_917_call(relay.reshape(const_3629.astype('int64'), [5, 10, 13])), 1)
call_3630 = relay.TupleGetItem(func_919_call(relay.reshape(const_3629.astype('int64'), [5, 10, 13])), 1)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_3633 = func_1067_call()
call_3634 = func_1067_call()
const_3645 = relay.const([[[False,True,False,True,False],[False,True,True,False,False],[True,True,False,False,True],[True,False,False,True,True],[True,False,False,False,False],[False,False,False,False,False],[False,False,True,False,False],[True,True,True,True,True],[True,False,False,True,True],[True,True,True,True,False],[True,False,False,True,False],[False,True,False,True,True],[False,True,True,False,False]],[[True,True,True,True,False],[False,False,True,False,False],[False,True,True,True,False],[True,False,False,True,True],[False,True,False,False,False],[True,True,False,True,True],[False,False,False,True,True],[True,True,False,False,True],[False,False,False,True,True],[False,False,False,False,True],[True,False,False,False,False],[True,True,True,True,False],[False,True,True,True,False]],[[False,False,True,False,False],[False,False,False,False,True],[True,False,True,True,False],[False,True,False,True,True],[False,False,False,False,True],[True,False,False,False,True],[False,False,True,True,True],[True,True,True,True,True],[True,True,True,False,False],[True,True,True,True,False],[False,True,False,True,True],[True,False,False,True,False],[True,True,False,True,False]]], dtype = "bool")#candidate|3645|(3, 13, 5)|const|bool
bop_3646 = relay.less(call_3588.astype('bool'), relay.reshape(const_3645.astype('bool'), relay.shape_of(call_3588))) # shape=(3, 13, 5)
bop_3649 = relay.less(call_3589.astype('bool'), relay.reshape(const_3645.astype('bool'), relay.shape_of(call_3589))) # shape=(3, 13, 5)
bop_3664 = relay.bitwise_xor(bop_3646.astype('uint64'), relay.reshape(const_3645.astype('uint64'), relay.shape_of(bop_3646))) # shape=(3, 13, 5)
bop_3667 = relay.bitwise_xor(bop_3649.astype('uint64'), relay.reshape(const_3645.astype('uint64'), relay.shape_of(bop_3649))) # shape=(3, 13, 5)
bop_3673 = relay.greater(bop_3646.astype('bool'), relay.reshape(bop_3664.astype('bool'), relay.shape_of(bop_3646))) # shape=(3, 13, 5)
bop_3676 = relay.greater(bop_3649.astype('bool'), relay.reshape(bop_3667.astype('bool'), relay.shape_of(bop_3649))) # shape=(3, 13, 5)
bop_3685 = relay.bitwise_and(const_3645.astype('int32'), relay.reshape(bop_3673.astype('int32'), relay.shape_of(const_3645))) # shape=(3, 13, 5)
bop_3688 = relay.bitwise_and(const_3645.astype('int32'), relay.reshape(bop_3676.astype('int32'), relay.shape_of(const_3645))) # shape=(3, 13, 5)
func_2267_call = mod.get_global_var('func_2267')
func_2269_call = mutated_mod.get_global_var('func_2269')
var_3708 = relay.var("var_3708", dtype = "float64", shape = (10, 3))#candidate|3708|(10, 3)|var|float64
call_3707 = relay.TupleGetItem(func_2267_call(relay.reshape(var_3708.astype('float64'), [5, 1, 6])), 0)
call_3709 = relay.TupleGetItem(func_2269_call(relay.reshape(var_3708.astype('float64'), [5, 1, 6])), 0)
func_1852_call = mod.get_global_var('func_1852')
func_1853_call = mutated_mod.get_global_var('func_1853')
call_3723 = relay.TupleGetItem(func_1852_call(), 0)
call_3724 = relay.TupleGetItem(func_1853_call(), 0)
output = relay.Tuple([call_3599,call_3628,const_3629,call_3633,bop_3685,call_3707,var_3708,call_3723,])
output2 = relay.Tuple([call_3600,call_3630,const_3629,call_3634,bop_3688,call_3709,var_3708,call_3724,])
func_3738 = relay.Function([var_3708,], output)
mod['func_3738'] = func_3738
mod = relay.transform.InferType()(mod)
var_3739 = relay.var("var_3739", dtype = "float64", shape = (10, 3))#candidate|3739|(10, 3)|var|float64
output = func_3738(var_3739)
func_3740 = relay.Function([var_3739], output)
mutated_mod['func_3740'] = func_3740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_108_call = mod.get_global_var('func_108')
func_109_call = mutated_mod.get_global_var('func_109')
call_3776 = relay.TupleGetItem(func_108_call(), 0)
call_3777 = relay.TupleGetItem(func_109_call(), 0)
func_875_call = mod.get_global_var('func_875')
func_877_call = mutated_mod.get_global_var('func_877')
call_3805 = relay.TupleGetItem(func_875_call(), 6)
call_3806 = relay.TupleGetItem(func_877_call(), 6)
uop_3809 = relay.rsqrt(call_3776.astype('float32')) # shape=(4, 13, 12)
uop_3811 = relay.rsqrt(call_3777.astype('float32')) # shape=(4, 13, 12)
uop_3827 = relay.sqrt(uop_3809.astype('float32')) # shape=(4, 13, 12)
uop_3829 = relay.sqrt(uop_3811.astype('float32')) # shape=(4, 13, 12)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_3832 = relay.TupleGetItem(func_208_call(), 2)
call_3833 = relay.TupleGetItem(func_210_call(), 2)
bop_3834 = relay.greater_equal(uop_3827.astype('bool'), relay.reshape(call_3776.astype('bool'), relay.shape_of(uop_3827))) # shape=(4, 13, 12)
bop_3837 = relay.greater_equal(uop_3829.astype('bool'), relay.reshape(call_3777.astype('bool'), relay.shape_of(uop_3829))) # shape=(4, 13, 12)
output = relay.Tuple([call_3805,call_3832,bop_3834,])
output2 = relay.Tuple([call_3806,call_3833,bop_3837,])
func_3844 = relay.Function([], output)
mod['func_3844'] = func_3844
mod = relay.transform.InferType()(mod)
output = func_3844()
func_3845 = relay.Function([], output)
mutated_mod['func_3845'] = func_3845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1968_call = mod.get_global_var('func_1968')
func_1970_call = mutated_mod.get_global_var('func_1970')
call_3881 = relay.TupleGetItem(func_1968_call(), 0)
call_3882 = relay.TupleGetItem(func_1970_call(), 0)
output = relay.Tuple([call_3881,])
output2 = relay.Tuple([call_3882,])
func_3893 = relay.Function([], output)
mod['func_3893'] = func_3893
mod = relay.transform.InferType()(mod)
mutated_mod['func_3893'] = func_3893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3893_call = mutated_mod.get_global_var('func_3893')
call_3894 = func_3893_call()
output = call_3894
func_3895 = relay.Function([], output)
mutated_mod['func_3895'] = func_3895
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3936 = relay.var("var_3936", dtype = "float32", shape = (13, 12, 12))#candidate|3936|(13, 12, 12)|var|float32
uop_3937 = relay.sigmoid(var_3936.astype('float32')) # shape=(13, 12, 12)
uop_3940 = relay.log2(var_3936.astype('float64')) # shape=(13, 12, 12)
output = relay.Tuple([uop_3937,uop_3940,])
output2 = relay.Tuple([uop_3937,uop_3940,])
func_3947 = relay.Function([var_3936,], output)
mod['func_3947'] = func_3947
mod = relay.transform.InferType()(mod)
mutated_mod['func_3947'] = func_3947
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3948 = relay.var("var_3948", dtype = "float32", shape = (13, 12, 12))#candidate|3948|(13, 12, 12)|var|float32
func_3947_call = mutated_mod.get_global_var('func_3947')
call_3949 = func_3947_call(var_3948)
output = call_3949
func_3950 = relay.Function([var_3948], output)
mutated_mod['func_3950'] = func_3950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_3966 = relay.TupleGetItem(func_2708_call(), 2)
call_3967 = relay.TupleGetItem(func_2710_call(), 2)
func_572_call = mod.get_global_var('func_572')
func_574_call = mutated_mod.get_global_var('func_574')
call_3986 = relay.TupleGetItem(func_572_call(), 2)
call_3987 = relay.TupleGetItem(func_574_call(), 2)
output = relay.Tuple([call_3966,call_3986,])
output2 = relay.Tuple([call_3967,call_3987,])
func_3995 = relay.Function([], output)
mod['func_3995'] = func_3995
mod = relay.transform.InferType()(mod)
output = func_3995()
func_3996 = relay.Function([], output)
mutated_mod['func_3996'] = func_3996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_108_call = mod.get_global_var('func_108')
func_109_call = mutated_mod.get_global_var('func_109')
call_4002 = relay.TupleGetItem(func_108_call(), 1)
call_4003 = relay.TupleGetItem(func_109_call(), 1)
func_2887_call = mod.get_global_var('func_2887')
func_2891_call = mutated_mod.get_global_var('func_2891')
const_4005 = relay.const(-2.240048, dtype = "float64")#candidate|4005|()|const|float64
var_4006 = relay.var("var_4006", dtype = "float64", shape = (140,))#candidate|4006|(140,)|var|float64
call_4004 = relay.TupleGetItem(func_2887_call(relay.reshape(const_4005.astype('float64'), []), relay.reshape(var_4006.astype('float64'), [7, 5, 4]), relay.reshape(call_4002.astype('float64'), [52,]), ), 0)
call_4007 = relay.TupleGetItem(func_2891_call(relay.reshape(const_4005.astype('float64'), []), relay.reshape(var_4006.astype('float64'), [7, 5, 4]), relay.reshape(call_4002.astype('float64'), [52,]), ), 0)
output = relay.Tuple([call_4002,call_4004,const_4005,var_4006,])
output2 = relay.Tuple([call_4003,call_4007,const_4005,var_4006,])
func_4011 = relay.Function([var_4006,], output)
mod['func_4011'] = func_4011
mod = relay.transform.InferType()(mod)
var_4012 = relay.var("var_4012", dtype = "float64", shape = (140,))#candidate|4012|(140,)|var|float64
output = func_4011(var_4012)
func_4013 = relay.Function([var_4012], output)
mutated_mod['func_4013'] = func_4013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3127_call = mod.get_global_var('func_3127')
func_3129_call = mutated_mod.get_global_var('func_3129')
call_4056 = relay.TupleGetItem(func_3127_call(), 0)
call_4057 = relay.TupleGetItem(func_3129_call(), 0)
output = relay.Tuple([call_4056,])
output2 = relay.Tuple([call_4057,])
func_4073 = relay.Function([], output)
mod['func_4073'] = func_4073
mod = relay.transform.InferType()(mod)
mutated_mod['func_4073'] = func_4073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4073_call = mutated_mod.get_global_var('func_4073')
call_4074 = func_4073_call()
output = call_4074
func_4075 = relay.Function([], output)
mutated_mod['func_4075'] = func_4075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_4087 = func_1067_call()
call_4088 = func_1067_call()
func_2105_call = mod.get_global_var('func_2105')
func_2107_call = mutated_mod.get_global_var('func_2107')
call_4091 = relay.TupleGetItem(func_2105_call(), 1)
call_4092 = relay.TupleGetItem(func_2107_call(), 1)
func_1814_call = mod.get_global_var('func_1814')
func_1817_call = mutated_mod.get_global_var('func_1817')
const_4096 = relay.const([-5,-10,2,6,2,8,-9,-4,-4,9,-4,8,-5,-4,5,-3,-8,5,-1,-6,10,6,4,10,10,1,-6,-1,3,-1,-1,-7,9,1,-2,4,10,-5,1,-2,5,-8,4,3,-3,6,-1,6,-6,2,3,1,-8,-8,2,-2,3,1,7,7,-8,-7,7,-1,-10,2,-8,7,-9,-5,-4,9,4,9,2,5,-2,-1,6,1,-4,9,5,-10,-10,-5,-1,-6,-2,8,2,6,-6,2,-10,7,-7,7,-2,-8,9,1,-8,5,-1,-6,6,8,10,3,-4,-3,7,-4,-7,3,8,6,-10,-7,-7,7,-6,7,-4,7,1,10,-2,-10,9,-4,7,2,-4,2,2,5,4,-6,-2,-8,-5,-4,-5,5,-8,-8,9,-4,-8,4,-6,8,3,-10,-4,-10,7,5,8,3,-9,3,-2,2,-5,-10,7,3,-9,-7,-1,6,-2,-9,1,6,-4,9,-6,-10,7,-4,-7,6,-7,-2,9,6,7,10,7,9,7], dtype = "int64")#candidate|4096|(195,)|const|int64
call_4095 = relay.TupleGetItem(func_1814_call(relay.reshape(const_4096.astype('int64'), [195,])), 1)
call_4097 = relay.TupleGetItem(func_1817_call(relay.reshape(const_4096.astype('int64'), [195,])), 1)
uop_4101 = relay.atan(call_4095.astype('float32')) # shape=(195,)
uop_4103 = relay.atan(call_4097.astype('float32')) # shape=(195,)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_4105 = relay.TupleGetItem(func_1935_call(), 0)
call_4106 = relay.TupleGetItem(func_1937_call(), 0)
output = relay.Tuple([call_4087,call_4091,const_4096,uop_4101,call_4105,])
output2 = relay.Tuple([call_4088,call_4092,const_4096,uop_4103,call_4106,])
func_4114 = relay.Function([], output)
mod['func_4114'] = func_4114
mod = relay.transform.InferType()(mod)
mutated_mod['func_4114'] = func_4114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4114_call = mutated_mod.get_global_var('func_4114')
call_4115 = func_4114_call()
output = call_4115
func_4116 = relay.Function([], output)
mutated_mod['func_4116'] = func_4116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_4120 = func_1067_call()
call_4121 = func_1067_call()
output = relay.Tuple([call_4120,])
output2 = relay.Tuple([call_4121,])
func_4123 = relay.Function([], output)
mod['func_4123'] = func_4123
mod = relay.transform.InferType()(mod)
mutated_mod['func_4123'] = func_4123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4123_call = mutated_mod.get_global_var('func_4123')
call_4124 = func_4123_call()
output = call_4124
func_4125 = relay.Function([], output)
mutated_mod['func_4125'] = func_4125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_408_call = mod.get_global_var('func_408')
func_409_call = mutated_mod.get_global_var('func_409')
call_4132 = func_408_call()
call_4133 = func_408_call()
output = relay.Tuple([call_4132,])
output2 = relay.Tuple([call_4133,])
func_4143 = relay.Function([], output)
mod['func_4143'] = func_4143
mod = relay.transform.InferType()(mod)
mutated_mod['func_4143'] = func_4143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4143_call = mutated_mod.get_global_var('func_4143')
call_4144 = func_4143_call()
output = call_4144
func_4145 = relay.Function([], output)
mutated_mod['func_4145'] = func_4145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2651_call = mod.get_global_var('func_2651')
func_2652_call = mutated_mod.get_global_var('func_2652')
call_4185 = relay.TupleGetItem(func_2651_call(), 0)
call_4186 = relay.TupleGetItem(func_2652_call(), 0)
output = relay.Tuple([call_4185,])
output2 = relay.Tuple([call_4186,])
func_4187 = relay.Function([], output)
mod['func_4187'] = func_4187
mod = relay.transform.InferType()(mod)
mutated_mod['func_4187'] = func_4187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4187_call = mutated_mod.get_global_var('func_4187')
call_4188 = func_4187_call()
output = call_4188
func_4189 = relay.Function([], output)
mutated_mod['func_4189'] = func_4189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_4279 = func_1067_call()
call_4280 = func_1067_call()
func_1247_call = mod.get_global_var('func_1247')
func_1249_call = mutated_mod.get_global_var('func_1249')
call_4281 = relay.TupleGetItem(func_1247_call(), 1)
call_4282 = relay.TupleGetItem(func_1249_call(), 1)
var_4283 = relay.var("var_4283", dtype = "float32", shape = (5, 7, 15))#candidate|4283|(5, 7, 15)|var|float32
bop_4284 = relay.logical_and(call_4281.astype('bool'), relay.reshape(var_4283.astype('bool'), relay.shape_of(call_4281))) # shape=(5, 7, 15)
bop_4287 = relay.logical_and(call_4282.astype('bool'), relay.reshape(var_4283.astype('bool'), relay.shape_of(call_4282))) # shape=(5, 7, 15)
func_572_call = mod.get_global_var('func_572')
func_574_call = mutated_mod.get_global_var('func_574')
call_4295 = relay.TupleGetItem(func_572_call(), 1)
call_4296 = relay.TupleGetItem(func_574_call(), 1)
output = relay.Tuple([call_4279,bop_4284,call_4295,])
output2 = relay.Tuple([call_4280,bop_4287,call_4296,])
func_4298 = relay.Function([var_4283,], output)
mod['func_4298'] = func_4298
mod = relay.transform.InferType()(mod)
var_4299 = relay.var("var_4299", dtype = "float32", shape = (5, 7, 15))#candidate|4299|(5, 7, 15)|var|float32
output = func_4298(var_4299)
func_4300 = relay.Function([var_4299], output)
mutated_mod['func_4300'] = func_4300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1247_call = mod.get_global_var('func_1247')
func_1249_call = mutated_mod.get_global_var('func_1249')
call_4346 = relay.TupleGetItem(func_1247_call(), 1)
call_4347 = relay.TupleGetItem(func_1249_call(), 1)
output = relay.Tuple([call_4346,])
output2 = relay.Tuple([call_4347,])
func_4348 = relay.Function([], output)
mod['func_4348'] = func_4348
mod = relay.transform.InferType()(mod)
mutated_mod['func_4348'] = func_4348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4348_call = mutated_mod.get_global_var('func_4348')
call_4349 = func_4348_call()
output = call_4349
func_4350 = relay.Function([], output)
mutated_mod['func_4350'] = func_4350
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4362 = relay.var("var_4362", dtype = "int8", shape = (9, 5, 12))#candidate|4362|(9, 5, 12)|var|int8
var_4363 = relay.var("var_4363", dtype = "int8", shape = (9, 5, 12))#candidate|4363|(9, 5, 12)|var|int8
bop_4364 = relay.right_shift(var_4362.astype('int8'), relay.reshape(var_4363.astype('int8'), relay.shape_of(var_4362))) # shape=(9, 5, 12)
func_2887_call = mod.get_global_var('func_2887')
func_2891_call = mutated_mod.get_global_var('func_2891')
const_4368 = relay.const(-3.652622, dtype = "float64")#candidate|4368|()|const|float64
var_4369 = relay.var("var_4369", dtype = "float64", shape = (140,))#candidate|4369|(140,)|var|float64
var_4370 = relay.var("var_4370", dtype = "float64", shape = (52,))#candidate|4370|(52,)|var|float64
call_4367 = relay.TupleGetItem(func_2887_call(relay.reshape(const_4368.astype('float64'), []), relay.reshape(var_4369.astype('float64'), [7, 5, 4]), relay.reshape(var_4370.astype('float64'), [52,]), ), 0)
call_4371 = relay.TupleGetItem(func_2891_call(relay.reshape(const_4368.astype('float64'), []), relay.reshape(var_4369.astype('float64'), [7, 5, 4]), relay.reshape(var_4370.astype('float64'), [52,]), ), 0)
var_4375 = relay.var("var_4375", dtype = "int8", shape = (9, 5, 12))#candidate|4375|(9, 5, 12)|var|int8
bop_4376 = relay.subtract(var_4363.astype('uint64'), relay.reshape(var_4375.astype('uint64'), relay.shape_of(var_4363))) # shape=(9, 5, 12)
func_3083_call = mod.get_global_var('func_3083')
func_3086_call = mutated_mod.get_global_var('func_3086')
var_4386 = relay.var("var_4386", dtype = "int64", shape = (672,))#candidate|4386|(672,)|var|int64
call_4385 = relay.TupleGetItem(func_3083_call(relay.reshape(var_4386.astype('int64'), [672,])), 0)
call_4387 = relay.TupleGetItem(func_3086_call(relay.reshape(var_4386.astype('int64'), [672,])), 0)
const_4391 = relay.const([[[8,7,-2,3,-3,8,-8,4,-1,-6,4,-7],[1,8,3,8,-7,-1,-1,-5,-3,8,-3,3],[-7,4,2,8,9,9,-3,5,-3,-1,1,9],[-10,-5,3,-6,6,-2,1,4,-5,4,-2,-7],[7,9,3,-2,-7,3,-7,-10,7,3,-3,10]],[[2,5,-2,8,10,7,-5,6,8,-2,8,-9],[-4,-5,-1,-7,8,8,-6,-9,-2,-2,7,-1],[-7,9,-4,4,-5,7,5,-1,-5,5,3,-10],[2,6,-9,-4,7,-4,4,-1,9,4,-1,7],[4,-7,-5,6,8,7,-6,-4,4,5,7,6]],[[-5,8,-7,-2,-6,-2,6,8,-9,-3,-6,9],[6,10,2,-7,-8,1,-1,-10,3,-10,7,5],[5,-10,-5,-10,3,-4,8,1,8,5,6,8],[5,-8,-6,-10,-1,1,-1,6,-3,-10,10,10],[5,7,9,1,-3,-10,-2,-9,5,8,1,2]],[[2,6,3,-2,-1,2,-6,8,3,-6,10,-7],[-5,1,-1,-1,-2,7,-5,8,9,8,4,-5],[-3,2,-8,8,-6,-1,-1,9,3,1,-6,6],[8,3,1,8,10,-9,1,-2,-8,3,9,-3],[2,2,6,5,3,7,-7,8,-5,6,6,-2]],[[-2,4,-8,4,4,10,-2,-3,5,9,-4,-9],[-3,2,2,-4,8,-4,4,10,1,-5,5,10],[-7,-1,-5,10,3,9,-6,8,8,4,-1,9],[2,-9,-3,6,7,1,-6,-3,-2,4,3,4],[7,3,-10,-2,-6,9,9,1,3,-9,4,-9]],[[4,4,7,-9,6,2,6,-10,4,-4,-5,8],[-9,-8,-1,-9,2,2,-3,-6,5,-5,-4,5],[-4,-1,-6,-8,6,-7,-5,-9,2,-8,4,-4],[-4,4,-1,7,10,4,-5,-10,-10,-5,5,-10],[9,2,2,4,4,-5,7,-2,-8,-2,1,-3]],[[10,4,5,-4,3,-8,1,-10,-2,-2,7,-5],[-10,-9,10,2,3,5,3,4,5,-1,-6,3],[-8,-6,-1,-1,9,-4,5,8,3,7,3,1],[3,-6,3,-4,6,-5,10,-8,7,7,9,1],[9,9,9,-1,10,-1,9,-3,7,4,3,8]],[[5,3,3,9,3,-7,7,-7,7,1,7,-5],[-9,4,10,-3,9,10,-1,-5,6,-9,10,-2],[-5,-5,7,9,-8,8,-4,4,9,7,-4,4],[-4,4,10,3,9,10,-7,-1,-9,-2,2,-10],[9,-10,-2,4,7,2,-4,-5,-4,-10,-1,7]],[[-2,6,-4,-6,4,7,-2,1,-8,9,7,-4],[6,-1,5,-8,6,2,8,4,-5,5,-1,7],[9,-1,9,-7,-1,1,-6,-4,2,-4,-3,-2],[9,-6,-6,-10,-8,-1,-6,1,7,-3,2,7],[3,-4,-10,-7,-8,9,-5,-10,8,1,2,-1]]], dtype = "int8")#candidate|4391|(9, 5, 12)|const|int8
bop_4392 = relay.divide(var_4362.astype('float64'), relay.reshape(const_4391.astype('float64'), relay.shape_of(var_4362))) # shape=(9, 5, 12)
uop_4404 = relay.exp(bop_4376.astype('float32')) # shape=(9, 5, 12)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_4410 = relay.TupleGetItem(func_3181_call(), 0)
call_4411 = relay.TupleGetItem(func_3182_call(), 0)
output = relay.Tuple([bop_4364,call_4367,const_4368,var_4369,var_4370,call_4385,var_4386,bop_4392,uop_4404,call_4410,])
output2 = relay.Tuple([bop_4364,call_4371,const_4368,var_4369,var_4370,call_4387,var_4386,bop_4392,uop_4404,call_4411,])
func_4414 = relay.Function([var_4362,var_4363,var_4369,var_4370,var_4375,var_4386,], output)
mod['func_4414'] = func_4414
mod = relay.transform.InferType()(mod)
var_4415 = relay.var("var_4415", dtype = "int8", shape = (9, 5, 12))#candidate|4415|(9, 5, 12)|var|int8
var_4416 = relay.var("var_4416", dtype = "int8", shape = (9, 5, 12))#candidate|4416|(9, 5, 12)|var|int8
var_4417 = relay.var("var_4417", dtype = "float64", shape = (140,))#candidate|4417|(140,)|var|float64
var_4418 = relay.var("var_4418", dtype = "float64", shape = (52,))#candidate|4418|(52,)|var|float64
var_4419 = relay.var("var_4419", dtype = "int8", shape = (9, 5, 12))#candidate|4419|(9, 5, 12)|var|int8
var_4420 = relay.var("var_4420", dtype = "int64", shape = (672,))#candidate|4420|(672,)|var|int64
output = func_4414(var_4415,var_4416,var_4417,var_4418,var_4419,var_4420,)
func_4421 = relay.Function([var_4415,var_4416,var_4417,var_4418,var_4419,var_4420,], output)
mutated_mod['func_4421'] = func_4421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2434_call = mod.get_global_var('func_2434')
func_2435_call = mutated_mod.get_global_var('func_2435')
call_4469 = relay.TupleGetItem(func_2434_call(), 0)
call_4470 = relay.TupleGetItem(func_2435_call(), 0)
output = relay.Tuple([call_4469,])
output2 = relay.Tuple([call_4470,])
func_4471 = relay.Function([], output)
mod['func_4471'] = func_4471
mod = relay.transform.InferType()(mod)
mutated_mod['func_4471'] = func_4471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4471_call = mutated_mod.get_global_var('func_4471')
call_4472 = func_4471_call()
output = call_4472
func_4473 = relay.Function([], output)
mutated_mod['func_4473'] = func_4473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1197_call = mod.get_global_var('func_1197')
func_1198_call = mutated_mod.get_global_var('func_1198')
call_4561 = func_1197_call()
call_4562 = func_1197_call()
uop_4563 = relay.acos(call_4561.astype('float64')) # shape=(4, 13, 12)
uop_4565 = relay.acos(call_4562.astype('float64')) # shape=(4, 13, 12)
output = uop_4563
output2 = uop_4565
func_4571 = relay.Function([], output)
mod['func_4571'] = func_4571
mod = relay.transform.InferType()(mod)
output = func_4571()
func_4572 = relay.Function([], output)
mutated_mod['func_4572'] = func_4572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_4573 = func_1380_call()
call_4574 = func_1380_call()
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
call_4593 = relay.TupleGetItem(func_525_call(), 0)
call_4594 = relay.TupleGetItem(func_527_call(), 0)
output = relay.Tuple([call_4573,call_4593,])
output2 = relay.Tuple([call_4574,call_4594,])
func_4607 = relay.Function([], output)
mod['func_4607'] = func_4607
mod = relay.transform.InferType()(mod)
mutated_mod['func_4607'] = func_4607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4607_call = mutated_mod.get_global_var('func_4607')
call_4608 = func_4607_call()
output = call_4608
func_4609 = relay.Function([], output)
mutated_mod['func_4609'] = func_4609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_408_call = mod.get_global_var('func_408')
func_409_call = mutated_mod.get_global_var('func_409')
call_4642 = func_408_call()
call_4643 = func_408_call()
output = relay.Tuple([call_4642,])
output2 = relay.Tuple([call_4643,])
func_4646 = relay.Function([], output)
mod['func_4646'] = func_4646
mod = relay.transform.InferType()(mod)
output = func_4646()
func_4647 = relay.Function([], output)
mutated_mod['func_4647'] = func_4647
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4682 = relay.var("var_4682", dtype = "float64", shape = (15, 16, 7))#candidate|4682|(15, 16, 7)|var|float64
uop_4683 = relay.log10(var_4682.astype('float64')) # shape=(15, 16, 7)
output = relay.Tuple([uop_4683,])
output2 = relay.Tuple([uop_4683,])
func_4688 = relay.Function([var_4682,], output)
mod['func_4688'] = func_4688
mod = relay.transform.InferType()(mod)
mutated_mod['func_4688'] = func_4688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4689 = relay.var("var_4689", dtype = "float64", shape = (15, 16, 7))#candidate|4689|(15, 16, 7)|var|float64
func_4688_call = mutated_mod.get_global_var('func_4688')
call_4690 = func_4688_call(var_4689)
output = call_4690
func_4691 = relay.Function([var_4689], output)
mutated_mod['func_4691'] = func_4691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4187_call = mod.get_global_var('func_4187')
func_4189_call = mutated_mod.get_global_var('func_4189')
call_4736 = relay.TupleGetItem(func_4187_call(), 0)
call_4737 = relay.TupleGetItem(func_4189_call(), 0)
func_1097_call = mod.get_global_var('func_1097')
func_1101_call = mutated_mod.get_global_var('func_1101')
var_4765 = relay.var("var_4765", dtype = "int64", shape = (195,))#candidate|4765|(195,)|var|int64
call_4764 = relay.TupleGetItem(func_1097_call(relay.reshape(var_4765.astype('int64'), [3, 13, 5]), relay.reshape(var_4765.astype('int64'), [3, 13, 5]), ), 0)
call_4766 = relay.TupleGetItem(func_1101_call(relay.reshape(var_4765.astype('int64'), [3, 13, 5]), relay.reshape(var_4765.astype('int64'), [3, 13, 5]), ), 0)
output = relay.Tuple([call_4736,call_4764,var_4765,])
output2 = relay.Tuple([call_4737,call_4766,var_4765,])
func_4789 = relay.Function([var_4765,], output)
mod['func_4789'] = func_4789
mod = relay.transform.InferType()(mod)
mutated_mod['func_4789'] = func_4789
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4790 = relay.var("var_4790", dtype = "int64", shape = (195,))#candidate|4790|(195,)|var|int64
func_4789_call = mutated_mod.get_global_var('func_4789')
call_4791 = func_4789_call(var_4790)
output = call_4791
func_4792 = relay.Function([var_4790], output)
mutated_mod['func_4792'] = func_4792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4841 = relay.var("var_4841", dtype = "float32", shape = (3, 11, 8))#candidate|4841|(3, 11, 8)|var|float32
uop_4842 = relay.atanh(var_4841.astype('float32')) # shape=(3, 11, 8)
uop_4853 = relay.log10(uop_4842.astype('float64')) # shape=(3, 11, 8)
bop_4859 = relay.greater_equal(uop_4853.astype('bool'), relay.reshape(uop_4842.astype('bool'), relay.shape_of(uop_4853))) # shape=(3, 11, 8)
output = relay.Tuple([bop_4859,])
output2 = relay.Tuple([bop_4859,])
func_4862 = relay.Function([var_4841,], output)
mod['func_4862'] = func_4862
mod = relay.transform.InferType()(mod)
var_4863 = relay.var("var_4863", dtype = "float32", shape = (3, 11, 8))#candidate|4863|(3, 11, 8)|var|float32
output = func_4862(var_4863)
func_4864 = relay.Function([var_4863], output)
mutated_mod['func_4864'] = func_4864
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4915 = relay.const([[[False,True,True,True,False,False,True,True,True],[False,False,False,True,False,True,False,False,True],[False,False,False,False,False,False,False,True,True],[False,False,True,False,False,False,True,True,False],[True,False,True,False,False,False,False,True,False],[False,True,True,True,False,True,True,False,True],[False,False,False,True,False,False,True,False,False],[True,False,True,False,True,True,True,False,False],[True,False,True,False,False,True,True,False,True],[False,True,True,False,True,True,False,True,False],[True,False,False,True,True,False,True,True,False],[False,True,False,False,False,False,False,False,True],[True,True,True,False,False,False,True,False,False],[False,False,True,False,True,True,True,True,False]],[[True,False,False,True,False,True,True,True,True],[False,True,False,True,False,True,False,False,True],[False,True,True,False,True,False,True,False,True],[False,True,False,True,False,False,True,False,True],[False,True,False,True,True,True,True,False,True],[True,False,True,False,True,False,False,True,True],[False,True,True,True,True,False,False,False,True],[False,True,True,True,True,False,True,True,False],[False,False,False,True,True,True,False,False,False],[False,False,True,False,False,False,True,True,False],[False,True,False,True,False,False,False,True,True],[False,True,False,False,True,True,True,True,False],[False,True,False,False,False,False,True,False,False],[False,True,False,False,True,True,False,False,True]],[[False,False,True,False,True,False,False,True,True],[True,False,False,False,False,False,False,False,False],[True,False,False,True,False,True,True,False,True],[True,False,True,False,True,False,True,True,True],[True,True,False,True,True,True,True,True,True],[True,True,False,True,False,False,True,False,False],[True,True,False,False,False,False,True,True,True],[True,False,False,False,False,False,True,True,True],[False,False,False,True,False,True,True,True,False],[True,True,False,True,False,True,True,False,False],[False,True,True,True,True,True,False,True,True],[False,False,False,True,False,True,True,False,True],[False,True,False,False,True,True,False,False,True],[False,False,True,False,False,True,True,True,False]],[[False,True,True,False,True,False,False,False,False],[True,True,False,False,False,False,True,False,True],[False,True,True,False,True,True,True,True,True],[False,False,True,False,False,False,False,False,False],[False,True,False,False,False,False,True,True,False],[True,False,False,False,False,True,True,False,False],[True,False,True,False,False,True,True,True,False],[False,True,False,False,True,True,False,True,False],[False,False,True,False,True,True,True,True,True],[False,True,False,True,False,False,False,False,False],[False,False,True,False,False,False,False,False,True],[False,False,True,False,True,True,True,True,True],[False,False,False,True,True,True,True,False,True],[True,False,False,False,False,False,True,False,False]],[[False,True,False,True,True,False,False,True,True],[False,False,True,True,False,True,True,True,False],[True,True,False,False,False,True,False,False,True],[False,False,False,False,False,True,False,True,False],[True,False,True,False,False,True,True,True,True],[True,False,False,True,True,True,False,False,False],[True,False,False,False,True,False,False,True,False],[True,False,False,True,True,False,False,True,False],[True,True,True,False,False,True,True,True,True],[False,True,True,False,False,True,True,True,False],[True,True,False,False,True,False,False,False,True],[False,True,False,False,False,True,True,True,True],[False,False,True,True,False,False,False,True,True],[False,False,False,False,True,True,False,True,False]],[[False,True,True,True,True,False,False,True,False],[True,False,True,True,True,True,False,False,False],[False,True,True,True,True,True,True,True,False],[True,False,False,True,False,True,False,False,True],[False,False,False,True,True,True,False,False,False],[False,False,False,False,True,True,True,False,False],[False,False,False,False,True,False,False,False,False],[False,True,False,True,True,False,True,False,False],[False,True,False,False,True,True,True,True,False],[False,False,False,True,False,False,True,False,True],[True,True,False,True,True,True,False,False,False],[False,True,True,False,False,False,True,False,True],[False,True,False,False,False,False,False,True,False],[True,False,False,False,True,True,False,False,False]],[[True,False,False,False,True,False,True,True,False],[True,False,False,False,False,False,False,False,False],[False,True,True,False,False,True,False,False,False],[False,True,False,False,False,True,True,False,False],[True,True,True,True,False,False,True,False,False],[True,False,True,True,False,False,False,False,False],[True,True,False,True,True,True,False,True,False],[True,False,False,True,True,False,False,False,False],[False,False,True,True,True,True,False,True,False],[False,True,False,False,True,True,False,False,False],[False,False,False,False,True,False,False,False,False],[False,True,False,True,True,False,False,False,False],[True,False,True,True,False,False,False,False,True],[True,True,False,False,True,False,False,True,False]],[[False,True,False,False,False,True,True,True,True],[True,True,True,True,False,False,False,False,False],[True,False,True,False,True,False,False,True,True],[True,True,False,True,False,True,True,False,True],[True,True,False,False,True,True,True,False,False],[True,True,False,False,False,False,True,False,True],[True,True,True,False,False,False,False,True,False],[True,False,True,True,True,False,True,True,True],[True,True,False,True,False,True,True,False,True],[True,True,True,False,False,False,True,False,False],[False,False,True,False,False,False,True,True,True],[False,False,True,True,True,False,True,False,False],[False,True,True,True,False,False,True,True,True],[True,False,True,False,False,False,True,True,False]],[[True,False,True,True,False,True,False,False,True],[False,True,True,False,False,True,True,True,True],[False,False,False,True,False,True,False,False,True],[False,True,False,False,True,True,True,False,True],[True,False,True,False,False,True,True,False,True],[False,False,False,False,False,True,False,True,True],[True,True,True,True,False,False,True,False,True],[False,False,True,False,True,True,True,True,True],[False,False,False,True,True,False,False,True,False],[True,True,True,False,True,False,True,False,False],[True,True,True,True,False,True,False,False,False],[False,True,True,True,False,True,True,True,False],[True,True,True,True,False,True,False,False,False],[True,True,False,True,True,True,False,False,True]],[[True,False,True,True,False,True,False,False,True],[False,True,False,False,True,False,False,False,False],[True,True,True,True,False,False,True,True,True],[False,False,True,False,True,False,True,True,False],[False,True,False,True,True,False,False,False,True],[False,False,True,False,True,False,True,False,False],[False,True,False,True,True,False,True,True,True],[True,True,False,True,True,False,False,True,True],[False,True,True,True,True,True,False,True,False],[True,True,False,True,True,True,True,False,True],[True,True,False,True,False,True,True,False,True],[True,False,False,True,False,True,False,True,False],[False,True,True,False,False,False,True,False,True],[False,True,False,True,True,True,False,False,False]],[[True,True,False,False,True,False,False,False,False],[True,False,True,True,False,False,True,True,True],[True,False,True,True,False,False,True,False,True],[False,False,True,False,True,True,False,False,False],[False,False,False,False,False,False,True,True,True],[False,False,False,True,False,False,False,True,False],[False,False,False,False,False,False,True,True,False],[False,True,False,False,False,False,False,False,False],[True,False,False,False,False,False,False,True,False],[False,True,True,False,True,True,True,True,False],[True,True,True,True,True,False,True,False,False],[False,False,True,False,True,True,False,True,True],[True,True,False,True,True,True,True,False,False],[False,True,False,False,False,True,True,False,False]],[[False,True,False,False,True,True,True,False,False],[False,False,False,True,True,True,True,True,True],[False,False,True,True,False,False,True,True,False],[False,False,False,False,False,False,True,True,True],[False,False,True,False,True,False,False,False,True],[False,False,False,True,False,False,False,True,True],[False,False,False,False,False,False,True,True,True],[True,False,False,False,False,False,False,False,True],[False,True,False,True,True,False,False,False,False],[False,False,False,True,False,False,True,False,True],[False,True,False,True,False,False,True,True,False],[True,True,False,True,True,True,True,False,False],[True,False,False,True,True,False,True,False,False],[False,False,True,True,False,False,True,True,True]]], dtype = "bool")#candidate|4915|(12, 14, 9)|const|bool
var_4916 = relay.var("var_4916", dtype = "bool", shape = (12, 14, 9))#candidate|4916|(12, 14, 9)|var|bool
bop_4917 = relay.logical_or(const_4915.astype('bool'), relay.reshape(var_4916.astype('bool'), relay.shape_of(const_4915))) # shape=(12, 14, 9)
bop_4921 = relay.minimum(var_4916.astype('int8'), relay.reshape(bop_4917.astype('int8'), relay.shape_of(var_4916))) # shape=(12, 14, 9)
output = relay.Tuple([bop_4921,])
output2 = relay.Tuple([bop_4921,])
func_4930 = relay.Function([var_4916,], output)
mod['func_4930'] = func_4930
mod = relay.transform.InferType()(mod)
mutated_mod['func_4930'] = func_4930
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4931 = relay.var("var_4931", dtype = "bool", shape = (12, 14, 9))#candidate|4931|(12, 14, 9)|var|bool
func_4930_call = mutated_mod.get_global_var('func_4930')
call_4932 = func_4930_call(var_4931)
output = call_4932
func_4933 = relay.Function([var_4931], output)
mutated_mod['func_4933'] = func_4933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_208_call = mod.get_global_var('func_208')
func_210_call = mutated_mod.get_global_var('func_210')
call_4994 = relay.TupleGetItem(func_208_call(), 2)
call_4995 = relay.TupleGetItem(func_210_call(), 2)
func_2835_call = mod.get_global_var('func_2835')
func_2836_call = mutated_mod.get_global_var('func_2836')
call_5018 = relay.TupleGetItem(func_2835_call(), 1)
call_5019 = relay.TupleGetItem(func_2836_call(), 1)
output = relay.Tuple([call_4994,call_5018,])
output2 = relay.Tuple([call_4995,call_5019,])
func_5024 = relay.Function([], output)
mod['func_5024'] = func_5024
mod = relay.transform.InferType()(mod)
mutated_mod['func_5024'] = func_5024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5024_call = mutated_mod.get_global_var('func_5024')
call_5025 = func_5024_call()
output = call_5025
func_5026 = relay.Function([], output)
mutated_mod['func_5026'] = func_5026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4607_call = mod.get_global_var('func_4607')
func_4609_call = mutated_mod.get_global_var('func_4609')
call_5041 = relay.TupleGetItem(func_4607_call(), 0)
call_5042 = relay.TupleGetItem(func_4609_call(), 0)
func_4073_call = mod.get_global_var('func_4073')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_5046 = relay.TupleGetItem(func_4073_call(), 0)
call_5047 = relay.TupleGetItem(func_4075_call(), 0)
func_3844_call = mod.get_global_var('func_3844')
func_3845_call = mutated_mod.get_global_var('func_3845')
call_5053 = relay.TupleGetItem(func_3844_call(), 2)
call_5054 = relay.TupleGetItem(func_3845_call(), 2)
output = relay.Tuple([call_5041,call_5046,call_5053,])
output2 = relay.Tuple([call_5042,call_5047,call_5054,])
func_5062 = relay.Function([], output)
mod['func_5062'] = func_5062
mod = relay.transform.InferType()(mod)
mutated_mod['func_5062'] = func_5062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mutated_mod.get_global_var('func_5062')
call_5063 = func_5062_call()
output = call_5063
func_5064 = relay.Function([], output)
mutated_mod['func_5064'] = func_5064
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5117 = relay.var("var_5117", dtype = "float32", shape = (14, 9, 7))#candidate|5117|(14, 9, 7)|var|float32
var_5118 = relay.var("var_5118", dtype = "float32", shape = (14, 9, 7))#candidate|5118|(14, 9, 7)|var|float32
bop_5119 = relay.maximum(var_5117.astype('float32'), relay.reshape(var_5118.astype('float32'), relay.shape_of(var_5117))) # shape=(14, 9, 7)
var_5127 = relay.var("var_5127", dtype = "float32", shape = (14, 9, 7))#candidate|5127|(14, 9, 7)|var|float32
bop_5128 = relay.logical_xor(var_5118.astype('uint16'), relay.reshape(var_5127.astype('uint16'), relay.shape_of(var_5118))) # shape=(14, 9, 7)
func_2251_call = mod.get_global_var('func_2251')
func_2253_call = mutated_mod.get_global_var('func_2253')
call_5132 = relay.TupleGetItem(func_2251_call(), 1)
call_5133 = relay.TupleGetItem(func_2253_call(), 1)
const_5134 = relay.const([[[2.248311,-2.390926,6.124699,8.617846,6.482782,7.608625,8.181801],[-3.233872,-5.772776,4.996121,7.387362,3.614879,5.970453,-5.958004],[-5.164112,-1.800717,6.956030,-5.339718,-4.642819,4.151853,-8.710714],[4.871929,-2.364210,8.825754,-6.169480,-8.393708,-1.178187,4.991605],[-5.452172,-5.452844,8.749617,-1.947596,9.896964,4.782767,8.461666],[-5.515202,-0.228833,0.558722,6.502443,9.210059,5.999469,8.933552],[-2.544178,6.385573,5.699647,8.672962,-4.227308,6.969337,-4.578520],[4.588942,-7.442577,-5.589384,0.789674,3.943629,-9.242002,7.399981],[4.408444,3.362323,2.797215,-2.073334,0.254290,8.107326,3.280706]],[[4.565600,-0.220852,2.264742,-0.776930,8.488408,8.231629,-1.066283],[0.329861,7.500662,6.270166,-3.929226,4.925555,6.576137,-6.166017],[-7.405449,3.295936,-1.140151,-4.157319,-4.707550,6.120622,5.872022],[8.514430,-0.687809,0.500101,0.986927,8.471048,6.922877,-8.946524],[1.795698,8.789691,-5.769025,7.921529,-6.195936,3.396296,9.455641],[-7.497326,8.115066,-9.818000,3.884984,-5.899740,-4.415601,-8.083133],[-4.932934,-4.859586,-6.396871,-7.975484,5.569077,2.016134,8.078549],[-4.644139,2.128134,6.985081,-0.862495,-0.009007,1.329061,-0.067513],[-8.165041,8.304456,7.396625,-5.907863,-7.575683,4.495942,2.811363]],[[1.464601,5.618358,4.301964,8.897653,3.080369,-7.410277,4.908207],[-1.286161,-4.653499,-3.189526,-6.825035,9.323973,5.052427,8.341976],[6.059970,8.385014,4.150886,8.337555,2.335690,-8.466429,-0.530026],[1.040994,-1.389549,-7.015892,-0.153203,5.575113,-3.745086,-7.281367],[-0.055437,-0.484731,-7.737398,-7.145178,-4.193190,-1.120993,-6.067591],[7.625702,4.107702,-4.222833,-3.389789,-2.057009,-7.041665,1.780091],[0.020874,-6.825121,3.698647,7.636120,4.893790,-1.462832,6.759305],[0.601522,0.294756,2.283817,8.980148,-2.608652,-7.920838,8.477918],[-2.163217,1.583487,-2.709262,5.662838,8.532860,7.184695,2.130481]],[[-4.649150,-6.407663,-8.963984,-3.162690,-2.933545,-1.932990,-6.055035],[-4.595485,1.828391,-0.938113,-4.237179,-0.546003,0.336912,-5.938164],[-1.194142,-8.898327,5.311471,1.711165,-9.827400,7.213341,2.598073],[2.850254,-2.128156,6.676194,0.254445,-5.437133,-7.652361,3.962962],[-6.792712,-7.043580,7.091471,-8.006764,7.740763,3.098820,2.728518],[4.045692,-7.036262,-7.095961,-9.490955,-4.656397,-9.434243,3.339877],[3.158428,-2.691687,-2.172981,2.100935,1.651337,-5.462894,7.107521],[-7.126089,-8.192161,7.779868,-9.107444,5.842071,-0.114920,-4.766575],[3.900839,6.637623,9.133957,-9.949520,9.592899,0.673709,1.282152]],[[7.040487,1.869316,-8.000881,9.621940,-1.877444,3.217901,-0.044395],[8.615509,-6.315440,-3.200795,-3.975385,1.020981,-7.975020,-1.549743],[4.537551,9.303026,-2.158025,-5.864921,4.388330,-7.421634,-8.149745],[4.528677,0.530658,2.499371,5.998821,-7.913506,7.245083,6.147300],[-1.720526,-5.461005,1.216237,-5.446543,-6.312080,-1.887847,0.266458],[-9.506325,0.078224,-3.730096,-5.918898,-8.880242,-7.649855,9.032249],[9.531413,3.601640,-4.207872,8.970309,4.875140,6.056634,7.438967],[7.172816,7.214499,-1.846734,-4.283991,0.971825,-7.276329,-6.236743],[-8.864347,8.199888,-1.368228,7.008052,-4.233520,6.697980,3.167411]],[[4.230184,-9.768657,8.185897,-7.508514,-9.929021,-1.256064,-0.820885],[-0.957405,0.475774,-7.170943,-4.942358,6.061590,-7.532525,-7.658224],[-8.446067,-1.962995,-3.411308,-5.684768,-8.381256,6.623744,7.624032],[2.025519,9.767580,9.224042,-7.458034,1.619546,-3.786527,7.167460],[-8.018894,-1.359356,2.945575,-7.616711,-7.225782,9.806593,-4.528469],[3.019068,-8.484073,5.449284,-1.736001,6.026915,-3.426108,6.963673],[4.635808,3.759285,8.019756,-1.989519,8.253236,-3.790707,-9.535811],[-1.508919,6.617792,-4.854139,-5.366720,2.002410,-9.172294,-3.573206],[1.791001,-0.717688,-6.378446,-6.346143,4.605139,-7.373458,4.705825]],[[-0.040412,-9.386064,-7.533512,6.410413,2.161668,-6.025403,-0.164935],[2.661438,-5.385632,3.488015,-4.835833,-8.807488,7.424446,6.257034],[-1.766560,-8.589152,-0.419778,-9.135736,-8.590244,-8.676030,6.796765],[-9.922662,2.197875,-0.533284,-4.857637,-0.221612,0.306785,2.982476],[4.202656,-1.635543,-8.249996,-7.923782,2.905934,7.030342,-8.437092],[-0.474263,6.297735,-2.680019,-5.449522,-3.925604,-7.188339,7.495825],[5.263424,-3.380973,-0.204687,0.642754,0.192633,8.715514,-1.473355],[4.419339,-5.471451,-3.806308,-7.358097,7.576909,-9.331054,-8.292970],[-1.772594,-3.471906,-6.158840,-6.895250,-9.578408,8.369410,-9.566064]],[[-5.327626,-9.098068,2.787843,9.900742,-2.912539,-1.859714,8.778857],[4.617905,8.168776,2.594454,7.268111,-5.671196,-2.190921,7.754456],[7.934372,5.123652,-2.801288,3.860096,-1.361827,-0.249943,-8.587408],[-3.358596,2.243237,0.764778,-8.185563,-3.582439,4.343981,4.151917],[6.098223,4.874005,-3.463232,8.989844,-4.943008,8.554082,7.193984],[3.738683,-1.921655,4.498303,8.837661,0.317104,-8.857118,-8.238152],[-8.767690,2.315604,-3.033662,-2.676349,9.797971,-4.410421,-2.786284],[5.291419,4.136927,-6.834259,-8.384427,6.820511,-9.641187,4.415501],[-7.155438,-4.235591,-9.158631,3.937644,6.920301,2.359519,4.174408]],[[-9.295443,7.496352,3.560860,7.936975,4.170716,-3.138943,7.091096],[6.580063,0.922757,-2.974811,-6.748519,0.425345,-0.630610,-4.404094],[-2.340996,2.801911,6.970751,-6.651648,9.720998,-8.361011,2.022479],[4.212724,-6.705534,-4.922560,-3.861030,7.897644,2.068590,-5.482312],[7.207312,1.950201,-6.976200,9.301693,-4.365686,4.139078,3.806039],[-9.773520,-4.501750,5.411717,-0.612330,-5.440266,4.724439,6.037860],[-0.225976,-6.046122,-0.503065,6.298916,-2.777349,5.913553,-8.588063],[-1.625406,-0.517817,7.940609,-7.534406,3.488099,-5.027149,4.219554],[-8.619227,-9.860941,4.344007,-4.800801,-5.977701,-7.010517,-0.236991]],[[0.309955,-8.511633,-1.797766,-7.923735,5.051293,1.465019,9.243103],[-9.948150,5.986049,-2.090141,-0.822088,-6.426374,7.171590,-4.401609],[4.225730,1.227772,-5.871852,-3.354345,5.415053,-1.453669,4.087173],[5.832520,4.854746,4.621608,-8.415609,-2.865752,5.708618,-2.454622],[1.872532,1.015744,8.529084,-5.685593,-7.099676,2.091362,8.725826],[9.421856,4.778377,-1.394862,-9.426210,9.380856,8.200398,0.616839],[-3.735621,8.712982,5.687255,-6.832695,-7.287501,-1.166624,7.129542],[-9.356882,2.259240,0.113965,-8.271359,4.957421,6.891687,-2.980275],[-0.193007,-0.737379,0.523264,-9.793268,-2.874079,4.722195,5.375042]],[[3.004430,6.512921,-7.670099,0.204981,1.144685,6.128910,9.433650],[4.828178,2.273193,9.093376,-8.260516,9.882706,6.307133,6.060537],[-7.644773,-4.761857,5.311862,8.418343,-7.649681,7.611564,1.030355],[-3.096274,-7.015079,-4.379158,5.812755,7.883555,-4.008902,0.965462],[-0.364642,-3.059522,8.211161,-1.202809,2.421951,-3.746820,4.885138],[5.462273,-3.858322,3.786164,-6.888800,-7.101948,5.855430,4.229830],[7.605813,-3.622879,-0.418819,-9.753143,7.506605,-7.199304,0.756705],[5.419829,3.922106,3.926383,-7.751526,-0.315883,-2.011931,9.649352],[-1.676429,6.231965,3.660726,0.461725,-8.558864,6.511410,-8.135111]],[[-4.998344,5.585573,-4.086729,1.216893,-2.190619,-4.417074,-3.599807],[-9.097403,8.472689,-1.675244,-5.638592,-6.805650,3.361901,1.431155],[-4.880600,0.075719,1.546043,-3.131255,9.469449,9.764487,-9.178987],[-0.967975,-5.393136,-5.101433,5.469057,-5.086760,-6.653802,1.576218],[-4.720064,-6.462888,-1.768997,1.010008,-6.418730,-2.028543,1.428464],[-9.309912,9.145376,-9.855855,1.706441,4.996943,-2.078437,-5.847767],[-1.898799,-4.850807,-6.962654,-7.179158,-4.648455,7.801775,4.499039],[-1.589657,9.826743,-4.729559,9.722070,3.551792,7.726170,6.855338],[-2.123342,-1.614753,4.496111,0.041424,-3.767873,2.848834,-8.639415]],[[0.362285,-7.592416,-3.055813,-1.172894,-0.621963,-7.441099,-2.069538],[4.940719,3.125364,3.343094,-5.985228,-5.392832,5.301631,6.019925],[-6.928727,3.214156,-0.940976,4.192956,4.082836,6.718631,-7.599700],[4.797750,-2.347035,-2.738680,9.133572,7.021717,0.271637,0.446559],[-5.114725,9.314915,-7.082132,7.132798,-2.966371,-1.695464,-2.828342],[0.211542,1.175527,-7.779111,8.894149,7.918129,-4.984344,2.995093],[-7.960014,-1.222956,6.772385,5.640926,-9.503392,-9.462063,-8.831364],[3.314280,9.268730,5.700469,5.607113,-8.462907,-0.441273,6.053323],[-1.439100,-7.466307,-9.843259,-2.554374,-4.060861,0.091960,-6.133672]],[[4.987990,-7.579172,2.413995,-6.341640,-5.295877,-7.674542,-8.071690],[-7.979333,-4.859508,-4.445779,-0.317171,0.968820,4.349849,-4.215666],[0.339603,-1.402767,9.826028,2.715143,-1.933024,1.657814,0.785457],[6.664009,3.879637,-9.820484,6.349842,-6.784125,7.231243,-0.119708],[-2.219935,6.768526,3.286429,-1.437376,9.116400,6.221942,6.484710],[-5.826057,2.555898,0.798654,-2.081944,-5.720531,-8.623282,9.048134],[-0.007498,-2.708123,-8.532555,-5.898792,-7.554140,7.847826,-5.849962],[9.161375,9.806929,1.693433,-1.439650,3.172700,-5.369085,-7.027592],[4.000709,-6.424446,2.203591,-6.895962,-3.266528,0.021783,6.467306]]], dtype = "float32")#candidate|5134|(14, 9, 7)|const|float32
bop_5135 = relay.minimum(var_5118.astype('int8'), relay.reshape(const_5134.astype('int8'), relay.shape_of(var_5118))) # shape=(14, 9, 7)
var_5139 = relay.var("var_5139", dtype = "bool", shape = (4, 13, 12))#candidate|5139|(4, 13, 12)|var|bool
bop_5140 = relay.floor_divide(call_5132.astype('float64'), relay.reshape(var_5139.astype('float64'), relay.shape_of(call_5132))) # shape=(4, 13, 12)
bop_5143 = relay.floor_divide(call_5133.astype('float64'), relay.reshape(var_5139.astype('float64'), relay.shape_of(call_5133))) # shape=(4, 13, 12)
uop_5155 = relay.tan(var_5117.astype('float32')) # shape=(14, 9, 7)
uop_5157 = relay.atanh(uop_5155.astype('float64')) # shape=(14, 9, 7)
output = relay.Tuple([bop_5119,bop_5128,bop_5135,bop_5140,uop_5157,])
output2 = relay.Tuple([bop_5119,bop_5128,bop_5135,bop_5143,uop_5157,])
func_5159 = relay.Function([var_5117,var_5118,var_5127,var_5139,], output)
mod['func_5159'] = func_5159
mod = relay.transform.InferType()(mod)
mutated_mod['func_5159'] = func_5159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mutated_mod.get_global_var('func_5159')
var_5161 = relay.var("var_5161", dtype = "float32", shape = (14, 9, 7))#candidate|5161|(14, 9, 7)|var|float32
var_5162 = relay.var("var_5162", dtype = "float32", shape = (14, 9, 7))#candidate|5162|(14, 9, 7)|var|float32
var_5163 = relay.var("var_5163", dtype = "float32", shape = (14, 9, 7))#candidate|5163|(14, 9, 7)|var|float32
var_5164 = relay.var("var_5164", dtype = "bool", shape = (4, 13, 12))#candidate|5164|(4, 13, 12)|var|bool
call_5160 = func_5159_call(var_5161,var_5162,var_5163,var_5164,)
output = call_5160
func_5165 = relay.Function([var_5161,var_5162,var_5163,var_5164,], output)
mutated_mod['func_5165'] = func_5165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2722_call = mod.get_global_var('func_2722')
func_2723_call = mutated_mod.get_global_var('func_2723')
call_5183 = relay.TupleGetItem(func_2722_call(), 2)
call_5184 = relay.TupleGetItem(func_2723_call(), 2)
func_1247_call = mod.get_global_var('func_1247')
func_1249_call = mutated_mod.get_global_var('func_1249')
call_5188 = relay.TupleGetItem(func_1247_call(), 0)
call_5189 = relay.TupleGetItem(func_1249_call(), 0)
const_5198 = relay.const([[[-9.912000,-6.315151,6.002013,-4.165383,3.656340,4.468324,-5.164873,3.481653,-4.488928,-2.874579,-7.951992,-0.718643,-4.783902,-8.794545,-6.625145],[-1.901446,9.040166,5.832233,2.863119,-0.676781,5.890196,-2.787523,5.669400,-2.821691,4.928028,-8.215868,-6.482319,-4.161276,4.964203,-7.109291],[-2.893453,-5.154307,8.443138,-8.897303,1.891722,-4.933926,-4.239004,6.409476,-0.622237,1.704612,-4.445816,3.593790,3.533778,0.408670,-2.710542],[-6.234385,9.919938,1.090723,-4.955524,9.677501,-3.574124,-1.967776,-1.436832,-0.133199,4.421070,-8.843221,2.039168,-3.659172,3.706039,-5.388678],[7.306925,9.723103,5.312465,0.777161,-0.655102,-6.313852,-3.310643,-0.198125,-9.870292,0.459437,-2.403675,4.801308,0.014454,-6.208456,-9.601182],[0.965903,4.877461,-7.367889,4.331056,-5.179070,-2.035985,-5.899802,4.564302,0.737530,0.546095,4.188855,-5.832158,-6.486949,-0.240423,5.824428],[3.481472,-4.203063,6.250367,0.225670,0.677441,-3.928371,-8.055608,-4.790361,1.556303,9.400018,9.303937,1.984841,-4.109247,2.029201,-9.253664]],[[0.920610,9.275077,0.756323,-2.575355,8.108094,-1.447811,5.167458,-2.122386,5.172142,7.160157,7.047983,1.915280,-2.931771,-9.022556,2.105899],[-3.485992,-5.516506,-3.544177,-1.065980,-7.124179,-4.424429,-4.889059,-6.734010,-1.723959,-5.403425,-9.308147,-3.768650,-1.658188,0.452911,-6.444686],[-9.989520,4.544035,5.658845,-8.400563,-2.991292,6.372759,2.107960,-1.646328,9.386827,7.093807,-8.270976,4.803794,-9.136115,-6.046146,-7.316235],[-2.141517,2.997086,0.519111,9.983807,5.545401,-0.220025,4.629849,-1.242702,0.988951,-2.688635,6.135587,5.443315,6.307444,8.861429,5.772224],[-8.632704,-5.800434,-5.421502,-7.936772,9.348955,9.664625,3.535554,1.475277,1.429301,0.454465,-0.963082,-8.679097,8.322785,2.087973,0.137380],[-1.361397,-9.499084,-5.346245,-5.942650,-5.451909,-2.971285,4.006061,-7.883922,0.050579,-2.356015,9.256213,5.432473,-3.303411,6.369686,6.515226],[-6.460787,8.149136,-5.545727,6.225961,-8.970781,-1.135859,-7.326471,-4.800315,0.500432,-8.569978,-0.227990,-8.068981,2.505496,-4.536107,-5.479109]],[[-9.832299,7.048250,6.753685,0.300274,-0.932892,-5.806655,-8.687917,8.865036,-1.960221,-5.995729,-2.636062,-6.594480,-4.789447,4.287983,2.347348],[4.378087,-0.119223,7.247415,-5.160175,0.658928,-2.670898,-0.570028,-1.798002,-5.694345,-3.003175,6.263790,3.856416,9.525157,4.162676,9.497287],[-3.829687,-2.577988,1.252248,-4.456977,-7.370031,8.697364,1.014069,1.584745,7.974519,-6.303489,-0.462699,-1.936579,-2.034612,-8.528846,-9.799681],[-0.207052,-7.173793,3.801842,-5.192924,7.982531,8.881220,7.607211,-0.422580,-3.567829,-6.930393,7.957684,-1.570850,1.278204,7.816692,7.226009],[3.236255,-3.071245,-6.982160,2.413861,8.620284,-2.781067,7.114065,-1.124990,-8.498088,8.758680,6.093924,-8.973135,-3.391484,-8.190180,5.279975],[8.022355,8.963642,-4.054731,-5.715371,-6.784737,-0.056944,-1.676525,7.170328,-6.356486,-6.694170,-2.791875,-8.949493,5.415811,-7.649465,4.773067],[1.535132,-4.228063,-3.020338,2.356688,3.966476,8.740245,-8.603140,1.227852,-5.455553,9.462721,-0.713284,-2.160954,-2.114000,1.146024,-6.985691]],[[-8.813874,-8.198950,-0.791395,7.168788,6.058537,-7.552306,4.510491,-9.248421,-6.638914,-4.698578,8.797963,2.952561,2.756912,-8.905545,9.543451],[3.445657,-2.374679,-6.381307,7.824542,-0.061409,-9.697095,5.906647,6.535405,5.768629,-1.185919,-2.074613,-1.210022,3.329982,0.387361,-9.634389],[-0.470952,0.433006,5.558230,-6.076777,1.394318,2.752798,1.628222,0.395529,6.112787,-4.945736,-4.877050,5.375894,-1.047346,1.608412,-0.075714],[-9.341413,5.557917,-8.780422,-2.586040,2.546661,4.684687,1.777583,7.834594,-6.194542,2.339485,-1.138475,3.368148,-0.755448,1.737226,4.151019],[-3.103910,-7.998669,2.256011,-2.230645,9.421012,-7.635635,9.500270,2.930090,-0.866646,0.902313,-4.936832,-6.272415,9.299332,-8.459499,-6.833931],[7.067547,0.050071,-5.332078,-6.538119,-1.017759,4.122449,-4.168471,8.045066,7.939879,3.653292,9.607980,3.456539,3.179642,2.953617,3.893929],[-3.895786,-6.340110,-3.051450,-6.602147,0.454355,6.063007,4.190973,1.727662,9.245636,0.063134,0.784221,2.202657,-0.473618,-4.282927,-8.760919]],[[8.063124,-6.665066,-8.317886,-2.983261,2.459264,-6.620166,-9.173779,-2.773569,-8.185228,2.942934,2.110146,-4.335139,5.493475,2.615802,-8.256101],[0.825373,-9.528798,1.199970,-2.134419,-0.420941,-5.339938,-2.503671,-1.440002,-4.419443,8.718344,-9.473290,6.850746,1.758849,7.546853,-0.960198],[-4.765573,7.773488,7.039010,0.729827,2.234235,7.154838,-1.763661,-5.537331,-5.907734,0.351374,-9.139871,-4.337100,6.526549,-3.147155,3.100147],[-9.915469,-1.483440,-0.290598,9.476072,-1.947000,4.113581,-3.754617,7.135274,2.419009,3.002026,5.520223,-5.425494,8.067933,6.969139,6.080349],[-8.444556,-7.533580,2.437934,-1.572660,3.891023,2.773857,-4.495462,-5.286277,6.372485,-6.531819,0.879287,-4.298772,0.286020,7.735223,-1.671519],[6.625072,-4.816351,7.677791,9.425398,-1.473646,-0.558669,2.736162,8.538471,4.094035,1.354394,-5.749777,9.615119,9.789117,-6.931910,-1.478465],[9.732147,-6.277460,2.020823,7.821339,9.131439,1.478591,-1.082986,7.152552,9.524450,-5.347751,-6.881395,1.454714,1.148597,-6.884460,2.837739]]], dtype = "float32")#candidate|5198|(5, 7, 15)|const|float32
bop_5199 = relay.maximum(call_5188.astype('int8'), relay.reshape(const_5198.astype('int8'), relay.shape_of(call_5188))) # shape=(5, 7, 15)
bop_5202 = relay.maximum(call_5189.astype('int8'), relay.reshape(const_5198.astype('int8'), relay.shape_of(call_5189))) # shape=(5, 7, 15)
output = relay.Tuple([call_5183,bop_5199,])
output2 = relay.Tuple([call_5184,bop_5202,])
func_5210 = relay.Function([], output)
mod['func_5210'] = func_5210
mod = relay.transform.InferType()(mod)
output = func_5210()
func_5211 = relay.Function([], output)
mutated_mod['func_5211'] = func_5211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4571_call = mod.get_global_var('func_4571')
func_4572_call = mutated_mod.get_global_var('func_4572')
call_5214 = func_4571_call()
call_5215 = func_4571_call()
output = relay.Tuple([call_5214,])
output2 = relay.Tuple([call_5215,])
func_5218 = relay.Function([], output)
mod['func_5218'] = func_5218
mod = relay.transform.InferType()(mod)
output = func_5218()
func_5219 = relay.Function([], output)
mutated_mod['func_5219'] = func_5219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1184_call = mutated_mod.get_global_var('func_1184')
call_5316 = relay.TupleGetItem(func_1183_call(), 0)
call_5317 = relay.TupleGetItem(func_1184_call(), 0)
func_665_call = mod.get_global_var('func_665')
func_666_call = mutated_mod.get_global_var('func_666')
call_5324 = relay.TupleGetItem(func_665_call(), 1)
call_5325 = relay.TupleGetItem(func_666_call(), 1)
uop_5342 = relay.asin(call_5316.astype('float64')) # shape=(52,)
uop_5344 = relay.asin(call_5317.astype('float64')) # shape=(52,)
uop_5349 = relay.erf(call_5316.astype('float32')) # shape=(52,)
uop_5351 = relay.erf(call_5317.astype('float32')) # shape=(52,)
output = relay.Tuple([call_5324,uop_5342,uop_5349,])
output2 = relay.Tuple([call_5325,uop_5344,uop_5351,])
func_5354 = relay.Function([], output)
mod['func_5354'] = func_5354
mod = relay.transform.InferType()(mod)
mutated_mod['func_5354'] = func_5354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5354_call = mutated_mod.get_global_var('func_5354')
call_5355 = func_5354_call()
output = call_5355
func_5356 = relay.Function([], output)
mutated_mod['func_5356'] = func_5356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4123_call = mod.get_global_var('func_4123')
func_4125_call = mutated_mod.get_global_var('func_4125')
call_5424 = relay.TupleGetItem(func_4123_call(), 0)
call_5425 = relay.TupleGetItem(func_4125_call(), 0)
output = relay.Tuple([call_5424,])
output2 = relay.Tuple([call_5425,])
func_5439 = relay.Function([], output)
mod['func_5439'] = func_5439
mod = relay.transform.InferType()(mod)
mutated_mod['func_5439'] = func_5439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5439_call = mutated_mod.get_global_var('func_5439')
call_5440 = func_5439_call()
output = call_5440
func_5441 = relay.Function([], output)
mutated_mod['func_5441'] = func_5441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5210_call = mod.get_global_var('func_5210')
func_5211_call = mutated_mod.get_global_var('func_5211')
call_5444 = relay.TupleGetItem(func_5210_call(), 1)
call_5445 = relay.TupleGetItem(func_5211_call(), 1)
var_5448 = relay.var("var_5448", dtype = "int8", shape = (5, 7, 15))#candidate|5448|(5, 7, 15)|var|int8
bop_5449 = relay.divide(call_5444.astype('float32'), relay.reshape(var_5448.astype('float32'), relay.shape_of(call_5444))) # shape=(5, 7, 15)
bop_5452 = relay.divide(call_5445.astype('float32'), relay.reshape(var_5448.astype('float32'), relay.shape_of(call_5445))) # shape=(5, 7, 15)
func_4414_call = mod.get_global_var('func_4414')
func_4421_call = mutated_mod.get_global_var('func_4421')
const_5460 = relay.const([-10,-5,-5,-8,3,-7,4,1,4,8,-5,7,-3,-10,-7,-7,5,10,8,-4,9,2,-1,-5,-9,3,5,5,4,8,-4,6,6,-1,6,-7,-9,6,-4,-4,-3,8,-7,-4,10,-10,-7,-8,-4,7,-6,-3,-3,-4,-2,-1,-3,1,-4,1,-8,-10,1,8,-7,-5,9,-10,9,-1,-10,5,3,-5,2,-1,-9,5,-9,7,-8,-10,2,-3,-4,3,-9,9,-4,-7,2,-7,10,-3,5,-8,-2,-1,-10,7,-9,8,-9,-9,3,1,5,6,-10,-8,-9,-7,5,-7,-10,-1,-7,6,7,-10,3,-4,9,-6,1,1,10,-4,6,2,-8,-5,-1,4,8,8,7,-10,4,-5,-9,6,6,4,1,-6,-10,-5,-3,9,-5,3,-9,-8,10,-5,-2,8,-10,8,2,-10,6,-3,4,-10,-7,1,-7,-8,-4,6,5,-2,10,-6,-7,-3,2,1,8,-7,6,2,6,-8,4,-6,10,3,1,2,-6,10,1,-5,5,-5,-9,4,-6,6,8,8,-2,-10,10,9,-7,3,-2,-8,-10,10,9,-5,-8,-2,2,6,10,-7,8,-6,6,-2,10,7,-2,-7,3,-5,-2,-1,6,10,-3,-6,-4,-5,-4,1,8,3,-7,2,-2,-2,1,-3,-1,5,-4,7,5,-10,-3,-2,1,3,-8,7,-10,-6,-4,-2,-4,3,7,-5,3,3,6,-9,3,-4,-8,10,-4,1,-7,-3,9,10,7,10,3,-8,-1,8,10,6,5,-6,-6,6,-9,6,-6,-3,4,-3,-9,7,-7,-5,-9,6,6,-2,10,-6,9,-8,2,6,-9,4,9,7,8,-4,2,2,4,2,4,-5,-2,7,-8,-10,1,2,-7,7,-10,4,-3,-10,2,10,-10,10,2,7,-10,7,-3,3,-10,7,3,2,10,10,-3,-10,9,-6,7,3,10,-3,8,5,8,10,3,-5,3,5,-10,-1,-4,10,-10,-1,2,3,1,10,10,-9,1,6,-3,-1,7,-2,7,-4,-6,7,-10,9,-10,9,10,-3,-5,-6,9,1,-7,6,-6,3,7,9,-2,-7,1,2,-7,2,-3,10,6,-9,2,-7,6,-10,9,10,-2,-4,4,-2,-1,3,-5,-6,-2,-3,2,5,-9,-3,-6,2,10,1,-1,5,9,6,8,-6,6,-7,9,-6,-6,-9,-2,2,-8,-5,6,-1,-5,1,-6,6,-6,2,-4,6,-9,-6,-7,-2,1,-1,5,-2,-6,6,1,8,6,3,-10,3,5,10,-8,-4,-8,-6,7,-5,-2,-9,-2,10,-6,-9,-3,8,2,9,-10,8,10,-1,1,-1,7,-6,8,-1,1,3,-2,4,-8,-5,6,6,-5,-2,-3,9,-5,-2,-1,9,3,-7,-2,-9,4,9,-7,-5,-2,-1], dtype = "int8")#candidate|5460|(540,)|const|int8
const_5461 = relay.const([8.019881,1.663923,9.523471,0.334724,8.707374,0.572522,1.827195,6.636295,3.126597,-1.558348,2.740894,-8.722677,0.305353,7.892908,-9.874097,-9.941981,-2.834491,0.439835,-9.719130,-7.205979,3.597441,-3.359128,-0.086100,-8.796972,6.659967,9.889102,-2.125260,-9.200108,4.908460,6.470749,2.798139,-0.347915,5.613874,2.460262,-9.885987,6.504572,2.738784,-2.092687,8.605720,8.915797,6.916865,0.727065,6.929512,-5.910547,6.904246,-5.430898,7.982206,-9.416828,-4.800370,2.109397,3.522956,2.323553,-4.361237,-1.081472,-2.422513,-2.324681,-1.615572,-1.526769,6.837479,3.030397,-2.709078,2.637909,-1.063784,-1.101000,7.898380,7.607626,-2.357927,-5.694437,-1.593609,-7.982371,-5.107453,6.334785,-9.706091,-7.903477,-6.309824,6.982098,-2.103015,-6.627329,-6.236609,9.514761,-1.052433,0.986846,1.136541,6.213242,-2.730050,1.126139,-9.477765,-7.155856,-9.869394,-9.594473,-4.889142,1.641307,-6.498708,3.497204,-3.061319,1.567946,6.421476,2.503096,-3.330882,-9.477942,-8.466815,5.658119,-5.376538,6.192339,8.460480,0.278736,1.181049,-7.716635,5.573483,2.943898,-5.550176,-5.281016,3.325196,7.750143,9.885250,-6.992196,8.714019,-9.464881,6.303331,-5.973676,-6.191419,-5.565464,-7.001473,1.375519,-8.205487,1.520960,9.348350,-4.444620,1.720116,-0.138207,-9.730695,-2.138516,3.497489,8.125012,-2.845773,2.489414,-3.908304,0.635954,-6.263543,-5.319300], dtype = "float64")#candidate|5461|(140,)|const|float64
const_5462 = relay.const([1.889284,9.296343,7.353333,4.235326,-7.512456,5.278960,4.185507,3.433903,-1.879411,-7.535531,-7.179854,5.528038,-1.031694,-1.834714,5.414368,1.783988,9.838769,5.304679,-8.885185,-9.366601,-1.314222,-1.674527,8.712097,-5.185061,-8.561923,-6.594488,-8.621189,8.375760,4.569001,-5.023152,-5.218610,7.207110,-6.630048,-6.489904,-2.375659,2.325713,0.661490,-5.002930,0.863622,-7.779560,1.833679,6.013004,6.613360,-9.835232,-0.582821,1.491153,-6.574614,-1.140307,-4.055653,-8.538442,-9.737313,3.732502], dtype = "float64")#candidate|5462|(52,)|const|float64
var_5463 = relay.var("var_5463", dtype = "int64", shape = (336, 2))#candidate|5463|(336, 2)|var|int64
call_5459 = relay.TupleGetItem(func_4414_call(relay.reshape(const_5460.astype('int8'), [9, 5, 12]), relay.reshape(const_5460.astype('int8'), [9, 5, 12]), relay.reshape(const_5461.astype('float64'), [140,]), relay.reshape(const_5462.astype('float64'), [52,]), relay.reshape(const_5460.astype('int8'), [9, 5, 12]), relay.reshape(var_5463.astype('int64'), [672,]), ), 3)
call_5464 = relay.TupleGetItem(func_4421_call(relay.reshape(const_5460.astype('int8'), [9, 5, 12]), relay.reshape(const_5460.astype('int8'), [9, 5, 12]), relay.reshape(const_5461.astype('float64'), [140,]), relay.reshape(const_5462.astype('float64'), [52,]), relay.reshape(const_5460.astype('int8'), [9, 5, 12]), relay.reshape(var_5463.astype('int64'), [672,]), ), 3)
output = relay.Tuple([bop_5449,call_5459,const_5460,const_5461,const_5462,var_5463,])
output2 = relay.Tuple([bop_5452,call_5464,const_5460,const_5461,const_5462,var_5463,])
func_5491 = relay.Function([var_5448,var_5463,], output)
mod['func_5491'] = func_5491
mod = relay.transform.InferType()(mod)
var_5492 = relay.var("var_5492", dtype = "int8", shape = (5, 7, 15))#candidate|5492|(5, 7, 15)|var|int8
var_5493 = relay.var("var_5493", dtype = "int64", shape = (336, 2))#candidate|5493|(336, 2)|var|int64
output = func_5491(var_5492,var_5493,)
func_5494 = relay.Function([var_5492,var_5493,], output)
mutated_mod['func_5494'] = func_5494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5024_call = mod.get_global_var('func_5024')
func_5026_call = mutated_mod.get_global_var('func_5026')
call_5530 = relay.TupleGetItem(func_5024_call(), 1)
call_5531 = relay.TupleGetItem(func_5026_call(), 1)
output = call_5530
output2 = call_5531
func_5555 = relay.Function([], output)
mod['func_5555'] = func_5555
mod = relay.transform.InferType()(mod)
mutated_mod['func_5555'] = func_5555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5555_call = mutated_mod.get_global_var('func_5555')
call_5556 = func_5555_call()
output = call_5556
func_5557 = relay.Function([], output)
mutated_mod['func_5557'] = func_5557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2251_call = mod.get_global_var('func_2251')
func_2253_call = mutated_mod.get_global_var('func_2253')
call_5633 = relay.TupleGetItem(func_2251_call(), 0)
call_5634 = relay.TupleGetItem(func_2253_call(), 0)
func_5354_call = mod.get_global_var('func_5354')
func_5356_call = mutated_mod.get_global_var('func_5356')
call_5640 = relay.TupleGetItem(func_5354_call(), 0)
call_5641 = relay.TupleGetItem(func_5356_call(), 0)
output = relay.Tuple([call_5633,call_5640,])
output2 = relay.Tuple([call_5634,call_5641,])
func_5643 = relay.Function([], output)
mod['func_5643'] = func_5643
mod = relay.transform.InferType()(mod)
mutated_mod['func_5643'] = func_5643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5643_call = mutated_mod.get_global_var('func_5643')
call_5644 = func_5643_call()
output = call_5644
func_5645 = relay.Function([], output)
mutated_mod['func_5645'] = func_5645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4143_call = mod.get_global_var('func_4143')
func_4145_call = mutated_mod.get_global_var('func_4145')
call_5665 = relay.TupleGetItem(func_4143_call(), 0)
call_5666 = relay.TupleGetItem(func_4145_call(), 0)
func_3995_call = mod.get_global_var('func_3995')
func_3996_call = mutated_mod.get_global_var('func_3996')
call_5691 = relay.TupleGetItem(func_3995_call(), 1)
call_5692 = relay.TupleGetItem(func_3996_call(), 1)
func_1778_call = mod.get_global_var('func_1778')
func_1781_call = mutated_mod.get_global_var('func_1781')
call_5700 = relay.TupleGetItem(func_1778_call(relay.reshape(call_5665.astype('float32'), [16, 14, 16])), 0)
call_5701 = relay.TupleGetItem(func_1781_call(relay.reshape(call_5665.astype('float32'), [16, 14, 16])), 0)
func_875_call = mod.get_global_var('func_875')
func_877_call = mutated_mod.get_global_var('func_877')
call_5704 = relay.TupleGetItem(func_875_call(), 2)
call_5705 = relay.TupleGetItem(func_877_call(), 2)
output = relay.Tuple([call_5665,call_5691,call_5700,call_5704,])
output2 = relay.Tuple([call_5666,call_5692,call_5701,call_5705,])
func_5707 = relay.Function([], output)
mod['func_5707'] = func_5707
mod = relay.transform.InferType()(mod)
output = func_5707()
func_5708 = relay.Function([], output)
mutated_mod['func_5708'] = func_5708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1067_call = mod.get_global_var('func_1067')
func_1068_call = mutated_mod.get_global_var('func_1068')
call_5739 = func_1067_call()
call_5740 = func_1067_call()
var_5750 = relay.var("var_5750", dtype = "bool", shape = (16, 14, 16))#candidate|5750|(16, 14, 16)|var|bool
bop_5751 = relay.multiply(call_5739.astype('uint8'), relay.reshape(var_5750.astype('uint8'), relay.shape_of(call_5739))) # shape=(16, 14, 16)
bop_5754 = relay.multiply(call_5740.astype('uint8'), relay.reshape(var_5750.astype('uint8'), relay.shape_of(call_5740))) # shape=(16, 14, 16)
func_1414_call = mod.get_global_var('func_1414')
func_1416_call = mutated_mod.get_global_var('func_1416')
call_5758 = relay.TupleGetItem(func_1414_call(), 0)
call_5759 = relay.TupleGetItem(func_1416_call(), 0)
output = relay.Tuple([bop_5751,call_5758,])
output2 = relay.Tuple([bop_5754,call_5759,])
func_5778 = relay.Function([var_5750,], output)
mod['func_5778'] = func_5778
mod = relay.transform.InferType()(mod)
var_5779 = relay.var("var_5779", dtype = "bool", shape = (16, 14, 16))#candidate|5779|(16, 14, 16)|var|bool
output = func_5778(var_5779)
func_5780 = relay.Function([var_5779], output)
mutated_mod['func_5780'] = func_5780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1247_call = mod.get_global_var('func_1247')
func_1249_call = mutated_mod.get_global_var('func_1249')
call_5797 = relay.TupleGetItem(func_1247_call(), 1)
call_5798 = relay.TupleGetItem(func_1249_call(), 1)
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
call_5808 = relay.TupleGetItem(func_525_call(), 0)
call_5809 = relay.TupleGetItem(func_527_call(), 0)
output = relay.Tuple([call_5797,call_5808,])
output2 = relay.Tuple([call_5798,call_5809,])
func_5813 = relay.Function([], output)
mod['func_5813'] = func_5813
mod = relay.transform.InferType()(mod)
mutated_mod['func_5813'] = func_5813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5813_call = mutated_mod.get_global_var('func_5813')
call_5814 = func_5813_call()
output = call_5814
func_5815 = relay.Function([], output)
mutated_mod['func_5815'] = func_5815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5816 = relay.var("var_5816", dtype = "float64", shape = (4, 10, 7))#candidate|5816|(4, 10, 7)|var|float64
uop_5817 = relay.cosh(var_5816.astype('float64')) # shape=(4, 10, 7)
func_5062_call = mod.get_global_var('func_5062')
func_5064_call = mutated_mod.get_global_var('func_5064')
call_5842 = relay.TupleGetItem(func_5062_call(), 1)
call_5843 = relay.TupleGetItem(func_5064_call(), 1)
bop_5846 = relay.bitwise_and(uop_5817.astype('uint8'), relay.reshape(var_5816.astype('uint8'), relay.shape_of(uop_5817))) # shape=(4, 10, 7)
func_1097_call = mod.get_global_var('func_1097')
func_1101_call = mutated_mod.get_global_var('func_1101')
const_5852 = relay.const([9,-4,-10,2,8,7,2,-1,-8,3,-6,-5,7,7,9,5,-9,-9,-4,7,4,7,4,4,5,-7,6,-9,-5,-10,-10,10,-8,8,-9,7,9,-3,10,-2,-3,-7,2,-3,-2,-9,10,2,10,3,3,7,3,-2,5,9,6,8,-4,2,6,8,5,-5,8,-6,-7,2,3,3,1,-10,2,2,1,-1,9,4,-7,-9,-8,-7,-10,-4,-6,-4,3,-1,-4,-10,-1,5,-10,4,-9,-4,9,-3,-4,-3,6,-5,-3,-5,-3,3,5,4,6,-3,-8,-3,2,-6,-3,-5,8,1,10,8,10,-7,-9,10,-6,2,4,3,-1,2,-9,6,-9,-7,-2,10,8,9,-8,-5,-6,10,-4,5,3,-3,4,-10,-6,-10,3,2,-9,9,2,2,2,-7,7,4,-9,2,6,-6,8,5,-6,-3,10,2,5,-3,8,-1,-3,-4,-4,8,8,-6,-10,8,-10,10,-2,-3,8,1,-5,10,-1,-2,1,-5,-2], dtype = "int64")#candidate|5852|(195,)|const|int64
call_5851 = relay.TupleGetItem(func_1097_call(relay.reshape(const_5852.astype('int64'), [3, 13, 5]), relay.reshape(const_5852.astype('int64'), [3, 13, 5]), ), 0)
call_5853 = relay.TupleGetItem(func_1101_call(relay.reshape(const_5852.astype('int64'), [3, 13, 5]), relay.reshape(const_5852.astype('int64'), [3, 13, 5]), ), 0)
var_5874 = relay.var("var_5874", dtype = "uint64", shape = (3, 13, 5))#candidate|5874|(3, 13, 5)|var|uint64
bop_5875 = relay.add(call_5851.astype('int32'), relay.reshape(var_5874.astype('int32'), relay.shape_of(call_5851))) # shape=(3, 13, 5)
bop_5878 = relay.add(call_5853.astype('int32'), relay.reshape(var_5874.astype('int32'), relay.shape_of(call_5853))) # shape=(3, 13, 5)
func_5707_call = mod.get_global_var('func_5707')
func_5708_call = mutated_mod.get_global_var('func_5708')
call_5883 = relay.TupleGetItem(func_5707_call(), 3)
call_5884 = relay.TupleGetItem(func_5708_call(), 3)
func_4688_call = mod.get_global_var('func_4688')
func_4691_call = mutated_mod.get_global_var('func_4691')
const_5891 = relay.const([-5.596747,-2.898648,-2.009489,3.732187,-1.187042,9.027514,3.293881,1.254212,0.293388,7.171598,-0.428124,5.256894,4.748084,4.508236,3.435164,8.196669,4.180385,2.849353,-1.021676,-8.143978,-8.028441,6.464323,-0.499050,-2.120979,9.504674,-1.231878,9.647151,4.650057,-1.158026,-0.873028,-1.572233,6.269047,5.036227,1.708528,6.095479,3.559054,-7.347731,-4.770362,7.647930,-9.218050,-8.403776,9.050904,-7.580938,-5.915789,3.846353,5.729640,-0.219677,6.365957,6.259861,7.145722,9.356658,-7.722177,-1.450662,-0.649586,9.412855,-4.907379,-0.593073,-4.498591,-7.357793,3.379871,1.176533,-6.491313,6.110172,8.135252,-6.559914,3.538835,4.417099,9.357100,-6.525320,-7.862146,-3.763778,4.227296,-3.082842,-7.878868,4.604252,-6.287804,-8.057528,-8.729986,-5.262234,-8.601740,5.556416,-3.017872,0.319966,-7.421337,-1.946752,8.775681,0.624595,6.176646,-5.323491,7.067595,0.045926,-6.827508,-2.765242,9.678345,4.907812,7.124726,2.086871,9.282303,-9.267953,3.302598,-0.405145,8.285285,1.198681,8.003831,-8.562883,4.445696,-4.530239,5.626815,7.068853,-9.939120,-1.804869,4.534719,6.156719,-6.369835,-8.924936,-3.678109,4.864264,-7.842107,-1.231358,-1.005051,-7.568557,-1.934485,-4.240340,0.573781,-3.520404,-3.998746,-9.782447,2.077260,-5.677484,5.764228,5.438641,-5.273967,2.643558,6.226341,-6.062143,2.220529,-0.514011,-5.513925,5.375084,-7.570288,1.103275,8.129563,-2.722861,8.553404,-0.050536,0.953127,6.372563,-7.563718,-2.406983,-9.865012,-9.728915,-2.265811,-8.921822,0.238755,-8.853989,6.318513,-3.450275,8.261472,0.352122,1.012370,5.016783,6.215053,-1.941671,-8.434814,-4.019379,-1.399482,-8.205963,3.765204,5.115952,-8.748944,-7.183519,5.674766,-7.118199,9.913041,4.171223,-7.862108,2.360116,0.007266,3.930337,-0.767724,9.651114,-3.072554,3.120206,-7.952507,-8.542167,6.374975,-1.818164,4.741058,9.893035,4.680877,-8.601151,-3.175965,2.698911,9.367966,3.714043,-6.580907,-1.776619,-0.325231,-0.561599,-4.200172,8.632870,6.529894,-2.548843,7.314843,7.721823,8.848266,-5.468700,2.632710,4.468803,-1.560618,8.172163,6.763179,-4.706595,3.587004,-6.339681,7.650279,3.730621,-2.546221,-7.702187,-8.446101,-3.574679,0.763326,5.115094,-4.536518,6.475797,2.392580,-8.276652,3.648582,-5.763017,7.640940,-0.263815,-5.080559,-3.208941,-6.907694,-6.548731,-4.813127,-2.316898,3.230719,5.039861,-1.976529,1.968416,0.912239,5.122243,-2.215683,2.718681,-5.610063,-5.105759,-5.289213,4.683666,4.931009,4.960682,-0.056681,7.222264,4.056241,-8.170942,-5.467294,0.678024,3.606477,-3.747885,-1.132353,3.080057,2.235172,5.659955,-5.997923,-1.590366,4.457485,-1.636676,3.896326,4.799600,-0.166416,5.375611,1.488114,-4.651408,3.736158,-7.774239,-6.037416,-8.870407,-6.072314,0.163830,0.735597,-6.784337,2.341217,-3.347026,6.723056,4.257459,8.187521,-4.408696,4.370943,6.709695,1.331202,-5.385265,-3.327183,1.035248,0.430590,7.963034,0.299103,4.283994,-7.519482,0.574796,6.197804,2.082496,9.796388,-6.913687,-8.216834,0.659742,8.164347,-2.312456,5.732451,-4.618020,-9.284336,4.334156,-7.499768,2.773882,-2.594813,-0.157467,9.043321,6.532589,1.144297,-5.447300,2.630352,6.472271,2.476284,-0.857846,0.067718,2.047192,6.070465,6.218806,8.760652,-8.871383,-3.926970,-7.395045,5.106051,-3.292252,7.825059,-8.939857,7.013891,5.509866,3.077862,3.788298,9.237108,6.745700,9.271282,-4.115235,8.380954,-5.185194,0.818921,8.675341,-2.391910,6.349018,-7.952239,5.495593,8.355772,2.971633,-6.675386,6.951741,2.660554,-6.356285,-6.121096,-3.101948,-3.584278,0.527225,6.293888,-7.872747,-3.780933,4.323259,7.014130,-2.991825,7.524655,-3.148924,-0.284486,6.021323,-7.700615,-0.574837,-5.447896,-4.984607,-9.575981,-7.886373,-1.837135,6.733863,-7.187739,-3.938558,1.569401,-5.687558,-7.656827,9.100189,2.893221,-2.004441,-8.514087,-4.259050,8.642817,3.112486,-6.763975,6.965237,-1.525627,8.759655,6.449285,9.524145,5.111685,-3.287267,-6.283888,-0.429356,-4.728666,7.509409,-0.174789,-5.980985,-7.472695,5.107955,3.775969,0.285022,5.666462,4.847061,-0.343071,-6.856075,-3.209177,3.209578,-6.629834,-6.813050,7.401633,8.873659,9.809403,2.406082,-2.990919,-3.952637,-2.109646,4.473470,3.620233,-3.844339,9.640891,8.407819,5.097661,-3.834087,-7.911124,1.372937,-7.860353,5.989163,-3.094997,5.747294,6.199577,-4.385373,-2.381600,-8.916852,-0.099917,2.737610,2.883167,-0.315482,-5.823919,-3.659816,1.287877,-7.071805,-1.529406,-3.620849,-7.811659,7.965772,5.556109,7.943482,-5.425892,2.103579,8.604405,-8.509075,9.844483,9.018452,-8.107747,4.646069,0.446712,0.195787,9.929457,-8.297923,-6.975120,-3.538759,-4.071537,2.453512,7.398741,6.275174,3.878909,3.563190,-9.661062,-7.782608,-6.756284,9.209365,8.280427,3.799754,-4.688290,7.985569,-8.285972,-2.147660,5.267664,4.156314,8.396124,1.507380,-8.398822,1.709403,-3.973048,5.716296,9.541513,-8.748870,-2.852365,-7.508986,-9.230858,5.466735,4.961476,7.887949,4.632670,1.032786,2.356881,5.608260,7.188417,7.698363,8.851156,-0.116585,6.030291,0.130273,-7.544643,-0.704180,8.185488,7.970206,1.636775,-1.230122,1.595238,7.158456,-3.981008,5.749230,-8.324372,2.048512,4.596889,-0.249132,3.576276,-8.937363,0.371361,-6.449026,-1.391088,6.463387,-6.902376,-0.117393,8.400401,-0.100297,6.363213,7.381000,-5.657535,0.947771,-6.615943,-4.684477,9.616440,-1.035537,0.860304,-8.225955,-8.661345,-4.110267,2.217623,8.911249,-2.811775,-5.443304,8.108637,9.503466,7.771551,8.630765,2.413849,9.297253,5.925659,4.955064,-8.103291,-2.952890,-1.080146,6.172175,-7.183599,-4.746908,-1.192769,-7.805954,3.741783,-8.380092,-4.287276,-9.422083,5.559482,-2.790096,8.688707,-4.871961,0.813827,1.415214,0.620871,5.379251,9.874625,-1.527448,7.166676,2.286038,4.200463,6.804408,4.562617,6.397782,8.141302,8.531155,1.261245,-6.514787,7.350053,-2.518466,-9.345307,-4.082178,-7.307338,0.642799,2.858989,-8.884057,-7.269813,-2.456973,0.687688,4.539225,9.014348,-8.963314,-6.994062,-8.724432,-8.993507,-0.509515,-1.233874,-9.168380,3.738029,-9.190498,-0.253441,9.569093,-5.086951,-7.431867,1.667713,-1.833358,9.458929,-2.773305,4.729087,4.294978,6.795260,-0.478665,-1.464642,-8.193090,0.885019,-9.923065,2.610815,-3.778950,9.857199,-2.041252,-9.576728,9.049657,7.524194,6.303861,-5.580681,-2.578760,-0.863579,-5.495633,3.176740,5.417362,9.672859,-7.905206,9.247648,7.598687,8.804342,-9.057932,-7.410907,5.855438,2.675410,6.867210,6.716342,5.960661,-6.056178,-7.309007,3.153930,-8.823286,4.279163,0.197867,-1.267952,4.564576,-4.217547,5.781316,-1.561172,-6.754787,-4.341346,9.823811,7.829742,2.829625,-4.397592,6.609459,7.445158,9.292936,-5.396884,-0.090101,3.940101,0.512125,5.440937,-2.384482,6.750331,7.260306,-1.571553,-4.140858,8.219703,-0.420624,5.042550,6.635811,1.790091,-3.075128,-8.905566,-3.062861,-3.901742,5.597184,6.596049,2.102987,3.049653,-9.294251,-7.634708,3.285827,-8.815488,1.928338,-1.993679,1.045705,8.888221,0.798808,-7.248017,7.969500,3.892349,-8.657375,5.410662,-4.186856,-3.406923,-4.067388,8.600068,-4.207321,6.008085,0.618443,9.790394,-3.604111,-0.605457,-4.544127,3.086770,-1.331098,-6.156376,6.325932,-3.341847,-7.869083,-1.944004,9.317641,2.841361,-0.976565,-2.578262,-0.758513,-5.693394,-5.398480,-7.904045,4.271275,7.823348,0.648820,-7.752992,9.403819,-8.110010,6.080682,-5.635460,-9.836681,-5.004216,9.333853,-9.520841,-0.776914,-5.359471,-3.976466,2.309095,-8.187403,8.101823,8.942372,2.749488,-2.078330,-7.861645,-7.900970,4.347591,-2.409299,5.727439,-7.167273,4.704015,-4.577378,6.490547,0.866186,-0.094297,8.177128,0.103507,1.132939,1.955296,-0.357609,0.746811,1.225461,3.658716,9.361240,6.175263,-7.534082,-7.309727,-5.161715,5.730056,6.124093,5.361096,1.789939,5.711534,5.637853,3.504055,-2.546738,4.620354,8.718132,-2.130196,6.188468,-1.649017,-4.616521,4.395013,-7.103492,-0.419155,-8.251277,8.005227,-7.443685,0.722951,2.519882,0.127826,5.219324,0.607863,8.163356,2.546172,9.225720,9.384871,3.247149,-0.224176,6.772372,4.749536,3.883193,-4.934361,2.404993,4.240406,-8.140053,-2.959540,7.498763,-9.777577,1.028903,-0.858552,6.739698,7.222172,-8.609678,-2.943003,-2.632189,7.431955,-0.876695,-6.448774,8.720473,2.359866,-0.670295,-6.043644,3.103267,0.792174,-9.796113,-9.344149,2.793202,-8.301771,1.512339,4.102010,-9.795687,2.930950,-0.218922,-0.219807,-7.458136,7.722892,-3.542225,-2.153854,-7.127215,-6.850480,5.216614,-6.704656,-3.313340,-0.678247,-8.581522,-4.599465,5.466217,5.506992,1.971887,0.974719,1.112883,-6.599616,-6.710411,-7.273273,-0.961653,-1.702304,7.508985,-9.251426,9.894193,9.632812,1.922572,3.080350,-5.990214,-2.733824,-3.117699,4.629638,2.271659,3.212845,-1.960136,-6.634024,3.224022,8.254639,-2.790050,-4.148443,-7.615868,9.238509,3.565607,-5.801290,3.322520,2.742832,7.345298,-9.735433,1.697531,-2.008861,8.596979,-4.706886,6.854382,5.167405,-5.112416,-6.658879,1.359153,-7.618733,-1.005239,-9.228612,7.151022,9.245734,-6.871735,1.483537,-8.689740,-0.209115,0.257749,-0.887094,-9.143081,-5.547153,6.215929,5.171052,-7.774881,-4.231255,9.785717,-0.051760,-6.578802,7.446123,4.632030,-4.318676,-5.959866,5.182627,-0.671136,0.532368,2.588585,6.157597,-0.438177,-3.946049,-7.959802,8.493341,3.195819,-1.610748,3.510964,7.960410,7.758013,-0.448409,-2.355173,6.715580,6.136005,8.369244,-3.450914,-0.093516,2.547440,3.507449,4.917935,5.829225,-9.420860,-6.126950,8.944587,6.340815,-9.874973,7.121063,2.374313,1.173225,3.284693,-1.954902,8.987006,-8.369756,7.547383,-5.488999,-2.914598,3.600218,4.606976,-5.903658,7.714041,6.861591,-2.065926,-0.610396,7.146098,-4.214771,-6.862253,-3.135289,3.580344,9.020500,-7.115558,2.622934,7.552000,-4.161691,0.998206,-2.048680,-8.419601,-1.118759,-2.564932,-3.834223,-3.757320,-1.902804,2.466202,-2.703032,0.692580,6.546651,3.890059,-2.860502,-8.156023,4.415935,4.462704,-1.953476,-9.673582,-3.700771,-0.423730,-9.478955,-9.525053,6.576568,-5.225396,-0.082770,4.423818,9.240811,5.415318,-5.168917,-0.849816,8.470282,5.245356,7.473831,-9.733441,-3.329816,1.670616,4.109746,2.896160,2.059696,-0.986559,5.543910,-9.110807,-0.206098,-0.522413,4.433333,-7.438359,-8.953790,-9.853361,6.383388,-3.994843,7.602466,9.133521,9.715699,-9.831439,-6.906182,-1.884529,-9.170900,-2.171597,-3.443133,1.256061,-5.624144,-8.127618,7.133237,-6.017589,6.556113,-3.333592,-5.847194,3.235151,-2.398506,2.098985,-0.015040,-9.867632,-3.122420,2.970087,1.303676,-0.988482,6.479976,1.877789,0.133359,7.018872,-2.471911,-6.239845,6.777741,-0.419062,7.868684,-3.240085,1.884866,-1.833389,-2.357167,4.904045,3.048295,9.051365,-8.666781,3.033307,-8.682968,9.233417,4.890258,-8.863827,8.524477,-2.908627,-4.797217,3.258188,-6.167090,4.603660,0.732606,-7.395197,-9.457094,0.658334,-6.996239,-6.051432,-5.984976,7.782717,1.274682,-8.705836,-2.435907,5.657460,-7.678712,8.805875,1.168861,9.428511,5.133757,0.005221,2.558792,-9.878013,7.393970,-2.352513,-2.406919,7.170640,3.005742,7.555154,2.582429,-4.629927,3.816801,-0.771352,-2.391956,6.494583,6.697140,4.584152,-3.898096,6.268453,7.096932,7.409902,5.949184,1.816234,-8.940152,3.139205,-3.544273,6.509064,0.894941,-3.714104,7.619714,2.902932,-3.093348,0.822047,-9.784875,-1.017802,0.567804,-9.503881,9.917010,6.927060,-6.324264,7.820774,7.048338,-9.790568,-6.581747,-3.177903,-7.288918,-8.931427,5.962827,6.472519,-1.766071,2.955737,0.050868,5.351045,9.991423,6.855723,0.405969,-1.014116,5.602110,0.982931,4.008517,-2.151435,8.916116,-4.163948,-8.467771,-8.864797,-8.412652,-2.439377,4.271459,-6.919806,2.641022,-6.128157,-0.395293,8.329283,2.997071,4.545580,-6.112925,6.345142,-6.859146,-0.225635,6.867846,-9.522816,-9.186981,-9.844338,-7.869087,9.312721,-7.888129,-3.516599,-6.524596,-2.153526,-9.148224,0.686027,8.135002,-8.626467,-4.799762,9.462882,4.732893,5.263840,-3.921651,-1.478767,-5.957128,-2.753590,1.975858,5.569113,-6.980209,-7.470274,3.932003,-5.791914,-2.294486,6.454548,9.951772,-3.031129,-7.884527,2.869196,6.023132,7.362241,0.730988,-1.752268,-4.109119,-0.561465,-0.733816,5.169469,-0.937892,-9.339756,-8.394543,-6.422214,-9.291514,-5.520122,-1.895518,-9.162130,8.032560,-6.758216,0.298790,-1.273693,-6.878211,9.096461,7.935002,7.000295,-6.987635,-6.965182,4.536144,-3.293836,3.958809,-3.789756,-5.570808,-3.377648,-8.984723,-9.796428,7.897047,7.195226,-2.318701,-9.838053,2.746350,6.356667,-6.876436,-7.882997,-5.150017,3.489923,6.994385,-0.925503,-4.439814,-3.294930,7.961314,3.529221,1.288043,-1.287541,6.068696,3.981745,-7.875015,-3.377554,-3.723262,-0.375633,6.535492,-0.132208,6.662567,0.953594,1.990809,-1.187216,-9.459279,-7.632139,-6.332989,1.074925,0.904601,-1.064389,-7.455913,-0.602449,9.164777,2.054469,5.448164,-9.468189,-3.076105,-8.103971,0.126006,-7.747341,-9.885355,2.138453,-6.196910,-4.820296,4.288786,8.483161,1.924832,-4.605982,0.730775,-0.831391,0.466474,4.825819,-3.820591,-6.514169,5.417383,8.928367,8.548944,-5.150847,-8.011216,0.553679,-1.846341,3.762603,5.986572,-8.243340,9.407499,9.207896,7.078737,2.169442,-7.802671,3.033878,-8.996431,-0.239492,9.708317,8.442783,2.386173,0.728484,-3.131481,-0.963696,-2.375851,-0.131441,0.605689,8.105264,-5.895471,-8.728880,-4.064977,-1.083714,-2.940357,-1.944366,-8.331272,6.482642,-2.992459,0.228385,6.000550,-1.716804,-9.194282,-9.711051,-0.473851,2.970269,-1.844958,-9.973483,1.050297,2.070190,7.665436,-1.567563,-2.156854,8.526356,-6.542251,2.991332,-3.314966,-8.926911,-0.219379,-6.644611,-8.431702,9.744487,2.287708,6.987033,0.852091,3.000734,-4.298904,-4.155016,8.909457,2.485928,-9.842412,-0.581107,9.752229,1.700646,8.111087,-2.598866,4.465123,-1.318589,7.816446,-5.986046,-5.428636,0.330357,3.551545,8.663212,-4.947568,-7.657680,9.461160,7.580199,7.939757,-7.577959,1.248439,-6.801644,1.290594,2.627421,-2.638572,0.838325,8.580007,4.876030,-5.648951,-0.025688,-9.421306,0.397964,6.569362,-9.412806,3.700796,5.627158,9.824326,-2.486147,-6.468828,-0.204544,3.407634,2.020766,-7.408534,6.361084,-5.720733,5.740294,-9.031992,-3.895376,-8.630718,0.398589,-0.274739,-9.225272,-0.607384,-6.086208,-7.143980,-1.145405,-1.765431,9.445972,-6.071570,4.016237,-6.712646,7.521407,1.785103,-8.458470,-6.038211,5.357660,-5.070621,4.012402,-4.712236,2.430465,-1.998969,-7.409506,4.805023,7.001385,-1.216389,-5.904727,-7.249006,-7.937631,-8.390270,1.819516,-9.974000,7.693431,-0.616947,9.664318,-4.467621,1.921770,-0.690219,1.096024,3.431506,-6.125041,2.201281,-8.562692,-7.660188,8.346245,5.535727,-9.752013,5.106351,-3.252370,-5.982599,1.778363,-8.068734,4.922283,-2.813532,0.883413,2.918031,-6.369822,-7.585988,-5.646149,9.808246,4.216105,-0.536414,-0.320095,3.809443,7.581775,-7.846889,-9.165591,-1.949856,-6.617045,-5.142409,-5.953354,4.595815,-9.114015,-7.067542,-3.557611,-3.771292,-0.986334,9.316825,7.983026,-6.430185,-7.427360,3.348134,6.676360,-2.680731,-1.745926,2.804288,9.962461,3.713290,9.528086,-5.043163,4.457339,0.736226,-9.834647,-2.661584,-4.893914,-6.518721,-8.762240,8.169934,3.094005,1.730459,9.391927,2.937211,4.605358,-8.217162,-5.855260,-8.278695,-9.173784,7.925646,2.108765,-8.051649,-7.250788,-8.342333,-4.196157,0.912699,-0.811794,1.581101,2.856940,-5.951323,-9.838503,6.706581,6.164564,-0.619641,-6.307692,-8.924948,-7.056514,3.544303,-0.702153,9.635155,3.659893,-6.591043,0.110260,4.359244,-6.983462,9.933977,2.008429,1.216500,-6.184331,-4.757087,-2.911147,-3.968405,5.516854,8.160565,-6.496450,-6.017083,3.962520,9.717200,-2.305192,-8.609822,-7.542884,7.481970,-8.675679,-9.985842,5.948278,2.613769,-1.853995,-5.032402,3.029977,8.401588,-1.534847,-3.151892,-5.349378,-9.239098,-4.430484,-3.398416,-9.742435,-0.314216,-2.999306,0.410034,5.638360,0.352291,2.665800,2.207849,-1.080101,-5.931402,-8.136575,-8.375985,-0.699815,-9.594031,5.242870,1.321711,-4.835472,3.358350,-4.907124,-0.297952,1.623274,8.051806,2.020516,-9.688506,9.889251,-8.686065,9.510401,5.031700,0.206289,-8.379613,-4.287166,-6.948558,-9.105060,9.695599,4.292250,-0.143238,-1.039350,1.414943,6.386713,2.710574,-6.844688,-7.297846,-1.546639,9.117092,3.701324,8.099864,9.958884,1.777499,6.702542,-4.604916,-2.898189,4.829439,1.847250,8.049380,-4.566212,3.468327,-9.749611,-5.878133,3.171365,6.590577,-8.218684,-4.450322,-0.507037,9.683107,0.825790,-9.259898,-6.029686,-4.134762,-4.427946,-6.460779,-3.143026,2.056250,-5.823238,6.258182,2.307640,-7.257809,1.138822,1.056233,-5.463396,6.555837,9.301718,-7.624570], dtype = "float64")#candidate|5891|(1680,)|const|float64
call_5890 = relay.TupleGetItem(func_4688_call(relay.reshape(const_5891.astype('float64'), [15, 16, 7])), 0)
call_5892 = relay.TupleGetItem(func_4691_call(relay.reshape(const_5891.astype('float64'), [15, 16, 7])), 0)
var_5907 = relay.var("var_5907", dtype = "float64", shape = (4, 10, 7))#candidate|5907|(4, 10, 7)|var|float64
bop_5908 = relay.maximum(uop_5817.astype('uint64'), relay.reshape(var_5907.astype('uint64'), relay.shape_of(uop_5817))) # shape=(4, 10, 7)
func_5439_call = mod.get_global_var('func_5439')
func_5441_call = mutated_mod.get_global_var('func_5441')
call_5919 = relay.TupleGetItem(func_5439_call(), 0)
call_5920 = relay.TupleGetItem(func_5441_call(), 0)
output = relay.Tuple([call_5842,bop_5846,const_5852,bop_5875,call_5883,call_5890,const_5891,bop_5908,call_5919,])
output2 = relay.Tuple([call_5843,bop_5846,const_5852,bop_5878,call_5884,call_5892,const_5891,bop_5908,call_5920,])
func_5924 = relay.Function([var_5816,var_5874,var_5907,], output)
mod['func_5924'] = func_5924
mod = relay.transform.InferType()(mod)
var_5925 = relay.var("var_5925", dtype = "float64", shape = (4, 10, 7))#candidate|5925|(4, 10, 7)|var|float64
var_5926 = relay.var("var_5926", dtype = "uint64", shape = (3, 13, 5))#candidate|5926|(3, 13, 5)|var|uint64
var_5927 = relay.var("var_5927", dtype = "float64", shape = (4, 10, 7))#candidate|5927|(4, 10, 7)|var|float64
output = func_5924(var_5925,var_5926,var_5927,)
func_5928 = relay.Function([var_5925,var_5926,var_5927,], output)
mutated_mod['func_5928'] = func_5928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_283_call = mod.get_global_var('func_283')
func_284_call = mutated_mod.get_global_var('func_284')
call_5937 = relay.TupleGetItem(func_283_call(), 2)
call_5938 = relay.TupleGetItem(func_284_call(), 2)
output = call_5937
output2 = call_5938
func_5942 = relay.Function([], output)
mod['func_5942'] = func_5942
mod = relay.transform.InferType()(mod)
output = func_5942()
func_5943 = relay.Function([], output)
mutated_mod['func_5943'] = func_5943
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5354_call = mod.get_global_var('func_5354')
func_5356_call = mutated_mod.get_global_var('func_5356')
call_5947 = relay.TupleGetItem(func_5354_call(), 0)
call_5948 = relay.TupleGetItem(func_5356_call(), 0)
output = relay.Tuple([call_5947,])
output2 = relay.Tuple([call_5948,])
func_5954 = relay.Function([], output)
mod['func_5954'] = func_5954
mod = relay.transform.InferType()(mod)
output = func_5954()
func_5955 = relay.Function([], output)
mutated_mod['func_5955'] = func_5955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1852_call = mod.get_global_var('func_1852')
func_1853_call = mutated_mod.get_global_var('func_1853')
call_6004 = relay.TupleGetItem(func_1852_call(), 2)
call_6005 = relay.TupleGetItem(func_1853_call(), 2)
var_6008 = relay.var("var_6008", dtype = "int64", shape = (195,))#candidate|6008|(195,)|var|int64
bop_6009 = relay.floor_divide(call_6004.astype('float32'), relay.reshape(var_6008.astype('float32'), relay.shape_of(call_6004))) # shape=(195,)
bop_6012 = relay.floor_divide(call_6005.astype('float32'), relay.reshape(var_6008.astype('float32'), relay.shape_of(call_6005))) # shape=(195,)
uop_6017 = relay.sigmoid(var_6008.astype('float32')) # shape=(195,)
output = relay.Tuple([bop_6009,uop_6017,])
output2 = relay.Tuple([bop_6012,uop_6017,])
func_6033 = relay.Function([var_6008,], output)
mod['func_6033'] = func_6033
mod = relay.transform.InferType()(mod)
mutated_mod['func_6033'] = func_6033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6034 = relay.var("var_6034", dtype = "int64", shape = (195,))#candidate|6034|(195,)|var|int64
func_6033_call = mutated_mod.get_global_var('func_6033')
call_6035 = func_6033_call(var_6034)
output = call_6035
func_6036 = relay.Function([var_6034], output)
mutated_mod['func_6036'] = func_6036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2105_call = mod.get_global_var('func_2105')
func_2107_call = mutated_mod.get_global_var('func_2107')
call_6053 = relay.TupleGetItem(func_2105_call(), 0)
call_6054 = relay.TupleGetItem(func_2107_call(), 0)
output = relay.Tuple([call_6053,])
output2 = relay.Tuple([call_6054,])
func_6063 = relay.Function([], output)
mod['func_6063'] = func_6063
mod = relay.transform.InferType()(mod)
mutated_mod['func_6063'] = func_6063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6063_call = mutated_mod.get_global_var('func_6063')
call_6064 = func_6063_call()
output = call_6064
func_6065 = relay.Function([], output)
mutated_mod['func_6065'] = func_6065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6137 = relay.var("var_6137", dtype = "float32", shape = (4, 3, 8))#candidate|6137|(4, 3, 8)|var|float32
uop_6138 = relay.cosh(var_6137.astype('float32')) # shape=(4, 3, 8)
uop_6147 = relay.atanh(uop_6138.astype('float32')) # shape=(4, 3, 8)
var_6150 = relay.var("var_6150", dtype = "float32", shape = (4, 3, 8))#candidate|6150|(4, 3, 8)|var|float32
bop_6151 = relay.minimum(uop_6147.astype('uint8'), relay.reshape(var_6150.astype('uint8'), relay.shape_of(uop_6147))) # shape=(4, 3, 8)
const_6156 = relay.const([[[-3,-6,-9,-2,-3,2,-5,-4],[-5,-9,3,-5,2,-1,10,-10],[3,1,-4,5,-3,3,9,8]],[[-8,6,-2,-2,-5,-7,-9,10],[-4,5,2,-5,-6,3,-6,1],[8,7,10,-8,-2,-4,1,-4]],[[2,3,9,1,6,3,4,8],[-1,4,6,-8,7,9,5,5],[5,3,7,1,7,7,-6,-5]],[[-2,8,-3,6,10,9,1,3],[1,-9,-10,-2,-2,8,6,7],[-4,-7,3,6,1,9,9,-9]]], dtype = "uint8")#candidate|6156|(4, 3, 8)|const|uint8
bop_6157 = relay.divide(bop_6151.astype('float64'), relay.reshape(const_6156.astype('float64'), relay.shape_of(bop_6151))) # shape=(4, 3, 8)
output = bop_6157
output2 = bop_6157
func_6172 = relay.Function([var_6137,var_6150,], output)
mod['func_6172'] = func_6172
mod = relay.transform.InferType()(mod)
mutated_mod['func_6172'] = func_6172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6172_call = mutated_mod.get_global_var('func_6172')
var_6174 = relay.var("var_6174", dtype = "float32", shape = (4, 3, 8))#candidate|6174|(4, 3, 8)|var|float32
var_6175 = relay.var("var_6175", dtype = "float32", shape = (4, 3, 8))#candidate|6175|(4, 3, 8)|var|float32
call_6173 = func_6172_call(var_6174,var_6175,)
output = call_6173
func_6176 = relay.Function([var_6174,var_6175,], output)
mutated_mod['func_6176'] = func_6176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6278 = relay.var("var_6278", dtype = "bool", shape = ())#candidate|6278|()|var|bool
var_6279 = relay.var("var_6279", dtype = "bool", shape = (8, 8, 4))#candidate|6279|(8, 8, 4)|var|bool
bop_6280 = relay.logical_or(var_6278.astype('bool'), var_6279.astype('bool')) # shape=(8, 8, 4)
uop_6284 = relay.sqrt(bop_6280.astype('float32')) # shape=(8, 8, 4)
func_4789_call = mod.get_global_var('func_4789')
func_4792_call = mutated_mod.get_global_var('func_4792')
var_6295 = relay.var("var_6295", dtype = "int64", shape = (195,))#candidate|6295|(195,)|var|int64
call_6294 = relay.TupleGetItem(func_4789_call(relay.reshape(var_6295.astype('int64'), [195,])), 1)
call_6296 = relay.TupleGetItem(func_4792_call(relay.reshape(var_6295.astype('int64'), [195,])), 1)
output = relay.Tuple([uop_6284,call_6294,var_6295,])
output2 = relay.Tuple([uop_6284,call_6296,var_6295,])
func_6299 = relay.Function([var_6278,var_6279,var_6295,], output)
mod['func_6299'] = func_6299
mod = relay.transform.InferType()(mod)
mutated_mod['func_6299'] = func_6299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6299_call = mutated_mod.get_global_var('func_6299')
var_6301 = relay.var("var_6301", dtype = "bool", shape = ())#candidate|6301|()|var|bool
var_6302 = relay.var("var_6302", dtype = "bool", shape = (8, 8, 4))#candidate|6302|(8, 8, 4)|var|bool
var_6303 = relay.var("var_6303", dtype = "int64", shape = (195,))#candidate|6303|(195,)|var|int64
call_6300 = func_6299_call(var_6301,var_6302,var_6303,)
output = call_6300
func_6304 = relay.Function([var_6301,var_6302,var_6303,], output)
mutated_mod['func_6304'] = func_6304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4114_call = mod.get_global_var('func_4114')
func_4116_call = mutated_mod.get_global_var('func_4116')
call_6350 = relay.TupleGetItem(func_4114_call(), 0)
call_6351 = relay.TupleGetItem(func_4116_call(), 0)
output = call_6350
output2 = call_6351
func_6377 = relay.Function([], output)
mod['func_6377'] = func_6377
mod = relay.transform.InferType()(mod)
mutated_mod['func_6377'] = func_6377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6377_call = mutated_mod.get_global_var('func_6377')
call_6378 = func_6377_call()
output = call_6378
func_6379 = relay.Function([], output)
mutated_mod['func_6379'] = func_6379
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6380 = relay.var("var_6380", dtype = "float64", shape = (5, 15, 5))#candidate|6380|(5, 15, 5)|var|float64
uop_6381 = relay.acosh(var_6380.astype('float64')) # shape=(5, 15, 5)
output = relay.Tuple([uop_6381,])
output2 = relay.Tuple([uop_6381,])
func_6384 = relay.Function([var_6380,], output)
mod['func_6384'] = func_6384
mod = relay.transform.InferType()(mod)
mutated_mod['func_6384'] = func_6384
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6385 = relay.var("var_6385", dtype = "float64", shape = (5, 15, 5))#candidate|6385|(5, 15, 5)|var|float64
func_6384_call = mutated_mod.get_global_var('func_6384')
call_6386 = func_6384_call(var_6385)
output = call_6386
func_6387 = relay.Function([var_6385], output)
mutated_mod['func_6387'] = func_6387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4073_call = mod.get_global_var('func_4073')
func_4075_call = mutated_mod.get_global_var('func_4075')
call_6439 = relay.TupleGetItem(func_4073_call(), 0)
call_6440 = relay.TupleGetItem(func_4075_call(), 0)
func_6377_call = mod.get_global_var('func_6377')
func_6379_call = mutated_mod.get_global_var('func_6379')
call_6452 = func_6377_call()
call_6453 = func_6377_call()
output = relay.Tuple([call_6439,call_6452,])
output2 = relay.Tuple([call_6440,call_6453,])
func_6469 = relay.Function([], output)
mod['func_6469'] = func_6469
mod = relay.transform.InferType()(mod)
mutated_mod['func_6469'] = func_6469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6469_call = mutated_mod.get_global_var('func_6469')
call_6470 = func_6469_call()
output = call_6470
func_6471 = relay.Function([], output)
mutated_mod['func_6471'] = func_6471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
call_6482 = relay.TupleGetItem(func_525_call(), 0)
call_6483 = relay.TupleGetItem(func_527_call(), 0)
func_3570_call = mod.get_global_var('func_3570')
func_3571_call = mutated_mod.get_global_var('func_3571')
call_6484 = relay.TupleGetItem(func_3570_call(), 0)
call_6485 = relay.TupleGetItem(func_3571_call(), 0)
func_2420_call = mod.get_global_var('func_2420')
func_2422_call = mutated_mod.get_global_var('func_2422')
call_6491 = relay.TupleGetItem(func_2420_call(), 1)
call_6492 = relay.TupleGetItem(func_2422_call(), 1)
func_1047_call = mod.get_global_var('func_1047')
func_1048_call = mutated_mod.get_global_var('func_1048')
call_6518 = func_1047_call()
call_6519 = func_1047_call()
output = relay.Tuple([call_6482,call_6484,call_6491,call_6518,])
output2 = relay.Tuple([call_6483,call_6485,call_6492,call_6519,])
func_6530 = relay.Function([], output)
mod['func_6530'] = func_6530
mod = relay.transform.InferType()(mod)
mutated_mod['func_6530'] = func_6530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6530_call = mutated_mod.get_global_var('func_6530')
call_6531 = func_6530_call()
output = call_6531
func_6532 = relay.Function([], output)
mutated_mod['func_6532'] = func_6532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5555_call = mod.get_global_var('func_5555')
func_5557_call = mutated_mod.get_global_var('func_5557')
call_6558 = func_5555_call()
call_6559 = func_5555_call()
func_4607_call = mod.get_global_var('func_4607')
func_4609_call = mutated_mod.get_global_var('func_4609')
call_6562 = relay.TupleGetItem(func_4607_call(), 0)
call_6563 = relay.TupleGetItem(func_4609_call(), 0)
uop_6564 = relay.asinh(call_6562.astype('float32')) # shape=(16, 14, 16)
uop_6566 = relay.asinh(call_6563.astype('float32')) # shape=(16, 14, 16)
output = relay.Tuple([call_6558,uop_6564,])
output2 = relay.Tuple([call_6559,uop_6566,])
func_6573 = relay.Function([], output)
mod['func_6573'] = func_6573
mod = relay.transform.InferType()(mod)
output = func_6573()
func_6574 = relay.Function([], output)
mutated_mod['func_6574'] = func_6574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2708_call = mod.get_global_var('func_2708')
func_2710_call = mutated_mod.get_global_var('func_2710')
call_6594 = relay.TupleGetItem(func_2708_call(), 0)
call_6595 = relay.TupleGetItem(func_2710_call(), 0)
func_6063_call = mod.get_global_var('func_6063')
func_6065_call = mutated_mod.get_global_var('func_6065')
call_6598 = relay.TupleGetItem(func_6063_call(), 0)
call_6599 = relay.TupleGetItem(func_6065_call(), 0)
func_1183_call = mod.get_global_var('func_1183')
func_1184_call = mutated_mod.get_global_var('func_1184')
call_6624 = relay.TupleGetItem(func_1183_call(), 0)
call_6625 = relay.TupleGetItem(func_1184_call(), 0)
uop_6632 = relay.sigmoid(call_6624.astype('float32')) # shape=(52,)
uop_6634 = relay.sigmoid(call_6625.astype('float32')) # shape=(52,)
func_4011_call = mod.get_global_var('func_4011')
func_4013_call = mutated_mod.get_global_var('func_4013')
const_6642 = relay.const([[2.666516,2.648926,-9.647315,-5.933014,-5.614168,4.564394,3.556472,-5.882691,1.782520,2.467509,-1.359591,-8.835244,1.675998,1.395809,-2.778637,8.338538,5.195316,-9.508067,2.097047,-5.484667,9.643187,-0.300570,-2.608277,6.880156,7.668047,-5.604395,7.806924,8.967787,-2.386217,-8.545535,-5.483167,-3.111620,-9.846514,-5.078055,7.258605,9.973780,-5.947861,9.615528,-2.822954,4.534856,3.308072,-1.054678,-8.859009,1.128443,-4.297173,8.531892,1.345740,-5.328389,-2.102194,-1.187561,6.092709,-8.036972,3.373646,-5.005551,-0.346732,0.952681,7.769355,-0.464587,8.504700,-0.833509,8.966003,0.536572,4.054618,-6.830887,-9.134179,3.470981,-1.087374,9.670873,-1.101326,-8.851155,6.648206,-7.128487,4.243848,-9.136223,2.691659,-8.254918,-8.668830,0.524665,4.348491,-1.672709,-8.441573,4.518384,1.202884,-9.789947,3.176143,8.482892,-5.030396,4.550781,-6.975140,2.094033,7.026740,4.091802,2.680210,1.396557,-2.524573,-9.973075,-5.533563,-4.715443,-2.214027,5.436017,6.003832,1.366232,-4.929420,9.495434,-7.152681,-7.701203,-8.579928,-4.115559,5.619215,-3.618708,5.159915,-2.074233,-3.243964,4.647572,-7.349396,-7.594759,7.364651,2.709360,4.943148,7.957189,0.785973,7.520101,4.141393,2.109505,2.823095,-8.026701,-8.626682,-7.159637,6.308902,-7.624339,-4.412162,9.597024,-7.360573,-2.331400,4.852190,9.775500,1.709759,-3.130058,-9.884766,3.904013]], dtype = "float64")#candidate|6642|(1, 140)|const|float64
call_6641 = relay.TupleGetItem(func_4011_call(relay.reshape(const_6642.astype('float64'), [140,])), 2)
call_6643 = relay.TupleGetItem(func_4013_call(relay.reshape(const_6642.astype('float64'), [140,])), 2)
output = relay.Tuple([call_6594,call_6598,uop_6632,call_6641,const_6642,])
output2 = relay.Tuple([call_6595,call_6599,uop_6634,call_6643,const_6642,])
func_6648 = relay.Function([], output)
mod['func_6648'] = func_6648
mod = relay.transform.InferType()(mod)
output = func_6648()
func_6649 = relay.Function([], output)
mutated_mod['func_6649'] = func_6649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3844_call = mod.get_global_var('func_3844')
func_3845_call = mutated_mod.get_global_var('func_3845')
call_6710 = relay.TupleGetItem(func_3844_call(), 2)
call_6711 = relay.TupleGetItem(func_3845_call(), 2)
func_1935_call = mod.get_global_var('func_1935')
func_1937_call = mutated_mod.get_global_var('func_1937')
call_6712 = relay.TupleGetItem(func_1935_call(), 0)
call_6713 = relay.TupleGetItem(func_1937_call(), 0)
func_4011_call = mod.get_global_var('func_4011')
func_4013_call = mutated_mod.get_global_var('func_4013')
var_6720 = relay.var("var_6720", dtype = "float64", shape = (140,))#candidate|6720|(140,)|var|float64
call_6719 = relay.TupleGetItem(func_4011_call(relay.reshape(var_6720.astype('float64'), [140,])), 2)
call_6721 = relay.TupleGetItem(func_4013_call(relay.reshape(var_6720.astype('float64'), [140,])), 2)
const_6723 = relay.const([[[False,True,False,True,True,True,True,True,False,True,True,True],[False,False,False,False,False,True,False,False,False,False,True,False],[False,True,True,False,True,True,False,False,False,True,True,True],[False,False,True,False,True,False,False,True,True,False,True,True],[False,True,False,False,False,True,False,False,False,True,False,False],[False,False,False,False,True,True,False,True,True,True,False,False],[True,False,True,False,False,True,False,False,False,False,True,False],[True,True,False,True,True,False,True,True,True,True,False,False],[False,False,False,True,True,False,True,False,False,True,True,False],[False,True,True,False,True,False,True,False,True,True,True,False],[False,True,False,True,False,False,True,True,False,True,False,True],[True,False,True,True,True,False,False,True,True,True,True,False],[True,False,False,False,False,False,True,False,True,True,True,True]],[[True,False,False,True,False,True,False,True,True,True,True,False],[False,True,True,True,False,False,False,True,True,False,True,True],[False,False,True,True,True,False,True,False,False,True,True,False],[False,True,False,True,True,True,True,True,False,False,False,False],[True,False,True,False,True,False,True,True,True,False,True,False],[False,False,True,False,True,False,True,False,False,True,True,True],[False,True,False,False,True,False,False,False,True,True,False,False],[True,True,True,False,True,False,True,True,False,False,False,False],[False,True,False,False,False,True,True,False,False,True,False,False],[False,False,False,True,True,True,True,False,False,False,True,False],[True,False,True,True,False,True,True,False,False,True,True,False],[True,False,False,True,False,False,True,False,False,False,True,True],[True,False,False,True,False,True,True,True,True,True,True,True]],[[False,False,True,True,False,False,True,True,True,False,False,True],[False,False,True,True,False,False,False,True,False,False,False,False],[True,False,False,False,True,True,True,True,True,True,False,True],[True,False,False,False,False,True,True,False,True,False,True,True],[False,False,False,False,False,False,True,False,False,True,False,True],[False,False,True,True,True,True,True,False,True,True,True,True],[False,False,False,True,True,True,False,True,True,False,False,False],[True,True,False,True,False,False,True,False,False,False,True,True],[True,False,False,True,False,True,False,False,True,False,False,False],[False,False,False,True,True,False,True,False,True,True,True,True],[False,False,True,False,False,False,False,False,True,False,True,True],[True,True,True,False,False,True,True,False,False,True,True,True],[True,True,True,False,False,False,True,False,True,False,True,True]],[[False,True,True,True,True,False,False,False,False,False,False,False],[True,True,False,True,False,True,False,True,False,True,True,True],[False,False,True,True,False,False,False,True,True,False,False,False],[False,True,False,False,True,True,False,False,False,False,False,True],[False,False,False,False,False,False,True,False,False,True,True,True],[True,True,False,True,True,False,True,False,True,False,False,False],[True,True,True,True,True,True,False,True,True,True,False,True],[True,True,True,True,False,False,False,False,False,False,True,True],[True,False,True,False,False,False,True,True,True,False,True,False],[True,True,False,False,False,False,False,True,True,True,True,False],[False,True,False,False,False,True,True,True,True,True,True,False],[True,False,True,False,False,False,False,True,False,False,False,False],[False,False,False,False,True,True,False,True,False,False,True,False]]], dtype = "bool")#candidate|6723|(4, 13, 12)|const|bool
bop_6724 = relay.add(call_6710.astype('uint16'), relay.reshape(const_6723.astype('uint16'), relay.shape_of(call_6710))) # shape=(4, 13, 12)
bop_6727 = relay.add(call_6711.astype('uint16'), relay.reshape(const_6723.astype('uint16'), relay.shape_of(call_6711))) # shape=(4, 13, 12)
func_3432_call = mod.get_global_var('func_3432')
func_3435_call = mutated_mod.get_global_var('func_3435')
const_6734 = relay.const([3,-3,-6,9,-8,9,2,-6,2,-5,9,-5,-2,8,10,10,-3,10,-3,-7,4,8,4,8,-1,-8,10,-1,-2,-10,2,8,4,-5,4,9,-9,-5,-2,10,-6,4,-2,8,-3,8,10,-1,3,1,-9,9,-9,3,-7,-3,-1,-9,-1,9,-5,1,5,8,-7,7,-3,-8,-9,4,-5,-9,5,1,6,1,-9,5,-4,9,-5,-9,-3,1,-9,-9,3,1,9,3,2,-5,8,-4,-4,-4,-1,9,2,-7,-4,-3,8,2,-6,1,3,-10,5,-1,-6,9,-2,3,-8,-4,1,-9,1,-6,-8,-8,2,-2,-1,7,-10,7,7,-5,-2,-7,-6,2,8,8,-5,-7,-2,6,-1,-3,3,4,-1,5,10,8,8,7,8,-2,-10,1,-9,7,2,-5,-9,-5,10,4,1,7,-2,5,-10,6,-7,1,-4,6,-8,10,-9,-10,4,10,5,-3,4,8,5,1,1,-6,2,-10,4,-2,7,-4,3,6,-3,-5,-9,8,-7,5,-3,-2,4,7,-3,1,-10,-1,-8,3,8,-8,-2,-8,-5,8,6,5,3,-10,-3,-8,-7,-8,-6,8,-10,10,3,5,-2,6,-3,2,4,-2,-4,-10,9,-7,10,8,4,-5,7,4,1,9,-2,-9,2,3,-10,-8,10,6,3,-1,-4,-1,-4,-8,5,-10,8,-3,-1,-6,-7,1,-10,-9,-1,-7,9,-5,4,-10,3,-6,-1,1,3,-4,10,10,-2,-2,-3,7,-10,5,-6,-3,-4,9,-7,-7,6,3,-7,-7,-5,-2,-1,-8,-3,-4,-7,7,-5,-9,7,-5,9,10,-4,-5,-7,7,7,-8,10,9,-9,3,5,10,-9,-6,4,4,-4,-9,7,-10,3,5,1,3,2,-6,7,8,1,-4,-9,-5,9,-5,-9,-3,4,6,-3,7,-6,-2,-9,10,-6,8,-5,8,4,2,-8,-6,2,6,-4,1,-6,-4,5,8,8,-7,-7,-9,-6,-6,6,7,-5,-3,7,-10,9,1,-6,5,3,9,5,-4,-10,7,4,4,-8,10,-3,10,2,7,-10,-6,-2,-4,-4,2,-1,-10,5,-4,-2,-2,-5,-8,4,7,-8,9,-7,-9,-3,6,1,7,-1,1,-7,10,-5,-1,4,5,10,-1,6,1,-10,3,3,9,5,9,3,6,-10,1,4,7,1,-4,-10,8,1,3,-3,10,-2,-10,10,5,2,5,5,1,-10,2,-9,9,-4,-6,3,-7,-6,-2,-4,6,4,-3,3,-4,10,-10,8,10,2,-1,1,1,-4,4,9,-5,3,-1,-3,-7,3,-1,-9,-3,7,5,9,-5,-9,2,-1,3,4,-10,1,9,7,2,-10,-4,-6,-3,8,-9,-9,5,9,-5,3,1,3,5,9,5,-2,-6,-9,-5,-9,4,-7,-1,8,-3,-1,5,4,5,9,3,-8,-2,-10,-6,3,-8,-8,9,4,8,-6,-3,-3,6,-8,-3,-7,-5,-2,-5,-10,7,3,5,8,5,4,-6,6,-9,10,1,5,-6,7,-1,-6,7,4,9,5,8,1,6,-6,2,-5,3,2,-8,-3,-6,-9,8,-4,9,-10,9,-1,-9,-10,-2,7,-6,5,8,4,6,-6,9,3,9,5,5,3,-4,6,-9,-3,9,-2,5,10,1,10,-8,-8,-6,-5,10,4,2,-1,-4,7,-2,10,-4,3,-10,5,-3,5,7,-10,-7,-2,6,-9,10,4,4,3,8,-3,-6,4,-3,-1,-8,-9,7,3,7,-2,7,-10,1,9,9,8,2,7,3,-8,-10,8,-10,-9,-3,5,10,-3,9,2,5,3,4,-5,-9,9,-9,7,8,-6,8,2,-7,10,-6,3,-10,9,6,10,4,-7,6,2,-9,-4,-8,-6,9,10,-8,-7,9,4,-7,-3,4,5,3,4,4,2,4,10,5,1,2,4,3,7,4,2,-1,10,4,9,-3,1,-10,-3,10,-10,1,4,-4,3,-4,-8,1,10,-3,5,-1,-3,7,9,9,2,5,-5,10,9,-2,8,6,-1,10,-4,2,3,5,-1,-1,-6,10,7,9,3,-4,7,10,2,-5,10,-6,-9,4,5,2,2,-3,1,5,-3,6,1,-9,-7,-9,-2,-9,-6,-10,8,4,-3,7,7,9,-2,-4,-2,-6,-9,-5,4,1,-8,-2,-2,-6,-1,10,-6,-2,5,-1,-8,5,6,8,5,9,-2,-2,7,-1,1,-8,2,5,-5,6,5,-1,-3,-10,-10,-6,2,-7,3,7,1,3,5,-5,-4,4,-2,2,-3,8,5,-6,-9,4,-2,8,-6,1,8,-2,4,-4,10,-6,2,6,7,4,6,-1,-1,-4,-9,10,8,2,7,-2,5,2,1,7,-2,7,-1,6,9,-8,-2,8,10,6,7,8,6,-1,10,7,9,9,4,3,-5,4,9,1,-3,9,-3,-3,-7,-5,2,-10,-10,10,-8,9,-4,-3,4,-4,-1,6,10,-2,-2,7,-3,-5,-7,6,10,9,8,-8,-5,9,7,-9,-5,-5,10,-10,-8,5,-2,3,10,-7,-3,3,7,-6,-7,1,-10,10,-8,-4,-5,-2,-3,10,-6,-2,-2,-10,6,5,-5,-9,3,-6,8,-7,-10,-2,5,-6,9,-1,2,-1,-9,6,-3,8,4,8,5,-7,-6,8,2,-4,4,3,-9,8,3,4,1,-1,-8,-7,4,-8,4,4,1,-9,5,3,-10,-4,7,8,-1,-10,-10,2,10,6,5,10,-10,-3,2,-1,-8,-5,4,-2,-2,4,1,6,3,5,-4,7,5,8,-7,10,-3,-4,-8,-2,1,4,1,3,-2,3,5,-9,-2,-6,6,-8,-2,-8,9,3,-5,3,-7,-1,5,6,-5,-10,1,-6,3,8,6,-8,-5,6,7,7,6,-4,1,2,-6,3,-8,4,4,-9,-7,9,9,3,7,-2,7,5,-10,6,-1,1,9,-5,9,-5,-2,-10,10,-6,3,-9,8,2,4,1,-6,-7,10,-10,-7,-7,9,-7,-1,5,3,-8,-9,6,-8,-1,9,-3,-1,2,-6,-4,-6,-6,-3,5,-7,6,3,9,1,10,-9,1,-4,5,-3,8,1,-8,-5,2,-6,-7,-2,-2,8,5,5,-7,-10,-2,5,-2,-4,-1,-5,-10,-3,2,5,10,-8,-3,10,3,-6,3,-4,6,-9,-6,1,-7,-5,2,5,-7,7,-5,2,7,2,9,-6,6,3,-2,-10,-1,-8,-4,4,-5,3,-10,-7,-3,8,6,9,9,-4,6,-10,8,1,2,-5,-8,4,-1,4,1,-8,-8,-7,-8,-10,4,5,-9,-3,-2,5,-7,8,1,4,6,8,-10,2,7,-6,1,2,6,8,-6,-7,-3,2,9,-7,1,-8,2,1,-10,-10,-6,1,-2,1,-2,-2,3,1,2,-6,5,4,-4,7,-9,4,-1,-1,-2,10,1,10,-6,8,3,10,10,7,6,7,-1,5,6,5,-8,-3,-9,-5,-8,-4,8,8,8,1,9,1,9,-4,-2,2,-5,9,9,-10,8,7,10,8,-1,3,-7,10,2,10,4,-4,-6,-5,-8,2,-1,-5,-2,-10,-2,-5,-7,4,8,3,-5,-2,-9,-5,-4,-6,6,7,-4,3,9,-4,2,4,-3,3,-4,-10,10,4,2,10,-9,6,-3,9,6,8,3,-9,1,-4,-4,1,-10,9,-3,10,5,7,-6,2,10,-1,2,-9,1,-7,10,1,3,3,-1,9,-10,8,3,-1,7,-7,-1,1,2,7,8,-3,9,8,-9,-8,3,9,5,8,10,-1,4,3,4,9,9,4,5,10,6,5,5,5,3,-9,1,-6,-6,2,-10,-1,-10,-10,6,1,9,3,-1,3,-4,-7,-4,1,-3,-9,3,-3,-8,1,3,8,-9,6,-1,-6,-1,3,5,7,-8,-2,-8,-7,-7,10,10,10,1,3,-4,9,1,1,8,5,-4,-1,1,-1,-6,-8,1,10,-5,3,2,-5,8,1,5,3,3,6,-2,2,-7,4,8,9,-7,-3,6,1,7,1,-8,-3,-8,6,-3,-10,1,-8,8,-4,-10,5,6,-2,-6,5,7,4,7,7,-10,-2,-1,-10,6,5,1,-1,-5,-2,-4,-4,6,-8,10,5,-2,-9,-5,-3,10,-6,9,-10,10,3,8,7,-7,-9,2,-7,8,9,-4,4,-4,5,-10,6,-6,6,-8,9,9,4,-1,8,-6,5,-3,2,-1,-9,-3,-1,-5,4,-1,1,-3,1,-6,3,10,-10,7,8,-2,-9,3,-5,-8,-4,-5,8,9,-10,-10,5,-1,1,-10,5,8,-6,-5,-1,-1,1,7,-4,9,-1,8,-9,4,8,10,3,-9,-1,1,7,-7,10,8,-2,9,-5,3,8,3,9,-1,-5,3,-5,10,-10,10,10,-5,4,8,-3,-3,-8,8,4,-2,-8,-5,-3,6,-1,-3,-6,-3,-2,-10,-2,7,1,-7,-3,-4,-6,-5,-3,2,9,4,4,6,10,1,10,4,-3,8,2,8,-10,-8,-4,-6,-6,8,10,5,1,4,4,-5,-8,3,-7,-1,4,2,2,10,-10,5,2,8,6,7,9,-8,-6,-1,2,10,3,-3,-9,10,-3,7,-7,-1,8,-6,9,-6,-5,-6,8,2,-7,4,-9,-5,-3,8,-1,4,8,-8,4,-1,-10,-7,-4,-8,5,7,8,6,6,1,4,7,-7,-8,9,-1,8,-5,-6,-5,5,-7,-4,4,1,-9,5,9,-1,5,8,-6,4,9,4,-5,6,6,6,-3,-7,2,-6,-4,-7,6,-4,2,-4,2,-4,1,-8,3,-6,1,-7,-5,-3,2,7,3,-2,3,-7,8,-1,-3,-5,-3,3,4,6,-4,8,8,6,9,8,4,9,7,10,-9,6,-5,7,-10,-9,-1,-10,4,-10,-4,7,4,-9,-5,10,-3,7,7,7,4,-2,5,-4,8,2,-2,1,6,-6,-10,-5,3,10,6,9,-5,7,-3,-7,-4,-2,-1,-4,-2,7,7,4,6,1,-3,-1,1,6,-8,-4,5,1,-10,2,5,3,-3,-3,-1,8,7,2,-7,2,5,-6,-4,4,-3,-4,-6,-2,6,-6,2,-2,-3,-6,5,4,6,10,-10,-1,-1,-3,4,5,-3,-8,5,3,-4,-10,9,-1,-7,-4,-5,2,-10,2,2,-5,-8,-1,2,-5,-7,9,1,10,3,7,-8,4,5,3,3,4,2,-6,-3,3,6,-7,-2,-4,-10,-2,9,-8,4,-2,3,2,-5,-10,-9,-8,2,1,2,-8,-6,3,-8,2,4,3,-1,-3,-3,-5,-3,-7,-6,-9,-2,3,9,7,-6,-1,2,8,-9,10,-3,4,7,8,-8,2,-4,-1,-10,10,5,8,7,3,-8,-8,7,4,-5,-7,-1,-4,5,-10,4,-3,-1,-8,-9,-4,3,10,8,-4,-8,6,2,-4,7,-2,-4,-2,7,5,3,7,-5,-8,10,-6,4,8,3,-3,-8,3,-1,8,9,8,-5,9,-1,-1,-8,-9,-10,-8,-1,-3,-7,10,5,8,1,5,-10,-4,-9,1,-3,-2,7,3,-1,6,7,8,4,-4,-3,-1,-3,-5,1,2,6,4,-3,3,7,4,7,-4,9,8,-6,6,-3,2,6,-5,-9,6,-9,-10,10,10,7,10,1,9,-4,-9,-3,-10,-6,-1,-7,-8,8,3,-3,7,7,5,3,7,8,-6,-8,10,-5,-10,-10,1,8,7,-6,-1,-2,-5,10,-4,-8,9,-1,10,4,10,-10,-3,2,-10,-6,5,9,5,-2,10,-3,7,-2,2,9,-9,1,-7,-3,3,-10,-1,10,10,7,5,-1,-6,1,8,-7,9,8,-1,7,-4,6,-7,1,10,7,8,8,-10,1,9,4,6,-5,5,-2,-8,2,5,-1,1,-10,8,4,-7,8,3,-1,4,-7,-8,7,9,9,5,1,-2,9,-9,9,-10,-1,9,-3,9,-3,10,1,1,3,2,4,-7,3,5,-3,9,7,5,10,-1,9,2,1,3,-1,-10,-10,-7,-4,-5,9,-2,-3,-8,10,-7,-1,2,4,5,-10,-10,3,-3,2,-5,-5,7,3,2,-7,4,-10,7,10,1,7,2,1,-7,5,-5,-1,8,-10,-9,9,-2,-8,7,2,-1,1,9,7,6,1,2,-4,6,-9,10,8,1,2,5,-7,-3,8,-2,-9,8,-10,2,9,9,-4,-9,10,8,7,-7,2,5,-1,8,7,-4,6,-2,-5,-4,9,-3,3,-2,9,-7,9,-2,10,4,5,4,-3,6,-7,-9,4,-7,3,1,1,2,1,2,-3,-7,-4,8,7,-5,6,3,6,-9,1,3,-8,-4,1,10,-2,-10,8,-4,-6,1,5,-2,-4,-3,10,9,-3,7,-10,-5,6,1,-7,-10,5,5,-5,-2,9,-6,-1,7,9,-7,-2,3,10,-1,10,2,-5,5,7,9,-3,6,-1,10,-8,-10,1,-10,7,10,5,3,2,-9,7,6,2,-8,5,-4,-4,5,8,-8,9,4,-3,-3,7,3,-10,6,9,7,-9,-6,5,-10,-7,2,8,9,3,4,3,-3,-8,-5,10,-2,-2,6,10,-2,4,-4,-8,-2,4,-10,-7,10,-2,2,-6,3,-3,-5,4,-1,-9,-3,-7,-1,-4,7,-6,7,-1,-1,3,5,2,-10,-7,-7,7,7,-6,4,9,-1,10,2,7,10,-7,8,7,6,-3,2,4,4,6,-9,-3,2,8,-7,-7,-7,-4,-6,6,-4,-6,7,-6,1,10,8,2,-7,4,-7,2,7,-2,-10,-6,7,1,-5,6,-10,8,8,-6,2,10,2,7,2,4,-8,-6,-4,9,-5,-5,-1,-1,-5,-5,-8,8,1,-9,5,-4,-6,9,9,-1,-3,9,9,3,8,1,-5,8,-6,-8,2,7,-2,10,-2,-8,-7,-7,9,-2,-7,5,-4,7,-9,3,7,-9,-6,-2,10,-3,7,5,1,-4,-10,2,1,-6,-4,-4,-10,-10,4,5,2,-10,10,-6,3,-1,1,7,-5,-6,3,-10,5,-9,3,-2,2,7,-9,2,5,3,7,9,4,-10,5,9,-1,-8,2,1,-4,-7,1,3,3,3,-7,-3], dtype = "uint8")#candidate|6734|(2730,)|const|uint8
var_6735 = relay.var("var_6735", dtype = "int64", shape = (39, 5))#candidate|6735|(39, 5)|var|int64
call_6733 = relay.TupleGetItem(func_3432_call(relay.reshape(const_6734.astype('uint8'), [14, 15, 13]), relay.reshape(var_6735.astype('int64'), [195,]), ), 4)
call_6736 = relay.TupleGetItem(func_3435_call(relay.reshape(const_6734.astype('uint8'), [14, 15, 13]), relay.reshape(var_6735.astype('int64'), [195,]), ), 4)
uop_6744 = relay.asinh(const_6723.astype('float32')) # shape=(4, 13, 12)
func_1097_call = mod.get_global_var('func_1097')
func_1101_call = mutated_mod.get_global_var('func_1101')
call_6750 = relay.TupleGetItem(func_1097_call(relay.reshape(var_6735.astype('int64'), [3, 13, 5]), relay.reshape(call_6733.astype('int64'), [3, 13, 5]), ), 0)
call_6751 = relay.TupleGetItem(func_1101_call(relay.reshape(var_6735.astype('int64'), [3, 13, 5]), relay.reshape(call_6733.astype('int64'), [3, 13, 5]), ), 0)
func_1380_call = mod.get_global_var('func_1380')
func_1381_call = mutated_mod.get_global_var('func_1381')
call_6753 = func_1380_call()
call_6754 = func_1380_call()
func_1047_call = mod.get_global_var('func_1047')
func_1048_call = mutated_mod.get_global_var('func_1048')
call_6755 = func_1047_call()
call_6756 = func_1047_call()
func_6530_call = mod.get_global_var('func_6530')
func_6532_call = mutated_mod.get_global_var('func_6532')
call_6761 = relay.TupleGetItem(func_6530_call(), 3)
call_6762 = relay.TupleGetItem(func_6532_call(), 3)
func_1778_call = mod.get_global_var('func_1778')
func_1781_call = mutated_mod.get_global_var('func_1781')
call_6766 = relay.TupleGetItem(func_1778_call(relay.reshape(call_6753.astype('float32'), [16, 14, 16])), 0)
call_6767 = relay.TupleGetItem(func_1781_call(relay.reshape(call_6753.astype('float32'), [16, 14, 16])), 0)
var_6771 = relay.var("var_6771", dtype = "bool", shape = (4, 13, 12))#candidate|6771|(4, 13, 12)|var|bool
bop_6772 = relay.power(const_6723.astype('float64'), relay.reshape(var_6771.astype('float64'), relay.shape_of(const_6723))) # shape=(4, 13, 12)
func_4011_call = mod.get_global_var('func_4011')
func_4013_call = mutated_mod.get_global_var('func_4013')
call_6782 = relay.TupleGetItem(func_4011_call(relay.reshape(var_6720.astype('float64'), [140,])), 0)
call_6783 = relay.TupleGetItem(func_4013_call(relay.reshape(var_6720.astype('float64'), [140,])), 0)
const_6784 = relay.const([[[8.627210,0.683216,8.786773,-5.544093,1.597130,4.706956,-3.991798,5.661189,-9.241913,-8.697297,5.493899,-3.755152],[0.995033,6.996133,8.526210,9.957521,4.278834,2.924573,0.956101,-0.095735,1.775073,-9.633117,3.028753,-3.902226],[6.455998,-5.003838,-3.467103,0.685791,7.178522,8.592546,2.218149,-4.797485,-6.876237,-1.271882,8.465058,-6.476794],[-5.254587,-7.197021,8.091672,9.227248,4.153944,5.115955,4.465845,4.235935,9.624771,6.722458,6.114618,6.097913],[4.967645,2.225083,-4.191438,-0.147231,-0.676871,0.136382,8.896915,8.032877,-5.642296,-1.760593,3.019640,7.064026],[-5.473144,-4.419017,-4.066954,6.839653,1.016006,-4.094663,2.708558,-3.505575,5.652453,8.333226,2.625429,7.172299],[4.595083,5.724760,-1.993864,0.903467,2.353121,-3.957334,3.428786,-5.801397,3.708614,0.138103,2.457467,-9.373539],[1.249747,7.656898,-2.999234,-9.673207,-1.417028,8.360640,-8.616315,8.469778,-7.034172,6.037064,-7.946723,-5.590347],[-8.713651,-0.431667,6.054551,-5.179530,-3.679095,7.296930,7.436220,-9.078948,3.759315,-6.149433,-4.112897,-1.382969],[3.453174,-0.224349,0.656617,4.266480,-3.307315,0.800880,7.636174,-4.596579,8.642652,-3.474044,-5.697861,-8.004167],[-9.844716,8.318907,-8.249810,0.194420,-5.127325,2.698175,-1.628334,1.951256,-4.597173,5.367980,5.405321,8.449208],[1.093106,4.413033,-1.260391,-3.087632,-3.605922,3.104785,0.600677,-5.250425,8.864788,0.814684,5.765083,-1.523288],[0.158027,3.854500,-8.099764,6.631659,-2.353381,8.337429,-3.600563,-0.463708,1.550835,8.974517,-8.184362,-4.877396]],[[-8.697546,-6.384345,3.828543,4.237361,-3.201044,4.413193,-7.960260,-8.848375,5.343768,8.352894,9.402492,-4.038407],[-5.291347,9.916644,5.263324,-8.470700,4.320607,4.524611,8.273307,0.501700,4.623075,-2.320846,6.679250,9.504321],[-6.620965,-2.749394,-3.671919,9.910833,3.883660,9.626618,-1.576279,-1.600936,-7.166095,-8.018610,-3.110370,4.193183],[-6.554048,7.789748,3.529323,-4.087704,-1.659131,6.952189,0.255159,9.934119,-3.315380,-6.801697,-1.812539,-0.438436],[-2.490520,-9.145940,0.090113,5.356885,-0.188881,6.311788,9.173884,1.780679,4.771117,-9.059517,9.476011,4.589256],[-8.102051,3.946666,-3.443026,-8.979705,-4.578591,9.018009,-9.614874,-5.826570,-6.409873,-9.989271,2.137669,0.546304],[7.230127,-6.982381,2.998529,-6.779849,0.809709,-7.597830,4.784590,-1.645517,8.228291,1.106739,-6.760438,-0.479496],[-8.495805,-1.595346,2.532460,-4.971689,4.025693,2.839024,-4.747292,7.764965,5.047208,9.320621,-2.329718,4.086021],[5.854729,9.461897,-4.708912,-8.697589,5.668395,-1.838371,-6.705747,8.364488,5.247495,-0.554380,-1.699036,7.463978],[8.040355,-7.843902,8.314254,-4.167555,9.758005,-7.088184,0.742245,-7.531473,-6.835267,6.467736,0.132580,-3.182105],[-9.450366,-5.150635,-4.332927,-7.453732,-0.795111,1.094789,-6.271687,-5.717996,-5.889123,3.096862,-8.901583,-3.553438],[7.067903,4.813762,-2.421840,2.907402,6.670094,6.558901,-3.103494,9.336181,-7.716168,-6.857671,-5.847959,-7.156449],[8.939618,5.458707,6.127749,-7.821585,1.387331,3.273871,-6.328446,-6.648715,-8.502058,8.579668,-5.653884,0.194293]],[[-8.396849,9.684607,0.453641,8.588156,-2.245196,-5.188031,-6.775288,-5.990739,-1.752822,4.375474,-2.847273,-1.189104],[2.176251,8.134992,8.983081,-8.934910,-6.606380,-2.736189,-0.031481,9.195547,-9.688298,-9.582493,-3.875298,6.518634],[5.370833,8.179563,-4.632397,-1.303174,-5.119837,2.329813,0.111921,7.799469,-2.184911,9.781988,5.598365,6.188335],[-1.896022,-8.044423,-0.013275,1.901354,-8.095323,3.318170,2.996097,-0.087069,-3.761376,0.284918,5.005612,1.615647],[-4.100884,-8.201765,9.740553,-8.668768,-2.344101,1.823554,-3.880394,-8.243761,2.538668,8.652790,2.120790,-9.819610],[-3.606221,2.368463,-5.330673,9.959964,7.411536,-2.701152,7.409133,-6.819314,6.456958,-2.122364,6.569563,-3.637428],[-9.947889,2.491526,2.689890,0.675906,4.563610,-2.841231,-8.000428,-4.863033,9.501261,-9.552033,4.398666,-5.706625],[-3.094522,-1.930105,5.898716,3.224770,7.570444,-0.588080,-2.155841,-5.315458,-9.564076,-3.917560,-2.672741,5.552555],[9.662604,-9.296235,-4.660155,-7.050157,4.571719,-3.640919,9.149721,-5.196661,-9.783457,-6.906597,0.988889,-8.303008],[8.602882,-4.836014,-8.391019,2.570870,9.769298,-8.782646,0.911429,6.195625,-3.959270,3.248875,2.222221,-2.998400],[-2.199645,-3.042635,8.237864,-4.270120,2.244549,-6.004773,-4.237534,-4.449700,0.949988,9.878624,9.020616,8.568171],[0.423808,6.508715,-8.743615,-9.997176,-5.659571,-9.393461,-2.794661,-6.180092,7.234017,4.233229,3.608673,-2.709693],[-7.339442,7.599427,-2.828310,3.937834,4.688171,-8.203534,-9.010821,1.713548,8.458916,-4.352818,-9.277887,-6.214965]],[[8.916438,9.349563,3.518685,8.221593,0.520394,1.896989,1.697769,3.969623,6.143509,6.589945,9.012263,6.378338],[-8.522936,-5.134011,-4.792537,5.280649,-2.329313,-0.808598,-3.664377,9.450693,-3.535157,1.128286,-6.208248,4.288550],[-3.766785,1.604221,6.467076,-5.584730,9.658894,-5.955555,8.032622,8.460733,-8.166504,5.380594,-3.771518,-1.637000],[4.611549,-1.853753,9.915554,-5.359640,-2.270238,8.776347,-3.346278,-5.397323,-5.151682,8.108630,-7.551793,5.309237],[2.900644,4.302384,4.196673,-7.707037,9.568803,-8.852619,-7.647538,-8.496121,6.190530,-5.764035,3.217699,5.945500],[4.914282,-8.733747,3.571693,-4.652290,-7.398074,-8.731059,-9.233537,3.354536,-3.959270,-8.687524,-1.359337,6.359002],[-9.242878,0.903451,-0.596603,6.187420,4.614847,5.077474,9.669319,4.026217,7.580648,5.507968,3.089813,1.370812],[0.019330,-0.018134,-0.603678,5.075923,-0.318766,5.160753,5.573158,-1.847857,-9.728019,4.170537,-5.905725,5.145338],[8.971950,1.143911,0.414739,-7.775711,-0.617037,-6.723330,-0.968344,1.944896,-1.150583,-2.141970,4.880812,8.627870],[-4.893584,9.653125,0.934574,1.493345,4.434041,8.428820,8.947954,8.457797,2.334927,3.688963,6.580702,-6.497536],[7.232784,0.525018,2.545582,-4.565758,-6.316617,-8.417221,-5.320795,-0.417857,-7.184574,4.993917,2.520978,6.565432],[-6.728855,-1.572072,7.004721,-2.502048,0.697913,4.835665,-9.209519,4.276703,6.524285,-6.417203,6.060297,-1.113734],[8.456358,7.464783,-4.646285,3.559641,9.723651,0.727774,-1.796809,3.616219,6.835676,-9.887672,-7.987883,-5.466537]]], dtype = "float32")#candidate|6784|(4, 13, 12)|const|float32
bop_6785 = relay.equal(uop_6744.astype('bool'), relay.reshape(const_6784.astype('bool'), relay.shape_of(uop_6744))) # shape=(4, 13, 12)
output = relay.Tuple([call_6712,call_6719,var_6720,bop_6724,call_6733,const_6734,var_6735,call_6750,call_6753,call_6755,call_6761,call_6766,bop_6772,call_6782,bop_6785,])
output2 = relay.Tuple([call_6713,call_6721,var_6720,bop_6727,call_6736,const_6734,var_6735,call_6751,call_6754,call_6756,call_6762,call_6767,bop_6772,call_6783,bop_6785,])
F = relay.Function([var_6720,var_6735,var_6771,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6720,var_6735,var_6771,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

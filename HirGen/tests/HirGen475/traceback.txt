==========mod==========
#[version = "0.0.5"]
def @func_8566(%var_8555: uint16) -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], uint16, Tensor[(250), uint16], Tensor[(16, 2), float64]) {
  %0 = @func_4491() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %1 = cast(%var_8555, dtype="uint16") /* ty=uint16 */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(250), uint16] */, dtype="uint16") /* ty=Tensor[(250), uint16] */;
  %3 = reshape(%1, newshape=[]) /* ty=uint16 */;
  %4 = reshape(%2, newshape=[1, 250]) /* ty=Tensor[(1, 250), uint16] */;
  %5 = @func_2654(%3, %4) /* ty=(Tensor[(16, 2), float64], uint16, Tensor[(1, 250), uint16], Tensor[(10, 5, 5), float32]) */;
  %6 = @func_2905() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %7 = %0.0;
  %8 = %5.0;
  %9 = %6.0;
  (%7, %8, %var_8555, meta[relay.Constant][0] /* ty=Tensor[(250), uint16] */, %9)
}

def @func_6655() -> Tensor[(16, 2), float64] {
  %10 = @func_3169() /* ty=(Tensor[(16, 2), float64],) */;
  %10.0
}

def @func_3149() -> (Tensor[(1014), float32],) {
  %11 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %12 = %11.2;
  (%12,)
}

def @func_7328() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %13 = @func_3169() /* ty=(Tensor[(16, 2), float64],) */;
  %14 = @func_7221() /* ty=(Tensor[(16, 2), float64],) */;
  %15 = %13.0;
  %16 = %14.0;
  (%15, %16)
}

def @func_9135() -> Tensor[(16, 2), float64] {
  %17 = @func_4491() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %17.1
}

def @func_6389() -> Tensor[(1014), float32] {
  %18 = @func_3444() /* ty=(Tensor[(1014), float32],) */;
  %18.0
}

def @func_4678() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64], Tensor[(16, 2), float64]) {
  %19 = @func_2905() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %21 = reshape(%20, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), float64] */;
  %22 = @func_760(%21) /* ty=(Tensor[(5, 12, 13), float64],) */;
  %23 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
  %24 = %19.1;
  %25 = %22.0;
  %26 = @func_2862() /* ty=Tensor[(16, 2), float64] */;
  (%23, %24, %25, meta[relay.Constant][1] /* ty=Tensor[(780), float64] */, %26)
}

def @func_5698() -> Tensor[(1014), float32] {
  %27 = @func_3388() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */;
  %27.0
}

def @func_7415() -> (Tensor[(16, 2), float64],) {
  %28 = @func_4953() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %29 = %28.1;
  (%29,)
}

def @func_6112() -> (Tensor[(1014), float32], Tensor[(1014), float64]) {
  %30 = @func_5741() /* ty=(Tensor[(1014), float32],) */;
  %31 = @func_2607() /* ty=Tensor[(1014), float32] */;
  %32 = cast(%31, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %33 = %30.0;
  %34 = exp(%32) /* ty=Tensor[(1014), float64] */;
  (%33, %34)
}

def @func_3479(%var_3449: Tensor[(11, 13, 9), float32], %var_3473: Tensor[(11, 13, 9), float32]) -> (Tensor[(11, 13, 9), float32], Tensor[(16, 2), float64], Tensor[(11, 13, 9), float64]) {
  %35 = cast(%var_3449, dtype="float32") /* ty=Tensor[(11, 13, 9), float32] */;
  %36 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %37 = cast(%var_3473, dtype="float64") /* ty=Tensor[(11, 13, 9), float64] */;
  %38 = shape_of(%var_3449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%var_3449, dtype="float64") /* ty=Tensor[(11, 13, 9), float64] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %41 = asinh(%35) /* ty=Tensor[(11, 13, 9), float32] */;
  %42 = %36.0;
  %43 = divide(%39, %40) /* ty=Tensor[(11, 13, 9), float64] */;
  (%41, %42, %43)
}

def @func_5741() -> (Tensor[(1014), float32],) {
  %44 = @func_3979() /* ty=Tensor[(1014), bool] */;
  %45 = cast(%44, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %46 = atanh(%45) /* ty=Tensor[(1014), float32] */;
  (%46,)
}

def @func_4522(%var_4502: Tensor[(16, 3, 6), float32]) -> Tensor[(16, 3, 6), float32] {
  %47 = cast(%var_4502, dtype="float32") /* ty=Tensor[(16, 3, 6), float32] */;
  rsqrt(%47) /* ty=Tensor[(16, 3, 6), float32] */
}

def @func_6961() -> (Tensor[(16, 2), float64],) {
  %48 = @func_5834() /* ty=Tensor[(16, 2), float64] */;
  (%48,)
}

def @func_8167() -> (Tensor[(16, 2), float64], Tensor[(13, 12, 4), bool], Tensor[(16, 2), float64]) {
  %49 = @func_3839() /* ty=(Tensor[(16, 2), float64],) */;
  %50 = @func_8111() /* ty=(Tensor[(1014), bool], Tensor[(13, 12, 4), bool], Tensor[(624), bool]) */;
  %51 = @func_5629() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %52 = %49.0;
  %53 = %50.1;
  %54 = %51.1;
  (%52, %53, %54)
}

def @main(%var_9729: Tensor[(455), float32]) -> (Tensor[(1014), float32], Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(5, 7, 13), float32]) {
  %55 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %56 = @func_4711() /* ty=(Tensor[(16, 2), float64],) */;
  %57 = cast(%var_9729, dtype="float32") /* ty=Tensor[(455), float32] */;
  %58 = reshape(%57, newshape=[5, 7, 13]) /* ty=Tensor[(5, 7, 13), float32] */;
  %59 = @func_6338(%58) /* ty=Tensor[(5, 7, 13), float32] */;
  %60 = cast(%var_9729, dtype="float32") /* ty=Tensor[(455), float32] */;
  %61 = shape_of(%59, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%59, dtype="float32") /* ty=Tensor[(5, 7, 13), float32] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %64 = @func_7098() /* ty=Tensor[(1014), float32] */;
  %65 = %55.2;
  %66 = %56.0;
  %67 = multiply(%62, %63) /* ty=Tensor[(5, 7, 13), float32] */;
  (%64, %65, %66, %67)
}

def @func_3444() -> (Tensor[(1014), float32],) {
  %68 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %69 = %68.2;
  (%69,)
}

def @func_3595(%var_3567: Tensor[(6, 1, 11), float32]) -> (Tensor[(6, ?, 11), float32], Tensor[(16, 2), float64], Tensor[(1, 12, 13), float32], Tensor[(78, 2), float32]) {
  %70 = cast(%var_3567, dtype="float32") /* ty=Tensor[(6, 1, 11), float32] */;
  %71 = exp(%70) /* ty=Tensor[(6, 1, 11), float32] */;
  %72 = cast(%var_3567, dtype="float32") /* ty=Tensor[(6, 1, 11), float32] */;
  %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(3), int32] */;
  %74 = cast(%71, dtype="float32") /* ty=Tensor[(6, 1, 11), float32] */;
  %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %76 = @func_1932() /* ty=(Tensor[(16, 2), float64],) */;
  %77 = cast(meta[relay.Constant][2] /* ty=Tensor[(78, 2), float32] */, dtype="float32") /* ty=Tensor[(78, 2), float32] */;
  %78 = reshape(%77, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float32] */;
  %79 = @func_197(%78) /* ty=(Tensor[(1, 12, 13), float32], Tensor[(1, 12, 13), float32]) */;
  %80 = mod(%74, %75) /* ty=Tensor[(6, ?, 11), float32] */;
  %81 = %76.0;
  %82 = %79.0;
  (%80, %81, %82, meta[relay.Constant][2] /* ty=Tensor[(78, 2), float32] */)
}

def @func_4711() -> (Tensor[(16, 2), float64],) {
  %83 = @func_3839() /* ty=(Tensor[(16, 2), float64],) */;
  %84 = %83.0;
  (%84,)
}

def @func_8479() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), float32]) {
  %85 = @func_3857() /* ty=(Tensor[(16, 2), float64],) */;
  %86 = @func_4953() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %87 = @func_5360() /* ty=(Tensor[(1014), float32],) */;
  %88 = %85.0;
  %89 = %86.4;
  %90 = %87.0;
  (%88, %89, %90)
}

def @func_760(%var_755: Tensor[(5, 12, 13), float64]) -> (Tensor[(5, 12, 13), float64],) {
  %91 = cast(%var_755, dtype="float64") /* ty=Tensor[(5, 12, 13), float64] */;
  %92 = acosh(%91) /* ty=Tensor[(5, 12, 13), float64] */;
  (%92,)
}

def @func_7158(%var_7152: Tensor[(250), uint16]) -> (Tensor[(16, 10, 5), bool], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) {
  %93 = @func_5821() /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 6, 8), float32], Tensor[(7, 52), float64]) */;
  %94 = cast(meta[relay.Constant][3] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %95 = cast(%var_7152, dtype="uint16") /* ty=Tensor[(250), uint16] */;
  %96 = reshape(%94, newshape=[]) /* ty=uint16 */;
  %97 = reshape(%95, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
  %98 = %93.0;
  %99 = @func_2110(%96, %97) /* ty=Tensor[(10, 5, 5), uint16] */;
  (%98, %99, meta[relay.Constant][3] /* ty=uint16 */, %var_7152)
}

def @func_2392() -> (Tensor[(16, 2), float64],) {
  %100 = @func_2165() /* ty=(Tensor[(16, 2), float64],) */;
  %101 = %100.0;
  (%101,)
}

def @func_2607() -> Tensor[(1014), float32] {
  %102 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %102.2
}

def @func_8257() -> Tensor[(13, 13, 6), float64] {
  %103 = @func_5741() /* ty=(Tensor[(1014), float32],) */;
  %104 = %103.0;
  %105 = cast(%104, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %106 = reshape(%105, newshape=[13, 13, 6]) /* ty=Tensor[(13, 13, 6), float32] */;
  %107 = @func_1406(%106) /* ty=(Tensor[(13, 13, 6), float32],) */;
  %108 = %107.0;
  %109 = cast(%104, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %110 = shape_of(%108, dtype="int32") /* ty=Tensor[(3), int32] */;
  %111 = cast(%108, dtype="float64") /* ty=Tensor[(13, 13, 6), float64] */;
  %112 = dyn.reshape(%109, %110, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%111, %112) /* ty=Tensor[(13, 13, 6), float64] */
}

def @func_5649() -> Tensor[(1014), float32] {
  %113 = @func_3149() /* ty=(Tensor[(1014), float32],) */;
  %113.0
}

def @func_6757(%var_6675: Tensor[(1014), float32]) -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(1014), bool], Tensor[(1014), float32], Tensor[(1014), float64]) {
  %114 = @func_3993() /* ty=(Tensor[(16, 2), float64],) */;
  %115 = @func_6269() /* ty=(Tensor[(16, 2), float64],) */;
  %116 = @func_2607() /* ty=Tensor[(1014), float32] */;
  %117 = cast(%var_6675, dtype="uint8") /* ty=Tensor[(1014), uint8] */;
  %118 = shape_of(%116, dtype="int32") /* ty=Tensor[(1), int32] */;
  %119 = cast(%116, dtype="uint8") /* ty=Tensor[(1014), uint8] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %121 = logical_xor(%119, %120) /* ty=Tensor[(1014), uint8] */;
  %122 = cast(%121, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %123 = erf(%122) /* ty=Tensor[(1014), float64] */;
  %124 = cast(%123, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %125 = cast(%121, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %126 = shape_of(%116, dtype="int32") /* ty=Tensor[(1), int32] */;
  %127 = cast(%116, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?), bool] */;
  %129 = cast(%123, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %130 = cast(meta[relay.Constant][4] /* ty=Tensor[(1014), float32] */, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %131 = shape_of(%var_6675, dtype="int32") /* ty=Tensor[(1), int32] */;
  %132 = cast(%var_6675, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?), float32] */;
  %134 = power(%132, %133) /* ty=Tensor[(1014), float32] */;
  %135 = cast(%123, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %136 = shape_of(%134, dtype="int32") /* ty=Tensor[(1), int32] */;
  %137 = cast(%134, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?), float64] */;
  %139 = %114.0;
  %140 = %115.0;
  %141 = sigmoid(%124) /* ty=Tensor[(1014), float32] */;
  %142 = less_equal(%127, %128) /* ty=Tensor[(1014), bool] */;
  %143 = sinh(%129) /* ty=Tensor[(1014), float32] */;
  %144 = floor_mod(%137, %138) /* ty=Tensor[(1014), float64] */;
  (%139, %140, %141, %142, %143, %144)
}

def @func_8856() -> (Tensor[(4, 6, 8), float32],) {
  %145 = cast(meta[relay.Constant][5] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %146 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 6, 8), uint16] */, dtype="uint16") /* ty=Tensor[(4, 6, 8), uint16] */;
  %147 = bitwise_xor(%145, %146) /* ty=Tensor[(4, 6, 8), uint16] */;
  %148 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 6, 8), uint16] */, dtype="float32") /* ty=Tensor[(4, 6, 8), float32] */;
  %149 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%147, dtype="float32") /* ty=Tensor[(4, 6, 8), float32] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %152 = divide(%150, %151) /* ty=Tensor[(4, 6, 8), float32] */;
  (%152,)
}

def @func_9662(%var_9627: Tensor[(33), float64], %var_9655: Tensor[(4, 28), int8]) -> (Tensor[(16, 2), float64], Tensor[(11, 3, 11), bool], Tensor[(33), float64], Tensor[(33, 11), float64], Tensor[(8, 7, 2), float32], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(4, 28), float64]) {
  %153 = cast(%var_9627, dtype="float64") /* ty=Tensor[(33), float64] */;
  %154 = cast(meta[relay.Constant][7] /* ty=Tensor[(33, 11), float64] */, dtype="float64") /* ty=Tensor[(33, 11), float64] */;
  %155 = reshape(%153, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
  %156 = reshape(%154, newshape=[11, 3, 11]) /* ty=Tensor[(11, 3, 11), float64] */;
  %157 = @func_8834(%155, %156) /* ty=(Tensor[(11, 3, 11), float64], Tensor[(11, 3, 11), float64], Tensor[(11, 3, 11), bool]) */;
  %158 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 28), int8] */, dtype="int8") /* ty=Tensor[(4, 28), int8] */;
  %159 = reshape(%158, newshape=[8, 7, 2]) /* ty=Tensor[(8, 7, 2), int8] */;
  %160 = @func_9476() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %161 = @func_9077() /* ty=(Tensor[(16, 2), float64],) */;
  %162 = cast(%var_9655, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %163 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(4, 28), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %164 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 28), int8] */, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
  %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %166 = @func_5455() /* ty=Tensor[(16, 2), float64] */;
  %167 = %157.2;
  %168 = @func_4833(%159) /* ty=Tensor[(8, 7, 2), float32] */;
  %169 = %160.0;
  %170 = %161.0;
  %171 = floor_mod(%164, %165) /* ty=Tensor[(4, 28), float64] */;
  (%166, %167, %var_9627, meta[relay.Constant][7] /* ty=Tensor[(33, 11), float64] */, %168, %169, %170, %171)
}

def @func_7895() -> Tensor[(1014), float32] {
  %172 = @func_6877() /* ty=(Tensor[(16, 2), float64], Tensor[(1014), bool]) */;
  %173 = %172.1;
  %174 = cast(%173, dtype="float32") /* ty=Tensor[(1014), float32] */;
  cos(%174) /* ty=Tensor[(1014), float32] */
}

def @func_7979() -> (Tensor[(16, 2), float64], Tensor[(800), float32], Tensor[(1014), float32]) {
  %175 = @func_3623() /* ty=(Tensor[(14, 2, 4), float64], Tensor[(16, 10, 5), bool], Tensor[(800), int32]) */;
  %176 = %175.2;
  %177 = cast(%176, dtype="float64") /* ty=Tensor[(800), float64] */;
  %178 = asinh(%177) /* ty=Tensor[(800), float64] */;
  %179 = cast(%178, dtype="float32") /* ty=Tensor[(800), float32] */;
  %180 = @func_3388() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */;
  %181 = @func_3426() /* ty=Tensor[(16, 2), float64] */;
  %182 = sqrt(%179) /* ty=Tensor[(800), float32] */;
  %183 = %180.0;
  (%181, %182, %183)
}

def @func_3911() -> (Tensor[(16, 2), float64], Tensor[(16, 10, 5), bool]) {
  %184 = @func_3839() /* ty=(Tensor[(16, 2), float64],) */;
  %185 = @func_3623() /* ty=(Tensor[(14, 2, 4), float64], Tensor[(16, 10, 5), bool], Tensor[(800), int32]) */;
  %186 = %184.0;
  %187 = %185.1;
  (%186, %187)
}

def @func_7834() -> Tensor[(16, 2), float64] {
  @func_1913() /* ty=Tensor[(16, 2), float64] */
}

def @func_2564(%var_2544: Tensor[(250), uint16]) -> (Tensor[(16, 2), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) {
  %188 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %189 = cast(meta[relay.Constant][9] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %190 = cast(%var_2544, dtype="uint16") /* ty=Tensor[(250), uint16] */;
  %191 = reshape(%189, newshape=[]) /* ty=uint16 */;
  %192 = reshape(%190, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
  %193 = %188.0;
  %194 = @func_2110(%191, %192) /* ty=Tensor[(10, 5, 5), uint16] */;
  (%193, %194, meta[relay.Constant][9] /* ty=uint16 */, %var_2544)
}

def @func_3208() -> (Tensor[(16, 2), float64],) {
  %195 = @func_1932() /* ty=(Tensor[(16, 2), float64],) */;
  %196 = %195.0;
  (%196,)
}

def @func_8080(%var_8044: float32, %var_8045: Tensor[(9, 1), float32]) -> (Tensor[(16, 2), float64], Tensor[(9, 156), int16], Tensor[(9, 1), bool], Tensor[(16, 2), float64], Tensor[(780), float64]) {
  %197 = @func_6625() /* ty=(Tensor[(16, 2), float64],) */;
  %198 = cast(%var_8044, dtype="float32") /* ty=float32 */;
  %199 = cast(%var_8045, dtype="float32") /* ty=Tensor[(9, 1), float32] */;
  %200 = reshape(%198, newshape=[]) /* ty=float32 */;
  %201 = reshape(%199, newshape=[9]) /* ty=Tensor[(9), float32] */;
  %202 = @func_3803(%200, %201) /* ty=(Tensor[(16, 2), float64], Tensor[(250), uint16], float32, Tensor[(9), float32], Tensor[(280), float64], Tensor[(156), float32]) */;
  %203 = %202.5;
  %204 = cast(%203, dtype="int16") /* ty=Tensor[(156), int16] */;
  %205 = cast(%var_8045, dtype="int16") /* ty=Tensor[(9, 1), int16] */;
  %206 = cast(%var_8045, dtype="bool") /* ty=Tensor[(9, 1), bool] */;
  %207 = cast(%var_8044, dtype="bool") /* ty=bool */;
  %208 = @func_6953() /* ty=(Tensor[(1014), bool], Tensor[(16, 2), float64]) */;
  %209 = %197.0;
  %210 = bitwise_and(%204, %205) /* ty=Tensor[(9, 156), int16] */;
  %211 = not_equal(%206, %207) /* ty=Tensor[(9, 1), bool] */;
  %212 = %208.1;
  %213 = @func_5547() /* ty=Tensor[(780), float64] */;
  (%209, %210, %211, %212, %213)
}

def @func_9429(%var_9425: Tensor[(8, 12, 8), float64]) -> (Tensor[(8, 12, 8), float64],) {
  %214 = cast(%var_9425, dtype="float64") /* ty=Tensor[(8, 12, 8), float64] */;
  %215 = acos(%214) /* ty=Tensor[(8, 12, 8), float64] */;
  (%215,)
}

def @func_7009() -> (Tensor[(16, 2), float64],) {
  %216 = @func_1932() /* ty=(Tensor[(16, 2), float64],) */;
  %217 = %216.0;
  (%217,)
}

def @func_4993(%var_4983: Tensor[(11, 14, 3), int64], %var_4984: Tensor[(11, 14, 3), int64]) -> (Tensor[(11, 14, 3), int64], Tensor[(16, 2), float64]) {
  %218 = cast(%var_4984, dtype="int64") /* ty=Tensor[(11, 14, 3), int64] */;
  %219 = shape_of(%var_4983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%var_4983, dtype="int64") /* ty=Tensor[(11, 14, 3), int64] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %222 = @func_3857() /* ty=(Tensor[(16, 2), float64],) */;
  %223 = minimum(%220, %221) /* ty=Tensor[(11, 14, 3), int64] */;
  %224 = %222.0;
  (%223, %224)
}

def @func_8946() -> (Tensor[(16, 2), float64], Tensor[(780), float64], Tensor[(16, 2), float64]) {
  %225 = @func_3942() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %226 = @func_5455() /* ty=Tensor[(16, 2), float64] */;
  %227 = @func_5547() /* ty=Tensor[(780), float64] */;
  %228 = %225.0;
  (%226, %227, %228)
}

def @func_3942() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %229 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %230 = @func_3169() /* ty=(Tensor[(16, 2), float64],) */;
  %231 = %229.0;
  %232 = %230.0;
  (%231, %232)
}

def @func_197(%var_181: Tensor[(1, 12, 13), float32]) -> (Tensor[(1, 12, 13), float32], Tensor[(1, 12, 13), float32]) {
  %233 = cast(%var_181, dtype="float32") /* ty=Tensor[(1, 12, 13), float32] */;
  %234 = cast(%var_181, dtype="float32") /* ty=Tensor[(1, 12, 13), float32] */;
  %235 = acosh(%233) /* ty=Tensor[(1, 12, 13), float32] */;
  %236 = cosh(%234) /* ty=Tensor[(1, 12, 13), float32] */;
  (%235, %236)
}

def @func_5031(%var_5011: Tensor[(14, 4, 14), int32]) -> (Tensor[(14, 4, 14), int32], Tensor[(16, 2), float64]) {
  %237 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 4, 1), int32] */, dtype="int32") /* ty=Tensor[(1, 4, 1), int32] */;
  %238 = cast(%var_5011, dtype="int32") /* ty=Tensor[(14, 4, 14), int32] */;
  %239 = @func_3857() /* ty=(Tensor[(16, 2), float64],) */;
  %240 = subtract(%237, %238) /* ty=Tensor[(14, 4, 14), int32] */;
  %241 = %239.0;
  (%240, %241)
}

def @func_9077() -> (Tensor[(16, 2), float64],) {
  %242 = @func_5834() /* ty=Tensor[(16, 2), float64] */;
  (%242,)
}

def @func_5821() -> (Tensor[(16, 10, 5), bool], Tensor[(11, 6, 8), float32], Tensor[(7, 52), float64]) {
  %243 = @func_3911() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 10, 5), bool]) */;
  %244 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 52), float64] */, dtype="float64") /* ty=Tensor[(7, 52), float64] */;
  %245 = reshape(%244, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %246 = @func_4781(%245) /* ty=(Tensor[(11, 6, 8), float32], Tensor[(3, 14, 10), float32], Tensor[(420, 1), float32], Tensor[(7, 13, 1), float64], Tensor[(91), float64], Tensor[(364), float64]) */;
  %247 = %243.1;
  %248 = %246.0;
  (%247, %248, meta[relay.Constant][11] /* ty=Tensor[(7, 52), float64] */)
}

def @func_4908(%var_4862: Tensor[(9, 12, 14), bool]) -> (Tensor[(9, 12, 14), bool], Tensor[(9, 12, 14), float64], Tensor[(11, 6, 8), float32]) {
  %249 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 12, 14), bool] */, dtype="bool") /* ty=Tensor[(9, 12, 14), bool] */;
  %250 = shape_of(%var_4862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%var_4862, dtype="bool") /* ty=Tensor[(9, 12, 14), bool] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %253 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 12, 14), bool] */, dtype="float64") /* ty=Tensor[(9, 12, 14), float64] */;
  %254 = @func_3388() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */;
  %255 = logical_and(%251, %252) /* ty=Tensor[(9, 12, 14), bool] */;
  %256 = erf(%253) /* ty=Tensor[(9, 12, 14), float64] */;
  %257 = %254.2;
  (%255, %256, %257)
}

def @func_4062(%var_4024: Tensor[(1014), bool]) -> (Tensor[(1014), float64], Tensor[(1014), float32], Tensor[(13, 13, 6), float32]) {
  %258 = @func_3979() /* ty=Tensor[(1014), bool] */;
  %259 = cast(%var_4024, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %260 = shape_of(%258, dtype="int32") /* ty=Tensor[(1), int32] */;
  %261 = cast(%258, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?), float64] */;
  %263 = cast(%var_4024, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %264 = shape_of(%258, dtype="int32") /* ty=Tensor[(1), int32] */;
  %265 = cast(%258, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?), bool] */;
  %267 = greater_equal(%265, %266) /* ty=Tensor[(1014), bool] */;
  %268 = cast(%267, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %269 = asin(%268) /* ty=Tensor[(1014), float32] */;
  %270 = cast(%269, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %271 = cast(%267, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %272 = reshape(%271, newshape=[13, 13, 6]) /* ty=Tensor[(13, 13, 6), float32] */;
  %273 = @func_1406(%272) /* ty=(Tensor[(13, 13, 6), float32],) */;
  %274 = subtract(%261, %262) /* ty=Tensor[(1014), float64] */;
  %275 = sin(%270) /* ty=Tensor[(1014), float32] */;
  %276 = %273.0;
  (%274, %275, %276)
}

def @func_1932() -> (Tensor[(16, 2), float64],) {
  %277 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
  (%277,)
}

def @func_1913() -> Tensor[(16, 2), float64] {
  %278 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 2), float64] */;
  sinh(%278) /* ty=Tensor[(16, 2), float64] */
}

def @func_5679() -> (Tensor[(780), float64], Tensor[(1014), float32]) {
  %279 = @func_3444() /* ty=(Tensor[(1014), float32],) */;
  %280 = @func_5547() /* ty=Tensor[(780), float64] */;
  %281 = %279.0;
  (%280, %281)
}

def @func_3027(%var_3011: Tensor[(16, 14, 13), uint8], %var_3012: Tensor[(16, 14, 13), uint8]) -> (Tensor[(16, 14, 13), uint8],) {
  %282 = cast(%var_3012, dtype="uint8") /* ty=Tensor[(16, 14, 13), uint8] */;
  %283 = shape_of(%var_3011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%var_3011, dtype="uint8") /* ty=Tensor[(16, 14, 13), uint8] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %286 = bitwise_or(%284, %285) /* ty=Tensor[(16, 14, 13), uint8] */;
  (%286,)
}

def @func_2862() -> Tensor[(16, 2), float64] {
  %287 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %287.0
}

def @func_4701() -> (Tensor[(16, 2), float64],) {
  %288 = @func_4491() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %289 = %288.0;
  (%289,)
}

def @func_4738() -> (Tensor[(1014), float64], Tensor[(1014), float32]) {
  %290 = @func_3149() /* ty=(Tensor[(1014), float32],) */;
  %291 = %290.0;
  %292 = cast(%291, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %293 = cast(%291, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %294 = atan(%292) /* ty=Tensor[(1014), float64] */;
  %295 = rsqrt(%293) /* ty=Tensor[(1014), float32] */;
  (%294, %295)
}

def @func_9476() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %296 = @func_3208() /* ty=(Tensor[(16, 2), float64],) */;
  %297 = @func_1968() /* ty=Tensor[(16, 2), float64] */;
  %298 = %296.0;
  (%297, %298)
}

def @func_6190(%var_6185: Tensor[(70, 4), float64]) -> (Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(70, 4), float64]) {
  %299 = @func_3857() /* ty=(Tensor[(16, 2), float64],) */;
  %300 = cast(%var_6185, dtype="float64") /* ty=Tensor[(70, 4), float64] */;
  %301 = cast(%var_6185, dtype="float64") /* ty=Tensor[(70, 4), float64] */;
  %302 = reshape(%300, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %303 = reshape(%301, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %304 = @func_1321(%302, %303) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(16, 10, 5), float32], Tensor[(1, 800), int32]) */;
  %305 = %299.0;
  %306 = %304.1;
  (%305, %306, %var_6185)
}

def @func_2377(%var_2340: uint16, %var_2341: Tensor[(1, 250), uint16]) -> (Tensor[(16, 2), float64], Tensor[(2, 14, 10), float64], Tensor[(280), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(1, 250), uint16]) {
  %307 = @func_1932() /* ty=(Tensor[(16, 2), float64],) */;
  %308 = cast(meta[relay.Constant][14] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %309 = cast(meta[relay.Constant][14] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %310 = reshape(%308, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %311 = reshape(%309, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %312 = @func_1321(%310, %311) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(16, 10, 5), float32], Tensor[(1, 800), int32]) */;
  %313 = cast(%var_2340, dtype="uint16") /* ty=uint16 */;
  %314 = cast(%var_2341, dtype="uint16") /* ty=Tensor[(1, 250), uint16] */;
  %315 = reshape(%313, newshape=[]) /* ty=uint16 */;
  %316 = reshape(%314, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
  %317 = %307.0;
  %318 = %312.0;
  %319 = @func_2110(%315, %316) /* ty=Tensor[(10, 5, 5), uint16] */;
  (%317, %318, meta[relay.Constant][14] /* ty=Tensor[(280), float64] */, %319, %var_2340, %var_2341)
}

def @func_9410() -> Tensor[(16, 2), float64] {
  %320 = @func_3388() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */;
  %320.1
}

def @func_2491() -> (Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) {
  %321 = @func_2165() /* ty=(Tensor[(16, 2), float64],) */;
  %322 = cast(meta[relay.Constant][15] /* ty=Tensor[(1014), float32] */, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %323 = reshape(%322, newshape=[13, 13, 6]) /* ty=Tensor[(13, 13, 6), float32] */;
  %324 = @func_1406(%323) /* ty=(Tensor[(13, 13, 6), float32],) */;
  %325 = %321.0;
  %326 = %324.0;
  (%325, %326, meta[relay.Constant][15] /* ty=Tensor[(1014), float32] */)
}

def @func_8748(%var_8691: Tensor[(288), float32], %var_8707: Tensor[(9), float32]) -> (Tensor[(16, 3, 6), float32], Tensor[(288), float32], Tensor[(16, 2), float64], Tensor[(280), float64], float32, Tensor[(9), float32], Tensor[(16, 2), float64], Tensor[(5, 10, 5), float32], Tensor[(1014), bool]) {
  %327 = cast(%var_8691, dtype="float32") /* ty=Tensor[(288), float32] */;
  %328 = reshape(%327, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float32] */;
  %329 = @func_2165() /* ty=(Tensor[(16, 2), float64],) */;
  %330 = cast(7.3694f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %331 = cast(%var_8707, dtype="float32") /* ty=Tensor[(9), float32] */;
  %332 = reshape(%330, newshape=[]) /* ty=float32 */;
  %333 = reshape(%331, newshape=[9]) /* ty=Tensor[(9), float32] */;
  %334 = @func_3803(%332, %333) /* ty=(Tensor[(16, 2), float64], Tensor[(250), uint16], float32, Tensor[(9), float32], Tensor[(280), float64], Tensor[(156), float32]) */;
  %335 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 10, 5), float64] */, dtype="uint16") /* ty=Tensor[(5, 10, 5), uint16] */;
  %336 = reshape(%335, newshape=[250]) /* ty=Tensor[(250), uint16] */;
  %337 = @func_2564(%336) /* ty=(Tensor[(16, 2), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) */;
  %338 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 10, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 10, 5), float64] */;
  %339 = rsqrt(%338) /* ty=Tensor[(5, 10, 5), float64] */;
  %340 = cast(%339, dtype="float32") /* ty=Tensor[(5, 10, 5), float32] */;
  %341 = @func_6953() /* ty=(Tensor[(1014), bool], Tensor[(16, 2), float64]) */;
  %342 = @func_4522(%328) /* ty=Tensor[(16, 3, 6), float32] */;
  %343 = %329.0;
  %344 = %334.4;
  %345 = %337.0;
  %346 = exp(%340) /* ty=Tensor[(5, 10, 5), float32] */;
  %347 = %341.0;
  (%342, %var_8691, %343, %344, 7.3694f /* ty=float32 */, %var_8707, %345, %346, %347)
}

def @func_8428() -> (Tensor[(16, 2), float64],) {
  %348 = @func_7834() /* ty=Tensor[(16, 2), float64] */;
  (%348,)
}

def @func_6816() -> (Tensor[(1014), float32], Tensor[(3, 14, 10), float32], Tensor[(420), float32]) {
  %349 = @func_5360() /* ty=(Tensor[(1014), float32],) */;
  %350 = cast(meta[relay.Constant][17] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %351 = reshape(%350, newshape=[3, 14, 10]) /* ty=Tensor[(3, 14, 10), float32] */;
  %352 = %349.0;
  %353 = @func_1663(%351) /* ty=Tensor[(3, 14, 10), float32] */;
  (%352, %353, meta[relay.Constant][17] /* ty=Tensor[(420), float32] */)
}

def @func_8629(%var_8597: Tensor[(1014), float32]) -> (Tensor[(1014), int32], Tensor[(16, 2), float64], Tensor[(1014), int64], Tensor[(1014), bool]) {
  %354 = @func_2607() /* ty=Tensor[(1014), float32] */;
  %355 = cast(%var_8597, dtype="int32") /* ty=Tensor[(1014), int32] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(1), int32] */;
  %357 = cast(%354, dtype="int32") /* ty=Tensor[(1014), int32] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?), int32] */;
  %359 = @func_3169() /* ty=(Tensor[(16, 2), float64],) */;
  %360 = cast(%var_8597, dtype="int64") /* ty=Tensor[(1014), int64] */;
  %361 = shape_of(%354, dtype="int32") /* ty=Tensor[(1), int32] */;
  %362 = cast(%354, dtype="int64") /* ty=Tensor[(1014), int64] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?), int64] */;
  %364 = @func_5775() /* ty=(Tensor[(1014), bool],) */;
  %365 = bitwise_and(%357, %358) /* ty=Tensor[(1014), int32] */;
  %366 = %359.0;
  %367 = right_shift(%362, %363) /* ty=Tensor[(1014), int64] */;
  %368 = %364.0;
  (%365, %366, %367, %368)
}

def @func_5269(%var_5249: Tensor[(800), int32]) -> (Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(800), float32]) {
  %369 = @func_3857() /* ty=(Tensor[(16, 2), float64],) */;
  %370 = cast(%var_5249, dtype="int32") /* ty=Tensor[(800), int32] */;
  %371 = cast(%var_5249, dtype="int32") /* ty=Tensor[(800), int32] */;
  %372 = reshape(%370, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %373 = reshape(%371, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %374 = @func_517(%372, %373) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(16, 10, 5), float32], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(16, 10, 5), float32]) */;
  %375 = cast(meta[relay.Constant][18] /* ty=Tensor[(800), int32] */, dtype="float32") /* ty=Tensor[(800), float32] */;
  %376 = shape_of(%var_5249, dtype="int32") /* ty=Tensor[(1), int32] */;
  %377 = cast(%var_5249, dtype="float32") /* ty=Tensor[(800), float32] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?), float32] */;
  %379 = %369.0;
  %380 = %374.4;
  %381 = floor_mod(%377, %378) /* ty=Tensor[(800), float32] */;
  (%379, %380, %381)
}

def @func_8366() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(624), bool]) {
  %382 = @func_7009() /* ty=(Tensor[(16, 2), float64],) */;
  %383 = @func_7221() /* ty=(Tensor[(16, 2), float64],) */;
  %384 = @func_7421() /* ty=(Tensor[(16, 2), float64],) */;
  %385 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %386 = @func_8111() /* ty=(Tensor[(1014), bool], Tensor[(13, 12, 4), bool], Tensor[(624), bool]) */;
  %387 = %382.0;
  %388 = %383.0;
  %389 = %384.0;
  %390 = %385.2;
  %391 = %386.2;
  (%387, %388, %389, %390, %391)
}

def @func_5492() -> Tensor[(1014), bool] {
  @func_3979() /* ty=Tensor[(1014), bool] */
}

def @func_9190() -> (Tensor[(16, 2), float64], Tensor[(3, 14, 10), float32], Tensor[(10, 42), float32]) {
  %392 = @func_4711() /* ty=(Tensor[(16, 2), float64],) */;
  %393 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 42), float32] */, dtype="float32") /* ty=Tensor[(10, 42), float32] */;
  %394 = reshape(%393, newshape=[3, 14, 10]) /* ty=Tensor[(3, 14, 10), float32] */;
  %395 = %392.0;
  %396 = @func_1663(%394) /* ty=Tensor[(3, 14, 10), float32] */;
  (%395, %396, meta[relay.Constant][19] /* ty=Tensor[(10, 42), float32] */)
}

def @func_3169() -> (Tensor[(16, 2), float64],) {
  %397 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %398 = %397.0;
  (%398,)
}

def @func_6522(%var_6500: Tensor[(200, 4), int32]) -> (Tensor[(16, 2), float64], Tensor[(7, 52), float64], Tensor[(16, 10, 5), float32], Tensor[(200, 4), int32]) {
  %399 = @func_5399() /* ty=(Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64]) */;
  %400 = @func_5821() /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 6, 8), float32], Tensor[(7, 52), float64]) */;
  %401 = cast(%var_6500, dtype="int32") /* ty=Tensor[(200, 4), int32] */;
  %402 = reshape(%401, newshape=[800]) /* ty=Tensor[(800), int32] */;
  %403 = @func_5269(%402) /* ty=(Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(800), float32]) */;
  %404 = %399.0;
  %405 = %400.2;
  %406 = %403.1;
  (%404, %405, %406, %var_6500)
}

def @func_2731(%var_2705: Tensor[(7, 13, 1), float64], %var_2712: Tensor[(7, 13, 4), float64]) -> (Tensor[(7, 13, 1), float64], Tensor[(7, 13, 4), uint32], Tensor[(10, 14, 12), uint32], Tensor[(12, 140), uint32]) {
  %407 = cast(%var_2705, dtype="float64") /* ty=Tensor[(7, 13, 1), float64] */;
  %408 = cast(%var_2705, dtype="uint32") /* ty=Tensor[(7, 13, 1), uint32] */;
  %409 = cast(%var_2712, dtype="uint32") /* ty=Tensor[(7, 13, 4), uint32] */;
  %410 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 140), uint32] */, dtype="uint32") /* ty=Tensor[(12, 140), uint32] */;
  %411 = reshape(%410, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), uint32] */;
  %412 = log2(%407) /* ty=Tensor[(7, 13, 1), float64] */;
  %413 = left_shift(%408, %409) /* ty=Tensor[(7, 13, 4), uint32] */;
  %414 = @func_1300(%411) /* ty=Tensor[(10, 14, 12), uint32] */;
  (%412, %413, %414, meta[relay.Constant][20] /* ty=Tensor[(12, 140), uint32] */)
}

def @func_5629() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %415 = @func_4678() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64], Tensor[(16, 2), float64]) */;
  %416 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
  %417 = %415.1;
  (%416, %417)
}

def @func_8977() -> Tensor[(16, 2), float64] {
  %418 = @func_3208() /* ty=(Tensor[(16, 2), float64],) */;
  %418.0
}

def @func_8529() -> Tensor[(16, 2), float64] {
  %419 = @func_4711() /* ty=(Tensor[(16, 2), float64],) */;
  %419.0
}

def @func_1300(%var_1264: Tensor[(10, 14, 12), uint32]) -> Tensor[(10, 14, 12), uint32] {
  %420 = cast(%var_1264, dtype="uint32") /* ty=Tensor[(10, 14, 12), uint32] */;
  %421 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(10, 14, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(meta[relay.Constant][21] /* ty=Tensor[(10, 14, 12), uint32] */, dtype="uint32") /* ty=Tensor[(10, 14, 12), uint32] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%422, %423) /* ty=Tensor[(10, 14, 12), uint32] */
}

def @func_3803(%var_3798: float32, %var_3799: Tensor[(9), float32]) -> (Tensor[(16, 2), float64], Tensor[(250), uint16], float32, Tensor[(9), float32], Tensor[(280), float64], Tensor[(156), float32]) {
  %424 = @func_3208() /* ty=(Tensor[(16, 2), float64],) */;
  %425 = cast(%var_3798, dtype="float32") /* ty=float32 */;
  %426 = cast(%var_3799, dtype="float32") /* ty=Tensor[(9), float32] */;
  %427 = cast(meta[relay.Constant][22] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %428 = cast(meta[relay.Constant][23] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %429 = reshape(%425, newshape=[]) /* ty=float32 */;
  %430 = reshape(%426, newshape=[1, 9]) /* ty=Tensor[(1, 9), float32] */;
  %431 = reshape(%427, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %432 = reshape(%428, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %433 = @func_3118(%429, %430, %431, %432) /* ty=(Tensor[(1, 9), float32], Tensor[(16, 10, 5), float32], Tensor[(280), float64], Tensor[(2, 14, 10), float64], Tensor[(250), uint16], Tensor[(1, 12, 13), float32], Tensor[(156), float32]) */;
  %434 = %424.0;
  %435 = %433.4;
  (%434, %435, %var_3798, %var_3799, meta[relay.Constant][22] /* ty=Tensor[(280), float64] */, meta[relay.Constant][23] /* ty=Tensor[(156), float32] */)
}

def @func_4491() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %436 = @func_2165() /* ty=(Tensor[(16, 2), float64],) */;
  %437 = @func_3169() /* ty=(Tensor[(16, 2), float64],) */;
  %438 = %436.0;
  %439 = %437.0;
  (%438, %439)
}

def @func_7366() -> (Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(1, 320), float64], Tensor[(2, 14, 10), float64], Tensor[(1, 280), float64]) {
  %440 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 320), float64] */, dtype="float64") /* ty=Tensor[(1, 320), float64] */;
  %441 = reshape(%440, newshape=[8, 40]) /* ty=Tensor[(8, 40), float64] */;
  %442 = @func_6072(%441) /* ty=(Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(8, 40), float64]) */;
  %443 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 280), float64] */, dtype="float64") /* ty=Tensor[(1, 280), float64] */;
  %444 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 280), float64] */, dtype="float64") /* ty=Tensor[(1, 280), float64] */;
  %445 = reshape(%443, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %446 = reshape(%444, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %447 = @func_1321(%445, %446) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(16, 10, 5), float32], Tensor[(1, 800), int32]) */;
  %448 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
  %449 = %442.1;
  %450 = %447.0;
  (%448, %449, meta[relay.Constant][24] /* ty=Tensor[(1, 320), float64] */, %450, meta[relay.Constant][25] /* ty=Tensor[(1, 280), float64] */)
}

def @func_2064(%var_2044: Tensor[(156), float32]) -> (Tensor[(16, 2), float64], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(10, 14, 12), uint32], Tensor[(1680), uint32], Tensor[(16, 2), float64]) {
  %451 = cast(%var_2044, dtype="float32") /* ty=Tensor[(156), float32] */;
  %452 = reshape(%451, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float32] */;
  %453 = @func_197(%452) /* ty=(Tensor[(1, 12, 13), float32], Tensor[(1, 12, 13), float32]) */;
  %454 = cast(meta[relay.Constant][26] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
  %455 = reshape(%454, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), uint32] */;
  %456 = @func_1968() /* ty=Tensor[(16, 2), float64] */;
  %457 = %453.0;
  %458 = @func_1300(%455) /* ty=Tensor[(10, 14, 12), uint32] */;
  %459 = @func_1968() /* ty=Tensor[(16, 2), float64] */;
  (%456, %457, %var_2044, %458, meta[relay.Constant][26] /* ty=Tensor[(1680), uint32] */, %459)
}

def @func_7473() -> (Tensor[(1014), float32], Tensor[(13, 12, 4), bool], Tensor[(624), bool], Tensor[(16, 2), float64], Tensor[(15, 10, 8), float32], Tensor[(1200), float64], uint16) {
  %460 = @func_3444() /* ty=(Tensor[(1014), float32],) */;
  %461 = cast(meta[relay.Constant][27] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
  %462 = cast(meta[relay.Constant][27] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
  %463 = reshape(%461, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), bool] */;
  %464 = reshape(%462, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), bool] */;
  %465 = @func_4758(%463, %464) /* ty=(Tensor[(13, 12, 4), bool],) */;
  %466 = @func_6625() /* ty=(Tensor[(16, 2), float64],) */;
  %467 = cast(meta[relay.Constant][28] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %468 = cast(meta[relay.Constant][29] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %469 = reshape(%467, newshape=[1, 1200]) /* ty=Tensor[(1, 1200), float64] */;
  %470 = reshape(%468, newshape=[]) /* ty=uint16 */;
  %471 = @func_3006(%469, %470) /* ty=(Tensor[(16, 2), float64], Tensor[(15, 10, 8), float32], Tensor[(1, 1200), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16], Tensor[(10, 5, 5), uint16]) */;
  %472 = %460.0;
  %473 = %465.0;
  %474 = %466.0;
  %475 = %471.1;
  (%472, %473, meta[relay.Constant][27] /* ty=Tensor[(624), bool] */, %474, %475, meta[relay.Constant][28] /* ty=Tensor[(1200), float64] */, meta[relay.Constant][29] /* ty=uint16 */)
}

def @func_3857() -> (Tensor[(16, 2), float64],) {
  %476 = @func_3169() /* ty=(Tensor[(16, 2), float64],) */;
  %477 = %476.0;
  (%477,)
}

def @func_4953() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %478 = @func_4701() /* ty=(Tensor[(16, 2), float64],) */;
  %479 = @func_3942() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %480 = @func_3208() /* ty=(Tensor[(16, 2), float64],) */;
  %481 = @func_4701() /* ty=(Tensor[(16, 2), float64],) */;
  %482 = %478.0;
  %483 = %479.1;
  %484 = %480.0;
  %485 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
  %486 = %481.0;
  (%482, %483, %484, %485, %486)
}

def @func_7277() -> (Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(16, 2), float64]) {
  %487 = @func_6269() /* ty=(Tensor[(16, 2), float64],) */;
  %488 = @func_5492() /* ty=Tensor[(1014), bool] */;
  %489 = cast(%488, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %490 = @func_3911() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 10, 5), bool]) */;
  %491 = %487.0;
  %492 = cosh(%489) /* ty=Tensor[(1014), float32] */;
  %493 = %490.0;
  (%491, %492, %493)
}

def @func_7421() -> (Tensor[(16, 2), float64],) {
  %494 = @func_5981() /* ty=Tensor[(16, 2), float64] */;
  (%494,)
}

def @func_7098() -> Tensor[(1014), float32] {
  %495 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %495.2
}

def @func_7305() -> (Tensor[(16, 2), float64],) {
  %496 = @func_3993() /* ty=(Tensor[(16, 2), float64],) */;
  %497 = %496.0;
  (%497,)
}

def @func_5981() -> Tensor[(16, 2), float64] {
  %498 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %498.0
}

def @func_6607() -> (Tensor[(1014), float64],) {
  %499 = @func_6112() /* ty=(Tensor[(1014), float32], Tensor[(1014), float64]) */;
  %500 = %499.1;
  (%500,)
}

def @func_5360() -> (Tensor[(1014), float32],) {
  %501 = @func_2607() /* ty=Tensor[(1014), float32] */;
  (%501,)
}

def @func_6625() -> (Tensor[(16, 2), float64],) {
  %502 = @func_4711() /* ty=(Tensor[(16, 2), float64],) */;
  %503 = %502.0;
  (%503,)
}

def @func_8111() -> (Tensor[(1014), bool], Tensor[(13, 12, 4), bool], Tensor[(624), bool]) {
  %504 = @func_7637() /* ty=(Tensor[(1014), bool], Tensor[(16, 2), float64]) */;
  %505 = %504.0;
  %506 = @func_6389() /* ty=Tensor[(1014), float32] */;
  %507 = cast(%506, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %508 = shape_of(%505, dtype="int32") /* ty=Tensor[(1), int32] */;
  %509 = cast(%505, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?), bool] */;
  %511 = cast(meta[relay.Constant][30] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
  %512 = cast(meta[relay.Constant][30] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
  %513 = reshape(%511, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), bool] */;
  %514 = reshape(%512, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), bool] */;
  %515 = @func_4758(%513, %514) /* ty=(Tensor[(13, 12, 4), bool],) */;
  %516 = equal(%509, %510) /* ty=Tensor[(1014), bool] */;
  %517 = %515.0;
  (%516, %517, meta[relay.Constant][30] /* ty=Tensor[(624), bool] */)
}

def @func_4568() -> Tensor[(16, 2), float64] {
  %518 = @func_3942() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %518.0
}

def @func_7511() -> (Tensor[(1014), float32],) {
  %519 = @func_3149() /* ty=(Tensor[(1014), float32],) */;
  %520 = %519.0;
  %521 = cast(%520, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %522 = tan(%521) /* ty=Tensor[(1014), float32] */;
  (%522,)
}

def @func_8834(%var_8804: Tensor[(1, 3, 11), float64], %var_8805: Tensor[(11, 3, 11), float64]) -> (Tensor[(11, 3, 11), float64], Tensor[(11, 3, 11), float64], Tensor[(11, 3, 11), bool]) {
  %523 = cast(%var_8804, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  %524 = cast(%var_8805, dtype="float64") /* ty=Tensor[(11, 3, 11), float64] */;
  %525 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 3, 11), float64] */, dtype="float64") /* ty=Tensor[(11, 3, 11), float64] */;
  %526 = shape_of(%var_8805, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(%var_8805, dtype="float64") /* ty=Tensor[(11, 3, 11), float64] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %529 = cast(%var_8805, dtype="bool") /* ty=Tensor[(11, 3, 11), bool] */;
  %530 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(11, 3, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %531 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 3, 11), float64] */, dtype="bool") /* ty=Tensor[(11, 3, 11), bool] */;
  %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %533 = add(%523, %524) /* ty=Tensor[(11, 3, 11), float64] */;
  %534 = floor_mod(%527, %528) /* ty=Tensor[(11, 3, 11), float64] */;
  %535 = logical_and(%531, %532) /* ty=Tensor[(11, 3, 11), bool] */;
  (%533, %534, %535)
}

def @func_8777() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %536 = @func_7328() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %537 = @func_3839() /* ty=(Tensor[(16, 2), float64],) */;
  %538 = %536.0;
  %539 = %537.0;
  (%538, %539)
}

def @func_3426() -> Tensor[(16, 2), float64] {
  %540 = @func_3208() /* ty=(Tensor[(16, 2), float64],) */;
  %540.0
}

def @func_1406(%var_1402: Tensor[(13, 13, 6), float32]) -> (Tensor[(13, 13, 6), float32],) {
  %541 = cast(%var_1402, dtype="float32") /* ty=Tensor[(13, 13, 6), float32] */;
  %542 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(13, 13, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %543 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 13, 6), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 6), float32] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %545 = floor_divide(%543, %544) /* ty=Tensor[(13, 13, 6), float32] */;
  (%545,)
}

def @func_8232(%var_8219: Tensor[(1680), uint32]) -> (Tensor[(13, 12, 4), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(10, 14, 12), uint32], Tensor[(1680), uint32]) {
  %546 = @func_8111() /* ty=(Tensor[(1014), bool], Tensor[(13, 12, 4), bool], Tensor[(624), bool]) */;
  %547 = %546.1;
  %548 = cast(%547, dtype="float64") /* ty=Tensor[(13, 12, 4), float64] */;
  %549 = @func_4491() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %550 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %551 = cast(%var_8219, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
  %552 = reshape(%551, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), uint32] */;
  %553 = sigmoid(%548) /* ty=Tensor[(13, 12, 4), float64] */;
  %554 = %549.0;
  %555 = %550.0;
  %556 = @func_1300(%552) /* ty=Tensor[(10, 14, 12), uint32] */;
  (%553, %554, %555, %556, %var_8219)
}

def @func_6269() -> (Tensor[(16, 2), float64],) {
  %557 = @func_3426() /* ty=Tensor[(16, 2), float64] */;
  (%557,)
}

def @func_864(%var_828: Tensor[(15, 10, 8), float64]) -> (Tensor[(16, 10, 5), float32], Tensor[(800), int32], Tensor[(15, 10, 8), float32], Tensor[(5, 12, 13), float64], Tensor[(130, 6), float64], Tensor[(15, 10, 8), bool]) {
  %558 = cast(meta[relay.Constant][33] /* ty=Tensor[(800), int32] */, dtype="int32") /* ty=Tensor[(800), int32] */;
  %559 = cast(meta[relay.Constant][33] /* ty=Tensor[(800), int32] */, dtype="int32") /* ty=Tensor[(800), int32] */;
  %560 = reshape(%558, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %561 = reshape(%559, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %562 = @func_517(%560, %561) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(16, 10, 5), float32], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(16, 10, 5), float32]) */;
  %563 = cast(%var_828, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
  %564 = acosh(%563) /* ty=Tensor[(15, 10, 8), float64] */;
  %565 = cast(meta[relay.Constant][34] /* ty=Tensor[(15, 10, 8), float64] */, dtype="bool") /* ty=Tensor[(15, 10, 8), bool] */;
  %566 = shape_of(%564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%564, dtype="bool") /* ty=Tensor[(15, 10, 8), bool] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %569 = less_equal(%567, %568) /* ty=Tensor[(15, 10, 8), bool] */;
  %570 = cast(%569, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %571 = cast(meta[relay.Constant][35] /* ty=Tensor[(130, 6), float64] */, dtype="float64") /* ty=Tensor[(130, 6), float64] */;
  %572 = reshape(%571, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), float64] */;
  %573 = @func_760(%572) /* ty=(Tensor[(5, 12, 13), float64],) */;
  %574 = cast(%var_828, dtype="bool") /* ty=Tensor[(15, 10, 8), bool] */;
  %575 = shape_of(%564, dtype="int32") /* ty=Tensor[(3), int32] */;
  %576 = cast(%564, dtype="bool") /* ty=Tensor[(15, 10, 8), bool] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %578 = %562.1;
  %579 = cos(%570) /* ty=Tensor[(15, 10, 8), float32] */;
  %580 = %573.0;
  %581 = greater(%576, %577) /* ty=Tensor[(15, 10, 8), bool] */;
  (%578, meta[relay.Constant][33] /* ty=Tensor[(800), int32] */, %579, %580, meta[relay.Constant][35] /* ty=Tensor[(130, 6), float64] */, %581)
}

def @func_1968() -> Tensor[(16, 2), float64] {
  @func_1913() /* ty=Tensor[(16, 2), float64] */
}

def @func_1321(%var_1307: Tensor[(2, 14, 10), float64], %var_1308: Tensor[(2, 14, 10), float64]) -> (Tensor[(2, 14, 10), float64], Tensor[(16, 10, 5), float32], Tensor[(1, 800), int32]) {
  %582 = cast(%var_1308, dtype="float64") /* ty=Tensor[(2, 14, 10), float64] */;
  %583 = shape_of(%var_1307, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%var_1307, dtype="float64") /* ty=Tensor[(2, 14, 10), float64] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %586 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 800), int32] */, dtype="int32") /* ty=Tensor[(1, 800), int32] */;
  %587 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 800), int32] */, dtype="int32") /* ty=Tensor[(1, 800), int32] */;
  %588 = reshape(%586, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %589 = reshape(%587, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %590 = @func_517(%588, %589) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(16, 10, 5), float32], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(16, 10, 5), float32]) */;
  %591 = floor_mod(%584, %585) /* ty=Tensor[(2, 14, 10), float64] */;
  %592 = %590.1;
  (%591, %592, meta[relay.Constant][36] /* ty=Tensor[(1, 800), int32] */)
}

def @func_5455() -> Tensor[(16, 2), float64] {
  %593 = @func_3704() /* ty=(Tensor[(16, 2), float64],) */;
  %593.0
}

def @func_6030() -> (Tensor[(1014), float32], Tensor[(1014), float64]) {
  %594 = @func_4738() /* ty=(Tensor[(1014), float64], Tensor[(1014), float32]) */;
  %595 = %594.0;
  %596 = cast(%595, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %597 = @func_5649() /* ty=Tensor[(1014), float32] */;
  %598 = log10(%596) /* ty=Tensor[(1014), float64] */;
  (%597, %598)
}

def @func_3704() -> (Tensor[(16, 2), float64],) {
  %599 = @func_3208() /* ty=(Tensor[(16, 2), float64],) */;
  %600 = %599.0;
  (%600,)
}

def @func_6953() -> (Tensor[(1014), bool], Tensor[(16, 2), float64]) {
  %601 = @func_2165() /* ty=(Tensor[(16, 2), float64],) */;
  %602 = @func_3979() /* ty=Tensor[(1014), bool] */;
  %603 = %601.0;
  (%602, %603)
}

def @func_5156(%var_5086: Tensor[(1014), float32], %var_5093: Tensor[(1014), int16], %var_5137: Tensor[(288), float32]) -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), bool], Tensor[(1014), float32], Tensor[(16, 3, 6), float32], Tensor[(288), float32]) {
  %604 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %605 = @func_3388() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */;
  %606 = @func_4738() /* ty=(Tensor[(1014), float64], Tensor[(1014), float32]) */;
  %607 = %606.1;
  %608 = cast(%var_5086, dtype="int16") /* ty=Tensor[(1014), int16] */;
  %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(1), int32] */;
  %610 = cast(%607, dtype="int16") /* ty=Tensor[(1014), int16] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?), int16] */;
  %612 = bitwise_xor(%610, %611) /* ty=Tensor[(1014), int16] */;
  %613 = cast(%var_5093, dtype="int16") /* ty=Tensor[(1014), int16] */;
  %614 = shape_of(%612, dtype="int32") /* ty=Tensor[(1), int32] */;
  %615 = cast(%612, dtype="int16") /* ty=Tensor[(1014), int16] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?), int16] */;
  %617 = left_shift(%615, %616) /* ty=Tensor[(1014), int16] */;
  %618 = cast(%617, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %619 = cast(%var_5137, dtype="float32") /* ty=Tensor[(288), float32] */;
  %620 = reshape(%619, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float32] */;
  %621 = %604.0;
  %622 = %605.1;
  %623 = @func_3979() /* ty=Tensor[(1014), bool] */;
  %624 = acos(%618) /* ty=Tensor[(1014), float32] */;
  %625 = @func_4522(%620) /* ty=Tensor[(16, 3, 6), float32] */;
  (%621, %622, %623, %624, %625, %var_5137)
}

def @func_7637() -> (Tensor[(1014), bool], Tensor[(16, 2), float64]) {
  %626 = @func_5775() /* ty=(Tensor[(1014), bool],) */;
  %627 = %626.0;
  %628 = @func_3426() /* ty=Tensor[(16, 2), float64] */;
  (%627, %628)
}

def @func_3118(%var_3044: float32, %var_3045: Tensor[(1, 9), float32], %var_3050: Tensor[(280), float64], %var_3108: Tensor[(156), float32]) -> (Tensor[(1, 9), float32], Tensor[(16, 10, 5), float32], Tensor[(280), float64], Tensor[(2, 14, 10), float64], Tensor[(250), uint16], Tensor[(1, 12, 13), float32], Tensor[(156), float32]) {
  %629 = cast(%var_3044, dtype="float32") /* ty=float32 */;
  %630 = cast(%var_3045, dtype="float32") /* ty=Tensor[(1, 9), float32] */;
  %631 = cast(%var_3050, dtype="float64") /* ty=Tensor[(280), float64] */;
  %632 = cast(%var_3050, dtype="float64") /* ty=Tensor[(280), float64] */;
  %633 = reshape(%631, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %634 = reshape(%632, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %635 = @func_1321(%633, %634) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(16, 10, 5), float32], Tensor[(1, 800), int32]) */;
  %636 = cast(%var_3044, dtype="uint16") /* ty=uint16 */;
  %637 = cast(meta[relay.Constant][37] /* ty=Tensor[(250), uint16] */, dtype="uint16") /* ty=Tensor[(250), uint16] */;
  %638 = reshape(%636, newshape=[]) /* ty=uint16 */;
  %639 = reshape(%637, newshape=[1, 250]) /* ty=Tensor[(1, 250), uint16] */;
  %640 = @func_2377(%638, %639) /* ty=(Tensor[(16, 2), float64], Tensor[(2, 14, 10), float64], Tensor[(280), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(1, 250), uint16]) */;
  %641 = cast(%var_3108, dtype="float32") /* ty=Tensor[(156), float32] */;
  %642 = reshape(%641, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float32] */;
  %643 = @func_197(%642) /* ty=(Tensor[(1, 12, 13), float32], Tensor[(1, 12, 13), float32]) */;
  %644 = maximum(%629, %630) /* ty=Tensor[(1, 9), float32] */;
  %645 = %635.1;
  %646 = %640.1;
  %647 = %643.1;
  (%644, %645, %var_3050, %646, meta[relay.Constant][37] /* ty=Tensor[(250), uint16] */, %647, %var_3108)
}

def @func_1663(%var_1659: Tensor[(3, 14, 10), float32]) -> Tensor[(3, 14, 10), float32] {
  %648 = cast(%var_1659, dtype="float32") /* ty=Tensor[(3, 14, 10), float32] */;
  cos(%648) /* ty=Tensor[(3, 14, 10), float32] */
}

def @func_4209(%var_4181: Tensor[(1, 1014), bool], %var_4189: Tensor[(1200), float64]) -> (Tensor[(16, 2), float64], Tensor[(1014), float64], Tensor[(1, 1014), float32], Tensor[(15, 10, 8), float32], Tensor[(1200), float64], Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32]) {
  %649 = cast(%var_4181, dtype="bool") /* ty=Tensor[(1, 1014), bool] */;
  %650 = reshape(%649, newshape=[1014]) /* ty=Tensor[(1014), bool] */;
  %651 = @func_4062(%650) /* ty=(Tensor[(1014), float64], Tensor[(1014), float32], Tensor[(13, 13, 6), float32]) */;
  %652 = cast(%var_4181, dtype="float32") /* ty=Tensor[(1, 1014), float32] */;
  %653 = cast(%var_4189, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %654 = reshape(%653, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float64] */;
  %655 = @func_864(%654) /* ty=(Tensor[(16, 10, 5), float32], Tensor[(800), int32], Tensor[(15, 10, 8), float32], Tensor[(5, 12, 13), float64], Tensor[(130, 6), float64], Tensor[(15, 10, 8), bool]) */;
  %656 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %657 = cast(%var_4181, dtype="float32") /* ty=Tensor[(1, 1014), float32] */;
  %658 = reshape(%657, newshape=[13, 13, 6]) /* ty=Tensor[(13, 13, 6), float32] */;
  %659 = @func_1406(%658) /* ty=(Tensor[(13, 13, 6), float32],) */;
  %660 = %659.0;
  %661 = cast(%660, dtype="float32") /* ty=Tensor[(13, 13, 6), float32] */;
  %662 = @func_2862() /* ty=Tensor[(16, 2), float64] */;
  %663 = %651.0;
  %664 = exp(%652) /* ty=Tensor[(1, 1014), float32] */;
  %665 = %655.2;
  %666 = %656.0;
  %667 = sqrt(%661) /* ty=Tensor[(13, 13, 6), float32] */;
  (%662, %663, %664, %665, %var_4189, %666, %667)
}

def @func_3623() -> (Tensor[(14, 2, 4), float64], Tensor[(16, 10, 5), bool], Tensor[(800), int32]) {
  %668 = cast(meta[relay.Constant][38] /* ty=Tensor[(14, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 4), float64] */;
  %669 = cast(meta[relay.Constant][39] /* ty=Tensor[(800), int32] */, dtype="int32") /* ty=Tensor[(800), int32] */;
  %670 = cast(meta[relay.Constant][39] /* ty=Tensor[(800), int32] */, dtype="int32") /* ty=Tensor[(800), int32] */;
  %671 = reshape(%669, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %672 = reshape(%670, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %673 = @func_517(%671, %672) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(16, 10, 5), float32], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(16, 10, 5), float32]) */;
  %674 = log2(%668) /* ty=Tensor[(14, 2, 4), float64] */;
  %675 = %673.0;
  (%674, %675, meta[relay.Constant][39] /* ty=Tensor[(800), int32] */)
}

def @func_2831(%var_2792: Tensor[(8, 10, 4), float64]) -> (Tensor[(8, 10, 4), float64], Tensor[(1014), float32]) {
  %676 = cast(%var_2792, dtype="float64") /* ty=Tensor[(8, 10, 4), float64] */;
  %677 = atan(%676) /* ty=Tensor[(8, 10, 4), float64] */;
  %678 = @func_2607() /* ty=Tensor[(1014), float32] */;
  (%677, %678)
}

def @func_8680(%var_8673: Tensor[(6, 5, 8), int32]) -> (Tensor[(6, 5, 8), bool], Tensor[(1014), float32]) {
  %679 = cast(%var_8673, dtype="bool") /* ty=Tensor[(6, 5, 8), bool] */;
  %680 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(6, 5, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 5, 8), int32] */, dtype="bool") /* ty=Tensor[(6, 5, 8), bool] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %683 = @func_5360() /* ty=(Tensor[(1014), float32],) */;
  %684 = greater(%681, %682) /* ty=Tensor[(6, 5, 8), bool] */;
  %685 = %683.0;
  (%684, %685)
}

def @func_4406(%var_4386: Tensor[(22, 3), float32]) -> (Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(78, 2), float32], Tensor[(22, 3), float32], Tensor[(12, 140), int64], Tensor[(12, 140), float64]) {
  %686 = @func_3839() /* ty=(Tensor[(16, 2), float64],) */;
  %687 = cast(%var_4386, dtype="float32") /* ty=Tensor[(22, 3), float32] */;
  %688 = reshape(%687, newshape=[6, 1, 11]) /* ty=Tensor[(6, 1, 11), float32] */;
  %689 = @func_3595(%688) /* ty=(Tensor[(6, ?, 11), float32], Tensor[(16, 2), float64], Tensor[(1, 12, 13), float32], Tensor[(78, 2), float32]) */;
  %690 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 140), uint32] */, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %691 = atanh(%690) /* ty=Tensor[(12, 140), float64] */;
  %692 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 140), uint32] */, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %693 = shape_of(%691, dtype="int32") /* ty=Tensor[(2), int32] */;
  %694 = cast(%691, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %696 = divide(%694, %695) /* ty=Tensor[(12, 140), float32] */;
  %697 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 140), uint32] */, dtype="uint32") /* ty=Tensor[(12, 140), uint32] */;
  %698 = reshape(%697, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), uint32] */;
  %699 = @func_1300(%698) /* ty=Tensor[(10, 14, 12), uint32] */;
  %700 = cast(%699, dtype="float64") /* ty=Tensor[(10, 14, 12), float64] */;
  %701 = shape_of(%696, dtype="int32") /* ty=Tensor[(2), int32] */;
  %702 = cast(%696, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %704 = floor_mod(%702, %703) /* ty=Tensor[(12, 140), float64] */;
  %705 = cast(%691, dtype="int64") /* ty=Tensor[(12, 140), int64] */;
  %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(2), int32] */;
  %707 = cast(%704, dtype="int64") /* ty=Tensor[(12, 140), int64] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %709 = cast(%691, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %710 = @func_2607() /* ty=Tensor[(1014), float32] */;
  %711 = %686.0;
  %712 = %689.3;
  %713 = left_shift(%707, %708) /* ty=Tensor[(12, 140), int64] */;
  %714 = exp(%709) /* ty=Tensor[(12, 140), float64] */;
  (%710, %711, %712, %var_4386, %713, %714)
}

def @func_2110(%var_2103: uint16, %var_2104: Tensor[(10, 5, 5), uint16]) -> Tensor[(10, 5, 5), uint16] {
  %715 = cast(%var_2103, dtype="uint16") /* ty=uint16 */;
  %716 = cast(%var_2104, dtype="uint16") /* ty=Tensor[(10, 5, 5), uint16] */;
  maximum(%715, %716) /* ty=Tensor[(10, 5, 5), uint16] */
}

def @func_9674() -> Tensor[(16, 2), float64] {
  %717 = @func_6953() /* ty=(Tensor[(1014), bool], Tensor[(16, 2), float64]) */;
  %717.1
}

def @func_3006(%var_2981: Tensor[(1, 1200), float64], %var_2986: uint16) -> (Tensor[(16, 2), float64], Tensor[(15, 10, 8), float32], Tensor[(1, 1200), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16], Tensor[(10, 5, 5), uint16]) {
  %718 = @func_2165() /* ty=(Tensor[(16, 2), float64],) */;
  %719 = cast(%var_2981, dtype="float64") /* ty=Tensor[(1, 1200), float64] */;
  %720 = reshape(%719, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float64] */;
  %721 = @func_864(%720) /* ty=(Tensor[(16, 10, 5), float32], Tensor[(800), int32], Tensor[(15, 10, 8), float32], Tensor[(5, 12, 13), float64], Tensor[(130, 6), float64], Tensor[(15, 10, 8), bool]) */;
  %722 = cast(%var_2986, dtype="uint16") /* ty=uint16 */;
  %723 = cast(meta[relay.Constant][42] /* ty=Tensor[(250), uint16] */, dtype="uint16") /* ty=Tensor[(250), uint16] */;
  %724 = reshape(%722, newshape=[]) /* ty=uint16 */;
  %725 = reshape(%723, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
  %726 = cast(%var_2986, dtype="uint16") /* ty=uint16 */;
  %727 = cast(meta[relay.Constant][42] /* ty=Tensor[(250), uint16] */, dtype="uint16") /* ty=Tensor[(250), uint16] */;
  %728 = reshape(%726, newshape=[]) /* ty=uint16 */;
  %729 = reshape(%727, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
  %730 = %718.0;
  %731 = %721.2;
  %732 = @func_2110(%724, %725) /* ty=Tensor[(10, 5, 5), uint16] */;
  %733 = @func_2110(%728, %729) /* ty=Tensor[(10, 5, 5), uint16] */;
  (%730, %731, %var_2981, %732, %var_2986, meta[relay.Constant][42] /* ty=Tensor[(250), uint16] */, %733)
}

def @func_9608() -> (Tensor[(16, 2), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) {
  %734 = @func_4701() /* ty=(Tensor[(16, 2), float64],) */;
  %735 = cast(meta[relay.Constant][43] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %736 = cast(meta[relay.Constant][44] /* ty=Tensor[(250), uint16] */, dtype="uint16") /* ty=Tensor[(250), uint16] */;
  %737 = reshape(%735, newshape=[]) /* ty=uint16 */;
  %738 = reshape(%736, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
  %739 = %734.0;
  %740 = @func_2110(%737, %738) /* ty=Tensor[(10, 5, 5), uint16] */;
  (%739, %740, meta[relay.Constant][43] /* ty=uint16 */, meta[relay.Constant][44] /* ty=Tensor[(250), uint16] */)
}

def @func_6972() -> (Tensor[(16, 2), float64],) {
  %741 = @func_6269() /* ty=(Tensor[(16, 2), float64],) */;
  %742 = %741.0;
  (%742,)
}

def @func_2165() -> (Tensor[(16, 2), float64],) {
  %743 = @func_1932() /* ty=(Tensor[(16, 2), float64],) */;
  %744 = %743.0;
  (%744,)
}

def @func_6877() -> (Tensor[(16, 2), float64], Tensor[(1014), bool]) {
  %745 = @func_2862() /* ty=Tensor[(16, 2), float64] */;
  %746 = @func_5492() /* ty=Tensor[(1014), bool] */;
  (%745, %746)
}

def @func_517(%var_473: Tensor[(16, 10, 5), int32], %var_474: Tensor[(16, 10, 5), int32]) -> (Tensor[(16, 10, 5), bool], Tensor[(16, 10, 5), float32], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(16, 10, 5), float32]) {
  %747 = cast(%var_474, dtype="bool") /* ty=Tensor[(16, 10, 5), bool] */;
  %748 = shape_of(%var_473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %749 = cast(%var_473, dtype="bool") /* ty=Tensor[(16, 10, 5), bool] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %751 = cast(%var_474, dtype="float32") /* ty=Tensor[(16, 10, 5), float32] */;
  %752 = cast(meta[relay.Constant][45] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %753 = reshape(%752, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float32] */;
  %754 = @func_197(%753) /* ty=(Tensor[(1, 12, 13), float32], Tensor[(1, 12, 13), float32]) */;
  %755 = cast(%var_473, dtype="float32") /* ty=Tensor[(16, 10, 5), float32] */;
  %756 = not_equal(%749, %750) /* ty=Tensor[(16, 10, 5), bool] */;
  %757 = asinh(%751) /* ty=Tensor[(16, 10, 5), float32] */;
  %758 = %754.0;
  %759 = atan(%755) /* ty=Tensor[(16, 10, 5), float32] */;
  (%756, %757, %758, meta[relay.Constant][45] /* ty=Tensor[(156), float32] */, %759)
}

def @func_6072(%var_6069: Tensor[(8, 40), float64]) -> (Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(8, 40), float64]) {
  %760 = @func_4953() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %761 = cast(%var_6069, dtype="float64") /* ty=Tensor[(8, 40), float64] */;
  %762 = reshape(%761, newshape=[8, 10, 4]) /* ty=Tensor[(8, 10, 4), float64] */;
  %763 = @func_2831(%762) /* ty=(Tensor[(8, 10, 4), float64], Tensor[(1014), float32]) */;
  %764 = %760.3;
  %765 = %763.1;
  (%764, %765, %var_6069)
}

def @func_5834() -> Tensor[(16, 2), float64] {
  %766 = @func_5399() /* ty=(Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64]) */;
  %766.0
}

def @func_2905() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %767 = @func_2862() /* ty=Tensor[(16, 2), float64] */;
  %768 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
  (%767, %768)
}

def @func_7221() -> (Tensor[(16, 2), float64],) {
  %769 = @func_5455() /* ty=Tensor[(16, 2), float64] */;
  (%769,)
}

def @func_5399() -> (Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64]) {
  %770 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %771 = cast(meta[relay.Constant][46] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %772 = reshape(%771, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), float64] */;
  %773 = @func_760(%772) /* ty=(Tensor[(5, 12, 13), float64],) */;
  %774 = %770.0;
  %775 = %773.0;
  (%774, %775, meta[relay.Constant][46] /* ty=Tensor[(780), float64] */)
}

def @func_4833(%var_4797: Tensor[(8, 7, 2), int8]) -> Tensor[(8, 7, 2), float32] {
  %776 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 7, 2), int8] */, dtype="int8") /* ty=Tensor[(8, 7, 2), int8] */;
  %777 = shape_of(%var_4797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%var_4797, dtype="int8") /* ty=Tensor[(8, 7, 2), int8] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %780 = logical_xor(%778, %779) /* ty=Tensor[(8, 7, 2), int8] */;
  %781 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 7, 2), int8] */, dtype="int64") /* ty=Tensor[(8, 7, 2), int64] */;
  %782 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%780, dtype="int64") /* ty=Tensor[(8, 7, 2), int64] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %785 = maximum(%783, %784) /* ty=Tensor[(8, 7, 2), int64] */;
  %786 = cast(%785, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  rsqrt(%786) /* ty=Tensor[(8, 7, 2), float32] */
}

def @func_5873(%var_5856: Tensor[(9, 9, 7), uint64]) -> (Tensor[(9, 9, 7), uint64], Tensor[(16, 2), float64]) {
  %787 = cast(meta[relay.Constant][48] /* ty=Tensor[(9, 9, 7), uint64] */, dtype="uint64") /* ty=Tensor[(9, 9, 7), uint64] */;
  %788 = shape_of(%var_5856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%var_5856, dtype="uint64") /* ty=Tensor[(9, 9, 7), uint64] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %791 = @func_3704() /* ty=(Tensor[(16, 2), float64],) */;
  %792 = multiply(%789, %790) /* ty=Tensor[(9, 9, 7), uint64] */;
  %793 = %791.0;
  (%792, %793)
}

def @func_5547() -> Tensor[(780), float64] {
  %794 = @func_5399() /* ty=(Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64]) */;
  %794.2
}

def @func_5775() -> (Tensor[(1014), bool],) {
  %795 = @func_5492() /* ty=Tensor[(1014), bool] */;
  (%795,)
}

def @func_2654(%var_2646: uint16, %var_2647: Tensor[(1, 250), uint16]) -> (Tensor[(16, 2), float64], uint16, Tensor[(1, 250), uint16], Tensor[(10, 5, 5), float32]) {
  %796 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %797 = cast(%var_2646, dtype="uint16") /* ty=uint16 */;
  %798 = cast(%var_2647, dtype="uint16") /* ty=Tensor[(1, 250), uint16] */;
  %799 = reshape(%797, newshape=[]) /* ty=uint16 */;
  %800 = reshape(%798, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
  %801 = @func_2110(%799, %800) /* ty=Tensor[(10, 5, 5), uint16] */;
  %802 = cast(%801, dtype="float32") /* ty=Tensor[(10, 5, 5), float32] */;
  %803 = %796.0;
  %804 = erf(%802) /* ty=Tensor[(10, 5, 5), float32] */;
  (%803, %var_2646, %var_2647, %804)
}

def @func_3839() -> (Tensor[(16, 2), float64],) {
  %805 = @func_3704() /* ty=(Tensor[(16, 2), float64],) */;
  %806 = %805.0;
  (%806,)
}

def @func_7718(%var_7689: Tensor[(1014), float64]) -> (Tensor[(1014), uint16], Tensor[(1014), bool], Tensor[(1014), float32]) {
  %807 = @func_6030() /* ty=(Tensor[(1014), float32], Tensor[(1014), float64]) */;
  %808 = %807.1;
  %809 = cast(%var_7689, dtype="uint16") /* ty=Tensor[(1014), uint16] */;
  %810 = shape_of(%808, dtype="int32") /* ty=Tensor[(1), int32] */;
  %811 = cast(%808, dtype="uint16") /* ty=Tensor[(1014), uint16] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %813 = @func_3149() /* ty=(Tensor[(1014), float32],) */;
  %814 = bitwise_or(%811, %812) /* ty=Tensor[(1014), uint16] */;
  %815 = @func_3979() /* ty=Tensor[(1014), bool] */;
  %816 = %813.0;
  (%814, %815, %816)
}

def @func_5516(%var_5507: Tensor[(1200), float64]) -> (Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(1200), float64]) {
  %817 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %818 = cast(%var_5507, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %819 = reshape(%818, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float64] */;
  %820 = @func_864(%819) /* ty=(Tensor[(16, 10, 5), float32], Tensor[(800), int32], Tensor[(15, 10, 8), float32], Tensor[(5, 12, 13), float64], Tensor[(130, 6), float64], Tensor[(15, 10, 8), bool]) */;
  %821 = %817.0;
  %822 = %820.0;
  (%821, %822, %var_5507)
}

def @func_4781(%var_4777: Tensor[(364), float64]) -> (Tensor[(11, 6, 8), float32], Tensor[(3, 14, 10), float32], Tensor[(420, 1), float32], Tensor[(7, 13, 1), float64], Tensor[(91), float64], Tensor[(364), float64]) {
  %823 = @func_3388() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */;
  %824 = cast(meta[relay.Constant][49] /* ty=Tensor[(420, 1), float32] */, dtype="float32") /* ty=Tensor[(420, 1), float32] */;
  %825 = reshape(%824, newshape=[3, 14, 10]) /* ty=Tensor[(3, 14, 10), float32] */;
  %826 = cast(meta[relay.Constant][50] /* ty=Tensor[(91), float64] */, dtype="float64") /* ty=Tensor[(91), float64] */;
  %827 = cast(%var_4777, dtype="float64") /* ty=Tensor[(364), float64] */;
  %828 = reshape(%826, newshape=[7, 13, 1]) /* ty=Tensor[(7, 13, 1), float64] */;
  %829 = reshape(%827, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %830 = @func_2731(%828, %829) /* ty=(Tensor[(7, 13, 1), float64], Tensor[(7, 13, 4), uint32], Tensor[(10, 14, 12), uint32], Tensor[(12, 140), uint32]) */;
  %831 = %823.2;
  %832 = @func_1663(%825) /* ty=Tensor[(3, 14, 10), float32] */;
  %833 = %830.0;
  (%831, %832, meta[relay.Constant][49] /* ty=Tensor[(420, 1), float32] */, %833, meta[relay.Constant][50] /* ty=Tensor[(91), float64] */, %var_4777)
}

def @func_8394() -> (Tensor[(16, 2), float64],) {
  %834 = @func_5455() /* ty=Tensor[(16, 2), float64] */;
  (%834,)
}

def @func_3993() -> (Tensor[(16, 2), float64],) {
  %835 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %836 = %835.0;
  (%836,)
}

def @func_6338(%var_6333: Tensor[(5, 7, 13), float32]) -> Tensor[(5, 7, 13), float32] {
  %837 = cast(%var_6333, dtype="float32") /* ty=Tensor[(5, 7, 13), float32] */;
  sinh(%837) /* ty=Tensor[(5, 7, 13), float32] */
}

def @func_9352(%var_9296: float64, %var_9297: Tensor[(14, 5, 15), float64], %var_9321: Tensor[(1200, 1), float64]) -> (Tensor[(16, 2), float64], Tensor[(14, 5, 15), int32], Tensor[(1200), float64], Tensor[(1200, 1), float64], Tensor[(4, 6, 8), float32], Tensor[(16, 2), float64]) {
  %838 = cast(%var_9296, dtype="float64") /* ty=float64 */;
  %839 = cast(%var_9297, dtype="float64") /* ty=Tensor[(14, 5, 15), float64] */;
  %840 = floor_mod(%838, %839) /* ty=Tensor[(14, 5, 15), float64] */;
  %841 = cast(%840, dtype="int32") /* ty=Tensor[(14, 5, 15), int32] */;
  %842 = shape_of(%var_9297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %843 = cast(%var_9297, dtype="int32") /* ty=Tensor[(14, 5, 15), int32] */;
  %844 = dyn.reshape(%841, %842, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %845 = cast(%var_9321, dtype="float64") /* ty=Tensor[(1200, 1), float64] */;
  %846 = reshape(%845, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %847 = @func_5516(%846) /* ty=(Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(1200), float64]) */;
  %848 = @func_8856() /* ty=(Tensor[(4, 6, 8), float32],) */;
  %849 = @func_5455() /* ty=Tensor[(16, 2), float64] */;
  %850 = minimum(%843, %844) /* ty=Tensor[(14, 5, 15), int32] */;
  %851 = %847.2;
  %852 = %848.0;
  %853 = @func_6655() /* ty=Tensor[(16, 2), float64] */;
  (%849, %850, %851, %var_9321, %852, %853)
}

def @func_3979() -> Tensor[(1014), bool] {
  %854 = @func_3444() /* ty=(Tensor[(1014), float32],) */;
  %855 = %854.0;
  %856 = cast(%855, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %857 = sqrt(%856) /* ty=Tensor[(1014), float32] */;
  %858 = cast(%857, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %859 = shape_of(%855, dtype="int32") /* ty=Tensor[(1), int32] */;
  %860 = cast(%855, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?), bool] */;
  not_equal(%860, %861) /* ty=Tensor[(1014), bool] */
}

def @func_4758(%var_4753: Tensor[(13, 12, 4), bool], %var_4754: Tensor[(13, 12, 4), bool]) -> (Tensor[(13, 12, 4), bool],) {
  %862 = cast(%var_4754, dtype="bool") /* ty=Tensor[(13, 12, 4), bool] */;
  %863 = shape_of(%var_4753, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(%var_4753, dtype="bool") /* ty=Tensor[(13, 12, 4), bool] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %866 = logical_and(%864, %865) /* ty=Tensor[(13, 12, 4), bool] */;
  (%866,)
}

def @func_3388() -> (Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) {
  %867 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %868 = cast(meta[relay.Constant][51] /* ty=Tensor[(11, 6, 8), float32] */, dtype="float32") /* ty=Tensor[(11, 6, 8), float32] */;
  %869 = sin(%868) /* ty=Tensor[(11, 6, 8), float32] */;
  %870 = cast(%869, dtype="float32") /* ty=Tensor[(11, 6, 8), float32] */;
  %871 = log2(%870) /* ty=Tensor[(11, 6, 8), float32] */;
  %872 = cast(%871, dtype="float32") /* ty=Tensor[(11, 6, 8), float32] */;
  %873 = asinh(%872) /* ty=Tensor[(11, 6, 8), float32] */;
  %874 = cast(%873, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %875 = shape_of(%871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%871, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %878 = logical_and(%876, %877) /* ty=Tensor[(11, 6, 8), bool] */;
  %879 = cast(%878, dtype="float32") /* ty=Tensor[(11, 6, 8), float32] */;
  %880 = %867.2;
  %881 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
  %882 = sinh(%879) /* ty=Tensor[(11, 6, 8), float32] */;
  (%880, %881, %882)
}

def @func_7070(%var_7056: Tensor[(11, 6, 8), float32]) -> (Tensor[(11, 6, 8), bool], Tensor[(16, 2), float64], Tensor[(11, 6, 8), int16]) {
  %883 = @func_5821() /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 6, 8), float32], Tensor[(7, 52), float64]) */;
  %884 = %883.1;
  %885 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 6, 8), float32] */, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%884, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %889 = cast(%var_7056, dtype="int16") /* ty=Tensor[(11, 6, 8), int16] */;
  %890 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %891 = cast(%884, dtype="int16") /* ty=Tensor[(11, 6, 8), int16] */;
  %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %893 = greater_equal(%887, %888) /* ty=Tensor[(11, 6, 8), bool] */;
  %894 = @func_1968() /* ty=Tensor[(16, 2), float64] */;
  %895 = bitwise_xor(%891, %892) /* ty=Tensor[(11, 6, 8), int16] */;
  (%893, %894, %895)
}

def @func_7828() -> (Tensor[(1014), bool], Tensor[(10, 14, 12), uint32], Tensor[(1680), uint32]) {
  %896 = @func_5775() /* ty=(Tensor[(1014), bool],) */;
  %897 = cast(meta[relay.Constant][53] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
  %898 = reshape(%897, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), uint32] */;
  %899 = %896.0;
  %900 = @func_1300(%898) /* ty=Tensor[(10, 14, 12), uint32] */;
  (%899, %900, meta[relay.Constant][53] /* ty=Tensor[(1680), uint32] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8978() -> Tensor[(16, 2), float64] {
  %1 = fn () -> Tensor[(16, 2), float64] {
    %0 = @func_3208() /* ty=(Tensor[(16, 2), float64],) */;
    %0.0
  };
  %1() /* ty=Tensor[(16, 2), float64] */
}

def @func_5492() -> Tensor[(1014), bool] {
  @func_3979() /* ty=Tensor[(1014), bool] */
}

def @func_7305() -> (Tensor[(16, 2), float64],) {
  %2 = @func_3993() /* ty=(Tensor[(16, 2), float64],) */;
  %3 = %2.0;
  (%3,)
}

def @func_4491() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %4 = @func_2165() /* ty=(Tensor[(16, 2), float64],) */;
  %5 = @func_3169() /* ty=(Tensor[(16, 2), float64],) */;
  %6 = %4.0;
  %7 = %5.0;
  (%6, %7)
}

def @func_2862() -> Tensor[(16, 2), float64] {
  %8 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %8.0
}

def @func_6757(%var_6675: Tensor[(1014), float32]) -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(1014), bool], Tensor[(1014), float32], Tensor[(1014), float64]) {
  %9 = @func_3993() /* ty=(Tensor[(16, 2), float64],) */;
  %10 = @func_6269() /* ty=(Tensor[(16, 2), float64],) */;
  %11 = @func_2607() /* ty=Tensor[(1014), float32] */;
  %12 = cast(%var_6675, dtype="uint8") /* ty=Tensor[(1014), uint8] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(1), int32] */;
  %14 = cast(%11, dtype="uint8") /* ty=Tensor[(1014), uint8] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %16 = logical_xor(%14, %15) /* ty=Tensor[(1014), uint8] */;
  %17 = cast(%16, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %18 = erf(%17) /* ty=Tensor[(1014), float64] */;
  %19 = cast(%18, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %20 = cast(%16, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %21 = shape_of(%11, dtype="int32") /* ty=Tensor[(1), int32] */;
  %22 = cast(%11, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?), bool] */;
  %24 = cast(%18, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(1014), float32] */, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %26 = shape_of(%var_6675, dtype="int32") /* ty=Tensor[(1), int32] */;
  %27 = cast(%var_6675, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?), float32] */;
  %29 = power(%27, %28) /* ty=Tensor[(1014), float32] */;
  %30 = cast(%18, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %31 = shape_of(%29, dtype="int32") /* ty=Tensor[(1), int32] */;
  %32 = cast(%29, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?), float64] */;
  %34 = %9.0;
  %35 = %10.0;
  %36 = sigmoid(%19) /* ty=Tensor[(1014), float32] */;
  %37 = less_equal(%22, %23) /* ty=Tensor[(1014), bool] */;
  %38 = sinh(%24) /* ty=Tensor[(1014), float32] */;
  %39 = floor_mod(%32, %33) /* ty=Tensor[(1014), float64] */;
  (%34, %35, %36, %37, %38, %39)
}

def @func_6955() -> (Tensor[(1014), bool], Tensor[(16, 2), float64]) {
  @func_6953() /* ty=(Tensor[(1014), bool], Tensor[(16, 2), float64]) */
}

def @func_2066(%var_2065: Tensor[(156), float32]) -> (Tensor[(16, 2), float64], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(10, 14, 12), uint32], Tensor[(1680), uint32], Tensor[(16, 2), float64]) {
  %49 = fn (%var_2044: Tensor[(156), float32]) -> (Tensor[(16, 2), float64], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(10, 14, 12), uint32], Tensor[(1680), uint32], Tensor[(16, 2), float64]) {
    %40 = cast(%var_2044, dtype="float32") /* ty=Tensor[(156), float32] */;
    %41 = reshape(%40, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float32] */;
    %42 = @func_197(%41) /* ty=(Tensor[(1, 12, 13), float32], Tensor[(1, 12, 13), float32]) */;
    %43 = cast(meta[relay.Constant][1] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
    %44 = reshape(%43, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), uint32] */;
    %45 = @func_1968() /* ty=Tensor[(16, 2), float64] */;
    %46 = %42.0;
    %47 = @func_1300(%44) /* ty=Tensor[(10, 14, 12), uint32] */;
    %48 = @func_1968() /* ty=Tensor[(16, 2), float64] */;
    (%45, %46, %var_2044, %47, meta[relay.Constant][1] /* ty=Tensor[(1680), uint32] */, %48)
  };
  %49(%var_2065) /* ty=(Tensor[(16, 2), float64], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(10, 14, 12), uint32], Tensor[(1680), uint32], Tensor[(16, 2), float64]) */
}

def @func_200(%var_198: Tensor[(1, 12, 13), float32]) -> (Tensor[(1, 12, 13), float32], Tensor[(1, 12, 13), float32]) {
  @func_197(%var_198) /* ty=(Tensor[(1, 12, 13), float32], Tensor[(1, 12, 13), float32]) */
}

def @func_3839() -> (Tensor[(16, 2), float64],) {
  %50 = @func_3704() /* ty=(Tensor[(16, 2), float64],) */;
  %51 = %50.0;
  (%51,)
}

def @func_2166() -> (Tensor[(16, 2), float64],) {
  %54 = fn () -> (Tensor[(16, 2), float64],) {
    %52 = @func_1932() /* ty=(Tensor[(16, 2), float64],) */;
    %53 = %52.0;
    (%53,)
  };
  %54() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_7638() -> (Tensor[(1014), bool], Tensor[(16, 2), float64]) {
  %58 = fn () -> (Tensor[(1014), bool], Tensor[(16, 2), float64]) {
    %55 = @func_5775() /* ty=(Tensor[(1014), bool],) */;
    %56 = %55.0;
    %57 = @func_3426() /* ty=Tensor[(16, 2), float64] */;
    (%56, %57)
  };
  %58() /* ty=(Tensor[(1014), bool], Tensor[(16, 2), float64]) */
}

def @func_2493() -> (Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) {
  @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */
}

def @func_6627() -> (Tensor[(16, 2), float64],) {
  @func_6625() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_3428() -> Tensor[(16, 2), float64] {
  @func_3426() /* ty=Tensor[(16, 2), float64] */
}

def @func_4568() -> Tensor[(16, 2), float64] {
  %59 = @func_3942() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %59.0
}

def @func_2657(%var_2655: uint16, %var_2656: Tensor[(1, 250), uint16]) -> (Tensor[(16, 2), float64], uint16, Tensor[(1, 250), uint16], Tensor[(10, 5, 5), float32]) {
  %69 = fn (%var_2646: uint16, %var_2647: Tensor[(1, 250), uint16]) -> (Tensor[(16, 2), float64], uint16, Tensor[(1, 250), uint16], Tensor[(10, 5, 5), float32]) {
    %60 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
    %61 = cast(%var_2646, dtype="uint16") /* ty=uint16 */;
    %62 = cast(%var_2647, dtype="uint16") /* ty=Tensor[(1, 250), uint16] */;
    %63 = reshape(%61, newshape=[]) /* ty=uint16 */;
    %64 = reshape(%62, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
    %65 = @func_2110(%63, %64) /* ty=Tensor[(10, 5, 5), uint16] */;
    %66 = cast(%65, dtype="float32") /* ty=Tensor[(10, 5, 5), float32] */;
    %67 = %60.0;
    %68 = erf(%66) /* ty=Tensor[(10, 5, 5), float32] */;
    (%67, %var_2646, %var_2647, %68)
  };
  %69(%var_2655, %var_2656) /* ty=(Tensor[(16, 2), float64], uint16, Tensor[(1, 250), uint16], Tensor[(10, 5, 5), float32]) */
}

def @func_3706() -> (Tensor[(16, 2), float64],) {
  @func_3704() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_5982() -> Tensor[(16, 2), float64] {
  %71 = fn () -> Tensor[(16, 2), float64] {
    %70 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
    %70.0
  };
  %71() /* ty=Tensor[(16, 2), float64] */
}

def @func_763(%var_761: Tensor[(5, 12, 13), float64]) -> (Tensor[(5, 12, 13), float64],) {
  @func_760(%var_761) /* ty=(Tensor[(5, 12, 13), float64],) */
}

def @func_6271() -> (Tensor[(16, 2), float64],) {
  @func_6269() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_4522(%var_4502: Tensor[(16, 3, 6), float32]) -> Tensor[(16, 3, 6), float32] {
  %72 = cast(%var_4502, dtype="float32") /* ty=Tensor[(16, 3, 6), float32] */;
  rsqrt(%72) /* ty=Tensor[(16, 3, 6), float32] */
}

def @func_4525(%var_4523: Tensor[(16, 3, 6), float32]) -> Tensor[(16, 3, 6), float32] {
  @func_4522(%var_4523) /* ty=Tensor[(16, 3, 6), float32] */
}

def @func_6607() -> (Tensor[(1014), float64],) {
  %73 = @func_6112() /* ty=(Tensor[(1014), float32], Tensor[(1014), float64]) */;
  %74 = %73.1;
  (%74,)
}

def @func_4784(%var_4782: Tensor[(364), float64]) -> (Tensor[(11, 6, 8), float32], Tensor[(3, 14, 10), float32], Tensor[(420, 1), float32], Tensor[(7, 13, 1), float64], Tensor[(91), float64], Tensor[(364), float64]) {
  @func_4781(%var_4782) /* ty=(Tensor[(11, 6, 8), float32], Tensor[(3, 14, 10), float32], Tensor[(420, 1), float32], Tensor[(7, 13, 1), float64], Tensor[(91), float64], Tensor[(364), float64]) */
}

def @func_1303(%var_1301: Tensor[(10, 14, 12), uint32]) -> Tensor[(10, 14, 12), uint32] {
  @func_1300(%var_1301) /* ty=Tensor[(10, 14, 12), uint32] */
}

def @func_3980() -> Tensor[(1014), bool] {
  %83 = fn () -> Tensor[(1014), bool] {
    %75 = @func_3444() /* ty=(Tensor[(1014), float32],) */;
    %76 = %75.0;
    %77 = cast(%76, dtype="float32") /* ty=Tensor[(1014), float32] */;
    %78 = sqrt(%77) /* ty=Tensor[(1014), float32] */;
    %79 = cast(%78, dtype="bool") /* ty=Tensor[(1014), bool] */;
    %80 = shape_of(%76, dtype="int32") /* ty=Tensor[(1), int32] */;
    %81 = cast(%76, dtype="bool") /* ty=Tensor[(1014), bool] */;
    %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?), bool] */;
    not_equal(%81, %82) /* ty=Tensor[(1014), bool] */
  };
  %83() /* ty=Tensor[(1014), bool] */
}

def @func_3009(%var_3007: Tensor[(1, 1200), float64], %var_3008: uint16) -> (Tensor[(16, 2), float64], Tensor[(15, 10, 8), float32], Tensor[(1, 1200), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16], Tensor[(10, 5, 5), uint16]) {
  %100 = fn (%var_2981: Tensor[(1, 1200), float64], %var_2986: uint16) -> (Tensor[(16, 2), float64], Tensor[(15, 10, 8), float32], Tensor[(1, 1200), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16], Tensor[(10, 5, 5), uint16]) {
    %84 = @func_2165() /* ty=(Tensor[(16, 2), float64],) */;
    %85 = cast(%var_2981, dtype="float64") /* ty=Tensor[(1, 1200), float64] */;
    %86 = reshape(%85, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float64] */;
    %87 = @func_864(%86) /* ty=(Tensor[(16, 10, 5), float32], Tensor[(800), int32], Tensor[(15, 10, 8), float32], Tensor[(5, 12, 13), float64], Tensor[(130, 6), float64], Tensor[(15, 10, 8), bool]) */;
    %88 = cast(%var_2986, dtype="uint16") /* ty=uint16 */;
    %89 = cast(meta[relay.Constant][2] /* ty=Tensor[(250), uint16] */, dtype="uint16") /* ty=Tensor[(250), uint16] */;
    %90 = reshape(%88, newshape=[]) /* ty=uint16 */;
    %91 = reshape(%89, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
    %92 = cast(%var_2986, dtype="uint16") /* ty=uint16 */;
    %93 = cast(meta[relay.Constant][2] /* ty=Tensor[(250), uint16] */, dtype="uint16") /* ty=Tensor[(250), uint16] */;
    %94 = reshape(%92, newshape=[]) /* ty=uint16 */;
    %95 = reshape(%93, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
    %96 = %84.0;
    %97 = %87.2;
    %98 = @func_2110(%90, %91) /* ty=Tensor[(10, 5, 5), uint16] */;
    %99 = @func_2110(%94, %95) /* ty=Tensor[(10, 5, 5), uint16] */;
    (%96, %97, %var_2981, %98, %var_2986, meta[relay.Constant][2] /* ty=Tensor[(250), uint16] */, %99)
  };
  %100(%var_3007, %var_3008) /* ty=(Tensor[(16, 2), float64], Tensor[(15, 10, 8), float32], Tensor[(1, 1200), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16], Tensor[(10, 5, 5), uint16]) */
}

def @func_7277() -> (Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(16, 2), float64]) {
  %101 = @func_6269() /* ty=(Tensor[(16, 2), float64],) */;
  %102 = @func_5492() /* ty=Tensor[(1014), bool] */;
  %103 = cast(%102, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %104 = @func_3911() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 10, 5), bool]) */;
  %105 = %101.0;
  %106 = cosh(%103) /* ty=Tensor[(1014), float32] */;
  %107 = %104.0;
  (%105, %106, %107)
}

def @func_6655() -> Tensor[(16, 2), float64] {
  %108 = @func_3169() /* ty=(Tensor[(16, 2), float64],) */;
  %108.0
}

def @func_3841() -> (Tensor[(16, 2), float64],) {
  @func_3839() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_7158(%var_7152: Tensor[(250), uint16]) -> (Tensor[(16, 10, 5), bool], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) {
  %109 = @func_5821() /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 6, 8), float32], Tensor[(7, 52), float64]) */;
  %110 = cast(meta[relay.Constant][3] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %111 = cast(%var_7152, dtype="uint16") /* ty=Tensor[(250), uint16] */;
  %112 = reshape(%110, newshape=[]) /* ty=uint16 */;
  %113 = reshape(%111, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
  %114 = %109.0;
  %115 = @func_2110(%112, %113) /* ty=Tensor[(10, 5, 5), uint16] */;
  (%114, %115, meta[relay.Constant][3] /* ty=uint16 */, %var_7152)
}

def @func_760(%var_755: Tensor[(5, 12, 13), float64]) -> (Tensor[(5, 12, 13), float64],) {
  %116 = cast(%var_755, dtype="float64") /* ty=Tensor[(5, 12, 13), float64] */;
  %117 = acosh(%116) /* ty=Tensor[(5, 12, 13), float64] */;
  (%117,)
}

def @func_3169() -> (Tensor[(16, 2), float64],) {
  %118 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %119 = %118.0;
  (%119,)
}

def @func_4835(%var_4834: Tensor[(8, 7, 2), int8]) -> Tensor[(8, 7, 2), float32] {
  %131 = fn (%var_4797: Tensor[(8, 7, 2), int8]) -> Tensor[(8, 7, 2), float32] {
    %120 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 7, 2), int8] */, dtype="int8") /* ty=Tensor[(8, 7, 2), int8] */;
    %121 = shape_of(%var_4797, dtype="int32") /* ty=Tensor[(3), int32] */;
    %122 = cast(%var_4797, dtype="int8") /* ty=Tensor[(8, 7, 2), int8] */;
    %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %124 = logical_xor(%122, %123) /* ty=Tensor[(8, 7, 2), int8] */;
    %125 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 7, 2), int8] */, dtype="int64") /* ty=Tensor[(8, 7, 2), int64] */;
    %126 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
    %127 = cast(%124, dtype="int64") /* ty=Tensor[(8, 7, 2), int64] */;
    %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %129 = maximum(%127, %128) /* ty=Tensor[(8, 7, 2), int64] */;
    %130 = cast(%129, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
    rsqrt(%130) /* ty=Tensor[(8, 7, 2), float32] */
  };
  %131(%var_4834) /* ty=Tensor[(8, 7, 2), float32] */
}

def @func_2491() -> (Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) {
  %132 = @func_2165() /* ty=(Tensor[(16, 2), float64],) */;
  %133 = cast(meta[relay.Constant][5] /* ty=Tensor[(1014), float32] */, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %134 = reshape(%133, newshape=[13, 13, 6]) /* ty=Tensor[(13, 13, 6), float32] */;
  %135 = @func_1406(%134) /* ty=(Tensor[(13, 13, 6), float32],) */;
  %136 = %132.0;
  %137 = %135.0;
  (%136, %137, meta[relay.Constant][5] /* ty=Tensor[(1014), float32] */)
}

def @func_7099() -> Tensor[(1014), float32] {
  %139 = fn () -> Tensor[(1014), float32] {
    %138 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
    %138.2
  };
  %139() /* ty=Tensor[(1014), float32] */
}

def @func_3027(%var_3011: Tensor[(16, 14, 13), uint8], %var_3012: Tensor[(16, 14, 13), uint8]) -> (Tensor[(16, 14, 13), uint8],) {
  %140 = cast(%var_3012, dtype="uint8") /* ty=Tensor[(16, 14, 13), uint8] */;
  %141 = shape_of(%var_3011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(%var_3011, dtype="uint8") /* ty=Tensor[(16, 14, 13), uint8] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %144 = bitwise_or(%142, %143) /* ty=Tensor[(16, 14, 13), uint8] */;
  (%144,)
}

def @func_3444() -> (Tensor[(1014), float32],) {
  %145 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %146 = %145.2;
  (%146,)
}

def @func_4409(%var_4407: Tensor[(22, 3), float32]) -> (Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(78, 2), float32], Tensor[(22, 3), float32], Tensor[(12, 140), int64], Tensor[(12, 140), float64]) {
  @func_4406(%var_4407) /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(78, 2), float32], Tensor[(22, 3), float32], Tensor[(12, 140), int64], Tensor[(12, 140), float64]) */
}

def @func_3913() -> (Tensor[(16, 2), float64], Tensor[(16, 10, 5), bool]) {
  @func_3911() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 10, 5), bool]) */
}

def @func_5161(%var_5158: Tensor[(1014), float32], %var_5159: Tensor[(1014), int16], %var_5160: Tensor[(288), float32]) -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), bool], Tensor[(1014), float32], Tensor[(16, 3, 6), float32], Tensor[(288), float32]) {
  @func_5156(%var_5158, %var_5159, %var_5160) /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), bool], Tensor[(1014), float32], Tensor[(16, 3, 6), float32], Tensor[(288), float32]) */
}

def @func_8113() -> (Tensor[(1014), bool], Tensor[(13, 12, 4), bool], Tensor[(624), bool]) {
  @func_8111() /* ty=(Tensor[(1014), bool], Tensor[(13, 12, 4), bool], Tensor[(624), bool]) */
}

def @func_7367() -> (Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(1, 320), float64], Tensor[(2, 14, 10), float64], Tensor[(1, 280), float64]) {
  %158 = fn () -> (Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(1, 320), float64], Tensor[(2, 14, 10), float64], Tensor[(1, 280), float64]) {
    %147 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 320), float64] */, dtype="float64") /* ty=Tensor[(1, 320), float64] */;
    %148 = reshape(%147, newshape=[8, 40]) /* ty=Tensor[(8, 40), float64] */;
    %149 = @func_6072(%148) /* ty=(Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(8, 40), float64]) */;
    %150 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 280), float64] */, dtype="float64") /* ty=Tensor[(1, 280), float64] */;
    %151 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 280), float64] */, dtype="float64") /* ty=Tensor[(1, 280), float64] */;
    %152 = reshape(%150, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
    %153 = reshape(%151, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
    %154 = @func_1321(%152, %153) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(16, 10, 5), float32], Tensor[(1, 800), int32]) */;
    %155 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
    %156 = %149.1;
    %157 = %154.0;
    (%155, %156, meta[relay.Constant][6] /* ty=Tensor[(1, 320), float64] */, %157, meta[relay.Constant][7] /* ty=Tensor[(1, 280), float64] */)
  };
  %158() /* ty=(Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(1, 320), float64], Tensor[(2, 14, 10), float64], Tensor[(1, 280), float64]) */
}

def @func_8857() -> (Tensor[(4, 6, 8), float32],) {
  %167 = fn () -> (Tensor[(4, 6, 8), float32],) {
    %159 = cast(meta[relay.Constant][8] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %160 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 6, 8), uint16] */, dtype="uint16") /* ty=Tensor[(4, 6, 8), uint16] */;
    %161 = bitwise_xor(%159, %160) /* ty=Tensor[(4, 6, 8), uint16] */;
    %162 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 6, 8), uint16] */, dtype="float32") /* ty=Tensor[(4, 6, 8), float32] */;
    %163 = shape_of(%161, dtype="int32") /* ty=Tensor[(3), int32] */;
    %164 = cast(%161, dtype="float32") /* ty=Tensor[(4, 6, 8), float32] */;
    %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %166 = divide(%164, %165) /* ty=Tensor[(4, 6, 8), float32] */;
    (%166,)
  };
  %167() /* ty=(Tensor[(4, 6, 8), float32],) */
}

def @func_3123(%var_3119: float32, %var_3120: Tensor[(1, 9), float32], %var_3121: Tensor[(280), float64], %var_3122: Tensor[(156), float32]) -> (Tensor[(1, 9), float32], Tensor[(16, 10, 5), float32], Tensor[(280), float64], Tensor[(2, 14, 10), float64], Tensor[(250), uint16], Tensor[(1, 12, 13), float32], Tensor[(156), float32]) {
  %187 = fn (%var_3044: float32, %var_3045: Tensor[(1, 9), float32], %var_3050: Tensor[(280), float64], %var_3108: Tensor[(156), float32]) -> (Tensor[(1, 9), float32], Tensor[(16, 10, 5), float32], Tensor[(280), float64], Tensor[(2, 14, 10), float64], Tensor[(250), uint16], Tensor[(1, 12, 13), float32], Tensor[(156), float32]) {
    %168 = cast(%var_3044, dtype="float32") /* ty=float32 */;
    %169 = cast(%var_3045, dtype="float32") /* ty=Tensor[(1, 9), float32] */;
    %170 = cast(%var_3050, dtype="float64") /* ty=Tensor[(280), float64] */;
    %171 = cast(%var_3050, dtype="float64") /* ty=Tensor[(280), float64] */;
    %172 = reshape(%170, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
    %173 = reshape(%171, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
    %174 = @func_1321(%172, %173) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(16, 10, 5), float32], Tensor[(1, 800), int32]) */;
    %175 = cast(%var_3044, dtype="uint16") /* ty=uint16 */;
    %176 = cast(meta[relay.Constant][10] /* ty=Tensor[(250), uint16] */, dtype="uint16") /* ty=Tensor[(250), uint16] */;
    %177 = reshape(%175, newshape=[]) /* ty=uint16 */;
    %178 = reshape(%176, newshape=[1, 250]) /* ty=Tensor[(1, 250), uint16] */;
    %179 = @func_2377(%177, %178) /* ty=(Tensor[(16, 2), float64], Tensor[(2, 14, 10), float64], Tensor[(280), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(1, 250), uint16]) */;
    %180 = cast(%var_3108, dtype="float32") /* ty=Tensor[(156), float32] */;
    %181 = reshape(%180, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float32] */;
    %182 = @func_197(%181) /* ty=(Tensor[(1, 12, 13), float32], Tensor[(1, 12, 13), float32]) */;
    %183 = maximum(%168, %169) /* ty=Tensor[(1, 9), float32] */;
    %184 = %174.1;
    %185 = %179.1;
    %186 = %182.1;
    (%183, %184, %var_3050, %185, meta[relay.Constant][10] /* ty=Tensor[(250), uint16] */, %186, %var_3108)
  };
  %187(%var_3119, %var_3120, %var_3121, %var_3122) /* ty=(Tensor[(1, 9), float32], Tensor[(16, 10, 5), float32], Tensor[(280), float64], Tensor[(2, 14, 10), float64], Tensor[(250), uint16], Tensor[(1, 12, 13), float32], Tensor[(156), float32]) */
}

def @func_6192(%var_6191: Tensor[(70, 4), float64]) -> (Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(70, 4), float64]) {
  %196 = fn (%var_6185: Tensor[(70, 4), float64]) -> (Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(70, 4), float64]) {
    %188 = @func_3857() /* ty=(Tensor[(16, 2), float64],) */;
    %189 = cast(%var_6185, dtype="float64") /* ty=Tensor[(70, 4), float64] */;
    %190 = cast(%var_6185, dtype="float64") /* ty=Tensor[(70, 4), float64] */;
    %191 = reshape(%189, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
    %192 = reshape(%190, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
    %193 = @func_1321(%191, %192) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(16, 10, 5), float32], Tensor[(1, 800), int32]) */;
    %194 = %188.0;
    %195 = %193.1;
    (%194, %195, %var_6185)
  };
  %196(%var_6191) /* ty=(Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(70, 4), float64]) */
}

def @func_7222() -> (Tensor[(16, 2), float64],) {
  %198 = fn () -> (Tensor[(16, 2), float64],) {
    %197 = @func_5455() /* ty=Tensor[(16, 2), float64] */;
    (%197,)
  };
  %198() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_8083(%var_8081: float32, %var_8082: Tensor[(9, 1), float32]) -> (Tensor[(16, 2), float64], Tensor[(9, 156), int16], Tensor[(9, 1), bool], Tensor[(16, 2), float64], Tensor[(780), float64]) {
  %216 = fn (%var_8044: float32, %var_8045: Tensor[(9, 1), float32]) -> (Tensor[(16, 2), float64], Tensor[(9, 156), int16], Tensor[(9, 1), bool], Tensor[(16, 2), float64], Tensor[(780), float64]) {
    %199 = @func_6625() /* ty=(Tensor[(16, 2), float64],) */;
    %200 = cast(%var_8044, dtype="float32") /* ty=float32 */;
    %201 = cast(%var_8045, dtype="float32") /* ty=Tensor[(9, 1), float32] */;
    %202 = reshape(%200, newshape=[]) /* ty=float32 */;
    %203 = reshape(%201, newshape=[9]) /* ty=Tensor[(9), float32] */;
    %204 = @func_3803(%202, %203) /* ty=(Tensor[(16, 2), float64], Tensor[(250), uint16], float32, Tensor[(9), float32], Tensor[(280), float64], Tensor[(156), float32]) */;
    %205 = %204.5;
    %206 = cast(%205, dtype="int16") /* ty=Tensor[(156), int16] */;
    %207 = cast(%var_8045, dtype="int16") /* ty=Tensor[(9, 1), int16] */;
    %208 = cast(%var_8045, dtype="bool") /* ty=Tensor[(9, 1), bool] */;
    %209 = cast(%var_8044, dtype="bool") /* ty=bool */;
    %210 = @func_6953() /* ty=(Tensor[(1014), bool], Tensor[(16, 2), float64]) */;
    %211 = %199.0;
    %212 = bitwise_and(%206, %207) /* ty=Tensor[(9, 156), int16] */;
    %213 = not_equal(%208, %209) /* ty=Tensor[(9, 1), bool] */;
    %214 = %210.1;
    %215 = @func_5547() /* ty=Tensor[(780), float64] */;
    (%211, %212, %213, %214, %215)
  };
  %216(%var_8081, %var_8082) /* ty=(Tensor[(16, 2), float64], Tensor[(9, 156), int16], Tensor[(9, 1), bool], Tensor[(16, 2), float64], Tensor[(780), float64]) */
}

def @func_1324(%var_1322: Tensor[(2, 14, 10), float64], %var_1323: Tensor[(2, 14, 10), float64]) -> (Tensor[(2, 14, 10), float64], Tensor[(16, 10, 5), float32], Tensor[(1, 800), int32]) {
  %228 = fn (%var_1307: Tensor[(2, 14, 10), float64], %var_1308: Tensor[(2, 14, 10), float64]) -> (Tensor[(2, 14, 10), float64], Tensor[(16, 10, 5), float32], Tensor[(1, 800), int32]) {
    %217 = cast(%var_1308, dtype="float64") /* ty=Tensor[(2, 14, 10), float64] */;
    %218 = shape_of(%var_1307, dtype="int32") /* ty=Tensor[(3), int32] */;
    %219 = cast(%var_1307, dtype="float64") /* ty=Tensor[(2, 14, 10), float64] */;
    %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %221 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 800), int32] */, dtype="int32") /* ty=Tensor[(1, 800), int32] */;
    %222 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 800), int32] */, dtype="int32") /* ty=Tensor[(1, 800), int32] */;
    %223 = reshape(%221, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
    %224 = reshape(%222, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
    %225 = @func_517(%223, %224) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(16, 10, 5), float32], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(16, 10, 5), float32]) */;
    %226 = floor_mod(%219, %220) /* ty=Tensor[(2, 14, 10), float64] */;
    %227 = %225.1;
    (%226, %227, meta[relay.Constant][11] /* ty=Tensor[(1, 800), int32] */)
  };
  %228(%var_1322, %var_1323) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(16, 10, 5), float32], Tensor[(1, 800), int32]) */
}

def @func_2609() -> Tensor[(1014), float32] {
  @func_2607() /* ty=Tensor[(1014), float32] */
}

def @func_4758(%var_4753: Tensor[(13, 12, 4), bool], %var_4754: Tensor[(13, 12, 4), bool]) -> (Tensor[(13, 12, 4), bool],) {
  %229 = cast(%var_4754, dtype="bool") /* ty=Tensor[(13, 12, 4), bool] */;
  %230 = shape_of(%var_4753, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%var_4753, dtype="bool") /* ty=Tensor[(13, 12, 4), bool] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %233 = logical_and(%231, %232) /* ty=Tensor[(13, 12, 4), bool] */;
  (%233,)
}

def @func_8837(%var_8835: Tensor[(1, 3, 11), float64], %var_8836: Tensor[(11, 3, 11), float64]) -> (Tensor[(11, 3, 11), float64], Tensor[(11, 3, 11), float64], Tensor[(11, 3, 11), bool]) {
  %247 = fn (%var_8804: Tensor[(1, 3, 11), float64], %var_8805: Tensor[(11, 3, 11), float64]) -> (Tensor[(11, 3, 11), float64], Tensor[(11, 3, 11), float64], Tensor[(11, 3, 11), bool]) {
    %234 = cast(%var_8804, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
    %235 = cast(%var_8805, dtype="float64") /* ty=Tensor[(11, 3, 11), float64] */;
    %236 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 3, 11), float64] */, dtype="float64") /* ty=Tensor[(11, 3, 11), float64] */;
    %237 = shape_of(%var_8805, dtype="int32") /* ty=Tensor[(3), int32] */;
    %238 = cast(%var_8805, dtype="float64") /* ty=Tensor[(11, 3, 11), float64] */;
    %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %240 = cast(%var_8805, dtype="bool") /* ty=Tensor[(11, 3, 11), bool] */;
    %241 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(11, 3, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %242 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 3, 11), float64] */, dtype="bool") /* ty=Tensor[(11, 3, 11), bool] */;
    %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %244 = add(%234, %235) /* ty=Tensor[(11, 3, 11), float64] */;
    %245 = floor_mod(%238, %239) /* ty=Tensor[(11, 3, 11), float64] */;
    %246 = logical_and(%242, %243) /* ty=Tensor[(11, 3, 11), bool] */;
    (%244, %245, %246)
  };
  %247(%var_8835, %var_8836) /* ty=(Tensor[(11, 3, 11), float64], Tensor[(11, 3, 11), float64], Tensor[(11, 3, 11), bool]) */
}

def @func_4062(%var_4024: Tensor[(1014), bool]) -> (Tensor[(1014), float64], Tensor[(1014), float32], Tensor[(13, 13, 6), float32]) {
  %248 = @func_3979() /* ty=Tensor[(1014), bool] */;
  %249 = cast(%var_4024, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %250 = shape_of(%248, dtype="int32") /* ty=Tensor[(1), int32] */;
  %251 = cast(%248, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?), float64] */;
  %253 = cast(%var_4024, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %254 = shape_of(%248, dtype="int32") /* ty=Tensor[(1), int32] */;
  %255 = cast(%248, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?), bool] */;
  %257 = greater_equal(%255, %256) /* ty=Tensor[(1014), bool] */;
  %258 = cast(%257, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %259 = asin(%258) /* ty=Tensor[(1014), float32] */;
  %260 = cast(%259, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %261 = cast(%257, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %262 = reshape(%261, newshape=[13, 13, 6]) /* ty=Tensor[(13, 13, 6), float32] */;
  %263 = @func_1406(%262) /* ty=(Tensor[(13, 13, 6), float32],) */;
  %264 = subtract(%251, %252) /* ty=Tensor[(1014), float64] */;
  %265 = sin(%260) /* ty=Tensor[(1014), float32] */;
  %266 = %263.0;
  (%264, %265, %266)
}

def @func_5742() -> (Tensor[(1014), float32],) {
  %270 = fn () -> (Tensor[(1014), float32],) {
    %267 = @func_3979() /* ty=Tensor[(1014), bool] */;
    %268 = cast(%267, dtype="float32") /* ty=Tensor[(1014), float32] */;
    %269 = atanh(%268) /* ty=Tensor[(1014), float32] */;
    (%269,)
  };
  %270() /* ty=(Tensor[(1014), float32],) */
}

def @func_2831(%var_2792: Tensor[(8, 10, 4), float64]) -> (Tensor[(8, 10, 4), float64], Tensor[(1014), float32]) {
  %271 = cast(%var_2792, dtype="float64") /* ty=Tensor[(8, 10, 4), float64] */;
  %272 = atan(%271) /* ty=Tensor[(8, 10, 4), float64] */;
  %273 = @func_2607() /* ty=Tensor[(1014), float32] */;
  (%272, %273)
}

def @func_2380(%var_2378: uint16, %var_2379: Tensor[(1, 250), uint16]) -> (Tensor[(16, 2), float64], Tensor[(2, 14, 10), float64], Tensor[(280), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(1, 250), uint16]) {
  %287 = fn (%var_2340: uint16, %var_2341: Tensor[(1, 250), uint16]) -> (Tensor[(16, 2), float64], Tensor[(2, 14, 10), float64], Tensor[(280), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(1, 250), uint16]) {
    %274 = @func_1932() /* ty=(Tensor[(16, 2), float64],) */;
    %275 = cast(meta[relay.Constant][13] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %276 = cast(meta[relay.Constant][13] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %277 = reshape(%275, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
    %278 = reshape(%276, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
    %279 = @func_1321(%277, %278) /* ty=(Tensor[(2, 14, 10), float64], Tensor[(16, 10, 5), float32], Tensor[(1, 800), int32]) */;
    %280 = cast(%var_2340, dtype="uint16") /* ty=uint16 */;
    %281 = cast(%var_2341, dtype="uint16") /* ty=Tensor[(1, 250), uint16] */;
    %282 = reshape(%280, newshape=[]) /* ty=uint16 */;
    %283 = reshape(%281, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
    %284 = %274.0;
    %285 = %279.0;
    %286 = @func_2110(%282, %283) /* ty=Tensor[(10, 5, 5), uint16] */;
    (%284, %285, meta[relay.Constant][13] /* ty=Tensor[(280), float64] */, %286, %var_2340, %var_2341)
  };
  %287(%var_2378, %var_2379) /* ty=(Tensor[(16, 2), float64], Tensor[(2, 14, 10), float64], Tensor[(280), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(1, 250), uint16]) */
}

def @func_2906() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %290 = fn () -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
    %288 = @func_2862() /* ty=Tensor[(16, 2), float64] */;
    %289 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
    (%288, %289)
  };
  %290() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */
}

def @func_1408(%var_1407: Tensor[(13, 13, 6), float32]) -> (Tensor[(13, 13, 6), float32],) {
  %296 = fn (%var_1402: Tensor[(13, 13, 6), float32]) -> (Tensor[(13, 13, 6), float32],) {
    %291 = cast(%var_1402, dtype="float32") /* ty=Tensor[(13, 13, 6), float32] */;
    %292 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(13, 13, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %293 = cast(meta[relay.Constant][14] /* ty=Tensor[(13, 13, 6), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 6), float32] */;
    %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %295 = floor_divide(%293, %294) /* ty=Tensor[(13, 13, 6), float32] */;
    (%295,)
  };
  %296(%var_1407) /* ty=(Tensor[(13, 13, 6), float32],) */
}

def @func_4713() -> (Tensor[(16, 2), float64],) {
  @func_4711() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_6032() -> (Tensor[(1014), float32], Tensor[(1014), float64]) {
  @func_6030() /* ty=(Tensor[(1014), float32], Tensor[(1014), float64]) */
}

def @func_5651() -> Tensor[(1014), float32] {
  @func_5649() /* ty=Tensor[(1014), float32] */
}

def @func_6114() -> (Tensor[(1014), float32], Tensor[(1014), float64]) {
  @func_6112() /* ty=(Tensor[(1014), float32], Tensor[(1014), float64]) */
}

def @func_6625() -> (Tensor[(16, 2), float64],) {
  %297 = @func_4711() /* ty=(Tensor[(16, 2), float64],) */;
  %298 = %297.0;
  (%298,)
}

def @func_4678() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64], Tensor[(16, 2), float64]) {
  %299 = @func_2905() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %300 = cast(meta[relay.Constant][15] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %301 = reshape(%300, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), float64] */;
  %302 = @func_760(%301) /* ty=(Tensor[(5, 12, 13), float64],) */;
  %303 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
  %304 = %299.1;
  %305 = %302.0;
  %306 = @func_2862() /* ty=Tensor[(16, 2), float64] */;
  (%303, %304, %305, meta[relay.Constant][15] /* ty=Tensor[(780), float64] */, %306)
}

def @func_3389() -> (Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) {
  %323 = fn () -> (Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) {
    %307 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
    %308 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 6, 8), float32] */, dtype="float32") /* ty=Tensor[(11, 6, 8), float32] */;
    %309 = sin(%308) /* ty=Tensor[(11, 6, 8), float32] */;
    %310 = cast(%309, dtype="float32") /* ty=Tensor[(11, 6, 8), float32] */;
    %311 = log2(%310) /* ty=Tensor[(11, 6, 8), float32] */;
    %312 = cast(%311, dtype="float32") /* ty=Tensor[(11, 6, 8), float32] */;
    %313 = asinh(%312) /* ty=Tensor[(11, 6, 8), float32] */;
    %314 = cast(%313, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
    %315 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
    %316 = cast(%311, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
    %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %318 = logical_and(%316, %317) /* ty=Tensor[(11, 6, 8), bool] */;
    %319 = cast(%318, dtype="float32") /* ty=Tensor[(11, 6, 8), float32] */;
    %320 = %307.2;
    %321 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
    %322 = sinh(%319) /* ty=Tensor[(11, 6, 8), float32] */;
    (%320, %321, %322)
  };
  %323() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */
}

def @func_5649() -> Tensor[(1014), float32] {
  %324 = @func_3149() /* ty=(Tensor[(1014), float32],) */;
  %324.0
}

def @func_6112() -> (Tensor[(1014), float32], Tensor[(1014), float64]) {
  %325 = @func_5741() /* ty=(Tensor[(1014), float32],) */;
  %326 = @func_2607() /* ty=Tensor[(1014), float32] */;
  %327 = cast(%326, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %328 = %325.0;
  %329 = exp(%327) /* ty=Tensor[(1014), float64] */;
  (%328, %329)
}

def @func_6760(%var_6758: Tensor[(1014), float32]) -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(1014), bool], Tensor[(1014), float32], Tensor[(1014), float64]) {
  @func_6757(%var_6758) /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(1014), bool], Tensor[(1014), float32], Tensor[(1014), float64]) */
}

def @func_7512() -> (Tensor[(1014), float32],) {
  %334 = fn () -> (Tensor[(1014), float32],) {
    %330 = @func_3149() /* ty=(Tensor[(1014), float32],) */;
    %331 = %330.0;
    %332 = cast(%331, dtype="float32") /* ty=Tensor[(1014), float32] */;
    %333 = tan(%332) /* ty=Tensor[(1014), float32] */;
    (%333,)
  };
  %334() /* ty=(Tensor[(1014), float32],) */
}

def @func_1969() -> Tensor[(16, 2), float64] {
  %335 = fn () -> Tensor[(16, 2), float64] {
    @func_1913() /* ty=Tensor[(16, 2), float64] */
  };
  %335() /* ty=Tensor[(16, 2), float64] */
}

def @func_9609() -> (Tensor[(16, 2), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) {
  %343 = fn () -> (Tensor[(16, 2), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) {
    %336 = @func_4701() /* ty=(Tensor[(16, 2), float64],) */;
    %337 = cast(meta[relay.Constant][17] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %338 = cast(meta[relay.Constant][18] /* ty=Tensor[(250), uint16] */, dtype="uint16") /* ty=Tensor[(250), uint16] */;
    %339 = reshape(%337, newshape=[]) /* ty=uint16 */;
    %340 = reshape(%338, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
    %341 = %336.0;
    %342 = @func_2110(%339, %340) /* ty=Tensor[(10, 5, 5), uint16] */;
    (%341, %342, meta[relay.Constant][17] /* ty=uint16 */, meta[relay.Constant][18] /* ty=Tensor[(250), uint16] */)
  };
  %343() /* ty=(Tensor[(16, 2), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) */
}

def @func_7896() -> Tensor[(1014), float32] {
  %347 = fn () -> Tensor[(1014), float32] {
    %344 = @func_6877() /* ty=(Tensor[(16, 2), float64], Tensor[(1014), bool]) */;
    %345 = %344.1;
    %346 = cast(%345, dtype="float32") /* ty=Tensor[(1014), float32] */;
    cos(%346) /* ty=Tensor[(1014), float32] */
  };
  %347() /* ty=Tensor[(1014), float32] */
}

def @func_3208() -> (Tensor[(16, 2), float64],) {
  %348 = @func_1932() /* ty=(Tensor[(16, 2), float64],) */;
  %349 = %348.0;
  (%349,)
}

def @func_3944() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  @func_3942() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */
}

def @func_4908(%var_4862: Tensor[(9, 12, 14), bool]) -> (Tensor[(9, 12, 14), bool], Tensor[(9, 12, 14), float64], Tensor[(11, 6, 8), float32]) {
  %350 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 12, 14), bool] */, dtype="bool") /* ty=Tensor[(9, 12, 14), bool] */;
  %351 = shape_of(%var_4862, dtype="int32") /* ty=Tensor[(3), int32] */;
  %352 = cast(%var_4862, dtype="bool") /* ty=Tensor[(9, 12, 14), bool] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %354 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 12, 14), bool] */, dtype="float64") /* ty=Tensor[(9, 12, 14), float64] */;
  %355 = @func_3388() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */;
  %356 = logical_and(%352, %353) /* ty=Tensor[(9, 12, 14), bool] */;
  %357 = erf(%354) /* ty=Tensor[(9, 12, 14), float64] */;
  %358 = %355.2;
  (%356, %357, %358)
}

def @func_7070(%var_7056: Tensor[(11, 6, 8), float32]) -> (Tensor[(11, 6, 8), bool], Tensor[(16, 2), float64], Tensor[(11, 6, 8), int16]) {
  %359 = @func_5821() /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 6, 8), float32], Tensor[(7, 52), float64]) */;
  %360 = %359.1;
  %361 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 6, 8), float32] */, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %362 = shape_of(%360, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%360, dtype="bool") /* ty=Tensor[(11, 6, 8), bool] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %365 = cast(%var_7056, dtype="int16") /* ty=Tensor[(11, 6, 8), int16] */;
  %366 = shape_of(%360, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%360, dtype="int16") /* ty=Tensor[(11, 6, 8), int16] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %369 = greater_equal(%363, %364) /* ty=Tensor[(11, 6, 8), bool] */;
  %370 = @func_1968() /* ty=Tensor[(16, 2), float64] */;
  %371 = bitwise_xor(%367, %368) /* ty=Tensor[(11, 6, 8), int16] */;
  (%369, %370, %371)
}

def @func_4781(%var_4777: Tensor[(364), float64]) -> (Tensor[(11, 6, 8), float32], Tensor[(3, 14, 10), float32], Tensor[(420, 1), float32], Tensor[(7, 13, 1), float64], Tensor[(91), float64], Tensor[(364), float64]) {
  %372 = @func_3388() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */;
  %373 = cast(meta[relay.Constant][21] /* ty=Tensor[(420, 1), float32] */, dtype="float32") /* ty=Tensor[(420, 1), float32] */;
  %374 = reshape(%373, newshape=[3, 14, 10]) /* ty=Tensor[(3, 14, 10), float32] */;
  %375 = cast(meta[relay.Constant][22] /* ty=Tensor[(91), float64] */, dtype="float64") /* ty=Tensor[(91), float64] */;
  %376 = cast(%var_4777, dtype="float64") /* ty=Tensor[(364), float64] */;
  %377 = reshape(%375, newshape=[7, 13, 1]) /* ty=Tensor[(7, 13, 1), float64] */;
  %378 = reshape(%376, newshape=[7, 13, 4]) /* ty=Tensor[(7, 13, 4), float64] */;
  %379 = @func_2731(%377, %378) /* ty=(Tensor[(7, 13, 1), float64], Tensor[(7, 13, 4), uint32], Tensor[(10, 14, 12), uint32], Tensor[(12, 140), uint32]) */;
  %380 = %372.2;
  %381 = @func_1663(%374) /* ty=Tensor[(3, 14, 10), float32] */;
  %382 = %379.0;
  (%380, %381, meta[relay.Constant][21] /* ty=Tensor[(420, 1), float32] */, %382, meta[relay.Constant][22] /* ty=Tensor[(91), float64] */, %var_4777)
}

def @func_520(%var_518: Tensor[(16, 10, 5), int32], %var_519: Tensor[(16, 10, 5), int32]) -> (Tensor[(16, 10, 5), bool], Tensor[(16, 10, 5), float32], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(16, 10, 5), float32]) {
  %396 = fn (%var_473: Tensor[(16, 10, 5), int32], %var_474: Tensor[(16, 10, 5), int32]) -> (Tensor[(16, 10, 5), bool], Tensor[(16, 10, 5), float32], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(16, 10, 5), float32]) {
    %383 = cast(%var_474, dtype="bool") /* ty=Tensor[(16, 10, 5), bool] */;
    %384 = shape_of(%var_473, dtype="int32") /* ty=Tensor[(3), int32] */;
    %385 = cast(%var_473, dtype="bool") /* ty=Tensor[(16, 10, 5), bool] */;
    %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %387 = cast(%var_474, dtype="float32") /* ty=Tensor[(16, 10, 5), float32] */;
    %388 = cast(meta[relay.Constant][23] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %389 = reshape(%388, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float32] */;
    %390 = @func_197(%389) /* ty=(Tensor[(1, 12, 13), float32], Tensor[(1, 12, 13), float32]) */;
    %391 = cast(%var_473, dtype="float32") /* ty=Tensor[(16, 10, 5), float32] */;
    %392 = not_equal(%385, %386) /* ty=Tensor[(16, 10, 5), bool] */;
    %393 = asinh(%387) /* ty=Tensor[(16, 10, 5), float32] */;
    %394 = %390.0;
    %395 = atan(%391) /* ty=Tensor[(16, 10, 5), float32] */;
    (%392, %393, %394, meta[relay.Constant][23] /* ty=Tensor[(156), float32] */, %395)
  };
  %396(%var_518, %var_519) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(16, 10, 5), float32], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(16, 10, 5), float32]) */
}

def @func_8946() -> (Tensor[(16, 2), float64], Tensor[(780), float64], Tensor[(16, 2), float64]) {
  %397 = @func_3942() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %398 = @func_5455() /* ty=Tensor[(16, 2), float64] */;
  %399 = @func_5547() /* ty=Tensor[(780), float64] */;
  %400 = %397.0;
  (%398, %399, %400)
}

def @func_6657() -> Tensor[(16, 2), float64] {
  @func_6655() /* ty=Tensor[(16, 2), float64] */
}

def @func_5361() -> (Tensor[(1014), float32],) {
  %402 = fn () -> (Tensor[(1014), float32],) {
    %401 = @func_2607() /* ty=Tensor[(1014), float32] */;
    (%401,)
  };
  %402() /* ty=(Tensor[(1014), float32],) */
}

def @func_197(%var_181: Tensor[(1, 12, 13), float32]) -> (Tensor[(1, 12, 13), float32], Tensor[(1, 12, 13), float32]) {
  %403 = cast(%var_181, dtype="float32") /* ty=Tensor[(1, 12, 13), float32] */;
  %404 = cast(%var_181, dtype="float32") /* ty=Tensor[(1, 12, 13), float32] */;
  %405 = acosh(%403) /* ty=Tensor[(1, 12, 13), float32] */;
  %406 = cosh(%404) /* ty=Tensor[(1, 12, 13), float32] */;
  (%405, %406)
}

def @func_3859() -> (Tensor[(16, 2), float64],) {
  @func_3857() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_9432(%var_9430: Tensor[(8, 12, 8), float64]) -> (Tensor[(8, 12, 8), float64],) {
  @func_9429(%var_9430) /* ty=(Tensor[(8, 12, 8), float64],) */
}

def @func_7718(%var_7689: Tensor[(1014), float64]) -> (Tensor[(1014), uint16], Tensor[(1014), bool], Tensor[(1014), float32]) {
  %407 = @func_6030() /* ty=(Tensor[(1014), float32], Tensor[(1014), float64]) */;
  %408 = %407.1;
  %409 = cast(%var_7689, dtype="uint16") /* ty=Tensor[(1014), uint16] */;
  %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(1), int32] */;
  %411 = cast(%408, dtype="uint16") /* ty=Tensor[(1014), uint16] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %413 = @func_3149() /* ty=(Tensor[(1014), float32],) */;
  %414 = bitwise_or(%411, %412) /* ty=Tensor[(1014), uint16] */;
  %415 = @func_3979() /* ty=Tensor[(1014), bool] */;
  %416 = %413.0;
  (%414, %415, %416)
}

def @func_7279() -> (Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(16, 2), float64]) {
  @func_7277() /* ty=(Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(16, 2), float64]) */
}

def @func_3857() -> (Tensor[(16, 2), float64],) {
  %417 = @func_3169() /* ty=(Tensor[(16, 2), float64],) */;
  %418 = %417.0;
  (%418,)
}

def @func_5821() -> (Tensor[(16, 10, 5), bool], Tensor[(11, 6, 8), float32], Tensor[(7, 52), float64]) {
  %419 = @func_3911() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 10, 5), bool]) */;
  %420 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 52), float64] */, dtype="float64") /* ty=Tensor[(7, 52), float64] */;
  %421 = reshape(%420, newshape=[364]) /* ty=Tensor[(364), float64] */;
  %422 = @func_4781(%421) /* ty=(Tensor[(11, 6, 8), float32], Tensor[(3, 14, 10), float32], Tensor[(420, 1), float32], Tensor[(7, 13, 1), float64], Tensor[(91), float64], Tensor[(364), float64]) */;
  %423 = %419.1;
  %424 = %422.0;
  (%423, %424, meta[relay.Constant][24] /* ty=Tensor[(7, 52), float64] */)
}

def @func_8568(%var_8567: uint16) -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], uint16, Tensor[(250), uint16], Tensor[(16, 2), float64]) {
  %435 = fn (%var_8555: uint16) -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], uint16, Tensor[(250), uint16], Tensor[(16, 2), float64]) {
    %425 = @func_4491() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
    %426 = cast(%var_8555, dtype="uint16") /* ty=uint16 */;
    %427 = cast(meta[relay.Constant][25] /* ty=Tensor[(250), uint16] */, dtype="uint16") /* ty=Tensor[(250), uint16] */;
    %428 = reshape(%426, newshape=[]) /* ty=uint16 */;
    %429 = reshape(%427, newshape=[1, 250]) /* ty=Tensor[(1, 250), uint16] */;
    %430 = @func_2654(%428, %429) /* ty=(Tensor[(16, 2), float64], uint16, Tensor[(1, 250), uint16], Tensor[(10, 5, 5), float32]) */;
    %431 = @func_2905() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
    %432 = %425.0;
    %433 = %430.0;
    %434 = %431.0;
    (%432, %433, %var_8555, meta[relay.Constant][25] /* ty=Tensor[(250), uint16] */, %434)
  };
  %435(%var_8567) /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], uint16, Tensor[(250), uint16], Tensor[(16, 2), float64]) */
}

def @func_1665(%var_1664: Tensor[(3, 14, 10), float32]) -> Tensor[(3, 14, 10), float32] {
  %437 = fn (%var_1659: Tensor[(3, 14, 10), float32]) -> Tensor[(3, 14, 10), float32] {
    %436 = cast(%var_1659, dtype="float32") /* ty=Tensor[(3, 14, 10), float32] */;
    cos(%436) /* ty=Tensor[(3, 14, 10), float32] */
  };
  %437(%var_1664) /* ty=Tensor[(3, 14, 10), float32] */
}

def @func_8631(%var_8630: Tensor[(1014), float32]) -> (Tensor[(1014), int32], Tensor[(16, 2), float64], Tensor[(1014), int64], Tensor[(1014), bool]) {
  %453 = fn (%var_8597: Tensor[(1014), float32]) -> (Tensor[(1014), int32], Tensor[(16, 2), float64], Tensor[(1014), int64], Tensor[(1014), bool]) {
    %438 = @func_2607() /* ty=Tensor[(1014), float32] */;
    %439 = cast(%var_8597, dtype="int32") /* ty=Tensor[(1014), int32] */;
    %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(1), int32] */;
    %441 = cast(%438, dtype="int32") /* ty=Tensor[(1014), int32] */;
    %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?), int32] */;
    %443 = @func_3169() /* ty=(Tensor[(16, 2), float64],) */;
    %444 = cast(%var_8597, dtype="int64") /* ty=Tensor[(1014), int64] */;
    %445 = shape_of(%438, dtype="int32") /* ty=Tensor[(1), int32] */;
    %446 = cast(%438, dtype="int64") /* ty=Tensor[(1014), int64] */;
    %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?), int64] */;
    %448 = @func_5775() /* ty=(Tensor[(1014), bool],) */;
    %449 = bitwise_and(%441, %442) /* ty=Tensor[(1014), int32] */;
    %450 = %443.0;
    %451 = right_shift(%446, %447) /* ty=Tensor[(1014), int64] */;
    %452 = %448.0;
    (%449, %450, %451, %452)
  };
  %453(%var_8630) /* ty=(Tensor[(1014), int32], Tensor[(16, 2), float64], Tensor[(1014), int64], Tensor[(1014), bool]) */
}

def @func_4212(%var_4210: Tensor[(1, 1014), bool], %var_4211: Tensor[(1200), float64]) -> (Tensor[(16, 2), float64], Tensor[(1014), float64], Tensor[(1, 1014), float32], Tensor[(15, 10, 8), float32], Tensor[(1200), float64], Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32]) {
  %473 = fn (%var_4181: Tensor[(1, 1014), bool], %var_4189: Tensor[(1200), float64]) -> (Tensor[(16, 2), float64], Tensor[(1014), float64], Tensor[(1, 1014), float32], Tensor[(15, 10, 8), float32], Tensor[(1200), float64], Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32]) {
    %454 = cast(%var_4181, dtype="bool") /* ty=Tensor[(1, 1014), bool] */;
    %455 = reshape(%454, newshape=[1014]) /* ty=Tensor[(1014), bool] */;
    %456 = @func_4062(%455) /* ty=(Tensor[(1014), float64], Tensor[(1014), float32], Tensor[(13, 13, 6), float32]) */;
    %457 = cast(%var_4181, dtype="float32") /* ty=Tensor[(1, 1014), float32] */;
    %458 = cast(%var_4189, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %459 = reshape(%458, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float64] */;
    %460 = @func_864(%459) /* ty=(Tensor[(16, 10, 5), float32], Tensor[(800), int32], Tensor[(15, 10, 8), float32], Tensor[(5, 12, 13), float64], Tensor[(130, 6), float64], Tensor[(15, 10, 8), bool]) */;
    %461 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
    %462 = cast(%var_4181, dtype="float32") /* ty=Tensor[(1, 1014), float32] */;
    %463 = reshape(%462, newshape=[13, 13, 6]) /* ty=Tensor[(13, 13, 6), float32] */;
    %464 = @func_1406(%463) /* ty=(Tensor[(13, 13, 6), float32],) */;
    %465 = %464.0;
    %466 = cast(%465, dtype="float32") /* ty=Tensor[(13, 13, 6), float32] */;
    %467 = @func_2862() /* ty=Tensor[(16, 2), float64] */;
    %468 = %456.0;
    %469 = exp(%457) /* ty=Tensor[(1, 1014), float32] */;
    %470 = %460.2;
    %471 = %461.0;
    %472 = sqrt(%466) /* ty=Tensor[(13, 13, 6), float32] */;
    (%467, %468, %469, %470, %var_4189, %471, %472)
  };
  %473(%var_4210, %var_4211) /* ty=(Tensor[(16, 2), float64], Tensor[(1014), float64], Tensor[(1, 1014), float32], Tensor[(15, 10, 8), float32], Tensor[(1200), float64], Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32]) */
}

def @func_8779() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  @func_8777() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */
}

def @func_5630() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %477 = fn () -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
    %474 = @func_4678() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64], Tensor[(16, 2), float64]) */;
    %475 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
    %476 = %474.1;
    (%475, %476)
  };
  %477() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */
}

def @func_6391() -> Tensor[(1014), float32] {
  @func_6389() /* ty=Tensor[(1014), float32] */
}

def @func_6609() -> (Tensor[(1014), float64],) {
  @func_6607() /* ty=(Tensor[(1014), float64],) */
}

def @func_9411() -> Tensor[(16, 2), float64] {
  %479 = fn () -> Tensor[(16, 2), float64] {
    %478 = @func_3388() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */;
    %478.1
  };
  %479() /* ty=Tensor[(16, 2), float64] */
}

def @func_8680(%var_8673: Tensor[(6, 5, 8), int32]) -> (Tensor[(6, 5, 8), bool], Tensor[(1014), float32]) {
  %480 = cast(%var_8673, dtype="bool") /* ty=Tensor[(6, 5, 8), bool] */;
  %481 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(6, 5, 8), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(meta[relay.Constant][26] /* ty=Tensor[(6, 5, 8), int32] */, dtype="bool") /* ty=Tensor[(6, 5, 8), bool] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %484 = @func_5360() /* ty=(Tensor[(1014), float32],) */;
  %485 = greater(%482, %483) /* ty=Tensor[(6, 5, 8), bool] */;
  %486 = %484.0;
  (%485, %486)
}

def @func_6879() -> (Tensor[(16, 2), float64], Tensor[(1014), bool]) {
  @func_6877() /* ty=(Tensor[(16, 2), float64], Tensor[(1014), bool]) */
}

def @func_3942() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %487 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %488 = @func_3169() /* ty=(Tensor[(16, 2), float64],) */;
  %489 = %487.0;
  %490 = %488.0;
  (%489, %490)
}

def @func_5494() -> Tensor[(1014), bool] {
  @func_5492() /* ty=Tensor[(1014), bool] */
}

def @func_3210() -> (Tensor[(16, 2), float64],) {
  @func_3208() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_4406(%var_4386: Tensor[(22, 3), float32]) -> (Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(78, 2), float32], Tensor[(22, 3), float32], Tensor[(12, 140), int64], Tensor[(12, 140), float64]) {
  %491 = @func_3839() /* ty=(Tensor[(16, 2), float64],) */;
  %492 = cast(%var_4386, dtype="float32") /* ty=Tensor[(22, 3), float32] */;
  %493 = reshape(%492, newshape=[6, 1, 11]) /* ty=Tensor[(6, 1, 11), float32] */;
  %494 = @func_3595(%493) /* ty=(Tensor[(6, ?, 11), float32], Tensor[(16, 2), float64], Tensor[(1, 12, 13), float32], Tensor[(78, 2), float32]) */;
  %495 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 140), uint32] */, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %496 = atanh(%495) /* ty=Tensor[(12, 140), float64] */;
  %497 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 140), uint32] */, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %498 = shape_of(%496, dtype="int32") /* ty=Tensor[(2), int32] */;
  %499 = cast(%496, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %501 = divide(%499, %500) /* ty=Tensor[(12, 140), float32] */;
  %502 = cast(meta[relay.Constant][27] /* ty=Tensor[(12, 140), uint32] */, dtype="uint32") /* ty=Tensor[(12, 140), uint32] */;
  %503 = reshape(%502, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), uint32] */;
  %504 = @func_1300(%503) /* ty=Tensor[(10, 14, 12), uint32] */;
  %505 = cast(%504, dtype="float64") /* ty=Tensor[(10, 14, 12), float64] */;
  %506 = shape_of(%501, dtype="int32") /* ty=Tensor[(2), int32] */;
  %507 = cast(%501, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %509 = floor_mod(%507, %508) /* ty=Tensor[(12, 140), float64] */;
  %510 = cast(%496, dtype="int64") /* ty=Tensor[(12, 140), int64] */;
  %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(2), int32] */;
  %512 = cast(%509, dtype="int64") /* ty=Tensor[(12, 140), int64] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %514 = cast(%496, dtype="float64") /* ty=Tensor[(12, 140), float64] */;
  %515 = @func_2607() /* ty=Tensor[(1014), float32] */;
  %516 = %491.0;
  %517 = %494.3;
  %518 = left_shift(%512, %513) /* ty=Tensor[(12, 140), int64] */;
  %519 = exp(%514) /* ty=Tensor[(12, 140), float64] */;
  (%515, %516, %517, %var_4386, %518, %519)
}

def @func_3994() -> (Tensor[(16, 2), float64],) {
  %522 = fn () -> (Tensor[(16, 2), float64],) {
    %520 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
    %521 = %520.0;
    (%521,)
  };
  %522() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_4954() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %532 = fn () -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
    %523 = @func_4701() /* ty=(Tensor[(16, 2), float64],) */;
    %524 = @func_3942() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
    %525 = @func_3208() /* ty=(Tensor[(16, 2), float64],) */;
    %526 = @func_4701() /* ty=(Tensor[(16, 2), float64],) */;
    %527 = %523.0;
    %528 = %524.1;
    %529 = %525.0;
    %530 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
    %531 = %526.0;
    (%527, %528, %529, %530, %531)
  };
  %532() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */
}

def @func_9136() -> Tensor[(16, 2), float64] {
  %534 = fn () -> Tensor[(16, 2), float64] {
    %533 = @func_4491() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
    %533.1
  };
  %534() /* ty=Tensor[(16, 2), float64] */
}

def @func_4680() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64], Tensor[(16, 2), float64]) {
  @func_4678() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64], Tensor[(16, 2), float64]) */
}

def @func_8395() -> (Tensor[(16, 2), float64],) {
  %536 = fn () -> (Tensor[(16, 2), float64],) {
    %535 = @func_5455() /* ty=Tensor[(16, 2), float64] */;
    (%535,)
  };
  %536() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_7330() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  @func_7328() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */
}

def @main(%var_9729: Tensor[(455), float32]) -> (Tensor[(1014), float32], Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(5, 7, 13), float32]) {
  %537 = @func_2493() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %538 = @func_4713() /* ty=(Tensor[(16, 2), float64],) */;
  %539 = cast(%var_9729, dtype="float32") /* ty=Tensor[(455), float32] */;
  %540 = reshape(%539, newshape=[5, 7, 13]) /* ty=Tensor[(5, 7, 13), float32] */;
  %541 = @func_6338(%540) /* ty=Tensor[(5, 7, 13), float32] */;
  %542 = cast(%var_9729, dtype="float32") /* ty=Tensor[(455), float32] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%541, dtype="float32") /* ty=Tensor[(5, 7, 13), float32] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %546 = @func_7098() /* ty=Tensor[(1014), float32] */;
  %547 = %537.2;
  %548 = %538.0;
  %549 = multiply(%544, %545) /* ty=Tensor[(5, 7, 13), float32] */;
  (%546, %547, %548, %549)
}

def @func_3807(%var_3805: float32, %var_3806: Tensor[(9), float32]) -> (Tensor[(16, 2), float64], Tensor[(250), uint16], float32, Tensor[(9), float32], Tensor[(280), float64], Tensor[(156), float32]) {
  @func_3803(%var_3805, %var_3806) /* ty=(Tensor[(16, 2), float64], Tensor[(250), uint16], float32, Tensor[(9), float32], Tensor[(280), float64], Tensor[(156), float32]) */
}

def @func_4911(%var_4909: Tensor[(9, 12, 14), bool]) -> (Tensor[(9, 12, 14), bool], Tensor[(9, 12, 14), float64], Tensor[(11, 6, 8), float32]) {
  @func_4908(%var_4909) /* ty=(Tensor[(9, 12, 14), bool], Tensor[(9, 12, 14), float64], Tensor[(11, 6, 8), float32]) */
}

def @func_864(%var_828: Tensor[(15, 10, 8), float64]) -> (Tensor[(16, 10, 5), float32], Tensor[(800), int32], Tensor[(15, 10, 8), float32], Tensor[(5, 12, 13), float64], Tensor[(130, 6), float64], Tensor[(15, 10, 8), bool]) {
  %550 = cast(meta[relay.Constant][28] /* ty=Tensor[(800), int32] */, dtype="int32") /* ty=Tensor[(800), int32] */;
  %551 = cast(meta[relay.Constant][28] /* ty=Tensor[(800), int32] */, dtype="int32") /* ty=Tensor[(800), int32] */;
  %552 = reshape(%550, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %553 = reshape(%551, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %554 = @func_517(%552, %553) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(16, 10, 5), float32], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(16, 10, 5), float32]) */;
  %555 = cast(%var_828, dtype="float64") /* ty=Tensor[(15, 10, 8), float64] */;
  %556 = acosh(%555) /* ty=Tensor[(15, 10, 8), float64] */;
  %557 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 10, 8), float64] */, dtype="bool") /* ty=Tensor[(15, 10, 8), bool] */;
  %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%556, dtype="bool") /* ty=Tensor[(15, 10, 8), bool] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %561 = less_equal(%559, %560) /* ty=Tensor[(15, 10, 8), bool] */;
  %562 = cast(%561, dtype="float32") /* ty=Tensor[(15, 10, 8), float32] */;
  %563 = cast(meta[relay.Constant][30] /* ty=Tensor[(130, 6), float64] */, dtype="float64") /* ty=Tensor[(130, 6), float64] */;
  %564 = reshape(%563, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), float64] */;
  %565 = @func_760(%564) /* ty=(Tensor[(5, 12, 13), float64],) */;
  %566 = cast(%var_828, dtype="bool") /* ty=Tensor[(15, 10, 8), bool] */;
  %567 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %568 = cast(%556, dtype="bool") /* ty=Tensor[(15, 10, 8), bool] */;
  %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %570 = %554.1;
  %571 = cos(%562) /* ty=Tensor[(15, 10, 8), float32] */;
  %572 = %565.0;
  %573 = greater(%568, %569) /* ty=Tensor[(15, 10, 8), bool] */;
  (%570, meta[relay.Constant][28] /* ty=Tensor[(800), int32] */, %571, %572, meta[relay.Constant][30] /* ty=Tensor[(130, 6), float64] */, %573)
}

def @func_5823() -> (Tensor[(16, 10, 5), bool], Tensor[(11, 6, 8), float32], Tensor[(7, 52), float64]) {
  @func_5821() /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 6, 8), float32], Tensor[(7, 52), float64]) */
}

def @func_3482(%var_3480: Tensor[(11, 13, 9), float32], %var_3481: Tensor[(11, 13, 9), float32]) -> (Tensor[(11, 13, 9), float32], Tensor[(16, 2), float64], Tensor[(11, 13, 9), float64]) {
  %583 = fn (%var_3449: Tensor[(11, 13, 9), float32], %var_3473: Tensor[(11, 13, 9), float32]) -> (Tensor[(11, 13, 9), float32], Tensor[(16, 2), float64], Tensor[(11, 13, 9), float64]) {
    %574 = cast(%var_3449, dtype="float32") /* ty=Tensor[(11, 13, 9), float32] */;
    %575 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
    %576 = cast(%var_3473, dtype="float64") /* ty=Tensor[(11, 13, 9), float64] */;
    %577 = shape_of(%var_3449, dtype="int32") /* ty=Tensor[(3), int32] */;
    %578 = cast(%var_3449, dtype="float64") /* ty=Tensor[(11, 13, 9), float64] */;
    %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %580 = asinh(%574) /* ty=Tensor[(11, 13, 9), float32] */;
    %581 = %575.0;
    %582 = divide(%578, %579) /* ty=Tensor[(11, 13, 9), float64] */;
    (%580, %581, %582)
  };
  %583(%var_3480, %var_3481) /* ty=(Tensor[(11, 13, 9), float32], Tensor[(16, 2), float64], Tensor[(11, 13, 9), float64]) */
}

def @func_2734(%var_2732: Tensor[(7, 13, 1), float64], %var_2733: Tensor[(7, 13, 4), float64]) -> (Tensor[(7, 13, 1), float64], Tensor[(7, 13, 4), uint32], Tensor[(10, 14, 12), uint32], Tensor[(12, 140), uint32]) {
  %592 = fn (%var_2705: Tensor[(7, 13, 1), float64], %var_2712: Tensor[(7, 13, 4), float64]) -> (Tensor[(7, 13, 1), float64], Tensor[(7, 13, 4), uint32], Tensor[(10, 14, 12), uint32], Tensor[(12, 140), uint32]) {
    %584 = cast(%var_2705, dtype="float64") /* ty=Tensor[(7, 13, 1), float64] */;
    %585 = cast(%var_2705, dtype="uint32") /* ty=Tensor[(7, 13, 1), uint32] */;
    %586 = cast(%var_2712, dtype="uint32") /* ty=Tensor[(7, 13, 4), uint32] */;
    %587 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 140), uint32] */, dtype="uint32") /* ty=Tensor[(12, 140), uint32] */;
    %588 = reshape(%587, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), uint32] */;
    %589 = log2(%584) /* ty=Tensor[(7, 13, 1), float64] */;
    %590 = left_shift(%585, %586) /* ty=Tensor[(7, 13, 4), uint32] */;
    %591 = @func_1300(%588) /* ty=Tensor[(10, 14, 12), uint32] */;
    (%589, %590, %591, meta[relay.Constant][31] /* ty=Tensor[(12, 140), uint32] */)
  };
  %592(%var_2732, %var_2733) /* ty=(Tensor[(7, 13, 1), float64], Tensor[(7, 13, 4), uint32], Tensor[(10, 14, 12), uint32], Tensor[(12, 140), uint32]) */
}

def @func_9477() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %596 = fn () -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
    %593 = @func_3208() /* ty=(Tensor[(16, 2), float64],) */;
    %594 = @func_1968() /* ty=Tensor[(16, 2), float64] */;
    %595 = %593.0;
    (%594, %595)
  };
  %596() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */
}

def @func_9665(%var_9663: Tensor[(33), float64], %var_9664: Tensor[(4, 28), int8]) -> (Tensor[(16, 2), float64], Tensor[(11, 3, 11), bool], Tensor[(33), float64], Tensor[(33, 11), float64], Tensor[(8, 7, 2), float32], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(4, 28), float64]) {
  %616 = fn (%var_9627: Tensor[(33), float64], %var_9655: Tensor[(4, 28), int8]) -> (Tensor[(16, 2), float64], Tensor[(11, 3, 11), bool], Tensor[(33), float64], Tensor[(33, 11), float64], Tensor[(8, 7, 2), float32], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(4, 28), float64]) {
    %597 = cast(%var_9627, dtype="float64") /* ty=Tensor[(33), float64] */;
    %598 = cast(meta[relay.Constant][32] /* ty=Tensor[(33, 11), float64] */, dtype="float64") /* ty=Tensor[(33, 11), float64] */;
    %599 = reshape(%597, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), float64] */;
    %600 = reshape(%598, newshape=[11, 3, 11]) /* ty=Tensor[(11, 3, 11), float64] */;
    %601 = @func_8834(%599, %600) /* ty=(Tensor[(11, 3, 11), float64], Tensor[(11, 3, 11), float64], Tensor[(11, 3, 11), bool]) */;
    %602 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 28), int8] */, dtype="int8") /* ty=Tensor[(4, 28), int8] */;
    %603 = reshape(%602, newshape=[8, 7, 2]) /* ty=Tensor[(8, 7, 2), int8] */;
    %604 = @func_9476() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
    %605 = @func_9077() /* ty=(Tensor[(16, 2), float64],) */;
    %606 = cast(%var_9655, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
    %607 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(4, 28), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %608 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 28), int8] */, dtype="float64") /* ty=Tensor[(4, 28), float64] */;
    %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %610 = @func_5455() /* ty=Tensor[(16, 2), float64] */;
    %611 = %601.2;
    %612 = @func_4833(%603) /* ty=Tensor[(8, 7, 2), float32] */;
    %613 = %604.0;
    %614 = %605.0;
    %615 = floor_mod(%608, %609) /* ty=Tensor[(4, 28), float64] */;
    (%610, %611, %var_9627, meta[relay.Constant][32] /* ty=Tensor[(33, 11), float64] */, %612, %613, %614, %615)
  };
  %616(%var_9663, %var_9664) /* ty=(Tensor[(16, 2), float64], Tensor[(11, 3, 11), bool], Tensor[(33), float64], Tensor[(33, 11), float64], Tensor[(8, 7, 2), float32], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(4, 28), float64]) */
}

def @func_6953() -> (Tensor[(1014), bool], Tensor[(16, 2), float64]) {
  %617 = @func_2165() /* ty=(Tensor[(16, 2), float64],) */;
  %618 = @func_3979() /* ty=Tensor[(1014), bool] */;
  %619 = %617.0;
  (%618, %619)
}

def @func_1300(%var_1264: Tensor[(10, 14, 12), uint32]) -> Tensor[(10, 14, 12), uint32] {
  %620 = cast(%var_1264, dtype="uint32") /* ty=Tensor[(10, 14, 12), uint32] */;
  %621 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(10, 14, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(meta[relay.Constant][34] /* ty=Tensor[(10, 14, 12), uint32] */, dtype="uint32") /* ty=Tensor[(10, 14, 12), uint32] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%622, %623) /* ty=Tensor[(10, 14, 12), uint32] */
}

def @func_5680() -> (Tensor[(780), float64], Tensor[(1014), float32]) {
  %627 = fn () -> (Tensor[(780), float64], Tensor[(1014), float32]) {
    %624 = @func_3444() /* ty=(Tensor[(1014), float32],) */;
    %625 = @func_5547() /* ty=Tensor[(780), float64] */;
    %626 = %624.0;
    (%625, %626)
  };
  %627() /* ty=(Tensor[(780), float64], Tensor[(1014), float32]) */
}

def @func_8777() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %628 = @func_7328() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %629 = @func_3839() /* ty=(Tensor[(16, 2), float64],) */;
  %630 = %628.0;
  %631 = %629.0;
  (%630, %631)
}

def @func_2567(%var_2565: Tensor[(250), uint16]) -> (Tensor[(16, 2), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) {
  @func_2564(%var_2565) /* ty=(Tensor[(16, 2), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) */
}

def @func_3446() -> (Tensor[(1014), float32],) {
  @func_3444() /* ty=(Tensor[(1014), float32],) */
}

def @func_5457() -> Tensor[(16, 2), float64] {
  @func_5455() /* ty=Tensor[(16, 2), float64] */
}

def @func_9191() -> (Tensor[(16, 2), float64], Tensor[(3, 14, 10), float32], Tensor[(10, 42), float32]) {
  %637 = fn () -> (Tensor[(16, 2), float64], Tensor[(3, 14, 10), float32], Tensor[(10, 42), float32]) {
    %632 = @func_4711() /* ty=(Tensor[(16, 2), float64],) */;
    %633 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 42), float32] */, dtype="float32") /* ty=Tensor[(10, 42), float32] */;
    %634 = reshape(%633, newshape=[3, 14, 10]) /* ty=Tensor[(3, 14, 10), float32] */;
    %635 = %632.0;
    %636 = @func_1663(%634) /* ty=Tensor[(3, 14, 10), float32] */;
    (%635, %636, meta[relay.Constant][35] /* ty=Tensor[(10, 42), float32] */)
  };
  %637() /* ty=(Tensor[(16, 2), float64], Tensor[(3, 14, 10), float32], Tensor[(10, 42), float32]) */
}

def @func_3149() -> (Tensor[(1014), float32],) {
  %638 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %639 = %638.2;
  (%639,)
}

def @func_4703() -> (Tensor[(16, 2), float64],) {
  @func_4701() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_5156(%var_5086: Tensor[(1014), float32], %var_5093: Tensor[(1014), int16], %var_5137: Tensor[(288), float32]) -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), bool], Tensor[(1014), float32], Tensor[(16, 3, 6), float32], Tensor[(288), float32]) {
  %640 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %641 = @func_3388() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */;
  %642 = @func_4738() /* ty=(Tensor[(1014), float64], Tensor[(1014), float32]) */;
  %643 = %642.1;
  %644 = cast(%var_5086, dtype="int16") /* ty=Tensor[(1014), int16] */;
  %645 = shape_of(%643, dtype="int32") /* ty=Tensor[(1), int32] */;
  %646 = cast(%643, dtype="int16") /* ty=Tensor[(1014), int16] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?), int16] */;
  %648 = bitwise_xor(%646, %647) /* ty=Tensor[(1014), int16] */;
  %649 = cast(%var_5093, dtype="int16") /* ty=Tensor[(1014), int16] */;
  %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(1), int32] */;
  %651 = cast(%648, dtype="int16") /* ty=Tensor[(1014), int16] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?), int16] */;
  %653 = left_shift(%651, %652) /* ty=Tensor[(1014), int16] */;
  %654 = cast(%653, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %655 = cast(%var_5137, dtype="float32") /* ty=Tensor[(288), float32] */;
  %656 = reshape(%655, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float32] */;
  %657 = %640.0;
  %658 = %641.1;
  %659 = @func_3979() /* ty=Tensor[(1014), bool] */;
  %660 = acos(%654) /* ty=Tensor[(1014), float32] */;
  %661 = @func_4522(%656) /* ty=Tensor[(16, 3, 6), float32] */;
  (%657, %658, %659, %660, %661, %var_5137)
}

def @func_4701() -> (Tensor[(16, 2), float64],) {
  %662 = @func_4491() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %663 = %662.0;
  (%663,)
}

def @func_5775() -> (Tensor[(1014), bool],) {
  %664 = @func_5492() /* ty=Tensor[(1014), bool] */;
  (%664,)
}

def @func_2864() -> Tensor[(16, 2), float64] {
  @func_2862() /* ty=Tensor[(16, 2), float64] */
}

def @func_9078() -> (Tensor[(16, 2), float64],) {
  %666 = fn () -> (Tensor[(16, 2), float64],) {
    %665 = @func_5834() /* ty=Tensor[(16, 2), float64] */;
    (%665,)
  };
  %666() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_7474() -> (Tensor[(1014), float32], Tensor[(13, 12, 4), bool], Tensor[(624), bool], Tensor[(16, 2), float64], Tensor[(15, 10, 8), float32], Tensor[(1200), float64], uint16) {
  %683 = fn () -> (Tensor[(1014), float32], Tensor[(13, 12, 4), bool], Tensor[(624), bool], Tensor[(16, 2), float64], Tensor[(15, 10, 8), float32], Tensor[(1200), float64], uint16) {
    %667 = @func_3444() /* ty=(Tensor[(1014), float32],) */;
    %668 = cast(meta[relay.Constant][36] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
    %669 = cast(meta[relay.Constant][36] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
    %670 = reshape(%668, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), bool] */;
    %671 = reshape(%669, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), bool] */;
    %672 = @func_4758(%670, %671) /* ty=(Tensor[(13, 12, 4), bool],) */;
    %673 = @func_6625() /* ty=(Tensor[(16, 2), float64],) */;
    %674 = cast(meta[relay.Constant][37] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %675 = cast(meta[relay.Constant][38] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %676 = reshape(%674, newshape=[1, 1200]) /* ty=Tensor[(1, 1200), float64] */;
    %677 = reshape(%675, newshape=[]) /* ty=uint16 */;
    %678 = @func_3006(%676, %677) /* ty=(Tensor[(16, 2), float64], Tensor[(15, 10, 8), float32], Tensor[(1, 1200), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16], Tensor[(10, 5, 5), uint16]) */;
    %679 = %667.0;
    %680 = %672.0;
    %681 = %673.0;
    %682 = %678.1;
    (%679, %680, meta[relay.Constant][36] /* ty=Tensor[(624), bool] */, %681, %682, meta[relay.Constant][37] /* ty=Tensor[(1200), float64] */, meta[relay.Constant][38] /* ty=uint16 */)
  };
  %683() /* ty=(Tensor[(1014), float32], Tensor[(13, 12, 4), bool], Tensor[(624), bool], Tensor[(16, 2), float64], Tensor[(15, 10, 8), float32], Tensor[(1200), float64], uint16) */
}

def @func_6072(%var_6069: Tensor[(8, 40), float64]) -> (Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(8, 40), float64]) {
  %684 = @func_4953() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
  %685 = cast(%var_6069, dtype="float64") /* ty=Tensor[(8, 40), float64] */;
  %686 = reshape(%685, newshape=[8, 10, 4]) /* ty=Tensor[(8, 10, 4), float64] */;
  %687 = @func_2831(%686) /* ty=(Tensor[(8, 10, 4), float64], Tensor[(1014), float32]) */;
  %688 = %684.3;
  %689 = %687.1;
  (%688, %689, %var_6069)
}

def @func_8683(%var_8681: Tensor[(6, 5, 8), int32]) -> (Tensor[(6, 5, 8), bool], Tensor[(1014), float32]) {
  @func_8680(%var_8681) /* ty=(Tensor[(6, 5, 8), bool], Tensor[(1014), float32]) */
}

def @func_8948() -> (Tensor[(16, 2), float64], Tensor[(780), float64], Tensor[(16, 2), float64]) {
  @func_8946() /* ty=(Tensor[(16, 2), float64], Tensor[(780), float64], Tensor[(16, 2), float64]) */
}

def @func_7328() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  %690 = @func_3169() /* ty=(Tensor[(16, 2), float64],) */;
  %691 = @func_7221() /* ty=(Tensor[(16, 2), float64],) */;
  %692 = %690.0;
  %693 = %691.0;
  (%692, %693)
}

def @func_5875(%var_5874: Tensor[(9, 9, 7), uint64]) -> (Tensor[(9, 9, 7), uint64], Tensor[(16, 2), float64]) {
  %701 = fn (%var_5856: Tensor[(9, 9, 7), uint64]) -> (Tensor[(9, 9, 7), uint64], Tensor[(16, 2), float64]) {
    %694 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 9, 7), uint64] */, dtype="uint64") /* ty=Tensor[(9, 9, 7), uint64] */;
    %695 = shape_of(%var_5856, dtype="int32") /* ty=Tensor[(3), int32] */;
    %696 = cast(%var_5856, dtype="uint64") /* ty=Tensor[(9, 9, 7), uint64] */;
    %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %698 = @func_3704() /* ty=(Tensor[(16, 2), float64],) */;
    %699 = multiply(%696, %697) /* ty=Tensor[(9, 9, 7), uint64] */;
    %700 = %698.0;
    (%699, %700)
  };
  %701(%var_5874) /* ty=(Tensor[(9, 9, 7), uint64], Tensor[(16, 2), float64]) */
}

def @func_3704() -> (Tensor[(16, 2), float64],) {
  %702 = @func_3208() /* ty=(Tensor[(16, 2), float64],) */;
  %703 = %702.0;
  (%703,)
}

def @func_1914() -> Tensor[(16, 2), float64] {
  %705 = fn () -> Tensor[(16, 2), float64] {
    %704 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 2), float64] */, dtype="float64") /* ty=Tensor[(16, 2), float64] */;
    sinh(%704) /* ty=Tensor[(16, 2), float64] */
  };
  %705() /* ty=Tensor[(16, 2), float64] */
}

def @func_2607() -> Tensor[(1014), float32] {
  %706 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %706.2
}

def @func_5455() -> Tensor[(16, 2), float64] {
  %707 = @func_3704() /* ty=(Tensor[(16, 2), float64],) */;
  %707.0
}

def @func_3911() -> (Tensor[(16, 2), float64], Tensor[(16, 10, 5), bool]) {
  %708 = @func_3839() /* ty=(Tensor[(16, 2), float64],) */;
  %709 = @func_3623() /* ty=(Tensor[(14, 2, 4), float64], Tensor[(16, 10, 5), bool], Tensor[(800), int32]) */;
  %710 = %708.0;
  %711 = %709.1;
  (%710, %711)
}

def @func_3151() -> (Tensor[(1014), float32],) {
  @func_3149() /* ty=(Tensor[(1014), float32],) */
}

def @func_8367() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(624), bool]) {
  %722 = fn () -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(624), bool]) {
    %712 = @func_7009() /* ty=(Tensor[(16, 2), float64],) */;
    %713 = @func_7221() /* ty=(Tensor[(16, 2), float64],) */;
    %714 = @func_7421() /* ty=(Tensor[(16, 2), float64],) */;
    %715 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
    %716 = @func_8111() /* ty=(Tensor[(1014), bool], Tensor[(13, 12, 4), bool], Tensor[(624), bool]) */;
    %717 = %712.0;
    %718 = %713.0;
    %719 = %714.0;
    %720 = %715.2;
    %721 = %716.2;
    (%717, %718, %719, %720, %721)
  };
  %722() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(624), bool]) */
}

def @func_1934() -> (Tensor[(16, 2), float64],) {
  @func_1932() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_6818() -> (Tensor[(1014), float32], Tensor[(3, 14, 10), float32], Tensor[(420), float32]) {
  @func_6816() /* ty=(Tensor[(1014), float32], Tensor[(3, 14, 10), float32], Tensor[(420), float32]) */
}

def @func_5777() -> (Tensor[(1014), bool],) {
  @func_5775() /* ty=(Tensor[(1014), bool],) */
}

def @func_7010() -> (Tensor[(16, 2), float64],) {
  %725 = fn () -> (Tensor[(16, 2), float64],) {
    %723 = @func_1932() /* ty=(Tensor[(16, 2), float64],) */;
    %724 = %723.0;
    (%724,)
  };
  %725() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_3803(%var_3798: float32, %var_3799: Tensor[(9), float32]) -> (Tensor[(16, 2), float64], Tensor[(250), uint16], float32, Tensor[(9), float32], Tensor[(280), float64], Tensor[(156), float32]) {
  %726 = @func_3208() /* ty=(Tensor[(16, 2), float64],) */;
  %727 = cast(%var_3798, dtype="float32") /* ty=float32 */;
  %728 = cast(%var_3799, dtype="float32") /* ty=Tensor[(9), float32] */;
  %729 = cast(meta[relay.Constant][41] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %730 = cast(meta[relay.Constant][42] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %731 = reshape(%727, newshape=[]) /* ty=float32 */;
  %732 = reshape(%728, newshape=[1, 9]) /* ty=Tensor[(1, 9), float32] */;
  %733 = reshape(%729, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %734 = reshape(%730, newshape=[156]) /* ty=Tensor[(156), float32] */;
  %735 = @func_3118(%731, %732, %733, %734) /* ty=(Tensor[(1, 9), float32], Tensor[(16, 10, 5), float32], Tensor[(280), float64], Tensor[(2, 14, 10), float64], Tensor[(250), uint16], Tensor[(1, 12, 13), float32], Tensor[(156), float32]) */;
  %736 = %726.0;
  %737 = %735.4;
  (%736, %737, %var_3798, %var_3799, meta[relay.Constant][41] /* ty=Tensor[(280), float64] */, meta[relay.Constant][42] /* ty=Tensor[(156), float32] */)
}

def @func_5272(%var_5270: Tensor[(800), int32]) -> (Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(800), float32]) {
  @func_5269(%var_5270) /* ty=(Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(800), float32]) */
}

def @func_7979() -> (Tensor[(16, 2), float64], Tensor[(800), float32], Tensor[(1014), float32]) {
  %738 = @func_3623() /* ty=(Tensor[(14, 2, 4), float64], Tensor[(16, 10, 5), bool], Tensor[(800), int32]) */;
  %739 = %738.2;
  %740 = cast(%739, dtype="float64") /* ty=Tensor[(800), float64] */;
  %741 = asinh(%740) /* ty=Tensor[(800), float64] */;
  %742 = cast(%741, dtype="float32") /* ty=Tensor[(800), float32] */;
  %743 = @func_3388() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */;
  %744 = @func_3426() /* ty=Tensor[(16, 2), float64] */;
  %745 = sqrt(%742) /* ty=Tensor[(800), float32] */;
  %746 = %743.0;
  (%744, %745, %746)
}

def @func_5518(%var_5517: Tensor[(1200), float64]) -> (Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(1200), float64]) {
  %753 = fn (%var_5507: Tensor[(1200), float64]) -> (Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(1200), float64]) {
    %747 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
    %748 = cast(%var_5507, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %749 = reshape(%748, newshape=[15, 10, 8]) /* ty=Tensor[(15, 10, 8), float64] */;
    %750 = @func_864(%749) /* ty=(Tensor[(16, 10, 5), float32], Tensor[(800), int32], Tensor[(15, 10, 8), float32], Tensor[(5, 12, 13), float64], Tensor[(130, 6), float64], Tensor[(15, 10, 8), bool]) */;
    %751 = %747.0;
    %752 = %750.0;
    (%751, %752, %var_5507)
  };
  %753(%var_5517) /* ty=(Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(1200), float64]) */
}

def @func_6269() -> (Tensor[(16, 2), float64],) {
  %754 = @func_3426() /* ty=Tensor[(16, 2), float64] */;
  (%754,)
}

def @func_4762(%var_4760: Tensor[(13, 12, 4), bool], %var_4761: Tensor[(13, 12, 4), bool]) -> (Tensor[(13, 12, 4), bool],) {
  @func_4758(%var_4760, %var_4761) /* ty=(Tensor[(13, 12, 4), bool],) */
}

def @func_3426() -> Tensor[(16, 2), float64] {
  %755 = @func_3208() /* ty=(Tensor[(16, 2), float64],) */;
  %755.0
}

def @func_8168() -> (Tensor[(16, 2), float64], Tensor[(13, 12, 4), bool], Tensor[(16, 2), float64]) {
  %762 = fn () -> (Tensor[(16, 2), float64], Tensor[(13, 12, 4), bool], Tensor[(16, 2), float64]) {
    %756 = @func_3839() /* ty=(Tensor[(16, 2), float64],) */;
    %757 = @func_8111() /* ty=(Tensor[(1014), bool], Tensor[(13, 12, 4), bool], Tensor[(624), bool]) */;
    %758 = @func_5629() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
    %759 = %756.0;
    %760 = %757.1;
    %761 = %758.1;
    (%759, %760, %761)
  };
  %762() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 12, 4), bool], Tensor[(16, 2), float64]) */
}

def @func_5033(%var_5032: Tensor[(14, 4, 14), int32]) -> (Tensor[(14, 4, 14), int32], Tensor[(16, 2), float64]) {
  %768 = fn (%var_5011: Tensor[(14, 4, 14), int32]) -> (Tensor[(14, 4, 14), int32], Tensor[(16, 2), float64]) {
    %763 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 4, 1), int32] */, dtype="int32") /* ty=Tensor[(1, 4, 1), int32] */;
    %764 = cast(%var_5011, dtype="int32") /* ty=Tensor[(14, 4, 14), int32] */;
    %765 = @func_3857() /* ty=(Tensor[(16, 2), float64],) */;
    %766 = subtract(%763, %764) /* ty=Tensor[(14, 4, 14), int32] */;
    %767 = %765.0;
    (%766, %767)
  };
  %768(%var_5032) /* ty=(Tensor[(14, 4, 14), int32], Tensor[(16, 2), float64]) */
}

def @func_8480() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), float32]) {
  %775 = fn () -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), float32]) {
    %769 = @func_3857() /* ty=(Tensor[(16, 2), float64],) */;
    %770 = @func_4953() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
    %771 = @func_5360() /* ty=(Tensor[(1014), float32],) */;
    %772 = %769.0;
    %773 = %770.4;
    %774 = %771.0;
    (%772, %773, %774)
  };
  %775() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(1014), float32]) */
}

def @func_7835() -> Tensor[(16, 2), float64] {
  %776 = fn () -> Tensor[(16, 2), float64] {
    @func_1913() /* ty=Tensor[(16, 2), float64] */
  };
  %776() /* ty=Tensor[(16, 2), float64] */
}

def @func_4739() -> (Tensor[(1014), float64], Tensor[(1014), float32]) {
  %783 = fn () -> (Tensor[(1014), float64], Tensor[(1014), float32]) {
    %777 = @func_3149() /* ty=(Tensor[(1014), float32],) */;
    %778 = %777.0;
    %779 = cast(%778, dtype="float64") /* ty=Tensor[(1014), float64] */;
    %780 = cast(%778, dtype="float32") /* ty=Tensor[(1014), float32] */;
    %781 = atan(%779) /* ty=Tensor[(1014), float64] */;
    %782 = rsqrt(%780) /* ty=Tensor[(1014), float32] */;
    (%781, %782)
  };
  %783() /* ty=(Tensor[(1014), float64], Tensor[(1014), float32]) */
}

def @func_8429() -> (Tensor[(16, 2), float64],) {
  %785 = fn () -> (Tensor[(16, 2), float64],) {
    %784 = @func_7834() /* ty=Tensor[(16, 2), float64] */;
    (%784,)
  };
  %785() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_2393() -> (Tensor[(16, 2), float64],) {
  %788 = fn () -> (Tensor[(16, 2), float64],) {
    %786 = @func_2165() /* ty=(Tensor[(16, 2), float64],) */;
    %787 = %786.0;
    (%787,)
  };
  %788() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_7721(%var_7719: Tensor[(1014), float64]) -> (Tensor[(1014), uint16], Tensor[(1014), bool], Tensor[(1014), float32]) {
  @func_7718(%var_7719) /* ty=(Tensor[(1014), uint16], Tensor[(1014), bool], Tensor[(1014), float32]) */
}

def @func_8530() -> Tensor[(16, 2), float64] {
  %790 = fn () -> Tensor[(16, 2), float64] {
    %789 = @func_4711() /* ty=(Tensor[(16, 2), float64],) */;
    %789.0
  };
  %790() /* ty=Tensor[(16, 2), float64] */
}

def @func_4493() -> (Tensor[(16, 2), float64], Tensor[(16, 2), float64]) {
  @func_4491() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */
}

def @func_1932() -> (Tensor[(16, 2), float64],) {
  %791 = @func_1913() /* ty=Tensor[(16, 2), float64] */;
  (%791,)
}

def @func_4996(%var_4994: Tensor[(11, 14, 3), int64], %var_4995: Tensor[(11, 14, 3), int64]) -> (Tensor[(11, 14, 3), int64], Tensor[(16, 2), float64]) {
  %799 = fn (%var_4983: Tensor[(11, 14, 3), int64], %var_4984: Tensor[(11, 14, 3), int64]) -> (Tensor[(11, 14, 3), int64], Tensor[(16, 2), float64]) {
    %792 = cast(%var_4984, dtype="int64") /* ty=Tensor[(11, 14, 3), int64] */;
    %793 = shape_of(%var_4983, dtype="int32") /* ty=Tensor[(3), int32] */;
    %794 = cast(%var_4983, dtype="int64") /* ty=Tensor[(11, 14, 3), int64] */;
    %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %796 = @func_3857() /* ty=(Tensor[(16, 2), float64],) */;
    %797 = minimum(%794, %795) /* ty=Tensor[(11, 14, 3), int64] */;
    %798 = %796.0;
    (%797, %798)
  };
  %799(%var_4994, %var_4995) /* ty=(Tensor[(11, 14, 3), int64], Tensor[(16, 2), float64]) */
}

def @func_4711() -> (Tensor[(16, 2), float64],) {
  %800 = @func_3839() /* ty=(Tensor[(16, 2), float64],) */;
  %801 = %800.0;
  (%801,)
}

def @func_5699() -> Tensor[(1014), float32] {
  %803 = fn () -> Tensor[(1014), float32] {
    %802 = @func_3388() /* ty=(Tensor[(1014), float32], Tensor[(16, 2), float64], Tensor[(11, 6, 8), float32]) */;
    %802.0
  };
  %803() /* ty=Tensor[(1014), float32] */
}

def @func_6075(%var_6073: Tensor[(8, 40), float64]) -> (Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(8, 40), float64]) {
  @func_6072(%var_6073) /* ty=(Tensor[(16, 2), float64], Tensor[(1014), float32], Tensor[(8, 40), float64]) */
}

def @func_6389() -> Tensor[(1014), float32] {
  %804 = @func_3444() /* ty=(Tensor[(1014), float32],) */;
  %804.0
}

def @func_7422() -> (Tensor[(16, 2), float64],) {
  %806 = fn () -> (Tensor[(16, 2), float64],) {
    %805 = @func_5981() /* ty=Tensor[(16, 2), float64] */;
    (%805,)
  };
  %806() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_8259() -> Tensor[(13, 13, 6), float64] {
  @func_8257() /* ty=Tensor[(13, 13, 6), float64] */
}

def @func_8748(%var_8691: Tensor[(288), float32], %var_8707: Tensor[(9), float32]) -> (Tensor[(16, 3, 6), float32], Tensor[(288), float32], Tensor[(16, 2), float64], Tensor[(280), float64], float32, Tensor[(9), float32], Tensor[(16, 2), float64], Tensor[(5, 10, 5), float32], Tensor[(1014), bool]) {
  %807 = cast(%var_8691, dtype="float32") /* ty=Tensor[(288), float32] */;
  %808 = reshape(%807, newshape=[16, 3, 6]) /* ty=Tensor[(16, 3, 6), float32] */;
  %809 = @func_2165() /* ty=(Tensor[(16, 2), float64],) */;
  %810 = cast(7.3694f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %811 = cast(%var_8707, dtype="float32") /* ty=Tensor[(9), float32] */;
  %812 = reshape(%810, newshape=[]) /* ty=float32 */;
  %813 = reshape(%811, newshape=[9]) /* ty=Tensor[(9), float32] */;
  %814 = @func_3803(%812, %813) /* ty=(Tensor[(16, 2), float64], Tensor[(250), uint16], float32, Tensor[(9), float32], Tensor[(280), float64], Tensor[(156), float32]) */;
  %815 = cast(meta[relay.Constant][44] /* ty=Tensor[(5, 10, 5), float64] */, dtype="uint16") /* ty=Tensor[(5, 10, 5), uint16] */;
  %816 = reshape(%815, newshape=[250]) /* ty=Tensor[(250), uint16] */;
  %817 = @func_2564(%816) /* ty=(Tensor[(16, 2), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) */;
  %818 = cast(meta[relay.Constant][44] /* ty=Tensor[(5, 10, 5), float64] */, dtype="float64") /* ty=Tensor[(5, 10, 5), float64] */;
  %819 = rsqrt(%818) /* ty=Tensor[(5, 10, 5), float64] */;
  %820 = cast(%819, dtype="float32") /* ty=Tensor[(5, 10, 5), float32] */;
  %821 = @func_6953() /* ty=(Tensor[(1014), bool], Tensor[(16, 2), float64]) */;
  %822 = @func_4522(%808) /* ty=Tensor[(16, 3, 6), float32] */;
  %823 = %809.0;
  %824 = %814.4;
  %825 = %817.0;
  %826 = exp(%820) /* ty=Tensor[(5, 10, 5), float32] */;
  %827 = %821.0;
  (%822, %var_8691, %823, %824, 7.3694f /* ty=float32 */, %var_8707, %825, %826, %827)
}

def @func_4065(%var_4063: Tensor[(1014), bool]) -> (Tensor[(1014), float64], Tensor[(1014), float32], Tensor[(13, 13, 6), float32]) {
  @func_4062(%var_4063) /* ty=(Tensor[(1014), float64], Tensor[(1014), float32], Tensor[(13, 13, 6), float32]) */
}

def @func_6877() -> (Tensor[(16, 2), float64], Tensor[(1014), bool]) {
  %828 = @func_2862() /* ty=Tensor[(16, 2), float64] */;
  %829 = @func_5492() /* ty=Tensor[(1014), bool] */;
  (%828, %829)
}

def @func_9429(%var_9425: Tensor[(8, 12, 8), float64]) -> (Tensor[(8, 12, 8), float64],) {
  %830 = cast(%var_9425, dtype="float64") /* ty=Tensor[(8, 12, 8), float64] */;
  %831 = acos(%830) /* ty=Tensor[(8, 12, 8), float64] */;
  (%831,)
}

def @func_8752(%var_8750: Tensor[(288), float32], %var_8751: Tensor[(9), float32]) -> (Tensor[(16, 3, 6), float32], Tensor[(288), float32], Tensor[(16, 2), float64], Tensor[(280), float64], float32, Tensor[(9), float32], Tensor[(16, 2), float64], Tensor[(5, 10, 5), float32], Tensor[(1014), bool]) {
  @func_8748(%var_8750, %var_8751) /* ty=(Tensor[(16, 3, 6), float32], Tensor[(288), float32], Tensor[(16, 2), float64], Tensor[(280), float64], float32, Tensor[(9), float32], Tensor[(16, 2), float64], Tensor[(5, 10, 5), float32], Tensor[(1014), bool]) */
}

def @func_2113(%var_2111: uint16, %var_2112: Tensor[(10, 5, 5), uint16]) -> Tensor[(10, 5, 5), uint16] {
  %834 = fn (%var_2103: uint16, %var_2104: Tensor[(10, 5, 5), uint16]) -> Tensor[(10, 5, 5), uint16] {
    %832 = cast(%var_2103, dtype="uint16") /* ty=uint16 */;
    %833 = cast(%var_2104, dtype="uint16") /* ty=Tensor[(10, 5, 5), uint16] */;
    maximum(%832, %833) /* ty=Tensor[(10, 5, 5), uint16] */
  };
  %834(%var_2111, %var_2112) /* ty=Tensor[(10, 5, 5), uint16] */
}

def @func_2834(%var_2832: Tensor[(8, 10, 4), float64]) -> (Tensor[(8, 10, 4), float64], Tensor[(1014), float32]) {
  @func_2831(%var_2832) /* ty=(Tensor[(8, 10, 4), float64], Tensor[(1014), float32]) */
}

def @func_6816() -> (Tensor[(1014), float32], Tensor[(3, 14, 10), float32], Tensor[(420), float32]) {
  %835 = @func_5360() /* ty=(Tensor[(1014), float32],) */;
  %836 = cast(meta[relay.Constant][45] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %837 = reshape(%836, newshape=[3, 14, 10]) /* ty=Tensor[(3, 14, 10), float32] */;
  %838 = %835.0;
  %839 = @func_1663(%837) /* ty=Tensor[(3, 14, 10), float32] */;
  (%838, %839, meta[relay.Constant][45] /* ty=Tensor[(420), float32] */)
}

def @func_7073(%var_7071: Tensor[(11, 6, 8), float32]) -> (Tensor[(11, 6, 8), bool], Tensor[(16, 2), float64], Tensor[(11, 6, 8), int16]) {
  @func_7070(%var_7071) /* ty=(Tensor[(11, 6, 8), bool], Tensor[(16, 2), float64], Tensor[(11, 6, 8), int16]) */
}

def @func_6524(%var_6523: Tensor[(200, 4), int32]) -> (Tensor[(16, 2), float64], Tensor[(7, 52), float64], Tensor[(16, 10, 5), float32], Tensor[(200, 4), int32]) {
  %848 = fn (%var_6500: Tensor[(200, 4), int32]) -> (Tensor[(16, 2), float64], Tensor[(7, 52), float64], Tensor[(16, 10, 5), float32], Tensor[(200, 4), int32]) {
    %840 = @func_5399() /* ty=(Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64]) */;
    %841 = @func_5821() /* ty=(Tensor[(16, 10, 5), bool], Tensor[(11, 6, 8), float32], Tensor[(7, 52), float64]) */;
    %842 = cast(%var_6500, dtype="int32") /* ty=Tensor[(200, 4), int32] */;
    %843 = reshape(%842, newshape=[800]) /* ty=Tensor[(800), int32] */;
    %844 = @func_5269(%843) /* ty=(Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(800), float32]) */;
    %845 = %840.0;
    %846 = %841.2;
    %847 = %844.1;
    (%845, %846, %847, %var_6500)
  };
  %848(%var_6523) /* ty=(Tensor[(16, 2), float64], Tensor[(7, 52), float64], Tensor[(16, 10, 5), float32], Tensor[(200, 4), int32]) */
}

def @func_9675() -> Tensor[(16, 2), float64] {
  %850 = fn () -> Tensor[(16, 2), float64] {
    %849 = @func_6953() /* ty=(Tensor[(1014), bool], Tensor[(16, 2), float64]) */;
    %849.1
  };
  %850() /* ty=Tensor[(16, 2), float64] */
}

def @func_3171() -> (Tensor[(16, 2), float64],) {
  @func_3169() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_5269(%var_5249: Tensor[(800), int32]) -> (Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(800), float32]) {
  %851 = @func_3857() /* ty=(Tensor[(16, 2), float64],) */;
  %852 = cast(%var_5249, dtype="int32") /* ty=Tensor[(800), int32] */;
  %853 = cast(%var_5249, dtype="int32") /* ty=Tensor[(800), int32] */;
  %854 = reshape(%852, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %855 = reshape(%853, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %856 = @func_517(%854, %855) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(16, 10, 5), float32], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(16, 10, 5), float32]) */;
  %857 = cast(meta[relay.Constant][46] /* ty=Tensor[(800), int32] */, dtype="float32") /* ty=Tensor[(800), float32] */;
  %858 = shape_of(%var_5249, dtype="int32") /* ty=Tensor[(1), int32] */;
  %859 = cast(%var_5249, dtype="float32") /* ty=Tensor[(800), float32] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?), float32] */;
  %861 = %851.0;
  %862 = %856.4;
  %863 = floor_mod(%859, %860) /* ty=Tensor[(800), float32] */;
  (%861, %862, %863)
}

def @func_3597(%var_3596: Tensor[(6, 1, 11), float32]) -> (Tensor[(6, ?, 11), float32], Tensor[(16, 2), float64], Tensor[(1, 12, 13), float32], Tensor[(78, 2), float32]) {
  %877 = fn (%var_3567: Tensor[(6, 1, 11), float32]) -> (Tensor[(6, ?, 11), float32], Tensor[(16, 2), float64], Tensor[(1, 12, 13), float32], Tensor[(78, 2), float32]) {
    %864 = cast(%var_3567, dtype="float32") /* ty=Tensor[(6, 1, 11), float32] */;
    %865 = exp(%864) /* ty=Tensor[(6, 1, 11), float32] */;
    %866 = cast(%var_3567, dtype="float32") /* ty=Tensor[(6, 1, 11), float32] */;
    %867 = shape_of(%865, dtype="int32") /* ty=Tensor[(3), int32] */;
    %868 = cast(%865, dtype="float32") /* ty=Tensor[(6, 1, 11), float32] */;
    %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %870 = @func_1932() /* ty=(Tensor[(16, 2), float64],) */;
    %871 = cast(meta[relay.Constant][47] /* ty=Tensor[(78, 2), float32] */, dtype="float32") /* ty=Tensor[(78, 2), float32] */;
    %872 = reshape(%871, newshape=[1, 12, 13]) /* ty=Tensor[(1, 12, 13), float32] */;
    %873 = @func_197(%872) /* ty=(Tensor[(1, 12, 13), float32], Tensor[(1, 12, 13), float32]) */;
    %874 = mod(%868, %869) /* ty=Tensor[(6, ?, 11), float32] */;
    %875 = %870.0;
    %876 = %873.0;
    (%874, %875, %876, meta[relay.Constant][47] /* ty=Tensor[(78, 2), float32] */)
  };
  %877(%var_3596) /* ty=(Tensor[(6, ?, 11), float32], Tensor[(16, 2), float64], Tensor[(1, 12, 13), float32], Tensor[(78, 2), float32]) */
}

def @func_6962() -> (Tensor[(16, 2), float64],) {
  %879 = fn () -> (Tensor[(16, 2), float64],) {
    %878 = @func_5834() /* ty=Tensor[(16, 2), float64] */;
    (%878,)
  };
  %879() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_8111() -> (Tensor[(1014), bool], Tensor[(13, 12, 4), bool], Tensor[(624), bool]) {
  %880 = @func_7637() /* ty=(Tensor[(1014), bool], Tensor[(16, 2), float64]) */;
  %881 = %880.0;
  %882 = @func_6389() /* ty=Tensor[(1014), float32] */;
  %883 = cast(%882, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %884 = shape_of(%881, dtype="int32") /* ty=Tensor[(1), int32] */;
  %885 = cast(%881, dtype="bool") /* ty=Tensor[(1014), bool] */;
  %886 = dyn.reshape(%883, %884, newshape=[]) /* ty=Tensor[(?), bool] */;
  %887 = cast(meta[relay.Constant][48] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
  %888 = cast(meta[relay.Constant][48] /* ty=Tensor[(624), bool] */, dtype="bool") /* ty=Tensor[(624), bool] */;
  %889 = reshape(%887, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), bool] */;
  %890 = reshape(%888, newshape=[13, 12, 4]) /* ty=Tensor[(13, 12, 4), bool] */;
  %891 = @func_4758(%889, %890) /* ty=(Tensor[(13, 12, 4), bool],) */;
  %892 = equal(%885, %886) /* ty=Tensor[(1014), bool] */;
  %893 = %891.0;
  (%892, %893, meta[relay.Constant][48] /* ty=Tensor[(624), bool] */)
}

def @func_5401() -> (Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64]) {
  @func_5399() /* ty=(Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64]) */
}

def @func_3623() -> (Tensor[(14, 2, 4), float64], Tensor[(16, 10, 5), bool], Tensor[(800), int32]) {
  %894 = cast(meta[relay.Constant][49] /* ty=Tensor[(14, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 4), float64] */;
  %895 = cast(meta[relay.Constant][50] /* ty=Tensor[(800), int32] */, dtype="int32") /* ty=Tensor[(800), int32] */;
  %896 = cast(meta[relay.Constant][50] /* ty=Tensor[(800), int32] */, dtype="int32") /* ty=Tensor[(800), int32] */;
  %897 = reshape(%895, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %898 = reshape(%896, newshape=[16, 10, 5]) /* ty=Tensor[(16, 10, 5), int32] */;
  %899 = @func_517(%897, %898) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(16, 10, 5), float32], Tensor[(1, 12, 13), float32], Tensor[(156), float32], Tensor[(16, 10, 5), float32]) */;
  %900 = log2(%894) /* ty=Tensor[(14, 2, 4), float64] */;
  %901 = %899.0;
  (%900, %901, meta[relay.Constant][50] /* ty=Tensor[(800), int32] */)
}

def @func_7829() -> (Tensor[(1014), bool], Tensor[(10, 14, 12), uint32], Tensor[(1680), uint32]) {
  %907 = fn () -> (Tensor[(1014), bool], Tensor[(10, 14, 12), uint32], Tensor[(1680), uint32]) {
    %902 = @func_5775() /* ty=(Tensor[(1014), bool],) */;
    %903 = cast(meta[relay.Constant][51] /* ty=Tensor[(1680), uint32] */, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
    %904 = reshape(%903, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), uint32] */;
    %905 = %902.0;
    %906 = @func_1300(%904) /* ty=Tensor[(10, 14, 12), uint32] */;
    (%905, %906, meta[relay.Constant][51] /* ty=Tensor[(1680), uint32] */)
  };
  %907() /* ty=(Tensor[(1014), bool], Tensor[(10, 14, 12), uint32], Tensor[(1680), uint32]) */
}

def @func_7161(%var_7159: Tensor[(250), uint16]) -> (Tensor[(16, 10, 5), bool], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) {
  @func_7158(%var_7159) /* ty=(Tensor[(16, 10, 5), bool], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) */
}

def @func_6030() -> (Tensor[(1014), float32], Tensor[(1014), float64]) {
  %908 = @func_4738() /* ty=(Tensor[(1014), float64], Tensor[(1014), float32]) */;
  %909 = %908.0;
  %910 = cast(%909, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %911 = @func_5649() /* ty=Tensor[(1014), float32] */;
  %912 = log10(%910) /* ty=Tensor[(1014), float64] */;
  (%911, %912)
}

def @func_867(%var_865: Tensor[(15, 10, 8), float64]) -> (Tensor[(16, 10, 5), float32], Tensor[(800), int32], Tensor[(15, 10, 8), float32], Tensor[(5, 12, 13), float64], Tensor[(130, 6), float64], Tensor[(15, 10, 8), bool]) {
  @func_864(%var_865) /* ty=(Tensor[(16, 10, 5), float32], Tensor[(800), int32], Tensor[(15, 10, 8), float32], Tensor[(5, 12, 13), float64], Tensor[(130, 6), float64], Tensor[(15, 10, 8), bool]) */
}

def @func_7981() -> (Tensor[(16, 2), float64], Tensor[(800), float32], Tensor[(1014), float32]) {
  @func_7979() /* ty=(Tensor[(16, 2), float64], Tensor[(800), float32], Tensor[(1014), float32]) */
}

def @func_7307() -> (Tensor[(16, 2), float64],) {
  @func_7305() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_5835() -> Tensor[(16, 2), float64] {
  %914 = fn () -> Tensor[(16, 2), float64] {
    %913 = @func_5399() /* ty=(Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64]) */;
    %913.0
  };
  %914() /* ty=Tensor[(16, 2), float64] */
}

def @func_8234(%var_8233: Tensor[(1680), uint32]) -> (Tensor[(13, 12, 4), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(10, 14, 12), uint32], Tensor[(1680), uint32]) {
  %926 = fn (%var_8219: Tensor[(1680), uint32]) -> (Tensor[(13, 12, 4), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(10, 14, 12), uint32], Tensor[(1680), uint32]) {
    %915 = @func_8111() /* ty=(Tensor[(1014), bool], Tensor[(13, 12, 4), bool], Tensor[(624), bool]) */;
    %916 = %915.1;
    %917 = cast(%916, dtype="float64") /* ty=Tensor[(13, 12, 4), float64] */;
    %918 = @func_4491() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
    %919 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
    %920 = cast(%var_8219, dtype="uint32") /* ty=Tensor[(1680), uint32] */;
    %921 = reshape(%920, newshape=[10, 14, 12]) /* ty=Tensor[(10, 14, 12), uint32] */;
    %922 = sigmoid(%917) /* ty=Tensor[(13, 12, 4), float64] */;
    %923 = %918.0;
    %924 = %919.0;
    %925 = @func_1300(%921) /* ty=Tensor[(10, 14, 12), uint32] */;
    (%922, %923, %924, %925, %var_8219)
  };
  %926(%var_8233) /* ty=(Tensor[(13, 12, 4), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(10, 14, 12), uint32], Tensor[(1680), uint32]) */
}

def @func_2564(%var_2544: Tensor[(250), uint16]) -> (Tensor[(16, 2), float64], Tensor[(10, 5, 5), uint16], uint16, Tensor[(250), uint16]) {
  %927 = @func_2491() /* ty=(Tensor[(16, 2), float64], Tensor[(13, 13, 6), float32], Tensor[(1014), float32]) */;
  %928 = cast(meta[relay.Constant][52] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %929 = cast(%var_2544, dtype="uint16") /* ty=Tensor[(250), uint16] */;
  %930 = reshape(%928, newshape=[]) /* ty=uint16 */;
  %931 = reshape(%929, newshape=[10, 5, 5]) /* ty=Tensor[(10, 5, 5), uint16] */;
  %932 = %927.0;
  %933 = @func_2110(%930, %931) /* ty=Tensor[(10, 5, 5), uint16] */;
  (%932, %933, meta[relay.Constant][52] /* ty=uint16 */, %var_2544)
}

def @func_5399() -> (Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64]) {
  %934 = @func_2392() /* ty=(Tensor[(16, 2), float64],) */;
  %935 = cast(meta[relay.Constant][53] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %936 = reshape(%935, newshape=[5, 12, 13]) /* ty=Tensor[(5, 12, 13), float64] */;
  %937 = @func_760(%936) /* ty=(Tensor[(5, 12, 13), float64],) */;
  %938 = %934.0;
  %939 = %937.0;
  (%938, %939, meta[relay.Constant][53] /* ty=Tensor[(780), float64] */)
}

def @func_3625() -> (Tensor[(14, 2, 4), float64], Tensor[(16, 10, 5), bool], Tensor[(800), int32]) {
  @func_3623() /* ty=(Tensor[(14, 2, 4), float64], Tensor[(16, 10, 5), bool], Tensor[(800), int32]) */
}

def @func_4570() -> Tensor[(16, 2), float64] {
  @func_4568() /* ty=Tensor[(16, 2), float64] */
}

def @func_5548() -> Tensor[(780), float64] {
  %941 = fn () -> Tensor[(780), float64] {
    %940 = @func_5399() /* ty=(Tensor[(16, 2), float64], Tensor[(5, 12, 13), float64], Tensor[(780), float64]) */;
    %940.2
  };
  %941() /* ty=Tensor[(780), float64] */
}

def @func_6340(%var_6339: Tensor[(5, 7, 13), float32]) -> Tensor[(5, 7, 13), float32] {
  %943 = fn (%var_6333: Tensor[(5, 7, 13), float32]) -> Tensor[(5, 7, 13), float32] {
    %942 = cast(%var_6333, dtype="float32") /* ty=Tensor[(5, 7, 13), float32] */;
    sinh(%942) /* ty=Tensor[(5, 7, 13), float32] */
  };
  %943(%var_6339) /* ty=Tensor[(5, 7, 13), float32] */
}

def @func_3031(%var_3029: Tensor[(16, 14, 13), uint8], %var_3030: Tensor[(16, 14, 13), uint8]) -> (Tensor[(16, 14, 13), uint8],) {
  @func_3027(%var_3029, %var_3030) /* ty=(Tensor[(16, 14, 13), uint8],) */
}

def @func_7416() -> (Tensor[(16, 2), float64],) {
  %946 = fn () -> (Tensor[(16, 2), float64],) {
    %944 = @func_4953() /* ty=(Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64], Tensor[(16, 2), float64]) */;
    %945 = %944.1;
    (%945,)
  };
  %946() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_6973() -> (Tensor[(16, 2), float64],) {
  %949 = fn () -> (Tensor[(16, 2), float64],) {
    %947 = @func_6269() /* ty=(Tensor[(16, 2), float64],) */;
    %948 = %947.0;
    (%948,)
  };
  %949() /* ty=(Tensor[(16, 2), float64],) */
}

def @func_8257() -> Tensor[(13, 13, 6), float64] {
  %950 = @func_5741() /* ty=(Tensor[(1014), float32],) */;
  %951 = %950.0;
  %952 = cast(%951, dtype="float32") /* ty=Tensor[(1014), float32] */;
  %953 = reshape(%952, newshape=[13, 13, 6]) /* ty=Tensor[(13, 13, 6), float32] */;
  %954 = @func_1406(%953) /* ty=(Tensor[(13, 13, 6), float32],) */;
  %955 = %954.0;
  %956 = cast(%951, dtype="float64") /* ty=Tensor[(1014), float64] */;
  %957 = shape_of(%955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %958 = cast(%955, dtype="float64") /* ty=Tensor[(13, 13, 6), float64] */;
  %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%958, %959) /* ty=Tensor[(13, 13, 6), float64] */
}

def @func_9356(%var_9353: float64, %var_9354: Tensor[(14, 5, 15), float64], %var_9355: Tensor[(1200, 1), float64]) -> (Tensor[(16, 2), float64], Tensor[(14, 5, 15), int32], Tensor[(1200), float64], Tensor[(1200, 1), float64], Tensor[(4, 6, 8), float32], Tensor[(16, 2), float64]) {
  %976 = fn (%var_9296: float64, %var_9297: Tensor[(14, 5, 15), float64], %var_9321: Tensor[(1200, 1), float64]) -> (Tensor[(16, 2), float64], Tensor[(14, 5, 15), int32], Tensor[(1200), float64], Tensor[(1200, 1), float64], Tensor[(4, 6, 8), float32], Tensor[(16, 2), float64]) {
    %960 = cast(%var_9296, dtype="float64") /* ty=float64 */;
    %961 = cast(%var_9297, dtype="float64") /* ty=Tensor[(14, 5, 15), float64] */;
    %962 = floor_mod(%960, %961) /* ty=Tensor[(14, 5, 15), float64] */;
    %963 = cast(%962, dtype="int32") /* ty=Tensor[(14, 5, 15), int32] */;
    %964 = shape_of(%var_9297, dtype="int32") /* ty=Tensor[(3), int32] */;
    %965 = cast(%var_9297, dtype="int32") /* ty=Tensor[(14, 5, 15), int32] */;
    %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %967 = cast(%var_9321, dtype="float64") /* ty=Tensor[(1200, 1), float64] */;
    %968 = reshape(%967, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
    %969 = @func_5516(%968) /* ty=(Tensor[(16, 2), float64], Tensor[(16, 10, 5), float32], Tensor[(1200), float64]) */;
    %970 = @func_8856() /* ty=(Tensor[(4, 6, 8), float32],) */;
    %971 = @func_5455() /* ty=Tensor[(16, 2), float64] */;
    %972 = minimum(%965, %966) /* ty=Tensor[(14, 5, 15), int32] */;
    %973 = %969.2;
    %974 = %970.0;
    %975 = @func_6655() /* ty=Tensor[(16, 2), float64] */;
    (%971, %972, %973, %var_9321, %974, %975)
  };
  %976(%var_9353, %var_9354, %var_9355) /* ty=(Tensor[(16, 2), float64], Tensor[(14, 5, 15), int32], Tensor[(1200), float64], Tensor[(1200, 1), float64], Tensor[(4, 6, 8), float32], Tensor[(16, 2), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

==========mod==========
#[version = "0.0.5"]
def @func_6559(%var_6553: Tensor[(14, 13, 11), int64], %var_6554: Tensor[(14, 13, 11), int64]) -> Tensor[(14, 13, 11), int64] {
  %0 = cast(%var_6554, dtype="int64") /* ty=Tensor[(14, 13, 11), int64] */;
  %1 = shape_of(%var_6553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_6553, dtype="int64") /* ty=Tensor[(14, 13, 11), int64] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%2, %3) /* ty=Tensor[(14, 13, 11), int64] */
}

def @func_9122(%var_9119: Tensor[(10, 117), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 10), bool], Tensor[(10, 117), float32], Tensor[(10, 144), int8]) {
  %4 = cast(%var_9119, dtype="float32") /* ty=Tensor[(10, 117), float32] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 144), int8] */, dtype="int8") /* ty=Tensor[(10, 144), int8] */;
  %6 = reshape(%4, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), float32] */;
  %7 = reshape(%5, newshape=[720, 2]) /* ty=Tensor[(720, 2), int8] */;
  %8 = @func_1595(%6, %7) /* ty=(Tensor[(13, 9, 10), bool], Tensor[(160, 4), float32], Tensor[(720, 2), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %9 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  %10 = %8.0;
  (%9, %10, %var_9119, meta[relay.Constant][0] /* ty=Tensor[(10, 144), int8] */)
}

def @func_6418() -> Tensor[(13, 9, 1), float32] {
  %11 = @func_2389() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %11.0
}

def @func_185() -> (Tensor[(13, 9, 1), float32],) {
  %12 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  (%12,)
}

def @func_664(%var_655: Tensor[(640), float32]) -> (Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) {
  %13 = cast(%var_655, dtype="float32") /* ty=Tensor[(640), float32] */;
  %14 = reshape(%13, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), float32] */;
  %15 = @func_308() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %16 = @func_371() /* ty=Tensor[(13, 9, ?), uint32] */;
  %17 = @func_475(%14) /* ty=Tensor[(8, 10, 8), float32] */;
  %18 = %15.0;
  (%16, %17, %var_655, %18)
}

def @func_7413() -> (Tensor[(13, 9, ?), uint32],) {
  %19 = @func_5115() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %20 = %19.1;
  (%20,)
}

def @func_6999() -> Tensor[(13, 9, 1), float32] {
  @func_3433() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_2643() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %21 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %22 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  %23 = %21.0;
  (%22, %23)
}

def @func_3564() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float64], Tensor[(13, 9, 1), float32]) {
  %24 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %25 = @func_2527() /* ty=(Tensor[(13, 9, ?), int32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %26 = @func_981() /* ty=(Tensor[(13, 9, 1), float64],) */;
  %27 = %24.0;
  %28 = %25.2;
  %29 = %26.0;
  %30 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  (%27, %28, %29, %30)
}

def @func_6377(%var_6368: Tensor[(13, 9, 10), bool]) -> (Tensor[(13, 9, 8), bool], Tensor[(936), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 10), float64]) {
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %32 = reshape(%31, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), float32] */;
  %33 = @func_2179(%32) /* ty=(Tensor[(13, 9, 8), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %34 = @func_1692() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %35 = @func_4202() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %36 = %35.0;
  %37 = cast(%36, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(13, 9, 10), float32] */, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
  %39 = not_equal(%37, %38) /* ty=Tensor[(13, 9, 10), bool] */;
  %40 = cast(%var_6368, dtype="float64") /* ty=Tensor[(13, 9, 10), float64] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%39, dtype="float64") /* ty=Tensor[(13, 9, 10), float64] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %44 = %33.0;
  %45 = %34.0;
  %46 = floor_divide(%42, %43) /* ty=Tensor[(13, 9, 10), float64] */;
  (%44, meta[relay.Constant][1] /* ty=Tensor[(936), float32] */, %45, %46)
}

def @func_6658() -> Tensor[(13, 9, 1), float32] {
  @func_3036() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_7951() -> (Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %47 = @func_7446() /* ty=(Tensor[(13, 9, ?), uint64],) */;
  %48 = @func_6642() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %49 = @func_4404() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %50 = %47.0;
  %51 = %48.0;
  %52 = %49.0;
  (%50, %51, %52)
}

def @func_8643(%var_8621: Tensor[(1638), uint32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), float32], Tensor[(1638), float64]) {
  %53 = @func_1323() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %54 = @func_3093() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %55 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %56 = %55.0;
  %57 = cast(%var_8621, dtype="uint32") /* ty=Tensor[(1638), uint32] */;
  %58 = cast(meta[relay.Constant][3] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %59 = reshape(%57, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), uint32] */;
  %60 = reshape(%58, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %61 = @func_2127(%59, %60) /* ty=(Tensor[(13, 9, 14), int64], Tensor[(13, 9, 7), float32], Tensor[(13, 9, ?), int16], Tensor[(8, 10, 8), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), int8], Tensor[(13, 9, 1), float32]) */;
  %62 = %61.7;
  %63 = cast(%56, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %64 = cast(%62, dtype="bool") /* ty=Tensor[(13, 9, 640), bool] */;
  %65 = equal(%63, %64) /* ty=Tensor[(13, 9, 640), bool] */;
  %66 = cast(%65, dtype="float32") /* ty=Tensor[(13, 9, 640), float32] */;
  %67 = cast(meta[relay.Constant][3] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %68 = cast(%var_8621, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %69 = @func_3433() /* ty=Tensor[(13, 9, 1), float32] */;
  %70 = %53.0;
  %71 = %54.0;
  %72 = floor_divide(%66, %67) /* ty=Tensor[(13, 9, 640), float32] */;
  %73 = erf(%68) /* ty=Tensor[(1638), float64] */;
  (%69, %70, %71, %72, %73)
}

def @func_9273() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32]) {
  %74 = @func_5115() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %75 = @func_6658() /* ty=Tensor[(13, 9, 1), float32] */;
  %76 = %74.1;
  (%75, %76)
}

def @func_1758() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %77 = @func_1692() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %78 = %77.0;
  %79 = cast(%78, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %80 = @func_1614() /* ty=Tensor[(13, 9, 1), float32] */;
  %81 = tan(%79) /* ty=Tensor[(13, 9, 1), float32] */;
  (%80, %81)
}

def @func_9959() -> (Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(3, 14, 4), float32], Tensor[(585, 3), float32]) {
  %82 = @func_7084() /* ty=(Tensor[(13, 9, ?), uint64],) */;
  %83 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %84 = cast(meta[relay.Constant][4] /* ty=Tensor[(585, 3), float32] */, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %85 = reshape(%84, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %86 = @func_6039(%85) /* ty=(Tensor[(3, 14, 4), float32], Tensor[(1755), float32], Tensor[(13, 9, 15), float64], Tensor[(13, 9, 1), float32]) */;
  %87 = %82.0;
  %88 = %83.1;
  %89 = %86.0;
  (%87, %88, %89, meta[relay.Constant][4] /* ty=Tensor[(585, 3), float32] */)
}

def @func_7430() -> (Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %90 = @func_2643() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %91 = @func_2389() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %92 = @func_1073() /* ty=Tensor[(13, 9, ?), uint64] */;
  %93 = %90.1;
  %94 = %91.0;
  (%92, %93, %94)
}

def @func_4629() -> (Tensor[(16, 15, 10), float32],) {
  %95 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 15, 10), float32] */, dtype="float32") /* ty=Tensor[(16, 15, 10), float32] */;
  %96 = acos(%95) /* ty=Tensor[(16, 15, 10), float32] */;
  (%96,)
}

def @func_8970(%var_8909: Tensor[(585), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(16, 15, 10), float32], Tensor[(585), float32], Tensor[(1053), uint32], Tensor[(13, 9, 15), uint16], Tensor[(1755), float32], Tensor[(14, 6, 9), bool], Tensor[(756), float32]) {
  %97 = @func_3455() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %98 = cast(%var_8909, dtype="float32") /* ty=Tensor[(585), float32] */;
  %99 = reshape(%98, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %100 = @func_8028(%99) /* ty=(Tensor[(13, 9, 5), bool], Tensor[(16, 15, 10), float32]) */;
  %101 = @func_7043() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(14, 13, 11), int64], Tensor[(1, 2002), int64], Tensor[(1053), uint32]) */;
  %102 = cast(meta[relay.Constant][6] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %103 = reshape(%102, newshape=[13, 9, 15]) /* ty=Tensor[(13, 9, 15), float32] */;
  %104 = @func_5829(%103) /* ty=(Tensor[(13, 9, 15), uint16],) */;
  %105 = cast(meta[relay.Constant][7] /* ty=Tensor[(756), float32] */, dtype="float32") /* ty=Tensor[(756), float32] */;
  %106 = reshape(%105, newshape=[14, 6, 9]) /* ty=Tensor[(14, 6, 9), float32] */;
  %107 = @func_6205(%106) /* ty=(Tensor[(14, 6, 9), float32], Tensor[(14, 6, 9), bool]) */;
  %108 = %97.0;
  %109 = %100.1;
  %110 = %101.3;
  %111 = %104.0;
  %112 = %107.1;
  (%108, %109, %var_8909, %110, %111, meta[relay.Constant][6] /* ty=Tensor[(1755), float32] */, %112, meta[relay.Constant][7] /* ty=Tensor[(756), float32] */)
}

def @func_9936() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(16, 15, 10), float32]) {
  %113 = @func_887() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int16]) */;
  %114 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %115 = %113.0;
  %116 = %114.2;
  %117 = @func_7606() /* ty=Tensor[(16, 15, 10), float32] */;
  (%115, %116, %117)
}

def @func_9492(%var_9488: Tensor[(8, 12, 16), float64]) -> (Tensor[(8, 12, 16), float64],) {
  %118 = cast(%var_9488, dtype="float64") /* ty=Tensor[(8, 12, 16), float64] */;
  %119 = rsqrt(%118) /* ty=Tensor[(8, 12, 16), float64] */;
  (%119,)
}

def @func_5351(%var_5305: int16, %var_5306: Tensor[(12, 12, 14), int16]) -> Tensor[(12, 12, 14), float32] {
  %120 = cast(%var_5305, dtype="bool") /* ty=bool */;
  %121 = cast(%var_5306, dtype="bool") /* ty=Tensor[(12, 12, 14), bool] */;
  %122 = not_equal(%120, %121) /* ty=Tensor[(12, 12, 14), bool] */;
  %123 = cast(%122, dtype="float32") /* ty=Tensor[(12, 12, 14), float32] */;
  atanh(%123) /* ty=Tensor[(12, 12, 14), float32] */
}

def @func_4700() -> (Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32]) {
  %124 = @func_3375() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %125 = @func_1073() /* ty=Tensor[(13, 9, ?), uint64] */;
  %126 = %124.0;
  (%125, %126)
}

def @func_200() -> (Tensor[(13, 9, 1), float32],) {
  %127 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %128 = %127.1;
  (%128,)
}

def @func_4109() -> (Tensor[(13, 9, 1), float32],) {
  %129 = @func_3036() /* ty=Tensor[(13, 9, 1), float32] */;
  (%129,)
}

def @func_4863(%var_4856: Tensor[(3, 3, 4), float64], %var_4857: Tensor[(3, 3, 4), float64]) -> Tensor[(3, 3, 4), float64] {
  %130 = cast(%var_4857, dtype="float64") /* ty=Tensor[(3, 3, 4), float64] */;
  %131 = shape_of(%var_4856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %132 = cast(%var_4856, dtype="float64") /* ty=Tensor[(3, 3, 4), float64] */;
  %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%132, %133) /* ty=Tensor[(3, 3, 4), float64] */
}

def @func_2724(%var_2718: Tensor[(1, 640), float32]) -> (Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(1, 640), float32]) {
  %134 = @func_2626() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */;
  %135 = @func_1692() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %136 = cast(%var_2718, dtype="float32") /* ty=Tensor[(1, 640), float32] */;
  %137 = reshape(%136, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %138 = @func_1649(%137) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32]) */;
  %139 = @func_937() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(13, 9, 1), float32]) */;
  %140 = cast(%var_2718, dtype="float32") /* ty=Tensor[(1, 640), float32] */;
  %141 = %134.1;
  %142 = %135.0;
  %143 = %138.2;
  %144 = %139.3;
  %145 = sigmoid(%140) /* ty=Tensor[(1, 640), float32] */;
  (%141, %142, %143, %144, %145)
}

def @func_2566() -> (Tensor[(13, 9, 1), float32],) {
  %146 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %147 = %146.0;
  (%147,)
}

def @func_6606(%var_6598: Tensor[(13, 9, 9), float32]) -> Tensor[(13, 9, 9), uint8] {
  %148 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %149 = %148.0;
  %150 = cast(%149, dtype="uint8") /* ty=Tensor[(13, 9, 1), uint8] */;
  %151 = cast(%var_6598, dtype="uint8") /* ty=Tensor[(13, 9, 9), uint8] */;
  left_shift(%150, %151) /* ty=Tensor[(13, 9, 9), uint8] */
}

def @func_7856(%var_7822: Tensor[(1, 1755), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1755), float32], Tensor[(13, 9, 1440), float64]) {
  %152 = cast(meta[relay.Constant][8] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %153 = cast(%var_7822, dtype="float32") /* ty=Tensor[(1, 1755), float32] */;
  %154 = reshape(%152, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %155 = reshape(%153, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %156 = @func_4514(%154, %155) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, 1), float32]) */;
  %157 = @func_4032() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %158 = @func_1677() /* ty=(Tensor[(13, 9, ?), uint32],) */;
  %159 = %158.0;
  %160 = cast(%159, dtype="int32") /* ty=Tensor[(13, 9, ?), int32] */;
  %161 = cast(%var_7822, dtype="int32") /* ty=Tensor[(1, 1755), int32] */;
  %162 = multiply(%160, %161) /* ty=Tensor[(13, 9, 1755), int32] */;
  %163 = cast(%162, dtype="float32") /* ty=Tensor[(13, 9, 1755), float32] */;
  %164 = cast(%159, dtype="float64") /* ty=Tensor[(13, 9, ?), float64] */;
  %165 = cast(meta[relay.Constant][8] /* ty=Tensor[(1440), int8] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %166 = %156.8;
  %167 = %157.0;
  %168 = sinh(%163) /* ty=Tensor[(13, 9, 1755), float32] */;
  %169 = mod(%164, %165) /* ty=Tensor[(13, 9, 1440), float64] */;
  (%166, %167, %168, %169)
}

def @func_1649(%var_1647: Tensor[(640), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32]) {
  %170 = cast(%var_1647, dtype="float32") /* ty=Tensor[(640), float32] */;
  %171 = reshape(%170, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %172 = @func_664(%171) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */;
  %173 = @func_1128() /* ty=Tensor[(13, 9, 1), float32] */;
  %174 = %172.3;
  (%173, %174, %var_1647)
}

def @func_2296(%var_2292: Tensor[(10, 12, 13), uint16]) -> (Tensor[(10, 12, 13), bool],) {
  %175 = cast(%var_2292, dtype="bool") /* ty=Tensor[(10, 12, 13), bool] */;
  %176 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(10, 12, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 12, 13), uint16] */, dtype="bool") /* ty=Tensor[(10, 12, 13), bool] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %179 = not_equal(%177, %178) /* ty=Tensor[(10, 12, 13), bool] */;
  (%179,)
}

def @func_8187() -> (Tensor[(13, 9, ?), uint32],) {
  %180 = @func_5422() /* ty=Tensor[(13, 9, ?), uint32] */;
  (%180,)
}

def @func_9414(%var_9363: int16, %var_9364: Tensor[(16, 3, 9), int16], %var_9369: Tensor[(16, 3, 9), int16]) -> Tensor[(16, 3, 9), bool] {
  %181 = cast(%var_9363, dtype="int16") /* ty=int16 */;
  %182 = cast(%var_9364, dtype="int16") /* ty=Tensor[(16, 3, 9), int16] */;
  %183 = logical_xor(%181, %182) /* ty=Tensor[(16, 3, 9), int16] */;
  %184 = cast(%var_9369, dtype="bool") /* ty=Tensor[(16, 3, 9), bool] */;
  %185 = shape_of(%183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %186 = cast(%183, dtype="bool") /* ty=Tensor[(16, 3, 9), bool] */;
  %187 = dyn.reshape(%184, %185, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%186, %187) /* ty=Tensor[(16, 3, 9), bool] */
}

def @func_981() -> (Tensor[(13, 9, 1), float64],) {
  %188 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  %189 = cast(%188, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
  %190 = asin(%189) /* ty=Tensor[(13, 9, 1), float64] */;
  (%190,)
}

def @func_7502() -> (Tensor[(13, 9, 1), float32],) {
  %191 = @func_4078() /* ty=Tensor[(13, 9, 1), float32] */;
  (%191,)
}

def @func_4514(%var_4436: Tensor[(1440), int8], %var_4437: Tensor[(1755), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, 1), float32]) {
  %192 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %193 = cast(%var_4436, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %194 = cast(%var_4436, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %195 = cast(%var_4437, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %196 = cast(%var_4436, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %197 = reshape(%193, newshape=[20, 72]) /* ty=Tensor[(20, 72), int8] */;
  %198 = reshape(%194, newshape=[20, 72]) /* ty=Tensor[(20, 72), int8] */;
  %199 = reshape(%195, newshape=[13, 9, 15]) /* ty=Tensor[(13, 9, 15), float32] */;
  %200 = reshape(%196, newshape=[20, 72]) /* ty=Tensor[(20, 72), float64] */;
  %201 = @func_3000(%197, %198, %199, %200) /* ty=(Tensor[(13, 9, ?), float64], Tensor[(13, 9, 1), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(20, 72), float64], Tensor[(13, 9, ?), uint16], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(640), float32], Tensor[(13, 9, 15), float64], Tensor[(720, 2), int8], Tensor[(1170), float32], Tensor[(160, 4), float32], Tensor[(20, 72), int8], Tensor[(640), float32], Tensor[(13, 9, ?), uint32]) */;
  %202 = cast(%var_4437, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %203 = erf(%202) /* ty=Tensor[(1755), float32] */;
  %204 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %205 = %204.2;
  %206 = cast(%203, dtype="bool") /* ty=Tensor[(1755), bool] */;
  %207 = cast(%205, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %208 = @func_3493() /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %209 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %210 = @func_1128() /* ty=Tensor[(13, 9, 1), float32] */;
  %211 = cast(%203, dtype="bool") /* ty=Tensor[(1755), bool] */;
  %212 = cast(%210, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %213 = %192.1;
  %214 = cast(%213, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %215 = reshape(%214, newshape=[13, 9, 1]) /* ty=Tensor[(13, 9, 1), float32] */;
  %216 = @func_3266(%215) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int64]) */;
  %217 = %201.2;
  %218 = @func_2651() /* ty=Tensor[(13, 9, ?), uint64] */;
  %219 = greater_equal(%206, %207) /* ty=Tensor[(13, 9, 1755), bool] */;
  %220 = %208.0;
  %221 = %209.0;
  %222 = logical_and(%211, %212) /* ty=Tensor[(13, 9, 1755), bool] */;
  %223 = %216.0;
  (%213, %217, %var_4436, %218, %219, %220, %221, %222, %223)
}

def @func_1526() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  %224 = @func_308() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %225 = @func_200() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %226 = @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %227 = %224.0;
  %228 = @func_1128() /* ty=Tensor[(13, 9, 1), float32] */;
  %229 = %225.0;
  %230 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  %231 = @func_371() /* ty=Tensor[(13, 9, ?), uint32] */;
  %232 = %226.0;
  (%227, %228, %229, %230, %231, %232)
}

def @func_3133() -> (Tensor[(3, 14, 4), float32],) {
  %233 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 14, 4), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
  %234 = sinh(%233) /* ty=Tensor[(3, 14, 4), float32] */;
  (%234,)
}

def @func_5078() -> (Tensor[(16, 15, 10), float64],) {
  %235 = @func_4629() /* ty=(Tensor[(16, 15, 10), float32],) */;
  %236 = %235.0;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(16, 15, 10), float64] */;
  %238 = sigmoid(%237) /* ty=Tensor[(16, 15, 10), float64] */;
  (%238,)
}

def @func_5640() -> (Tensor[(13, 9, 1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %239 = @func_2626() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */;
  %240 = %239.0;
  %241 = @func_1972() /* ty=Tensor[(13, 9, 1), float32] */;
  %242 = cast(%240, dtype="bool") /* ty=Tensor[(1053), bool] */;
  %243 = cast(%241, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %244 = @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %245 = @func_4700() /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32]) */;
  %246 = @func_3564() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float64], Tensor[(13, 9, 1), float32]) */;
  %247 = greater(%242, %243) /* ty=Tensor[(13, 9, 1053), bool] */;
  %248 = %244.0;
  %249 = %245.1;
  %250 = %246.0;
  (%247, %248, %249, %250)
}

def @func_9039() -> (Tensor[(13, 9, 1), float32],) {
  %251 = @func_1972() /* ty=Tensor[(13, 9, 1), float32] */;
  (%251,)
}

def @func_1692() -> (Tensor[(13, 9, 1), float32],) {
  %252 = @func_501() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %253 = %252.0;
  (%253,)
}

def @func_1830(%var_1817: Tensor[(8, 1, 12), float64]) -> (Tensor[(8, 1, 12), float64],) {
  %254 = cast(%var_1817, dtype="float64") /* ty=Tensor[(8, 1, 12), float64] */;
  %255 = asinh(%254) /* ty=Tensor[(8, 1, 12), float64] */;
  (%255,)
}

def @func_6642() -> (Tensor[(13, 9, 1), float32],) {
  %256 = @func_2527() /* ty=(Tensor[(13, 9, ?), int32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %257 = %256.1;
  (%257,)
}

def @func_3455() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %258 = @func_887() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int16]) */;
  %259 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %260 = %258.0;
  %261 = %259.5;
  (%260, %261)
}

def @func_1677() -> (Tensor[(13, 9, ?), uint32],) {
  %262 = @func_371() /* ty=Tensor[(13, 9, ?), uint32] */;
  (%262,)
}

def @func_6295() -> (Tensor[(13, 9, 1), float32],) {
  %263 = @func_1692() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %264 = %263.0;
  (%264,)
}

def @func_9154() -> Tensor[(13, 9, 1), float32] {
  %265 = @func_2566() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %265.0
}

def @func_8709(%var_8664: Tensor[(13, 9, 1440), bool], %var_8691: Tensor[(13, 9, 1440), float32]) -> (Tensor[(13, 9, 1440), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1440), float64], Tensor[(13, 9, 1440), uint8], Tensor[(13, 9, 1), float32]) {
  %266 = cast(%var_8664, dtype="float32") /* ty=Tensor[(13, 9, 1440), float32] */;
  %267 = @func_631() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %268 = @func_7155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, 1440), bool]) */;
  %269 = %268.2;
  %270 = cast(%var_8664, dtype="float64") /* ty=Tensor[(13, 9, 1440), float64] */;
  %271 = shape_of(%269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %272 = cast(%269, dtype="float64") /* ty=Tensor[(13, 9, 1440), float64] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %274 = cast(%var_8664, dtype="float32") /* ty=Tensor[(13, 9, 1440), float32] */;
  %275 = shape_of(%269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%269, dtype="float32") /* ty=Tensor[(13, 9, 1440), float32] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %278 = divide(%276, %277) /* ty=Tensor[(13, 9, 1440), float32] */;
  %279 = cast(%var_8691, dtype="uint8") /* ty=Tensor[(13, 9, 1440), uint8] */;
  %280 = shape_of(%278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%278, dtype="uint8") /* ty=Tensor[(13, 9, 1440), uint8] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %283 = log2(%266) /* ty=Tensor[(13, 9, 1440), float32] */;
  %284 = %267.1;
  %285 = power(%272, %273) /* ty=Tensor[(13, 9, 1440), float64] */;
  %286 = bitwise_or(%281, %282) /* ty=Tensor[(13, 9, 1440), uint8] */;
  %287 = @func_1972() /* ty=Tensor[(13, 9, 1), float32] */;
  (%283, %284, %285, %286, %287)
}

def @func_4678() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 8), int8]) {
  %288 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %289 = @func_501() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %290 = %289.0;
  %291 = cast(%290, dtype="int8") /* ty=Tensor[(13, 9, 1), int8] */;
  %292 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 9, 8), float32] */, dtype="int8") /* ty=Tensor[(13, 9, 8), int8] */;
  %293 = %288.2;
  %294 = multiply(%291, %292) /* ty=Tensor[(13, 9, 8), int8] */;
  (%293, %294)
}

def @func_21() -> Tensor[(13, 9, 1), float32] {
  %295 = cast(meta[relay.Constant][12] /* ty=Tensor[(13, 9, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
  %296 = cos(%295) /* ty=Tensor[(13, 9, 1), float64] */;
  %297 = cast(%296, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  atanh(%297) /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_9012() -> (Tensor[(13, 9, 1), float32],) {
  %298 = @func_5640() /* ty=(Tensor[(13, 9, 1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %299 = %298.3;
  (%299,)
}

def @func_2651() -> Tensor[(13, 9, ?), uint64] {
  @func_1073() /* ty=Tensor[(13, 9, ?), uint64] */
}

def @func_3114() -> (Tensor[(13, 9, 1), float32],) {
  %300 = @func_2389() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %301 = %300.0;
  (%301,)
}

def @func_5266() -> Tensor[(13, 9, 1), float32] {
  %302 = @func_3455() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %302.0
}

def @func_9850() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %303 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %304 = @func_4883() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %305 = %303.1;
  %306 = %304.0;
  (%305, %306)
}

def @func_3036() -> Tensor[(13, 9, 1), float32] {
  @func_122() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_5254() -> (Tensor[(13, 9, 1), float32], Tensor[(5, 4, 14), float64], Tensor[(70, 4), float64], Tensor[(16, 15, 10), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  %307 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %308 = cast(meta[relay.Constant][13] /* ty=Tensor[(70, 4), float64] */, dtype="float64") /* ty=Tensor[(70, 4), float64] */;
  %309 = reshape(%308, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), float64] */;
  %310 = @func_4360(%309) /* ty=(Tensor[(5, 4, 14), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %311 = @func_4999() /* ty=(Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(2, 320), float32]) */;
  %312 = %311.0;
  %313 = cast(%312, dtype="float64") /* ty=Tensor[(16, 15, 10), float64] */;
  %314 = @func_1323() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %315 = %307.3;
  %316 = %310.0;
  %317 = erf(%313) /* ty=Tensor[(16, 15, 10), float64] */;
  %318 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  %319 = @func_1073() /* ty=Tensor[(13, 9, ?), uint64] */;
  %320 = %314.0;
  %321 = @func_371() /* ty=Tensor[(13, 9, ?), uint32] */;
  %322 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  (%315, %316, meta[relay.Constant][13] /* ty=Tensor[(70, 4), float64] */, %317, %318, %319, %320, %321, %322)
}

def @func_308() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %323 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %324 = %323.2;
  %325 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  (%324, %325)
}

def @func_7180(%var_7174: Tensor[(640), float32]) -> (Tensor[(13, 9, ?), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32], Tensor[(13, 9, 15), uint16], Tensor[(1755), float32]) {
  %326 = @func_4078() /* ty=Tensor[(13, 9, 1), float32] */;
  %327 = @func_3036() /* ty=Tensor[(13, 9, 1), float32] */;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %329 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%326, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %332 = cast(%var_7174, dtype="float32") /* ty=Tensor[(640), float32] */;
  %333 = reshape(%332, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %334 = @func_1649(%333) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32]) */;
  %335 = cast(meta[relay.Constant][14] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %336 = reshape(%335, newshape=[13, 9, 15]) /* ty=Tensor[(13, 9, 15), float32] */;
  %337 = @func_5829(%336) /* ty=(Tensor[(13, 9, 15), uint16],) */;
  %338 = floor_mod(%330, %331) /* ty=Tensor[(13, 9, ?), float32] */;
  %339 = %334.1;
  %340 = %337.0;
  (%338, %339, %var_7174, %340, meta[relay.Constant][14] /* ty=Tensor[(1755), float32] */)
}

def @func_2179(%var_2151: Tensor[(13, 9, 8), float32]) -> (Tensor[(13, 9, 8), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %341 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %342 = %341.1;
  %343 = cast(%342, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %344 = cast(%var_2151, dtype="bool") /* ty=Tensor[(13, 9, 8), bool] */;
  %345 = @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %346 = equal(%343, %344) /* ty=Tensor[(13, 9, 8), bool] */;
  %347 = %345.0;
  %348 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  (%346, %347, %348)
}

def @func_418() -> (Tensor[(13, 9, 1), float32],) {
  %349 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %350 = %349.1;
  %351 = cast(%350, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %352 = sinh(%351) /* ty=Tensor[(13, 9, 1), float32] */;
  (%352,)
}

def @func_6902(%var_6847: Tensor[(10, 144), int8], %var_6848: Tensor[(15, 117), float32], %var_6866: Tensor[(10, 144), int8], %var_6872: Tensor[(640), float32]) -> (Tensor[(13, 9, ?), uint64], Tensor[(15, 117), float32], Tensor[(10, 144), uint16], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1638), float64], Tensor[(13, 9, 1), float32]) {
  %353 = cast(%var_6847, dtype="int8") /* ty=Tensor[(10, 144), int8] */;
  %354 = cast(%var_6848, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
  %355 = reshape(%353, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %356 = reshape(%354, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %357 = @func_4514(%355, %356) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, 1), float32]) */;
  %358 = cast(%var_6866, dtype="uint16") /* ty=Tensor[(10, 144), uint16] */;
  %359 = shape_of(%var_6847, dtype="int32") /* ty=Tensor[(2), int32] */;
  %360 = cast(%var_6847, dtype="uint16") /* ty=Tensor[(10, 144), uint16] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %362 = cast(meta[relay.Constant][15] /* ty=Tensor[(1638), uint32] */, dtype="uint32") /* ty=Tensor[(1638), uint32] */;
  %363 = cast(%var_6872, dtype="float32") /* ty=Tensor[(640), float32] */;
  %364 = reshape(%362, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), uint32] */;
  %365 = reshape(%363, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %366 = @func_2127(%364, %365) /* ty=(Tensor[(13, 9, 14), int64], Tensor[(13, 9, 7), float32], Tensor[(13, 9, ?), int16], Tensor[(8, 10, 8), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), int8], Tensor[(13, 9, 1), float32]) */;
  %367 = cast(meta[relay.Constant][15] /* ty=Tensor[(1638), uint32] */, dtype="uint32") /* ty=Tensor[(1638), uint32] */;
  %368 = reshape(%367, newshape=[1638]) /* ty=Tensor[(1638), uint32] */;
  %369 = @func_3696(%368) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(1638), uint32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */;
  %370 = @func_2527() /* ty=(Tensor[(13, 9, ?), int32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %371 = @func_2643() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %372 = %371.1;
  %373 = @func_5795() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %374 = %373.0;
  %375 = cast(%374, dtype="uint64") /* ty=Tensor[(13, 9, 1), uint64] */;
  %376 = shape_of(%372, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%372, dtype="uint64") /* ty=Tensor[(13, 9, 1), uint64] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %379 = bitwise_xor(%377, %378) /* ty=Tensor[(13, 9, ?), uint64] */;
  %380 = cast(meta[relay.Constant][15] /* ty=Tensor[(1638), uint32] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %381 = cast(%379, dtype="float64") /* ty=Tensor[(13, 9, ?), float64] */;
  %382 = %357.3;
  %383 = subtract(%360, %361) /* ty=Tensor[(10, 144), uint16] */;
  %384 = %366.3;
  %385 = %369.5;
  %386 = %370.1;
  %387 = power(%380, %381) /* ty=Tensor[(13, 9, 1638), float64] */;
  %388 = @func_1128() /* ty=Tensor[(13, 9, 1), float32] */;
  (%382, %var_6848, %383, %384, %var_6872, %385, %386, %387, %388)
}

def @func_475(%var_471: Tensor[(8, 10, 8), float32]) -> Tensor[(8, 10, 8), float32] {
  %389 = cast(8.95988f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %390 = cast(%var_471, dtype="float32") /* ty=Tensor[(8, 10, 8), float32] */;
  floor_mod(%389, %390) /* ty=Tensor[(8, 10, 8), float32] */
}

def @func_631() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %391 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %392 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  %393 = %391.1;
  (%392, %393)
}

def @func_4883() -> (Tensor[(13, 9, 1), float32],) {
  %394 = @func_1614() /* ty=Tensor[(13, 9, 1), float32] */;
  (%394,)
}

def @func_5778() -> (Tensor[(13, 9, 1), float32],) {
  %395 = @func_4109() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %396 = %395.0;
  (%396,)
}

def @func_8346(%var_8270: Tensor[(13, 9, 9), float32]) -> (Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 9), float32]) {
  %397 = @func_5640() /* ty=(Tensor[(13, 9, 1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %398 = @func_4883() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %399 = %398.0;
  %400 = cast(%399, dtype="uint32") /* ty=Tensor[(13, 9, 1), uint32] */;
  %401 = cast(%var_8270, dtype="uint32") /* ty=Tensor[(13, 9, 9), uint32] */;
  %402 = minimum(%400, %401) /* ty=Tensor[(13, 9, 9), uint32] */;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(13, 9, 9), float32] */;
  %404 = @func_7606() /* ty=Tensor[(16, 15, 10), float32] */;
  %405 = %397.2;
  %406 = atan(%403) /* ty=Tensor[(13, 9, 9), float32] */;
  (%404, %405, %406)
}

def @func_6205(%var_6190: Tensor[(14, 6, 9), float32]) -> (Tensor[(14, 6, 9), float32], Tensor[(14, 6, 9), bool]) {
  %407 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 6, 9), float32] */, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
  %408 = shape_of(%var_6190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%var_6190, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %411 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 6, 9), float32] */, dtype="bool") /* ty=Tensor[(14, 6, 9), bool] */;
  %412 = shape_of(%var_6190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%var_6190, dtype="bool") /* ty=Tensor[(14, 6, 9), bool] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %415 = divide(%409, %410) /* ty=Tensor[(14, 6, 9), float32] */;
  %416 = equal(%413, %414) /* ty=Tensor[(14, 6, 9), bool] */;
  (%415, %416)
}

def @func_3493() -> (Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  %417 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %418 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %419 = %417.4;
  %420 = %418.1;
  (%419, %420)
}

def @func_6089(%var_6084: Tensor[(96), float64]) -> (Tensor[(13, 9, 1), float32], Tensor[(8, 1, 12), float64], Tensor[(96), float64]) {
  %421 = @func_5473() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %422 = cast(%var_6084, dtype="float64") /* ty=Tensor[(96), float64] */;
  %423 = reshape(%422, newshape=[8, 1, 12]) /* ty=Tensor[(8, 1, 12), float64] */;
  %424 = @func_1830(%423) /* ty=(Tensor[(8, 1, 12), float64],) */;
  %425 = %421.0;
  %426 = %424.0;
  (%425, %426, %var_6084)
}

def @func_122() -> Tensor[(13, 9, 1), float32] {
  %427 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %427.4
}

def @func_5795() -> (Tensor[(13, 9, 1), float32],) {
  %428 = @func_4999() /* ty=(Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(2, 320), float32]) */;
  %429 = %428.1;
  (%429,)
}

def @func_7043() -> (Tensor[(13, 9, 1), float32], Tensor[(14, 13, 11), int64], Tensor[(1, 2002), int64], Tensor[(1053), uint32]) {
  %430 = @func_5640() /* ty=(Tensor[(13, 9, 1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %431 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 2002), int64] */, dtype="int64") /* ty=Tensor[(1, 2002), int64] */;
  %432 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 2002), int64] */, dtype="int64") /* ty=Tensor[(1, 2002), int64] */;
  %433 = reshape(%431, newshape=[14, 13, 11]) /* ty=Tensor[(14, 13, 11), int64] */;
  %434 = reshape(%432, newshape=[14, 13, 11]) /* ty=Tensor[(14, 13, 11), int64] */;
  %435 = @func_2626() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */;
  %436 = %430.2;
  %437 = @func_6559(%433, %434) /* ty=Tensor[(14, 13, 11), int64] */;
  %438 = %435.0;
  (%436, %437, meta[relay.Constant][17] /* ty=Tensor[(1, 2002), int64] */, %438)
}

def @func_4360(%var_4294: Tensor[(5, 4, 14), float64]) -> (Tensor[(5, 4, 14), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %439 = cast(%var_4294, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
  %440 = @func_2421() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %441 = acos(%439) /* ty=Tensor[(5, 4, 14), float64] */;
  %442 = @func_3433() /* ty=Tensor[(13, 9, 1), float32] */;
  %443 = %440.0;
  (%441, %442, %443)
}

def @func_3433() -> Tensor[(13, 9, 1), float32] {
  %444 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %444.1
}

def @func_501() -> (Tensor[(13, 9, 1), float32],) {
  %445 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  (%445,)
}

def @func_3266(%var_3241: Tensor[(13, 9, 1), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int64]) {
  %446 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %447 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %448 = %447.1;
  %449 = cast(%var_3241, dtype="int64") /* ty=Tensor[(13, 9, 1), int64] */;
  %450 = shape_of(%448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(%448, dtype="int64") /* ty=Tensor[(13, 9, 1), int64] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %453 = %446.0;
  %454 = bitwise_and(%451, %452) /* ty=Tensor[(13, 9, ?), int64] */;
  (%453, %454)
}

def @func_2626() -> (Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) {
  %455 = cast(meta[relay.Constant][18] /* ty=Tensor[(1053), uint32] */, dtype="uint32") /* ty=Tensor[(1053), uint32] */;
  %456 = reshape(%455, newshape=[13, 9, 9]) /* ty=Tensor[(13, 9, 9), uint32] */;
  %457 = @func_565(%456) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 9), float32], Tensor[(13, 9, 1), float32]) */;
  %458 = %457.0;
  %459 = @func_501() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %460 = %459.0;
  %461 = cast(%460, dtype="uint32") /* ty=Tensor[(13, 9, 1), uint32] */;
  %462 = shape_of(%458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%458, dtype="uint32") /* ty=Tensor[(13, 9, 1), uint32] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %465 = left_shift(%463, %464) /* ty=Tensor[(13, 9, ?), uint32] */;
  (meta[relay.Constant][18] /* ty=Tensor[(1053), uint32] */, %465)
}

def @func_8545() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), float32], Tensor[(13, 9, ?), bool]) {
  %466 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %467 = %466.2;
  %468 = cast(%467, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %469 = reshape(%468, newshape=[13, 9, 1]) /* ty=Tensor[(13, 9, 1), float32] */;
  %470 = @func_3938(%469) /* ty=(Tensor[(13, 9, ?), float32],) */;
  %471 = @func_2643() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %472 = %471.1;
  %473 = @func_5778() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %474 = %473.0;
  %475 = cast(%474, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %476 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %477 = cast(%472, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %478 = dyn.reshape(%475, %476, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %479 = %470.0;
  %480 = greater(%477, %478) /* ty=Tensor[(13, 9, ?), bool] */;
  (%467, %479, %480)
}

def @func_6039(%var_6001: Tensor[(1755), float32]) -> (Tensor[(3, 14, 4), float32], Tensor[(1755), float32], Tensor[(13, 9, 15), float64], Tensor[(13, 9, 1), float32]) {
  %481 = @func_3133() /* ty=(Tensor[(3, 14, 4), float32],) */;
  %482 = cast(%var_6001, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %483 = reshape(%482, newshape=[13, 9, 15]) /* ty=Tensor[(13, 9, 15), float32] */;
  %484 = @func_5829(%483) /* ty=(Tensor[(13, 9, 15), uint16],) */;
  %485 = %484.0;
  %486 = cast(%485, dtype="float64") /* ty=Tensor[(13, 9, 15), float64] */;
  %487 = @func_5540() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), float32], Tensor[(13, 9, 1), float32]) */;
  %488 = %481.0;
  %489 = sin(%486) /* ty=Tensor[(13, 9, 15), float64] */;
  %490 = %487.1;
  (%488, %var_6001, %489, %490)
}

def @func_155() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %491 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  %492 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  (%491, %492)
}

def @func_9617() -> (Tensor[(1053), float32], Tensor[(13, 9, 1440), int8]) {
  %493 = @func_4133() /* ty=(Tensor[(1053), float32],) */;
  %494 = @func_7155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, 1440), bool]) */;
  %495 = %494.1;
  %496 = @func_3036() /* ty=Tensor[(13, 9, 1), float32] */;
  %497 = cast(%495, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %498 = cast(%496, dtype="int8") /* ty=Tensor[(13, 9, 1), int8] */;
  %499 = %493.0;
  %500 = right_shift(%497, %498) /* ty=Tensor[(13, 9, 1440), int8] */;
  (%499, %500)
}

def @func_6304() -> Tensor[(13, 9, 1), float32] {
  %501 = @func_3375() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %501.0
}

def @func_4999() -> (Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(2, 320), float32]) {
  %502 = @func_4629() /* ty=(Tensor[(16, 15, 10), float32],) */;
  %503 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 320), float32] */, dtype="float32") /* ty=Tensor[(2, 320), float32] */;
  %504 = reshape(%503, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %505 = @func_664(%504) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */;
  %506 = %502.0;
  %507 = @func_3036() /* ty=Tensor[(13, 9, 1), float32] */;
  %508 = %505.3;
  (%506, %507, %508, meta[relay.Constant][19] /* ty=Tensor[(2, 320), float32] */)
}

def @main() -> Tensor[(13, 9, 2002), bool] {
  %509 = @func_7750() /* ty=(Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32]) */;
  %510 = %509.1;
  %511 = @func_7043() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(14, 13, 11), int64], Tensor[(1, 2002), int64], Tensor[(1053), uint32]) */;
  %512 = %511.2;
  %513 = cast(%510, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %514 = cast(%512, dtype="bool") /* ty=Tensor[(1, 2002), bool] */;
  %515 = less(%513, %514) /* ty=Tensor[(13, 9, 2002), bool] */;
  %516 = cast(%512, dtype="float32") /* ty=Tensor[(1, 2002), float32] */;
  %517 = log10(%516) /* ty=Tensor[(1, 2002), float32] */;
  %518 = cast(%515, dtype="bool") /* ty=Tensor[(13, 9, 2002), bool] */;
  %519 = cast(%517, dtype="bool") /* ty=Tensor[(1, 2002), bool] */;
  equal(%518, %519) /* ty=Tensor[(13, 9, 2002), bool] */
}

def @func_7307(%var_7274: Tensor[(16, 15, 10), float64]) -> Tensor[(16, 15, 10), bool] {
  %520 = @func_5078() /* ty=(Tensor[(16, 15, 10), float64],) */;
  %521 = %520.0;
  %522 = cast(%var_7274, dtype="bool") /* ty=Tensor[(16, 15, 10), bool] */;
  %523 = shape_of(%521, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%521, dtype="bool") /* ty=Tensor[(16, 15, 10), bool] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%524, %525) /* ty=Tensor[(16, 15, 10), bool] */
}

def @func_5739() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %526 = @func_4202() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %527 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %528 = %526.1;
  %529 = %527.2;
  (%528, %529)
}

def @func_7446() -> (Tensor[(13, 9, ?), uint64],) {
  %530 = @func_7084() /* ty=(Tensor[(13, 9, ?), uint64],) */;
  %531 = %530.0;
  (%531,)
}

def @func_10142(%var_10135: Tensor[(13, 9, 8), float32]) -> (Tensor[(13, 9, 8), bool],) {
  %532 = @func_6764() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %533 = %532.0;
  %534 = cast(%533, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %535 = cast(%var_10135, dtype="bool") /* ty=Tensor[(13, 9, 8), bool] */;
  %536 = less_equal(%534, %535) /* ty=Tensor[(13, 9, 8), bool] */;
  (%536,)
}

def @func_2421() -> (Tensor[(13, 9, 1), float32],) {
  %537 = @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %538 = %537.0;
  (%538,)
}

def @func_2374(%var_2350: Tensor[(13, 9, 8), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 8), uint16]) {
  %539 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %540 = @func_1677() /* ty=(Tensor[(13, 9, ?), uint32],) */;
  %541 = %540.0;
  %542 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %543 = %542.0;
  %544 = cast(%543, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %545 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%541, dtype="float32") /* ty=Tensor[(13, 9, ?), float32] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %548 = floor_divide(%546, %547) /* ty=Tensor[(13, 9, ?), float32] */;
  %549 = cast(%548, dtype="float64") /* ty=Tensor[(13, 9, ?), float64] */;
  %550 = cast(%var_2350, dtype="float64") /* ty=Tensor[(13, 9, 8), float64] */;
  %551 = divide(%549, %550) /* ty=Tensor[(13, 9, 8), float64] */;
  %552 = cast(%551, dtype="uint16") /* ty=Tensor[(13, 9, 8), uint16] */;
  %553 = cast(%548, dtype="uint16") /* ty=Tensor[(13, 9, ?), uint16] */;
  %554 = %539.0;
  %555 = bitwise_and(%552, %553) /* ty=Tensor[(13, 9, 8), uint16] */;
  (%554, %555)
}

def @func_7196() -> (Tensor[(13, 9, 1), float32],) {
  %556 = @func_501() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %557 = %556.0;
  (%557,)
}

def @func_3832(%var_3778: Tensor[(1440), int8]) -> (Tensor[(13, 9, 7), float32], Tensor[(1440), int8], Tensor[(160, 4), float32]) {
  %558 = cast(%var_3778, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %559 = reshape(%558, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %560 = @func_1915(%559) /* ty=(Tensor[(160, 4), float32], Tensor[(13, 9, 1440), bool]) */;
  %561 = %560.0;
  %562 = cast(%561, dtype="float32") /* ty=Tensor[(160, 4), float32] */;
  %563 = @func_1997() /* ty=Tensor[(13, 9, 7), float32] */;
  %564 = sigmoid(%562) /* ty=Tensor[(160, 4), float32] */;
  (%563, %var_3778, %564)
}

def @func_8028(%var_8008: Tensor[(13, 9, 5), float32]) -> (Tensor[(13, 9, 5), bool], Tensor[(16, 15, 10), float32]) {
  %565 = @func_7430() /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %566 = %565.2;
  %567 = cast(%566, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %568 = cast(%var_8008, dtype="bool") /* ty=Tensor[(13, 9, 5), bool] */;
  %569 = @func_4629() /* ty=(Tensor[(16, 15, 10), float32],) */;
  %570 = logical_and(%567, %568) /* ty=Tensor[(13, 9, 5), bool] */;
  %571 = %569.0;
  (%570, %571)
}

def @func_5422() -> Tensor[(13, 9, ?), uint32] {
  @func_371() /* ty=Tensor[(13, 9, ?), uint32] */
}

def @func_6764() -> (Tensor[(13, 9, 1), float32],) {
  %572 = @func_1614() /* ty=Tensor[(13, 9, 1), float32] */;
  (%572,)
}

def @func_5829(%var_5823: Tensor[(13, 9, 15), float32]) -> (Tensor[(13, 9, 15), uint16],) {
  %573 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %574 = %573.1;
  %575 = cast(%574, dtype="uint16") /* ty=Tensor[(13, 9, 1), uint16] */;
  %576 = cast(%var_5823, dtype="uint16") /* ty=Tensor[(13, 9, 15), uint16] */;
  %577 = multiply(%575, %576) /* ty=Tensor[(13, 9, 15), uint16] */;
  (%577,)
}

def @func_10087() -> Tensor[(13, 9, ?), uint32] {
  %578 = @func_7413() /* ty=(Tensor[(13, 9, ?), uint32],) */;
  %578.0
}

def @func_1915(%var_1901: Tensor[(1440), int8]) -> (Tensor[(160, 4), float32], Tensor[(13, 9, 1440), bool]) {
  %579 = cast(%var_1901, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %580 = reshape(%579, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int8] */;
  %581 = @func_1299(%580) /* ty=(Tensor[(10, 9, 16), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(160, 4), float32]) */;
  %582 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %583 = %582.3;
  %584 = cast(%var_1901, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %585 = cast(%583, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %586 = %581.3;
  %587 = less_equal(%584, %585) /* ty=Tensor[(13, 9, 1440), bool] */;
  (%586, %587)
}

def @func_1299(%var_1251: Tensor[(10, 9, 16), int8]) -> (Tensor[(10, 9, 16), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(160, 4), float32]) {
  %588 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 9, 16), int8] */, dtype="int8") /* ty=Tensor[(10, 9, 16), int8] */;
  %589 = shape_of(%var_1251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%var_1251, dtype="int8") /* ty=Tensor[(10, 9, 16), int8] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %592 = @func_200() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %593 = cast(meta[relay.Constant][21] /* ty=Tensor[(160, 4), float32] */, dtype="float32") /* ty=Tensor[(160, 4), float32] */;
  %594 = reshape(%593, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %595 = @func_664(%594) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */;
  %596 = bitwise_and(%590, %591) /* ty=Tensor[(10, 9, 16), int8] */;
  %597 = %592.0;
  %598 = %595.3;
  (%596, %597, %598, meta[relay.Constant][21] /* ty=Tensor[(160, 4), float32] */)
}

def @func_247() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %599 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %600 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %601 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  %602 = %599.0;
  %603 = %600.0;
  (%601, %602, %603)
}

def @func_8871() -> (Tensor[(13, 9, 1), float32],) {
  %604 = @func_4589() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %605 = %604.0;
  (%605,)
}

def @func_4202() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %606 = @func_3093() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %607 = %606.0;
  %608 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  (%607, %608)
}

def @func_4133() -> (Tensor[(1053), float32],) {
  %609 = @func_2626() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */;
  %610 = %609.0;
  %611 = cast(meta[relay.Constant][22] /* ty=Tensor[(1053), uint32] */, dtype="float32") /* ty=Tensor[(1053), float32] */;
  %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(1), int32] */;
  %613 = cast(%610, dtype="float32") /* ty=Tensor[(1053), float32] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?), float32] */;
  %615 = floor_mod(%613, %614) /* ty=Tensor[(1053), float32] */;
  (%615,)
}

def @func_1997() -> Tensor[(13, 9, 7), float32] {
  %616 = @func_1128() /* ty=Tensor[(13, 9, 1), float32] */;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %618 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 9, 7), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 7), float32] */;
  divide(%617, %618) /* ty=Tensor[(13, 9, 7), float32] */
}

def @func_4404() -> (Tensor[(13, 9, 1), float32],) {
  %619 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %620 = %619.0;
  (%620,)
}

def @func_7581() -> Tensor[(13, 9, 1), float32] {
  %621 = @func_7502() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %621.0
}

def @func_1595(%var_1545: Tensor[(13, 9, 10), float32], %var_1568: Tensor[(720, 2), int8]) -> (Tensor[(13, 9, 10), bool], Tensor[(160, 4), float32], Tensor[(720, 2), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %622 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  %623 = cast(%622, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %624 = cast(%var_1545, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
  %625 = cast(%var_1568, dtype="int8") /* ty=Tensor[(720, 2), int8] */;
  %626 = reshape(%625, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int8] */;
  %627 = @func_1299(%626) /* ty=(Tensor[(10, 9, 16), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(160, 4), float32]) */;
  %628 = cast(%622, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %629 = @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %630 = greater_equal(%623, %624) /* ty=Tensor[(13, 9, 10), bool] */;
  %631 = %627.3;
  %632 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  %633 = cosh(%628) /* ty=Tensor[(13, 9, 1), float32] */;
  %634 = %629.0;
  (%630, %631, %var_1568, %632, %633, %634)
}

def @func_8224() -> (Tensor[(13, 9, ?), uint32],) {
  %635 = @func_371() /* ty=Tensor[(13, 9, ?), uint32] */;
  (%635,)
}

def @func_7084() -> (Tensor[(13, 9, ?), uint64],) {
  %636 = @func_4700() /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32]) */;
  %637 = %636.0;
  (%637,)
}

def @func_1614() -> Tensor[(13, 9, 1), float32] {
  @func_21() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_5473() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %638 = @func_308() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %639 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %640 = %638.1;
  %641 = %639.0;
  (%640, %641)
}

def @func_1128() -> Tensor[(13, 9, 1), float32] {
  %642 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %642.0
}

def @func_9793() -> (Tensor[(13, 9, 1), float32],) {
  %643 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %644 = %643.0;
  (%644,)
}

def @func_1972() -> Tensor[(13, 9, 1), float32] {
  %645 = @func_631() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %645.1
}

def @func_4818() -> (Tensor[(13, 9, 1), float32],) {
  %646 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %647 = %646.3;
  (%647,)
}

def @func_7999(%var_7974: Tensor[(4, 11, 8), float64]) -> Tensor[(4, 11, 8), float64] {
  %648 = cast(%var_7974, dtype="float64") /* ty=Tensor[(4, 11, 8), float64] */;
  %649 = cos(%648) /* ty=Tensor[(4, 11, 8), float64] */;
  %650 = cast(%649, dtype="float64") /* ty=Tensor[(4, 11, 8), float64] */;
  asinh(%650) /* ty=Tensor[(4, 11, 8), float64] */
}

def @func_4589() -> (Tensor[(13, 9, 1), float32],) {
  %651 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  (%651,)
}

def @func_1323() -> (Tensor[(13, 9, 1), float32],) {
  %652 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %653 = %652.1;
  (%653,)
}

def @func_3000(%var_2825: Tensor[(20, 72), int8], %var_2860: Tensor[(20, 72), int8], %var_2921: Tensor[(13, 9, 15), float32], %var_2959: Tensor[(20, 72), float64]) -> (Tensor[(13, 9, ?), float64], Tensor[(13, 9, 1), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(20, 72), float64], Tensor[(13, 9, ?), uint16], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(640), float32], Tensor[(13, 9, 15), float64], Tensor[(720, 2), int8], Tensor[(1170), float32], Tensor[(160, 4), float32], Tensor[(20, 72), int8], Tensor[(640), float32], Tensor[(13, 9, ?), uint32]) {
  %654 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %655 = %654.0;
  %656 = @func_1614() /* ty=Tensor[(13, 9, 1), float32] */;
  %657 = cast(%656, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
  %658 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%655, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %661 = @func_981() /* ty=(Tensor[(13, 9, 1), float64],) */;
  %662 = cast(%var_2825, dtype="int8") /* ty=Tensor[(20, 72), int8] */;
  %663 = reshape(%662, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int8] */;
  %664 = @func_1299(%663) /* ty=(Tensor[(10, 9, 16), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(160, 4), float32]) */;
  %665 = cast(%var_2860, dtype="float64") /* ty=Tensor[(20, 72), float64] */;
  %666 = shape_of(%var_2825, dtype="int32") /* ty=Tensor[(2), int32] */;
  %667 = cast(%var_2825, dtype="float64") /* ty=Tensor[(20, 72), float64] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %669 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  %670 = cast(%669, dtype="uint16") /* ty=Tensor[(13, 9, 1), uint16] */;
  %671 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%655, dtype="uint16") /* ty=Tensor[(13, 9, 1), uint16] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %674 = cast(meta[relay.Constant][24] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %675 = reshape(%674, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %676 = @func_2454(%675) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(8, 10, 8), float32]) */;
  %677 = cast(%656, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
  %678 = cast(%var_2921, dtype="float64") /* ty=Tensor[(13, 9, 15), float64] */;
  %679 = cast(meta[relay.Constant][25] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %680 = cast(%var_2825, dtype="int8") /* ty=Tensor[(20, 72), int8] */;
  %681 = reshape(%679, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), float32] */;
  %682 = reshape(%680, newshape=[720, 2]) /* ty=Tensor[(720, 2), int8] */;
  %683 = @func_1595(%681, %682) /* ty=(Tensor[(13, 9, 10), bool], Tensor[(160, 4), float32], Tensor[(720, 2), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %684 = cast(%var_2860, dtype="float64") /* ty=Tensor[(20, 72), float64] */;
  %685 = sigmoid(%684) /* ty=Tensor[(20, 72), float64] */;
  %686 = cast(%685, dtype="int8") /* ty=Tensor[(20, 72), int8] */;
  %687 = reshape(%686, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %688 = @func_1915(%687) /* ty=(Tensor[(160, 4), float32], Tensor[(13, 9, 1440), bool]) */;
  %689 = cast(%var_2959, dtype="int8") /* ty=Tensor[(20, 72), int8] */;
  %690 = shape_of(%685, dtype="int32") /* ty=Tensor[(2), int32] */;
  %691 = cast(%685, dtype="int8") /* ty=Tensor[(20, 72), int8] */;
  %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %693 = cast(meta[relay.Constant][24] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %694 = reshape(%693, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %695 = @func_1649(%694) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32]) */;
  %696 = @func_1677() /* ty=(Tensor[(13, 9, ?), uint32],) */;
  %697 = mod(%659, %660) /* ty=Tensor[(13, 9, ?), float64] */;
  %698 = %661.0;
  %699 = %664.1;
  %700 = @func_1972() /* ty=Tensor[(13, 9, 1), float32] */;
  %701 = mod(%667, %668) /* ty=Tensor[(20, 72), float64] */;
  %702 = maximum(%672, %673) /* ty=Tensor[(13, 9, ?), uint16] */;
  %703 = @func_1128() /* ty=Tensor[(13, 9, 1), float32] */;
  %704 = %676.0;
  %705 = floor_divide(%677, %678) /* ty=Tensor[(13, 9, 15), float64] */;
  %706 = %683.2;
  %707 = %688.0;
  %708 = bitwise_and(%691, %692) /* ty=Tensor[(20, 72), int8] */;
  %709 = %695.2;
  %710 = %696.0;
  (%697, %698, %699, %700, %701, %702, %703, %704, meta[relay.Constant][24] /* ty=Tensor[(640), float32] */, %705, %706, meta[relay.Constant][25] /* ty=Tensor[(1170), float32] */, %707, %708, %709, %710)
}

def @func_4936(%var_4905: Tensor[(13, 9, 6), float32]) -> (Tensor[(13, 9, 6), bool], Tensor[(13, 9, 1), float32]) {
  %711 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  %712 = cast(%711, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %713 = cast(%var_4905, dtype="bool") /* ty=Tensor[(13, 9, 6), bool] */;
  %714 = @func_937() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(13, 9, 1), float32]) */;
  %715 = logical_and(%712, %713) /* ty=Tensor[(13, 9, 6), bool] */;
  %716 = %714.4;
  (%715, %716)
}

def @func_6530(%var_6477: Tensor[(1053), int16]) -> (Tensor[(1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(1053), uint32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %717 = @func_4133() /* ty=(Tensor[(1053), float32],) */;
  %718 = %717.0;
  %719 = cast(meta[relay.Constant][26] /* ty=Tensor[(1053), float32] */, dtype="int16") /* ty=Tensor[(1053), int16] */;
  %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(1), int32] */;
  %721 = cast(%718, dtype="int16") /* ty=Tensor[(1053), int16] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?), int16] */;
  %723 = bitwise_or(%721, %722) /* ty=Tensor[(1053), int16] */;
  %724 = cast(%var_6477, dtype="bool") /* ty=Tensor[(1053), bool] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(1), int32] */;
  %726 = cast(%723, dtype="bool") /* ty=Tensor[(1053), bool] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?), bool] */;
  %728 = @func_5795() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %729 = @func_1692() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %730 = @func_2626() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */;
  %731 = @func_631() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %732 = equal(%726, %727) /* ty=Tensor[(1053), bool] */;
  %733 = %728.0;
  %734 = %729.0;
  %735 = %730.0;
  %736 = @func_6304() /* ty=Tensor[(13, 9, 1), float32] */;
  %737 = %731.1;
  (%732, %733, %734, %735, %736, %737)
}

def @func_493() -> (Tensor[(13, 9, 1), float32],) {
  %738 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %739 = %738.0;
  (%739,)
}

def @func_5540() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), float32], Tensor[(13, 9, 1), float32]) {
  %740 = @func_2527() /* ty=(Tensor[(13, 9, ?), int32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %741 = @func_5254() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(5, 4, 14), float64], Tensor[(70, 4), float64], Tensor[(16, 15, 10), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %742 = %741.4;
  %743 = cast(%742, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %744 = reshape(%743, newshape=[13, 9, 1]) /* ty=Tensor[(13, 9, 1), float32] */;
  %745 = @func_3938(%744) /* ty=(Tensor[(13, 9, ?), float32],) */;
  %746 = @func_3493() /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %747 = %740.1;
  %748 = %745.0;
  %749 = %746.1;
  (%747, %742, %748, %749)
}

def @func_937() -> (Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(13, 9, 1), float32]) {
  %750 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %751 = cast(meta[relay.Constant][27] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %752 = reshape(%751, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %753 = @func_664(%752) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */;
  %754 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  %755 = cast(%754, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %756 = acosh(%755) /* ty=Tensor[(13, 9, 1), float32] */;
  %757 = cast(%754, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %758 = shape_of(%756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%756, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %761 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %762 = %750.2;
  %763 = %753.1;
  %764 = logical_and(%759, %760) /* ty=Tensor[(13, 9, ?), bool] */;
  %765 = %761.0;
  (%762, %763, meta[relay.Constant][27] /* ty=Tensor[(640), float32] */, %764, %765)
}

def @func_2389() -> (Tensor[(13, 9, 1), float32],) {
  %766 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %767 = %766.1;
  (%767,)
}

def @func_6697(%var_6693: Tensor[(96), float64]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(8, 1, 12), float64], Tensor[(96), float64]) {
  %768 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %769 = cast(%var_6693, dtype="float64") /* ty=Tensor[(96), float64] */;
  %770 = reshape(%769, newshape=[8, 1, 12]) /* ty=Tensor[(8, 1, 12), float64] */;
  %771 = @func_1830(%770) /* ty=(Tensor[(8, 1, 12), float64],) */;
  %772 = @func_4078() /* ty=Tensor[(13, 9, 1), float32] */;
  %773 = %768.3;
  %774 = %771.0;
  (%772, %773, %774, %var_6693)
}

def @func_3375() -> (Tensor[(13, 9, 1), float32],) {
  %775 = @func_1972() /* ty=Tensor[(13, 9, 1), float32] */;
  (%775,)
}

def @func_371() -> Tensor[(13, 9, ?), uint32] {
  %776 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  %777 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %778 = %777.0;
  %779 = cast(%778, dtype="uint32") /* ty=Tensor[(13, 9, 1), uint32] */;
  %780 = shape_of(%776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%776, dtype="uint32") /* ty=Tensor[(13, 9, 1), uint32] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  logical_xor(%781, %782) /* ty=Tensor[(13, 9, ?), uint32] */
}

def @func_4032() -> (Tensor[(13, 9, 1), float32],) {
  %783 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %784 = %783.0;
  (%784,)
}

def @func_1073() -> Tensor[(13, 9, ?), uint64] {
  %785 = @func_501() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %786 = %785.0;
  %787 = cast(%786, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %788 = atan(%787) /* ty=Tensor[(13, 9, 1), float32] */;
  %789 = cast(%788, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %790 = shape_of(%786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%786, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %793 = power(%791, %792) /* ty=Tensor[(13, 9, ?), float32] */;
  %794 = cast(%788, dtype="uint64") /* ty=Tensor[(13, 9, 1), uint64] */;
  %795 = shape_of(%793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %796 = cast(%793, dtype="uint64") /* ty=Tensor[(13, 9, ?), uint64] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_or(%796, %797) /* ty=Tensor[(13, 9, ?), uint64] */
}

def @func_5115() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  %798 = @func_2421() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %799 = @func_2626() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */;
  %800 = @func_200() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %801 = %798.0;
  %802 = %799.1;
  %803 = %800.0;
  (%801, %802, %803)
}

def @func_7750() -> (Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32]) {
  %804 = @func_4629() /* ty=(Tensor[(16, 15, 10), float32],) */;
  %805 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %806 = %804.0;
  %807 = %805.1;
  (%806, %807)
}

def @func_2224() -> (Tensor[(13, 9, 1), float64],) {
  %808 = @func_981() /* ty=(Tensor[(13, 9, 1), float64],) */;
  %809 = %808.0;
  (%809,)
}

def @func_2454(%var_2439: Tensor[(640), float32]) -> (Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(8, 10, 8), float32]) {
  %810 = @func_1677() /* ty=(Tensor[(13, 9, ?), uint32],) */;
  %811 = cast(%var_2439, dtype="float32") /* ty=Tensor[(640), float32] */;
  %812 = reshape(%811, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), float32] */;
  %813 = cast(%var_2439, dtype="float32") /* ty=Tensor[(640), float32] */;
  %814 = reshape(%813, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %815 = @func_664(%814) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */;
  %816 = %810.0;
  %817 = @func_475(%812) /* ty=Tensor[(8, 10, 8), float32] */;
  %818 = %815.1;
  (%816, %817, %var_2439, %818)
}

def @func_9215() -> Tensor[(13, 9, 1), float32] {
  %819 = @func_3375() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %819.0
}

def @func_9336(%var_9326: Tensor[(13, 9, 9), float32]) -> Tensor[(13, 9, 9), float32] {
  %820 = @func_6642() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %821 = %820.0;
  %822 = cast(%821, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %823 = cast(%var_9326, dtype="float32") /* ty=Tensor[(13, 9, 9), float32] */;
  mod(%822, %823) /* ty=Tensor[(13, 9, 9), float32] */
}

def @func_76() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %824 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  %825 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  %826 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  %827 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  %828 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  (%824, %825, %826, %827, %828)
}

def @func_565(%var_541: Tensor[(13, 9, 9), uint32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 9), float32], Tensor[(13, 9, 1), float32]) {
  %829 = @func_308() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %830 = @func_371() /* ty=Tensor[(13, 9, ?), uint32] */;
  %831 = cast(%830, dtype="uint16") /* ty=Tensor[(13, 9, ?), uint16] */;
  %832 = cast(%var_541, dtype="uint16") /* ty=Tensor[(13, 9, 9), uint16] */;
  %833 = right_shift(%831, %832) /* ty=Tensor[(13, 9, 9), uint16] */;
  %834 = cast(%833, dtype="float32") /* ty=Tensor[(13, 9, 9), float32] */;
  %835 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %836 = %829.0;
  %837 = exp(%834) /* ty=Tensor[(13, 9, 9), float32] */;
  %838 = %835.0;
  (%836, %837, %838)
}

def @func_3852() -> (Tensor[(13, 9, ?), uint32],) {
  %839 = @func_1677() /* ty=(Tensor[(13, 9, ?), uint32],) */;
  %840 = %839.0;
  (%840,)
}

def @func_10065() -> (Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  %841 = @func_9273() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32]) */;
  %842 = @func_5778() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %843 = %841.1;
  %844 = %842.0;
  (%843, %844)
}

def @func_5445() -> (Tensor[(13, 9, 1), float32],) {
  %845 = @func_200() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %846 = %845.0;
  (%846,)
}

def @func_10419(%var_10403: Tensor[(3, 14, 4), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(3, 14, 4), float32]) {
  %847 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %848 = @func_3133() /* ty=(Tensor[(3, 14, 4), float32],) */;
  %849 = %848.0;
  %850 = cast(%var_10403, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
  %851 = shape_of(%849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %852 = cast(%849, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %854 = %847.1;
  %855 = @func_5422() /* ty=Tensor[(13, 9, ?), uint32] */;
  %856 = power(%852, %853) /* ty=Tensor[(3, 14, 4), float32] */;
  (%854, %855, %856)
}

def @func_2527() -> (Tensor[(13, 9, ?), int32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %857 = @func_1073() /* ty=Tensor[(13, 9, ?), uint64] */;
  %858 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %859 = %858.0;
  %860 = cast(%859, dtype="int32") /* ty=Tensor[(13, 9, 1), int32] */;
  %861 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%857, dtype="int32") /* ty=Tensor[(13, 9, ?), int32] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %864 = @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %865 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %866 = subtract(%862, %863) /* ty=Tensor[(13, 9, ?), int32] */;
  %867 = %864.0;
  %868 = %865.1;
  (%866, %867, %868)
}

def @func_3093() -> (Tensor[(13, 9, 1), float32],) {
  %869 = @func_200() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %870 = %869.0;
  (%870,)
}

def @func_2127(%var_2019: Tensor[(13, 9, 14), uint32], %var_2033: Tensor[(640), float32]) -> (Tensor[(13, 9, 14), int64], Tensor[(13, 9, 7), float32], Tensor[(13, 9, ?), int16], Tensor[(8, 10, 8), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), int8], Tensor[(13, 9, 1), float32]) {
  %871 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %872 = %871.4;
  %873 = cast(%872, dtype="int64") /* ty=Tensor[(13, 9, ?), int64] */;
  %874 = cast(%var_2019, dtype="int64") /* ty=Tensor[(13, 9, 14), int64] */;
  %875 = @func_887() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int16]) */;
  %876 = cast(%var_2033, dtype="float32") /* ty=Tensor[(640), float32] */;
  %877 = reshape(%876, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), float32] */;
  %878 = @func_475(%877) /* ty=Tensor[(8, 10, 8), float32] */;
  %879 = cast(%878, dtype="float32") /* ty=Tensor[(8, 10, 8), float32] */;
  %880 = @func_937() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(13, 9, 1), float32]) */;
  %881 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %882 = cast(%872, dtype="int8") /* ty=Tensor[(13, 9, ?), int8] */;
  %883 = cast(%var_2033, dtype="int8") /* ty=Tensor[(640), int8] */;
  %884 = add(%873, %874) /* ty=Tensor[(13, 9, 14), int64] */;
  %885 = @func_1997() /* ty=Tensor[(13, 9, 7), float32] */;
  %886 = %875.1;
  %887 = log2(%879) /* ty=Tensor[(8, 10, 8), float32] */;
  %888 = %880.0;
  %889 = @func_1073() /* ty=Tensor[(13, 9, ?), uint64] */;
  %890 = %881.2;
  %891 = add(%882, %883) /* ty=Tensor[(13, 9, 640), int8] */;
  %892 = @func_1972() /* ty=Tensor[(13, 9, 1), float32] */;
  (%884, %885, %886, %887, %888, %889, %890, %891, %892)
}

def @func_7155() -> (Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, 1440), bool]) {
  %893 = @func_2421() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %894 = cast(meta[relay.Constant][28] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
  %895 = reshape(%894, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %896 = @func_3832(%895) /* ty=(Tensor[(13, 9, 7), float32], Tensor[(1440), int8], Tensor[(160, 4), float32]) */;
  %897 = @func_6304() /* ty=Tensor[(13, 9, 1), float32] */;
  %898 = cast(meta[relay.Constant][28] /* ty=Tensor[(1440), int8] */, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %899 = cast(%897, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %900 = %893.0;
  %901 = %896.1;
  %902 = greater_equal(%898, %899) /* ty=Tensor[(13, 9, 1440), bool] */;
  (%900, %901, %902)
}

def @func_3696(%var_3686: Tensor[(1638), uint32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(1638), uint32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) {
  %903 = @func_308() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %904 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %905 = cast(%var_3686, dtype="uint32") /* ty=Tensor[(1638), uint32] */;
  %906 = cast(meta[relay.Constant][29] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %907 = reshape(%905, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), uint32] */;
  %908 = reshape(%906, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %909 = @func_2127(%907, %908) /* ty=(Tensor[(13, 9, 14), int64], Tensor[(13, 9, 7), float32], Tensor[(13, 9, ?), int16], Tensor[(8, 10, 8), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), int8], Tensor[(13, 9, 1), float32]) */;
  %910 = %903.1;
  %911 = cast(%910, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %912 = reshape(%911, newshape=[13, 9, 1]) /* ty=Tensor[(13, 9, 1), float32] */;
  %913 = @func_3266(%912) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int64]) */;
  %914 = %904.1;
  %915 = %909.3;
  %916 = %913.0;
  (%910, %914, %915, %var_3686, meta[relay.Constant][29] /* ty=Tensor[(640), float32] */, %916)
}

def @func_3938(%var_3928: Tensor[(13, 9, 1), float32]) -> (Tensor[(13, 9, ?), float32],) {
  %917 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %918 = %917.0;
  %919 = cast(%var_3928, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %920 = shape_of(%918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %921 = cast(%918, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %923 = divide(%921, %922) /* ty=Tensor[(13, 9, ?), float32] */;
  (%923,)
}

def @func_7606() -> Tensor[(16, 15, 10), float32] {
  %924 = @func_4629() /* ty=(Tensor[(16, 15, 10), float32],) */;
  %924.0
}

def @func_887() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int16]) {
  %925 = @func_200() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %926 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %927 = %926.0;
  %928 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %929 = %928.0;
  %930 = cast(%929, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
  %931 = sin(%930) /* ty=Tensor[(13, 9, 1), float64] */;
  %932 = cast(%931, dtype="int16") /* ty=Tensor[(13, 9, 1), int16] */;
  %933 = shape_of(%927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%927, dtype="int16") /* ty=Tensor[(13, 9, 1), int16] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %936 = %925.0;
  %937 = right_shift(%934, %935) /* ty=Tensor[(13, 9, ?), int16] */;
  (%936, %937)
}

def @func_9696(%var_9649: Tensor[(13, 9, 15), float32]) -> (Tensor[(13, 9, 15), bool], Tensor[(13, 9, 1), float32]) {
  %938 = @func_3455() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %939 = %938.1;
  %940 = cast(%939, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %941 = cast(%var_9649, dtype="bool") /* ty=Tensor[(13, 9, 15), bool] */;
  %942 = @func_7430() /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %943 = greater(%940, %941) /* ty=Tensor[(13, 9, 15), bool] */;
  %944 = %942.1;
  (%943, %944)
}

def @func_10277() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1440), int8], Tensor[(13, 9, 1), float32]) {
  %945 = @func_5540() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), float32], Tensor[(13, 9, 1), float32]) */;
  %946 = @func_9617() /* ty=(Tensor[(1053), float32], Tensor[(13, 9, 1440), int8]) */;
  %947 = @func_5795() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %948 = %945.0;
  %949 = %946.1;
  %950 = %947.0;
  (%948, %949, %950)
}

def @func_4078() -> Tensor[(13, 9, 1), float32] {
  @func_21() /* ty=Tensor[(13, 9, 1), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9492(%var_9488: Tensor[(8, 12, 16), float64]) -> (Tensor[(8, 12, 16), float64],) {
  %0 = cast(%var_9488, dtype="float64") /* ty=Tensor[(8, 12, 16), float64] */;
  %1 = rsqrt(%0) /* ty=Tensor[(8, 12, 16), float64] */;
  (%1,)
}

def @func_8348(%var_8347: Tensor[(13, 9, 9), float32]) -> (Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 9), float32]) {
  %12 = fn (%var_8270: Tensor[(13, 9, 9), float32]) -> (Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 9), float32]) {
    %2 = @func_5640() /* ty=(Tensor[(13, 9, 1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %3 = @func_4883() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %4 = %3.0;
    %5 = cast(%4, dtype="uint32") /* ty=Tensor[(13, 9, 1), uint32] */;
    %6 = cast(%var_8270, dtype="uint32") /* ty=Tensor[(13, 9, 9), uint32] */;
    %7 = minimum(%5, %6) /* ty=Tensor[(13, 9, 9), uint32] */;
    %8 = cast(%7, dtype="float32") /* ty=Tensor[(13, 9, 9), float32] */;
    %9 = @func_7606() /* ty=Tensor[(16, 15, 10), float32] */;
    %10 = %2.2;
    %11 = atan(%8) /* ty=Tensor[(13, 9, 9), float32] */;
    (%9, %10, %11)
  };
  %12(%var_8347) /* ty=(Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 9), float32]) */
}

def @func_10279() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1440), int8], Tensor[(13, 9, 1), float32]) {
  @func_10277() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1440), int8], Tensor[(13, 9, 1), float32]) */
}

def @func_6089(%var_6084: Tensor[(96), float64]) -> (Tensor[(13, 9, 1), float32], Tensor[(8, 1, 12), float64], Tensor[(96), float64]) {
  %13 = @func_5473() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %14 = cast(%var_6084, dtype="float64") /* ty=Tensor[(96), float64] */;
  %15 = reshape(%14, newshape=[8, 1, 12]) /* ty=Tensor[(8, 1, 12), float64] */;
  %16 = @func_1830(%15) /* ty=(Tensor[(8, 1, 12), float64],) */;
  %17 = %13.0;
  %18 = %16.0;
  (%17, %18, %var_6084)
}

def @func_418() -> (Tensor[(13, 9, 1), float32],) {
  %19 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %20 = %19.1;
  %21 = cast(%20, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %22 = sinh(%21) /* ty=Tensor[(13, 9, 1), float32] */;
  (%22,)
}

def @func_8225() -> (Tensor[(13, 9, ?), uint32],) {
  %24 = fn () -> (Tensor[(13, 9, ?), uint32],) {
    %23 = @func_371() /* ty=Tensor[(13, 9, ?), uint32] */;
    (%23,)
  };
  %24() /* ty=(Tensor[(13, 9, ?), uint32],) */
}

def @func_5267() -> Tensor[(13, 9, 1), float32] {
  %26 = fn () -> Tensor[(13, 9, 1), float32] {
    %25 = @func_3455() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %25.0
  };
  %26() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_8646(%var_8644: Tensor[(1638), uint32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), float32], Tensor[(1638), float64]) {
  @func_8643(%var_8644) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), float32], Tensor[(1638), float64]) */
}

def @func_4202() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %27 = @func_3093() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %28 = %27.0;
  %29 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  (%28, %29)
}

def @func_7581() -> Tensor[(13, 9, 1), float32] {
  %30 = @func_7502() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %30.0
}

def @func_4820() -> (Tensor[(13, 9, 1), float32],) {
  @func_4818() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_10419(%var_10403: Tensor[(3, 14, 4), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(3, 14, 4), float32]) {
  %31 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %32 = @func_3133() /* ty=(Tensor[(3, 14, 4), float32],) */;
  %33 = %32.0;
  %34 = cast(%var_10403, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
  %35 = shape_of(%33, dtype="int32") /* ty=Tensor[(3), int32] */;
  %36 = cast(%33, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %38 = %31.1;
  %39 = @func_5422() /* ty=Tensor[(13, 9, ?), uint32] */;
  %40 = power(%36, %37) /* ty=Tensor[(3, 14, 4), float32] */;
  (%38, %39, %40)
}

def @func_3038() -> Tensor[(13, 9, 1), float32] {
  @func_3036() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_4999() -> (Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(2, 320), float32]) {
  %41 = @func_4629() /* ty=(Tensor[(16, 15, 10), float32],) */;
  %42 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 320), float32] */, dtype="float32") /* ty=Tensor[(2, 320), float32] */;
  %43 = reshape(%42, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %44 = @func_664(%43) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */;
  %45 = %41.0;
  %46 = @func_3036() /* ty=Tensor[(13, 9, 1), float32] */;
  %47 = %44.3;
  (%45, %46, %47, meta[relay.Constant][0] /* ty=Tensor[(2, 320), float32] */)
}

def @func_5829(%var_5823: Tensor[(13, 9, 15), float32]) -> (Tensor[(13, 9, 15), uint16],) {
  %48 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %49 = %48.1;
  %50 = cast(%49, dtype="uint16") /* ty=Tensor[(13, 9, 1), uint16] */;
  %51 = cast(%var_5823, dtype="uint16") /* ty=Tensor[(13, 9, 15), uint16] */;
  %52 = multiply(%50, %51) /* ty=Tensor[(13, 9, 15), uint16] */;
  (%52,)
}

def @func_5542() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), float32], Tensor[(13, 9, 1), float32]) {
  @func_5540() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_3135() -> (Tensor[(3, 14, 4), float32],) {
  @func_3133() /* ty=(Tensor[(3, 14, 4), float32],) */
}

def @func_5642() -> (Tensor[(13, 9, 1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  @func_5640() /* ty=(Tensor[(13, 9, 1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_1324() -> (Tensor[(13, 9, 1), float32],) {
  %55 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %53 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %54 = %53.1;
    (%54,)
  };
  %55() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_1649(%var_1647: Tensor[(640), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32]) {
  %56 = cast(%var_1647, dtype="float32") /* ty=Tensor[(640), float32] */;
  %57 = reshape(%56, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %58 = @func_664(%57) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */;
  %59 = @func_1128() /* ty=Tensor[(13, 9, 1), float32] */;
  %60 = %58.3;
  (%59, %60, %var_1647)
}

def @func_9698(%var_9697: Tensor[(13, 9, 15), float32]) -> (Tensor[(13, 9, 15), bool], Tensor[(13, 9, 1), float32]) {
  %68 = fn (%var_9649: Tensor[(13, 9, 15), float32]) -> (Tensor[(13, 9, 15), bool], Tensor[(13, 9, 1), float32]) {
    %61 = @func_3455() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %62 = %61.1;
    %63 = cast(%62, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
    %64 = cast(%var_9649, dtype="bool") /* ty=Tensor[(13, 9, 15), bool] */;
    %65 = @func_7430() /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %66 = greater(%63, %64) /* ty=Tensor[(13, 9, 15), bool] */;
    %67 = %65.1;
    (%66, %67)
  };
  %68(%var_9697) /* ty=(Tensor[(13, 9, 15), bool], Tensor[(13, 9, 1), float32]) */
}

def @func_5424() -> Tensor[(13, 9, ?), uint32] {
  @func_5422() /* ty=Tensor[(13, 9, ?), uint32] */
}

def @func_6418() -> Tensor[(13, 9, 1), float32] {
  %69 = @func_2389() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %69.0
}

def @func_6533(%var_6531: Tensor[(1053), int16]) -> (Tensor[(1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(1053), uint32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  @func_6530(%var_6531) /* ty=(Tensor[(1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(1053), uint32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_4405() -> (Tensor[(13, 9, 1), float32],) {
  %72 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %70 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %71 = %70.0;
    (%71,)
  };
  %72() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_2299(%var_2297: Tensor[(10, 12, 13), uint16]) -> (Tensor[(10, 12, 13), bool],) {
  @func_2296(%var_2297) /* ty=(Tensor[(10, 12, 13), bool],) */
}

def @func_10277() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1440), int8], Tensor[(13, 9, 1), float32]) {
  %73 = @func_5540() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), float32], Tensor[(13, 9, 1), float32]) */;
  %74 = @func_9617() /* ty=(Tensor[(1053), float32], Tensor[(13, 9, 1440), int8]) */;
  %75 = @func_5795() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %76 = %73.0;
  %77 = %74.1;
  %78 = %75.0;
  (%76, %77, %78)
}

def @func_5351(%var_5305: int16, %var_5306: Tensor[(12, 12, 14), int16]) -> Tensor[(12, 12, 14), float32] {
  %79 = cast(%var_5305, dtype="bool") /* ty=bool */;
  %80 = cast(%var_5306, dtype="bool") /* ty=Tensor[(12, 12, 14), bool] */;
  %81 = not_equal(%79, %80) /* ty=Tensor[(12, 12, 14), bool] */;
  %82 = cast(%81, dtype="float32") /* ty=Tensor[(12, 12, 14), float32] */;
  atanh(%82) /* ty=Tensor[(12, 12, 14), float32] */
}

def @func_494() -> (Tensor[(13, 9, 1), float32],) {
  %85 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %83 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %84 = %83.0;
    (%84,)
  };
  %85() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_2422() -> (Tensor[(13, 9, 1), float32],) {
  %88 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %86 = @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %87 = %86.0;
    (%87,)
  };
  %88() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_939() -> (Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(13, 9, 1), float32]) {
  @func_937() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(13, 9, 1), float32]) */
}

def @func_5640() -> (Tensor[(13, 9, 1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %89 = @func_2626() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */;
  %90 = %89.0;
  %91 = @func_1972() /* ty=Tensor[(13, 9, 1), float32] */;
  %92 = cast(%90, dtype="bool") /* ty=Tensor[(1053), bool] */;
  %93 = cast(%91, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %94 = @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %95 = @func_4700() /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32]) */;
  %96 = @func_3564() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float64], Tensor[(13, 9, 1), float32]) */;
  %97 = greater(%92, %93) /* ty=Tensor[(13, 9, 1053), bool] */;
  %98 = %94.0;
  %99 = %95.1;
  %100 = %96.0;
  (%97, %98, %99, %100)
}

def @func_7183(%var_7181: Tensor[(640), float32]) -> (Tensor[(13, 9, ?), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32], Tensor[(13, 9, 15), uint16], Tensor[(1755), float32]) {
  @func_7180(%var_7181) /* ty=(Tensor[(13, 9, ?), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32], Tensor[(13, 9, 15), uint16], Tensor[(1755), float32]) */
}

def @func_2391() -> (Tensor[(13, 9, 1), float32],) {
  @func_2389() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_4360(%var_4294: Tensor[(5, 4, 14), float64]) -> (Tensor[(5, 4, 14), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %101 = cast(%var_4294, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
  %102 = @func_2421() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %103 = acos(%101) /* ty=Tensor[(5, 4, 14), float64] */;
  %104 = @func_3433() /* ty=Tensor[(13, 9, 1), float32] */;
  %105 = %102.0;
  (%103, %104, %105)
}

def @func_8873() -> (Tensor[(13, 9, 1), float32],) {
  @func_8871() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_1527() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  %115 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
    %106 = @func_308() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %107 = @func_200() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %108 = @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %109 = %106.0;
    %110 = @func_1128() /* ty=Tensor[(13, 9, 1), float32] */;
    %111 = %107.0;
    %112 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
    %113 = @func_371() /* ty=Tensor[(13, 9, ?), uint32] */;
    %114 = %108.0;
    (%109, %110, %111, %112, %113, %114)
  };
  %115() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */
}

def @func_6305() -> Tensor[(13, 9, 1), float32] {
  %117 = fn () -> Tensor[(13, 9, 1), float32] {
    %116 = @func_3375() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %116.0
  };
  %117() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_5832(%var_5830: Tensor[(13, 9, 15), float32]) -> (Tensor[(13, 9, 15), uint16],) {
  @func_5829(%var_5830) /* ty=(Tensor[(13, 9, 15), uint16],) */
}

def @func_4678() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 8), int8]) {
  %118 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %119 = @func_501() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %120 = %119.0;
  %121 = cast(%120, dtype="int8") /* ty=Tensor[(13, 9, 1), int8] */;
  %122 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 9, 8), float32] */, dtype="int8") /* ty=Tensor[(13, 9, 8), int8] */;
  %123 = %118.2;
  %124 = multiply(%121, %122) /* ty=Tensor[(13, 9, 8), int8] */;
  (%123, %124)
}

def @func_4110() -> (Tensor[(13, 9, 1), float32],) {
  %126 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %125 = @func_3036() /* ty=Tensor[(13, 9, 1), float32] */;
    (%125,)
  };
  %126() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @main() -> Tensor[(13, 9, 2002), bool] {
  %127 = @func_7752() /* ty=(Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32]) */;
  %128 = %127.1;
  %129 = @func_7045() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(14, 13, 11), int64], Tensor[(1, 2002), int64], Tensor[(1053), uint32]) */;
  %130 = %129.2;
  %131 = cast(%128, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %132 = cast(%130, dtype="bool") /* ty=Tensor[(1, 2002), bool] */;
  %133 = less(%131, %132) /* ty=Tensor[(13, 9, 2002), bool] */;
  %134 = cast(%130, dtype="float32") /* ty=Tensor[(1, 2002), float32] */;
  %135 = log10(%134) /* ty=Tensor[(1, 2002), float32] */;
  %136 = cast(%133, dtype="bool") /* ty=Tensor[(13, 9, 2002), bool] */;
  %137 = cast(%135, dtype="bool") /* ty=Tensor[(1, 2002), bool] */;
  equal(%136, %137) /* ty=Tensor[(13, 9, 2002), bool] */
}

def @func_8546() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), float32], Tensor[(13, 9, ?), bool]) {
  %153 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), float32], Tensor[(13, 9, ?), bool]) {
    %138 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
    %139 = %138.2;
    %140 = cast(%139, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
    %141 = reshape(%140, newshape=[13, 9, 1]) /* ty=Tensor[(13, 9, 1), float32] */;
    %142 = @func_3938(%141) /* ty=(Tensor[(13, 9, ?), float32],) */;
    %143 = @func_2643() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %144 = %143.1;
    %145 = @func_5778() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %146 = %145.0;
    %147 = cast(%146, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
    %148 = shape_of(%144, dtype="int32") /* ty=Tensor[(3), int32] */;
    %149 = cast(%144, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
    %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %151 = %142.0;
    %152 = greater(%149, %150) /* ty=Tensor[(13, 9, ?), bool] */;
    (%139, %151, %152)
  };
  %153() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), float32], Tensor[(13, 9, ?), bool]) */
}

def @func_3495() -> (Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  @func_3493() /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */
}

def @func_5739() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %154 = @func_4202() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %155 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %156 = %154.1;
  %157 = %155.2;
  (%156, %157)
}

def @func_10087() -> Tensor[(13, 9, ?), uint32] {
  %158 = @func_7413() /* ty=(Tensor[(13, 9, ?), uint32],) */;
  %158.0
}

def @func_9618() -> (Tensor[(1053), float32], Tensor[(13, 9, 1440), int8]) {
  %167 = fn () -> (Tensor[(1053), float32], Tensor[(13, 9, 1440), int8]) {
    %159 = @func_4133() /* ty=(Tensor[(1053), float32],) */;
    %160 = @func_7155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, 1440), bool]) */;
    %161 = %160.1;
    %162 = @func_3036() /* ty=Tensor[(13, 9, 1), float32] */;
    %163 = cast(%161, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %164 = cast(%162, dtype="int8") /* ty=Tensor[(13, 9, 1), int8] */;
    %165 = %159.0;
    %166 = right_shift(%163, %164) /* ty=Tensor[(13, 9, 1440), int8] */;
    (%165, %166)
  };
  %167() /* ty=(Tensor[(1053), float32], Tensor[(13, 9, 1440), int8]) */
}

def @func_3094() -> (Tensor[(13, 9, 1), float32],) {
  %170 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %168 = @func_200() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %169 = %168.0;
    (%169,)
  };
  %170() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_888() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int16]) {
  %184 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int16]) {
    %171 = @func_200() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %172 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %173 = %172.0;
    %174 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %175 = %174.0;
    %176 = cast(%175, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
    %177 = sin(%176) /* ty=Tensor[(13, 9, 1), float64] */;
    %178 = cast(%177, dtype="int16") /* ty=Tensor[(13, 9, 1), int16] */;
    %179 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
    %180 = cast(%173, dtype="int16") /* ty=Tensor[(13, 9, 1), int16] */;
    %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %182 = %171.0;
    %183 = right_shift(%180, %181) /* ty=Tensor[(13, 9, ?), int16] */;
    (%182, %183)
  };
  %184() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int16]) */
}

def @func_3133() -> (Tensor[(3, 14, 4), float32],) {
  %185 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 14, 4), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 4), float32] */;
  %186 = sinh(%185) /* ty=Tensor[(3, 14, 4), float32] */;
  (%186,)
}

def @func_6296() -> (Tensor[(13, 9, 1), float32],) {
  %189 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %187 = @func_1692() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %188 = %187.0;
    (%188,)
  };
  %189() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_187() -> (Tensor[(13, 9, 1), float32],) {
  @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_6643() -> (Tensor[(13, 9, 1), float32],) {
  %192 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %190 = @func_2527() /* ty=(Tensor[(13, 9, ?), int32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %191 = %190.1;
    (%191,)
  };
  %192() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_2296(%var_2292: Tensor[(10, 12, 13), uint16]) -> (Tensor[(10, 12, 13), bool],) {
  %193 = cast(%var_2292, dtype="bool") /* ty=Tensor[(10, 12, 13), bool] */;
  %194 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(10, 12, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(meta[relay.Constant][3] /* ty=Tensor[(10, 12, 13), uint16] */, dtype="bool") /* ty=Tensor[(10, 12, 13), bool] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %197 = not_equal(%195, %196) /* ty=Tensor[(10, 12, 13), bool] */;
  (%197,)
}

def @func_501() -> (Tensor[(13, 9, 1), float32],) {
  %198 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  (%198,)
}

def @func_3941(%var_3939: Tensor[(13, 9, 1), float32]) -> (Tensor[(13, 9, ?), float32],) {
  @func_3938(%var_3939) /* ty=(Tensor[(13, 9, ?), float32],) */
}

def @func_632() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %202 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
    %199 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %200 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
    %201 = %199.1;
    (%200, %201)
  };
  %202() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_1652(%var_1650: Tensor[(640), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32]) {
  @func_1649(%var_1650) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32]) */
}

def @func_22() -> Tensor[(13, 9, 1), float32] {
  %206 = fn () -> Tensor[(13, 9, 1), float32] {
    %203 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 9, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
    %204 = cos(%203) /* ty=Tensor[(13, 9, 1), float64] */;
    %205 = cast(%204, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
    atanh(%205) /* ty=Tensor[(13, 9, 1), float32] */
  };
  %206() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_5001() -> (Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(2, 320), float32]) {
  @func_4999() /* ty=(Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(2, 320), float32]) */
}

def @func_6041(%var_6040: Tensor[(1755), float32]) -> (Tensor[(3, 14, 4), float32], Tensor[(1755), float32], Tensor[(13, 9, 15), float64], Tensor[(13, 9, 1), float32]) {
  %217 = fn (%var_6001: Tensor[(1755), float32]) -> (Tensor[(3, 14, 4), float32], Tensor[(1755), float32], Tensor[(13, 9, 15), float64], Tensor[(13, 9, 1), float32]) {
    %207 = @func_3133() /* ty=(Tensor[(3, 14, 4), float32],) */;
    %208 = cast(%var_6001, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %209 = reshape(%208, newshape=[13, 9, 15]) /* ty=Tensor[(13, 9, 15), float32] */;
    %210 = @func_5829(%209) /* ty=(Tensor[(13, 9, 15), uint16],) */;
    %211 = %210.0;
    %212 = cast(%211, dtype="float64") /* ty=Tensor[(13, 9, 15), float64] */;
    %213 = @func_5540() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), float32], Tensor[(13, 9, 1), float32]) */;
    %214 = %207.0;
    %215 = sin(%212) /* ty=Tensor[(13, 9, 15), float64] */;
    %216 = %213.1;
    (%214, %var_6001, %215, %216)
  };
  %217(%var_6040) /* ty=(Tensor[(3, 14, 4), float32], Tensor[(1755), float32], Tensor[(13, 9, 15), float64], Tensor[(13, 9, 1), float32]) */
}

def @func_420() -> (Tensor[(13, 9, 1), float32],) {
  @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_7953() -> (Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  @func_7951() /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_937() -> (Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(13, 9, 1), float32]) {
  %218 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %219 = cast(meta[relay.Constant][5] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %220 = reshape(%219, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %221 = @func_664(%220) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */;
  %222 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  %223 = cast(%222, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %224 = acosh(%223) /* ty=Tensor[(13, 9, 1), float32] */;
  %225 = cast(%222, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %226 = shape_of(%224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%224, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %229 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %230 = %218.2;
  %231 = %221.1;
  %232 = logical_and(%227, %228) /* ty=Tensor[(13, 9, ?), bool] */;
  %233 = %229.0;
  (%230, %231, meta[relay.Constant][5] /* ty=Tensor[(640), float32] */, %232, %233)
}

def @func_9124(%var_9123: Tensor[(10, 117), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 10), bool], Tensor[(10, 117), float32], Tensor[(10, 144), int8]) {
  %241 = fn (%var_9119: Tensor[(10, 117), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 10), bool], Tensor[(10, 117), float32], Tensor[(10, 144), int8]) {
    %234 = cast(%var_9119, dtype="float32") /* ty=Tensor[(10, 117), float32] */;
    %235 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 144), int8] */, dtype="int8") /* ty=Tensor[(10, 144), int8] */;
    %236 = reshape(%234, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), float32] */;
    %237 = reshape(%235, newshape=[720, 2]) /* ty=Tensor[(720, 2), int8] */;
    %238 = @func_1595(%236, %237) /* ty=(Tensor[(13, 9, 10), bool], Tensor[(160, 4), float32], Tensor[(720, 2), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %239 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    %240 = %238.0;
    (%239, %240, %var_9119, meta[relay.Constant][6] /* ty=Tensor[(10, 144), int8] */)
  };
  %241(%var_9123) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 10), bool], Tensor[(10, 117), float32], Tensor[(10, 144), int8]) */
}

def @func_9418(%var_9415: int16, %var_9416: Tensor[(16, 3, 9), int16], %var_9417: Tensor[(16, 3, 9), int16]) -> Tensor[(16, 3, 9), bool] {
  %249 = fn (%var_9363: int16, %var_9364: Tensor[(16, 3, 9), int16], %var_9369: Tensor[(16, 3, 9), int16]) -> Tensor[(16, 3, 9), bool] {
    %242 = cast(%var_9363, dtype="int16") /* ty=int16 */;
    %243 = cast(%var_9364, dtype="int16") /* ty=Tensor[(16, 3, 9), int16] */;
    %244 = logical_xor(%242, %243) /* ty=Tensor[(16, 3, 9), int16] */;
    %245 = cast(%var_9369, dtype="bool") /* ty=Tensor[(16, 3, 9), bool] */;
    %246 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
    %247 = cast(%244, dtype="bool") /* ty=Tensor[(16, 3, 9), bool] */;
    %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%247, %248) /* ty=Tensor[(16, 3, 9), bool] */
  };
  %249(%var_9415, %var_9416, %var_9417) /* ty=Tensor[(16, 3, 9), bool] */
}

def @func_7156() -> (Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, 1440), bool]) {
  %260 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, 1440), bool]) {
    %250 = @func_2421() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %251 = cast(meta[relay.Constant][7] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %252 = reshape(%251, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
    %253 = @func_3832(%252) /* ty=(Tensor[(13, 9, 7), float32], Tensor[(1440), int8], Tensor[(160, 4), float32]) */;
    %254 = @func_6304() /* ty=Tensor[(13, 9, 1), float32] */;
    %255 = cast(meta[relay.Constant][7] /* ty=Tensor[(1440), int8] */, dtype="bool") /* ty=Tensor[(1440), bool] */;
    %256 = cast(%254, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
    %257 = %250.0;
    %258 = %253.1;
    %259 = greater_equal(%255, %256) /* ty=Tensor[(13, 9, 1440), bool] */;
    (%257, %258, %259)
  };
  %260() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, 1440), bool]) */
}

def @func_4818() -> (Tensor[(13, 9, 1), float32],) {
  %261 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %262 = %261.3;
  (%262,)
}

def @func_5797() -> (Tensor[(13, 9, 1), float32],) {
  @func_5795() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_7415() -> (Tensor[(13, 9, ?), uint32],) {
  @func_7413() /* ty=(Tensor[(13, 9, ?), uint32],) */
}

def @func_156() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %265 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
    %263 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    %264 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    (%263, %264)
  };
  %265() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_5256() -> (Tensor[(13, 9, 1), float32], Tensor[(5, 4, 14), float64], Tensor[(70, 4), float64], Tensor[(16, 15, 10), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  @func_5254() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(5, 4, 14), float64], Tensor[(70, 4), float64], Tensor[(16, 15, 10), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */
}

def @func_1129() -> Tensor[(13, 9, 1), float32] {
  %267 = fn () -> Tensor[(13, 9, 1), float32] {
    %266 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %266.0
  };
  %267() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_4701() -> (Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32]) {
  %271 = fn () -> (Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32]) {
    %268 = @func_3375() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %269 = @func_1073() /* ty=Tensor[(13, 9, ?), uint64] */;
    %270 = %268.0;
    (%269, %270)
  };
  %271() /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32]) */
}

def @func_4680() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 8), int8]) {
  @func_4678() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 8), int8]) */
}

def @func_2377(%var_2375: Tensor[(13, 9, 8), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 8), uint16]) {
  @func_2374(%var_2375) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 8), uint16]) */
}

def @func_2528() -> (Tensor[(13, 9, ?), int32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %284 = fn () -> (Tensor[(13, 9, ?), int32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
    %272 = @func_1073() /* ty=Tensor[(13, 9, ?), uint64] */;
    %273 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %274 = %273.0;
    %275 = cast(%274, dtype="int32") /* ty=Tensor[(13, 9, 1), int32] */;
    %276 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
    %277 = cast(%272, dtype="int32") /* ty=Tensor[(13, 9, ?), int32] */;
    %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %279 = @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %280 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %281 = subtract(%277, %278) /* ty=Tensor[(13, 9, ?), int32] */;
    %282 = %279.0;
    %283 = %280.1;
    (%281, %282, %283)
  };
  %284() /* ty=(Tensor[(13, 9, ?), int32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_3834(%var_3833: Tensor[(1440), int8]) -> (Tensor[(13, 9, 7), float32], Tensor[(1440), int8], Tensor[(160, 4), float32]) {
  %292 = fn (%var_3778: Tensor[(1440), int8]) -> (Tensor[(13, 9, 7), float32], Tensor[(1440), int8], Tensor[(160, 4), float32]) {
    %285 = cast(%var_3778, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %286 = reshape(%285, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
    %287 = @func_1915(%286) /* ty=(Tensor[(160, 4), float32], Tensor[(13, 9, 1440), bool]) */;
    %288 = %287.0;
    %289 = cast(%288, dtype="float32") /* ty=Tensor[(160, 4), float32] */;
    %290 = @func_1997() /* ty=Tensor[(13, 9, 7), float32] */;
    %291 = sigmoid(%289) /* ty=Tensor[(160, 4), float32] */;
    (%290, %var_3778, %291)
  };
  %292(%var_3833) /* ty=(Tensor[(13, 9, 7), float32], Tensor[(1440), int8], Tensor[(160, 4), float32]) */
}

def @func_3853() -> (Tensor[(13, 9, ?), uint32],) {
  %295 = fn () -> (Tensor[(13, 9, ?), uint32],) {
    %293 = @func_1677() /* ty=(Tensor[(13, 9, ?), uint32],) */;
    %294 = %293.0;
    (%294,)
  };
  %295() /* ty=(Tensor[(13, 9, ?), uint32],) */
}

def @func_1678() -> (Tensor[(13, 9, ?), uint32],) {
  %297 = fn () -> (Tensor[(13, 9, ?), uint32],) {
    %296 = @func_371() /* ty=Tensor[(13, 9, ?), uint32] */;
    (%296,)
  };
  %297() /* ty=(Tensor[(13, 9, ?), uint32],) */
}

def @func_6697(%var_6693: Tensor[(96), float64]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(8, 1, 12), float64], Tensor[(96), float64]) {
  %298 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %299 = cast(%var_6693, dtype="float64") /* ty=Tensor[(96), float64] */;
  %300 = reshape(%299, newshape=[8, 1, 12]) /* ty=Tensor[(8, 1, 12), float64] */;
  %301 = @func_1830(%300) /* ty=(Tensor[(8, 1, 12), float64],) */;
  %302 = @func_4078() /* ty=Tensor[(13, 9, 1), float32] */;
  %303 = %298.3;
  %304 = %301.0;
  (%302, %303, %304, %var_6693)
}

def @func_5078() -> (Tensor[(16, 15, 10), float64],) {
  %305 = @func_4629() /* ty=(Tensor[(16, 15, 10), float32],) */;
  %306 = %305.0;
  %307 = cast(%306, dtype="float64") /* ty=Tensor[(16, 15, 10), float64] */;
  %308 = sigmoid(%307) /* ty=Tensor[(16, 15, 10), float64] */;
  (%308,)
}

def @func_2652() -> Tensor[(13, 9, ?), uint64] {
  %309 = fn () -> Tensor[(13, 9, ?), uint64] {
    @func_1073() /* ty=Tensor[(13, 9, ?), uint64] */
  };
  %309() /* ty=Tensor[(13, 9, ?), uint64] */
}

def @func_9273() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32]) {
  %310 = @func_5115() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %311 = @func_6658() /* ty=Tensor[(13, 9, 1), float32] */;
  %312 = %310.1;
  (%311, %312)
}

def @func_3376() -> (Tensor[(13, 9, 1), float32],) {
  %314 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %313 = @func_1972() /* ty=Tensor[(13, 9, 1), float32] */;
    (%313,)
  };
  %314() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_7858(%var_7857: Tensor[(1, 1755), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1755), float32], Tensor[(13, 9, 1440), float64]) {
  %333 = fn (%var_7822: Tensor[(1, 1755), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1755), float32], Tensor[(13, 9, 1440), float64]) {
    %315 = cast(meta[relay.Constant][8] /* ty=Tensor[(1440), int8] */, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %316 = cast(%var_7822, dtype="float32") /* ty=Tensor[(1, 1755), float32] */;
    %317 = reshape(%315, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
    %318 = reshape(%316, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
    %319 = @func_4514(%317, %318) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, 1), float32]) */;
    %320 = @func_4032() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %321 = @func_1677() /* ty=(Tensor[(13, 9, ?), uint32],) */;
    %322 = %321.0;
    %323 = cast(%322, dtype="int32") /* ty=Tensor[(13, 9, ?), int32] */;
    %324 = cast(%var_7822, dtype="int32") /* ty=Tensor[(1, 1755), int32] */;
    %325 = multiply(%323, %324) /* ty=Tensor[(13, 9, 1755), int32] */;
    %326 = cast(%325, dtype="float32") /* ty=Tensor[(13, 9, 1755), float32] */;
    %327 = cast(%322, dtype="float64") /* ty=Tensor[(13, 9, ?), float64] */;
    %328 = cast(meta[relay.Constant][8] /* ty=Tensor[(1440), int8] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %329 = %319.8;
    %330 = %320.0;
    %331 = sinh(%326) /* ty=Tensor[(13, 9, 1755), float32] */;
    %332 = mod(%327, %328) /* ty=Tensor[(13, 9, 1440), float64] */;
    (%329, %330, %331, %332)
  };
  %333(%var_7857) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1755), float32], Tensor[(13, 9, 1440), float64]) */
}

def @func_9039() -> (Tensor[(13, 9, 1), float32],) {
  %334 = @func_1972() /* ty=Tensor[(13, 9, 1), float32] */;
  (%334,)
}

def @func_8643(%var_8621: Tensor[(1638), uint32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), float32], Tensor[(1638), float64]) {
  %335 = @func_1323() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %336 = @func_3093() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %337 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %338 = %337.0;
  %339 = cast(%var_8621, dtype="uint32") /* ty=Tensor[(1638), uint32] */;
  %340 = cast(meta[relay.Constant][9] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %341 = reshape(%339, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), uint32] */;
  %342 = reshape(%340, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %343 = @func_2127(%341, %342) /* ty=(Tensor[(13, 9, 14), int64], Tensor[(13, 9, 7), float32], Tensor[(13, 9, ?), int16], Tensor[(8, 10, 8), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), int8], Tensor[(13, 9, 1), float32]) */;
  %344 = %343.7;
  %345 = cast(%338, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %346 = cast(%344, dtype="bool") /* ty=Tensor[(13, 9, 640), bool] */;
  %347 = equal(%345, %346) /* ty=Tensor[(13, 9, 640), bool] */;
  %348 = cast(%347, dtype="float32") /* ty=Tensor[(13, 9, 640), float32] */;
  %349 = cast(meta[relay.Constant][9] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %350 = cast(%var_8621, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %351 = @func_3433() /* ty=Tensor[(13, 9, 1), float32] */;
  %352 = %335.0;
  %353 = %336.0;
  %354 = floor_divide(%348, %349) /* ty=Tensor[(13, 9, 640), float32] */;
  %355 = erf(%350) /* ty=Tensor[(1638), float64] */;
  (%351, %352, %353, %354, %355)
}

def @func_5474() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %360 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
    %356 = @func_308() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %357 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %358 = %356.1;
    %359 = %357.0;
    (%358, %359)
  };
  %360() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_2566() -> (Tensor[(13, 9, 1), float32],) {
  %361 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %362 = %361.0;
  (%362,)
}

def @func_7307(%var_7274: Tensor[(16, 15, 10), float64]) -> Tensor[(16, 15, 10), bool] {
  %363 = @func_5078() /* ty=(Tensor[(16, 15, 10), float64],) */;
  %364 = %363.0;
  %365 = cast(%var_7274, dtype="bool") /* ty=Tensor[(16, 15, 10), bool] */;
  %366 = shape_of(%364, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%364, dtype="bool") /* ty=Tensor[(16, 15, 10), bool] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%367, %368) /* ty=Tensor[(16, 15, 10), bool] */
}

def @func_667(%var_665: Tensor[(640), float32]) -> (Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) {
  @func_664(%var_665) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_5778() -> (Tensor[(13, 9, 1), float32],) {
  %369 = @func_4109() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %370 = %369.0;
  (%370,)
}

def @func_2374(%var_2350: Tensor[(13, 9, 8), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 8), uint16]) {
  %371 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %372 = @func_1677() /* ty=(Tensor[(13, 9, ?), uint32],) */;
  %373 = %372.0;
  %374 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %375 = %374.0;
  %376 = cast(%375, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %377 = shape_of(%373, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%373, dtype="float32") /* ty=Tensor[(13, 9, ?), float32] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %380 = floor_divide(%378, %379) /* ty=Tensor[(13, 9, ?), float32] */;
  %381 = cast(%380, dtype="float64") /* ty=Tensor[(13, 9, ?), float64] */;
  %382 = cast(%var_2350, dtype="float64") /* ty=Tensor[(13, 9, 8), float64] */;
  %383 = divide(%381, %382) /* ty=Tensor[(13, 9, 8), float64] */;
  %384 = cast(%383, dtype="uint16") /* ty=Tensor[(13, 9, 8), uint16] */;
  %385 = cast(%380, dtype="uint16") /* ty=Tensor[(13, 9, ?), uint16] */;
  %386 = %371.0;
  %387 = bitwise_and(%384, %385) /* ty=Tensor[(13, 9, 8), uint16] */;
  (%386, %387)
}

def @func_6608(%var_6607: Tensor[(13, 9, 9), float32]) -> Tensor[(13, 9, 9), uint8] {
  %392 = fn (%var_6598: Tensor[(13, 9, 9), float32]) -> Tensor[(13, 9, 9), uint8] {
    %388 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %389 = %388.0;
    %390 = cast(%389, dtype="uint8") /* ty=Tensor[(13, 9, 1), uint8] */;
    %391 = cast(%var_6598, dtype="uint8") /* ty=Tensor[(13, 9, 9), uint8] */;
    left_shift(%390, %391) /* ty=Tensor[(13, 9, 9), uint8] */
  };
  %392(%var_6607) /* ty=Tensor[(13, 9, 9), uint8] */
}

def @func_7045() -> (Tensor[(13, 9, 1), float32], Tensor[(14, 13, 11), int64], Tensor[(1, 2002), int64], Tensor[(1053), uint32]) {
  @func_7043() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(14, 13, 11), int64], Tensor[(1, 2002), int64], Tensor[(1053), uint32]) */
}

def @func_10142(%var_10135: Tensor[(13, 9, 8), float32]) -> (Tensor[(13, 9, 8), bool],) {
  %393 = @func_6764() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %394 = %393.0;
  %395 = cast(%394, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %396 = cast(%var_10135, dtype="bool") /* ty=Tensor[(13, 9, 8), bool] */;
  %397 = less_equal(%395, %396) /* ty=Tensor[(13, 9, 8), bool] */;
  (%397,)
}

def @func_1997() -> Tensor[(13, 9, 7), float32] {
  %398 = @func_1128() /* ty=Tensor[(13, 9, 1), float32] */;
  %399 = cast(%398, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %400 = cast(meta[relay.Constant][10] /* ty=Tensor[(13, 9, 7), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 7), float32] */;
  divide(%399, %400) /* ty=Tensor[(13, 9, 7), float32] */
}

def @func_3564() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float64], Tensor[(13, 9, 1), float32]) {
  %401 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %402 = @func_2527() /* ty=(Tensor[(13, 9, ?), int32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %403 = @func_981() /* ty=(Tensor[(13, 9, 1), float64],) */;
  %404 = %401.0;
  %405 = %402.2;
  %406 = %403.0;
  %407 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  (%404, %405, %406, %407)
}

def @func_4631() -> (Tensor[(16, 15, 10), float32],) {
  @func_4629() /* ty=(Tensor[(16, 15, 10), float32],) */
}

def @func_6208(%var_6206: Tensor[(14, 6, 9), float32]) -> (Tensor[(14, 6, 9), float32], Tensor[(14, 6, 9), bool]) {
  @func_6205(%var_6206) /* ty=(Tensor[(14, 6, 9), float32], Tensor[(14, 6, 9), bool]) */
}

def @func_4517(%var_4515: Tensor[(1440), int8], %var_4516: Tensor[(1755), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, 1), float32]) {
  %440 = fn (%var_4436: Tensor[(1440), int8], %var_4437: Tensor[(1755), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, 1), float32]) {
    %408 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %409 = cast(%var_4436, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %410 = cast(%var_4436, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %411 = cast(%var_4437, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %412 = cast(%var_4436, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %413 = reshape(%409, newshape=[20, 72]) /* ty=Tensor[(20, 72), int8] */;
    %414 = reshape(%410, newshape=[20, 72]) /* ty=Tensor[(20, 72), int8] */;
    %415 = reshape(%411, newshape=[13, 9, 15]) /* ty=Tensor[(13, 9, 15), float32] */;
    %416 = reshape(%412, newshape=[20, 72]) /* ty=Tensor[(20, 72), float64] */;
    %417 = @func_3000(%413, %414, %415, %416) /* ty=(Tensor[(13, 9, ?), float64], Tensor[(13, 9, 1), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(20, 72), float64], Tensor[(13, 9, ?), uint16], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(640), float32], Tensor[(13, 9, 15), float64], Tensor[(720, 2), int8], Tensor[(1170), float32], Tensor[(160, 4), float32], Tensor[(20, 72), int8], Tensor[(640), float32], Tensor[(13, 9, ?), uint32]) */;
    %418 = cast(%var_4437, dtype="float32") /* ty=Tensor[(1755), float32] */;
    %419 = erf(%418) /* ty=Tensor[(1755), float32] */;
    %420 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %421 = %420.2;
    %422 = cast(%419, dtype="bool") /* ty=Tensor[(1755), bool] */;
    %423 = cast(%421, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
    %424 = @func_3493() /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
    %425 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %426 = @func_1128() /* ty=Tensor[(13, 9, 1), float32] */;
    %427 = cast(%419, dtype="bool") /* ty=Tensor[(1755), bool] */;
    %428 = cast(%426, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
    %429 = %408.1;
    %430 = cast(%429, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
    %431 = reshape(%430, newshape=[13, 9, 1]) /* ty=Tensor[(13, 9, 1), float32] */;
    %432 = @func_3266(%431) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int64]) */;
    %433 = %417.2;
    %434 = @func_2651() /* ty=Tensor[(13, 9, ?), uint64] */;
    %435 = greater_equal(%422, %423) /* ty=Tensor[(13, 9, 1755), bool] */;
    %436 = %424.0;
    %437 = %425.0;
    %438 = logical_and(%427, %428) /* ty=Tensor[(13, 9, 1755), bool] */;
    %439 = %432.0;
    (%429, %433, %var_4436, %434, %435, %436, %437, %438, %439)
  };
  %440(%var_4515, %var_4516) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, 1), float32]) */
}

def @func_8028(%var_8008: Tensor[(13, 9, 5), float32]) -> (Tensor[(13, 9, 5), bool], Tensor[(16, 15, 10), float32]) {
  %441 = @func_7430() /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %442 = %441.2;
  %443 = cast(%442, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %444 = cast(%var_8008, dtype="bool") /* ty=Tensor[(13, 9, 5), bool] */;
  %445 = @func_4629() /* ty=(Tensor[(16, 15, 10), float32],) */;
  %446 = logical_and(%443, %444) /* ty=Tensor[(13, 9, 5), bool] */;
  %447 = %445.0;
  (%446, %447)
}

def @func_1759() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %453 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
    %448 = @func_1692() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %449 = %448.0;
    %450 = cast(%449, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
    %451 = @func_1614() /* ty=Tensor[(13, 9, 1), float32] */;
    %452 = tan(%450) /* ty=Tensor[(13, 9, 1), float32] */;
    (%451, %452)
  };
  %453() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_4629() -> (Tensor[(16, 15, 10), float32],) {
  %454 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 15, 10), float32] */, dtype="float32") /* ty=Tensor[(16, 15, 10), float32] */;
  %455 = acos(%454) /* ty=Tensor[(16, 15, 10), float32] */;
  (%455,)
}

def @func_8970(%var_8909: Tensor[(585), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(16, 15, 10), float32], Tensor[(585), float32], Tensor[(1053), uint32], Tensor[(13, 9, 15), uint16], Tensor[(1755), float32], Tensor[(14, 6, 9), bool], Tensor[(756), float32]) {
  %456 = @func_3455() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %457 = cast(%var_8909, dtype="float32") /* ty=Tensor[(585), float32] */;
  %458 = reshape(%457, newshape=[13, 9, 5]) /* ty=Tensor[(13, 9, 5), float32] */;
  %459 = @func_8028(%458) /* ty=(Tensor[(13, 9, 5), bool], Tensor[(16, 15, 10), float32]) */;
  %460 = @func_7043() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(14, 13, 11), int64], Tensor[(1, 2002), int64], Tensor[(1053), uint32]) */;
  %461 = cast(meta[relay.Constant][12] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %462 = reshape(%461, newshape=[13, 9, 15]) /* ty=Tensor[(13, 9, 15), float32] */;
  %463 = @func_5829(%462) /* ty=(Tensor[(13, 9, 15), uint16],) */;
  %464 = cast(meta[relay.Constant][13] /* ty=Tensor[(756), float32] */, dtype="float32") /* ty=Tensor[(756), float32] */;
  %465 = reshape(%464, newshape=[14, 6, 9]) /* ty=Tensor[(14, 6, 9), float32] */;
  %466 = @func_6205(%465) /* ty=(Tensor[(14, 6, 9), float32], Tensor[(14, 6, 9), bool]) */;
  %467 = %456.0;
  %468 = %459.1;
  %469 = %460.3;
  %470 = %463.0;
  %471 = %466.1;
  (%467, %468, %var_8909, %469, %470, meta[relay.Constant][12] /* ty=Tensor[(1755), float32] */, %471, meta[relay.Constant][13] /* ty=Tensor[(756), float32] */)
}

def @func_4033() -> (Tensor[(13, 9, 1), float32],) {
  %474 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %472 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
    %473 = %472.0;
    (%473,)
  };
  %474() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_7084() -> (Tensor[(13, 9, ?), uint64],) {
  %475 = @func_4700() /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32]) */;
  %476 = %475.0;
  (%476,)
}

def @func_5115() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  %477 = @func_2421() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %478 = @func_2626() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */;
  %479 = @func_200() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %480 = %477.0;
  %481 = %478.1;
  %482 = %479.0;
  (%480, %481, %482)
}

def @func_5080() -> (Tensor[(16, 15, 10), float64],) {
  @func_5078() /* ty=(Tensor[(16, 15, 10), float64],) */
}

def @func_2568() -> (Tensor[(13, 9, 1), float32],) {
  @func_2566() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_7180(%var_7174: Tensor[(640), float32]) -> (Tensor[(13, 9, ?), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32], Tensor[(13, 9, 15), uint16], Tensor[(1755), float32]) {
  %483 = @func_4078() /* ty=Tensor[(13, 9, 1), float32] */;
  %484 = @func_3036() /* ty=Tensor[(13, 9, 1), float32] */;
  %485 = cast(%484, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %486 = shape_of(%483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(%483, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %489 = cast(%var_7174, dtype="float32") /* ty=Tensor[(640), float32] */;
  %490 = reshape(%489, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %491 = @func_1649(%490) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32]) */;
  %492 = cast(meta[relay.Constant][14] /* ty=Tensor[(1755), float32] */, dtype="float32") /* ty=Tensor[(1755), float32] */;
  %493 = reshape(%492, newshape=[13, 9, 15]) /* ty=Tensor[(13, 9, 15), float32] */;
  %494 = @func_5829(%493) /* ty=(Tensor[(13, 9, 15), uint16],) */;
  %495 = floor_mod(%487, %488) /* ty=Tensor[(13, 9, ?), float32] */;
  %496 = %491.1;
  %497 = %494.0;
  (%495, %496, %var_7174, %497, meta[relay.Constant][14] /* ty=Tensor[(1755), float32] */)
}

def @func_503() -> (Tensor[(13, 9, 1), float32],) {
  @func_501() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_6205(%var_6190: Tensor[(14, 6, 9), float32]) -> (Tensor[(14, 6, 9), float32], Tensor[(14, 6, 9), bool]) {
  %498 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 6, 9), float32] */, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
  %499 = shape_of(%var_6190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%var_6190, dtype="float32") /* ty=Tensor[(14, 6, 9), float32] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %502 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 6, 9), float32] */, dtype="bool") /* ty=Tensor[(14, 6, 9), bool] */;
  %503 = shape_of(%var_6190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %504 = cast(%var_6190, dtype="bool") /* ty=Tensor[(14, 6, 9), bool] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %506 = divide(%500, %501) /* ty=Tensor[(14, 6, 9), float32] */;
  %507 = equal(%504, %505) /* ty=Tensor[(14, 6, 9), bool] */;
  (%506, %507)
}

def @func_9041() -> (Tensor[(13, 9, 1), float32],) {
  @func_9039() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_248() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %513 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
    %508 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %509 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %510 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    %511 = %508.0;
    %512 = %509.0;
    (%510, %511, %512)
  };
  %513() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_4134() -> (Tensor[(1053), float32],) {
  %521 = fn () -> (Tensor[(1053), float32],) {
    %514 = @func_2626() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */;
    %515 = %514.0;
    %516 = cast(meta[relay.Constant][16] /* ty=Tensor[(1053), uint32] */, dtype="float32") /* ty=Tensor[(1053), float32] */;
    %517 = shape_of(%515, dtype="int32") /* ty=Tensor[(1), int32] */;
    %518 = cast(%515, dtype="float32") /* ty=Tensor[(1053), float32] */;
    %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?), float32] */;
    %520 = floor_mod(%518, %519) /* ty=Tensor[(1053), float32] */;
    (%520,)
  };
  %521() /* ty=(Tensor[(1053), float32],) */
}

def @func_123() -> Tensor[(13, 9, 1), float32] {
  %523 = fn () -> Tensor[(13, 9, 1), float32] {
    %522 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %522.4
  };
  %523() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_5540() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), float32], Tensor[(13, 9, 1), float32]) {
  %524 = @func_2527() /* ty=(Tensor[(13, 9, ?), int32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %525 = @func_5254() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(5, 4, 14), float64], Tensor[(70, 4), float64], Tensor[(16, 15, 10), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %526 = %525.4;
  %527 = cast(%526, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %528 = reshape(%527, newshape=[13, 9, 1]) /* ty=Tensor[(13, 9, 1), float32] */;
  %529 = @func_3938(%528) /* ty=(Tensor[(13, 9, ?), float32],) */;
  %530 = @func_3493() /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %531 = %524.1;
  %532 = %529.0;
  %533 = %530.1;
  (%531, %526, %532, %533)
}

def @func_7607() -> Tensor[(16, 15, 10), float32] {
  %535 = fn () -> Tensor[(16, 15, 10), float32] {
    %534 = @func_4629() /* ty=(Tensor[(16, 15, 10), float32],) */;
    %534.0
  };
  %535() /* ty=Tensor[(16, 15, 10), float32] */
}

def @func_6563(%var_6561: Tensor[(14, 13, 11), int64], %var_6562: Tensor[(14, 13, 11), int64]) -> Tensor[(14, 13, 11), int64] {
  @func_6559(%var_6561, %var_6562) /* ty=Tensor[(14, 13, 11), int64] */
}

def @func_9959() -> (Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(3, 14, 4), float32], Tensor[(585, 3), float32]) {
  %536 = @func_7084() /* ty=(Tensor[(13, 9, ?), uint64],) */;
  %537 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %538 = cast(meta[relay.Constant][17] /* ty=Tensor[(585, 3), float32] */, dtype="float32") /* ty=Tensor[(585, 3), float32] */;
  %539 = reshape(%538, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %540 = @func_6039(%539) /* ty=(Tensor[(3, 14, 4), float32], Tensor[(1755), float32], Tensor[(13, 9, 15), float64], Tensor[(13, 9, 1), float32]) */;
  %541 = %536.0;
  %542 = %537.1;
  %543 = %540.0;
  (%541, %542, %543, meta[relay.Constant][17] /* ty=Tensor[(585, 3), float32] */)
}

def @func_3696(%var_3686: Tensor[(1638), uint32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(1638), uint32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) {
  %544 = @func_308() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %545 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %546 = cast(%var_3686, dtype="uint32") /* ty=Tensor[(1638), uint32] */;
  %547 = cast(meta[relay.Constant][18] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %548 = reshape(%546, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), uint32] */;
  %549 = reshape(%547, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %550 = @func_2127(%548, %549) /* ty=(Tensor[(13, 9, 14), int64], Tensor[(13, 9, 7), float32], Tensor[(13, 9, ?), int16], Tensor[(8, 10, 8), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), int8], Tensor[(13, 9, 1), float32]) */;
  %551 = %544.1;
  %552 = cast(%551, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %553 = reshape(%552, newshape=[13, 9, 1]) /* ty=Tensor[(13, 9, 1), float32] */;
  %554 = @func_3266(%553) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int64]) */;
  %555 = %545.1;
  %556 = %550.3;
  %557 = %554.0;
  (%551, %555, %556, %var_3686, meta[relay.Constant][18] /* ty=Tensor[(640), float32] */, %557)
}

def @func_4078() -> Tensor[(13, 9, 1), float32] {
  @func_21() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_3269(%var_3267: Tensor[(13, 9, 1), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int64]) {
  @func_3266(%var_3267) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int64]) */
}

def @func_7086() -> (Tensor[(13, 9, ?), uint64],) {
  @func_7084() /* ty=(Tensor[(13, 9, ?), uint64],) */
}

def @func_2224() -> (Tensor[(13, 9, 1), float64],) {
  %558 = @func_981() /* ty=(Tensor[(13, 9, 1), float64],) */;
  %559 = %558.0;
  (%559,)
}

def @func_3699(%var_3697: Tensor[(1638), uint32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(1638), uint32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) {
  @func_3696(%var_3697) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(1638), uint32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_77() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %565 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
    %560 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    %561 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    %562 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    %563 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    %564 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    (%560, %561, %562, %563, %564)
  };
  %565() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_9338(%var_9337: Tensor[(13, 9, 9), float32]) -> Tensor[(13, 9, 9), float32] {
  %570 = fn (%var_9326: Tensor[(13, 9, 9), float32]) -> Tensor[(13, 9, 9), float32] {
    %566 = @func_6642() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %567 = %566.0;
    %568 = cast(%567, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
    %569 = cast(%var_9326, dtype="float32") /* ty=Tensor[(13, 9, 9), float32] */;
    mod(%568, %569) /* ty=Tensor[(13, 9, 9), float32] */
  };
  %570(%var_9337) /* ty=Tensor[(13, 9, 9), float32] */
}

def @func_2127(%var_2019: Tensor[(13, 9, 14), uint32], %var_2033: Tensor[(640), float32]) -> (Tensor[(13, 9, 14), int64], Tensor[(13, 9, 7), float32], Tensor[(13, 9, ?), int16], Tensor[(8, 10, 8), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), int8], Tensor[(13, 9, 1), float32]) {
  %571 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %572 = %571.4;
  %573 = cast(%572, dtype="int64") /* ty=Tensor[(13, 9, ?), int64] */;
  %574 = cast(%var_2019, dtype="int64") /* ty=Tensor[(13, 9, 14), int64] */;
  %575 = @func_887() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int16]) */;
  %576 = cast(%var_2033, dtype="float32") /* ty=Tensor[(640), float32] */;
  %577 = reshape(%576, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), float32] */;
  %578 = @func_475(%577) /* ty=Tensor[(8, 10, 8), float32] */;
  %579 = cast(%578, dtype="float32") /* ty=Tensor[(8, 10, 8), float32] */;
  %580 = @func_937() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(13, 9, 1), float32]) */;
  %581 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %582 = cast(%572, dtype="int8") /* ty=Tensor[(13, 9, ?), int8] */;
  %583 = cast(%var_2033, dtype="int8") /* ty=Tensor[(640), int8] */;
  %584 = add(%573, %574) /* ty=Tensor[(13, 9, 14), int64] */;
  %585 = @func_1997() /* ty=Tensor[(13, 9, 7), float32] */;
  %586 = %575.1;
  %587 = log2(%579) /* ty=Tensor[(8, 10, 8), float32] */;
  %588 = %580.0;
  %589 = @func_1073() /* ty=Tensor[(13, 9, ?), uint64] */;
  %590 = %581.2;
  %591 = add(%582, %583) /* ty=Tensor[(13, 9, 640), int8] */;
  %592 = @func_1972() /* ty=Tensor[(13, 9, 1), float32] */;
  (%584, %585, %586, %587, %588, %589, %590, %591, %592)
}

def @func_6659() -> Tensor[(13, 9, 1), float32] {
  %593 = fn () -> Tensor[(13, 9, 1), float32] {
    @func_3036() /* ty=Tensor[(13, 9, 1), float32] */
  };
  %593() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_4204() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  @func_4202() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_7431() -> (Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %599 = fn () -> (Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
    %594 = @func_2643() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %595 = @func_2389() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %596 = @func_1073() /* ty=Tensor[(13, 9, ?), uint64] */;
    %597 = %594.1;
    %598 = %595.0;
    (%596, %597, %598)
  };
  %599() /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_7752() -> (Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32]) {
  @func_7750() /* ty=(Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_8973(%var_8971: Tensor[(585), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(16, 15, 10), float32], Tensor[(585), float32], Tensor[(1053), uint32], Tensor[(13, 9, 15), uint16], Tensor[(1755), float32], Tensor[(14, 6, 9), bool], Tensor[(756), float32]) {
  @func_8970(%var_8971) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(16, 15, 10), float32], Tensor[(585), float32], Tensor[(1053), uint32], Tensor[(13, 9, 15), uint16], Tensor[(1755), float32], Tensor[(14, 6, 9), bool], Tensor[(756), float32]) */
}

def @func_3493() -> (Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  %600 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %601 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %602 = %600.4;
  %603 = %601.1;
  (%602, %603)
}

def @func_2627() -> (Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) {
  %615 = fn () -> (Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) {
    %604 = cast(meta[relay.Constant][19] /* ty=Tensor[(1053), uint32] */, dtype="uint32") /* ty=Tensor[(1053), uint32] */;
    %605 = reshape(%604, newshape=[13, 9, 9]) /* ty=Tensor[(13, 9, 9), uint32] */;
    %606 = @func_565(%605) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 9), float32], Tensor[(13, 9, 1), float32]) */;
    %607 = %606.0;
    %608 = @func_501() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %609 = %608.0;
    %610 = cast(%609, dtype="uint32") /* ty=Tensor[(13, 9, 1), uint32] */;
    %611 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
    %612 = cast(%607, dtype="uint32") /* ty=Tensor[(13, 9, 1), uint32] */;
    %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %614 = left_shift(%612, %613) /* ty=Tensor[(13, 9, ?), uint32] */;
    (meta[relay.Constant][19] /* ty=Tensor[(1053), uint32] */, %614)
  };
  %615() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */
}

def @func_1615() -> Tensor[(13, 9, 1), float32] {
  %616 = fn () -> Tensor[(13, 9, 1), float32] {
    @func_21() /* ty=Tensor[(13, 9, 1), float32] */
  };
  %616() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_2131(%var_2129: Tensor[(13, 9, 14), uint32], %var_2130: Tensor[(640), float32]) -> (Tensor[(13, 9, 14), int64], Tensor[(13, 9, 7), float32], Tensor[(13, 9, ?), int16], Tensor[(8, 10, 8), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), int8], Tensor[(13, 9, 1), float32]) {
  @func_2127(%var_2129, %var_2130) /* ty=(Tensor[(13, 9, 14), int64], Tensor[(13, 9, 7), float32], Tensor[(13, 9, ?), int16], Tensor[(8, 10, 8), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), int8], Tensor[(13, 9, 1), float32]) */
}

def @func_8001(%var_8000: Tensor[(4, 11, 8), float64]) -> Tensor[(4, 11, 8), float64] {
  %620 = fn (%var_7974: Tensor[(4, 11, 8), float64]) -> Tensor[(4, 11, 8), float64] {
    %617 = cast(%var_7974, dtype="float64") /* ty=Tensor[(4, 11, 8), float64] */;
    %618 = cos(%617) /* ty=Tensor[(4, 11, 8), float64] */;
    %619 = cast(%618, dtype="float64") /* ty=Tensor[(4, 11, 8), float64] */;
    asinh(%619) /* ty=Tensor[(4, 11, 8), float64] */
  };
  %620(%var_8000) /* ty=Tensor[(4, 11, 8), float64] */
}

def @func_201() -> (Tensor[(13, 9, 1), float32],) {
  %623 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %621 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %622 = %621.1;
    (%622,)
  };
  %623() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_4883() -> (Tensor[(13, 9, 1), float32],) {
  %624 = @func_1614() /* ty=Tensor[(13, 9, 1), float32] */;
  (%624,)
}

def @func_7447() -> (Tensor[(13, 9, ?), uint64],) {
  %627 = fn () -> (Tensor[(13, 9, ?), uint64],) {
    %625 = @func_7084() /* ty=(Tensor[(13, 9, ?), uint64],) */;
    %626 = %625.0;
    (%626,)
  };
  %627() /* ty=(Tensor[(13, 9, ?), uint64],) */
}

def @func_5780() -> (Tensor[(13, 9, 1), float32],) {
  @func_5778() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_9275() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32]) {
  @func_9273() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32]) */
}

def @func_5422() -> Tensor[(13, 9, ?), uint32] {
  @func_371() /* ty=Tensor[(13, 9, ?), uint32] */
}

def @func_6908(%var_6904: Tensor[(10, 144), int8], %var_6905: Tensor[(15, 117), float32], %var_6906: Tensor[(10, 144), int8], %var_6907: Tensor[(640), float32]) -> (Tensor[(13, 9, ?), uint64], Tensor[(15, 117), float32], Tensor[(10, 144), uint16], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1638), float64], Tensor[(13, 9, 1), float32]) {
  @func_6902(%var_6904, %var_6905, %var_6906, %var_6907) /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(15, 117), float32], Tensor[(10, 144), uint16], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1638), float64], Tensor[(13, 9, 1), float32]) */
}

def @func_982() -> (Tensor[(13, 9, 1), float64],) {
  %631 = fn () -> (Tensor[(13, 9, 1), float64],) {
    %628 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    %629 = cast(%628, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
    %630 = asin(%629) /* ty=Tensor[(13, 9, 1), float64] */;
    (%630,)
  };
  %631() /* ty=(Tensor[(13, 9, 1), float64],) */
}

def @func_2179(%var_2151: Tensor[(13, 9, 8), float32]) -> (Tensor[(13, 9, 8), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %632 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %633 = %632.1;
  %634 = cast(%633, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
  %635 = cast(%var_2151, dtype="bool") /* ty=Tensor[(13, 9, 8), bool] */;
  %636 = @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %637 = equal(%634, %635) /* ty=Tensor[(13, 9, 8), bool] */;
  %638 = %636.0;
  %639 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  (%637, %638, %639)
}

def @func_4885() -> (Tensor[(13, 9, 1), float32],) {
  @func_4883() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_4938(%var_4937: Tensor[(13, 9, 6), float32]) -> (Tensor[(13, 9, 6), bool], Tensor[(13, 9, 1), float32]) {
  %646 = fn (%var_4905: Tensor[(13, 9, 6), float32]) -> (Tensor[(13, 9, 6), bool], Tensor[(13, 9, 1), float32]) {
    %640 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
    %641 = cast(%640, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
    %642 = cast(%var_4905, dtype="bool") /* ty=Tensor[(13, 9, 6), bool] */;
    %643 = @func_937() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(13, 9, 1), float32]) */;
    %644 = logical_and(%641, %642) /* ty=Tensor[(13, 9, 6), bool] */;
    %645 = %643.4;
    (%644, %645)
  };
  %646(%var_4937) /* ty=(Tensor[(13, 9, 6), bool], Tensor[(13, 9, 1), float32]) */
}

def @func_7043() -> (Tensor[(13, 9, 1), float32], Tensor[(14, 13, 11), int64], Tensor[(1, 2002), int64], Tensor[(1053), uint32]) {
  %647 = @func_5640() /* ty=(Tensor[(13, 9, 1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %648 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 2002), int64] */, dtype="int64") /* ty=Tensor[(1, 2002), int64] */;
  %649 = cast(meta[relay.Constant][20] /* ty=Tensor[(1, 2002), int64] */, dtype="int64") /* ty=Tensor[(1, 2002), int64] */;
  %650 = reshape(%648, newshape=[14, 13, 11]) /* ty=Tensor[(14, 13, 11), int64] */;
  %651 = reshape(%649, newshape=[14, 13, 11]) /* ty=Tensor[(14, 13, 11), int64] */;
  %652 = @func_2626() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */;
  %653 = %647.2;
  %654 = @func_6559(%650, %651) /* ty=Tensor[(14, 13, 11), int64] */;
  %655 = %652.0;
  (%653, %654, meta[relay.Constant][20] /* ty=Tensor[(1, 2002), int64] */, %655)
}

def @func_1917(%var_1916: Tensor[(1440), int8]) -> (Tensor[(160, 4), float32], Tensor[(13, 9, 1440), bool]) {
  %665 = fn (%var_1901: Tensor[(1440), int8]) -> (Tensor[(160, 4), float32], Tensor[(13, 9, 1440), bool]) {
    %656 = cast(%var_1901, dtype="int8") /* ty=Tensor[(1440), int8] */;
    %657 = reshape(%656, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int8] */;
    %658 = @func_1299(%657) /* ty=(Tensor[(10, 9, 16), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(160, 4), float32]) */;
    %659 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %660 = %659.3;
    %661 = cast(%var_1901, dtype="bool") /* ty=Tensor[(1440), bool] */;
    %662 = cast(%660, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
    %663 = %658.3;
    %664 = less_equal(%661, %662) /* ty=Tensor[(13, 9, 1440), bool] */;
    (%663, %664)
  };
  %665(%var_1916) /* ty=(Tensor[(160, 4), float32], Tensor[(13, 9, 1440), bool]) */
}

def @func_3000(%var_2825: Tensor[(20, 72), int8], %var_2860: Tensor[(20, 72), int8], %var_2921: Tensor[(13, 9, 15), float32], %var_2959: Tensor[(20, 72), float64]) -> (Tensor[(13, 9, ?), float64], Tensor[(13, 9, 1), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(20, 72), float64], Tensor[(13, 9, ?), uint16], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(640), float32], Tensor[(13, 9, 15), float64], Tensor[(720, 2), int8], Tensor[(1170), float32], Tensor[(160, 4), float32], Tensor[(20, 72), int8], Tensor[(640), float32], Tensor[(13, 9, ?), uint32]) {
  %666 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %667 = %666.0;
  %668 = @func_1614() /* ty=Tensor[(13, 9, 1), float32] */;
  %669 = cast(%668, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
  %670 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %671 = cast(%667, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
  %672 = dyn.reshape(%669, %670, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %673 = @func_981() /* ty=(Tensor[(13, 9, 1), float64],) */;
  %674 = cast(%var_2825, dtype="int8") /* ty=Tensor[(20, 72), int8] */;
  %675 = reshape(%674, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int8] */;
  %676 = @func_1299(%675) /* ty=(Tensor[(10, 9, 16), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(160, 4), float32]) */;
  %677 = cast(%var_2860, dtype="float64") /* ty=Tensor[(20, 72), float64] */;
  %678 = shape_of(%var_2825, dtype="int32") /* ty=Tensor[(2), int32] */;
  %679 = cast(%var_2825, dtype="float64") /* ty=Tensor[(20, 72), float64] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %681 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  %682 = cast(%681, dtype="uint16") /* ty=Tensor[(13, 9, 1), uint16] */;
  %683 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%667, dtype="uint16") /* ty=Tensor[(13, 9, 1), uint16] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %686 = cast(meta[relay.Constant][21] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %687 = reshape(%686, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %688 = @func_2454(%687) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(8, 10, 8), float32]) */;
  %689 = cast(%668, dtype="float64") /* ty=Tensor[(13, 9, 1), float64] */;
  %690 = cast(%var_2921, dtype="float64") /* ty=Tensor[(13, 9, 15), float64] */;
  %691 = cast(meta[relay.Constant][22] /* ty=Tensor[(1170), float32] */, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %692 = cast(%var_2825, dtype="int8") /* ty=Tensor[(20, 72), int8] */;
  %693 = reshape(%691, newshape=[13, 9, 10]) /* ty=Tensor[(13, 9, 10), float32] */;
  %694 = reshape(%692, newshape=[720, 2]) /* ty=Tensor[(720, 2), int8] */;
  %695 = @func_1595(%693, %694) /* ty=(Tensor[(13, 9, 10), bool], Tensor[(160, 4), float32], Tensor[(720, 2), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %696 = cast(%var_2860, dtype="float64") /* ty=Tensor[(20, 72), float64] */;
  %697 = sigmoid(%696) /* ty=Tensor[(20, 72), float64] */;
  %698 = cast(%697, dtype="int8") /* ty=Tensor[(20, 72), int8] */;
  %699 = reshape(%698, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %700 = @func_1915(%699) /* ty=(Tensor[(160, 4), float32], Tensor[(13, 9, 1440), bool]) */;
  %701 = cast(%var_2959, dtype="int8") /* ty=Tensor[(20, 72), int8] */;
  %702 = shape_of(%697, dtype="int32") /* ty=Tensor[(2), int32] */;
  %703 = cast(%697, dtype="int8") /* ty=Tensor[(20, 72), int8] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %705 = cast(meta[relay.Constant][21] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %706 = reshape(%705, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %707 = @func_1649(%706) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32]) */;
  %708 = @func_1677() /* ty=(Tensor[(13, 9, ?), uint32],) */;
  %709 = mod(%671, %672) /* ty=Tensor[(13, 9, ?), float64] */;
  %710 = %673.0;
  %711 = %676.1;
  %712 = @func_1972() /* ty=Tensor[(13, 9, 1), float32] */;
  %713 = mod(%679, %680) /* ty=Tensor[(20, 72), float64] */;
  %714 = maximum(%684, %685) /* ty=Tensor[(13, 9, ?), uint16] */;
  %715 = @func_1128() /* ty=Tensor[(13, 9, 1), float32] */;
  %716 = %688.0;
  %717 = floor_divide(%689, %690) /* ty=Tensor[(13, 9, 15), float64] */;
  %718 = %695.2;
  %719 = %700.0;
  %720 = bitwise_and(%703, %704) /* ty=Tensor[(20, 72), int8] */;
  %721 = %707.2;
  %722 = %708.0;
  (%709, %710, %711, %712, %713, %714, %715, %716, meta[relay.Constant][21] /* ty=Tensor[(640), float32] */, %717, %718, meta[relay.Constant][22] /* ty=Tensor[(1170), float32] */, %719, %720, %721, %722)
}

def @func_3456() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %727 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
    %723 = @func_887() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int16]) */;
    %724 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
    %725 = %723.0;
    %726 = %724.5;
    (%725, %726)
  };
  %727() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_6420() -> Tensor[(13, 9, 1), float32] {
  @func_6418() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_4363(%var_4361: Tensor[(5, 4, 14), float64]) -> (Tensor[(5, 4, 14), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  @func_4360(%var_4361) /* ty=(Tensor[(5, 4, 14), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_1074() -> Tensor[(13, 9, ?), uint64] {
  %741 = fn () -> Tensor[(13, 9, ?), uint64] {
    %728 = @func_501() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %729 = %728.0;
    %730 = cast(%729, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
    %731 = atan(%730) /* ty=Tensor[(13, 9, 1), float32] */;
    %732 = cast(%731, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
    %733 = shape_of(%729, dtype="int32") /* ty=Tensor[(3), int32] */;
    %734 = cast(%729, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
    %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %736 = power(%734, %735) /* ty=Tensor[(13, 9, ?), float32] */;
    %737 = cast(%731, dtype="uint64") /* ty=Tensor[(13, 9, 1), uint64] */;
    %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
    %739 = cast(%736, dtype="uint64") /* ty=Tensor[(13, 9, ?), uint64] */;
    %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_or(%739, %740) /* ty=Tensor[(13, 9, ?), uint64] */
  };
  %741() /* ty=Tensor[(13, 9, ?), uint64] */
}

def @func_5117() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  @func_5115() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */
}

def @func_4863(%var_4856: Tensor[(3, 3, 4), float64], %var_4857: Tensor[(3, 3, 4), float64]) -> Tensor[(3, 3, 4), float64] {
  %742 = cast(%var_4857, dtype="float64") /* ty=Tensor[(3, 3, 4), float64] */;
  %743 = shape_of(%var_4856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%var_4856, dtype="float64") /* ty=Tensor[(3, 3, 4), float64] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%744, %745) /* ty=Tensor[(3, 3, 4), float64] */
}

def @func_6530(%var_6477: Tensor[(1053), int16]) -> (Tensor[(1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(1053), uint32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %746 = @func_4133() /* ty=(Tensor[(1053), float32],) */;
  %747 = %746.0;
  %748 = cast(meta[relay.Constant][23] /* ty=Tensor[(1053), float32] */, dtype="int16") /* ty=Tensor[(1053), int16] */;
  %749 = shape_of(%747, dtype="int32") /* ty=Tensor[(1), int32] */;
  %750 = cast(%747, dtype="int16") /* ty=Tensor[(1053), int16] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?), int16] */;
  %752 = bitwise_or(%750, %751) /* ty=Tensor[(1053), int16] */;
  %753 = cast(%var_6477, dtype="bool") /* ty=Tensor[(1053), bool] */;
  %754 = shape_of(%752, dtype="int32") /* ty=Tensor[(1), int32] */;
  %755 = cast(%752, dtype="bool") /* ty=Tensor[(1053), bool] */;
  %756 = dyn.reshape(%753, %754, newshape=[]) /* ty=Tensor[(?), bool] */;
  %757 = @func_5795() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %758 = @func_1692() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %759 = @func_2626() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */;
  %760 = @func_631() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %761 = equal(%755, %756) /* ty=Tensor[(1053), bool] */;
  %762 = %757.0;
  %763 = %758.0;
  %764 = %759.0;
  %765 = @func_6304() /* ty=Tensor[(13, 9, 1), float32] */;
  %766 = %760.1;
  (%761, %762, %763, %764, %765, %766)
}

def @func_3434() -> Tensor[(13, 9, 1), float32] {
  %768 = fn () -> Tensor[(13, 9, 1), float32] {
    %767 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %767.1
  };
  %768() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_2456(%var_2455: Tensor[(640), float32]) -> (Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(8, 10, 8), float32]) {
  %778 = fn (%var_2439: Tensor[(640), float32]) -> (Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(8, 10, 8), float32]) {
    %769 = @func_1677() /* ty=(Tensor[(13, 9, ?), uint32],) */;
    %770 = cast(%var_2439, dtype="float32") /* ty=Tensor[(640), float32] */;
    %771 = reshape(%770, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), float32] */;
    %772 = cast(%var_2439, dtype="float32") /* ty=Tensor[(640), float32] */;
    %773 = reshape(%772, newshape=[640]) /* ty=Tensor[(640), float32] */;
    %774 = @func_664(%773) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */;
    %775 = %769.0;
    %776 = @func_475(%771) /* ty=Tensor[(8, 10, 8), float32] */;
    %777 = %774.1;
    (%775, %776, %var_2439, %777)
  };
  %778(%var_2455) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(8, 10, 8), float32]) */
}

def @func_3115() -> (Tensor[(13, 9, 1), float32],) {
  %781 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %779 = @func_2389() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %780 = %779.0;
    (%780,)
  };
  %781() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_3006(%var_3002: Tensor[(20, 72), int8], %var_3003: Tensor[(20, 72), int8], %var_3004: Tensor[(13, 9, 15), float32], %var_3005: Tensor[(20, 72), float64]) -> (Tensor[(13, 9, ?), float64], Tensor[(13, 9, 1), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(20, 72), float64], Tensor[(13, 9, ?), uint16], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(640), float32], Tensor[(13, 9, 15), float64], Tensor[(720, 2), int8], Tensor[(1170), float32], Tensor[(160, 4), float32], Tensor[(20, 72), int8], Tensor[(640), float32], Tensor[(13, 9, ?), uint32]) {
  @func_3000(%var_3002, %var_3003, %var_3004, %var_3005) /* ty=(Tensor[(13, 9, ?), float64], Tensor[(13, 9, 1), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(20, 72), float64], Tensor[(13, 9, ?), uint16], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(640), float32], Tensor[(13, 9, 15), float64], Tensor[(720, 2), int8], Tensor[(1170), float32], Tensor[(160, 4), float32], Tensor[(20, 72), int8], Tensor[(640), float32], Tensor[(13, 9, ?), uint32]) */
}

def @func_565(%var_541: Tensor[(13, 9, 9), uint32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 9), float32], Tensor[(13, 9, 1), float32]) {
  %782 = @func_308() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %783 = @func_371() /* ty=Tensor[(13, 9, ?), uint32] */;
  %784 = cast(%783, dtype="uint16") /* ty=Tensor[(13, 9, ?), uint16] */;
  %785 = cast(%var_541, dtype="uint16") /* ty=Tensor[(13, 9, 9), uint16] */;
  %786 = right_shift(%784, %785) /* ty=Tensor[(13, 9, 9), uint16] */;
  %787 = cast(%786, dtype="float32") /* ty=Tensor[(13, 9, 9), float32] */;
  %788 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %789 = %782.0;
  %790 = exp(%787) /* ty=Tensor[(13, 9, 9), float32] */;
  %791 = %788.0;
  (%789, %790, %791)
}

def @func_1832(%var_1831: Tensor[(8, 1, 12), float64]) -> (Tensor[(8, 1, 12), float64],) {
  %794 = fn (%var_1817: Tensor[(8, 1, 12), float64]) -> (Tensor[(8, 1, 12), float64],) {
    %792 = cast(%var_1817, dtype="float64") /* ty=Tensor[(8, 1, 12), float64] */;
    %793 = asinh(%792) /* ty=Tensor[(8, 1, 12), float64] */;
    (%793,)
  };
  %794(%var_1831) /* ty=(Tensor[(8, 1, 12), float64],) */
}

def @func_5254() -> (Tensor[(13, 9, 1), float32], Tensor[(5, 4, 14), float64], Tensor[(70, 4), float64], Tensor[(16, 15, 10), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  %795 = @func_1526() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %796 = cast(meta[relay.Constant][24] /* ty=Tensor[(70, 4), float64] */, dtype="float64") /* ty=Tensor[(70, 4), float64] */;
  %797 = reshape(%796, newshape=[5, 4, 14]) /* ty=Tensor[(5, 4, 14), float64] */;
  %798 = @func_4360(%797) /* ty=(Tensor[(5, 4, 14), float64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %799 = @func_4999() /* ty=(Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(2, 320), float32]) */;
  %800 = %799.0;
  %801 = cast(%800, dtype="float64") /* ty=Tensor[(16, 15, 10), float64] */;
  %802 = @func_1323() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %803 = %795.3;
  %804 = %798.0;
  %805 = erf(%801) /* ty=Tensor[(16, 15, 10), float64] */;
  %806 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  %807 = @func_1073() /* ty=Tensor[(13, 9, ?), uint64] */;
  %808 = %802.0;
  %809 = @func_371() /* ty=Tensor[(13, 9, ?), uint32] */;
  %810 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
  (%803, %804, meta[relay.Constant][24] /* ty=Tensor[(70, 4), float64] */, %805, %806, %807, %808, %809, %810)
}

def @func_8031(%var_8029: Tensor[(13, 9, 5), float32]) -> (Tensor[(13, 9, 5), bool], Tensor[(16, 15, 10), float32]) {
  @func_8028(%var_8029) /* ty=(Tensor[(13, 9, 5), bool], Tensor[(16, 15, 10), float32]) */
}

def @func_9961() -> (Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(3, 14, 4), float32], Tensor[(585, 3), float32]) {
  @func_9959() /* ty=(Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(3, 14, 4), float32], Tensor[(585, 3), float32]) */
}

def @func_372() -> Tensor[(13, 9, ?), uint32] {
  %818 = fn () -> Tensor[(13, 9, ?), uint32] {
    %811 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    %812 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %813 = %812.0;
    %814 = cast(%813, dtype="uint32") /* ty=Tensor[(13, 9, 1), uint32] */;
    %815 = shape_of(%811, dtype="int32") /* ty=Tensor[(3), int32] */;
    %816 = cast(%811, dtype="uint32") /* ty=Tensor[(13, 9, 1), uint32] */;
    %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    logical_xor(%816, %817) /* ty=Tensor[(13, 9, ?), uint32] */
  };
  %818() /* ty=Tensor[(13, 9, ?), uint32] */
}

def @func_4867(%var_4865: Tensor[(3, 3, 4), float64], %var_4866: Tensor[(3, 3, 4), float64]) -> Tensor[(3, 3, 4), float64] {
  @func_4863(%var_4865, %var_4866) /* ty=Tensor[(3, 3, 4), float64] */
}

def @func_1693() -> (Tensor[(13, 9, 1), float32],) {
  %821 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %819 = @func_501() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %820 = %819.0;
    (%820,)
  };
  %821() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_3938(%var_3928: Tensor[(13, 9, 1), float32]) -> (Tensor[(13, 9, ?), float32],) {
  %822 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %823 = %822.0;
  %824 = cast(%var_3928, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%823, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %828 = divide(%826, %827) /* ty=Tensor[(13, 9, ?), float32] */;
  (%828,)
}

def @func_2389() -> (Tensor[(13, 9, 1), float32],) {
  %829 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %830 = %829.1;
  (%830,)
}

def @func_9793() -> (Tensor[(13, 9, 1), float32],) {
  %831 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %832 = %831.0;
  (%832,)
}

def @func_2182(%var_2180: Tensor[(13, 9, 8), float32]) -> (Tensor[(13, 9, 8), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  @func_2179(%var_2180) /* ty=(Tensor[(13, 9, 8), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_10422(%var_10420: Tensor[(3, 14, 4), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(3, 14, 4), float32]) {
  @func_10419(%var_10420) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(3, 14, 4), float32]) */
}

def @func_477(%var_476: Tensor[(8, 10, 8), float32]) -> Tensor[(8, 10, 8), float32] {
  %835 = fn (%var_471: Tensor[(8, 10, 8), float32]) -> Tensor[(8, 10, 8), float32] {
    %833 = cast(8.95988f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %834 = cast(%var_471, dtype="float32") /* ty=Tensor[(8, 10, 8), float32] */;
    floor_mod(%833, %834) /* ty=Tensor[(8, 10, 8), float32] */
  };
  %835(%var_476) /* ty=Tensor[(8, 10, 8), float32] */
}

def @func_4080() -> Tensor[(13, 9, 1), float32] {
  @func_4078() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_9795() -> (Tensor[(13, 9, 1), float32],) {
  @func_9793() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_3566() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float64], Tensor[(13, 9, 1), float32]) {
  @func_3564() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float64], Tensor[(13, 9, 1), float32]) */
}

def @func_6700(%var_6698: Tensor[(96), float64]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(8, 1, 12), float64], Tensor[(96), float64]) {
  @func_6697(%var_6698) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(8, 1, 12), float64], Tensor[(96), float64]) */
}

def @func_664(%var_655: Tensor[(640), float32]) -> (Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) {
  %836 = cast(%var_655, dtype="float32") /* ty=Tensor[(640), float32] */;
  %837 = reshape(%836, newshape=[8, 10, 8]) /* ty=Tensor[(8, 10, 8), float32] */;
  %838 = @func_308() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %839 = @func_371() /* ty=Tensor[(13, 9, ?), uint32] */;
  %840 = @func_475(%837) /* ty=Tensor[(8, 10, 8), float32] */;
  %841 = %838.0;
  (%839, %840, %var_655, %841)
}

def @func_2726(%var_2725: Tensor[(1, 640), float32]) -> (Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(1, 640), float32]) {
  %854 = fn (%var_2718: Tensor[(1, 640), float32]) -> (Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(1, 640), float32]) {
    %842 = @func_2626() /* ty=(Tensor[(1053), uint32], Tensor[(13, 9, ?), uint32]) */;
    %843 = @func_1692() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %844 = cast(%var_2718, dtype="float32") /* ty=Tensor[(1, 640), float32] */;
    %845 = reshape(%844, newshape=[640]) /* ty=Tensor[(640), float32] */;
    %846 = @func_1649(%845) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(640), float32]) */;
    %847 = @func_937() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(13, 9, 1), float32]) */;
    %848 = cast(%var_2718, dtype="float32") /* ty=Tensor[(1, 640), float32] */;
    %849 = %842.1;
    %850 = %843.0;
    %851 = %846.2;
    %852 = %847.3;
    %853 = sigmoid(%848) /* ty=Tensor[(1, 640), float32] */;
    (%849, %850, %851, %852, %853)
  };
  %854(%var_2725) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32], Tensor[(640), float32], Tensor[(13, 9, ?), bool], Tensor[(1, 640), float32]) */
}

def @func_8713(%var_8711: Tensor[(13, 9, 1440), bool], %var_8712: Tensor[(13, 9, 1440), float32]) -> (Tensor[(13, 9, 1440), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1440), float64], Tensor[(13, 9, 1440), uint8], Tensor[(13, 9, 1), float32]) {
  @func_8709(%var_8711, %var_8712) /* ty=(Tensor[(13, 9, 1440), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1440), float64], Tensor[(13, 9, 1440), uint8], Tensor[(13, 9, 1), float32]) */
}

def @func_9013() -> (Tensor[(13, 9, 1), float32],) {
  %857 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %855 = @func_5640() /* ty=(Tensor[(13, 9, 1053), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %856 = %855.3;
    (%856,)
  };
  %857() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_7583() -> Tensor[(13, 9, 1), float32] {
  @func_7581() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_7197() -> (Tensor[(13, 9, 1), float32],) {
  %860 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %858 = @func_501() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %859 = %858.0;
    (%859,)
  };
  %860() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_3036() -> Tensor[(13, 9, 1), float32] {
  @func_122() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_5741() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  @func_5739() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_8188() -> (Tensor[(13, 9, ?), uint32],) {
  %862 = fn () -> (Tensor[(13, 9, ?), uint32],) {
    %861 = @func_5422() /* ty=Tensor[(13, 9, ?), uint32] */;
    (%861,)
  };
  %862() /* ty=(Tensor[(13, 9, ?), uint32],) */
}

def @func_8871() -> (Tensor[(13, 9, 1), float32],) {
  %863 = @func_4589() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %864 = %863.0;
  (%864,)
}

def @func_7750() -> (Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32]) {
  %865 = @func_4629() /* ty=(Tensor[(16, 15, 10), float32],) */;
  %866 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %867 = %865.0;
  %868 = %866.1;
  (%867, %868)
}

def @func_9216() -> Tensor[(13, 9, 1), float32] {
  %870 = fn () -> Tensor[(13, 9, 1), float32] {
    %869 = @func_3375() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %869.0
  };
  %870() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_3266(%var_3241: Tensor[(13, 9, 1), float32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int64]) {
  %871 = @func_185() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %872 = @func_155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %873 = %872.1;
  %874 = cast(%var_3241, dtype="int64") /* ty=Tensor[(13, 9, 1), int64] */;
  %875 = shape_of(%873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%873, dtype="int64") /* ty=Tensor[(13, 9, 1), int64] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %878 = %871.0;
  %879 = bitwise_and(%876, %877) /* ty=Tensor[(13, 9, ?), int64] */;
  (%878, %879)
}

def @func_6765() -> (Tensor[(13, 9, 1), float32],) {
  %881 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %880 = @func_1614() /* ty=Tensor[(13, 9, 1), float32] */;
    (%880,)
  };
  %881() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_4590() -> (Tensor[(13, 9, 1), float32],) {
  %883 = fn () -> (Tensor[(13, 9, 1), float32],) {
    %882 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    (%882,)
  };
  %883() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_308() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %884 = @func_247() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %885 = %884.2;
  %886 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  (%885, %886)
}

def @func_5447() -> (Tensor[(13, 9, 1), float32],) {
  @func_5445() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_2226() -> (Tensor[(13, 9, 1), float64],) {
  @func_2224() /* ty=(Tensor[(13, 9, 1), float64],) */
}

def @func_7310(%var_7308: Tensor[(16, 15, 10), float64]) -> Tensor[(16, 15, 10), bool] {
  @func_7307(%var_7308) /* ty=Tensor[(16, 15, 10), bool] */
}

def @func_7413() -> (Tensor[(13, 9, ?), uint32],) {
  %887 = @func_5115() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */;
  %888 = %887.1;
  (%888,)
}

def @func_9155() -> Tensor[(13, 9, 1), float32] {
  %890 = fn () -> Tensor[(13, 9, 1), float32] {
    %889 = @func_2566() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %889.0
  };
  %890() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_6092(%var_6090: Tensor[(96), float64]) -> (Tensor[(13, 9, 1), float32], Tensor[(8, 1, 12), float64], Tensor[(96), float64]) {
  @func_6089(%var_6090) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(8, 1, 12), float64], Tensor[(96), float64]) */
}

def @func_2644() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %894 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
    %891 = @func_493() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %892 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
    %893 = %891.0;
    (%892, %893)
  };
  %894() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_1999() -> Tensor[(13, 9, 7), float32] {
  @func_1997() /* ty=Tensor[(13, 9, 7), float32] */
}

def @func_185() -> (Tensor[(13, 9, 1), float32],) {
  %895 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
  (%895,)
}

def @func_7502() -> (Tensor[(13, 9, 1), float32],) {
  %896 = @func_4078() /* ty=Tensor[(13, 9, 1), float32] */;
  (%896,)
}

def @func_7951() -> (Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %897 = @func_7446() /* ty=(Tensor[(13, 9, ?), uint64],) */;
  %898 = @func_6642() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %899 = @func_4404() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %900 = %897.0;
  %901 = %898.0;
  %902 = %899.0;
  (%900, %901, %902)
}

def @func_9937() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(16, 15, 10), float32]) {
  %908 = fn () -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(16, 15, 10), float32]) {
    %903 = @func_887() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), int16]) */;
    %904 = @func_76() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %905 = %903.0;
    %906 = %904.2;
    %907 = @func_7606() /* ty=Tensor[(16, 15, 10), float32] */;
    (%905, %906, %907)
  };
  %908() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(16, 15, 10), float32]) */
}

def @func_5355(%var_5353: int16, %var_5354: Tensor[(12, 12, 14), int16]) -> Tensor[(12, 12, 14), float32] {
  @func_5351(%var_5353, %var_5354) /* ty=Tensor[(12, 12, 14), float32] */
}

def @func_6559(%var_6553: Tensor[(14, 13, 11), int64], %var_6554: Tensor[(14, 13, 11), int64]) -> Tensor[(14, 13, 11), int64] {
  %909 = cast(%var_6554, dtype="int64") /* ty=Tensor[(14, 13, 11), int64] */;
  %910 = shape_of(%var_6553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(%var_6553, dtype="int64") /* ty=Tensor[(14, 13, 11), int64] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%911, %912) /* ty=Tensor[(14, 13, 11), int64] */
}

def @func_1973() -> Tensor[(13, 9, 1), float32] {
  %914 = fn () -> Tensor[(13, 9, 1), float32] {
    %913 = @func_631() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %913.1
  };
  %914() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_310() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  @func_308() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_5795() -> (Tensor[(13, 9, 1), float32],) {
  %915 = @func_4999() /* ty=(Tensor[(16, 15, 10), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(2, 320), float32]) */;
  %916 = %915.1;
  (%916,)
}

def @func_7000() -> Tensor[(13, 9, 1), float32] {
  %917 = fn () -> Tensor[(13, 9, 1), float32] {
    @func_3433() /* ty=Tensor[(13, 9, 1), float32] */
  };
  %917() /* ty=Tensor[(13, 9, 1), float32] */
}

def @func_10089() -> Tensor[(13, 9, ?), uint32] {
  @func_10087() /* ty=Tensor[(13, 9, ?), uint32] */
}

def @func_10066() -> (Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
  %922 = fn () -> (Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) {
    %918 = @func_9273() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint32]) */;
    %919 = @func_5778() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %920 = %918.1;
    %921 = %919.0;
    (%920, %921)
  };
  %922() /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32]) */
}

def @func_10145(%var_10143: Tensor[(13, 9, 8), float32]) -> (Tensor[(13, 9, 8), bool],) {
  @func_10142(%var_10143) /* ty=(Tensor[(13, 9, 8), bool],) */
}

def @func_1301(%var_1300: Tensor[(10, 9, 16), int8]) -> (Tensor[(10, 9, 16), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(160, 4), float32]) {
  %934 = fn (%var_1251: Tensor[(10, 9, 16), int8]) -> (Tensor[(10, 9, 16), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(160, 4), float32]) {
    %923 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 9, 16), int8] */, dtype="int8") /* ty=Tensor[(10, 9, 16), int8] */;
    %924 = shape_of(%var_1251, dtype="int32") /* ty=Tensor[(3), int32] */;
    %925 = cast(%var_1251, dtype="int8") /* ty=Tensor[(10, 9, 16), int8] */;
    %926 = dyn.reshape(%923, %924, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %927 = @func_200() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %928 = cast(meta[relay.Constant][26] /* ty=Tensor[(160, 4), float32] */, dtype="float32") /* ty=Tensor[(160, 4), float32] */;
    %929 = reshape(%928, newshape=[640]) /* ty=Tensor[(640), float32] */;
    %930 = @func_664(%929) /* ty=(Tensor[(13, 9, ?), uint32], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */;
    %931 = bitwise_and(%925, %926) /* ty=Tensor[(10, 9, 16), int8] */;
    %932 = %927.0;
    %933 = %930.3;
    (%931, %932, %933, meta[relay.Constant][26] /* ty=Tensor[(160, 4), float32] */)
  };
  %934(%var_1300) /* ty=(Tensor[(10, 9, 16), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(160, 4), float32]) */
}

def @func_6902(%var_6847: Tensor[(10, 144), int8], %var_6848: Tensor[(15, 117), float32], %var_6866: Tensor[(10, 144), int8], %var_6872: Tensor[(640), float32]) -> (Tensor[(13, 9, ?), uint64], Tensor[(15, 117), float32], Tensor[(10, 144), uint16], Tensor[(8, 10, 8), float32], Tensor[(640), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1638), float64], Tensor[(13, 9, 1), float32]) {
  %935 = cast(%var_6847, dtype="int8") /* ty=Tensor[(10, 144), int8] */;
  %936 = cast(%var_6848, dtype="float32") /* ty=Tensor[(15, 117), float32] */;
  %937 = reshape(%935, newshape=[1440]) /* ty=Tensor[(1440), int8] */;
  %938 = reshape(%936, newshape=[1755]) /* ty=Tensor[(1755), float32] */;
  %939 = @func_4514(%937, %938) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, ?), uint32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1755), bool], Tensor[(13, 9, 1), float32]) */;
  %940 = cast(%var_6866, dtype="uint16") /* ty=Tensor[(10, 144), uint16] */;
  %941 = shape_of(%var_6847, dtype="int32") /* ty=Tensor[(2), int32] */;
  %942 = cast(%var_6847, dtype="uint16") /* ty=Tensor[(10, 144), uint16] */;
  %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %944 = cast(meta[relay.Constant][27] /* ty=Tensor[(1638), uint32] */, dtype="uint32") /* ty=Tensor[(1638), uint32] */;
  %945 = cast(%var_6872, dtype="float32") /* ty=Tensor[(640), float32] */;
  %946 = reshape(%944, newshape=[13, 9, 14]) /* ty=Tensor[(13, 9, 14), uint32] */;
  %947 = reshape(%945, newshape=[640]) /* ty=Tensor[(640), float32] */;
  %948 = @func_2127(%946, %947) /* ty=(Tensor[(13, 9, 14), int64], Tensor[(13, 9, 7), float32], Tensor[(13, 9, ?), int16], Tensor[(8, 10, 8), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, ?), uint64], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 640), int8], Tensor[(13, 9, 1), float32]) */;
  %949 = cast(meta[relay.Constant][27] /* ty=Tensor[(1638), uint32] */, dtype="uint32") /* ty=Tensor[(1638), uint32] */;
  %950 = reshape(%949, newshape=[1638]) /* ty=Tensor[(1638), uint32] */;
  %951 = @func_3696(%950) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(8, 10, 8), float32], Tensor[(1638), uint32], Tensor[(640), float32], Tensor[(13, 9, 1), float32]) */;
  %952 = @func_2527() /* ty=(Tensor[(13, 9, ?), int32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %953 = @func_2643() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %954 = %953.1;
  %955 = @func_5795() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %956 = %955.0;
  %957 = cast(%956, dtype="uint64") /* ty=Tensor[(13, 9, 1), uint64] */;
  %958 = shape_of(%954, dtype="int32") /* ty=Tensor[(3), int32] */;
  %959 = cast(%954, dtype="uint64") /* ty=Tensor[(13, 9, 1), uint64] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %961 = bitwise_xor(%959, %960) /* ty=Tensor[(13, 9, ?), uint64] */;
  %962 = cast(meta[relay.Constant][27] /* ty=Tensor[(1638), uint32] */, dtype="float64") /* ty=Tensor[(1638), float64] */;
  %963 = cast(%961, dtype="float64") /* ty=Tensor[(13, 9, ?), float64] */;
  %964 = %939.3;
  %965 = subtract(%942, %943) /* ty=Tensor[(10, 144), uint16] */;
  %966 = %948.3;
  %967 = %951.5;
  %968 = %952.1;
  %969 = power(%962, %963) /* ty=Tensor[(13, 9, 1638), float64] */;
  %970 = @func_1128() /* ty=Tensor[(13, 9, 1), float32] */;
  (%964, %var_6848, %965, %966, %var_6872, %967, %968, %969, %970)
}

def @func_7504() -> (Tensor[(13, 9, 1), float32],) {
  @func_7502() /* ty=(Tensor[(13, 9, 1), float32],) */
}

def @func_6379(%var_6378: Tensor[(13, 9, 10), bool]) -> (Tensor[(13, 9, 8), bool], Tensor[(936), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 10), float64]) {
  %987 = fn (%var_6368: Tensor[(13, 9, 10), bool]) -> (Tensor[(13, 9, 8), bool], Tensor[(936), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 10), float64]) {
    %971 = cast(meta[relay.Constant][28] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
    %972 = reshape(%971, newshape=[13, 9, 8]) /* ty=Tensor[(13, 9, 8), float32] */;
    %973 = @func_2179(%972) /* ty=(Tensor[(13, 9, 8), bool], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %974 = @func_1692() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %975 = @func_4202() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
    %976 = %975.0;
    %977 = cast(%976, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
    %978 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 9, 10), float32] */, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
    %979 = not_equal(%977, %978) /* ty=Tensor[(13, 9, 10), bool] */;
    %980 = cast(%var_6368, dtype="float64") /* ty=Tensor[(13, 9, 10), float64] */;
    %981 = shape_of(%979, dtype="int32") /* ty=Tensor[(3), int32] */;
    %982 = cast(%979, dtype="float64") /* ty=Tensor[(13, 9, 10), float64] */;
    %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %984 = %973.0;
    %985 = %974.0;
    %986 = floor_divide(%982, %983) /* ty=Tensor[(13, 9, 10), float64] */;
    (%984, meta[relay.Constant][28] /* ty=Tensor[(936), float32] */, %985, %986)
  };
  %987(%var_6378) /* ty=(Tensor[(13, 9, 8), bool], Tensor[(936), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 10), float64]) */
}

def @func_9852() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  @func_9850() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_568(%var_566: Tensor[(13, 9, 9), uint32]) -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 9), float32], Tensor[(13, 9, 1), float32]) {
  @func_565(%var_566) /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 9), float32], Tensor[(13, 9, 1), float32]) */
}

def @func_8709(%var_8664: Tensor[(13, 9, 1440), bool], %var_8691: Tensor[(13, 9, 1440), float32]) -> (Tensor[(13, 9, 1440), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1440), float64], Tensor[(13, 9, 1440), uint8], Tensor[(13, 9, 1), float32]) {
  %988 = cast(%var_8664, dtype="float32") /* ty=Tensor[(13, 9, 1440), float32] */;
  %989 = @func_631() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %990 = @func_7155() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(1440), int8], Tensor[(13, 9, 1440), bool]) */;
  %991 = %990.2;
  %992 = cast(%var_8664, dtype="float64") /* ty=Tensor[(13, 9, 1440), float64] */;
  %993 = shape_of(%991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %994 = cast(%991, dtype="float64") /* ty=Tensor[(13, 9, 1440), float64] */;
  %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %996 = cast(%var_8664, dtype="float32") /* ty=Tensor[(13, 9, 1440), float32] */;
  %997 = shape_of(%991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %998 = cast(%991, dtype="float32") /* ty=Tensor[(13, 9, 1440), float32] */;
  %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1000 = divide(%998, %999) /* ty=Tensor[(13, 9, 1440), float32] */;
  %1001 = cast(%var_8691, dtype="uint8") /* ty=Tensor[(13, 9, 1440), uint8] */;
  %1002 = shape_of(%1000, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1003 = cast(%1000, dtype="uint8") /* ty=Tensor[(13, 9, 1440), uint8] */;
  %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1005 = log2(%988) /* ty=Tensor[(13, 9, 1440), float32] */;
  %1006 = %989.1;
  %1007 = power(%994, %995) /* ty=Tensor[(13, 9, 1440), float64] */;
  %1008 = bitwise_or(%1003, %1004) /* ty=Tensor[(13, 9, 1440), uint8] */;
  %1009 = @func_1972() /* ty=Tensor[(13, 9, 1), float32] */;
  (%1005, %1006, %1007, %1008, %1009)
}

def @func_5445() -> (Tensor[(13, 9, 1), float32],) {
  %1010 = @func_200() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %1011 = %1010.0;
  (%1011,)
}

def @func_9850() -> (Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %1012 = @func_1758() /* ty=(Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */;
  %1013 = @func_4883() /* ty=(Tensor[(13, 9, 1), float32],) */;
  %1014 = %1012.1;
  %1015 = %1013.0;
  (%1014, %1015)
}

def @func_9495(%var_9493: Tensor[(8, 12, 16), float64]) -> (Tensor[(8, 12, 16), float64],) {
  @func_9492(%var_9493) /* ty=(Tensor[(8, 12, 16), float64],) */
}

def @func_1598(%var_1596: Tensor[(13, 9, 10), float32], %var_1597: Tensor[(720, 2), int8]) -> (Tensor[(13, 9, 10), bool], Tensor[(160, 4), float32], Tensor[(720, 2), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
  %1029 = fn (%var_1545: Tensor[(13, 9, 10), float32], %var_1568: Tensor[(720, 2), int8]) -> (Tensor[(13, 9, 10), bool], Tensor[(160, 4), float32], Tensor[(720, 2), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) {
    %1016 = @func_122() /* ty=Tensor[(13, 9, 1), float32] */;
    %1017 = cast(%1016, dtype="bool") /* ty=Tensor[(13, 9, 1), bool] */;
    %1018 = cast(%var_1545, dtype="bool") /* ty=Tensor[(13, 9, 10), bool] */;
    %1019 = cast(%var_1568, dtype="int8") /* ty=Tensor[(720, 2), int8] */;
    %1020 = reshape(%1019, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), int8] */;
    %1021 = @func_1299(%1020) /* ty=(Tensor[(10, 9, 16), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(160, 4), float32]) */;
    %1022 = cast(%1016, dtype="float32") /* ty=Tensor[(13, 9, 1), float32] */;
    %1023 = @func_418() /* ty=(Tensor[(13, 9, 1), float32],) */;
    %1024 = greater_equal(%1017, %1018) /* ty=Tensor[(13, 9, 10), bool] */;
    %1025 = %1021.3;
    %1026 = @func_21() /* ty=Tensor[(13, 9, 1), float32] */;
    %1027 = cosh(%1022) /* ty=Tensor[(13, 9, 1), float32] */;
    %1028 = %1023.0;
    (%1024, %1025, %var_1568, %1026, %1027, %1028)
  };
  %1029(%var_1596, %var_1597) /* ty=(Tensor[(13, 9, 10), bool], Tensor[(160, 4), float32], Tensor[(720, 2), int8], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32], Tensor[(13, 9, 1), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 1, found 2

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

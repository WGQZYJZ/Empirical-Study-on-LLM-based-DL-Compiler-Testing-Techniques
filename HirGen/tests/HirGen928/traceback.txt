==========mod==========
#[version = "0.0.5"]
def @func_1277(%var_1267: Tensor[(4, 6, 3), float32], %var_1268: Tensor[(4, 6, 3), float32]) -> Tensor[(4, 6, 3), float32] {
  %0 = cast(%var_1268, dtype="float32") /* ty=Tensor[(4, 6, 3), float32] */;
  %1 = shape_of(%var_1267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_1267, dtype="float32") /* ty=Tensor[(4, 6, 3), float32] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  subtract(%2, %3) /* ty=Tensor[(4, 6, 3), float32] */
}

def @func_10203() -> (Tensor[(10, 3, 9), float64],) {
  %4 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %5 = %4.0;
  (%5,)
}

def @func_10415(%var_10321: Tensor[(780), uint16], %var_10322: Tensor[(2240), int64], %var_10344: Tensor[(1680, 1), float64]) -> (Tensor[(10, 3, 9), float64], Tensor[(72), float32], Tensor[(448), bool], Tensor[(780), uint16], Tensor[(2240), int64], Tensor[(10, 3, 9), float64], Tensor[(1680, 144), int64], Tensor[(256), float32], Tensor[(6, 2, 12), float32], Tensor[(60), int64]) {
  %6 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %8 = cast(%var_10321, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %9 = cast(%var_10322, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %10 = reshape(%7, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
  %11 = reshape(%8, newshape=[780]) /* ty=Tensor[(780), uint16] */;
  %12 = reshape(%9, newshape=[28, 80]) /* ty=Tensor[(28, 80), int64] */;
  %13 = @func_6163(%10, %11, %12) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(72), float32], Tensor[(780), uint16], Tensor[(72), float32], Tensor[(28, 80), uint8]) */;
  %14 = %6.0;
  %15 = cast(%14, dtype="float32") /* ty=Tensor[(10, 3, 9), float32] */;
  %16 = reshape(%15, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
  %17 = @func_5882(%16) /* ty=(Tensor[(10, 3, 9), float64],) */;
  %18 = cast(%var_10344, dtype="float64") /* ty=Tensor[(1680, 1), float64] */;
  %19 = reshape(%18, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), float64] */;
  %20 = @func_3586(%19) /* ty=(Tensor[(8, 15, 14), float64], Tensor[(6, 2, 12), float32], Tensor[(144), float32]) */;
  %21 = %20.2;
  %22 = cast(%21, dtype="int64") /* ty=Tensor[(144), int64] */;
  %23 = cast(%var_10344, dtype="int64") /* ty=Tensor[(1680, 1), int64] */;
  %24 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %26 = cast(%21, dtype="float32") /* ty=Tensor[(144), float32] */;
  %27 = reshape(%25, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
  %28 = reshape(%26, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %29 = @func_889(%27, %28) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
  %30 = %13.7;
  %31 = %17.0;
  %32 = subtract(%22, %23) /* ty=Tensor[(1680, 144), int64] */;
  %33 = %24.2;
  %34 = %29.0;
  (%14, %30, meta[relay.Constant][0] /* ty=Tensor[(448), bool] */, %var_10321, %var_10322, %31, %32, %33, %34, meta[relay.Constant][1] /* ty=Tensor[(60), int64] */)
}

def @func_14066() -> (Tensor[(4, 8, 8), float64],) {
  %35 = @func_12123() /* ty=Tensor[(4, 8, 8), float64] */;
  (%35,)
}

def @func_9160() -> Tensor[(13, 15, 11), float32] {
  %36 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %36.0
}

def @func_154(%var_125: Tensor[(6, 2, 12), float32]) -> (Tensor[(6, 2, 12), float32],) {
  %37 = cast(%var_125, dtype="float32") /* ty=Tensor[(6, 2, 12), float32] */;
  %38 = rsqrt(%37) /* ty=Tensor[(6, 2, 12), float32] */;
  %39 = cast(%var_125, dtype="bool") /* ty=Tensor[(6, 2, 12), bool] */;
  %40 = shape_of(%38, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%38, dtype="bool") /* ty=Tensor[(6, 2, 12), bool] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %43 = greater(%41, %42) /* ty=Tensor[(6, 2, 12), bool] */;
  %44 = cast(%38, dtype="float32") /* ty=Tensor[(6, 2, 12), float32] */;
  %45 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(%43, dtype="float32") /* ty=Tensor[(6, 2, 12), float32] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %48 = floor_mod(%46, %47) /* ty=Tensor[(6, 2, 12), float32] */;
  (%48,)
}

def @func_9913() -> (Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) {
  %49 = cast(meta[relay.Constant][2] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %50 = reshape(%49, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
  %51 = @func_9160() /* ty=Tensor[(13, 15, 11), float32] */;
  %52 = @func_8902(%50) /* ty=Tensor[(13, 16, 1), float64] */;
  (%51, %52, meta[relay.Constant][2] /* ty=Tensor[(208), float64] */)
}

def @func_17427() -> (Tensor[(256), float32], Tensor[(10, 3, 9), float64]) {
  %53 = @func_11253() /* ty=Tensor[(256), float32] */;
  %54 = @func_12423() /* ty=Tensor[(10, 3, 9), float64] */;
  (%53, %54)
}

def @func_20584() -> Tensor[(13, 15, 11), float32] {
  %55 = @func_19670() /* ty=(Tensor[(60), int64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) */;
  %55.1
}

def @func_21277() -> Tensor[(4, 8, 8), float64] {
  @func_18157() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_14970() -> (Tensor[(4, 8, 8), float32],) {
  %56 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
  (%56,)
}

def @func_22010() -> Tensor[(256), float32] {
  %57 = @func_21871() /* ty=(Tensor[(256), float32],) */;
  %57.0
}

def @func_11253() -> Tensor[(256), float32] {
  %58 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %58.2
}

def @func_21572() -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32]) {
  %59 = @func_15171() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %60 = %59.0;
  %61 = @func_20584() /* ty=Tensor[(13, 15, 11), float32] */;
  (%60, %61)
}

def @func_10598(%var_10586: Tensor[(1, 11, 11), int8], %var_10587: Tensor[(1, 11, 11), int8]) -> (Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) {
  %62 = cast(%var_10587, dtype="bool") /* ty=Tensor[(1, 11, 11), bool] */;
  %63 = shape_of(%var_10586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%var_10586, dtype="bool") /* ty=Tensor[(1, 11, 11), bool] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %66 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %67 = less_equal(%64, %65) /* ty=Tensor[(?, 11, 11), bool] */;
  %68 = %66.0;
  (%67, %68)
}

def @func_3372(%var_3330: Tensor[(2, 2, 1), float32], %var_3336: Tensor[(72), float32]) -> (Tensor[(2, 2, 1), float32], Tensor[(10, 12, 3), bool], Tensor[(72), float32], Tensor[(144), float32], Tensor[(6, 2, 12), float32], Tensor[(6, 2, 12), float32], Tensor[(5, 13, 3), float64], Tensor[(195), float64]) {
  %69 = cast(%var_3330, dtype="float32") /* ty=Tensor[(2, 2, 1), float32] */;
  %70 = cast(%var_3336, dtype="float32") /* ty=Tensor[(72), float32] */;
  %71 = cast(meta[relay.Constant][3] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %72 = reshape(%70, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %73 = reshape(%71, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %74 = @func_2181(%72, %73) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(144), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(10, 3, 2), float32], Tensor[(26), float32], Tensor[(10, 12, 3), bool]) */;
  %75 = cast(meta[relay.Constant][3] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %76 = reshape(%75, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float32] */;
  %77 = @func_154(%76) /* ty=(Tensor[(6, 2, 12), float32],) */;
  %78 = cast(meta[relay.Constant][3] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %79 = reshape(%78, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float32] */;
  %80 = @func_154(%79) /* ty=(Tensor[(6, 2, 12), float32],) */;
  %81 = cast(meta[relay.Constant][4] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %82 = reshape(%81, newshape=[5, 13, 3]) /* ty=Tensor[(5, 13, 3), float64] */;
  %83 = @func_3156(%82) /* ty=(Tensor[(5, 13, 3), float64],) */;
  %84 = sigmoid(%69) /* ty=Tensor[(2, 2, 1), float32] */;
  %85 = %74.7;
  %86 = %77.0;
  %87 = %80.0;
  %88 = %83.0;
  (%84, %85, %var_3336, meta[relay.Constant][3] /* ty=Tensor[(144), float32] */, %86, %87, %88, meta[relay.Constant][4] /* ty=Tensor[(195), float64] */)
}

def @func_11906() -> Tensor[(10, 3, 9), float64] {
  %89 = @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %89.0
}

def @main(%var_22218: Tensor[(13, 15, 11), float32]) -> (Tensor[(13, 15, 11), int16],) {
  %90 = @func_12413() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
  %91 = %90.2;
  %92 = cast(%var_22218, dtype="int16") /* ty=Tensor[(13, 15, 11), int16] */;
  %93 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%91, dtype="int16") /* ty=Tensor[(13, 15, 11), int16] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %96 = left_shift(%94, %95) /* ty=Tensor[(13, 15, 11), int16] */;
  (%96,)
}

def @func_10859() -> (Tensor[(4, 8, 8), float32],) {
  %97 = @func_10109() /* ty=(Tensor[(90, 3), float32], Tensor[(4, 8, 8), float32]) */;
  %98 = %97.1;
  (%98,)
}

def @func_11706(%var_11671: Tensor[(880), float32]) -> (Tensor[(10, 3, 9), float64], Tensor[(256), float32], Tensor[(5, 16, 11), float32], Tensor[(880), float32]) {
  %99 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %100 = @func_10980() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(351), float64], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(4), float32], Tensor[(121, 1), int8], Tensor[(?, 11, 11), float64]) */;
  %101 = cast(%var_11671, dtype="float32") /* ty=Tensor[(880), float32] */;
  %102 = reshape(%101, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float32] */;
  %103 = %99.1;
  %104 = %100.1;
  %105 = @func_5078(%102) /* ty=Tensor[(5, 16, 11), float32] */;
  (%103, %104, %105, %var_11671)
}

def @func_17635() -> (Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(16, ?, 6), float32], Tensor[(4, 8, 8), float64]) {
  %106 = @func_10109() /* ty=(Tensor[(90, 3), float32], Tensor[(4, 8, 8), float32]) */;
  %107 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %108 = cast(meta[relay.Constant][5] /* ty=Tensor[(96), uint32] */, dtype="uint32") /* ty=Tensor[(96), uint32] */;
  %109 = reshape(%108, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint32] */;
  %110 = @func_14345(%109) /* ty=(Tensor[(16, 1, 6), uint32], Tensor[(256), float32]) */;
  %111 = %110.0;
  %112 = cast(meta[relay.Constant][5] /* ty=Tensor[(96), uint32] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %113 = shape_of(%111, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%111, dtype="uint64") /* ty=Tensor[(16, 1, 6), uint64] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %116 = bitwise_or(%114, %115) /* ty=Tensor[(16, ?, 6), uint64] */;
  %117 = cast(%116, dtype="float32") /* ty=Tensor[(16, ?, 6), float32] */;
  %118 = sigmoid(%117) /* ty=Tensor[(16, ?, 6), float32] */;
  %119 = cast(%118, dtype="float32") /* ty=Tensor[(16, ?, 6), float32] */;
  %120 = %106.1;
  %121 = %107.0;
  %122 = acosh(%119) /* ty=Tensor[(16, ?, 6), float32] */;
  %123 = @func_12699() /* ty=Tensor[(4, 8, 8), float64] */;
  (%120, %121, %122, %123)
}

def @func_20480() -> (Tensor[(10, 3, 9), float64],) {
  %124 = @func_12423() /* ty=Tensor[(10, 3, 9), float64] */;
  (%124,)
}

def @func_12026() -> Tensor[(13, 15, 11), float32] {
  @func_9160() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_1768(%var_1750: Tensor[(13, 1, 2), float32]) -> (Tensor[(13, 1, 2), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(1, 144), float32]) {
  %125 = cast(%var_1750, dtype="float32") /* ty=Tensor[(13, 1, 2), float32] */;
  %126 = cast(meta[relay.Constant][6] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %127 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 144), float32] */, dtype="float32") /* ty=Tensor[(1, 144), float32] */;
  %128 = reshape(%126, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
  %129 = reshape(%127, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %130 = @func_889(%128, %129) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
  %131 = tan(%125) /* ty=Tensor[(13, 1, 2), float32] */;
  %132 = %130.2;
  (%131, %132, meta[relay.Constant][6] /* ty=Tensor[(60), int64] */, meta[relay.Constant][7] /* ty=Tensor[(1, 144), float32] */)
}

def @func_12365(%var_12325: bool, %var_12326: Tensor[(13, 1, 15), bool], %var_12344: Tensor[(528), uint16]) -> (Tensor[(11, 16, 3), bool], Tensor[(528), uint16], Tensor[(9, 13, 3), float64], Tensor[(13, 351, 15), bool]) {
  %133 = cast(%var_12325, dtype="uint16") /* ty=uint16 */;
  %134 = cast(%var_12344, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %135 = reshape(%133, newshape=[]) /* ty=uint16 */;
  %136 = reshape(%134, newshape=[528]) /* ty=Tensor[(528), uint16] */;
  %137 = @func_9133(%135, %136) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(60), int64], Tensor[(26), float32]) */;
  %138 = cast(meta[relay.Constant][8] /* ty=Tensor[(351, 1), float64] */, dtype="float64") /* ty=Tensor[(351, 1), float64] */;
  %139 = reshape(%138, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float64] */;
  %140 = cast(%var_12325, dtype="bool") /* ty=bool */;
  %141 = cast(%var_12326, dtype="bool") /* ty=Tensor[(13, 1, 15), bool] */;
  %142 = logical_and(%140, %141) /* ty=Tensor[(13, 1, 15), bool] */;
  %143 = cast(%142, dtype="bool") /* ty=Tensor[(13, 1, 15), bool] */;
  %144 = cast(meta[relay.Constant][8] /* ty=Tensor[(351, 1), float64] */, dtype="bool") /* ty=Tensor[(351, 1), bool] */;
  %145 = %137.1;
  %146 = @func_5710(%139) /* ty=Tensor[(9, 13, 3), float64] */;
  %147 = less_equal(%143, %144) /* ty=Tensor[(13, 351, 15), bool] */;
  (%145, %var_12344, %146, %147)
}

def @func_21506() -> (Tensor[(13, 15, 11), float32],) {
  %148 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %149 = %148.0;
  (%149,)
}

def @func_17963(%var_17948: float64) -> (Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(1, 2, 12), float64], Tensor[(24), float64], Tensor[(130, 6), uint16], float64, Tensor[(528), uint16], Tensor[(2240), int64]) {
  %150 = @func_17009() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(351), float64]) */;
  %151 = %150.0;
  %152 = @func_11253() /* ty=Tensor[(256), float32] */;
  %153 = cast(%152, dtype="uint32") /* ty=Tensor[(256), uint32] */;
  %154 = shape_of(%151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%151, dtype="uint32") /* ty=Tensor[(4, 8, 8), uint32] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %157 = maximum(%155, %156) /* ty=Tensor[(4, 8, 8), uint32] */;
  %158 = cast(%157, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %159 = cast(meta[relay.Constant][9] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %160 = reshape(%159, newshape=[1, 2, 12]) /* ty=Tensor[(1, 2, 12), float64] */;
  %161 = @func_959(%160) /* ty=(Tensor[(1, 2, 12), float64],) */;
  %162 = cast(%var_17948, dtype="float64") /* ty=float64 */;
  %163 = cast(meta[relay.Constant][10] /* ty=Tensor[(528), uint16] */, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %164 = cast(meta[relay.Constant][11] /* ty=Tensor[(2240), int64] */, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %165 = reshape(%162, newshape=[]) /* ty=float64 */;
  %166 = reshape(%163, newshape=[528]) /* ty=Tensor[(528), uint16] */;
  %167 = reshape(%164, newshape=[2240]) /* ty=Tensor[(2240), int64] */;
  %168 = @func_15084(%165, %166, %167) /* ty=(Tensor[(10, 3, 9), float64], float64, Tensor[(48), float64], Tensor[(10, 3, 9), float64], Tensor[(256), float32], Tensor[(4, 8, 8), float64], Tensor[(130, 6), uint16], Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(528), uint16], Tensor[(780), uint16], Tensor[(448), bool], Tensor[(2240), int64], Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(121), bool]) */;
  %169 = @func_13650() /* ty=Tensor[(256), float32] */;
  %170 = log2(%158) /* ty=Tensor[(4, 8, 8), float32] */;
  %171 = %161.0;
  %172 = %168.6;
  (%169, %170, %171, meta[relay.Constant][9] /* ty=Tensor[(24), float64] */, %172, %var_17948, meta[relay.Constant][10] /* ty=Tensor[(528), uint16] */, meta[relay.Constant][11] /* ty=Tensor[(2240), int64] */)
}

def @func_12413() -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) {
  %173 = @func_11301() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %174 = @func_12225() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %175 = @func_10019() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
  %176 = %173.0;
  %177 = %174.0;
  %178 = %175.0;
  (%176, %177, %178)
}

def @func_21008() -> Tensor[(13, 15, 11), float32] {
  %179 = @func_12413() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
  %179.2
}

def @func_17255() -> Tensor[(4, 8, 8), float64] {
  @func_15283() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_17292() -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32]) {
  %180 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %181 = @func_12423() /* ty=Tensor[(10, 3, 9), float64] */;
  %182 = %180.0;
  (%181, %182)
}

def @func_12624(%var_12606: float64, %var_12607: Tensor[(1, 12, 4), float64], %var_12612: Tensor[(121), int8]) -> (Tensor[(1, 12, 4), float64], Tensor[(?, 11, 11), bool], Tensor[(121), int8]) {
  %183 = cast(%var_12606, dtype="float64") /* ty=float64 */;
  %184 = cast(%var_12607, dtype="float64") /* ty=Tensor[(1, 12, 4), float64] */;
  %185 = cast(%var_12612, dtype="int8") /* ty=Tensor[(121), int8] */;
  %186 = cast(%var_12612, dtype="int8") /* ty=Tensor[(121), int8] */;
  %187 = reshape(%185, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
  %188 = reshape(%186, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
  %189 = @func_10598(%187, %188) /* ty=(Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) */;
  %190 = floor_mod(%183, %184) /* ty=Tensor[(1, 12, 4), float64] */;
  %191 = %189.0;
  (%190, %191, %var_12612)
}

def @func_18535() -> (Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) {
  %192 = @func_12604() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %193 = @func_15515() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %194 = @func_12413() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
  %195 = %192.0;
  %196 = %193.0;
  %197 = %194.2;
  (%195, %196, %197)
}

def @func_13650() -> Tensor[(256), float32] {
  %198 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %198.0
}

def @func_18921() -> (Tensor[(13, 15, 11), float32],) {
  %199 = @func_13021() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %200 = %199.0;
  (%200,)
}

def @func_19522() -> Tensor[(4, 8, 8), float64] {
  @func_12699() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_14112(%var_14085: Tensor[(880), float32], %var_14099: Tensor[(112, 4), bool], %var_14100: Tensor[(780), uint16], %var_14101: Tensor[(2, 1120), int64]) -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32], Tensor[(256), float32], Tensor[(5, 16, 11), float32], Tensor[(880), float32], Tensor[(16, 7, 4), bool], Tensor[(112, 4), bool], Tensor[(780), uint16], Tensor[(2, 1120), int64], Tensor[(13, 15, 11), float32]) {
  %201 = cast(%var_14085, dtype="float32") /* ty=Tensor[(880), float32] */;
  %202 = reshape(%201, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float32] */;
  %203 = cast(%var_14099, dtype="bool") /* ty=Tensor[(112, 4), bool] */;
  %204 = cast(%var_14100, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %205 = cast(%var_14101, dtype="int64") /* ty=Tensor[(2, 1120), int64] */;
  %206 = reshape(%203, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
  %207 = reshape(%204, newshape=[780]) /* ty=Tensor[(780), uint16] */;
  %208 = reshape(%205, newshape=[28, 80]) /* ty=Tensor[(28, 80), int64] */;
  %209 = @func_6163(%206, %207, %208) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(72), float32], Tensor[(780), uint16], Tensor[(72), float32], Tensor[(28, 80), uint8]) */;
  %210 = @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */;
  %211 = @func_11906() /* ty=Tensor[(10, 3, 9), float64] */;
  %212 = @func_10430() /* ty=Tensor[(13, 15, 11), float32] */;
  %213 = @func_9997() /* ty=Tensor[(256), float32] */;
  %214 = @func_5078(%202) /* ty=Tensor[(5, 16, 11), float32] */;
  %215 = %209.0;
  %216 = %210.1;
  (%211, %212, %213, %214, %var_14085, %215, %var_14099, %var_14100, %var_14101, %216)
}

def @func_12423() -> Tensor[(10, 3, 9), float64] {
  %217 = @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %217.0
}

def @func_5472(%var_5464: uint16, %var_5465: Tensor[(11, 16, 3), uint16]) -> (Tensor[(11, 16, 3), bool],) {
  %218 = cast(%var_5464, dtype="bool") /* ty=bool */;
  %219 = cast(%var_5465, dtype="bool") /* ty=Tensor[(11, 16, 3), bool] */;
  %220 = less_equal(%218, %219) /* ty=Tensor[(11, 16, 3), bool] */;
  (%220,)
}

def @func_18654() -> (Tensor[(208), float64], Tensor[(256), float32]) {
  %221 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %222 = @func_14735() /* ty=(Tensor[(256), float32],) */;
  %223 = %221.2;
  %224 = %222.0;
  (%223, %224)
}

def @func_6163(%var_6127: Tensor[(16, 7, 4), bool], %var_6152: Tensor[(780), uint16], %var_6158: Tensor[(28, 80), int64]) -> (Tensor[(16, 7, 4), bool], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(72), float32], Tensor[(780), uint16], Tensor[(72), float32], Tensor[(28, 80), uint8]) {
  %225 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 7, 4), bool] */, dtype="bool") /* ty=Tensor[(16, 7, 4), bool] */;
  %226 = shape_of(%var_6127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%var_6127, dtype="bool") /* ty=Tensor[(16, 7, 4), bool] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %229 = cast(meta[relay.Constant][13] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %230 = reshape(%229, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
  %231 = @func_5882(%230) /* ty=(Tensor[(10, 3, 9), float64],) */;
  %232 = cast(meta[relay.Constant][14] /* ty=Tensor[(351), float64] */, dtype="float64") /* ty=Tensor[(351), float64] */;
  %233 = reshape(%232, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float64] */;
  %234 = cast(meta[relay.Constant][15] /* ty=Tensor[(28, 80), int64] */, dtype="int64") /* ty=Tensor[(28, 80), int64] */;
  %235 = cast(%var_6152, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %236 = cast(meta[relay.Constant][16] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %237 = reshape(%234, newshape=[16, 10, 14]) /* ty=Tensor[(16, 10, 14), int64] */;
  %238 = reshape(%235, newshape=[780]) /* ty=Tensor[(780), uint16] */;
  %239 = reshape(%236, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %240 = @func_4331(%237, %238, %239) /* ty=(Tensor[(16, 10, 14), bool], Tensor[(780), uint16], Tensor[(144), float32], Tensor[(60, ?), uint16], Tensor[(4, 6, 3), float32], Tensor[(72), float32]) */;
  %241 = cast(%var_6158, dtype="uint8") /* ty=Tensor[(28, 80), uint8] */;
  %242 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(28, 80), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %243 = cast(meta[relay.Constant][15] /* ty=Tensor[(28, 80), int64] */, dtype="uint8") /* ty=Tensor[(28, 80), uint8] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %245 = logical_and(%227, %228) /* ty=Tensor[(16, 7, 4), bool] */;
  %246 = %231.0;
  %247 = @func_5710(%233) /* ty=Tensor[(9, 13, 3), float64] */;
  %248 = %240.5;
  %249 = maximum(%243, %244) /* ty=Tensor[(28, 80), uint8] */;
  (%245, %246, meta[relay.Constant][13] /* ty=Tensor[(270), float32] */, %247, meta[relay.Constant][14] /* ty=Tensor[(351), float64] */, %248, %var_6152, meta[relay.Constant][16] /* ty=Tensor[(72), float32] */, %249)
}

def @func_10019() -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) {
  %250 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %251 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %252 = %250.0;
  %253 = %251.0;
  (%252, %253)
}

def @func_16118() -> (Tensor[(13, 15, 11), float64], Tensor[(4, 8, 8), float32]) {
  %254 = @func_12185() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(10, 3, 9), float64]) */;
  %255 = @func_10859() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %256 = %254.1;
  %257 = %255.0;
  (%256, %257)
}

def @func_15283() -> Tensor[(4, 8, 8), float64] {
  @func_15185() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_19951() -> (Tensor[(256), float32], Tensor[(256), float32]) {
  %258 = @func_9997() /* ty=Tensor[(256), float32] */;
  %259 = @func_17581() /* ty=Tensor[(256), float32] */;
  (%258, %259)
}

def @func_20186() -> (Tensor[(13, 15, 11), float64], Tensor[(351, ?), float32]) {
  %260 = @func_16501() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(9, 13, 3), float64], Tensor[(351, ?), bool], Tensor[(60), int64], uint16, Tensor[(528), uint16], Tensor[(351, 1), float32]) */;
  %261 = %260.2;
  %262 = cast(%261, dtype="float32") /* ty=Tensor[(351, ?), float32] */;
  %263 = @func_17677() /* ty=Tensor[(13, 15, 11), float64] */;
  %264 = log2(%262) /* ty=Tensor[(351, ?), float32] */;
  (%263, %264)
}

def @func_10066(%var_10044: Tensor[(2, 1, 10), float32]) -> (Tensor[(2, ?, 10), bool],) {
  %265 = cast(%var_10044, dtype="float32") /* ty=Tensor[(2, 1, 10), float32] */;
  %266 = acosh(%265) /* ty=Tensor[(2, 1, 10), float32] */;
  %267 = cast(%var_10044, dtype="bool") /* ty=Tensor[(2, 1, 10), bool] */;
  %268 = shape_of(%266, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%266, dtype="bool") /* ty=Tensor[(2, 1, 10), bool] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %271 = logical_and(%269, %270) /* ty=Tensor[(2, ?, 10), bool] */;
  (%271,)
}

def @func_21239() -> (Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32]) {
  %272 = @func_17635() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(16, ?, 6), float32], Tensor[(4, 8, 8), float64]) */;
  %273 = @func_11370() /* ty=Tensor[(4, 8, 8), float32] */;
  %274 = %272.0;
  (%273, %274)
}

def @func_19795() -> Tensor[(4, 8, 8), float32] {
  @func_9888() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_19260() -> (Tensor[(13, 15, 11), float32],) {
  %275 = @func_14014() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(256), float32]) */;
  %276 = %275.0;
  (%276,)
}

def @func_18234() -> (Tensor[(10, 3, 9), float32], Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(11, 11), int8], Tensor[(60), int64], Tensor[(49920), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 528), int32]) {
  %277 = @func_10883() /* ty=Tensor[(10, 3, 9), float64] */;
  %278 = cast(%277, dtype="float32") /* ty=Tensor[(10, 3, 9), float32] */;
  %279 = @func_14824() /* ty=(Tensor[(4, 8, 8), float64],) */;
  %280 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 11), int8] */, dtype="int8") /* ty=Tensor[(11, 11), int8] */;
  %281 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 11), int8] */, dtype="int8") /* ty=Tensor[(11, 11), int8] */;
  %282 = reshape(%280, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
  %283 = reshape(%281, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
  %284 = @func_10598(%282, %283) /* ty=(Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) */;
  %285 = %279.0;
  %286 = cast(%285, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %287 = reshape(%286, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
  %288 = @func_17543(%287) /* ty=(Tensor[(4, 8, 8), float32],) */;
  %289 = cast(meta[relay.Constant][18] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %290 = cast(meta[relay.Constant][19] /* ty=Tensor[(49920), float64] */, dtype="float64") /* ty=Tensor[(49920), float64] */;
  %291 = reshape(%289, newshape=[30, 2]) /* ty=Tensor[(30, 2), int64] */;
  %292 = reshape(%290, newshape=[13, 16, 240]) /* ty=Tensor[(13, 16, 240), float64] */;
  %293 = @func_15740(%291, %292) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(30, 2), int64], Tensor[(144), float32], Tensor[(4, 528), int8], Tensor[(13, 16, 240), float64]) */;
  %294 = %293.3;
  %295 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 528), int8] */, dtype="int32") /* ty=Tensor[(4, 528), int32] */;
  %296 = shape_of(%294, dtype="int32") /* ty=Tensor[(2), int32] */;
  %297 = cast(%294, dtype="int32") /* ty=Tensor[(4, 528), int32] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %299 = acos(%278) /* ty=Tensor[(10, 3, 9), float32] */;
  %300 = %284.1;
  %301 = @func_12472() /* ty=Tensor[(4, 8, 8), float32] */;
  %302 = @func_18157() /* ty=Tensor[(4, 8, 8), float64] */;
  %303 = %288.0;
  %304 = subtract(%297, %298) /* ty=Tensor[(4, 528), int32] */;
  (%299, %285, %300, meta[relay.Constant][17] /* ty=Tensor[(11, 11), int8] */, meta[relay.Constant][18] /* ty=Tensor[(60), int64] */, meta[relay.Constant][19] /* ty=Tensor[(49920), float64] */, %301, %302, %303, %304)
}

def @func_19670() -> (Tensor[(60), int64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) {
  %305 = @func_16647() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(256), float32], Tensor[(60), int64], Tensor[(144), float32]) */;
  %306 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %307 = %305.2;
  %308 = %306.0;
  %309 = @func_12123() /* ty=Tensor[(4, 8, 8), float64] */;
  (%307, %308, %309)
}

def @func_20049() -> (Tensor[(13, 15, 11), float64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32]) {
  %310 = @func_15308() /* ty=(Tensor[(13, 15, 11), float64],) */;
  %311 = @func_14014() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(256), float32]) */;
  %312 = %310.0;
  %313 = %311.0;
  %314 = @func_16355() /* ty=Tensor[(4, 8, 8), float32] */;
  (%312, %313, %314)
}

def @func_9997() -> Tensor[(256), float32] {
  %315 = @func_9868() /* ty=(Tensor[(256), float32],) */;
  %315.0
}

def @func_14014() -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(256), float32]) {
  %316 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %317 = @func_13770() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(9, 13, 3), float32]) */;
  %318 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %319 = %316.0;
  %320 = %317.0;
  %321 = %318.0;
  (%319, %320, %321)
}

def @func_15084(%var_15022: float64, %var_15050: Tensor[(528), uint16], %var_15054: Tensor[(2240), int64]) -> (Tensor[(10, 3, 9), float64], float64, Tensor[(48), float64], Tensor[(10, 3, 9), float64], Tensor[(256), float32], Tensor[(4, 8, 8), float64], Tensor[(130, 6), uint16], Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(528), uint16], Tensor[(780), uint16], Tensor[(448), bool], Tensor[(2240), int64], Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(121), bool]) {
  %322 = @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */;
  %323 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %324 = @func_14877() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float64], Tensor[(9, 13, 3), float32]) */;
  %325 = @func_10569() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(528), uint16], Tensor[(130, 6), uint16], Tensor[(256), float32], Tensor[(528, 1), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %326 = @func_10832() /* ty=(Tensor[(256), float32],) */;
  %327 = cast(%var_15022, dtype="uint16") /* ty=uint16 */;
  %328 = cast(%var_15050, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %329 = reshape(%327, newshape=[]) /* ty=uint16 */;
  %330 = reshape(%328, newshape=[528]) /* ty=Tensor[(528), uint16] */;
  %331 = @func_9133(%329, %330) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(60), int64], Tensor[(26), float32]) */;
  %332 = cast(meta[relay.Constant][22] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %333 = %325.4;
  %334 = cast(%333, dtype="uint16") /* ty=Tensor[(130, 6), uint16] */;
  %335 = cast(%var_15054, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %336 = reshape(%332, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
  %337 = reshape(%334, newshape=[780]) /* ty=Tensor[(780), uint16] */;
  %338 = reshape(%335, newshape=[28, 80]) /* ty=Tensor[(28, 80), int64] */;
  %339 = @func_6163(%336, %337, %338) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(72), float32], Tensor[(780), uint16], Tensor[(72), float32], Tensor[(28, 80), uint8]) */;
  %340 = @func_14877() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float64], Tensor[(9, 13, 3), float32]) */;
  %341 = cast(%var_15022, dtype="float64") /* ty=float64 */;
  %342 = cast(meta[relay.Constant][21] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %343 = cast(meta[relay.Constant][23] /* ty=Tensor[(121), int8] */, dtype="int8") /* ty=Tensor[(121), int8] */;
  %344 = reshape(%341, newshape=[]) /* ty=float64 */;
  %345 = reshape(%342, newshape=[1, 12, 4]) /* ty=Tensor[(1, 12, 4), float64] */;
  %346 = reshape(%343, newshape=[121]) /* ty=Tensor[(121), int8] */;
  %347 = @func_12624(%344, %345, %346) /* ty=(Tensor[(1, 12, 4), float64], Tensor[(?, 11, 11), bool], Tensor[(121), int8]) */;
  %348 = %347.2;
  %349 = cast(%348, dtype="bool") /* ty=Tensor[(121), bool] */;
  %350 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(121), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %351 = cast(meta[relay.Constant][23] /* ty=Tensor[(121), int8] */, dtype="bool") /* ty=Tensor[(121), bool] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?), bool] */;
  %353 = %322.2;
  %354 = @func_14469() /* ty=Tensor[(10, 3, 9), float64] */;
  %355 = %323.0;
  %356 = %324.1;
  %357 = @func_11370() /* ty=Tensor[(4, 8, 8), float32] */;
  %358 = %326.0;
  %359 = %331.0;
  %360 = %339.6;
  %361 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
  %362 = %340.0;
  %363 = not_equal(%351, %352) /* ty=Tensor[(121), bool] */;
  (%353, %var_15022, meta[relay.Constant][21] /* ty=Tensor[(48), float64] */, %354, %355, %356, %333, %357, %358, %359, %var_15050, %360, meta[relay.Constant][22] /* ty=Tensor[(448), bool] */, %var_15054, %361, %362, %363)
}

def @func_10159(%var_10138: Tensor[(528), uint16], %var_10153: Tensor[(5, 156), uint16], %var_10154: Tensor[(1, 60), int64]) -> (Tensor[(4, 8, 8), float32], Tensor[(4, 6, 3), float32], Tensor[(528), uint16], Tensor[(13, 15, 11), float32], Tensor[(144), float32], Tensor[(5, 156), uint16], Tensor[(1, 60), int64]) {
  %364 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %365 = cast(%var_10138, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %366 = reshape(%365, newshape=[2, 264]) /* ty=Tensor[(2, 264), uint16] */;
  %367 = @func_9290(%366) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(4, 6, 3), float32], Tensor[(11, 16, 3), bool], uint16, Tensor[(2, 264), uint16], Tensor[(144), float32], Tensor[(144), float32], Tensor[(1, 72), float64]) */;
  %368 = cast(%var_10153, dtype="uint16") /* ty=Tensor[(5, 156), uint16] */;
  %369 = cast(%var_10154, dtype="int64") /* ty=Tensor[(1, 60), int64] */;
  %370 = reshape(%368, newshape=[10, 13, 6]) /* ty=Tensor[(10, 13, 6), uint16] */;
  %371 = reshape(%369, newshape=[60, 1]) /* ty=Tensor[(60, 1), int64] */;
  %372 = @func_1894(%370, %371) /* ty=(Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) */;
  %373 = %364.0;
  %374 = %367.1;
  %375 = @func_9160() /* ty=Tensor[(13, 15, 11), float32] */;
  %376 = %372.3;
  (%373, %374, %var_10138, %375, %376, %var_10153, %var_10154)
}

def @func_11536() -> Tensor[(13, 15, 11), float32] {
  @func_10430() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_14469() -> Tensor[(10, 3, 9), float64] {
  %377 = @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */;
  %377.2
}

def @func_7149(%var_7067: Tensor[(7, 16, 15), float64], %var_7098: Tensor[(1, 195), float64], %var_7109: Tensor[(4), float32]) -> (Tensor[(7, 16, 15), bool], Tensor[(144), float32], Tensor[(5, 13, 3), float64], Tensor[(1, 195), float64], Tensor[(8, 15, 14), float64], Tensor[(4, 7, 11), bool], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(1, 4), float32]) {
  %378 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 16, 15), float64] */, dtype="bool") /* ty=Tensor[(7, 16, 15), bool] */;
  %379 = shape_of(%var_7067, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%var_7067, dtype="bool") /* ty=Tensor[(7, 16, 15), bool] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %382 = cast(%var_7067, dtype="float64") /* ty=Tensor[(7, 16, 15), float64] */;
  %383 = reshape(%382, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), float64] */;
  %384 = @func_3586(%383) /* ty=(Tensor[(8, 15, 14), float64], Tensor[(6, 2, 12), float32], Tensor[(144), float32]) */;
  %385 = cast(%var_7098, dtype="float64") /* ty=Tensor[(1, 195), float64] */;
  %386 = reshape(%385, newshape=[5, 13, 3]) /* ty=Tensor[(5, 13, 3), float64] */;
  %387 = @func_3156(%386) /* ty=(Tensor[(5, 13, 3), float64],) */;
  %388 = cast(%var_7067, dtype="float64") /* ty=Tensor[(7, 16, 15), float64] */;
  %389 = reshape(%388, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), float64] */;
  %390 = @func_3586(%389) /* ty=(Tensor[(8, 15, 14), float64], Tensor[(6, 2, 12), float32], Tensor[(144), float32]) */;
  %391 = cast(meta[relay.Constant][25] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %392 = cast(meta[relay.Constant][25] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %393 = cast(%var_7109, dtype="float32") /* ty=Tensor[(4), float32] */;
  %394 = reshape(%391, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %395 = reshape(%392, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %396 = reshape(%393, newshape=[1, 4]) /* ty=Tensor[(1, 4), float32] */;
  %397 = @func_4821(%394, %395, %396) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */;
  %398 = cast(meta[relay.Constant][26] /* ty=Tensor[(351), float64] */, dtype="float64") /* ty=Tensor[(351), float64] */;
  %399 = reshape(%398, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float64] */;
  %400 = cast(meta[relay.Constant][27] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %401 = %384.2;
  %402 = cast(%401, dtype="float32") /* ty=Tensor[(144), float32] */;
  %403 = reshape(%400, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
  %404 = reshape(%402, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %405 = @func_889(%403, %404) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
  %406 = cast(meta[relay.Constant][25] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %407 = %397.0;
  %408 = cast(%407, dtype="uint8") /* ty=Tensor[(4, 7, 11), uint8] */;
  %409 = cast(%var_7109, dtype="float32") /* ty=Tensor[(4), float32] */;
  %410 = reshape(%406, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %411 = reshape(%408, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %412 = reshape(%409, newshape=[1, 4]) /* ty=Tensor[(1, 4), float32] */;
  %413 = @func_4821(%410, %411, %412) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */;
  %414 = equal(%380, %381) /* ty=Tensor[(7, 16, 15), bool] */;
  %415 = %387.0;
  %416 = %390.0;
  %417 = @func_5710(%399) /* ty=Tensor[(9, 13, 3), float64] */;
  %418 = %405.1;
  %419 = %413.2;
  (%414, %401, %415, %var_7098, %416, %407, meta[relay.Constant][25] /* ty=Tensor[(308), uint8] */, %var_7109, %417, meta[relay.Constant][26] /* ty=Tensor[(351), float64] */, %418, meta[relay.Constant][27] /* ty=Tensor[(60), int64] */, %419)
}

def @func_16151() -> (Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(121, 1), int8]) {
  %420 = @func_9868() /* ty=(Tensor[(256), float32],) */;
  %421 = cast(meta[relay.Constant][28] /* ty=Tensor[(121, 1), int8] */, dtype="int8") /* ty=Tensor[(121, 1), int8] */;
  %422 = cast(meta[relay.Constant][28] /* ty=Tensor[(121, 1), int8] */, dtype="int8") /* ty=Tensor[(121, 1), int8] */;
  %423 = reshape(%421, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
  %424 = reshape(%422, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
  %425 = @func_10598(%423, %424) /* ty=(Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) */;
  %426 = %420.0;
  %427 = %425.1;
  (%426, %427, meta[relay.Constant][28] /* ty=Tensor[(121, 1), int8] */)
}

def @func_16775() -> (Tensor[(10, 3, 9), float64],) {
  %428 = @func_10883() /* ty=Tensor[(10, 3, 9), float64] */;
  (%428,)
}

def @func_10430() -> Tensor[(13, 15, 11), float32] {
  %429 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %429.0
}

def @func_11838() -> Tensor[(4, 8, 8), float32] {
  @func_9888() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_14735() -> (Tensor[(256), float32],) {
  %430 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %431 = %430.0;
  (%431,)
}

def @func_16626() -> (Tensor[(4, 8, 8), float64],) {
  %432 = @func_12699() /* ty=Tensor[(4, 8, 8), float64] */;
  (%432,)
}

def @func_11102() -> (Tensor[(208), float64], Tensor[(256), float32], Tensor[(4), float32], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(1, 4), float32]) {
  %433 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %434 = @func_9868() /* ty=(Tensor[(256), float32],) */;
  %435 = cast(meta[relay.Constant][29] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %436 = cast(meta[relay.Constant][30] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %437 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 4), float32] */, dtype="float32") /* ty=Tensor[(1, 4), float32] */;
  %438 = reshape(%435, newshape=[7, 16, 15]) /* ty=Tensor[(7, 16, 15), float64] */;
  %439 = reshape(%436, newshape=[1, 195]) /* ty=Tensor[(1, 195), float64] */;
  %440 = reshape(%437, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %441 = @func_7149(%438, %439, %440) /* ty=(Tensor[(7, 16, 15), bool], Tensor[(144), float32], Tensor[(5, 13, 3), float64], Tensor[(1, 195), float64], Tensor[(8, 15, 14), float64], Tensor[(4, 7, 11), bool], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(1, 4), float32]) */;
  %442 = %433.2;
  %443 = %434.0;
  %444 = %441.7;
  (%442, %443, %444, meta[relay.Constant][29] /* ty=Tensor[(1680), float64] */, meta[relay.Constant][30] /* ty=Tensor[(195), float64] */, meta[relay.Constant][31] /* ty=Tensor[(1, 4), float32] */)
}

def @func_20233() -> (Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(?, 11, 11), bool], Tensor[(121), int8]) {
  %445 = cast(meta[relay.Constant][32] /* ty=Tensor[(121), int8] */, dtype="int8") /* ty=Tensor[(121), int8] */;
  %446 = cast(meta[relay.Constant][32] /* ty=Tensor[(121), int8] */, dtype="int8") /* ty=Tensor[(121), int8] */;
  %447 = reshape(%445, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
  %448 = reshape(%446, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
  %449 = @func_10598(%447, %448) /* ty=(Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) */;
  %450 = @func_11874() /* ty=Tensor[(4, 8, 8), float32] */;
  %451 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
  %452 = %449.0;
  (%450, %451, %452, meta[relay.Constant][32] /* ty=Tensor[(121), int8] */)
}

def @func_889(%var_859: Tensor[(10, 3, 2), int64], %var_874: Tensor[(144), float32]) -> (Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) {
  %453 = cast(%var_874, dtype="float32") /* ty=Tensor[(144), float32] */;
  %454 = reshape(%453, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float32] */;
  %455 = @func_154(%454) /* ty=(Tensor[(6, 2, 12), float32],) */;
  %456 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 3, 2), int64] */, dtype="int64") /* ty=Tensor[(10, 3, 2), int64] */;
  %457 = shape_of(%var_859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%var_859, dtype="int64") /* ty=Tensor[(10, 3, 2), int64] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %460 = minimum(%458, %459) /* ty=Tensor[(10, 3, 2), int64] */;
  %461 = cast(%460, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
  %462 = log(%461) /* ty=Tensor[(10, 3, 2), float32] */;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
  %464 = %455.0;
  %465 = acos(%463) /* ty=Tensor[(10, 3, 2), float32] */;
  (%464, %var_874, %465)
}

def @func_11869() -> Tensor[(4, 8, 8), float32] {
  %466 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %466.0
}

def @func_9104() -> (Tensor[(256), float32],) {
  %467 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %468 = %467.2;
  (%468,)
}

def @func_5882(%var_5865: Tensor[(10, 3, 9), float32]) -> (Tensor[(10, 3, 9), float64],) {
  %469 = cast(%var_5865, dtype="float32") /* ty=Tensor[(10, 3, 9), float32] */;
  %470 = exp(%469) /* ty=Tensor[(10, 3, 9), float32] */;
  %471 = cast(%var_5865, dtype="float64") /* ty=Tensor[(10, 3, 9), float64] */;
  %472 = shape_of(%470, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%470, dtype="float64") /* ty=Tensor[(10, 3, 9), float64] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %475 = divide(%473, %474) /* ty=Tensor[(10, 3, 9), float64] */;
  (%475,)
}

def @func_3156(%var_3152: Tensor[(5, 13, 3), float64]) -> (Tensor[(5, 13, 3), float64],) {
  %476 = cast(%var_3152, dtype="float64") /* ty=Tensor[(5, 13, 3), float64] */;
  %477 = tan(%476) /* ty=Tensor[(5, 13, 3), float64] */;
  (%477,)
}

def @func_13522() -> Tensor[(10, 3, 9), float64] {
  %478 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %478.0
}

def @func_8902(%var_8892: Tensor[(13, 16, 1), float64]) -> Tensor[(13, 16, 1), float64] {
  %479 = cast(%var_8892, dtype="float64") /* ty=Tensor[(13, 16, 1), float64] */;
  sigmoid(%479) /* ty=Tensor[(13, 16, 1), float64] */
}

def @func_14156() -> Tensor[(13, 16, 1), float64] {
  @func_13615() /* ty=Tensor[(13, 16, 1), float64] */
}

def @func_11976() -> (Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) {
  %480 = cast(meta[relay.Constant][34] /* ty=Tensor[(351, 1), float64] */, dtype="float64") /* ty=Tensor[(351, 1), float64] */;
  %481 = reshape(%480, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float64] */;
  %482 = @func_11869() /* ty=Tensor[(4, 8, 8), float32] */;
  %483 = @func_5710(%481) /* ty=Tensor[(9, 13, 3), float64] */;
  (%482, %483, meta[relay.Constant][34] /* ty=Tensor[(351, 1), float64] */)
}

def @func_17677() -> Tensor[(13, 15, 11), float64] {
  %484 = @func_17138() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) */;
  %485 = %484.0;
  %486 = cast(%485, dtype="float64") /* ty=Tensor[(13, 15, 11), float64] */;
  acos(%486) /* ty=Tensor[(13, 15, 11), float64] */
}

def @func_19281() -> (Tensor[(4, 8, 8), float32],) {
  %487 = @func_11976() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) */;
  %488 = %487.0;
  (%488,)
}

def @func_20689() -> (Tensor[(13, 15, 11), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(4, 8, 8), float32]) {
  %489 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %490 = cast(meta[relay.Constant][35] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %491 = reshape(%490, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %492 = @func_9943(%491) /* ty=(Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) */;
  %493 = @func_16118() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(4, 8, 8), float32]) */;
  %494 = %489.0;
  %495 = %492.3;
  %496 = %493.1;
  (%494, %495, meta[relay.Constant][35] /* ty=Tensor[(60), int64] */, %496)
}

def @func_3586(%var_3554: Tensor[(8, 15, 14), float64]) -> (Tensor[(8, 15, 14), float64], Tensor[(6, 2, 12), float32], Tensor[(144), float32]) {
  %497 = cast(%var_3554, dtype="float64") /* ty=Tensor[(8, 15, 14), float64] */;
  %498 = exp(%497) /* ty=Tensor[(8, 15, 14), float64] */;
  %499 = cast(%498, dtype="float64") /* ty=Tensor[(8, 15, 14), float64] */;
  %500 = cast(meta[relay.Constant][36] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %501 = reshape(%500, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float32] */;
  %502 = @func_154(%501) /* ty=(Tensor[(6, 2, 12), float32],) */;
  %503 = sin(%499) /* ty=Tensor[(8, 15, 14), float64] */;
  %504 = %502.0;
  (%503, %504, meta[relay.Constant][36] /* ty=Tensor[(144), float32] */)
}

def @func_13391(%var_13327: Tensor[(308), uint8], %var_13340: Tensor[(60), int64]) -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(4, 7, 11), uint16], Tensor[(13, 15, 11), float32]) {
  %505 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %506 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %507 = cast(%var_13340, dtype="int64") /* ty=Tensor[(60), int64] */;
  %508 = reshape(%507, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %509 = @func_9943(%508) /* ty=(Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) */;
  %510 = cast(%var_13327, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %511 = cast(%var_13327, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %512 = cast(meta[relay.Constant][37] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %513 = reshape(%510, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %514 = reshape(%511, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %515 = reshape(%512, newshape=[1, 4]) /* ty=Tensor[(1, 4), float32] */;
  %516 = @func_4821(%513, %514, %515) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */;
  %517 = %516.0;
  %518 = cast(%517, dtype="float32") /* ty=Tensor[(4, 7, 11), float32] */;
  %519 = tan(%518) /* ty=Tensor[(4, 7, 11), float32] */;
  %520 = cast(%517, dtype="uint16") /* ty=Tensor[(4, 7, 11), uint16] */;
  %521 = shape_of(%519, dtype="int32") /* ty=Tensor[(3), int32] */;
  %522 = cast(%519, dtype="uint16") /* ty=Tensor[(4, 7, 11), uint16] */;
  %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %524 = @func_13021() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %525 = %505.0;
  %526 = %506.0;
  %527 = %509.3;
  %528 = add(%522, %523) /* ty=Tensor[(4, 7, 11), uint16] */;
  %529 = %524.0;
  (%525, %526, %var_13327, meta[relay.Constant][37] /* ty=Tensor[(4), float32] */, %527, %var_13340, %528, %529)
}

def @func_20857(%var_20841: Tensor[(24), float64]) -> (Tensor[(11, 9, 7), float64], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(24), float64], Tensor[(256), float32], Tensor[(4, 6, 3), float32], Tensor[(72), float32]) {
  %530 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
  %531 = @func_17138() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) */;
  %532 = cast(%var_20841, dtype="float64") /* ty=Tensor[(24), float64] */;
  %533 = reshape(%532, newshape=[24]) /* ty=Tensor[(24), float64] */;
  %534 = @func_12582(%533) /* ty=(Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(1, 2, 12), float64], Tensor[(24), float64], Tensor[(13, 16, 1), float64], Tensor[(208), float64], Tensor[(13, 16, 1), float64], Tensor[(256), float32]) */;
  %535 = @func_15887() /* ty=(Tensor[(256), float32],) */;
  %536 = cast(meta[relay.Constant][39] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %537 = cast(meta[relay.Constant][39] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %538 = reshape(%536, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %539 = reshape(%537, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %540 = cos(%530) /* ty=Tensor[(11, 9, 7), float64] */;
  %541 = %531.2;
  %542 = %534.0;
  %543 = %535.0;
  %544 = @func_1277(%538, %539) /* ty=Tensor[(4, 6, 3), float32] */;
  (%540, %541, %542, %var_20841, %543, %544, meta[relay.Constant][39] /* ty=Tensor[(72), float32] */)
}

def @func_18074() -> (Tensor[(4, 8, 8), float32],) {
  %545 = @func_17715() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float32]) */;
  %546 = %545.2;
  (%546,)
}

def @func_18362(%var_18356: Tensor[(880), float32], %var_18359: Tensor[(2240), int64]) -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(880), float32], Tensor[(448), bool], Tensor[(780), uint16], Tensor[(2240), int64]) {
  %547 = cast(%var_18356, dtype="float32") /* ty=Tensor[(880), float32] */;
  %548 = cast(meta[relay.Constant][40] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %549 = cast(meta[relay.Constant][41] /* ty=Tensor[(780), uint16] */, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %550 = cast(%var_18359, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %551 = reshape(%547, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %552 = reshape(%548, newshape=[112, 4]) /* ty=Tensor[(112, 4), bool] */;
  %553 = reshape(%549, newshape=[780]) /* ty=Tensor[(780), uint16] */;
  %554 = reshape(%550, newshape=[2, 1120]) /* ty=Tensor[(2, 1120), int64] */;
  %555 = @func_14112(%551, %552, %553, %554) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32], Tensor[(256), float32], Tensor[(5, 16, 11), float32], Tensor[(880), float32], Tensor[(16, 7, 4), bool], Tensor[(112, 4), bool], Tensor[(780), uint16], Tensor[(2, 1120), int64], Tensor[(13, 15, 11), float32]) */;
  %556 = @func_9160() /* ty=Tensor[(13, 15, 11), float32] */;
  %557 = %555.9;
  (%556, %557, %var_18356, meta[relay.Constant][40] /* ty=Tensor[(448), bool] */, meta[relay.Constant][41] /* ty=Tensor[(780), uint16] */, %var_18359)
}

def @func_20979() -> Tensor[(256), float32] {
  @func_13650() /* ty=Tensor[(256), float32] */
}

def @func_19544() -> Tensor[(256), float32] {
  %558 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %558.2
}

def @func_21099(%var_21090: Tensor[(11, 12, 14), uint64]) -> (Tensor[(11, 12, 14), uint64], Tensor[(256), float32]) {
  %559 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 12, 14), uint64] */, dtype="uint64") /* ty=Tensor[(11, 12, 14), uint64] */;
  %560 = shape_of(%var_21090, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%var_21090, dtype="uint64") /* ty=Tensor[(11, 12, 14), uint64] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %563 = bitwise_or(%561, %562) /* ty=Tensor[(11, 12, 14), uint64] */;
  %564 = @func_19544() /* ty=Tensor[(256), float32] */;
  (%563, %564)
}

def @func_11513(%var_11501: Tensor[(270), float32], %var_11507: Tensor[(16, 3, 5), float64]) -> (Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(16, 3, 5), bool]) {
  %565 = cast(%var_11501, dtype="float32") /* ty=Tensor[(270), float32] */;
  %566 = reshape(%565, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
  %567 = @func_5882(%566) /* ty=(Tensor[(10, 3, 9), float64],) */;
  %568 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 5), float64] */;
  %569 = asinh(%568) /* ty=Tensor[(16, 3, 5), float64] */;
  %570 = cast(%var_11507, dtype="bool") /* ty=Tensor[(16, 3, 5), bool] */;
  %571 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %572 = cast(%569, dtype="bool") /* ty=Tensor[(16, 3, 5), bool] */;
  %573 = dyn.reshape(%570, %571, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %574 = %567.0;
  %575 = equal(%572, %573) /* ty=Tensor[(16, 3, 5), bool] */;
  (%574, %var_11501, %575)
}

def @func_22030() -> (Tensor[(13, 16, 1), float64],) {
  %576 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %577 = %576.1;
  (%577,)
}

def @func_9290(%var_9230: Tensor[(2, 264), uint16]) -> (Tensor[(10, 3, 9), float64], Tensor[(4, 6, 3), float32], Tensor[(11, 16, 3), bool], uint16, Tensor[(2, 264), uint16], Tensor[(144), float32], Tensor[(144), float32], Tensor[(1, 72), float64]) {
  %578 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %579 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 72), float32] */, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %580 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 72), float32] */, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %581 = reshape(%579, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %582 = reshape(%580, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %583 = cast(meta[relay.Constant][45] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %584 = cast(%var_9230, dtype="uint16") /* ty=Tensor[(2, 264), uint16] */;
  %585 = reshape(%583, newshape=[]) /* ty=uint16 */;
  %586 = reshape(%584, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), uint16] */;
  %587 = @func_5472(%585, %586) /* ty=(Tensor[(11, 16, 3), bool],) */;
  %588 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 72), float32] */, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %589 = cast(meta[relay.Constant][46] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %590 = reshape(%588, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %591 = reshape(%589, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %592 = @func_2181(%590, %591) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(144), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(10, 3, 2), float32], Tensor[(26), float32], Tensor[(10, 12, 3), bool]) */;
  %593 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 72), float32] */, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %594 = %578.1;
  %595 = @func_1277(%581, %582) /* ty=Tensor[(4, 6, 3), float32] */;
  %596 = %587.0;
  %597 = %592.2;
  %598 = cosh(%593) /* ty=Tensor[(1, 72), float64] */;
  (%594, %595, %596, meta[relay.Constant][45] /* ty=uint16 */, %var_9230, %597, meta[relay.Constant][46] /* ty=Tensor[(144), float32] */, %598)
}

def @func_20783() -> Tensor[(256), float32] {
  %599 = @func_17138() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) */;
  %599.2
}

def @func_9133(%var_9126: uint16, %var_9127: Tensor[(528), uint16]) -> (Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(60), int64], Tensor[(26), float32]) {
  %600 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %601 = cast(%var_9126, dtype="uint16") /* ty=uint16 */;
  %602 = cast(%var_9127, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %603 = reshape(%601, newshape=[]) /* ty=uint16 */;
  %604 = reshape(%602, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), uint16] */;
  %605 = @func_5472(%603, %604) /* ty=(Tensor[(11, 16, 3), bool],) */;
  %606 = cast(meta[relay.Constant][47] /* ty=Tensor[(26), float32] */, dtype="float32") /* ty=Tensor[(26), float32] */;
  %607 = reshape(%606, newshape=[13, 1, 2]) /* ty=Tensor[(13, 1, 2), float32] */;
  %608 = @func_1768(%607) /* ty=(Tensor[(13, 1, 2), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(1, 144), float32]) */;
  %609 = %600.1;
  %610 = %605.0;
  %611 = %608.2;
  (%609, %610, %var_9126, %var_9127, %611, meta[relay.Constant][47] /* ty=Tensor[(26), float32] */)
}

def @func_19059() -> (Tensor[(13, 15, 11), float32],) {
  %612 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %613 = %612.0;
  (%613,)
}

def @func_21860(%var_21813: float64, %var_21847: Tensor[(3), float64]) -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], float64, Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64], Tensor[(3), float64], Tensor[(208), float64]) {
  %614 = @func_21506() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %615 = cast(%var_21813, dtype="float64") /* ty=float64 */;
  %616 = reshape(%615, newshape=[]) /* ty=float64 */;
  %617 = @func_17963(%616) /* ty=(Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(1, 2, 12), float64], Tensor[(24), float64], Tensor[(130, 6), uint16], float64, Tensor[(528), uint16], Tensor[(2240), int64]) */;
  %618 = @func_11301() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %619 = cast(%var_21847, dtype="float64") /* ty=Tensor[(3), float64] */;
  %620 = reshape(%619, newshape=[3, 1]) /* ty=Tensor[(3, 1), float64] */;
  %621 = @func_15119(%620) /* ty=(Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64], Tensor[(3, 1), float64]) */;
  %622 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %623 = %614.0;
  %624 = %617.1;
  %625 = %618.0;
  %626 = %621.1;
  %627 = %622.2;
  (%623, %624, %var_21813, %625, %626, %var_21847, %627)
}

def @func_18157() -> Tensor[(4, 8, 8), float64] {
  %628 = @func_15619() /* ty=(Tensor[(4, 8, 8), float64],) */;
  %628.0
}

def @func_17009() -> (Tensor[(4, 8, 8), float32], Tensor[(351), float64]) {
  %629 = @func_14824() /* ty=(Tensor[(4, 8, 8), float64],) */;
  %630 = %629.0;
  %631 = cast(%630, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %632 = @func_10980() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(351), float64], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(4), float32], Tensor[(121, 1), int8], Tensor[(?, 11, 11), float64]) */;
  %633 = log(%631) /* ty=Tensor[(4, 8, 8), float32] */;
  %634 = %632.3;
  (%633, %634)
}

def @func_12604() -> (Tensor[(4, 8, 8), float32],) {
  %635 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %636 = %635.0;
  (%636,)
}

def @func_10769(%var_10766: uint16) -> (Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16]) {
  %637 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %638 = @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %639 = cast(%var_10766, dtype="uint16") /* ty=uint16 */;
  %640 = cast(meta[relay.Constant][48] /* ty=Tensor[(528), uint16] */, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %641 = reshape(%639, newshape=[]) /* ty=uint16 */;
  %642 = reshape(%640, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), uint16] */;
  %643 = @func_5472(%641, %642) /* ty=(Tensor[(11, 16, 3), bool],) */;
  %644 = %637.0;
  %645 = %638.0;
  %646 = %643.0;
  (%644, %645, %646, %var_10766, meta[relay.Constant][48] /* ty=Tensor[(528), uint16] */)
}

def @func_12773() -> Tensor[(13, 15, 11), float32] {
  %647 = @func_11301() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %647.0
}

def @func_16020(%var_15984: Tensor[(9, 3, 10), float64]) -> (Tensor[(9, 3, 10), float64], Tensor[(13, 16, 1), float64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) {
  %648 = cast(%var_15984, dtype="float64") /* ty=Tensor[(9, 3, 10), float64] */;
  %649 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %650 = exp(%648) /* ty=Tensor[(9, 3, 10), float64] */;
  %651 = @func_13615() /* ty=Tensor[(13, 16, 1), float64] */;
  %652 = %649.0;
  %653 = @func_12123() /* ty=Tensor[(4, 8, 8), float64] */;
  (%650, %651, %652, %653)
}

def @func_17715() -> (Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float32]) {
  %654 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
  %655 = @func_13522() /* ty=Tensor[(10, 3, 9), float64] */;
  %656 = @func_11869() /* ty=Tensor[(4, 8, 8), float32] */;
  (%654, %655, %656)
}

def @func_18456(%var_18443: Tensor[(12, 72), float32]) -> (Tensor[(4, 8, 8), float64], Tensor[(7, 44), uint8], Tensor[(4), float32], Tensor[(256), float32], Tensor[(12, 72), bool], Tensor[(4, 8, 8), float32]) {
  %657 = @func_18234() /* ty=(Tensor[(10, 3, 9), float32], Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(11, 11), int8], Tensor[(60), int64], Tensor[(49920), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 528), int32]) */;
  %658 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 44), uint8] */, dtype="uint8") /* ty=Tensor[(7, 44), uint8] */;
  %659 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 44), uint8] */, dtype="uint8") /* ty=Tensor[(7, 44), uint8] */;
  %660 = cast(meta[relay.Constant][50] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %661 = reshape(%658, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %662 = reshape(%659, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %663 = reshape(%660, newshape=[1, 4]) /* ty=Tensor[(1, 4), float32] */;
  %664 = @func_4821(%661, %662, %663) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */;
  %665 = %664.3;
  %666 = cast(%665, dtype="bool") /* ty=Tensor[(1, 72), bool] */;
  %667 = cast(%var_18443, dtype="bool") /* ty=Tensor[(12, 72), bool] */;
  %668 = %657.1;
  %669 = @func_13650() /* ty=Tensor[(256), float32] */;
  %670 = less_equal(%666, %667) /* ty=Tensor[(12, 72), bool] */;
  %671 = @func_11370() /* ty=Tensor[(4, 8, 8), float32] */;
  (%668, meta[relay.Constant][49] /* ty=Tensor[(7, 44), uint8] */, meta[relay.Constant][50] /* ty=Tensor[(4), float32] */, %669, %670, %671)
}

def @func_14428() -> (Tensor[(13, 15, 11), float32],) {
  %672 = @func_10430() /* ty=Tensor[(13, 15, 11), float32] */;
  (%672,)
}

def @func_21655() -> (Tensor[(4, 8, 8), float32], Tensor[(144), float32], Tensor[(72, 26), bool], Tensor[(4, 8, 8), float64]) {
  %673 = @func_21455() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32]) */;
  %674 = cast(meta[relay.Constant][52] /* ty=Tensor[(72, 1), float32] */, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
  %675 = cast(meta[relay.Constant][51] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %676 = reshape(%674, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %677 = reshape(%675, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %678 = @func_2181(%676, %677) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(144), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(10, 3, 2), float32], Tensor[(26), float32], Tensor[(10, 12, 3), bool]) */;
  %679 = %678.6;
  %680 = cast(meta[relay.Constant][52] /* ty=Tensor[(72, 1), float32] */, dtype="bool") /* ty=Tensor[(72, 1), bool] */;
  %681 = cast(%679, dtype="bool") /* ty=Tensor[(26), bool] */;
  %682 = less(%680, %681) /* ty=Tensor[(72, 26), bool] */;
  %683 = cast(meta[relay.Constant][52] /* ty=Tensor[(72, 1), float32] */, dtype="bool") /* ty=Tensor[(72, 1), bool] */;
  %684 = cast(%682, dtype="bool") /* ty=Tensor[(72, 26), bool] */;
  %685 = %673.2;
  %686 = less_equal(%683, %684) /* ty=Tensor[(72, 26), bool] */;
  %687 = @func_21277() /* ty=Tensor[(4, 8, 8), float64] */;
  (%685, meta[relay.Constant][51] /* ty=Tensor[(144), float32] */, %686, %687)
}

def @func_20551(%var_20519: Tensor[(6240, 8), float64], %var_20531: Tensor[(4, 528), int8]) -> (Tensor[(1680), float64], Tensor[(60), int64], Tensor[(6240, 8), float64], Tensor[(4, 528), bool]) {
  %688 = @func_11102() /* ty=(Tensor[(208), float64], Tensor[(256), float32], Tensor[(4), float32], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(1, 4), float32]) */;
  %689 = cast(meta[relay.Constant][53] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %690 = cast(%var_20519, dtype="float64") /* ty=Tensor[(6240, 8), float64] */;
  %691 = reshape(%689, newshape=[30, 2]) /* ty=Tensor[(30, 2), int64] */;
  %692 = reshape(%690, newshape=[13, 16, 240]) /* ty=Tensor[(13, 16, 240), float64] */;
  %693 = @func_15740(%691, %692) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(30, 2), int64], Tensor[(144), float32], Tensor[(4, 528), int8], Tensor[(13, 16, 240), float64]) */;
  %694 = %693.3;
  %695 = cast(%var_20531, dtype="int8") /* ty=Tensor[(4, 528), int8] */;
  %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(2), int32] */;
  %697 = cast(%694, dtype="int8") /* ty=Tensor[(4, 528), int8] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %699 = bitwise_and(%697, %698) /* ty=Tensor[(4, 528), int8] */;
  %700 = cast(%694, dtype="bool") /* ty=Tensor[(4, 528), bool] */;
  %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(2), int32] */;
  %702 = cast(%699, dtype="bool") /* ty=Tensor[(4, 528), bool] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %704 = %688.3;
  %705 = greater_equal(%702, %703) /* ty=Tensor[(4, 528), bool] */;
  (%704, meta[relay.Constant][53] /* ty=Tensor[(60), int64] */, %var_20519, %705)
}

def @func_18898() -> Tensor[(256), float32] {
  %706 = @func_10832() /* ty=(Tensor[(256), float32],) */;
  %706.0
}

def @func_16501() -> (Tensor[(10, 3, 9), float64], Tensor[(9, 13, 3), float64], Tensor[(351, ?), bool], Tensor[(60), int64], uint16, Tensor[(528), uint16], Tensor[(351, 1), float32]) {
  %707 = @func_11976() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) */;
  %708 = @func_11976() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) */;
  %709 = %708.2;
  %710 = cast(%709, dtype="float32") /* ty=Tensor[(351, 1), float32] */;
  %711 = atanh(%710) /* ty=Tensor[(351, 1), float32] */;
  %712 = cast(%709, dtype="bool") /* ty=Tensor[(351, 1), bool] */;
  %713 = shape_of(%711, dtype="int32") /* ty=Tensor[(2), int32] */;
  %714 = cast(%711, dtype="bool") /* ty=Tensor[(351, 1), bool] */;
  %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %716 = cast(meta[relay.Constant][54] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %717 = cast(meta[relay.Constant][55] /* ty=Tensor[(528), uint16] */, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %718 = reshape(%716, newshape=[]) /* ty=uint16 */;
  %719 = reshape(%717, newshape=[528]) /* ty=Tensor[(528), uint16] */;
  %720 = @func_9133(%718, %719) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(60), int64], Tensor[(26), float32]) */;
  %721 = cast(%711, dtype="float32") /* ty=Tensor[(351, 1), float32] */;
  %722 = @func_12423() /* ty=Tensor[(10, 3, 9), float64] */;
  %723 = %707.1;
  %724 = equal(%714, %715) /* ty=Tensor[(351, ?), bool] */;
  %725 = %720.4;
  %726 = sin(%721) /* ty=Tensor[(351, 1), float32] */;
  (%722, %723, %724, %725, meta[relay.Constant][54] /* ty=uint16 */, meta[relay.Constant][55] /* ty=Tensor[(528), uint16] */, %726)
}

def @func_20897() -> Tensor[(4, 8, 8), float64] {
  %727 = @func_14877() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float64], Tensor[(9, 13, 3), float32]) */;
  %727.1
}

def @func_15171() -> (Tensor[(10, 3, 9), float64],) {
  %728 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %729 = %728.0;
  (%729,)
}

def @func_959(%var_950: Tensor[(1, 2, 12), float64]) -> (Tensor[(1, 2, 12), float64],) {
  %730 = cast(%var_950, dtype="float64") /* ty=Tensor[(1, 2, 12), float64] */;
  %731 = acosh(%730) /* ty=Tensor[(1, 2, 12), float64] */;
  (%731,)
}

def @func_16355() -> Tensor[(4, 8, 8), float32] {
  %732 = @func_10109() /* ty=(Tensor[(90, 3), float32], Tensor[(4, 8, 8), float32]) */;
  %732.1
}

def @func_15515() -> (Tensor[(13, 15, 11), float32],) {
  %733 = @func_11301() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %734 = %733.0;
  (%734,)
}

def @func_14327() -> (Tensor[(256), float32], Tensor[(13, 15, 11), float64]) {
  %735 = @func_10569() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(528), uint16], Tensor[(130, 6), uint16], Tensor[(256), float32], Tensor[(528, 1), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %736 = %735.5;
  %737 = @func_13242() /* ty=Tensor[(13, 15, 11), float64] */;
  (%736, %737)
}

def @func_14747() -> Tensor[(256), float32] {
  @func_10492() /* ty=Tensor[(256), float32] */
}

def @func_13615() -> Tensor[(13, 16, 1), float64] {
  %738 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %738.1
}

def @func_12582(%var_12536: Tensor[(24), float64]) -> (Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(1, 2, 12), float64], Tensor[(24), float64], Tensor[(13, 16, 1), float64], Tensor[(208), float64], Tensor[(13, 16, 1), float64], Tensor[(256), float32]) {
  %739 = @func_12317() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %740 = %739.0;
  %741 = cast(%740, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %742 = @func_12317() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %743 = cast(%var_12536, dtype="float64") /* ty=Tensor[(24), float64] */;
  %744 = reshape(%743, newshape=[1, 2, 12]) /* ty=Tensor[(1, 2, 12), float64] */;
  %745 = @func_959(%744) /* ty=(Tensor[(1, 2, 12), float64],) */;
  %746 = cast(meta[relay.Constant][56] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %747 = reshape(%746, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
  %748 = @func_8902(%747) /* ty=Tensor[(13, 16, 1), float64] */;
  %749 = cast(%748, dtype="float64") /* ty=Tensor[(13, 16, 1), float64] */;
  %750 = reshape(%749, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
  %751 = acosh(%741) /* ty=Tensor[(4, 8, 8), float32] */;
  %752 = %742.0;
  %753 = %745.0;
  %754 = @func_8902(%750) /* ty=Tensor[(13, 16, 1), float64] */;
  %755 = @func_10492() /* ty=Tensor[(256), float32] */;
  (%751, %752, %753, %var_12536, %748, meta[relay.Constant][56] /* ty=Tensor[(208), float64] */, %754, %755)
}

def @func_14345(%var_14339: Tensor[(16, 1, 6), uint32]) -> (Tensor[(16, 1, 6), uint32], Tensor[(256), float32]) {
  %756 = cast(meta[relay.Constant][57] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %757 = cast(%var_14339, dtype="uint32") /* ty=Tensor[(16, 1, 6), uint32] */;
  %758 = left_shift(%756, %757) /* ty=Tensor[(16, 1, 6), uint32] */;
  %759 = @func_13650() /* ty=Tensor[(256), float32] */;
  (%758, %759)
}

def @func_10109() -> (Tensor[(90, 3), float32], Tensor[(4, 8, 8), float32]) {
  %760 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %761 = %760.2;
  %762 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
  (%761, %762)
}

def @func_16405(%var_16400: Tensor[(4, 8, 8), float32]) -> (Tensor[(4, 8, 8), uint32],) {
  %763 = @func_16355() /* ty=Tensor[(4, 8, 8), float32] */;
  %764 = cast(%var_16400, dtype="uint32") /* ty=Tensor[(4, 8, 8), uint32] */;
  %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%763, dtype="uint32") /* ty=Tensor[(4, 8, 8), uint32] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %768 = right_shift(%766, %767) /* ty=Tensor[(4, 8, 8), uint32] */;
  (%768,)
}

def @func_4821(%var_4794: Tensor[(4, 7, 11), uint8], %var_4795: Tensor[(4, 7, 11), uint8], %var_4801: Tensor[(1, 4), float32]) -> (Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) {
  %769 = cast(%var_4795, dtype="bool") /* ty=Tensor[(4, 7, 11), bool] */;
  %770 = shape_of(%var_4794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(%var_4794, dtype="bool") /* ty=Tensor[(4, 7, 11), bool] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %773 = cast(%var_4801, dtype="float32") /* ty=Tensor[(1, 4), float32] */;
  %774 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 72), float32] */, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %775 = reshape(%773, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), float32] */;
  %776 = reshape(%774, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %777 = @func_3372(%775, %776) /* ty=(Tensor[(2, 2, 1), float32], Tensor[(10, 12, 3), bool], Tensor[(72), float32], Tensor[(144), float32], Tensor[(6, 2, 12), float32], Tensor[(6, 2, 12), float32], Tensor[(5, 13, 3), float64], Tensor[(195), float64]) */;
  %778 = less_equal(%771, %772) /* ty=Tensor[(4, 7, 11), bool] */;
  %779 = %777.6;
  (%778, %779, %var_4801, meta[relay.Constant][58] /* ty=Tensor[(1, 72), float32] */)
}

def @func_17543(%var_17537: Tensor[(4, 8, 8), float32]) -> (Tensor[(4, 8, 8), float32],) {
  %780 = @func_16355() /* ty=Tensor[(4, 8, 8), float32] */;
  %781 = cast(%var_17537, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %782 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%780, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %785 = divide(%783, %784) /* ty=Tensor[(4, 8, 8), float32] */;
  (%785,)
}

def @func_6278(%var_6263: Tensor[(6, 15, 12), float64], %var_6267: Tensor[(24, 6), float32]) -> (Tensor[(6, 15, 12), float64], Tensor[(6, 2, 12), float32], Tensor[(24, 6), float32]) {
  %786 = cast(%var_6263, dtype="float64") /* ty=Tensor[(6, 15, 12), float64] */;
  %787 = cast(%var_6267, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
  %788 = reshape(%787, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float32] */;
  %789 = @func_154(%788) /* ty=(Tensor[(6, 2, 12), float32],) */;
  %790 = acosh(%786) /* ty=Tensor[(6, 15, 12), float64] */;
  %791 = %789.0;
  (%790, %791, %var_6267)
}

def @func_12225() -> (Tensor[(13, 15, 11), float32],) {
  %792 = @func_11115() /* ty=Tensor[(13, 15, 11), float32] */;
  (%792,)
}

def @func_11197() -> (Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32]) {
  %793 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %794 = %793.1;
  %795 = @func_11115() /* ty=Tensor[(13, 15, 11), float32] */;
  (%794, %795)
}

def @func_20292() -> (Tensor[(528, 1), float32],) {
  %796 = @func_10569() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(528), uint16], Tensor[(130, 6), uint16], Tensor[(256), float32], Tensor[(528, 1), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %797 = %796.6;
  (%797,)
}

def @func_16647() -> (Tensor[(13, 15, 11), float64], Tensor[(256), float32], Tensor[(60), int64], Tensor[(144), float32]) {
  %798 = @func_15308() /* ty=(Tensor[(13, 15, 11), float64],) */;
  %799 = cast(meta[relay.Constant][59] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %800 = cast(meta[relay.Constant][60] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %801 = reshape(%799, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %802 = reshape(%800, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %803 = @func_9525(%801, %802) /* ty=(Tensor[(256), float32], Tensor[(5, 16, 11), uint64], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32]) */;
  %804 = %798.0;
  %805 = %803.0;
  (%804, %805, meta[relay.Constant][59] /* ty=Tensor[(60), int64] */, meta[relay.Constant][60] /* ty=Tensor[(144), float32] */)
}

def @func_9729() -> (Tensor[(13, 15, 11), float32],) {
  %806 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %807 = %806.0;
  (%807,)
}

def @func_22117() -> Tensor[(256), float32] {
  %808 = @func_19951() /* ty=(Tensor[(256), float32], Tensor[(256), float32]) */;
  %808.1
}

def @func_1894(%var_1881: Tensor[(10, 13, 6), uint16], %var_1891: Tensor[(60, 1), int64]) -> (Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) {
  %809 = cast(%var_1881, dtype="uint16") /* ty=Tensor[(10, 13, 6), uint16] */;
  %810 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(10, 13, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %811 = cast(meta[relay.Constant][61] /* ty=Tensor[(10, 13, 6), uint16] */, dtype="uint16") /* ty=Tensor[(10, 13, 6), uint16] */;
  %812 = dyn.reshape(%809, %810, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %813 = cast(%var_1891, dtype="int64") /* ty=Tensor[(60, 1), int64] */;
  %814 = cast(meta[relay.Constant][62] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %815 = reshape(%813, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
  %816 = reshape(%814, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %817 = @func_889(%815, %816) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
  %818 = bitwise_or(%811, %812) /* ty=Tensor[(10, 13, 6), uint16] */;
  %819 = %817.0;
  (%818, %819, %var_1891, meta[relay.Constant][62] /* ty=Tensor[(144), float32] */)
}

def @func_11301() -> (Tensor[(13, 15, 11), float32],) {
  %820 = @func_10019() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
  %821 = %820.0;
  (%821,)
}

def @func_15780() -> Tensor[(10, 3, 9), float64] {
  @func_10883() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_16869() -> (Tensor[(13, 15, 11), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(1680), float64]) {
  %822 = @func_16647() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(256), float32], Tensor[(60), int64], Tensor[(144), float32]) */;
  %823 = cast(meta[relay.Constant][63] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %824 = reshape(%823, newshape=[]) /* ty=uint16 */;
  %825 = @func_10769(%824) /* ty=(Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16]) */;
  %826 = @func_10980() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(351), float64], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(4), float32], Tensor[(121, 1), int8], Tensor[(?, 11, 11), float64]) */;
  %827 = %822.0;
  %828 = %825.2;
  %829 = %826.4;
  (%827, %828, meta[relay.Constant][63] /* ty=uint16 */, %829)
}

def @func_4331(%var_4279: Tensor[(16, 10, 14), int64], %var_4297: Tensor[(780), uint16], %var_4327: Tensor[(72), float32]) -> (Tensor[(16, 10, 14), bool], Tensor[(780), uint16], Tensor[(144), float32], Tensor[(60, ?), uint16], Tensor[(4, 6, 3), float32], Tensor[(72), float32]) {
  %830 = cast(meta[relay.Constant][64] /* ty=Tensor[(16, 10, 14), int64] */, dtype="bool") /* ty=Tensor[(16, 10, 14), bool] */;
  %831 = shape_of(%var_4279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %832 = cast(%var_4279, dtype="bool") /* ty=Tensor[(16, 10, 14), bool] */;
  %833 = dyn.reshape(%830, %831, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %834 = cast(%var_4297, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %835 = cast(%var_4297, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %836 = cast(meta[relay.Constant][65] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %837 = reshape(%835, newshape=[10, 13, 6]) /* ty=Tensor[(10, 13, 6), uint16] */;
  %838 = reshape(%836, newshape=[60, 1]) /* ty=Tensor[(60, 1), int64] */;
  %839 = @func_1894(%837, %838) /* ty=(Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) */;
  %840 = %839.2;
  %841 = cast(%840, dtype="int64") /* ty=Tensor[(60, 1), int64] */;
  %842 = reshape(%834, newshape=[10, 13, 6]) /* ty=Tensor[(10, 13, 6), uint16] */;
  %843 = reshape(%841, newshape=[60, 1]) /* ty=Tensor[(60, 1), int64] */;
  %844 = @func_1894(%842, %843) /* ty=(Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) */;
  %845 = cast(meta[relay.Constant][65] /* ty=Tensor[(60), int64] */, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %846 = shape_of(%840, dtype="int32") /* ty=Tensor[(2), int32] */;
  %847 = cast(%840, dtype="uint16") /* ty=Tensor[(60, 1), uint16] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %849 = cast(%var_4327, dtype="float32") /* ty=Tensor[(72), float32] */;
  %850 = cast(%var_4327, dtype="float32") /* ty=Tensor[(72), float32] */;
  %851 = reshape(%849, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %852 = reshape(%850, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %853 = greater_equal(%832, %833) /* ty=Tensor[(16, 10, 14), bool] */;
  %854 = %844.3;
  %855 = right_shift(%847, %848) /* ty=Tensor[(60, ?), uint16] */;
  %856 = @func_1277(%851, %852) /* ty=Tensor[(4, 6, 3), float32] */;
  (%853, %var_4297, %854, %855, %856, %var_4327)
}

def @func_19036() -> Tensor[(13, 15, 11), float32] {
  %857 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %857.0
}

def @func_13053() -> Tensor[(13, 15, 11), float32] {
  @func_12026() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_10832() -> (Tensor[(256), float32],) {
  %858 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %859 = %858.2;
  (%859,)
}

def @func_20819(%var_20788: Tensor[(11, 9, 1), uint16], %var_20789: Tensor[(11, 9, 11), uint16]) -> (Tensor[(11, 9, 11), float64],) {
  %860 = cast(%var_20788, dtype="uint16") /* ty=Tensor[(11, 9, 1), uint16] */;
  %861 = cast(%var_20789, dtype="uint16") /* ty=Tensor[(11, 9, 11), uint16] */;
  %862 = logical_xor(%860, %861) /* ty=Tensor[(11, 9, 11), uint16] */;
  %863 = cast(%862, dtype="float64") /* ty=Tensor[(11, 9, 11), float64] */;
  %864 = cos(%863) /* ty=Tensor[(11, 9, 11), float64] */;
  (%864,)
}

def @func_15740(%var_15677: Tensor[(30, 2), int64], %var_15702: Tensor[(13, 16, 240), float64]) -> (Tensor[(6, 2, 12), float32], Tensor[(30, 2), int64], Tensor[(144), float32], Tensor[(4, 528), int8], Tensor[(13, 16, 240), float64]) {
  %865 = cast(%var_15677, dtype="int64") /* ty=Tensor[(30, 2), int64] */;
  %866 = cast(meta[relay.Constant][66] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %867 = reshape(%865, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
  %868 = reshape(%866, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %869 = @func_889(%867, %868) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
  %870 = cast(meta[relay.Constant][67] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %871 = reshape(%870, newshape=[240]) /* ty=Tensor[(240), float64] */;
  %872 = @func_11623(%871) /* ty=(Tensor[(256), float32], Tensor[(5, 13, 3), float64], Tensor[(308), uint8], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(240), float64], uint16, Tensor[(13, 15, 11), float32], Tensor[(4, 528), int8]) */;
  %873 = @func_14156() /* ty=Tensor[(13, 16, 1), float64] */;
  %874 = cast(meta[relay.Constant][67] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %875 = cast(%873, dtype="float64") /* ty=Tensor[(13, 16, 1), float64] */;
  %876 = power(%874, %875) /* ty=Tensor[(13, 16, 240), float64] */;
  %877 = cast(%var_15702, dtype="bool") /* ty=Tensor[(13, 16, 240), bool] */;
  %878 = shape_of(%876, dtype="int32") /* ty=Tensor[(3), int32] */;
  %879 = cast(%876, dtype="bool") /* ty=Tensor[(13, 16, 240), bool] */;
  %880 = dyn.reshape(%877, %878, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %881 = less_equal(%879, %880) /* ty=Tensor[(13, 16, 240), bool] */;
  %882 = cast(%881, dtype="float64") /* ty=Tensor[(13, 16, 240), float64] */;
  %883 = sinh(%882) /* ty=Tensor[(13, 16, 240), float64] */;
  %884 = cast(%883, dtype="float64") /* ty=Tensor[(13, 16, 240), float64] */;
  %885 = %869.0;
  %886 = %872.8;
  %887 = acos(%884) /* ty=Tensor[(13, 16, 240), float64] */;
  (%885, %var_15677, meta[relay.Constant][66] /* ty=Tensor[(144), float32] */, %886, %887)
}

def @func_19590(%var_19562: Tensor[(144), float32]) -> (Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(13, 15, 11), float32], Tensor[(144), float32]) {
  %888 = @func_19447() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float32]) */;
  %889 = cast(%var_19562, dtype="float32") /* ty=Tensor[(144), float32] */;
  %890 = reshape(%889, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %891 = @func_14562(%890) /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(4, 6, 3), float32], Tensor[(3, 24), float32]) */;
  %892 = @func_19031() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(1680), float64]) */;
  %893 = %891.4;
  %894 = cast(%893, dtype="int64") /* ty=Tensor[(60), int64] */;
  %895 = reshape(%894, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %896 = @func_9943(%895) /* ty=(Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) */;
  %897 = %888.0;
  %898 = %892.0;
  %899 = %896.1;
  (%897, %893, %var_19562, %898, %899)
}

def @func_14925() -> (Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(256), float32]) {
  %900 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %901 = @func_10832() /* ty=(Tensor[(256), float32],) */;
  %902 = %900.2;
  %903 = @func_9160() /* ty=Tensor[(13, 15, 11), float32] */;
  %904 = %901.0;
  (%902, %903, %904)
}

def @func_16072() -> (Tensor[(4, 8, 8), float64],) {
  %905 = @func_15283() /* ty=Tensor[(4, 8, 8), float64] */;
  (%905,)
}

def @func_8844(%var_8801: Tensor[(3, 1, 1), float64], %var_8820: Tensor[(528), uint16]) -> (Tensor[(3, 1, 1), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(144), float32], Tensor[(780), uint16], Tensor[(15, 4), int64]) {
  %906 = cast(%var_8801, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
  %907 = cast(meta[relay.Constant][68] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %908 = cast(%var_8820, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %909 = reshape(%907, newshape=[]) /* ty=uint16 */;
  %910 = reshape(%908, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), uint16] */;
  %911 = @func_5472(%909, %910) /* ty=(Tensor[(11, 16, 3), bool],) */;
  %912 = cast(meta[relay.Constant][69] /* ty=Tensor[(780), uint16] */, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %913 = cast(meta[relay.Constant][70] /* ty=Tensor[(15, 4), int64] */, dtype="int64") /* ty=Tensor[(15, 4), int64] */;
  %914 = reshape(%912, newshape=[10, 13, 6]) /* ty=Tensor[(10, 13, 6), uint16] */;
  %915 = reshape(%913, newshape=[60, 1]) /* ty=Tensor[(60, 1), int64] */;
  %916 = @func_1894(%914, %915) /* ty=(Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) */;
  %917 = sin(%906) /* ty=Tensor[(3, 1, 1), float64] */;
  %918 = %911.0;
  %919 = %916.3;
  (%917, %918, meta[relay.Constant][68] /* ty=uint16 */, %var_8820, %919, meta[relay.Constant][69] /* ty=Tensor[(780), uint16] */, meta[relay.Constant][70] /* ty=Tensor[(15, 4), int64] */)
}

def @func_10980() -> (Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(351), float64], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(4), float32], Tensor[(121, 1), int8], Tensor[(?, 11, 11), float64]) {
  %920 = @func_10859() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %921 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %922 = @func_10109() /* ty=(Tensor[(90, 3), float32], Tensor[(4, 8, 8), float32]) */;
  %923 = cast(meta[relay.Constant][71] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %924 = cast(meta[relay.Constant][72] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %925 = cast(meta[relay.Constant][73] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %926 = reshape(%923, newshape=[7, 16, 15]) /* ty=Tensor[(7, 16, 15), float64] */;
  %927 = reshape(%924, newshape=[1, 195]) /* ty=Tensor[(1, 195), float64] */;
  %928 = reshape(%925, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %929 = @func_7149(%926, %927, %928) /* ty=(Tensor[(7, 16, 15), bool], Tensor[(144), float32], Tensor[(5, 13, 3), float64], Tensor[(1, 195), float64], Tensor[(8, 15, 14), float64], Tensor[(4, 7, 11), bool], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(1, 4), float32]) */;
  %930 = cast(meta[relay.Constant][74] /* ty=Tensor[(121, 1), int8] */, dtype="int8") /* ty=Tensor[(121, 1), int8] */;
  %931 = cast(meta[relay.Constant][74] /* ty=Tensor[(121, 1), int8] */, dtype="int8") /* ty=Tensor[(121, 1), int8] */;
  %932 = reshape(%930, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
  %933 = reshape(%931, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
  %934 = @func_10598(%932, %933) /* ty=(Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) */;
  %935 = %934.0;
  %936 = cast(%935, dtype="float64") /* ty=Tensor[(?, 11, 11), float64] */;
  %937 = %920.0;
  %938 = %921.0;
  %939 = %922.1;
  %940 = %929.9;
  %941 = sigmoid(%936) /* ty=Tensor[(?, 11, 11), float64] */;
  (%937, %938, %939, %940, meta[relay.Constant][71] /* ty=Tensor[(1680), float64] */, meta[relay.Constant][72] /* ty=Tensor[(195), float64] */, meta[relay.Constant][73] /* ty=Tensor[(4), float32] */, meta[relay.Constant][74] /* ty=Tensor[(121, 1), int8] */, %941)
}

def @func_20953() -> Tensor[(10, 3, 9), float64] {
  @func_13522() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_15222() -> Tensor[(10, 3, 9), float64] {
  @func_13798() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_12645(%var_12633: Tensor[(3, 8, 15), float64], %var_12634: Tensor[(3, 8, 15), float64]) -> (Tensor[(3, 8, 15), float64],) {
  %942 = cast(%var_12634, dtype="float64") /* ty=Tensor[(3, 8, 15), float64] */;
  %943 = shape_of(%var_12633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %944 = cast(%var_12633, dtype="float64") /* ty=Tensor[(3, 8, 15), float64] */;
  %945 = dyn.reshape(%942, %943, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %946 = power(%944, %945) /* ty=Tensor[(3, 8, 15), float64] */;
  (%946,)
}

def @func_14623() -> Tensor[(10, 3, 9), float32] {
  %947 = @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */;
  %948 = %947.2;
  %949 = cast(%948, dtype="float32") /* ty=Tensor[(10, 3, 9), float32] */;
  cos(%949) /* ty=Tensor[(10, 3, 9), float32] */
}

def @func_13021() -> (Tensor[(13, 15, 11), float32],) {
  %950 = @func_11197() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32]) */;
  %951 = %950.1;
  (%951,)
}

def @func_15119(%var_15104: Tensor[(3, 1), float64]) -> (Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64], Tensor[(3, 1), float64]) {
  %952 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %953 = cast(%var_15104, dtype="float64") /* ty=Tensor[(3, 1), float64] */;
  %954 = reshape(%953, newshape=[3, 1]) /* ty=Tensor[(3, 1), float64] */;
  %955 = @func_13557(%954) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(3, 1, 1), float64], Tensor[(3, 1), float64], Tensor[(24, 22), uint16]) */;
  %956 = %952.0;
  %957 = %955.0;
  (%956, %957, %var_15104)
}

def @func_11874() -> Tensor[(4, 8, 8), float32] {
  %958 = @func_10859() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %958.0
}

def @func_14994() -> (Tensor[(256), float32],) {
  %959 = @func_11253() /* ty=Tensor[(256), float32] */;
  (%959,)
}

def @func_17495(%var_17487: Tensor[(49920), float64]) -> (Tensor[(9, 13, 3), float64], Tensor[(4, 528), int8], Tensor[(60), int64], Tensor[(49920), float64]) {
  %960 = @func_11976() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) */;
  %961 = cast(meta[relay.Constant][75] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %962 = cast(%var_17487, dtype="float64") /* ty=Tensor[(49920), float64] */;
  %963 = reshape(%961, newshape=[30, 2]) /* ty=Tensor[(30, 2), int64] */;
  %964 = reshape(%962, newshape=[13, 16, 240]) /* ty=Tensor[(13, 16, 240), float64] */;
  %965 = @func_15740(%963, %964) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(30, 2), int64], Tensor[(144), float32], Tensor[(4, 528), int8], Tensor[(13, 16, 240), float64]) */;
  %966 = %960.1;
  %967 = %965.3;
  (%966, %967, meta[relay.Constant][75] /* ty=Tensor[(60), int64] */, %var_17487)
}

def @func_18293() -> (Tensor[(10, 3, 9), float64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(4, 36), float32], Tensor[(10, 3, 9), float64]) {
  %968 = @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */;
  %969 = cast(meta[relay.Constant][76] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %970 = cast(meta[relay.Constant][77] /* ty=Tensor[(4, 36), float32] */, dtype="float32") /* ty=Tensor[(4, 36), float32] */;
  %971 = reshape(%969, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %972 = reshape(%970, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %973 = @func_9525(%971, %972) /* ty=(Tensor[(256), float32], Tensor[(5, 16, 11), uint64], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32]) */;
  %974 = %968.2;
  %975 = %973.4;
  %976 = @func_14469() /* ty=Tensor[(10, 3, 9), float64] */;
  (%974, %975, meta[relay.Constant][76] /* ty=Tensor[(60), int64] */, meta[relay.Constant][77] /* ty=Tensor[(4, 36), float32] */, %976)
}

def @func_18841(%var_18818: Tensor[(5, 13, 3), float64]) -> (Tensor[(4, 8, 8), float64], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(3, 8, 15), float64], Tensor[(180, 2), float64], Tensor[(5, 13, 3), bool], Tensor[(13, 15, 11), float32]) {
  %977 = @func_16626() /* ty=(Tensor[(4, 8, 8), float64],) */;
  %978 = cast(meta[relay.Constant][80] /* ty=Tensor[(180, 2), float64] */, dtype="float64") /* ty=Tensor[(180, 2), float64] */;
  %979 = cast(meta[relay.Constant][80] /* ty=Tensor[(180, 2), float64] */, dtype="float64") /* ty=Tensor[(180, 2), float64] */;
  %980 = reshape(%978, newshape=[3, 8, 15]) /* ty=Tensor[(3, 8, 15), float64] */;
  %981 = reshape(%979, newshape=[3, 8, 15]) /* ty=Tensor[(3, 8, 15), float64] */;
  %982 = @func_12645(%980, %981) /* ty=(Tensor[(3, 8, 15), float64],) */;
  %983 = cast(meta[relay.Constant][78] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %984 = cast(meta[relay.Constant][78] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %985 = cast(meta[relay.Constant][79] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %986 = reshape(%983, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %987 = reshape(%984, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %988 = reshape(%985, newshape=[1, 4]) /* ty=Tensor[(1, 4), float32] */;
  %989 = @func_4821(%986, %987, %988) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */;
  %990 = %989.1;
  %991 = cast(%var_18818, dtype="bool") /* ty=Tensor[(5, 13, 3), bool] */;
  %992 = shape_of(%990, dtype="int32") /* ty=Tensor[(3), int32] */;
  %993 = cast(%990, dtype="bool") /* ty=Tensor[(5, 13, 3), bool] */;
  %994 = dyn.reshape(%991, %992, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %995 = @func_17292() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32]) */;
  %996 = %977.0;
  %997 = %982.0;
  %998 = not_equal(%993, %994) /* ty=Tensor[(5, 13, 3), bool] */;
  %999 = %995.1;
  (%996, meta[relay.Constant][78] /* ty=Tensor[(308), uint8] */, meta[relay.Constant][79] /* ty=Tensor[(4), float32] */, %997, meta[relay.Constant][80] /* ty=Tensor[(180, 2), float64] */, %998, %999)
}

def @func_12472() -> Tensor[(4, 8, 8), float32] {
  @func_11370() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_18508() -> (Tensor[(208, 1), float64],) {
  %1000 = @func_12901() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float64], Tensor[(208, 1), float64]) */;
  %1001 = %1000.2;
  (%1001,)
}

def @func_11828(%var_11814: Tensor[(1, 144), float32]) -> (Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(117, 3), float32], Tensor[(6, 2, 12), float32], Tensor[(1, 144), float32]) {
  %1002 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %1003 = cast(meta[relay.Constant][81] /* ty=Tensor[(117, 3), float64] */, dtype="float64") /* ty=Tensor[(117, 3), float64] */;
  %1004 = reshape(%1003, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float64] */;
  %1005 = cast(meta[relay.Constant][81] /* ty=Tensor[(117, 3), float64] */, dtype="float32") /* ty=Tensor[(117, 3), float32] */;
  %1006 = cast(%var_11814, dtype="float32") /* ty=Tensor[(1, 144), float32] */;
  %1007 = reshape(%1006, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float32] */;
  %1008 = @func_154(%1007) /* ty=(Tensor[(6, 2, 12), float32],) */;
  %1009 = %1002.1;
  %1010 = @func_5710(%1004) /* ty=Tensor[(9, 13, 3), float64] */;
  %1011 = atan(%1005) /* ty=Tensor[(117, 3), float32] */;
  %1012 = %1008.0;
  (%1009, %1010, %1011, %1012, %var_11814)
}

def @func_18567(%var_18565: Tensor[(144), float32]) -> (Tensor[(13, 16, 1), float64], Tensor[(24, 6), float32], Tensor[(1080), float64], Tensor[(144), float32]) {
  %1013 = @func_12901() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float64], Tensor[(208, 1), float64]) */;
  %1014 = cast(meta[relay.Constant][82] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %1015 = cast(%var_18565, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1016 = reshape(%1014, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float64] */;
  %1017 = reshape(%1015, newshape=[24, 6]) /* ty=Tensor[(24, 6), float32] */;
  %1018 = @func_6278(%1016, %1017) /* ty=(Tensor[(6, 15, 12), float64], Tensor[(6, 2, 12), float32], Tensor[(24, 6), float32]) */;
  %1019 = %1013.1;
  %1020 = %1018.2;
  (%1019, %1020, meta[relay.Constant][82] /* ty=Tensor[(1080), float64] */, %var_18565)
}

def @func_13798() -> Tensor[(10, 3, 9), float64] {
  %1021 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %1021.0
}

def @func_17138() -> (Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) {
  %1022 = @func_13809() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %1023 = @func_17009() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(351), float64]) */;
  %1024 = %1022.0;
  %1025 = %1023.1;
  %1026 = @func_14747() /* ty=Tensor[(256), float32] */;
  (%1024, %1025, %1026)
}

def @func_9323() -> (Tensor[(10, 3, 9), float64],) {
  %1027 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %1028 = %1027.1;
  (%1028,)
}

def @func_15887() -> (Tensor[(256), float32],) {
  %1029 = @func_13650() /* ty=Tensor[(256), float32] */;
  (%1029,)
}

def @func_5710(%var_5696: Tensor[(9, 13, 3), float64]) -> Tensor[(9, 13, 3), float64] {
  %1030 = cast(%var_5696, dtype="float64") /* ty=Tensor[(9, 13, 3), float64] */;
  tan(%1030) /* ty=Tensor[(9, 13, 3), float64] */
}

def @func_14148() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) {
  %1031 = @func_10019() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
  %1032 = @func_14066() /* ty=(Tensor[(4, 8, 8), float64],) */;
  %1033 = %1031.0;
  %1034 = %1032.0;
  (%1033, %1034)
}

def @func_12123() -> Tensor[(4, 8, 8), float64] {
  %1035 = @func_11838() /* ty=Tensor[(4, 8, 8), float32] */;
  %1036 = cast(%1035, dtype="float64") /* ty=Tensor[(4, 8, 8), float64] */;
  %1037 = sqrt(%1036) /* ty=Tensor[(4, 8, 8), float64] */;
  %1038 = cast(%1037, dtype="float64") /* ty=Tensor[(4, 8, 8), float64] */;
  atan(%1038) /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_13501(%var_13445: int8, %var_13446: Tensor[(1, 12, 16), int8], %var_13467: Tensor[(52, 4), float64]) -> (Tensor[(1, 12, 16), bool], Tensor[(13, 16, 1), float64], Tensor[(52, 4), float64], Tensor[(13, 16, 1), float64], Tensor[(4, 8, 8), float32]) {
  %1039 = cast(%var_13445, dtype="bool") /* ty=bool */;
  %1040 = cast(%var_13446, dtype="bool") /* ty=Tensor[(1, 12, 16), bool] */;
  %1041 = cast(%var_13467, dtype="float64") /* ty=Tensor[(52, 4), float64] */;
  %1042 = reshape(%1041, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
  %1043 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %1044 = greater_equal(%1039, %1040) /* ty=Tensor[(1, 12, 16), bool] */;
  %1045 = @func_8902(%1042) /* ty=Tensor[(13, 16, 1), float64] */;
  %1046 = %1043.1;
  %1047 = @func_11874() /* ty=Tensor[(4, 8, 8), float32] */;
  (%1044, %1045, %var_13467, %1046, %1047)
}

def @func_14562(%var_14546: Tensor[(144), float32]) -> (Tensor[(4, 8, 8), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(4, 6, 3), float32], Tensor[(3, 24), float32]) {
  %1048 = @func_10980() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(351), float64], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(4), float32], Tensor[(121, 1), int8], Tensor[(?, 11, 11), float64]) */;
  %1049 = cast(meta[relay.Constant][83] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %1050 = cast(%var_14546, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1051 = reshape(%1049, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
  %1052 = reshape(%1050, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1053 = @func_889(%1051, %1052) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
  %1054 = @func_10569() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(528), uint16], Tensor[(130, 6), uint16], Tensor[(256), float32], Tensor[(528, 1), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %1055 = cast(meta[relay.Constant][84] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %1056 = cast(meta[relay.Constant][84] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
  %1057 = reshape(%1055, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %1058 = reshape(%1056, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %1059 = %1048.0;
  %1060 = %1053.2;
  %1061 = %1054.1;
  %1062 = @func_1277(%1057, %1058) /* ty=Tensor[(4, 6, 3), float32] */;
  (%1059, %1060, meta[relay.Constant][83] /* ty=Tensor[(60), int64] */, %var_14546, %1061, %1062, meta[relay.Constant][84] /* ty=Tensor[(3, 24), float32] */)
}

def @func_9943(%var_9941: Tensor[(60), int64]) -> (Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) {
  %1063 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %1064 = cast(meta[relay.Constant][85] /* ty=Tensor[(780, 1), uint16] */, dtype="uint16") /* ty=Tensor[(780, 1), uint16] */;
  %1065 = cast(%var_9941, dtype="int64") /* ty=Tensor[(60), int64] */;
  %1066 = reshape(%1064, newshape=[10, 13, 6]) /* ty=Tensor[(10, 13, 6), uint16] */;
  %1067 = reshape(%1065, newshape=[60, 1]) /* ty=Tensor[(60, 1), int64] */;
  %1068 = @func_1894(%1066, %1067) /* ty=(Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) */;
  %1069 = %1063.1;
  %1070 = %1068.3;
  (%1069, %1070, meta[relay.Constant][85] /* ty=Tensor[(780, 1), uint16] */, %var_9941)
}

def @func_18701() -> (Tensor[(4, 8, 8), float64],) {
  %1071 = @func_15283() /* ty=Tensor[(4, 8, 8), float64] */;
  (%1071,)
}

def @func_15360() -> (Tensor[(256), float32], Tensor[(256), float32]) {
  %1072 = @func_10832() /* ty=(Tensor[(256), float32],) */;
  %1073 = @func_9868() /* ty=(Tensor[(256), float32],) */;
  %1074 = %1072.0;
  %1075 = %1073.0;
  (%1074, %1075)
}

def @func_19145() -> (Tensor[(4, 8, 8), float32], Tensor[(208), float64]) {
  %1076 = @func_14970() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %1077 = @func_18654() /* ty=(Tensor[(208), float64], Tensor[(256), float32]) */;
  %1078 = %1076.0;
  %1079 = %1077.0;
  (%1078, %1079)
}

def @func_21306() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], uint8) {
  %1080 = cast(meta[relay.Constant][86] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1081 = reshape(%1080, newshape=[]) /* ty=uint8 */;
  %1082 = @func_14288(%1081) /* ty=(Tensor[(3), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 11, 256), int8], Tensor[(3, 1, 256), bool]) */;
  %1083 = @func_10430() /* ty=Tensor[(13, 15, 11), float32] */;
  %1084 = %1082.1;
  (%1083, %1084, meta[relay.Constant][86] /* ty=uint8 */)
}

def @func_21389() -> (Tensor[(10, 3, 9), float64],) {
  %1085 = @func_11906() /* ty=Tensor[(10, 3, 9), float64] */;
  %1086 = cast(%1085, dtype="float64") /* ty=Tensor[(10, 3, 9), float64] */;
  %1087 = cosh(%1086) /* ty=Tensor[(10, 3, 9), float64] */;
  (%1087,)
}

def @func_19204() -> (Tensor[(13, 15, 11), float32],) {
  %1088 = @func_13021() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %1089 = %1088.0;
  (%1089,)
}

def @func_16827() -> Tensor[(10, 3, 9), float64] {
  @func_11906() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_19890() -> Tensor[(4, 8, 8), float64] {
  %1090 = @func_15619() /* ty=(Tensor[(4, 8, 8), float64],) */;
  %1091 = %1090.0;
  %1092 = cast(%1091, dtype="float64") /* ty=Tensor[(4, 8, 8), float64] */;
  asin(%1092) /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_20428() -> Tensor[(13, 15, 11), float32] {
  %1093 = @func_12225() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %1093.0
}

def @func_12064() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32]) {
  %1094 = @func_10019() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
  %1095 = @func_11370() /* ty=Tensor[(4, 8, 8), float32] */;
  %1096 = cast(%1095, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %1097 = %1094.1;
  %1098 = tan(%1096) /* ty=Tensor[(4, 8, 8), float32] */;
  (%1097, %1098)
}

def @func_12699() -> Tensor[(4, 8, 8), float64] {
  @func_12123() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_19178() -> Tensor[(256), float32] {
  @func_18898() /* ty=Tensor[(256), float32] */
}

def @func_5078(%var_5073: Tensor[(5, 16, 11), float32]) -> Tensor[(5, 16, 11), float32] {
  %1099 = cast(%var_5073, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  cosh(%1099) /* ty=Tensor[(5, 16, 11), float32] */
}

def @func_9888() -> Tensor[(4, 8, 8), float32] {
  %1100 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %1100.0
}

def @func_13809() -> (Tensor[(13, 15, 11), float32],) {
  %1101 = @func_12026() /* ty=Tensor[(13, 15, 11), float32] */;
  (%1101,)
}

def @func_9056() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) {
  %1102 = cast(meta[relay.Constant][87] /* ty=Tensor[(13, 15, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 15, 11), float32] */;
  %1103 = cast(meta[relay.Constant][88] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %1104 = reshape(%1103, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
  %1105 = @func_4447(%1104) /* ty=(Tensor[(4, 8, 8), float32],) */;
  %1106 = atanh(%1102) /* ty=Tensor[(13, 15, 11), float32] */;
  %1107 = %1105.0;
  (%1106, %1107, meta[relay.Constant][88] /* ty=Tensor[(256), float32] */)
}

def @func_21725() -> (Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32]) {
  %1108 = @func_17255() /* ty=Tensor[(4, 8, 8), float64] */;
  %1109 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
  (%1108, %1109)
}

def @func_13094() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) {
  %1110 = @func_11838() /* ty=Tensor[(4, 8, 8), float32] */;
  %1111 = cast(%1110, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %1112 = reshape(%1111, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
  %1113 = @func_4447(%1112) /* ty=(Tensor[(4, 8, 8), float32],) */;
  %1114 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %1115 = @func_11536() /* ty=Tensor[(13, 15, 11), float32] */;
  %1116 = %1113.0;
  %1117 = %1114.0;
  (%1115, %1110, %1116, %1117)
}

def @func_15185() -> Tensor[(4, 8, 8), float64] {
  %1118 = @func_14148() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) */;
  %1118.1
}

def @func_11623(%var_11605: Tensor[(240), float64]) -> (Tensor[(256), float32], Tensor[(5, 13, 3), float64], Tensor[(308), uint8], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(240), float64], uint16, Tensor[(13, 15, 11), float32], Tensor[(4, 528), int8]) {
  %1119 = cast(meta[relay.Constant][89] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %1120 = cast(meta[relay.Constant][89] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %1121 = cast(meta[relay.Constant][90] /* ty=Tensor[(4, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 1), float32] */;
  %1122 = reshape(%1119, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %1123 = reshape(%1120, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %1124 = reshape(%1121, newshape=[1, 4]) /* ty=Tensor[(1, 4), float32] */;
  %1125 = @func_4821(%1122, %1123, %1124) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */;
  %1126 = cast(meta[relay.Constant][91] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %1127 = cast(%var_11605, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1128 = reshape(%1126, newshape=[270]) /* ty=Tensor[(270), float32] */;
  %1129 = reshape(%1127, newshape=[16, 3, 5]) /* ty=Tensor[(16, 3, 5), float64] */;
  %1130 = @func_11513(%1128, %1129) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(16, 3, 5), bool]) */;
  %1131 = cast(meta[relay.Constant][92] /* ty=Tensor[(528), uint16] */, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %1132 = reshape(%1131, newshape=[2, 264]) /* ty=Tensor[(2, 264), uint16] */;
  %1133 = @func_9290(%1132) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(4, 6, 3), float32], Tensor[(11, 16, 3), bool], uint16, Tensor[(2, 264), uint16], Tensor[(144), float32], Tensor[(144), float32], Tensor[(1, 72), float64]) */;
  %1134 = @func_11197() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32]) */;
  %1135 = cast(meta[relay.Constant][92] /* ty=Tensor[(528), uint16] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %1136 = cast(meta[relay.Constant][90] /* ty=Tensor[(4, 1), float32] */, dtype="int8") /* ty=Tensor[(4, 1), int8] */;
  %1137 = @func_10492() /* ty=Tensor[(256), float32] */;
  %1138 = %1125.1;
  %1139 = %1130.0;
  %1140 = %1133.3;
  %1141 = %1134.1;
  %1142 = minimum(%1135, %1136) /* ty=Tensor[(4, 528), int8] */;
  (%1137, %1138, meta[relay.Constant][89] /* ty=Tensor[(308), uint8] */, %1139, meta[relay.Constant][91] /* ty=Tensor[(270), float32] */, %var_11605, %1140, %1141, %1142)
}

def @func_21151() -> Tensor[(10, 3, 9), float64] {
  %1143 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %1143.0
}

def @func_14824() -> (Tensor[(4, 8, 8), float64],) {
  %1144 = @func_12123() /* ty=Tensor[(4, 8, 8), float64] */;
  %1145 = cast(%1144, dtype="float64") /* ty=Tensor[(4, 8, 8), float64] */;
  %1146 = sigmoid(%1145) /* ty=Tensor[(4, 8, 8), float64] */;
  (%1146,)
}

def @func_12185() -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(10, 3, 9), float64]) {
  %1147 = cast(meta[relay.Constant][93] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1148 = reshape(%1147, newshape=[]) /* ty=uint16 */;
  %1149 = @func_10769(%1148) /* ty=(Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16]) */;
  %1150 = @func_9160() /* ty=Tensor[(13, 15, 11), float32] */;
  %1151 = cast(%1150, dtype="float64") /* ty=Tensor[(13, 15, 11), float64] */;
  %1152 = cast(meta[relay.Constant][93] /* ty=uint16 */, dtype="float64") /* ty=float64 */;
  %1153 = @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %1154 = %1149.1;
  %1155 = power(%1151, %1152) /* ty=Tensor[(13, 15, 11), float64] */;
  %1156 = %1153.0;
  (%1154, %1155, %1156)
}

def @func_9868() -> (Tensor[(256), float32],) {
  %1157 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %1158 = %1157.0;
  (%1158,)
}

def @func_9083() -> (Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) {
  %1159 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %1160 = cast(meta[relay.Constant][94] /* ty=Tensor[(90, 3), float32] */, dtype="float32") /* ty=Tensor[(90, 3), float32] */;
  %1161 = reshape(%1160, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
  %1162 = @func_5882(%1161) /* ty=(Tensor[(10, 3, 9), float64],) */;
  %1163 = %1159.1;
  %1164 = %1162.0;
  (%1163, %1164, meta[relay.Constant][94] /* ty=Tensor[(90, 3), float32] */)
}

def @func_13689() -> Tensor[(10, 3, 9), float64] {
  %1165 = @func_12185() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(10, 3, 9), float64]) */;
  %1165.0
}

def @func_18958() -> (Tensor[(10, 3, 9), float32],) {
  %1166 = @func_14623() /* ty=Tensor[(10, 3, 9), float32] */;
  (%1166,)
}

def @func_19031() -> (Tensor[(13, 15, 11), float32], Tensor[(1680), float64]) {
  %1167 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %1168 = @func_16869() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(1680), float64]) */;
  %1169 = %1167.0;
  %1170 = %1168.3;
  (%1169, %1170)
}

def @func_12317() -> (Tensor[(4, 8, 8), float32],) {
  %1171 = @func_11197() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32]) */;
  %1172 = %1171.0;
  (%1172,)
}

def @func_9525(%var_9522: Tensor[(60), int64], %var_9523: Tensor[(144), float32]) -> (Tensor[(256), float32], Tensor[(5, 16, 11), uint64], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32]) {
  %1173 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %1174 = cast(meta[relay.Constant][95] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %1175 = reshape(%1174, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float32] */;
  %1176 = @func_5078(%1175) /* ty=Tensor[(5, 16, 11), float32] */;
  %1177 = cast(meta[relay.Constant][95] /* ty=Tensor[(880), float32] */, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %1178 = shape_of(%1176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1179 = cast(%1176, dtype="uint64") /* ty=Tensor[(5, 16, 11), uint64] */;
  %1180 = dyn.reshape(%1177, %1178, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1181 = cast(%var_9522, dtype="int64") /* ty=Tensor[(60), int64] */;
  %1182 = cast(%var_9523, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1183 = reshape(%1181, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
  %1184 = reshape(%1182, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1185 = @func_889(%1183, %1184) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
  %1186 = %1173.2;
  %1187 = bitwise_and(%1179, %1180) /* ty=Tensor[(5, 16, 11), uint64] */;
  %1188 = %1185.2;
  (%1186, %1187, %1188, %var_9522, %var_9523)
}

def @func_19106() -> Tensor[(4, 8, 8), float32] {
  @func_11838() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_13242() -> Tensor[(13, 15, 11), float64] {
  %1189 = @func_12185() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(10, 3, 9), float64]) */;
  %1189.1
}

def @func_4447(%var_4440: Tensor[(4, 8, 8), float32]) -> (Tensor[(4, 8, 8), float32],) {
  %1190 = cast(%var_4440, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %1191 = cos(%1190) /* ty=Tensor[(4, 8, 8), float32] */;
  (%1191,)
}

def @func_12901() -> (Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float64], Tensor[(208, 1), float64]) {
  %1192 = @func_10859() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %1193 = cast(meta[relay.Constant][96] /* ty=Tensor[(208, 1), float64] */, dtype="float64") /* ty=Tensor[(208, 1), float64] */;
  %1194 = reshape(%1193, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
  %1195 = %1192.0;
  %1196 = @func_8902(%1194) /* ty=Tensor[(13, 16, 1), float64] */;
  (%1195, %1196, meta[relay.Constant][96] /* ty=Tensor[(208, 1), float64] */)
}

def @func_15944() -> (Tensor[(4, 8, 8), float64],) {
  %1197 = @func_12699() /* ty=Tensor[(4, 8, 8), float64] */;
  (%1197,)
}

def @func_14877() -> (Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float64], Tensor[(9, 13, 3), float32]) {
  %1198 = @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */;
  %1199 = @func_14066() /* ty=(Tensor[(4, 8, 8), float64],) */;
  %1200 = @func_13770() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(9, 13, 3), float32]) */;
  %1201 = %1198.2;
  %1202 = %1199.0;
  %1203 = %1200.1;
  (%1201, %1202, %1203)
}

def @func_15921() -> (Tensor[(256), float32],) {
  %1204 = @func_15887() /* ty=(Tensor[(256), float32],) */;
  %1205 = %1204.0;
  (%1205,)
}

def @func_19370() -> (Tensor[(256), float32], Tensor[(256), float32]) {
  %1206 = @func_14735() /* ty=(Tensor[(256), float32],) */;
  %1207 = %1206.0;
  %1208 = @func_10492() /* ty=Tensor[(256), float32] */;
  (%1207, %1208)
}

def @func_21871() -> (Tensor[(256), float32],) {
  %1209 = @func_10832() /* ty=(Tensor[(256), float32],) */;
  %1210 = %1209.0;
  (%1210,)
}

def @func_20282() -> (Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) {
  %1211 = @func_17292() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32]) */;
  %1212 = @func_15171() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %1213 = %1211.1;
  %1214 = %1212.0;
  (%1213, %1214)
}

def @func_17581() -> Tensor[(256), float32] {
  %1215 = @func_17138() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) */;
  %1215.2
}

def @func_21455() -> (Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32]) {
  %1216 = @func_18701() /* ty=(Tensor[(4, 8, 8), float64],) */;
  %1217 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
  %1218 = %1216.0;
  %1219 = @func_12472() /* ty=Tensor[(4, 8, 8), float32] */;
  (%1217, %1218, %1219)
}

def @func_11370() -> Tensor[(4, 8, 8), float32] {
  @func_9888() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_16756() -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(256), float32], Tensor[(13, 15, 11), float32]) {
  %1220 = @func_15308() /* ty=(Tensor[(13, 15, 11), float64],) */;
  %1221 = @func_9868() /* ty=(Tensor[(256), float32],) */;
  %1222 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %1223 = @func_11906() /* ty=Tensor[(10, 3, 9), float64] */;
  %1224 = %1220.0;
  %1225 = %1221.0;
  %1226 = %1222.0;
  (%1223, %1224, %1225, %1226)
}

def @func_13770() -> (Tensor[(13, 15, 11), float32], Tensor[(9, 13, 3), float32]) {
  %1227 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %1228 = @func_11976() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) */;
  %1229 = %1228.1;
  %1230 = cast(%1229, dtype="float32") /* ty=Tensor[(9, 13, 3), float32] */;
  %1231 = %1227.0;
  %1232 = atan(%1230) /* ty=Tensor[(9, 13, 3), float32] */;
  (%1231, %1232)
}

def @func_15308() -> (Tensor[(13, 15, 11), float64],) {
  %1233 = @func_13242() /* ty=Tensor[(13, 15, 11), float64] */;
  (%1233,)
}

def @func_2181(%var_2155: Tensor[(72), float32], %var_2159: Tensor[(144), float32]) -> (Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(144), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(10, 3, 2), float32], Tensor[(26), float32], Tensor[(10, 12, 3), bool]) {
  %1234 = cast(%var_2155, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1235 = cast(%var_2155, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1236 = reshape(%1234, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %1237 = reshape(%1235, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %1238 = cast(meta[relay.Constant][97] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %1239 = cast(%var_2159, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1240 = reshape(%1238, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
  %1241 = reshape(%1239, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1242 = @func_889(%1240, %1241) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
  %1243 = cast(meta[relay.Constant][98] /* ty=Tensor[(26), float32] */, dtype="float32") /* ty=Tensor[(26), float32] */;
  %1244 = reshape(%1243, newshape=[13, 1, 2]) /* ty=Tensor[(13, 1, 2), float32] */;
  %1245 = @func_1768(%1244) /* ty=(Tensor[(13, 1, 2), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(1, 144), float32]) */;
  %1246 = cast(meta[relay.Constant][99] /* ty=Tensor[(10, 12, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 12, 3), float32] */;
  %1247 = sqrt(%1246) /* ty=Tensor[(10, 12, 3), float32] */;
  %1248 = cast(%1247, dtype="float64") /* ty=Tensor[(10, 12, 3), float64] */;
  %1249 = sinh(%1248) /* ty=Tensor[(10, 12, 3), float64] */;
  %1250 = cast(meta[relay.Constant][99] /* ty=Tensor[(10, 12, 3), float32] */, dtype="bool") /* ty=Tensor[(10, 12, 3), bool] */;
  %1251 = shape_of(%1249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1252 = cast(%1249, dtype="bool") /* ty=Tensor[(10, 12, 3), bool] */;
  %1253 = dyn.reshape(%1250, %1251, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1254 = @func_1277(%1236, %1237) /* ty=Tensor[(4, 6, 3), float32] */;
  %1255 = %1242.1;
  %1256 = %1245.1;
  %1257 = greater(%1252, %1253) /* ty=Tensor[(10, 12, 3), bool] */;
  (%1254, %var_2155, %1255, meta[relay.Constant][97] /* ty=Tensor[(60), int64] */, %var_2159, %1256, meta[relay.Constant][98] /* ty=Tensor[(26), float32] */, %1257)
}

def @func_10492() -> Tensor[(256), float32] {
  @func_9997() /* ty=Tensor[(256), float32] */
}

def @func_10883() -> Tensor[(10, 3, 9), float64] {
  %1258 = @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %1258.0
}

def @func_13918() -> (Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) {
  %1259 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %1260 = @func_11301() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %1261 = %1259.0;
  %1262 = %1260.0;
  %1263 = @func_13522() /* ty=Tensor[(10, 3, 9), float64] */;
  (%1261, %1262, %1263)
}

def @func_10569() -> (Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(528), uint16], Tensor[(130, 6), uint16], Tensor[(256), float32], Tensor[(528, 1), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) {
  %1264 = cast(meta[relay.Constant][100] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %1265 = reshape(%1264, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %1266 = @func_9943(%1265) /* ty=(Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) */;
  %1267 = cast(meta[relay.Constant][101] /* ty=Tensor[(528, 1), uint16] */, dtype="uint16") /* ty=Tensor[(528, 1), uint16] */;
  %1268 = cast(meta[relay.Constant][102] /* ty=Tensor[(130, 6), uint16] */, dtype="uint16") /* ty=Tensor[(130, 6), uint16] */;
  %1269 = cast(meta[relay.Constant][100] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %1270 = reshape(%1267, newshape=[528]) /* ty=Tensor[(528), uint16] */;
  %1271 = reshape(%1268, newshape=[5, 156]) /* ty=Tensor[(5, 156), uint16] */;
  %1272 = reshape(%1269, newshape=[1, 60]) /* ty=Tensor[(1, 60), int64] */;
  %1273 = @func_10159(%1270, %1271, %1272) /* ty=(Tensor[(4, 8, 8), float32], Tensor[(4, 6, 3), float32], Tensor[(528), uint16], Tensor[(13, 15, 11), float32], Tensor[(144), float32], Tensor[(5, 156), uint16], Tensor[(1, 60), int64]) */;
  %1274 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %1275 = cast(meta[relay.Constant][101] /* ty=Tensor[(528, 1), uint16] */, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
  %1276 = cast(meta[relay.Constant][103] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1277 = reshape(%1276, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
  %1278 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
  %1279 = %1266.3;
  %1280 = %1273.2;
  %1281 = %1274.0;
  %1282 = asin(%1275) /* ty=Tensor[(528, 1), float32] */;
  %1283 = @func_8902(%1277) /* ty=Tensor[(13, 16, 1), float64] */;
  (%1278, %1279, meta[relay.Constant][100] /* ty=Tensor[(60), int64] */, %1280, meta[relay.Constant][102] /* ty=Tensor[(130, 6), uint16] */, %1281, %1282, %1283, meta[relay.Constant][103] /* ty=Tensor[(208), float64] */)
}

def @func_19447() -> (Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float32]) {
  %1284 = @func_11197() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32]) */;
  %1285 = @func_13615() /* ty=Tensor[(13, 16, 1), float64] */;
  %1286 = cast(%1285, dtype="float32") /* ty=Tensor[(13, 16, 1), float32] */;
  %1287 = %1284.0;
  %1288 = log10(%1286) /* ty=Tensor[(13, 16, 1), float32] */;
  (%1287, %1288)
}

def @func_15619() -> (Tensor[(4, 8, 8), float64],) {
  %1289 = @func_12699() /* ty=Tensor[(4, 8, 8), float64] */;
  (%1289,)
}

def @func_14288(%var_14196: uint8) -> (Tensor[(3), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 11, 256), int8], Tensor[(3, 1, 256), bool]) {
  %1290 = cast(%var_14196, dtype="uint8") /* ty=uint8 */;
  %1291 = cast(meta[relay.Constant][105] /* ty=Tensor[(4, 11, 1), uint8] */, dtype="uint8") /* ty=Tensor[(4, 11, 1), uint8] */;
  %1292 = add(%1290, %1291) /* ty=Tensor[(4, 11, 1), uint8] */;
  %1293 = @func_10492() /* ty=Tensor[(256), float32] */;
  %1294 = cast(%1292, dtype="int8") /* ty=Tensor[(4, 11, 1), int8] */;
  %1295 = cast(%1293, dtype="int8") /* ty=Tensor[(256), int8] */;
  %1296 = cast(meta[relay.Constant][104] /* ty=Tensor[(3), float64] */, dtype="float64") /* ty=Tensor[(3), float64] */;
  %1297 = reshape(%1296, newshape=[3, 1]) /* ty=Tensor[(3, 1), float64] */;
  %1298 = @func_13557(%1297) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(3, 1, 1), float64], Tensor[(3, 1), float64], Tensor[(24, 22), uint16]) */;
  %1299 = %1298.1;
  %1300 = cast(%1299, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %1301 = cast(%1293, dtype="bool") /* ty=Tensor[(256), bool] */;
  %1302 = @func_11838() /* ty=Tensor[(4, 8, 8), float32] */;
  %1303 = add(%1294, %1295) /* ty=Tensor[(4, 11, 256), int8] */;
  %1304 = less(%1300, %1301) /* ty=Tensor[(3, 1, 256), bool] */;
  (meta[relay.Constant][104] /* ty=Tensor[(3), float64] */, %1302, %1303, %1304)
}

def @func_20962() -> Tensor[(10, 3, 9), float64] {
  %1305 = @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %1305.0
}

def @func_16271(%var_16229: uint16) -> (Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(6, 2, 12), float32], Tensor[(1080), float64], Tensor[(144), float32], Tensor[(144), float32], Tensor[(3, 20), int64]) {
  %1306 = cast(%var_16229, dtype="uint16") /* ty=uint16 */;
  %1307 = cast(meta[relay.Constant][106] /* ty=Tensor[(528), uint16] */, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %1308 = reshape(%1306, newshape=[]) /* ty=uint16 */;
  %1309 = reshape(%1307, newshape=[528]) /* ty=Tensor[(528), uint16] */;
  %1310 = @func_9133(%1308, %1309) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(60), int64], Tensor[(26), float32]) */;
  %1311 = cast(meta[relay.Constant][107] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1312 = cast(meta[relay.Constant][107] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1313 = reshape(%1311, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %1314 = reshape(%1312, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %1315 = cast(meta[relay.Constant][108] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %1316 = cast(meta[relay.Constant][109] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1317 = reshape(%1315, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float64] */;
  %1318 = reshape(%1316, newshape=[24, 6]) /* ty=Tensor[(24, 6), float32] */;
  %1319 = @func_6278(%1317, %1318) /* ty=(Tensor[(6, 15, 12), float64], Tensor[(6, 2, 12), float32], Tensor[(24, 6), float32]) */;
  %1320 = cast(meta[relay.Constant][110] /* ty=Tensor[(3, 20), int64] */, dtype="int64") /* ty=Tensor[(3, 20), int64] */;
  %1321 = reshape(%1320, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %1322 = @func_9943(%1321) /* ty=(Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) */;
  %1323 = @func_15185() /* ty=Tensor[(4, 8, 8), float64] */;
  %1324 = @func_13798() /* ty=Tensor[(10, 3, 9), float64] */;
  %1325 = %1310.1;
  %1326 = @func_1277(%1313, %1314) /* ty=Tensor[(4, 6, 3), float32] */;
  %1327 = %1319.1;
  %1328 = %1322.1;
  (%1323, %1324, %1325, %var_16229, meta[relay.Constant][106] /* ty=Tensor[(528), uint16] */, %1326, meta[relay.Constant][107] /* ty=Tensor[(72), float32] */, %1327, meta[relay.Constant][108] /* ty=Tensor[(1080), float64] */, meta[relay.Constant][109] /* ty=Tensor[(144), float32] */, %1328, meta[relay.Constant][110] /* ty=Tensor[(3, 20), int64] */)
}

def @func_19994() -> (Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float32]) {
  %1329 = @func_17427() /* ty=(Tensor[(256), float32], Tensor[(10, 3, 9), float64]) */;
  %1330 = @func_19447() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float32]) */;
  %1331 = @func_12123() /* ty=Tensor[(4, 8, 8), float64] */;
  %1332 = %1329.1;
  %1333 = %1330.0;
  (%1331, %1332, %1333)
}

def @func_19752() -> (Tensor[(256), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) {
  %1334 = @func_17138() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) */;
  %1335 = cast(meta[relay.Constant][111] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1336 = reshape(%1335, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
  %1337 = %1334.2;
  %1338 = @func_8902(%1336) /* ty=Tensor[(13, 16, 1), float64] */;
  (%1337, %1338, meta[relay.Constant][111] /* ty=Tensor[(208), float64] */)
}

def @func_20406(%var_20395: Tensor[(12, 8, 8), float64]) -> Tensor[(12, 8, 8), float64] {
  %1339 = cast(%var_20395, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  asin(%1339) /* ty=Tensor[(12, 8, 8), float64] */
}

def @func_21977(%var_21963: Tensor[(72), float32]) -> (Tensor[(13, 15, 11), float32], Tensor[(256), float32], Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(256), float32]) {
  %1340 = @func_19752() /* ty=(Tensor[(256), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %1341 = cast(%var_21963, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1342 = cast(%var_21963, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1343 = reshape(%1341, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %1344 = reshape(%1342, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %1345 = @func_19752() /* ty=(Tensor[(256), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %1346 = @func_21008() /* ty=Tensor[(13, 15, 11), float32] */;
  %1347 = %1340.0;
  %1348 = @func_1277(%1343, %1344) /* ty=Tensor[(4, 6, 3), float32] */;
  %1349 = %1345.0;
  (%1346, %1347, %1348, %var_21963, %1349)
}

def @func_11115() -> Tensor[(13, 15, 11), float32] {
  %1350 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %1350.0
}

def @func_21669() -> (Tensor[(208, 1), float64], Tensor[(3, 8, 15), float64], Tensor[(360), float64]) {
  %1351 = @func_12901() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float64], Tensor[(208, 1), float64]) */;
  %1352 = cast(meta[relay.Constant][112] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1353 = cast(meta[relay.Constant][112] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1354 = reshape(%1352, newshape=[3, 8, 15]) /* ty=Tensor[(3, 8, 15), float64] */;
  %1355 = reshape(%1353, newshape=[3, 8, 15]) /* ty=Tensor[(3, 8, 15), float64] */;
  %1356 = @func_12645(%1354, %1355) /* ty=(Tensor[(3, 8, 15), float64],) */;
  %1357 = %1351.2;
  %1358 = %1356.0;
  (%1357, %1358, meta[relay.Constant][112] /* ty=Tensor[(360), float64] */)
}

def @func_13557(%var_13549: Tensor[(3, 1), float64]) -> (Tensor[(10, 3, 9), float64], Tensor[(3, 1, 1), float64], Tensor[(3, 1), float64], Tensor[(24, 22), uint16]) {
  %1359 = cast(%var_13549, dtype="float64") /* ty=Tensor[(3, 1), float64] */;
  %1360 = cast(meta[relay.Constant][113] /* ty=Tensor[(24, 22), uint16] */, dtype="uint16") /* ty=Tensor[(24, 22), uint16] */;
  %1361 = reshape(%1359, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float64] */;
  %1362 = reshape(%1360, newshape=[528]) /* ty=Tensor[(528), uint16] */;
  %1363 = @func_8844(%1361, %1362) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(144), float32], Tensor[(780), uint16], Tensor[(15, 4), int64]) */;
  %1364 = @func_10883() /* ty=Tensor[(10, 3, 9), float64] */;
  %1365 = %1363.0;
  (%1364, %1365, %var_13549, meta[relay.Constant][113] /* ty=Tensor[(24, 22), uint16] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4826(%var_4823: Tensor[(4, 7, 11), uint8], %var_4824: Tensor[(4, 7, 11), uint8], %var_4825: Tensor[(1, 4), float32]) -> (Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) {
  @func_4821(%var_4823, %var_4824, %var_4825) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */
}

def @func_20783() -> Tensor[(256), float32] {
  %0 = @func_17138() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) */;
  %0.2
}

def @func_14327() -> (Tensor[(256), float32], Tensor[(13, 15, 11), float64]) {
  %1 = @func_10569() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(528), uint16], Tensor[(130, 6), uint16], Tensor[(256), float32], Tensor[(528, 1), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %2 = %1.5;
  %3 = @func_13242() /* ty=Tensor[(13, 15, 11), float64] */;
  (%2, %3)
}

def @func_3376(%var_3374: Tensor[(2, 2, 1), float32], %var_3375: Tensor[(72), float32]) -> (Tensor[(2, 2, 1), float32], Tensor[(10, 12, 3), bool], Tensor[(72), float32], Tensor[(144), float32], Tensor[(6, 2, 12), float32], Tensor[(6, 2, 12), float32], Tensor[(5, 13, 3), float64], Tensor[(195), float64]) {
  @func_3372(%var_3374, %var_3375) /* ty=(Tensor[(2, 2, 1), float32], Tensor[(10, 12, 3), bool], Tensor[(72), float32], Tensor[(144), float32], Tensor[(6, 2, 12), float32], Tensor[(6, 2, 12), float32], Tensor[(5, 13, 3), float64], Tensor[(195), float64]) */
}

def @func_17139() -> (Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) {
  %9 = fn () -> (Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) {
    %4 = @func_13809() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %5 = @func_17009() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(351), float64]) */;
    %6 = %4.0;
    %7 = %5.1;
    %8 = @func_14747() /* ty=Tensor[(256), float32] */;
    (%6, %7, %8)
  };
  %9() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) */
}

def @func_13094() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) {
  %10 = @func_11838() /* ty=Tensor[(4, 8, 8), float32] */;
  %11 = cast(%10, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %12 = reshape(%11, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
  %13 = @func_4447(%12) /* ty=(Tensor[(4, 8, 8), float32],) */;
  %14 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %15 = @func_11536() /* ty=Tensor[(13, 15, 11), float32] */;
  %16 = %13.0;
  %17 = %14.0;
  (%15, %10, %16, %17)
}

def @func_14428() -> (Tensor[(13, 15, 11), float32],) {
  %18 = @func_10430() /* ty=Tensor[(13, 15, 11), float32] */;
  (%18,)
}

def @func_18654() -> (Tensor[(208), float64], Tensor[(256), float32]) {
  %19 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %20 = @func_14735() /* ty=(Tensor[(256), float32],) */;
  %21 = %19.2;
  %22 = %20.0;
  (%21, %22)
}

def @func_13096() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) {
  @func_13094() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */
}

def @func_9946(%var_9944: Tensor[(60), int64]) -> (Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) {
  @func_9943(%var_9944) /* ty=(Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) */
}

def @func_10883() -> Tensor[(10, 3, 9), float64] {
  %23 = @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %23.0
}

def @func_12123() -> Tensor[(4, 8, 8), float64] {
  %24 = @func_11838() /* ty=Tensor[(4, 8, 8), float32] */;
  %25 = cast(%24, dtype="float64") /* ty=Tensor[(4, 8, 8), float64] */;
  %26 = sqrt(%25) /* ty=Tensor[(4, 8, 8), float64] */;
  %27 = cast(%26, dtype="float64") /* ty=Tensor[(4, 8, 8), float64] */;
  atan(%27) /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_17011() -> (Tensor[(4, 8, 8), float32], Tensor[(351), float64]) {
  @func_17009() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(351), float64]) */
}

def @func_17966(%var_17964: float64) -> (Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(1, 2, 12), float64], Tensor[(24), float64], Tensor[(130, 6), uint16], float64, Tensor[(528), uint16], Tensor[(2240), int64]) {
  @func_17963(%var_17964) /* ty=(Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(1, 2, 12), float64], Tensor[(24), float64], Tensor[(130, 6), uint16], float64, Tensor[(528), uint16], Tensor[(2240), int64]) */
}

def @func_16827() -> Tensor[(10, 3, 9), float64] {
  @func_11906() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_9325() -> (Tensor[(10, 3, 9), float64],) {
  @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */
}

def @func_10419(%var_10416: Tensor[(780), uint16], %var_10417: Tensor[(2240), int64], %var_10418: Tensor[(1680, 1), float64]) -> (Tensor[(10, 3, 9), float64], Tensor[(72), float32], Tensor[(448), bool], Tensor[(780), uint16], Tensor[(2240), int64], Tensor[(10, 3, 9), float64], Tensor[(1680, 144), int64], Tensor[(256), float32], Tensor[(6, 2, 12), float32], Tensor[(60), int64]) {
  %57 = fn (%var_10321: Tensor[(780), uint16], %var_10322: Tensor[(2240), int64], %var_10344: Tensor[(1680, 1), float64]) -> (Tensor[(10, 3, 9), float64], Tensor[(72), float32], Tensor[(448), bool], Tensor[(780), uint16], Tensor[(2240), int64], Tensor[(10, 3, 9), float64], Tensor[(1680, 144), int64], Tensor[(256), float32], Tensor[(6, 2, 12), float32], Tensor[(60), int64]) {
    %28 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
    %29 = cast(meta[relay.Constant][0] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
    %30 = cast(%var_10321, dtype="uint16") /* ty=Tensor[(780), uint16] */;
    %31 = cast(%var_10322, dtype="int64") /* ty=Tensor[(2240), int64] */;
    %32 = reshape(%29, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
    %33 = reshape(%30, newshape=[780]) /* ty=Tensor[(780), uint16] */;
    %34 = reshape(%31, newshape=[28, 80]) /* ty=Tensor[(28, 80), int64] */;
    %35 = @func_6163(%32, %33, %34) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(72), float32], Tensor[(780), uint16], Tensor[(72), float32], Tensor[(28, 80), uint8]) */;
    %36 = %28.0;
    %37 = cast(%36, dtype="float32") /* ty=Tensor[(10, 3, 9), float32] */;
    %38 = reshape(%37, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
    %39 = @func_5882(%38) /* ty=(Tensor[(10, 3, 9), float64],) */;
    %40 = cast(%var_10344, dtype="float64") /* ty=Tensor[(1680, 1), float64] */;
    %41 = reshape(%40, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), float64] */;
    %42 = @func_3586(%41) /* ty=(Tensor[(8, 15, 14), float64], Tensor[(6, 2, 12), float32], Tensor[(144), float32]) */;
    %43 = %42.2;
    %44 = cast(%43, dtype="int64") /* ty=Tensor[(144), int64] */;
    %45 = cast(%var_10344, dtype="int64") /* ty=Tensor[(1680, 1), int64] */;
    %46 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
    %47 = cast(meta[relay.Constant][1] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
    %48 = cast(%43, dtype="float32") /* ty=Tensor[(144), float32] */;
    %49 = reshape(%47, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
    %50 = reshape(%48, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %51 = @func_889(%49, %50) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
    %52 = %35.7;
    %53 = %39.0;
    %54 = subtract(%44, %45) /* ty=Tensor[(1680, 144), int64] */;
    %55 = %46.2;
    %56 = %51.0;
    (%36, %52, meta[relay.Constant][0] /* ty=Tensor[(448), bool] */, %var_10321, %var_10322, %53, %54, %55, %56, meta[relay.Constant][1] /* ty=Tensor[(60), int64] */)
  };
  %57(%var_10416, %var_10417, %var_10418) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(72), float32], Tensor[(448), bool], Tensor[(780), uint16], Tensor[(2240), int64], Tensor[(10, 3, 9), float64], Tensor[(1680, 144), int64], Tensor[(256), float32], Tensor[(6, 2, 12), float32], Tensor[(60), int64]) */
}

def @func_13523() -> Tensor[(10, 3, 9), float64] {
  %59 = fn () -> Tensor[(10, 3, 9), float64] {
    %58 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
    %58.0
  };
  %59() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_20554(%var_20552: Tensor[(6240, 8), float64], %var_20553: Tensor[(4, 528), int8]) -> (Tensor[(1680), float64], Tensor[(60), int64], Tensor[(6240, 8), float64], Tensor[(4, 528), bool]) {
  %78 = fn (%var_20519: Tensor[(6240, 8), float64], %var_20531: Tensor[(4, 528), int8]) -> (Tensor[(1680), float64], Tensor[(60), int64], Tensor[(6240, 8), float64], Tensor[(4, 528), bool]) {
    %60 = @func_11102() /* ty=(Tensor[(208), float64], Tensor[(256), float32], Tensor[(4), float32], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(1, 4), float32]) */;
    %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
    %62 = cast(%var_20519, dtype="float64") /* ty=Tensor[(6240, 8), float64] */;
    %63 = reshape(%61, newshape=[30, 2]) /* ty=Tensor[(30, 2), int64] */;
    %64 = reshape(%62, newshape=[13, 16, 240]) /* ty=Tensor[(13, 16, 240), float64] */;
    %65 = @func_15740(%63, %64) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(30, 2), int64], Tensor[(144), float32], Tensor[(4, 528), int8], Tensor[(13, 16, 240), float64]) */;
    %66 = %65.3;
    %67 = cast(%var_20531, dtype="int8") /* ty=Tensor[(4, 528), int8] */;
    %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(2), int32] */;
    %69 = cast(%66, dtype="int8") /* ty=Tensor[(4, 528), int8] */;
    %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %71 = bitwise_and(%69, %70) /* ty=Tensor[(4, 528), int8] */;
    %72 = cast(%66, dtype="bool") /* ty=Tensor[(4, 528), bool] */;
    %73 = shape_of(%71, dtype="int32") /* ty=Tensor[(2), int32] */;
    %74 = cast(%71, dtype="bool") /* ty=Tensor[(4, 528), bool] */;
    %75 = dyn.reshape(%72, %73, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %76 = %60.3;
    %77 = greater_equal(%74, %75) /* ty=Tensor[(4, 528), bool] */;
    (%76, meta[relay.Constant][2] /* ty=Tensor[(60), int64] */, %var_20519, %77)
  };
  %78(%var_20552, %var_20553) /* ty=(Tensor[(1680), float64], Tensor[(60), int64], Tensor[(6240, 8), float64], Tensor[(4, 528), bool]) */
}

def @func_21389() -> (Tensor[(10, 3, 9), float64],) {
  %79 = @func_11906() /* ty=Tensor[(10, 3, 9), float64] */;
  %80 = cast(%79, dtype="float64") /* ty=Tensor[(10, 3, 9), float64] */;
  %81 = cosh(%80) /* ty=Tensor[(10, 3, 9), float64] */;
  (%81,)
}

def @func_15889() -> (Tensor[(256), float32],) {
  @func_15887() /* ty=(Tensor[(256), float32],) */
}

def @func_21455() -> (Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32]) {
  %82 = @func_18701() /* ty=(Tensor[(4, 8, 8), float64],) */;
  %83 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
  %84 = %82.0;
  %85 = @func_12472() /* ty=Tensor[(4, 8, 8), float32] */;
  (%83, %84, %85)
}

def @func_19593(%var_19591: Tensor[(144), float32]) -> (Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(13, 15, 11), float32], Tensor[(144), float32]) {
  @func_19590(%var_19591) /* ty=(Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(13, 15, 11), float32], Tensor[(144), float32]) */
}

def @func_10492() -> Tensor[(256), float32] {
  @func_9997() /* ty=Tensor[(256), float32] */
}

def @func_5712(%var_5711: Tensor[(9, 13, 3), float64]) -> Tensor[(9, 13, 3), float64] {
  %87 = fn (%var_5696: Tensor[(9, 13, 3), float64]) -> Tensor[(9, 13, 3), float64] {
    %86 = cast(%var_5696, dtype="float64") /* ty=Tensor[(9, 13, 3), float64] */;
    tan(%86) /* ty=Tensor[(9, 13, 3), float64] */
  };
  %87(%var_5711) /* ty=Tensor[(9, 13, 3), float64] */
}

def @func_10832() -> (Tensor[(256), float32],) {
  %88 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %89 = %88.2;
  (%89,)
}

def @func_11255() -> Tensor[(256), float32] {
  @func_11253() /* ty=Tensor[(256), float32] */
}

def @func_11517(%var_11515: Tensor[(270), float32], %var_11516: Tensor[(16, 3, 5), float64]) -> (Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(16, 3, 5), bool]) {
  @func_11513(%var_11515, %var_11516) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(16, 3, 5), bool]) */
}

def @func_20283() -> (Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) {
  %94 = fn () -> (Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) {
    %90 = @func_17292() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32]) */;
    %91 = @func_15171() /* ty=(Tensor[(10, 3, 9), float64],) */;
    %92 = %90.1;
    %93 = %91.0;
    (%92, %93)
  };
  %94() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */
}

def @func_6281(%var_6279: Tensor[(6, 15, 12), float64], %var_6280: Tensor[(24, 6), float32]) -> (Tensor[(6, 15, 12), float64], Tensor[(6, 2, 12), float32], Tensor[(24, 6), float32]) {
  %101 = fn (%var_6263: Tensor[(6, 15, 12), float64], %var_6267: Tensor[(24, 6), float32]) -> (Tensor[(6, 15, 12), float64], Tensor[(6, 2, 12), float32], Tensor[(24, 6), float32]) {
    %95 = cast(%var_6263, dtype="float64") /* ty=Tensor[(6, 15, 12), float64] */;
    %96 = cast(%var_6267, dtype="float32") /* ty=Tensor[(24, 6), float32] */;
    %97 = reshape(%96, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float32] */;
    %98 = @func_154(%97) /* ty=(Tensor[(6, 2, 12), float32],) */;
    %99 = acosh(%95) /* ty=Tensor[(6, 15, 12), float64] */;
    %100 = %98.0;
    (%99, %100, %var_6267)
  };
  %101(%var_6279, %var_6280) /* ty=(Tensor[(6, 15, 12), float64], Tensor[(6, 2, 12), float32], Tensor[(24, 6), float32]) */
}

def @func_13918() -> (Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) {
  %102 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %103 = @func_11301() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %104 = %102.0;
  %105 = %103.0;
  %106 = @func_13522() /* ty=Tensor[(10, 3, 9), float64] */;
  (%104, %105, %106)
}

def @func_10109() -> (Tensor[(90, 3), float32], Tensor[(4, 8, 8), float32]) {
  %107 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %108 = %107.2;
  %109 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
  (%108, %109)
}

def @func_11708(%var_11707: Tensor[(880), float32]) -> (Tensor[(10, 3, 9), float64], Tensor[(256), float32], Tensor[(5, 16, 11), float32], Tensor[(880), float32]) {
  %117 = fn (%var_11671: Tensor[(880), float32]) -> (Tensor[(10, 3, 9), float64], Tensor[(256), float32], Tensor[(5, 16, 11), float32], Tensor[(880), float32]) {
    %110 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
    %111 = @func_10980() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(351), float64], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(4), float32], Tensor[(121, 1), int8], Tensor[(?, 11, 11), float64]) */;
    %112 = cast(%var_11671, dtype="float32") /* ty=Tensor[(880), float32] */;
    %113 = reshape(%112, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float32] */;
    %114 = %110.1;
    %115 = %111.1;
    %116 = @func_5078(%113) /* ty=Tensor[(5, 16, 11), float32] */;
    (%114, %115, %116, %var_11671)
  };
  %117(%var_11707) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(256), float32], Tensor[(5, 16, 11), float32], Tensor[(880), float32]) */
}

def @func_13615() -> Tensor[(13, 16, 1), float64] {
  %118 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %118.1
}

def @func_10570() -> (Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(528), uint16], Tensor[(130, 6), uint16], Tensor[(256), float32], Tensor[(528, 1), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) {
  %139 = fn () -> (Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(528), uint16], Tensor[(130, 6), uint16], Tensor[(256), float32], Tensor[(528, 1), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) {
    %119 = cast(meta[relay.Constant][3] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
    %120 = reshape(%119, newshape=[60]) /* ty=Tensor[(60), int64] */;
    %121 = @func_9943(%120) /* ty=(Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) */;
    %122 = cast(meta[relay.Constant][4] /* ty=Tensor[(528, 1), uint16] */, dtype="uint16") /* ty=Tensor[(528, 1), uint16] */;
    %123 = cast(meta[relay.Constant][5] /* ty=Tensor[(130, 6), uint16] */, dtype="uint16") /* ty=Tensor[(130, 6), uint16] */;
    %124 = cast(meta[relay.Constant][3] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
    %125 = reshape(%122, newshape=[528]) /* ty=Tensor[(528), uint16] */;
    %126 = reshape(%123, newshape=[5, 156]) /* ty=Tensor[(5, 156), uint16] */;
    %127 = reshape(%124, newshape=[1, 60]) /* ty=Tensor[(1, 60), int64] */;
    %128 = @func_10159(%125, %126, %127) /* ty=(Tensor[(4, 8, 8), float32], Tensor[(4, 6, 3), float32], Tensor[(528), uint16], Tensor[(13, 15, 11), float32], Tensor[(144), float32], Tensor[(5, 156), uint16], Tensor[(1, 60), int64]) */;
    %129 = @func_9104() /* ty=(Tensor[(256), float32],) */;
    %130 = cast(meta[relay.Constant][4] /* ty=Tensor[(528, 1), uint16] */, dtype="float32") /* ty=Tensor[(528, 1), float32] */;
    %131 = cast(meta[relay.Constant][6] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
    %132 = reshape(%131, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
    %133 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
    %134 = %121.3;
    %135 = %128.2;
    %136 = %129.0;
    %137 = asin(%130) /* ty=Tensor[(528, 1), float32] */;
    %138 = @func_8902(%132) /* ty=Tensor[(13, 16, 1), float64] */;
    (%133, %134, meta[relay.Constant][3] /* ty=Tensor[(60), int64] */, %135, meta[relay.Constant][5] /* ty=Tensor[(130, 6), uint16] */, %136, %137, %138, meta[relay.Constant][6] /* ty=Tensor[(208), float64] */)
  };
  %139() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(528), uint16], Tensor[(130, 6), uint16], Tensor[(256), float32], Tensor[(528, 1), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */
}

def @func_20953() -> Tensor[(10, 3, 9), float64] {
  @func_13522() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_21010() -> Tensor[(13, 15, 11), float32] {
  @func_21008() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_9888() -> Tensor[(4, 8, 8), float32] {
  %140 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %140.0
}

def @func_12700() -> Tensor[(4, 8, 8), float64] {
  %141 = fn () -> Tensor[(4, 8, 8), float64] {
    @func_12123() /* ty=Tensor[(4, 8, 8), float64] */
  };
  %141() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_5472(%var_5464: uint16, %var_5465: Tensor[(11, 16, 3), uint16]) -> (Tensor[(11, 16, 3), bool],) {
  %142 = cast(%var_5464, dtype="bool") /* ty=bool */;
  %143 = cast(%var_5465, dtype="bool") /* ty=Tensor[(11, 16, 3), bool] */;
  %144 = less_equal(%142, %143) /* ty=Tensor[(11, 16, 3), bool] */;
  (%144,)
}

def @func_19546() -> Tensor[(256), float32] {
  @func_19544() /* ty=Tensor[(256), float32] */
}

def @func_11102() -> (Tensor[(208), float64], Tensor[(256), float32], Tensor[(4), float32], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(1, 4), float32]) {
  %145 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %146 = @func_9868() /* ty=(Tensor[(256), float32],) */;
  %147 = cast(meta[relay.Constant][7] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %148 = cast(meta[relay.Constant][8] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %149 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 4), float32] */, dtype="float32") /* ty=Tensor[(1, 4), float32] */;
  %150 = reshape(%147, newshape=[7, 16, 15]) /* ty=Tensor[(7, 16, 15), float64] */;
  %151 = reshape(%148, newshape=[1, 195]) /* ty=Tensor[(1, 195), float64] */;
  %152 = reshape(%149, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %153 = @func_7149(%150, %151, %152) /* ty=(Tensor[(7, 16, 15), bool], Tensor[(144), float32], Tensor[(5, 13, 3), float64], Tensor[(1, 195), float64], Tensor[(8, 15, 14), float64], Tensor[(4, 7, 11), bool], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(1, 4), float32]) */;
  %154 = %145.2;
  %155 = %146.0;
  %156 = %153.7;
  (%154, %155, %156, meta[relay.Constant][7] /* ty=Tensor[(1680), float64] */, meta[relay.Constant][8] /* ty=Tensor[(195), float64] */, meta[relay.Constant][9] /* ty=Tensor[(1, 4), float32] */)
}

def @func_9528(%var_9526: Tensor[(60), int64], %var_9527: Tensor[(144), float32]) -> (Tensor[(256), float32], Tensor[(5, 16, 11), uint64], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32]) {
  %173 = fn (%var_9522: Tensor[(60), int64], %var_9523: Tensor[(144), float32]) -> (Tensor[(256), float32], Tensor[(5, 16, 11), uint64], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32]) {
    %157 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
    %158 = cast(meta[relay.Constant][10] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
    %159 = reshape(%158, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float32] */;
    %160 = @func_5078(%159) /* ty=Tensor[(5, 16, 11), float32] */;
    %161 = cast(meta[relay.Constant][10] /* ty=Tensor[(880), float32] */, dtype="uint64") /* ty=Tensor[(880), uint64] */;
    %162 = shape_of(%160, dtype="int32") /* ty=Tensor[(3), int32] */;
    %163 = cast(%160, dtype="uint64") /* ty=Tensor[(5, 16, 11), uint64] */;
    %164 = dyn.reshape(%161, %162, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %165 = cast(%var_9522, dtype="int64") /* ty=Tensor[(60), int64] */;
    %166 = cast(%var_9523, dtype="float32") /* ty=Tensor[(144), float32] */;
    %167 = reshape(%165, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
    %168 = reshape(%166, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %169 = @func_889(%167, %168) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
    %170 = %157.2;
    %171 = bitwise_and(%163, %164) /* ty=Tensor[(5, 16, 11), uint64] */;
    %172 = %169.2;
    (%170, %171, %172, %var_9522, %var_9523)
  };
  %173(%var_9526, %var_9527) /* ty=(Tensor[(256), float32], Tensor[(5, 16, 11), uint64], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32]) */
}

def @func_14625() -> Tensor[(10, 3, 9), float32] {
  @func_14623() /* ty=Tensor[(10, 3, 9), float32] */
}

def @func_12028() -> Tensor[(13, 15, 11), float32] {
  @func_12026() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_4331(%var_4279: Tensor[(16, 10, 14), int64], %var_4297: Tensor[(780), uint16], %var_4327: Tensor[(72), float32]) -> (Tensor[(16, 10, 14), bool], Tensor[(780), uint16], Tensor[(144), float32], Tensor[(60, ?), uint16], Tensor[(4, 6, 3), float32], Tensor[(72), float32]) {
  %174 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 10, 14), int64] */, dtype="bool") /* ty=Tensor[(16, 10, 14), bool] */;
  %175 = shape_of(%var_4279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%var_4279, dtype="bool") /* ty=Tensor[(16, 10, 14), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %178 = cast(%var_4297, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %179 = cast(%var_4297, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %180 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %181 = reshape(%179, newshape=[10, 13, 6]) /* ty=Tensor[(10, 13, 6), uint16] */;
  %182 = reshape(%180, newshape=[60, 1]) /* ty=Tensor[(60, 1), int64] */;
  %183 = @func_1894(%181, %182) /* ty=(Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) */;
  %184 = %183.2;
  %185 = cast(%184, dtype="int64") /* ty=Tensor[(60, 1), int64] */;
  %186 = reshape(%178, newshape=[10, 13, 6]) /* ty=Tensor[(10, 13, 6), uint16] */;
  %187 = reshape(%185, newshape=[60, 1]) /* ty=Tensor[(60, 1), int64] */;
  %188 = @func_1894(%186, %187) /* ty=(Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) */;
  %189 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), int64] */, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %190 = shape_of(%184, dtype="int32") /* ty=Tensor[(2), int32] */;
  %191 = cast(%184, dtype="uint16") /* ty=Tensor[(60, 1), uint16] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %193 = cast(%var_4327, dtype="float32") /* ty=Tensor[(72), float32] */;
  %194 = cast(%var_4327, dtype="float32") /* ty=Tensor[(72), float32] */;
  %195 = reshape(%193, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %196 = reshape(%194, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %197 = greater_equal(%176, %177) /* ty=Tensor[(16, 10, 14), bool] */;
  %198 = %188.3;
  %199 = right_shift(%191, %192) /* ty=Tensor[(60, ?), uint16] */;
  %200 = @func_1277(%195, %196) /* ty=Tensor[(4, 6, 3), float32] */;
  (%197, %var_4297, %198, %199, %200, %var_4327)
}

def @func_15781() -> Tensor[(10, 3, 9), float64] {
  %201 = fn () -> Tensor[(10, 3, 9), float64] {
    @func_10883() /* ty=Tensor[(10, 3, 9), float64] */
  };
  %201() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_20481() -> (Tensor[(10, 3, 9), float64],) {
  %203 = fn () -> (Tensor[(10, 3, 9), float64],) {
    %202 = @func_12423() /* ty=Tensor[(10, 3, 9), float64] */;
    (%202,)
  };
  %203() /* ty=(Tensor[(10, 3, 9), float64],) */
}

def @func_11253() -> Tensor[(256), float32] {
  %204 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %204.2
}

def @func_13651() -> Tensor[(256), float32] {
  %206 = fn () -> Tensor[(256), float32] {
    %205 = @func_9104() /* ty=(Tensor[(256), float32],) */;
    %205.0
  };
  %206() /* ty=Tensor[(256), float32] */
}

def @func_20859(%var_20858: Tensor[(24), float64]) -> (Tensor[(11, 9, 7), float64], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(24), float64], Tensor[(256), float32], Tensor[(4, 6, 3), float32], Tensor[(72), float32]) {
  %222 = fn (%var_20841: Tensor[(24), float64]) -> (Tensor[(11, 9, 7), float64], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(24), float64], Tensor[(256), float32], Tensor[(4, 6, 3), float32], Tensor[(72), float32]) {
    %207 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 9, 7), float64] */, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
    %208 = @func_17138() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) */;
    %209 = cast(%var_20841, dtype="float64") /* ty=Tensor[(24), float64] */;
    %210 = reshape(%209, newshape=[24]) /* ty=Tensor[(24), float64] */;
    %211 = @func_12582(%210) /* ty=(Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(1, 2, 12), float64], Tensor[(24), float64], Tensor[(13, 16, 1), float64], Tensor[(208), float64], Tensor[(13, 16, 1), float64], Tensor[(256), float32]) */;
    %212 = @func_15887() /* ty=(Tensor[(256), float32],) */;
    %213 = cast(meta[relay.Constant][14] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %214 = cast(meta[relay.Constant][14] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %215 = reshape(%213, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
    %216 = reshape(%214, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
    %217 = cos(%207) /* ty=Tensor[(11, 9, 7), float64] */;
    %218 = %208.2;
    %219 = %211.0;
    %220 = %212.0;
    %221 = @func_1277(%215, %216) /* ty=Tensor[(4, 6, 3), float32] */;
    (%217, %218, %219, %var_20841, %220, %221, meta[relay.Constant][14] /* ty=Tensor[(72), float32] */)
  };
  %222(%var_20858) /* ty=(Tensor[(11, 9, 7), float64], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(24), float64], Tensor[(256), float32], Tensor[(4, 6, 3), float32], Tensor[(72), float32]) */
}

def @func_11197() -> (Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32]) {
  %223 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %224 = %223.1;
  %225 = @func_11115() /* ty=Tensor[(13, 15, 11), float32] */;
  (%224, %225)
}

def @func_15310() -> (Tensor[(13, 15, 11), float64],) {
  @func_15308() /* ty=(Tensor[(13, 15, 11), float64],) */
}

def @func_9913() -> (Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) {
  %226 = cast(meta[relay.Constant][15] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %227 = reshape(%226, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
  %228 = @func_9160() /* ty=Tensor[(13, 15, 11), float32] */;
  %229 = @func_8902(%227) /* ty=Tensor[(13, 16, 1), float64] */;
  (%228, %229, meta[relay.Constant][15] /* ty=Tensor[(208), float64] */)
}

def @func_18703() -> (Tensor[(4, 8, 8), float64],) {
  @func_18701() /* ty=(Tensor[(4, 8, 8), float64],) */
}

def @func_12319() -> (Tensor[(4, 8, 8), float32],) {
  @func_12317() /* ty=(Tensor[(4, 8, 8), float32],) */
}

def @func_13559(%var_13558: Tensor[(3, 1), float64]) -> (Tensor[(10, 3, 9), float64], Tensor[(3, 1, 1), float64], Tensor[(3, 1), float64], Tensor[(24, 22), uint16]) {
  %237 = fn (%var_13549: Tensor[(3, 1), float64]) -> (Tensor[(10, 3, 9), float64], Tensor[(3, 1, 1), float64], Tensor[(3, 1), float64], Tensor[(24, 22), uint16]) {
    %230 = cast(%var_13549, dtype="float64") /* ty=Tensor[(3, 1), float64] */;
    %231 = cast(meta[relay.Constant][16] /* ty=Tensor[(24, 22), uint16] */, dtype="uint16") /* ty=Tensor[(24, 22), uint16] */;
    %232 = reshape(%230, newshape=[3, 1, 1]) /* ty=Tensor[(3, 1, 1), float64] */;
    %233 = reshape(%231, newshape=[528]) /* ty=Tensor[(528), uint16] */;
    %234 = @func_8844(%232, %233) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(144), float32], Tensor[(780), uint16], Tensor[(15, 4), int64]) */;
    %235 = @func_10883() /* ty=Tensor[(10, 3, 9), float64] */;
    %236 = %234.0;
    (%235, %236, %var_13549, meta[relay.Constant][16] /* ty=Tensor[(24, 22), uint16] */)
  };
  %237(%var_13558) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(3, 1, 1), float64], Tensor[(3, 1), float64], Tensor[(24, 22), uint16]) */
}

def @func_16357() -> Tensor[(4, 8, 8), float32] {
  @func_16355() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_18656() -> (Tensor[(208), float64], Tensor[(256), float32]) {
  @func_18654() /* ty=(Tensor[(208), float64], Tensor[(256), float32]) */
}

def @func_11871() -> Tensor[(4, 8, 8), float32] {
  @func_11869() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_15743(%var_15741: Tensor[(30, 2), int64], %var_15742: Tensor[(13, 16, 240), float64]) -> (Tensor[(6, 2, 12), float32], Tensor[(30, 2), int64], Tensor[(144), float32], Tensor[(4, 528), int8], Tensor[(13, 16, 240), float64]) {
  %261 = fn (%var_15677: Tensor[(30, 2), int64], %var_15702: Tensor[(13, 16, 240), float64]) -> (Tensor[(6, 2, 12), float32], Tensor[(30, 2), int64], Tensor[(144), float32], Tensor[(4, 528), int8], Tensor[(13, 16, 240), float64]) {
    %238 = cast(%var_15677, dtype="int64") /* ty=Tensor[(30, 2), int64] */;
    %239 = cast(meta[relay.Constant][17] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %240 = reshape(%238, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
    %241 = reshape(%239, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %242 = @func_889(%240, %241) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
    %243 = cast(meta[relay.Constant][18] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %244 = reshape(%243, newshape=[240]) /* ty=Tensor[(240), float64] */;
    %245 = @func_11623(%244) /* ty=(Tensor[(256), float32], Tensor[(5, 13, 3), float64], Tensor[(308), uint8], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(240), float64], uint16, Tensor[(13, 15, 11), float32], Tensor[(4, 528), int8]) */;
    %246 = @func_14156() /* ty=Tensor[(13, 16, 1), float64] */;
    %247 = cast(meta[relay.Constant][18] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %248 = cast(%246, dtype="float64") /* ty=Tensor[(13, 16, 1), float64] */;
    %249 = power(%247, %248) /* ty=Tensor[(13, 16, 240), float64] */;
    %250 = cast(%var_15702, dtype="bool") /* ty=Tensor[(13, 16, 240), bool] */;
    %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
    %252 = cast(%249, dtype="bool") /* ty=Tensor[(13, 16, 240), bool] */;
    %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %254 = less_equal(%252, %253) /* ty=Tensor[(13, 16, 240), bool] */;
    %255 = cast(%254, dtype="float64") /* ty=Tensor[(13, 16, 240), float64] */;
    %256 = sinh(%255) /* ty=Tensor[(13, 16, 240), float64] */;
    %257 = cast(%256, dtype="float64") /* ty=Tensor[(13, 16, 240), float64] */;
    %258 = %242.0;
    %259 = %245.8;
    %260 = acos(%257) /* ty=Tensor[(13, 16, 240), float64] */;
    (%258, %var_15677, meta[relay.Constant][17] /* ty=Tensor[(144), float32] */, %259, %260)
  };
  %261(%var_15741, %var_15742) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(30, 2), int64], Tensor[(144), float32], Tensor[(4, 528), int8], Tensor[(13, 16, 240), float64]) */
}

def @func_19106() -> Tensor[(4, 8, 8), float32] {
  @func_11838() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_13243() -> Tensor[(13, 15, 11), float64] {
  %263 = fn () -> Tensor[(13, 15, 11), float64] {
    %262 = @func_12185() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(10, 3, 9), float64]) */;
    %262.1
  };
  %263() /* ty=Tensor[(13, 15, 11), float64] */
}

def @func_15921() -> (Tensor[(256), float32],) {
  %264 = @func_15887() /* ty=(Tensor[(256), float32],) */;
  %265 = %264.0;
  (%265,)
}

def @func_19262() -> (Tensor[(13, 15, 11), float32],) {
  @func_19260() /* ty=(Tensor[(13, 15, 11), float32],) */
}

def @func_12628(%var_12625: float64, %var_12626: Tensor[(1, 12, 4), float64], %var_12627: Tensor[(121), int8]) -> (Tensor[(1, 12, 4), float64], Tensor[(?, 11, 11), bool], Tensor[(121), int8]) {
  %275 = fn (%var_12606: float64, %var_12607: Tensor[(1, 12, 4), float64], %var_12612: Tensor[(121), int8]) -> (Tensor[(1, 12, 4), float64], Tensor[(?, 11, 11), bool], Tensor[(121), int8]) {
    %266 = cast(%var_12606, dtype="float64") /* ty=float64 */;
    %267 = cast(%var_12607, dtype="float64") /* ty=Tensor[(1, 12, 4), float64] */;
    %268 = cast(%var_12612, dtype="int8") /* ty=Tensor[(121), int8] */;
    %269 = cast(%var_12612, dtype="int8") /* ty=Tensor[(121), int8] */;
    %270 = reshape(%268, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
    %271 = reshape(%269, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
    %272 = @func_10598(%270, %271) /* ty=(Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) */;
    %273 = floor_mod(%266, %267) /* ty=Tensor[(1, 12, 4), float64] */;
    %274 = %272.0;
    (%273, %274, %var_12612)
  };
  %275(%var_12625, %var_12626, %var_12627) /* ty=(Tensor[(1, 12, 4), float64], Tensor[(?, 11, 11), bool], Tensor[(121), int8]) */
}

def @func_12585(%var_12583: Tensor[(24), float64]) -> (Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(1, 2, 12), float64], Tensor[(24), float64], Tensor[(13, 16, 1), float64], Tensor[(208), float64], Tensor[(13, 16, 1), float64], Tensor[(256), float32]) {
  @func_12582(%var_12583) /* ty=(Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(1, 2, 12), float64], Tensor[(24), float64], Tensor[(13, 16, 1), float64], Tensor[(208), float64], Tensor[(13, 16, 1), float64], Tensor[(256), float32]) */
}

def @func_16271(%var_16229: uint16) -> (Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(6, 2, 12), float32], Tensor[(1080), float64], Tensor[(144), float32], Tensor[(144), float32], Tensor[(3, 20), int64]) {
  %276 = cast(%var_16229, dtype="uint16") /* ty=uint16 */;
  %277 = cast(meta[relay.Constant][19] /* ty=Tensor[(528), uint16] */, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %278 = reshape(%276, newshape=[]) /* ty=uint16 */;
  %279 = reshape(%277, newshape=[528]) /* ty=Tensor[(528), uint16] */;
  %280 = @func_9133(%278, %279) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(60), int64], Tensor[(26), float32]) */;
  %281 = cast(meta[relay.Constant][20] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %282 = cast(meta[relay.Constant][20] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %283 = reshape(%281, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %284 = reshape(%282, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %285 = cast(meta[relay.Constant][21] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
  %286 = cast(meta[relay.Constant][22] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %287 = reshape(%285, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float64] */;
  %288 = reshape(%286, newshape=[24, 6]) /* ty=Tensor[(24, 6), float32] */;
  %289 = @func_6278(%287, %288) /* ty=(Tensor[(6, 15, 12), float64], Tensor[(6, 2, 12), float32], Tensor[(24, 6), float32]) */;
  %290 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 20), int64] */, dtype="int64") /* ty=Tensor[(3, 20), int64] */;
  %291 = reshape(%290, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %292 = @func_9943(%291) /* ty=(Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) */;
  %293 = @func_15185() /* ty=Tensor[(4, 8, 8), float64] */;
  %294 = @func_13798() /* ty=Tensor[(10, 3, 9), float64] */;
  %295 = %280.1;
  %296 = @func_1277(%283, %284) /* ty=Tensor[(4, 6, 3), float32] */;
  %297 = %289.1;
  %298 = %292.1;
  (%293, %294, %295, %var_16229, meta[relay.Constant][19] /* ty=Tensor[(528), uint16] */, %296, meta[relay.Constant][20] /* ty=Tensor[(72), float32] */, %297, meta[relay.Constant][21] /* ty=Tensor[(1080), float64] */, meta[relay.Constant][22] /* ty=Tensor[(144), float32] */, %298, meta[relay.Constant][23] /* ty=Tensor[(3, 20), int64] */)
}

def @func_15517() -> (Tensor[(13, 15, 11), float32],) {
  @func_15515() /* ty=(Tensor[(13, 15, 11), float32],) */
}

def @func_19206() -> (Tensor[(13, 15, 11), float32],) {
  @func_19204() /* ty=(Tensor[(13, 15, 11), float32],) */
}

def @func_14150() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) {
  @func_14148() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) */
}

def @func_18235() -> (Tensor[(10, 3, 9), float32], Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(11, 11), int8], Tensor[(60), int64], Tensor[(49920), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 528), int32]) {
  %327 = fn () -> (Tensor[(10, 3, 9), float32], Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(11, 11), int8], Tensor[(60), int64], Tensor[(49920), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 528), int32]) {
    %299 = @func_10883() /* ty=Tensor[(10, 3, 9), float64] */;
    %300 = cast(%299, dtype="float32") /* ty=Tensor[(10, 3, 9), float32] */;
    %301 = @func_14824() /* ty=(Tensor[(4, 8, 8), float64],) */;
    %302 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 11), int8] */, dtype="int8") /* ty=Tensor[(11, 11), int8] */;
    %303 = cast(meta[relay.Constant][24] /* ty=Tensor[(11, 11), int8] */, dtype="int8") /* ty=Tensor[(11, 11), int8] */;
    %304 = reshape(%302, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
    %305 = reshape(%303, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
    %306 = @func_10598(%304, %305) /* ty=(Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) */;
    %307 = %301.0;
    %308 = cast(%307, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
    %309 = reshape(%308, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
    %310 = @func_17543(%309) /* ty=(Tensor[(4, 8, 8), float32],) */;
    %311 = cast(meta[relay.Constant][25] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
    %312 = cast(meta[relay.Constant][26] /* ty=Tensor[(49920), float64] */, dtype="float64") /* ty=Tensor[(49920), float64] */;
    %313 = reshape(%311, newshape=[30, 2]) /* ty=Tensor[(30, 2), int64] */;
    %314 = reshape(%312, newshape=[13, 16, 240]) /* ty=Tensor[(13, 16, 240), float64] */;
    %315 = @func_15740(%313, %314) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(30, 2), int64], Tensor[(144), float32], Tensor[(4, 528), int8], Tensor[(13, 16, 240), float64]) */;
    %316 = %315.3;
    %317 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 528), int8] */, dtype="int32") /* ty=Tensor[(4, 528), int32] */;
    %318 = shape_of(%316, dtype="int32") /* ty=Tensor[(2), int32] */;
    %319 = cast(%316, dtype="int32") /* ty=Tensor[(4, 528), int32] */;
    %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %321 = acos(%300) /* ty=Tensor[(10, 3, 9), float32] */;
    %322 = %306.1;
    %323 = @func_12472() /* ty=Tensor[(4, 8, 8), float32] */;
    %324 = @func_18157() /* ty=Tensor[(4, 8, 8), float64] */;
    %325 = %310.0;
    %326 = subtract(%319, %320) /* ty=Tensor[(4, 528), int32] */;
    (%321, %307, %322, meta[relay.Constant][24] /* ty=Tensor[(11, 11), int8] */, meta[relay.Constant][25] /* ty=Tensor[(60), int64] */, meta[relay.Constant][26] /* ty=Tensor[(49920), float64] */, %323, %324, %325, %326)
  };
  %327() /* ty=(Tensor[(10, 3, 9), float32], Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(11, 11), int8], Tensor[(60), int64], Tensor[(49920), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 528), int32]) */
}

def @func_14118(%var_14114: Tensor[(880), float32], %var_14115: Tensor[(112, 4), bool], %var_14116: Tensor[(780), uint16], %var_14117: Tensor[(2, 1120), int64]) -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32], Tensor[(256), float32], Tensor[(5, 16, 11), float32], Tensor[(880), float32], Tensor[(16, 7, 4), bool], Tensor[(112, 4), bool], Tensor[(780), uint16], Tensor[(2, 1120), int64], Tensor[(13, 15, 11), float32]) {
  @func_14112(%var_14114, %var_14115, %var_14116, %var_14117) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32], Tensor[(256), float32], Tensor[(5, 16, 11), float32], Tensor[(880), float32], Tensor[(16, 7, 4), bool], Tensor[(112, 4), bool], Tensor[(780), uint16], Tensor[(2, 1120), int64], Tensor[(13, 15, 11), float32]) */
}

def @func_8848(%var_8846: Tensor[(3, 1, 1), float64], %var_8847: Tensor[(528), uint16]) -> (Tensor[(3, 1, 1), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(144), float32], Tensor[(780), uint16], Tensor[(15, 4), int64]) {
  @func_8844(%var_8846, %var_8847) /* ty=(Tensor[(3, 1, 1), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(144), float32], Tensor[(780), uint16], Tensor[(15, 4), int64]) */
}

def @func_2185(%var_2183: Tensor[(72), float32], %var_2184: Tensor[(144), float32]) -> (Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(144), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(10, 3, 2), float32], Tensor[(26), float32], Tensor[(10, 12, 3), bool]) {
  @func_2181(%var_2183, %var_2184) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(144), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(10, 3, 2), float32], Tensor[(26), float32], Tensor[(10, 12, 3), bool]) */
}

def @func_2181(%var_2155: Tensor[(72), float32], %var_2159: Tensor[(144), float32]) -> (Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(144), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(10, 3, 2), float32], Tensor[(26), float32], Tensor[(10, 12, 3), bool]) {
  %328 = cast(%var_2155, dtype="float32") /* ty=Tensor[(72), float32] */;
  %329 = cast(%var_2155, dtype="float32") /* ty=Tensor[(72), float32] */;
  %330 = reshape(%328, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %331 = reshape(%329, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %332 = cast(meta[relay.Constant][28] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %333 = cast(%var_2159, dtype="float32") /* ty=Tensor[(144), float32] */;
  %334 = reshape(%332, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
  %335 = reshape(%333, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %336 = @func_889(%334, %335) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
  %337 = cast(meta[relay.Constant][29] /* ty=Tensor[(26), float32] */, dtype="float32") /* ty=Tensor[(26), float32] */;
  %338 = reshape(%337, newshape=[13, 1, 2]) /* ty=Tensor[(13, 1, 2), float32] */;
  %339 = @func_1768(%338) /* ty=(Tensor[(13, 1, 2), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(1, 144), float32]) */;
  %340 = cast(meta[relay.Constant][30] /* ty=Tensor[(10, 12, 3), float32] */, dtype="float32") /* ty=Tensor[(10, 12, 3), float32] */;
  %341 = sqrt(%340) /* ty=Tensor[(10, 12, 3), float32] */;
  %342 = cast(%341, dtype="float64") /* ty=Tensor[(10, 12, 3), float64] */;
  %343 = sinh(%342) /* ty=Tensor[(10, 12, 3), float64] */;
  %344 = cast(meta[relay.Constant][30] /* ty=Tensor[(10, 12, 3), float32] */, dtype="bool") /* ty=Tensor[(10, 12, 3), bool] */;
  %345 = shape_of(%343, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%343, dtype="bool") /* ty=Tensor[(10, 12, 3), bool] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %348 = @func_1277(%330, %331) /* ty=Tensor[(4, 6, 3), float32] */;
  %349 = %336.1;
  %350 = %339.1;
  %351 = greater(%346, %347) /* ty=Tensor[(10, 12, 3), bool] */;
  (%348, %var_2155, %349, meta[relay.Constant][28] /* ty=Tensor[(60), int64] */, %var_2159, %350, meta[relay.Constant][29] /* ty=Tensor[(26), float32] */, %351)
}

def @func_20897() -> Tensor[(4, 8, 8), float64] {
  %352 = @func_14877() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float64], Tensor[(9, 13, 3), float32]) */;
  %352.1
}

def @func_21671() -> (Tensor[(208, 1), float64], Tensor[(3, 8, 15), float64], Tensor[(360), float64]) {
  @func_21669() /* ty=(Tensor[(208, 1), float64], Tensor[(3, 8, 15), float64], Tensor[(360), float64]) */
}

def @func_10205() -> (Tensor[(10, 3, 9), float64],) {
  @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */
}

def @func_12185() -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(10, 3, 9), float64]) {
  %353 = cast(meta[relay.Constant][31] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %354 = reshape(%353, newshape=[]) /* ty=uint16 */;
  %355 = @func_10769(%354) /* ty=(Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16]) */;
  %356 = @func_9160() /* ty=Tensor[(13, 15, 11), float32] */;
  %357 = cast(%356, dtype="float64") /* ty=Tensor[(13, 15, 11), float64] */;
  %358 = cast(meta[relay.Constant][31] /* ty=uint16 */, dtype="float64") /* ty=float64 */;
  %359 = @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %360 = %355.1;
  %361 = power(%357, %358) /* ty=Tensor[(13, 15, 11), float64] */;
  %362 = %359.0;
  (%360, %361, %362)
}

def @func_18158() -> Tensor[(4, 8, 8), float64] {
  %364 = fn () -> Tensor[(4, 8, 8), float64] {
    %363 = @func_15619() /* ty=(Tensor[(4, 8, 8), float64],) */;
    %363.0
  };
  %364() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_17257() -> Tensor[(4, 8, 8), float64] {
  @func_17255() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_20689() -> (Tensor[(13, 15, 11), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(4, 8, 8), float32]) {
  %365 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %366 = cast(meta[relay.Constant][32] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %367 = reshape(%366, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %368 = @func_9943(%367) /* ty=(Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) */;
  %369 = @func_16118() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(4, 8, 8), float32]) */;
  %370 = %365.0;
  %371 = %368.3;
  %372 = %369.1;
  (%370, %371, meta[relay.Constant][32] /* ty=Tensor[(60), int64] */, %372)
}

def @func_11875() -> Tensor[(4, 8, 8), float32] {
  %374 = fn () -> Tensor[(4, 8, 8), float32] {
    %373 = @func_10859() /* ty=(Tensor[(4, 8, 8), float32],) */;
    %373.0
  };
  %374() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_9943(%var_9941: Tensor[(60), int64]) -> (Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) {
  %375 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %376 = cast(meta[relay.Constant][33] /* ty=Tensor[(780, 1), uint16] */, dtype="uint16") /* ty=Tensor[(780, 1), uint16] */;
  %377 = cast(%var_9941, dtype="int64") /* ty=Tensor[(60), int64] */;
  %378 = reshape(%376, newshape=[10, 13, 6]) /* ty=Tensor[(10, 13, 6), uint16] */;
  %379 = reshape(%377, newshape=[60, 1]) /* ty=Tensor[(60, 1), int64] */;
  %380 = @func_1894(%378, %379) /* ty=(Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) */;
  %381 = %375.1;
  %382 = %380.3;
  (%381, %382, meta[relay.Constant][33] /* ty=Tensor[(780, 1), uint16] */, %var_9941)
}

def @func_15172() -> (Tensor[(10, 3, 9), float64],) {
  %385 = fn () -> (Tensor[(10, 3, 9), float64],) {
    %383 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
    %384 = %383.0;
    (%384,)
  };
  %385() /* ty=(Tensor[(10, 3, 9), float64],) */
}

def @func_9323() -> (Tensor[(10, 3, 9), float64],) {
  %386 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %387 = %386.1;
  (%387,)
}

def @func_19204() -> (Tensor[(13, 15, 11), float32],) {
  %388 = @func_13021() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %389 = %388.0;
  (%389,)
}

def @func_16023(%var_16021: Tensor[(9, 3, 10), float64]) -> (Tensor[(9, 3, 10), float64], Tensor[(13, 16, 1), float64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) {
  @func_16020(%var_16021) /* ty=(Tensor[(9, 3, 10), float64], Tensor[(13, 16, 1), float64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) */
}

def @func_6168(%var_6165: Tensor[(16, 7, 4), bool], %var_6166: Tensor[(780), uint16], %var_6167: Tensor[(28, 80), int64]) -> (Tensor[(16, 7, 4), bool], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(72), float32], Tensor[(780), uint16], Tensor[(72), float32], Tensor[(28, 80), uint8]) {
  @func_6163(%var_6165, %var_6166, %var_6167) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(72), float32], Tensor[(780), uint16], Tensor[(72), float32], Tensor[(28, 80), uint8]) */
}

def @func_18959() -> (Tensor[(10, 3, 9), float32],) {
  %391 = fn () -> (Tensor[(10, 3, 9), float32],) {
    %390 = @func_14623() /* ty=Tensor[(10, 3, 9), float32] */;
    (%390,)
  };
  %391() /* ty=(Tensor[(10, 3, 9), float32],) */
}

def @func_22030() -> (Tensor[(13, 16, 1), float64],) {
  %392 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %393 = %392.1;
  (%393,)
}

def @func_14926() -> (Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(256), float32]) {
  %399 = fn () -> (Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(256), float32]) {
    %394 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
    %395 = @func_10832() /* ty=(Tensor[(256), float32],) */;
    %396 = %394.2;
    %397 = @func_9160() /* ty=Tensor[(13, 15, 11), float32] */;
    %398 = %395.0;
    (%396, %397, %398)
  };
  %399() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(256), float32]) */
}

def @func_19147() -> (Tensor[(4, 8, 8), float32], Tensor[(208), float64]) {
  @func_19145() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(208), float64]) */
}

def @func_20050() -> (Tensor[(13, 15, 11), float64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32]) {
  %405 = fn () -> (Tensor[(13, 15, 11), float64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32]) {
    %400 = @func_15308() /* ty=(Tensor[(13, 15, 11), float64],) */;
    %401 = @func_14014() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(256), float32]) */;
    %402 = %400.0;
    %403 = %401.0;
    %404 = @func_16355() /* ty=Tensor[(4, 8, 8), float32] */;
    (%402, %403, %404)
  };
  %405() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32]) */
}

def @func_10203() -> (Tensor[(10, 3, 9), float64],) {
  %406 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %407 = %406.0;
  (%407,)
}

def @func_17637() -> (Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(16, ?, 6), float32], Tensor[(4, 8, 8), float64]) {
  @func_17635() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(16, ?, 6), float32], Tensor[(4, 8, 8), float64]) */
}

def @func_9133(%var_9126: uint16, %var_9127: Tensor[(528), uint16]) -> (Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(60), int64], Tensor[(26), float32]) {
  %408 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %409 = cast(%var_9126, dtype="uint16") /* ty=uint16 */;
  %410 = cast(%var_9127, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %411 = reshape(%409, newshape=[]) /* ty=uint16 */;
  %412 = reshape(%410, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), uint16] */;
  %413 = @func_5472(%411, %412) /* ty=(Tensor[(11, 16, 3), bool],) */;
  %414 = cast(meta[relay.Constant][34] /* ty=Tensor[(26), float32] */, dtype="float32") /* ty=Tensor[(26), float32] */;
  %415 = reshape(%414, newshape=[13, 1, 2]) /* ty=Tensor[(13, 1, 2), float32] */;
  %416 = @func_1768(%415) /* ty=(Tensor[(13, 1, 2), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(1, 144), float32]) */;
  %417 = %408.1;
  %418 = %413.0;
  %419 = %416.2;
  (%417, %418, %var_9126, %var_9127, %419, meta[relay.Constant][34] /* ty=Tensor[(26), float32] */)
}

def @func_3372(%var_3330: Tensor[(2, 2, 1), float32], %var_3336: Tensor[(72), float32]) -> (Tensor[(2, 2, 1), float32], Tensor[(10, 12, 3), bool], Tensor[(72), float32], Tensor[(144), float32], Tensor[(6, 2, 12), float32], Tensor[(6, 2, 12), float32], Tensor[(5, 13, 3), float64], Tensor[(195), float64]) {
  %420 = cast(%var_3330, dtype="float32") /* ty=Tensor[(2, 2, 1), float32] */;
  %421 = cast(%var_3336, dtype="float32") /* ty=Tensor[(72), float32] */;
  %422 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %423 = reshape(%421, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %424 = reshape(%422, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %425 = @func_2181(%423, %424) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(144), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(10, 3, 2), float32], Tensor[(26), float32], Tensor[(10, 12, 3), bool]) */;
  %426 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %427 = reshape(%426, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float32] */;
  %428 = @func_154(%427) /* ty=(Tensor[(6, 2, 12), float32],) */;
  %429 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %430 = reshape(%429, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float32] */;
  %431 = @func_154(%430) /* ty=(Tensor[(6, 2, 12), float32],) */;
  %432 = cast(meta[relay.Constant][36] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %433 = reshape(%432, newshape=[5, 13, 3]) /* ty=Tensor[(5, 13, 3), float64] */;
  %434 = @func_3156(%433) /* ty=(Tensor[(5, 13, 3), float64],) */;
  %435 = sigmoid(%420) /* ty=Tensor[(2, 2, 1), float32] */;
  %436 = %425.7;
  %437 = %428.0;
  %438 = %431.0;
  %439 = %434.0;
  (%435, %436, %var_3336, meta[relay.Constant][35] /* ty=Tensor[(144), float32] */, %437, %438, %439, meta[relay.Constant][36] /* ty=Tensor[(195), float64] */)
}

def @func_12226() -> (Tensor[(13, 15, 11), float32],) {
  %441 = fn () -> (Tensor[(13, 15, 11), float32],) {
    %440 = @func_11115() /* ty=Tensor[(13, 15, 11), float32] */;
    (%440,)
  };
  %441() /* ty=(Tensor[(13, 15, 11), float32],) */
}

def @func_9104() -> (Tensor[(256), float32],) {
  %442 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %443 = %442.2;
  (%443,)
}

def @func_11115() -> Tensor[(13, 15, 11), float32] {
  %444 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %444.0
}

def @func_20406(%var_20395: Tensor[(12, 8, 8), float64]) -> Tensor[(12, 8, 8), float64] {
  %445 = cast(%var_20395, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  asin(%445) /* ty=Tensor[(12, 8, 8), float64] */
}

def @func_18923() -> (Tensor[(13, 15, 11), float32],) {
  @func_18921() /* ty=(Tensor[(13, 15, 11), float32],) */
}

def @func_11538() -> Tensor[(13, 15, 11), float32] {
  @func_11536() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_20785() -> Tensor[(256), float32] {
  @func_20783() /* ty=Tensor[(256), float32] */
}

def @func_15887() -> (Tensor[(256), float32],) {
  %446 = @func_13650() /* ty=Tensor[(256), float32] */;
  (%446,)
}

def @func_16777() -> (Tensor[(10, 3, 9), float64],) {
  @func_16775() /* ty=(Tensor[(10, 3, 9), float64],) */
}

def @func_18843(%var_18842: Tensor[(5, 13, 3), float64]) -> (Tensor[(4, 8, 8), float64], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(3, 8, 15), float64], Tensor[(180, 2), float64], Tensor[(5, 13, 3), bool], Tensor[(13, 15, 11), float32]) {
  %470 = fn (%var_18818: Tensor[(5, 13, 3), float64]) -> (Tensor[(4, 8, 8), float64], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(3, 8, 15), float64], Tensor[(180, 2), float64], Tensor[(5, 13, 3), bool], Tensor[(13, 15, 11), float32]) {
    %447 = @func_16626() /* ty=(Tensor[(4, 8, 8), float64],) */;
    %448 = cast(meta[relay.Constant][39] /* ty=Tensor[(180, 2), float64] */, dtype="float64") /* ty=Tensor[(180, 2), float64] */;
    %449 = cast(meta[relay.Constant][39] /* ty=Tensor[(180, 2), float64] */, dtype="float64") /* ty=Tensor[(180, 2), float64] */;
    %450 = reshape(%448, newshape=[3, 8, 15]) /* ty=Tensor[(3, 8, 15), float64] */;
    %451 = reshape(%449, newshape=[3, 8, 15]) /* ty=Tensor[(3, 8, 15), float64] */;
    %452 = @func_12645(%450, %451) /* ty=(Tensor[(3, 8, 15), float64],) */;
    %453 = cast(meta[relay.Constant][37] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
    %454 = cast(meta[relay.Constant][37] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
    %455 = cast(meta[relay.Constant][38] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
    %456 = reshape(%453, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
    %457 = reshape(%454, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
    %458 = reshape(%455, newshape=[1, 4]) /* ty=Tensor[(1, 4), float32] */;
    %459 = @func_4821(%456, %457, %458) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */;
    %460 = %459.1;
    %461 = cast(%var_18818, dtype="bool") /* ty=Tensor[(5, 13, 3), bool] */;
    %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
    %463 = cast(%460, dtype="bool") /* ty=Tensor[(5, 13, 3), bool] */;
    %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %465 = @func_17292() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32]) */;
    %466 = %447.0;
    %467 = %452.0;
    %468 = not_equal(%463, %464) /* ty=Tensor[(5, 13, 3), bool] */;
    %469 = %465.1;
    (%466, meta[relay.Constant][37] /* ty=Tensor[(308), uint8] */, meta[relay.Constant][38] /* ty=Tensor[(4), float32] */, %467, meta[relay.Constant][39] /* ty=Tensor[(180, 2), float64] */, %468, %469)
  };
  %470(%var_18842) /* ty=(Tensor[(4, 8, 8), float64], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(3, 8, 15), float64], Tensor[(180, 2), float64], Tensor[(5, 13, 3), bool], Tensor[(13, 15, 11), float32]) */
}

def @func_19060() -> (Tensor[(13, 15, 11), float32],) {
  %473 = fn () -> (Tensor[(13, 15, 11), float32],) {
    %471 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %472 = %471.0;
    (%472,)
  };
  %473() /* ty=(Tensor[(13, 15, 11), float32],) */
}

def @func_12423() -> Tensor[(10, 3, 9), float64] {
  %474 = @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %474.0
}

def @func_11513(%var_11501: Tensor[(270), float32], %var_11507: Tensor[(16, 3, 5), float64]) -> (Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(16, 3, 5), bool]) {
  %475 = cast(%var_11501, dtype="float32") /* ty=Tensor[(270), float32] */;
  %476 = reshape(%475, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
  %477 = @func_5882(%476) /* ty=(Tensor[(10, 3, 9), float64],) */;
  %478 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(16, 3, 5), float64] */;
  %479 = asinh(%478) /* ty=Tensor[(16, 3, 5), float64] */;
  %480 = cast(%var_11507, dtype="bool") /* ty=Tensor[(16, 3, 5), bool] */;
  %481 = shape_of(%479, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%479, dtype="bool") /* ty=Tensor[(16, 3, 5), bool] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %484 = %477.0;
  %485 = equal(%482, %483) /* ty=Tensor[(16, 3, 5), bool] */;
  (%484, %var_11501, %485)
}

def @func_19145() -> (Tensor[(4, 8, 8), float32], Tensor[(208), float64]) {
  %486 = @func_14970() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %487 = @func_18654() /* ty=(Tensor[(208), float64], Tensor[(256), float32]) */;
  %488 = %486.0;
  %489 = %487.0;
  (%488, %489)
}

def @func_21306() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], uint8) {
  %490 = cast(meta[relay.Constant][41] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %491 = reshape(%490, newshape=[]) /* ty=uint8 */;
  %492 = @func_14288(%491) /* ty=(Tensor[(3), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 11, 256), int8], Tensor[(3, 1, 256), bool]) */;
  %493 = @func_10430() /* ty=Tensor[(13, 15, 11), float32] */;
  %494 = %492.1;
  (%493, %494, meta[relay.Constant][41] /* ty=uint8 */)
}

def @func_21873() -> (Tensor[(256), float32],) {
  @func_21871() /* ty=(Tensor[(256), float32],) */
}

def @func_10430() -> Tensor[(13, 15, 11), float32] {
  %495 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %495.0
}

def @func_20188() -> (Tensor[(13, 15, 11), float64], Tensor[(351, ?), float32]) {
  @func_20186() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(351, ?), float32]) */
}

def @func_18537() -> (Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) {
  @func_18535() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */
}

def @func_19283() -> (Tensor[(4, 8, 8), float32],) {
  @func_19281() /* ty=(Tensor[(4, 8, 8), float32],) */
}

def @func_14747() -> Tensor[(256), float32] {
  @func_10492() /* ty=Tensor[(256), float32] */
}

def @func_14564(%var_14563: Tensor[(144), float32]) -> (Tensor[(4, 8, 8), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(4, 6, 3), float32], Tensor[(3, 24), float32]) {
  %511 = fn (%var_14546: Tensor[(144), float32]) -> (Tensor[(4, 8, 8), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(4, 6, 3), float32], Tensor[(3, 24), float32]) {
    %496 = @func_10980() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(351), float64], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(4), float32], Tensor[(121, 1), int8], Tensor[(?, 11, 11), float64]) */;
    %497 = cast(meta[relay.Constant][42] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
    %498 = cast(%var_14546, dtype="float32") /* ty=Tensor[(144), float32] */;
    %499 = reshape(%497, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
    %500 = reshape(%498, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %501 = @func_889(%499, %500) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
    %502 = @func_10569() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(528), uint16], Tensor[(130, 6), uint16], Tensor[(256), float32], Tensor[(528, 1), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
    %503 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
    %504 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 24), float32] */, dtype="float32") /* ty=Tensor[(3, 24), float32] */;
    %505 = reshape(%503, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
    %506 = reshape(%504, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
    %507 = %496.0;
    %508 = %501.2;
    %509 = %502.1;
    %510 = @func_1277(%505, %506) /* ty=Tensor[(4, 6, 3), float32] */;
    (%507, %508, meta[relay.Constant][42] /* ty=Tensor[(60), int64] */, %var_14546, %509, %510, meta[relay.Constant][43] /* ty=Tensor[(3, 24), float32] */)
  };
  %511(%var_14563) /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(4, 6, 3), float32], Tensor[(3, 24), float32]) */
}

def @func_21656() -> (Tensor[(4, 8, 8), float32], Tensor[(144), float32], Tensor[(72, 26), bool], Tensor[(4, 8, 8), float64]) {
  %527 = fn () -> (Tensor[(4, 8, 8), float32], Tensor[(144), float32], Tensor[(72, 26), bool], Tensor[(4, 8, 8), float64]) {
    %512 = @func_21455() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32]) */;
    %513 = cast(meta[relay.Constant][45] /* ty=Tensor[(72, 1), float32] */, dtype="float32") /* ty=Tensor[(72, 1), float32] */;
    %514 = cast(meta[relay.Constant][44] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %515 = reshape(%513, newshape=[72]) /* ty=Tensor[(72), float32] */;
    %516 = reshape(%514, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %517 = @func_2181(%515, %516) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(144), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(10, 3, 2), float32], Tensor[(26), float32], Tensor[(10, 12, 3), bool]) */;
    %518 = %517.6;
    %519 = cast(meta[relay.Constant][45] /* ty=Tensor[(72, 1), float32] */, dtype="bool") /* ty=Tensor[(72, 1), bool] */;
    %520 = cast(%518, dtype="bool") /* ty=Tensor[(26), bool] */;
    %521 = less(%519, %520) /* ty=Tensor[(72, 26), bool] */;
    %522 = cast(meta[relay.Constant][45] /* ty=Tensor[(72, 1), float32] */, dtype="bool") /* ty=Tensor[(72, 1), bool] */;
    %523 = cast(%521, dtype="bool") /* ty=Tensor[(72, 26), bool] */;
    %524 = %512.2;
    %525 = less_equal(%522, %523) /* ty=Tensor[(72, 26), bool] */;
    %526 = @func_21277() /* ty=Tensor[(4, 8, 8), float64] */;
    (%524, meta[relay.Constant][44] /* ty=Tensor[(144), float32] */, %525, %526)
  };
  %527() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(144), float32], Tensor[(72, 26), bool], Tensor[(4, 8, 8), float64]) */
}

def @func_9160() -> Tensor[(13, 15, 11), float32] {
  %528 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %528.0
}

def @func_20963() -> Tensor[(10, 3, 9), float64] {
  %530 = fn () -> Tensor[(10, 3, 9), float64] {
    %529 = @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */;
    %529.0
  };
  %530() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_22011() -> Tensor[(256), float32] {
  %532 = fn () -> Tensor[(256), float32] {
    %531 = @func_21871() /* ty=(Tensor[(256), float32],) */;
    %531.0
  };
  %532() /* ty=Tensor[(256), float32] */
}

def @func_892(%var_890: Tensor[(10, 3, 2), int64], %var_891: Tensor[(144), float32]) -> (Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) {
  %546 = fn (%var_859: Tensor[(10, 3, 2), int64], %var_874: Tensor[(144), float32]) -> (Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) {
    %533 = cast(%var_874, dtype="float32") /* ty=Tensor[(144), float32] */;
    %534 = reshape(%533, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float32] */;
    %535 = @func_154(%534) /* ty=(Tensor[(6, 2, 12), float32],) */;
    %536 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 3, 2), int64] */, dtype="int64") /* ty=Tensor[(10, 3, 2), int64] */;
    %537 = shape_of(%var_859, dtype="int32") /* ty=Tensor[(3), int32] */;
    %538 = cast(%var_859, dtype="int64") /* ty=Tensor[(10, 3, 2), int64] */;
    %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %540 = minimum(%538, %539) /* ty=Tensor[(10, 3, 2), int64] */;
    %541 = cast(%540, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
    %542 = log(%541) /* ty=Tensor[(10, 3, 2), float32] */;
    %543 = cast(%542, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
    %544 = %535.0;
    %545 = acos(%543) /* ty=Tensor[(10, 3, 2), float32] */;
    (%544, %var_874, %545)
  };
  %546(%var_890, %var_891) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */
}

def @func_9106() -> (Tensor[(256), float32],) {
  @func_9104() /* ty=(Tensor[(256), float32],) */
}

def @func_14288(%var_14196: uint8) -> (Tensor[(3), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 11, 256), int8], Tensor[(3, 1, 256), bool]) {
  %547 = cast(%var_14196, dtype="uint8") /* ty=uint8 */;
  %548 = cast(meta[relay.Constant][48] /* ty=Tensor[(4, 11, 1), uint8] */, dtype="uint8") /* ty=Tensor[(4, 11, 1), uint8] */;
  %549 = add(%547, %548) /* ty=Tensor[(4, 11, 1), uint8] */;
  %550 = @func_10492() /* ty=Tensor[(256), float32] */;
  %551 = cast(%549, dtype="int8") /* ty=Tensor[(4, 11, 1), int8] */;
  %552 = cast(%550, dtype="int8") /* ty=Tensor[(256), int8] */;
  %553 = cast(meta[relay.Constant][47] /* ty=Tensor[(3), float64] */, dtype="float64") /* ty=Tensor[(3), float64] */;
  %554 = reshape(%553, newshape=[3, 1]) /* ty=Tensor[(3, 1), float64] */;
  %555 = @func_13557(%554) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(3, 1, 1), float64], Tensor[(3, 1), float64], Tensor[(24, 22), uint16]) */;
  %556 = %555.1;
  %557 = cast(%556, dtype="bool") /* ty=Tensor[(3, 1, 1), bool] */;
  %558 = cast(%550, dtype="bool") /* ty=Tensor[(256), bool] */;
  %559 = @func_11838() /* ty=Tensor[(4, 8, 8), float32] */;
  %560 = add(%551, %552) /* ty=Tensor[(4, 11, 256), int8] */;
  %561 = less(%557, %558) /* ty=Tensor[(3, 1, 256), bool] */;
  (meta[relay.Constant][47] /* ty=Tensor[(3), float64] */, %559, %560, %561)
}

def @func_8844(%var_8801: Tensor[(3, 1, 1), float64], %var_8820: Tensor[(528), uint16]) -> (Tensor[(3, 1, 1), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(144), float32], Tensor[(780), uint16], Tensor[(15, 4), int64]) {
  %562 = cast(%var_8801, dtype="float64") /* ty=Tensor[(3, 1, 1), float64] */;
  %563 = cast(meta[relay.Constant][49] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %564 = cast(%var_8820, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %565 = reshape(%563, newshape=[]) /* ty=uint16 */;
  %566 = reshape(%564, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), uint16] */;
  %567 = @func_5472(%565, %566) /* ty=(Tensor[(11, 16, 3), bool],) */;
  %568 = cast(meta[relay.Constant][50] /* ty=Tensor[(780), uint16] */, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %569 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 4), int64] */, dtype="int64") /* ty=Tensor[(15, 4), int64] */;
  %570 = reshape(%568, newshape=[10, 13, 6]) /* ty=Tensor[(10, 13, 6), uint16] */;
  %571 = reshape(%569, newshape=[60, 1]) /* ty=Tensor[(60, 1), int64] */;
  %572 = @func_1894(%570, %571) /* ty=(Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) */;
  %573 = sin(%562) /* ty=Tensor[(3, 1, 1), float64] */;
  %574 = %567.0;
  %575 = %572.3;
  (%573, %574, meta[relay.Constant][49] /* ty=uint16 */, %var_8820, %575, meta[relay.Constant][50] /* ty=Tensor[(780), uint16] */, meta[relay.Constant][51] /* ty=Tensor[(15, 4), int64] */)
}

def @func_5476(%var_5474: uint16, %var_5475: Tensor[(11, 16, 3), uint16]) -> (Tensor[(11, 16, 3), bool],) {
  @func_5472(%var_5474, %var_5475) /* ty=(Tensor[(11, 16, 3), bool],) */
}

def @func_16756() -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(256), float32], Tensor[(13, 15, 11), float32]) {
  %576 = @func_15308() /* ty=(Tensor[(13, 15, 11), float64],) */;
  %577 = @func_9868() /* ty=(Tensor[(256), float32],) */;
  %578 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %579 = @func_11906() /* ty=Tensor[(10, 3, 9), float64] */;
  %580 = %576.0;
  %581 = %577.0;
  %582 = %578.0;
  (%579, %580, %581, %582)
}

def @func_17255() -> Tensor[(4, 8, 8), float64] {
  @func_15283() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_13617() -> Tensor[(13, 16, 1), float64] {
  @func_13615() /* ty=Tensor[(13, 16, 1), float64] */
}

def @func_11623(%var_11605: Tensor[(240), float64]) -> (Tensor[(256), float32], Tensor[(5, 13, 3), float64], Tensor[(308), uint8], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(240), float64], uint16, Tensor[(13, 15, 11), float32], Tensor[(4, 528), int8]) {
  %583 = cast(meta[relay.Constant][52] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %584 = cast(meta[relay.Constant][52] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %585 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 1), float32] */;
  %586 = reshape(%583, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %587 = reshape(%584, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %588 = reshape(%585, newshape=[1, 4]) /* ty=Tensor[(1, 4), float32] */;
  %589 = @func_4821(%586, %587, %588) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */;
  %590 = cast(meta[relay.Constant][54] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %591 = cast(%var_11605, dtype="float64") /* ty=Tensor[(240), float64] */;
  %592 = reshape(%590, newshape=[270]) /* ty=Tensor[(270), float32] */;
  %593 = reshape(%591, newshape=[16, 3, 5]) /* ty=Tensor[(16, 3, 5), float64] */;
  %594 = @func_11513(%592, %593) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(16, 3, 5), bool]) */;
  %595 = cast(meta[relay.Constant][55] /* ty=Tensor[(528), uint16] */, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %596 = reshape(%595, newshape=[2, 264]) /* ty=Tensor[(2, 264), uint16] */;
  %597 = @func_9290(%596) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(4, 6, 3), float32], Tensor[(11, 16, 3), bool], uint16, Tensor[(2, 264), uint16], Tensor[(144), float32], Tensor[(144), float32], Tensor[(1, 72), float64]) */;
  %598 = @func_11197() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32]) */;
  %599 = cast(meta[relay.Constant][55] /* ty=Tensor[(528), uint16] */, dtype="int8") /* ty=Tensor[(528), int8] */;
  %600 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 1), float32] */, dtype="int8") /* ty=Tensor[(4, 1), int8] */;
  %601 = @func_10492() /* ty=Tensor[(256), float32] */;
  %602 = %589.1;
  %603 = %594.0;
  %604 = %597.3;
  %605 = %598.1;
  %606 = minimum(%599, %600) /* ty=Tensor[(4, 528), int8] */;
  (%601, %602, meta[relay.Constant][52] /* ty=Tensor[(308), uint8] */, %603, meta[relay.Constant][54] /* ty=Tensor[(270), float32] */, %var_11605, %604, %605, %606)
}

def @func_17963(%var_17948: float64) -> (Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(1, 2, 12), float64], Tensor[(24), float64], Tensor[(130, 6), uint16], float64, Tensor[(528), uint16], Tensor[(2240), int64]) {
  %607 = @func_17009() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(351), float64]) */;
  %608 = %607.0;
  %609 = @func_11253() /* ty=Tensor[(256), float32] */;
  %610 = cast(%609, dtype="uint32") /* ty=Tensor[(256), uint32] */;
  %611 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %612 = cast(%608, dtype="uint32") /* ty=Tensor[(4, 8, 8), uint32] */;
  %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %614 = maximum(%612, %613) /* ty=Tensor[(4, 8, 8), uint32] */;
  %615 = cast(%614, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %616 = cast(meta[relay.Constant][56] /* ty=Tensor[(24), float64] */, dtype="float64") /* ty=Tensor[(24), float64] */;
  %617 = reshape(%616, newshape=[1, 2, 12]) /* ty=Tensor[(1, 2, 12), float64] */;
  %618 = @func_959(%617) /* ty=(Tensor[(1, 2, 12), float64],) */;
  %619 = cast(%var_17948, dtype="float64") /* ty=float64 */;
  %620 = cast(meta[relay.Constant][57] /* ty=Tensor[(528), uint16] */, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %621 = cast(meta[relay.Constant][58] /* ty=Tensor[(2240), int64] */, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %622 = reshape(%619, newshape=[]) /* ty=float64 */;
  %623 = reshape(%620, newshape=[528]) /* ty=Tensor[(528), uint16] */;
  %624 = reshape(%621, newshape=[2240]) /* ty=Tensor[(2240), int64] */;
  %625 = @func_15084(%622, %623, %624) /* ty=(Tensor[(10, 3, 9), float64], float64, Tensor[(48), float64], Tensor[(10, 3, 9), float64], Tensor[(256), float32], Tensor[(4, 8, 8), float64], Tensor[(130, 6), uint16], Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(528), uint16], Tensor[(780), uint16], Tensor[(448), bool], Tensor[(2240), int64], Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(121), bool]) */;
  %626 = @func_13650() /* ty=Tensor[(256), float32] */;
  %627 = log2(%615) /* ty=Tensor[(4, 8, 8), float32] */;
  %628 = %618.0;
  %629 = %625.6;
  (%626, %627, %628, meta[relay.Constant][56] /* ty=Tensor[(24), float64] */, %629, %var_17948, meta[relay.Constant][57] /* ty=Tensor[(528), uint16] */, meta[relay.Constant][58] /* ty=Tensor[(2240), int64] */)
}

def @func_19260() -> (Tensor[(13, 15, 11), float32],) {
  %630 = @func_14014() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(256), float32]) */;
  %631 = %630.0;
  (%631,)
}

def @func_14329() -> (Tensor[(256), float32], Tensor[(13, 15, 11), float64]) {
  @func_14327() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float64]) */
}

def @func_21863(%var_21861: float64, %var_21862: Tensor[(3), float64]) -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], float64, Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64], Tensor[(3), float64], Tensor[(208), float64]) {
  %646 = fn (%var_21813: float64, %var_21847: Tensor[(3), float64]) -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], float64, Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64], Tensor[(3), float64], Tensor[(208), float64]) {
    %632 = @func_21506() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %633 = cast(%var_21813, dtype="float64") /* ty=float64 */;
    %634 = reshape(%633, newshape=[]) /* ty=float64 */;
    %635 = @func_17963(%634) /* ty=(Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(1, 2, 12), float64], Tensor[(24), float64], Tensor[(130, 6), uint16], float64, Tensor[(528), uint16], Tensor[(2240), int64]) */;
    %636 = @func_11301() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %637 = cast(%var_21847, dtype="float64") /* ty=Tensor[(3), float64] */;
    %638 = reshape(%637, newshape=[3, 1]) /* ty=Tensor[(3, 1), float64] */;
    %639 = @func_15119(%638) /* ty=(Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64], Tensor[(3, 1), float64]) */;
    %640 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
    %641 = %632.0;
    %642 = %635.1;
    %643 = %636.0;
    %644 = %639.1;
    %645 = %640.2;
    (%641, %642, %var_21813, %643, %644, %var_21847, %645)
  };
  %646(%var_21861, %var_21862) /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], float64, Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64], Tensor[(3), float64], Tensor[(208), float64]) */
}

def @func_12065() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32]) {
  %652 = fn () -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32]) {
    %647 = @func_10019() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
    %648 = @func_11370() /* ty=Tensor[(4, 8, 8), float32] */;
    %649 = cast(%648, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
    %650 = %647.1;
    %651 = tan(%649) /* ty=Tensor[(4, 8, 8), float32] */;
    (%650, %651)
  };
  %652() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32]) */
}

def @func_11199() -> (Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32]) {
  @func_11197() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32]) */
}

def @func_9997() -> Tensor[(256), float32] {
  %653 = @func_9868() /* ty=(Tensor[(256), float32],) */;
  %653.0
}

def @func_20980() -> Tensor[(256), float32] {
  %654 = fn () -> Tensor[(256), float32] {
    @func_13650() /* ty=Tensor[(256), float32] */
  };
  %654() /* ty=Tensor[(256), float32] */
}

def @func_12902() -> (Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float64], Tensor[(208, 1), float64]) {
  %660 = fn () -> (Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float64], Tensor[(208, 1), float64]) {
    %655 = @func_10859() /* ty=(Tensor[(4, 8, 8), float32],) */;
    %656 = cast(meta[relay.Constant][59] /* ty=Tensor[(208, 1), float64] */, dtype="float64") /* ty=Tensor[(208, 1), float64] */;
    %657 = reshape(%656, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
    %658 = %655.0;
    %659 = @func_8902(%657) /* ty=Tensor[(13, 16, 1), float64] */;
    (%658, %659, meta[relay.Constant][59] /* ty=Tensor[(208, 1), float64] */)
  };
  %660() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float64], Tensor[(208, 1), float64]) */
}

def @func_14749() -> Tensor[(256), float32] {
  @func_14747() /* ty=Tensor[(256), float32] */
}

def @func_11838() -> Tensor[(4, 8, 8), float32] {
  @func_9888() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_10769(%var_10766: uint16) -> (Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16]) {
  %661 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %662 = @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %663 = cast(%var_10766, dtype="uint16") /* ty=uint16 */;
  %664 = cast(meta[relay.Constant][60] /* ty=Tensor[(528), uint16] */, dtype="uint16") /* ty=Tensor[(528), uint16] */;
  %665 = reshape(%663, newshape=[]) /* ty=uint16 */;
  %666 = reshape(%664, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), uint16] */;
  %667 = @func_5472(%665, %666) /* ty=(Tensor[(11, 16, 3), bool],) */;
  %668 = %661.0;
  %669 = %662.0;
  %670 = %667.0;
  (%668, %669, %670, %var_10766, meta[relay.Constant][60] /* ty=Tensor[(528), uint16] */)
}

def @func_18456(%var_18443: Tensor[(12, 72), float32]) -> (Tensor[(4, 8, 8), float64], Tensor[(7, 44), uint8], Tensor[(4), float32], Tensor[(256), float32], Tensor[(12, 72), bool], Tensor[(4, 8, 8), float32]) {
  %671 = @func_18234() /* ty=(Tensor[(10, 3, 9), float32], Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(11, 11), int8], Tensor[(60), int64], Tensor[(49920), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 528), int32]) */;
  %672 = cast(meta[relay.Constant][61] /* ty=Tensor[(7, 44), uint8] */, dtype="uint8") /* ty=Tensor[(7, 44), uint8] */;
  %673 = cast(meta[relay.Constant][61] /* ty=Tensor[(7, 44), uint8] */, dtype="uint8") /* ty=Tensor[(7, 44), uint8] */;
  %674 = cast(meta[relay.Constant][62] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %675 = reshape(%672, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %676 = reshape(%673, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
  %677 = reshape(%674, newshape=[1, 4]) /* ty=Tensor[(1, 4), float32] */;
  %678 = @func_4821(%675, %676, %677) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */;
  %679 = %678.3;
  %680 = cast(%679, dtype="bool") /* ty=Tensor[(1, 72), bool] */;
  %681 = cast(%var_18443, dtype="bool") /* ty=Tensor[(12, 72), bool] */;
  %682 = %671.1;
  %683 = @func_13650() /* ty=Tensor[(256), float32] */;
  %684 = less_equal(%680, %681) /* ty=Tensor[(12, 72), bool] */;
  %685 = @func_11370() /* ty=Tensor[(4, 8, 8), float32] */;
  (%682, meta[relay.Constant][61] /* ty=Tensor[(7, 44), uint8] */, meta[relay.Constant][62] /* ty=Tensor[(4), float32] */, %683, %684, %685)
}

def @func_18569(%var_18568: Tensor[(144), float32]) -> (Tensor[(13, 16, 1), float64], Tensor[(24, 6), float32], Tensor[(1080), float64], Tensor[(144), float32]) {
  %694 = fn (%var_18565: Tensor[(144), float32]) -> (Tensor[(13, 16, 1), float64], Tensor[(24, 6), float32], Tensor[(1080), float64], Tensor[(144), float32]) {
    %686 = @func_12901() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float64], Tensor[(208, 1), float64]) */;
    %687 = cast(meta[relay.Constant][63] /* ty=Tensor[(1080), float64] */, dtype="float64") /* ty=Tensor[(1080), float64] */;
    %688 = cast(%var_18565, dtype="float32") /* ty=Tensor[(144), float32] */;
    %689 = reshape(%687, newshape=[6, 15, 12]) /* ty=Tensor[(6, 15, 12), float64] */;
    %690 = reshape(%688, newshape=[24, 6]) /* ty=Tensor[(24, 6), float32] */;
    %691 = @func_6278(%689, %690) /* ty=(Tensor[(6, 15, 12), float64], Tensor[(6, 2, 12), float32], Tensor[(24, 6), float32]) */;
    %692 = %686.1;
    %693 = %691.2;
    (%692, %693, meta[relay.Constant][63] /* ty=Tensor[(1080), float64] */, %var_18565)
  };
  %694(%var_18568) /* ty=(Tensor[(13, 16, 1), float64], Tensor[(24, 6), float32], Tensor[(1080), float64], Tensor[(144), float32]) */
}

def @func_16502() -> (Tensor[(10, 3, 9), float64], Tensor[(9, 13, 3), float64], Tensor[(351, ?), bool], Tensor[(60), int64], uint16, Tensor[(528), uint16], Tensor[(351, 1), float32]) {
  %715 = fn () -> (Tensor[(10, 3, 9), float64], Tensor[(9, 13, 3), float64], Tensor[(351, ?), bool], Tensor[(60), int64], uint16, Tensor[(528), uint16], Tensor[(351, 1), float32]) {
    %695 = @func_11976() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) */;
    %696 = @func_11976() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) */;
    %697 = %696.2;
    %698 = cast(%697, dtype="float32") /* ty=Tensor[(351, 1), float32] */;
    %699 = atanh(%698) /* ty=Tensor[(351, 1), float32] */;
    %700 = cast(%697, dtype="bool") /* ty=Tensor[(351, 1), bool] */;
    %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(2), int32] */;
    %702 = cast(%699, dtype="bool") /* ty=Tensor[(351, 1), bool] */;
    %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %704 = cast(meta[relay.Constant][64] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %705 = cast(meta[relay.Constant][65] /* ty=Tensor[(528), uint16] */, dtype="uint16") /* ty=Tensor[(528), uint16] */;
    %706 = reshape(%704, newshape=[]) /* ty=uint16 */;
    %707 = reshape(%705, newshape=[528]) /* ty=Tensor[(528), uint16] */;
    %708 = @func_9133(%706, %707) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(60), int64], Tensor[(26), float32]) */;
    %709 = cast(%699, dtype="float32") /* ty=Tensor[(351, 1), float32] */;
    %710 = @func_12423() /* ty=Tensor[(10, 3, 9), float64] */;
    %711 = %695.1;
    %712 = equal(%702, %703) /* ty=Tensor[(351, ?), bool] */;
    %713 = %708.4;
    %714 = sin(%709) /* ty=Tensor[(351, 1), float32] */;
    (%710, %711, %712, %713, meta[relay.Constant][64] /* ty=uint16 */, meta[relay.Constant][65] /* ty=Tensor[(528), uint16] */, %714)
  };
  %715() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(9, 13, 3), float64], Tensor[(351, ?), bool], Tensor[(60), int64], uint16, Tensor[(528), uint16], Tensor[(351, 1), float32]) */
}

def @func_10980() -> (Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(351), float64], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(4), float32], Tensor[(121, 1), int8], Tensor[(?, 11, 11), float64]) {
  %716 = @func_10859() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %717 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %718 = @func_10109() /* ty=(Tensor[(90, 3), float32], Tensor[(4, 8, 8), float32]) */;
  %719 = cast(meta[relay.Constant][66] /* ty=Tensor[(1680), float64] */, dtype="float64") /* ty=Tensor[(1680), float64] */;
  %720 = cast(meta[relay.Constant][67] /* ty=Tensor[(195), float64] */, dtype="float64") /* ty=Tensor[(195), float64] */;
  %721 = cast(meta[relay.Constant][68] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
  %722 = reshape(%719, newshape=[7, 16, 15]) /* ty=Tensor[(7, 16, 15), float64] */;
  %723 = reshape(%720, newshape=[1, 195]) /* ty=Tensor[(1, 195), float64] */;
  %724 = reshape(%721, newshape=[4]) /* ty=Tensor[(4), float32] */;
  %725 = @func_7149(%722, %723, %724) /* ty=(Tensor[(7, 16, 15), bool], Tensor[(144), float32], Tensor[(5, 13, 3), float64], Tensor[(1, 195), float64], Tensor[(8, 15, 14), float64], Tensor[(4, 7, 11), bool], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(1, 4), float32]) */;
  %726 = cast(meta[relay.Constant][69] /* ty=Tensor[(121, 1), int8] */, dtype="int8") /* ty=Tensor[(121, 1), int8] */;
  %727 = cast(meta[relay.Constant][69] /* ty=Tensor[(121, 1), int8] */, dtype="int8") /* ty=Tensor[(121, 1), int8] */;
  %728 = reshape(%726, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
  %729 = reshape(%727, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
  %730 = @func_10598(%728, %729) /* ty=(Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) */;
  %731 = %730.0;
  %732 = cast(%731, dtype="float64") /* ty=Tensor[(?, 11, 11), float64] */;
  %733 = %716.0;
  %734 = %717.0;
  %735 = %718.1;
  %736 = %725.9;
  %737 = sigmoid(%732) /* ty=Tensor[(?, 11, 11), float64] */;
  (%733, %734, %735, %736, meta[relay.Constant][66] /* ty=Tensor[(1680), float64] */, meta[relay.Constant][67] /* ty=Tensor[(195), float64] */, meta[relay.Constant][68] /* ty=Tensor[(4), float32] */, meta[relay.Constant][69] /* ty=Tensor[(121, 1), int8] */, %737)
}

def @func_15121(%var_15120: Tensor[(3, 1), float64]) -> (Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64], Tensor[(3, 1), float64]) {
  %744 = fn (%var_15104: Tensor[(3, 1), float64]) -> (Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64], Tensor[(3, 1), float64]) {
    %738 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %739 = cast(%var_15104, dtype="float64") /* ty=Tensor[(3, 1), float64] */;
    %740 = reshape(%739, newshape=[3, 1]) /* ty=Tensor[(3, 1), float64] */;
    %741 = @func_13557(%740) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(3, 1, 1), float64], Tensor[(3, 1), float64], Tensor[(24, 22), uint16]) */;
    %742 = %738.0;
    %743 = %741.0;
    (%742, %743, %var_15104)
  };
  %744(%var_15120) /* ty=(Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64], Tensor[(3, 1), float64]) */
}

def @func_11117() -> Tensor[(13, 15, 11), float32] {
  @func_11115() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_16119() -> (Tensor[(13, 15, 11), float64], Tensor[(4, 8, 8), float32]) {
  %749 = fn () -> (Tensor[(13, 15, 11), float64], Tensor[(4, 8, 8), float32]) {
    %745 = @func_12185() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(10, 3, 9), float64]) */;
    %746 = @func_10859() /* ty=(Tensor[(4, 8, 8), float32],) */;
    %747 = %745.1;
    %748 = %746.0;
    (%747, %748)
  };
  %749() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(4, 8, 8), float32]) */
}

def @func_15362() -> (Tensor[(256), float32], Tensor[(256), float32]) {
  @func_15360() /* ty=(Tensor[(256), float32], Tensor[(256), float32]) */
}

def @func_11626(%var_11624: Tensor[(240), float64]) -> (Tensor[(256), float32], Tensor[(5, 13, 3), float64], Tensor[(308), uint8], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(240), float64], uint16, Tensor[(13, 15, 11), float32], Tensor[(4, 528), int8]) {
  @func_11623(%var_11624) /* ty=(Tensor[(256), float32], Tensor[(5, 13, 3), float64], Tensor[(308), uint8], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(240), float64], uint16, Tensor[(13, 15, 11), float32], Tensor[(4, 528), int8]) */
}

def @func_16649() -> (Tensor[(13, 15, 11), float64], Tensor[(256), float32], Tensor[(60), int64], Tensor[(144), float32]) {
  @func_16647() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(256), float32], Tensor[(60), int64], Tensor[(144), float32]) */
}

def @func_21308() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], uint8) {
  @func_21306() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], uint8) */
}

def @func_9730() -> (Tensor[(13, 15, 11), float32],) {
  %752 = fn () -> (Tensor[(13, 15, 11), float32],) {
    %750 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
    %751 = %750.0;
    (%751,)
  };
  %752() /* ty=(Tensor[(13, 15, 11), float32],) */
}

def @func_11869() -> Tensor[(4, 8, 8), float32] {
  %753 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %753.0
}

def @func_9890() -> Tensor[(4, 8, 8), float32] {
  @func_9888() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_7153(%var_7150: Tensor[(7, 16, 15), float64], %var_7151: Tensor[(1, 195), float64], %var_7152: Tensor[(4), float32]) -> (Tensor[(7, 16, 15), bool], Tensor[(144), float32], Tensor[(5, 13, 3), float64], Tensor[(1, 195), float64], Tensor[(8, 15, 14), float64], Tensor[(4, 7, 11), bool], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(1, 4), float32]) {
  %796 = fn (%var_7067: Tensor[(7, 16, 15), float64], %var_7098: Tensor[(1, 195), float64], %var_7109: Tensor[(4), float32]) -> (Tensor[(7, 16, 15), bool], Tensor[(144), float32], Tensor[(5, 13, 3), float64], Tensor[(1, 195), float64], Tensor[(8, 15, 14), float64], Tensor[(4, 7, 11), bool], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(1, 4), float32]) {
    %754 = cast(meta[relay.Constant][70] /* ty=Tensor[(7, 16, 15), float64] */, dtype="bool") /* ty=Tensor[(7, 16, 15), bool] */;
    %755 = shape_of(%var_7067, dtype="int32") /* ty=Tensor[(3), int32] */;
    %756 = cast(%var_7067, dtype="bool") /* ty=Tensor[(7, 16, 15), bool] */;
    %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %758 = cast(%var_7067, dtype="float64") /* ty=Tensor[(7, 16, 15), float64] */;
    %759 = reshape(%758, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), float64] */;
    %760 = @func_3586(%759) /* ty=(Tensor[(8, 15, 14), float64], Tensor[(6, 2, 12), float32], Tensor[(144), float32]) */;
    %761 = cast(%var_7098, dtype="float64") /* ty=Tensor[(1, 195), float64] */;
    %762 = reshape(%761, newshape=[5, 13, 3]) /* ty=Tensor[(5, 13, 3), float64] */;
    %763 = @func_3156(%762) /* ty=(Tensor[(5, 13, 3), float64],) */;
    %764 = cast(%var_7067, dtype="float64") /* ty=Tensor[(7, 16, 15), float64] */;
    %765 = reshape(%764, newshape=[8, 15, 14]) /* ty=Tensor[(8, 15, 14), float64] */;
    %766 = @func_3586(%765) /* ty=(Tensor[(8, 15, 14), float64], Tensor[(6, 2, 12), float32], Tensor[(144), float32]) */;
    %767 = cast(meta[relay.Constant][71] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
    %768 = cast(meta[relay.Constant][71] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
    %769 = cast(%var_7109, dtype="float32") /* ty=Tensor[(4), float32] */;
    %770 = reshape(%767, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
    %771 = reshape(%768, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
    %772 = reshape(%769, newshape=[1, 4]) /* ty=Tensor[(1, 4), float32] */;
    %773 = @func_4821(%770, %771, %772) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */;
    %774 = cast(meta[relay.Constant][72] /* ty=Tensor[(351), float64] */, dtype="float64") /* ty=Tensor[(351), float64] */;
    %775 = reshape(%774, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float64] */;
    %776 = cast(meta[relay.Constant][73] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
    %777 = %760.2;
    %778 = cast(%777, dtype="float32") /* ty=Tensor[(144), float32] */;
    %779 = reshape(%776, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
    %780 = reshape(%778, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %781 = @func_889(%779, %780) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
    %782 = cast(meta[relay.Constant][71] /* ty=Tensor[(308), uint8] */, dtype="uint8") /* ty=Tensor[(308), uint8] */;
    %783 = %773.0;
    %784 = cast(%783, dtype="uint8") /* ty=Tensor[(4, 7, 11), uint8] */;
    %785 = cast(%var_7109, dtype="float32") /* ty=Tensor[(4), float32] */;
    %786 = reshape(%782, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
    %787 = reshape(%784, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
    %788 = reshape(%785, newshape=[1, 4]) /* ty=Tensor[(1, 4), float32] */;
    %789 = @func_4821(%786, %787, %788) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */;
    %790 = equal(%756, %757) /* ty=Tensor[(7, 16, 15), bool] */;
    %791 = %763.0;
    %792 = %766.0;
    %793 = @func_5710(%775) /* ty=Tensor[(9, 13, 3), float64] */;
    %794 = %781.1;
    %795 = %789.2;
    (%790, %777, %791, %var_7098, %792, %783, meta[relay.Constant][71] /* ty=Tensor[(308), uint8] */, %var_7109, %793, meta[relay.Constant][72] /* ty=Tensor[(351), float64] */, %794, meta[relay.Constant][73] /* ty=Tensor[(60), int64] */, %795)
  };
  %796(%var_7150, %var_7151, %var_7152) /* ty=(Tensor[(7, 16, 15), bool], Tensor[(144), float32], Tensor[(5, 13, 3), float64], Tensor[(1, 195), float64], Tensor[(8, 15, 14), float64], Tensor[(4, 7, 11), bool], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(1, 4), float32]) */
}

def @func_12645(%var_12633: Tensor[(3, 8, 15), float64], %var_12634: Tensor[(3, 8, 15), float64]) -> (Tensor[(3, 8, 15), float64],) {
  %797 = cast(%var_12634, dtype="float64") /* ty=Tensor[(3, 8, 15), float64] */;
  %798 = shape_of(%var_12633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%var_12633, dtype="float64") /* ty=Tensor[(3, 8, 15), float64] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %801 = power(%799, %800) /* ty=Tensor[(3, 8, 15), float64] */;
  (%801,)
}

def @func_14015() -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(256), float32]) {
  %808 = fn () -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(256), float32]) {
    %802 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %803 = @func_13770() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(9, 13, 3), float32]) */;
    %804 = @func_9104() /* ty=(Tensor[(256), float32],) */;
    %805 = %802.0;
    %806 = %803.0;
    %807 = %804.0;
    (%805, %806, %807)
  };
  %808() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(256), float32]) */
}

def @func_12775() -> Tensor[(13, 15, 11), float32] {
  @func_12773() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_3158(%var_3157: Tensor[(5, 13, 3), float64]) -> (Tensor[(5, 13, 3), float64],) {
  %811 = fn (%var_3152: Tensor[(5, 13, 3), float64]) -> (Tensor[(5, 13, 3), float64],) {
    %809 = cast(%var_3152, dtype="float64") /* ty=Tensor[(5, 13, 3), float64] */;
    %810 = tan(%809) /* ty=Tensor[(5, 13, 3), float64] */;
    (%810,)
  };
  %811(%var_3157) /* ty=(Tensor[(5, 13, 3), float64],) */
}

def @func_14158() -> Tensor[(13, 16, 1), float64] {
  @func_14156() /* ty=Tensor[(13, 16, 1), float64] */
}

def @func_21278() -> Tensor[(4, 8, 8), float64] {
  %812 = fn () -> Tensor[(4, 8, 8), float64] {
    @func_18157() /* ty=Tensor[(4, 8, 8), float64] */
  };
  %812() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_16829() -> Tensor[(10, 3, 9), float64] {
  @func_16827() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_1771(%var_1769: Tensor[(13, 1, 2), float32]) -> (Tensor[(13, 1, 2), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(1, 144), float32]) {
  @func_1768(%var_1769) /* ty=(Tensor[(13, 1, 2), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(1, 144), float32]) */
}

def @func_11372() -> Tensor[(4, 8, 8), float32] {
  @func_11370() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_14066() -> (Tensor[(4, 8, 8), float64],) {
  %813 = @func_12123() /* ty=Tensor[(4, 8, 8), float64] */;
  (%813,)
}

def @func_14735() -> (Tensor[(256), float32],) {
  %814 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %815 = %814.0;
  (%815,)
}

def @func_12649(%var_12647: Tensor[(3, 8, 15), float64], %var_12648: Tensor[(3, 8, 15), float64]) -> (Tensor[(3, 8, 15), float64],) {
  @func_12645(%var_12647, %var_12648) /* ty=(Tensor[(3, 8, 15), float64],) */
}

def @func_14825() -> (Tensor[(4, 8, 8), float64],) {
  %819 = fn () -> (Tensor[(4, 8, 8), float64],) {
    %816 = @func_12123() /* ty=Tensor[(4, 8, 8), float64] */;
    %817 = cast(%816, dtype="float64") /* ty=Tensor[(4, 8, 8), float64] */;
    %818 = sigmoid(%817) /* ty=Tensor[(4, 8, 8), float64] */;
    (%818,)
  };
  %819() /* ty=(Tensor[(4, 8, 8), float64],) */
}

def @func_17009() -> (Tensor[(4, 8, 8), float32], Tensor[(351), float64]) {
  %820 = @func_14824() /* ty=(Tensor[(4, 8, 8), float64],) */;
  %821 = %820.0;
  %822 = cast(%821, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %823 = @func_10980() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(351), float64], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(4), float32], Tensor[(121, 1), int8], Tensor[(?, 11, 11), float64]) */;
  %824 = log(%822) /* ty=Tensor[(4, 8, 8), float32] */;
  %825 = %823.3;
  (%824, %825)
}

def @func_18294() -> (Tensor[(10, 3, 9), float64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(4, 36), float32], Tensor[(10, 3, 9), float64]) {
  %835 = fn () -> (Tensor[(10, 3, 9), float64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(4, 36), float32], Tensor[(10, 3, 9), float64]) {
    %826 = @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */;
    %827 = cast(meta[relay.Constant][74] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
    %828 = cast(meta[relay.Constant][75] /* ty=Tensor[(4, 36), float32] */, dtype="float32") /* ty=Tensor[(4, 36), float32] */;
    %829 = reshape(%827, newshape=[60]) /* ty=Tensor[(60), int64] */;
    %830 = reshape(%828, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %831 = @func_9525(%829, %830) /* ty=(Tensor[(256), float32], Tensor[(5, 16, 11), uint64], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32]) */;
    %832 = %826.2;
    %833 = %831.4;
    %834 = @func_14469() /* ty=Tensor[(10, 3, 9), float64] */;
    (%832, %833, meta[relay.Constant][74] /* ty=Tensor[(60), int64] */, meta[relay.Constant][75] /* ty=Tensor[(4, 36), float32] */, %834)
  };
  %835() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(4, 36), float32], Tensor[(10, 3, 9), float64]) */
}

def @func_19753() -> (Tensor[(256), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) {
  %841 = fn () -> (Tensor[(256), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) {
    %836 = @func_17138() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) */;
    %837 = cast(meta[relay.Constant][76] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
    %838 = reshape(%837, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
    %839 = %836.2;
    %840 = @func_8902(%838) /* ty=Tensor[(13, 16, 1), float64] */;
    (%839, %840, meta[relay.Constant][76] /* ty=Tensor[(208), float64] */)
  };
  %841() /* ty=(Tensor[(256), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */
}

def @func_19951() -> (Tensor[(256), float32], Tensor[(256), float32]) {
  %842 = @func_9997() /* ty=Tensor[(256), float32] */;
  %843 = @func_17581() /* ty=Tensor[(256), float32] */;
  (%842, %843)
}

def @func_13809() -> (Tensor[(13, 15, 11), float32],) {
  %844 = @func_12026() /* ty=Tensor[(13, 15, 11), float32] */;
  (%844,)
}

def @main(%var_22218: Tensor[(13, 15, 11), float32]) -> (Tensor[(13, 15, 11), int16],) {
  %845 = @func_12414() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
  %846 = %845.2;
  %847 = cast(%var_22218, dtype="int16") /* ty=Tensor[(13, 15, 11), int16] */;
  %848 = shape_of(%846, dtype="int32") /* ty=Tensor[(3), int32] */;
  %849 = cast(%846, dtype="int16") /* ty=Tensor[(13, 15, 11), int16] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %851 = left_shift(%849, %850) /* ty=Tensor[(13, 15, 11), int16] */;
  (%851,)
}

def @func_14068() -> (Tensor[(4, 8, 8), float64],) {
  @func_14066() /* ty=(Tensor[(4, 8, 8), float64],) */
}

def @func_14469() -> Tensor[(10, 3, 9), float64] {
  %852 = @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */;
  %852.2
}

def @func_19108() -> Tensor[(4, 8, 8), float32] {
  @func_19106() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_21457() -> (Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32]) {
  @func_21455() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32]) */
}

def @func_18701() -> (Tensor[(4, 8, 8), float64],) {
  %853 = @func_15283() /* ty=Tensor[(4, 8, 8), float64] */;
  (%853,)
}

def @func_13771() -> (Tensor[(13, 15, 11), float32], Tensor[(9, 13, 3), float32]) {
  %860 = fn () -> (Tensor[(13, 15, 11), float32], Tensor[(9, 13, 3), float32]) {
    %854 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %855 = @func_11976() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) */;
    %856 = %855.1;
    %857 = cast(%856, dtype="float32") /* ty=Tensor[(9, 13, 3), float32] */;
    %858 = %854.0;
    %859 = atan(%857) /* ty=Tensor[(9, 13, 3), float32] */;
    (%858, %859)
  };
  %860() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(9, 13, 3), float32]) */
}

def @func_10772(%var_10770: uint16) -> (Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16]) {
  @func_10769(%var_10770) /* ty=(Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16]) */
}

def @func_18366(%var_18364: Tensor[(880), float32], %var_18365: Tensor[(2240), int64]) -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(880), float32], Tensor[(448), bool], Tensor[(780), uint16], Tensor[(2240), int64]) {
  @func_18362(%var_18364, %var_18365) /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(880), float32], Tensor[(448), bool], Tensor[(780), uint16], Tensor[(2240), int64]) */
}

def @func_15360() -> (Tensor[(256), float32], Tensor[(256), float32]) {
  %861 = @func_10832() /* ty=(Tensor[(256), float32],) */;
  %862 = @func_9868() /* ty=(Tensor[(256), float32],) */;
  %863 = %861.0;
  %864 = %862.0;
  (%863, %864)
}

def @func_17635() -> (Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(16, ?, 6), float32], Tensor[(4, 8, 8), float64]) {
  %865 = @func_10109() /* ty=(Tensor[(90, 3), float32], Tensor[(4, 8, 8), float32]) */;
  %866 = @func_9104() /* ty=(Tensor[(256), float32],) */;
  %867 = cast(meta[relay.Constant][77] /* ty=Tensor[(96), uint32] */, dtype="uint32") /* ty=Tensor[(96), uint32] */;
  %868 = reshape(%867, newshape=[16, 1, 6]) /* ty=Tensor[(16, 1, 6), uint32] */;
  %869 = @func_14345(%868) /* ty=(Tensor[(16, 1, 6), uint32], Tensor[(256), float32]) */;
  %870 = %869.0;
  %871 = cast(meta[relay.Constant][77] /* ty=Tensor[(96), uint32] */, dtype="uint64") /* ty=Tensor[(96), uint64] */;
  %872 = shape_of(%870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(%870, dtype="uint64") /* ty=Tensor[(16, 1, 6), uint64] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %875 = bitwise_or(%873, %874) /* ty=Tensor[(16, ?, 6), uint64] */;
  %876 = cast(%875, dtype="float32") /* ty=Tensor[(16, ?, 6), float32] */;
  %877 = sigmoid(%876) /* ty=Tensor[(16, ?, 6), float32] */;
  %878 = cast(%877, dtype="float32") /* ty=Tensor[(16, ?, 6), float32] */;
  %879 = %865.1;
  %880 = %866.0;
  %881 = acosh(%878) /* ty=Tensor[(16, ?, 6), float32] */;
  %882 = @func_12699() /* ty=Tensor[(4, 8, 8), float64] */;
  (%879, %880, %881, %882)
}

def @func_11303() -> (Tensor[(13, 15, 11), float32],) {
  @func_11301() /* ty=(Tensor[(13, 15, 11), float32],) */
}

def @func_15223() -> Tensor[(10, 3, 9), float64] {
  %883 = fn () -> Tensor[(10, 3, 9), float64] {
    @func_13798() /* ty=Tensor[(10, 3, 9), float64] */
  };
  %883() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_17679() -> Tensor[(13, 15, 11), float64] {
  @func_17677() /* ty=Tensor[(13, 15, 11), float64] */
}

def @func_19032() -> (Tensor[(13, 15, 11), float32], Tensor[(1680), float64]) {
  %888 = fn () -> (Tensor[(13, 15, 11), float32], Tensor[(1680), float64]) {
    %884 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %885 = @func_16869() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(1680), float64]) */;
    %886 = %884.0;
    %887 = %885.3;
    (%886, %887)
  };
  %888() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(1680), float64]) */
}

def @func_21391() -> (Tensor[(10, 3, 9), float64],) {
  @func_21389() /* ty=(Tensor[(10, 3, 9), float64],) */
}

def @func_9085() -> (Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) {
  @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */
}

def @func_17677() -> Tensor[(13, 15, 11), float64] {
  %889 = @func_17138() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) */;
  %890 = %889.0;
  %891 = cast(%890, dtype="float64") /* ty=Tensor[(13, 15, 11), float64] */;
  acos(%891) /* ty=Tensor[(13, 15, 11), float64] */
}

def @func_19037() -> Tensor[(13, 15, 11), float32] {
  %893 = fn () -> Tensor[(13, 15, 11), float32] {
    %892 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %892.0
  };
  %893() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_21240() -> (Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32]) {
  %897 = fn () -> (Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32]) {
    %894 = @func_17635() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(16, ?, 6), float32], Tensor[(4, 8, 8), float64]) */;
    %895 = @func_11370() /* ty=Tensor[(4, 8, 8), float32] */;
    %896 = %894.0;
    (%895, %896)
  };
  %897() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32]) */
}

def @func_15620() -> (Tensor[(4, 8, 8), float64],) {
  %899 = fn () -> (Tensor[(4, 8, 8), float64],) {
    %898 = @func_12699() /* ty=Tensor[(4, 8, 8), float64] */;
    (%898,)
  };
  %899() /* ty=(Tensor[(4, 8, 8), float64],) */
}

def @func_12473() -> Tensor[(4, 8, 8), float32] {
  %900 = fn () -> Tensor[(4, 8, 8), float32] {
    @func_11370() /* ty=Tensor[(4, 8, 8), float32] */
  };
  %900() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_16355() -> Tensor[(4, 8, 8), float32] {
  %901 = @func_10109() /* ty=(Tensor[(90, 3), float32], Tensor[(4, 8, 8), float32]) */;
  %901.1
}

def @func_21507() -> (Tensor[(13, 15, 11), float32],) {
  %904 = fn () -> (Tensor[(13, 15, 11), float32],) {
    %902 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %903 = %902.0;
    (%903,)
  };
  %904() /* ty=(Tensor[(13, 15, 11), float32],) */
}

def @func_18459(%var_18457: Tensor[(12, 72), float32]) -> (Tensor[(4, 8, 8), float64], Tensor[(7, 44), uint8], Tensor[(4), float32], Tensor[(256), float32], Tensor[(12, 72), bool], Tensor[(4, 8, 8), float32]) {
  @func_18456(%var_18457) /* ty=(Tensor[(4, 8, 8), float64], Tensor[(7, 44), uint8], Tensor[(4), float32], Tensor[(256), float32], Tensor[(12, 72), bool], Tensor[(4, 8, 8), float32]) */
}

def @func_16758() -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(256), float32], Tensor[(13, 15, 11), float32]) {
  @func_16756() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(256), float32], Tensor[(13, 15, 11), float32]) */
}

def @func_11831(%var_11829: Tensor[(1, 144), float32]) -> (Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(117, 3), float32], Tensor[(6, 2, 12), float32], Tensor[(1, 144), float32]) {
  @func_11828(%var_11829) /* ty=(Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(117, 3), float32], Tensor[(6, 2, 12), float32], Tensor[(1, 144), float32]) */
}

def @func_5884(%var_5883: Tensor[(10, 3, 9), float32]) -> (Tensor[(10, 3, 9), float64],) {
  %912 = fn (%var_5865: Tensor[(10, 3, 9), float32]) -> (Tensor[(10, 3, 9), float64],) {
    %905 = cast(%var_5865, dtype="float32") /* ty=Tensor[(10, 3, 9), float32] */;
    %906 = exp(%905) /* ty=Tensor[(10, 3, 9), float32] */;
    %907 = cast(%var_5865, dtype="float64") /* ty=Tensor[(10, 3, 9), float64] */;
    %908 = shape_of(%906, dtype="int32") /* ty=Tensor[(3), int32] */;
    %909 = cast(%906, dtype="float64") /* ty=Tensor[(10, 3, 9), float64] */;
    %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %911 = divide(%909, %910) /* ty=Tensor[(10, 3, 9), float64] */;
    (%911,)
  };
  %912(%var_5883) /* ty=(Tensor[(10, 3, 9), float64],) */
}

def @func_18535() -> (Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) {
  %913 = @func_12604() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %914 = @func_15515() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %915 = @func_12413() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
  %916 = %913.0;
  %917 = %914.0;
  %918 = %915.2;
  (%916, %917, %918)
}

def @func_16274(%var_16272: uint16) -> (Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(6, 2, 12), float32], Tensor[(1080), float64], Tensor[(144), float32], Tensor[(144), float32], Tensor[(3, 20), int64]) {
  @func_16271(%var_16272) /* ty=(Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(6, 2, 12), float32], Tensor[(1080), float64], Tensor[(144), float32], Tensor[(144), float32], Tensor[(3, 20), int64]) */
}

def @func_20409(%var_20407: Tensor[(12, 8, 8), float64]) -> Tensor[(12, 8, 8), float64] {
  @func_20406(%var_20407) /* ty=Tensor[(12, 8, 8), float64] */
}

def @func_10602(%var_10600: Tensor[(1, 11, 11), int8], %var_10601: Tensor[(1, 11, 11), int8]) -> (Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) {
  @func_10598(%var_10600, %var_10601) /* ty=(Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) */
}

def @func_14995() -> (Tensor[(256), float32],) {
  %920 = fn () -> (Tensor[(256), float32],) {
    %919 = @func_11253() /* ty=Tensor[(256), float32] */;
    (%919,)
  };
  %920() /* ty=(Tensor[(256), float32],) */
}

def @func_19523() -> Tensor[(4, 8, 8), float64] {
  %921 = fn () -> Tensor[(4, 8, 8), float64] {
    @func_12699() /* ty=Tensor[(4, 8, 8), float64] */
  };
  %921() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_19892() -> Tensor[(4, 8, 8), float64] {
  @func_19890() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_9869() -> (Tensor[(256), float32],) {
  %924 = fn () -> (Tensor[(256), float32],) {
    %922 = @func_9104() /* ty=(Tensor[(256), float32],) */;
    %923 = %922.0;
    (%923,)
  };
  %924() /* ty=(Tensor[(256), float32],) */
}

def @func_9162() -> Tensor[(13, 15, 11), float32] {
  @func_9160() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_20234() -> (Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(?, 11, 11), bool], Tensor[(121), int8]) {
  %933 = fn () -> (Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(?, 11, 11), bool], Tensor[(121), int8]) {
    %925 = cast(meta[relay.Constant][78] /* ty=Tensor[(121), int8] */, dtype="int8") /* ty=Tensor[(121), int8] */;
    %926 = cast(meta[relay.Constant][78] /* ty=Tensor[(121), int8] */, dtype="int8") /* ty=Tensor[(121), int8] */;
    %927 = reshape(%925, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
    %928 = reshape(%926, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
    %929 = @func_10598(%927, %928) /* ty=(Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) */;
    %930 = @func_11874() /* ty=Tensor[(4, 8, 8), float32] */;
    %931 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
    %932 = %929.0;
    (%930, %931, %932, meta[relay.Constant][78] /* ty=Tensor[(121), int8] */)
  };
  %933() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(?, 11, 11), bool], Tensor[(121), int8]) */
}

def @func_12187() -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(10, 3, 9), float64]) {
  @func_12185() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(10, 3, 9), float64]) */
}

def @func_9290(%var_9230: Tensor[(2, 264), uint16]) -> (Tensor[(10, 3, 9), float64], Tensor[(4, 6, 3), float32], Tensor[(11, 16, 3), bool], uint16, Tensor[(2, 264), uint16], Tensor[(144), float32], Tensor[(144), float32], Tensor[(1, 72), float64]) {
  %934 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
  %935 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 72), float32] */, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %936 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 72), float32] */, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %937 = reshape(%935, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %938 = reshape(%936, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
  %939 = cast(meta[relay.Constant][80] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %940 = cast(%var_9230, dtype="uint16") /* ty=Tensor[(2, 264), uint16] */;
  %941 = reshape(%939, newshape=[]) /* ty=uint16 */;
  %942 = reshape(%940, newshape=[11, 16, 3]) /* ty=Tensor[(11, 16, 3), uint16] */;
  %943 = @func_5472(%941, %942) /* ty=(Tensor[(11, 16, 3), bool],) */;
  %944 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 72), float32] */, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %945 = cast(meta[relay.Constant][81] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %946 = reshape(%944, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %947 = reshape(%945, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %948 = @func_2181(%946, %947) /* ty=(Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(144), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(10, 3, 2), float32], Tensor[(26), float32], Tensor[(10, 12, 3), bool]) */;
  %949 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 72), float32] */, dtype="float64") /* ty=Tensor[(1, 72), float64] */;
  %950 = %934.1;
  %951 = @func_1277(%937, %938) /* ty=Tensor[(4, 6, 3), float32] */;
  %952 = %943.0;
  %953 = %948.2;
  %954 = cosh(%949) /* ty=Tensor[(1, 72), float64] */;
  (%950, %951, %952, meta[relay.Constant][80] /* ty=uint16 */, %var_9230, %953, meta[relay.Constant][81] /* ty=Tensor[(144), float32] */, %954)
}

def @func_12026() -> Tensor[(13, 15, 11), float32] {
  @func_9160() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_17293() -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32]) {
  %958 = fn () -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32]) {
    %955 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %956 = @func_12423() /* ty=Tensor[(10, 3, 9), float64] */;
    %957 = %955.0;
    (%956, %957)
  };
  %958() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32]) */
}

def @func_14148() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) {
  %959 = @func_10019() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
  %960 = @func_14066() /* ty=(Tensor[(4, 8, 8), float64],) */;
  %961 = %959.0;
  %962 = %960.0;
  (%961, %962)
}

def @func_13800() -> Tensor[(10, 3, 9), float64] {
  @func_13798() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_1897(%var_1895: Tensor[(10, 13, 6), uint16], %var_1896: Tensor[(60, 1), int64]) -> (Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) {
  %974 = fn (%var_1881: Tensor[(10, 13, 6), uint16], %var_1891: Tensor[(60, 1), int64]) -> (Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) {
    %963 = cast(%var_1881, dtype="uint16") /* ty=Tensor[(10, 13, 6), uint16] */;
    %964 = shape_of(meta[relay.Constant][82] /* ty=Tensor[(10, 13, 6), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %965 = cast(meta[relay.Constant][82] /* ty=Tensor[(10, 13, 6), uint16] */, dtype="uint16") /* ty=Tensor[(10, 13, 6), uint16] */;
    %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %967 = cast(%var_1891, dtype="int64") /* ty=Tensor[(60, 1), int64] */;
    %968 = cast(meta[relay.Constant][83] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %969 = reshape(%967, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
    %970 = reshape(%968, newshape=[144]) /* ty=Tensor[(144), float32] */;
    %971 = @func_889(%969, %970) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
    %972 = bitwise_or(%965, %966) /* ty=Tensor[(10, 13, 6), uint16] */;
    %973 = %971.0;
    (%972, %973, %var_1891, meta[relay.Constant][83] /* ty=Tensor[(144), float32] */)
  };
  %974(%var_1895, %var_1896) /* ty=(Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) */
}

def @func_5081(%var_5079: Tensor[(5, 16, 11), float32]) -> Tensor[(5, 16, 11), float32] {
  @func_5078(%var_5079) /* ty=Tensor[(5, 16, 11), float32] */
}

def @func_14878() -> (Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float64], Tensor[(9, 13, 3), float32]) {
  %981 = fn () -> (Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float64], Tensor[(9, 13, 3), float32]) {
    %975 = @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */;
    %976 = @func_14066() /* ty=(Tensor[(4, 8, 8), float64],) */;
    %977 = @func_13770() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(9, 13, 3), float32]) */;
    %978 = %975.2;
    %979 = %976.0;
    %980 = %977.1;
    (%978, %979, %980)
  };
  %981() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float64], Tensor[(9, 13, 3), float32]) */
}

def @func_15285() -> Tensor[(4, 8, 8), float64] {
  @func_15283() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_19671() -> (Tensor[(60), int64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) {
  %987 = fn () -> (Tensor[(60), int64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) {
    %982 = @func_16647() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(256), float32], Tensor[(60), int64], Tensor[(144), float32]) */;
    %983 = @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %984 = %982.2;
    %985 = %983.0;
    %986 = @func_12123() /* ty=Tensor[(4, 8, 8), float64] */;
    (%984, %985, %986)
  };
  %987() /* ty=(Tensor[(60), int64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) */
}

def @func_20429() -> Tensor[(13, 15, 11), float32] {
  %989 = fn () -> Tensor[(13, 15, 11), float32] {
    %988 = @func_12225() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %988.0
  };
  %989() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_4821(%var_4794: Tensor[(4, 7, 11), uint8], %var_4795: Tensor[(4, 7, 11), uint8], %var_4801: Tensor[(1, 4), float32]) -> (Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) {
  %990 = cast(%var_4795, dtype="bool") /* ty=Tensor[(4, 7, 11), bool] */;
  %991 = shape_of(%var_4794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %992 = cast(%var_4794, dtype="bool") /* ty=Tensor[(4, 7, 11), bool] */;
  %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %994 = cast(%var_4801, dtype="float32") /* ty=Tensor[(1, 4), float32] */;
  %995 = cast(meta[relay.Constant][84] /* ty=Tensor[(1, 72), float32] */, dtype="float32") /* ty=Tensor[(1, 72), float32] */;
  %996 = reshape(%994, newshape=[2, 2, 1]) /* ty=Tensor[(2, 2, 1), float32] */;
  %997 = reshape(%995, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %998 = @func_3372(%996, %997) /* ty=(Tensor[(2, 2, 1), float32], Tensor[(10, 12, 3), bool], Tensor[(72), float32], Tensor[(144), float32], Tensor[(6, 2, 12), float32], Tensor[(6, 2, 12), float32], Tensor[(5, 13, 3), float64], Tensor[(195), float64]) */;
  %999 = less_equal(%992, %993) /* ty=Tensor[(4, 7, 11), bool] */;
  %1000 = %998.6;
  (%999, %1000, %var_4801, meta[relay.Constant][84] /* ty=Tensor[(1, 72), float32] */)
}

def @func_21573() -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32]) {
  %1004 = fn () -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32]) {
    %1001 = @func_15171() /* ty=(Tensor[(10, 3, 9), float64],) */;
    %1002 = %1001.0;
    %1003 = @func_20584() /* ty=Tensor[(13, 15, 11), float32] */;
    (%1002, %1003)
  };
  %1004() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32]) */
}

def @func_13394(%var_13392: Tensor[(308), uint8], %var_13393: Tensor[(60), int64]) -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(4, 7, 11), uint16], Tensor[(13, 15, 11), float32]) {
  %1030 = fn (%var_13327: Tensor[(308), uint8], %var_13340: Tensor[(60), int64]) -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(4, 7, 11), uint16], Tensor[(13, 15, 11), float32]) {
    %1005 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
    %1006 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %1007 = cast(%var_13340, dtype="int64") /* ty=Tensor[(60), int64] */;
    %1008 = reshape(%1007, newshape=[60]) /* ty=Tensor[(60), int64] */;
    %1009 = @func_9943(%1008) /* ty=(Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) */;
    %1010 = cast(%var_13327, dtype="uint8") /* ty=Tensor[(308), uint8] */;
    %1011 = cast(%var_13327, dtype="uint8") /* ty=Tensor[(308), uint8] */;
    %1012 = cast(meta[relay.Constant][85] /* ty=Tensor[(4), float32] */, dtype="float32") /* ty=Tensor[(4), float32] */;
    %1013 = reshape(%1010, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
    %1014 = reshape(%1011, newshape=[4, 7, 11]) /* ty=Tensor[(4, 7, 11), uint8] */;
    %1015 = reshape(%1012, newshape=[1, 4]) /* ty=Tensor[(1, 4), float32] */;
    %1016 = @func_4821(%1013, %1014, %1015) /* ty=(Tensor[(4, 7, 11), bool], Tensor[(5, 13, 3), float64], Tensor[(1, 4), float32], Tensor[(1, 72), float32]) */;
    %1017 = %1016.0;
    %1018 = cast(%1017, dtype="float32") /* ty=Tensor[(4, 7, 11), float32] */;
    %1019 = tan(%1018) /* ty=Tensor[(4, 7, 11), float32] */;
    %1020 = cast(%1017, dtype="uint16") /* ty=Tensor[(4, 7, 11), uint16] */;
    %1021 = shape_of(%1019, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1022 = cast(%1019, dtype="uint16") /* ty=Tensor[(4, 7, 11), uint16] */;
    %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1024 = @func_13021() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %1025 = %1005.0;
    %1026 = %1006.0;
    %1027 = %1009.3;
    %1028 = add(%1022, %1023) /* ty=Tensor[(4, 7, 11), uint16] */;
    %1029 = %1024.0;
    (%1025, %1026, %var_13327, meta[relay.Constant][85] /* ty=Tensor[(4), float32] */, %1027, %var_13340, %1028, %1029)
  };
  %1030(%var_13392, %var_13393) /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(308), uint8], Tensor[(4), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(4, 7, 11), uint16], Tensor[(13, 15, 11), float32]) */
}

def @func_14156() -> Tensor[(13, 16, 1), float64] {
  @func_13615() /* ty=Tensor[(13, 16, 1), float64] */
}

def @func_3588(%var_3587: Tensor[(8, 15, 14), float64]) -> (Tensor[(8, 15, 14), float64], Tensor[(6, 2, 12), float32], Tensor[(144), float32]) {
  %1039 = fn (%var_3554: Tensor[(8, 15, 14), float64]) -> (Tensor[(8, 15, 14), float64], Tensor[(6, 2, 12), float32], Tensor[(144), float32]) {
    %1031 = cast(%var_3554, dtype="float64") /* ty=Tensor[(8, 15, 14), float64] */;
    %1032 = exp(%1031) /* ty=Tensor[(8, 15, 14), float64] */;
    %1033 = cast(%1032, dtype="float64") /* ty=Tensor[(8, 15, 14), float64] */;
    %1034 = cast(meta[relay.Constant][86] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %1035 = reshape(%1034, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float32] */;
    %1036 = @func_154(%1035) /* ty=(Tensor[(6, 2, 12), float32],) */;
    %1037 = sin(%1033) /* ty=Tensor[(8, 15, 14), float64] */;
    %1038 = %1036.0;
    (%1037, %1038, meta[relay.Constant][86] /* ty=Tensor[(144), float32] */)
  };
  %1039(%var_3587) /* ty=(Tensor[(8, 15, 14), float64], Tensor[(6, 2, 12), float32], Tensor[(144), float32]) */
}

def @func_10861() -> (Tensor[(4, 8, 8), float32],) {
  @func_10859() /* ty=(Tensor[(4, 8, 8), float32],) */
}

def @func_10598(%var_10586: Tensor[(1, 11, 11), int8], %var_10587: Tensor[(1, 11, 11), int8]) -> (Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) {
  %1040 = cast(%var_10587, dtype="bool") /* ty=Tensor[(1, 11, 11), bool] */;
  %1041 = shape_of(%var_10586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1042 = cast(%var_10586, dtype="bool") /* ty=Tensor[(1, 11, 11), bool] */;
  %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1044 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %1045 = less_equal(%1042, %1043) /* ty=Tensor[(?, 11, 11), bool] */;
  %1046 = %1044.0;
  (%1045, %1046)
}

def @func_14112(%var_14085: Tensor[(880), float32], %var_14099: Tensor[(112, 4), bool], %var_14100: Tensor[(780), uint16], %var_14101: Tensor[(2, 1120), int64]) -> (Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32], Tensor[(256), float32], Tensor[(5, 16, 11), float32], Tensor[(880), float32], Tensor[(16, 7, 4), bool], Tensor[(112, 4), bool], Tensor[(780), uint16], Tensor[(2, 1120), int64], Tensor[(13, 15, 11), float32]) {
  %1047 = cast(%var_14085, dtype="float32") /* ty=Tensor[(880), float32] */;
  %1048 = reshape(%1047, newshape=[5, 16, 11]) /* ty=Tensor[(5, 16, 11), float32] */;
  %1049 = cast(%var_14099, dtype="bool") /* ty=Tensor[(112, 4), bool] */;
  %1050 = cast(%var_14100, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %1051 = cast(%var_14101, dtype="int64") /* ty=Tensor[(2, 1120), int64] */;
  %1052 = reshape(%1049, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
  %1053 = reshape(%1050, newshape=[780]) /* ty=Tensor[(780), uint16] */;
  %1054 = reshape(%1051, newshape=[28, 80]) /* ty=Tensor[(28, 80), int64] */;
  %1055 = @func_6163(%1052, %1053, %1054) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(72), float32], Tensor[(780), uint16], Tensor[(72), float32], Tensor[(28, 80), uint8]) */;
  %1056 = @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */;
  %1057 = @func_11906() /* ty=Tensor[(10, 3, 9), float64] */;
  %1058 = @func_10430() /* ty=Tensor[(13, 15, 11), float32] */;
  %1059 = @func_9997() /* ty=Tensor[(256), float32] */;
  %1060 = @func_5078(%1048) /* ty=Tensor[(5, 16, 11), float32] */;
  %1061 = %1055.0;
  %1062 = %1056.1;
  (%1057, %1058, %1059, %1060, %var_14085, %1061, %var_14099, %var_14100, %var_14101, %1062)
}

def @func_15515() -> (Tensor[(13, 15, 11), float32],) {
  %1063 = @func_11301() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %1064 = %1063.0;
  (%1064,)
}

def @func_11104() -> (Tensor[(208), float64], Tensor[(256), float32], Tensor[(4), float32], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(1, 4), float32]) {
  @func_11102() /* ty=(Tensor[(208), float64], Tensor[(256), float32], Tensor[(4), float32], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(1, 4), float32]) */
}

def @func_16073() -> (Tensor[(4, 8, 8), float64],) {
  %1066 = fn () -> (Tensor[(4, 8, 8), float64],) {
    %1065 = @func_15283() /* ty=Tensor[(4, 8, 8), float64] */;
    (%1065,)
  };
  %1066() /* ty=(Tensor[(4, 8, 8), float64],) */
}

def @func_8904(%var_8903: Tensor[(13, 16, 1), float64]) -> Tensor[(13, 16, 1), float64] {
  %1068 = fn (%var_8892: Tensor[(13, 16, 1), float64]) -> Tensor[(13, 16, 1), float64] {
    %1067 = cast(%var_8892, dtype="float64") /* ty=Tensor[(13, 16, 1), float64] */;
    sigmoid(%1067) /* ty=Tensor[(13, 16, 1), float64] */
  };
  %1068(%var_8903) /* ty=Tensor[(13, 16, 1), float64] */
}

def @func_19994() -> (Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float32]) {
  %1069 = @func_17427() /* ty=(Tensor[(256), float32], Tensor[(10, 3, 9), float64]) */;
  %1070 = @func_19447() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float32]) */;
  %1071 = @func_12123() /* ty=Tensor[(4, 8, 8), float64] */;
  %1072 = %1069.1;
  %1073 = %1070.0;
  (%1071, %1072, %1073)
}

def @func_19996() -> (Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float32]) {
  @func_19994() /* ty=(Tensor[(4, 8, 8), float64], Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float32]) */
}

def @func_11536() -> Tensor[(13, 15, 11), float32] {
  @func_10430() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_21008() -> Tensor[(13, 15, 11), float32] {
  %1074 = @func_12413() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
  %1074.2
}

def @func_19590(%var_19562: Tensor[(144), float32]) -> (Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(13, 15, 11), float32], Tensor[(144), float32]) {
  %1075 = @func_19447() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float32]) */;
  %1076 = cast(%var_19562, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1077 = reshape(%1076, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1078 = @func_14562(%1077) /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32], Tensor[(60), int64], Tensor[(4, 6, 3), float32], Tensor[(3, 24), float32]) */;
  %1079 = @func_19031() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(1680), float64]) */;
  %1080 = %1078.4;
  %1081 = cast(%1080, dtype="int64") /* ty=Tensor[(60), int64] */;
  %1082 = reshape(%1081, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %1083 = @func_9943(%1082) /* ty=(Tensor[(13, 16, 1), float64], Tensor[(144), float32], Tensor[(780, 1), uint16], Tensor[(60), int64]) */;
  %1084 = %1075.0;
  %1085 = %1079.0;
  %1086 = %1083.1;
  (%1084, %1080, %var_19562, %1085, %1086)
}

def @func_20822(%var_20820: Tensor[(11, 9, 1), uint16], %var_20821: Tensor[(11, 9, 11), uint16]) -> (Tensor[(11, 9, 11), float64],) {
  %1092 = fn (%var_20788: Tensor[(11, 9, 1), uint16], %var_20789: Tensor[(11, 9, 11), uint16]) -> (Tensor[(11, 9, 11), float64],) {
    %1087 = cast(%var_20788, dtype="uint16") /* ty=Tensor[(11, 9, 1), uint16] */;
    %1088 = cast(%var_20789, dtype="uint16") /* ty=Tensor[(11, 9, 11), uint16] */;
    %1089 = logical_xor(%1087, %1088) /* ty=Tensor[(11, 9, 11), uint16] */;
    %1090 = cast(%1089, dtype="float64") /* ty=Tensor[(11, 9, 11), float64] */;
    %1091 = cos(%1090) /* ty=Tensor[(11, 9, 11), float64] */;
    (%1091,)
  };
  %1092(%var_20820, %var_20821) /* ty=(Tensor[(11, 9, 11), float64],) */
}

def @func_9915() -> (Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) {
  @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */
}

def @func_9137(%var_9135: uint16, %var_9136: Tensor[(528), uint16]) -> (Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(60), int64], Tensor[(26), float32]) {
  @func_9133(%var_9135, %var_9136) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(60), int64], Tensor[(26), float32]) */
}

def @func_21726() -> (Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32]) {
  %1095 = fn () -> (Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32]) {
    %1093 = @func_17255() /* ty=Tensor[(4, 8, 8), float64] */;
    %1094 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
    (%1093, %1094)
  };
  %1095() /* ty=(Tensor[(4, 8, 8), float64], Tensor[(4, 8, 8), float32]) */
}

def @func_15923() -> (Tensor[(256), float32],) {
  @func_15921() /* ty=(Tensor[(256), float32],) */
}

def @func_4336(%var_4333: Tensor[(16, 10, 14), int64], %var_4334: Tensor[(780), uint16], %var_4335: Tensor[(72), float32]) -> (Tensor[(16, 10, 14), bool], Tensor[(780), uint16], Tensor[(144), float32], Tensor[(60, ?), uint16], Tensor[(4, 6, 3), float32], Tensor[(72), float32]) {
  @func_4331(%var_4333, %var_4334, %var_4335) /* ty=(Tensor[(16, 10, 14), bool], Tensor[(780), uint16], Tensor[(144), float32], Tensor[(60, ?), uint16], Tensor[(4, 6, 3), float32], Tensor[(72), float32]) */
}

def @func_12125() -> Tensor[(4, 8, 8), float64] {
  @func_12123() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_19797() -> Tensor[(4, 8, 8), float32] {
  @func_19795() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_20955() -> Tensor[(10, 3, 9), float64] {
  @func_20953() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_11907() -> Tensor[(10, 3, 9), float64] {
  %1097 = fn () -> Tensor[(10, 3, 9), float64] {
    %1096 = @func_10203() /* ty=(Tensor[(10, 3, 9), float64],) */;
    %1096.0
  };
  %1097() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_10834() -> (Tensor[(256), float32],) {
  @func_10832() /* ty=(Tensor[(256), float32],) */
}

def @func_15308() -> (Tensor[(13, 15, 11), float64],) {
  %1098 = @func_13242() /* ty=Tensor[(13, 15, 11), float64] */;
  (%1098,)
}

def @func_17545(%var_17544: Tensor[(4, 8, 8), float32]) -> (Tensor[(4, 8, 8), float32],) {
  %1105 = fn (%var_17537: Tensor[(4, 8, 8), float32]) -> (Tensor[(4, 8, 8), float32],) {
    %1099 = @func_16355() /* ty=Tensor[(4, 8, 8), float32] */;
    %1100 = cast(%var_17537, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
    %1101 = shape_of(%1099, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1102 = cast(%1099, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
    %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1104 = divide(%1102, %1103) /* ty=Tensor[(4, 8, 8), float32] */;
    (%1104,)
  };
  %1105(%var_17544) /* ty=(Tensor[(4, 8, 8), float32],) */
}

def @func_17498(%var_17496: Tensor[(49920), float64]) -> (Tensor[(9, 13, 3), float64], Tensor[(4, 528), int8], Tensor[(60), int64], Tensor[(49920), float64]) {
  @func_17495(%var_17496) /* ty=(Tensor[(9, 13, 3), float64], Tensor[(4, 528), int8], Tensor[(60), int64], Tensor[(49920), float64]) */
}

def @func_22118() -> Tensor[(256), float32] {
  %1107 = fn () -> Tensor[(256), float32] {
    %1106 = @func_19951() /* ty=(Tensor[(256), float32], Tensor[(256), float32]) */;
    %1106.1
  };
  %1107() /* ty=Tensor[(256), float32] */
}

def @func_19544() -> Tensor[(256), float32] {
  %1108 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %1108.2
}

def @func_13798() -> Tensor[(10, 3, 9), float64] {
  %1109 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
  %1109.0
}

def @func_13811() -> (Tensor[(13, 15, 11), float32],) {
  @func_13809() /* ty=(Tensor[(13, 15, 11), float32],) */
}

def @func_1768(%var_1750: Tensor[(13, 1, 2), float32]) -> (Tensor[(13, 1, 2), float32], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(1, 144), float32]) {
  %1110 = cast(%var_1750, dtype="float32") /* ty=Tensor[(13, 1, 2), float32] */;
  %1111 = cast(meta[relay.Constant][87] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %1112 = cast(meta[relay.Constant][88] /* ty=Tensor[(1, 144), float32] */, dtype="float32") /* ty=Tensor[(1, 144), float32] */;
  %1113 = reshape(%1111, newshape=[10, 3, 2]) /* ty=Tensor[(10, 3, 2), int64] */;
  %1114 = reshape(%1112, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1115 = @func_889(%1113, %1114) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(144), float32], Tensor[(10, 3, 2), float32]) */;
  %1116 = tan(%1110) /* ty=Tensor[(13, 1, 2), float32] */;
  %1117 = %1115.2;
  (%1116, %1117, meta[relay.Constant][87] /* ty=Tensor[(60), int64] */, meta[relay.Constant][88] /* ty=Tensor[(1, 144), float32] */)
}

def @func_10021() -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) {
  @func_10019() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */
}

def @func_17717() -> (Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float32]) {
  @func_17715() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float32]) */
}

def @func_20691() -> (Tensor[(13, 15, 11), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(4, 8, 8), float32]) {
  @func_20689() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(4, 8, 8), float32]) */
}

def @func_18898() -> Tensor[(256), float32] {
  %1118 = @func_10832() /* ty=(Tensor[(256), float32],) */;
  %1118.0
}

def @func_18510() -> (Tensor[(208, 1), float64],) {
  @func_18508() /* ty=(Tensor[(208, 1), float64],) */
}

def @func_22032() -> (Tensor[(13, 16, 1), float64],) {
  @func_22030() /* ty=(Tensor[(13, 16, 1), float64],) */
}

def @func_20899() -> Tensor[(4, 8, 8), float64] {
  @func_20897() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_18921() -> (Tensor[(13, 15, 11), float32],) {
  %1119 = @func_13021() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %1120 = %1119.0;
  (%1120,)
}

def @func_14971() -> (Tensor[(4, 8, 8), float32],) {
  %1122 = fn () -> (Tensor[(4, 8, 8), float32],) {
    %1121 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
    (%1121,)
  };
  %1122() /* ty=(Tensor[(4, 8, 8), float32],) */
}

def @func_10068(%var_10067: Tensor[(2, 1, 10), float32]) -> (Tensor[(2, ?, 10), bool],) {
  %1130 = fn (%var_10044: Tensor[(2, 1, 10), float32]) -> (Tensor[(2, ?, 10), bool],) {
    %1123 = cast(%var_10044, dtype="float32") /* ty=Tensor[(2, 1, 10), float32] */;
    %1124 = acosh(%1123) /* ty=Tensor[(2, 1, 10), float32] */;
    %1125 = cast(%var_10044, dtype="bool") /* ty=Tensor[(2, 1, 10), bool] */;
    %1126 = shape_of(%1124, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1127 = cast(%1124, dtype="bool") /* ty=Tensor[(2, 1, 10), bool] */;
    %1128 = dyn.reshape(%1125, %1126, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1129 = logical_and(%1127, %1128) /* ty=Tensor[(2, ?, 10), bool] */;
    (%1129,)
  };
  %1130(%var_10067) /* ty=(Tensor[(2, ?, 10), bool],) */
}

def @func_16775() -> (Tensor[(10, 3, 9), float64],) {
  %1131 = @func_10883() /* ty=Tensor[(10, 3, 9), float64] */;
  (%1131,)
}

def @func_12369(%var_12366: bool, %var_12367: Tensor[(13, 1, 15), bool], %var_12368: Tensor[(528), uint16]) -> (Tensor[(11, 16, 3), bool], Tensor[(528), uint16], Tensor[(9, 13, 3), float64], Tensor[(13, 351, 15), bool]) {
  %1147 = fn (%var_12325: bool, %var_12326: Tensor[(13, 1, 15), bool], %var_12344: Tensor[(528), uint16]) -> (Tensor[(11, 16, 3), bool], Tensor[(528), uint16], Tensor[(9, 13, 3), float64], Tensor[(13, 351, 15), bool]) {
    %1132 = cast(%var_12325, dtype="uint16") /* ty=uint16 */;
    %1133 = cast(%var_12344, dtype="uint16") /* ty=Tensor[(528), uint16] */;
    %1134 = reshape(%1132, newshape=[]) /* ty=uint16 */;
    %1135 = reshape(%1133, newshape=[528]) /* ty=Tensor[(528), uint16] */;
    %1136 = @func_9133(%1134, %1135) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(60), int64], Tensor[(26), float32]) */;
    %1137 = cast(meta[relay.Constant][89] /* ty=Tensor[(351, 1), float64] */, dtype="float64") /* ty=Tensor[(351, 1), float64] */;
    %1138 = reshape(%1137, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float64] */;
    %1139 = cast(%var_12325, dtype="bool") /* ty=bool */;
    %1140 = cast(%var_12326, dtype="bool") /* ty=Tensor[(13, 1, 15), bool] */;
    %1141 = logical_and(%1139, %1140) /* ty=Tensor[(13, 1, 15), bool] */;
    %1142 = cast(%1141, dtype="bool") /* ty=Tensor[(13, 1, 15), bool] */;
    %1143 = cast(meta[relay.Constant][89] /* ty=Tensor[(351, 1), float64] */, dtype="bool") /* ty=Tensor[(351, 1), bool] */;
    %1144 = %1136.1;
    %1145 = @func_5710(%1138) /* ty=Tensor[(9, 13, 3), float64] */;
    %1146 = less_equal(%1142, %1143) /* ty=Tensor[(13, 351, 15), bool] */;
    (%1144, %var_12344, %1145, %1146)
  };
  %1147(%var_12366, %var_12367, %var_12368) /* ty=(Tensor[(11, 16, 3), bool], Tensor[(528), uint16], Tensor[(9, 13, 3), float64], Tensor[(13, 351, 15), bool]) */
}

def @func_17495(%var_17487: Tensor[(49920), float64]) -> (Tensor[(9, 13, 3), float64], Tensor[(4, 528), int8], Tensor[(60), int64], Tensor[(49920), float64]) {
  %1148 = @func_11976() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) */;
  %1149 = cast(meta[relay.Constant][90] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %1150 = cast(%var_17487, dtype="float64") /* ty=Tensor[(49920), float64] */;
  %1151 = reshape(%1149, newshape=[30, 2]) /* ty=Tensor[(30, 2), int64] */;
  %1152 = reshape(%1150, newshape=[13, 16, 240]) /* ty=Tensor[(13, 16, 240), float64] */;
  %1153 = @func_15740(%1151, %1152) /* ty=(Tensor[(6, 2, 12), float32], Tensor[(30, 2), int64], Tensor[(144), float32], Tensor[(4, 528), int8], Tensor[(13, 16, 240), float64]) */;
  %1154 = %1148.1;
  %1155 = %1153.3;
  (%1154, %1155, meta[relay.Constant][90] /* ty=Tensor[(60), int64] */, %var_17487)
}

def @func_21979(%var_21978: Tensor[(72), float32]) -> (Tensor[(13, 15, 11), float32], Tensor[(256), float32], Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(256), float32]) {
  %1166 = fn (%var_21963: Tensor[(72), float32]) -> (Tensor[(13, 15, 11), float32], Tensor[(256), float32], Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(256), float32]) {
    %1156 = @func_19752() /* ty=(Tensor[(256), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
    %1157 = cast(%var_21963, dtype="float32") /* ty=Tensor[(72), float32] */;
    %1158 = cast(%var_21963, dtype="float32") /* ty=Tensor[(72), float32] */;
    %1159 = reshape(%1157, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
    %1160 = reshape(%1158, newshape=[4, 6, 3]) /* ty=Tensor[(4, 6, 3), float32] */;
    %1161 = @func_19752() /* ty=(Tensor[(256), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
    %1162 = @func_21008() /* ty=Tensor[(13, 15, 11), float32] */;
    %1163 = %1156.0;
    %1164 = @func_1277(%1159, %1160) /* ty=Tensor[(4, 6, 3), float32] */;
    %1165 = %1161.0;
    (%1162, %1163, %1164, %var_21963, %1165)
  };
  %1166(%var_21978) /* ty=(Tensor[(13, 15, 11), float32], Tensor[(256), float32], Tensor[(4, 6, 3), float32], Tensor[(72), float32], Tensor[(256), float32]) */
}

def @func_19371() -> (Tensor[(256), float32], Tensor[(256), float32]) {
  %1170 = fn () -> (Tensor[(256), float32], Tensor[(256), float32]) {
    %1167 = @func_14735() /* ty=(Tensor[(256), float32],) */;
    %1168 = %1167.0;
    %1169 = @func_10492() /* ty=Tensor[(256), float32] */;
    (%1168, %1169)
  };
  %1170() /* ty=(Tensor[(256), float32], Tensor[(256), float32]) */
}

def @func_20292() -> (Tensor[(528, 1), float32],) {
  %1171 = @func_10569() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(528), uint16], Tensor[(130, 6), uint16], Tensor[(256), float32], Tensor[(528, 1), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %1172 = %1171.6;
  (%1172,)
}

def @func_20294() -> (Tensor[(528, 1), float32],) {
  @func_20292() /* ty=(Tensor[(528, 1), float32],) */
}

def @func_16152() -> (Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(121, 1), int8]) {
  %1181 = fn () -> (Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(121, 1), int8]) {
    %1173 = @func_9868() /* ty=(Tensor[(256), float32],) */;
    %1174 = cast(meta[relay.Constant][91] /* ty=Tensor[(121, 1), int8] */, dtype="int8") /* ty=Tensor[(121, 1), int8] */;
    %1175 = cast(meta[relay.Constant][91] /* ty=Tensor[(121, 1), int8] */, dtype="int8") /* ty=Tensor[(121, 1), int8] */;
    %1176 = reshape(%1174, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
    %1177 = reshape(%1175, newshape=[1, 11, 11]) /* ty=Tensor[(1, 11, 11), int8] */;
    %1178 = @func_10598(%1176, %1177) /* ty=(Tensor[(?, 11, 11), bool], Tensor[(10, 3, 9), float64]) */;
    %1179 = %1173.0;
    %1180 = %1178.1;
    (%1179, %1180, meta[relay.Constant][91] /* ty=Tensor[(121, 1), int8] */)
  };
  %1181() /* ty=(Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(121, 1), int8]) */
}

def @func_19447() -> (Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float32]) {
  %1182 = @func_11197() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32]) */;
  %1183 = @func_13615() /* ty=Tensor[(13, 16, 1), float64] */;
  %1184 = cast(%1183, dtype="float32") /* ty=Tensor[(13, 16, 1), float32] */;
  %1185 = %1182.0;
  %1186 = log10(%1184) /* ty=Tensor[(13, 16, 1), float32] */;
  (%1185, %1186)
}

def @func_19953() -> (Tensor[(256), float32], Tensor[(256), float32]) {
  @func_19951() /* ty=(Tensor[(256), float32], Tensor[(256), float32]) */
}

def @func_14291(%var_14289: uint8) -> (Tensor[(3), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 11, 256), int8], Tensor[(3, 1, 256), bool]) {
  @func_14288(%var_14289) /* ty=(Tensor[(3), float64], Tensor[(4, 8, 8), float32], Tensor[(4, 11, 256), int8], Tensor[(3, 1, 256), bool]) */
}

def @func_9999() -> Tensor[(256), float32] {
  @func_9997() /* ty=Tensor[(256), float32] */
}

def @func_21152() -> Tensor[(10, 3, 9), float64] {
  %1188 = fn () -> Tensor[(10, 3, 9), float64] {
    %1187 = @func_9323() /* ty=(Tensor[(10, 3, 9), float64],) */;
    %1187.0
  };
  %1188() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_12414() -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) {
  %1195 = fn () -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) {
    %1189 = @func_11301() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %1190 = @func_12225() /* ty=(Tensor[(13, 15, 11), float32],) */;
    %1191 = @func_10019() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
    %1192 = %1189.0;
    %1193 = %1190.0;
    %1194 = %1191.0;
    (%1192, %1193, %1194)
  };
  %1195() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */
}

def @func_21101(%var_21100: Tensor[(11, 12, 14), uint64]) -> (Tensor[(11, 12, 14), uint64], Tensor[(256), float32]) {
  %1202 = fn (%var_21090: Tensor[(11, 12, 14), uint64]) -> (Tensor[(11, 12, 14), uint64], Tensor[(256), float32]) {
    %1196 = cast(meta[relay.Constant][92] /* ty=Tensor[(11, 12, 14), uint64] */, dtype="uint64") /* ty=Tensor[(11, 12, 14), uint64] */;
    %1197 = shape_of(%var_21090, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1198 = cast(%var_21090, dtype="uint64") /* ty=Tensor[(11, 12, 14), uint64] */;
    %1199 = dyn.reshape(%1196, %1197, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1200 = bitwise_or(%1198, %1199) /* ty=Tensor[(11, 12, 14), uint64] */;
    %1201 = @func_19544() /* ty=Tensor[(256), float32] */;
    (%1200, %1201)
  };
  %1202(%var_21100) /* ty=(Tensor[(11, 12, 14), uint64], Tensor[(256), float32]) */
}

def @func_18075() -> (Tensor[(4, 8, 8), float32],) {
  %1205 = fn () -> (Tensor[(4, 8, 8), float32],) {
    %1203 = @func_17715() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float32]) */;
    %1204 = %1203.2;
    (%1204,)
  };
  %1205() /* ty=(Tensor[(4, 8, 8), float32],) */
}

def @func_20186() -> (Tensor[(13, 15, 11), float64], Tensor[(351, ?), float32]) {
  %1206 = @func_16501() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(9, 13, 3), float64], Tensor[(351, ?), bool], Tensor[(60), int64], uint16, Tensor[(528), uint16], Tensor[(351, 1), float32]) */;
  %1207 = %1206.2;
  %1208 = cast(%1207, dtype="float32") /* ty=Tensor[(351, ?), float32] */;
  %1209 = @func_17677() /* ty=Tensor[(13, 15, 11), float64] */;
  %1210 = log2(%1208) /* ty=Tensor[(351, ?), float32] */;
  (%1209, %1210)
}

def @func_14430() -> (Tensor[(13, 15, 11), float32],) {
  @func_14428() /* ty=(Tensor[(13, 15, 11), float32],) */
}

def @func_11301() -> (Tensor[(13, 15, 11), float32],) {
  %1211 = @func_10019() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) */;
  %1212 = %1211.0;
  (%1212,)
}

def @func_6163(%var_6127: Tensor[(16, 7, 4), bool], %var_6152: Tensor[(780), uint16], %var_6158: Tensor[(28, 80), int64]) -> (Tensor[(16, 7, 4), bool], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(72), float32], Tensor[(780), uint16], Tensor[(72), float32], Tensor[(28, 80), uint8]) {
  %1213 = cast(meta[relay.Constant][93] /* ty=Tensor[(16, 7, 4), bool] */, dtype="bool") /* ty=Tensor[(16, 7, 4), bool] */;
  %1214 = shape_of(%var_6127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1215 = cast(%var_6127, dtype="bool") /* ty=Tensor[(16, 7, 4), bool] */;
  %1216 = dyn.reshape(%1213, %1214, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1217 = cast(meta[relay.Constant][94] /* ty=Tensor[(270), float32] */, dtype="float32") /* ty=Tensor[(270), float32] */;
  %1218 = reshape(%1217, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
  %1219 = @func_5882(%1218) /* ty=(Tensor[(10, 3, 9), float64],) */;
  %1220 = cast(meta[relay.Constant][95] /* ty=Tensor[(351), float64] */, dtype="float64") /* ty=Tensor[(351), float64] */;
  %1221 = reshape(%1220, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float64] */;
  %1222 = cast(meta[relay.Constant][96] /* ty=Tensor[(28, 80), int64] */, dtype="int64") /* ty=Tensor[(28, 80), int64] */;
  %1223 = cast(%var_6152, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %1224 = cast(meta[relay.Constant][97] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1225 = reshape(%1222, newshape=[16, 10, 14]) /* ty=Tensor[(16, 10, 14), int64] */;
  %1226 = reshape(%1223, newshape=[780]) /* ty=Tensor[(780), uint16] */;
  %1227 = reshape(%1224, newshape=[72]) /* ty=Tensor[(72), float32] */;
  %1228 = @func_4331(%1225, %1226, %1227) /* ty=(Tensor[(16, 10, 14), bool], Tensor[(780), uint16], Tensor[(144), float32], Tensor[(60, ?), uint16], Tensor[(4, 6, 3), float32], Tensor[(72), float32]) */;
  %1229 = cast(%var_6158, dtype="uint8") /* ty=Tensor[(28, 80), uint8] */;
  %1230 = shape_of(meta[relay.Constant][96] /* ty=Tensor[(28, 80), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1231 = cast(meta[relay.Constant][96] /* ty=Tensor[(28, 80), int64] */, dtype="uint8") /* ty=Tensor[(28, 80), uint8] */;
  %1232 = dyn.reshape(%1229, %1230, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1233 = logical_and(%1215, %1216) /* ty=Tensor[(16, 7, 4), bool] */;
  %1234 = %1219.0;
  %1235 = @func_5710(%1221) /* ty=Tensor[(9, 13, 3), float64] */;
  %1236 = %1228.5;
  %1237 = maximum(%1231, %1232) /* ty=Tensor[(28, 80), uint8] */;
  (%1233, %1234, meta[relay.Constant][94] /* ty=Tensor[(270), float32] */, %1235, meta[relay.Constant][95] /* ty=Tensor[(351), float64] */, %1236, %var_6152, meta[relay.Constant][97] /* ty=Tensor[(72), float32] */, %1237)
}

def @func_14623() -> Tensor[(10, 3, 9), float32] {
  %1238 = @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */;
  %1239 = %1238.2;
  %1240 = cast(%1239, dtype="float32") /* ty=Tensor[(10, 3, 9), float32] */;
  cos(%1240) /* ty=Tensor[(10, 3, 9), float32] */
}

def @func_12317() -> (Tensor[(4, 8, 8), float32],) {
  %1241 = @func_11197() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32]) */;
  %1242 = %1241.0;
  (%1242,)
}

def @func_14737() -> (Tensor[(256), float32],) {
  @func_14735() /* ty=(Tensor[(256), float32],) */
}

def @func_4449(%var_4448: Tensor[(4, 8, 8), float32]) -> (Tensor[(4, 8, 8), float32],) {
  %1245 = fn (%var_4440: Tensor[(4, 8, 8), float32]) -> (Tensor[(4, 8, 8), float32],) {
    %1243 = cast(%var_4440, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
    %1244 = cos(%1243) /* ty=Tensor[(4, 8, 8), float32] */;
    (%1244,)
  };
  %1245(%var_4448) /* ty=(Tensor[(4, 8, 8), float32],) */
}

def @func_10885() -> Tensor[(10, 3, 9), float64] {
  @func_10883() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_16626() -> (Tensor[(4, 8, 8), float64],) {
  %1246 = @func_12699() /* ty=Tensor[(4, 8, 8), float64] */;
  (%1246,)
}

def @func_10163(%var_10160: Tensor[(528), uint16], %var_10161: Tensor[(5, 156), uint16], %var_10162: Tensor[(1, 60), int64]) -> (Tensor[(4, 8, 8), float32], Tensor[(4, 6, 3), float32], Tensor[(528), uint16], Tensor[(13, 15, 11), float32], Tensor[(144), float32], Tensor[(5, 156), uint16], Tensor[(1, 60), int64]) {
  %1260 = fn (%var_10138: Tensor[(528), uint16], %var_10153: Tensor[(5, 156), uint16], %var_10154: Tensor[(1, 60), int64]) -> (Tensor[(4, 8, 8), float32], Tensor[(4, 6, 3), float32], Tensor[(528), uint16], Tensor[(13, 15, 11), float32], Tensor[(144), float32], Tensor[(5, 156), uint16], Tensor[(1, 60), int64]) {
    %1247 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
    %1248 = cast(%var_10138, dtype="uint16") /* ty=Tensor[(528), uint16] */;
    %1249 = reshape(%1248, newshape=[2, 264]) /* ty=Tensor[(2, 264), uint16] */;
    %1250 = @func_9290(%1249) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(4, 6, 3), float32], Tensor[(11, 16, 3), bool], uint16, Tensor[(2, 264), uint16], Tensor[(144), float32], Tensor[(144), float32], Tensor[(1, 72), float64]) */;
    %1251 = cast(%var_10153, dtype="uint16") /* ty=Tensor[(5, 156), uint16] */;
    %1252 = cast(%var_10154, dtype="int64") /* ty=Tensor[(1, 60), int64] */;
    %1253 = reshape(%1251, newshape=[10, 13, 6]) /* ty=Tensor[(10, 13, 6), uint16] */;
    %1254 = reshape(%1252, newshape=[60, 1]) /* ty=Tensor[(60, 1), int64] */;
    %1255 = @func_1894(%1253, %1254) /* ty=(Tensor[(10, 13, 6), uint16], Tensor[(6, 2, 12), float32], Tensor[(60, 1), int64], Tensor[(144), float32]) */;
    %1256 = %1247.0;
    %1257 = %1250.1;
    %1258 = @func_9160() /* ty=Tensor[(13, 15, 11), float32] */;
    %1259 = %1255.3;
    (%1256, %1257, %var_10138, %1258, %1259, %var_10153, %var_10154)
  };
  %1260(%var_10160, %var_10161, %var_10162) /* ty=(Tensor[(4, 8, 8), float32], Tensor[(4, 6, 3), float32], Tensor[(528), uint16], Tensor[(13, 15, 11), float32], Tensor[(144), float32], Tensor[(5, 156), uint16], Tensor[(1, 60), int64]) */
}

def @func_11977() -> (Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) {
  %1265 = fn () -> (Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) {
    %1261 = cast(meta[relay.Constant][98] /* ty=Tensor[(351, 1), float64] */, dtype="float64") /* ty=Tensor[(351, 1), float64] */;
    %1262 = reshape(%1261, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float64] */;
    %1263 = @func_11869() /* ty=Tensor[(4, 8, 8), float32] */;
    %1264 = @func_5710(%1262) /* ty=Tensor[(9, 13, 3), float64] */;
    (%1263, %1264, meta[relay.Constant][98] /* ty=Tensor[(351, 1), float64] */)
  };
  %1265() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) */
}

def @func_154(%var_125: Tensor[(6, 2, 12), float32]) -> (Tensor[(6, 2, 12), float32],) {
  %1266 = cast(%var_125, dtype="float32") /* ty=Tensor[(6, 2, 12), float32] */;
  %1267 = rsqrt(%1266) /* ty=Tensor[(6, 2, 12), float32] */;
  %1268 = cast(%var_125, dtype="bool") /* ty=Tensor[(6, 2, 12), bool] */;
  %1269 = shape_of(%1267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1270 = cast(%1267, dtype="bool") /* ty=Tensor[(6, 2, 12), bool] */;
  %1271 = dyn.reshape(%1268, %1269, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1272 = greater(%1270, %1271) /* ty=Tensor[(6, 2, 12), bool] */;
  %1273 = cast(%1267, dtype="float32") /* ty=Tensor[(6, 2, 12), float32] */;
  %1274 = shape_of(%1272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1275 = cast(%1272, dtype="float32") /* ty=Tensor[(6, 2, 12), float32] */;
  %1276 = dyn.reshape(%1273, %1274, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1277 = floor_mod(%1275, %1276) /* ty=Tensor[(6, 2, 12), float32] */;
  (%1277,)
}

def @func_17428() -> (Tensor[(256), float32], Tensor[(10, 3, 9), float64]) {
  %1280 = fn () -> (Tensor[(256), float32], Tensor[(10, 3, 9), float64]) {
    %1278 = @func_11253() /* ty=Tensor[(256), float32] */;
    %1279 = @func_12423() /* ty=Tensor[(10, 3, 9), float64] */;
    (%1278, %1279)
  };
  %1280() /* ty=(Tensor[(256), float32], Tensor[(10, 3, 9), float64]) */
}

def @func_21669() -> (Tensor[(208, 1), float64], Tensor[(3, 8, 15), float64], Tensor[(360), float64]) {
  %1281 = @func_12901() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float64], Tensor[(208, 1), float64]) */;
  %1282 = cast(meta[relay.Constant][99] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1283 = cast(meta[relay.Constant][99] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1284 = reshape(%1282, newshape=[3, 8, 15]) /* ty=Tensor[(3, 8, 15), float64] */;
  %1285 = reshape(%1283, newshape=[3, 8, 15]) /* ty=Tensor[(3, 8, 15), float64] */;
  %1286 = @func_12645(%1284, %1285) /* ty=(Tensor[(3, 8, 15), float64],) */;
  %1287 = %1281.2;
  %1288 = %1286.0;
  (%1287, %1288, meta[relay.Constant][99] /* ty=Tensor[(360), float64] */)
}

def @func_15946() -> (Tensor[(4, 8, 8), float64],) {
  @func_15944() /* ty=(Tensor[(4, 8, 8), float64],) */
}

def @func_11370() -> Tensor[(4, 8, 8), float32] {
  @func_9888() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_18900() -> Tensor[(256), float32] {
  @func_18898() /* ty=Tensor[(256), float32] */
}

def @func_14347(%var_14346: Tensor[(16, 1, 6), uint32]) -> (Tensor[(16, 1, 6), uint32], Tensor[(256), float32]) {
  %1293 = fn (%var_14339: Tensor[(16, 1, 6), uint32]) -> (Tensor[(16, 1, 6), uint32], Tensor[(256), float32]) {
    %1289 = cast(meta[relay.Constant][100] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %1290 = cast(%var_14339, dtype="uint32") /* ty=Tensor[(16, 1, 6), uint32] */;
    %1291 = left_shift(%1289, %1290) /* ty=Tensor[(16, 1, 6), uint32] */;
    %1292 = @func_13650() /* ty=Tensor[(256), float32] */;
    (%1291, %1292)
  };
  %1293(%var_14346) /* ty=(Tensor[(16, 1, 6), uint32], Tensor[(256), float32]) */
}

def @func_10432() -> Tensor[(13, 15, 11), float32] {
  @func_10430() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_10859() -> (Tensor[(4, 8, 8), float32],) {
  %1294 = @func_10109() /* ty=(Tensor[(90, 3), float32], Tensor[(4, 8, 8), float32]) */;
  %1295 = %1294.1;
  (%1295,)
}

def @func_16407(%var_16406: Tensor[(4, 8, 8), float32]) -> (Tensor[(4, 8, 8), uint32],) {
  %1302 = fn (%var_16400: Tensor[(4, 8, 8), float32]) -> (Tensor[(4, 8, 8), uint32],) {
    %1296 = @func_16355() /* ty=Tensor[(4, 8, 8), float32] */;
    %1297 = cast(%var_16400, dtype="uint32") /* ty=Tensor[(4, 8, 8), uint32] */;
    %1298 = shape_of(%1296, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1299 = cast(%1296, dtype="uint32") /* ty=Tensor[(4, 8, 8), uint32] */;
    %1300 = dyn.reshape(%1297, %1298, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1301 = right_shift(%1299, %1300) /* ty=Tensor[(4, 8, 8), uint32] */;
    (%1301,)
  };
  %1302(%var_16406) /* ty=(Tensor[(4, 8, 8), uint32],) */
}

def @func_9083() -> (Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) {
  %1303 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %1304 = cast(meta[relay.Constant][101] /* ty=Tensor[(90, 3), float32] */, dtype="float32") /* ty=Tensor[(90, 3), float32] */;
  %1305 = reshape(%1304, newshape=[10, 3, 9]) /* ty=Tensor[(10, 3, 9), float32] */;
  %1306 = @func_5882(%1305) /* ty=(Tensor[(10, 3, 9), float64],) */;
  %1307 = %1303.1;
  %1308 = %1306.0;
  (%1307, %1308, meta[relay.Constant][101] /* ty=Tensor[(90, 3), float32] */)
}

def @func_9057() -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) {
  %1315 = fn () -> (Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) {
    %1309 = cast(meta[relay.Constant][102] /* ty=Tensor[(13, 15, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 15, 11), float32] */;
    %1310 = cast(meta[relay.Constant][103] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
    %1311 = reshape(%1310, newshape=[4, 8, 8]) /* ty=Tensor[(4, 8, 8), float32] */;
    %1312 = @func_4447(%1311) /* ty=(Tensor[(4, 8, 8), float32],) */;
    %1313 = atanh(%1309) /* ty=Tensor[(13, 15, 11), float32] */;
    %1314 = %1312.0;
    (%1313, %1314, meta[relay.Constant][103] /* ty=Tensor[(256), float32] */)
  };
  %1315() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */
}

def @func_12425() -> Tensor[(10, 3, 9), float64] {
  @func_12423() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_18508() -> (Tensor[(208, 1), float64],) {
  %1316 = @func_12901() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float64], Tensor[(208, 1), float64]) */;
  %1317 = %1316.2;
  (%1317,)
}

def @func_15944() -> (Tensor[(4, 8, 8), float64],) {
  %1318 = @func_12699() /* ty=Tensor[(4, 8, 8), float64] */;
  (%1318,)
}

def @func_12582(%var_12536: Tensor[(24), float64]) -> (Tensor[(4, 8, 8), float32], Tensor[(4, 8, 8), float32], Tensor[(1, 2, 12), float64], Tensor[(24), float64], Tensor[(13, 16, 1), float64], Tensor[(208), float64], Tensor[(13, 16, 1), float64], Tensor[(256), float32]) {
  %1319 = @func_12317() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %1320 = %1319.0;
  %1321 = cast(%1320, dtype="float32") /* ty=Tensor[(4, 8, 8), float32] */;
  %1322 = @func_12317() /* ty=(Tensor[(4, 8, 8), float32],) */;
  %1323 = cast(%var_12536, dtype="float64") /* ty=Tensor[(24), float64] */;
  %1324 = reshape(%1323, newshape=[1, 2, 12]) /* ty=Tensor[(1, 2, 12), float64] */;
  %1325 = @func_959(%1324) /* ty=(Tensor[(1, 2, 12), float64],) */;
  %1326 = cast(meta[relay.Constant][104] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1327 = reshape(%1326, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
  %1328 = @func_8902(%1327) /* ty=Tensor[(13, 16, 1), float64] */;
  %1329 = cast(%1328, dtype="float64") /* ty=Tensor[(13, 16, 1), float64] */;
  %1330 = reshape(%1329, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
  %1331 = acosh(%1321) /* ty=Tensor[(4, 8, 8), float32] */;
  %1332 = %1322.0;
  %1333 = %1325.0;
  %1334 = @func_8902(%1330) /* ty=Tensor[(13, 16, 1), float64] */;
  %1335 = @func_10492() /* ty=Tensor[(256), float32] */;
  (%1331, %1332, %1333, %var_12536, %1328, meta[relay.Constant][104] /* ty=Tensor[(208), float64] */, %1334, %1335)
}

def @func_15283() -> Tensor[(4, 8, 8), float64] {
  @func_15185() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_18362(%var_18356: Tensor[(880), float32], %var_18359: Tensor[(2240), int64]) -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32], Tensor[(880), float32], Tensor[(448), bool], Tensor[(780), uint16], Tensor[(2240), int64]) {
  %1336 = cast(%var_18356, dtype="float32") /* ty=Tensor[(880), float32] */;
  %1337 = cast(meta[relay.Constant][105] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %1338 = cast(meta[relay.Constant][106] /* ty=Tensor[(780), uint16] */, dtype="uint16") /* ty=Tensor[(780), uint16] */;
  %1339 = cast(%var_18359, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %1340 = reshape(%1336, newshape=[880]) /* ty=Tensor[(880), float32] */;
  %1341 = reshape(%1337, newshape=[112, 4]) /* ty=Tensor[(112, 4), bool] */;
  %1342 = reshape(%1338, newshape=[780]) /* ty=Tensor[(780), uint16] */;
  %1343 = reshape(%1339, newshape=[2, 1120]) /* ty=Tensor[(2, 1120), int64] */;
  %1344 = @func_14112(%1340, %1341, %1342, %1343) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float32], Tensor[(256), float32], Tensor[(5, 16, 11), float32], Tensor[(880), float32], Tensor[(16, 7, 4), bool], Tensor[(112, 4), bool], Tensor[(780), uint16], Tensor[(2, 1120), int64], Tensor[(13, 15, 11), float32]) */;
  %1345 = @func_9160() /* ty=Tensor[(13, 15, 11), float32] */;
  %1346 = %1344.9;
  (%1345, %1346, %var_18356, meta[relay.Constant][105] /* ty=Tensor[(448), bool] */, meta[relay.Constant][106] /* ty=Tensor[(780), uint16] */, %var_18359)
}

def @func_157(%var_155: Tensor[(6, 2, 12), float32]) -> (Tensor[(6, 2, 12), float32],) {
  @func_154(%var_155) /* ty=(Tensor[(6, 2, 12), float32],) */
}

def @func_9293(%var_9291: Tensor[(2, 264), uint16]) -> (Tensor[(10, 3, 9), float64], Tensor[(4, 6, 3), float32], Tensor[(11, 16, 3), bool], uint16, Tensor[(2, 264), uint16], Tensor[(144), float32], Tensor[(144), float32], Tensor[(1, 72), float64]) {
  @func_9290(%var_9291) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(4, 6, 3), float32], Tensor[(11, 16, 3), bool], uint16, Tensor[(2, 264), uint16], Tensor[(144), float32], Tensor[(144), float32], Tensor[(1, 72), float64]) */
}

def @func_14471() -> Tensor[(10, 3, 9), float64] {
  @func_14469() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_19178() -> Tensor[(256), float32] {
  @func_18898() /* ty=Tensor[(256), float32] */
}

def @func_20585() -> Tensor[(13, 15, 11), float32] {
  %1348 = fn () -> Tensor[(13, 15, 11), float32] {
    %1347 = @func_19670() /* ty=(Tensor[(60), int64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) */;
    %1347.1
  };
  %1348() /* ty=Tensor[(13, 15, 11), float32] */
}

def @func_21871() -> (Tensor[(256), float32],) {
  %1349 = @func_10832() /* ty=(Tensor[(256), float32],) */;
  %1350 = %1349.0;
  (%1350,)
}

def @func_16647() -> (Tensor[(13, 15, 11), float64], Tensor[(256), float32], Tensor[(60), int64], Tensor[(144), float32]) {
  %1351 = @func_15308() /* ty=(Tensor[(13, 15, 11), float64],) */;
  %1352 = cast(meta[relay.Constant][107] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %1353 = cast(meta[relay.Constant][108] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1354 = reshape(%1352, newshape=[60]) /* ty=Tensor[(60), int64] */;
  %1355 = reshape(%1353, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %1356 = @func_9525(%1354, %1355) /* ty=(Tensor[(256), float32], Tensor[(5, 16, 11), uint64], Tensor[(10, 3, 2), float32], Tensor[(60), int64], Tensor[(144), float32]) */;
  %1357 = %1351.0;
  %1358 = %1356.0;
  (%1357, %1358, meta[relay.Constant][107] /* ty=Tensor[(60), int64] */, meta[relay.Constant][108] /* ty=Tensor[(144), float32] */)
}

def @func_13505(%var_13502: int8, %var_13503: Tensor[(1, 12, 16), int8], %var_13504: Tensor[(52, 4), float64]) -> (Tensor[(1, 12, 16), bool], Tensor[(13, 16, 1), float64], Tensor[(52, 4), float64], Tensor[(13, 16, 1), float64], Tensor[(4, 8, 8), float32]) {
  %1368 = fn (%var_13445: int8, %var_13446: Tensor[(1, 12, 16), int8], %var_13467: Tensor[(52, 4), float64]) -> (Tensor[(1, 12, 16), bool], Tensor[(13, 16, 1), float64], Tensor[(52, 4), float64], Tensor[(13, 16, 1), float64], Tensor[(4, 8, 8), float32]) {
    %1359 = cast(%var_13445, dtype="bool") /* ty=bool */;
    %1360 = cast(%var_13446, dtype="bool") /* ty=Tensor[(1, 12, 16), bool] */;
    %1361 = cast(%var_13467, dtype="float64") /* ty=Tensor[(52, 4), float64] */;
    %1362 = reshape(%1361, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), float64] */;
    %1363 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
    %1364 = greater_equal(%1359, %1360) /* ty=Tensor[(1, 12, 16), bool] */;
    %1365 = @func_8902(%1362) /* ty=Tensor[(13, 16, 1), float64] */;
    %1366 = %1363.1;
    %1367 = @func_11874() /* ty=Tensor[(4, 8, 8), float32] */;
    (%1364, %1365, %var_13467, %1366, %1367)
  };
  %1368(%var_13502, %var_13503, %var_13504) /* ty=(Tensor[(1, 12, 16), bool], Tensor[(13, 16, 1), float64], Tensor[(52, 4), float64], Tensor[(13, 16, 1), float64], Tensor[(4, 8, 8), float32]) */
}

def @func_17715() -> (Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float32]) {
  %1369 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
  %1370 = @func_13522() /* ty=Tensor[(10, 3, 9), float64] */;
  %1371 = @func_11869() /* ty=Tensor[(4, 8, 8), float32] */;
  (%1369, %1370, %1371)
}

def @func_16628() -> (Tensor[(4, 8, 8), float64],) {
  @func_16626() /* ty=(Tensor[(4, 8, 8), float64],) */
}

def @func_16870() -> (Tensor[(13, 15, 11), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(1680), float64]) {
  %1380 = fn () -> (Tensor[(13, 15, 11), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(1680), float64]) {
    %1372 = @func_16647() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(256), float32], Tensor[(60), int64], Tensor[(144), float32]) */;
    %1373 = cast(meta[relay.Constant][109] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1374 = reshape(%1373, newshape=[]) /* ty=uint16 */;
    %1375 = @func_10769(%1374) /* ty=(Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16]) */;
    %1376 = @func_10980() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(351), float64], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(4), float32], Tensor[(121, 1), int8], Tensor[(?, 11, 11), float64]) */;
    %1377 = %1372.0;
    %1378 = %1375.2;
    %1379 = %1376.4;
    (%1377, %1378, meta[relay.Constant][109] /* ty=uint16 */, %1379)
  };
  %1380() /* ty=(Tensor[(13, 15, 11), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(1680), float64]) */
}

def @func_15088(%var_15085: float64, %var_15086: Tensor[(528), uint16], %var_15087: Tensor[(2240), int64]) -> (Tensor[(10, 3, 9), float64], float64, Tensor[(48), float64], Tensor[(10, 3, 9), float64], Tensor[(256), float32], Tensor[(4, 8, 8), float64], Tensor[(130, 6), uint16], Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(528), uint16], Tensor[(780), uint16], Tensor[(448), bool], Tensor[(2240), int64], Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(121), bool]) {
  %1423 = fn (%var_15022: float64, %var_15050: Tensor[(528), uint16], %var_15054: Tensor[(2240), int64]) -> (Tensor[(10, 3, 9), float64], float64, Tensor[(48), float64], Tensor[(10, 3, 9), float64], Tensor[(256), float32], Tensor[(4, 8, 8), float64], Tensor[(130, 6), uint16], Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(528), uint16], Tensor[(780), uint16], Tensor[(448), bool], Tensor[(2240), int64], Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(121), bool]) {
    %1381 = @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */;
    %1382 = @func_9104() /* ty=(Tensor[(256), float32],) */;
    %1383 = @func_14877() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float64], Tensor[(9, 13, 3), float32]) */;
    %1384 = @func_10569() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(60), int64], Tensor[(60), int64], Tensor[(528), uint16], Tensor[(130, 6), uint16], Tensor[(256), float32], Tensor[(528, 1), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
    %1385 = @func_10832() /* ty=(Tensor[(256), float32],) */;
    %1386 = cast(%var_15022, dtype="uint16") /* ty=uint16 */;
    %1387 = cast(%var_15050, dtype="uint16") /* ty=Tensor[(528), uint16] */;
    %1388 = reshape(%1386, newshape=[]) /* ty=uint16 */;
    %1389 = reshape(%1387, newshape=[528]) /* ty=Tensor[(528), uint16] */;
    %1390 = @func_9133(%1388, %1389) /* ty=(Tensor[(10, 3, 9), float64], Tensor[(11, 16, 3), bool], uint16, Tensor[(528), uint16], Tensor[(60), int64], Tensor[(26), float32]) */;
    %1391 = cast(meta[relay.Constant][111] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
    %1392 = %1384.4;
    %1393 = cast(%1392, dtype="uint16") /* ty=Tensor[(130, 6), uint16] */;
    %1394 = cast(%var_15054, dtype="int64") /* ty=Tensor[(2240), int64] */;
    %1395 = reshape(%1391, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
    %1396 = reshape(%1393, newshape=[780]) /* ty=Tensor[(780), uint16] */;
    %1397 = reshape(%1394, newshape=[28, 80]) /* ty=Tensor[(28, 80), int64] */;
    %1398 = @func_6163(%1395, %1396, %1397) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(10, 3, 9), float64], Tensor[(270), float32], Tensor[(9, 13, 3), float64], Tensor[(351), float64], Tensor[(72), float32], Tensor[(780), uint16], Tensor[(72), float32], Tensor[(28, 80), uint8]) */;
    %1399 = @func_14877() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(4, 8, 8), float64], Tensor[(9, 13, 3), float32]) */;
    %1400 = cast(%var_15022, dtype="float64") /* ty=float64 */;
    %1401 = cast(meta[relay.Constant][110] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %1402 = cast(meta[relay.Constant][112] /* ty=Tensor[(121), int8] */, dtype="int8") /* ty=Tensor[(121), int8] */;
    %1403 = reshape(%1400, newshape=[]) /* ty=float64 */;
    %1404 = reshape(%1401, newshape=[1, 12, 4]) /* ty=Tensor[(1, 12, 4), float64] */;
    %1405 = reshape(%1402, newshape=[121]) /* ty=Tensor[(121), int8] */;
    %1406 = @func_12624(%1403, %1404, %1405) /* ty=(Tensor[(1, 12, 4), float64], Tensor[(?, 11, 11), bool], Tensor[(121), int8]) */;
    %1407 = %1406.2;
    %1408 = cast(%1407, dtype="bool") /* ty=Tensor[(121), bool] */;
    %1409 = shape_of(meta[relay.Constant][112] /* ty=Tensor[(121), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1410 = cast(meta[relay.Constant][112] /* ty=Tensor[(121), int8] */, dtype="bool") /* ty=Tensor[(121), bool] */;
    %1411 = dyn.reshape(%1408, %1409, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1412 = %1381.2;
    %1413 = @func_14469() /* ty=Tensor[(10, 3, 9), float64] */;
    %1414 = %1382.0;
    %1415 = %1383.1;
    %1416 = @func_11370() /* ty=Tensor[(4, 8, 8), float32] */;
    %1417 = %1385.0;
    %1418 = %1390.0;
    %1419 = %1398.6;
    %1420 = @func_9888() /* ty=Tensor[(4, 8, 8), float32] */;
    %1421 = %1399.0;
    %1422 = not_equal(%1410, %1411) /* ty=Tensor[(121), bool] */;
    (%1412, %var_15022, meta[relay.Constant][110] /* ty=Tensor[(48), float64] */, %1413, %1414, %1415, %1392, %1416, %1417, %1418, %var_15050, %1419, meta[relay.Constant][111] /* ty=Tensor[(448), bool] */, %var_15054, %1420, %1421, %1422)
  };
  %1423(%var_15085, %var_15086, %var_15087) /* ty=(Tensor[(10, 3, 9), float64], float64, Tensor[(48), float64], Tensor[(10, 3, 9), float64], Tensor[(256), float32], Tensor[(4, 8, 8), float64], Tensor[(130, 6), uint16], Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(10, 3, 9), float64], Tensor[(528), uint16], Tensor[(780), uint16], Tensor[(448), bool], Tensor[(2240), int64], Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(121), bool]) */
}

def @func_1280(%var_1278: Tensor[(4, 6, 3), float32], %var_1279: Tensor[(4, 6, 3), float32]) -> Tensor[(4, 6, 3), float32] {
  %1428 = fn (%var_1267: Tensor[(4, 6, 3), float32], %var_1268: Tensor[(4, 6, 3), float32]) -> Tensor[(4, 6, 3), float32] {
    %1424 = cast(%var_1268, dtype="float32") /* ty=Tensor[(4, 6, 3), float32] */;
    %1425 = shape_of(%var_1267, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1426 = cast(%var_1267, dtype="float32") /* ty=Tensor[(4, 6, 3), float32] */;
    %1427 = dyn.reshape(%1424, %1425, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    subtract(%1426, %1427) /* ty=Tensor[(4, 6, 3), float32] */
  };
  %1428(%var_1278, %var_1279) /* ty=Tensor[(4, 6, 3), float32] */
}

def @func_5078(%var_5073: Tensor[(5, 16, 11), float32]) -> Tensor[(5, 16, 11), float32] {
  %1429 = cast(%var_5073, dtype="float32") /* ty=Tensor[(5, 16, 11), float32] */;
  cosh(%1429) /* ty=Tensor[(5, 16, 11), float32] */
}

def @func_10982() -> (Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(351), float64], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(4), float32], Tensor[(121, 1), int8], Tensor[(?, 11, 11), float64]) {
  @func_10980() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(256), float32], Tensor[(4, 8, 8), float32], Tensor[(351), float64], Tensor[(1680), float64], Tensor[(195), float64], Tensor[(4), float32], Tensor[(121, 1), int8], Tensor[(?, 11, 11), float64]) */
}

def @func_10494() -> Tensor[(256), float32] {
  @func_10492() /* ty=Tensor[(256), float32] */
}

def @func_10019() -> (Tensor[(13, 15, 11), float32], Tensor[(13, 15, 11), float32]) {
  %1430 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %1431 = @func_9913() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(13, 16, 1), float64], Tensor[(208), float64]) */;
  %1432 = %1430.0;
  %1433 = %1431.0;
  (%1432, %1433)
}

def @func_19890() -> Tensor[(4, 8, 8), float64] {
  %1434 = @func_15619() /* ty=(Tensor[(4, 8, 8), float64],) */;
  %1435 = %1434.0;
  %1436 = cast(%1435, dtype="float64") /* ty=Tensor[(4, 8, 8), float64] */;
  asin(%1436) /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_10111() -> (Tensor[(90, 3), float32], Tensor[(4, 8, 8), float32]) {
  @func_10109() /* ty=(Tensor[(90, 3), float32], Tensor[(4, 8, 8), float32]) */
}

def @func_16020(%var_15984: Tensor[(9, 3, 10), float64]) -> (Tensor[(9, 3, 10), float64], Tensor[(13, 16, 1), float64], Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) {
  %1437 = cast(%var_15984, dtype="float64") /* ty=Tensor[(9, 3, 10), float64] */;
  %1438 = @func_9729() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %1439 = exp(%1437) /* ty=Tensor[(9, 3, 10), float64] */;
  %1440 = @func_13615() /* ty=Tensor[(13, 16, 1), float64] */;
  %1441 = %1438.0;
  %1442 = @func_12123() /* ty=Tensor[(4, 8, 8), float64] */;
  (%1439, %1440, %1441, %1442)
}

def @func_19281() -> (Tensor[(4, 8, 8), float32],) {
  %1443 = @func_11976() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(351, 1), float64]) */;
  %1444 = %1443.0;
  (%1444,)
}

def @func_11840() -> Tensor[(4, 8, 8), float32] {
  @func_11838() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_19795() -> Tensor[(4, 8, 8), float32] {
  @func_9888() /* ty=Tensor[(4, 8, 8), float32] */
}

def @func_13920() -> (Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) {
  @func_13918() /* ty=(Tensor[(256), float32], Tensor[(13, 15, 11), float32], Tensor[(10, 3, 9), float64]) */
}

def @func_19449() -> (Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float32]) {
  @func_19447() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 16, 1), float32]) */
}

def @func_15186() -> Tensor[(4, 8, 8), float64] {
  %1446 = fn () -> Tensor[(4, 8, 8), float64] {
    %1445 = @func_14148() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float64]) */;
    %1445.1
  };
  %1446() /* ty=Tensor[(4, 8, 8), float64] */
}

def @func_12773() -> Tensor[(13, 15, 11), float32] {
  %1447 = @func_11301() /* ty=(Tensor[(13, 15, 11), float32],) */;
  %1447.0
}

def @func_17582() -> Tensor[(256), float32] {
  %1449 = fn () -> Tensor[(256), float32] {
    %1448 = @func_17138() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(351), float64], Tensor[(256), float32]) */;
    %1448.2
  };
  %1449() /* ty=Tensor[(256), float32] */
}

def @func_12605() -> (Tensor[(4, 8, 8), float32],) {
  %1452 = fn () -> (Tensor[(4, 8, 8), float32],) {
    %1450 = @func_9083() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(10, 3, 9), float64], Tensor[(90, 3), float32]) */;
    %1451 = %1450.0;
    (%1451,)
  };
  %1452() /* ty=(Tensor[(4, 8, 8), float32],) */
}

def @func_13021() -> (Tensor[(13, 15, 11), float32],) {
  %1453 = @func_11197() /* ty=(Tensor[(4, 8, 8), float32], Tensor[(13, 15, 11), float32]) */;
  %1454 = %1453.1;
  (%1454,)
}

def @func_13023() -> (Tensor[(13, 15, 11), float32],) {
  @func_13021() /* ty=(Tensor[(13, 15, 11), float32],) */
}

def @func_11828(%var_11814: Tensor[(1, 144), float32]) -> (Tensor[(4, 8, 8), float32], Tensor[(9, 13, 3), float64], Tensor[(117, 3), float32], Tensor[(6, 2, 12), float32], Tensor[(1, 144), float32]) {
  %1455 = @func_9056() /* ty=(Tensor[(13, 15, 11), float32], Tensor[(4, 8, 8), float32], Tensor[(256), float32]) */;
  %1456 = cast(meta[relay.Constant][113] /* ty=Tensor[(117, 3), float64] */, dtype="float64") /* ty=Tensor[(117, 3), float64] */;
  %1457 = reshape(%1456, newshape=[9, 13, 3]) /* ty=Tensor[(9, 13, 3), float64] */;
  %1458 = cast(meta[relay.Constant][113] /* ty=Tensor[(117, 3), float64] */, dtype="float32") /* ty=Tensor[(117, 3), float32] */;
  %1459 = cast(%var_11814, dtype="float32") /* ty=Tensor[(1, 144), float32] */;
  %1460 = reshape(%1459, newshape=[6, 2, 12]) /* ty=Tensor[(6, 2, 12), float32] */;
  %1461 = @func_154(%1460) /* ty=(Tensor[(6, 2, 12), float32],) */;
  %1462 = %1455.1;
  %1463 = @func_5710(%1457) /* ty=Tensor[(9, 13, 3), float64] */;
  %1464 = atan(%1458) /* ty=Tensor[(117, 3), float32] */;
  %1465 = %1461.0;
  (%1462, %1463, %1464, %1465, %var_11814)
}

def @func_13690() -> Tensor[(10, 3, 9), float64] {
  %1467 = fn () -> Tensor[(10, 3, 9), float64] {
    %1466 = @func_12185() /* ty=(Tensor[(10, 3, 9), float64], Tensor[(13, 15, 11), float64], Tensor[(10, 3, 9), float64]) */;
    %1466.0
  };
  %1467() /* ty=Tensor[(10, 3, 9), float64] */
}

def @func_19180() -> Tensor[(256), float32] {
  @func_19178() /* ty=Tensor[(256), float32] */
}

def @func_961(%var_960: Tensor[(1, 2, 12), float64]) -> (Tensor[(1, 2, 12), float64],) {
  %1470 = fn (%var_950: Tensor[(1, 2, 12), float64]) -> (Tensor[(1, 2, 12), float64],) {
    %1468 = cast(%var_950, dtype="float64") /* ty=Tensor[(1, 2, 12), float64] */;
    %1469 = acosh(%1468) /* ty=Tensor[(1, 2, 12), float64] */;
    (%1469,)
  };
  %1470(%var_960) /* ty=(Tensor[(1, 2, 12), float64],) */
}

def @func_13054() -> Tensor[(13, 15, 11), float32] {
  %1471 = fn () -> Tensor[(13, 15, 11), float32] {
    @func_12026() /* ty=Tensor[(13, 15, 11), float32] */
  };
  %1471() /* ty=Tensor[(13, 15, 11), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

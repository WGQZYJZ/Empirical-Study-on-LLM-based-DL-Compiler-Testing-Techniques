==========mod==========
#[version = "0.0.5"]
def @func_6236() -> Tensor[(12, 14, 2), float64] {
  %0 = @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %0.1
}

def @func_2901(%var_2822: float32, %var_2823: Tensor[(585), float32], %var_2875: Tensor[(585), bool]) -> (Tensor[(12, 14, 2), float64], Tensor[(585), int64], Tensor[(585), bool], float32) {
  %1 = @func_1369() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %2 = cast(%var_2822, dtype="float32") /* ty=float32 */;
  %3 = reshape(%2, newshape=[]) /* ty=float32 */;
  %4 = @func_1589(%3) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32]) */;
  %5 = %4.3;
  %6 = cast(%var_2823, dtype="int16") /* ty=Tensor[(585), int16] */;
  %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(1), int32] */;
  %8 = cast(%5, dtype="int16") /* ty=Tensor[(585), int16] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?), int16] */;
  %10 = bitwise_or(%8, %9) /* ty=Tensor[(585), int16] */;
  %11 = cast(%10, dtype="float64") /* ty=Tensor[(585), float64] */;
  %12 = sqrt(%11) /* ty=Tensor[(585), float64] */;
  %13 = cast(%var_2823, dtype="bool") /* ty=Tensor[(585), bool] */;
  %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(1), int32] */;
  %15 = cast(%12, dtype="bool") /* ty=Tensor[(585), bool] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?), bool] */;
  %17 = greater_equal(%15, %16) /* ty=Tensor[(585), bool] */;
  %18 = cast(%var_2875, dtype="int64") /* ty=Tensor[(585), int64] */;
  %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(1), int32] */;
  %20 = cast(%17, dtype="int64") /* ty=Tensor[(585), int64] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?), int64] */;
  %22 = cast(%var_2822, dtype="float32") /* ty=float32 */;
  %23 = cast(%var_2823, dtype="float32") /* ty=Tensor[(585), float32] */;
  %24 = reshape(%22, newshape=[]) /* ty=float32 */;
  %25 = reshape(%23, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %26 = @func_943(%24, %25) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) */;
  %27 = %26.3;
  %28 = cast(%var_2822, dtype="uint8") /* ty=uint8 */;
  %29 = cast(%27, dtype="uint8") /* ty=Tensor[(9, 13, 5), uint8] */;
  %30 = subtract(%28, %29) /* ty=Tensor[(9, 13, 5), uint8] */;
  %31 = cast(%30, dtype="bool") /* ty=Tensor[(9, 13, 5), bool] */;
  %32 = shape_of(%10, dtype="int32") /* ty=Tensor[(1), int32] */;
  %33 = cast(%10, dtype="bool") /* ty=Tensor[(585), bool] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?), bool] */;
  %35 = cast(%var_2823, dtype="float32") /* ty=Tensor[(585), float32] */;
  %36 = reshape(%35, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %37 = @func_1897(%36) /* ty=(Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32], Tensor[(12, 14, 2), float64]) */;
  %38 = %1.1;
  %39 = left_shift(%20, %21) /* ty=Tensor[(585), int64] */;
  %40 = greater(%33, %34) /* ty=Tensor[(585), bool] */;
  %41 = %37.1;
  (%38, %39, %40, %41)
}

def @func_2104() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %42 = @func_2029() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %43 = @func_1206() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %44 = %42.0;
  %45 = %43.0;
  (%44, %45)
}

def @func_8247(%var_8226: Tensor[(11, 4, 5), int16]) -> Tensor[(11, 4, 5), int16] {
  %46 = cast(%var_8226, dtype="int16") /* ty=Tensor[(11, 4, 5), int16] */;
  %47 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(11, 4, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(meta[relay.Constant][0] /* ty=Tensor[(11, 4, 5), int16] */, dtype="int16") /* ty=Tensor[(11, 4, 5), int16] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  maximum(%48, %49) /* ty=Tensor[(11, 4, 5), int16] */
}

def @func_535(%var_519: Tensor[(12), float64]) -> (Tensor[(14, 14, 11), float32], Tensor[(11, 5), float32], Tensor[(12), float64], Tensor[(9, 13, 5), float32]) {
  %50 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 14, 11), float32] */, dtype="float32") /* ty=Tensor[(14, 14, 11), float32] */;
  %51 = cast(%var_519, dtype="float64") /* ty=Tensor[(12), float64] */;
  %52 = reshape(%51, newshape=[1, 12, 1]) /* ty=Tensor[(1, 12, 1), float64] */;
  %53 = @func_462(%52) /* ty=(Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
  %54 = cast(%var_519, dtype="float64") /* ty=Tensor[(12), float64] */;
  %55 = reshape(%54, newshape=[1, 12, 1]) /* ty=Tensor[(1, 12, 1), float64] */;
  %56 = @func_462(%55) /* ty=(Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
  %57 = atanh(%50) /* ty=Tensor[(14, 14, 11), float32] */;
  %58 = %53.2;
  %59 = %56.4;
  (%57, %58, %var_519, %59)
}

def @func_7602() -> Tensor[(12, 14, 2), float64] {
  %60 = @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %60.0
}

def @func_8989(%var_8965: Tensor[(14, 13, 8), int64], %var_8966: Tensor[(14, 13, 8), int64], %var_8974: Tensor[(22), int16]) -> (Tensor[(14, 13, 8), int64], Tensor[(22), uint8]) {
  %61 = cast(%var_8966, dtype="int64") /* ty=Tensor[(14, 13, 8), int64] */;
  %62 = shape_of(%var_8965, dtype="int32") /* ty=Tensor[(3), int32] */;
  %63 = cast(%var_8965, dtype="int64") /* ty=Tensor[(14, 13, 8), int64] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %65 = @func_7815() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 13, 11), float64], Tensor[(22), int16], Tensor[(286), int16], Tensor[(66), float32]) */;
  %66 = %65.3;
  %67 = cast(%var_8974, dtype="uint8") /* ty=Tensor[(22), uint8] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(1), int32] */;
  %69 = cast(%66, dtype="uint8") /* ty=Tensor[(22), uint8] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %71 = subtract(%63, %64) /* ty=Tensor[(14, 13, 8), int64] */;
  %72 = bitwise_xor(%69, %70) /* ty=Tensor[(22), uint8] */;
  (%71, %72)
}

def @func_1088() -> (Tensor[(12, 14, 2), float64],) {
  %73 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  (%73,)
}

def @func_1044() -> (Tensor[(12, 14, 2), float64],) {
  %74 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  (%74,)
}

def @func_7192(%var_7181: Tensor[(10, 12, 3), float32]) -> (Tensor[(10, 12, 3), float32], Tensor[(12, 14, 2), float64]) {
  %75 = cast(%var_7181, dtype="float32") /* ty=Tensor[(10, 12, 3), float32] */;
  %76 = @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %77 = atan(%75) /* ty=Tensor[(10, 12, 3), float32] */;
  %78 = %76.0;
  (%77, %78)
}

def @func_2462(%var_2449: Tensor[(10, 16, 7), uint16], %var_2450: Tensor[(10, 16, 7), uint16]) -> (Tensor[(10, 16, 7), uint16], Tensor[(12, 14, 2), float64]) {
  %79 = cast(%var_2450, dtype="uint16") /* ty=Tensor[(10, 16, 7), uint16] */;
  %80 = shape_of(%var_2449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%var_2449, dtype="uint16") /* ty=Tensor[(10, 16, 7), uint16] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %83 = @func_1369() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %84 = add(%81, %82) /* ty=Tensor[(10, 16, 7), uint16] */;
  %85 = %83.1;
  (%84, %85)
}

def @func_3140() -> Tensor[(12, 14, 2), float64] {
  @func_3024() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_8382() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %86 = @func_5151() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %87 = @func_7822() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %88 = @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %89 = @func_3986() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %90 = %86.0;
  %91 = %87.0;
  %92 = %88.0;
  %93 = %89.0;
  (%90, %91, %92, %93)
}

def @func_5136() -> Tensor[(12, 14, 2), float64] {
  @func_3762() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_1206() -> (Tensor[(12, 14, 2), float64],) {
  %94 = @func_1088() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %95 = %94.0;
  (%95,)
}

def @func_4432() -> (Tensor[(12, 14, 2), float64],) {
  %96 = @func_3922() /* ty=Tensor[(12, 14, 2), float64] */;
  (%96,)
}

def @func_6716() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %97 = @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %98 = @func_5725() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %99 = @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %100 = %97.0;
  %101 = %98.0;
  %102 = %99.1;
  (%100, %101, %102)
}

def @func_1302(%var_1255: Tensor[(48, 8), float32], %var_1297: Tensor[(55), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(48, 8), float32], Tensor[(5, 15, 11), float32], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), bool], Tensor[(5, 15, 11), float32], Tensor[(55), float32]) {
  %103 = cast(%var_1255, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
  %104 = cast(%var_1255, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
  %105 = reshape(%103, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %106 = reshape(%104, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %107 = @func_814(%105, %106) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */;
  %108 = cast(meta[relay.Constant][2] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %109 = reshape(%108, newshape=[1, 12, 1]) /* ty=Tensor[(1, 12, 1), float64] */;
  %110 = @func_462(%109) /* ty=(Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
  %111 = @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %112 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
  %113 = cast(%112, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %114 = cos(%113) /* ty=Tensor[(12, 14, 2), float64] */;
  %115 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 14, 2), float64] */, dtype="bool") /* ty=Tensor[(12, 14, 2), bool] */;
  %116 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %117 = cast(%114, dtype="bool") /* ty=Tensor[(12, 14, 2), bool] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %119 = cast(%var_1297, dtype="float32") /* ty=Tensor[(55), float32] */;
  %120 = %110.1;
  %121 = cast(%120, dtype="float32") /* ty=Tensor[(5, 15, 11), float32] */;
  %122 = reshape(%119, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
  %123 = reshape(%121, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
  %124 = %107.2;
  %125 = %111.0;
  %126 = logical_and(%117, %118) /* ty=Tensor[(12, 14, 2), bool] */;
  %127 = @func_90(%122, %123) /* ty=Tensor[(5, 15, 11), float32] */;
  (%124, %var_1255, %120, meta[relay.Constant][2] /* ty=Tensor[(12), float64] */, %125, %126, %127, %var_1297)
}

def @func_1381() -> (Tensor[(12, 14, 2), float64],) {
  %128 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
  (%128,)
}

def @func_8340() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %129 = @func_5725() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %130 = @func_7158() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %131 = %129.0;
  %132 = %130.0;
  (%131, %132)
}

def @func_1667() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %133 = @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %134 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
  %135 = %133.0;
  %136 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
  (%134, %135, %136)
}

def @func_4468() -> (Tensor[(12, 14, 2), bool],) {
  %137 = @func_4404() /* ty=Tensor[(12, 14, 2), bool] */;
  (%137,)
}

def @func_5725() -> (Tensor[(12, 14, 2), float64],) {
  %138 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
  (%138,)
}

def @func_4286(%var_4275: Tensor[(55), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(55), float32]) {
  %139 = @func_2628() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %140 = cast(%var_4275, dtype="float32") /* ty=Tensor[(55), float32] */;
  %141 = reshape(%140, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %142 = @func_1525(%141) /* ty=(Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 9, 16), bool]) */;
  %143 = %139.0;
  %144 = %142.3;
  (%143, %144, %var_4275)
}

def @func_2357() -> (Tensor[(12, 14, 2), float64],) {
  %145 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %146 = %145.0;
  (%146,)
}

def @func_5403() -> Tensor[(12, 14, 2), bool] {
  @func_4404() /* ty=Tensor[(12, 14, 2), bool] */
}

def @func_5564() -> Tensor[(12, 14, 2), float64] {
  @func_3547() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_8851(%var_8831: Tensor[(55), float32], %var_8832: Tensor[(48, 8), float32], %var_8837: Tensor[(6, 64), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(55), float32], Tensor[(48, 8), float32], Tensor[(6, 64), int8]) {
  %147 = @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %148 = @func_6716() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %149 = cast(%var_8831, dtype="float32") /* ty=Tensor[(55), float32] */;
  %150 = cast(%var_8832, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
  %151 = reshape(%149, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %152 = reshape(%150, newshape=[6, 64]) /* ty=Tensor[(6, 64), float32] */;
  %153 = @func_7946(%151, %152) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(55), float32], Tensor[(55), float32], Tensor[(12, 14, 2), bool], Tensor[(6, 64), float32]) */;
  %154 = %153.4;
  %155 = cast(%var_8837, dtype="int8") /* ty=Tensor[(6, 64), int8] */;
  %156 = shape_of(%154, dtype="int32") /* ty=Tensor[(2), int32] */;
  %157 = cast(%154, dtype="int8") /* ty=Tensor[(6, 64), int8] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %159 = %147.0;
  %160 = %148.0;
  %161 = right_shift(%157, %158) /* ty=Tensor[(6, 64), int8] */;
  (%159, %160, %var_8831, %var_8832, %161)
}

def @func_943(%var_907: float32, %var_926: Tensor[(585), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) {
  %162 = cast(%var_926, dtype="float32") /* ty=Tensor[(585), float32] */;
  %163 = reshape(%162, newshape=[9, 13, 5]) /* ty=Tensor[(9, 13, 5), float32] */;
  %164 = @func_236(%163) /* ty=(Tensor[(9, 13, 5), float32],) */;
  %165 = cast(%var_926, dtype="float32") /* ty=Tensor[(585), float32] */;
  %166 = reshape(%165, newshape=[9, 13, 5]) /* ty=Tensor[(9, 13, 5), float32] */;
  %167 = @func_236(%166) /* ty=(Tensor[(9, 13, 5), float32],) */;
  %168 = cast(%var_907, dtype="float32") /* ty=float32 */;
  %169 = cast(meta[relay.Constant][4] /* ty=Tensor[(13, 13, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 11), float32] */;
  %170 = power(%168, %169) /* ty=Tensor[(13, 13, 11), float32] */;
  %171 = cast(%170, dtype="float64") /* ty=Tensor[(13, 13, 11), float64] */;
  %172 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  %173 = %164.0;
  %174 = %167.0;
  %175 = atanh(%171) /* ty=Tensor[(13, 13, 11), float64] */;
  (%172, %173, %var_926, %174, %175)
}

def @func_9070() -> (Tensor[(12, 14, 2), float64],) {
  %176 = @func_6236() /* ty=Tensor[(12, 14, 2), float64] */;
  (%176,)
}

def @func_3167() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %177 = @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %178 = %177.1;
  %179 = @func_3024() /* ty=Tensor[(12, 14, 2), float64] */;
  (%178, %179)
}

def @func_1897(%var_1887: Tensor[(585), float32]) -> (Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32], Tensor[(12, 14, 2), float64]) {
  %180 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %181 = %180.0;
  %182 = cast(%181, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %183 = cast(-8.93766f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %184 = cast(%var_1887, dtype="float32") /* ty=Tensor[(585), float32] */;
  %185 = reshape(%182, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float64] */;
  %186 = reshape(%183, newshape=[]) /* ty=float32 */;
  %187 = reshape(%184, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %188 = @func_1741(%185, %186, %187) /* ty=(Tensor[(12, 14, 2), int8], float32, float32, Tensor[(13, 13, 11), float64], Tensor[(585), float32]) */;
  %189 = %188.0;
  %190 = cast(%189, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %191 = exp(%190) /* ty=Tensor[(12, 14, 2), float64] */;
  (%181, -8.93766f /* ty=float32 */, %var_1887, %191)
}

def @func_6168(%var_6152: Tensor[(9, 2, 11), float64]) -> (Tensor[(9, 2, 11), float64],) {
  %192 = cast(%var_6152, dtype="float64") /* ty=Tensor[(9, 2, 11), float64] */;
  %193 = sqrt(%192) /* ty=Tensor[(9, 2, 11), float64] */;
  (%193,)
}

def @func_1611(%var_1601: Tensor[(3, 2, 11), float32]) -> Tensor[(3, 2, 11), float32] {
  %194 = cast(%var_1601, dtype="float32") /* ty=Tensor[(3, 2, 11), float32] */;
  sinh(%194) /* ty=Tensor[(3, 2, 11), float32] */
}

def @func_1107() -> (Tensor[(12, 14, 2), float64],) {
  %195 = @func_1088() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %196 = %195.0;
  (%196,)
}

def @func_1589(%var_1585: float32) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32]) {
  %197 = @func_1088() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %198 = cast(%var_1585, dtype="float32") /* ty=float32 */;
  %199 = cast(meta[relay.Constant][5] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %200 = reshape(%198, newshape=[]) /* ty=float32 */;
  %201 = reshape(%199, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %202 = @func_943(%200, %201) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) */;
  %203 = %197.0;
  %204 = %202.0;
  (%203, %204, %var_1585, meta[relay.Constant][5] /* ty=Tensor[(585), float32] */)
}

def @func_3582() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %205 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %206 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  %207 = cast(%206, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %208 = %205.0;
  %209 = sigmoid(%207) /* ty=Tensor[(12, 14, 2), float64] */;
  (%208, %209)
}

def @func_7283() -> Tensor[(12, 14, 2), float64] {
  %210 = @func_3009() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %210.1
}

def @func_8464(%var_8447: Tensor[(15, 2, 9), float64], %var_8457: Tensor[(12, 32), float32]) -> (Tensor[(15, 2, 9), float64], Tensor[(195, 3), float32], Tensor[(55, 1), float32], Tensor[(12, 32), float32], Tensor[(585), float32]) {
  %211 = cast(%var_8447, dtype="float64") /* ty=Tensor[(15, 2, 9), float64] */;
  %212 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(15, 2, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 9), float64] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %215 = cast(meta[relay.Constant][7] /* ty=Tensor[(55, 1), float32] */, dtype="float32") /* ty=Tensor[(55, 1), float32] */;
  %216 = cast(%var_8457, dtype="float32") /* ty=Tensor[(12, 32), float32] */;
  %217 = cast(meta[relay.Constant][8] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %218 = reshape(%215, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %219 = reshape(%216, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %220 = reshape(%217, newshape=[195, 3]) /* ty=Tensor[(195, 3), float32] */;
  %221 = @func_4641(%218, %219, %220) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(195, 3), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(585), bool], Tensor[(585, 1), float32], Tensor[(12, 14, 2), bool], Tensor[(825), float32], Tensor[(5, 165), float64]) */;
  %222 = add(%213, %214) /* ty=Tensor[(15, 2, 9), float64] */;
  %223 = %221.6;
  (%222, %223, meta[relay.Constant][7] /* ty=Tensor[(55, 1), float32] */, %var_8457, meta[relay.Constant][8] /* ty=Tensor[(585), float32] */)
}

def @func_7072() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %224 = @func_5798() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %225 = @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %226 = %224.0;
  %227 = %225.1;
  (%226, %227)
}

def @func_8927() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %228 = @func_6800() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %229 = @func_5136() /* ty=Tensor[(12, 14, 2), float64] */;
  %230 = %228.0;
  (%229, %230)
}

def @func_3079() -> (Tensor[(12, 14, 2), float64],) {
  %231 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %232 = %231.1;
  (%232,)
}

def @func_6255() -> (Tensor[(12, 14, 2), float64],) {
  %233 = @func_6236() /* ty=Tensor[(12, 14, 2), float64] */;
  (%233,)
}

def @func_5111() -> Tensor[(2, 1, 4), float32] {
  %234 = cast(0.523578f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %235 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 1, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 4), float64] */;
  %236 = divide(%234, %235) /* ty=Tensor[(2, 1, 4), float64] */;
  %237 = cast(%236, dtype="float32") /* ty=Tensor[(2, 1, 4), float32] */;
  sin(%237) /* ty=Tensor[(2, 1, 4), float32] */
}

def @func_4337() -> (Tensor[(12, 14, 2), float64],) {
  %238 = @func_3079() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %239 = %238.0;
  (%239,)
}

def @func_9320(%var_9305: int16) -> (Tensor[(6, 11, 13), int16],) {
  %240 = cast(%var_9305, dtype="int16") /* ty=int16 */;
  %241 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 11, 13), int16] */, dtype="int16") /* ty=Tensor[(6, 11, 13), int16] */;
  %242 = bitwise_or(%240, %241) /* ty=Tensor[(6, 11, 13), int16] */;
  (%242,)
}

def @func_4968() -> Tensor[(2, 6, 8), float64] {
  %243 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 6, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 6, 8), float64] */;
  sin(%243) /* ty=Tensor[(2, 6, 8), float64] */
}

def @func_3746() -> (Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) {
  %244 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %245 = @func_1632() /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */;
  %246 = %244.0;
  %247 = %245.2;
  (%246, %247)
}

def @func_5798() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %248 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %249 = @func_3762() /* ty=Tensor[(12, 14, 2), float64] */;
  %250 = %248.0;
  (%249, %250)
}

def @func_899(%var_863: Tensor[(55, 1), float32], %var_870: Tensor[(128), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(384), float32], Tensor[(5, 15, 11), float32], Tensor[(55, 1), float32], Tensor[(825, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32]) {
  %251 = cast(meta[relay.Constant][12] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %252 = cast(meta[relay.Constant][12] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %253 = reshape(%251, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %254 = reshape(%252, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %255 = @func_814(%253, %254) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */;
  %256 = cast(%var_863, dtype="float32") /* ty=Tensor[(55, 1), float32] */;
  %257 = cast(meta[relay.Constant][13] /* ty=Tensor[(825, 1), float32] */, dtype="float32") /* ty=Tensor[(825, 1), float32] */;
  %258 = reshape(%256, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
  %259 = reshape(%257, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
  %260 = cast(%var_870, dtype="float32") /* ty=Tensor[(128), float32] */;
  %261 = cast(%var_863, dtype="float32") /* ty=Tensor[(55, 1), float32] */;
  %262 = reshape(%260, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float32] */;
  %263 = reshape(%261, newshape=[1, 55]) /* ty=Tensor[(1, 55), float32] */;
  %264 = @func_627(%262, %263) /* ty=(Tensor[(16, 2, 4), float32], Tensor[(16, 2, 4), float64], Tensor[(9, 13, 5), float32], Tensor[(585, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(1, 55), float32], Tensor[(825), float32]) */;
  %265 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  %266 = cast(meta[relay.Constant][14] /* ty=Tensor[(12, 14, 2), float64] */, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %267 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%265, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %270 = mod(%268, %269) /* ty=Tensor[(12, 14, 2), float32] */;
  %271 = cast(%270, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %272 = asin(%271) /* ty=Tensor[(12, 14, 2), float64] */;
  %273 = cast(%272, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %274 = rsqrt(%273) /* ty=Tensor[(12, 14, 2), float32] */;
  %275 = cast(%274, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %276 = cast(%var_863, dtype="float32") /* ty=Tensor[(55, 1), float32] */;
  %277 = %264.4;
  %278 = cast(%277, dtype="float32") /* ty=Tensor[(5, 15, 11), float32] */;
  %279 = reshape(%276, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
  %280 = reshape(%278, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
  %281 = %255.2;
  %282 = @func_90(%258, %259) /* ty=Tensor[(5, 15, 11), float32] */;
  %283 = acos(%275) /* ty=Tensor[(12, 14, 2), float64] */;
  %284 = @func_90(%279, %280) /* ty=Tensor[(5, 15, 11), float32] */;
  (%281, meta[relay.Constant][12] /* ty=Tensor[(384), float32] */, %282, %var_863, meta[relay.Constant][13] /* ty=Tensor[(825, 1), float32] */, %277, %var_870, %283, %284)
}

def @func_6286() -> Tensor[(12, 14, 2), float64] {
  %285 = @func_2029() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %285.0
}

def @func_627(%var_560: Tensor[(16, 2, 4), float32], %var_611: Tensor[(1, 55), float32]) -> (Tensor[(16, 2, 4), float32], Tensor[(16, 2, 4), float64], Tensor[(9, 13, 5), float32], Tensor[(585, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(1, 55), float32], Tensor[(825), float32]) {
  %286 = cast(%var_560, dtype="float32") /* ty=Tensor[(16, 2, 4), float32] */;
  %287 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(16, 2, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(meta[relay.Constant][15] /* ty=Tensor[(16, 2, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 2, 4), float32] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %290 = cast(%var_560, dtype="float64") /* ty=Tensor[(16, 2, 4), float64] */;
  %291 = cast(meta[relay.Constant][16] /* ty=Tensor[(585, 1), float32] */, dtype="float32") /* ty=Tensor[(585, 1), float32] */;
  %292 = reshape(%291, newshape=[9, 13, 5]) /* ty=Tensor[(9, 13, 5), float32] */;
  %293 = @func_236(%292) /* ty=(Tensor[(9, 13, 5), float32],) */;
  %294 = cast(%var_611, dtype="float32") /* ty=Tensor[(1, 55), float32] */;
  %295 = cast(meta[relay.Constant][17] /* ty=Tensor[(825), float32] */, dtype="float32") /* ty=Tensor[(825), float32] */;
  %296 = reshape(%294, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
  %297 = reshape(%295, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
  %298 = maximum(%288, %289) /* ty=Tensor[(16, 2, 4), float32] */;
  %299 = log(%290) /* ty=Tensor[(16, 2, 4), float64] */;
  %300 = %293.0;
  %301 = @func_90(%296, %297) /* ty=Tensor[(5, 15, 11), float32] */;
  (%298, %299, %300, meta[relay.Constant][16] /* ty=Tensor[(585, 1), float32] */, %301, %var_611, meta[relay.Constant][17] /* ty=Tensor[(825), float32] */)
}

def @func_1790() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %302 = @func_1369() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %303 = @func_1381() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %304 = %302.0;
  %305 = %303.0;
  (%304, %305)
}

def @func_7054() -> (Tensor[(2, 192), float32], Tensor[(12, 14, 2), float64]) {
  %306 = @func_3746() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */;
  %307 = @func_1369() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %308 = %306.1;
  %309 = %307.0;
  (%308, %309)
}

def @func_6887() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %310 = @func_5564() /* ty=Tensor[(12, 14, 2), float64] */;
  %311 = cast(%310, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %312 = reshape(%311, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float64] */;
  %313 = @func_4678(%312) /* ty=(Tensor[(12, 14, 2), float64],) */;
  %314 = @func_3582() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %315 = %313.0;
  %316 = %314.1;
  (%310, %315, %316)
}

def @func_3779() -> (Tensor[(12, 14, 2), float64],) {
  %317 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %318 = %317.0;
  (%318,)
}

def @func_8042() -> (Tensor[(5, 15, 1), float32], Tensor[(5, 15, 1), float32]) {
  %319 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %320 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %321 = asinh(%319) /* ty=Tensor[(5, 15, 1), float32] */;
  %322 = sin(%320) /* ty=Tensor[(5, 15, 1), float32] */;
  (%321, %322)
}

def @func_5649() -> Tensor[(12, 14, 2), float64] {
  %323 = @func_1381() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %323.0
}

def @func_3762() -> Tensor[(12, 14, 2), float64] {
  %324 = @func_3582() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %324.0
}

def @func_9127(%var_9119: Tensor[(384), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(24, 16), float32], Tensor[(384), float32]) {
  %325 = @func_3582() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %326 = cast(%var_9119, dtype="float32") /* ty=Tensor[(384), float32] */;
  %327 = reshape(%326, newshape=[24, 16]) /* ty=Tensor[(24, 16), float32] */;
  %328 = @func_6028(%327) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(1, 12, 1), float64], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(24, 16), float32]) */;
  %329 = %325.0;
  %330 = %328.6;
  (%329, %330, %var_9119)
}

def @func_3922() -> Tensor[(12, 14, 2), float64] {
  @func_3547() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_2686(%var_2680: Tensor[(10, 15, 7), float32]) -> Tensor[(10, 15, 7), float32] {
  %331 = cast(%var_2680, dtype="float32") /* ty=Tensor[(10, 15, 7), float32] */;
  %332 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(10, 15, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(meta[relay.Constant][19] /* ty=Tensor[(10, 15, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 15, 7), float32] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%333, %334) /* ty=Tensor[(10, 15, 7), float32] */
}

def @func_2648(%var_2642: Tensor[(12), float64]) -> (Tensor[(12, 14, 2), float64], Tensor[(825), float32], Tensor[(12), float64]) {
  %335 = @func_1381() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %336 = cast(%var_2642, dtype="float64") /* ty=Tensor[(12), float64] */;
  %337 = reshape(%336, newshape=[1, 12, 1]) /* ty=Tensor[(1, 12, 1), float64] */;
  %338 = @func_462(%337) /* ty=(Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
  %339 = %335.0;
  %340 = %338.3;
  (%339, %340, %var_2642)
}

def @func_3718(%var_3643: Tensor[(2, 1, 11), int16], %var_3644: Tensor[(2, 13, 11), int16], %var_3698: Tensor[(1, 66), float32]) -> (Tensor[(2, 13, 11), uint16], Tensor[(3, 2, 11), float32], Tensor[(1, 66), float32], Tensor[(2, 13, 11), float64], Tensor[(2, 1, 11), float32]) {
  %341 = cast(%var_3643, dtype="int16") /* ty=Tensor[(2, 1, 11), int16] */;
  %342 = cast(%var_3644, dtype="int16") /* ty=Tensor[(2, 13, 11), int16] */;
  %343 = logical_xor(%341, %342) /* ty=Tensor[(2, 13, 11), int16] */;
  %344 = cast(%var_3643, dtype="uint16") /* ty=Tensor[(2, 1, 11), uint16] */;
  %345 = cast(%343, dtype="uint16") /* ty=Tensor[(2, 13, 11), uint16] */;
  %346 = cast(%var_3698, dtype="float32") /* ty=Tensor[(1, 66), float32] */;
  %347 = reshape(%346, newshape=[3, 2, 11]) /* ty=Tensor[(3, 2, 11), float32] */;
  %348 = cast(%343, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
  %349 = asinh(%348) /* ty=Tensor[(2, 13, 11), float32] */;
  %350 = cast(%349, dtype="float64") /* ty=Tensor[(2, 13, 11), float64] */;
  %351 = cast(%var_3643, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
  %352 = left_shift(%344, %345) /* ty=Tensor[(2, 13, 11), uint16] */;
  %353 = @func_1611(%347) /* ty=Tensor[(3, 2, 11), float32] */;
  %354 = sinh(%350) /* ty=Tensor[(2, 13, 11), float64] */;
  %355 = cosh(%351) /* ty=Tensor[(2, 1, 11), float32] */;
  (%352, %353, %var_3698, %354, %355)
}

def @func_3009() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %356 = @func_1667() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %357 = @func_2628() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %358 = %356.2;
  %359 = %357.0;
  (%358, %359)
}

def @func_6534() -> (Tensor[(12, 14, 2), float64],) {
  %360 = @func_5085() /* ty=Tensor[(12, 14, 2), float64] */;
  (%360,)
}

def @func_2182() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %361 = @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %362 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %363 = %361.0;
  %364 = %362.0;
  (%363, %364)
}

def @func_3126() -> (Tensor[(12, 14, 2), float64],) {
  %365 = @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %366 = %365.0;
  (%366,)
}

def @func_741() -> Tensor[(12, 14, 2), float64] {
  %367 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  sin(%367) /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_1525(%var_1500: Tensor[(55), float32]) -> (Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 9, 16), bool]) {
  %368 = cast(%var_1500, dtype="float32") /* ty=Tensor[(55), float32] */;
  %369 = cast(meta[relay.Constant][21] /* ty=Tensor[(825), float32] */, dtype="float32") /* ty=Tensor[(825), float32] */;
  %370 = reshape(%368, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
  %371 = reshape(%369, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
  %372 = @func_1088() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %373 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 1, 16), int8] */, dtype="int8") /* ty=Tensor[(3, 1, 16), int8] */;
  %374 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 9, 16), int8] */, dtype="int8") /* ty=Tensor[(3, 9, 16), int8] */;
  %375 = subtract(%373, %374) /* ty=Tensor[(3, 9, 16), int8] */;
  %376 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 1, 16), int8] */, dtype="bool") /* ty=Tensor[(3, 1, 16), bool] */;
  %377 = cast(%375, dtype="bool") /* ty=Tensor[(3, 9, 16), bool] */;
  %378 = @func_90(%370, %371) /* ty=Tensor[(5, 15, 11), float32] */;
  %379 = %372.0;
  %380 = less_equal(%376, %377) /* ty=Tensor[(3, 9, 16), bool] */;
  (%378, %var_1500, meta[relay.Constant][21] /* ty=Tensor[(825), float32] */, %379, %380)
}

def @func_6606() -> Tensor[(12, 14, 2), float64] {
  %381 = @func_1206() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %381.0
}

def @func_1681() -> (Tensor[(12, 14, 2), float64],) {
  %382 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  (%382,)
}

def @func_2506(%var_2475: Tensor[(13, 13, 13), bool], %var_2476: Tensor[(13, 13, 13), bool]) -> (Tensor[(13, 13, 13), float32], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64]) {
  %383 = cast(%var_2476, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
  %384 = shape_of(%var_2475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%var_2475, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %387 = logical_or(%385, %386) /* ty=Tensor[(13, 13, 13), bool] */;
  %388 = cast(%var_2475, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %389 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %390 = cast(%387, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %392 = cast(meta[relay.Constant][24] /* ty=Tensor[(55), float32] */, dtype="float32") /* ty=Tensor[(55), float32] */;
  %393 = cast(meta[relay.Constant][25] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %394 = reshape(%392, newshape=[55, 1]) /* ty=Tensor[(55, 1), float32] */;
  %395 = reshape(%393, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %396 = @func_899(%394, %395) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(384), float32], Tensor[(5, 15, 11), float32], Tensor[(55, 1), float32], Tensor[(825, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32]) */;
  %397 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %398 = floor_divide(%390, %391) /* ty=Tensor[(13, 13, 13), float32] */;
  %399 = %396.5;
  %400 = %397.0;
  (%398, %399, meta[relay.Constant][24] /* ty=Tensor[(55), float32] */, meta[relay.Constant][25] /* ty=Tensor[(128), float32] */, %400)
}

def @func_8708() -> (Tensor[(12, 14, 2), float64], Tensor[(198), float64], Tensor[(3, 2), float64], Tensor[(198), float64], Tensor[(5, 70), int8], Tensor[(585), float32], Tensor[(66, 1), float32], Tensor[(12, 14, 2), uint64], Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32]) {
  %401 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %402 = cast(meta[relay.Constant][26] /* ty=Tensor[(3, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
  %403 = cast(meta[relay.Constant][27] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %404 = cast(meta[relay.Constant][28] /* ty=Tensor[(5, 70), int8] */, dtype="int8") /* ty=Tensor[(5, 70), int8] */;
  %405 = cast(meta[relay.Constant][29] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %406 = reshape(%402, newshape=[1, 3, 2]) /* ty=Tensor[(1, 3, 2), float64] */;
  %407 = reshape(%403, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %408 = reshape(%404, newshape=[350]) /* ty=Tensor[(350), int8] */;
  %409 = reshape(%405, newshape=[585, 1]) /* ty=Tensor[(585, 1), float32] */;
  %410 = @func_7768(%406, %407, %408, %409) /* ty=(Tensor[(1, 3, 2), float64], Tensor[(9, 2, 11), float64], Tensor[(12, 14, 2), float64], Tensor[(198), float64], Tensor[(10, 7, 5), int8], Tensor[(350), int8], Tensor[(585, 1), float32], Tensor[(12, 14, 2), float64]) */;
  %411 = cast(meta[relay.Constant][29] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %412 = reshape(%411, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %413 = @func_2774(%412) /* ty=(Tensor[(4, 4, 8), float64], Tensor[(12, 14, 2), float64], Tensor[(10, 7, 5), int8], Tensor[(350), int8], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 2, 11), float32], Tensor[(66, 1), float32]) */;
  %414 = @func_3762() /* ty=Tensor[(12, 14, 2), float64] */;
  %415 = @func_4999() /* ty=Tensor[(12, 14, 2), float64] */;
  %416 = cast(%415, dtype="uint64") /* ty=Tensor[(12, 14, 2), uint64] */;
  %417 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%414, dtype="uint64") /* ty=Tensor[(12, 14, 2), uint64] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %420 = cast(%415, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %421 = cast(meta[relay.Constant][29] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %422 = reshape(%421, newshape=[9, 13, 5]) /* ty=Tensor[(9, 13, 5), float32] */;
  %423 = @func_236(%422) /* ty=(Tensor[(9, 13, 5), float32],) */;
  %424 = %401.1;
  %425 = %410.3;
  %426 = %413.7;
  %427 = multiply(%418, %419) /* ty=Tensor[(12, 14, 2), uint64] */;
  %428 = sinh(%420) /* ty=Tensor[(12, 14, 2), float64] */;
  %429 = %423.0;
  (%424, %425, meta[relay.Constant][26] /* ty=Tensor[(3, 2), float64] */, meta[relay.Constant][27] /* ty=Tensor[(198), float64] */, meta[relay.Constant][28] /* ty=Tensor[(5, 70), int8] */, meta[relay.Constant][29] /* ty=Tensor[(585), float32] */, %426, %427, %428, %429)
}

def @func_3255(%var_3251: Tensor[(585, 1), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585, 1), float32]) {
  %430 = @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %431 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %432 = cast(%var_3251, dtype="float32") /* ty=Tensor[(585, 1), float32] */;
  %433 = reshape(%432, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %434 = @func_1897(%433) /* ty=(Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32], Tensor[(12, 14, 2), float64]) */;
  %435 = %430.1;
  %436 = %431.0;
  %437 = %434.1;
  (%435, %436, %437, %var_3251)
}

def @func_1369() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %438 = @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %439 = @func_1206() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %440 = %438.0;
  %441 = %439.0;
  (%440, %441)
}

def @func_8615() -> Tensor[(12, 14, 2), float64] {
  @func_3547() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_9375(%var_9365: Tensor[(15, 6, 6), float64]) -> (Tensor[(15, 6, 6), float64],) {
  %442 = cast(%var_9365, dtype="float64") /* ty=Tensor[(15, 6, 6), float64] */;
  %443 = erf(%442) /* ty=Tensor[(15, 6, 6), float64] */;
  (%443,)
}

def @func_2628() -> (Tensor[(12, 14, 2), float64],) {
  %444 = @func_1852() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %445 = %444.1;
  (%445,)
}

def @func_4752() -> Tensor[(12, 14, 2), float64] {
  %446 = @func_3126() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %446.0
}

def @func_5268() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %447 = @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %448 = @func_4752() /* ty=Tensor[(12, 14, 2), float64] */;
  %449 = %447.1;
  (%448, %449)
}

def @func_5705() -> Tensor[(2, 6, 8), float64] {
  @func_4968() /* ty=Tensor[(2, 6, 8), float64] */
}

def @func_6028(%var_6019: Tensor[(24, 16), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(1, 12, 1), float64], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(24, 16), float32]) {
  %450 = @func_2628() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %451 = @func_3126() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %452 = cast(meta[relay.Constant][30] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %453 = reshape(%452, newshape=[1, 12, 1]) /* ty=Tensor[(1, 12, 1), float64] */;
  %454 = @func_462(%453) /* ty=(Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
  %455 = @func_3986() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %456 = cast(%var_6019, dtype="float32") /* ty=Tensor[(24, 16), float32] */;
  %457 = reshape(%456, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %458 = @func_4133(%457) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(585), float32]) */;
  %459 = %450.0;
  %460 = %451.0;
  %461 = %454.0;
  %462 = %455.0;
  %463 = %458.1;
  (%459, %460, %461, meta[relay.Constant][30] /* ty=Tensor[(12), float64] */, %462, %463, %var_6019)
}

def @func_3986() -> (Tensor[(12, 14, 2), float64],) {
  %464 = @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %465 = %464.0;
  (%465,)
}

def @func_6800() -> (Tensor[(12, 14, 2), float64],) {
  %466 = @func_3436() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %467 = %466.0;
  (%467,)
}

def @func_8178() -> Tensor[(12, 14, 2), float64] {
  %468 = @func_1667() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %468.0
}

def @func_2029() -> (Tensor[(12, 14, 2), float64],) {
  %469 = @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %470 = %469.0;
  (%470,)
}

def @func_5329() -> Tensor[(12, 14, 2), float64] {
  %471 = @func_3457() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %471.0
}

def @func_3523(%var_3518: Tensor[(7, 10, 10), float64]) -> (Tensor[(7, 10, 10), float64], Tensor[(7, 10, 10), float64]) {
  %472 = cast(%var_3518, dtype="float64") /* ty=Tensor[(7, 10, 10), float64] */;
  %473 = cast(%var_3518, dtype="float64") /* ty=Tensor[(7, 10, 10), float64] */;
  %474 = erf(%472) /* ty=Tensor[(7, 10, 10), float64] */;
  %475 = log10(%473) /* ty=Tensor[(7, 10, 10), float64] */;
  (%474, %475)
}

def @func_5151() -> (Tensor[(12, 14, 2), float64],) {
  %476 = @func_1632() /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */;
  %477 = %476.1;
  (%477,)
}

def @func_6934() -> (Tensor[(12, 14, 2), float64],) {
  %478 = @func_4432() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %479 = %478.0;
  (%479,)
}

def @func_6490() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %480 = @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %481 = @func_6286() /* ty=Tensor[(12, 14, 2), float64] */;
  %482 = %480.1;
  (%481, %482)
}

def @func_8324(%var_8297: bool, %var_8298: Tensor[(7, 1, 9), bool]) -> (Tensor[(7, 1, 9), bool], Tensor[(7, 1, 9), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %483 = cast(%var_8297, dtype="bool") /* ty=bool */;
  %484 = cast(%var_8298, dtype="bool") /* ty=Tensor[(7, 1, 9), bool] */;
  %485 = cast(%var_8298, dtype="float32") /* ty=Tensor[(7, 1, 9), float32] */;
  %486 = @func_3167() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %487 = @func_5739() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %488 = logical_or(%483, %484) /* ty=Tensor[(7, 1, 9), bool] */;
  %489 = rsqrt(%485) /* ty=Tensor[(7, 1, 9), float32] */;
  %490 = %486.1;
  %491 = %487.1;
  (%488, %489, %490, %491)
}

def @func_5907() -> (Tensor[(12, 14, 2), float64],) {
  %492 = @func_5268() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %493 = %492.0;
  (%493,)
}

def @func_7708() -> Tensor[(12, 14, 2), float64] {
  %494 = @func_2357() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %494.0
}

def @func_7997() -> (Tensor[(1, 4, 13), float64], Tensor[(12, 14, 2), float64]) {
  %495 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 4, 13), float64] */;
  %496 = @func_1369() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %497 = sinh(%495) /* ty=Tensor[(1, 4, 13), float64] */;
  %498 = %496.0;
  (%497, %498)
}

def @func_90(%var_71: Tensor[(5, 1, 11), float32], %var_72: Tensor[(5, 15, 11), float32]) -> Tensor[(5, 15, 11), float32] {
  %499 = cast(%var_71, dtype="float32") /* ty=Tensor[(5, 1, 11), float32] */;
  %500 = cast(%var_72, dtype="float32") /* ty=Tensor[(5, 15, 11), float32] */;
  power(%499, %500) /* ty=Tensor[(5, 15, 11), float32] */
}

def @func_7529() -> (Tensor[(12, 14, 2), float64],) {
  %501 = @func_2357() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %502 = %501.0;
  (%502,)
}

def @func_4890(%var_4854: Tensor[(55), float32], %var_4866: Tensor[(12, 14, 2), float64], %var_4881: Tensor[(195, 3), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(128), float32], Tensor[(55), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float32], Tensor[(16, 2, 4), float32], Tensor[(585), float32], float32, Tensor[(195, 3), float32], Tensor[(585), bool]) {
  %503 = @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %504 = cast(%var_4854, dtype="float32") /* ty=Tensor[(55), float32] */;
  %505 = cast(meta[relay.Constant][32] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %506 = reshape(%504, newshape=[55, 1]) /* ty=Tensor[(55, 1), float32] */;
  %507 = reshape(%505, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %508 = @func_899(%506, %507) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(384), float32], Tensor[(5, 15, 11), float32], Tensor[(55, 1), float32], Tensor[(825, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32]) */;
  %509 = @func_2029() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %510 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %511 = %510.0;
  %512 = cast(%511, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %513 = tan(%512) /* ty=Tensor[(12, 14, 2), float64] */;
  %514 = cast(%var_4866, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %515 = shape_of(%513, dtype="int32") /* ty=Tensor[(3), int32] */;
  %516 = cast(%513, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %518 = cast(meta[relay.Constant][32] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %519 = cast(%var_4854, dtype="float32") /* ty=Tensor[(55), float32] */;
  %520 = reshape(%518, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float32] */;
  %521 = reshape(%519, newshape=[1, 55]) /* ty=Tensor[(1, 55), float32] */;
  %522 = @func_627(%520, %521) /* ty=(Tensor[(16, 2, 4), float32], Tensor[(16, 2, 4), float64], Tensor[(9, 13, 5), float32], Tensor[(585, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(1, 55), float32], Tensor[(825), float32]) */;
  %523 = subtract(%516, %517) /* ty=Tensor[(12, 14, 2), float32] */;
  %524 = cast(%523, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %525 = cast(-0.236261f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %526 = cast(%var_4881, dtype="float32") /* ty=Tensor[(195, 3), float32] */;
  %527 = reshape(%524, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float64] */;
  %528 = reshape(%525, newshape=[]) /* ty=float32 */;
  %529 = reshape(%526, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %530 = @func_1741(%527, %528, %529) /* ty=(Tensor[(12, 14, 2), int8], float32, float32, Tensor[(13, 13, 11), float64], Tensor[(585), float32]) */;
  %531 = cast(-0.236261f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %532 = cast(%var_4881, dtype="float32") /* ty=Tensor[(195, 3), float32] */;
  %533 = %530.4;
  %534 = cast(%533, dtype="bool") /* ty=Tensor[(585), bool] */;
  %535 = reshape(%531, newshape=[]) /* ty=float32 */;
  %536 = reshape(%532, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %537 = reshape(%534, newshape=[585]) /* ty=Tensor[(585), bool] */;
  %538 = @func_2901(%535, %536, %537) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(585), int64], Tensor[(585), bool], float32) */;
  %539 = %503.0;
  %540 = %508.6;
  %541 = %509.0;
  %542 = %522.0;
  %543 = %538.2;
  (%539, %540, %var_4854, meta[relay.Constant][32] /* ty=Tensor[(128), float32] */, %541, %523, %542, %533, -0.236261f /* ty=float32 */, %var_4881, %543)
}

def @func_8790() -> Tensor[(12, 14, 2), float64] {
  @func_7283() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_1741(%var_1704: Tensor[(12, 14, 2), float64], %var_1721: float32, %var_1733: Tensor[(585), float32]) -> (Tensor[(12, 14, 2), int8], float32, float32, Tensor[(13, 13, 11), float64], Tensor[(585), float32]) {
  %544 = @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %545 = %544.0;
  %546 = cast(%var_1704, dtype="int8") /* ty=Tensor[(12, 14, 2), int8] */;
  %547 = shape_of(%545, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%545, dtype="int8") /* ty=Tensor[(12, 14, 2), int8] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %550 = cast(%var_1721, dtype="float32") /* ty=float32 */;
  %551 = reshape(%550, newshape=[]) /* ty=float32 */;
  %552 = @func_1589(%551) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32]) */;
  %553 = %552.2;
  %554 = cast(%553, dtype="float32") /* ty=float32 */;
  %555 = cast(%var_1733, dtype="float32") /* ty=Tensor[(585), float32] */;
  %556 = reshape(%554, newshape=[]) /* ty=float32 */;
  %557 = reshape(%555, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %558 = @func_943(%556, %557) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) */;
  %559 = minimum(%548, %549) /* ty=Tensor[(12, 14, 2), int8] */;
  %560 = %558.4;
  (%559, %553, %var_1721, %560, %var_1733)
}

def @func_3413(%var_3325: Tensor[(2, 192), float32], %var_3353: Tensor[(585), float32], %var_3361: Tensor[(2, 192), float32], %var_3385: Tensor[(2, 192), int16]) -> (Tensor[(12, 14, 2), float32], Tensor[(585), float32], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 192), bool], Tensor[(585), bool], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float64]) {
  %561 = @func_3167() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %562 = %561.0;
  %563 = cast(%562, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %564 = cast(meta[relay.Constant][33] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %565 = reshape(%564, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %566 = @func_1897(%565) /* ty=(Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32], Tensor[(12, 14, 2), float64]) */;
  %567 = %566.2;
  %568 = cast(%var_3353, dtype="float32") /* ty=Tensor[(585), float32] */;
  %569 = shape_of(%567, dtype="int32") /* ty=Tensor[(1), int32] */;
  %570 = cast(%567, dtype="float32") /* ty=Tensor[(585), float32] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?), float32] */;
  %572 = @func_1632() /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */;
  %573 = %572.2;
  %574 = cast(%573, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %575 = atan(%574) /* ty=Tensor[(2, 192), float32] */;
  %576 = cast(%575, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %577 = cast(%var_3325, dtype="bool") /* ty=Tensor[(2, 192), bool] */;
  %578 = shape_of(%573, dtype="int32") /* ty=Tensor[(2), int32] */;
  %579 = cast(%573, dtype="bool") /* ty=Tensor[(2, 192), bool] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %581 = logical_or(%579, %580) /* ty=Tensor[(2, 192), bool] */;
  %582 = cast(%581, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %583 = reshape(%576, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %584 = reshape(%582, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %585 = @func_814(%583, %584) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */;
  %586 = cast(%var_3361, dtype="int16") /* ty=Tensor[(2, 192), int16] */;
  %587 = shape_of(%575, dtype="int32") /* ty=Tensor[(2), int32] */;
  %588 = cast(%575, dtype="int16") /* ty=Tensor[(2, 192), int16] */;
  %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %590 = right_shift(%588, %589) /* ty=Tensor[(2, 192), int16] */;
  %591 = cast(%var_3385, dtype="bool") /* ty=Tensor[(2, 192), bool] */;
  %592 = shape_of(%590, dtype="int32") /* ty=Tensor[(2), int32] */;
  %593 = cast(%590, dtype="bool") /* ty=Tensor[(2, 192), bool] */;
  %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %595 = cast(%var_3353, dtype="bool") /* ty=Tensor[(585), bool] */;
  %596 = shape_of(%567, dtype="int32") /* ty=Tensor[(1), int32] */;
  %597 = cast(%567, dtype="bool") /* ty=Tensor[(585), bool] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?), bool] */;
  %599 = cast(%var_3325, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %600 = cast(%581, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %601 = reshape(%599, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %602 = reshape(%600, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %603 = @func_814(%601, %602) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */;
  %604 = cast(%581, dtype="float64") /* ty=Tensor[(2, 192), float64] */;
  %605 = shape_of(%var_3325, dtype="int32") /* ty=Tensor[(2), int32] */;
  %606 = cast(%var_3325, dtype="float64") /* ty=Tensor[(2, 192), float64] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %608 = log2(%563) /* ty=Tensor[(12, 14, 2), float32] */;
  %609 = divide(%570, %571) /* ty=Tensor[(585), float32] */;
  %610 = %585.2;
  %611 = @func_3140() /* ty=Tensor[(12, 14, 2), float64] */;
  %612 = less_equal(%593, %594) /* ty=Tensor[(2, 192), bool] */;
  %613 = logical_and(%597, %598) /* ty=Tensor[(585), bool] */;
  %614 = %603.2;
  %615 = maximum(%606, %607) /* ty=Tensor[(2, 192), float64] */;
  (%608, meta[relay.Constant][33] /* ty=Tensor[(585), float32] */, %609, %610, %611, %612, %613, %614, %615)
}

def @func_3503(%var_3491: Tensor[(55), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825, 1), float32]) {
  %616 = cast(%var_3491, dtype="float32") /* ty=Tensor[(55), float32] */;
  %617 = cast(meta[relay.Constant][34] /* ty=Tensor[(825, 1), float32] */, dtype="float32") /* ty=Tensor[(825, 1), float32] */;
  %618 = reshape(%616, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
  %619 = reshape(%617, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
  %620 = @func_3024() /* ty=Tensor[(12, 14, 2), float64] */;
  %621 = @func_90(%618, %619) /* ty=Tensor[(5, 15, 11), float32] */;
  (%620, %621, %var_3491, meta[relay.Constant][34] /* ty=Tensor[(825, 1), float32] */)
}

def @func_6954() -> (Tensor[(12, 14, 2), float64],) {
  %622 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  (%622,)
}

def @func_1632() -> (Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) {
  %623 = @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %624 = %623.0;
  %625 = cast(%624, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %626 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 192), float32] */, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %627 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 192), float32] */, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %628 = reshape(%626, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %629 = reshape(%627, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %630 = @func_814(%628, %629) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */;
  %631 = acosh(%625) /* ty=Tensor[(12, 14, 2), float32] */;
  %632 = %630.2;
  (%631, %632, meta[relay.Constant][35] /* ty=Tensor[(2, 192), float32] */)
}

def @func_1929() -> (Tensor[(12, 14, 2), float64],) {
  %633 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %634 = %633.0;
  (%634,)
}

def @func_9011(%var_9008: Tensor[(11, 2, 14), float64]) -> Tensor[(11, 2, 14), float64] {
  %635 = cast(%var_9008, dtype="float64") /* ty=Tensor[(11, 2, 14), float64] */;
  asin(%635) /* ty=Tensor[(11, 2, 14), float64] */
}

def @func_7768(%var_7710: Tensor[(1, 3, 2), float64], %var_7719: Tensor[(198), float64], %var_7741: Tensor[(350), int8], %var_7742: Tensor[(585, 1), float32]) -> (Tensor[(1, 3, 2), float64], Tensor[(9, 2, 11), float64], Tensor[(12, 14, 2), float64], Tensor[(198), float64], Tensor[(10, 7, 5), int8], Tensor[(350), int8], Tensor[(585, 1), float32], Tensor[(12, 14, 2), float64]) {
  %636 = cast(%var_7710, dtype="float64") /* ty=Tensor[(1, 3, 2), float64] */;
  %637 = cast(%var_7719, dtype="float64") /* ty=Tensor[(198), float64] */;
  %638 = reshape(%637, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), float64] */;
  %639 = @func_6168(%638) /* ty=(Tensor[(9, 2, 11), float64],) */;
  %640 = cast(%var_7719, dtype="float64") /* ty=Tensor[(198), float64] */;
  %641 = cast(%var_7741, dtype="int8") /* ty=Tensor[(350), int8] */;
  %642 = cast(%var_7742, dtype="float32") /* ty=Tensor[(585, 1), float32] */;
  %643 = reshape(%641, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), int8] */;
  %644 = reshape(%642, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %645 = @func_1440(%643, %644) /* ty=(Tensor[(10, 7, 5), int8], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
  %646 = @func_4752() /* ty=Tensor[(12, 14, 2), float64] */;
  %647 = cast(%646, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %648 = reshape(%647, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float64] */;
  %649 = @func_4678(%648) /* ty=(Tensor[(12, 14, 2), float64],) */;
  %650 = cos(%636) /* ty=Tensor[(1, 3, 2), float64] */;
  %651 = %639.0;
  %652 = sinh(%640) /* ty=Tensor[(198), float64] */;
  %653 = %645.0;
  %654 = %649.0;
  (%650, %651, %646, %652, %653, %var_7741, %var_7742, %654)
}

def @func_7854() -> Tensor[(12, 14, 2), float64] {
  @func_5329() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_1986(%var_1971: Tensor[(12, 14, 2), float64]) -> Tensor[(12, 14, 2), uint8] {
  %655 = @func_1852() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %656 = %655.1;
  %657 = cast(%var_1971, dtype="uint8") /* ty=Tensor[(12, 14, 2), uint8] */;
  %658 = shape_of(%656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(%656, dtype="uint8") /* ty=Tensor[(12, 14, 2), uint8] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  left_shift(%659, %660) /* ty=Tensor[(12, 14, 2), uint8] */
}

def @func_4074(%var_4009: Tensor[(8, 10, 13), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(8, 10, 13), bool], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %661 = @func_1681() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %662 = cast(%var_4009, dtype="float32") /* ty=Tensor[(8, 10, 13), float32] */;
  %663 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(8, 10, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %664 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(8, 10, 13), float32] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %666 = floor_divide(%664, %665) /* ty=Tensor[(8, 10, 13), float32] */;
  %667 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 10, 13), float32] */, dtype="bool") /* ty=Tensor[(8, 10, 13), bool] */;
  %668 = shape_of(%666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %669 = cast(%666, dtype="bool") /* ty=Tensor[(8, 10, 13), bool] */;
  %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %671 = @func_2628() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %672 = @func_3126() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %673 = %661.0;
  %674 = equal(%669, %670) /* ty=Tensor[(8, 10, 13), bool] */;
  %675 = %671.0;
  %676 = %672.0;
  (%673, %674, %675, %676)
}

def @func_462(%var_425: Tensor[(1, 12, 1), float64]) -> (Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) {
  %677 = cast(%var_425, dtype="float64") /* ty=Tensor[(1, 12, 1), float64] */;
  %678 = cast(meta[relay.Constant][37] /* ty=Tensor[(11, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 5), float32] */;
  %679 = cast(meta[relay.Constant][38] /* ty=Tensor[(825), float32] */, dtype="float32") /* ty=Tensor[(825), float32] */;
  %680 = reshape(%678, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
  %681 = reshape(%679, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
  %682 = cast(meta[relay.Constant][39] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %683 = reshape(%682, newshape=[9, 13, 5]) /* ty=Tensor[(9, 13, 5), float32] */;
  %684 = @func_236(%683) /* ty=(Tensor[(9, 13, 5), float32],) */;
  %685 = asinh(%677) /* ty=Tensor[(1, 12, 1), float64] */;
  %686 = @func_90(%680, %681) /* ty=Tensor[(5, 15, 11), float32] */;
  %687 = %684.0;
  (%685, %686, meta[relay.Constant][37] /* ty=Tensor[(11, 5), float32] */, meta[relay.Constant][38] /* ty=Tensor[(825), float32] */, %687, meta[relay.Constant][39] /* ty=Tensor[(585), float32] */)
}

def @func_7815() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 13, 11), float64], Tensor[(22), int16], Tensor[(286), int16], Tensor[(66), float32]) {
  %688 = @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %689 = @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %690 = cast(meta[relay.Constant][40] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
  %691 = cast(meta[relay.Constant][41] /* ty=Tensor[(286), int16] */, dtype="int16") /* ty=Tensor[(286), int16] */;
  %692 = cast(meta[relay.Constant][42] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %693 = reshape(%690, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), int16] */;
  %694 = reshape(%691, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), int16] */;
  %695 = reshape(%692, newshape=[1, 66]) /* ty=Tensor[(1, 66), float32] */;
  %696 = @func_3718(%693, %694, %695) /* ty=(Tensor[(2, 13, 11), uint16], Tensor[(3, 2, 11), float32], Tensor[(1, 66), float32], Tensor[(2, 13, 11), float64], Tensor[(2, 1, 11), float32]) */;
  %697 = %688.0;
  %698 = %689.0;
  %699 = %696.3;
  (%697, %698, %699, meta[relay.Constant][40] /* ty=Tensor[(22), int16] */, meta[relay.Constant][41] /* ty=Tensor[(286), int16] */, meta[relay.Constant][42] /* ty=Tensor[(66), float32] */)
}

def @main(%var_9389: Tensor[(6, 11, 8), float64], %var_9393: Tensor[(6, 11, 8), float64], %var_9405: Tensor[(585), float32]) -> (Tensor[(585, 1), float32], Tensor[(585), float32], Tensor[(6, 11, 8), float32]) {
  %700 = cast(%var_9405, dtype="float32") /* ty=Tensor[(585), float32] */;
  %701 = reshape(%700, newshape=[585, 1]) /* ty=Tensor[(585, 1), float32] */;
  %702 = @func_3255(%701) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585, 1), float32]) */;
  %703 = cast(%var_9389, dtype="float64") /* ty=Tensor[(6, 11, 8), float64] */;
  %704 = asin(%703) /* ty=Tensor[(6, 11, 8), float64] */;
  %705 = cast(%var_9393, dtype="uint8") /* ty=Tensor[(6, 11, 8), uint8] */;
  %706 = shape_of(%704, dtype="int32") /* ty=Tensor[(3), int32] */;
  %707 = cast(%704, dtype="uint8") /* ty=Tensor[(6, 11, 8), uint8] */;
  %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %709 = multiply(%707, %708) /* ty=Tensor[(6, 11, 8), uint8] */;
  %710 = cast(%709, dtype="float32") /* ty=Tensor[(6, 11, 8), float32] */;
  %711 = shape_of(%var_9389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%var_9389, dtype="float32") /* ty=Tensor[(6, 11, 8), float32] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %714 = %702.3;
  %715 = floor_mod(%712, %713) /* ty=Tensor[(6, 11, 8), float32] */;
  (%714, %var_9405, %715)
}

def @func_8591() -> (Tensor[(12, 14, 2), bool], Tensor[(2, 6, 8), float64]) {
  %716 = @func_4468() /* ty=(Tensor[(12, 14, 2), bool],) */;
  %717 = %716.0;
  %718 = @func_5705() /* ty=Tensor[(2, 6, 8), float64] */;
  (%717, %718)
}

def @func_814(%var_781: Tensor[(16, 3, 8), float32], %var_787: Tensor[(16, 3, 8), float32]) -> (Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) {
  %719 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 3, 8), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 8), float32] */;
  %720 = shape_of(%var_781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %721 = cast(%var_781, dtype="float32") /* ty=Tensor[(16, 3, 8), float32] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %723 = floor_mod(%721, %722) /* ty=Tensor[(16, 3, 8), float32] */;
  %724 = cast(%var_787, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%723, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %728 = cast(%var_781, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
  %729 = shape_of(%723, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%723, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %732 = not_equal(%726, %727) /* ty=Tensor[(16, 3, 8), bool] */;
  %733 = greater(%730, %731) /* ty=Tensor[(16, 3, 8), bool] */;
  %734 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  (%732, %733, %734)
}

def @func_3457() -> (Tensor[(12, 14, 2), float64],) {
  %735 = @func_2029() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %736 = %735.0;
  %737 = cast(%736, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %738 = asinh(%737) /* ty=Tensor[(12, 14, 2), float64] */;
  (%738,)
}

def @func_6743(%var_6732: Tensor[(56, 20), uint16], %var_6736: Tensor[(6, 64), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(10, 16, 7), uint16], Tensor[(56, 20), uint16], Tensor[(585), bool], Tensor[(1, 55), float32], Tensor[(6, 64), float32], Tensor[(585), float32]) {
  %739 = @func_3986() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %740 = cast(%var_6732, dtype="uint16") /* ty=Tensor[(56, 20), uint16] */;
  %741 = cast(%var_6732, dtype="uint16") /* ty=Tensor[(56, 20), uint16] */;
  %742 = reshape(%740, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), uint16] */;
  %743 = reshape(%741, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), uint16] */;
  %744 = @func_2462(%742, %743) /* ty=(Tensor[(10, 16, 7), uint16], Tensor[(12, 14, 2), float64]) */;
  %745 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 55), float32] */, dtype="float32") /* ty=Tensor[(1, 55), float32] */;
  %746 = cast(%var_6736, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %747 = cast(meta[relay.Constant][45] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %748 = reshape(%745, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %749 = reshape(%746, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %750 = reshape(%747, newshape=[195, 3]) /* ty=Tensor[(195, 3), float32] */;
  %751 = @func_4641(%748, %749, %750) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(195, 3), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(585), bool], Tensor[(585, 1), float32], Tensor[(12, 14, 2), bool], Tensor[(825), float32], Tensor[(5, 165), float64]) */;
  %752 = %739.0;
  %753 = %744.0;
  %754 = %751.9;
  (%752, %753, %var_6732, %754, meta[relay.Constant][44] /* ty=Tensor[(1, 55), float32] */, %var_6736, meta[relay.Constant][45] /* ty=Tensor[(585), float32] */)
}

def @func_5521(%var_5465: Tensor[(2, 64), float32], %var_5500: Tensor[(384), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(11, 5), float32], Tensor[(48, 8), float32], Tensor[(384), float32], Tensor[(2, 64), int64], Tensor[(12, 14, 2), float64]) {
  %755 = cast(%var_5500, dtype="float32") /* ty=Tensor[(384), float32] */;
  %756 = cast(meta[relay.Constant][46] /* ty=Tensor[(11, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 5), float32] */;
  %757 = reshape(%755, newshape=[48, 8]) /* ty=Tensor[(48, 8), float32] */;
  %758 = reshape(%756, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %759 = @func_1302(%757, %758) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(48, 8), float32], Tensor[(5, 15, 11), float32], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), bool], Tensor[(5, 15, 11), float32], Tensor[(55), float32]) */;
  %760 = cast(%var_5465, dtype="float32") /* ty=Tensor[(2, 64), float32] */;
  %761 = asin(%760) /* ty=Tensor[(2, 64), float32] */;
  %762 = cast(meta[relay.Constant][46] /* ty=Tensor[(11, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 5), float32] */;
  %763 = cast(%var_5465, dtype="float32") /* ty=Tensor[(2, 64), float32] */;
  %764 = reshape(%762, newshape=[55, 1]) /* ty=Tensor[(55, 1), float32] */;
  %765 = reshape(%763, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %766 = @func_899(%764, %765) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(384), float32], Tensor[(5, 15, 11), float32], Tensor[(55, 1), float32], Tensor[(825, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32]) */;
  %767 = %766.6;
  %768 = cast(%767, dtype="int64") /* ty=Tensor[(128), int64] */;
  %769 = shape_of(%761, dtype="int32") /* ty=Tensor[(2), int32] */;
  %770 = cast(%761, dtype="int64") /* ty=Tensor[(2, 64), int64] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %772 = @func_3547() /* ty=Tensor[(12, 14, 2), float64] */;
  %773 = cast(%772, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %774 = reshape(%773, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float64] */;
  %775 = @func_1986(%774) /* ty=Tensor[(12, 14, 2), uint8] */;
  %776 = cast(%775, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %777 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
  %778 = %759.1;
  %779 = bitwise_xor(%770, %771) /* ty=Tensor[(2, 64), int64] */;
  %780 = atan(%776) /* ty=Tensor[(12, 14, 2), float64] */;
  (%777, %772, meta[relay.Constant][46] /* ty=Tensor[(11, 5), float32] */, %778, %var_5500, %779, %780)
}

def @func_6627() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %781 = @func_3779() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %782 = @func_3922() /* ty=Tensor[(12, 14, 2), float64] */;
  %783 = %781.0;
  (%782, %783)
}

def @func_8292() -> Tensor[(12, 14, 2), float64] {
  @func_8178() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_4404() -> Tensor[(12, 14, 2), bool] {
  %784 = @func_1632() /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */;
  %785 = %784.1;
  %786 = @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %787 = %786.0;
  %788 = cast(%787, dtype="bool") /* ty=Tensor[(12, 14, 2), bool] */;
  %789 = shape_of(%785, dtype="int32") /* ty=Tensor[(3), int32] */;
  %790 = cast(%785, dtype="bool") /* ty=Tensor[(12, 14, 2), bool] */;
  %791 = dyn.reshape(%788, %789, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%790, %791) /* ty=Tensor[(12, 14, 2), bool] */
}

def @func_4108() -> (Tensor[(12, 14, 2), float64],) {
  %792 = @func_3779() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %793 = %792.0;
  (%793,)
}

def @func_6101() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %794 = @func_2029() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %795 = %794.0;
  %796 = @func_5649() /* ty=Tensor[(12, 14, 2), float64] */;
  (%795, %796)
}

def @func_4641(%var_4521: Tensor[(55), float32], %var_4557: Tensor[(384), float32], %var_4558: Tensor[(195, 3), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(195, 3), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(585), bool], Tensor[(585, 1), float32], Tensor[(12, 14, 2), bool], Tensor[(825), float32], Tensor[(5, 165), float64]) {
  %797 = @func_1381() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %798 = cast(%var_4521, dtype="float32") /* ty=Tensor[(55), float32] */;
  %799 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 165), float32] */, dtype="float32") /* ty=Tensor[(5, 165), float32] */;
  %800 = reshape(%798, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
  %801 = reshape(%799, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
  %802 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %803 = cast(%var_4557, dtype="float32") /* ty=Tensor[(384), float32] */;
  %804 = cast(%var_4558, dtype="float32") /* ty=Tensor[(195, 3), float32] */;
  %805 = cast(%var_4557, dtype="float32") /* ty=Tensor[(384), float32] */;
  %806 = cast(%var_4557, dtype="int16") /* ty=Tensor[(384), int16] */;
  %807 = reshape(%803, newshape=[2, 192]) /* ty=Tensor[(2, 192), float32] */;
  %808 = reshape(%804, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %809 = reshape(%805, newshape=[2, 192]) /* ty=Tensor[(2, 192), float32] */;
  %810 = reshape(%806, newshape=[2, 192]) /* ty=Tensor[(2, 192), int16] */;
  %811 = @func_3413(%807, %808, %809, %810) /* ty=(Tensor[(12, 14, 2), float32], Tensor[(585), float32], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 192), bool], Tensor[(585), bool], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float64]) */;
  %812 = cast(7.66468f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %813 = %811.1;
  %814 = cast(%813, dtype="float32") /* ty=Tensor[(585), float32] */;
  %815 = cast(%var_4558, dtype="bool") /* ty=Tensor[(195, 3), bool] */;
  %816 = reshape(%812, newshape=[]) /* ty=float32 */;
  %817 = reshape(%814, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %818 = reshape(%815, newshape=[585]) /* ty=Tensor[(585), bool] */;
  %819 = @func_2901(%816, %817, %818) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(585), int64], Tensor[(585), bool], float32) */;
  %820 = cast(%813, dtype="float32") /* ty=Tensor[(585), float32] */;
  %821 = reshape(%820, newshape=[585, 1]) /* ty=Tensor[(585, 1), float32] */;
  %822 = @func_3255(%821) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585, 1), float32]) */;
  %823 = @func_4468() /* ty=(Tensor[(12, 14, 2), bool],) */;
  %824 = cast(%var_4521, dtype="float32") /* ty=Tensor[(55), float32] */;
  %825 = reshape(%824, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %826 = @func_1525(%825) /* ty=(Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 9, 16), bool]) */;
  %827 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 165), float32] */, dtype="float64") /* ty=Tensor[(5, 165), float64] */;
  %828 = exp(%827) /* ty=Tensor[(5, 165), float64] */;
  %829 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 165), float32] */, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %830 = shape_of(%828, dtype="int32") /* ty=Tensor[(2), int32] */;
  %831 = cast(%828, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %833 = multiply(%831, %832) /* ty=Tensor[(5, 165), int16] */;
  %834 = cast(%833, dtype="float64") /* ty=Tensor[(5, 165), float64] */;
  %835 = cast(7.66468f /* ty=float32 */, dtype="float64") /* ty=float64 */;
  %836 = %797.0;
  %837 = @func_90(%800, %801) /* ty=Tensor[(5, 15, 11), float32] */;
  %838 = %802.0;
  %839 = @func_3140() /* ty=Tensor[(12, 14, 2), float64] */;
  %840 = @func_3547() /* ty=Tensor[(12, 14, 2), float64] */;
  %841 = %819.2;
  %842 = %822.3;
  %843 = %823.0;
  %844 = %826.2;
  %845 = divide(%834, %835) /* ty=Tensor[(5, 165), float64] */;
  (%836, %837, %var_4521, %838, %813, %var_4557, %var_4558, %839, %840, %841, %842, %843, %844, %845)
}

def @func_7663(%var_7655: Tensor[(12, 14, 2), float64]) -> Tensor[(12, 14, 2), uint32] {
  %846 = @func_6954() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %847 = %846.0;
  %848 = cast(%var_7655, dtype="uint32") /* ty=Tensor[(12, 14, 2), uint32] */;
  %849 = shape_of(%847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%847, dtype="uint32") /* ty=Tensor[(12, 14, 2), uint32] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%850, %851) /* ty=Tensor[(12, 14, 2), uint32] */
}

def @func_7158() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %852 = @func_1681() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %853 = @func_1632() /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */;
  %854 = @func_6255() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %855 = %852.0;
  %856 = %853.1;
  %857 = %854.0;
  (%855, %856, %857)
}

def @func_8096() -> (Tensor[(12, 14, 2), float64],) {
  %858 = @func_7708() /* ty=Tensor[(12, 14, 2), float64] */;
  (%858,)
}

def @func_4678(%var_4651: Tensor[(12, 14, 2), float64]) -> (Tensor[(12, 14, 2), float64],) {
  %859 = @func_3140() /* ty=Tensor[(12, 14, 2), float64] */;
  %860 = cast(%var_4651, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%859, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %864 = floor_divide(%862, %863) /* ty=Tensor[(12, 14, 2), float64] */;
  (%864,)
}

def @func_8815(%var_8807: Tensor[(55), float32]) -> (float32, Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(55), float32]) {
  %865 = @func_7386() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, float32, Tensor[(12, 14, 2), float64]) */;
  %866 = cast(meta[relay.Constant][48] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %867 = cast(%var_8807, dtype="float32") /* ty=Tensor[(55), float32] */;
  %868 = reshape(%866, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float32] */;
  %869 = reshape(%867, newshape=[1, 55]) /* ty=Tensor[(1, 55), float32] */;
  %870 = @func_627(%868, %869) /* ty=(Tensor[(16, 2, 4), float32], Tensor[(16, 2, 4), float64], Tensor[(9, 13, 5), float32], Tensor[(585, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(1, 55), float32], Tensor[(825), float32]) */;
  %871 = %865.4;
  %872 = %870.4;
  (%871, %872, meta[relay.Constant][48] /* ty=Tensor[(128), float32] */, %var_8807)
}

def @func_5085() -> Tensor[(12, 14, 2), float64] {
  %873 = @func_1852() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %873.1
}

def @func_8199() -> (Tensor[(12, 14, 2), float64],) {
  %874 = @func_6887() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %875 = %874.1;
  (%875,)
}

def @func_3436() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %876 = @func_2357() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %877 = @func_2357() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %878 = %876.0;
  %879 = %877.0;
  (%878, %879)
}

def @func_7386() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, float32, Tensor[(12, 14, 2), float64]) {
  %880 = @func_3779() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %881 = @func_3986() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %882 = @func_6887() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %883 = cast(-6.00893f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %884 = reshape(%883, newshape=[]) /* ty=float32 */;
  %885 = @func_1589(%884) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32]) */;
  %886 = @func_6954() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %887 = @func_4999() /* ty=Tensor[(12, 14, 2), float64] */;
  %888 = %880.0;
  %889 = %881.0;
  %890 = %882.0;
  %891 = %885.2;
  %892 = %886.0;
  (%887, %888, %889, %890, %891, -6.00893f /* ty=float32 */, %892)
}

def @func_9226() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), bool], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %893 = @func_3457() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %894 = @func_7158() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %895 = %893.0;
  %896 = %894.2;
  %897 = @func_5403() /* ty=Tensor[(12, 14, 2), bool] */;
  %898 = @func_7708() /* ty=Tensor[(12, 14, 2), float64] */;
  %899 = @func_4752() /* ty=Tensor[(12, 14, 2), float64] */;
  (%895, %896, %897, %898, %899)
}

def @func_2136() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %900 = @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %901 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  %902 = %900.0;
  (%901, %902)
}

def @func_7173() -> Tensor[(12, 14, 2), float64] {
  %903 = @func_6534() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %903.0
}

def @func_2774(%var_2751: Tensor[(585), float32]) -> (Tensor[(4, 4, 8), float64], Tensor[(12, 14, 2), float64], Tensor[(10, 7, 5), int8], Tensor[(350), int8], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 2, 11), float32], Tensor[(66, 1), float32]) {
  %904 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 4, 8), float64] */, dtype="float64") /* ty=Tensor[(4, 4, 8), float64] */;
  %905 = @func_1852() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %906 = cast(meta[relay.Constant][50] /* ty=Tensor[(350), int8] */, dtype="int8") /* ty=Tensor[(350), int8] */;
  %907 = cast(%var_2751, dtype="float32") /* ty=Tensor[(585), float32] */;
  %908 = reshape(%906, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), int8] */;
  %909 = reshape(%907, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %910 = @func_1440(%908, %909) /* ty=(Tensor[(10, 7, 5), int8], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
  %911 = @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %912 = cast(meta[relay.Constant][51] /* ty=Tensor[(66, 1), float32] */, dtype="float32") /* ty=Tensor[(66, 1), float32] */;
  %913 = reshape(%912, newshape=[3, 2, 11]) /* ty=Tensor[(3, 2, 11), float32] */;
  %914 = sin(%904) /* ty=Tensor[(4, 4, 8), float64] */;
  %915 = %905.0;
  %916 = %910.0;
  %917 = %911.0;
  %918 = @func_1611(%913) /* ty=Tensor[(3, 2, 11), float32] */;
  (%914, %915, %916, meta[relay.Constant][50] /* ty=Tensor[(350), int8] */, %var_2751, %917, %918, meta[relay.Constant][51] /* ty=Tensor[(66, 1), float32] */)
}

def @func_5739() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %919 = @func_3582() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %920 = @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %921 = %919.0;
  %922 = %920.0;
  (%921, %922)
}

def @func_6984() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %923 = @func_1088() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %924 = @func_6534() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %925 = %923.0;
  %926 = %924.0;
  (%925, %926)
}

def @func_7822() -> (Tensor[(12, 14, 2), float64],) {
  %927 = @func_3024() /* ty=Tensor[(12, 14, 2), float64] */;
  (%927,)
}

def @func_9293(%var_9263: Tensor[(4, 4, 14), float64], %var_9289: float32, %var_9290: Tensor[(585), float32]) -> (Tensor[(4, 4, 14), float64], Tensor[(16, 3, 8), bool], Tensor[(384), float32], Tensor[(12, 14, 2), float64], float32, float32, Tensor[(585), float32]) {
  %928 = cast(%var_9263, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %929 = cast(meta[relay.Constant][52] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %930 = cast(meta[relay.Constant][52] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %931 = reshape(%929, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %932 = reshape(%930, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %933 = @func_814(%931, %932) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */;
  %934 = cast(%var_9289, dtype="float32") /* ty=float32 */;
  %935 = cast(%var_9290, dtype="float32") /* ty=Tensor[(585), float32] */;
  %936 = cast(%var_9290, dtype="bool") /* ty=Tensor[(585), bool] */;
  %937 = reshape(%934, newshape=[]) /* ty=float32 */;
  %938 = reshape(%935, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %939 = reshape(%936, newshape=[585]) /* ty=Tensor[(585), bool] */;
  %940 = @func_2901(%937, %938, %939) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(585), int64], Tensor[(585), bool], float32) */;
  %941 = sqrt(%928) /* ty=Tensor[(4, 4, 14), float64] */;
  %942 = %933.1;
  %943 = @func_7708() /* ty=Tensor[(12, 14, 2), float64] */;
  %944 = %940.3;
  (%941, %942, meta[relay.Constant][52] /* ty=Tensor[(384), float32] */, %943, %944, %var_9289, %var_9290)
}

def @func_5062() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %945 = @func_2104() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %946 = @func_1667() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %947 = %946.1;
  %948 = cast(%947, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %949 = %945.0;
  %950 = sqrt(%948) /* ty=Tensor[(12, 14, 2), float64] */;
  (%949, %950)
}

def @func_236(%var_207: Tensor[(9, 13, 5), float32]) -> (Tensor[(9, 13, 5), float32],) {
  %951 = cast(%var_207, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
  %952 = rsqrt(%951) /* ty=Tensor[(9, 13, 5), float32] */;
  (%952,)
}

def @func_5824(%var_5819: Tensor[(2, 14, 3), uint32]) -> (Tensor[(2, 14, 3), bool],) {
  %953 = cast(%var_5819, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %954 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(2, 14, 3), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %955 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 14, 3), uint32] */, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %956 = dyn.reshape(%953, %954, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %957 = greater_equal(%955, %956) /* ty=Tensor[(2, 14, 3), bool] */;
  (%957,)
}

def @func_1852() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %958 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
  %959 = cast(%958, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %960 = @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %961 = log(%959) /* ty=Tensor[(12, 14, 2), float64] */;
  %962 = %960.0;
  (%961, %962)
}

def @func_8140(%var_8135: Tensor[(5, 15, 14), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(5, 15, 14), bool]) {
  %963 = @func_8042() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(5, 15, 1), float32]) */;
  %964 = %963.1;
  %965 = cast(%964, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %966 = cast(%var_8135, dtype="bool") /* ty=Tensor[(5, 15, 14), bool] */;
  %967 = @func_4999() /* ty=Tensor[(12, 14, 2), float64] */;
  %968 = less(%965, %966) /* ty=Tensor[(5, 15, 14), bool] */;
  (%967, %968)
}

def @func_9359(%var_9339: Tensor[(1120), uint16], %var_9340: Tensor[(384), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(6, 64), float32], Tensor[(1120), uint16], Tensor[(384), float32]) {
  %969 = @func_3582() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %970 = cast(%var_9339, dtype="uint16") /* ty=Tensor[(1120), uint16] */;
  %971 = cast(%var_9340, dtype="float32") /* ty=Tensor[(384), float32] */;
  %972 = reshape(%970, newshape=[56, 20]) /* ty=Tensor[(56, 20), uint16] */;
  %973 = reshape(%971, newshape=[6, 64]) /* ty=Tensor[(6, 64), float32] */;
  %974 = @func_6743(%972, %973) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(10, 16, 7), uint16], Tensor[(56, 20), uint16], Tensor[(585), bool], Tensor[(1, 55), float32], Tensor[(6, 64), float32], Tensor[(585), float32]) */;
  %975 = %969.1;
  %976 = %974.5;
  (%975, %976, %var_9339, %var_9340)
}

def @func_3547() -> Tensor[(12, 14, 2), float64] {
  %977 = @func_1088() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %977.0
}

def @func_3024() -> Tensor[(12, 14, 2), float64] {
  %978 = @func_1852() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %978.1
}

def @func_6382() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %979 = @func_3167() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %980 = @func_5739() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %981 = %979.0;
  %982 = %980.0;
  (%981, %982)
}

def @func_1440(%var_1391: Tensor[(10, 7, 5), int8], %var_1420: Tensor[(585), float32]) -> (Tensor[(10, 7, 5), int8], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) {
  %983 = cast(meta[relay.Constant][54] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %984 = cast(%var_1391, dtype="int8") /* ty=Tensor[(10, 7, 5), int8] */;
  %985 = @func_1206() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %986 = @func_1369() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %987 = cast(meta[relay.Constant][54] /* ty=int8 */, dtype="float32") /* ty=float32 */;
  %988 = cast(%var_1420, dtype="float32") /* ty=Tensor[(585), float32] */;
  %989 = reshape(%987, newshape=[]) /* ty=float32 */;
  %990 = reshape(%988, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %991 = @func_943(%989, %990) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) */;
  %992 = subtract(%983, %984) /* ty=Tensor[(10, 7, 5), int8] */;
  %993 = %985.0;
  %994 = %986.0;
  %995 = %991.1;
  (%992, %993, %994, %995, %var_1420)
}

def @func_4702(%var_4685: Tensor[(14, 13, 1), uint32], %var_4686: Tensor[(14, 13, 11), uint32]) -> Tensor[(14, 13, 11), uint32] {
  %996 = cast(%var_4685, dtype="uint32") /* ty=Tensor[(14, 13, 1), uint32] */;
  %997 = cast(%var_4686, dtype="uint32") /* ty=Tensor[(14, 13, 11), uint32] */;
  bitwise_or(%996, %997) /* ty=Tensor[(14, 13, 11), uint32] */
}

def @func_1215() -> Tensor[(12, 14, 2), float64] {
  @func_741() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_4133(%var_4126: Tensor[(384), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(585), float32]) {
  %998 = @func_1206() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %999 = cast(%var_4126, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1000 = cast(meta[relay.Constant][55] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %1001 = cast(%var_4126, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1002 = cast(%var_4126, dtype="int16") /* ty=Tensor[(384), int16] */;
  %1003 = reshape(%999, newshape=[2, 192]) /* ty=Tensor[(2, 192), float32] */;
  %1004 = reshape(%1000, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %1005 = reshape(%1001, newshape=[2, 192]) /* ty=Tensor[(2, 192), float32] */;
  %1006 = reshape(%1002, newshape=[2, 192]) /* ty=Tensor[(2, 192), int16] */;
  %1007 = @func_3413(%1003, %1004, %1005, %1006) /* ty=(Tensor[(12, 14, 2), float32], Tensor[(585), float32], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 192), bool], Tensor[(585), bool], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float64]) */;
  %1008 = %998.0;
  %1009 = %1007.2;
  (%1008, %1009, %var_4126, meta[relay.Constant][55] /* ty=Tensor[(585), float32] */)
}

def @func_7675() -> (Tensor[(12, 14, 2), float64],) {
  %1010 = @func_6606() /* ty=Tensor[(12, 14, 2), float64] */;
  (%1010,)
}

def @func_5212() -> (Tensor[(12, 14, 2), float64],) {
  %1011 = @func_1381() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %1012 = %1011.0;
  (%1012,)
}

def @func_7946(%var_7929: Tensor[(55), float32], %var_7932: Tensor[(6, 64), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(55), float32], Tensor[(55), float32], Tensor[(12, 14, 2), bool], Tensor[(6, 64), float32]) {
  %1013 = @func_7386() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, float32, Tensor[(12, 14, 2), float64]) */;
  %1014 = cast(%var_7929, dtype="float32") /* ty=Tensor[(55), float32] */;
  %1015 = reshape(%1014, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %1016 = @func_1525(%1015) /* ty=(Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 9, 16), bool]) */;
  %1017 = cast(%var_7932, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %1018 = %1016.1;
  %1019 = cast(%1018, dtype="float32") /* ty=Tensor[(55), float32] */;
  %1020 = reshape(%1017, newshape=[48, 8]) /* ty=Tensor[(48, 8), float32] */;
  %1021 = reshape(%1019, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %1022 = @func_1302(%1020, %1021) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(48, 8), float32], Tensor[(5, 15, 11), float32], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), bool], Tensor[(5, 15, 11), float32], Tensor[(55), float32]) */;
  %1023 = cast(%var_7932, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %1024 = %1013.0;
  %1025 = %1022.5;
  %1026 = sin(%1023) /* ty=Tensor[(6, 64), float32] */;
  (%1024, %1018, %var_7929, %1025, %1026)
}

def @func_4999() -> Tensor[(12, 14, 2), float64] {
  %1027 = @func_3436() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %1027.1
}

def @func_5629(%var_5575: Tensor[(12, 14, 2), float64]) -> (Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(13, 13, 11), float64], float32, Tensor[(585), float32]) {
  %1028 = @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %1029 = %1028.0;
  %1030 = cast(%var_5575, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %1031 = shape_of(%1029, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1032 = cast(%1029, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1034 = @func_3126() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %1035 = @func_4432() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %1036 = cast(-0.385288f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1037 = cast(meta[relay.Constant][56] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %1038 = reshape(%1036, newshape=[]) /* ty=float32 */;
  %1039 = reshape(%1037, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %1040 = @func_943(%1038, %1039) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) */;
  %1041 = floor_mod(%1032, %1033) /* ty=Tensor[(12, 14, 2), float32] */;
  %1042 = %1034.0;
  %1043 = %1035.0;
  %1044 = %1040.4;
  (%1041, %1042, %1043, %1044, -0.385288f /* ty=float32 */, meta[relay.Constant][56] /* ty=Tensor[(585), float32] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1852() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %0 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
  %1 = cast(%0, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %2 = @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %3 = log(%1) /* ty=Tensor[(12, 14, 2), float64] */;
  %4 = %2.0;
  (%3, %4)
}

def @func_6889() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_6887() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_2138() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_3413(%var_3325: Tensor[(2, 192), float32], %var_3353: Tensor[(585), float32], %var_3361: Tensor[(2, 192), float32], %var_3385: Tensor[(2, 192), int16]) -> (Tensor[(12, 14, 2), float32], Tensor[(585), float32], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 192), bool], Tensor[(585), bool], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float64]) {
  %5 = @func_3167() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %6 = %5.0;
  %7 = cast(%6, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %9 = reshape(%8, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %10 = @func_1897(%9) /* ty=(Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32], Tensor[(12, 14, 2), float64]) */;
  %11 = %10.2;
  %12 = cast(%var_3353, dtype="float32") /* ty=Tensor[(585), float32] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(1), int32] */;
  %14 = cast(%11, dtype="float32") /* ty=Tensor[(585), float32] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?), float32] */;
  %16 = @func_1632() /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */;
  %17 = %16.2;
  %18 = cast(%17, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %19 = atan(%18) /* ty=Tensor[(2, 192), float32] */;
  %20 = cast(%19, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %21 = cast(%var_3325, dtype="bool") /* ty=Tensor[(2, 192), bool] */;
  %22 = shape_of(%17, dtype="int32") /* ty=Tensor[(2), int32] */;
  %23 = cast(%17, dtype="bool") /* ty=Tensor[(2, 192), bool] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %25 = logical_or(%23, %24) /* ty=Tensor[(2, 192), bool] */;
  %26 = cast(%25, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %27 = reshape(%20, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %28 = reshape(%26, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %29 = @func_814(%27, %28) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */;
  %30 = cast(%var_3361, dtype="int16") /* ty=Tensor[(2, 192), int16] */;
  %31 = shape_of(%19, dtype="int32") /* ty=Tensor[(2), int32] */;
  %32 = cast(%19, dtype="int16") /* ty=Tensor[(2, 192), int16] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %34 = right_shift(%32, %33) /* ty=Tensor[(2, 192), int16] */;
  %35 = cast(%var_3385, dtype="bool") /* ty=Tensor[(2, 192), bool] */;
  %36 = shape_of(%34, dtype="int32") /* ty=Tensor[(2), int32] */;
  %37 = cast(%34, dtype="bool") /* ty=Tensor[(2, 192), bool] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %39 = cast(%var_3353, dtype="bool") /* ty=Tensor[(585), bool] */;
  %40 = shape_of(%11, dtype="int32") /* ty=Tensor[(1), int32] */;
  %41 = cast(%11, dtype="bool") /* ty=Tensor[(585), bool] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?), bool] */;
  %43 = cast(%var_3325, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %44 = cast(%25, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
  %45 = reshape(%43, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %46 = reshape(%44, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %47 = @func_814(%45, %46) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */;
  %48 = cast(%25, dtype="float64") /* ty=Tensor[(2, 192), float64] */;
  %49 = shape_of(%var_3325, dtype="int32") /* ty=Tensor[(2), int32] */;
  %50 = cast(%var_3325, dtype="float64") /* ty=Tensor[(2, 192), float64] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %52 = log2(%7) /* ty=Tensor[(12, 14, 2), float32] */;
  %53 = divide(%14, %15) /* ty=Tensor[(585), float32] */;
  %54 = %29.2;
  %55 = @func_3140() /* ty=Tensor[(12, 14, 2), float64] */;
  %56 = less_equal(%37, %38) /* ty=Tensor[(2, 192), bool] */;
  %57 = logical_and(%41, %42) /* ty=Tensor[(585), bool] */;
  %58 = %47.2;
  %59 = maximum(%50, %51) /* ty=Tensor[(2, 192), float64] */;
  (%52, meta[relay.Constant][0] /* ty=Tensor[(585), float32] */, %53, %54, %55, %56, %57, %58, %59)
}

def @func_3419(%var_3415: Tensor[(2, 192), float32], %var_3416: Tensor[(585), float32], %var_3417: Tensor[(2, 192), float32], %var_3418: Tensor[(2, 192), int16]) -> (Tensor[(12, 14, 2), float32], Tensor[(585), float32], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 192), bool], Tensor[(585), bool], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float64]) {
  @func_3413(%var_3415, %var_3416, %var_3417, %var_3418) /* ty=(Tensor[(12, 14, 2), float32], Tensor[(585), float32], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 192), bool], Tensor[(585), bool], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float64]) */
}

def @func_236(%var_207: Tensor[(9, 13, 5), float32]) -> (Tensor[(9, 13, 5), float32],) {
  %60 = cast(%var_207, dtype="float32") /* ty=Tensor[(9, 13, 5), float32] */;
  %61 = rsqrt(%60) /* ty=Tensor[(9, 13, 5), float32] */;
  (%61,)
}

def @func_6168(%var_6152: Tensor[(9, 2, 11), float64]) -> (Tensor[(9, 2, 11), float64],) {
  %62 = cast(%var_6152, dtype="float64") /* ty=Tensor[(9, 2, 11), float64] */;
  %63 = sqrt(%62) /* ty=Tensor[(9, 2, 11), float64] */;
  (%63,)
}

def @func_1089() -> (Tensor[(12, 14, 2), float64],) {
  %65 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %64 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
    (%64,)
  };
  %65() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_5270() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_5268() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_1897(%var_1887: Tensor[(585), float32]) -> (Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32], Tensor[(12, 14, 2), float64]) {
  %66 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %67 = %66.0;
  %68 = cast(%67, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %69 = cast(-8.93766f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %70 = cast(%var_1887, dtype="float32") /* ty=Tensor[(585), float32] */;
  %71 = reshape(%68, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float64] */;
  %72 = reshape(%69, newshape=[]) /* ty=float32 */;
  %73 = reshape(%70, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %74 = @func_1741(%71, %72, %73) /* ty=(Tensor[(12, 14, 2), int8], float32, float32, Tensor[(13, 13, 11), float64], Tensor[(585), float32]) */;
  %75 = %74.0;
  %76 = cast(%75, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %77 = exp(%76) /* ty=Tensor[(12, 14, 2), float64] */;
  (%67, -8.93766f /* ty=float32 */, %var_1887, %77)
}

def @func_7709() -> Tensor[(12, 14, 2), float64] {
  %79 = fn () -> Tensor[(12, 14, 2), float64] {
    %78 = @func_2357() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %78.0
  };
  %79() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_7855() -> Tensor[(12, 14, 2), float64] {
  %80 = fn () -> Tensor[(12, 14, 2), float64] {
    @func_5329() /* ty=Tensor[(12, 14, 2), float64] */
  };
  %80() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_9013(%var_9012: Tensor[(11, 2, 14), float64]) -> Tensor[(11, 2, 14), float64] {
  %82 = fn (%var_9008: Tensor[(11, 2, 14), float64]) -> Tensor[(11, 2, 14), float64] {
    %81 = cast(%var_9008, dtype="float64") /* ty=Tensor[(11, 2, 14), float64] */;
    asin(%81) /* ty=Tensor[(11, 2, 14), float64] */
  };
  %82(%var_9012) /* ty=Tensor[(11, 2, 14), float64] */
}

def @func_899(%var_863: Tensor[(55, 1), float32], %var_870: Tensor[(128), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(384), float32], Tensor[(5, 15, 11), float32], Tensor[(55, 1), float32], Tensor[(825, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32]) {
  %83 = cast(meta[relay.Constant][1] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %84 = cast(meta[relay.Constant][1] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %85 = reshape(%83, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %86 = reshape(%84, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %87 = @func_814(%85, %86) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */;
  %88 = cast(%var_863, dtype="float32") /* ty=Tensor[(55, 1), float32] */;
  %89 = cast(meta[relay.Constant][2] /* ty=Tensor[(825, 1), float32] */, dtype="float32") /* ty=Tensor[(825, 1), float32] */;
  %90 = reshape(%88, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
  %91 = reshape(%89, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
  %92 = cast(%var_870, dtype="float32") /* ty=Tensor[(128), float32] */;
  %93 = cast(%var_863, dtype="float32") /* ty=Tensor[(55, 1), float32] */;
  %94 = reshape(%92, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float32] */;
  %95 = reshape(%93, newshape=[1, 55]) /* ty=Tensor[(1, 55), float32] */;
  %96 = @func_627(%94, %95) /* ty=(Tensor[(16, 2, 4), float32], Tensor[(16, 2, 4), float64], Tensor[(9, 13, 5), float32], Tensor[(585, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(1, 55), float32], Tensor[(825), float32]) */;
  %97 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  %98 = cast(meta[relay.Constant][3] /* ty=Tensor[(12, 14, 2), float64] */, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%97, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %102 = mod(%100, %101) /* ty=Tensor[(12, 14, 2), float32] */;
  %103 = cast(%102, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %104 = asin(%103) /* ty=Tensor[(12, 14, 2), float64] */;
  %105 = cast(%104, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %106 = rsqrt(%105) /* ty=Tensor[(12, 14, 2), float32] */;
  %107 = cast(%106, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %108 = cast(%var_863, dtype="float32") /* ty=Tensor[(55, 1), float32] */;
  %109 = %96.4;
  %110 = cast(%109, dtype="float32") /* ty=Tensor[(5, 15, 11), float32] */;
  %111 = reshape(%108, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
  %112 = reshape(%110, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
  %113 = %87.2;
  %114 = @func_90(%90, %91) /* ty=Tensor[(5, 15, 11), float32] */;
  %115 = acos(%107) /* ty=Tensor[(12, 14, 2), float64] */;
  %116 = @func_90(%111, %112) /* ty=Tensor[(5, 15, 11), float32] */;
  (%113, meta[relay.Constant][1] /* ty=Tensor[(384), float32] */, %114, %var_863, meta[relay.Constant][2] /* ty=Tensor[(825, 1), float32] */, %109, %var_870, %115, %116)
}

def @func_7946(%var_7929: Tensor[(55), float32], %var_7932: Tensor[(6, 64), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(55), float32], Tensor[(55), float32], Tensor[(12, 14, 2), bool], Tensor[(6, 64), float32]) {
  %117 = @func_7386() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, float32, Tensor[(12, 14, 2), float64]) */;
  %118 = cast(%var_7929, dtype="float32") /* ty=Tensor[(55), float32] */;
  %119 = reshape(%118, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %120 = @func_1525(%119) /* ty=(Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 9, 16), bool]) */;
  %121 = cast(%var_7932, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %122 = %120.1;
  %123 = cast(%122, dtype="float32") /* ty=Tensor[(55), float32] */;
  %124 = reshape(%121, newshape=[48, 8]) /* ty=Tensor[(48, 8), float32] */;
  %125 = reshape(%123, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %126 = @func_1302(%124, %125) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(48, 8), float32], Tensor[(5, 15, 11), float32], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), bool], Tensor[(5, 15, 11), float32], Tensor[(55), float32]) */;
  %127 = cast(%var_7932, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %128 = %117.0;
  %129 = %126.5;
  %130 = sin(%127) /* ty=Tensor[(6, 64), float32] */;
  (%128, %122, %var_7929, %129, %130)
}

def @func_903(%var_901: Tensor[(55, 1), float32], %var_902: Tensor[(128), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(384), float32], Tensor[(5, 15, 11), float32], Tensor[(55, 1), float32], Tensor[(825, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32]) {
  @func_899(%var_901, %var_902) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(384), float32], Tensor[(5, 15, 11), float32], Tensor[(55, 1), float32], Tensor[(825, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32]) */
}

def @func_8382() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %131 = @func_5151() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %132 = @func_7822() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %133 = @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %134 = @func_3986() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %135 = %131.0;
  %136 = %132.0;
  %137 = %133.0;
  %138 = %134.0;
  (%135, %136, %137, %138)
}

def @func_1591(%var_1590: float32) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32]) {
  %147 = fn (%var_1585: float32) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32]) {
    %139 = @func_1088() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %140 = cast(%var_1585, dtype="float32") /* ty=float32 */;
    %141 = cast(meta[relay.Constant][4] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
    %142 = reshape(%140, newshape=[]) /* ty=float32 */;
    %143 = reshape(%141, newshape=[585]) /* ty=Tensor[(585), float32] */;
    %144 = @func_943(%142, %143) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) */;
    %145 = %139.0;
    %146 = %144.0;
    (%145, %146, %var_1585, meta[relay.Constant][4] /* ty=Tensor[(585), float32] */)
  };
  %147(%var_1590) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32]) */
}

def @func_3505(%var_3504: Tensor[(55), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825, 1), float32]) {
  %154 = fn (%var_3491: Tensor[(55), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825, 1), float32]) {
    %148 = cast(%var_3491, dtype="float32") /* ty=Tensor[(55), float32] */;
    %149 = cast(meta[relay.Constant][5] /* ty=Tensor[(825, 1), float32] */, dtype="float32") /* ty=Tensor[(825, 1), float32] */;
    %150 = reshape(%148, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
    %151 = reshape(%149, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
    %152 = @func_3024() /* ty=Tensor[(12, 14, 2), float64] */;
    %153 = @func_90(%150, %151) /* ty=Tensor[(5, 15, 11), float32] */;
    (%152, %153, %var_3491, meta[relay.Constant][5] /* ty=Tensor[(825, 1), float32] */)
  };
  %154(%var_3504) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825, 1), float32]) */
}

def @func_2465(%var_2463: Tensor[(10, 16, 7), uint16], %var_2464: Tensor[(10, 16, 7), uint16]) -> (Tensor[(10, 16, 7), uint16], Tensor[(12, 14, 2), float64]) {
  %162 = fn (%var_2449: Tensor[(10, 16, 7), uint16], %var_2450: Tensor[(10, 16, 7), uint16]) -> (Tensor[(10, 16, 7), uint16], Tensor[(12, 14, 2), float64]) {
    %155 = cast(%var_2450, dtype="uint16") /* ty=Tensor[(10, 16, 7), uint16] */;
    %156 = shape_of(%var_2449, dtype="int32") /* ty=Tensor[(3), int32] */;
    %157 = cast(%var_2449, dtype="uint16") /* ty=Tensor[(10, 16, 7), uint16] */;
    %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %159 = @func_1369() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %160 = add(%157, %158) /* ty=Tensor[(10, 16, 7), uint16] */;
    %161 = %159.1;
    (%160, %161)
  };
  %162(%var_2463, %var_2464) /* ty=(Tensor[(10, 16, 7), uint16], Tensor[(12, 14, 2), float64]) */
}

def @func_7999() -> (Tensor[(1, 4, 13), float64], Tensor[(12, 14, 2), float64]) {
  @func_7997() /* ty=(Tensor[(1, 4, 13), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_5727() -> (Tensor[(12, 14, 2), float64],) {
  @func_5725() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_6747(%var_6745: Tensor[(56, 20), uint16], %var_6746: Tensor[(6, 64), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(10, 16, 7), uint16], Tensor[(56, 20), uint16], Tensor[(585), bool], Tensor[(1, 55), float32], Tensor[(6, 64), float32], Tensor[(585), float32]) {
  @func_6743(%var_6745, %var_6746) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(10, 16, 7), uint16], Tensor[(56, 20), uint16], Tensor[(585), bool], Tensor[(1, 55), float32], Tensor[(6, 64), float32], Tensor[(585), float32]) */
}

def @func_1208() -> (Tensor[(12, 14, 2), float64],) {
  @func_1206() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_4645(%var_4642: Tensor[(55), float32], %var_4643: Tensor[(384), float32], %var_4644: Tensor[(195, 3), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(195, 3), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(585), bool], Tensor[(585, 1), float32], Tensor[(12, 14, 2), bool], Tensor[(825), float32], Tensor[(5, 165), float64]) {
  %212 = fn (%var_4521: Tensor[(55), float32], %var_4557: Tensor[(384), float32], %var_4558: Tensor[(195, 3), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(195, 3), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(585), bool], Tensor[(585, 1), float32], Tensor[(12, 14, 2), bool], Tensor[(825), float32], Tensor[(5, 165), float64]) {
    %163 = @func_1381() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %164 = cast(%var_4521, dtype="float32") /* ty=Tensor[(55), float32] */;
    %165 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 165), float32] */, dtype="float32") /* ty=Tensor[(5, 165), float32] */;
    %166 = reshape(%164, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
    %167 = reshape(%165, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
    %168 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %169 = cast(%var_4557, dtype="float32") /* ty=Tensor[(384), float32] */;
    %170 = cast(%var_4558, dtype="float32") /* ty=Tensor[(195, 3), float32] */;
    %171 = cast(%var_4557, dtype="float32") /* ty=Tensor[(384), float32] */;
    %172 = cast(%var_4557, dtype="int16") /* ty=Tensor[(384), int16] */;
    %173 = reshape(%169, newshape=[2, 192]) /* ty=Tensor[(2, 192), float32] */;
    %174 = reshape(%170, newshape=[585]) /* ty=Tensor[(585), float32] */;
    %175 = reshape(%171, newshape=[2, 192]) /* ty=Tensor[(2, 192), float32] */;
    %176 = reshape(%172, newshape=[2, 192]) /* ty=Tensor[(2, 192), int16] */;
    %177 = @func_3413(%173, %174, %175, %176) /* ty=(Tensor[(12, 14, 2), float32], Tensor[(585), float32], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 192), bool], Tensor[(585), bool], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float64]) */;
    %178 = cast(7.66468f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %179 = %177.1;
    %180 = cast(%179, dtype="float32") /* ty=Tensor[(585), float32] */;
    %181 = cast(%var_4558, dtype="bool") /* ty=Tensor[(195, 3), bool] */;
    %182 = reshape(%178, newshape=[]) /* ty=float32 */;
    %183 = reshape(%180, newshape=[585]) /* ty=Tensor[(585), float32] */;
    %184 = reshape(%181, newshape=[585]) /* ty=Tensor[(585), bool] */;
    %185 = @func_2901(%182, %183, %184) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(585), int64], Tensor[(585), bool], float32) */;
    %186 = cast(%179, dtype="float32") /* ty=Tensor[(585), float32] */;
    %187 = reshape(%186, newshape=[585, 1]) /* ty=Tensor[(585, 1), float32] */;
    %188 = @func_3255(%187) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585, 1), float32]) */;
    %189 = @func_4468() /* ty=(Tensor[(12, 14, 2), bool],) */;
    %190 = cast(%var_4521, dtype="float32") /* ty=Tensor[(55), float32] */;
    %191 = reshape(%190, newshape=[55]) /* ty=Tensor[(55), float32] */;
    %192 = @func_1525(%191) /* ty=(Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 9, 16), bool]) */;
    %193 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 165), float32] */, dtype="float64") /* ty=Tensor[(5, 165), float64] */;
    %194 = exp(%193) /* ty=Tensor[(5, 165), float64] */;
    %195 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 165), float32] */, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
    %196 = shape_of(%194, dtype="int32") /* ty=Tensor[(2), int32] */;
    %197 = cast(%194, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
    %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %199 = multiply(%197, %198) /* ty=Tensor[(5, 165), int16] */;
    %200 = cast(%199, dtype="float64") /* ty=Tensor[(5, 165), float64] */;
    %201 = cast(7.66468f /* ty=float32 */, dtype="float64") /* ty=float64 */;
    %202 = %163.0;
    %203 = @func_90(%166, %167) /* ty=Tensor[(5, 15, 11), float32] */;
    %204 = %168.0;
    %205 = @func_3140() /* ty=Tensor[(12, 14, 2), float64] */;
    %206 = @func_3547() /* ty=Tensor[(12, 14, 2), float64] */;
    %207 = %185.2;
    %208 = %188.3;
    %209 = %189.0;
    %210 = %192.2;
    %211 = divide(%200, %201) /* ty=Tensor[(5, 165), float64] */;
    (%202, %203, %var_4521, %204, %179, %var_4557, %var_4558, %205, %206, %207, %208, %209, %210, %211)
  };
  %212(%var_4642, %var_4643, %var_4644) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(195, 3), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(585), bool], Tensor[(585, 1), float32], Tensor[(12, 14, 2), bool], Tensor[(825), float32], Tensor[(5, 165), float64]) */
}

def @func_3458() -> (Tensor[(12, 14, 2), float64],) {
  %217 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %213 = @func_2029() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %214 = %213.0;
    %215 = cast(%214, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
    %216 = asinh(%215) /* ty=Tensor[(12, 14, 2), float64] */;
    (%216,)
  };
  %217() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_8851(%var_8831: Tensor[(55), float32], %var_8832: Tensor[(48, 8), float32], %var_8837: Tensor[(6, 64), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(55), float32], Tensor[(48, 8), float32], Tensor[(6, 64), int8]) {
  %218 = @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %219 = @func_6716() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %220 = cast(%var_8831, dtype="float32") /* ty=Tensor[(55), float32] */;
  %221 = cast(%var_8832, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
  %222 = reshape(%220, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %223 = reshape(%221, newshape=[6, 64]) /* ty=Tensor[(6, 64), float32] */;
  %224 = @func_7946(%222, %223) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(55), float32], Tensor[(55), float32], Tensor[(12, 14, 2), bool], Tensor[(6, 64), float32]) */;
  %225 = %224.4;
  %226 = cast(%var_8837, dtype="int8") /* ty=Tensor[(6, 64), int8] */;
  %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(2), int32] */;
  %228 = cast(%225, dtype="int8") /* ty=Tensor[(6, 64), int8] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %230 = %218.0;
  %231 = %219.0;
  %232 = right_shift(%228, %229) /* ty=Tensor[(6, 64), int8] */;
  (%230, %231, %var_8831, %var_8832, %232)
}

def @func_6535() -> (Tensor[(12, 14, 2), float64],) {
  %234 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %233 = @func_5085() /* ty=Tensor[(12, 14, 2), float64] */;
    (%233,)
  };
  %234() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_6171(%var_6169: Tensor[(9, 2, 11), float64]) -> (Tensor[(9, 2, 11), float64],) {
  @func_6168(%var_6169) /* ty=(Tensor[(9, 2, 11), float64],) */
}

def @func_5151() -> (Tensor[(12, 14, 2), float64],) {
  %235 = @func_1632() /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */;
  %236 = %235.1;
  (%236,)
}

def @func_630(%var_628: Tensor[(16, 2, 4), float32], %var_629: Tensor[(1, 55), float32]) -> (Tensor[(16, 2, 4), float32], Tensor[(16, 2, 4), float64], Tensor[(9, 13, 5), float32], Tensor[(585, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(1, 55), float32], Tensor[(825), float32]) {
  %253 = fn (%var_560: Tensor[(16, 2, 4), float32], %var_611: Tensor[(1, 55), float32]) -> (Tensor[(16, 2, 4), float32], Tensor[(16, 2, 4), float64], Tensor[(9, 13, 5), float32], Tensor[(585, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(1, 55), float32], Tensor[(825), float32]) {
    %237 = cast(%var_560, dtype="float32") /* ty=Tensor[(16, 2, 4), float32] */;
    %238 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(16, 2, 4), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %239 = cast(meta[relay.Constant][7] /* ty=Tensor[(16, 2, 4), float32] */, dtype="float32") /* ty=Tensor[(16, 2, 4), float32] */;
    %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %241 = cast(%var_560, dtype="float64") /* ty=Tensor[(16, 2, 4), float64] */;
    %242 = cast(meta[relay.Constant][8] /* ty=Tensor[(585, 1), float32] */, dtype="float32") /* ty=Tensor[(585, 1), float32] */;
    %243 = reshape(%242, newshape=[9, 13, 5]) /* ty=Tensor[(9, 13, 5), float32] */;
    %244 = @func_236(%243) /* ty=(Tensor[(9, 13, 5), float32],) */;
    %245 = cast(%var_611, dtype="float32") /* ty=Tensor[(1, 55), float32] */;
    %246 = cast(meta[relay.Constant][9] /* ty=Tensor[(825), float32] */, dtype="float32") /* ty=Tensor[(825), float32] */;
    %247 = reshape(%245, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
    %248 = reshape(%246, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
    %249 = maximum(%239, %240) /* ty=Tensor[(16, 2, 4), float32] */;
    %250 = log(%241) /* ty=Tensor[(16, 2, 4), float64] */;
    %251 = %244.0;
    %252 = @func_90(%247, %248) /* ty=Tensor[(5, 15, 11), float32] */;
    (%249, %250, %251, meta[relay.Constant][8] /* ty=Tensor[(585, 1), float32] */, %252, %var_611, meta[relay.Constant][9] /* ty=Tensor[(825), float32] */)
  };
  %253(%var_628, %var_629) /* ty=(Tensor[(16, 2, 4), float32], Tensor[(16, 2, 4), float64], Tensor[(9, 13, 5), float32], Tensor[(585, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(1, 55), float32], Tensor[(825), float32]) */
}

def @func_6256() -> (Tensor[(12, 14, 2), float64],) {
  %255 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %254 = @func_6236() /* ty=Tensor[(12, 14, 2), float64] */;
    (%254,)
  };
  %255() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_5565() -> Tensor[(12, 14, 2), float64] {
  %256 = fn () -> Tensor[(12, 14, 2), float64] {
    @func_3547() /* ty=Tensor[(12, 14, 2), float64] */
  };
  %256() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_4339() -> (Tensor[(12, 14, 2), float64],) {
  @func_4337() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_1382() -> (Tensor[(12, 14, 2), float64],) {
  %258 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %257 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
    (%257,)
  };
  %258() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_8340() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %259 = @func_5725() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %260 = @func_7158() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %261 = %259.0;
  %262 = %260.0;
  (%261, %262)
}

def @func_7387() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, float32, Tensor[(12, 14, 2), float64]) {
  %276 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, float32, Tensor[(12, 14, 2), float64]) {
    %263 = @func_3779() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %264 = @func_3986() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %265 = @func_6887() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %266 = cast(-6.00893f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %267 = reshape(%266, newshape=[]) /* ty=float32 */;
    %268 = @func_1589(%267) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32]) */;
    %269 = @func_6954() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %270 = @func_4999() /* ty=Tensor[(12, 14, 2), float64] */;
    %271 = %263.0;
    %272 = %264.0;
    %273 = %265.0;
    %274 = %268.2;
    %275 = %269.0;
    (%270, %271, %272, %273, %274, -6.00893f /* ty=float32 */, %275)
  };
  %276() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, float32, Tensor[(12, 14, 2), float64]) */
}

def @func_3437() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %281 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %277 = @func_2357() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %278 = @func_2357() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %279 = %277.0;
    %280 = %278.0;
    (%279, %280)
  };
  %281() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_6492() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_6490() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_1900(%var_1898: Tensor[(585), float32]) -> (Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32], Tensor[(12, 14, 2), float64]) {
  @func_1897(%var_1898) /* ty=(Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32], Tensor[(12, 14, 2), float64]) */
}

def @func_9293(%var_9263: Tensor[(4, 4, 14), float64], %var_9289: float32, %var_9290: Tensor[(585), float32]) -> (Tensor[(4, 4, 14), float64], Tensor[(16, 3, 8), bool], Tensor[(384), float32], Tensor[(12, 14, 2), float64], float32, float32, Tensor[(585), float32]) {
  %282 = cast(%var_9263, dtype="float64") /* ty=Tensor[(4, 4, 14), float64] */;
  %283 = cast(meta[relay.Constant][10] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %284 = cast(meta[relay.Constant][10] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %285 = reshape(%283, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %286 = reshape(%284, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %287 = @func_814(%285, %286) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */;
  %288 = cast(%var_9289, dtype="float32") /* ty=float32 */;
  %289 = cast(%var_9290, dtype="float32") /* ty=Tensor[(585), float32] */;
  %290 = cast(%var_9290, dtype="bool") /* ty=Tensor[(585), bool] */;
  %291 = reshape(%288, newshape=[]) /* ty=float32 */;
  %292 = reshape(%289, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %293 = reshape(%290, newshape=[585]) /* ty=Tensor[(585), bool] */;
  %294 = @func_2901(%291, %292, %293) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(585), int64], Tensor[(585), bool], float32) */;
  %295 = sqrt(%282) /* ty=Tensor[(4, 4, 14), float64] */;
  %296 = %287.1;
  %297 = @func_7708() /* ty=Tensor[(12, 14, 2), float64] */;
  %298 = %294.3;
  (%295, %296, meta[relay.Constant][10] /* ty=Tensor[(384), float32] */, %297, %298, %var_9289, %var_9290)
}

def @func_7823() -> (Tensor[(12, 14, 2), float64],) {
  %300 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %299 = @func_3024() /* ty=Tensor[(12, 14, 2), float64] */;
    (%299,)
  };
  %300() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_8179() -> Tensor[(12, 14, 2), float64] {
  %302 = fn () -> Tensor[(12, 14, 2), float64] {
    %301 = @func_1667() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %301.0
  };
  %302() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_7159() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %309 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %303 = @func_1681() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %304 = @func_1632() /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */;
    %305 = @func_6255() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %306 = %303.0;
    %307 = %304.1;
    %308 = %305.0;
    (%306, %307, %308)
  };
  %309() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_6955() -> (Tensor[(12, 14, 2), float64],) {
  %311 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %310 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
    (%310,)
  };
  %311() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_3764() -> Tensor[(12, 14, 2), float64] {
  @func_3762() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_8791() -> Tensor[(12, 14, 2), float64] {
  %312 = fn () -> Tensor[(12, 14, 2), float64] {
    @func_7283() /* ty=Tensor[(12, 14, 2), float64] */
  };
  %312() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_9359(%var_9339: Tensor[(1120), uint16], %var_9340: Tensor[(384), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(6, 64), float32], Tensor[(1120), uint16], Tensor[(384), float32]) {
  %313 = @func_3582() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %314 = cast(%var_9339, dtype="uint16") /* ty=Tensor[(1120), uint16] */;
  %315 = cast(%var_9340, dtype="float32") /* ty=Tensor[(384), float32] */;
  %316 = reshape(%314, newshape=[56, 20]) /* ty=Tensor[(56, 20), uint16] */;
  %317 = reshape(%315, newshape=[6, 64]) /* ty=Tensor[(6, 64), float32] */;
  %318 = @func_6743(%316, %317) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(10, 16, 7), uint16], Tensor[(56, 20), uint16], Tensor[(585), bool], Tensor[(1, 55), float32], Tensor[(6, 64), float32], Tensor[(585), float32]) */;
  %319 = %313.1;
  %320 = %318.5;
  (%319, %320, %var_9339, %var_9340)
}

def @func_6628() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %324 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %321 = @func_3779() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %322 = @func_3922() /* ty=Tensor[(12, 14, 2), float64] */;
    %323 = %321.0;
    (%322, %323)
  };
  %324() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_9298(%var_9295: Tensor[(4, 4, 14), float64], %var_9296: float32, %var_9297: Tensor[(585), float32]) -> (Tensor[(4, 4, 14), float64], Tensor[(16, 3, 8), bool], Tensor[(384), float32], Tensor[(12, 14, 2), float64], float32, float32, Tensor[(585), float32]) {
  @func_9293(%var_9295, %var_9296, %var_9297) /* ty=(Tensor[(4, 4, 14), float64], Tensor[(16, 3, 8), bool], Tensor[(384), float32], Tensor[(12, 14, 2), float64], float32, float32, Tensor[(585), float32]) */
}

def @func_8615() -> Tensor[(12, 14, 2), float64] {
  @func_3547() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_1216() -> Tensor[(12, 14, 2), float64] {
  %325 = fn () -> Tensor[(12, 14, 2), float64] {
    @func_741() /* ty=Tensor[(12, 14, 2), float64] */
  };
  %325() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_1046() -> (Tensor[(12, 14, 2), float64],) {
  @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_7774(%var_7770: Tensor[(1, 3, 2), float64], %var_7771: Tensor[(198), float64], %var_7772: Tensor[(350), int8], %var_7773: Tensor[(585, 1), float32]) -> (Tensor[(1, 3, 2), float64], Tensor[(9, 2, 11), float64], Tensor[(12, 14, 2), float64], Tensor[(198), float64], Tensor[(10, 7, 5), int8], Tensor[(350), int8], Tensor[(585, 1), float32], Tensor[(12, 14, 2), float64]) {
  @func_7768(%var_7770, %var_7771, %var_7772, %var_7773) /* ty=(Tensor[(1, 3, 2), float64], Tensor[(9, 2, 11), float64], Tensor[(12, 14, 2), float64], Tensor[(198), float64], Tensor[(10, 7, 5), int8], Tensor[(350), int8], Tensor[(585, 1), float32], Tensor[(12, 14, 2), float64]) */
}

def @func_90(%var_71: Tensor[(5, 1, 11), float32], %var_72: Tensor[(5, 15, 11), float32]) -> Tensor[(5, 15, 11), float32] {
  %326 = cast(%var_71, dtype="float32") /* ty=Tensor[(5, 1, 11), float32] */;
  %327 = cast(%var_72, dtype="float32") /* ty=Tensor[(5, 15, 11), float32] */;
  power(%326, %327) /* ty=Tensor[(5, 15, 11), float32] */
}

def @func_2777(%var_2775: Tensor[(585), float32]) -> (Tensor[(4, 4, 8), float64], Tensor[(12, 14, 2), float64], Tensor[(10, 7, 5), int8], Tensor[(350), int8], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 2, 11), float32], Tensor[(66, 1), float32]) {
  @func_2774(%var_2775) /* ty=(Tensor[(4, 4, 8), float64], Tensor[(12, 14, 2), float64], Tensor[(10, 7, 5), int8], Tensor[(350), int8], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 2, 11), float32], Tensor[(66, 1), float32]) */
}

def @func_4706(%var_4704: Tensor[(14, 13, 1), uint32], %var_4705: Tensor[(14, 13, 11), uint32]) -> Tensor[(14, 13, 11), uint32] {
  @func_4702(%var_4704, %var_4705) /* ty=Tensor[(14, 13, 11), uint32] */
}

def @func_6887() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %328 = @func_5564() /* ty=Tensor[(12, 14, 2), float64] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %330 = reshape(%329, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float64] */;
  %331 = @func_4678(%330) /* ty=(Tensor[(12, 14, 2), float64],) */;
  %332 = @func_3582() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %333 = %331.0;
  %334 = %332.1;
  (%328, %333, %334)
}

def @func_6031(%var_6029: Tensor[(24, 16), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(1, 12, 1), float64], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(24, 16), float32]) {
  @func_6028(%var_6029) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(1, 12, 1), float64], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(24, 16), float32]) */
}

def @func_8710() -> (Tensor[(12, 14, 2), float64], Tensor[(198), float64], Tensor[(3, 2), float64], Tensor[(198), float64], Tensor[(5, 70), int8], Tensor[(585), float32], Tensor[(66, 1), float32], Tensor[(12, 14, 2), uint64], Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32]) {
  @func_8708() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(198), float64], Tensor[(3, 2), float64], Tensor[(198), float64], Tensor[(5, 70), int8], Tensor[(585), float32], Tensor[(66, 1), float32], Tensor[(12, 14, 2), uint64], Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32]) */
}

def @func_4074(%var_4009: Tensor[(8, 10, 13), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(8, 10, 13), bool], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %335 = @func_1681() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %336 = cast(%var_4009, dtype="float32") /* ty=Tensor[(8, 10, 13), float32] */;
  %337 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(8, 10, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 10, 13), float32] */, dtype="float32") /* ty=Tensor[(8, 10, 13), float32] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %340 = floor_divide(%338, %339) /* ty=Tensor[(8, 10, 13), float32] */;
  %341 = cast(meta[relay.Constant][11] /* ty=Tensor[(8, 10, 13), float32] */, dtype="bool") /* ty=Tensor[(8, 10, 13), bool] */;
  %342 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%340, dtype="bool") /* ty=Tensor[(8, 10, 13), bool] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %345 = @func_2628() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %346 = @func_3126() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %347 = %335.0;
  %348 = equal(%343, %344) /* ty=Tensor[(8, 10, 13), bool] */;
  %349 = %345.0;
  %350 = %346.0;
  (%347, %348, %349, %350)
}

def @func_6801() -> (Tensor[(12, 14, 2), float64],) {
  %353 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %351 = @func_3436() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %352 = %351.0;
    (%352,)
  };
  %353() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_6934() -> (Tensor[(12, 14, 2), float64],) {
  %354 = @func_4432() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %355 = %354.0;
  (%355,)
}

def @func_2774(%var_2751: Tensor[(585), float32]) -> (Tensor[(4, 4, 8), float64], Tensor[(12, 14, 2), float64], Tensor[(10, 7, 5), int8], Tensor[(350), int8], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 2, 11), float32], Tensor[(66, 1), float32]) {
  %356 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 4, 8), float64] */, dtype="float64") /* ty=Tensor[(4, 4, 8), float64] */;
  %357 = @func_1852() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %358 = cast(meta[relay.Constant][13] /* ty=Tensor[(350), int8] */, dtype="int8") /* ty=Tensor[(350), int8] */;
  %359 = cast(%var_2751, dtype="float32") /* ty=Tensor[(585), float32] */;
  %360 = reshape(%358, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), int8] */;
  %361 = reshape(%359, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %362 = @func_1440(%360, %361) /* ty=(Tensor[(10, 7, 5), int8], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
  %363 = @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %364 = cast(meta[relay.Constant][14] /* ty=Tensor[(66, 1), float32] */, dtype="float32") /* ty=Tensor[(66, 1), float32] */;
  %365 = reshape(%364, newshape=[3, 2, 11]) /* ty=Tensor[(3, 2, 11), float32] */;
  %366 = sin(%356) /* ty=Tensor[(4, 4, 8), float64] */;
  %367 = %357.0;
  %368 = %362.0;
  %369 = %363.0;
  %370 = @func_1611(%365) /* ty=Tensor[(3, 2, 11), float32] */;
  (%366, %367, %368, meta[relay.Constant][13] /* ty=Tensor[(350), int8] */, %var_2751, %369, %370, meta[relay.Constant][14] /* ty=Tensor[(66, 1), float32] */)
}

def @func_2906(%var_2903: float32, %var_2904: Tensor[(585), float32], %var_2905: Tensor[(585), bool]) -> (Tensor[(12, 14, 2), float64], Tensor[(585), int64], Tensor[(585), bool], float32) {
  @func_2901(%var_2903, %var_2904, %var_2905) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(585), int64], Tensor[(585), bool], float32) */
}

def @func_5064() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_5062() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_7950(%var_7948: Tensor[(55), float32], %var_7949: Tensor[(6, 64), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(55), float32], Tensor[(55), float32], Tensor[(12, 14, 2), bool], Tensor[(6, 64), float32]) {
  @func_7946(%var_7948, %var_7949) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(55), float32], Tensor[(55), float32], Tensor[(12, 14, 2), bool], Tensor[(6, 64), float32]) */
}

def @func_8201() -> (Tensor[(12, 14, 2), float64],) {
  @func_8199() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_8817(%var_8816: Tensor[(55), float32]) -> (float32, Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(55), float32]) {
  %379 = fn (%var_8807: Tensor[(55), float32]) -> (float32, Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(55), float32]) {
    %371 = @func_7386() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, float32, Tensor[(12, 14, 2), float64]) */;
    %372 = cast(meta[relay.Constant][15] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
    %373 = cast(%var_8807, dtype="float32") /* ty=Tensor[(55), float32] */;
    %374 = reshape(%372, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float32] */;
    %375 = reshape(%373, newshape=[1, 55]) /* ty=Tensor[(1, 55), float32] */;
    %376 = @func_627(%374, %375) /* ty=(Tensor[(16, 2, 4), float32], Tensor[(16, 2, 4), float64], Tensor[(9, 13, 5), float32], Tensor[(585, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(1, 55), float32], Tensor[(825), float32]) */;
    %377 = %371.4;
    %378 = %376.4;
    (%377, %378, meta[relay.Constant][15] /* ty=Tensor[(128), float32] */, %var_8807)
  };
  %379(%var_8816) /* ty=(float32, Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(55), float32]) */
}

def @func_9322(%var_9321: int16) -> (Tensor[(6, 11, 13), int16],) {
  %383 = fn (%var_9305: int16) -> (Tensor[(6, 11, 13), int16],) {
    %380 = cast(%var_9305, dtype="int16") /* ty=int16 */;
    %381 = cast(meta[relay.Constant][16] /* ty=Tensor[(6, 11, 13), int16] */, dtype="int16") /* ty=Tensor[(6, 11, 13), int16] */;
    %382 = bitwise_or(%380, %381) /* ty=Tensor[(6, 11, 13), int16] */;
    (%382,)
  };
  %383(%var_9321) /* ty=(Tensor[(6, 11, 13), int16],) */
}

def @func_3547() -> Tensor[(12, 14, 2), float64] {
  %384 = @func_1088() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %384.0
}

def @func_814(%var_781: Tensor[(16, 3, 8), float32], %var_787: Tensor[(16, 3, 8), float32]) -> (Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) {
  %385 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 3, 8), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 8), float32] */;
  %386 = shape_of(%var_781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %387 = cast(%var_781, dtype="float32") /* ty=Tensor[(16, 3, 8), float32] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %389 = floor_mod(%387, %388) /* ty=Tensor[(16, 3, 8), float32] */;
  %390 = cast(%var_787, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
  %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%389, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %394 = cast(%var_781, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
  %395 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%389, dtype="bool") /* ty=Tensor[(16, 3, 8), bool] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %398 = not_equal(%392, %393) /* ty=Tensor[(16, 3, 8), bool] */;
  %399 = greater(%396, %397) /* ty=Tensor[(16, 3, 8), bool] */;
  %400 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  (%398, %399, %400)
}

def @func_7676() -> (Tensor[(12, 14, 2), float64],) {
  %402 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %401 = @func_6606() /* ty=Tensor[(12, 14, 2), float64] */;
    (%401,)
  };
  %402() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_6103() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_8708() -> (Tensor[(12, 14, 2), float64], Tensor[(198), float64], Tensor[(3, 2), float64], Tensor[(198), float64], Tensor[(5, 70), int8], Tensor[(585), float32], Tensor[(66, 1), float32], Tensor[(12, 14, 2), uint64], Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32]) {
  %403 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %404 = cast(meta[relay.Constant][18] /* ty=Tensor[(3, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 2), float64] */;
  %405 = cast(meta[relay.Constant][19] /* ty=Tensor[(198), float64] */, dtype="float64") /* ty=Tensor[(198), float64] */;
  %406 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 70), int8] */, dtype="int8") /* ty=Tensor[(5, 70), int8] */;
  %407 = cast(meta[relay.Constant][21] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %408 = reshape(%404, newshape=[1, 3, 2]) /* ty=Tensor[(1, 3, 2), float64] */;
  %409 = reshape(%405, newshape=[198]) /* ty=Tensor[(198), float64] */;
  %410 = reshape(%406, newshape=[350]) /* ty=Tensor[(350), int8] */;
  %411 = reshape(%407, newshape=[585, 1]) /* ty=Tensor[(585, 1), float32] */;
  %412 = @func_7768(%408, %409, %410, %411) /* ty=(Tensor[(1, 3, 2), float64], Tensor[(9, 2, 11), float64], Tensor[(12, 14, 2), float64], Tensor[(198), float64], Tensor[(10, 7, 5), int8], Tensor[(350), int8], Tensor[(585, 1), float32], Tensor[(12, 14, 2), float64]) */;
  %413 = cast(meta[relay.Constant][21] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %414 = reshape(%413, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %415 = @func_2774(%414) /* ty=(Tensor[(4, 4, 8), float64], Tensor[(12, 14, 2), float64], Tensor[(10, 7, 5), int8], Tensor[(350), int8], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 2, 11), float32], Tensor[(66, 1), float32]) */;
  %416 = @func_3762() /* ty=Tensor[(12, 14, 2), float64] */;
  %417 = @func_4999() /* ty=Tensor[(12, 14, 2), float64] */;
  %418 = cast(%417, dtype="uint64") /* ty=Tensor[(12, 14, 2), uint64] */;
  %419 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%416, dtype="uint64") /* ty=Tensor[(12, 14, 2), uint64] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %422 = cast(%417, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %423 = cast(meta[relay.Constant][21] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %424 = reshape(%423, newshape=[9, 13, 5]) /* ty=Tensor[(9, 13, 5), float32] */;
  %425 = @func_236(%424) /* ty=(Tensor[(9, 13, 5), float32],) */;
  %426 = %403.1;
  %427 = %412.3;
  %428 = %415.7;
  %429 = multiply(%420, %421) /* ty=Tensor[(12, 14, 2), uint64] */;
  %430 = sinh(%422) /* ty=Tensor[(12, 14, 2), float64] */;
  %431 = %425.0;
  (%426, %427, meta[relay.Constant][18] /* ty=Tensor[(3, 2), float64] */, meta[relay.Constant][19] /* ty=Tensor[(198), float64] */, meta[relay.Constant][20] /* ty=Tensor[(5, 70), int8] */, meta[relay.Constant][21] /* ty=Tensor[(585), float32] */, %428, %429, %430, %431)
}

def @main(%var_9389: Tensor[(6, 11, 8), float64], %var_9393: Tensor[(6, 11, 8), float64], %var_9405: Tensor[(585), float32]) -> (Tensor[(585, 1), float32], Tensor[(585), float32], Tensor[(6, 11, 8), float32]) {
  %432 = cast(%var_9405, dtype="float32") /* ty=Tensor[(585), float32] */;
  %433 = reshape(%432, newshape=[585, 1]) /* ty=Tensor[(585, 1), float32] */;
  %434 = @func_3257(%433) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585, 1), float32]) */;
  %435 = cast(%var_9389, dtype="float64") /* ty=Tensor[(6, 11, 8), float64] */;
  %436 = asin(%435) /* ty=Tensor[(6, 11, 8), float64] */;
  %437 = cast(%var_9393, dtype="uint8") /* ty=Tensor[(6, 11, 8), uint8] */;
  %438 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%436, dtype="uint8") /* ty=Tensor[(6, 11, 8), uint8] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %441 = multiply(%439, %440) /* ty=Tensor[(6, 11, 8), uint8] */;
  %442 = cast(%441, dtype="float32") /* ty=Tensor[(6, 11, 8), float32] */;
  %443 = shape_of(%var_9389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%var_9389, dtype="float32") /* ty=Tensor[(6, 11, 8), float32] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %446 = %434.3;
  %447 = floor_mod(%444, %445) /* ty=Tensor[(6, 11, 8), float32] */;
  (%446, %var_9405, %447)
}

def @func_1745(%var_1742: Tensor[(12, 14, 2), float64], %var_1743: float32, %var_1744: Tensor[(585), float32]) -> (Tensor[(12, 14, 2), int8], float32, float32, Tensor[(13, 13, 11), float64], Tensor[(585), float32]) {
  %465 = fn (%var_1704: Tensor[(12, 14, 2), float64], %var_1721: float32, %var_1733: Tensor[(585), float32]) -> (Tensor[(12, 14, 2), int8], float32, float32, Tensor[(13, 13, 11), float64], Tensor[(585), float32]) {
    %448 = @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %449 = %448.0;
    %450 = cast(%var_1704, dtype="int8") /* ty=Tensor[(12, 14, 2), int8] */;
    %451 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
    %452 = cast(%449, dtype="int8") /* ty=Tensor[(12, 14, 2), int8] */;
    %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %454 = cast(%var_1721, dtype="float32") /* ty=float32 */;
    %455 = reshape(%454, newshape=[]) /* ty=float32 */;
    %456 = @func_1589(%455) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32]) */;
    %457 = %456.2;
    %458 = cast(%457, dtype="float32") /* ty=float32 */;
    %459 = cast(%var_1733, dtype="float32") /* ty=Tensor[(585), float32] */;
    %460 = reshape(%458, newshape=[]) /* ty=float32 */;
    %461 = reshape(%459, newshape=[585]) /* ty=Tensor[(585), float32] */;
    %462 = @func_943(%460, %461) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) */;
    %463 = minimum(%452, %453) /* ty=Tensor[(12, 14, 2), int8] */;
    %464 = %462.4;
    (%463, %457, %var_1721, %464, %var_1733)
  };
  %465(%var_1742, %var_1743, %var_1744) /* ty=(Tensor[(12, 14, 2), int8], float32, float32, Tensor[(13, 13, 11), float64], Tensor[(585), float32]) */
}

def @func_1930() -> (Tensor[(12, 14, 2), float64],) {
  %468 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %466 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %467 = %466.0;
    (%467,)
  };
  %468() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_8097() -> (Tensor[(12, 14, 2), float64],) {
  %470 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %469 = @func_7708() /* ty=Tensor[(12, 14, 2), float64] */;
    (%469,)
  };
  %470() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_3722(%var_3719: Tensor[(2, 1, 11), int16], %var_3720: Tensor[(2, 13, 11), int16], %var_3721: Tensor[(1, 66), float32]) -> (Tensor[(2, 13, 11), uint16], Tensor[(3, 2, 11), float32], Tensor[(1, 66), float32], Tensor[(2, 13, 11), float64], Tensor[(2, 1, 11), float32]) {
  %486 = fn (%var_3643: Tensor[(2, 1, 11), int16], %var_3644: Tensor[(2, 13, 11), int16], %var_3698: Tensor[(1, 66), float32]) -> (Tensor[(2, 13, 11), uint16], Tensor[(3, 2, 11), float32], Tensor[(1, 66), float32], Tensor[(2, 13, 11), float64], Tensor[(2, 1, 11), float32]) {
    %471 = cast(%var_3643, dtype="int16") /* ty=Tensor[(2, 1, 11), int16] */;
    %472 = cast(%var_3644, dtype="int16") /* ty=Tensor[(2, 13, 11), int16] */;
    %473 = logical_xor(%471, %472) /* ty=Tensor[(2, 13, 11), int16] */;
    %474 = cast(%var_3643, dtype="uint16") /* ty=Tensor[(2, 1, 11), uint16] */;
    %475 = cast(%473, dtype="uint16") /* ty=Tensor[(2, 13, 11), uint16] */;
    %476 = cast(%var_3698, dtype="float32") /* ty=Tensor[(1, 66), float32] */;
    %477 = reshape(%476, newshape=[3, 2, 11]) /* ty=Tensor[(3, 2, 11), float32] */;
    %478 = cast(%473, dtype="float32") /* ty=Tensor[(2, 13, 11), float32] */;
    %479 = asinh(%478) /* ty=Tensor[(2, 13, 11), float32] */;
    %480 = cast(%479, dtype="float64") /* ty=Tensor[(2, 13, 11), float64] */;
    %481 = cast(%var_3643, dtype="float32") /* ty=Tensor[(2, 1, 11), float32] */;
    %482 = left_shift(%474, %475) /* ty=Tensor[(2, 13, 11), uint16] */;
    %483 = @func_1611(%477) /* ty=Tensor[(3, 2, 11), float32] */;
    %484 = sinh(%480) /* ty=Tensor[(2, 13, 11), float64] */;
    %485 = cosh(%481) /* ty=Tensor[(2, 1, 11), float32] */;
    (%482, %483, %var_3698, %484, %485)
  };
  %486(%var_3719, %var_3720, %var_3721) /* ty=(Tensor[(2, 13, 11), uint16], Tensor[(3, 2, 11), float32], Tensor[(1, 66), float32], Tensor[(2, 13, 11), float64], Tensor[(2, 1, 11), float32]) */
}

def @func_9072() -> (Tensor[(12, 14, 2), float64],) {
  @func_9070() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_2136() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %487 = @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %488 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  %489 = %487.0;
  (%488, %489)
}

def @func_3168() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %493 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %490 = @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %491 = %490.1;
    %492 = @func_3024() /* ty=Tensor[(12, 14, 2), float64] */;
    (%491, %492)
  };
  %493() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_6236() -> Tensor[(12, 14, 2), float64] {
  %494 = @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %494.1
}

def @func_1854() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_1852() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_5404() -> Tensor[(12, 14, 2), bool] {
  %495 = fn () -> Tensor[(12, 14, 2), bool] {
    @func_4404() /* ty=Tensor[(12, 14, 2), bool] */
  };
  %495() /* ty=Tensor[(12, 14, 2), bool] */
}

def @func_4077(%var_4075: Tensor[(8, 10, 13), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(8, 10, 13), bool], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_4074(%var_4075) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(8, 10, 13), bool], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_6383() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %500 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %496 = @func_3167() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %497 = @func_5739() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %498 = %496.0;
    %499 = %497.0;
    (%498, %499)
  };
  %500() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_3924() -> Tensor[(12, 14, 2), float64] {
  @func_3922() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_5525(%var_5523: Tensor[(2, 64), float32], %var_5524: Tensor[(384), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(11, 5), float32], Tensor[(48, 8), float32], Tensor[(384), float32], Tensor[(2, 64), int64], Tensor[(12, 14, 2), float64]) {
  @func_5521(%var_5523, %var_5524) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(11, 5), float32], Tensor[(48, 8), float32], Tensor[(384), float32], Tensor[(2, 64), int64], Tensor[(12, 14, 2), float64]) */
}

def @func_4109() -> (Tensor[(12, 14, 2), float64],) {
  %503 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %501 = @func_3779() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %502 = %501.0;
    (%502,)
  };
  %503() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_1306(%var_1304: Tensor[(48, 8), float32], %var_1305: Tensor[(55), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(48, 8), float32], Tensor[(5, 15, 11), float32], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), bool], Tensor[(5, 15, 11), float32], Tensor[(55), float32]) {
  @func_1302(%var_1304, %var_1305) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(48, 8), float32], Tensor[(5, 15, 11), float32], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), bool], Tensor[(5, 15, 11), float32], Tensor[(55), float32]) */
}

def @func_3780() -> (Tensor[(12, 14, 2), float64],) {
  %506 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %504 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %505 = %504.0;
    (%505,)
  };
  %506() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_4337() -> (Tensor[(12, 14, 2), float64],) {
  %507 = @func_3079() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %508 = %507.0;
  (%508,)
}

def @func_2184() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_5739() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %509 = @func_3582() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %510 = @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %511 = %509.0;
  %512 = %510.0;
  (%511, %512)
}

def @func_4135(%var_4134: Tensor[(384), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(585), float32]) {
  %525 = fn (%var_4126: Tensor[(384), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(585), float32]) {
    %513 = @func_1206() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %514 = cast(%var_4126, dtype="float32") /* ty=Tensor[(384), float32] */;
    %515 = cast(meta[relay.Constant][22] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
    %516 = cast(%var_4126, dtype="float32") /* ty=Tensor[(384), float32] */;
    %517 = cast(%var_4126, dtype="int16") /* ty=Tensor[(384), int16] */;
    %518 = reshape(%514, newshape=[2, 192]) /* ty=Tensor[(2, 192), float32] */;
    %519 = reshape(%515, newshape=[585]) /* ty=Tensor[(585), float32] */;
    %520 = reshape(%516, newshape=[2, 192]) /* ty=Tensor[(2, 192), float32] */;
    %521 = reshape(%517, newshape=[2, 192]) /* ty=Tensor[(2, 192), int16] */;
    %522 = @func_3413(%518, %519, %520, %521) /* ty=(Tensor[(12, 14, 2), float32], Tensor[(585), float32], Tensor[(585), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 192), bool], Tensor[(585), bool], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float64]) */;
    %523 = %513.0;
    %524 = %522.2;
    (%523, %524, %var_4126, meta[relay.Constant][22] /* ty=Tensor[(585), float32] */)
  };
  %525(%var_4134) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(585), float32]) */
}

def @func_1370() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %530 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %526 = @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %527 = @func_1206() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %528 = %526.0;
    %529 = %527.0;
    (%528, %529)
  };
  %530() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_4405() -> Tensor[(12, 14, 2), bool] {
  %539 = fn () -> Tensor[(12, 14, 2), bool] {
    %531 = @func_1632() /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */;
    %532 = %531.1;
    %533 = @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %534 = %533.0;
    %535 = cast(%534, dtype="bool") /* ty=Tensor[(12, 14, 2), bool] */;
    %536 = shape_of(%532, dtype="int32") /* ty=Tensor[(3), int32] */;
    %537 = cast(%532, dtype="bool") /* ty=Tensor[(12, 14, 2), bool] */;
    %538 = dyn.reshape(%535, %536, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%537, %538) /* ty=Tensor[(12, 14, 2), bool] */
  };
  %539() /* ty=Tensor[(12, 14, 2), bool] */
}

def @func_6985() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %544 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %540 = @func_1088() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %541 = @func_6534() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %542 = %540.0;
    %543 = %541.0;
    (%542, %543)
  };
  %544() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_5725() -> (Tensor[(12, 14, 2), float64],) {
  %545 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
  (%545,)
}

def @func_3080() -> (Tensor[(12, 14, 2), float64],) {
  %548 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %546 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %547 = %546.1;
    (%547,)
  };
  %548() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_3025() -> Tensor[(12, 14, 2), float64] {
  %550 = fn () -> Tensor[(12, 14, 2), float64] {
    %549 = @func_1852() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %549.1
  };
  %550() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_2359() -> (Tensor[(12, 14, 2), float64],) {
  @func_2357() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_3010() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %555 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %551 = @func_1667() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %552 = @func_2628() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %553 = %551.2;
    %554 = %552.0;
    (%553, %554)
  };
  %555() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_2357() -> (Tensor[(12, 14, 2), float64],) {
  %556 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %557 = %556.0;
  (%557,)
}

def @func_3526(%var_3524: Tensor[(7, 10, 10), float64]) -> (Tensor[(7, 10, 10), float64], Tensor[(7, 10, 10), float64]) {
  @func_3523(%var_3524) /* ty=(Tensor[(7, 10, 10), float64], Tensor[(7, 10, 10), float64]) */
}

def @func_3523(%var_3518: Tensor[(7, 10, 10), float64]) -> (Tensor[(7, 10, 10), float64], Tensor[(7, 10, 10), float64]) {
  %558 = cast(%var_3518, dtype="float64") /* ty=Tensor[(7, 10, 10), float64] */;
  %559 = cast(%var_3518, dtype="float64") /* ty=Tensor[(7, 10, 10), float64] */;
  %560 = erf(%558) /* ty=Tensor[(7, 10, 10), float64] */;
  %561 = log10(%559) /* ty=Tensor[(7, 10, 10), float64] */;
  (%560, %561)
}

def @func_8143(%var_8141: Tensor[(5, 15, 14), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(5, 15, 14), bool]) {
  @func_8140(%var_8141) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(5, 15, 14), bool]) */
}

def @func_7604() -> Tensor[(12, 14, 2), float64] {
  @func_7602() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_1525(%var_1500: Tensor[(55), float32]) -> (Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 9, 16), bool]) {
  %562 = cast(%var_1500, dtype="float32") /* ty=Tensor[(55), float32] */;
  %563 = cast(meta[relay.Constant][23] /* ty=Tensor[(825), float32] */, dtype="float32") /* ty=Tensor[(825), float32] */;
  %564 = reshape(%562, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
  %565 = reshape(%563, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
  %566 = @func_1088() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %567 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 1, 16), int8] */, dtype="int8") /* ty=Tensor[(3, 1, 16), int8] */;
  %568 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 9, 16), int8] */, dtype="int8") /* ty=Tensor[(3, 9, 16), int8] */;
  %569 = subtract(%567, %568) /* ty=Tensor[(3, 9, 16), int8] */;
  %570 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 1, 16), int8] */, dtype="bool") /* ty=Tensor[(3, 1, 16), bool] */;
  %571 = cast(%569, dtype="bool") /* ty=Tensor[(3, 9, 16), bool] */;
  %572 = @func_90(%564, %565) /* ty=Tensor[(5, 15, 11), float32] */;
  %573 = %566.0;
  %574 = less_equal(%570, %571) /* ty=Tensor[(3, 9, 16), bool] */;
  (%572, %var_1500, meta[relay.Constant][23] /* ty=Tensor[(825), float32] */, %573, %574)
}

def @func_5741() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_5739() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_8140(%var_8135: Tensor[(5, 15, 14), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(5, 15, 14), bool]) {
  %575 = @func_8042() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(5, 15, 1), float32]) */;
  %576 = %575.1;
  %577 = cast(%576, dtype="bool") /* ty=Tensor[(5, 15, 1), bool] */;
  %578 = cast(%var_8135, dtype="bool") /* ty=Tensor[(5, 15, 14), bool] */;
  %579 = @func_4999() /* ty=Tensor[(12, 14, 2), float64] */;
  %580 = less(%577, %578) /* ty=Tensor[(5, 15, 14), bool] */;
  (%579, %580)
}

def @func_7056() -> (Tensor[(2, 192), float32], Tensor[(12, 14, 2), float64]) {
  @func_7054() /* ty=(Tensor[(2, 192), float32], Tensor[(12, 14, 2), float64]) */
}

def @func_8044() -> (Tensor[(5, 15, 1), float32], Tensor[(5, 15, 1), float32]) {
  @func_8042() /* ty=(Tensor[(5, 15, 1), float32], Tensor[(5, 15, 1), float32]) */
}

def @func_8293() -> Tensor[(12, 14, 2), float64] {
  %581 = fn () -> Tensor[(12, 14, 2), float64] {
    @func_8178() /* ty=Tensor[(12, 14, 2), float64] */
  };
  %581() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_6490() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %582 = @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %583 = @func_6286() /* ty=Tensor[(12, 14, 2), float64] */;
  %584 = %582.1;
  (%583, %584)
}

def @func_7768(%var_7710: Tensor[(1, 3, 2), float64], %var_7719: Tensor[(198), float64], %var_7741: Tensor[(350), int8], %var_7742: Tensor[(585, 1), float32]) -> (Tensor[(1, 3, 2), float64], Tensor[(9, 2, 11), float64], Tensor[(12, 14, 2), float64], Tensor[(198), float64], Tensor[(10, 7, 5), int8], Tensor[(350), int8], Tensor[(585, 1), float32], Tensor[(12, 14, 2), float64]) {
  %585 = cast(%var_7710, dtype="float64") /* ty=Tensor[(1, 3, 2), float64] */;
  %586 = cast(%var_7719, dtype="float64") /* ty=Tensor[(198), float64] */;
  %587 = reshape(%586, newshape=[9, 2, 11]) /* ty=Tensor[(9, 2, 11), float64] */;
  %588 = @func_6168(%587) /* ty=(Tensor[(9, 2, 11), float64],) */;
  %589 = cast(%var_7719, dtype="float64") /* ty=Tensor[(198), float64] */;
  %590 = cast(%var_7741, dtype="int8") /* ty=Tensor[(350), int8] */;
  %591 = cast(%var_7742, dtype="float32") /* ty=Tensor[(585, 1), float32] */;
  %592 = reshape(%590, newshape=[10, 7, 5]) /* ty=Tensor[(10, 7, 5), int8] */;
  %593 = reshape(%591, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %594 = @func_1440(%592, %593) /* ty=(Tensor[(10, 7, 5), int8], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
  %595 = @func_4752() /* ty=Tensor[(12, 14, 2), float64] */;
  %596 = cast(%595, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %597 = reshape(%596, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float64] */;
  %598 = @func_4678(%597) /* ty=(Tensor[(12, 14, 2), float64],) */;
  %599 = cos(%585) /* ty=Tensor[(1, 3, 2), float64] */;
  %600 = %588.0;
  %601 = sinh(%589) /* ty=Tensor[(198), float64] */;
  %602 = %594.0;
  %603 = %598.0;
  (%599, %600, %595, %601, %602, %var_7741, %var_7742, %603)
}

def @func_8342() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_8340() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_5909() -> (Tensor[(12, 14, 2), float64],) {
  @func_5907() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_7285() -> Tensor[(12, 14, 2), float64] {
  @func_7283() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_5268() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %604 = @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %605 = @func_4752() /* ty=Tensor[(12, 14, 2), float64] */;
  %606 = %604.1;
  (%605, %606)
}

def @func_2901(%var_2822: float32, %var_2823: Tensor[(585), float32], %var_2875: Tensor[(585), bool]) -> (Tensor[(12, 14, 2), float64], Tensor[(585), int64], Tensor[(585), bool], float32) {
  %607 = @func_1369() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %608 = cast(%var_2822, dtype="float32") /* ty=float32 */;
  %609 = reshape(%608, newshape=[]) /* ty=float32 */;
  %610 = @func_1589(%609) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32]) */;
  %611 = %610.3;
  %612 = cast(%var_2823, dtype="int16") /* ty=Tensor[(585), int16] */;
  %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(1), int32] */;
  %614 = cast(%611, dtype="int16") /* ty=Tensor[(585), int16] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?), int16] */;
  %616 = bitwise_or(%614, %615) /* ty=Tensor[(585), int16] */;
  %617 = cast(%616, dtype="float64") /* ty=Tensor[(585), float64] */;
  %618 = sqrt(%617) /* ty=Tensor[(585), float64] */;
  %619 = cast(%var_2823, dtype="bool") /* ty=Tensor[(585), bool] */;
  %620 = shape_of(%618, dtype="int32") /* ty=Tensor[(1), int32] */;
  %621 = cast(%618, dtype="bool") /* ty=Tensor[(585), bool] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?), bool] */;
  %623 = greater_equal(%621, %622) /* ty=Tensor[(585), bool] */;
  %624 = cast(%var_2875, dtype="int64") /* ty=Tensor[(585), int64] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(1), int32] */;
  %626 = cast(%623, dtype="int64") /* ty=Tensor[(585), int64] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?), int64] */;
  %628 = cast(%var_2822, dtype="float32") /* ty=float32 */;
  %629 = cast(%var_2823, dtype="float32") /* ty=Tensor[(585), float32] */;
  %630 = reshape(%628, newshape=[]) /* ty=float32 */;
  %631 = reshape(%629, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %632 = @func_943(%630, %631) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) */;
  %633 = %632.3;
  %634 = cast(%var_2822, dtype="uint8") /* ty=uint8 */;
  %635 = cast(%633, dtype="uint8") /* ty=Tensor[(9, 13, 5), uint8] */;
  %636 = subtract(%634, %635) /* ty=Tensor[(9, 13, 5), uint8] */;
  %637 = cast(%636, dtype="bool") /* ty=Tensor[(9, 13, 5), bool] */;
  %638 = shape_of(%616, dtype="int32") /* ty=Tensor[(1), int32] */;
  %639 = cast(%616, dtype="bool") /* ty=Tensor[(585), bool] */;
  %640 = dyn.reshape(%637, %638, newshape=[]) /* ty=Tensor[(?), bool] */;
  %641 = cast(%var_2823, dtype="float32") /* ty=Tensor[(585), float32] */;
  %642 = reshape(%641, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %643 = @func_1897(%642) /* ty=(Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32], Tensor[(12, 14, 2), float64]) */;
  %644 = %607.1;
  %645 = left_shift(%626, %627) /* ty=Tensor[(585), int64] */;
  %646 = greater(%639, %640) /* ty=Tensor[(585), bool] */;
  %647 = %643.1;
  (%644, %645, %646, %647)
}

def @func_5799() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %651 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %648 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %649 = @func_3762() /* ty=Tensor[(12, 14, 2), float64] */;
    %650 = %648.0;
    (%649, %650)
  };
  %651() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_8042() -> (Tensor[(5, 15, 1), float32], Tensor[(5, 15, 1), float32]) {
  %652 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %653 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 15, 1), float32] */, dtype="float32") /* ty=Tensor[(5, 15, 1), float32] */;
  %654 = asinh(%652) /* ty=Tensor[(5, 15, 1), float32] */;
  %655 = sin(%653) /* ty=Tensor[(5, 15, 1), float32] */;
  (%654, %655)
}

def @func_2630() -> (Tensor[(12, 14, 2), float64],) {
  @func_2628() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_3549() -> Tensor[(12, 14, 2), float64] {
  @func_3547() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_1302(%var_1255: Tensor[(48, 8), float32], %var_1297: Tensor[(55), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(48, 8), float32], Tensor[(5, 15, 11), float32], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), bool], Tensor[(5, 15, 11), float32], Tensor[(55), float32]) {
  %656 = cast(%var_1255, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
  %657 = cast(%var_1255, dtype="float32") /* ty=Tensor[(48, 8), float32] */;
  %658 = reshape(%656, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %659 = reshape(%657, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %660 = @func_814(%658, %659) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */;
  %661 = cast(meta[relay.Constant][27] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %662 = reshape(%661, newshape=[1, 12, 1]) /* ty=Tensor[(1, 12, 1), float64] */;
  %663 = @func_462(%662) /* ty=(Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
  %664 = @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %665 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
  %666 = cast(%665, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %667 = cos(%666) /* ty=Tensor[(12, 14, 2), float64] */;
  %668 = cast(meta[relay.Constant][28] /* ty=Tensor[(12, 14, 2), float64] */, dtype="bool") /* ty=Tensor[(12, 14, 2), bool] */;
  %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%667, dtype="bool") /* ty=Tensor[(12, 14, 2), bool] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %672 = cast(%var_1297, dtype="float32") /* ty=Tensor[(55), float32] */;
  %673 = %663.1;
  %674 = cast(%673, dtype="float32") /* ty=Tensor[(5, 15, 11), float32] */;
  %675 = reshape(%672, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
  %676 = reshape(%674, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
  %677 = %660.2;
  %678 = %664.0;
  %679 = logical_and(%670, %671) /* ty=Tensor[(12, 14, 2), bool] */;
  %680 = @func_90(%675, %676) /* ty=Tensor[(5, 15, 11), float32] */;
  (%677, %var_1255, %673, meta[relay.Constant][27] /* ty=Tensor[(12), float64] */, %678, %679, %680, %var_1297)
}

def @func_3986() -> (Tensor[(12, 14, 2), float64],) {
  %681 = @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %682 = %681.0;
  (%682,)
}

def @func_1109() -> (Tensor[(12, 14, 2), float64],) {
  @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_5062() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %683 = @func_2104() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %684 = @func_1667() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %685 = %684.1;
  %686 = cast(%685, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %687 = %683.0;
  %688 = sqrt(%686) /* ty=Tensor[(12, 14, 2), float64] */;
  (%687, %688)
}

def @func_742() -> Tensor[(12, 14, 2), float64] {
  %690 = fn () -> Tensor[(12, 14, 2), float64] {
    %689 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
    sin(%689) /* ty=Tensor[(12, 14, 2), float64] */
  };
  %690() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_3257(%var_3256: Tensor[(585, 1), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585, 1), float32]) {
  %699 = fn (%var_3251: Tensor[(585, 1), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585, 1), float32]) {
    %691 = @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %692 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %693 = cast(%var_3251, dtype="float32") /* ty=Tensor[(585, 1), float32] */;
    %694 = reshape(%693, newshape=[585]) /* ty=Tensor[(585), float32] */;
    %695 = @func_1897(%694) /* ty=(Tensor[(12, 14, 2), float64], float32, Tensor[(585), float32], Tensor[(12, 14, 2), float64]) */;
    %696 = %691.1;
    %697 = %692.0;
    %698 = %695.1;
    (%696, %697, %698, %var_3251)
  };
  %699(%var_3256) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], float32, Tensor[(585, 1), float32]) */
}

def @func_2689(%var_2687: Tensor[(10, 15, 7), float32]) -> Tensor[(10, 15, 7), float32] {
  @func_2686(%var_2687) /* ty=Tensor[(10, 15, 7), float32] */
}

def @func_2651(%var_2649: Tensor[(12), float64]) -> (Tensor[(12, 14, 2), float64], Tensor[(825), float32], Tensor[(12), float64]) {
  @func_2648(%var_2649) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(825), float32], Tensor[(12), float64]) */
}

def @func_4752() -> Tensor[(12, 14, 2), float64] {
  %700 = @func_3126() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %700.0
}

def @func_8199() -> (Tensor[(12, 14, 2), float64],) {
  %701 = @func_6887() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %702 = %701.1;
  (%702,)
}

def @func_1613(%var_1612: Tensor[(3, 2, 11), float32]) -> Tensor[(3, 2, 11), float32] {
  %704 = fn (%var_1601: Tensor[(3, 2, 11), float32]) -> Tensor[(3, 2, 11), float32] {
    %703 = cast(%var_1601, dtype="float32") /* ty=Tensor[(3, 2, 11), float32] */;
    sinh(%703) /* ty=Tensor[(3, 2, 11), float32] */
  };
  %704(%var_1612) /* ty=Tensor[(3, 2, 11), float32] */
}

def @func_4702(%var_4685: Tensor[(14, 13, 1), uint32], %var_4686: Tensor[(14, 13, 11), uint32]) -> Tensor[(14, 13, 11), uint32] {
  %705 = cast(%var_4685, dtype="uint32") /* ty=Tensor[(14, 13, 1), uint32] */;
  %706 = cast(%var_4686, dtype="uint32") /* ty=Tensor[(14, 13, 11), uint32] */;
  bitwise_or(%705, %706) /* ty=Tensor[(14, 13, 11), uint32] */
}

def @func_5000() -> Tensor[(12, 14, 2), float64] {
  %708 = fn () -> Tensor[(12, 14, 2), float64] {
    %707 = @func_3436() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %707.1
  };
  %708() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_5650() -> Tensor[(12, 14, 2), float64] {
  %710 = fn () -> Tensor[(12, 14, 2), float64] {
    %709 = @func_1381() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %709.0
  };
  %710() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_1790() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %711 = @func_1369() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %712 = @func_1381() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %713 = %711.0;
  %714 = %712.0;
  (%713, %714)
}

def @func_6101() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %715 = @func_2029() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %716 = %715.0;
  %717 = @func_5649() /* ty=Tensor[(12, 14, 2), float64] */;
  (%716, %717)
}

def @func_2648(%var_2642: Tensor[(12), float64]) -> (Tensor[(12, 14, 2), float64], Tensor[(825), float32], Tensor[(12), float64]) {
  %718 = @func_1381() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %719 = cast(%var_2642, dtype="float64") /* ty=Tensor[(12), float64] */;
  %720 = reshape(%719, newshape=[1, 12, 1]) /* ty=Tensor[(1, 12, 1), float64] */;
  %721 = @func_462(%720) /* ty=(Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
  %722 = %718.0;
  %723 = %721.3;
  (%722, %723, %var_2642)
}

def @func_4434() -> (Tensor[(12, 14, 2), float64],) {
  @func_4432() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_1682() -> (Tensor[(12, 14, 2), float64],) {
  %725 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %724 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
    (%724,)
  };
  %725() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_6238() -> Tensor[(12, 14, 2), float64] {
  @func_6236() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_5112() -> Tensor[(2, 1, 4), float32] {
  %730 = fn () -> Tensor[(2, 1, 4), float32] {
    %726 = cast(0.523578f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %727 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 1, 4), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 4), float64] */;
    %728 = divide(%726, %727) /* ty=Tensor[(2, 1, 4), float64] */;
    %729 = cast(%728, dtype="float32") /* ty=Tensor[(2, 1, 4), float32] */;
    sin(%729) /* ty=Tensor[(2, 1, 4), float32] */
  };
  %730() /* ty=Tensor[(2, 1, 4), float32] */
}

def @func_4470() -> (Tensor[(12, 14, 2), bool],) {
  @func_4468() /* ty=(Tensor[(12, 14, 2), bool],) */
}

def @func_1044() -> (Tensor[(12, 14, 2), float64],) {
  %731 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
  (%731,)
}

def @func_9228() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), bool], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_9226() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), bool], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_7174() -> Tensor[(12, 14, 2), float64] {
  %733 = fn () -> Tensor[(12, 14, 2), float64] {
    %732 = @func_6534() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %732.0
  };
  %733() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_7531() -> (Tensor[(12, 14, 2), float64],) {
  @func_7529() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_3583() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %739 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %734 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %735 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
    %736 = cast(%735, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
    %737 = %734.0;
    %738 = sigmoid(%736) /* ty=Tensor[(12, 14, 2), float64] */;
    (%737, %738)
  };
  %739() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_1443(%var_1441: Tensor[(10, 7, 5), int8], %var_1442: Tensor[(585), float32]) -> (Tensor[(10, 7, 5), int8], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) {
  %753 = fn (%var_1391: Tensor[(10, 7, 5), int8], %var_1420: Tensor[(585), float32]) -> (Tensor[(10, 7, 5), int8], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) {
    %740 = cast(meta[relay.Constant][31] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %741 = cast(%var_1391, dtype="int8") /* ty=Tensor[(10, 7, 5), int8] */;
    %742 = @func_1206() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %743 = @func_1369() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %744 = cast(meta[relay.Constant][31] /* ty=int8 */, dtype="float32") /* ty=float32 */;
    %745 = cast(%var_1420, dtype="float32") /* ty=Tensor[(585), float32] */;
    %746 = reshape(%744, newshape=[]) /* ty=float32 */;
    %747 = reshape(%745, newshape=[585]) /* ty=Tensor[(585), float32] */;
    %748 = @func_943(%746, %747) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) */;
    %749 = subtract(%740, %741) /* ty=Tensor[(10, 7, 5), int8] */;
    %750 = %742.0;
    %751 = %743.0;
    %752 = %748.1;
    (%749, %750, %751, %752, %var_1420)
  };
  %753(%var_1441, %var_1442) /* ty=(Tensor[(10, 7, 5), int8], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */
}

def @func_1792() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_3762() -> Tensor[(12, 14, 2), float64] {
  %754 = @func_3582() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %754.0
}

def @func_5213() -> (Tensor[(12, 14, 2), float64],) {
  %757 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %755 = @func_1381() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %756 = %755.0;
    (%756,)
  };
  %757() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_6287() -> Tensor[(12, 14, 2), float64] {
  %759 = fn () -> Tensor[(12, 14, 2), float64] {
    %758 = @func_2029() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %758.0
  };
  %759() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_7073() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %764 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %760 = @func_5798() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %761 = @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %762 = %760.0;
    %763 = %761.1;
    (%762, %763)
  };
  %764() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_1668() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %769 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %765 = @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %766 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
    %767 = %765.0;
    %768 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
    (%766, %767, %768)
  };
  %769() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_3747() -> (Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) {
  %774 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) {
    %770 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %771 = @func_1632() /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */;
    %772 = %770.0;
    %773 = %771.2;
    (%772, %773)
  };
  %774() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */
}

def @func_7817() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 13, 11), float64], Tensor[(22), int16], Tensor[(286), int16], Tensor[(66), float32]) {
  @func_7815() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 13, 11), float64], Tensor[(22), int16], Tensor[(286), int16], Tensor[(66), float32]) */
}

def @func_8591() -> (Tensor[(12, 14, 2), bool], Tensor[(2, 6, 8), float64]) {
  %775 = @func_4468() /* ty=(Tensor[(12, 14, 2), bool],) */;
  %776 = %775.0;
  %777 = @func_5705() /* ty=Tensor[(2, 6, 8), float64] */;
  (%776, %777)
}

def @func_2509(%var_2507: Tensor[(13, 13, 13), bool], %var_2508: Tensor[(13, 13, 13), bool]) -> (Tensor[(13, 13, 13), float32], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64]) {
  %796 = fn (%var_2475: Tensor[(13, 13, 13), bool], %var_2476: Tensor[(13, 13, 13), bool]) -> (Tensor[(13, 13, 13), float32], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64]) {
    %778 = cast(%var_2476, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
    %779 = shape_of(%var_2475, dtype="int32") /* ty=Tensor[(3), int32] */;
    %780 = cast(%var_2475, dtype="bool") /* ty=Tensor[(13, 13, 13), bool] */;
    %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %782 = logical_or(%780, %781) /* ty=Tensor[(13, 13, 13), bool] */;
    %783 = cast(%var_2475, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
    %784 = shape_of(%782, dtype="int32") /* ty=Tensor[(3), int32] */;
    %785 = cast(%782, dtype="float32") /* ty=Tensor[(13, 13, 13), float32] */;
    %786 = dyn.reshape(%783, %784, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %787 = cast(meta[relay.Constant][32] /* ty=Tensor[(55), float32] */, dtype="float32") /* ty=Tensor[(55), float32] */;
    %788 = cast(meta[relay.Constant][33] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
    %789 = reshape(%787, newshape=[55, 1]) /* ty=Tensor[(55, 1), float32] */;
    %790 = reshape(%788, newshape=[128]) /* ty=Tensor[(128), float32] */;
    %791 = @func_899(%789, %790) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(384), float32], Tensor[(5, 15, 11), float32], Tensor[(55, 1), float32], Tensor[(825, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32]) */;
    %792 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %793 = floor_divide(%785, %786) /* ty=Tensor[(13, 13, 13), float32] */;
    %794 = %791.5;
    %795 = %792.0;
    (%793, %794, meta[relay.Constant][32] /* ty=Tensor[(55), float32] */, meta[relay.Constant][33] /* ty=Tensor[(128), float32] */, %795)
  };
  %796(%var_2507, %var_2508) /* ty=(Tensor[(13, 13, 13), float32], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64]) */
}

def @func_5629(%var_5575: Tensor[(12, 14, 2), float64]) -> (Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(13, 13, 11), float64], float32, Tensor[(585), float32]) {
  %797 = @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %798 = %797.0;
  %799 = cast(%var_5575, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%798, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %803 = @func_3126() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %804 = @func_4432() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %805 = cast(-0.385288f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %806 = cast(meta[relay.Constant][34] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %807 = reshape(%805, newshape=[]) /* ty=float32 */;
  %808 = reshape(%806, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %809 = @func_943(%807, %808) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) */;
  %810 = floor_mod(%801, %802) /* ty=Tensor[(12, 14, 2), float32] */;
  %811 = %803.0;
  %812 = %804.0;
  %813 = %809.4;
  (%810, %811, %812, %813, -0.385288f /* ty=float32 */, meta[relay.Constant][34] /* ty=Tensor[(585), float32] */)
}

def @func_7529() -> (Tensor[(12, 14, 2), float64],) {
  %814 = @func_2357() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %815 = %814.0;
  (%815,)
}

def @func_8993(%var_8990: Tensor[(14, 13, 8), int64], %var_8991: Tensor[(14, 13, 8), int64], %var_8992: Tensor[(22), int16]) -> (Tensor[(14, 13, 8), int64], Tensor[(22), uint8]) {
  %828 = fn (%var_8965: Tensor[(14, 13, 8), int64], %var_8966: Tensor[(14, 13, 8), int64], %var_8974: Tensor[(22), int16]) -> (Tensor[(14, 13, 8), int64], Tensor[(22), uint8]) {
    %816 = cast(%var_8966, dtype="int64") /* ty=Tensor[(14, 13, 8), int64] */;
    %817 = shape_of(%var_8965, dtype="int32") /* ty=Tensor[(3), int32] */;
    %818 = cast(%var_8965, dtype="int64") /* ty=Tensor[(14, 13, 8), int64] */;
    %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %820 = @func_7815() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 13, 11), float64], Tensor[(22), int16], Tensor[(286), int16], Tensor[(66), float32]) */;
    %821 = %820.3;
    %822 = cast(%var_8974, dtype="uint8") /* ty=Tensor[(22), uint8] */;
    %823 = shape_of(%821, dtype="int32") /* ty=Tensor[(1), int32] */;
    %824 = cast(%821, dtype="uint8") /* ty=Tensor[(22), uint8] */;
    %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?), uint8] */;
    %826 = subtract(%818, %819) /* ty=Tensor[(14, 13, 8), int64] */;
    %827 = bitwise_xor(%824, %825) /* ty=Tensor[(22), uint8] */;
    (%826, %827)
  };
  %828(%var_8990, %var_8991, %var_8992) /* ty=(Tensor[(14, 13, 8), int64], Tensor[(22), uint8]) */
}

def @func_8250(%var_8248: Tensor[(11, 4, 5), int16]) -> Tensor[(11, 4, 5), int16] {
  @func_8247(%var_8248) /* ty=Tensor[(11, 4, 5), int16] */
}

def @func_1107() -> (Tensor[(12, 14, 2), float64],) {
  %829 = @func_1088() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %830 = %829.0;
  (%830,)
}

def @func_9129(%var_9128: Tensor[(384), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(24, 16), float32], Tensor[(384), float32]) {
  %837 = fn (%var_9119: Tensor[(384), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(24, 16), float32], Tensor[(384), float32]) {
    %831 = @func_3582() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %832 = cast(%var_9119, dtype="float32") /* ty=Tensor[(384), float32] */;
    %833 = reshape(%832, newshape=[24, 16]) /* ty=Tensor[(24, 16), float32] */;
    %834 = @func_6028(%833) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(1, 12, 1), float64], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(24, 16), float32]) */;
    %835 = %831.0;
    %836 = %834.6;
    (%835, %836, %var_9119)
  };
  %837(%var_9128) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(24, 16), float32], Tensor[(384), float32]) */
}

def @func_9363(%var_9361: Tensor[(1120), uint16], %var_9362: Tensor[(384), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(6, 64), float32], Tensor[(1120), uint16], Tensor[(384), float32]) {
  @func_9359(%var_9361, %var_9362) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(6, 64), float32], Tensor[(1120), uint16], Tensor[(384), float32]) */
}

def @func_4754() -> Tensor[(12, 14, 2), float64] {
  @func_4752() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_5632(%var_5630: Tensor[(12, 14, 2), float64]) -> (Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(13, 13, 11), float64], float32, Tensor[(585), float32]) {
  @func_5629(%var_5630) /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(13, 13, 11), float64], float32, Tensor[(585), float32]) */
}

def @func_7997() -> (Tensor[(1, 4, 13), float64], Tensor[(12, 14, 2), float64]) {
  %838 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 4, 13), float64] */, dtype="float64") /* ty=Tensor[(1, 4, 13), float64] */;
  %839 = @func_1369() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %840 = sinh(%838) /* ty=Tensor[(1, 4, 13), float64] */;
  %841 = %839.0;
  (%840, %841)
}

def @func_9070() -> (Tensor[(12, 14, 2), float64],) {
  %842 = @func_6236() /* ty=Tensor[(12, 14, 2), float64] */;
  (%842,)
}

def @func_4890(%var_4854: Tensor[(55), float32], %var_4866: Tensor[(12, 14, 2), float64], %var_4881: Tensor[(195, 3), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(128), float32], Tensor[(55), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float32], Tensor[(16, 2, 4), float32], Tensor[(585), float32], float32, Tensor[(195, 3), float32], Tensor[(585), bool]) {
  %843 = @func_2182() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %844 = cast(%var_4854, dtype="float32") /* ty=Tensor[(55), float32] */;
  %845 = cast(meta[relay.Constant][36] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %846 = reshape(%844, newshape=[55, 1]) /* ty=Tensor[(55, 1), float32] */;
  %847 = reshape(%845, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %848 = @func_899(%846, %847) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(384), float32], Tensor[(5, 15, 11), float32], Tensor[(55, 1), float32], Tensor[(825, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32]) */;
  %849 = @func_2029() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %850 = @func_1929() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %851 = %850.0;
  %852 = cast(%851, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %853 = tan(%852) /* ty=Tensor[(12, 14, 2), float64] */;
  %854 = cast(%var_4866, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %855 = shape_of(%853, dtype="int32") /* ty=Tensor[(3), int32] */;
  %856 = cast(%853, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
  %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %858 = cast(meta[relay.Constant][36] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %859 = cast(%var_4854, dtype="float32") /* ty=Tensor[(55), float32] */;
  %860 = reshape(%858, newshape=[16, 2, 4]) /* ty=Tensor[(16, 2, 4), float32] */;
  %861 = reshape(%859, newshape=[1, 55]) /* ty=Tensor[(1, 55), float32] */;
  %862 = @func_627(%860, %861) /* ty=(Tensor[(16, 2, 4), float32], Tensor[(16, 2, 4), float64], Tensor[(9, 13, 5), float32], Tensor[(585, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(1, 55), float32], Tensor[(825), float32]) */;
  %863 = subtract(%856, %857) /* ty=Tensor[(12, 14, 2), float32] */;
  %864 = cast(%863, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %865 = cast(-0.236261f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %866 = cast(%var_4881, dtype="float32") /* ty=Tensor[(195, 3), float32] */;
  %867 = reshape(%864, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float64] */;
  %868 = reshape(%865, newshape=[]) /* ty=float32 */;
  %869 = reshape(%866, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %870 = @func_1741(%867, %868, %869) /* ty=(Tensor[(12, 14, 2), int8], float32, float32, Tensor[(13, 13, 11), float64], Tensor[(585), float32]) */;
  %871 = cast(-0.236261f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %872 = cast(%var_4881, dtype="float32") /* ty=Tensor[(195, 3), float32] */;
  %873 = %870.4;
  %874 = cast(%873, dtype="bool") /* ty=Tensor[(585), bool] */;
  %875 = reshape(%871, newshape=[]) /* ty=float32 */;
  %876 = reshape(%872, newshape=[585]) /* ty=Tensor[(585), float32] */;
  %877 = reshape(%874, newshape=[585]) /* ty=Tensor[(585), bool] */;
  %878 = @func_2901(%875, %876, %877) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(585), int64], Tensor[(585), bool], float32) */;
  %879 = %843.0;
  %880 = %848.6;
  %881 = %849.0;
  %882 = %862.0;
  %883 = %878.2;
  (%879, %880, %var_4854, meta[relay.Constant][36] /* ty=Tensor[(128), float32] */, %881, %863, %882, %873, -0.236261f /* ty=float32 */, %var_4881, %883)
}

def @func_5330() -> Tensor[(12, 14, 2), float64] {
  %885 = fn () -> Tensor[(12, 14, 2), float64] {
    %884 = @func_3457() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %884.0
  };
  %885() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_4895(%var_4892: Tensor[(55), float32], %var_4893: Tensor[(12, 14, 2), float64], %var_4894: Tensor[(195, 3), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(128), float32], Tensor[(55), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float32], Tensor[(16, 2, 4), float32], Tensor[(585), float32], float32, Tensor[(195, 3), float32], Tensor[(585), bool]) {
  @func_4890(%var_4892, %var_4893, %var_4894) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(128), float32], Tensor[(55), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float32], Tensor[(16, 2, 4), float32], Tensor[(585), float32], float32, Tensor[(195, 3), float32], Tensor[(585), bool]) */
}

def @func_8324(%var_8297: bool, %var_8298: Tensor[(7, 1, 9), bool]) -> (Tensor[(7, 1, 9), bool], Tensor[(7, 1, 9), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %886 = cast(%var_8297, dtype="bool") /* ty=bool */;
  %887 = cast(%var_8298, dtype="bool") /* ty=Tensor[(7, 1, 9), bool] */;
  %888 = cast(%var_8298, dtype="float32") /* ty=Tensor[(7, 1, 9), float32] */;
  %889 = @func_3167() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %890 = @func_5739() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %891 = logical_or(%886, %887) /* ty=Tensor[(7, 1, 9), bool] */;
  %892 = rsqrt(%888) /* ty=Tensor[(7, 1, 9), float32] */;
  %893 = %889.1;
  %894 = %890.1;
  (%891, %892, %893, %894)
}

def @func_8467(%var_8465: Tensor[(15, 2, 9), float64], %var_8466: Tensor[(12, 32), float32]) -> (Tensor[(15, 2, 9), float64], Tensor[(195, 3), float32], Tensor[(55, 1), float32], Tensor[(12, 32), float32], Tensor[(585), float32]) {
  %908 = fn (%var_8447: Tensor[(15, 2, 9), float64], %var_8457: Tensor[(12, 32), float32]) -> (Tensor[(15, 2, 9), float64], Tensor[(195, 3), float32], Tensor[(55, 1), float32], Tensor[(12, 32), float32], Tensor[(585), float32]) {
    %895 = cast(%var_8447, dtype="float64") /* ty=Tensor[(15, 2, 9), float64] */;
    %896 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(15, 2, 9), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %897 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 9), float64] */;
    %898 = dyn.reshape(%895, %896, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %899 = cast(meta[relay.Constant][38] /* ty=Tensor[(55, 1), float32] */, dtype="float32") /* ty=Tensor[(55, 1), float32] */;
    %900 = cast(%var_8457, dtype="float32") /* ty=Tensor[(12, 32), float32] */;
    %901 = cast(meta[relay.Constant][39] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
    %902 = reshape(%899, newshape=[55]) /* ty=Tensor[(55), float32] */;
    %903 = reshape(%900, newshape=[384]) /* ty=Tensor[(384), float32] */;
    %904 = reshape(%901, newshape=[195, 3]) /* ty=Tensor[(195, 3), float32] */;
    %905 = @func_4641(%902, %903, %904) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(195, 3), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(585), bool], Tensor[(585, 1), float32], Tensor[(12, 14, 2), bool], Tensor[(825), float32], Tensor[(5, 165), float64]) */;
    %906 = add(%897, %898) /* ty=Tensor[(15, 2, 9), float64] */;
    %907 = %905.6;
    (%906, %907, meta[relay.Constant][38] /* ty=Tensor[(55, 1), float32] */, %var_8457, meta[relay.Constant][39] /* ty=Tensor[(585), float32] */)
  };
  %908(%var_8465, %var_8466) /* ty=(Tensor[(15, 2, 9), float64], Tensor[(195, 3), float32], Tensor[(55, 1), float32], Tensor[(12, 32), float32], Tensor[(585), float32]) */
}

def @func_2686(%var_2680: Tensor[(10, 15, 7), float32]) -> Tensor[(10, 15, 7), float32] {
  %909 = cast(%var_2680, dtype="float32") /* ty=Tensor[(10, 15, 7), float32] */;
  %910 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(10, 15, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %911 = cast(meta[relay.Constant][40] /* ty=Tensor[(10, 15, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 15, 7), float32] */;
  %912 = dyn.reshape(%909, %910, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%911, %912) /* ty=Tensor[(10, 15, 7), float32] */
}

def @func_2030() -> (Tensor[(12, 14, 2), float64],) {
  %915 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %913 = @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %914 = %913.0;
    (%914,)
  };
  %915() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_946(%var_944: float32, %var_945: Tensor[(585), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) {
  %930 = fn (%var_907: float32, %var_926: Tensor[(585), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) {
    %916 = cast(%var_926, dtype="float32") /* ty=Tensor[(585), float32] */;
    %917 = reshape(%916, newshape=[9, 13, 5]) /* ty=Tensor[(9, 13, 5), float32] */;
    %918 = @func_236(%917) /* ty=(Tensor[(9, 13, 5), float32],) */;
    %919 = cast(%var_926, dtype="float32") /* ty=Tensor[(585), float32] */;
    %920 = reshape(%919, newshape=[9, 13, 5]) /* ty=Tensor[(9, 13, 5), float32] */;
    %921 = @func_236(%920) /* ty=(Tensor[(9, 13, 5), float32],) */;
    %922 = cast(%var_907, dtype="float32") /* ty=float32 */;
    %923 = cast(meta[relay.Constant][41] /* ty=Tensor[(13, 13, 11), float32] */, dtype="float32") /* ty=Tensor[(13, 13, 11), float32] */;
    %924 = power(%922, %923) /* ty=Tensor[(13, 13, 11), float32] */;
    %925 = cast(%924, dtype="float64") /* ty=Tensor[(13, 13, 11), float64] */;
    %926 = @func_741() /* ty=Tensor[(12, 14, 2), float64] */;
    %927 = %918.0;
    %928 = %921.0;
    %929 = atanh(%925) /* ty=Tensor[(13, 13, 11), float64] */;
    (%926, %927, %var_926, %928, %929)
  };
  %930(%var_944, %var_945) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(9, 13, 5), float32], Tensor[(585), float32], Tensor[(9, 13, 5), float32], Tensor[(13, 13, 11), float64]) */
}

def @func_4680(%var_4679: Tensor[(12, 14, 2), float64]) -> (Tensor[(12, 14, 2), float64],) {
  %937 = fn (%var_4651: Tensor[(12, 14, 2), float64]) -> (Tensor[(12, 14, 2), float64],) {
    %931 = @func_3140() /* ty=Tensor[(12, 14, 2), float64] */;
    %932 = cast(%var_4651, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
    %933 = shape_of(%931, dtype="int32") /* ty=Tensor[(3), int32] */;
    %934 = cast(%931, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
    %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %936 = floor_divide(%934, %935) /* ty=Tensor[(12, 14, 2), float64] */;
    (%936,)
  };
  %937(%var_4679) /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_4969() -> Tensor[(2, 6, 8), float64] {
  %939 = fn () -> Tensor[(2, 6, 8), float64] {
    %938 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 6, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 6, 8), float64] */;
    sin(%938) /* ty=Tensor[(2, 6, 8), float64] */
  };
  %939() /* ty=Tensor[(2, 6, 8), float64] */
}

def @func_3988() -> (Tensor[(12, 14, 2), float64],) {
  @func_3986() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_7815() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(2, 13, 11), float64], Tensor[(22), int16], Tensor[(286), int16], Tensor[(66), float32]) {
  %940 = @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %941 = @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %942 = cast(meta[relay.Constant][43] /* ty=Tensor[(22), int16] */, dtype="int16") /* ty=Tensor[(22), int16] */;
  %943 = cast(meta[relay.Constant][44] /* ty=Tensor[(286), int16] */, dtype="int16") /* ty=Tensor[(286), int16] */;
  %944 = cast(meta[relay.Constant][45] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %945 = reshape(%942, newshape=[2, 1, 11]) /* ty=Tensor[(2, 1, 11), int16] */;
  %946 = reshape(%943, newshape=[2, 13, 11]) /* ty=Tensor[(2, 13, 11), int16] */;
  %947 = reshape(%944, newshape=[1, 66]) /* ty=Tensor[(1, 66), float32] */;
  %948 = @func_3718(%945, %946, %947) /* ty=(Tensor[(2, 13, 11), uint16], Tensor[(3, 2, 11), float32], Tensor[(1, 66), float32], Tensor[(2, 13, 11), float64], Tensor[(2, 1, 11), float32]) */;
  %949 = %940.0;
  %950 = %941.0;
  %951 = %948.3;
  (%949, %950, %951, meta[relay.Constant][43] /* ty=Tensor[(22), int16] */, meta[relay.Constant][44] /* ty=Tensor[(286), int16] */, meta[relay.Constant][45] /* ty=Tensor[(66), float32] */)
}

def @func_8247(%var_8226: Tensor[(11, 4, 5), int16]) -> Tensor[(11, 4, 5), int16] {
  %952 = cast(%var_8226, dtype="int16") /* ty=Tensor[(11, 4, 5), int16] */;
  %953 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(11, 4, 5), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(meta[relay.Constant][46] /* ty=Tensor[(11, 4, 5), int16] */, dtype="int16") /* ty=Tensor[(11, 4, 5), int16] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  maximum(%954, %955) /* ty=Tensor[(11, 4, 5), int16] */
}

def @func_5707() -> Tensor[(2, 6, 8), float64] {
  @func_5705() /* ty=Tensor[(2, 6, 8), float64] */
}

def @func_6743(%var_6732: Tensor[(56, 20), uint16], %var_6736: Tensor[(6, 64), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(10, 16, 7), uint16], Tensor[(56, 20), uint16], Tensor[(585), bool], Tensor[(1, 55), float32], Tensor[(6, 64), float32], Tensor[(585), float32]) {
  %956 = @func_3986() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %957 = cast(%var_6732, dtype="uint16") /* ty=Tensor[(56, 20), uint16] */;
  %958 = cast(%var_6732, dtype="uint16") /* ty=Tensor[(56, 20), uint16] */;
  %959 = reshape(%957, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), uint16] */;
  %960 = reshape(%958, newshape=[10, 16, 7]) /* ty=Tensor[(10, 16, 7), uint16] */;
  %961 = @func_2462(%959, %960) /* ty=(Tensor[(10, 16, 7), uint16], Tensor[(12, 14, 2), float64]) */;
  %962 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 55), float32] */, dtype="float32") /* ty=Tensor[(1, 55), float32] */;
  %963 = cast(%var_6736, dtype="float32") /* ty=Tensor[(6, 64), float32] */;
  %964 = cast(meta[relay.Constant][48] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
  %965 = reshape(%962, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %966 = reshape(%963, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %967 = reshape(%964, newshape=[195, 3]) /* ty=Tensor[(195, 3), float32] */;
  %968 = @func_4641(%965, %966, %967) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(195, 3), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(585), bool], Tensor[(585, 1), float32], Tensor[(12, 14, 2), bool], Tensor[(825), float32], Tensor[(5, 165), float64]) */;
  %969 = %956.0;
  %970 = %961.0;
  %971 = %968.9;
  (%969, %970, %var_6732, %971, meta[relay.Constant][47] /* ty=Tensor[(1, 55), float32] */, %var_6736, meta[relay.Constant][48] /* ty=Tensor[(585), float32] */)
}

def @func_1633() -> (Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) {
  %982 = fn () -> (Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) {
    %972 = @func_1044() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %973 = %972.0;
    %974 = cast(%973, dtype="float32") /* ty=Tensor[(12, 14, 2), float32] */;
    %975 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 192), float32] */, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
    %976 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 192), float32] */, dtype="float32") /* ty=Tensor[(2, 192), float32] */;
    %977 = reshape(%975, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
    %978 = reshape(%976, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
    %979 = @func_814(%977, %978) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */;
    %980 = acosh(%974) /* ty=Tensor[(12, 14, 2), float32] */;
    %981 = %979.2;
    (%980, %981, meta[relay.Constant][49] /* ty=Tensor[(2, 192), float32] */)
  };
  %982() /* ty=(Tensor[(12, 14, 2), float32], Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */
}

def @func_8384() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_8382() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_5086() -> Tensor[(12, 14, 2), float64] {
  %984 = fn () -> Tensor[(12, 14, 2), float64] {
    %983 = @func_1852() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %983.1
  };
  %984() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_5153() -> (Tensor[(12, 14, 2), float64],) {
  @func_5151() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_4432() -> (Tensor[(12, 14, 2), float64],) {
  %985 = @func_3922() /* ty=Tensor[(12, 14, 2), float64] */;
  (%985,)
}

def @func_6028(%var_6019: Tensor[(24, 16), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(1, 12, 1), float64], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(24, 16), float32]) {
  %986 = @func_2628() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %987 = @func_3126() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %988 = cast(meta[relay.Constant][50] /* ty=Tensor[(12), float64] */, dtype="float64") /* ty=Tensor[(12), float64] */;
  %989 = reshape(%988, newshape=[1, 12, 1]) /* ty=Tensor[(1, 12, 1), float64] */;
  %990 = @func_462(%989) /* ty=(Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
  %991 = @func_3986() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %992 = cast(%var_6019, dtype="float32") /* ty=Tensor[(24, 16), float32] */;
  %993 = reshape(%992, newshape=[384]) /* ty=Tensor[(384), float32] */;
  %994 = @func_4133(%993) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(585), float32], Tensor[(384), float32], Tensor[(585), float32]) */;
  %995 = %986.0;
  %996 = %987.0;
  %997 = %990.0;
  %998 = %991.0;
  %999 = %994.1;
  (%995, %996, %997, meta[relay.Constant][50] /* ty=Tensor[(12), float64] */, %998, %999, %var_6019)
}

def @func_7054() -> (Tensor[(2, 192), float32], Tensor[(12, 14, 2), float64]) {
  %1000 = @func_3746() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(2, 192), float32]) */;
  %1001 = @func_1369() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %1002 = %1000.1;
  %1003 = %1001.0;
  (%1002, %1003)
}

def @func_8617() -> Tensor[(12, 14, 2), float64] {
  @func_8615() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_6607() -> Tensor[(12, 14, 2), float64] {
  %1005 = fn () -> Tensor[(12, 14, 2), float64] {
    %1004 = @func_1206() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %1004.0
  };
  %1005() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_2105() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %1010 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %1006 = @func_2029() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %1007 = @func_1206() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %1008 = %1006.0;
    %1009 = %1007.0;
    (%1008, %1009)
  };
  %1010() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_2182() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %1011 = @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %1012 = @func_1790() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %1013 = %1011.0;
  %1014 = %1012.0;
  (%1013, %1014)
}

def @func_818(%var_816: Tensor[(16, 3, 8), float32], %var_817: Tensor[(16, 3, 8), float32]) -> (Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) {
  @func_814(%var_816, %var_817) /* ty=(Tensor[(16, 3, 8), bool], Tensor[(16, 3, 8), bool], Tensor[(12, 14, 2), float64]) */
}

def @func_1988(%var_1987: Tensor[(12, 14, 2), float64]) -> Tensor[(12, 14, 2), uint8] {
  %1021 = fn (%var_1971: Tensor[(12, 14, 2), float64]) -> Tensor[(12, 14, 2), uint8] {
    %1015 = @func_1852() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %1016 = %1015.1;
    %1017 = cast(%var_1971, dtype="uint8") /* ty=Tensor[(12, 14, 2), uint8] */;
    %1018 = shape_of(%1016, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1019 = cast(%1016, dtype="uint8") /* ty=Tensor[(12, 14, 2), uint8] */;
    %1020 = dyn.reshape(%1017, %1018, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    left_shift(%1019, %1020) /* ty=Tensor[(12, 14, 2), uint8] */
  };
  %1021(%var_1987) /* ty=Tensor[(12, 14, 2), uint8] */
}

def @func_464(%var_463: Tensor[(1, 12, 1), float64]) -> (Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) {
  %1033 = fn (%var_425: Tensor[(1, 12, 1), float64]) -> (Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) {
    %1022 = cast(%var_425, dtype="float64") /* ty=Tensor[(1, 12, 1), float64] */;
    %1023 = cast(meta[relay.Constant][51] /* ty=Tensor[(11, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 5), float32] */;
    %1024 = cast(meta[relay.Constant][52] /* ty=Tensor[(825), float32] */, dtype="float32") /* ty=Tensor[(825), float32] */;
    %1025 = reshape(%1023, newshape=[5, 1, 11]) /* ty=Tensor[(5, 1, 11), float32] */;
    %1026 = reshape(%1024, newshape=[5, 15, 11]) /* ty=Tensor[(5, 15, 11), float32] */;
    %1027 = cast(meta[relay.Constant][53] /* ty=Tensor[(585), float32] */, dtype="float32") /* ty=Tensor[(585), float32] */;
    %1028 = reshape(%1027, newshape=[9, 13, 5]) /* ty=Tensor[(9, 13, 5), float32] */;
    %1029 = @func_236(%1028) /* ty=(Tensor[(9, 13, 5), float32],) */;
    %1030 = asinh(%1022) /* ty=Tensor[(1, 12, 1), float64] */;
    %1031 = @func_90(%1025, %1026) /* ty=Tensor[(5, 15, 11), float32] */;
    %1032 = %1029.0;
    (%1030, %1031, meta[relay.Constant][51] /* ty=Tensor[(11, 5), float32] */, meta[relay.Constant][52] /* ty=Tensor[(825), float32] */, %1032, meta[relay.Constant][53] /* ty=Tensor[(585), float32] */)
  };
  %1033(%var_463) /* ty=(Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */
}

def @func_5824(%var_5819: Tensor[(2, 14, 3), uint32]) -> (Tensor[(2, 14, 3), bool],) {
  %1034 = cast(%var_5819, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %1035 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(2, 14, 3), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1036 = cast(meta[relay.Constant][54] /* ty=Tensor[(2, 14, 3), uint32] */, dtype="bool") /* ty=Tensor[(2, 14, 3), bool] */;
  %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1038 = greater_equal(%1036, %1037) /* ty=Tensor[(2, 14, 3), bool] */;
  (%1038,)
}

def @func_7602() -> Tensor[(12, 14, 2), float64] {
  %1039 = @func_2136() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %1039.0
}

def @func_1206() -> (Tensor[(12, 14, 2), float64],) {
  %1040 = @func_1088() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %1041 = %1040.0;
  (%1041,)
}

def @func_8593() -> (Tensor[(12, 14, 2), bool], Tensor[(2, 6, 8), float64]) {
  @func_8591() /* ty=(Tensor[(12, 14, 2), bool], Tensor[(2, 6, 8), float64]) */
}

def @func_3922() -> Tensor[(12, 14, 2), float64] {
  @func_3547() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_5137() -> Tensor[(12, 14, 2), float64] {
  %1042 = fn () -> Tensor[(12, 14, 2), float64] {
    @func_3762() /* ty=Tensor[(12, 14, 2), float64] */
  };
  %1042() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_3127() -> (Tensor[(12, 14, 2), float64],) {
  %1045 = fn () -> (Tensor[(12, 14, 2), float64],) {
    %1043 = @func_1107() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %1044 = %1043.0;
    (%1044,)
  };
  %1045() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_3141() -> Tensor[(12, 14, 2), float64] {
  %1046 = fn () -> Tensor[(12, 14, 2), float64] {
    @func_3024() /* ty=Tensor[(12, 14, 2), float64] */
  };
  %1046() /* ty=Tensor[(12, 14, 2), float64] */
}

def @func_6936() -> (Tensor[(12, 14, 2), float64],) {
  @func_6934() /* ty=(Tensor[(12, 14, 2), float64],) */
}

def @func_7283() -> Tensor[(12, 14, 2), float64] {
  %1047 = @func_3009() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %1047.1
}

def @func_5907() -> (Tensor[(12, 14, 2), float64],) {
  %1048 = @func_5268() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %1049 = %1048.0;
  (%1049,)
}

def @func_5705() -> Tensor[(2, 6, 8), float64] {
  @func_4968() /* ty=Tensor[(2, 6, 8), float64] */
}

def @func_7194(%var_7193: Tensor[(10, 12, 3), float32]) -> (Tensor[(10, 12, 3), float32], Tensor[(12, 14, 2), float64]) {
  %1054 = fn (%var_7181: Tensor[(10, 12, 3), float32]) -> (Tensor[(10, 12, 3), float32], Tensor[(12, 14, 2), float64]) {
    %1050 = cast(%var_7181, dtype="float32") /* ty=Tensor[(10, 12, 3), float32] */;
    %1051 = @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %1052 = atan(%1050) /* ty=Tensor[(10, 12, 3), float32] */;
    %1053 = %1051.0;
    (%1052, %1053)
  };
  %1054(%var_7193) /* ty=(Tensor[(10, 12, 3), float32], Tensor[(12, 14, 2), float64]) */
}

def @func_4468() -> (Tensor[(12, 14, 2), bool],) {
  %1055 = @func_4404() /* ty=Tensor[(12, 14, 2), bool] */;
  (%1055,)
}

def @func_239(%var_237: Tensor[(9, 13, 5), float32]) -> (Tensor[(9, 13, 5), float32],) {
  @func_236(%var_237) /* ty=(Tensor[(9, 13, 5), float32],) */
}

def @func_537(%var_536: Tensor[(12), float64]) -> (Tensor[(14, 14, 11), float32], Tensor[(11, 5), float32], Tensor[(12), float64], Tensor[(9, 13, 5), float32]) {
  %1066 = fn (%var_519: Tensor[(12), float64]) -> (Tensor[(14, 14, 11), float32], Tensor[(11, 5), float32], Tensor[(12), float64], Tensor[(9, 13, 5), float32]) {
    %1056 = cast(meta[relay.Constant][55] /* ty=Tensor[(14, 14, 11), float32] */, dtype="float32") /* ty=Tensor[(14, 14, 11), float32] */;
    %1057 = cast(%var_519, dtype="float64") /* ty=Tensor[(12), float64] */;
    %1058 = reshape(%1057, newshape=[1, 12, 1]) /* ty=Tensor[(1, 12, 1), float64] */;
    %1059 = @func_462(%1058) /* ty=(Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
    %1060 = cast(%var_519, dtype="float64") /* ty=Tensor[(12), float64] */;
    %1061 = reshape(%1060, newshape=[1, 12, 1]) /* ty=Tensor[(1, 12, 1), float64] */;
    %1062 = @func_462(%1061) /* ty=(Tensor[(1, 12, 1), float64], Tensor[(5, 15, 11), float32], Tensor[(11, 5), float32], Tensor[(825), float32], Tensor[(9, 13, 5), float32], Tensor[(585), float32]) */;
    %1063 = atanh(%1056) /* ty=Tensor[(14, 14, 11), float32] */;
    %1064 = %1059.2;
    %1065 = %1062.4;
    (%1063, %1064, %var_519, %1065)
  };
  %1066(%var_536) /* ty=(Tensor[(14, 14, 11), float32], Tensor[(11, 5), float32], Tensor[(12), float64], Tensor[(9, 13, 5), float32]) */
}

def @func_9226() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), bool], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %1067 = @func_3457() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %1068 = @func_7158() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %1069 = %1067.0;
  %1070 = %1068.2;
  %1071 = @func_5403() /* ty=Tensor[(12, 14, 2), bool] */;
  %1072 = @func_7708() /* ty=Tensor[(12, 14, 2), float64] */;
  %1073 = @func_4752() /* ty=Tensor[(12, 14, 2), float64] */;
  (%1069, %1070, %1071, %1072, %1073)
}

def @func_4288(%var_4287: Tensor[(55), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(55), float32]) {
  %1080 = fn (%var_4275: Tensor[(55), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(55), float32]) {
    %1074 = @func_2628() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %1075 = cast(%var_4275, dtype="float32") /* ty=Tensor[(55), float32] */;
    %1076 = reshape(%1075, newshape=[55]) /* ty=Tensor[(55), float32] */;
    %1077 = @func_1525(%1076) /* ty=(Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 9, 16), bool]) */;
    %1078 = %1074.0;
    %1079 = %1077.3;
    (%1078, %1079, %var_4275)
  };
  %1080(%var_4287) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(55), float32]) */
}

def @func_1528(%var_1526: Tensor[(55), float32]) -> (Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 9, 16), bool]) {
  @func_1525(%var_1526) /* ty=(Tensor[(5, 15, 11), float32], Tensor[(55), float32], Tensor[(825), float32], Tensor[(12, 14, 2), float64], Tensor[(3, 9, 16), bool]) */
}

def @func_7666(%var_7664: Tensor[(12, 14, 2), float64]) -> Tensor[(12, 14, 2), uint32] {
  @func_7663(%var_7664) /* ty=Tensor[(12, 14, 2), uint32] */
}

def @func_94(%var_92: Tensor[(5, 1, 11), float32], %var_93: Tensor[(5, 15, 11), float32]) -> Tensor[(5, 15, 11), float32] {
  @func_90(%var_92, %var_93) /* ty=Tensor[(5, 15, 11), float32] */
}

def @func_8856(%var_8853: Tensor[(55), float32], %var_8854: Tensor[(48, 8), float32], %var_8855: Tensor[(6, 64), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(55), float32], Tensor[(48, 8), float32], Tensor[(6, 64), int8]) {
  @func_8851(%var_8853, %var_8854, %var_8855) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(55), float32], Tensor[(48, 8), float32], Tensor[(6, 64), int8]) */
}

def @func_5521(%var_5465: Tensor[(2, 64), float32], %var_5500: Tensor[(384), float32]) -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(11, 5), float32], Tensor[(48, 8), float32], Tensor[(384), float32], Tensor[(2, 64), int64], Tensor[(12, 14, 2), float64]) {
  %1081 = cast(%var_5500, dtype="float32") /* ty=Tensor[(384), float32] */;
  %1082 = cast(meta[relay.Constant][56] /* ty=Tensor[(11, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 5), float32] */;
  %1083 = reshape(%1081, newshape=[48, 8]) /* ty=Tensor[(48, 8), float32] */;
  %1084 = reshape(%1082, newshape=[55]) /* ty=Tensor[(55), float32] */;
  %1085 = @func_1302(%1083, %1084) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(48, 8), float32], Tensor[(5, 15, 11), float32], Tensor[(12), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), bool], Tensor[(5, 15, 11), float32], Tensor[(55), float32]) */;
  %1086 = cast(%var_5465, dtype="float32") /* ty=Tensor[(2, 64), float32] */;
  %1087 = asin(%1086) /* ty=Tensor[(2, 64), float32] */;
  %1088 = cast(meta[relay.Constant][56] /* ty=Tensor[(11, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 5), float32] */;
  %1089 = cast(%var_5465, dtype="float32") /* ty=Tensor[(2, 64), float32] */;
  %1090 = reshape(%1088, newshape=[55, 1]) /* ty=Tensor[(55, 1), float32] */;
  %1091 = reshape(%1089, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %1092 = @func_899(%1090, %1091) /* ty=(Tensor[(12, 14, 2), float64], Tensor[(384), float32], Tensor[(5, 15, 11), float32], Tensor[(55, 1), float32], Tensor[(825, 1), float32], Tensor[(5, 15, 11), float32], Tensor[(128), float32], Tensor[(12, 14, 2), float64], Tensor[(5, 15, 11), float32]) */;
  %1093 = %1092.6;
  %1094 = cast(%1093, dtype="int64") /* ty=Tensor[(128), int64] */;
  %1095 = shape_of(%1087, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1096 = cast(%1087, dtype="int64") /* ty=Tensor[(2, 64), int64] */;
  %1097 = dyn.reshape(%1094, %1095, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1098 = @func_3547() /* ty=Tensor[(12, 14, 2), float64] */;
  %1099 = cast(%1098, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %1100 = reshape(%1099, newshape=[12, 14, 2]) /* ty=Tensor[(12, 14, 2), float64] */;
  %1101 = @func_1986(%1100) /* ty=Tensor[(12, 14, 2), uint8] */;
  %1102 = cast(%1101, dtype="float64") /* ty=Tensor[(12, 14, 2), float64] */;
  %1103 = @func_1215() /* ty=Tensor[(12, 14, 2), float64] */;
  %1104 = %1085.1;
  %1105 = bitwise_xor(%1096, %1097) /* ty=Tensor[(2, 64), int64] */;
  %1106 = atan(%1102) /* ty=Tensor[(12, 14, 2), float64] */;
  (%1103, %1098, meta[relay.Constant][56] /* ty=Tensor[(11, 5), float32] */, %1104, %var_5500, %1105, %1106)
}

def @func_6717() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %1113 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %1107 = @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %1108 = @func_5725() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %1109 = @func_6101() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
    %1110 = %1107.0;
    %1111 = %1108.0;
    %1112 = %1109.1;
    (%1110, %1111, %1112)
  };
  %1113() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_8928() -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  %1117 = fn () -> (Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
    %1114 = @func_6800() /* ty=(Tensor[(12, 14, 2), float64],) */;
    %1115 = @func_5136() /* ty=Tensor[(12, 14, 2), float64] */;
    %1116 = %1114.0;
    (%1115, %1116)
  };
  %1117() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_8328(%var_8326: bool, %var_8327: Tensor[(7, 1, 9), bool]) -> (Tensor[(7, 1, 9), bool], Tensor[(7, 1, 9), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) {
  @func_8324(%var_8326, %var_8327) /* ty=(Tensor[(7, 1, 9), bool], Tensor[(7, 1, 9), float32], Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */
}

def @func_9377(%var_9376: Tensor[(15, 6, 6), float64]) -> (Tensor[(15, 6, 6), float64],) {
  %1120 = fn (%var_9365: Tensor[(15, 6, 6), float64]) -> (Tensor[(15, 6, 6), float64],) {
    %1118 = cast(%var_9365, dtype="float64") /* ty=Tensor[(15, 6, 6), float64] */;
    %1119 = erf(%1118) /* ty=Tensor[(15, 6, 6), float64] */;
    (%1119,)
  };
  %1120(%var_9376) /* ty=(Tensor[(15, 6, 6), float64],) */
}

def @func_7663(%var_7655: Tensor[(12, 14, 2), float64]) -> Tensor[(12, 14, 2), uint32] {
  %1121 = @func_6954() /* ty=(Tensor[(12, 14, 2), float64],) */;
  %1122 = %1121.0;
  %1123 = cast(%var_7655, dtype="uint32") /* ty=Tensor[(12, 14, 2), uint32] */;
  %1124 = shape_of(%1122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1125 = cast(%1122, dtype="uint32") /* ty=Tensor[(12, 14, 2), uint32] */;
  %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  right_shift(%1125, %1126) /* ty=Tensor[(12, 14, 2), uint32] */
}

def @func_2628() -> (Tensor[(12, 14, 2), float64],) {
  %1127 = @func_1852() /* ty=(Tensor[(12, 14, 2), float64], Tensor[(12, 14, 2), float64]) */;
  %1128 = %1127.1;
  (%1128,)
}

def @func_5827(%var_5825: Tensor[(2, 14, 3), uint32]) -> (Tensor[(2, 14, 3), bool],) {
  @func_5824(%var_5825) /* ty=(Tensor[(2, 14, 3), bool],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

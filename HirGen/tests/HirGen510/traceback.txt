==========mod==========
#[version = "0.0.5"]
def @func_1994() -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), uint32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) {
  %0 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %1 = @func_943() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %2 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %3 = %2.1;
  %4 = @func_1578() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(5, 9, 16), float64]) */;
  %5 = %4.0;
  %6 = cast(%5, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %7 = shape_of(%3, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%3, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %10 = @func_1046() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %11 = cast(-2.10888f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %12 = cast(meta[relay.Constant][0] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %13 = reshape(%11, newshape=[]) /* ty=float64 */;
  %14 = reshape(%12, newshape=[10, 6, 2]) /* ty=Tensor[(10, 6, 2), float64] */;
  %15 = @func_1366(%13, %14) /* ty=(Tensor[(10, 6, 2), float64],) */;
  %16 = %0.1;
  %17 = %1.0;
  %18 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
  %19 = not_equal(%8, %9) /* ty=Tensor[(?, 14, 6), bool] */;
  %20 = %10.0;
  %21 = %15.0;
  %22 = @func_1540() /* ty=Tensor[(1, 14, 6), float32] */;
  (%16, %17, %18, %19, %20, %21, -2.10888f64 /* ty=float64 */, meta[relay.Constant][0] /* ty=Tensor[(120), float64] */, %22)
}

def @func_3588() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %23 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %24 = %23.0;
  %25 = @func_1655() /* ty=Tensor[(1, 14, 6), float32] */;
  (%24, %25)
}

def @func_9802() -> (Tensor[(1, 14, 6), float32], Tensor[(2, 6, 10), float32], Tensor[(120), float32]) {
  %26 = cast(meta[relay.Constant][1] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %27 = reshape(%26, newshape=[2, 6, 10]) /* ty=Tensor[(2, 6, 10), float32] */;
  %28 = @func_9044(%27) /* ty=(Tensor[(2, 6, 10), float32], Tensor[(1, 14, 6), float32]) */;
  %29 = @func_5989() /* ty=Tensor[(1, 14, 6), float32] */;
  %30 = %28.0;
  (%29, %30, meta[relay.Constant][1] /* ty=Tensor[(120), float32] */)
}

def @func_3680(%var_3646: Tensor[(15, 8, 10), float64]) -> (Tensor[(15, 8, 10), float64], Tensor[(15, 8, 10), float32], Tensor[(15, 8, 10), float64], Tensor[(?, 14, 6), float64]) {
  %31 = @func_2947() /* ty=Tensor[(15, 8, 10), float64] */;
  %32 = cast(%var_3646, dtype="float64") /* ty=Tensor[(15, 8, 10), float64] */;
  %33 = shape_of(%31, dtype="int32") /* ty=Tensor[(3), int32] */;
  %34 = cast(%31, dtype="float64") /* ty=Tensor[(15, 8, 10), float64] */;
  %35 = dyn.reshape(%32, %33, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %36 = cast(%31, dtype="float32") /* ty=Tensor[(15, 8, 10), float32] */;
  %37 = @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %38 = %37.0;
  %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 14, 6), float32] */, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %40 = shape_of(%38, dtype="int32") /* ty=Tensor[(3), int32] */;
  %41 = cast(%38, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %42 = dyn.reshape(%39, %40, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %43 = power(%34, %35) /* ty=Tensor[(15, 8, 10), float64] */;
  %44 = erf(%36) /* ty=Tensor[(15, 8, 10), float32] */;
  %45 = @func_2947() /* ty=Tensor[(15, 8, 10), float64] */;
  %46 = divide(%41, %42) /* ty=Tensor[(?, 14, 6), float64] */;
  (%43, %44, %45, %46)
}

def @func_11440(%var_11427: Tensor[(16, 14, 6), float32]) -> (Tensor[(16, 14, 6), int32],) {
  %47 = @func_3924() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %48 = %47.0;
  %49 = cast(%48, dtype="int32") /* ty=Tensor[(1, 14, 6), int32] */;
  %50 = cast(%var_11427, dtype="int32") /* ty=Tensor[(16, 14, 6), int32] */;
  %51 = minimum(%49, %50) /* ty=Tensor[(16, 14, 6), int32] */;
  (%51,)
}

def @func_1268() -> (Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), float32]) {
  %52 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %53 = @func_435() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %54 = %53.0;
  %55 = @func_1046() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %56 = %55.0;
  %57 = cast(%56, dtype="uint32") /* ty=Tensor[(?, 14, 6), uint32] */;
  %58 = shape_of(%54, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%54, dtype="uint32") /* ty=Tensor[(1, 14, 6), uint32] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %61 = bitwise_xor(%59, %60) /* ty=Tensor[(?, 14, 6), uint32] */;
  %62 = cast(%61, dtype="bool") /* ty=Tensor[(?, 14, 6), bool] */;
  %63 = shape_of(%54, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%54, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %66 = cast(%61, dtype="float32") /* ty=Tensor[(?, 14, 6), float32] */;
  %67 = %52.1;
  %68 = equal(%64, %65) /* ty=Tensor[(?, 14, 6), bool] */;
  %69 = atanh(%66) /* ty=Tensor[(?, 14, 6), float32] */;
  (%67, %68, %69)
}

def @func_2523() -> (Tensor[(1, 14, 6), float32],) {
  %70 = @func_2259() /* ty=Tensor[(1, 14, 6), float32] */;
  %71 = cast(%70, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %72 = asinh(%71) /* ty=Tensor[(1, 14, 6), float32] */;
  (%72,)
}

def @func_3720() -> Tensor[(1, 14, 6), float32] {
  %73 = @func_3114() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %73.0
}

def @func_9887() -> (Tensor[(1, 14, 6), float32],) {
  %74 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %75 = %74.0;
  (%75,)
}

def @func_8503(%var_8471: Tensor[(4, 84), float32]) -> (Tensor[(1, 14, 6), float32], Tensor[(4, 84), float32], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %76 = @func_3924() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %77 = cast(%var_8471, dtype="float32") /* ty=Tensor[(4, 84), float32] */;
  %78 = reshape(%77, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %79 = @func_4238(%78) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(4, 14, 6), bool], Tensor[(336), float32]) */;
  %80 = %79.1;
  %81 = cast(%80, dtype="float32") /* ty=Tensor[(4, 14, 6), float32] */;
  %82 = @func_3738() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %83 = %76.0;
  %84 = @func_7835() /* ty=Tensor[(1, 14, 6), float32] */;
  %85 = cosh(%81) /* ty=Tensor[(4, 14, 6), float32] */;
  %86 = %82.0;
  (%83, %var_8471, %84, %85, %86)
}

def @func_2898() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %87 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %88 = @func_1748() /* ty=Tensor[(1, 14, 6), float32] */;
  %89 = %87.1;
  (%88, %89)
}

def @func_2329() -> (Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) {
  %90 = @func_1268() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), float32]) */;
  %91 = @func_1268() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), float32]) */;
  %92 = %91.1;
  %93 = cast(%92, dtype="float64") /* ty=Tensor[(?, 14, 6), float64] */;
  %94 = %90.2;
  %95 = rsqrt(%93) /* ty=Tensor[(?, 14, 6), float64] */;
  (%94, %95)
}

def @func_10102() -> (Tensor[(?, 14, 6), uint32],) {
  %96 = @func_5292() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %97 = %96.2;
  (%97,)
}

def @func_7886() -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32]) {
  %98 = @func_3757() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %99 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %100 = %98.0;
  %101 = @func_3279() /* ty=Tensor[(1, 14, 6), float32] */;
  %102 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  %103 = %99.0;
  (%100, %101, %102, %103)
}

def @func_8419(%var_8417: Tensor[(1200), float64]) -> (Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(10, 10, 12), bool], Tensor[(120), float64], Tensor[(1200), float64]) {
  %104 = cast(meta[relay.Constant][3] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %105 = cast(%var_8417, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %106 = reshape(%104, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float64] */;
  %107 = reshape(%105, newshape=[10, 10, 12]) /* ty=Tensor[(10, 10, 12), float64] */;
  %108 = @func_3472(%106, %107) /* ty=(Tensor[(2, 10, 12), float64], Tensor[(10, 10, 12), bool]) */;
  %109 = @func_7456() /* ty=Tensor[(?, 14, 6), float64] */;
  %110 = @func_2665() /* ty=Tensor[(1, 14, 6), float32] */;
  %111 = %108.1;
  (%109, %110, %111, meta[relay.Constant][3] /* ty=Tensor[(120), float64] */, %var_8417)
}

def @func_1623(%var_1608: float64) -> (Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) {
  %112 = cast(%var_1608, dtype="float64") /* ty=float64 */;
  %113 = reshape(%112, newshape=[]) /* ty=float64 */;
  %114 = @func_1005(%113) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(14, 16, 9), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %115 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %116 = %115.5;
  %117 = cast(%116, dtype="float32") /* ty=Tensor[(13, 14, 6), float32] */;
  %118 = cast(%var_1608, dtype="float32") /* ty=float32 */;
  %119 = %114.1;
  %120 = floor_divide(%117, %118) /* ty=Tensor[(13, 14, 6), float32] */;
  (%119, %120)
}

def @func_2679() -> Tensor[(13, 14, 6), int32] {
  %121 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %121.5
}

def @func_2765() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %122 = @func_1994() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), uint32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) */;
  %123 = @func_1655() /* ty=Tensor[(1, 14, 6), float32] */;
  %124 = cast(%123, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %125 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %126 = @func_2665() /* ty=Tensor[(1, 14, 6), float32] */;
  %127 = %122.4;
  %128 = log(%124) /* ty=Tensor[(1, 14, 6), float32] */;
  %129 = %125.2;
  (%126, %127, %128, %129)
}

def @func_5292() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %130 = @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %131 = @func_2898() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %132 = @func_2445() /* ty=Tensor[(1, 14, 6), float32] */;
  %133 = %130.0;
  %134 = %131.1;
  (%132, %133, %134)
}

def @func_2407() -> Tensor[(?, 14, 6), uint32] {
  %135 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %135.1
}

def @func_9044(%var_9018: Tensor[(2, 6, 10), float32]) -> (Tensor[(2, 6, 10), float32], Tensor[(1, 14, 6), float32]) {
  %136 = cast(%var_9018, dtype="float32") /* ty=Tensor[(2, 6, 10), float32] */;
  %137 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(2, 6, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %138 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 6, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 6, 10), float32] */;
  %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %140 = @func_4315() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %141 = floor_mod(%138, %139) /* ty=Tensor[(2, 6, 10), float32] */;
  %142 = %140.0;
  (%141, %142)
}

def @func_6164() -> Tensor[(1, 14, 6), float32] {
  %143 = @func_2291() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %143.0
}

def @func_9739() -> (Tensor[(1, 14, 6), float32], Tensor[(16, 14, 6), float64], Tensor[(1344), float32]) {
  %144 = @func_9092() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %145 = cast(meta[relay.Constant][5] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %146 = reshape(%145, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), float32] */;
  %147 = %144.0;
  %148 = @func_8668(%146) /* ty=Tensor[(16, 14, 6), float64] */;
  (%147, %148, meta[relay.Constant][5] /* ty=Tensor[(1344), float32] */)
}

def @func_1366(%var_1346: float64, %var_1347: Tensor[(10, 6, 2), float64]) -> (Tensor[(10, 6, 2), float64],) {
  %149 = cast(%var_1346, dtype="float64") /* ty=float64 */;
  %150 = cast(%var_1347, dtype="float64") /* ty=Tensor[(10, 6, 2), float64] */;
  %151 = floor_divide(%149, %150) /* ty=Tensor[(10, 6, 2), float64] */;
  (%151,)
}

def @func_9414() -> Tensor[(?, 14, 6), float64] {
  @func_7456() /* ty=Tensor[(?, 14, 6), float64] */
}

def @func_7145() -> (Tensor[(1, 14, 6), float32], Tensor[(4, 12, 9), float64], Tensor[(216, 2), int32]) {
  %152 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %153 = cast(meta[relay.Constant][6] /* ty=Tensor[(216, 2), int32] */, dtype="int32") /* ty=Tensor[(216, 2), int32] */;
  %154 = cast(meta[relay.Constant][6] /* ty=Tensor[(216, 2), int32] */, dtype="int32") /* ty=Tensor[(216, 2), int32] */;
  %155 = reshape(%153, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), int32] */;
  %156 = reshape(%154, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), int32] */;
  %157 = @func_3161(%155, %156) /* ty=(Tensor[(4, 12, 9), float64],) */;
  %158 = %152.0;
  %159 = %157.0;
  (%158, %159, meta[relay.Constant][6] /* ty=Tensor[(216, 2), int32] */)
}

def @func_10224(%var_10213: Tensor[(1, 6, 5), float64]) -> (Tensor[(?, 6, 5), float64], Tensor[(1, 14, 6), float32]) {
  %160 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 6, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %161 = shape_of(%var_10213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %162 = cast(%var_10213, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %163 = dyn.reshape(%160, %161, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %164 = floor_mod(%162, %163) /* ty=Tensor[(?, 6, 5), float64] */;
  %165 = @func_9172() /* ty=Tensor[(1, 14, 6), float32] */;
  (%164, %165)
}

def @func_4809(%var_4774: Tensor[(14, 78), float32]) -> (Tensor[(1, 14, 6), float32], Tensor[(10, 5, 8), float64], Tensor[(4, 12, 9), float64], Tensor[(432), int32], Tensor[(13, 14, 6), int32], Tensor[(14, 78), float32], Tensor[(4, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %166 = cast(meta[relay.Constant][8] /* ty=Tensor[(432), int32] */, dtype="int32") /* ty=Tensor[(432), int32] */;
  %167 = cast(meta[relay.Constant][8] /* ty=Tensor[(432), int32] */, dtype="int32") /* ty=Tensor[(432), int32] */;
  %168 = reshape(%166, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), int32] */;
  %169 = reshape(%167, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), int32] */;
  %170 = @func_3161(%168, %169) /* ty=(Tensor[(4, 12, 9), float64],) */;
  %171 = cast(%var_4774, dtype="float32") /* ty=Tensor[(14, 78), float32] */;
  %172 = reshape(%171, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %173 = @func_678(%172) /* ty=(Tensor[(?, 14, 6), uint8], Tensor[(13, 14, 6), int32]) */;
  %174 = @func_2765() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %175 = %174.0;
  %176 = cast(%175, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %177 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 14, 6), float32] */, dtype="float32") /* ty=Tensor[(4, 14, 6), float32] */;
  %178 = @func_3114() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %179 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
  %180 = @func_1133() /* ty=Tensor[(10, 5, 8), float64] */;
  %181 = %170.0;
  %182 = %173.1;
  %183 = floor_divide(%176, %177) /* ty=Tensor[(4, 14, 6), float32] */;
  %184 = %178.1;
  (%179, %180, %181, meta[relay.Constant][8] /* ty=Tensor[(432), int32] */, %182, %var_4774, %183, %184)
}

def @func_11050() -> Tensor[(?, 14, 6), float32] {
  %185 = @func_3904() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %186 = %185.0;
  %187 = @func_5923() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %188 = %187.0;
  %189 = cast(%188, dtype="float32") /* ty=Tensor[(?, 14, 6), float32] */;
  %190 = shape_of(%186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(%186, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  multiply(%191, %192) /* ty=Tensor[(?, 14, 6), float32] */
}

def @func_11486(%var_11474: Tensor[(7, 4, 13), float32], %var_11480: float64) -> (Tensor[(7, 4, 13), float32], Tensor[(120), float64], float64) {
  %193 = cast(%var_11474, dtype="float32") /* ty=Tensor[(7, 4, 13), float32] */;
  %194 = cast(%var_11480, dtype="float64") /* ty=float64 */;
  %195 = reshape(%194, newshape=[]) /* ty=float64 */;
  %196 = @func_10016(%195) /* ty=(Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(11, 14, 6), bool], Tensor[(924), uint32], Tensor[(?, 14, 6), bool], Tensor[(1, 14, 6), float32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) */;
  %197 = acosh(%193) /* ty=Tensor[(7, 4, 13), float32] */;
  %198 = %196.8;
  (%197, %198, %var_11480)
}

def @func_5422(%var_5396: Tensor[(14, 14, 6), float32]) -> (Tensor[(14, 14, 6), int8], Tensor[(14, 14, 6), bool]) {
  %199 = @func_1550() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %200 = %199.0;
  %201 = cast(%var_5396, dtype="int8") /* ty=Tensor[(14, 14, 6), int8] */;
  %202 = cast(%200, dtype="int8") /* ty=Tensor[(1, 14, 6), int8] */;
  %203 = cast(%200, dtype="int16") /* ty=Tensor[(1, 14, 6), int16] */;
  %204 = cast(%var_5396, dtype="int16") /* ty=Tensor[(14, 14, 6), int16] */;
  %205 = bitwise_or(%203, %204) /* ty=Tensor[(14, 14, 6), int16] */;
  %206 = cast(%205, dtype="bool") /* ty=Tensor[(14, 14, 6), bool] */;
  %207 = shape_of(%var_5396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(%var_5396, dtype="bool") /* ty=Tensor[(14, 14, 6), bool] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %210 = bitwise_xor(%201, %202) /* ty=Tensor[(14, 14, 6), int8] */;
  %211 = greater_equal(%208, %209) /* ty=Tensor[(14, 14, 6), bool] */;
  (%210, %211)
}

def @func_5858() -> (Tensor[(?, 14, 6), uint32],) {
  %212 = @func_2898() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %213 = %212.1;
  (%213,)
}

def @func_11459() -> (Tensor[(?, 14, 6), uint32],) {
  %214 = @func_6397() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64]) */;
  %215 = %214.0;
  (%215,)
}

def @func_2291() -> (Tensor[(1, 14, 6), float32],) {
  %216 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  (%216,)
}

def @func_6118(%var_6094: Tensor[(1, 14, 6), float64], %var_6106: Tensor[(15, 3, 12), bool]) -> (Tensor[(?, 14, 6), bool], Tensor[(270, 2), uint64], Tensor[(15, 3, 12), bool]) {
  %217 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %218 = %217.1;
  %219 = cast(%var_6094, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %220 = shape_of(%218, dtype="int32") /* ty=Tensor[(3), int32] */;
  %221 = cast(%218, dtype="bool") /* ty=Tensor[(?, 14, 6), bool] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %223 = cast(meta[relay.Constant][10] /* ty=Tensor[(270, 2), uint64] */, dtype="uint64") /* ty=Tensor[(270, 2), uint64] */;
  %224 = cast(meta[relay.Constant][10] /* ty=Tensor[(270, 2), uint64] */, dtype="uint64") /* ty=Tensor[(270, 2), uint64] */;
  %225 = reshape(%223, newshape=[15, 3, 12]) /* ty=Tensor[(15, 3, 12), uint64] */;
  %226 = reshape(%224, newshape=[15, 3, 12]) /* ty=Tensor[(15, 3, 12), uint64] */;
  %227 = @func_4200(%225, %226) /* ty=Tensor[(15, 3, 12), bool] */;
  %228 = cast(%var_6106, dtype="bool") /* ty=Tensor[(15, 3, 12), bool] */;
  %229 = shape_of(%227, dtype="int32") /* ty=Tensor[(3), int32] */;
  %230 = cast(%227, dtype="bool") /* ty=Tensor[(15, 3, 12), bool] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %232 = logical_or(%221, %222) /* ty=Tensor[(?, 14, 6), bool] */;
  %233 = greater_equal(%230, %231) /* ty=Tensor[(15, 3, 12), bool] */;
  (%232, meta[relay.Constant][10] /* ty=Tensor[(270, 2), uint64] */, %233)
}

def @func_5989() -> Tensor[(1, 14, 6), float32] {
  %234 = @func_4315() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %234.0
}

def @func_3114() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %235 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %236 = @func_2898() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %237 = %236.1;
  %238 = cast(%237, dtype="float64") /* ty=Tensor[(?, 14, 6), float64] */;
  %239 = sin(%238) /* ty=Tensor[(?, 14, 6), float64] */;
  %240 = cast(%239, dtype="float32") /* ty=Tensor[(?, 14, 6), float32] */;
  %241 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %242 = @func_1540() /* ty=Tensor[(1, 14, 6), float32] */;
  %243 = %235.1;
  %244 = atan(%240) /* ty=Tensor[(?, 14, 6), float32] */;
  %245 = %241.2;
  (%242, %243, %244, %245)
}

def @func_8010(%var_7914: float64, %var_7977: Tensor[(1344, 1), uint32], %var_7978: Tensor[(1200), float64], %var_8006: Tensor[(1092), float32]) -> (Tensor[(?, 14, 6), float32], float64, float64, Tensor[(7, 15, 8), float64], Tensor[(1, 840), int8], Tensor[(1, 14, 6), float32], Tensor[(450), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1344, 1), uint32], Tensor[(1200), float64], Tensor[(1, 168), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1092), float32]) {
  %246 = @func_7256() /* ty=(Tensor[(10, 5, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %247 = %246.2;
  %248 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %249 = %248.0;
  %250 = cast(%249, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %251 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%247, dtype="float32") /* ty=Tensor[(?, 14, 6), float32] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %254 = cast(%var_7914, dtype="float64") /* ty=float64 */;
  %255 = reshape(%254, newshape=[]) /* ty=float64 */;
  %256 = @func_5893(%255) /* ty=(Tensor[(?, 14, 6), float64], Tensor[(13, 14, 6), float32], float64) */;
  %257 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 840), int8] */, dtype="int8") /* ty=Tensor[(1, 840), int8] */;
  %258 = reshape(%257, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int8] */;
  %259 = @func_6734(%258) /* ty=(Tensor[(7, 15, 8), bool], Tensor[(7, 15, 8), float64]) */;
  %260 = cast(meta[relay.Constant][12] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %261 = cast(meta[relay.Constant][12] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %262 = reshape(%260, newshape=[15, 15, 2]) /* ty=Tensor[(15, 15, 2), float64] */;
  %263 = reshape(%261, newshape=[15, 15, 2]) /* ty=Tensor[(15, 15, 2), float64] */;
  %264 = @func_7820(%262, %263) /* ty=(Tensor[(15, 15, 2), bool], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %265 = cast(meta[relay.Constant][12] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %266 = cast(meta[relay.Constant][12] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %267 = reshape(%265, newshape=[15, 15, 2]) /* ty=Tensor[(15, 15, 2), float64] */;
  %268 = reshape(%266, newshape=[15, 15, 2]) /* ty=Tensor[(15, 15, 2), float64] */;
  %269 = @func_7820(%267, %268) /* ty=(Tensor[(15, 15, 2), bool], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %270 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 168), float32] */, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
  %271 = reshape(%270, newshape=[2, 14, 6]) /* ty=Tensor[(2, 14, 6), float32] */;
  %272 = @func_7711(%271) /* ty=(Tensor[(2, 14, 6), float64], Tensor[(1, 14, 6), float32]) */;
  %273 = cast(%var_7977, dtype="uint32") /* ty=Tensor[(1344, 1), uint32] */;
  %274 = cast(%var_7978, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %275 = reshape(%273, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), uint32] */;
  %276 = reshape(%274, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %277 = @func_5366(%275, %276) /* ty=(Tensor[(16, 14, 6), int64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(126), uint8], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) */;
  %278 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 168), float32] */, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
  %279 = @func_3445() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %280 = cast(%var_8006, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %281 = reshape(%280, newshape=[14, 78]) /* ty=Tensor[(14, 78), float32] */;
  %282 = @func_4809(%281) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(10, 5, 8), float64], Tensor[(4, 12, 9), float64], Tensor[(432), int32], Tensor[(13, 14, 6), int32], Tensor[(14, 78), float32], Tensor[(4, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %283 = mod(%252, %253) /* ty=Tensor[(?, 14, 6), float32] */;
  %284 = %256.2;
  %285 = %259.1;
  %286 = %264.1;
  %287 = @func_1748() /* ty=Tensor[(1, 14, 6), float32] */;
  %288 = @func_2445() /* ty=Tensor[(1, 14, 6), float32] */;
  %289 = %269.1;
  %290 = %272.1;
  %291 = %277.2;
  %292 = acos(%278) /* ty=Tensor[(1, 168), float32] */;
  %293 = %279.0;
  %294 = %282.7;
  (%283, %284, %var_7914, %285, meta[relay.Constant][11] /* ty=Tensor[(1, 840), int8] */, %286, meta[relay.Constant][12] /* ty=Tensor[(450), float64] */, %287, %288, %289, %290, %291, %var_7977, %var_7978, %292, %293, %294, %var_8006)
}

def @func_8712() -> Tensor[(?, 14, 6), float64] {
  @func_6301() /* ty=Tensor[(?, 14, 6), float64] */
}

def @func_5659() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) {
  %295 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %296 = @func_4315() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %297 = @func_5056() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %298 = %295.0;
  %299 = %296.0;
  %300 = %297.1;
  (%298, %299, %300)
}

def @func_7318(%var_7305: Tensor[(10, 5, 10), float32]) -> Tensor[(10, 5, 10), float32] {
  %301 = cast(%var_7305, dtype="float32") /* ty=Tensor[(10, 5, 10), float32] */;
  rsqrt(%301) /* ty=Tensor[(10, 5, 10), float32] */
}

def @func_7711(%var_7691: Tensor[(2, 14, 6), float32]) -> (Tensor[(2, 14, 6), float64], Tensor[(1, 14, 6), float32]) {
  %302 = @func_3445() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %303 = %302.1;
  %304 = cast(%303, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %305 = cast(%var_7691, dtype="float64") /* ty=Tensor[(2, 14, 6), float64] */;
  %306 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %307 = mod(%304, %305) /* ty=Tensor[(2, 14, 6), float64] */;
  %308 = %306.0;
  (%307, %308)
}

def @func_5948() -> Tensor[(?, 14, 6), uint32] {
  %309 = @func_5923() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %309.0
}

def @func_6514() -> Tensor[(1, 14, 6), float32] {
  %310 = @func_2291() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %310.0
}

def @func_6281() -> (Tensor[(1, 14, 6), float32],) {
  %311 = @func_2765() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %312 = %311.0;
  (%312,)
}

def @func_11627() -> (Tensor[(?, 14, 6), float32],) {
  %313 = @func_11050() /* ty=Tensor[(?, 14, 6), float32] */;
  (%313,)
}

def @func_11140() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float32], Tensor[(?, 14, 6), uint32]) {
  %314 = @func_10389() /* ty=(Tensor[(13, 14, 6), bool], Tensor[(15, 8, 10), float32], Tensor[(1344), uint32], Tensor[(1200), float64]) */;
  %315 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %316 = @func_8770() /* ty=Tensor[(1, 14, 6), float32] */;
  %317 = @func_1748() /* ty=Tensor[(1, 14, 6), float32] */;
  %318 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  %319 = %314.1;
  %320 = %315.1;
  (%316, %317, %318, %319, %320)
}

def @func_1655() -> Tensor[(1, 14, 6), float32] {
  @func_1344() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_6397() -> (Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64]) {
  %321 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %322 = %321.1;
  %323 = @func_2947() /* ty=Tensor[(15, 8, 10), float64] */;
  (%322, %323)
}

def @func_6858() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), bool], Tensor[(336), float32], Tensor[(1, 14, 6), float32]) {
  %324 = @func_4315() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %325 = @func_5659() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %326 = @func_943() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %327 = cast(meta[relay.Constant][14] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %328 = reshape(%327, newshape=[4, 14, 6]) /* ty=Tensor[(4, 14, 6), float32] */;
  %329 = %324.0;
  %330 = %325.2;
  %331 = %326.0;
  %332 = @func_3306(%328) /* ty=Tensor[(4, 14, 6), bool] */;
  %333 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  (%329, %330, %331, %332, meta[relay.Constant][14] /* ty=Tensor[(336), float32] */, %333)
}

def @func_9362(%var_9353: Tensor[(16, 14, 6), float64]) -> (Tensor[(1, 14, 6), float32], float64, Tensor[(?, 14, 6), uint32], Tensor[(16, 14, 6), uint32]) {
  %334 = cast(7.55746f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %335 = reshape(%334, newshape=[]) /* ty=float64 */;
  %336 = @func_1866(%335) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), float32], float64, Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %337 = @func_8611() /* ty=(Tensor[(?, 14, 6), float64], Tensor[(?, 14, 6), float64]) */;
  %338 = %337.1;
  %339 = cast(%338, dtype="uint32") /* ty=Tensor[(?, 14, 6), uint32] */;
  %340 = cast(%var_9353, dtype="uint32") /* ty=Tensor[(16, 14, 6), uint32] */;
  %341 = %336.5;
  %342 = @func_7548() /* ty=Tensor[(?, 14, 6), uint32] */;
  %343 = logical_xor(%339, %340) /* ty=Tensor[(16, 14, 6), uint32] */;
  (%341, 7.55746f64 /* ty=float64 */, %342, %343)
}

def @func_9692() -> Tensor[(1, 14, 6), float32] {
  %344 = @func_7256() /* ty=(Tensor[(10, 5, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %344.3
}

def @func_10611() -> (Tensor[(?, 14, 6), float64], Tensor[(4, 14, 6), bool], Tensor[(168, 2), float32], Tensor[(1008, 1), float64], Tensor[(1, 14, 6), float32]) {
  %345 = @func_5948() /* ty=Tensor[(?, 14, 6), uint32] */;
  %346 = @func_435() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %347 = %346.0;
  %348 = cast(%347, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %349 = shape_of(%345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%345, dtype="float64") /* ty=Tensor[(?, 14, 6), float64] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %352 = cast(meta[relay.Constant][15] /* ty=Tensor[(1008, 1), float32] */, dtype="float32") /* ty=Tensor[(1008, 1), float32] */;
  %353 = cast(meta[relay.Constant][16] /* ty=Tensor[(168, 2), float32] */, dtype="float32") /* ty=Tensor[(168, 2), float32] */;
  %354 = reshape(%352, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float32] */;
  %355 = reshape(%353, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %356 = @func_9305(%354, %355) /* ty=(Tensor[(12, 14, 6), bool], Tensor[(4, 14, 6), bool], Tensor[(336), float32], Tensor[(?, 14, 6), uint32]) */;
  %357 = cast(meta[relay.Constant][15] /* ty=Tensor[(1008, 1), float32] */, dtype="float64") /* ty=Tensor[(1008, 1), float64] */;
  %358 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %359 = floor_divide(%350, %351) /* ty=Tensor[(?, 14, 6), float64] */;
  %360 = %356.1;
  %361 = asin(%357) /* ty=Tensor[(1008, 1), float64] */;
  %362 = %358.0;
  (%359, %360, meta[relay.Constant][16] /* ty=Tensor[(168, 2), float32] */, %361, %362)
}

def @func_444() -> Tensor[(1, 14, 6), float32] {
  %363 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %363.0
}

def @func_1540() -> Tensor[(1, 14, 6), float32] {
  %364 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %364.0
}

def @func_371() -> (Tensor[(1, 14, 6), float32],) {
  %365 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 14, 6), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %366 = sinh(%365) /* ty=Tensor[(1, 14, 6), float32] */;
  (%366,)
}

def @func_2689() -> Tensor[(10, 5, 8), float64] {
  @func_1133() /* ty=Tensor[(10, 5, 8), float64] */
}

def @func_10389() -> (Tensor[(13, 14, 6), bool], Tensor[(15, 8, 10), float32], Tensor[(1344), uint32], Tensor[(1200), float64]) {
  %367 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %368 = cast(%367, dtype="bool") /* ty=Tensor[(?, 14, 6), bool] */;
  %369 = cast(meta[relay.Constant][18] /* ty=Tensor[(13, 14, 6), uint32] */, dtype="bool") /* ty=Tensor[(13, 14, 6), bool] */;
  %370 = cast(meta[relay.Constant][19] /* ty=Tensor[(1344), uint32] */, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
  %371 = cast(meta[relay.Constant][20] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %372 = reshape(%370, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), uint32] */;
  %373 = reshape(%371, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %374 = @func_5366(%372, %373) /* ty=(Tensor[(16, 14, 6), int64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(126), uint8], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) */;
  %375 = greater(%368, %369) /* ty=Tensor[(13, 14, 6), bool] */;
  %376 = %374.4;
  (%375, %376, meta[relay.Constant][19] /* ty=Tensor[(1344), uint32] */, meta[relay.Constant][20] /* ty=Tensor[(1200), float64] */)
}

def @func_8668(%var_8657: Tensor[(16, 14, 6), float32]) -> Tensor[(16, 14, 6), float64] {
  %377 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %378 = %377.0;
  %379 = cast(%378, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %380 = cast(%var_8657, dtype="float64") /* ty=Tensor[(16, 14, 6), float64] */;
  floor_divide(%379, %380) /* ty=Tensor[(16, 14, 6), float64] */
}

def @func_6678(%var_6655: Tensor[(11, 14, 6), uint32]) -> Tensor[(11, 14, 6), bool] {
  %381 = @func_5948() /* ty=Tensor[(?, 14, 6), uint32] */;
  %382 = cast(%381, dtype="bool") /* ty=Tensor[(?, 14, 6), bool] */;
  %383 = cast(%var_6655, dtype="bool") /* ty=Tensor[(11, 14, 6), bool] */;
  less_equal(%382, %383) /* ty=Tensor[(11, 14, 6), bool] */
}

def @func_11525() -> Tensor[(1, 14, 6), float32] {
  %384 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %384.1
}

def @func_10416(%var_10410: Tensor[(2, 15, 12), float64]) -> Tensor[(2, 15, 12), float64] {
  %385 = cast(%var_10410, dtype="float64") /* ty=Tensor[(2, 15, 12), float64] */;
  erf(%385) /* ty=Tensor[(2, 15, 12), float64] */
}

def @func_10703() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), bool]) {
  %386 = @func_7256() /* ty=(Tensor[(10, 5, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %387 = cast(-7.34809f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %388 = reshape(%387, newshape=[]) /* ty=float64 */;
  %389 = @func_6239(%388) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(14, 16, 9), float64], float64) */;
  %390 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
  %391 = cast(%390, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %392 = cast(-7.34809f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %393 = %386.4;
  %394 = %389.0;
  %395 = less_equal(%391, %392) /* ty=Tensor[(1, 14, 6), bool] */;
  (%393, %394, %395)
}

def @func_1780() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %396 = @func_943() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %397 = %396.0;
  %398 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  (%397, %398)
}

def @func_1830() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %399 = @func_1083() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %400 = @func_1655() /* ty=Tensor[(1, 14, 6), float32] */;
  %401 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
  %402 = %399.0;
  (%400, %401, %402)
}

def @func_2665() -> Tensor[(1, 14, 6), float32] {
  %403 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %403.0
}

def @func_621() -> Tensor[(?, 14, 6), uint32] {
  %404 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %405 = %404.0;
  %406 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %407 = %406.0;
  %408 = cast(%407, dtype="uint8") /* ty=Tensor[(1, 14, 6), uint8] */;
  %409 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%405, dtype="uint8") /* ty=Tensor[(1, 14, 6), uint8] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %412 = bitwise_and(%410, %411) /* ty=Tensor[(?, 14, 6), uint8] */;
  %413 = cast(%412, dtype="uint32") /* ty=Tensor[(?, 14, 6), uint32] */;
  %414 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%405, dtype="uint32") /* ty=Tensor[(1, 14, 6), uint32] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%415, %416) /* ty=Tensor[(?, 14, 6), uint32] */
}

def @func_5893(%var_5886: float64) -> (Tensor[(?, 14, 6), float64], Tensor[(13, 14, 6), float32], float64) {
  %417 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %418 = cast(%var_5886, dtype="float64") /* ty=float64 */;
  %419 = reshape(%418, newshape=[]) /* ty=float64 */;
  %420 = @func_1623(%419) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) */;
  %421 = %417.1;
  %422 = %420.1;
  (%421, %422, %var_5886)
}

def @func_9866() -> (Tensor[(1, 14, 6), float32], Tensor[(16, 14, 13), float32], Tensor[(2912), float32], Tensor[(?, 14, 6), uint32]) {
  %423 = cast(meta[relay.Constant][21] /* ty=Tensor[(2912), float32] */, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %424 = cast(meta[relay.Constant][21] /* ty=Tensor[(2912), float32] */, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %425 = reshape(%423, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), float32] */;
  %426 = reshape(%424, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), float32] */;
  %427 = @func_3701(%425, %426) /* ty=(Tensor[(16, 14, 13), float32], Tensor[(16, 14, 13), float64]) */;
  %428 = @func_3738() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %429 = @func_1655() /* ty=Tensor[(1, 14, 6), float32] */;
  %430 = %427.0;
  %431 = %428.0;
  (%429, %430, meta[relay.Constant][21] /* ty=Tensor[(2912), float32] */, %431)
}

def @func_3406() -> (Tensor[(1, 14, 6), float32],) {
  %432 = @func_3114() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %433 = %432.1;
  (%433,)
}

def @func_3904() -> (Tensor[(1, 14, 6), float32],) {
  %434 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  (%434,)
}

def @func_5979(%var_5970: Tensor[(6, 14, 6), float32]) -> (Tensor[(6, 14, 6), uint16], Tensor[(6, 14, 6), float32]) {
  %435 = @func_1550() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %436 = %435.1;
  %437 = cast(%436, dtype="uint16") /* ty=Tensor[(1, 14, 6), uint16] */;
  %438 = cast(%var_5970, dtype="uint16") /* ty=Tensor[(6, 14, 6), uint16] */;
  %439 = cast(%var_5970, dtype="float32") /* ty=Tensor[(6, 14, 6), float32] */;
  %440 = multiply(%437, %438) /* ty=Tensor[(6, 14, 6), uint16] */;
  %441 = exp(%439) /* ty=Tensor[(6, 14, 6), float32] */;
  (%440, %441)
}

def @func_8770() -> Tensor[(1, 14, 6), float32] {
  @func_8314() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_9092() -> (Tensor[(1, 14, 6), float32],) {
  %442 = @func_8753() /* ty=Tensor[(1, 14, 6), float32] */;
  (%442,)
}

def @func_10293() -> Tensor[(?, 14, 6), float64] {
  %443 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %443.1
}

def @func_1083() -> (Tensor[(1, 14, 6), float32],) {
  %444 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  (%444,)
}

def @func_2384() -> Tensor[(?, 14, 6), float32] {
  %445 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %445.0
}

def @func_4200(%var_4187: Tensor[(15, 3, 12), uint64], %var_4188: Tensor[(15, 3, 12), uint64]) -> Tensor[(15, 3, 12), bool] {
  %446 = cast(%var_4188, dtype="bool") /* ty=Tensor[(15, 3, 12), bool] */;
  %447 = shape_of(%var_4187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %448 = cast(%var_4187, dtype="bool") /* ty=Tensor[(15, 3, 12), bool] */;
  %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%448, %449) /* ty=Tensor[(15, 3, 12), bool] */
}

def @func_3269(%var_3247: Tensor[(4, 14, 6), uint32]) -> (Tensor[(?, 14, 6), float32], Tensor[(4, 14, 6), uint64], Tensor[(?, 14, 6), uint32]) {
  %450 = @func_1268() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), float32]) */;
  %451 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %452 = cast(%451, dtype="uint64") /* ty=Tensor[(?, 14, 6), uint64] */;
  %453 = cast(%var_3247, dtype="uint64") /* ty=Tensor[(4, 14, 6), uint64] */;
  %454 = %450.2;
  %455 = bitwise_or(%452, %453) /* ty=Tensor[(4, 14, 6), uint64] */;
  %456 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  (%454, %455, %456)
}

def @func_10188() -> (Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float64], Tensor[(1200), float64]) {
  %457 = @func_435() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %458 = cast(meta[relay.Constant][22] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %459 = reshape(%458, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float64] */;
  %460 = @func_5844(%459) /* ty=(Tensor[(15, 8, 10), uint8], Tensor[(15, 8, 10), float64]) */;
  %461 = %457.0;
  %462 = %460.1;
  (%461, %462, meta[relay.Constant][22] /* ty=Tensor[(1200), float64] */)
}

def @func_1550() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %463 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %464 = %463.0;
  %465 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
  (%464, %465)
}

def @func_3345() -> Tensor[(1, 14, 6), float32] {
  %466 = @func_1830() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %466.1
}

def @func_8847() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %467 = @func_3345() /* ty=Tensor[(1, 14, 6), float32] */;
  %468 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  (%467, %468)
}

def @func_3161(%var_3134: Tensor[(4, 12, 9), int32], %var_3135: Tensor[(4, 12, 9), int32]) -> (Tensor[(4, 12, 9), float64],) {
  %469 = cast(%var_3135, dtype="int32") /* ty=Tensor[(4, 12, 9), int32] */;
  %470 = shape_of(%var_3134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %471 = cast(%var_3134, dtype="int32") /* ty=Tensor[(4, 12, 9), int32] */;
  %472 = dyn.reshape(%469, %470, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %473 = logical_xor(%471, %472) /* ty=Tensor[(4, 12, 9), int32] */;
  %474 = cast(%473, dtype="float64") /* ty=Tensor[(4, 12, 9), float64] */;
  %475 = tan(%474) /* ty=Tensor[(4, 12, 9), float64] */;
  (%475,)
}

def @func_3757() -> (Tensor[(?, 14, 6), uint32],) {
  %476 = @func_2765() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %477 = %476.1;
  (%477,)
}

def @func_11577(%var_11572: float64) -> (Tensor[(1, 6, 14), bool],) {
  %478 = cast(%var_11572, dtype="bool") /* ty=bool */;
  %479 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 6, 14), float64] */, dtype="bool") /* ty=Tensor[(1, 6, 14), bool] */;
  %480 = not_equal(%478, %479) /* ty=Tensor[(1, 6, 14), bool] */;
  (%480,)
}

def @main(%var_11667: Tensor[(2912), float32]) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(2912), float32], Tensor[(16, 14, 13), float32]) {
  %481 = @func_2523() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %482 = @func_9887() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %483 = cast(%var_11667, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %484 = cast(%var_11667, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %485 = reshape(%483, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), float32] */;
  %486 = reshape(%484, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), float32] */;
  %487 = @func_3701(%485, %486) /* ty=(Tensor[(16, 14, 13), float32], Tensor[(16, 14, 13), float64]) */;
  %488 = %487.1;
  %489 = cast(%488, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
  %490 = %481.0;
  %491 = %482.0;
  %492 = asin(%489) /* ty=Tensor[(16, 14, 13), float32] */;
  (%490, %491, %var_11667, %492)
}

def @func_7669() -> Tensor[(?, 14, 6), uint32] {
  @func_621() /* ty=Tensor[(?, 14, 6), uint32] */
}

def @func_8948(%var_8927: Tensor[(140), float64]) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(140), float64], Tensor[(1, 14, 6), float32]) {
  %493 = @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %494 = cast(%var_8927, dtype="float64") /* ty=Tensor[(140), float64] */;
  %495 = reshape(%494, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), float64] */;
  %496 = @func_6195(%495) /* ty=(Tensor[(7, 5, 4), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %497 = @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %498 = %493.0;
  %499 = %496.2;
  %500 = %497.0;
  (%498, %499, %var_8927, %500)
}

def @func_9305(%var_9270: Tensor[(12, 14, 6), float32], %var_9280: Tensor[(336), float32]) -> (Tensor[(12, 14, 6), bool], Tensor[(4, 14, 6), bool], Tensor[(336), float32], Tensor[(?, 14, 6), uint32]) {
  %501 = @func_3279() /* ty=Tensor[(1, 14, 6), float32] */;
  %502 = cast(%501, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %503 = cast(%var_9270, dtype="bool") /* ty=Tensor[(12, 14, 6), bool] */;
  %504 = cast(%var_9280, dtype="float32") /* ty=Tensor[(336), float32] */;
  %505 = reshape(%504, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %506 = @func_4238(%505) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(4, 14, 6), bool], Tensor[(336), float32]) */;
  %507 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %508 = logical_and(%502, %503) /* ty=Tensor[(12, 14, 6), bool] */;
  %509 = %506.1;
  %510 = %507.1;
  (%508, %509, %var_9280, %510)
}

def @func_8753() -> Tensor[(1, 14, 6), float32] {
  %511 = @func_1578() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(5, 9, 16), float64]) */;
  %511.0
}

def @func_5366(%var_5331: Tensor[(16, 14, 6), uint32], %var_5364: Tensor[(1200), float64]) -> (Tensor[(16, 14, 6), int64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(126), uint8], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) {
  %512 = @func_4631() /* ty=Tensor[(?, 14, 6), uint32] */;
  %513 = cast(%512, dtype="int64") /* ty=Tensor[(?, 14, 6), int64] */;
  %514 = cast(%var_5331, dtype="int64") /* ty=Tensor[(16, 14, 6), int64] */;
  %515 = cast(meta[relay.Constant][24] /* ty=Tensor[(126), uint8] */, dtype="uint8") /* ty=Tensor[(126), uint8] */;
  %516 = cast(meta[relay.Constant][24] /* ty=Tensor[(126), uint8] */, dtype="uint8") /* ty=Tensor[(126), uint8] */;
  %517 = reshape(%515, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), uint8] */;
  %518 = reshape(%516, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), uint8] */;
  %519 = @func_3009(%517, %518) /* ty=(Tensor[(3, 14, 3), uint8], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %520 = cast(%var_5364, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %521 = reshape(%520, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %522 = @func_3854(%521) /* ty=(Tensor[(?, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) */;
  %523 = subtract(%513, %514) /* ty=Tensor[(16, 14, 6), int64] */;
  %524 = @func_4631() /* ty=Tensor[(?, 14, 6), uint32] */;
  %525 = %519.3;
  %526 = %522.2;
  (%523, %524, %525, meta[relay.Constant][24] /* ty=Tensor[(126), uint8] */, %526, %var_5364)
}

def @func_7026(%var_6993: float64, %var_7016: Tensor[(1092), float32]) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], float64, float64, Tensor[(10, 5, 8), float64], Tensor[(1092), float32]) {
  %527 = @func_3924() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %528 = @func_6755() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %529 = cast(%var_6993, dtype="float64") /* ty=float64 */;
  %530 = reshape(%529, newshape=[]) /* ty=float64 */;
  %531 = @func_5893(%530) /* ty=(Tensor[(?, 14, 6), float64], Tensor[(13, 14, 6), float32], float64) */;
  %532 = cast(%var_7016, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %533 = reshape(%532, newshape=[14, 78]) /* ty=Tensor[(14, 78), float32] */;
  %534 = @func_4809(%533) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(10, 5, 8), float64], Tensor[(4, 12, 9), float64], Tensor[(432), int32], Tensor[(13, 14, 6), int32], Tensor[(14, 78), float32], Tensor[(4, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %535 = %527.0;
  %536 = %528.1;
  %537 = %531.2;
  %538 = %534.1;
  (%535, %536, %537, %var_6993, %538, %var_7016)
}

def @func_4315() -> (Tensor[(1, 14, 6), float32],) {
  %539 = @func_2665() /* ty=Tensor[(1, 14, 6), float32] */;
  (%539,)
}

def @func_9079(%var_9068: Tensor[(1, 2, 1), float64]) -> Tensor[(1, 2, 1), float64] {
  %540 = cast(%var_9068, dtype="float64") /* ty=Tensor[(1, 2, 1), float64] */;
  acos(%540) /* ty=Tensor[(1, 2, 1), float64] */
}

def @func_2445() -> Tensor[(1, 14, 6), float32] {
  %541 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %541.0
}

def @func_9172() -> Tensor[(1, 14, 6), float32] {
  @func_8314() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_10016(%var_9987: float64) -> (Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(11, 14, 6), bool], Tensor[(924), uint32], Tensor[(?, 14, 6), bool], Tensor[(1, 14, 6), float32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) {
  %542 = @func_7054() /* ty=(Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32]) */;
  %543 = cast(meta[relay.Constant][25] /* ty=Tensor[(924), uint32] */, dtype="uint32") /* ty=Tensor[(924), uint32] */;
  %544 = reshape(%543, newshape=[11, 14, 6]) /* ty=Tensor[(11, 14, 6), uint32] */;
  %545 = @func_1550() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %546 = cast(%var_9987, dtype="float64") /* ty=float64 */;
  %547 = cast(meta[relay.Constant][26] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %548 = reshape(%546, newshape=[]) /* ty=float64 */;
  %549 = reshape(%547, newshape=[10, 6, 2]) /* ty=Tensor[(10, 6, 2), float64] */;
  %550 = @func_1366(%548, %549) /* ty=(Tensor[(10, 6, 2), float64],) */;
  %551 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %552 = %542.0;
  %553 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
  %554 = @func_6678(%544) /* ty=Tensor[(11, 14, 6), bool] */;
  %555 = @func_3554() /* ty=Tensor[(?, 14, 6), bool] */;
  %556 = %545.1;
  %557 = %550.0;
  %558 = %551.3;
  (%552, %553, %554, meta[relay.Constant][25] /* ty=Tensor[(924), uint32] */, %555, %556, %557, %var_9987, meta[relay.Constant][26] /* ty=Tensor[(120), float64] */, %558)
}

def @func_7510() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) {
  %559 = @func_3406() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %560 = @func_5858() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %561 = %560.0;
  %562 = cast(%561, dtype="float64") /* ty=Tensor[(?, 14, 6), float64] */;
  %563 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
  %564 = %559.0;
  %565 = cosh(%562) /* ty=Tensor[(?, 14, 6), float64] */;
  (%563, %564, %565)
}

def @func_6487() -> (Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64], Tensor[(15, 8, 10), float64], Tensor[(?, 14, 6), bool]) {
  %566 = @func_3738() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %567 = @func_6397() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64]) */;
  %568 = @func_3904() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %569 = %568.0;
  %570 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
  %571 = cast(%570, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %572 = shape_of(%569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%569, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %575 = %566.0;
  %576 = %567.1;
  %577 = @func_2947() /* ty=Tensor[(15, 8, 10), float64] */;
  %578 = greater(%573, %574) /* ty=Tensor[(?, 14, 6), bool] */;
  (%575, %576, %577, %578)
}

def @func_6323(%var_6309: bool, %var_6310: Tensor[(9, 10, 1), bool]) -> (Tensor[(9, 10, 1), bool], Tensor[(1, 14, 6), float32], Tensor[(336), uint32]) {
  %579 = cast(%var_6309, dtype="bool") /* ty=bool */;
  %580 = cast(%var_6310, dtype="bool") /* ty=Tensor[(9, 10, 1), bool] */;
  %581 = cast(meta[relay.Constant][27] /* ty=Tensor[(336), uint32] */, dtype="uint32") /* ty=Tensor[(336), uint32] */;
  %582 = reshape(%581, newshape=[168, 2]) /* ty=Tensor[(168, 2), uint32] */;
  %583 = @func_4952(%582) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), uint64], Tensor[(168, 2), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1200), float64]) */;
  %584 = logical_and(%579, %580) /* ty=Tensor[(9, 10, 1), bool] */;
  %585 = %583.5;
  (%584, %585, meta[relay.Constant][27] /* ty=Tensor[(336), uint32] */)
}

def @func_3445() -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
  %586 = @func_2407() /* ty=Tensor[(?, 14, 6), uint32] */;
  %587 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
  (%586, %587)
}

def @func_9009() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %588 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %589 = @func_8785() /* ty=Tensor[(1, 14, 6), float32] */;
  %590 = %588.1;
  (%589, %590)
}

def @func_8690(%var_8679: Tensor[(4, 9, 1), float32]) -> (Tensor[(4, 9, 1), float32],) {
  %591 = cast(%var_8679, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %592 = log(%591) /* ty=Tensor[(4, 9, 1), float32] */;
  (%592,)
}

def @func_5923() -> (Tensor[(?, 14, 6), uint32],) {
  %593 = @func_4631() /* ty=Tensor[(?, 14, 6), uint32] */;
  (%593,)
}

def @func_2123() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %594 = @func_943() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %595 = @func_1046() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %596 = %594.0;
  %597 = %595.0;
  (%596, %597)
}

def @func_5142(%var_5130: Tensor[(13, 14, 6), float32], %var_5136: float64) -> (Tensor[(13, 14, 6), float64], Tensor[(14, 16, 9), float64], float64, Tensor[(1, 14, 6), float32]) {
  %598 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %599 = %598.0;
  %600 = cast(%599, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %601 = cast(%var_5130, dtype="float64") /* ty=Tensor[(13, 14, 6), float64] */;
  %602 = cast(%var_5136, dtype="float64") /* ty=float64 */;
  %603 = reshape(%602, newshape=[]) /* ty=float64 */;
  %604 = @func_1623(%603) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) */;
  %605 = mod(%600, %601) /* ty=Tensor[(13, 14, 6), float64] */;
  %606 = %604.0;
  %607 = @func_1748() /* ty=Tensor[(1, 14, 6), float32] */;
  (%605, %606, %var_5136, %607)
}

def @func_3352() -> (Tensor[(1, 14, 6), float32],) {
  %608 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
  (%608,)
}

def @func_435() -> (Tensor[(1, 14, 6), float32],) {
  %609 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %610 = %609.0;
  (%610,)
}

def @func_5844(%var_5816: Tensor[(15, 8, 10), float64]) -> (Tensor[(15, 8, 10), uint8], Tensor[(15, 8, 10), float64]) {
  %611 = @func_2947() /* ty=Tensor[(15, 8, 10), float64] */;
  %612 = cast(%var_5816, dtype="uint8") /* ty=Tensor[(15, 8, 10), uint8] */;
  %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%611, dtype="uint8") /* ty=Tensor[(15, 8, 10), uint8] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %616 = cast(%611, dtype="float64") /* ty=Tensor[(15, 8, 10), float64] */;
  %617 = bitwise_and(%614, %615) /* ty=Tensor[(15, 8, 10), uint8] */;
  %618 = sigmoid(%616) /* ty=Tensor[(15, 8, 10), float64] */;
  (%617, %618)
}

def @func_6239(%var_6236: float64) -> (Tensor[(?, 14, 6), uint32], Tensor[(14, 16, 9), float64], float64) {
  %619 = cast(%var_6236, dtype="float64") /* ty=float64 */;
  %620 = reshape(%619, newshape=[]) /* ty=float64 */;
  %621 = @func_1623(%620) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) */;
  %622 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %623 = %621.0;
  (%622, %623, %var_6236)
}

def @func_3738() -> (Tensor[(?, 14, 6), uint32],) {
  %624 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %625 = %624.1;
  (%625,)
}

def @func_6195(%var_6175: Tensor[(7, 5, 4), float64]) -> (Tensor[(7, 5, 4), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %626 = cast(%var_6175, dtype="float64") /* ty=Tensor[(7, 5, 4), float64] */;
  %627 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %628 = cosh(%626) /* ty=Tensor[(7, 5, 4), float64] */;
  %629 = @func_1540() /* ty=Tensor[(1, 14, 6), float32] */;
  %630 = %627.4;
  (%628, %629, %630)
}

def @func_10938(%var_10923: Tensor[(11, 14, 6), float32], %var_10935: Tensor[(70, 2), float64]) -> (Tensor[(11, 14, 6), bool], Tensor[(7, 5, 4), float64], Tensor[(70, 2), float64]) {
  %631 = @func_1540() /* ty=Tensor[(1, 14, 6), float32] */;
  %632 = cast(%631, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %633 = cast(%var_10923, dtype="bool") /* ty=Tensor[(11, 14, 6), bool] */;
  %634 = cast(%var_10935, dtype="float64") /* ty=Tensor[(70, 2), float64] */;
  %635 = reshape(%634, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), float64] */;
  %636 = @func_6195(%635) /* ty=(Tensor[(7, 5, 4), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %637 = greater(%632, %633) /* ty=Tensor[(11, 14, 6), bool] */;
  %638 = %636.0;
  (%637, %638, %var_10935)
}

def @func_11302() -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], float64) {
  %639 = @func_2123() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %640 = @func_6755() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %641 = @func_3757() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %642 = cast(-0.183877f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %643 = reshape(%642, newshape=[]) /* ty=float64 */;
  %644 = @func_1005(%643) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(14, 16, 9), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %645 = %639.1;
  %646 = @func_7835() /* ty=Tensor[(1, 14, 6), float32] */;
  %647 = %640.0;
  %648 = @func_9414() /* ty=Tensor[(?, 14, 6), float64] */;
  %649 = %641.0;
  %650 = %644.2;
  (%645, %646, %647, %648, %649, %650, -0.183877f64 /* ty=float64 */)
}

def @func_6301() -> Tensor[(?, 14, 6), float64] {
  %651 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %651.1
}

def @func_1133() -> Tensor[(10, 5, 8), float64] {
  %652 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 5, 8), float64] */, dtype="float64") /* ty=Tensor[(1, 5, 8), float64] */;
  %653 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 5, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 5, 8), float64] */;
  minimum(%652, %653) /* ty=Tensor[(10, 5, 8), float64] */
}

def @func_2363() -> (Tensor[(1, 14, 6), float32],) {
  %654 = @func_435() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %655 = %654.0;
  %656 = cast(%655, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %657 = cos(%656) /* ty=Tensor[(1, 14, 6), float32] */;
  (%657,)
}

def @func_7820(%var_7783: Tensor[(15, 15, 2), float64], %var_7784: Tensor[(15, 15, 2), float64]) -> (Tensor[(15, 15, 2), bool], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %658 = cast(%var_7784, dtype="bool") /* ty=Tensor[(15, 15, 2), bool] */;
  %659 = shape_of(%var_7783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%var_7783, dtype="bool") /* ty=Tensor[(15, 15, 2), bool] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %662 = @func_1550() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %663 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %664 = equal(%660, %661) /* ty=Tensor[(15, 15, 2), bool] */;
  %665 = %662.0;
  %666 = %663.2;
  (%664, %665, %666)
}

def @func_6696() -> (Tensor[(1, 14, 6), float32],) {
  %667 = @func_1748() /* ty=Tensor[(1, 14, 6), float32] */;
  (%667,)
}

def @func_10974() -> Tensor[(1, 14, 6), float32] {
  %668 = @func_8366() /* ty=(Tensor[(16, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %668.1
}

def @func_2947() -> Tensor[(15, 8, 10), float64] {
  %669 = cast(meta[relay.Constant][30] /* ty=Tensor[(15, 8, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 10), float64] */;
  asinh(%669) /* ty=Tensor[(15, 8, 10), float64] */
}

def @func_1005(%var_961: float64) -> (Tensor[(14, 16, 9), float64], Tensor[(14, 16, 9), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %670 = cast(%var_961, dtype="float64") /* ty=float64 */;
  %671 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 16, 9), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 9), float64] */;
  %672 = cast(meta[relay.Constant][31] /* ty=Tensor[(14, 16, 9), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 9), float64] */;
  %673 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %674 = divide(%670, %671) /* ty=Tensor[(14, 16, 9), float64] */;
  %675 = atan(%672) /* ty=Tensor[(14, 16, 9), float64] */;
  %676 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  %677 = %673.4;
  (%674, %675, %676, %677)
}

def @func_7835() -> Tensor[(1, 14, 6), float32] {
  %678 = @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %678.0
}

def @func_7112(%var_7065: int64, %var_7066: Tensor[(5, 13, 16), int64], %var_7096: Tensor[(28, 48), uint32], %var_7097: Tensor[(1200), float64], %var_7102: Tensor[(120), float64]) -> (Tensor[(?, 14, 6), uint32], Tensor[(5, 13, 16), int16], Tensor[(1, 14, 6), float32], Tensor[(16, 14, 6), int64], Tensor[(28, 48), uint32], Tensor[(1200), float64], Tensor[(10, 10, 12), bool], Tensor[(120), float64]) {
  %679 = @func_3738() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %680 = cast(%var_7065, dtype="int64") /* ty=int64 */;
  %681 = cast(%var_7066, dtype="int64") /* ty=Tensor[(5, 13, 16), int64] */;
  %682 = right_shift(%680, %681) /* ty=Tensor[(5, 13, 16), int64] */;
  %683 = cast(%682, dtype="int16") /* ty=Tensor[(5, 13, 16), int16] */;
  %684 = cast(%var_7065, dtype="int16") /* ty=int16 */;
  %685 = @func_1994() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), uint32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) */;
  %686 = cast(%var_7096, dtype="uint32") /* ty=Tensor[(28, 48), uint32] */;
  %687 = cast(%var_7097, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %688 = reshape(%686, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), uint32] */;
  %689 = reshape(%687, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %690 = @func_5366(%688, %689) /* ty=(Tensor[(16, 14, 6), int64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(126), uint8], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) */;
  %691 = cast(%var_7102, dtype="float64") /* ty=Tensor[(120), float64] */;
  %692 = cast(%var_7097, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %693 = reshape(%691, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float64] */;
  %694 = reshape(%692, newshape=[10, 10, 12]) /* ty=Tensor[(10, 10, 12), float64] */;
  %695 = @func_3472(%693, %694) /* ty=(Tensor[(2, 10, 12), float64], Tensor[(10, 10, 12), bool]) */;
  %696 = %679.0;
  %697 = minimum(%683, %684) /* ty=Tensor[(5, 13, 16), int16] */;
  %698 = %685.8;
  %699 = %690.0;
  %700 = %695.1;
  (%696, %697, %698, %699, %var_7096, %var_7097, %700, %var_7102)
}

def @func_10838() -> Tensor[(15, 8, 10), float64] {
  @func_2947() /* ty=Tensor[(15, 8, 10), float64] */
}

def @func_6734(%var_6715: Tensor[(7, 15, 8), int8]) -> (Tensor[(7, 15, 8), bool], Tensor[(7, 15, 8), float64]) {
  %701 = cast(%var_6715, dtype="bool") /* ty=Tensor[(7, 15, 8), bool] */;
  %702 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(7, 15, 8), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 15, 8), int8] */, dtype="bool") /* ty=Tensor[(7, 15, 8), bool] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %705 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 15, 8), int8] */, dtype="float64") /* ty=Tensor[(7, 15, 8), float64] */;
  %706 = less(%703, %704) /* ty=Tensor[(7, 15, 8), bool] */;
  %707 = acosh(%705) /* ty=Tensor[(7, 15, 8), float64] */;
  (%706, %707)
}

def @func_4238(%var_4236: Tensor[(336), float32]) -> (Tensor[(?, 14, 6), uint32], Tensor[(4, 14, 6), bool], Tensor[(336), float32]) {
  %708 = @func_3738() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %709 = cast(%var_4236, dtype="float32") /* ty=Tensor[(336), float32] */;
  %710 = reshape(%709, newshape=[4, 14, 6]) /* ty=Tensor[(4, 14, 6), float32] */;
  %711 = %708.0;
  %712 = @func_3306(%710) /* ty=Tensor[(4, 14, 6), bool] */;
  (%711, %712, %var_4236)
}

def @func_1866(%var_1853: float64) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), float32], float64, Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %713 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %714 = cast(%var_1853, dtype="float64") /* ty=float64 */;
  %715 = reshape(%714, newshape=[]) /* ty=float64 */;
  %716 = @func_1623(%715) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) */;
  %717 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %718 = %713.0;
  %719 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  %720 = %716.1;
  %721 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
  %722 = %717.0;
  (%718, %719, %720, %var_1853, %721, %722)
}

def @func_3554() -> Tensor[(?, 14, 6), bool] {
  %723 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %724 = %723.0;
  %725 = cast(%724, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %726 = log10(%725) /* ty=Tensor[(1, 14, 6), float32] */;
  %727 = @func_2259() /* ty=Tensor[(1, 14, 6), float32] */;
  %728 = cast(%727, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %729 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%726, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%730, %731) /* ty=Tensor[(?, 14, 6), bool] */
}

def @func_3279() -> Tensor[(1, 14, 6), float32] {
  %732 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %732.4
}

def @func_10856() -> Tensor[(1, 14, 6), float32] {
  %733 = @func_3904() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %733.0
}

def @func_943() -> (Tensor[(1, 14, 6), float32],) {
  %734 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %735 = %734.0;
  (%735,)
}

def @func_3472(%var_3456: Tensor[(1, 10, 12), float64], %var_3467: Tensor[(10, 10, 12), float64]) -> (Tensor[(2, 10, 12), float64], Tensor[(10, 10, 12), bool]) {
  %736 = cast(%var_3456, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
  %737 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 10, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
  %738 = cast(%var_3456, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
  %739 = cast(%var_3467, dtype="bool") /* ty=Tensor[(10, 10, 12), bool] */;
  %740 = floor_divide(%736, %737) /* ty=Tensor[(2, 10, 12), float64] */;
  %741 = logical_and(%738, %739) /* ty=Tensor[(10, 10, 12), bool] */;
  (%740, %741)
}

def @func_7456() -> Tensor[(?, 14, 6), float64] {
  %742 = @func_5659() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %742.2
}

def @func_3854(%var_3842: Tensor[(1200), float64]) -> (Tensor[(?, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) {
  %743 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %744 = cast(%var_3842, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %745 = reshape(%744, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float64] */;
  %746 = @func_3680(%745) /* ty=(Tensor[(15, 8, 10), float64], Tensor[(15, 8, 10), float32], Tensor[(15, 8, 10), float64], Tensor[(?, 14, 6), float64]) */;
  %747 = @func_2384() /* ty=Tensor[(?, 14, 6), float32] */;
  %748 = %743.1;
  %749 = %746.1;
  (%747, %748, %749, %var_3842)
}

def @func_6265() -> Tensor[(1, 14, 6), float32] {
  %750 = @func_2123() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %750.0
}

def @func_1046() -> (Tensor[(?, 14, 6), uint32],) {
  %751 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  (%751,)
}

def @func_1578() -> (Tensor[(1, 14, 6), float32], Tensor[(5, 9, 16), float64]) {
  %752 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %753 = cast(meta[relay.Constant][34] /* ty=Tensor[(5, 9, 16), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %754 = acos(%753) /* ty=Tensor[(5, 9, 16), float64] */;
  %755 = cast(%754, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
  %756 = %752.0;
  %757 = atan(%755) /* ty=Tensor[(5, 9, 16), float64] */;
  (%756, %757)
}

def @func_10543(%var_10506: Tensor[(15, 16, 9), uint16]) -> (Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), float32]) {
  %758 = cast(%var_10506, dtype="uint16") /* ty=Tensor[(15, 16, 9), uint16] */;
  %759 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(15, 16, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %760 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 16, 9), uint16] */, dtype="uint16") /* ty=Tensor[(15, 16, 9), uint16] */;
  %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %762 = cast(%var_10506, dtype="float32") /* ty=Tensor[(15, 16, 9), float32] */;
  %763 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(15, 16, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %764 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 16, 9), uint16] */, dtype="float32") /* ty=Tensor[(15, 16, 9), float32] */;
  %765 = dyn.reshape(%762, %763, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %766 = bitwise_or(%760, %761) /* ty=Tensor[(15, 16, 9), uint16] */;
  %767 = divide(%764, %765) /* ty=Tensor[(15, 16, 9), float32] */;
  (%766, %767)
}

def @func_917() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) {
  %768 = @func_435() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %769 = cast(meta[relay.Constant][36] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %770 = reshape(%769, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %771 = @func_678(%770) /* ty=(Tensor[(?, 14, 6), uint8], Tensor[(13, 14, 6), int32]) */;
  %772 = %768.0;
  %773 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  %774 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
  %775 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %776 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
  %777 = %771.1;
  (%772, %773, %774, %775, %776, %777, meta[relay.Constant][36] /* ty=Tensor[(1092), float32] */)
}

def @func_11181(%var_11167: Tensor[(16, 14, 6), float32], %var_11175: float64) -> (Tensor[(16, 14, 6), int64], Tensor[(13, 14, 6), float32], float64) {
  %778 = @func_7054() /* ty=(Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32]) */;
  %779 = %778.1;
  %780 = cast(%779, dtype="int64") /* ty=Tensor[(1, 14, 6), int64] */;
  %781 = cast(%var_11167, dtype="int64") /* ty=Tensor[(16, 14, 6), int64] */;
  %782 = cast(%var_11175, dtype="float64") /* ty=float64 */;
  %783 = reshape(%782, newshape=[]) /* ty=float64 */;
  %784 = @func_1623(%783) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) */;
  %785 = maximum(%780, %781) /* ty=Tensor[(16, 14, 6), int64] */;
  %786 = %784.1;
  (%785, %786, %var_11175)
}

def @func_4126() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32]) {
  %787 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %788 = %787.0;
  %789 = @func_2384() /* ty=Tensor[(?, 14, 6), float32] */;
  (%788, %789)
}

def @func_3009(%var_2989: Tensor[(3, 14, 3), uint8], %var_2990: Tensor[(3, 14, 3), uint8]) -> (Tensor[(3, 14, 3), uint8], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %790 = cast(%var_2990, dtype="uint8") /* ty=Tensor[(3, 14, 3), uint8] */;
  %791 = shape_of(%var_2989, dtype="int32") /* ty=Tensor[(3), int32] */;
  %792 = cast(%var_2989, dtype="uint8") /* ty=Tensor[(3, 14, 3), uint8] */;
  %793 = dyn.reshape(%790, %791, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %794 = @func_943() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %795 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %796 = left_shift(%792, %793) /* ty=Tensor[(3, 14, 3), uint8] */;
  %797 = %794.0;
  %798 = %795.0;
  %799 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
  (%796, %797, %798, %799)
}

def @func_2478() -> (Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
  %800 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 3, 8), float64] */, dtype="float64") /* ty=Tensor[(6, 3, 8), float64] */;
  %801 = @func_1083() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %802 = @func_2123() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %803 = @func_2291() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %804 = sin(%800) /* ty=Tensor[(6, 3, 8), float64] */;
  %805 = %801.0;
  %806 = %802.1;
  %807 = %803.0;
  (%804, %805, %806, %807)
}

def @func_4631() -> Tensor[(?, 14, 6), uint32] {
  %808 = @func_1994() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), uint32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) */;
  %808.4
}

def @func_4952(%var_4923: Tensor[(168, 2), uint32]) -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), uint64], Tensor[(168, 2), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1200), float64]) {
  %809 = cast(%var_4923, dtype="uint32") /* ty=Tensor[(168, 2), uint32] */;
  %810 = reshape(%809, newshape=[4, 14, 6]) /* ty=Tensor[(4, 14, 6), uint32] */;
  %811 = @func_3269(%810) /* ty=(Tensor[(?, 14, 6), float32], Tensor[(4, 14, 6), uint64], Tensor[(?, 14, 6), uint32]) */;
  %812 = @func_2291() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %813 = cast(meta[relay.Constant][38] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %814 = reshape(%813, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %815 = @func_3854(%814) /* ty=(Tensor[(?, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) */;
  %816 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %817 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
  %818 = %811.1;
  %819 = %812.0;
  %820 = %815.1;
  (%816, %817, %818, %var_4923, %819, %820, meta[relay.Constant][38] /* ty=Tensor[(1200), float64] */)
}

def @func_8742(%var_8714: Tensor[(15, 10, 6), uint32], %var_8715: Tensor[(15, 10, 6), uint32]) -> (Tensor[(15, 10, 6), bool], Tensor[(15, 10, 6), bool]) {
  %821 = cast(%var_8715, dtype="bool") /* ty=Tensor[(15, 10, 6), bool] */;
  %822 = shape_of(%var_8714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %823 = cast(%var_8714, dtype="bool") /* ty=Tensor[(15, 10, 6), bool] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %825 = cast(%var_8714, dtype="bool") /* ty=Tensor[(15, 10, 6), bool] */;
  %826 = shape_of(%var_8715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %827 = cast(%var_8715, dtype="bool") /* ty=Tensor[(15, 10, 6), bool] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %829 = greater_equal(%823, %824) /* ty=Tensor[(15, 10, 6), bool] */;
  %830 = not_equal(%827, %828) /* ty=Tensor[(15, 10, 6), bool] */;
  (%829, %830)
}

def @func_2208(%var_2158: Tensor[(11, 11, 7), float64], %var_2187: Tensor[(1092), float32]) -> (Tensor[(?, 14, 6), uint32], Tensor[(11, 11, 7), float32], Tensor[(?, 14, 6), uint8], Tensor[(1092), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
  %831 = cast(%var_2158, dtype="float64") /* ty=Tensor[(11, 11, 7), float64] */;
  %832 = sin(%831) /* ty=Tensor[(11, 11, 7), float64] */;
  %833 = cast(%832, dtype="float32") /* ty=Tensor[(11, 11, 7), float32] */;
  %834 = cos(%833) /* ty=Tensor[(11, 11, 7), float32] */;
  %835 = cast(%834, dtype="float32") /* ty=Tensor[(11, 11, 7), float32] */;
  %836 = cast(%var_2187, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %837 = reshape(%836, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %838 = @func_678(%837) /* ty=(Tensor[(?, 14, 6), uint8], Tensor[(13, 14, 6), int32]) */;
  %839 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %840 = atanh(%835) /* ty=Tensor[(11, 11, 7), float32] */;
  %841 = %838.0;
  %842 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %843 = @func_1540() /* ty=Tensor[(1, 14, 6), float32] */;
  (%839, %840, %841, %var_2187, %842, %843)
}

def @func_7256() -> (Tensor[(10, 5, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %844 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %845 = @func_3445() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %846 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %847 = @func_1133() /* ty=Tensor[(10, 5, 8), float64] */;
  %848 = %844.0;
  %849 = %845.0;
  %850 = @func_1540() /* ty=Tensor[(1, 14, 6), float32] */;
  %851 = %846.0;
  (%847, %848, %849, %850, %851)
}

def @func_8785() -> Tensor[(1, 14, 6), float32] {
  @func_444() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_5777() -> Tensor[(1, 14, 6), float32] {
  %852 = @func_2291() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %852.0
}

def @func_11542() -> (Tensor[(10, 5, 8), float64],) {
  %853 = @func_1133() /* ty=Tensor[(10, 5, 8), float64] */;
  (%853,)
}

def @func_8653() -> (Tensor[(?, 14, 6), uint32],) {
  %854 = @func_1046() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %855 = %854.0;
  (%855,)
}

def @func_1344() -> Tensor[(1, 14, 6), float32] {
  @func_751() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_5056() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) {
  %856 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %857 = @func_1748() /* ty=Tensor[(1, 14, 6), float32] */;
  %858 = %856.1;
  (%857, %858)
}

def @func_4533() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %859 = @func_2765() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %860 = @func_2765() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %861 = %859.2;
  %862 = %860.1;
  (%861, %862)
}

def @func_1174() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %863 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
  %864 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  (%863, %864)
}

def @func_3701(%var_3688: Tensor[(16, 14, 13), float32], %var_3689: Tensor[(16, 14, 13), float32]) -> (Tensor[(16, 14, 13), float32], Tensor[(16, 14, 13), float64]) {
  %865 = cast(%var_3689, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
  %866 = shape_of(%var_3688, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%var_3688, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %869 = cast(%var_3689, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
  %870 = sqrt(%869) /* ty=Tensor[(16, 14, 13), float32] */;
  %871 = cast(%870, dtype="float64") /* ty=Tensor[(16, 14, 13), float64] */;
  %872 = mod(%867, %868) /* ty=Tensor[(16, 14, 13), float32] */;
  %873 = log2(%871) /* ty=Tensor[(16, 14, 13), float64] */;
  (%872, %873)
}

def @func_9061(%var_9055: Tensor[(16, 14, 6), uint32]) -> (Tensor[(16, 14, 6), bool],) {
  %874 = @func_8366() /* ty=(Tensor[(16, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %875 = %874.0;
  %876 = cast(%var_9055, dtype="bool") /* ty=Tensor[(16, 14, 6), bool] */;
  %877 = shape_of(%875, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(%875, dtype="bool") /* ty=Tensor[(16, 14, 6), bool] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %880 = greater(%878, %879) /* ty=Tensor[(16, 14, 6), bool] */;
  (%880,)
}

def @func_5507(%var_5493: float64) -> (Tensor[(6, 3, 8), float64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], float64) {
  %881 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %882 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %883 = cast(%var_5493, dtype="float64") /* ty=float64 */;
  %884 = reshape(%883, newshape=[]) /* ty=float64 */;
  %885 = @func_1866(%884) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), float32], float64, Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %886 = %881.0;
  %887 = %882.1;
  %888 = %885.4;
  (%886, %887, %888, %var_5493)
}

def @func_547() -> (Tensor[(1, 14, 6), float32],) {
  %889 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %890 = %889.0;
  (%890,)
}

def @func_7054() -> (Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32]) {
  %891 = @func_5659() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %892 = %891.2;
  %893 = @func_2259() /* ty=Tensor[(1, 14, 6), float32] */;
  (%892, %893)
}

def @func_9593(%var_9556: Tensor[(60, 2), float64]) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(60, 2), float64], Tensor[(10, 10, 12), float64], Tensor[(1, 14, 6), float32]) {
  %894 = @func_5292() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %895 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %896 = cast(%var_9556, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %897 = cast(meta[relay.Constant][39] /* ty=Tensor[(60, 20), float64] */, dtype="float64") /* ty=Tensor[(60, 20), float64] */;
  %898 = reshape(%896, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float64] */;
  %899 = reshape(%897, newshape=[10, 10, 12]) /* ty=Tensor[(10, 10, 12), float64] */;
  %900 = @func_3472(%898, %899) /* ty=(Tensor[(2, 10, 12), float64], Tensor[(10, 10, 12), bool]) */;
  %901 = %900.1;
  %902 = cast(meta[relay.Constant][39] /* ty=Tensor[(60, 20), float64] */, dtype="float64") /* ty=Tensor[(60, 20), float64] */;
  %903 = shape_of(%901, dtype="int32") /* ty=Tensor[(3), int32] */;
  %904 = cast(%901, dtype="float64") /* ty=Tensor[(10, 10, 12), float64] */;
  %905 = dyn.reshape(%902, %903, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %906 = %894.0;
  %907 = %895.0;
  %908 = divide(%904, %905) /* ty=Tensor[(10, 10, 12), float64] */;
  %909 = @func_8314() /* ty=Tensor[(1, 14, 6), float32] */;
  (%906, %907, %var_9556, %908, %909)
}

def @func_10161() -> (Tensor[(?, 14, 6), uint32], Tensor[(1092), float32]) {
  %910 = @func_7351() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %911 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %912 = %910.0;
  %913 = %911.6;
  (%912, %913)
}

def @func_6527() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %914 = @func_6487() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64], Tensor[(15, 8, 10), float64], Tensor[(?, 14, 6), bool]) */;
  %915 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
  %916 = %914.0;
  (%915, %916)
}

def @func_1748() -> Tensor[(1, 14, 6), float32] {
  @func_1655() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_5766() -> (Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
  %917 = @func_3757() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %918 = @func_3445() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %919 = %917.0;
  %920 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %921 = %918.1;
  (%919, %920, %921)
}

def @func_3306(%var_3301: Tensor[(4, 14, 6), float32]) -> Tensor[(4, 14, 6), bool] {
  %922 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %923 = %922.0;
  %924 = cast(%923, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %925 = cast(%var_3301, dtype="bool") /* ty=Tensor[(4, 14, 6), bool] */;
  not_equal(%924, %925) /* ty=Tensor[(4, 14, 6), bool] */
}

def @func_7351() -> (Tensor[(?, 14, 6), uint32],) {
  %926 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  (%926,)
}

def @func_8314() -> Tensor[(1, 14, 6), float32] {
  @func_2665() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_9500(%var_9496: Tensor[(1, 15, 2), float32]) -> Tensor[(1, 15, 2), float32] {
  %927 = cast(%var_9496, dtype="float32") /* ty=Tensor[(1, 15, 2), float32] */;
  cosh(%927) /* ty=Tensor[(1, 15, 2), float32] */
}

def @func_7743() -> (Tensor[(?, 14, 6), int8],) {
  %928 = @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %929 = %928.0;
  %930 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %931 = %930.1;
  %932 = cast(%931, dtype="int8") /* ty=Tensor[(?, 14, 6), int8] */;
  %933 = shape_of(%929, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%929, dtype="int8") /* ty=Tensor[(1, 14, 6), int8] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %936 = left_shift(%934, %935) /* ty=Tensor[(?, 14, 6), int8] */;
  (%936,)
}

def @func_6755() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %937 = @func_2291() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %938 = @func_2259() /* ty=Tensor[(1, 14, 6), float32] */;
  %939 = %937.0;
  (%938, %939)
}

def @func_8882() -> (Tensor[(1, 14, 6), float32],) {
  %940 = @func_3406() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %941 = %940.0;
  (%941,)
}

def @func_9632() -> Tensor[(1, 14, 6), float32] {
  %942 = @func_2898() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %942.0
}

def @func_10789() -> (Tensor[(1, 14, 6), float32],) {
  %943 = @func_1655() /* ty=Tensor[(1, 14, 6), float32] */;
  (%943,)
}

def @func_3924() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %944 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %945 = %944.3;
  %946 = @func_2445() /* ty=Tensor[(1, 14, 6), float32] */;
  (%945, %946)
}

def @func_2259() -> Tensor[(1, 14, 6), float32] {
  %947 = @func_1083() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %947.0
}

def @func_8366() -> (Tensor[(16, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
  %948 = @func_6755() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %949 = %948.1;
  %950 = cast(%949, dtype="uint32") /* ty=Tensor[(1, 14, 6), uint32] */;
  %951 = cast(meta[relay.Constant][40] /* ty=Tensor[(16, 14, 6), float32] */, dtype="uint32") /* ty=Tensor[(16, 14, 6), uint32] */;
  %952 = @func_1994() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), uint32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) */;
  %953 = bitwise_xor(%950, %951) /* ty=Tensor[(16, 14, 6), uint32] */;
  %954 = %952.1;
  (%953, %954)
}

def @func_9657() -> (Tensor[(1, 14, 6), float32],) {
  %955 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  (%955,)
}

def @func_7439() -> (Tensor[(1, 14, 6), float32],) {
  %956 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %957 = %956.0;
  (%957,)
}

def @func_8611() -> (Tensor[(?, 14, 6), float64], Tensor[(?, 14, 6), float64]) {
  %958 = @func_5659() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %959 = @func_6301() /* ty=Tensor[(?, 14, 6), float64] */;
  %960 = %958.2;
  (%959, %960)
}

def @func_9463(%var_9452: Tensor[(15, 1, 16), uint8]) -> (Tensor[(15, 12, 16), uint8],) {
  %961 = cast(%var_9452, dtype="uint8") /* ty=Tensor[(15, 1, 16), uint8] */;
  %962 = cast(meta[relay.Constant][41] /* ty=Tensor[(15, 12, 16), uint8] */, dtype="uint8") /* ty=Tensor[(15, 12, 16), uint8] */;
  %963 = bitwise_and(%961, %962) /* ty=Tensor[(15, 12, 16), uint8] */;
  (%963,)
}

def @func_678(%var_630: Tensor[(13, 14, 6), float32]) -> (Tensor[(?, 14, 6), uint8], Tensor[(13, 14, 6), int32]) {
  %964 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %965 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %966 = %965.0;
  %967 = cast(%966, dtype="uint8") /* ty=Tensor[(1, 14, 6), uint8] */;
  %968 = shape_of(%964, dtype="int32") /* ty=Tensor[(3), int32] */;
  %969 = cast(%964, dtype="uint8") /* ty=Tensor[(?, 14, 6), uint8] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %971 = cast(%966, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %972 = cast(%var_630, dtype="float64") /* ty=Tensor[(13, 14, 6), float64] */;
  %973 = divide(%971, %972) /* ty=Tensor[(13, 14, 6), float64] */;
  %974 = cast(%var_630, dtype="int32") /* ty=Tensor[(13, 14, 6), int32] */;
  %975 = shape_of(%973, dtype="int32") /* ty=Tensor[(3), int32] */;
  %976 = cast(%973, dtype="int32") /* ty=Tensor[(13, 14, 6), int32] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %978 = bitwise_or(%969, %970) /* ty=Tensor[(?, 14, 6), uint8] */;
  %979 = left_shift(%976, %977) /* ty=Tensor[(13, 14, 6), int32] */;
  (%978, %979)
}

def @func_9234() -> (Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32]) {
  %980 = @func_6696() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %981 = @func_7456() /* ty=Tensor[(?, 14, 6), float64] */;
  %982 = %980.0;
  (%981, %982)
}

def @func_751() -> Tensor[(1, 14, 6), float32] {
  %983 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %983.0
}

def @func_7548() -> Tensor[(?, 14, 6), uint32] {
  %984 = @func_2765() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %984.3
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10613() -> (Tensor[(?, 14, 6), float64], Tensor[(4, 14, 6), bool], Tensor[(168, 2), float32], Tensor[(1008, 1), float64], Tensor[(1, 14, 6), float32]) {
  @func_10611() /* ty=(Tensor[(?, 14, 6), float64], Tensor[(4, 14, 6), bool], Tensor[(168, 2), float32], Tensor[(1008, 1), float64], Tensor[(1, 14, 6), float32]) */
}

def @func_1541() -> Tensor[(1, 14, 6), float32] {
  %1 = fn () -> Tensor[(1, 14, 6), float32] {
    %0 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %0.0
  };
  %1() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_7257() -> (Tensor[(10, 5, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %10 = fn () -> (Tensor[(10, 5, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
    %2 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
    %3 = @func_3445() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
    %4 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %5 = @func_1133() /* ty=Tensor[(10, 5, 8), float64] */;
    %6 = %2.0;
    %7 = %3.0;
    %8 = @func_1540() /* ty=Tensor[(1, 14, 6), float32] */;
    %9 = %4.0;
    (%5, %6, %7, %8, %9)
  };
  %10() /* ty=(Tensor[(10, 5, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_4315() -> (Tensor[(1, 14, 6), float32],) {
  %11 = @func_2665() /* ty=Tensor[(1, 14, 6), float32] */;
  (%11,)
}

def @func_10189() -> (Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float64], Tensor[(1200), float64]) {
  %18 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float64], Tensor[(1200), float64]) {
    %12 = @func_435() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %14 = reshape(%13, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float64] */;
    %15 = @func_5844(%14) /* ty=(Tensor[(15, 8, 10), uint8], Tensor[(15, 8, 10), float64]) */;
    %16 = %12.0;
    %17 = %15.1;
    (%16, %17, meta[relay.Constant][0] /* ty=Tensor[(1200), float64] */)
  };
  %18() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float64], Tensor[(1200), float64]) */
}

def @func_6327(%var_6325: bool, %var_6326: Tensor[(9, 10, 1), bool]) -> (Tensor[(9, 10, 1), bool], Tensor[(1, 14, 6), float32], Tensor[(336), uint32]) {
  @func_6323(%var_6325, %var_6326) /* ty=(Tensor[(9, 10, 1), bool], Tensor[(1, 14, 6), float32], Tensor[(336), uint32]) */
}

def @func_10104() -> (Tensor[(?, 14, 6), uint32],) {
  @func_10102() /* ty=(Tensor[(?, 14, 6), uint32],) */
}

def @func_2364() -> (Tensor[(1, 14, 6), float32],) {
  %23 = fn () -> (Tensor[(1, 14, 6), float32],) {
    %19 = @func_435() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %20 = %19.0;
    %21 = cast(%20, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
    %22 = cos(%21) /* ty=Tensor[(1, 14, 6), float32] */;
    (%22,)
  };
  %23() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_6697() -> (Tensor[(1, 14, 6), float32],) {
  %25 = fn () -> (Tensor[(1, 14, 6), float32],) {
    %24 = @func_1748() /* ty=Tensor[(1, 14, 6), float32] */;
    (%24,)
  };
  %25() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_2331() -> (Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) {
  @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */
}

def @func_3446() -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
  %28 = fn () -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
    %26 = @func_2407() /* ty=Tensor[(?, 14, 6), uint32] */;
    %27 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
    (%26, %27)
  };
  %28() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */
}

def @func_1750() -> Tensor[(1, 14, 6), float32] {
  @func_1748() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_8503(%var_8471: Tensor[(4, 84), float32]) -> (Tensor[(1, 14, 6), float32], Tensor[(4, 84), float32], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %29 = @func_3924() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %30 = cast(%var_8471, dtype="float32") /* ty=Tensor[(4, 84), float32] */;
  %31 = reshape(%30, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %32 = @func_4238(%31) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(4, 14, 6), bool], Tensor[(336), float32]) */;
  %33 = %32.1;
  %34 = cast(%33, dtype="float32") /* ty=Tensor[(4, 14, 6), float32] */;
  %35 = @func_3738() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %36 = %29.0;
  %37 = @func_7835() /* ty=Tensor[(1, 14, 6), float32] */;
  %38 = cosh(%34) /* ty=Tensor[(4, 14, 6), float32] */;
  %39 = %35.0;
  (%36, %var_8471, %37, %38, %39)
}

def @func_11185(%var_11183: Tensor[(16, 14, 6), float32], %var_11184: float64) -> (Tensor[(16, 14, 6), int64], Tensor[(13, 14, 6), float32], float64) {
  @func_11181(%var_11183, %var_11184) /* ty=(Tensor[(16, 14, 6), int64], Tensor[(13, 14, 6), float32], float64) */
}

def @func_10102() -> (Tensor[(?, 14, 6), uint32],) {
  %40 = @func_5292() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %41 = %40.2;
  (%41,)
}

def @func_5293() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %47 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
    %42 = @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %43 = @func_2898() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
    %44 = @func_2445() /* ty=Tensor[(1, 14, 6), float32] */;
    %45 = %42.0;
    %46 = %43.1;
    (%44, %45, %46)
  };
  %47() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_5896(%var_5894: float64) -> (Tensor[(?, 14, 6), float64], Tensor[(13, 14, 6), float32], float64) {
  @func_5893(%var_5894) /* ty=(Tensor[(?, 14, 6), float64], Tensor[(13, 14, 6), float32], float64) */
}

def @func_9465(%var_9464: Tensor[(15, 1, 16), uint8]) -> (Tensor[(15, 12, 16), uint8],) {
  %51 = fn (%var_9452: Tensor[(15, 1, 16), uint8]) -> (Tensor[(15, 12, 16), uint8],) {
    %48 = cast(%var_9452, dtype="uint8") /* ty=Tensor[(15, 1, 16), uint8] */;
    %49 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 12, 16), uint8] */, dtype="uint8") /* ty=Tensor[(15, 12, 16), uint8] */;
    %50 = bitwise_and(%48, %49) /* ty=Tensor[(15, 12, 16), uint8] */;
    (%50,)
  };
  %51(%var_9464) /* ty=(Tensor[(15, 12, 16), uint8],) */
}

def @func_5056() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) {
  %52 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %53 = @func_1748() /* ty=Tensor[(1, 14, 6), float32] */;
  %54 = %52.1;
  (%53, %54)
}

def @func_2665() -> Tensor[(1, 14, 6), float32] {
  %55 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %55.0
}

def @func_3347() -> Tensor[(1, 14, 6), float32] {
  @func_3345() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_3722() -> Tensor[(1, 14, 6), float32] {
  @func_3720() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_9659() -> (Tensor[(1, 14, 6), float32],) {
  @func_9657() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_4809(%var_4774: Tensor[(14, 78), float32]) -> (Tensor[(1, 14, 6), float32], Tensor[(10, 5, 8), float64], Tensor[(4, 12, 9), float64], Tensor[(432), int32], Tensor[(13, 14, 6), int32], Tensor[(14, 78), float32], Tensor[(4, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %56 = cast(meta[relay.Constant][2] /* ty=Tensor[(432), int32] */, dtype="int32") /* ty=Tensor[(432), int32] */;
  %57 = cast(meta[relay.Constant][2] /* ty=Tensor[(432), int32] */, dtype="int32") /* ty=Tensor[(432), int32] */;
  %58 = reshape(%56, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), int32] */;
  %59 = reshape(%57, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), int32] */;
  %60 = @func_3161(%58, %59) /* ty=(Tensor[(4, 12, 9), float64],) */;
  %61 = cast(%var_4774, dtype="float32") /* ty=Tensor[(14, 78), float32] */;
  %62 = reshape(%61, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %63 = @func_678(%62) /* ty=(Tensor[(?, 14, 6), uint8], Tensor[(13, 14, 6), int32]) */;
  %64 = @func_2765() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %65 = %64.0;
  %66 = cast(%65, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %67 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 14, 6), float32] */, dtype="float32") /* ty=Tensor[(4, 14, 6), float32] */;
  %68 = @func_3114() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %69 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
  %70 = @func_1133() /* ty=Tensor[(10, 5, 8), float64] */;
  %71 = %60.0;
  %72 = %63.1;
  %73 = floor_divide(%66, %67) /* ty=Tensor[(4, 14, 6), float32] */;
  %74 = %68.1;
  (%69, %70, %71, meta[relay.Constant][2] /* ty=Tensor[(432), int32] */, %72, %var_4774, %73, %74)
}

def @func_9173() -> Tensor[(1, 14, 6), float32] {
  %75 = fn () -> Tensor[(1, 14, 6), float32] {
    @func_8314() /* ty=Tensor[(1, 14, 6), float32] */
  };
  %75() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_4534() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %80 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
    %76 = @func_2765() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
    %77 = @func_2765() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
    %78 = %76.2;
    %79 = %77.1;
    (%78, %79)
  };
  %80() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_2385() -> Tensor[(?, 14, 6), float32] {
  %82 = fn () -> Tensor[(?, 14, 6), float32] {
    %81 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
    %81.0
  };
  %82() /* ty=Tensor[(?, 14, 6), float32] */
}

def @func_5507(%var_5493: float64) -> (Tensor[(6, 3, 8), float64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], float64) {
  %83 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %84 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %85 = cast(%var_5493, dtype="float64") /* ty=float64 */;
  %86 = reshape(%85, newshape=[]) /* ty=float64 */;
  %87 = @func_1866(%86) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), float32], float64, Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %88 = %83.0;
  %89 = %84.1;
  %90 = %87.4;
  (%88, %89, %90, %var_5493)
}

def @func_1269() -> (Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), float32]) {
  %109 = fn () -> (Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), float32]) {
    %91 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
    %92 = @func_435() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %93 = %92.0;
    %94 = @func_1046() /* ty=(Tensor[(?, 14, 6), uint32],) */;
    %95 = %94.0;
    %96 = cast(%95, dtype="uint32") /* ty=Tensor[(?, 14, 6), uint32] */;
    %97 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
    %98 = cast(%93, dtype="uint32") /* ty=Tensor[(1, 14, 6), uint32] */;
    %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %100 = bitwise_xor(%98, %99) /* ty=Tensor[(?, 14, 6), uint32] */;
    %101 = cast(%100, dtype="bool") /* ty=Tensor[(?, 14, 6), bool] */;
    %102 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
    %103 = cast(%93, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
    %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %105 = cast(%100, dtype="float32") /* ty=Tensor[(?, 14, 6), float32] */;
    %106 = %91.1;
    %107 = equal(%103, %104) /* ty=Tensor[(?, 14, 6), bool] */;
    %108 = atanh(%105) /* ty=Tensor[(?, 14, 6), float32] */;
    (%106, %107, %108)
  };
  %109() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), float32]) */
}

def @func_6198(%var_6196: Tensor[(7, 5, 4), float64]) -> (Tensor[(7, 5, 4), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  @func_6195(%var_6196) /* ty=(Tensor[(7, 5, 4), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_3472(%var_3456: Tensor[(1, 10, 12), float64], %var_3467: Tensor[(10, 10, 12), float64]) -> (Tensor[(2, 10, 12), float64], Tensor[(10, 10, 12), bool]) {
  %110 = cast(%var_3456, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
  %111 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 10, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 10, 12), float64] */;
  %112 = cast(%var_3456, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
  %113 = cast(%var_3467, dtype="bool") /* ty=Tensor[(10, 10, 12), bool] */;
  %114 = floor_divide(%110, %111) /* ty=Tensor[(2, 10, 12), float64] */;
  %115 = logical_and(%112, %113) /* ty=Tensor[(10, 10, 12), bool] */;
  (%114, %115)
}

def @func_8849() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  @func_8847() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_2292() -> (Tensor[(1, 14, 6), float32],) {
  %117 = fn () -> (Tensor[(1, 14, 6), float32],) {
    %116 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
    (%116,)
  };
  %117() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_10419(%var_10417: Tensor[(2, 15, 12), float64]) -> Tensor[(2, 15, 12), float64] {
  @func_10416(%var_10417) /* ty=Tensor[(2, 15, 12), float64] */
}

def @func_9500(%var_9496: Tensor[(1, 15, 2), float32]) -> Tensor[(1, 15, 2), float32] {
  %118 = cast(%var_9496, dtype="float32") /* ty=Tensor[(1, 15, 2), float32] */;
  cosh(%118) /* ty=Tensor[(1, 15, 2), float32] */
}

def @func_4128() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32]) {
  @func_4126() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32]) */
}

def @func_11052() -> Tensor[(?, 14, 6), float32] {
  @func_11050() /* ty=Tensor[(?, 14, 6), float32] */
}

def @func_2525() -> (Tensor[(1, 14, 6), float32],) {
  @func_2523() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_1133() -> Tensor[(10, 5, 8), float64] {
  %119 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 5, 8), float64] */, dtype="float64") /* ty=Tensor[(1, 5, 8), float64] */;
  %120 = cast(meta[relay.Constant][6] /* ty=Tensor[(10, 5, 8), float64] */, dtype="float64") /* ty=Tensor[(10, 5, 8), float64] */;
  minimum(%119, %120) /* ty=Tensor[(10, 5, 8), float64] */
}

def @func_6239(%var_6236: float64) -> (Tensor[(?, 14, 6), uint32], Tensor[(14, 16, 9), float64], float64) {
  %121 = cast(%var_6236, dtype="float64") /* ty=float64 */;
  %122 = reshape(%121, newshape=[]) /* ty=float64 */;
  %123 = @func_1623(%122) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) */;
  %124 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %125 = %123.0;
  (%124, %125, %var_6236)
}

def @func_1345() -> Tensor[(1, 14, 6), float32] {
  %126 = fn () -> Tensor[(1, 14, 6), float32] {
    @func_751() /* ty=Tensor[(1, 14, 6), float32] */
  };
  %126() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_3683(%var_3681: Tensor[(15, 8, 10), float64]) -> (Tensor[(15, 8, 10), float64], Tensor[(15, 8, 10), float32], Tensor[(15, 8, 10), float64], Tensor[(?, 14, 6), float64]) {
  @func_3680(%var_3681) /* ty=(Tensor[(15, 8, 10), float64], Tensor[(15, 8, 10), float32], Tensor[(15, 8, 10), float64], Tensor[(?, 14, 6), float64]) */
}

def @func_7669() -> Tensor[(?, 14, 6), uint32] {
  @func_621() /* ty=Tensor[(?, 14, 6), uint32] */
}

def @func_9740() -> (Tensor[(1, 14, 6), float32], Tensor[(16, 14, 6), float64], Tensor[(1344), float32]) {
  %132 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(16, 14, 6), float64], Tensor[(1344), float32]) {
    %127 = @func_9092() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %128 = cast(meta[relay.Constant][7] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %129 = reshape(%128, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), float32] */;
    %130 = %127.0;
    %131 = @func_8668(%129) /* ty=Tensor[(16, 14, 6), float64] */;
    (%130, %131, meta[relay.Constant][7] /* ty=Tensor[(1344), float32] */)
  };
  %132() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(16, 14, 6), float64], Tensor[(1344), float32]) */
}

def @func_752() -> Tensor[(1, 14, 6), float32] {
  %134 = fn () -> Tensor[(1, 14, 6), float32] {
    %133 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %133.0
  };
  %134() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_11579(%var_11578: float64) -> (Tensor[(1, 6, 14), bool],) {
  %138 = fn (%var_11572: float64) -> (Tensor[(1, 6, 14), bool],) {
    %135 = cast(%var_11572, dtype="bool") /* ty=bool */;
    %136 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 6, 14), float64] */, dtype="bool") /* ty=Tensor[(1, 6, 14), bool] */;
    %137 = not_equal(%135, %136) /* ty=Tensor[(1, 6, 14), bool] */;
    (%137,)
  };
  %138(%var_11578) /* ty=(Tensor[(1, 6, 14), bool],) */
}

def @func_3345() -> Tensor[(1, 14, 6), float32] {
  %139 = @func_1830() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %139.1
}

def @func_2478() -> (Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
  %140 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 3, 8), float64] */, dtype="float64") /* ty=Tensor[(6, 3, 8), float64] */;
  %141 = @func_1083() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %142 = @func_2123() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %143 = @func_2291() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %144 = sin(%140) /* ty=Tensor[(6, 3, 8), float64] */;
  %145 = %141.0;
  %146 = %142.1;
  %147 = %143.0;
  (%144, %145, %146, %147)
}

def @func_7671() -> Tensor[(?, 14, 6), uint32] {
  @func_7669() /* ty=Tensor[(?, 14, 6), uint32] */
}

def @func_6303() -> Tensor[(?, 14, 6), float64] {
  @func_6301() /* ty=Tensor[(?, 14, 6), float64] */
}

def @func_6755() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %148 = @func_2291() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %149 = @func_2259() /* ty=Tensor[(1, 14, 6), float32] */;
  %150 = %148.0;
  (%149, %150)
}

def @func_4317() -> (Tensor[(1, 14, 6), float32],) {
  @func_4315() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_8771() -> Tensor[(1, 14, 6), float32] {
  %151 = fn () -> Tensor[(1, 14, 6), float32] {
    @func_8314() /* ty=Tensor[(1, 14, 6), float32] */
  };
  %151() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_6195(%var_6175: Tensor[(7, 5, 4), float64]) -> (Tensor[(7, 5, 4), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %152 = cast(%var_6175, dtype="float64") /* ty=Tensor[(7, 5, 4), float64] */;
  %153 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %154 = cosh(%152) /* ty=Tensor[(7, 5, 4), float64] */;
  %155 = @func_1540() /* ty=Tensor[(1, 14, 6), float32] */;
  %156 = %153.4;
  (%154, %155, %156)
}

def @func_10858() -> Tensor[(1, 14, 6), float32] {
  @func_10856() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_7820(%var_7783: Tensor[(15, 15, 2), float64], %var_7784: Tensor[(15, 15, 2), float64]) -> (Tensor[(15, 15, 2), bool], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %157 = cast(%var_7784, dtype="bool") /* ty=Tensor[(15, 15, 2), bool] */;
  %158 = shape_of(%var_7783, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%var_7783, dtype="bool") /* ty=Tensor[(15, 15, 2), bool] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %161 = @func_1550() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %162 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %163 = equal(%159, %160) /* ty=Tensor[(15, 15, 2), bool] */;
  %164 = %161.0;
  %165 = %162.2;
  (%163, %164, %165)
}

def @func_3281() -> Tensor[(1, 14, 6), float32] {
  @func_3279() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_10975() -> Tensor[(1, 14, 6), float32] {
  %167 = fn () -> Tensor[(1, 14, 6), float32] {
    %166 = @func_8366() /* ty=(Tensor[(16, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
    %166.1
  };
  %167() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_7549() -> Tensor[(?, 14, 6), uint32] {
  %169 = fn () -> Tensor[(?, 14, 6), uint32] {
    %168 = @func_2765() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
    %168.3
  };
  %169() /* ty=Tensor[(?, 14, 6), uint32] */
}

def @func_6283() -> (Tensor[(1, 14, 6), float32],) {
  @func_6281() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_1551() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %173 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
    %170 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %171 = %170.0;
    %172 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
    (%171, %172)
  };
  %173() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_943() -> (Tensor[(1, 14, 6), float32],) {
  %174 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %175 = %174.0;
  (%175,)
}

def @func_8787() -> Tensor[(1, 14, 6), float32] {
  @func_8785() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_2446() -> Tensor[(1, 14, 6), float32] {
  %177 = fn () -> Tensor[(1, 14, 6), float32] {
    %176 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %176.0
  };
  %177() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_2898() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %178 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %179 = @func_1748() /* ty=Tensor[(1, 14, 6), float32] */;
  %180 = %178.1;
  (%179, %180)
}

def @func_6859() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), bool], Tensor[(336), float32], Tensor[(1, 14, 6), float32]) {
  %191 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), bool], Tensor[(336), float32], Tensor[(1, 14, 6), float32]) {
    %181 = @func_4315() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %182 = @func_5659() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
    %183 = @func_943() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %184 = cast(meta[relay.Constant][10] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
    %185 = reshape(%184, newshape=[4, 14, 6]) /* ty=Tensor[(4, 14, 6), float32] */;
    %186 = %181.0;
    %187 = %182.2;
    %188 = %183.0;
    %189 = @func_3306(%185) /* ty=Tensor[(4, 14, 6), bool] */;
    %190 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
    (%186, %187, %188, %189, meta[relay.Constant][10] /* ty=Tensor[(336), float32] */, %190)
  };
  %191() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), bool], Tensor[(336), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_3589() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %195 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
    %192 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %193 = %192.0;
    %194 = @func_1655() /* ty=Tensor[(1, 14, 6), float32] */;
    (%193, %194)
  };
  %195() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_10938(%var_10923: Tensor[(11, 14, 6), float32], %var_10935: Tensor[(70, 2), float64]) -> (Tensor[(11, 14, 6), bool], Tensor[(7, 5, 4), float64], Tensor[(70, 2), float64]) {
  %196 = @func_1540() /* ty=Tensor[(1, 14, 6), float32] */;
  %197 = cast(%196, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %198 = cast(%var_10923, dtype="bool") /* ty=Tensor[(11, 14, 6), bool] */;
  %199 = cast(%var_10935, dtype="float64") /* ty=Tensor[(70, 2), float64] */;
  %200 = reshape(%199, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), float64] */;
  %201 = @func_6195(%200) /* ty=(Tensor[(7, 5, 4), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %202 = greater(%197, %198) /* ty=Tensor[(11, 14, 6), bool] */;
  %203 = %201.0;
  (%202, %203, %var_10935)
}

def @func_9804() -> (Tensor[(1, 14, 6), float32], Tensor[(2, 6, 10), float32], Tensor[(120), float32]) {
  @func_9802() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(2, 6, 10), float32], Tensor[(120), float32]) */
}

def @func_437() -> (Tensor[(1, 14, 6), float32],) {
  @func_435() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_3406() -> (Tensor[(1, 14, 6), float32],) {
  %204 = @func_3114() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %205 = %204.1;
  (%205,)
}

def @func_5767() -> (Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
  %211 = fn () -> (Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
    %206 = @func_3757() /* ty=(Tensor[(?, 14, 6), uint32],) */;
    %207 = @func_3445() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
    %208 = %206.0;
    %209 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
    %210 = %207.1;
    (%208, %209, %210)
  };
  %211() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */
}

def @func_4812(%var_4810: Tensor[(14, 78), float32]) -> (Tensor[(1, 14, 6), float32], Tensor[(10, 5, 8), float64], Tensor[(4, 12, 9), float64], Tensor[(432), int32], Tensor[(13, 14, 6), int32], Tensor[(14, 78), float32], Tensor[(4, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  @func_4809(%var_4810) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(10, 5, 8), float64], Tensor[(4, 12, 9), float64], Tensor[(432), int32], Tensor[(13, 14, 6), int32], Tensor[(14, 78), float32], Tensor[(4, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_3740() -> (Tensor[(?, 14, 6), uint32],) {
  @func_3738() /* ty=(Tensor[(?, 14, 6), uint32],) */
}

def @func_10856() -> Tensor[(1, 14, 6), float32] {
  %212 = @func_3904() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %212.0
}

def @func_9308(%var_9306: Tensor[(12, 14, 6), float32], %var_9307: Tensor[(336), float32]) -> (Tensor[(12, 14, 6), bool], Tensor[(4, 14, 6), bool], Tensor[(336), float32], Tensor[(?, 14, 6), uint32]) {
  %223 = fn (%var_9270: Tensor[(12, 14, 6), float32], %var_9280: Tensor[(336), float32]) -> (Tensor[(12, 14, 6), bool], Tensor[(4, 14, 6), bool], Tensor[(336), float32], Tensor[(?, 14, 6), uint32]) {
    %213 = @func_3279() /* ty=Tensor[(1, 14, 6), float32] */;
    %214 = cast(%213, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
    %215 = cast(%var_9270, dtype="bool") /* ty=Tensor[(12, 14, 6), bool] */;
    %216 = cast(%var_9280, dtype="float32") /* ty=Tensor[(336), float32] */;
    %217 = reshape(%216, newshape=[336]) /* ty=Tensor[(336), float32] */;
    %218 = @func_4238(%217) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(4, 14, 6), bool], Tensor[(336), float32]) */;
    %219 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
    %220 = logical_and(%214, %215) /* ty=Tensor[(12, 14, 6), bool] */;
    %221 = %218.1;
    %222 = %219.1;
    (%220, %221, %var_9280, %222)
  };
  %223(%var_9306, %var_9307) /* ty=(Tensor[(12, 14, 6), bool], Tensor[(4, 14, 6), bool], Tensor[(336), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_5425(%var_5423: Tensor[(14, 14, 6), float32]) -> (Tensor[(14, 14, 6), int8], Tensor[(14, 14, 6), bool]) {
  @func_5422(%var_5423) /* ty=(Tensor[(14, 14, 6), int8], Tensor[(14, 14, 6), bool]) */
}

def @func_1175() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %226 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
    %224 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
    %225 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
    (%224, %225)
  };
  %226() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_10840() -> Tensor[(15, 8, 10), float64] {
  @func_10838() /* ty=Tensor[(15, 8, 10), float64] */
}

def @func_7743() -> (Tensor[(?, 14, 6), int8],) {
  %227 = @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %228 = %227.0;
  %229 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %230 = %229.1;
  %231 = cast(%230, dtype="int8") /* ty=Tensor[(?, 14, 6), int8] */;
  %232 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %233 = cast(%228, dtype="int8") /* ty=Tensor[(1, 14, 6), int8] */;
  %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %235 = left_shift(%233, %234) /* ty=Tensor[(?, 14, 6), int8] */;
  (%235,)
}

def @func_9802() -> (Tensor[(1, 14, 6), float32], Tensor[(2, 6, 10), float32], Tensor[(120), float32]) {
  %236 = cast(meta[relay.Constant][11] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %237 = reshape(%236, newshape=[2, 6, 10]) /* ty=Tensor[(2, 6, 10), float32] */;
  %238 = @func_9044(%237) /* ty=(Tensor[(2, 6, 10), float32], Tensor[(1, 14, 6), float32]) */;
  %239 = @func_5989() /* ty=Tensor[(1, 14, 6), float32] */;
  %240 = %238.0;
  (%239, %240, meta[relay.Constant][11] /* ty=Tensor[(120), float32] */)
}

def @func_10162() -> (Tensor[(?, 14, 6), uint32], Tensor[(1092), float32]) {
  %245 = fn () -> (Tensor[(?, 14, 6), uint32], Tensor[(1092), float32]) {
    %241 = @func_7351() /* ty=(Tensor[(?, 14, 6), uint32],) */;
    %242 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
    %243 = %241.0;
    %244 = %242.6;
    (%243, %244)
  };
  %245() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1092), float32]) */
}

def @func_8367() -> (Tensor[(16, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
  %253 = fn () -> (Tensor[(16, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
    %246 = @func_6755() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
    %247 = %246.1;
    %248 = cast(%247, dtype="uint32") /* ty=Tensor[(1, 14, 6), uint32] */;
    %249 = cast(meta[relay.Constant][12] /* ty=Tensor[(16, 14, 6), float32] */, dtype="uint32") /* ty=Tensor[(16, 14, 6), uint32] */;
    %250 = @func_1994() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), uint32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) */;
    %251 = bitwise_xor(%248, %249) /* ty=Tensor[(16, 14, 6), uint32] */;
    %252 = %250.1;
    (%251, %252)
  };
  %253() /* ty=(Tensor[(16, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */
}

def @func_444() -> Tensor[(1, 14, 6), float32] {
  %254 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %254.0
}

def @func_5661() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) {
  @func_5659() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */
}

def @func_11526() -> Tensor[(1, 14, 6), float32] {
  %256 = fn () -> Tensor[(1, 14, 6), float32] {
    %255 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
    %255.1
  };
  %256() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_6266() -> Tensor[(1, 14, 6), float32] {
  %258 = fn () -> Tensor[(1, 14, 6), float32] {
    %257 = @func_2123() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
    %257.0
  };
  %258() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_8847() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %259 = @func_3345() /* ty=Tensor[(1, 14, 6), float32] */;
  %260 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  (%259, %260)
}

def @func_7714(%var_7712: Tensor[(2, 14, 6), float32]) -> (Tensor[(2, 14, 6), float64], Tensor[(1, 14, 6), float32]) {
  @func_7711(%var_7712) /* ty=(Tensor[(2, 14, 6), float64], Tensor[(1, 14, 6), float32]) */
}

def @func_6734(%var_6715: Tensor[(7, 15, 8), int8]) -> (Tensor[(7, 15, 8), bool], Tensor[(7, 15, 8), float64]) {
  %261 = cast(%var_6715, dtype="bool") /* ty=Tensor[(7, 15, 8), bool] */;
  %262 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(7, 15, 8), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 15, 8), int8] */, dtype="bool") /* ty=Tensor[(7, 15, 8), bool] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %265 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 15, 8), int8] */, dtype="float64") /* ty=Tensor[(7, 15, 8), float64] */;
  %266 = less(%263, %264) /* ty=Tensor[(7, 15, 8), bool] */;
  %267 = acosh(%265) /* ty=Tensor[(7, 15, 8), float64] */;
  (%266, %267)
}

def @func_3116() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  @func_3114() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_8745(%var_8743: Tensor[(15, 10, 6), uint32], %var_8744: Tensor[(15, 10, 6), uint32]) -> (Tensor[(15, 10, 6), bool], Tensor[(15, 10, 6), bool]) {
  %278 = fn (%var_8714: Tensor[(15, 10, 6), uint32], %var_8715: Tensor[(15, 10, 6), uint32]) -> (Tensor[(15, 10, 6), bool], Tensor[(15, 10, 6), bool]) {
    %268 = cast(%var_8715, dtype="bool") /* ty=Tensor[(15, 10, 6), bool] */;
    %269 = shape_of(%var_8714, dtype="int32") /* ty=Tensor[(3), int32] */;
    %270 = cast(%var_8714, dtype="bool") /* ty=Tensor[(15, 10, 6), bool] */;
    %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %272 = cast(%var_8714, dtype="bool") /* ty=Tensor[(15, 10, 6), bool] */;
    %273 = shape_of(%var_8715, dtype="int32") /* ty=Tensor[(3), int32] */;
    %274 = cast(%var_8715, dtype="bool") /* ty=Tensor[(15, 10, 6), bool] */;
    %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %276 = greater_equal(%270, %271) /* ty=Tensor[(15, 10, 6), bool] */;
    %277 = not_equal(%274, %275) /* ty=Tensor[(15, 10, 6), bool] */;
    (%276, %277)
  };
  %278(%var_8743, %var_8744) /* ty=(Tensor[(15, 10, 6), bool], Tensor[(15, 10, 6), bool]) */
}

def @func_8611() -> (Tensor[(?, 14, 6), float64], Tensor[(?, 14, 6), float64]) {
  %279 = @func_5659() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %280 = @func_6301() /* ty=Tensor[(?, 14, 6), float64] */;
  %281 = %279.2;
  (%280, %281)
}

def @func_8713() -> Tensor[(?, 14, 6), float64] {
  %282 = fn () -> Tensor[(?, 14, 6), float64] {
    @func_6301() /* ty=Tensor[(?, 14, 6), float64] */
  };
  %282() /* ty=Tensor[(?, 14, 6), float64] */
}

def @func_7118(%var_7113: int64, %var_7114: Tensor[(5, 13, 16), int64], %var_7115: Tensor[(28, 48), uint32], %var_7116: Tensor[(1200), float64], %var_7117: Tensor[(120), float64]) -> (Tensor[(?, 14, 6), uint32], Tensor[(5, 13, 16), int16], Tensor[(1, 14, 6), float32], Tensor[(16, 14, 6), int64], Tensor[(28, 48), uint32], Tensor[(1200), float64], Tensor[(10, 10, 12), bool], Tensor[(120), float64]) {
  %305 = fn (%var_7065: int64, %var_7066: Tensor[(5, 13, 16), int64], %var_7096: Tensor[(28, 48), uint32], %var_7097: Tensor[(1200), float64], %var_7102: Tensor[(120), float64]) -> (Tensor[(?, 14, 6), uint32], Tensor[(5, 13, 16), int16], Tensor[(1, 14, 6), float32], Tensor[(16, 14, 6), int64], Tensor[(28, 48), uint32], Tensor[(1200), float64], Tensor[(10, 10, 12), bool], Tensor[(120), float64]) {
    %283 = @func_3738() /* ty=(Tensor[(?, 14, 6), uint32],) */;
    %284 = cast(%var_7065, dtype="int64") /* ty=int64 */;
    %285 = cast(%var_7066, dtype="int64") /* ty=Tensor[(5, 13, 16), int64] */;
    %286 = right_shift(%284, %285) /* ty=Tensor[(5, 13, 16), int64] */;
    %287 = cast(%286, dtype="int16") /* ty=Tensor[(5, 13, 16), int16] */;
    %288 = cast(%var_7065, dtype="int16") /* ty=int16 */;
    %289 = @func_1994() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), uint32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) */;
    %290 = cast(%var_7096, dtype="uint32") /* ty=Tensor[(28, 48), uint32] */;
    %291 = cast(%var_7097, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %292 = reshape(%290, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), uint32] */;
    %293 = reshape(%291, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
    %294 = @func_5366(%292, %293) /* ty=(Tensor[(16, 14, 6), int64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(126), uint8], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) */;
    %295 = cast(%var_7102, dtype="float64") /* ty=Tensor[(120), float64] */;
    %296 = cast(%var_7097, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %297 = reshape(%295, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float64] */;
    %298 = reshape(%296, newshape=[10, 10, 12]) /* ty=Tensor[(10, 10, 12), float64] */;
    %299 = @func_3472(%297, %298) /* ty=(Tensor[(2, 10, 12), float64], Tensor[(10, 10, 12), bool]) */;
    %300 = %283.0;
    %301 = minimum(%287, %288) /* ty=Tensor[(5, 13, 16), int16] */;
    %302 = %289.8;
    %303 = %294.0;
    %304 = %299.1;
    (%300, %301, %302, %303, %var_7096, %var_7097, %304, %var_7102)
  };
  %305(%var_7113, %var_7114, %var_7115, %var_7116, %var_7117) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(5, 13, 16), int16], Tensor[(1, 14, 6), float32], Tensor[(16, 14, 6), int64], Tensor[(28, 48), uint32], Tensor[(1200), float64], Tensor[(10, 10, 12), bool], Tensor[(120), float64]) */
}

def @func_10942(%var_10940: Tensor[(11, 14, 6), float32], %var_10941: Tensor[(70, 2), float64]) -> (Tensor[(11, 14, 6), bool], Tensor[(7, 5, 4), float64], Tensor[(70, 2), float64]) {
  @func_10938(%var_10940, %var_10941) /* ty=(Tensor[(11, 14, 6), bool], Tensor[(7, 5, 4), float64], Tensor[(70, 2), float64]) */
}

def @func_6399() -> (Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64]) {
  @func_6397() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64]) */
}

def @func_9692() -> Tensor[(1, 14, 6), float32] {
  %306 = @func_7256() /* ty=(Tensor[(10, 5, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %306.3
}

def @func_9236() -> (Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32]) {
  @func_9234() /* ty=(Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32]) */
}

def @func_9888() -> (Tensor[(1, 14, 6), float32],) {
  %309 = fn () -> (Tensor[(1, 14, 6), float32],) {
    %307 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %308 = %307.0;
    (%308,)
  };
  %309() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_10224(%var_10213: Tensor[(1, 6, 5), float64]) -> (Tensor[(?, 6, 5), float64], Tensor[(1, 14, 6), float32]) {
  %310 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 6, 5), float64] */, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %311 = shape_of(%var_10213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%var_10213, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %314 = floor_mod(%312, %313) /* ty=Tensor[(?, 6, 5), float64] */;
  %315 = @func_9172() /* ty=Tensor[(1, 14, 6), float32] */;
  (%314, %315)
}

def @func_9634() -> Tensor[(1, 14, 6), float32] {
  @func_9632() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_5846(%var_5845: Tensor[(15, 8, 10), float64]) -> (Tensor[(15, 8, 10), uint8], Tensor[(15, 8, 10), float64]) {
  %324 = fn (%var_5816: Tensor[(15, 8, 10), float64]) -> (Tensor[(15, 8, 10), uint8], Tensor[(15, 8, 10), float64]) {
    %316 = @func_2947() /* ty=Tensor[(15, 8, 10), float64] */;
    %317 = cast(%var_5816, dtype="uint8") /* ty=Tensor[(15, 8, 10), uint8] */;
    %318 = shape_of(%316, dtype="int32") /* ty=Tensor[(3), int32] */;
    %319 = cast(%316, dtype="uint8") /* ty=Tensor[(15, 8, 10), uint8] */;
    %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %321 = cast(%316, dtype="float64") /* ty=Tensor[(15, 8, 10), float64] */;
    %322 = bitwise_and(%319, %320) /* ty=Tensor[(15, 8, 10), uint8] */;
    %323 = sigmoid(%321) /* ty=Tensor[(15, 8, 10), float64] */;
    (%322, %323)
  };
  %324(%var_5845) /* ty=(Tensor[(15, 8, 10), uint8], Tensor[(15, 8, 10), float64]) */
}

def @func_2679() -> Tensor[(13, 14, 6), int32] {
  %325 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %325.5
}

def @func_2208(%var_2158: Tensor[(11, 11, 7), float64], %var_2187: Tensor[(1092), float32]) -> (Tensor[(?, 14, 6), uint32], Tensor[(11, 11, 7), float32], Tensor[(?, 14, 6), uint8], Tensor[(1092), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
  %326 = cast(%var_2158, dtype="float64") /* ty=Tensor[(11, 11, 7), float64] */;
  %327 = sin(%326) /* ty=Tensor[(11, 11, 7), float64] */;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(11, 11, 7), float32] */;
  %329 = cos(%328) /* ty=Tensor[(11, 11, 7), float32] */;
  %330 = cast(%329, dtype="float32") /* ty=Tensor[(11, 11, 7), float32] */;
  %331 = cast(%var_2187, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %332 = reshape(%331, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
  %333 = @func_678(%332) /* ty=(Tensor[(?, 14, 6), uint8], Tensor[(13, 14, 6), int32]) */;
  %334 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %335 = atanh(%330) /* ty=Tensor[(11, 11, 7), float32] */;
  %336 = %333.0;
  %337 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %338 = @func_1540() /* ty=Tensor[(1, 14, 6), float32] */;
  (%334, %335, %336, %var_2187, %337, %338)
}

def @func_10416(%var_10410: Tensor[(2, 15, 12), float64]) -> Tensor[(2, 15, 12), float64] {
  %339 = cast(%var_10410, dtype="float64") /* ty=Tensor[(2, 15, 12), float64] */;
  erf(%339) /* ty=Tensor[(2, 15, 12), float64] */
}

def @func_11050() -> Tensor[(?, 14, 6), float32] {
  %340 = @func_3904() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %341 = %340.0;
  %342 = @func_5923() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %343 = %342.0;
  %344 = cast(%343, dtype="float32") /* ty=Tensor[(?, 14, 6), float32] */;
  %345 = shape_of(%341, dtype="int32") /* ty=Tensor[(3), int32] */;
  %346 = cast(%341, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %347 = dyn.reshape(%344, %345, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  multiply(%346, %347) /* ty=Tensor[(?, 14, 6), float32] */
}

def @func_547() -> (Tensor[(1, 14, 6), float32],) {
  %348 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %349 = %348.0;
  (%349,)
}

def @func_6166() -> Tensor[(1, 14, 6), float32] {
  @func_6164() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_3165(%var_3163: Tensor[(4, 12, 9), int32], %var_3164: Tensor[(4, 12, 9), int32]) -> (Tensor[(4, 12, 9), float64],) {
  @func_3161(%var_3163, %var_3164) /* ty=(Tensor[(4, 12, 9), float64],) */
}

def @func_3308(%var_3307: Tensor[(4, 14, 6), float32]) -> Tensor[(4, 14, 6), bool] {
  %354 = fn (%var_3301: Tensor[(4, 14, 6), float32]) -> Tensor[(4, 14, 6), bool] {
    %350 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %351 = %350.0;
    %352 = cast(%351, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
    %353 = cast(%var_3301, dtype="bool") /* ty=Tensor[(4, 14, 6), bool] */;
    not_equal(%352, %353) /* ty=Tensor[(4, 14, 6), bool] */
  };
  %354(%var_3307) /* ty=Tensor[(4, 14, 6), bool] */
}

def @func_5990() -> Tensor[(1, 14, 6), float32] {
  %356 = fn () -> Tensor[(1, 14, 6), float32] {
    %355 = @func_4315() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %355.0
  };
  %356() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_11460() -> (Tensor[(?, 14, 6), uint32],) {
  %359 = fn () -> (Tensor[(?, 14, 6), uint32],) {
    %357 = @func_6397() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64]) */;
    %358 = %357.0;
    (%358,)
  };
  %359() /* ty=(Tensor[(?, 14, 6), uint32],) */
}

def @func_6737(%var_6735: Tensor[(7, 15, 8), int8]) -> (Tensor[(7, 15, 8), bool], Tensor[(7, 15, 8), float64]) {
  @func_6734(%var_6735) /* ty=(Tensor[(7, 15, 8), bool], Tensor[(7, 15, 8), float64]) */
}

def @func_8950(%var_8949: Tensor[(140), float64]) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(140), float64], Tensor[(1, 14, 6), float32]) {
  %368 = fn (%var_8927: Tensor[(140), float64]) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(140), float64], Tensor[(1, 14, 6), float32]) {
    %360 = @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %361 = cast(%var_8927, dtype="float64") /* ty=Tensor[(140), float64] */;
    %362 = reshape(%361, newshape=[7, 5, 4]) /* ty=Tensor[(7, 5, 4), float64] */;
    %363 = @func_6195(%362) /* ty=(Tensor[(7, 5, 4), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
    %364 = @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %365 = %360.0;
    %366 = %363.2;
    %367 = %364.0;
    (%365, %366, %var_8927, %367)
  };
  %368(%var_8949) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(140), float64], Tensor[(1, 14, 6), float32]) */
}

def @func_11627() -> (Tensor[(?, 14, 6), float32],) {
  %369 = @func_11050() /* ty=Tensor[(?, 14, 6), float32] */;
  (%369,)
}

def @func_10018(%var_10017: float64) -> (Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(11, 14, 6), bool], Tensor[(924), uint32], Tensor[(?, 14, 6), bool], Tensor[(1, 14, 6), float32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) {
  %387 = fn (%var_9987: float64) -> (Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(11, 14, 6), bool], Tensor[(924), uint32], Tensor[(?, 14, 6), bool], Tensor[(1, 14, 6), float32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) {
    %370 = @func_7054() /* ty=(Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32]) */;
    %371 = cast(meta[relay.Constant][15] /* ty=Tensor[(924), uint32] */, dtype="uint32") /* ty=Tensor[(924), uint32] */;
    %372 = reshape(%371, newshape=[11, 14, 6]) /* ty=Tensor[(11, 14, 6), uint32] */;
    %373 = @func_1550() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
    %374 = cast(%var_9987, dtype="float64") /* ty=float64 */;
    %375 = cast(meta[relay.Constant][16] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %376 = reshape(%374, newshape=[]) /* ty=float64 */;
    %377 = reshape(%375, newshape=[10, 6, 2]) /* ty=Tensor[(10, 6, 2), float64] */;
    %378 = @func_1366(%376, %377) /* ty=(Tensor[(10, 6, 2), float64],) */;
    %379 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
    %380 = %370.0;
    %381 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
    %382 = @func_6678(%372) /* ty=Tensor[(11, 14, 6), bool] */;
    %383 = @func_3554() /* ty=Tensor[(?, 14, 6), bool] */;
    %384 = %373.1;
    %385 = %378.0;
    %386 = %379.3;
    (%380, %381, %382, meta[relay.Constant][15] /* ty=Tensor[(924), uint32] */, %383, %384, %385, %var_9987, meta[relay.Constant][16] /* ty=Tensor[(120), float64] */, %386)
  };
  %387(%var_10017) /* ty=(Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(11, 14, 6), bool], Tensor[(924), uint32], Tensor[(?, 14, 6), bool], Tensor[(1, 14, 6), float32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) */
}

def @func_8753() -> Tensor[(1, 14, 6), float32] {
  %388 = @func_1578() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(5, 9, 16), float64]) */;
  %388.0
}

def @func_11141() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float32], Tensor[(?, 14, 6), uint32]) {
  %396 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float32], Tensor[(?, 14, 6), uint32]) {
    %389 = @func_10389() /* ty=(Tensor[(13, 14, 6), bool], Tensor[(15, 8, 10), float32], Tensor[(1344), uint32], Tensor[(1200), float64]) */;
    %390 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
    %391 = @func_8770() /* ty=Tensor[(1, 14, 6), float32] */;
    %392 = @func_1748() /* ty=Tensor[(1, 14, 6), float32] */;
    %393 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
    %394 = %389.1;
    %395 = %390.1;
    (%391, %392, %393, %394, %395)
  };
  %396() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_7888() -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32]) {
  @func_7886() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32]) */
}

def @func_3757() -> (Tensor[(?, 14, 6), uint32],) {
  %397 = @func_2765() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %398 = %397.1;
  (%398,)
}

def @func_549() -> (Tensor[(1, 14, 6), float32],) {
  @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_8693(%var_8691: Tensor[(4, 9, 1), float32]) -> (Tensor[(4, 9, 1), float32],) {
  @func_8690(%var_8691) /* ty=(Tensor[(4, 9, 1), float32],) */
}

def @func_2681() -> Tensor[(13, 14, 6), int32] {
  @func_2679() /* ty=Tensor[(13, 14, 6), int32] */
}

def @func_680(%var_679: Tensor[(13, 14, 6), float32]) -> (Tensor[(?, 14, 6), uint8], Tensor[(13, 14, 6), int32]) {
  %415 = fn (%var_630: Tensor[(13, 14, 6), float32]) -> (Tensor[(?, 14, 6), uint8], Tensor[(13, 14, 6), int32]) {
    %399 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
    %400 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %401 = %400.0;
    %402 = cast(%401, dtype="uint8") /* ty=Tensor[(1, 14, 6), uint8] */;
    %403 = shape_of(%399, dtype="int32") /* ty=Tensor[(3), int32] */;
    %404 = cast(%399, dtype="uint8") /* ty=Tensor[(?, 14, 6), uint8] */;
    %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %406 = cast(%401, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
    %407 = cast(%var_630, dtype="float64") /* ty=Tensor[(13, 14, 6), float64] */;
    %408 = divide(%406, %407) /* ty=Tensor[(13, 14, 6), float64] */;
    %409 = cast(%var_630, dtype="int32") /* ty=Tensor[(13, 14, 6), int32] */;
    %410 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
    %411 = cast(%408, dtype="int32") /* ty=Tensor[(13, 14, 6), int32] */;
    %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %413 = bitwise_or(%404, %405) /* ty=Tensor[(?, 14, 6), uint8] */;
    %414 = left_shift(%411, %412) /* ty=Tensor[(13, 14, 6), int32] */;
    (%413, %414)
  };
  %415(%var_679) /* ty=(Tensor[(?, 14, 6), uint8], Tensor[(13, 14, 6), int32]) */
}

def @func_2329() -> (Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) {
  %416 = @func_1268() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), float32]) */;
  %417 = @func_1268() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), float32]) */;
  %418 = %417.1;
  %419 = cast(%418, dtype="float64") /* ty=Tensor[(?, 14, 6), float64] */;
  %420 = %416.2;
  %421 = rsqrt(%419) /* ty=Tensor[(?, 14, 6), float64] */;
  (%420, %421)
}

def @func_3738() -> (Tensor[(?, 14, 6), uint32],) {
  %422 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %423 = %422.1;
  (%423,)
}

def @func_3905() -> (Tensor[(1, 14, 6), float32],) {
  %425 = fn () -> (Tensor[(1, 14, 6), float32],) {
    %424 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
    (%424,)
  };
  %425() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_6681(%var_6679: Tensor[(11, 14, 6), uint32]) -> Tensor[(11, 14, 6), bool] {
  @func_6678(%var_6679) /* ty=Tensor[(11, 14, 6), bool] */
}

def @func_8422(%var_8420: Tensor[(1200), float64]) -> (Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(10, 10, 12), bool], Tensor[(120), float64], Tensor[(1200), float64]) {
  @func_8419(%var_8420) /* ty=(Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(10, 10, 12), bool], Tensor[(120), float64], Tensor[(1200), float64]) */
}

def @func_8613() -> (Tensor[(?, 14, 6), float64], Tensor[(?, 14, 6), float64]) {
  @func_8611() /* ty=(Tensor[(?, 14, 6), float64], Tensor[(?, 14, 6), float64]) */
}

def @func_6488() -> (Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64], Tensor[(15, 8, 10), float64], Tensor[(?, 14, 6), bool]) {
  %439 = fn () -> (Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64], Tensor[(15, 8, 10), float64], Tensor[(?, 14, 6), bool]) {
    %426 = @func_3738() /* ty=(Tensor[(?, 14, 6), uint32],) */;
    %427 = @func_6397() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64]) */;
    %428 = @func_3904() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %429 = %428.0;
    %430 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
    %431 = cast(%430, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
    %432 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
    %433 = cast(%429, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
    %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %435 = %426.0;
    %436 = %427.1;
    %437 = @func_2947() /* ty=Tensor[(15, 8, 10), float64] */;
    %438 = greater(%433, %434) /* ty=Tensor[(?, 14, 6), bool] */;
    (%435, %436, %437, %438)
  };
  %439() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64], Tensor[(15, 8, 10), float64], Tensor[(?, 14, 6), bool]) */
}

def @func_9092() -> (Tensor[(1, 14, 6), float32],) {
  %440 = @func_8753() /* ty=Tensor[(1, 14, 6), float32] */;
  (%440,)
}

def @func_7456() -> Tensor[(?, 14, 6), float64] {
  %441 = @func_5659() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %441.2
}

def @func_3161(%var_3134: Tensor[(4, 12, 9), int32], %var_3135: Tensor[(4, 12, 9), int32]) -> (Tensor[(4, 12, 9), float64],) {
  %442 = cast(%var_3135, dtype="int32") /* ty=Tensor[(4, 12, 9), int32] */;
  %443 = shape_of(%var_3134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%var_3134, dtype="int32") /* ty=Tensor[(4, 12, 9), int32] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %446 = logical_xor(%444, %445) /* ty=Tensor[(4, 12, 9), int32] */;
  %447 = cast(%446, dtype="float64") /* ty=Tensor[(4, 12, 9), float64] */;
  %448 = tan(%447) /* ty=Tensor[(4, 12, 9), float64] */;
  (%448,)
}

def @func_4126() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32]) {
  %449 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %450 = %449.0;
  %451 = @func_2384() /* ty=Tensor[(?, 14, 6), float32] */;
  (%450, %451)
}

def @func_9009() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %452 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %453 = @func_8785() /* ty=Tensor[(1, 14, 6), float32] */;
  %454 = %452.1;
  (%453, %454)
}

def @func_7458() -> Tensor[(?, 14, 6), float64] {
  @func_7456() /* ty=Tensor[(?, 14, 6), float64] */
}

def @func_1868(%var_1867: float64) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), float32], float64, Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %465 = fn (%var_1853: float64) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), float32], float64, Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
    %455 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
    %456 = cast(%var_1853, dtype="float64") /* ty=float64 */;
    %457 = reshape(%456, newshape=[]) /* ty=float64 */;
    %458 = @func_1623(%457) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) */;
    %459 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %460 = %455.0;
    %461 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
    %462 = %458.1;
    %463 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
    %464 = %459.0;
    (%460, %461, %462, %var_1853, %463, %464)
  };
  %465(%var_1867) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), float32], float64, Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_6242(%var_6240: float64) -> (Tensor[(?, 14, 6), uint32], Tensor[(14, 16, 9), float64], float64) {
  @func_6239(%var_6240) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(14, 16, 9), float64], float64) */
}

def @func_1366(%var_1346: float64, %var_1347: Tensor[(10, 6, 2), float64]) -> (Tensor[(10, 6, 2), float64],) {
  %466 = cast(%var_1346, dtype="float64") /* ty=float64 */;
  %467 = cast(%var_1347, dtype="float64") /* ty=Tensor[(10, 6, 2), float64] */;
  %468 = floor_divide(%466, %467) /* ty=Tensor[(10, 6, 2), float64] */;
  (%468,)
}

def @func_2212(%var_2210: Tensor[(11, 11, 7), float64], %var_2211: Tensor[(1092), float32]) -> (Tensor[(?, 14, 6), uint32], Tensor[(11, 11, 7), float32], Tensor[(?, 14, 6), uint8], Tensor[(1092), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
  @func_2208(%var_2210, %var_2211) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(11, 11, 7), float32], Tensor[(?, 14, 6), uint8], Tensor[(1092), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */
}

def @func_6164() -> Tensor[(1, 14, 6), float32] {
  %469 = @func_2291() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %469.0
}

def @func_3279() -> Tensor[(1, 14, 6), float32] {
  %470 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %470.4
}

def @func_5422(%var_5396: Tensor[(14, 14, 6), float32]) -> (Tensor[(14, 14, 6), int8], Tensor[(14, 14, 6), bool]) {
  %471 = @func_1550() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %472 = %471.0;
  %473 = cast(%var_5396, dtype="int8") /* ty=Tensor[(14, 14, 6), int8] */;
  %474 = cast(%472, dtype="int8") /* ty=Tensor[(1, 14, 6), int8] */;
  %475 = cast(%472, dtype="int16") /* ty=Tensor[(1, 14, 6), int16] */;
  %476 = cast(%var_5396, dtype="int16") /* ty=Tensor[(14, 14, 6), int16] */;
  %477 = bitwise_or(%475, %476) /* ty=Tensor[(14, 14, 6), int16] */;
  %478 = cast(%477, dtype="bool") /* ty=Tensor[(14, 14, 6), bool] */;
  %479 = shape_of(%var_5396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(%var_5396, dtype="bool") /* ty=Tensor[(14, 14, 6), bool] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %482 = bitwise_xor(%473, %474) /* ty=Tensor[(14, 14, 6), int8] */;
  %483 = greater_equal(%480, %481) /* ty=Tensor[(14, 14, 6), bool] */;
  (%482, %483)
}

def @func_1370(%var_1368: float64, %var_1369: Tensor[(10, 6, 2), float64]) -> (Tensor[(10, 6, 2), float64],) {
  @func_1366(%var_1368, %var_1369) /* ty=(Tensor[(10, 6, 2), float64],) */
}

def @func_3759() -> (Tensor[(?, 14, 6), uint32],) {
  @func_3757() /* ty=(Tensor[(?, 14, 6), uint32],) */
}

def @func_9094() -> (Tensor[(1, 14, 6), float32],) {
  @func_9092() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_3408() -> (Tensor[(1, 14, 6), float32],) {
  @func_3406() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_918() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) {
  %494 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) {
    %484 = @func_435() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %485 = cast(meta[relay.Constant][17] /* ty=Tensor[(1092), float32] */, dtype="float32") /* ty=Tensor[(1092), float32] */;
    %486 = reshape(%485, newshape=[13, 14, 6]) /* ty=Tensor[(13, 14, 6), float32] */;
    %487 = @func_678(%486) /* ty=(Tensor[(?, 14, 6), uint8], Tensor[(13, 14, 6), int32]) */;
    %488 = %484.0;
    %489 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
    %490 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
    %491 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
    %492 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
    %493 = %487.1;
    (%488, %489, %490, %491, %492, %493, meta[relay.Constant][17] /* ty=Tensor[(1092), float32] */)
  };
  %494() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */
}

def @func_9414() -> Tensor[(?, 14, 6), float64] {
  @func_7456() /* ty=Tensor[(?, 14, 6), float64] */
}

def @func_1781() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %498 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
    %495 = @func_943() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %496 = %495.0;
    %497 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
    (%496, %497)
  };
  %498() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_7145() -> (Tensor[(1, 14, 6), float32], Tensor[(4, 12, 9), float64], Tensor[(216, 2), int32]) {
  %499 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %500 = cast(meta[relay.Constant][18] /* ty=Tensor[(216, 2), int32] */, dtype="int32") /* ty=Tensor[(216, 2), int32] */;
  %501 = cast(meta[relay.Constant][18] /* ty=Tensor[(216, 2), int32] */, dtype="int32") /* ty=Tensor[(216, 2), int32] */;
  %502 = reshape(%500, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), int32] */;
  %503 = reshape(%501, newshape=[4, 12, 9]) /* ty=Tensor[(4, 12, 9), int32] */;
  %504 = @func_3161(%502, %503) /* ty=(Tensor[(4, 12, 9), float64],) */;
  %505 = %499.0;
  %506 = %504.0;
  (%505, %506, meta[relay.Constant][18] /* ty=Tensor[(216, 2), int32] */)
}

def @func_5925() -> (Tensor[(?, 14, 6), uint32],) {
  @func_5923() /* ty=(Tensor[(?, 14, 6), uint32],) */
}

def @func_3680(%var_3646: Tensor[(15, 8, 10), float64]) -> (Tensor[(15, 8, 10), float64], Tensor[(15, 8, 10), float32], Tensor[(15, 8, 10), float64], Tensor[(?, 14, 6), float64]) {
  %507 = @func_2947() /* ty=Tensor[(15, 8, 10), float64] */;
  %508 = cast(%var_3646, dtype="float64") /* ty=Tensor[(15, 8, 10), float64] */;
  %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%507, dtype="float64") /* ty=Tensor[(15, 8, 10), float64] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %512 = cast(%507, dtype="float32") /* ty=Tensor[(15, 8, 10), float32] */;
  %513 = @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %514 = %513.0;
  %515 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 14, 6), float32] */, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %516 = shape_of(%514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%514, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %519 = power(%510, %511) /* ty=Tensor[(15, 8, 10), float64] */;
  %520 = erf(%512) /* ty=Tensor[(15, 8, 10), float32] */;
  %521 = @func_2947() /* ty=Tensor[(15, 8, 10), float64] */;
  %522 = divide(%517, %518) /* ty=Tensor[(?, 14, 6), float64] */;
  (%519, %520, %521, %522)
}

def @func_7824(%var_7822: Tensor[(15, 15, 2), float64], %var_7823: Tensor[(15, 15, 2), float64]) -> (Tensor[(15, 15, 2), bool], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  @func_7820(%var_7822, %var_7823) /* ty=(Tensor[(15, 15, 2), bool], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_10293() -> Tensor[(?, 14, 6), float64] {
  %523 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %523.1
}

def @func_9011() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  @func_9009() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_6281() -> (Tensor[(1, 14, 6), float32],) {
  %524 = @func_2765() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %525 = %524.0;
  (%525,)
}

def @func_7836() -> Tensor[(1, 14, 6), float32] {
  %527 = fn () -> Tensor[(1, 14, 6), float32] {
    %526 = @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %526.0
  };
  %527() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_5779() -> Tensor[(1, 14, 6), float32] {
  @func_5777() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_10838() -> Tensor[(15, 8, 10), float64] {
  @func_2947() /* ty=Tensor[(15, 8, 10), float64] */
}

def @func_7352() -> (Tensor[(?, 14, 6), uint32],) {
  %529 = fn () -> (Tensor[(?, 14, 6), uint32],) {
    %528 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
    (%528,)
  };
  %529() /* ty=(Tensor[(?, 14, 6), uint32],) */
}

def @func_2480() -> (Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) {
  @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */
}

def @func_5370(%var_5368: Tensor[(16, 14, 6), uint32], %var_5369: Tensor[(1200), float64]) -> (Tensor[(16, 14, 6), int64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(126), uint8], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) {
  @func_5366(%var_5368, %var_5369) /* ty=(Tensor[(16, 14, 6), int64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(126), uint8], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) */
}

def @func_4632() -> Tensor[(?, 14, 6), uint32] {
  %531 = fn () -> Tensor[(?, 14, 6), uint32] {
    %530 = @func_1994() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), uint32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) */;
    %530.4
  };
  %531() /* ty=Tensor[(?, 14, 6), uint32] */
}

def @func_11181(%var_11167: Tensor[(16, 14, 6), float32], %var_11175: float64) -> (Tensor[(16, 14, 6), int64], Tensor[(13, 14, 6), float32], float64) {
  %532 = @func_7054() /* ty=(Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32]) */;
  %533 = %532.1;
  %534 = cast(%533, dtype="int64") /* ty=Tensor[(1, 14, 6), int64] */;
  %535 = cast(%var_11167, dtype="int64") /* ty=Tensor[(16, 14, 6), int64] */;
  %536 = cast(%var_11175, dtype="float64") /* ty=float64 */;
  %537 = reshape(%536, newshape=[]) /* ty=float64 */;
  %538 = @func_1623(%537) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) */;
  %539 = maximum(%534, %535) /* ty=Tensor[(16, 14, 6), int64] */;
  %540 = %538.1;
  (%539, %540, %var_11175)
}

def @func_8785() -> Tensor[(1, 14, 6), float32] {
  @func_444() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_1085() -> (Tensor[(1, 14, 6), float32],) {
  @func_1083() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_1007(%var_1006: float64) -> (Tensor[(14, 16, 9), float64], Tensor[(14, 16, 9), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %549 = fn (%var_961: float64) -> (Tensor[(14, 16, 9), float64], Tensor[(14, 16, 9), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
    %541 = cast(%var_961, dtype="float64") /* ty=float64 */;
    %542 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 16, 9), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 9), float64] */;
    %543 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 16, 9), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 9), float64] */;
    %544 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
    %545 = divide(%541, %542) /* ty=Tensor[(14, 16, 9), float64] */;
    %546 = atan(%543) /* ty=Tensor[(14, 16, 9), float64] */;
    %547 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
    %548 = %544.4;
    (%545, %546, %547, %548)
  };
  %549(%var_1006) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(14, 16, 9), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_4954(%var_4953: Tensor[(168, 2), uint32]) -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), uint64], Tensor[(168, 2), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1200), float64]) {
  %562 = fn (%var_4923: Tensor[(168, 2), uint32]) -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), uint64], Tensor[(168, 2), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1200), float64]) {
    %550 = cast(%var_4923, dtype="uint32") /* ty=Tensor[(168, 2), uint32] */;
    %551 = reshape(%550, newshape=[4, 14, 6]) /* ty=Tensor[(4, 14, 6), uint32] */;
    %552 = @func_3269(%551) /* ty=(Tensor[(?, 14, 6), float32], Tensor[(4, 14, 6), uint64], Tensor[(?, 14, 6), uint32]) */;
    %553 = @func_2291() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %554 = cast(meta[relay.Constant][21] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %555 = reshape(%554, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
    %556 = @func_3854(%555) /* ty=(Tensor[(?, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) */;
    %557 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
    %558 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
    %559 = %552.1;
    %560 = %553.0;
    %561 = %556.1;
    (%557, %558, %559, %var_4923, %560, %561, meta[relay.Constant][21] /* ty=Tensor[(1200), float64] */)
  };
  %562(%var_4953) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), uint64], Tensor[(168, 2), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1200), float64]) */
}

def @func_11302() -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], float64) {
  %563 = @func_2123() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %564 = @func_6755() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %565 = @func_3757() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %566 = cast(-0.183877f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %567 = reshape(%566, newshape=[]) /* ty=float64 */;
  %568 = @func_1005(%567) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(14, 16, 9), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %569 = %563.1;
  %570 = @func_7835() /* ty=Tensor[(1, 14, 6), float32] */;
  %571 = %564.0;
  %572 = @func_9414() /* ty=Tensor[(?, 14, 6), float64] */;
  %573 = %565.0;
  %574 = %568.2;
  (%569, %570, %571, %572, %573, %574, -0.183877f64 /* ty=float64 */)
}

def @func_11629() -> (Tensor[(?, 14, 6), float32],) {
  @func_11627() /* ty=(Tensor[(?, 14, 6), float32],) */
}

def @func_4240(%var_4239: Tensor[(336), float32]) -> (Tensor[(?, 14, 6), uint32], Tensor[(4, 14, 6), bool], Tensor[(336), float32]) {
  %580 = fn (%var_4236: Tensor[(336), float32]) -> (Tensor[(?, 14, 6), uint32], Tensor[(4, 14, 6), bool], Tensor[(336), float32]) {
    %575 = @func_3738() /* ty=(Tensor[(?, 14, 6), uint32],) */;
    %576 = cast(%var_4236, dtype="float32") /* ty=Tensor[(336), float32] */;
    %577 = reshape(%576, newshape=[4, 14, 6]) /* ty=Tensor[(4, 14, 6), float32] */;
    %578 = %575.0;
    %579 = @func_3306(%577) /* ty=Tensor[(4, 14, 6), bool] */;
    (%578, %579, %var_4236)
  };
  %580(%var_4239) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(4, 14, 6), bool], Tensor[(336), float32]) */
}

def @func_1135() -> Tensor[(10, 5, 8), float64] {
  @func_1133() /* ty=Tensor[(10, 5, 8), float64] */
}

def @func_8315() -> Tensor[(1, 14, 6), float32] {
  %581 = fn () -> Tensor[(1, 14, 6), float32] {
    @func_2665() /* ty=Tensor[(1, 14, 6), float32] */
  };
  %581() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_10227(%var_10225: Tensor[(1, 6, 5), float64]) -> (Tensor[(?, 6, 5), float64], Tensor[(1, 14, 6), float32]) {
  @func_10224(%var_10225) /* ty=(Tensor[(?, 6, 5), float64], Tensor[(1, 14, 6), float32]) */
}

def @func_10611() -> (Tensor[(?, 14, 6), float64], Tensor[(4, 14, 6), bool], Tensor[(168, 2), float32], Tensor[(1008, 1), float64], Tensor[(1, 14, 6), float32]) {
  %582 = @func_5948() /* ty=Tensor[(?, 14, 6), uint32] */;
  %583 = @func_435() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %584 = %583.0;
  %585 = cast(%584, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %586 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%582, dtype="float64") /* ty=Tensor[(?, 14, 6), float64] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %589 = cast(meta[relay.Constant][22] /* ty=Tensor[(1008, 1), float32] */, dtype="float32") /* ty=Tensor[(1008, 1), float32] */;
  %590 = cast(meta[relay.Constant][23] /* ty=Tensor[(168, 2), float32] */, dtype="float32") /* ty=Tensor[(168, 2), float32] */;
  %591 = reshape(%589, newshape=[12, 14, 6]) /* ty=Tensor[(12, 14, 6), float32] */;
  %592 = reshape(%590, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %593 = @func_9305(%591, %592) /* ty=(Tensor[(12, 14, 6), bool], Tensor[(4, 14, 6), bool], Tensor[(336), float32], Tensor[(?, 14, 6), uint32]) */;
  %594 = cast(meta[relay.Constant][22] /* ty=Tensor[(1008, 1), float32] */, dtype="float64") /* ty=Tensor[(1008, 1), float64] */;
  %595 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %596 = floor_divide(%587, %588) /* ty=Tensor[(?, 14, 6), float64] */;
  %597 = %593.1;
  %598 = asin(%594) /* ty=Tensor[(1008, 1), float64] */;
  %599 = %595.0;
  (%596, %597, meta[relay.Constant][23] /* ty=Tensor[(168, 2), float32] */, %598, %599)
}

def @func_7745() -> (Tensor[(?, 14, 6), int8],) {
  @func_7743() /* ty=(Tensor[(?, 14, 6), int8],) */
}

def @func_1657() -> Tensor[(1, 14, 6), float32] {
  @func_1655() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_11304() -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], float64) {
  @func_11302() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], float64) */
}

def @func_3854(%var_3842: Tensor[(1200), float64]) -> (Tensor[(?, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) {
  %600 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %601 = cast(%var_3842, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %602 = reshape(%601, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), float64] */;
  %603 = @func_3680(%602) /* ty=(Tensor[(15, 8, 10), float64], Tensor[(15, 8, 10), float32], Tensor[(15, 8, 10), float64], Tensor[(?, 14, 6), float64]) */;
  %604 = @func_2384() /* ty=Tensor[(?, 14, 6), float32] */;
  %605 = %600.1;
  %606 = %603.1;
  (%604, %605, %606, %var_3842)
}

def @func_9503(%var_9501: Tensor[(1, 15, 2), float32]) -> Tensor[(1, 15, 2), float32] {
  @func_9500(%var_9501) /* ty=Tensor[(1, 15, 2), float32] */
}

def @func_622() -> Tensor[(?, 14, 6), uint32] {
  %620 = fn () -> Tensor[(?, 14, 6), uint32] {
    %607 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %608 = %607.0;
    %609 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %610 = %609.0;
    %611 = cast(%610, dtype="uint8") /* ty=Tensor[(1, 14, 6), uint8] */;
    %612 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
    %613 = cast(%608, dtype="uint8") /* ty=Tensor[(1, 14, 6), uint8] */;
    %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %615 = bitwise_and(%613, %614) /* ty=Tensor[(?, 14, 6), uint8] */;
    %616 = cast(%615, dtype="uint32") /* ty=Tensor[(?, 14, 6), uint32] */;
    %617 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
    %618 = cast(%608, dtype="uint32") /* ty=Tensor[(1, 14, 6), uint32] */;
    %619 = dyn.reshape(%616, %617, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    subtract(%618, %619) /* ty=Tensor[(?, 14, 6), uint32] */
  };
  %620() /* ty=Tensor[(?, 14, 6), uint32] */
}

def @func_8690(%var_8679: Tensor[(4, 9, 1), float32]) -> (Tensor[(4, 9, 1), float32],) {
  %621 = cast(%var_8679, dtype="float32") /* ty=Tensor[(4, 9, 1), float32] */;
  %622 = log(%621) /* ty=Tensor[(4, 9, 1), float32] */;
  (%622,)
}

def @func_7711(%var_7691: Tensor[(2, 14, 6), float32]) -> (Tensor[(2, 14, 6), float64], Tensor[(1, 14, 6), float32]) {
  %623 = @func_3445() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %624 = %623.1;
  %625 = cast(%624, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
  %626 = cast(%var_7691, dtype="float64") /* ty=Tensor[(2, 14, 6), float64] */;
  %627 = @func_547() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %628 = mod(%625, %626) /* ty=Tensor[(2, 14, 6), float64] */;
  %629 = %627.0;
  (%628, %629)
}

def @func_2690() -> Tensor[(10, 5, 8), float64] {
  %630 = fn () -> Tensor[(10, 5, 8), float64] {
    @func_1133() /* ty=Tensor[(10, 5, 8), float64] */
  };
  %630() /* ty=Tensor[(10, 5, 8), float64] */
}

def @func_3476(%var_3474: Tensor[(1, 10, 12), float64], %var_3475: Tensor[(10, 10, 12), float64]) -> (Tensor[(2, 10, 12), float64], Tensor[(10, 10, 12), bool]) {
  @func_3472(%var_3474, %var_3475) /* ty=(Tensor[(2, 10, 12), float64], Tensor[(10, 10, 12), bool]) */
}

def @func_9044(%var_9018: Tensor[(2, 6, 10), float32]) -> (Tensor[(2, 6, 10), float32], Tensor[(1, 14, 6), float32]) {
  %631 = cast(%var_9018, dtype="float32") /* ty=Tensor[(2, 6, 10), float32] */;
  %632 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(2, 6, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 6, 10), float32] */, dtype="float32") /* ty=Tensor[(2, 6, 10), float32] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %635 = @func_4315() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %636 = floor_mod(%633, %634) /* ty=Tensor[(2, 6, 10), float32] */;
  %637 = %635.0;
  (%636, %637)
}

def @func_6678(%var_6655: Tensor[(11, 14, 6), uint32]) -> Tensor[(11, 14, 6), bool] {
  %638 = @func_5948() /* ty=Tensor[(?, 14, 6), uint32] */;
  %639 = cast(%638, dtype="bool") /* ty=Tensor[(?, 14, 6), bool] */;
  %640 = cast(%var_6655, dtype="bool") /* ty=Tensor[(11, 14, 6), bool] */;
  less_equal(%639, %640) /* ty=Tensor[(11, 14, 6), bool] */
}

def @func_6121(%var_6119: Tensor[(1, 14, 6), float64], %var_6120: Tensor[(15, 3, 12), bool]) -> (Tensor[(?, 14, 6), bool], Tensor[(270, 2), uint64], Tensor[(15, 3, 12), bool]) {
  %658 = fn (%var_6094: Tensor[(1, 14, 6), float64], %var_6106: Tensor[(15, 3, 12), bool]) -> (Tensor[(?, 14, 6), bool], Tensor[(270, 2), uint64], Tensor[(15, 3, 12), bool]) {
    %641 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
    %642 = %641.1;
    %643 = cast(%var_6094, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
    %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(3), int32] */;
    %645 = cast(%642, dtype="bool") /* ty=Tensor[(?, 14, 6), bool] */;
    %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %647 = cast(meta[relay.Constant][25] /* ty=Tensor[(270, 2), uint64] */, dtype="uint64") /* ty=Tensor[(270, 2), uint64] */;
    %648 = cast(meta[relay.Constant][25] /* ty=Tensor[(270, 2), uint64] */, dtype="uint64") /* ty=Tensor[(270, 2), uint64] */;
    %649 = reshape(%647, newshape=[15, 3, 12]) /* ty=Tensor[(15, 3, 12), uint64] */;
    %650 = reshape(%648, newshape=[15, 3, 12]) /* ty=Tensor[(15, 3, 12), uint64] */;
    %651 = @func_4200(%649, %650) /* ty=Tensor[(15, 3, 12), bool] */;
    %652 = cast(%var_6106, dtype="bool") /* ty=Tensor[(15, 3, 12), bool] */;
    %653 = shape_of(%651, dtype="int32") /* ty=Tensor[(3), int32] */;
    %654 = cast(%651, dtype="bool") /* ty=Tensor[(15, 3, 12), bool] */;
    %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %656 = logical_or(%645, %646) /* ty=Tensor[(?, 14, 6), bool] */;
    %657 = greater_equal(%654, %655) /* ty=Tensor[(15, 3, 12), bool] */;
    (%656, meta[relay.Constant][25] /* ty=Tensor[(270, 2), uint64] */, %657)
  };
  %658(%var_6119, %var_6120) /* ty=(Tensor[(?, 14, 6), bool], Tensor[(270, 2), uint64], Tensor[(15, 3, 12), bool]) */
}

def @func_3555() -> Tensor[(?, 14, 6), bool] {
  %668 = fn () -> Tensor[(?, 14, 6), bool] {
    %659 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %660 = %659.0;
    %661 = cast(%660, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
    %662 = log10(%661) /* ty=Tensor[(1, 14, 6), float32] */;
    %663 = @func_2259() /* ty=Tensor[(1, 14, 6), float32] */;
    %664 = cast(%663, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
    %665 = shape_of(%662, dtype="int32") /* ty=Tensor[(3), int32] */;
    %666 = cast(%662, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
    %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%666, %667) /* ty=Tensor[(?, 14, 6), bool] */
  };
  %668() /* ty=Tensor[(?, 14, 6), bool] */
}

def @func_6323(%var_6309: bool, %var_6310: Tensor[(9, 10, 1), bool]) -> (Tensor[(9, 10, 1), bool], Tensor[(1, 14, 6), float32], Tensor[(336), uint32]) {
  %669 = cast(%var_6309, dtype="bool") /* ty=bool */;
  %670 = cast(%var_6310, dtype="bool") /* ty=Tensor[(9, 10, 1), bool] */;
  %671 = cast(meta[relay.Constant][26] /* ty=Tensor[(336), uint32] */, dtype="uint32") /* ty=Tensor[(336), uint32] */;
  %672 = reshape(%671, newshape=[168, 2]) /* ty=Tensor[(168, 2), uint32] */;
  %673 = @func_4952(%672) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), uint64], Tensor[(168, 2), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1200), float64]) */;
  %674 = logical_and(%669, %670) /* ty=Tensor[(9, 10, 1), bool] */;
  %675 = %673.5;
  (%674, %675, meta[relay.Constant][26] /* ty=Tensor[(336), uint32] */)
}

def @func_3352() -> (Tensor[(1, 14, 6), float32],) {
  %676 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
  (%676,)
}

def @func_5659() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) {
  %677 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %678 = @func_4315() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %679 = @func_5056() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %680 = %677.0;
  %681 = %678.0;
  %682 = %679.1;
  (%680, %681, %682)
}

def @func_7147() -> (Tensor[(1, 14, 6), float32], Tensor[(4, 12, 9), float64], Tensor[(216, 2), int32]) {
  @func_7145() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(4, 12, 9), float64], Tensor[(216, 2), int32]) */
}

def @func_11544() -> (Tensor[(10, 5, 8), float64],) {
  @func_11542() /* ty=(Tensor[(10, 5, 8), float64],) */
}

def @func_9694() -> Tensor[(1, 14, 6), float32] {
  @func_9692() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_2667() -> Tensor[(1, 14, 6), float32] {
  @func_2665() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_8506(%var_8504: Tensor[(4, 84), float32]) -> (Tensor[(1, 14, 6), float32], Tensor[(4, 84), float32], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  @func_8503(%var_8504) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(4, 84), float32], Tensor[(1, 14, 6), float32], Tensor[(4, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_8755() -> Tensor[(1, 14, 6), float32] {
  @func_8753() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_1048() -> (Tensor[(?, 14, 6), uint32],) {
  @func_1046() /* ty=(Tensor[(?, 14, 6), uint32],) */
}

def @func_9596(%var_9594: Tensor[(60, 2), float64]) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(60, 2), float64], Tensor[(10, 10, 12), float64], Tensor[(1, 14, 6), float32]) {
  @func_9593(%var_9594) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(60, 2), float64], Tensor[(10, 10, 12), float64], Tensor[(1, 14, 6), float32]) */
}

def @func_435() -> (Tensor[(1, 14, 6), float32],) {
  %683 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %684 = %683.0;
  (%684,)
}

def @func_5981(%var_5980: Tensor[(6, 14, 6), float32]) -> (Tensor[(6, 14, 6), uint16], Tensor[(6, 14, 6), float32]) {
  %692 = fn (%var_5970: Tensor[(6, 14, 6), float32]) -> (Tensor[(6, 14, 6), uint16], Tensor[(6, 14, 6), float32]) {
    %685 = @func_1550() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
    %686 = %685.1;
    %687 = cast(%686, dtype="uint16") /* ty=Tensor[(1, 14, 6), uint16] */;
    %688 = cast(%var_5970, dtype="uint16") /* ty=Tensor[(6, 14, 6), uint16] */;
    %689 = cast(%var_5970, dtype="float32") /* ty=Tensor[(6, 14, 6), float32] */;
    %690 = multiply(%687, %688) /* ty=Tensor[(6, 14, 6), uint16] */;
    %691 = exp(%689) /* ty=Tensor[(6, 14, 6), float32] */;
    (%690, %691)
  };
  %692(%var_5980) /* ty=(Tensor[(6, 14, 6), uint16], Tensor[(6, 14, 6), float32]) */
}

def @func_9365(%var_9363: Tensor[(16, 14, 6), float64]) -> (Tensor[(1, 14, 6), float32], float64, Tensor[(?, 14, 6), uint32], Tensor[(16, 14, 6), uint32]) {
  @func_9362(%var_9363) /* ty=(Tensor[(1, 14, 6), float32], float64, Tensor[(?, 14, 6), uint32], Tensor[(16, 14, 6), uint32]) */
}

def @func_1083() -> (Tensor[(1, 14, 6), float32],) {
  %693 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  (%693,)
}

def @func_2766() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %702 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
    %694 = @func_1994() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), uint32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) */;
    %695 = @func_1655() /* ty=Tensor[(1, 14, 6), float32] */;
    %696 = cast(%695, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
    %697 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
    %698 = @func_2665() /* ty=Tensor[(1, 14, 6), float32] */;
    %699 = %694.4;
    %700 = log(%696) /* ty=Tensor[(1, 14, 6), float32] */;
    %701 = %697.2;
    (%698, %699, %700, %701)
  };
  %702() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_3114() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %703 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %704 = @func_2898() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %705 = %704.1;
  %706 = cast(%705, dtype="float64") /* ty=Tensor[(?, 14, 6), float64] */;
  %707 = sin(%706) /* ty=Tensor[(?, 14, 6), float64] */;
  %708 = cast(%707, dtype="float32") /* ty=Tensor[(?, 14, 6), float32] */;
  %709 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %710 = @func_1540() /* ty=Tensor[(1, 14, 6), float32] */;
  %711 = %703.1;
  %712 = atan(%708) /* ty=Tensor[(?, 14, 6), float32] */;
  %713 = %709.2;
  (%710, %711, %712, %713)
}

def @func_4203(%var_4201: Tensor[(15, 3, 12), uint64], %var_4202: Tensor[(15, 3, 12), uint64]) -> Tensor[(15, 3, 12), bool] {
  %718 = fn (%var_4187: Tensor[(15, 3, 12), uint64], %var_4188: Tensor[(15, 3, 12), uint64]) -> Tensor[(15, 3, 12), bool] {
    %714 = cast(%var_4188, dtype="bool") /* ty=Tensor[(15, 3, 12), bool] */;
    %715 = shape_of(%var_4187, dtype="int32") /* ty=Tensor[(3), int32] */;
    %716 = cast(%var_4187, dtype="bool") /* ty=Tensor[(15, 3, 12), bool] */;
    %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%716, %717) /* ty=Tensor[(15, 3, 12), bool] */
  };
  %718(%var_4201, %var_4202) /* ty=Tensor[(15, 3, 12), bool] */
}

def @func_372() -> (Tensor[(1, 14, 6), float32],) {
  %721 = fn () -> (Tensor[(1, 14, 6), float32],) {
    %719 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 14, 6), float32] */, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
    %720 = sinh(%719) /* ty=Tensor[(1, 14, 6), float32] */;
    (%720,)
  };
  %721() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_1579() -> (Tensor[(1, 14, 6), float32], Tensor[(5, 9, 16), float64]) {
  %728 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(5, 9, 16), float64]) {
    %722 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %723 = cast(meta[relay.Constant][28] /* ty=Tensor[(5, 9, 16), float64] */, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
    %724 = acos(%723) /* ty=Tensor[(5, 9, 16), float64] */;
    %725 = cast(%724, dtype="float64") /* ty=Tensor[(5, 9, 16), float64] */;
    %726 = %722.0;
    %727 = atan(%725) /* ty=Tensor[(5, 9, 16), float64] */;
    (%726, %727)
  };
  %728() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(5, 9, 16), float64]) */
}

def @func_2948() -> Tensor[(15, 8, 10), float64] {
  %730 = fn () -> Tensor[(15, 8, 10), float64] {
    %729 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 8, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 10), float64] */;
    asinh(%729) /* ty=Tensor[(15, 8, 10), float64] */
  };
  %730() /* ty=Tensor[(15, 8, 10), float64] */
}

def @func_10791() -> (Tensor[(1, 14, 6), float32],) {
  @func_10789() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_8016(%var_8012: float64, %var_8013: Tensor[(1344, 1), uint32], %var_8014: Tensor[(1200), float64], %var_8015: Tensor[(1092), float32]) -> (Tensor[(?, 14, 6), float32], float64, float64, Tensor[(7, 15, 8), float64], Tensor[(1, 840), int8], Tensor[(1, 14, 6), float32], Tensor[(450), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1344, 1), uint32], Tensor[(1200), float64], Tensor[(1, 168), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1092), float32]) {
  @func_8010(%var_8012, %var_8013, %var_8014, %var_8015) /* ty=(Tensor[(?, 14, 6), float32], float64, float64, Tensor[(7, 15, 8), float64], Tensor[(1, 840), int8], Tensor[(1, 14, 6), float32], Tensor[(450), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1344, 1), uint32], Tensor[(1200), float64], Tensor[(1, 168), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1092), float32]) */
}

def @func_7029(%var_7027: float64, %var_7028: Tensor[(1092), float32]) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], float64, float64, Tensor[(10, 5, 8), float64], Tensor[(1092), float32]) {
  %743 = fn (%var_6993: float64, %var_7016: Tensor[(1092), float32]) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], float64, float64, Tensor[(10, 5, 8), float64], Tensor[(1092), float32]) {
    %731 = @func_3924() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
    %732 = @func_6755() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
    %733 = cast(%var_6993, dtype="float64") /* ty=float64 */;
    %734 = reshape(%733, newshape=[]) /* ty=float64 */;
    %735 = @func_5893(%734) /* ty=(Tensor[(?, 14, 6), float64], Tensor[(13, 14, 6), float32], float64) */;
    %736 = cast(%var_7016, dtype="float32") /* ty=Tensor[(1092), float32] */;
    %737 = reshape(%736, newshape=[14, 78]) /* ty=Tensor[(14, 78), float32] */;
    %738 = @func_4809(%737) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(10, 5, 8), float64], Tensor[(4, 12, 9), float64], Tensor[(432), int32], Tensor[(13, 14, 6), int32], Tensor[(14, 78), float32], Tensor[(4, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
    %739 = %731.0;
    %740 = %732.1;
    %741 = %735.2;
    %742 = %738.1;
    (%739, %740, %741, %var_6993, %742, %var_7016)
  };
  %743(%var_7027, %var_7028) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], float64, float64, Tensor[(10, 5, 8), float64], Tensor[(1092), float32]) */
}

def @func_9234() -> (Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32]) {
  %744 = @func_6696() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %745 = @func_7456() /* ty=Tensor[(?, 14, 6), float64] */;
  %746 = %744.0;
  (%745, %746)
}

def @func_3704(%var_3702: Tensor[(16, 14, 13), float32], %var_3703: Tensor[(16, 14, 13), float32]) -> (Tensor[(16, 14, 13), float32], Tensor[(16, 14, 13), float64]) {
  %756 = fn (%var_3688: Tensor[(16, 14, 13), float32], %var_3689: Tensor[(16, 14, 13), float32]) -> (Tensor[(16, 14, 13), float32], Tensor[(16, 14, 13), float64]) {
    %747 = cast(%var_3689, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
    %748 = shape_of(%var_3688, dtype="int32") /* ty=Tensor[(3), int32] */;
    %749 = cast(%var_3688, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
    %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %751 = cast(%var_3689, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
    %752 = sqrt(%751) /* ty=Tensor[(16, 14, 13), float32] */;
    %753 = cast(%752, dtype="float64") /* ty=Tensor[(16, 14, 13), float64] */;
    %754 = mod(%749, %750) /* ty=Tensor[(16, 14, 13), float32] */;
    %755 = log2(%753) /* ty=Tensor[(16, 14, 13), float64] */;
    (%754, %755)
  };
  %756(%var_3702, %var_3703) /* ty=(Tensor[(16, 14, 13), float32], Tensor[(16, 14, 13), float64]) */
}

def @func_9868() -> (Tensor[(1, 14, 6), float32], Tensor[(16, 14, 13), float32], Tensor[(2912), float32], Tensor[(?, 14, 6), uint32]) {
  @func_9866() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(16, 14, 13), float32], Tensor[(2912), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_11542() -> (Tensor[(10, 5, 8), float64],) {
  %757 = @func_1133() /* ty=Tensor[(10, 5, 8), float64] */;
  (%757,)
}

def @func_2523() -> (Tensor[(1, 14, 6), float32],) {
  %758 = @func_2259() /* ty=Tensor[(1, 14, 6), float32] */;
  %759 = cast(%758, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %760 = asinh(%759) /* ty=Tensor[(1, 14, 6), float32] */;
  (%760,)
}

def @func_8883() -> (Tensor[(1, 14, 6), float32],) {
  %763 = fn () -> (Tensor[(1, 14, 6), float32],) {
    %761 = @func_3406() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %762 = %761.0;
    (%762,)
  };
  %763() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_5145(%var_5143: Tensor[(13, 14, 6), float32], %var_5144: float64) -> (Tensor[(13, 14, 6), float64], Tensor[(14, 16, 9), float64], float64, Tensor[(1, 14, 6), float32]) {
  %774 = fn (%var_5130: Tensor[(13, 14, 6), float32], %var_5136: float64) -> (Tensor[(13, 14, 6), float64], Tensor[(14, 16, 9), float64], float64, Tensor[(1, 14, 6), float32]) {
    %764 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %765 = %764.0;
    %766 = cast(%765, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
    %767 = cast(%var_5130, dtype="float64") /* ty=Tensor[(13, 14, 6), float64] */;
    %768 = cast(%var_5136, dtype="float64") /* ty=float64 */;
    %769 = reshape(%768, newshape=[]) /* ty=float64 */;
    %770 = @func_1623(%769) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) */;
    %771 = mod(%766, %767) /* ty=Tensor[(13, 14, 6), float64] */;
    %772 = %770.0;
    %773 = @func_1748() /* ty=Tensor[(1, 14, 6), float32] */;
    (%771, %772, %var_5136, %773)
  };
  %774(%var_5143, %var_5144) /* ty=(Tensor[(13, 14, 6), float64], Tensor[(14, 16, 9), float64], float64, Tensor[(1, 14, 6), float32]) */
}

def @func_9047(%var_9045: Tensor[(2, 6, 10), float32]) -> (Tensor[(2, 6, 10), float32], Tensor[(1, 14, 6), float32]) {
  @func_9044(%var_9045) /* ty=(Tensor[(2, 6, 10), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_9866() -> (Tensor[(1, 14, 6), float32], Tensor[(16, 14, 13), float32], Tensor[(2912), float32], Tensor[(?, 14, 6), uint32]) {
  %775 = cast(meta[relay.Constant][30] /* ty=Tensor[(2912), float32] */, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %776 = cast(meta[relay.Constant][30] /* ty=Tensor[(2912), float32] */, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %777 = reshape(%775, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), float32] */;
  %778 = reshape(%776, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), float32] */;
  %779 = @func_3701(%777, %778) /* ty=(Tensor[(16, 14, 13), float32], Tensor[(16, 14, 13), float64]) */;
  %780 = @func_3738() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %781 = @func_1655() /* ty=Tensor[(1, 14, 6), float32] */;
  %782 = %779.0;
  %783 = %780.0;
  (%781, %782, meta[relay.Constant][30] /* ty=Tensor[(2912), float32] */, %783)
}

def @func_10789() -> (Tensor[(1, 14, 6), float32],) {
  %784 = @func_1655() /* ty=Tensor[(1, 14, 6), float32] */;
  (%784,)
}

def @func_5949() -> Tensor[(?, 14, 6), uint32] {
  %786 = fn () -> Tensor[(?, 14, 6), uint32] {
    %785 = @func_5923() /* ty=(Tensor[(?, 14, 6), uint32],) */;
    %785.0
  };
  %786() /* ty=Tensor[(?, 14, 6), uint32] */
}

def @func_5366(%var_5331: Tensor[(16, 14, 6), uint32], %var_5364: Tensor[(1200), float64]) -> (Tensor[(16, 14, 6), int64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(126), uint8], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) {
  %787 = @func_4631() /* ty=Tensor[(?, 14, 6), uint32] */;
  %788 = cast(%787, dtype="int64") /* ty=Tensor[(?, 14, 6), int64] */;
  %789 = cast(%var_5331, dtype="int64") /* ty=Tensor[(16, 14, 6), int64] */;
  %790 = cast(meta[relay.Constant][31] /* ty=Tensor[(126), uint8] */, dtype="uint8") /* ty=Tensor[(126), uint8] */;
  %791 = cast(meta[relay.Constant][31] /* ty=Tensor[(126), uint8] */, dtype="uint8") /* ty=Tensor[(126), uint8] */;
  %792 = reshape(%790, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), uint8] */;
  %793 = reshape(%791, newshape=[3, 14, 3]) /* ty=Tensor[(3, 14, 3), uint8] */;
  %794 = @func_3009(%792, %793) /* ty=(Tensor[(3, 14, 3), uint8], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %795 = cast(%var_5364, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %796 = reshape(%795, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %797 = @func_3854(%796) /* ty=(Tensor[(?, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) */;
  %798 = subtract(%788, %789) /* ty=Tensor[(16, 14, 6), int64] */;
  %799 = @func_4631() /* ty=Tensor[(?, 14, 6), uint32] */;
  %800 = %794.3;
  %801 = %797.2;
  (%798, %799, %800, meta[relay.Constant][31] /* ty=Tensor[(126), uint8] */, %801, %var_5364)
}

def @func_6527() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %802 = @func_6487() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64], Tensor[(15, 8, 10), float64], Tensor[(?, 14, 6), bool]) */;
  %803 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
  %804 = %802.0;
  (%803, %804)
}

def @func_3354() -> (Tensor[(1, 14, 6), float32],) {
  @func_3352() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_8654() -> (Tensor[(?, 14, 6), uint32],) {
  %807 = fn () -> (Tensor[(?, 14, 6), uint32],) {
    %805 = @func_1046() /* ty=(Tensor[(?, 14, 6), uint32],) */;
    %806 = %805.0;
    (%806,)
  };
  %807() /* ty=(Tensor[(?, 14, 6), uint32],) */
}

def @func_1996() -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), uint32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) {
  @func_1994() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), uint32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) */
}

def @func_5510(%var_5508: float64) -> (Tensor[(6, 3, 8), float64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], float64) {
  @func_5507(%var_5508) /* ty=(Tensor[(6, 3, 8), float64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], float64) */
}

def @func_5860() -> (Tensor[(?, 14, 6), uint32],) {
  @func_5858() /* ty=(Tensor[(?, 14, 6), uint32],) */
}

def @func_6516() -> Tensor[(1, 14, 6), float32] {
  @func_6514() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_1655() -> Tensor[(1, 14, 6), float32] {
  @func_1344() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_9362(%var_9353: Tensor[(16, 14, 6), float64]) -> (Tensor[(1, 14, 6), float32], float64, Tensor[(?, 14, 6), uint32], Tensor[(16, 14, 6), uint32]) {
  %808 = cast(7.55746f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %809 = reshape(%808, newshape=[]) /* ty=float64 */;
  %810 = @func_1866(%809) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), float32], float64, Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %811 = @func_8611() /* ty=(Tensor[(?, 14, 6), float64], Tensor[(?, 14, 6), float64]) */;
  %812 = %811.1;
  %813 = cast(%812, dtype="uint32") /* ty=Tensor[(?, 14, 6), uint32] */;
  %814 = cast(%var_9353, dtype="uint32") /* ty=Tensor[(16, 14, 6), uint32] */;
  %815 = %810.5;
  %816 = @func_7548() /* ty=Tensor[(?, 14, 6), uint32] */;
  %817 = logical_xor(%813, %814) /* ty=Tensor[(16, 14, 6), uint32] */;
  (%815, 7.55746f64 /* ty=float64 */, %816, %817)
}

def @func_8419(%var_8417: Tensor[(1200), float64]) -> (Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(10, 10, 12), bool], Tensor[(120), float64], Tensor[(1200), float64]) {
  %818 = cast(meta[relay.Constant][32] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %819 = cast(%var_8417, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %820 = reshape(%818, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float64] */;
  %821 = reshape(%819, newshape=[10, 10, 12]) /* ty=Tensor[(10, 10, 12), float64] */;
  %822 = @func_3472(%820, %821) /* ty=(Tensor[(2, 10, 12), float64], Tensor[(10, 10, 12), bool]) */;
  %823 = @func_7456() /* ty=Tensor[(?, 14, 6), float64] */;
  %824 = @func_2665() /* ty=Tensor[(1, 14, 6), float32] */;
  %825 = %822.1;
  (%823, %824, %825, meta[relay.Constant][32] /* ty=Tensor[(120), float64] */, %var_8417)
}

def @func_10390() -> (Tensor[(13, 14, 6), bool], Tensor[(15, 8, 10), float32], Tensor[(1344), uint32], Tensor[(1200), float64]) {
  %836 = fn () -> (Tensor[(13, 14, 6), bool], Tensor[(15, 8, 10), float32], Tensor[(1344), uint32], Tensor[(1200), float64]) {
    %826 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
    %827 = cast(%826, dtype="bool") /* ty=Tensor[(?, 14, 6), bool] */;
    %828 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 14, 6), uint32] */, dtype="bool") /* ty=Tensor[(13, 14, 6), bool] */;
    %829 = cast(meta[relay.Constant][34] /* ty=Tensor[(1344), uint32] */, dtype="uint32") /* ty=Tensor[(1344), uint32] */;
    %830 = cast(meta[relay.Constant][35] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %831 = reshape(%829, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), uint32] */;
    %832 = reshape(%830, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
    %833 = @func_5366(%831, %832) /* ty=(Tensor[(16, 14, 6), int64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(126), uint8], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) */;
    %834 = greater(%827, %828) /* ty=Tensor[(13, 14, 6), bool] */;
    %835 = %833.4;
    (%834, %835, meta[relay.Constant][34] /* ty=Tensor[(1344), uint32] */, meta[relay.Constant][35] /* ty=Tensor[(1200), float64] */)
  };
  %836() /* ty=(Tensor[(13, 14, 6), bool], Tensor[(15, 8, 10), float32], Tensor[(1344), uint32], Tensor[(1200), float64]) */
}

def @func_3720() -> Tensor[(1, 14, 6), float32] {
  %837 = @func_3114() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %837.0
}

def @func_5858() -> (Tensor[(?, 14, 6), uint32],) {
  %838 = @func_2898() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %839 = %838.1;
  (%839,)
}

def @func_3269(%var_3247: Tensor[(4, 14, 6), uint32]) -> (Tensor[(?, 14, 6), float32], Tensor[(4, 14, 6), uint64], Tensor[(?, 14, 6), uint32]) {
  %840 = @func_1268() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), float32]) */;
  %841 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  %842 = cast(%841, dtype="uint64") /* ty=Tensor[(?, 14, 6), uint64] */;
  %843 = cast(%var_3247, dtype="uint64") /* ty=Tensor[(4, 14, 6), uint64] */;
  %844 = %840.2;
  %845 = bitwise_or(%842, %843) /* ty=Tensor[(4, 14, 6), uint64] */;
  %846 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  (%844, %845, %846)
}

def @func_1046() -> (Tensor[(?, 14, 6), uint32],) {
  %847 = @func_621() /* ty=Tensor[(?, 14, 6), uint32] */;
  (%847,)
}

def @func_11489(%var_11487: Tensor[(7, 4, 13), float32], %var_11488: float64) -> (Tensor[(7, 4, 13), float32], Tensor[(120), float64], float64) {
  %854 = fn (%var_11474: Tensor[(7, 4, 13), float32], %var_11480: float64) -> (Tensor[(7, 4, 13), float32], Tensor[(120), float64], float64) {
    %848 = cast(%var_11474, dtype="float32") /* ty=Tensor[(7, 4, 13), float32] */;
    %849 = cast(%var_11480, dtype="float64") /* ty=float64 */;
    %850 = reshape(%849, newshape=[]) /* ty=float64 */;
    %851 = @func_10016(%850) /* ty=(Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32], Tensor[(11, 14, 6), bool], Tensor[(924), uint32], Tensor[(?, 14, 6), bool], Tensor[(1, 14, 6), float32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) */;
    %852 = acosh(%848) /* ty=Tensor[(7, 4, 13), float32] */;
    %853 = %851.8;
    (%852, %853, %var_11480)
  };
  %854(%var_11487, %var_11488) /* ty=(Tensor[(7, 4, 13), float32], Tensor[(120), float64], float64) */
}

def @func_9657() -> (Tensor[(1, 14, 6), float32],) {
  %855 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  (%855,)
}

def @func_9416() -> Tensor[(?, 14, 6), float64] {
  @func_9414() /* ty=Tensor[(?, 14, 6), float64] */
}

def @func_1748() -> Tensor[(1, 14, 6), float32] {
  @func_1655() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_9632() -> Tensor[(1, 14, 6), float32] {
  %856 = @func_2898() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %856.0
}

def @func_2260() -> Tensor[(1, 14, 6), float32] {
  %858 = fn () -> Tensor[(1, 14, 6), float32] {
    %857 = @func_1083() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %857.0
  };
  %858() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_2408() -> Tensor[(?, 14, 6), uint32] {
  %860 = fn () -> Tensor[(?, 14, 6), uint32] {
    %859 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
    %859.1
  };
  %860() /* ty=Tensor[(?, 14, 6), uint32] */
}

def @func_3012(%var_3010: Tensor[(3, 14, 3), uint8], %var_3011: Tensor[(3, 14, 3), uint8]) -> (Tensor[(3, 14, 3), uint8], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %871 = fn (%var_2989: Tensor[(3, 14, 3), uint8], %var_2990: Tensor[(3, 14, 3), uint8]) -> (Tensor[(3, 14, 3), uint8], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
    %861 = cast(%var_2990, dtype="uint8") /* ty=Tensor[(3, 14, 3), uint8] */;
    %862 = shape_of(%var_2989, dtype="int32") /* ty=Tensor[(3), int32] */;
    %863 = cast(%var_2989, dtype="uint8") /* ty=Tensor[(3, 14, 3), uint8] */;
    %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %865 = @func_943() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %866 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %867 = left_shift(%863, %864) /* ty=Tensor[(3, 14, 3), uint8] */;
    %868 = %865.0;
    %869 = %866.0;
    %870 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
    (%867, %868, %869, %870)
  };
  %871(%var_3010, %var_3011) /* ty=(Tensor[(3, 14, 3), uint8], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_1831() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %876 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
    %872 = @func_1083() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %873 = @func_1655() /* ty=Tensor[(1, 14, 6), float32] */;
    %874 = @func_1344() /* ty=Tensor[(1, 14, 6), float32] */;
    %875 = %872.0;
    (%873, %874, %875)
  };
  %876() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_9593(%var_9556: Tensor[(60, 2), float64]) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(60, 2), float64], Tensor[(10, 10, 12), float64], Tensor[(1, 14, 6), float32]) {
  %877 = @func_5292() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %878 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %879 = cast(%var_9556, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %880 = cast(meta[relay.Constant][36] /* ty=Tensor[(60, 20), float64] */, dtype="float64") /* ty=Tensor[(60, 20), float64] */;
  %881 = reshape(%879, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float64] */;
  %882 = reshape(%880, newshape=[10, 10, 12]) /* ty=Tensor[(10, 10, 12), float64] */;
  %883 = @func_3472(%881, %882) /* ty=(Tensor[(2, 10, 12), float64], Tensor[(10, 10, 12), bool]) */;
  %884 = %883.1;
  %885 = cast(meta[relay.Constant][36] /* ty=Tensor[(60, 20), float64] */, dtype="float64") /* ty=Tensor[(60, 20), float64] */;
  %886 = shape_of(%884, dtype="int32") /* ty=Tensor[(3), int32] */;
  %887 = cast(%884, dtype="float64") /* ty=Tensor[(10, 10, 12), float64] */;
  %888 = dyn.reshape(%885, %886, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %889 = %877.0;
  %890 = %878.0;
  %891 = divide(%887, %888) /* ty=Tensor[(10, 10, 12), float64] */;
  %892 = @func_8314() /* ty=Tensor[(1, 14, 6), float32] */;
  (%889, %890, %var_9556, %891, %892)
}

def @func_5058() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) {
  @func_5056() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */
}

def @func_5777() -> Tensor[(1, 14, 6), float32] {
  %893 = @func_2291() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %893.0
}

def @func_7055() -> (Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32]) {
  %897 = fn () -> (Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32]) {
    %894 = @func_5659() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
    %895 = %894.2;
    %896 = @func_2259() /* ty=Tensor[(1, 14, 6), float32] */;
    (%895, %896)
  };
  %897() /* ty=(Tensor[(?, 14, 6), float64], Tensor[(1, 14, 6), float32]) */
}

def @func_6397() -> (Tensor[(?, 14, 6), uint32], Tensor[(15, 8, 10), float64]) {
  %898 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %899 = %898.1;
  %900 = @func_2947() /* ty=Tensor[(15, 8, 10), float64] */;
  (%899, %900)
}

def @func_2123() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  %901 = @func_943() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %902 = @func_1046() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %903 = %901.0;
  %904 = %902.0;
  (%903, %904)
}

def @func_6301() -> Tensor[(?, 14, 6), float64] {
  %905 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %905.1
}

def @func_3857(%var_3855: Tensor[(1200), float64]) -> (Tensor[(?, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) {
  @func_3854(%var_3855) /* ty=(Tensor[(?, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) */
}

def @func_9063(%var_9062: Tensor[(16, 14, 6), uint32]) -> (Tensor[(16, 14, 6), bool],) {
  %913 = fn (%var_9055: Tensor[(16, 14, 6), uint32]) -> (Tensor[(16, 14, 6), bool],) {
    %906 = @func_8366() /* ty=(Tensor[(16, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
    %907 = %906.0;
    %908 = cast(%var_9055, dtype="bool") /* ty=Tensor[(16, 14, 6), bool] */;
    %909 = shape_of(%907, dtype="int32") /* ty=Tensor[(3), int32] */;
    %910 = cast(%907, dtype="bool") /* ty=Tensor[(16, 14, 6), bool] */;
    %911 = dyn.reshape(%908, %909, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %912 = greater(%910, %911) /* ty=Tensor[(16, 14, 6), bool] */;
    (%912,)
  };
  %913(%var_9062) /* ty=(Tensor[(16, 14, 6), bool],) */
}

def @func_7320(%var_7319: Tensor[(10, 5, 10), float32]) -> Tensor[(10, 5, 10), float32] {
  %915 = fn (%var_7305: Tensor[(10, 5, 10), float32]) -> Tensor[(10, 5, 10), float32] {
    %914 = cast(%var_7305, dtype="float32") /* ty=Tensor[(10, 5, 10), float32] */;
    rsqrt(%914) /* ty=Tensor[(10, 5, 10), float32] */
  };
  %915(%var_7319) /* ty=Tensor[(10, 5, 10), float32] */
}

def @func_9081(%var_9080: Tensor[(1, 2, 1), float64]) -> Tensor[(1, 2, 1), float64] {
  %917 = fn (%var_9068: Tensor[(1, 2, 1), float64]) -> Tensor[(1, 2, 1), float64] {
    %916 = cast(%var_9068, dtype="float64") /* ty=Tensor[(1, 2, 1), float64] */;
    acos(%916) /* ty=Tensor[(1, 2, 1), float64] */
  };
  %917(%var_9080) /* ty=Tensor[(1, 2, 1), float64] */
}

def @func_5923() -> (Tensor[(?, 14, 6), uint32],) {
  %918 = @func_4631() /* ty=Tensor[(?, 14, 6), uint32] */;
  (%918,)
}

def @func_6757() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  @func_6755() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_2900() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  @func_2898() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_446() -> Tensor[(1, 14, 6), float32] {
  @func_444() /* ty=Tensor[(1, 14, 6), float32] */
}

def @func_8670(%var_8669: Tensor[(16, 14, 6), float32]) -> Tensor[(16, 14, 6), float64] {
  %923 = fn (%var_8657: Tensor[(16, 14, 6), float32]) -> Tensor[(16, 14, 6), float64] {
    %919 = @func_1780() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
    %920 = %919.0;
    %921 = cast(%920, dtype="float64") /* ty=Tensor[(1, 14, 6), float64] */;
    %922 = cast(%var_8657, dtype="float64") /* ty=Tensor[(16, 14, 6), float64] */;
    floor_divide(%921, %922) /* ty=Tensor[(16, 14, 6), float64] */
  };
  %923(%var_8669) /* ty=Tensor[(16, 14, 6), float64] */
}

def @func_6529() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  @func_6527() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */
}

def @func_11442(%var_11441: Tensor[(16, 14, 6), float32]) -> (Tensor[(16, 14, 6), int32],) {
  %929 = fn (%var_11427: Tensor[(16, 14, 6), float32]) -> (Tensor[(16, 14, 6), int32],) {
    %924 = @func_3924() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
    %925 = %924.0;
    %926 = cast(%925, dtype="int32") /* ty=Tensor[(1, 14, 6), int32] */;
    %927 = cast(%var_11427, dtype="int32") /* ty=Tensor[(16, 14, 6), int32] */;
    %928 = minimum(%926, %927) /* ty=Tensor[(16, 14, 6), int32] */;
    (%928,)
  };
  %929(%var_11441) /* ty=(Tensor[(16, 14, 6), int32],) */
}

def @func_5893(%var_5886: float64) -> (Tensor[(?, 14, 6), float64], Tensor[(13, 14, 6), float32], float64) {
  %930 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %931 = cast(%var_5886, dtype="float64") /* ty=float64 */;
  %932 = reshape(%931, newshape=[]) /* ty=float64 */;
  %933 = @func_1623(%932) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) */;
  %934 = %930.1;
  %935 = %933.1;
  (%934, %935, %var_5886)
}

def @func_945() -> (Tensor[(1, 14, 6), float32],) {
  @func_943() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_6514() -> Tensor[(1, 14, 6), float32] {
  %936 = @func_2291() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %936.0
}

def @func_7511() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) {
  %944 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) {
    %937 = @func_3406() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %938 = @func_5858() /* ty=(Tensor[(?, 14, 6), uint32],) */;
    %939 = %938.0;
    %940 = cast(%939, dtype="float64") /* ty=Tensor[(?, 14, 6), float64] */;
    %941 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
    %942 = %937.0;
    %943 = cosh(%940) /* ty=Tensor[(?, 14, 6), float64] */;
    (%941, %942, %943)
  };
  %944() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float64]) */
}

def @func_3272(%var_3270: Tensor[(4, 14, 6), uint32]) -> (Tensor[(?, 14, 6), float32], Tensor[(4, 14, 6), uint64], Tensor[(?, 14, 6), uint32]) {
  @func_3269(%var_3270) /* ty=(Tensor[(?, 14, 6), float32], Tensor[(4, 14, 6), uint64], Tensor[(?, 14, 6), uint32]) */
}

def @func_7440() -> (Tensor[(1, 14, 6), float32],) {
  %947 = fn () -> (Tensor[(1, 14, 6), float32],) {
    %945 = @func_371() /* ty=(Tensor[(1, 14, 6), float32],) */;
    %946 = %945.0;
    (%946,)
  };
  %947() /* ty=(Tensor[(1, 14, 6), float32],) */
}

def @func_3925() -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
  %951 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) {
    %948 = @func_2478() /* ty=(Tensor[(6, 3, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
    %949 = %948.3;
    %950 = @func_2445() /* ty=Tensor[(1, 14, 6), float32] */;
    (%949, %950)
  };
  %951() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */
}

def @func_1994() -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), bool], Tensor[(?, 14, 6), uint32], Tensor[(10, 6, 2), float64], float64, Tensor[(120), float64], Tensor[(1, 14, 6), float32]) {
  %952 = @func_1174() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */;
  %953 = @func_943() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %954 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
  %955 = %954.1;
  %956 = @func_1578() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(5, 9, 16), float64]) */;
  %957 = %956.0;
  %958 = cast(%957, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %959 = shape_of(%955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %960 = cast(%955, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
  %961 = dyn.reshape(%958, %959, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %962 = @func_1046() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %963 = cast(-2.10888f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %964 = cast(meta[relay.Constant][37] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %965 = reshape(%963, newshape=[]) /* ty=float64 */;
  %966 = reshape(%964, newshape=[10, 6, 2]) /* ty=Tensor[(10, 6, 2), float64] */;
  %967 = @func_1366(%965, %966) /* ty=(Tensor[(10, 6, 2), float64],) */;
  %968 = %952.1;
  %969 = %953.0;
  %970 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
  %971 = not_equal(%960, %961) /* ty=Tensor[(?, 14, 6), bool] */;
  %972 = %962.0;
  %973 = %967.0;
  %974 = @func_1540() /* ty=Tensor[(1, 14, 6), float32] */;
  (%968, %969, %970, %971, %972, %973, -2.10888f64 /* ty=float64 */, meta[relay.Constant][37] /* ty=Tensor[(120), float64] */, %974)
}

def @func_2125() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) {
  @func_2123() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32]) */
}

def @main(%var_11667: Tensor[(2912), float32]) -> (Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(2912), float32], Tensor[(16, 14, 13), float32]) {
  %975 = @func_2525() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %976 = @func_9888() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %977 = cast(%var_11667, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %978 = cast(%var_11667, dtype="float32") /* ty=Tensor[(2912), float32] */;
  %979 = reshape(%977, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), float32] */;
  %980 = reshape(%978, newshape=[16, 14, 13]) /* ty=Tensor[(16, 14, 13), float32] */;
  %981 = @func_3704(%979, %980) /* ty=(Tensor[(16, 14, 13), float32], Tensor[(16, 14, 13), float64]) */;
  %982 = %981.1;
  %983 = cast(%982, dtype="float32") /* ty=Tensor[(16, 14, 13), float32] */;
  %984 = %975.0;
  %985 = %976.0;
  %986 = asin(%983) /* ty=Tensor[(16, 14, 13), float32] */;
  (%984, %985, %var_11667, %986)
}

def @func_10295() -> Tensor[(?, 14, 6), float64] {
  @func_10293() /* ty=Tensor[(?, 14, 6), float64] */
}

def @func_10704() -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), bool]) {
  %997 = fn () -> (Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), bool]) {
    %987 = @func_7256() /* ty=(Tensor[(10, 5, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
    %988 = cast(-7.34809f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %989 = reshape(%988, newshape=[]) /* ty=float64 */;
    %990 = @func_6239(%989) /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(14, 16, 9), float64], float64) */;
    %991 = @func_444() /* ty=Tensor[(1, 14, 6), float32] */;
    %992 = cast(%991, dtype="bool") /* ty=Tensor[(1, 14, 6), bool] */;
    %993 = cast(-7.34809f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %994 = %987.4;
    %995 = %990.0;
    %996 = less_equal(%992, %993) /* ty=Tensor[(1, 14, 6), bool] */;
    (%994, %995, %996)
  };
  %997() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), bool]) */
}

def @func_1625(%var_1624: float64) -> (Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) {
  %1007 = fn (%var_1608: float64) -> (Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) {
    %998 = cast(%var_1608, dtype="float64") /* ty=float64 */;
    %999 = reshape(%998, newshape=[]) /* ty=float64 */;
    %1000 = @func_1005(%999) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(14, 16, 9), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
    %1001 = @func_917() /* ty=(Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(13, 14, 6), int32], Tensor[(1092), float32]) */;
    %1002 = %1001.5;
    %1003 = cast(%1002, dtype="float32") /* ty=Tensor[(13, 14, 6), float32] */;
    %1004 = cast(%var_1608, dtype="float32") /* ty=float32 */;
    %1005 = %1000.1;
    %1006 = floor_divide(%1003, %1004) /* ty=Tensor[(13, 14, 6), float32] */;
    (%1005, %1006)
  };
  %1007(%var_1624) /* ty=(Tensor[(14, 16, 9), float64], Tensor[(13, 14, 6), float32]) */
}

def @func_7886() -> (Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), float32]) {
  %1008 = @func_3757() /* ty=(Tensor[(?, 14, 6), uint32],) */;
  %1009 = @func_2329() /* ty=(Tensor[(?, 14, 6), float32], Tensor[(?, 14, 6), float64]) */;
  %1010 = %1008.0;
  %1011 = @func_3279() /* ty=Tensor[(1, 14, 6), float32] */;
  %1012 = @func_751() /* ty=Tensor[(1, 14, 6), float32] */;
  %1013 = %1009.0;
  (%1010, %1011, %1012, %1013)
}

def @func_8010(%var_7914: float64, %var_7977: Tensor[(1344, 1), uint32], %var_7978: Tensor[(1200), float64], %var_8006: Tensor[(1092), float32]) -> (Tensor[(?, 14, 6), float32], float64, float64, Tensor[(7, 15, 8), float64], Tensor[(1, 840), int8], Tensor[(1, 14, 6), float32], Tensor[(450), float64], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32], Tensor[(1344, 1), uint32], Tensor[(1200), float64], Tensor[(1, 168), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1092), float32]) {
  %1014 = @func_7256() /* ty=(Tensor[(10, 5, 8), float64], Tensor[(1, 14, 6), float32], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %1015 = %1014.2;
  %1016 = @func_2363() /* ty=(Tensor[(1, 14, 6), float32],) */;
  %1017 = %1016.0;
  %1018 = cast(%1017, dtype="float32") /* ty=Tensor[(1, 14, 6), float32] */;
  %1019 = shape_of(%1015, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1020 = cast(%1015, dtype="float32") /* ty=Tensor[(?, 14, 6), float32] */;
  %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1022 = cast(%var_7914, dtype="float64") /* ty=float64 */;
  %1023 = reshape(%1022, newshape=[]) /* ty=float64 */;
  %1024 = @func_5893(%1023) /* ty=(Tensor[(?, 14, 6), float64], Tensor[(13, 14, 6), float32], float64) */;
  %1025 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 840), int8] */, dtype="int8") /* ty=Tensor[(1, 840), int8] */;
  %1026 = reshape(%1025, newshape=[7, 15, 8]) /* ty=Tensor[(7, 15, 8), int8] */;
  %1027 = @func_6734(%1026) /* ty=(Tensor[(7, 15, 8), bool], Tensor[(7, 15, 8), float64]) */;
  %1028 = cast(meta[relay.Constant][39] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %1029 = cast(meta[relay.Constant][39] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %1030 = reshape(%1028, newshape=[15, 15, 2]) /* ty=Tensor[(15, 15, 2), float64] */;
  %1031 = reshape(%1029, newshape=[15, 15, 2]) /* ty=Tensor[(15, 15, 2), float64] */;
  %1032 = @func_7820(%1030, %1031) /* ty=(Tensor[(15, 15, 2), bool], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %1033 = cast(meta[relay.Constant][39] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %1034 = cast(meta[relay.Constant][39] /* ty=Tensor[(450), float64] */, dtype="float64") /* ty=Tensor[(450), float64] */;
  %1035 = reshape(%1033, newshape=[15, 15, 2]) /* ty=Tensor[(15, 15, 2), float64] */;
  %1036 = reshape(%1034, newshape=[15, 15, 2]) /* ty=Tensor[(15, 15, 2), float64] */;
  %1037 = @func_7820(%1035, %1036) /* ty=(Tensor[(15, 15, 2), bool], Tensor[(1, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %1038 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 168), float32] */, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
  %1039 = reshape(%1038, newshape=[2, 14, 6]) /* ty=Tensor[(2, 14, 6), float32] */;
  %1040 = @func_7711(%1039) /* ty=(Tensor[(2, 14, 6), float64], Tensor[(1, 14, 6), float32]) */;
  %1041 = cast(%var_7977, dtype="uint32") /* ty=Tensor[(1344, 1), uint32] */;
  %1042 = cast(%var_7978, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %1043 = reshape(%1041, newshape=[16, 14, 6]) /* ty=Tensor[(16, 14, 6), uint32] */;
  %1044 = reshape(%1042, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %1045 = @func_5366(%1043, %1044) /* ty=(Tensor[(16, 14, 6), int64], Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32], Tensor[(126), uint8], Tensor[(15, 8, 10), float32], Tensor[(1200), float64]) */;
  %1046 = cast(meta[relay.Constant][40] /* ty=Tensor[(1, 168), float32] */, dtype="float32") /* ty=Tensor[(1, 168), float32] */;
  %1047 = @func_3445() /* ty=(Tensor[(?, 14, 6), uint32], Tensor[(1, 14, 6), float32]) */;
  %1048 = cast(%var_8006, dtype="float32") /* ty=Tensor[(1092), float32] */;
  %1049 = reshape(%1048, newshape=[14, 78]) /* ty=Tensor[(14, 78), float32] */;
  %1050 = @func_4809(%1049) /* ty=(Tensor[(1, 14, 6), float32], Tensor[(10, 5, 8), float64], Tensor[(4, 12, 9), float64], Tensor[(432), int32], Tensor[(13, 14, 6), int32], Tensor[(14, 78), float32], Tensor[(4, 14, 6), float32], Tensor[(1, 14, 6), float32]) */;
  %1051 = mod(%1020, %1021) /* ty=Tensor[(?, 14, 6), float32] */;
  %1052 = %1024.2;
  %1053 = %1027.1;
  %1054 = %1032.1;
  %1055 = @func_1748() /* ty=Tensor[(1, 14, 6), float32] */;
  %1056 = @func_2445() /* ty=Tensor[(1, 14, 6), float32] */;
  %1057 = %1037.1;
  %1058 = %1040.1;
  %1059 = %1045.2;
  %1060 = acos(%1046) /* ty=Tensor[(1, 168), float32] */;
  %1061 = %1047.0;
  %1062 = %1050.7;
  (%1051, %1052, %var_7914, %1053, meta[relay.Constant][38] /* ty=Tensor[(1, 840), int8] */, %1054, meta[relay.Constant][39] /* ty=Tensor[(450), float64] */, %1055, %1056, %1057, %1058, %1059, %var_7977, %var_7978, %1060, %1061, %1062, %var_8006)
}

def @func_10545(%var_10544: Tensor[(15, 16, 9), uint16]) -> (Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), float32]) {
  %1073 = fn (%var_10506: Tensor[(15, 16, 9), uint16]) -> (Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), float32]) {
    %1063 = cast(%var_10506, dtype="uint16") /* ty=Tensor[(15, 16, 9), uint16] */;
    %1064 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(15, 16, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1065 = cast(meta[relay.Constant][41] /* ty=Tensor[(15, 16, 9), uint16] */, dtype="uint16") /* ty=Tensor[(15, 16, 9), uint16] */;
    %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1067 = cast(%var_10506, dtype="float32") /* ty=Tensor[(15, 16, 9), float32] */;
    %1068 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(15, 16, 9), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1069 = cast(meta[relay.Constant][41] /* ty=Tensor[(15, 16, 9), uint16] */, dtype="float32") /* ty=Tensor[(15, 16, 9), float32] */;
    %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1071 = bitwise_or(%1065, %1066) /* ty=Tensor[(15, 16, 9), uint16] */;
    %1072 = divide(%1069, %1070) /* ty=Tensor[(15, 16, 9), float32] */;
    (%1071, %1072)
  };
  %1073(%var_10544) /* ty=(Tensor[(15, 16, 9), uint16], Tensor[(15, 16, 9), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

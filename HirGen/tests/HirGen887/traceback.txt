==========mod==========
#[version = "0.0.5"]
def @func_8763() -> (Tensor[(1, 10, 10), float64], Tensor[(2, ?, 14), float64], Tensor[(28), float64], Tensor[(?, 10, 10), uint16]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %1 = reshape(%0, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), float64] */;
  %2 = @func_6762() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %3 = %2.0;
  %4 = @func_5544() /* ty=Tensor[(1, 10, 10), float64] */;
  %5 = cast(%4, dtype="uint16") /* ty=Tensor[(1, 10, 10), uint16] */;
  %6 = shape_of(%3, dtype="int32") /* ty=Tensor[(3), int32] */;
  %7 = cast(%3, dtype="uint16") /* ty=Tensor[(1, 10, 10), uint16] */;
  %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %9 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
  %10 = @func_5858(%1) /* ty=Tensor[(2, ?, 14), float64] */;
  %11 = minimum(%7, %8) /* ty=Tensor[(?, 10, 10), uint16] */;
  (%9, %10, meta[relay.Constant][0] /* ty=Tensor[(28), float64] */, %11)
}

def @func_18129() -> Tensor[(12, 8, 7), float32] {
  @func_14050() /* ty=Tensor[(12, 8, 7), float32] */
}

def @func_7097() -> (Tensor[(1, 10, 10), float64],) {
  %12 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %13 = %12.0;
  (%13,)
}

def @func_6762() -> (Tensor[(1, 10, 10), float64],) {
  %14 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  (%14,)
}

def @func_9844() -> (Tensor[(1, 10, 10), float64],) {
  %15 = @func_9511() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %16 = %15.0;
  (%16,)
}

def @func_8343() -> Tensor[(1, 10, 10), float64] {
  @func_7727() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_12917() -> (Tensor[(1, 10, 10), float64],) {
  %17 = @func_5544() /* ty=Tensor[(1, 10, 10), float64] */;
  (%17,)
}

def @func_9346() -> (Tensor[(1, 10, 10), float64],) {
  %18 = @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %19 = %18.0;
  %20 = cast(%19, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
  %21 = cos(%20) /* ty=Tensor[(1, 10, 10), float64] */;
  (%21,)
}

def @func_15458() -> Tensor[(1, 10, 10), float64] {
  %22 = @func_11253() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */;
  %22.0
}

def @func_18011(%var_18003: Tensor[(12, 12, 12), uint16], %var_18004: Tensor[(12, 12, 12), uint16]) -> Tensor[(12, 12, 12), uint16] {
  %23 = cast(%var_18004, dtype="uint16") /* ty=Tensor[(12, 12, 12), uint16] */;
  %24 = shape_of(%var_18003, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%var_18003, dtype="uint16") /* ty=Tensor[(12, 12, 12), uint16] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%25, %26) /* ty=Tensor[(12, 12, 12), uint16] */
}

def @func_6738() -> Tensor[(1, 10, 10), float64] {
  %27 = @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %27.0
}

def @func_16140() -> (Tensor[(1, 12, 1), bool],) {
  %28 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 12, 1), bool] */, dtype="bool") /* ty=Tensor[(1, 12, 1), bool] */;
  %30 = logical_and(%28, %29) /* ty=Tensor[(1, 12, 1), bool] */;
  (%30,)
}

def @func_11039(%var_11024: Tensor[(825), int16]) -> (Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(80), float32], Tensor[(825), int16], Tensor[(48), float64], Tensor[(1, 10, 10), float64]) {
  %31 = @func_9321() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(180), float32]) */;
  %32 = @func_5180() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %34 = cast(%var_11024, dtype="int16") /* ty=Tensor[(825), int16] */;
  %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %36 = reshape(%33, newshape=[1, 8, 10]) /* ty=Tensor[(1, 8, 10), float32] */;
  %37 = reshape(%34, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %38 = reshape(%35, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %39 = @func_2680(%36, %37, %38) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */;
  %40 = %31.1;
  %41 = %32.0;
  %42 = %39.4;
  %43 = @func_7346() /* ty=Tensor[(1, 10, 10), float64] */;
  (%40, %41, %42, meta[relay.Constant][2] /* ty=Tensor[(80), float32] */, %var_11024, meta[relay.Constant][3] /* ty=Tensor[(48), float64] */, %43)
}

def @func_18080() -> (Tensor[(1, 10, 10), float64],) {
  %44 = @func_13385() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */;
  %45 = %44.0;
  (%45,)
}

def @func_9664() -> (Tensor[(1, 10, 10), float32], Tensor[(12, 8, 7), float32]) {
  %46 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %47 = @func_7392() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */;
  %48 = %46.0;
  %49 = %47.1;
  (%48, %49)
}

def @func_9910() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), int32]) {
  %50 = @func_8353() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %51 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %52 = %51.0;
  %53 = @func_6785() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %54 = %53.0;
  %55 = cast(%54, dtype="int32") /* ty=Tensor[(1, 10, 10), int32] */;
  %56 = shape_of(%52, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%52, dtype="int32") /* ty=Tensor[(1, 10, 10), int32] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %59 = %50.0;
  %60 = @func_8343() /* ty=Tensor[(1, 10, 10), float64] */;
  %61 = add(%57, %58) /* ty=Tensor[(?, 10, 10), int32] */;
  (%59, %60, %61)
}

def @func_14998() -> (Tensor[(1, 10, 10), float64],) {
  %62 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
  (%62,)
}

def @func_5004(%var_4991: Tensor[(1, 10, 10), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) {
  %63 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %64 = reshape(%63, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %65 = @func_32(%64) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %66 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  %67 = cast(%var_4991, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%66, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %71 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  %72 = %65.0;
  %73 = greater_equal(%69, %70) /* ty=Tensor[(?, 10, 10), bool] */;
  (%71, %72, meta[relay.Constant][4] /* ty=Tensor[(12, 4), float64] */, %73)
}

def @func_10555(%var_10546: Tensor[(15, 16, 5), uint16], %var_10547: Tensor[(15, 16, 5), uint16]) -> (Tensor[(15, 16, 5), uint16],) {
  %74 = cast(%var_10547, dtype="uint16") /* ty=Tensor[(15, 16, 5), uint16] */;
  %75 = shape_of(%var_10546, dtype="int32") /* ty=Tensor[(3), int32] */;
  %76 = cast(%var_10546, dtype="uint16") /* ty=Tensor[(15, 16, 5), uint16] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %78 = logical_xor(%76, %77) /* ty=Tensor[(15, 16, 5), uint16] */;
  (%78,)
}

def @func_7257() -> (Tensor[(1, 10, 10), float64],) {
  %79 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
  (%79,)
}

def @func_4844(%var_4825: Tensor[(48), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16]) {
  %80 = cast(%var_4825, dtype="float64") /* ty=Tensor[(48), float64] */;
  %81 = reshape(%80, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %82 = @func_32(%81) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %83 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 165), int16] */, dtype="int16") /* ty=Tensor[(1, 165), int16] */;
  %84 = cast(meta[relay.Constant][6] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %85 = reshape(%83, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %86 = reshape(%84, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %87 = @func_1835(%85, %86) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %88 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  %89 = %82.0;
  %90 = %87.0;
  (%88, %89, %var_4825, %90, meta[relay.Constant][5] /* ty=Tensor[(1, 165), int16] */, meta[relay.Constant][6] /* ty=Tensor[(825), int16] */)
}

def @func_3695(%var_3600: Tensor[(5, 4, 16), float32], %var_3616: Tensor[(11, 15), int16], %var_3622: Tensor[(5, 4, 16), float32]) -> (Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) {
  %91 = cast(%var_3616, dtype="int16") /* ty=Tensor[(11, 15), int16] */;
  %92 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 165), int16] */, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %93 = reshape(%91, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %94 = reshape(%92, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %95 = @func_1835(%93, %94) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %96 = cast(meta[relay.Constant][8] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %97 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 165), int16] */, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %98 = cast(meta[relay.Constant][9] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %99 = reshape(%96, newshape=[1, 8, 10]) /* ty=Tensor[(1, 8, 10), float32] */;
  %100 = reshape(%97, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %101 = reshape(%98, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %102 = @func_2680(%99, %100, %101) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */;
  %103 = cast(meta[relay.Constant][8] /* ty=Tensor[(80), float32] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %104 = %95.0;
  %105 = cast(%104, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %106 = cast(%var_3616, dtype="int16") /* ty=Tensor[(11, 15), int16] */;
  %107 = reshape(%103, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), float64] */;
  %108 = reshape(%105, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %109 = reshape(%106, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %110 = @func_3152(%107, %108, %109) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(825), int16], Tensor[(48), float64], Tensor[(10, 4, 2), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) */;
  %111 = cast(meta[relay.Constant][9] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %112 = reshape(%111, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %113 = @func_32(%112) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %114 = cast(%var_3600, dtype="float32") /* ty=Tensor[(5, 4, 16), float32] */;
  %115 = log(%114) /* ty=Tensor[(5, 4, 16), float32] */;
  %116 = cast(%var_3622, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %117 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%115, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %120 = logical_or(%118, %119) /* ty=Tensor[(5, 4, 16), bool] */;
  %121 = cast(%120, dtype="uint8") /* ty=Tensor[(5, 4, 16), uint8] */;
  %122 = shape_of(%var_3600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(%var_3600, dtype="uint8") /* ty=Tensor[(5, 4, 16), uint8] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %125 = %102.2;
  %126 = %110.1;
  %127 = %113.0;
  %128 = right_shift(%123, %124) /* ty=Tensor[(5, 4, 16), uint8] */;
  (%104, %var_3616, meta[relay.Constant][7] /* ty=Tensor[(5, 165), int16] */, %125, meta[relay.Constant][8] /* ty=Tensor[(80), float32] */, meta[relay.Constant][9] /* ty=Tensor[(48), float64] */, %126, %127, %128)
}

def @func_17913() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %129 = @func_14884() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %130 = @func_17286() /* ty=Tensor[(1, 10, 10), float64] */;
  %131 = %129.0;
  (%130, %131)
}

def @func_8908() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  %132 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %133 = @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %134 = %132.0;
  %135 = %133.0;
  (%134, %135)
}

def @func_8794() -> (Tensor[(28), float64],) {
  %136 = @func_8763() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, ?, 14), float64], Tensor[(28), float64], Tensor[(?, 10, 10), uint16]) */;
  %137 = %136.2;
  (%137,)
}

def @func_4227() -> (Tensor[(1, 10, 10), float64],) {
  %138 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 10, 10), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
  %139 = sigmoid(%138) /* ty=Tensor[(1, 10, 10), float64] */;
  (%139,)
}

def @func_15357() -> Tensor[(1, 10, 10), float64] {
  @func_10043() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_15769() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) {
  %140 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %141 = cast(meta[relay.Constant][11] /* ty=Tensor[(1, 80), float64] */, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %142 = cast(meta[relay.Constant][12] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %143 = reshape(%141, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %144 = reshape(%142, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %145 = @func_7314(%143, %144) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) */;
  %146 = @func_13692() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %147 = %140.0;
  %148 = %145.1;
  %149 = %146.0;
  (%147, %148, meta[relay.Constant][11] /* ty=Tensor[(1, 80), float64] */, meta[relay.Constant][12] /* ty=Tensor[(825), int16] */, %149)
}

def @func_1835(%var_1829: Tensor[(15, 1, 11), int16], %var_1830: Tensor[(15, 5, 11), int16]) -> (Tensor[(15, 5, 11), int16],) {
  %150 = cast(%var_1829, dtype="int16") /* ty=Tensor[(15, 1, 11), int16] */;
  %151 = cast(%var_1830, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %152 = left_shift(%150, %151) /* ty=Tensor[(15, 5, 11), int16] */;
  (%152,)
}

def @func_6162() -> (Tensor[(1, 10, 10), float64],) {
  %153 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  (%153,)
}

def @func_9689() -> Tensor[(12, 8, 7), float32] {
  %154 = @func_5267() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %154.0
}

def @func_13979() -> Tensor[(1, 10, 10), float64] {
  %155 = @func_6785() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %155.0
}

def @func_4522() -> Tensor[(1, 10, 10), float64] {
  %156 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %156.0
}

def @func_5152(%var_5107: Tensor[(4, 14, 5), uint64], %var_5108: Tensor[(4, 14, 5), uint64], %var_5113: Tensor[(448), float32], %var_5114: Tensor[(80), float64], %var_5115: Tensor[(825), int16], %var_5116: Tensor[(165), int16], %var_5150: Tensor[(320), float32]) -> (Tensor[(4, 14, 5), uint64], Tensor[(15, 5, 11), int16], Tensor[(448), float32], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(11, 15), int16], Tensor[(320), float32]) {
  %157 = cast(%var_5108, dtype="uint64") /* ty=Tensor[(4, 14, 5), uint64] */;
  %158 = shape_of(%var_5107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %159 = cast(%var_5107, dtype="uint64") /* ty=Tensor[(4, 14, 5), uint64] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %161 = cast(%var_5113, dtype="float32") /* ty=Tensor[(448), float32] */;
  %162 = cast(%var_5114, dtype="float64") /* ty=Tensor[(80), float64] */;
  %163 = cast(%var_5115, dtype="int16") /* ty=Tensor[(825), int16] */;
  %164 = cast(%var_5116, dtype="int16") /* ty=Tensor[(165), int16] */;
  %165 = cast(%var_5113, dtype="float32") /* ty=Tensor[(448), float32] */;
  %166 = reshape(%161, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %167 = reshape(%162, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %168 = reshape(%163, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %169 = reshape(%164, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %170 = reshape(%165, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %171 = @func_4479(%166, %167, %168, %169, %170) /* ty=(Tensor[(48), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(15, 5, 11), int16], Tensor[(14, 16, 2), bool], Tensor[(165, 1), int16], Tensor[(14, 16, 2), float64], Tensor[(1, 10, 10), float64]) */;
  %172 = cast(%var_5150, dtype="float32") /* ty=Tensor[(320), float32] */;
  %173 = cast(%var_5116, dtype="int16") /* ty=Tensor[(165), int16] */;
  %174 = cast(%var_5150, dtype="float32") /* ty=Tensor[(320), float32] */;
  %175 = reshape(%172, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %176 = reshape(%173, newshape=[11, 15]) /* ty=Tensor[(11, 15), int16] */;
  %177 = reshape(%174, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %178 = @func_3695(%175, %176, %177) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) */;
  %179 = bitwise_and(%159, %160) /* ty=Tensor[(4, 14, 5), uint64] */;
  %180 = %171.4;
  %181 = %178.1;
  (%179, %180, %var_5113, %var_5114, %var_5115, %var_5116, %181, %var_5150)
}

def @func_9109() -> (Tensor[(1, 10, 10), float64],) {
  %182 = @func_5180() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %183 = %182.0;
  (%183,)
}

def @func_15666(%var_15656: Tensor[(320), float32]) -> (Tensor[(?, 10, 10), uint16], Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(320), float32], Tensor[(825), int16], Tensor[(48), float64]) {
  %184 = @func_8763() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, ?, 14), float64], Tensor[(28), float64], Tensor[(?, 10, 10), uint16]) */;
  %185 = @func_11253() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */;
  %186 = cast(%var_15656, dtype="float32") /* ty=Tensor[(320), float32] */;
  %187 = cast(meta[relay.Constant][13] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %188 = cast(meta[relay.Constant][14] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %189 = reshape(%186, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %190 = reshape(%187, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %191 = reshape(%188, newshape=[1, 48]) /* ty=Tensor[(1, 48), float64] */;
  %192 = @func_4319(%189, %190, %191) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(33, 5), int16], Tensor[(5, 165), bool], Tensor[(5, 165), bool], Tensor[(2, 4, 6), float64], Tensor[(1, 48), float64]) */;
  %193 = %184.3;
  %194 = %185.0;
  %195 = %192.3;
  (%193, %194, %195, %var_15656, meta[relay.Constant][13] /* ty=Tensor[(825), int16] */, meta[relay.Constant][14] /* ty=Tensor[(48), float64] */)
}

def @func_17667() -> (Tensor[(1, 10, 10), float64],) {
  %196 = @func_13385() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */;
  %197 = %196.0;
  (%197,)
}

def @func_7392() -> (Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) {
  %198 = @func_5180() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %199 = %198.0;
  %200 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  (%199, %200)
}

def @func_7727() -> Tensor[(1, 10, 10), float64] {
  @func_5544() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_15392() -> Tensor[(1, 10, 10), float64] {
  %201 = @func_5378() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %201.0
}

def @func_7928() -> Tensor[(1, 10, 10), float32] {
  %202 = @func_6400() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %202.0
}

def @func_15482() -> Tensor[(1, 10, 10), float64] {
  @func_15392() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_6837() -> Tensor[(1, 10, 10), float64] {
  @func_4628() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_13314() -> Tensor[(1, 10, 10), float32] {
  %203 = @func_7659() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %203.0
}

def @func_11410() -> Tensor[(1, 10, 10), float64] {
  @func_5544() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_13692() -> (Tensor[(1, 10, 10), float64],) {
  %204 = @func_8310() /* ty=Tensor[(1, 10, 10), float64] */;
  (%204,)
}

def @main(%var_18189: Tensor[(13, 5, 3), float32]) -> (Tensor[(13, 5, 3), float32],) {
  %205 = cast(%var_18189, dtype="float32") /* ty=Tensor[(13, 5, 3), float32] */;
  %206 = rsqrt(%205) /* ty=Tensor[(13, 5, 3), float32] */;
  (%206,)
}

def @func_16074(%var_16064: Tensor[(80), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(320), float32], Tensor[(1, 10, 10), float32], Tensor[(5, 60), float32], Tensor[(13, 16, 14), float64], Tensor[(2912), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(825), int16]) {
  %207 = @func_12073() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %208 = cast(meta[relay.Constant][15] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %209 = reshape(%208, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %210 = @func_13182(%209) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(320), float32], Tensor[(165), int16]) */;
  %211 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 60), float32] */, dtype="float32") /* ty=Tensor[(5, 60), float32] */;
  %212 = reshape(%211, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), float32] */;
  %213 = @func_12807(%212) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32]) */;
  %214 = cast(meta[relay.Constant][17] /* ty=Tensor[(2912), float64] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %215 = cast(meta[relay.Constant][17] /* ty=Tensor[(2912), float64] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
  %216 = reshape(%214, newshape=[13, 16, 14]) /* ty=Tensor[(13, 16, 14), float64] */;
  %217 = reshape(%215, newshape=[13, 16, 14]) /* ty=Tensor[(13, 16, 14), float64] */;
  %218 = @func_10105(%216, %217) /* ty=(Tensor[(13, 16, 14), float64],) */;
  %219 = cast(%var_16064, dtype="float64") /* ty=Tensor[(80), float64] */;
  %220 = cast(meta[relay.Constant][18] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %221 = reshape(%219, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %222 = reshape(%220, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %223 = @func_5468(%221, %222) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), float64]) */;
  %224 = %207.0;
  %225 = %210.1;
  %226 = %213.0;
  %227 = %218.0;
  %228 = %223.1;
  (%224, %225, meta[relay.Constant][15] /* ty=Tensor[(320), float32] */, %226, meta[relay.Constant][16] /* ty=Tensor[(5, 60), float32] */, %227, meta[relay.Constant][17] /* ty=Tensor[(2912), float64] */, %228, %var_16064, meta[relay.Constant][18] /* ty=Tensor[(825), int16] */)
}

def @func_2680(%var_2634: Tensor[(1, 8, 10), float32], %var_2645: Tensor[(5, 165), int16], %var_2648: Tensor[(48), float64]) -> (Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) {
  %229 = cast(%var_2634, dtype="float32") /* ty=Tensor[(1, 8, 10), float32] */;
  %230 = cast(meta[relay.Constant][19] /* ty=Tensor[(165, 1), int16] */, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %231 = cast(%var_2645, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %232 = reshape(%230, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %233 = reshape(%231, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %234 = @func_1835(%232, %233) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %235 = cast(%var_2648, dtype="float64") /* ty=Tensor[(48), float64] */;
  %236 = reshape(%235, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %237 = @func_32(%236) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %238 = cast(meta[relay.Constant][19] /* ty=Tensor[(165, 1), int16] */, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %239 = cast(%var_2645, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %240 = reshape(%238, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %241 = reshape(%239, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %242 = @func_1835(%240, %241) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %243 = cast(meta[relay.Constant][19] /* ty=Tensor[(165, 1), int16] */, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %244 = %234.0;
  %245 = cast(%244, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %246 = reshape(%243, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %247 = reshape(%245, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %248 = @func_1835(%246, %247) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %249 = cast(meta[relay.Constant][19] /* ty=Tensor[(165, 1), int16] */, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %250 = cast(%var_2645, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %251 = reshape(%249, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %252 = reshape(%250, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %253 = @func_1835(%251, %252) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %254 = cast(meta[relay.Constant][19] /* ty=Tensor[(165, 1), int16] */, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %255 = %248.0;
  %256 = cast(%255, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %257 = reshape(%254, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %258 = reshape(%256, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %259 = @func_1835(%257, %258) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %260 = atan(%229) /* ty=Tensor[(1, 8, 10), float32] */;
  %261 = %237.0;
  %262 = %242.0;
  %263 = %253.0;
  %264 = %259.0;
  (%260, %244, meta[relay.Constant][19] /* ty=Tensor[(165, 1), int16] */, %var_2645, %261, %var_2648, %262, %255, %263, %264)
}

def @func_17838() -> (Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), bool], Tensor[(1, 10, 10), float32]) {
  %265 = @func_14953() /* ty=Tensor[(1, 10, 10), float64] */;
  %266 = @func_14137() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %267 = %266.0;
  %268 = cast(%267, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %269 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%265, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %272 = @func_13132() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(672), float32], Tensor[(1, 10, 10), float32], Tensor[(7, 16, 6), float32]) */;
  %273 = @func_8343() /* ty=Tensor[(1, 10, 10), float64] */;
  %274 = less_equal(%270, %271) /* ty=Tensor[(?, 10, 10), bool] */;
  %275 = %272.2;
  (%273, %274, %275)
}

def @func_8310() -> Tensor[(1, 10, 10), float64] {
  %276 = @func_6596() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %276.1
}

def @func_11670() -> (Tensor[(1, 10, 10), float32],) {
  %277 = @func_8883() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %278 = %277.0;
  (%278,)
}

def @func_14137() -> (Tensor[(1, 10, 10), float64],) {
  %279 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %280 = %279.0;
  (%280,)
}

def @func_16411() -> Tensor[(1, 10, 10), float32] {
  %281 = @func_6400() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %281.0
}

def @func_6042(%var_5882: Tensor[(100), float64], %var_5933: Tensor[(600), float64], %var_5963: Tensor[(165), int16], %var_5964: Tensor[(825), int16]) -> (Tensor[(12, 8, 7), float32], Tensor[(2, 4, 6), float64], Tensor[(100), float64], Tensor[(1, 10, 10), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(825), bool], Tensor[(15, 5, 11), bool], Tensor[(15, 5, 11), int16]) {
  %282 = cast(%var_5882, dtype="float64") /* ty=Tensor[(100), float64] */;
  %283 = reshape(%282, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float64] */;
  %284 = @func_5004(%283) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) */;
  %285 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  %286 = cast(%285, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
  %287 = reshape(%286, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float64] */;
  %288 = @func_5004(%287) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) */;
  %289 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %290 = cast(%var_5882, dtype="float64") /* ty=Tensor[(100), float64] */;
  %291 = reshape(%290, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float64] */;
  %292 = @func_5004(%291) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) */;
  %293 = cast(%var_5933, dtype="float64") /* ty=Tensor[(600), float64] */;
  %294 = reshape(%293, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float64] */;
  %295 = @func_4770(%294) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(24, 2), float64], Tensor[(6, 10, 10), bool], Tensor[(825, 320), float64]) */;
  %296 = cast(%var_5963, dtype="int16") /* ty=Tensor[(165), int16] */;
  %297 = cast(%var_5964, dtype="int16") /* ty=Tensor[(825), int16] */;
  %298 = reshape(%296, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %299 = reshape(%297, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %300 = @func_1835(%298, %299) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %301 = %300.0;
  %302 = cast(%301, dtype="bool") /* ty=Tensor[(15, 5, 11), bool] */;
  %303 = shape_of(%var_5964, dtype="int32") /* ty=Tensor[(1), int32] */;
  %304 = cast(%var_5964, dtype="bool") /* ty=Tensor[(825), bool] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?), bool] */;
  %306 = cast(%var_5964, dtype="bool") /* ty=Tensor[(825), bool] */;
  %307 = shape_of(%301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%301, dtype="bool") /* ty=Tensor[(15, 5, 11), bool] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %310 = cast(%var_5963, dtype="int16") /* ty=Tensor[(165), int16] */;
  %311 = equal(%308, %309) /* ty=Tensor[(15, 5, 11), bool] */;
  %312 = cast(%311, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %313 = reshape(%310, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %314 = reshape(%312, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %315 = @func_1835(%313, %314) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %316 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  %317 = %284.1;
  %318 = %288.2;
  %319 = %289.0;
  %320 = %292.2;
  %321 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  %322 = %295.3;
  %323 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %324 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  %325 = equal(%304, %305) /* ty=Tensor[(825), bool] */;
  %326 = %315.0;
  (%316, %317, %var_5882, %285, %318, %319, %320, %321, %322, %var_5933, %var_5963, %323, %324, %325, %311, %326)
}

def @func_7047() -> (Tensor[(1, 10, 10), float64],) {
  %327 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
  (%327,)
}

def @func_13735() -> Tensor[(14, 1, 11), float32] {
  %328 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 1, 11), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 11), float32] */;
  atan(%328) /* ty=Tensor[(14, 1, 11), float32] */
}

def @func_6479(%var_6474: Tensor[(4, 10, 10), float64]) -> (Tensor[(4, 10, 10), int16],) {
  %329 = @func_5267() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %330 = %329.2;
  %331 = cast(%330, dtype="int16") /* ty=Tensor[(1, 10, 10), int16] */;
  %332 = cast(%var_6474, dtype="int16") /* ty=Tensor[(4, 10, 10), int16] */;
  %333 = subtract(%331, %332) /* ty=Tensor[(4, 10, 10), int16] */;
  (%333,)
}

def @func_4654() -> Tensor[(1, 10, 10), float64] {
  @func_4628() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_9048(%var_9014: Tensor[(7, 5, 7), float64]) -> Tensor[(7, 5, 7), float64] {
  %334 = cast(%var_9014, dtype="float64") /* ty=Tensor[(7, 5, 7), float64] */;
  tan(%334) /* ty=Tensor[(7, 5, 7), float64] */
}

def @func_6921() -> Tensor[(1, 10, 10), float64] {
  %335 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %335.0
}

def @func_13566() -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) {
  %336 = @func_13385() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */;
  %337 = %336.1;
  %338 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  (%337, %338)
}

def @func_10315(%var_10268: Tensor[(320), float32], %var_10269: Tensor[(825), int16], %var_10270: Tensor[(48), float64], %var_10289: Tensor[(448), float32], %var_10290: Tensor[(80), float64]) -> (Tensor[(1, 10, 10), float32], Tensor[(?, 10, 10), int32], Tensor[(320), float32], Tensor[(825), int16], Tensor[(48), float64], Tensor[(6, 10, 10), bool], Tensor[(15, 5, 11), int16], Tensor[(448), float32], Tensor[(80), float64], Tensor[(11, 15), int16], Tensor[(5, 165), float32]) {
  %339 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %340 = @func_9910() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), int32]) */;
  %341 = cast(%var_10270, dtype="float64") /* ty=Tensor[(48), float64] */;
  %342 = reshape(%341, newshape=[12, 4]) /* ty=Tensor[(12, 4), float64] */;
  %343 = @func_7187(%342) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64]) */;
  %344 = cast(%var_10289, dtype="float32") /* ty=Tensor[(448), float32] */;
  %345 = cast(%var_10290, dtype="float64") /* ty=Tensor[(80), float64] */;
  %346 = cast(%var_10268, dtype="float32") /* ty=Tensor[(320), float32] */;
  %347 = cast(%var_10269, dtype="int16") /* ty=Tensor[(825), int16] */;
  %348 = cast(%var_10270, dtype="float64") /* ty=Tensor[(48), float64] */;
  %349 = reshape(%346, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %350 = reshape(%347, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %351 = reshape(%348, newshape=[1, 48]) /* ty=Tensor[(1, 48), float64] */;
  %352 = @func_4319(%349, %350, %351) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(33, 5), int16], Tensor[(5, 165), bool], Tensor[(5, 165), bool], Tensor[(2, 4, 6), float64], Tensor[(1, 48), float64]) */;
  %353 = %352.3;
  %354 = cast(%353, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %355 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 15), int16] */, dtype="int16") /* ty=Tensor[(11, 15), int16] */;
  %356 = cast(%var_10289, dtype="float32") /* ty=Tensor[(448), float32] */;
  %357 = reshape(%344, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %358 = reshape(%345, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %359 = reshape(%354, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %360 = reshape(%355, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %361 = reshape(%356, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %362 = @func_4479(%357, %358, %359, %360, %361) /* ty=(Tensor[(48), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(15, 5, 11), int16], Tensor[(14, 16, 2), bool], Tensor[(165, 1), int16], Tensor[(14, 16, 2), float64], Tensor[(1, 10, 10), float64]) */;
  %363 = cast(%353, dtype="float32") /* ty=Tensor[(5, 165), float32] */;
  %364 = %339.0;
  %365 = %340.2;
  %366 = %343.1;
  %367 = %362.4;
  %368 = log2(%363) /* ty=Tensor[(5, 165), float32] */;
  (%364, %365, %var_10268, %var_10269, %var_10270, %366, %367, %var_10289, %var_10290, meta[relay.Constant][21] /* ty=Tensor[(11, 15), int16] */, %368)
}

def @func_12138() -> (Tensor[(1, 10, 10), float64],) {
  %369 = @func_5180() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %370 = %369.0;
  (%370,)
}

def @func_13860() -> Tensor[(1, 10, 10), float32] {
  %371 = @func_8883() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %371.0
}

def @func_15189() -> (Tensor[(7, 16, 6), float32],) {
  %372 = @func_13132() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(672), float32], Tensor[(1, 10, 10), float32], Tensor[(7, 16, 6), float32]) */;
  %373 = %372.3;
  (%373,)
}

def @func_16240(%var_16211: Tensor[(250, 2), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(5, 10, 10), float32], Tensor[(250, 2), float64], Tensor[(1, 10, 10), float64]) {
  %374 = cast(%var_16211, dtype="float64") /* ty=Tensor[(250, 2), float64] */;
  %375 = reshape(%374, newshape=[5, 10, 10]) /* ty=Tensor[(5, 10, 10), float64] */;
  %376 = @func_15392() /* ty=Tensor[(1, 10, 10), float64] */;
  %377 = @func_14701(%375) /* ty=Tensor[(5, 10, 10), float32] */;
  %378 = @func_6837() /* ty=Tensor[(1, 10, 10), float64] */;
  (%376, %377, %var_16211, %378)
}

def @func_14701(%var_14684: Tensor[(5, 10, 10), float64]) -> Tensor[(5, 10, 10), float32] {
  %379 = @func_9275() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %380 = %379.0;
  %381 = cast(%380, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %382 = cast(%var_14684, dtype="float32") /* ty=Tensor[(5, 10, 10), float32] */;
  power(%381, %382) /* ty=Tensor[(5, 10, 10), float32] */
}

def @func_17078(%var_17061: Tensor[(200), float64], %var_17062: Tensor[(825), int16]) -> (Tensor[(12, 8, 7), float32], Tensor[(55, 15), int16], Tensor[(200), float64], Tensor[(1, 10, 10), float64], Tensor[(825), float64]) {
  %383 = @func_5267() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %384 = cast(%var_17061, dtype="float64") /* ty=Tensor[(200), float64] */;
  %385 = cast(%var_17062, dtype="int16") /* ty=Tensor[(825), int16] */;
  %386 = reshape(%384, newshape=[2, 10, 10]) /* ty=Tensor[(2, 10, 10), float64] */;
  %387 = reshape(%385, newshape=[55, 15]) /* ty=Tensor[(55, 15), int16] */;
  %388 = @func_13068(%386, %387) /* ty=(Tensor[(2, 10, 10), bool], Tensor[(165), int16], Tensor[(400), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(600), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(165), int16], Tensor[(55, 15), int16], Tensor[(12, 8, 7), float32], Tensor[(4, 10, 10), int16]) */;
  %389 = cast(%var_17062, dtype="float64") /* ty=Tensor[(825), float64] */;
  %390 = %383.0;
  %391 = %388.9;
  %392 = @func_8343() /* ty=Tensor[(1, 10, 10), float64] */;
  %393 = sinh(%389) /* ty=Tensor[(825), float64] */;
  (%390, %391, %var_17061, %392, %393)
}

def @func_10541(%var_10492: Tensor[(672), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(7, 16, 6), float32], Tensor[(672), float32], Tensor[(1, 10, 10), float64]) {
  %394 = @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %395 = cast(%var_10492, dtype="float32") /* ty=Tensor[(672), float32] */;
  %396 = reshape(%395, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float32] */;
  %397 = @func_10373(%396) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %398 = @func_5180() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %399 = %394.0;
  %400 = %397.0;
  %401 = %398.0;
  (%399, %400, %var_10492, %401)
}

def @func_10702() -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) {
  %402 = @func_9346() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %403 = @func_9689() /* ty=Tensor[(12, 8, 7), float32] */;
  %404 = %402.0;
  (%403, %404)
}

def @func_7314(%var_7303: Tensor[(80), float64], %var_7304: Tensor[(825), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) {
  %405 = @func_6762() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %406 = cast(%var_7303, dtype="float64") /* ty=Tensor[(80), float64] */;
  %407 = cast(%var_7304, dtype="int16") /* ty=Tensor[(825), int16] */;
  %408 = reshape(%406, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %409 = reshape(%407, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %410 = @func_5468(%408, %409) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), float64]) */;
  %411 = %405.0;
  %412 = %410.5;
  %413 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  (%411, %412, %var_7303, %var_7304, %413)
}

def @func_7848(%var_7818: Tensor[(11, 15), int16], %var_7819: Tensor[(825), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(825), int16], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(80), float32], Tensor[(12, 4), float64]) {
  %414 = cast(%var_7818, dtype="int16") /* ty=Tensor[(11, 15), int16] */;
  %415 = cast(%var_7819, dtype="int16") /* ty=Tensor[(825), int16] */;
  %416 = reshape(%414, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %417 = reshape(%415, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %418 = @func_1835(%416, %417) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %419 = @func_7659() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %420 = cast(meta[relay.Constant][22] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %421 = %418.0;
  %422 = cast(%421, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %423 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %424 = reshape(%420, newshape=[1, 8, 10]) /* ty=Tensor[(1, 8, 10), float32] */;
  %425 = reshape(%422, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %426 = reshape(%423, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %427 = @func_2680(%424, %425, %426) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */;
  %428 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  %429 = %419.0;
  %430 = %427.7;
  (%428, %421, %var_7818, %var_7819, %429, %430, meta[relay.Constant][22] /* ty=Tensor[(80), float32] */, meta[relay.Constant][23] /* ty=Tensor[(12, 4), float64] */)
}

def @func_17949() -> (Tensor[(1, 10, 10), float32],) {
  %431 = @func_11253() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */;
  %432 = %431.1;
  (%432,)
}

def @func_8717(%var_8692: Tensor[(9, 10, 10), float64]) -> (Tensor[(9, 10, 10), uint8], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %433 = @func_8343() /* ty=Tensor[(1, 10, 10), float64] */;
  %434 = cast(%433, dtype="uint8") /* ty=Tensor[(1, 10, 10), uint8] */;
  %435 = cast(%var_8692, dtype="uint8") /* ty=Tensor[(9, 10, 10), uint8] */;
  %436 = @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %437 = @func_7392() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */;
  %438 = bitwise_or(%434, %435) /* ty=Tensor[(9, 10, 10), uint8] */;
  %439 = %436.0;
  %440 = %437.0;
  (%438, %439, %440)
}

def @func_16768() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %441 = @func_14345() /* ty=Tensor[(1, 10, 10), float64] */;
  %442 = @func_8310() /* ty=Tensor[(1, 10, 10), float64] */;
  (%441, %442)
}

def @func_9720() -> (Tensor[(1, 10, 10), float64],) {
  %443 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  (%443,)
}

def @func_12298(%var_12286: Tensor[(5, 16, 7), int8]) -> (Tensor[(5, 16, 7), bool],) {
  %444 = cast(%var_12286, dtype="bool") /* ty=Tensor[(5, 16, 7), bool] */;
  %445 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(5, 16, 7), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 16, 7), int8] */, dtype="bool") /* ty=Tensor[(5, 16, 7), bool] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %448 = not_equal(%446, %447) /* ty=Tensor[(5, 16, 7), bool] */;
  (%448,)
}

def @func_11890(%var_11839: Tensor[(10, 10, 10), float32]) -> (Tensor[(10, 10, 10), bool], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %449 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %450 = %449.0;
  %451 = cast(%450, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %452 = cast(%var_11839, dtype="bool") /* ty=Tensor[(10, 10, 10), bool] */;
  %453 = @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %454 = @func_9720() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %455 = greater(%451, %452) /* ty=Tensor[(10, 10, 10), bool] */;
  %456 = %453.0;
  %457 = %454.0;
  (%455, %456, %457)
}

def @func_4628() -> Tensor[(1, 10, 10), float64] {
  @func_4522() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_10105(%var_10100: Tensor[(13, 16, 14), float64], %var_10101: Tensor[(13, 16, 14), float64]) -> (Tensor[(13, 16, 14), float64],) {
  %458 = cast(%var_10101, dtype="float64") /* ty=Tensor[(13, 16, 14), float64] */;
  %459 = shape_of(%var_10100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%var_10100, dtype="float64") /* ty=Tensor[(13, 16, 14), float64] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %462 = divide(%460, %461) /* ty=Tensor[(13, 16, 14), float64] */;
  (%462,)
}

def @func_8883() -> (Tensor[(1, 10, 10), float32],) {
  %463 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %464 = %463.0;
  (%464,)
}

def @func_11506() -> (Tensor[(1, 10, 10), float64],) {
  %465 = @func_6596() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %466 = %465.1;
  (%466,)
}

def @func_14648() -> Tensor[(1, 10, 10), float64] {
  %467 = @func_6762() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %467.0
}

def @func_17705() -> Tensor[(?, 10, 10), uint16] {
  %468 = @func_7097() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %469 = %468.0;
  %470 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 10, 10), float64] */, dtype="uint16") /* ty=Tensor[(1, 10, 10), uint16] */;
  %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%469, dtype="uint16") /* ty=Tensor[(1, 10, 10), uint16] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_or(%472, %473) /* ty=Tensor[(?, 10, 10), uint16] */
}

def @func_13439() -> (Tensor[(1, 10, 10), float64],) {
  %474 = @func_10473() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %475 = %474.0;
  (%475,)
}

def @func_14050() -> Tensor[(12, 8, 7), float32] {
  @func_5023() /* ty=Tensor[(12, 8, 7), float32] */
}

def @func_8419() -> (Tensor[(1, 10, 10), float64],) {
  %476 = @func_7659() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %477 = %476.1;
  (%477,)
}

def @func_11146(%var_11124: Tensor[(6, 10, 10), float64]) -> (Tensor[(6, 10, 10), int64], Tensor[(4, 10, 10), int16], Tensor[(400), float64]) {
  %478 = @func_9511() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %479 = %478.0;
  %480 = cast(%479, dtype="int64") /* ty=Tensor[(1, 10, 10), int64] */;
  %481 = cast(%var_11124, dtype="int64") /* ty=Tensor[(6, 10, 10), int64] */;
  %482 = cast(meta[relay.Constant][26] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %483 = reshape(%482, newshape=[4, 10, 10]) /* ty=Tensor[(4, 10, 10), float64] */;
  %484 = @func_6479(%483) /* ty=(Tensor[(4, 10, 10), int16],) */;
  %485 = multiply(%480, %481) /* ty=Tensor[(6, 10, 10), int64] */;
  %486 = %484.0;
  (%485, %486, meta[relay.Constant][26] /* ty=Tensor[(400), float64] */)
}

def @func_13846(%var_13820: Tensor[(48), float64], %var_13821: Tensor[(165), int16], %var_13823: Tensor[(320), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(448), float32], Tensor[(48), float64], Tensor[(165), int16], Tensor[(825), int16], Tensor[(320), float32], Tensor[(400), float64], Tensor[(1, 10, 10), float64]) {
  %487 = cast(%var_13820, dtype="float64") /* ty=Tensor[(48), float64] */;
  %488 = cast(%var_13821, dtype="int16") /* ty=Tensor[(165), int16] */;
  %489 = cast(meta[relay.Constant][27] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %490 = cast(%var_13823, dtype="float32") /* ty=Tensor[(320), float32] */;
  %491 = cast(meta[relay.Constant][27] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %492 = cast(meta[relay.Constant][28] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %493 = reshape(%487, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %494 = reshape(%488, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %495 = reshape(%489, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %496 = reshape(%490, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %497 = reshape(%491, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %498 = reshape(%492, newshape=[8, 50]) /* ty=Tensor[(8, 50), float64] */;
  %499 = @func_10858(%493, %494, %495, %496, %497, %498) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), bool], Tensor[(320), float32], Tensor[(1, 10, 10), float32], Tensor[(825), int32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(8, 50), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(60, 10), float64]) */;
  %500 = @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %501 = @func_8343() /* ty=Tensor[(1, 10, 10), float64] */;
  %502 = %499.14;
  %503 = %500.0;
  (%501, %502, %var_13820, %var_13821, meta[relay.Constant][27] /* ty=Tensor[(825), int16] */, %var_13823, meta[relay.Constant][28] /* ty=Tensor[(400), float64] */, %503)
}

def @func_5796() -> (Tensor[(1, 10, 10), float64],) {
  %504 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  (%504,)
}

def @func_10473() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %505 = @func_10043() /* ty=Tensor[(1, 10, 10), float64] */;
  %506 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  (%505, %506)
}

def @func_8650() -> Tensor[(1, 10, 10), float64] {
  @func_6738() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_14466(%var_14394: Tensor[(400), float64], %var_14395: Tensor[(280), uint64], %var_14404: Tensor[(165), int16], %var_14417: Tensor[(2, 160), float32]) -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(400), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(600), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(4, 10, 10), int16], Tensor[(2, 160), float32], Tensor[(1, 10, 10), float64]) {
  %507 = @func_9731() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %508 = cast(%var_14394, dtype="float64") /* ty=Tensor[(400), float64] */;
  %509 = cast(%var_14395, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %510 = cast(meta[relay.Constant][29] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %511 = cast(meta[relay.Constant][30] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %512 = reshape(%508, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %513 = reshape(%509, newshape=[280]) /* ty=Tensor[(280), uint64] */;
  %514 = reshape(%510, newshape=[448, 1]) /* ty=Tensor[(448, 1), float32] */;
  %515 = reshape(%511, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %516 = @func_7605(%512, %513, %514, %515) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64], Tensor[(4, 10, 10), int16], Tensor[(400), float64], Tensor[(12, 8, 7), float32], Tensor[(40, 2), float32], Tensor[(165), int16], Tensor[(280), uint64], Tensor[(448, 1), float32], Tensor[(165), int16], Tensor[(320), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(1, 10, 10), float64]) */;
  %517 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 160), float32] */, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %518 = cast(%var_14404, dtype="int16") /* ty=Tensor[(165), int16] */;
  %519 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 160), float32] */, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %520 = reshape(%517, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %521 = reshape(%518, newshape=[11, 15]) /* ty=Tensor[(11, 15), int16] */;
  %522 = reshape(%519, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %523 = @func_3695(%520, %521, %522) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) */;
  %524 = cast(meta[relay.Constant][30] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %525 = reshape(%524, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float64] */;
  %526 = @func_11146(%525) /* ty=(Tensor[(6, 10, 10), int64], Tensor[(4, 10, 10), int16], Tensor[(400), float64]) */;
  %527 = cast(%var_14417, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %528 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(2, 160), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %529 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 160), float32] */, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %531 = %507.0;
  %532 = %516.3;
  %533 = %523.6;
  %534 = %526.1;
  %535 = mod(%529, %530) /* ty=Tensor[(2, 160), float32] */;
  %536 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  (%531, %532, %var_14394, %var_14395, meta[relay.Constant][29] /* ty=Tensor[(448), float32] */, meta[relay.Constant][30] /* ty=Tensor[(600), float64] */, %533, %var_14404, %534, %535, %536)
}

def @func_14617() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %537 = @func_7003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %538 = @func_12138() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %539 = %537.1;
  %540 = %538.0;
  (%539, %540)
}

def @func_5577() -> Tensor[(1, 10, 10), float64] {
  @func_4522() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_3152(%var_3114: Tensor[(10, 4, 2), float64], %var_3123: Tensor[(825), int16], %var_3146: Tensor[(165), int16]) -> (Tensor[(15, 5, 11), int16], Tensor[(825), int16], Tensor[(48), float64], Tensor[(10, 4, 2), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) {
  %541 = cast(%var_3114, dtype="float64") /* ty=Tensor[(10, 4, 2), float64] */;
  %542 = acosh(%541) /* ty=Tensor[(10, 4, 2), float64] */;
  %543 = cast(%542, dtype="float32") /* ty=Tensor[(10, 4, 2), float32] */;
  %544 = cast(%var_3123, dtype="int16") /* ty=Tensor[(825), int16] */;
  %545 = cast(meta[relay.Constant][32] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %546 = reshape(%543, newshape=[1, 8, 10]) /* ty=Tensor[(1, 8, 10), float32] */;
  %547 = reshape(%544, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %548 = reshape(%545, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %549 = @func_2680(%546, %547, %548) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */;
  %550 = cast(%var_3114, dtype="float64") /* ty=Tensor[(10, 4, 2), float64] */;
  %551 = shape_of(%542, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%542, dtype="float64") /* ty=Tensor[(10, 4, 2), float64] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %554 = cast(%var_3146, dtype="int16") /* ty=Tensor[(165), int16] */;
  %555 = %549.9;
  %556 = cast(%555, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %557 = reshape(%554, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %558 = reshape(%556, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %559 = @func_1835(%557, %558) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %560 = mod(%552, %553) /* ty=Tensor[(10, 4, 2), float64] */;
  %561 = %559.0;
  (%555, %var_3123, meta[relay.Constant][32] /* ty=Tensor[(48), float64] */, %560, %561, %var_3146)
}

def @func_10159() -> Tensor[(1, 10, 10), float32] {
  %562 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %562.0
}

def @func_11821(%var_11805: Tensor[(1, 165), int16], %var_11806: Tensor[(825), int16]) -> (Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16], Tensor[(165), int16], Tensor[(80), float64]) {
  %563 = @func_9321() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(180), float32]) */;
  %564 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %565 = @func_7659() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %566 = cast(%var_11805, dtype="int16") /* ty=Tensor[(1, 165), int16] */;
  %567 = cast(%var_11806, dtype="int16") /* ty=Tensor[(825), int16] */;
  %568 = reshape(%566, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %569 = reshape(%567, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %570 = @func_1835(%568, %569) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %571 = cast(meta[relay.Constant][33] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %572 = cast(%var_11806, dtype="int16") /* ty=Tensor[(825), int16] */;
  %573 = reshape(%571, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %574 = reshape(%572, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %575 = @func_5468(%573, %574) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), float64]) */;
  %576 = %563.1;
  %577 = %564.0;
  %578 = %565.0;
  %579 = %570.0;
  %580 = %575.3;
  (%576, %577, %578, %579, %var_11805, %var_11806, %580, meta[relay.Constant][33] /* ty=Tensor[(80), float64] */)
}

def @func_10653() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) {
  %581 = @func_9720() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %582 = @func_8353() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %583 = %581.0;
  %584 = @func_6571() /* ty=Tensor[(1, 10, 10), float64] */;
  %585 = %582.0;
  (%583, %584, %585)
}

def @func_8411(%var_8403: Tensor[(15, 10, 10), float64]) -> (Tensor[(12, 8, 7), float32], Tensor[(15, 10, 10), int8]) {
  %586 = @func_7727() /* ty=Tensor[(1, 10, 10), float64] */;
  %587 = cast(%586, dtype="int8") /* ty=Tensor[(1, 10, 10), int8] */;
  %588 = cast(%var_8403, dtype="int8") /* ty=Tensor[(15, 10, 10), int8] */;
  %589 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  %590 = bitwise_or(%587, %588) /* ty=Tensor[(15, 10, 10), int8] */;
  (%589, %590)
}

def @func_16866(%var_16862: Tensor[(825), int16], %var_16863: Tensor[(320), float32], %var_16864: Tensor[(400), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1050), float32], Tensor[(?, 10, 10), bool], Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(165), int16], Tensor[(825), int16], Tensor[(320), float32], Tensor[(400), float64]) {
  %591 = cast(meta[relay.Constant][34] /* ty=Tensor[(1050), float32] */, dtype="float32") /* ty=Tensor[(1050), float32] */;
  %592 = reshape(%591, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), float32] */;
  %593 = @func_15160(%592) /* ty=(Tensor[(10, 7, 15), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %594 = @func_7928() /* ty=Tensor[(1, 10, 10), float32] */;
  %595 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %596 = cast(%595, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %597 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%594, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %600 = cast(meta[relay.Constant][35] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %601 = cast(meta[relay.Constant][36] /* ty=Tensor[(165), int16] */, dtype="int16") /* ty=Tensor[(165), int16] */;
  %602 = cast(%var_16862, dtype="int16") /* ty=Tensor[(825), int16] */;
  %603 = cast(%var_16863, dtype="float32") /* ty=Tensor[(320), float32] */;
  %604 = cast(%var_16862, dtype="int16") /* ty=Tensor[(825), int16] */;
  %605 = cast(%var_16864, dtype="float64") /* ty=Tensor[(400), float64] */;
  %606 = reshape(%600, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %607 = reshape(%601, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %608 = reshape(%602, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %609 = reshape(%603, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %610 = reshape(%604, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %611 = reshape(%605, newshape=[8, 50]) /* ty=Tensor[(8, 50), float64] */;
  %612 = @func_10858(%606, %607, %608, %609, %610, %611) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), bool], Tensor[(320), float32], Tensor[(1, 10, 10), float32], Tensor[(825), int32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(8, 50), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(60, 10), float64]) */;
  %613 = @func_14345() /* ty=Tensor[(1, 10, 10), float64] */;
  %614 = %593.1;
  %615 = equal(%598, %599) /* ty=Tensor[(?, 10, 10), bool] */;
  %616 = %612.11;
  (%613, %614, meta[relay.Constant][34] /* ty=Tensor[(1050), float32] */, %615, %616, meta[relay.Constant][35] /* ty=Tensor[(48), float64] */, meta[relay.Constant][36] /* ty=Tensor[(165), int16] */, %var_16862, %var_16863, %var_16864)
}

def @func_13068(%var_12955: Tensor[(2, 10, 10), float64], %var_13014: Tensor[(55, 15), int16]) -> (Tensor[(2, 10, 10), bool], Tensor[(165), int16], Tensor[(400), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(600), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(165), int16], Tensor[(55, 15), int16], Tensor[(12, 8, 7), float32], Tensor[(4, 10, 10), int16]) {
  %617 = @func_5544() /* ty=Tensor[(1, 10, 10), float64] */;
  %618 = cast(%617, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %619 = cast(%var_12955, dtype="bool") /* ty=Tensor[(2, 10, 10), bool] */;
  %620 = cast(meta[relay.Constant][37] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %621 = cast(meta[relay.Constant][38] /* ty=Tensor[(280), uint64] */, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %622 = cast(meta[relay.Constant][39] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %623 = cast(meta[relay.Constant][40] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %624 = reshape(%620, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %625 = reshape(%621, newshape=[280]) /* ty=Tensor[(280), uint64] */;
  %626 = reshape(%622, newshape=[448, 1]) /* ty=Tensor[(448, 1), float32] */;
  %627 = reshape(%623, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %628 = @func_7605(%624, %625, %626, %627) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64], Tensor[(4, 10, 10), int16], Tensor[(400), float64], Tensor[(12, 8, 7), float32], Tensor[(40, 2), float32], Tensor[(165), int16], Tensor[(280), uint64], Tensor[(448, 1), float32], Tensor[(165), int16], Tensor[(320), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(1, 10, 10), float64]) */;
  %629 = @func_7097() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %630 = %628.11;
  %631 = cast(%630, dtype="int16") /* ty=Tensor[(165), int16] */;
  %632 = cast(%var_13014, dtype="int16") /* ty=Tensor[(55, 15), int16] */;
  %633 = reshape(%631, newshape=[1, 165]) /* ty=Tensor[(1, 165), int16] */;
  %634 = reshape(%632, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %635 = @func_11821(%633, %634) /* ty=(Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16], Tensor[(165), int16], Tensor[(80), float64]) */;
  %636 = @func_9664() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(12, 8, 7), float32]) */;
  %637 = cast(meta[relay.Constant][37] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %638 = reshape(%637, newshape=[4, 10, 10]) /* ty=Tensor[(4, 10, 10), float64] */;
  %639 = @func_6479(%638) /* ty=(Tensor[(4, 10, 10), int16],) */;
  %640 = logical_and(%618, %619) /* ty=Tensor[(2, 10, 10), bool] */;
  %641 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  %642 = %629.0;
  %643 = %635.6;
  %644 = %636.1;
  %645 = %639.0;
  (%640, %630, meta[relay.Constant][37] /* ty=Tensor[(400), float64] */, meta[relay.Constant][38] /* ty=Tensor[(280), uint64] */, meta[relay.Constant][39] /* ty=Tensor[(448), float32] */, meta[relay.Constant][40] /* ty=Tensor[(600), float64] */, %641, %642, %643, %var_13014, %644, %645)
}

def @func_7605(%var_7523: Tensor[(400), float64], %var_7572: Tensor[(280), uint64], %var_7573: Tensor[(448, 1), float32], %var_7586: Tensor[(600), float64]) -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64], Tensor[(4, 10, 10), int16], Tensor[(400), float64], Tensor[(12, 8, 7), float32], Tensor[(40, 2), float32], Tensor[(165), int16], Tensor[(280), uint64], Tensor[(448, 1), float32], Tensor[(165), int16], Tensor[(320), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(1, 10, 10), float64]) {
  %646 = cast(meta[relay.Constant][41] /* ty=Tensor[(40, 2), float64] */, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
  %647 = cast(meta[relay.Constant][42] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %648 = reshape(%646, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %649 = reshape(%647, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %650 = @func_7314(%648, %649) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) */;
  %651 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %652 = cast(%var_7523, dtype="float64") /* ty=Tensor[(400), float64] */;
  %653 = reshape(%652, newshape=[4, 10, 10]) /* ty=Tensor[(4, 10, 10), float64] */;
  %654 = @func_6479(%653) /* ty=(Tensor[(4, 10, 10), int16],) */;
  %655 = cast(meta[relay.Constant][41] /* ty=Tensor[(40, 2), float64] */, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
  %656 = cast(%var_7572, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %657 = cast(%var_7572, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %658 = cast(%var_7573, dtype="float32") /* ty=Tensor[(448, 1), float32] */;
  %659 = acosh(%655) /* ty=Tensor[(40, 2), float32] */;
  %660 = cast(%659, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
  %661 = cast(meta[relay.Constant][42] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %662 = cast(meta[relay.Constant][43] /* ty=Tensor[(165), int16] */, dtype="int16") /* ty=Tensor[(165), int16] */;
  %663 = cast(meta[relay.Constant][44] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %664 = reshape(%656, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint64] */;
  %665 = reshape(%657, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint64] */;
  %666 = reshape(%658, newshape=[448]) /* ty=Tensor[(448), float32] */;
  %667 = reshape(%660, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %668 = reshape(%661, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %669 = reshape(%662, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %670 = reshape(%663, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %671 = @func_5152(%664, %665, %666, %667, %668, %669, %670) /* ty=(Tensor[(4, 14, 5), uint64], Tensor[(15, 5, 11), int16], Tensor[(448), float32], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(11, 15), int16], Tensor[(320), float32]) */;
  %672 = @func_6762() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %673 = cast(%var_7586, dtype="float64") /* ty=Tensor[(600), float64] */;
  %674 = reshape(%673, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float64] */;
  %675 = @func_4770(%674) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(24, 2), float64], Tensor[(6, 10, 10), bool], Tensor[(825, 320), float64]) */;
  %676 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  %677 = %650.1;
  %678 = %651.0;
  %679 = %654.0;
  %680 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  %681 = %671.5;
  %682 = %672.0;
  %683 = @func_6837() /* ty=Tensor[(1, 10, 10), float64] */;
  %684 = %675.3;
  %685 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  (%676, %677, meta[relay.Constant][42] /* ty=Tensor[(825), int16] */, %678, %679, %var_7523, %680, %659, %681, %var_7572, %var_7573, meta[relay.Constant][43] /* ty=Tensor[(165), int16] */, meta[relay.Constant][44] /* ty=Tensor[(320), float32] */, %682, %683, %684, %var_7586, %685)
}

def @func_5023() -> Tensor[(12, 8, 7), float32] {
  %686 = cast(meta[relay.Constant][45] /* ty=Tensor[(12, 8, 7), float32] */, dtype="float32") /* ty=Tensor[(12, 8, 7), float32] */;
  log10(%686) /* ty=Tensor[(12, 8, 7), float32] */
}

def @func_16659(%var_16654: Tensor[(672), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(7, 16, 6), float32], Tensor[(672), float32], Tensor[(1, 10, 10), float64]) {
  %687 = @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %688 = cast(%var_16654, dtype="float32") /* ty=Tensor[(672), float32] */;
  %689 = reshape(%688, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float32] */;
  %690 = @func_10373(%689) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %691 = @func_7003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %692 = %687.0;
  %693 = %690.0;
  %694 = %691.1;
  (%692, %693, %var_16654, %694)
}

def @func_14884() -> (Tensor[(1, 10, 10), float64],) {
  %695 = @func_12138() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %696 = %695.0;
  (%696,)
}

def @func_12845(%var_12813: Tensor[(4, 10, 9), int16]) -> (Tensor[(4, 10, 9), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %697 = cast(%var_12813, dtype="int16") /* ty=Tensor[(4, 10, 9), int16] */;
  %698 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(4, 10, 9), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %699 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 10, 9), int16] */, dtype="int16") /* ty=Tensor[(4, 10, 9), int16] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %701 = @func_6596() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %702 = @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %703 = bitwise_or(%699, %700) /* ty=Tensor[(4, 10, 9), int16] */;
  %704 = %701.0;
  %705 = %702.0;
  (%703, %704, %705)
}

def @func_16399() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %706 = @func_6162() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %707 = @func_6162() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %708 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %709 = %706.0;
  %710 = %707.0;
  (%708, %709, %710)
}

def @func_14345() -> Tensor[(1, 10, 10), float64] {
  %711 = @func_5378() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %711.0
}

def @func_11309() -> Tensor[(1, 10, 10), float64] {
  @func_5577() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_12481(%var_12434: Tensor[(448), float32], %var_12436: Tensor[(825), int16], %var_12437: Tensor[(165), int16], %var_12446: Tensor[(1200), uint16]) -> (Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), float64], Tensor[(448), float32], Tensor[(80), float64], Tensor[(165), int16], Tensor[(15, 16, 5), uint16], Tensor[(1200), uint16], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), bool], Tensor[(320), float32], Tensor[(165, 825), bool], Tensor[(1, 10, 10), float64]) {
  %712 = @func_7659() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %713 = @func_11558() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %714 = %713.0;
  %715 = @func_9731() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %716 = %715.0;
  %717 = cast(%716, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
  %718 = shape_of(%714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %719 = cast(%714, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %721 = cast(%var_12446, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %722 = cast(%var_12446, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %723 = reshape(%721, newshape=[15, 16, 5]) /* ty=Tensor[(15, 16, 5), uint16] */;
  %724 = reshape(%722, newshape=[15, 16, 5]) /* ty=Tensor[(15, 16, 5), uint16] */;
  %725 = @func_10555(%723, %724) /* ty=(Tensor[(15, 16, 5), uint16],) */;
  %726 = @func_10473() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %727 = cast(meta[relay.Constant][48] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %728 = cast(%var_12434, dtype="float32") /* ty=Tensor[(448), float32] */;
  %729 = cast(meta[relay.Constant][47] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %730 = cast(%var_12436, dtype="int16") /* ty=Tensor[(825), int16] */;
  %731 = cast(%var_12437, dtype="int16") /* ty=Tensor[(165), int16] */;
  %732 = cast(%var_12434, dtype="float32") /* ty=Tensor[(448), float32] */;
  %733 = reshape(%728, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %734 = reshape(%729, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %735 = reshape(%730, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %736 = reshape(%731, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %737 = reshape(%732, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %738 = @func_4479(%733, %734, %735, %736, %737) /* ty=(Tensor[(48), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(15, 5, 11), int16], Tensor[(14, 16, 2), bool], Tensor[(165, 1), int16], Tensor[(14, 16, 2), float64], Tensor[(1, 10, 10), float64]) */;
  %739 = %738.6;
  %740 = cast(%739, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %741 = cast(%var_12436, dtype="int16") /* ty=Tensor[(825), int16] */;
  %742 = reshape(%727, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %743 = reshape(%740, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %744 = reshape(%741, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %745 = @func_8175(%742, %743, %744) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(165), int16], Tensor[(15, 5, 11), bool], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %746 = cast(%739, dtype="bool") /* ty=Tensor[(165, 1), bool] */;
  %747 = cast(%var_12436, dtype="bool") /* ty=Tensor[(825), bool] */;
  %748 = @func_5378() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %749 = %712.1;
  %750 = mod(%719, %720) /* ty=Tensor[(?, 10, 10), float64] */;
  %751 = %725.0;
  %752 = %726.1;
  %753 = %745.3;
  %754 = less_equal(%746, %747) /* ty=Tensor[(165, 825), bool] */;
  %755 = %748.0;
  (%749, %750, %var_12434, meta[relay.Constant][47] /* ty=Tensor[(80), float64] */, %var_12437, %751, %var_12446, %752, %753, meta[relay.Constant][48] /* ty=Tensor[(320), float32] */, %754, %755)
}

def @func_9731() -> (Tensor[(1, 10, 10), float32],) {
  %756 = @func_9664() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(12, 8, 7), float32]) */;
  %757 = %756.0;
  (%757,)
}

def @func_6665(%var_6634: Tensor[(300, 2), float64], %var_6659: Tensor[(300, 2), int8]) -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(6, 10, 10), bool], Tensor[(?, 10, 10), bool], Tensor[(300, 2), bool]) {
  %758 = @func_6400() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %759 = cast(%var_6634, dtype="float64") /* ty=Tensor[(300, 2), float64] */;
  %760 = reshape(%759, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float64] */;
  %761 = @func_4770(%760) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(24, 2), float64], Tensor[(6, 10, 10), bool], Tensor[(825, 320), float64]) */;
  %762 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %763 = cast(%762, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
  %764 = reshape(%763, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float64] */;
  %765 = @func_5004(%764) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) */;
  %766 = cast(%var_6634, dtype="float64") /* ty=Tensor[(300, 2), float64] */;
  %767 = cosh(%766) /* ty=Tensor[(300, 2), float64] */;
  %768 = cast(%var_6634, dtype="int8") /* ty=Tensor[(300, 2), int8] */;
  %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(2), int32] */;
  %770 = cast(%767, dtype="int8") /* ty=Tensor[(300, 2), int8] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %772 = left_shift(%770, %771) /* ty=Tensor[(300, 2), int8] */;
  %773 = cast(%var_6659, dtype="bool") /* ty=Tensor[(300, 2), bool] */;
  %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(2), int32] */;
  %775 = cast(%772, dtype="bool") /* ty=Tensor[(300, 2), bool] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %777 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  %778 = %758.0;
  %779 = %761.3;
  %780 = %765.3;
  %781 = less(%775, %776) /* ty=Tensor[(300, 2), bool] */;
  (%777, %762, %778, %779, %780, %781)
}

def @func_5180() -> (Tensor[(1, 10, 10), float64],) {
  %782 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %783 = %782.0;
  (%783,)
}

def @func_11253() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) {
  %784 = @func_8883() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %785 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
  %786 = %784.0;
  (%785, %786)
}

def @func_14553() -> (Tensor[(1, 10, 10), float64],) {
  %787 = @func_6571() /* ty=Tensor[(1, 10, 10), float64] */;
  (%787,)
}

def @func_17286() -> Tensor[(1, 10, 10), float64] {
  @func_8650() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_17497() -> (Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32]) {
  %788 = @func_9321() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(180), float32]) */;
  %789 = @func_16949() /* ty=Tensor[(1, 10, 10), float64] */;
  %790 = %788.1;
  (%789, %790)
}

def @func_9974(%var_9934: Tensor[(12, 10, 10), float64], %var_9946: Tensor[(12, 10, 10), int16]) -> (Tensor[(12, 10, 10), uint8], Tensor[(12, 10, 10), float32], Tensor[(12, 8, 7), float32]) {
  %791 = @func_8310() /* ty=Tensor[(1, 10, 10), float64] */;
  %792 = cast(%791, dtype="int16") /* ty=Tensor[(1, 10, 10), int16] */;
  %793 = cast(%var_9934, dtype="int16") /* ty=Tensor[(12, 10, 10), int16] */;
  %794 = right_shift(%792, %793) /* ty=Tensor[(12, 10, 10), int16] */;
  %795 = cast(%var_9946, dtype="uint8") /* ty=Tensor[(12, 10, 10), uint8] */;
  %796 = shape_of(%794, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%794, dtype="uint8") /* ty=Tensor[(12, 10, 10), uint8] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %799 = cast(%794, dtype="float32") /* ty=Tensor[(12, 10, 10), float32] */;
  %800 = @func_6273() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) */;
  %801 = logical_xor(%797, %798) /* ty=Tensor[(12, 10, 10), uint8] */;
  %802 = log10(%799) /* ty=Tensor[(12, 10, 10), float32] */;
  %803 = %800.0;
  (%801, %802, %803)
}

def @func_15008() -> (Tensor[(1, 10, 10), float64],) {
  %804 = @func_12029() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %805 = %804.0;
  (%805,)
}

def @func_12029() -> (Tensor[(1, 10, 10), float64],) {
  %806 = @func_7346() /* ty=Tensor[(1, 10, 10), float64] */;
  (%806,)
}

def @func_16506(%var_16497: Tensor[(9, 10, 10), float32]) -> Tensor[(9, 10, 10), uint16] {
  %807 = @func_11670() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %808 = %807.0;
  %809 = cast(%808, dtype="uint16") /* ty=Tensor[(1, 10, 10), uint16] */;
  %810 = cast(%var_16497, dtype="uint16") /* ty=Tensor[(9, 10, 10), uint16] */;
  left_shift(%809, %810) /* ty=Tensor[(9, 10, 10), uint16] */
}

def @func_14009() -> Tensor[(6, ?, 15), bool] {
  %811 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 15), float32] */;
  %812 = log(%811) /* ty=Tensor[(6, 1, 15), float32] */;
  %813 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 1, 15), float32] */, dtype="bool") /* ty=Tensor[(6, 1, 15), bool] */;
  %814 = shape_of(%812, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%812, dtype="bool") /* ty=Tensor[(6, 1, 15), bool] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%815, %816) /* ty=Tensor[(6, ?, 15), bool] */
}

def @func_8050() -> (Tensor[(1, 10, 10), float32],) {
  %817 = @func_6400() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %818 = %817.0;
  (%818,)
}

def @func_9390() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  %819 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %820 = @func_5378() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %821 = %819.0;
  %822 = %820.0;
  (%821, %822)
}

def @func_5559() -> (Tensor[(1, 10, 10), float64],) {
  %823 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  (%823,)
}

def @func_8353() -> (Tensor[(1, 10, 10), float32],) {
  %824 = @func_6400() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %825 = %824.0;
  (%825,)
}

def @func_17386(%var_17374: Tensor[(13, 15, 11), uint32], %var_17375: Tensor[(13, 15, 11), uint32]) -> (Tensor[(13, 15, 11), bool], Tensor[(1, 10, 10), float64]) {
  %826 = cast(%var_17375, dtype="bool") /* ty=Tensor[(13, 15, 11), bool] */;
  %827 = shape_of(%var_17374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%var_17374, dtype="bool") /* ty=Tensor[(13, 15, 11), bool] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %830 = greater_equal(%828, %829) /* ty=Tensor[(13, 15, 11), bool] */;
  %831 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  (%830, %831)
}

def @func_7659() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  %832 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  %833 = cast(%832, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %834 = log(%833) /* ty=Tensor[(1, 10, 10), float32] */;
  %835 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  (%834, %835)
}

def @func_16615() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 165), int16], Tensor[(825), int16]) {
  %836 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %837 = @func_11558() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %838 = @func_5267() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %839 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 165), int16] */, dtype="int16") /* ty=Tensor[(1, 165), int16] */;
  %840 = cast(meta[relay.Constant][51] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %841 = reshape(%839, newshape=[1, 165]) /* ty=Tensor[(1, 165), int16] */;
  %842 = reshape(%840, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %843 = @func_11821(%841, %842) /* ty=(Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16], Tensor[(165), int16], Tensor[(80), float64]) */;
  %844 = %836.0;
  %845 = %837.1;
  %846 = %838.2;
  %847 = %843.1;
  (%844, %845, %846, %847, meta[relay.Constant][50] /* ty=Tensor[(1, 165), int16] */, meta[relay.Constant][51] /* ty=Tensor[(825), int16] */)
}

def @func_16794(%var_16777: Tensor[(2, 7, 16), uint32], %var_16778: Tensor[(2, 7, 16), uint32]) -> (Tensor[(2, 7, 16), uint32], Tensor[(1, 10, 10), float64]) {
  %848 = cast(%var_16778, dtype="uint32") /* ty=Tensor[(2, 7, 16), uint32] */;
  %849 = shape_of(%var_16777, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%var_16777, dtype="uint32") /* ty=Tensor[(2, 7, 16), uint32] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %852 = @func_10653() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */;
  %853 = bitwise_or(%850, %851) /* ty=Tensor[(2, 7, 16), uint32] */;
  %854 = %852.1;
  (%853, %854)
}

def @func_5378() -> (Tensor[(1, 10, 10), float64],) {
  %855 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  (%855,)
}

def @func_10373(%var_10353: Tensor[(7, 16, 6), float32]) -> (Tensor[(7, 16, 6), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %856 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 16, 6), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 6), float32] */;
  %857 = cast(%var_10353, dtype="float32") /* ty=Tensor[(7, 16, 6), float32] */;
  %858 = @func_10159() /* ty=Tensor[(1, 10, 10), float32] */;
  %859 = cast(%858, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
  %860 = add(%856, %857) /* ty=Tensor[(7, 16, 6), float32] */;
  %861 = @func_8650() /* ty=Tensor[(1, 10, 10), float64] */;
  %862 = erf(%859) /* ty=Tensor[(1, 10, 10), float64] */;
  (%860, %861, %862)
}

def @func_17364(%var_17340: Tensor[(14, 11, 11), float32]) -> (Tensor[(14, 11, 11), uint8], Tensor[(672), float32], Tensor[(672), float32], Tensor[(14, 11, 11), float64]) {
  %863 = @func_13735() /* ty=Tensor[(14, 1, 11), float32] */;
  %864 = cast(%863, dtype="uint8") /* ty=Tensor[(14, 1, 11), uint8] */;
  %865 = cast(%var_17340, dtype="uint8") /* ty=Tensor[(14, 11, 11), uint8] */;
  %866 = cast(meta[relay.Constant][53] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %867 = reshape(%866, newshape=[672]) /* ty=Tensor[(672), float32] */;
  %868 = @func_10541(%867) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(7, 16, 6), float32], Tensor[(672), float32], Tensor[(1, 10, 10), float64]) */;
  %869 = cast(%var_17340, dtype="float64") /* ty=Tensor[(14, 11, 11), float64] */;
  %870 = bitwise_and(%864, %865) /* ty=Tensor[(14, 11, 11), uint8] */;
  %871 = %868.2;
  %872 = cos(%869) /* ty=Tensor[(14, 11, 11), float64] */;
  (%870, %871, meta[relay.Constant][53] /* ty=Tensor[(672), float32] */, %872)
}

def @func_10595() -> (Tensor[(5, 9, 14), float32], Tensor[(1, 10, 10), float64]) {
  %873 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 9, 14), float32] */, dtype="float32") /* ty=Tensor[(5, 9, 14), float32] */;
  %874 = rsqrt(%873) /* ty=Tensor[(5, 9, 14), float32] */;
  %875 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
  (%874, %875)
}

def @func_18094() -> Tensor[(6, ?, 15), bool] {
  @func_14009() /* ty=Tensor[(6, ?, 15), bool] */
}

def @func_12329(%var_12320: Tensor[(6, 13, 11), float64]) -> Tensor[(6, 13, 11), bool] {
  %876 = cast(%var_12320, dtype="float64") /* ty=Tensor[(6, 13, 11), float64] */;
  %877 = sigmoid(%876) /* ty=Tensor[(6, 13, 11), float64] */;
  %878 = cast(%var_12320, dtype="bool") /* ty=Tensor[(6, 13, 11), bool] */;
  %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%877, dtype="bool") /* ty=Tensor[(6, 13, 11), bool] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%880, %881) /* ty=Tensor[(6, 13, 11), bool] */
}

def @func_7187(%var_7165: Tensor[(12, 4), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64]) {
  %882 = cast(meta[relay.Constant][55] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %883 = cast(meta[relay.Constant][55] /* ty=Tensor[(600), float64] */, dtype="int8") /* ty=Tensor[(600), int8] */;
  %884 = reshape(%882, newshape=[300, 2]) /* ty=Tensor[(300, 2), float64] */;
  %885 = reshape(%883, newshape=[300, 2]) /* ty=Tensor[(300, 2), int8] */;
  %886 = @func_6665(%884, %885) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(6, 10, 10), bool], Tensor[(?, 10, 10), bool], Tensor[(300, 2), bool]) */;
  %887 = cast(%var_7165, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %888 = reshape(%887, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %889 = @func_32(%888) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %890 = @func_6837() /* ty=Tensor[(1, 10, 10), float64] */;
  %891 = %886.3;
  %892 = %889.0;
  %893 = @func_6921() /* ty=Tensor[(1, 10, 10), float64] */;
  (%890, %891, meta[relay.Constant][55] /* ty=Tensor[(600), float64] */, %892, %var_7165, %893)
}

def @func_5267() -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %894 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %895 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  %896 = %894.0;
  %897 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  (%895, %896, %897)
}

def @func_6785() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %898 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %899 = @func_5378() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %900 = %898.0;
  %901 = %899.0;
  (%900, %901)
}

def @func_8003() -> (Tensor[(1, 10, 10), float64], Tensor[(300, 2), bool], Tensor[(600), float64]) {
  %902 = @func_7047() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %903 = cast(meta[relay.Constant][56] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %904 = cast(meta[relay.Constant][56] /* ty=Tensor[(600), float64] */, dtype="int8") /* ty=Tensor[(600), int8] */;
  %905 = reshape(%903, newshape=[300, 2]) /* ty=Tensor[(300, 2), float64] */;
  %906 = reshape(%904, newshape=[300, 2]) /* ty=Tensor[(300, 2), int8] */;
  %907 = @func_6665(%905, %906) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(6, 10, 10), bool], Tensor[(?, 10, 10), bool], Tensor[(300, 2), bool]) */;
  %908 = %902.0;
  %909 = %907.5;
  (%908, %909, meta[relay.Constant][56] /* ty=Tensor[(600), float64] */)
}

def @func_8955() -> (Tensor[(1, 10, 10), float64],) {
  %910 = @func_6596() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %911 = %910.1;
  (%911,)
}

def @func_8175(%var_8141: Tensor[(320), float32], %var_8142: Tensor[(165), int16], %var_8160: Tensor[(15, 5, 11), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(165), int16], Tensor[(15, 5, 11), bool], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %912 = cast(%var_8141, dtype="float32") /* ty=Tensor[(320), float32] */;
  %913 = cast(%var_8142, dtype="int16") /* ty=Tensor[(165), int16] */;
  %914 = cast(%var_8141, dtype="float32") /* ty=Tensor[(320), float32] */;
  %915 = reshape(%912, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %916 = reshape(%913, newshape=[11, 15]) /* ty=Tensor[(11, 15), int16] */;
  %917 = reshape(%914, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %918 = @func_3695(%915, %916, %917) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) */;
  %919 = %918.0;
  %920 = cast(%var_8160, dtype="bool") /* ty=Tensor[(15, 5, 11), bool] */;
  %921 = shape_of(%919, dtype="int32") /* ty=Tensor[(3), int32] */;
  %922 = cast(%919, dtype="bool") /* ty=Tensor[(15, 5, 11), bool] */;
  %923 = dyn.reshape(%920, %921, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %924 = @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %925 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %926 = logical_or(%922, %923) /* ty=Tensor[(15, 5, 11), bool] */;
  %927 = %924.0;
  %928 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
  (%925, %var_8141, %var_8142, %926, %927, %928)
}

def @func_13182(%var_13160: Tensor[(320), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(320), float32], Tensor[(165), int16]) {
  %929 = cast(%var_13160, dtype="float32") /* ty=Tensor[(320), float32] */;
  %930 = cast(meta[relay.Constant][57] /* ty=Tensor[(165), int16] */, dtype="int16") /* ty=Tensor[(165), int16] */;
  %931 = cast(%var_13160, dtype="float32") /* ty=Tensor[(320), float32] */;
  %932 = reshape(%929, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %933 = reshape(%930, newshape=[11, 15]) /* ty=Tensor[(11, 15), int16] */;
  %934 = reshape(%931, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %935 = @func_3695(%932, %933, %934) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) */;
  %936 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  %937 = %935.5;
  (%936, %937, %var_13160, meta[relay.Constant][57] /* ty=Tensor[(165), int16] */)
}

def @func_13132() -> (Tensor[(1, 10, 10), float64], Tensor[(672), float32], Tensor[(1, 10, 10), float32], Tensor[(7, 16, 6), float32]) {
  %938 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %939 = @func_11253() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */;
  %940 = cast(meta[relay.Constant][58] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %941 = reshape(%940, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float32] */;
  %942 = @func_10373(%941) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %943 = %942.0;
  %944 = cast(%943, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
  %945 = erf(%944) /* ty=Tensor[(7, 16, 6), float64] */;
  %946 = cast(%945, dtype="float32") /* ty=Tensor[(7, 16, 6), float32] */;
  %947 = %938.0;
  %948 = %939.1;
  %949 = log(%946) /* ty=Tensor[(7, 16, 6), float32] */;
  (%947, meta[relay.Constant][58] /* ty=Tensor[(672), float32] */, %948, %949)
}

def @func_5468(%var_5431: Tensor[(80), float64], %var_5432: Tensor[(825), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), float64]) {
  %950 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %951 = cast(%var_5431, dtype="float64") /* ty=Tensor[(80), float64] */;
  %952 = cast(%var_5432, dtype="int16") /* ty=Tensor[(825), int16] */;
  %953 = cast(meta[relay.Constant][59] /* ty=Tensor[(165), int16] */, dtype="int16") /* ty=Tensor[(165), int16] */;
  %954 = reshape(%951, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), float64] */;
  %955 = reshape(%952, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %956 = reshape(%953, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %957 = @func_3152(%954, %955, %956) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(825), int16], Tensor[(48), float64], Tensor[(10, 4, 2), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) */;
  %958 = %957.0;
  %959 = cast(%var_5432, dtype="float64") /* ty=Tensor[(825), float64] */;
  %960 = shape_of(%958, dtype="int32") /* ty=Tensor[(3), int32] */;
  %961 = cast(%958, dtype="float64") /* ty=Tensor[(15, 5, 11), float64] */;
  %962 = dyn.reshape(%959, %960, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %963 = %950.0;
  %964 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  %965 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %966 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  %967 = power(%961, %962) /* ty=Tensor[(15, 5, 11), float64] */;
  (%963, %964, %var_5431, meta[relay.Constant][59] /* ty=Tensor[(165), int16] */, %965, %966, %967)
}

def @func_32(%var_20: Tensor[(2, 4, 6), float64]) -> (Tensor[(2, 4, 6), float64],) {
  %968 = cast(%var_20, dtype="float64") /* ty=Tensor[(2, 4, 6), float64] */;
  %969 = sqrt(%968) /* ty=Tensor[(2, 4, 6), float64] */;
  (%969,)
}

def @func_13522() -> (Tensor[(1, 10, 10), float64],) {
  %970 = @func_8763() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, ?, 14), float64], Tensor[(28), float64], Tensor[(?, 10, 10), uint16]) */;
  %971 = %970.0;
  (%971,)
}

def @func_17878() -> (Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32], Tensor[(300), float32]) {
  %972 = cast(meta[relay.Constant][60] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %973 = reshape(%972, newshape=[300]) /* ty=Tensor[(300), float32] */;
  %974 = @func_16303(%973) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32], Tensor[(300), float32]) */;
  %975 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %976 = %974.1;
  (%975, %976, meta[relay.Constant][60] /* ty=Tensor[(300), float32] */)
}

def @func_7346() -> Tensor[(1, 10, 10), float64] {
  %977 = @func_7003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %977.0
}

def @func_16280() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %978 = @func_13439() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %979 = @func_10473() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %980 = %978.0;
  %981 = %979.1;
  (%980, %981)
}

def @func_15090() -> Tensor[(1, 10, 10), float64] {
  %982 = @func_5180() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %982.0
}

def @func_6273() -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) {
  %983 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  %984 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  (%983, %984)
}

def @func_7003() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %985 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %986 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  (%985, %986)
}

def @func_13083() -> (Tensor[(1, 10, 10), float32],) {
  %987 = @func_7928() /* ty=Tensor[(1, 10, 10), float32] */;
  (%987,)
}

def @func_9321() -> (Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(180), float32]) {
  %988 = @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %989 = cast(meta[relay.Constant][61] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %990 = reshape(%989, newshape=[5, 9, 4]) /* ty=Tensor[(5, 9, 4), float32] */;
  %991 = @func_8079(%990) /* ty=(Tensor[(5, 9, 4), float32],) */;
  %992 = %988.0;
  %993 = %991.0;
  (%992, %993, meta[relay.Constant][61] /* ty=Tensor[(180), float32] */)
}

def @func_10978(%var_10918: Tensor[(13, 10, 10), float64], %var_10928: Tensor[(15, 10, 10), float64]) -> (Tensor[(13, 10, 10), uint64], Tensor[(15, 10, 10), float32], Tensor[(15, 10, 10), bool], Tensor[(15, 10, 10), uint32]) {
  %994 = @func_9275() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %995 = %994.0;
  %996 = cast(%995, dtype="uint64") /* ty=Tensor[(1, 10, 10), uint64] */;
  %997 = cast(%var_10918, dtype="uint64") /* ty=Tensor[(13, 10, 10), uint64] */;
  %998 = cast(%995, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %999 = cast(%var_10928, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
  %1000 = @func_7727() /* ty=Tensor[(1, 10, 10), float64] */;
  %1001 = cast(%var_10928, dtype="bool") /* ty=Tensor[(15, 10, 10), bool] */;
  %1002 = cast(%1000, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %1003 = cast(%1000, dtype="uint32") /* ty=Tensor[(1, 10, 10), uint32] */;
  %1004 = cast(%var_10928, dtype="uint32") /* ty=Tensor[(15, 10, 10), uint32] */;
  %1005 = subtract(%996, %997) /* ty=Tensor[(13, 10, 10), uint64] */;
  %1006 = floor_mod(%998, %999) /* ty=Tensor[(15, 10, 10), float32] */;
  %1007 = logical_or(%1001, %1002) /* ty=Tensor[(15, 10, 10), bool] */;
  %1008 = subtract(%1003, %1004) /* ty=Tensor[(15, 10, 10), uint32] */;
  (%1005, %1006, %1007, %1008)
}

def @func_14087() -> (Tensor[(1, 10, 10), float64],) {
  %1009 = @func_12917() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1010 = %1009.0;
  (%1010,)
}

def @func_14256() -> Tensor[(1, 10, 10), float64] {
  %1011 = @func_6162() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1011.0
}

def @func_13466(%var_13461: Tensor[(10, 10, 10), float32]) -> Tensor[(10, 10, 10), uint32] {
  %1012 = @func_9390() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %1013 = %1012.0;
  %1014 = cast(%1013, dtype="uint32") /* ty=Tensor[(1, 10, 10), uint32] */;
  %1015 = cast(%var_13461, dtype="uint32") /* ty=Tensor[(10, 10, 10), uint32] */;
  left_shift(%1014, %1015) /* ty=Tensor[(10, 10, 10), uint32] */
}

def @func_8079(%var_8074: Tensor[(5, 9, 4), float32]) -> (Tensor[(5, 9, 4), float32],) {
  %1016 = cast(%var_8074, dtype="float32") /* ty=Tensor[(5, 9, 4), float32] */;
  %1017 = log10(%1016) /* ty=Tensor[(5, 9, 4), float32] */;
  (%1017,)
}

def @func_17327() -> Tensor[(1, 10, 10), float64] {
  %1018 = @func_13566() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) */;
  %1018.1
}

def @func_4770(%var_4760: Tensor[(6, 10, 10), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(24, 2), float64], Tensor[(6, 10, 10), bool], Tensor[(825, 320), float64]) {
  %1019 = cast(meta[relay.Constant][62] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1020 = cast(meta[relay.Constant][63] /* ty=Tensor[(825, 1), int16] */, dtype="int16") /* ty=Tensor[(825, 1), int16] */;
  %1021 = cast(meta[relay.Constant][64] /* ty=Tensor[(24, 2), float64] */, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
  %1022 = reshape(%1019, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %1023 = reshape(%1020, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %1024 = reshape(%1021, newshape=[1, 48]) /* ty=Tensor[(1, 48), float64] */;
  %1025 = @func_4319(%1022, %1023, %1024) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(33, 5), int16], Tensor[(5, 165), bool], Tensor[(5, 165), bool], Tensor[(2, 4, 6), float64], Tensor[(1, 48), float64]) */;
  %1026 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %1027 = cast(%1026, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %1028 = cast(%var_4760, dtype="bool") /* ty=Tensor[(6, 10, 10), bool] */;
  %1029 = cast(meta[relay.Constant][63] /* ty=Tensor[(825, 1), int16] */, dtype="float64") /* ty=Tensor[(825, 1), float64] */;
  %1030 = atan(%1029) /* ty=Tensor[(825, 1), float64] */;
  %1031 = cast(%1030, dtype="float64") /* ty=Tensor[(825, 1), float64] */;
  %1032 = cast(meta[relay.Constant][62] /* ty=Tensor[(320), float32] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %1033 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  %1034 = %1025.4;
  %1035 = less(%1027, %1028) /* ty=Tensor[(6, 10, 10), bool] */;
  %1036 = mod(%1031, %1032) /* ty=Tensor[(825, 320), float64] */;
  (%1033, %1034, meta[relay.Constant][64] /* ty=Tensor[(24, 2), float64] */, %1035, %1036)
}

def @func_12807(%var_12801: Tensor[(3, 10, 10), float32]) -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32]) {
  %1037 = @func_7047() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1038 = @func_8353() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %1039 = %1038.0;
  %1040 = cast(%1039, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %1041 = cast(%var_12801, dtype="float32") /* ty=Tensor[(3, 10, 10), float32] */;
  %1042 = @func_10159() /* ty=Tensor[(1, 10, 10), float32] */;
  %1043 = %1037.0;
  %1044 = mod(%1040, %1041) /* ty=Tensor[(3, 10, 10), float32] */;
  (%1042, %1043, %1044)
}

def @func_13385() -> (Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) {
  %1045 = @func_9275() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1046 = %1045.0;
  %1047 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  (%1046, %1047)
}

def @func_6596() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %1048 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  %1049 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  (%1048, %1049)
}

def @func_11558() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  %1050 = @func_7928() /* ty=Tensor[(1, 10, 10), float32] */;
  %1051 = @func_7346() /* ty=Tensor[(1, 10, 10), float64] */;
  (%1050, %1051)
}

def @func_9511() -> (Tensor[(1, 10, 10), float64],) {
  %1052 = @func_6921() /* ty=Tensor[(1, 10, 10), float64] */;
  (%1052,)
}

def @func_15271(%var_15242: Tensor[(1200), uint16]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 16, 5), uint16], Tensor[(1200), uint16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  %1053 = @func_10653() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */;
  %1054 = @func_12138() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1055 = cast(%var_15242, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %1056 = cast(%var_15242, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %1057 = reshape(%1055, newshape=[15, 16, 5]) /* ty=Tensor[(15, 16, 5), uint16] */;
  %1058 = reshape(%1056, newshape=[15, 16, 5]) /* ty=Tensor[(15, 16, 5), uint16] */;
  %1059 = @func_10555(%1057, %1058) /* ty=(Tensor[(15, 16, 5), uint16],) */;
  %1060 = @func_6785() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %1061 = @func_8353() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %1062 = @func_12917() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1063 = @func_10043() /* ty=Tensor[(1, 10, 10), float64] */;
  %1064 = %1053.1;
  %1065 = %1054.0;
  %1066 = %1059.0;
  %1067 = %1060.1;
  %1068 = %1061.0;
  %1069 = %1062.0;
  (%1063, %1064, %1065, %1066, %var_15242, %1067, %1068, %1069)
}

def @func_17029(%var_16998: Tensor[(11, 10, 10), float64], %var_17006: Tensor[(165), int16]) -> (Tensor[(825), int16], Tensor[(11, 10, 10), bool], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) {
  %1070 = @func_15769() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) */;
  %1071 = @func_7047() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1072 = %1071.0;
  %1073 = cast(%1072, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %1074 = cast(%var_16998, dtype="bool") /* ty=Tensor[(11, 10, 10), bool] */;
  %1075 = cast(%var_17006, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1076 = %1070.3;
  %1077 = cast(%1076, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1078 = reshape(%1075, newshape=[11, 15]) /* ty=Tensor[(11, 15), int16] */;
  %1079 = reshape(%1077, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1080 = @func_7848(%1078, %1079) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(825), int16], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(80), float32], Tensor[(12, 4), float64]) */;
  %1081 = equal(%1073, %1074) /* ty=Tensor[(11, 10, 10), bool] */;
  %1082 = %1080.1;
  (%1076, %1081, %1082, %var_17006)
}

def @func_10043() -> Tensor[(1, 10, 10), float64] {
  %1083 = @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1083.0
}

def @func_14953() -> Tensor[(1, 10, 10), float64] {
  %1084 = @func_7047() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1084.0
}

def @func_10858(%var_10771: Tensor[(48), float64], %var_10783: Tensor[(165), int16], %var_10784: Tensor[(825), int16], %var_10814: Tensor[(320), float32], %var_10827: Tensor[(825), int16], %var_10851: Tensor[(8, 50), float64]) -> (Tensor[(12, 8, 7), float32], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), bool], Tensor[(320), float32], Tensor[(1, 10, 10), float32], Tensor[(825), int32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(8, 50), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(60, 10), float64]) {
  %1085 = @func_10702() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) */;
  %1086 = cast(%var_10771, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1087 = reshape(%1086, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %1088 = @func_32(%1087) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %1089 = cast(%var_10783, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1090 = cast(%var_10784, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1091 = reshape(%1089, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %1092 = reshape(%1090, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %1093 = @func_1835(%1091, %1092) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %1094 = @func_9844() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1095 = cast(%var_10814, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1096 = cast(%var_10783, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1097 = %1093.0;
  %1098 = cast(%1097, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %1099 = reshape(%1095, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %1100 = reshape(%1096, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %1101 = reshape(%1098, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %1102 = @func_8175(%1099, %1100, %1101) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(165), int16], Tensor[(15, 5, 11), bool], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %1103 = cast(%var_10827, dtype="int32") /* ty=Tensor[(825), int32] */;
  %1104 = shape_of(%var_10784, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1105 = cast(%var_10784, dtype="int32") /* ty=Tensor[(825), int32] */;
  %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1107 = cast(%var_10851, dtype="float64") /* ty=Tensor[(8, 50), float64] */;
  %1108 = cast(meta[relay.Constant][65] /* ty=Tensor[(280), uint64] */, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %1109 = cast(meta[relay.Constant][66] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %1110 = cast(meta[relay.Constant][67] /* ty=Tensor[(60, 10), float64] */, dtype="float64") /* ty=Tensor[(60, 10), float64] */;
  %1111 = reshape(%1107, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %1112 = reshape(%1108, newshape=[280]) /* ty=Tensor[(280), uint64] */;
  %1113 = reshape(%1109, newshape=[448, 1]) /* ty=Tensor[(448, 1), float32] */;
  %1114 = reshape(%1110, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %1115 = @func_7605(%1111, %1112, %1113, %1114) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64], Tensor[(4, 10, 10), int16], Tensor[(400), float64], Tensor[(12, 8, 7), float32], Tensor[(40, 2), float32], Tensor[(165), int16], Tensor[(280), uint64], Tensor[(448, 1), float32], Tensor[(165), int16], Tensor[(320), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(1, 10, 10), float64]) */;
  %1116 = %1085.0;
  %1117 = %1088.0;
  %1118 = %1094.0;
  %1119 = %1102.3;
  %1120 = @func_7928() /* ty=Tensor[(1, 10, 10), float32] */;
  %1121 = right_shift(%1105, %1106) /* ty=Tensor[(825), int32] */;
  %1122 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  %1123 = %1115.3;
  (%1116, %1117, %var_10771, %1097, %var_10783, %1118, %1119, %var_10814, %1120, %1121, %1122, %1123, %var_10851, meta[relay.Constant][65] /* ty=Tensor[(280), uint64] */, meta[relay.Constant][66] /* ty=Tensor[(448), float32] */, meta[relay.Constant][67] /* ty=Tensor[(60, 10), float64] */)
}

def @func_10429(%var_10405: Tensor[(165), int16]) -> (Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(275, 3), int16], Tensor[(300, 2), float64]) {
  %1124 = @func_9664() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(12, 8, 7), float32]) */;
  %1125 = cast(%var_10405, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1126 = cast(meta[relay.Constant][68] /* ty=Tensor[(275, 3), int16] */, dtype="int16") /* ty=Tensor[(275, 3), int16] */;
  %1127 = reshape(%1125, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %1128 = reshape(%1126, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %1129 = @func_1835(%1127, %1128) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %1130 = @func_8003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(300, 2), bool], Tensor[(600), float64]) */;
  %1131 = %1130.1;
  %1132 = cast(%1131, dtype="float32") /* ty=Tensor[(300, 2), float32] */;
  %1133 = cos(%1132) /* ty=Tensor[(300, 2), float32] */;
  %1134 = cast(%1131, dtype="bool") /* ty=Tensor[(300, 2), bool] */;
  %1135 = shape_of(%1133, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1136 = cast(%1133, dtype="bool") /* ty=Tensor[(300, 2), bool] */;
  %1137 = dyn.reshape(%1134, %1135, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1138 = logical_or(%1136, %1137) /* ty=Tensor[(300, 2), bool] */;
  %1139 = cast(%1138, dtype="float64") /* ty=Tensor[(300, 2), float64] */;
  %1140 = %1124.0;
  %1141 = %1129.0;
  %1142 = asin(%1139) /* ty=Tensor[(300, 2), float64] */;
  (%1140, %1141, %var_10405, meta[relay.Constant][68] /* ty=Tensor[(275, 3), int16] */, %1142)
}

def @func_16005(%var_15847: Tensor[(48), float64], %var_15974: Tensor[(825), int16], %var_15977: Tensor[(80), float64], %var_15978: Tensor[(165, 1), int16]) -> (Tensor[(7, 16, 6), float32], Tensor[(2, 4, 6), bool], Tensor[(600), float64], Tensor[(12, 4), float64], Tensor[(100), float64], Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(825), int16], Tensor[(15, 5, 11), int16], Tensor[(80), float64], Tensor[(165, 1), int16], Tensor[(48), float64], Tensor[(320), float32]) {
  %1143 = @func_15189() /* ty=(Tensor[(7, 16, 6), float32],) */;
  %1144 = cast(%var_15847, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1145 = reshape(%1144, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %1146 = @func_32(%1145) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %1147 = %1146.0;
  %1148 = cast(%var_15847, dtype="bool") /* ty=Tensor[(48), bool] */;
  %1149 = shape_of(%1147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1150 = cast(%1147, dtype="bool") /* ty=Tensor[(2, 4, 6), bool] */;
  %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1152 = @func_8003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(300, 2), bool], Tensor[(600), float64]) */;
  %1153 = cast(meta[relay.Constant][69] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %1154 = reshape(%1153, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float64] */;
  %1155 = @func_5004(%1154) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) */;
  %1156 = @func_13522() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1157 = cast(%var_15974, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1158 = reshape(%1157, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1159 = @func_11039(%1158) /* ty=(Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(80), float32], Tensor[(825), int16], Tensor[(48), float64], Tensor[(1, 10, 10), float64]) */;
  %1160 = cast(%var_15977, dtype="float64") /* ty=Tensor[(80), float64] */;
  %1161 = cast(%var_15974, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1162 = cast(%var_15978, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %1163 = reshape(%1160, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %1164 = reshape(%1161, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1165 = reshape(%1162, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %1166 = @func_7132(%1163, %1164, %1165) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(15, 5, 11), int16], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(?, 10, 10), uint32]) */;
  %1167 = %1155.2;
  %1168 = cast(%1167, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %1169 = cast(%var_15978, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %1170 = cast(meta[relay.Constant][70] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1171 = reshape(%1168, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1172 = reshape(%1169, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %1173 = reshape(%1170, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %1174 = @func_13846(%1171, %1172, %1173) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(448), float32], Tensor[(48), float64], Tensor[(165), int16], Tensor[(825), int16], Tensor[(320), float32], Tensor[(400), float64], Tensor[(1, 10, 10), float64]) */;
  %1175 = %1143.0;
  %1176 = less(%1150, %1151) /* ty=Tensor[(2, 4, 6), bool] */;
  %1177 = %1152.2;
  %1178 = @func_9689() /* ty=Tensor[(12, 8, 7), float32] */;
  %1179 = @func_7346() /* ty=Tensor[(1, 10, 10), float64] */;
  %1180 = %1156.0;
  %1181 = %1159.5;
  %1182 = %1166.1;
  %1183 = %1174.2;
  (%1175, %1176, %1177, %1167, meta[relay.Constant][69] /* ty=Tensor[(100), float64] */, %1178, %1179, %1180, %1181, %var_15974, %1182, %var_15977, %var_15978, %1183, meta[relay.Constant][70] /* ty=Tensor[(320), float32] */)
}

def @func_12073() -> (Tensor[(1, 10, 10), float64],) {
  %1184 = @func_10595() /* ty=(Tensor[(5, 9, 14), float32], Tensor[(1, 10, 10), float64]) */;
  %1185 = %1184.1;
  (%1185,)
}

def @func_14857() -> (Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32], Tensor[(?, 10, 10), bool]) {
  %1186 = @func_7392() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */;
  %1187 = @func_14345() /* ty=Tensor[(1, 10, 10), float64] */;
  %1188 = @func_14553() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1189 = %1188.0;
  %1190 = cast(%1189, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %1191 = shape_of(%1187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1192 = cast(%1187, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %1193 = dyn.reshape(%1190, %1191, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1194 = @func_7727() /* ty=Tensor[(1, 10, 10), float64] */;
  %1195 = %1186.1;
  %1196 = not_equal(%1192, %1193) /* ty=Tensor[(?, 10, 10), bool] */;
  (%1194, %1195, %1196)
}

def @func_15160(%var_15128: Tensor[(10, 7, 15), float32]) -> (Tensor[(10, 7, 15), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %1197 = cast(%var_15128, dtype="float32") /* ty=Tensor[(10, 7, 15), float32] */;
  %1198 = sigmoid(%1197) /* ty=Tensor[(10, 7, 15), float32] */;
  %1199 = @func_14648() /* ty=Tensor[(1, 10, 10), float64] */;
  %1200 = @func_14256() /* ty=Tensor[(1, 10, 10), float64] */;
  %1201 = @func_6571() /* ty=Tensor[(1, 10, 10), float64] */;
  (%1198, %1199, %1200, %1201)
}

def @func_17775(%var_17773: Tensor[(5, 165), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(5, 9, 4), float32], Tensor[(5, 165), int16]) {
  %1202 = @func_9910() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), int32]) */;
  %1203 = @func_9731() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %1204 = cast(%var_17773, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %1205 = reshape(%1204, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1206 = @func_11039(%1205) /* ty=(Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(80), float32], Tensor[(825), int16], Tensor[(48), float64], Tensor[(1, 10, 10), float64]) */;
  %1207 = %1202.1;
  %1208 = %1203.0;
  %1209 = %1206.0;
  (%1207, %1208, %1209, %var_17773)
}

def @func_7132(%var_7117: Tensor[(80), float64], %var_7118: Tensor[(825), int16], %var_7119: Tensor[(165), int16]) -> (Tensor[(12, 8, 7), float32], Tensor[(15, 5, 11), int16], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(?, 10, 10), uint32]) {
  %1210 = @func_6273() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) */;
  %1211 = cast(%var_7117, dtype="float64") /* ty=Tensor[(80), float64] */;
  %1212 = cast(%var_7118, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1213 = cast(%var_7119, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1214 = reshape(%1211, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), float64] */;
  %1215 = reshape(%1212, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1216 = reshape(%1213, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %1217 = @func_3152(%1214, %1215, %1216) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(825), int16], Tensor[(48), float64], Tensor[(10, 4, 2), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) */;
  %1218 = @func_5378() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1219 = %1218.0;
  %1220 = cast(%1219, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %1221 = acos(%1220) /* ty=Tensor[(1, 10, 10), float32] */;
  %1222 = cast(%1221, dtype="uint32") /* ty=Tensor[(1, 10, 10), uint32] */;
  %1223 = shape_of(%1219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1224 = cast(%1219, dtype="uint32") /* ty=Tensor[(1, 10, 10), uint32] */;
  %1225 = dyn.reshape(%1222, %1223, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1226 = %1210.0;
  %1227 = %1217.4;
  %1228 = bitwise_and(%1224, %1225) /* ty=Tensor[(?, 10, 10), uint32] */;
  (%1226, %1227, %var_7117, %var_7118, %var_7119, %1228)
}

def @func_4319(%var_4274: Tensor[(320), float32], %var_4288: Tensor[(5, 165), int16], %var_4315: Tensor[(1, 48), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(33, 5), int16], Tensor[(5, 165), bool], Tensor[(5, 165), bool], Tensor[(2, 4, 6), float64], Tensor[(1, 48), float64]) {
  %1229 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1230 = cast(%var_4274, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1231 = cast(meta[relay.Constant][71] /* ty=Tensor[(33, 5), int16] */, dtype="int16") /* ty=Tensor[(33, 5), int16] */;
  %1232 = cast(%var_4274, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1233 = reshape(%1230, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %1234 = reshape(%1231, newshape=[11, 15]) /* ty=Tensor[(11, 15), int16] */;
  %1235 = reshape(%1232, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %1236 = @func_3695(%1233, %1234, %1235) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) */;
  %1237 = %1236.2;
  %1238 = cast(%var_4288, dtype="bool") /* ty=Tensor[(5, 165), bool] */;
  %1239 = shape_of(%1237, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1240 = cast(%1237, dtype="bool") /* ty=Tensor[(5, 165), bool] */;
  %1241 = dyn.reshape(%1238, %1239, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1242 = cast(%1237, dtype="bool") /* ty=Tensor[(5, 165), bool] */;
  %1243 = shape_of(%var_4288, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1244 = cast(%var_4288, dtype="bool") /* ty=Tensor[(5, 165), bool] */;
  %1245 = dyn.reshape(%1242, %1243, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1246 = logical_or(%1244, %1245) /* ty=Tensor[(5, 165), bool] */;
  %1247 = cast(meta[relay.Constant][72] /* ty=Tensor[(5, 165), bool] */, dtype="bool") /* ty=Tensor[(5, 165), bool] */;
  %1248 = shape_of(%1246, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1249 = cast(%1246, dtype="bool") /* ty=Tensor[(5, 165), bool] */;
  %1250 = dyn.reshape(%1247, %1248, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1251 = cast(%var_4315, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %1252 = reshape(%1251, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %1253 = @func_32(%1252) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %1254 = %1229.0;
  %1255 = not_equal(%1240, %1241) /* ty=Tensor[(5, 165), bool] */;
  %1256 = greater_equal(%1249, %1250) /* ty=Tensor[(5, 165), bool] */;
  %1257 = %1253.0;
  (%1254, %var_4274, meta[relay.Constant][71] /* ty=Tensor[(33, 5), int16] */, %1255, %1256, %1257, %var_4315)
}

def @func_4479(%var_4343: Tensor[(14, 16, 2), float32], %var_4362: Tensor[(80), float64], %var_4363: Tensor[(825), int16], %var_4364: Tensor[(165), int16], %var_4413: Tensor[(14, 16, 2), float32]) -> (Tensor[(48), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(15, 5, 11), int16], Tensor[(14, 16, 2), bool], Tensor[(165, 1), int16], Tensor[(14, 16, 2), float64], Tensor[(1, 10, 10), float64]) {
  %1258 = cast(%var_4362, dtype="float64") /* ty=Tensor[(80), float64] */;
  %1259 = cast(%var_4363, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1260 = cast(%var_4364, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1261 = reshape(%1258, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), float64] */;
  %1262 = reshape(%1259, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1263 = reshape(%1260, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %1264 = @func_3152(%1261, %1262, %1263) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(825), int16], Tensor[(48), float64], Tensor[(10, 4, 2), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) */;
  %1265 = cast(%var_4364, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1266 = cast(%var_4363, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1267 = reshape(%1265, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %1268 = reshape(%1266, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %1269 = @func_1835(%1267, %1268) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %1270 = cast(%var_4343, dtype="float32") /* ty=Tensor[(14, 16, 2), float32] */;
  %1271 = sinh(%1270) /* ty=Tensor[(14, 16, 2), float32] */;
  %1272 = cast(%1271, dtype="float32") /* ty=Tensor[(14, 16, 2), float32] */;
  %1273 = sin(%1272) /* ty=Tensor[(14, 16, 2), float32] */;
  %1274 = cast(%var_4413, dtype="bool") /* ty=Tensor[(14, 16, 2), bool] */;
  %1275 = shape_of(%1273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1276 = cast(%1273, dtype="bool") /* ty=Tensor[(14, 16, 2), bool] */;
  %1277 = dyn.reshape(%1274, %1275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1278 = cast(%var_4362, dtype="float32") /* ty=Tensor[(80), float32] */;
  %1279 = cast(%var_4363, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1280 = %1264.2;
  %1281 = cast(%1280, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1282 = reshape(%1278, newshape=[1, 8, 10]) /* ty=Tensor[(1, 8, 10), float32] */;
  %1283 = reshape(%1279, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %1284 = reshape(%1281, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1285 = @func_2680(%1282, %1283, %1284) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */;
  %1286 = cast(%1273, dtype="float32") /* ty=Tensor[(14, 16, 2), float32] */;
  %1287 = atan(%1286) /* ty=Tensor[(14, 16, 2), float32] */;
  %1288 = cast(%1287, dtype="float64") /* ty=Tensor[(14, 16, 2), float64] */;
  %1289 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1290 = %1269.0;
  %1291 = greater_equal(%1276, %1277) /* ty=Tensor[(14, 16, 2), bool] */;
  %1292 = %1285.2;
  %1293 = atanh(%1288) /* ty=Tensor[(14, 16, 2), float64] */;
  %1294 = %1289.0;
  (%1280, %var_4362, %var_4363, %var_4364, %1290, %1291, %1292, %1293, %1294)
}

def @func_9275() -> (Tensor[(1, 10, 10), float64],) {
  %1295 = @func_8419() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1296 = %1295.0;
  (%1296,)
}

def @func_9475() -> (Tensor[(1, 10, 10), float32],) {
  %1297 = @func_7928() /* ty=Tensor[(1, 10, 10), float32] */;
  (%1297,)
}

def @func_14231() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %1298 = @func_13132() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(672), float32], Tensor[(1, 10, 10), float32], Tensor[(7, 16, 6), float32]) */;
  %1299 = %1298.0;
  %1300 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  %1301 = @func_6571() /* ty=Tensor[(1, 10, 10), float64] */;
  (%1299, %1300, %1301)
}

def @func_16303(%var_16298: Tensor[(300), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32], Tensor[(300), float32]) {
  %1302 = cast(%var_16298, dtype="float32") /* ty=Tensor[(300), float32] */;
  %1303 = reshape(%1302, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), float32] */;
  %1304 = @func_12807(%1303) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32]) */;
  %1305 = @func_6837() /* ty=Tensor[(1, 10, 10), float64] */;
  %1306 = %1304.2;
  (%1305, %1306, %var_16298)
}

def @func_18070(%var_18060: Tensor[(55, 15), int16]) -> (Tensor[(1, 10, 10), float32], Tensor[(2, 4, 6), float64], Tensor[(4, 20), float32], Tensor[(55, 15), int16], Tensor[(48), float64], Tensor[(1, 10, 10), float32]) {
  %1307 = @func_11558() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %1308 = cast(meta[relay.Constant][73] /* ty=Tensor[(4, 20), float32] */, dtype="float32") /* ty=Tensor[(4, 20), float32] */;
  %1309 = cast(%var_18060, dtype="int16") /* ty=Tensor[(55, 15), int16] */;
  %1310 = cast(meta[relay.Constant][74] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1311 = reshape(%1308, newshape=[1, 8, 10]) /* ty=Tensor[(1, 8, 10), float32] */;
  %1312 = reshape(%1309, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %1313 = reshape(%1310, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1314 = @func_2680(%1311, %1312, %1313) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */;
  %1315 = %1307.0;
  %1316 = %1314.4;
  %1317 = @func_13860() /* ty=Tensor[(1, 10, 10), float32] */;
  (%1315, %1316, meta[relay.Constant][73] /* ty=Tensor[(4, 20), float32] */, %var_18060, meta[relay.Constant][74] /* ty=Tensor[(48), float64] */, %1317)
}

def @func_6571() -> Tensor[(1, 10, 10), float64] {
  %1318 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1318.0
}

def @func_5544() -> Tensor[(1, 10, 10), float64] {
  @func_4628() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_5858(%var_5844: Tensor[(2, 1, 14), float64]) -> Tensor[(2, ?, 14), float64] {
  %1319 = cast(%var_5844, dtype="float64") /* ty=Tensor[(2, 1, 14), float64] */;
  %1320 = shape_of(meta[relay.Constant][75] /* ty=Tensor[(2, 1, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1321 = cast(meta[relay.Constant][75] /* ty=Tensor[(2, 1, 14), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 14), float64] */;
  %1322 = dyn.reshape(%1319, %1320, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%1321, %1322) /* ty=Tensor[(2, ?, 14), float64] */
}

def @func_12673(%var_12550: Tensor[(1500, 1), float64], %var_12623: Tensor[(5, 9, 4), float32], %var_12644: Tensor[(5, 9, 4), int64]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(165), int16], Tensor[(825), int16], Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(15, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32], Tensor[(15, 5, 11), int16], Tensor[(1500, 1300), float32], Tensor[(300, 2), bool], Tensor[(5, 9, 4), bool], Tensor[(1, 10, 10), float64]) {
  %1323 = @func_6596() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %1324 = @func_10595() /* ty=(Tensor[(5, 9, 14), float32], Tensor[(1, 10, 10), float64]) */;
  %1325 = cast(meta[relay.Constant][76] /* ty=Tensor[(165), int16] */, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1326 = cast(meta[relay.Constant][77] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1327 = reshape(%1325, newshape=[1, 165]) /* ty=Tensor[(1, 165), int16] */;
  %1328 = reshape(%1326, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1329 = @func_11821(%1327, %1328) /* ty=(Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16], Tensor[(165), int16], Tensor[(80), float64]) */;
  %1330 = @func_8353() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %1331 = @func_6596() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %1332 = cast(meta[relay.Constant][78] /* ty=Tensor[(1300), float64] */, dtype="float64") /* ty=Tensor[(1300), float64] */;
  %1333 = cast(%var_12550, dtype="float64") /* ty=Tensor[(1500, 1), float64] */;
  %1334 = reshape(%1332, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), float64] */;
  %1335 = reshape(%1333, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), float64] */;
  %1336 = @func_10978(%1334, %1335) /* ty=(Tensor[(13, 10, 10), uint64], Tensor[(15, 10, 10), float32], Tensor[(15, 10, 10), bool], Tensor[(15, 10, 10), uint32]) */;
  %1337 = @func_8419() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1338 = cast(meta[relay.Constant][76] /* ty=Tensor[(165), int16] */, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1339 = reshape(%1338, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %1340 = @func_10429(%1339) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(275, 3), int16], Tensor[(300, 2), float64]) */;
  %1341 = cast(meta[relay.Constant][78] /* ty=Tensor[(1300), float64] */, dtype="bool") /* ty=Tensor[(1300), bool] */;
  %1342 = cast(%var_12550, dtype="bool") /* ty=Tensor[(1500, 1), bool] */;
  %1343 = greater(%1341, %1342) /* ty=Tensor[(1500, 1300), bool] */;
  %1344 = cast(%1343, dtype="float32") /* ty=Tensor[(1500, 1300), float32] */;
  %1345 = @func_8003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(300, 2), bool], Tensor[(600), float64]) */;
  %1346 = %1329.0;
  %1347 = cast(%1346, dtype="float32") /* ty=Tensor[(5, 9, 4), float32] */;
  %1348 = reshape(%1347, newshape=[5, 9, 4]) /* ty=Tensor[(5, 9, 4), float32] */;
  %1349 = @func_8079(%1348) /* ty=(Tensor[(5, 9, 4), float32],) */;
  %1350 = %1349.0;
  %1351 = cast(%1350, dtype="float32") /* ty=Tensor[(5, 9, 4), float32] */;
  %1352 = rsqrt(%1351) /* ty=Tensor[(5, 9, 4), float32] */;
  %1353 = cast(%var_12623, dtype="int64") /* ty=Tensor[(5, 9, 4), int64] */;
  %1354 = shape_of(%1352, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1355 = cast(%1352, dtype="int64") /* ty=Tensor[(5, 9, 4), int64] */;
  %1356 = dyn.reshape(%1353, %1354, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1357 = maximum(%1355, %1356) /* ty=Tensor[(5, 9, 4), int64] */;
  %1358 = cast(%var_12644, dtype="bool") /* ty=Tensor[(5, 9, 4), bool] */;
  %1359 = shape_of(%1357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1360 = cast(%1357, dtype="bool") /* ty=Tensor[(5, 9, 4), bool] */;
  %1361 = dyn.reshape(%1358, %1359, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1362 = @func_9844() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1363 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %1364 = %1323.1;
  %1365 = %1324.1;
  %1366 = %1330.0;
  %1367 = %1331.0;
  %1368 = %1336.1;
  %1369 = %1337.0;
  %1370 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  %1371 = %1340.1;
  %1372 = log10(%1344) /* ty=Tensor[(1500, 1300), float32] */;
  %1373 = %1345.1;
  %1374 = greater(%1360, %1361) /* ty=Tensor[(5, 9, 4), bool] */;
  %1375 = %1362.0;
  (%1363, %1364, %1365, %1346, meta[relay.Constant][76] /* ty=Tensor[(165), int16] */, meta[relay.Constant][77] /* ty=Tensor[(825), int16] */, %1366, %1367, %1368, %1369, %1370, %1371, %1372, %1373, %1374, %1375)
}

def @func_6400() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  %1376 = @func_5267() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %1377 = %1376.2;
  %1378 = cast(%1377, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %1379 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1380 = sqrt(%1378) /* ty=Tensor[(1, 10, 10), float32] */;
  %1381 = %1379.0;
  (%1380, %1381)
}

def @func_16949() -> Tensor[(1, 10, 10), float64] {
  %1382 = @func_14087() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1382.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9974(%var_9934: Tensor[(12, 10, 10), float64], %var_9946: Tensor[(12, 10, 10), int16]) -> (Tensor[(12, 10, 10), uint8], Tensor[(12, 10, 10), float32], Tensor[(12, 8, 7), float32]) {
  %0 = @func_8310() /* ty=Tensor[(1, 10, 10), float64] */;
  %1 = cast(%0, dtype="int16") /* ty=Tensor[(1, 10, 10), int16] */;
  %2 = cast(%var_9934, dtype="int16") /* ty=Tensor[(12, 10, 10), int16] */;
  %3 = right_shift(%1, %2) /* ty=Tensor[(12, 10, 10), int16] */;
  %4 = cast(%var_9946, dtype="uint8") /* ty=Tensor[(12, 10, 10), uint8] */;
  %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%3, dtype="uint8") /* ty=Tensor[(12, 10, 10), uint8] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %8 = cast(%3, dtype="float32") /* ty=Tensor[(12, 10, 10), float32] */;
  %9 = @func_6273() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) */;
  %10 = logical_xor(%6, %7) /* ty=Tensor[(12, 10, 10), uint8] */;
  %11 = log10(%8) /* ty=Tensor[(12, 10, 10), float32] */;
  %12 = %9.0;
  (%10, %11, %12)
}

def @func_17840() -> (Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), bool], Tensor[(1, 10, 10), float32]) {
  @func_17838() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), bool], Tensor[(1, 10, 10), float32]) */
}

def @func_12075() -> (Tensor[(1, 10, 10), float64],) {
  @func_12073() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_12810(%var_12808: Tensor[(3, 10, 10), float32]) -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32]) {
  @func_12807(%var_12808) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32]) */
}

def @func_15189() -> (Tensor[(7, 16, 6), float32],) {
  %13 = @func_13132() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(672), float32], Tensor[(1, 10, 10), float32], Tensor[(7, 16, 6), float32]) */;
  %14 = %13.3;
  (%14,)
}

def @func_12673(%var_12550: Tensor[(1500, 1), float64], %var_12623: Tensor[(5, 9, 4), float32], %var_12644: Tensor[(5, 9, 4), int64]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(165), int16], Tensor[(825), int16], Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(15, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32], Tensor[(15, 5, 11), int16], Tensor[(1500, 1300), float32], Tensor[(300, 2), bool], Tensor[(5, 9, 4), bool], Tensor[(1, 10, 10), float64]) {
  %15 = @func_6596() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %16 = @func_10595() /* ty=(Tensor[(5, 9, 14), float32], Tensor[(1, 10, 10), float64]) */;
  %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(165), int16] */, dtype="int16") /* ty=Tensor[(165), int16] */;
  %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %19 = reshape(%17, newshape=[1, 165]) /* ty=Tensor[(1, 165), int16] */;
  %20 = reshape(%18, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %21 = @func_11821(%19, %20) /* ty=(Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16], Tensor[(165), int16], Tensor[(80), float64]) */;
  %22 = @func_8353() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %23 = @func_6596() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(1300), float64] */, dtype="float64") /* ty=Tensor[(1300), float64] */;
  %25 = cast(%var_12550, dtype="float64") /* ty=Tensor[(1500, 1), float64] */;
  %26 = reshape(%24, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), float64] */;
  %27 = reshape(%25, newshape=[15, 10, 10]) /* ty=Tensor[(15, 10, 10), float64] */;
  %28 = @func_10978(%26, %27) /* ty=(Tensor[(13, 10, 10), uint64], Tensor[(15, 10, 10), float32], Tensor[(15, 10, 10), bool], Tensor[(15, 10, 10), uint32]) */;
  %29 = @func_8419() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %30 = cast(meta[relay.Constant][0] /* ty=Tensor[(165), int16] */, dtype="int16") /* ty=Tensor[(165), int16] */;
  %31 = reshape(%30, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %32 = @func_10429(%31) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(275, 3), int16], Tensor[(300, 2), float64]) */;
  %33 = cast(meta[relay.Constant][2] /* ty=Tensor[(1300), float64] */, dtype="bool") /* ty=Tensor[(1300), bool] */;
  %34 = cast(%var_12550, dtype="bool") /* ty=Tensor[(1500, 1), bool] */;
  %35 = greater(%33, %34) /* ty=Tensor[(1500, 1300), bool] */;
  %36 = cast(%35, dtype="float32") /* ty=Tensor[(1500, 1300), float32] */;
  %37 = @func_8003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(300, 2), bool], Tensor[(600), float64]) */;
  %38 = %21.0;
  %39 = cast(%38, dtype="float32") /* ty=Tensor[(5, 9, 4), float32] */;
  %40 = reshape(%39, newshape=[5, 9, 4]) /* ty=Tensor[(5, 9, 4), float32] */;
  %41 = @func_8079(%40) /* ty=(Tensor[(5, 9, 4), float32],) */;
  %42 = %41.0;
  %43 = cast(%42, dtype="float32") /* ty=Tensor[(5, 9, 4), float32] */;
  %44 = rsqrt(%43) /* ty=Tensor[(5, 9, 4), float32] */;
  %45 = cast(%var_12623, dtype="int64") /* ty=Tensor[(5, 9, 4), int64] */;
  %46 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %47 = cast(%44, dtype="int64") /* ty=Tensor[(5, 9, 4), int64] */;
  %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %49 = maximum(%47, %48) /* ty=Tensor[(5, 9, 4), int64] */;
  %50 = cast(%var_12644, dtype="bool") /* ty=Tensor[(5, 9, 4), bool] */;
  %51 = shape_of(%49, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%49, dtype="bool") /* ty=Tensor[(5, 9, 4), bool] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %54 = @func_9844() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %55 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %56 = %15.1;
  %57 = %16.1;
  %58 = %22.0;
  %59 = %23.0;
  %60 = %28.1;
  %61 = %29.0;
  %62 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  %63 = %32.1;
  %64 = log10(%36) /* ty=Tensor[(1500, 1300), float32] */;
  %65 = %37.1;
  %66 = greater(%52, %53) /* ty=Tensor[(5, 9, 4), bool] */;
  %67 = %54.0;
  (%55, %56, %57, %38, meta[relay.Constant][0] /* ty=Tensor[(165), int16] */, meta[relay.Constant][1] /* ty=Tensor[(825), int16] */, %58, %59, %60, %61, %62, %63, %64, %65, %66, %67)
}

def @func_7661() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  @func_7659() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_8050() -> (Tensor[(1, 10, 10), float32],) {
  %68 = @func_6400() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %69 = %68.0;
  (%69,)
}

def @func_7346() -> Tensor[(1, 10, 10), float64] {
  %70 = @func_7003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %70.0
}

def @func_6597() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %73 = fn () -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
    %71 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
    %72 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
    (%71, %72)
  };
  %73() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_16412() -> Tensor[(1, 10, 10), float32] {
  %75 = fn () -> Tensor[(1, 10, 10), float32] {
    %74 = @func_6400() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
    %74.0
  };
  %75() /* ty=Tensor[(1, 10, 10), float32] */
}

def @func_5546() -> Tensor[(1, 10, 10), float64] {
  @func_5544() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_13523() -> (Tensor[(1, 10, 10), float64],) {
  %78 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %76 = @func_8763() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, ?, 14), float64], Tensor[(28), float64], Tensor[(?, 10, 10), uint16]) */;
    %77 = %76.0;
    (%77,)
  };
  %78() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_9691() -> Tensor[(12, 8, 7), float32] {
  @func_9689() /* ty=Tensor[(12, 8, 7), float32] */
}

def @func_8081(%var_8080: Tensor[(5, 9, 4), float32]) -> (Tensor[(5, 9, 4), float32],) {
  %81 = fn (%var_8074: Tensor[(5, 9, 4), float32]) -> (Tensor[(5, 9, 4), float32],) {
    %79 = cast(%var_8074, dtype="float32") /* ty=Tensor[(5, 9, 4), float32] */;
    %80 = log10(%79) /* ty=Tensor[(5, 9, 4), float32] */;
    (%80,)
  };
  %81(%var_8080) /* ty=(Tensor[(5, 9, 4), float32],) */
}

def @func_10541(%var_10492: Tensor[(672), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(7, 16, 6), float32], Tensor[(672), float32], Tensor[(1, 10, 10), float64]) {
  %82 = @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %83 = cast(%var_10492, dtype="float32") /* ty=Tensor[(672), float32] */;
  %84 = reshape(%83, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float32] */;
  %85 = @func_10373(%84) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %86 = @func_5180() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %87 = %82.0;
  %88 = %85.0;
  %89 = %86.0;
  (%87, %88, %var_10492, %89)
}

def @func_7097() -> (Tensor[(1, 10, 10), float64],) {
  %90 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %91 = %90.0;
  (%91,)
}

def @func_12481(%var_12434: Tensor[(448), float32], %var_12436: Tensor[(825), int16], %var_12437: Tensor[(165), int16], %var_12446: Tensor[(1200), uint16]) -> (Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), float64], Tensor[(448), float32], Tensor[(80), float64], Tensor[(165), int16], Tensor[(15, 16, 5), uint16], Tensor[(1200), uint16], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), bool], Tensor[(320), float32], Tensor[(165, 825), bool], Tensor[(1, 10, 10), float64]) {
  %92 = @func_7659() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %93 = @func_11558() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %94 = %93.0;
  %95 = @func_9731() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %96 = %95.0;
  %97 = cast(%96, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
  %98 = shape_of(%94, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%94, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %101 = cast(%var_12446, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %102 = cast(%var_12446, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
  %103 = reshape(%101, newshape=[15, 16, 5]) /* ty=Tensor[(15, 16, 5), uint16] */;
  %104 = reshape(%102, newshape=[15, 16, 5]) /* ty=Tensor[(15, 16, 5), uint16] */;
  %105 = @func_10555(%103, %104) /* ty=(Tensor[(15, 16, 5), uint16],) */;
  %106 = @func_10473() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %107 = cast(meta[relay.Constant][4] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %108 = cast(%var_12434, dtype="float32") /* ty=Tensor[(448), float32] */;
  %109 = cast(meta[relay.Constant][3] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %110 = cast(%var_12436, dtype="int16") /* ty=Tensor[(825), int16] */;
  %111 = cast(%var_12437, dtype="int16") /* ty=Tensor[(165), int16] */;
  %112 = cast(%var_12434, dtype="float32") /* ty=Tensor[(448), float32] */;
  %113 = reshape(%108, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %114 = reshape(%109, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %115 = reshape(%110, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %116 = reshape(%111, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %117 = reshape(%112, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %118 = @func_4479(%113, %114, %115, %116, %117) /* ty=(Tensor[(48), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(15, 5, 11), int16], Tensor[(14, 16, 2), bool], Tensor[(165, 1), int16], Tensor[(14, 16, 2), float64], Tensor[(1, 10, 10), float64]) */;
  %119 = %118.6;
  %120 = cast(%119, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %121 = cast(%var_12436, dtype="int16") /* ty=Tensor[(825), int16] */;
  %122 = reshape(%107, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %123 = reshape(%120, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %124 = reshape(%121, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %125 = @func_8175(%122, %123, %124) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(165), int16], Tensor[(15, 5, 11), bool], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %126 = cast(%119, dtype="bool") /* ty=Tensor[(165, 1), bool] */;
  %127 = cast(%var_12436, dtype="bool") /* ty=Tensor[(825), bool] */;
  %128 = @func_5378() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %129 = %92.1;
  %130 = mod(%99, %100) /* ty=Tensor[(?, 10, 10), float64] */;
  %131 = %105.0;
  %132 = %106.1;
  %133 = %125.3;
  %134 = less_equal(%126, %127) /* ty=Tensor[(165, 825), bool] */;
  %135 = %128.0;
  (%129, %130, %var_12434, meta[relay.Constant][3] /* ty=Tensor[(80), float64] */, %var_12437, %131, %var_12446, %132, %133, meta[relay.Constant][4] /* ty=Tensor[(320), float32] */, %134, %135)
}

def @func_7728() -> Tensor[(1, 10, 10), float64] {
  %136 = fn () -> Tensor[(1, 10, 10), float64] {
    @func_5544() /* ty=Tensor[(1, 10, 10), float64] */
  };
  %136() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_5379() -> (Tensor[(1, 10, 10), float64],) {
  %138 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %137 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
    (%137,)
  };
  %138() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_6837() -> Tensor[(1, 10, 10), float64] {
  @func_4628() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_13694() -> (Tensor[(1, 10, 10), float64],) {
  @func_13692() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_15771() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) {
  @func_15769() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) */
}

def @func_13566() -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) {
  %139 = @func_13385() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */;
  %140 = %139.1;
  %141 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  (%140, %141)
}

def @func_17390(%var_17388: Tensor[(13, 15, 11), uint32], %var_17389: Tensor[(13, 15, 11), uint32]) -> (Tensor[(13, 15, 11), bool], Tensor[(1, 10, 10), float64]) {
  @func_17386(%var_17388, %var_17389) /* ty=(Tensor[(13, 15, 11), bool], Tensor[(1, 10, 10), float64]) */
}

def @func_8343() -> Tensor[(1, 10, 10), float64] {
  @func_7727() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_16011(%var_16007: Tensor[(48), float64], %var_16008: Tensor[(825), int16], %var_16009: Tensor[(80), float64], %var_16010: Tensor[(165, 1), int16]) -> (Tensor[(7, 16, 6), float32], Tensor[(2, 4, 6), bool], Tensor[(600), float64], Tensor[(12, 4), float64], Tensor[(100), float64], Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(825), int16], Tensor[(15, 5, 11), int16], Tensor[(80), float64], Tensor[(165, 1), int16], Tensor[(48), float64], Tensor[(320), float32]) {
  @func_16005(%var_16007, %var_16008, %var_16009, %var_16010) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(2, 4, 6), bool], Tensor[(600), float64], Tensor[(12, 4), float64], Tensor[(100), float64], Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(825), int16], Tensor[(15, 5, 11), int16], Tensor[(80), float64], Tensor[(165, 1), int16], Tensor[(48), float64], Tensor[(320), float32]) */
}

def @func_6163() -> (Tensor[(1, 10, 10), float64],) {
  %143 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %142 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
    (%142,)
  };
  %143() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_4770(%var_4760: Tensor[(6, 10, 10), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(24, 2), float64], Tensor[(6, 10, 10), bool], Tensor[(825, 320), float64]) {
  %144 = cast(meta[relay.Constant][5] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %145 = cast(meta[relay.Constant][6] /* ty=Tensor[(825, 1), int16] */, dtype="int16") /* ty=Tensor[(825, 1), int16] */;
  %146 = cast(meta[relay.Constant][7] /* ty=Tensor[(24, 2), float64] */, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
  %147 = reshape(%144, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %148 = reshape(%145, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %149 = reshape(%146, newshape=[1, 48]) /* ty=Tensor[(1, 48), float64] */;
  %150 = @func_4319(%147, %148, %149) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(33, 5), int16], Tensor[(5, 165), bool], Tensor[(5, 165), bool], Tensor[(2, 4, 6), float64], Tensor[(1, 48), float64]) */;
  %151 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %152 = cast(%151, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %153 = cast(%var_4760, dtype="bool") /* ty=Tensor[(6, 10, 10), bool] */;
  %154 = cast(meta[relay.Constant][6] /* ty=Tensor[(825, 1), int16] */, dtype="float64") /* ty=Tensor[(825, 1), float64] */;
  %155 = atan(%154) /* ty=Tensor[(825, 1), float64] */;
  %156 = cast(%155, dtype="float64") /* ty=Tensor[(825, 1), float64] */;
  %157 = cast(meta[relay.Constant][5] /* ty=Tensor[(320), float32] */, dtype="float64") /* ty=Tensor[(320), float64] */;
  %158 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  %159 = %150.4;
  %160 = less(%152, %153) /* ty=Tensor[(6, 10, 10), bool] */;
  %161 = mod(%156, %157) /* ty=Tensor[(825, 320), float64] */;
  (%158, %159, meta[relay.Constant][7] /* ty=Tensor[(24, 2), float64] */, %160, %161)
}

def @func_11311() -> Tensor[(1, 10, 10), float64] {
  @func_11309() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_12807(%var_12801: Tensor[(3, 10, 10), float32]) -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32]) {
  %162 = @func_7047() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %163 = @func_8353() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %164 = %163.0;
  %165 = cast(%164, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %166 = cast(%var_12801, dtype="float32") /* ty=Tensor[(3, 10, 10), float32] */;
  %167 = @func_10159() /* ty=Tensor[(1, 10, 10), float32] */;
  %168 = %162.0;
  %169 = mod(%165, %166) /* ty=Tensor[(3, 10, 10), float32] */;
  (%167, %168, %169)
}

def @func_7659() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  %170 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  %171 = cast(%170, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %172 = log(%171) /* ty=Tensor[(1, 10, 10), float32] */;
  %173 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  (%172, %173)
}

def @func_9390() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  %174 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %175 = @func_5378() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %176 = %174.0;
  %177 = %175.0;
  (%176, %177)
}

def @func_5561() -> (Tensor[(1, 10, 10), float64],) {
  @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_2680(%var_2634: Tensor[(1, 8, 10), float32], %var_2645: Tensor[(5, 165), int16], %var_2648: Tensor[(48), float64]) -> (Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) {
  %178 = cast(%var_2634, dtype="float32") /* ty=Tensor[(1, 8, 10), float32] */;
  %179 = cast(meta[relay.Constant][8] /* ty=Tensor[(165, 1), int16] */, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %180 = cast(%var_2645, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %181 = reshape(%179, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %182 = reshape(%180, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %183 = @func_1835(%181, %182) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %184 = cast(%var_2648, dtype="float64") /* ty=Tensor[(48), float64] */;
  %185 = reshape(%184, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %186 = @func_32(%185) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %187 = cast(meta[relay.Constant][8] /* ty=Tensor[(165, 1), int16] */, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %188 = cast(%var_2645, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %189 = reshape(%187, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %190 = reshape(%188, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %191 = @func_1835(%189, %190) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %192 = cast(meta[relay.Constant][8] /* ty=Tensor[(165, 1), int16] */, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %193 = %183.0;
  %194 = cast(%193, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %195 = reshape(%192, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %196 = reshape(%194, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %197 = @func_1835(%195, %196) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %198 = cast(meta[relay.Constant][8] /* ty=Tensor[(165, 1), int16] */, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %199 = cast(%var_2645, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %200 = reshape(%198, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %201 = reshape(%199, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %202 = @func_1835(%200, %201) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %203 = cast(meta[relay.Constant][8] /* ty=Tensor[(165, 1), int16] */, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %204 = %197.0;
  %205 = cast(%204, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %206 = reshape(%203, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %207 = reshape(%205, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %208 = @func_1835(%206, %207) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %209 = atan(%178) /* ty=Tensor[(1, 8, 10), float32] */;
  %210 = %186.0;
  %211 = %191.0;
  %212 = %202.0;
  %213 = %208.0;
  (%209, %193, meta[relay.Constant][8] /* ty=Tensor[(165, 1), int16] */, %var_2645, %210, %var_2648, %211, %204, %212, %213)
}

def @func_14857() -> (Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32], Tensor[(?, 10, 10), bool]) {
  %214 = @func_7392() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */;
  %215 = @func_14345() /* ty=Tensor[(1, 10, 10), float64] */;
  %216 = @func_14553() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %217 = %216.0;
  %218 = cast(%217, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %219 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%215, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %222 = @func_7727() /* ty=Tensor[(1, 10, 10), float64] */;
  %223 = %214.1;
  %224 = not_equal(%220, %221) /* ty=Tensor[(?, 10, 10), bool] */;
  (%222, %223, %224)
}

def @func_10858(%var_10771: Tensor[(48), float64], %var_10783: Tensor[(165), int16], %var_10784: Tensor[(825), int16], %var_10814: Tensor[(320), float32], %var_10827: Tensor[(825), int16], %var_10851: Tensor[(8, 50), float64]) -> (Tensor[(12, 8, 7), float32], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), bool], Tensor[(320), float32], Tensor[(1, 10, 10), float32], Tensor[(825), int32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(8, 50), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(60, 10), float64]) {
  %225 = @func_10702() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) */;
  %226 = cast(%var_10771, dtype="float64") /* ty=Tensor[(48), float64] */;
  %227 = reshape(%226, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %228 = @func_32(%227) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %229 = cast(%var_10783, dtype="int16") /* ty=Tensor[(165), int16] */;
  %230 = cast(%var_10784, dtype="int16") /* ty=Tensor[(825), int16] */;
  %231 = reshape(%229, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %232 = reshape(%230, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %233 = @func_1835(%231, %232) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %234 = @func_9844() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %235 = cast(%var_10814, dtype="float32") /* ty=Tensor[(320), float32] */;
  %236 = cast(%var_10783, dtype="int16") /* ty=Tensor[(165), int16] */;
  %237 = %233.0;
  %238 = cast(%237, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %239 = reshape(%235, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %240 = reshape(%236, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %241 = reshape(%238, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %242 = @func_8175(%239, %240, %241) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(165), int16], Tensor[(15, 5, 11), bool], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %243 = cast(%var_10827, dtype="int32") /* ty=Tensor[(825), int32] */;
  %244 = shape_of(%var_10784, dtype="int32") /* ty=Tensor[(1), int32] */;
  %245 = cast(%var_10784, dtype="int32") /* ty=Tensor[(825), int32] */;
  %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?), int32] */;
  %247 = cast(%var_10851, dtype="float64") /* ty=Tensor[(8, 50), float64] */;
  %248 = cast(meta[relay.Constant][9] /* ty=Tensor[(280), uint64] */, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %249 = cast(meta[relay.Constant][10] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %250 = cast(meta[relay.Constant][11] /* ty=Tensor[(60, 10), float64] */, dtype="float64") /* ty=Tensor[(60, 10), float64] */;
  %251 = reshape(%247, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %252 = reshape(%248, newshape=[280]) /* ty=Tensor[(280), uint64] */;
  %253 = reshape(%249, newshape=[448, 1]) /* ty=Tensor[(448, 1), float32] */;
  %254 = reshape(%250, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %255 = @func_7605(%251, %252, %253, %254) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64], Tensor[(4, 10, 10), int16], Tensor[(400), float64], Tensor[(12, 8, 7), float32], Tensor[(40, 2), float32], Tensor[(165), int16], Tensor[(280), uint64], Tensor[(448, 1), float32], Tensor[(165), int16], Tensor[(320), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(1, 10, 10), float64]) */;
  %256 = %225.0;
  %257 = %228.0;
  %258 = %234.0;
  %259 = %242.3;
  %260 = @func_7928() /* ty=Tensor[(1, 10, 10), float32] */;
  %261 = right_shift(%245, %246) /* ty=Tensor[(825), int32] */;
  %262 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  %263 = %255.3;
  (%256, %257, %var_10771, %237, %var_10783, %258, %259, %var_10814, %260, %261, %262, %263, %var_10851, meta[relay.Constant][9] /* ty=Tensor[(280), uint64] */, meta[relay.Constant][10] /* ty=Tensor[(448), float32] */, meta[relay.Constant][11] /* ty=Tensor[(60, 10), float64] */)
}

def @func_13133() -> (Tensor[(1, 10, 10), float64], Tensor[(672), float32], Tensor[(1, 10, 10), float32], Tensor[(7, 16, 6), float32]) {
  %276 = fn () -> (Tensor[(1, 10, 10), float64], Tensor[(672), float32], Tensor[(1, 10, 10), float32], Tensor[(7, 16, 6), float32]) {
    %264 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %265 = @func_11253() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */;
    %266 = cast(meta[relay.Constant][12] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %267 = reshape(%266, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float32] */;
    %268 = @func_10373(%267) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
    %269 = %268.0;
    %270 = cast(%269, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
    %271 = erf(%270) /* ty=Tensor[(7, 16, 6), float64] */;
    %272 = cast(%271, dtype="float32") /* ty=Tensor[(7, 16, 6), float32] */;
    %273 = %264.0;
    %274 = %265.1;
    %275 = log(%272) /* ty=Tensor[(7, 16, 6), float32] */;
    (%273, meta[relay.Constant][12] /* ty=Tensor[(672), float32] */, %274, %275)
  };
  %276() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(672), float32], Tensor[(1, 10, 10), float32], Tensor[(7, 16, 6), float32]) */
}

def @func_13568() -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) {
  @func_13566() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_14553() -> (Tensor[(1, 10, 10), float64],) {
  %277 = @func_6571() /* ty=Tensor[(1, 10, 10), float64] */;
  (%277,)
}

def @func_7318(%var_7316: Tensor[(80), float64], %var_7317: Tensor[(825), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) {
  @func_7314(%var_7316, %var_7317) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) */
}

def @func_11254() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) {
  %281 = fn () -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) {
    %278 = @func_8883() /* ty=(Tensor[(1, 10, 10), float32],) */;
    %279 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
    %280 = %278.0;
    (%279, %280)
  };
  %281() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */
}

def @func_7611(%var_7607: Tensor[(400), float64], %var_7608: Tensor[(280), uint64], %var_7609: Tensor[(448, 1), float32], %var_7610: Tensor[(600), float64]) -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64], Tensor[(4, 10, 10), int16], Tensor[(400), float64], Tensor[(12, 8, 7), float32], Tensor[(40, 2), float32], Tensor[(165), int16], Tensor[(280), uint64], Tensor[(448, 1), float32], Tensor[(165), int16], Tensor[(320), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(1, 10, 10), float64]) {
  @func_7605(%var_7607, %var_7608, %var_7609, %var_7610) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64], Tensor[(4, 10, 10), int16], Tensor[(400), float64], Tensor[(12, 8, 7), float32], Tensor[(40, 2), float32], Tensor[(165), int16], Tensor[(280), uint64], Tensor[(448, 1), float32], Tensor[(165), int16], Tensor[(320), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_8651() -> Tensor[(1, 10, 10), float64] {
  %282 = fn () -> Tensor[(1, 10, 10), float64] {
    @func_6738() /* ty=Tensor[(1, 10, 10), float64] */
  };
  %282() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_10376(%var_10374: Tensor[(7, 16, 6), float32]) -> (Tensor[(7, 16, 6), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  @func_10373(%var_10374) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_9392() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  @func_9390() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_11309() -> Tensor[(1, 10, 10), float64] {
  @func_5577() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_15358() -> Tensor[(1, 10, 10), float64] {
  %283 = fn () -> Tensor[(1, 10, 10), float64] {
    @func_10043() /* ty=Tensor[(1, 10, 10), float64] */
  };
  %283() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_16281() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %288 = fn () -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
    %284 = @func_13439() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %285 = @func_10473() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
    %286 = %284.0;
    %287 = %285.1;
    (%286, %287)
  };
  %288() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_6402() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  @func_6400() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_16005(%var_15847: Tensor[(48), float64], %var_15974: Tensor[(825), int16], %var_15977: Tensor[(80), float64], %var_15978: Tensor[(165, 1), int16]) -> (Tensor[(7, 16, 6), float32], Tensor[(2, 4, 6), bool], Tensor[(600), float64], Tensor[(12, 4), float64], Tensor[(100), float64], Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(825), int16], Tensor[(15, 5, 11), int16], Tensor[(80), float64], Tensor[(165, 1), int16], Tensor[(48), float64], Tensor[(320), float32]) {
  %289 = @func_15189() /* ty=(Tensor[(7, 16, 6), float32],) */;
  %290 = cast(%var_15847, dtype="float64") /* ty=Tensor[(48), float64] */;
  %291 = reshape(%290, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %292 = @func_32(%291) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %293 = %292.0;
  %294 = cast(%var_15847, dtype="bool") /* ty=Tensor[(48), bool] */;
  %295 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%293, dtype="bool") /* ty=Tensor[(2, 4, 6), bool] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %298 = @func_8003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(300, 2), bool], Tensor[(600), float64]) */;
  %299 = cast(meta[relay.Constant][13] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %300 = reshape(%299, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float64] */;
  %301 = @func_5004(%300) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) */;
  %302 = @func_13522() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %303 = cast(%var_15974, dtype="int16") /* ty=Tensor[(825), int16] */;
  %304 = reshape(%303, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %305 = @func_11039(%304) /* ty=(Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(80), float32], Tensor[(825), int16], Tensor[(48), float64], Tensor[(1, 10, 10), float64]) */;
  %306 = cast(%var_15977, dtype="float64") /* ty=Tensor[(80), float64] */;
  %307 = cast(%var_15974, dtype="int16") /* ty=Tensor[(825), int16] */;
  %308 = cast(%var_15978, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %309 = reshape(%306, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %310 = reshape(%307, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %311 = reshape(%308, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %312 = @func_7132(%309, %310, %311) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(15, 5, 11), int16], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(?, 10, 10), uint32]) */;
  %313 = %301.2;
  %314 = cast(%313, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %315 = cast(%var_15978, dtype="int16") /* ty=Tensor[(165, 1), int16] */;
  %316 = cast(meta[relay.Constant][14] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %317 = reshape(%314, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %318 = reshape(%315, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %319 = reshape(%316, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %320 = @func_13846(%317, %318, %319) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(448), float32], Tensor[(48), float64], Tensor[(165), int16], Tensor[(825), int16], Tensor[(320), float32], Tensor[(400), float64], Tensor[(1, 10, 10), float64]) */;
  %321 = %289.0;
  %322 = less(%296, %297) /* ty=Tensor[(2, 4, 6), bool] */;
  %323 = %298.2;
  %324 = @func_9689() /* ty=Tensor[(12, 8, 7), float32] */;
  %325 = @func_7346() /* ty=Tensor[(1, 10, 10), float64] */;
  %326 = %302.0;
  %327 = %305.5;
  %328 = %312.1;
  %329 = %320.2;
  (%321, %322, %323, %313, meta[relay.Constant][13] /* ty=Tensor[(100), float64] */, %324, %325, %326, %327, %var_15974, %328, %var_15977, %var_15978, %329, meta[relay.Constant][14] /* ty=Tensor[(320), float32] */)
}

def @func_18129() -> Tensor[(12, 8, 7), float32] {
  @func_14050() /* ty=Tensor[(12, 8, 7), float32] */
}

def @func_9664() -> (Tensor[(1, 10, 10), float32], Tensor[(12, 8, 7), float32]) {
  %330 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %331 = @func_7392() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */;
  %332 = %330.0;
  %333 = %331.1;
  (%332, %333)
}

def @func_5577() -> Tensor[(1, 10, 10), float64] {
  @func_4522() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_11149(%var_11147: Tensor[(6, 10, 10), float64]) -> (Tensor[(6, 10, 10), int64], Tensor[(4, 10, 10), int16], Tensor[(400), float64]) {
  @func_11146(%var_11147) /* ty=(Tensor[(6, 10, 10), int64], Tensor[(4, 10, 10), int16], Tensor[(400), float64]) */
}

def @func_5471(%var_5469: Tensor[(80), float64], %var_5470: Tensor[(825), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), float64]) {
  %352 = fn (%var_5431: Tensor[(80), float64], %var_5432: Tensor[(825), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), float64]) {
    %334 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %335 = cast(%var_5431, dtype="float64") /* ty=Tensor[(80), float64] */;
    %336 = cast(%var_5432, dtype="int16") /* ty=Tensor[(825), int16] */;
    %337 = cast(meta[relay.Constant][15] /* ty=Tensor[(165), int16] */, dtype="int16") /* ty=Tensor[(165), int16] */;
    %338 = reshape(%335, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), float64] */;
    %339 = reshape(%336, newshape=[825]) /* ty=Tensor[(825), int16] */;
    %340 = reshape(%337, newshape=[165]) /* ty=Tensor[(165), int16] */;
    %341 = @func_3152(%338, %339, %340) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(825), int16], Tensor[(48), float64], Tensor[(10, 4, 2), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) */;
    %342 = %341.0;
    %343 = cast(%var_5432, dtype="float64") /* ty=Tensor[(825), float64] */;
    %344 = shape_of(%342, dtype="int32") /* ty=Tensor[(3), int32] */;
    %345 = cast(%342, dtype="float64") /* ty=Tensor[(15, 5, 11), float64] */;
    %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %347 = %334.0;
    %348 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
    %349 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
    %350 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
    %351 = power(%345, %346) /* ty=Tensor[(15, 5, 11), float64] */;
    (%347, %348, %var_5431, meta[relay.Constant][15] /* ty=Tensor[(165), int16] */, %349, %350, %351)
  };
  %352(%var_5469, %var_5470) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), float64]) */
}

def @func_6273() -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) {
  %353 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  %354 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  (%353, %354)
}

def @func_11824(%var_11822: Tensor[(1, 165), int16], %var_11823: Tensor[(825), int16]) -> (Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16], Tensor[(165), int16], Tensor[(80), float64]) {
  %373 = fn (%var_11805: Tensor[(1, 165), int16], %var_11806: Tensor[(825), int16]) -> (Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16], Tensor[(165), int16], Tensor[(80), float64]) {
    %355 = @func_9321() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(180), float32]) */;
    %356 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %357 = @func_7659() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
    %358 = cast(%var_11805, dtype="int16") /* ty=Tensor[(1, 165), int16] */;
    %359 = cast(%var_11806, dtype="int16") /* ty=Tensor[(825), int16] */;
    %360 = reshape(%358, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
    %361 = reshape(%359, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
    %362 = @func_1835(%360, %361) /* ty=(Tensor[(15, 5, 11), int16],) */;
    %363 = cast(meta[relay.Constant][16] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %364 = cast(%var_11806, dtype="int16") /* ty=Tensor[(825), int16] */;
    %365 = reshape(%363, newshape=[80]) /* ty=Tensor[(80), float64] */;
    %366 = reshape(%364, newshape=[825]) /* ty=Tensor[(825), int16] */;
    %367 = @func_5468(%365, %366) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), float64]) */;
    %368 = %355.1;
    %369 = %356.0;
    %370 = %357.0;
    %371 = %362.0;
    %372 = %367.3;
    (%368, %369, %370, %371, %var_11805, %var_11806, %372, meta[relay.Constant][16] /* ty=Tensor[(80), float64] */)
  };
  %373(%var_11822, %var_11823) /* ty=(Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16], Tensor[(165), int16], Tensor[(80), float64]) */
}

def @func_7348() -> Tensor[(1, 10, 10), float64] {
  @func_7346() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_7257() -> (Tensor[(1, 10, 10), float64],) {
  %374 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
  (%374,)
}

def @func_9911() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), int32]) {
  %387 = fn () -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), int32]) {
    %375 = @func_8353() /* ty=(Tensor[(1, 10, 10), float32],) */;
    %376 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %377 = %376.0;
    %378 = @func_6785() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
    %379 = %378.0;
    %380 = cast(%379, dtype="int32") /* ty=Tensor[(1, 10, 10), int32] */;
    %381 = shape_of(%377, dtype="int32") /* ty=Tensor[(3), int32] */;
    %382 = cast(%377, dtype="int32") /* ty=Tensor[(1, 10, 10), int32] */;
    %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %384 = %375.0;
    %385 = @func_8343() /* ty=Tensor[(1, 10, 10), float64] */;
    %386 = add(%382, %383) /* ty=Tensor[(?, 10, 10), int32] */;
    (%384, %385, %386)
  };
  %387() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), int32]) */
}

def @func_6764() -> (Tensor[(1, 10, 10), float64],) {
  @func_6762() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_8955() -> (Tensor[(1, 10, 10), float64],) {
  %388 = @func_6596() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %389 = %388.1;
  (%389,)
}

def @func_14051() -> Tensor[(12, 8, 7), float32] {
  %390 = fn () -> Tensor[(12, 8, 7), float32] {
    @func_5023() /* ty=Tensor[(12, 8, 7), float32] */
  };
  %390() /* ty=Tensor[(12, 8, 7), float32] */
}

def @func_9050(%var_9049: Tensor[(7, 5, 7), float64]) -> Tensor[(7, 5, 7), float64] {
  %392 = fn (%var_9014: Tensor[(7, 5, 7), float64]) -> Tensor[(7, 5, 7), float64] {
    %391 = cast(%var_9014, dtype="float64") /* ty=Tensor[(7, 5, 7), float64] */;
    tan(%391) /* ty=Tensor[(7, 5, 7), float64] */
  };
  %392(%var_9049) /* ty=Tensor[(7, 5, 7), float64] */
}

def @func_12678(%var_12675: Tensor[(1500, 1), float64], %var_12676: Tensor[(5, 9, 4), float32], %var_12677: Tensor[(5, 9, 4), int64]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(165), int16], Tensor[(825), int16], Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(15, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32], Tensor[(15, 5, 11), int16], Tensor[(1500, 1300), float32], Tensor[(300, 2), bool], Tensor[(5, 9, 4), bool], Tensor[(1, 10, 10), float64]) {
  @func_12673(%var_12675, %var_12676, %var_12677) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(165), int16], Tensor[(825), int16], Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(15, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32], Tensor[(15, 5, 11), int16], Tensor[(1500, 1300), float32], Tensor[(300, 2), bool], Tensor[(5, 9, 4), bool], Tensor[(1, 10, 10), float64]) */
}

def @func_14138() -> (Tensor[(1, 10, 10), float64],) {
  %395 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %393 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %394 = %393.0;
    (%394,)
  };
  %395() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_2685(%var_2682: Tensor[(1, 8, 10), float32], %var_2683: Tensor[(5, 165), int16], %var_2684: Tensor[(48), float64]) -> (Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) {
  @func_2680(%var_2682, %var_2683, %var_2684) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */
}

def @func_7132(%var_7117: Tensor[(80), float64], %var_7118: Tensor[(825), int16], %var_7119: Tensor[(165), int16]) -> (Tensor[(12, 8, 7), float32], Tensor[(15, 5, 11), int16], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(?, 10, 10), uint32]) {
  %396 = @func_6273() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) */;
  %397 = cast(%var_7117, dtype="float64") /* ty=Tensor[(80), float64] */;
  %398 = cast(%var_7118, dtype="int16") /* ty=Tensor[(825), int16] */;
  %399 = cast(%var_7119, dtype="int16") /* ty=Tensor[(165), int16] */;
  %400 = reshape(%397, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), float64] */;
  %401 = reshape(%398, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %402 = reshape(%399, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %403 = @func_3152(%400, %401, %402) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(825), int16], Tensor[(48), float64], Tensor[(10, 4, 2), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) */;
  %404 = @func_5378() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %405 = %404.0;
  %406 = cast(%405, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %407 = acos(%406) /* ty=Tensor[(1, 10, 10), float32] */;
  %408 = cast(%407, dtype="uint32") /* ty=Tensor[(1, 10, 10), uint32] */;
  %409 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%405, dtype="uint32") /* ty=Tensor[(1, 10, 10), uint32] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %412 = %396.0;
  %413 = %403.4;
  %414 = bitwise_and(%410, %411) /* ty=Tensor[(?, 10, 10), uint32] */;
  (%412, %413, %var_7117, %var_7118, %var_7119, %414)
}

def @func_7852(%var_7850: Tensor[(11, 15), int16], %var_7851: Tensor[(825), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(825), int16], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(80), float32], Tensor[(12, 4), float64]) {
  @func_7848(%var_7850, %var_7851) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(825), int16], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(80), float32], Tensor[(12, 4), float64]) */
}

def @func_14089() -> (Tensor[(1, 10, 10), float64],) {
  @func_14087() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_14619() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  @func_14617() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_8311() -> Tensor[(1, 10, 10), float64] {
  %416 = fn () -> Tensor[(1, 10, 10), float64] {
    %415 = @func_6596() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
    %415.1
  };
  %416() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_6739() -> Tensor[(1, 10, 10), float64] {
  %418 = fn () -> Tensor[(1, 10, 10), float64] {
    %417 = @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %417.0
  };
  %418() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_4773(%var_4771: Tensor[(6, 10, 10), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(24, 2), float64], Tensor[(6, 10, 10), bool], Tensor[(825, 320), float64]) {
  @func_4770(%var_4771) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(24, 2), float64], Tensor[(6, 10, 10), bool], Tensor[(825, 320), float64]) */
}

def @func_12331(%var_12330: Tensor[(6, 13, 11), float64]) -> Tensor[(6, 13, 11), bool] {
  %425 = fn (%var_12320: Tensor[(6, 13, 11), float64]) -> Tensor[(6, 13, 11), bool] {
    %419 = cast(%var_12320, dtype="float64") /* ty=Tensor[(6, 13, 11), float64] */;
    %420 = sigmoid(%419) /* ty=Tensor[(6, 13, 11), float64] */;
    %421 = cast(%var_12320, dtype="bool") /* ty=Tensor[(6, 13, 11), bool] */;
    %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(3), int32] */;
    %423 = cast(%420, dtype="bool") /* ty=Tensor[(6, 13, 11), bool] */;
    %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%423, %424) /* ty=Tensor[(6, 13, 11), bool] */
  };
  %425(%var_12330) /* ty=Tensor[(6, 13, 11), bool] */
}

def @func_11670() -> (Tensor[(1, 10, 10), float32],) {
  %426 = @func_8883() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %427 = %426.0;
  (%427,)
}

def @func_14954() -> Tensor[(1, 10, 10), float64] {
  %429 = fn () -> Tensor[(1, 10, 10), float64] {
    %428 = @func_7047() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %428.0
  };
  %429() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_5796() -> (Tensor[(1, 10, 10), float64],) {
  %430 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  (%430,)
}

def @func_11892(%var_11891: Tensor[(10, 10, 10), float32]) -> (Tensor[(10, 10, 10), bool], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %440 = fn (%var_11839: Tensor[(10, 10, 10), float32]) -> (Tensor[(10, 10, 10), bool], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
    %431 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
    %432 = %431.0;
    %433 = cast(%432, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
    %434 = cast(%var_11839, dtype="bool") /* ty=Tensor[(10, 10, 10), bool] */;
    %435 = @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %436 = @func_9720() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %437 = greater(%433, %434) /* ty=Tensor[(10, 10, 10), bool] */;
    %438 = %435.0;
    %439 = %436.0;
    (%437, %438, %439)
  };
  %440(%var_11891) /* ty=(Tensor[(10, 10, 10), bool], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_15393() -> Tensor[(1, 10, 10), float64] {
  %442 = fn () -> Tensor[(1, 10, 10), float64] {
    %441 = @func_5378() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %441.0
  };
  %442() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_14087() -> (Tensor[(1, 10, 10), float64],) {
  %443 = @func_12917() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %444 = %443.0;
  (%444,)
}

def @func_10655() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) {
  @func_10653() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */
}

def @func_14884() -> (Tensor[(1, 10, 10), float64],) {
  %445 = @func_12138() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %446 = %445.0;
  (%446,)
}

def @func_5268() -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %451 = fn () -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
    %447 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %448 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
    %449 = %447.0;
    %450 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
    (%448, %449, %450)
  };
  %451() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_17668() -> (Tensor[(1, 10, 10), float64],) {
  %454 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %452 = @func_13385() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */;
    %453 = %452.0;
    (%453,)
  };
  %454() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @main(%var_18189: Tensor[(13, 5, 3), float32]) -> (Tensor[(13, 5, 3), float32],) {
  %455 = cast(%var_18189, dtype="float32") /* ty=Tensor[(13, 5, 3), float32] */;
  %456 = rsqrt(%455) /* ty=Tensor[(13, 5, 3), float32] */;
  (%456,)
}

def @func_16240(%var_16211: Tensor[(250, 2), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(5, 10, 10), float32], Tensor[(250, 2), float64], Tensor[(1, 10, 10), float64]) {
  %457 = cast(%var_16211, dtype="float64") /* ty=Tensor[(250, 2), float64] */;
  %458 = reshape(%457, newshape=[5, 10, 10]) /* ty=Tensor[(5, 10, 10), float64] */;
  %459 = @func_15392() /* ty=Tensor[(1, 10, 10), float64] */;
  %460 = @func_14701(%458) /* ty=Tensor[(5, 10, 10), float32] */;
  %461 = @func_6837() /* ty=Tensor[(1, 10, 10), float64] */;
  (%459, %460, %var_16211, %461)
}

def @func_17914() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %465 = fn () -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
    %462 = @func_14884() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %463 = @func_17286() /* ty=Tensor[(1, 10, 10), float64] */;
    %464 = %462.0;
    (%463, %464)
  };
  %465() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_16617() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 165), int16], Tensor[(825), int16]) {
  @func_16615() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 165), int16], Tensor[(825), int16]) */
}

def @func_9978(%var_9976: Tensor[(12, 10, 10), float64], %var_9977: Tensor[(12, 10, 10), int16]) -> (Tensor[(12, 10, 10), uint8], Tensor[(12, 10, 10), float32], Tensor[(12, 8, 7), float32]) {
  @func_9974(%var_9976, %var_9977) /* ty=(Tensor[(12, 10, 10), uint8], Tensor[(12, 10, 10), float32], Tensor[(12, 8, 7), float32]) */
}

def @func_12073() -> (Tensor[(1, 10, 10), float64],) {
  %466 = @func_10595() /* ty=(Tensor[(5, 9, 14), float32], Tensor[(1, 10, 10), float64]) */;
  %467 = %466.1;
  (%467,)
}

def @func_13692() -> (Tensor[(1, 10, 10), float64],) {
  %468 = @func_8310() /* ty=Tensor[(1, 10, 10), float64] */;
  (%468,)
}

def @func_8355() -> (Tensor[(1, 10, 10), float32],) {
  @func_8353() /* ty=(Tensor[(1, 10, 10), float32],) */
}

def @func_6275() -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) {
  @func_6273() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_5544() -> Tensor[(1, 10, 10), float64] {
  @func_4628() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_16305(%var_16304: Tensor[(300), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32], Tensor[(300), float32]) {
  %474 = fn (%var_16298: Tensor[(300), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32], Tensor[(300), float32]) {
    %469 = cast(%var_16298, dtype="float32") /* ty=Tensor[(300), float32] */;
    %470 = reshape(%469, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), float32] */;
    %471 = @func_12807(%470) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32]) */;
    %472 = @func_6837() /* ty=Tensor[(1, 10, 10), float64] */;
    %473 = %471.2;
    (%472, %473, %var_16298)
  };
  %474(%var_16304) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32], Tensor[(300), float32]) */
}

def @func_17288() -> Tensor[(1, 10, 10), float64] {
  @func_17286() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_13737() -> Tensor[(14, 1, 11), float32] {
  @func_13735() /* ty=Tensor[(14, 1, 11), float32] */
}

def @func_14650() -> Tensor[(1, 10, 10), float64] {
  @func_14648() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_14859() -> (Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32], Tensor[(?, 10, 10), bool]) {
  @func_14857() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32], Tensor[(?, 10, 10), bool]) */
}

def @func_8052() -> (Tensor[(1, 10, 10), float32],) {
  @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */
}

def @func_17950() -> (Tensor[(1, 10, 10), float32],) {
  %477 = fn () -> (Tensor[(1, 10, 10), float32],) {
    %475 = @func_11253() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */;
    %476 = %475.1;
    (%476,)
  };
  %477() /* ty=(Tensor[(1, 10, 10), float32],) */
}

def @func_8413(%var_8412: Tensor[(15, 10, 10), float64]) -> (Tensor[(12, 8, 7), float32], Tensor[(15, 10, 10), int8]) {
  %483 = fn (%var_8403: Tensor[(15, 10, 10), float64]) -> (Tensor[(12, 8, 7), float32], Tensor[(15, 10, 10), int8]) {
    %478 = @func_7727() /* ty=Tensor[(1, 10, 10), float64] */;
    %479 = cast(%478, dtype="int8") /* ty=Tensor[(1, 10, 10), int8] */;
    %480 = cast(%var_8403, dtype="int8") /* ty=Tensor[(15, 10, 10), int8] */;
    %481 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
    %482 = bitwise_or(%479, %480) /* ty=Tensor[(15, 10, 10), int8] */;
    (%481, %482)
  };
  %483(%var_8412) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(15, 10, 10), int8]) */
}

def @func_8420() -> (Tensor[(1, 10, 10), float64],) {
  %486 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %484 = @func_7659() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
    %485 = %484.1;
    (%485,)
  };
  %486() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_32(%var_20: Tensor[(2, 4, 6), float64]) -> (Tensor[(2, 4, 6), float64],) {
  %487 = cast(%var_20, dtype="float64") /* ty=Tensor[(2, 4, 6), float64] */;
  %488 = sqrt(%487) /* ty=Tensor[(2, 4, 6), float64] */;
  (%488,)
}

def @func_4228() -> (Tensor[(1, 10, 10), float64],) {
  %491 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %489 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 10, 10), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
    %490 = sigmoid(%489) /* ty=Tensor[(1, 10, 10), float64] */;
    (%490,)
  };
  %491() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_3695(%var_3600: Tensor[(5, 4, 16), float32], %var_3616: Tensor[(11, 15), int16], %var_3622: Tensor[(5, 4, 16), float32]) -> (Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) {
  %492 = cast(%var_3616, dtype="int16") /* ty=Tensor[(11, 15), int16] */;
  %493 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 165), int16] */, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %494 = reshape(%492, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %495 = reshape(%493, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %496 = @func_1835(%494, %495) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %497 = cast(meta[relay.Constant][19] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %498 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 165), int16] */, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %499 = cast(meta[relay.Constant][20] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %500 = reshape(%497, newshape=[1, 8, 10]) /* ty=Tensor[(1, 8, 10), float32] */;
  %501 = reshape(%498, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %502 = reshape(%499, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %503 = @func_2680(%500, %501, %502) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */;
  %504 = cast(meta[relay.Constant][19] /* ty=Tensor[(80), float32] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %505 = %496.0;
  %506 = cast(%505, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %507 = cast(%var_3616, dtype="int16") /* ty=Tensor[(11, 15), int16] */;
  %508 = reshape(%504, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), float64] */;
  %509 = reshape(%506, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %510 = reshape(%507, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %511 = @func_3152(%508, %509, %510) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(825), int16], Tensor[(48), float64], Tensor[(10, 4, 2), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) */;
  %512 = cast(meta[relay.Constant][20] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %513 = reshape(%512, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %514 = @func_32(%513) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %515 = cast(%var_3600, dtype="float32") /* ty=Tensor[(5, 4, 16), float32] */;
  %516 = log(%515) /* ty=Tensor[(5, 4, 16), float32] */;
  %517 = cast(%var_3622, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %518 = shape_of(%516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%516, dtype="bool") /* ty=Tensor[(5, 4, 16), bool] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %521 = logical_or(%519, %520) /* ty=Tensor[(5, 4, 16), bool] */;
  %522 = cast(%521, dtype="uint8") /* ty=Tensor[(5, 4, 16), uint8] */;
  %523 = shape_of(%var_3600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %524 = cast(%var_3600, dtype="uint8") /* ty=Tensor[(5, 4, 16), uint8] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %526 = %503.2;
  %527 = %511.1;
  %528 = %514.0;
  %529 = right_shift(%524, %525) /* ty=Tensor[(5, 4, 16), uint8] */;
  (%505, %var_3616, meta[relay.Constant][18] /* ty=Tensor[(5, 165), int16] */, %526, meta[relay.Constant][19] /* ty=Tensor[(80), float32] */, meta[relay.Constant][20] /* ty=Tensor[(48), float64] */, %527, %528, %529)
}

def @func_14472(%var_14468: Tensor[(400), float64], %var_14469: Tensor[(280), uint64], %var_14470: Tensor[(165), int16], %var_14471: Tensor[(2, 160), float32]) -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(400), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(600), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(4, 10, 10), int16], Tensor[(2, 160), float32], Tensor[(1, 10, 10), float64]) {
  @func_14466(%var_14468, %var_14469, %var_14470, %var_14471) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(400), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(600), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(4, 10, 10), int16], Tensor[(2, 160), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_12138() -> (Tensor[(1, 10, 10), float64],) {
  %530 = @func_5180() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %531 = %530.0;
  (%531,)
}

def @func_8910() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  @func_8908() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_12140() -> (Tensor[(1, 10, 10), float64],) {
  @func_12138() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_12300(%var_12299: Tensor[(5, 16, 7), int8]) -> (Tensor[(5, 16, 7), bool],) {
  %537 = fn (%var_12286: Tensor[(5, 16, 7), int8]) -> (Tensor[(5, 16, 7), bool],) {
    %532 = cast(%var_12286, dtype="bool") /* ty=Tensor[(5, 16, 7), bool] */;
    %533 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(5, 16, 7), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %534 = cast(meta[relay.Constant][21] /* ty=Tensor[(5, 16, 7), int8] */, dtype="bool") /* ty=Tensor[(5, 16, 7), bool] */;
    %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %536 = not_equal(%534, %535) /* ty=Tensor[(5, 16, 7), bool] */;
    (%536,)
  };
  %537(%var_12299) /* ty=(Tensor[(5, 16, 7), bool],) */
}

def @func_4524() -> Tensor[(1, 10, 10), float64] {
  @func_4522() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_35(%var_33: Tensor[(2, 4, 6), float64]) -> (Tensor[(2, 4, 6), float64],) {
  @func_32(%var_33) /* ty=(Tensor[(2, 4, 6), float64],) */
}

def @func_9845() -> (Tensor[(1, 10, 10), float64],) {
  %540 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %538 = @func_9511() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %539 = %538.0;
    (%539,)
  };
  %540() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_17082(%var_17080: Tensor[(200), float64], %var_17081: Tensor[(825), int16]) -> (Tensor[(12, 8, 7), float32], Tensor[(55, 15), int16], Tensor[(200), float64], Tensor[(1, 10, 10), float64], Tensor[(825), float64]) {
  @func_17078(%var_17080, %var_17081) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(55, 15), int16], Tensor[(200), float64], Tensor[(1, 10, 10), float64], Tensor[(825), float64]) */
}

def @func_16661(%var_16660: Tensor[(672), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(7, 16, 6), float32], Tensor[(672), float32], Tensor[(1, 10, 10), float64]) {
  %549 = fn (%var_16654: Tensor[(672), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(7, 16, 6), float32], Tensor[(672), float32], Tensor[(1, 10, 10), float64]) {
    %541 = @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %542 = cast(%var_16654, dtype="float32") /* ty=Tensor[(672), float32] */;
    %543 = reshape(%542, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float32] */;
    %544 = @func_10373(%543) /* ty=(Tensor[(7, 16, 6), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
    %545 = @func_7003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
    %546 = %541.0;
    %547 = %544.0;
    %548 = %545.1;
    (%546, %547, %var_16654, %548)
  };
  %549(%var_16660) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(7, 16, 6), float32], Tensor[(672), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_14704(%var_14702: Tensor[(5, 10, 10), float64]) -> Tensor[(5, 10, 10), float32] {
  @func_14701(%var_14702) /* ty=Tensor[(5, 10, 10), float32] */
}

def @func_13861() -> Tensor[(1, 10, 10), float32] {
  %551 = fn () -> Tensor[(1, 10, 10), float32] {
    %550 = @func_8883() /* ty=(Tensor[(1, 10, 10), float32],) */;
    %550.0
  };
  %551() /* ty=Tensor[(1, 10, 10), float32] */
}

def @func_7848(%var_7818: Tensor[(11, 15), int16], %var_7819: Tensor[(825), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(825), int16], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(80), float32], Tensor[(12, 4), float64]) {
  %552 = cast(%var_7818, dtype="int16") /* ty=Tensor[(11, 15), int16] */;
  %553 = cast(%var_7819, dtype="int16") /* ty=Tensor[(825), int16] */;
  %554 = reshape(%552, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %555 = reshape(%553, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %556 = @func_1835(%554, %555) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %557 = @func_7659() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %558 = cast(meta[relay.Constant][22] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %559 = %556.0;
  %560 = cast(%559, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %561 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %562 = reshape(%558, newshape=[1, 8, 10]) /* ty=Tensor[(1, 8, 10), float32] */;
  %563 = reshape(%560, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %564 = reshape(%561, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %565 = @func_2680(%562, %563, %564) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */;
  %566 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  %567 = %557.0;
  %568 = %565.7;
  (%566, %559, %var_7818, %var_7819, %567, %568, meta[relay.Constant][22] /* ty=Tensor[(80), float32] */, meta[relay.Constant][23] /* ty=Tensor[(12, 4), float64] */)
}

def @func_6571() -> Tensor[(1, 10, 10), float64] {
  %569 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %569.0
}

def @func_4319(%var_4274: Tensor[(320), float32], %var_4288: Tensor[(5, 165), int16], %var_4315: Tensor[(1, 48), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(33, 5), int16], Tensor[(5, 165), bool], Tensor[(5, 165), bool], Tensor[(2, 4, 6), float64], Tensor[(1, 48), float64]) {
  %570 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %571 = cast(%var_4274, dtype="float32") /* ty=Tensor[(320), float32] */;
  %572 = cast(meta[relay.Constant][24] /* ty=Tensor[(33, 5), int16] */, dtype="int16") /* ty=Tensor[(33, 5), int16] */;
  %573 = cast(%var_4274, dtype="float32") /* ty=Tensor[(320), float32] */;
  %574 = reshape(%571, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %575 = reshape(%572, newshape=[11, 15]) /* ty=Tensor[(11, 15), int16] */;
  %576 = reshape(%573, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %577 = @func_3695(%574, %575, %576) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) */;
  %578 = %577.2;
  %579 = cast(%var_4288, dtype="bool") /* ty=Tensor[(5, 165), bool] */;
  %580 = shape_of(%578, dtype="int32") /* ty=Tensor[(2), int32] */;
  %581 = cast(%578, dtype="bool") /* ty=Tensor[(5, 165), bool] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %583 = cast(%578, dtype="bool") /* ty=Tensor[(5, 165), bool] */;
  %584 = shape_of(%var_4288, dtype="int32") /* ty=Tensor[(2), int32] */;
  %585 = cast(%var_4288, dtype="bool") /* ty=Tensor[(5, 165), bool] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %587 = logical_or(%585, %586) /* ty=Tensor[(5, 165), bool] */;
  %588 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 165), bool] */, dtype="bool") /* ty=Tensor[(5, 165), bool] */;
  %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(2), int32] */;
  %590 = cast(%587, dtype="bool") /* ty=Tensor[(5, 165), bool] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %592 = cast(%var_4315, dtype="float64") /* ty=Tensor[(1, 48), float64] */;
  %593 = reshape(%592, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %594 = @func_32(%593) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %595 = %570.0;
  %596 = not_equal(%581, %582) /* ty=Tensor[(5, 165), bool] */;
  %597 = greater_equal(%590, %591) /* ty=Tensor[(5, 165), bool] */;
  %598 = %594.0;
  (%595, %var_4274, meta[relay.Constant][24] /* ty=Tensor[(33, 5), int16] */, %596, %597, %598, %var_4315)
}

def @func_9347() -> (Tensor[(1, 10, 10), float64],) {
  %603 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %599 = @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %600 = %599.0;
    %601 = cast(%600, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
    %602 = cos(%601) /* ty=Tensor[(1, 10, 10), float64] */;
    (%602,)
  };
  %603() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_6047(%var_6043: Tensor[(100), float64], %var_6044: Tensor[(600), float64], %var_6045: Tensor[(165), int16], %var_6046: Tensor[(825), int16]) -> (Tensor[(12, 8, 7), float32], Tensor[(2, 4, 6), float64], Tensor[(100), float64], Tensor[(1, 10, 10), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(825), bool], Tensor[(15, 5, 11), bool], Tensor[(15, 5, 11), int16]) {
  %649 = fn (%var_5882: Tensor[(100), float64], %var_5933: Tensor[(600), float64], %var_5963: Tensor[(165), int16], %var_5964: Tensor[(825), int16]) -> (Tensor[(12, 8, 7), float32], Tensor[(2, 4, 6), float64], Tensor[(100), float64], Tensor[(1, 10, 10), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(825), bool], Tensor[(15, 5, 11), bool], Tensor[(15, 5, 11), int16]) {
    %604 = cast(%var_5882, dtype="float64") /* ty=Tensor[(100), float64] */;
    %605 = reshape(%604, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float64] */;
    %606 = @func_5004(%605) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) */;
    %607 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
    %608 = cast(%607, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
    %609 = reshape(%608, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float64] */;
    %610 = @func_5004(%609) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) */;
    %611 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %612 = cast(%var_5882, dtype="float64") /* ty=Tensor[(100), float64] */;
    %613 = reshape(%612, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float64] */;
    %614 = @func_5004(%613) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) */;
    %615 = cast(%var_5933, dtype="float64") /* ty=Tensor[(600), float64] */;
    %616 = reshape(%615, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float64] */;
    %617 = @func_4770(%616) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(24, 2), float64], Tensor[(6, 10, 10), bool], Tensor[(825, 320), float64]) */;
    %618 = cast(%var_5963, dtype="int16") /* ty=Tensor[(165), int16] */;
    %619 = cast(%var_5964, dtype="int16") /* ty=Tensor[(825), int16] */;
    %620 = reshape(%618, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
    %621 = reshape(%619, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
    %622 = @func_1835(%620, %621) /* ty=(Tensor[(15, 5, 11), int16],) */;
    %623 = %622.0;
    %624 = cast(%623, dtype="bool") /* ty=Tensor[(15, 5, 11), bool] */;
    %625 = shape_of(%var_5964, dtype="int32") /* ty=Tensor[(1), int32] */;
    %626 = cast(%var_5964, dtype="bool") /* ty=Tensor[(825), bool] */;
    %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?), bool] */;
    %628 = cast(%var_5964, dtype="bool") /* ty=Tensor[(825), bool] */;
    %629 = shape_of(%623, dtype="int32") /* ty=Tensor[(3), int32] */;
    %630 = cast(%623, dtype="bool") /* ty=Tensor[(15, 5, 11), bool] */;
    %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %632 = cast(%var_5963, dtype="int16") /* ty=Tensor[(165), int16] */;
    %633 = equal(%630, %631) /* ty=Tensor[(15, 5, 11), bool] */;
    %634 = cast(%633, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
    %635 = reshape(%632, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
    %636 = reshape(%634, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
    %637 = @func_1835(%635, %636) /* ty=(Tensor[(15, 5, 11), int16],) */;
    %638 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
    %639 = %606.1;
    %640 = %610.2;
    %641 = %611.0;
    %642 = %614.2;
    %643 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
    %644 = %617.3;
    %645 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
    %646 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
    %647 = equal(%626, %627) /* ty=Tensor[(825), bool] */;
    %648 = %637.0;
    (%638, %639, %var_5882, %607, %640, %641, %642, %643, %644, %var_5933, %var_5963, %645, %646, %647, %633, %648)
  };
  %649(%var_6043, %var_6044, %var_6045, %var_6046) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(2, 4, 6), float64], Tensor[(100), float64], Tensor[(1, 10, 10), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(825), bool], Tensor[(15, 5, 11), bool], Tensor[(15, 5, 11), int16]) */
}

def @func_8353() -> (Tensor[(1, 10, 10), float32],) {
  %650 = @func_6400() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %651 = %650.0;
  (%651,)
}

def @func_14701(%var_14684: Tensor[(5, 10, 10), float64]) -> Tensor[(5, 10, 10), float32] {
  %652 = @func_9275() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %653 = %652.0;
  %654 = cast(%653, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %655 = cast(%var_14684, dtype="float32") /* ty=Tensor[(5, 10, 10), float32] */;
  power(%654, %655) /* ty=Tensor[(5, 10, 10), float32] */
}

def @func_6786() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %660 = fn () -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
    %656 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %657 = @func_5378() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %658 = %656.0;
    %659 = %657.0;
    (%658, %659)
  };
  %660() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_11411() -> Tensor[(1, 10, 10), float64] {
  %661 = fn () -> Tensor[(1, 10, 10), float64] {
    @func_5544() /* ty=Tensor[(1, 10, 10), float64] */
  };
  %661() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_5007(%var_5005: Tensor[(1, 10, 10), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) {
  @func_5004(%var_5005) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) */
}

def @func_9731() -> (Tensor[(1, 10, 10), float32],) {
  %662 = @func_9664() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(12, 8, 7), float32]) */;
  %663 = %662.0;
  (%663,)
}

def @func_11506() -> (Tensor[(1, 10, 10), float64],) {
  %664 = @func_6596() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %665 = %664.1;
  (%665,)
}

def @func_10159() -> Tensor[(1, 10, 10), float32] {
  %666 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %666.0
}

def @func_18073(%var_18071: Tensor[(55, 15), int16]) -> (Tensor[(1, 10, 10), float32], Tensor[(2, 4, 6), float64], Tensor[(4, 20), float32], Tensor[(55, 15), int16], Tensor[(48), float64], Tensor[(1, 10, 10), float32]) {
  @func_18070(%var_18071) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(2, 4, 6), float64], Tensor[(4, 20), float32], Tensor[(55, 15), int16], Tensor[(48), float64], Tensor[(1, 10, 10), float32]) */
}

def @func_15460() -> Tensor[(1, 10, 10), float64] {
  @func_15458() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_9109() -> (Tensor[(1, 10, 10), float64],) {
  %667 = @func_5180() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %668 = %667.0;
  (%668,)
}

def @func_12031() -> (Tensor[(1, 10, 10), float64],) {
  @func_12029() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_10161() -> Tensor[(1, 10, 10), float32] {
  @func_10159() /* ty=Tensor[(1, 10, 10), float32] */
}

def @func_5024() -> Tensor[(12, 8, 7), float32] {
  %670 = fn () -> Tensor[(12, 8, 7), float32] {
    %669 = cast(meta[relay.Constant][26] /* ty=Tensor[(12, 8, 7), float32] */, dtype="float32") /* ty=Tensor[(12, 8, 7), float32] */;
    log10(%669) /* ty=Tensor[(12, 8, 7), float32] */
  };
  %670() /* ty=Tensor[(12, 8, 7), float32] */
}

def @func_10702() -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) {
  %671 = @func_9346() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %672 = @func_9689() /* ty=Tensor[(12, 8, 7), float32] */;
  %673 = %671.0;
  (%672, %673)
}

def @func_6400() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  %674 = @func_5267() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %675 = %674.2;
  %676 = cast(%675, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
  %677 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %678 = sqrt(%676) /* ty=Tensor[(1, 10, 10), float32] */;
  %679 = %677.0;
  (%678, %679)
}

def @func_8885() -> (Tensor[(1, 10, 10), float32],) {
  @func_8883() /* ty=(Tensor[(1, 10, 10), float32],) */
}

def @func_9689() -> Tensor[(12, 8, 7), float32] {
  %680 = @func_5267() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %680.0
}

def @func_13468(%var_13467: Tensor[(10, 10, 10), float32]) -> Tensor[(10, 10, 10), uint32] {
  %685 = fn (%var_13461: Tensor[(10, 10, 10), float32]) -> Tensor[(10, 10, 10), uint32] {
    %681 = @func_9390() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
    %682 = %681.0;
    %683 = cast(%682, dtype="uint32") /* ty=Tensor[(1, 10, 10), uint32] */;
    %684 = cast(%var_13461, dtype="uint32") /* ty=Tensor[(10, 10, 10), uint32] */;
    left_shift(%683, %684) /* ty=Tensor[(10, 10, 10), uint32] */
  };
  %685(%var_13467) /* ty=Tensor[(10, 10, 10), uint32] */
}

def @func_7393() -> (Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) {
  %689 = fn () -> (Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) {
    %686 = @func_5180() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %687 = %686.0;
    %688 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
    (%687, %688)
  };
  %689() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */
}

def @func_15484() -> Tensor[(1, 10, 10), float64] {
  @func_15482() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_12919() -> (Tensor[(1, 10, 10), float64],) {
  @func_12917() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_8179(%var_8176: Tensor[(320), float32], %var_8177: Tensor[(165), int16], %var_8178: Tensor[(15, 5, 11), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(165), int16], Tensor[(15, 5, 11), bool], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %707 = fn (%var_8141: Tensor[(320), float32], %var_8142: Tensor[(165), int16], %var_8160: Tensor[(15, 5, 11), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(165), int16], Tensor[(15, 5, 11), bool], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
    %690 = cast(%var_8141, dtype="float32") /* ty=Tensor[(320), float32] */;
    %691 = cast(%var_8142, dtype="int16") /* ty=Tensor[(165), int16] */;
    %692 = cast(%var_8141, dtype="float32") /* ty=Tensor[(320), float32] */;
    %693 = reshape(%690, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
    %694 = reshape(%691, newshape=[11, 15]) /* ty=Tensor[(11, 15), int16] */;
    %695 = reshape(%692, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
    %696 = @func_3695(%693, %694, %695) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) */;
    %697 = %696.0;
    %698 = cast(%var_8160, dtype="bool") /* ty=Tensor[(15, 5, 11), bool] */;
    %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
    %700 = cast(%697, dtype="bool") /* ty=Tensor[(15, 5, 11), bool] */;
    %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %702 = @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %703 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
    %704 = logical_or(%700, %701) /* ty=Tensor[(15, 5, 11), bool] */;
    %705 = %702.0;
    %706 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
    (%703, %var_8141, %var_8142, %704, %705, %706)
  };
  %707(%var_8176, %var_8177, %var_8178) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(165), int16], Tensor[(15, 5, 11), bool], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_9733() -> (Tensor[(1, 10, 10), float32],) {
  @func_9731() /* ty=(Tensor[(1, 10, 10), float32],) */
}

def @func_3157(%var_3154: Tensor[(10, 4, 2), float64], %var_3155: Tensor[(825), int16], %var_3156: Tensor[(165), int16]) -> (Tensor[(15, 5, 11), int16], Tensor[(825), int16], Tensor[(48), float64], Tensor[(10, 4, 2), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) {
  @func_3152(%var_3154, %var_3155, %var_3156) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(825), int16], Tensor[(48), float64], Tensor[(10, 4, 2), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) */
}

def @func_18070(%var_18060: Tensor[(55, 15), int16]) -> (Tensor[(1, 10, 10), float32], Tensor[(2, 4, 6), float64], Tensor[(4, 20), float32], Tensor[(55, 15), int16], Tensor[(48), float64], Tensor[(1, 10, 10), float32]) {
  %708 = @func_11558() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %709 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 20), float32] */, dtype="float32") /* ty=Tensor[(4, 20), float32] */;
  %710 = cast(%var_18060, dtype="int16") /* ty=Tensor[(55, 15), int16] */;
  %711 = cast(meta[relay.Constant][28] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %712 = reshape(%709, newshape=[1, 8, 10]) /* ty=Tensor[(1, 8, 10), float32] */;
  %713 = reshape(%710, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %714 = reshape(%711, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %715 = @func_2680(%712, %713, %714) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */;
  %716 = %708.0;
  %717 = %715.4;
  %718 = @func_13860() /* ty=Tensor[(1, 10, 10), float32] */;
  (%716, %717, meta[relay.Constant][27] /* ty=Tensor[(4, 20), float32] */, %var_18060, meta[relay.Constant][28] /* ty=Tensor[(48), float64] */, %718)
}

def @func_10321(%var_10316: Tensor[(320), float32], %var_10317: Tensor[(825), int16], %var_10318: Tensor[(48), float64], %var_10319: Tensor[(448), float32], %var_10320: Tensor[(80), float64]) -> (Tensor[(1, 10, 10), float32], Tensor[(?, 10, 10), int32], Tensor[(320), float32], Tensor[(825), int16], Tensor[(48), float64], Tensor[(6, 10, 10), bool], Tensor[(15, 5, 11), int16], Tensor[(448), float32], Tensor[(80), float64], Tensor[(11, 15), int16], Tensor[(5, 165), float32]) {
  %749 = fn (%var_10268: Tensor[(320), float32], %var_10269: Tensor[(825), int16], %var_10270: Tensor[(48), float64], %var_10289: Tensor[(448), float32], %var_10290: Tensor[(80), float64]) -> (Tensor[(1, 10, 10), float32], Tensor[(?, 10, 10), int32], Tensor[(320), float32], Tensor[(825), int16], Tensor[(48), float64], Tensor[(6, 10, 10), bool], Tensor[(15, 5, 11), int16], Tensor[(448), float32], Tensor[(80), float64], Tensor[(11, 15), int16], Tensor[(5, 165), float32]) {
    %719 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
    %720 = @func_9910() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), int32]) */;
    %721 = cast(%var_10270, dtype="float64") /* ty=Tensor[(48), float64] */;
    %722 = reshape(%721, newshape=[12, 4]) /* ty=Tensor[(12, 4), float64] */;
    %723 = @func_7187(%722) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64]) */;
    %724 = cast(%var_10289, dtype="float32") /* ty=Tensor[(448), float32] */;
    %725 = cast(%var_10290, dtype="float64") /* ty=Tensor[(80), float64] */;
    %726 = cast(%var_10268, dtype="float32") /* ty=Tensor[(320), float32] */;
    %727 = cast(%var_10269, dtype="int16") /* ty=Tensor[(825), int16] */;
    %728 = cast(%var_10270, dtype="float64") /* ty=Tensor[(48), float64] */;
    %729 = reshape(%726, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %730 = reshape(%727, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
    %731 = reshape(%728, newshape=[1, 48]) /* ty=Tensor[(1, 48), float64] */;
    %732 = @func_4319(%729, %730, %731) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(33, 5), int16], Tensor[(5, 165), bool], Tensor[(5, 165), bool], Tensor[(2, 4, 6), float64], Tensor[(1, 48), float64]) */;
    %733 = %732.3;
    %734 = cast(%733, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
    %735 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 15), int16] */, dtype="int16") /* ty=Tensor[(11, 15), int16] */;
    %736 = cast(%var_10289, dtype="float32") /* ty=Tensor[(448), float32] */;
    %737 = reshape(%724, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
    %738 = reshape(%725, newshape=[80]) /* ty=Tensor[(80), float64] */;
    %739 = reshape(%734, newshape=[825]) /* ty=Tensor[(825), int16] */;
    %740 = reshape(%735, newshape=[165]) /* ty=Tensor[(165), int16] */;
    %741 = reshape(%736, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
    %742 = @func_4479(%737, %738, %739, %740, %741) /* ty=(Tensor[(48), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(15, 5, 11), int16], Tensor[(14, 16, 2), bool], Tensor[(165, 1), int16], Tensor[(14, 16, 2), float64], Tensor[(1, 10, 10), float64]) */;
    %743 = cast(%733, dtype="float32") /* ty=Tensor[(5, 165), float32] */;
    %744 = %719.0;
    %745 = %720.2;
    %746 = %723.1;
    %747 = %742.4;
    %748 = log2(%743) /* ty=Tensor[(5, 165), float32] */;
    (%744, %745, %var_10268, %var_10269, %var_10270, %746, %747, %var_10289, %var_10290, meta[relay.Constant][29] /* ty=Tensor[(11, 15), int16] */, %748)
  };
  %749(%var_10316, %var_10317, %var_10318, %var_10319, %var_10320) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(?, 10, 10), int32], Tensor[(320), float32], Tensor[(825), int16], Tensor[(48), float64], Tensor[(6, 10, 10), bool], Tensor[(15, 5, 11), int16], Tensor[(448), float32], Tensor[(80), float64], Tensor[(11, 15), int16], Tensor[(5, 165), float32]) */
}

def @func_10475() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  @func_10473() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_8908() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  %750 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %751 = @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %752 = %750.0;
  %753 = %751.0;
  (%752, %753)
}

def @func_11508() -> (Tensor[(1, 10, 10), float64],) {
  @func_11506() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_18131() -> Tensor[(12, 8, 7), float32] {
  @func_18129() /* ty=Tensor[(12, 8, 7), float32] */
}

def @func_16508(%var_16507: Tensor[(9, 10, 10), float32]) -> Tensor[(9, 10, 10), uint16] {
  %758 = fn (%var_16497: Tensor[(9, 10, 10), float32]) -> Tensor[(9, 10, 10), uint16] {
    %754 = @func_11670() /* ty=(Tensor[(1, 10, 10), float32],) */;
    %755 = %754.0;
    %756 = cast(%755, dtype="uint16") /* ty=Tensor[(1, 10, 10), uint16] */;
    %757 = cast(%var_16497, dtype="uint16") /* ty=Tensor[(9, 10, 10), uint16] */;
    left_shift(%756, %757) /* ty=Tensor[(9, 10, 10), uint16] */
  };
  %758(%var_16507) /* ty=Tensor[(9, 10, 10), uint16] */
}

def @func_13315() -> Tensor[(1, 10, 10), float32] {
  %760 = fn () -> Tensor[(1, 10, 10), float32] {
    %759 = @func_7659() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
    %759.0
  };
  %760() /* ty=Tensor[(1, 10, 10), float32] */
}

def @func_18082() -> (Tensor[(1, 10, 10), float64],) {
  @func_18080() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_12029() -> (Tensor[(1, 10, 10), float64],) {
  %761 = @func_7346() /* ty=Tensor[(1, 10, 10), float64] */;
  (%761,)
}

def @func_10373(%var_10353: Tensor[(7, 16, 6), float32]) -> (Tensor[(7, 16, 6), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %762 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 16, 6), float32] */, dtype="float32") /* ty=Tensor[(1, 16, 6), float32] */;
  %763 = cast(%var_10353, dtype="float32") /* ty=Tensor[(7, 16, 6), float32] */;
  %764 = @func_10159() /* ty=Tensor[(1, 10, 10), float32] */;
  %765 = cast(%764, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
  %766 = add(%762, %763) /* ty=Tensor[(7, 16, 6), float32] */;
  %767 = @func_8650() /* ty=Tensor[(1, 10, 10), float64] */;
  %768 = erf(%765) /* ty=Tensor[(1, 10, 10), float64] */;
  (%766, %767, %768)
}

def @func_15769() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) {
  %769 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %770 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 80), float64] */, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %771 = cast(meta[relay.Constant][32] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %772 = reshape(%770, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %773 = reshape(%771, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %774 = @func_7314(%772, %773) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) */;
  %775 = @func_13692() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %776 = %769.0;
  %777 = %774.1;
  %778 = %775.0;
  (%776, %777, meta[relay.Constant][31] /* ty=Tensor[(1, 80), float64] */, meta[relay.Constant][32] /* ty=Tensor[(825), int16] */, %778)
}

def @func_12917() -> (Tensor[(1, 10, 10), float64],) {
  %779 = @func_5544() /* ty=Tensor[(1, 10, 10), float64] */;
  (%779,)
}

def @func_14886() -> (Tensor[(1, 10, 10), float64],) {
  @func_14884() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_8765() -> (Tensor[(1, 10, 10), float64], Tensor[(2, ?, 14), float64], Tensor[(28), float64], Tensor[(?, 10, 10), uint16]) {
  @func_8763() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, ?, 14), float64], Tensor[(28), float64], Tensor[(?, 10, 10), uint16]) */
}

def @func_7137(%var_7134: Tensor[(80), float64], %var_7135: Tensor[(825), int16], %var_7136: Tensor[(165), int16]) -> (Tensor[(12, 8, 7), float32], Tensor[(15, 5, 11), int16], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(?, 10, 10), uint32]) {
  @func_7132(%var_7134, %var_7135, %var_7136) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(15, 5, 11), int16], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(?, 10, 10), uint32]) */
}

def @func_6762() -> (Tensor[(1, 10, 10), float64],) {
  %780 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  (%780,)
}

def @func_7605(%var_7523: Tensor[(400), float64], %var_7572: Tensor[(280), uint64], %var_7573: Tensor[(448, 1), float32], %var_7586: Tensor[(600), float64]) -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64], Tensor[(4, 10, 10), int16], Tensor[(400), float64], Tensor[(12, 8, 7), float32], Tensor[(40, 2), float32], Tensor[(165), int16], Tensor[(280), uint64], Tensor[(448, 1), float32], Tensor[(165), int16], Tensor[(320), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(1, 10, 10), float64]) {
  %781 = cast(meta[relay.Constant][33] /* ty=Tensor[(40, 2), float64] */, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
  %782 = cast(meta[relay.Constant][34] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %783 = reshape(%781, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %784 = reshape(%782, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %785 = @func_7314(%783, %784) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) */;
  %786 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %787 = cast(%var_7523, dtype="float64") /* ty=Tensor[(400), float64] */;
  %788 = reshape(%787, newshape=[4, 10, 10]) /* ty=Tensor[(4, 10, 10), float64] */;
  %789 = @func_6479(%788) /* ty=(Tensor[(4, 10, 10), int16],) */;
  %790 = cast(meta[relay.Constant][33] /* ty=Tensor[(40, 2), float64] */, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
  %791 = cast(%var_7572, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %792 = cast(%var_7572, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %793 = cast(%var_7573, dtype="float32") /* ty=Tensor[(448, 1), float32] */;
  %794 = acosh(%790) /* ty=Tensor[(40, 2), float32] */;
  %795 = cast(%794, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
  %796 = cast(meta[relay.Constant][34] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %797 = cast(meta[relay.Constant][35] /* ty=Tensor[(165), int16] */, dtype="int16") /* ty=Tensor[(165), int16] */;
  %798 = cast(meta[relay.Constant][36] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
  %799 = reshape(%791, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint64] */;
  %800 = reshape(%792, newshape=[4, 14, 5]) /* ty=Tensor[(4, 14, 5), uint64] */;
  %801 = reshape(%793, newshape=[448]) /* ty=Tensor[(448), float32] */;
  %802 = reshape(%795, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %803 = reshape(%796, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %804 = reshape(%797, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %805 = reshape(%798, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %806 = @func_5152(%799, %800, %801, %802, %803, %804, %805) /* ty=(Tensor[(4, 14, 5), uint64], Tensor[(15, 5, 11), int16], Tensor[(448), float32], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(11, 15), int16], Tensor[(320), float32]) */;
  %807 = @func_6762() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %808 = cast(%var_7586, dtype="float64") /* ty=Tensor[(600), float64] */;
  %809 = reshape(%808, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float64] */;
  %810 = @func_4770(%809) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(24, 2), float64], Tensor[(6, 10, 10), bool], Tensor[(825, 320), float64]) */;
  %811 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  %812 = %785.1;
  %813 = %786.0;
  %814 = %789.0;
  %815 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  %816 = %806.5;
  %817 = %807.0;
  %818 = @func_6837() /* ty=Tensor[(1, 10, 10), float64] */;
  %819 = %810.3;
  %820 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  (%811, %812, meta[relay.Constant][34] /* ty=Tensor[(825), int16] */, %813, %814, %var_7523, %815, %794, %816, %var_7572, %var_7573, meta[relay.Constant][35] /* ty=Tensor[(165), int16] */, meta[relay.Constant][36] /* ty=Tensor[(320), float32] */, %817, %818, %819, %var_7586, %820)
}

def @func_10544(%var_10542: Tensor[(672), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(7, 16, 6), float32], Tensor[(672), float32], Tensor[(1, 10, 10), float64]) {
  @func_10541(%var_10542) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(7, 16, 6), float32], Tensor[(672), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_5798() -> (Tensor[(1, 10, 10), float64],) {
  @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_8345() -> Tensor[(1, 10, 10), float64] {
  @func_8343() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_8883() -> (Tensor[(1, 10, 10), float32],) {
  %821 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %822 = %821.0;
  (%822,)
}

def @func_13072(%var_13070: Tensor[(2, 10, 10), float64], %var_13071: Tensor[(55, 15), int16]) -> (Tensor[(2, 10, 10), bool], Tensor[(165), int16], Tensor[(400), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(600), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(165), int16], Tensor[(55, 15), int16], Tensor[(12, 8, 7), float32], Tensor[(4, 10, 10), int16]) {
  @func_13068(%var_13070, %var_13071) /* ty=(Tensor[(2, 10, 10), bool], Tensor[(165), int16], Tensor[(400), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(600), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(165), int16], Tensor[(55, 15), int16], Tensor[(12, 8, 7), float32], Tensor[(4, 10, 10), int16]) */
}

def @func_4324(%var_4321: Tensor[(320), float32], %var_4322: Tensor[(5, 165), int16], %var_4323: Tensor[(1, 48), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(33, 5), int16], Tensor[(5, 165), bool], Tensor[(5, 165), bool], Tensor[(2, 4, 6), float64], Tensor[(1, 48), float64]) {
  @func_4319(%var_4321, %var_4322, %var_4323) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(33, 5), int16], Tensor[(5, 165), bool], Tensor[(5, 165), bool], Tensor[(2, 4, 6), float64], Tensor[(1, 48), float64]) */
}

def @func_9666() -> (Tensor[(1, 10, 10), float32], Tensor[(12, 8, 7), float32]) {
  @func_9664() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(12, 8, 7), float32]) */
}

def @func_10653() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) {
  %823 = @func_9720() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %824 = @func_8353() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %825 = %823.0;
  %826 = @func_6571() /* ty=Tensor[(1, 10, 10), float64] */;
  %827 = %824.0;
  (%825, %826, %827)
}

def @func_17032(%var_17030: Tensor[(11, 10, 10), float64], %var_17031: Tensor[(165), int16]) -> (Tensor[(825), int16], Tensor[(11, 10, 10), bool], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) {
  %841 = fn (%var_16998: Tensor[(11, 10, 10), float64], %var_17006: Tensor[(165), int16]) -> (Tensor[(825), int16], Tensor[(11, 10, 10), bool], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) {
    %828 = @func_15769() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) */;
    %829 = @func_7047() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %830 = %829.0;
    %831 = cast(%830, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
    %832 = cast(%var_16998, dtype="bool") /* ty=Tensor[(11, 10, 10), bool] */;
    %833 = cast(%var_17006, dtype="int16") /* ty=Tensor[(165), int16] */;
    %834 = %828.3;
    %835 = cast(%834, dtype="int16") /* ty=Tensor[(825), int16] */;
    %836 = reshape(%833, newshape=[11, 15]) /* ty=Tensor[(11, 15), int16] */;
    %837 = reshape(%835, newshape=[825]) /* ty=Tensor[(825), int16] */;
    %838 = @func_7848(%836, %837) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(825), int16], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(80), float32], Tensor[(12, 4), float64]) */;
    %839 = equal(%831, %832) /* ty=Tensor[(11, 10, 10), bool] */;
    %840 = %838.1;
    (%834, %839, %840, %var_17006)
  };
  %841(%var_17030, %var_17031) /* ty=(Tensor[(825), int16], Tensor[(11, 10, 10), bool], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) */
}

def @func_5161(%var_5154: Tensor[(4, 14, 5), uint64], %var_5155: Tensor[(4, 14, 5), uint64], %var_5156: Tensor[(448), float32], %var_5157: Tensor[(80), float64], %var_5158: Tensor[(825), int16], %var_5159: Tensor[(165), int16], %var_5160: Tensor[(320), float32]) -> (Tensor[(4, 14, 5), uint64], Tensor[(15, 5, 11), int16], Tensor[(448), float32], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(11, 15), int16], Tensor[(320), float32]) {
  @func_5152(%var_5154, %var_5155, %var_5156, %var_5157, %var_5158, %var_5159, %var_5160) /* ty=(Tensor[(4, 14, 5), uint64], Tensor[(15, 5, 11), int16], Tensor[(448), float32], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(11, 15), int16], Tensor[(320), float32]) */
}

def @func_14347() -> Tensor[(1, 10, 10), float64] {
  @func_14345() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_17778(%var_17776: Tensor[(5, 165), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(5, 9, 4), float32], Tensor[(5, 165), int16]) {
  @func_17775(%var_17776) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(5, 9, 4), float32], Tensor[(5, 165), int16]) */
}

def @func_8763() -> (Tensor[(1, 10, 10), float64], Tensor[(2, ?, 14), float64], Tensor[(28), float64], Tensor[(?, 10, 10), uint16]) {
  %842 = cast(meta[relay.Constant][37] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %843 = reshape(%842, newshape=[2, 1, 14]) /* ty=Tensor[(2, 1, 14), float64] */;
  %844 = @func_6762() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %845 = %844.0;
  %846 = @func_5544() /* ty=Tensor[(1, 10, 10), float64] */;
  %847 = cast(%846, dtype="uint16") /* ty=Tensor[(1, 10, 10), uint16] */;
  %848 = shape_of(%845, dtype="int32") /* ty=Tensor[(3), int32] */;
  %849 = cast(%845, dtype="uint16") /* ty=Tensor[(1, 10, 10), uint16] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %851 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
  %852 = @func_5858(%843) /* ty=Tensor[(2, ?, 14), float64] */;
  %853 = minimum(%849, %850) /* ty=Tensor[(?, 10, 10), uint16] */;
  (%851, %852, meta[relay.Constant][37] /* ty=Tensor[(28), float64] */, %853)
}

def @func_6839() -> Tensor[(1, 10, 10), float64] {
  @func_6837() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_10596() -> (Tensor[(5, 9, 14), float32], Tensor[(1, 10, 10), float64]) {
  %857 = fn () -> (Tensor[(5, 9, 14), float32], Tensor[(1, 10, 10), float64]) {
    %854 = cast(meta[relay.Constant][38] /* ty=Tensor[(5, 9, 14), float32] */, dtype="float32") /* ty=Tensor[(5, 9, 14), float32] */;
    %855 = rsqrt(%854) /* ty=Tensor[(5, 9, 14), float32] */;
    %856 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
    (%855, %856)
  };
  %857() /* ty=(Tensor[(5, 9, 14), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_17366(%var_17365: Tensor[(14, 11, 11), float32]) -> (Tensor[(14, 11, 11), uint8], Tensor[(672), float32], Tensor[(672), float32], Tensor[(14, 11, 11), float64]) {
  %868 = fn (%var_17340: Tensor[(14, 11, 11), float32]) -> (Tensor[(14, 11, 11), uint8], Tensor[(672), float32], Tensor[(672), float32], Tensor[(14, 11, 11), float64]) {
    %858 = @func_13735() /* ty=Tensor[(14, 1, 11), float32] */;
    %859 = cast(%858, dtype="uint8") /* ty=Tensor[(14, 1, 11), uint8] */;
    %860 = cast(%var_17340, dtype="uint8") /* ty=Tensor[(14, 11, 11), uint8] */;
    %861 = cast(meta[relay.Constant][39] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %862 = reshape(%861, newshape=[672]) /* ty=Tensor[(672), float32] */;
    %863 = @func_10541(%862) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(7, 16, 6), float32], Tensor[(672), float32], Tensor[(1, 10, 10), float64]) */;
    %864 = cast(%var_17340, dtype="float64") /* ty=Tensor[(14, 11, 11), float64] */;
    %865 = bitwise_and(%859, %860) /* ty=Tensor[(14, 11, 11), uint8] */;
    %866 = %863.2;
    %867 = cos(%864) /* ty=Tensor[(14, 11, 11), float64] */;
    (%865, %866, meta[relay.Constant][39] /* ty=Tensor[(672), float32] */, %867)
  };
  %868(%var_17365) /* ty=(Tensor[(14, 11, 11), uint8], Tensor[(672), float32], Tensor[(672), float32], Tensor[(14, 11, 11), float64]) */
}

def @func_11672() -> (Tensor[(1, 10, 10), float32],) {
  @func_11670() /* ty=(Tensor[(1, 10, 10), float32],) */
}

def @func_14010() -> Tensor[(6, ?, 15), bool] {
  %875 = fn () -> Tensor[(6, ?, 15), bool] {
    %869 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 15), float32] */;
    %870 = log(%869) /* ty=Tensor[(6, 1, 15), float32] */;
    %871 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 1, 15), float32] */, dtype="bool") /* ty=Tensor[(6, 1, 15), bool] */;
    %872 = shape_of(%870, dtype="int32") /* ty=Tensor[(3), int32] */;
    %873 = cast(%870, dtype="bool") /* ty=Tensor[(6, 1, 15), bool] */;
    %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%873, %874) /* ty=Tensor[(6, ?, 15), bool] */
  };
  %875() /* ty=Tensor[(6, ?, 15), bool] */
}

def @func_17499() -> (Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32]) {
  @func_17497() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32]) */
}

def @func_4485(%var_4480: Tensor[(14, 16, 2), float32], %var_4481: Tensor[(80), float64], %var_4482: Tensor[(825), int16], %var_4483: Tensor[(165), int16], %var_4484: Tensor[(14, 16, 2), float32]) -> (Tensor[(48), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(15, 5, 11), int16], Tensor[(14, 16, 2), bool], Tensor[(165, 1), int16], Tensor[(14, 16, 2), float64], Tensor[(1, 10, 10), float64]) {
  %913 = fn (%var_4343: Tensor[(14, 16, 2), float32], %var_4362: Tensor[(80), float64], %var_4363: Tensor[(825), int16], %var_4364: Tensor[(165), int16], %var_4413: Tensor[(14, 16, 2), float32]) -> (Tensor[(48), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(15, 5, 11), int16], Tensor[(14, 16, 2), bool], Tensor[(165, 1), int16], Tensor[(14, 16, 2), float64], Tensor[(1, 10, 10), float64]) {
    %876 = cast(%var_4362, dtype="float64") /* ty=Tensor[(80), float64] */;
    %877 = cast(%var_4363, dtype="int16") /* ty=Tensor[(825), int16] */;
    %878 = cast(%var_4364, dtype="int16") /* ty=Tensor[(165), int16] */;
    %879 = reshape(%876, newshape=[10, 4, 2]) /* ty=Tensor[(10, 4, 2), float64] */;
    %880 = reshape(%877, newshape=[825]) /* ty=Tensor[(825), int16] */;
    %881 = reshape(%878, newshape=[165]) /* ty=Tensor[(165), int16] */;
    %882 = @func_3152(%879, %880, %881) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(825), int16], Tensor[(48), float64], Tensor[(10, 4, 2), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) */;
    %883 = cast(%var_4364, dtype="int16") /* ty=Tensor[(165), int16] */;
    %884 = cast(%var_4363, dtype="int16") /* ty=Tensor[(825), int16] */;
    %885 = reshape(%883, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
    %886 = reshape(%884, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
    %887 = @func_1835(%885, %886) /* ty=(Tensor[(15, 5, 11), int16],) */;
    %888 = cast(%var_4343, dtype="float32") /* ty=Tensor[(14, 16, 2), float32] */;
    %889 = sinh(%888) /* ty=Tensor[(14, 16, 2), float32] */;
    %890 = cast(%889, dtype="float32") /* ty=Tensor[(14, 16, 2), float32] */;
    %891 = sin(%890) /* ty=Tensor[(14, 16, 2), float32] */;
    %892 = cast(%var_4413, dtype="bool") /* ty=Tensor[(14, 16, 2), bool] */;
    %893 = shape_of(%891, dtype="int32") /* ty=Tensor[(3), int32] */;
    %894 = cast(%891, dtype="bool") /* ty=Tensor[(14, 16, 2), bool] */;
    %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %896 = cast(%var_4362, dtype="float32") /* ty=Tensor[(80), float32] */;
    %897 = cast(%var_4363, dtype="int16") /* ty=Tensor[(825), int16] */;
    %898 = %882.2;
    %899 = cast(%898, dtype="float64") /* ty=Tensor[(48), float64] */;
    %900 = reshape(%896, newshape=[1, 8, 10]) /* ty=Tensor[(1, 8, 10), float32] */;
    %901 = reshape(%897, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
    %902 = reshape(%899, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %903 = @func_2680(%900, %901, %902) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */;
    %904 = cast(%891, dtype="float32") /* ty=Tensor[(14, 16, 2), float32] */;
    %905 = atan(%904) /* ty=Tensor[(14, 16, 2), float32] */;
    %906 = cast(%905, dtype="float64") /* ty=Tensor[(14, 16, 2), float64] */;
    %907 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %908 = %887.0;
    %909 = greater_equal(%894, %895) /* ty=Tensor[(14, 16, 2), bool] */;
    %910 = %903.2;
    %911 = atanh(%906) /* ty=Tensor[(14, 16, 2), float64] */;
    %912 = %907.0;
    (%898, %var_4362, %var_4363, %var_4364, %908, %909, %910, %911, %912)
  };
  %913(%var_4480, %var_4481, %var_4482, %var_4483, %var_4484) /* ty=(Tensor[(48), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(15, 5, 11), int16], Tensor[(14, 16, 2), bool], Tensor[(165, 1), int16], Tensor[(14, 16, 2), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_13387() -> (Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) {
  @func_13385() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */
}

def @func_17078(%var_17061: Tensor[(200), float64], %var_17062: Tensor[(825), int16]) -> (Tensor[(12, 8, 7), float32], Tensor[(55, 15), int16], Tensor[(200), float64], Tensor[(1, 10, 10), float64], Tensor[(825), float64]) {
  %914 = @func_5267() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %915 = cast(%var_17061, dtype="float64") /* ty=Tensor[(200), float64] */;
  %916 = cast(%var_17062, dtype="int16") /* ty=Tensor[(825), int16] */;
  %917 = reshape(%915, newshape=[2, 10, 10]) /* ty=Tensor[(2, 10, 10), float64] */;
  %918 = reshape(%916, newshape=[55, 15]) /* ty=Tensor[(55, 15), int16] */;
  %919 = @func_13068(%917, %918) /* ty=(Tensor[(2, 10, 10), bool], Tensor[(165), int16], Tensor[(400), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(600), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(165), int16], Tensor[(55, 15), int16], Tensor[(12, 8, 7), float32], Tensor[(4, 10, 10), int16]) */;
  %920 = cast(%var_17062, dtype="float64") /* ty=Tensor[(825), float64] */;
  %921 = %914.0;
  %922 = %919.9;
  %923 = @func_8343() /* ty=Tensor[(1, 10, 10), float64] */;
  %924 = sinh(%920) /* ty=Tensor[(825), float64] */;
  (%921, %922, %var_17061, %923, %924)
}

def @func_17286() -> Tensor[(1, 10, 10), float64] {
  @func_8650() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_16870(%var_16867: Tensor[(825), int16], %var_16868: Tensor[(320), float32], %var_16869: Tensor[(400), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1050), float32], Tensor[(?, 10, 10), bool], Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(165), int16], Tensor[(825), int16], Tensor[(320), float32], Tensor[(400), float64]) {
  %951 = fn (%var_16862: Tensor[(825), int16], %var_16863: Tensor[(320), float32], %var_16864: Tensor[(400), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1050), float32], Tensor[(?, 10, 10), bool], Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(165), int16], Tensor[(825), int16], Tensor[(320), float32], Tensor[(400), float64]) {
    %925 = cast(meta[relay.Constant][41] /* ty=Tensor[(1050), float32] */, dtype="float32") /* ty=Tensor[(1050), float32] */;
    %926 = reshape(%925, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), float32] */;
    %927 = @func_15160(%926) /* ty=(Tensor[(10, 7, 15), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
    %928 = @func_7928() /* ty=Tensor[(1, 10, 10), float32] */;
    %929 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
    %930 = cast(%929, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
    %931 = shape_of(%928, dtype="int32") /* ty=Tensor[(3), int32] */;
    %932 = cast(%928, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
    %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %934 = cast(meta[relay.Constant][42] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %935 = cast(meta[relay.Constant][43] /* ty=Tensor[(165), int16] */, dtype="int16") /* ty=Tensor[(165), int16] */;
    %936 = cast(%var_16862, dtype="int16") /* ty=Tensor[(825), int16] */;
    %937 = cast(%var_16863, dtype="float32") /* ty=Tensor[(320), float32] */;
    %938 = cast(%var_16862, dtype="int16") /* ty=Tensor[(825), int16] */;
    %939 = cast(%var_16864, dtype="float64") /* ty=Tensor[(400), float64] */;
    %940 = reshape(%934, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %941 = reshape(%935, newshape=[165]) /* ty=Tensor[(165), int16] */;
    %942 = reshape(%936, newshape=[825]) /* ty=Tensor[(825), int16] */;
    %943 = reshape(%937, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %944 = reshape(%938, newshape=[825]) /* ty=Tensor[(825), int16] */;
    %945 = reshape(%939, newshape=[8, 50]) /* ty=Tensor[(8, 50), float64] */;
    %946 = @func_10858(%940, %941, %942, %943, %944, %945) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), bool], Tensor[(320), float32], Tensor[(1, 10, 10), float32], Tensor[(825), int32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(8, 50), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(60, 10), float64]) */;
    %947 = @func_14345() /* ty=Tensor[(1, 10, 10), float64] */;
    %948 = %927.1;
    %949 = equal(%932, %933) /* ty=Tensor[(?, 10, 10), bool] */;
    %950 = %946.11;
    (%947, %948, meta[relay.Constant][41] /* ty=Tensor[(1050), float32] */, %949, %950, meta[relay.Constant][42] /* ty=Tensor[(48), float64] */, meta[relay.Constant][43] /* ty=Tensor[(165), int16] */, %var_16862, %var_16863, %var_16864)
  };
  %951(%var_16867, %var_16868, %var_16869) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1050), float32], Tensor[(?, 10, 10), bool], Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(165), int16], Tensor[(825), int16], Tensor[(320), float32], Tensor[(400), float64]) */
}

def @func_6482(%var_6480: Tensor[(4, 10, 10), float64]) -> (Tensor[(4, 10, 10), int16],) {
  @func_6479(%var_6480) /* ty=(Tensor[(4, 10, 10), int16],) */
}

def @func_6668(%var_6666: Tensor[(300, 2), float64], %var_6667: Tensor[(300, 2), int8]) -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(6, 10, 10), bool], Tensor[(?, 10, 10), bool], Tensor[(300, 2), bool]) {
  %976 = fn (%var_6634: Tensor[(300, 2), float64], %var_6659: Tensor[(300, 2), int8]) -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(6, 10, 10), bool], Tensor[(?, 10, 10), bool], Tensor[(300, 2), bool]) {
    %952 = @func_6400() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
    %953 = cast(%var_6634, dtype="float64") /* ty=Tensor[(300, 2), float64] */;
    %954 = reshape(%953, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float64] */;
    %955 = @func_4770(%954) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(24, 2), float64], Tensor[(6, 10, 10), bool], Tensor[(825, 320), float64]) */;
    %956 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
    %957 = cast(%956, dtype="float64") /* ty=Tensor[(1, 10, 10), float64] */;
    %958 = reshape(%957, newshape=[1, 10, 10]) /* ty=Tensor[(1, 10, 10), float64] */;
    %959 = @func_5004(%958) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) */;
    %960 = cast(%var_6634, dtype="float64") /* ty=Tensor[(300, 2), float64] */;
    %961 = cosh(%960) /* ty=Tensor[(300, 2), float64] */;
    %962 = cast(%var_6634, dtype="int8") /* ty=Tensor[(300, 2), int8] */;
    %963 = shape_of(%961, dtype="int32") /* ty=Tensor[(2), int32] */;
    %964 = cast(%961, dtype="int8") /* ty=Tensor[(300, 2), int8] */;
    %965 = dyn.reshape(%962, %963, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %966 = left_shift(%964, %965) /* ty=Tensor[(300, 2), int8] */;
    %967 = cast(%var_6659, dtype="bool") /* ty=Tensor[(300, 2), bool] */;
    %968 = shape_of(%966, dtype="int32") /* ty=Tensor[(2), int32] */;
    %969 = cast(%966, dtype="bool") /* ty=Tensor[(300, 2), bool] */;
    %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %971 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
    %972 = %952.0;
    %973 = %955.3;
    %974 = %959.3;
    %975 = less(%969, %970) /* ty=Tensor[(300, 2), bool] */;
    (%971, %956, %972, %973, %974, %975)
  };
  %976(%var_6666, %var_6667) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(6, 10, 10), bool], Tensor[(?, 10, 10), bool], Tensor[(300, 2), bool]) */
}

def @func_13735() -> Tensor[(14, 1, 11), float32] {
  %977 = cast(meta[relay.Constant][44] /* ty=Tensor[(14, 1, 11), float32] */, dtype="float32") /* ty=Tensor[(14, 1, 11), float32] */;
  atan(%977) /* ty=Tensor[(14, 1, 11), float32] */
}

def @func_11559() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  %980 = fn () -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
    %978 = @func_7928() /* ty=Tensor[(1, 10, 10), float32] */;
    %979 = @func_7346() /* ty=Tensor[(1, 10, 10), float64] */;
    (%978, %979)
  };
  %980() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_16768() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %981 = @func_14345() /* ty=Tensor[(1, 10, 10), float64] */;
  %982 = @func_8310() /* ty=Tensor[(1, 10, 10), float64] */;
  (%981, %982)
}

def @func_15458() -> Tensor[(1, 10, 10), float64] {
  %983 = @func_11253() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */;
  %983.0
}

def @func_15091() -> Tensor[(1, 10, 10), float64] {
  %985 = fn () -> Tensor[(1, 10, 10), float64] {
    %984 = @func_5180() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %984.0
  };
  %985() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_16770() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  @func_16768() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_17838() -> (Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), bool], Tensor[(1, 10, 10), float32]) {
  %986 = @func_14953() /* ty=Tensor[(1, 10, 10), float64] */;
  %987 = @func_14137() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %988 = %987.0;
  %989 = cast(%988, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %990 = shape_of(%986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %991 = cast(%986, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %993 = @func_13132() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(672), float32], Tensor[(1, 10, 10), float32], Tensor[(7, 16, 6), float32]) */;
  %994 = @func_8343() /* ty=Tensor[(1, 10, 10), float64] */;
  %995 = less_equal(%991, %992) /* ty=Tensor[(?, 10, 10), bool] */;
  %996 = %993.2;
  (%994, %995, %996)
}

def @func_15273(%var_15272: Tensor[(1200), uint16]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 16, 5), uint16], Tensor[(1200), uint16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
  %1014 = fn (%var_15242: Tensor[(1200), uint16]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 16, 5), uint16], Tensor[(1200), uint16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) {
    %997 = @func_10653() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */;
    %998 = @func_12138() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %999 = cast(%var_15242, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
    %1000 = cast(%var_15242, dtype="uint16") /* ty=Tensor[(1200), uint16] */;
    %1001 = reshape(%999, newshape=[15, 16, 5]) /* ty=Tensor[(15, 16, 5), uint16] */;
    %1002 = reshape(%1000, newshape=[15, 16, 5]) /* ty=Tensor[(15, 16, 5), uint16] */;
    %1003 = @func_10555(%1001, %1002) /* ty=(Tensor[(15, 16, 5), uint16],) */;
    %1004 = @func_6785() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
    %1005 = @func_8353() /* ty=(Tensor[(1, 10, 10), float32],) */;
    %1006 = @func_12917() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %1007 = @func_10043() /* ty=Tensor[(1, 10, 10), float64] */;
    %1008 = %997.1;
    %1009 = %998.0;
    %1010 = %1003.0;
    %1011 = %1004.1;
    %1012 = %1005.0;
    %1013 = %1006.0;
    (%1007, %1008, %1009, %1010, %var_15242, %1011, %1012, %1013)
  };
  %1014(%var_15272) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 16, 5), uint16], Tensor[(1200), uint16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_9321() -> (Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(180), float32]) {
  %1015 = @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1016 = cast(meta[relay.Constant][45] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %1017 = reshape(%1016, newshape=[5, 9, 4]) /* ty=Tensor[(5, 9, 4), float32] */;
  %1018 = @func_8079(%1017) /* ty=(Tensor[(5, 9, 4), float32],) */;
  %1019 = %1015.0;
  %1020 = %1018.0;
  (%1019, %1020, meta[relay.Constant][45] /* ty=Tensor[(180), float32] */)
}

def @func_15191() -> (Tensor[(7, 16, 6), float32],) {
  @func_15189() /* ty=(Tensor[(7, 16, 6), float32],) */
}

def @func_5579() -> Tensor[(1, 10, 10), float64] {
  @func_5577() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_7048() -> (Tensor[(1, 10, 10), float64],) {
  %1022 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %1021 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
    (%1021,)
  };
  %1022() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_10109(%var_10107: Tensor[(13, 16, 14), float64], %var_10108: Tensor[(13, 16, 14), float64]) -> (Tensor[(13, 16, 14), float64],) {
  @func_10105(%var_10107, %var_10108) /* ty=(Tensor[(13, 16, 14), float64],) */
}

def @func_13385() -> (Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) {
  %1023 = @func_9275() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1024 = %1023.0;
  %1025 = @func_5023() /* ty=Tensor[(12, 8, 7), float32] */;
  (%1024, %1025)
}

def @func_4654() -> Tensor[(1, 10, 10), float64] {
  @func_4628() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_5004(%var_4991: Tensor[(1, 10, 10), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(?, 10, 10), bool]) {
  %1026 = cast(meta[relay.Constant][46] /* ty=Tensor[(12, 4), float64] */, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
  %1027 = reshape(%1026, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
  %1028 = @func_32(%1027) /* ty=(Tensor[(2, 4, 6), float64],) */;
  %1029 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  %1030 = cast(%var_4991, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %1031 = shape_of(%1029, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1032 = cast(%1029, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1034 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  %1035 = %1028.0;
  %1036 = greater_equal(%1032, %1033) /* ty=Tensor[(?, 10, 10), bool] */;
  (%1034, %1035, meta[relay.Constant][46] /* ty=Tensor[(12, 4), float64] */, %1036)
}

def @func_8717(%var_8692: Tensor[(9, 10, 10), float64]) -> (Tensor[(9, 10, 10), uint8], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %1037 = @func_8343() /* ty=Tensor[(1, 10, 10), float64] */;
  %1038 = cast(%1037, dtype="uint8") /* ty=Tensor[(1, 10, 10), uint8] */;
  %1039 = cast(%var_8692, dtype="uint8") /* ty=Tensor[(9, 10, 10), uint8] */;
  %1040 = @func_5796() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1041 = @func_7392() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */;
  %1042 = bitwise_or(%1038, %1039) /* ty=Tensor[(9, 10, 10), uint8] */;
  %1043 = %1040.0;
  %1044 = %1041.0;
  (%1042, %1043, %1044)
}

def @func_9111() -> (Tensor[(1, 10, 10), float64],) {
  @func_9109() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_10866(%var_10860: Tensor[(48), float64], %var_10861: Tensor[(165), int16], %var_10862: Tensor[(825), int16], %var_10863: Tensor[(320), float32], %var_10864: Tensor[(825), int16], %var_10865: Tensor[(8, 50), float64]) -> (Tensor[(12, 8, 7), float32], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), bool], Tensor[(320), float32], Tensor[(1, 10, 10), float32], Tensor[(825), int32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(8, 50), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(60, 10), float64]) {
  @func_10858(%var_10860, %var_10861, %var_10862, %var_10863, %var_10864, %var_10865) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), bool], Tensor[(320), float32], Tensor[(1, 10, 10), float32], Tensor[(825), int32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(8, 50), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(60, 10), float64]) */
}

def @func_14345() -> Tensor[(1, 10, 10), float64] {
  %1045 = @func_5378() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1045.0
}

def @func_10105(%var_10100: Tensor[(13, 16, 14), float64], %var_10101: Tensor[(13, 16, 14), float64]) -> (Tensor[(13, 16, 14), float64],) {
  %1046 = cast(%var_10101, dtype="float64") /* ty=Tensor[(13, 16, 14), float64] */;
  %1047 = shape_of(%var_10100, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1048 = cast(%var_10100, dtype="float64") /* ty=Tensor[(13, 16, 14), float64] */;
  %1049 = dyn.reshape(%1046, %1047, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1050 = divide(%1048, %1049) /* ty=Tensor[(13, 16, 14), float64] */;
  (%1050,)
}

def @func_5181() -> (Tensor[(1, 10, 10), float64],) {
  %1053 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %1051 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %1052 = %1051.0;
    (%1052,)
  };
  %1053() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_13083() -> (Tensor[(1, 10, 10), float32],) {
  %1054 = @func_7928() /* ty=Tensor[(1, 10, 10), float32] */;
  (%1054,)
}

def @func_11041(%var_11040: Tensor[(825), int16]) -> (Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(80), float32], Tensor[(825), int16], Tensor[(48), float64], Tensor[(1, 10, 10), float64]) {
  %1068 = fn (%var_11024: Tensor[(825), int16]) -> (Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(80), float32], Tensor[(825), int16], Tensor[(48), float64], Tensor[(1, 10, 10), float64]) {
    %1055 = @func_9321() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(180), float32]) */;
    %1056 = @func_5180() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %1057 = cast(meta[relay.Constant][47] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %1058 = cast(%var_11024, dtype="int16") /* ty=Tensor[(825), int16] */;
    %1059 = cast(meta[relay.Constant][48] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %1060 = reshape(%1057, newshape=[1, 8, 10]) /* ty=Tensor[(1, 8, 10), float32] */;
    %1061 = reshape(%1058, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
    %1062 = reshape(%1059, newshape=[48]) /* ty=Tensor[(48), float64] */;
    %1063 = @func_2680(%1060, %1061, %1062) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */;
    %1064 = %1055.1;
    %1065 = %1056.0;
    %1066 = %1063.4;
    %1067 = @func_7346() /* ty=Tensor[(1, 10, 10), float64] */;
    (%1064, %1065, %1066, meta[relay.Constant][47] /* ty=Tensor[(80), float32] */, %var_11024, meta[relay.Constant][48] /* ty=Tensor[(48), float64] */, %1067)
  };
  %1068(%var_11040) /* ty=(Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(80), float32], Tensor[(825), int16], Tensor[(48), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_15482() -> Tensor[(1, 10, 10), float64] {
  @func_15392() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_15009() -> (Tensor[(1, 10, 10), float64],) {
  %1071 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %1069 = @func_12029() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %1070 = %1069.0;
    (%1070,)
  };
  %1071() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_16615() -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 165), int16], Tensor[(825), int16]) {
  %1072 = @func_8050() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %1073 = @func_11558() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
  %1074 = @func_5267() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %1075 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 165), int16] */, dtype="int16") /* ty=Tensor[(1, 165), int16] */;
  %1076 = cast(meta[relay.Constant][50] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1077 = reshape(%1075, newshape=[1, 165]) /* ty=Tensor[(1, 165), int16] */;
  %1078 = reshape(%1076, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1079 = @func_11821(%1077, %1078) /* ty=(Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16], Tensor[(165), int16], Tensor[(80), float64]) */;
  %1080 = %1072.0;
  %1081 = %1073.1;
  %1082 = %1074.2;
  %1083 = %1079.1;
  (%1080, %1081, %1082, %1083, meta[relay.Constant][49] /* ty=Tensor[(1, 165), int16] */, meta[relay.Constant][50] /* ty=Tensor[(825), int16] */)
}

def @func_7314(%var_7303: Tensor[(80), float64], %var_7304: Tensor[(825), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64]) {
  %1084 = @func_6762() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1085 = cast(%var_7303, dtype="float64") /* ty=Tensor[(80), float64] */;
  %1086 = cast(%var_7304, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1087 = reshape(%1085, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %1088 = reshape(%1086, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1089 = @func_5468(%1087, %1088) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), float64]) */;
  %1090 = %1084.0;
  %1091 = %1089.5;
  %1092 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  (%1090, %1091, %var_7303, %var_7304, %1092)
}

def @func_4846(%var_4845: Tensor[(48), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16]) {
  %1104 = fn (%var_4825: Tensor[(48), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16]) {
    %1093 = cast(%var_4825, dtype="float64") /* ty=Tensor[(48), float64] */;
    %1094 = reshape(%1093, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
    %1095 = @func_32(%1094) /* ty=(Tensor[(2, 4, 6), float64],) */;
    %1096 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 165), int16] */, dtype="int16") /* ty=Tensor[(1, 165), int16] */;
    %1097 = cast(meta[relay.Constant][52] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
    %1098 = reshape(%1096, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
    %1099 = reshape(%1097, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
    %1100 = @func_1835(%1098, %1099) /* ty=(Tensor[(15, 5, 11), int16],) */;
    %1101 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
    %1102 = %1095.0;
    %1103 = %1100.0;
    (%1101, %1102, %var_4825, %1103, meta[relay.Constant][51] /* ty=Tensor[(1, 165), int16] */, meta[relay.Constant][52] /* ty=Tensor[(825), int16] */)
  };
  %1104(%var_4845) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16]) */
}

def @func_17879() -> (Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32], Tensor[(300), float32]) {
  %1110 = fn () -> (Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32], Tensor[(300), float32]) {
    %1105 = cast(meta[relay.Constant][53] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
    %1106 = reshape(%1105, newshape=[300]) /* ty=Tensor[(300), float32] */;
    %1107 = @func_16303(%1106) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32], Tensor[(300), float32]) */;
    %1108 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
    %1109 = %1107.1;
    (%1108, %1109, meta[relay.Constant][53] /* ty=Tensor[(300), float32] */)
  };
  %1110() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32], Tensor[(300), float32]) */
}

def @func_7929() -> Tensor[(1, 10, 10), float32] {
  %1112 = fn () -> Tensor[(1, 10, 10), float32] {
    %1111 = @func_6400() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64]) */;
    %1111.0
  };
  %1112() /* ty=Tensor[(1, 10, 10), float32] */
}

def @func_7004() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %1115 = fn () -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
    %1113 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
    %1114 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
    (%1113, %1114)
  };
  %1115() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_10473() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %1116 = @func_10043() /* ty=Tensor[(1, 10, 10), float64] */;
  %1117 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  (%1116, %1117)
}

def @func_11146(%var_11124: Tensor[(6, 10, 10), float64]) -> (Tensor[(6, 10, 10), int64], Tensor[(4, 10, 10), int16], Tensor[(400), float64]) {
  %1118 = @func_9511() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1119 = %1118.0;
  %1120 = cast(%1119, dtype="int64") /* ty=Tensor[(1, 10, 10), int64] */;
  %1121 = cast(%var_11124, dtype="int64") /* ty=Tensor[(6, 10, 10), int64] */;
  %1122 = cast(meta[relay.Constant][54] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1123 = reshape(%1122, newshape=[4, 10, 10]) /* ty=Tensor[(4, 10, 10), float64] */;
  %1124 = @func_6479(%1123) /* ty=(Tensor[(4, 10, 10), int16],) */;
  %1125 = multiply(%1120, %1121) /* ty=Tensor[(6, 10, 10), int64] */;
  %1126 = %1124.0;
  (%1125, %1126, meta[relay.Constant][54] /* ty=Tensor[(400), float64] */)
}

def @func_10704() -> (Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) {
  @func_10702() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) */
}

def @func_13846(%var_13820: Tensor[(48), float64], %var_13821: Tensor[(165), int16], %var_13823: Tensor[(320), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(448), float32], Tensor[(48), float64], Tensor[(165), int16], Tensor[(825), int16], Tensor[(320), float32], Tensor[(400), float64], Tensor[(1, 10, 10), float64]) {
  %1127 = cast(%var_13820, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1128 = cast(%var_13821, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1129 = cast(meta[relay.Constant][55] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1130 = cast(%var_13823, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1131 = cast(meta[relay.Constant][55] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1132 = cast(meta[relay.Constant][56] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1133 = reshape(%1127, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1134 = reshape(%1128, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %1135 = reshape(%1129, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1136 = reshape(%1130, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %1137 = reshape(%1131, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1138 = reshape(%1132, newshape=[8, 50]) /* ty=Tensor[(8, 50), float64] */;
  %1139 = @func_10858(%1133, %1134, %1135, %1136, %1137, %1138) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), bool], Tensor[(320), float32], Tensor[(1, 10, 10), float32], Tensor[(825), int32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(8, 50), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(60, 10), float64]) */;
  %1140 = @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1141 = @func_8343() /* ty=Tensor[(1, 10, 10), float64] */;
  %1142 = %1139.14;
  %1143 = %1140.0;
  (%1141, %1142, %var_13820, %var_13821, meta[relay.Constant][55] /* ty=Tensor[(825), int16] */, %var_13823, meta[relay.Constant][56] /* ty=Tensor[(400), float64] */, %1143)
}

def @func_17775(%var_17773: Tensor[(5, 165), int16]) -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(5, 9, 4), float32], Tensor[(5, 165), int16]) {
  %1144 = @func_9910() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), int32]) */;
  %1145 = @func_9731() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %1146 = cast(%var_17773, dtype="int16") /* ty=Tensor[(5, 165), int16] */;
  %1147 = reshape(%1146, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1148 = @func_11039(%1147) /* ty=(Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(2, 4, 6), float64], Tensor[(80), float32], Tensor[(825), int16], Tensor[(48), float64], Tensor[(1, 10, 10), float64]) */;
  %1149 = %1144.1;
  %1150 = %1145.0;
  %1151 = %1148.0;
  (%1149, %1150, %1151, %var_17773)
}

def @func_17497() -> (Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32]) {
  %1152 = @func_9321() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(180), float32]) */;
  %1153 = @func_16949() /* ty=Tensor[(1, 10, 10), float64] */;
  %1154 = %1152.1;
  (%1153, %1154)
}

def @func_18095() -> Tensor[(6, ?, 15), bool] {
  %1155 = fn () -> Tensor[(6, ?, 15), bool] {
    @func_14009() /* ty=Tensor[(6, ?, 15), bool] */
  };
  %1155() /* ty=Tensor[(6, ?, 15), bool] */
}

def @func_7099() -> (Tensor[(1, 10, 10), float64],) {
  @func_7097() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_14555() -> (Tensor[(1, 10, 10), float64],) {
  @func_14553() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_6479(%var_6474: Tensor[(4, 10, 10), float64]) -> (Tensor[(4, 10, 10), int16],) {
  %1156 = @func_5267() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %1157 = %1156.2;
  %1158 = cast(%1157, dtype="int16") /* ty=Tensor[(1, 10, 10), int16] */;
  %1159 = cast(%var_6474, dtype="int16") /* ty=Tensor[(4, 10, 10), int16] */;
  %1160 = subtract(%1158, %1159) /* ty=Tensor[(4, 10, 10), int16] */;
  (%1160,)
}

def @func_18011(%var_18003: Tensor[(12, 12, 12), uint16], %var_18004: Tensor[(12, 12, 12), uint16]) -> Tensor[(12, 12, 12), uint16] {
  %1161 = cast(%var_18004, dtype="uint16") /* ty=Tensor[(12, 12, 12), uint16] */;
  %1162 = shape_of(%var_18003, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1163 = cast(%var_18003, dtype="uint16") /* ty=Tensor[(12, 12, 12), uint16] */;
  %1164 = dyn.reshape(%1161, %1162, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%1163, %1164) /* ty=Tensor[(12, 12, 12), uint16] */
}

def @func_16797(%var_16795: Tensor[(2, 7, 16), uint32], %var_16796: Tensor[(2, 7, 16), uint32]) -> (Tensor[(2, 7, 16), uint32], Tensor[(1, 10, 10), float64]) {
  %1172 = fn (%var_16777: Tensor[(2, 7, 16), uint32], %var_16778: Tensor[(2, 7, 16), uint32]) -> (Tensor[(2, 7, 16), uint32], Tensor[(1, 10, 10), float64]) {
    %1165 = cast(%var_16778, dtype="uint32") /* ty=Tensor[(2, 7, 16), uint32] */;
    %1166 = shape_of(%var_16777, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1167 = cast(%var_16777, dtype="uint32") /* ty=Tensor[(2, 7, 16), uint32] */;
    %1168 = dyn.reshape(%1165, %1166, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1169 = @func_10653() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */;
    %1170 = bitwise_or(%1167, %1168) /* ty=Tensor[(2, 7, 16), uint32] */;
    %1171 = %1169.1;
    (%1170, %1171)
  };
  %1172(%var_16795, %var_16796) /* ty=(Tensor[(2, 7, 16), uint32], Tensor[(1, 10, 10), float64]) */
}

def @func_17706() -> Tensor[(?, 10, 10), uint16] {
  %1179 = fn () -> Tensor[(?, 10, 10), uint16] {
    %1173 = @func_7097() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %1174 = %1173.0;
    %1175 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 10, 10), float64] */, dtype="uint16") /* ty=Tensor[(1, 10, 10), uint16] */;
    %1176 = shape_of(%1174, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1177 = cast(%1174, dtype="uint16") /* ty=Tensor[(1, 10, 10), uint16] */;
    %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    bitwise_or(%1177, %1178) /* ty=Tensor[(?, 10, 10), uint16] */
  };
  %1179() /* ty=Tensor[(?, 10, 10), uint16] */
}

def @func_1838(%var_1836: Tensor[(15, 1, 11), int16], %var_1837: Tensor[(15, 5, 11), int16]) -> (Tensor[(15, 5, 11), int16],) {
  %1183 = fn (%var_1829: Tensor[(15, 1, 11), int16], %var_1830: Tensor[(15, 5, 11), int16]) -> (Tensor[(15, 5, 11), int16],) {
    %1180 = cast(%var_1829, dtype="int16") /* ty=Tensor[(15, 1, 11), int16] */;
    %1181 = cast(%var_1830, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
    %1182 = left_shift(%1180, %1181) /* ty=Tensor[(15, 5, 11), int16] */;
    (%1182,)
  };
  %1183(%var_1836, %var_1837) /* ty=(Tensor[(15, 5, 11), int16],) */
}

def @func_13440() -> (Tensor[(1, 10, 10), float64],) {
  %1186 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %1184 = @func_10473() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
    %1185 = %1184.0;
    (%1185,)
  };
  %1186() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_8796() -> (Tensor[(28), float64],) {
  @func_8794() /* ty=(Tensor[(28), float64],) */
}

def @func_16076(%var_16075: Tensor[(80), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(320), float32], Tensor[(1, 10, 10), float32], Tensor[(5, 60), float32], Tensor[(13, 16, 14), float64], Tensor[(2912), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(825), int16]) {
  %1209 = fn (%var_16064: Tensor[(80), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(320), float32], Tensor[(1, 10, 10), float32], Tensor[(5, 60), float32], Tensor[(13, 16, 14), float64], Tensor[(2912), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(825), int16]) {
    %1187 = @func_12073() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %1188 = cast(meta[relay.Constant][58] /* ty=Tensor[(320), float32] */, dtype="float32") /* ty=Tensor[(320), float32] */;
    %1189 = reshape(%1188, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %1190 = @func_13182(%1189) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(320), float32], Tensor[(165), int16]) */;
    %1191 = cast(meta[relay.Constant][59] /* ty=Tensor[(5, 60), float32] */, dtype="float32") /* ty=Tensor[(5, 60), float32] */;
    %1192 = reshape(%1191, newshape=[3, 10, 10]) /* ty=Tensor[(3, 10, 10), float32] */;
    %1193 = @func_12807(%1192) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(3, 10, 10), float32]) */;
    %1194 = cast(meta[relay.Constant][60] /* ty=Tensor[(2912), float64] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
    %1195 = cast(meta[relay.Constant][60] /* ty=Tensor[(2912), float64] */, dtype="float64") /* ty=Tensor[(2912), float64] */;
    %1196 = reshape(%1194, newshape=[13, 16, 14]) /* ty=Tensor[(13, 16, 14), float64] */;
    %1197 = reshape(%1195, newshape=[13, 16, 14]) /* ty=Tensor[(13, 16, 14), float64] */;
    %1198 = @func_10105(%1196, %1197) /* ty=(Tensor[(13, 16, 14), float64],) */;
    %1199 = cast(%var_16064, dtype="float64") /* ty=Tensor[(80), float64] */;
    %1200 = cast(meta[relay.Constant][61] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
    %1201 = reshape(%1199, newshape=[80]) /* ty=Tensor[(80), float64] */;
    %1202 = reshape(%1200, newshape=[825]) /* ty=Tensor[(825), int16] */;
    %1203 = @func_5468(%1201, %1202) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(165), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), float64]) */;
    %1204 = %1187.0;
    %1205 = %1190.1;
    %1206 = %1193.0;
    %1207 = %1198.0;
    %1208 = %1203.1;
    (%1204, %1205, meta[relay.Constant][58] /* ty=Tensor[(320), float32] */, %1206, meta[relay.Constant][59] /* ty=Tensor[(5, 60), float32] */, %1207, meta[relay.Constant][60] /* ty=Tensor[(2912), float64] */, %1208, %var_16064, meta[relay.Constant][61] /* ty=Tensor[(825), int16] */)
  };
  %1209(%var_16075) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(320), float32], Tensor[(1, 10, 10), float32], Tensor[(5, 60), float32], Tensor[(13, 16, 14), float64], Tensor[(2912), float64], Tensor[(1, 10, 10), float64], Tensor[(80), float64], Tensor[(825), int16]) */
}

def @func_4522() -> Tensor[(1, 10, 10), float64] {
  %1210 = @func_4227() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1210.0
}

def @func_14648() -> Tensor[(1, 10, 10), float64] {
  %1211 = @func_6762() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1211.0
}

def @func_6573() -> Tensor[(1, 10, 10), float64] {
  @func_6571() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_13851(%var_13848: Tensor[(48), float64], %var_13849: Tensor[(165), int16], %var_13850: Tensor[(320), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(448), float32], Tensor[(48), float64], Tensor[(165), int16], Tensor[(825), int16], Tensor[(320), float32], Tensor[(400), float64], Tensor[(1, 10, 10), float64]) {
  @func_13846(%var_13848, %var_13849, %var_13850) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(448), float32], Tensor[(48), float64], Tensor[(165), int16], Tensor[(825), int16], Tensor[(320), float32], Tensor[(400), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_8720(%var_8718: Tensor[(9, 10, 10), float64]) -> (Tensor[(9, 10, 10), uint8], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  @func_8717(%var_8718) /* ty=(Tensor[(9, 10, 10), uint8], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_14256() -> Tensor[(1, 10, 10), float64] {
  %1212 = @func_6162() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1212.0
}

def @func_10432(%var_10430: Tensor[(165), int16]) -> (Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(275, 3), int16], Tensor[(300, 2), float64]) {
  @func_10429(%var_10430) /* ty=(Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(275, 3), int16], Tensor[(300, 2), float64]) */
}

def @func_15160(%var_15128: Tensor[(10, 7, 15), float32]) -> (Tensor[(10, 7, 15), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %1213 = cast(%var_15128, dtype="float32") /* ty=Tensor[(10, 7, 15), float32] */;
  %1214 = sigmoid(%1213) /* ty=Tensor[(10, 7, 15), float32] */;
  %1215 = @func_14648() /* ty=Tensor[(1, 10, 10), float64] */;
  %1216 = @func_14256() /* ty=Tensor[(1, 10, 10), float64] */;
  %1217 = @func_6571() /* ty=Tensor[(1, 10, 10), float64] */;
  (%1214, %1215, %1216, %1217)
}

def @func_3152(%var_3114: Tensor[(10, 4, 2), float64], %var_3123: Tensor[(825), int16], %var_3146: Tensor[(165), int16]) -> (Tensor[(15, 5, 11), int16], Tensor[(825), int16], Tensor[(48), float64], Tensor[(10, 4, 2), float64], Tensor[(15, 5, 11), int16], Tensor[(165), int16]) {
  %1218 = cast(%var_3114, dtype="float64") /* ty=Tensor[(10, 4, 2), float64] */;
  %1219 = acosh(%1218) /* ty=Tensor[(10, 4, 2), float64] */;
  %1220 = cast(%1219, dtype="float32") /* ty=Tensor[(10, 4, 2), float32] */;
  %1221 = cast(%var_3123, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1222 = cast(meta[relay.Constant][62] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
  %1223 = reshape(%1220, newshape=[1, 8, 10]) /* ty=Tensor[(1, 8, 10), float32] */;
  %1224 = reshape(%1221, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
  %1225 = reshape(%1222, newshape=[48]) /* ty=Tensor[(48), float64] */;
  %1226 = @func_2680(%1223, %1224, %1225) /* ty=(Tensor[(1, 8, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165, 1), int16], Tensor[(5, 165), int16], Tensor[(2, 4, 6), float64], Tensor[(48), float64], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16], Tensor[(15, 5, 11), int16]) */;
  %1227 = cast(%var_3114, dtype="float64") /* ty=Tensor[(10, 4, 2), float64] */;
  %1228 = shape_of(%1219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1229 = cast(%1219, dtype="float64") /* ty=Tensor[(10, 4, 2), float64] */;
  %1230 = dyn.reshape(%1227, %1228, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1231 = cast(%var_3146, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1232 = %1226.9;
  %1233 = cast(%1232, dtype="int16") /* ty=Tensor[(15, 5, 11), int16] */;
  %1234 = reshape(%1231, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %1235 = reshape(%1233, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %1236 = @func_1835(%1234, %1235) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %1237 = mod(%1229, %1230) /* ty=Tensor[(10, 4, 2), float64] */;
  %1238 = %1236.0;
  (%1232, %var_3123, meta[relay.Constant][62] /* ty=Tensor[(48), float64] */, %1237, %1238, %var_3146)
}

def @func_10558(%var_10556: Tensor[(15, 16, 5), uint16], %var_10557: Tensor[(15, 16, 5), uint16]) -> (Tensor[(15, 16, 5), uint16],) {
  %1244 = fn (%var_10546: Tensor[(15, 16, 5), uint16], %var_10547: Tensor[(15, 16, 5), uint16]) -> (Tensor[(15, 16, 5), uint16],) {
    %1239 = cast(%var_10547, dtype="uint16") /* ty=Tensor[(15, 16, 5), uint16] */;
    %1240 = shape_of(%var_10546, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1241 = cast(%var_10546, dtype="uint16") /* ty=Tensor[(15, 16, 5), uint16] */;
    %1242 = dyn.reshape(%1239, %1240, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1243 = logical_xor(%1241, %1242) /* ty=Tensor[(15, 16, 5), uint16] */;
    (%1243,)
  };
  %1244(%var_10556, %var_10557) /* ty=(Tensor[(15, 16, 5), uint16],) */
}

def @func_4656() -> Tensor[(1, 10, 10), float64] {
  @func_4654() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_9720() -> (Tensor[(1, 10, 10), float64],) {
  %1245 = @func_4654() /* ty=Tensor[(1, 10, 10), float64] */;
  (%1245,)
}

def @func_17327() -> Tensor[(1, 10, 10), float64] {
  %1246 = @func_13566() /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64]) */;
  %1246.1
}

def @func_9323() -> (Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(180), float32]) {
  @func_9321() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 9, 4), float32], Tensor[(180), float32]) */
}

def @func_5559() -> (Tensor[(1, 10, 10), float64],) {
  %1247 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  (%1247,)
}

def @func_17329() -> Tensor[(1, 10, 10), float64] {
  @func_17327() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_12847(%var_12846: Tensor[(4, 10, 9), int16]) -> (Tensor[(4, 10, 9), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %1257 = fn (%var_12813: Tensor[(4, 10, 9), int16]) -> (Tensor[(4, 10, 9), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
    %1248 = cast(%var_12813, dtype="int16") /* ty=Tensor[(4, 10, 9), int16] */;
    %1249 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(4, 10, 9), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1250 = cast(meta[relay.Constant][63] /* ty=Tensor[(4, 10, 9), int16] */, dtype="int16") /* ty=Tensor[(4, 10, 9), int16] */;
    %1251 = dyn.reshape(%1248, %1249, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1252 = @func_6596() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
    %1253 = @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %1254 = bitwise_or(%1250, %1251) /* ty=Tensor[(4, 10, 9), int16] */;
    %1255 = %1252.0;
    %1256 = %1253.0;
    (%1254, %1255, %1256)
  };
  %1257(%var_12846) /* ty=(Tensor[(4, 10, 9), int16], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_8005() -> (Tensor[(1, 10, 10), float64], Tensor[(300, 2), bool], Tensor[(600), float64]) {
  @func_8003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(300, 2), bool], Tensor[(600), float64]) */
}

def @func_18080() -> (Tensor[(1, 10, 10), float64],) {
  %1258 = @func_13385() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(12, 8, 7), float32]) */;
  %1259 = %1258.0;
  (%1259,)
}

def @func_8794() -> (Tensor[(28), float64],) {
  %1260 = @func_8763() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, ?, 14), float64], Tensor[(28), float64], Tensor[(?, 10, 10), uint16]) */;
  %1261 = %1260.2;
  (%1261,)
}

def @func_18015(%var_18013: Tensor[(12, 12, 12), uint16], %var_18014: Tensor[(12, 12, 12), uint16]) -> Tensor[(12, 12, 12), uint16] {
  @func_18011(%var_18013, %var_18014) /* ty=Tensor[(12, 12, 12), uint16] */
}

def @func_15668(%var_15667: Tensor[(320), float32]) -> (Tensor[(?, 10, 10), uint16], Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(320), float32], Tensor[(825), int16], Tensor[(48), float64]) {
  %1274 = fn (%var_15656: Tensor[(320), float32]) -> (Tensor[(?, 10, 10), uint16], Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(320), float32], Tensor[(825), int16], Tensor[(48), float64]) {
    %1262 = @func_8763() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(2, ?, 14), float64], Tensor[(28), float64], Tensor[(?, 10, 10), uint16]) */;
    %1263 = @func_11253() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32]) */;
    %1264 = cast(%var_15656, dtype="float32") /* ty=Tensor[(320), float32] */;
    %1265 = cast(meta[relay.Constant][64] /* ty=Tensor[(825), int16] */, dtype="int16") /* ty=Tensor[(825), int16] */;
    %1266 = cast(meta[relay.Constant][65] /* ty=Tensor[(48), float64] */, dtype="float64") /* ty=Tensor[(48), float64] */;
    %1267 = reshape(%1264, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %1268 = reshape(%1265, newshape=[5, 165]) /* ty=Tensor[(5, 165), int16] */;
    %1269 = reshape(%1266, newshape=[1, 48]) /* ty=Tensor[(1, 48), float64] */;
    %1270 = @func_4319(%1267, %1268, %1269) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(320), float32], Tensor[(33, 5), int16], Tensor[(5, 165), bool], Tensor[(5, 165), bool], Tensor[(2, 4, 6), float64], Tensor[(1, 48), float64]) */;
    %1271 = %1262.3;
    %1272 = %1263.0;
    %1273 = %1270.3;
    (%1271, %1272, %1273, %var_15656, meta[relay.Constant][64] /* ty=Tensor[(825), int16] */, meta[relay.Constant][65] /* ty=Tensor[(48), float64] */)
  };
  %1274(%var_15667) /* ty=(Tensor[(?, 10, 10), uint16], Tensor[(1, 10, 10), float64], Tensor[(5, 165), bool], Tensor[(320), float32], Tensor[(825), int16], Tensor[(48), float64]) */
}

def @func_13085() -> (Tensor[(1, 10, 10), float32],) {
  @func_13083() /* ty=(Tensor[(1, 10, 10), float32],) */
}

def @func_14466(%var_14394: Tensor[(400), float64], %var_14395: Tensor[(280), uint64], %var_14404: Tensor[(165), int16], %var_14417: Tensor[(2, 160), float32]) -> (Tensor[(1, 10, 10), float32], Tensor[(1, 10, 10), float64], Tensor[(400), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(600), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(4, 10, 10), int16], Tensor[(2, 160), float32], Tensor[(1, 10, 10), float64]) {
  %1275 = @func_9731() /* ty=(Tensor[(1, 10, 10), float32],) */;
  %1276 = cast(%var_14394, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1277 = cast(%var_14395, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %1278 = cast(meta[relay.Constant][66] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %1279 = cast(meta[relay.Constant][67] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %1280 = reshape(%1276, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %1281 = reshape(%1277, newshape=[280]) /* ty=Tensor[(280), uint64] */;
  %1282 = reshape(%1278, newshape=[448, 1]) /* ty=Tensor[(448, 1), float32] */;
  %1283 = reshape(%1279, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %1284 = @func_7605(%1280, %1281, %1282, %1283) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64], Tensor[(4, 10, 10), int16], Tensor[(400), float64], Tensor[(12, 8, 7), float32], Tensor[(40, 2), float32], Tensor[(165), int16], Tensor[(280), uint64], Tensor[(448, 1), float32], Tensor[(165), int16], Tensor[(320), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(1, 10, 10), float64]) */;
  %1285 = cast(meta[relay.Constant][68] /* ty=Tensor[(2, 160), float32] */, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %1286 = cast(%var_14404, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1287 = cast(meta[relay.Constant][68] /* ty=Tensor[(2, 160), float32] */, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %1288 = reshape(%1285, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %1289 = reshape(%1286, newshape=[11, 15]) /* ty=Tensor[(11, 15), int16] */;
  %1290 = reshape(%1287, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %1291 = @func_3695(%1288, %1289, %1290) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) */;
  %1292 = cast(meta[relay.Constant][67] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %1293 = reshape(%1292, newshape=[6, 10, 10]) /* ty=Tensor[(6, 10, 10), float64] */;
  %1294 = @func_11146(%1293) /* ty=(Tensor[(6, 10, 10), int64], Tensor[(4, 10, 10), int16], Tensor[(400), float64]) */;
  %1295 = cast(%var_14417, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %1296 = shape_of(meta[relay.Constant][68] /* ty=Tensor[(2, 160), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1297 = cast(meta[relay.Constant][68] /* ty=Tensor[(2, 160), float32] */, dtype="float32") /* ty=Tensor[(2, 160), float32] */;
  %1298 = dyn.reshape(%1295, %1296, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1299 = %1275.0;
  %1300 = %1284.3;
  %1301 = %1291.6;
  %1302 = %1294.1;
  %1303 = mod(%1297, %1298) /* ty=Tensor[(2, 160), float32] */;
  %1304 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  (%1299, %1300, %var_14394, %var_14395, meta[relay.Constant][66] /* ty=Tensor[(448), float32] */, meta[relay.Constant][67] /* ty=Tensor[(600), float64] */, %1301, %var_14404, %1302, %1303, %1304)
}

def @func_14999() -> (Tensor[(1, 10, 10), float64],) {
  %1306 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %1305 = @func_6738() /* ty=Tensor[(1, 10, 10), float64] */;
    (%1305,)
  };
  %1306() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_4629() -> Tensor[(1, 10, 10), float64] {
  %1307 = fn () -> Tensor[(1, 10, 10), float64] {
    @func_4522() /* ty=Tensor[(1, 10, 10), float64] */
  };
  %1307() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_16141() -> (Tensor[(1, 12, 1), bool],) {
  %1311 = fn () -> (Tensor[(1, 12, 1), bool],) {
    %1308 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %1309 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 12, 1), bool] */, dtype="bool") /* ty=Tensor[(1, 12, 1), bool] */;
    %1310 = logical_and(%1308, %1309) /* ty=Tensor[(1, 12, 1), bool] */;
    (%1310,)
  };
  %1311() /* ty=(Tensor[(1, 12, 1), bool],) */
}

def @func_9722() -> (Tensor[(1, 10, 10), float64],) {
  @func_9720() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_8957() -> (Tensor[(1, 10, 10), float64],) {
  @func_8955() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_9276() -> (Tensor[(1, 10, 10), float64],) {
  %1314 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %1312 = @func_8419() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %1313 = %1312.0;
    (%1313,)
  };
  %1314() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_9512() -> (Tensor[(1, 10, 10), float64],) {
  %1316 = fn () -> (Tensor[(1, 10, 10), float64],) {
    %1315 = @func_6921() /* ty=Tensor[(1, 10, 10), float64] */;
    (%1315,)
  };
  %1316() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_3700(%var_3697: Tensor[(5, 4, 16), float32], %var_3698: Tensor[(11, 15), int16], %var_3699: Tensor[(5, 4, 16), float32]) -> (Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) {
  @func_3695(%var_3697, %var_3698, %var_3699) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) */
}

def @func_14617() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %1317 = @func_7003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %1318 = @func_12138() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1319 = %1317.1;
  %1320 = %1318.0;
  (%1319, %1320)
}

def @func_14258() -> Tensor[(1, 10, 10), float64] {
  @func_14256() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_15163(%var_15161: Tensor[(10, 7, 15), float32]) -> (Tensor[(10, 7, 15), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  @func_15160(%var_15161) /* ty=(Tensor[(10, 7, 15), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_8003() -> (Tensor[(1, 10, 10), float64], Tensor[(300, 2), bool], Tensor[(600), float64]) {
  %1321 = @func_7047() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1322 = cast(meta[relay.Constant][70] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %1323 = cast(meta[relay.Constant][70] /* ty=Tensor[(600), float64] */, dtype="int8") /* ty=Tensor[(600), int8] */;
  %1324 = reshape(%1322, newshape=[300, 2]) /* ty=Tensor[(300, 2), float64] */;
  %1325 = reshape(%1323, newshape=[300, 2]) /* ty=Tensor[(300, 2), int8] */;
  %1326 = @func_6665(%1324, %1325) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(6, 10, 10), bool], Tensor[(?, 10, 10), bool], Tensor[(300, 2), bool]) */;
  %1327 = %1321.0;
  %1328 = %1326.5;
  (%1327, %1328, meta[relay.Constant][70] /* ty=Tensor[(600), float64] */)
}

def @func_13979() -> Tensor[(1, 10, 10), float64] {
  %1329 = @func_6785() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */;
  %1329.0
}

def @func_5860(%var_5859: Tensor[(2, 1, 14), float64]) -> Tensor[(2, ?, 14), float64] {
  %1334 = fn (%var_5844: Tensor[(2, 1, 14), float64]) -> Tensor[(2, ?, 14), float64] {
    %1330 = cast(%var_5844, dtype="float64") /* ty=Tensor[(2, 1, 14), float64] */;
    %1331 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(2, 1, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1332 = cast(meta[relay.Constant][71] /* ty=Tensor[(2, 1, 14), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 14), float64] */;
    %1333 = dyn.reshape(%1330, %1331, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%1332, %1333) /* ty=Tensor[(2, ?, 14), float64] */
  };
  %1334(%var_5859) /* ty=Tensor[(2, ?, 14), float64] */
}

def @func_13068(%var_12955: Tensor[(2, 10, 10), float64], %var_13014: Tensor[(55, 15), int16]) -> (Tensor[(2, 10, 10), bool], Tensor[(165), int16], Tensor[(400), float64], Tensor[(280), uint64], Tensor[(448), float32], Tensor[(600), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(165), int16], Tensor[(55, 15), int16], Tensor[(12, 8, 7), float32], Tensor[(4, 10, 10), int16]) {
  %1335 = @func_5544() /* ty=Tensor[(1, 10, 10), float64] */;
  %1336 = cast(%1335, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
  %1337 = cast(%var_12955, dtype="bool") /* ty=Tensor[(2, 10, 10), bool] */;
  %1338 = cast(meta[relay.Constant][72] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1339 = cast(meta[relay.Constant][73] /* ty=Tensor[(280), uint64] */, dtype="uint64") /* ty=Tensor[(280), uint64] */;
  %1340 = cast(meta[relay.Constant][74] /* ty=Tensor[(448), float32] */, dtype="float32") /* ty=Tensor[(448), float32] */;
  %1341 = cast(meta[relay.Constant][75] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
  %1342 = reshape(%1338, newshape=[400]) /* ty=Tensor[(400), float64] */;
  %1343 = reshape(%1339, newshape=[280]) /* ty=Tensor[(280), uint64] */;
  %1344 = reshape(%1340, newshape=[448, 1]) /* ty=Tensor[(448, 1), float32] */;
  %1345 = reshape(%1341, newshape=[600]) /* ty=Tensor[(600), float64] */;
  %1346 = @func_7605(%1342, %1343, %1344, %1345) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(825), int16], Tensor[(1, 10, 10), float64], Tensor[(4, 10, 10), int16], Tensor[(400), float64], Tensor[(12, 8, 7), float32], Tensor[(40, 2), float32], Tensor[(165), int16], Tensor[(280), uint64], Tensor[(448, 1), float32], Tensor[(165), int16], Tensor[(320), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(1, 10, 10), float64]) */;
  %1347 = @func_7097() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1348 = %1346.11;
  %1349 = cast(%1348, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1350 = cast(%var_13014, dtype="int16") /* ty=Tensor[(55, 15), int16] */;
  %1351 = reshape(%1349, newshape=[1, 165]) /* ty=Tensor[(1, 165), int16] */;
  %1352 = reshape(%1350, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1353 = @func_11821(%1351, %1352) /* ty=(Tensor[(5, 9, 4), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(1, 165), int16], Tensor[(825), int16], Tensor[(165), int16], Tensor[(80), float64]) */;
  %1354 = @func_9664() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(12, 8, 7), float32]) */;
  %1355 = cast(meta[relay.Constant][72] /* ty=Tensor[(400), float64] */, dtype="float64") /* ty=Tensor[(400), float64] */;
  %1356 = reshape(%1355, newshape=[4, 10, 10]) /* ty=Tensor[(4, 10, 10), float64] */;
  %1357 = @func_6479(%1356) /* ty=(Tensor[(4, 10, 10), int16],) */;
  %1358 = logical_and(%1336, %1337) /* ty=Tensor[(2, 10, 10), bool] */;
  %1359 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
  %1360 = %1347.0;
  %1361 = %1353.6;
  %1362 = %1354.1;
  %1363 = %1357.0;
  (%1358, %1348, meta[relay.Constant][72] /* ty=Tensor[(400), float64] */, meta[relay.Constant][73] /* ty=Tensor[(280), uint64] */, meta[relay.Constant][74] /* ty=Tensor[(448), float32] */, meta[relay.Constant][75] /* ty=Tensor[(600), float64] */, %1359, %1360, %1361, %var_13014, %1362, %1363)
}

def @func_7259() -> (Tensor[(1, 10, 10), float64],) {
  @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */
}

def @func_14232() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %1368 = fn () -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
    %1364 = @func_13132() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(672), float32], Tensor[(1, 10, 10), float32], Tensor[(7, 16, 6), float32]) */;
    %1365 = %1364.0;
    %1366 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
    %1367 = @func_6571() /* ty=Tensor[(1, 10, 10), float64] */;
    (%1365, %1366, %1367)
  };
  %1368() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_16243(%var_16241: Tensor[(250, 2), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(5, 10, 10), float32], Tensor[(250, 2), float64], Tensor[(1, 10, 10), float64]) {
  @func_16240(%var_16241) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(5, 10, 10), float32], Tensor[(250, 2), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_16950() -> Tensor[(1, 10, 10), float64] {
  %1370 = fn () -> Tensor[(1, 10, 10), float64] {
    %1369 = @func_14087() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %1369.0
  };
  %1370() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_17386(%var_17374: Tensor[(13, 15, 11), uint32], %var_17375: Tensor[(13, 15, 11), uint32]) -> (Tensor[(13, 15, 11), bool], Tensor[(1, 10, 10), float64]) {
  %1371 = cast(%var_17375, dtype="bool") /* ty=Tensor[(13, 15, 11), bool] */;
  %1372 = shape_of(%var_17374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1373 = cast(%var_17374, dtype="bool") /* ty=Tensor[(13, 15, 11), bool] */;
  %1374 = dyn.reshape(%1371, %1372, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1375 = greater_equal(%1373, %1374) /* ty=Tensor[(13, 15, 11), bool] */;
  %1376 = @func_4522() /* ty=Tensor[(1, 10, 10), float64] */;
  (%1375, %1376)
}

def @func_13981() -> Tensor[(1, 10, 10), float64] {
  @func_13979() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_16399() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  %1377 = @func_6162() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1378 = @func_6162() /* ty=(Tensor[(1, 10, 10), float64],) */;
  %1379 = @func_4628() /* ty=Tensor[(1, 10, 10), float64] */;
  %1380 = %1377.0;
  %1381 = %1378.0;
  (%1379, %1380, %1381)
}

def @func_7189(%var_7188: Tensor[(12, 4), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64]) {
  %1394 = fn (%var_7165: Tensor[(12, 4), float64]) -> (Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64]) {
    %1382 = cast(meta[relay.Constant][76] /* ty=Tensor[(600), float64] */, dtype="float64") /* ty=Tensor[(600), float64] */;
    %1383 = cast(meta[relay.Constant][76] /* ty=Tensor[(600), float64] */, dtype="int8") /* ty=Tensor[(600), int8] */;
    %1384 = reshape(%1382, newshape=[300, 2]) /* ty=Tensor[(300, 2), float64] */;
    %1385 = reshape(%1383, newshape=[300, 2]) /* ty=Tensor[(300, 2), int8] */;
    %1386 = @func_6665(%1384, %1385) /* ty=(Tensor[(12, 8, 7), float32], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float32], Tensor[(6, 10, 10), bool], Tensor[(?, 10, 10), bool], Tensor[(300, 2), bool]) */;
    %1387 = cast(%var_7165, dtype="float64") /* ty=Tensor[(12, 4), float64] */;
    %1388 = reshape(%1387, newshape=[2, 4, 6]) /* ty=Tensor[(2, 4, 6), float64] */;
    %1389 = @func_32(%1388) /* ty=(Tensor[(2, 4, 6), float64],) */;
    %1390 = @func_6837() /* ty=Tensor[(1, 10, 10), float64] */;
    %1391 = %1386.3;
    %1392 = %1389.0;
    %1393 = @func_6921() /* ty=Tensor[(1, 10, 10), float64] */;
    (%1390, %1391, meta[relay.Constant][76] /* ty=Tensor[(600), float64] */, %1392, %var_7165, %1393)
  };
  %1394(%var_7188) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(6, 10, 10), bool], Tensor[(600), float64], Tensor[(2, 4, 6), float64], Tensor[(12, 4), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_5152(%var_5107: Tensor[(4, 14, 5), uint64], %var_5108: Tensor[(4, 14, 5), uint64], %var_5113: Tensor[(448), float32], %var_5114: Tensor[(80), float64], %var_5115: Tensor[(825), int16], %var_5116: Tensor[(165), int16], %var_5150: Tensor[(320), float32]) -> (Tensor[(4, 14, 5), uint64], Tensor[(15, 5, 11), int16], Tensor[(448), float32], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(11, 15), int16], Tensor[(320), float32]) {
  %1395 = cast(%var_5108, dtype="uint64") /* ty=Tensor[(4, 14, 5), uint64] */;
  %1396 = shape_of(%var_5107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1397 = cast(%var_5107, dtype="uint64") /* ty=Tensor[(4, 14, 5), uint64] */;
  %1398 = dyn.reshape(%1395, %1396, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1399 = cast(%var_5113, dtype="float32") /* ty=Tensor[(448), float32] */;
  %1400 = cast(%var_5114, dtype="float64") /* ty=Tensor[(80), float64] */;
  %1401 = cast(%var_5115, dtype="int16") /* ty=Tensor[(825), int16] */;
  %1402 = cast(%var_5116, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1403 = cast(%var_5113, dtype="float32") /* ty=Tensor[(448), float32] */;
  %1404 = reshape(%1399, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %1405 = reshape(%1400, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %1406 = reshape(%1401, newshape=[825]) /* ty=Tensor[(825), int16] */;
  %1407 = reshape(%1402, newshape=[165]) /* ty=Tensor[(165), int16] */;
  %1408 = reshape(%1403, newshape=[14, 16, 2]) /* ty=Tensor[(14, 16, 2), float32] */;
  %1409 = @func_4479(%1404, %1405, %1406, %1407, %1408) /* ty=(Tensor[(48), float64], Tensor[(80), float64], Tensor[(825), int16], Tensor[(165), int16], Tensor[(15, 5, 11), int16], Tensor[(14, 16, 2), bool], Tensor[(165, 1), int16], Tensor[(14, 16, 2), float64], Tensor[(1, 10, 10), float64]) */;
  %1410 = cast(%var_5150, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1411 = cast(%var_5116, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1412 = cast(%var_5150, dtype="float32") /* ty=Tensor[(320), float32] */;
  %1413 = reshape(%1410, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %1414 = reshape(%1411, newshape=[11, 15]) /* ty=Tensor[(11, 15), int16] */;
  %1415 = reshape(%1412, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
  %1416 = @func_3695(%1413, %1414, %1415) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) */;
  %1417 = bitwise_and(%1397, %1398) /* ty=Tensor[(4, 14, 5), uint64] */;
  %1418 = %1409.4;
  %1419 = %1416.1;
  (%1417, %1418, %var_5113, %var_5114, %var_5115, %var_5116, %1419, %var_5150)
}

def @func_16401() -> (Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) {
  @func_16399() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64], Tensor[(1, 10, 10), float64]) */
}

def @func_10429(%var_10405: Tensor[(165), int16]) -> (Tensor[(1, 10, 10), float32], Tensor[(15, 5, 11), int16], Tensor[(165), int16], Tensor[(275, 3), int16], Tensor[(300, 2), float64]) {
  %1420 = @func_9664() /* ty=(Tensor[(1, 10, 10), float32], Tensor[(12, 8, 7), float32]) */;
  %1421 = cast(%var_10405, dtype="int16") /* ty=Tensor[(165), int16] */;
  %1422 = cast(meta[relay.Constant][77] /* ty=Tensor[(275, 3), int16] */, dtype="int16") /* ty=Tensor[(275, 3), int16] */;
  %1423 = reshape(%1421, newshape=[15, 1, 11]) /* ty=Tensor[(15, 1, 11), int16] */;
  %1424 = reshape(%1422, newshape=[15, 5, 11]) /* ty=Tensor[(15, 5, 11), int16] */;
  %1425 = @func_1835(%1423, %1424) /* ty=(Tensor[(15, 5, 11), int16],) */;
  %1426 = @func_8003() /* ty=(Tensor[(1, 10, 10), float64], Tensor[(300, 2), bool], Tensor[(600), float64]) */;
  %1427 = %1426.1;
  %1428 = cast(%1427, dtype="float32") /* ty=Tensor[(300, 2), float32] */;
  %1429 = cos(%1428) /* ty=Tensor[(300, 2), float32] */;
  %1430 = cast(%1427, dtype="bool") /* ty=Tensor[(300, 2), bool] */;
  %1431 = shape_of(%1429, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1432 = cast(%1429, dtype="bool") /* ty=Tensor[(300, 2), bool] */;
  %1433 = dyn.reshape(%1430, %1431, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1434 = logical_or(%1432, %1433) /* ty=Tensor[(300, 2), bool] */;
  %1435 = cast(%1434, dtype="float64") /* ty=Tensor[(300, 2), float64] */;
  %1436 = %1420.0;
  %1437 = %1425.0;
  %1438 = asin(%1435) /* ty=Tensor[(300, 2), float64] */;
  (%1436, %1437, %var_10405, meta[relay.Constant][77] /* ty=Tensor[(275, 3), int16] */, %1438)
}

def @func_6922() -> Tensor[(1, 10, 10), float64] {
  %1440 = fn () -> Tensor[(1, 10, 10), float64] {
    %1439 = @func_5559() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %1439.0
  };
  %1440() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_10981(%var_10979: Tensor[(13, 10, 10), float64], %var_10980: Tensor[(15, 10, 10), float64]) -> (Tensor[(13, 10, 10), uint64], Tensor[(15, 10, 10), float32], Tensor[(15, 10, 10), bool], Tensor[(15, 10, 10), uint32]) {
  %1456 = fn (%var_10918: Tensor[(13, 10, 10), float64], %var_10928: Tensor[(15, 10, 10), float64]) -> (Tensor[(13, 10, 10), uint64], Tensor[(15, 10, 10), float32], Tensor[(15, 10, 10), bool], Tensor[(15, 10, 10), uint32]) {
    %1441 = @func_9275() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %1442 = %1441.0;
    %1443 = cast(%1442, dtype="uint64") /* ty=Tensor[(1, 10, 10), uint64] */;
    %1444 = cast(%var_10918, dtype="uint64") /* ty=Tensor[(13, 10, 10), uint64] */;
    %1445 = cast(%1442, dtype="float32") /* ty=Tensor[(1, 10, 10), float32] */;
    %1446 = cast(%var_10928, dtype="float32") /* ty=Tensor[(15, 10, 10), float32] */;
    %1447 = @func_7727() /* ty=Tensor[(1, 10, 10), float64] */;
    %1448 = cast(%var_10928, dtype="bool") /* ty=Tensor[(15, 10, 10), bool] */;
    %1449 = cast(%1447, dtype="bool") /* ty=Tensor[(1, 10, 10), bool] */;
    %1450 = cast(%1447, dtype="uint32") /* ty=Tensor[(1, 10, 10), uint32] */;
    %1451 = cast(%var_10928, dtype="uint32") /* ty=Tensor[(15, 10, 10), uint32] */;
    %1452 = subtract(%1443, %1444) /* ty=Tensor[(13, 10, 10), uint64] */;
    %1453 = floor_mod(%1445, %1446) /* ty=Tensor[(15, 10, 10), float32] */;
    %1454 = logical_or(%1448, %1449) /* ty=Tensor[(15, 10, 10), bool] */;
    %1455 = subtract(%1450, %1451) /* ty=Tensor[(15, 10, 10), uint32] */;
    (%1452, %1453, %1454, %1455)
  };
  %1456(%var_10979, %var_10980) /* ty=(Tensor[(13, 10, 10), uint64], Tensor[(15, 10, 10), float32], Tensor[(15, 10, 10), bool], Tensor[(15, 10, 10), uint32]) */
}

def @func_10044() -> Tensor[(1, 10, 10), float64] {
  %1458 = fn () -> Tensor[(1, 10, 10), float64] {
    %1457 = @func_7257() /* ty=(Tensor[(1, 10, 10), float64],) */;
    %1457.0
  };
  %1458() /* ty=Tensor[(1, 10, 10), float64] */
}

def @func_13184(%var_13183: Tensor[(320), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(320), float32], Tensor[(165), int16]) {
  %1468 = fn (%var_13160: Tensor[(320), float32]) -> (Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(320), float32], Tensor[(165), int16]) {
    %1459 = cast(%var_13160, dtype="float32") /* ty=Tensor[(320), float32] */;
    %1460 = cast(meta[relay.Constant][78] /* ty=Tensor[(165), int16] */, dtype="int16") /* ty=Tensor[(165), int16] */;
    %1461 = cast(%var_13160, dtype="float32") /* ty=Tensor[(320), float32] */;
    %1462 = reshape(%1459, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
    %1463 = reshape(%1460, newshape=[11, 15]) /* ty=Tensor[(11, 15), int16] */;
    %1464 = reshape(%1461, newshape=[5, 4, 16]) /* ty=Tensor[(5, 4, 16), float32] */;
    %1465 = @func_3695(%1462, %1463, %1464) /* ty=(Tensor[(15, 5, 11), int16], Tensor[(11, 15), int16], Tensor[(5, 165), int16], Tensor[(165, 1), int16], Tensor[(80), float32], Tensor[(48), float64], Tensor[(825), int16], Tensor[(2, 4, 6), float64], Tensor[(5, 4, 16), uint8]) */;
    %1466 = @func_5577() /* ty=Tensor[(1, 10, 10), float64] */;
    %1467 = %1465.5;
    (%1466, %1467, %var_13160, meta[relay.Constant][78] /* ty=Tensor[(165), int16] */)
  };
  %1468(%var_13183) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(48), float64], Tensor[(320), float32], Tensor[(165), int16]) */
}

def @func_9476() -> (Tensor[(1, 10, 10), float32],) {
  %1470 = fn () -> (Tensor[(1, 10, 10), float32],) {
    %1469 = @func_7928() /* ty=Tensor[(1, 10, 10), float32] */;
    (%1469,)
  };
  %1470() /* ty=(Tensor[(1, 10, 10), float32],) */
}

def @func_12487(%var_12483: Tensor[(448), float32], %var_12484: Tensor[(825), int16], %var_12485: Tensor[(165), int16], %var_12486: Tensor[(1200), uint16]) -> (Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), float64], Tensor[(448), float32], Tensor[(80), float64], Tensor[(165), int16], Tensor[(15, 16, 5), uint16], Tensor[(1200), uint16], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), bool], Tensor[(320), float32], Tensor[(165, 825), bool], Tensor[(1, 10, 10), float64]) {
  @func_12481(%var_12483, %var_12484, %var_12485, %var_12486) /* ty=(Tensor[(1, 10, 10), float64], Tensor[(?, 10, 10), float64], Tensor[(448), float32], Tensor[(80), float64], Tensor[(165), int16], Tensor[(15, 16, 5), uint16], Tensor[(1200), uint16], Tensor[(1, 10, 10), float64], Tensor[(15, 5, 11), bool], Tensor[(320), float32], Tensor[(165, 825), bool], Tensor[(1, 10, 10), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen887/build/output.py:4278: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen887/build/output.py", line 4283, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(195) tvmgen_default_fused_rsqrt_kernel0(float* __restrict__ tensor, float* __restrict__ placeholder) {
  tensor[(((int)threadIdx.x))] = (1.000000e+00f / sqrtf(placeholder[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


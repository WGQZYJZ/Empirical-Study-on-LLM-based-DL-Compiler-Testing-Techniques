import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_124 = relay.var("var_124", dtype = "int16", shape = (2, 3))#candidate|124|(2, 3)|var|int16
var_125 = relay.var("var_125", dtype = "int16", shape = (2, 3))#candidate|125|(2, 3)|var|int16
bop_126 = relay.bitwise_or(var_124.astype('int16'), relay.reshape(var_125.astype('int16'), relay.shape_of(var_124))) # shape=(2, 3)
output = relay.Tuple([bop_126,])
output2 = relay.Tuple([bop_126,])
func_139 = relay.Function([var_124,var_125,], output)
mod['func_139'] = func_139
mod = relay.transform.InferType()(mod)
var_140 = relay.var("var_140", dtype = "int16", shape = (2, 3))#candidate|140|(2, 3)|var|int16
var_141 = relay.var("var_141", dtype = "int16", shape = (2, 3))#candidate|141|(2, 3)|var|int16
output = func_139(var_140,var_141,)
func_142 = relay.Function([var_140,var_141,], output)
mutated_mod['func_142'] = func_142
mutated_mod = relay.transform.InferType()(mutated_mod)
const_193 = relay.const([[[8,8,10],[8,-3,6],[-6,5,4],[9,9,-2],[-5,-3,10],[2,1,-7],[-9,4,1]],[[6,-1,-1],[-4,6,2],[10,8,10],[3,-7,-3],[5,9,-6],[1,8,-4],[-5,-1,4]],[[9,-3,-9],[-9,6,-7],[10,10,3],[-10,1,4],[-8,4,2],[-5,3,-1],[2,5,4]],[[6,3,-5],[-4,-1,-4],[-10,6,4],[-3,-2,-8],[9,1,-7],[-5,8,10],[6,-10,-9]],[[-4,9,-3],[1,-3,-2],[-3,10,-4],[-8,-1,-9],[-2,5,4],[6,-2,-1],[9,1,-2]],[[-10,4,1],[-6,-7,7],[-6,-10,3],[-4,5,6],[-3,5,-5],[-6,4,-5],[-8,-3,-6]],[[10,3,4],[6,-5,-5],[7,5,1],[1,-5,9],[-9,10,1],[-4,9,-5],[-3,2,3]]], dtype = "int8")#candidate|193|(7, 7, 3)|const|int8
var_194 = relay.var("var_194", dtype = "int8", shape = (7, 7, 3))#candidate|194|(7, 7, 3)|var|int8
bop_195 = relay.greater(const_193.astype('bool'), relay.reshape(var_194.astype('bool'), relay.shape_of(const_193))) # shape=(7, 7, 3)
func_139_call = mod.get_global_var('func_139')
func_142_call = mutated_mod.get_global_var('func_142')
const_227 = relay.const([-8,4,-1,4,-1,-2], dtype = "int16")#candidate|227|(6,)|const|int16
call_226 = relay.TupleGetItem(func_139_call(relay.reshape(const_227.astype('int16'), [2, 3]), relay.reshape(const_227.astype('int16'), [2, 3]), ), 0)
call_228 = relay.TupleGetItem(func_142_call(relay.reshape(const_227.astype('int16'), [2, 3]), relay.reshape(const_227.astype('int16'), [2, 3]), ), 0)
output = relay.Tuple([bop_195,call_226,const_227,])
output2 = relay.Tuple([bop_195,call_228,const_227,])
func_240 = relay.Function([var_194,], output)
mod['func_240'] = func_240
mod = relay.transform.InferType()(mod)
var_241 = relay.var("var_241", dtype = "int8", shape = (7, 7, 3))#candidate|241|(7, 7, 3)|var|int8
output = func_240(var_241)
func_242 = relay.Function([var_241], output)
mutated_mod['func_242'] = func_242
mutated_mod = relay.transform.InferType()(mutated_mod)
const_261 = relay.const([[[5.249579,-3.270841,-3.742366,-4.057911,-2.734751,5.357568,7.698545,-0.788885,1.166395,4.392165,-1.801330,5.789727,3.109907],[-2.011782,2.778133,5.444129,8.404706,1.262240,-2.970208,6.713568,0.177684,-0.354882,6.344583,-9.837573,2.707450,4.943934],[8.857301,7.226748,2.686591,5.101828,7.013323,9.679461,-2.026593,-8.676549,6.173736,3.292344,8.981722,6.699829,-8.256433]],[[2.719676,6.919509,8.823383,3.095012,3.230293,-8.196063,0.475420,7.768687,9.073374,9.502406,-6.799927,7.028607,-8.173537],[-4.812808,8.724812,5.812403,-9.644969,0.005520,1.247156,-2.731321,-5.140487,4.821042,-5.574226,-9.816921,-6.632352,-2.070363],[-1.788923,-6.345070,-7.053385,-8.966176,2.783435,-7.960394,-0.356767,-2.986930,-3.902201,7.800704,3.831258,-5.293087,8.224624]],[[7.610398,9.558747,8.170075,1.308928,-9.620597,-8.522082,-0.255176,-5.768913,5.611094,-3.070175,-3.998674,-8.300678,5.536579],[-9.914469,1.395480,3.148680,1.556826,-8.869072,-6.092220,-2.020797,2.538106,-3.792694,-6.066055,-4.824317,0.749229,0.636130],[0.801026,9.865305,-7.811806,5.610979,-5.906972,-6.764694,0.026654,-3.897413,0.683361,-0.866990,0.575171,-7.962684,0.342163]],[[5.435070,2.041203,-1.638039,-5.311722,-4.887168,2.126146,-6.747035,-8.252329,2.341767,-4.128026,9.580489,-4.232896,-9.794905],[-2.763590,7.284892,-9.349928,4.515137,-4.899772,-2.224083,0.560455,6.530735,-8.396310,-6.922795,-3.972299,-7.209114,7.101496],[-1.535891,8.625981,7.884040,3.165550,9.755664,3.607670,-0.936556,-8.767784,-9.679209,7.550564,-2.549115,-7.153810,-7.239480]],[[-8.310729,2.366691,-0.778705,8.848520,-1.848029,-5.206892,-7.158294,7.574745,-1.750621,8.427931,0.912893,-6.629587,1.078491],[-8.336088,-8.104405,-4.633208,-6.163837,-8.554113,-1.299723,-3.202842,3.275723,-6.225429,1.728632,0.217404,3.128050,-3.239706],[2.396941,6.017787,-4.282330,-7.496096,-1.841395,6.381056,-1.852149,-9.586047,-1.564244,4.182133,9.801777,5.186671,-9.062492]],[[-0.290510,1.532290,-9.512296,0.223533,9.978944,7.933725,-5.239299,-8.261137,-9.466769,-1.306841,5.684129,-1.607665,-8.727035],[2.346728,-9.440776,-6.040223,8.539766,0.791485,-8.373352,-8.046430,-3.304138,4.131293,2.658355,2.311954,-0.077295,-5.819335],[-7.183678,6.086678,-7.315183,-9.640430,-3.236750,9.698807,-2.730649,4.351321,-7.625139,-2.714595,7.977095,2.089740,5.140360]],[[1.695245,-2.088896,-1.312871,-4.277661,1.421437,-5.937739,1.791451,3.514052,-7.274639,5.804973,-7.071803,2.915631,8.301392],[9.568925,-3.249876,9.009467,-4.248447,4.232313,-8.066309,-8.365162,1.723861,6.013207,9.364161,5.531157,-5.231859,1.352712],[-1.588032,1.220862,-2.709669,0.546605,4.082365,-9.029387,-6.631463,-2.937445,1.099045,7.084288,6.467632,7.493475,9.079163]],[[1.701000,9.433449,-4.765885,0.730885,4.363170,-8.161574,-8.500976,4.167955,-6.957549,8.372650,-5.085386,8.993830,3.223257],[-6.272823,-8.215423,7.240339,4.023689,-4.431688,8.466255,3.294560,6.221126,8.305667,-6.311681,-6.896932,-1.637881,1.711482],[-0.570557,-2.832793,-1.670411,-9.527200,-1.556862,-4.784282,5.647890,-5.403875,-7.571603,7.816151,3.050425,-7.301813,-2.053329]],[[-6.494492,-0.743989,4.729265,6.559596,-2.513889,4.495761,-0.772876,-3.368837,0.448356,7.719073,-3.809625,-9.337119,-3.498621],[-7.067119,5.191414,6.572347,-2.663370,3.358804,6.219836,5.612457,-6.779158,-9.091376,1.386692,5.617341,-6.612614,-9.379458],[1.774410,2.310085,-8.233949,-3.166198,-9.404600,-8.570807,3.202358,-5.746593,-5.240397,-7.888042,-9.573061,6.646472,4.879541]],[[1.958467,1.731744,2.752244,-2.423891,-5.419642,-8.901854,-1.426640,1.035547,2.323567,-1.292369,6.620651,-4.864398,-1.530726],[-0.950288,-3.581991,-5.948350,-1.723189,2.112693,-9.416823,-2.065038,-0.854140,4.533250,9.099202,3.436003,6.093858,-3.885559],[-0.886998,-5.670309,-7.095899,-1.058232,5.268227,-2.078646,8.607789,7.686329,9.604158,-1.196328,-9.349623,-8.735839,-7.554853]],[[4.916600,0.266015,-0.916185,-0.031301,-9.213428,-0.177987,9.634952,-9.331975,6.767616,1.504159,1.339719,-7.327410,-9.952391],[-3.992692,-0.146801,7.796633,-3.709612,8.397723,-9.374716,-5.393050,-1.151540,-9.321992,-2.988222,6.767653,-3.009948,-9.791144],[2.770317,8.733506,7.867434,-6.989162,4.327311,0.442248,5.677636,-2.990515,-6.112870,-5.463039,1.037392,-2.469961,6.563845]],[[3.071718,-6.819956,-3.253410,-6.878469,-6.770719,4.698729,1.643372,-4.870071,-5.944945,-1.909137,8.443781,0.477943,2.449535],[-3.483017,-1.672141,-9.659844,6.484735,9.584074,-1.013631,-3.463733,-2.017711,-6.313638,-5.655016,-2.734769,-0.708043,3.150850],[-6.138642,9.517810,-6.528569,9.335391,-6.434431,-3.106748,1.493947,9.598294,-9.725595,-4.973979,6.444064,-3.806445,3.958388]],[[-0.759993,9.702177,4.617276,5.528159,-4.915805,0.550952,-6.866833,3.315991,1.822913,0.176068,-8.482325,-8.606309,-6.167839],[7.988884,6.736532,7.870418,-6.380052,-9.031624,-2.756088,6.227710,0.734883,4.786389,-9.000420,-7.591117,2.623857,-2.308768],[9.388737,-6.421026,-0.045579,3.486126,-8.065695,3.152299,8.133714,-4.219506,4.483119,-9.188460,-0.289618,3.948742,-7.176797]],[[7.351286,8.856447,-4.284517,-1.530878,-2.699736,-3.880389,1.636948,-8.922158,-9.038912,-2.216836,-3.854370,-6.049934,-9.265200],[-9.213247,1.569335,0.370042,-3.065370,-7.777196,-9.288468,7.843111,4.983775,-1.478054,-4.219326,1.500231,-7.422436,8.726136],[-0.386265,-5.251099,3.049573,-7.698820,9.405828,4.455617,-4.857764,-0.668518,-7.852759,4.360313,-7.017829,-4.976692,-0.342417]],[[9.785492,0.610406,8.084109,-0.587900,-1.596062,-7.311578,-2.780197,6.041409,2.562030,3.726671,-1.254951,4.539465,1.515376],[9.759324,-7.028529,5.165777,-0.239018,0.650466,-5.083255,8.156440,0.260129,0.947103,-1.132808,4.936112,-8.506800,4.233768],[-9.306228,-2.370826,-6.160755,-8.308641,-8.249651,-6.637796,-9.676865,-9.577844,0.827414,-5.337466,-0.604435,-6.731964,-1.764665]]], dtype = "float32")#candidate|261|(15, 3, 13)|const|float32
uop_262 = relay.sigmoid(const_261.astype('float32')) # shape=(15, 3, 13)
bop_269 = relay.mod(uop_262.astype('float64'), relay.reshape(const_261.astype('float64'), relay.shape_of(uop_262))) # shape=(15, 3, 13)
bop_272 = relay.right_shift(bop_269.astype('uint16'), relay.reshape(uop_262.astype('uint16'), relay.shape_of(bop_269))) # shape=(15, 3, 13)
uop_282 = relay.log(const_261.astype('float32')) # shape=(15, 3, 13)
func_139_call = mod.get_global_var('func_139')
func_142_call = mutated_mod.get_global_var('func_142')
var_285 = relay.var("var_285", dtype = "int16", shape = (6,))#candidate|285|(6,)|var|int16
call_284 = relay.TupleGetItem(func_139_call(relay.reshape(var_285.astype('int16'), [2, 3]), relay.reshape(var_285.astype('int16'), [2, 3]), ), 0)
call_286 = relay.TupleGetItem(func_142_call(relay.reshape(var_285.astype('int16'), [2, 3]), relay.reshape(var_285.astype('int16'), [2, 3]), ), 0)
const_290 = relay.const([[[-0.898200,-1.394572,0.052951,1.233911,0.293031,-4.431311,-3.407143,-1.109129,8.432544,2.433094,9.615080,-8.577418,1.243912],[-2.589351,-1.156139,5.809876,-9.931487,9.700953,9.215550,-4.601134,9.917519,-4.658410,7.717572,3.407522,7.430118,8.873714],[-4.478909,-7.635630,3.757638,1.911993,-8.751866,2.547701,-2.081358,8.792303,4.107785,-8.568211,-6.925340,-8.144211,0.549154]],[[-6.818380,-0.022311,-0.031971,-2.802241,2.790898,3.136349,0.807886,1.924445,7.246564,9.751701,4.557886,-3.430646,2.075621],[0.372261,3.407873,8.411555,6.906379,1.575954,3.891626,-0.395037,7.747799,6.486747,0.562169,2.204814,-2.150336,1.480088],[4.153446,3.280685,3.415891,-2.920619,7.912312,-6.151178,-2.829414,-4.464341,1.005813,-9.728624,4.670550,-5.034989,-2.253580]],[[8.456995,-9.337530,-9.229829,-4.017477,5.233856,-8.585011,-4.417798,5.005313,-6.787294,-6.535455,1.614538,9.057033,5.028928],[2.926823,-8.822437,6.781077,-0.565577,-1.407815,-2.050843,-5.465389,-7.031249,4.824959,3.660149,-8.387082,-9.765526,-4.436976],[-5.994183,5.692138,-9.298431,9.040584,-0.670410,-5.793804,2.478065,-6.500308,-4.037738,7.317608,7.418334,6.234460,0.069703]],[[9.519354,5.355744,-6.739227,4.786175,9.015605,-8.567757,-3.744688,0.301122,-8.934093,-7.615186,-0.930483,0.471703,3.326057],[2.880206,2.395982,-3.957335,-6.697828,8.111087,-6.014567,5.743883,-5.961006,-4.458435,-6.967689,-5.717846,-5.067950,4.176947],[0.101640,-4.253649,-5.282366,9.448106,6.929842,-9.775864,8.475572,-7.654781,-7.116768,0.113909,8.893580,-8.605949,-4.691745]],[[-2.449691,4.383386,4.331952,2.608784,3.674282,9.972588,0.843369,9.486309,8.091599,9.768029,-8.189125,2.331401,1.704758],[7.774886,-2.392714,-2.712236,9.011554,0.238537,-1.205322,-5.968442,-3.294447,-2.173297,-6.446813,5.467557,5.521216,4.573214],[-9.579196,3.108452,-8.583887,2.896597,-4.101393,5.191685,5.600829,9.678937,6.441071,-8.147360,1.873456,-9.988781,-3.138355]],[[0.535370,-6.302433,3.532509,7.607735,-9.744067,6.563700,5.839487,3.905017,5.373498,9.349159,-4.217599,0.634133,-0.844195],[-7.499339,-8.480351,-0.473002,-9.811897,0.323832,3.476249,-0.458197,-3.043118,-9.774853,-8.266971,-4.317183,-5.417834,-3.684913],[0.608465,4.231872,-8.886402,-4.225895,-0.939141,1.220230,1.182408,-9.441322,9.845599,0.447455,5.071331,2.684174,0.420169]],[[3.812588,3.742737,1.480562,8.940843,-4.305415,-2.261698,0.461858,8.071988,7.128350,3.781124,-2.668074,-4.559353,-4.674389],[6.059713,5.941517,6.812232,-7.096102,-7.806426,4.333190,5.090916,-7.478905,-7.736514,-7.439521,-5.428632,7.591868,-5.509353],[-2.388711,5.865641,-4.772101,1.855050,1.329883,-1.784497,2.904787,6.086660,7.024480,2.663345,-5.546258,6.276853,2.724228]],[[-8.784794,2.847073,-7.823311,-5.043355,-8.165643,-3.088793,-6.740098,-1.575638,-1.812184,-2.407761,0.274296,-4.358602,2.168814],[-2.487098,9.754074,-2.778443,-5.148953,-6.670388,1.197115,-1.829308,9.641775,1.436941,3.953431,6.241992,-7.936183,7.454501],[9.214183,-7.577196,7.881413,0.014685,-5.010063,-5.277125,1.353440,-9.833629,5.295992,-2.743883,1.861202,6.961879,2.164981]],[[-7.848130,-8.276995,8.452084,2.750098,-5.099294,4.009380,-1.953850,7.574986,-9.014566,3.589375,5.836973,-6.759980,-6.520933],[-4.976036,-4.448026,-2.893917,6.276819,-7.375586,-0.750988,-6.463492,-9.599529,-6.755178,6.467430,-4.361459,-6.269671,-5.933440],[-2.014933,0.107106,4.562780,-9.528693,7.061104,-3.799605,3.835253,-3.577000,2.581419,-7.030647,-8.104391,-0.705982,-1.712701]],[[0.491054,-3.370674,4.047626,-2.490580,9.043921,-9.488507,7.312734,-6.583163,-2.900637,0.990464,4.319455,3.487448,-9.600607],[-4.627610,6.721741,3.886673,8.597840,4.797552,8.425633,0.963796,1.061974,-1.813780,-6.789101,-8.079161,1.442166,7.002366],[-1.539075,-2.477832,-3.433097,0.301028,-6.192646,-2.756346,4.291464,-6.819214,-2.158906,9.448604,1.724353,-0.328119,1.759039]],[[-5.201138,-4.356657,9.432141,-3.417358,-7.524019,7.582088,-8.473401,-6.126175,5.264513,-5.747370,-1.068479,-4.974508,-7.262552],[-2.925620,5.012577,-6.033913,-3.596128,2.766971,9.546889,9.887575,-6.460946,-3.965479,-9.306727,5.238071,-3.638450,6.794404],[-7.901860,-3.507323,0.475086,-7.643892,-1.582960,-1.115409,2.242767,8.633236,1.973141,-0.991175,6.027213,3.510630,-0.954172]],[[4.005393,-3.968993,6.239599,-0.309651,-0.984423,-7.050776,-5.246054,6.265535,8.276697,-7.420894,1.376090,-1.117778,9.962957],[-2.160784,6.263478,-7.925342,6.350887,-8.975276,6.008347,7.959528,-2.041450,-6.788657,-5.497126,-9.527098,8.085957,-6.833811],[-2.862997,-4.680009,-1.813972,-5.402026,7.515838,9.083013,-9.073419,-1.986384,-6.879454,3.138999,0.570753,-3.382943,1.091791]],[[-7.796083,4.003885,8.333932,9.773207,-7.900560,6.685758,8.131298,0.529579,7.814453,-0.602340,7.060140,1.742776,-9.631016],[8.309588,4.248379,8.603689,2.893549,-9.105741,-2.176244,-3.380403,-1.414186,-7.355294,8.757886,-2.792783,3.896225,-6.528417],[4.188763,0.793780,-4.621105,-3.667523,3.294937,7.690420,8.906558,8.894285,7.568501,-6.524538,4.574349,-3.221750,-2.007464]],[[-5.700372,2.858860,-7.774590,-6.904494,-9.787236,-7.093364,-3.969336,-1.684891,-6.601347,-7.078886,-9.155736,-5.988315,6.997132],[8.856680,-3.248632,-0.958304,5.479932,9.621325,-0.992814,7.127999,-0.778600,-9.512892,6.655313,7.187142,-3.225898,6.682536],[5.615276,5.112948,-5.280017,-1.455546,-1.698763,8.124973,1.776087,2.262729,-0.889957,-1.760689,0.097677,-2.042490,-2.993209]],[[-0.018596,2.690395,8.527133,3.521360,1.899994,0.102370,-3.389181,-0.418797,7.914631,-4.938169,4.442410,8.076320,-4.109917],[-6.074307,9.079171,-5.270987,9.607117,2.220200,-4.709906,8.589551,-0.122061,-2.075512,-5.502462,-8.608554,-8.352181,4.273842],[-6.646111,6.820020,9.061142,4.994947,-5.604128,-8.484540,2.239294,-5.729699,7.551678,0.631389,-2.308906,-3.635850,-0.080082]]], dtype = "float32")#candidate|290|(15, 3, 13)|const|float32
bop_291 = relay.subtract(uop_262.astype('uint64'), relay.reshape(const_290.astype('uint64'), relay.shape_of(uop_262))) # shape=(15, 3, 13)
output = relay.Tuple([bop_272,uop_282,call_284,var_285,bop_291,])
output2 = relay.Tuple([bop_272,uop_282,call_286,var_285,bop_291,])
func_298 = relay.Function([var_285,], output)
mod['func_298'] = func_298
mod = relay.transform.InferType()(mod)
mutated_mod['func_298'] = func_298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_299 = relay.var("var_299", dtype = "int16", shape = (6,))#candidate|299|(6,)|var|int16
func_298_call = mutated_mod.get_global_var('func_298')
call_300 = func_298_call(var_299)
output = call_300
func_301 = relay.Function([var_299], output)
mutated_mod['func_301'] = func_301
mutated_mod = relay.transform.InferType()(mutated_mod)
var_325 = relay.var("var_325", dtype = "float32", shape = (11, 8, 14))#candidate|325|(11, 8, 14)|var|float32
uop_326 = relay.log(var_325.astype('float32')) # shape=(11, 8, 14)
uop_341 = relay.log2(uop_326.astype('float32')) # shape=(11, 8, 14)
output = uop_341
output2 = uop_341
func_352 = relay.Function([var_325,], output)
mod['func_352'] = func_352
mod = relay.transform.InferType()(mod)
mutated_mod['func_352'] = func_352
mutated_mod = relay.transform.InferType()(mutated_mod)
var_353 = relay.var("var_353", dtype = "float32", shape = (11, 8, 14))#candidate|353|(11, 8, 14)|var|float32
func_352_call = mutated_mod.get_global_var('func_352')
call_354 = func_352_call(var_353)
output = call_354
func_355 = relay.Function([var_353], output)
mutated_mod['func_355'] = func_355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_522 = relay.var("var_522", dtype = "float64", shape = (9, 14, 6))#candidate|522|(9, 14, 6)|var|float64
uop_523 = relay.tan(var_522.astype('float64')) # shape=(9, 14, 6)
output = relay.Tuple([uop_523,])
output2 = relay.Tuple([uop_523,])
func_525 = relay.Function([var_522,], output)
mod['func_525'] = func_525
mod = relay.transform.InferType()(mod)
var_526 = relay.var("var_526", dtype = "float64", shape = (9, 14, 6))#candidate|526|(9, 14, 6)|var|float64
output = func_525(var_526)
func_527 = relay.Function([var_526], output)
mutated_mod['func_527'] = func_527
mutated_mod = relay.transform.InferType()(mutated_mod)
const_559 = relay.const([[[-8.990282,-1.519204,-9.996183,7.018861],[7.783686,-1.414344,7.011496,-5.294831],[7.032627,4.902451,-1.915124,5.158554],[5.143961,-2.835807,7.116822,1.438018],[-5.428354,6.125616,1.507059,-2.773700],[4.015779,9.972730,-6.473890,4.303875],[9.325789,0.374699,2.011683,3.798092],[3.324251,-3.982327,1.506085,4.882254],[2.829596,-0.159210,6.973632,6.929734]]], dtype = "float32")#candidate|559|(1, 9, 4)|const|float32
uop_560 = relay.exp(const_559.astype('float32')) # shape=(1, 9, 4)
output = uop_560
output2 = uop_560
func_578 = relay.Function([], output)
mod['func_578'] = func_578
mod = relay.transform.InferType()(mod)
mutated_mod['func_578'] = func_578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_578_call = mutated_mod.get_global_var('func_578')
call_579 = func_578_call()
output = call_579
func_580 = relay.Function([], output)
mutated_mod['func_580'] = func_580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_578_call = mod.get_global_var('func_578')
func_580_call = mutated_mod.get_global_var('func_580')
call_583 = func_578_call()
call_584 = func_578_call()
var_588 = relay.var("var_588", dtype = "float32", shape = (9, 9, 4))#candidate|588|(9, 9, 4)|var|float32
bop_589 = relay.greater(call_583.astype('bool'), var_588.astype('bool')) # shape=(9, 9, 4)
bop_592 = relay.greater(call_584.astype('bool'), var_588.astype('bool')) # shape=(9, 9, 4)
output = relay.Tuple([bop_589,])
output2 = relay.Tuple([bop_592,])
func_593 = relay.Function([var_588,], output)
mod['func_593'] = func_593
mod = relay.transform.InferType()(mod)
var_594 = relay.var("var_594", dtype = "float32", shape = (9, 9, 4))#candidate|594|(9, 9, 4)|var|float32
output = func_593(var_594)
func_595 = relay.Function([var_594], output)
mutated_mod['func_595'] = func_595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_578_call = mod.get_global_var('func_578')
func_580_call = mutated_mod.get_global_var('func_580')
call_762 = func_578_call()
call_763 = func_578_call()
output = call_762
output2 = call_763
func_779 = relay.Function([], output)
mod['func_779'] = func_779
mod = relay.transform.InferType()(mod)
output = func_779()
func_780 = relay.Function([], output)
mutated_mod['func_780'] = func_780
mutated_mod = relay.transform.InferType()(mutated_mod)
const_792 = relay.const([[[-8.737608],[-8.815480],[-1.805838],[3.747841],[-4.408867],[3.716269],[2.592098],[5.790630],[-7.775715],[-1.698308],[8.206010]],[[6.287994],[-5.917164],[6.421915],[0.575776],[3.086758],[9.338566],[-5.037077],[9.460008],[6.433960],[-7.141792],[-4.643098]],[[8.070578],[1.110487],[-6.850114],[0.374877],[-7.368388],[9.539853],[1.305428],[-7.281837],[8.525404],[-3.506863],[2.869656]],[[6.696022],[-2.644984],[-4.338907],[5.234916],[5.335361],[-0.995917],[6.482589],[-0.162344],[-5.014047],[2.406090],[9.236811]],[[-5.032963],[1.273992],[7.538474],[-0.630716],[-2.074100],[9.468170],[-8.014959],[9.780980],[3.116260],[1.791168],[5.118578]],[[-7.969500],[7.831880],[-5.884844],[-1.996413],[-7.702653],[8.212961],[3.566551],[0.501910],[3.894544],[0.739070],[6.675253]],[[-0.239355],[7.343534],[1.128623],[3.857272],[3.719332],[-8.001714],[-6.036384],[1.060187],[-9.679168],[-9.628321],[-5.124620]],[[3.702038],[2.857148],[6.227408],[8.115882],[3.308079],[-7.309081],[2.946292],[8.731595],[-1.137548],[-5.075805],[7.410381]],[[-2.028165],[-0.823960],[-5.252927],[-7.548602],[-6.338776],[4.166125],[4.522224],[-8.971455],[9.032629],[-5.204552],[-1.870452]],[[9.033259],[4.898164],[8.986007],[-2.692433],[-1.143900],[6.804417],[9.033017],[1.397842],[-3.759594],[6.549581],[-6.168531]],[[0.315477],[-8.993403],[-8.714571],[-4.629173],[-5.266071],[-4.134334],[5.166175],[-0.295026],[-3.897920],[-7.491364],[0.159849]],[[-9.914890],[-8.751939],[-0.159113],[-0.371595],[-8.285195],[4.803315],[-0.353097],[7.322295],[-1.456849],[-1.851529],[0.863998]]], dtype = "float64")#candidate|792|(12, 11, 1)|const|float64
const_793 = relay.const([[[4.558194,6.001495],[5.633818,6.228935],[-2.903379,-7.217491],[-8.307074,-9.815523],[2.432346,0.457799],[3.686198,-5.332449],[-9.673197,-7.013299],[6.543808,-4.394031],[3.108339,5.107788],[3.145655,-9.335664],[-3.910596,-4.522132]],[[5.182252,-9.817778],[8.338690,-6.517500],[-2.200325,-3.853790],[-3.112068,3.632922],[-4.975317,-3.505386],[1.023293,-7.646867],[1.037431,3.627679],[8.842226,-9.937614],[-3.523490,3.373853],[2.978012,3.999000],[4.720517,-0.522624]],[[-1.397759,6.968216],[0.626007,-8.410753],[-2.606808,1.450029],[-2.062578,0.841624],[-2.928074,-1.181643],[0.923397,-0.402985],[8.837950,-4.750838],[4.244710,6.488850],[-1.723445,-5.149918],[-8.526188,7.160295],[-7.924560,-3.629093]],[[8.254128,-9.213254],[-9.779250,-6.454333],[0.597063,-9.830447],[-8.209946,5.330014],[8.662442,8.567141],[1.057025,-4.017703],[4.774581,-6.158186],[-9.718804,-2.433727],[3.392201,-3.039111],[6.095946,9.332514],[2.164744,-9.518049]],[[-2.595485,-6.174809],[-6.133817,4.730559],[8.123306,6.025605],[1.643579,-0.770319],[3.243227,2.942798],[-0.198753,-0.707727],[0.206872,-5.416334],[4.387618,-3.196832],[-0.994635,7.503140],[9.408041,-0.312322],[-1.211884,8.412809]],[[-1.915451,-7.893363],[-9.858637,-4.706571],[3.709396,-9.906436],[-2.348016,5.519640],[2.876337,3.151871],[-1.457207,-6.743689],[0.689607,3.738613],[7.746620,-3.623389],[-8.620547,8.894176],[-5.106745,4.897707],[-0.129521,-1.600149]],[[-5.411589,-4.045385],[-6.594254,6.782617],[-0.406179,-0.783187],[4.928323,-0.272598],[-2.096796,-9.876432],[3.213239,8.246825],[0.097819,5.019038],[-7.170307,-7.533312],[4.429374,4.542037],[-9.648861,1.155263],[-6.106994,-2.958744]],[[1.865952,-0.461879],[1.577781,-8.331359],[-9.949415,7.904334],[5.256192,4.894571],[-2.691732,-0.924626],[-6.414796,7.292315],[6.237122,-5.863663],[-4.416989,9.000579],[8.320597,7.646458],[-8.216095,1.598341],[6.334142,-8.203928]],[[6.611427,4.008794],[5.649571,9.202810],[1.572592,-9.987437],[6.815555,-2.245820],[9.726223,0.336995],[-7.779735,-0.156981],[9.736248,5.913519],[-5.012153,6.109912],[-9.395433,7.988093],[-6.940642,5.258294],[-2.032053,-4.489651]],[[-0.667491,8.630891],[-9.396373,-1.950556],[-4.920015,3.772941],[-5.337437,-7.887725],[-1.890224,-9.071634],[-4.035215,-6.697734],[6.996053,-9.047277],[6.157264,4.440823],[-4.927599,-8.176694],[-7.972228,1.882312],[0.947004,-3.038253]],[[5.027942,-1.156079],[-2.143775,-0.745298],[-6.944478,7.294855],[5.917008,0.149497],[2.712630,-3.644055],[-2.158581,-8.034235],[-4.303932,1.094288],[0.218659,7.869056],[-7.617366,-0.829100],[6.700438,-8.858662],[-0.187411,9.944294]],[[7.866985,-3.330154],[4.861533,-8.255149],[5.025963,-6.537512],[-0.099821,7.915153],[7.807730,6.082331],[-1.574669,-5.608040],[-3.337958,-9.422664],[2.501833,-5.165119],[-5.385816,5.244336],[-0.458651,4.396557],[-5.502833,1.982791]]], dtype = "float64")#candidate|793|(12, 11, 2)|const|float64
bop_794 = relay.power(const_792.astype('float64'), const_793.astype('float64')) # shape=(12, 11, 2)
bop_803 = relay.mod(bop_794.astype('float64'), const_792.astype('float64')) # shape=(12, 11, 2)
var_810 = relay.var("var_810", dtype = "float64", shape = (12, 11, 2))#candidate|810|(12, 11, 2)|var|float64
bop_811 = relay.right_shift(bop_803.astype('int64'), relay.reshape(var_810.astype('int64'), relay.shape_of(bop_803))) # shape=(12, 11, 2)
output = relay.Tuple([bop_811,])
output2 = relay.Tuple([bop_811,])
func_824 = relay.Function([var_810,], output)
mod['func_824'] = func_824
mod = relay.transform.InferType()(mod)
mutated_mod['func_824'] = func_824
mutated_mod = relay.transform.InferType()(mutated_mod)
var_825 = relay.var("var_825", dtype = "float64", shape = (12, 11, 2))#candidate|825|(12, 11, 2)|var|float64
func_824_call = mutated_mod.get_global_var('func_824')
call_826 = func_824_call(var_825)
output = call_826
func_827 = relay.Function([var_825], output)
mutated_mod['func_827'] = func_827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_578_call = mod.get_global_var('func_578')
func_580_call = mutated_mod.get_global_var('func_580')
call_851 = func_578_call()
call_852 = func_578_call()
func_578_call = mod.get_global_var('func_578')
func_580_call = mutated_mod.get_global_var('func_580')
call_855 = func_578_call()
call_856 = func_578_call()
output = relay.Tuple([call_851,call_855,])
output2 = relay.Tuple([call_852,call_856,])
func_857 = relay.Function([], output)
mod['func_857'] = func_857
mod = relay.transform.InferType()(mod)
output = func_857()
func_858 = relay.Function([], output)
mutated_mod['func_858'] = func_858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_578_call = mod.get_global_var('func_578')
func_580_call = mutated_mod.get_global_var('func_580')
call_862 = func_578_call()
call_863 = func_578_call()
output = relay.Tuple([call_862,])
output2 = relay.Tuple([call_863,])
func_864 = relay.Function([], output)
mod['func_864'] = func_864
mod = relay.transform.InferType()(mod)
output = func_864()
func_865 = relay.Function([], output)
mutated_mod['func_865'] = func_865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_779_call = mod.get_global_var('func_779')
func_780_call = mutated_mod.get_global_var('func_780')
call_868 = func_779_call()
call_869 = func_779_call()
uop_873 = relay.acosh(call_868.astype('float64')) # shape=(1, 9, 4)
uop_875 = relay.acosh(call_869.astype('float64')) # shape=(1, 9, 4)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_885 = relay.TupleGetItem(func_864_call(), 0)
call_886 = relay.TupleGetItem(func_865_call(), 0)
bop_890 = relay.less_equal(uop_873.astype('bool'), relay.reshape(call_868.astype('bool'), relay.shape_of(uop_873))) # shape=(1, 9, 4)
bop_893 = relay.less_equal(uop_875.astype('bool'), relay.reshape(call_869.astype('bool'), relay.shape_of(uop_875))) # shape=(1, 9, 4)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_901 = relay.TupleGetItem(func_864_call(), 0)
call_902 = relay.TupleGetItem(func_865_call(), 0)
bop_904 = relay.bitwise_or(uop_873.astype('int64'), relay.reshape(call_901.astype('int64'), relay.shape_of(uop_873))) # shape=(1, 9, 4)
bop_907 = relay.bitwise_or(uop_875.astype('int64'), relay.reshape(call_902.astype('int64'), relay.shape_of(uop_875))) # shape=(1, 9, 4)
func_593_call = mod.get_global_var('func_593')
func_595_call = mutated_mod.get_global_var('func_595')
const_909 = relay.const([-4.255566,-8.534521,4.766394,-5.569554,-4.545246,-4.918175,-8.007662,-0.780022,1.178258,-0.173352,7.843566,8.459875,1.704166,4.586748,8.208882,-3.562092,4.320240,6.265048,-5.066600,7.769609,2.349811,2.457622,1.340962,8.521701,8.899631,6.256236,8.578950,-7.086348,-9.127859,4.498776,4.426517,7.687816,4.064155,1.610977,6.574940,-9.518593,-8.183609,-8.945882,6.293967,1.721095,9.797274,4.938419,7.467765,4.028549,4.919113,8.671899,7.745277,-3.191132,-0.954633,-0.349594,-4.127982,-8.653455,-9.452509,-7.484067,2.229448,-2.951860,-2.059693,9.499806,-2.268026,3.447033,0.608866,-3.277455,3.913553,6.231284,-4.009865,5.020543,-2.727778,7.420793,-5.727053,8.536958,9.003479,7.053716,3.379007,0.258167,3.124062,-8.108943,-8.452762,0.068768,9.648687,6.936240,-1.340020,-6.222827,-6.274139,-2.773958,1.534840,-7.357456,4.952413,-8.512476,-2.096462,-7.628658,-0.100543,3.548509,8.163161,-7.405591,5.228460,-2.747745,4.806441,6.391245,2.672776,-4.921476,7.428985,2.872527,-3.502002,3.313530,-9.511541,6.536251,-1.267688,5.817588,9.204413,-1.010476,1.493483,2.596492,5.647646,-7.743309,-2.829804,5.057921,-6.796617,-7.150247,-1.287754,0.449554,-5.352802,8.876380,8.376422,-2.934656,9.856785,-4.173925,-7.439280,3.736838,-9.874150,-4.706852,-0.726373,-3.084576,-1.557812,-9.053819,-0.709530,6.075748,-0.578331,-8.882560,7.942801,-7.402919,8.178253,6.794486,-1.059411,-2.381308,7.505009,1.213105,-8.857189,-1.473778,5.830373,-9.531000,-5.229839,-0.511068,-7.920524,8.190170,6.446161,-5.462308,-3.514107,-4.043734,-7.947681,2.499598,7.973758,-6.778115,-0.122955,3.559039,0.531826,0.272957,6.526906,-4.767239,-9.002324,-9.980582,2.317476,1.730611,-0.928291,1.119868,-8.400420,-8.470807,3.403987,9.734792,0.552826,1.087594,-1.531185,2.793179,-1.161598,-1.103234,9.584426,8.940791,4.820456,-1.344033,-9.506279,6.848845,-8.897515,6.900091,-6.159279,6.376128,4.545516,-6.606742,4.869282,8.821729,5.709407,0.971712,-2.305870,9.106966,4.542998,-6.024593,8.312773,-2.431395,2.678260,-8.405136,-7.801907,-6.857987,-1.902605,-1.088612,-2.350744,-2.997021,7.554274,-5.399422,-4.102026,7.379090,4.996892,0.090599,5.644488,-4.203701,7.652001,-8.727815,-3.537617,2.849358,9.217390,-6.391431,-3.293196,0.855711,-1.114623,0.854858,-8.581829,-6.903084,-2.677472,-8.395062,6.226946,2.274553,2.379665,9.080838,-6.072505,7.628488,-7.558211,8.574350,-8.313197,-9.140287,-5.042595,1.327393,-1.669588,-5.767430,2.724488,4.806245,6.614831,-4.813225,-2.764814,-7.766398,-1.571977,0.310471,4.414886,5.320643,6.865824,4.522723,-5.587146,-1.996629,-9.347157,4.201295,-6.717016,4.700762,1.518071,-0.831440,7.462295,-8.117737,-1.959413,-6.345425,-1.077168,3.902784,2.288092,3.697584,6.907863,-4.641077,-1.182754,-1.534153,-1.578822,-3.238966,7.711245,-6.661764,9.001707,-7.786495,-6.516095,-9.648459,0.101008,-7.836871,-2.373621,-4.509357,-0.070321,6.128895,-5.577275,9.744138,4.933636,4.813316,-8.889919,2.988874,-9.824314,-4.800009,-9.423022,-9.396695,-3.961560,-7.674828,-2.489793,9.239759,-2.707118,-5.685798,-0.700139,3.638838,9.225338,-0.396186,-7.400765,-7.099430,5.772961,2.344331,0.949165,2.868452,9.735135,-1.222321], dtype = "float32")#candidate|909|(324,)|const|float32
call_908 = relay.TupleGetItem(func_593_call(relay.reshape(const_909.astype('float32'), [9, 9, 4])), 0)
call_910 = relay.TupleGetItem(func_595_call(relay.reshape(const_909.astype('float32'), [9, 9, 4])), 0)
bop_919 = relay.bitwise_xor(bop_904.astype('uint64'), relay.reshape(call_901.astype('uint64'), relay.shape_of(bop_904))) # shape=(1, 9, 4)
bop_922 = relay.bitwise_xor(bop_907.astype('uint64'), relay.reshape(call_902.astype('uint64'), relay.shape_of(bop_907))) # shape=(1, 9, 4)
bop_926 = relay.greater(bop_890.astype('bool'), relay.reshape(bop_904.astype('bool'), relay.shape_of(bop_890))) # shape=(1, 9, 4)
bop_929 = relay.greater(bop_893.astype('bool'), relay.reshape(bop_907.astype('bool'), relay.shape_of(bop_893))) # shape=(1, 9, 4)
output = relay.Tuple([call_885,call_908,const_909,bop_919,bop_926,])
output2 = relay.Tuple([call_886,call_910,const_909,bop_922,bop_929,])
func_931 = relay.Function([], output)
mod['func_931'] = func_931
mod = relay.transform.InferType()(mod)
mutated_mod['func_931'] = func_931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_931_call = mutated_mod.get_global_var('func_931')
call_932 = func_931_call()
output = call_932
func_933 = relay.Function([], output)
mutated_mod['func_933'] = func_933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_954 = relay.var("var_954", dtype = "float32", shape = (5, 13, 15))#candidate|954|(5, 13, 15)|var|float32
uop_955 = relay.sqrt(var_954.astype('float32')) # shape=(5, 13, 15)
func_931_call = mod.get_global_var('func_931')
func_933_call = mutated_mod.get_global_var('func_933')
call_967 = relay.TupleGetItem(func_931_call(), 3)
call_968 = relay.TupleGetItem(func_933_call(), 3)
output = relay.Tuple([uop_955,call_967,])
output2 = relay.Tuple([uop_955,call_968,])
func_971 = relay.Function([var_954,], output)
mod['func_971'] = func_971
mod = relay.transform.InferType()(mod)
var_972 = relay.var("var_972", dtype = "float32", shape = (5, 13, 15))#candidate|972|(5, 13, 15)|var|float32
output = func_971(var_972)
func_973 = relay.Function([var_972], output)
mutated_mod['func_973'] = func_973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_857_call = mod.get_global_var('func_857')
func_858_call = mutated_mod.get_global_var('func_858')
call_977 = relay.TupleGetItem(func_857_call(), 1)
call_978 = relay.TupleGetItem(func_858_call(), 1)
uop_1031 = relay.sinh(call_977.astype('float32')) # shape=(1, 9, 4)
uop_1033 = relay.sinh(call_978.astype('float32')) # shape=(1, 9, 4)
func_931_call = mod.get_global_var('func_931')
func_933_call = mutated_mod.get_global_var('func_933')
call_1035 = relay.TupleGetItem(func_931_call(), 0)
call_1036 = relay.TupleGetItem(func_933_call(), 0)
output = relay.Tuple([uop_1031,call_1035,])
output2 = relay.Tuple([uop_1033,call_1036,])
func_1043 = relay.Function([], output)
mod['func_1043'] = func_1043
mod = relay.transform.InferType()(mod)
mutated_mod['func_1043'] = func_1043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1043_call = mutated_mod.get_global_var('func_1043')
call_1044 = func_1043_call()
output = call_1044
func_1045 = relay.Function([], output)
mutated_mod['func_1045'] = func_1045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_1069 = relay.TupleGetItem(func_864_call(), 0)
call_1070 = relay.TupleGetItem(func_865_call(), 0)
output = relay.Tuple([call_1069,])
output2 = relay.Tuple([call_1070,])
func_1074 = relay.Function([], output)
mod['func_1074'] = func_1074
mod = relay.transform.InferType()(mod)
output = func_1074()
func_1075 = relay.Function([], output)
mutated_mod['func_1075'] = func_1075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_1135 = relay.TupleGetItem(func_864_call(), 0)
call_1136 = relay.TupleGetItem(func_865_call(), 0)
uop_1138 = relay.cos(call_1135.astype('float64')) # shape=(1, 9, 4)
uop_1140 = relay.cos(call_1136.astype('float64')) # shape=(1, 9, 4)
output = relay.Tuple([uop_1138,])
output2 = relay.Tuple([uop_1140,])
func_1145 = relay.Function([], output)
mod['func_1145'] = func_1145
mod = relay.transform.InferType()(mod)
output = func_1145()
func_1146 = relay.Function([], output)
mutated_mod['func_1146'] = func_1146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_931_call = mod.get_global_var('func_931')
func_933_call = mutated_mod.get_global_var('func_933')
call_1160 = relay.TupleGetItem(func_931_call(), 1)
call_1161 = relay.TupleGetItem(func_933_call(), 1)
func_593_call = mod.get_global_var('func_593')
func_595_call = mutated_mod.get_global_var('func_595')
call_1165 = relay.TupleGetItem(func_593_call(relay.reshape(call_1160.astype('float32'), [9, 9, 4])), 0)
call_1166 = relay.TupleGetItem(func_595_call(relay.reshape(call_1160.astype('float32'), [9, 9, 4])), 0)
func_931_call = mod.get_global_var('func_931')
func_933_call = mutated_mod.get_global_var('func_933')
call_1178 = relay.TupleGetItem(func_931_call(), 3)
call_1179 = relay.TupleGetItem(func_933_call(), 3)
func_1145_call = mod.get_global_var('func_1145')
func_1146_call = mutated_mod.get_global_var('func_1146')
call_1180 = relay.TupleGetItem(func_1145_call(), 0)
call_1181 = relay.TupleGetItem(func_1146_call(), 0)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
const_1195 = relay.const([-8.902151,4.496582,3.495309,1.421831,0.648582,8.724818,6.268886,-9.518860,-6.200672,-0.663340,-8.455417,-8.523634,-8.418098,6.107156,3.991673,-8.235906,-5.730192,9.904125,-1.485073,0.277142,-3.244737,1.289312,-4.491372,6.420310,-5.906744,-6.381954,6.434169,-3.133498,-3.700000,9.393913,-6.196140,0.802829,0.704498,-1.298540,8.375279,-8.059429,-4.038331,4.398044,1.145164,-8.782295,-4.290187,5.711427,5.342233,-8.111892,6.011074,0.542986,5.534640,-9.898294,7.175015,-9.419893,3.220161,4.269724,4.921589,-5.559346,4.751384,-0.486396,-9.682978,-7.172910,-6.108506,0.546149,-1.945712,5.513753,8.468175,4.474574,4.448462,-9.225145,-8.566513,-8.073842,-3.273620,-9.475341,0.802408,-5.906190,-6.574852,7.678617,2.296991,4.980705,8.612541,3.165463,-7.172766,-3.576608,-6.525677,-7.328843,-1.200593,-4.857647,-4.644246,-4.146209,-2.914078,8.818454,7.824131,8.463810,9.056555,6.490608,6.964611,3.349933,0.933823,7.039061,-4.073264,-3.448633,6.484544,-1.133071,8.077488,4.715480,6.022111,5.454651,-2.434444,3.210374,9.376746,-5.263098,4.191467,-2.194869,8.563051,-5.880172,-5.444478,-9.664668,-4.039013,5.126844,-8.635351,8.724319,8.748463,-4.110286,3.593489,7.172371,-1.984919,1.090844,5.577293,-1.361814,-3.145633,3.531237,1.313270,-7.562089,-5.316081,-0.909168,-2.154171,-5.369338,-3.538169,5.980636,-9.378712,-7.845837,2.315809,-1.161816,8.499789,5.109690,8.141480,-7.707329,9.758639,-2.759197,-5.525495,-0.854127,-1.136961,-3.280593,2.253855,-0.453058,-8.787070,4.861514,0.843590,7.350275,-4.133806,-9.707289,7.266471,5.455030,1.323509,-7.034672,-3.349148,-5.064580,9.053670,6.189482,3.204068,-6.846252,-0.654149,6.939894,5.557553,-4.321017,7.985060,9.462976,-2.796278,0.252067,3.474331,1.516724,-9.316029,-1.872980,0.336510,6.056155,-1.827512,-7.425918,4.284664,-2.074352,-4.630392,-3.207935,6.271992,-3.156156,-4.726941,9.561103,1.129289,5.312853,-2.551842,5.438355,0.447905,-4.840877,-3.655134,-5.347204,-6.259013,-6.778000,-7.812205,6.755429,0.444469,8.248897,9.105913,0.505160,1.727090,0.658901,-1.628524,3.737865,0.346475,3.707461,8.490850,8.995136,-1.755836,-7.086237,-0.429732,-8.252983,-1.753842,-5.381712,-7.414215,-4.444578,-1.700954,-5.679158,5.993850,9.343503,2.808499,-3.438134,-7.951098,4.426744,-3.762247,7.169198,4.943485,-7.512024,1.002923,0.112939,-7.544704,-9.104891,1.943370,2.383594,-5.934859,9.594447,-9.784884,-1.410856,3.020367,5.695391,-7.681279,2.497979,9.796580,6.195906,-3.245620,-7.400012,-3.873888,9.210675,1.796615,-9.548935,2.960311,-5.045099,-7.186737,1.177531,-3.039336,2.204762,2.397721,-5.067748,-6.447255,-4.483589,-4.002898,6.002511,8.760219,7.993970,5.935148,-2.530653,1.502706,-3.822186,-9.116007,-6.744930,8.427505,0.467530,-4.370477,4.558190,4.697766,7.193010,-5.271329,-0.585425,8.335736,8.832801,-5.688873,-8.655385,-3.825553,3.336284,-4.504667,1.098373,2.929000,-8.973249,-9.715768,-2.997968,7.466264,9.678146,-5.087496,0.232659,3.882335,-0.482365,7.807824,-0.912310,-9.441475,-7.553612,4.742561,-1.756905,-9.406596,-2.447091,-3.892020,-7.370097,-1.124244,0.715238,1.314999,-9.666585,2.840186,-5.655102,2.627368,-4.647052,-8.857761,-4.781758,-6.449502,-5.975636,-3.062065,6.378448,2.142284,-2.916221,-2.613864,-2.438552,2.483279,-1.246502,-5.283934,4.844700,5.359713,5.204245,-9.881336,0.171562,-6.927453,8.570907,-3.676464,2.542111,-3.038843,7.733022,8.848165,-6.624830,7.658890,-4.961325,-6.586676,0.166399,9.740386,4.736586,3.773049,2.989837,5.888295,-5.708903,0.449314,9.567812,8.550293,-3.222665,6.003135,8.367684,-7.029986,-6.151976,7.137028,-0.938768,-0.350571,-4.796870,6.413493,8.472180,-4.820095,-1.456271,5.936980,5.055301,8.578100,4.787920,2.240105,9.229024,-0.477425,-8.204919,3.479765,5.197295,-3.194196,8.524474,8.677216,-3.193592,-4.277004,2.097254,9.011584,5.454185,9.218896,7.629816,0.166522,-4.085130,-5.124387,-8.067063,7.732579,2.001335,2.239021,2.659103,5.009371,3.787569,6.533150,3.147944,0.163557,9.675011,7.876809,4.334478,8.530665,1.809397,-6.201418,5.577063,7.804475,-4.517239,-9.244884,9.269306,4.763852,4.546321,6.279439,4.508829,6.116251,9.728650,4.577261,-9.430135,-2.479332,-6.349668,7.355731,4.922059,-0.452565,6.106916,4.291250,-8.394939,8.362579,8.919947,-9.581581,-3.567676,9.602540,1.337600,-9.737411,4.689240,9.491881,-5.107066,-6.289794,3.401575,4.527788,4.077404,5.367141,1.712843,2.201976,5.958782,-9.124116,-5.506037,-4.179594,-2.975999,6.065938,5.013086,-5.284367,4.112395,1.991728,1.866190,5.732841,-2.577266,8.721608,-9.764686,-9.339035,-8.261535,6.431045,3.148415,-4.271203,-7.030814,4.244145,-3.763652,6.964102,-1.912176,-2.101749,8.040059,-8.094282,-2.957453,-7.878792,0.737682,0.914092,7.176054,-2.914258,-7.707325,-9.700122,-9.124890,-3.732641,8.972982,-3.232111,9.822688,-6.429473,-2.729552,-5.131051,-7.921518,9.483595,5.305299,8.435811,1.313931,1.761794,3.520715,1.976497,-5.519147,-7.304877,2.637301,3.002103,-5.724177,-3.713618,0.715742,5.887227,0.490191,3.061484,6.591417,8.826023,-5.739216,-8.718344,-3.114200,4.949177,-6.596573,9.013324,-3.775049,-2.453385,-1.081386,2.718946,5.496689,2.413896,-4.358385,7.106118,3.489678,-0.080123,-5.822055,8.578355,-3.733379,0.701798,1.445362,5.367738,2.373348,-2.839845,-4.886527,3.260743,-0.718962,-7.303491,0.395757,4.746684,-0.413693,-5.915580,-6.872655,1.183106,-6.529965,7.921449,9.281921,7.141575,-3.388878,-4.333737,-8.624933,-3.785308,-5.409875,0.125775,0.519207,8.935121,-8.998738,-6.189351,3.865893,-5.393206,-2.468636,4.398636,-9.399479,-4.810991,-3.611318,3.593259,4.408675,-3.571159,-3.488236,4.222435,-1.971215,4.233794,1.997655,8.556709,0.057288,-6.218863,-7.413283,-4.846413,7.428120,5.379114,0.100587,-2.397477,3.342665,2.320714,-9.351228,4.203778,8.954534,4.907686,-6.654501,0.462849,-7.683157,1.759290,-8.994645,6.363258,-8.856840,3.882934,1.811348,-9.854636,-9.644728,-1.031056,2.208488,0.991531,-1.753861,8.747341,-7.023200,2.365481,-8.879885,4.790042,-5.452842,-9.542964,5.493276,-4.671986,7.499032,0.543901,-3.916457,-4.182953,2.077915,-4.567348,9.144551,-5.371334,2.554487,-8.478699,-1.792785,-0.914309,3.159125,-6.806266,-9.526347,0.565610,1.645672,-3.980154,1.788533,4.580633,-1.371126,-1.726557,5.631797,3.674897,-3.540658,0.285387,2.225191,5.860739,-9.677581,-5.119371,2.426399,8.209529,-1.726743,-7.617391,-3.331096,3.351123,-6.580052,-7.091239,-4.306509,-4.890294,-4.049261,-5.260443,6.488722,-0.020332,8.822530,-0.333351,-5.958720,1.713482,9.934721,-8.711797,-3.223585,7.862517,-0.896324,-9.841317,9.920185,3.868294,-5.179854,-8.374864,-5.118821,-4.426601,9.327594,-4.265452,-4.264014,-0.485299,8.618551,9.613526,-9.755215,-7.122670,5.170964,-3.622427,0.191521,-5.987515,6.787693,5.215028,2.004291,9.255408,8.704501,-4.804336,2.586751,2.875852,-7.245150,-8.088635,1.883270,9.606965,-6.486065,-4.638036,7.410266,6.847260,3.626604,-6.452468,-2.533803,3.923941,6.428776,1.136618,-5.942490,-7.819462,-2.691233,-7.537958,8.255889,-6.520083,8.714119,-9.006512,1.632909,4.969008,-3.143179,0.726073,8.825380,-1.136572,-8.607312,2.588298,4.885473,5.709213,8.259691,9.451355,8.695468,-0.786216,-2.231584,-1.438974,-5.930298,-7.748678,5.466693,-1.448408,-2.503520,-0.503761,-3.852368,-7.443661,6.978214,8.549370,3.638492,7.233068,-8.046748,7.719013,-8.072388,-4.582217,3.933942,-4.291180,-6.821495,1.553801,5.660626,-7.327447,0.220506,6.399009,-3.708225,5.156272,-8.085214,1.474076,-7.060990,7.300998,-8.358508,-6.106137,0.942817,-0.779159,6.623815,-2.561682,2.232319,-6.343682,4.060885,6.858129,3.485804,7.129030,-2.521334,-2.134905,3.025133,5.757926,-7.469919,0.425868,-1.602745,0.713131,9.478937,9.775203,-2.216266,-6.374398,6.867941,-1.366708,-4.635412,-4.771453,-7.805013,-5.446160,2.466512,4.090435,1.426486,3.320106,-4.789657,4.742766,-3.144119,7.644940,-2.876693,0.813030,5.025646,-3.533742,1.049127,-9.755907,-7.486301,-6.771171,1.845312,4.910807,-2.351903,-2.319851,8.098250,5.618016,-4.223638,6.887566,-6.550264,9.163173,-9.728586,5.476360,-2.325286,9.706692,-0.222329,-1.367286,7.876710,-5.535778,-8.921499,-2.507255,-2.016373,-5.800758,-3.434346,-8.270892,-7.725432,3.284579,7.667456,-7.710600,-3.937259,-6.725657,0.005700,-5.130089,-8.491153,3.548046,-4.308368,2.713992,3.946780,0.989076,4.219995,-8.554622,1.307368,-9.092122,-2.439028,4.946858,-8.589519,-3.233249,-1.228591,-6.616433,7.778225,-6.078026,2.920047,9.862311,0.594406,3.665862,-1.313163,-9.503645,8.933992,-4.231573,0.557137,-8.681418,-8.237762,-3.690890,-3.059670,7.204656,-5.512085,8.901827,6.502691,-6.308185,9.680068,8.106274,9.339149,-3.391276,-8.014180,-7.352582,-1.194363,4.768000,0.999114,5.616993,-5.803984,-2.796433,-4.509502,7.649463,-6.748929,-7.546995,2.511740,0.208050,2.799092,4.742339,-8.459924,-1.172883,-4.617327,5.024842,5.724793,4.772863,-2.589403,-7.577656,4.823737,-5.259725,9.967768,-2.213455,6.791841,6.231078,9.225945,-5.359982,-1.778511,-8.531893,4.365365,3.436991,-7.791059,-4.194942,-6.177667,-3.289768,-0.335122,6.797282,3.438664,-7.403802,2.603436,-1.190807,-7.339693,-0.310044,3.025309,-9.922123,2.660702,5.322842,-4.635146,-1.247444,-1.308953,8.574256,3.312054,-4.383077,-0.484838,2.639033,-6.627894,-2.562396,8.200156,3.777833,7.640751,0.269313,0.860765,-3.890420,-6.731151,-4.766039,8.096301,-3.706669,-7.579335,-4.559125,3.572514,-2.250078,1.363234,0.005676,-4.000163,9.908000,-2.346242,-8.452386,4.535616,8.657342,6.935911,-6.424228,1.605269,5.893481,8.324230,-8.101847,-9.454578,-9.635595], dtype = "float32")#candidate|1195|(975,)|const|float32
call_1194 = relay.TupleGetItem(func_971_call(relay.reshape(const_1195.astype('float32'), [5, 13, 15])), 1)
call_1196 = relay.TupleGetItem(func_973_call(relay.reshape(const_1195.astype('float32'), [5, 13, 15])), 1)
output = relay.Tuple([call_1160,call_1165,call_1178,call_1180,call_1194,const_1195,])
output2 = relay.Tuple([call_1161,call_1166,call_1179,call_1181,call_1196,const_1195,])
func_1200 = relay.Function([], output)
mod['func_1200'] = func_1200
mod = relay.transform.InferType()(mod)
output = func_1200()
func_1201 = relay.Function([], output)
mutated_mod['func_1201'] = func_1201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1043_call = mod.get_global_var('func_1043')
func_1045_call = mutated_mod.get_global_var('func_1045')
call_1259 = relay.TupleGetItem(func_1043_call(), 0)
call_1260 = relay.TupleGetItem(func_1045_call(), 0)
output = relay.Tuple([call_1259,])
output2 = relay.Tuple([call_1260,])
func_1261 = relay.Function([], output)
mod['func_1261'] = func_1261
mod = relay.transform.InferType()(mod)
mutated_mod['func_1261'] = func_1261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1261_call = mutated_mod.get_global_var('func_1261')
call_1262 = func_1261_call()
output = call_1262
func_1263 = relay.Function([], output)
mutated_mod['func_1263'] = func_1263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_1266 = relay.TupleGetItem(func_864_call(), 0)
call_1267 = relay.TupleGetItem(func_865_call(), 0)
uop_1283 = relay.asinh(call_1266.astype('float32')) # shape=(1, 9, 4)
uop_1285 = relay.asinh(call_1267.astype('float32')) # shape=(1, 9, 4)
uop_1306 = relay.cosh(uop_1283.astype('float64')) # shape=(1, 9, 4)
uop_1308 = relay.cosh(uop_1285.astype('float64')) # shape=(1, 9, 4)
output = relay.Tuple([uop_1306,])
output2 = relay.Tuple([uop_1308,])
func_1313 = relay.Function([], output)
mod['func_1313'] = func_1313
mod = relay.transform.InferType()(mod)
output = func_1313()
func_1314 = relay.Function([], output)
mutated_mod['func_1314'] = func_1314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_578_call = mod.get_global_var('func_578')
func_580_call = mutated_mod.get_global_var('func_580')
call_1355 = func_578_call()
call_1356 = func_578_call()
output = relay.Tuple([call_1355,])
output2 = relay.Tuple([call_1356,])
func_1360 = relay.Function([], output)
mod['func_1360'] = func_1360
mod = relay.transform.InferType()(mod)
mutated_mod['func_1360'] = func_1360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1360_call = mutated_mod.get_global_var('func_1360')
call_1361 = func_1360_call()
output = call_1361
func_1362 = relay.Function([], output)
mutated_mod['func_1362'] = func_1362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_1382 = relay.TupleGetItem(func_1200_call(), 3)
call_1383 = relay.TupleGetItem(func_1201_call(), 3)
func_1313_call = mod.get_global_var('func_1313')
func_1314_call = mutated_mod.get_global_var('func_1314')
call_1384 = relay.TupleGetItem(func_1313_call(), 0)
call_1385 = relay.TupleGetItem(func_1314_call(), 0)
output = relay.Tuple([call_1382,call_1384,])
output2 = relay.Tuple([call_1383,call_1385,])
func_1389 = relay.Function([], output)
mod['func_1389'] = func_1389
mod = relay.transform.InferType()(mod)
output = func_1389()
func_1390 = relay.Function([], output)
mutated_mod['func_1390'] = func_1390
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1466 = relay.var("var_1466", dtype = "float64", shape = (4, 13))#candidate|1466|(4, 13)|var|float64
var_1467 = relay.var("var_1467", dtype = "float64", shape = (4, 13))#candidate|1467|(4, 13)|var|float64
bop_1468 = relay.power(var_1466.astype('float64'), relay.reshape(var_1467.astype('float64'), relay.shape_of(var_1466))) # shape=(4, 13)
output = bop_1468
output2 = bop_1468
func_1472 = relay.Function([var_1466,var_1467,], output)
mod['func_1472'] = func_1472
mod = relay.transform.InferType()(mod)
var_1473 = relay.var("var_1473", dtype = "float64", shape = (4, 13))#candidate|1473|(4, 13)|var|float64
var_1474 = relay.var("var_1474", dtype = "float64", shape = (4, 13))#candidate|1474|(4, 13)|var|float64
output = func_1472(var_1473,var_1474,)
func_1475 = relay.Function([var_1473,var_1474,], output)
mutated_mod['func_1475'] = func_1475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1360_call = mod.get_global_var('func_1360')
func_1362_call = mutated_mod.get_global_var('func_1362')
call_1512 = relay.TupleGetItem(func_1360_call(), 0)
call_1513 = relay.TupleGetItem(func_1362_call(), 0)
output = relay.Tuple([call_1512,])
output2 = relay.Tuple([call_1513,])
func_1531 = relay.Function([], output)
mod['func_1531'] = func_1531
mod = relay.transform.InferType()(mod)
mutated_mod['func_1531'] = func_1531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1531_call = mutated_mod.get_global_var('func_1531')
call_1532 = func_1531_call()
output = call_1532
func_1533 = relay.Function([], output)
mutated_mod['func_1533'] = func_1533
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1578 = relay.var("var_1578", dtype = "float64", shape = (16, 5, 6))#candidate|1578|(16, 5, 6)|var|float64
uop_1579 = relay.sqrt(var_1578.astype('float64')) # shape=(16, 5, 6)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
var_1602 = relay.var("var_1602", dtype = "float32", shape = (975,))#candidate|1602|(975,)|var|float32
call_1601 = relay.TupleGetItem(func_971_call(relay.reshape(var_1602.astype('float32'), [5, 13, 15])), 0)
call_1603 = relay.TupleGetItem(func_973_call(relay.reshape(var_1602.astype('float32'), [5, 13, 15])), 0)
uop_1609 = relay.tan(var_1602.astype('float32')) # shape=(975,)
uop_1614 = relay.asin(uop_1579.astype('float32')) # shape=(16, 5, 6)
output = relay.Tuple([call_1601,uop_1609,uop_1614,])
output2 = relay.Tuple([call_1603,uop_1609,uop_1614,])
func_1621 = relay.Function([var_1578,var_1602,], output)
mod['func_1621'] = func_1621
mod = relay.transform.InferType()(mod)
var_1622 = relay.var("var_1622", dtype = "float64", shape = (16, 5, 6))#candidate|1622|(16, 5, 6)|var|float64
var_1623 = relay.var("var_1623", dtype = "float32", shape = (975,))#candidate|1623|(975,)|var|float32
output = func_1621(var_1622,var_1623,)
func_1624 = relay.Function([var_1622,var_1623,], output)
mutated_mod['func_1624'] = func_1624
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1661 = relay.var("var_1661", dtype = "float64", shape = (8, 3, 7))#candidate|1661|(8, 3, 7)|var|float64
uop_1662 = relay.atanh(var_1661.astype('float64')) # shape=(8, 3, 7)
bop_1668 = relay.floor_divide(var_1661.astype('float32'), relay.reshape(uop_1662.astype('float32'), relay.shape_of(var_1661))) # shape=(8, 3, 7)
func_779_call = mod.get_global_var('func_779')
func_780_call = mutated_mod.get_global_var('func_780')
call_1671 = func_779_call()
call_1672 = func_779_call()
func_1621_call = mod.get_global_var('func_1621')
func_1624_call = mutated_mod.get_global_var('func_1624')
var_1685 = relay.var("var_1685", dtype = "float64", shape = (480,))#candidate|1685|(480,)|var|float64
var_1686 = relay.var("var_1686", dtype = "float32", shape = (975,))#candidate|1686|(975,)|var|float32
call_1684 = relay.TupleGetItem(func_1621_call(relay.reshape(var_1685.astype('float64'), [16, 5, 6]), relay.reshape(var_1686.astype('float32'), [975,]), ), 1)
call_1687 = relay.TupleGetItem(func_1624_call(relay.reshape(var_1685.astype('float64'), [16, 5, 6]), relay.reshape(var_1686.astype('float32'), [975,]), ), 1)
uop_1688 = relay.sin(uop_1662.astype('float32')) # shape=(8, 3, 7)
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
const_1691 = relay.const([[-6.497284,8.507249,6.906036,-1.192504,8.098643,-1.280340,-8.650895,-3.127554,8.494932,4.899377,8.470953,2.809678,-3.155918,-2.531045,0.741028,-5.125176,5.254714,0.828517,0.241049,-4.264466,-1.114620,-0.611357,2.193966,-2.714797,5.983221,-7.700126,7.989983,-7.391290,-0.934787,-7.706585,2.874332,-4.948290,-0.817227,3.803355,3.314667,-7.984026,-9.135903,-3.266777,5.240833,-1.846472,0.743588,0.255659,4.649743,-3.881240,9.892196,3.271304,0.492379,2.024190,4.937103,-9.178257,-4.662864,-3.660559,0.334338,-1.279425,-8.882162,7.108538,7.408609,-1.563177,3.048790,2.254695,6.584536,7.287558,-5.276218,-4.193517,-7.453030,-8.023802,5.047820,3.159944,-9.743532,6.593739,9.290157,-3.515585,-0.471089,7.460726,5.903699,-6.678624,3.955205,-7.624884,-6.043770,4.697183,3.419593,-6.593916,-4.876028,9.132828],[8.570030,9.707283,-0.004168,-5.059594,-5.489215,-1.275226,-5.594239,-5.310994,-6.226387,9.156948,6.213926,7.303623,-6.236826,2.125373,-7.247973,8.026046,-0.183442,-2.877034,-2.540631,5.768673,-0.457832,8.995446,-0.831154,-2.122806,-5.860975,5.353009,-4.080620,-4.545734,-5.050502,8.254682,-2.356554,6.201267,-5.474831,6.790875,-2.065982,5.360946,-6.305132,2.163497,0.293259,-5.498002,6.254001,3.694482,-1.694603,-8.518290,-9.485733,5.340892,3.371427,0.701934,-1.296390,-2.894726,9.588370,8.425796,-0.139174,-1.233421,-6.220434,8.791076,-6.571752,2.141515,-2.864286,-5.640643,-1.365468,-1.200601,-8.045018,1.323661,-7.095876,3.503989,7.943177,-7.051640,8.617010,2.341256,8.293707,7.870016,-5.528366,-9.114704,-6.235523,7.718731,4.326386,-1.668332,3.780940,-3.330078,-8.436749,6.585756,4.940578,4.121830],[-8.063884,-6.963318,-1.783968,2.147520,9.209247,3.594442,-2.031848,-2.259007,-4.247655,6.372433,-3.947594,-3.607028,3.462088,-9.297605,2.100293,9.522860,6.026052,7.801192,0.134670,-3.475519,-9.769045,9.308524,-9.074816,-0.034021,-2.405074,-8.538383,-1.421036,3.505816,-1.651669,-6.567716,-0.884816,6.552040,1.724268,6.407306,8.355039,3.544090,5.270165,8.206101,-6.963859,7.915659,3.816866,3.021175,-8.973471,-5.594288,2.503039,-0.007650,-7.774946,0.144606,-2.574726,9.522104,-5.903312,5.464827,0.785170,1.430585,8.939399,-7.404940,-6.699329,-2.044990,1.391143,4.758272,6.105336,-1.313255,2.269484,4.520680,-7.910626,3.248693,-4.020745,-7.922080,5.721073,0.925501,-9.193626,-5.914079,-1.002621,1.261973,2.149237,-9.539244,-4.049351,-2.734120,-4.161619,6.602799,-8.676337,8.939548,-3.077693,-5.187117],[2.261739,-5.363578,-1.391689,-0.789781,0.048326,-0.277593,-2.675708,8.570107,4.136377,-0.454895,3.802129,-7.835195,-6.185262,-2.349959,8.235660,2.172322,4.306873,7.940920,-2.830814,-0.786867,3.344943,-3.137219,5.801138,0.228763,9.943734,-9.708723,3.033376,8.210818,-6.531487,-8.216980,-0.763891,-9.414674,1.790501,3.554785,2.514053,7.834363,-5.026518,-9.180964,8.703195,-6.575084,8.328115,-9.540725,2.431519,-3.339743,7.883822,-4.735827,-1.874056,7.966593,-2.915973,0.547428,-4.278969,-4.074987,-2.383826,-8.326934,-1.997361,4.660204,9.642570,3.776729,9.678184,-0.723165,-0.180332,-8.832745,8.817139,1.101723,9.673361,4.997350,4.826234,-1.020139,-0.526446,-1.662487,-8.666607,-6.875252,6.481755,-9.600067,-3.643592,4.158119,7.873489,5.477912,-8.189886,-8.177837,-5.005982,3.158323,-3.927806,8.849786],[9.199043,1.811564,2.650725,0.251473,4.634461,9.440726,3.705494,2.930980,8.669564,0.445539,3.380305,4.911074,-7.562426,5.234268,-9.980234,5.185341,-1.905660,5.600949,8.800072,-5.353463,1.546724,-9.650906,3.065087,3.013112,-3.282611,-2.358701,0.405021,5.904474,-4.474339,-3.372096,-1.523357,-5.187903,-8.570812,-6.962535,6.872212,1.014734,4.855831,3.965861,0.960953,6.435511,1.554887,6.367832,1.725302,-3.466507,4.739671,-1.314371,3.290077,8.468421,5.295545,0.850633,-0.254267,4.170128,-6.899186,-0.968198,3.259037,5.385822,6.632237,6.224709,-2.346710,0.248798,-6.876656,0.283833,-8.518959,-9.217950,-6.603258,-9.609972,-0.073556,-4.829983,-8.096497,-7.497312,-1.952940,4.913688,-5.635633,-5.300408,-9.472619,-8.220813,-2.726528,-3.913179,-6.633093,-9.487276,-6.147332,-4.510872,-0.164526,7.125168],[1.098828,-9.390439,-8.352944,-7.145701,9.317748,0.013854,-5.609691,-4.695808,8.425323,8.152183,3.253780,-0.322795,5.133843,-9.852839,-5.387280,-6.330272,6.933150,7.001767,-3.457561,-8.085342,1.972886,-1.736040,-1.018019,-6.486206,9.411413,8.313932,2.324512,9.560683,-5.055643,-2.966710,4.254048,7.743484,4.730552,-7.483883,-9.179510,2.340584,-3.819966,2.450342,2.884984,-2.218909,8.549251,5.934666,-3.725153,5.212102,2.500603,6.637660,1.250321,9.378683,1.899631,-4.275190,6.601161,4.141434,2.461652,-0.296666,-7.450813,-5.729307,-6.619733,-1.039665,-9.626445,-4.701269,3.996914,-6.534614,-0.538492,-2.161800,-3.971574,7.742831,-9.777981,9.340768,2.646348,-5.054169,7.373212,0.609337,8.940296,-0.409072,-8.778444,3.731135,-9.321286,-4.433178,7.055425,-5.812018,1.431552,1.650073,7.585133,-3.334552],[-2.800301,-1.467706,9.606372,-2.731019,-3.548976,-7.847986,5.932073,-2.409938,3.624971,-3.846839,2.433954,-3.086627,-9.417784,6.545577,2.285442,-3.099120,-8.091717,3.634695,-2.080053,-7.711537,-3.826433,0.171978,-6.284925,8.528149,-4.835150,0.334845,-5.459824,9.799193,3.607759,-8.411351,-6.116708,2.987039,-5.963205,-7.838921,-7.088229,8.623257,1.698859,-2.143788,-7.753978,2.244692,6.377089,5.180099,6.520765,-1.851668,1.829795,3.895082,0.923489,-9.662045,9.208655,-3.049484,-9.807065,-7.317202,7.473681,6.407206,-0.493166,-3.436897,8.045767,5.952909,-6.040427,-9.523359,7.566297,1.760172,-6.350653,-7.125627,-5.325634,3.627803,-0.577004,-0.220875,-1.668630,3.757846,5.440341,-9.380331,2.691226,0.144993,9.764119,5.898066,0.705309,7.108550,0.769835,6.206449,-3.989151,-9.887307,-0.272520,-2.754845],[-4.173945,6.598559,-3.290659,5.941511,8.934812,5.361029,-3.959014,6.674012,-2.031245,8.050614,-5.303952,1.745831,4.383171,8.729824,0.700151,-0.377017,-9.248926,6.783987,9.450677,-7.557271,6.237509,0.644177,2.367917,1.024669,0.727360,2.539889,7.637016,-4.111456,-6.115550,-7.118342,-4.828296,6.228698,-4.304679,1.526271,9.704736,-1.681848,6.155844,-6.129709,3.708299,-0.993643,-4.383469,-7.825075,7.126936,-6.530717,0.362848,2.796900,6.086604,-0.006675,8.243334,6.163917,5.998953,5.119009,4.247446,0.405672,3.896086,1.929808,7.327967,1.286514,4.567690,-7.697559,-9.265047,-7.891011,3.683489,8.839902,-5.317261,9.009837,-5.376358,-4.897399,1.621819,-1.824692,-7.612528,-3.357300,-4.020647,-9.061477,-5.618067,-6.139859,-7.093742,-6.313118,5.722427,-3.098761,1.915477,8.509825,-8.997901,5.855597],[-2.177039,-7.192642,-1.646204,-0.610051,-7.411067,-0.442457,-6.642466,1.870863,7.774585,-7.301236,9.445948,-2.399679,-8.018289,-9.366960,8.536226,-5.483804,-2.158405,-9.299604,-1.128960,3.264528,7.845937,1.707724,-7.279103,-2.681157,-1.836044,-6.347375,9.289276,-3.632128,-7.175475,-9.812026,0.410595,0.998521,0.420388,-9.433776,9.082295,-7.000410,2.014223,-3.611644,-7.441164,7.000582,7.818060,-5.241895,-6.898005,-3.096578,-1.661301,-1.916262,-7.682649,4.674261,-1.379485,3.107760,1.781857,-3.703079,9.847928,-8.355971,-9.045684,-0.058408,0.389384,-4.593795,-1.522761,-5.760859,-1.298733,-6.867104,5.234522,-6.730757,0.840212,3.399919,-5.191376,9.846506,-7.945604,7.631082,7.553481,-2.605590,9.797440,-9.629812,3.722700,-4.653897,2.612398,-4.759987,-0.227305,-6.578309,-6.330307,-0.707227,-7.498930,-7.455722]], dtype = "float64")#candidate|1691|(9, 84)|const|float64
call_1690 = relay.TupleGetItem(func_525_call(relay.reshape(const_1691.astype('float64'), [9, 14, 6])), 0)
call_1692 = relay.TupleGetItem(func_527_call(relay.reshape(const_1691.astype('float64'), [9, 14, 6])), 0)
output = relay.Tuple([bop_1668,call_1671,call_1684,var_1685,var_1686,uop_1688,call_1690,const_1691,])
output2 = relay.Tuple([bop_1668,call_1672,call_1687,var_1685,var_1686,uop_1688,call_1692,const_1691,])
func_1698 = relay.Function([var_1661,var_1685,var_1686,], output)
mod['func_1698'] = func_1698
mod = relay.transform.InferType()(mod)
var_1699 = relay.var("var_1699", dtype = "float64", shape = (8, 3, 7))#candidate|1699|(8, 3, 7)|var|float64
var_1700 = relay.var("var_1700", dtype = "float64", shape = (480,))#candidate|1700|(480,)|var|float64
var_1701 = relay.var("var_1701", dtype = "float32", shape = (975,))#candidate|1701|(975,)|var|float32
output = func_1698(var_1699,var_1700,var_1701,)
func_1702 = relay.Function([var_1699,var_1700,var_1701,], output)
mutated_mod['func_1702'] = func_1702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1389_call = mod.get_global_var('func_1389')
func_1390_call = mutated_mod.get_global_var('func_1390')
call_1741 = relay.TupleGetItem(func_1389_call(), 0)
call_1742 = relay.TupleGetItem(func_1390_call(), 0)
func_824_call = mod.get_global_var('func_824')
func_827_call = mutated_mod.get_global_var('func_827')
const_1749 = relay.const([8.312697,0.254681,2.580259,-6.036778,-0.043600,-1.110678,3.475046,8.571040,-7.657051,-9.979440,-8.608621,-0.720739,-3.508614,-5.887537,-9.368760,-7.042759,2.116381,2.140268,-4.849093,8.505962,-5.207541,-0.422074,1.728950,-4.058746,7.431697,-0.568446,-5.238818,6.028668,9.435838,-4.025274,1.664252,5.608962,-2.190003,-1.127708,-5.172357,7.410332,1.931628,0.311294,-2.606626,-7.000673,-0.495599,5.021002,4.716487,4.764531,3.606432,-5.520933,6.627296,7.524509,-6.414286,-4.741393,0.038689,9.531558,9.405577,-6.734064,5.072172,4.656093,6.397648,-4.328477,-9.780608,-5.051123,8.920297,-4.288373,-2.273497,-4.683690,4.826537,-4.239692,8.861276,8.571006,-0.442655,-4.984279,7.392022,7.821658,-7.387931,3.791045,-4.770107,-9.451896,8.181771,-9.236992,7.815613,-9.886699,5.316593,5.605167,4.856752,4.510344,-6.797571,7.906959,1.638126,8.063746,-8.773459,-9.329732,-5.418638,-4.881213,-3.951308,6.189941,1.654555,-0.083681,-4.476480,3.521074,6.552777,9.561090,-2.045286,1.810652,-3.371260,-8.296803,5.643228,7.170919,5.672568,2.498182,-7.626091,2.574651,2.105221,-6.936782,-3.335712,0.495050,-0.860965,6.544029,2.491691,-7.967398,4.836289,-8.665915,-7.372800,-2.520007,4.829476,5.591204,8.963496,4.203370,-4.929622,-5.026808,-4.919996,-9.165174,7.027115,0.781865,-7.256122,-2.659279,-7.788085,5.690003,-7.319838,0.970287,7.686056,8.837487,0.235047,5.130632,-7.873872,-8.082715,9.032369,4.231315,6.177042,5.634318,-5.719357,7.153418,-1.527220,4.203053,4.266581,-4.474924,0.817921,4.366507,3.613028,3.603894,-4.281663,-5.566052,-1.380447,-9.213101,-7.553304,-9.783589,2.649692,-1.619868,-6.700703,-0.235205,-3.774143,-3.668780,-6.491242,-0.923474,9.888630,2.040111,-3.874237,5.042168,5.404151,-1.340106,-2.561440,8.917098,-7.052706,3.270923,7.938346,-4.743202,4.523492,-5.860810,-9.350093,2.606198,-5.216709,-0.941425,-5.768878,6.958195,7.744528,1.748251,-6.969453,-1.437647,-4.182712,5.897454,5.503119,9.006844,7.410329,3.367787,5.323889,7.931549,7.867984,-1.380595,7.553704,-8.852750,3.310500,-0.468903,-3.129439,-2.261324,7.887785,-7.971497,-3.291972,7.283053,5.528930,2.890018,6.769913,-2.914620,-0.494490,-6.164885,7.989379,8.690402,-2.405530,-8.790634,-3.427945,-8.024458,3.633022,-2.349809,-9.180371,0.738936,-1.325904,-5.126858,2.671775,8.646963,7.457439,2.990050,-8.776814,8.318349,2.827468,9.939693,5.860897,7.872880,-3.694652,-3.593350,3.935971,1.069650,-1.550468,5.572143,-5.823014,-0.210222,-6.928699,-9.172732,-0.686656,0.058356,-3.076011,5.546114,-4.841463,-8.722445,-1.121165,-9.325390,-5.432430,-2.129445], dtype = "float64")#candidate|1749|(264,)|const|float64
call_1748 = relay.TupleGetItem(func_824_call(relay.reshape(const_1749.astype('float64'), [12, 11, 2])), 0)
call_1750 = relay.TupleGetItem(func_827_call(relay.reshape(const_1749.astype('float64'), [12, 11, 2])), 0)
output = relay.Tuple([call_1741,call_1748,const_1749,])
output2 = relay.Tuple([call_1742,call_1750,const_1749,])
func_1756 = relay.Function([], output)
mod['func_1756'] = func_1756
mod = relay.transform.InferType()(mod)
mutated_mod['func_1756'] = func_1756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1756_call = mutated_mod.get_global_var('func_1756')
call_1757 = func_1756_call()
output = call_1757
func_1758 = relay.Function([], output)
mutated_mod['func_1758'] = func_1758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1261_call = mod.get_global_var('func_1261')
func_1263_call = mutated_mod.get_global_var('func_1263')
call_1765 = relay.TupleGetItem(func_1261_call(), 0)
call_1766 = relay.TupleGetItem(func_1263_call(), 0)
output = relay.Tuple([call_1765,])
output2 = relay.Tuple([call_1766,])
func_1788 = relay.Function([], output)
mod['func_1788'] = func_1788
mod = relay.transform.InferType()(mod)
output = func_1788()
func_1789 = relay.Function([], output)
mutated_mod['func_1789'] = func_1789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1043_call = mod.get_global_var('func_1043')
func_1045_call = mutated_mod.get_global_var('func_1045')
call_1795 = relay.TupleGetItem(func_1043_call(), 1)
call_1796 = relay.TupleGetItem(func_1045_call(), 1)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_1803 = relay.TupleGetItem(func_1200_call(), 2)
call_1804 = relay.TupleGetItem(func_1201_call(), 2)
func_1756_call = mod.get_global_var('func_1756')
func_1758_call = mutated_mod.get_global_var('func_1758')
call_1814 = relay.TupleGetItem(func_1756_call(), 1)
call_1815 = relay.TupleGetItem(func_1758_call(), 1)
output = relay.Tuple([call_1795,call_1803,call_1814,])
output2 = relay.Tuple([call_1796,call_1804,call_1815,])
func_1822 = relay.Function([], output)
mod['func_1822'] = func_1822
mod = relay.transform.InferType()(mod)
output = func_1822()
func_1823 = relay.Function([], output)
mutated_mod['func_1823'] = func_1823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_1836 = relay.TupleGetItem(func_864_call(), 0)
call_1837 = relay.TupleGetItem(func_865_call(), 0)
var_1838 = relay.var("var_1838", dtype = "float32", shape = (13, 9, 4))#candidate|1838|(13, 9, 4)|var|float32
bop_1839 = relay.less(call_1836.astype('bool'), var_1838.astype('bool')) # shape=(13, 9, 4)
bop_1842 = relay.less(call_1837.astype('bool'), var_1838.astype('bool')) # shape=(13, 9, 4)
func_593_call = mod.get_global_var('func_593')
func_595_call = mutated_mod.get_global_var('func_595')
var_1850 = relay.var("var_1850", dtype = "float32", shape = (324,))#candidate|1850|(324,)|var|float32
call_1849 = relay.TupleGetItem(func_593_call(relay.reshape(var_1850.astype('float32'), [9, 9, 4])), 0)
call_1851 = relay.TupleGetItem(func_595_call(relay.reshape(var_1850.astype('float32'), [9, 9, 4])), 0)
func_1145_call = mod.get_global_var('func_1145')
func_1146_call = mutated_mod.get_global_var('func_1146')
call_1864 = relay.TupleGetItem(func_1145_call(), 0)
call_1865 = relay.TupleGetItem(func_1146_call(), 0)
output = relay.Tuple([bop_1839,call_1849,var_1850,call_1864,])
output2 = relay.Tuple([bop_1842,call_1851,var_1850,call_1865,])
func_1872 = relay.Function([var_1838,var_1850,], output)
mod['func_1872'] = func_1872
mod = relay.transform.InferType()(mod)
mutated_mod['func_1872'] = func_1872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1872_call = mutated_mod.get_global_var('func_1872')
var_1874 = relay.var("var_1874", dtype = "float32", shape = (13, 9, 4))#candidate|1874|(13, 9, 4)|var|float32
var_1875 = relay.var("var_1875", dtype = "float32", shape = (324,))#candidate|1875|(324,)|var|float32
call_1873 = func_1872_call(var_1874,var_1875,)
output = call_1873
func_1876 = relay.Function([var_1874,var_1875,], output)
mutated_mod['func_1876'] = func_1876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_779_call = mod.get_global_var('func_779')
func_780_call = mutated_mod.get_global_var('func_780')
call_1878 = func_779_call()
call_1879 = func_779_call()
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_1881 = relay.TupleGetItem(func_864_call(), 0)
call_1882 = relay.TupleGetItem(func_865_call(), 0)
bop_1887 = relay.maximum(call_1878.astype('int32'), relay.reshape(call_1881.astype('int32'), relay.shape_of(call_1878))) # shape=(1, 9, 4)
bop_1890 = relay.maximum(call_1879.astype('int32'), relay.reshape(call_1882.astype('int32'), relay.shape_of(call_1879))) # shape=(1, 9, 4)
output = relay.Tuple([bop_1887,])
output2 = relay.Tuple([bop_1890,])
func_1902 = relay.Function([], output)
mod['func_1902'] = func_1902
mod = relay.transform.InferType()(mod)
output = func_1902()
func_1903 = relay.Function([], output)
mutated_mod['func_1903'] = func_1903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1788_call = mod.get_global_var('func_1788')
func_1789_call = mutated_mod.get_global_var('func_1789')
call_1904 = relay.TupleGetItem(func_1788_call(), 0)
call_1905 = relay.TupleGetItem(func_1789_call(), 0)
output = relay.Tuple([call_1904,])
output2 = relay.Tuple([call_1905,])
func_1948 = relay.Function([], output)
mod['func_1948'] = func_1948
mod = relay.transform.InferType()(mod)
mutated_mod['func_1948'] = func_1948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1948_call = mutated_mod.get_global_var('func_1948')
call_1949 = func_1948_call()
output = call_1949
func_1950 = relay.Function([], output)
mutated_mod['func_1950'] = func_1950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1756_call = mod.get_global_var('func_1756')
func_1758_call = mutated_mod.get_global_var('func_1758')
call_1955 = relay.TupleGetItem(func_1756_call(), 1)
call_1956 = relay.TupleGetItem(func_1758_call(), 1)
func_1043_call = mod.get_global_var('func_1043')
func_1045_call = mutated_mod.get_global_var('func_1045')
call_1959 = relay.TupleGetItem(func_1043_call(), 1)
call_1960 = relay.TupleGetItem(func_1045_call(), 1)
var_1962 = relay.var("var_1962", dtype = "int64", shape = (12, 11, 2))#candidate|1962|(12, 11, 2)|var|int64
bop_1963 = relay.floor_divide(call_1955.astype('float32'), relay.reshape(var_1962.astype('float32'), relay.shape_of(call_1955))) # shape=(12, 11, 2)
bop_1966 = relay.floor_divide(call_1956.astype('float32'), relay.reshape(var_1962.astype('float32'), relay.shape_of(call_1956))) # shape=(12, 11, 2)
uop_1972 = relay.acosh(call_1955.astype('float64')) # shape=(12, 11, 2)
uop_1974 = relay.acosh(call_1956.astype('float64')) # shape=(12, 11, 2)
const_1985 = relay.const([[[7.851182,2.411517],[-5.607951,2.562734],[0.633315,4.901849],[-7.400304,6.259610],[2.838777,-0.439536],[3.659265,-0.051798],[4.182382,0.746597],[9.238481,7.048030],[-0.433304,8.798137],[1.438190,-0.276020],[2.761641,-8.734918]],[[8.461764,3.103062],[-4.582481,-1.987706],[1.606557,-4.179822],[6.256519,7.458737],[0.760592,2.999280],[5.592743,-9.382369],[2.022430,9.150929],[-0.227903,-9.995615],[-3.649332,-6.029626],[5.359583,-7.673086],[8.847103,-8.204440]],[[-7.859096,9.526509],[-6.929229,2.838212],[-4.345366,-8.766240],[-8.660148,-3.675580],[-1.292135,-0.783189],[-5.751366,1.939053],[-2.717128,-1.398340],[-9.540489,-9.868387],[3.456933,-9.998142],[-9.590860,5.274926],[-7.935008,-2.593998]],[[-8.218182,6.980777],[-3.920161,5.232873],[3.102372,-7.167635],[-8.825950,8.065935],[4.521047,0.844705],[-6.714509,7.294316],[4.428849,8.604423],[-9.401072,-8.024602],[-1.871322,8.748466],[-1.215659,1.579414],[1.720886,0.056872]],[[-5.341674,8.067518],[-1.802469,-9.194812],[-3.293921,2.550609],[3.378121,8.039392],[-0.679761,-6.892151],[-1.401732,5.545661],[-0.294363,-1.550843],[8.648344,5.496426],[-5.058771,2.871970],[7.374457,6.193869],[6.193713,9.281318]],[[4.535077,9.077943],[-9.274448,-5.679487],[3.446842,6.144457],[-7.118135,-4.701626],[3.909578,-7.266668],[-1.110873,-9.077524],[8.364098,5.726232],[-3.548118,6.375673],[-5.781227,-4.975632],[-4.809864,5.447095],[-7.264713,7.217771]],[[-3.986610,-3.454144],[2.285497,3.080068],[3.028122,2.236907],[-6.193799,8.771066],[5.714552,-5.133939],[7.871207,4.740653],[-6.929223,-8.450162],[5.885783,5.699952],[4.863850,-0.287410],[-2.510537,-2.628986],[3.195244,4.289819]],[[-3.876200,4.578125],[1.491609,2.689319],[-9.945051,3.537476],[4.564197,1.321146],[6.451852,-1.699307],[6.343000,-1.149248],[4.479327,8.939369],[-6.827185,-9.822897],[2.553905,3.575800],[0.485257,-7.909558],[1.076798,-4.759464]],[[1.186906,9.178251],[3.696499,5.012312],[-5.777557,-3.021742],[-2.317433,2.888534],[-8.492201,6.873817],[4.247993,6.731846],[-5.175265,-0.897517],[9.527046,-7.405445],[-6.802018,6.124553],[-0.097322,-1.884500],[-2.587243,-6.773172]],[[-6.267100,-0.175865],[7.902197,7.943564],[-7.773845,2.699910],[-6.736879,-4.583844],[4.443869,-3.599591],[-1.391534,5.726083],[-6.683652,-4.009831],[-8.007837,1.805493],[-9.760083,-4.646953],[4.025710,-9.910667],[-8.565118,-1.388180]],[[2.192795,-9.799101],[-2.169660,-4.761345],[-7.265935,7.760613],[-0.028312,-9.963842],[-2.879016,5.487214],[4.432827,-0.834825],[2.470200,-9.716998],[-5.799042,-8.440354],[5.921576,-4.200318],[4.187655,-9.510503],[-7.729054,-8.344586]],[[1.609837,-3.899155],[-1.194532,-3.855936],[5.571667,3.824388],[7.610276,-8.898232],[-5.609311,1.470834],[3.409861,2.649349],[1.304922,-2.166783],[7.221456,-0.629035],[7.991727,-9.909366],[-5.930881,0.199077],[1.479116,3.378613]]], dtype = "float64")#candidate|1985|(12, 11, 2)|const|float64
bop_1986 = relay.not_equal(uop_1972.astype('bool'), relay.reshape(const_1985.astype('bool'), relay.shape_of(uop_1972))) # shape=(12, 11, 2)
bop_1989 = relay.not_equal(uop_1974.astype('bool'), relay.reshape(const_1985.astype('bool'), relay.shape_of(uop_1974))) # shape=(12, 11, 2)
output = relay.Tuple([call_1959,bop_1963,bop_1986,])
output2 = relay.Tuple([call_1960,bop_1966,bop_1989,])
func_1991 = relay.Function([var_1962,], output)
mod['func_1991'] = func_1991
mod = relay.transform.InferType()(mod)
var_1992 = relay.var("var_1992", dtype = "int64", shape = (12, 11, 2))#candidate|1992|(12, 11, 2)|var|int64
output = func_1991(var_1992)
func_1993 = relay.Function([var_1992], output)
mutated_mod['func_1993'] = func_1993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_779_call = mod.get_global_var('func_779')
func_780_call = mutated_mod.get_global_var('func_780')
call_1995 = func_779_call()
call_1996 = func_779_call()
output = call_1995
output2 = call_1996
func_2001 = relay.Function([], output)
mod['func_2001'] = func_2001
mod = relay.transform.InferType()(mod)
output = func_2001()
func_2002 = relay.Function([], output)
mutated_mod['func_2002'] = func_2002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1788_call = mod.get_global_var('func_1788')
func_1789_call = mutated_mod.get_global_var('func_1789')
call_2061 = relay.TupleGetItem(func_1788_call(), 0)
call_2062 = relay.TupleGetItem(func_1789_call(), 0)
func_1145_call = mod.get_global_var('func_1145')
func_1146_call = mutated_mod.get_global_var('func_1146')
call_2071 = relay.TupleGetItem(func_1145_call(), 0)
call_2072 = relay.TupleGetItem(func_1146_call(), 0)
output = relay.Tuple([call_2061,call_2071,])
output2 = relay.Tuple([call_2062,call_2072,])
func_2073 = relay.Function([], output)
mod['func_2073'] = func_2073
mod = relay.transform.InferType()(mod)
output = func_2073()
func_2074 = relay.Function([], output)
mutated_mod['func_2074'] = func_2074
mutated_mod = relay.transform.InferType()(mutated_mod)
func_857_call = mod.get_global_var('func_857')
func_858_call = mutated_mod.get_global_var('func_858')
call_2085 = relay.TupleGetItem(func_857_call(), 1)
call_2086 = relay.TupleGetItem(func_858_call(), 1)
var_2095 = relay.var("var_2095", dtype = "float32", shape = (3, 9, 4))#candidate|2095|(3, 9, 4)|var|float32
bop_2096 = relay.divide(call_2085.astype('float32'), var_2095.astype('float32')) # shape=(3, 9, 4)
bop_2099 = relay.divide(call_2086.astype('float32'), var_2095.astype('float32')) # shape=(3, 9, 4)
bop_2110 = relay.greater_equal(var_2095.astype('bool'), call_2085.astype('bool')) # shape=(3, 9, 4)
bop_2113 = relay.greater_equal(var_2095.astype('bool'), call_2086.astype('bool')) # shape=(3, 9, 4)
uop_2115 = relay.sqrt(bop_2096.astype('float64')) # shape=(3, 9, 4)
uop_2117 = relay.sqrt(bop_2099.astype('float64')) # shape=(3, 9, 4)
func_1948_call = mod.get_global_var('func_1948')
func_1950_call = mutated_mod.get_global_var('func_1950')
call_2118 = relay.TupleGetItem(func_1948_call(), 0)
call_2119 = relay.TupleGetItem(func_1950_call(), 0)
uop_2138 = relay.atanh(uop_2115.astype('float64')) # shape=(3, 9, 4)
uop_2140 = relay.atanh(uop_2117.astype('float64')) # shape=(3, 9, 4)
func_1472_call = mod.get_global_var('func_1472')
func_1475_call = mutated_mod.get_global_var('func_1475')
const_2143 = relay.const([-9.814386,5.149182,-8.487377,7.474864,4.782043,-6.947861,-3.080944,-3.219860,0.770590,-9.882602,-8.841492,-8.330127,-2.020703,-6.983244,6.266270,-7.591155,-7.618032,7.508385,3.628850,-7.028259,8.681037,8.203217,3.416937,-0.117771,-8.033012,-6.357347,2.236660,-4.002404,9.209564,-5.214395,4.525923,-8.446711,-9.929307,-2.826652,2.874998,-7.213874,4.118914,-0.714852,4.801482,-7.975096,1.682551,-3.982940,9.941510,5.856795,1.397523,4.174207,-1.502250,5.207634,9.463636,-9.767841,-5.778362,-8.876648], dtype = "float64")#candidate|2143|(52,)|const|float64
call_2142 = func_1472_call(relay.reshape(const_2143.astype('float64'), [4, 13]), relay.reshape(const_2143.astype('float64'), [4, 13]), )
call_2144 = func_1472_call(relay.reshape(const_2143.astype('float64'), [4, 13]), relay.reshape(const_2143.astype('float64'), [4, 13]), )
output = relay.Tuple([bop_2110,call_2118,uop_2138,call_2142,const_2143,])
output2 = relay.Tuple([bop_2113,call_2119,uop_2140,call_2144,const_2143,])
func_2158 = relay.Function([var_2095,], output)
mod['func_2158'] = func_2158
mod = relay.transform.InferType()(mod)
var_2159 = relay.var("var_2159", dtype = "float32", shape = (3, 9, 4))#candidate|2159|(3, 9, 4)|var|float32
output = func_2158(var_2159)
func_2160 = relay.Function([var_2159], output)
mutated_mod['func_2160'] = func_2160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1360_call = mod.get_global_var('func_1360')
func_1362_call = mutated_mod.get_global_var('func_1362')
call_2175 = relay.TupleGetItem(func_1360_call(), 0)
call_2176 = relay.TupleGetItem(func_1362_call(), 0)
func_1261_call = mod.get_global_var('func_1261')
func_1263_call = mutated_mod.get_global_var('func_1263')
call_2184 = relay.TupleGetItem(func_1261_call(), 0)
call_2185 = relay.TupleGetItem(func_1263_call(), 0)
func_1621_call = mod.get_global_var('func_1621')
func_1624_call = mutated_mod.get_global_var('func_1624')
var_2190 = relay.var("var_2190", dtype = "float64", shape = (480,))#candidate|2190|(480,)|var|float64
const_2191 = relay.const([7.278426,8.319794,-9.726300,0.716831,-7.088409,-2.617170,-0.597575,-2.441189,3.251518,5.553597,0.896831,1.486992,-6.385419,9.506244,-3.986840,-0.367661,-3.466507,0.767261,-2.212293,-3.332742,6.718470,4.908766,-5.800762,-5.523954,-3.142905,0.107092,6.371517,9.406650,-4.807116,3.016967,3.041330,-5.045460,-7.865684,-8.243629,2.932867,3.721755,7.933119,-9.853798,-2.434523,3.876460,-7.442794,-5.207664,4.406611,8.672187,9.850917,-1.994065,9.371417,-8.689338,-1.389725,-0.734095,-7.116289,-4.082982,4.722109,7.476148,-9.804375,-4.267937,7.216230,-7.171471,-0.230496,-6.741608,-4.618602,-9.230264,-7.336778,3.005599,6.583036,-3.837077,5.479681,6.413725,4.945097,-5.002593,-4.733051,9.737123,-4.000864,-4.967428,3.112010,-2.166935,-1.845061,1.448418,8.681900,2.696256,3.175244,-3.835653,5.005980,4.983036,-3.973974,-1.605070,-7.970649,5.219653,9.759326,7.780334,-0.078947,-9.399657,-3.468651,7.697007,0.709201,-8.213486,-6.933204,8.233565,-6.747854,9.354057,9.346369,0.666722,3.291680,-0.705366,8.192591,1.624061,8.731651,-6.550334,-6.408240,9.972534,-6.004527,-0.175616,8.816899,-9.759615,-2.822809,-3.079711,2.215991,5.870791,-2.712115,8.364397,1.890228,-2.778712,0.998594,-0.467723,-9.363798,9.933539,1.330007,-3.194898,9.579417,-3.370415,-4.977321,1.959745,0.635606,-8.867011,-5.410784,5.448051,-2.940014,-9.409221,-4.281327,7.790855,7.608056,4.599830,-0.142674,4.945731,2.725279,1.219400,-8.808778,0.041631,9.229672,-1.226513,-0.689342,5.642334,4.813660,-1.518611,-8.603315,-5.304953,-7.077842,-0.236726,5.756252,-1.836424,-8.511233,-6.995516,0.236908,-8.302758,8.688365,-3.726900,-4.520673,3.061696,-6.983657,4.507598,0.773351,-6.318880,1.205353,4.903451,-6.114881,4.579484,3.408087,3.528047,-5.861849,-5.181188,-1.856629,6.674339,-9.270516,-3.832286,-1.094622,-0.268599,-6.411404,9.060784,6.738151,-6.704939,-5.103340,-5.129878,-8.060287,-9.163868,9.952523,-7.527954,-0.897364,-3.495037,-9.798159,6.406369,-3.477645,1.351263,-3.999287,2.639590,7.104433,0.230457,2.083849,8.179659,3.992158,-0.699771,-0.842303,0.034494,-6.234311,-5.102737,-7.795384,6.589243,0.416501,2.277406,7.839526,6.274004,3.575757,8.738725,1.230446,-7.174667,-7.816521,8.290091,4.106289,0.940336,4.807965,2.873868,8.299156,-5.430067,4.256118,-6.909464,-7.435717,1.416293,-8.818525,8.528322,8.846402,4.454224,-5.448962,2.016267,6.397059,-9.037090,-3.138150,-4.366071,-4.279268,-0.197532,2.142234,8.320911,-0.880150,4.007242,6.159140,-0.902380,-8.373349,-3.407310,4.095010,-6.690538,1.711397,6.313981,-1.557101,9.037254,-7.657893,-8.815328,2.044935,-4.922815,-7.458149,-7.781169,-4.318099,1.857508,-3.784978,8.410774,6.300298,-6.988792,-6.708777,-4.902531,-8.618372,-7.578465,2.708489,-6.036748,-5.152496,-8.078372,-2.048990,-7.245935,-1.585188,9.322450,9.658945,-0.035949,-4.758703,9.524445,-3.279652,-7.776330,-5.314826,3.278826,5.440628,-8.005009,-6.976762,8.911757,6.953492,5.725337,8.407730,6.702275,-2.386563,5.604871,-7.730330,5.259617,-0.205285,3.800720,-1.935954,-6.876693,-6.696509,4.061338,0.516246,8.758808,-2.344173,-1.584300,1.428215,0.715598,9.752561,3.577385,9.346766,-7.982899,-9.035287,-2.906605,0.046929,-4.003606,0.899967,-9.510266,-2.525566,-0.919069,9.702937,-7.553660,-8.196565,-5.888496,-9.784028,6.523239,-9.737062,1.019004,-1.185745,-8.550965,-8.881950,3.772420,-1.143114,6.975625,-5.383160,-6.592307,-3.477562,-2.554023,-9.141195,7.759003,-2.810872,-3.801883,-3.490651,1.386646,-6.697313,-0.147545,1.944618,-7.363492,-8.793364,-0.825231,9.361082,-5.525609,-5.420114,-9.876772,5.743767,7.373657,5.407294,-1.580034,-4.603876,-4.361463,8.524576,1.073797,-4.814243,4.318522,1.708255,8.268609,-0.660673,3.321085,0.546165,4.152699,1.986822,-8.221969,-9.220154,-5.636790,9.383166,4.243357,-7.379061,2.031303,1.247729,8.528196,-7.004744,5.813827,-8.908275,0.062265,8.307449,-3.722134,-7.906655,8.449377,1.116360,0.073749,-9.304007,-2.264610,5.265084,3.364660,-9.747635,-6.831839,-4.951131,7.805507,-1.454890,-2.445841,7.698528,-6.466226,6.206660,-7.558393,1.440752,4.175290,2.907638,-0.752268,7.365244,3.699884,-7.502667,9.816807,6.168997,8.463911,9.981191,6.236704,-3.764061,-0.521671,1.619436,8.861782,-1.623714,-7.882521,-0.402438,2.060445,2.248614,8.485597,-0.455722,-9.985687,4.060751,1.509404,6.958450,7.449675,-7.242177,5.338956,-3.588225,-1.484963,-5.432765,-2.457835,-2.323925,-4.954811,-5.777981,3.804707,-9.968454,9.844867,-7.257953,4.791170,7.412939,1.094045,-6.507498,-9.706390,6.415636,-2.702575,4.191073,-8.580481,-3.287549,4.723211,-3.457646,0.845106,-8.403206,-3.536059,5.261504,-8.424941,-4.857766,-6.381103,6.624300,-1.210849,5.913060,-3.919333,0.006424,-1.840692,9.159939,7.498626,3.134409,5.238193,0.490417,-1.384483,4.397865,9.989511,-8.535005,-8.878441,-8.801216,6.353297,0.382947,9.450174,-5.925215,-6.271504,9.323320,-1.397374,-8.146868,9.647606,8.443198,-8.304355,-3.351841,3.657838,3.936933,-1.676915,-2.231105,-0.600417,6.698870,-1.807296,3.981168,-1.221426,-6.323531,4.924663,-6.928072,-9.113243,-2.776295,-5.940473,1.387117,-2.009634,1.944418,-9.477127,-1.309405,-9.248781,-8.178578,3.112114,7.654729,2.156577,-0.611620,0.874609,1.177580,8.144499,-4.749879,-1.215176,4.933695,9.344779,-4.841385,-8.738787,-1.089925,-1.648410,2.368421,-7.390659,2.581076,8.820108,0.863746,-9.787881,-2.740483,-0.490973,6.028077,-9.289491,9.459244,-9.304512,-1.787214,-7.174995,8.055024,3.114165,7.107418,1.850251,0.873745,-1.071575,2.516710,4.384256,-5.123532,5.275782,5.415598,-9.207510,5.993564,-1.337729,0.059164,-4.397407,8.694768,-8.977400,8.801272,-3.477572,-0.840578,4.156354,9.334831,1.958326,2.628931,-7.900232,6.219230,1.792528,8.762330,-0.591376,0.110634,5.251284,-8.477721,1.750396,6.256443,2.284460,-5.163460,-2.935363,3.516201,-8.751706,-4.212374,8.577002,9.971693,-6.764839,-4.268648,-7.775125,9.762930,3.321811,6.706177,9.501855,-1.775322,-5.913433,-6.384781,-9.315069,-3.556552,-9.516837,8.649699,-1.449923,-5.695146,7.415258,9.665006,-7.114411,3.191086,1.949845,-4.541216,-7.840452,6.409101,-4.652974,1.093966,2.730773,4.484405,-6.146613,-7.845904,2.925226,7.654346,9.933969,-6.292909,3.241307,7.843522,-1.969330,7.202491,-5.066443,8.006199,-8.134487,-8.459182,2.886075,8.724824,-9.329017,-5.704244,8.441511,8.578498,7.666246,-1.515167,3.704288,4.929233,-0.377424,-6.008496,6.923611,6.973657,-3.567984,2.682921,6.790427,6.434792,-6.422774,5.595774,4.933567,5.795317,0.222590,6.309067,1.345926,-6.753394,-7.829468,5.630230,4.745701,2.002404,-5.563705,9.007071,-6.350223,9.565998,-7.599148,-0.633001,2.908460,-5.962813,6.850727,-8.917886,-0.101256,-9.836107,4.842790,-2.242850,-8.033048,4.962479,5.279873,-8.237691,8.546239,-1.208036,8.682825,-5.027333,-6.383134,3.358570,-2.452171,2.378338,-8.919608,8.552797,9.990960,-0.720991,-0.599763,-6.299562,-7.344009,7.809462,-7.017314,-2.807534,-0.776556,8.000770,9.727141,-1.893473,-8.885111,5.143814,-6.735395,-8.349904,-5.752758,3.866580,-3.743046,-0.505663,7.746721,3.206593,-8.722168,9.869449,-8.598582,1.066732,7.189882,3.611079,2.009910,-2.986467,-7.564239,3.092453,-1.939492,6.295267,-7.215280,4.205976,0.643555,-1.394341,-4.953985,-4.302947,-7.932852,7.456509,1.965823,8.424711,0.574743,-9.138464,-5.812725,-9.385609,5.694553,-8.759264,-3.231178,9.208604,-3.836875,0.579828,6.060872,0.518159,0.587262,5.508832,0.292681,-6.674658,-4.931052,-9.504281,-8.762309,7.673352,-8.404965,-5.911116,-1.131000,-4.986574,3.774612,6.523469,5.706171,-9.175090,4.224443,-9.292126,-3.490324,7.357730,6.864184,8.487108,6.288467,7.179970,-0.400208,-8.590860,2.201402,0.130761,-5.826057,7.324036,4.039549,-9.252744,2.155079,-2.064173,1.858554,8.656196,4.440217,6.974572,0.798160,9.564068,-1.635413,-1.192994,-6.937522,-8.110691,9.839799,7.236253,4.860744,9.620137,-2.998138,-0.048780,-0.737754,-1.374343,-2.498097,-2.361904,6.634093,-4.597025,4.114954,9.311630,-7.532202,-9.762753,-1.063900,3.727150,0.188524,-7.987654,-4.487650,-1.452522,-5.958553,-3.093628,-8.767733,7.396621,-9.334764,6.634639,-0.525883,-5.881837,-7.622957,-1.792443,-4.430857,-3.636373,5.349496,3.649677,7.128677,-2.971296,-1.588110,-1.379439,1.511685,-8.725353,5.908774,2.243262,6.577009,3.883239,-5.194574,-9.585607,0.307859,-9.738775,6.481272,-9.435652,5.931171,0.287927,1.661762,-3.535043,8.661095,0.315941,-4.578084,-3.752344,-5.544371,6.877624,-2.328836,1.068899,-9.999922,-5.694628,1.210879,-3.373620,2.360870,-2.191264,-1.934963,7.678030,-6.259159,-7.390286,1.336612,-0.655489,-2.682782,-7.879410,8.551521,-4.146408,0.390959,2.597301,1.480564,-3.221297,9.146386,-4.882621,0.013928,3.058561,-8.077534,8.063702,2.513789,1.561527,4.712785,-2.586158,8.551202,1.524329,1.878367,5.766265,-0.929329,9.473595,-0.475212,7.986156,1.426272,8.638717,0.457846,1.357581,-6.807249,-3.188608,-0.069200,-1.470824,-7.983761,-6.326763,2.115243,-7.273260,4.639589,3.153135,4.942233,-7.635296,-9.977272,-0.431038,-3.857628,-0.440777,-7.788479,-3.698308,0.342945,-3.868291,-7.213020,7.695293,-5.650893,-2.589217,8.317244,-1.601772,-6.700662,3.055770,-8.242773,-9.855142,8.826640,-6.574756,-2.686624,-9.691543,1.591352,7.665044,3.574871,1.567737,-4.549620,-5.019681,-0.073502,8.657081,8.217221,9.506268,-9.569871,-4.540452,-1.655278,-4.533011,8.937825,-6.443067,6.616901,7.002323,-4.917697,1.479493,-6.806305,-4.728526,-2.396797,7.990707,-9.413845,7.574083,6.722364,-8.078068,-4.196612,-1.975292,1.608797,0.496005,-6.490195,0.252508,8.782389,6.310447,-2.869090,-3.238814], dtype = "float32")#candidate|2191|(975,)|const|float32
call_2189 = relay.TupleGetItem(func_1621_call(relay.reshape(var_2190.astype('float64'), [16, 5, 6]), relay.reshape(const_2191.astype('float32'), [975,]), ), 0)
call_2192 = relay.TupleGetItem(func_1624_call(relay.reshape(var_2190.astype('float64'), [16, 5, 6]), relay.reshape(const_2191.astype('float32'), [975,]), ), 0)
output = relay.Tuple([call_2175,call_2184,call_2189,var_2190,const_2191,])
output2 = relay.Tuple([call_2176,call_2185,call_2192,var_2190,const_2191,])
func_2193 = relay.Function([var_2190,], output)
mod['func_2193'] = func_2193
mod = relay.transform.InferType()(mod)
var_2194 = relay.var("var_2194", dtype = "float64", shape = (480,))#candidate|2194|(480,)|var|float64
output = func_2193(var_2194)
func_2195 = relay.Function([var_2194], output)
mutated_mod['func_2195'] = func_2195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_2208 = relay.TupleGetItem(func_1902_call(), 0)
call_2209 = relay.TupleGetItem(func_1903_call(), 0)
output = call_2208
output2 = call_2209
func_2211 = relay.Function([], output)
mod['func_2211'] = func_2211
mod = relay.transform.InferType()(mod)
mutated_mod['func_2211'] = func_2211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mutated_mod.get_global_var('func_2211')
call_2212 = func_2211_call()
output = call_2212
func_2213 = relay.Function([], output)
mutated_mod['func_2213'] = func_2213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2073_call = mod.get_global_var('func_2073')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_2226 = relay.TupleGetItem(func_2073_call(), 1)
call_2227 = relay.TupleGetItem(func_2074_call(), 1)
func_1948_call = mod.get_global_var('func_1948')
func_1950_call = mutated_mod.get_global_var('func_1950')
call_2230 = relay.TupleGetItem(func_1948_call(), 0)
call_2231 = relay.TupleGetItem(func_1950_call(), 0)
var_2239 = relay.var("var_2239", dtype = "float64", shape = (16, 9, 4))#candidate|2239|(16, 9, 4)|var|float64
bop_2240 = relay.greater_equal(call_2226.astype('bool'), var_2239.astype('bool')) # shape=(16, 9, 4)
bop_2243 = relay.greater_equal(call_2227.astype('bool'), var_2239.astype('bool')) # shape=(16, 9, 4)
func_1261_call = mod.get_global_var('func_1261')
func_1263_call = mutated_mod.get_global_var('func_1263')
call_2244 = relay.TupleGetItem(func_1261_call(), 0)
call_2245 = relay.TupleGetItem(func_1263_call(), 0)
uop_2247 = relay.atanh(call_2244.astype('float32')) # shape=(1, 9, 4)
uop_2249 = relay.atanh(call_2245.astype('float32')) # shape=(1, 9, 4)
func_1145_call = mod.get_global_var('func_1145')
func_1146_call = mutated_mod.get_global_var('func_1146')
call_2253 = relay.TupleGetItem(func_1145_call(), 0)
call_2254 = relay.TupleGetItem(func_1146_call(), 0)
func_139_call = mod.get_global_var('func_139')
func_142_call = mutated_mod.get_global_var('func_142')
var_2278 = relay.var("var_2278", dtype = "int16", shape = (6,))#candidate|2278|(6,)|var|int16
call_2277 = relay.TupleGetItem(func_139_call(relay.reshape(var_2278.astype('int16'), [2, 3]), relay.reshape(var_2278.astype('int16'), [2, 3]), ), 0)
call_2279 = relay.TupleGetItem(func_142_call(relay.reshape(var_2278.astype('int16'), [2, 3]), relay.reshape(var_2278.astype('int16'), [2, 3]), ), 0)
output = relay.Tuple([call_2230,bop_2240,uop_2247,call_2253,call_2277,var_2278,])
output2 = relay.Tuple([call_2231,bop_2243,uop_2249,call_2254,call_2279,var_2278,])
func_2280 = relay.Function([var_2239,var_2278,], output)
mod['func_2280'] = func_2280
mod = relay.transform.InferType()(mod)
mutated_mod['func_2280'] = func_2280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2280_call = mutated_mod.get_global_var('func_2280')
var_2282 = relay.var("var_2282", dtype = "float64", shape = (16, 9, 4))#candidate|2282|(16, 9, 4)|var|float64
var_2283 = relay.var("var_2283", dtype = "int16", shape = (6,))#candidate|2283|(6,)|var|int16
call_2281 = func_2280_call(var_2282,var_2283,)
output = call_2281
func_2284 = relay.Function([var_2282,var_2283,], output)
mutated_mod['func_2284'] = func_2284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_2286 = relay.TupleGetItem(func_864_call(), 0)
call_2287 = relay.TupleGetItem(func_865_call(), 0)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_2293 = func_2211_call()
call_2294 = func_2211_call()
func_578_call = mod.get_global_var('func_578')
func_580_call = mutated_mod.get_global_var('func_580')
call_2308 = func_578_call()
call_2309 = func_578_call()
func_578_call = mod.get_global_var('func_578')
func_580_call = mutated_mod.get_global_var('func_580')
call_2315 = func_578_call()
call_2316 = func_578_call()
func_1074_call = mod.get_global_var('func_1074')
func_1075_call = mutated_mod.get_global_var('func_1075')
call_2318 = relay.TupleGetItem(func_1074_call(), 0)
call_2319 = relay.TupleGetItem(func_1075_call(), 0)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_2323 = relay.TupleGetItem(func_864_call(), 0)
call_2324 = relay.TupleGetItem(func_865_call(), 0)
output = relay.Tuple([call_2286,call_2293,call_2308,call_2315,call_2318,call_2323,])
output2 = relay.Tuple([call_2287,call_2294,call_2309,call_2316,call_2319,call_2324,])
func_2325 = relay.Function([], output)
mod['func_2325'] = func_2325
mod = relay.transform.InferType()(mod)
output = func_2325()
func_2326 = relay.Function([], output)
mutated_mod['func_2326'] = func_2326
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2331 = relay.var("var_2331", dtype = "float64", shape = (11, 11, 4))#candidate|2331|(11, 11, 4)|var|float64
uop_2332 = relay.log2(var_2331.astype('float64')) # shape=(11, 11, 4)
output = relay.Tuple([uop_2332,])
output2 = relay.Tuple([uop_2332,])
func_2352 = relay.Function([var_2331,], output)
mod['func_2352'] = func_2352
mod = relay.transform.InferType()(mod)
mutated_mod['func_2352'] = func_2352
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2353 = relay.var("var_2353", dtype = "float64", shape = (11, 11, 4))#candidate|2353|(11, 11, 4)|var|float64
func_2352_call = mutated_mod.get_global_var('func_2352')
call_2354 = func_2352_call(var_2353)
output = call_2354
func_2355 = relay.Function([var_2353], output)
mutated_mod['func_2355'] = func_2355
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2377 = relay.var("var_2377", dtype = "float64", shape = (15, 1, 5))#candidate|2377|(15, 1, 5)|var|float64
uop_2378 = relay.acosh(var_2377.astype('float64')) # shape=(15, 1, 5)
output = relay.Tuple([uop_2378,])
output2 = relay.Tuple([uop_2378,])
func_2381 = relay.Function([var_2377,], output)
mod['func_2381'] = func_2381
mod = relay.transform.InferType()(mod)
var_2382 = relay.var("var_2382", dtype = "float64", shape = (15, 1, 5))#candidate|2382|(15, 1, 5)|var|float64
output = func_2381(var_2382)
func_2383 = relay.Function([var_2382], output)
mutated_mod['func_2383'] = func_2383
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2388 = relay.const([[[-0.149138,-1.379053,-6.790839,-1.251934,-2.278101,-9.621656],[-1.273833,6.845840,-0.802926,6.995897,9.379765,2.578425],[-8.523871,7.084833,-9.617723,0.764665,8.645660,-1.285959],[0.415068,-1.658956,1.369791,8.210334,7.571537,-6.365068],[4.365324,-9.988119,3.195507,-2.235018,4.184893,-2.975942],[-4.740902,-2.440650,-9.928495,6.721098,8.775174,4.678883],[-9.189842,-2.684250,5.111606,1.544275,0.057307,-6.634828],[-6.271515,-3.894096,-3.965039,8.071387,-8.853026,-6.727412]],[[1.976639,-9.321980,-7.792148,9.122047,0.203004,-4.893049],[-7.233560,6.381616,8.479427,-5.285447,-7.746471,-2.114368],[8.488838,9.254860,4.707700,-8.160632,8.120121,-5.013811],[3.737568,-7.025600,9.587315,8.825023,0.877510,7.490363],[-5.204391,-8.699607,1.582584,9.050506,-4.553033,-8.354428],[9.161707,-9.343802,-5.569088,-6.241813,-5.155021,-8.131066],[3.764200,6.478081,-0.684414,6.238815,-5.400705,-8.714066],[-1.711365,8.410789,-4.963376,3.398893,-1.382839,9.575057]],[[-4.195635,-6.414628,-0.134249,-9.110507,3.885178,-0.946953],[0.069105,-8.138365,9.112976,0.343849,4.562832,3.042166],[-3.016708,4.216220,-3.658270,4.455088,-6.688516,-2.792969],[-0.423411,-0.262533,-9.787938,-4.743818,-5.365665,-8.009248],[7.256553,-4.722151,-3.135719,-2.779111,-5.141759,0.449566],[-5.020789,4.554627,1.692329,-7.852921,-7.060957,2.002936],[8.994402,-5.884579,-8.843051,-3.644284,-9.651869,-4.047965],[-9.478243,-7.140155,-5.419276,2.084353,-2.954375,6.122729]],[[-1.923955,-6.307259,-9.215901,-5.653078,4.877481,-4.231410],[4.678796,1.748890,5.463304,-5.329375,-3.591633,-3.648939],[-4.604273,-7.793454,-4.389858,-6.220063,7.319168,1.618706],[-6.169749,2.117618,2.861517,-4.710320,-7.747878,-9.241694],[2.361315,5.632208,3.742383,7.168163,-5.074035,2.934216],[9.859493,8.153840,-8.501986,3.215697,-0.677878,-0.099595],[-6.468025,-4.651430,-4.036555,-0.785963,4.845899,2.516089],[4.679223,2.206365,-0.902024,-9.989795,-6.439130,-8.242434]],[[-5.331548,-7.249000,9.038201,-0.540546,8.583463,-3.722193],[-4.382952,5.638227,4.412812,-4.891512,4.063323,-9.310938],[-3.570488,-7.705611,-8.780368,0.569726,-4.930383,-5.599314],[-0.764626,0.844828,8.652288,5.557922,-8.811462,-7.158388],[-1.171537,-6.711594,-6.121573,5.975549,1.974719,1.977922],[1.008928,-8.160023,-6.244128,3.277220,-1.189548,-8.643470],[-8.267284,9.275903,7.355924,-0.262209,-8.242253,9.816217],[1.750483,-9.833765,-5.586738,5.290093,-5.797808,5.452422]],[[-4.589524,-3.489906,8.042130,-0.475312,-1.645850,-4.369471],[9.027456,4.380387,0.188656,-3.197818,-8.810395,5.958886],[6.715189,-7.146025,2.659982,-8.737259,-2.721547,-4.924056],[-1.963700,3.747606,-8.214644,-3.276707,4.879032,3.456427],[-7.208848,8.117722,-1.659706,-8.579775,6.086792,-5.808345],[-1.734188,-4.850501,2.252291,0.360790,-0.652292,-0.774789],[-8.132230,-1.724599,6.951420,7.689897,-2.227560,-0.069958],[3.530793,-8.836365,7.320359,5.731926,9.741539,-1.650140]],[[-7.434243,-8.047974,-1.724212,1.493263,6.900376,-2.175871],[-5.931460,0.816829,1.048027,2.791119,-8.035476,6.392994],[-4.057811,9.720995,3.646331,-2.123905,5.105976,-6.418571],[-2.930871,9.423507,7.873572,-2.509724,7.954722,-0.982938],[4.904886,6.174411,8.014528,9.771854,-0.814301,-1.758421],[-8.106932,7.227331,7.958988,5.746162,-8.227637,-6.606853],[2.164982,9.720192,-0.344358,6.426262,3.372991,9.454703],[7.500019,2.000913,3.804743,7.603113,-4.781427,-8.792181]],[[-0.007990,5.324962,-2.880601,1.089711,-9.394953,-8.650412],[-2.974772,-7.947376,-1.860135,2.717967,-6.345202,5.854857],[-0.129205,1.033594,-6.453183,-5.861374,-7.644318,6.648729],[4.010238,-0.208902,0.262174,-3.451991,-9.494399,6.133830],[-8.013723,-4.985294,7.148701,5.891520,1.189228,0.889091],[-2.122875,-8.556787,8.631213,2.076345,-7.535746,6.140712],[-6.610833,-9.373103,-0.002530,3.520142,-4.085433,-6.146857],[-4.871311,4.555832,-0.926802,4.830431,-7.650144,8.129313]],[[0.966958,5.397889,-2.049929,1.340955,-7.670785,9.814659],[2.666611,-7.668656,3.916746,-8.569281,-2.875297,1.479646],[-9.524538,7.512324,-6.787571,-2.863357,6.289625,-7.038978],[-5.241098,-3.374387,7.312899,-8.712598,-7.251286,-6.899711],[1.755820,2.828318,-3.787474,-8.113537,4.644754,3.399983],[4.211311,9.747058,9.988602,-8.184545,7.933900,4.903131],[5.019967,-8.407356,-1.819407,8.368831,5.821218,7.687046],[4.658634,-2.017887,4.326702,-5.131507,3.765472,0.922943]],[[6.570137,0.671527,-5.693499,6.818269,-3.281165,7.470088],[-6.847626,-3.484109,-7.004851,7.220061,7.451841,-6.587828],[-5.842686,5.726146,7.085378,-6.686193,9.421061,2.523428],[-3.982175,3.609408,-5.620544,1.160692,3.030732,-2.189021],[3.502994,0.990990,8.159579,4.587922,-1.082378,-2.536689],[7.657864,6.000472,-4.703697,-1.951238,7.922277,6.804367],[1.159322,7.950714,-3.176734,-4.933673,9.606583,-3.495614],[7.528847,-7.984457,4.279871,1.372600,-0.518114,2.336206]],[[-8.547260,3.045866,7.863455,5.128640,-3.628656,8.632318],[0.872425,-2.791472,0.180404,2.910397,0.809436,-5.400704],[-6.582904,0.076064,-6.321348,4.368951,0.820727,1.648240],[2.005637,0.771102,7.941757,-4.875170,-6.851477,9.137286],[-0.866316,-9.164013,4.286527,-6.057225,9.944117,-2.775252],[-5.593017,-1.196613,-6.249872,-6.338177,-4.531825,8.580430],[-1.727367,-9.363975,9.316333,-1.932919,0.405199,0.126782],[0.619421,-9.108733,7.412784,8.964052,5.820466,3.289249]]], dtype = "float32")#candidate|2388|(11, 8, 6)|const|float32
var_2389 = relay.var("var_2389", dtype = "float32", shape = (11, 8, 6))#candidate|2389|(11, 8, 6)|var|float32
bop_2390 = relay.floor_mod(const_2388.astype('float32'), relay.reshape(var_2389.astype('float32'), relay.shape_of(const_2388))) # shape=(11, 8, 6)
output = bop_2390
output2 = bop_2390
func_2395 = relay.Function([var_2389,], output)
mod['func_2395'] = func_2395
mod = relay.transform.InferType()(mod)
var_2396 = relay.var("var_2396", dtype = "float32", shape = (11, 8, 6))#candidate|2396|(11, 8, 6)|var|float32
output = func_2395(var_2396)
func_2397 = relay.Function([var_2396], output)
mutated_mod['func_2397'] = func_2397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2073_call = mod.get_global_var('func_2073')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_2405 = relay.TupleGetItem(func_2073_call(), 1)
call_2406 = relay.TupleGetItem(func_2074_call(), 1)
output = call_2405
output2 = call_2406
func_2409 = relay.Function([], output)
mod['func_2409'] = func_2409
mod = relay.transform.InferType()(mod)
mutated_mod['func_2409'] = func_2409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2409_call = mutated_mod.get_global_var('func_2409')
call_2410 = func_2409_call()
output = call_2410
func_2411 = relay.Function([], output)
mutated_mod['func_2411'] = func_2411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1145_call = mod.get_global_var('func_1145')
func_1146_call = mutated_mod.get_global_var('func_1146')
call_2420 = relay.TupleGetItem(func_1145_call(), 0)
call_2421 = relay.TupleGetItem(func_1146_call(), 0)
uop_2428 = relay.tan(call_2420.astype('float64')) # shape=(1, 9, 4)
uop_2430 = relay.tan(call_2421.astype('float64')) # shape=(1, 9, 4)
func_1472_call = mod.get_global_var('func_1472')
func_1475_call = mutated_mod.get_global_var('func_1475')
var_2453 = relay.var("var_2453", dtype = "float64", shape = (52,))#candidate|2453|(52,)|var|float64
call_2452 = func_1472_call(relay.reshape(var_2453.astype('float64'), [4, 13]), relay.reshape(var_2453.astype('float64'), [4, 13]), )
call_2454 = func_1472_call(relay.reshape(var_2453.astype('float64'), [4, 13]), relay.reshape(var_2453.astype('float64'), [4, 13]), )
output = relay.Tuple([uop_2428,call_2452,var_2453,])
output2 = relay.Tuple([uop_2430,call_2454,var_2453,])
func_2455 = relay.Function([var_2453,], output)
mod['func_2455'] = func_2455
mod = relay.transform.InferType()(mod)
mutated_mod['func_2455'] = func_2455
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2456 = relay.var("var_2456", dtype = "float64", shape = (52,))#candidate|2456|(52,)|var|float64
func_2455_call = mutated_mod.get_global_var('func_2455')
call_2457 = func_2455_call(var_2456)
output = call_2457
func_2458 = relay.Function([var_2456], output)
mutated_mod['func_2458'] = func_2458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_2470 = relay.TupleGetItem(func_1200_call(), 1)
call_2471 = relay.TupleGetItem(func_1201_call(), 1)
func_1531_call = mod.get_global_var('func_1531')
func_1533_call = mutated_mod.get_global_var('func_1533')
call_2474 = relay.TupleGetItem(func_1531_call(), 0)
call_2475 = relay.TupleGetItem(func_1533_call(), 0)
output = relay.Tuple([call_2470,call_2474,])
output2 = relay.Tuple([call_2471,call_2475,])
func_2479 = relay.Function([], output)
mod['func_2479'] = func_2479
mod = relay.transform.InferType()(mod)
output = func_2479()
func_2480 = relay.Function([], output)
mutated_mod['func_2480'] = func_2480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1756_call = mod.get_global_var('func_1756')
func_1758_call = mutated_mod.get_global_var('func_1758')
call_2530 = relay.TupleGetItem(func_1756_call(), 2)
call_2531 = relay.TupleGetItem(func_1758_call(), 2)
func_2280_call = mod.get_global_var('func_2280')
func_2284_call = mutated_mod.get_global_var('func_2284')
const_2561 = relay.const([-6.995955,-4.132630,-5.395576,-5.054951,8.699135,5.320340,-4.669451,-4.884477,5.611540,-3.088967,-9.147715,1.153562,-6.332400,-2.061426,-6.501932,-9.182614,-5.139624,-1.053126,5.317825,9.700042,4.711422,-5.280905,-6.981018,-1.718411,2.961138,3.263232,-1.124944,9.506681,5.482294,-4.986625,-7.825284,7.921259,8.335447,8.878543,-7.978171,-5.184690,-0.477265,1.707685,5.797790,-1.230233,1.117279,-8.127168,-0.135826,-0.779518,5.021658,7.638641,9.850892,-1.725211,9.724605,2.835885,4.390880,2.979884,-9.470535,-2.831934,-4.175861,-9.743989,-4.032368,0.791908,-9.097217,-8.658341,-3.698587,-5.614197,-1.379245,1.176558,-3.722045,2.833966,-0.205446,0.475352,-1.689895,-0.401238,-4.230728,-7.726497,-8.397055,9.856033,6.445286,-4.300416,-6.200290,4.798718,-5.323305,-4.199859,2.361760,-9.744454,-7.320888,-7.770018,3.330829,3.468300,6.829437,-6.305204,9.743704,-1.743460,8.255198,-9.785435,6.238951,0.824200,-8.291362,8.875261,2.192401,7.863811,2.548587,-4.691676,3.447448,9.648940,5.326870,-8.685188,7.033934,2.903458,5.071958,-8.963995,7.954154,-7.636134,2.994095,2.870795,5.938606,-8.010164,-8.824326,7.011665,-7.918173,-0.300587,-5.426813,-6.425547,-0.406232,7.634978,-8.322755,-5.802602,4.632234,9.198696,-9.156701,7.498074,-5.593712,7.740101,3.469497,-1.497913,6.408387,3.373114,0.415662,7.518993,-5.111556,6.010371,3.802032,-2.465745,4.442472,3.757309,8.731311,3.995434,5.602480,-1.597799,-8.662472,-8.555157,-2.956357,6.959189,-4.920477,0.977557,0.353206,7.616612,-8.224264,3.424788,1.402660,-1.977397,-6.164804,-0.130140,-9.247955,-7.687041,7.704812,-7.022349,-3.923056,6.979488,-7.078836,8.797753,-4.249577,-0.780986,8.301006,-5.597310,0.962621,7.785662,-2.718754,7.148033,-7.829401,3.862604,-3.084294,1.068959,-7.294243,5.351430,9.109943,-4.599799,7.680032,8.293575,5.986535,-1.111009,-9.093079,-4.027299,2.647660,7.510598,3.903981,-8.666515,-5.593177,-7.114027,-6.221583,2.855968,1.106539,2.762035,5.805623,4.407272,-7.378028,4.544777,5.495000,-4.496363,2.825542,-8.154994,-9.050323,-7.818734,6.396047,5.929056,9.296465,0.268564,8.018249,8.304456,2.859635,0.670346,-4.521280,-6.748521,-4.829841,8.924566,-1.668671,-9.177114,-5.188985,4.541041,0.689483,3.589682,-5.493853,6.317946,-8.880377,-8.129228,1.915744,0.256299,-4.724228,0.608750,-1.802721,-2.838594,3.563703,-1.646782,2.228390,7.524249,-7.731865,6.167426,8.558687,-6.579084,-6.564074,-4.339047,-8.293208,0.461186,8.731150,6.120599,9.220981,0.659368,-8.455555,-3.565548,9.220032,1.517304,1.956205,-7.405255,8.212044,-6.337756,0.192896,-3.574703,-0.837120,-4.951204,-2.951947,-8.760363,4.081036,-8.771366,9.003555,-4.232097,-1.198678,-6.010225,-5.012474,2.132570,-7.343630,7.302273,-2.707679,8.430156,-1.758436,-3.810760,-2.129831,-1.277452,-8.610842,8.587151,-4.299008,5.945425,6.540756,-0.908659,-6.956007,-4.018571,3.563343,1.586336,5.923256,-1.562360,-6.576695,-0.631184,9.858538,6.899480,-1.281303,6.991323,-7.557533,7.472016,5.821497,4.598518,3.560010,-4.832257,-1.018686,-9.851194,-8.053934,9.226571,-3.407937,3.544745,-0.674334,1.857522,-4.353554,0.062136,5.130731,-3.940286,-3.810820,0.882156,7.368955,-8.108259,8.571724,0.462648,-9.458360,-7.521453,1.746416,-5.988381,-4.742265,-1.187462,7.864241,8.076129,-0.499645,7.625170,-2.363866,3.938268,-1.349273,3.422962,-6.122819,6.228191,5.097841,7.613100,-4.945699,-4.368982,-8.348361,2.366371,8.318100,-2.640986,-8.221255,-7.352483,-8.720493,3.116092,-2.303330,-9.352919,1.924885,9.278167,-5.845377,4.374455,-1.463771,3.464067,-9.723245,-9.656205,-4.527269,-9.237663,-5.016831,2.093128,-6.959770,0.954579,8.378899,3.828246,-0.306550,6.625502,-1.204303,0.293012,-2.033459,1.406168,0.821310,-4.058330,-2.152924,-0.769260,-3.649271,-8.279768,-2.168131,5.211997,6.795632,5.150934,7.199971,-1.667329,3.715793,-8.167621,3.397204,0.546389,-6.107983,-2.794780,-1.131190,5.578150,-9.112416,4.515900,-9.350408,-8.262169,3.783564,7.542909,-0.317896,-1.968913,9.131970,3.614099,-2.661535,8.178382,7.783879,-9.165915,-4.328590,-5.850241,2.791960,-0.555238,-8.599404,6.344634,-8.823951,-4.392951,6.505125,-0.825877,2.862544,5.741738,-1.287836,-2.287157,-9.513209,4.022763,0.852140,6.873771,1.399602,-7.219288,-1.349069,-3.181915,-1.723618,9.165355,7.303512,-2.942852,7.588202,6.608329,-1.204853,9.653494,-9.287707,9.469415,-1.129548,-5.752138,-8.174208,3.582834,-5.781311,6.867416,-4.513775,-8.191070,3.168455,6.247314,-5.066253,-2.281109,-1.641368,9.749692,8.909473,-4.994527,4.676047,1.323025,6.070295,-7.104732,-4.707332,-0.538451,-6.237497,5.273817,3.070933,3.899010,2.816729,-9.140732,1.281499,-3.173293,4.405068,3.972565,3.969628,-5.078441,1.764366,-8.585073,7.014343,1.371430,-2.383166,1.517307,5.888489,5.708457,-9.897336,-6.547605,-1.067790,-8.127865,-4.477816,-6.372069,5.673308,-6.284027,-6.673471,-0.281190,-8.945568,4.787799,-7.979478,-9.908046,7.666105,-3.115498,-2.436511,-2.147535,3.946828,-1.549588,-9.335912,4.422856,2.822635,-1.331241,1.025546,1.781413,-5.860594,-9.837756,3.446976,-0.590140,-2.617235,5.046749,-1.341734,3.881875,-4.537992,7.098552,6.553732,-3.400811,-0.102648,-5.285809,-5.021468,7.420899,-8.973852,1.829903,8.911304,1.307496,5.340305,-5.339636,-8.538642,2.234178,1.742339,0.922541,-6.695955,1.951141,-8.638993,-1.191371,-0.402845,-0.271656,2.921351,-8.367137,4.418560,-6.629463,-2.577536,-5.400826,8.320702,-1.152681,-0.925827,4.695168,9.333292,-6.363662,-2.209184,-1.785149,-1.712043,4.719672,1.555515,-0.683773,5.643795,2.061953,6.702466,-5.620337,2.209698,6.702762,-1.345738,-8.352192,-6.682081,-0.538953,6.114256,6.022858,3.917266,8.495222], dtype = "float64")#candidate|2561|(576,)|const|float64
var_2562 = relay.var("var_2562", dtype = "int16", shape = (6,))#candidate|2562|(6,)|var|int16
call_2560 = relay.TupleGetItem(func_2280_call(relay.reshape(const_2561.astype('float64'), [16, 9, 4]), relay.reshape(var_2562.astype('int16'), [6,]), ), 4)
call_2563 = relay.TupleGetItem(func_2284_call(relay.reshape(const_2561.astype('float64'), [16, 9, 4]), relay.reshape(var_2562.astype('int16'), [6,]), ), 4)
output = relay.Tuple([call_2530,call_2560,const_2561,var_2562,])
output2 = relay.Tuple([call_2531,call_2563,const_2561,var_2562,])
func_2570 = relay.Function([var_2562,], output)
mod['func_2570'] = func_2570
mod = relay.transform.InferType()(mod)
var_2571 = relay.var("var_2571", dtype = "int16", shape = (6,))#candidate|2571|(6,)|var|int16
output = func_2570(var_2571)
func_2572 = relay.Function([var_2571], output)
mutated_mod['func_2572'] = func_2572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1822_call = mod.get_global_var('func_1822')
func_1823_call = mutated_mod.get_global_var('func_1823')
call_2574 = relay.TupleGetItem(func_1822_call(), 1)
call_2575 = relay.TupleGetItem(func_1823_call(), 1)
func_2570_call = mod.get_global_var('func_2570')
func_2572_call = mutated_mod.get_global_var('func_2572')
const_2584 = relay.const([-3,1,-4,10,6,2], dtype = "int16")#candidate|2584|(6,)|const|int16
call_2583 = relay.TupleGetItem(func_2570_call(relay.reshape(const_2584.astype('int16'), [6,])), 0)
call_2585 = relay.TupleGetItem(func_2572_call(relay.reshape(const_2584.astype('int16'), [6,])), 0)
func_2001_call = mod.get_global_var('func_2001')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_2586 = func_2001_call()
call_2587 = func_2001_call()
func_1472_call = mod.get_global_var('func_1472')
func_1475_call = mutated_mod.get_global_var('func_1475')
const_2594 = relay.const([-7.189103,-1.723115,2.644356,7.010521,9.694068,-3.522267,7.378622,1.445877,-5.249061,-9.718320,6.222100,4.949907,8.584917,7.060787,9.633653,5.676631,-5.966465,-7.407381,2.538078,4.638918,1.013894,-4.511344,-6.405128,9.194354,-6.579678,-7.128265,-0.245046,0.386764,2.077189,-4.285407,6.010399,-5.983258,6.916296,1.340139,-5.279870,8.243484,3.247824,3.743205,-0.049823,-9.544597,-3.294270,-6.318491,-1.169829,-8.504275,-0.523314,-8.852025,3.622814,-5.680762,-3.301007,2.095563,-0.809510,-4.850213], dtype = "float64")#candidate|2594|(52,)|const|float64
call_2593 = func_1472_call(relay.reshape(const_2594.astype('float64'), [4, 13]), relay.reshape(const_2594.astype('float64'), [4, 13]), )
call_2595 = func_1472_call(relay.reshape(const_2594.astype('float64'), [4, 13]), relay.reshape(const_2594.astype('float64'), [4, 13]), )
uop_2602 = relay.log10(const_2594.astype('float64')) # shape=(52,)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_2612 = relay.TupleGetItem(func_1902_call(), 0)
call_2613 = relay.TupleGetItem(func_1903_call(), 0)
var_2616 = relay.var("var_2616", dtype = "float64", shape = (52,))#candidate|2616|(52,)|var|float64
bop_2617 = relay.less(uop_2602.astype('bool'), relay.reshape(var_2616.astype('bool'), relay.shape_of(uop_2602))) # shape=(52,)
output = relay.Tuple([call_2574,call_2583,const_2584,call_2586,call_2593,call_2612,bop_2617,])
output2 = relay.Tuple([call_2575,call_2585,const_2584,call_2587,call_2595,call_2613,bop_2617,])
func_2624 = relay.Function([var_2616,], output)
mod['func_2624'] = func_2624
mod = relay.transform.InferType()(mod)
var_2625 = relay.var("var_2625", dtype = "float64", shape = (52,))#candidate|2625|(52,)|var|float64
output = func_2624(var_2625)
func_2626 = relay.Function([var_2625], output)
mutated_mod['func_2626'] = func_2626
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2637 = relay.var("var_2637", dtype = "float64", shape = (8, 11, 16))#candidate|2637|(8, 11, 16)|var|float64
uop_2638 = relay.asinh(var_2637.astype('float64')) # shape=(8, 11, 16)
output = relay.Tuple([uop_2638,])
output2 = relay.Tuple([uop_2638,])
func_2642 = relay.Function([var_2637,], output)
mod['func_2642'] = func_2642
mod = relay.transform.InferType()(mod)
mutated_mod['func_2642'] = func_2642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2643 = relay.var("var_2643", dtype = "float64", shape = (8, 11, 16))#candidate|2643|(8, 11, 16)|var|float64
func_2642_call = mutated_mod.get_global_var('func_2642')
call_2644 = func_2642_call(var_2643)
output = call_2644
func_2645 = relay.Function([var_2643], output)
mutated_mod['func_2645'] = func_2645
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2663 = relay.var("var_2663", dtype = "float32", shape = (10, 9, 2))#candidate|2663|(10, 9, 2)|var|float32
uop_2664 = relay.asin(var_2663.astype('float32')) # shape=(10, 9, 2)
bop_2674 = relay.divide(uop_2664.astype('float64'), relay.reshape(var_2663.astype('float64'), relay.shape_of(uop_2664))) # shape=(10, 9, 2)
output = bop_2674
output2 = bop_2674
func_2684 = relay.Function([var_2663,], output)
mod['func_2684'] = func_2684
mod = relay.transform.InferType()(mod)
mutated_mod['func_2684'] = func_2684
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2685 = relay.var("var_2685", dtype = "float32", shape = (10, 9, 2))#candidate|2685|(10, 9, 2)|var|float32
func_2684_call = mutated_mod.get_global_var('func_2684')
call_2686 = func_2684_call(var_2685)
output = call_2686
func_2687 = relay.Function([var_2685], output)
mutated_mod['func_2687'] = func_2687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_2696 = relay.TupleGetItem(func_1902_call(), 0)
call_2697 = relay.TupleGetItem(func_1903_call(), 0)
output = call_2696
output2 = call_2697
func_2700 = relay.Function([], output)
mod['func_2700'] = func_2700
mod = relay.transform.InferType()(mod)
output = func_2700()
func_2701 = relay.Function([], output)
mutated_mod['func_2701'] = func_2701
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2715 = relay.var("var_2715", dtype = "float64", shape = (16, 1, 13))#candidate|2715|(16, 1, 13)|var|float64
var_2716 = relay.var("var_2716", dtype = "float64", shape = (16, 14, 13))#candidate|2716|(16, 14, 13)|var|float64
bop_2717 = relay.subtract(var_2715.astype('float64'), var_2716.astype('float64')) # shape=(16, 14, 13)
func_2479_call = mod.get_global_var('func_2479')
func_2480_call = mutated_mod.get_global_var('func_2480')
call_2731 = relay.TupleGetItem(func_2479_call(), 0)
call_2732 = relay.TupleGetItem(func_2480_call(), 0)
func_824_call = mod.get_global_var('func_824')
func_827_call = mutated_mod.get_global_var('func_827')
const_2734 = relay.const([0.215587,-6.812685,-4.008412,4.371936,-9.852987,-4.677897,5.458188,6.883601,-0.302501,3.871303,7.308208,2.518873,-3.642185,-1.349483,9.688215,5.763256,-0.106469,8.643901,1.704766,0.635177,4.789745,9.737067,-8.092145,2.587158,-7.149268,-7.445131,-2.941018,-4.154544,-4.988871,7.804563,-5.511029,-4.497698,-6.518086,0.903574,-9.103188,-4.128568,9.138948,-5.016865,-5.618401,-3.203752,3.836219,-0.697390,-4.080314,-2.793452,8.567543,-4.041050,-4.589942,5.040770,-2.101642,-6.310575,5.190653,-2.397651,-5.505476,-4.816062,-1.687609,4.237109,7.723844,-7.405683,3.711871,-8.510058,-8.380356,-7.313848,-7.264954,8.470828,-4.226566,4.931376,-1.794946,-5.857479,2.047515,4.014659,9.694601,2.930505,7.445771,-8.400350,-4.166329,1.967500,1.974304,1.785714,7.531477,-2.861804,-3.672198,0.995395,8.339700,0.279062,-4.284373,5.364093,-0.783864,9.969392,-6.101511,-0.754797,-7.543926,8.650116,4.716426,1.223709,2.052183,-0.792419,-0.970568,9.577627,-9.210801,-2.786306,2.991457,-7.684591,-0.977346,0.404905,-3.364088,3.725933,-7.917114,-7.959916,5.123771,-8.190047,-5.864036,-6.776374,4.245528,-8.614620,-5.726622,-7.350895,-4.628422,4.349133,-4.360600,5.300991,-9.073506,-4.786135,3.847692,-9.574034,-6.034118,-5.902798,-0.700515,5.437117,-2.713634,3.470076,-7.846831,-1.015328,-9.588090,0.129298,6.288088,5.935522,8.250640,-1.067760,7.419206,5.807528,5.628942,-9.019944,-0.845392,6.582562,5.334253,-8.583751,9.319546,6.328173,-3.944168,-9.503986,5.544361,-6.011466,2.170236,-9.363173,8.405649,3.587970,1.193411,-0.801651,5.419877,-4.040347,-7.486859,8.977282,3.463040,-2.770862,2.874480,4.476733,-2.969913,-3.955895,-0.639491,-9.460523,-6.220000,7.729317,9.732445,-0.861996,5.952134,-4.558364,6.724792,7.013373,-0.306941,-1.102149,4.130310,-9.555115,1.251104,8.919948,5.288507,-3.864239,5.259532,8.754661,2.385515,-9.008942,-7.233395,7.839160,-1.476834,4.490170,-0.294850,-6.416185,8.362157,5.415253,7.413126,4.549390,5.307459,8.817512,0.513366,1.134059,-7.440197,4.165309,-9.134112,-6.513093,-3.159609,0.154919,4.137300,-6.549622,2.030926,-6.180317,-3.512602,4.632959,3.157662,3.866410,-1.050313,7.572608,-4.781548,4.156877,0.365060,2.471963,7.827122,-7.464789,-4.005734,-3.491584,1.130352,8.754377,-6.368815,4.543281,6.898897,-5.208994,2.863810,-7.174723,-7.789795,4.096149,3.908012,0.410660,3.380541,0.598407,-7.630792,4.417839,-3.505593,-3.045375,-5.295801,-2.148464,-2.848111,4.176526,3.896057,3.108086,3.353054,0.163005,7.590445,-1.617184,7.707950,-7.154690,5.800467,0.594974,-2.393190,-1.360378,9.826897,-5.030967], dtype = "float64")#candidate|2734|(264,)|const|float64
call_2733 = relay.TupleGetItem(func_824_call(relay.reshape(const_2734.astype('float64'), [12, 11, 2])), 0)
call_2735 = relay.TupleGetItem(func_827_call(relay.reshape(const_2734.astype('float64'), [12, 11, 2])), 0)
uop_2741 = relay.acos(call_2731.astype('float32')) # shape=(9, 9, 4)
uop_2743 = relay.acos(call_2732.astype('float32')) # shape=(9, 9, 4)
func_2001_call = mod.get_global_var('func_2001')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_2744 = func_2001_call()
call_2745 = func_2001_call()
output = relay.Tuple([bop_2717,call_2733,const_2734,uop_2741,call_2744,])
output2 = relay.Tuple([bop_2717,call_2735,const_2734,uop_2743,call_2745,])
func_2753 = relay.Function([var_2715,var_2716,], output)
mod['func_2753'] = func_2753
mod = relay.transform.InferType()(mod)
mutated_mod['func_2753'] = func_2753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2753_call = mutated_mod.get_global_var('func_2753')
var_2755 = relay.var("var_2755", dtype = "float64", shape = (16, 1, 13))#candidate|2755|(16, 1, 13)|var|float64
var_2756 = relay.var("var_2756", dtype = "float64", shape = (16, 14, 13))#candidate|2756|(16, 14, 13)|var|float64
call_2754 = func_2753_call(var_2755,var_2756,)
output = call_2754
func_2757 = relay.Function([var_2755,var_2756,], output)
mutated_mod['func_2757'] = func_2757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_578_call = mod.get_global_var('func_578')
func_580_call = mutated_mod.get_global_var('func_580')
call_2767 = func_578_call()
call_2768 = func_578_call()
func_824_call = mod.get_global_var('func_824')
func_827_call = mutated_mod.get_global_var('func_827')
const_2770 = relay.const([1.110087,3.906544,4.107261,-6.478691,-4.713025,-5.450576,-5.333011,-4.794779,4.638491,-4.362963,-1.273534,-7.543531,-2.290972,7.801239,-9.314450,-0.011040,6.789775,-1.309467,-6.114748,-0.270244,-8.340938,4.893153,9.869272,0.979924,9.575136,-8.523879,0.753254,4.233788,8.022528,4.356091,9.619225,-1.971966,5.957487,9.095449,2.126348,8.615010,-0.847387,-2.854023,-6.625975,7.803095,5.915537,0.252738,-3.030646,0.164203,3.151861,1.336355,-4.681848,-1.316098,5.502431,5.510121,6.679560,-9.834377,-4.974936,-7.621315,-1.221427,-3.945024,1.217877,-6.487576,-9.271742,9.784521,0.023458,-9.457268,-4.583744,9.611358,-0.841521,-1.403135,4.967900,-1.110168,-1.623520,-9.919201,-5.880396,-4.100476,-3.350692,7.930985,-9.064268,8.314468,-3.998769,-1.579848,-8.681439,-9.521302,-0.748712,-9.122826,2.435173,2.663689,0.903461,-9.680721,-8.109475,5.138577,-7.746818,-4.115816,-0.862477,-0.258511,7.268363,5.022208,-0.475474,7.640779,2.203523,8.109411,-3.050844,-7.573343,-0.686902,1.458871,4.906043,-0.157715,7.030601,4.408593,-8.639097,-4.011746,-5.000607,4.545478,3.037467,9.282740,-0.123055,8.142318,-4.011833,3.005291,6.160079,7.595355,9.933453,-7.953566,-5.972985,-5.984120,9.021735,0.614067,9.970037,-6.237897,4.299642,1.821643,-0.667529,-9.213892,-2.501443,-6.425364,-9.916671,-1.762819,2.012287,-9.515055,-9.234756,-4.688017,-3.245413,5.284933,-7.637201,-5.718048,-9.831676,3.531956,4.189864,3.618651,2.410406,8.266976,3.756707,-2.866764,-2.229119,0.714950,3.548366,-0.605856,2.177922,1.795217,3.372789,5.056241,5.023722,3.011746,-7.808773,-1.208774,-2.277384,2.148888,-6.810185,-9.451923,-7.834883,4.404715,3.433901,4.089374,-0.777460,-2.562327,7.106654,8.481233,-4.367587,6.889626,1.071666,6.429269,4.179226,9.291898,-7.542760,-8.330177,4.632603,-6.776114,9.028499,9.780326,8.392978,2.333223,2.640709,3.922908,8.469954,-8.561478,1.033738,-9.511350,-2.419685,-9.795159,2.086068,-4.688974,-7.719519,9.123650,-0.014629,7.008107,-9.172978,-1.884655,0.125085,-6.141092,-0.044700,3.606111,-8.108162,-1.596222,-5.323401,1.614930,0.645429,-7.452160,-4.361062,4.098858,5.060880,-1.189006,-1.260113,3.335034,4.446424,-8.917456,2.749318,7.408964,-1.681730,-2.239729,-2.970983,-8.638653,3.150278,7.038356,8.202507,1.549212,-4.830704,-4.578948,-7.753866,-2.359766,6.282641,-4.383136,8.229803,-2.854718,4.286986,-6.300275,-1.266707,-7.309146,5.638053,-3.505325,-2.399463,2.754831,2.075736,4.122248,-3.052270,1.637390,4.163207,-3.975026,7.303111,-8.723554,6.384207,-9.915322,5.655428,-3.338638,8.411825,6.178406,-0.168411,-8.689965], dtype = "float64")#candidate|2770|(264,)|const|float64
call_2769 = relay.TupleGetItem(func_824_call(relay.reshape(const_2770.astype('float64'), [12, 11, 2])), 0)
call_2771 = relay.TupleGetItem(func_827_call(relay.reshape(const_2770.astype('float64'), [12, 11, 2])), 0)
output = relay.Tuple([call_2767,call_2769,const_2770,])
output2 = relay.Tuple([call_2768,call_2771,const_2770,])
func_2773 = relay.Function([], output)
mod['func_2773'] = func_2773
mod = relay.transform.InferType()(mod)
mutated_mod['func_2773'] = func_2773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2773_call = mutated_mod.get_global_var('func_2773')
call_2774 = func_2773_call()
output = call_2774
func_2775 = relay.Function([], output)
mutated_mod['func_2775'] = func_2775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1043_call = mod.get_global_var('func_1043')
func_1045_call = mutated_mod.get_global_var('func_1045')
call_2778 = relay.TupleGetItem(func_1043_call(), 0)
call_2779 = relay.TupleGetItem(func_1045_call(), 0)
output = call_2778
output2 = call_2779
func_2784 = relay.Function([], output)
mod['func_2784'] = func_2784
mod = relay.transform.InferType()(mod)
mutated_mod['func_2784'] = func_2784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2784_call = mutated_mod.get_global_var('func_2784')
call_2785 = func_2784_call()
output = call_2785
func_2786 = relay.Function([], output)
mutated_mod['func_2786'] = func_2786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2792 = relay.var("var_2792", dtype = "float64", shape = (10, 9, 2))#candidate|2792|(10, 9, 2)|var|float64
uop_2793 = relay.tan(var_2792.astype('float64')) # shape=(10, 9, 2)
bop_2822 = relay.subtract(uop_2793.astype('float32'), relay.reshape(var_2792.astype('float32'), relay.shape_of(uop_2793))) # shape=(10, 9, 2)
output = bop_2822
output2 = bop_2822
func_2827 = relay.Function([var_2792,], output)
mod['func_2827'] = func_2827
mod = relay.transform.InferType()(mod)
mutated_mod['func_2827'] = func_2827
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2828 = relay.var("var_2828", dtype = "float64", shape = (10, 9, 2))#candidate|2828|(10, 9, 2)|var|float64
func_2827_call = mutated_mod.get_global_var('func_2827')
call_2829 = func_2827_call(var_2828)
output = call_2829
func_2830 = relay.Function([var_2828], output)
mutated_mod['func_2830'] = func_2830
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2913 = relay.var("var_2913", dtype = "float64", shape = (16, 3, 16))#candidate|2913|(16, 3, 16)|var|float64
uop_2914 = relay.sqrt(var_2913.astype('float64')) # shape=(16, 3, 16)
bop_2916 = relay.logical_or(uop_2914.astype('bool'), relay.reshape(var_2913.astype('bool'), relay.shape_of(uop_2914))) # shape=(16, 3, 16)
output = relay.Tuple([bop_2916,])
output2 = relay.Tuple([bop_2916,])
func_2919 = relay.Function([var_2913,], output)
mod['func_2919'] = func_2919
mod = relay.transform.InferType()(mod)
mutated_mod['func_2919'] = func_2919
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2920 = relay.var("var_2920", dtype = "float64", shape = (16, 3, 16))#candidate|2920|(16, 3, 16)|var|float64
func_2919_call = mutated_mod.get_global_var('func_2919')
call_2921 = func_2919_call(var_2920)
output = call_2921
func_2922 = relay.Function([var_2920], output)
mutated_mod['func_2922'] = func_2922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2325_call = mod.get_global_var('func_2325')
func_2326_call = mutated_mod.get_global_var('func_2326')
call_3061 = relay.TupleGetItem(func_2325_call(), 4)
call_3062 = relay.TupleGetItem(func_2326_call(), 4)
uop_3079 = relay.acos(call_3061.astype('float64')) # shape=(1, 9, 4)
uop_3081 = relay.acos(call_3062.astype('float64')) # shape=(1, 9, 4)
bop_3104 = relay.less(uop_3079.astype('bool'), relay.reshape(call_3061.astype('bool'), relay.shape_of(uop_3079))) # shape=(1, 9, 4)
bop_3107 = relay.less(uop_3081.astype('bool'), relay.reshape(call_3062.astype('bool'), relay.shape_of(uop_3081))) # shape=(1, 9, 4)
bop_3112 = relay.floor_divide(bop_3104.astype('float32'), relay.reshape(uop_3079.astype('float32'), relay.shape_of(bop_3104))) # shape=(1, 9, 4)
bop_3115 = relay.floor_divide(bop_3107.astype('float32'), relay.reshape(uop_3081.astype('float32'), relay.shape_of(bop_3107))) # shape=(1, 9, 4)
func_2700_call = mod.get_global_var('func_2700')
func_2701_call = mutated_mod.get_global_var('func_2701')
call_3132 = func_2700_call()
call_3133 = func_2700_call()
bop_3141 = relay.right_shift(call_3061.astype('int32'), relay.reshape(bop_3112.astype('int32'), relay.shape_of(call_3061))) # shape=(1, 9, 4)
bop_3144 = relay.right_shift(call_3062.astype('int32'), relay.reshape(bop_3115.astype('int32'), relay.shape_of(call_3062))) # shape=(1, 9, 4)
bop_3162 = relay.divide(bop_3112.astype('float32'), relay.reshape(uop_3079.astype('float32'), relay.shape_of(bop_3112))) # shape=(1, 9, 4)
bop_3165 = relay.divide(bop_3115.astype('float32'), relay.reshape(uop_3081.astype('float32'), relay.shape_of(bop_3115))) # shape=(1, 9, 4)
func_1756_call = mod.get_global_var('func_1756')
func_1758_call = mutated_mod.get_global_var('func_1758')
call_3166 = relay.TupleGetItem(func_1756_call(), 0)
call_3167 = relay.TupleGetItem(func_1758_call(), 0)
func_1043_call = mod.get_global_var('func_1043')
func_1045_call = mutated_mod.get_global_var('func_1045')
call_3169 = relay.TupleGetItem(func_1043_call(), 1)
call_3170 = relay.TupleGetItem(func_1045_call(), 1)
func_2919_call = mod.get_global_var('func_2919')
func_2922_call = mutated_mod.get_global_var('func_2922')
const_3172 = relay.const([-4.543039,6.372211,-3.247135,-3.507618,1.026799,-5.862497,-6.658096,6.912872,4.816116,7.073779,1.514561,-2.359271,-9.765735,5.228244,2.341373,0.039628,7.914969,1.208762,-2.027824,-3.049875,-8.942595,5.073132,-4.427937,3.840558,5.469176,1.841867,8.522801,-0.565576,7.955036,-0.944084,-5.424526,7.042161,-4.042641,9.295772,-1.677537,-4.824443,-2.023086,3.476851,-4.077979,8.531488,8.530145,6.660897,-0.170184,-3.736675,8.032997,-8.717337,-7.629154,2.032092,-6.790931,4.122748,-4.252908,-4.064931,7.053585,8.865267,-2.305978,3.982076,0.589859,-9.926228,2.316022,-1.927969,4.377033,-4.055769,-6.852752,-1.969473,1.362088,5.519875,7.793869,-4.566675,7.286196,9.788993,-6.560095,1.962332,4.167498,5.966239,0.420923,0.877825,-4.650740,-2.456148,-3.618052,-0.109604,1.198926,4.335048,5.885092,5.541830,-4.360542,-5.268677,-9.504076,-9.633180,4.558333,-3.864079,7.858758,-3.873756,4.153736,-2.928746,2.146387,2.686670,-4.570325,-3.046161,0.560634,-4.216144,-8.528348,-8.343661,8.402917,-8.068471,5.153852,8.254402,-3.542862,-1.076230,-0.400131,8.043041,1.258036,-5.436687,-0.826963,4.712238,4.515213,8.794760,-4.491140,-0.702910,-5.881162,5.001687,6.166485,9.409343,-1.458355,5.632376,-7.483079,-6.985953,-1.700879,-3.440107,8.782583,-3.990791,4.971178,-2.362118,0.603630,3.011839,0.039405,1.310937,9.645971,5.852680,0.147261,6.300956,3.906256,4.515722,-6.245035,-0.308039,-4.531186,-3.273298,-4.043698,1.886572,3.266352,-0.075548,7.085224,4.222736,-7.988148,-0.943760,-7.566303,2.844192,-3.727156,7.908449,-2.660410,-4.393110,-0.384321,5.740119,-1.688153,-4.576586,0.968527,-7.969116,4.642729,-0.102174,-4.548947,5.020502,-0.315765,8.965855,4.173271,0.438622,-7.729425,-5.048737,4.391004,-6.697953,2.333600,9.784623,0.352164,7.457692,-0.746673,-6.559758,7.499759,3.361857,-3.442283,-7.190534,5.614381,-9.668054,6.469820,-8.312880,-9.727345,-5.429750,6.185578,-8.969188,-4.125923,3.507864,4.779176,6.332050,1.025100,-3.261712,9.595947,-5.990154,7.114568,1.137631,1.354547,7.779051,-3.745202,2.513402,0.209757,-8.040519,-0.783695,-4.006624,1.131432,-2.524934,-3.728561,-9.775551,4.032772,-2.810590,4.694213,5.646688,1.034876,-2.653358,0.277814,-2.853660,-3.235320,-0.576301,-6.027337,-7.913771,-1.592988,9.095125,-8.254345,2.533540,-4.350336,-4.257930,0.367191,-0.134847,-5.480021,-0.857750,7.407631,-7.927341,3.191120,-1.672289,-1.475081,9.074226,3.303295,9.093903,-8.146497,0.469630,6.268992,7.933367,1.519648,3.489733,-9.324285,1.843486,-5.207398,0.034028,-2.225159,-9.683752,1.480795,-0.841658,-9.818273,-4.391484,-2.720315,6.979561,5.600969,-5.519400,-8.285337,-2.654392,2.097991,-7.382445,2.278759,0.974294,6.251029,-5.161211,0.080005,7.711577,9.452389,-0.559767,8.033443,3.118388,-6.007135,-5.531314,7.769410,-7.623791,-1.475852,5.332432,-3.636004,-4.366089,-8.642773,-7.626407,3.503430,6.736844,8.558674,-0.845347,4.445368,7.123355,4.117767,-8.545978,-3.425775,5.684636,-2.153449,3.959637,0.002411,-1.872062,-0.488267,3.347445,5.035223,-1.301408,-0.719744,9.965372,-3.390428,-7.034668,-5.199002,8.073565,6.875781,-3.764767,1.920804,-1.872069,7.419114,-9.681556,-0.891567,0.907709,-0.941672,-9.735464,-1.166122,-3.346925,5.083492,-7.361609,4.381096,-5.977323,-6.350708,-2.942408,-3.876683,-1.765830,-7.045868,-0.064424,-3.659591,-6.191653,4.883942,7.495141,-7.684704,0.765354,-5.314526,-4.510796,5.002070,-0.859986,3.221124,4.493747,-7.426190,2.751881,-3.794980,3.463652,8.836030,5.198652,-7.098289,-5.080176,-7.713977,-9.408903,6.093104,-0.497977,-9.219579,-0.223312,-6.752536,9.137541,5.352421,3.277480,-3.035858,-1.255667,-1.926361,1.911250,-2.134131,1.022186,7.530719,-2.872630,-7.667575,5.098717,6.243212,-9.432877,5.102747,-5.756224,-4.732299,-1.308954,-9.549131,-5.149041,-2.661441,-1.391973,6.064254,6.387106,6.914144,9.869116,-1.341045,-1.377904,-4.630153,5.508614,1.191869,-3.595224,9.365087,-3.675940,2.115904,-3.814340,-4.584051,7.674194,4.836722,-5.817190,-3.280996,-1.315484,-0.870119,-0.635039,-8.677584,-5.462352,-4.419864,6.115360,0.041921,4.853175,9.631265,-9.375156,-3.180078,8.806642,-8.776572,6.574550,-2.893993,-2.598156,-7.301022,8.443953,-5.905022,-1.626047,7.571966,5.337780,-7.251794,8.979436,-1.727090,6.393477,8.640934,-1.172367,0.989133,-7.674643,-2.010958,-8.629922,-1.292938,6.351186,-7.870927,4.260259,9.179360,-6.468287,8.091268,1.802834,-5.503489,4.723995,-0.405340,5.031872,9.573085,3.161760,-1.678182,-4.459036,2.330498,-7.855973,-2.504062,4.605656,-4.540407,1.784749,-2.279496,4.187151,4.719423,-5.915596,8.181153,3.631361,-3.105277,-7.155374,3.110073,2.833832,-7.808334,-9.530036,6.288343,-9.489189,5.120674,3.129627,5.889923,-5.783114,9.124298,-3.906904,9.628738,5.209461,-5.761054,-3.972779,6.151238,-0.559141,1.764351,-2.546410,4.427909,-4.866747,-2.127545,-7.999679,2.173605,-9.158544,0.635683,3.670740,8.644019,-0.506354,-4.834408,7.101485,-7.774453,0.802387,-2.462157,-8.163802,-4.630693,-0.716001,4.391776,-2.947728,-9.516313,0.865803,8.529284,-4.652410,-7.736923,-2.116762,5.212279,-8.201822,-4.590614,-3.192213,1.126718,-0.392476,9.180867,-1.981430,3.600504,0.245653,7.681615,7.324995,7.851601,1.883908,7.735844,-6.989532,0.117146,-6.526260,-2.305692,-8.438267,-1.552540,-7.095760,-9.822423,-4.297943,8.013619,7.431106,-1.040454,-1.439709,-3.974900,5.249777,5.504869,-2.050489,-9.808823,-9.520500,7.025417,-9.974207,7.846954,-8.025665,2.182582,1.702603,-8.984068,-1.279034,-8.422497,9.112328,-3.299387,-9.905576,-7.654296,0.554497,6.337947,-4.336731,-1.852584,-9.504764,9.637570,8.783556,7.763353,7.740208,4.555049,5.855344,-2.278919,-7.359041,1.840948,7.077665,-0.307929,2.013296,-1.873474,-3.780508,-7.540108,8.355217,4.885956,9.357031,2.117031,7.428431,-2.139747,-9.895220,5.525956,3.943577,6.376854,-0.713537,5.684479,-9.854432,7.495581,5.578991,0.877442,0.124047,1.042461,-1.375450,-3.665514,-1.653683,-5.478553,2.562252,5.334201,-7.759443,9.077308,-3.543859,-0.141514,0.792499,-1.083940,-8.922417,2.636132,-7.662562,-2.784737,0.916354,-5.029447,9.843810,0.662486,-4.992361,0.404066,7.385939,-4.169131,-0.758390,-8.232936,-5.298853,-1.549002,8.800381,9.618991,-4.924606,-4.409364,-5.372632,1.476276,5.312922,-5.443253,-4.486626,-6.866213,9.802796,8.638589,-2.357451,1.662232,-8.856707,3.061677,2.287325,-6.145364,-6.707061,4.094930,4.816137,-6.917975,2.671993,0.766355,-0.116969,-5.970790,-1.310073,8.229926,6.781584,9.920080,-3.884843,1.195546,9.191279,-8.834583,-6.287603,-9.144550,-2.737474,-8.313083,-0.648594,5.418578,-1.838059,-9.670903,-8.772512,4.913770,-7.601550,1.498152,7.691755,-2.671442,-9.008754,-1.728603,-2.516352,6.355278,7.647212,3.155501,5.529130,-6.765762,-8.371711,-2.269808,5.981647,-5.078732,-1.547723,-6.589783,8.903933,1.283374,7.202027,-7.550987,-9.672740,5.675597,-5.836546,3.617911,2.836363,1.118354,-5.505131,-5.486092,5.666359,7.606804,1.272924,6.099910,-5.099917,-2.066550,-7.598928,-4.967105,-0.661698,-6.352552,-9.798615,-2.831518,4.553513,4.993915,2.964759,0.993625,-2.711582,3.062863,8.628721,-0.576915,3.310480,9.041912,-5.148529,-7.064912,8.325724,0.280276,9.603186,-1.756350,4.242693,-3.937088,2.900189,3.758561,6.941661,0.570375,3.046758,-6.300528,9.026869,-9.570496,0.245729,-2.737082,6.874976,-7.391162,-2.616016,6.835789,-0.426368,-1.615869,-5.392584,-1.566929,-2.675746,-3.252443,2.494321,-9.364319,-1.456246,-2.102823,-7.567402,7.801858,-6.075597,-0.430433,-2.592981,-3.716321,5.337382,-4.268242,-1.596233,8.686123,8.765238], dtype = "float64")#candidate|3172|(768,)|const|float64
call_3171 = relay.TupleGetItem(func_2919_call(relay.reshape(const_3172.astype('float64'), [16, 3, 16])), 0)
call_3173 = relay.TupleGetItem(func_2922_call(relay.reshape(const_3172.astype('float64'), [16, 3, 16])), 0)
func_1822_call = mod.get_global_var('func_1822')
func_1823_call = mutated_mod.get_global_var('func_1823')
call_3179 = relay.TupleGetItem(func_1822_call(), 1)
call_3180 = relay.TupleGetItem(func_1823_call(), 1)
func_2395_call = mod.get_global_var('func_2395')
func_2397_call = mutated_mod.get_global_var('func_2397')
const_3183 = relay.const([[-1.792571,5.837824,0.880806,-7.232628,8.315463,3.988335,7.346578,-1.922394,-6.035785,-8.497794,3.588163,5.464570,-1.619595,5.009332,8.566397,9.601095,9.948211,-2.727234,5.152855,-3.682856,0.070383,4.896839,8.429775,-0.815725,5.417979,-1.035027,9.118411,2.683391,-2.176041,-4.808524,-3.487528,0.732993,5.528941,-4.531976,-1.504060,2.407129,-5.526297,5.613658,2.625143,-9.278023,-6.429723,3.085490,-3.282877,-1.106175,6.570929,-3.281756,-5.485747,6.638837,6.076732,-7.279260,-3.578931,-2.000676,-4.453969,-3.014770,1.193906,-8.952537,5.091494,6.780298,1.253356,2.908397,-0.517022,-3.439820,9.364613,-9.672691,8.973317,9.659116,0.894124,-1.019109,3.681405,0.253263,2.407930,-0.763716,3.188175,-4.447561,9.053296,1.845895,4.582592,0.398774,-6.430501,-8.620421,-4.619410,6.250752,5.754105,-4.604961,1.131425,2.620848,1.667598,0.563855,8.188183,0.441670,2.831040,-0.347956,-1.450624,-0.228981,-7.350762,-2.486360,-4.175597,-1.661820,-2.334226,-8.173188,-2.225352,-9.683954,0.109440,-3.719591,-4.601767,-8.114039,-9.055094,-5.397563,-8.443427,7.160420,1.727028,9.001655,-2.481344,7.990959,-4.110250,-9.807049,1.796505,4.989706,-4.963611,9.660699,6.613823,2.569049,3.245395,0.042064,-0.048669,-8.088520,-0.987698,8.421456,4.860603,7.670817,-4.923336,-0.884307],[8.603191,-5.236832,1.250804,-9.830115,0.122626,-7.497654,5.171945,-9.474308,3.673949,-6.877970,4.867329,-1.695019,-5.031135,-8.599326,7.402167,0.914620,-6.139225,-0.008443,8.469904,8.356876,-1.756900,4.906193,8.966261,4.769929,-0.085848,-0.830690,6.694387,-3.081285,6.679657,-7.083003,9.918636,7.614421,-7.004467,6.877199,-4.069860,-7.295806,5.628241,-9.695164,-7.059061,2.118234,7.884502,-0.442955,-0.609420,0.037292,2.708255,-4.664392,9.628729,4.644087,5.470711,8.508123,9.700568,7.990854,-1.591141,0.476027,4.557716,7.415852,-0.153512,-2.487544,1.320727,-6.944381,8.006145,0.899236,-3.928738,-0.927033,-5.358361,4.113294,-0.180695,-6.073249,9.014201,6.610549,-2.107477,2.115529,-6.066541,8.354753,7.656945,-4.156689,-7.730728,4.971459,-0.064639,-3.970116,-5.717263,-9.880275,-7.109675,8.150521,-1.168192,7.722858,9.841674,-4.151058,-5.364276,6.771563,6.125794,-6.720318,-4.416355,6.925740,-3.456606,0.410872,5.974478,1.228090,-5.886624,2.278514,9.509242,8.414357,-9.420753,-4.645781,6.384867,-3.828313,8.038623,-6.736070,7.923721,1.175774,6.386769,-1.431793,-5.672051,3.317465,-7.459091,-1.411183,6.580421,-3.614771,7.803510,-7.453631,7.633092,5.657128,7.858605,-5.878724,6.639771,-1.222688,-0.969756,-4.916143,-4.753346,4.330000,-3.941856,-0.983350],[7.818747,5.377850,5.964335,2.116212,4.499562,-9.988024,-0.096364,3.112217,-7.838580,-4.236590,-0.607693,1.216141,-7.955499,9.948887,-9.667500,-5.338073,-9.075166,-2.677837,5.273242,-3.150714,2.893534,-4.908201,7.953056,7.262563,0.424753,-5.670287,-7.373175,5.828448,-2.897980,-7.256938,-5.328763,-5.128240,-8.470590,7.277474,-0.208695,-4.697130,-9.808965,8.622770,-3.902942,2.049722,7.025838,3.608046,3.436252,-7.732036,8.818097,7.750981,-1.352604,0.313950,-7.428612,-9.992074,-3.159155,-5.373490,7.445224,2.307485,9.303382,-6.160923,-8.676237,-3.160560,-3.222565,-5.273832,0.281935,3.633965,4.031585,4.410845,8.349791,2.618665,-5.852751,-8.129946,1.117692,-0.815279,-0.400311,7.381377,-9.730415,0.313956,5.296642,6.420600,3.230081,-6.305854,7.542543,-3.619485,8.322309,-2.728913,-9.596406,-7.123149,-7.356360,-2.797402,3.297445,-7.290428,7.862152,-9.479145,7.455340,-2.421095,-4.888654,9.677832,-9.138122,4.483818,5.973362,3.214256,-9.370499,-4.883350,-5.026704,-6.191186,-2.212495,-5.696852,-8.576092,-5.445199,-8.955443,-9.610862,8.931268,-3.388125,0.426228,-1.648674,4.233375,-0.592168,0.240805,9.128480,0.035847,8.579504,-3.262687,-6.623200,-1.791526,-7.055746,5.845337,9.426679,-2.325459,-3.577031,2.477491,1.701662,-1.916324,0.328367,-4.413046,-5.457973],[-4.504834,5.012352,8.858754,2.223049,4.877196,-1.607540,-9.289343,5.855976,5.089294,-8.484316,-0.807115,9.031076,-4.294650,-4.790891,0.076950,-5.553029,-1.268326,-6.074849,2.802007,1.323275,6.722499,7.730880,-6.429680,6.114551,-4.828514,-3.524827,9.726101,-0.859414,-8.436093,-8.964407,6.038460,2.914361,-6.017156,3.865124,9.810819,-8.982501,-3.281107,-7.494443,5.922753,-1.827236,-3.952706,-6.349742,-6.148156,6.305728,-0.026561,9.673478,-5.261837,2.387604,-9.389802,3.714886,-3.980373,4.593686,4.340960,5.578325,3.274528,1.094169,-9.337285,0.245714,-3.544151,-3.059701,-4.242671,-3.773694,-0.922519,4.080073,-7.342617,1.141975,4.303315,5.135159,-5.862542,6.182453,-8.683311,9.622684,-9.140530,2.568961,0.421415,3.163981,9.036147,6.526785,-0.916724,5.348521,1.164610,6.932449,4.249467,6.305554,0.424960,6.125105,8.503212,-6.981954,3.275651,-6.635432,1.295601,-2.008827,0.375297,6.800166,-8.635867,-3.789588,8.165129,-6.554930,-8.758452,-0.331255,-2.136040,7.620561,4.580182,-5.364383,-8.251515,3.316355,-0.272106,-0.190170,2.822958,5.749098,-5.887311,5.883140,9.012417,-4.204054,-0.865998,8.547395,-4.612566,-1.090385,0.141029,-6.711844,-0.605336,7.343824,1.445943,-2.027554,8.235723,2.284029,-5.171913,9.910383,-1.168290,4.186762,1.022424,-6.506484]], dtype = "float32")#candidate|3183|(4, 132)|const|float32
call_3182 = func_2395_call(relay.reshape(const_3183.astype('float32'), [11, 8, 6]))
call_3184 = func_2395_call(relay.reshape(const_3183.astype('float32'), [11, 8, 6]))
output = relay.Tuple([call_3132,bop_3141,bop_3162,call_3166,call_3169,call_3171,const_3172,call_3179,call_3182,const_3183,])
output2 = relay.Tuple([call_3133,bop_3144,bop_3165,call_3167,call_3170,call_3173,const_3172,call_3180,call_3184,const_3183,])
func_3198 = relay.Function([], output)
mod['func_3198'] = func_3198
mod = relay.transform.InferType()(mod)
output = func_3198()
func_3199 = relay.Function([], output)
mutated_mod['func_3199'] = func_3199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1756_call = mod.get_global_var('func_1756')
func_1758_call = mutated_mod.get_global_var('func_1758')
call_3203 = relay.TupleGetItem(func_1756_call(), 1)
call_3204 = relay.TupleGetItem(func_1758_call(), 1)
output = relay.Tuple([call_3203,])
output2 = relay.Tuple([call_3204,])
func_3208 = relay.Function([], output)
mod['func_3208'] = func_3208
mod = relay.transform.InferType()(mod)
mutated_mod['func_3208'] = func_3208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3208_call = mutated_mod.get_global_var('func_3208')
call_3209 = func_3208_call()
output = call_3209
func_3210 = relay.Function([], output)
mutated_mod['func_3210'] = func_3210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1074_call = mod.get_global_var('func_1074')
func_1075_call = mutated_mod.get_global_var('func_1075')
call_3276 = relay.TupleGetItem(func_1074_call(), 0)
call_3277 = relay.TupleGetItem(func_1075_call(), 0)
func_2753_call = mod.get_global_var('func_2753')
func_2757_call = mutated_mod.get_global_var('func_2757')
var_3287 = relay.var("var_3287", dtype = "float64", shape = (208,))#candidate|3287|(208,)|var|float64
const_3288 = relay.const([8.638147,-9.045126,-3.987789,7.253766,-5.491483,-9.978719,-8.187378,-5.321804,6.119645,-4.291078,9.591514,7.252496,-0.210296,-1.799549,1.364427,5.663299,5.524839,8.854329,-8.755893,2.540469,8.207229,9.496517,-3.270305,-7.879119,5.849823,9.521249,-3.739355,-1.331591,1.142051,-2.202673,-5.030439,6.446224,-0.987600,4.521253,-9.615813,8.501978,0.829682,0.701246,-9.896800,6.054052,8.154791,0.286005,-1.784588,-6.363213,-4.634046,-0.444275,-0.868841,4.466214,-9.962401,6.342790,2.927394,-3.157648,-1.937063,3.301750,-8.716166,-5.708835,5.890329,4.686369,-7.944944,2.015187,8.078968,8.427528,-4.364875,-1.705498,-1.691739,0.596952,-3.781466,-6.955585,1.413164,0.566285,-2.431803,2.017939,2.411573,3.391155,-6.959938,1.765709,-7.395325,-6.968087,5.686304,-9.585871,-6.996514,4.002433,1.054299,6.301775,0.144397,-1.215775,7.213875,-3.461159,6.692789,-5.811133,-1.236789,4.455788,-6.667366,6.485968,-1.703090,0.421214,7.434764,0.532997,-7.928413,-5.136703,3.588233,-3.715924,-2.169293,-0.695383,-5.039411,-5.513621,-6.396081,-2.424470,8.886993,-3.130105,4.359012,-9.850621,-8.103015,9.736711,6.575086,9.697238,6.680722,6.446342,-5.820824,2.271752,-1.854608,4.665861,8.832141,5.070735,-6.462093,-5.856155,-7.536902,-8.323712,-6.744755,1.854322,1.338349,-7.883841,-6.453994,9.219677,8.365523,-6.657436,-6.329048,-6.976423,1.863439,-7.692084,1.557364,6.286272,4.649519,5.934371,6.527498,0.838282,0.336298,4.096356,9.892158,-7.029634,9.666462,-1.250686,-7.282145,9.374501,8.102505,6.165351,-8.249832,-7.951385,3.246182,4.255396,-0.931788,8.037035,8.370150,-5.109486,5.312064,7.732721,1.404307,-0.202275,5.814183,8.563494,2.181791,2.977149,1.489922,-3.455202,7.072152,3.716549,-2.713054,5.576727,-3.904690,7.136100,-3.909426,-8.136481,-5.688945,-6.578138,9.536350,-5.538516,-1.552992,-2.174354,6.703140,-3.514815,3.860255,7.371398,6.872483,7.939452,-8.275493,0.804783,8.913286,-1.834934,6.376170,5.622482,-1.158125,3.935861,-0.578703,-2.970386,-9.471164,-8.181844,-1.599517,-3.896298,6.035103,1.507630,-9.923477,-6.298186,7.921965,4.040873,4.328044,5.782879,1.197662,7.248716,-0.643501,1.434018,-1.491809,-8.580542,1.249758,-6.293331,-3.613587,-9.382333,1.054698,8.426854,9.976852,5.244707,3.066292,-6.365313,8.439639,-9.319149,8.657891,0.264568,-8.320967,8.428358,-2.274990,-0.063725,1.926296,7.959419,0.229524,6.673269,5.775579,-8.326767,3.845224,1.179221,-2.569993,3.383243,-8.984099,9.825874,-3.011594,-8.568523,9.467662,-0.300797,-8.320876,1.222778,-2.557435,-2.186093,1.859241,-5.906150,-9.003424,5.494929,-6.122554,-9.136698,4.302333,6.253259,-7.686324,-2.526933,-6.352708,3.944774,-5.295639,-0.950500,5.229805,0.804771,9.469262,-5.033536,7.224680,-7.479756,-8.491176,-9.072682,6.558284,7.870791,-9.053605,7.661115,-0.262469,3.471014,5.433942,1.981997,-1.345905,8.874647,9.739650,8.399863,8.046724,-3.916815,9.573790,-4.779458,-3.162961,-7.113689,9.191449,8.084571,-1.730974,2.976586,-0.555416,4.230708,6.345933,8.053133,-8.607306,0.020919,-9.046334,6.346976,8.256342,-5.849953,7.798633,-0.556873,-7.508421,1.917523,-5.561885,-2.203719,5.247030,5.402134,-2.851760,1.465005,-6.365852,7.845654,-6.859581,-6.751225,-1.161063,4.136770,4.697351,-2.726037,5.946621,5.050968,-7.616475,7.921960,8.251134,-0.609760,0.733953,-0.538037,8.901233,-9.947691,-0.990268,5.149287,-8.928322,-3.261894,-5.599725,5.906861,-5.083170,2.594553,0.685887,7.473183,5.368826,-1.377355,0.653465,-1.946956,-1.697077,2.040765,3.209258,0.989777,9.402218,-2.854824,9.345739,-2.297956,-4.847131,-7.558309,-5.524257,-9.619953,-4.985245,-3.806378,8.435155,-7.801208,0.365145,-9.058005,-1.493326,-9.839307,2.598360,2.293853,4.312174,8.782021,4.899370,9.367137,8.760552,8.216314,-3.234163,2.880897,9.439649,-0.555116,0.789264,3.002139,-3.031362,-8.246220,-1.078607,-9.662300,8.067268,3.645500,-8.130762,-7.274233,-7.817721,3.563138,1.720344,-0.080112,-6.127685,7.192574,2.311474,1.462618,9.347039,-9.488066,6.916690,3.537167,-0.017442,1.764726,3.204998,-1.705121,3.793436,-8.546956,-0.430782,0.734990,5.045265,7.463013,-9.834432,2.801164,-3.941683,1.161324,-8.069332,-8.398655,-4.708528,5.611437,5.327170,0.679583,9.437082,3.830326,6.867805,-4.824118,2.933878,8.923260,-5.568804,3.960765,-7.775140,-2.393301,4.189534,2.603675,-0.658159,8.087532,-6.209763,9.759256,3.219288,-7.388840,3.955888,0.197203,-9.414401,-1.177573,8.020358,1.271634,0.888132,2.405135,-3.299300,-2.856025,8.187247,-5.364491,-7.986929,-8.606112,-4.641477,-2.189502,0.539660,-6.257784,4.681938,4.410716,8.946517,-4.041676,-2.741065,1.346394,0.202135,-9.961922,-8.435586,-4.030473,-5.680728,-3.216716,5.488321,-0.195962,-7.817961,-1.475624,-5.613135,6.318513,-0.869341,-1.148670,7.723224,7.123892,9.314616,6.791308,-7.261631,-2.406102,-9.681036,3.833222,-5.268151,0.005534,3.173944,-1.816358,2.148274,3.023033,8.957714,-9.864141,8.412828,7.743304,9.707362,-1.632464,9.711016,-2.162552,7.707240,0.228090,-2.798289,9.421444,2.005826,4.880665,6.600730,-3.628537,-3.610281,0.867900,6.535327,-4.047551,9.214240,-4.055590,7.917757,1.285040,5.251933,-1.088315,3.813317,6.040937,5.270917,2.103957,8.536462,-2.508506,-8.795073,9.038379,-9.217099,7.959731,2.551095,-3.090928,-2.352045,9.151296,3.120753,1.365591,3.834466,2.950002,5.683151,4.859747,-7.672077,-1.476473,0.327405,-3.160797,9.144089,-8.611442,-3.484824,-4.720802,-0.074201,-7.451046,6.268563,-5.146228,-6.449142,-7.334314,-6.294401,-7.780564,9.969196,2.240873,-9.268690,-9.201364,6.384011,-3.841268,-5.416733,2.177231,6.669678,-4.021026,4.873682,3.336578,-0.445668,-9.629833,-6.810528,7.911724,4.167222,-9.874693,9.846816,-9.972275,4.278763,-6.197227,5.319582,-1.422172,9.999666,3.846370,0.140615,-9.349523,-2.392209,-9.411280,1.400456,-0.675721,7.436515,-3.118769,-5.138793,2.951166,-6.592906,4.857401,6.119093,-4.995678,-6.313391,-4.974326,-2.985377,9.590180,0.993288,3.924291,6.486619,8.390744,7.475310,1.740260,-5.311243,5.233189,-2.972140,-2.088353,8.607956,-7.403594,8.091938,3.224732,1.513421,-7.876354,4.454590,1.488641,-2.044512,3.894293,8.887321,5.640629,0.856946,-6.002883,9.669725,-4.439193,5.071761,-7.627976,4.550407,-8.575831,-6.472052,0.130851,1.585820,-9.553590,7.902466,7.200756,3.195887,8.726065,5.254194,-6.744536,-8.578196,9.871210,-0.824429,-4.711438,-9.939823,-5.395060,-0.411605,-7.113835,4.225942,6.578071,-2.879111,5.694136,2.336044,-2.031863,-7.717863,4.678266,8.192542,-5.332847,-4.957009,8.659175,9.604516,7.914817,1.237489,3.074188,-3.051056,-1.670518,0.708020,-1.144315,-6.132000,-1.732933,-1.745841,3.463283,-5.818633,7.336713,8.366511,8.162088,-5.002760,-4.075439,-5.697333,-9.354162,-7.045385,2.274163,-6.636048,-9.899215,4.478737,6.612425,-6.125929,5.034426,-0.962017,0.264620,-5.755866,7.483913,0.120675,-4.804189,1.366058,-4.195884,9.308558,-9.990966,-7.778175,-3.288933,5.540085,6.077448,7.718431,-4.509644,7.306958,4.210107,4.431456,-4.858125,-6.621908,-9.377743,-7.446499,2.248025,5.530303,1.753986,-8.932444,7.495927,-0.188926,4.221312,4.232319,2.665981,2.933797,-9.170694,7.155330,6.629550,-4.558047,-5.630284,-4.959237,-8.893487,4.512005,2.684350,-0.048840,0.492636,8.032819,-9.218689,-4.065417,1.399243,-6.710659,-4.105128,4.949952,1.667530,-9.346303,-1.730139,8.407077,-8.764539,-5.502244,-4.096870,-1.634956,8.730550,-0.739444,-8.643638,-1.718543,-4.462393,-0.944782,-3.811239,-3.877911,1.175668,9.678422,2.923890,-5.750154,1.231070,-6.665433,6.982669,5.126419,-9.526401,-9.060657,2.847234,1.786581,6.823873,-2.225725,8.206413,5.859694,1.496004,-6.329568,8.540480,-8.793835,9.746279,-6.109469,6.471331,-7.213355,9.818837,7.787533,3.101768,-3.275250,-1.438319,-2.222935,2.116245,-8.387603,6.366811,-9.647599,7.207139,4.437241,9.312003,-1.994452,-4.530085,-1.289442,4.930120,-3.761052,-2.453267,-0.629395,5.115299,-7.556135,-4.559248,-6.118996,7.029883,4.875283,0.628578,-6.925093,-2.124466,-5.344923,4.125210,2.953532,-6.655826,1.720891,-2.881794,0.887848,-1.242431,6.179167,-3.583468,-6.054483,-7.090983,-9.850353,9.141698,-1.683973,6.314661,-7.239554,9.248442,-3.861390,2.088371,6.301106,9.567013,6.700929,-2.219331,-6.683595,-0.291328,4.500697,-0.052619,8.283880,-7.773033,-3.384308,-0.079373,-1.880086,-7.537350,8.013776,-7.881653,1.282749,8.778330,3.792718,9.993906,-7.799049,8.752378,-8.577174,2.267691,8.173194,6.519469,-5.978585,-2.755720,-7.662179,0.395005,-9.680221,-3.915170,2.109987,-1.445848,7.038865,-4.577883,-8.984444,9.307779,-8.471498,-5.017967,-5.323365,7.719382,1.934377,1.548566,-3.755141,7.819696,-7.556634,-2.342883,1.188680,8.666236,3.304154,-0.197333,3.043441,-0.364181,-0.016507,5.305609,3.469485,0.441974,-5.062641,-0.203886,9.600954,3.159292,1.069462,9.312625,-7.463125,9.469658,0.903148,9.220032,-4.171767,-0.574899,-7.476456,1.282795,-3.987711,-6.914083,-5.128759,2.418202,-3.201286,3.161043,-1.452728,-0.920472,7.255109,-0.410399,2.385576,2.741295,-8.280090,9.496097,9.192914,-3.338412,5.492576,-8.390660,3.791303,-3.636014,-8.307547,2.934337,-2.001444,-1.459002,0.513691,-5.279136,-7.725238,-1.061227,2.471124,-0.569503,0.425244,-4.504824,7.920756,-5.591275,-5.498925,4.917382,-6.132480,-6.637252,-7.861457,9.940860,9.780218,6.868498,9.372135,-7.352981,0.736370,-1.594051,1.422221,6.693846,8.451223,2.007498,-2.329416,4.220049,0.085522,-7.674518,-4.792203,-1.268152,8.676553,1.681525,8.576916,-2.233662,-3.890030,1.412836,5.087519,3.124440,-8.320121,2.145897,2.019859,-5.745591,-7.303628,-2.323271,-8.955353,-9.588175,-6.502624,-6.579165,-8.628903,-5.152401,9.644020,-4.254003,8.334179,-1.595968,4.083068,-0.736609,-4.038493,8.572699,4.769899,2.125026,-9.985782,-0.023746,6.424070,6.119807,9.470249,0.269127,6.382089,0.016910,5.848292,8.682211,8.265711,1.007594,-2.479809,-7.233871,-8.797615,4.430479,-6.428876,-0.574648,-6.117611,5.763281,2.417256,9.286333,-2.854221,1.314168,-4.687603,-6.363001,9.408417,0.142764,7.336288,8.077328,3.989533,-9.917157,-4.504862,2.629309,-9.334489,-8.953348,5.634589,8.796169,2.737887,8.497619,5.278218,4.772893,1.730069,-1.306833,9.433336,4.690549,-4.506371,-7.003909,-3.884417,3.986593,-3.857184,-4.878628,0.685482,0.692803,3.670065,-1.407681,3.038209,1.715701,-1.564680,6.562309,0.142469,-4.563140,-4.105314,4.941098,6.323663,-8.924103,-0.488168,2.548871,-4.702439,-2.208019,-1.738376,-5.999667,1.938589,-2.982908,7.053262,1.060939,-1.406645,-5.739336,-1.624788,6.805148,-9.708182,9.041629,3.545888,4.782440,3.084455,5.661764,-3.183343,8.227218,5.966315,-9.027846,1.141646,1.662274,0.755526,1.083358,8.133041,3.625222,-1.210546,2.796516,-2.621333,5.340316,-5.493287,1.800927,-6.953834,-2.072145,-5.514169,-2.382973,-4.038980,-4.152430,3.310425,5.386375,-7.839407,-5.225240,0.446280,-6.596800,-0.027151,-8.981045,-5.738604,-1.395970,-4.539132,-3.645004,2.778643,4.942708,9.859109,5.857252,2.064780,4.229460,-0.862289,-8.768936,4.896110,6.552585,-1.965243,0.503105,6.370277,5.220830,-1.381023,-4.686306,-0.013662,-6.545294,3.276962,-9.858932,-9.659478,4.354434,6.490498,0.059022,-4.682712,8.067195,-1.478700,-4.897528,-6.449736,8.711087,2.570594,-0.611813,6.917391,5.905855,-4.772866,9.781336,-4.121552,3.306894,-2.288149,-7.051975,6.246136,2.906640,-1.645611,0.253596,2.625439,-5.297613,1.883484,-9.878435,4.237137,9.241598,3.733820,-0.170050,5.409735,-2.039032,-8.397996,2.244738,-8.961350,1.858551,-9.436716,1.738120,-3.896964,-3.432342,-8.405781,-6.114058,7.206894,8.961299,4.825410,-5.621530,-1.675566,-8.076396,4.011716,-5.053393,4.844336,0.711576,8.837322,0.617550,-6.705177,4.002094,8.770250,-8.039392,6.959777,4.159824,0.705627,-7.089561,-2.092954,7.167314,-6.526178,9.673194,6.617664,5.194008,7.275990,-6.467436,-4.838179,-5.755679,-5.515123,-7.765143,1.263356,-4.768720,4.001703,-1.893589,7.029412,-9.016178,3.957988,1.945906,-1.918112,7.466173,-9.948540,9.576529,0.493137,-6.023870,-9.334876,-1.242648,-1.313410,-9.035884,3.559383,-7.159862,-2.060624,-9.034332,-3.366329,2.767769,-2.019947,3.849972,-2.095563,4.044825,-7.106129,4.207299,2.943574,-8.100289,-0.851790,7.053405,0.811269,0.167088,-6.872938,-2.997837,7.716811,3.097292,-9.230915,-4.156990,4.451881,8.847744,9.495106,-0.152919,-0.783701,7.167972,-5.244534,-7.379683,-6.037976,3.554743,3.374160,8.056329,1.246879,-5.370449,4.345498,1.848172,-4.607971,2.785097,5.449558,-4.691240,-1.756988,9.091079,7.656473,6.072010,9.221744,-1.452731,-6.405748,0.451053,9.718913,8.000235,6.523916,3.387051,4.387196,4.509235,2.907345,-4.294819,0.785226,-2.823157,6.241128,-2.668081,-5.180612,6.956223,0.777361,1.426676,-2.187823,1.080747,0.691777,-8.530239,9.269850,4.545340,2.807689,1.449946,4.826374,4.681471,3.892786,4.800970,3.424199,-2.025060,-5.114759,2.594561,-2.125128,-0.849106,6.153616,2.549007,-6.298144,2.718965,-0.030748,8.448068,-2.289747,6.101725,-2.434364,-9.956347,9.191334,-9.607558,-1.381468,9.498054,7.578883,-4.989766,-7.938011,4.172929,-9.485402,-3.146228,7.007717,1.916053,2.596983,3.571722,3.201385,0.590253,-5.317353,-7.901548,2.607540,-3.216225,1.123354,4.996984,-8.688334,7.502940,-9.273348,8.285926,5.522031,1.805425,1.840930,-5.078187,-1.216016,-6.846886,-2.282454,1.281708,-0.341067,-0.804061,-2.431464,8.978820,-2.327543,-8.611844,-0.497931,7.171187,-1.819041,-0.529056,5.954683,-2.235358,-7.041257,5.984588,-5.384534,-8.730031,-5.254893,-6.245476,0.355566,0.967367,-4.780987,-3.854135,0.969674,-3.589773,-6.756234,-4.995729,-7.082324,-9.267985,5.846284,3.424619,-8.908073,-2.236744,-4.489570,-7.475858,-5.026923,2.337192,2.066375,7.612748,4.255624,-0.077292,3.266021,-4.834727,6.098879,-5.176037,-0.986169,-5.120957,-1.753318,6.880625,-1.742580,-6.031780,2.310996,4.392280,7.005293,2.177557,2.003797,-8.517748,-4.944619,-1.859386,5.074437,-2.248398,-7.245615,7.458234,2.722425,9.057819,-1.993542,-9.850762,8.681515,-4.979945,1.319160,-2.747584,0.188618,4.393767,7.119360,8.050602,-0.244911,-6.951577,9.186510,3.701300,-2.681028,-3.319336,-1.417154,-0.240549,-7.326312,-0.238432,-3.936770,-5.797658,-1.285029,-6.648432,7.561080,-0.583987,6.024330,-6.697918,-0.657285,-8.051075,-0.336930,2.001289,8.841337,9.936944,-6.049474,6.199924,-4.807545,-1.899093,2.835281,-9.115622,7.758042,4.810889,5.416398,6.837656,4.292876,-2.883994,-5.078745,9.086734,3.566193,1.617945,-5.267178,-9.858351,4.386554,5.565741,3.620237,1.502349,0.709407,-3.314513,7.540329,-0.862734,3.266537,-3.786653,2.417639,7.102307,-4.065456,-1.823611,-2.997822,9.867943,-9.196884,-1.202567,-0.675321,-7.858197,-4.663020,-9.793745,-5.764410,5.305045,1.469752,2.566380,6.214433,7.639851,3.329527,-0.992242,7.432179,1.212503,9.219768,2.660461,-6.894680,9.569567,-1.638240,-7.097529,-9.503872,-2.094247,2.490973,-6.772351,3.032038,0.755684,-3.918798,-2.284521,7.275372,1.264131,1.460746,1.923608,-4.538763,2.170236,-9.582915,3.659231,5.331588,3.181374,7.557396,3.111343,5.722640,4.816187,-0.177535,3.379533,-8.425490,-6.148538,-2.408334,4.848100,-6.901229,8.788448,-2.795206,-1.733674,5.392037,-2.248983,9.314978,0.671672,-7.023277,-1.921623,-9.364321,5.013599,-1.236492,-9.596258,8.773332,1.823576,-3.827722,-5.422441,4.042855,-6.577457,-8.838687,9.051932,-9.166495,7.107794,-7.599758,-5.461801,3.550603,0.423000,2.141777,-2.993111,2.880345,4.534058,3.282172,-5.739626,-7.025858,4.184305,5.356083,-3.586244,8.319270,2.755933,-8.566858,-8.266070,6.747638,5.600679,1.094049,4.439363,-5.550384,5.053535,-5.991694,-2.184578,-7.210945,-9.670623,6.040938,-8.970518,-9.487450,-4.268248,4.281702,-6.909495,-2.415508,4.875390,-9.224578,-7.204522,2.859777,-8.661368,3.567452,-9.142633,-8.513591,9.922741,-3.210417,-6.539594,8.313324,3.721031,2.659904,1.990687,7.384272,1.250240,4.108873,-0.087475,2.620361,8.212340,-6.945858,3.428391,-4.009982,-3.663385,-0.123018,3.574875,6.647137,-6.619246,-8.356747,-1.005934,-3.184996,1.621960,5.566590,4.320452,-2.505413,5.532155,-8.062226,8.116088,3.595161,9.105219,-8.697351,-4.976457,5.681310,-2.869513,-7.255504,-2.802175,5.135312,2.556485,2.917285,4.536845,7.802820,-2.535978,1.080334,-2.289989,9.016643,-5.448059,-7.990457,1.269464,7.339302,4.748714,-5.843986,5.382980,-5.599635,-0.069067,3.382118,0.814088,-3.847848,-0.490237,-4.293256,6.509448,8.846685,2.271935,-7.579720,9.122991,8.882186,1.548580,-0.261069,4.601646,3.089536,3.052015,2.809718,8.824008,-0.453919,-6.861662,-4.172307,4.820386,3.579285,3.648991,5.646881,-1.960351,-8.669214,5.604813,-2.662097,5.598050,-5.837235,-1.212267,7.821022,-4.764280,1.335654,-1.212648,-1.412124,1.870849,2.469076,1.451201,-9.542003,9.442389,5.016315,5.076056,2.575017,-1.505135,8.070471,4.612458,-3.807071,9.372241,-7.239397,-7.932718,4.070860,9.055711,-8.786329,3.333818,-7.163137,5.544291,7.281012,8.615114,0.056396,2.267649,-5.075230,-4.198578,-9.312123,-6.345417,4.831155,6.690968,4.138241,9.458020,0.662876,-3.805444,2.268147,5.106818,-1.547134,7.074265,-0.562434,5.961801,-6.857602,-9.051515,3.517988,8.232938,0.599327,6.415267,5.447057,-6.440406,3.494031,-0.694604,1.892434,-0.428175,-3.375067,3.694640,-5.054742,4.333385,-6.234060,6.872078,6.140612,8.203510,0.182314,3.840680,8.832784,4.818233,-8.227331,-9.388423,1.694718,2.847990,-3.306691,7.982581,8.464280,8.028626,-6.678598,1.884163,-3.471247,-8.342051,6.458573,-2.851010,4.245012,-6.914019,-4.380694,5.463460,3.318232,0.313161,-2.869254,-0.148537,-7.859178,9.140340,-1.237780,-7.947800,5.055306,-5.569203,-8.912194,-8.844516,-3.489770,7.559486,0.359848,-7.141666,5.682530,-1.380532,-0.368436,-7.529650,5.860155,2.844616,-2.590975,-3.549057,-2.272870,5.958308,6.978944,5.425734,-0.340322,-8.401264,5.797696,-5.823396,9.506677,-3.882779,8.497011,-5.710834,3.675738,-4.164999,2.533646,1.480332,9.040294,-3.348154,-0.346887,-3.264890,-7.466015,-6.358095,9.249237,-2.709139,-1.014766,4.923335,9.018132,-6.703844,2.073106,5.953333,8.412870,9.362831,3.009442,2.313127,4.862126,-9.355703,3.700545,6.459749,6.086944,0.235357,7.940829,1.992471,-5.526005,3.581005,-7.748664,-3.766819,8.274851,-8.080001,3.422294,3.894022,0.625324,-6.810354,-4.605128,0.603494,6.723307,4.686862,0.028685,-0.622955,-8.174205,-1.093949,-1.143161,-5.661998,-2.698188,-4.298610,5.495956,-0.686727,3.125887,5.288631,-5.249870,9.439074,2.694940,-1.534497,0.645309,-2.662826,-1.614349,-0.397490,4.756756,9.925828,4.343484,9.736646,9.408167,0.547872,-2.538262,-1.484776,2.178986,-1.126175,7.728531,-8.897389,8.155908,-3.539531,5.493346,-7.906164,-5.608180,-8.755887,6.165508,-0.807377,1.375140,4.502743,-2.013601,-5.596638,8.270444,-0.035941,-5.566094,5.247523,6.238588,6.428686,-0.475844,8.117853,0.250918,-8.808796,3.115161,1.000656,-1.538074,-8.380825,8.418374,0.938440,5.206970,3.328865,-4.872121,-4.903837,-1.477862,-2.016731,3.367891,0.357779,4.672187,-1.009608,-2.242506,3.302961,-5.144551,3.994134,-5.116073,3.236222,-4.220033,0.890719,9.931141,-0.498876,-4.125178,7.078855,-9.939935,-3.540990,-1.324165,-3.136150,3.501503,-5.363261,6.199921,8.003358,-0.670549,-9.716198,1.076203,9.754894,2.740398,-3.741955,-7.705263,2.169971,0.533305,-5.022472,-7.158426,-7.665415,-1.485504,-4.794258,1.381527,9.415254,-4.985611,-9.124284,-4.648510,-8.501755,-7.925061,6.480963,-3.185072,1.250094,-9.821030,-5.997580,5.855717,-6.410443,6.854271,2.891106,-2.412965,-8.237506,-5.594570,-7.604968,-6.325338,-8.459477,-8.380188,8.260546,6.696419,-7.825154,-8.008314,-9.427653,1.550488,5.431064,6.186582,2.929525,0.191177,-1.975884,4.792456,-7.233161,-3.473931,-2.736162,-9.358234,6.827140,-3.921049,-0.426576,-3.662715,-5.714530,9.027409,-6.250559,8.916800,0.509145,9.619331,-6.391482,-5.076946,-4.876222,-2.058345,9.307568,-0.301107,-0.494248,-9.273888,7.563647,0.198787,2.291737,8.102533,-3.298923,4.810976,-0.009022,1.385023,8.734624,4.782191,-5.061466,-2.210247,6.889320,1.530427,-0.971208,-9.178356,-5.596417,2.786200,-1.249939,-4.451235,0.544126,-2.296699,-0.906852,2.284589,-3.094011,-2.209989,-3.819541,-9.531241,1.339932,3.082190,-8.832518,-3.850215,0.763856,-4.180793,-7.333833,-0.129760,-0.223664,1.002652,2.530532,1.721446,-6.335663,-7.813600,-7.341374,-1.283738,-0.858943,1.148678,6.234320,-2.300045,-2.589622,-0.116972,6.800918,-4.401224,-3.814677,-4.627218,-2.105308,8.348920,5.300590,2.111246,-2.994945,-4.382438,2.052505,3.756476,5.567225,-4.080367,-2.221484,-1.872599,8.072305,-8.952947,9.107589,1.669196,-1.004273,-7.530860,0.259155,5.014887,3.105137,-0.940019,-0.665932,3.833839,6.266862,5.607540,-1.443186,6.141241,-1.810334,2.770516,0.537276,-9.512835,5.303683,2.730385,-0.435155,2.171209,-9.925385,2.347355,9.416660,-7.031393,-5.555105,4.458165,-2.371781,-2.350859,-2.042163,-8.194460,0.444155,5.847163,1.208375,9.756779,8.482882,0.511003,-2.298774,-6.170395,4.608169,2.453885,-8.214579,-3.533197,2.610275,-8.126225,7.383243,7.785754,7.627426,3.887504,-6.855196,-6.217041,3.270383,4.848065,-4.703779,-0.130662,3.271960,1.361728,-8.540119,-6.602402,8.758009,1.027726,6.527102,2.301160,4.020554,0.895600,1.773343,6.825142,2.904645,-4.533560,7.342091,0.754704,-0.994029,-3.026571,-5.908850,9.831043,3.964031,-6.263304,7.813622,2.932724,8.703646,-0.156376,2.810821,9.071555,8.157707,-0.295015,-5.164488,5.374589,5.136206,7.032290,-9.658747,7.493545,5.086758,-4.623971,9.241181,1.784887,-1.442600,2.557607,-2.088177,-9.696748,-2.102557,-0.023033,-5.099621,-3.103469,1.191549,7.760054,-5.033524,-6.171502,2.964534,-7.370769,-3.538285,8.939032,-2.426348,-2.190498,7.042583,-1.391633,-6.360273,1.382678,-5.992935,-8.270820,0.512192,6.143184,-0.656026,-1.924058,-3.917138,-4.422052,-6.690487,0.277275,-5.620328,7.402830,-6.048065,9.848032,-5.335229,2.221303,-5.132388,7.757976,8.231227,9.791976,-6.255471,6.085861,1.398862,4.202365,7.568355,-9.527624,4.375185,-1.481573,0.872014,-9.455583,-2.881385,-9.346840,4.251678,-6.258361,-0.320872,-3.000617,5.665878,8.609670,6.983204,4.933364,1.551715,-7.970728,9.333600,-7.712305,-4.926140,7.250457,-6.713094,-1.964269,4.393026,-8.620915,-1.495309,-5.031268,9.600198,-7.503796,-4.938312,7.825749,4.358293,-9.149297,-3.749161,0.747886,1.634890,8.198819,-9.210768,5.245933,2.671377,4.001044,-6.502659,2.552778,9.935237,-9.069545,5.247632,2.569760,2.394182,-5.292421,-2.045380,5.928574,-1.390098,4.459956,-3.243859,-8.211430,3.901302,5.197500,5.513584,0.445171,9.943781,-3.554590,1.446900,2.138864,-2.604913,0.759858,-1.916191,-7.138549,7.081533,1.077098,5.184382,2.730074,-8.497402,-3.469690,-2.703471,-2.520645,-1.826468,-0.361905,5.871133,-2.449778,2.159429,-9.413420,-7.153055,-3.255753,2.173438,2.510874,2.501569,6.521428,-2.563451,1.007837,5.664926,-9.264104,3.978545,7.921979,-9.702803,-9.154312,3.563635,5.995350,1.888334,-9.613186,-9.246752,0.272996,-8.702194,9.587158,3.114574,7.533279,-8.822755,-0.567044,2.547562,-2.457291,1.722581,4.364581,-1.656519,6.471280,0.546414,-5.270591,5.228590,4.985111,-3.449602,-0.657021,-8.706371,-0.831319,8.053346,-1.305578,-6.235687,8.656881,0.270691,1.207364,5.816930,8.076622,-4.134267,-2.636357,-1.566000,8.039408,-0.820512,-9.691869,-2.596169,-0.282960,7.424831,-4.501147,8.984464,5.011915,-3.292507,-2.835800,2.912754,-9.419701,3.597120,-1.239944,8.357438,-2.588727,8.349261,-5.937839,8.572856,-5.905285,2.047402,0.177767,-1.015282,5.951354,4.039949,-9.918703,3.359411,-3.808459,-4.546054,-6.462086,-4.394892,9.858553,0.525719,8.911879,-4.093056,9.152203,-0.175698,9.682326,-4.578260,-0.854502,-1.706587,-6.410154,9.815220,0.613985,3.744018,5.832248,-7.074628,-6.930411,-6.598321,1.079134,8.221733,-2.970109,3.267749,-3.631456,-1.380048,7.027590,3.957921,9.508641,-0.790552,-6.438159,-3.185796,1.969628,0.012305,2.565254,-6.707769,-8.608149,9.685743,4.188634,-3.555536,-3.958619,-6.390182,-4.562427,-6.252795,3.178146,-4.416296,-4.361318,0.520774,5.284153,5.117479,0.299037,6.755446,8.353323,-3.361490,0.664331,-9.120507,-6.850888,6.672422,8.756727,-1.121021,-7.166381,-6.870329,6.453041,9.041009,-9.920163,3.365566,-8.085965,-0.907433,-5.448882,-8.304956,6.813127,8.332263,-9.192801,-8.227896,-5.854521,-1.435835,7.287036,-8.550545,-5.995027,-3.102756,-0.556674,-0.031345,-0.346764,6.261017,-8.194438,5.009944,-7.860190,9.227610,8.592598,-6.886308,-1.488474,0.462546,-2.544430,-8.192795,2.178279,2.510759,0.469947,-7.148044,-7.574182,-4.365618,2.857481,5.675280,-4.784298,-1.909406,-2.822675,-1.856204,4.000910,2.741122,5.353038,2.305960,-5.009691,-0.384587,-5.664357,7.630056,-7.206316,0.530538,0.174710,-9.585524,3.812227,-7.379996,8.106143,-4.165374,-2.326876,-4.422232,-7.830058,-7.449287,6.053956,-2.192703,0.630452,-5.377621,5.670056,4.239738,-7.759476,-8.609909,6.639448,-9.762565,4.477157,5.976850,-8.326514,7.000214,4.950648,5.901665,6.886920,6.440523,2.371007,-7.713640,4.890046,-0.245078,1.188106,-3.069063,1.657350,-7.152514,2.805583,-1.043743,1.396635,-1.937467,4.714861,3.261624,5.100131,6.915857,2.258751,4.066604,4.840471,-1.210951,4.416995,0.682404,3.334451,3.100204,-8.178522,-7.226719,-6.909578,-0.350441,-5.978045,-9.181911,-6.269959,9.712360,9.533756,3.993117,-7.391875,-9.663427,-7.375255,-1.877872,7.240858,-3.271069,9.540026,8.421436,-0.708474,5.123156,-4.800733,-1.358548,0.435035,-2.900974,6.807130,3.225478,9.702484,6.194227,-6.809826,-6.649237,2.133913,8.182063,1.014141,-5.939954,-4.504146,1.998036,2.855208,-1.494818,6.271762,-1.565156,-3.779415,-8.725218,3.930411,2.451125,8.706886,9.704652,-9.978867,9.662925,2.892395,2.905925,4.208093,-8.503802,5.261921,2.524651,9.790979,1.970859,9.319056,-8.440202,8.820962,-9.803436,5.979606,8.944805,-3.597828,0.579674,6.786276,-2.661593,3.279509,9.849212,3.858002,4.890510,-0.242546,-9.291033,-8.669683,-9.458352,-4.895279,-7.557241,-5.891892,0.946613,-4.420580,5.176468,-4.805067,-7.274227,-9.473799,-7.754270,-6.763628,0.939806,-2.013577,3.266127,-3.536738,-4.816351,-6.945670,-4.035918,-7.682434,-4.442126,-0.102170,-3.472800,4.495708,9.100249,5.547288,3.720196,2.429925,-6.457857,-7.844798,4.946962,-2.336737,9.988701,-0.918512,9.817112,4.490434,-6.030771,3.432385,-6.959686,7.941477,1.498002,9.585900,2.436528,5.415257,-5.217942,5.504097,-3.791265,7.077507,-6.610488,1.191252,4.511365,4.855616,-6.997751,-1.341727,6.427835,-2.287285,-6.594719,7.382182,5.236442,-2.039068,-9.894444,8.792371,8.385179,-5.817499,-4.777083,0.578232,3.518852,7.141619,-9.074231,-5.634028,-6.866142,-4.904040,8.650286,-8.352133,-8.628409,-3.369432,-8.243237,7.648715,9.704855,2.277198,9.635265,6.442980,-0.485722,-7.990742,-9.607704,-7.783619,-9.102310,-6.382928,9.562966,-6.955453,1.217131,-0.575679,-6.998287,8.783976,-7.953272,2.679001,5.100022,-9.513750,-5.745829,-4.240103,2.887235,2.463022,7.807353,2.056377,-6.444888,-1.924148,1.506569,3.156559,-4.628559,6.642039,1.327074,-0.045622,7.158455,-6.977480,-8.867672,-1.835103,-1.944895,5.489227,6.582086,-4.781692,-6.208908,9.730462,2.961860,2.450971,5.991522,-3.306922,1.168805,-4.477665,6.365012,-1.305838,2.453646,-2.751799,-6.856283,-1.057752,-2.555100,6.600627,6.748237,-9.236000,4.701928,2.327439,-9.379658,-9.640091,-2.457713,-2.850692,2.379358,2.688044,-5.222494,-7.969111,7.842880,-7.944514,4.225207,-2.506379,9.430797,-2.111259,-0.355351,3.938554,6.190056,6.772264,-9.330127,-1.029420,-3.863497,8.939292,9.099340,-5.378287,-5.582349,-6.769170,-1.237686,-9.476644,-8.750380,0.798901,-7.041919,2.247529,-6.075231,-8.438602,2.006122,-0.326449,-7.869855,-7.072335,-9.047296,5.246505,1.144363,-9.319924,-1.507366,2.417534,4.731307,-0.925544,-4.213451,-2.282767,-4.208452,3.426047,6.916157,7.082675,4.603642,1.881061,-6.172593,-7.781083,-5.896959,-8.343677,-1.085143,0.358449,-5.601666,6.587769,-1.995579,5.069106,-0.885839,-6.846947,-7.367267,-0.162647,5.511000,7.657219,-6.799052,5.475802,0.957092,3.558053,-7.072512,0.575948,-0.350936,2.190597,-5.915390,1.164576,1.554319,-1.725398,-5.514349,-3.008940,-6.307679,0.858142,4.101911,-8.694165,-5.901540,-4.277868,-7.257090,7.399135,8.706872,5.246700,8.319190,-2.831946,-9.156548,8.244327,4.331343,-2.393398,9.889080,-7.010796,9.233494,5.513862,2.954189,-9.990725,-0.628305,-1.633700,-3.047887,1.273709,9.390702,-2.705887,4.572733,-5.274013,6.375552,-8.660616,-2.119454,-5.061552,1.991730,-0.939089,7.674790,8.375547,-3.532009,0.697313,6.272078,6.209015,3.742245,7.254598,4.671124,7.521053,-4.366720,8.067884,5.315973,-1.181887,-6.987244], dtype = "float64")#candidate|3288|(2912,)|const|float64
call_3286 = relay.TupleGetItem(func_2753_call(relay.reshape(var_3287.astype('float64'), [16, 1, 13]), relay.reshape(const_3288.astype('float64'), [16, 14, 13]), ), 3)
call_3289 = relay.TupleGetItem(func_2757_call(relay.reshape(var_3287.astype('float64'), [16, 1, 13]), relay.reshape(const_3288.astype('float64'), [16, 14, 13]), ), 3)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_3308 = func_2211_call()
call_3309 = func_2211_call()
output = relay.Tuple([call_3276,call_3286,var_3287,const_3288,call_3308,])
output2 = relay.Tuple([call_3277,call_3289,var_3287,const_3288,call_3309,])
func_3319 = relay.Function([var_3287,], output)
mod['func_3319'] = func_3319
mod = relay.transform.InferType()(mod)
mutated_mod['func_3319'] = func_3319
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3320 = relay.var("var_3320", dtype = "float64", shape = (208,))#candidate|3320|(208,)|var|float64
func_3319_call = mutated_mod.get_global_var('func_3319')
call_3321 = func_3319_call(var_3320)
output = call_3321
func_3322 = relay.Function([var_3320], output)
mutated_mod['func_3322'] = func_3322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_3336 = relay.TupleGetItem(func_1902_call(), 0)
call_3337 = relay.TupleGetItem(func_1903_call(), 0)
func_1145_call = mod.get_global_var('func_1145')
func_1146_call = mutated_mod.get_global_var('func_1146')
call_3338 = relay.TupleGetItem(func_1145_call(), 0)
call_3339 = relay.TupleGetItem(func_1146_call(), 0)
func_1756_call = mod.get_global_var('func_1756')
func_1758_call = mutated_mod.get_global_var('func_1758')
call_3342 = relay.TupleGetItem(func_1756_call(), 0)
call_3343 = relay.TupleGetItem(func_1758_call(), 0)
output = relay.Tuple([call_3336,call_3338,call_3342,])
output2 = relay.Tuple([call_3337,call_3339,call_3343,])
func_3348 = relay.Function([], output)
mod['func_3348'] = func_3348
mod = relay.transform.InferType()(mod)
mutated_mod['func_3348'] = func_3348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3348_call = mutated_mod.get_global_var('func_3348')
call_3349 = func_3348_call()
output = call_3349
func_3350 = relay.Function([], output)
mutated_mod['func_3350'] = func_3350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_864_call = mod.get_global_var('func_864')
func_865_call = mutated_mod.get_global_var('func_865')
call_3429 = relay.TupleGetItem(func_864_call(), 0)
call_3430 = relay.TupleGetItem(func_865_call(), 0)
var_3443 = relay.var("var_3443", dtype = "float32", shape = (1, 9, 4))#candidate|3443|(1, 9, 4)|var|float32
bop_3444 = relay.multiply(call_3429.astype('uint16'), relay.reshape(var_3443.astype('uint16'), relay.shape_of(call_3429))) # shape=(1, 9, 4)
bop_3447 = relay.multiply(call_3430.astype('uint16'), relay.reshape(var_3443.astype('uint16'), relay.shape_of(call_3430))) # shape=(1, 9, 4)
func_1261_call = mod.get_global_var('func_1261')
func_1263_call = mutated_mod.get_global_var('func_1263')
call_3449 = relay.TupleGetItem(func_1261_call(), 0)
call_3450 = relay.TupleGetItem(func_1263_call(), 0)
func_3319_call = mod.get_global_var('func_3319')
func_3322_call = mutated_mod.get_global_var('func_3322')
const_3461 = relay.const([[-5.200614,7.709358],[7.347162,5.898560],[1.781074,1.595533],[9.673706,-5.095058],[0.211674,1.660988],[-4.714038,8.916272],[-1.540332,1.288744],[-1.047621,0.189376],[9.172001,-5.641155],[3.517402,-5.192174],[5.522381,3.100132],[-8.693802,5.821302],[6.077460,-9.083907],[0.459045,-8.080536],[5.755757,0.370197],[-4.218507,-5.148235],[1.786846,-9.839919],[3.275609,4.834237],[0.111496,2.551691],[0.715762,9.519289],[7.145850,-5.732395],[4.251300,-0.890888],[-3.790606,-0.085167],[-4.997344,3.402731],[1.019810,-0.425539],[-5.443396,-9.276787],[-0.031923,2.781050],[-1.154802,-2.072632],[0.192527,-0.075967],[4.341225,7.077758],[-0.347264,7.831043],[-9.545594,8.149382],[-5.469501,-6.416607],[9.826966,-2.928735],[-1.027042,7.181277],[-1.341558,0.258501],[-0.281352,-8.755988],[-4.412260,-5.013458],[-2.836428,-2.701941],[-4.775008,-8.443781],[0.632943,8.058433],[4.270606,9.563938],[-3.257663,-8.381544],[-9.187891,-7.700196],[-9.263369,8.541944],[-5.526352,0.530190],[7.559796,6.767855],[7.355882,-6.512141],[9.806808,-3.296353],[-0.973639,-8.488597],[-2.008329,9.854113],[-3.695953,-3.731897],[1.348395,-4.680577],[1.262596,-9.149931],[3.461460,-8.636790],[6.888420,9.727478],[-2.892058,-6.643087],[3.352031,3.662073],[5.231762,4.002605],[-7.698028,-5.967090],[4.164551,1.433283],[6.083887,9.343898],[-7.642985,7.141669],[-2.190481,-3.763284],[-8.145532,3.530126],[5.613522,-6.344475],[-4.913195,4.536221],[5.824560,-2.484301],[-9.442613,7.897604],[1.918810,-3.680306],[-5.736560,2.805655],[-3.796798,5.715505],[-9.323518,3.041041],[-4.778799,2.090595],[3.748278,1.909189],[-9.353554,9.269810],[-4.493869,-0.315101],[9.742804,7.484846],[6.445081,-7.636473],[-5.469091,-3.675686],[7.549167,-4.509017],[2.135528,-0.961136],[-7.283816,6.846708],[8.753346,1.125128],[1.894160,9.859337],[-1.893933,-7.651148],[9.759821,-2.687927],[6.657151,9.475976],[-2.873700,-3.399613],[6.019540,-7.143549],[-0.554410,-8.818287],[-7.156124,6.613894],[-9.849162,-8.732373],[4.452424,-4.941644],[0.013516,-4.835350],[9.964619,9.326243],[-3.655034,-6.928993],[-0.580056,5.669951],[-4.817891,-8.246530],[-8.026153,5.832743],[-3.350381,0.946228],[-3.815767,8.661037],[-5.985971,-9.184935],[4.809102,6.918962]], dtype = "float64")#candidate|3461|(104, 2)|const|float64
call_3460 = relay.TupleGetItem(func_3319_call(relay.reshape(const_3461.astype('float64'), [208,])), 2)
call_3462 = relay.TupleGetItem(func_3322_call(relay.reshape(const_3461.astype('float64'), [208,])), 2)
output = relay.Tuple([bop_3444,call_3449,call_3460,const_3461,])
output2 = relay.Tuple([bop_3447,call_3450,call_3462,const_3461,])
func_3464 = relay.Function([var_3443,], output)
mod['func_3464'] = func_3464
mod = relay.transform.InferType()(mod)
mutated_mod['func_3464'] = func_3464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3465 = relay.var("var_3465", dtype = "float32", shape = (1, 9, 4))#candidate|3465|(1, 9, 4)|var|float32
func_3464_call = mutated_mod.get_global_var('func_3464')
call_3466 = func_3464_call(var_3465)
output = call_3466
func_3467 = relay.Function([var_3465], output)
mutated_mod['func_3467'] = func_3467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_3492 = relay.TupleGetItem(func_1902_call(), 0)
call_3493 = relay.TupleGetItem(func_1903_call(), 0)
func_1621_call = mod.get_global_var('func_1621')
func_1624_call = mutated_mod.get_global_var('func_1624')
const_3499 = relay.const([-8.568413,-2.084862,-7.929338,5.052460,2.704106,2.817013,-9.799898,0.165293,-7.744026,-4.868399,-9.508303,-0.941287,-2.366374,-5.114564,-0.449404,1.012033,-2.611228,-4.566240,-2.835092,-9.644330,4.394589,6.549026,-8.980387,-6.253540,3.087701,6.407581,-9.558171,-4.275123,6.816319,0.004989,1.292350,-9.111161,-9.852321,0.285408,-6.995031,-0.233781,5.463996,-8.010414,5.825137,6.484555,8.787468,-9.445633,-9.422978,-4.268072,3.579752,0.377790,-4.442213,-4.552401,-7.332951,-5.544201,-0.682557,-0.441132,-4.015705,0.442730,-2.163920,-9.423621,-4.866836,0.201885,8.426030,-1.961296,1.103124,-3.437406,-4.179740,-3.750721,-5.200653,0.183078,-1.586110,-3.635803,-8.556066,-9.916829,-3.388462,-3.200105,4.047826,0.410482,-9.817346,-7.159143,1.201846,9.064233,9.249066,4.923323,-1.700836,-3.170898,-7.045434,4.757950,6.317385,5.745981,-6.818276,-6.901851,-2.023715,9.710134,3.908997,-7.882370,-2.357011,-6.307378,-1.786470,6.551207,8.194985,3.459962,-9.681135,-1.875314,-5.486127,-0.371365,-5.396846,-1.567722,-1.320282,9.794352,7.217634,7.747489,6.230597,-8.577109,2.950563,0.045532,0.699406,-5.337732,6.955101,2.960100,6.521509,7.775571,-5.151419,-2.109662,1.869206,2.749972,5.760403,-3.347366,-3.112679,-5.727102,-3.943759,-5.413139,-6.702462,3.263180,-9.407963,7.966893,-1.660042,3.430274,4.246526,-4.345129,3.805384,5.016460,-1.016627,4.523308,-4.175359,-0.222827,1.557887,5.696163,6.424803,-3.718431,8.828497,7.274597,-1.556743,3.746283,-6.432092,-9.809126,3.795593,7.056524,2.066471,-8.629162,-0.717612,-0.711841,-6.637215,-0.229451,-0.063232,1.346785,-6.070964,-5.610637,9.070371,-7.296145,5.746955,1.979872,4.344978,-8.467898,0.370854,-3.349643,8.011075,-4.946711,-8.784064,5.559143,2.454477,1.379154,-2.634188,-5.738129,6.368876,9.998664,1.216174,7.902145,1.373593,2.558570,-4.821614,8.431228,-5.033148,5.567054,-4.630116,6.421221,0.880081,6.348910,-6.801681,9.259021,3.019694,-7.572242,1.926448,4.062865,3.965153,-0.359177,-6.761703,1.677892,0.461011,-8.839301,-3.226493,4.977643,-3.168324,7.443484,-3.515333,-0.404286,6.097716,-3.869447,-6.087124,-8.828949,-1.734816,4.931160,-8.923863,7.534758,-1.307614,2.650422,6.553938,-9.246497,6.027913,6.325518,5.896813,2.731991,-6.428623,6.750332,5.647959,9.261770,-9.620906,6.473701,0.265000,-9.931893,-0.941740,-4.784700,-8.570703,9.764859,-0.852302,8.078996,-0.821244,9.950412,-6.700811,8.844599,-5.451875,9.478201,9.143921,9.727928,0.275924,-3.534534,6.051262,-0.730032,-7.081731,8.398472,-4.456030,-7.903325,-8.462117,5.043022,-9.919234,-0.874231,3.047142,-1.325886,-3.222542,-4.695560,3.108934,1.449931,2.025775,9.480448,4.117606,8.404918,8.451979,-6.938474,4.730051,6.227999,-4.904394,-7.887471,0.730314,7.611913,-1.533010,-3.250147,-0.460880,-2.422809,5.747724,0.488074,-1.612926,-7.147977,-2.532831,2.350637,-7.504889,-8.183557,6.396442,0.510305,4.193025,-9.197057,-6.482036,5.283365,1.641408,-8.041107,9.370556,6.979736,-9.668355,-4.139950,0.564516,-4.456156,-0.396882,-2.522389,5.975538,-0.140090,-8.566592,-1.251449,1.012163,-4.833050,4.718660,2.696997,-9.704108,1.872208,-2.264942,-0.639320,7.710712,-8.171355,7.353983,1.367377,-1.981241,2.028192,2.317485,4.052264,7.309322,1.939577,-9.914870,-6.640306,1.419760,-6.830866,2.747089,0.518131,2.315223,-6.593732,9.215422,-0.026725,6.484896,-6.739119,0.688195,-7.122481,3.975821,-2.070391,-5.942948,4.883252,-7.402355,-6.484091,-5.941542,-6.701385,5.514435,-2.798665,3.253088,-7.724251,-4.198384,1.413500,-4.615345,-8.902207,4.505055,9.468421,0.531578,1.167575,-0.028953,2.717621,-3.309214,8.138275,-0.152669,-8.072025,-8.173249,1.398876,3.017273,-6.100861,-4.172084,-1.978174,0.261257,5.353721,-3.715457,-1.352153,-1.212600,6.221429,-4.908887,-6.778167,-1.445450,-9.190796,6.088841,1.717224,-9.858076,-4.578149,-4.525431,-5.553040,2.392420,4.158116,-4.945966,-7.797569,8.121464,6.938281,-8.615417,0.101250,-8.816444,3.639665,9.553311,6.643688,3.649575,-9.294408,-4.414088,6.448358,-7.906773,8.083315,6.389237,-1.013656,8.613466,-4.666278,2.048727,-2.135299,6.457037,-3.847453,-2.056570,-9.806145,4.940217,4.235779,5.094150,0.121633,1.172978,-2.630758,0.488206,-2.154228,8.319649,-9.919217,-4.693357,-8.404962,9.820703,-3.044461,-4.968430,6.296275,6.861946,9.123629,4.837882,-4.224486,4.405626,8.596975,2.706076,8.307357,-0.041381,-4.113243,-0.165579,-0.102387,5.131440,0.012881,4.000536,6.075898,-0.396350,3.035150,-0.362020,-3.819360,7.603656,-0.019572,1.811206,1.200462,4.815894,-4.548915,-0.100077,9.330133,8.715219,-5.142119,0.196439,3.600387,-1.231619,-9.531766,1.451557,7.232747,-8.561858,2.145158,5.556164,-2.893160,-1.362945,5.434000,6.685268,-1.910386], dtype = "float64")#candidate|3499|(480,)|const|float64
const_3500 = relay.const([[-4.729202,-6.096879,-0.880770,-2.969237,-9.410613,5.143773,-5.869079,-6.867600,7.621852,-8.844981,-6.966623,-1.036439,-4.827620,5.459034,-3.854198,0.042718,-6.796217,1.408058,1.131435,-4.811845,0.057875,9.116891,6.871080,-6.301717,3.294674,4.049119,-3.332326,-6.005787,2.215895,7.339836,-1.399288,9.330190,1.360208,5.154612,-9.333677,-7.550797,0.850328,3.744017,-7.926320,-1.619070,-5.862014,2.522292,1.871126,-6.691009,7.801663,-3.696404,-0.345157,-7.255970,3.907540,-0.403152,-9.849838,6.261577,-8.820394,-1.344667,-6.421641,-1.442889,-7.933360,3.113990,-2.823925,-9.535723,-5.106895,6.106897,-8.527093,-7.280791,-2.726434,3.579561,6.905823,-7.099398,-6.699287,-0.866748,5.615793,8.504460,-9.124349,8.484164,-1.433435,-0.375955,2.538798,2.528250,-6.844133,6.381609,-1.530998,8.013842,1.467171,-0.641373,-0.087854,-4.874931,9.908802,2.271778,-6.315733,-2.551097,-1.428364,2.695046,9.641240,-6.291763,-6.464327,-7.249563,-9.511254,5.669041,1.550131,1.308058,-3.329850,-9.077126,-2.420630,-8.409756,-6.219297,3.964319,4.187466,-5.093053,-0.059851,-1.977576,-2.617892,0.773729,-1.775636,-1.536969,-9.336832,8.586712,5.143547,3.448070,5.620956,1.639578,-1.556203,8.558857,2.041035,-5.097634,-6.685718,9.374856,8.694269,3.356812,9.575627,-6.901265,-8.371591,-3.791866,1.312796,3.964699,4.308059,-6.132437,9.939910,-4.712533,-3.585297,-2.507829,8.671683,5.872684,2.249801,1.421738,1.191547,-7.594624,2.000225,5.450044,-2.916384,-2.808580,4.976351,-7.713168,-7.399509,-4.783928,3.786938,0.448369,-5.941276,-1.242240,9.994656,-8.771288,1.749062,-1.547008,8.107706,9.414021,-0.402800,-1.472669,-8.075498,4.966004,5.527295,1.079543,-3.169811,6.839406,-0.344932,-3.425519,8.093917,-2.339094,-3.258650,-9.246023,-7.515398,4.807840,5.788072,7.854720,-9.766696,-8.726191,-4.176233,0.635202,-3.919977,4.336449,-0.004413,-3.259914,-2.288068,-6.221691,-5.624388,-6.364487,-2.146775],[6.351757,9.819946,7.783518,6.754150,2.086692,-0.715867,0.076712,-6.850482,0.813168,-1.004645,-7.940835,-4.605896,2.555001,3.821564,1.732616,-7.772418,2.956607,0.862502,2.096669,-8.995424,-9.838786,9.684933,9.181526,-5.804380,-9.728705,2.124516,8.257112,0.750829,-9.796958,2.411209,-8.939699,-8.616296,2.048621,9.560121,8.562088,-0.836199,-8.434252,1.329030,5.428528,-1.413150,-2.309490,-1.806264,8.850786,1.363948,7.166548,1.378256,-6.047820,9.797919,-7.939551,-7.353966,3.701462,2.664827,1.540410,7.701583,8.420365,-2.195582,3.981331,3.037161,2.108256,-5.736884,6.616812,-6.190592,-6.731224,-6.283347,-7.051485,-3.199639,2.754285,0.383799,-2.305388,4.964413,-6.648580,5.318854,-6.114114,-7.532472,4.473750,-2.741817,7.258868,-2.167390,1.849706,-6.449372,-8.558108,4.791841,-2.765148,-3.569305,3.996597,-1.310274,0.656768,-8.817167,7.418743,6.289111,3.280885,5.535125,1.540549,-1.068539,-6.022872,-0.534539,5.140578,-6.378781,3.560920,-4.858725,-5.673441,-8.500960,6.411200,-4.409960,-6.597122,9.305469,5.795710,-7.583613,5.359859,6.601645,9.055629,-1.674152,0.175729,-0.639946,2.342617,-2.497147,-6.243834,3.487941,3.140611,-7.396260,-5.672032,2.470534,-1.231262,-1.893361,2.235926,-5.315475,6.888384,7.659916,0.532788,7.556305,1.325654,4.541579,3.751569,5.383099,-0.021725,-3.158928,5.137128,-8.762012,3.345472,9.234609,5.487428,3.299348,-9.364160,6.344030,-9.700416,-6.812658,-7.536630,6.184478,8.419393,-5.496069,-4.429726,-0.949458,6.236509,-0.170963,6.007712,2.851658,4.753529,0.436174,9.626299,7.473356,-9.589571,0.403040,7.689418,-0.917823,5.894768,-2.537186,5.908987,-1.182825,-8.257961,1.525956,-5.517725,-3.297571,6.806677,-1.869269,-7.812497,-2.375695,7.827952,-6.668782,1.631619,9.928655,8.125030,-2.888797,-9.096502,0.172178,0.229754,-7.225560,0.878292,0.945465,5.034384,-1.873480,-8.171206,-7.621963,-6.800741,-2.935087,2.046578],[7.111717,-7.069776,9.059580,-8.405574,7.829765,2.844444,5.544736,-6.011760,6.246790,-7.545752,9.889742,-9.403280,2.171032,-2.807109,-1.901040,9.131282,4.927309,-3.754657,9.785463,0.967270,-1.138502,-8.955627,-2.165726,8.746939,-2.216988,4.174868,-9.434535,0.759105,-3.333010,2.585297,2.089512,-8.727201,-6.621268,4.572508,8.342821,-6.947783,9.389460,-7.861288,8.958979,6.475465,6.342317,-9.010782,5.152714,5.694029,5.654760,-2.697788,-5.341338,5.726448,7.160097,-9.706528,-9.185465,4.802992,0.743334,5.824726,3.341522,8.309411,9.833749,-9.394639,3.071427,-5.195954,-9.624234,-4.220983,-9.108007,-4.750791,-5.830611,-0.067071,9.836434,9.497920,5.241173,-3.055837,4.370940,-0.671171,6.205564,0.733102,-7.909785,2.929797,4.204049,0.208667,-6.360904,4.534022,-0.297899,2.258280,5.743607,1.600324,7.180682,4.763077,7.893417,8.931877,-6.514262,5.778424,-3.938240,-0.726091,-4.049542,8.672052,1.257049,-3.991043,2.598229,1.169716,-4.170147,8.125381,-3.116154,-2.736141,-8.115294,-2.000211,6.893928,-9.115615,3.782183,2.122120,-6.796871,-3.281804,0.910984,-2.465447,-0.365453,-6.748784,-3.210921,-6.350601,-0.604108,-2.462814,-1.911296,-4.649077,-3.765669,1.669499,7.506592,-4.322000,-3.579568,5.320102,3.709789,-1.289528,9.408919,-9.367203,-5.689138,0.170511,7.965373,-8.311505,-2.809653,0.879704,3.795220,-7.072494,4.693670,-9.890555,8.954541,-6.599436,8.193990,-2.851941,6.112134,-7.122188,1.699796,-1.556643,6.489633,-6.103779,7.421948,9.581155,0.645207,5.383096,-8.044457,-5.075982,2.374045,-8.270706,7.102158,-1.772750,6.812368,-9.794515,-8.699749,6.914902,8.296324,8.918213,-8.697890,2.905138,3.322567,-6.313848,9.476483,2.902561,0.926660,8.708907,6.631444,2.550150,9.843774,8.995873,6.751378,5.970302,0.177218,5.948490,8.202957,0.132124,-8.774723,-7.749317,-0.349710,-5.176425,6.581644,-7.513126,2.630742,0.179969,9.118175,-6.887799,-3.393451],[-8.590623,2.050435,5.301431,-1.886540,4.627125,-0.192491,-6.535462,0.682028,3.501035,9.023757,7.939235,4.896817,3.627810,-0.949158,0.744197,2.234095,-4.885311,-5.532227,-0.680397,-7.999316,0.953940,1.557491,0.863272,-1.645476,-1.733470,-2.321420,9.955784,-6.696500,-0.323074,-7.396540,9.240080,2.707603,-6.406442,0.626423,3.282475,-7.218126,1.196555,-6.592502,3.732058,2.369740,-9.906277,6.250536,7.164833,-4.788442,-9.751228,-3.433931,9.802277,3.919224,9.886194,-6.496014,-0.867755,1.138155,-0.759322,-3.920849,-8.802770,7.292606,1.377898,-3.960162,4.644968,3.105760,-0.449924,2.854921,0.406643,6.089007,-9.491651,9.077654,2.236806,-8.564150,2.424882,8.688248,-6.568221,-6.123891,9.751107,-5.436409,-8.483411,8.210333,8.129131,-9.275296,9.644073,6.919860,8.213931,0.372662,8.974406,-1.310485,-4.135144,8.441918,3.245967,7.166753,-3.297046,6.770595,6.207351,0.045775,9.587172,5.728144,-6.162936,-5.217276,-1.377160,-5.054442,0.135299,-5.499381,-9.838030,-9.986788,1.089966,-1.379123,-9.632969,-2.156292,-8.569269,-0.468673,3.238289,2.928745,2.520258,3.852734,0.666436,6.193786,9.761510,-9.492307,9.003818,3.856086,-0.700951,7.505696,5.690367,-6.422776,7.585553,3.805185,1.164807,-2.314696,6.462896,-7.022617,1.946438,5.320181,8.512231,-1.696016,1.649452,6.717047,-4.377965,-1.209170,0.436456,8.824787,2.690577,7.003649,0.827430,8.652801,-7.492407,5.317933,-3.388442,-2.715845,0.135473,-8.267942,-6.688659,-4.032225,-0.277661,-2.769441,-2.009630,6.156092,-0.347975,-9.503145,-7.129704,-6.459912,6.500962,0.668085,8.539519,6.714705,-6.576351,7.346223,2.856207,5.297032,-3.819071,7.703465,-1.583810,-4.546910,-7.532060,-6.001423,8.532270,3.194242,5.744964,-5.254862,-3.376545,1.489540,4.221123,8.989717,-1.354805,8.530957,-9.195180,1.999439,0.903356,5.566333,-2.522244,-3.720084,9.740425,-1.034234,-3.684314,2.862199,-0.475785,-4.483855,1.130690],[1.449441,-1.980838,-1.060516,0.427438,4.632541,5.869514,-7.716629,9.100221,1.722529,-0.697450,0.120757,-3.445581,4.126184,8.448438,6.349179,2.631418,-4.391415,1.990652,-8.910255,6.753681,7.703185,4.280308,-9.295519,-4.892357,7.188275,-1.461841,-1.872112,4.881409,9.864330,4.192161,8.555439,1.348778,-9.218537,-9.498908,-2.579599,3.095072,-0.683713,3.304015,5.474447,3.889348,7.682277,4.549973,-8.286487,4.559440,8.977771,-7.095721,-4.629493,-8.194103,-0.019543,8.011614,-5.821694,-4.211027,3.488297,-7.712429,-3.222310,7.759246,4.424299,6.550500,9.379584,4.033218,4.220463,7.486949,-1.603387,-3.605828,-0.663482,1.978579,-3.945753,-1.671801,0.833525,-0.286853,-4.910415,0.073144,-0.238043,1.105852,-2.748519,-6.075189,5.012167,9.506744,-1.614599,-4.827961,4.321874,4.356018,-3.942163,-8.290703,-7.657757,5.934610,-2.424482,-8.626909,6.081318,9.616777,1.080471,3.138521,8.530904,-3.214516,-3.952973,5.271402,-2.343057,-6.054515,-3.949921,-4.163086,2.221489,0.370399,9.594865,7.148623,9.006380,-3.253957,-9.436594,3.410368,-8.651659,8.605527,2.559941,-2.789816,-6.006117,-8.230784,4.797780,1.373941,-2.004812,9.531038,3.930509,-7.253561,4.312648,6.270575,-0.807647,5.975498,-9.965753,5.246538,3.100600,1.647799,-2.692119,-2.012742,-7.563350,8.761602,-1.662607,-4.669122,3.115230,8.460433,1.455192,-2.274929,4.632698,-7.851298,4.491924,0.500315,-8.952473,-4.737304,-1.741295,-6.599558,-5.639900,4.928691,-5.598138,-1.474507,-1.871523,-8.400936,-3.189170,1.504716,6.421431,4.285139,-5.128803,1.890001,4.149049,9.939730,5.875035,6.868856,2.665798,-2.687273,-4.360373,1.645104,-1.423154,0.399264,5.433562,0.146191,-5.541485,7.942589,9.498688,3.533523,-4.400118,8.117103,9.222810,0.062295,4.469199,-6.090752,5.753273,4.528179,-8.100606,-3.276085,9.187884,-2.857590,8.894096,-2.406966,-0.960268,9.990093,8.339216,-7.839997,5.296756,5.524927,-6.332288]], dtype = "float32")#candidate|3500|(5, 195)|const|float32
call_3498 = relay.TupleGetItem(func_1621_call(relay.reshape(const_3499.astype('float64'), [16, 5, 6]), relay.reshape(const_3500.astype('float32'), [975,]), ), 0)
call_3501 = relay.TupleGetItem(func_1624_call(relay.reshape(const_3499.astype('float64'), [16, 5, 6]), relay.reshape(const_3500.astype('float32'), [975,]), ), 0)
func_2700_call = mod.get_global_var('func_2700')
func_2701_call = mutated_mod.get_global_var('func_2701')
call_3507 = func_2700_call()
call_3508 = func_2700_call()
func_2325_call = mod.get_global_var('func_2325')
func_2326_call = mutated_mod.get_global_var('func_2326')
call_3512 = relay.TupleGetItem(func_2325_call(), 0)
call_3513 = relay.TupleGetItem(func_2326_call(), 0)
func_2784_call = mod.get_global_var('func_2784')
func_2786_call = mutated_mod.get_global_var('func_2786')
call_3514 = func_2784_call()
call_3515 = func_2784_call()
output = relay.Tuple([call_3492,call_3498,const_3499,const_3500,call_3507,call_3512,call_3514,])
output2 = relay.Tuple([call_3493,call_3501,const_3499,const_3500,call_3508,call_3513,call_3515,])
func_3516 = relay.Function([], output)
mod['func_3516'] = func_3516
mod = relay.transform.InferType()(mod)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3516_call = mutated_mod.get_global_var('func_3516')
call_3517 = func_3516_call()
output = call_3517
func_3518 = relay.Function([], output)
mutated_mod['func_3518'] = func_3518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_779_call = mod.get_global_var('func_779')
func_780_call = mutated_mod.get_global_var('func_780')
call_3545 = func_779_call()
call_3546 = func_779_call()
output = call_3545
output2 = call_3546
func_3583 = relay.Function([], output)
mod['func_3583'] = func_3583
mod = relay.transform.InferType()(mod)
mutated_mod['func_3583'] = func_3583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3583_call = mutated_mod.get_global_var('func_3583')
call_3584 = func_3583_call()
output = call_3584
func_3585 = relay.Function([], output)
mutated_mod['func_3585'] = func_3585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3589 = relay.var("var_3589", dtype = "uint32", shape = (10, 10, 6))#candidate|3589|(10, 10, 6)|var|uint32
const_3590 = relay.const([[[-2,6,7,5,5,1],[-8,9,6,-8,1,6],[4,-2,-10,-10,-5,6],[-8,-3,-3,-7,1,5],[-5,8,2,-9,-10,3],[-3,2,-9,-10,-1,2],[-1,-5,4,-10,4,6],[-3,-2,-7,5,-10,-7],[-5,-8,4,-2,-8,5],[-6,2,2,6,6,-10]],[[-5,-2,-10,-5,-8,3],[2,4,2,-1,-4,-6],[4,4,10,-10,9,-1],[1,-5,-7,-10,6,9],[3,4,-5,-8,4,9],[-5,10,-3,4,5,2],[10,10,-5,-3,1,10],[10,6,-9,8,6,-10],[7,2,3,-3,-7,10],[4,-2,1,-10,7,4]],[[3,-2,8,-7,-5,-6],[-4,-3,5,-4,-9,5],[-8,2,3,3,-6,2],[-6,10,7,-2,-8,-3],[-10,-2,-1,10,4,-7],[6,10,5,-7,-2,-4],[2,1,1,-2,8,2],[3,-1,2,3,-7,1],[6,3,-2,6,-3,5],[-8,8,1,7,2,10]],[[-5,-3,5,-4,-1,-8],[6,-8,-10,4,9,5],[-2,5,-10,7,7,8],[5,4,1,-8,5,-7],[-8,-4,2,7,4,9],[5,9,-7,6,9,7],[-2,-6,-10,4,3,-3],[9,-1,9,9,6,-8],[3,5,5,-1,-7,-4],[9,3,7,-8,-5,1]],[[9,-10,8,-7,5,4],[-6,-7,-1,9,10,-1],[-7,5,-8,-6,6,1],[5,6,4,9,4,-2],[-6,4,-3,3,6,4],[4,-10,-7,6,-10,1],[2,-5,-6,3,10,-10],[-4,2,2,-5,-5,9],[-5,5,9,3,-8,10],[-5,-9,-10,-7,3,6]],[[5,-4,-6,2,9,-1],[3,-2,10,6,4,-10],[4,1,-7,5,-10,-4],[-3,8,-6,-2,10,-2],[5,8,3,8,-5,5],[7,6,8,-2,6,2],[-8,1,-8,10,2,5],[-8,-3,1,7,-7,-5],[-2,-5,-8,2,-9,8],[7,3,6,3,2,-6]],[[-3,2,7,4,-6,-10],[5,-4,5,4,-10,1],[6,9,-9,10,10,-3],[-1,4,7,-6,6,-9],[-2,2,1,-7,7,-4],[2,10,7,-7,-10,6],[7,-10,-3,-3,-1,6],[-10,8,10,-4,5,6],[-7,10,6,-5,-1,-7],[1,7,6,-1,-10,-4]],[[10,-5,-3,-8,-4,8],[-8,4,-7,2,-10,9],[6,-4,2,7,5,-8],[2,9,-6,-7,-1,2],[1,-7,4,-1,-9,-7],[1,2,5,-4,-5,5],[1,8,5,1,5,-1],[7,1,4,-8,1,3],[-9,-3,2,-8,3,7],[5,6,-10,-10,10,3]],[[-9,-1,1,4,-2,6],[8,7,9,9,-3,-5],[5,-8,-7,1,5,6],[-7,-8,1,3,8,-1],[3,3,9,9,-5,9],[1,10,1,2,8,6],[-1,-9,8,-8,-1,1],[10,4,-8,-7,-4,-4],[3,-4,3,-10,-9,-5],[-8,2,-7,1,-10,3]],[[9,-6,7,9,-4,-10],[-3,5,-9,10,5,-7],[4,10,-3,3,-2,-7],[9,-8,-9,1,-1,3],[-9,7,5,-6,2,-5],[8,-8,-7,9,1,8],[-8,-1,7,8,8,-10],[9,-4,-4,5,4,-4],[10,-6,3,-10,-3,1],[-4,-6,4,7,-1,-4]]], dtype = "uint32")#candidate|3590|(10, 10, 6)|const|uint32
bop_3591 = relay.logical_xor(var_3589.astype('uint32'), relay.reshape(const_3590.astype('uint32'), relay.shape_of(var_3589))) # shape=(10, 10, 6)
output = relay.Tuple([bop_3591,])
output2 = relay.Tuple([bop_3591,])
func_3608 = relay.Function([var_3589,], output)
mod['func_3608'] = func_3608
mod = relay.transform.InferType()(mod)
mutated_mod['func_3608'] = func_3608
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3609 = relay.var("var_3609", dtype = "uint32", shape = (10, 10, 6))#candidate|3609|(10, 10, 6)|var|uint32
func_3608_call = mutated_mod.get_global_var('func_3608')
call_3610 = func_3608_call(var_3609)
output = call_3610
func_3611 = relay.Function([var_3609], output)
mutated_mod['func_3611'] = func_3611
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_3709 = func_2211_call()
call_3710 = func_2211_call()
func_525_call = mod.get_global_var('func_525')
func_527_call = mutated_mod.get_global_var('func_527')
var_3718 = relay.var("var_3718", dtype = "float64", shape = (756,))#candidate|3718|(756,)|var|float64
call_3717 = relay.TupleGetItem(func_525_call(relay.reshape(var_3718.astype('float64'), [9, 14, 6])), 0)
call_3719 = relay.TupleGetItem(func_527_call(relay.reshape(var_3718.astype('float64'), [9, 14, 6])), 0)
func_240_call = mod.get_global_var('func_240')
func_242_call = mutated_mod.get_global_var('func_242')
var_3731 = relay.var("var_3731", dtype = "int8", shape = (147,))#candidate|3731|(147,)|var|int8
call_3730 = relay.TupleGetItem(func_240_call(relay.reshape(var_3731.astype('int8'), [7, 7, 3])), 1)
call_3732 = relay.TupleGetItem(func_242_call(relay.reshape(var_3731.astype('int8'), [7, 7, 3])), 1)
uop_3734 = relay.erf(call_3709.astype('float32')) # shape=(1, 9, 4)
uop_3736 = relay.erf(call_3710.astype('float32')) # shape=(1, 9, 4)
func_2642_call = mod.get_global_var('func_2642')
func_2645_call = mutated_mod.get_global_var('func_2645')
var_3742 = relay.var("var_3742", dtype = "float64", shape = (704, 2))#candidate|3742|(704, 2)|var|float64
call_3741 = relay.TupleGetItem(func_2642_call(relay.reshape(var_3742.astype('float64'), [8, 11, 16])), 0)
call_3743 = relay.TupleGetItem(func_2645_call(relay.reshape(var_3742.astype('float64'), [8, 11, 16])), 0)
uop_3752 = relay.log10(uop_3734.astype('float32')) # shape=(1, 9, 4)
uop_3754 = relay.log10(uop_3736.astype('float32')) # shape=(1, 9, 4)
func_2280_call = mod.get_global_var('func_2280')
func_2284_call = mutated_mod.get_global_var('func_2284')
var_3783 = relay.var("var_3783", dtype = "float64", shape = (576,))#candidate|3783|(576,)|var|float64
call_3782 = relay.TupleGetItem(func_2280_call(relay.reshape(var_3783.astype('float64'), [16, 9, 4]), relay.reshape(call_3730.astype('int16'), [6,]), ), 0)
call_3784 = relay.TupleGetItem(func_2284_call(relay.reshape(var_3783.astype('float64'), [16, 9, 4]), relay.reshape(call_3730.astype('int16'), [6,]), ), 0)
func_1389_call = mod.get_global_var('func_1389')
func_1390_call = mutated_mod.get_global_var('func_1390')
call_3798 = relay.TupleGetItem(func_1389_call(), 0)
call_3799 = relay.TupleGetItem(func_1390_call(), 0)
func_931_call = mod.get_global_var('func_931')
func_933_call = mutated_mod.get_global_var('func_933')
call_3806 = relay.TupleGetItem(func_931_call(), 3)
call_3807 = relay.TupleGetItem(func_933_call(), 3)
func_1074_call = mod.get_global_var('func_1074')
func_1075_call = mutated_mod.get_global_var('func_1075')
call_3811 = relay.TupleGetItem(func_1074_call(), 0)
call_3812 = relay.TupleGetItem(func_1075_call(), 0)
func_2919_call = mod.get_global_var('func_2919')
func_2922_call = mutated_mod.get_global_var('func_2922')
var_3825 = relay.var("var_3825", dtype = "float64", shape = (768,))#candidate|3825|(768,)|var|float64
call_3824 = relay.TupleGetItem(func_2919_call(relay.reshape(var_3825.astype('float64'), [16, 3, 16])), 0)
call_3826 = relay.TupleGetItem(func_2922_call(relay.reshape(var_3825.astype('float64'), [16, 3, 16])), 0)
func_352_call = mod.get_global_var('func_352')
func_355_call = mutated_mod.get_global_var('func_355')
const_3828 = relay.const([[6.527267,7.310048,9.037852,6.064346,-2.490862,-2.777306,-1.367028,6.668978,4.253372,-6.206504,-0.401670,-7.207368,-2.543814,-7.590154,-1.862583,9.962494,3.927387,-9.463598,-8.842845,4.289817,6.364219,-7.796879,-3.326164,4.700273,2.777700,6.839766,-8.762143,-3.714421,1.410582,3.054028,-4.485994,-4.323132,2.124231,-4.957568,-1.722116,9.957936,-2.920317,9.855873,1.333981,-4.960348,8.334281,-4.548961,-9.305093,-9.124675,-3.382114,1.611798,-8.898252,-4.880508,2.198830,2.394257,9.637841,9.291825,-8.757851,-8.197448,-3.358637,5.691836,-6.648251,5.493901,-7.714524,-4.298416,-8.698649,-2.867447,4.118006,-1.076604,7.488115,5.022655,-1.049001,-2.408716,2.322313,-2.341221,-6.580093,6.443437,-5.825991,4.239194,-1.506028,6.130737,2.455006,-6.700983,-8.944998,0.545709,-8.098916,-3.990683,-6.328768,-6.064869,3.178004,0.731100,-9.900279,-5.541967,3.064720,1.013476,-4.656928,-1.883590,-7.177293,-3.240453,-7.701126,3.355902,-6.311964,5.551745,-3.746066,7.979689,4.075218,5.193314,9.953971,-3.336465,3.619249,6.581114,-6.827260,-2.356353,-2.154455,9.703467,-9.471181,2.732511,3.138214,0.419005,-9.128674,9.737603,6.021638,8.627711,6.431219,-5.599804,-6.135580,-2.333652,5.870589,4.034047,6.621650,-1.989854,4.959937,5.507821,1.142416,2.071865,0.461466,2.827760,7.599230,2.388683,-1.314545,-8.219241,8.281326,0.356548,0.701061,-8.622106,4.068707,-0.135209,0.479927,4.606930,9.400446,-8.491702,-6.638822,1.745710,7.506624,-9.043235,-8.141425,-0.423656,0.341658,7.632173],[-0.112967,4.940528,-3.194840,2.704980,8.602098,-0.046041,3.631183,7.114774,-6.379880,1.047703,-3.255536,8.294040,-6.749591,-7.177693,4.054567,-7.256647,-0.010790,-1.302518,-5.475469,-0.554773,-5.563883,-2.494971,4.670446,4.685724,-5.043629,3.562203,-7.833550,-5.914551,-3.561892,-1.581882,-7.303787,-5.513745,0.323102,3.537495,-0.389789,0.648667,8.944426,-7.947279,-9.508270,-7.026649,-8.730048,6.882203,1.013714,-7.192524,-2.388204,9.560438,2.395424,8.582739,-6.812053,-0.648777,-6.796364,-7.862387,7.824401,4.038216,-7.938388,6.912658,5.721472,-0.214415,-5.203094,8.844664,2.325903,6.022148,-4.206019,8.386687,1.016893,0.635158,-4.472647,1.721242,-1.431729,1.760610,2.870104,2.962683,0.053328,4.253488,-1.231190,-5.282845,1.366811,9.105839,1.552914,4.569290,-7.141779,-0.507868,-7.343945,5.358275,-9.648042,1.128995,9.738108,0.789053,-0.177395,-9.601375,1.432758,7.078058,-3.924747,-0.426044,5.461117,-9.017046,-0.394931,-5.678769,5.524083,8.876290,-4.762871,6.656662,9.546286,-5.644174,4.476926,5.247219,-9.472836,5.661932,9.418964,-7.812148,6.029868,-6.727478,0.682745,-4.695378,-0.541589,7.992957,1.653905,-8.557940,7.131720,-2.705223,8.234571,5.414748,-0.395028,-1.632460,-2.369488,1.325441,-4.633827,8.761797,-0.668601,-0.673133,3.176854,-2.558614,-0.951123,5.892353,5.722374,-1.732237,3.207477,-7.034975,-0.217026,2.876251,3.270468,4.223908,4.256443,-7.688420,-1.127612,-2.780280,-0.950254,-6.991586,-8.229143,-2.757463,-0.343478,-7.229441,-5.084390,7.061170],[-3.021550,8.160875,7.489218,6.501908,8.571527,8.875838,-2.220939,6.800237,-7.671290,0.632198,7.040773,-6.254296,-2.072045,-5.133495,-0.388115,5.421587,-7.648364,-4.686850,0.411125,-7.162609,6.239604,8.325225,-9.743088,-4.358025,-8.197875,1.392773,6.384018,6.193070,-2.594314,-2.531610,-2.495166,0.504530,-1.338990,-7.921800,2.001381,-5.886043,-4.874182,-3.124157,-1.962776,4.550748,-7.045009,0.682074,8.768535,1.573034,-0.369241,-9.919091,-4.875636,0.207508,9.904225,-1.518346,3.032120,-7.471206,-6.513234,-2.535136,3.910212,-6.258334,-3.578047,-2.295533,-5.271331,2.017567,6.598675,8.151225,-6.428287,1.250882,8.070140,-1.264568,-7.846503,-9.399804,-8.144002,-3.437641,5.441097,9.280280,-7.374091,9.214572,-7.995920,0.780991,-2.763489,9.048309,1.267213,-0.552508,-6.005105,9.198654,8.738326,-2.276352,-6.228185,-8.710319,9.955967,7.430125,8.562570,-4.595196,-2.949119,7.117264,7.227215,9.771250,4.694782,7.465477,-7.272359,0.018703,-5.291589,3.484419,-4.908771,-0.243921,-7.346306,8.357072,-7.138801,3.012738,6.814440,9.285772,7.454099,5.304734,0.935336,-7.735767,-4.158493,2.308443,4.918024,5.458178,-2.966298,7.397420,-2.828330,-3.369876,5.337680,2.292836,5.377450,8.715159,8.875535,7.242695,6.194793,-0.286998,6.618308,-4.107377,0.279097,-8.215606,-7.082910,-8.607418,-9.727667,8.661182,-7.195543,-4.592251,-1.210007,-5.708231,9.432566,-1.766382,3.557153,-5.798684,-3.839742,-8.486606,-2.531178,-9.226380,-2.603133,0.474653,1.950868,-1.190641,5.369145,1.262729],[-4.850710,8.284888,-3.529966,-5.657496,6.521626,-3.942241,-0.497924,1.180452,-6.925939,6.718524,-3.758474,7.349951,0.832103,2.767868,0.676580,-3.397250,-7.151386,9.414094,8.226527,-6.290597,-1.947148,6.486633,4.071768,5.524246,-7.173798,7.689308,-3.391677,-4.156610,-7.027534,-5.959408,7.127307,-0.174680,3.404632,-4.081629,7.461639,4.954738,9.927994,-1.264570,8.574459,-2.319301,-7.422724,-0.573240,0.556554,1.477632,-2.176174,3.993670,-9.813738,2.807329,5.754532,6.085337,-0.974227,-6.350823,6.220165,4.192245,-9.491595,-8.335925,6.047809,4.154951,2.764413,-1.977892,1.876216,2.152450,2.485816,7.280422,-8.426176,-5.997246,0.556722,8.026771,7.960570,8.828392,-0.889077,6.889643,-0.793707,-0.725257,8.019621,9.470519,-7.625659,-5.797825,8.432908,-1.508686,-9.720845,-9.088475,8.266195,-4.603154,-2.196593,5.553489,6.246621,-0.798998,5.695745,-3.978998,-4.657617,7.092948,-6.721998,-9.414465,5.966761,-8.420898,5.823750,3.205486,-8.239543,-7.162490,5.595543,4.167918,-2.156509,-3.525923,9.839722,-4.602057,-7.411667,-3.567806,8.978153,-1.659011,-8.685882,2.908608,-8.779799,-6.740560,-0.368765,7.059691,-4.908008,8.757311,3.508404,2.925476,-0.287645,-2.068972,6.518828,9.093480,5.164937,-3.740626,-8.762534,-6.939975,-6.992659,6.188384,7.293080,6.816230,-8.510959,-7.610571,-7.086266,-9.026440,1.583162,-9.144346,2.034370,8.528556,8.078414,-4.852906,8.911583,-1.078212,-4.262378,9.915488,5.095513,2.046196,1.927469,4.242780,1.609631,-1.097972,-9.924088,-1.782187],[-6.796532,-3.036990,9.726843,-5.789385,8.537805,-0.812004,-1.132314,4.693762,-3.681731,2.129531,-6.730999,-2.927187,-0.997035,-7.033903,8.035085,2.954614,2.732535,6.090811,-6.885254,7.023256,7.694178,3.813532,8.448891,5.619603,-4.720088,8.866933,2.439385,-6.196750,-3.086437,-4.948666,0.312734,-0.158835,7.916864,9.471310,3.323370,-8.021131,7.738698,-1.137220,-8.652340,-6.675863,1.263661,-0.485054,8.457536,-6.880105,1.972510,6.299847,-0.331835,4.653673,-7.651080,-5.631116,-6.757694,-2.581197,-0.140377,-1.748381,-6.731031,3.228932,8.362939,-6.821290,6.220325,-8.214830,8.500737,0.574382,3.093741,7.701084,-5.240425,4.157797,-6.129316,-1.526622,0.120827,-2.328541,9.999358,1.525355,8.666399,-0.963254,-1.582639,3.950667,-0.981810,-9.385211,-1.160784,3.080174,9.530816,9.048981,-4.318307,-4.977676,-6.244225,0.360909,3.879075,-8.246714,-1.980014,4.706089,-4.318824,-9.488020,1.657009,-7.646522,9.241860,-8.866176,2.754046,-3.989182,4.802570,2.690561,4.660547,-1.843413,9.147926,3.095070,9.809281,-1.309434,-0.003115,-5.444938,4.087290,2.073129,6.249578,0.811448,3.200790,-0.887852,4.560550,-2.211468,5.508158,9.496261,-6.356615,-5.063738,4.299374,5.575271,-0.663543,2.349919,-2.357506,-9.468491,0.735992,-4.373346,5.083097,2.166778,-7.738721,-9.826203,-7.782701,-3.938527,-9.976444,-6.721448,-9.888334,8.678006,-0.744571,-6.889632,1.797216,-9.462633,5.920419,9.538265,7.786730,7.866505,1.880745,9.504299,3.074457,-9.682600,5.985965,0.750305,-2.818690,-7.155877],[9.486131,5.131700,5.539700,0.357190,5.387081,3.705281,-1.107723,-1.784731,-0.122748,8.259476,-1.084904,-7.582534,8.829173,5.570271,-5.353048,-4.609838,-4.924057,9.879342,9.606432,-3.633949,0.177007,2.148001,-0.046957,4.646488,-6.488894,-9.937000,-3.364065,-8.086421,-4.339138,4.429556,2.605544,6.093381,-8.052428,0.445578,3.329792,-6.199274,8.825056,-2.029911,1.972726,6.113440,5.958405,-0.067903,-3.151537,0.881270,-7.449542,4.660889,-9.123387,-0.389783,7.696170,-3.654327,3.276204,-8.593992,-9.389494,2.167082,-3.321357,7.523079,-0.125180,-4.383941,-9.112674,-6.466093,-3.170321,-7.921670,-6.701124,9.849841,-5.073471,-0.005187,-4.367150,0.455411,-8.690206,0.037538,4.426592,-7.073199,-6.064749,-5.334783,-5.398687,-4.834909,-0.559792,4.643550,4.230071,0.382215,-9.581134,9.769639,-4.107556,0.178235,2.111632,4.801065,-2.455359,0.658819,-6.040287,8.062554,-8.836149,-0.472094,8.935458,9.915014,-3.970865,-7.514399,-7.889156,-2.186844,-5.464013,3.419656,-2.548066,-4.789960,-7.269228,7.085065,7.720136,1.379016,-4.239230,5.849068,3.056386,-7.762562,1.351320,-7.367043,1.049492,-6.205971,4.783365,3.217879,-0.893120,-4.914649,1.861843,-0.300519,-1.302099,-0.945254,2.811255,-8.197078,-0.894276,-3.202859,-3.687678,-5.038240,3.549731,4.537543,-5.300464,-0.908782,7.861586,-5.615036,6.591938,1.534189,-3.221754,-9.418465,2.351190,9.818420,-3.265897,4.334327,-5.132629,-3.150930,-0.901562,-3.343968,-5.679935,-7.997268,7.558618,9.416456,0.995595,1.101624,-1.754562,7.257640],[-0.862052,-9.608822,-6.449957,3.009829,7.750450,6.290433,-9.830627,-9.294361,-0.535929,-4.763311,8.851173,-2.526632,-4.887315,9.343385,-3.773855,0.206056,7.679411,3.886031,2.125694,-6.862916,-9.459833,4.773833,-9.165946,4.823221,-8.856951,-5.377134,3.910198,-4.823046,-5.735765,4.597538,-3.705615,-5.994844,-1.973040,6.190657,-1.181336,-4.657446,0.198991,3.209685,1.272729,6.922074,-3.009094,-3.287062,-7.528381,-9.686259,-4.051485,1.764720,-3.909528,-6.999735,9.539206,-5.797106,5.498739,-8.092163,-4.296639,-8.276344,3.093037,6.857426,-7.955833,3.849657,-4.985002,8.138577,3.673699,1.541045,-5.132555,-3.293184,-0.962770,-2.629879,9.646788,-6.196053,-5.940001,-7.493570,-5.522702,-7.616455,7.590944,-3.530299,5.040848,-6.346695,-9.870142,-3.725794,4.065586,8.179587,8.492409,4.720992,-5.947688,3.349193,1.297676,-7.924464,1.258780,-5.543981,1.870134,4.698989,-7.136104,2.013492,3.800836,-1.112583,4.525100,-6.801882,1.447204,6.325561,-4.399576,-9.396720,-3.703249,7.928769,9.408296,-5.577140,-1.172628,7.892713,8.995881,-7.983719,-0.605407,5.603048,-9.859563,8.775492,-1.720670,5.682841,1.297322,-6.890913,8.925106,8.663482,2.253403,3.806053,0.825510,-3.219642,1.640608,-9.104616,5.157922,7.158216,0.512356,9.050651,-9.364196,-4.613509,2.867755,3.311169,2.620583,1.219939,0.839758,-3.412005,-5.540892,6.953845,4.110847,4.654426,-7.192721,-7.555056,2.573239,1.788193,6.342011,1.020243,-7.415184,5.140526,-0.401747,-8.419174,2.731626,-1.525961,1.079785,2.370069],[9.302419,-6.787453,-0.106570,-9.750609,-2.447662,2.384545,5.235540,-8.805552,5.538551,8.287739,4.021615,9.809133,4.382339,-3.158495,-5.763013,2.606717,-4.514311,2.688139,9.639333,5.314832,7.525925,4.745000,5.405190,-0.116505,9.452318,-2.873908,2.526883,4.163563,-0.651765,3.820980,2.519705,-1.583486,-4.501689,-2.425749,1.020164,-8.116027,-6.335783,-9.364035,4.666191,3.784148,-1.868023,0.751936,7.701149,-4.085760,-0.826648,-8.372220,7.299187,-7.052581,-0.773817,7.720528,-4.721583,-7.905823,2.403202,-9.930543,2.024798,7.212199,-6.203908,4.621377,5.645379,8.871185,-8.259505,2.641367,-4.621082,9.090113,9.415883,9.547625,-1.761276,-9.824144,-6.551720,9.358225,-6.656919,5.108802,8.359180,5.656672,5.678419,5.369526,-0.962540,6.995680,-8.032122,-6.763840,9.183526,0.089987,4.618951,5.343712,-4.332092,-1.439707,4.381601,4.243818,-4.648818,9.933354,0.046342,3.074016,8.573262,3.408867,-8.632865,9.038833,3.209030,2.209040,0.931693,-5.131384,6.141082,-7.448781,-4.285875,-3.297020,-0.981932,-7.366652,-0.717331,-4.958755,-1.440248,4.457929,2.792939,-2.301718,6.505215,4.541282,-3.665969,-7.462222,-7.958239,-2.588361,7.533924,-2.180361,-3.985722,4.219315,-9.491327,7.572186,7.844212,3.881359,8.898286,0.688194,-9.643617,2.955763,-7.766775,-5.412520,7.279165,-1.512949,7.986237,-0.274348,0.599471,-3.629285,2.236800,5.665079,-6.501175,6.828177,-7.867450,-3.556519,-3.270415,-0.071810,-4.888192,6.748732,1.998763,-3.854701,-1.930577,6.534979,-0.041369,-3.865927]], dtype = "float32")#candidate|3828|(8, 154)|const|float32
call_3827 = func_352_call(relay.reshape(const_3828.astype('float32'), [11, 8, 14]))
call_3829 = func_352_call(relay.reshape(const_3828.astype('float32'), [11, 8, 14]))
func_2395_call = mod.get_global_var('func_2395')
func_2397_call = mutated_mod.get_global_var('func_2397')
var_3838 = relay.var("var_3838", dtype = "float32", shape = (528,))#candidate|3838|(528,)|var|float32
call_3837 = func_2395_call(relay.reshape(var_3838.astype('float32'), [11, 8, 6]))
call_3839 = func_2395_call(relay.reshape(var_3838.astype('float32'), [11, 8, 6]))
func_2001_call = mod.get_global_var('func_2001')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_3840 = func_2001_call()
call_3841 = func_2001_call()
func_2479_call = mod.get_global_var('func_2479')
func_2480_call = mutated_mod.get_global_var('func_2480')
call_3846 = relay.TupleGetItem(func_2479_call(), 0)
call_3847 = relay.TupleGetItem(func_2480_call(), 0)
bop_3850 = relay.power(uop_3752.astype('float32'), relay.reshape(call_3811.astype('float32'), relay.shape_of(uop_3752))) # shape=(1, 9, 4)
bop_3853 = relay.power(uop_3754.astype('float32'), relay.reshape(call_3812.astype('float32'), relay.shape_of(uop_3754))) # shape=(1, 9, 4)
func_2395_call = mod.get_global_var('func_2395')
func_2397_call = mutated_mod.get_global_var('func_2397')
call_3865 = func_2395_call(relay.reshape(call_3837.astype('float32'), [11, 8, 6]))
call_3866 = func_2395_call(relay.reshape(call_3837.astype('float32'), [11, 8, 6]))
output = relay.Tuple([call_3717,var_3718,call_3730,var_3731,call_3741,var_3742,call_3782,var_3783,call_3798,call_3806,call_3824,var_3825,call_3827,const_3828,call_3837,var_3838,call_3840,call_3846,bop_3850,call_3865,])
output2 = relay.Tuple([call_3719,var_3718,call_3732,var_3731,call_3743,var_3742,call_3784,var_3783,call_3799,call_3807,call_3826,var_3825,call_3829,const_3828,call_3839,var_3838,call_3841,call_3847,bop_3853,call_3866,])
func_3868 = relay.Function([var_3718,var_3731,var_3742,var_3783,var_3825,var_3838,], output)
mod['func_3868'] = func_3868
mod = relay.transform.InferType()(mod)
mutated_mod['func_3868'] = func_3868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3868_call = mutated_mod.get_global_var('func_3868')
var_3870 = relay.var("var_3870", dtype = "float64", shape = (756,))#candidate|3870|(756,)|var|float64
var_3871 = relay.var("var_3871", dtype = "int8", shape = (147,))#candidate|3871|(147,)|var|int8
var_3872 = relay.var("var_3872", dtype = "float64", shape = (704, 2))#candidate|3872|(704, 2)|var|float64
var_3873 = relay.var("var_3873", dtype = "float64", shape = (576,))#candidate|3873|(576,)|var|float64
var_3874 = relay.var("var_3874", dtype = "float64", shape = (768,))#candidate|3874|(768,)|var|float64
var_3875 = relay.var("var_3875", dtype = "float32", shape = (528,))#candidate|3875|(528,)|var|float32
call_3869 = func_3868_call(var_3870,var_3871,var_3872,var_3873,var_3874,var_3875,)
output = call_3869
func_3876 = relay.Function([var_3870,var_3871,var_3872,var_3873,var_3874,var_3875,], output)
mutated_mod['func_3876'] = func_3876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1360_call = mod.get_global_var('func_1360')
func_1362_call = mutated_mod.get_global_var('func_1362')
call_3880 = relay.TupleGetItem(func_1360_call(), 0)
call_3881 = relay.TupleGetItem(func_1362_call(), 0)
output = relay.Tuple([call_3880,])
output2 = relay.Tuple([call_3881,])
func_3893 = relay.Function([], output)
mod['func_3893'] = func_3893
mod = relay.transform.InferType()(mod)
mutated_mod['func_3893'] = func_3893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3893_call = mutated_mod.get_global_var('func_3893')
call_3894 = func_3893_call()
output = call_3894
func_3895 = relay.Function([], output)
mutated_mod['func_3895'] = func_3895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1822_call = mod.get_global_var('func_1822')
func_1823_call = mutated_mod.get_global_var('func_1823')
call_3898 = relay.TupleGetItem(func_1822_call(), 2)
call_3899 = relay.TupleGetItem(func_1823_call(), 2)
output = call_3898
output2 = call_3899
func_3905 = relay.Function([], output)
mod['func_3905'] = func_3905
mod = relay.transform.InferType()(mod)
output = func_3905()
func_3906 = relay.Function([], output)
mutated_mod['func_3906'] = func_3906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3893_call = mod.get_global_var('func_3893')
func_3895_call = mutated_mod.get_global_var('func_3895')
call_3922 = relay.TupleGetItem(func_3893_call(), 0)
call_3923 = relay.TupleGetItem(func_3895_call(), 0)
output = relay.Tuple([call_3922,])
output2 = relay.Tuple([call_3923,])
func_3932 = relay.Function([], output)
mod['func_3932'] = func_3932
mod = relay.transform.InferType()(mod)
output = func_3932()
func_3933 = relay.Function([], output)
mutated_mod['func_3933'] = func_3933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2409_call = mod.get_global_var('func_2409')
func_2411_call = mutated_mod.get_global_var('func_2411')
call_3944 = func_2409_call()
call_3945 = func_2409_call()
output = relay.Tuple([call_3944,])
output2 = relay.Tuple([call_3945,])
func_3982 = relay.Function([], output)
mod['func_3982'] = func_3982
mod = relay.transform.InferType()(mod)
output = func_3982()
func_3983 = relay.Function([], output)
mutated_mod['func_3983'] = func_3983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2784_call = mod.get_global_var('func_2784')
func_2786_call = mutated_mod.get_global_var('func_2786')
call_3984 = func_2784_call()
call_3985 = func_2784_call()
func_1531_call = mod.get_global_var('func_1531')
func_1533_call = mutated_mod.get_global_var('func_1533')
call_4016 = relay.TupleGetItem(func_1531_call(), 0)
call_4017 = relay.TupleGetItem(func_1533_call(), 0)
output = relay.Tuple([call_3984,call_4016,])
output2 = relay.Tuple([call_3985,call_4017,])
func_4028 = relay.Function([], output)
mod['func_4028'] = func_4028
mod = relay.transform.InferType()(mod)
mutated_mod['func_4028'] = func_4028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4028_call = mutated_mod.get_global_var('func_4028')
call_4029 = func_4028_call()
output = call_4029
func_4030 = relay.Function([], output)
mutated_mod['func_4030'] = func_4030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2700_call = mod.get_global_var('func_2700')
func_2701_call = mutated_mod.get_global_var('func_2701')
call_4056 = func_2700_call()
call_4057 = func_2700_call()
output = call_4056
output2 = call_4057
func_4070 = relay.Function([], output)
mod['func_4070'] = func_4070
mod = relay.transform.InferType()(mod)
mutated_mod['func_4070'] = func_4070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4070_call = mutated_mod.get_global_var('func_4070')
call_4071 = func_4070_call()
output = call_4071
func_4072 = relay.Function([], output)
mutated_mod['func_4072'] = func_4072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2700_call = mod.get_global_var('func_2700')
func_2701_call = mutated_mod.get_global_var('func_2701')
call_4202 = func_2700_call()
call_4203 = func_2700_call()
func_3893_call = mod.get_global_var('func_3893')
func_3895_call = mutated_mod.get_global_var('func_3895')
call_4217 = relay.TupleGetItem(func_3893_call(), 0)
call_4218 = relay.TupleGetItem(func_3895_call(), 0)
func_1313_call = mod.get_global_var('func_1313')
func_1314_call = mutated_mod.get_global_var('func_1314')
call_4223 = relay.TupleGetItem(func_1313_call(), 0)
call_4224 = relay.TupleGetItem(func_1314_call(), 0)
func_1389_call = mod.get_global_var('func_1389')
func_1390_call = mutated_mod.get_global_var('func_1390')
call_4225 = relay.TupleGetItem(func_1389_call(), 0)
call_4226 = relay.TupleGetItem(func_1390_call(), 0)
var_4230 = relay.var("var_4230", dtype = "float64", shape = (3, 9, 4))#candidate|4230|(3, 9, 4)|var|float64
bop_4231 = relay.floor_mod(call_4225.astype('float32'), var_4230.astype('float32')) # shape=(3, 9, 4)
bop_4234 = relay.floor_mod(call_4226.astype('float32'), var_4230.astype('float32')) # shape=(3, 9, 4)
func_3516_call = mod.get_global_var('func_3516')
func_3518_call = mutated_mod.get_global_var('func_3518')
call_4243 = relay.TupleGetItem(func_3516_call(), 5)
call_4244 = relay.TupleGetItem(func_3518_call(), 5)
var_4261 = relay.var("var_4261", dtype = "float32", shape = (3, 9, 4))#candidate|4261|(3, 9, 4)|var|float32
bop_4262 = relay.less(call_4243.astype('bool'), var_4261.astype('bool')) # shape=(3, 9, 4)
bop_4265 = relay.less(call_4244.astype('bool'), var_4261.astype('bool')) # shape=(3, 9, 4)
func_1698_call = mod.get_global_var('func_1698')
func_1702_call = mutated_mod.get_global_var('func_1702')
var_4286 = relay.var("var_4286", dtype = "float64", shape = (168,))#candidate|4286|(168,)|var|float64
var_4287 = relay.var("var_4287", dtype = "float64", shape = (480,))#candidate|4287|(480,)|var|float64
const_4288 = relay.const([9.015631,-1.690469,-7.253183,8.725583,-6.803538,-7.971616,-7.799841,-5.024146,-3.798054,7.520631,-3.006496,-8.149809,0.164683,-4.987585,4.486092,8.769806,2.683430,5.624452,7.062578,-0.613212,6.821462,8.590282,-8.861425,5.252890,-9.140208,-5.896745,-1.242365,-2.930255,-8.146907,-5.254676,-1.597574,-6.690919,4.929463,-3.558940,-2.615179,-4.929916,3.087901,3.170188,8.704702,-6.526011,9.309532,0.678056,3.016513,-7.387962,-9.734651,-5.118701,-8.666276,-9.865735,-2.480862,-5.419561,-2.319916,-1.080739,5.545100,0.769005,9.104031,-5.674175,-4.704326,-7.147690,2.398745,0.839327,8.543073,1.620291,7.441350,-2.264375,-9.385867,-4.502802,7.954866,-3.448122,7.230603,-5.427970,5.536265,3.057077,-9.791471,5.530244,-4.457342,2.373992,-9.240833,2.964447,-8.739402,-9.357154,8.851258,5.755382,1.264316,1.807571,-0.069564,2.577694,-2.751867,4.421897,-4.216382,8.377489,-7.914241,3.555126,0.080833,-5.453641,-4.351674,-7.414166,6.386619,-7.347119,1.075529,6.911950,4.546687,6.051897,-6.014071,-7.942025,8.106415,0.032771,-9.518439,8.421513,-3.653853,-9.271147,-7.083673,-9.433987,-5.707063,-6.342318,-3.544320,9.175362,7.058432,0.868683,-1.809348,-9.537751,8.707445,9.225192,-0.703362,2.494802,-8.161147,6.704215,-2.127436,-9.821345,2.310505,-3.110322,7.718386,0.312355,-7.256877,-8.378579,2.727789,4.226100,-2.781487,-7.079472,6.975209,0.620735,2.064941,-3.182529,-9.405864,7.499209,8.098495,1.017037,9.457075,7.808784,-4.659092,-5.609895,1.110884,-1.887224,-6.539294,-5.274387,6.964665,5.733496,5.808650,-0.914161,5.369474,2.640762,-5.261164,2.097306,9.188134,9.963686,-0.191487,2.699408,1.469636,2.003767,2.427435,5.651821,-2.068342,4.289625,-9.713310,9.721503,5.787897,6.709397,-1.993685,-6.999094,7.826738,8.703970,5.013516,9.067054,-2.111497,3.919769,6.245754,-3.610058,7.111040,4.711632,-9.659598,8.792546,0.159962,5.058870,0.095213,9.528065,5.927721,-5.527182,-2.704020,-5.124340,4.081371,-1.433896,-7.460728,-5.888039,-0.220213,-7.850142,-8.430165,6.756485,-1.868374,8.018280,-3.533638,-3.362619,1.901236,-7.560703,2.443991,2.309692,-7.989809,1.935132,-9.214210,1.103972,9.556931,7.479234,6.053257,1.683122,9.015195,-7.381660,9.718307,-0.705995,9.385191,-0.755138,5.455603,2.528149,6.634730,-8.675381,-9.812415,0.131750,0.370230,-0.887372,4.531683,-0.181267,-4.450710,-9.180952,-8.255004,7.510146,4.212755,-5.602818,6.369355,3.148776,-5.480035,-5.509075,6.566871,-0.838496,7.436401,4.789348,-1.742647,7.494810,-5.604812,-6.839306,-2.682796,6.741870,-6.328445,-7.102164,8.045727,-5.661863,-5.286672,1.315226,-4.674795,-7.865127,-7.435555,-6.646507,-3.512568,2.638613,9.462107,1.357152,1.851569,-9.689832,-6.413280,7.188499,-4.689956,0.943859,9.861931,-4.390836,-6.620259,6.681314,-4.676196,7.747263,3.975217,-2.943229,-7.390009,3.200455,-6.228450,0.321225,-6.413873,-2.752894,5.051521,0.057311,-7.492118,-0.166460,1.356072,8.215510,-1.937144,-6.833560,-9.958926,-7.877903,-2.006675,-7.825858,4.754336,8.091047,4.616877,-5.971109,7.662620,6.520193,4.638276,-8.789677,5.092822,1.261290,-4.409278,2.905994,-6.993856,9.208856,2.802017,4.012379,-5.640483,2.106923,-2.425648,-4.920875,7.487713,-2.534764,8.120915,8.371291,-3.497836,-7.338789,-8.337385,6.286037,-0.378783,7.438700,8.105756,-8.087105,9.403150,5.113662,-7.094496,6.990518,9.279647,-3.001656,-2.044515,3.109048,-8.716634,1.431315,4.275737,9.675919,-2.882306,-0.081928,8.547238,9.876346,-8.354387,0.660529,-3.305154,-3.629346,-3.340472,-0.711057,4.147020,3.711288,-0.772858,-3.061648,-5.761435,6.989488,8.017483,-2.136837,-9.967657,7.848187,-1.019468,3.157735,-0.644472,-4.116028,5.928115,9.157489,-6.536528,-7.080665,-6.776160,-9.106618,9.102759,0.886514,8.779274,4.230296,3.209025,-4.096593,3.914652,-1.088901,-3.997769,-4.855318,7.269000,-5.035607,0.085026,-2.351097,4.220182,-4.560863,-2.091453,7.992250,3.720227,-6.394953,-5.535266,-9.559995,-5.359965,3.277756,6.264400,-1.866613,6.337551,-3.713475,-6.386271,-7.138626,5.354992,-3.584613,-0.267830,-5.231212,-9.568793,-8.606158,1.121232,5.117309,4.847632,-5.686234,-6.409917,-8.889006,0.633432,-3.927284,6.553824,-2.195741,5.067771,1.565990,-1.741873,7.553884,-8.988944,3.185437,-9.818169,6.070576,3.021657,-5.723554,2.117499,-6.443151,2.996923,-1.369334,4.473290,-3.019519,5.245531,9.529205,7.499332,-4.526997,-4.605892,3.109641,-6.639029,8.514845,3.245772,-7.567899,-8.289107,5.695749,1.031133,-7.243486,-9.309839,-2.064513,-8.930283,-5.223101,-1.108737,0.185219,-9.397038,-7.356148,-8.604350,0.038412,0.234850,-9.465685,-8.437530,-2.275947,7.942773,-1.921862,7.075859,1.010649,-2.309005,2.346562,-0.782624,-1.909443,5.244939,-0.832383,-6.408997,2.982820,2.186506,0.281156,-7.440108,3.208460,-9.593048,8.307383,-4.189016,-0.504312,-6.082861,-9.984386,-2.068298,-0.333722,8.400490,0.246902,-1.987643,9.440140,-6.465692,9.915655,-1.019034,-5.200303,-5.121571,-1.716202,-7.731368,-3.598637,-0.347026,-6.054833,1.360069,6.895244,4.668933,-5.870503,4.004571,3.429904,-3.025696,-9.183676,1.924123,8.710774,9.718106,3.858129,-0.972413,-0.648192,-1.795093,-8.255880,0.719458,-5.715860,-3.762361,-8.010951,-5.268261,-2.179074,-4.340902,-2.004771,0.187687,-4.887632,1.434745,8.980174,6.996156,6.435779,-5.779916,1.959730,1.110633,-5.530460,-3.434831,8.197958,-9.380529,7.682005,4.091152,-1.639977,8.811589,5.969342,-3.672311,7.558587,-2.529771,0.056278,-9.702695,8.002764,-6.519634,9.138790,-3.698079,-2.208188,-8.911698,-7.345164,0.771159,0.058539,5.830303,6.053143,5.832088,1.823183,7.085186,-0.194959,3.366607,0.884948,6.897909,-5.236341,-8.557897,-5.324007,-9.088921,-1.882242,0.416380,-8.318907,-7.219757,6.220558,-3.356610,4.022681,1.154734,3.654339,9.561356,0.798665,-3.317835,9.780400,-5.412105,2.409564,-7.124594,-3.177887,3.702257,-2.281690,-8.241934,4.039652,-0.592675,9.946900,-6.274996,-9.543296,4.829147,-7.510061,9.134329,-7.389192,2.594322,-0.843592,1.887544,-3.700070,5.207474,-2.764276,-5.020885,7.154128,3.474843,-9.408045,5.059706,5.511264,-2.259095,-3.280730,4.684390,7.356957,9.591652,-8.801612,-0.438108,7.842834,5.211012,-6.858480,-3.582186,-3.100863,-1.811362,5.836478,3.495620,-8.224929,9.976859,3.709381,-9.775657,5.240904,-6.831255,-1.966449,-2.781702,7.314028,-5.770775,4.016129,4.734336,-1.496658,9.628044,6.484123,-7.610411,-2.715381,8.526173,7.584510,5.005949,8.818988,-2.860469,-7.014879,7.712603,2.035855,2.138287,-7.560140,-7.820675,-0.314969,9.482816,3.368130,-1.607479,6.160155,7.776373,0.618855,2.214759,0.285461,-4.154360,5.323756,8.287079,8.225009,2.000096,6.849662,-1.325827,6.394347,7.126329,-2.749197,5.846755,6.118292,-3.248986,2.474489,2.161806,7.524355,-5.495417,-0.557771,0.956602,1.813557,7.961734,4.504968,-7.359049,9.293449,5.040068,6.585515,4.983759,8.771498,0.247566,-6.137514,5.300858,2.774818,-3.011780,2.092781,4.232778,-9.147446,6.829215,0.176574,9.858586,-3.031306,-8.794021,0.653384,-0.801621,2.691477,1.833638,6.015435,5.861910,-5.860855,-2.573601,-5.051241,-6.264760,-9.564107,-0.781740,-4.068116,2.652470,-8.656460,-2.486218,9.218590,-5.380367,6.800742,-7.611871,0.957184,1.113220,5.295858,0.647655,9.061238,7.350516,-5.092104,3.636264,7.562064,2.312317,-4.859088,2.593738,-9.066057,-3.437776,2.751528,-2.755928,1.103403,-8.967806,3.555153,-2.319680,-4.296765,5.703640,7.347070,3.648425,8.983878,-4.020954,-8.724400,7.797397,0.728254,-2.975802,6.985766,1.082933,-1.316958,2.946116,-5.473288,7.945824,5.904443,2.791868,1.597501,1.188375,1.113374,1.458182,2.575604,-9.539629,-9.948189,8.362921,-2.899998,-9.786490,9.709225,-2.017755,0.107944,-4.911389,-4.969831,2.615571,-6.560568,-3.488344,-6.760818,7.930636,0.887671,2.810900,6.387720,7.189858,6.753883,-8.993039,1.022882,-3.325184,-0.041990,-0.239831,-8.246103,7.644428,-0.015287,-7.719123,7.805631,1.822633,-1.987230,-1.330737,3.318030,3.528494,-5.854757,7.262120,-6.925229,-6.412787,-3.229713,-8.403382,0.966515,2.063525,7.275446,-0.217321,-6.384714,2.893576,-8.284913,-1.304629,3.924734,8.923967,2.839211,-2.252229,-7.012518,3.552965,6.557603,-4.210213,7.140286,-8.912715,1.073759,0.426265,-3.136493,-6.878374,-9.590274,3.366904,-0.942268,4.237658,0.778829,-2.645043,5.816162,9.379052,8.449362,2.503213,0.642349,3.966250,-4.325173,-9.781654,-0.227115,-0.339471,4.350605,-3.373132,-9.738372,-6.778303,3.808604,5.202676,-7.815939,6.045261,-9.778369,-9.777812,3.242169,7.270357,-6.738075,-4.200029,-8.137524,9.684986,-5.131974,-7.487247,-8.261371,3.408683,7.326300,-4.112964,8.174217,7.937317,-8.582089,0.515493,7.052201,6.692145,7.021933,-9.648610,-5.766804,7.699426,-8.825441,1.909180,-5.282928,-1.564884,-0.855510,7.874438,2.977195,5.818431,-4.831457,8.839914,2.202308,9.722674,-2.852983,4.127858,-0.042284,-9.667122,-1.613421,1.001318,-9.461861,-3.498855,-4.131732,-8.728480,-2.181438,7.297099,-1.736798,-4.136322,1.272886,-5.354525,-3.961338,4.213765,8.147287,1.753449,5.453168,-7.289881,-8.699529,-1.617567,2.560052,-3.308556,6.587991,-2.605432,-1.467901,3.019138,9.547570,-5.011237,9.816658,-5.621178,3.216725,-7.372035,-2.070439,-8.708299,6.842877,3.832483,3.180595,-6.659518,2.775108,-1.303496,-9.808383,3.090590,-7.325126,5.596034,0.265463,-5.148977,6.995952,-9.704179,5.179590,-8.914501,1.186969,6.715246,-6.483281,6.019811,4.570656,6.723470,-5.655239,5.689583,-0.524820,-2.450454,-7.204243,-3.604631,-1.744576,1.194754,0.271830,-6.984765,8.063551,1.785252,-8.362160,7.752344,3.587913,0.699213,4.700821,-7.554437,0.440588,-1.691985], dtype = "float32")#candidate|4288|(975,)|const|float32
call_4285 = relay.TupleGetItem(func_1698_call(relay.reshape(var_4286.astype('float64'), [8, 3, 7]), relay.reshape(var_4287.astype('float64'), [480,]), relay.reshape(const_4288.astype('float32'), [975,]), ), 1)
call_4289 = relay.TupleGetItem(func_1702_call(relay.reshape(var_4286.astype('float64'), [8, 3, 7]), relay.reshape(var_4287.astype('float64'), [480,]), relay.reshape(const_4288.astype('float32'), [975,]), ), 1)
output = relay.Tuple([call_4202,call_4217,call_4223,bop_4231,bop_4262,call_4285,var_4286,var_4287,const_4288,])
output2 = relay.Tuple([call_4203,call_4218,call_4224,bop_4234,bop_4265,call_4289,var_4286,var_4287,const_4288,])
func_4302 = relay.Function([var_4230,var_4261,var_4286,var_4287,], output)
mod['func_4302'] = func_4302
mod = relay.transform.InferType()(mod)
mutated_mod['func_4302'] = func_4302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4302_call = mutated_mod.get_global_var('func_4302')
var_4304 = relay.var("var_4304", dtype = "float64", shape = (3, 9, 4))#candidate|4304|(3, 9, 4)|var|float64
var_4305 = relay.var("var_4305", dtype = "float32", shape = (3, 9, 4))#candidate|4305|(3, 9, 4)|var|float32
var_4306 = relay.var("var_4306", dtype = "float64", shape = (168,))#candidate|4306|(168,)|var|float64
var_4307 = relay.var("var_4307", dtype = "float64", shape = (480,))#candidate|4307|(480,)|var|float64
call_4303 = func_4302_call(var_4304,var_4305,var_4306,var_4307,)
output = call_4303
func_4308 = relay.Function([var_4304,var_4305,var_4306,var_4307,], output)
mutated_mod['func_4308'] = func_4308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3583_call = mod.get_global_var('func_3583')
func_3585_call = mutated_mod.get_global_var('func_3585')
call_4319 = func_3583_call()
call_4320 = func_3583_call()
output = relay.Tuple([call_4319,])
output2 = relay.Tuple([call_4320,])
func_4323 = relay.Function([], output)
mod['func_4323'] = func_4323
mod = relay.transform.InferType()(mod)
output = func_4323()
func_4324 = relay.Function([], output)
mutated_mod['func_4324'] = func_4324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_4379 = relay.TupleGetItem(func_1902_call(), 0)
call_4380 = relay.TupleGetItem(func_1903_call(), 0)
var_4386 = relay.var("var_4386", dtype = "int32", shape = (9, 9, 4))#candidate|4386|(9, 9, 4)|var|int32
bop_4387 = relay.maximum(call_4379.astype('uint64'), var_4386.astype('uint64')) # shape=(9, 9, 4)
bop_4390 = relay.maximum(call_4380.astype('uint64'), var_4386.astype('uint64')) # shape=(9, 9, 4)
func_2784_call = mod.get_global_var('func_2784')
func_2786_call = mutated_mod.get_global_var('func_2786')
call_4404 = func_2784_call()
call_4405 = func_2784_call()
func_857_call = mod.get_global_var('func_857')
func_858_call = mutated_mod.get_global_var('func_858')
call_4409 = relay.TupleGetItem(func_857_call(), 1)
call_4410 = relay.TupleGetItem(func_858_call(), 1)
output = relay.Tuple([bop_4387,call_4404,call_4409,])
output2 = relay.Tuple([bop_4390,call_4405,call_4410,])
func_4420 = relay.Function([var_4386,], output)
mod['func_4420'] = func_4420
mod = relay.transform.InferType()(mod)
var_4421 = relay.var("var_4421", dtype = "int32", shape = (9, 9, 4))#candidate|4421|(9, 9, 4)|var|int32
output = func_4420(var_4421)
func_4422 = relay.Function([var_4421], output)
mutated_mod['func_4422'] = func_4422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_4428 = relay.TupleGetItem(func_1902_call(), 0)
call_4429 = relay.TupleGetItem(func_1903_call(), 0)
output = call_4428
output2 = call_4429
func_4432 = relay.Function([], output)
mod['func_4432'] = func_4432
mod = relay.transform.InferType()(mod)
output = func_4432()
func_4433 = relay.Function([], output)
mutated_mod['func_4433'] = func_4433
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4483 = relay.var("var_4483", dtype = "int32", shape = (12, 15, 2))#candidate|4483|(12, 15, 2)|var|int32
const_4484 = relay.const([[[-9,-9],[7,4],[-4,9],[-4,-8],[-8,-7],[10,9],[3,10],[10,-7],[4,-9],[-1,-2],[-4,8],[6,9],[6,10],[6,-4],[1,-6]],[[-9,9],[10,-4],[-9,-7],[-9,-10],[-10,8],[-3,-1],[-8,-7],[-9,9],[9,-3],[3,1],[6,-4],[-2,10],[3,9],[6,4],[-5,4]],[[-7,5],[-2,4],[-6,9],[4,6],[8,-1],[4,7],[-10,-6],[6,-2],[-3,-9],[-5,-10],[2,4],[-5,-6],[-8,3],[5,-4],[5,-3]],[[-7,3],[1,-7],[-7,-9],[8,-6],[6,5],[-7,8],[2,-10],[-9,7],[-7,8],[-4,-6],[1,1],[9,-10],[9,8],[6,1],[-5,5]],[[3,2],[2,-10],[4,-7],[-9,2],[-8,-2],[-2,3],[4,7],[5,5],[-4,8],[6,2],[5,-3],[-10,2],[-1,-2],[-5,-10],[1,10]],[[9,-3],[-2,-9],[-10,6],[-10,10],[6,-7],[8,-10],[6,-4],[7,-2],[7,9],[8,-8],[1,-4],[3,-3],[7,7],[-1,10],[5,4]],[[-6,-10],[4,4],[9,10],[6,-3],[7,-9],[5,-2],[1,4],[4,9],[8,4],[-3,4],[8,4],[-8,-2],[-2,-1],[-9,3],[-3,-7]],[[7,-8],[7,7],[-8,-2],[6,2],[-2,1],[7,10],[5,5],[2,-8],[8,-6],[-5,7],[-3,-2],[4,3],[8,1],[-7,3],[-6,-3]],[[-10,9],[-6,5],[5,7],[-2,9],[4,-3],[9,10],[-4,-10],[-9,9],[6,7],[3,5],[5,-8],[-2,-2],[-10,-9],[-8,-4],[1,-1]],[[1,-10],[-9,10],[1,10],[9,3],[-4,10],[-10,2],[9,8],[-2,-10],[2,9],[-9,1],[-4,5],[8,7],[-3,-5],[-5,10],[-3,-3]],[[1,7],[3,5],[4,-1],[-7,-2],[-4,-7],[5,3],[9,5],[4,-6],[-3,-10],[-10,8],[3,2],[6,4],[-4,-9],[3,10],[-5,-3]],[[-5,8],[3,-4],[-7,6],[-2,1],[-4,-7],[6,-7],[10,-10],[-6,-8],[1,1],[-5,6],[7,-1],[10,-4],[7,-1],[1,-3],[-9,8]]], dtype = "int32")#candidate|4484|(12, 15, 2)|const|int32
bop_4485 = relay.greater_equal(var_4483.astype('bool'), relay.reshape(const_4484.astype('bool'), relay.shape_of(var_4483))) # shape=(12, 15, 2)
var_4490 = relay.var("var_4490", dtype = "int32", shape = (12, 15, 2))#candidate|4490|(12, 15, 2)|var|int32
bop_4491 = relay.not_equal(const_4484.astype('bool'), relay.reshape(var_4490.astype('bool'), relay.shape_of(const_4484))) # shape=(12, 15, 2)
output = relay.Tuple([bop_4485,bop_4491,])
output2 = relay.Tuple([bop_4485,bop_4491,])
func_4494 = relay.Function([var_4483,var_4490,], output)
mod['func_4494'] = func_4494
mod = relay.transform.InferType()(mod)
var_4495 = relay.var("var_4495", dtype = "int32", shape = (12, 15, 2))#candidate|4495|(12, 15, 2)|var|int32
var_4496 = relay.var("var_4496", dtype = "int32", shape = (12, 15, 2))#candidate|4496|(12, 15, 2)|var|int32
output = func_4494(var_4495,var_4496,)
func_4497 = relay.Function([var_4495,var_4496,], output)
mutated_mod['func_4497'] = func_4497
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4499 = relay.var("var_4499", dtype = "float64", shape = (3, 4, 3))#candidate|4499|(3, 4, 3)|var|float64
uop_4500 = relay.log(var_4499.astype('float64')) # shape=(3, 4, 3)
var_4513 = relay.var("var_4513", dtype = "float64", shape = (3, 4, 3))#candidate|4513|(3, 4, 3)|var|float64
bop_4514 = relay.greater_equal(uop_4500.astype('bool'), relay.reshape(var_4513.astype('bool'), relay.shape_of(uop_4500))) # shape=(3, 4, 3)
output = relay.Tuple([bop_4514,])
output2 = relay.Tuple([bop_4514,])
func_4525 = relay.Function([var_4499,var_4513,], output)
mod['func_4525'] = func_4525
mod = relay.transform.InferType()(mod)
var_4526 = relay.var("var_4526", dtype = "float64", shape = (3, 4, 3))#candidate|4526|(3, 4, 3)|var|float64
var_4527 = relay.var("var_4527", dtype = "float64", shape = (3, 4, 3))#candidate|4527|(3, 4, 3)|var|float64
output = func_4525(var_4526,var_4527,)
func_4528 = relay.Function([var_4526,var_4527,], output)
mutated_mod['func_4528'] = func_4528
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4553 = relay.var("var_4553", dtype = "int64", shape = ())#candidate|4553|()|var|int64
var_4554 = relay.var("var_4554", dtype = "int64", shape = (7, 15, 10))#candidate|4554|(7, 15, 10)|var|int64
bop_4555 = relay.less(var_4553.astype('bool'), var_4554.astype('bool')) # shape=(7, 15, 10)
output = bop_4555
output2 = bop_4555
func_4559 = relay.Function([var_4553,var_4554,], output)
mod['func_4559'] = func_4559
mod = relay.transform.InferType()(mod)
mutated_mod['func_4559'] = func_4559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4559_call = mutated_mod.get_global_var('func_4559')
var_4561 = relay.var("var_4561", dtype = "int64", shape = ())#candidate|4561|()|var|int64
var_4562 = relay.var("var_4562", dtype = "int64", shape = (7, 15, 10))#candidate|4562|(7, 15, 10)|var|int64
call_4560 = func_4559_call(var_4561,var_4562,)
output = call_4560
func_4563 = relay.Function([var_4561,var_4562,], output)
mutated_mod['func_4563'] = func_4563
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3198_call = mod.get_global_var('func_3198')
func_3199_call = mutated_mod.get_global_var('func_3199')
call_4604 = relay.TupleGetItem(func_3198_call(), 3)
call_4605 = relay.TupleGetItem(func_3199_call(), 3)
output = relay.Tuple([call_4604,])
output2 = relay.Tuple([call_4605,])
func_4643 = relay.Function([], output)
mod['func_4643'] = func_4643
mod = relay.transform.InferType()(mod)
output = func_4643()
func_4644 = relay.Function([], output)
mutated_mod['func_4644'] = func_4644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2700_call = mod.get_global_var('func_2700')
func_2701_call = mutated_mod.get_global_var('func_2701')
call_4648 = func_2700_call()
call_4649 = func_2700_call()
func_2073_call = mod.get_global_var('func_2073')
func_2074_call = mutated_mod.get_global_var('func_2074')
call_4651 = relay.TupleGetItem(func_2073_call(), 1)
call_4652 = relay.TupleGetItem(func_2074_call(), 1)
func_3198_call = mod.get_global_var('func_3198')
func_3199_call = mutated_mod.get_global_var('func_3199')
call_4659 = relay.TupleGetItem(func_3198_call(), 1)
call_4660 = relay.TupleGetItem(func_3199_call(), 1)
output = relay.Tuple([call_4648,call_4651,call_4659,])
output2 = relay.Tuple([call_4649,call_4652,call_4660,])
func_4666 = relay.Function([], output)
mod['func_4666'] = func_4666
mod = relay.transform.InferType()(mod)
output = func_4666()
func_4667 = relay.Function([], output)
mutated_mod['func_4667'] = func_4667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_4690 = func_2211_call()
call_4691 = func_2211_call()
func_3608_call = mod.get_global_var('func_3608')
func_3611_call = mutated_mod.get_global_var('func_3611')
const_4705 = relay.const([6,-10,1,-4,4,-8,-1,1,1,8,-7,6,5,-10,8,10,7,-5,-4,1,-5,2,-7,-9,3,6,-4,-3,4,3,-1,6,-5,-10,-1,6,7,-4,-1,7,-10,5,7,4,-5,3,-2,-6,1,-7,-5,10,2,-10,-9,-10,-10,-3,-5,10,6,6,2,6,-5,8,9,-6,6,-6,3,-3,1,1,5,-7,-5,-8,4,2,8,-1,-2,9,-3,2,-3,10,-3,1,4,-8,1,-8,1,-4,2,7,2,-1,-1,2,1,9,5,-3,-9,10,6,-5,-7,-5,4,-4,-8,-3,9,-4,-9,4,4,-3,-8,-3,10,-1,-4,-8,10,9,7,6,7,-6,-2,10,-8,1,5,-10,9,-2,2,5,1,10,6,-8,8,1,6,8,-4,2,2,-4,7,-5,-5,-1,-4,8,8,5,10,10,5,2,8,9,-7,-10,-7,3,7,10,-6,-3,4,2,2,-2,1,-8,-9,6,10,-2,5,10,-9,5,-1,-2,8,1,-8,-9,-8,-6,6,4,-10,-2,2,-6,2,-8,4,10,-6,2,-3,-10,1,-7,-10,10,7,-4,4,2,3,-1,-2,9,-1,1,-5,4,-7,-1,-1,-6,5,-9,-1,-6,-3,-1,7,6,-10,-3,-7,1,9,-2,4,-9,9,-7,1,3,10,10,4,7,-2,-1,7,-5,-3,-7,7,4,-7,6,-4,-1,-5,-2,-6,6,-9,-9,6,-5,4,-6,1,9,-10,-4,-6,-9,-6,1,-9,-4,-2,5,8,9,-3,5,4,9,-8,10,-8,4,-1,-9,-10,9,5,-1,5,9,2,1,7,-2,3,-9,-1,8,-8,2,-2,-1,4,-2,-10,6,-4,-10,7,5,1,2,9,-6,8,6,-9,-7,-6,4,1,-2,5,5,1,1,-8,-8,6,5,-3,6,-7,-7,-3,3,-10,-10,-6,-6,-8,10,3,-4,-1,-5,-1,6,-3,5,5,1,-4,10,-7,-4,7,-3,-2,-9,8,-9,2,-9,10,2,-3,-1,-5,6,9,-9,5,-7,8,2,-10,5,6,-7,-9,2,-4,-10,3,-3,5,9,3,-7,-9,-7,9,1,5,2,8,7,-8,-3,4,-3,9,10,-7,-4,-7,-7,2,-2,7,10,-1,-9,7,-9,-9,9,4,1,6,10,-6,-10,7,5,9,1,-6,6,-4,2,9,3,-1,-7,-10,2,5,6,7,6,-9,-5,-9,6,-8,-9,2,-10,-6,3,5,-4,9,-2,3,2,7,7,-8,3,5,-3,-4,1,-10,-6,2,-3,1,-7,5,6,-7,-2,-10,-1,5,-2,-6,8,9,-9,5,-4,-9,-3,-2,-10,4,6,-5,6,10,10,3,2,-4,-5,-4,7,1,2,9,-4,2,-4,6,8,10,-2,7,-6,-4,2,-1,-3,-9,8,7,-10,2,7,-5,-4,4,-1,9,-2,10,2,2,-8,2,-6,9,-7,9,-9,-8,3,-6,-3,-2,9,-10,7,-6,-3,-10,9,-7,10,-10,-2,9,-2,-10,3,3,-5,-1,-5,7,7,-8,-9,-3,-1,-8,-5,10,6,-4,3,-1,2,-3,10], dtype = "uint32")#candidate|4705|(600,)|const|uint32
call_4704 = relay.TupleGetItem(func_3608_call(relay.reshape(const_4705.astype('uint32'), [10, 10, 6])), 0)
call_4706 = relay.TupleGetItem(func_3611_call(relay.reshape(const_4705.astype('uint32'), [10, 10, 6])), 0)
uop_4737 = relay.rsqrt(call_4704.astype('float32')) # shape=(10, 10, 6)
uop_4739 = relay.rsqrt(call_4706.astype('float32')) # shape=(10, 10, 6)
const_4740 = relay.const([[[10,5,7,5],[2,8,-5,3],[4,9,10,10],[-10,-7,-7,-6],[-2,-8,4,7],[-1,2,-7,-5],[-8,1,-10,-5],[1,5,-10,4],[-2,3,6,-4]],[[4,3,10,4],[-4,-9,7,-7],[6,10,-4,6],[-9,-4,8,1],[5,-3,6,4],[-4,4,-6,4],[4,-6,8,-4],[2,1,-7,1],[-8,6,4,4]],[[4,-9,-1,-2],[7,-3,1,-2],[-9,-2,7,8],[-8,9,-6,-9],[-3,1,-3,8],[1,5,-3,5],[-1,-6,-10,4],[-9,-9,-10,-5],[7,6,7,10]],[[-7,1,1,2],[5,-10,4,-3],[1,-10,-2,-1],[-1,9,-2,7],[3,1,-6,-7],[5,-5,3,4],[4,4,-10,-5],[3,8,-2,-7],[5,-8,-5,1]],[[4,6,6,1],[5,5,10,4],[-3,-9,1,7],[-5,6,-2,9],[5,-3,-7,-2],[-10,8,7,3],[8,3,1,-5],[9,-8,10,-8],[3,9,-6,2]],[[8,-5,-6,4],[-2,1,-9,2],[8,10,5,7],[7,-8,7,-8],[2,1,-6,1],[-2,-3,-9,-8],[3,6,-3,-4],[9,5,3,-2],[-9,-2,7,-4]],[[8,-7,-10,-5],[-2,9,-6,-8],[-6,-2,8,-4],[8,-3,1,-2],[-3,-5,6,6],[-3,-7,-9,-3],[-10,3,-10,7],[3,10,9,5],[3,-7,-2,-8]],[[9,5,2,2],[-4,2,-2,-1],[-2,10,-5,5],[7,-8,4,-3],[5,2,7,-9],[-9,-4,-3,5],[-9,7,10,-3],[-4,3,9,3],[-5,1,-9,2]],[[3,-6,-4,-2],[-3,-7,8,9],[1,10,-9,5],[-7,7,-7,1],[-8,8,7,-3],[8,-5,-9,8],[6,9,-10,3],[-1,3,-1,9],[3,-1,7,3]],[[3,-2,2,-2],[8,8,-6,-7],[-1,-4,-7,4],[-2,10,-9,5],[-3,-4,-6,5],[-8,2,-4,-2],[1,1,-10,-6],[10,-2,-1,2],[-5,-8,3,-5]]], dtype = "int32")#candidate|4740|(10, 9, 4)|const|int32
bop_4741 = relay.not_equal(call_4690.astype('bool'), const_4740.astype('bool')) # shape=(10, 9, 4)
bop_4744 = relay.not_equal(call_4691.astype('bool'), const_4740.astype('bool')) # shape=(10, 9, 4)
func_2455_call = mod.get_global_var('func_2455')
func_2458_call = mutated_mod.get_global_var('func_2458')
const_4746 = relay.const([5.798006,-4.089187,6.344797,9.751127,-6.819388,-5.085192,6.246475,7.275875,3.432856,-6.783760,-0.752442,-4.054777,1.272407,-2.874508,8.715821,-8.926050,-1.416734,4.088331,8.989645,1.569404,7.511156,1.147262,7.551820,7.055465,-4.857701,5.779658,-1.258626,4.869156,8.695019,-7.321602,5.681578,2.182646,3.566017,5.548011,-5.531398,2.723215,3.335717,-0.135547,9.383250,6.332066,8.937105,-3.526318,5.603587,6.239004,1.280156,1.469931,-5.988215,-5.677824,-1.898538,1.094458,5.554083,-1.843326], dtype = "float64")#candidate|4746|(52,)|const|float64
call_4745 = relay.TupleGetItem(func_2455_call(relay.reshape(const_4746.astype('float64'), [52,])), 0)
call_4747 = relay.TupleGetItem(func_2458_call(relay.reshape(const_4746.astype('float64'), [52,])), 0)
uop_4759 = relay.sinh(uop_4737.astype('float64')) # shape=(10, 10, 6)
uop_4761 = relay.sinh(uop_4739.astype('float64')) # shape=(10, 10, 6)
output = relay.Tuple([const_4705,bop_4741,call_4745,const_4746,uop_4759,])
output2 = relay.Tuple([const_4705,bop_4744,call_4747,const_4746,uop_4761,])
func_4767 = relay.Function([], output)
mod['func_4767'] = func_4767
mod = relay.transform.InferType()(mod)
mutated_mod['func_4767'] = func_4767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4767_call = mutated_mod.get_global_var('func_4767')
call_4768 = func_4767_call()
output = call_4768
func_4769 = relay.Function([], output)
mutated_mod['func_4769'] = func_4769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1043_call = mod.get_global_var('func_1043')
func_1045_call = mutated_mod.get_global_var('func_1045')
call_4772 = relay.TupleGetItem(func_1043_call(), 0)
call_4773 = relay.TupleGetItem(func_1045_call(), 0)
output = call_4772
output2 = call_4773
func_4802 = relay.Function([], output)
mod['func_4802'] = func_4802
mod = relay.transform.InferType()(mod)
mutated_mod['func_4802'] = func_4802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4802_call = mutated_mod.get_global_var('func_4802')
call_4803 = func_4802_call()
output = call_4803
func_4804 = relay.Function([], output)
mutated_mod['func_4804'] = func_4804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1822_call = mod.get_global_var('func_1822')
func_1823_call = mutated_mod.get_global_var('func_1823')
call_4810 = relay.TupleGetItem(func_1822_call(), 1)
call_4811 = relay.TupleGetItem(func_1823_call(), 1)
output = relay.Tuple([call_4810,])
output2 = relay.Tuple([call_4811,])
func_4818 = relay.Function([], output)
mod['func_4818'] = func_4818
mod = relay.transform.InferType()(mod)
mutated_mod['func_4818'] = func_4818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4818_call = mutated_mod.get_global_var('func_4818')
call_4819 = func_4818_call()
output = call_4819
func_4820 = relay.Function([], output)
mutated_mod['func_4820'] = func_4820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4666_call = mod.get_global_var('func_4666')
func_4667_call = mutated_mod.get_global_var('func_4667')
call_4839 = relay.TupleGetItem(func_4666_call(), 2)
call_4840 = relay.TupleGetItem(func_4667_call(), 2)
func_2193_call = mod.get_global_var('func_2193')
func_2195_call = mutated_mod.get_global_var('func_2195')
var_4850 = relay.var("var_4850", dtype = "float64", shape = (480,))#candidate|4850|(480,)|var|float64
call_4849 = relay.TupleGetItem(func_2193_call(relay.reshape(var_4850.astype('float64'), [480,])), 3)
call_4851 = relay.TupleGetItem(func_2195_call(relay.reshape(var_4850.astype('float64'), [480,])), 3)
output = relay.Tuple([call_4839,call_4849,var_4850,])
output2 = relay.Tuple([call_4840,call_4851,var_4850,])
func_4869 = relay.Function([var_4850,], output)
mod['func_4869'] = func_4869
mod = relay.transform.InferType()(mod)
var_4870 = relay.var("var_4870", dtype = "float64", shape = (480,))#candidate|4870|(480,)|var|float64
output = func_4869(var_4870)
func_4871 = relay.Function([var_4870], output)
mutated_mod['func_4871'] = func_4871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1043_call = mod.get_global_var('func_1043')
func_1045_call = mutated_mod.get_global_var('func_1045')
call_4873 = relay.TupleGetItem(func_1043_call(), 1)
call_4874 = relay.TupleGetItem(func_1045_call(), 1)
output = call_4873
output2 = call_4874
func_4882 = relay.Function([], output)
mod['func_4882'] = func_4882
mod = relay.transform.InferType()(mod)
output = func_4882()
func_4883 = relay.Function([], output)
mutated_mod['func_4883'] = func_4883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4432_call = mod.get_global_var('func_4432')
func_4433_call = mutated_mod.get_global_var('func_4433')
call_4891 = func_4432_call()
call_4892 = func_4432_call()
func_3608_call = mod.get_global_var('func_3608')
func_3611_call = mutated_mod.get_global_var('func_3611')
const_4897 = relay.const([-3,2,-9,9,3,-4,-3,6,-8,-1,-6,4,6,5,-9,1,-1,-5,-3,4,2,-6,-10,8,-9,-10,-6,7,4,-3,-8,4,7,-10,4,8,-1,-2,-9,8,-1,-2,-3,-9,1,-10,8,6,3,-10,9,4,-2,-10,-9,8,-7,9,9,8,1,9,-10,-7,-3,10,2,-4,10,-7,2,-1,8,-10,-7,9,6,7,2,-1,-10,-7,-4,-9,4,-3,5,-7,3,4,-8,10,-8,2,-1,-7,3,-3,4,9,-2,-6,8,2,5,-3,-8,6,2,-7,10,-5,-7,-8,-2,1,-3,3,-2,-3,2,9,1,-7,5,5,8,-8,8,-8,-5,8,-5,9,7,-4,10,-10,-1,1,1,-1,5,5,-7,8,1,-8,-5,6,9,-3,-3,9,10,-2,-7,1,4,7,-9,1,-1,8,8,-9,4,-5,7,-3,-5,9,9,3,-3,3,9,6,5,-5,-10,9,8,-2,-9,3,1,-5,1,-4,-2,8,10,-9,-8,9,9,-1,-3,4,-10,-5,1,3,-8,8,-3,9,-10,10,3,7,7,-10,3,-2,5,5,-7,-7,7,-5,2,6,4,-2,-5,-10,-7,5,-4,-4,-6,4,9,-10,-9,-7,-1,-2,8,4,3,10,-2,-1,-3,7,3,-3,-5,7,10,-4,6,7,-4,-9,-3,-8,-3,-5,-3,6,-6,-6,-3,-6,8,5,-7,-8,-3,9,-6,-3,5,5,-10,4,1,-6,5,-9,-1,-7,-7,3,-1,-6,-9,-8,-6,-2,6,-10,-6,-3,-8,3,7,2,-2,3,-7,-2,7,9,-7,-8,7,-1,-6,-3,9,8,6,9,6,3,3,8,-9,3,-1,8,3,-2,-4,-5,-1,-8,-4,-6,10,-4,7,3,2,-2,9,1,-9,-10,8,-7,-8,-7,-1,3,-2,-4,-10,7,-3,2,-10,3,-6,4,8,-2,-4,1,1,1,-2,4,-2,-3,-1,8,-10,1,-5,9,-6,-10,-9,10,-4,3,5,-9,8,3,-8,3,5,-5,10,-4,4,-7,-4,3,7,5,1,9,5,-9,5,5,7,-8,4,3,5,-3,6,-10,-9,-5,10,-10,-3,2,-2,-8,6,3,-10,-10,-6,-6,6,-7,3,-5,-5,-10,5,-8,8,5,-4,4,7,-6,6,7,-10,-6,10,7,-6,4,10,8,8,2,2,-5,-1,-1,-5,-8,7,-9,5,2,7,-3,-8,5,-4,9,4,-4,4,-1,-8,-5,10,1,4,-7,9,-7,10,-4,-8,10,-6,-8,-2,1,-5,4,-2,3,8,4,1,-4,-3,9,3,5,6,2,-10,9,-9,5,7,5,1,5,-3,6,9,-9,-5,-2,8,8,-4,7,9,5,1,3,3,3,9,2,-5,10,7,-10,5,5,6,-5,6,-10,1,-9,3,10,3,10,5,7,-4,-9,6,10,-7,-4,-6,10,-2,-2,2,9,-4,-5,-2,2,-9,5,-4,7,2,4,8,7,-2,-8,-3,-2,-7,7,-9,-5,10,6,-7,-5,4,8,3,5,6,-2,10,5,2,7,3,-2,2,-6,2,-7,-1,2], dtype = "uint32")#candidate|4897|(600,)|const|uint32
call_4896 = relay.TupleGetItem(func_3608_call(relay.reshape(const_4897.astype('uint32'), [10, 10, 6])), 0)
call_4898 = relay.TupleGetItem(func_3611_call(relay.reshape(const_4897.astype('uint32'), [10, 10, 6])), 0)
func_2325_call = mod.get_global_var('func_2325')
func_2326_call = mutated_mod.get_global_var('func_2326')
call_4911 = relay.TupleGetItem(func_2325_call(), 3)
call_4912 = relay.TupleGetItem(func_2326_call(), 3)
func_2479_call = mod.get_global_var('func_2479')
func_2480_call = mutated_mod.get_global_var('func_2480')
call_4925 = relay.TupleGetItem(func_2479_call(), 1)
call_4926 = relay.TupleGetItem(func_2480_call(), 1)
var_4935 = relay.var("var_4935", dtype = "uint32", shape = (600,))#candidate|4935|(600,)|var|uint32
bop_4936 = relay.less_equal(const_4897.astype('bool'), relay.reshape(var_4935.astype('bool'), relay.shape_of(const_4897))) # shape=(600,)
output = relay.Tuple([call_4891,call_4896,call_4911,call_4925,bop_4936,])
output2 = relay.Tuple([call_4892,call_4898,call_4912,call_4926,bop_4936,])
func_4941 = relay.Function([var_4935,], output)
mod['func_4941'] = func_4941
mod = relay.transform.InferType()(mod)
mutated_mod['func_4941'] = func_4941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4942 = relay.var("var_4942", dtype = "uint32", shape = (600,))#candidate|4942|(600,)|var|uint32
func_4941_call = mutated_mod.get_global_var('func_4941')
call_4943 = func_4941_call(var_4942)
output = call_4943
func_4944 = relay.Function([var_4942], output)
mutated_mod['func_4944'] = func_4944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3198_call = mod.get_global_var('func_3198')
func_3199_call = mutated_mod.get_global_var('func_3199')
call_4970 = relay.TupleGetItem(func_3198_call(), 4)
call_4971 = relay.TupleGetItem(func_3199_call(), 4)
output = relay.Tuple([call_4970,])
output2 = relay.Tuple([call_4971,])
func_4988 = relay.Function([], output)
mod['func_4988'] = func_4988
mod = relay.transform.InferType()(mod)
output = func_4988()
func_4989 = relay.Function([], output)
mutated_mod['func_4989'] = func_4989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4324_call = mutated_mod.get_global_var('func_4324')
call_5035 = relay.TupleGetItem(func_4323_call(), 0)
call_5036 = relay.TupleGetItem(func_4324_call(), 0)
func_4767_call = mod.get_global_var('func_4767')
func_4769_call = mutated_mod.get_global_var('func_4769')
call_5037 = relay.TupleGetItem(func_4767_call(), 4)
call_5038 = relay.TupleGetItem(func_4769_call(), 4)
func_578_call = mod.get_global_var('func_578')
func_580_call = mutated_mod.get_global_var('func_580')
call_5039 = func_578_call()
call_5040 = func_578_call()
var_5054 = relay.var("var_5054", dtype = "float32", shape = (5, 9, 4))#candidate|5054|(5, 9, 4)|var|float32
bop_5055 = relay.right_shift(call_5039.astype('int8'), var_5054.astype('int8')) # shape=(5, 9, 4)
bop_5058 = relay.right_shift(call_5040.astype('int8'), var_5054.astype('int8')) # shape=(5, 9, 4)
func_1531_call = mod.get_global_var('func_1531')
func_1533_call = mutated_mod.get_global_var('func_1533')
call_5076 = relay.TupleGetItem(func_1531_call(), 0)
call_5077 = relay.TupleGetItem(func_1533_call(), 0)
output = relay.Tuple([call_5035,call_5037,bop_5055,call_5076,])
output2 = relay.Tuple([call_5036,call_5038,bop_5058,call_5077,])
func_5084 = relay.Function([var_5054,], output)
mod['func_5084'] = func_5084
mod = relay.transform.InferType()(mod)
mutated_mod['func_5084'] = func_5084
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5085 = relay.var("var_5085", dtype = "float32", shape = (5, 9, 4))#candidate|5085|(5, 9, 4)|var|float32
func_5084_call = mutated_mod.get_global_var('func_5084')
call_5086 = func_5084_call(var_5085)
output = call_5086
func_5087 = relay.Function([var_5085], output)
mutated_mod['func_5087'] = func_5087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2479_call = mod.get_global_var('func_2479')
func_2480_call = mutated_mod.get_global_var('func_2480')
call_5098 = relay.TupleGetItem(func_2479_call(), 1)
call_5099 = relay.TupleGetItem(func_2480_call(), 1)
func_1756_call = mod.get_global_var('func_1756')
func_1758_call = mutated_mod.get_global_var('func_1758')
call_5100 = relay.TupleGetItem(func_1756_call(), 0)
call_5101 = relay.TupleGetItem(func_1758_call(), 0)
func_4869_call = mod.get_global_var('func_4869')
func_4871_call = mutated_mod.get_global_var('func_4871')
var_5110 = relay.var("var_5110", dtype = "float64", shape = (480,))#candidate|5110|(480,)|var|float64
call_5109 = relay.TupleGetItem(func_4869_call(relay.reshape(var_5110.astype('float64'), [480,])), 1)
call_5111 = relay.TupleGetItem(func_4871_call(relay.reshape(var_5110.astype('float64'), [480,])), 1)
output = relay.Tuple([call_5098,call_5100,call_5109,var_5110,])
output2 = relay.Tuple([call_5099,call_5101,call_5111,var_5110,])
func_5114 = relay.Function([var_5110,], output)
mod['func_5114'] = func_5114
mod = relay.transform.InferType()(mod)
mutated_mod['func_5114'] = func_5114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5115 = relay.var("var_5115", dtype = "float64", shape = (480,))#candidate|5115|(480,)|var|float64
func_5114_call = mutated_mod.get_global_var('func_5114')
call_5116 = func_5114_call(var_5115)
output = call_5116
func_5117 = relay.Function([var_5115], output)
mutated_mod['func_5117'] = func_5117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4666_call = mod.get_global_var('func_4666')
func_4667_call = mutated_mod.get_global_var('func_4667')
call_5119 = relay.TupleGetItem(func_4666_call(), 1)
call_5120 = relay.TupleGetItem(func_4667_call(), 1)
const_5123 = relay.const([[[4.340279,1.483751,-6.606258,1.483303],[-9.423840,1.980723,-2.191887,-6.207400],[-7.190473,-3.574448,-3.905393,-3.851301],[-2.726547,-8.545056,-0.411040,4.882316],[3.337255,-1.784210,-1.614030,3.649550],[4.285705,-9.526409,-8.320778,2.930063],[9.534135,8.608139,-0.872752,-9.701938],[4.844412,1.778217,6.678325,1.757098],[-7.655359,-0.200257,9.480434,5.497819]],[[-7.370515,-0.114328,-4.534571,-7.768986],[2.021298,7.295052,9.085001,0.816010],[-1.028631,-2.538695,2.465838,9.445486],[1.370708,-0.037569,0.587791,3.881849],[0.352093,-3.409569,1.033366,4.284765],[-0.581026,2.772643,8.620663,-2.165357],[0.952052,1.001298,4.910181,-6.326499],[-4.215903,0.534083,2.420467,-4.733695],[6.222916,-2.627144,3.134586,9.756944]],[[2.376482,3.396701,6.670778,-5.034718],[1.432662,8.155699,-0.651163,0.906164],[-1.866716,-1.801619,-3.456497,1.490971],[-0.219190,-7.571997,8.372207,1.605139],[-0.047586,1.420879,7.269693,2.714725],[1.437688,7.682843,-2.142353,4.742177],[6.274164,-2.438633,-1.123080,1.969361],[-5.544345,-4.589711,-0.210983,-2.936297],[-2.674906,-1.823006,8.414171,-7.274040]],[[3.207372,4.021189,5.842120,-2.622425],[-0.106655,-9.812999,-2.763470,6.159186],[5.757709,8.979496,-0.013182,1.769082],[9.874076,-6.141494,1.558343,-7.477268],[-6.730070,-4.097838,-4.905874,-1.732839],[-0.858199,4.481076,1.506664,9.708860],[-4.086044,-2.100732,-3.548806,7.231177],[3.505025,-9.957324,7.558690,7.252517],[-7.547110,3.193860,4.466279,-0.909050]],[[-9.746157,-5.481019,-4.759041,-3.737114],[-6.103933,7.299978,-5.798087,7.316901],[-4.944559,-8.872740,-7.448786,7.869010],[-0.863937,3.834810,6.710698,0.580820],[1.142415,4.271541,7.399014,-2.824230],[-2.639150,-6.313894,-5.648699,-0.472310],[8.673377,-2.610039,7.063066,7.672804],[-8.957273,4.445561,-5.296395,6.053896],[-5.718986,0.151734,4.221054,-2.859902]],[[-5.456043,-8.047798,-2.089606,4.164144],[-4.437821,5.047730,-4.865205,7.863287],[4.789963,-6.879006,6.994081,8.805081],[-9.623801,2.129798,-1.550362,4.702270],[-4.449133,9.698170,-7.032936,-8.104670],[4.553345,-9.157879,-3.967977,-8.116036],[-6.962275,4.090160,6.316903,-5.802992],[-5.195839,5.869816,5.754140,0.321777],[-9.427116,-3.951277,2.361009,5.176283]],[[-4.406843,-1.018059,4.557120,-8.892853],[8.257317,7.059114,-9.614865,-6.845320],[4.250484,3.589355,-8.110680,-5.914620],[3.303552,-1.852058,-8.274076,2.849279],[1.740252,0.558785,4.681571,5.575305],[-6.227536,8.479829,-2.301828,4.628447],[6.426633,-3.254362,6.172505,-2.018770],[2.220178,0.232149,7.713027,-0.955406],[3.839734,7.933235,4.761095,9.626283]],[[-7.252862,-6.851403,6.638028,-0.527788],[-3.585211,-0.926027,-1.311819,-1.620632],[5.897725,6.718662,7.280735,-1.428855],[8.828699,7.457152,-0.235130,-2.882677],[6.978516,8.350979,-0.121175,2.300056],[-3.920993,-9.376134,-4.419627,-7.056979],[2.968933,-6.452475,8.788140,6.203779],[0.569644,0.164389,5.771172,-7.331508],[-4.231184,8.496830,6.607328,4.045646]],[[9.732262,-6.840654,-2.314536,8.749736],[-7.790442,-4.266720,-7.524631,3.087784],[-6.295057,3.734005,-1.231404,-3.522578],[5.360861,-2.032537,-8.687952,-2.050163],[6.807386,-9.185820,0.632669,2.688970],[8.124956,6.613406,5.575167,2.425677],[4.104299,-0.930290,-3.911456,-2.370635],[-5.444446,5.594806,-6.274319,-4.265959],[-7.600056,-7.277483,9.807491,-3.025612]],[[8.560740,-7.179796,-6.288985,1.789782],[8.605732,1.524475,-4.617642,0.940620],[-1.540818,-0.503424,5.605124,1.954081],[1.123363,6.611882,6.679193,3.678380],[-9.455138,-5.215966,-2.617589,-7.633022],[5.889055,2.166706,-3.734968,-9.087648],[6.079196,0.079360,-8.335798,0.817778],[-3.928212,-9.061552,-6.631420,3.252664],[0.195593,2.542616,2.179483,2.131904]],[[2.799741,-4.453398,-2.748996,2.141906],[7.153398,-0.186763,2.377166,0.270162],[-1.878911,8.877175,-1.864594,1.400414],[-5.742838,9.664913,8.473723,-3.803316],[3.115099,-8.904035,-5.865010,-8.633473],[-6.440880,6.161120,-2.496303,-0.352698],[-6.964454,8.178166,-2.652552,-0.246802],[2.447327,-9.684795,0.409667,5.215656],[2.012908,-3.411984,1.545971,-3.809190]],[[4.249056,8.069856,-2.234493,-6.067652],[-5.951560,1.908038,4.098990,6.618218],[0.427199,7.805850,5.877105,-0.005654],[-3.331995,-0.995752,2.437760,9.131059],[-4.298029,-6.746904,-6.388729,9.238561],[-9.138563,8.957053,-0.661959,-2.814821],[-7.490648,-8.594390,-5.147541,8.665089],[3.093062,3.524589,-4.046320,4.545398],[0.292142,1.901749,2.243205,-4.082541]],[[-3.114724,9.636287,5.012598,-9.372299],[1.625321,4.918087,0.483014,-4.841336],[-4.672662,1.745125,-4.444983,2.048207],[-3.811996,-0.305216,9.657631,3.729843],[-4.608714,-6.400845,-7.592496,-0.650713],[-0.221703,-9.843027,-9.379119,-4.837224],[-0.958377,1.304323,7.723898,-9.278960],[7.766379,9.137345,-0.714419,-8.430085],[1.015928,-2.086684,-3.249465,4.822588]],[[-8.587331,-5.937429,-0.688769,6.378416],[1.903317,9.979916,7.316005,-2.049007],[-6.909039,9.721890,7.921839,-9.902672],[-5.834314,-7.232269,8.314953,3.215105],[8.770764,-1.806814,1.476076,-7.041216],[-9.901145,2.251398,-7.185084,-3.823572],[0.946266,7.015313,-6.894856,4.694437],[-2.025790,7.431228,9.139533,9.271629],[-8.735219,-2.748208,0.539072,-7.283216]],[[-2.529588,7.033643,-6.226310,-2.176874],[1.082213,-0.946404,3.957286,-0.084712],[8.146859,7.308170,6.452844,-7.310903],[-6.509244,2.624595,3.790413,4.433951],[5.249633,-4.063404,-0.387704,2.473699],[-4.680221,4.477686,7.724583,7.604272],[5.614373,2.013668,5.778749,3.142597],[-4.777424,1.027141,-7.974089,6.830255],[0.067469,8.718148,-6.746010,9.557451]],[[-2.700309,-0.996840,7.612705,6.618234],[-5.620758,1.709928,-0.060038,6.112538],[2.376194,-0.369324,8.543201,7.167246],[-4.025470,7.260453,6.446373,4.398751],[6.115055,3.822232,-5.901986,-6.833421],[9.294146,-9.164597,-2.642468,-0.878643],[5.280379,3.733988,-1.109859,8.819142],[-8.353150,-9.382274,-3.832640,2.413350],[8.089388,-0.161479,3.554957,1.919181]]], dtype = "float64")#candidate|5123|(16, 9, 4)|const|float64
bop_5124 = relay.right_shift(call_5119.astype('int32'), const_5123.astype('int32')) # shape=(16, 9, 4)
bop_5127 = relay.right_shift(call_5120.astype('int32'), const_5123.astype('int32')) # shape=(16, 9, 4)
output = relay.Tuple([bop_5124,])
output2 = relay.Tuple([bop_5127,])
func_5147 = relay.Function([], output)
mod['func_5147'] = func_5147
mod = relay.transform.InferType()(mod)
mutated_mod['func_5147'] = func_5147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5147_call = mutated_mod.get_global_var('func_5147')
call_5148 = func_5147_call()
output = call_5148
func_5149 = relay.Function([], output)
mutated_mod['func_5149'] = func_5149
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5153 = relay.var("var_5153", dtype = "bool", shape = (3, 4, 16))#candidate|5153|(3, 4, 16)|var|bool
var_5154 = relay.var("var_5154", dtype = "bool", shape = (3, 4, 16))#candidate|5154|(3, 4, 16)|var|bool
bop_5155 = relay.logical_and(var_5153.astype('bool'), relay.reshape(var_5154.astype('bool'), relay.shape_of(var_5153))) # shape=(3, 4, 16)
var_5168 = relay.var("var_5168", dtype = "bool", shape = (3, 4, 16))#candidate|5168|(3, 4, 16)|var|bool
bop_5169 = relay.mod(var_5154.astype('float64'), relay.reshape(var_5168.astype('float64'), relay.shape_of(var_5154))) # shape=(3, 4, 16)
bop_5190 = relay.bitwise_or(var_5154.astype('uint16'), relay.reshape(var_5168.astype('uint16'), relay.shape_of(var_5154))) # shape=(3, 4, 16)
var_5200 = relay.var("var_5200", dtype = "uint16", shape = (3, 4, 16))#candidate|5200|(3, 4, 16)|var|uint16
bop_5201 = relay.logical_xor(bop_5190.astype('int64'), relay.reshape(var_5200.astype('int64'), relay.shape_of(bop_5190))) # shape=(3, 4, 16)
output = relay.Tuple([bop_5155,bop_5169,bop_5201,])
output2 = relay.Tuple([bop_5155,bop_5169,bop_5201,])
func_5208 = relay.Function([var_5153,var_5154,var_5168,var_5200,], output)
mod['func_5208'] = func_5208
mod = relay.transform.InferType()(mod)
var_5209 = relay.var("var_5209", dtype = "bool", shape = (3, 4, 16))#candidate|5209|(3, 4, 16)|var|bool
var_5210 = relay.var("var_5210", dtype = "bool", shape = (3, 4, 16))#candidate|5210|(3, 4, 16)|var|bool
var_5211 = relay.var("var_5211", dtype = "bool", shape = (3, 4, 16))#candidate|5211|(3, 4, 16)|var|bool
var_5212 = relay.var("var_5212", dtype = "uint16", shape = (3, 4, 16))#candidate|5212|(3, 4, 16)|var|uint16
output = func_5208(var_5209,var_5210,var_5211,var_5212,)
func_5213 = relay.Function([var_5209,var_5210,var_5211,var_5212,], output)
mutated_mod['func_5213'] = func_5213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1756_call = mod.get_global_var('func_1756')
func_1758_call = mutated_mod.get_global_var('func_1758')
call_5230 = relay.TupleGetItem(func_1756_call(), 2)
call_5231 = relay.TupleGetItem(func_1758_call(), 2)
output = relay.Tuple([call_5230,])
output2 = relay.Tuple([call_5231,])
func_5232 = relay.Function([], output)
mod['func_5232'] = func_5232
mod = relay.transform.InferType()(mod)
output = func_5232()
func_5233 = relay.Function([], output)
mutated_mod['func_5233'] = func_5233
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5254 = relay.var("var_5254", dtype = "float64", shape = (14, 5, 6))#candidate|5254|(14, 5, 6)|var|float64
uop_5255 = relay.cos(var_5254.astype('float64')) # shape=(14, 5, 6)
output = relay.Tuple([uop_5255,])
output2 = relay.Tuple([uop_5255,])
func_5259 = relay.Function([var_5254,], output)
mod['func_5259'] = func_5259
mod = relay.transform.InferType()(mod)
mutated_mod['func_5259'] = func_5259
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5260 = relay.var("var_5260", dtype = "float64", shape = (14, 5, 6))#candidate|5260|(14, 5, 6)|var|float64
func_5259_call = mutated_mod.get_global_var('func_5259')
call_5261 = func_5259_call(var_5260)
output = call_5261
func_5262 = relay.Function([var_5260], output)
mutated_mod['func_5262'] = func_5262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3516_call = mod.get_global_var('func_3516')
func_3518_call = mutated_mod.get_global_var('func_3518')
call_5288 = relay.TupleGetItem(func_3516_call(), 6)
call_5289 = relay.TupleGetItem(func_3518_call(), 6)
func_2193_call = mod.get_global_var('func_2193')
func_2195_call = mutated_mod.get_global_var('func_2195')
const_5298 = relay.const([[5.433127,-8.645944,8.262191,0.627180,-2.634187,-4.590560,6.048454,-7.579094,0.850905,6.498035,-1.916541,-0.693267,2.160091,9.101385,9.835352,-6.481584,0.573010,2.164173,-4.951353,3.505878,7.335334,-1.066344,8.071113,2.452430,1.617439,7.054977,-3.518338,6.521654,2.787709,9.199555,-3.939194,7.080597,0.645976,-4.946004,-7.627242,-1.073450,3.218034,-1.724549,6.479597,-0.622714,-8.738075,-2.254383,2.944609,-0.105403,-3.487310,4.151371,0.935082,-0.793134,-2.932869,-2.813541,7.636482,-3.887299,-6.059214,0.470145,-5.569902,-9.443380,1.738436,-9.092057,-6.326501,-4.736467,-7.575432,6.086781,-8.972362,-9.237891,-5.444679,3.244820,1.803928,0.713340,-4.008449,0.140008,-8.369345,-3.484123,3.011366,-2.680363,8.396646,-0.011260,-8.636148,-6.402238,-4.495794,1.473747,2.693858,-7.907182,0.730665,-3.944233,-4.546893,-3.382293,9.694818,8.847127,7.082532,1.220858,-7.302136,8.609352,7.440054,3.741267,-6.593328,4.441972,-5.237819,0.576539,3.265091,1.237144,8.564834,-3.436756,-5.900927,3.685357,6.802810,8.411096,4.119559,-0.018284,-0.114860,-1.486550,9.312917,-2.752555,8.575241,5.938208,-5.475794,-9.081632,-8.053150,-8.830756,-4.490498,3.311007],[-0.169104,3.322027,1.689476,8.342576,-7.693230,-8.528361,7.969504,2.963700,-8.810559,4.714726,2.554343,0.802248,-2.194858,4.647771,9.423738,-2.175112,4.182840,8.258019,1.972398,-9.735623,-5.452350,4.615287,3.637834,-9.451175,6.614840,-3.918992,-8.194521,2.718232,-3.085675,5.011901,5.538269,4.953573,-0.181999,9.965762,6.733725,2.931729,-5.857791,8.348811,0.319147,-8.133524,5.389554,2.815829,-3.801350,-6.880206,1.966766,-2.732539,5.079653,1.779455,3.520648,-7.410358,-2.799535,-0.323903,-9.080975,2.382894,-6.723218,4.383502,-1.209196,0.675298,1.609468,1.318041,3.543572,4.768991,-8.447741,-5.658698,1.477840,-6.576360,-3.023810,-3.336056,0.182173,-9.482065,5.934810,6.669319,4.419224,-0.005249,9.618290,2.658281,-9.460977,9.144616,-9.020026,-3.822776,-8.089746,3.461383,3.068051,-4.710973,5.559913,-9.186452,-2.057862,1.293705,-3.912710,-2.010375,3.042154,2.656245,-6.112029,-1.187042,-0.739069,-1.067611,-0.407506,-8.903721,7.259972,-0.139628,7.419463,-4.304634,-9.451072,8.821895,3.050525,-4.660466,-0.240121,-3.170704,4.657967,9.789171,2.434475,-5.089655,2.364897,-3.722637,7.089336,-7.988157,7.339969,-1.934063,-9.306654,4.401810],[5.322934,-3.918686,4.037040,-2.739543,-0.410992,-1.186527,8.784991,1.936550,8.991634,-6.842048,-4.059678,-9.972333,4.492117,9.534596,-9.305824,9.015166,2.022534,0.098696,6.963632,0.194583,5.549843,6.295316,-5.782025,-0.178645,-6.556895,6.064674,5.301274,9.132830,-9.125810,-4.624772,3.376023,7.195116,0.258445,2.848804,-3.620644,-9.147229,-0.139755,7.279489,-9.755922,5.324964,-7.104921,2.080820,-6.835814,-3.606333,-1.691140,6.302002,-1.525395,-0.909499,-8.363256,-0.518196,-5.531752,-4.581893,1.377553,5.757481,9.226436,-2.140261,1.655126,8.824018,-6.663594,1.171820,-6.744177,-7.388967,2.595155,7.021903,-7.680956,-8.122038,-1.826725,-2.857331,-5.540147,-9.024137,-3.887554,0.197034,-6.177041,6.093003,-4.890818,2.192417,0.365972,-9.180122,-7.376662,-1.027426,8.727303,6.556655,-9.744087,6.533395,-5.438818,-1.096030,6.139823,-8.267106,6.908596,-6.312611,-0.929137,-0.867626,-5.030511,-2.051675,-7.809703,1.213867,-3.768898,-9.857710,-1.977801,4.889209,2.218562,1.725759,-6.566070,-2.456468,8.152347,6.017579,4.919664,-3.586432,-7.351898,-1.676214,4.821545,6.595783,1.695712,-2.117012,0.297219,-8.300428,-7.950124,2.580042,5.009319,-4.150452],[4.293082,2.355838,6.727615,-0.848080,-8.132662,7.543494,-0.489839,4.571143,-0.424141,-3.758645,-5.267498,-7.779393,-8.436429,8.601060,4.471632,6.268133,8.592864,4.128304,-7.305348,8.089441,1.672463,-9.344642,5.825752,9.505512,-5.147330,1.788312,-1.719008,6.744183,-4.570442,-0.988862,-3.398549,-5.653399,-4.215792,-1.346336,9.406845,-5.894000,-6.656720,-6.078224,-4.169906,4.001337,5.752612,8.539870,-3.564136,8.089936,3.107128,9.179154,6.828304,-9.757326,6.558454,-9.607136,-1.669354,8.113576,0.971046,-8.602545,1.507351,-6.428214,-7.857376,-3.547406,-1.739170,9.679800,-6.876656,4.535969,-9.322463,2.002768,9.205293,-8.578740,-3.589643,-2.259015,-3.413848,-6.175435,5.569739,-3.857161,-5.860214,-7.921058,-9.222774,4.409406,-9.496711,-0.110688,-6.753167,9.449088,8.017357,3.191543,7.034977,-4.055381,-9.831844,-7.054784,4.328233,6.341310,6.492711,2.551264,-7.105842,-7.394594,8.594947,9.743122,2.308647,0.982760,5.638272,-3.192258,2.510445,-5.487099,0.395400,5.004286,4.897666,6.639414,-5.590864,5.921492,6.183602,-5.646672,-7.708766,-1.265375,-6.312508,7.377538,-5.252434,-0.707500,-9.884601,5.617690,3.319912,-7.036575,2.641444,-5.740930]], dtype = "float64")#candidate|5298|(4, 120)|const|float64
call_5297 = relay.TupleGetItem(func_2193_call(relay.reshape(const_5298.astype('float64'), [480,])), 4)
call_5299 = relay.TupleGetItem(func_2195_call(relay.reshape(const_5298.astype('float64'), [480,])), 4)
const_5300 = relay.const([[2.480588,2.564232,1.677259,5.564627,2.669846,-9.828884,9.425204,2.991234,-7.407190,1.935320,3.632157,-1.256692,0.609001,-5.491521,-7.946936,-8.761823,8.359975,-1.455358,0.319585,-8.504207,4.848387,8.839539,3.732513,-1.468686,-5.553792,-3.034228,-6.710792,3.606895,-0.175023,-8.183616,0.622073,5.919269,-7.833831,9.463179,1.870322,2.500413,-6.618380,0.507545,6.857529,-1.380727,-4.022381,9.226984,0.318302,-8.288905,-1.121104,-2.766338,-4.708432,-8.496287,9.952348,-5.045005,-4.256362,8.125231,3.378965,-8.635707,0.694778,-7.293726,4.902576,-9.517766,-6.677938,-4.166540,4.101966,2.725920,-1.584119,-2.899152,9.574717,-4.213876,-3.453471,1.221964,8.775990,9.852848,-4.992339,-4.823180,7.406749,-3.329712,2.194659,4.248907,-7.461773,-1.485700,-2.095942,-3.348124,-9.542072,7.521553,8.745668,-6.898644,-3.664473,5.038779,1.856430,-7.598994,-9.077814,-9.881742,-0.894630,-8.089496,-1.163793,1.807929,2.357500,9.436616,5.340874,3.113972,8.656000,2.144079,0.022101,-3.675894,-3.951723,1.049671,0.169006,-6.669351,4.651854,-0.494901,-7.073249,0.092222,-1.553725,6.880654,8.911988,-3.175836,-5.739043,9.850166,-8.147192,-1.337751,-8.317507,7.360600],[3.826609,4.987735,-4.019466,1.373937,-4.352146,-9.672111,1.292638,-2.351269,-8.733277,2.622552,-7.722167,-7.018383,-7.001930,9.440330,6.631298,-8.872140,-2.114831,7.269355,-1.710864,8.097284,6.991168,2.099954,6.959812,-0.283595,-3.721955,-1.309306,-1.421506,6.073771,9.763941,3.442906,7.706142,-6.172877,-8.583704,-4.912525,-8.813548,1.598605,7.530675,-8.543946,-9.295607,5.255057,-7.504173,0.943558,-3.117427,4.906207,6.595120,-4.516984,-7.588216,-9.282084,5.166129,0.016406,0.098064,8.454846,4.272331,1.314685,-1.370826,-8.141067,3.390376,8.208434,-2.122266,8.830042,-7.505854,-1.884091,-5.282637,6.054184,7.761786,6.528556,4.391059,-4.467380,-4.880094,-2.692193,-1.631040,1.134723,-6.254644,8.471061,1.146891,-9.645762,5.029798,9.570480,3.656032,1.790113,6.658578,5.038909,7.259390,-5.969224,-1.698148,4.896166,8.962379,-1.413921,7.623110,3.286567,-2.495986,-5.840377,-2.824821,-3.897945,-9.496796,1.227690,-0.860649,-6.194392,-4.740906,-8.140389,0.650598,2.173181,-0.171247,-3.539566,5.921294,3.518570,3.737152,7.162974,3.885794,-1.873638,2.051613,3.045687,-3.991074,-9.520222,-3.696601,5.857321,-3.578265,3.502012,-4.266611,-9.395778],[3.718331,-7.145286,-7.371291,-0.695332,6.422382,8.195047,-4.517926,-8.607786,2.362306,4.692410,3.682515,9.634813,8.379678,7.900664,4.500276,-9.999535,4.114124,2.354888,-4.132828,0.168871,-6.053667,1.646164,7.395649,-4.624873,-2.522921,8.054677,-1.607604,5.128772,3.953916,-7.635975,-0.605686,5.336978,5.619609,1.438315,-7.199557,4.588037,-4.617094,-5.992297,-8.760818,-8.086536,-6.307794,7.977879,-1.822813,9.344595,8.274246,-5.626438,-3.705107,6.978672,4.729302,1.453539,8.212513,-0.716088,9.860664,3.537728,9.104853,-3.813259,4.597607,9.136188,-9.953233,4.936436,-2.877138,-4.753638,3.752373,-6.512831,-7.079550,7.754333,-5.332611,0.476573,-1.298788,9.334554,-1.449591,7.566611,2.080934,-1.546155,9.374285,6.504758,6.174902,-0.056518,8.407731,4.056718,1.369547,0.619839,6.974718,0.060970,-2.323006,2.055100,7.644541,-0.546962,5.234130,-9.152749,7.662564,-0.860328,3.575155,2.109676,6.345829,3.950670,6.485563,-4.238530,0.662823,-5.008487,5.781446,9.675142,8.994175,2.029483,-2.295522,8.841494,-6.332080,-8.664258,2.181246,-9.846231,7.152348,3.085120,8.398473,5.626081,0.256508,-3.922367,8.809685,1.853118,3.518076,-8.935647],[0.542382,7.521242,4.101042,5.505787,-2.881815,-3.395485,5.210447,-3.768454,8.049205,-5.897159,-0.353164,8.997898,-7.662817,-4.095214,-6.454554,0.811774,-8.338750,1.103889,-3.038636,-8.825149,-5.870659,-2.674828,-7.747682,-7.588939,-2.616525,9.680499,7.407223,6.100243,4.240293,-7.415061,-3.310412,1.961315,-6.902565,-4.043379,-1.417938,1.661679,5.006201,-9.362052,4.274835,-0.058040,0.116853,-3.718823,-8.672717,-0.240350,0.832859,6.059253,-7.783129,-4.572337,8.145937,-9.091780,-8.803963,0.146290,4.974605,7.155135,-0.819957,6.222119,4.516457,6.471247,5.617623,-1.317651,-2.015008,-1.274839,-3.302400,7.379586,7.241905,9.423785,-2.629534,-2.755371,2.840070,-5.420967,7.453785,9.523667,2.177177,-8.176598,1.461332,5.377053,6.730925,-5.423398,-3.518132,5.282802,3.850338,2.679983,6.086172,-9.160096,-0.081153,8.865210,-3.944706,-6.587703,3.599997,-7.862784,5.536792,-5.523377,3.688725,6.660615,-8.240103,2.609054,1.934240,9.578999,-4.950507,8.309829,-1.750449,-0.651195,-8.072437,-9.701976,-6.454366,-7.977819,-1.281777,-0.996728,8.787513,-0.528214,-5.045302,-5.397820,-1.384052,4.611935,5.404242,2.231526,0.220567,-4.585123,0.793773,6.053975]], dtype = "float64")#candidate|5300|(4, 120)|const|float64
bop_5301 = relay.logical_or(const_5298.astype('bool'), relay.reshape(const_5300.astype('bool'), relay.shape_of(const_5298))) # shape=(4, 120)
output = relay.Tuple([call_5288,call_5297,bop_5301,])
output2 = relay.Tuple([call_5289,call_5299,bop_5301,])
func_5306 = relay.Function([], output)
mod['func_5306'] = func_5306
mod = relay.transform.InferType()(mod)
output = func_5306()
func_5307 = relay.Function([], output)
mutated_mod['func_5307'] = func_5307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_931_call = mod.get_global_var('func_931')
func_933_call = mutated_mod.get_global_var('func_933')
call_5324 = relay.TupleGetItem(func_931_call(), 0)
call_5325 = relay.TupleGetItem(func_933_call(), 0)
output = call_5324
output2 = call_5325
func_5334 = relay.Function([], output)
mod['func_5334'] = func_5334
mod = relay.transform.InferType()(mod)
output = func_5334()
func_5335 = relay.Function([], output)
mutated_mod['func_5335'] = func_5335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3208_call = mod.get_global_var('func_3208')
func_3210_call = mutated_mod.get_global_var('func_3210')
call_5359 = relay.TupleGetItem(func_3208_call(), 0)
call_5360 = relay.TupleGetItem(func_3210_call(), 0)
uop_5361 = relay.sqrt(call_5359.astype('float32')) # shape=(12, 11, 2)
uop_5363 = relay.sqrt(call_5360.astype('float32')) # shape=(12, 11, 2)
func_1313_call = mod.get_global_var('func_1313')
func_1314_call = mutated_mod.get_global_var('func_1314')
call_5384 = relay.TupleGetItem(func_1313_call(), 0)
call_5385 = relay.TupleGetItem(func_1314_call(), 0)
output = relay.Tuple([uop_5361,call_5384,])
output2 = relay.Tuple([uop_5363,call_5385,])
func_5401 = relay.Function([], output)
mod['func_5401'] = func_5401
mod = relay.transform.InferType()(mod)
output = func_5401()
func_5402 = relay.Function([], output)
mutated_mod['func_5402'] = func_5402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1360_call = mod.get_global_var('func_1360')
func_1362_call = mutated_mod.get_global_var('func_1362')
call_5443 = relay.TupleGetItem(func_1360_call(), 0)
call_5444 = relay.TupleGetItem(func_1362_call(), 0)
func_3868_call = mod.get_global_var('func_3868')
func_3876_call = mutated_mod.get_global_var('func_3876')
const_5467 = relay.const([2.699250,-3.209509,9.160892,-1.682423,-4.724533,-1.617334,0.312041,-4.035556,-9.582178,-3.317061,9.871173,8.257351,7.620951,-1.715289,-0.880874,-8.785509,-1.240334,5.152311,1.019986,-3.761284,-0.584094,9.721218,-2.855054,5.819780,2.544414,-2.579692,-6.324665,-6.012546,-0.008022,6.950431,-9.583296,-5.301503,-4.289213,-0.231200,-5.128921,9.957794,0.686618,-1.939614,4.739549,-2.782943,7.915858,7.399731,5.667789,4.185647,-0.245742,-3.166451,7.384000,-4.877359,-4.100917,1.216607,3.152801,3.540596,3.602527,-9.306932,5.273390,6.258230,-3.027379,8.645290,-3.651682,6.499061,9.100213,6.458807,3.191906,-8.978110,-9.064992,-9.045133,5.445981,6.620231,5.716718,4.295563,-5.252886,-4.079068,4.041610,-8.622683,-9.108880,5.692028,6.716568,-1.981154,-2.350409,-6.308231,-9.428446,-6.315945,3.930518,-3.933974,3.092374,2.915995,4.547983,-5.950272,9.456894,-4.268323,7.375589,9.889866,5.943115,2.770776,8.937644,-5.040336,-3.256837,5.398518,-2.706312,-8.523159,5.692549,-3.067879,6.433041,8.462572,1.639130,7.296615,7.933208,-8.184219,-3.801249,-7.890411,8.487370,-9.061241,0.850085,0.237097,1.077476,-5.075677,-6.920402,2.180436,5.715628,-8.308448,9.532588,7.256601,2.277167,0.202339,6.304995,0.061643,-2.979281,-0.961544,8.322280,-9.074484,-6.117626,5.725984,2.719159,-8.516165,7.229073,0.368946,-5.226711,-2.381884,-9.520309,-9.242960,6.479630,3.065565,9.677740,-8.504526,5.798417,9.103939,6.277543,-2.839242,-3.049763,6.833638,-8.104240,-3.974091,-8.287555,-6.220826,-3.115459,-3.500983,-2.206736,4.627577,-2.426848,-8.928805,-4.136548,5.037683,-5.036439,-4.690594,-1.097210,-4.424475,2.136890,-0.890155,8.030088,-2.404274,4.776745,-4.848123,-4.016872,8.674646,5.057642,2.434269,6.298679,1.647680,-0.424339,-8.059370,3.213162,5.725564,7.971738,-6.343281,-7.150884,-4.885738,-9.076340,0.517100,9.662392,7.416937,-7.015580,-4.782251,5.935679,2.260057,-8.510358,-8.941368,2.937880,-4.492590,1.389264,5.068684,4.163957,8.804187,-2.147570,8.829401,6.279086,-3.929543,1.425919,-9.697518,-4.757217,-2.959045,6.120677,2.766595,3.037573,-5.533985,-9.572516,-8.782432,3.592517,7.107573,7.877466,6.605635,1.888096,-2.523634,8.810001,7.702574,9.884964,-9.134495,8.332235,9.288082,8.711443,5.803857,3.090839,4.973432,-0.360519,1.886129,3.467410,-0.947540,-2.976116,9.878793,7.080148,-9.768927,4.264302,-3.068810,-5.489613,4.116794,1.634244,1.949508,-2.365998,5.313780,-6.881039,-3.211585,-7.594524,-4.536950,-4.847649,-7.481234,5.242524,-4.888908,5.979530,1.562991,-0.471069,4.504291,7.121659,-1.021927,8.254854,-4.117984,-1.037975,-1.016051,-8.443846,-0.834983,-0.565492,-9.396323,3.705484,-3.780887,4.808111,-5.630810,-3.606914,5.187939,-5.783484,-3.309193,-0.086332,2.706527,3.566844,0.418434,3.909825,-9.821024,-7.959604,5.793974,6.228804,-6.234679,2.576310,-7.295204,-1.727220,3.920648,-6.532702,-1.301717,4.318943,3.867092,6.429489,-0.454072,-6.529170,3.198116,9.367407,-2.871680,-0.397793,-5.178518,3.810415,-5.420672,-6.012534,5.545037,9.716030,9.927001,9.712699,8.261012,4.143143,2.255175,8.744167,-2.927089,7.099308,5.598420,7.627688,0.844791,0.480937,-0.666324,-1.448691,-1.917828,-4.932689,-3.191232,-9.811763,-1.906397,7.416025,-8.436526,-7.946138,2.964053,6.278860,-6.990679,-1.559617,-4.270196,3.492062,-2.999738,-0.467672,6.246675,-4.476044,-5.346719,7.695334,4.845972,6.517222,0.496111,-9.664587,8.583397,-2.227595,4.631333,-7.702379,-8.124798,-7.007458,3.939066,0.728422,3.310696,-5.919055,-9.005428,1.968631,-3.007006,9.581968,-1.180346,-0.559504,-3.297963,7.474045,-0.145742,1.723105,6.871583,9.329967,-2.670843,6.646773,-9.291754,8.028433,-6.079798,-2.794690,0.516104,-7.805843,-6.656757,-3.565386,3.800106,-7.201748,4.913872,-0.503212,8.360973,9.367588,-1.116909,-6.830891,-8.872640,-0.292907,-5.352134,6.734118,-7.334254,0.725217,-0.933360,0.702181,-9.372143,9.159777,8.789042,-0.536799,6.066723,-4.030194,5.754598,5.635822,6.051293,-0.863193,-8.443004,4.147091,7.725110,7.937209,-6.264669,-1.783505,-5.732060,-4.384032,5.070357,0.735695,-6.417518,3.990760,-1.705418,7.935917,-7.757642,6.280856,1.453694,1.752243,7.898463,8.240546,-0.256872,-6.240305,4.909437,-4.512331,-1.154232,-0.293527,-9.513926,-7.867038,-5.739496,-9.072970,1.351338,4.479167,-4.030864,7.572579,-1.796545,-0.720472,-6.306965,9.321320,8.000761,5.016035,9.018644,0.711501,1.022959,-0.764864,0.710148,-5.877745,-8.043420,-3.108601,-6.954352,4.549127,-2.720314,9.357501,-6.968170,-5.975137,9.045201,6.764622,2.642190,-0.327512,-2.310002,-8.199783,9.296817,-5.155873,7.914010,-4.560363,0.611134,-1.311935,5.398214,-5.526048,-9.405168,-6.253535,-2.359107,6.400335,-5.378660,-3.774988,-5.488241,-8.362907,2.299581,-0.581289,4.903505,4.113005,-1.422019,-1.565190,5.043725,3.158310,-1.884426,4.962903,-2.638326,-6.606472,-9.024186,0.916590,-1.814682,-1.732065,2.681952,-4.239037,-5.681918,6.630579,3.052865,-8.141489,-4.695273,-2.555938,4.227048,-9.655134,-6.839920,-1.947563,4.482648,-1.513446,-6.587802,-9.847166,6.892609,-5.590009,-4.429291,-3.837338,-7.619450,-1.689808,-2.362015,4.383464,6.353906,1.062410,-7.947829,-3.557684,-8.114552,0.655619,-1.640316,-3.400904,-4.660523,5.332203,-8.053548,-3.061754,-3.713746,6.450667,-6.956290,3.618157,-4.250751,6.052948,-2.465219,2.558687,-1.589830,8.558174,-7.737803,-4.912679,4.614987,4.688427,0.816980,-5.051908,-0.071504,5.249264,-3.905707,-5.058535,2.116607,1.150666,-1.933879,-3.443298,-9.889206,9.126775,4.594874,0.834483,5.545556,-1.134213,9.452587,-6.319784,2.995122,-6.942878,-7.343655,-1.768483,-3.928095,-7.203609,-6.369088,-4.470220,-0.411221,6.679413,1.220106,-4.920306,6.315594,-7.704731,8.201880,6.392743,-2.756483,-6.587437,-5.510930,-4.608305,5.888340,0.481439,-3.815667,-6.325673,2.133121,-0.071362,-0.270740,3.907634,-9.382378,-2.448345,2.951151,-8.660217,4.476233,-1.360772,1.365744,8.233932,5.525881,3.260141,-3.136731,1.337896,3.816430,-9.278621,-6.525153,-3.786340,7.492244,1.277772,-0.291959,-3.640221,-6.734133,5.186723,-7.432253,-6.170651,-8.412761,3.146956,5.628604,-4.785806,-5.785255,5.183552,0.380655,4.431711,-5.015335,2.237534,-9.742880,5.455326,-8.773367,0.681199,5.527692,6.440787,6.916876,-3.481683,1.033509,0.800824,9.680615,-7.377643,-1.497600,-1.668050,-3.452516,2.195841,5.929245,-3.462163,-8.143403,-8.831324,9.681283,4.256642,-6.313295,-3.436510,-7.248650,-6.447246,-9.323099,-0.431426,-8.599425,8.178165,-9.223849,-9.689942,2.798989,-3.351201,-9.791051,5.176645,-6.792264,-8.544434,-2.443923,-9.010628,-3.880845,9.621110,4.873891,-9.672038,-9.786600,2.992596,-8.880072,-8.751851,-1.619248,3.763520,-8.210188,-9.221807,6.746229,9.264569,8.307318,6.545924,-8.192807,-4.942603,-4.962159,-7.909011,5.662070,-4.455367,4.394398,5.773083,5.140158,-5.006493,-3.783680,-2.407664,5.813220,5.374725,8.488020,-8.882086,7.065944,1.453761,7.985934,-8.306918,2.346645,9.973806,-6.185398,-5.698135,6.559131,7.852248,-8.460331,-8.453001,9.247077,-7.906507,-5.568526,5.050443,-8.387617,3.912865,-8.452770,-7.336412,-4.855828,-4.417158,-8.417630,-8.382389,4.391781,5.162784,1.723454,8.701112,-5.142284,3.747642,-8.876630,-3.941727,-9.254079,2.546760,-0.258668,-9.768579,0.109472,9.555174,-3.231205,1.771472,2.587627,8.065871,-6.631878,3.569986,-4.203903,5.585248,7.098231,0.316526,-7.746397,-5.276176,-3.159323,4.239373,9.653941,-1.967609,1.274671,0.925587,-7.459043], dtype = "float64")#candidate|5467|(756,)|const|float64
const_5468 = relay.const([-1,7,3,-2,-3,9,4,-7,3,1,-6,1,-3,9,7,-4,-10,-10,8,-6,-2,10,-3,4,-9,-3,2,-6,-2,8,1,-6,4,6,1,-10,-8,-10,7,8,9,-1,-7,5,-2,-9,-5,-5,-2,-9,-4,-5,-1,-5,8,-4,-5,9,4,3,5,8,-8,8,-4,2,-6,-10,3,5,9,10,4,5,-1,1,-2,-5,2,10,-10,5,1,-5,3,6,9,5,3,-1,-10,-10,3,-5,-9,-4,7,-5,7,1,-9,-1,2,2,-7,10,7,-2,-5,7,1,-3,1,7,9,7,6,8,5,3,-3,1,-5,10,9,-6,-7,1,10,-5,9,-8,-1,4,4,-7,-2,-7,-1,-7,-2,-3,3,-8,-1,1,-4], dtype = "int8")#candidate|5468|(147,)|const|int8
var_5469 = relay.var("var_5469", dtype = "float64", shape = (176, 8))#candidate|5469|(176, 8)|var|float64
const_5470 = relay.const([[9.205141,3.856464,-4.093748,4.402560,-6.463571,-1.914327,-4.975623,-7.518964],[-3.814921,-8.532978,3.144353,5.968057,4.703713,0.836021,1.729359,0.053261],[1.115600,-3.714828,-5.796676,1.729255,-8.505939,-2.613686,9.554504,6.162791],[-2.070495,-0.677280,4.867253,-2.802364,7.921300,-8.880245,-9.014393,8.738060],[-8.601304,-5.013451,8.457954,4.904178,8.963278,9.080336,8.271799,-6.876281],[-5.117028,3.821928,5.152934,7.278929,-8.709148,0.997159,8.161700,-6.843333],[-9.109896,9.496332,5.372551,9.358090,-7.055068,0.553312,-6.621191,4.766790],[4.425606,-9.845556,2.162483,2.543646,9.468581,-4.041812,6.419919,2.647799],[0.320458,-7.559389,7.874391,-8.009905,-6.616905,9.648025,3.424465,8.314592],[-3.643296,3.596190,6.668346,3.165823,1.772221,-3.531561,-8.466800,7.597909],[-1.854538,-3.281465,9.784858,9.517227,1.700655,-3.662670,-1.013345,6.223669],[3.892881,-9.061776,1.372495,-4.579427,6.417824,4.536304,-0.406352,-2.609282],[-4.233266,-9.748541,3.929509,6.427389,1.410141,9.944074,-0.329425,-1.207148],[-9.754516,-1.857072,-5.073416,-0.217632,4.876518,1.449902,-4.378737,-0.072251],[6.810878,0.616720,4.986970,4.440977,-1.365928,-1.958102,4.421341,5.151262],[3.199863,8.914773,-6.284489,8.310288,1.648628,7.455114,-1.257289,3.902179],[-3.129155,-1.185946,9.928624,-6.228779,5.618909,-1.380934,5.069335,-0.019407],[-0.813715,-8.133799,1.259538,-2.408559,4.135089,7.274505,-4.948304,2.230089],[4.360115,-0.592689,3.395126,-6.804813,2.554673,4.111829,-3.195128,5.445389],[8.029912,1.223192,8.441901,1.331480,1.443530,6.236945,4.854813,0.532330],[-6.371870,-3.687826,-2.653300,-5.515578,0.905562,0.858483,7.320768,-1.640218],[-7.476300,-4.793996,-9.166294,-6.602096,-2.004922,8.020282,-2.790688,-5.079181],[-4.795109,-2.494441,6.456589,-8.480851,-6.690043,1.282844,-8.645835,-8.748751],[1.207475,-9.400886,3.443916,-0.094511,-2.968563,4.379510,-6.333478,-8.993970],[-0.963444,9.339711,1.792781,6.567963,1.086977,-9.798956,-1.729281,5.889396],[6.218269,2.230781,-3.790083,-6.727188,0.364851,-9.667965,8.890654,-3.580880],[1.016142,0.120563,3.581639,4.319797,2.323655,-6.654009,-2.341733,-1.498622],[-9.728345,-4.441422,9.541651,1.528308,2.000490,-3.028979,-4.577462,-7.584078],[-1.062290,8.275608,-1.353094,1.271679,-3.023767,-0.206012,1.607521,-3.499066],[-8.640653,-8.363533,1.774382,1.980196,5.471153,3.217633,-7.877652,-5.558449],[0.727650,3.468049,-6.530599,-9.743981,-4.508786,2.367554,0.475428,5.807497],[6.219434,2.233130,-8.464655,4.241410,-6.635578,6.550757,-8.991901,4.320509],[6.319334,-3.217668,4.387443,-2.481147,8.090965,5.268095,3.363544,-7.432303],[6.125462,2.949506,-2.318847,1.295610,7.550229,-4.311765,-6.371226,-0.235677],[-5.587761,7.185438,8.362871,0.311050,-4.944543,1.805001,-7.853193,-3.764371],[2.511555,6.850152,-7.533306,-0.328906,0.786540,7.939620,-1.707910,-6.751793],[-1.816843,7.089002,7.844791,-7.497710,1.248016,-1.731082,-8.109215,5.168216],[-0.314948,2.909026,-8.693912,2.320161,-1.401485,6.670172,-3.046006,8.551482],[-5.266750,-6.982685,-0.179858,7.046768,-8.038665,4.194072,-8.968775,-2.761160],[2.598818,2.200054,1.816784,8.630441,8.726765,-3.086922,-2.211675,4.686506],[-5.701804,4.905368,-5.612472,2.650459,-7.266437,1.608225,4.813868,1.647121],[-3.845891,-6.133622,1.523507,3.578478,6.964786,-5.962958,-5.637083,-8.381222],[0.260776,4.649379,-0.345823,-0.829484,0.219585,9.182596,7.855995,5.217515],[1.131350,2.919135,5.261259,0.077478,0.106756,7.184589,5.867794,-9.686267],[6.822751,7.962903,-4.283839,-2.292755,9.240315,8.758966,-9.061261,-9.600345],[-2.587349,9.973561,8.977947,-9.870110,-5.471022,-7.976948,4.913133,7.473656],[-8.247790,-4.366040,-8.401409,-5.448548,-2.106482,4.309980,-6.416269,-6.012439],[1.298197,-2.773182,5.166520,6.459280,-1.648337,2.038123,5.237413,-0.108858],[2.503004,-0.525611,3.703513,-8.081767,-5.415100,6.361229,8.460029,-1.169602],[4.544949,4.912701,4.451302,-1.749438,-8.659956,-3.536373,-6.023755,9.944390],[2.576973,-5.065439,-9.189218,6.135135,-5.435661,6.878161,-9.158546,-6.607772],[1.465547,-9.555658,4.909126,-2.013079,7.201506,8.176227,-2.996766,9.651465],[-3.865552,-9.256356,-4.868986,-7.378576,-0.648936,2.188037,5.384861,-1.446087],[3.943530,4.242299,-4.943598,8.278214,-4.225596,8.863012,6.741740,3.379427],[-9.438068,4.311821,5.043277,5.126146,4.968118,-3.449242,2.793974,9.719405],[-4.955355,6.914428,9.026490,-8.038866,0.179842,-5.417333,-6.991908,-5.482764],[2.697940,-0.676441,5.977809,1.470554,-1.919253,4.488698,-3.298516,-2.711406],[-4.669275,4.026268,-0.827507,4.173644,-4.313781,3.409571,5.035163,0.747799],[8.501625,9.912822,-8.587589,8.324009,2.700820,-5.354071,-8.840488,-8.963945],[-9.261411,-5.768008,8.973193,-9.775210,6.626167,-0.156805,7.587895,6.718619],[6.199553,-5.424843,1.288926,-4.058085,-6.679081,5.747774,-5.149949,0.954858],[0.489285,3.141269,-9.504915,-0.884225,6.765344,-1.664714,1.070728,0.970588],[1.176651,-7.234357,-8.945020,8.982828,5.210075,3.770067,-5.696974,-8.601423],[-9.995753,-1.951031,6.446824,-3.692968,4.155304,9.536190,-3.262319,-5.433188],[-5.203104,3.104127,5.301256,-7.794365,6.351352,-3.488271,-5.057778,3.326814],[4.112271,8.313687,2.788670,4.662545,3.118748,8.871232,-6.669988,0.281904],[-3.741241,3.026033,9.179565,-4.804112,5.202759,-6.848362,1.671346,-8.198823],[6.122485,7.667843,5.054691,6.802205,5.480233,-2.355821,-3.655857,5.149797],[-7.051154,4.120947,-1.656048,-3.894038,-7.896414,4.308308,2.215249,-0.852346],[-9.850249,6.359741,2.132202,-8.032484,9.254434,-4.659225,-9.986886,-0.552868],[-5.303144,-0.144080,6.165193,-1.919206,5.906456,8.682770,7.911084,9.631828],[8.104521,7.732117,7.618330,8.077037,-2.017993,4.631211,5.650348,-6.623345]], dtype = "float64")#candidate|5470|(72, 8)|const|float64
const_5471 = relay.const([8.363075,-0.556471,8.592607,3.106339,-0.304355,-4.114174,8.760437,-1.398562,0.423957,8.459047,6.013278,-1.244785,-2.886660,-9.960770,6.607135,-5.322007,4.330970,7.681732,-0.402513,5.212238,6.090125,-8.377487,7.883998,8.138914,5.859583,-0.035187,1.741667,8.447645,7.343725,2.026842,5.367894,-8.954134,1.607646,8.338777,-2.778659,-1.272155,-6.782267,9.495197,2.362950,-8.736026,5.015869,7.565602,5.855147,4.140265,-6.612755,8.850114,-3.584452,-8.463693,9.316801,-4.954125,-5.923625,6.491628,8.819542,-3.407140,3.608715,4.999644,2.857578,-5.986856,-8.869939,-9.427702,-4.352977,-7.520819,9.270964,-8.186228,-9.698678,-6.384419,0.130360,3.278895,-1.001555,1.003853,-7.793487,8.991872,1.729248,-0.221015,0.054842,-3.966166,-3.661538,-9.942065,1.790172,-2.879769,3.980965,-7.466616,-3.663608,-3.663377,0.389632,-4.133623,-4.165153,-9.202448,3.734263,8.231071,3.682710,5.932576,-9.462961,3.579949,-8.433889,5.157862,-0.559147,0.533612,6.760555,-8.783475,6.250215,-9.624789,-8.925957,-3.312493,1.029911,-8.999697,9.853192,-8.192755,3.992239,-2.312734,3.244728,-0.881950,3.950007,-1.961676,4.931775,-0.555152,-6.746359,-3.629394,4.116174,-7.186080,8.326007,9.221500,-1.302418,-7.477183,7.697830,-3.425919,8.404485,-9.601471,-9.458463,9.941135,1.902073,-7.109364,5.659099,-5.539225,2.270565,0.509205,4.383099,-7.765146,1.336653,-2.636275,8.584215,3.818718,9.018183,9.251949,6.123267,3.784820,-3.953856,-1.282001,-3.371887,-3.094019,2.361399,-1.572889,-8.584493,4.739186,-1.860539,-5.504115,-1.696361,-7.246898,-7.171151,6.171002,-7.933880,-6.050574,-5.005658,-4.431847,-8.086292,4.039726,6.013876,-0.225528,-2.545508,3.080147,6.629171,-6.973515,0.420757,9.089222,-5.960788,6.212963,0.292038,-6.015266,-3.406728,1.482404,1.383836,8.024435,-8.507801,5.602159,7.984214,0.389232,-2.585942,-2.051001,-7.543328,6.802386,-7.682977,-8.294064,8.290946,5.417817,2.956814,-7.671308,8.923865,9.859655,8.121974,-0.317432,5.090825,-8.088800,7.121835,-0.493176,-9.948332,2.340785,-1.221808,7.891550,-8.968974,-4.544267,4.901246,-1.049441,-8.171675,-0.811738,-4.678994,-5.252057,6.015947,-5.690285,2.589254,-7.509297,-6.966438,-0.881296,6.504204,-1.467139,-6.347102,-3.386650,5.867744,9.444501,-5.871404,-2.341873,-3.428850,4.151961,4.554824,2.112815,-7.682067,-1.855523,4.418751,7.582734,-0.405940,-9.546439,-0.272870,-3.049226,1.885012,1.352736,-2.126485,3.214971,-3.996285,-9.914442,-0.194657,-1.067424,7.862558,2.401491,3.387386,-7.470778,3.233935,9.704282,1.927970,4.468560,6.346946,-8.439421,-9.608843,-1.061613,-1.326043,-5.499959,-7.432868,3.614266,-1.093485,-4.097896,-6.062618,1.726595,7.634823,1.176963,8.378590,-4.010698,-7.504818,-8.861306,-2.029630,2.764952,6.440568,4.967158,0.761425,2.393913,2.581380,6.856549,-7.434471,3.473300,8.088497,-3.858337,-6.655016,8.847329,-6.138242,5.325062,8.716643,7.307396,0.760118,-5.302374,-3.023488,-5.614031,-2.318274,9.333262,-6.444764,-9.698834,1.702417,-6.682485,4.115870,-4.154810,4.470098,-9.908431,0.130624,6.596498,-8.562858,8.709020,-2.925823,0.987045,9.887759,5.944625,1.524497,-9.103944,8.360744,-4.822094,-3.289310,-0.840496,3.818846,-5.172399,-3.930318,9.429949,-6.736820,7.723799,-9.562927,2.032484,2.358533,5.124232,-2.989416,-6.824254,8.315052,6.375032,8.138265,1.040801,-3.150512,4.064309,-5.376011,-5.937295,5.877418,0.964609,-8.274696,-7.791875,5.032565,-5.606458,6.232358,2.142790,-3.693679,-5.541782,-5.118538,-9.251077,-0.955550,-3.035733,-1.642175,4.797150,-8.668155,6.239118,4.912679,8.824463,3.066432,-4.101906,-0.125086,0.081820,-3.874062,-2.657101,-0.519047,-8.996885,3.736020,2.627298,5.085598,0.341382,4.340283,-6.855225,-2.805478,2.144828,1.255051,-7.215931,-4.525433,-4.624548,-2.790255,8.921643,3.255987,2.085657,-0.679556,-4.311777,2.951722,-2.675467,-9.797226,6.091191,-9.918786,4.604298,-1.499437,9.515165,7.507235,-0.784198,-9.344777,-1.488057,9.843341,-0.152292,-4.336500,2.464281,4.348912,-0.519240,-9.685171,-2.536266,1.939349,-2.414054,-6.143061,-1.172752,-9.732877,2.877158,-7.177813,-2.565734,8.980593,-1.328485,-4.045313,3.889816,7.606221,7.222517,4.429256,-4.718481,0.205336,-9.796417,-6.277198,-0.540036,4.324782,0.070494,7.427624,2.232468,8.802433,1.585552,3.140983,5.244114,-8.025426,-8.967836,-7.597628,-6.855742,-5.404072,4.848604,3.279769,8.271498,3.203024,7.291367,-7.090677,4.687218,-9.646034,6.243405,8.166541,-7.576544,-6.637018,7.379268,1.341480,-0.282093,4.056751,-8.116805,8.057300,8.246749,-1.693094,-2.582468,-5.581161,-2.173188,-4.597715,-6.010724,-1.130254,2.741917,-0.297370,-7.470466,8.333043,8.503781,-9.283291,8.086697,7.290152,5.180441,4.005682,-8.340485,8.446782,-8.516315,8.559039,-3.222150,7.292967,-9.672284,-4.037976,6.753084,3.673032,-7.173499,-6.348698,-4.798866,0.863047,-6.070445,9.223482,-2.636829,4.485176,-7.744818,7.418122,3.219719,-0.348460,-7.086539,-6.824618,-5.232899,-9.476716,1.368824,4.066037,-2.214044,1.087898,6.602570,-7.116313,-1.334636,9.010784,-7.497114,3.233505,5.898539,8.190001,-5.250944,-2.638637,6.908622,-8.748836,3.950734,-3.360263,-1.095354,-7.897504,-0.301152,1.008664,8.057889,9.612632,6.986874,5.608295,7.304304,3.815457,-3.752545,-8.332608,-5.348701,-8.838271,-8.047556,-3.479213,5.584739,1.434680,1.696197,-2.582788,3.674478,-5.338473,-0.114399,9.394987,-3.554377,7.443947,-8.685079,-0.684705,-3.204289,1.608043,-4.722635,4.223602,-9.092031,0.311228,9.805777,-1.439866,-4.674879,-8.212018,-6.044588,-9.581672,-8.507391,7.735265,9.677925,8.102912,9.419088,7.730748,-5.766201,8.324921,2.772677,-7.241912,-8.468430,4.626063,0.823858,3.351161,3.119074,-4.118841,1.465499,2.837172,-2.359552,7.158205,0.310466,1.854164,1.048566,-3.480053,4.888882,-7.642355,-6.591241,-3.308998,2.103258,0.572850,6.424078,-3.213502,-0.740795,-1.406010,-3.839883,-4.871665,-9.603014,-7.504241,-8.518553,-8.465503,3.935406,6.674510,-5.879298,-0.738659,8.658951,-0.945759,2.458430,0.397088,-9.226930,-7.029424,5.441486,-6.538780,-2.877723,-1.046540,-1.846549,4.816307,2.606243,8.558563,-1.855236,1.139928,0.716712,5.591433,-0.655220,-2.754623,-1.115212,9.493261,3.631887,8.535080,-2.035352,-2.176271,-0.512569,9.492958,-6.133388,9.976235,-9.363663,-3.747589,-9.121742,-3.943447,0.636394,-3.572936,-8.190652,4.692530,4.999951,6.334178,-6.334046,-9.321020,6.345892,-7.819600,-0.991174,0.214665,-4.585435,1.040777,1.257884,1.851827,-0.472979,-8.961251,-7.028866,4.134985,-4.280768,7.394493,-8.596489,2.770596,2.095451,-4.825480,1.476713,-5.579086,3.903657,-5.553518,-6.446803,7.325361,1.461721,9.213457,-5.000863,-0.186787,7.903241,6.476385,3.964691,-9.068100,3.216675,7.969801,-4.075962,-4.951877,0.292782,-2.496924,0.459751,-7.603632,0.795214,-5.801029,-6.975398,-7.315640,-5.205700,-4.102716,-3.650220,0.774510,6.095338,-7.820251,-1.606370,5.136445,1.078971,0.613201,-9.340585,-8.371217,8.697880,8.426509,4.906818,-8.218436,5.616159,5.855217,3.484457,1.595656,2.809906,-3.334495,2.783595,1.830147,0.112691,9.898965,3.913207,0.645952,-9.452106,-2.662444,-1.735596,2.656473,1.687452,8.677730,5.521606,8.429016,-1.134554,5.522813,-6.642479,-8.930431,3.100824,1.362768,9.827654,-4.212213,0.506322,6.732700,6.099273,4.898780,-7.670293,9.278516,-8.639645,-9.433640,-8.338972,-6.884785,8.248667,-5.453051,-8.971799,0.476123,-1.721902,7.770176,-4.801845,0.371045,0.077562,5.526936,5.475413,-9.812769,5.323462,-7.318036,-8.778663,-8.338074,7.003284,-6.343150,-9.870967,-0.693559,6.102650,-0.209299,-3.670595], dtype = "float64")#candidate|5471|(768,)|const|float64
const_5472 = relay.const([5.774072,2.597641,-2.584028,0.289217,-8.965924,6.525004,3.804280,9.312950,-7.788521,7.759461,-6.385703,-5.999238,-1.199121,-4.351569,-7.172098,-8.171232,-3.717111,9.254936,1.080089,8.524707,-8.533496,-7.851739,-7.448777,-6.629018,-0.393241,9.201223,-5.573512,5.690697,-6.117224,7.024321,1.388467,0.687174,0.599488,-7.799230,9.440418,4.438452,-2.979791,6.893870,6.826504,2.110920,1.710742,9.020349,-4.623740,-2.617349,-8.186965,-1.468628,-9.174815,-9.141750,-7.459849,-8.018434,-7.111128,-7.717363,5.856990,9.134951,9.010171,-1.674347,0.264545,-7.985593,8.435701,7.735060,-2.252150,6.183616,6.591202,5.441480,1.828694,1.629755,1.999749,-5.246490,6.617516,1.688594,9.168754,9.656323,5.518665,-6.987396,-4.703574,8.136344,6.274116,7.000303,-0.944795,9.052144,-8.219861,5.229400,-7.546274,3.576520,-1.762324,-8.688525,-3.048874,-6.214577,4.242266,-3.065056,-1.278848,0.371700,8.374823,-5.714211,6.838887,8.489297,-4.463157,3.394584,-9.536987,-7.462422,6.913031,-5.161764,-6.102267,-9.136395,-7.235129,-6.294049,-7.943580,-6.754932,-3.006674,8.801813,-8.937628,-0.966687,6.544414,1.050804,-7.368089,-4.476716,-2.131691,6.449415,-4.883433,1.698176,0.439697,4.222279,4.232808,6.991032,5.369496,3.523997,8.409100,-4.677206,9.830546,-8.771314,-1.168198,4.465195,-2.982473,9.769070,-5.557882,6.243456,-4.329677,1.313546,-7.487399,-0.521366,9.268152,-6.572713,0.416639,-4.105873,-3.736276,-7.960140,3.775018,-3.379843,-0.764666,-5.848516,-0.060265,-8.587950,8.658822,-6.676617,-7.885667,9.003238,-2.180145,-5.422423,-0.763654,-1.811899,-8.111442,8.364300,-4.005309,0.215433,-2.641201,-6.609980,4.189708,4.918203,-0.241880,-5.326031,-0.471079,7.047276,7.022571,-7.641096,-2.060489,8.669266,8.693760,-4.822079,-9.270776,0.959405,-9.842764,5.066376,-5.766188,-1.349184,-5.483504,-3.294312,-2.777756,4.634624,7.603107,1.638415,-9.129097,-2.920893,-1.758706,0.094702,-3.469894,1.327073,-3.550881,-3.614753,0.862242,-8.285430,-2.977734,4.601295,-1.218199,-0.603733,-2.319642,1.265222,-5.743976,2.499770,-4.085998,3.451853,1.394397,7.707806,5.830643,-3.668814,-4.937966,-2.401555,4.049538,1.502514,-4.425790,-3.761384,-8.308298,9.806482,6.098512,9.944743,-5.351932,0.917598,2.996530,1.949738,-1.159158,2.465373,-6.448035,9.279331,4.405604,5.822620,1.033532,6.116116,5.866714,-6.733660,3.717986,2.411351,9.747908,5.700219,0.172199,3.635359,-1.834233,2.976296,9.980548,6.452282,3.542615,-2.655813,-9.407681,-9.175625,9.932012,-0.443653,-1.871746,-3.053971,-9.141166,-0.271487,-0.725992,-8.093840,1.817189,-8.841396,-7.068071,2.287739,-7.798903,-3.399660,2.880362,3.576891,-4.113301,2.902745,0.841828,-9.684436,3.750017,6.841406,-8.351313,6.087158,2.685326,-3.658209,6.202251,-3.781052,-5.128994,-6.525672,3.065734,-1.712962,7.388482,3.504997,4.882234,6.874392,-8.337995,-8.647778,-7.214812,-6.656697,3.802473,4.793706,4.939606,1.288921,9.950314,7.749753,0.467522,-7.130422,-2.772408,6.559858,9.279885,-8.230031,9.885306,-8.860477,-0.631306,-3.628239,-0.613596,-3.827805,5.792386,0.977309,3.297112,0.729943,-8.020845,-6.498554,7.874393,-0.168612,-1.792534,4.185610,9.606443,8.737607,-8.935127,-3.479436,3.701937,-5.389113,-5.192259,4.629063,7.937703,-3.498475,-8.538075,-1.668427,-1.508850,-0.389964,7.332262,-8.404046,-4.529024,4.288842,8.598198,1.013694,-1.036338,5.799514,9.663629,7.381811,-6.265678,-9.403446,-0.738247,-4.235813,8.710762,6.535663,-1.014089,3.070983,4.284666,-5.260956,-9.127215,7.572210,4.882241,1.546451,-0.031430,1.626760,-2.141611,3.976570,-3.675528,8.491837,2.937498,4.208485,7.676618,-6.638759,1.846920,4.843131,-8.509570,-2.562886,-9.330399,-4.847040,-5.277219,0.774038,5.170161,5.186273,-4.532937,7.098285,9.795225,-2.097409,6.625529,0.276243,3.905626,2.750017,-2.692493,5.460361,4.608451,1.520505,-3.444443,4.277740,3.422381,0.383224,8.416230,4.132314,2.643120,4.696525,-4.723289,6.939365,-9.872913,7.245583,3.183894,1.199203,-8.122655,-2.251936,0.733897,-3.134747,8.660243,-7.623648,-4.930904,9.609321,9.366673,0.496418,-5.384351,0.378576,7.098233,9.336243,-6.802850,0.354814,0.045538,7.794556,0.564838,3.257530,4.938951,-1.770493,-7.102802,-2.219060,-8.830900,5.968690,-2.830681,8.213920,-0.159065,-5.938569,2.568395,0.157641,-1.132545,1.223997,2.111702,-3.984659,9.013580,-8.555656,-0.978342,8.820810,-2.751808,9.218365,-6.438269,-5.725333,0.134779,7.119477,9.172390,4.297009,5.369349,4.714311,-6.091408,8.981075,-3.613782,9.445077,-3.263162,-3.589892,1.597960,-3.610319,-6.245427,-2.425516,6.453008,6.329364,5.158999,-9.870164,8.058633,9.916168,0.948132,5.999483,-6.210125,0.120170,-2.536027,-1.260391,2.903320,2.641541,2.781208,-7.386401,4.750189,2.244934,-2.976524,0.461491,-5.673364,5.835050,6.140740,8.741433,0.881157,0.999085,-4.232904,-0.189232,-1.052287,-1.394025,6.222868,-9.085732,-5.938451,8.941655,-8.564691,-1.460712,7.040076,-2.784291,7.692921,0.008975,-9.133800,-3.127564,-5.156994,0.622673,-7.847131,-5.036285,-4.831443,-4.063141,0.805924,5.097891,-0.296804,-5.495030,-8.467229,-1.745120,-1.670107,-7.125846,-6.921880,-8.398706,2.253483,2.092382,3.244966,-2.664673,4.337696,-2.477361], dtype = "float32")#candidate|5472|(528,)|const|float32
call_5466 = relay.TupleGetItem(func_3868_call(relay.reshape(const_5467.astype('float64'), [756,]), relay.reshape(const_5468.astype('int8'), [147,]), relay.reshape(var_5469.astype('float64'), [704, 2]), relay.reshape(const_5470.astype('float64'), [576,]), relay.reshape(const_5471.astype('float64'), [768,]), relay.reshape(const_5472.astype('float32'), [528,]), ), 14)
call_5473 = relay.TupleGetItem(func_3876_call(relay.reshape(const_5467.astype('float64'), [756,]), relay.reshape(const_5468.astype('int8'), [147,]), relay.reshape(var_5469.astype('float64'), [704, 2]), relay.reshape(const_5470.astype('float64'), [576,]), relay.reshape(const_5471.astype('float64'), [768,]), relay.reshape(const_5472.astype('float32'), [528,]), ), 14)
func_3319_call = mod.get_global_var('func_3319')
func_3322_call = mutated_mod.get_global_var('func_3322')
var_5489 = relay.var("var_5489", dtype = "float64", shape = (208,))#candidate|5489|(208,)|var|float64
call_5488 = relay.TupleGetItem(func_3319_call(relay.reshape(var_5489.astype('float64'), [208,])), 0)
call_5490 = relay.TupleGetItem(func_3322_call(relay.reshape(var_5489.astype('float64'), [208,])), 0)
output = relay.Tuple([call_5443,call_5466,const_5467,const_5468,var_5469,const_5470,const_5471,const_5472,call_5488,var_5489,])
output2 = relay.Tuple([call_5444,call_5473,const_5467,const_5468,var_5469,const_5470,const_5471,const_5472,call_5490,var_5489,])
func_5492 = relay.Function([var_5469,var_5489,], output)
mod['func_5492'] = func_5492
mod = relay.transform.InferType()(mod)
mutated_mod['func_5492'] = func_5492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5492_call = mutated_mod.get_global_var('func_5492')
var_5494 = relay.var("var_5494", dtype = "float64", shape = (176, 8))#candidate|5494|(176, 8)|var|float64
var_5495 = relay.var("var_5495", dtype = "float64", shape = (208,))#candidate|5495|(208,)|var|float64
call_5493 = func_5492_call(var_5494,var_5495,)
output = call_5493
func_5496 = relay.Function([var_5494,var_5495,], output)
mutated_mod['func_5496'] = func_5496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_931_call = mod.get_global_var('func_931')
func_933_call = mutated_mod.get_global_var('func_933')
call_5550 = relay.TupleGetItem(func_931_call(), 4)
call_5551 = relay.TupleGetItem(func_933_call(), 4)
const_5556 = relay.const([[[True,False,False,False],[False,True,True,False],[True,False,True,True],[False,True,False,False],[True,True,False,True],[True,False,True,False],[False,True,True,False],[False,False,False,True],[False,True,False,True]],[[False,True,True,True],[False,False,False,False],[True,False,False,False],[False,True,True,True],[True,True,False,True],[False,True,True,True],[True,False,False,True],[True,False,False,True],[False,True,True,False]],[[True,True,False,True],[False,True,True,False],[False,True,True,True],[False,True,False,False],[False,True,True,True],[True,False,True,False],[False,True,False,False],[True,True,False,False],[False,True,True,False]],[[False,True,False,False],[False,False,True,False],[True,True,False,False],[False,False,True,False],[False,False,False,False],[False,False,True,True],[True,True,True,False],[False,True,False,False],[False,True,False,False]],[[True,True,False,False],[False,False,False,True],[False,False,True,False],[False,True,True,False],[False,False,True,True],[True,True,True,False],[False,False,False,False],[True,True,False,False],[False,False,False,True]],[[False,True,False,True],[True,True,True,True],[False,False,False,False],[False,True,False,False],[False,True,False,False],[True,False,False,False],[True,False,False,False],[False,True,True,True],[False,True,False,True]],[[False,True,False,False],[False,False,True,False],[False,True,False,False],[False,False,True,False],[True,True,False,False],[False,True,False,False],[False,True,True,False],[False,True,True,False],[True,True,True,True]],[[False,False,True,False],[True,False,False,True],[False,True,True,True],[True,False,False,True],[True,False,True,True],[False,True,True,False],[False,False,True,True],[True,False,False,True],[False,False,True,True]],[[False,False,False,False],[True,False,False,False],[False,False,True,True],[False,True,False,False],[False,True,True,False],[True,False,False,False],[False,False,False,False],[False,True,True,False],[True,True,True,True]],[[True,True,True,True],[True,True,False,True],[False,False,False,False],[True,True,False,False],[True,False,True,True],[True,True,True,True],[False,False,False,False],[True,True,True,True],[False,False,False,True]],[[True,True,False,True],[True,False,True,True],[True,False,True,False],[False,False,True,True],[True,False,True,False],[False,True,False,False],[False,True,True,False],[True,True,True,True],[False,True,False,False]],[[False,False,True,True],[False,False,False,False],[True,True,False,False],[False,True,False,False],[False,False,False,False],[True,True,False,True],[True,True,False,True],[False,False,True,False],[False,False,False,False]]], dtype = "bool")#candidate|5556|(12, 9, 4)|const|bool
bop_5557 = relay.logical_xor(call_5550.astype('int32'), const_5556.astype('int32')) # shape=(12, 9, 4)
bop_5560 = relay.logical_xor(call_5551.astype('int32'), const_5556.astype('int32')) # shape=(12, 9, 4)
output = bop_5557
output2 = bop_5560
func_5575 = relay.Function([], output)
mod['func_5575'] = func_5575
mod = relay.transform.InferType()(mod)
output = func_5575()
func_5576 = relay.Function([], output)
mutated_mod['func_5576'] = func_5576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4432_call = mod.get_global_var('func_4432')
func_4433_call = mutated_mod.get_global_var('func_4433')
call_5592 = func_4432_call()
call_5593 = func_4432_call()
const_5607 = relay.const([[[-4,-4,-5,7],[-9,-4,1,1],[-8,-3,7,9],[2,9,-3,2],[7,10,-4,7],[-1,-10,-9,-6],[10,-6,-9,-1],[9,3,-8,-9],[2,8,6,9]],[[-6,-4,4,4],[7,-10,-6,-9],[2,5,8,6],[-5,6,-2,1],[-6,5,-4,3],[-8,2,-6,9],[5,-10,1,-5],[-4,10,-7,-8],[-7,-2,-1,-4]],[[8,4,-7,5],[-10,8,-3,-10],[5,-5,-4,-7],[5,3,6,6],[5,1,-7,-5],[1,8,6,5],[1,-6,-2,-7],[-6,-4,10,-6],[1,7,4,-5]],[[-5,1,5,3],[-5,-1,5,7],[-8,2,2,-3],[7,-1,1,-6],[-10,-8,-4,-9],[1,7,7,7],[-6,5,9,10],[-7,-5,-6,-7],[-9,-9,5,3]]], dtype = "int32")#candidate|5607|(4, 9, 4)|const|int32
bop_5608 = relay.bitwise_xor(call_5592.astype('int64'), const_5607.astype('int64')) # shape=(4, 9, 4)
bop_5611 = relay.bitwise_xor(call_5593.astype('int64'), const_5607.astype('int64')) # shape=(4, 9, 4)
output = bop_5608
output2 = bop_5611
func_5620 = relay.Function([], output)
mod['func_5620'] = func_5620
mod = relay.transform.InferType()(mod)
mutated_mod['func_5620'] = func_5620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5620_call = mutated_mod.get_global_var('func_5620')
call_5621 = func_5620_call()
output = call_5621
func_5622 = relay.Function([], output)
mutated_mod['func_5622'] = func_5622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4432_call = mod.get_global_var('func_4432')
func_4433_call = mutated_mod.get_global_var('func_4433')
call_5640 = func_4432_call()
call_5641 = func_4432_call()
func_578_call = mod.get_global_var('func_578')
func_580_call = mutated_mod.get_global_var('func_580')
call_5644 = func_578_call()
call_5645 = func_578_call()
func_352_call = mod.get_global_var('func_352')
func_355_call = mutated_mod.get_global_var('func_355')
var_5652 = relay.var("var_5652", dtype = "float32", shape = (616, 2))#candidate|5652|(616, 2)|var|float32
call_5651 = func_352_call(relay.reshape(var_5652.astype('float32'), [11, 8, 14]))
call_5653 = func_352_call(relay.reshape(var_5652.astype('float32'), [11, 8, 14]))
output = relay.Tuple([call_5640,call_5644,call_5651,var_5652,])
output2 = relay.Tuple([call_5641,call_5645,call_5653,var_5652,])
func_5654 = relay.Function([var_5652,], output)
mod['func_5654'] = func_5654
mod = relay.transform.InferType()(mod)
mutated_mod['func_5654'] = func_5654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5655 = relay.var("var_5655", dtype = "float32", shape = (616, 2))#candidate|5655|(616, 2)|var|float32
func_5654_call = mutated_mod.get_global_var('func_5654')
call_5656 = func_5654_call(var_5655)
output = call_5656
func_5657 = relay.Function([var_5655], output)
mutated_mod['func_5657'] = func_5657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1360_call = mod.get_global_var('func_1360')
func_1362_call = mutated_mod.get_global_var('func_1362')
call_5668 = relay.TupleGetItem(func_1360_call(), 0)
call_5669 = relay.TupleGetItem(func_1362_call(), 0)
output = relay.Tuple([call_5668,])
output2 = relay.Tuple([call_5669,])
func_5675 = relay.Function([], output)
mod['func_5675'] = func_5675
mod = relay.transform.InferType()(mod)
mutated_mod['func_5675'] = func_5675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5675_call = mutated_mod.get_global_var('func_5675')
call_5676 = func_5675_call()
output = call_5676
func_5677 = relay.Function([], output)
mutated_mod['func_5677'] = func_5677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5232_call = mod.get_global_var('func_5232')
func_5233_call = mutated_mod.get_global_var('func_5233')
call_5687 = relay.TupleGetItem(func_5232_call(), 0)
call_5688 = relay.TupleGetItem(func_5233_call(), 0)
output = call_5687
output2 = call_5688
func_5689 = relay.Function([], output)
mod['func_5689'] = func_5689
mod = relay.transform.InferType()(mod)
output = func_5689()
func_5690 = relay.Function([], output)
mutated_mod['func_5690'] = func_5690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1360_call = mod.get_global_var('func_1360')
func_1362_call = mutated_mod.get_global_var('func_1362')
call_5716 = relay.TupleGetItem(func_1360_call(), 0)
call_5717 = relay.TupleGetItem(func_1362_call(), 0)
func_2325_call = mod.get_global_var('func_2325')
func_2326_call = mutated_mod.get_global_var('func_2326')
call_5718 = relay.TupleGetItem(func_2325_call(), 3)
call_5719 = relay.TupleGetItem(func_2326_call(), 3)
output = relay.Tuple([call_5716,call_5718,])
output2 = relay.Tuple([call_5717,call_5719,])
func_5723 = relay.Function([], output)
mod['func_5723'] = func_5723
mod = relay.transform.InferType()(mod)
mutated_mod['func_5723'] = func_5723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5723_call = mutated_mod.get_global_var('func_5723')
call_5724 = func_5723_call()
output = call_5724
func_5725 = relay.Function([], output)
mutated_mod['func_5725'] = func_5725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5689_call = mod.get_global_var('func_5689')
func_5690_call = mutated_mod.get_global_var('func_5690')
call_5737 = func_5689_call()
call_5738 = func_5689_call()
var_5751 = relay.var("var_5751", dtype = "float64", shape = (264,))#candidate|5751|(264,)|var|float64
bop_5752 = relay.right_shift(call_5737.astype('int32'), relay.reshape(var_5751.astype('int32'), relay.shape_of(call_5737))) # shape=(264,)
bop_5755 = relay.right_shift(call_5738.astype('int32'), relay.reshape(var_5751.astype('int32'), relay.shape_of(call_5738))) # shape=(264,)
uop_5759 = relay.cos(bop_5752.astype('float64')) # shape=(264,)
uop_5761 = relay.cos(bop_5755.astype('float64')) # shape=(264,)
func_4818_call = mod.get_global_var('func_4818')
func_4820_call = mutated_mod.get_global_var('func_4820')
call_5762 = relay.TupleGetItem(func_4818_call(), 0)
call_5763 = relay.TupleGetItem(func_4820_call(), 0)
bop_5776 = relay.not_equal(var_5751.astype('bool'), relay.reshape(uop_5759.astype('bool'), relay.shape_of(var_5751))) # shape=(264,)
bop_5779 = relay.not_equal(var_5751.astype('bool'), relay.reshape(uop_5761.astype('bool'), relay.shape_of(var_5751))) # shape=(264,)
func_1698_call = mod.get_global_var('func_1698')
func_1702_call = mutated_mod.get_global_var('func_1702')
const_5783 = relay.const([8.760494,0.322903,4.185422,-4.067975,-3.386454,9.002701,-4.740687,5.019514,-0.573902,8.209427,-5.207162,4.660249,-8.927894,-4.368738,-3.004461,3.794255,-0.605169,6.701892,8.526398,3.352312,9.168696,8.625326,7.038598,8.997457,-9.115742,7.544115,-6.690173,-4.637213,2.678980,2.988820,-6.762079,8.857804,6.807735,-3.565928,6.614105,-6.469896,-9.864610,-0.950185,-4.631147,9.155965,4.930916,5.073848,5.636183,-4.766504,-7.555125,4.983480,-9.097880,0.787098,0.950086,-1.515104,-9.375900,6.503665,6.038159,-8.927078,1.934796,-6.805142,-7.422207,9.717479,-5.685532,0.751451,7.157275,5.909463,1.037267,5.332886,-6.407966,9.808661,-3.831584,7.230175,2.182501,7.372067,0.895174,1.651151,8.367058,0.652219,-2.771064,3.145061,4.590241,2.690708,3.878195,-2.549239,4.759255,-1.301628,-4.487745,5.762446,2.523093,0.046940,-3.368665,5.524456,7.419724,1.248087,2.444590,7.455302,3.763095,4.155479,5.841677,-1.077950,-9.214085,-3.170061,-8.671820,-0.591559,-5.594756,-1.120616,-1.636799,-6.215283,3.709926,8.227501,-1.198108,1.000277,7.647380,1.866937,-0.600149,8.750652,-6.865829,-5.001643,4.903761,2.270925,-4.688142,3.073069,4.944634,-9.908926,1.615470,9.205943,-0.093066,-6.350455,7.619965,-2.235309,3.095638,-4.167015,4.223787,8.273000,7.063040,-0.640081,-4.816175,-0.964260,1.725829,-9.631370,-8.640225,1.010705,2.328807,9.508260,7.840027,-5.670545,4.052925,-3.280866,7.645562,-7.543164,-0.071327,-8.524774,-5.625678,-8.416300,8.135048,-5.427020,-7.597393,-8.466472,8.869337,9.953829,0.509243,-6.064663,-8.895788,7.594753,-7.645831,5.037208,-0.690011,1.576957,-1.615526,3.770994,6.293268,-2.367069], dtype = "float64")#candidate|5783|(168,)|const|float64
const_5784 = relay.const([-5.088350,3.449449,-6.027776,-5.723685,-4.301258,4.102237,2.077729,-3.381018,-9.623440,-8.312737,8.819404,9.474933,-3.690168,2.405257,-6.728505,-7.864665,0.202407,1.434829,3.825869,-4.192349,9.242054,-6.589610,-5.216510,3.936068,4.072790,-5.581715,0.824332,5.674492,9.681204,8.280846,5.737520,-3.232975,3.425121,-7.802684,4.101962,-3.045938,-0.773997,-5.677662,0.292129,-4.939385,9.209059,-4.140931,-1.879217,-2.277001,-4.277661,1.485000,-3.253782,-4.771846,0.984234,-6.529709,6.938969,-1.754920,-1.908202,6.823096,-2.185108,-0.115003,-4.349373,-8.895740,-4.408959,-8.015776,-4.967499,-1.230049,6.361710,-4.814896,5.131113,1.296494,3.498902,7.868062,-7.765053,-9.834107,-8.302955,5.343249,1.516836,7.087922,-9.646638,-9.976470,3.310432,3.094188,6.313370,-6.894827,4.551633,6.007502,6.881916,-6.511423,8.655644,-8.094829,3.233037,-4.578573,0.355132,-0.475859,2.305179,-9.440947,6.434707,5.992477,2.921085,7.343945,-9.135721,3.168268,5.896307,2.895927,-6.407603,-6.163803,2.344905,-9.148859,-6.192493,0.757754,0.046257,8.990263,7.510828,8.517633,-1.383152,6.885280,-2.160717,-7.308844,-3.345504,-3.281442,1.322919,-9.495658,-9.619249,3.073681,7.527063,-2.225219,-1.597359,0.926599,0.798674,-2.150426,-1.358591,-5.500778,-8.395232,-6.459945,-3.326791,-3.119624,-6.255882,8.303636,7.787152,2.875569,6.884895,-3.829163,7.856292,8.777198,-4.876981,-1.275356,-5.455391,1.865240,4.764086,1.480828,8.026993,7.893102,9.506905,-0.892021,8.616480,3.141746,7.915150,-7.436333,-5.278246,3.646910,0.649437,3.881763,-0.465670,8.786947,-1.597462,-4.205159,-3.017767,4.658866,-2.497448,-1.831685,-4.507324,-1.642619,0.618053,-1.937047,-3.006493,4.379956,-3.690930,6.387232,6.947013,-6.840063,-3.951868,7.602624,3.070203,-0.359497,-1.113022,4.681156,-0.244065,5.656791,4.550389,4.817158,6.133451,7.238054,5.524561,6.958521,0.957964,4.874164,-7.039217,-1.881828,0.300389,2.359106,-0.649459,-2.052933,-9.620618,-5.686745,-7.404150,9.386956,-9.284928,5.040018,-3.596601,4.743714,-4.219919,2.685676,3.507320,-9.985097,-6.564086,3.252010,6.195001,9.467086,2.855557,7.481955,-3.961260,0.910889,4.349152,-8.097673,6.624144,-0.057269,-1.586343,-6.113235,7.725503,8.933997,-0.400850,-9.472627,-4.053382,9.647209,-6.528273,4.767629,-6.172487,2.957660,4.501168,9.271956,9.855460,8.415036,3.798687,-7.753812,-0.760145,-4.258446,-3.167303,-0.893851,-3.505851,-1.415442,-7.569797,3.235860,-4.515902,3.210629,1.032125,9.587451,-6.368519,-5.153329,-6.077575,-7.641914,-5.354474,-3.249044,-4.449381,-6.315215,-3.217634,0.825555,-0.329242,1.433049,7.436046,7.878104,2.640493,-8.517838,1.250201,1.391962,3.410683,-5.767861,-3.966798,-2.101732,-6.745065,-9.054993,9.033170,9.936124,-2.897787,-2.140189,0.671844,-3.616342,-3.851617,-5.813560,-1.313245,-8.210351,-4.498626,0.648646,8.623575,9.784603,-8.161544,-6.304725,7.555449,-1.224917,0.767406,2.026610,-7.462909,2.373709,-8.385269,-0.654505,-5.814524,-0.476280,3.017838,0.221701,3.763868,-2.730020,-7.572479,5.619965,6.998927,-2.518436,1.688828,1.561672,4.303559,-6.199391,2.430187,-0.240973,2.349686,-4.869223,5.014297,5.067481,-7.209893,-9.476565,0.369222,-0.569511,9.480952,8.270448,-5.614522,-5.327630,3.482693,-3.345817,7.634842,-7.109154,4.175101,-7.092386,3.968002,-6.286821,1.239448,-3.169653,-6.656129,7.101481,1.367095,-1.252060,-5.362704,-6.243054,-5.966355,-5.159725,5.868555,-5.664975,4.578854,8.091683,8.415740,-2.547954,6.423521,2.165836,8.099935,4.854281,1.867330,-5.452409,0.243635,0.432933,9.218104,7.130489,4.966920,-8.913931,-9.031285,0.614374,9.453480,7.195166,-5.795677,-4.935398,9.956643,4.365270,-5.334479,-7.257860,-6.708048,7.428724,7.123859,-2.040086,-7.917396,6.536686,7.232289,-5.835073,-0.073506,4.426335,-0.514657,-9.720204,5.212450,-3.214083,-3.992900,7.060295,9.355294,-5.183742,-5.071360,6.937409,4.268905,5.470040,2.196677,6.314054,7.413227,-3.818815,7.281544,-7.345661,-1.066317,-8.343753,4.819334,2.366698,-4.133292,-9.750692,2.588916,2.730578,-0.226710,8.911193,8.380103,-3.591256,7.175750,-3.719460,3.856455,5.707159,-7.390417,-8.236538,-3.178960,-9.448932,-3.602524,4.563581,-6.505418,-8.002809,2.182397,-2.616827,2.251508,-3.693752,7.424685,7.497455,9.270138,8.875769,-5.665137,8.488047,1.656892,5.528491,-0.883274,6.825441,8.678658,-3.450369,5.527087,8.227260,4.301069,4.308997,9.189155,3.602874,-1.930642,-2.377059,3.493629,0.727197,8.177395,-4.802355,5.746752,-3.644226,6.094479,1.157447,5.129923,5.751074,-1.825732,9.949946,9.835517,-3.369917,4.491620,-0.505388,6.666702,-1.124151,-6.485036,-9.810200,-8.257884,9.892002,0.400008,7.792908,7.718373,2.035045,7.925345,8.909600,-3.691783,-4.754333], dtype = "float64")#candidate|5784|(480,)|const|float64
var_5785 = relay.var("var_5785", dtype = "float32", shape = (1, 975))#candidate|5785|(1, 975)|var|float32
call_5782 = relay.TupleGetItem(func_1698_call(relay.reshape(const_5783.astype('float64'), [8, 3, 7]), relay.reshape(const_5784.astype('float64'), [480,]), relay.reshape(var_5785.astype('float32'), [975,]), ), 2)
call_5786 = relay.TupleGetItem(func_1702_call(relay.reshape(const_5783.astype('float64'), [8, 3, 7]), relay.reshape(const_5784.astype('float64'), [480,]), relay.reshape(var_5785.astype('float32'), [975,]), ), 2)
func_2001_call = mod.get_global_var('func_2001')
func_2002_call = mutated_mod.get_global_var('func_2002')
call_5787 = func_2001_call()
call_5788 = func_2001_call()
func_4643_call = mod.get_global_var('func_4643')
func_4644_call = mutated_mod.get_global_var('func_4644')
call_5793 = relay.TupleGetItem(func_4643_call(), 0)
call_5794 = relay.TupleGetItem(func_4644_call(), 0)
output = relay.Tuple([call_5762,bop_5776,call_5782,const_5783,const_5784,var_5785,call_5787,call_5793,])
output2 = relay.Tuple([call_5763,bop_5779,call_5786,const_5783,const_5784,var_5785,call_5788,call_5794,])
func_5805 = relay.Function([var_5751,var_5785,], output)
mod['func_5805'] = func_5805
mod = relay.transform.InferType()(mod)
mutated_mod['func_5805'] = func_5805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5805_call = mutated_mod.get_global_var('func_5805')
var_5807 = relay.var("var_5807", dtype = "float64", shape = (264,))#candidate|5807|(264,)|var|float64
var_5808 = relay.var("var_5808", dtype = "float32", shape = (1, 975))#candidate|5808|(1, 975)|var|float32
call_5806 = func_5805_call(var_5807,var_5808,)
output = call_5806
func_5809 = relay.Function([var_5807,var_5808,], output)
mutated_mod['func_5809'] = func_5809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3208_call = mod.get_global_var('func_3208')
func_3210_call = mutated_mod.get_global_var('func_3210')
call_5814 = relay.TupleGetItem(func_3208_call(), 0)
call_5815 = relay.TupleGetItem(func_3210_call(), 0)
output = call_5814
output2 = call_5815
func_5830 = relay.Function([], output)
mod['func_5830'] = func_5830
mod = relay.transform.InferType()(mod)
output = func_5830()
func_5831 = relay.Function([], output)
mutated_mod['func_5831'] = func_5831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4324_call = mutated_mod.get_global_var('func_4324')
call_5834 = relay.TupleGetItem(func_4323_call(), 0)
call_5835 = relay.TupleGetItem(func_4324_call(), 0)
func_5723_call = mod.get_global_var('func_5723')
func_5725_call = mutated_mod.get_global_var('func_5725')
call_5853 = relay.TupleGetItem(func_5723_call(), 1)
call_5854 = relay.TupleGetItem(func_5725_call(), 1)
output = relay.Tuple([call_5834,call_5853,])
output2 = relay.Tuple([call_5835,call_5854,])
func_5865 = relay.Function([], output)
mod['func_5865'] = func_5865
mod = relay.transform.InferType()(mod)
mutated_mod['func_5865'] = func_5865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5865_call = mutated_mod.get_global_var('func_5865')
call_5866 = func_5865_call()
output = call_5866
func_5867 = relay.Function([], output)
mutated_mod['func_5867'] = func_5867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1200_call = mod.get_global_var('func_1200')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_5871 = relay.TupleGetItem(func_1200_call(), 5)
call_5872 = relay.TupleGetItem(func_1201_call(), 5)
uop_5875 = relay.sin(call_5871.astype('float32')) # shape=(975,)
uop_5877 = relay.sin(call_5872.astype('float32')) # shape=(975,)
bop_5896 = relay.mod(uop_5875.astype('float64'), relay.reshape(call_5871.astype('float64'), relay.shape_of(uop_5875))) # shape=(975,)
bop_5899 = relay.mod(uop_5877.astype('float64'), relay.reshape(call_5872.astype('float64'), relay.shape_of(uop_5877))) # shape=(975,)
output = relay.Tuple([bop_5896,])
output2 = relay.Tuple([bop_5899,])
func_5910 = relay.Function([], output)
mod['func_5910'] = func_5910
mod = relay.transform.InferType()(mod)
mutated_mod['func_5910'] = func_5910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5910_call = mutated_mod.get_global_var('func_5910')
call_5911 = func_5910_call()
output = call_5911
func_5912 = relay.Function([], output)
mutated_mod['func_5912'] = func_5912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3516_call = mod.get_global_var('func_3516')
func_3518_call = mutated_mod.get_global_var('func_3518')
call_5966 = relay.TupleGetItem(func_3516_call(), 0)
call_5967 = relay.TupleGetItem(func_3518_call(), 0)
func_1948_call = mod.get_global_var('func_1948')
func_1950_call = mutated_mod.get_global_var('func_1950')
call_5983 = relay.TupleGetItem(func_1948_call(), 0)
call_5984 = relay.TupleGetItem(func_1950_call(), 0)
output = relay.Tuple([call_5966,call_5983,])
output2 = relay.Tuple([call_5967,call_5984,])
func_5992 = relay.Function([], output)
mod['func_5992'] = func_5992
mod = relay.transform.InferType()(mod)
mutated_mod['func_5992'] = func_5992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5992_call = mutated_mod.get_global_var('func_5992')
call_5993 = func_5992_call()
output = call_5993
func_5994 = relay.Function([], output)
mutated_mod['func_5994'] = func_5994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2700_call = mod.get_global_var('func_2700')
func_2701_call = mutated_mod.get_global_var('func_2701')
call_6064 = func_2700_call()
call_6065 = func_2700_call()
func_3319_call = mod.get_global_var('func_3319')
func_3322_call = mutated_mod.get_global_var('func_3322')
const_6083 = relay.const([[-0.909303,-0.577826,-1.525758,7.963775,-3.721477,3.026201,-5.499106,3.249879,0.467737,3.838327,-0.269399,5.340839,5.760246,5.797128,4.072356,8.376691,-3.578086,1.470816,6.160193,7.538357,-6.238100,-1.135457,-6.133159,7.366474,-2.284880,-9.879686,-0.912563,-3.200769,0.225911,1.472141,5.343021,-1.989599,-0.564708,-4.922393,-1.051803,9.827993,-4.184176,-1.059025,1.410129,1.761704,-8.382728,4.770788,5.103405,-0.386582,8.937334,-4.445545,-0.740679,-1.595909,-1.157874,-0.796361,-5.182749,9.517912,8.834397,1.397887,-3.185670,-6.864688,3.555136,9.877028,5.644228,2.099555,-5.879740,9.654941,-4.280017,2.529883,0.607632,6.823795,-5.072235,-2.935721,-9.885723,-1.341561,-1.542949,9.876180,-8.906453,7.934456,-7.330133,-8.267329,-4.459652,7.062744,-0.875834,9.083173,-6.035512,1.480998,2.938577,-7.297530,-1.787757,-5.833340,0.790660,-0.875386,4.917772,4.576989,-2.752429,-1.839559,-3.032261,3.951137,-8.622742,-4.510583,0.857522,0.641676,3.208169,6.950561,1.555419,5.206378,8.978910,-2.555387],[3.380427,8.978694,-5.765524,-9.764850,2.572352,5.104952,-4.612609,1.685090,6.524021,-4.187659,-5.235100,-8.491048,-7.250664,4.646137,9.558010,-4.660458,9.171127,-1.125452,8.524943,-8.232884,-4.243286,-0.817434,3.319666,8.115101,7.981648,-7.952752,2.823101,4.474737,-5.836192,9.267166,-5.307797,-1.154254,1.505967,2.069676,7.703312,-8.179747,1.421711,-6.567652,-6.203366,-0.759324,6.559801,2.903735,2.381036,-0.796631,4.553828,-4.648231,4.010462,-7.052516,4.849606,9.301153,4.071064,9.228110,0.103731,-8.697247,4.265523,6.667601,2.999833,2.174246,1.393289,-5.093345,8.687408,-1.660029,5.234383,-9.898358,9.066403,9.971106,4.872695,8.676154,-7.986535,-2.136960,-3.222662,-2.145575,-3.544895,9.683582,-8.236732,0.067410,-0.488523,-2.639842,-3.832096,-1.978034,2.646947,-1.010909,-7.921122,4.763688,7.748815,-6.993748,8.170621,4.092269,-4.441955,7.470136,-2.803453,5.173021,-4.340847,-9.520332,-5.435606,-9.148274,-1.624838,-9.861417,8.131014,7.010530,7.794861,-2.816186,1.443926,-9.263814]], dtype = "float64")#candidate|6083|(2, 104)|const|float64
call_6082 = relay.TupleGetItem(func_3319_call(relay.reshape(const_6083.astype('float64'), [208,])), 4)
call_6084 = relay.TupleGetItem(func_3322_call(relay.reshape(const_6083.astype('float64'), [208,])), 4)
func_2211_call = mod.get_global_var('func_2211')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_6091 = func_2211_call()
call_6092 = func_2211_call()
func_5114_call = mod.get_global_var('func_5114')
func_5117_call = mutated_mod.get_global_var('func_5117')
const_6096 = relay.const([5.495306,2.016305,-1.449557,-9.080472,-7.772658,6.873562,-4.998120,5.606882,5.744378,-1.713159,3.226129,7.679610,-2.166925,-3.773122,8.340365,7.806309,-8.285512,-5.555316,-3.573139,-5.730982,-2.158146,8.816173,6.003104,6.437874,-7.763867,3.970708,7.073022,4.672486,2.673495,3.464006,4.077231,7.872026,-2.510043,4.391355,-4.381527,4.127985,0.943599,-1.288841,3.566786,9.961403,3.951690,7.519941,9.408478,-0.617821,7.961699,-4.711486,9.937044,-1.736712,1.614170,-2.754418,-0.527372,-2.906085,-3.339968,-6.772504,-3.661769,3.063060,-5.630191,2.854365,1.482417,-0.948796,2.468968,-7.839344,7.299921,-4.102667,-3.783789,-2.026291,0.838181,-4.118156,0.337354,3.254398,-8.817623,-5.636135,-3.078314,0.230086,0.079113,-9.401916,-0.249370,7.734007,2.836191,-4.174719,2.653986,-3.656455,3.894694,-2.529876,-4.731618,-3.384855,2.922909,9.937900,-2.690651,6.366836,9.047308,2.318101,-0.766507,7.895948,-2.928381,7.715800,-2.258241,-7.572424,-5.427054,9.077101,0.040738,-2.665305,-1.948845,-6.826168,-4.868301,-2.498834,0.961332,8.650953,1.496011,9.448234,-6.788086,1.716317,7.960045,-3.683487,-9.807509,-2.330492,0.579472,-3.271346,-2.406533,7.433387,2.000190,-8.678912,8.450344,-0.562848,-1.401066,-3.476838,2.299175,-4.046398,-4.005526,-5.424336,-1.670301,-1.876028,2.228829,7.322352,9.305756,-0.302035,-6.998168,3.552825,-3.830367,-5.448599,9.064457,6.494840,-7.975162,6.958224,-4.828899,-8.453643,-7.439693,6.433395,4.855734,-7.955768,7.018225,6.462859,0.869757,1.061296,8.389514,4.197876,-7.564186,5.479297,-2.695926,6.654496,-9.700454,2.833909,-0.217625,7.124807,2.733039,-2.101759,-2.854273,-7.780667,-5.929673,-7.247998,-9.687679,4.387546,-9.280089,6.668671,4.932203,-3.043955,-5.898786,7.816118,-7.987765,6.586909,-3.764893,-0.525289,0.037914,-1.775740,-2.080083,0.412240,-2.976053,5.844003,4.726026,2.693723,-6.990674,4.202402,5.723298,9.343104,2.879234,6.120200,9.278631,-5.661737,2.461096,-9.019037,6.748054,-3.037983,-1.931033,0.612555,-9.388337,6.764927,-8.580980,-3.186295,6.009824,7.861540,-6.199130,-0.228458,-4.163342,-4.250286,3.803367,7.037429,2.078583,3.000881,4.896995,2.619520,3.146010,-9.493325,5.766309,-8.597519,2.595631,9.511063,-8.414247,7.449547,9.411338,-7.401017,-6.145126,0.625550,4.613572,-9.965688,1.179738,3.702656,-8.645504,-1.121101,-7.241487,-9.005645,-2.578284,0.050303,9.024650,9.049117,-1.944027,7.167274,5.183733,-7.177159,4.115522,-2.560552,0.269320,-0.209234,7.271782,9.817046,2.165420,6.882838,-1.068460,-6.441316,5.025214,-5.268164,-9.116710,4.058867,-3.566730,-2.270626,-2.375625,0.562450,-6.210711,0.451563,-3.550749,1.159004,-0.871923,-0.163422,1.767089,-6.462860,-0.097806,9.154976,-9.078678,7.345076,-5.880872,5.810619,-8.027379,-3.172173,-9.151255,-2.211427,5.174153,-0.211117,3.901474,-4.522957,2.819389,2.127072,6.590481,-1.502982,7.766571,-0.243615,-9.746979,-5.654789,-7.287980,9.745961,-3.253686,-2.099981,-4.333488,6.079302,9.257212,-4.747164,-1.634804,-0.130262,-3.162912,-4.283345,-5.249777,-9.034906,-9.959214,6.672487,4.534731,1.329206,7.049450,5.994578,-5.915371,8.579097,-0.070899,-8.706566,8.455602,-7.583315,-5.022023,-4.571682,-6.886170,5.421634,1.404791,3.222422,4.791731,5.791300,-4.185682,-7.615383,0.791357,-2.720784,-2.906375,6.200745,-8.823093,9.932445,-4.016960,8.748565,-6.502735,8.498311,-4.445435,8.401635,0.103196,-1.669872,8.899188,-6.188913,-2.515805,8.543459,2.048232,-7.230583,-0.200511,-6.883435,5.982718,2.369897,-7.221243,-9.939958,-0.181714,3.967267,-8.850137,0.373292,-2.786549,-7.383029,0.248065,5.093326,-4.064064,-4.728334,-2.564883,5.543613,-9.443780,1.164626,6.809061,6.647610,7.251382,0.214457,-9.646729,-5.077483,-9.704756,6.727534,-2.639418,5.166139,5.461354,2.576179,-9.035411,7.424196,-8.054742,-8.200197,-1.997333,4.990405,-0.944113,3.589170,1.865244,3.917966,8.745929,3.935833,-9.326362,-3.097327,-3.626014,4.782171,4.002832,-3.048145,3.337352,7.815748,-7.649096,-9.002104,-7.148920,-4.933841,1.947005,6.076983,-5.565902,-0.360115,3.985319,-1.803281,-3.966706,7.431640,4.524127,9.655726,-9.674807,-5.287901,8.743356,3.014504,8.005516,-4.621008,3.282510,6.560904,-2.423898,-1.878148,-5.226400,-3.071970,-0.580176,-5.344248,9.316913,8.863833,6.742495,-7.302828,-0.927730,-5.245494,7.029575,-0.626264,-4.087337,6.349084,3.517544,7.657996,-6.694041,-6.062373,1.645054,-2.439491,7.797630,-2.373957,-1.824727,2.423419,-4.582426,-5.223999,-7.111038,-9.348721,-3.710281,-3.116410,-3.869830,5.865544,8.017366,9.475393,2.979799,9.649652,1.085673,7.833975,-2.522717,-9.533545,-2.911491,4.971839,2.289994,0.130642,1.648476,6.365716,5.260165,-4.582257,5.300483,1.115170,-5.384739,7.726224], dtype = "float64")#candidate|6096|(480,)|const|float64
call_6095 = relay.TupleGetItem(func_5114_call(relay.reshape(const_6096.astype('float64'), [480,])), 2)
call_6097 = relay.TupleGetItem(func_5117_call(relay.reshape(const_6096.astype('float64'), [480,])), 2)
output = relay.Tuple([call_6064,call_6082,const_6083,call_6091,call_6095,const_6096,])
output2 = relay.Tuple([call_6065,call_6084,const_6083,call_6092,call_6097,const_6096,])
func_6107 = relay.Function([], output)
mod['func_6107'] = func_6107
mod = relay.transform.InferType()(mod)
output = func_6107()
func_6108 = relay.Function([], output)
mutated_mod['func_6108'] = func_6108
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6129 = relay.const([[[1.742954,1.872037,-7.736107,1.723646,-6.725099,3.718880,-2.954000,-0.106729,-9.539964,2.280918],[6.559043,9.890709,-0.144653,-4.967104,5.329377,-6.431101,-3.512156,5.722797,4.288301,6.725447],[-3.243883,0.858082,4.847243,-0.911222,-9.052098,-8.576098,4.253673,3.319024,8.947724,-7.679543]],[[4.048183,6.694125,2.975024,-1.664689,6.762149,-1.391634,-3.681697,-2.613873,6.246149,3.137687],[-5.604916,-0.441360,6.347266,-3.513743,3.079620,0.787819,4.630185,3.299908,-9.021382,3.689590],[8.509168,9.167730,0.654503,7.082694,-6.186913,3.576734,3.378070,-2.338711,4.851974,5.772020]],[[-2.744831,-8.709003,2.273393,-7.997654,6.712656,9.285076,4.813613,7.720496,-5.118934,-9.024746],[2.757390,-5.791441,7.886914,-1.104455,0.118840,3.699035,-5.613639,8.880248,4.412723,4.597523],[5.523899,-1.375730,-8.524965,-0.812949,-2.397133,5.355870,-4.836796,-2.953778,2.045323,-8.024321]],[[-9.880737,-2.088365,5.544251,-5.770420,1.491403,-2.381214,-3.472283,2.250654,-6.674894,-9.136613],[-2.531634,-0.225355,9.845261,-5.270939,1.909236,4.964339,1.474332,5.167348,8.922073,8.974647],[9.380876,9.059591,-5.805884,-4.140243,-3.676624,-4.345006,5.109403,5.382394,5.849515,0.354053]],[[0.052311,8.666245,-8.156086,9.550563,-1.978892,-8.522162,-4.454443,-1.751610,-4.919649,5.412185],[5.725216,-0.404959,6.464043,2.670833,2.802331,6.956248,9.941647,8.499867,6.896014,2.395458],[-2.652189,-4.367713,2.597903,1.444022,3.738568,0.200823,-0.611591,3.816134,9.742177,6.427131]],[[5.204307,7.936070,5.126637,-1.073479,-1.860743,-1.632628,5.389255,9.365430,7.194459,7.264166],[-4.159853,5.727746,-1.981945,-0.571492,7.994865,-7.229009,-7.237727,3.005339,5.996120,6.918797],[2.118528,-5.443950,-3.758860,-5.647586,-8.472654,-2.017770,-5.904337,-0.448375,7.592825,-8.626228]],[[-2.646160,7.951654,6.525519,-9.967720,9.129745,-2.386902,0.798160,7.724508,-6.004436,-4.918151],[0.474259,1.738671,-7.045258,-6.415883,-7.314516,6.808331,-0.960700,-9.661186,4.548669,-2.276608],[-4.973246,-6.928494,9.809484,0.698384,7.211111,-3.959945,-9.886439,-2.577427,5.144793,-4.237632]],[[6.678169,-7.371384,8.581348,4.989279,5.525466,6.782008,-4.043747,-5.144558,1.978923,-0.809274],[2.100766,-0.370768,-1.703267,-0.739610,2.986521,-4.835204,-4.087455,-9.573789,2.528322,3.074523],[5.509321,-7.466883,-6.673929,9.219755,-8.620899,-4.269293,8.347520,1.905054,1.272873,5.946940]],[[6.554875,8.445601,5.107766,7.948779,-9.092291,7.720745,9.927788,6.126455,-9.014383,3.962656],[-8.029115,-2.965828,-9.982352,-8.102736,-1.863144,3.652345,1.152577,5.051654,-9.808011,2.744572],[9.409415,6.976049,-7.170046,-0.733997,0.084625,3.829120,2.695231,4.202774,9.570497,1.075660]],[[-0.201085,1.758370,-5.110232,-3.981811,4.168511,5.721571,-8.309267,1.141438,7.957411,-9.348545],[-6.159158,4.316078,0.508548,8.045655,-6.264604,-2.457311,7.690187,-6.530064,3.577996,7.967377],[-3.225480,6.159675,8.434088,3.532088,8.183947,8.111995,0.342627,6.946038,-0.948966,4.108612]]], dtype = "float32")#candidate|6129|(10, 3, 10)|const|float32
uop_6130 = relay.erf(const_6129.astype('float32')) # shape=(10, 3, 10)
func_2352_call = mod.get_global_var('func_2352')
func_2355_call = mutated_mod.get_global_var('func_2355')
var_6133 = relay.var("var_6133", dtype = "float64", shape = (484, 1))#candidate|6133|(484, 1)|var|float64
call_6132 = relay.TupleGetItem(func_2352_call(relay.reshape(var_6133.astype('float64'), [11, 11, 4])), 0)
call_6134 = relay.TupleGetItem(func_2355_call(relay.reshape(var_6133.astype('float64'), [11, 11, 4])), 0)
func_2784_call = mod.get_global_var('func_2784')
func_2786_call = mutated_mod.get_global_var('func_2786')
call_6138 = func_2784_call()
call_6139 = func_2784_call()
bop_6140 = relay.logical_and(var_6133.astype('bool'), relay.reshape(call_6132.astype('bool'), relay.shape_of(var_6133))) # shape=(484, 1)
bop_6143 = relay.logical_and(var_6133.astype('bool'), relay.reshape(call_6134.astype('bool'), relay.shape_of(var_6133))) # shape=(484, 1)
func_5084_call = mod.get_global_var('func_5084')
func_5087_call = mutated_mod.get_global_var('func_5087')
var_6148 = relay.var("var_6148", dtype = "float32", shape = (180,))#candidate|6148|(180,)|var|float32
call_6147 = relay.TupleGetItem(func_5084_call(relay.reshape(var_6148.astype('float32'), [5, 9, 4])), 2)
call_6149 = relay.TupleGetItem(func_5087_call(relay.reshape(var_6148.astype('float32'), [5, 9, 4])), 2)
uop_6150 = relay.sinh(bop_6140.astype('float64')) # shape=(484, 1)
uop_6152 = relay.sinh(bop_6143.astype('float64')) # shape=(484, 1)
bop_6154 = relay.logical_xor(const_6129.astype('int64'), relay.reshape(uop_6130.astype('int64'), relay.shape_of(const_6129))) # shape=(10, 3, 10)
output = relay.Tuple([call_6138,call_6147,var_6148,uop_6150,bop_6154,])
output2 = relay.Tuple([call_6139,call_6149,var_6148,uop_6152,bop_6154,])
F = relay.Function([var_6133,var_6148,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6133,var_6148,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_5990(%var_5974: Tensor[(2, 16, 14), int32]) -> (Tensor[(2, 16, 14), int32],) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 16, 14), int32] */, dtype="int32") /* ty=Tensor[(2, 16, 14), int32] */;
  %1 = shape_of(%var_5974, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_5974, dtype="int32") /* ty=Tensor[(2, 16, 14), int32] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %4 = add(%2, %3) /* ty=Tensor[(2, 16, 14), int32] */;
  (%4,)
}

def @func_6202(%var_6124: Tensor[(12, 5, 14), float32], %var_6148: Tensor[(720), float32], %var_6154: Tensor[(784), float32], %var_6155: Tensor[(216, 4), uint64], %var_6164: Tensor[(1859), uint16], %var_6180: Tensor[(960), float64]) -> (Tensor[(12, 5, 14), uint8], Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(5, 14, 14), float32], Tensor[(784), float32], Tensor[(216, 4), uint64], Tensor[(13, 11, 13), uint16], Tensor[(1859), uint16], Tensor[(16, 10, 6), float32], Tensor[(960), float64], Tensor[(12, 5, 14), int32], Tensor[(14, 9, 11), bool], Tensor[(2, 704), int16], Tensor[(1274), int64], Tensor[(462, 3), uint64]) {
  %5 = cast(%var_6124, dtype="float32") /* ty=Tensor[(12, 5, 14), float32] */;
  %6 = log2(%5) /* ty=Tensor[(12, 5, 14), float32] */;
  %7 = cast(%var_6124, dtype="uint8") /* ty=Tensor[(12, 5, 14), uint8] */;
  %8 = shape_of(%6, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%6, dtype="uint8") /* ty=Tensor[(12, 5, 14), uint8] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %11 = cast(6.45587f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %12 = cast(%var_6148, dtype="float32") /* ty=Tensor[(720), float32] */;
  %13 = reshape(%11, newshape=[]) /* ty=float32 */;
  %14 = reshape(%12, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %15 = cast(%var_6154, dtype="float32") /* ty=Tensor[(784), float32] */;
  %16 = cast(%var_6155, dtype="uint64") /* ty=Tensor[(216, 4), uint64] */;
  %17 = reshape(%15, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
  %18 = reshape(%16, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %19 = @func_2139(%17, %18) /* ty=(Tensor[(4, 14, 14), float64], Tensor[(4, 14, 14), float32], Tensor[(8, 11, 16), int16], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(980), float32], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) */;
  %20 = cast(6.45587f /* ty=float32 */, dtype="uint16") /* ty=uint16 */;
  %21 = cast(%var_6164, dtype="uint16") /* ty=Tensor[(1859), uint16] */;
  %22 = reshape(%20, newshape=[]) /* ty=uint16 */;
  %23 = reshape(%21, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), uint16] */;
  %24 = cast(%var_6180, dtype="float64") /* ty=Tensor[(960), float64] */;
  %25 = reshape(%24, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %26 = @func_245(%25) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %27 = cast(%6, dtype="int32") /* ty=Tensor[(12, 5, 14), int32] */;
  %28 = cast(6.45587f /* ty=float32 */, dtype="int32") /* ty=int32 */;
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 704), int16] */, dtype="int16") /* ty=Tensor[(2, 704), int16] */;
  %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(1274), int64] */, dtype="int64") /* ty=Tensor[(1274), int64] */;
  %31 = cast(meta[relay.Constant][3] /* ty=Tensor[(462, 3), uint64] */, dtype="uint64") /* ty=Tensor[(462, 3), uint64] */;
  %32 = reshape(%29, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %33 = reshape(%30, newshape=[7, 182]) /* ty=Tensor[(7, 182), int64] */;
  %34 = reshape(%31, newshape=[1386]) /* ty=Tensor[(1386), uint64] */;
  %35 = @func_4442(%32, %33, %34) /* ty=(Tensor[(8, 7, 4), bool], Tensor[(10, 7, 13), float32], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(13, 7, 14), int64], int64, Tensor[(7, 182), int64], Tensor[(14, 9, 11), bool], Tensor[(1386), uint64]) */;
  %36 = bitwise_xor(%9, %10) /* ty=Tensor[(12, 5, 14), uint8] */;
  %37 = @func_285(%13, %14) /* ty=Tensor[(9, 10, 8), float32] */;
  %38 = %19.4;
  %39 = @func_5630(%22, %23) /* ty=Tensor[(13, 11, 13), uint16] */;
  %40 = %26.1;
  %41 = subtract(%27, %28) /* ty=Tensor[(12, 5, 14), int32] */;
  %42 = %35.7;
  (%36, %37, %var_6148, %38, %var_6154, %var_6155, %39, %var_6164, %40, %var_6180, %41, %42, meta[relay.Constant][1] /* ty=Tensor[(2, 704), int16] */, meta[relay.Constant][2] /* ty=Tensor[(1274), int64] */, meta[relay.Constant][3] /* ty=Tensor[(462, 3), uint64] */)
}

def @func_2139(%var_2085: Tensor[(4, 14, 14), float32], %var_2133: Tensor[(864), uint64]) -> (Tensor[(4, 14, 14), float64], Tensor[(4, 14, 14), float32], Tensor[(8, 11, 16), int16], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(980), float32], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) {
  %43 = cast(%var_2085, dtype="float32") /* ty=Tensor[(4, 14, 14), float32] */;
  %44 = sinh(%43) /* ty=Tensor[(4, 14, 14), float32] */;
  %45 = cast(%44, dtype="float32") /* ty=Tensor[(4, 14, 14), float32] */;
  %46 = rsqrt(%45) /* ty=Tensor[(4, 14, 14), float32] */;
  %47 = cast(%44, dtype="int8") /* ty=Tensor[(4, 14, 14), int8] */;
  %48 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%46, dtype="int8") /* ty=Tensor[(4, 14, 14), int8] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %51 = bitwise_and(%49, %50) /* ty=Tensor[(4, 14, 14), int8] */;
  %52 = cast(%var_2085, dtype="float32") /* ty=Tensor[(4, 14, 14), float32] */;
  %53 = asin(%52) /* ty=Tensor[(4, 14, 14), float32] */;
  %54 = cast(%53, dtype="float64") /* ty=Tensor[(4, 14, 14), float64] */;
  %55 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%51, dtype="float64") /* ty=Tensor[(4, 14, 14), float64] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %58 = cast(%44, dtype="float32") /* ty=Tensor[(4, 14, 14), float32] */;
  %59 = shape_of(%51, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%51, dtype="float32") /* ty=Tensor[(4, 14, 14), float32] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %62 = cast(meta[relay.Constant][4] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %63 = cast(meta[relay.Constant][4] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %64 = reshape(%62, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %65 = reshape(%63, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %66 = @func_72(%64, %65) /* ty=(Tensor[(8, 11, 16), int16],) */;
  %67 = cast(meta[relay.Constant][5] /* ty=Tensor[(980), float32] */, dtype="float32") /* ty=Tensor[(980), float32] */;
  %68 = reshape(%67, newshape=[5, 14, 14]) /* ty=Tensor[(5, 14, 14), float32] */;
  %69 = cast(%var_2133, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %70 = %66.0;
  %71 = cast(%70, dtype="int16") /* ty=Tensor[(8, 11, 16), int16] */;
  %72 = reshape(%69, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
  %73 = reshape(%71, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), int16] */;
  %74 = @func_692(%72, %73) /* ty=(Tensor[(9, 8, 12), uint64], Tensor[(8, 11, 16), int16], Tensor[(1408, 1), int16]) */;
  %75 = divide(%56, %57) /* ty=Tensor[(4, 14, 14), float64] */;
  %76 = minimum(%60, %61) /* ty=Tensor[(4, 14, 14), float32] */;
  %77 = @func_1406(%68) /* ty=Tensor[(5, 14, 14), float32] */;
  %78 = %74.0;
  (%75, %76, %70, meta[relay.Constant][4] /* ty=Tensor[(1408), int16] */, %77, meta[relay.Constant][5] /* ty=Tensor[(980), float32] */, %78, %var_2133)
}

def @func_2351(%var_2313: Tensor[(945), float64], %var_2333: Tensor[(12, 60), bool]) -> (Tensor[(16, 10, 6), float32], Tensor[(504), float32], Tensor[(14, 2, 4), bool], Tensor[(945), float64], Tensor[(16, 10, 6), float32], Tensor[(12, 60), uint8], Tensor[(12, 60), int8]) {
  %79 = cast(meta[relay.Constant][6] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %80 = reshape(%79, newshape=[9, 4, 14]) /* ty=Tensor[(9, 4, 14), float32] */;
  %81 = @func_1351(%80) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(16, 10, 6), float32], Tensor[(960), float64]) */;
  %82 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 2, 4), int32] */, dtype="int32") /* ty=Tensor[(14, 2, 4), int32] */;
  %83 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(14, 2, 4), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 2, 4), int32] */, dtype="int32") /* ty=Tensor[(14, 2, 4), int32] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %86 = bitwise_or(%84, %85) /* ty=Tensor[(14, 2, 4), int32] */;
  %87 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 2, 4), int32] */, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %91 = %81.1;
  %92 = cast(%91, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %93 = reshape(%92, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %94 = @func_245(%93) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %95 = cast(%var_2313, dtype="float64") /* ty=Tensor[(945), float64] */;
  %96 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 60), float32] */, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
  %97 = reshape(%95, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
  %98 = reshape(%96, newshape=[180, 4]) /* ty=Tensor[(180, 4), float32] */;
  %99 = @func_337(%97, %98) /* ty=(Tensor[(15, 7, 9), float64], Tensor[(9, 10, 8), float32], float32, Tensor[(180, 4), float32]) */;
  %100 = %99.2;
  %101 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 60), float32] */, dtype="bool") /* ty=Tensor[(12, 60), bool] */;
  %102 = cast(%100, dtype="bool") /* ty=bool */;
  %103 = equal(%101, %102) /* ty=Tensor[(12, 60), bool] */;
  %104 = cast(%var_2333, dtype="uint8") /* ty=Tensor[(12, 60), uint8] */;
  %105 = shape_of(%103, dtype="int32") /* ty=Tensor[(2), int32] */;
  %106 = cast(%103, dtype="uint8") /* ty=Tensor[(12, 60), uint8] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %108 = cast(%103, dtype="int8") /* ty=Tensor[(12, 60), int8] */;
  %109 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(12, 60), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %110 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 60), float32] */, dtype="int8") /* ty=Tensor[(12, 60), int8] */;
  %111 = dyn.reshape(%108, %109, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %112 = less(%89, %90) /* ty=Tensor[(14, 2, 4), bool] */;
  %113 = %94.1;
  %114 = maximum(%106, %107) /* ty=Tensor[(12, 60), uint8] */;
  %115 = bitwise_xor(%110, %111) /* ty=Tensor[(12, 60), int8] */;
  (%91, meta[relay.Constant][6] /* ty=Tensor[(504), float32] */, %112, %var_2313, %113, %114, %115)
}

def @func_10089(%var_10083: Tensor[(4, 14, 3), uint32], %var_10084: Tensor[(4, 14, 3), uint32]) -> Tensor[(4, 14, 3), bool] {
  %116 = cast(%var_10084, dtype="bool") /* ty=Tensor[(4, 14, 3), bool] */;
  %117 = shape_of(%var_10083, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%var_10083, dtype="bool") /* ty=Tensor[(4, 14, 3), bool] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%118, %119) /* ty=Tensor[(4, 14, 3), bool] */
}

def @func_4604(%var_4595: Tensor[(11, 12, 9), float64]) -> (Tensor[(11, 12, 9), float64],) {
  %120 = cast(%var_4595, dtype="float64") /* ty=Tensor[(11, 12, 9), float64] */;
  %121 = log2(%120) /* ty=Tensor[(11, 12, 9), float64] */;
  (%121,)
}

def @func_6034(%var_6003: Tensor[(84), int8], %var_6008: Tensor[(910), float32]) -> (Tensor[(3, 15, 6), bool], Tensor[(3, 7, 4), float64], Tensor[(84), int8], Tensor[(1408), int16], Tensor[(30, 6), bool], Tensor[(910), float32], Tensor[(864), uint64], Tensor[(1408), bool]) {
  %122 = cast(-2.10973f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %123 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 15, 6), float32] */, dtype="bool") /* ty=Tensor[(3, 15, 6), bool] */;
  %124 = cast(-2.10973f /* ty=float32 */, dtype="int8") /* ty=int8 */;
  %125 = cast(%var_6003, dtype="int8") /* ty=Tensor[(84), int8] */;
  %126 = reshape(%124, newshape=[]) /* ty=int8 */;
  %127 = reshape(%125, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), int8] */;
  %128 = @func_3290(%126, %127) /* ty=(Tensor[(3, 7, 4), float64],) */;
  %129 = cast(meta[relay.Constant][11] /* ty=Tensor[(30, 6), bool] */, dtype="bool") /* ty=Tensor[(30, 6), bool] */;
  %130 = cast(%var_6008, dtype="float32") /* ty=Tensor[(910), float32] */;
  %131 = cast(meta[relay.Constant][12] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %132 = cast(meta[relay.Constant][13] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %133 = reshape(%129, newshape=[2, 9, 10]) /* ty=Tensor[(2, 9, 10), bool] */;
  %134 = reshape(%130, newshape=[910, 1]) /* ty=Tensor[(910, 1), float32] */;
  %135 = reshape(%131, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %136 = reshape(%132, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %137 = @func_2600(%133, %134, %135, %136) /* ty=(Tensor[(2, 9, 10), bool], Tensor[(10, 7, 13), float32], Tensor[(910, 1), float32], Tensor[(1408), int16], Tensor[(8, 11, 16), int16], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(784), float32]) */;
  %138 = cast(meta[relay.Constant][12] /* ty=Tensor[(1408), int16] */, dtype="bool") /* ty=Tensor[(1408), bool] */;
  %139 = cast(-2.10973f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %140 = less(%122, %123) /* ty=Tensor[(3, 15, 6), bool] */;
  %141 = %128.0;
  %142 = %137.3;
  %143 = logical_or(%138, %139) /* ty=Tensor[(1408), bool] */;
  (%140, %141, %var_6003, %142, meta[relay.Constant][11] /* ty=Tensor[(30, 6), bool] */, %var_6008, meta[relay.Constant][13] /* ty=Tensor[(864), uint64] */, %143)
}

def @func_9554(%var_9528: Tensor[(13, 15, 1), float64]) -> (Tensor[(13, 15, 1), float64], Tensor[(13, 15, ?), bool]) {
  %144 = cast(%var_9528, dtype="float64") /* ty=Tensor[(13, 15, 1), float64] */;
  %145 = cast(%var_9528, dtype="float32") /* ty=Tensor[(13, 15, 1), float32] */;
  %146 = acos(%145) /* ty=Tensor[(13, 15, 1), float32] */;
  %147 = cast(%var_9528, dtype="bool") /* ty=Tensor[(13, 15, 1), bool] */;
  %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%146, dtype="bool") /* ty=Tensor[(13, 15, 1), bool] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %151 = log2(%144) /* ty=Tensor[(13, 15, 1), float64] */;
  %152 = greater(%149, %150) /* ty=Tensor[(13, 15, ?), bool] */;
  (%151, %152)
}

def @func_129(%var_115: Tensor[(10, 7, 13), float32], %var_120: Tensor[(1408), int16]) -> (Tensor[(10, 7, 13), float32], Tensor[(8, 11, 16), float32]) {
  %153 = cast(%var_115, dtype="float32") /* ty=Tensor[(10, 7, 13), float32] */;
  %154 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(10, 7, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(meta[relay.Constant][14] /* ty=Tensor[(10, 7, 13), float32] */, dtype="float32") /* ty=Tensor[(10, 7, 13), float32] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %157 = cast(%var_120, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %158 = cast(%var_120, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %159 = reshape(%157, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %160 = reshape(%158, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %161 = @func_72(%159, %160) /* ty=(Tensor[(8, 11, 16), int16],) */;
  %162 = %161.0;
  %163 = cast(%var_120, dtype="float32") /* ty=Tensor[(1408), float32] */;
  %164 = shape_of(%162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%162, dtype="float32") /* ty=Tensor[(8, 11, 16), float32] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %167 = minimum(%155, %156) /* ty=Tensor[(10, 7, 13), float32] */;
  %168 = power(%165, %166) /* ty=Tensor[(8, 11, 16), float32] */;
  (%167, %168)
}

def @func_8787(%var_8770: Tensor[(1, 8, 5), float32], %var_8784: Tensor[(180), int32]) -> (Tensor[(1, 8, 5), float32], Tensor[(455, 2), float32], Tensor[(20), int32], Tensor[(180), int32], Tensor[(1408), int16]) {
  %169 = cast(%var_8770, dtype="float32") /* ty=Tensor[(1, 8, 5), float32] */;
  %170 = cast(meta[relay.Constant][15] /* ty=Tensor[(20), int32] */, dtype="int32") /* ty=Tensor[(20), int32] */;
  %171 = cast(%var_8784, dtype="int32") /* ty=Tensor[(180), int32] */;
  %172 = cast(meta[relay.Constant][16] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %173 = reshape(%170, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), int32] */;
  %174 = reshape(%171, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), int32] */;
  %175 = reshape(%172, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %176 = @func_5767(%173, %174, %175) /* ty=(Tensor[(10, 9, 2), bool], Tensor[(16, 10, 6), float64], Tensor[(960), float64], Tensor[(16, 10, 6), float64], Tensor[(910, 1), float32], Tensor[(455, 2), float32], Tensor[(1408), int16], Tensor[(12, 72), uint64]) */;
  %177 = sinh(%169) /* ty=Tensor[(1, 8, 5), float32] */;
  %178 = %176.5;
  (%177, %178, meta[relay.Constant][15] /* ty=Tensor[(20), int32] */, %var_8784, meta[relay.Constant][16] /* ty=Tensor[(1408), int16] */)
}

def @func_2736(%var_2672: Tensor[(2, 1, 4), uint32], %var_2690: Tensor[(44, 32), int16]) -> (Tensor[(2, ?, 4), uint32], Tensor[(910), float32], Tensor[(44, 32), uint64], Tensor[(9, 10, 8), float32], float32, Tensor[(720), float32], Tensor[(8, 11, 16), float64]) {
  %179 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 1, 4), uint32] */, dtype="uint32") /* ty=Tensor[(2, 1, 4), uint32] */;
  %180 = shape_of(%var_2672, dtype="int32") /* ty=Tensor[(3), int32] */;
  %181 = cast(%var_2672, dtype="uint32") /* ty=Tensor[(2, 1, 4), uint32] */;
  %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %183 = cast(meta[relay.Constant][18] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %184 = cast(%var_2690, dtype="int16") /* ty=Tensor[(44, 32), int16] */;
  %185 = reshape(%183, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float32] */;
  %186 = reshape(%184, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %187 = @func_129(%185, %186) /* ty=(Tensor[(10, 7, 13), float32], Tensor[(8, 11, 16), float32]) */;
  %188 = %187.1;
  %189 = cast(%188, dtype="uint64") /* ty=Tensor[(8, 11, 16), uint64] */;
  %190 = shape_of(%var_2690, dtype="int32") /* ty=Tensor[(2), int32] */;
  %191 = cast(%var_2690, dtype="uint64") /* ty=Tensor[(44, 32), uint64] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %193 = cast(-1.8029f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %194 = cast(meta[relay.Constant][19] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %195 = reshape(%193, newshape=[]) /* ty=float32 */;
  %196 = reshape(%194, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %197 = cast(%188, dtype="float32") /* ty=Tensor[(8, 11, 16), float32] */;
  %198 = atan(%197) /* ty=Tensor[(8, 11, 16), float32] */;
  %199 = cast(%198, dtype="float64") /* ty=Tensor[(8, 11, 16), float64] */;
  %200 = subtract(%181, %182) /* ty=Tensor[(2, ?, 4), uint32] */;
  %201 = minimum(%191, %192) /* ty=Tensor[(44, 32), uint64] */;
  %202 = @func_285(%195, %196) /* ty=Tensor[(9, 10, 8), float32] */;
  %203 = sqrt(%199) /* ty=Tensor[(8, 11, 16), float64] */;
  (%200, meta[relay.Constant][18] /* ty=Tensor[(910), float32] */, %201, %202, -1.8029f /* ty=float32 */, meta[relay.Constant][19] /* ty=Tensor[(720), float32] */, %203)
}

def @func_3552(%var_3538: Tensor[(5, 14, 5), float64]) -> (Tensor[(5, 14, 5), float64], Tensor[(8, 11, 16), int16], Tensor[(1408), int16]) {
  %204 = cast(%var_3538, dtype="float64") /* ty=Tensor[(5, 14, 5), float64] */;
  %205 = cast(meta[relay.Constant][20] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %206 = cast(meta[relay.Constant][20] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %207 = reshape(%205, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %208 = reshape(%206, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %209 = @func_72(%207, %208) /* ty=(Tensor[(8, 11, 16), int16],) */;
  %210 = asinh(%204) /* ty=Tensor[(5, 14, 5), float64] */;
  %211 = %209.0;
  (%210, %211, meta[relay.Constant][20] /* ty=Tensor[(1408), int16] */)
}

def @func_4170(%var_4156: Tensor[(7, 10, 15), float64]) -> (Tensor[(7, 10, 15), float32],) {
  %212 = cast(%var_4156, dtype="float64") /* ty=Tensor[(7, 10, 15), float64] */;
  %213 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(7, 10, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 10, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 15), float64] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %216 = mod(%214, %215) /* ty=Tensor[(7, 10, 15), float64] */;
  %217 = cast(%216, dtype="float32") /* ty=Tensor[(7, 10, 15), float32] */;
  %218 = asinh(%217) /* ty=Tensor[(7, 10, 15), float32] */;
  (%218,)
}

def @func_5307(%var_5291: Tensor[(7, 10, 4), float32]) -> Tensor[(7, 10, 4), bool] {
  %219 = cast(%var_5291, dtype="float32") /* ty=Tensor[(7, 10, 4), float32] */;
  %220 = acosh(%219) /* ty=Tensor[(7, 10, 4), float32] */;
  %221 = cast(%220, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
  %222 = shape_of(%var_5291, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%var_5291, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%223, %224) /* ty=Tensor[(7, 10, 4), bool] */
}

def @func_2268(%var_2248: int64, %var_2249: Tensor[(13, 7, 14), int64]) -> (Tensor[(13, 7, 14), int64],) {
  %225 = cast(%var_2248, dtype="int64") /* ty=int64 */;
  %226 = cast(%var_2249, dtype="int64") /* ty=Tensor[(13, 7, 14), int64] */;
  %227 = maximum(%225, %226) /* ty=Tensor[(13, 7, 14), int64] */;
  (%227,)
}

def @func_10381() -> Tensor[(1, 10, 6), float32] {
  %228 = @func_10078() /* ty=(Tensor[(1, 10, 6), float64],) */;
  %229 = %228.0;
  %230 = cast(%229, dtype="float32") /* ty=Tensor[(1, 10, 6), float32] */;
  asin(%230) /* ty=Tensor[(1, 10, 6), float32] */
}

def @func_285(%var_277: float32, %var_278: Tensor[(9, 10, 8), float32]) -> Tensor[(9, 10, 8), float32] {
  %231 = cast(%var_277, dtype="float32") /* ty=float32 */;
  %232 = cast(%var_278, dtype="float32") /* ty=Tensor[(9, 10, 8), float32] */;
  mod(%231, %232) /* ty=Tensor[(9, 10, 8), float32] */
}

def @func_5767(%var_5742: Tensor[(10, 1, 2), int32], %var_5743: Tensor[(10, 9, 2), int32], %var_5763: Tensor[(1408), int16]) -> (Tensor[(10, 9, 2), bool], Tensor[(16, 10, 6), float64], Tensor[(960), float64], Tensor[(16, 10, 6), float64], Tensor[(910, 1), float32], Tensor[(455, 2), float32], Tensor[(1408), int16], Tensor[(12, 72), uint64]) {
  %233 = cast(%var_5742, dtype="bool") /* ty=Tensor[(10, 1, 2), bool] */;
  %234 = cast(%var_5743, dtype="bool") /* ty=Tensor[(10, 9, 2), bool] */;
  %235 = cast(meta[relay.Constant][22] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %236 = reshape(%235, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %237 = @func_245(%236) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %238 = %237.0;
  %239 = cast(%238, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %240 = reshape(%239, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %241 = @func_245(%240) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %242 = cast(%var_5743, dtype="bool") /* ty=Tensor[(10, 9, 2), bool] */;
  %243 = cast(meta[relay.Constant][23] /* ty=Tensor[(455, 2), float32] */, dtype="float32") /* ty=Tensor[(455, 2), float32] */;
  %244 = cast(%var_5763, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %245 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 72), uint64] */, dtype="uint64") /* ty=Tensor[(12, 72), uint64] */;
  %246 = reshape(%242, newshape=[2, 9, 10]) /* ty=Tensor[(2, 9, 10), bool] */;
  %247 = reshape(%243, newshape=[910, 1]) /* ty=Tensor[(910, 1), float32] */;
  %248 = reshape(%244, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %249 = reshape(%245, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %250 = @func_2600(%246, %247, %248, %249) /* ty=(Tensor[(2, 9, 10), bool], Tensor[(10, 7, 13), float32], Tensor[(910, 1), float32], Tensor[(1408), int16], Tensor[(8, 11, 16), int16], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(784), float32]) */;
  %251 = equal(%233, %234) /* ty=Tensor[(10, 9, 2), bool] */;
  %252 = %241.0;
  %253 = %250.2;
  (%251, %238, meta[relay.Constant][22] /* ty=Tensor[(960), float64] */, %252, %253, meta[relay.Constant][23] /* ty=Tensor[(455, 2), float32] */, %var_5763, meta[relay.Constant][24] /* ty=Tensor[(12, 72), uint64] */)
}

def @func_1351(%var_1339: Tensor[(9, 4, 14), float32]) -> (Tensor[(9, 4, 14), float32], Tensor[(16, 10, 6), float32], Tensor[(960), float64]) {
  %254 = cast(%var_1339, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
  %255 = cast(meta[relay.Constant][25] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %256 = reshape(%255, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %257 = @func_245(%256) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %258 = erf(%254) /* ty=Tensor[(9, 4, 14), float32] */;
  %259 = %257.1;
  (%258, %259, meta[relay.Constant][25] /* ty=Tensor[(960), float64] */)
}

def @func_10483(%var_10429: Tensor[(780), uint8], %var_10478: Tensor[(180), bool], %var_10480: Tensor[(1408), int16], %var_10481: Tensor[(864), uint64]) -> (Tensor[(1, 10, 6), float32], Tensor[(126), int16], Tensor[(780), uint8], Tensor[(960), float64], Tensor[(945), float64], Tensor[(10, 7, 13), float32], Tensor[(180), bool], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(864), uint64]) {
  %260 = cast(%var_10429, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %261 = cast(%var_10429, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %262 = cast(meta[relay.Constant][26] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %263 = cast(meta[relay.Constant][27] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %264 = reshape(%260, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), uint8] */;
  %265 = reshape(%261, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), uint8] */;
  %266 = reshape(%262, newshape=[60, 16]) /* ty=Tensor[(60, 16), float64] */;
  %267 = reshape(%263, newshape=[105, 9]) /* ty=Tensor[(105, 9), float64] */;
  %268 = @func_3809(%264, %265, %266, %267) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(9, 2, 7), bool], Tensor[(126), int16], Tensor[(60, 16), float64], Tensor[(105, 9), float64], Tensor[(720), float32]) */;
  %269 = cast(%var_10478, dtype="bool") /* ty=Tensor[(180), bool] */;
  %270 = cast(meta[relay.Constant][28] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %271 = cast(%var_10480, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %272 = cast(%var_10481, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %273 = reshape(%269, newshape=[2, 9, 10]) /* ty=Tensor[(2, 9, 10), bool] */;
  %274 = reshape(%270, newshape=[910, 1]) /* ty=Tensor[(910, 1), float32] */;
  %275 = reshape(%271, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %276 = reshape(%272, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %277 = @func_2600(%273, %274, %275, %276) /* ty=(Tensor[(2, 9, 10), bool], Tensor[(10, 7, 13), float32], Tensor[(910, 1), float32], Tensor[(1408), int16], Tensor[(8, 11, 16), int16], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(784), float32]) */;
  %278 = @func_10381() /* ty=Tensor[(1, 10, 6), float32] */;
  %279 = %268.2;
  %280 = %277.1;
  (%278, %279, %var_10429, meta[relay.Constant][26] /* ty=Tensor[(960), float64] */, meta[relay.Constant][27] /* ty=Tensor[(945), float64] */, %280, %var_10478, meta[relay.Constant][28] /* ty=Tensor[(910), float32] */, %var_10480, %var_10481)
}

def @func_1406(%var_1387: Tensor[(5, 14, 14), float32]) -> Tensor[(5, 14, 14), float32] {
  %281 = cast(%var_1387, dtype="float32") /* ty=Tensor[(5, 14, 14), float32] */;
  asinh(%281) /* ty=Tensor[(5, 14, 14), float32] */
}

def @func_8258(%var_8235: Tensor[(180), bool], %var_8238: Tensor[(864), uint64], %var_8245: Tensor[(84), int8], %var_8250: Tensor[(455), float64]) -> (Tensor[(10, 14, 15), float64], Tensor[(784), float32], Tensor[(180), bool], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(864), uint64], Tensor[(3, 7, 4), float64], int8, Tensor[(84), int8], Tensor[(7, 5, 13), float64], Tensor[(455), float64]) {
  %282 = cast(meta[relay.Constant][29] /* ty=Tensor[(10, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
  %283 = erf(%282) /* ty=Tensor[(10, 14, 15), float64] */;
  %284 = cast(%283, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
  %285 = cast(%var_8235, dtype="bool") /* ty=Tensor[(180), bool] */;
  %286 = cast(meta[relay.Constant][30] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %287 = cast(meta[relay.Constant][31] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %288 = cast(%var_8238, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %289 = reshape(%285, newshape=[2, 9, 10]) /* ty=Tensor[(2, 9, 10), bool] */;
  %290 = reshape(%286, newshape=[910, 1]) /* ty=Tensor[(910, 1), float32] */;
  %291 = reshape(%287, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %292 = reshape(%288, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %293 = @func_2600(%289, %290, %291, %292) /* ty=(Tensor[(2, 9, 10), bool], Tensor[(10, 7, 13), float32], Tensor[(910, 1), float32], Tensor[(1408), int16], Tensor[(8, 11, 16), int16], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(784), float32]) */;
  %294 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %295 = cast(%var_8245, dtype="int8") /* ty=Tensor[(84), int8] */;
  %296 = reshape(%294, newshape=[]) /* ty=int8 */;
  %297 = reshape(%295, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), int8] */;
  %298 = @func_3290(%296, %297) /* ty=(Tensor[(3, 7, 4), float64],) */;
  %299 = cast(%var_8250, dtype="float64") /* ty=Tensor[(455), float64] */;
  %300 = reshape(%299, newshape=[7, 5, 13]) /* ty=Tensor[(7, 5, 13), float64] */;
  %301 = rsqrt(%284) /* ty=Tensor[(10, 14, 15), float64] */;
  %302 = %293.7;
  %303 = %298.0;
  %304 = @func_7969(%300) /* ty=Tensor[(7, 5, 13), float64] */;
  (%301, %302, %var_8235, meta[relay.Constant][30] /* ty=Tensor[(910), float32] */, meta[relay.Constant][31] /* ty=Tensor[(1408), int16] */, %var_8238, %303, meta[relay.Constant][32] /* ty=int8 */, %var_8245, %304, %var_8250)
}

def @func_1984(%var_1935: Tensor[(9, 2, 7), int16], %var_1954: Tensor[(480, 2), float64], %var_1971: Tensor[(945), float64], %var_1972: Tensor[(720), float32]) -> (Tensor[(9, 2, 7), bool], Tensor[(16, 10, 6), float32], Tensor[(480, 2), float64], Tensor[(15, 7, 9), float64], Tensor[(945), float64], Tensor[(720), float32]) {
  %305 = cast(%var_1935, dtype="bool") /* ty=Tensor[(9, 2, 7), bool] */;
  %306 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(9, 2, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 2, 7), int16] */, dtype="bool") /* ty=Tensor[(9, 2, 7), bool] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %309 = cast(%var_1954, dtype="float64") /* ty=Tensor[(480, 2), float64] */;
  %310 = reshape(%309, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %311 = @func_245(%310) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %312 = cast(%var_1971, dtype="float64") /* ty=Tensor[(945), float64] */;
  %313 = cast(%var_1972, dtype="float32") /* ty=Tensor[(720), float32] */;
  %314 = reshape(%312, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
  %315 = reshape(%313, newshape=[180, 4]) /* ty=Tensor[(180, 4), float32] */;
  %316 = @func_337(%314, %315) /* ty=(Tensor[(15, 7, 9), float64], Tensor[(9, 10, 8), float32], float32, Tensor[(180, 4), float32]) */;
  %317 = less_equal(%307, %308) /* ty=Tensor[(9, 2, 7), bool] */;
  %318 = %311.1;
  %319 = %316.0;
  (%317, %318, %var_1954, %319, %var_1971, %var_1972)
}

def @func_5125(%var_5095: Tensor[(1, 2, 15), bool], %var_5096: Tensor[(9, 2, 15), bool], %var_5102: Tensor[(6, 144), uint64], %var_5103: Tensor[(1408), int16]) -> (Tensor[(9, 2, 15), bool], Tensor[(8, 11, 16), int16], Tensor[(6, 144), uint64], Tensor[(1408), int16], Tensor[(16, 10, 6), float64], Tensor[(60, 16), float64]) {
  %320 = cast(%var_5095, dtype="bool") /* ty=Tensor[(1, 2, 15), bool] */;
  %321 = cast(%var_5096, dtype="bool") /* ty=Tensor[(9, 2, 15), bool] */;
  %322 = cast(%var_5102, dtype="uint64") /* ty=Tensor[(6, 144), uint64] */;
  %323 = cast(%var_5103, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %324 = reshape(%322, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
  %325 = reshape(%323, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), int16] */;
  %326 = @func_692(%324, %325) /* ty=(Tensor[(9, 8, 12), uint64], Tensor[(8, 11, 16), int16], Tensor[(1408, 1), int16]) */;
  %327 = cast(meta[relay.Constant][34] /* ty=Tensor[(60, 16), float64] */, dtype="float64") /* ty=Tensor[(60, 16), float64] */;
  %328 = reshape(%327, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %329 = @func_245(%328) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %330 = logical_and(%320, %321) /* ty=Tensor[(9, 2, 15), bool] */;
  %331 = %326.1;
  %332 = %329.0;
  (%330, %331, %var_5102, %var_5103, %332, meta[relay.Constant][34] /* ty=Tensor[(60, 16), float64] */)
}

def @func_337(%var_323: Tensor[(15, 7, 9), float64], %var_329: Tensor[(180, 4), float32]) -> (Tensor[(15, 7, 9), float64], Tensor[(9, 10, 8), float32], float32, Tensor[(180, 4), float32]) {
  %333 = cast(%var_323, dtype="float64") /* ty=Tensor[(15, 7, 9), float64] */;
  %334 = cast(-0.727176f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %335 = cast(%var_329, dtype="float32") /* ty=Tensor[(180, 4), float32] */;
  %336 = reshape(%334, newshape=[]) /* ty=float32 */;
  %337 = reshape(%335, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %338 = log10(%333) /* ty=Tensor[(15, 7, 9), float64] */;
  %339 = @func_285(%336, %337) /* ty=Tensor[(9, 10, 8), float32] */;
  (%338, %339, -0.727176f /* ty=float32 */, %var_329)
}

def @func_72(%var_53: Tensor[(8, 11, 16), int16], %var_54: Tensor[(8, 11, 16), int16]) -> (Tensor[(8, 11, 16), int16],) {
  %340 = cast(%var_54, dtype="int16") /* ty=Tensor[(8, 11, 16), int16] */;
  %341 = shape_of(%var_53, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(%var_53, dtype="int16") /* ty=Tensor[(8, 11, 16), int16] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %344 = bitwise_or(%342, %343) /* ty=Tensor[(8, 11, 16), int16] */;
  (%344,)
}

def @func_7823(%var_7798: Tensor[(4, 3, 10), float64]) -> (Tensor[(11, 12, 9), float64], Tensor[(1188), float64], Tensor[(4, 3, 10), float64]) {
  %345 = cast(meta[relay.Constant][35] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %346 = reshape(%345, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %347 = @func_4604(%346) /* ty=(Tensor[(11, 12, 9), float64],) */;
  %348 = cast(%var_7798, dtype="float64") /* ty=Tensor[(4, 3, 10), float64] */;
  %349 = sqrt(%348) /* ty=Tensor[(4, 3, 10), float64] */;
  %350 = cast(%349, dtype="float64") /* ty=Tensor[(4, 3, 10), float64] */;
  %351 = %347.0;
  %352 = cos(%350) /* ty=Tensor[(4, 3, 10), float64] */;
  (%351, meta[relay.Constant][35] /* ty=Tensor[(1188), float64] */, %352)
}

def @func_9143(%var_9133: Tensor[(1188), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(11, 12, 9), float64], Tensor[(1188), float64]) {
  %353 = cast(meta[relay.Constant][36] /* ty=Tensor[(16, 5, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
  %354 = cast(%var_9133, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %355 = reshape(%354, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %356 = @func_4604(%355) /* ty=(Tensor[(11, 12, 9), float64],) */;
  %357 = sigmoid(%353) /* ty=Tensor[(16, 5, 13), float32] */;
  %358 = %356.0;
  (%357, %358, %var_9133)
}

def @func_10347(%var_10267: Tensor[(22, 64), int16], %var_10276: Tensor[(720), float32], %var_10277: Tensor[(784), float32], %var_10279: Tensor[(1859), uint16], %var_10315: Tensor[(40), float32]) -> (Tensor[(1, 10, 6), float64], Tensor[(910), float32], Tensor[(8), uint32], Tensor[(22, 64), int16], Tensor[(16, 10, 6), float32], Tensor[(840), float32], Tensor[(720), float32], Tensor[(784), float32], Tensor[(216, 4), uint64], Tensor[(1859), uint16], Tensor[(960, 1), float32], Tensor[(16, 10, 6), float64], Tensor[(20, 1), int32], Tensor[(180), int32], Tensor[(20), int32], Tensor[(40), float32], Tensor[(7, 5, 13), float64], Tensor[(455), float64], Tensor[(960, 1), float64]) {
  %359 = @func_10078() /* ty=(Tensor[(1, 10, 6), float64],) */;
  %360 = cast(meta[relay.Constant][37] /* ty=Tensor[(8), uint32] */, dtype="uint32") /* ty=Tensor[(8), uint32] */;
  %361 = cast(%var_10267, dtype="int16") /* ty=Tensor[(22, 64), int16] */;
  %362 = reshape(%360, newshape=[2, 1, 4]) /* ty=Tensor[(2, 1, 4), uint32] */;
  %363 = reshape(%361, newshape=[44, 32]) /* ty=Tensor[(44, 32), int16] */;
  %364 = @func_2736(%362, %363) /* ty=(Tensor[(2, ?, 4), uint32], Tensor[(910), float32], Tensor[(44, 32), uint64], Tensor[(9, 10, 8), float32], float32, Tensor[(720), float32], Tensor[(8, 11, 16), float64]) */;
  %365 = cast(meta[relay.Constant][38] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %366 = cast(%var_10276, dtype="float32") /* ty=Tensor[(720), float32] */;
  %367 = cast(%var_10277, dtype="float32") /* ty=Tensor[(784), float32] */;
  %368 = cast(meta[relay.Constant][39] /* ty=Tensor[(216, 4), uint64] */, dtype="uint64") /* ty=Tensor[(216, 4), uint64] */;
  %369 = cast(%var_10279, dtype="uint16") /* ty=Tensor[(1859), uint16] */;
  %370 = cast(meta[relay.Constant][40] /* ty=Tensor[(960, 1), float64] */, dtype="float64") /* ty=Tensor[(960, 1), float64] */;
  %371 = reshape(%365, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
  %372 = reshape(%366, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %373 = reshape(%367, newshape=[784]) /* ty=Tensor[(784), float32] */;
  %374 = reshape(%368, newshape=[216, 4]) /* ty=Tensor[(216, 4), uint64] */;
  %375 = reshape(%369, newshape=[1859]) /* ty=Tensor[(1859), uint16] */;
  %376 = reshape(%370, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %377 = @func_6202(%371, %372, %373, %374, %375, %376) /* ty=(Tensor[(12, 5, 14), uint8], Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(5, 14, 14), float32], Tensor[(784), float32], Tensor[(216, 4), uint64], Tensor[(13, 11, 13), uint16], Tensor[(1859), uint16], Tensor[(16, 10, 6), float32], Tensor[(960), float64], Tensor[(12, 5, 14), int32], Tensor[(14, 9, 11), bool], Tensor[(2, 704), int16], Tensor[(1274), int64], Tensor[(462, 3), uint64]) */;
  %378 = cast(meta[relay.Constant][40] /* ty=Tensor[(960, 1), float64] */, dtype="float32") /* ty=Tensor[(960, 1), float32] */;
  %379 = asin(%378) /* ty=Tensor[(960, 1), float32] */;
  %380 = cast(%379, dtype="float32") /* ty=Tensor[(960, 1), float32] */;
  %381 = cast(meta[relay.Constant][41] /* ty=Tensor[(20, 1), int32] */, dtype="int32") /* ty=Tensor[(20, 1), int32] */;
  %382 = cast(meta[relay.Constant][42] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %383 = cast(%var_10267, dtype="int16") /* ty=Tensor[(22, 64), int16] */;
  %384 = reshape(%381, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), int32] */;
  %385 = reshape(%382, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), int32] */;
  %386 = reshape(%383, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %387 = @func_5767(%384, %385, %386) /* ty=(Tensor[(10, 9, 2), bool], Tensor[(16, 10, 6), float64], Tensor[(960), float64], Tensor[(16, 10, 6), float64], Tensor[(910, 1), float32], Tensor[(455, 2), float32], Tensor[(1408), int16], Tensor[(12, 72), uint64]) */;
  %388 = cast(%var_10315, dtype="float32") /* ty=Tensor[(40), float32] */;
  %389 = cast(meta[relay.Constant][42] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %390 = reshape(%388, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float32] */;
  %391 = reshape(%389, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %392 = @func_8787(%390, %391) /* ty=(Tensor[(1, 8, 5), float32], Tensor[(455, 2), float32], Tensor[(20), int32], Tensor[(180), int32], Tensor[(1408), int16]) */;
  %393 = cast(meta[relay.Constant][43] /* ty=Tensor[(455), float64] */, dtype="float64") /* ty=Tensor[(455), float64] */;
  %394 = reshape(%393, newshape=[7, 5, 13]) /* ty=Tensor[(7, 5, 13), float64] */;
  %395 = cast(%379, dtype="float32") /* ty=Tensor[(960, 1), float32] */;
  %396 = erf(%395) /* ty=Tensor[(960, 1), float32] */;
  %397 = cast(%396, dtype="float64") /* ty=Tensor[(960, 1), float64] */;
  %398 = %359.0;
  %399 = %364.1;
  %400 = %377.8;
  %401 = exp(%380) /* ty=Tensor[(960, 1), float32] */;
  %402 = %387.1;
  %403 = %392.2;
  %404 = @func_7969(%394) /* ty=Tensor[(7, 5, 13), float64] */;
  %405 = sigmoid(%397) /* ty=Tensor[(960, 1), float64] */;
  (%398, %399, meta[relay.Constant][37] /* ty=Tensor[(8), uint32] */, %var_10267, %400, meta[relay.Constant][38] /* ty=Tensor[(840), float32] */, %var_10276, %var_10277, meta[relay.Constant][39] /* ty=Tensor[(216, 4), uint64] */, %var_10279, %401, %402, meta[relay.Constant][41] /* ty=Tensor[(20, 1), int32] */, meta[relay.Constant][42] /* ty=Tensor[(180), int32] */, %403, %var_10315, %404, meta[relay.Constant][43] /* ty=Tensor[(455), float64] */, %405)
}

def @func_5443(%var_5424: Tensor[(9, 11, 7), int32], %var_5425: Tensor[(9, 11, 7), int32], %var_5434: Tensor[(5, 189), float64], %var_5435: Tensor[(720), float32]) -> (Tensor[(9, 11, 7), bool], Tensor[(15, 7, 9), float64], Tensor[(126), int16], Tensor[(10, 96), float64], Tensor[(5, 189), float64], Tensor[(720), float32]) {
  %406 = cast(%var_5425, dtype="bool") /* ty=Tensor[(9, 11, 7), bool] */;
  %407 = shape_of(%var_5424, dtype="int32") /* ty=Tensor[(3), int32] */;
  %408 = cast(%var_5424, dtype="bool") /* ty=Tensor[(9, 11, 7), bool] */;
  %409 = dyn.reshape(%406, %407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %410 = cast(meta[relay.Constant][44] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %411 = cast(meta[relay.Constant][45] /* ty=Tensor[(10, 96), float64] */, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
  %412 = cast(%var_5434, dtype="float64") /* ty=Tensor[(5, 189), float64] */;
  %413 = cast(%var_5435, dtype="float32") /* ty=Tensor[(720), float32] */;
  %414 = reshape(%410, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %415 = reshape(%411, newshape=[480, 2]) /* ty=Tensor[(480, 2), float64] */;
  %416 = reshape(%412, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %417 = reshape(%413, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %418 = @func_1984(%414, %415, %416, %417) /* ty=(Tensor[(9, 2, 7), bool], Tensor[(16, 10, 6), float32], Tensor[(480, 2), float64], Tensor[(15, 7, 9), float64], Tensor[(945), float64], Tensor[(720), float32]) */;
  %419 = equal(%408, %409) /* ty=Tensor[(9, 11, 7), bool] */;
  %420 = %418.3;
  (%419, %420, meta[relay.Constant][44] /* ty=Tensor[(126), int16] */, meta[relay.Constant][45] /* ty=Tensor[(10, 96), float64] */, %var_5434, %var_5435)
}

def @func_2600(%var_2561: Tensor[(2, 9, 10), bool], %var_2570: Tensor[(910, 1), float32], %var_2571: Tensor[(1408), int16], %var_2586: Tensor[(864), uint64]) -> (Tensor[(2, 9, 10), bool], Tensor[(10, 7, 13), float32], Tensor[(910, 1), float32], Tensor[(1408), int16], Tensor[(8, 11, 16), int16], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(784), float32]) {
  %421 = cast(%var_2561, dtype="bool") /* ty=Tensor[(2, 9, 10), bool] */;
  %422 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(2, 9, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(meta[relay.Constant][46] /* ty=Tensor[(2, 9, 10), bool] */, dtype="bool") /* ty=Tensor[(2, 9, 10), bool] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %425 = cast(%var_2570, dtype="float32") /* ty=Tensor[(910, 1), float32] */;
  %426 = cast(%var_2571, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %427 = reshape(%425, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float32] */;
  %428 = reshape(%426, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %429 = @func_129(%427, %428) /* ty=(Tensor[(10, 7, 13), float32], Tensor[(8, 11, 16), float32]) */;
  %430 = cast(%var_2586, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %431 = cast(%var_2571, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %432 = reshape(%430, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
  %433 = reshape(%431, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), int16] */;
  %434 = @func_692(%432, %433) /* ty=(Tensor[(9, 8, 12), uint64], Tensor[(8, 11, 16), int16], Tensor[(1408, 1), int16]) */;
  %435 = cast(meta[relay.Constant][47] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
  %436 = cast(%var_2586, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %437 = reshape(%435, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
  %438 = reshape(%436, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %439 = @func_2139(%437, %438) /* ty=(Tensor[(4, 14, 14), float64], Tensor[(4, 14, 14), float32], Tensor[(8, 11, 16), int16], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(980), float32], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) */;
  %440 = logical_or(%423, %424) /* ty=Tensor[(2, 9, 10), bool] */;
  %441 = %429.0;
  %442 = %434.1;
  %443 = %439.7;
  (%440, %441, %var_2570, %var_2571, %442, %var_2586, %443, meta[relay.Constant][47] /* ty=Tensor[(784), float32] */)
}

def @func_3809(%var_3791: Tensor[(5, 13, 12), uint8], %var_3792: Tensor[(5, 13, 12), uint8], %var_3799: Tensor[(60, 16), float64], %var_3800: Tensor[(105, 9), float64]) -> (Tensor[(5, 13, 12), bool], Tensor[(9, 2, 7), bool], Tensor[(126), int16], Tensor[(60, 16), float64], Tensor[(105, 9), float64], Tensor[(720), float32]) {
  %444 = cast(%var_3792, dtype="bool") /* ty=Tensor[(5, 13, 12), bool] */;
  %445 = shape_of(%var_3791, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(%var_3791, dtype="bool") /* ty=Tensor[(5, 13, 12), bool] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %448 = cast(meta[relay.Constant][48] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %449 = cast(%var_3799, dtype="float64") /* ty=Tensor[(60, 16), float64] */;
  %450 = cast(%var_3800, dtype="float64") /* ty=Tensor[(105, 9), float64] */;
  %451 = cast(meta[relay.Constant][49] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %452 = reshape(%448, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
  %453 = reshape(%449, newshape=[480, 2]) /* ty=Tensor[(480, 2), float64] */;
  %454 = reshape(%450, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %455 = reshape(%451, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %456 = @func_1984(%452, %453, %454, %455) /* ty=(Tensor[(9, 2, 7), bool], Tensor[(16, 10, 6), float32], Tensor[(480, 2), float64], Tensor[(15, 7, 9), float64], Tensor[(945), float64], Tensor[(720), float32]) */;
  %457 = less(%446, %447) /* ty=Tensor[(5, 13, 12), bool] */;
  %458 = %456.0;
  (%457, %458, meta[relay.Constant][48] /* ty=Tensor[(126), int16] */, %var_3799, %var_3800, meta[relay.Constant][49] /* ty=Tensor[(720), float32] */)
}

def @func_7121(%var_7094: Tensor[(10, 11, 10), uint32], %var_7108: uint32) -> (Tensor[(10, 11, 10), uint32], uint32, Tensor[(1890), float32], uint32) {
  %459 = cast(meta[relay.Constant][50] /* ty=Tensor[(10, 11, 10), uint32] */, dtype="uint32") /* ty=Tensor[(10, 11, 10), uint32] */;
  %460 = shape_of(%var_7094, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(%var_7094, dtype="uint32") /* ty=Tensor[(10, 11, 10), uint32] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %463 = cast(meta[relay.Constant][51] /* ty=Tensor[(1890), float32] */, dtype="float32") /* ty=Tensor[(1890), float32] */;
  %464 = cast(%var_7108, dtype="uint32") /* ty=uint32 */;
  %465 = reshape(%463, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), float32] */;
  %466 = reshape(%464, newshape=[]) /* ty=uint32 */;
  %467 = @func_4878(%465, %466) /* ty=(Tensor[(9, 14, 15), float32], Tensor[(9, 14, 15), float64], Tensor[(13, 5, 8), uint32], uint32) */;
  %468 = add(%461, %462) /* ty=Tensor[(10, 11, 10), uint32] */;
  %469 = %467.3;
  (%468, %469, meta[relay.Constant][51] /* ty=Tensor[(1890), float32] */, %var_7108)
}

def @func_10042() -> (Tensor[(1, 10, 6), float32], Tensor[(1, 10, 6), float64]) {
  %470 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 10, 6), float32] */, dtype="float32") /* ty=Tensor[(1, 10, 6), float32] */;
  %471 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 10, 6), float32] */, dtype="float64") /* ty=Tensor[(1, 10, 6), float64] */;
  %472 = cos(%470) /* ty=Tensor[(1, 10, 6), float32] */;
  %473 = log(%471) /* ty=Tensor[(1, 10, 6), float64] */;
  (%472, %473)
}

def @func_5630(%var_5620: uint16, %var_5621: Tensor[(13, 11, 13), uint16]) -> Tensor[(13, 11, 13), uint16] {
  %474 = cast(%var_5620, dtype="uint16") /* ty=uint16 */;
  %475 = cast(%var_5621, dtype="uint16") /* ty=Tensor[(13, 11, 13), uint16] */;
  right_shift(%474, %475) /* ty=Tensor[(13, 11, 13), uint16] */
}

def @func_10182(%var_10119: Tensor[(5, 4, 8), float32], %var_10135: Tensor[(30), bool], %var_10138: Tensor[(1408), int16], %var_10155: Tensor[(14, 70), float32]) -> (Tensor[(16, 10, 6), float64], Tensor[(30), bool], Tensor[(3, 90), bool], Tensor[(1, 864), uint64], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(14, 70), float32], Tensor[(5, 4, 8), float64], Tensor[(5, 4, 8), float64]) {
  %476 = cast(%var_10135, dtype="bool") /* ty=Tensor[(30), bool] */;
  %477 = cast(meta[relay.Constant][53] /* ty=Tensor[(3, 90), bool] */, dtype="bool") /* ty=Tensor[(3, 90), bool] */;
  %478 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 864), uint64] */, dtype="uint64") /* ty=Tensor[(1, 864), uint64] */;
  %479 = cast(%var_10138, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %480 = reshape(%476, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), bool] */;
  %481 = reshape(%477, newshape=[9, 2, 15]) /* ty=Tensor[(9, 2, 15), bool] */;
  %482 = reshape(%478, newshape=[6, 144]) /* ty=Tensor[(6, 144), uint64] */;
  %483 = reshape(%479, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %484 = @func_5125(%480, %481, %482, %483) /* ty=(Tensor[(9, 2, 15), bool], Tensor[(8, 11, 16), int16], Tensor[(6, 144), uint64], Tensor[(1408), int16], Tensor[(16, 10, 6), float64], Tensor[(60, 16), float64]) */;
  %485 = cast(%var_10155, dtype="float32") /* ty=Tensor[(14, 70), float32] */;
  %486 = reshape(%485, newshape=[5, 14, 14]) /* ty=Tensor[(5, 14, 14), float32] */;
  %487 = cast(%var_10119, dtype="float32") /* ty=Tensor[(5, 4, 8), float32] */;
  %488 = log2(%487) /* ty=Tensor[(5, 4, 8), float32] */;
  %489 = cast(%488, dtype="float32") /* ty=Tensor[(5, 4, 8), float32] */;
  %490 = atanh(%489) /* ty=Tensor[(5, 4, 8), float32] */;
  %491 = cast(%490, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
  %492 = cast(%var_10119, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
  %493 = shape_of(%490, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%490, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %496 = %484.4;
  %497 = @func_1406(%486) /* ty=Tensor[(5, 14, 14), float32] */;
  %498 = acosh(%491) /* ty=Tensor[(5, 4, 8), float64] */;
  %499 = power(%494, %495) /* ty=Tensor[(5, 4, 8), float64] */;
  (%496, %var_10135, meta[relay.Constant][53] /* ty=Tensor[(3, 90), bool] */, meta[relay.Constant][54] /* ty=Tensor[(1, 864), uint64] */, %var_10138, %497, %var_10155, %498, %499)
}

def @func_692(%var_672: Tensor[(9, 8, 12), uint64], %var_687: Tensor[(1408, 1), int16]) -> (Tensor[(9, 8, 12), uint64], Tensor[(8, 11, 16), int16], Tensor[(1408, 1), int16]) {
  %500 = cast(meta[relay.Constant][55] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %501 = cast(%var_672, dtype="uint64") /* ty=Tensor[(9, 8, 12), uint64] */;
  %502 = cast(%var_687, dtype="int16") /* ty=Tensor[(1408, 1), int16] */;
  %503 = cast(%var_687, dtype="int16") /* ty=Tensor[(1408, 1), int16] */;
  %504 = reshape(%502, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %505 = reshape(%503, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %506 = @func_72(%504, %505) /* ty=(Tensor[(8, 11, 16), int16],) */;
  %507 = maximum(%500, %501) /* ty=Tensor[(9, 8, 12), uint64] */;
  %508 = %506.0;
  (%507, %508, %var_687)
}

def @func_4878(%var_4825: Tensor[(9, 14, 15), float32], %var_4875: uint32) -> (Tensor[(9, 14, 15), float32], Tensor[(9, 14, 15), float64], Tensor[(13, 5, 8), uint32], uint32) {
  %509 = cast(%var_4825, dtype="float32") /* ty=Tensor[(9, 14, 15), float32] */;
  %510 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(9, 14, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(meta[relay.Constant][56] /* ty=Tensor[(9, 14, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 14, 15), float32] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %513 = cast(meta[relay.Constant][56] /* ty=Tensor[(9, 14, 15), float32] */, dtype="bool") /* ty=Tensor[(9, 14, 15), bool] */;
  %514 = shape_of(%var_4825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%var_4825, dtype="bool") /* ty=Tensor[(9, 14, 15), bool] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %517 = greater_equal(%515, %516) /* ty=Tensor[(9, 14, 15), bool] */;
  %518 = cast(%517, dtype="float64") /* ty=Tensor[(9, 14, 15), float64] */;
  %519 = cast(%var_4875, dtype="uint32") /* ty=uint32 */;
  %520 = reshape(%519, newshape=[]) /* ty=uint32 */;
  %521 = @func_3957(%520) /* ty=(Tensor[(13, 5, 8), uint32], Tensor[(13, 5, 8), float32]) */;
  %522 = mod(%511, %512) /* ty=Tensor[(9, 14, 15), float32] */;
  %523 = atan(%518) /* ty=Tensor[(9, 14, 15), float64] */;
  %524 = %521.0;
  (%522, %523, %524, %var_4875)
}

def @func_4318(%var_4312: Tensor[(10, 11, 2), float32], %var_4313: Tensor[(10, 11, 2), float32]) -> (Tensor[(10, 11, 2), float32],) {
  %525 = cast(%var_4313, dtype="float32") /* ty=Tensor[(10, 11, 2), float32] */;
  %526 = shape_of(%var_4312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %527 = cast(%var_4312, dtype="float32") /* ty=Tensor[(10, 11, 2), float32] */;
  %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %529 = floor_mod(%527, %528) /* ty=Tensor[(10, 11, 2), float32] */;
  (%529,)
}

def @func_8040(%var_8035: Tensor[(16, 12, 16), int16]) -> Tensor[(16, 12, 16), int16] {
  %530 = cast(meta[relay.Constant][57] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %531 = cast(%var_8035, dtype="int16") /* ty=Tensor[(16, 12, 16), int16] */;
  bitwise_and(%530, %531) /* ty=Tensor[(16, 12, 16), int16] */
}

def @func_4442(%var_4427: Tensor[(1408), int16], %var_4436: Tensor[(7, 182), int64], %var_4439: Tensor[(1386), uint64]) -> (Tensor[(8, 7, 4), bool], Tensor[(10, 7, 13), float32], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(13, 7, 14), int64], int64, Tensor[(7, 182), int64], Tensor[(14, 9, 11), bool], Tensor[(1386), uint64]) {
  %532 = cast(meta[relay.Constant][58] /* ty=Tensor[(8, 7, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 7, 4), float64] */;
  %533 = rsqrt(%532) /* ty=Tensor[(8, 7, 4), float64] */;
  %534 = cast(%533, dtype="float64") /* ty=Tensor[(8, 7, 4), float64] */;
  %535 = sinh(%534) /* ty=Tensor[(8, 7, 4), float64] */;
  %536 = cast(%535, dtype="bool") /* ty=Tensor[(8, 7, 4), bool] */;
  %537 = shape_of(%533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%533, dtype="bool") /* ty=Tensor[(8, 7, 4), bool] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %540 = cast(meta[relay.Constant][59] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %541 = cast(%var_4427, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %542 = reshape(%540, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float32] */;
  %543 = reshape(%541, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %544 = @func_129(%542, %543) /* ty=(Tensor[(10, 7, 13), float32], Tensor[(8, 11, 16), float32]) */;
  %545 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %546 = cast(%var_4436, dtype="int64") /* ty=Tensor[(7, 182), int64] */;
  %547 = reshape(%545, newshape=[]) /* ty=int64 */;
  %548 = reshape(%546, newshape=[13, 7, 14]) /* ty=Tensor[(13, 7, 14), int64] */;
  %549 = @func_2268(%547, %548) /* ty=(Tensor[(13, 7, 14), int64],) */;
  %550 = cast(%var_4439, dtype="uint64") /* ty=Tensor[(1386), uint64] */;
  %551 = cast(%var_4439, dtype="uint64") /* ty=Tensor[(1386), uint64] */;
  %552 = reshape(%550, newshape=[14, 9, 11]) /* ty=Tensor[(14, 9, 11), uint64] */;
  %553 = reshape(%551, newshape=[14, 9, 11]) /* ty=Tensor[(14, 9, 11), uint64] */;
  %554 = @func_3999(%552, %553) /* ty=(Tensor[(14, 9, 11), uint64], Tensor[(14, 9, 11), bool]) */;
  %555 = logical_or(%538, %539) /* ty=Tensor[(8, 7, 4), bool] */;
  %556 = %544.0;
  %557 = %549.0;
  %558 = %554.1;
  (%555, %556, meta[relay.Constant][59] /* ty=Tensor[(910), float32] */, %var_4427, %557, 10 /* ty=int64 */, %var_4436, %558, %var_4439)
}

def @func_3999(%var_3987: Tensor[(14, 9, 11), uint64], %var_3988: Tensor[(14, 9, 11), uint64]) -> (Tensor[(14, 9, 11), uint64], Tensor[(14, 9, 11), bool]) {
  %559 = cast(%var_3988, dtype="uint64") /* ty=Tensor[(14, 9, 11), uint64] */;
  %560 = shape_of(%var_3987, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%var_3987, dtype="uint64") /* ty=Tensor[(14, 9, 11), uint64] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %563 = cast(%var_3987, dtype="bool") /* ty=Tensor[(14, 9, 11), bool] */;
  %564 = shape_of(%var_3988, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%var_3988, dtype="bool") /* ty=Tensor[(14, 9, 11), bool] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %567 = bitwise_or(%561, %562) /* ty=Tensor[(14, 9, 11), uint64] */;
  %568 = less_equal(%565, %566) /* ty=Tensor[(14, 9, 11), bool] */;
  (%567, %568)
}

def @func_3290(%var_3280: int8, %var_3281: Tensor[(3, 7, 4), int8]) -> (Tensor[(3, 7, 4), float64],) {
  %569 = cast(%var_3280, dtype="int8") /* ty=int8 */;
  %570 = cast(%var_3281, dtype="int8") /* ty=Tensor[(3, 7, 4), int8] */;
  %571 = bitwise_and(%569, %570) /* ty=Tensor[(3, 7, 4), int8] */;
  %572 = cast(meta[relay.Constant][60] /* ty=Tensor[(3, 7, 4), int8] */, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %573 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%571, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %576 = divide(%574, %575) /* ty=Tensor[(3, 7, 4), float64] */;
  (%576,)
}

def @func_7969(%var_7959: Tensor[(7, 5, 13), float64]) -> Tensor[(7, 5, 13), float64] {
  %577 = cast(%var_7959, dtype="float64") /* ty=Tensor[(7, 5, 13), float64] */;
  asin(%577) /* ty=Tensor[(7, 5, 13), float64] */
}

def @func_5683(%var_5664: Tensor[(1408), int16], %var_5679: Tensor[(8), uint32]) -> (Tensor[(9, 10, 1), float32], Tensor[(8, 11, 16), int16], Tensor[(30, 1), bool], Tensor[(270), bool], Tensor[(864), uint64], Tensor[(1408), int16], Tensor[(910), float32], Tensor[(8), uint32]) {
  %578 = cast(meta[relay.Constant][61] /* ty=Tensor[(9, 10, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 10, 1), float32] */;
  %579 = cast(meta[relay.Constant][62] /* ty=Tensor[(30, 1), bool] */, dtype="bool") /* ty=Tensor[(30, 1), bool] */;
  %580 = cast(meta[relay.Constant][63] /* ty=Tensor[(270), bool] */, dtype="bool") /* ty=Tensor[(270), bool] */;
  %581 = cast(meta[relay.Constant][64] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %582 = cast(%var_5664, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %583 = reshape(%579, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), bool] */;
  %584 = reshape(%580, newshape=[9, 2, 15]) /* ty=Tensor[(9, 2, 15), bool] */;
  %585 = reshape(%581, newshape=[6, 144]) /* ty=Tensor[(6, 144), uint64] */;
  %586 = reshape(%582, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %587 = @func_5125(%583, %584, %585, %586) /* ty=(Tensor[(9, 2, 15), bool], Tensor[(8, 11, 16), int16], Tensor[(6, 144), uint64], Tensor[(1408), int16], Tensor[(16, 10, 6), float64], Tensor[(60, 16), float64]) */;
  %588 = cast(%var_5679, dtype="uint32") /* ty=Tensor[(8), uint32] */;
  %589 = cast(%var_5664, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %590 = reshape(%588, newshape=[2, 1, 4]) /* ty=Tensor[(2, 1, 4), uint32] */;
  %591 = reshape(%589, newshape=[44, 32]) /* ty=Tensor[(44, 32), int16] */;
  %592 = @func_2736(%590, %591) /* ty=(Tensor[(2, ?, 4), uint32], Tensor[(910), float32], Tensor[(44, 32), uint64], Tensor[(9, 10, 8), float32], float32, Tensor[(720), float32], Tensor[(8, 11, 16), float64]) */;
  %593 = tan(%578) /* ty=Tensor[(9, 10, 1), float32] */;
  %594 = %587.1;
  %595 = %592.1;
  (%593, %594, meta[relay.Constant][62] /* ty=Tensor[(30, 1), bool] */, meta[relay.Constant][63] /* ty=Tensor[(270), bool] */, meta[relay.Constant][64] /* ty=Tensor[(864), uint64] */, %var_5664, %595, %var_5679)
}

def @func_8202(%var_8138: Tensor[(4, 2, 4), bool], %var_8139: Tensor[(4, 2, 4), bool], %var_8172: Tensor[(6, 140), float32], %var_8174: Tensor[(784), float32], %var_8175: Tensor[(864), uint64], %var_8184: Tensor[(44, 32), int16]) -> (Tensor[(4, 2, 4), uint32], Tensor[(16, 10, 6), float32], Tensor[(6, 140), float32], Tensor[(4, 180), float32], Tensor[(784), float32], Tensor[(864), uint64], Tensor[(1859, 1), uint16], Tensor[(960), float64], Tensor[(9, 10, 8), float32], float32, Tensor[(8, 11, 16), int16], Tensor[(44, 32), int16], Tensor[(4, 2, 4), float32]) {
  %596 = cast(%var_8139, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %597 = shape_of(%var_8138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %598 = cast(%var_8138, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %599 = dyn.reshape(%596, %597, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %600 = logical_and(%598, %599) /* ty=Tensor[(4, 2, 4), bool] */;
  %601 = cast(%var_8138, dtype="uint32") /* ty=Tensor[(4, 2, 4), uint32] */;
  %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%600, dtype="uint32") /* ty=Tensor[(4, 2, 4), uint32] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %605 = cast(%var_8172, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %606 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 180), float32] */, dtype="float32") /* ty=Tensor[(4, 180), float32] */;
  %607 = cast(%var_8174, dtype="float32") /* ty=Tensor[(784), float32] */;
  %608 = cast(%var_8175, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %609 = cast(meta[relay.Constant][66] /* ty=Tensor[(1859, 1), uint16] */, dtype="uint16") /* ty=Tensor[(1859, 1), uint16] */;
  %610 = cast(meta[relay.Constant][67] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %611 = reshape(%605, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
  %612 = reshape(%606, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %613 = reshape(%607, newshape=[784]) /* ty=Tensor[(784), float32] */;
  %614 = reshape(%608, newshape=[216, 4]) /* ty=Tensor[(216, 4), uint64] */;
  %615 = reshape(%609, newshape=[1859]) /* ty=Tensor[(1859), uint16] */;
  %616 = reshape(%610, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %617 = @func_6202(%611, %612, %613, %614, %615, %616) /* ty=(Tensor[(12, 5, 14), uint8], Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(5, 14, 14), float32], Tensor[(784), float32], Tensor[(216, 4), uint64], Tensor[(13, 11, 13), uint16], Tensor[(1859), uint16], Tensor[(16, 10, 6), float32], Tensor[(960), float64], Tensor[(12, 5, 14), int32], Tensor[(14, 9, 11), bool], Tensor[(2, 704), int16], Tensor[(1274), int64], Tensor[(462, 3), uint64]) */;
  %618 = cast(-5.522f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %619 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 180), float32] */, dtype="float32") /* ty=Tensor[(4, 180), float32] */;
  %620 = reshape(%618, newshape=[]) /* ty=float32 */;
  %621 = reshape(%619, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %622 = cast(%var_8184, dtype="int16") /* ty=Tensor[(44, 32), int16] */;
  %623 = cast(%var_8184, dtype="int16") /* ty=Tensor[(44, 32), int16] */;
  %624 = reshape(%622, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %625 = reshape(%623, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %626 = @func_72(%624, %625) /* ty=(Tensor[(8, 11, 16), int16],) */;
  %627 = cast(%var_8139, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %628 = logical_xor(%603, %604) /* ty=Tensor[(4, 2, 4), uint32] */;
  %629 = %617.8;
  %630 = @func_285(%620, %621) /* ty=Tensor[(9, 10, 8), float32] */;
  %631 = %626.0;
  %632 = sigmoid(%627) /* ty=Tensor[(4, 2, 4), float32] */;
  (%628, %629, %var_8172, meta[relay.Constant][65] /* ty=Tensor[(4, 180), float32] */, %var_8174, %var_8175, meta[relay.Constant][66] /* ty=Tensor[(1859, 1), uint16] */, meta[relay.Constant][67] /* ty=Tensor[(960), float64] */, %630, -5.522f /* ty=float32 */, %631, %var_8184, %632)
}

def @func_9947(%var_9826: Tensor[(13, 9, 12), int16], %var_9827: Tensor[(13, 9, 12), int16], %var_9839: Tensor[(350), float64], %var_9912: Tensor[(20), int32], %var_9913: Tensor[(180), int32]) -> (Tensor[(13, 9, 12), bool], Tensor[(1408), int16], Tensor[(350), float64], Tensor[(280), float32], Tensor[(280), float32], Tensor[(1408), int16], Tensor[(20), int32], Tensor[(180), int32], Tensor[(14, 6, 12), float32], Tensor[(1008), float32]) {
  %633 = cast(%var_9827, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %634 = shape_of(%var_9826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%var_9826, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %637 = cast(%var_9839, dtype="float64") /* ty=Tensor[(350), float64] */;
  %638 = reshape(%637, newshape=[5, 14, 5]) /* ty=Tensor[(5, 14, 5), float64] */;
  %639 = @func_3552(%638) /* ty=(Tensor[(5, 14, 5), float64], Tensor[(8, 11, 16), int16], Tensor[(1408), int16]) */;
  %640 = cast(meta[relay.Constant][68] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %641 = reshape(%640, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %642 = @func_6941(%641) /* ty=(Tensor[(2, 15, 8), float64], Tensor[(7, 10, 4), bool], Tensor[(280), float32]) */;
  %643 = cast(%var_9912, dtype="int32") /* ty=Tensor[(20), int32] */;
  %644 = cast(%var_9913, dtype="int32") /* ty=Tensor[(180), int32] */;
  %645 = %639.2;
  %646 = cast(%645, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %647 = reshape(%643, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), int32] */;
  %648 = reshape(%644, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), int32] */;
  %649 = reshape(%646, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %650 = @func_5767(%647, %648, %649) /* ty=(Tensor[(10, 9, 2), bool], Tensor[(16, 10, 6), float64], Tensor[(960), float64], Tensor[(16, 10, 6), float64], Tensor[(910, 1), float32], Tensor[(455, 2), float32], Tensor[(1408), int16], Tensor[(12, 72), uint64]) */;
  %651 = cast(meta[relay.Constant][69] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %652 = reshape(%651, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), float32] */;
  %653 = less_equal(%635, %636) /* ty=Tensor[(13, 9, 12), bool] */;
  %654 = %642.2;
  %655 = %650.6;
  %656 = @func_4785(%652) /* ty=Tensor[(14, 6, 12), float32] */;
  (%653, %645, %var_9839, %654, meta[relay.Constant][68] /* ty=Tensor[(280), float32] */, %655, %var_9912, %var_9913, %656, meta[relay.Constant][69] /* ty=Tensor[(1008), float32] */)
}

def @func_10078() -> (Tensor[(1, 10, 6), float64],) {
  %657 = @func_10042() /* ty=(Tensor[(1, 10, 6), float32], Tensor[(1, 10, 6), float64]) */;
  %658 = %657.1;
  (%658,)
}

def @func_6941(%var_6939: Tensor[(280), float32]) -> (Tensor[(2, 15, 8), float64], Tensor[(7, 10, 4), bool], Tensor[(280), float32]) {
  %659 = cast(meta[relay.Constant][70] /* ty=Tensor[(2, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 15, 8), float64] */;
  %660 = cast(%var_6939, dtype="float32") /* ty=Tensor[(280), float32] */;
  %661 = reshape(%660, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
  %662 = acos(%659) /* ty=Tensor[(2, 15, 8), float64] */;
  %663 = @func_5307(%661) /* ty=Tensor[(7, 10, 4), bool] */;
  (%662, %663, %var_6939)
}

def @func_245(%var_239: Tensor[(16, 10, 6), float64]) -> (Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) {
  %664 = cast(%var_239, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %665 = shape_of(meta[relay.Constant][71] /* ty=Tensor[(16, 10, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %666 = cast(meta[relay.Constant][71] /* ty=Tensor[(16, 10, 6), float64] */, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %668 = cast(meta[relay.Constant][71] /* ty=Tensor[(16, 10, 6), float64] */, dtype="float32") /* ty=Tensor[(16, 10, 6), float32] */;
  %669 = multiply(%666, %667) /* ty=Tensor[(16, 10, 6), float64] */;
  %670 = acosh(%668) /* ty=Tensor[(16, 10, 6), float32] */;
  (%669, %670)
}

def @func_4785(%var_4772: Tensor[(14, 6, 12), float32]) -> Tensor[(14, 6, 12), float32] {
  %671 = cast(%var_4772, dtype="float32") /* ty=Tensor[(14, 6, 12), float32] */;
  sinh(%671) /* ty=Tensor[(14, 6, 12), float32] */
}

def @main(%var_10519: Tensor[(784, 1), float32], %var_10527: Tensor[(784, 14), float32]) -> (Tensor[(1, 10, 6), float64], Tensor[(5, 14, 14), float32], Tensor[(864, 1), uint64], Tensor[(784, 14), float32]) {
  %672 = @func_10042() /* ty=(Tensor[(1, 10, 6), float32], Tensor[(1, 10, 6), float64]) */;
  %673 = cast(%var_10519, dtype="float32") /* ty=Tensor[(784, 1), float32] */;
  %674 = cast(meta[relay.Constant][72] /* ty=Tensor[(864, 1), uint64] */, dtype="uint64") /* ty=Tensor[(864, 1), uint64] */;
  %675 = reshape(%673, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
  %676 = reshape(%674, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %677 = @func_2139(%675, %676) /* ty=(Tensor[(4, 14, 14), float64], Tensor[(4, 14, 14), float32], Tensor[(8, 11, 16), int16], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(980), float32], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) */;
  %678 = cast(%var_10519, dtype="float32") /* ty=Tensor[(784, 1), float32] */;
  %679 = cast(%var_10527, dtype="float32") /* ty=Tensor[(784, 14), float32] */;
  %680 = %672.1;
  %681 = %677.4;
  %682 = floor_divide(%678, %679) /* ty=Tensor[(784, 14), float32] */;
  (%680, %681, meta[relay.Constant][72] /* ty=Tensor[(864, 1), uint64] */, %682)
}

def @func_3957(%var_3919: uint32) -> (Tensor[(13, 5, 8), uint32], Tensor[(13, 5, 8), float32]) {
  %683 = cast(%var_3919, dtype="uint32") /* ty=uint32 */;
  %684 = cast(meta[relay.Constant][73] /* ty=Tensor[(13, 5, 8), uint32] */, dtype="uint32") /* ty=Tensor[(13, 5, 8), uint32] */;
  %685 = cast(meta[relay.Constant][73] /* ty=Tensor[(13, 5, 8), uint32] */, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
  %686 = acos(%685) /* ty=Tensor[(13, 5, 8), float32] */;
  %687 = cast(meta[relay.Constant][74] /* ty=Tensor[(13, 5, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
  %688 = shape_of(%686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%686, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %691 = maximum(%683, %684) /* ty=Tensor[(13, 5, 8), uint32] */;
  %692 = power(%689, %690) /* ty=Tensor[(13, 5, 8), float32] */;
  (%691, %692)
}

def @func_9613(%var_9576: Tensor[(11, 1, 16), float64], %var_9603: Tensor[(195), float64]) -> (Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), bool], Tensor[(16, 10, 6), float32], Tensor[(960), float64], Tensor[(13, 15, ?), bool], Tensor[(195), float64], Tensor[(11, 1, 16), float32]) {
  %693 = cast(%var_9576, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  %694 = atanh(%693) /* ty=Tensor[(11, 1, 16), float64] */;
  %695 = cast(%var_9576, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%694, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %699 = cast(%694, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %700 = shape_of(%var_9576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %701 = cast(%var_9576, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %703 = cast(meta[relay.Constant][75] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %704 = reshape(%703, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %705 = @func_245(%704) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %706 = cast(%var_9603, dtype="float64") /* ty=Tensor[(195), float64] */;
  %707 = reshape(%706, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), float64] */;
  %708 = @func_9554(%707) /* ty=(Tensor[(13, 15, 1), float64], Tensor[(13, 15, ?), bool]) */;
  %709 = cast(%694, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
  %710 = less_equal(%697, %698) /* ty=Tensor[(11, ?, 16), bool] */;
  %711 = logical_and(%701, %702) /* ty=Tensor[(11, ?, 16), bool] */;
  %712 = %705.1;
  %713 = %708.1;
  %714 = cos(%709) /* ty=Tensor[(11, 1, 16), float32] */;
  (%710, %711, %712, meta[relay.Constant][75] /* ty=Tensor[(960), float64] */, %713, %var_9603, %714)
}

def @func_7729(%var_7692: Tensor[(4, 10, 2), uint64]) -> (Tensor[(4, 10, 2), uint64], Tensor[(4, 10, 2), int32], Tensor[(16, 10, 6), float32], Tensor[(504), float32], Tensor[(4, 10, 2), float64]) {
  %715 = cast(meta[relay.Constant][76] /* ty=Tensor[(4, 10, 2), uint64] */, dtype="uint64") /* ty=Tensor[(4, 10, 2), uint64] */;
  %716 = shape_of(%var_7692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %717 = cast(%var_7692, dtype="uint64") /* ty=Tensor[(4, 10, 2), uint64] */;
  %718 = dyn.reshape(%715, %716, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %719 = cast(meta[relay.Constant][76] /* ty=Tensor[(4, 10, 2), uint64] */, dtype="float32") /* ty=Tensor[(4, 10, 2), float32] */;
  %720 = log2(%719) /* ty=Tensor[(4, 10, 2), float32] */;
  %721 = cast(%var_7692, dtype="int32") /* ty=Tensor[(4, 10, 2), int32] */;
  %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%720, dtype="int32") /* ty=Tensor[(4, 10, 2), int32] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %725 = cast(meta[relay.Constant][77] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %726 = reshape(%725, newshape=[9, 4, 14]) /* ty=Tensor[(9, 4, 14), float32] */;
  %727 = @func_1351(%726) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(16, 10, 6), float32], Tensor[(960), float64]) */;
  %728 = cast(%720, dtype="float64") /* ty=Tensor[(4, 10, 2), float64] */;
  %729 = minimum(%717, %718) /* ty=Tensor[(4, 10, 2), uint64] */;
  %730 = maximum(%723, %724) /* ty=Tensor[(4, 10, 2), int32] */;
  %731 = %727.1;
  %732 = atanh(%728) /* ty=Tensor[(4, 10, 2), float64] */;
  (%729, %730, %731, meta[relay.Constant][77] /* ty=Tensor[(504), float32] */, %732)
}

def @func_7556(%var_7549: Tensor[(960), float64]) -> (Tensor[(14, 12, 16), float32], Tensor[(720), float32], Tensor[(780), uint8], Tensor[(960), float64], Tensor[(945), float64]) {
  %733 = cast(meta[relay.Constant][78] /* ty=Tensor[(14, 12, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
  %734 = cast(meta[relay.Constant][79] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %735 = cast(meta[relay.Constant][79] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %736 = cast(%var_7549, dtype="float64") /* ty=Tensor[(960), float64] */;
  %737 = cast(meta[relay.Constant][80] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %738 = reshape(%734, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), uint8] */;
  %739 = reshape(%735, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), uint8] */;
  %740 = reshape(%736, newshape=[60, 16]) /* ty=Tensor[(60, 16), float64] */;
  %741 = reshape(%737, newshape=[105, 9]) /* ty=Tensor[(105, 9), float64] */;
  %742 = @func_3809(%738, %739, %740, %741) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(9, 2, 7), bool], Tensor[(126), int16], Tensor[(60, 16), float64], Tensor[(105, 9), float64], Tensor[(720), float32]) */;
  %743 = log(%733) /* ty=Tensor[(14, 12, 16), float32] */;
  %744 = %742.5;
  (%743, %744, meta[relay.Constant][79] /* ty=Tensor[(780), uint8] */, %var_7549, meta[relay.Constant][80] /* ty=Tensor[(945), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6944(%var_6942: Tensor[(280), float32]) -> (Tensor[(2, 15, 8), float64], Tensor[(7, 10, 4), bool], Tensor[(280), float32]) {
  @func_6941(%var_6942) /* ty=(Tensor[(2, 15, 8), float64], Tensor[(7, 10, 4), bool], Tensor[(280), float32]) */
}

def @func_341(%var_339: Tensor[(15, 7, 9), float64], %var_340: Tensor[(180, 4), float32]) -> (Tensor[(15, 7, 9), float64], Tensor[(9, 10, 8), float32], float32, Tensor[(180, 4), float32]) {
  @func_337(%var_339, %var_340) /* ty=(Tensor[(15, 7, 9), float64], Tensor[(9, 10, 8), float32], float32, Tensor[(180, 4), float32]) */
}

def @func_4604(%var_4595: Tensor[(11, 12, 9), float64]) -> (Tensor[(11, 12, 9), float64],) {
  %0 = cast(%var_4595, dtype="float64") /* ty=Tensor[(11, 12, 9), float64] */;
  %1 = log2(%0) /* ty=Tensor[(11, 12, 9), float64] */;
  (%1,)
}

def @func_4787(%var_4786: Tensor[(14, 6, 12), float32]) -> Tensor[(14, 6, 12), float32] {
  %3 = fn (%var_4772: Tensor[(14, 6, 12), float32]) -> Tensor[(14, 6, 12), float32] {
    %2 = cast(%var_4772, dtype="float32") /* ty=Tensor[(14, 6, 12), float32] */;
    sinh(%2) /* ty=Tensor[(14, 6, 12), float32] */
  };
  %3(%var_4786) /* ty=Tensor[(14, 6, 12), float32] */
}

def @func_76(%var_74: Tensor[(8, 11, 16), int16], %var_75: Tensor[(8, 11, 16), int16]) -> (Tensor[(8, 11, 16), int16],) {
  @func_72(%var_74, %var_75) /* ty=(Tensor[(8, 11, 16), int16],) */
}

def @func_10092(%var_10090: Tensor[(4, 14, 3), uint32], %var_10091: Tensor[(4, 14, 3), uint32]) -> Tensor[(4, 14, 3), bool] {
  %8 = fn (%var_10083: Tensor[(4, 14, 3), uint32], %var_10084: Tensor[(4, 14, 3), uint32]) -> Tensor[(4, 14, 3), bool] {
    %4 = cast(%var_10084, dtype="bool") /* ty=Tensor[(4, 14, 3), bool] */;
    %5 = shape_of(%var_10083, dtype="int32") /* ty=Tensor[(3), int32] */;
    %6 = cast(%var_10083, dtype="bool") /* ty=Tensor[(4, 14, 3), bool] */;
    %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%6, %7) /* ty=Tensor[(4, 14, 3), bool] */
  };
  %8(%var_10090, %var_10091) /* ty=Tensor[(4, 14, 3), bool] */
}

def @func_2142(%var_2140: Tensor[(4, 14, 14), float32], %var_2141: Tensor[(864), uint64]) -> (Tensor[(4, 14, 14), float64], Tensor[(4, 14, 14), float32], Tensor[(8, 11, 16), int16], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(980), float32], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) {
  %45 = fn (%var_2085: Tensor[(4, 14, 14), float32], %var_2133: Tensor[(864), uint64]) -> (Tensor[(4, 14, 14), float64], Tensor[(4, 14, 14), float32], Tensor[(8, 11, 16), int16], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(980), float32], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) {
    %9 = cast(%var_2085, dtype="float32") /* ty=Tensor[(4, 14, 14), float32] */;
    %10 = sinh(%9) /* ty=Tensor[(4, 14, 14), float32] */;
    %11 = cast(%10, dtype="float32") /* ty=Tensor[(4, 14, 14), float32] */;
    %12 = rsqrt(%11) /* ty=Tensor[(4, 14, 14), float32] */;
    %13 = cast(%10, dtype="int8") /* ty=Tensor[(4, 14, 14), int8] */;
    %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
    %15 = cast(%12, dtype="int8") /* ty=Tensor[(4, 14, 14), int8] */;
    %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %17 = bitwise_and(%15, %16) /* ty=Tensor[(4, 14, 14), int8] */;
    %18 = cast(%var_2085, dtype="float32") /* ty=Tensor[(4, 14, 14), float32] */;
    %19 = asin(%18) /* ty=Tensor[(4, 14, 14), float32] */;
    %20 = cast(%19, dtype="float64") /* ty=Tensor[(4, 14, 14), float64] */;
    %21 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
    %22 = cast(%17, dtype="float64") /* ty=Tensor[(4, 14, 14), float64] */;
    %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %24 = cast(%10, dtype="float32") /* ty=Tensor[(4, 14, 14), float32] */;
    %25 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
    %26 = cast(%17, dtype="float32") /* ty=Tensor[(4, 14, 14), float32] */;
    %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %28 = cast(meta[relay.Constant][0] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
    %29 = cast(meta[relay.Constant][0] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
    %30 = reshape(%28, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
    %31 = reshape(%29, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
    %32 = @func_72(%30, %31) /* ty=(Tensor[(8, 11, 16), int16],) */;
    %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(980), float32] */, dtype="float32") /* ty=Tensor[(980), float32] */;
    %34 = reshape(%33, newshape=[5, 14, 14]) /* ty=Tensor[(5, 14, 14), float32] */;
    %35 = cast(%var_2133, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %36 = %32.0;
    %37 = cast(%36, dtype="int16") /* ty=Tensor[(8, 11, 16), int16] */;
    %38 = reshape(%35, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
    %39 = reshape(%37, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), int16] */;
    %40 = @func_692(%38, %39) /* ty=(Tensor[(9, 8, 12), uint64], Tensor[(8, 11, 16), int16], Tensor[(1408, 1), int16]) */;
    %41 = divide(%22, %23) /* ty=Tensor[(4, 14, 14), float64] */;
    %42 = minimum(%26, %27) /* ty=Tensor[(4, 14, 14), float32] */;
    %43 = @func_1406(%34) /* ty=Tensor[(5, 14, 14), float32] */;
    %44 = %40.0;
    (%41, %42, %36, meta[relay.Constant][0] /* ty=Tensor[(1408), int16] */, %43, meta[relay.Constant][1] /* ty=Tensor[(980), float32] */, %44, %var_2133)
  };
  %45(%var_2140, %var_2141) /* ty=(Tensor[(4, 14, 14), float64], Tensor[(4, 14, 14), float32], Tensor[(8, 11, 16), int16], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(980), float32], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) */
}

def @func_7971(%var_7970: Tensor[(7, 5, 13), float64]) -> Tensor[(7, 5, 13), float64] {
  %47 = fn (%var_7959: Tensor[(7, 5, 13), float64]) -> Tensor[(7, 5, 13), float64] {
    %46 = cast(%var_7959, dtype="float64") /* ty=Tensor[(7, 5, 13), float64] */;
    asin(%46) /* ty=Tensor[(7, 5, 13), float64] */
  };
  %47(%var_7970) /* ty=Tensor[(7, 5, 13), float64] */
}

def @func_6210(%var_6204: Tensor[(12, 5, 14), float32], %var_6205: Tensor[(720), float32], %var_6206: Tensor[(784), float32], %var_6207: Tensor[(216, 4), uint64], %var_6208: Tensor[(1859), uint16], %var_6209: Tensor[(960), float64]) -> (Tensor[(12, 5, 14), uint8], Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(5, 14, 14), float32], Tensor[(784), float32], Tensor[(216, 4), uint64], Tensor[(13, 11, 13), uint16], Tensor[(1859), uint16], Tensor[(16, 10, 6), float32], Tensor[(960), float64], Tensor[(12, 5, 14), int32], Tensor[(14, 9, 11), bool], Tensor[(2, 704), int16], Tensor[(1274), int64], Tensor[(462, 3), uint64]) {
  @func_6202(%var_6204, %var_6205, %var_6206, %var_6207, %var_6208, %var_6209) /* ty=(Tensor[(12, 5, 14), uint8], Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(5, 14, 14), float32], Tensor[(784), float32], Tensor[(216, 4), uint64], Tensor[(13, 11, 13), uint16], Tensor[(1859), uint16], Tensor[(16, 10, 6), float32], Tensor[(960), float64], Tensor[(12, 5, 14), int32], Tensor[(14, 9, 11), bool], Tensor[(2, 704), int16], Tensor[(1274), int64], Tensor[(462, 3), uint64]) */
}

def @func_696(%var_694: Tensor[(9, 8, 12), uint64], %var_695: Tensor[(1408, 1), int16]) -> (Tensor[(9, 8, 12), uint64], Tensor[(8, 11, 16), int16], Tensor[(1408, 1), int16]) {
  @func_692(%var_694, %var_695) /* ty=(Tensor[(9, 8, 12), uint64], Tensor[(8, 11, 16), int16], Tensor[(1408, 1), int16]) */
}

def @func_4321(%var_4319: Tensor[(10, 11, 2), float32], %var_4320: Tensor[(10, 11, 2), float32]) -> (Tensor[(10, 11, 2), float32],) {
  %53 = fn (%var_4312: Tensor[(10, 11, 2), float32], %var_4313: Tensor[(10, 11, 2), float32]) -> (Tensor[(10, 11, 2), float32],) {
    %48 = cast(%var_4313, dtype="float32") /* ty=Tensor[(10, 11, 2), float32] */;
    %49 = shape_of(%var_4312, dtype="int32") /* ty=Tensor[(3), int32] */;
    %50 = cast(%var_4312, dtype="float32") /* ty=Tensor[(10, 11, 2), float32] */;
    %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %52 = floor_mod(%50, %51) /* ty=Tensor[(10, 11, 2), float32] */;
    (%52,)
  };
  %53(%var_4319, %var_4320) /* ty=(Tensor[(10, 11, 2), float32],) */
}

def @func_10383() -> Tensor[(1, 10, 6), float32] {
  @func_10381() /* ty=Tensor[(1, 10, 6), float32] */
}

def @func_1351(%var_1339: Tensor[(9, 4, 14), float32]) -> (Tensor[(9, 4, 14), float32], Tensor[(16, 10, 6), float32], Tensor[(960), float64]) {
  %54 = cast(%var_1339, dtype="float32") /* ty=Tensor[(9, 4, 14), float32] */;
  %55 = cast(meta[relay.Constant][2] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %56 = reshape(%55, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %57 = @func_245(%56) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %58 = erf(%54) /* ty=Tensor[(9, 4, 14), float32] */;
  %59 = %57.1;
  (%58, %59, meta[relay.Constant][2] /* ty=Tensor[(960), float64] */)
}

def @func_7729(%var_7692: Tensor[(4, 10, 2), uint64]) -> (Tensor[(4, 10, 2), uint64], Tensor[(4, 10, 2), int32], Tensor[(16, 10, 6), float32], Tensor[(504), float32], Tensor[(4, 10, 2), float64]) {
  %60 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 10, 2), uint64] */, dtype="uint64") /* ty=Tensor[(4, 10, 2), uint64] */;
  %61 = shape_of(%var_7692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%var_7692, dtype="uint64") /* ty=Tensor[(4, 10, 2), uint64] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %64 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 10, 2), uint64] */, dtype="float32") /* ty=Tensor[(4, 10, 2), float32] */;
  %65 = log2(%64) /* ty=Tensor[(4, 10, 2), float32] */;
  %66 = cast(%var_7692, dtype="int32") /* ty=Tensor[(4, 10, 2), int32] */;
  %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
  %68 = cast(%65, dtype="int32") /* ty=Tensor[(4, 10, 2), int32] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %70 = cast(meta[relay.Constant][4] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %71 = reshape(%70, newshape=[9, 4, 14]) /* ty=Tensor[(9, 4, 14), float32] */;
  %72 = @func_1351(%71) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(16, 10, 6), float32], Tensor[(960), float64]) */;
  %73 = cast(%65, dtype="float64") /* ty=Tensor[(4, 10, 2), float64] */;
  %74 = minimum(%62, %63) /* ty=Tensor[(4, 10, 2), uint64] */;
  %75 = maximum(%68, %69) /* ty=Tensor[(4, 10, 2), int32] */;
  %76 = %72.1;
  %77 = atanh(%73) /* ty=Tensor[(4, 10, 2), float64] */;
  (%74, %75, %76, meta[relay.Constant][4] /* ty=Tensor[(504), float32] */, %77)
}

def @func_3555(%var_3553: Tensor[(5, 14, 5), float64]) -> (Tensor[(5, 14, 5), float64], Tensor[(8, 11, 16), int16], Tensor[(1408), int16]) {
  @func_3552(%var_3553) /* ty=(Tensor[(5, 14, 5), float64], Tensor[(8, 11, 16), int16], Tensor[(1408), int16]) */
}

def @func_337(%var_323: Tensor[(15, 7, 9), float64], %var_329: Tensor[(180, 4), float32]) -> (Tensor[(15, 7, 9), float64], Tensor[(9, 10, 8), float32], float32, Tensor[(180, 4), float32]) {
  %78 = cast(%var_323, dtype="float64") /* ty=Tensor[(15, 7, 9), float64] */;
  %79 = cast(-0.727176f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %80 = cast(%var_329, dtype="float32") /* ty=Tensor[(180, 4), float32] */;
  %81 = reshape(%79, newshape=[]) /* ty=float32 */;
  %82 = reshape(%80, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %83 = log10(%78) /* ty=Tensor[(15, 7, 9), float64] */;
  %84 = @func_285(%81, %82) /* ty=Tensor[(9, 10, 8), float32] */;
  (%83, %84, -0.727176f /* ty=float32 */, %var_329)
}

def @func_8040(%var_8035: Tensor[(16, 12, 16), int16]) -> Tensor[(16, 12, 16), int16] {
  %85 = cast(meta[relay.Constant][5] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %86 = cast(%var_8035, dtype="int16") /* ty=Tensor[(16, 12, 16), int16] */;
  bitwise_and(%85, %86) /* ty=Tensor[(16, 12, 16), int16] */
}

def @func_4882(%var_4880: Tensor[(9, 14, 15), float32], %var_4881: uint32) -> (Tensor[(9, 14, 15), float32], Tensor[(9, 14, 15), float64], Tensor[(13, 5, 8), uint32], uint32) {
  @func_4878(%var_4880, %var_4881) /* ty=(Tensor[(9, 14, 15), float32], Tensor[(9, 14, 15), float64], Tensor[(13, 5, 8), uint32], uint32) */
}

def @func_245(%var_239: Tensor[(16, 10, 6), float64]) -> (Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) {
  %87 = cast(%var_239, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %88 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(16, 10, 6), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 10, 6), float64] */, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %91 = cast(meta[relay.Constant][6] /* ty=Tensor[(16, 10, 6), float64] */, dtype="float32") /* ty=Tensor[(16, 10, 6), float32] */;
  %92 = multiply(%89, %90) /* ty=Tensor[(16, 10, 6), float64] */;
  %93 = acosh(%91) /* ty=Tensor[(16, 10, 6), float32] */;
  (%92, %93)
}

def @func_4878(%var_4825: Tensor[(9, 14, 15), float32], %var_4875: uint32) -> (Tensor[(9, 14, 15), float32], Tensor[(9, 14, 15), float64], Tensor[(13, 5, 8), uint32], uint32) {
  %94 = cast(%var_4825, dtype="float32") /* ty=Tensor[(9, 14, 15), float32] */;
  %95 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(9, 14, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(meta[relay.Constant][7] /* ty=Tensor[(9, 14, 15), float32] */, dtype="float32") /* ty=Tensor[(9, 14, 15), float32] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %98 = cast(meta[relay.Constant][7] /* ty=Tensor[(9, 14, 15), float32] */, dtype="bool") /* ty=Tensor[(9, 14, 15), bool] */;
  %99 = shape_of(%var_4825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%var_4825, dtype="bool") /* ty=Tensor[(9, 14, 15), bool] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %102 = greater_equal(%100, %101) /* ty=Tensor[(9, 14, 15), bool] */;
  %103 = cast(%102, dtype="float64") /* ty=Tensor[(9, 14, 15), float64] */;
  %104 = cast(%var_4875, dtype="uint32") /* ty=uint32 */;
  %105 = reshape(%104, newshape=[]) /* ty=uint32 */;
  %106 = @func_3957(%105) /* ty=(Tensor[(13, 5, 8), uint32], Tensor[(13, 5, 8), float32]) */;
  %107 = mod(%96, %97) /* ty=Tensor[(9, 14, 15), float32] */;
  %108 = atan(%103) /* ty=Tensor[(9, 14, 15), float64] */;
  %109 = %106.0;
  (%107, %108, %109, %var_4875)
}

def @func_5686(%var_5684: Tensor[(1408), int16], %var_5685: Tensor[(8), uint32]) -> (Tensor[(9, 10, 1), float32], Tensor[(8, 11, 16), int16], Tensor[(30, 1), bool], Tensor[(270), bool], Tensor[(864), uint64], Tensor[(1408), int16], Tensor[(910), float32], Tensor[(8), uint32]) {
  %128 = fn (%var_5664: Tensor[(1408), int16], %var_5679: Tensor[(8), uint32]) -> (Tensor[(9, 10, 1), float32], Tensor[(8, 11, 16), int16], Tensor[(30, 1), bool], Tensor[(270), bool], Tensor[(864), uint64], Tensor[(1408), int16], Tensor[(910), float32], Tensor[(8), uint32]) {
    %110 = cast(meta[relay.Constant][8] /* ty=Tensor[(9, 10, 1), float32] */, dtype="float32") /* ty=Tensor[(9, 10, 1), float32] */;
    %111 = cast(meta[relay.Constant][9] /* ty=Tensor[(30, 1), bool] */, dtype="bool") /* ty=Tensor[(30, 1), bool] */;
    %112 = cast(meta[relay.Constant][10] /* ty=Tensor[(270), bool] */, dtype="bool") /* ty=Tensor[(270), bool] */;
    %113 = cast(meta[relay.Constant][11] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %114 = cast(%var_5664, dtype="int16") /* ty=Tensor[(1408), int16] */;
    %115 = reshape(%111, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), bool] */;
    %116 = reshape(%112, newshape=[9, 2, 15]) /* ty=Tensor[(9, 2, 15), bool] */;
    %117 = reshape(%113, newshape=[6, 144]) /* ty=Tensor[(6, 144), uint64] */;
    %118 = reshape(%114, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
    %119 = @func_5125(%115, %116, %117, %118) /* ty=(Tensor[(9, 2, 15), bool], Tensor[(8, 11, 16), int16], Tensor[(6, 144), uint64], Tensor[(1408), int16], Tensor[(16, 10, 6), float64], Tensor[(60, 16), float64]) */;
    %120 = cast(%var_5679, dtype="uint32") /* ty=Tensor[(8), uint32] */;
    %121 = cast(%var_5664, dtype="int16") /* ty=Tensor[(1408), int16] */;
    %122 = reshape(%120, newshape=[2, 1, 4]) /* ty=Tensor[(2, 1, 4), uint32] */;
    %123 = reshape(%121, newshape=[44, 32]) /* ty=Tensor[(44, 32), int16] */;
    %124 = @func_2736(%122, %123) /* ty=(Tensor[(2, ?, 4), uint32], Tensor[(910), float32], Tensor[(44, 32), uint64], Tensor[(9, 10, 8), float32], float32, Tensor[(720), float32], Tensor[(8, 11, 16), float64]) */;
    %125 = tan(%110) /* ty=Tensor[(9, 10, 1), float32] */;
    %126 = %119.1;
    %127 = %124.1;
    (%125, %126, meta[relay.Constant][9] /* ty=Tensor[(30, 1), bool] */, meta[relay.Constant][10] /* ty=Tensor[(270), bool] */, meta[relay.Constant][11] /* ty=Tensor[(864), uint64] */, %var_5664, %127, %var_5679)
  };
  %128(%var_5684, %var_5685) /* ty=(Tensor[(9, 10, 1), float32], Tensor[(8, 11, 16), int16], Tensor[(30, 1), bool], Tensor[(270), bool], Tensor[(864), uint64], Tensor[(1408), int16], Tensor[(910), float32], Tensor[(8), uint32]) */
}

def @func_10347(%var_10267: Tensor[(22, 64), int16], %var_10276: Tensor[(720), float32], %var_10277: Tensor[(784), float32], %var_10279: Tensor[(1859), uint16], %var_10315: Tensor[(40), float32]) -> (Tensor[(1, 10, 6), float64], Tensor[(910), float32], Tensor[(8), uint32], Tensor[(22, 64), int16], Tensor[(16, 10, 6), float32], Tensor[(840), float32], Tensor[(720), float32], Tensor[(784), float32], Tensor[(216, 4), uint64], Tensor[(1859), uint16], Tensor[(960, 1), float32], Tensor[(16, 10, 6), float64], Tensor[(20, 1), int32], Tensor[(180), int32], Tensor[(20), int32], Tensor[(40), float32], Tensor[(7, 5, 13), float64], Tensor[(455), float64], Tensor[(960, 1), float64]) {
  %129 = @func_10078() /* ty=(Tensor[(1, 10, 6), float64],) */;
  %130 = cast(meta[relay.Constant][12] /* ty=Tensor[(8), uint32] */, dtype="uint32") /* ty=Tensor[(8), uint32] */;
  %131 = cast(%var_10267, dtype="int16") /* ty=Tensor[(22, 64), int16] */;
  %132 = reshape(%130, newshape=[2, 1, 4]) /* ty=Tensor[(2, 1, 4), uint32] */;
  %133 = reshape(%131, newshape=[44, 32]) /* ty=Tensor[(44, 32), int16] */;
  %134 = @func_2736(%132, %133) /* ty=(Tensor[(2, ?, 4), uint32], Tensor[(910), float32], Tensor[(44, 32), uint64], Tensor[(9, 10, 8), float32], float32, Tensor[(720), float32], Tensor[(8, 11, 16), float64]) */;
  %135 = cast(meta[relay.Constant][13] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %136 = cast(%var_10276, dtype="float32") /* ty=Tensor[(720), float32] */;
  %137 = cast(%var_10277, dtype="float32") /* ty=Tensor[(784), float32] */;
  %138 = cast(meta[relay.Constant][14] /* ty=Tensor[(216, 4), uint64] */, dtype="uint64") /* ty=Tensor[(216, 4), uint64] */;
  %139 = cast(%var_10279, dtype="uint16") /* ty=Tensor[(1859), uint16] */;
  %140 = cast(meta[relay.Constant][15] /* ty=Tensor[(960, 1), float64] */, dtype="float64") /* ty=Tensor[(960, 1), float64] */;
  %141 = reshape(%135, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
  %142 = reshape(%136, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %143 = reshape(%137, newshape=[784]) /* ty=Tensor[(784), float32] */;
  %144 = reshape(%138, newshape=[216, 4]) /* ty=Tensor[(216, 4), uint64] */;
  %145 = reshape(%139, newshape=[1859]) /* ty=Tensor[(1859), uint16] */;
  %146 = reshape(%140, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %147 = @func_6202(%141, %142, %143, %144, %145, %146) /* ty=(Tensor[(12, 5, 14), uint8], Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(5, 14, 14), float32], Tensor[(784), float32], Tensor[(216, 4), uint64], Tensor[(13, 11, 13), uint16], Tensor[(1859), uint16], Tensor[(16, 10, 6), float32], Tensor[(960), float64], Tensor[(12, 5, 14), int32], Tensor[(14, 9, 11), bool], Tensor[(2, 704), int16], Tensor[(1274), int64], Tensor[(462, 3), uint64]) */;
  %148 = cast(meta[relay.Constant][15] /* ty=Tensor[(960, 1), float64] */, dtype="float32") /* ty=Tensor[(960, 1), float32] */;
  %149 = asin(%148) /* ty=Tensor[(960, 1), float32] */;
  %150 = cast(%149, dtype="float32") /* ty=Tensor[(960, 1), float32] */;
  %151 = cast(meta[relay.Constant][16] /* ty=Tensor[(20, 1), int32] */, dtype="int32") /* ty=Tensor[(20, 1), int32] */;
  %152 = cast(meta[relay.Constant][17] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %153 = cast(%var_10267, dtype="int16") /* ty=Tensor[(22, 64), int16] */;
  %154 = reshape(%151, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), int32] */;
  %155 = reshape(%152, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), int32] */;
  %156 = reshape(%153, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %157 = @func_5767(%154, %155, %156) /* ty=(Tensor[(10, 9, 2), bool], Tensor[(16, 10, 6), float64], Tensor[(960), float64], Tensor[(16, 10, 6), float64], Tensor[(910, 1), float32], Tensor[(455, 2), float32], Tensor[(1408), int16], Tensor[(12, 72), uint64]) */;
  %158 = cast(%var_10315, dtype="float32") /* ty=Tensor[(40), float32] */;
  %159 = cast(meta[relay.Constant][17] /* ty=Tensor[(180), int32] */, dtype="int32") /* ty=Tensor[(180), int32] */;
  %160 = reshape(%158, newshape=[1, 8, 5]) /* ty=Tensor[(1, 8, 5), float32] */;
  %161 = reshape(%159, newshape=[180]) /* ty=Tensor[(180), int32] */;
  %162 = @func_8787(%160, %161) /* ty=(Tensor[(1, 8, 5), float32], Tensor[(455, 2), float32], Tensor[(20), int32], Tensor[(180), int32], Tensor[(1408), int16]) */;
  %163 = cast(meta[relay.Constant][18] /* ty=Tensor[(455), float64] */, dtype="float64") /* ty=Tensor[(455), float64] */;
  %164 = reshape(%163, newshape=[7, 5, 13]) /* ty=Tensor[(7, 5, 13), float64] */;
  %165 = cast(%149, dtype="float32") /* ty=Tensor[(960, 1), float32] */;
  %166 = erf(%165) /* ty=Tensor[(960, 1), float32] */;
  %167 = cast(%166, dtype="float64") /* ty=Tensor[(960, 1), float64] */;
  %168 = %129.0;
  %169 = %134.1;
  %170 = %147.8;
  %171 = exp(%150) /* ty=Tensor[(960, 1), float32] */;
  %172 = %157.1;
  %173 = %162.2;
  %174 = @func_7969(%164) /* ty=Tensor[(7, 5, 13), float64] */;
  %175 = sigmoid(%167) /* ty=Tensor[(960, 1), float64] */;
  (%168, %169, meta[relay.Constant][12] /* ty=Tensor[(8), uint32] */, %var_10267, %170, meta[relay.Constant][13] /* ty=Tensor[(840), float32] */, %var_10276, %var_10277, meta[relay.Constant][14] /* ty=Tensor[(216, 4), uint64] */, %var_10279, %171, %172, meta[relay.Constant][16] /* ty=Tensor[(20, 1), int32] */, meta[relay.Constant][17] /* ty=Tensor[(180), int32] */, %173, %var_10315, %174, meta[relay.Constant][18] /* ty=Tensor[(455), float64] */, %175)
}

def @func_9145(%var_9144: Tensor[(1188), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(11, 12, 9), float64], Tensor[(1188), float64]) {
  %182 = fn (%var_9133: Tensor[(1188), float64]) -> (Tensor[(16, 5, 13), float32], Tensor[(11, 12, 9), float64], Tensor[(1188), float64]) {
    %176 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 5, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 13), float32] */;
    %177 = cast(%var_9133, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %178 = reshape(%177, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
    %179 = @func_4604(%178) /* ty=(Tensor[(11, 12, 9), float64],) */;
    %180 = sigmoid(%176) /* ty=Tensor[(16, 5, 13), float32] */;
    %181 = %179.0;
    (%180, %181, %var_9133)
  };
  %182(%var_9144) /* ty=(Tensor[(16, 5, 13), float32], Tensor[(11, 12, 9), float64], Tensor[(1188), float64]) */
}

def @func_9954(%var_9949: Tensor[(13, 9, 12), int16], %var_9950: Tensor[(13, 9, 12), int16], %var_9951: Tensor[(350), float64], %var_9952: Tensor[(20), int32], %var_9953: Tensor[(180), int32]) -> (Tensor[(13, 9, 12), bool], Tensor[(1408), int16], Tensor[(350), float64], Tensor[(280), float32], Tensor[(280), float32], Tensor[(1408), int16], Tensor[(20), int32], Tensor[(180), int32], Tensor[(14, 6, 12), float32], Tensor[(1008), float32]) {
  @func_9947(%var_9949, %var_9950, %var_9951, %var_9952, %var_9953) /* ty=(Tensor[(13, 9, 12), bool], Tensor[(1408), int16], Tensor[(350), float64], Tensor[(280), float32], Tensor[(280), float32], Tensor[(1408), int16], Tensor[(20), int32], Tensor[(180), int32], Tensor[(14, 6, 12), float32], Tensor[(1008), float32]) */
}

def @func_7124(%var_7122: Tensor[(10, 11, 10), uint32], %var_7123: uint32) -> (Tensor[(10, 11, 10), uint32], uint32, Tensor[(1890), float32], uint32) {
  %194 = fn (%var_7094: Tensor[(10, 11, 10), uint32], %var_7108: uint32) -> (Tensor[(10, 11, 10), uint32], uint32, Tensor[(1890), float32], uint32) {
    %183 = cast(meta[relay.Constant][20] /* ty=Tensor[(10, 11, 10), uint32] */, dtype="uint32") /* ty=Tensor[(10, 11, 10), uint32] */;
    %184 = shape_of(%var_7094, dtype="int32") /* ty=Tensor[(3), int32] */;
    %185 = cast(%var_7094, dtype="uint32") /* ty=Tensor[(10, 11, 10), uint32] */;
    %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %187 = cast(meta[relay.Constant][21] /* ty=Tensor[(1890), float32] */, dtype="float32") /* ty=Tensor[(1890), float32] */;
    %188 = cast(%var_7108, dtype="uint32") /* ty=uint32 */;
    %189 = reshape(%187, newshape=[9, 14, 15]) /* ty=Tensor[(9, 14, 15), float32] */;
    %190 = reshape(%188, newshape=[]) /* ty=uint32 */;
    %191 = @func_4878(%189, %190) /* ty=(Tensor[(9, 14, 15), float32], Tensor[(9, 14, 15), float64], Tensor[(13, 5, 8), uint32], uint32) */;
    %192 = add(%185, %186) /* ty=Tensor[(10, 11, 10), uint32] */;
    %193 = %191.3;
    (%192, %193, meta[relay.Constant][21] /* ty=Tensor[(1890), float32] */, %var_7108)
  };
  %194(%var_7122, %var_7123) /* ty=(Tensor[(10, 11, 10), uint32], uint32, Tensor[(1890), float32], uint32) */
}

def @func_1406(%var_1387: Tensor[(5, 14, 14), float32]) -> Tensor[(5, 14, 14), float32] {
  %195 = cast(%var_1387, dtype="float32") /* ty=Tensor[(5, 14, 14), float32] */;
  asinh(%195) /* ty=Tensor[(5, 14, 14), float32] */
}

def @func_5771(%var_5768: Tensor[(10, 1, 2), int32], %var_5769: Tensor[(10, 9, 2), int32], %var_5770: Tensor[(1408), int16]) -> (Tensor[(10, 9, 2), bool], Tensor[(16, 10, 6), float64], Tensor[(960), float64], Tensor[(16, 10, 6), float64], Tensor[(910, 1), float32], Tensor[(455, 2), float32], Tensor[(1408), int16], Tensor[(12, 72), uint64]) {
  %217 = fn (%var_5742: Tensor[(10, 1, 2), int32], %var_5743: Tensor[(10, 9, 2), int32], %var_5763: Tensor[(1408), int16]) -> (Tensor[(10, 9, 2), bool], Tensor[(16, 10, 6), float64], Tensor[(960), float64], Tensor[(16, 10, 6), float64], Tensor[(910, 1), float32], Tensor[(455, 2), float32], Tensor[(1408), int16], Tensor[(12, 72), uint64]) {
    %196 = cast(%var_5742, dtype="bool") /* ty=Tensor[(10, 1, 2), bool] */;
    %197 = cast(%var_5743, dtype="bool") /* ty=Tensor[(10, 9, 2), bool] */;
    %198 = cast(meta[relay.Constant][22] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %199 = reshape(%198, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
    %200 = @func_245(%199) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
    %201 = %200.0;
    %202 = cast(%201, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
    %203 = reshape(%202, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
    %204 = @func_245(%203) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
    %205 = cast(%var_5743, dtype="bool") /* ty=Tensor[(10, 9, 2), bool] */;
    %206 = cast(meta[relay.Constant][23] /* ty=Tensor[(455, 2), float32] */, dtype="float32") /* ty=Tensor[(455, 2), float32] */;
    %207 = cast(%var_5763, dtype="int16") /* ty=Tensor[(1408), int16] */;
    %208 = cast(meta[relay.Constant][24] /* ty=Tensor[(12, 72), uint64] */, dtype="uint64") /* ty=Tensor[(12, 72), uint64] */;
    %209 = reshape(%205, newshape=[2, 9, 10]) /* ty=Tensor[(2, 9, 10), bool] */;
    %210 = reshape(%206, newshape=[910, 1]) /* ty=Tensor[(910, 1), float32] */;
    %211 = reshape(%207, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
    %212 = reshape(%208, newshape=[864]) /* ty=Tensor[(864), uint64] */;
    %213 = @func_2600(%209, %210, %211, %212) /* ty=(Tensor[(2, 9, 10), bool], Tensor[(10, 7, 13), float32], Tensor[(910, 1), float32], Tensor[(1408), int16], Tensor[(8, 11, 16), int16], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(784), float32]) */;
    %214 = equal(%196, %197) /* ty=Tensor[(10, 9, 2), bool] */;
    %215 = %204.0;
    %216 = %213.2;
    (%214, %201, meta[relay.Constant][22] /* ty=Tensor[(960), float64] */, %215, %216, meta[relay.Constant][23] /* ty=Tensor[(455, 2), float32] */, %var_5763, meta[relay.Constant][24] /* ty=Tensor[(12, 72), uint64] */)
  };
  %217(%var_5768, %var_5769, %var_5770) /* ty=(Tensor[(10, 9, 2), bool], Tensor[(16, 10, 6), float64], Tensor[(960), float64], Tensor[(16, 10, 6), float64], Tensor[(910, 1), float32], Tensor[(455, 2), float32], Tensor[(1408), int16], Tensor[(12, 72), uint64]) */
}

def @func_2354(%var_2352: Tensor[(945), float64], %var_2353: Tensor[(12, 60), bool]) -> (Tensor[(16, 10, 6), float32], Tensor[(504), float32], Tensor[(14, 2, 4), bool], Tensor[(945), float64], Tensor[(16, 10, 6), float32], Tensor[(12, 60), uint8], Tensor[(12, 60), int8]) {
  %255 = fn (%var_2313: Tensor[(945), float64], %var_2333: Tensor[(12, 60), bool]) -> (Tensor[(16, 10, 6), float32], Tensor[(504), float32], Tensor[(14, 2, 4), bool], Tensor[(945), float64], Tensor[(16, 10, 6), float32], Tensor[(12, 60), uint8], Tensor[(12, 60), int8]) {
    %218 = cast(meta[relay.Constant][25] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %219 = reshape(%218, newshape=[9, 4, 14]) /* ty=Tensor[(9, 4, 14), float32] */;
    %220 = @func_1351(%219) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(16, 10, 6), float32], Tensor[(960), float64]) */;
    %221 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 2, 4), int32] */, dtype="int32") /* ty=Tensor[(14, 2, 4), int32] */;
    %222 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(14, 2, 4), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %223 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 2, 4), int32] */, dtype="int32") /* ty=Tensor[(14, 2, 4), int32] */;
    %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %225 = bitwise_or(%223, %224) /* ty=Tensor[(14, 2, 4), int32] */;
    %226 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 2, 4), int32] */, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
    %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
    %228 = cast(%225, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
    %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %230 = %220.1;
    %231 = cast(%230, dtype="float64") /* ty=Tensor[(16, 10, 6), float64] */;
    %232 = reshape(%231, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
    %233 = @func_245(%232) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
    %234 = cast(%var_2313, dtype="float64") /* ty=Tensor[(945), float64] */;
    %235 = cast(meta[relay.Constant][28] /* ty=Tensor[(12, 60), float32] */, dtype="float32") /* ty=Tensor[(12, 60), float32] */;
    %236 = reshape(%234, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
    %237 = reshape(%235, newshape=[180, 4]) /* ty=Tensor[(180, 4), float32] */;
    %238 = @func_337(%236, %237) /* ty=(Tensor[(15, 7, 9), float64], Tensor[(9, 10, 8), float32], float32, Tensor[(180, 4), float32]) */;
    %239 = %238.2;
    %240 = cast(meta[relay.Constant][28] /* ty=Tensor[(12, 60), float32] */, dtype="bool") /* ty=Tensor[(12, 60), bool] */;
    %241 = cast(%239, dtype="bool") /* ty=bool */;
    %242 = equal(%240, %241) /* ty=Tensor[(12, 60), bool] */;
    %243 = cast(%var_2333, dtype="uint8") /* ty=Tensor[(12, 60), uint8] */;
    %244 = shape_of(%242, dtype="int32") /* ty=Tensor[(2), int32] */;
    %245 = cast(%242, dtype="uint8") /* ty=Tensor[(12, 60), uint8] */;
    %246 = dyn.reshape(%243, %244, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %247 = cast(%242, dtype="int8") /* ty=Tensor[(12, 60), int8] */;
    %248 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(12, 60), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %249 = cast(meta[relay.Constant][28] /* ty=Tensor[(12, 60), float32] */, dtype="int8") /* ty=Tensor[(12, 60), int8] */;
    %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %251 = less(%228, %229) /* ty=Tensor[(14, 2, 4), bool] */;
    %252 = %233.1;
    %253 = maximum(%245, %246) /* ty=Tensor[(12, 60), uint8] */;
    %254 = bitwise_xor(%249, %250) /* ty=Tensor[(12, 60), int8] */;
    (%230, meta[relay.Constant][25] /* ty=Tensor[(504), float32] */, %251, %var_2313, %252, %253, %254)
  };
  %255(%var_2352, %var_2353) /* ty=(Tensor[(16, 10, 6), float32], Tensor[(504), float32], Tensor[(14, 2, 4), bool], Tensor[(945), float64], Tensor[(16, 10, 6), float32], Tensor[(12, 60), uint8], Tensor[(12, 60), int8]) */
}

def @func_6202(%var_6124: Tensor[(12, 5, 14), float32], %var_6148: Tensor[(720), float32], %var_6154: Tensor[(784), float32], %var_6155: Tensor[(216, 4), uint64], %var_6164: Tensor[(1859), uint16], %var_6180: Tensor[(960), float64]) -> (Tensor[(12, 5, 14), uint8], Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(5, 14, 14), float32], Tensor[(784), float32], Tensor[(216, 4), uint64], Tensor[(13, 11, 13), uint16], Tensor[(1859), uint16], Tensor[(16, 10, 6), float32], Tensor[(960), float64], Tensor[(12, 5, 14), int32], Tensor[(14, 9, 11), bool], Tensor[(2, 704), int16], Tensor[(1274), int64], Tensor[(462, 3), uint64]) {
  %256 = cast(%var_6124, dtype="float32") /* ty=Tensor[(12, 5, 14), float32] */;
  %257 = log2(%256) /* ty=Tensor[(12, 5, 14), float32] */;
  %258 = cast(%var_6124, dtype="uint8") /* ty=Tensor[(12, 5, 14), uint8] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%257, dtype="uint8") /* ty=Tensor[(12, 5, 14), uint8] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %262 = cast(6.45587f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %263 = cast(%var_6148, dtype="float32") /* ty=Tensor[(720), float32] */;
  %264 = reshape(%262, newshape=[]) /* ty=float32 */;
  %265 = reshape(%263, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %266 = cast(%var_6154, dtype="float32") /* ty=Tensor[(784), float32] */;
  %267 = cast(%var_6155, dtype="uint64") /* ty=Tensor[(216, 4), uint64] */;
  %268 = reshape(%266, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
  %269 = reshape(%267, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %270 = @func_2139(%268, %269) /* ty=(Tensor[(4, 14, 14), float64], Tensor[(4, 14, 14), float32], Tensor[(8, 11, 16), int16], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(980), float32], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) */;
  %271 = cast(6.45587f /* ty=float32 */, dtype="uint16") /* ty=uint16 */;
  %272 = cast(%var_6164, dtype="uint16") /* ty=Tensor[(1859), uint16] */;
  %273 = reshape(%271, newshape=[]) /* ty=uint16 */;
  %274 = reshape(%272, newshape=[13, 11, 13]) /* ty=Tensor[(13, 11, 13), uint16] */;
  %275 = cast(%var_6180, dtype="float64") /* ty=Tensor[(960), float64] */;
  %276 = reshape(%275, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %277 = @func_245(%276) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %278 = cast(%257, dtype="int32") /* ty=Tensor[(12, 5, 14), int32] */;
  %279 = cast(6.45587f /* ty=float32 */, dtype="int32") /* ty=int32 */;
  %280 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 704), int16] */, dtype="int16") /* ty=Tensor[(2, 704), int16] */;
  %281 = cast(meta[relay.Constant][30] /* ty=Tensor[(1274), int64] */, dtype="int64") /* ty=Tensor[(1274), int64] */;
  %282 = cast(meta[relay.Constant][31] /* ty=Tensor[(462, 3), uint64] */, dtype="uint64") /* ty=Tensor[(462, 3), uint64] */;
  %283 = reshape(%280, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %284 = reshape(%281, newshape=[7, 182]) /* ty=Tensor[(7, 182), int64] */;
  %285 = reshape(%282, newshape=[1386]) /* ty=Tensor[(1386), uint64] */;
  %286 = @func_4442(%283, %284, %285) /* ty=(Tensor[(8, 7, 4), bool], Tensor[(10, 7, 13), float32], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(13, 7, 14), int64], int64, Tensor[(7, 182), int64], Tensor[(14, 9, 11), bool], Tensor[(1386), uint64]) */;
  %287 = bitwise_xor(%260, %261) /* ty=Tensor[(12, 5, 14), uint8] */;
  %288 = @func_285(%264, %265) /* ty=Tensor[(9, 10, 8), float32] */;
  %289 = %270.4;
  %290 = @func_5630(%273, %274) /* ty=Tensor[(13, 11, 13), uint16] */;
  %291 = %277.1;
  %292 = subtract(%278, %279) /* ty=Tensor[(12, 5, 14), int32] */;
  %293 = %286.7;
  (%287, %288, %var_6148, %289, %var_6154, %var_6155, %290, %var_6164, %291, %var_6180, %292, %293, meta[relay.Constant][29] /* ty=Tensor[(2, 704), int16] */, meta[relay.Constant][30] /* ty=Tensor[(1274), int64] */, meta[relay.Constant][31] /* ty=Tensor[(462, 3), uint64] */)
}

def @func_10079() -> (Tensor[(1, 10, 6), float64],) {
  %296 = fn () -> (Tensor[(1, 10, 6), float64],) {
    %294 = @func_10042() /* ty=(Tensor[(1, 10, 6), float32], Tensor[(1, 10, 6), float64]) */;
    %295 = %294.1;
    (%295,)
  };
  %296() /* ty=(Tensor[(1, 10, 6), float64],) */
}

def @func_4447(%var_4444: Tensor[(1408), int16], %var_4445: Tensor[(7, 182), int64], %var_4446: Tensor[(1386), uint64]) -> (Tensor[(8, 7, 4), bool], Tensor[(10, 7, 13), float32], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(13, 7, 14), int64], int64, Tensor[(7, 182), int64], Tensor[(14, 9, 11), bool], Tensor[(1386), uint64]) {
  @func_4442(%var_4444, %var_4445, %var_4446) /* ty=(Tensor[(8, 7, 4), bool], Tensor[(10, 7, 13), float32], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(13, 7, 14), int64], int64, Tensor[(7, 182), int64], Tensor[(14, 9, 11), bool], Tensor[(1386), uint64]) */
}

def @func_4170(%var_4156: Tensor[(7, 10, 15), float64]) -> (Tensor[(7, 10, 15), float32],) {
  %297 = cast(%var_4156, dtype="float64") /* ty=Tensor[(7, 10, 15), float64] */;
  %298 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(7, 10, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %299 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 10, 15), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 15), float64] */;
  %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %301 = mod(%299, %300) /* ty=Tensor[(7, 10, 15), float64] */;
  %302 = cast(%301, dtype="float32") /* ty=Tensor[(7, 10, 15), float32] */;
  %303 = asinh(%302) /* ty=Tensor[(7, 10, 15), float32] */;
  (%303,)
}

def @func_5633(%var_5631: uint16, %var_5632: Tensor[(13, 11, 13), uint16]) -> Tensor[(13, 11, 13), uint16] {
  %306 = fn (%var_5620: uint16, %var_5621: Tensor[(13, 11, 13), uint16]) -> Tensor[(13, 11, 13), uint16] {
    %304 = cast(%var_5620, dtype="uint16") /* ty=uint16 */;
    %305 = cast(%var_5621, dtype="uint16") /* ty=Tensor[(13, 11, 13), uint16] */;
    right_shift(%304, %305) /* ty=Tensor[(13, 11, 13), uint16] */
  };
  %306(%var_5631, %var_5632) /* ty=Tensor[(13, 11, 13), uint16] */
}

def @func_9557(%var_9555: Tensor[(13, 15, 1), float64]) -> (Tensor[(13, 15, 1), float64], Tensor[(13, 15, ?), bool]) {
  @func_9554(%var_9555) /* ty=(Tensor[(13, 15, 1), float64], Tensor[(13, 15, ?), bool]) */
}

def @func_248(%var_246: Tensor[(16, 10, 6), float64]) -> (Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) {
  @func_245(%var_246) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */
}

def @func_2272(%var_2270: int64, %var_2271: Tensor[(13, 7, 14), int64]) -> (Tensor[(13, 7, 14), int64],) {
  @func_2268(%var_2270, %var_2271) /* ty=(Tensor[(13, 7, 14), int64],) */
}

def @func_8043(%var_8041: Tensor[(16, 12, 16), int16]) -> Tensor[(16, 12, 16), int16] {
  @func_8040(%var_8041) /* ty=Tensor[(16, 12, 16), int16] */
}

def @func_10381() -> Tensor[(1, 10, 6), float32] {
  %307 = @func_10078() /* ty=(Tensor[(1, 10, 6), float64],) */;
  %308 = %307.0;
  %309 = cast(%308, dtype="float32") /* ty=Tensor[(1, 10, 6), float32] */;
  asin(%309) /* ty=Tensor[(1, 10, 6), float32] */
}

def @func_5992(%var_5991: Tensor[(2, 16, 14), int32]) -> (Tensor[(2, 16, 14), int32],) {
  %315 = fn (%var_5974: Tensor[(2, 16, 14), int32]) -> (Tensor[(2, 16, 14), int32],) {
    %310 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 16, 14), int32] */, dtype="int32") /* ty=Tensor[(2, 16, 14), int32] */;
    %311 = shape_of(%var_5974, dtype="int32") /* ty=Tensor[(3), int32] */;
    %312 = cast(%var_5974, dtype="int32") /* ty=Tensor[(2, 16, 14), int32] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %314 = add(%312, %313) /* ty=Tensor[(2, 16, 14), int32] */;
    (%314,)
  };
  %315(%var_5991) /* ty=(Tensor[(2, 16, 14), int32],) */
}

def @func_8263(%var_8259: Tensor[(180), bool], %var_8260: Tensor[(864), uint64], %var_8261: Tensor[(84), int8], %var_8262: Tensor[(455), float64]) -> (Tensor[(10, 14, 15), float64], Tensor[(784), float32], Tensor[(180), bool], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(864), uint64], Tensor[(3, 7, 4), float64], int8, Tensor[(84), int8], Tensor[(7, 5, 13), float64], Tensor[(455), float64]) {
  %339 = fn (%var_8235: Tensor[(180), bool], %var_8238: Tensor[(864), uint64], %var_8245: Tensor[(84), int8], %var_8250: Tensor[(455), float64]) -> (Tensor[(10, 14, 15), float64], Tensor[(784), float32], Tensor[(180), bool], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(864), uint64], Tensor[(3, 7, 4), float64], int8, Tensor[(84), int8], Tensor[(7, 5, 13), float64], Tensor[(455), float64]) {
    %316 = cast(meta[relay.Constant][34] /* ty=Tensor[(10, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
    %317 = erf(%316) /* ty=Tensor[(10, 14, 15), float64] */;
    %318 = cast(%317, dtype="float64") /* ty=Tensor[(10, 14, 15), float64] */;
    %319 = cast(%var_8235, dtype="bool") /* ty=Tensor[(180), bool] */;
    %320 = cast(meta[relay.Constant][35] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
    %321 = cast(meta[relay.Constant][36] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
    %322 = cast(%var_8238, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %323 = reshape(%319, newshape=[2, 9, 10]) /* ty=Tensor[(2, 9, 10), bool] */;
    %324 = reshape(%320, newshape=[910, 1]) /* ty=Tensor[(910, 1), float32] */;
    %325 = reshape(%321, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
    %326 = reshape(%322, newshape=[864]) /* ty=Tensor[(864), uint64] */;
    %327 = @func_2600(%323, %324, %325, %326) /* ty=(Tensor[(2, 9, 10), bool], Tensor[(10, 7, 13), float32], Tensor[(910, 1), float32], Tensor[(1408), int16], Tensor[(8, 11, 16), int16], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(784), float32]) */;
    %328 = cast(meta[relay.Constant][37] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %329 = cast(%var_8245, dtype="int8") /* ty=Tensor[(84), int8] */;
    %330 = reshape(%328, newshape=[]) /* ty=int8 */;
    %331 = reshape(%329, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), int8] */;
    %332 = @func_3290(%330, %331) /* ty=(Tensor[(3, 7, 4), float64],) */;
    %333 = cast(%var_8250, dtype="float64") /* ty=Tensor[(455), float64] */;
    %334 = reshape(%333, newshape=[7, 5, 13]) /* ty=Tensor[(7, 5, 13), float64] */;
    %335 = rsqrt(%318) /* ty=Tensor[(10, 14, 15), float64] */;
    %336 = %327.7;
    %337 = %332.0;
    %338 = @func_7969(%334) /* ty=Tensor[(7, 5, 13), float64] */;
    (%335, %336, %var_8235, meta[relay.Constant][35] /* ty=Tensor[(910), float32] */, meta[relay.Constant][36] /* ty=Tensor[(1408), int16] */, %var_8238, %337, meta[relay.Constant][37] /* ty=int8 */, %var_8245, %338, %var_8250)
  };
  %339(%var_8259, %var_8260, %var_8261, %var_8262) /* ty=(Tensor[(10, 14, 15), float64], Tensor[(784), float32], Tensor[(180), bool], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(864), uint64], Tensor[(3, 7, 4), float64], int8, Tensor[(84), int8], Tensor[(7, 5, 13), float64], Tensor[(455), float64]) */
}

def @func_10489(%var_10485: Tensor[(780), uint8], %var_10486: Tensor[(180), bool], %var_10487: Tensor[(1408), int16], %var_10488: Tensor[(864), uint64]) -> (Tensor[(1, 10, 6), float32], Tensor[(126), int16], Tensor[(780), uint8], Tensor[(960), float64], Tensor[(945), float64], Tensor[(10, 7, 13), float32], Tensor[(180), bool], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(864), uint64]) {
  @func_10483(%var_10485, %var_10486, %var_10487, %var_10488) /* ty=(Tensor[(1, 10, 6), float32], Tensor[(126), int16], Tensor[(780), uint8], Tensor[(960), float64], Tensor[(945), float64], Tensor[(10, 7, 13), float32], Tensor[(180), bool], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(864), uint64]) */
}

def @func_1354(%var_1352: Tensor[(9, 4, 14), float32]) -> (Tensor[(9, 4, 14), float32], Tensor[(16, 10, 6), float32], Tensor[(960), float64]) {
  @func_1351(%var_1352) /* ty=(Tensor[(9, 4, 14), float32], Tensor[(16, 10, 6), float32], Tensor[(960), float64]) */
}

def @func_3293(%var_3291: int8, %var_3292: Tensor[(3, 7, 4), int8]) -> (Tensor[(3, 7, 4), float64],) {
  %348 = fn (%var_3280: int8, %var_3281: Tensor[(3, 7, 4), int8]) -> (Tensor[(3, 7, 4), float64],) {
    %340 = cast(%var_3280, dtype="int8") /* ty=int8 */;
    %341 = cast(%var_3281, dtype="int8") /* ty=Tensor[(3, 7, 4), int8] */;
    %342 = bitwise_and(%340, %341) /* ty=Tensor[(3, 7, 4), int8] */;
    %343 = cast(meta[relay.Constant][38] /* ty=Tensor[(3, 7, 4), int8] */, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %344 = shape_of(%342, dtype="int32") /* ty=Tensor[(3), int32] */;
    %345 = cast(%342, dtype="float64") /* ty=Tensor[(3, 7, 4), float64] */;
    %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %347 = divide(%345, %346) /* ty=Tensor[(3, 7, 4), float64] */;
    (%347,)
  };
  %348(%var_3291, %var_3292) /* ty=(Tensor[(3, 7, 4), float64],) */
}

def @func_4442(%var_4427: Tensor[(1408), int16], %var_4436: Tensor[(7, 182), int64], %var_4439: Tensor[(1386), uint64]) -> (Tensor[(8, 7, 4), bool], Tensor[(10, 7, 13), float32], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(13, 7, 14), int64], int64, Tensor[(7, 182), int64], Tensor[(14, 9, 11), bool], Tensor[(1386), uint64]) {
  %349 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 7, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 7, 4), float64] */;
  %350 = rsqrt(%349) /* ty=Tensor[(8, 7, 4), float64] */;
  %351 = cast(%350, dtype="float64") /* ty=Tensor[(8, 7, 4), float64] */;
  %352 = sinh(%351) /* ty=Tensor[(8, 7, 4), float64] */;
  %353 = cast(%352, dtype="bool") /* ty=Tensor[(8, 7, 4), bool] */;
  %354 = shape_of(%350, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%350, dtype="bool") /* ty=Tensor[(8, 7, 4), bool] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %357 = cast(meta[relay.Constant][40] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %358 = cast(%var_4427, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %359 = reshape(%357, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float32] */;
  %360 = reshape(%358, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %361 = @func_129(%359, %360) /* ty=(Tensor[(10, 7, 13), float32], Tensor[(8, 11, 16), float32]) */;
  %362 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %363 = cast(%var_4436, dtype="int64") /* ty=Tensor[(7, 182), int64] */;
  %364 = reshape(%362, newshape=[]) /* ty=int64 */;
  %365 = reshape(%363, newshape=[13, 7, 14]) /* ty=Tensor[(13, 7, 14), int64] */;
  %366 = @func_2268(%364, %365) /* ty=(Tensor[(13, 7, 14), int64],) */;
  %367 = cast(%var_4439, dtype="uint64") /* ty=Tensor[(1386), uint64] */;
  %368 = cast(%var_4439, dtype="uint64") /* ty=Tensor[(1386), uint64] */;
  %369 = reshape(%367, newshape=[14, 9, 11]) /* ty=Tensor[(14, 9, 11), uint64] */;
  %370 = reshape(%368, newshape=[14, 9, 11]) /* ty=Tensor[(14, 9, 11), uint64] */;
  %371 = @func_3999(%369, %370) /* ty=(Tensor[(14, 9, 11), uint64], Tensor[(14, 9, 11), bool]) */;
  %372 = logical_or(%355, %356) /* ty=Tensor[(8, 7, 4), bool] */;
  %373 = %361.0;
  %374 = %366.0;
  %375 = %371.1;
  (%372, %373, meta[relay.Constant][40] /* ty=Tensor[(910), float32] */, %var_4427, %374, 10 /* ty=int64 */, %var_4436, %375, %var_4439)
}

def @func_9617(%var_9615: Tensor[(11, 1, 16), float64], %var_9616: Tensor[(195), float64]) -> (Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), bool], Tensor[(16, 10, 6), float32], Tensor[(960), float64], Tensor[(13, 15, ?), bool], Tensor[(195), float64], Tensor[(11, 1, 16), float32]) {
  @func_9613(%var_9615, %var_9616) /* ty=(Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), bool], Tensor[(16, 10, 6), float32], Tensor[(960), float64], Tensor[(13, 15, ?), bool], Tensor[(195), float64], Tensor[(11, 1, 16), float32]) */
}

def @func_2605(%var_2601: Tensor[(2, 9, 10), bool], %var_2602: Tensor[(910, 1), float32], %var_2603: Tensor[(1408), int16], %var_2604: Tensor[(864), uint64]) -> (Tensor[(2, 9, 10), bool], Tensor[(10, 7, 13), float32], Tensor[(910, 1), float32], Tensor[(1408), int16], Tensor[(8, 11, 16), int16], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(784), float32]) {
  %399 = fn (%var_2561: Tensor[(2, 9, 10), bool], %var_2570: Tensor[(910, 1), float32], %var_2571: Tensor[(1408), int16], %var_2586: Tensor[(864), uint64]) -> (Tensor[(2, 9, 10), bool], Tensor[(10, 7, 13), float32], Tensor[(910, 1), float32], Tensor[(1408), int16], Tensor[(8, 11, 16), int16], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(784), float32]) {
    %376 = cast(%var_2561, dtype="bool") /* ty=Tensor[(2, 9, 10), bool] */;
    %377 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(2, 9, 10), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %378 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 9, 10), bool] */, dtype="bool") /* ty=Tensor[(2, 9, 10), bool] */;
    %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %380 = cast(%var_2570, dtype="float32") /* ty=Tensor[(910, 1), float32] */;
    %381 = cast(%var_2571, dtype="int16") /* ty=Tensor[(1408), int16] */;
    %382 = reshape(%380, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float32] */;
    %383 = reshape(%381, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
    %384 = @func_129(%382, %383) /* ty=(Tensor[(10, 7, 13), float32], Tensor[(8, 11, 16), float32]) */;
    %385 = cast(%var_2586, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %386 = cast(%var_2571, dtype="int16") /* ty=Tensor[(1408), int16] */;
    %387 = reshape(%385, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
    %388 = reshape(%386, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), int16] */;
    %389 = @func_692(%387, %388) /* ty=(Tensor[(9, 8, 12), uint64], Tensor[(8, 11, 16), int16], Tensor[(1408, 1), int16]) */;
    %390 = cast(meta[relay.Constant][42] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
    %391 = cast(%var_2586, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %392 = reshape(%390, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
    %393 = reshape(%391, newshape=[864]) /* ty=Tensor[(864), uint64] */;
    %394 = @func_2139(%392, %393) /* ty=(Tensor[(4, 14, 14), float64], Tensor[(4, 14, 14), float32], Tensor[(8, 11, 16), int16], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(980), float32], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) */;
    %395 = logical_or(%378, %379) /* ty=Tensor[(2, 9, 10), bool] */;
    %396 = %384.0;
    %397 = %389.1;
    %398 = %394.7;
    (%395, %396, %var_2570, %var_2571, %397, %var_2586, %398, meta[relay.Constant][42] /* ty=Tensor[(784), float32] */)
  };
  %399(%var_2601, %var_2602, %var_2603, %var_2604) /* ty=(Tensor[(2, 9, 10), bool], Tensor[(10, 7, 13), float32], Tensor[(910, 1), float32], Tensor[(1408), int16], Tensor[(8, 11, 16), int16], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(784), float32]) */
}

def @func_9947(%var_9826: Tensor[(13, 9, 12), int16], %var_9827: Tensor[(13, 9, 12), int16], %var_9839: Tensor[(350), float64], %var_9912: Tensor[(20), int32], %var_9913: Tensor[(180), int32]) -> (Tensor[(13, 9, 12), bool], Tensor[(1408), int16], Tensor[(350), float64], Tensor[(280), float32], Tensor[(280), float32], Tensor[(1408), int16], Tensor[(20), int32], Tensor[(180), int32], Tensor[(14, 6, 12), float32], Tensor[(1008), float32]) {
  %400 = cast(%var_9827, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %401 = shape_of(%var_9826, dtype="int32") /* ty=Tensor[(3), int32] */;
  %402 = cast(%var_9826, dtype="bool") /* ty=Tensor[(13, 9, 12), bool] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %404 = cast(%var_9839, dtype="float64") /* ty=Tensor[(350), float64] */;
  %405 = reshape(%404, newshape=[5, 14, 5]) /* ty=Tensor[(5, 14, 5), float64] */;
  %406 = @func_3552(%405) /* ty=(Tensor[(5, 14, 5), float64], Tensor[(8, 11, 16), int16], Tensor[(1408), int16]) */;
  %407 = cast(meta[relay.Constant][43] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %408 = reshape(%407, newshape=[280]) /* ty=Tensor[(280), float32] */;
  %409 = @func_6941(%408) /* ty=(Tensor[(2, 15, 8), float64], Tensor[(7, 10, 4), bool], Tensor[(280), float32]) */;
  %410 = cast(%var_9912, dtype="int32") /* ty=Tensor[(20), int32] */;
  %411 = cast(%var_9913, dtype="int32") /* ty=Tensor[(180), int32] */;
  %412 = %406.2;
  %413 = cast(%412, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %414 = reshape(%410, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), int32] */;
  %415 = reshape(%411, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), int32] */;
  %416 = reshape(%413, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %417 = @func_5767(%414, %415, %416) /* ty=(Tensor[(10, 9, 2), bool], Tensor[(16, 10, 6), float64], Tensor[(960), float64], Tensor[(16, 10, 6), float64], Tensor[(910, 1), float32], Tensor[(455, 2), float32], Tensor[(1408), int16], Tensor[(12, 72), uint64]) */;
  %418 = cast(meta[relay.Constant][44] /* ty=Tensor[(1008), float32] */, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %419 = reshape(%418, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), float32] */;
  %420 = less_equal(%402, %403) /* ty=Tensor[(13, 9, 12), bool] */;
  %421 = %409.2;
  %422 = %417.6;
  %423 = @func_4785(%419) /* ty=Tensor[(14, 6, 12), float32] */;
  (%420, %412, %var_9839, %421, meta[relay.Constant][43] /* ty=Tensor[(280), float32] */, %422, %var_9912, %var_9913, %423, meta[relay.Constant][44] /* ty=Tensor[(1008), float32] */)
}

def @func_9613(%var_9576: Tensor[(11, 1, 16), float64], %var_9603: Tensor[(195), float64]) -> (Tensor[(11, ?, 16), bool], Tensor[(11, ?, 16), bool], Tensor[(16, 10, 6), float32], Tensor[(960), float64], Tensor[(13, 15, ?), bool], Tensor[(195), float64], Tensor[(11, 1, 16), float32]) {
  %424 = cast(%var_9576, dtype="float64") /* ty=Tensor[(11, 1, 16), float64] */;
  %425 = atanh(%424) /* ty=Tensor[(11, 1, 16), float64] */;
  %426 = cast(%var_9576, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%425, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %430 = cast(%425, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %431 = shape_of(%var_9576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%var_9576, dtype="bool") /* ty=Tensor[(11, 1, 16), bool] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %434 = cast(meta[relay.Constant][45] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %435 = reshape(%434, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %436 = @func_245(%435) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %437 = cast(%var_9603, dtype="float64") /* ty=Tensor[(195), float64] */;
  %438 = reshape(%437, newshape=[13, 15, 1]) /* ty=Tensor[(13, 15, 1), float64] */;
  %439 = @func_9554(%438) /* ty=(Tensor[(13, 15, 1), float64], Tensor[(13, 15, ?), bool]) */;
  %440 = cast(%425, dtype="float32") /* ty=Tensor[(11, 1, 16), float32] */;
  %441 = less_equal(%428, %429) /* ty=Tensor[(11, ?, 16), bool] */;
  %442 = logical_and(%432, %433) /* ty=Tensor[(11, ?, 16), bool] */;
  %443 = %436.1;
  %444 = %439.1;
  %445 = cos(%440) /* ty=Tensor[(11, 1, 16), float32] */;
  (%441, %442, %443, meta[relay.Constant][45] /* ty=Tensor[(960), float64] */, %444, %var_9603, %445)
}

def @func_10188(%var_10184: Tensor[(5, 4, 8), float32], %var_10185: Tensor[(30), bool], %var_10186: Tensor[(1408), int16], %var_10187: Tensor[(14, 70), float32]) -> (Tensor[(16, 10, 6), float64], Tensor[(30), bool], Tensor[(3, 90), bool], Tensor[(1, 864), uint64], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(14, 70), float32], Tensor[(5, 4, 8), float64], Tensor[(5, 4, 8), float64]) {
  @func_10182(%var_10184, %var_10185, %var_10186, %var_10187) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(30), bool], Tensor[(3, 90), bool], Tensor[(1, 864), uint64], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(14, 70), float32], Tensor[(5, 4, 8), float64], Tensor[(5, 4, 8), float64]) */
}

def @func_10354(%var_10349: Tensor[(22, 64), int16], %var_10350: Tensor[(720), float32], %var_10351: Tensor[(784), float32], %var_10352: Tensor[(1859), uint16], %var_10353: Tensor[(40), float32]) -> (Tensor[(1, 10, 6), float64], Tensor[(910), float32], Tensor[(8), uint32], Tensor[(22, 64), int16], Tensor[(16, 10, 6), float32], Tensor[(840), float32], Tensor[(720), float32], Tensor[(784), float32], Tensor[(216, 4), uint64], Tensor[(1859), uint16], Tensor[(960, 1), float32], Tensor[(16, 10, 6), float64], Tensor[(20, 1), int32], Tensor[(180), int32], Tensor[(20), int32], Tensor[(40), float32], Tensor[(7, 5, 13), float64], Tensor[(455), float64], Tensor[(960, 1), float64]) {
  @func_10347(%var_10349, %var_10350, %var_10351, %var_10352, %var_10353) /* ty=(Tensor[(1, 10, 6), float64], Tensor[(910), float32], Tensor[(8), uint32], Tensor[(22, 64), int16], Tensor[(16, 10, 6), float32], Tensor[(840), float32], Tensor[(720), float32], Tensor[(784), float32], Tensor[(216, 4), uint64], Tensor[(1859), uint16], Tensor[(960, 1), float32], Tensor[(16, 10, 6), float64], Tensor[(20, 1), int32], Tensor[(180), int32], Tensor[(20), int32], Tensor[(40), float32], Tensor[(7, 5, 13), float64], Tensor[(455), float64], Tensor[(960, 1), float64]) */
}

def @func_10042() -> (Tensor[(1, 10, 6), float32], Tensor[(1, 10, 6), float64]) {
  %446 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 10, 6), float32] */, dtype="float32") /* ty=Tensor[(1, 10, 6), float32] */;
  %447 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 10, 6), float32] */, dtype="float64") /* ty=Tensor[(1, 10, 6), float64] */;
  %448 = cos(%446) /* ty=Tensor[(1, 10, 6), float32] */;
  %449 = log(%447) /* ty=Tensor[(1, 10, 6), float64] */;
  (%448, %449)
}

def @func_10182(%var_10119: Tensor[(5, 4, 8), float32], %var_10135: Tensor[(30), bool], %var_10138: Tensor[(1408), int16], %var_10155: Tensor[(14, 70), float32]) -> (Tensor[(16, 10, 6), float64], Tensor[(30), bool], Tensor[(3, 90), bool], Tensor[(1, 864), uint64], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(14, 70), float32], Tensor[(5, 4, 8), float64], Tensor[(5, 4, 8), float64]) {
  %450 = cast(%var_10135, dtype="bool") /* ty=Tensor[(30), bool] */;
  %451 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 90), bool] */, dtype="bool") /* ty=Tensor[(3, 90), bool] */;
  %452 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 864), uint64] */, dtype="uint64") /* ty=Tensor[(1, 864), uint64] */;
  %453 = cast(%var_10138, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %454 = reshape(%450, newshape=[1, 2, 15]) /* ty=Tensor[(1, 2, 15), bool] */;
  %455 = reshape(%451, newshape=[9, 2, 15]) /* ty=Tensor[(9, 2, 15), bool] */;
  %456 = reshape(%452, newshape=[6, 144]) /* ty=Tensor[(6, 144), uint64] */;
  %457 = reshape(%453, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %458 = @func_5125(%454, %455, %456, %457) /* ty=(Tensor[(9, 2, 15), bool], Tensor[(8, 11, 16), int16], Tensor[(6, 144), uint64], Tensor[(1408), int16], Tensor[(16, 10, 6), float64], Tensor[(60, 16), float64]) */;
  %459 = cast(%var_10155, dtype="float32") /* ty=Tensor[(14, 70), float32] */;
  %460 = reshape(%459, newshape=[5, 14, 14]) /* ty=Tensor[(5, 14, 14), float32] */;
  %461 = cast(%var_10119, dtype="float32") /* ty=Tensor[(5, 4, 8), float32] */;
  %462 = log2(%461) /* ty=Tensor[(5, 4, 8), float32] */;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(5, 4, 8), float32] */;
  %464 = atanh(%463) /* ty=Tensor[(5, 4, 8), float32] */;
  %465 = cast(%464, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
  %466 = cast(%var_10119, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
  %467 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%464, dtype="float64") /* ty=Tensor[(5, 4, 8), float64] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %470 = %458.4;
  %471 = @func_1406(%460) /* ty=Tensor[(5, 14, 14), float32] */;
  %472 = acosh(%465) /* ty=Tensor[(5, 4, 8), float64] */;
  %473 = power(%468, %469) /* ty=Tensor[(5, 4, 8), float64] */;
  (%470, %var_10135, meta[relay.Constant][47] /* ty=Tensor[(3, 90), bool] */, meta[relay.Constant][48] /* ty=Tensor[(1, 864), uint64] */, %var_10138, %471, %var_10155, %472, %473)
}

def @func_132(%var_130: Tensor[(10, 7, 13), float32], %var_131: Tensor[(1408), int16]) -> (Tensor[(10, 7, 13), float32], Tensor[(8, 11, 16), float32]) {
  %490 = fn (%var_115: Tensor[(10, 7, 13), float32], %var_120: Tensor[(1408), int16]) -> (Tensor[(10, 7, 13), float32], Tensor[(8, 11, 16), float32]) {
    %474 = cast(%var_115, dtype="float32") /* ty=Tensor[(10, 7, 13), float32] */;
    %475 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(10, 7, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %476 = cast(meta[relay.Constant][49] /* ty=Tensor[(10, 7, 13), float32] */, dtype="float32") /* ty=Tensor[(10, 7, 13), float32] */;
    %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %478 = cast(%var_120, dtype="int16") /* ty=Tensor[(1408), int16] */;
    %479 = cast(%var_120, dtype="int16") /* ty=Tensor[(1408), int16] */;
    %480 = reshape(%478, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
    %481 = reshape(%479, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
    %482 = @func_72(%480, %481) /* ty=(Tensor[(8, 11, 16), int16],) */;
    %483 = %482.0;
    %484 = cast(%var_120, dtype="float32") /* ty=Tensor[(1408), float32] */;
    %485 = shape_of(%483, dtype="int32") /* ty=Tensor[(3), int32] */;
    %486 = cast(%483, dtype="float32") /* ty=Tensor[(8, 11, 16), float32] */;
    %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %488 = minimum(%476, %477) /* ty=Tensor[(10, 7, 13), float32] */;
    %489 = power(%486, %487) /* ty=Tensor[(8, 11, 16), float32] */;
    (%488, %489)
  };
  %490(%var_130, %var_131) /* ty=(Tensor[(10, 7, 13), float32], Tensor[(8, 11, 16), float32]) */
}

def @func_3552(%var_3538: Tensor[(5, 14, 5), float64]) -> (Tensor[(5, 14, 5), float64], Tensor[(8, 11, 16), int16], Tensor[(1408), int16]) {
  %491 = cast(%var_3538, dtype="float64") /* ty=Tensor[(5, 14, 5), float64] */;
  %492 = cast(meta[relay.Constant][50] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %493 = cast(meta[relay.Constant][50] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %494 = reshape(%492, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %495 = reshape(%493, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %496 = @func_72(%494, %495) /* ty=(Tensor[(8, 11, 16), int16],) */;
  %497 = asinh(%491) /* ty=Tensor[(5, 14, 5), float64] */;
  %498 = %496.0;
  (%497, %498, meta[relay.Constant][50] /* ty=Tensor[(1408), int16] */)
}

def @func_2268(%var_2248: int64, %var_2249: Tensor[(13, 7, 14), int64]) -> (Tensor[(13, 7, 14), int64],) {
  %499 = cast(%var_2248, dtype="int64") /* ty=int64 */;
  %500 = cast(%var_2249, dtype="int64") /* ty=Tensor[(13, 7, 14), int64] */;
  %501 = maximum(%499, %500) /* ty=Tensor[(13, 7, 14), int64] */;
  (%501,)
}

def @func_8790(%var_8788: Tensor[(1, 8, 5), float32], %var_8789: Tensor[(180), int32]) -> (Tensor[(1, 8, 5), float32], Tensor[(455, 2), float32], Tensor[(20), int32], Tensor[(180), int32], Tensor[(1408), int16]) {
  %512 = fn (%var_8770: Tensor[(1, 8, 5), float32], %var_8784: Tensor[(180), int32]) -> (Tensor[(1, 8, 5), float32], Tensor[(455, 2), float32], Tensor[(20), int32], Tensor[(180), int32], Tensor[(1408), int16]) {
    %502 = cast(%var_8770, dtype="float32") /* ty=Tensor[(1, 8, 5), float32] */;
    %503 = cast(meta[relay.Constant][51] /* ty=Tensor[(20), int32] */, dtype="int32") /* ty=Tensor[(20), int32] */;
    %504 = cast(%var_8784, dtype="int32") /* ty=Tensor[(180), int32] */;
    %505 = cast(meta[relay.Constant][52] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
    %506 = reshape(%503, newshape=[10, 1, 2]) /* ty=Tensor[(10, 1, 2), int32] */;
    %507 = reshape(%504, newshape=[10, 9, 2]) /* ty=Tensor[(10, 9, 2), int32] */;
    %508 = reshape(%505, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
    %509 = @func_5767(%506, %507, %508) /* ty=(Tensor[(10, 9, 2), bool], Tensor[(16, 10, 6), float64], Tensor[(960), float64], Tensor[(16, 10, 6), float64], Tensor[(910, 1), float32], Tensor[(455, 2), float32], Tensor[(1408), int16], Tensor[(12, 72), uint64]) */;
    %510 = sinh(%502) /* ty=Tensor[(1, 8, 5), float32] */;
    %511 = %509.5;
    (%510, %511, meta[relay.Constant][51] /* ty=Tensor[(20), int32] */, %var_8784, meta[relay.Constant][52] /* ty=Tensor[(1408), int16] */)
  };
  %512(%var_8788, %var_8789) /* ty=(Tensor[(1, 8, 5), float32], Tensor[(455, 2), float32], Tensor[(20), int32], Tensor[(180), int32], Tensor[(1408), int16]) */
}

def @func_10483(%var_10429: Tensor[(780), uint8], %var_10478: Tensor[(180), bool], %var_10480: Tensor[(1408), int16], %var_10481: Tensor[(864), uint64]) -> (Tensor[(1, 10, 6), float32], Tensor[(126), int16], Tensor[(780), uint8], Tensor[(960), float64], Tensor[(945), float64], Tensor[(10, 7, 13), float32], Tensor[(180), bool], Tensor[(910), float32], Tensor[(1408), int16], Tensor[(864), uint64]) {
  %513 = cast(%var_10429, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %514 = cast(%var_10429, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %515 = cast(meta[relay.Constant][53] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %516 = cast(meta[relay.Constant][54] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %517 = reshape(%513, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), uint8] */;
  %518 = reshape(%514, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), uint8] */;
  %519 = reshape(%515, newshape=[60, 16]) /* ty=Tensor[(60, 16), float64] */;
  %520 = reshape(%516, newshape=[105, 9]) /* ty=Tensor[(105, 9), float64] */;
  %521 = @func_3809(%517, %518, %519, %520) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(9, 2, 7), bool], Tensor[(126), int16], Tensor[(60, 16), float64], Tensor[(105, 9), float64], Tensor[(720), float32]) */;
  %522 = cast(%var_10478, dtype="bool") /* ty=Tensor[(180), bool] */;
  %523 = cast(meta[relay.Constant][55] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
  %524 = cast(%var_10480, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %525 = cast(%var_10481, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %526 = reshape(%522, newshape=[2, 9, 10]) /* ty=Tensor[(2, 9, 10), bool] */;
  %527 = reshape(%523, newshape=[910, 1]) /* ty=Tensor[(910, 1), float32] */;
  %528 = reshape(%524, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
  %529 = reshape(%525, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %530 = @func_2600(%526, %527, %528, %529) /* ty=(Tensor[(2, 9, 10), bool], Tensor[(10, 7, 13), float32], Tensor[(910, 1), float32], Tensor[(1408), int16], Tensor[(8, 11, 16), int16], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(784), float32]) */;
  %531 = @func_10381() /* ty=Tensor[(1, 10, 6), float32] */;
  %532 = %521.2;
  %533 = %530.1;
  (%531, %532, %var_10429, meta[relay.Constant][53] /* ty=Tensor[(960), float64] */, meta[relay.Constant][54] /* ty=Tensor[(945), float64] */, %533, %var_10478, meta[relay.Constant][55] /* ty=Tensor[(910), float32] */, %var_10480, %var_10481)
}

def @func_1984(%var_1935: Tensor[(9, 2, 7), int16], %var_1954: Tensor[(480, 2), float64], %var_1971: Tensor[(945), float64], %var_1972: Tensor[(720), float32]) -> (Tensor[(9, 2, 7), bool], Tensor[(16, 10, 6), float32], Tensor[(480, 2), float64], Tensor[(15, 7, 9), float64], Tensor[(945), float64], Tensor[(720), float32]) {
  %534 = cast(%var_1935, dtype="bool") /* ty=Tensor[(9, 2, 7), bool] */;
  %535 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(9, 2, 7), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(meta[relay.Constant][56] /* ty=Tensor[(9, 2, 7), int16] */, dtype="bool") /* ty=Tensor[(9, 2, 7), bool] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %538 = cast(%var_1954, dtype="float64") /* ty=Tensor[(480, 2), float64] */;
  %539 = reshape(%538, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %540 = @func_245(%539) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %541 = cast(%var_1971, dtype="float64") /* ty=Tensor[(945), float64] */;
  %542 = cast(%var_1972, dtype="float32") /* ty=Tensor[(720), float32] */;
  %543 = reshape(%541, newshape=[15, 7, 9]) /* ty=Tensor[(15, 7, 9), float64] */;
  %544 = reshape(%542, newshape=[180, 4]) /* ty=Tensor[(180, 4), float32] */;
  %545 = @func_337(%543, %544) /* ty=(Tensor[(15, 7, 9), float64], Tensor[(9, 10, 8), float32], float32, Tensor[(180, 4), float32]) */;
  %546 = less_equal(%536, %537) /* ty=Tensor[(9, 2, 7), bool] */;
  %547 = %540.1;
  %548 = %545.0;
  (%546, %547, %var_1954, %548, %var_1971, %var_1972)
}

def @func_6037(%var_6035: Tensor[(84), int8], %var_6036: Tensor[(910), float32]) -> (Tensor[(3, 15, 6), bool], Tensor[(3, 7, 4), float64], Tensor[(84), int8], Tensor[(1408), int16], Tensor[(30, 6), bool], Tensor[(910), float32], Tensor[(864), uint64], Tensor[(1408), bool]) {
  %571 = fn (%var_6003: Tensor[(84), int8], %var_6008: Tensor[(910), float32]) -> (Tensor[(3, 15, 6), bool], Tensor[(3, 7, 4), float64], Tensor[(84), int8], Tensor[(1408), int16], Tensor[(30, 6), bool], Tensor[(910), float32], Tensor[(864), uint64], Tensor[(1408), bool]) {
    %549 = cast(-2.10973f /* ty=float32 */, dtype="bool") /* ty=bool */;
    %550 = cast(meta[relay.Constant][57] /* ty=Tensor[(3, 15, 6), float32] */, dtype="bool") /* ty=Tensor[(3, 15, 6), bool] */;
    %551 = cast(-2.10973f /* ty=float32 */, dtype="int8") /* ty=int8 */;
    %552 = cast(%var_6003, dtype="int8") /* ty=Tensor[(84), int8] */;
    %553 = reshape(%551, newshape=[]) /* ty=int8 */;
    %554 = reshape(%552, newshape=[3, 7, 4]) /* ty=Tensor[(3, 7, 4), int8] */;
    %555 = @func_3290(%553, %554) /* ty=(Tensor[(3, 7, 4), float64],) */;
    %556 = cast(meta[relay.Constant][58] /* ty=Tensor[(30, 6), bool] */, dtype="bool") /* ty=Tensor[(30, 6), bool] */;
    %557 = cast(%var_6008, dtype="float32") /* ty=Tensor[(910), float32] */;
    %558 = cast(meta[relay.Constant][59] /* ty=Tensor[(1408), int16] */, dtype="int16") /* ty=Tensor[(1408), int16] */;
    %559 = cast(meta[relay.Constant][60] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %560 = reshape(%556, newshape=[2, 9, 10]) /* ty=Tensor[(2, 9, 10), bool] */;
    %561 = reshape(%557, newshape=[910, 1]) /* ty=Tensor[(910, 1), float32] */;
    %562 = reshape(%558, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
    %563 = reshape(%559, newshape=[864]) /* ty=Tensor[(864), uint64] */;
    %564 = @func_2600(%560, %561, %562, %563) /* ty=(Tensor[(2, 9, 10), bool], Tensor[(10, 7, 13), float32], Tensor[(910, 1), float32], Tensor[(1408), int16], Tensor[(8, 11, 16), int16], Tensor[(864), uint64], Tensor[(864), uint64], Tensor[(784), float32]) */;
    %565 = cast(meta[relay.Constant][59] /* ty=Tensor[(1408), int16] */, dtype="bool") /* ty=Tensor[(1408), bool] */;
    %566 = cast(-2.10973f /* ty=float32 */, dtype="bool") /* ty=bool */;
    %567 = less(%549, %550) /* ty=Tensor[(3, 15, 6), bool] */;
    %568 = %555.0;
    %569 = %564.3;
    %570 = logical_or(%565, %566) /* ty=Tensor[(1408), bool] */;
    (%567, %568, %var_6003, %569, meta[relay.Constant][58] /* ty=Tensor[(30, 6), bool] */, %var_6008, meta[relay.Constant][60] /* ty=Tensor[(864), uint64] */, %570)
  };
  %571(%var_6035, %var_6036) /* ty=(Tensor[(3, 15, 6), bool], Tensor[(3, 7, 4), float64], Tensor[(84), int8], Tensor[(1408), int16], Tensor[(30, 6), bool], Tensor[(910), float32], Tensor[(864), uint64], Tensor[(1408), bool]) */
}

def @func_6941(%var_6939: Tensor[(280), float32]) -> (Tensor[(2, 15, 8), float64], Tensor[(7, 10, 4), bool], Tensor[(280), float32]) {
  %572 = cast(meta[relay.Constant][61] /* ty=Tensor[(2, 15, 8), float64] */, dtype="float64") /* ty=Tensor[(2, 15, 8), float64] */;
  %573 = cast(%var_6939, dtype="float32") /* ty=Tensor[(280), float32] */;
  %574 = reshape(%573, newshape=[7, 10, 4]) /* ty=Tensor[(7, 10, 4), float32] */;
  %575 = acos(%572) /* ty=Tensor[(2, 15, 8), float64] */;
  %576 = @func_5307(%574) /* ty=Tensor[(7, 10, 4), bool] */;
  (%575, %576, %var_6939)
}

def @func_72(%var_53: Tensor[(8, 11, 16), int16], %var_54: Tensor[(8, 11, 16), int16]) -> (Tensor[(8, 11, 16), int16],) {
  %577 = cast(%var_54, dtype="int16") /* ty=Tensor[(8, 11, 16), int16] */;
  %578 = shape_of(%var_53, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%var_53, dtype="int16") /* ty=Tensor[(8, 11, 16), int16] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %581 = bitwise_or(%579, %580) /* ty=Tensor[(8, 11, 16), int16] */;
  (%581,)
}

def @func_7556(%var_7549: Tensor[(960), float64]) -> (Tensor[(14, 12, 16), float32], Tensor[(720), float32], Tensor[(780), uint8], Tensor[(960), float64], Tensor[(945), float64]) {
  %582 = cast(meta[relay.Constant][62] /* ty=Tensor[(14, 12, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 12, 16), float32] */;
  %583 = cast(meta[relay.Constant][63] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %584 = cast(meta[relay.Constant][63] /* ty=Tensor[(780), uint8] */, dtype="uint8") /* ty=Tensor[(780), uint8] */;
  %585 = cast(%var_7549, dtype="float64") /* ty=Tensor[(960), float64] */;
  %586 = cast(meta[relay.Constant][64] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %587 = reshape(%583, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), uint8] */;
  %588 = reshape(%584, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), uint8] */;
  %589 = reshape(%585, newshape=[60, 16]) /* ty=Tensor[(60, 16), float64] */;
  %590 = reshape(%586, newshape=[105, 9]) /* ty=Tensor[(105, 9), float64] */;
  %591 = @func_3809(%587, %588, %589, %590) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(9, 2, 7), bool], Tensor[(126), int16], Tensor[(60, 16), float64], Tensor[(105, 9), float64], Tensor[(720), float32]) */;
  %592 = log(%582) /* ty=Tensor[(14, 12, 16), float32] */;
  %593 = %591.5;
  (%592, %593, meta[relay.Constant][63] /* ty=Tensor[(780), uint8] */, %var_7549, meta[relay.Constant][64] /* ty=Tensor[(945), float64] */)
}

def @func_9554(%var_9528: Tensor[(13, 15, 1), float64]) -> (Tensor[(13, 15, 1), float64], Tensor[(13, 15, ?), bool]) {
  %594 = cast(%var_9528, dtype="float64") /* ty=Tensor[(13, 15, 1), float64] */;
  %595 = cast(%var_9528, dtype="float32") /* ty=Tensor[(13, 15, 1), float32] */;
  %596 = acos(%595) /* ty=Tensor[(13, 15, 1), float32] */;
  %597 = cast(%var_9528, dtype="bool") /* ty=Tensor[(13, 15, 1), bool] */;
  %598 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%596, dtype="bool") /* ty=Tensor[(13, 15, 1), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %601 = log2(%594) /* ty=Tensor[(13, 15, 1), float64] */;
  %602 = greater(%599, %600) /* ty=Tensor[(13, 15, ?), bool] */;
  (%601, %602)
}

def @func_4173(%var_4171: Tensor[(7, 10, 15), float64]) -> (Tensor[(7, 10, 15), float32],) {
  @func_4170(%var_4171) /* ty=(Tensor[(7, 10, 15), float32],) */
}

def @func_10044() -> (Tensor[(1, 10, 6), float32], Tensor[(1, 10, 6), float64]) {
  @func_10042() /* ty=(Tensor[(1, 10, 6), float32], Tensor[(1, 10, 6), float64]) */
}

def @main(%var_10519: Tensor[(784, 1), float32], %var_10527: Tensor[(784, 14), float32]) -> (Tensor[(1, 10, 6), float64], Tensor[(5, 14, 14), float32], Tensor[(864, 1), uint64], Tensor[(784, 14), float32]) {
  %603 = @func_10044() /* ty=(Tensor[(1, 10, 6), float32], Tensor[(1, 10, 6), float64]) */;
  %604 = cast(%var_10519, dtype="float32") /* ty=Tensor[(784, 1), float32] */;
  %605 = cast(meta[relay.Constant][65] /* ty=Tensor[(864, 1), uint64] */, dtype="uint64") /* ty=Tensor[(864, 1), uint64] */;
  %606 = reshape(%604, newshape=[4, 14, 14]) /* ty=Tensor[(4, 14, 14), float32] */;
  %607 = reshape(%605, newshape=[864]) /* ty=Tensor[(864), uint64] */;
  %608 = @func_2142(%606, %607) /* ty=(Tensor[(4, 14, 14), float64], Tensor[(4, 14, 14), float32], Tensor[(8, 11, 16), int16], Tensor[(1408), int16], Tensor[(5, 14, 14), float32], Tensor[(980), float32], Tensor[(9, 8, 12), uint64], Tensor[(864), uint64]) */;
  %609 = cast(%var_10519, dtype="float32") /* ty=Tensor[(784, 1), float32] */;
  %610 = cast(%var_10527, dtype="float32") /* ty=Tensor[(784, 14), float32] */;
  %611 = %603.1;
  %612 = %608.4;
  %613 = floor_divide(%609, %610) /* ty=Tensor[(784, 14), float32] */;
  (%611, %612, meta[relay.Constant][65] /* ty=Tensor[(864, 1), uint64] */, %613)
}

def @func_3814(%var_3810: Tensor[(5, 13, 12), uint8], %var_3811: Tensor[(5, 13, 12), uint8], %var_3812: Tensor[(60, 16), float64], %var_3813: Tensor[(105, 9), float64]) -> (Tensor[(5, 13, 12), bool], Tensor[(9, 2, 7), bool], Tensor[(126), int16], Tensor[(60, 16), float64], Tensor[(105, 9), float64], Tensor[(720), float32]) {
  %629 = fn (%var_3791: Tensor[(5, 13, 12), uint8], %var_3792: Tensor[(5, 13, 12), uint8], %var_3799: Tensor[(60, 16), float64], %var_3800: Tensor[(105, 9), float64]) -> (Tensor[(5, 13, 12), bool], Tensor[(9, 2, 7), bool], Tensor[(126), int16], Tensor[(60, 16), float64], Tensor[(105, 9), float64], Tensor[(720), float32]) {
    %614 = cast(%var_3792, dtype="bool") /* ty=Tensor[(5, 13, 12), bool] */;
    %615 = shape_of(%var_3791, dtype="int32") /* ty=Tensor[(3), int32] */;
    %616 = cast(%var_3791, dtype="bool") /* ty=Tensor[(5, 13, 12), bool] */;
    %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %618 = cast(meta[relay.Constant][66] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %619 = cast(%var_3799, dtype="float64") /* ty=Tensor[(60, 16), float64] */;
    %620 = cast(%var_3800, dtype="float64") /* ty=Tensor[(105, 9), float64] */;
    %621 = cast(meta[relay.Constant][67] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %622 = reshape(%618, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
    %623 = reshape(%619, newshape=[480, 2]) /* ty=Tensor[(480, 2), float64] */;
    %624 = reshape(%620, newshape=[945]) /* ty=Tensor[(945), float64] */;
    %625 = reshape(%621, newshape=[720]) /* ty=Tensor[(720), float32] */;
    %626 = @func_1984(%622, %623, %624, %625) /* ty=(Tensor[(9, 2, 7), bool], Tensor[(16, 10, 6), float32], Tensor[(480, 2), float64], Tensor[(15, 7, 9), float64], Tensor[(945), float64], Tensor[(720), float32]) */;
    %627 = less(%616, %617) /* ty=Tensor[(5, 13, 12), bool] */;
    %628 = %626.0;
    (%627, %628, meta[relay.Constant][66] /* ty=Tensor[(126), int16] */, %var_3799, %var_3800, meta[relay.Constant][67] /* ty=Tensor[(720), float32] */)
  };
  %629(%var_3810, %var_3811, %var_3812, %var_3813) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(9, 2, 7), bool], Tensor[(126), int16], Tensor[(60, 16), float64], Tensor[(105, 9), float64], Tensor[(720), float32]) */
}

def @func_8210(%var_8204: Tensor[(4, 2, 4), bool], %var_8205: Tensor[(4, 2, 4), bool], %var_8206: Tensor[(6, 140), float32], %var_8207: Tensor[(784), float32], %var_8208: Tensor[(864), uint64], %var_8209: Tensor[(44, 32), int16]) -> (Tensor[(4, 2, 4), uint32], Tensor[(16, 10, 6), float32], Tensor[(6, 140), float32], Tensor[(4, 180), float32], Tensor[(784), float32], Tensor[(864), uint64], Tensor[(1859, 1), uint16], Tensor[(960), float64], Tensor[(9, 10, 8), float32], float32, Tensor[(8, 11, 16), int16], Tensor[(44, 32), int16], Tensor[(4, 2, 4), float32]) {
  @func_8202(%var_8204, %var_8205, %var_8206, %var_8207, %var_8208, %var_8209) /* ty=(Tensor[(4, 2, 4), uint32], Tensor[(16, 10, 6), float32], Tensor[(6, 140), float32], Tensor[(4, 180), float32], Tensor[(784), float32], Tensor[(864), uint64], Tensor[(1859, 1), uint16], Tensor[(960), float64], Tensor[(9, 10, 8), float32], float32, Tensor[(8, 11, 16), int16], Tensor[(44, 32), int16], Tensor[(4, 2, 4), float32]) */
}

def @func_692(%var_672: Tensor[(9, 8, 12), uint64], %var_687: Tensor[(1408, 1), int16]) -> (Tensor[(9, 8, 12), uint64], Tensor[(8, 11, 16), int16], Tensor[(1408, 1), int16]) {
  %630 = cast(meta[relay.Constant][68] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %631 = cast(%var_672, dtype="uint64") /* ty=Tensor[(9, 8, 12), uint64] */;
  %632 = cast(%var_687, dtype="int16") /* ty=Tensor[(1408, 1), int16] */;
  %633 = cast(%var_687, dtype="int16") /* ty=Tensor[(1408, 1), int16] */;
  %634 = reshape(%632, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %635 = reshape(%633, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %636 = @func_72(%634, %635) /* ty=(Tensor[(8, 11, 16), int16],) */;
  %637 = maximum(%630, %631) /* ty=Tensor[(9, 8, 12), uint64] */;
  %638 = %636.0;
  (%637, %638, %var_687)
}

def @func_5448(%var_5444: Tensor[(9, 11, 7), int32], %var_5445: Tensor[(9, 11, 7), int32], %var_5446: Tensor[(5, 189), float64], %var_5447: Tensor[(720), float32]) -> (Tensor[(9, 11, 7), bool], Tensor[(15, 7, 9), float64], Tensor[(126), int16], Tensor[(10, 96), float64], Tensor[(5, 189), float64], Tensor[(720), float32]) {
  %654 = fn (%var_5424: Tensor[(9, 11, 7), int32], %var_5425: Tensor[(9, 11, 7), int32], %var_5434: Tensor[(5, 189), float64], %var_5435: Tensor[(720), float32]) -> (Tensor[(9, 11, 7), bool], Tensor[(15, 7, 9), float64], Tensor[(126), int16], Tensor[(10, 96), float64], Tensor[(5, 189), float64], Tensor[(720), float32]) {
    %639 = cast(%var_5425, dtype="bool") /* ty=Tensor[(9, 11, 7), bool] */;
    %640 = shape_of(%var_5424, dtype="int32") /* ty=Tensor[(3), int32] */;
    %641 = cast(%var_5424, dtype="bool") /* ty=Tensor[(9, 11, 7), bool] */;
    %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %643 = cast(meta[relay.Constant][69] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %644 = cast(meta[relay.Constant][70] /* ty=Tensor[(10, 96), float64] */, dtype="float64") /* ty=Tensor[(10, 96), float64] */;
    %645 = cast(%var_5434, dtype="float64") /* ty=Tensor[(5, 189), float64] */;
    %646 = cast(%var_5435, dtype="float32") /* ty=Tensor[(720), float32] */;
    %647 = reshape(%643, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), int16] */;
    %648 = reshape(%644, newshape=[480, 2]) /* ty=Tensor[(480, 2), float64] */;
    %649 = reshape(%645, newshape=[945]) /* ty=Tensor[(945), float64] */;
    %650 = reshape(%646, newshape=[720]) /* ty=Tensor[(720), float32] */;
    %651 = @func_1984(%647, %648, %649, %650) /* ty=(Tensor[(9, 2, 7), bool], Tensor[(16, 10, 6), float32], Tensor[(480, 2), float64], Tensor[(15, 7, 9), float64], Tensor[(945), float64], Tensor[(720), float32]) */;
    %652 = equal(%641, %642) /* ty=Tensor[(9, 11, 7), bool] */;
    %653 = %651.3;
    (%652, %653, meta[relay.Constant][69] /* ty=Tensor[(126), int16] */, meta[relay.Constant][70] /* ty=Tensor[(10, 96), float64] */, %var_5434, %var_5435)
  };
  %654(%var_5444, %var_5445, %var_5446, %var_5447) /* ty=(Tensor[(9, 11, 7), bool], Tensor[(15, 7, 9), float64], Tensor[(126), int16], Tensor[(10, 96), float64], Tensor[(5, 189), float64], Tensor[(720), float32]) */
}

def @func_7732(%var_7730: Tensor[(4, 10, 2), uint64]) -> (Tensor[(4, 10, 2), uint64], Tensor[(4, 10, 2), int32], Tensor[(16, 10, 6), float32], Tensor[(504), float32], Tensor[(4, 10, 2), float64]) {
  @func_7729(%var_7730) /* ty=(Tensor[(4, 10, 2), uint64], Tensor[(4, 10, 2), int32], Tensor[(16, 10, 6), float32], Tensor[(504), float32], Tensor[(4, 10, 2), float64]) */
}

def @func_3959(%var_3958: uint32) -> (Tensor[(13, 5, 8), uint32], Tensor[(13, 5, 8), float32]) {
  %665 = fn (%var_3919: uint32) -> (Tensor[(13, 5, 8), uint32], Tensor[(13, 5, 8), float32]) {
    %655 = cast(%var_3919, dtype="uint32") /* ty=uint32 */;
    %656 = cast(meta[relay.Constant][71] /* ty=Tensor[(13, 5, 8), uint32] */, dtype="uint32") /* ty=Tensor[(13, 5, 8), uint32] */;
    %657 = cast(meta[relay.Constant][71] /* ty=Tensor[(13, 5, 8), uint32] */, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
    %658 = acos(%657) /* ty=Tensor[(13, 5, 8), float32] */;
    %659 = cast(meta[relay.Constant][72] /* ty=Tensor[(13, 5, 8), float32] */, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
    %660 = shape_of(%658, dtype="int32") /* ty=Tensor[(3), int32] */;
    %661 = cast(%658, dtype="float32") /* ty=Tensor[(13, 5, 8), float32] */;
    %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %663 = maximum(%655, %656) /* ty=Tensor[(13, 5, 8), uint32] */;
    %664 = power(%661, %662) /* ty=Tensor[(13, 5, 8), float32] */;
    (%663, %664)
  };
  %665(%var_3958) /* ty=(Tensor[(13, 5, 8), uint32], Tensor[(13, 5, 8), float32]) */
}

def @func_7559(%var_7557: Tensor[(960), float64]) -> (Tensor[(14, 12, 16), float32], Tensor[(720), float32], Tensor[(780), uint8], Tensor[(960), float64], Tensor[(945), float64]) {
  @func_7556(%var_7557) /* ty=(Tensor[(14, 12, 16), float32], Tensor[(720), float32], Tensor[(780), uint8], Tensor[(960), float64], Tensor[(945), float64]) */
}

def @func_5309(%var_5308: Tensor[(7, 10, 4), float32]) -> Tensor[(7, 10, 4), bool] {
  %672 = fn (%var_5291: Tensor[(7, 10, 4), float32]) -> Tensor[(7, 10, 4), bool] {
    %666 = cast(%var_5291, dtype="float32") /* ty=Tensor[(7, 10, 4), float32] */;
    %667 = acosh(%666) /* ty=Tensor[(7, 10, 4), float32] */;
    %668 = cast(%667, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
    %669 = shape_of(%var_5291, dtype="int32") /* ty=Tensor[(3), int32] */;
    %670 = cast(%var_5291, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
    %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%670, %671) /* ty=Tensor[(7, 10, 4), bool] */
  };
  %672(%var_5308) /* ty=Tensor[(7, 10, 4), bool] */
}

def @func_285(%var_277: float32, %var_278: Tensor[(9, 10, 8), float32]) -> Tensor[(9, 10, 8), float32] {
  %673 = cast(%var_277, dtype="float32") /* ty=float32 */;
  %674 = cast(%var_278, dtype="float32") /* ty=Tensor[(9, 10, 8), float32] */;
  mod(%673, %674) /* ty=Tensor[(9, 10, 8), float32] */
}

def @func_1409(%var_1407: Tensor[(5, 14, 14), float32]) -> Tensor[(5, 14, 14), float32] {
  @func_1406(%var_1407) /* ty=Tensor[(5, 14, 14), float32] */
}

def @func_2739(%var_2737: Tensor[(2, 1, 4), uint32], %var_2738: Tensor[(44, 32), int16]) -> (Tensor[(2, ?, 4), uint32], Tensor[(910), float32], Tensor[(44, 32), uint64], Tensor[(9, 10, 8), float32], float32, Tensor[(720), float32], Tensor[(8, 11, 16), float64]) {
  %700 = fn (%var_2672: Tensor[(2, 1, 4), uint32], %var_2690: Tensor[(44, 32), int16]) -> (Tensor[(2, ?, 4), uint32], Tensor[(910), float32], Tensor[(44, 32), uint64], Tensor[(9, 10, 8), float32], float32, Tensor[(720), float32], Tensor[(8, 11, 16), float64]) {
    %675 = cast(meta[relay.Constant][73] /* ty=Tensor[(2, 1, 4), uint32] */, dtype="uint32") /* ty=Tensor[(2, 1, 4), uint32] */;
    %676 = shape_of(%var_2672, dtype="int32") /* ty=Tensor[(3), int32] */;
    %677 = cast(%var_2672, dtype="uint32") /* ty=Tensor[(2, 1, 4), uint32] */;
    %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %679 = cast(meta[relay.Constant][74] /* ty=Tensor[(910), float32] */, dtype="float32") /* ty=Tensor[(910), float32] */;
    %680 = cast(%var_2690, dtype="int16") /* ty=Tensor[(44, 32), int16] */;
    %681 = reshape(%679, newshape=[10, 7, 13]) /* ty=Tensor[(10, 7, 13), float32] */;
    %682 = reshape(%680, newshape=[1408]) /* ty=Tensor[(1408), int16] */;
    %683 = @func_129(%681, %682) /* ty=(Tensor[(10, 7, 13), float32], Tensor[(8, 11, 16), float32]) */;
    %684 = %683.1;
    %685 = cast(%684, dtype="uint64") /* ty=Tensor[(8, 11, 16), uint64] */;
    %686 = shape_of(%var_2690, dtype="int32") /* ty=Tensor[(2), int32] */;
    %687 = cast(%var_2690, dtype="uint64") /* ty=Tensor[(44, 32), uint64] */;
    %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %689 = cast(-1.8029f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %690 = cast(meta[relay.Constant][75] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %691 = reshape(%689, newshape=[]) /* ty=float32 */;
    %692 = reshape(%690, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
    %693 = cast(%684, dtype="float32") /* ty=Tensor[(8, 11, 16), float32] */;
    %694 = atan(%693) /* ty=Tensor[(8, 11, 16), float32] */;
    %695 = cast(%694, dtype="float64") /* ty=Tensor[(8, 11, 16), float64] */;
    %696 = subtract(%677, %678) /* ty=Tensor[(2, ?, 4), uint32] */;
    %697 = minimum(%687, %688) /* ty=Tensor[(44, 32), uint64] */;
    %698 = @func_285(%691, %692) /* ty=Tensor[(9, 10, 8), float32] */;
    %699 = sqrt(%695) /* ty=Tensor[(8, 11, 16), float64] */;
    (%696, meta[relay.Constant][74] /* ty=Tensor[(910), float32] */, %697, %698, -1.8029f /* ty=float32 */, meta[relay.Constant][75] /* ty=Tensor[(720), float32] */, %699)
  };
  %700(%var_2737, %var_2738) /* ty=(Tensor[(2, ?, 4), uint32], Tensor[(910), float32], Tensor[(44, 32), uint64], Tensor[(9, 10, 8), float32], float32, Tensor[(720), float32], Tensor[(8, 11, 16), float64]) */
}

def @func_5125(%var_5095: Tensor[(1, 2, 15), bool], %var_5096: Tensor[(9, 2, 15), bool], %var_5102: Tensor[(6, 144), uint64], %var_5103: Tensor[(1408), int16]) -> (Tensor[(9, 2, 15), bool], Tensor[(8, 11, 16), int16], Tensor[(6, 144), uint64], Tensor[(1408), int16], Tensor[(16, 10, 6), float64], Tensor[(60, 16), float64]) {
  %701 = cast(%var_5095, dtype="bool") /* ty=Tensor[(1, 2, 15), bool] */;
  %702 = cast(%var_5096, dtype="bool") /* ty=Tensor[(9, 2, 15), bool] */;
  %703 = cast(%var_5102, dtype="uint64") /* ty=Tensor[(6, 144), uint64] */;
  %704 = cast(%var_5103, dtype="int16") /* ty=Tensor[(1408), int16] */;
  %705 = reshape(%703, newshape=[9, 8, 12]) /* ty=Tensor[(9, 8, 12), uint64] */;
  %706 = reshape(%704, newshape=[1408, 1]) /* ty=Tensor[(1408, 1), int16] */;
  %707 = @func_692(%705, %706) /* ty=(Tensor[(9, 8, 12), uint64], Tensor[(8, 11, 16), int16], Tensor[(1408, 1), int16]) */;
  %708 = cast(meta[relay.Constant][76] /* ty=Tensor[(60, 16), float64] */, dtype="float64") /* ty=Tensor[(60, 16), float64] */;
  %709 = reshape(%708, newshape=[16, 10, 6]) /* ty=Tensor[(16, 10, 6), float64] */;
  %710 = @func_245(%709) /* ty=(Tensor[(16, 10, 6), float64], Tensor[(16, 10, 6), float32]) */;
  %711 = logical_and(%701, %702) /* ty=Tensor[(9, 2, 15), bool] */;
  %712 = %707.1;
  %713 = %710.0;
  (%711, %712, %var_5102, %var_5103, %713, meta[relay.Constant][76] /* ty=Tensor[(60, 16), float64] */)
}

def @func_1990(%var_1986: Tensor[(9, 2, 7), int16], %var_1987: Tensor[(480, 2), float64], %var_1988: Tensor[(945), float64], %var_1989: Tensor[(720), float32]) -> (Tensor[(9, 2, 7), bool], Tensor[(16, 10, 6), float32], Tensor[(480, 2), float64], Tensor[(15, 7, 9), float64], Tensor[(945), float64], Tensor[(720), float32]) {
  @func_1984(%var_1986, %var_1987, %var_1988, %var_1989) /* ty=(Tensor[(9, 2, 7), bool], Tensor[(16, 10, 6), float32], Tensor[(480, 2), float64], Tensor[(15, 7, 9), float64], Tensor[(945), float64], Tensor[(720), float32]) */
}

def @func_289(%var_287: float32, %var_288: Tensor[(9, 10, 8), float32]) -> Tensor[(9, 10, 8), float32] {
  @func_285(%var_287, %var_288) /* ty=Tensor[(9, 10, 8), float32] */
}

def @func_4002(%var_4000: Tensor[(14, 9, 11), uint64], %var_4001: Tensor[(14, 9, 11), uint64]) -> (Tensor[(14, 9, 11), uint64], Tensor[(14, 9, 11), bool]) {
  %724 = fn (%var_3987: Tensor[(14, 9, 11), uint64], %var_3988: Tensor[(14, 9, 11), uint64]) -> (Tensor[(14, 9, 11), uint64], Tensor[(14, 9, 11), bool]) {
    %714 = cast(%var_3988, dtype="uint64") /* ty=Tensor[(14, 9, 11), uint64] */;
    %715 = shape_of(%var_3987, dtype="int32") /* ty=Tensor[(3), int32] */;
    %716 = cast(%var_3987, dtype="uint64") /* ty=Tensor[(14, 9, 11), uint64] */;
    %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %718 = cast(%var_3987, dtype="bool") /* ty=Tensor[(14, 9, 11), bool] */;
    %719 = shape_of(%var_3988, dtype="int32") /* ty=Tensor[(3), int32] */;
    %720 = cast(%var_3988, dtype="bool") /* ty=Tensor[(14, 9, 11), bool] */;
    %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %722 = bitwise_or(%716, %717) /* ty=Tensor[(14, 9, 11), uint64] */;
    %723 = less_equal(%720, %721) /* ty=Tensor[(14, 9, 11), bool] */;
    (%722, %723)
  };
  %724(%var_4000, %var_4001) /* ty=(Tensor[(14, 9, 11), uint64], Tensor[(14, 9, 11), bool]) */
}

def @func_8202(%var_8138: Tensor[(4, 2, 4), bool], %var_8139: Tensor[(4, 2, 4), bool], %var_8172: Tensor[(6, 140), float32], %var_8174: Tensor[(784), float32], %var_8175: Tensor[(864), uint64], %var_8184: Tensor[(44, 32), int16]) -> (Tensor[(4, 2, 4), uint32], Tensor[(16, 10, 6), float32], Tensor[(6, 140), float32], Tensor[(4, 180), float32], Tensor[(784), float32], Tensor[(864), uint64], Tensor[(1859, 1), uint16], Tensor[(960), float64], Tensor[(9, 10, 8), float32], float32, Tensor[(8, 11, 16), int16], Tensor[(44, 32), int16], Tensor[(4, 2, 4), float32]) {
  %725 = cast(%var_8139, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %726 = shape_of(%var_8138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %727 = cast(%var_8138, dtype="bool") /* ty=Tensor[(4, 2, 4), bool] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %729 = logical_and(%727, %728) /* ty=Tensor[(4, 2, 4), bool] */;
  %730 = cast(%var_8138, dtype="uint32") /* ty=Tensor[(4, 2, 4), uint32] */;
  %731 = shape_of(%729, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(%729, dtype="uint32") /* ty=Tensor[(4, 2, 4), uint32] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %734 = cast(%var_8172, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %735 = cast(meta[relay.Constant][77] /* ty=Tensor[(4, 180), float32] */, dtype="float32") /* ty=Tensor[(4, 180), float32] */;
  %736 = cast(%var_8174, dtype="float32") /* ty=Tensor[(784), float32] */;
  %737 = cast(%var_8175, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %738 = cast(meta[relay.Constant][78] /* ty=Tensor[(1859, 1), uint16] */, dtype="uint16") /* ty=Tensor[(1859, 1), uint16] */;
  %739 = cast(meta[relay.Constant][79] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %740 = reshape(%734, newshape=[12, 5, 14]) /* ty=Tensor[(12, 5, 14), float32] */;
  %741 = reshape(%735, newshape=[720]) /* ty=Tensor[(720), float32] */;
  %742 = reshape(%736, newshape=[784]) /* ty=Tensor[(784), float32] */;
  %743 = reshape(%737, newshape=[216, 4]) /* ty=Tensor[(216, 4), uint64] */;
  %744 = reshape(%738, newshape=[1859]) /* ty=Tensor[(1859), uint16] */;
  %745 = reshape(%739, newshape=[960]) /* ty=Tensor[(960), float64] */;
  %746 = @func_6202(%740, %741, %742, %743, %744, %745) /* ty=(Tensor[(12, 5, 14), uint8], Tensor[(9, 10, 8), float32], Tensor[(720), float32], Tensor[(5, 14, 14), float32], Tensor[(784), float32], Tensor[(216, 4), uint64], Tensor[(13, 11, 13), uint16], Tensor[(1859), uint16], Tensor[(16, 10, 6), float32], Tensor[(960), float64], Tensor[(12, 5, 14), int32], Tensor[(14, 9, 11), bool], Tensor[(2, 704), int16], Tensor[(1274), int64], Tensor[(462, 3), uint64]) */;
  %747 = cast(-5.522f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %748 = cast(meta[relay.Constant][77] /* ty=Tensor[(4, 180), float32] */, dtype="float32") /* ty=Tensor[(4, 180), float32] */;
  %749 = reshape(%747, newshape=[]) /* ty=float32 */;
  %750 = reshape(%748, newshape=[9, 10, 8]) /* ty=Tensor[(9, 10, 8), float32] */;
  %751 = cast(%var_8184, dtype="int16") /* ty=Tensor[(44, 32), int16] */;
  %752 = cast(%var_8184, dtype="int16") /* ty=Tensor[(44, 32), int16] */;
  %753 = reshape(%751, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %754 = reshape(%752, newshape=[8, 11, 16]) /* ty=Tensor[(8, 11, 16), int16] */;
  %755 = @func_72(%753, %754) /* ty=(Tensor[(8, 11, 16), int16],) */;
  %756 = cast(%var_8139, dtype="float32") /* ty=Tensor[(4, 2, 4), float32] */;
  %757 = logical_xor(%732, %733) /* ty=Tensor[(4, 2, 4), uint32] */;
  %758 = %746.8;
  %759 = @func_285(%749, %750) /* ty=Tensor[(9, 10, 8), float32] */;
  %760 = %755.0;
  %761 = sigmoid(%756) /* ty=Tensor[(4, 2, 4), float32] */;
  (%757, %758, %var_8172, meta[relay.Constant][77] /* ty=Tensor[(4, 180), float32] */, %var_8174, %var_8175, meta[relay.Constant][78] /* ty=Tensor[(1859, 1), uint16] */, meta[relay.Constant][79] /* ty=Tensor[(960), float64] */, %759, -5.522f /* ty=float32 */, %760, %var_8184, %761)
}

def @func_7823(%var_7798: Tensor[(4, 3, 10), float64]) -> (Tensor[(11, 12, 9), float64], Tensor[(1188), float64], Tensor[(4, 3, 10), float64]) {
  %762 = cast(meta[relay.Constant][80] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %763 = reshape(%762, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %764 = @func_4604(%763) /* ty=(Tensor[(11, 12, 9), float64],) */;
  %765 = cast(%var_7798, dtype="float64") /* ty=Tensor[(4, 3, 10), float64] */;
  %766 = sqrt(%765) /* ty=Tensor[(4, 3, 10), float64] */;
  %767 = cast(%766, dtype="float64") /* ty=Tensor[(4, 3, 10), float64] */;
  %768 = %764.0;
  %769 = cos(%767) /* ty=Tensor[(4, 3, 10), float64] */;
  (%768, meta[relay.Constant][80] /* ty=Tensor[(1188), float64] */, %769)
}

def @func_7826(%var_7824: Tensor[(4, 3, 10), float64]) -> (Tensor[(11, 12, 9), float64], Tensor[(1188), float64], Tensor[(4, 3, 10), float64]) {
  @func_7823(%var_7824) /* ty=(Tensor[(11, 12, 9), float64], Tensor[(1188), float64], Tensor[(4, 3, 10), float64]) */
}

def @func_4607(%var_4605: Tensor[(11, 12, 9), float64]) -> (Tensor[(11, 12, 9), float64],) {
  @func_4604(%var_4605) /* ty=(Tensor[(11, 12, 9), float64],) */
}

def @func_5131(%var_5127: Tensor[(1, 2, 15), bool], %var_5128: Tensor[(9, 2, 15), bool], %var_5129: Tensor[(6, 144), uint64], %var_5130: Tensor[(1408), int16]) -> (Tensor[(9, 2, 15), bool], Tensor[(8, 11, 16), int16], Tensor[(6, 144), uint64], Tensor[(1408), int16], Tensor[(16, 10, 6), float64], Tensor[(60, 16), float64]) {
  @func_5125(%var_5127, %var_5128, %var_5129, %var_5130) /* ty=(Tensor[(9, 2, 15), bool], Tensor[(8, 11, 16), int16], Tensor[(6, 144), uint64], Tensor[(1408), int16], Tensor[(16, 10, 6), float64], Tensor[(60, 16), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 1, found 2

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

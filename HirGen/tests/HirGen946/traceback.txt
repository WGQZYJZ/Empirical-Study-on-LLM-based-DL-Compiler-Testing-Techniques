==========mod==========
#[version = "0.0.5"]
def @func_3168() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %0 = @func_2612() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1 = %0.1;
  %2 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%1, %2)
}

def @func_9543() -> (Tensor[(16, 2, 15), uint16], Tensor[(40, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %3 = @func_5222() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %4 = @func_3759() /* ty=(Tensor[(40, 12), float64],) */;
  %5 = @func_9331() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %6 = %3.1;
  %7 = %4.0;
  %8 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  %9 = %5.0;
  %10 = @func_9281() /* ty=Tensor[(16, 2, 15), bool] */;
  %11 = @func_2480() /* ty=Tensor[(3, 8, 13), float32] */;
  (%6, %7, %8, %9, %10, %11)
}

def @func_17395() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) {
  %12 = @func_2702() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %13 = @func_12665() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(39), uint8] */, dtype="uint8") /* ty=Tensor[(39), uint8] */;
  %15 = reshape(%14, newshape=[3, 13, 1]) /* ty=Tensor[(3, 13, 1), uint8] */;
  %16 = @func_8675(%15) /* ty=(Tensor[(3, 13, 1), bool],) */;
  %17 = %12.0;
  %18 = %13.0;
  %19 = %16.0;
  (%17, %18, %19, meta[relay.Constant][0] /* ty=Tensor[(39), uint8] */)
}

def @func_26760() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
  %20 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %21 = %20.0;
  %22 = @func_9281() /* ty=Tensor[(16, 2, 15), bool] */;
  (%21, %22)
}

def @func_19985() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  %23 = @func_12157() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) */;
  %24 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %25 = @func_15325() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %26 = %23.1;
  %27 = %24.0;
  %28 = @func_7265() /* ty=Tensor[(480), uint16] */;
  %29 = %25.0;
  (%26, %27, %28, %29)
}

def @func_24447(%var_24433: Tensor[(2, 5, 6), float32]) -> (Tensor[(2, 5, 6), float32], Tensor[(3, 8, 13), float32]) {
  %30 = cast(%var_24433, dtype="float32") /* ty=Tensor[(2, 5, 6), float32] */;
  %31 = @func_11060() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %32 = exp(%30) /* ty=Tensor[(2, 5, 6), float32] */;
  %33 = %31.0;
  (%32, %33)
}

def @func_15056() -> (Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32]) {
  %34 = @func_12077() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(16, 160), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %35 = @func_8162() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %36 = @func_1868() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %37 = @func_2875() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %38 = %34.2;
  %39 = %35.0;
  %40 = %36.1;
  %41 = %37.0;
  (%38, %39, %40, %41)
}

def @func_23480() -> Tensor[(3, 8, 13), float32] {
  %42 = @func_9105() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %42.3
}

def @func_14111(%var_14105: Tensor[(480, 4), uint16]) -> (Tensor[(3, 8, 13), int16], Tensor[(480, 4), int16]) {
  %43 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
  %44 = %43.2;
  %45 = cast(%44, dtype="int16") /* ty=Tensor[(480, 1), int16] */;
  %46 = cast(%var_14105, dtype="int16") /* ty=Tensor[(480, 4), int16] */;
  %47 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
  %48 = bitwise_or(%45, %46) /* ty=Tensor[(480, 4), int16] */;
  (%47, %48)
}

def @func_11381() -> (Tensor[(16, 2, 15), bool],) {
  %49 = @func_9691() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %50 = %49.0;
  (%50,)
}

def @func_6451() -> (Tensor[(16, 2, 15), bool],) {
  %51 = @func_3300() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %52 = %51.1;
  (%52,)
}

def @func_18986() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %53 = @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %54 = %53.0;
  %55 = @func_11905() /* ty=Tensor[(3, 8, 13), float32] */;
  (%54, %55)
}

def @func_20646() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %56 = @func_6958() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %57 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %58 = %56.1;
  %59 = %57.0;
  (%58, %59)
}

def @func_26574() -> (Tensor[(3, 8, 13), float32],) {
  %60 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
  (%60,)
}

def @func_8838() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) {
  %61 = @func_3300() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %62 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
  %63 = %61.1;
  (%62, %63)
}

def @func_11590() -> Tensor[(480), uint16] {
  %64 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %64.1
}

def @func_27269(%var_27251: Tensor[(9, 7, 2), float64], %var_27252: Tensor[(9, 7, 2), float64]) -> Tensor[(9, 7, 2), float64] {
  %65 = cast(%var_27252, dtype="float64") /* ty=Tensor[(9, 7, 2), float64] */;
  %66 = shape_of(%var_27251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%var_27251, dtype="float64") /* ty=Tensor[(9, 7, 2), float64] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%67, %68) /* ty=Tensor[(9, 7, 2), float64] */
}

def @func_14054() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %69 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %70 = @func_8989() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %71 = %69.0;
  %72 = %70.0;
  (%71, %72)
}

def @func_23422() -> Tensor[(3, 8, 13), float32] {
  %73 = @func_7643() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %73.1
}

def @func_14970(%var_14955: Tensor[(3, 1, 9), uint8], %var_14967: Tensor[(2160), float64]) -> (Tensor[(3, 4, 9), bool], Tensor[(16, 2, 15), bool], Tensor[(2160), float64], Tensor[(2160), float64]) {
  %74 = cast(%var_14955, dtype="bool") /* ty=Tensor[(3, 1, 9), bool] */;
  %75 = cast(meta[relay.Constant][1] /* ty=Tensor[(3, 4, 9), uint8] */, dtype="bool") /* ty=Tensor[(3, 4, 9), bool] */;
  %76 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %77 = cast(%var_14967, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %78 = reshape(%77, newshape=[2160]) /* ty=Tensor[(2160), float64] */;
  %79 = @func_8216(%78) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 15, 9), float64], Tensor[(2160), float64], Tensor[(16, 2, 15), uint16]) */;
  %80 = greater_equal(%74, %75) /* ty=Tensor[(3, 4, 9), bool] */;
  %81 = %76.1;
  %82 = %79.2;
  (%80, %81, %82, %var_14967)
}

def @func_5332() -> (Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) {
  %83 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %84 = %83.0;
  %85 = cast(%84, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %86 = reshape(%85, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %87 = @func_4533(%86) /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %88 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %89 = @func_2796() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */;
  %90 = %87.4;
  %91 = %88.0;
  %92 = %89.0;
  (%84, %90, %91, %92)
}

def @func_6117() -> (Tensor[(3, 8, 13), float32],) {
  %93 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %94 = %93.1;
  (%94,)
}

def @func_6274(%var_6229: Tensor[(945), float64]) -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], float64, Tensor[(945), float64]) {
  %95 = @func_4275() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) */;
  %96 = cast(7.4585f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %97 = cast(%var_6229, dtype="float64") /* ty=Tensor[(945), float64] */;
  %98 = reshape(%96, newshape=[]) /* ty=float64 */;
  %99 = reshape(%97, newshape=[7, 15, 9]) /* ty=Tensor[(7, 15, 9), float64] */;
  %100 = @func_5686(%98, %99) /* ty=(Tensor[(7, 15, 9), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %101 = %95.0;
  %102 = %100.1;
  (%101, %102, 7.4585f64 /* ty=float64 */, %var_6229)
}

def @func_28771(%var_28754: Tensor[(12, 8, 2), float64]) -> (Tensor[(12, 8, 2), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %103 = cast(%var_28754, dtype="float64") /* ty=Tensor[(12, 8, 2), float64] */;
  %104 = @func_28363() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %105 = sin(%103) /* ty=Tensor[(12, 8, 2), float64] */;
  %106 = %104.0;
  %107 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
  (%105, %106, %107)
}

def @func_7124(%var_7103: Tensor[(14, 1, 3), uint16], %var_7104: Tensor[(14, 15, 3), uint16], %var_7118: Tensor[(660), float64]) -> (Tensor[(14, 15, 3), uint16], Tensor[(11, 5, 12), float64], Tensor[(660), float64]) {
  %108 = cast(%var_7103, dtype="uint16") /* ty=Tensor[(14, 1, 3), uint16] */;
  %109 = cast(%var_7104, dtype="uint16") /* ty=Tensor[(14, 15, 3), uint16] */;
  %110 = cast(%var_7118, dtype="float64") /* ty=Tensor[(660), float64] */;
  %111 = cast(%var_7118, dtype="float64") /* ty=Tensor[(660), float64] */;
  %112 = reshape(%110, newshape=[11, 5, 12]) /* ty=Tensor[(11, 5, 12), float64] */;
  %113 = reshape(%111, newshape=[11, 5, 12]) /* ty=Tensor[(11, 5, 12), float64] */;
  %114 = @func_3475(%112, %113) /* ty=(Tensor[(11, 5, 12), float64],) */;
  %115 = maximum(%108, %109) /* ty=Tensor[(14, 15, 3), uint16] */;
  %116 = %114.0;
  (%115, %116, %var_7118)
}

def @func_24045(%var_24024: Tensor[(9, 1, 13), float32]) -> (Tensor[(9, ?, 13), bool],) {
  %117 = cast(%var_24024, dtype="float32") /* ty=Tensor[(9, 1, 13), float32] */;
  %118 = tan(%117) /* ty=Tensor[(9, 1, 13), float32] */;
  %119 = cast(%118, dtype="bool") /* ty=Tensor[(9, 1, 13), bool] */;
  %120 = shape_of(%var_24024, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%var_24024, dtype="bool") /* ty=Tensor[(9, 1, 13), bool] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %123 = greater(%121, %122) /* ty=Tensor[(9, ?, 13), bool] */;
  (%123,)
}

def @func_14467() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], float64, Tensor[(945), float64]) {
  %124 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %125 = @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %126 = cast(meta[relay.Constant][2] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %127 = reshape(%126, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %128 = @func_6274(%127) /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], float64, Tensor[(945), float64]) */;
  %129 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  %130 = @func_10078() /* ty=Tensor[(3, 8, 13), float32] */;
  %131 = %124.0;
  %132 = %125.0;
  %133 = %128.2;
  (%129, %130, %131, %132, %133, meta[relay.Constant][2] /* ty=Tensor[(945), float64] */)
}

def @func_13586() -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  %134 = @func_1868() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %135 = @func_6935() /* ty=(Tensor[(240), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %136 = %134.4;
  %137 = %135.3;
  (%136, %137)
}

def @func_24307() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(126), int16]) {
  %138 = @func_16751() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %139 = @func_24106() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %140 = cast(meta[relay.Constant][3] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %141 = cast(meta[relay.Constant][3] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %142 = reshape(%140, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %143 = reshape(%141, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %144 = @func_12881(%142, %143) /* ty=(Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %145 = %138.0;
  %146 = %139.0;
  %147 = %144.2;
  (%145, %146, %147, meta[relay.Constant][3] /* ty=Tensor[(126), int16] */)
}

def @func_10682() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %148 = @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %149 = @func_2875() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %150 = %148.1;
  %151 = %149.0;
  (%150, %151)
}

def @func_19624(%var_19616: Tensor[(360, 4), uint64]) -> (Tensor[(16, 2, 15), uint16], Tensor[(12, 15, 8), uint64], Tensor[(360, 4), uint64]) {
  %152 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %153 = cast(%var_19616, dtype="uint64") /* ty=Tensor[(360, 4), uint64] */;
  %154 = reshape(%153, newshape=[1440]) /* ty=Tensor[(1440), uint64] */;
  %155 = @func_10290(%154) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(1440), uint64], Tensor[(40, 12), float64]) */;
  %156 = %152.1;
  %157 = %155.1;
  (%156, %157, %var_19616)
}

def @func_26006(%var_25975: Tensor[(120), float32]) -> (Tensor[(8, 5, 3), float32], Tensor[(120), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(7, 6, 8), int32]) {
  %158 = cast(%var_25975, dtype="float32") /* ty=Tensor[(120), float32] */;
  %159 = reshape(%158, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), float32] */;
  %160 = @func_8780() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %161 = @func_6107() /* ty=(Tensor[(480), uint16],) */;
  %162 = @func_20384() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(7, 6, 8), uint16], uint16) */;
  %163 = %162.1;
  %164 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 6, 8), uint16] */, dtype="int32") /* ty=Tensor[(7, 6, 8), int32] */;
  %165 = shape_of(%163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%163, dtype="int32") /* ty=Tensor[(7, 6, 8), int32] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %168 = @func_15369(%159) /* ty=Tensor[(8, 5, 3), float32] */;
  %169 = %160.0;
  %170 = %161.0;
  %171 = subtract(%166, %167) /* ty=Tensor[(7, 6, 8), int32] */;
  (%168, %var_25975, %169, %170, %171)
}

def @func_2612() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %172 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %173 = %172.2;
  %174 = @func_2480() /* ty=Tensor[(3, 8, 13), float32] */;
  (%173, %174)
}

def @func_26812() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %175 = @func_17160() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %176 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %177 = @func_14992() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %178 = %175.1;
  %179 = %176.1;
  %180 = @func_4986() /* ty=Tensor[(16, 2, 15), bool] */;
  %181 = %177.1;
  (%178, %179, %180, %181)
}

def @func_29500() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %182 = @func_15325() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %183 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %184 = %182.0;
  %185 = %183.0;
  (%184, %185)
}

def @func_17495() -> (Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float32]) {
  %186 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %187 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %188 = @func_11590() /* ty=Tensor[(480), uint16] */;
  %189 = %186.0;
  %190 = %187.0;
  (%188, %189, %190)
}

def @func_3548() -> (Tensor[(16, 2, 15), float64],) {
  %191 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %192 = %191.0;
  %193 = cast(%192, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %194 = exp(%193) /* ty=Tensor[(16, 2, 15), float64] */;
  (%194,)
}

def @func_28647(%var_28638: Tensor[(35), uint8], %var_28639: Tensor[(280), uint8]) -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(35), uint8], Tensor[(280), uint8]) {
  %195 = @func_11381() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %196 = cast(%var_28638, dtype="uint8") /* ty=Tensor[(35), uint8] */;
  %197 = cast(%var_28639, dtype="uint8") /* ty=Tensor[(280), uint8] */;
  %198 = reshape(%196, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), uint8] */;
  %199 = reshape(%197, newshape=[7, 5, 8]) /* ty=Tensor[(7, 5, 8), uint8] */;
  %200 = @func_26884(%198, %199) /* ty=(Tensor[(7, 5, 8), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */;
  %201 = %195.0;
  %202 = %200.1;
  (%201, %202, %var_28638, %var_28639)
}

def @func_19681() -> Tensor[(16, 2, 15), float64] {
  %203 = @func_4107() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %203.0
}

def @func_20484() -> Tensor[(16, 2, 15), float32] {
  %204 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %204.0
}

def @func_7265() -> Tensor[(480), uint16] {
  %205 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %205.3
}

def @func_14145() -> Tensor[(16, 2, 15), uint16] {
  %206 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %206.0
}

def @func_21854() -> (Tensor[(16, 2, 15), uint32],) {
  %207 = @func_5174() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %208 = %207.0;
  %209 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %210 = %209.1;
  %211 = cast(%210, dtype="uint32") /* ty=Tensor[(16, 2, 15), uint32] */;
  %212 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%208, dtype="uint32") /* ty=Tensor[(16, 2, 15), uint32] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %215 = logical_xor(%213, %214) /* ty=Tensor[(16, 2, 15), uint32] */;
  (%215,)
}

def @func_25688() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) {
  %216 = @func_11443() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %217 = @func_10642() /* ty=Tensor[(16, 2, 15), float32] */;
  %218 = %216.1;
  (%217, %218)
}

def @func_12353() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %219 = @func_10530() /* ty=Tensor[(3, 8, 13), float32] */;
  %220 = @func_10855() /* ty=Tensor[(3, 8, 13), float32] */;
  %221 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %222 = @func_6367() /* ty=Tensor[(3, 8, 13), float32] */;
  (%219, %220, %221, %222)
}

def @func_19035() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %223 = @func_11852() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %224 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %225 = %223.0;
  %226 = %224.1;
  (%225, %226)
}

def @func_8989() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %227 = @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %228 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %229 = %227.1;
  %230 = %228.0;
  (%229, %230)
}

def @func_15938() -> (Tensor[(480), uint16],) {
  %231 = @func_7265() /* ty=Tensor[(480), uint16] */;
  (%231,)
}

def @func_23333() -> (Tensor[(3, 8, 13), float32],) {
  %232 = @func_20110() /* ty=Tensor[(3, 8, 13), float32] */;
  (%232,)
}

def @func_28841(%var_28814: Tensor[(10, 14, 3), float64]) -> (Tensor[(10, 14, 3), float64], Tensor[(3, 8, 13), float32], uint16, Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %233 = cast(%var_28814, dtype="float64") /* ty=Tensor[(10, 14, 3), float64] */;
  %234 = cast(meta[relay.Constant][5] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %235 = reshape(%234, newshape=[]) /* ty=uint16 */;
  %236 = @func_24127(%235) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], uint16) */;
  %237 = @func_27911() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %238 = @func_11060() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %239 = log10(%233) /* ty=Tensor[(10, 14, 3), float64] */;
  %240 = %236.1;
  %241 = %237.0;
  %242 = %238.0;
  (%239, %240, meta[relay.Constant][5] /* ty=uint16 */, %241, %242)
}

def @func_28213() -> (Tensor[(16, 2, 15), float32],) {
  %243 = @func_16893() /* ty=Tensor[(16, 2, 15), float32] */;
  (%243,)
}

def @func_12942() -> (Tensor[(16, 2, 15), int32],) {
  %244 = @func_8838() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %245 = %244.0;
  (%245,)
}

def @func_26387() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %246 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %247 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %248 = %246.0;
  %249 = %247.0;
  (%248, %249)
}

def @func_2914() -> (Tensor[(3, 8, 13), float32],) {
  %250 = @func_2480() /* ty=Tensor[(3, 8, 13), float32] */;
  (%250,)
}

def @func_18616() -> (Tensor[(480), uint16],) {
  %251 = @func_15938() /* ty=(Tensor[(480), uint16],) */;
  %252 = %251.0;
  (%252,)
}

def @func_18013() -> Tensor[(16, 2, 15), uint16] {
  %253 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %253.0
}

def @func_21662() -> (Tensor[(?, 10, 3), float64], Tensor[(3, 8, 13), float32]) {
  %254 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 3), float64] */;
  %255 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(1, 10, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(meta[relay.Constant][6] /* ty=Tensor[(1, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 3), float64] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %258 = @func_18147() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %259 = power(%256, %257) /* ty=Tensor[(?, 10, 3), float64] */;
  %260 = %258.0;
  (%259, %260)
}

def @func_29151() -> (Tensor[(3, 8, 13), float32],) {
  %261 = @func_14651() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %262 = %261.0;
  (%262,)
}

def @func_22622() -> (Tensor[(3, 8, 13), float32],) {
  %263 = @func_6958() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %264 = %263.1;
  (%264,)
}

def @func_13522() -> (Tensor[(3, 8, 13), float32],) {
  %265 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %266 = %265.2;
  (%266,)
}

def @func_2341() -> (Tensor[(3, 8, 13), float32],) {
  %267 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %268 = %267.1;
  (%268,)
}

def @func_9678() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
  %269 = @func_8780() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %270 = @func_5174() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %271 = %269.0;
  %272 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  %273 = %270.2;
  (%271, %272, %273)
}

def @func_12905(%var_12897: Tensor[(126), int16]) -> (Tensor[(16, 16, 10), float32], Tensor[(14, 3, 3), bool], Tensor[(126), int16]) {
  %274 = @func_12077() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(16, 160), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %275 = cast(%var_12897, dtype="int16") /* ty=Tensor[(126), int16] */;
  %276 = cast(%var_12897, dtype="int16") /* ty=Tensor[(126), int16] */;
  %277 = reshape(%275, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %278 = reshape(%276, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %279 = @func_12881(%277, %278) /* ty=(Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %280 = %274.2;
  %281 = %279.0;
  (%280, %281, %var_12897)
}

def @func_12999() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) {
  %282 = @func_10855() /* ty=Tensor[(3, 8, 13), float32] */;
  %283 = @func_10530() /* ty=Tensor[(3, 8, 13), float32] */;
  %284 = @func_8384() /* ty=Tensor[(3, 8, 13), int16] */;
  (%282, %283, %284)
}

def @func_14675() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) {
  %285 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %286 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %287 = @func_5222() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %288 = %285.1;
  %289 = %286.0;
  %290 = %287.1;
  (%288, %289, %290)
}

def @func_6191() -> (Tensor[(3, 8, 13), float32],) {
  %291 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %292 = %291.0;
  (%292,)
}

def @func_19313() -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  %293 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %294 = @func_12353() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %295 = %293.0;
  %296 = %294.1;
  (%295, %296)
}

def @func_11313() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %297 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %298 = @func_10792() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %299 = %297.0;
  %300 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
  %301 = %298.2;
  (%299, %300, %301)
}

def @func_19496() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %302 = @func_14229() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %303 = @func_18950() /* ty=Tensor[(3, 8, 13), float32] */;
  %304 = %302.0;
  (%303, %304)
}

def @func_23623() -> (Tensor[(16, 2, 15), float32],) {
  %305 = @func_2875() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %306 = %305.0;
  (%306,)
}

def @func_7182() -> Tensor[(16, 2, 15), float64] {
  %307 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %307.0
}

def @func_1918(%var_1878: Tensor[(10, 2, 12), float32]) -> (Tensor[(10, 2, 12), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %308 = cast(%var_1878, dtype="float32") /* ty=Tensor[(10, 2, 12), float32] */;
  %309 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %310 = @func_1276() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %311 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %312 = asinh(%308) /* ty=Tensor[(10, 2, 12), float32] */;
  %313 = %309.1;
  %314 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
  %315 = %310.0;
  %316 = %311.3;
  (%312, %313, %314, %315, %316)
}

def @func_22756(%var_22741: Tensor[(126), int16]) -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(126), int16]) {
  %317 = @func_13139() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %318 = cast(%var_22741, dtype="int16") /* ty=Tensor[(126), int16] */;
  %319 = reshape(%318, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %320 = @func_15412(%319) /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(126), int16]) */;
  %321 = %317.0;
  %322 = %320.0;
  (%321, %322, %var_22741)
}

def @func_6958() -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %323 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %324 = @func_5395() /* ty=Tensor[(16, 2, 15), float32] */;
  %325 = %323.0;
  (%324, %325)
}

def @func_11852() -> (Tensor[(3, 8, 13), float32],) {
  %326 = @func_5174() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %327 = %326.3;
  (%327,)
}

def @func_8357() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %328 = @func_3100() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %329 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %330 = %328.0;
  %331 = %329.1;
  (%330, %331)
}

def @func_13490() -> Tensor[(480), uint16] {
  @func_11590() /* ty=Tensor[(480), uint16] */
}

def @func_5395() -> Tensor[(16, 2, 15), float32] {
  @func_2029() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_23177() -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %332 = @func_18752() /* ty=Tensor[(3, 8, 13), int16] */;
  %333 = @func_21159() /* ty=Tensor[(3, 8, 13), float32] */;
  %334 = @func_2622() /* ty=Tensor[(16, 2, 15), float32] */;
  (%332, %333, %334)
}

def @func_853() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %335 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %336 = %335.0;
  %337 = cast(%336, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %338 = reshape(%337, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %339 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %340 = @func_254(%338) /* ty=Tensor[(16, 2, 15), uint16] */;
  %341 = %339.4;
  (%336, %340, %341)
}

def @func_2680() -> (Tensor[(16, 2, 15), bool],) {
  %342 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %343 = %342.0;
  (%343,)
}

def @func_2719() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %344 = @func_1868() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %345 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %346 = %344.1;
  %347 = %345.4;
  %348 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%346, %347, %348)
}

def @func_10792() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %349 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %350 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %351 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %352 = @func_8367() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */;
  %353 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  %354 = %349.0;
  %355 = %350.0;
  %356 = %351.0;
  %357 = %352.1;
  %358 = @func_3577() /* ty=Tensor[(3, 8, 13), float32] */;
  (%353, %354, %355, %356, %357, %358)
}

def @func_25771(%var_25735: Tensor[(10, 9, 5), uint16], %var_25746: Tensor[(7, 3), int8], %var_25747: Tensor[(189), int8]) -> (Tensor[(10, 9, 5), bool], Tensor[(189), int8], Tensor[(7, 3), int8], Tensor[(189), int8], Tensor[(16, 2, 15), float32]) {
  %359 = cast(meta[relay.Constant][8] /* ty=Tensor[(10, 9, 5), uint16] */, dtype="bool") /* ty=Tensor[(10, 9, 5), bool] */;
  %360 = shape_of(%var_25735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%var_25735, dtype="bool") /* ty=Tensor[(10, 9, 5), bool] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %363 = cast(%var_25746, dtype="int8") /* ty=Tensor[(7, 3), int8] */;
  %364 = cast(%var_25747, dtype="int8") /* ty=Tensor[(189), int8] */;
  %365 = reshape(%363, newshape=[21]) /* ty=Tensor[(21), int8] */;
  %366 = reshape(%364, newshape=[189]) /* ty=Tensor[(189), int8] */;
  %367 = @func_24379(%365, %366) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 7, 9), bool], Tensor[(21), int8], Tensor[(189), int8]) */;
  %368 = @func_18557() /* ty=(Tensor[(16, 2, 15), uint16], float64, Tensor[(16, 2, 15), float32]) */;
  %369 = greater(%361, %362) /* ty=Tensor[(10, 9, 5), bool] */;
  %370 = %367.3;
  %371 = %368.2;
  (%369, %370, %var_25746, %var_25747, %371)
}

def @func_14945(%var_14940: Tensor[(2560), float32]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 16, 10), float32], Tensor[(2560), float32]) {
  %372 = @func_10028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */;
  %373 = cast(%var_14940, dtype="float32") /* ty=Tensor[(2560), float32] */;
  %374 = reshape(%373, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), float32] */;
  %375 = @func_8566(%374) /* ty=(Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32]) */;
  %376 = %372.0;
  %377 = %375.0;
  (%376, %377, %var_14940)
}

def @func_11179() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %378 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %379 = @func_6191() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %380 = @func_7224() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %381 = %378.4;
  %382 = %379.0;
  %383 = %380.1;
  (%381, %382, %383)
}

def @func_20147() -> Tensor[(3, 8, 13), float32] {
  %384 = @func_8780() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %384.0
}

def @func_20954(%var_20948: uint32, %var_20949: Tensor[(15, 2, 3), uint32]) -> (Tensor[(15, 2, 3), bool],) {
  %385 = cast(%var_20948, dtype="bool") /* ty=bool */;
  %386 = cast(%var_20949, dtype="bool") /* ty=Tensor[(15, 2, 3), bool] */;
  %387 = greater(%385, %386) /* ty=Tensor[(15, 2, 3), bool] */;
  (%387,)
}

def @func_2875() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %388 = @func_2622() /* ty=Tensor[(16, 2, 15), float32] */;
  %389 = cast(%388, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
  %390 = @func_2796() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */;
  %391 = sqrt(%389) /* ty=Tensor[(16, 2, 15), float32] */;
  %392 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  %393 = %390.1;
  (%391, %392, %393)
}

def @func_17804() -> Tensor[(39), uint8] {
  %394 = @func_17395() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) */;
  %394.3
}

def @func_8780() -> (Tensor[(3, 8, 13), float32],) {
  %395 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  (%395,)
}

def @func_20057() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) {
  %396 = @func_15938() /* ty=(Tensor[(480), uint16],) */;
  %397 = @func_2622() /* ty=Tensor[(16, 2, 15), float32] */;
  %398 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  %399 = %396.0;
  (%397, %398, %399)
}

def @func_11714() -> (Tensor[(3, 8, 13), float32],) {
  %400 = @func_8404() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32]) */;
  %401 = %400.0;
  (%401,)
}

def @func_16091() -> Tensor[(16, 2, 15), int32] {
  %402 = @func_12157() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) */;
  %402.1
}

def @func_2964(%var_2937: Tensor[(480, 2), uint16], %var_2962: Tensor[(24, 10), float32]) -> (Tensor[(3, 8, 13), float32], Tensor[(480, 2), float64], Tensor[(480, 2), int64], Tensor[(16, 2, 15), bool], Tensor[(480, 1), float64], Tensor[(3, 8, 13), int16], Tensor[(24, 10), float32]) {
  %403 = @func_2914() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %404 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
  %405 = %404.2;
  %406 = cast(%405, dtype="float64") /* ty=Tensor[(480, 1), float64] */;
  %407 = cast(%var_2937, dtype="float64") /* ty=Tensor[(480, 2), float64] */;
  %408 = cast(%405, dtype="int64") /* ty=Tensor[(480, 1), int64] */;
  %409 = cast(%var_2937, dtype="int64") /* ty=Tensor[(480, 2), int64] */;
  %410 = @func_2719() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %411 = cast(%405, dtype="float64") /* ty=Tensor[(480, 1), float64] */;
  %412 = cast(%var_2962, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
  %413 = reshape(%412, newshape=[10, 2, 12]) /* ty=Tensor[(10, 2, 12), float32] */;
  %414 = @func_1918(%413) /* ty=(Tensor[(10, 2, 12), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %415 = %403.0;
  %416 = floor_mod(%406, %407) /* ty=Tensor[(480, 2), float64] */;
  %417 = minimum(%408, %409) /* ty=Tensor[(480, 2), int64] */;
  %418 = %410.0;
  %419 = sin(%411) /* ty=Tensor[(480, 1), float64] */;
  %420 = %414.2;
  (%415, %416, %417, %418, %419, %420, %var_2962)
}

def @func_21874() -> Tensor[(3, 8, 13), float32] {
  %421 = @func_19035() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %421.1
}

def @func_25306() -> (Tensor[(3, 8, 13), float32],) {
  %422 = @func_18597() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %423 = %422.0;
  (%423,)
}

def @func_25954() -> (Tensor[(16, 2, 15), uint16],) {
  %424 = @func_8307() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%424,)
}

def @func_9281() -> Tensor[(16, 2, 15), bool] {
  %425 = @func_2702() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %425.0
}

def @func_18950() -> Tensor[(3, 8, 13), float32] {
  @func_10855() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_4986() -> Tensor[(16, 2, 15), bool] {
  %426 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %426.0
}

def @func_10596() -> (Tensor[(40, 12), float64], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %427 = @func_5019() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
  %428 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %429 = @func_2341() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %430 = %427.1;
  %431 = %428.0;
  %432 = %429.0;
  (%430, %431, %432)
}

def @func_15228() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(960, 2), uint16]) {
  %433 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %434 = cast(meta[relay.Constant][9] /* ty=Tensor[(960, 2), uint16] */, dtype="uint16") /* ty=Tensor[(960, 2), uint16] */;
  %435 = reshape(%434, newshape=[480, 4]) /* ty=Tensor[(480, 4), uint16] */;
  %436 = @func_14111(%435) /* ty=(Tensor[(3, 8, 13), int16], Tensor[(480, 4), int16]) */;
  %437 = %433.2;
  %438 = %436.0;
  (%437, %438, meta[relay.Constant][9] /* ty=Tensor[(960, 2), uint16] */)
}

def @func_8879() -> (Tensor[(40, 12), uint16],) {
  %439 = @func_1276() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %440 = %439.1;
  (%440,)
}

def @func_24017() -> Tensor[(16, 2, 15), bool] {
  %441 = @func_18384() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %441.0
}

def @func_8566(%var_8561: Tensor[(16, 16, 10), float32]) -> (Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32]) {
  %442 = cast(%var_8561, dtype="float32") /* ty=Tensor[(16, 16, 10), float32] */;
  %443 = @func_2914() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %444 = sin(%442) /* ty=Tensor[(16, 16, 10), float32] */;
  %445 = %443.0;
  (%444, %445)
}

def @func_25895() -> (Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) {
  %446 = @func_21952() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %447 = @func_5019() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
  %448 = %446.0;
  %449 = %447.1;
  (%448, %449)
}

def @func_1116(%var_1113: Tensor[(480), uint16]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(480), uint16]) {
  %450 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %451 = cast(%var_1113, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %452 = cast(%var_1113, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %453 = reshape(%451, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %454 = reshape(%452, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %455 = @func_629(%453, %454) /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %456 = %450.2;
  %457 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %458 = %455.0;
  (%456, %457, %458, %var_1113)
}

def @func_914() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %459 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %460 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %461 = %459.0;
  %462 = cast(%461, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %463 = cast(%461, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %464 = reshape(%462, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %465 = reshape(%463, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %466 = @func_629(%464, %465) /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %467 = %460.0;
  %468 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %469 = %466.4;
  (%461, %467, %468, %469)
}

def @func_11948() -> Tensor[(480), uint16] {
  %470 = @func_6935() /* ty=(Tensor[(240), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %470.4
}

def @func_2573(%var_2541: Tensor[(3, 2, 11), uint64], %var_2561: Tensor[(3, 2, 11), uint64]) -> (Tensor[(3, 2, 11), bool],) {
  %471 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 2, 11), uint64] */, dtype="uint64") /* ty=Tensor[(3, 2, 11), uint64] */;
  %472 = shape_of(%var_2541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%var_2541, dtype="uint64") /* ty=Tensor[(3, 2, 11), uint64] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %475 = bitwise_or(%473, %474) /* ty=Tensor[(3, 2, 11), uint64] */;
  %476 = cast(%var_2561, dtype="bool") /* ty=Tensor[(3, 2, 11), bool] */;
  %477 = shape_of(%475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%475, dtype="bool") /* ty=Tensor[(3, 2, 11), bool] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %480 = greater_equal(%478, %479) /* ty=Tensor[(3, 2, 11), bool] */;
  (%480,)
}

def @func_24955() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %481 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %482 = %481.2;
  %483 = @func_3681() /* ty=Tensor[(16, 2, 15), float32] */;
  (%482, %483)
}

def @func_15412(%var_15384: Tensor[(126), int16]) -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(126), int16]) {
  %484 = @func_10498() /* ty=(Tensor[(480), uint16],) */;
  %485 = cast(%var_15384, dtype="int16") /* ty=Tensor[(126), int16] */;
  %486 = cast(%var_15384, dtype="int16") /* ty=Tensor[(126), int16] */;
  %487 = reshape(%485, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %488 = reshape(%486, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %489 = @func_12881(%487, %488) /* ty=(Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %490 = %484.0;
  %491 = %489.4;
  (%490, %491, %var_15384)
}

def @func_2471() -> (Tensor[(3, 8, 13), float32],) {
  %492 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %493 = %492.0;
  (%493,)
}

def @func_5757(%var_5696: Tensor[(6, 16, 10), float64]) -> (Tensor[(6, 16, 10), float64], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) {
  %494 = cast(%var_5696, dtype="float64") /* ty=Tensor[(6, 16, 10), float64] */;
  %495 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %496 = %495.1;
  %497 = cast(%496, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %498 = cast(%496, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %499 = reshape(%497, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %500 = reshape(%498, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %501 = @func_629(%499, %500) /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %502 = acos(%494) /* ty=Tensor[(6, 16, 10), float64] */;
  %503 = @func_2480() /* ty=Tensor[(3, 8, 13), float32] */;
  %504 = %501.4;
  (%502, %503, %496, %504)
}

def @func_26064() -> (Tensor[(16, 2, 15), int32],) {
  %505 = @func_25603() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16]) */;
  %506 = %505.1;
  (%506,)
}

def @func_7643() -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %507 = @func_7412() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), float32]) */;
  %508 = @func_5455() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %509 = %507.1;
  %510 = %508.0;
  (%509, %510)
}

def @func_23088() -> Tensor[(16, 2, 15), uint16] {
  %511 = @func_8128() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %511.0
}

def @func_23996() -> (Tensor[(3, 8, 13), float32],) {
  %512 = @func_21474() /* ty=Tensor[(3, 8, 13), float32] */;
  (%512,)
}

def @func_25603() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16]) {
  %513 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %514 = @func_20361() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %515 = %513.0;
  %516 = @func_4162() /* ty=Tensor[(16, 2, 15), int32] */;
  %517 = %514.2;
  (%515, %516, %517)
}

def @func_26488() -> Tensor[(3, 8, 13), float32] {
  %518 = @func_7462() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %518.1
}

def @func_11623() -> Tensor[(16, 2, 15), uint16] {
  %519 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %519.0
}

def @func_755() -> (Tensor[(16, 2, 15), uint16],) {
  %520 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %521 = %520.1;
  (%521,)
}

def @func_28290() -> (Tensor[(3, 8, 13), float32],) {
  %522 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %523 = %522.2;
  (%523,)
}

def @func_14247() -> (Tensor[(480), uint16],) {
  %524 = @func_11948() /* ty=Tensor[(480), uint16] */;
  (%524,)
}

def @func_3802() -> (Tensor[(480), uint16],) {
  %525 = @func_2425() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %526 = %525.2;
  (%526,)
}

def @func_10957(%var_10910: Tensor[(1, 2288), int16]) -> (Tensor[(40, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(176), int16], Tensor[(1, 2288), int16]) {
  %527 = @func_3759() /* ty=(Tensor[(40, 12), float64],) */;
  %528 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
  %529 = cast(meta[relay.Constant][11] /* ty=Tensor[(176), int16] */, dtype="int16") /* ty=Tensor[(176), int16] */;
  %530 = cast(%var_10910, dtype="int16") /* ty=Tensor[(1, 2288), int16] */;
  %531 = reshape(%529, newshape=[11, 16, 1]) /* ty=Tensor[(11, 16, 1), int16] */;
  %532 = reshape(%530, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), int16] */;
  %533 = @func_6318(%531, %532) /* ty=(Tensor[(11, 16, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(8, 60), uint16], Tensor[(3, 8, 13), float32]) */;
  %534 = %527.0;
  %535 = %528.0;
  %536 = %533.3;
  (%534, %535, %536, meta[relay.Constant][11] /* ty=Tensor[(176), int16] */, %var_10910)
}

def @func_2425() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) {
  %537 = cast(meta[relay.Constant][12] /* ty=Tensor[(480), uint16] */, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %538 = reshape(%537, newshape=[480, 1]) /* ty=Tensor[(480, 1), uint16] */;
  %539 = @func_1238(%538) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32], Tensor[(16, 2, 15), uint16]) */;
  %540 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %541 = %539.1;
  (%540, %541, meta[relay.Constant][12] /* ty=Tensor[(480), uint16] */)
}

def @func_4051() -> (Tensor[(3, 8, 13), float32],) {
  %542 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
  (%542,)
}

def @func_22637() -> Tensor[(16, 2, 15), float32] {
  %543 = @func_15056() /* ty=(Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32]) */;
  %543.3
}

def @func_6107() -> (Tensor[(480), uint16],) {
  %544 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %545 = %544.0;
  (%545,)
}

def @func_10028() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) {
  %546 = @func_9105() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %547 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %548 = @func_8256() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32]) */;
  %549 = @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %550 = @func_2029() /* ty=Tensor[(16, 2, 15), float32] */;
  %551 = cast(%550, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %552 = reshape(%551, newshape=[480, 1]) /* ty=Tensor[(480, 1), uint16] */;
  %553 = @func_1238(%552) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32], Tensor[(16, 2, 15), uint16]) */;
  %554 = %546.3;
  %555 = %547.3;
  %556 = @func_4162() /* ty=Tensor[(16, 2, 15), int32] */;
  %557 = %548.1;
  %558 = %549.0;
  %559 = %553.4;
  (%554, %555, %556, %557, %550, %558, %559)
}

def @func_27284() -> (Tensor[(3, 8, 13), float32], Tensor[(16), int64], Tensor[(112), int64]) {
  %560 = @func_12360() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %561 = cast(meta[relay.Constant][13] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %562 = reshape(%561, newshape=[112, 1]) /* ty=Tensor[(112, 1), int64] */;
  %563 = @func_13434(%562) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(16), int64], Tensor[(112, 1), int64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %564 = %560.0;
  %565 = %563.4;
  (%564, %565, meta[relay.Constant][13] /* ty=Tensor[(112), int64] */)
}

def @func_10319(%var_10316: float64) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], float64, Tensor[(945), float64]) {
  %566 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %567 = cast(%var_10316, dtype="float64") /* ty=float64 */;
  %568 = cast(meta[relay.Constant][14] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %569 = reshape(%567, newshape=[]) /* ty=float64 */;
  %570 = reshape(%568, newshape=[7, 15, 9]) /* ty=Tensor[(7, 15, 9), float64] */;
  %571 = @func_5686(%569, %570) /* ty=(Tensor[(7, 15, 9), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %572 = %566.2;
  %573 = %571.2;
  (%572, %573, %var_10316, meta[relay.Constant][14] /* ty=Tensor[(945), float64] */)
}

def @func_11416(%var_11397: uint32, %var_11398: Tensor[(14, 16, 16), uint32]) -> (Tensor[(14, 16, 16), uint32],) {
  %574 = cast(%var_11397, dtype="uint32") /* ty=uint32 */;
  %575 = cast(%var_11398, dtype="uint32") /* ty=Tensor[(14, 16, 16), uint32] */;
  %576 = minimum(%574, %575) /* ty=Tensor[(14, 16, 16), uint32] */;
  (%576,)
}

def @func_26197() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %577 = @func_25351() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %578 = @func_1453() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %579 = @func_11179() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %580 = @func_23986() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %581 = %577.1;
  %582 = %578.3;
  %583 = %579.1;
  %584 = %580.0;
  (%581, %582, %583, %584)
}

def @func_26441() -> Tensor[(16, 2, 15), float32] {
  %585 = @func_12505() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %585.1
}

def @func_12077() -> (Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(16, 160), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %586 = @func_10498() /* ty=(Tensor[(480), uint16],) */;
  %587 = @func_7345() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %588 = cast(meta[relay.Constant][15] /* ty=Tensor[(16, 160), float32] */, dtype="float32") /* ty=Tensor[(16, 160), float32] */;
  %589 = reshape(%588, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), float32] */;
  %590 = @func_8566(%589) /* ty=(Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32]) */;
  %591 = @func_5211() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %592 = %586.0;
  %593 = %587.0;
  %594 = %590.0;
  %595 = @func_11905() /* ty=Tensor[(3, 8, 13), float32] */;
  %596 = %591.0;
  %597 = @func_11623() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%592, %593, %594, meta[relay.Constant][15] /* ty=Tensor[(16, 160), float32] */, %595, %596, %597)
}

def @func_13943() -> (Tensor[(16, 2, 15), float32], Tensor[(480), uint16]) {
  %598 = @func_5395() /* ty=Tensor[(16, 2, 15), float32] */;
  %599 = @func_7265() /* ty=Tensor[(480), uint16] */;
  (%598, %599)
}

def @func_8675(%var_8660: Tensor[(3, 13, 1), uint8]) -> (Tensor[(3, 13, 1), bool],) {
  %600 = cast(meta[relay.Constant][16] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %601 = cast(%var_8660, dtype="bool") /* ty=Tensor[(3, 13, 1), bool] */;
  %602 = less_equal(%600, %601) /* ty=Tensor[(3, 13, 1), bool] */;
  (%602,)
}

def @func_25487() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) {
  %603 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %604 = %603.0;
  %605 = @func_16091() /* ty=Tensor[(16, 2, 15), int32] */;
  (%604, %605)
}

def @func_23100() -> Tensor[(3, 8, 13), float32] {
  %606 = @func_18507() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %606.0
}

def @func_26752() -> (Tensor[(16, 2, 15), uint16],) {
  %607 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %608 = %607.0;
  (%608,)
}

def @func_25665(%var_25658: Tensor[(13, 1, 4), float64]) -> Tensor[(13, 1, 4), bool] {
  %609 = cast(-3.58082f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %610 = cast(%var_25658, dtype="float64") /* ty=Tensor[(13, 1, 4), float64] */;
  %611 = mod(%609, %610) /* ty=Tensor[(13, 1, 4), float64] */;
  %612 = cast(-3.58082f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %613 = cast(%611, dtype="bool") /* ty=Tensor[(13, 1, 4), bool] */;
  greater(%612, %613) /* ty=Tensor[(13, 1, 4), bool] */
}

def @func_24106() -> (Tensor[(3, 8, 13), float32],) {
  %614 = @func_7462() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %615 = %614.0;
  (%615,)
}

def @func_24379(%var_24370: Tensor[(21), int8], %var_24371: Tensor[(189), int8]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 7, 9), bool], Tensor[(21), int8], Tensor[(189), int8]) {
  %616 = @func_21594() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %617 = cast(%var_24370, dtype="int8") /* ty=Tensor[(21), int8] */;
  %618 = cast(%var_24371, dtype="int8") /* ty=Tensor[(189), int8] */;
  %619 = reshape(%617, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), int8] */;
  %620 = reshape(%618, newshape=[3, 7, 9]) /* ty=Tensor[(3, 7, 9), int8] */;
  %621 = %616.0;
  %622 = @func_4181(%619, %620) /* ty=Tensor[(3, 7, 9), bool] */;
  (%621, %622, %var_24370, %var_24371)
}

def @func_6672() -> Tensor[(16, 2, 15), float32] {
  @func_5395() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_629(%var_559: Tensor[(480), uint16], %var_608: Tensor[(16, 2, 15), uint16]) -> (Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %623 = cast(%var_559, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %624 = reshape(%623, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %625 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %626 = cast(%625, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  %627 = atan(%626) /* ty=Tensor[(3, 8, 13), float32] */;
  %628 = cast(%627, dtype="float64") /* ty=Tensor[(3, 8, 13), float64] */;
  %629 = cast(%var_559, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %630 = reshape(%629, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %631 = @func_254(%630) /* ty=Tensor[(16, 2, 15), uint16] */;
  %632 = cast(%var_608, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(3), int32] */;
  %634 = cast(%631, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %636 = @func_254(%624) /* ty=Tensor[(16, 2, 15), uint16] */;
  %637 = cast(%636, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %638 = reshape(%637, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %639 = asin(%628) /* ty=Tensor[(3, 8, 13), float64] */;
  %640 = divide(%634, %635) /* ty=Tensor[(16, 2, 15), float64] */;
  %641 = @func_254(%638) /* ty=Tensor[(16, 2, 15), uint16] */;
  %642 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  (%var_559, %636, %639, %640, %641, %642)
}

def @func_3925() -> Tensor[(16, 2, 15), int32] {
  %643 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %643.1
}

def @func_15369(%var_15361: Tensor[(8, 5, 3), float32]) -> Tensor[(8, 5, 3), float32] {
  %644 = cast(%var_15361, dtype="float32") /* ty=Tensor[(8, 5, 3), float32] */;
  rsqrt(%644) /* ty=Tensor[(8, 5, 3), float32] */
}

def @func_18384() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %645 = @func_5828() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %646 = @func_8256() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32]) */;
  %647 = %645.0;
  %648 = %646.0;
  %649 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
  (%647, %648, %649)
}

def @func_1276() -> (Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) {
  %650 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %651 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %652 = %650.1;
  %653 = %651.2;
  (%652, %653)
}

def @func_24284() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %654 = @func_19035() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %655 = @func_21594() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %656 = %654.0;
  %657 = %655.0;
  (%656, %657)
}

def @func_20228() -> Tensor[(3, 8, 13), float32] {
  %658 = @func_3100() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %658.0
}

def @func_8620() -> (Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32]) {
  %659 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %660 = @func_3100() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %661 = %659.0;
  %662 = %660.0;
  (%661, %662)
}

def @func_6535() -> (Tensor[(16, 2, 15), uint16],) {
  %663 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %664 = %663.0;
  (%664,)
}

def @func_20535() -> (Tensor[(16, 2, 15), int32],) {
  %665 = @func_13186() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), int16]) */;
  %666 = %665.0;
  (%666,)
}

def @func_21952() -> (Tensor[(3, 8, 13), float32],) {
  %667 = @func_14593() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %668 = %667.0;
  (%668,)
}

def @func_7733() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) {
  %669 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %670 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %671 = @func_2702() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %672 = @func_5121() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %673 = %669.0;
  %674 = %670.0;
  %675 = %671.0;
  %676 = %672.0;
  (%673, %674, %675, %676)
}

def @func_4533(%var_4505: Tensor[(480), uint16]) -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %677 = cast(%var_4505, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %678 = reshape(%677, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %679 = @func_1116(%678) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(480), uint16]) */;
  %680 = @func_2612() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %681 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %682 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
  %683 = %679.0;
  %684 = %680.0;
  %685 = %681.0;
  (%682, %683, %var_4505, %684, %685)
}

def @func_25151() -> (Tensor[(16, 2, 15), float32],) {
  %686 = @func_10740() /* ty=Tensor[(16, 2, 15), float32] */;
  (%686,)
}

def @func_4162() -> Tensor[(16, 2, 15), int32] {
  @func_3925() /* ty=Tensor[(16, 2, 15), int32] */
}

def @func_7224() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  %687 = @func_1868() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %688 = %687.0;
  %689 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  %690 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%688, %689, %690)
}

def @func_25961() -> Tensor[(3, 8, 13), float32] {
  @func_21474() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_27079() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  %691 = @func_6117() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %692 = %691.0;
  %693 = @func_24017() /* ty=Tensor[(16, 2, 15), bool] */;
  (%692, %693)
}

def @func_16041(%var_15998: Tensor[(13, 7, 10), float64]) -> (Tensor[(13, 7, 10), float64],) {
  %694 = cast(%var_15998, dtype="float64") /* ty=Tensor[(13, 7, 10), float64] */;
  %695 = rsqrt(%694) /* ty=Tensor[(13, 7, 10), float64] */;
  %696 = cast(%var_15998, dtype="float64") /* ty=Tensor[(13, 7, 10), float64] */;
  %697 = shape_of(%695, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(%695, dtype="float64") /* ty=Tensor[(13, 7, 10), float64] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %700 = divide(%698, %699) /* ty=Tensor[(13, 7, 10), float64] */;
  (%700,)
}

def @func_3522(%var_3510: Tensor[(2, 11, 14), uint8], %var_3511: Tensor[(2, 11, 14), uint8]) -> (Tensor[(2, 11, 14), bool],) {
  %701 = cast(%var_3511, dtype="bool") /* ty=Tensor[(2, 11, 14), bool] */;
  %702 = shape_of(%var_3510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %703 = cast(%var_3510, dtype="bool") /* ty=Tensor[(2, 11, 14), bool] */;
  %704 = dyn.reshape(%701, %702, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %705 = less_equal(%703, %704) /* ty=Tensor[(2, 11, 14), bool] */;
  (%705,)
}

def @func_8452() -> Tensor[(16, 2, 15), float32] {
  @func_2029() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_26251(%var_26239: Tensor[(20, 72), uint64]) -> (Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(20, 72), uint64]) {
  %706 = cast(%var_26239, dtype="uint64") /* ty=Tensor[(20, 72), uint64] */;
  %707 = reshape(%706, newshape=[360, 4]) /* ty=Tensor[(360, 4), uint64] */;
  %708 = @func_19624(%707) /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(12, 15, 8), uint64], Tensor[(360, 4), uint64]) */;
  %709 = @func_10855() /* ty=Tensor[(3, 8, 13), float32] */;
  %710 = %708.1;
  (%709, %710, %var_26239)
}

def @func_21453() -> (Tensor[(480), uint16], Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %711 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %712 = @func_11714() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %713 = %711.0;
  %714 = @func_11590() /* ty=Tensor[(480), uint16] */;
  %715 = @func_20484() /* ty=Tensor[(16, 2, 15), float32] */;
  %716 = %712.0;
  (%713, %714, %715, %716)
}

def @func_20707() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(960), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
  %717 = @func_17395() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) */;
  %718 = cast(meta[relay.Constant][17] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %719 = reshape(%718, newshape=[6, 16, 10]) /* ty=Tensor[(6, 16, 10), float64] */;
  %720 = @func_5757(%719) /* ty=(Tensor[(6, 16, 10), float64], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) */;
  %721 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %722 = @func_11443() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %723 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %724 = @func_5174() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %725 = %717.1;
  %726 = %720.1;
  %727 = %721.1;
  %728 = %722.1;
  %729 = %723.0;
  %730 = %724.2;
  (%725, %726, meta[relay.Constant][17] /* ty=Tensor[(960), float64] */, %727, %728, %729, %730)
}

def @func_28862(%var_28855: Tensor[(1, 4, 3), float64]) -> Tensor[(1, 4, 3), float64] {
  %731 = cast(%var_28855, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
  log10(%731) /* ty=Tensor[(1, 4, 3), float64] */
}

def @func_11262() -> Tensor[(16, 2, 15), uint16] {
  @func_8307() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_7823() -> Tensor[(3, 8, 13), float32] {
  @func_3577() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_8162() -> (Tensor[(3, 8, 13), float32],) {
  %732 = @func_7643() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %733 = %732.1;
  (%733,)
}

def @func_15247() -> Tensor[(16, 2, 15), uint16] {
  %734 = @func_4960() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), int16]) */;
  %734.0
}

def @func_12414() -> (Tensor[(3, 8, 13), float32],) {
  %735 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %736 = %735.0;
  (%736,)
}

def @func_11613() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  %737 = @func_7969() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %738 = @func_10190() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) */;
  %739 = %737.1;
  %740 = %738.1;
  (%739, %740)
}

def @func_13225() -> (Tensor[(3, 8, 13), float32],) {
  %741 = @func_5491() /* ty=Tensor[(3, 8, 13), float32] */;
  (%741,)
}

def @func_12173() -> Tensor[(16, 2, 15), bool] {
  %742 = @func_10596() /* ty=(Tensor[(40, 12), float64], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %742.1
}

def @func_10855() -> Tensor[(3, 8, 13), float32] {
  %743 = @func_6935() /* ty=(Tensor[(240), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %743.3
}

def @func_7412() -> (Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), float32]) {
  %744 = @func_3666() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32]) */;
  %745 = %744.0;
  %746 = @func_6672() /* ty=Tensor[(16, 2, 15), float32] */;
  (%745, %746)
}

def @func_28720() -> Tensor[(16, 2, 15), bool] {
  @func_24017() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_20223() -> (Tensor[(3, 8, 13), int16],) {
  %747 = @func_3666() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32]) */;
  %748 = %747.0;
  (%748,)
}

def @func_18277() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %749 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %750 = @func_11905() /* ty=Tensor[(3, 8, 13), float32] */;
  %751 = %749.2;
  %752 = @func_14345() /* ty=Tensor[(3, 8, 13), float32] */;
  (%750, %751, %752)
}

def @func_22981() -> Tensor[(480), uint16] {
  %753 = @func_20729() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %753.1
}

def @func_1005() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %754 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %755 = cast(meta[relay.Constant][18] /* ty=Tensor[(40, 12), uint16] */, dtype="uint16") /* ty=Tensor[(40, 12), uint16] */;
  %756 = reshape(%755, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %757 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %758 = %757.1;
  %759 = cast(meta[relay.Constant][18] /* ty=Tensor[(40, 12), uint16] */, dtype="int32") /* ty=Tensor[(40, 12), int32] */;
  %760 = shape_of(%758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%758, dtype="int32") /* ty=Tensor[(16, 2, 15), int32] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %763 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %764 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %765 = %754.2;
  %766 = @func_254(%756) /* ty=Tensor[(16, 2, 15), uint16] */;
  %767 = subtract(%761, %762) /* ty=Tensor[(16, 2, 15), int32] */;
  %768 = %763.1;
  %769 = %764.2;
  (%765, %766, %767, %768, %769)
}

def @func_19794() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %770 = @func_15961() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %771 = @func_16184() /* ty=Tensor[(3, 8, 13), float32] */;
  %772 = %770.1;
  (%771, %772)
}

def @func_2132() -> (Tensor[(16, 2, 15), uint16],) {
  %773 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %774 = %773.0;
  (%774,)
}

def @func_21727() -> Tensor[(3, 8, 13), float32] {
  %775 = @func_7462() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %775.0
}

def @func_25206() -> (Tensor[(3, 8, 13), float32],) {
  %776 = @func_19794() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %777 = %776.0;
  (%777,)
}

def @func_26690(%var_26660: Tensor[(40, 12), float32]) -> (Tensor[(40, 12), bool], Tensor[(3, 8, 13), float32], Tensor[(40, 12), float32], Tensor[(16, 2, 15), bool]) {
  %778 = @func_5332() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) */;
  %779 = %778.3;
  %780 = cast(%779, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %781 = log2(%780) /* ty=Tensor[(40, 12), float32] */;
  %782 = cast(%var_26660, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
  %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(2), int32] */;
  %784 = cast(%781, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %786 = cast(%781, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %787 = logical_and(%784, %785) /* ty=Tensor[(40, 12), bool] */;
  %788 = @func_18209() /* ty=Tensor[(3, 8, 13), float32] */;
  %789 = atan(%786) /* ty=Tensor[(40, 12), float32] */;
  %790 = @func_20613() /* ty=Tensor[(16, 2, 15), bool] */;
  (%787, %788, %789, %790)
}

def @func_20820() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(126), int16]) {
  %791 = @func_10682() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %792 = cast(meta[relay.Constant][19] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %793 = cast(meta[relay.Constant][19] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %794 = reshape(%792, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %795 = reshape(%793, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %796 = @func_12881(%794, %795) /* ty=(Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %797 = %791.0;
  %798 = %796.4;
  (%797, %798, meta[relay.Constant][19] /* ty=Tensor[(126), int16] */)
}

def @func_27417() -> (Tensor[(16, 2, 15), uint32],) {
  %799 = @func_21854() /* ty=(Tensor[(16, 2, 15), uint32],) */;
  %800 = %799.0;
  (%800,)
}

def @func_28548() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 12, 2), float32]) {
  %801 = @func_17976() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %802 = @func_16939() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */;
  %803 = %801.0;
  %804 = %802.1;
  (%803, %804)
}

def @func_23014() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %805 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %806 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %807 = %805.0;
  %808 = %806.1;
  %809 = @func_3577() /* ty=Tensor[(3, 8, 13), float32] */;
  (%807, %808, %809)
}

def @func_26935() -> (Tensor[(39), uint8], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(2560), float32]) {
  %810 = @func_22648() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %811 = cast(meta[relay.Constant][20] /* ty=Tensor[(2560), float32] */, dtype="float32") /* ty=Tensor[(2560), float32] */;
  %812 = reshape(%811, newshape=[2, 1280]) /* ty=Tensor[(2, 1280), float32] */;
  %813 = @func_15869(%812) /* ty=(Tensor[(40, 12), uint16], Tensor[(16, 2, 15), uint16], Tensor[(2560), float32], Tensor[(2, 1280), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %814 = @func_17804() /* ty=Tensor[(39), uint8] */;
  %815 = %810.0;
  %816 = %813.1;
  (%814, %815, %816, meta[relay.Constant][20] /* ty=Tensor[(2560), float32] */)
}

def @func_25174() -> Tensor[(16, 2, 15), uint16] {
  %817 = @func_10118() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %817.0
}

def @func_16893() -> Tensor[(16, 2, 15), float32] {
  %818 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %818.0
}

def @func_14819() -> (Tensor[(16, 2, 15), uint16],) {
  %819 = @func_3053() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %820 = %819.0;
  (%820,)
}

def @func_7812(%var_7808: Tensor[(16, 15, 9), float64]) -> (Tensor[(16, 15, 9), float64],) {
  %821 = cast(%var_7808, dtype="float64") /* ty=Tensor[(16, 15, 9), float64] */;
  %822 = cosh(%821) /* ty=Tensor[(16, 15, 9), float64] */;
  (%822,)
}

def @func_24603() -> (Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %823 = @func_14992() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %824 = @func_22341() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %825 = @func_4162() /* ty=Tensor[(16, 2, 15), int32] */;
  %826 = %823.0;
  %827 = %824.0;
  (%825, %826, %827)
}

def @func_23986() -> (Tensor[(3, 8, 13), float32],) {
  %828 = @func_6191() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %829 = %828.0;
  (%829,)
}

def @func_13186() -> (Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), int16]) {
  %830 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
  %831 = cast(%830, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %832 = reshape(%831, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %833 = @func_4533(%832) /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %834 = %833.0;
  (%830, %834)
}

def @func_22341() -> (Tensor[(3, 8, 13), float32],) {
  %835 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %836 = %835.0;
  (%836,)
}

def @func_15325() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  %837 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %838 = @func_8357() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %839 = %837.0;
  %840 = @func_8452() /* ty=Tensor[(16, 2, 15), float32] */;
  %841 = @func_14145() /* ty=Tensor[(16, 2, 15), uint16] */;
  %842 = %838.1;
  (%839, %840, %841, %842)
}

def @func_28363() -> (Tensor[(3, 8, 13), float32],) {
  %843 = @func_3100() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %844 = %843.0;
  (%844,)
}

def @func_7171() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %845 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %846 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %847 = %845.1;
  %848 = %846.0;
  (%847, %848)
}

def @func_13212() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) {
  %849 = @func_11179() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %850 = %849.1;
  %851 = @func_4162() /* ty=Tensor[(16, 2, 15), int32] */;
  (%850, %851)
}

def @func_12665() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %852 = @func_9426() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %853 = @func_5174() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %854 = %852.0;
  %855 = %853.3;
  %856 = @func_10642() /* ty=Tensor[(16, 2, 15), float32] */;
  (%854, %855, %856)
}

def @func_20361() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %857 = @func_17976() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %858 = @func_17000() /* ty=Tensor[(16, 2, 15), bool] */;
  %859 = @func_10078() /* ty=Tensor[(3, 8, 13), float32] */;
  %860 = %857.2;
  (%858, %859, %860)
}

def @func_2251() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) {
  %861 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %862 = cast(meta[relay.Constant][21] /* ty=Tensor[(480, 1), uint16] */, dtype="uint16") /* ty=Tensor[(480, 1), uint16] */;
  %863 = reshape(%862, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %864 = @func_1116(%863) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(480), uint16]) */;
  %865 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %866 = %861.1;
  %867 = %864.0;
  %868 = %865.0;
  (%866, %867, meta[relay.Constant][21] /* ty=Tensor[(480, 1), uint16] */, %868)
}

def @func_24779(%var_24725: Tensor[(308), uint8]) -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(308), uint8], Tensor[(16, 2, 15), bool]) {
  %869 = @func_9573() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(480), uint16]) */;
  %870 = cast(%var_24725, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %871 = reshape(%870, newshape=[308]) /* ty=Tensor[(308), uint8] */;
  %872 = @func_22860(%871) /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(308), uint8]) */;
  %873 = @func_13481() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %874 = %869.0;
  %875 = %872.1;
  %876 = %873.0;
  (%874, %875, %var_24725, %876)
}

def @func_27614() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %877 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %878 = %877.0;
  %879 = @func_24481() /* ty=Tensor[(3, 8, 13), float32] */;
  (%878, %879)
}

def @func_18209() -> Tensor[(3, 8, 13), float32] {
  %880 = @func_13225() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %880.0
}

def @func_15526(%var_15490: Tensor[(21), int8]) -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float64], Tensor[(21), int8], Tensor[(3, 63), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %881 = @func_6451() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %882 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %883 = cast(%var_15490, dtype="int8") /* ty=Tensor[(21), int8] */;
  %884 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 63), bool] */, dtype="bool") /* ty=Tensor[(3, 63), bool] */;
  %885 = reshape(%883, newshape=[21]) /* ty=Tensor[(21), int8] */;
  %886 = reshape(%884, newshape=[3, 7, 9]) /* ty=Tensor[(3, 7, 9), bool] */;
  %887 = @func_5623(%885, %886) /* ty=(Tensor[(16, 2, 15), float64], Tensor[(21), int8], Tensor[(189), int8], Tensor[(3, 7, 9), int64]) */;
  %888 = @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %889 = @func_3053() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %890 = %881.0;
  %891 = %882.0;
  %892 = %887.0;
  %893 = %888.0;
  %894 = %889.0;
  (%890, %891, %892, %var_15490, meta[relay.Constant][22] /* ty=Tensor[(3, 63), bool] */, %893, %894)
}

def @func_23970() -> (Tensor[(3, 8, 13), float32],) {
  %895 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %896 = %895.0;
  (%896,)
}

def @func_14345() -> Tensor[(3, 8, 13), float32] {
  %897 = @func_14054() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %897.1
}

def @func_24835() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %898 = @func_23100() /* ty=Tensor[(3, 8, 13), float32] */;
  %899 = @func_5872() /* ty=Tensor[(3, 8, 13), float32] */;
  (%898, %899)
}

def @func_22879() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %900 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %901 = @func_10682() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %902 = %900.0;
  %903 = %901.1;
  (%902, %903)
}

def @func_28234() -> (Tensor[(16, 2, 15), float32],) {
  %904 = @func_8367() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */;
  %905 = %904.0;
  (%905,)
}

def @func_5107() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
  %906 = @func_1868() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %907 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %908 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %909 = @func_3887() /* ty=Tensor[(16, 2, 15), float32] */;
  %910 = %906.1;
  %911 = %907.0;
  %912 = %908.0;
  (%909, %910, %911, %912)
}

def @func_29458(%var_29405: Tensor[(6, 5, 12), float64]) -> (Tensor[(6, 5, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) {
  %913 = cast(%var_29405, dtype="float64") /* ty=Tensor[(6, 5, 12), float64] */;
  %914 = @func_28213() /* ty=(Tensor[(16, 2, 15), float32],) */;
  %915 = log2(%913) /* ty=Tensor[(6, 5, 12), float64] */;
  %916 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
  %917 = @func_16893() /* ty=Tensor[(16, 2, 15), float32] */;
  %918 = @func_11349() /* ty=Tensor[(16, 2, 15), int32] */;
  %919 = %914.0;
  (%915, %916, %917, %918, %919)
}

def @func_10451() -> (Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) {
  %920 = @func_2756() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %921 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
  %922 = @func_3100() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %923 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %924 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %925 = %920.1;
  %926 = %921.2;
  %927 = %922.0;
  %928 = @func_4986() /* ty=Tensor[(16, 2, 15), bool] */;
  %929 = %923.1;
  %930 = %924.3;
  (%925, %926, %927, %928, %929, %930)
}

def @func_14907() -> (Tensor[(3, 8, 13), float32],) {
  %931 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
  (%931,)
}

def @func_2282() -> (Tensor[(3, 8, 13), float32],) {
  %932 = @func_1778() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */;
  %933 = %932.1;
  (%933,)
}

def @func_6318(%var_6288: Tensor[(11, 16, 1), int16], %var_6289: Tensor[(11, 16, 13), int16]) -> (Tensor[(11, 16, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(8, 60), uint16], Tensor[(3, 8, 13), float32]) {
  %934 = cast(%var_6288, dtype="int16") /* ty=Tensor[(11, 16, 1), int16] */;
  %935 = cast(%var_6289, dtype="int16") /* ty=Tensor[(11, 16, 13), int16] */;
  %936 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 60), uint16] */, dtype="uint16") /* ty=Tensor[(8, 60), uint16] */;
  %937 = reshape(%936, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %938 = cast(meta[relay.Constant][23] /* ty=Tensor[(8, 60), uint16] */, dtype="uint16") /* ty=Tensor[(8, 60), uint16] */;
  %939 = reshape(%938, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %940 = @func_1116(%939) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(480), uint16]) */;
  %941 = left_shift(%934, %935) /* ty=Tensor[(11, 16, 13), int16] */;
  %942 = @func_254(%937) /* ty=Tensor[(16, 2, 15), uint16] */;
  %943 = %940.1;
  (%941, %942, meta[relay.Constant][23] /* ty=Tensor[(8, 60), uint16] */, %943)
}

def @func_25858() -> (Tensor[(16, 2, 15), uint16], Tensor[(120, 8), uint16]) {
  %944 = @func_7733() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %945 = @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */;
  %946 = %944.3;
  %947 = %945.1;
  (%946, %947)
}

def @func_11890(%var_11886: Tensor[(39), uint8]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) {
  %948 = @func_11837() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %949 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %950 = cast(%var_11886, dtype="uint8") /* ty=Tensor[(39), uint8] */;
  %951 = reshape(%950, newshape=[3, 13, 1]) /* ty=Tensor[(3, 13, 1), uint8] */;
  %952 = @func_8675(%951) /* ty=(Tensor[(3, 13, 1), bool],) */;
  %953 = %948.1;
  %954 = %949.1;
  %955 = %952.0;
  (%953, %954, %955, %var_11886)
}

def @func_12157() -> (Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) {
  %956 = @func_9849() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %957 = @func_8256() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32]) */;
  %958 = @func_6107() /* ty=(Tensor[(480), uint16],) */;
  %959 = %956.1;
  %960 = %957.1;
  %961 = %958.0;
  (%959, %960, %961)
}

def @func_3351() -> Tensor[(3, 8, 13), float32] {
  %962 = @func_2425() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %962.0
}

def @func_2168() -> Tensor[(16, 2, 15), uint16] {
  %963 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %963.0
}

def @func_2796() -> (Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) {
  %964 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %965 = %964.2;
  %966 = cast(%965, dtype="uint16") /* ty=Tensor[(40, 12), uint16] */;
  %967 = cast(%965, dtype="uint16") /* ty=Tensor[(40, 12), uint16] */;
  %968 = reshape(%966, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %969 = reshape(%967, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %970 = @func_629(%968, %969) /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %971 = %970.5;
  (%965, %971)
}

def @func_25732() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), float32]) {
  %972 = @func_10682() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %973 = @func_10740() /* ty=Tensor[(16, 2, 15), float32] */;
  %974 = %972.1;
  (%973, %974)
}

def @func_17976() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %975 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %976 = @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */;
  %977 = @func_11666() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %978 = %975.0;
  %979 = %976.4;
  %980 = %977.0;
  (%978, %979, %980)
}

def @func_8028() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %981 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %982 = %981.0;
  %983 = @func_7470() /* ty=Tensor[(3, 8, 13), float32] */;
  (%982, %983)
}

def @func_8753() -> (Tensor[(16, 2, 15), bool],) {
  %984 = @func_2702() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %985 = %984.0;
  (%985,)
}

def @func_20729() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  %986 = @func_5174() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %987 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %988 = @func_3300() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %989 = %986.3;
  %990 = %987.0;
  %991 = %988.0;
  (%989, %990, %991)
}

def @func_7087(%var_7071: Tensor[(40, 12), float64]) -> (Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint32]) {
  %992 = @func_3759() /* ty=(Tensor[(40, 12), float64],) */;
  %993 = %992.0;
  %994 = cast(%993, dtype="uint16") /* ty=Tensor[(40, 12), uint16] */;
  %995 = reshape(%994, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %996 = @func_1068(%995) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %997 = cast(%var_7071, dtype="uint32") /* ty=Tensor[(40, 12), uint32] */;
  %998 = shape_of(%993, dtype="int32") /* ty=Tensor[(2), int32] */;
  %999 = cast(%993, dtype="uint32") /* ty=Tensor[(40, 12), uint32] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1001 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
  %1002 = %996.1;
  %1003 = bitwise_xor(%999, %1000) /* ty=Tensor[(40, 12), uint32] */;
  (%1001, %1002, %1003)
}

def @func_2622() -> Tensor[(16, 2, 15), float32] {
  %1004 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1005 = %1004.0;
  %1006 = cast(%1005, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
  acos(%1006) /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_3053() -> (Tensor[(16, 2, 15), uint16],) {
  %1007 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%1007,)
}

def @func_5828() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) {
  %1008 = @func_4960() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), int16]) */;
  %1009 = @func_4986() /* ty=Tensor[(16, 2, 15), bool] */;
  %1010 = %1008.0;
  (%1009, %1010)
}

def @func_1585() -> Tensor[(3, 8, 13), int16] {
  %1011 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %1012 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1013 = %1012.0;
  %1014 = cast(%1013, dtype="int16") /* ty=Tensor[(3, 8, 13), int16] */;
  %1015 = shape_of(%1011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1016 = cast(%1011, dtype="int16") /* ty=Tensor[(3, 8, 13), int16] */;
  %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_and(%1016, %1017) /* ty=Tensor[(3, 8, 13), int16] */
}

def @func_7279() -> Tensor[(3, 8, 13), float32] {
  %1018 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1018.0
}

def @func_26097() -> Tensor[(16, 2, 15), bool] {
  %1019 = @func_11381() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1019.0
}

def @func_8404() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32]) {
  %1020 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
  %1021 = @func_7182() /* ty=Tensor[(16, 2, 15), float64] */;
  %1022 = @func_2480() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1020, %1021, %1022)
}

def @func_8384() -> Tensor[(3, 8, 13), int16] {
  @func_1585() /* ty=Tensor[(3, 8, 13), int16] */
}

def @func_5211() -> (Tensor[(3, 8, 13), float32],) {
  %1023 = @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1024 = %1023.0;
  (%1024,)
}

def @func_15961() -> (Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  %1025 = @func_4107() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1026 = @func_2612() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1027 = @func_11443() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %1028 = %1025.0;
  %1029 = %1026.0;
  %1030 = %1027.1;
  (%1028, %1029, %1030)
}

def @func_13893() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1031 = @func_1453() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1032 = %1031.3;
  %1033 = cast(%1032, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %1034 = reshape(%1033, newshape=[480, 1]) /* ty=Tensor[(480, 1), uint16] */;
  %1035 = @func_1238(%1034) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32], Tensor[(16, 2, 15), uint16]) */;
  %1036 = %1035.3;
  (%1032, %1036)
}

def @func_1868() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) {
  %1037 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %1038 = %1037.3;
  %1039 = cast(%1038, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %1040 = reshape(%1039, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1041 = @func_1068(%1040) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1042 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1043 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %1044 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1045 = %1041.0;
  %1046 = %1042.0;
  %1047 = %1043.1;
  %1048 = %1044.2;
  (%1038, %1045, %1046, %1047, %1048)
}

def @func_21369() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) {
  %1049 = @func_13139() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1050 = @func_19399() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1051 = %1049.0;
  %1052 = %1050.0;
  (%1051, %1052)
}

def @func_16966() -> Tensor[(3, 8, 13), float32] {
  %1053 = @func_5222() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1053.0
}

def @func_7601() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1054 = @func_2719() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1055 = @func_6367() /* ty=Tensor[(3, 8, 13), float32] */;
  %1056 = cast(%1055, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  %1057 = %1054.2;
  %1058 = cosh(%1056) /* ty=Tensor[(3, 8, 13), float32] */;
  %1059 = @func_3351() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1057, %1058, %1059)
}

def @func_21743() -> (Tensor[(3, 8, 13), float32],) {
  %1060 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1061 = %1060.4;
  (%1061,)
}

def @func_22648() -> (Tensor[(3, 8, 13), float32],) {
  %1062 = @func_14992() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1063 = %1062.0;
  (%1063,)
}

def @func_13845() -> Tensor[(16, 2, 15), uint16] {
  %1064 = @func_7171() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1064.0
}

def @func_7345() -> (Tensor[(16, 2, 15), bool],) {
  %1065 = @func_4986() /* ty=Tensor[(16, 2, 15), bool] */;
  (%1065,)
}

def @func_1453() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  %1066 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1067 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1068 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1069 = %1068.0;
  %1070 = cast(%1069, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %1071 = reshape(%1070, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1072 = %1066.2;
  %1073 = %1067.0;
  %1074 = @func_254(%1071) /* ty=Tensor[(16, 2, 15), uint16] */;
  (%1072, %1073, %1069, %1074)
}

def @func_681() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) {
  %1075 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1076 = cast(meta[relay.Constant][24] /* ty=Tensor[(40, 12), uint16] */, dtype="uint16") /* ty=Tensor[(40, 12), uint16] */;
  %1077 = reshape(%1076, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1078 = %1075.0;
  %1079 = @func_254(%1077) /* ty=Tensor[(16, 2, 15), uint16] */;
  (%1078, %1079, meta[relay.Constant][24] /* ty=Tensor[(40, 12), uint16] */)
}

def @func_16751() -> (Tensor[(16, 2, 15), uint16],) {
  %1080 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1081 = %1080.0;
  (%1081,)
}

def @func_3433() -> Tensor[(16, 2, 15), uint16] {
  %1082 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1082.0
}

def @func_5174() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1083 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1084 = %1083.0;
  %1085 = @func_3351() /* ty=Tensor[(3, 8, 13), float32] */;
  %1086 = cast(%1085, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  %1087 = shape_of(%1084, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1088 = cast(%1084, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  %1089 = dyn.reshape(%1086, %1087, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1090 = @func_2680() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1091 = @func_3433() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1092 = cast(%1091, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %1093 = reshape(%1092, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1094 = @func_5051(%1093) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) */;
  %1095 = floor_mod(%1088, %1089) /* ty=Tensor[(3, 8, 13), float32] */;
  %1096 = %1090.0;
  %1097 = %1094.0;
  (%1091, %1095, %1096, %1097)
}

def @func_5872() -> Tensor[(3, 8, 13), float32] {
  %1098 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1098.0
}

def @func_13050(%var_13013: Tensor[(480), uint16]) -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 7, 9), int64], Tensor[(21), int8], Tensor[(1, 189), bool], Tensor[(3, 8, 13), float32]) {
  %1099 = cast(%var_13013, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %1100 = reshape(%1099, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1101 = @func_5051(%1100) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) */;
  %1102 = @func_10682() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %1103 = cast(meta[relay.Constant][25] /* ty=Tensor[(21), int8] */, dtype="int8") /* ty=Tensor[(21), int8] */;
  %1104 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 189), bool] */, dtype="bool") /* ty=Tensor[(1, 189), bool] */;
  %1105 = reshape(%1103, newshape=[21]) /* ty=Tensor[(21), int8] */;
  %1106 = reshape(%1104, newshape=[3, 7, 9]) /* ty=Tensor[(3, 7, 9), bool] */;
  %1107 = @func_5623(%1105, %1106) /* ty=(Tensor[(16, 2, 15), float64], Tensor[(21), int8], Tensor[(189), int8], Tensor[(3, 7, 9), int64]) */;
  %1108 = @func_9426() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1109 = @func_8384() /* ty=Tensor[(3, 8, 13), int16] */;
  %1110 = %1101.0;
  %1111 = %1102.1;
  %1112 = %1107.3;
  %1113 = %1108.0;
  (%1109, %1110, %var_13013, %1111, %1112, meta[relay.Constant][25] /* ty=Tensor[(21), int8] */, meta[relay.Constant][26] /* ty=Tensor[(1, 189), bool] */, %1113)
}

def @func_10078() -> Tensor[(3, 8, 13), float32] {
  %1114 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %1114.0
}

def @func_7462() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1115 = @func_2914() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1116 = @func_5019() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
  %1117 = %1115.0;
  %1118 = %1116.0;
  (%1117, %1118)
}

def @func_4107() -> (Tensor[(16, 2, 15), float64],) {
  %1119 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1120 = %1119.0;
  (%1120,)
}

def @func_5491() -> Tensor[(3, 8, 13), float32] {
  %1121 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %1121.1
}

def @func_9573() -> (Tensor[(16, 2, 15), float32], Tensor[(480), uint16]) {
  %1122 = @func_7412() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), float32]) */;
  %1123 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1124 = %1122.1;
  %1125 = %1123.2;
  (%1124, %1125)
}

def @func_16184() -> Tensor[(3, 8, 13), float32] {
  %1126 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1126.0
}

def @func_18847() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1127 = @func_14054() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1128 = @func_13212() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) */;
  %1129 = %1127.1;
  %1130 = %1128.0;
  (%1129, %1130)
}

def @func_19943(%var_19894: Tensor[(126), int16]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(480), uint16], Tensor[(126), int16], Tensor[(2160), float64], Tensor[(16, 15, 9), float64]) {
  %1131 = @func_17160() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1132 = @func_15228() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(960, 2), uint16]) */;
  %1133 = cast(%var_19894, dtype="int16") /* ty=Tensor[(126), int16] */;
  %1134 = reshape(%1133, newshape=[126]) /* ty=Tensor[(126), int16] */;
  %1135 = @func_15412(%1134) /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(126), int16]) */;
  %1136 = cast(meta[relay.Constant][27] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %1137 = reshape(%1136, newshape=[16, 15, 9]) /* ty=Tensor[(16, 15, 9), float64] */;
  %1138 = @func_7812(%1137) /* ty=(Tensor[(16, 15, 9), float64],) */;
  %1139 = %1138.0;
  %1140 = cast(%1139, dtype="float64") /* ty=Tensor[(16, 15, 9), float64] */;
  %1141 = %1131.1;
  %1142 = %1132.1;
  %1143 = %1135.0;
  %1144 = sigmoid(%1140) /* ty=Tensor[(16, 15, 9), float64] */;
  (%1141, %1142, %1143, %var_19894, meta[relay.Constant][27] /* ty=Tensor[(2160), float64] */, %1144)
}

def @func_23713() -> Tensor[(3, 3, 6), float64] {
  %1145 = cast(meta[relay.Constant][28] /* ty=Tensor[(3, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 3, 6), float64] */;
  asin(%1145) /* ty=Tensor[(3, 3, 6), float64] */
}

def @func_13434(%var_13363: Tensor[(112, 1), int64]) -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(16), int64], Tensor[(112, 1), int64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) {
  %1146 = @func_8753() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1147 = cast(meta[relay.Constant][29] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
  %1148 = cast(%var_13363, dtype="int64") /* ty=Tensor[(112, 1), int64] */;
  %1149 = %1146.0;
  %1150 = cast(%1149, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %1151 = reshape(%1147, newshape=[8, 2, 1]) /* ty=Tensor[(8, 2, 1), int64] */;
  %1152 = reshape(%1148, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), int64] */;
  %1153 = reshape(%1150, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %1154 = @func_5937(%1151, %1152, %1153) /* ty=(Tensor[(8, 2, 7), int64], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(8, 2, 7), float32], Tensor[(40, 12), uint16]) */;
  %1155 = @func_10792() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %1156 = @func_13225() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1157 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1158 = @func_11666() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1159 = @func_12942() /* ty=(Tensor[(16, 2, 15), int32],) */;
  %1160 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
  %1161 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
  %1162 = %1154.1;
  %1163 = %1155.5;
  %1164 = @func_6672() /* ty=Tensor[(16, 2, 15), float32] */;
  %1165 = %1156.0;
  %1166 = @func_10078() /* ty=Tensor[(3, 8, 13), float32] */;
  %1167 = %1157.1;
  %1168 = %1158.0;
  %1169 = %1159.0;
  (%1149, %1160, %1161, %1162, meta[relay.Constant][29] /* ty=Tensor[(16), int64] */, %var_13363, %1163, %1164, %1165, %1166, %1167, %1168, %1169)
}

def @func_10642() -> Tensor[(16, 2, 15), float32] {
  %1170 = @func_6958() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1170.0
}

def @func_16939() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) {
  %1171 = @func_6191() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1172 = @func_10028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */;
  %1173 = %1171.0;
  %1174 = %1172.6;
  (%1173, %1174)
}

def @func_27879() -> (Tensor[(16, 2, 15), uint16],) {
  %1175 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1176 = %1175.3;
  (%1176,)
}

def @func_3887() -> Tensor[(16, 2, 15), float32] {
  @func_2622() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_6367() -> Tensor[(3, 8, 13), float32] {
  @func_5872() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_24533() -> (Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1177 = @func_23737() /* ty=Tensor[(16, 2, 15), float64] */;
  %1178 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1179 = @func_3351() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1177, %1178, %1179)
}

def @func_23737() -> Tensor[(16, 2, 15), float64] {
  @func_19681() /* ty=Tensor[(16, 2, 15), float64] */
}

def @func_12491(%var_12466: uint16) -> (Tensor[(7, 6, 8), uint16], Tensor[(3, 8, 13), float32]) {
  %1180 = cast(%var_12466, dtype="uint16") /* ty=uint16 */;
  %1181 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 6, 8), uint16] */, dtype="uint16") /* ty=Tensor[(7, 6, 8), uint16] */;
  %1182 = @func_8945() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1183 = bitwise_xor(%1180, %1181) /* ty=Tensor[(7, 6, 8), uint16] */;
  %1184 = %1182.0;
  (%1183, %1184)
}

def @func_8307() -> Tensor[(16, 2, 15), uint16] {
  %1185 = @func_8128() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1185.0
}

def @func_14270(%var_14261: Tensor[(9, 7, 2), float32]) -> (Tensor[(9, 7, 2), float32],) {
  %1186 = cast(%var_14261, dtype="float32") /* ty=Tensor[(9, 7, 2), float32] */;
  %1187 = log(%1186) /* ty=Tensor[(9, 7, 2), float32] */;
  (%1187,)
}

def @func_5121() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) {
  %1188 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1189 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %1190 = @func_3053() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1191 = %1188.0;
  %1192 = %1189.1;
  %1193 = %1190.0;
  (%1191, %1192, %1193)
}

def @func_6935() -> (Tensor[(240), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
  %1194 = @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */;
  %1195 = @func_2425() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %1196 = @func_6191() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1197 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %1198 = %1194.2;
  %1199 = @func_2029() /* ty=Tensor[(16, 2, 15), float32] */;
  %1200 = %1195.0;
  %1201 = %1196.0;
  %1202 = %1197.0;
  (%1198, %1199, %1200, %1201, %1202)
}

def @func_1361() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1203 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1204 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1205 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %1206 = %1203.2;
  %1207 = %1204.2;
  (%1205, %1206, %1207)
}

def @func_1238(%var_1202: Tensor[(480, 1), uint16]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32], Tensor[(16, 2, 15), uint16]) {
  %1208 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1209 = cast(%var_1202, dtype="uint16") /* ty=Tensor[(480, 1), uint16] */;
  %1210 = reshape(%1209, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1211 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1212 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 12, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 2), float64] */;
  %1213 = tan(%1212) /* ty=Tensor[(3, 12, 2), float64] */;
  %1214 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 12, 2), float64] */, dtype="float32") /* ty=Tensor[(3, 12, 2), float32] */;
  %1215 = shape_of(%1213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1216 = cast(%1213, dtype="float32") /* ty=Tensor[(3, 12, 2), float32] */;
  %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1218 = cast(%var_1202, dtype="uint16") /* ty=Tensor[(480, 1), uint16] */;
  %1219 = reshape(%1218, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1220 = %1208.0;
  %1221 = @func_254(%1210) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1222 = %1211.1;
  %1223 = divide(%1216, %1217) /* ty=Tensor[(3, 12, 2), float32] */;
  %1224 = @func_254(%1219) /* ty=Tensor[(16, 2, 15), uint16] */;
  (%1220, %1221, %var_1202, %1222, %1223, %1224)
}

def @func_23198() -> (Tensor[(16, 2, 15), bool],) {
  %1225 = @func_20361() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1226 = %1225.0;
  (%1226,)
}

def @func_6992() -> (Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) {
  %1227 = @func_6107() /* ty=(Tensor[(480), uint16],) */;
  %1228 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
  %1229 = %1227.0;
  (%1228, %1229)
}

def @func_5583() -> (Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(1440), uint64], Tensor[(3, 8, 13), float32]) {
  %1230 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
  %1231 = cast(meta[relay.Constant][32] /* ty=Tensor[(1440), uint64] */, dtype="uint64") /* ty=Tensor[(1440), uint64] */;
  %1232 = cast(meta[relay.Constant][32] /* ty=Tensor[(1440), uint64] */, dtype="uint64") /* ty=Tensor[(1440), uint64] */;
  %1233 = reshape(%1231, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), uint64] */;
  %1234 = reshape(%1232, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), uint64] */;
  %1235 = @func_4746(%1233, %1234) /* ty=(Tensor[(12, 15, 8), uint64],) */;
  %1236 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %1237 = %1230.3;
  %1238 = %1235.0;
  %1239 = %1236.0;
  (%1237, %1238, meta[relay.Constant][32] /* ty=Tensor[(1440), uint64] */, %1239)
}

def @func_11905() -> Tensor[(3, 8, 13), float32] {
  @func_10078() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_17000() -> Tensor[(16, 2, 15), bool] {
  %1240 = @func_13481() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1240.0
}

def @func_11443() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) {
  %1241 = @func_6451() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1242 = @func_4162() /* ty=Tensor[(16, 2, 15), int32] */;
  %1243 = %1241.0;
  (%1242, %1243)
}

def @func_7470() -> Tensor[(3, 8, 13), float32] {
  %1244 = @func_6958() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1244.1
}

def @func_18451() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1245 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1246 = @func_5222() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1247 = %1245.0;
  %1248 = %1246.0;
  (%1247, %1248)
}

def @func_18941(%var_18918: Tensor[(40, 12), float64]) -> (Tensor[(40, 12), float64], Tensor[(9, 7, 2), float32], Tensor[(126), float32], Tensor[(16, 2, 15), uint16]) {
  %1249 = @func_15192() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
  %1250 = %1249.1;
  %1251 = cast(%var_18918, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %1252 = shape_of(%1250, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1253 = cast(%1250, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %1254 = dyn.reshape(%1251, %1252, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1255 = cast(meta[relay.Constant][33] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %1256 = reshape(%1255, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), float32] */;
  %1257 = @func_14270(%1256) /* ty=(Tensor[(9, 7, 2), float32],) */;
  %1258 = @func_4960() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), int16]) */;
  %1259 = floor_divide(%1253, %1254) /* ty=Tensor[(40, 12), float64] */;
  %1260 = %1257.0;
  %1261 = %1258.0;
  (%1259, %1260, meta[relay.Constant][33] /* ty=Tensor[(126), float32] */, %1261)
}

def @func_21860() -> Tensor[(3, 8, 13), float32] {
  @func_21159() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_14651() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1262 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1263 = @func_6958() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1264 = %1262.0;
  %1265 = %1263.1;
  (%1264, %1265)
}

def @func_15869(%var_15843: Tensor[(2, 1280), float32]) -> (Tensor[(40, 12), uint16], Tensor[(16, 2, 15), uint16], Tensor[(2560), float32], Tensor[(2, 1280), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1266 = @func_2796() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */;
  %1267 = @func_5121() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %1268 = cast(%var_15843, dtype="float32") /* ty=Tensor[(2, 1280), float32] */;
  %1269 = reshape(%1268, newshape=[2560]) /* ty=Tensor[(2560), float32] */;
  %1270 = @func_14945(%1269) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 16, 10), float32], Tensor[(2560), float32]) */;
  %1271 = @func_9049() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1272 = %1266.0;
  %1273 = %1267.2;
  %1274 = %1270.2;
  %1275 = @func_2168() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1276 = %1271.0;
  (%1272, %1273, %1274, %var_15843, %1275, %1276)
}

def @func_4907() -> (Tensor[(3, 8, 13), float32],) {
  %1277 = @func_3300() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %1278 = %1277.2;
  %1279 = cast(%1278, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  %1280 = sin(%1279) /* ty=Tensor[(3, 8, 13), float32] */;
  (%1280,)
}

def @func_25819(%var_25815: Tensor[(11, 3, 9), float64]) -> (Tensor[(11, 3, 9), float64],) {
  %1281 = cast(%var_25815, dtype="float64") /* ty=Tensor[(11, 3, 9), float64] */;
  %1282 = sigmoid(%1281) /* ty=Tensor[(11, 3, 9), float64] */;
  (%1282,)
}

def @func_18297() -> (Tensor[(3, 8, 13), float32],) {
  %1283 = @func_3666() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32]) */;
  %1284 = %1283.1;
  (%1284,)
}

def @func_15629() -> (Tensor[(3, 8, 13), float32],) {
  %1285 = @func_13893() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1286 = %1285.1;
  (%1286,)
}

def @func_21050(%var_21028: Tensor[(660), float64]) -> (Tensor[(3, 8, 13), float32], Tensor[(11, 5, 12), float64], Tensor[(660), float64], Tensor[(3, 8, 13), float32]) {
  %1287 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1288 = cast(%var_21028, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1289 = cast(%var_21028, dtype="float64") /* ty=Tensor[(660), float64] */;
  %1290 = reshape(%1288, newshape=[11, 5, 12]) /* ty=Tensor[(11, 5, 12), float64] */;
  %1291 = reshape(%1289, newshape=[11, 5, 12]) /* ty=Tensor[(11, 5, 12), float64] */;
  %1292 = @func_3475(%1290, %1291) /* ty=(Tensor[(11, 5, 12), float64],) */;
  %1293 = @func_8157() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1294 = %1287.0;
  %1295 = %1292.0;
  %1296 = %1293.0;
  (%1294, %1295, %var_21028, %1296)
}

def @func_22368(%var_22363: Tensor[(308), uint8]) -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(2, 11, 14), bool], Tensor[(308), uint8]) {
  %1297 = @func_18384() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1298 = @func_7412() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), float32]) */;
  %1299 = cast(%var_22363, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %1300 = cast(%var_22363, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %1301 = reshape(%1299, newshape=[2, 11, 14]) /* ty=Tensor[(2, 11, 14), uint8] */;
  %1302 = reshape(%1300, newshape=[2, 11, 14]) /* ty=Tensor[(2, 11, 14), uint8] */;
  %1303 = @func_3522(%1301, %1302) /* ty=(Tensor[(2, 11, 14), bool],) */;
  %1304 = %1297.0;
  %1305 = %1298.1;
  %1306 = %1303.0;
  (%1304, %1305, %1306, %var_22363)
}

def @func_9105() -> (Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1307 = @func_8838() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %1308 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %1309 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1310 = %1307.1;
  %1311 = %1308.0;
  %1312 = @func_4986() /* ty=Tensor[(16, 2, 15), bool] */;
  %1313 = %1309.0;
  (%1310, %1311, %1312, %1313)
}

def @func_13642() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) {
  %1314 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %1315 = @func_2622() /* ty=Tensor[(16, 2, 15), float32] */;
  %1316 = %1314.1;
  (%1315, %1316)
}

def @func_14001() -> (Tensor[(16, 2, 15), int32],) {
  %1317 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
  (%1317,)
}

def @func_4845() -> (Tensor[(3, 8, 13), float32],) {
  %1318 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %1319 = %1318.0;
  (%1319,)
}

def @func_20856() -> Tensor[(3, 8, 13), float32] {
  %1320 = @func_5455() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1320.0
}

def @func_27488(%var_27474: Tensor[(297), float64]) -> (Tensor[(3, 8, 13), float32], Tensor[(11, 3, 9), float64], Tensor[(297), float64]) {
  %1321 = @func_26574() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1322 = cast(%var_27474, dtype="float64") /* ty=Tensor[(297), float64] */;
  %1323 = reshape(%1322, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), float64] */;
  %1324 = @func_25819(%1323) /* ty=(Tensor[(11, 3, 9), float64],) */;
  %1325 = %1321.0;
  %1326 = %1324.0;
  (%1325, %1326, %var_27474)
}

def @func_19722() -> (Tensor[(3, 8, 13), float32],) {
  %1327 = @func_11666() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1328 = %1327.1;
  (%1328,)
}

def @func_9691() -> (Tensor[(16, 2, 15), bool],) {
  %1329 = @func_8367() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */;
  %1330 = %1329.1;
  (%1330,)
}

def @func_20085(%var_20065: Tensor[(14, 9, 10), float64]) -> (Tensor[(14, 9, 10), float64], Tensor[(16, 2, 15), bool]) {
  %1331 = cast(%var_20065, dtype="float64") /* ty=Tensor[(14, 9, 10), float64] */;
  %1332 = @func_9691() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1333 = tan(%1331) /* ty=Tensor[(14, 9, 10), float64] */;
  %1334 = %1332.0;
  (%1333, %1334)
}

def @func_15704() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1335 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %1336 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %1337 = @func_12353() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1338 = @func_4275() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) */;
  %1339 = %1335.3;
  %1340 = %1336.0;
  %1341 = %1337.1;
  %1342 = %1338.1;
  (%1339, %1340, %1341, %1342)
}

def @func_20613() -> Tensor[(16, 2, 15), bool] {
  %1343 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1343.0
}

def @func_19431() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1344 = @func_15056() /* ty=(Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32]) */;
  %1345 = %1344.1;
  %1346 = @func_10530() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1345, %1346)
}

def @func_24481() -> Tensor[(3, 8, 13), float32] {
  %1347 = @func_13893() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1347.1
}

def @func_1696() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  %1348 = cast(meta[relay.Constant][34] /* ty=Tensor[(480), uint16] */, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %1349 = reshape(%1348, newshape=[480, 1]) /* ty=Tensor[(480, 1), uint16] */;
  %1350 = @func_1238(%1349) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32], Tensor[(16, 2, 15), uint16]) */;
  %1351 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1352 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1353 = %1352.3;
  %1354 = cast(meta[relay.Constant][34] /* ty=Tensor[(480), uint16] */, dtype="bool") /* ty=Tensor[(480), bool] */;
  %1355 = shape_of(%1353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1356 = cast(%1353, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
  %1357 = dyn.reshape(%1354, %1355, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1358 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %1359 = %1350.0;
  %1360 = %1351.4;
  %1361 = greater_equal(%1356, %1357) /* ty=Tensor[(16, 2, 15), bool] */;
  (%1358, %1359, %1360, %1361)
}

def @func_23871() -> (Tensor[(40, 12), float32],) {
  %1362 = @func_17121() /* ty=(Tensor[(40, 12), bool], Tensor[(40, 12), float32], Tensor[(40, 12), float32]) */;
  %1363 = %1362.1;
  (%1363,)
}

def @func_25287() -> (Tensor[(16, 2, 15), uint16],) {
  %1364 = @func_8307() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%1364,)
}

def @func_14229() -> (Tensor[(3, 8, 13), float32],) {
  %1365 = @func_1778() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */;
  %1366 = %1365.1;
  (%1366,)
}

def @func_10740() -> Tensor[(16, 2, 15), float32] {
  %1367 = @func_9573() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(480), uint16]) */;
  %1367.0
}

def @func_22017() -> Tensor[(3, 8, 13), float32] {
  %1368 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1368.1
}

def @func_4705() -> (Tensor[(16, 2, 15), uint16],) {
  %1369 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1370 = %1369.0;
  (%1370,)
}

def @func_12360() -> (Tensor[(3, 8, 13), float32],) {
  %1371 = @func_2914() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1372 = %1371.0;
  (%1372,)
}

def @func_18079() -> (Tensor[(16, 2, 15), bool], float64, float64, Tensor[(3, 8, 13), float32]) {
  %1373 = @func_8753() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1374 = cast(8.5536f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1375 = reshape(%1374, newshape=[]) /* ty=float64 */;
  %1376 = @func_10319(%1375) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], float64, Tensor[(945), float64]) */;
  %1377 = %1373.0;
  %1378 = %1376.2;
  %1379 = @func_10078() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1377, %1378, 8.5536f64 /* ty=float64 */, %1379)
}

def @func_8480() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1380 = @func_2680() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1381 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1382 = %1380.0;
  %1383 = %1381.0;
  (%1382, %1383)
}

def @func_25654() -> (Tensor[(16, 2, 15), int32],) {
  %1384 = @func_13186() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), int16]) */;
  %1385 = %1384.0;
  (%1385,)
}

def @func_5051(%var_5038: Tensor[(16, 2, 15), uint16]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) {
  %1386 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1387 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1388 = %1387.0;
  %1389 = cast(%var_5038, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %1390 = shape_of(%1388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1391 = cast(%1388, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %1392 = dyn.reshape(%1389, %1390, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1393 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %1394 = %1386.0;
  %1395 = minimum(%1391, %1392) /* ty=Tensor[(16, 2, 15), float64] */;
  %1396 = %1393.1;
  (%1394, %1395, %1396)
}

def @func_6773() -> (Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) {
  %1397 = cast(meta[relay.Constant][35] /* ty=Tensor[(120, 8), uint16] */, dtype="uint16") /* ty=Tensor[(120, 8), uint16] */;
  %1398 = cast(meta[relay.Constant][36] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1399 = reshape(%1397, newshape=[480, 2]) /* ty=Tensor[(480, 2), uint16] */;
  %1400 = reshape(%1398, newshape=[24, 10]) /* ty=Tensor[(24, 10), float32] */;
  %1401 = @func_2964(%1399, %1400) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480, 2), float64], Tensor[(480, 2), int64], Tensor[(16, 2, 15), bool], Tensor[(480, 1), float64], Tensor[(3, 8, 13), int16], Tensor[(24, 10), float32]) */;
  %1402 = %1401.3;
  %1403 = cast(%1402, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %1404 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
  %1405 = cast(meta[relay.Constant][36] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1406 = reshape(%1405, newshape=[10, 2, 12]) /* ty=Tensor[(10, 2, 12), float32] */;
  %1407 = @func_1918(%1406) /* ty=(Tensor[(10, 2, 12), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1408 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
  %1409 = sigmoid(%1403) /* ty=Tensor[(16, 2, 15), float64] */;
  %1410 = %1404.1;
  %1411 = %1407.2;
  (%1408, meta[relay.Constant][35] /* ty=Tensor[(120, 8), uint16] */, meta[relay.Constant][36] /* ty=Tensor[(240), float32] */, %1409, %1410, %1411)
}

def @func_5019() -> (Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) {
  %1412 = @func_3759() /* ty=(Tensor[(40, 12), float64],) */;
  %1413 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
  %1414 = %1412.0;
  (%1413, %1414)
}

def @func_23926(%var_23918: uint64, %var_23919: Tensor[(3, 4, 16), uint64]) -> (Tensor[(3, 4, 16), uint64],) {
  %1415 = cast(%var_23918, dtype="uint64") /* ty=uint64 */;
  %1416 = cast(%var_23919, dtype="uint64") /* ty=Tensor[(3, 4, 16), uint64] */;
  %1417 = maximum(%1415, %1416) /* ty=Tensor[(3, 4, 16), uint64] */;
  (%1417,)
}

def @func_25011() -> Tensor[(3, 8, 13), float32] {
  %1418 = @func_14907() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1418.0
}

def @func_14133() -> (Tensor[(480), uint16],) {
  %1419 = @func_7672() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %1420 = %1419.1;
  (%1420,)
}

def @func_2029() -> Tensor[(16, 2, 15), float32] {
  %1421 = @func_1468() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1422 = cast(%1421, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
  acosh(%1422) /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_15169(%var_15136: uint16) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], uint16, Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1423 = @func_4705() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1424 = cast(%var_15136, dtype="uint16") /* ty=uint16 */;
  %1425 = reshape(%1424, newshape=[]) /* ty=uint16 */;
  %1426 = @func_12491(%1425) /* ty=(Tensor[(7, 6, 8), uint16], Tensor[(3, 8, 13), float32]) */;
  %1427 = @func_6191() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1428 = @func_3351() /* ty=Tensor[(3, 8, 13), float32] */;
  %1429 = %1423.0;
  %1430 = %1426.1;
  %1431 = %1427.0;
  %1432 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1428, %1429, %1430, %var_15136, %1431, %1432)
}

def @func_1986() -> (Tensor[(16, 2, 15), bool],) {
  %1433 = @func_1868() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %1434 = %1433.1;
  (%1434,)
}

def @func_3837() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) {
  %1435 = @func_1276() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %1436 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1437 = %1435.0;
  %1438 = %1436.2;
  (%1437, %1438)
}

def @func_25245() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
  %1439 = @func_12665() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %1440 = %1439.1;
  %1441 = @func_11590() /* ty=Tensor[(480), uint16] */;
  (%1440, %1441)
}

def @func_27805() -> (Tensor[(3, 8, 13), float32],) {
  %1442 = @func_21662() /* ty=(Tensor[(?, 10, 3), float64], Tensor[(3, 8, 13), float32]) */;
  %1443 = %1442.1;
  (%1443,)
}

def @func_16689() -> Tensor[(3, 8, 13), float32] {
  %1444 = @func_14992() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1444.0
}

def @func_16923() -> Tensor[(3, 8, 13), float32] {
  %1445 = @func_10828() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1445.0
}

def @func_18147() -> (Tensor[(3, 8, 13), float32],) {
  %1446 = @func_7601() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1447 = %1446.2;
  (%1447,)
}

def @func_14184(%var_14169: Tensor[(308), uint8]) -> (Tensor[(3, 8, 13), float32], Tensor[(2, 11, 14), bool], Tensor[(308), uint8]) {
  %1448 = @func_8157() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1449 = cast(%var_14169, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %1450 = cast(%var_14169, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %1451 = reshape(%1449, newshape=[2, 11, 14]) /* ty=Tensor[(2, 11, 14), uint8] */;
  %1452 = reshape(%1450, newshape=[2, 11, 14]) /* ty=Tensor[(2, 11, 14), uint8] */;
  %1453 = @func_3522(%1451, %1452) /* ty=(Tensor[(2, 11, 14), bool],) */;
  %1454 = %1448.0;
  %1455 = %1453.0;
  (%1454, %1455, %var_14169)
}

def @func_4635(%var_4620: Tensor[(3, 8, 13), float32]) -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), bool], Tensor[(3, 8, 13), float32]) {
  %1456 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
  %1457 = cast(%var_4620, dtype="bool") /* ty=Tensor[(3, 8, 13), bool] */;
  %1458 = shape_of(%1456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1459 = cast(%1456, dtype="bool") /* ty=Tensor[(3, 8, 13), bool] */;
  %1460 = dyn.reshape(%1457, %1458, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1461 = @func_4051() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1462 = @func_1468() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1463 = greater_equal(%1459, %1460) /* ty=Tensor[(3, 8, 13), bool] */;
  %1464 = %1461.0;
  (%1462, %1463, %1464)
}

def @func_10498() -> (Tensor[(480), uint16],) {
  %1465 = @func_7265() /* ty=Tensor[(480), uint16] */;
  (%1465,)
}

def @func_22280() -> (Tensor[(480), uint16],) {
  %1466 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %1467 = %1466.0;
  (%1467,)
}

def @func_5623(%var_5606: Tensor[(21), int8], %var_5616: Tensor[(3, 7, 9), bool]) -> (Tensor[(16, 2, 15), float64], Tensor[(21), int8], Tensor[(189), int8], Tensor[(3, 7, 9), int64]) {
  %1468 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1469 = cast(%var_5606, dtype="int8") /* ty=Tensor[(21), int8] */;
  %1470 = cast(meta[relay.Constant][37] /* ty=Tensor[(189), int8] */, dtype="int8") /* ty=Tensor[(189), int8] */;
  %1471 = reshape(%1469, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), int8] */;
  %1472 = reshape(%1470, newshape=[3, 7, 9]) /* ty=Tensor[(3, 7, 9), int8] */;
  %1473 = @func_4181(%1471, %1472) /* ty=Tensor[(3, 7, 9), bool] */;
  %1474 = cast(%var_5616, dtype="int64") /* ty=Tensor[(3, 7, 9), int64] */;
  %1475 = shape_of(%1473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1476 = cast(%1473, dtype="int64") /* ty=Tensor[(3, 7, 9), int64] */;
  %1477 = dyn.reshape(%1474, %1475, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1478 = %1468.0;
  %1479 = maximum(%1476, %1477) /* ty=Tensor[(3, 7, 9), int64] */;
  (%1478, %var_5606, meta[relay.Constant][37] /* ty=Tensor[(189), int8] */, %1479)
}

def @func_8128() -> (Tensor[(16, 2, 15), uint16],) {
  %1480 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1481 = %1480.3;
  (%1481,)
}

def @func_9849() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  %1482 = @func_6958() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1483 = @func_6992() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) */;
  %1484 = @func_8157() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1485 = %1482.1;
  %1486 = %1483.1;
  %1487 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1488 = %1484.1;
  (%1485, %1486, %1487, %1488)
}

def @func_18597() -> (Tensor[(3, 8, 13), float32],) {
  %1489 = @func_13522() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1490 = %1489.0;
  (%1490,)
}

def @func_26591() -> (Tensor[(3, 8, 13), float32],) {
  %1491 = @func_25306() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1492 = %1491.0;
  (%1492,)
}

def @func_11561() -> Tensor[(3, 8, 13), float32] {
  %1493 = @func_7462() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1493.0
}

def @func_16523() -> Tensor[(16, 2, 15), bool] {
  %1494 = @func_13642() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */;
  %1494.1
}

def @func_11837() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1495 = @func_2680() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1496 = @func_11613() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %1497 = %1495.0;
  %1498 = %1496.0;
  (%1497, %1498)
}

def @func_17160() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1499 = @func_2914() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1500 = %1499.0;
  %1501 = @func_5872() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1500, %1501)
}

def @func_21928(%var_21915: Tensor[(126), int16]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(14, 3, 3), bool], Tensor[(126), int16]) {
  %1502 = @func_18597() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1503 = @func_21751() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1504 = cast(%var_21915, dtype="int16") /* ty=Tensor[(126), int16] */;
  %1505 = cast(%var_21915, dtype="int16") /* ty=Tensor[(126), int16] */;
  %1506 = reshape(%1504, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %1507 = reshape(%1505, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %1508 = @func_12881(%1506, %1507) /* ty=(Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1509 = %1502.0;
  %1510 = %1503.1;
  %1511 = %1508.0;
  (%1509, %1510, %1511, %var_21915)
}

def @func_21594() -> (Tensor[(3, 8, 13), float32],) {
  %1512 = @func_7565() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1513 = %1512.1;
  (%1513,)
}

def @func_2702() -> (Tensor[(16, 2, 15), bool],) {
  %1514 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1515 = %1514.0;
  (%1515,)
}

def @func_1468() -> Tensor[(16, 2, 15), uint16] {
  %1516 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1516.0
}

def @func_24212() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1517 = @func_14593() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1518 = @func_12665() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %1519 = @func_21751() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1520 = @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1521 = %1517.0;
  %1522 = @func_14345() /* ty=Tensor[(3, 8, 13), float32] */;
  %1523 = @func_10530() /* ty=Tensor[(3, 8, 13), float32] */;
  %1524 = %1518.0;
  %1525 = %1519.1;
  %1526 = %1520.0;
  (%1521, %1522, %1523, %1524, %1525, %1526)
}

def @func_16673(%var_16664: Tensor[(12, 4, 11), float64]) -> Tensor[(12, 4, 11), float64] {
  %1527 = cast(%var_16664, dtype="float64") /* ty=Tensor[(12, 4, 11), float64] */;
  sigmoid(%1527) /* ty=Tensor[(12, 4, 11), float64] */
}

def @func_20110() -> Tensor[(3, 8, 13), float32] {
  @func_3577() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_3577() -> Tensor[(3, 8, 13), float32] {
  @func_3230() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_25924(%var_25910: Tensor[(13, 7, 13), float32]) -> (Tensor[(13, 7, 13), float32],) {
  %1528 = cast(%var_25910, dtype="float32") /* ty=Tensor[(13, 7, 13), float32] */;
  %1529 = asinh(%1528) /* ty=Tensor[(13, 7, 13), float32] */;
  (%1529,)
}

def @func_3300() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1530 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1531 = @func_2702() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1532 = @func_2341() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1533 = %1530.4;
  %1534 = %1531.0;
  %1535 = %1532.0;
  (%1533, %1534, %1535)
}

def @func_20384() -> (Tensor[(3, 8, 13), float32], Tensor[(7, 6, 8), uint16], uint16) {
  %1536 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1537 = cast(meta[relay.Constant][38] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1538 = reshape(%1537, newshape=[]) /* ty=uint16 */;
  %1539 = @func_12491(%1538) /* ty=(Tensor[(7, 6, 8), uint16], Tensor[(3, 8, 13), float32]) */;
  %1540 = %1536.0;
  %1541 = %1539.0;
  (%1540, %1541, meta[relay.Constant][38] /* ty=uint16 */)
}

def @func_12881(%var_12829: Tensor[(14, 3, 3), int16], %var_12830: Tensor[(14, 3, 3), int16]) -> (Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1542 = cast(%var_12830, dtype="bool") /* ty=Tensor[(14, 3, 3), bool] */;
  %1543 = shape_of(%var_12829, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1544 = cast(%var_12829, dtype="bool") /* ty=Tensor[(14, 3, 3), bool] */;
  %1545 = dyn.reshape(%1542, %1543, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1546 = @func_8945() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1547 = less(%1544, %1545) /* ty=Tensor[(14, 3, 3), bool] */;
  %1548 = @func_4986() /* ty=Tensor[(16, 2, 15), bool] */;
  %1549 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1550 = %1546.0;
  %1551 = @func_5491() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1547, %1548, %1549, %1550, %1551)
}

def @func_2756() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %1552 = @func_2612() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1553 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %1554 = %1552.0;
  %1555 = %1553.1;
  (%1554, %1555)
}

def @func_17086(%var_17039: Tensor[(7, 3), int8], %var_17040: Tensor[(189), int8]) -> (Tensor[(3, 8, 13), float32], Tensor[(7, 3), int8], Tensor[(3, 8, 13), float32], Tensor[(3, 7, 9), bool], Tensor[(40, 12), uint16]) {
  %1556 = @func_11852() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1557 = cast(%var_17039, dtype="int8") /* ty=Tensor[(7, 3), int8] */;
  %1558 = cast(%var_17040, dtype="int8") /* ty=Tensor[(189), int8] */;
  %1559 = reshape(%1557, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), int8] */;
  %1560 = reshape(%1558, newshape=[3, 7, 9]) /* ty=Tensor[(3, 7, 9), int8] */;
  %1561 = @func_4181(%1559, %1560) /* ty=Tensor[(3, 7, 9), bool] */;
  %1562 = cast(%var_17040, dtype="bool") /* ty=Tensor[(189), bool] */;
  %1563 = shape_of(%1561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1564 = cast(%1561, dtype="bool") /* ty=Tensor[(3, 7, 9), bool] */;
  %1565 = dyn.reshape(%1562, %1563, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1566 = @func_8879() /* ty=(Tensor[(40, 12), uint16],) */;
  %1567 = @func_14345() /* ty=Tensor[(3, 8, 13), float32] */;
  %1568 = %1556.0;
  %1569 = logical_or(%1564, %1565) /* ty=Tensor[(3, 7, 9), bool] */;
  %1570 = %1566.0;
  (%1567, %var_17039, %1568, %1569, %1570)
}

def @func_11060() -> (Tensor[(3, 8, 13), float32],) {
  %1571 = @func_8357() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1572 = %1571.0;
  (%1572,)
}

def @func_4275() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) {
  %1573 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1574 = %1573.0;
  %1575 = @func_3887() /* ty=Tensor[(16, 2, 15), float32] */;
  %1576 = cast(%1575, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
  %1577 = shape_of(%1574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1578 = cast(%1574, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
  %1579 = dyn.reshape(%1576, %1577, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1580 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
  %1581 = floor_divide(%1578, %1579) /* ty=Tensor[(16, 2, 15), float32] */;
  (%1580, %1581)
}

def @func_22242() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) {
  %1582 = @func_5121() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %1583 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1584 = @func_7565() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1585 = @func_10451() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) */;
  %1586 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1587 = @func_10028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */;
  %1588 = %1582.1;
  %1589 = %1583.0;
  %1590 = %1584.1;
  %1591 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
  %1592 = %1585.5;
  %1593 = %1586.2;
  %1594 = %1587.3;
  (%1588, %1589, %1590, %1591, %1592, %1593, %1594)
}

def @func_22860(%var_22835: Tensor[(308), uint8]) -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(308), uint8]) {
  %1595 = @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */;
  %1596 = cast(%var_22835, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %1597 = reshape(%1596, newshape=[308]) /* ty=Tensor[(308), uint8] */;
  %1598 = @func_14184(%1597) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(2, 11, 14), bool], Tensor[(308), uint8]) */;
  %1599 = %1595.5;
  %1600 = @func_20228() /* ty=Tensor[(3, 8, 13), float32] */;
  %1601 = %1598.0;
  (%1599, %1600, %1601, %var_22835)
}

def @func_16566() -> (Tensor[(120, 8), uint16],) {
  %1602 = @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */;
  %1603 = %1602.1;
  (%1603,)
}

def @func_5455() -> (Tensor[(3, 8, 13), float32],) {
  %1604 = @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1605 = %1604.0;
  (%1605,)
}

def @func_7969() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1606 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1607 = @func_5455() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1608 = %1606.0;
  %1609 = %1607.0;
  (%1608, %1609)
}

def @func_24127(%var_24116: uint16) -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], uint16) {
  %1610 = @func_18384() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1611 = cast(%var_24116, dtype="uint16") /* ty=uint16 */;
  %1612 = reshape(%1611, newshape=[]) /* ty=uint16 */;
  %1613 = @func_12491(%1612) /* ty=(Tensor[(7, 6, 8), uint16], Tensor[(3, 8, 13), float32]) */;
  %1614 = %1610.0;
  %1615 = %1613.1;
  (%1614, %1615, %var_24116)
}

def @func_8216(%var_8205: Tensor[(2160), float64]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 15, 9), float64], Tensor[(2160), float64], Tensor[(16, 2, 15), uint16]) {
  %1616 = cast(%var_8205, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %1617 = reshape(%1616, newshape=[16, 15, 9]) /* ty=Tensor[(16, 15, 9), float64] */;
  %1618 = @func_7812(%1617) /* ty=(Tensor[(16, 15, 9), float64],) */;
  %1619 = @func_1453() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1620 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
  %1621 = %1618.0;
  %1622 = %1619.3;
  (%1620, %1621, %var_8205, %1622)
}

def @func_4181(%var_4175: Tensor[(3, 7, 1), int8], %var_4176: Tensor[(3, 7, 9), int8]) -> Tensor[(3, 7, 9), bool] {
  %1623 = cast(%var_4175, dtype="bool") /* ty=Tensor[(3, 7, 1), bool] */;
  %1624 = cast(%var_4176, dtype="bool") /* ty=Tensor[(3, 7, 9), bool] */;
  less_equal(%1623, %1624) /* ty=Tensor[(3, 7, 9), bool] */
}

def @func_17666() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  %1625 = @func_6451() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1626 = @func_8838() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %1627 = %1625.0;
  %1628 = @func_5491() /* ty=Tensor[(3, 8, 13), float32] */;
  %1629 = %1626.1;
  (%1627, %1628, %1629)
}

def @func_17846() -> (Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %1630 = @func_11590() /* ty=Tensor[(480), uint16] */;
  %1631 = @func_10642() /* ty=Tensor[(16, 2, 15), float32] */;
  %1632 = @func_7279() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1630, %1631, %1632)
}

def @func_11349() -> Tensor[(16, 2, 15), int32] {
  @func_3925() /* ty=Tensor[(16, 2, 15), int32] */
}

def @func_1068(%var_1016: Tensor[(16, 2, 15), uint16]) -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  %1633 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1634 = %1633.0;
  %1635 = cast(%var_1016, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
  %1636 = shape_of(%1634, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1637 = cast(%1634, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
  %1638 = dyn.reshape(%1635, %1636, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1639 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1640 = cast(%1634, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
  %1641 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1642 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1643 = less(%1637, %1638) /* ty=Tensor[(16, 2, 15), bool] */;
  %1644 = %1639.0;
  %1645 = log10(%1640) /* ty=Tensor[(16, 2, 15), float32] */;
  %1646 = %1641.1;
  %1647 = %1642.0;
  (%1643, %1644, %1645, %1646, %1647)
}

def @func_2480() -> Tensor[(3, 8, 13), float32] {
  %1648 = @func_1453() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1648.0
}

def @func_10828() -> (Tensor[(3, 8, 13), float32],) {
  %1649 = @func_5872() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1649,)
}

def @func_13282() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1650 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1651 = %1650.0;
  %1652 = @func_10642() /* ty=Tensor[(16, 2, 15), float32] */;
  (%1651, %1652)
}

def @func_16254() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
  %1653 = @func_10118() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %1654 = @func_8838() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %1655 = %1653.0;
  %1656 = %1654.1;
  (%1655, %1656)
}

def @func_11666() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1657 = @func_5222() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1658 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %1659 = %1657.1;
  %1660 = %1658.1;
  (%1659, %1660)
}

def @func_22071(%var_22042: Tensor[(960), uint16]) -> (Tensor[(3, 8, 13), float32], Tensor[(24, 10), float32], Tensor[(960), uint16], Tensor[(240), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) {
  %1661 = @func_9049() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1662 = cast(%var_22042, dtype="uint16") /* ty=Tensor[(960), uint16] */;
  %1663 = cast(meta[relay.Constant][39] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1664 = reshape(%1662, newshape=[480, 2]) /* ty=Tensor[(480, 2), uint16] */;
  %1665 = reshape(%1663, newshape=[24, 10]) /* ty=Tensor[(24, 10), float32] */;
  %1666 = @func_2964(%1664, %1665) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480, 2), float64], Tensor[(480, 2), int64], Tensor[(16, 2, 15), bool], Tensor[(480, 1), float64], Tensor[(3, 8, 13), int16], Tensor[(24, 10), float32]) */;
  %1667 = @func_20223() /* ty=(Tensor[(3, 8, 13), int16],) */;
  %1668 = %1661.0;
  %1669 = %1666.6;
  %1670 = @func_21727() /* ty=Tensor[(3, 8, 13), float32] */;
  %1671 = %1667.0;
  (%1668, %1669, %var_22042, meta[relay.Constant][39] /* ty=Tensor[(240), float32] */, %1670, %1671)
}

def @func_254(%var_249: Tensor[(16, 2, 15), uint16]) -> Tensor[(16, 2, 15), uint16] {
  %1672 = cast(meta[relay.Constant][40] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1673 = cast(%var_249, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  bitwise_or(%1672, %1673) /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_9049() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %1674 = @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1675 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1676 = %1675.0;
  %1677 = cast(%1676, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
  %1678 = @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */;
  %1679 = %1674.0;
  %1680 = asinh(%1677) /* ty=Tensor[(16, 2, 15), float32] */;
  %1681 = %1678.4;
  (%1679, %1680, %1681)
}

def @func_28143() -> Tensor[(3, 8, 13), float32] {
  %1682 = @func_5332() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) */;
  %1682.1
}

def @func_22887() -> Tensor[(3, 8, 13), float32] {
  @func_3230() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_3451(%var_3440: Tensor[(16, 2, 15), uint16]) -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32]) {
  %1683 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1684 = %1683.0;
  %1685 = cast(%var_3440, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
  %1686 = shape_of(%1684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1687 = cast(%1684, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
  %1688 = dyn.reshape(%1685, %1686, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1689 = cast(%1684, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
  %1690 = less_equal(%1687, %1688) /* ty=Tensor[(16, 2, 15), bool] */;
  %1691 = log(%1689) /* ty=Tensor[(16, 2, 15), float32] */;
  (%1690, %1691)
}

def @func_26884(%var_26824: Tensor[(7, 5, 1), uint8], %var_26825: Tensor[(7, 5, 8), uint8]) -> (Tensor[(7, 5, 8), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) {
  %1692 = cast(%var_26824, dtype="bool") /* ty=Tensor[(7, 5, 1), bool] */;
  %1693 = cast(%var_26825, dtype="bool") /* ty=Tensor[(7, 5, 8), bool] */;
  %1694 = @func_12360() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1695 = @func_21369() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */;
  %1696 = greater(%1692, %1693) /* ty=Tensor[(7, 5, 8), bool] */;
  %1697 = %1694.0;
  %1698 = %1695.1;
  (%1696, %1697, %1698)
}

def @func_21159() -> Tensor[(3, 8, 13), float32] {
  %1699 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
  %1699.3
}

def @func_28152() -> (Tensor[(16, 2, 15), uint16],) {
  %1700 = @func_3053() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1701 = %1700.0;
  (%1701,)
}

def @func_3759() -> (Tensor[(40, 12), float64],) {
  %1702 = @func_2796() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */;
  %1703 = %1702.0;
  %1704 = cast(%1703, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %1705 = sqrt(%1704) /* ty=Tensor[(40, 12), float64] */;
  (%1705,)
}

def @func_25395() -> (Tensor[(16, 2, 15), bool],) {
  %1706 = @func_8838() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %1707 = %1706.1;
  (%1707,)
}

def @func_13481() -> (Tensor[(16, 2, 15), bool],) {
  %1708 = @func_7733() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %1709 = %1708.2;
  (%1709,)
}

def @func_10190() -> (Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) {
  %1710 = @func_2719() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1711 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %1712 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
  %1713 = %1710.0;
  %1714 = %1711.1;
  %1715 = @func_2168() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%1712, %1713, %1714, %1715)
}

def @func_13139() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %1716 = @func_12686() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1717 = @func_5872() /* ty=Tensor[(3, 8, 13), float32] */;
  %1718 = @func_8452() /* ty=Tensor[(16, 2, 15), float32] */;
  %1719 = %1716.2;
  (%1717, %1718, %1719)
}

def @func_8367() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) {
  %1720 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %1721 = @func_3300() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %1722 = %1720.0;
  %1723 = %1721.1;
  (%1722, %1723)
}

def @func_7672() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
  %1724 = @func_2914() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1725 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %1726 = %1724.0;
  %1727 = %1725.0;
  (%1726, %1727)
}

def @func_5937(%var_5890: Tensor[(8, 2, 1), int64], %var_5891: Tensor[(8, 2, 7), int64], %var_5897: Tensor[(480), uint16]) -> (Tensor[(8, 2, 7), int64], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(8, 2, 7), float32], Tensor[(40, 12), uint16]) {
  %1728 = cast(%var_5890, dtype="int64") /* ty=Tensor[(8, 2, 1), int64] */;
  %1729 = cast(%var_5891, dtype="int64") /* ty=Tensor[(8, 2, 7), int64] */;
  %1730 = cast(%var_5897, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %1731 = cast(%var_5897, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %1732 = reshape(%1730, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %1733 = reshape(%1731, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1734 = @func_629(%1732, %1733) /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1735 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1736 = cast(%var_5891, dtype="float32") /* ty=Tensor[(8, 2, 7), float32] */;
  %1737 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %1738 = minimum(%1728, %1729) /* ty=Tensor[(8, 2, 7), int64] */;
  %1739 = %1734.1;
  %1740 = %1735.1;
  %1741 = log10(%1736) /* ty=Tensor[(8, 2, 7), float32] */;
  %1742 = %1737.2;
  (%1738, %1739, %var_5897, %1740, %1741, %1742)
}

def @func_27367() -> Tensor[(3, 8, 13), float32] {
  @func_22017() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_27994() -> Tensor[(16, 2, 15), uint16] {
  %1743 = @func_12686() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1743.1
}

def @func_26636() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) {
  %1744 = @func_17255() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %1745 = @func_16939() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */;
  %1746 = %1744.0;
  %1747 = %1745.1;
  (%1746, %1747)
}

def @func_14992() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1748 = @func_7601() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1749 = @func_2341() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1750 = %1748.2;
  %1751 = %1749.0;
  (%1750, %1751)
}

def @func_20331() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) {
  %1752 = @func_11443() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %1753 = @func_7565() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1754 = %1752.0;
  %1755 = @func_13845() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1756 = @func_11349() /* ty=Tensor[(16, 2, 15), int32] */;
  %1757 = %1753.0;
  (%1754, %1755, %1756, %1757)
}

def @func_24665() -> Tensor[(40, 12), int8] {
  %1758 = @func_9543() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %1759 = %1758.1;
  %1760 = cast(meta[relay.Constant][41] /* ty=Tensor[(40, 12), float64] */, dtype="int8") /* ty=Tensor[(40, 12), int8] */;
  %1761 = shape_of(%1759, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1762 = cast(%1759, dtype="int8") /* ty=Tensor[(40, 12), int8] */;
  %1763 = dyn.reshape(%1760, %1761, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  bitwise_or(%1762, %1763) /* ty=Tensor[(40, 12), int8] */
}

def @func_8157() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %1764 = @func_5332() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) */;
  %1765 = @func_5828() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %1766 = %1764.2;
  %1767 = %1765.1;
  (%1766, %1767)
}

def @func_15192() -> (Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) {
  %1768 = @func_5455() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1769 = @func_5019() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
  %1770 = %1768.0;
  %1771 = %1769.1;
  (%1770, %1771)
}

def @func_8945() -> (Tensor[(3, 8, 13), float32],) {
  %1772 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %1773 = %1772.0;
  (%1773,)
}

def @func_18101() -> (Tensor[(40, 12), float32], Tensor[(40, 12), float32]) {
  %1774 = @func_17121() /* ty=(Tensor[(40, 12), bool], Tensor[(40, 12), float32], Tensor[(40, 12), float32]) */;
  %1775 = %1774.0;
  %1776 = cast(%1775, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %1777 = cast(%1775, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %1778 = atanh(%1776) /* ty=Tensor[(40, 12), float32] */;
  %1779 = log(%1777) /* ty=Tensor[(40, 12), float32] */;
  (%1778, %1779)
}

def @func_27648() -> Tensor[(3, 8, 13), float32] {
  @func_21474() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_3230() -> Tensor[(3, 8, 13), float32] {
  %1780 = @func_2719() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1780.1
}

def @func_2086() -> (Tensor[(16, 2, 15), uint16],) {
  %1781 = @func_1276() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %1782 = %1781.0;
  (%1782,)
}

def @func_7565() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1783 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1784 = @func_5872() /* ty=Tensor[(3, 8, 13), float32] */;
  %1785 = %1783.0;
  (%1784, %1785)
}

def @func_21751() -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %1786 = @func_11714() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1787 = @func_2622() /* ty=Tensor[(16, 2, 15), float32] */;
  %1788 = %1786.0;
  (%1787, %1788)
}

def @func_4746(%var_4736: Tensor[(12, 15, 8), uint64], %var_4737: Tensor[(12, 15, 8), uint64]) -> (Tensor[(12, 15, 8), uint64],) {
  %1789 = cast(%var_4737, dtype="uint64") /* ty=Tensor[(12, 15, 8), uint64] */;
  %1790 = shape_of(%var_4736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1791 = cast(%var_4736, dtype="uint64") /* ty=Tensor[(12, 15, 8), uint64] */;
  %1792 = dyn.reshape(%1789, %1790, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1793 = maximum(%1791, %1792) /* ty=Tensor[(12, 15, 8), uint64] */;
  (%1793,)
}

def @func_9331() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1794 = @func_7733() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %1795 = @func_5332() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) */;
  %1796 = %1794.2;
  %1797 = %1795.2;
  (%1796, %1797)
}

def @func_18752() -> Tensor[(3, 8, 13), int16] {
  @func_8384() /* ty=Tensor[(3, 8, 13), int16] */
}

def @func_29087() -> Tensor[(3, 8, 13), float32] {
  %1798 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %1798.1
}

def @func_13612() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1799 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1800 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
  %1801 = %1799.0;
  %1802 = @func_3351() /* ty=Tensor[(3, 8, 13), float32] */;
  %1803 = @func_10642() /* ty=Tensor[(16, 2, 15), float32] */;
  (%1800, %1801, %1802, %1803)
}

def @func_20785(%var_20760: Tensor[(2, 4, 1), int64]) -> (Tensor[(2, 4, 13), int64], Tensor[(3, 8, 13), float32]) {
  %1804 = cast(%var_20760, dtype="int64") /* ty=Tensor[(2, 4, 1), int64] */;
  %1805 = cast(meta[relay.Constant][42] /* ty=Tensor[(2, 4, 13), int64] */, dtype="int64") /* ty=Tensor[(2, 4, 13), int64] */;
  %1806 = @func_13212() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) */;
  %1807 = bitwise_and(%1804, %1805) /* ty=Tensor[(2, 4, 13), int64] */;
  %1808 = %1806.0;
  (%1807, %1808)
}

def @func_21474() -> Tensor[(3, 8, 13), float32] {
  %1809 = @func_7672() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %1809.0
}

def @func_17271() -> (Tensor[(16, 2, 15), uint16],) {
  %1810 = @func_1468() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%1810,)
}

def @func_19552(%var_19549: Tensor[(2560), float32]) -> (Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(2560), float32]) {
  %1811 = @func_19399() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1812 = @func_3053() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1813 = @func_11613() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %1814 = cast(%var_19549, dtype="float32") /* ty=Tensor[(2560), float32] */;
  %1815 = reshape(%1814, newshape=[2560]) /* ty=Tensor[(2560), float32] */;
  %1816 = @func_14945(%1815) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 16, 10), float32], Tensor[(2560), float32]) */;
  %1817 = %1811.0;
  %1818 = %1812.0;
  %1819 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
  %1820 = %1813.1;
  %1821 = %1816.1;
  (%1817, %1818, %1819, %1820, %1821, %var_19549)
}

def @func_29388() -> (Tensor[(3, 8, 13), float32],) {
  %1822 = @func_20856() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1822,)
}

def @func_10290(%var_10243: Tensor[(1440), uint64]) -> (Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(1440), uint64], Tensor[(40, 12), float64]) {
  %1823 = @func_2796() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */;
  %1824 = cast(%var_10243, dtype="uint64") /* ty=Tensor[(1440), uint64] */;
  %1825 = cast(%var_10243, dtype="uint64") /* ty=Tensor[(1440), uint64] */;
  %1826 = reshape(%1824, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), uint64] */;
  %1827 = reshape(%1825, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), uint64] */;
  %1828 = @func_4746(%1826, %1827) /* ty=(Tensor[(12, 15, 8), uint64],) */;
  %1829 = @func_3759() /* ty=(Tensor[(40, 12), float64],) */;
  %1830 = %1823.1;
  %1831 = %1828.0;
  %1832 = %1829.0;
  (%1830, %1831, %var_10243, %1832)
}

def @func_25109() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1833 = @func_15228() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(960, 2), uint16]) */;
  %1834 = @func_2612() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1835 = %1833.0;
  %1836 = %1834.0;
  (%1835, %1836)
}

def @func_8256() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32]) {
  %1837 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %1838 = @func_3887() /* ty=Tensor[(16, 2, 15), float32] */;
  %1839 = %1837.1;
  (%1838, %1839)
}

def @func_796() -> (Tensor[(3, 8, 13), float32],) {
  %1840 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1840,)
}

def @func_7621() -> (Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), float64]) {
  %1841 = @func_4107() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1842 = @func_4107() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1843 = %1841.0;
  %1844 = %1842.0;
  (%1843, %1844)
}

def @func_24412() -> (Tensor[(3, 8, 13), float32],) {
  %1845 = @func_14651() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1846 = %1845.1;
  (%1846,)
}

def @func_28116() -> Tensor[(3, 8, 13), float32] {
  %1847 = @func_13282() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %1847.0
}

def @func_17121() -> (Tensor[(40, 12), bool], Tensor[(40, 12), float32], Tensor[(40, 12), float32]) {
  %1848 = @func_5019() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
  %1849 = %1848.1;
  %1850 = cast(meta[relay.Constant][43] /* ty=Tensor[(40, 12), float64] */, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
  %1851 = shape_of(%1849, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1852 = cast(%1849, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
  %1853 = dyn.reshape(%1850, %1851, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1854 = cast(%1849, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %1855 = cast(meta[relay.Constant][43] /* ty=Tensor[(40, 12), float64] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %1856 = equal(%1852, %1853) /* ty=Tensor[(40, 12), bool] */;
  %1857 = sigmoid(%1854) /* ty=Tensor[(40, 12), float32] */;
  %1858 = sin(%1855) /* ty=Tensor[(40, 12), float32] */;
  (%1856, %1857, %1858)
}

def @func_29340() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(7, 6, 8), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(6, 16, 10), float64], Tensor[(1, 960), float64], Tensor[(297), float64]) {
  %1859 = @func_7171() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1860 = @func_9049() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1861 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %1862 = cast(meta[relay.Constant][44] /* ty=Tensor[(297), float64] */, dtype="float64") /* ty=Tensor[(297), float64] */;
  %1863 = reshape(%1862, newshape=[297]) /* ty=Tensor[(297), float64] */;
  %1864 = @func_27488(%1863) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(11, 3, 9), float64], Tensor[(297), float64]) */;
  %1865 = @func_20384() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(7, 6, 8), uint16], uint16) */;
  %1866 = %1865.1;
  %1867 = cast(%1866, dtype="float64") /* ty=Tensor[(7, 6, 8), float64] */;
  %1868 = @func_19794() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1869 = cast(meta[relay.Constant][45] /* ty=Tensor[(1, 960), float64] */, dtype="float64") /* ty=Tensor[(1, 960), float64] */;
  %1870 = reshape(%1869, newshape=[6, 16, 10]) /* ty=Tensor[(6, 16, 10), float64] */;
  %1871 = @func_5757(%1870) /* ty=(Tensor[(6, 16, 10), float64], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1872 = cast(meta[relay.Constant][44] /* ty=Tensor[(297), float64] */, dtype="float64") /* ty=Tensor[(297), float64] */;
  %1873 = %1859.0;
  %1874 = %1860.0;
  %1875 = %1861.1;
  %1876 = %1864.0;
  %1877 = log(%1867) /* ty=Tensor[(7, 6, 8), float64] */;
  %1878 = @func_15247() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1879 = %1868.0;
  %1880 = %1871.0;
  %1881 = tan(%1872) /* ty=Tensor[(297), float64] */;
  (%1873, %1874, %1875, %1876, %1877, %1878, %1879, %1880, meta[relay.Constant][45] /* ty=Tensor[(1, 960), float64] */, %1881)
}

def @func_27911() -> (Tensor[(16, 2, 15), bool],) {
  %1882 = @func_9678() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) */;
  %1883 = %1882.2;
  (%1883,)
}

def @func_22435() -> (Tensor[(16, 2, 15), uint16], Tensor[(40, 12), float64]) {
  %1884 = @func_1778() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */;
  %1885 = %1884.2;
  %1886 = cast(%1885, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %1887 = @func_11262() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1888 = acos(%1886) /* ty=Tensor[(40, 12), float64] */;
  (%1887, %1888)
}

def @func_14593() -> (Tensor[(3, 8, 13), float32],) {
  %1889 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1889,)
}

def @func_12686() -> (Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1890 = @func_1453() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1891 = @func_2756() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1892 = @func_7265() /* ty=Tensor[(480), uint16] */;
  %1893 = %1890.3;
  %1894 = %1891.0;
  (%1892, %1893, %1894)
}

def @func_27162() -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1895 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %1896 = @func_25109() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1897 = @func_2612() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1898 = %1895.1;
  %1899 = %1896.0;
  %1900 = %1897.0;
  (%1898, %1899, %1900)
}

def @func_18557() -> (Tensor[(16, 2, 15), uint16], float64, Tensor[(16, 2, 15), float32]) {
  %1901 = @func_4960() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), int16]) */;
  %1902 = @func_18079() /* ty=(Tensor[(16, 2, 15), bool], float64, float64, Tensor[(3, 8, 13), float32]) */;
  %1903 = @func_17846() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1904 = %1901.0;
  %1905 = %1902.2;
  %1906 = %1903.1;
  (%1904, %1905, %1906)
}

def @func_5366() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
  %1907 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1908 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %1909 = %1907.0;
  %1910 = %1908.0;
  (%1909, %1910)
}

def @func_18507() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1911 = @func_6117() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1912 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1913 = @func_4051() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1914 = %1911.0;
  %1915 = %1912.0;
  %1916 = %1913.0;
  (%1914, %1915, %1916)
}

def @func_4960() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), int16]) {
  %1917 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1918 = @func_2719() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1919 = %1917.0;
  %1920 = %1918.2;
  %1921 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
  (%1919, %1920, %1921)
}

def @func_5686(%var_5645: float64, %var_5646: Tensor[(7, 15, 9), float64]) -> (Tensor[(7, 15, 9), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1922 = cast(%var_5645, dtype="bool") /* ty=bool */;
  %1923 = cast(%var_5646, dtype="bool") /* ty=Tensor[(7, 15, 9), bool] */;
  %1924 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1925 = @func_4275() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) */;
  %1926 = @func_5332() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) */;
  %1927 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1928 = greater_equal(%1922, %1923) /* ty=Tensor[(7, 15, 9), bool] */;
  %1929 = %1924.1;
  %1930 = %1925.1;
  %1931 = %1926.2;
  %1932 = %1927.0;
  %1933 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1928, %1929, %1930, %1931, %1932, %1933)
}

def @func_3681() -> Tensor[(16, 2, 15), float32] {
  @func_2622() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_25139() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1934 = @func_7224() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1935 = @func_10828() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1936 = %1934.2;
  %1937 = %1935.0;
  %1938 = @func_3887() /* ty=Tensor[(16, 2, 15), float32] */;
  (%1936, %1937, %1938)
}

def @func_11775() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) {
  %1939 = @func_5019() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
  %1940 = @func_4107() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1941 = %1939.0;
  %1942 = %1940.0;
  (%1941, %1942)
}

def @func_4404() -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  %1943 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %1944 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %1945 = %1943.0;
  %1946 = %1944.2;
  (%1945, %1946)
}

def @func_3100() -> (Tensor[(3, 8, 13), float32],) {
  %1947 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1948 = %1947.0;
  (%1948,)
}

def @func_28386() -> (Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) {
  %1949 = @func_2796() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */;
  %1950 = @func_27079() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %1951 = %1949.0;
  %1952 = %1950.0;
  (%1951, %1952)
}

def @func_27204() -> (Tensor[(480), uint16],) {
  %1953 = @func_7265() /* ty=Tensor[(480), uint16] */;
  (%1953,)
}

def @func_28330() -> Tensor[(3, 8, 13), float32] {
  @func_7470() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_17255() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1954 = @func_11313() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1955 = @func_13642() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */;
  %1956 = %1954.2;
  %1957 = %1955.0;
  (%1956, %1957)
}

def @func_14693() -> (Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) {
  %1958 = @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1959 = @func_10596() /* ty=(Tensor[(40, 12), float64], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %1960 = %1958.1;
  %1961 = %1959.0;
  (%1960, %1961)
}

def @func_5222() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %1962 = @func_2425() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %1963 = @func_3053() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1964 = %1962.0;
  %1965 = %1963.0;
  (%1964, %1965)
}

def @func_12505() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1966 = @func_11714() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1967 = @func_10682() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %1968 = %1966.0;
  %1969 = %1967.1;
  (%1968, %1969)
}

def @func_16833() -> Tensor[(3, 8, 13), float32] {
  %1970 = @func_12077() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(16, 160), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1970.4
}

def @func_18235() -> Tensor[(16, 2, 15), bool] {
  %1971 = @func_5828() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %1971.0
}

def @func_9426() -> (Tensor[(3, 8, 13), float32],) {
  %1972 = @func_5491() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1972,)
}

def @func_11131() -> Tensor[(16, 2, 15), bool] {
  %1973 = @func_7345() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1973.0
}

def @func_10118() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) {
  %1974 = @func_4705() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1975 = @func_8753() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1976 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1977 = %1974.0;
  %1978 = %1975.0;
  %1979 = %1976.0;
  (%1977, %1978, %1979)
}

def @func_19399() -> (Tensor[(16, 2, 15), float64],) {
  %1980 = @func_14675() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) */;
  %1981 = %1980.1;
  (%1981,)
}

def @func_26500() -> (Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) {
  %1982 = @func_19399() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1983 = %1982.0;
  %1984 = @func_25174() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%1983, %1984)
}

def @func_25351() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  %1985 = @func_21594() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1986 = @func_11837() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %1987 = %1985.0;
  %1988 = %1986.0;
  (%1987, %1988)
}

def @func_19230(%var_19215: Tensor[(11, 3, 14), int64]) -> (Tensor[(11, 3, 14), bool],) {
  %1989 = cast(%var_19215, dtype="bool") /* ty=Tensor[(11, 3, 14), bool] */;
  %1990 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(11, 3, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1991 = cast(meta[relay.Constant][46] /* ty=Tensor[(11, 3, 14), int64] */, dtype="bool") /* ty=Tensor[(11, 3, 14), bool] */;
  %1992 = dyn.reshape(%1989, %1990, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1993 = not_equal(%1991, %1992) /* ty=Tensor[(11, 3, 14), bool] */;
  (%1993,)
}

def @func_1711() -> Tensor[(16, 2, 15), uint16] {
  %1994 = @func_1453() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1994.1
}

def @func_434() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1995 = cast(meta[relay.Constant][47] /* ty=Tensor[(480), uint16] */, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %1996 = reshape(%1995, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1997 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %1998 = cast(%1997, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  %1999 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %2000 = @func_254(%1996) /* ty=Tensor[(16, 2, 15), uint16] */;
  %2001 = erf(%1998) /* ty=Tensor[(3, 8, 13), float32] */;
  %2002 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1999, %2000, meta[relay.Constant][47] /* ty=Tensor[(480), uint16] */, %2001, %2002)
}

def @func_3475(%var_3464: Tensor[(11, 5, 12), float64], %var_3465: Tensor[(11, 5, 12), float64]) -> (Tensor[(11, 5, 12), float64],) {
  %2003 = cast(%var_3465, dtype="float64") /* ty=Tensor[(11, 5, 12), float64] */;
  %2004 = shape_of(%var_3464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2005 = cast(%var_3464, dtype="float64") /* ty=Tensor[(11, 5, 12), float64] */;
  %2006 = dyn.reshape(%2003, %2004, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %2007 = floor_mod(%2005, %2006) /* ty=Tensor[(11, 5, 12), float64] */;
  (%2007,)
}

def @func_29022() -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) {
  %2008 = @func_21751() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %2009 = %2008.0;
  %2010 = cast(%2009, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %2011 = reshape(%2010, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %2012 = @func_5051(%2011) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) */;
  %2013 = @func_20331() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) */;
  %2014 = @func_8480() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %2015 = @func_10078() /* ty=Tensor[(3, 8, 13), float32] */;
  %2016 = %2012.0;
  %2017 = @func_13845() /* ty=Tensor[(16, 2, 15), uint16] */;
  %2018 = @func_28720() /* ty=Tensor[(16, 2, 15), bool] */;
  %2019 = %2013.2;
  %2020 = %2014.1;
  (%2009, %2015, %2016, %2017, %2018, %2019, %2020)
}

def @func_3666() -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32]) {
  %2021 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %2022 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
  %2023 = %2021.0;
  (%2022, %2023)
}

def @func_2052() -> Tensor[(3, 8, 13), float32] {
  %2024 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %2024.0
}

def @func_26408() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %2025 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %2026 = %2025.0;
  %2027 = @func_20856() /* ty=Tensor[(3, 8, 13), float32] */;
  (%2026, %2027)
}

def @func_28483() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
  %2028 = @func_25395() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %2029 = @func_18451() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %2030 = @func_9105() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %2031 = %2028.0;
  %2032 = %2029.0;
  %2033 = %2030.0;
  (%2031, %2032, %2033)
}

def @main(%var_29514: Tensor[(3, 9, 2), float64], %var_29522: Tensor[(39), uint8]) -> (Tensor[(3, 9, 2), float64], Tensor[(16, 2, 15), int32], Tensor[(39), uint8], Tensor[(16, 2, 15), uint16], Tensor[(3, 9, 2), float32]) {
  %2034 = cast(%var_29514, dtype="float64") /* ty=Tensor[(3, 9, 2), float64] */;
  %2035 = cast(%var_29522, dtype="uint8") /* ty=Tensor[(39), uint8] */;
  %2036 = reshape(%2035, newshape=[39]) /* ty=Tensor[(39), uint8] */;
  %2037 = @func_11890(%2036) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) */;
  %2038 = cast(%var_29514, dtype="float32") /* ty=Tensor[(3, 9, 2), float32] */;
  %2039 = sqrt(%2034) /* ty=Tensor[(3, 9, 2), float64] */;
  %2040 = %2037.1;
  %2041 = @func_11623() /* ty=Tensor[(16, 2, 15), uint16] */;
  %2042 = atanh(%2038) /* ty=Tensor[(3, 9, 2), float32] */;
  (%2039, %2040, %var_29522, %2041, %2042)
}

def @func_386() -> Tensor[(3, 8, 13), float32] {
  %2043 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 8, 13), float32] */, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  acosh(%2043) /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_27748() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %2044 = @func_14593() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %2045 = @func_11262() /* ty=Tensor[(16, 2, 15), uint16] */;
  %2046 = %2044.0;
  (%2045, %2046)
}

def @func_27329(%var_27312: Tensor[(2160), float64]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 15, 9), float64], Tensor[(2160), float64], Tensor[(3, 8, 13), float32]) {
  %2047 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %2048 = cast(%var_27312, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %2049 = reshape(%2048, newshape=[16, 15, 9]) /* ty=Tensor[(16, 15, 9), float64] */;
  %2050 = @func_7812(%2049) /* ty=(Tensor[(16, 15, 9), float64],) */;
  %2051 = @func_25351() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %2052 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  %2053 = %2047.0;
  %2054 = %2050.0;
  %2055 = %2051.0;
  (%2052, %2053, %2054, %var_27312, %2055)
}

def @func_10530() -> Tensor[(3, 8, 13), float32] {
  %2056 = @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %2056.1
}

def @func_17864() -> (Tensor[(3, 8, 13), float32],) {
  %2057 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %2058 = %2057.0;
  (%2058,)
}

def @func_1778() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) {
  %2059 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %2060 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %2061 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %2062 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %2063 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %2064 = @func_1468() /* ty=Tensor[(16, 2, 15), uint16] */;
  %2065 = cast(%2064, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %2066 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %2067 = %2059.0;
  %2068 = %2060.2;
  %2069 = %2061.0;
  %2070 = %2062.2;
  %2071 = %2063.2;
  %2072 = rsqrt(%2065) /* ty=Tensor[(16, 2, 15), float64] */;
  (%2066, %2067, %2068, %2069, %2070, %2071, %2072)
}

def @func_18118() -> Tensor[(16, 2, 15), uint16] {
  %2073 = @func_17271() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %2073.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_19945(%var_19944: Tensor[(126), int16]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(480), uint16], Tensor[(126), int16], Tensor[(2160), float64], Tensor[(16, 15, 9), float64]) {
  %14 = fn (%var_19894: Tensor[(126), int16]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(480), uint16], Tensor[(126), int16], Tensor[(2160), float64], Tensor[(16, 15, 9), float64]) {
    %0 = @func_17160() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1 = @func_15228() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(960, 2), uint16]) */;
    %2 = cast(%var_19894, dtype="int16") /* ty=Tensor[(126), int16] */;
    %3 = reshape(%2, newshape=[126]) /* ty=Tensor[(126), int16] */;
    %4 = @func_15412(%3) /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(126), int16]) */;
    %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(2160), float64] */, dtype="float64") /* ty=Tensor[(2160), float64] */;
    %6 = reshape(%5, newshape=[16, 15, 9]) /* ty=Tensor[(16, 15, 9), float64] */;
    %7 = @func_7812(%6) /* ty=(Tensor[(16, 15, 9), float64],) */;
    %8 = %7.0;
    %9 = cast(%8, dtype="float64") /* ty=Tensor[(16, 15, 9), float64] */;
    %10 = %0.1;
    %11 = %1.1;
    %12 = %4.0;
    %13 = sigmoid(%9) /* ty=Tensor[(16, 15, 9), float64] */;
    (%10, %11, %12, %var_19894, meta[relay.Constant][0] /* ty=Tensor[(2160), float64] */, %13)
  };
  %14(%var_19944) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(480), uint16], Tensor[(126), int16], Tensor[(2160), float64], Tensor[(16, 15, 9), float64]) */
}

def @func_4960() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), int16]) {
  %15 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %16 = @func_2719() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %17 = %15.0;
  %18 = %16.2;
  %19 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
  (%17, %18, %19)
}

def @func_26935() -> (Tensor[(39), uint8], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(2560), float32]) {
  %20 = @func_22648() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(2560), float32] */, dtype="float32") /* ty=Tensor[(2560), float32] */;
  %22 = reshape(%21, newshape=[2, 1280]) /* ty=Tensor[(2, 1280), float32] */;
  %23 = @func_15869(%22) /* ty=(Tensor[(40, 12), uint16], Tensor[(16, 2, 15), uint16], Tensor[(2560), float32], Tensor[(2, 1280), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %24 = @func_17804() /* ty=Tensor[(39), uint8] */;
  %25 = %20.0;
  %26 = %23.1;
  (%24, %25, %26, meta[relay.Constant][1] /* ty=Tensor[(2560), float32] */)
}

def @func_6119() -> (Tensor[(3, 8, 13), float32],) {
  @func_6117() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_6321(%var_6319: Tensor[(11, 16, 1), int16], %var_6320: Tensor[(11, 16, 13), int16]) -> (Tensor[(11, 16, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(8, 60), uint16], Tensor[(3, 8, 13), float32]) {
  %37 = fn (%var_6288: Tensor[(11, 16, 1), int16], %var_6289: Tensor[(11, 16, 13), int16]) -> (Tensor[(11, 16, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(8, 60), uint16], Tensor[(3, 8, 13), float32]) {
    %27 = cast(%var_6288, dtype="int16") /* ty=Tensor[(11, 16, 1), int16] */;
    %28 = cast(%var_6289, dtype="int16") /* ty=Tensor[(11, 16, 13), int16] */;
    %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 60), uint16] */, dtype="uint16") /* ty=Tensor[(8, 60), uint16] */;
    %30 = reshape(%29, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 60), uint16] */, dtype="uint16") /* ty=Tensor[(8, 60), uint16] */;
    %32 = reshape(%31, newshape=[480]) /* ty=Tensor[(480), uint16] */;
    %33 = @func_1116(%32) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(480), uint16]) */;
    %34 = left_shift(%27, %28) /* ty=Tensor[(11, 16, 13), int16] */;
    %35 = @func_254(%30) /* ty=Tensor[(16, 2, 15), uint16] */;
    %36 = %33.1;
    (%34, %35, meta[relay.Constant][2] /* ty=Tensor[(8, 60), uint16] */, %36)
  };
  %37(%var_6319, %var_6320) /* ty=(Tensor[(11, 16, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(8, 60), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_14054() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %38 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %39 = @func_8989() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %40 = %38.0;
  %41 = %39.0;
  (%40, %41)
}

def @func_7266() -> Tensor[(480), uint16] {
  %43 = fn () -> Tensor[(480), uint16] {
    %42 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %42.3
  };
  %43() /* ty=Tensor[(480), uint16] */
}

def @func_25924(%var_25910: Tensor[(13, 7, 13), float32]) -> (Tensor[(13, 7, 13), float32],) {
  %44 = cast(%var_25910, dtype="float32") /* ty=Tensor[(13, 7, 13), float32] */;
  %45 = asinh(%44) /* ty=Tensor[(13, 7, 13), float32] */;
  (%45,)
}

def @func_21663() -> (Tensor[(?, 10, 3), float64], Tensor[(3, 8, 13), float32]) {
  %53 = fn () -> (Tensor[(?, 10, 3), float64], Tensor[(3, 8, 13), float32]) {
    %46 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 3), float64] */;
    %47 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(1, 10, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %48 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 10, 3), float64] */;
    %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %50 = @func_18147() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %51 = power(%48, %49) /* ty=Tensor[(?, 10, 3), float64] */;
    %52 = %50.0;
    (%51, %52)
  };
  %53() /* ty=(Tensor[(?, 10, 3), float64], Tensor[(3, 8, 13), float32]) */
}

def @func_3926() -> Tensor[(16, 2, 15), int32] {
  %55 = fn () -> Tensor[(16, 2, 15), int32] {
    %54 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
    %54.1
  };
  %55() /* ty=Tensor[(16, 2, 15), int32] */
}

def @func_10643() -> Tensor[(16, 2, 15), float32] {
  %57 = fn () -> Tensor[(16, 2, 15), float32] {
    %56 = @func_6958() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
    %56.0
  };
  %57() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_12688() -> (Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  @func_12686() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_26199() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_26197() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_17804() -> Tensor[(39), uint8] {
  %58 = @func_17395() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) */;
  %58.3
}

def @func_15058() -> (Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32]) {
  @func_15056() /* ty=(Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32]) */
}

def @func_19233(%var_19231: Tensor[(11, 3, 14), int64]) -> (Tensor[(11, 3, 14), bool],) {
  @func_19230(%var_19231) /* ty=(Tensor[(11, 3, 14), bool],) */
}

def @func_7970() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %63 = fn () -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
    %59 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %60 = @func_5455() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %61 = %59.0;
    %62 = %60.0;
    (%61, %62)
  };
  %63() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_11180() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %70 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
    %64 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %65 = @func_6191() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %66 = @func_7224() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
    %67 = %64.4;
    %68 = %65.0;
    %69 = %66.1;
    (%67, %68, %69)
  };
  %70() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_17000() -> Tensor[(16, 2, 15), bool] {
  %71 = @func_13481() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %71.0
}

def @func_27616() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  @func_27614() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_28152() -> (Tensor[(16, 2, 15), uint16],) {
  %72 = @func_3053() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %73 = %72.0;
  (%73,)
}

def @func_2132() -> (Tensor[(16, 2, 15), uint16],) {
  %74 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %75 = %74.0;
  (%75,)
}

def @func_435() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %84 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
    %76 = cast(meta[relay.Constant][5] /* ty=Tensor[(480), uint16] */, dtype="uint16") /* ty=Tensor[(480), uint16] */;
    %77 = reshape(%76, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %78 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
    %79 = cast(%78, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
    %80 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
    %81 = @func_254(%77) /* ty=Tensor[(16, 2, 15), uint16] */;
    %82 = erf(%79) /* ty=Tensor[(3, 8, 13), float32] */;
    %83 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
    (%80, %81, meta[relay.Constant][5] /* ty=Tensor[(480), uint16] */, %82, %83)
  };
  %84() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_11349() -> Tensor[(16, 2, 15), int32] {
  @func_3925() /* ty=Tensor[(16, 2, 15), int32] */
}

def @func_8258() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32]) {
  @func_8256() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32]) */
}

def @func_15192() -> (Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) {
  %85 = @func_5455() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %86 = @func_5019() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
  %87 = %85.0;
  %88 = %86.1;
  (%87, %88)
}

def @func_8128() -> (Tensor[(16, 2, 15), uint16],) {
  %89 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %90 = %89.3;
  (%90,)
}

def @func_20708() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(960), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
  %105 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(960), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
    %91 = @func_17395() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) */;
    %92 = cast(meta[relay.Constant][6] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
    %93 = reshape(%92, newshape=[6, 16, 10]) /* ty=Tensor[(6, 16, 10), float64] */;
    %94 = @func_5757(%93) /* ty=(Tensor[(6, 16, 10), float64], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) */;
    %95 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %96 = @func_11443() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
    %97 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %98 = @func_5174() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %99 = %91.1;
    %100 = %94.1;
    %101 = %95.1;
    %102 = %96.1;
    %103 = %97.0;
    %104 = %98.2;
    (%99, %100, meta[relay.Constant][6] /* ty=Tensor[(960), float64] */, %101, %102, %103, %104)
  };
  %105() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(960), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) */
}

def @func_26253(%var_26252: Tensor[(20, 72), uint64]) -> (Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(20, 72), uint64]) {
  %111 = fn (%var_26239: Tensor[(20, 72), uint64]) -> (Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(20, 72), uint64]) {
    %106 = cast(%var_26239, dtype="uint64") /* ty=Tensor[(20, 72), uint64] */;
    %107 = reshape(%106, newshape=[360, 4]) /* ty=Tensor[(360, 4), uint64] */;
    %108 = @func_19624(%107) /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(12, 15, 8), uint64], Tensor[(360, 4), uint64]) */;
    %109 = @func_10855() /* ty=Tensor[(3, 8, 13), float32] */;
    %110 = %108.1;
    (%109, %110, %var_26239)
  };
  %111(%var_26252) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(20, 72), uint64]) */
}

def @func_9333() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  @func_9331() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_15869(%var_15843: Tensor[(2, 1280), float32]) -> (Tensor[(40, 12), uint16], Tensor[(16, 2, 15), uint16], Tensor[(2560), float32], Tensor[(2, 1280), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %112 = @func_2796() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */;
  %113 = @func_5121() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %114 = cast(%var_15843, dtype="float32") /* ty=Tensor[(2, 1280), float32] */;
  %115 = reshape(%114, newshape=[2560]) /* ty=Tensor[(2560), float32] */;
  %116 = @func_14945(%115) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 16, 10), float32], Tensor[(2560), float32]) */;
  %117 = @func_9049() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %118 = %112.0;
  %119 = %113.2;
  %120 = %116.2;
  %121 = @func_2168() /* ty=Tensor[(16, 2, 15), uint16] */;
  %122 = %117.0;
  (%118, %119, %120, %var_15843, %121, %122)
}

def @func_27912() -> (Tensor[(16, 2, 15), bool],) {
  %125 = fn () -> (Tensor[(16, 2, 15), bool],) {
    %123 = @func_9678() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) */;
    %124 = %123.2;
    (%124,)
  };
  %125() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_9575() -> (Tensor[(16, 2, 15), float32], Tensor[(480), uint16]) {
  @func_9573() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(480), uint16]) */
}

def @func_21931(%var_21929: Tensor[(126), int16]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(14, 3, 3), bool], Tensor[(126), int16]) {
  @func_21928(%var_21929) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(14, 3, 3), bool], Tensor[(126), int16]) */
}

def @func_4962() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), int16]) {
  @func_4960() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), int16]) */
}

def @func_11313() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %126 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %127 = @func_10792() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %128 = %126.0;
  %129 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
  %130 = %127.2;
  (%128, %129, %130)
}

def @func_8677(%var_8676: Tensor[(3, 13, 1), uint8]) -> (Tensor[(3, 13, 1), bool],) {
  %134 = fn (%var_8660: Tensor[(3, 13, 1), uint8]) -> (Tensor[(3, 13, 1), bool],) {
    %131 = cast(meta[relay.Constant][7] /* ty=uint8 */, dtype="bool") /* ty=bool */;
    %132 = cast(%var_8660, dtype="bool") /* ty=Tensor[(3, 13, 1), bool] */;
    %133 = less_equal(%131, %132) /* ty=Tensor[(3, 13, 1), bool] */;
    (%133,)
  };
  %134(%var_8676) /* ty=(Tensor[(3, 13, 1), bool],) */
}

def @func_6368() -> Tensor[(3, 8, 13), float32] {
  %135 = fn () -> Tensor[(3, 8, 13), float32] {
    @func_5872() /* ty=Tensor[(3, 8, 13), float32] */
  };
  %135() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_3054() -> (Tensor[(16, 2, 15), uint16],) {
  %137 = fn () -> (Tensor[(16, 2, 15), uint16],) {
    %136 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
    (%136,)
  };
  %137() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_2576(%var_2574: Tensor[(3, 2, 11), uint64], %var_2575: Tensor[(3, 2, 11), uint64]) -> (Tensor[(3, 2, 11), bool],) {
  %148 = fn (%var_2541: Tensor[(3, 2, 11), uint64], %var_2561: Tensor[(3, 2, 11), uint64]) -> (Tensor[(3, 2, 11), bool],) {
    %138 = cast(meta[relay.Constant][8] /* ty=Tensor[(3, 2, 11), uint64] */, dtype="uint64") /* ty=Tensor[(3, 2, 11), uint64] */;
    %139 = shape_of(%var_2541, dtype="int32") /* ty=Tensor[(3), int32] */;
    %140 = cast(%var_2541, dtype="uint64") /* ty=Tensor[(3, 2, 11), uint64] */;
    %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %142 = bitwise_or(%140, %141) /* ty=Tensor[(3, 2, 11), uint64] */;
    %143 = cast(%var_2561, dtype="bool") /* ty=Tensor[(3, 2, 11), bool] */;
    %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(3), int32] */;
    %145 = cast(%142, dtype="bool") /* ty=Tensor[(3, 2, 11), bool] */;
    %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %147 = greater_equal(%145, %146) /* ty=Tensor[(3, 2, 11), bool] */;
    (%147,)
  };
  %148(%var_2574, %var_2575) /* ty=(Tensor[(3, 2, 11), bool],) */
}

def @func_21161() -> Tensor[(3, 8, 13), float32] {
  @func_21159() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_5213() -> (Tensor[(3, 8, 13), float32],) {
  @func_5211() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_8452() -> Tensor[(16, 2, 15), float32] {
  @func_2029() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_5830() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) {
  @func_5828() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */
}

def @func_20536() -> (Tensor[(16, 2, 15), int32],) {
  %151 = fn () -> (Tensor[(16, 2, 15), int32],) {
    %149 = @func_13186() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), int16]) */;
    %150 = %149.0;
    (%150,)
  };
  %151() /* ty=(Tensor[(16, 2, 15), int32],) */
}

def @func_26692(%var_26691: Tensor[(40, 12), float32]) -> (Tensor[(40, 12), bool], Tensor[(3, 8, 13), float32], Tensor[(40, 12), float32], Tensor[(16, 2, 15), bool]) {
  %165 = fn (%var_26660: Tensor[(40, 12), float32]) -> (Tensor[(40, 12), bool], Tensor[(3, 8, 13), float32], Tensor[(40, 12), float32], Tensor[(16, 2, 15), bool]) {
    %152 = @func_5332() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) */;
    %153 = %152.3;
    %154 = cast(%153, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
    %155 = log2(%154) /* ty=Tensor[(40, 12), float32] */;
    %156 = cast(%var_26660, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
    %157 = shape_of(%155, dtype="int32") /* ty=Tensor[(2), int32] */;
    %158 = cast(%155, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
    %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %160 = cast(%155, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
    %161 = logical_and(%158, %159) /* ty=Tensor[(40, 12), bool] */;
    %162 = @func_18209() /* ty=Tensor[(3, 8, 13), float32] */;
    %163 = atan(%160) /* ty=Tensor[(40, 12), float32] */;
    %164 = @func_20613() /* ty=Tensor[(16, 2, 15), bool] */;
    (%161, %162, %163, %164)
  };
  %165(%var_26691) /* ty=(Tensor[(40, 12), bool], Tensor[(3, 8, 13), float32], Tensor[(40, 12), float32], Tensor[(16, 2, 15), bool]) */
}

def @func_18079() -> (Tensor[(16, 2, 15), bool], float64, float64, Tensor[(3, 8, 13), float32]) {
  %166 = @func_8753() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %167 = cast(8.5536f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %168 = reshape(%167, newshape=[]) /* ty=float64 */;
  %169 = @func_10319(%168) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], float64, Tensor[(945), float64]) */;
  %170 = %166.0;
  %171 = %169.2;
  %172 = @func_10078() /* ty=Tensor[(3, 8, 13), float32] */;
  (%170, %171, 8.5536f64 /* ty=float64 */, %172)
}

def @func_27272(%var_27270: Tensor[(9, 7, 2), float64], %var_27271: Tensor[(9, 7, 2), float64]) -> Tensor[(9, 7, 2), float64] {
  %177 = fn (%var_27251: Tensor[(9, 7, 2), float64], %var_27252: Tensor[(9, 7, 2), float64]) -> Tensor[(9, 7, 2), float64] {
    %173 = cast(%var_27252, dtype="float64") /* ty=Tensor[(9, 7, 2), float64] */;
    %174 = shape_of(%var_27251, dtype="int32") /* ty=Tensor[(3), int32] */;
    %175 = cast(%var_27251, dtype="float64") /* ty=Tensor[(9, 7, 2), float64] */;
    %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%175, %176) /* ty=Tensor[(9, 7, 2), float64] */
  };
  %177(%var_27270, %var_27271) /* ty=Tensor[(9, 7, 2), float64] */
}

def @func_9545() -> (Tensor[(16, 2, 15), uint16], Tensor[(40, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  @func_9543() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_7226() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  @func_7224() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */
}

def @func_15172(%var_15170: uint16) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], uint16, Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_15169(%var_15170) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], uint16, Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_12905(%var_12897: Tensor[(126), int16]) -> (Tensor[(16, 16, 10), float32], Tensor[(14, 3, 3), bool], Tensor[(126), int16]) {
  %178 = @func_12077() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(16, 160), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %179 = cast(%var_12897, dtype="int16") /* ty=Tensor[(126), int16] */;
  %180 = cast(%var_12897, dtype="int16") /* ty=Tensor[(126), int16] */;
  %181 = reshape(%179, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %182 = reshape(%180, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %183 = @func_12881(%181, %182) /* ty=(Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %184 = %178.2;
  %185 = %183.0;
  (%184, %185, %var_12897)
}

def @func_25175() -> Tensor[(16, 2, 15), uint16] {
  %187 = fn () -> Tensor[(16, 2, 15), uint16] {
    %186 = @func_10118() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
    %186.0
  };
  %187() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_15169(%var_15136: uint16) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], uint16, Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %188 = @func_4705() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %189 = cast(%var_15136, dtype="uint16") /* ty=uint16 */;
  %190 = reshape(%189, newshape=[]) /* ty=uint16 */;
  %191 = @func_12491(%190) /* ty=(Tensor[(7, 6, 8), uint16], Tensor[(3, 8, 13), float32]) */;
  %192 = @func_6191() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %193 = @func_3351() /* ty=Tensor[(3, 8, 13), float32] */;
  %194 = %188.0;
  %195 = %191.1;
  %196 = %192.0;
  %197 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  (%193, %194, %195, %var_15136, %196, %197)
}

def @func_8028() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %198 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %199 = %198.0;
  %200 = @func_7470() /* ty=Tensor[(3, 8, 13), float32] */;
  (%199, %200)
}

def @func_27806() -> (Tensor[(3, 8, 13), float32],) {
  %203 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %201 = @func_21662() /* ty=(Tensor[(?, 10, 3), float64], Tensor[(3, 8, 13), float32]) */;
    %202 = %201.1;
    (%202,)
  };
  %203() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_7735() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) {
  @func_7733() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */
}

def @func_15229() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(960, 2), uint16]) {
  %210 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(960, 2), uint16]) {
    %204 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
    %205 = cast(meta[relay.Constant][9] /* ty=Tensor[(960, 2), uint16] */, dtype="uint16") /* ty=Tensor[(960, 2), uint16] */;
    %206 = reshape(%205, newshape=[480, 4]) /* ty=Tensor[(480, 4), uint16] */;
    %207 = @func_14111(%206) /* ty=(Tensor[(3, 8, 13), int16], Tensor[(480, 4), int16]) */;
    %208 = %204.2;
    %209 = %207.0;
    (%208, %209, meta[relay.Constant][9] /* ty=Tensor[(960, 2), uint16] */)
  };
  %210() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(960, 2), uint16]) */
}

def @func_20821() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(126), int16]) {
  %219 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(126), int16]) {
    %211 = @func_10682() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
    %212 = cast(meta[relay.Constant][10] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %213 = cast(meta[relay.Constant][10] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
    %214 = reshape(%212, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
    %215 = reshape(%213, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
    %216 = @func_12881(%214, %215) /* ty=(Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %217 = %211.0;
    %218 = %216.4;
    (%217, %218, meta[relay.Constant][10] /* ty=Tensor[(126), int16] */)
  };
  %219() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(126), int16]) */
}

def @func_23737() -> Tensor[(16, 2, 15), float64] {
  @func_19681() /* ty=Tensor[(16, 2, 15), float64] */
}

def @func_23971() -> (Tensor[(3, 8, 13), float32],) {
  %222 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %220 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %221 = %220.0;
    (%221,)
  };
  %222() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_9426() -> (Tensor[(3, 8, 13), float32],) {
  %223 = @func_5491() /* ty=Tensor[(3, 8, 13), float32] */;
  (%223,)
}

def @func_15705() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %232 = fn () -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
    %224 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
    %225 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %226 = @func_12353() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %227 = @func_4275() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) */;
    %228 = %224.3;
    %229 = %225.0;
    %230 = %226.1;
    %231 = %227.1;
    (%228, %229, %230, %231)
  };
  %232() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */
}

def @func_7464() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_7462() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_8622() -> (Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32]) {
  @func_8620() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32]) */
}

def @func_17496() -> (Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float32]) {
  %238 = fn () -> (Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float32]) {
    %233 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %234 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %235 = @func_11590() /* ty=Tensor[(480), uint16] */;
    %236 = %233.0;
    %237 = %234.0;
    (%235, %236, %237)
  };
  %238() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float32]) */
}

def @func_3231() -> Tensor[(3, 8, 13), float32] {
  %240 = fn () -> Tensor[(3, 8, 13), float32] {
    %239 = @func_2719() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %239.1
  };
  %240() /* ty=Tensor[(3, 8, 13), float32] */
}

def @main(%var_29514: Tensor[(3, 9, 2), float64], %var_29522: Tensor[(39), uint8]) -> (Tensor[(3, 9, 2), float64], Tensor[(16, 2, 15), int32], Tensor[(39), uint8], Tensor[(16, 2, 15), uint16], Tensor[(3, 9, 2), float32]) {
  %241 = cast(%var_29514, dtype="float64") /* ty=Tensor[(3, 9, 2), float64] */;
  %242 = cast(%var_29522, dtype="uint8") /* ty=Tensor[(39), uint8] */;
  %243 = reshape(%242, newshape=[39]) /* ty=Tensor[(39), uint8] */;
  %244 = @func_11892(%243) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) */;
  %245 = cast(%var_29514, dtype="float32") /* ty=Tensor[(3, 9, 2), float32] */;
  %246 = sqrt(%241) /* ty=Tensor[(3, 9, 2), float64] */;
  %247 = %244.1;
  %248 = @func_11623() /* ty=Tensor[(16, 2, 15), uint16] */;
  %249 = atanh(%245) /* ty=Tensor[(3, 9, 2), float32] */;
  (%246, %247, %var_29522, %248, %249)
}

def @func_29151() -> (Tensor[(3, 8, 13), float32],) {
  %250 = @func_14651() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %251 = %250.0;
  (%251,)
}

def @func_1071(%var_1069: Tensor[(16, 2, 15), uint16]) -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  @func_1068(%var_1069) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */
}

def @func_22019() -> Tensor[(3, 8, 13), float32] {
  @func_22017() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_27204() -> (Tensor[(480), uint16],) {
  %252 = @func_7265() /* ty=Tensor[(480), uint16] */;
  (%252,)
}

def @func_21371() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) {
  @func_21369() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */
}

def @func_29153() -> (Tensor[(3, 8, 13), float32],) {
  @func_29151() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_28549() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 12, 2), float32]) {
  %257 = fn () -> (Tensor[(16, 2, 15), bool], Tensor[(3, 12, 2), float32]) {
    %253 = @func_17976() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %254 = @func_16939() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */;
    %255 = %253.0;
    %256 = %254.1;
    (%255, %256)
  };
  %257() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 12, 2), float32]) */
}

def @func_5828() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) {
  %258 = @func_4960() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), int16]) */;
  %259 = @func_4986() /* ty=Tensor[(16, 2, 15), bool] */;
  %260 = %258.0;
  (%259, %260)
}

def @func_21752() -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %264 = fn () -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
    %261 = @func_11714() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %262 = @func_2622() /* ty=Tensor[(16, 2, 15), float32] */;
    %263 = %261.0;
    (%262, %263)
  };
  %264() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_2030() -> Tensor[(16, 2, 15), float32] {
  %267 = fn () -> Tensor[(16, 2, 15), float32] {
    %265 = @func_1468() /* ty=Tensor[(16, 2, 15), uint16] */;
    %266 = cast(%265, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
    acosh(%266) /* ty=Tensor[(16, 2, 15), float32] */
  };
  %267() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_17806() -> Tensor[(39), uint8] {
  @func_17804() /* ty=Tensor[(39), uint8] */
}

def @func_20230() -> Tensor[(3, 8, 13), float32] {
  @func_20228() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_2086() -> (Tensor[(16, 2, 15), uint16],) {
  %268 = @func_1276() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %269 = %268.0;
  (%269,)
}

def @func_20647() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %274 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
    %270 = @func_6958() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
    %271 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %272 = %270.1;
    %273 = %271.0;
    (%272, %273)
  };
  %274() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_2680() -> (Tensor[(16, 2, 15), bool],) {
  %275 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %276 = %275.0;
  (%276,)
}

def @func_15412(%var_15384: Tensor[(126), int16]) -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(126), int16]) {
  %277 = @func_10498() /* ty=(Tensor[(480), uint16],) */;
  %278 = cast(%var_15384, dtype="int16") /* ty=Tensor[(126), int16] */;
  %279 = cast(%var_15384, dtype="int16") /* ty=Tensor[(126), int16] */;
  %280 = reshape(%278, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %281 = reshape(%279, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %282 = @func_12881(%280, %281) /* ty=(Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %283 = %277.0;
  %284 = %282.4;
  (%283, %284, %var_15384)
}

def @func_1469() -> Tensor[(16, 2, 15), uint16] {
  %286 = fn () -> Tensor[(16, 2, 15), uint16] {
    %285 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %285.0
  };
  %286() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_7812(%var_7808: Tensor[(16, 15, 9), float64]) -> (Tensor[(16, 15, 9), float64],) {
  %287 = cast(%var_7808, dtype="float64") /* ty=Tensor[(16, 15, 9), float64] */;
  %288 = cosh(%287) /* ty=Tensor[(16, 15, 9), float64] */;
  (%288,)
}

def @func_22436() -> (Tensor[(16, 2, 15), uint16], Tensor[(40, 12), float64]) {
  %294 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(40, 12), float64]) {
    %289 = @func_1778() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */;
    %290 = %289.2;
    %291 = cast(%290, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
    %292 = @func_11262() /* ty=Tensor[(16, 2, 15), uint16] */;
    %293 = acos(%291) /* ty=Tensor[(40, 12), float64] */;
    (%292, %293)
  };
  %294() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), float64]) */
}

def @func_9049() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %295 = @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %296 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %297 = %296.0;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
  %299 = @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */;
  %300 = %295.0;
  %301 = asinh(%298) /* ty=Tensor[(16, 2, 15), float32] */;
  %302 = %299.4;
  (%300, %301, %302)
}

def @func_11561() -> Tensor[(3, 8, 13), float32] {
  %303 = @func_7462() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %303.0
}

def @func_22881() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  @func_22879() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */
}

def @func_3352() -> Tensor[(3, 8, 13), float32] {
  %305 = fn () -> Tensor[(3, 8, 13), float32] {
    %304 = @func_2425() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
    %304.0
  };
  %305() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_13944() -> (Tensor[(16, 2, 15), float32], Tensor[(480), uint16]) {
  %308 = fn () -> (Tensor[(16, 2, 15), float32], Tensor[(480), uint16]) {
    %306 = @func_5395() /* ty=Tensor[(16, 2, 15), float32] */;
    %307 = @func_7265() /* ty=Tensor[(480), uint16] */;
    (%306, %307)
  };
  %308() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(480), uint16]) */
}

def @func_28722() -> Tensor[(16, 2, 15), bool] {
  @func_28720() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_27206() -> (Tensor[(480), uint16],) {
  @func_27204() /* ty=(Tensor[(480), uint16],) */
}

def @func_20857() -> Tensor[(3, 8, 13), float32] {
  %310 = fn () -> Tensor[(3, 8, 13), float32] {
    %309 = @func_5455() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %309.0
  };
  %310() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_9051() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  @func_9049() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_24214() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_24212() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_1006() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %327 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
    %311 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %312 = cast(meta[relay.Constant][11] /* ty=Tensor[(40, 12), uint16] */, dtype="uint16") /* ty=Tensor[(40, 12), uint16] */;
    %313 = reshape(%312, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %314 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %315 = %314.1;
    %316 = cast(meta[relay.Constant][11] /* ty=Tensor[(40, 12), uint16] */, dtype="int32") /* ty=Tensor[(40, 12), int32] */;
    %317 = shape_of(%315, dtype="int32") /* ty=Tensor[(3), int32] */;
    %318 = cast(%315, dtype="int32") /* ty=Tensor[(16, 2, 15), int32] */;
    %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %320 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %321 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %322 = %311.2;
    %323 = @func_254(%313) /* ty=Tensor[(16, 2, 15), uint16] */;
    %324 = subtract(%318, %319) /* ty=Tensor[(16, 2, 15), int32] */;
    %325 = %320.1;
    %326 = %321.2;
    (%322, %323, %324, %325, %326)
  };
  %327() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_10741() -> Tensor[(16, 2, 15), float32] {
  %329 = fn () -> Tensor[(16, 2, 15), float32] {
    %328 = @func_9573() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(480), uint16]) */;
    %328.0
  };
  %329() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_27081() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  @func_27079() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */
}

def @func_18235() -> Tensor[(16, 2, 15), bool] {
  %330 = @func_5828() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %330.0
}

def @func_3479(%var_3477: Tensor[(11, 5, 12), float64], %var_3478: Tensor[(11, 5, 12), float64]) -> (Tensor[(11, 5, 12), float64],) {
  @func_3475(%var_3477, %var_3478) /* ty=(Tensor[(11, 5, 12), float64],) */
}

def @func_19794() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %331 = @func_15961() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %332 = @func_16184() /* ty=Tensor[(3, 8, 13), float32] */;
  %333 = %331.1;
  (%332, %333)
}

def @func_3804() -> (Tensor[(480), uint16],) {
  @func_3802() /* ty=(Tensor[(480), uint16],) */
}

def @func_21729() -> Tensor[(3, 8, 13), float32] {
  @func_21727() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_29502() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_29500() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_25821(%var_25820: Tensor[(11, 3, 9), float64]) -> (Tensor[(11, 3, 9), float64],) {
  %336 = fn (%var_25815: Tensor[(11, 3, 9), float64]) -> (Tensor[(11, 3, 9), float64],) {
    %334 = cast(%var_25815, dtype="float64") /* ty=Tensor[(11, 3, 9), float64] */;
    %335 = sigmoid(%334) /* ty=Tensor[(11, 3, 9), float64] */;
    (%335,)
  };
  %336(%var_25820) /* ty=(Tensor[(11, 3, 9), float64],) */
}

def @func_23988() -> (Tensor[(3, 8, 13), float32],) {
  @func_23986() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_4276() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) {
  %346 = fn () -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) {
    %337 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
    %338 = %337.0;
    %339 = @func_3887() /* ty=Tensor[(16, 2, 15), float32] */;
    %340 = cast(%339, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
    %341 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
    %342 = cast(%338, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
    %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %344 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
    %345 = floor_divide(%342, %343) /* ty=Tensor[(16, 2, 15), float32] */;
    (%344, %345)
  };
  %346() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) */
}

def @func_16833() -> Tensor[(3, 8, 13), float32] {
  %347 = @func_12077() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(16, 160), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %347.4
}

def @func_3101() -> (Tensor[(3, 8, 13), float32],) {
  %350 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %348 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %349 = %348.0;
    (%349,)
  };
  %350() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_25688() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) {
  %351 = @func_11443() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %352 = @func_10642() /* ty=Tensor[(16, 2, 15), float32] */;
  %353 = %351.1;
  (%352, %353)
}

def @func_10322(%var_10320: float64) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], float64, Tensor[(945), float64]) {
  @func_10319(%var_10320) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], float64, Tensor[(945), float64]) */
}

def @func_20363() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  @func_20361() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_23623() -> (Tensor[(16, 2, 15), float32],) {
  %354 = @func_2875() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %355 = %354.0;
  (%355,)
}

def @func_15961() -> (Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  %356 = @func_4107() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %357 = @func_2612() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %358 = @func_11443() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %359 = %356.0;
  %360 = %357.0;
  %361 = %358.1;
  (%359, %360, %361)
}

def @func_19230(%var_19215: Tensor[(11, 3, 14), int64]) -> (Tensor[(11, 3, 14), bool],) {
  %362 = cast(%var_19215, dtype="bool") /* ty=Tensor[(11, 3, 14), bool] */;
  %363 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(11, 3, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 3, 14), int64] */, dtype="bool") /* ty=Tensor[(11, 3, 14), bool] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %366 = not_equal(%364, %365) /* ty=Tensor[(11, 3, 14), bool] */;
  (%366,)
}

def @func_28484() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
  %373 = fn () -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
    %367 = @func_25395() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %368 = @func_18451() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %369 = @func_9105() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %370 = %367.0;
    %371 = %368.0;
    %372 = %369.0;
    (%370, %371, %372)
  };
  %373() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) */
}

def @func_4746(%var_4736: Tensor[(12, 15, 8), uint64], %var_4737: Tensor[(12, 15, 8), uint64]) -> (Tensor[(12, 15, 8), uint64],) {
  %374 = cast(%var_4737, dtype="uint64") /* ty=Tensor[(12, 15, 8), uint64] */;
  %375 = shape_of(%var_4736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %376 = cast(%var_4736, dtype="uint64") /* ty=Tensor[(12, 15, 8), uint64] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %378 = maximum(%376, %377) /* ty=Tensor[(12, 15, 8), uint64] */;
  (%378,)
}

def @func_11837() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %379 = @func_2680() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %380 = @func_11613() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %381 = %379.0;
  %382 = %380.0;
  (%381, %382)
}

def @func_11905() -> Tensor[(3, 8, 13), float32] {
  @func_10078() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_6775() -> (Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) {
  @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */
}

def @func_9849() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  %383 = @func_6958() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %384 = @func_6992() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) */;
  %385 = @func_8157() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %386 = %383.1;
  %387 = %384.1;
  %388 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  %389 = %385.1;
  (%386, %387, %388, %389)
}

def @func_8879() -> (Tensor[(40, 12), uint16],) {
  %390 = @func_1276() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %391 = %390.1;
  (%391,)
}

def @func_16676(%var_16674: Tensor[(12, 4, 11), float64]) -> Tensor[(12, 4, 11), float64] {
  @func_16673(%var_16674) /* ty=Tensor[(12, 4, 11), float64] */
}

def @func_15940() -> (Tensor[(480), uint16],) {
  @func_15938() /* ty=(Tensor[(480), uint16],) */
}

def @func_8309() -> Tensor[(16, 2, 15), uint16] {
  @func_8307() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_28292() -> (Tensor[(3, 8, 13), float32],) {
  @func_28290() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_19315() -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  @func_19313() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_3578() -> Tensor[(3, 8, 13), float32] {
  %392 = fn () -> Tensor[(3, 8, 13), float32] {
    @func_3230() /* ty=Tensor[(3, 8, 13), float32] */
  };
  %392() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_23090() -> Tensor[(16, 2, 15), uint16] {
  @func_23088() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_24212() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %393 = @func_14593() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %394 = @func_12665() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %395 = @func_21751() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %396 = @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %397 = %393.0;
  %398 = @func_14345() /* ty=Tensor[(3, 8, 13), float32] */;
  %399 = @func_10530() /* ty=Tensor[(3, 8, 13), float32] */;
  %400 = %394.0;
  %401 = %395.1;
  %402 = %396.0;
  (%397, %398, %399, %400, %401, %402)
}

def @func_18508() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %409 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
    %403 = @func_6117() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %404 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %405 = @func_4051() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %406 = %403.0;
    %407 = %404.0;
    %408 = %405.0;
    (%406, %407, %408)
  };
  %409() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_5491() -> Tensor[(3, 8, 13), float32] {
  %410 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %410.1
}

def @func_18941(%var_18918: Tensor[(40, 12), float64]) -> (Tensor[(40, 12), float64], Tensor[(9, 7, 2), float32], Tensor[(126), float32], Tensor[(16, 2, 15), uint16]) {
  %411 = @func_15192() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
  %412 = %411.1;
  %413 = cast(%var_18918, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %414 = shape_of(%412, dtype="int32") /* ty=Tensor[(2), int32] */;
  %415 = cast(%412, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %417 = cast(meta[relay.Constant][13] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %418 = reshape(%417, newshape=[9, 7, 2]) /* ty=Tensor[(9, 7, 2), float32] */;
  %419 = @func_14270(%418) /* ty=(Tensor[(9, 7, 2), float32],) */;
  %420 = @func_4960() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), int16]) */;
  %421 = floor_divide(%415, %416) /* ty=Tensor[(40, 12), float64] */;
  %422 = %419.0;
  %423 = %420.0;
  (%421, %422, meta[relay.Constant][13] /* ty=Tensor[(126), float32] */, %423)
}

def @func_10030() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) {
  @func_10028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */
}

def @func_25734() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), float32]) {
  @func_25732() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), float32]) */
}

def @func_2252() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) {
  %432 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) {
    %424 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
    %425 = cast(meta[relay.Constant][14] /* ty=Tensor[(480, 1), uint16] */, dtype="uint16") /* ty=Tensor[(480, 1), uint16] */;
    %426 = reshape(%425, newshape=[480]) /* ty=Tensor[(480), uint16] */;
    %427 = @func_1116(%426) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(480), uint16]) */;
    %428 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %429 = %424.1;
    %430 = %427.0;
    %431 = %428.0;
    (%429, %430, meta[relay.Constant][14] /* ty=Tensor[(480, 1), uint16] */, %431)
  };
  %432() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_16043(%var_16042: Tensor[(13, 7, 10), float64]) -> (Tensor[(13, 7, 10), float64],) {
  %440 = fn (%var_15998: Tensor[(13, 7, 10), float64]) -> (Tensor[(13, 7, 10), float64],) {
    %433 = cast(%var_15998, dtype="float64") /* ty=Tensor[(13, 7, 10), float64] */;
    %434 = rsqrt(%433) /* ty=Tensor[(13, 7, 10), float64] */;
    %435 = cast(%var_15998, dtype="float64") /* ty=Tensor[(13, 7, 10), float64] */;
    %436 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
    %437 = cast(%434, dtype="float64") /* ty=Tensor[(13, 7, 10), float64] */;
    %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %439 = divide(%437, %438) /* ty=Tensor[(13, 7, 10), float64] */;
    (%439,)
  };
  %440(%var_16042) /* ty=(Tensor[(13, 7, 10), float64],) */
}

def @func_25732() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), float32]) {
  %441 = @func_10682() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %442 = @func_10740() /* ty=Tensor[(16, 2, 15), float32] */;
  %443 = %441.1;
  (%442, %443)
}

def @func_629(%var_559: Tensor[(480), uint16], %var_608: Tensor[(16, 2, 15), uint16]) -> (Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %444 = cast(%var_559, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %445 = reshape(%444, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %446 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %447 = cast(%446, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  %448 = atan(%447) /* ty=Tensor[(3, 8, 13), float32] */;
  %449 = cast(%448, dtype="float64") /* ty=Tensor[(3, 8, 13), float64] */;
  %450 = cast(%var_559, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %451 = reshape(%450, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %452 = @func_254(%451) /* ty=Tensor[(16, 2, 15), uint16] */;
  %453 = cast(%var_608, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %454 = shape_of(%452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %455 = cast(%452, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %457 = @func_254(%445) /* ty=Tensor[(16, 2, 15), uint16] */;
  %458 = cast(%457, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %459 = reshape(%458, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %460 = asin(%449) /* ty=Tensor[(3, 8, 13), float64] */;
  %461 = divide(%455, %456) /* ty=Tensor[(16, 2, 15), float64] */;
  %462 = @func_254(%459) /* ty=Tensor[(16, 2, 15), uint16] */;
  %463 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  (%var_559, %457, %460, %461, %462, %463)
}

def @func_17162() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_17160() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_4635(%var_4620: Tensor[(3, 8, 13), float32]) -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), bool], Tensor[(3, 8, 13), float32]) {
  %464 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
  %465 = cast(%var_4620, dtype="bool") /* ty=Tensor[(3, 8, 13), bool] */;
  %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %467 = cast(%464, dtype="bool") /* ty=Tensor[(3, 8, 13), bool] */;
  %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %469 = @func_4051() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %470 = @func_1468() /* ty=Tensor[(16, 2, 15), uint16] */;
  %471 = greater_equal(%467, %468) /* ty=Tensor[(3, 8, 13), bool] */;
  %472 = %469.0;
  (%470, %471, %472)
}

def @func_7414() -> (Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), float32]) {
  @func_7412() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), float32]) */
}

def @func_2756() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %473 = @func_2612() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %474 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %475 = %473.0;
  %476 = %474.1;
  (%475, %476)
}

def @func_21855() -> (Tensor[(16, 2, 15), uint32],) {
  %486 = fn () -> (Tensor[(16, 2, 15), uint32],) {
    %477 = @func_5174() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %478 = %477.0;
    %479 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %480 = %479.1;
    %481 = cast(%480, dtype="uint32") /* ty=Tensor[(16, 2, 15), uint32] */;
    %482 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
    %483 = cast(%478, dtype="uint32") /* ty=Tensor[(16, 2, 15), uint32] */;
    %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %485 = logical_xor(%483, %484) /* ty=Tensor[(16, 2, 15), uint32] */;
    (%485,)
  };
  %486() /* ty=(Tensor[(16, 2, 15), uint32],) */
}

def @func_18237() -> Tensor[(16, 2, 15), bool] {
  @func_18235() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_1869() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) {
  %499 = fn () -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) {
    %487 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
    %488 = %487.3;
    %489 = cast(%488, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
    %490 = reshape(%489, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %491 = @func_1068(%490) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
    %492 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %493 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
    %494 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %495 = %491.0;
    %496 = %492.0;
    %497 = %493.1;
    %498 = %494.2;
    (%488, %495, %496, %497, %498)
  };
  %499() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */
}

def @func_10828() -> (Tensor[(3, 8, 13), float32],) {
  %500 = @func_5872() /* ty=Tensor[(3, 8, 13), float32] */;
  (%500,)
}

def @func_12078() -> (Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(16, 160), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %513 = fn () -> (Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(16, 160), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
    %501 = @func_10498() /* ty=(Tensor[(480), uint16],) */;
    %502 = @func_7345() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %503 = cast(meta[relay.Constant][15] /* ty=Tensor[(16, 160), float32] */, dtype="float32") /* ty=Tensor[(16, 160), float32] */;
    %504 = reshape(%503, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), float32] */;
    %505 = @func_8566(%504) /* ty=(Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32]) */;
    %506 = @func_5211() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %507 = %501.0;
    %508 = %502.0;
    %509 = %505.0;
    %510 = @func_11905() /* ty=Tensor[(3, 8, 13), float32] */;
    %511 = %506.0;
    %512 = @func_11623() /* ty=Tensor[(16, 2, 15), uint16] */;
    (%507, %508, %509, meta[relay.Constant][15] /* ty=Tensor[(16, 160), float32] */, %510, %511, %512)
  };
  %513() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(16, 160), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_18597() -> (Tensor[(3, 8, 13), float32],) {
  %514 = @func_13522() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %515 = %514.0;
  (%515,)
}

def @func_23739() -> Tensor[(16, 2, 15), float64] {
  @func_23737() /* ty=Tensor[(16, 2, 15), float64] */
}

def @func_18599() -> (Tensor[(3, 8, 13), float32],) {
  @func_18597() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_10598() -> (Tensor[(40, 12), float64], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  @func_10596() /* ty=(Tensor[(40, 12), float64], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_2053() -> Tensor[(3, 8, 13), float32] {
  %517 = fn () -> Tensor[(3, 8, 13), float32] {
    %516 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %516.0
  };
  %517() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_26753() -> (Tensor[(16, 2, 15), uint16],) {
  %520 = fn () -> (Tensor[(16, 2, 15), uint16],) {
    %518 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %519 = %518.0;
    (%519,)
  };
  %520() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_4406() -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_26006(%var_25975: Tensor[(120), float32]) -> (Tensor[(8, 5, 3), float32], Tensor[(120), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(7, 6, 8), int32]) {
  %521 = cast(%var_25975, dtype="float32") /* ty=Tensor[(120), float32] */;
  %522 = reshape(%521, newshape=[8, 5, 3]) /* ty=Tensor[(8, 5, 3), float32] */;
  %523 = @func_8780() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %524 = @func_6107() /* ty=(Tensor[(480), uint16],) */;
  %525 = @func_20384() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(7, 6, 8), uint16], uint16) */;
  %526 = %525.1;
  %527 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 6, 8), uint16] */, dtype="int32") /* ty=Tensor[(7, 6, 8), int32] */;
  %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%526, dtype="int32") /* ty=Tensor[(7, 6, 8), int32] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %531 = @func_15369(%522) /* ty=Tensor[(8, 5, 3), float32] */;
  %532 = %523.0;
  %533 = %524.0;
  %534 = subtract(%529, %530) /* ty=Tensor[(7, 6, 8), int32] */;
  (%531, %var_25975, %532, %533, %534)
}

def @func_21952() -> (Tensor[(3, 8, 13), float32],) {
  %535 = @func_14593() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %536 = %535.0;
  (%536,)
}

def @func_5223() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %541 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
    %537 = @func_2425() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
    %538 = @func_3053() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %539 = %537.0;
    %540 = %538.0;
    (%539, %540)
  };
  %541() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_22888() -> Tensor[(3, 8, 13), float32] {
  %542 = fn () -> Tensor[(3, 8, 13), float32] {
    @func_3230() /* ty=Tensor[(3, 8, 13), float32] */
  };
  %542() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_3761() -> (Tensor[(40, 12), float64],) {
  @func_3759() /* ty=(Tensor[(40, 12), float64],) */
}

def @func_14595() -> (Tensor[(3, 8, 13), float32],) {
  @func_14593() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_13141() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  @func_13139() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_8369() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) {
  @func_8367() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */
}

def @func_9851() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  @func_9849() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */
}

def @func_19496() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %543 = @func_14229() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %544 = @func_18950() /* ty=Tensor[(3, 8, 13), float32] */;
  %545 = %543.0;
  (%544, %545)
}

def @func_3667() -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32]) {
  %549 = fn () -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32]) {
    %546 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %547 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
    %548 = %546.0;
    (%547, %548)
  };
  %549() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32]) */
}

def @func_15938() -> (Tensor[(480), uint16],) {
  %550 = @func_7265() /* ty=Tensor[(480), uint16] */;
  (%550,)
}

def @func_1713() -> Tensor[(16, 2, 15), uint16] {
  @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_633(%var_631: Tensor[(480), uint16], %var_632: Tensor[(16, 2, 15), uint16]) -> (Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  @func_629(%var_631, %var_632) /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_15872(%var_15870: Tensor[(2, 1280), float32]) -> (Tensor[(40, 12), uint16], Tensor[(16, 2, 15), uint16], Tensor[(2560), float32], Tensor[(2, 1280), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  @func_15869(%var_15870) /* ty=(Tensor[(40, 12), uint16], Tensor[(16, 2, 15), uint16], Tensor[(2560), float32], Tensor[(2, 1280), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_16939() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) {
  %551 = @func_6191() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %552 = @func_10028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */;
  %553 = %551.0;
  %554 = %552.6;
  (%553, %554)
}

def @func_28651(%var_28649: Tensor[(35), uint8], %var_28650: Tensor[(280), uint8]) -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(35), uint8], Tensor[(280), uint8]) {
  @func_28647(%var_28649, %var_28650) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(35), uint8], Tensor[(280), uint8]) */
}

def @func_25397() -> (Tensor[(16, 2, 15), bool],) {
  @func_25395() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_10028() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) {
  %555 = @func_9105() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %556 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %557 = @func_8256() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32]) */;
  %558 = @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %559 = @func_2029() /* ty=Tensor[(16, 2, 15), float32] */;
  %560 = cast(%559, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %561 = reshape(%560, newshape=[480, 1]) /* ty=Tensor[(480, 1), uint16] */;
  %562 = @func_1238(%561) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32], Tensor[(16, 2, 15), uint16]) */;
  %563 = %555.3;
  %564 = %556.3;
  %565 = @func_4162() /* ty=Tensor[(16, 2, 15), int32] */;
  %566 = %557.1;
  %567 = %558.0;
  %568 = %562.4;
  (%563, %564, %565, %566, %559, %567, %568)
}

def @func_22638() -> Tensor[(16, 2, 15), float32] {
  %570 = fn () -> Tensor[(16, 2, 15), float32] {
    %569 = @func_15056() /* ty=(Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32]) */;
    %569.3
  };
  %570() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_7346() -> (Tensor[(16, 2, 15), bool],) {
  %572 = fn () -> (Tensor[(16, 2, 15), bool],) {
    %571 = @func_4986() /* ty=Tensor[(16, 2, 15), bool] */;
    (%571,)
  };
  %572() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_14346() -> Tensor[(3, 8, 13), float32] {
  %574 = fn () -> Tensor[(3, 8, 13), float32] {
    %573 = @func_14054() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %573.1
  };
  %574() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_8569(%var_8567: Tensor[(16, 16, 10), float32]) -> (Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32]) {
  @func_8566(%var_8567) /* ty=(Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_27994() -> Tensor[(16, 2, 15), uint16] {
  %575 = @func_12686() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %575.1
}

def @func_5107() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
  %576 = @func_1868() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %577 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %578 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %579 = @func_3887() /* ty=Tensor[(16, 2, 15), float32] */;
  %580 = %576.1;
  %581 = %577.0;
  %582 = %578.0;
  (%579, %580, %581, %582)
}

def @func_21594() -> (Tensor[(3, 8, 13), float32],) {
  %583 = @func_7565() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %584 = %583.1;
  (%584,)
}

def @func_25961() -> Tensor[(3, 8, 13), float32] {
  @func_21474() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_1068(%var_1016: Tensor[(16, 2, 15), uint16]) -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  %585 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %586 = %585.0;
  %587 = cast(%var_1016, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
  %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%586, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %591 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %592 = cast(%586, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
  %593 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %594 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %595 = less(%589, %590) /* ty=Tensor[(16, 2, 15), bool] */;
  %596 = %591.0;
  %597 = log10(%592) /* ty=Tensor[(16, 2, 15), float32] */;
  %598 = %593.1;
  %599 = %594.0;
  (%595, %596, %597, %598, %599)
}

def @func_1587() -> Tensor[(3, 8, 13), int16] {
  @func_1585() /* ty=Tensor[(3, 8, 13), int16] */
}

def @func_7462() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %600 = @func_2914() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %601 = @func_5019() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
  %602 = %600.0;
  %603 = %601.0;
  (%602, %603)
}

def @func_28864(%var_28863: Tensor[(1, 4, 3), float64]) -> Tensor[(1, 4, 3), float64] {
  %605 = fn (%var_28855: Tensor[(1, 4, 3), float64]) -> Tensor[(1, 4, 3), float64] {
    %604 = cast(%var_28855, dtype="float64") /* ty=Tensor[(1, 4, 3), float64] */;
    log10(%604) /* ty=Tensor[(1, 4, 3), float64] */
  };
  %605(%var_28863) /* ty=Tensor[(1, 4, 3), float64] */
}

def @func_16941() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) {
  @func_16939() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */
}

def @func_2875() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %606 = @func_2622() /* ty=Tensor[(16, 2, 15), float32] */;
  %607 = cast(%606, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
  %608 = @func_2796() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */;
  %609 = sqrt(%607) /* ty=Tensor[(16, 2, 15), float32] */;
  %610 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  %611 = %608.1;
  (%609, %610, %611)
}

def @func_3802() -> (Tensor[(480), uint16],) {
  %612 = @func_2425() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %613 = %612.2;
  (%613,)
}

def @func_14469() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], float64, Tensor[(945), float64]) {
  @func_14467() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], float64, Tensor[(945), float64]) */
}

def @func_4536(%var_4534: Tensor[(480), uint16]) -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_4533(%var_4534) /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_25858() -> (Tensor[(16, 2, 15), uint16], Tensor[(120, 8), uint16]) {
  %614 = @func_7733() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %615 = @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */;
  %616 = %614.3;
  %617 = %615.1;
  (%616, %617)
}

def @func_22879() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %618 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %619 = @func_10682() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
  %620 = %618.0;
  %621 = %619.1;
  (%620, %621)
}

def @func_3889() -> Tensor[(16, 2, 15), float32] {
  @func_3887() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_13436(%var_13435: Tensor[(112, 1), int64]) -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(16), int64], Tensor[(112, 1), int64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) {
  %646 = fn (%var_13363: Tensor[(112, 1), int64]) -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(16), int64], Tensor[(112, 1), int64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) {
    %622 = @func_8753() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %623 = cast(meta[relay.Constant][17] /* ty=Tensor[(16), int64] */, dtype="int64") /* ty=Tensor[(16), int64] */;
    %624 = cast(%var_13363, dtype="int64") /* ty=Tensor[(112, 1), int64] */;
    %625 = %622.0;
    %626 = cast(%625, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
    %627 = reshape(%623, newshape=[8, 2, 1]) /* ty=Tensor[(8, 2, 1), int64] */;
    %628 = reshape(%624, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), int64] */;
    %629 = reshape(%626, newshape=[480]) /* ty=Tensor[(480), uint16] */;
    %630 = @func_5937(%627, %628, %629) /* ty=(Tensor[(8, 2, 7), int64], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(8, 2, 7), float32], Tensor[(40, 12), uint16]) */;
    %631 = @func_10792() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %632 = @func_13225() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %633 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %634 = @func_11666() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %635 = @func_12942() /* ty=(Tensor[(16, 2, 15), int32],) */;
    %636 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
    %637 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
    %638 = %630.1;
    %639 = %631.5;
    %640 = @func_6672() /* ty=Tensor[(16, 2, 15), float32] */;
    %641 = %632.0;
    %642 = @func_10078() /* ty=Tensor[(3, 8, 13), float32] */;
    %643 = %633.1;
    %644 = %634.0;
    %645 = %635.0;
    (%625, %636, %637, %638, meta[relay.Constant][17] /* ty=Tensor[(16), int64] */, %var_13363, %639, %640, %641, %642, %643, %644, %645)
  };
  %646(%var_13435) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(16), int64], Tensor[(112, 1), int64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */
}

def @func_12355() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_12353() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_5457() -> (Tensor[(3, 8, 13), float32],) {
  @func_5455() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_24665() -> Tensor[(40, 12), int8] {
  %647 = @func_9543() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %648 = %647.1;
  %649 = cast(meta[relay.Constant][18] /* ty=Tensor[(40, 12), float64] */, dtype="int8") /* ty=Tensor[(40, 12), int8] */;
  %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(2), int32] */;
  %651 = cast(%648, dtype="int8") /* ty=Tensor[(40, 12), int8] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  bitwise_or(%651, %652) /* ty=Tensor[(40, 12), int8] */
}

def @func_23015() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %658 = fn () -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
    %653 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %654 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %655 = %653.0;
    %656 = %654.1;
    %657 = @func_3577() /* ty=Tensor[(3, 8, 13), float32] */;
    (%655, %656, %657)
  };
  %658() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_12416() -> (Tensor[(3, 8, 13), float32],) {
  @func_12414() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_11777() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) {
  @func_11775() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */
}

def @func_21475() -> Tensor[(3, 8, 13), float32] {
  %660 = fn () -> Tensor[(3, 8, 13), float32] {
    %659 = @func_7672() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %659.0
  };
  %660() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_6191() -> (Tensor[(3, 8, 13), float32],) {
  %661 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %662 = %661.0;
  (%662,)
}

def @func_22073(%var_22072: Tensor[(960), uint16]) -> (Tensor[(3, 8, 13), float32], Tensor[(24, 10), float32], Tensor[(960), uint16], Tensor[(240), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) {
  %674 = fn (%var_22042: Tensor[(960), uint16]) -> (Tensor[(3, 8, 13), float32], Tensor[(24, 10), float32], Tensor[(960), uint16], Tensor[(240), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) {
    %663 = @func_9049() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
    %664 = cast(%var_22042, dtype="uint16") /* ty=Tensor[(960), uint16] */;
    %665 = cast(meta[relay.Constant][19] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %666 = reshape(%664, newshape=[480, 2]) /* ty=Tensor[(480, 2), uint16] */;
    %667 = reshape(%665, newshape=[24, 10]) /* ty=Tensor[(24, 10), float32] */;
    %668 = @func_2964(%666, %667) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480, 2), float64], Tensor[(480, 2), int64], Tensor[(16, 2, 15), bool], Tensor[(480, 1), float64], Tensor[(3, 8, 13), int16], Tensor[(24, 10), float32]) */;
    %669 = @func_20223() /* ty=(Tensor[(3, 8, 13), int16],) */;
    %670 = %663.0;
    %671 = %668.6;
    %672 = @func_21727() /* ty=Tensor[(3, 8, 13), float32] */;
    %673 = %669.0;
    (%670, %671, %var_22042, meta[relay.Constant][19] /* ty=Tensor[(240), float32] */, %672, %673)
  };
  %674(%var_22072) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(24, 10), float32], Tensor[(960), uint16], Tensor[(240), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */
}

def @func_13188() -> (Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), int16]) {
  @func_13186() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), int16]) */
}

def @func_11852() -> (Tensor[(3, 8, 13), float32],) {
  %675 = @func_5174() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %676 = %675.3;
  (%676,)
}

def @func_22624() -> (Tensor[(3, 8, 13), float32],) {
  @func_22622() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_5051(%var_5038: Tensor[(16, 2, 15), uint16]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) {
  %677 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %678 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %679 = %678.0;
  %680 = cast(%var_5038, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %681 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%679, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %684 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %685 = %677.0;
  %686 = minimum(%682, %683) /* ty=Tensor[(16, 2, 15), float64] */;
  %687 = %684.1;
  (%685, %686, %687)
}

def @func_22282() -> (Tensor[(480), uint16],) {
  @func_22280() /* ty=(Tensor[(480), uint16],) */
}

def @func_29341() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(7, 6, 8), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(6, 16, 10), float64], Tensor[(1, 960), float64], Tensor[(297), float64]) {
  %711 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(7, 6, 8), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(6, 16, 10), float64], Tensor[(1, 960), float64], Tensor[(297), float64]) {
    %688 = @func_7171() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %689 = @func_9049() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
    %690 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
    %691 = cast(meta[relay.Constant][20] /* ty=Tensor[(297), float64] */, dtype="float64") /* ty=Tensor[(297), float64] */;
    %692 = reshape(%691, newshape=[297]) /* ty=Tensor[(297), float64] */;
    %693 = @func_27488(%692) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(11, 3, 9), float64], Tensor[(297), float64]) */;
    %694 = @func_20384() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(7, 6, 8), uint16], uint16) */;
    %695 = %694.1;
    %696 = cast(%695, dtype="float64") /* ty=Tensor[(7, 6, 8), float64] */;
    %697 = @func_19794() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %698 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 960), float64] */, dtype="float64") /* ty=Tensor[(1, 960), float64] */;
    %699 = reshape(%698, newshape=[6, 16, 10]) /* ty=Tensor[(6, 16, 10), float64] */;
    %700 = @func_5757(%699) /* ty=(Tensor[(6, 16, 10), float64], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) */;
    %701 = cast(meta[relay.Constant][20] /* ty=Tensor[(297), float64] */, dtype="float64") /* ty=Tensor[(297), float64] */;
    %702 = %688.0;
    %703 = %689.0;
    %704 = %690.1;
    %705 = %693.0;
    %706 = log(%696) /* ty=Tensor[(7, 6, 8), float64] */;
    %707 = @func_15247() /* ty=Tensor[(16, 2, 15), uint16] */;
    %708 = %697.0;
    %709 = %700.0;
    %710 = tan(%701) /* ty=Tensor[(297), float64] */;
    (%702, %703, %704, %705, %706, %707, %708, %709, meta[relay.Constant][21] /* ty=Tensor[(1, 960), float64] */, %710)
  };
  %711() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(7, 6, 8), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(6, 16, 10), float64], Tensor[(1, 960), float64], Tensor[(297), float64]) */
}

def @func_10792() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %712 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %713 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %714 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %715 = @func_8367() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */;
  %716 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  %717 = %712.0;
  %718 = %713.0;
  %719 = %714.0;
  %720 = %715.1;
  %721 = @func_3577() /* ty=Tensor[(3, 8, 13), float32] */;
  (%716, %717, %718, %719, %720, %721)
}

def @func_25656() -> (Tensor[(16, 2, 15), int32],) {
  @func_25654() /* ty=(Tensor[(16, 2, 15), int32],) */
}

def @func_4163() -> Tensor[(16, 2, 15), int32] {
  %722 = fn () -> Tensor[(16, 2, 15), int32] {
    @func_3925() /* ty=Tensor[(16, 2, 15), int32] */
  };
  %722() /* ty=Tensor[(16, 2, 15), int32] */
}

def @func_9428() -> (Tensor[(3, 8, 13), float32],) {
  @func_9426() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_17977() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %729 = fn () -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
    %723 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %724 = @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */;
    %725 = @func_11666() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %726 = %723.0;
    %727 = %724.4;
    %728 = %725.0;
    (%726, %727, %728)
  };
  %729() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_2967(%var_2965: Tensor[(480, 2), uint16], %var_2966: Tensor[(24, 10), float32]) -> (Tensor[(3, 8, 13), float32], Tensor[(480, 2), float64], Tensor[(480, 2), int64], Tensor[(16, 2, 15), bool], Tensor[(480, 1), float64], Tensor[(3, 8, 13), int16], Tensor[(24, 10), float32]) {
  %748 = fn (%var_2937: Tensor[(480, 2), uint16], %var_2962: Tensor[(24, 10), float32]) -> (Tensor[(3, 8, 13), float32], Tensor[(480, 2), float64], Tensor[(480, 2), int64], Tensor[(16, 2, 15), bool], Tensor[(480, 1), float64], Tensor[(3, 8, 13), int16], Tensor[(24, 10), float32]) {
    %730 = @func_2914() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %731 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
    %732 = %731.2;
    %733 = cast(%732, dtype="float64") /* ty=Tensor[(480, 1), float64] */;
    %734 = cast(%var_2937, dtype="float64") /* ty=Tensor[(480, 2), float64] */;
    %735 = cast(%732, dtype="int64") /* ty=Tensor[(480, 1), int64] */;
    %736 = cast(%var_2937, dtype="int64") /* ty=Tensor[(480, 2), int64] */;
    %737 = @func_2719() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %738 = cast(%732, dtype="float64") /* ty=Tensor[(480, 1), float64] */;
    %739 = cast(%var_2962, dtype="float32") /* ty=Tensor[(24, 10), float32] */;
    %740 = reshape(%739, newshape=[10, 2, 12]) /* ty=Tensor[(10, 2, 12), float32] */;
    %741 = @func_1918(%740) /* ty=(Tensor[(10, 2, 12), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %742 = %730.0;
    %743 = floor_mod(%733, %734) /* ty=Tensor[(480, 2), float64] */;
    %744 = minimum(%735, %736) /* ty=Tensor[(480, 2), int64] */;
    %745 = %737.0;
    %746 = sin(%738) /* ty=Tensor[(480, 1), float64] */;
    %747 = %741.2;
    (%742, %743, %744, %745, %746, %747, %var_2962)
  };
  %748(%var_2965, %var_2966) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480, 2), float64], Tensor[(480, 2), int64], Tensor[(16, 2, 15), bool], Tensor[(480, 1), float64], Tensor[(3, 8, 13), int16], Tensor[(24, 10), float32]) */
}

def @func_28154() -> (Tensor[(16, 2, 15), uint16],) {
  @func_28152() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_4109() -> (Tensor[(16, 2, 15), float64],) {
  @func_4107() /* ty=(Tensor[(16, 2, 15), float64],) */
}

def @func_18951() -> Tensor[(3, 8, 13), float32] {
  %749 = fn () -> Tensor[(3, 8, 13), float32] {
    @func_10855() /* ty=Tensor[(3, 8, 13), float32] */
  };
  %749() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_18386() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  @func_18384() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_20788(%var_20786: Tensor[(2, 4, 1), int64]) -> (Tensor[(2, 4, 13), int64], Tensor[(3, 8, 13), float32]) {
  @func_20785(%var_20786) /* ty=(Tensor[(2, 4, 13), int64], Tensor[(3, 8, 13), float32]) */
}

def @func_9693() -> (Tensor[(16, 2, 15), bool],) {
  @func_9691() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_24107() -> (Tensor[(3, 8, 13), float32],) {
  %752 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %750 = @func_7462() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %751 = %750.0;
    (%751,)
  };
  %752() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_15415(%var_15413: Tensor[(126), int16]) -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(126), int16]) {
  @func_15412(%var_15413) /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(126), int16]) */
}

def @func_19626(%var_19625: Tensor[(360, 4), uint64]) -> (Tensor[(16, 2, 15), uint16], Tensor[(12, 15, 8), uint64], Tensor[(360, 4), uint64]) {
  %759 = fn (%var_19616: Tensor[(360, 4), uint64]) -> (Tensor[(16, 2, 15), uint16], Tensor[(12, 15, 8), uint64], Tensor[(360, 4), uint64]) {
    %753 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %754 = cast(%var_19616, dtype="uint64") /* ty=Tensor[(360, 4), uint64] */;
    %755 = reshape(%754, newshape=[1440]) /* ty=Tensor[(1440), uint64] */;
    %756 = @func_10290(%755) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(1440), uint64], Tensor[(40, 12), float64]) */;
    %757 = %753.1;
    %758 = %756.1;
    (%757, %758, %var_19616)
  };
  %759(%var_19625) /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(12, 15, 8), uint64], Tensor[(360, 4), uint64]) */
}

def @func_25896() -> (Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) {
  %764 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) {
    %760 = @func_21952() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %761 = @func_5019() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
    %762 = %760.0;
    %763 = %761.1;
    (%762, %763)
  };
  %764() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */
}

def @func_18210() -> Tensor[(3, 8, 13), float32] {
  %766 = fn () -> Tensor[(3, 8, 13), float32] {
    %765 = @func_13225() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %765.0
  };
  %766() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_25956() -> (Tensor[(16, 2, 15), uint16],) {
  @func_25954() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_17090(%var_17088: Tensor[(7, 3), int8], %var_17089: Tensor[(189), int8]) -> (Tensor[(3, 8, 13), float32], Tensor[(7, 3), int8], Tensor[(3, 8, 13), float32], Tensor[(3, 7, 9), bool], Tensor[(40, 12), uint16]) {
  @func_17086(%var_17088, %var_17089) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(7, 3), int8], Tensor[(3, 8, 13), float32], Tensor[(3, 7, 9), bool], Tensor[(40, 12), uint16]) */
}

def @func_7279() -> Tensor[(3, 8, 13), float32] {
  %767 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %767.0
}

def @func_3681() -> Tensor[(16, 2, 15), float32] {
  @func_2622() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_7089(%var_7088: Tensor[(40, 12), float64]) -> (Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint32]) {
  %780 = fn (%var_7071: Tensor[(40, 12), float64]) -> (Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint32]) {
    %768 = @func_3759() /* ty=(Tensor[(40, 12), float64],) */;
    %769 = %768.0;
    %770 = cast(%769, dtype="uint16") /* ty=Tensor[(40, 12), uint16] */;
    %771 = reshape(%770, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %772 = @func_1068(%771) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
    %773 = cast(%var_7071, dtype="uint32") /* ty=Tensor[(40, 12), uint32] */;
    %774 = shape_of(%769, dtype="int32") /* ty=Tensor[(2), int32] */;
    %775 = cast(%769, dtype="uint32") /* ty=Tensor[(40, 12), uint32] */;
    %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %777 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
    %778 = %772.1;
    %779 = bitwise_xor(%775, %776) /* ty=Tensor[(40, 12), uint32] */;
    (%777, %778, %779)
  };
  %780(%var_7088) /* ty=(Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint32]) */
}

def @func_25690() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) {
  @func_25688() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */
}

def @func_1780() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) {
  @func_1778() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */
}

def @func_2613() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %784 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
    %781 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
    %782 = %781.2;
    %783 = @func_2480() /* ty=Tensor[(3, 8, 13), float32] */;
    (%782, %783)
  };
  %784() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_28117() -> Tensor[(3, 8, 13), float32] {
  %786 = fn () -> Tensor[(3, 8, 13), float32] {
    %785 = @func_13282() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
    %785.0
  };
  %786() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_10830() -> (Tensor[(3, 8, 13), float32],) {
  @func_10828() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_18277() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %787 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %788 = @func_11905() /* ty=Tensor[(3, 8, 13), float32] */;
  %789 = %787.2;
  %790 = @func_14345() /* ty=Tensor[(3, 8, 13), float32] */;
  (%788, %789, %790)
}

def @func_14146() -> Tensor[(16, 2, 15), uint16] {
  %792 = fn () -> Tensor[(16, 2, 15), uint16] {
    %791 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %791.0
  };
  %792() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_21745() -> (Tensor[(3, 8, 13), float32],) {
  @func_21743() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_14056() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  @func_14054() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_29023() -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) {
  %806 = fn () -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) {
    %793 = @func_21751() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
    %794 = %793.0;
    %795 = cast(%794, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
    %796 = reshape(%795, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %797 = @func_5051(%796) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) */;
    %798 = @func_20331() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) */;
    %799 = @func_8480() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %800 = @func_10078() /* ty=Tensor[(3, 8, 13), float32] */;
    %801 = %797.0;
    %802 = @func_13845() /* ty=Tensor[(16, 2, 15), uint16] */;
    %803 = @func_28720() /* ty=Tensor[(16, 2, 15), bool] */;
    %804 = %798.2;
    %805 = %799.1;
    (%794, %800, %801, %802, %803, %804, %805)
  };
  %806() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) */
}

def @func_4181(%var_4175: Tensor[(3, 7, 1), int8], %var_4176: Tensor[(3, 7, 9), int8]) -> Tensor[(3, 7, 9), bool] {
  %807 = cast(%var_4175, dtype="bool") /* ty=Tensor[(3, 7, 1), bool] */;
  %808 = cast(%var_4176, dtype="bool") /* ty=Tensor[(3, 7, 9), bool] */;
  less_equal(%807, %808) /* ty=Tensor[(3, 7, 9), bool] */
}

def @func_14694() -> (Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) {
  %813 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) {
    %809 = @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %810 = @func_10596() /* ty=(Tensor[(40, 12), float64], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %811 = %809.1;
    %812 = %810.0;
    (%811, %812)
  };
  %813() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */
}

def @func_19037() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_19035() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_24835() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %814 = @func_23100() /* ty=Tensor[(3, 8, 13), float32] */;
  %815 = @func_5872() /* ty=Tensor[(3, 8, 13), float32] */;
  (%814, %815)
}

def @func_13212() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) {
  %816 = @func_11179() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %817 = %816.1;
  %818 = @func_4162() /* ty=Tensor[(16, 2, 15), int32] */;
  (%817, %818)
}

def @func_13523() -> (Tensor[(3, 8, 13), float32],) {
  %821 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %819 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %820 = %819.2;
    (%820,)
  };
  %821() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_17848() -> (Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  @func_17846() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_5759(%var_5758: Tensor[(6, 16, 10), float64]) -> (Tensor[(6, 16, 10), float64], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) {
  %833 = fn (%var_5696: Tensor[(6, 16, 10), float64]) -> (Tensor[(6, 16, 10), float64], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) {
    %822 = cast(%var_5696, dtype="float64") /* ty=Tensor[(6, 16, 10), float64] */;
    %823 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %824 = %823.1;
    %825 = cast(%824, dtype="uint16") /* ty=Tensor[(480), uint16] */;
    %826 = cast(%824, dtype="uint16") /* ty=Tensor[(480), uint16] */;
    %827 = reshape(%825, newshape=[480]) /* ty=Tensor[(480), uint16] */;
    %828 = reshape(%826, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %829 = @func_629(%827, %828) /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %830 = acos(%822) /* ty=Tensor[(6, 16, 10), float64] */;
    %831 = @func_2480() /* ty=Tensor[(3, 8, 13), float32] */;
    %832 = %829.4;
    (%830, %831, %824, %832)
  };
  %833(%var_5758) /* ty=(Tensor[(6, 16, 10), float64], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) */
}

def @func_2758() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  @func_2756() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_14273(%var_14271: Tensor[(9, 7, 2), float32]) -> (Tensor[(9, 7, 2), float32],) {
  @func_14270(%var_14271) /* ty=(Tensor[(9, 7, 2), float32],) */
}

def @func_12999() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) {
  %834 = @func_10855() /* ty=Tensor[(3, 8, 13), float32] */;
  %835 = @func_10530() /* ty=Tensor[(3, 8, 13), float32] */;
  %836 = @func_8384() /* ty=Tensor[(3, 8, 13), int16] */;
  (%834, %835, %836)
}

def @func_13214() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) {
  @func_13212() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) */
}

def @func_27286() -> (Tensor[(3, 8, 13), float32], Tensor[(16), int64], Tensor[(112), int64]) {
  @func_27284() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16), int64], Tensor[(112), int64]) */
}

def @func_257(%var_255: Tensor[(16, 2, 15), uint16]) -> Tensor[(16, 2, 15), uint16] {
  @func_254(%var_255) /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_2134() -> (Tensor[(16, 2, 15), uint16],) {
  @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_13643() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) {
  %840 = fn () -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) {
    %837 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %838 = @func_2622() /* ty=Tensor[(16, 2, 15), float32] */;
    %839 = %837.1;
    (%838, %839)
  };
  %840() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */
}

def @func_29089() -> Tensor[(3, 8, 13), float32] {
  @func_29087() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_25208() -> (Tensor[(3, 8, 13), float32],) {
  @func_25206() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_11382() -> (Tensor[(16, 2, 15), bool],) {
  %843 = fn () -> (Tensor[(16, 2, 15), bool],) {
    %841 = @func_9691() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %842 = %841.0;
    (%842,)
  };
  %843() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_19498() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_19496() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_7171() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %844 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %845 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %846 = %844.1;
  %847 = %845.0;
  (%846, %847)
}

def @func_22649() -> (Tensor[(3, 8, 13), float32],) {
  %850 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %848 = @func_14992() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %849 = %848.0;
    (%849,)
  };
  %850() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_5395() -> Tensor[(16, 2, 15), float32] {
  @func_2029() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_11563() -> Tensor[(3, 8, 13), float32] {
  @func_11561() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_1363() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_1119(%var_1117: Tensor[(480), uint16]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(480), uint16]) {
  @func_1116(%var_1117) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(480), uint16]) */
}

def @func_7824() -> Tensor[(3, 8, 13), float32] {
  %851 = fn () -> Tensor[(3, 8, 13), float32] {
    @func_3577() /* ty=Tensor[(3, 8, 13), float32] */
  };
  %851() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_25395() -> (Tensor[(16, 2, 15), bool],) {
  %852 = @func_8838() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %853 = %852.1;
  (%853,)
}

def @func_17396() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) {
  %862 = fn () -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) {
    %854 = @func_2702() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %855 = @func_12665() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
    %856 = cast(meta[relay.Constant][22] /* ty=Tensor[(39), uint8] */, dtype="uint8") /* ty=Tensor[(39), uint8] */;
    %857 = reshape(%856, newshape=[3, 13, 1]) /* ty=Tensor[(3, 13, 1), uint8] */;
    %858 = @func_8675(%857) /* ty=(Tensor[(3, 13, 1), bool],) */;
    %859 = %854.0;
    %860 = %855.0;
    %861 = %858.0;
    (%859, %860, %861, meta[relay.Constant][22] /* ty=Tensor[(39), uint8] */)
  };
  %862() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) */
}

def @func_12174() -> Tensor[(16, 2, 15), bool] {
  %864 = fn () -> Tensor[(16, 2, 15), bool] {
    %863 = @func_10596() /* ty=(Tensor[(40, 12), float64], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %863.1
  };
  %864() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_3683() -> Tensor[(16, 2, 15), float32] {
  @func_3681() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_23423() -> Tensor[(3, 8, 13), float32] {
  %866 = fn () -> Tensor[(3, 8, 13), float32] {
    %865 = @func_7643() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
    %865.1
  };
  %866() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_29390() -> (Tensor[(3, 8, 13), float32],) {
  @func_29388() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_5937(%var_5890: Tensor[(8, 2, 1), int64], %var_5891: Tensor[(8, 2, 7), int64], %var_5897: Tensor[(480), uint16]) -> (Tensor[(8, 2, 7), int64], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(8, 2, 7), float32], Tensor[(40, 12), uint16]) {
  %867 = cast(%var_5890, dtype="int64") /* ty=Tensor[(8, 2, 1), int64] */;
  %868 = cast(%var_5891, dtype="int64") /* ty=Tensor[(8, 2, 7), int64] */;
  %869 = cast(%var_5897, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %870 = cast(%var_5897, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %871 = reshape(%869, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %872 = reshape(%870, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %873 = @func_629(%871, %872) /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %874 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %875 = cast(%var_5891, dtype="float32") /* ty=Tensor[(8, 2, 7), float32] */;
  %876 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %877 = minimum(%867, %868) /* ty=Tensor[(8, 2, 7), int64] */;
  %878 = %873.1;
  %879 = %874.1;
  %880 = log10(%875) /* ty=Tensor[(8, 2, 7), float32] */;
  %881 = %876.2;
  (%877, %878, %var_5897, %879, %880, %881)
}

def @func_4750(%var_4748: Tensor[(12, 15, 8), uint64], %var_4749: Tensor[(12, 15, 8), uint64]) -> (Tensor[(12, 15, 8), uint64],) {
  @func_4746(%var_4748, %var_4749) /* ty=(Tensor[(12, 15, 8), uint64],) */
}

def @func_11133() -> Tensor[(16, 2, 15), bool] {
  @func_11131() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_386() -> Tensor[(3, 8, 13), float32] {
  %882 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 8, 13), float32] */, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  acosh(%882) /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_24048(%var_24046: Tensor[(9, 1, 13), float32]) -> (Tensor[(9, ?, 13), bool],) {
  @func_24045(%var_24046) /* ty=(Tensor[(9, ?, 13), bool],) */
}

def @func_14992() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %883 = @func_7601() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %884 = @func_2341() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %885 = %883.2;
  %886 = %884.0;
  (%885, %886)
}

def @func_24413() -> (Tensor[(3, 8, 13), float32],) {
  %889 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %887 = @func_14651() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %888 = %887.1;
    (%888,)
  };
  %889() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_15631() -> (Tensor[(3, 8, 13), float32],) {
  @func_15629() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_14133() -> (Tensor[(480), uint16],) {
  %890 = @func_7672() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %891 = %890.1;
  (%891,)
}

def @func_1987() -> (Tensor[(16, 2, 15), bool],) {
  %894 = fn () -> (Tensor[(16, 2, 15), bool],) {
    %892 = @func_1868() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
    %893 = %892.1;
    (%893,)
  };
  %894() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_11419(%var_11417: uint32, %var_11418: Tensor[(14, 16, 16), uint32]) -> (Tensor[(14, 16, 16), uint32],) {
  %898 = fn (%var_11397: uint32, %var_11398: Tensor[(14, 16, 16), uint32]) -> (Tensor[(14, 16, 16), uint32],) {
    %895 = cast(%var_11397, dtype="uint32") /* ty=uint32 */;
    %896 = cast(%var_11398, dtype="uint32") /* ty=Tensor[(14, 16, 16), uint32] */;
    %897 = minimum(%895, %896) /* ty=Tensor[(14, 16, 16), uint32] */;
    (%897,)
  };
  %898(%var_11417, %var_11418) /* ty=(Tensor[(14, 16, 16), uint32],) */
}

def @func_14248() -> (Tensor[(480), uint16],) {
  %900 = fn () -> (Tensor[(480), uint16],) {
    %899 = @func_11948() /* ty=Tensor[(480), uint16] */;
    (%899,)
  };
  %900() /* ty=(Tensor[(480), uint16],) */
}

def @func_2343() -> (Tensor[(3, 8, 13), float32],) {
  @func_2341() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_7733() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) {
  %901 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %902 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %903 = @func_2702() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %904 = @func_5121() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %905 = %901.0;
  %906 = %902.0;
  %907 = %903.0;
  %908 = %904.0;
  (%905, %906, %907, %908)
}

def @func_27369() -> Tensor[(3, 8, 13), float32] {
  @func_27367() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_27880() -> (Tensor[(16, 2, 15), uint16],) {
  %911 = fn () -> (Tensor[(16, 2, 15), uint16],) {
    %909 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %910 = %909.3;
    (%910,)
  };
  %911() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_2682() -> (Tensor[(16, 2, 15), bool],) {
  @func_2680() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_20485() -> Tensor[(16, 2, 15), float32] {
  %913 = fn () -> Tensor[(16, 2, 15), float32] {
    %912 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %912.0
  };
  %913() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_6672() -> Tensor[(16, 2, 15), float32] {
  @func_5395() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_25954() -> (Tensor[(16, 2, 15), uint16],) {
  %914 = @func_8307() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%914,)
}

def @func_4404() -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  %915 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %916 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %917 = %915.0;
  %918 = %916.2;
  (%917, %918)
}

def @func_8162() -> (Tensor[(3, 8, 13), float32],) {
  %919 = @func_7643() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %920 = %919.1;
  (%920,)
}

def @func_16092() -> Tensor[(16, 2, 15), int32] {
  %922 = fn () -> Tensor[(16, 2, 15), int32] {
    %921 = @func_12157() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) */;
    %921.1
  };
  %922() /* ty=Tensor[(16, 2, 15), int32] */
}

def @func_6536() -> (Tensor[(16, 2, 15), uint16],) {
  %925 = fn () -> (Tensor[(16, 2, 15), uint16],) {
    %923 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %924 = %923.0;
    (%924,)
  };
  %925() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_13186() -> (Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), int16]) {
  %926 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
  %927 = cast(%926, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %928 = reshape(%927, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %929 = @func_4533(%928) /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %930 = %929.0;
  (%926, %930)
}

def @func_22982() -> Tensor[(480), uint16] {
  %932 = fn () -> Tensor[(480), uint16] {
    %931 = @func_20729() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
    %931.1
  };
  %932() /* ty=Tensor[(480), uint16] */
}

def @func_8566(%var_8561: Tensor[(16, 16, 10), float32]) -> (Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32]) {
  %933 = cast(%var_8561, dtype="float32") /* ty=Tensor[(16, 16, 10), float32] */;
  %934 = @func_2914() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %935 = sin(%933) /* ty=Tensor[(16, 16, 10), float32] */;
  %936 = %934.0;
  (%935, %936)
}

def @func_10682() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %937 = @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %938 = @func_2875() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %939 = %937.1;
  %940 = %938.0;
  (%939, %940)
}

def @func_18147() -> (Tensor[(3, 8, 13), float32],) {
  %941 = @func_7601() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %942 = %941.2;
  (%942,)
}

def @func_15529(%var_15527: Tensor[(21), int8]) -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float64], Tensor[(21), int8], Tensor[(3, 63), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  @func_15526(%var_15527) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float64], Tensor[(21), int8], Tensor[(3, 63), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_9105() -> (Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %943 = @func_8838() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %944 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %945 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %946 = %943.1;
  %947 = %944.0;
  %948 = @func_4986() /* ty=Tensor[(16, 2, 15), bool] */;
  %949 = %945.0;
  (%946, %947, %948, %949)
}

def @func_25206() -> (Tensor[(3, 8, 13), float32],) {
  %950 = @func_19794() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %951 = %950.0;
  (%951,)
}

def @func_11715() -> (Tensor[(3, 8, 13), float32],) {
  %954 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %952 = @func_8404() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32]) */;
    %953 = %952.0;
    (%953,)
  };
  %954() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_14184(%var_14169: Tensor[(308), uint8]) -> (Tensor[(3, 8, 13), float32], Tensor[(2, 11, 14), bool], Tensor[(308), uint8]) {
  %955 = @func_8157() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %956 = cast(%var_14169, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %957 = cast(%var_14169, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %958 = reshape(%956, newshape=[2, 11, 14]) /* ty=Tensor[(2, 11, 14), uint8] */;
  %959 = reshape(%957, newshape=[2, 11, 14]) /* ty=Tensor[(2, 11, 14), uint8] */;
  %960 = @func_3522(%958, %959) /* ty=(Tensor[(2, 11, 14), bool],) */;
  %961 = %955.0;
  %962 = %960.0;
  (%961, %962, %var_14169)
}

def @func_25307() -> (Tensor[(3, 8, 13), float32],) {
  %965 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %963 = @func_18597() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %964 = %963.0;
    (%964,)
  };
  %965() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_20228() -> Tensor[(3, 8, 13), float32] {
  %966 = @func_3100() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %966.0
}

def @func_7224() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  %967 = @func_1868() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %968 = %967.0;
  %969 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  %970 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%968, %969, %970)
}

def @func_20731() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  @func_20729() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_6274(%var_6229: Tensor[(945), float64]) -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], float64, Tensor[(945), float64]) {
  %971 = @func_4275() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) */;
  %972 = cast(7.4585f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %973 = cast(%var_6229, dtype="float64") /* ty=Tensor[(945), float64] */;
  %974 = reshape(%972, newshape=[]) /* ty=float64 */;
  %975 = reshape(%973, newshape=[7, 15, 9]) /* ty=Tensor[(7, 15, 9), float64] */;
  %976 = @func_5686(%974, %975) /* ty=(Tensor[(7, 15, 9), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %977 = %971.0;
  %978 = %976.1;
  (%977, %978, 7.4585f64 /* ty=float64 */, %var_6229)
}

def @func_21876() -> Tensor[(3, 8, 13), float32] {
  @func_21874() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_8307() -> Tensor[(16, 2, 15), uint16] {
  %979 = @func_8128() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %979.0
}

def @func_24045(%var_24024: Tensor[(9, 1, 13), float32]) -> (Tensor[(9, ?, 13), bool],) {
  %980 = cast(%var_24024, dtype="float32") /* ty=Tensor[(9, 1, 13), float32] */;
  %981 = tan(%980) /* ty=Tensor[(9, 1, 13), float32] */;
  %982 = cast(%981, dtype="bool") /* ty=Tensor[(9, 1, 13), bool] */;
  %983 = shape_of(%var_24024, dtype="int32") /* ty=Tensor[(3), int32] */;
  %984 = cast(%var_24024, dtype="bool") /* ty=Tensor[(9, 1, 13), bool] */;
  %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %986 = greater(%984, %985) /* ty=Tensor[(9, ?, 13), bool] */;
  (%986,)
}

def @func_8454() -> Tensor[(16, 2, 15), float32] {
  @func_8452() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_11907() -> Tensor[(3, 8, 13), float32] {
  @func_11905() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_7622() -> (Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), float64]) {
  %991 = fn () -> (Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), float64]) {
    %987 = @func_4107() /* ty=(Tensor[(16, 2, 15), float64],) */;
    %988 = @func_4107() /* ty=(Tensor[(16, 2, 15), float64],) */;
    %989 = %987.0;
    %990 = %988.0;
    (%989, %990)
  };
  %991() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), float64]) */
}

def @func_2282() -> (Tensor[(3, 8, 13), float32],) {
  %992 = @func_1778() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */;
  %993 = %992.1;
  (%993,)
}

def @func_21455() -> (Tensor[(480), uint16], Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  @func_21453() /* ty=(Tensor[(480), uint16], Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_26388() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %998 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
    %994 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
    %995 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %996 = %994.0;
    %997 = %995.0;
    (%996, %997)
  };
  %998() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_756() -> (Tensor[(16, 2, 15), uint16],) {
  %1001 = fn () -> (Tensor[(16, 2, 15), uint16],) {
    %999 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
    %1000 = %999.1;
    (%1000,)
  };
  %1001() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_11060() -> (Tensor[(3, 8, 13), float32],) {
  %1002 = @func_8357() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1003 = %1002.0;
  (%1003,)
}

def @func_28773(%var_28772: Tensor[(12, 8, 2), float64]) -> (Tensor[(12, 8, 2), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1009 = fn (%var_28754: Tensor[(12, 8, 2), float64]) -> (Tensor[(12, 8, 2), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
    %1004 = cast(%var_28754, dtype="float64") /* ty=Tensor[(12, 8, 2), float64] */;
    %1005 = @func_28363() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1006 = sin(%1004) /* ty=Tensor[(12, 8, 2), float64] */;
    %1007 = %1005.0;
    %1008 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
    (%1006, %1007, %1008)
  };
  %1009(%var_28772) /* ty=(Tensor[(12, 8, 2), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_16689() -> Tensor[(3, 8, 13), float32] {
  %1010 = @func_14992() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1010.0
}

def @func_26410() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  @func_26408() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_18557() -> (Tensor[(16, 2, 15), uint16], float64, Tensor[(16, 2, 15), float32]) {
  %1011 = @func_4960() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), int16]) */;
  %1012 = @func_18079() /* ty=(Tensor[(16, 2, 15), bool], float64, float64, Tensor[(3, 8, 13), float32]) */;
  %1013 = @func_17846() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1014 = %1011.0;
  %1015 = %1012.2;
  %1016 = %1013.1;
  (%1014, %1015, %1016)
}

def @func_9573() -> (Tensor[(16, 2, 15), float32], Tensor[(480), uint16]) {
  %1017 = @func_7412() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), float32]) */;
  %1018 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1019 = %1017.1;
  %1020 = %1018.2;
  (%1019, %1020)
}

def @func_8780() -> (Tensor[(3, 8, 13), float32],) {
  %1021 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1021,)
}

def @func_12686() -> (Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1022 = @func_1453() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1023 = @func_2756() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1024 = @func_7265() /* ty=Tensor[(480), uint16] */;
  %1025 = %1022.3;
  %1026 = %1023.0;
  (%1024, %1025, %1026)
}

def @func_11263() -> Tensor[(16, 2, 15), uint16] {
  %1027 = fn () -> Tensor[(16, 2, 15), uint16] {
    @func_8307() /* ty=Tensor[(16, 2, 15), uint16] */
  };
  %1027() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_9691() -> (Tensor[(16, 2, 15), bool],) {
  %1028 = @func_8367() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */;
  %1029 = %1028.1;
  (%1029,)
}

def @func_17666() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  %1030 = @func_6451() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1031 = @func_8838() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
  %1032 = %1030.0;
  %1033 = @func_5491() /* ty=Tensor[(3, 8, 13), float32] */;
  %1034 = %1031.1;
  (%1032, %1033, %1034)
}

def @func_16925() -> Tensor[(3, 8, 13), float32] {
  @func_16923() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_14187(%var_14185: Tensor[(308), uint8]) -> (Tensor[(3, 8, 13), float32], Tensor[(2, 11, 14), bool], Tensor[(308), uint8]) {
  @func_14184(%var_14185) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(2, 11, 14), bool], Tensor[(308), uint8]) */
}

def @func_2721() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  @func_2719() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_10794() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  @func_10792() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_14947(%var_14946: Tensor[(2560), float32]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 16, 10), float32], Tensor[(2560), float32]) {
  %1041 = fn (%var_14940: Tensor[(2560), float32]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 16, 10), float32], Tensor[(2560), float32]) {
    %1035 = @func_10028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */;
    %1036 = cast(%var_14940, dtype="float32") /* ty=Tensor[(2560), float32] */;
    %1037 = reshape(%1036, newshape=[16, 16, 10]) /* ty=Tensor[(16, 16, 10), float32] */;
    %1038 = @func_8566(%1037) /* ty=(Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32]) */;
    %1039 = %1035.0;
    %1040 = %1038.0;
    (%1039, %1040, %var_14940)
  };
  %1041(%var_14946) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 16, 10), float32], Tensor[(2560), float32]) */
}

def @func_12361() -> (Tensor[(3, 8, 13), float32],) {
  %1044 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %1042 = @func_2914() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1043 = %1042.0;
    (%1043,)
  };
  %1044() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_26408() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1045 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1046 = %1045.0;
  %1047 = @func_20856() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1046, %1047)
}

def @func_5211() -> (Tensor[(3, 8, 13), float32],) {
  %1048 = @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1049 = %1048.0;
  (%1049,)
}

def @func_15372(%var_15370: Tensor[(8, 5, 3), float32]) -> Tensor[(8, 5, 3), float32] {
  @func_15369(%var_15370) /* ty=Tensor[(8, 5, 3), float32] */
}

def @func_11062() -> (Tensor[(3, 8, 13), float32],) {
  @func_11060() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_21874() -> Tensor[(3, 8, 13), float32] {
  %1050 = @func_19035() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1050.1
}

def @func_7673() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
  %1055 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
    %1051 = @func_2914() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1052 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
    %1053 = %1051.0;
    %1054 = %1052.0;
    (%1053, %1054)
  };
  %1055() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */
}

def @func_10319(%var_10316: float64) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], float64, Tensor[(945), float64]) {
  %1056 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1057 = cast(%var_10316, dtype="float64") /* ty=float64 */;
  %1058 = cast(meta[relay.Constant][24] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %1059 = reshape(%1057, newshape=[]) /* ty=float64 */;
  %1060 = reshape(%1058, newshape=[7, 15, 9]) /* ty=Tensor[(7, 15, 9), float64] */;
  %1061 = @func_5686(%1059, %1060) /* ty=(Tensor[(7, 15, 9), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1062 = %1056.2;
  %1063 = %1061.2;
  (%1062, %1063, %var_10316, meta[relay.Constant][24] /* ty=Tensor[(945), float64] */)
}

def @func_27488(%var_27474: Tensor[(297), float64]) -> (Tensor[(3, 8, 13), float32], Tensor[(11, 3, 9), float64], Tensor[(297), float64]) {
  %1064 = @func_26574() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1065 = cast(%var_27474, dtype="float64") /* ty=Tensor[(297), float64] */;
  %1066 = reshape(%1065, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), float64] */;
  %1067 = @func_25819(%1066) /* ty=(Tensor[(11, 3, 9), float64],) */;
  %1068 = %1064.0;
  %1069 = %1067.0;
  (%1068, %1069, %var_27474)
}

def @func_10957(%var_10910: Tensor[(1, 2288), int16]) -> (Tensor[(40, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(176), int16], Tensor[(1, 2288), int16]) {
  %1070 = @func_3759() /* ty=(Tensor[(40, 12), float64],) */;
  %1071 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
  %1072 = cast(meta[relay.Constant][25] /* ty=Tensor[(176), int16] */, dtype="int16") /* ty=Tensor[(176), int16] */;
  %1073 = cast(%var_10910, dtype="int16") /* ty=Tensor[(1, 2288), int16] */;
  %1074 = reshape(%1072, newshape=[11, 16, 1]) /* ty=Tensor[(11, 16, 1), int16] */;
  %1075 = reshape(%1073, newshape=[11, 16, 13]) /* ty=Tensor[(11, 16, 13), int16] */;
  %1076 = @func_6318(%1074, %1075) /* ty=(Tensor[(11, 16, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(8, 60), uint16], Tensor[(3, 8, 13), float32]) */;
  %1077 = %1070.0;
  %1078 = %1071.0;
  %1079 = %1076.3;
  (%1077, %1078, %1079, meta[relay.Constant][25] /* ty=Tensor[(176), int16] */, %var_10910)
}

def @func_1778() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) {
  %1080 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1081 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %1082 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1083 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1084 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %1085 = @func_1468() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1086 = cast(%1085, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %1087 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %1088 = %1080.0;
  %1089 = %1081.2;
  %1090 = %1082.0;
  %1091 = %1083.2;
  %1092 = %1084.2;
  %1093 = rsqrt(%1086) /* ty=Tensor[(16, 2, 15), float64] */;
  (%1087, %1088, %1089, %1090, %1091, %1092, %1093)
}

def @func_2482() -> Tensor[(3, 8, 13), float32] {
  @func_2480() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_7182() -> Tensor[(16, 2, 15), float64] {
  %1094 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1094.0
}

def @func_23997() -> (Tensor[(3, 8, 13), float32],) {
  %1096 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %1095 = @func_21474() /* ty=Tensor[(3, 8, 13), float32] */;
    (%1095,)
  };
  %1096() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_14229() -> (Tensor[(3, 8, 13), float32],) {
  %1097 = @func_1778() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */;
  %1098 = %1097.1;
  (%1098,)
}

def @func_11443() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) {
  %1099 = @func_6451() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1100 = @func_4162() /* ty=Tensor[(16, 2, 15), int32] */;
  %1101 = %1099.0;
  (%1100, %1101)
}

def @func_22862(%var_22861: Tensor[(308), uint8]) -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(308), uint8]) {
  %1109 = fn (%var_22835: Tensor[(308), uint8]) -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(308), uint8]) {
    %1102 = @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */;
    %1103 = cast(%var_22835, dtype="uint8") /* ty=Tensor[(308), uint8] */;
    %1104 = reshape(%1103, newshape=[308]) /* ty=Tensor[(308), uint8] */;
    %1105 = @func_14184(%1104) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(2, 11, 14), bool], Tensor[(308), uint8]) */;
    %1106 = %1102.5;
    %1107 = @func_20228() /* ty=Tensor[(3, 8, 13), float32] */;
    %1108 = %1105.0;
    (%1106, %1107, %1108, %var_22835)
  };
  %1109(%var_22861) /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(308), uint8]) */
}

def @func_27163() -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1116 = fn () -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
    %1110 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %1111 = @func_25109() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1112 = @func_2612() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1113 = %1110.1;
    %1114 = %1111.0;
    %1115 = %1112.0;
    (%1113, %1114, %1115)
  };
  %1116() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_8989() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %1117 = @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1118 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %1119 = %1117.1;
  %1120 = %1118.0;
  (%1119, %1120)
}

def @func_21928(%var_21915: Tensor[(126), int16]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(14, 3, 3), bool], Tensor[(126), int16]) {
  %1121 = @func_18597() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1122 = @func_21751() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1123 = cast(%var_21915, dtype="int16") /* ty=Tensor[(126), int16] */;
  %1124 = cast(%var_21915, dtype="int16") /* ty=Tensor[(126), int16] */;
  %1125 = reshape(%1123, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %1126 = reshape(%1124, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %1127 = @func_12881(%1125, %1126) /* ty=(Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1128 = %1121.0;
  %1129 = %1122.1;
  %1130 = %1127.0;
  (%1128, %1129, %1130, %var_21915)
}

def @func_23334() -> (Tensor[(3, 8, 13), float32],) {
  %1132 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %1131 = @func_20110() /* ty=Tensor[(3, 8, 13), float32] */;
    (%1131,)
  };
  %1132() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_3169() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %1136 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
    %1133 = @func_2612() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1134 = %1133.1;
    %1135 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
    (%1134, %1135)
  };
  %1136() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_28843(%var_28842: Tensor[(10, 14, 3), float64]) -> (Tensor[(10, 14, 3), float64], Tensor[(3, 8, 13), float32], uint16, Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1147 = fn (%var_28814: Tensor[(10, 14, 3), float64]) -> (Tensor[(10, 14, 3), float64], Tensor[(3, 8, 13), float32], uint16, Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
    %1137 = cast(%var_28814, dtype="float64") /* ty=Tensor[(10, 14, 3), float64] */;
    %1138 = cast(meta[relay.Constant][26] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1139 = reshape(%1138, newshape=[]) /* ty=uint16 */;
    %1140 = @func_24127(%1139) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], uint16) */;
    %1141 = @func_27911() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %1142 = @func_11060() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1143 = log10(%1137) /* ty=Tensor[(10, 14, 3), float64] */;
    %1144 = %1140.1;
    %1145 = %1141.0;
    %1146 = %1142.0;
    (%1143, %1144, meta[relay.Constant][26] /* ty=uint16 */, %1145, %1146)
  };
  %1147(%var_28842) /* ty=(Tensor[(10, 14, 3), float64], Tensor[(3, 8, 13), float32], uint16, Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_5333() -> (Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) {
  %1158 = fn () -> (Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) {
    %1148 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
    %1149 = %1148.0;
    %1150 = cast(%1149, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
    %1151 = reshape(%1150, newshape=[480]) /* ty=Tensor[(480), uint16] */;
    %1152 = @func_4533(%1151) /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1153 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1154 = @func_2796() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */;
    %1155 = %1152.4;
    %1156 = %1153.0;
    %1157 = %1154.0;
    (%1149, %1155, %1156, %1157)
  };
  %1158() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) */
}

def @func_18452() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1163 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
    %1159 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1160 = @func_5222() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %1161 = %1159.0;
    %1162 = %1160.0;
    (%1161, %1162)
  };
  %1163() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_8218(%var_8217: Tensor[(2160), float64]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 15, 9), float64], Tensor[(2160), float64], Tensor[(16, 2, 15), uint16]) {
  %1171 = fn (%var_8205: Tensor[(2160), float64]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 15, 9), float64], Tensor[(2160), float64], Tensor[(16, 2, 15), uint16]) {
    %1164 = cast(%var_8205, dtype="float64") /* ty=Tensor[(2160), float64] */;
    %1165 = reshape(%1164, newshape=[16, 15, 9]) /* ty=Tensor[(16, 15, 9), float64] */;
    %1166 = @func_7812(%1165) /* ty=(Tensor[(16, 15, 9), float64],) */;
    %1167 = @func_1453() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
    %1168 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
    %1169 = %1166.0;
    %1170 = %1167.3;
    (%1168, %1169, %var_8205, %1170)
  };
  %1171(%var_8217) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 15, 9), float64], Tensor[(2160), float64], Tensor[(16, 2, 15), uint16]) */
}

def @func_10530() -> Tensor[(3, 8, 13), float32] {
  %1172 = @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1172.1
}

def @func_26637() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) {
  %1177 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) {
    %1173 = @func_17255() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
    %1174 = @func_16939() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */;
    %1175 = %1173.0;
    %1176 = %1174.1;
    (%1175, %1176)
  };
  %1177() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */
}

def @func_7173() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  @func_7171() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_14651() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1178 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1179 = @func_6958() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1180 = %1178.0;
  %1181 = %1179.1;
  (%1180, %1181)
}

def @func_8385() -> Tensor[(3, 8, 13), int16] {
  %1182 = fn () -> Tensor[(3, 8, 13), int16] {
    @func_1585() /* ty=Tensor[(3, 8, 13), int16] */
  };
  %1182() /* ty=Tensor[(3, 8, 13), int16] */
}

def @func_21954() -> (Tensor[(3, 8, 13), float32],) {
  @func_21952() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_7281() -> Tensor[(3, 8, 13), float32] {
  @func_7279() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_6773() -> (Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) {
  %1183 = cast(meta[relay.Constant][27] /* ty=Tensor[(120, 8), uint16] */, dtype="uint16") /* ty=Tensor[(120, 8), uint16] */;
  %1184 = cast(meta[relay.Constant][28] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1185 = reshape(%1183, newshape=[480, 2]) /* ty=Tensor[(480, 2), uint16] */;
  %1186 = reshape(%1184, newshape=[24, 10]) /* ty=Tensor[(24, 10), float32] */;
  %1187 = @func_2964(%1185, %1186) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480, 2), float64], Tensor[(480, 2), int64], Tensor[(16, 2, 15), bool], Tensor[(480, 1), float64], Tensor[(3, 8, 13), int16], Tensor[(24, 10), float32]) */;
  %1188 = %1187.3;
  %1189 = cast(%1188, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
  %1190 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
  %1191 = cast(meta[relay.Constant][28] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %1192 = reshape(%1191, newshape=[10, 2, 12]) /* ty=Tensor[(10, 2, 12), float32] */;
  %1193 = @func_1918(%1192) /* ty=(Tensor[(10, 2, 12), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1194 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
  %1195 = sigmoid(%1189) /* ty=Tensor[(16, 2, 15), float64] */;
  %1196 = %1190.1;
  %1197 = %1193.2;
  (%1194, meta[relay.Constant][27] /* ty=Tensor[(120, 8), uint16] */, meta[relay.Constant][28] /* ty=Tensor[(240), float32] */, %1195, %1196, %1197)
}

def @func_14819() -> (Tensor[(16, 2, 15), uint16],) {
  %1198 = @func_3053() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1199 = %1198.0;
  (%1199,)
}

def @func_8164() -> (Tensor[(3, 8, 13), float32],) {
  @func_8162() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_19035() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1200 = @func_11852() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1201 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %1202 = %1200.0;
  %1203 = %1201.1;
  (%1202, %1203)
}

def @func_29087() -> Tensor[(3, 8, 13), float32] {
  %1204 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %1204.1
}

def @func_23179() -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  @func_23177() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */
}

def @func_10855() -> Tensor[(3, 8, 13), float32] {
  %1205 = @func_6935() /* ty=(Tensor[(240), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %1205.3
}

def @func_9107() -> (Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  @func_9105() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_2877() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  @func_2875() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_24382(%var_24380: Tensor[(21), int8], %var_24381: Tensor[(189), int8]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 7, 9), bool], Tensor[(21), int8], Tensor[(189), int8]) {
  %1213 = fn (%var_24370: Tensor[(21), int8], %var_24371: Tensor[(189), int8]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 7, 9), bool], Tensor[(21), int8], Tensor[(189), int8]) {
    %1206 = @func_21594() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1207 = cast(%var_24370, dtype="int8") /* ty=Tensor[(21), int8] */;
    %1208 = cast(%var_24371, dtype="int8") /* ty=Tensor[(189), int8] */;
    %1209 = reshape(%1207, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), int8] */;
    %1210 = reshape(%1208, newshape=[3, 7, 9]) /* ty=Tensor[(3, 7, 9), int8] */;
    %1211 = %1206.0;
    %1212 = @func_4181(%1209, %1210) /* ty=Tensor[(3, 7, 9), bool] */;
    (%1211, %1212, %var_24370, %var_24371)
  };
  %1213(%var_24380, %var_24381) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 7, 9), bool], Tensor[(21), int8], Tensor[(189), int8]) */
}

def @func_14593() -> (Tensor[(3, 8, 13), float32],) {
  %1214 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1214,)
}

def @func_26009(%var_26007: Tensor[(120), float32]) -> (Tensor[(8, 5, 3), float32], Tensor[(120), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(7, 6, 8), int32]) {
  @func_26006(%var_26007) /* ty=(Tensor[(8, 5, 3), float32], Tensor[(120), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(7, 6, 8), int32]) */
}

def @func_19682() -> Tensor[(16, 2, 15), float64] {
  %1216 = fn () -> Tensor[(16, 2, 15), float64] {
    %1215 = @func_4107() /* ty=(Tensor[(16, 2, 15), float64],) */;
    %1215.0
  };
  %1216() /* ty=Tensor[(16, 2, 15), float64] */
}

def @func_12506() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1221 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
    %1217 = @func_11714() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1218 = @func_10682() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
    %1219 = %1217.0;
    %1220 = %1218.1;
    (%1219, %1220)
  };
  %1221() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */
}

def @func_19554(%var_19553: Tensor[(2560), float32]) -> (Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(2560), float32]) {
  %1233 = fn (%var_19549: Tensor[(2560), float32]) -> (Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(2560), float32]) {
    %1222 = @func_19399() /* ty=(Tensor[(16, 2, 15), float64],) */;
    %1223 = @func_3053() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1224 = @func_11613() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
    %1225 = cast(%var_19549, dtype="float32") /* ty=Tensor[(2560), float32] */;
    %1226 = reshape(%1225, newshape=[2560]) /* ty=Tensor[(2560), float32] */;
    %1227 = @func_14945(%1226) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 16, 10), float32], Tensor[(2560), float32]) */;
    %1228 = %1222.0;
    %1229 = %1223.0;
    %1230 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
    %1231 = %1224.1;
    %1232 = %1227.1;
    (%1228, %1229, %1230, %1231, %1232, %var_19549)
  };
  %1233(%var_19553) /* ty=(Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(2560), float32]) */
}

def @func_20385() -> (Tensor[(3, 8, 13), float32], Tensor[(7, 6, 8), uint16], uint16) {
  %1240 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(7, 6, 8), uint16], uint16) {
    %1234 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1235 = cast(meta[relay.Constant][29] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %1236 = reshape(%1235, newshape=[]) /* ty=uint16 */;
    %1237 = @func_12491(%1236) /* ty=(Tensor[(7, 6, 8), uint16], Tensor[(3, 8, 13), float32]) */;
    %1238 = %1234.0;
    %1239 = %1237.0;
    (%1238, %1239, meta[relay.Constant][29] /* ty=uint16 */)
  };
  %1240() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(7, 6, 8), uint16], uint16) */
}

def @func_23177() -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1241 = @func_18752() /* ty=Tensor[(3, 8, 13), int16] */;
  %1242 = @func_21159() /* ty=Tensor[(3, 8, 13), float32] */;
  %1243 = @func_2622() /* ty=Tensor[(16, 2, 15), float32] */;
  (%1241, %1242, %1243)
}

def @func_23713() -> Tensor[(3, 3, 6), float64] {
  %1244 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 3, 6), float64] */, dtype="float64") /* ty=Tensor[(3, 3, 6), float64] */;
  asin(%1244) /* ty=Tensor[(3, 3, 6), float64] */
}

def @func_11775() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) {
  %1245 = @func_5019() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
  %1246 = @func_4107() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1247 = %1245.0;
  %1248 = %1246.0;
  (%1247, %1248)
}

def @func_7603() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_7601() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_8782() -> (Tensor[(3, 8, 13), float32],) {
  @func_8780() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_6277(%var_6275: Tensor[(945), float64]) -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], float64, Tensor[(945), float64]) {
  @func_6274(%var_6275) /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], float64, Tensor[(945), float64]) */
}

def @func_8881() -> (Tensor[(40, 12), uint16],) {
  @func_8879() /* ty=(Tensor[(40, 12), uint16],) */
}

def @func_1238(%var_1202: Tensor[(480, 1), uint16]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32], Tensor[(16, 2, 15), uint16]) {
  %1249 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1250 = cast(%var_1202, dtype="uint16") /* ty=Tensor[(480, 1), uint16] */;
  %1251 = reshape(%1250, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1252 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1253 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 12, 2), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 2), float64] */;
  %1254 = tan(%1253) /* ty=Tensor[(3, 12, 2), float64] */;
  %1255 = cast(meta[relay.Constant][31] /* ty=Tensor[(3, 12, 2), float64] */, dtype="float32") /* ty=Tensor[(3, 12, 2), float32] */;
  %1256 = shape_of(%1254, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1257 = cast(%1254, dtype="float32") /* ty=Tensor[(3, 12, 2), float32] */;
  %1258 = dyn.reshape(%1255, %1256, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1259 = cast(%var_1202, dtype="uint16") /* ty=Tensor[(480, 1), uint16] */;
  %1260 = reshape(%1259, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1261 = %1249.0;
  %1262 = @func_254(%1251) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1263 = %1252.1;
  %1264 = divide(%1257, %1258) /* ty=Tensor[(3, 12, 2), float32] */;
  %1265 = @func_254(%1260) /* ty=Tensor[(16, 2, 15), uint16] */;
  (%1261, %1262, %var_1202, %1263, %1264, %1265)
}

def @func_388() -> Tensor[(3, 8, 13), float32] {
  @func_386() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_11613() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  %1266 = @func_7969() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %1267 = @func_10190() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1268 = %1266.1;
  %1269 = %1267.1;
  (%1268, %1269)
}

def @func_8367() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) {
  %1270 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %1271 = @func_3300() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %1272 = %1270.0;
  %1273 = %1271.1;
  (%1272, %1273)
}

def @func_12884(%var_12882: Tensor[(14, 3, 3), int16], %var_12883: Tensor[(14, 3, 3), int16]) -> (Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1284 = fn (%var_12829: Tensor[(14, 3, 3), int16], %var_12830: Tensor[(14, 3, 3), int16]) -> (Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
    %1274 = cast(%var_12830, dtype="bool") /* ty=Tensor[(14, 3, 3), bool] */;
    %1275 = shape_of(%var_12829, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1276 = cast(%var_12829, dtype="bool") /* ty=Tensor[(14, 3, 3), bool] */;
    %1277 = dyn.reshape(%1274, %1275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1278 = @func_8945() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1279 = less(%1276, %1277) /* ty=Tensor[(14, 3, 3), bool] */;
    %1280 = @func_4986() /* ty=Tensor[(16, 2, 15), bool] */;
    %1281 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
    %1282 = %1278.0;
    %1283 = @func_5491() /* ty=Tensor[(3, 8, 13), float32] */;
    (%1279, %1280, %1281, %1282, %1283)
  };
  %1284(%var_12882, %var_12883) /* ty=(Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_14467() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], float64, Tensor[(945), float64]) {
  %1285 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1286 = @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1287 = cast(meta[relay.Constant][32] /* ty=Tensor[(945), float64] */, dtype="float64") /* ty=Tensor[(945), float64] */;
  %1288 = reshape(%1287, newshape=[945]) /* ty=Tensor[(945), float64] */;
  %1289 = @func_6274(%1288) /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], float64, Tensor[(945), float64]) */;
  %1290 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  %1291 = @func_10078() /* ty=Tensor[(3, 8, 13), float32] */;
  %1292 = %1285.0;
  %1293 = %1286.0;
  %1294 = %1289.2;
  (%1290, %1291, %1292, %1293, %1294, meta[relay.Constant][32] /* ty=Tensor[(945), float64] */)
}

def @func_18102() -> (Tensor[(40, 12), float32], Tensor[(40, 12), float32]) {
  %1301 = fn () -> (Tensor[(40, 12), float32], Tensor[(40, 12), float32]) {
    %1295 = @func_17121() /* ty=(Tensor[(40, 12), bool], Tensor[(40, 12), float32], Tensor[(40, 12), float32]) */;
    %1296 = %1295.0;
    %1297 = cast(%1296, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
    %1298 = cast(%1296, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
    %1299 = atanh(%1297) /* ty=Tensor[(40, 12), float32] */;
    %1300 = log(%1298) /* ty=Tensor[(40, 12), float32] */;
    (%1299, %1300)
  };
  %1301() /* ty=(Tensor[(40, 12), float32], Tensor[(40, 12), float32]) */
}

def @func_8158() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %1306 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
    %1302 = @func_5332() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) */;
    %1303 = @func_5828() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
    %1304 = %1302.2;
    %1305 = %1303.1;
    (%1304, %1305)
  };
  %1306() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_18081() -> (Tensor[(16, 2, 15), bool], float64, float64, Tensor[(3, 8, 13), float32]) {
  @func_18079() /* ty=(Tensor[(16, 2, 15), bool], float64, float64, Tensor[(3, 8, 13), float32]) */
}

def @func_18119() -> Tensor[(16, 2, 15), uint16] {
  %1308 = fn () -> Tensor[(16, 2, 15), uint16] {
    %1307 = @func_17271() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1307.0
  };
  %1308() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_4185(%var_4183: Tensor[(3, 7, 1), int8], %var_4184: Tensor[(3, 7, 9), int8]) -> Tensor[(3, 7, 9), bool] {
  @func_4181(%var_4183, %var_4184) /* ty=Tensor[(3, 7, 9), bool] */
}

def @func_26813() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1316 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
    %1309 = @func_17160() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1310 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %1311 = @func_14992() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1312 = %1309.1;
    %1313 = %1310.1;
    %1314 = @func_4986() /* ty=Tensor[(16, 2, 15), bool] */;
    %1315 = %1311.1;
    (%1312, %1313, %1314, %1315)
  };
  %1316() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_26197() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1317 = @func_25351() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %1318 = @func_1453() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1319 = @func_11179() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1320 = @func_23986() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1321 = %1317.1;
  %1322 = %1318.3;
  %1323 = %1319.1;
  %1324 = %1320.0;
  (%1321, %1322, %1323, %1324)
}

def @func_22243() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) {
  %1338 = fn () -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) {
    %1325 = @func_5121() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
    %1326 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1327 = @func_7565() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1328 = @func_10451() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) */;
    %1329 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %1330 = @func_10028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32]) */;
    %1331 = %1325.1;
    %1332 = %1326.0;
    %1333 = %1327.1;
    %1334 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
    %1335 = %1328.5;
    %1336 = %1329.2;
    %1337 = %1330.3;
    (%1331, %1332, %1333, %1334, %1335, %1336, %1337)
  };
  %1338() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) */
}

def @func_15526(%var_15490: Tensor[(21), int8]) -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float64], Tensor[(21), int8], Tensor[(3, 63), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %1339 = @func_6451() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1340 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1341 = cast(%var_15490, dtype="int8") /* ty=Tensor[(21), int8] */;
  %1342 = cast(meta[relay.Constant][33] /* ty=Tensor[(3, 63), bool] */, dtype="bool") /* ty=Tensor[(3, 63), bool] */;
  %1343 = reshape(%1341, newshape=[21]) /* ty=Tensor[(21), int8] */;
  %1344 = reshape(%1342, newshape=[3, 7, 9]) /* ty=Tensor[(3, 7, 9), bool] */;
  %1345 = @func_5623(%1343, %1344) /* ty=(Tensor[(16, 2, 15), float64], Tensor[(21), int8], Tensor[(189), int8], Tensor[(3, 7, 9), int64]) */;
  %1346 = @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1347 = @func_3053() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1348 = %1339.0;
  %1349 = %1340.0;
  %1350 = %1345.0;
  %1351 = %1346.0;
  %1352 = %1347.0;
  (%1348, %1349, %1350, %var_15490, meta[relay.Constant][33] /* ty=Tensor[(3, 63), bool] */, %1351, %1352)
}

def @func_5397() -> Tensor[(16, 2, 15), float32] {
  @func_5395() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_20957(%var_20955: uint32, %var_20956: Tensor[(15, 2, 3), uint32]) -> (Tensor[(15, 2, 3), bool],) {
  %1356 = fn (%var_20948: uint32, %var_20949: Tensor[(15, 2, 3), uint32]) -> (Tensor[(15, 2, 3), bool],) {
    %1353 = cast(%var_20948, dtype="bool") /* ty=bool */;
    %1354 = cast(%var_20949, dtype="bool") /* ty=Tensor[(15, 2, 3), bool] */;
    %1355 = greater(%1353, %1354) /* ty=Tensor[(15, 2, 3), bool] */;
    (%1355,)
  };
  %1356(%var_20955, %var_20956) /* ty=(Tensor[(15, 2, 3), bool],) */
}

def @func_22342() -> (Tensor[(3, 8, 13), float32],) {
  %1359 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %1357 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1358 = %1357.0;
    (%1358,)
  };
  %1359() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_13139() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %1360 = @func_12686() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1361 = @func_5872() /* ty=Tensor[(3, 8, 13), float32] */;
  %1362 = @func_8452() /* ty=Tensor[(16, 2, 15), float32] */;
  %1363 = %1360.2;
  (%1361, %1362, %1363)
}

def @func_18149() -> (Tensor[(3, 8, 13), float32],) {
  @func_18147() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_18384() -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %1364 = @func_5828() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %1365 = @func_8256() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32]) */;
  %1366 = %1364.0;
  %1367 = %1365.0;
  %1368 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1366, %1367, %1368)
}

def @func_20059() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) {
  @func_20057() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */
}

def @func_16525() -> Tensor[(16, 2, 15), bool] {
  @func_16523() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_26888(%var_26886: Tensor[(7, 5, 1), uint8], %var_26887: Tensor[(7, 5, 8), uint8]) -> (Tensor[(7, 5, 8), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) {
  @func_26884(%var_26886, %var_26887) /* ty=(Tensor[(7, 5, 8), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */
}

def @func_16968() -> Tensor[(3, 8, 13), float32] {
  @func_16966() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_27750() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  @func_27748() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_3549() -> (Tensor[(16, 2, 15), float64],) {
  %1373 = fn () -> (Tensor[(16, 2, 15), float64],) {
    %1369 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1370 = %1369.0;
    %1371 = cast(%1370, dtype="float64") /* ty=Tensor[(16, 2, 15), float64] */;
    %1372 = exp(%1371) /* ty=Tensor[(16, 2, 15), float64] */;
    (%1372,)
  };
  %1373() /* ty=(Tensor[(16, 2, 15), float64],) */
}

def @func_8620() -> (Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32]) {
  %1374 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1375 = @func_3100() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1376 = %1374.0;
  %1377 = %1375.0;
  (%1376, %1377)
}

def @func_12665() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1378 = @func_9426() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1379 = @func_5174() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %1380 = %1378.0;
  %1381 = %1379.3;
  %1382 = @func_10642() /* ty=Tensor[(16, 2, 15), float32] */;
  (%1380, %1381, %1382)
}

def @func_28214() -> (Tensor[(16, 2, 15), float32],) {
  %1384 = fn () -> (Tensor[(16, 2, 15), float32],) {
    %1383 = @func_16893() /* ty=Tensor[(16, 2, 15), float32] */;
    (%1383,)
  };
  %1384() /* ty=(Tensor[(16, 2, 15), float32],) */
}

def @func_28331() -> Tensor[(3, 8, 13), float32] {
  %1385 = fn () -> Tensor[(3, 8, 13), float32] {
    @func_7470() /* ty=Tensor[(3, 8, 13), float32] */
  };
  %1385() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_12414() -> (Tensor[(3, 8, 13), float32],) {
  %1386 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1387 = %1386.0;
  (%1387,)
}

def @func_2719() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %1388 = @func_1868() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %1389 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1390 = %1388.1;
  %1391 = %1389.4;
  %1392 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%1390, %1391, %1392)
}

def @func_5020() -> (Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) {
  %1396 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) {
    %1393 = @func_3759() /* ty=(Tensor[(40, 12), float64],) */;
    %1394 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
    %1395 = %1393.0;
    (%1394, %1395)
  };
  %1396() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */
}

def @func_18987() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1400 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
    %1397 = @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1398 = %1397.0;
    %1399 = @func_11905() /* ty=Tensor[(3, 8, 13), float32] */;
    (%1398, %1399)
  };
  %1400() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_21727() -> Tensor[(3, 8, 13), float32] {
  %1401 = @func_7462() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1401.0
}

def @func_25153() -> (Tensor[(16, 2, 15), float32],) {
  @func_25151() /* ty=(Tensor[(16, 2, 15), float32],) */
}

def @func_1277() -> (Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) {
  %1406 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) {
    %1402 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1403 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
    %1404 = %1402.1;
    %1405 = %1403.2;
    (%1404, %1405)
  };
  %1406() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */
}

def @func_24667() -> Tensor[(40, 12), int8] {
  @func_24665() /* ty=Tensor[(40, 12), int8] */
}

def @func_25289() -> (Tensor[(16, 2, 15), uint16],) {
  @func_25287() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_15247() -> Tensor[(16, 2, 15), uint16] {
  %1407 = @func_4960() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), int16]) */;
  %1407.0
}

def @func_13225() -> (Tensor[(3, 8, 13), float32],) {
  %1408 = @func_5491() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1408,)
}

def @func_8030() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_8028() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_13491() -> Tensor[(480), uint16] {
  %1409 = fn () -> Tensor[(480), uint16] {
    @func_11590() /* ty=Tensor[(480), uint16] */
  };
  %1409() /* ty=Tensor[(480), uint16] */
}

def @func_14994() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_14992() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_15629() -> (Tensor[(3, 8, 13), float32],) {
  %1410 = @func_13893() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1411 = %1410.1;
  (%1411,)
}

def @func_11591() -> Tensor[(480), uint16] {
  %1413 = fn () -> Tensor[(480), uint16] {
    %1412 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %1412.1
  };
  %1413() /* ty=Tensor[(480), uint16] */
}

def @func_11623() -> Tensor[(16, 2, 15), uint16] {
  %1414 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %1414.0
}

def @func_27419() -> (Tensor[(16, 2, 15), uint32],) {
  @func_27417() /* ty=(Tensor[(16, 2, 15), uint32],) */
}

def @func_29460(%var_29459: Tensor[(6, 5, 12), float64]) -> (Tensor[(6, 5, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) {
  %1422 = fn (%var_29405: Tensor[(6, 5, 12), float64]) -> (Tensor[(6, 5, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) {
    %1415 = cast(%var_29405, dtype="float64") /* ty=Tensor[(6, 5, 12), float64] */;
    %1416 = @func_28213() /* ty=(Tensor[(16, 2, 15), float32],) */;
    %1417 = log2(%1415) /* ty=Tensor[(6, 5, 12), float64] */;
    %1418 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
    %1419 = @func_16893() /* ty=Tensor[(16, 2, 15), float32] */;
    %1420 = @func_11349() /* ty=Tensor[(16, 2, 15), int32] */;
    %1421 = %1416.0;
    (%1417, %1418, %1419, %1420, %1421)
  };
  %1422(%var_29459) /* ty=(Tensor[(6, 5, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) */
}

def @func_25963() -> Tensor[(3, 8, 13), float32] {
  @func_25961() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_3838() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) {
  %1427 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) {
    %1423 = @func_1276() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
    %1424 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %1425 = %1423.0;
    %1426 = %1424.2;
    (%1425, %1426)
  };
  %1427() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */
}

def @func_23625() -> (Tensor[(16, 2, 15), float32],) {
  @func_23623() /* ty=(Tensor[(16, 2, 15), float32],) */
}

def @func_26488() -> Tensor[(3, 8, 13), float32] {
  %1428 = @func_7462() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1428.1
}

def @func_853() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1429 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1430 = %1429.0;
  %1431 = cast(%1430, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  %1432 = reshape(%1431, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1433 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1434 = @func_254(%1432) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1435 = %1433.4;
  (%1430, %1434, %1435)
}

def @func_12158() -> (Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) {
  %1442 = fn () -> (Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) {
    %1436 = @func_9849() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
    %1437 = @func_8256() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32]) */;
    %1438 = @func_6107() /* ty=(Tensor[(480), uint16],) */;
    %1439 = %1436.1;
    %1440 = %1437.1;
    %1441 = %1438.0;
    (%1439, %1440, %1441)
  };
  %1442() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) */
}

def @func_12491(%var_12466: uint16) -> (Tensor[(7, 6, 8), uint16], Tensor[(3, 8, 13), float32]) {
  %1443 = cast(%var_12466, dtype="uint16") /* ty=uint16 */;
  %1444 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 6, 8), uint16] */, dtype="uint16") /* ty=Tensor[(7, 6, 8), uint16] */;
  %1445 = @func_8945() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1446 = bitwise_xor(%1443, %1444) /* ty=Tensor[(7, 6, 8), uint16] */;
  %1447 = %1445.0;
  (%1446, %1447)
}

def @func_25151() -> (Tensor[(16, 2, 15), float32],) {
  %1448 = @func_10740() /* ty=Tensor[(16, 2, 15), float32] */;
  (%1448,)
}

def @func_24483() -> Tensor[(3, 8, 13), float32] {
  @func_24481() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_23872() -> (Tensor[(40, 12), float32],) {
  %1451 = fn () -> (Tensor[(40, 12), float32],) {
    %1449 = @func_17121() /* ty=(Tensor[(40, 12), bool], Tensor[(40, 12), float32], Tensor[(40, 12), float32]) */;
    %1450 = %1449.1;
    (%1450,)
  };
  %1451() /* ty=(Tensor[(40, 12), float32],) */
}

def @func_14821() -> (Tensor[(16, 2, 15), uint16],) {
  @func_14819() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_11315() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_11313() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_25667(%var_25666: Tensor[(13, 1, 4), float64]) -> Tensor[(13, 1, 4), bool] {
  %1457 = fn (%var_25658: Tensor[(13, 1, 4), float64]) -> Tensor[(13, 1, 4), bool] {
    %1452 = cast(-3.58082f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %1453 = cast(%var_25658, dtype="float64") /* ty=Tensor[(13, 1, 4), float64] */;
    %1454 = mod(%1452, %1453) /* ty=Tensor[(13, 1, 4), float64] */;
    %1455 = cast(-3.58082f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %1456 = cast(%1454, dtype="bool") /* ty=Tensor[(13, 1, 4), bool] */;
    greater(%1455, %1456) /* ty=Tensor[(13, 1, 4), bool] */
  };
  %1457(%var_25666) /* ty=Tensor[(13, 1, 4), bool] */
}

def @func_8256() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), int32]) {
  %1458 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %1459 = @func_3887() /* ty=Tensor[(16, 2, 15), float32] */;
  %1460 = %1458.1;
  (%1459, %1460)
}

def @func_7470() -> Tensor[(3, 8, 13), float32] {
  %1461 = @func_6958() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1461.1
}

def @func_23930(%var_23928: uint64, %var_23929: Tensor[(3, 4, 16), uint64]) -> (Tensor[(3, 4, 16), uint64],) {
  @func_23926(%var_23928, %var_23929) /* ty=(Tensor[(3, 4, 16), uint64],) */
}

def @func_25927(%var_25925: Tensor[(13, 7, 13), float32]) -> (Tensor[(13, 7, 13), float32],) {
  @func_25924(%var_25925) /* ty=(Tensor[(13, 7, 13), float32],) */
}

def @func_14002() -> (Tensor[(16, 2, 15), int32],) {
  %1463 = fn () -> (Tensor[(16, 2, 15), int32],) {
    %1462 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
    (%1462,)
  };
  %1463() /* ty=(Tensor[(16, 2, 15), int32],) */
}

def @func_23199() -> (Tensor[(16, 2, 15), bool],) {
  %1466 = fn () -> (Tensor[(16, 2, 15), bool],) {
    %1464 = @func_20361() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %1465 = %1464.0;
    (%1465,)
  };
  %1466() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_11131() -> Tensor[(16, 2, 15), bool] {
  %1467 = @func_7345() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1467.0
}

def @func_24533() -> (Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1468 = @func_23737() /* ty=Tensor[(16, 2, 15), float64] */;
  %1469 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1470 = @func_3351() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1468, %1469, %1470)
}

def @func_5455() -> (Tensor[(3, 8, 13), float32],) {
  %1471 = @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1472 = %1471.0;
  (%1472,)
}

def @func_29500() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1473 = @func_15325() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1474 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %1475 = %1473.0;
  %1476 = %1474.0;
  (%1475, %1476)
}

def @func_1585() -> Tensor[(3, 8, 13), int16] {
  %1477 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %1478 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1479 = %1478.0;
  %1480 = cast(%1479, dtype="int16") /* ty=Tensor[(3, 8, 13), int16] */;
  %1481 = shape_of(%1477, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1482 = cast(%1477, dtype="int16") /* ty=Tensor[(3, 8, 13), int16] */;
  %1483 = dyn.reshape(%1480, %1481, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_and(%1482, %1483) /* ty=Tensor[(3, 8, 13), int16] */
}

def @func_19400() -> (Tensor[(16, 2, 15), float64],) {
  %1486 = fn () -> (Tensor[(16, 2, 15), float64],) {
    %1484 = @func_14675() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) */;
    %1485 = %1484.1;
    (%1485,)
  };
  %1486() /* ty=(Tensor[(16, 2, 15), float64],) */
}

def @func_8838() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) {
  %1487 = @func_3300() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %1488 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
  %1489 = %1487.1;
  (%1488, %1489)
}

def @func_14231() -> (Tensor[(3, 8, 13), float32],) {
  @func_14229() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_24603() -> (Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1490 = @func_14992() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1491 = @func_22341() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1492 = @func_4162() /* ty=Tensor[(16, 2, 15), int32] */;
  %1493 = %1490.0;
  %1494 = %1491.0;
  (%1492, %1493, %1494)
}

def @func_15326() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  %1501 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
    %1495 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1496 = @func_8357() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %1497 = %1495.0;
    %1498 = @func_8452() /* ty=Tensor[(16, 2, 15), float32] */;
    %1499 = @func_14145() /* ty=Tensor[(16, 2, 15), uint16] */;
    %1500 = %1496.1;
    (%1497, %1498, %1499, %1500)
  };
  %1501() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */
}

def @func_25605() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16]) {
  @func_25603() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16]) */
}

def @func_17272() -> (Tensor[(16, 2, 15), uint16],) {
  %1503 = fn () -> (Tensor[(16, 2, 15), uint16],) {
    %1502 = @func_1468() /* ty=Tensor[(16, 2, 15), uint16] */;
    (%1502,)
  };
  %1503() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_14135() -> (Tensor[(480), uint16],) {
  @func_14133() /* ty=(Tensor[(480), uint16],) */
}

def @func_13846() -> Tensor[(16, 2, 15), uint16] {
  %1505 = fn () -> Tensor[(16, 2, 15), uint16] {
    %1504 = @func_7171() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %1504.0
  };
  %1505() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_2341() -> (Tensor[(3, 8, 13), float32],) {
  %1506 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1507 = %1506.1;
  (%1507,)
}

def @func_6959() -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %1511 = fn () -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
    %1508 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1509 = @func_5395() /* ty=Tensor[(16, 2, 15), float32] */;
    %1510 = %1508.0;
    (%1509, %1510)
  };
  %1511() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_13612() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1512 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1513 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
  %1514 = %1512.0;
  %1515 = @func_3351() /* ty=Tensor[(3, 8, 13), float32] */;
  %1516 = @func_10642() /* ty=Tensor[(16, 2, 15), float32] */;
  (%1513, %1514, %1515, %1516)
}

def @func_20223() -> (Tensor[(3, 8, 13), int16],) {
  %1517 = @func_3666() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32]) */;
  %1518 = %1517.0;
  (%1518,)
}

def @func_28235() -> (Tensor[(16, 2, 15), float32],) {
  %1521 = fn () -> (Tensor[(16, 2, 15), float32],) {
    %1519 = @func_8367() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */;
    %1520 = %1519.0;
    (%1520,)
  };
  %1521() /* ty=(Tensor[(16, 2, 15), float32],) */
}

def @func_2168() -> Tensor[(16, 2, 15), uint16] {
  %1522 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1522.0
}

def @func_20111() -> Tensor[(3, 8, 13), float32] {
  %1523 = fn () -> Tensor[(3, 8, 13), float32] {
    @func_3577() /* ty=Tensor[(3, 8, 13), float32] */
  };
  %1523() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_4846() -> (Tensor[(3, 8, 13), float32],) {
  %1526 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %1524 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
    %1525 = %1524.0;
    (%1525,)
  };
  %1526() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_6674() -> Tensor[(16, 2, 15), float32] {
  @func_6672() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_11625() -> Tensor[(16, 2, 15), uint16] {
  @func_11623() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_18849() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_18847() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_7472() -> Tensor[(3, 8, 13), float32] {
  @func_7470() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_18944(%var_18942: Tensor[(40, 12), float64]) -> (Tensor[(40, 12), float64], Tensor[(9, 7, 2), float32], Tensor[(126), float32], Tensor[(16, 2, 15), uint16]) {
  @func_18941(%var_18942) /* ty=(Tensor[(40, 12), float64], Tensor[(9, 7, 2), float32], Tensor[(126), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_4987() -> Tensor[(16, 2, 15), bool] {
  %1528 = fn () -> Tensor[(16, 2, 15), bool] {
    %1527 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %1527.0
  };
  %1528() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_16923() -> Tensor[(3, 8, 13), float32] {
  %1529 = @func_10828() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1529.0
}

def @func_25012() -> Tensor[(3, 8, 13), float32] {
  %1531 = fn () -> Tensor[(3, 8, 13), float32] {
    %1530 = @func_14907() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1530.0
  };
  %1531() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_12494(%var_12492: uint16) -> (Tensor[(7, 6, 8), uint16], Tensor[(3, 8, 13), float32]) {
  @func_12491(%var_12492) /* ty=(Tensor[(7, 6, 8), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_11668() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  @func_11666() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_18754() -> Tensor[(3, 8, 13), int16] {
  @func_18752() /* ty=Tensor[(3, 8, 13), int16] */
}

def @func_3453(%var_3452: Tensor[(16, 2, 15), uint16]) -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32]) {
  %1541 = fn (%var_3440: Tensor[(16, 2, 15), uint16]) -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32]) {
    %1532 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1533 = %1532.0;
    %1534 = cast(%var_3440, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
    %1535 = shape_of(%1533, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1536 = cast(%1533, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
    %1537 = dyn.reshape(%1534, %1535, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1538 = cast(%1533, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
    %1539 = less_equal(%1536, %1537) /* ty=Tensor[(16, 2, 15), bool] */;
    %1540 = log(%1538) /* ty=Tensor[(16, 2, 15), float32] */;
    (%1539, %1540)
  };
  %1541(%var_3452) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32]) */
}

def @func_1361() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1542 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1543 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1544 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %1545 = %1542.2;
  %1546 = %1543.2;
  (%1544, %1545, %1546)
}

def @func_16566() -> (Tensor[(120, 8), uint16],) {
  %1547 = @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */;
  %1548 = %1547.1;
  (%1548,)
}

def @func_11839() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  @func_11837() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_17256() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1553 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
    %1549 = @func_11313() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1550 = @func_13642() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */;
    %1551 = %1549.2;
    %1552 = %1550.0;
    (%1551, %1552)
  };
  %1553() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */
}

def @func_18298() -> (Tensor[(3, 8, 13), float32],) {
  %1556 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %1554 = @func_3666() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32]) */;
    %1555 = %1554.1;
    (%1555,)
  };
  %1556() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_14908() -> (Tensor[(3, 8, 13), float32],) {
  %1558 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %1557 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
    (%1557,)
  };
  %1558() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_6994() -> (Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) {
  @func_6992() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) */
}

def @func_19432() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1562 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
    %1559 = @func_15056() /* ty=(Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32]) */;
    %1560 = %1559.1;
    %1561 = @func_10530() /* ty=Tensor[(3, 8, 13), float32] */;
    (%1560, %1561)
  };
  %1562() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_2480() -> Tensor[(3, 8, 13), float32] {
  %1563 = @func_1453() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %1563.0
}

def @func_17122() -> (Tensor[(40, 12), bool], Tensor[(40, 12), float32], Tensor[(40, 12), float32]) {
  %1575 = fn () -> (Tensor[(40, 12), bool], Tensor[(40, 12), float32], Tensor[(40, 12), float32]) {
    %1564 = @func_5019() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
    %1565 = %1564.1;
    %1566 = cast(meta[relay.Constant][35] /* ty=Tensor[(40, 12), float64] */, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
    %1567 = shape_of(%1565, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1568 = cast(%1565, dtype="bool") /* ty=Tensor[(40, 12), bool] */;
    %1569 = dyn.reshape(%1566, %1567, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1570 = cast(%1565, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
    %1571 = cast(meta[relay.Constant][35] /* ty=Tensor[(40, 12), float64] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
    %1572 = equal(%1568, %1569) /* ty=Tensor[(40, 12), bool] */;
    %1573 = sigmoid(%1570) /* ty=Tensor[(40, 12), float32] */;
    %1574 = sin(%1571) /* ty=Tensor[(40, 12), float32] */;
    (%1572, %1573, %1574)
  };
  %1575() /* ty=(Tensor[(40, 12), bool], Tensor[(40, 12), float32], Tensor[(40, 12), float32]) */
}

def @func_28386() -> (Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) {
  %1576 = @func_2796() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */;
  %1577 = @func_27079() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %1578 = %1576.0;
  %1579 = %1577.0;
  (%1578, %1579)
}

def @func_8481() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1584 = fn () -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
    %1580 = @func_2680() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %1581 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %1582 = %1580.0;
    %1583 = %1581.0;
    (%1582, %1583)
  };
  %1584() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_26501() -> (Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) {
  %1588 = fn () -> (Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) {
    %1585 = @func_19399() /* ty=(Tensor[(16, 2, 15), float64],) */;
    %1586 = %1585.0;
    %1587 = @func_25174() /* ty=Tensor[(16, 2, 15), uint16] */;
    (%1586, %1587)
  };
  %1588() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) */
}

def @func_1454() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
  %1598 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) {
    %1589 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %1590 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1591 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %1592 = %1591.0;
    %1593 = cast(%1592, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
    %1594 = reshape(%1593, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %1595 = %1589.2;
    %1596 = %1590.0;
    %1597 = @func_254(%1594) /* ty=Tensor[(16, 2, 15), uint16] */;
    (%1595, %1596, %1592, %1597)
  };
  %1598() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */
}

def @func_16673(%var_16664: Tensor[(12, 4, 11), float64]) -> Tensor[(12, 4, 11), float64] {
  %1599 = cast(%var_16664, dtype="float64") /* ty=Tensor[(12, 4, 11), float64] */;
  sigmoid(%1599) /* ty=Tensor[(12, 4, 11), float64] */
}

def @func_1920(%var_1919: Tensor[(10, 2, 12), float32]) -> (Tensor[(10, 2, 12), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1609 = fn (%var_1878: Tensor[(10, 2, 12), float32]) -> (Tensor[(10, 2, 12), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
    %1600 = cast(%var_1878, dtype="float32") /* ty=Tensor[(10, 2, 12), float32] */;
    %1601 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1602 = @func_1276() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
    %1603 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1604 = asinh(%1600) /* ty=Tensor[(10, 2, 12), float32] */;
    %1605 = %1601.1;
    %1606 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
    %1607 = %1602.0;
    %1608 = %1603.3;
    (%1604, %1605, %1606, %1607, %1608)
  };
  %1609(%var_1919) /* ty=(Tensor[(10, 2, 12), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_2623() -> Tensor[(16, 2, 15), float32] {
  %1613 = fn () -> Tensor[(16, 2, 15), float32] {
    %1610 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1611 = %1610.0;
    %1612 = cast(%1611, dtype="float32") /* ty=Tensor[(16, 2, 15), float32] */;
    acos(%1612) /* ty=Tensor[(16, 2, 15), float32] */
  };
  %1613() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_11351() -> Tensor[(16, 2, 15), int32] {
  @func_11349() /* ty=Tensor[(16, 2, 15), int32] */
}

def @func_2703() -> (Tensor[(16, 2, 15), bool],) {
  %1616 = fn () -> (Tensor[(16, 2, 15), bool],) {
    %1614 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %1615 = %1614.0;
    (%1615,)
  };
  %1616() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_22370(%var_22369: Tensor[(308), uint8]) -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(2, 11, 14), bool], Tensor[(308), uint8]) {
  %1627 = fn (%var_22363: Tensor[(308), uint8]) -> (Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(2, 11, 14), bool], Tensor[(308), uint8]) {
    %1617 = @func_18384() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
    %1618 = @func_7412() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), float32]) */;
    %1619 = cast(%var_22363, dtype="uint8") /* ty=Tensor[(308), uint8] */;
    %1620 = cast(%var_22363, dtype="uint8") /* ty=Tensor[(308), uint8] */;
    %1621 = reshape(%1619, newshape=[2, 11, 14]) /* ty=Tensor[(2, 11, 14), uint8] */;
    %1622 = reshape(%1620, newshape=[2, 11, 14]) /* ty=Tensor[(2, 11, 14), uint8] */;
    %1623 = @func_3522(%1621, %1622) /* ty=(Tensor[(2, 11, 14), bool],) */;
    %1624 = %1617.0;
    %1625 = %1618.1;
    %1626 = %1623.0;
    (%1624, %1625, %1626, %var_22363)
  };
  %1627(%var_22369) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(2, 11, 14), bool], Tensor[(308), uint8]) */
}

def @func_5054(%var_5052: Tensor[(16, 2, 15), uint16]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) {
  @func_5051(%var_5052) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) */
}

def @func_23986() -> (Tensor[(3, 8, 13), float32],) {
  %1628 = @func_6191() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1629 = %1628.0;
  (%1629,)
}

def @func_15369(%var_15361: Tensor[(8, 5, 3), float32]) -> Tensor[(8, 5, 3), float32] {
  %1630 = cast(%var_15361, dtype="float32") /* ty=Tensor[(8, 5, 3), float32] */;
  rsqrt(%1630) /* ty=Tensor[(8, 5, 3), float32] */
}

def @func_27284() -> (Tensor[(3, 8, 13), float32], Tensor[(16), int64], Tensor[(112), int64]) {
  %1631 = @func_12360() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1632 = cast(meta[relay.Constant][36] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %1633 = reshape(%1632, newshape=[112, 1]) /* ty=Tensor[(112, 1), int64] */;
  %1634 = @func_13434(%1633) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(16), int64], Tensor[(112, 1), int64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
  %1635 = %1631.0;
  %1636 = %1634.4;
  (%1635, %1636, meta[relay.Constant][36] /* ty=Tensor[(112), int64] */)
}

def @func_13587() -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  %1641 = fn () -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
    %1637 = @func_1868() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
    %1638 = @func_6935() /* ty=(Tensor[(240), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %1639 = %1637.4;
    %1640 = %1638.3;
    (%1639, %1640)
  };
  %1641() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_20057() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) {
  %1642 = @func_15938() /* ty=(Tensor[(480), uint16],) */;
  %1643 = @func_2622() /* ty=Tensor[(16, 2, 15), float32] */;
  %1644 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1645 = %1642.0;
  (%1643, %1644, %1645)
}

def @func_6992() -> (Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) {
  %1646 = @func_6107() /* ty=(Tensor[(480), uint16],) */;
  %1647 = @func_3925() /* ty=Tensor[(16, 2, 15), int32] */;
  %1648 = %1646.0;
  (%1647, %1648)
}

def @func_28720() -> Tensor[(16, 2, 15), bool] {
  @func_24017() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_28388() -> (Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) {
  @func_28386() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_19986() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  %1656 = fn () -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
    %1649 = @func_12157() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), int32], Tensor[(480), uint16]) */;
    %1650 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
    %1651 = @func_15325() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
    %1652 = %1649.1;
    %1653 = %1650.0;
    %1654 = @func_7265() /* ty=Tensor[(480), uint16] */;
    %1655 = %1651.0;
    (%1652, %1653, %1654, %1655)
  };
  %1656() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_22017() -> Tensor[(3, 8, 13), float32] {
  %1657 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1657.1
}

def @func_7601() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1658 = @func_2719() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1659 = @func_6367() /* ty=Tensor[(3, 8, 13), float32] */;
  %1660 = cast(%1659, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
  %1661 = %1658.2;
  %1662 = cosh(%1660) /* ty=Tensor[(3, 8, 13), float32] */;
  %1663 = @func_3351() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1661, %1662, %1663)
}

def @func_3526(%var_3524: Tensor[(2, 11, 14), uint8], %var_3525: Tensor[(2, 11, 14), uint8]) -> (Tensor[(2, 11, 14), bool],) {
  @func_3522(%var_3524, %var_3525) /* ty=(Tensor[(2, 11, 14), bool],) */
}

def @func_17160() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1664 = @func_2914() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1665 = %1664.0;
  %1666 = @func_5872() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1665, %1666)
}

def @func_2427() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) {
  @func_2425() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */
}

def @func_3522(%var_3510: Tensor[(2, 11, 14), uint8], %var_3511: Tensor[(2, 11, 14), uint8]) -> (Tensor[(2, 11, 14), bool],) {
  %1667 = cast(%var_3511, dtype="bool") /* ty=Tensor[(2, 11, 14), bool] */;
  %1668 = shape_of(%var_3510, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1669 = cast(%var_3510, dtype="bool") /* ty=Tensor[(2, 11, 14), bool] */;
  %1670 = dyn.reshape(%1667, %1668, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1671 = less_equal(%1669, %1670) /* ty=Tensor[(2, 11, 14), bool] */;
  (%1671,)
}

def @func_25860() -> (Tensor[(16, 2, 15), uint16], Tensor[(120, 8), uint16]) {
  @func_25858() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(120, 8), uint16]) */
}

def @func_15963() -> (Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  @func_15961() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */
}

def @func_4533(%var_4505: Tensor[(480), uint16]) -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1672 = cast(%var_4505, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %1673 = reshape(%1672, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %1674 = @func_1116(%1673) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(480), uint16]) */;
  %1675 = @func_2612() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1676 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1677 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
  %1678 = %1674.0;
  %1679 = %1675.0;
  %1680 = %1676.0;
  (%1677, %1678, %var_4505, %1679, %1680)
}

def @func_13283() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1684 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
    %1681 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1682 = %1681.0;
    %1683 = @func_10642() /* ty=Tensor[(16, 2, 15), float32] */;
    (%1682, %1683)
  };
  %1684() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */
}

def @func_21159() -> Tensor[(3, 8, 13), float32] {
  %1685 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
  %1685.3
}

def @func_25488() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) {
  %1689 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) {
    %1686 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1687 = %1686.0;
    %1688 = @func_16091() /* ty=Tensor[(16, 2, 15), int32] */;
    (%1687, %1688)
  };
  %1689() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) */
}

def @func_5493() -> Tensor[(3, 8, 13), float32] {
  @func_5491() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_26937() -> (Tensor[(39), uint8], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(2560), float32]) {
  @func_26935() /* ty=(Tensor[(39), uint8], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(2560), float32]) */
}

def @func_8991() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  @func_8989() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_2797() -> (Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) {
  %1698 = fn () -> (Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) {
    %1690 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
    %1691 = %1690.2;
    %1692 = cast(%1691, dtype="uint16") /* ty=Tensor[(40, 12), uint16] */;
    %1693 = cast(%1691, dtype="uint16") /* ty=Tensor[(40, 12), uint16] */;
    %1694 = reshape(%1692, newshape=[480]) /* ty=Tensor[(480), uint16] */;
    %1695 = reshape(%1693, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %1696 = @func_629(%1694, %1695) /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %1697 = %1696.5;
    (%1691, %1697)
  };
  %1698() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_14113(%var_14112: Tensor[(480, 4), uint16]) -> (Tensor[(3, 8, 13), int16], Tensor[(480, 4), int16]) {
  %1705 = fn (%var_14105: Tensor[(480, 4), uint16]) -> (Tensor[(3, 8, 13), int16], Tensor[(480, 4), int16]) {
    %1699 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
    %1700 = %1699.2;
    %1701 = cast(%1700, dtype="int16") /* ty=Tensor[(480, 1), int16] */;
    %1702 = cast(%var_14105, dtype="int16") /* ty=Tensor[(480, 4), int16] */;
    %1703 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
    %1704 = bitwise_or(%1701, %1702) /* ty=Tensor[(480, 4), int16] */;
    (%1703, %1704)
  };
  %1705(%var_14112) /* ty=(Tensor[(3, 8, 13), int16], Tensor[(480, 4), int16]) */
}

def @func_6108() -> (Tensor[(480), uint16],) {
  %1708 = fn () -> (Tensor[(480), uint16],) {
    %1706 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
    %1707 = %1706.0;
    (%1707,)
  };
  %1708() /* ty=(Tensor[(480), uint16],) */
}

def @func_16255() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
  %1713 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
    %1709 = @func_10118() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
    %1710 = @func_8838() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
    %1711 = %1709.0;
    %1712 = %1710.1;
    (%1711, %1712)
  };
  %1713() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) */
}

def @func_16185() -> Tensor[(3, 8, 13), float32] {
  %1715 = fn () -> Tensor[(3, 8, 13), float32] {
    %1714 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1714.0
  };
  %1715() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_21369() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) {
  %1716 = @func_13139() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %1717 = @func_19399() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1718 = %1716.0;
  %1719 = %1717.0;
  (%1718, %1719)
}

def @func_26098() -> Tensor[(16, 2, 15), bool] {
  %1721 = fn () -> Tensor[(16, 2, 15), bool] {
    %1720 = @func_11381() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %1720.0
  };
  %1721() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_24782(%var_24780: Tensor[(308), uint8]) -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(308), uint8], Tensor[(16, 2, 15), bool]) {
  @func_24779(%var_24780) /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(308), uint8], Tensor[(16, 2, 15), bool]) */
}

def @func_16568() -> (Tensor[(120, 8), uint16],) {
  @func_16566() /* ty=(Tensor[(120, 8), uint16],) */
}

def @func_28647(%var_28638: Tensor[(35), uint8], %var_28639: Tensor[(280), uint8]) -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(35), uint8], Tensor[(280), uint8]) {
  %1722 = @func_11381() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1723 = cast(%var_28638, dtype="uint8") /* ty=Tensor[(35), uint8] */;
  %1724 = cast(%var_28639, dtype="uint8") /* ty=Tensor[(280), uint8] */;
  %1725 = reshape(%1723, newshape=[7, 5, 1]) /* ty=Tensor[(7, 5, 1), uint8] */;
  %1726 = reshape(%1724, newshape=[7, 5, 8]) /* ty=Tensor[(7, 5, 8), uint8] */;
  %1727 = @func_26884(%1725, %1726) /* ty=(Tensor[(7, 5, 8), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */;
  %1728 = %1722.0;
  %1729 = %1727.1;
  (%1728, %1729, %var_28638, %var_28639)
}

def @func_19796() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_19794() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_16893() -> Tensor[(16, 2, 15), float32] {
  %1730 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
  %1730.0
}

def @func_19723() -> (Tensor[(3, 8, 13), float32],) {
  %1733 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %1731 = @func_11666() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %1732 = %1731.1;
    (%1732,)
  };
  %1733() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_3887() -> Tensor[(16, 2, 15), float32] {
  @func_2622() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_15249() -> Tensor[(16, 2, 15), uint16] {
  @func_15247() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_25140() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1739 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
    %1734 = @func_7224() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
    %1735 = @func_10828() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1736 = %1734.2;
    %1737 = %1735.0;
    %1738 = @func_3887() /* ty=Tensor[(16, 2, 15), float32] */;
    (%1736, %1737, %1738)
  };
  %1739() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */
}

def @func_8945() -> (Tensor[(3, 8, 13), float32],) {
  %1740 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
  %1741 = %1740.0;
  (%1741,)
}

def @func_24129(%var_24128: uint16) -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], uint16) {
  %1748 = fn (%var_24116: uint16) -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], uint16) {
    %1742 = @func_18384() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
    %1743 = cast(%var_24116, dtype="uint16") /* ty=uint16 */;
    %1744 = reshape(%1743, newshape=[]) /* ty=uint16 */;
    %1745 = @func_12491(%1744) /* ty=(Tensor[(7, 6, 8), uint16], Tensor[(3, 8, 13), float32]) */;
    %1746 = %1742.0;
    %1747 = %1745.1;
    (%1746, %1747, %var_24116)
  };
  %1748(%var_24128) /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], uint16) */
}

def @func_27367() -> Tensor[(3, 8, 13), float32] {
  @func_22017() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_12908(%var_12906: Tensor[(126), int16]) -> (Tensor[(16, 16, 10), float32], Tensor[(14, 3, 3), bool], Tensor[(126), int16]) {
  @func_12905(%var_12906) /* ty=(Tensor[(16, 16, 10), float32], Tensor[(14, 3, 3), bool], Tensor[(126), int16]) */
}

def @func_12667() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  @func_12665() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */
}

def @func_14973(%var_14971: Tensor[(3, 1, 9), uint8], %var_14972: Tensor[(2160), float64]) -> (Tensor[(3, 4, 9), bool], Tensor[(16, 2, 15), bool], Tensor[(2160), float64], Tensor[(2160), float64]) {
  %1758 = fn (%var_14955: Tensor[(3, 1, 9), uint8], %var_14967: Tensor[(2160), float64]) -> (Tensor[(3, 4, 9), bool], Tensor[(16, 2, 15), bool], Tensor[(2160), float64], Tensor[(2160), float64]) {
    %1749 = cast(%var_14955, dtype="bool") /* ty=Tensor[(3, 1, 9), bool] */;
    %1750 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 4, 9), uint8] */, dtype="bool") /* ty=Tensor[(3, 4, 9), bool] */;
    %1751 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %1752 = cast(%var_14967, dtype="float64") /* ty=Tensor[(2160), float64] */;
    %1753 = reshape(%1752, newshape=[2160]) /* ty=Tensor[(2160), float64] */;
    %1754 = @func_8216(%1753) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 15, 9), float64], Tensor[(2160), float64], Tensor[(16, 2, 15), uint16]) */;
    %1755 = greater_equal(%1749, %1750) /* ty=Tensor[(3, 4, 9), bool] */;
    %1756 = %1751.1;
    %1757 = %1754.2;
    (%1755, %1756, %1757, %var_14967)
  };
  %1758(%var_14971, %var_14972) /* ty=(Tensor[(3, 4, 9), bool], Tensor[(16, 2, 15), bool], Tensor[(2160), float64], Tensor[(2160), float64]) */
}

def @func_24605() -> (Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_24603() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_22280() -> (Tensor[(480), uint16],) {
  %1759 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %1760 = %1759.0;
  (%1760,)
}

def @func_6451() -> (Tensor[(16, 2, 15), bool],) {
  %1761 = @func_3300() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %1762 = %1761.1;
  (%1762,)
}

def @func_13482() -> (Tensor[(16, 2, 15), bool],) {
  %1765 = fn () -> (Tensor[(16, 2, 15), bool],) {
    %1763 = @func_7733() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
    %1764 = %1763.2;
    (%1764,)
  };
  %1765() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_1116(%var_1113: Tensor[(480), uint16]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(480), uint16]) {
  %1766 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1767 = cast(%var_1113, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %1768 = cast(%var_1113, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %1769 = reshape(%1767, newshape=[480]) /* ty=Tensor[(480), uint16] */;
  %1770 = reshape(%1768, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
  %1771 = @func_629(%1769, %1770) /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1772 = %1766.2;
  %1773 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %1774 = %1771.0;
  (%1772, %1773, %1774, %var_1113)
}

def @func_10191() -> (Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) {
  %1781 = fn () -> (Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) {
    %1775 = @func_2719() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %1776 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %1777 = @func_1585() /* ty=Tensor[(3, 8, 13), int16] */;
    %1778 = %1775.0;
    %1779 = %1776.1;
    %1780 = @func_2168() /* ty=Tensor[(16, 2, 15), uint16] */;
    (%1777, %1778, %1779, %1780)
  };
  %1781() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), uint16]) */
}

def @func_254(%var_249: Tensor[(16, 2, 15), uint16]) -> Tensor[(16, 2, 15), uint16] {
  %1782 = cast(meta[relay.Constant][38] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1783 = cast(%var_249, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
  bitwise_or(%1782, %1783) /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_27491(%var_27489: Tensor[(297), float64]) -> (Tensor[(3, 8, 13), float32], Tensor[(11, 3, 9), float64], Tensor[(297), float64]) {
  @func_27488(%var_27489) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(11, 3, 9), float64], Tensor[(297), float64]) */
}

def @func_16966() -> Tensor[(3, 8, 13), float32] {
  %1784 = @func_5222() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1784.0
}

def @func_24957() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  @func_24955() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */
}

def @func_16691() -> Tensor[(3, 8, 13), float32] {
  @func_16689() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_7815(%var_7813: Tensor[(16, 15, 9), float64]) -> (Tensor[(16, 15, 9), float64],) {
  @func_7812(%var_7813) /* ty=(Tensor[(16, 15, 9), float64],) */
}

def @func_8947() -> (Tensor[(3, 8, 13), float32],) {
  @func_8945() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_7566() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1788 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
    %1785 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1786 = @func_5872() /* ty=Tensor[(3, 8, 13), float32] */;
    %1787 = %1785.0;
    (%1786, %1787)
  };
  %1788() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_2472() -> (Tensor[(3, 8, 13), float32],) {
  %1791 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %1789 = @func_1696() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
    %1790 = %1789.0;
    (%1790,)
  };
  %1791() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_8130() -> (Tensor[(16, 2, 15), uint16],) {
  @func_8128() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_21861() -> Tensor[(3, 8, 13), float32] {
  %1792 = fn () -> Tensor[(3, 8, 13), float32] {
    @func_21159() /* ty=Tensor[(3, 8, 13), float32] */
  };
  %1792() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_5942(%var_5939: Tensor[(8, 2, 1), int64], %var_5940: Tensor[(8, 2, 7), int64], %var_5941: Tensor[(480), uint16]) -> (Tensor[(8, 2, 7), int64], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(8, 2, 7), float32], Tensor[(40, 12), uint16]) {
  @func_5937(%var_5939, %var_5940, %var_5941) /* ty=(Tensor[(8, 2, 7), int64], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(8, 2, 7), float32], Tensor[(40, 12), uint16]) */
}

def @func_17086(%var_17039: Tensor[(7, 3), int8], %var_17040: Tensor[(189), int8]) -> (Tensor[(3, 8, 13), float32], Tensor[(7, 3), int8], Tensor[(3, 8, 13), float32], Tensor[(3, 7, 9), bool], Tensor[(40, 12), uint16]) {
  %1793 = @func_11852() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1794 = cast(%var_17039, dtype="int8") /* ty=Tensor[(7, 3), int8] */;
  %1795 = cast(%var_17040, dtype="int8") /* ty=Tensor[(189), int8] */;
  %1796 = reshape(%1794, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), int8] */;
  %1797 = reshape(%1795, newshape=[3, 7, 9]) /* ty=Tensor[(3, 7, 9), int8] */;
  %1798 = @func_4181(%1796, %1797) /* ty=Tensor[(3, 7, 9), bool] */;
  %1799 = cast(%var_17040, dtype="bool") /* ty=Tensor[(189), bool] */;
  %1800 = shape_of(%1798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1801 = cast(%1798, dtype="bool") /* ty=Tensor[(3, 7, 9), bool] */;
  %1802 = dyn.reshape(%1799, %1800, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1803 = @func_8879() /* ty=(Tensor[(40, 12), uint16],) */;
  %1804 = @func_14345() /* ty=Tensor[(3, 8, 13), float32] */;
  %1805 = %1793.0;
  %1806 = logical_or(%1801, %1802) /* ty=Tensor[(3, 7, 9), bool] */;
  %1807 = %1803.0;
  (%1804, %var_17039, %1805, %1806, %1807)
}

def @func_8406() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32]) {
  @func_8404() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32]) */
}

def @func_21596() -> (Tensor[(3, 8, 13), float32],) {
  @func_21594() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_10857() -> Tensor[(3, 8, 13), float32] {
  @func_10855() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_27079() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  %1808 = @func_6117() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1809 = %1808.0;
  %1810 = @func_24017() /* ty=Tensor[(16, 2, 15), bool] */;
  (%1809, %1810)
}

def @func_5109() -> (Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
  @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */
}

def @func_24284() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1811 = @func_19035() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1812 = @func_21594() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1813 = %1811.0;
  %1814 = %1812.0;
  (%1813, %1814)
}

def @func_10499() -> (Tensor[(480), uint16],) {
  %1816 = fn () -> (Tensor[(480), uint16],) {
    %1815 = @func_7265() /* ty=Tensor[(480), uint16] */;
    (%1815,)
  };
  %1816() /* ty=(Tensor[(480), uint16],) */
}

def @func_3434() -> Tensor[(16, 2, 15), uint16] {
  %1818 = fn () -> Tensor[(16, 2, 15), uint16] {
    %1817 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1817.0
  };
  %1818() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_23088() -> Tensor[(16, 2, 15), uint16] {
  %1819 = @func_8128() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1819.0
}

def @func_17668() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  @func_17666() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */
}

def @func_11892(%var_11891: Tensor[(39), uint8]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) {
  %1828 = fn (%var_11886: Tensor[(39), uint8]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) {
    %1820 = @func_11837() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %1821 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
    %1822 = cast(%var_11886, dtype="uint8") /* ty=Tensor[(39), uint8] */;
    %1823 = reshape(%1822, newshape=[3, 13, 1]) /* ty=Tensor[(3, 13, 1), uint8] */;
    %1824 = @func_8675(%1823) /* ty=(Tensor[(3, 13, 1), bool],) */;
    %1825 = %1820.1;
    %1826 = %1821.1;
    %1827 = %1824.0;
    (%1825, %1826, %1827, %var_11886)
  };
  %1828(%var_11891) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(3, 13, 1), bool], Tensor[(39), uint8]) */
}

def @func_10596() -> (Tensor[(40, 12), float64], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %1829 = @func_5019() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */;
  %1830 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1831 = @func_2341() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1832 = %1829.1;
  %1833 = %1830.0;
  %1834 = %1831.0;
  (%1832, %1833, %1834)
}

def @func_12353() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1835 = @func_10530() /* ty=Tensor[(3, 8, 13), float32] */;
  %1836 = @func_10855() /* ty=Tensor[(3, 8, 13), float32] */;
  %1837 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %1838 = @func_6367() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1835, %1836, %1837, %1838)
}

def @func_6936() -> (Tensor[(240), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
  %1848 = fn () -> (Tensor[(240), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
    %1839 = @func_6773() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(120, 8), uint16], Tensor[(240), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */;
    %1840 = @func_2425() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
    %1841 = @func_6191() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1842 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
    %1843 = %1839.2;
    %1844 = @func_2029() /* ty=Tensor[(16, 2, 15), float32] */;
    %1845 = %1840.0;
    %1846 = %1841.0;
    %1847 = %1842.0;
    (%1843, %1844, %1845, %1846, %1847)
  };
  %1848() /* ty=(Tensor[(240), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */
}

def @func_27748() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1849 = @func_14593() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1850 = @func_11262() /* ty=Tensor[(16, 2, 15), uint16] */;
  %1851 = %1849.0;
  (%1850, %1851)
}

def @func_24307() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(126), int16]) {
  %1852 = @func_16751() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1853 = @func_24106() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1854 = cast(meta[relay.Constant][39] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %1855 = cast(meta[relay.Constant][39] /* ty=Tensor[(126), int16] */, dtype="int16") /* ty=Tensor[(126), int16] */;
  %1856 = reshape(%1854, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %1857 = reshape(%1855, newshape=[14, 3, 3]) /* ty=Tensor[(14, 3, 3), int16] */;
  %1858 = @func_12881(%1856, %1857) /* ty=(Tensor[(14, 3, 3), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1859 = %1852.0;
  %1860 = %1853.0;
  %1861 = %1858.2;
  (%1859, %1860, %1861, meta[relay.Constant][39] /* ty=Tensor[(126), int16] */)
}

def @func_8404() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32]) {
  %1862 = @func_7823() /* ty=Tensor[(3, 8, 13), float32] */;
  %1863 = @func_7182() /* ty=Tensor[(16, 2, 15), float64] */;
  %1864 = @func_2480() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1862, %1863, %1864)
}

def @func_27996() -> Tensor[(16, 2, 15), uint16] {
  @func_27994() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_10079() -> Tensor[(3, 8, 13), float32] {
  %1866 = fn () -> Tensor[(3, 8, 13), float32] {
    %1865 = @func_681() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */;
    %1865.0
  };
  %1866() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_25111() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_25109() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_13614() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  @func_13612() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */
}

def @func_18559() -> (Tensor[(16, 2, 15), uint16], float64, Tensor[(16, 2, 15), float32]) {
  @func_18557() /* ty=(Tensor[(16, 2, 15), uint16], float64, Tensor[(16, 2, 15), float32]) */
}

def @func_915() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %1878 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
    %1867 = @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %1868 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1869 = %1867.0;
    %1870 = cast(%1869, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
    %1871 = cast(%1869, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
    %1872 = reshape(%1870, newshape=[480]) /* ty=Tensor[(480), uint16] */;
    %1873 = reshape(%1871, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %1874 = @func_629(%1872, %1873) /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float64], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %1875 = %1868.0;
    %1876 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
    %1877 = %1874.4;
    (%1869, %1875, %1876, %1877)
  };
  %1878() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_18752() -> Tensor[(3, 8, 13), int16] {
  @func_8384() /* ty=Tensor[(3, 8, 13), int16] */
}

def @func_15056() -> (Tensor[(16, 16, 10), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32]) {
  %1879 = @func_12077() /* ty=(Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 16, 10), float32], Tensor[(16, 160), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1880 = @func_8162() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1881 = @func_1868() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) */;
  %1882 = @func_2875() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1883 = %1879.2;
  %1884 = %1880.0;
  %1885 = %1881.1;
  %1886 = %1882.0;
  (%1883, %1884, %1885, %1886)
}

def @func_11666() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1887 = @func_5222() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %1888 = @func_4404() /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) */;
  %1889 = %1887.1;
  %1890 = %1888.1;
  (%1889, %1890)
}

def @func_10292(%var_10291: Tensor[(1440), uint64]) -> (Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(1440), uint64], Tensor[(40, 12), float64]) {
  %1901 = fn (%var_10243: Tensor[(1440), uint64]) -> (Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(1440), uint64], Tensor[(40, 12), float64]) {
    %1891 = @func_2796() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */;
    %1892 = cast(%var_10243, dtype="uint64") /* ty=Tensor[(1440), uint64] */;
    %1893 = cast(%var_10243, dtype="uint64") /* ty=Tensor[(1440), uint64] */;
    %1894 = reshape(%1892, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), uint64] */;
    %1895 = reshape(%1893, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), uint64] */;
    %1896 = @func_4746(%1894, %1895) /* ty=(Tensor[(12, 15, 8), uint64],) */;
    %1897 = @func_3759() /* ty=(Tensor[(40, 12), float64],) */;
    %1898 = %1891.1;
    %1899 = %1896.0;
    %1900 = %1897.0;
    (%1898, %1899, %var_10243, %1900)
  };
  %1901(%var_10291) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(1440), uint64], Tensor[(40, 12), float64]) */
}

def @func_24309() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(126), int16]) {
  @func_24307() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(126), int16]) */
}

def @func_4107() -> (Tensor[(16, 2, 15), float64],) {
  %1902 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %1903 = %1902.0;
  (%1903,)
}

def @func_26064() -> (Tensor[(16, 2, 15), int32],) {
  %1904 = @func_25603() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16]) */;
  %1905 = %1904.1;
  (%1905,)
}

def @func_21053(%var_21051: Tensor[(660), float64]) -> (Tensor[(3, 8, 13), float32], Tensor[(11, 5, 12), float64], Tensor[(660), float64], Tensor[(3, 8, 13), float32]) {
  @func_21050(%var_21051) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(11, 5, 12), float64], Tensor[(660), float64], Tensor[(3, 8, 13), float32]) */
}

def @func_4706() -> (Tensor[(16, 2, 15), uint16],) {
  %1908 = fn () -> (Tensor[(16, 2, 15), uint16],) {
    %1906 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1907 = %1906.0;
    (%1907,)
  };
  %1908() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_3759() -> (Tensor[(40, 12), float64],) {
  %1909 = @func_2796() /* ty=(Tensor[(40, 12), uint16], Tensor[(3, 8, 13), float32]) */;
  %1910 = %1909.0;
  %1911 = cast(%1910, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %1912 = sqrt(%1911) /* ty=Tensor[(40, 12), float64] */;
  (%1912,)
}

def @func_24018() -> Tensor[(16, 2, 15), bool] {
  %1914 = fn () -> Tensor[(16, 2, 15), bool] {
    %1913 = @func_18384() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
    %1913.0
  };
  %1914() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_5367() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
  %1919 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
    %1915 = @func_4845() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1916 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
    %1917 = %1915.0;
    %1918 = %1916.0;
    (%1917, %1918)
  };
  %1919() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */
}

def @func_27614() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %1920 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
  %1921 = %1920.0;
  %1922 = @func_24481() /* ty=Tensor[(3, 8, 13), float32] */;
  (%1921, %1922)
}

def @func_25654() -> (Tensor[(16, 2, 15), int32],) {
  %1923 = @func_13186() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), int16]) */;
  %1924 = %1923.0;
  (%1924,)
}

def @func_10452() -> (Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) {
  %1936 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) {
    %1925 = @func_2756() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %1926 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
    %1927 = @func_3100() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1928 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
    %1929 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1930 = %1925.1;
    %1931 = %1926.2;
    %1932 = %1927.0;
    %1933 = @func_4986() /* ty=Tensor[(16, 2, 15), bool] */;
    %1934 = %1928.1;
    %1935 = %1929.3;
    (%1930, %1931, %1932, %1933, %1934, %1935)
  };
  %1936() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) */
}

def @func_5873() -> Tensor[(3, 8, 13), float32] {
  %1938 = fn () -> Tensor[(3, 8, 13), float32] {
    %1937 = @func_796() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1937.0
  };
  %1938() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_25109() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %1939 = @func_15228() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16], Tensor[(960, 2), uint16]) */;
  %1940 = @func_2612() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1941 = %1939.0;
  %1942 = %1940.0;
  (%1941, %1942)
}

def @func_5584() -> (Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(1440), uint64], Tensor[(3, 8, 13), float32]) {
  %1953 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(1440), uint64], Tensor[(3, 8, 13), float32]) {
    %1943 = @func_2251() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32]) */;
    %1944 = cast(meta[relay.Constant][40] /* ty=Tensor[(1440), uint64] */, dtype="uint64") /* ty=Tensor[(1440), uint64] */;
    %1945 = cast(meta[relay.Constant][40] /* ty=Tensor[(1440), uint64] */, dtype="uint64") /* ty=Tensor[(1440), uint64] */;
    %1946 = reshape(%1944, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), uint64] */;
    %1947 = reshape(%1945, newshape=[12, 15, 8]) /* ty=Tensor[(12, 15, 8), uint64] */;
    %1948 = @func_4746(%1946, %1947) /* ty=(Tensor[(12, 15, 8), uint64],) */;
    %1949 = @func_5366() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %1950 = %1943.3;
    %1951 = %1948.0;
    %1952 = %1949.0;
    (%1950, %1951, meta[relay.Constant][40] /* ty=Tensor[(1440), uint64] */, %1952)
  };
  %1953() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(12, 15, 8), uint64], Tensor[(1440), uint64], Tensor[(3, 8, 13), float32]) */
}

def @func_27648() -> Tensor[(3, 8, 13), float32] {
  @func_21474() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_10119() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) {
  %1960 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) {
    %1954 = @func_4705() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1955 = @func_8753() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %1956 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1957 = %1954.0;
    %1958 = %1955.0;
    %1959 = %1956.0;
    (%1957, %1958, %1959)
  };
  %1960() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */
}

def @func_24481() -> Tensor[(3, 8, 13), float32] {
  %1961 = @func_13893() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %1961.1
}

def @func_15194() -> (Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) {
  @func_15192() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(40, 12), float64]) */
}

def @func_23926(%var_23918: uint64, %var_23919: Tensor[(3, 4, 16), uint64]) -> (Tensor[(3, 4, 16), uint64],) {
  %1962 = cast(%var_23918, dtype="uint64") /* ty=uint64 */;
  %1963 = cast(%var_23919, dtype="uint64") /* ty=Tensor[(3, 4, 16), uint64] */;
  %1964 = maximum(%1962, %1963) /* ty=Tensor[(3, 4, 16), uint64] */;
  (%1964,)
}

def @func_26066() -> (Tensor[(16, 2, 15), int32],) {
  @func_26064() /* ty=(Tensor[(16, 2, 15), int32],) */
}

def @func_2284() -> (Tensor[(3, 8, 13), float32],) {
  @func_2282() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_20085(%var_20065: Tensor[(14, 9, 10), float64]) -> (Tensor[(14, 9, 10), float64], Tensor[(16, 2, 15), bool]) {
  %1965 = cast(%var_20065, dtype="float64") /* ty=Tensor[(14, 9, 10), float64] */;
  %1966 = @func_9691() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %1967 = tan(%1965) /* ty=Tensor[(14, 9, 10), float64] */;
  %1968 = %1966.0;
  (%1967, %1968)
}

def @func_26761() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
  %1972 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
    %1969 = @func_6535() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1970 = %1969.0;
    %1971 = @func_9281() /* ty=Tensor[(16, 2, 15), bool] */;
    (%1970, %1971)
  };
  %1972() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) */
}

def @func_20332() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) {
  %1979 = fn () -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) {
    %1973 = @func_11443() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
    %1974 = @func_7565() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %1975 = %1973.0;
    %1976 = @func_13845() /* ty=Tensor[(16, 2, 15), uint16] */;
    %1977 = @func_11349() /* ty=Tensor[(16, 2, 15), int32] */;
    %1978 = %1974.0;
    (%1975, %1976, %1977, %1978)
  };
  %1979() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(3, 8, 13), float32]) */
}

def @func_16752() -> (Tensor[(16, 2, 15), uint16],) {
  %1982 = fn () -> (Tensor[(16, 2, 15), uint16],) {
    %1980 = @func_755() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %1981 = %1980.0;
    (%1981,)
  };
  %1982() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_26592() -> (Tensor[(3, 8, 13), float32],) {
  %1985 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %1983 = @func_25306() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %1984 = %1983.0;
    (%1984,)
  };
  %1985() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_855() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  @func_853() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_27329(%var_27312: Tensor[(2160), float64]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 15, 9), float64], Tensor[(2160), float64], Tensor[(3, 8, 13), float32]) {
  %1986 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %1987 = cast(%var_27312, dtype="float64") /* ty=Tensor[(2160), float64] */;
  %1988 = reshape(%1987, newshape=[16, 15, 9]) /* ty=Tensor[(16, 15, 9), float64] */;
  %1989 = @func_7812(%1988) /* ty=(Tensor[(16, 15, 9), float64],) */;
  %1990 = @func_25351() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */;
  %1991 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  %1992 = %1986.0;
  %1993 = %1989.0;
  %1994 = %1990.0;
  (%1991, %1992, %1993, %var_27312, %1994)
}

def @func_14653() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_14651() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_24955() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  %1995 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %1996 = %1995.2;
  %1997 = @func_3681() /* ty=Tensor[(16, 2, 15), float32] */;
  (%1996, %1997)
}

def @func_26442() -> Tensor[(16, 2, 15), float32] {
  %1999 = fn () -> Tensor[(16, 2, 15), float32] {
    %1998 = @func_12505() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
    %1998.1
  };
  %1999() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_23715() -> Tensor[(3, 3, 6), float64] {
  @func_23713() /* ty=Tensor[(3, 3, 6), float64] */
}

def @func_2170() -> Tensor[(16, 2, 15), uint16] {
  @func_2168() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_4052() -> (Tensor[(3, 8, 13), float32],) {
  %2001 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %2000 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
    (%2000,)
  };
  %2001() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_1711() -> Tensor[(16, 2, 15), uint16] {
  %2002 = @func_1453() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
  %2002.1
}

def @func_5122() -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) {
  %2009 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) {
    %2003 = @func_2132() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %2004 = @func_5107() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %2005 = @func_3053() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %2006 = %2003.0;
    %2007 = %2004.1;
    %2008 = %2005.0;
    (%2006, %2007, %2008)
  };
  %2009() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */
}

def @func_6117() -> (Tensor[(3, 8, 13), float32],) {
  %2010 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %2011 = %2010.1;
  (%2011,)
}

def @func_21743() -> (Tensor[(3, 8, 13), float32],) {
  %2012 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %2013 = %2012.4;
  (%2013,)
}

def @func_10684() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) {
  @func_10682() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */
}

def @func_16835() -> Tensor[(3, 8, 13), float32] {
  @func_16833() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_24449(%var_24448: Tensor[(2, 5, 6), float32]) -> (Tensor[(2, 5, 6), float32], Tensor[(3, 8, 13), float32]) {
  %2018 = fn (%var_24433: Tensor[(2, 5, 6), float32]) -> (Tensor[(2, 5, 6), float32], Tensor[(3, 8, 13), float32]) {
    %2014 = cast(%var_24433, dtype="float32") /* ty=Tensor[(2, 5, 6), float32] */;
    %2015 = @func_11060() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %2016 = exp(%2014) /* ty=Tensor[(2, 5, 6), float32] */;
    %2017 = %2015.0;
    (%2016, %2017)
  };
  %2018(%var_24448) /* ty=(Tensor[(2, 5, 6), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_29388() -> (Tensor[(3, 8, 13), float32],) {
  %2019 = @func_20856() /* ty=Tensor[(3, 8, 13), float32] */;
  (%2019,)
}

def @func_20361() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %2020 = @func_17976() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %2021 = @func_17000() /* ty=Tensor[(16, 2, 15), bool] */;
  %2022 = @func_10078() /* ty=Tensor[(3, 8, 13), float32] */;
  %2023 = %2020.2;
  (%2021, %2022, %2023)
}

def @func_10960(%var_10958: Tensor[(1, 2288), int16]) -> (Tensor[(40, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(176), int16], Tensor[(1, 2288), int16]) {
  @func_10957(%var_10958) /* ty=(Tensor[(40, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(176), int16], Tensor[(1, 2288), int16]) */
}

def @func_11445() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) {
  @func_11443() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */
}

def @func_7412() -> (Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), float32]) {
  %2024 = @func_3666() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32]) */;
  %2025 = %2024.0;
  %2026 = @func_6672() /* ty=Tensor[(16, 2, 15), float32] */;
  (%2025, %2026)
}

def @func_14270(%var_14261: Tensor[(9, 7, 2), float32]) -> (Tensor[(9, 7, 2), float32],) {
  %2027 = cast(%var_14261, dtype="float32") /* ty=Tensor[(9, 7, 2), float32] */;
  %2028 = log(%2027) /* ty=Tensor[(9, 7, 2), float32] */;
  (%2028,)
}

def @func_2425() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16]) {
  %2029 = cast(meta[relay.Constant][41] /* ty=Tensor[(480), uint16] */, dtype="uint16") /* ty=Tensor[(480), uint16] */;
  %2030 = reshape(%2029, newshape=[480, 1]) /* ty=Tensor[(480, 1), uint16] */;
  %2031 = @func_1238(%2030) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32], Tensor[(16, 2, 15), uint16]) */;
  %2032 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
  %2033 = %2031.1;
  (%2032, %2033, meta[relay.Constant][41] /* ty=Tensor[(480), uint16] */)
}

def @func_16523() -> Tensor[(16, 2, 15), bool] {
  %2034 = @func_13642() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(16, 2, 15), bool]) */;
  %2034.1
}

def @func_24779(%var_24725: Tensor[(308), uint8]) -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(308), uint8], Tensor[(16, 2, 15), bool]) {
  %2035 = @func_9573() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(480), uint16]) */;
  %2036 = cast(%var_24725, dtype="uint8") /* ty=Tensor[(308), uint8] */;
  %2037 = reshape(%2036, newshape=[308]) /* ty=Tensor[(308), uint8] */;
  %2038 = @func_22860(%2037) /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(308), uint8]) */;
  %2039 = @func_13481() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %2040 = %2035.0;
  %2041 = %2038.1;
  %2042 = %2039.0;
  (%2040, %2041, %var_24725, %2042)
}

def @func_26490() -> Tensor[(3, 8, 13), float32] {
  @func_26488() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_27417() -> (Tensor[(16, 2, 15), uint32],) {
  %2043 = @func_21854() /* ty=(Tensor[(16, 2, 15), uint32],) */;
  %2044 = %2043.0;
  (%2044,)
}

def @func_9331() -> (Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %2045 = @func_7733() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), uint16]) */;
  %2046 = @func_5332() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) */;
  %2047 = %2045.2;
  %2048 = %2046.2;
  (%2047, %2048)
}

def @func_20088(%var_20086: Tensor[(14, 9, 10), float64]) -> (Tensor[(14, 9, 10), float64], Tensor[(16, 2, 15), bool]) {
  @func_20085(%var_20086) /* ty=(Tensor[(14, 9, 10), float64], Tensor[(16, 2, 15), bool]) */
}

def @func_20148() -> Tensor[(3, 8, 13), float32] {
  %2050 = fn () -> Tensor[(3, 8, 13), float32] {
    %2049 = @func_8780() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %2049.0
  };
  %2050() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_1697() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  %2065 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
    %2051 = cast(meta[relay.Constant][42] /* ty=Tensor[(480), uint16] */, dtype="uint16") /* ty=Tensor[(480), uint16] */;
    %2052 = reshape(%2051, newshape=[480, 1]) /* ty=Tensor[(480, 1), uint16] */;
    %2053 = @func_1238(%2052) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32], Tensor[(16, 2, 15), uint16]) */;
    %2054 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %2055 = @func_914() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %2056 = %2055.3;
    %2057 = cast(meta[relay.Constant][42] /* ty=Tensor[(480), uint16] */, dtype="bool") /* ty=Tensor[(480), bool] */;
    %2058 = shape_of(%2056, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2059 = cast(%2056, dtype="bool") /* ty=Tensor[(16, 2, 15), bool] */;
    %2060 = dyn.reshape(%2057, %2058, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %2061 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
    %2062 = %2053.0;
    %2063 = %2054.4;
    %2064 = greater_equal(%2059, %2060) /* ty=Tensor[(16, 2, 15), bool] */;
    (%2061, %2062, %2063, %2064)
  };
  %2065() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */
}

def @func_2088() -> (Tensor[(16, 2, 15), uint16],) {
  @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */
}

def @func_6193() -> (Tensor[(3, 8, 13), float32],) {
  @func_6191() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_20225() -> (Tensor[(3, 8, 13), int16],) {
  @func_20223() /* ty=(Tensor[(3, 8, 13), int16],) */
}

def @func_5627(%var_5625: Tensor[(21), int8], %var_5626: Tensor[(3, 7, 9), bool]) -> (Tensor[(16, 2, 15), float64], Tensor[(21), int8], Tensor[(189), int8], Tensor[(3, 7, 9), int64]) {
  @func_5623(%var_5625, %var_5626) /* ty=(Tensor[(16, 2, 15), float64], Tensor[(21), int8], Tensor[(189), int8], Tensor[(3, 7, 9), int64]) */
}

def @func_26575() -> (Tensor[(3, 8, 13), float32],) {
  %2067 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %2066 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
    (%2066,)
  };
  %2067() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_18279() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_18277() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_28364() -> (Tensor[(3, 8, 13), float32],) {
  %2070 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %2068 = @func_3100() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %2069 = %2068.0;
    (%2069,)
  };
  %2070() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_27332(%var_27330: Tensor[(2160), float64]) -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 15, 9), float64], Tensor[(2160), float64], Tensor[(3, 8, 13), float32]) {
  @func_27329(%var_27330) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 15, 9), float64], Tensor[(2160), float64], Tensor[(3, 8, 13), float32]) */
}

def @func_5175() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %2086 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
    %2071 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %2072 = %2071.0;
    %2073 = @func_3351() /* ty=Tensor[(3, 8, 13), float32] */;
    %2074 = cast(%2073, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
    %2075 = shape_of(%2072, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2076 = cast(%2072, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
    %2077 = dyn.reshape(%2074, %2075, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %2078 = @func_2680() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %2079 = @func_3433() /* ty=Tensor[(16, 2, 15), uint16] */;
    %2080 = cast(%2079, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
    %2081 = reshape(%2080, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %2082 = @func_5051(%2081) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) */;
    %2083 = floor_mod(%2076, %2077) /* ty=Tensor[(3, 8, 13), float32] */;
    %2084 = %2078.0;
    %2085 = %2082.0;
    (%2079, %2083, %2084, %2085)
  };
  %2086() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_7128(%var_7125: Tensor[(14, 1, 3), uint16], %var_7126: Tensor[(14, 15, 3), uint16], %var_7127: Tensor[(660), float64]) -> (Tensor[(14, 15, 3), uint16], Tensor[(11, 5, 12), float64], Tensor[(660), float64]) {
  %2096 = fn (%var_7103: Tensor[(14, 1, 3), uint16], %var_7104: Tensor[(14, 15, 3), uint16], %var_7118: Tensor[(660), float64]) -> (Tensor[(14, 15, 3), uint16], Tensor[(11, 5, 12), float64], Tensor[(660), float64]) {
    %2087 = cast(%var_7103, dtype="uint16") /* ty=Tensor[(14, 1, 3), uint16] */;
    %2088 = cast(%var_7104, dtype="uint16") /* ty=Tensor[(14, 15, 3), uint16] */;
    %2089 = cast(%var_7118, dtype="float64") /* ty=Tensor[(660), float64] */;
    %2090 = cast(%var_7118, dtype="float64") /* ty=Tensor[(660), float64] */;
    %2091 = reshape(%2089, newshape=[11, 5, 12]) /* ty=Tensor[(11, 5, 12), float64] */;
    %2092 = reshape(%2090, newshape=[11, 5, 12]) /* ty=Tensor[(11, 5, 12), float64] */;
    %2093 = @func_3475(%2091, %2092) /* ty=(Tensor[(11, 5, 12), float64],) */;
    %2094 = maximum(%2087, %2088) /* ty=Tensor[(14, 15, 3), uint16] */;
    %2095 = %2093.0;
    (%2094, %2095, %var_7118)
  };
  %2096(%var_7125, %var_7126, %var_7127) /* ty=(Tensor[(14, 15, 3), uint16], Tensor[(11, 5, 12), float64], Tensor[(660), float64]) */
}

def @func_5623(%var_5606: Tensor[(21), int8], %var_5616: Tensor[(3, 7, 9), bool]) -> (Tensor[(16, 2, 15), float64], Tensor[(21), int8], Tensor[(189), int8], Tensor[(3, 7, 9), int64]) {
  %2097 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
  %2098 = cast(%var_5606, dtype="int8") /* ty=Tensor[(21), int8] */;
  %2099 = cast(meta[relay.Constant][43] /* ty=Tensor[(189), int8] */, dtype="int8") /* ty=Tensor[(189), int8] */;
  %2100 = reshape(%2098, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), int8] */;
  %2101 = reshape(%2099, newshape=[3, 7, 9]) /* ty=Tensor[(3, 7, 9), int8] */;
  %2102 = @func_4181(%2100, %2101) /* ty=Tensor[(3, 7, 9), bool] */;
  %2103 = cast(%var_5616, dtype="int64") /* ty=Tensor[(3, 7, 9), int64] */;
  %2104 = shape_of(%2102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2105 = cast(%2102, dtype="int64") /* ty=Tensor[(3, 7, 9), int64] */;
  %2106 = dyn.reshape(%2103, %2104, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %2107 = %2097.0;
  %2108 = maximum(%2105, %2106) /* ty=Tensor[(3, 7, 9), int64] */;
  (%2107, %var_5606, meta[relay.Constant][43] /* ty=Tensor[(189), int8] */, %2108)
}

def @func_17846() -> (Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %2109 = @func_11590() /* ty=Tensor[(480), uint16] */;
  %2110 = @func_10642() /* ty=Tensor[(16, 2, 15), float32] */;
  %2111 = @func_7279() /* ty=Tensor[(3, 8, 13), float32] */;
  (%2109, %2110, %2111)
}

def @func_11615() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  @func_11613() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */
}

def @func_6453() -> (Tensor[(16, 2, 15), bool],) {
  @func_6451() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_797() -> (Tensor[(3, 8, 13), float32],) {
  %2113 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %2112 = @func_386() /* ty=Tensor[(3, 8, 13), float32] */;
    (%2112,)
  };
  %2113() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_18014() -> Tensor[(16, 2, 15), uint16] {
  %2115 = fn () -> Tensor[(16, 2, 15), uint16] {
    %2114 = @func_2086() /* ty=(Tensor[(16, 2, 15), uint16],) */;
    %2114.0
  };
  %2115() /* ty=Tensor[(16, 2, 15), uint16] */
}

def @func_9283() -> Tensor[(16, 2, 15), bool] {
  @func_9281() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_4908() -> (Tensor[(3, 8, 13), float32],) {
  %2120 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %2116 = @func_3300() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %2117 = %2116.2;
    %2118 = cast(%2117, dtype="float32") /* ty=Tensor[(3, 8, 13), float32] */;
    %2119 = sin(%2118) /* ty=Tensor[(3, 8, 13), float32] */;
    (%2119,)
  };
  %2120() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_16895() -> Tensor[(16, 2, 15), float32] {
  @func_16893() /* ty=Tensor[(16, 2, 15), float32] */
}

def @func_18847() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %2121 = @func_14054() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
  %2122 = @func_13212() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) */;
  %2123 = %2121.1;
  %2124 = %2122.0;
  (%2123, %2124)
}

def @func_8754() -> (Tensor[(16, 2, 15), bool],) {
  %2127 = fn () -> (Tensor[(16, 2, 15), bool],) {
    %2125 = @func_2702() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %2126 = %2125.0;
    (%2126,)
  };
  %2127() /* ty=(Tensor[(16, 2, 15), bool],) */
}

def @func_13227() -> (Tensor[(3, 8, 13), float32],) {
  @func_13225() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_25776(%var_25773: Tensor[(10, 9, 5), uint16], %var_25774: Tensor[(7, 3), int8], %var_25775: Tensor[(189), int8]) -> (Tensor[(10, 9, 5), bool], Tensor[(189), int8], Tensor[(7, 3), int8], Tensor[(189), int8], Tensor[(16, 2, 15), float32]) {
  @func_25771(%var_25773, %var_25774, %var_25775) /* ty=(Tensor[(10, 9, 5), bool], Tensor[(189), int8], Tensor[(7, 3), int8], Tensor[(189), int8], Tensor[(16, 2, 15), float32]) */
}

def @func_17002() -> Tensor[(16, 2, 15), bool] {
  @func_17000() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_21453() -> (Tensor[(480), uint16], Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %2128 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %2129 = @func_11714() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %2130 = %2128.0;
  %2131 = @func_11590() /* ty=Tensor[(480), uint16] */;
  %2132 = @func_20484() /* ty=Tensor[(16, 2, 15), float32] */;
  %2133 = %2129.0;
  (%2130, %2131, %2132, %2133)
}

def @func_25287() -> (Tensor[(16, 2, 15), uint16],) {
  %2134 = @func_8307() /* ty=Tensor[(16, 2, 15), uint16] */;
  (%2134,)
}

def @func_25352() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
  %2139 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) {
    %2135 = @func_21594() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %2136 = @func_11837() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %2137 = %2135.0;
    %2138 = %2136.0;
    (%2137, %2138)
  };
  %2139() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool]) */
}

def @func_13894() -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  %2146 = fn () -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
    %2140 = @func_1453() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), uint16]) */;
    %2141 = %2140.3;
    %2142 = cast(%2141, dtype="uint16") /* ty=Tensor[(16, 2, 15), uint16] */;
    %2143 = reshape(%2142, newshape=[480, 1]) /* ty=Tensor[(480, 1), uint16] */;
    %2144 = @func_1238(%2143) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32], Tensor[(16, 2, 15), uint16]) */;
    %2145 = %2144.3;
    (%2141, %2145)
  };
  %2146() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_682() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) {
  %2152 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) {
    %2147 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %2148 = cast(meta[relay.Constant][44] /* ty=Tensor[(40, 12), uint16] */, dtype="uint16") /* ty=Tensor[(40, 12), uint16] */;
    %2149 = reshape(%2148, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %2150 = %2147.0;
    %2151 = @func_254(%2149) /* ty=Tensor[(16, 2, 15), uint16] */;
    (%2150, %2151, meta[relay.Constant][44] /* ty=Tensor[(40, 12), uint16] */)
  };
  %2152() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(40, 12), uint16]) */
}

def @func_25246() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
  %2156 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) {
    %2153 = @func_12665() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
    %2154 = %2153.1;
    %2155 = @func_11590() /* ty=Tensor[(480), uint16] */;
    (%2154, %2155)
  };
  %2156() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */
}

def @func_24837() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_24835() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_20785(%var_20760: Tensor[(2, 4, 1), int64]) -> (Tensor[(2, 4, 13), int64], Tensor[(3, 8, 13), float32]) {
  %2157 = cast(%var_20760, dtype="int64") /* ty=Tensor[(2, 4, 1), int64] */;
  %2158 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 4, 13), int64] */, dtype="int64") /* ty=Tensor[(2, 4, 13), int64] */;
  %2159 = @func_13212() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32]) */;
  %2160 = bitwise_and(%2157, %2158) /* ty=Tensor[(2, 4, 13), int64] */;
  %2161 = %2159.0;
  (%2160, %2161)
}

def @func_25603() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16]) {
  %2162 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %2163 = @func_20361() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %2164 = %2162.0;
  %2165 = @func_4162() /* ty=Tensor[(16, 2, 15), int32] */;
  %2166 = %2163.2;
  (%2164, %2165, %2166)
}

def @func_23101() -> Tensor[(3, 8, 13), float32] {
  %2168 = fn () -> Tensor[(3, 8, 13), float32] {
    %2167 = @func_18507() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %2167.0
  };
  %2168() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_13001() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) {
  @func_12999() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), int16]) */
}

def @func_20729() -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  %2169 = @func_5174() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %2170 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %2171 = @func_3300() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %2172 = %2169.3;
  %2173 = %2170.0;
  %2174 = %2171.0;
  (%2172, %2173, %2174)
}

def @func_22622() -> (Tensor[(3, 8, 13), float32],) {
  %2175 = @func_6958() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
  %2176 = %2175.1;
  (%2176,)
}

def @func_9281() -> Tensor[(16, 2, 15), bool] {
  %2177 = @func_2702() /* ty=(Tensor[(16, 2, 15), bool],) */;
  %2177.0
}

def @func_1241(%var_1239: Tensor[(480, 1), uint16]) -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32], Tensor[(16, 2, 15), uint16]) {
  @func_1238(%var_1239) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480, 1), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 12, 2), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_3301() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %2184 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
    %2178 = @func_434() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
    %2179 = @func_2702() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %2180 = @func_2341() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %2181 = %2178.4;
    %2182 = %2179.0;
    %2183 = %2180.0;
    (%2181, %2182, %2183)
  };
  %2184() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_5689(%var_5687: float64, %var_5688: Tensor[(7, 15, 9), float64]) -> (Tensor[(7, 15, 9), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  %2197 = fn (%var_5645: float64, %var_5646: Tensor[(7, 15, 9), float64]) -> (Tensor[(7, 15, 9), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
    %2185 = cast(%var_5645, dtype="bool") /* ty=bool */;
    %2186 = cast(%var_5646, dtype="bool") /* ty=Tensor[(7, 15, 9), bool] */;
    %2187 = @func_3168() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %2188 = @func_4275() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float32]) */;
    %2189 = @func_5332() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) */;
    %2190 = @func_2471() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %2191 = greater_equal(%2185, %2186) /* ty=Tensor[(7, 15, 9), bool] */;
    %2192 = %2187.1;
    %2193 = %2188.1;
    %2194 = %2189.2;
    %2195 = %2190.0;
    %2196 = @func_2052() /* ty=Tensor[(3, 8, 13), float32] */;
    (%2191, %2192, %2193, %2194, %2195, %2196)
  };
  %2197(%var_5687, %var_5688) /* ty=(Tensor[(7, 15, 9), bool], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_3475(%var_3464: Tensor[(11, 5, 12), float64], %var_3465: Tensor[(11, 5, 12), float64]) -> (Tensor[(11, 5, 12), float64],) {
  %2198 = cast(%var_3465, dtype="float64") /* ty=Tensor[(11, 5, 12), float64] */;
  %2199 = shape_of(%var_3464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2200 = cast(%var_3464, dtype="float64") /* ty=Tensor[(11, 5, 12), float64] */;
  %2201 = dyn.reshape(%2198, %2199, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %2202 = floor_mod(%2200, %2201) /* ty=Tensor[(11, 5, 12), float64] */;
  (%2202,)
}

def @func_22758(%var_22757: Tensor[(126), int16]) -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(126), int16]) {
  %2209 = fn (%var_22741: Tensor[(126), int16]) -> (Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(126), int16]) {
    %2203 = @func_13139() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */;
    %2204 = cast(%var_22741, dtype="int16") /* ty=Tensor[(126), int16] */;
    %2205 = reshape(%2204, newshape=[126]) /* ty=Tensor[(126), int16] */;
    %2206 = @func_15412(%2205) /* ty=(Tensor[(480), uint16], Tensor[(3, 8, 13), float32], Tensor[(126), int16]) */;
    %2207 = %2203.0;
    %2208 = %2206.0;
    (%2207, %2208, %var_22741)
  };
  %2209(%var_22757) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(126), int16]) */
}

def @func_24286() -> (Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) {
  @func_24284() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_8840() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) {
  @func_8838() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */
}

def @func_21050(%var_21028: Tensor[(660), float64]) -> (Tensor[(3, 8, 13), float32], Tensor[(11, 5, 12), float64], Tensor[(660), float64], Tensor[(3, 8, 13), float32]) {
  %2210 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %2211 = cast(%var_21028, dtype="float64") /* ty=Tensor[(660), float64] */;
  %2212 = cast(%var_21028, dtype="float64") /* ty=Tensor[(660), float64] */;
  %2213 = reshape(%2211, newshape=[11, 5, 12]) /* ty=Tensor[(11, 5, 12), float64] */;
  %2214 = reshape(%2212, newshape=[11, 5, 12]) /* ty=Tensor[(11, 5, 12), float64] */;
  %2215 = @func_3475(%2213, %2214) /* ty=(Tensor[(11, 5, 12), float64],) */;
  %2216 = @func_8157() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %2217 = %2210.0;
  %2218 = %2215.0;
  %2219 = %2216.0;
  (%2217, %2218, %var_21028, %2219)
}

def @func_24535() -> (Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) {
  @func_24533() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */
}

def @func_7644() -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
  %2224 = fn () -> (Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) {
    %2220 = @func_7412() /* ty=(Tensor[(3, 8, 13), int16], Tensor[(16, 2, 15), float32]) */;
    %2221 = @func_5455() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %2222 = %2220.1;
    %2223 = %2221.0;
    (%2222, %2223)
  };
  %2224() /* ty=(Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32]) */
}

def @func_26884(%var_26824: Tensor[(7, 5, 1), uint8], %var_26825: Tensor[(7, 5, 8), uint8]) -> (Tensor[(7, 5, 8), bool], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) {
  %2225 = cast(%var_26824, dtype="bool") /* ty=Tensor[(7, 5, 1), bool] */;
  %2226 = cast(%var_26825, dtype="bool") /* ty=Tensor[(7, 5, 8), bool] */;
  %2227 = @func_12360() /* ty=(Tensor[(3, 8, 13), float32],) */;
  %2228 = @func_21369() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64]) */;
  %2229 = greater(%2225, %2226) /* ty=Tensor[(7, 5, 8), bool] */;
  %2230 = %2227.0;
  %2231 = %2228.1;
  (%2229, %2230, %2231)
}

def @func_12943() -> (Tensor[(16, 2, 15), int32],) {
  %2234 = fn () -> (Tensor[(16, 2, 15), int32],) {
    %2232 = @func_8838() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), bool]) */;
    %2233 = %2232.0;
    (%2233,)
  };
  %2234() /* ty=(Tensor[(16, 2, 15), int32],) */
}

def @func_27650() -> Tensor[(3, 8, 13), float32] {
  @func_27648() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_18616() -> (Tensor[(480), uint16],) {
  %2235 = @func_15938() /* ty=(Tensor[(480), uint16],) */;
  %2236 = %2235.0;
  (%2236,)
}

def @func_28144() -> Tensor[(3, 8, 13), float32] {
  %2238 = fn () -> Tensor[(3, 8, 13), float32] {
    %2237 = @func_5332() /* ty=(Tensor[(16, 2, 15), float64], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(40, 12), uint16]) */;
    %2237.1
  };
  %2238() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_25771(%var_25735: Tensor[(10, 9, 5), uint16], %var_25746: Tensor[(7, 3), int8], %var_25747: Tensor[(189), int8]) -> (Tensor[(10, 9, 5), bool], Tensor[(189), int8], Tensor[(7, 3), int8], Tensor[(189), int8], Tensor[(16, 2, 15), float32]) {
  %2239 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 9, 5), uint16] */, dtype="bool") /* ty=Tensor[(10, 9, 5), bool] */;
  %2240 = shape_of(%var_25735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2241 = cast(%var_25735, dtype="bool") /* ty=Tensor[(10, 9, 5), bool] */;
  %2242 = dyn.reshape(%2239, %2240, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %2243 = cast(%var_25746, dtype="int8") /* ty=Tensor[(7, 3), int8] */;
  %2244 = cast(%var_25747, dtype="int8") /* ty=Tensor[(189), int8] */;
  %2245 = reshape(%2243, newshape=[21]) /* ty=Tensor[(21), int8] */;
  %2246 = reshape(%2244, newshape=[189]) /* ty=Tensor[(189), int8] */;
  %2247 = @func_24379(%2245, %2246) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 7, 9), bool], Tensor[(21), int8], Tensor[(189), int8]) */;
  %2248 = @func_18557() /* ty=(Tensor[(16, 2, 15), uint16], float64, Tensor[(16, 2, 15), float32]) */;
  %2249 = greater(%2241, %2242) /* ty=Tensor[(10, 9, 5), bool] */;
  %2250 = %2247.3;
  %2251 = %2248.2;
  (%2249, %2250, %var_25746, %var_25747, %2251)
}

def @func_28290() -> (Tensor[(3, 8, 13), float32],) {
  %2252 = @func_1361() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %2253 = %2252.2;
  (%2253,)
}

def @func_17865() -> (Tensor[(3, 8, 13), float32],) {
  %2256 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %2254 = @func_4907() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %2255 = %2254.0;
    (%2255,)
  };
  %2256() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_20614() -> Tensor[(16, 2, 15), bool] {
  %2258 = fn () -> Tensor[(16, 2, 15), bool] {
    %2257 = @func_1986() /* ty=(Tensor[(16, 2, 15), bool],) */;
    %2257.0
  };
  %2258() /* ty=Tensor[(16, 2, 15), bool] */
}

def @func_23481() -> Tensor[(3, 8, 13), float32] {
  %2260 = fn () -> Tensor[(3, 8, 13), float32] {
    %2259 = @func_9105() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(480), uint16], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %2259.3
  };
  %2260() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_18618() -> (Tensor[(480), uint16],) {
  @func_18616() /* ty=(Tensor[(480), uint16],) */
}

def @func_14676() -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) {
  %2267 = fn () -> (Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) {
    %2261 = @func_3837() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32]) */;
    %2262 = @func_3548() /* ty=(Tensor[(16, 2, 15), float64],) */;
    %2263 = @func_5222() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
    %2264 = %2261.1;
    %2265 = %2262.0;
    %2266 = %2263.1;
    (%2264, %2265, %2266)
  };
  %2267() /* ty=(Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) */
}

def @func_10532() -> Tensor[(3, 8, 13), float32] {
  @func_10530() /* ty=Tensor[(3, 8, 13), float32] */
}

def @func_11854() -> (Tensor[(3, 8, 13), float32],) {
  @func_11852() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_9543() -> (Tensor[(16, 2, 15), uint16], Tensor[(40, 12), float64], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) {
  %2268 = @func_5222() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */;
  %2269 = @func_3759() /* ty=(Tensor[(40, 12), float64],) */;
  %2270 = @func_9331() /* ty=(Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
  %2271 = %2268.1;
  %2272 = %2269.0;
  %2273 = @func_3230() /* ty=Tensor[(3, 8, 13), float32] */;
  %2274 = %2270.0;
  %2275 = @func_9281() /* ty=Tensor[(16, 2, 15), bool] */;
  %2276 = @func_2480() /* ty=Tensor[(3, 8, 13), float32] */;
  (%2271, %2272, %2273, %2274, %2275, %2276)
}

def @func_7184() -> Tensor[(16, 2, 15), float64] {
  @func_7182() /* ty=Tensor[(16, 2, 15), float64] */
}

def @func_9679() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
  %2282 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) {
    %2277 = @func_8780() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %2278 = @func_5174() /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), bool], Tensor[(3, 8, 13), float32]) */;
    %2279 = %2277.0;
    %2280 = @func_1711() /* ty=Tensor[(16, 2, 15), uint16] */;
    %2281 = %2278.2;
    (%2279, %2280, %2281)
  };
  %2282() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), bool]) */
}

def @func_11949() -> Tensor[(480), uint16] {
  %2284 = fn () -> Tensor[(480), uint16] {
    %2283 = @func_6935() /* ty=(Tensor[(240), float32], Tensor[(16, 2, 15), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(480), uint16]) */;
    %2283.4
  };
  %2284() /* ty=Tensor[(480), uint16] */
}

def @func_8358() -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
  %2289 = fn () -> (Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) {
    %2285 = @func_3100() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %2286 = @func_1005() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16], Tensor[(16, 2, 15), int32], Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), float32]) */;
    %2287 = %2285.0;
    %2288 = %2286.1;
    (%2287, %2288)
  };
  %2289() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), uint16]) */
}

def @func_4638(%var_4636: Tensor[(3, 8, 13), float32]) -> (Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), bool], Tensor[(3, 8, 13), float32]) {
  @func_4635(%var_4636) /* ty=(Tensor[(16, 2, 15), uint16], Tensor[(3, 8, 13), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_2915() -> (Tensor[(3, 8, 13), float32],) {
  %2291 = fn () -> (Tensor[(3, 8, 13), float32],) {
    %2290 = @func_2480() /* ty=Tensor[(3, 8, 13), float32] */;
    (%2290,)
  };
  %2291() /* ty=(Tensor[(3, 8, 13), float32],) */
}

def @func_13052(%var_13051: Tensor[(480), uint16]) -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 7, 9), int64], Tensor[(21), int8], Tensor[(1, 189), bool], Tensor[(3, 8, 13), float32]) {
  %2307 = fn (%var_13013: Tensor[(480), uint16]) -> (Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 7, 9), int64], Tensor[(21), int8], Tensor[(1, 189), bool], Tensor[(3, 8, 13), float32]) {
    %2292 = cast(%var_13013, dtype="uint16") /* ty=Tensor[(480), uint16] */;
    %2293 = reshape(%2292, newshape=[16, 2, 15]) /* ty=Tensor[(16, 2, 15), uint16] */;
    %2294 = @func_5051(%2293) /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float64], Tensor[(16, 2, 15), uint16]) */;
    %2295 = @func_10682() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(16, 2, 15), float32]) */;
    %2296 = cast(meta[relay.Constant][47] /* ty=Tensor[(21), int8] */, dtype="int8") /* ty=Tensor[(21), int8] */;
    %2297 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 189), bool] */, dtype="bool") /* ty=Tensor[(1, 189), bool] */;
    %2298 = reshape(%2296, newshape=[21]) /* ty=Tensor[(21), int8] */;
    %2299 = reshape(%2297, newshape=[3, 7, 9]) /* ty=Tensor[(3, 7, 9), bool] */;
    %2300 = @func_5623(%2298, %2299) /* ty=(Tensor[(16, 2, 15), float64], Tensor[(21), int8], Tensor[(189), int8], Tensor[(3, 7, 9), int64]) */;
    %2301 = @func_9426() /* ty=(Tensor[(3, 8, 13), float32],) */;
    %2302 = @func_8384() /* ty=Tensor[(3, 8, 13), int16] */;
    %2303 = %2294.0;
    %2304 = %2295.1;
    %2305 = %2300.3;
    %2306 = %2301.0;
    (%2302, %2303, %var_13013, %2304, %2305, meta[relay.Constant][47] /* ty=Tensor[(21), int8] */, meta[relay.Constant][48] /* ty=Tensor[(1, 189), bool] */, %2306)
  };
  %2307(%var_13051) /* ty=(Tensor[(3, 8, 13), int16], Tensor[(3, 8, 13), float32], Tensor[(480), uint16], Tensor[(16, 2, 15), float32], Tensor[(3, 7, 9), int64], Tensor[(21), int8], Tensor[(1, 189), bool], Tensor[(3, 8, 13), float32]) */
}

def @func_19313() -> (Tensor[(480), uint16], Tensor[(3, 8, 13), float32]) {
  %2308 = @func_3802() /* ty=(Tensor[(480), uint16],) */;
  %2309 = @func_12353() /* ty=(Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32], Tensor[(3, 8, 13), float32]) */;
  %2310 = %2308.0;
  %2311 = %2309.1;
  (%2310, %2311)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen946/build/output.py", line 9605, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:56:16] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


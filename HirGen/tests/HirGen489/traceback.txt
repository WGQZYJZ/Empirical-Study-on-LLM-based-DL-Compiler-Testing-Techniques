==========mod==========
#[version = "0.0.5"]
def @func_5137() -> (Tensor[(12, 5, 12), float64], Tensor[(2, 8, 6), float32]) {
  %0 = @func_4095() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(1, 192), float32], Tensor[(12, 5, 12), float32]) */;
  %1 = @func_4225() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 13, 9), float64], Tensor[(234), float32], Tensor[(1, 96), float32], Tensor[(2, 8, 6), float32]) */;
  %2 = %0.0;
  %3 = %1.4;
  (%2, %3)
}

def @func_6830() -> (Tensor[(12, 5, 12), float32],) {
  %4 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %5 = %4.0;
  (%5,)
}

def @func_8396() -> (Tensor[(702), float32],) {
  %6 = @func_5191() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(4, 48), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(702), float32], Tensor[(12, 5, 12), float64]) */;
  %7 = %6.4;
  (%7,)
}

def @func_5565(%var_5536: Tensor[(7, 3, 15), uint32], %var_5537: Tensor[(7, 3, 15), uint32]) -> Tensor[(7, 3, 15), uint32] {
  %8 = cast(%var_5537, dtype="uint32") /* ty=Tensor[(7, 3, 15), uint32] */;
  %9 = shape_of(%var_5536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%var_5536, dtype="uint32") /* ty=Tensor[(7, 3, 15), uint32] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%10, %11) /* ty=Tensor[(7, 3, 15), uint32] */
}

def @func_4737(%var_4721: Tensor[(4, 13, 4), uint8]) -> (Tensor[(12, 5, 12), float64], Tensor[(12, 16, 1), float64], Tensor[(4, 48), uint8], Tensor[(4, 13, 4), bool]) {
  %12 = cast(meta[relay.Constant][0] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(4, 48), uint8] */, dtype="uint8") /* ty=Tensor[(4, 48), uint8] */;
  %14 = reshape(%12, newshape=[]) /* ty=uint8 */;
  %15 = reshape(%13, newshape=[12, 16, 1]) /* ty=Tensor[(12, 16, 1), uint8] */;
  %16 = @func_736(%14, %15) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(12, 16, 1), float64]) */;
  %17 = cast(meta[relay.Constant][0] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %18 = cast(%var_4721, dtype="bool") /* ty=Tensor[(4, 13, 4), bool] */;
  %19 = @func_3920() /* ty=Tensor[(12, 5, 12), float64] */;
  %20 = %16.2;
  %21 = less(%17, %18) /* ty=Tensor[(4, 13, 4), bool] */;
  (%19, %20, meta[relay.Constant][1] /* ty=Tensor[(4, 48), uint8] */, %21)
}

def @func_5687() -> (Tensor[(12, 5, 12), float32],) {
  %22 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %23 = %22.0;
  (%23,)
}

def @func_4765() -> (Tensor[(12, 5, 12), float64],) {
  %24 = @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */;
  %25 = %24.1;
  (%25,)
}

def @func_4905() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float32]) {
  %26 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %27 = @func_4225() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 13, 9), float64], Tensor[(234), float32], Tensor[(1, 96), float32], Tensor[(2, 8, 6), float32]) */;
  %28 = %27.0;
  %29 = cast(%28, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %30 = tan(%29) /* ty=Tensor[(12, 5, 12), float32] */;
  %31 = cast(%28, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %32 = shape_of(%30, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%30, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %35 = %26.0;
  %36 = floor_divide(%33, %34) /* ty=Tensor[(12, 5, 12), float32] */;
  (%35, %36)
}

def @func_3146(%var_3126: Tensor[(192), float32], %var_3130: Tensor[(18), uint8], %var_3135: Tensor[(1, 1170), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) {
  %37 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %38 = cast(%var_3126, dtype="float32") /* ty=Tensor[(192), float32] */;
  %39 = reshape(%38, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %40 = @func_574(%39) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
  %41 = cast(%var_3130, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %42 = cast(meta[relay.Constant][2] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %43 = cast(%var_3126, dtype="float32") /* ty=Tensor[(192), float32] */;
  %44 = cast(meta[relay.Constant][3] /* ty=Tensor[(1950), int8] */, dtype="int8") /* ty=Tensor[(1950), int8] */;
  %45 = cast(meta[relay.Constant][4] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %46 = cast(meta[relay.Constant][5] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %47 = cast(%var_3135, dtype="float64") /* ty=Tensor[(1, 1170), float64] */;
  %48 = reshape(%41, newshape=[3, 1, 6]) /* ty=Tensor[(3, 1, 6), uint8] */;
  %49 = reshape(%42, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), uint8] */;
  %50 = reshape(%43, newshape=[8, 24]) /* ty=Tensor[(8, 24), float32] */;
  %51 = reshape(%44, newshape=[1950]) /* ty=Tensor[(1950), int8] */;
  %52 = reshape(%45, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %53 = reshape(%46, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %54 = reshape(%47, newshape=[5, 234]) /* ty=Tensor[(5, 234), float64] */;
  %55 = @func_1816(%48, %49, %50, %51, %52, %53, %54) /* ty=(Tensor[(3, 10, 6), uint8], Tensor[(14, 14, 5), float64], Tensor[(8, 24), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(1950), int8], Tensor[(208), float64], float32, Tensor[(21), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(6, 13, 15), float64], Tensor[(5, 234), float64]) */;
  %56 = %37.0;
  %57 = %40.0;
  %58 = %55.0;
  (%56, %57, %var_3126, %58, %var_3130, meta[relay.Constant][2] /* ty=Tensor[(180), uint8] */, meta[relay.Constant][3] /* ty=Tensor[(1950), int8] */, meta[relay.Constant][4] /* ty=Tensor[(208), float64] */, meta[relay.Constant][5] /* ty=Tensor[(21), float32] */, %var_3135)
}

def @func_1816(%var_1725: Tensor[(3, 1, 6), uint8], %var_1726: Tensor[(3, 10, 6), uint8], %var_1753: Tensor[(8, 24), float32], %var_1767: Tensor[(1950), int8], %var_1768: Tensor[(208), float64], %var_1770: Tensor[(21), float32], %var_1811: Tensor[(5, 234), float64]) -> (Tensor[(3, 10, 6), uint8], Tensor[(14, 14, 5), float64], Tensor[(8, 24), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(1950), int8], Tensor[(208), float64], float32, Tensor[(21), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(6, 13, 15), float64], Tensor[(5, 234), float64]) {
  %59 = cast(%var_1725, dtype="uint8") /* ty=Tensor[(3, 1, 6), uint8] */;
  %60 = cast(%var_1726, dtype="uint8") /* ty=Tensor[(3, 10, 6), uint8] */;
  %61 = cast(%var_1753, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
  %62 = reshape(%61, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %63 = @func_574(%62) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
  %64 = cast(%var_1726, dtype="float32") /* ty=Tensor[(3, 10, 6), float32] */;
  %65 = exp(%64) /* ty=Tensor[(3, 10, 6), float32] */;
  %66 = cast(%var_1726, dtype="float32") /* ty=Tensor[(3, 10, 6), float32] */;
  %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
  %68 = cast(%65, dtype="float32") /* ty=Tensor[(3, 10, 6), float32] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %70 = cast(%var_1753, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
  %71 = reshape(%70, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %72 = @func_401(%71) /* ty=(Tensor[(12, 2, 8), float32],) */;
  %73 = cast(%var_1767, dtype="int8") /* ty=Tensor[(1950), int8] */;
  %74 = cast(%var_1768, dtype="float64") /* ty=Tensor[(208), float64] */;
  %75 = %72.0;
  %76 = cast(%75, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %77 = cast(-8.47495f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %78 = cast(%var_1770, dtype="float32") /* ty=Tensor[(21), float32] */;
  %79 = cast(%var_1767, dtype="int8") /* ty=Tensor[(1950), int8] */;
  %80 = cast(%var_1768, dtype="float32") /* ty=Tensor[(208), float32] */;
  %81 = reshape(%73, newshape=[13, 15, 10]) /* ty=Tensor[(13, 15, 10), int8] */;
  %82 = reshape(%74, newshape=[104, 2]) /* ty=Tensor[(104, 2), float64] */;
  %83 = reshape(%76, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %84 = reshape(%77, newshape=[]) /* ty=float32 */;
  %85 = reshape(%78, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %86 = reshape(%79, newshape=[13, 15, 10]) /* ty=Tensor[(13, 15, 10), int8] */;
  %87 = reshape(%80, newshape=[104, 2]) /* ty=Tensor[(104, 2), float32] */;
  %88 = @func_1331(%81, %82, %83, %84, %85, %86, %87) /* ty=(Tensor[(16, 13, ?), float64], Tensor[(192), float32], Tensor[(3, ?, 7), bool], float32, Tensor[(21), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(13, 15, 10), int16], Tensor[(104, 2), uint32], Tensor[(12, 2, 8), float32], Tensor[(14, 14, 5), float64]) */;
  %89 = cast(%65, dtype="float32") /* ty=Tensor[(3, 10, 6), float32] */;
  %90 = cast(%var_1753, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
  %91 = reshape(%90, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %92 = @func_401(%91) /* ty=(Tensor[(12, 2, 8), float32],) */;
  %93 = cast(%var_1811, dtype="float64") /* ty=Tensor[(5, 234), float64] */;
  %94 = reshape(%93, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %95 = @func_1686(%94) /* ty=(Tensor[(6, 15, 16), float32], Tensor[(6, 13, 15), float64], Tensor[(1170), float64]) */;
  %96 = logical_xor(%59, %60) /* ty=Tensor[(3, 10, 6), uint8] */;
  %97 = %63.0;
  %98 = divide(%68, %69) /* ty=Tensor[(3, 10, 6), float32] */;
  %99 = %88.6;
  %100 = sigmoid(%89) /* ty=Tensor[(3, 10, 6), float32] */;
  %101 = %92.0;
  %102 = %95.1;
  (%96, %97, %var_1753, %98, %75, %99, %var_1767, %var_1768, -8.47495f /* ty=float32 */, %var_1770, %100, %101, %102, %var_1811)
}

def @func_3597(%var_3541: Tensor[(2, 13, 9), float32]) -> (Tensor[(2, 13, 9), int32], Tensor[(2, 13, 9), float64], Tensor[(14, 14, 5), float64], uint8, Tensor[(192), uint8], Tensor[(12, 2, 8), float32], Tensor[(2, 8, 6), float32], Tensor[(1, 96), float32]) {
  %103 = cast(%var_3541, dtype="float32") /* ty=Tensor[(2, 13, 9), float32] */;
  %104 = asin(%103) /* ty=Tensor[(2, 13, 9), float32] */;
  %105 = cast(%var_3541, dtype="int32") /* ty=Tensor[(2, 13, 9), int32] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="int32") /* ty=Tensor[(2, 13, 9), int32] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %109 = bitwise_xor(%107, %108) /* ty=Tensor[(2, 13, 9), int32] */;
  %110 = cast(%109, dtype="int32") /* ty=Tensor[(2, 13, 9), int32] */;
  %111 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%104, dtype="int32") /* ty=Tensor[(2, 13, 9), int32] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %114 = cast(%var_3541, dtype="float64") /* ty=Tensor[(2, 13, 9), float64] */;
  %115 = cast(meta[relay.Constant][6] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %116 = cast(meta[relay.Constant][7] /* ty=Tensor[(192), uint8] */, dtype="uint8") /* ty=Tensor[(192), uint8] */;
  %117 = reshape(%115, newshape=[]) /* ty=uint8 */;
  %118 = reshape(%116, newshape=[12, 16, 1]) /* ty=Tensor[(12, 16, 1), uint8] */;
  %119 = @func_736(%117, %118) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(12, 16, 1), float64]) */;
  %120 = cast(meta[relay.Constant][7] /* ty=Tensor[(192), uint8] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %121 = reshape(%120, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %122 = @func_401(%121) /* ty=(Tensor[(12, 2, 8), float32],) */;
  %123 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 96), float32] */, dtype="float32") /* ty=Tensor[(1, 96), float32] */;
  %124 = reshape(%123, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %125 = @func_2604(%124) /* ty=(Tensor[(2, 8, 6), float32],) */;
  %126 = subtract(%112, %113) /* ty=Tensor[(2, 13, 9), int32] */;
  %127 = tan(%114) /* ty=Tensor[(2, 13, 9), float64] */;
  %128 = %119.0;
  %129 = %122.0;
  %130 = %125.0;
  (%126, %127, %128, meta[relay.Constant][6] /* ty=uint8 */, meta[relay.Constant][7] /* ty=Tensor[(192), uint8] */, %129, %130, meta[relay.Constant][8] /* ty=Tensor[(1, 96), float32] */)
}

def @func_3282(%var_3213: Tensor[(13, 6, 9), uint32], %var_3214: Tensor[(13, 6, 9), uint32], %var_3241: Tensor[(192), float32], %var_3243: Tensor[(1170), float64]) -> (Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 6), uint8], Tensor[(1170), float64], Tensor[(13, 6, 9), float32], Tensor[(13, 6, 9), int32]) {
  %131 = cast(%var_3241, dtype="float32") /* ty=Tensor[(192), float32] */;
  %132 = cast(meta[relay.Constant][9] /* ty=Tensor[(3, 6), uint8] */, dtype="uint8") /* ty=Tensor[(3, 6), uint8] */;
  %133 = cast(%var_3243, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %134 = reshape(%131, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %135 = reshape(%132, newshape=[18]) /* ty=Tensor[(18), uint8] */;
  %136 = reshape(%133, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), float64] */;
  %137 = @func_3146(%134, %135, %136) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */;
  %138 = cast(%var_3213, dtype="float32") /* ty=Tensor[(13, 6, 9), float32] */;
  %139 = log10(%138) /* ty=Tensor[(13, 6, 9), float32] */;
  %140 = cast(%139, dtype="float32") /* ty=Tensor[(13, 6, 9), float32] */;
  %141 = cast(%var_3214, dtype="uint32") /* ty=Tensor[(13, 6, 9), uint32] */;
  %142 = shape_of(%var_3213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %143 = cast(%var_3213, dtype="uint32") /* ty=Tensor[(13, 6, 9), uint32] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %145 = bitwise_xor(%143, %144) /* ty=Tensor[(13, 6, 9), uint32] */;
  %146 = cast(%145, dtype="int32") /* ty=Tensor[(13, 6, 9), int32] */;
  %147 = shape_of(%139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%139, dtype="int32") /* ty=Tensor[(13, 6, 9), int32] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %150 = %137.1;
  %151 = acos(%140) /* ty=Tensor[(13, 6, 9), float32] */;
  %152 = right_shift(%148, %149) /* ty=Tensor[(13, 6, 9), int32] */;
  (%150, %var_3241, meta[relay.Constant][9] /* ty=Tensor[(3, 6), uint8] */, %var_3243, %151, %152)
}

def @func_6008() -> Tensor[(12, 5, 12), float32] {
  %153 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %153.0
}

def @func_9391() -> Tensor[(12, 5, 12), float64] {
  %154 = @func_8445() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %154.0
}

def @func_3629() -> Tensor[(12, 5, 12), float64] {
  %155 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %155.0
}

def @func_3944() -> (Tensor[(12, 5, 12), float64],) {
  %156 = @func_3920() /* ty=Tensor[(12, 5, 12), float64] */;
  (%156,)
}

def @func_6128() -> (Tensor[(12, 5, 12), float32],) {
  %157 = @func_3430() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %158 = %157.0;
  (%158,)
}

def @func_5075() -> (Tensor[(12, 5, 12), float32],) {
  %159 = @func_4931() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %160 = %159.1;
  (%160,)
}

def @func_5191() -> (Tensor[(12, 5, 12), float32], Tensor[(4, 48), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(702), float32], Tensor[(12, 5, 12), float64]) {
  %161 = @func_3430() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %162 = @func_3878() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), int16], Tensor[(30), uint16]) */;
  %163 = %162.0;
  %164 = cast(%163, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %165 = %161.0;
  %166 = cast(%165, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %167 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 48), float32] */, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %168 = cast(meta[relay.Constant][11] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %169 = reshape(%166, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
  %170 = reshape(%167, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %171 = reshape(%168, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %172 = @func_3693(%169, %170, %171) /* ty=(Tensor[(12, 5, 12), float32], Tensor[(3, 6), uint8], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(1170), float64]) */;
  %173 = %172.2;
  %174 = cast(%173, dtype="float32") /* ty=Tensor[(702), float32] */;
  %175 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %176 = erf(%164) /* ty=Tensor[(12, 5, 12), float32] */;
  %177 = tan(%174) /* ty=Tensor[(702), float32] */;
  %178 = %175.0;
  (%165, meta[relay.Constant][10] /* ty=Tensor[(4, 48), float32] */, meta[relay.Constant][11] /* ty=Tensor[(1170), float64] */, %176, %177, %178)
}

def @func_7507(%var_7493: Tensor[(14, 192), float32]) -> (Tensor[(14, 192), int32], Tensor[(3, ?, 7), bool], float32, Tensor[(21), float32]) {
  %179 = @func_4095() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(1, 192), float32], Tensor[(12, 5, 12), float32]) */;
  %180 = %179.2;
  %181 = cast(%180, dtype="int32") /* ty=Tensor[(1, 192), int32] */;
  %182 = cast(%var_7493, dtype="int32") /* ty=Tensor[(14, 192), int32] */;
  %183 = cast(1.38046f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %184 = cast(meta[relay.Constant][12] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %185 = reshape(%183, newshape=[]) /* ty=float32 */;
  %186 = reshape(%184, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %187 = @func_1238(%185, %186) /* ty=(Tensor[(3, 1, 7), bool], Tensor[(3, ?, 7), bool]) */;
  %188 = left_shift(%181, %182) /* ty=Tensor[(14, 192), int32] */;
  %189 = %187.1;
  (%188, %189, 1.38046f /* ty=float32 */, meta[relay.Constant][12] /* ty=Tensor[(21), float32] */)
}

def @func_8493(%var_8461: Tensor[(16, 2, 10), float32], %var_8478: Tensor[(1170), float64]) -> (Tensor[(16, 2, 10), float32], Tensor[(208), float64], Tensor[(1170), float64], Tensor[(48, 4), float32], Tensor[(18), uint8], Tensor[(7), float32]) {
  %190 = cast(%var_8461, dtype="float32") /* ty=Tensor[(16, 2, 10), float32] */;
  %191 = cast(%var_8478, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %192 = cast(meta[relay.Constant][13] /* ty=Tensor[(48, 4), float32] */, dtype="float32") /* ty=Tensor[(48, 4), float32] */;
  %193 = reshape(%191, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %194 = reshape(%192, newshape=[8, 24]) /* ty=Tensor[(8, 24), float32] */;
  %195 = @func_6613(%193, %194) /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(208), float64], Tensor[(18), uint8], Tensor[(1170), float64], Tensor[(8, 24), bool], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(1950), int8], Tensor[(234, 3), uint32], Tensor[(96), float32], Tensor[(8, 24), bool]) */;
  %196 = cast(meta[relay.Constant][14] /* ty=Tensor[(7), float32] */, dtype="float32") /* ty=Tensor[(7), float32] */;
  %197 = reshape(%196, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float32] */;
  %198 = @func_7924(%197) /* ty=(Tensor[(7, 1, 1), float32], Tensor[(21), float32], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), float64]) */;
  %199 = log2(%190) /* ty=Tensor[(16, 2, 10), float32] */;
  %200 = %195.1;
  %201 = %198.3;
  (%199, %200, %var_8478, meta[relay.Constant][13] /* ty=Tensor[(48, 4), float32] */, %201, meta[relay.Constant][14] /* ty=Tensor[(7), float32] */)
}

def @func_7884(%var_7874: Tensor[(12, 5, 12), float32]) -> Tensor[(12, 5, 12), int64] {
  %202 = @func_5525() /* ty=Tensor[(12, 5, 12), float32] */;
  %203 = cast(%var_7874, dtype="int64") /* ty=Tensor[(12, 5, 12), int64] */;
  %204 = shape_of(%202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%202, dtype="int64") /* ty=Tensor[(12, 5, 12), int64] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%205, %206) /* ty=Tensor[(12, 5, 12), int64] */
}

def @func_9596() -> (Tensor[(12, 5, 12), uint64],) {
  %207 = @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */;
  %208 = %207.0;
  (%208,)
}

def @func_3430() -> (Tensor[(12, 5, 12), float32],) {
  %209 = @func_3390() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %210 = %209.0;
  %211 = cast(%210, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %212 = log(%211) /* ty=Tensor[(12, 5, 12), float32] */;
  (%212,)
}

def @func_1686(%var_1684: Tensor[(1170), float64]) -> (Tensor[(6, 15, 16), float32], Tensor[(6, 13, 15), float64], Tensor[(1170), float64]) {
  %213 = cast(meta[relay.Constant][15] /* ty=Tensor[(6, 15, 16), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 16), float64] */;
  %214 = acos(%213) /* ty=Tensor[(6, 15, 16), float64] */;
  %215 = cast(%214, dtype="float32") /* ty=Tensor[(6, 15, 16), float32] */;
  %216 = cast(%var_1684, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %217 = reshape(%216, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), float64] */;
  %218 = acosh(%215) /* ty=Tensor[(6, 15, 16), float32] */;
  %219 = @func_1471(%217) /* ty=Tensor[(6, 13, 15), float64] */;
  (%218, %219, %var_1684)
}

def @func_2915(%var_2894: Tensor[(12, 5, 12), float64], %var_2902: Tensor[(30), uint16]) -> (Tensor[(12, 5, 12), int16], Tensor[(208), float64], Tensor[(30), uint16], Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), bool]) {
  %220 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %221 = %220.0;
  %222 = cast(%var_2894, dtype="int16") /* ty=Tensor[(12, 5, 12), int16] */;
  %223 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%221, dtype="int16") /* ty=Tensor[(12, 5, 12), int16] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %226 = cast(%221, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %227 = cast(%var_2894, dtype="int32") /* ty=Tensor[(12, 5, 12), int32] */;
  %228 = cast(%var_2902, dtype="uint16") /* ty=Tensor[(30), uint16] */;
  %229 = reshape(%226, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
  %230 = reshape(%227, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), int32] */;
  %231 = reshape(%228, newshape=[30]) /* ty=Tensor[(30), uint16] */;
  %232 = @func_2779(%229, %230, %231) /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(208), float64], uint16, Tensor[(30), uint16], Tensor[(4, 48), float32], Tensor[(3, ?, 7), bool], Tensor[(21), float32]) */;
  %233 = cast(meta[relay.Constant][16] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %234 = reshape(%233, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
  %235 = @func_2292(%234) /* ty=(Tensor[(3, 5, 3), float64],) */;
  %236 = cast(%var_2894, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
  %237 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
  %238 = cast(%221, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
  %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %240 = subtract(%224, %225) /* ty=Tensor[(12, 5, 12), int16] */;
  %241 = %232.1;
  %242 = %235.0;
  %243 = equal(%238, %239) /* ty=Tensor[(12, 5, 12), bool] */;
  (%240, %241, %var_2902, %242, meta[relay.Constant][16] /* ty=Tensor[(45), float64] */, %243)
}

def @func_4004(%var_3971: Tensor[(192), float32]) -> (Tensor[(12, 5, 12), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(12, 5, 12), float64]) {
  %244 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %245 = cast(%var_3971, dtype="float32") /* ty=Tensor[(192), float32] */;
  %246 = reshape(%245, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %247 = @func_574(%246) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
  %248 = @func_3390() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %249 = %244.0;
  %250 = %247.2;
  %251 = %248.0;
  (%249, %250, %var_3971, %251)
}

def @func_2779(%var_2742: Tensor[(12, 5, 12), float64], %var_2748: Tensor[(12, 5, 12), int32], %var_2755: Tensor[(30), uint16]) -> (Tensor[(12, 5, 12), uint64], Tensor[(208), float64], uint16, Tensor[(30), uint16], Tensor[(4, 48), float32], Tensor[(3, ?, 7), bool], Tensor[(21), float32]) {
  %252 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %253 = %252.0;
  %254 = cast(%var_2742, dtype="int32") /* ty=Tensor[(12, 5, 12), int32] */;
  %255 = shape_of(%253, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%253, dtype="int32") /* ty=Tensor[(12, 5, 12), int32] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %258 = logical_xor(%256, %257) /* ty=Tensor[(12, 5, 12), int32] */;
  %259 = cast(%var_2748, dtype="uint64") /* ty=Tensor[(12, 5, 12), uint64] */;
  %260 = shape_of(%258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(%258, dtype="uint64") /* ty=Tensor[(12, 5, 12), uint64] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %263 = cast(meta[relay.Constant][17] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %264 = cast(%var_2755, dtype="uint16") /* ty=Tensor[(30), uint16] */;
  %265 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 48), float32] */, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %266 = reshape(%263, newshape=[]) /* ty=uint16 */;
  %267 = reshape(%264, newshape=[1, 15, 2]) /* ty=Tensor[(1, 15, 2), uint16] */;
  %268 = reshape(%265, newshape=[4, 48]) /* ty=Tensor[(4, 48), float32] */;
  %269 = @func_2199(%266, %267, %268) /* ty=(Tensor[(1, 15, 2), uint16], Tensor[(192, 1), float32], Tensor[(208), float64], Tensor[(4, 48), float32]) */;
  %270 = cast(meta[relay.Constant][17] /* ty=uint16 */, dtype="float32") /* ty=float32 */;
  %271 = cast(meta[relay.Constant][19] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %272 = reshape(%270, newshape=[]) /* ty=float32 */;
  %273 = reshape(%271, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %274 = @func_1238(%272, %273) /* ty=(Tensor[(3, 1, 7), bool], Tensor[(3, ?, 7), bool]) */;
  %275 = bitwise_xor(%261, %262) /* ty=Tensor[(12, 5, 12), uint64] */;
  %276 = %269.2;
  %277 = %274.1;
  (%275, %276, meta[relay.Constant][17] /* ty=uint16 */, %var_2755, meta[relay.Constant][18] /* ty=Tensor[(4, 48), float32] */, %277, meta[relay.Constant][19] /* ty=Tensor[(21), float32] */)
}

def @func_3091() -> Tensor[(12, 5, 12), float64] {
  %278 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %278.0
}

def @func_9102() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) {
  %279 = @func_7767() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %280 = @func_3783() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */;
  %281 = %279.0;
  %282 = @func_3755() /* ty=Tensor[(12, 5, 12), uint64] */;
  %283 = %280.0;
  (%281, %282, %283)
}

def @func_5525() -> Tensor[(12, 5, 12), float32] {
  %284 = @func_3430() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %284.0
}

def @func_3755() -> Tensor[(12, 5, 12), uint64] {
  %285 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %286 = %285.0;
  %287 = cast(meta[relay.Constant][20] /* ty=Tensor[(12, 5, 12), float64] */, dtype="uint64") /* ty=Tensor[(12, 5, 12), uint64] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%286, dtype="uint64") /* ty=Tensor[(12, 5, 12), uint64] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_and(%289, %290) /* ty=Tensor[(12, 5, 12), uint64] */
}

def @func_5089(%var_5082: Tensor[(4, 14, 8), uint64]) -> Tensor[(4, 14, 8), uint64] {
  %291 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 14, 8), uint64] */, dtype="uint64") /* ty=Tensor[(4, 14, 8), uint64] */;
  %292 = shape_of(%var_5082, dtype="int32") /* ty=Tensor[(3), int32] */;
  %293 = cast(%var_5082, dtype="uint64") /* ty=Tensor[(4, 14, 8), uint64] */;
  %294 = dyn.reshape(%291, %292, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  maximum(%293, %294) /* ty=Tensor[(4, 14, 8), uint64] */
}

def @func_6187() -> Tensor[(12, 5, 12), float64] {
  @func_3920() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_8174() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) {
  %295 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %296 = %295.0;
  %297 = @func_3629() /* ty=Tensor[(12, 5, 12), float64] */;
  (%296, %297)
}

def @func_5402() -> Tensor[(12, 5, 12), float64] {
  @func_3091() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_4931() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) {
  %298 = @func_3783() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */;
  %299 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %300 = %298.0;
  %301 = %299.0;
  (%300, %301)
}

def @main(%var_9599: Tensor[(14, 16, 6), float64]) -> (Tensor[(14, 16, 6), float64],) {
  %302 = cast(%var_9599, dtype="float64") /* ty=Tensor[(14, 16, 6), float64] */;
  %303 = asinh(%302) /* ty=Tensor[(14, 16, 6), float64] */;
  (%303,)
}

def @func_5381() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(45), float64], Tensor[(10, 3), uint16]) {
  %304 = @func_5137() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 8, 6), float32]) */;
  %305 = @func_5264() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64]) */;
  %306 = %305.0;
  %307 = cast(%306, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %308 = cast(meta[relay.Constant][22] /* ty=Tensor[(10, 3), uint16] */, dtype="uint16") /* ty=Tensor[(10, 3), uint16] */;
  %309 = reshape(%307, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
  %310 = reshape(%308, newshape=[30]) /* ty=Tensor[(30), uint16] */;
  %311 = @func_2915(%309, %310) /* ty=(Tensor[(12, 5, 12), int16], Tensor[(208), float64], Tensor[(30), uint16], Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), bool]) */;
  %312 = %304.0;
  %313 = %311.4;
  (%312, %306, %313, meta[relay.Constant][22] /* ty=Tensor[(10, 3), uint16] */)
}

def @func_9029() -> Tensor[(12, 5, 12), int16] {
  %314 = @func_3878() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), int16], Tensor[(30), uint16]) */;
  %314.1
}

def @func_5608() -> (Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(30), uint16]) {
  %315 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %316 = %315.0;
  %317 = cast(%316, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %318 = cast(meta[relay.Constant][23] /* ty=Tensor[(30), uint16] */, dtype="uint16") /* ty=Tensor[(30), uint16] */;
  %319 = reshape(%317, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
  %320 = reshape(%318, newshape=[30]) /* ty=Tensor[(30), uint16] */;
  %321 = @func_2915(%319, %320) /* ty=(Tensor[(12, 5, 12), int16], Tensor[(208), float64], Tensor[(30), uint16], Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), bool]) */;
  %322 = %321.3;
  (%316, %322, meta[relay.Constant][23] /* ty=Tensor[(30), uint16] */)
}

def @func_7319() -> (Tensor[(12, 5, 12), bool],) {
  %323 = @func_4596() /* ty=Tensor[(12, 5, 12), bool] */;
  (%323,)
}

def @func_7924(%var_7904: Tensor[(7, 1, 1), float32]) -> (Tensor[(7, 1, 1), float32], Tensor[(21), float32], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), float64]) {
  %324 = cast(%var_7904, dtype="float32") /* ty=Tensor[(7, 1, 1), float32] */;
  %325 = cast(meta[relay.Constant][24] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %326 = cast(meta[relay.Constant][25] /* ty=Tensor[(18), uint8] */, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %327 = cast(meta[relay.Constant][26] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %328 = reshape(%325, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %329 = reshape(%326, newshape=[18]) /* ty=Tensor[(18), uint8] */;
  %330 = reshape(%327, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), float64] */;
  %331 = @func_3146(%328, %329, %330) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */;
  %332 = sigmoid(%324) /* ty=Tensor[(7, 1, 1), float32] */;
  %333 = %331.8;
  (%332, %333, meta[relay.Constant][24] /* ty=Tensor[(192), float32] */, meta[relay.Constant][25] /* ty=Tensor[(18), uint8] */, meta[relay.Constant][26] /* ty=Tensor[(1170), float64] */)
}

def @func_9544() -> (Tensor[(45), float64], Tensor[(3, 5, 3), float64]) {
  %334 = @func_9015() /* ty=(Tensor[(45), float64], Tensor[(12, 5, 12), float32]) */;
  %335 = %334.0;
  %336 = cast(%335, dtype="float64") /* ty=Tensor[(45), float64] */;
  %337 = reshape(%336, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
  %338 = @func_2292(%337) /* ty=(Tensor[(3, 5, 3), float64],) */;
  %339 = %338.0;
  (%335, %339)
}

def @func_5984(%var_5981: Tensor[(1260), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(1260), float64]) {
  %340 = @func_3944() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %341 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %342 = cast(%var_5981, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %343 = cast(%var_5981, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %344 = reshape(%342, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float64] */;
  %345 = reshape(%343, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float64] */;
  %346 = @func_5473(%344, %345) /* ty=(Tensor[(14, 9, 10), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64]) */;
  %347 = %340.0;
  %348 = %341.0;
  %349 = %346.1;
  (%347, %348, %349, %var_5981)
}

def @func_4625(%var_4618: Tensor[(192), float32], %var_4621: Tensor[(130, 9), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(130, 9), float32]) {
  %350 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %351 = %350.1;
  %352 = cast(%351, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %353 = cast(%var_4618, dtype="float32") /* ty=Tensor[(192), float32] */;
  %354 = cast(meta[relay.Constant][27] /* ty=Tensor[(130, 9), float64] */, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
  %355 = reshape(%352, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
  %356 = reshape(%353, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %357 = reshape(%354, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %358 = @func_3693(%355, %356, %357) /* ty=(Tensor[(12, 5, 12), float32], Tensor[(3, 6), uint8], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(1170), float64]) */;
  %359 = cast(%var_4621, dtype="float32") /* ty=Tensor[(130, 9), float32] */;
  %360 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(130, 9), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %361 = cast(meta[relay.Constant][27] /* ty=Tensor[(130, 9), float64] */, dtype="float32") /* ty=Tensor[(130, 9), float32] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %363 = %358.2;
  %364 = floor_mod(%361, %362) /* ty=Tensor[(130, 9), float32] */;
  (%351, %363, %var_4618, %364)
}

def @func_6399(%var_6394: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float32], Tensor[(6, 15, 16), float32], Tensor[(1170), float64]) {
  %365 = @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */;
  %366 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %367 = cast(%var_6394, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %368 = reshape(%367, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %369 = @func_1686(%368) /* ty=(Tensor[(6, 15, 16), float32], Tensor[(6, 13, 15), float64], Tensor[(1170), float64]) */;
  %370 = %365.0;
  %371 = @func_3755() /* ty=Tensor[(12, 5, 12), uint64] */;
  %372 = %366.0;
  %373 = %369.0;
  (%370, %371, %372, %373, %var_6394)
}

def @func_7667(%var_7642: Tensor[(96), float32]) -> (Tensor[(12, 5, 12), float64], Tensor[(1170), float64], Tensor[(96), float32], Tensor[(12, 5, 12), float64]) {
  %374 = @func_4557() /* ty=Tensor[(12, 5, 12), float64] */;
  %375 = cast(%374, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %376 = cast(%var_7642, dtype="float32") /* ty=Tensor[(96), float32] */;
  %377 = reshape(%375, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
  %378 = reshape(%376, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %379 = @func_4527(%377, %378) /* ty=(Tensor[(6, 13, 15), float64], Tensor[(390, 3), float64], Tensor[(12, 5, 12), float32], Tensor[(1170), float64], Tensor[(234, 3), uint32], Tensor[(192), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(2, 8, 6), float32], Tensor[(234), float32]) */;
  %380 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %381 = %379.3;
  %382 = %380.0;
  (%374, %381, %var_7642, %382)
}

def @func_4299(%var_4292: Tensor[(18), uint8], %var_4294: Tensor[(650, 3), int8], %var_4295: Tensor[(208), float64], %var_4296: Tensor[(21, 1), float32], %var_4297: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(192), float32], Tensor[(14, 14, 5), bool], Tensor[(6, 13, 15), float64], Tensor[(18), uint8], Tensor[(180, 1), uint8], Tensor[(650, 3), int8], Tensor[(208), float64], Tensor[(21, 1), float32], Tensor[(1170), float64]) {
  %383 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %384 = cast(meta[relay.Constant][28] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %385 = reshape(%384, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %386 = @func_574(%385) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
  %387 = %386.0;
  %388 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 14, 5), float64] */, dtype="bool") /* ty=Tensor[(14, 14, 5), bool] */;
  %389 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %390 = cast(%387, dtype="bool") /* ty=Tensor[(14, 14, 5), bool] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %392 = cast(%var_4292, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %393 = cast(meta[relay.Constant][30] /* ty=Tensor[(180, 1), uint8] */, dtype="uint8") /* ty=Tensor[(180, 1), uint8] */;
  %394 = cast(meta[relay.Constant][28] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %395 = cast(%var_4294, dtype="int8") /* ty=Tensor[(650, 3), int8] */;
  %396 = cast(%var_4295, dtype="float64") /* ty=Tensor[(208), float64] */;
  %397 = cast(%var_4296, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %398 = cast(%var_4297, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %399 = reshape(%392, newshape=[3, 1, 6]) /* ty=Tensor[(3, 1, 6), uint8] */;
  %400 = reshape(%393, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), uint8] */;
  %401 = reshape(%394, newshape=[8, 24]) /* ty=Tensor[(8, 24), float32] */;
  %402 = reshape(%395, newshape=[1950]) /* ty=Tensor[(1950), int8] */;
  %403 = reshape(%396, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %404 = reshape(%397, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %405 = reshape(%398, newshape=[5, 234]) /* ty=Tensor[(5, 234), float64] */;
  %406 = @func_1816(%399, %400, %401, %402, %403, %404, %405) /* ty=(Tensor[(3, 10, 6), uint8], Tensor[(14, 14, 5), float64], Tensor[(8, 24), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(1950), int8], Tensor[(208), float64], float32, Tensor[(21), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(6, 13, 15), float64], Tensor[(5, 234), float64]) */;
  %407 = %383.0;
  %408 = not_equal(%390, %391) /* ty=Tensor[(14, 14, 5), bool] */;
  %409 = %406.12;
  (%407, meta[relay.Constant][28] /* ty=Tensor[(192), float32] */, %408, %409, %var_4292, meta[relay.Constant][30] /* ty=Tensor[(180, 1), uint8] */, %var_4294, %var_4295, %var_4296, %var_4297)
}

def @func_6639(%var_6629: Tensor[(702), float32]) -> (Tensor[(702), uint16],) {
  %410 = @func_5191() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(4, 48), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(702), float32], Tensor[(12, 5, 12), float64]) */;
  %411 = %410.4;
  %412 = cast(%var_6629, dtype="uint16") /* ty=Tensor[(702), uint16] */;
  %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(1), int32] */;
  %414 = cast(%411, dtype="uint16") /* ty=Tensor[(702), uint16] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %416 = logical_xor(%414, %415) /* ty=Tensor[(702), uint16] */;
  (%416,)
}

def @func_9069() -> (Tensor[(3, 5, 3), float64], Tensor[(12, 5, 12), float64]) {
  %417 = @func_7363() /* ty=(Tensor[(3, 5, 3), float64], Tensor[(12, 5, 12), uint64]) */;
  %418 = %417.0;
  %419 = cast(%418, dtype="float64") /* ty=Tensor[(3, 5, 3), float64] */;
  %420 = sinh(%419) /* ty=Tensor[(3, 5, 3), float64] */;
  %421 = @func_3629() /* ty=Tensor[(12, 5, 12), float64] */;
  (%420, %421)
}

def @func_6613(%var_6505: Tensor[(1170), float64], %var_6605: Tensor[(8, 24), float32]) -> (Tensor[(12, 5, 12), uint64], Tensor[(208), float64], Tensor[(18), uint8], Tensor[(1170), float64], Tensor[(8, 24), bool], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(1950), int8], Tensor[(234, 3), uint32], Tensor[(96), float32], Tensor[(8, 24), bool]) {
  %422 = @func_6066() /* ty=(Tensor[(12, 5, 12), uint64],) */;
  %423 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 24), float32] */, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
  %424 = cast(meta[relay.Constant][32] /* ty=Tensor[(18), uint8] */, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %425 = cast(%var_6505, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %426 = reshape(%423, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %427 = reshape(%424, newshape=[18]) /* ty=Tensor[(18), uint8] */;
  %428 = reshape(%425, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), float64] */;
  %429 = @func_3146(%426, %427, %428) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */;
  %430 = cast(meta[relay.Constant][33] /* ty=Tensor[(8, 24), float32] */, dtype="bool") /* ty=Tensor[(8, 24), bool] */;
  %431 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(8, 24), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %432 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 24), float32] */, dtype="bool") /* ty=Tensor[(8, 24), bool] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %434 = @func_3944() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %435 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %436 = @func_4757() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(12, 2, 8), float32], uint8) */;
  %437 = logical_and(%432, %433) /* ty=Tensor[(8, 24), bool] */;
  %438 = cast(%437, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
  %439 = cast(meta[relay.Constant][32] /* ty=Tensor[(18), uint8] */, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %440 = cast(%var_6505, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %441 = reshape(%438, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %442 = reshape(%439, newshape=[18]) /* ty=Tensor[(18), uint8] */;
  %443 = reshape(%440, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), float64] */;
  %444 = @func_3146(%441, %442, %443) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */;
  %445 = %434.0;
  %446 = cast(%445, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %447 = cast(meta[relay.Constant][34] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %448 = reshape(%446, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
  %449 = reshape(%447, newshape=[96]) /* ty=Tensor[(96), float32] */;
  %450 = @func_4527(%448, %449) /* ty=(Tensor[(6, 13, 15), float64], Tensor[(390, 3), float64], Tensor[(12, 5, 12), float32], Tensor[(1170), float64], Tensor[(234, 3), uint32], Tensor[(192), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(2, 8, 6), float32], Tensor[(234), float32]) */;
  %451 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 24), float32] */, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
  %452 = atan(%451) /* ty=Tensor[(8, 24), float32] */;
  %453 = cast(%var_6605, dtype="bool") /* ty=Tensor[(8, 24), bool] */;
  %454 = shape_of(%452, dtype="int32") /* ty=Tensor[(2), int32] */;
  %455 = cast(%452, dtype="bool") /* ty=Tensor[(8, 24), bool] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %457 = %422.0;
  %458 = %429.7;
  %459 = %435.0;
  %460 = %436.1;
  %461 = %444.6;
  %462 = %450.4;
  %463 = equal(%455, %456) /* ty=Tensor[(8, 24), bool] */;
  (%457, %458, meta[relay.Constant][32] /* ty=Tensor[(18), uint8] */, %var_6505, %437, %445, %459, %460, %461, %462, meta[relay.Constant][34] /* ty=Tensor[(96), float32] */, %463)
}

def @func_3185() -> (Tensor[(12, 5, 12), float32],) {
  %464 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %465 = %464.1;
  (%465,)
}

def @func_6066() -> (Tensor[(12, 5, 12), uint64],) {
  %466 = @func_4232() /* ty=(Tensor[(12, 5, 12), uint64],) */;
  %467 = %466.0;
  (%467,)
}

def @func_7126() -> (Tensor[(30), uint16], Tensor[(12, 5, 12), float32]) {
  %468 = @func_5608() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(30), uint16]) */;
  %469 = @func_6830() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %470 = %468.2;
  %471 = %469.0;
  (%470, %471)
}

def @func_961(%var_931: Tensor[(16, 13, 1), float64], %var_946: Tensor[(192, 1), float32], %var_949: Tensor[(16, 13, 1), float64]) -> (Tensor[(12, 2, 8), float32], Tensor[(192, 1), float32], Tensor[(16, 13, ?), float64]) {
  %472 = cast(%var_946, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %473 = reshape(%472, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %474 = @func_401(%473) /* ty=(Tensor[(12, 2, 8), float32],) */;
  %475 = cast(%var_931, dtype="float64") /* ty=Tensor[(16, 13, 1), float64] */;
  %476 = cosh(%475) /* ty=Tensor[(16, 13, 1), float64] */;
  %477 = cast(%var_949, dtype="float64") /* ty=Tensor[(16, 13, 1), float64] */;
  %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(%476, dtype="float64") /* ty=Tensor[(16, 13, 1), float64] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %481 = floor_mod(%479, %480) /* ty=Tensor[(16, 13, ?), float64] */;
  %482 = cast(%var_949, dtype="float64") /* ty=Tensor[(16, 13, 1), float64] */;
  %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%481, dtype="float64") /* ty=Tensor[(16, 13, ?), float64] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %486 = %474.0;
  %487 = floor_divide(%484, %485) /* ty=Tensor[(16, 13, ?), float64] */;
  (%486, %var_946, %487)
}

def @func_7363() -> (Tensor[(3, 5, 3), float64], Tensor[(12, 5, 12), uint64]) {
  %488 = @func_5608() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(30), uint16]) */;
  %489 = @func_6066() /* ty=(Tensor[(12, 5, 12), uint64],) */;
  %490 = %488.1;
  %491 = %489.0;
  (%490, %491)
}

def @func_8445() -> (Tensor[(12, 5, 12), float64],) {
  %492 = @func_8315() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %493 = %492.0;
  (%493,)
}

def @func_9015() -> (Tensor[(45), float64], Tensor[(12, 5, 12), float32]) {
  %494 = @func_8064() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(45), float64]) */;
  %495 = @func_6128() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %496 = %494.1;
  %497 = %495.0;
  (%496, %497)
}

def @func_7551(%var_7528: Tensor[(15, 5, 1), uint32], %var_7529: Tensor[(15, 5, 13), uint32]) -> (Tensor[(15, 5, 13), uint32], Tensor[(12, 5, 12), float64]) {
  %498 = cast(%var_7528, dtype="uint32") /* ty=Tensor[(15, 5, 1), uint32] */;
  %499 = cast(%var_7529, dtype="uint32") /* ty=Tensor[(15, 5, 13), uint32] */;
  %500 = @func_5137() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 8, 6), float32]) */;
  %501 = right_shift(%498, %499) /* ty=Tensor[(15, 5, 13), uint32] */;
  %502 = %500.0;
  (%501, %502)
}

def @func_9373(%var_9329: Tensor[(104, 2), uint8], %var_9347: Tensor[(18, 1), uint8], %var_9350: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(104, 2), uint16], Tensor[(208), float64], Tensor[(18, 1), uint8], Tensor[(21), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(1950), float32]) {
  %503 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %504 = @func_8659() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(104, 2), uint8]) */;
  %505 = %504.2;
  %506 = cast(%var_9329, dtype="uint16") /* ty=Tensor[(104, 2), uint16] */;
  %507 = shape_of(%505, dtype="int32") /* ty=Tensor[(2), int32] */;
  %508 = cast(%505, dtype="uint16") /* ty=Tensor[(104, 2), uint16] */;
  %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %510 = cast(%var_9347, dtype="uint8") /* ty=Tensor[(18, 1), uint8] */;
  %511 = cast(meta[relay.Constant][35] /* ty=Tensor[(1950), int8] */, dtype="int8") /* ty=Tensor[(1950), int8] */;
  %512 = cast(%505, dtype="float64") /* ty=Tensor[(104, 2), float64] */;
  %513 = cast(meta[relay.Constant][36] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %514 = cast(%var_9350, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %515 = reshape(%510, newshape=[18]) /* ty=Tensor[(18), uint8] */;
  %516 = reshape(%511, newshape=[650, 3]) /* ty=Tensor[(650, 3), int8] */;
  %517 = reshape(%512, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %518 = reshape(%513, newshape=[21, 1]) /* ty=Tensor[(21, 1), float32] */;
  %519 = reshape(%514, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %520 = @func_4299(%515, %516, %517, %518, %519) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(192), float32], Tensor[(14, 14, 5), bool], Tensor[(6, 13, 15), float64], Tensor[(18), uint8], Tensor[(180, 1), uint8], Tensor[(650, 3), int8], Tensor[(208), float64], Tensor[(21, 1), float32], Tensor[(1170), float64]) */;
  %521 = cast(meta[relay.Constant][35] /* ty=Tensor[(1950), int8] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
  %522 = %503.0;
  %523 = add(%508, %509) /* ty=Tensor[(104, 2), uint16] */;
  %524 = %520.7;
  %525 = @func_6093() /* ty=Tensor[(12, 5, 12), float32] */;
  %526 = log(%521) /* ty=Tensor[(1950), float32] */;
  (%522, %523, %524, %var_9347, meta[relay.Constant][36] /* ty=Tensor[(21), float32] */, %var_9350, %525, %526)
}

def @func_8659() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(104, 2), uint8]) {
  %527 = @func_7767() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %528 = cast(meta[relay.Constant][37] /* ty=Tensor[(104, 2), uint8] */, dtype="uint8") /* ty=Tensor[(104, 2), uint8] */;
  %529 = reshape(%528, newshape=[4, 13, 4]) /* ty=Tensor[(4, 13, 4), uint8] */;
  %530 = @func_4737(%529) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 16, 1), float64], Tensor[(4, 48), uint8], Tensor[(4, 13, 4), bool]) */;
  %531 = %527.0;
  %532 = %530.0;
  (%531, %532, meta[relay.Constant][37] /* ty=Tensor[(104, 2), uint8] */)
}

def @func_6093() -> Tensor[(12, 5, 12), float32] {
  %533 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %533.0
}

def @func_9183() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(10, 3), uint16]) {
  %534 = @func_3430() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %535 = @func_8445() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %536 = @func_5381() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(45), float64], Tensor[(10, 3), uint16]) */;
  %537 = %534.0;
  %538 = %535.0;
  %539 = %536.3;
  (%537, %538, %539)
}

def @func_4693() -> Tensor[(12, 5, 12), float64] {
  @func_3091() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_4757() -> (Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(12, 2, 8), float32], uint8) {
  %540 = @func_4095() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(1, 192), float32], Tensor[(12, 5, 12), float32]) */;
  %541 = cast(meta[relay.Constant][38] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %542 = %540.2;
  %543 = cast(%542, dtype="uint8") /* ty=Tensor[(1, 192), uint8] */;
  %544 = reshape(%541, newshape=[]) /* ty=uint8 */;
  %545 = reshape(%543, newshape=[12, 16, 1]) /* ty=Tensor[(12, 16, 1), uint8] */;
  %546 = @func_736(%544, %545) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(12, 16, 1), float64]) */;
  %547 = @func_3091() /* ty=Tensor[(12, 5, 12), float64] */;
  %548 = %546.1;
  (%547, %542, %548, meta[relay.Constant][38] /* ty=uint8 */)
}

def @func_3390() -> (Tensor[(12, 5, 12), float64],) {
  %549 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %550 = %549.0;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %552 = atan(%551) /* ty=Tensor[(12, 5, 12), float64] */;
  (%552,)
}

def @func_3852(%var_3814: Tensor[(14, 13, 4), float32]) -> (Tensor[(14, 13, 4), float32], Tensor[(12, 5, 12), float32]) {
  %553 = cast(%var_3814, dtype="float32") /* ty=Tensor[(14, 13, 4), float32] */;
  %554 = tan(%553) /* ty=Tensor[(14, 13, 4), float32] */;
  %555 = cast(%554, dtype="float32") /* ty=Tensor[(14, 13, 4), float32] */;
  %556 = @func_3755() /* ty=Tensor[(12, 5, 12), uint64] */;
  %557 = cast(%556, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %558 = asinh(%555) /* ty=Tensor[(14, 13, 4), float32] */;
  %559 = log10(%557) /* ty=Tensor[(12, 5, 12), float32] */;
  (%558, %559)
}

def @func_8280(%var_8270: Tensor[(702), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(702), int64], Tensor[(12, 5, 12), float32], Tensor[(1950), int8], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), float64], Tensor[(702), bool]) {
  %560 = @func_5191() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(4, 48), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(702), float32], Tensor[(12, 5, 12), float64]) */;
  %561 = %560.4;
  %562 = cast(meta[relay.Constant][39] /* ty=Tensor[(702), float32] */, dtype="int64") /* ty=Tensor[(702), int64] */;
  %563 = shape_of(%561, dtype="int32") /* ty=Tensor[(1), int32] */;
  %564 = cast(%561, dtype="int64") /* ty=Tensor[(702), int64] */;
  %565 = dyn.reshape(%562, %563, newshape=[]) /* ty=Tensor[(?), int64] */;
  %566 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %567 = cast(meta[relay.Constant][40] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %568 = cast(meta[relay.Constant][41] /* ty=Tensor[(18), uint8] */, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %569 = cast(meta[relay.Constant][42] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %570 = reshape(%567, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %571 = reshape(%568, newshape=[18]) /* ty=Tensor[(18), uint8] */;
  %572 = reshape(%569, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), float64] */;
  %573 = @func_3146(%570, %571, %572) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */;
  %574 = cast(%561, dtype="float64") /* ty=Tensor[(702), float64] */;
  %575 = sinh(%574) /* ty=Tensor[(702), float64] */;
  %576 = cast(%var_8270, dtype="bool") /* ty=Tensor[(702), bool] */;
  %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(1), int32] */;
  %578 = cast(%575, dtype="bool") /* ty=Tensor[(702), bool] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?), bool] */;
  %580 = @func_6941() /* ty=Tensor[(12, 5, 12), float32] */;
  %581 = left_shift(%564, %565) /* ty=Tensor[(702), int64] */;
  %582 = %566.0;
  %583 = %573.6;
  %584 = greater_equal(%578, %579) /* ty=Tensor[(702), bool] */;
  (%580, %581, %582, %583, meta[relay.Constant][40] /* ty=Tensor[(192), float32] */, meta[relay.Constant][41] /* ty=Tensor[(18), uint8] */, meta[relay.Constant][42] /* ty=Tensor[(1170), float64] */, %584)
}

def @func_8953(%var_8945: Tensor[(45), float64]) -> (Tensor[(4, 14, 14), uint32], Tensor[(12, 5, 12), float64], Tensor[(45), float64], Tensor[(12, 16, 1), float64], Tensor[(2, 104), uint8]) {
  %585 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 14, 14), uint32] */, dtype="uint32") /* ty=Tensor[(4, 14, 14), uint32] */;
  %586 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(4, 14, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 14, 14), uint32] */, dtype="uint32") /* ty=Tensor[(4, 14, 14), uint32] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %589 = cast(%var_8945, dtype="float64") /* ty=Tensor[(45), float64] */;
  %590 = reshape(%589, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %591 = @func_5887(%590) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(45), float64]) */;
  %592 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 104), uint8] */, dtype="uint8") /* ty=Tensor[(2, 104), uint8] */;
  %593 = reshape(%592, newshape=[4, 13, 4]) /* ty=Tensor[(4, 13, 4), uint8] */;
  %594 = @func_4737(%593) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 16, 1), float64], Tensor[(4, 48), uint8], Tensor[(4, 13, 4), bool]) */;
  %595 = logical_xor(%587, %588) /* ty=Tensor[(4, 14, 14), uint32] */;
  %596 = %591.0;
  %597 = %594.1;
  (%595, %596, %var_8945, %597, meta[relay.Constant][45] /* ty=Tensor[(2, 104), uint8] */)
}

def @func_2616(%var_2608: Tensor[(11, 13, 13), int8], %var_2609: Tensor[(11, 13, 13), int8]) -> Tensor[(11, 13, 13), int8] {
  %598 = cast(%var_2609, dtype="int8") /* ty=Tensor[(11, 13, 13), int8] */;
  %599 = shape_of(%var_2608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %600 = cast(%var_2608, dtype="int8") /* ty=Tensor[(11, 13, 13), int8] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  logical_xor(%600, %601) /* ty=Tensor[(11, 13, 13), int8] */
}

def @func_4232() -> (Tensor[(12, 5, 12), uint64],) {
  %602 = @func_3755() /* ty=Tensor[(12, 5, 12), uint64] */;
  (%602,)
}

def @func_4527(%var_4475: Tensor[(12, 5, 12), float64], %var_4515: Tensor[(96), float32]) -> (Tensor[(6, 13, 15), float64], Tensor[(390, 3), float64], Tensor[(12, 5, 12), float32], Tensor[(1170), float64], Tensor[(234, 3), uint32], Tensor[(192), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(2, 8, 6), float32], Tensor[(234), float32]) {
  %603 = cast(meta[relay.Constant][46] /* ty=Tensor[(390, 3), float64] */, dtype="float64") /* ty=Tensor[(390, 3), float64] */;
  %604 = reshape(%603, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %605 = @func_1686(%604) /* ty=(Tensor[(6, 15, 16), float32], Tensor[(6, 13, 15), float64], Tensor[(1170), float64]) */;
  %606 = @func_3783() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */;
  %607 = %606.0;
  %608 = cast(%var_4475, dtype="uint8") /* ty=Tensor[(12, 5, 12), uint8] */;
  %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%607, dtype="uint8") /* ty=Tensor[(12, 5, 12), uint8] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %612 = maximum(%610, %611) /* ty=Tensor[(12, 5, 12), uint8] */;
  %613 = cast(%612, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %614 = shape_of(%607, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%607, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %617 = cast(meta[relay.Constant][47] /* ty=Tensor[(234, 3), uint32] */, dtype="uint32") /* ty=Tensor[(234, 3), uint32] */;
  %618 = cast(meta[relay.Constant][47] /* ty=Tensor[(234, 3), uint32] */, dtype="uint32") /* ty=Tensor[(234, 3), uint32] */;
  %619 = cast(meta[relay.Constant][48] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %620 = %605.1;
  %621 = cast(%620, dtype="float64") /* ty=Tensor[(6, 13, 15), float64] */;
  %622 = reshape(%617, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), uint32] */;
  %623 = reshape(%618, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), uint32] */;
  %624 = reshape(%619, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %625 = reshape(%621, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %626 = @func_3282(%622, %623, %624, %625) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 6), uint8], Tensor[(1170), float64], Tensor[(13, 6, 9), float32], Tensor[(13, 6, 9), int32]) */;
  %627 = cast(%var_4515, dtype="float32") /* ty=Tensor[(96), float32] */;
  %628 = reshape(%627, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %629 = @func_2604(%628) /* ty=(Tensor[(2, 8, 6), float32],) */;
  %630 = cast(meta[relay.Constant][49] /* ty=Tensor[(234), float32] */, dtype="float32") /* ty=Tensor[(234), float32] */;
  %631 = reshape(%630, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float32] */;
  %632 = @func_3597(%631) /* ty=(Tensor[(2, 13, 9), int32], Tensor[(2, 13, 9), float64], Tensor[(14, 14, 5), float64], uint8, Tensor[(192), uint8], Tensor[(12, 2, 8), float32], Tensor[(2, 8, 6), float32], Tensor[(1, 96), float32]) */;
  %633 = power(%615, %616) /* ty=Tensor[(12, 5, 12), float32] */;
  %634 = %626.3;
  %635 = %629.0;
  %636 = %632.6;
  (%620, meta[relay.Constant][46] /* ty=Tensor[(390, 3), float64] */, %633, %634, meta[relay.Constant][47] /* ty=Tensor[(234, 3), uint32] */, meta[relay.Constant][48] /* ty=Tensor[(192), float32] */, %635, %var_4515, %636, meta[relay.Constant][49] /* ty=Tensor[(234), float32] */)
}

def @func_4095() -> (Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(1, 192), float32], Tensor[(12, 5, 12), float32]) {
  %637 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %638 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 192), float32] */, dtype="float32") /* ty=Tensor[(1, 192), float32] */;
  %639 = reshape(%638, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %640 = @func_574(%639) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
  %641 = @func_3944() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %642 = %641.0;
  %643 = cast(%642, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %644 = %637.0;
  %645 = %640.0;
  %646 = sigmoid(%643) /* ty=Tensor[(12, 5, 12), float32] */;
  (%644, %645, meta[relay.Constant][50] /* ty=Tensor[(1, 192), float32] */, %646)
}

def @func_1471(%var_1461: Tensor[(6, 13, 15), float64]) -> Tensor[(6, 13, 15), float64] {
  %647 = cast(%var_1461, dtype="float64") /* ty=Tensor[(6, 13, 15), float64] */;
  sinh(%647) /* ty=Tensor[(6, 13, 15), float64] */
}

def @func_4944() -> Tensor[(12, 5, 12), float32] {
  %648 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %648.0
}

def @func_2348(%var_2325: Tensor[(5, 7, 1), float64], %var_2335: Tensor[(5, 7, 12), float64]) -> (Tensor[(5, 7, 12), float32],) {
  %649 = cast(%var_2325, dtype="float64") /* ty=Tensor[(5, 7, 1), float64] */;
  %650 = sin(%649) /* ty=Tensor[(5, 7, 1), float64] */;
  %651 = cast(%650, dtype="float32") /* ty=Tensor[(5, 7, 1), float32] */;
  %652 = cast(%var_2335, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %653 = floor_divide(%651, %652) /* ty=Tensor[(5, 7, 12), float32] */;
  (%653,)
}

def @func_5473(%var_5453: Tensor[(14, 9, 10), float64], %var_5454: Tensor[(14, 9, 10), float64]) -> (Tensor[(14, 9, 10), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64]) {
  %654 = cast(%var_5454, dtype="float64") /* ty=Tensor[(14, 9, 10), float64] */;
  %655 = shape_of(%var_5453, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%var_5453, dtype="float64") /* ty=Tensor[(14, 9, 10), float64] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %658 = @func_5137() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 8, 6), float32]) */;
  %659 = cast(meta[relay.Constant][51] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %660 = reshape(%659, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), uint64] */;
  %661 = floor_mod(%656, %657) /* ty=Tensor[(14, 9, 10), float64] */;
  %662 = %658.0;
  %663 = @func_5089(%660) /* ty=Tensor[(4, 14, 8), uint64] */;
  (%661, %662, %663, meta[relay.Constant][51] /* ty=Tensor[(448), uint64] */)
}

def @func_1331(%var_1245: Tensor[(13, 15, 10), int8], %var_1252: Tensor[(104, 2), float64], %var_1253: Tensor[(192), float32], %var_1267: float32, %var_1268: Tensor[(21), float32], %var_1303: Tensor[(13, 15, 10), int8], %var_1322: Tensor[(104, 2), float32]) -> (Tensor[(16, 13, ?), float64], Tensor[(192), float32], Tensor[(3, ?, 7), bool], float32, Tensor[(21), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(13, 15, 10), int16], Tensor[(104, 2), uint32], Tensor[(12, 2, 8), float32], Tensor[(14, 14, 5), float64]) {
  %664 = cast(%var_1252, dtype="float64") /* ty=Tensor[(104, 2), float64] */;
  %665 = cast(%var_1253, dtype="float32") /* ty=Tensor[(192), float32] */;
  %666 = cast(%var_1252, dtype="float64") /* ty=Tensor[(104, 2), float64] */;
  %667 = reshape(%664, newshape=[16, 13, 1]) /* ty=Tensor[(16, 13, 1), float64] */;
  %668 = reshape(%665, newshape=[192, 1]) /* ty=Tensor[(192, 1), float32] */;
  %669 = reshape(%666, newshape=[16, 13, 1]) /* ty=Tensor[(16, 13, 1), float64] */;
  %670 = @func_961(%667, %668, %669) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(192, 1), float32], Tensor[(16, 13, ?), float64]) */;
  %671 = cast(%var_1267, dtype="float32") /* ty=float32 */;
  %672 = cast(%var_1268, dtype="float32") /* ty=Tensor[(21), float32] */;
  %673 = reshape(%671, newshape=[]) /* ty=float32 */;
  %674 = reshape(%672, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %675 = @func_1238(%673, %674) /* ty=(Tensor[(3, 1, 7), bool], Tensor[(3, ?, 7), bool]) */;
  %676 = cast(%var_1253, dtype="float32") /* ty=Tensor[(192), float32] */;
  %677 = reshape(%676, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %678 = @func_401(%677) /* ty=(Tensor[(12, 2, 8), float32],) */;
  %679 = cast(%var_1267, dtype="float32") /* ty=float32 */;
  %680 = %675.1;
  %681 = cast(%680, dtype="float32") /* ty=Tensor[(3, ?, 7), float32] */;
  %682 = reshape(%679, newshape=[]) /* ty=float32 */;
  %683 = reshape(%681, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %684 = @func_1238(%682, %683) /* ty=(Tensor[(3, 1, 7), bool], Tensor[(3, ?, 7), bool]) */;
  %685 = cast(%var_1245, dtype="int8") /* ty=Tensor[(13, 15, 10), int8] */;
  %686 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(13, 15, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(meta[relay.Constant][52] /* ty=Tensor[(13, 15, 10), int8] */, dtype="int8") /* ty=Tensor[(13, 15, 10), int8] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %689 = maximum(%687, %688) /* ty=Tensor[(13, 15, 10), int8] */;
  %690 = cast(%var_1303, dtype="int16") /* ty=Tensor[(13, 15, 10), int16] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%689, dtype="int16") /* ty=Tensor[(13, 15, 10), int16] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %694 = cast(%var_1252, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
  %695 = sinh(%694) /* ty=Tensor[(104, 2), float32] */;
  %696 = cast(%var_1322, dtype="uint32") /* ty=Tensor[(104, 2), uint32] */;
  %697 = shape_of(%695, dtype="int32") /* ty=Tensor[(2), int32] */;
  %698 = cast(%695, dtype="uint32") /* ty=Tensor[(104, 2), uint32] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %700 = cast(%var_1253, dtype="float32") /* ty=Tensor[(192), float32] */;
  %701 = reshape(%700, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %702 = @func_401(%701) /* ty=(Tensor[(12, 2, 8), float32],) */;
  %703 = cast(%var_1253, dtype="float32") /* ty=Tensor[(192), float32] */;
  %704 = reshape(%703, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %705 = @func_574(%704) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
  %706 = %670.2;
  %707 = %678.0;
  %708 = %684.1;
  %709 = right_shift(%692, %693) /* ty=Tensor[(13, 15, 10), int16] */;
  %710 = right_shift(%698, %699) /* ty=Tensor[(104, 2), uint32] */;
  %711 = %702.0;
  %712 = %705.0;
  (%706, %var_1253, %680, %var_1267, %var_1268, %707, %708, %709, %710, %711, %712)
}

def @func_6660(%var_6651: Tensor[(192), float32], %var_6652: Tensor[(18), uint8], %var_6655: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(1, 1170), float64], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), bool]) {
  %713 = @func_3944() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %714 = cast(%var_6651, dtype="float32") /* ty=Tensor[(192), float32] */;
  %715 = cast(%var_6652, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %716 = cast(meta[relay.Constant][53] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %717 = reshape(%714, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %718 = reshape(%715, newshape=[18]) /* ty=Tensor[(18), uint8] */;
  %719 = reshape(%716, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), float64] */;
  %720 = @func_3146(%717, %718, %719) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */;
  %721 = cast(%var_6655, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %722 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(1170), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %723 = cast(meta[relay.Constant][53] /* ty=Tensor[(1170), float64] */, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?), bool] */;
  %725 = %713.0;
  %726 = %720.9;
  %727 = logical_or(%723, %724) /* ty=Tensor[(1170), bool] */;
  (%725, %726, %var_6651, %var_6652, %727)
}

def @func_5280() -> Tensor[(2, 8, 6), float32] {
  %728 = @func_5137() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 8, 6), float32]) */;
  %728.1
}

def @func_5887(%var_5870: Tensor[(45), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(45), float64]) {
  %729 = cast(%var_5870, dtype="float64") /* ty=Tensor[(45), float64] */;
  %730 = reshape(%729, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
  %731 = @func_2292(%730) /* ty=(Tensor[(3, 5, 3), float64],) */;
  %732 = @func_3920() /* ty=Tensor[(12, 5, 12), float64] */;
  %733 = %731.0;
  (%732, %733, %var_5870)
}

def @func_5436() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) {
  %734 = @func_5264() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64]) */;
  %735 = @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */;
  %736 = @func_3944() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %737 = %734.1;
  %738 = %735.1;
  %739 = %736.0;
  (%737, %738, %739)
}

def @func_7342() -> Tensor[(12, 5, 12), float32] {
  @func_6941() /* ty=Tensor[(12, 5, 12), float32] */
}

def @func_6293(%var_6278: Tensor[(7, 5, 13), float64]) -> (Tensor[(7, 5, 13), float64],) {
  %740 = cast(%var_6278, dtype="float64") /* ty=Tensor[(7, 5, 13), float64] */;
  %741 = asinh(%740) /* ty=Tensor[(7, 5, 13), float64] */;
  (%741,)
}

def @func_7487() -> (uint8, Tensor[(11, 13, 13), int8], Tensor[(13, 143), uint64]) {
  %742 = @func_4757() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(12, 2, 8), float32], uint8) */;
  %743 = cast(meta[relay.Constant][54] /* ty=Tensor[(13, 143), int8] */, dtype="int8") /* ty=Tensor[(13, 143), int8] */;
  %744 = cast(meta[relay.Constant][54] /* ty=Tensor[(13, 143), int8] */, dtype="int8") /* ty=Tensor[(13, 143), int8] */;
  %745 = reshape(%743, newshape=[11, 13, 13]) /* ty=Tensor[(11, 13, 13), int8] */;
  %746 = reshape(%744, newshape=[11, 13, 13]) /* ty=Tensor[(11, 13, 13), int8] */;
  %747 = cast(meta[relay.Constant][55] /* ty=Tensor[(13, 143), int8] */, dtype="uint64") /* ty=Tensor[(13, 143), uint64] */;
  %748 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(13, 143), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %749 = cast(meta[relay.Constant][54] /* ty=Tensor[(13, 143), int8] */, dtype="uint64") /* ty=Tensor[(13, 143), uint64] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %751 = %742.3;
  %752 = @func_2616(%745, %746) /* ty=Tensor[(11, 13, 13), int8] */;
  %753 = bitwise_xor(%749, %750) /* ty=Tensor[(13, 143), uint64] */;
  (%751, %752, %753)
}

def @func_5945() -> Tensor[(12, 5, 12), float32] {
  %754 = @func_4757() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(12, 2, 8), float32], uint8) */;
  %755 = %754.0;
  %756 = cast(%755, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  exp(%756) /* ty=Tensor[(12, 5, 12), float32] */
}

def @func_8544(%var_8513: Tensor[(45), float64]) -> (Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), float64], Tensor[(45), float64]) {
  %757 = cast(%var_8513, dtype="float64") /* ty=Tensor[(45), float64] */;
  %758 = reshape(%757, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
  %759 = @func_2292(%758) /* ty=(Tensor[(3, 5, 3), float64],) */;
  %760 = @func_5191() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(4, 48), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(702), float32], Tensor[(12, 5, 12), float64]) */;
  %761 = %760.0;
  %762 = cast(%761, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %763 = @func_5381() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(45), float64], Tensor[(10, 3), uint16]) */;
  %764 = %759.0;
  %765 = atanh(%762) /* ty=Tensor[(12, 5, 12), float64] */;
  %766 = %763.2;
  (%764, %var_8513, %765, %766)
}

def @func_3783() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) {
  %767 = @func_3390() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %768 = @func_3390() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %769 = %767.0;
  %770 = %768.0;
  (%769, %770)
}

def @func_7025() -> (Tensor[(12, 5, 12), float64],) {
  %771 = @func_3920() /* ty=Tensor[(12, 5, 12), float64] */;
  (%771,)
}

def @func_9454() -> Tensor[(12, 5, 12), float64] {
  %772 = @func_6892() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32]) */;
  %772.1
}

def @func_4557() -> Tensor[(12, 5, 12), float64] {
  %773 = @func_3783() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */;
  %773.1
}

def @func_7052(%var_7041: Tensor[(12, 5, 12), float64]) -> Tensor[(12, 5, 12), float64] {
  %774 = @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */;
  %775 = %774.1;
  %776 = cast(%var_7041, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %777 = shape_of(%775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%775, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%778, %779) /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_8866(%var_8778: Tensor[(11, 13, 13), int8], %var_8779: Tensor[(11, 13, 13), int8], %var_8798: Tensor[(11, 13, 13), int8]) -> (Tensor[(11, 13, 13), bool], Tensor[(12, 5, 12), bool], Tensor[(330), int8], Tensor[(11, 13, 13), int32]) {
  %780 = cast(%var_8779, dtype="bool") /* ty=Tensor[(11, 13, 13), bool] */;
  %781 = shape_of(%var_8778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%var_8778, dtype="bool") /* ty=Tensor[(11, 13, 13), bool] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %784 = @func_7319() /* ty=(Tensor[(12, 5, 12), bool],) */;
  %785 = @func_8420() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(6, 11, 5), bool], Tensor[(330), int8]) */;
  %786 = cast(%var_8798, dtype="int64") /* ty=Tensor[(11, 13, 13), int64] */;
  %787 = shape_of(%var_8778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %788 = cast(%var_8778, dtype="int64") /* ty=Tensor[(11, 13, 13), int64] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %790 = subtract(%788, %789) /* ty=Tensor[(11, 13, 13), int64] */;
  %791 = cast(%790, dtype="int32") /* ty=Tensor[(11, 13, 13), int32] */;
  %792 = shape_of(%var_8779, dtype="int32") /* ty=Tensor[(3), int32] */;
  %793 = cast(%var_8779, dtype="int32") /* ty=Tensor[(11, 13, 13), int32] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %795 = less_equal(%782, %783) /* ty=Tensor[(11, 13, 13), bool] */;
  %796 = %784.0;
  %797 = %785.2;
  %798 = bitwise_and(%793, %794) /* ty=Tensor[(11, 13, 13), int32] */;
  (%795, %796, %797, %798)
}

def @func_4225() -> (Tensor[(12, 5, 12), float64], Tensor[(2, 13, 9), float64], Tensor[(234), float32], Tensor[(1, 96), float32], Tensor[(2, 8, 6), float32]) {
  %799 = cast(meta[relay.Constant][56] /* ty=Tensor[(234), float32] */, dtype="float32") /* ty=Tensor[(234), float32] */;
  %800 = reshape(%799, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float32] */;
  %801 = @func_3597(%800) /* ty=(Tensor[(2, 13, 9), int32], Tensor[(2, 13, 9), float64], Tensor[(14, 14, 5), float64], uint8, Tensor[(192), uint8], Tensor[(12, 2, 8), float32], Tensor[(2, 8, 6), float32], Tensor[(1, 96), float32]) */;
  %802 = %801.1;
  %803 = cast(%802, dtype="float32") /* ty=Tensor[(2, 13, 9), float32] */;
  %804 = reshape(%803, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float32] */;
  %805 = @func_3597(%804) /* ty=(Tensor[(2, 13, 9), int32], Tensor[(2, 13, 9), float64], Tensor[(14, 14, 5), float64], uint8, Tensor[(192), uint8], Tensor[(12, 2, 8), float32], Tensor[(2, 8, 6), float32], Tensor[(1, 96), float32]) */;
  %806 = %805.7;
  %807 = cast(%806, dtype="float32") /* ty=Tensor[(1, 96), float32] */;
  %808 = reshape(%807, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %809 = @func_2604(%808) /* ty=(Tensor[(2, 8, 6), float32],) */;
  %810 = @func_3629() /* ty=Tensor[(12, 5, 12), float64] */;
  %811 = %809.0;
  (%810, %802, meta[relay.Constant][56] /* ty=Tensor[(234), float32] */, %806, %811)
}

def @func_3693(%var_3657: Tensor[(12, 5, 12), float64], %var_3669: Tensor[(192), float32], %var_3670: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(3, 6), uint8], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(1170), float64]) {
  %812 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %813 = %812.0;
  %814 = cast(%var_3657, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %815 = shape_of(%813, dtype="int32") /* ty=Tensor[(3), int32] */;
  %816 = cast(%813, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %817 = dyn.reshape(%814, %815, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %818 = cast(meta[relay.Constant][57] /* ty=Tensor[(702), uint32] */, dtype="uint32") /* ty=Tensor[(702), uint32] */;
  %819 = cast(meta[relay.Constant][57] /* ty=Tensor[(702), uint32] */, dtype="uint32") /* ty=Tensor[(702), uint32] */;
  %820 = cast(%var_3669, dtype="float32") /* ty=Tensor[(192), float32] */;
  %821 = cast(%var_3670, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %822 = reshape(%818, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), uint32] */;
  %823 = reshape(%819, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), uint32] */;
  %824 = reshape(%820, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %825 = reshape(%821, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %826 = @func_3282(%822, %823, %824, %825) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 6), uint8], Tensor[(1170), float64], Tensor[(13, 6, 9), float32], Tensor[(13, 6, 9), int32]) */;
  %827 = divide(%816, %817) /* ty=Tensor[(12, 5, 12), float32] */;
  %828 = %826.2;
  (%827, %828, meta[relay.Constant][57] /* ty=Tensor[(702), uint32] */, %var_3669, %var_3670)
}

def @func_2199(%var_2164: uint16, %var_2165: Tensor[(1, 15, 2), uint16], %var_2196: Tensor[(4, 48), float32]) -> (Tensor[(1, 15, 2), uint16], Tensor[(192, 1), float32], Tensor[(208), float64], Tensor[(4, 48), float32]) {
  %829 = cast(%var_2164, dtype="uint16") /* ty=uint16 */;
  %830 = cast(%var_2165, dtype="uint16") /* ty=Tensor[(1, 15, 2), uint16] */;
  %831 = cast(meta[relay.Constant][58] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %832 = cast(%var_2196, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %833 = cast(meta[relay.Constant][58] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %834 = reshape(%831, newshape=[16, 13, 1]) /* ty=Tensor[(16, 13, 1), float64] */;
  %835 = reshape(%832, newshape=[192, 1]) /* ty=Tensor[(192, 1), float32] */;
  %836 = reshape(%833, newshape=[16, 13, 1]) /* ty=Tensor[(16, 13, 1), float64] */;
  %837 = @func_961(%834, %835, %836) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(192, 1), float32], Tensor[(16, 13, ?), float64]) */;
  %838 = add(%829, %830) /* ty=Tensor[(1, 15, 2), uint16] */;
  %839 = %837.1;
  (%838, %839, meta[relay.Constant][58] /* ty=Tensor[(208), float64] */, %var_2196)
}

def @func_6744() -> (Tensor[(12, 5, 12), float32],) {
  %840 = @func_5525() /* ty=Tensor[(12, 5, 12), float32] */;
  (%840,)
}

def @func_7713() -> (Tensor[(12, 5, 12), float64],) {
  %841 = @func_7025() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %842 = %841.0;
  (%842,)
}

def @func_8064() -> (Tensor[(12, 5, 12), float64], Tensor[(45), float64]) {
  %843 = @func_5381() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(45), float64], Tensor[(10, 3), uint16]) */;
  %844 = @func_3629() /* ty=Tensor[(12, 5, 12), float64] */;
  %845 = %843.2;
  (%844, %845)
}

def @func_2604(%var_2600: Tensor[(2, 8, 6), float32]) -> (Tensor[(2, 8, 6), float32],) {
  %846 = cast(%var_2600, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
  %847 = cos(%846) /* ty=Tensor[(2, 8, 6), float32] */;
  (%847,)
}

def @func_8315() -> (Tensor[(12, 5, 12), float64],) {
  %848 = @func_8064() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(45), float64]) */;
  %849 = %848.0;
  (%849,)
}

def @func_7377(%var_7371: Tensor[(117, 2), float32]) -> (Tensor[(12, 5, 12), float32], uint8, Tensor[(117, 2), float32]) {
  %850 = @func_6830() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %851 = cast(%var_7371, dtype="float32") /* ty=Tensor[(117, 2), float32] */;
  %852 = reshape(%851, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float32] */;
  %853 = @func_3597(%852) /* ty=(Tensor[(2, 13, 9), int32], Tensor[(2, 13, 9), float64], Tensor[(14, 14, 5), float64], uint8, Tensor[(192), uint8], Tensor[(12, 2, 8), float32], Tensor[(2, 8, 6), float32], Tensor[(1, 96), float32]) */;
  %854 = %850.0;
  %855 = %853.3;
  (%854, %855, %var_7371)
}

def @func_2292(%var_2288: Tensor[(3, 5, 3), float64]) -> (Tensor[(3, 5, 3), float64],) {
  %856 = cast(%var_2288, dtype="float64") /* ty=Tensor[(3, 5, 3), float64] */;
  %857 = acosh(%856) /* ty=Tensor[(3, 5, 3), float64] */;
  (%857,)
}

def @func_7824() -> (Tensor[(12, 5, 12), float32],) {
  %858 = @func_5075() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %859 = %858.0;
  (%859,)
}

def @func_7754(%var_7748: Tensor[(1260), float64]) -> (Tensor[(11, 13, 13), int8], Tensor[(448), uint64], Tensor[(1260), float64], Tensor[(12, 5, 12), float32]) {
  %860 = @func_7487() /* ty=(uint8, Tensor[(11, 13, 13), int8], Tensor[(13, 143), uint64]) */;
  %861 = cast(%var_7748, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %862 = cast(%var_7748, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %863 = reshape(%861, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float64] */;
  %864 = reshape(%862, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float64] */;
  %865 = @func_5473(%863, %864) /* ty=(Tensor[(14, 9, 10), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64]) */;
  %866 = @func_5075() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %867 = %860.1;
  %868 = %865.3;
  %869 = %866.0;
  (%867, %868, %var_7748, %869)
}

def @func_6941() -> Tensor[(12, 5, 12), float32] {
  %870 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %870.0
}

def @func_6733(%var_6721: Tensor[(6, 11, 5), int8]) -> Tensor[(6, 11, 5), bool] {
  %871 = cast(%var_6721, dtype="bool") /* ty=Tensor[(6, 11, 5), bool] */;
  %872 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(6, 11, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %873 = cast(meta[relay.Constant][59] /* ty=Tensor[(6, 11, 5), int8] */, dtype="bool") /* ty=Tensor[(6, 11, 5), bool] */;
  %874 = dyn.reshape(%871, %872, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %875 = equal(%873, %874) /* ty=Tensor[(6, 11, 5), bool] */;
  %876 = cast(%875, dtype="bool") /* ty=Tensor[(6, 11, 5), bool] */;
  %877 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(6, 11, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(meta[relay.Constant][59] /* ty=Tensor[(6, 11, 5), int8] */, dtype="bool") /* ty=Tensor[(6, 11, 5), bool] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%878, %879) /* ty=Tensor[(6, 11, 5), bool] */
}

def @func_8420() -> (Tensor[(12, 5, 12), float64], Tensor[(6, 11, 5), bool], Tensor[(330), int8]) {
  %880 = @func_7713() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %881 = cast(meta[relay.Constant][60] /* ty=Tensor[(330), int8] */, dtype="int8") /* ty=Tensor[(330), int8] */;
  %882 = reshape(%881, newshape=[6, 11, 5]) /* ty=Tensor[(6, 11, 5), int8] */;
  %883 = %880.0;
  %884 = @func_6733(%882) /* ty=Tensor[(6, 11, 5), bool] */;
  (%883, %884, meta[relay.Constant][60] /* ty=Tensor[(330), int8] */)
}

def @func_2679() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) {
  %885 = cast(meta[relay.Constant][61] /* ty=Tensor[(12, 5, 12), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %886 = cast(meta[relay.Constant][61] /* ty=Tensor[(12, 5, 12), float64] */, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %887 = cosh(%885) /* ty=Tensor[(12, 5, 12), float64] */;
  %888 = cos(%886) /* ty=Tensor[(12, 5, 12), float32] */;
  (%887, %888)
}

def @func_3355(%var_3316: Tensor[(1170), float64], %var_3322: Tensor[(7, 5), float64], %var_3349: Tensor[(52, 4), float64], %var_3350: Tensor[(192, 1), float32], %var_3351: float32, %var_3352: Tensor[(21), float32]) -> (Tensor[(12, 5, 12), float64], Tensor[(6, 15, 16), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(5, 7, 12), float32], Tensor[(7, 5), float64], Tensor[(420), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 2, 8), float32], Tensor[(1950, 1), int8], Tensor[(52, 4), float64], Tensor[(192, 1), float32], float32, Tensor[(21), float32]) {
  %889 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %890 = cast(%var_3316, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %891 = reshape(%890, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %892 = @func_1686(%891) /* ty=(Tensor[(6, 15, 16), float32], Tensor[(6, 13, 15), float64], Tensor[(1170), float64]) */;
  %893 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %894 = cast(%var_3322, dtype="float64") /* ty=Tensor[(7, 5), float64] */;
  %895 = cast(meta[relay.Constant][62] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %896 = reshape(%894, newshape=[5, 7, 1]) /* ty=Tensor[(5, 7, 1), float64] */;
  %897 = reshape(%895, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), float64] */;
  %898 = @func_2348(%896, %897) /* ty=(Tensor[(5, 7, 12), float32],) */;
  %899 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %900 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %901 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %902 = cast(meta[relay.Constant][63] /* ty=Tensor[(1950, 1), int8] */, dtype="int8") /* ty=Tensor[(1950, 1), int8] */;
  %903 = cast(%var_3349, dtype="float64") /* ty=Tensor[(52, 4), float64] */;
  %904 = cast(%var_3350, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %905 = cast(%var_3351, dtype="float32") /* ty=float32 */;
  %906 = cast(%var_3352, dtype="float32") /* ty=Tensor[(21), float32] */;
  %907 = cast(meta[relay.Constant][63] /* ty=Tensor[(1950, 1), int8] */, dtype="int8") /* ty=Tensor[(1950, 1), int8] */;
  %908 = cast(%var_3349, dtype="float32") /* ty=Tensor[(52, 4), float32] */;
  %909 = reshape(%902, newshape=[13, 15, 10]) /* ty=Tensor[(13, 15, 10), int8] */;
  %910 = reshape(%903, newshape=[104, 2]) /* ty=Tensor[(104, 2), float64] */;
  %911 = reshape(%904, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %912 = reshape(%905, newshape=[]) /* ty=float32 */;
  %913 = reshape(%906, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %914 = reshape(%907, newshape=[13, 15, 10]) /* ty=Tensor[(13, 15, 10), int8] */;
  %915 = reshape(%908, newshape=[104, 2]) /* ty=Tensor[(104, 2), float32] */;
  %916 = @func_1331(%909, %910, %911, %912, %913, %914, %915) /* ty=(Tensor[(16, 13, ?), float64], Tensor[(192), float32], Tensor[(3, ?, 7), bool], float32, Tensor[(21), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(13, 15, 10), int16], Tensor[(104, 2), uint32], Tensor[(12, 2, 8), float32], Tensor[(14, 14, 5), float64]) */;
  %917 = %889.0;
  %918 = %892.0;
  %919 = %893.0;
  %920 = %898.0;
  %921 = %899.1;
  %922 = %900.0;
  %923 = %901.0;
  %924 = %916.5;
  (%917, %918, %var_3316, %919, %920, %var_3322, meta[relay.Constant][62] /* ty=Tensor[(420), float64] */, %921, %922, %923, %924, meta[relay.Constant][63] /* ty=Tensor[(1950, 1), int8] */, %var_3349, %var_3350, %var_3351, %var_3352)
}

def @func_9194() -> (Tensor[(12, 5, 12), uint64],) {
  %925 = @func_3755() /* ty=Tensor[(12, 5, 12), uint64] */;
  (%925,)
}

def @func_9499() -> (Tensor[(12, 5, 12), float64], Tensor[(1260), float64], Tensor[(1260), float64]) {
  %926 = cast(meta[relay.Constant][64] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %927 = reshape(%926, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %928 = @func_7754(%927) /* ty=(Tensor[(11, 13, 13), int8], Tensor[(448), uint64], Tensor[(1260), float64], Tensor[(12, 5, 12), float32]) */;
  %929 = @func_3920() /* ty=Tensor[(12, 5, 12), float64] */;
  %930 = %928.2;
  (%929, %930, meta[relay.Constant][64] /* ty=Tensor[(1260), float64] */)
}

def @func_6892() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32]) {
  %931 = @func_6093() /* ty=Tensor[(12, 5, 12), float32] */;
  %932 = cast(%931, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %933 = @func_4095() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(1, 192), float32], Tensor[(12, 5, 12), float32]) */;
  %934 = @func_3920() /* ty=Tensor[(12, 5, 12), float64] */;
  %935 = sqrt(%932) /* ty=Tensor[(12, 5, 12), float64] */;
  %936 = %933.2;
  (%934, %935, %936)
}

def @func_2977() -> (Tensor[(12, 5, 12), float64],) {
  %937 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %938 = %937.0;
  (%938,)
}

def @func_6776(%var_6770: Tensor[(12, 5, 12), float32]) -> (Tensor[(12, 5, 12), bool], Tensor[(12, 5, 12), bool]) {
  %939 = @func_3430() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %940 = %939.0;
  %941 = cast(%var_6770, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
  %942 = shape_of(%940, dtype="int32") /* ty=Tensor[(3), int32] */;
  %943 = cast(%940, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
  %944 = dyn.reshape(%941, %942, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %945 = @func_4596() /* ty=Tensor[(12, 5, 12), bool] */;
  %946 = logical_or(%943, %944) /* ty=Tensor[(12, 5, 12), bool] */;
  (%945, %946)
}

def @func_8929() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), uint64]) {
  %947 = @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */;
  %948 = @func_5525() /* ty=Tensor[(12, 5, 12), float32] */;
  %949 = @func_6008() /* ty=Tensor[(12, 5, 12), float32] */;
  %950 = %947.0;
  (%948, %949, %950)
}

def @func_8047(%var_8030: Tensor[(5, 234), float64], %var_8040: Tensor[(3, 2, 15), float64]) -> (Tensor[(96), float32], Tensor[(5, 234), float64], Tensor[(192), float32], Tensor[(3, 2, 15), uint64]) {
  %951 = cast(%var_8030, dtype="float64") /* ty=Tensor[(5, 234), float64] */;
  %952 = cast(meta[relay.Constant][65] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %953 = reshape(%951, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %954 = reshape(%952, newshape=[8, 24]) /* ty=Tensor[(8, 24), float32] */;
  %955 = @func_6613(%953, %954) /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(208), float64], Tensor[(18), uint8], Tensor[(1170), float64], Tensor[(8, 24), bool], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(1950), int8], Tensor[(234, 3), uint32], Tensor[(96), float32], Tensor[(8, 24), bool]) */;
  %956 = cast(meta[relay.Constant][66] /* ty=Tensor[(3, 1, 15), float64] */, dtype="float64") /* ty=Tensor[(3, 1, 15), float64] */;
  %957 = cosh(%956) /* ty=Tensor[(3, 1, 15), float64] */;
  %958 = cast(%957, dtype="uint64") /* ty=Tensor[(3, 1, 15), uint64] */;
  %959 = cast(%var_8040, dtype="uint64") /* ty=Tensor[(3, 2, 15), uint64] */;
  %960 = %955.10;
  %961 = bitwise_or(%958, %959) /* ty=Tensor[(3, 2, 15), uint64] */;
  (%960, %var_8030, meta[relay.Constant][65] /* ty=Tensor[(192), float32] */, %961)
}

def @func_7297(%var_7226: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(1170), float64], Tensor[(192), float32], Tensor[(12, 5, 12), float32], Tensor[(14, 9, 10), float64], Tensor[(1260, 1170), float32], Tensor[(702), float32]) {
  %962 = @func_5687() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %963 = %962.0;
  %964 = cast(%963, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %965 = cast(meta[relay.Constant][67] /* ty=Tensor[(702), uint32] */, dtype="uint32") /* ty=Tensor[(702), uint32] */;
  %966 = cast(meta[relay.Constant][67] /* ty=Tensor[(702), uint32] */, dtype="uint32") /* ty=Tensor[(702), uint32] */;
  %967 = cast(meta[relay.Constant][68] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %968 = cast(%var_7226, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %969 = reshape(%965, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), uint32] */;
  %970 = reshape(%966, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), uint32] */;
  %971 = reshape(%967, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %972 = reshape(%968, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %973 = @func_3282(%969, %970, %971, %972) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 6), uint8], Tensor[(1170), float64], Tensor[(13, 6, 9), float32], Tensor[(13, 6, 9), int32]) */;
  %974 = cast(meta[relay.Constant][69] /* ty=Tensor[(1260, 1), float64] */, dtype="float64") /* ty=Tensor[(1260, 1), float64] */;
  %975 = cast(meta[relay.Constant][69] /* ty=Tensor[(1260, 1), float64] */, dtype="float64") /* ty=Tensor[(1260, 1), float64] */;
  %976 = reshape(%974, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float64] */;
  %977 = reshape(%975, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float64] */;
  %978 = @func_5473(%976, %977) /* ty=(Tensor[(14, 9, 10), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64]) */;
  %979 = cast(meta[relay.Constant][69] /* ty=Tensor[(1260, 1), float64] */, dtype="float32") /* ty=Tensor[(1260, 1), float32] */;
  %980 = cast(%var_7226, dtype="float32") /* ty=Tensor[(1170), float32] */;
  %981 = cast(meta[relay.Constant][67] /* ty=Tensor[(702), uint32] */, dtype="float32") /* ty=Tensor[(702), float32] */;
  %982 = asin(%964) /* ty=Tensor[(12, 5, 12), float64] */;
  %983 = %973.3;
  %984 = @func_6008() /* ty=Tensor[(12, 5, 12), float32] */;
  %985 = %978.0;
  %986 = multiply(%979, %980) /* ty=Tensor[(1260, 1170), float32] */;
  %987 = cos(%981) /* ty=Tensor[(702), float32] */;
  (%982, %983, meta[relay.Constant][68] /* ty=Tensor[(192), float32] */, %984, %985, %986, %987)
}

def @func_4322() -> (Tensor[(12, 5, 12), float32],) {
  %988 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %989 = %988.0;
  (%989,)
}

def @func_3878() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), int16], Tensor[(30), uint16]) {
  %990 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %991 = %990.0;
  %992 = cast(%991, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %993 = cast(meta[relay.Constant][70] /* ty=Tensor[(30), uint16] */, dtype="uint16") /* ty=Tensor[(30), uint16] */;
  %994 = reshape(%992, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
  %995 = reshape(%993, newshape=[30]) /* ty=Tensor[(30), uint16] */;
  %996 = @func_2915(%994, %995) /* ty=(Tensor[(12, 5, 12), int16], Tensor[(208), float64], Tensor[(30), uint16], Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), bool]) */;
  %997 = %996.0;
  (%991, %997, meta[relay.Constant][70] /* ty=Tensor[(30), uint16] */)
}

def @func_4199() -> (Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) {
  %998 = @func_3783() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */;
  %999 = @func_3755() /* ty=Tensor[(12, 5, 12), uint64] */;
  %1000 = %998.0;
  (%999, %1000)
}

def @func_1238(%var_1220: float32, %var_1221: Tensor[(3, 1, 7), float32]) -> (Tensor[(3, 1, 7), bool], Tensor[(3, ?, 7), bool]) {
  %1001 = cast(%var_1220, dtype="bool") /* ty=bool */;
  %1002 = cast(%var_1221, dtype="bool") /* ty=Tensor[(3, 1, 7), bool] */;
  %1003 = cast(%var_1220, dtype="int16") /* ty=int16 */;
  %1004 = cast(%var_1221, dtype="int16") /* ty=Tensor[(3, 1, 7), int16] */;
  %1005 = subtract(%1003, %1004) /* ty=Tensor[(3, 1, 7), int16] */;
  %1006 = cast(%var_1221, dtype="bool") /* ty=Tensor[(3, 1, 7), bool] */;
  %1007 = shape_of(%1005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1008 = cast(%1005, dtype="bool") /* ty=Tensor[(3, 1, 7), bool] */;
  %1009 = dyn.reshape(%1006, %1007, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1010 = not_equal(%1001, %1002) /* ty=Tensor[(3, 1, 7), bool] */;
  %1011 = less_equal(%1008, %1009) /* ty=Tensor[(3, ?, 7), bool] */;
  (%1010, %1011)
}

def @func_401(%var_389: Tensor[(12, 2, 8), float32]) -> (Tensor[(12, 2, 8), float32],) {
  %1012 = cast(%var_389, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %1013 = sinh(%1012) /* ty=Tensor[(12, 2, 8), float32] */;
  (%1013,)
}

def @func_736(%var_702: uint8, %var_703: Tensor[(12, 16, 1), uint8]) -> (Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(12, 16, 1), float64]) {
  %1014 = cast(%var_703, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %1015 = reshape(%1014, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1016 = @func_574(%1015) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
  %1017 = cast(%var_702, dtype="bool") /* ty=bool */;
  %1018 = cast(%var_703, dtype="bool") /* ty=Tensor[(12, 16, 1), bool] */;
  %1019 = greater(%1017, %1018) /* ty=Tensor[(12, 16, 1), bool] */;
  %1020 = cast(%1019, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
  %1021 = reshape(%1020, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %1022 = @func_401(%1021) /* ty=(Tensor[(12, 2, 8), float32],) */;
  %1023 = cast(%1019, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
  %1024 = %1016.0;
  %1025 = %1022.0;
  %1026 = cos(%1023) /* ty=Tensor[(12, 16, 1), float64] */;
  (%1024, %1025, %1026)
}

def @func_3920() -> Tensor[(12, 5, 12), float64] {
  %1027 = @func_3783() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */;
  %1027.1
}

def @func_574(%var_563: Tensor[(192), float32]) -> (Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) {
  %1028 = cast(meta[relay.Constant][71] /* ty=Tensor[(14, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 14, 5), float64] */;
  %1029 = cast(%var_563, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1030 = reshape(%1029, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %1031 = @func_401(%1030) /* ty=(Tensor[(12, 2, 8), float32],) */;
  %1032 = rsqrt(%1028) /* ty=Tensor[(14, 14, 5), float64] */;
  %1033 = %1031.0;
  (%1032, %1033, %var_563)
}

def @func_7767() -> (Tensor[(12, 5, 12), float64],) {
  %1034 = @func_6892() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32]) */;
  %1035 = %1034.1;
  (%1035,)
}

def @func_4596() -> Tensor[(12, 5, 12), bool] {
  %1036 = @func_3944() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %1037 = %1036.0;
  %1038 = cast(meta[relay.Constant][72] /* ty=Tensor[(12, 5, 12), float64] */, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
  %1039 = shape_of(%1037, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1040 = cast(%1037, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
  %1041 = dyn.reshape(%1038, %1039, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1040, %1041) /* ty=Tensor[(12, 5, 12), bool] */
}

def @func_5842(%var_5772: Tensor[(192), float32], %var_5773: Tensor[(1170), float64]) -> (Tensor[(130, 9), float32], Tensor[(192), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64], Tensor[(12, 5, 12), float32], Tensor[(1, 192), float32], Tensor[(2, 13, 16), uint64]) {
  %1042 = cast(%var_5772, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1043 = cast(%var_5773, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %1044 = reshape(%1042, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1045 = reshape(%1043, newshape=[130, 9]) /* ty=Tensor[(130, 9), float64] */;
  %1046 = @func_4625(%1044, %1045) /* ty=(Tensor[(12, 5, 12), float32], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(130, 9), float32]) */;
  %1047 = cast(meta[relay.Constant][73] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
  %1048 = reshape(%1047, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), uint64] */;
  %1049 = @func_4905() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float32]) */;
  %1050 = @func_4757() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(12, 2, 8), float32], uint8) */;
  %1051 = cast(meta[relay.Constant][74] /* ty=Tensor[(2, 13, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
  %1052 = asin(%1051) /* ty=Tensor[(2, 13, 16), float32] */;
  %1053 = cast(meta[relay.Constant][74] /* ty=Tensor[(2, 13, 16), float32] */, dtype="uint64") /* ty=Tensor[(2, 13, 16), uint64] */;
  %1054 = shape_of(%1052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1055 = cast(%1052, dtype="uint64") /* ty=Tensor[(2, 13, 16), uint64] */;
  %1056 = dyn.reshape(%1053, %1054, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1057 = %1046.3;
  %1058 = @func_3091() /* ty=Tensor[(12, 5, 12), float64] */;
  %1059 = @func_5089(%1048) /* ty=Tensor[(4, 14, 8), uint64] */;
  %1060 = %1049.0;
  %1061 = %1050.1;
  %1062 = subtract(%1055, %1056) /* ty=Tensor[(2, 13, 16), uint64] */;
  (%1057, %var_5772, %var_5773, %1058, %1059, meta[relay.Constant][73] /* ty=Tensor[(448), uint64] */, %1060, %1061, %1062)
}

def @func_6963(%var_6951: Tensor[(18), uint8], %var_6952: Tensor[(180, 1), uint8], %var_6953: Tensor[(192), float32], %var_6955: Tensor[(208), float64], %var_6957: Tensor[(1170), float64], %var_6961: Tensor[(1260), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(11, 13, 13), int8], Tensor[(1859, 1), int8], Tensor[(12, 2, 8), float32], Tensor[(18), uint8], Tensor[(180, 1), uint8], Tensor[(192), float32], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(1260), float64]) {
  %1063 = @func_5264() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64]) */;
  %1064 = cast(meta[relay.Constant][75] /* ty=Tensor[(1859, 1), int8] */, dtype="int8") /* ty=Tensor[(1859, 1), int8] */;
  %1065 = cast(meta[relay.Constant][75] /* ty=Tensor[(1859, 1), int8] */, dtype="int8") /* ty=Tensor[(1859, 1), int8] */;
  %1066 = reshape(%1064, newshape=[11, 13, 13]) /* ty=Tensor[(11, 13, 13), int8] */;
  %1067 = reshape(%1065, newshape=[11, 13, 13]) /* ty=Tensor[(11, 13, 13), int8] */;
  %1068 = cast(%var_6951, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %1069 = cast(%var_6952, dtype="uint8") /* ty=Tensor[(180, 1), uint8] */;
  %1070 = cast(%var_6953, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1071 = cast(meta[relay.Constant][76] /* ty=Tensor[(1950), int8] */, dtype="int8") /* ty=Tensor[(1950), int8] */;
  %1072 = cast(%var_6955, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1073 = cast(meta[relay.Constant][77] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %1074 = cast(%var_6957, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %1075 = reshape(%1068, newshape=[3, 1, 6]) /* ty=Tensor[(3, 1, 6), uint8] */;
  %1076 = reshape(%1069, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), uint8] */;
  %1077 = reshape(%1070, newshape=[8, 24]) /* ty=Tensor[(8, 24), float32] */;
  %1078 = reshape(%1071, newshape=[1950]) /* ty=Tensor[(1950), int8] */;
  %1079 = reshape(%1072, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %1080 = reshape(%1073, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %1081 = reshape(%1074, newshape=[5, 234]) /* ty=Tensor[(5, 234), float64] */;
  %1082 = @func_1816(%1075, %1076, %1077, %1078, %1079, %1080, %1081) /* ty=(Tensor[(3, 10, 6), uint8], Tensor[(14, 14, 5), float64], Tensor[(8, 24), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(1950), int8], Tensor[(208), float64], float32, Tensor[(21), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(6, 13, 15), float64], Tensor[(5, 234), float64]) */;
  %1083 = cast(%var_6961, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %1084 = reshape(%1083, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %1085 = @func_5984(%1084) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(1260), float64]) */;
  %1086 = %1063.0;
  %1087 = @func_2616(%1066, %1067) /* ty=Tensor[(11, 13, 13), int8] */;
  %1088 = %1082.4;
  %1089 = %1085.3;
  (%1086, %1087, meta[relay.Constant][75] /* ty=Tensor[(1859, 1), int8] */, %1088, %var_6951, %var_6952, %var_6953, meta[relay.Constant][76] /* ty=Tensor[(1950), int8] */, %var_6955, meta[relay.Constant][77] /* ty=Tensor[(21), float32] */, %var_6957, %1089, %var_6961)
}

def @func_5264() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64]) {
  %1090 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %1091 = @func_3390() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %1092 = %1091.0;
  %1093 = cast(%1092, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %1094 = %1090.0;
  %1095 = acos(%1093) /* ty=Tensor[(12, 5, 12), float64] */;
  (%1094, %1095)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4225() -> (Tensor[(12, 5, 12), float64], Tensor[(2, 13, 9), float64], Tensor[(234), float32], Tensor[(1, 96), float32], Tensor[(2, 8, 6), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(234), float32] */, dtype="float32") /* ty=Tensor[(234), float32] */;
  %1 = reshape(%0, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float32] */;
  %2 = @func_3597(%1) /* ty=(Tensor[(2, 13, 9), int32], Tensor[(2, 13, 9), float64], Tensor[(14, 14, 5), float64], uint8, Tensor[(192), uint8], Tensor[(12, 2, 8), float32], Tensor[(2, 8, 6), float32], Tensor[(1, 96), float32]) */;
  %3 = %2.1;
  %4 = cast(%3, dtype="float32") /* ty=Tensor[(2, 13, 9), float32] */;
  %5 = reshape(%4, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float32] */;
  %6 = @func_3597(%5) /* ty=(Tensor[(2, 13, 9), int32], Tensor[(2, 13, 9), float64], Tensor[(14, 14, 5), float64], uint8, Tensor[(192), uint8], Tensor[(12, 2, 8), float32], Tensor[(2, 8, 6), float32], Tensor[(1, 96), float32]) */;
  %7 = %6.7;
  %8 = cast(%7, dtype="float32") /* ty=Tensor[(1, 96), float32] */;
  %9 = reshape(%8, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %10 = @func_2604(%9) /* ty=(Tensor[(2, 8, 6), float32],) */;
  %11 = @func_3629() /* ty=Tensor[(12, 5, 12), float64] */;
  %12 = %10.0;
  (%11, %3, meta[relay.Constant][0] /* ty=Tensor[(234), float32] */, %7, %12)
}

def @func_3599(%var_3598: Tensor[(2, 13, 9), float32]) -> (Tensor[(2, 13, 9), int32], Tensor[(2, 13, 9), float64], Tensor[(14, 14, 5), float64], uint8, Tensor[(192), uint8], Tensor[(12, 2, 8), float32], Tensor[(2, 8, 6), float32], Tensor[(1, 96), float32]) {
  %41 = fn (%var_3541: Tensor[(2, 13, 9), float32]) -> (Tensor[(2, 13, 9), int32], Tensor[(2, 13, 9), float64], Tensor[(14, 14, 5), float64], uint8, Tensor[(192), uint8], Tensor[(12, 2, 8), float32], Tensor[(2, 8, 6), float32], Tensor[(1, 96), float32]) {
    %13 = cast(%var_3541, dtype="float32") /* ty=Tensor[(2, 13, 9), float32] */;
    %14 = asin(%13) /* ty=Tensor[(2, 13, 9), float32] */;
    %15 = cast(%var_3541, dtype="int32") /* ty=Tensor[(2, 13, 9), int32] */;
    %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
    %17 = cast(%14, dtype="int32") /* ty=Tensor[(2, 13, 9), int32] */;
    %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %19 = bitwise_xor(%17, %18) /* ty=Tensor[(2, 13, 9), int32] */;
    %20 = cast(%19, dtype="int32") /* ty=Tensor[(2, 13, 9), int32] */;
    %21 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
    %22 = cast(%14, dtype="int32") /* ty=Tensor[(2, 13, 9), int32] */;
    %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %24 = cast(%var_3541, dtype="float64") /* ty=Tensor[(2, 13, 9), float64] */;
    %25 = cast(meta[relay.Constant][1] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %26 = cast(meta[relay.Constant][2] /* ty=Tensor[(192), uint8] */, dtype="uint8") /* ty=Tensor[(192), uint8] */;
    %27 = reshape(%25, newshape=[]) /* ty=uint8 */;
    %28 = reshape(%26, newshape=[12, 16, 1]) /* ty=Tensor[(12, 16, 1), uint8] */;
    %29 = @func_736(%27, %28) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(12, 16, 1), float64]) */;
    %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(192), uint8] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %31 = reshape(%30, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
    %32 = @func_401(%31) /* ty=(Tensor[(12, 2, 8), float32],) */;
    %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 96), float32] */, dtype="float32") /* ty=Tensor[(1, 96), float32] */;
    %34 = reshape(%33, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
    %35 = @func_2604(%34) /* ty=(Tensor[(2, 8, 6), float32],) */;
    %36 = subtract(%22, %23) /* ty=Tensor[(2, 13, 9), int32] */;
    %37 = tan(%24) /* ty=Tensor[(2, 13, 9), float64] */;
    %38 = %29.0;
    %39 = %32.0;
    %40 = %35.0;
    (%36, %37, %38, meta[relay.Constant][1] /* ty=uint8 */, meta[relay.Constant][2] /* ty=Tensor[(192), uint8] */, %39, %40, meta[relay.Constant][3] /* ty=Tensor[(1, 96), float32] */)
  };
  %41(%var_3598) /* ty=(Tensor[(2, 13, 9), int32], Tensor[(2, 13, 9), float64], Tensor[(14, 14, 5), float64], uint8, Tensor[(192), uint8], Tensor[(12, 2, 8), float32], Tensor[(2, 8, 6), float32], Tensor[(1, 96), float32]) */
}

def @func_4527(%var_4475: Tensor[(12, 5, 12), float64], %var_4515: Tensor[(96), float32]) -> (Tensor[(6, 13, 15), float64], Tensor[(390, 3), float64], Tensor[(12, 5, 12), float32], Tensor[(1170), float64], Tensor[(234, 3), uint32], Tensor[(192), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(2, 8, 6), float32], Tensor[(234), float32]) {
  %42 = cast(meta[relay.Constant][4] /* ty=Tensor[(390, 3), float64] */, dtype="float64") /* ty=Tensor[(390, 3), float64] */;
  %43 = reshape(%42, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %44 = @func_1686(%43) /* ty=(Tensor[(6, 15, 16), float32], Tensor[(6, 13, 15), float64], Tensor[(1170), float64]) */;
  %45 = @func_3783() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */;
  %46 = %45.0;
  %47 = cast(%var_4475, dtype="uint8") /* ty=Tensor[(12, 5, 12), uint8] */;
  %48 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%46, dtype="uint8") /* ty=Tensor[(12, 5, 12), uint8] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %51 = maximum(%49, %50) /* ty=Tensor[(12, 5, 12), uint8] */;
  %52 = cast(%51, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %53 = shape_of(%46, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(%46, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %56 = cast(meta[relay.Constant][5] /* ty=Tensor[(234, 3), uint32] */, dtype="uint32") /* ty=Tensor[(234, 3), uint32] */;
  %57 = cast(meta[relay.Constant][5] /* ty=Tensor[(234, 3), uint32] */, dtype="uint32") /* ty=Tensor[(234, 3), uint32] */;
  %58 = cast(meta[relay.Constant][6] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %59 = %44.1;
  %60 = cast(%59, dtype="float64") /* ty=Tensor[(6, 13, 15), float64] */;
  %61 = reshape(%56, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), uint32] */;
  %62 = reshape(%57, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), uint32] */;
  %63 = reshape(%58, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %64 = reshape(%60, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %65 = @func_3282(%61, %62, %63, %64) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 6), uint8], Tensor[(1170), float64], Tensor[(13, 6, 9), float32], Tensor[(13, 6, 9), int32]) */;
  %66 = cast(%var_4515, dtype="float32") /* ty=Tensor[(96), float32] */;
  %67 = reshape(%66, newshape=[2, 8, 6]) /* ty=Tensor[(2, 8, 6), float32] */;
  %68 = @func_2604(%67) /* ty=(Tensor[(2, 8, 6), float32],) */;
  %69 = cast(meta[relay.Constant][7] /* ty=Tensor[(234), float32] */, dtype="float32") /* ty=Tensor[(234), float32] */;
  %70 = reshape(%69, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float32] */;
  %71 = @func_3597(%70) /* ty=(Tensor[(2, 13, 9), int32], Tensor[(2, 13, 9), float64], Tensor[(14, 14, 5), float64], uint8, Tensor[(192), uint8], Tensor[(12, 2, 8), float32], Tensor[(2, 8, 6), float32], Tensor[(1, 96), float32]) */;
  %72 = power(%54, %55) /* ty=Tensor[(12, 5, 12), float32] */;
  %73 = %65.3;
  %74 = %68.0;
  %75 = %71.6;
  (%59, meta[relay.Constant][4] /* ty=Tensor[(390, 3), float64] */, %72, %73, meta[relay.Constant][5] /* ty=Tensor[(234, 3), uint32] */, meta[relay.Constant][6] /* ty=Tensor[(192), float32] */, %74, %var_4515, %75, meta[relay.Constant][7] /* ty=Tensor[(234), float32] */)
}

def @func_6660(%var_6651: Tensor[(192), float32], %var_6652: Tensor[(18), uint8], %var_6655: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(1, 1170), float64], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), bool]) {
  %76 = @func_3944() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %77 = cast(%var_6651, dtype="float32") /* ty=Tensor[(192), float32] */;
  %78 = cast(%var_6652, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %79 = cast(meta[relay.Constant][8] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %80 = reshape(%77, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %81 = reshape(%78, newshape=[18]) /* ty=Tensor[(18), uint8] */;
  %82 = reshape(%79, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), float64] */;
  %83 = @func_3146(%80, %81, %82) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */;
  %84 = cast(%var_6655, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %85 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(1170), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %86 = cast(meta[relay.Constant][8] /* ty=Tensor[(1170), float64] */, dtype="bool") /* ty=Tensor[(1170), bool] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?), bool] */;
  %88 = %76.0;
  %89 = %83.9;
  %90 = logical_or(%86, %87) /* ty=Tensor[(1170), bool] */;
  (%88, %89, %var_6651, %var_6652, %90)
}

def @func_5139() -> (Tensor[(12, 5, 12), float64], Tensor[(2, 8, 6), float32]) {
  @func_5137() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 8, 6), float32]) */
}

def @func_5565(%var_5536: Tensor[(7, 3, 15), uint32], %var_5537: Tensor[(7, 3, 15), uint32]) -> Tensor[(7, 3, 15), uint32] {
  %91 = cast(%var_5537, dtype="uint32") /* ty=Tensor[(7, 3, 15), uint32] */;
  %92 = shape_of(%var_5536, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%var_5536, dtype="uint32") /* ty=Tensor[(7, 3, 15), uint32] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  subtract(%93, %94) /* ty=Tensor[(7, 3, 15), uint32] */
}

def @func_8931() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), uint64]) {
  @func_8929() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), uint64]) */
}

def @func_2348(%var_2325: Tensor[(5, 7, 1), float64], %var_2335: Tensor[(5, 7, 12), float64]) -> (Tensor[(5, 7, 12), float32],) {
  %95 = cast(%var_2325, dtype="float64") /* ty=Tensor[(5, 7, 1), float64] */;
  %96 = sin(%95) /* ty=Tensor[(5, 7, 1), float64] */;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(5, 7, 1), float32] */;
  %98 = cast(%var_2335, dtype="float32") /* ty=Tensor[(5, 7, 12), float32] */;
  %99 = floor_divide(%97, %98) /* ty=Tensor[(5, 7, 12), float32] */;
  (%99,)
}

def @func_5382() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(45), float64], Tensor[(10, 3), uint16]) {
  %110 = fn () -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(45), float64], Tensor[(10, 3), uint16]) {
    %100 = @func_5137() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 8, 6), float32]) */;
    %101 = @func_5264() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64]) */;
    %102 = %101.0;
    %103 = cast(%102, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
    %104 = cast(meta[relay.Constant][9] /* ty=Tensor[(10, 3), uint16] */, dtype="uint16") /* ty=Tensor[(10, 3), uint16] */;
    %105 = reshape(%103, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
    %106 = reshape(%104, newshape=[30]) /* ty=Tensor[(30), uint16] */;
    %107 = @func_2915(%105, %106) /* ty=(Tensor[(12, 5, 12), int16], Tensor[(208), float64], Tensor[(30), uint16], Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), bool]) */;
    %108 = %100.0;
    %109 = %107.4;
    (%108, %102, %109, meta[relay.Constant][9] /* ty=Tensor[(10, 3), uint16] */)
  };
  %110() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(45), float64], Tensor[(10, 3), uint16]) */
}

def @func_6735(%var_6734: Tensor[(6, 11, 5), int8]) -> Tensor[(6, 11, 5), bool] {
  %120 = fn (%var_6721: Tensor[(6, 11, 5), int8]) -> Tensor[(6, 11, 5), bool] {
    %111 = cast(%var_6721, dtype="bool") /* ty=Tensor[(6, 11, 5), bool] */;
    %112 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(6, 11, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %113 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 11, 5), int8] */, dtype="bool") /* ty=Tensor[(6, 11, 5), bool] */;
    %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %115 = equal(%113, %114) /* ty=Tensor[(6, 11, 5), bool] */;
    %116 = cast(%115, dtype="bool") /* ty=Tensor[(6, 11, 5), bool] */;
    %117 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(6, 11, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %118 = cast(meta[relay.Constant][10] /* ty=Tensor[(6, 11, 5), int8] */, dtype="bool") /* ty=Tensor[(6, 11, 5), bool] */;
    %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%118, %119) /* ty=Tensor[(6, 11, 5), bool] */
  };
  %120(%var_6734) /* ty=Tensor[(6, 11, 5), bool] */
}

def @func_8953(%var_8945: Tensor[(45), float64]) -> (Tensor[(4, 14, 14), uint32], Tensor[(12, 5, 12), float64], Tensor[(45), float64], Tensor[(12, 16, 1), float64], Tensor[(2, 104), uint8]) {
  %121 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 14, 14), uint32] */, dtype="uint32") /* ty=Tensor[(4, 14, 14), uint32] */;
  %122 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(4, 14, 14), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %123 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 14, 14), uint32] */, dtype="uint32") /* ty=Tensor[(4, 14, 14), uint32] */;
  %124 = dyn.reshape(%121, %122, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %125 = cast(%var_8945, dtype="float64") /* ty=Tensor[(45), float64] */;
  %126 = reshape(%125, newshape=[45]) /* ty=Tensor[(45), float64] */;
  %127 = @func_5887(%126) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(45), float64]) */;
  %128 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 104), uint8] */, dtype="uint8") /* ty=Tensor[(2, 104), uint8] */;
  %129 = reshape(%128, newshape=[4, 13, 4]) /* ty=Tensor[(4, 13, 4), uint8] */;
  %130 = @func_4737(%129) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 16, 1), float64], Tensor[(4, 48), uint8], Tensor[(4, 13, 4), bool]) */;
  %131 = logical_xor(%123, %124) /* ty=Tensor[(4, 14, 14), uint32] */;
  %132 = %127.0;
  %133 = %130.1;
  (%131, %132, %var_8945, %133, meta[relay.Constant][13] /* ty=Tensor[(2, 104), uint8] */)
}

def @func_7757(%var_7755: Tensor[(1260), float64]) -> (Tensor[(11, 13, 13), int8], Tensor[(448), uint64], Tensor[(1260), float64], Tensor[(12, 5, 12), float32]) {
  @func_7754(%var_7755) /* ty=(Tensor[(11, 13, 13), int8], Tensor[(448), uint64], Tensor[(1260), float64], Tensor[(12, 5, 12), float32]) */
}

def @func_4695() -> Tensor[(12, 5, 12), float64] {
  @func_4693() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_3432() -> (Tensor[(12, 5, 12), float32],) {
  @func_3430() /* ty=(Tensor[(12, 5, 12), float32],) */
}

def @func_3430() -> (Tensor[(12, 5, 12), float32],) {
  %134 = @func_3390() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %135 = %134.0;
  %136 = cast(%135, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %137 = log(%136) /* ty=Tensor[(12, 5, 12), float32] */;
  (%137,)
}

def @func_3878() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), int16], Tensor[(30), uint16]) {
  %138 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %139 = %138.0;
  %140 = cast(%139, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %141 = cast(meta[relay.Constant][14] /* ty=Tensor[(30), uint16] */, dtype="uint16") /* ty=Tensor[(30), uint16] */;
  %142 = reshape(%140, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
  %143 = reshape(%141, newshape=[30]) /* ty=Tensor[(30), uint16] */;
  %144 = @func_2915(%142, %143) /* ty=(Tensor[(12, 5, 12), int16], Tensor[(208), float64], Tensor[(30), uint16], Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), bool]) */;
  %145 = %144.0;
  (%139, %145, meta[relay.Constant][14] /* ty=Tensor[(30), uint16] */)
}

def @func_6831() -> (Tensor[(12, 5, 12), float32],) {
  %148 = fn () -> (Tensor[(12, 5, 12), float32],) {
    %146 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
    %147 = %146.0;
    (%147,)
  };
  %148() /* ty=(Tensor[(12, 5, 12), float32],) */
}

def @func_577(%var_575: Tensor[(192), float32]) -> (Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) {
  @func_574(%var_575) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */
}

def @func_8050(%var_8048: Tensor[(5, 234), float64], %var_8049: Tensor[(3, 2, 15), float64]) -> (Tensor[(96), float32], Tensor[(5, 234), float64], Tensor[(192), float32], Tensor[(3, 2, 15), uint64]) {
  %160 = fn (%var_8030: Tensor[(5, 234), float64], %var_8040: Tensor[(3, 2, 15), float64]) -> (Tensor[(96), float32], Tensor[(5, 234), float64], Tensor[(192), float32], Tensor[(3, 2, 15), uint64]) {
    %149 = cast(%var_8030, dtype="float64") /* ty=Tensor[(5, 234), float64] */;
    %150 = cast(meta[relay.Constant][15] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %151 = reshape(%149, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %152 = reshape(%150, newshape=[8, 24]) /* ty=Tensor[(8, 24), float32] */;
    %153 = @func_6613(%151, %152) /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(208), float64], Tensor[(18), uint8], Tensor[(1170), float64], Tensor[(8, 24), bool], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(1950), int8], Tensor[(234, 3), uint32], Tensor[(96), float32], Tensor[(8, 24), bool]) */;
    %154 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 1, 15), float64] */, dtype="float64") /* ty=Tensor[(3, 1, 15), float64] */;
    %155 = cosh(%154) /* ty=Tensor[(3, 1, 15), float64] */;
    %156 = cast(%155, dtype="uint64") /* ty=Tensor[(3, 1, 15), uint64] */;
    %157 = cast(%var_8040, dtype="uint64") /* ty=Tensor[(3, 2, 15), uint64] */;
    %158 = %153.10;
    %159 = bitwise_or(%156, %157) /* ty=Tensor[(3, 2, 15), uint64] */;
    (%158, %var_8030, meta[relay.Constant][15] /* ty=Tensor[(192), float32] */, %159)
  };
  %160(%var_8048, %var_8049) /* ty=(Tensor[(96), float32], Tensor[(5, 234), float64], Tensor[(192), float32], Tensor[(3, 2, 15), uint64]) */
}

def @func_4201() -> (Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) {
  @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */
}

def @func_7052(%var_7041: Tensor[(12, 5, 12), float64]) -> Tensor[(12, 5, 12), float64] {
  %161 = @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */;
  %162 = %161.1;
  %163 = cast(%var_7041, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %164 = shape_of(%162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%162, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%165, %166) /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_6745() -> (Tensor[(12, 5, 12), float32],) {
  %168 = fn () -> (Tensor[(12, 5, 12), float32],) {
    %167 = @func_5525() /* ty=Tensor[(12, 5, 12), float32] */;
    (%167,)
  };
  %168() /* ty=(Tensor[(12, 5, 12), float32],) */
}

def @func_5687() -> (Tensor[(12, 5, 12), float32],) {
  %169 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %170 = %169.0;
  (%170,)
}

def @func_2919(%var_2917: Tensor[(12, 5, 12), float64], %var_2918: Tensor[(30), uint16]) -> (Tensor[(12, 5, 12), int16], Tensor[(208), float64], Tensor[(30), uint16], Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), bool]) {
  @func_2915(%var_2917, %var_2918) /* ty=(Tensor[(12, 5, 12), int16], Tensor[(208), float64], Tensor[(30), uint16], Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), bool]) */
}

def @func_4097() -> (Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(1, 192), float32], Tensor[(12, 5, 12), float32]) {
  @func_4095() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(1, 192), float32], Tensor[(12, 5, 12), float32]) */
}

def @func_4906() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float32]) {
  %182 = fn () -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float32]) {
    %171 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
    %172 = @func_4225() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 13, 9), float64], Tensor[(234), float32], Tensor[(1, 96), float32], Tensor[(2, 8, 6), float32]) */;
    %173 = %172.0;
    %174 = cast(%173, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
    %175 = tan(%174) /* ty=Tensor[(12, 5, 12), float32] */;
    %176 = cast(%173, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
    %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
    %178 = cast(%175, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
    %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %180 = %171.0;
    %181 = floor_divide(%178, %179) /* ty=Tensor[(12, 5, 12), float32] */;
    (%180, %181)
  };
  %182() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float32]) */
}

def @func_7489() -> (uint8, Tensor[(11, 13, 13), int8], Tensor[(13, 143), uint64]) {
  @func_7487() /* ty=(uint8, Tensor[(11, 13, 13), int8], Tensor[(13, 143), uint64]) */
}

def @func_3187() -> (Tensor[(12, 5, 12), float32],) {
  @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */
}

def @func_4559() -> Tensor[(12, 5, 12), float64] {
  @func_4557() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_3185() -> (Tensor[(12, 5, 12), float32],) {
  %183 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %184 = %183.1;
  (%184,)
}

def @func_3288(%var_3284: Tensor[(13, 6, 9), uint32], %var_3285: Tensor[(13, 6, 9), uint32], %var_3286: Tensor[(192), float32], %var_3287: Tensor[(1170), float64]) -> (Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 6), uint8], Tensor[(1170), float64], Tensor[(13, 6, 9), float32], Tensor[(13, 6, 9), int32]) {
  @func_3282(%var_3284, %var_3285, %var_3286, %var_3287) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 6), uint8], Tensor[(1170), float64], Tensor[(13, 6, 9), float32], Tensor[(13, 6, 9), int32]) */
}

def @func_3631() -> Tensor[(12, 5, 12), float64] {
  @func_3629() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_6129() -> (Tensor[(12, 5, 12), float32],) {
  %187 = fn () -> (Tensor[(12, 5, 12), float32],) {
    %185 = @func_3430() /* ty=(Tensor[(12, 5, 12), float32],) */;
    %186 = %185.0;
    (%186,)
  };
  %187() /* ty=(Tensor[(12, 5, 12), float32],) */
}

def @func_5608() -> (Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(30), uint16]) {
  %188 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %189 = %188.0;
  %190 = cast(%189, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %191 = cast(meta[relay.Constant][17] /* ty=Tensor[(30), uint16] */, dtype="uint16") /* ty=Tensor[(30), uint16] */;
  %192 = reshape(%190, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
  %193 = reshape(%191, newshape=[30]) /* ty=Tensor[(30), uint16] */;
  %194 = @func_2915(%192, %193) /* ty=(Tensor[(12, 5, 12), int16], Tensor[(208), float64], Tensor[(30), uint16], Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), bool]) */;
  %195 = %194.3;
  (%189, %195, meta[relay.Constant][17] /* ty=Tensor[(30), uint16] */)
}

def @func_5689() -> (Tensor[(12, 5, 12), float32],) {
  @func_5687() /* ty=(Tensor[(12, 5, 12), float32],) */
}

def @func_6093() -> Tensor[(12, 5, 12), float32] {
  %196 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %196.0
}

def @func_7887(%var_7885: Tensor[(12, 5, 12), float32]) -> Tensor[(12, 5, 12), int64] {
  @func_7884(%var_7885) /* ty=Tensor[(12, 5, 12), int64] */
}

def @main(%var_9599: Tensor[(14, 16, 6), float64]) -> (Tensor[(14, 16, 6), float64],) {
  %197 = cast(%var_9599, dtype="float64") /* ty=Tensor[(14, 16, 6), float64] */;
  %198 = asinh(%197) /* ty=Tensor[(14, 16, 6), float64] */;
  (%198,)
}

def @func_6401(%var_6400: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float32], Tensor[(6, 15, 16), float32], Tensor[(1170), float64]) {
  %208 = fn (%var_6394: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float32], Tensor[(6, 15, 16), float32], Tensor[(1170), float64]) {
    %199 = @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */;
    %200 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
    %201 = cast(%var_6394, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %202 = reshape(%201, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %203 = @func_1686(%202) /* ty=(Tensor[(6, 15, 16), float32], Tensor[(6, 13, 15), float64], Tensor[(1170), float64]) */;
    %204 = %199.0;
    %205 = @func_3755() /* ty=Tensor[(12, 5, 12), uint64] */;
    %206 = %200.0;
    %207 = %203.0;
    (%204, %205, %206, %207, %var_6394)
  };
  %208(%var_6400) /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float32], Tensor[(6, 15, 16), float32], Tensor[(1170), float64]) */
}

def @func_4740(%var_4738: Tensor[(4, 13, 4), uint8]) -> (Tensor[(12, 5, 12), float64], Tensor[(12, 16, 1), float64], Tensor[(4, 48), uint8], Tensor[(4, 13, 4), bool]) {
  @func_4737(%var_4738) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 16, 1), float64], Tensor[(4, 48), uint8], Tensor[(4, 13, 4), bool]) */
}

def @func_7025() -> (Tensor[(12, 5, 12), float64],) {
  %209 = @func_3920() /* ty=Tensor[(12, 5, 12), float64] */;
  (%209,)
}

def @func_5525() -> Tensor[(12, 5, 12), float32] {
  %210 = @func_3430() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %210.0
}

def @func_5569(%var_5567: Tensor[(7, 3, 15), uint32], %var_5568: Tensor[(7, 3, 15), uint32]) -> Tensor[(7, 3, 15), uint32] {
  @func_5565(%var_5567, %var_5568) /* ty=Tensor[(7, 3, 15), uint32] */
}

def @func_8496(%var_8494: Tensor[(16, 2, 10), float32], %var_8495: Tensor[(1170), float64]) -> (Tensor[(16, 2, 10), float32], Tensor[(208), float64], Tensor[(1170), float64], Tensor[(48, 4), float32], Tensor[(18), uint8], Tensor[(7), float32]) {
  %223 = fn (%var_8461: Tensor[(16, 2, 10), float32], %var_8478: Tensor[(1170), float64]) -> (Tensor[(16, 2, 10), float32], Tensor[(208), float64], Tensor[(1170), float64], Tensor[(48, 4), float32], Tensor[(18), uint8], Tensor[(7), float32]) {
    %211 = cast(%var_8461, dtype="float32") /* ty=Tensor[(16, 2, 10), float32] */;
    %212 = cast(%var_8478, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %213 = cast(meta[relay.Constant][18] /* ty=Tensor[(48, 4), float32] */, dtype="float32") /* ty=Tensor[(48, 4), float32] */;
    %214 = reshape(%212, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %215 = reshape(%213, newshape=[8, 24]) /* ty=Tensor[(8, 24), float32] */;
    %216 = @func_6613(%214, %215) /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(208), float64], Tensor[(18), uint8], Tensor[(1170), float64], Tensor[(8, 24), bool], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(1950), int8], Tensor[(234, 3), uint32], Tensor[(96), float32], Tensor[(8, 24), bool]) */;
    %217 = cast(meta[relay.Constant][19] /* ty=Tensor[(7), float32] */, dtype="float32") /* ty=Tensor[(7), float32] */;
    %218 = reshape(%217, newshape=[7, 1, 1]) /* ty=Tensor[(7, 1, 1), float32] */;
    %219 = @func_7924(%218) /* ty=(Tensor[(7, 1, 1), float32], Tensor[(21), float32], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), float64]) */;
    %220 = log2(%211) /* ty=Tensor[(16, 2, 10), float32] */;
    %221 = %216.1;
    %222 = %219.3;
    (%220, %221, %var_8478, meta[relay.Constant][18] /* ty=Tensor[(48, 4), float32] */, %222, meta[relay.Constant][19] /* ty=Tensor[(7), float32] */)
  };
  %223(%var_8494, %var_8495) /* ty=(Tensor[(16, 2, 10), float32], Tensor[(208), float64], Tensor[(1170), float64], Tensor[(48, 4), float32], Tensor[(18), uint8], Tensor[(7), float32]) */
}

def @func_2294(%var_2293: Tensor[(3, 5, 3), float64]) -> (Tensor[(3, 5, 3), float64],) {
  %226 = fn (%var_2288: Tensor[(3, 5, 3), float64]) -> (Tensor[(3, 5, 3), float64],) {
    %224 = cast(%var_2288, dtype="float64") /* ty=Tensor[(3, 5, 3), float64] */;
    %225 = acosh(%224) /* ty=Tensor[(3, 5, 3), float64] */;
    (%225,)
  };
  %226(%var_2293) /* ty=(Tensor[(3, 5, 3), float64],) */
}

def @func_4933() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) {
  @func_4931() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */
}

def @func_4758() -> (Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(12, 2, 8), float32], uint8) {
  %236 = fn () -> (Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(12, 2, 8), float32], uint8) {
    %227 = @func_4095() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(1, 192), float32], Tensor[(12, 5, 12), float32]) */;
    %228 = cast(meta[relay.Constant][20] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %229 = %227.2;
    %230 = cast(%229, dtype="uint8") /* ty=Tensor[(1, 192), uint8] */;
    %231 = reshape(%228, newshape=[]) /* ty=uint8 */;
    %232 = reshape(%230, newshape=[12, 16, 1]) /* ty=Tensor[(12, 16, 1), uint8] */;
    %233 = @func_736(%231, %232) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(12, 16, 1), float64]) */;
    %234 = @func_3091() /* ty=Tensor[(12, 5, 12), float64] */;
    %235 = %233.1;
    (%234, %229, %235, meta[relay.Constant][20] /* ty=uint8 */)
  };
  %236() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(12, 2, 8), float32], uint8) */
}

def @func_6009() -> Tensor[(12, 5, 12), float32] {
  %238 = fn () -> Tensor[(12, 5, 12), float32] {
    %237 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
    %237.0
  };
  %238() /* ty=Tensor[(12, 5, 12), float32] */
}

def @func_9030() -> Tensor[(12, 5, 12), int16] {
  %240 = fn () -> Tensor[(12, 5, 12), int16] {
    %239 = @func_3878() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), int16], Tensor[(30), uint16]) */;
    %239.1
  };
  %240() /* ty=Tensor[(12, 5, 12), int16] */
}

def @func_5075() -> (Tensor[(12, 5, 12), float32],) {
  %241 = @func_4931() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %242 = %241.1;
  (%242,)
}

def @func_5137() -> (Tensor[(12, 5, 12), float64], Tensor[(2, 8, 6), float32]) {
  %243 = @func_4095() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(1, 192), float32], Tensor[(12, 5, 12), float32]) */;
  %244 = @func_4225() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 13, 9), float64], Tensor[(234), float32], Tensor[(1, 96), float32], Tensor[(2, 8, 6), float32]) */;
  %245 = %243.0;
  %246 = %244.4;
  (%245, %246)
}

def @func_7363() -> (Tensor[(3, 5, 3), float64], Tensor[(12, 5, 12), uint64]) {
  %247 = @func_5608() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(30), uint16]) */;
  %248 = @func_6066() /* ty=(Tensor[(12, 5, 12), uint64],) */;
  %249 = %247.1;
  %250 = %248.0;
  (%249, %250)
}

def @func_4945() -> Tensor[(12, 5, 12), float32] {
  %252 = fn () -> Tensor[(12, 5, 12), float32] {
    %251 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
    %251.0
  };
  %252() /* ty=Tensor[(12, 5, 12), float32] */
}

def @func_401(%var_389: Tensor[(12, 2, 8), float32]) -> (Tensor[(12, 2, 8), float32],) {
  %253 = cast(%var_389, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
  %254 = sinh(%253) /* ty=Tensor[(12, 2, 8), float32] */;
  (%254,)
}

def @func_1473(%var_1472: Tensor[(6, 13, 15), float64]) -> Tensor[(6, 13, 15), float64] {
  %256 = fn (%var_1461: Tensor[(6, 13, 15), float64]) -> Tensor[(6, 13, 15), float64] {
    %255 = cast(%var_1461, dtype="float64") /* ty=Tensor[(6, 13, 15), float64] */;
    sinh(%255) /* ty=Tensor[(6, 13, 15), float64] */
  };
  %256(%var_1472) /* ty=Tensor[(6, 13, 15), float64] */
}

def @func_3945() -> (Tensor[(12, 5, 12), float64],) {
  %258 = fn () -> (Tensor[(12, 5, 12), float64],) {
    %257 = @func_3920() /* ty=Tensor[(12, 5, 12), float64] */;
    (%257,)
  };
  %258() /* ty=(Tensor[(12, 5, 12), float64],) */
}

def @func_2784(%var_2781: Tensor[(12, 5, 12), float64], %var_2782: Tensor[(12, 5, 12), int32], %var_2783: Tensor[(30), uint16]) -> (Tensor[(12, 5, 12), uint64], Tensor[(208), float64], uint16, Tensor[(30), uint16], Tensor[(4, 48), float32], Tensor[(3, ?, 7), bool], Tensor[(21), float32]) {
  @func_2779(%var_2781, %var_2782, %var_2783) /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(208), float64], uint16, Tensor[(30), uint16], Tensor[(4, 48), float32], Tensor[(3, ?, 7), bool], Tensor[(21), float32]) */
}

def @func_8283(%var_8281: Tensor[(702), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(702), int64], Tensor[(12, 5, 12), float32], Tensor[(1950), int8], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), float64], Tensor[(702), bool]) {
  @func_8280(%var_8281) /* ty=(Tensor[(12, 5, 12), float32], Tensor[(702), int64], Tensor[(12, 5, 12), float32], Tensor[(1950), int8], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), float64], Tensor[(702), bool]) */
}

def @func_3390() -> (Tensor[(12, 5, 12), float64],) {
  %259 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %260 = %259.0;
  %261 = cast(%260, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %262 = atan(%261) /* ty=Tensor[(12, 5, 12), float64] */;
  (%262,)
}

def @func_7825() -> (Tensor[(12, 5, 12), float32],) {
  %265 = fn () -> (Tensor[(12, 5, 12), float32],) {
    %263 = @func_5075() /* ty=(Tensor[(12, 5, 12), float32],) */;
    %264 = %263.0;
    (%264,)
  };
  %265() /* ty=(Tensor[(12, 5, 12), float32],) */
}

def @func_4322() -> (Tensor[(12, 5, 12), float32],) {
  %266 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %267 = %266.0;
  (%267,)
}

def @func_3629() -> Tensor[(12, 5, 12), float64] {
  %268 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %268.0
}

def @func_7510(%var_7508: Tensor[(14, 192), float32]) -> (Tensor[(14, 192), int32], Tensor[(3, ?, 7), bool], float32, Tensor[(21), float32]) {
  @func_7507(%var_7508) /* ty=(Tensor[(14, 192), int32], Tensor[(3, ?, 7), bool], float32, Tensor[(21), float32]) */
}

def @func_9185() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(10, 3), uint16]) {
  @func_9183() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(10, 3), uint16]) */
}

def @func_1242(%var_1240: float32, %var_1241: Tensor[(3, 1, 7), float32]) -> (Tensor[(3, 1, 7), bool], Tensor[(3, ?, 7), bool]) {
  @func_1238(%var_1240, %var_1241) /* ty=(Tensor[(3, 1, 7), bool], Tensor[(3, ?, 7), bool]) */
}

def @func_5987(%var_5985: Tensor[(1260), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(1260), float64]) {
  @func_5984(%var_5985) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(1260), float64]) */
}

def @func_3784() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) {
  %273 = fn () -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) {
    %269 = @func_3390() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %270 = @func_3390() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %271 = %269.0;
    %272 = %270.0;
    (%271, %272)
  };
  %273() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */
}

def @func_8422() -> (Tensor[(12, 5, 12), float64], Tensor[(6, 11, 5), bool], Tensor[(330), int8]) {
  @func_8420() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(6, 11, 5), bool], Tensor[(330), int8]) */
}

def @func_4931() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) {
  %274 = @func_3783() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */;
  %275 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %276 = %274.0;
  %277 = %275.0;
  (%276, %277)
}

def @func_7128() -> (Tensor[(30), uint16], Tensor[(12, 5, 12), float32]) {
  @func_7126() /* ty=(Tensor[(30), uint16], Tensor[(12, 5, 12), float32]) */
}

def @func_2352(%var_2350: Tensor[(5, 7, 1), float64], %var_2351: Tensor[(5, 7, 12), float64]) -> (Tensor[(5, 7, 12), float32],) {
  @func_2348(%var_2350, %var_2351) /* ty=(Tensor[(5, 7, 12), float32],) */
}

def @func_6942() -> Tensor[(12, 5, 12), float32] {
  %279 = fn () -> Tensor[(12, 5, 12), float32] {
    %278 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
    %278.0
  };
  %279() /* ty=Tensor[(12, 5, 12), float32] */
}

def @func_9104() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) {
  @func_9102() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */
}

def @func_5889(%var_5888: Tensor[(45), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(45), float64]) {
  %285 = fn (%var_5870: Tensor[(45), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(45), float64]) {
    %280 = cast(%var_5870, dtype="float64") /* ty=Tensor[(45), float64] */;
    %281 = reshape(%280, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
    %282 = @func_2292(%281) /* ty=(Tensor[(3, 5, 3), float64],) */;
    %283 = @func_3920() /* ty=Tensor[(12, 5, 12), float64] */;
    %284 = %282.0;
    (%283, %284, %var_5870)
  };
  %285(%var_5888) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(45), float64]) */
}

def @func_8316() -> (Tensor[(12, 5, 12), float64],) {
  %288 = fn () -> (Tensor[(12, 5, 12), float64],) {
    %286 = @func_8064() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(45), float64]) */;
    %287 = %286.0;
    (%287,)
  };
  %288() /* ty=(Tensor[(12, 5, 12), float64],) */
}

def @func_8397() -> (Tensor[(702), float32],) {
  %291 = fn () -> (Tensor[(702), float32],) {
    %289 = @func_5191() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(4, 48), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(702), float32], Tensor[(12, 5, 12), float64]) */;
    %290 = %289.4;
    (%290,)
  };
  %291() /* ty=(Tensor[(702), float32],) */
}

def @func_4765() -> (Tensor[(12, 5, 12), float64],) {
  %292 = @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */;
  %293 = %292.1;
  (%293,)
}

def @func_6642(%var_6640: Tensor[(702), float32]) -> (Tensor[(702), uint16],) {
  @func_6639(%var_6640) /* ty=(Tensor[(702), uint16],) */
}

def @func_5077() -> (Tensor[(12, 5, 12), float32],) {
  @func_5075() /* ty=(Tensor[(12, 5, 12), float32],) */
}

def @func_1339(%var_1332: Tensor[(13, 15, 10), int8], %var_1333: Tensor[(104, 2), float64], %var_1334: Tensor[(192), float32], %var_1335: float32, %var_1336: Tensor[(21), float32], %var_1337: Tensor[(13, 15, 10), int8], %var_1338: Tensor[(104, 2), float32]) -> (Tensor[(16, 13, ?), float64], Tensor[(192), float32], Tensor[(3, ?, 7), bool], float32, Tensor[(21), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(13, 15, 10), int16], Tensor[(104, 2), uint32], Tensor[(12, 2, 8), float32], Tensor[(14, 14, 5), float64]) {
  %343 = fn (%var_1245: Tensor[(13, 15, 10), int8], %var_1252: Tensor[(104, 2), float64], %var_1253: Tensor[(192), float32], %var_1267: float32, %var_1268: Tensor[(21), float32], %var_1303: Tensor[(13, 15, 10), int8], %var_1322: Tensor[(104, 2), float32]) -> (Tensor[(16, 13, ?), float64], Tensor[(192), float32], Tensor[(3, ?, 7), bool], float32, Tensor[(21), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(13, 15, 10), int16], Tensor[(104, 2), uint32], Tensor[(12, 2, 8), float32], Tensor[(14, 14, 5), float64]) {
    %294 = cast(%var_1252, dtype="float64") /* ty=Tensor[(104, 2), float64] */;
    %295 = cast(%var_1253, dtype="float32") /* ty=Tensor[(192), float32] */;
    %296 = cast(%var_1252, dtype="float64") /* ty=Tensor[(104, 2), float64] */;
    %297 = reshape(%294, newshape=[16, 13, 1]) /* ty=Tensor[(16, 13, 1), float64] */;
    %298 = reshape(%295, newshape=[192, 1]) /* ty=Tensor[(192, 1), float32] */;
    %299 = reshape(%296, newshape=[16, 13, 1]) /* ty=Tensor[(16, 13, 1), float64] */;
    %300 = @func_961(%297, %298, %299) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(192, 1), float32], Tensor[(16, 13, ?), float64]) */;
    %301 = cast(%var_1267, dtype="float32") /* ty=float32 */;
    %302 = cast(%var_1268, dtype="float32") /* ty=Tensor[(21), float32] */;
    %303 = reshape(%301, newshape=[]) /* ty=float32 */;
    %304 = reshape(%302, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
    %305 = @func_1238(%303, %304) /* ty=(Tensor[(3, 1, 7), bool], Tensor[(3, ?, 7), bool]) */;
    %306 = cast(%var_1253, dtype="float32") /* ty=Tensor[(192), float32] */;
    %307 = reshape(%306, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
    %308 = @func_401(%307) /* ty=(Tensor[(12, 2, 8), float32],) */;
    %309 = cast(%var_1267, dtype="float32") /* ty=float32 */;
    %310 = %305.1;
    %311 = cast(%310, dtype="float32") /* ty=Tensor[(3, ?, 7), float32] */;
    %312 = reshape(%309, newshape=[]) /* ty=float32 */;
    %313 = reshape(%311, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
    %314 = @func_1238(%312, %313) /* ty=(Tensor[(3, 1, 7), bool], Tensor[(3, ?, 7), bool]) */;
    %315 = cast(%var_1245, dtype="int8") /* ty=Tensor[(13, 15, 10), int8] */;
    %316 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(13, 15, 10), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %317 = cast(meta[relay.Constant][21] /* ty=Tensor[(13, 15, 10), int8] */, dtype="int8") /* ty=Tensor[(13, 15, 10), int8] */;
    %318 = dyn.reshape(%315, %316, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %319 = maximum(%317, %318) /* ty=Tensor[(13, 15, 10), int8] */;
    %320 = cast(%var_1303, dtype="int16") /* ty=Tensor[(13, 15, 10), int16] */;
    %321 = shape_of(%319, dtype="int32") /* ty=Tensor[(3), int32] */;
    %322 = cast(%319, dtype="int16") /* ty=Tensor[(13, 15, 10), int16] */;
    %323 = dyn.reshape(%320, %321, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %324 = cast(%var_1252, dtype="float32") /* ty=Tensor[(104, 2), float32] */;
    %325 = sinh(%324) /* ty=Tensor[(104, 2), float32] */;
    %326 = cast(%var_1322, dtype="uint32") /* ty=Tensor[(104, 2), uint32] */;
    %327 = shape_of(%325, dtype="int32") /* ty=Tensor[(2), int32] */;
    %328 = cast(%325, dtype="uint32") /* ty=Tensor[(104, 2), uint32] */;
    %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %330 = cast(%var_1253, dtype="float32") /* ty=Tensor[(192), float32] */;
    %331 = reshape(%330, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
    %332 = @func_401(%331) /* ty=(Tensor[(12, 2, 8), float32],) */;
    %333 = cast(%var_1253, dtype="float32") /* ty=Tensor[(192), float32] */;
    %334 = reshape(%333, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %335 = @func_574(%334) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
    %336 = %300.2;
    %337 = %308.0;
    %338 = %314.1;
    %339 = right_shift(%322, %323) /* ty=Tensor[(13, 15, 10), int16] */;
    %340 = right_shift(%328, %329) /* ty=Tensor[(104, 2), uint32] */;
    %341 = %332.0;
    %342 = %335.0;
    (%336, %var_1253, %310, %var_1267, %var_1268, %337, %338, %339, %340, %341, %342)
  };
  %343(%var_1332, %var_1333, %var_1334, %var_1335, %var_1336, %var_1337, %var_1338) /* ty=(Tensor[(16, 13, ?), float64], Tensor[(192), float32], Tensor[(3, ?, 7), bool], float32, Tensor[(21), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(13, 15, 10), int16], Tensor[(104, 2), uint32], Tensor[(12, 2, 8), float32], Tensor[(14, 14, 5), float64]) */
}

def @func_7507(%var_7493: Tensor[(14, 192), float32]) -> (Tensor[(14, 192), int32], Tensor[(3, ?, 7), bool], float32, Tensor[(21), float32]) {
  %344 = @func_4095() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(1, 192), float32], Tensor[(12, 5, 12), float32]) */;
  %345 = %344.2;
  %346 = cast(%345, dtype="int32") /* ty=Tensor[(1, 192), int32] */;
  %347 = cast(%var_7493, dtype="int32") /* ty=Tensor[(14, 192), int32] */;
  %348 = cast(1.38046f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %349 = cast(meta[relay.Constant][22] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %350 = reshape(%348, newshape=[]) /* ty=float32 */;
  %351 = reshape(%349, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %352 = @func_1238(%350, %351) /* ty=(Tensor[(3, 1, 7), bool], Tensor[(3, ?, 7), bool]) */;
  %353 = left_shift(%346, %347) /* ty=Tensor[(14, 192), int32] */;
  %354 = %352.1;
  (%353, %354, 1.38046f /* ty=float32 */, meta[relay.Constant][22] /* ty=Tensor[(21), float32] */)
}

def @func_8447() -> (Tensor[(12, 5, 12), float64],) {
  @func_8445() /* ty=(Tensor[(12, 5, 12), float64],) */
}

def @func_574(%var_563: Tensor[(192), float32]) -> (Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) {
  %355 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 14, 5), float64] */, dtype="float64") /* ty=Tensor[(14, 14, 5), float64] */;
  %356 = cast(%var_563, dtype="float32") /* ty=Tensor[(192), float32] */;
  %357 = reshape(%356, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
  %358 = @func_401(%357) /* ty=(Tensor[(12, 2, 8), float32],) */;
  %359 = rsqrt(%355) /* ty=Tensor[(14, 14, 5), float64] */;
  %360 = %358.0;
  (%359, %360, %var_563)
}

def @func_4531(%var_4529: Tensor[(12, 5, 12), float64], %var_4530: Tensor[(96), float32]) -> (Tensor[(6, 13, 15), float64], Tensor[(390, 3), float64], Tensor[(12, 5, 12), float32], Tensor[(1170), float64], Tensor[(234, 3), uint32], Tensor[(192), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(2, 8, 6), float32], Tensor[(234), float32]) {
  @func_4527(%var_4529, %var_4530) /* ty=(Tensor[(6, 13, 15), float64], Tensor[(390, 3), float64], Tensor[(12, 5, 12), float32], Tensor[(1170), float64], Tensor[(234, 3), uint32], Tensor[(192), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(2, 8, 6), float32], Tensor[(234), float32]) */
}

def @func_2681() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) {
  @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */
}

def @func_5437() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) {
  %367 = fn () -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) {
    %361 = @func_5264() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64]) */;
    %362 = @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */;
    %363 = @func_3944() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %364 = %361.1;
    %365 = %362.1;
    %366 = %363.0;
    (%364, %365, %366)
  };
  %367() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */
}

def @func_5845(%var_5843: Tensor[(192), float32], %var_5844: Tensor[(1170), float64]) -> (Tensor[(130, 9), float32], Tensor[(192), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64], Tensor[(12, 5, 12), float32], Tensor[(1, 192), float32], Tensor[(2, 13, 16), uint64]) {
  %389 = fn (%var_5772: Tensor[(192), float32], %var_5773: Tensor[(1170), float64]) -> (Tensor[(130, 9), float32], Tensor[(192), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64], Tensor[(12, 5, 12), float32], Tensor[(1, 192), float32], Tensor[(2, 13, 16), uint64]) {
    %368 = cast(%var_5772, dtype="float32") /* ty=Tensor[(192), float32] */;
    %369 = cast(%var_5773, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %370 = reshape(%368, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %371 = reshape(%369, newshape=[130, 9]) /* ty=Tensor[(130, 9), float64] */;
    %372 = @func_4625(%370, %371) /* ty=(Tensor[(12, 5, 12), float32], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(130, 9), float32]) */;
    %373 = cast(meta[relay.Constant][24] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
    %374 = reshape(%373, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), uint64] */;
    %375 = @func_4905() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float32]) */;
    %376 = @func_4757() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(12, 2, 8), float32], uint8) */;
    %377 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 13, 16), float32] */, dtype="float32") /* ty=Tensor[(2, 13, 16), float32] */;
    %378 = asin(%377) /* ty=Tensor[(2, 13, 16), float32] */;
    %379 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 13, 16), float32] */, dtype="uint64") /* ty=Tensor[(2, 13, 16), uint64] */;
    %380 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
    %381 = cast(%378, dtype="uint64") /* ty=Tensor[(2, 13, 16), uint64] */;
    %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %383 = %372.3;
    %384 = @func_3091() /* ty=Tensor[(12, 5, 12), float64] */;
    %385 = @func_5089(%374) /* ty=Tensor[(4, 14, 8), uint64] */;
    %386 = %375.0;
    %387 = %376.1;
    %388 = subtract(%381, %382) /* ty=Tensor[(2, 13, 16), uint64] */;
    (%383, %var_5772, %var_5773, %384, %385, meta[relay.Constant][24] /* ty=Tensor[(448), uint64] */, %386, %387, %388)
  };
  %389(%var_5843, %var_5844) /* ty=(Tensor[(130, 9), float32], Tensor[(192), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64], Tensor[(12, 5, 12), float32], Tensor[(1, 192), float32], Tensor[(2, 13, 16), uint64]) */
}

def @func_7927(%var_7925: Tensor[(7, 1, 1), float32]) -> (Tensor[(7, 1, 1), float32], Tensor[(21), float32], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), float64]) {
  @func_7924(%var_7925) /* ty=(Tensor[(7, 1, 1), float32], Tensor[(21), float32], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), float64]) */
}

def @func_9195() -> (Tensor[(12, 5, 12), uint64],) {
  %391 = fn () -> (Tensor[(12, 5, 12), uint64],) {
    %390 = @func_3755() /* ty=Tensor[(12, 5, 12), uint64] */;
    (%390,)
  };
  %391() /* ty=(Tensor[(12, 5, 12), uint64],) */
}

def @func_4006(%var_4005: Tensor[(192), float32]) -> (Tensor[(12, 5, 12), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(12, 5, 12), float64]) {
  %400 = fn (%var_3971: Tensor[(192), float32]) -> (Tensor[(12, 5, 12), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(12, 5, 12), float64]) {
    %392 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
    %393 = cast(%var_3971, dtype="float32") /* ty=Tensor[(192), float32] */;
    %394 = reshape(%393, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %395 = @func_574(%394) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
    %396 = @func_3390() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %397 = %392.0;
    %398 = %395.2;
    %399 = %396.0;
    (%397, %398, %var_3971, %399)
  };
  %400(%var_4005) /* ty=(Tensor[(12, 5, 12), float32], Tensor[(192), float32], Tensor[(192), float32], Tensor[(12, 5, 12), float64]) */
}

def @func_4233() -> (Tensor[(12, 5, 12), uint64],) {
  %402 = fn () -> (Tensor[(12, 5, 12), uint64],) {
    %401 = @func_3755() /* ty=Tensor[(12, 5, 12), uint64] */;
    (%401,)
  };
  %402() /* ty=(Tensor[(12, 5, 12), uint64],) */
}

def @func_7380(%var_7378: Tensor[(117, 2), float32]) -> (Tensor[(12, 5, 12), float32], uint8, Tensor[(117, 2), float32]) {
  @func_7377(%var_7378) /* ty=(Tensor[(12, 5, 12), float32], uint8, Tensor[(117, 2), float32]) */
}

def @func_9183() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(10, 3), uint16]) {
  %403 = @func_3430() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %404 = @func_8445() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %405 = @func_5381() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(45), float64], Tensor[(10, 3), uint16]) */;
  %406 = %403.0;
  %407 = %404.0;
  %408 = %405.3;
  (%406, %407, %408)
}

def @func_9377(%var_9374: Tensor[(104, 2), uint8], %var_9375: Tensor[(18, 1), uint8], %var_9376: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(104, 2), uint16], Tensor[(208), float64], Tensor[(18, 1), uint8], Tensor[(21), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(1950), float32]) {
  %433 = fn (%var_9329: Tensor[(104, 2), uint8], %var_9347: Tensor[(18, 1), uint8], %var_9350: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(104, 2), uint16], Tensor[(208), float64], Tensor[(18, 1), uint8], Tensor[(21), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(1950), float32]) {
    %409 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
    %410 = @func_8659() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(104, 2), uint8]) */;
    %411 = %410.2;
    %412 = cast(%var_9329, dtype="uint16") /* ty=Tensor[(104, 2), uint16] */;
    %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(2), int32] */;
    %414 = cast(%411, dtype="uint16") /* ty=Tensor[(104, 2), uint16] */;
    %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %416 = cast(%var_9347, dtype="uint8") /* ty=Tensor[(18, 1), uint8] */;
    %417 = cast(meta[relay.Constant][26] /* ty=Tensor[(1950), int8] */, dtype="int8") /* ty=Tensor[(1950), int8] */;
    %418 = cast(%411, dtype="float64") /* ty=Tensor[(104, 2), float64] */;
    %419 = cast(meta[relay.Constant][27] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
    %420 = cast(%var_9350, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %421 = reshape(%416, newshape=[18]) /* ty=Tensor[(18), uint8] */;
    %422 = reshape(%417, newshape=[650, 3]) /* ty=Tensor[(650, 3), int8] */;
    %423 = reshape(%418, newshape=[208]) /* ty=Tensor[(208), float64] */;
    %424 = reshape(%419, newshape=[21, 1]) /* ty=Tensor[(21, 1), float32] */;
    %425 = reshape(%420, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %426 = @func_4299(%421, %422, %423, %424, %425) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(192), float32], Tensor[(14, 14, 5), bool], Tensor[(6, 13, 15), float64], Tensor[(18), uint8], Tensor[(180, 1), uint8], Tensor[(650, 3), int8], Tensor[(208), float64], Tensor[(21, 1), float32], Tensor[(1170), float64]) */;
    %427 = cast(meta[relay.Constant][26] /* ty=Tensor[(1950), int8] */, dtype="float32") /* ty=Tensor[(1950), float32] */;
    %428 = %409.0;
    %429 = add(%414, %415) /* ty=Tensor[(104, 2), uint16] */;
    %430 = %426.7;
    %431 = @func_6093() /* ty=Tensor[(12, 5, 12), float32] */;
    %432 = log(%427) /* ty=Tensor[(1950), float32] */;
    (%428, %429, %430, %var_9347, meta[relay.Constant][27] /* ty=Tensor[(21), float32] */, %var_9350, %431, %432)
  };
  %433(%var_9374, %var_9375, %var_9376) /* ty=(Tensor[(12, 5, 12), float32], Tensor[(104, 2), uint16], Tensor[(208), float64], Tensor[(18, 1), uint8], Tensor[(21), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(1950), float32]) */
}

def @func_7768() -> (Tensor[(12, 5, 12), float64],) {
  %436 = fn () -> (Tensor[(12, 5, 12), float64],) {
    %434 = @func_6892() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32]) */;
    %435 = %434.1;
    (%435,)
  };
  %436() /* ty=(Tensor[(12, 5, 12), float64],) */
}

def @func_7126() -> (Tensor[(30), uint16], Tensor[(12, 5, 12), float32]) {
  %437 = @func_5608() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(30), uint16]) */;
  %438 = @func_6830() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %439 = %437.2;
  %440 = %438.0;
  (%439, %440)
}

def @func_8420() -> (Tensor[(12, 5, 12), float64], Tensor[(6, 11, 5), bool], Tensor[(330), int8]) {
  %441 = @func_7713() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %442 = cast(meta[relay.Constant][28] /* ty=Tensor[(330), int8] */, dtype="int8") /* ty=Tensor[(330), int8] */;
  %443 = reshape(%442, newshape=[6, 11, 5]) /* ty=Tensor[(6, 11, 5), int8] */;
  %444 = %441.0;
  %445 = @func_6733(%443) /* ty=Tensor[(6, 11, 5), bool] */;
  (%444, %445, meta[relay.Constant][28] /* ty=Tensor[(330), int8] */)
}

def @func_5280() -> Tensor[(2, 8, 6), float32] {
  %446 = @func_5137() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 8, 6), float32]) */;
  %446.1
}

def @func_6778(%var_6777: Tensor[(12, 5, 12), float32]) -> (Tensor[(12, 5, 12), bool], Tensor[(12, 5, 12), bool]) {
  %455 = fn (%var_6770: Tensor[(12, 5, 12), float32]) -> (Tensor[(12, 5, 12), bool], Tensor[(12, 5, 12), bool]) {
    %447 = @func_3430() /* ty=(Tensor[(12, 5, 12), float32],) */;
    %448 = %447.0;
    %449 = cast(%var_6770, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
    %450 = shape_of(%448, dtype="int32") /* ty=Tensor[(3), int32] */;
    %451 = cast(%448, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
    %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %453 = @func_4596() /* ty=Tensor[(12, 5, 12), bool] */;
    %454 = logical_or(%451, %452) /* ty=Tensor[(12, 5, 12), bool] */;
    (%453, %454)
  };
  %455(%var_6777) /* ty=(Tensor[(12, 5, 12), bool], Tensor[(12, 5, 12), bool]) */
}

def @func_5091(%var_5090: Tensor[(4, 14, 8), uint64]) -> Tensor[(4, 14, 8), uint64] {
  %460 = fn (%var_5082: Tensor[(4, 14, 8), uint64]) -> Tensor[(4, 14, 8), uint64] {
    %456 = cast(meta[relay.Constant][29] /* ty=Tensor[(4, 14, 8), uint64] */, dtype="uint64") /* ty=Tensor[(4, 14, 8), uint64] */;
    %457 = shape_of(%var_5082, dtype="int32") /* ty=Tensor[(3), int32] */;
    %458 = cast(%var_5082, dtype="uint64") /* ty=Tensor[(4, 14, 8), uint64] */;
    %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    maximum(%458, %459) /* ty=Tensor[(4, 14, 8), uint64] */
  };
  %460(%var_5090) /* ty=Tensor[(4, 14, 8), uint64] */
}

def @func_3282(%var_3213: Tensor[(13, 6, 9), uint32], %var_3214: Tensor[(13, 6, 9), uint32], %var_3241: Tensor[(192), float32], %var_3243: Tensor[(1170), float64]) -> (Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 6), uint8], Tensor[(1170), float64], Tensor[(13, 6, 9), float32], Tensor[(13, 6, 9), int32]) {
  %461 = cast(%var_3241, dtype="float32") /* ty=Tensor[(192), float32] */;
  %462 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 6), uint8] */, dtype="uint8") /* ty=Tensor[(3, 6), uint8] */;
  %463 = cast(%var_3243, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %464 = reshape(%461, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %465 = reshape(%462, newshape=[18]) /* ty=Tensor[(18), uint8] */;
  %466 = reshape(%463, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), float64] */;
  %467 = @func_3146(%464, %465, %466) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */;
  %468 = cast(%var_3213, dtype="float32") /* ty=Tensor[(13, 6, 9), float32] */;
  %469 = log10(%468) /* ty=Tensor[(13, 6, 9), float32] */;
  %470 = cast(%469, dtype="float32") /* ty=Tensor[(13, 6, 9), float32] */;
  %471 = cast(%var_3214, dtype="uint32") /* ty=Tensor[(13, 6, 9), uint32] */;
  %472 = shape_of(%var_3213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %473 = cast(%var_3213, dtype="uint32") /* ty=Tensor[(13, 6, 9), uint32] */;
  %474 = dyn.reshape(%471, %472, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %475 = bitwise_xor(%473, %474) /* ty=Tensor[(13, 6, 9), uint32] */;
  %476 = cast(%475, dtype="int32") /* ty=Tensor[(13, 6, 9), int32] */;
  %477 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %478 = cast(%469, dtype="int32") /* ty=Tensor[(13, 6, 9), int32] */;
  %479 = dyn.reshape(%476, %477, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %480 = %467.1;
  %481 = acos(%470) /* ty=Tensor[(13, 6, 9), float32] */;
  %482 = right_shift(%478, %479) /* ty=Tensor[(13, 6, 9), int32] */;
  (%480, %var_3241, meta[relay.Constant][30] /* ty=Tensor[(3, 6), uint8] */, %var_3243, %481, %482)
}

def @func_4557() -> Tensor[(12, 5, 12), float64] {
  %483 = @func_3783() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */;
  %483.1
}

def @func_4199() -> (Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) {
  %484 = @func_3783() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */;
  %485 = @func_3755() /* ty=Tensor[(12, 5, 12), uint64] */;
  %486 = %484.0;
  (%485, %486)
}

def @func_9455() -> Tensor[(12, 5, 12), float64] {
  %488 = fn () -> Tensor[(12, 5, 12), float64] {
    %487 = @func_6892() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32]) */;
    %487.1
  };
  %488() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_9545() -> (Tensor[(45), float64], Tensor[(3, 5, 3), float64]) {
  %495 = fn () -> (Tensor[(45), float64], Tensor[(3, 5, 3), float64]) {
    %489 = @func_9015() /* ty=(Tensor[(45), float64], Tensor[(12, 5, 12), float32]) */;
    %490 = %489.0;
    %491 = cast(%490, dtype="float64") /* ty=Tensor[(45), float64] */;
    %492 = reshape(%491, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
    %493 = @func_2292(%492) /* ty=(Tensor[(3, 5, 3), float64],) */;
    %494 = %493.0;
    (%490, %494)
  };
  %495() /* ty=(Tensor[(45), float64], Tensor[(3, 5, 3), float64]) */
}

def @func_4767() -> (Tensor[(12, 5, 12), float64],) {
  @func_4765() /* ty=(Tensor[(12, 5, 12), float64],) */
}

def @func_3880() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), int16], Tensor[(30), uint16]) {
  @func_3878() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), int16], Tensor[(30), uint16]) */
}

def @func_2915(%var_2894: Tensor[(12, 5, 12), float64], %var_2902: Tensor[(30), uint16]) -> (Tensor[(12, 5, 12), int16], Tensor[(208), float64], Tensor[(30), uint16], Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), bool]) {
  %496 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %497 = %496.0;
  %498 = cast(%var_2894, dtype="int16") /* ty=Tensor[(12, 5, 12), int16] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%497, dtype="int16") /* ty=Tensor[(12, 5, 12), int16] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %502 = cast(%497, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %503 = cast(%var_2894, dtype="int32") /* ty=Tensor[(12, 5, 12), int32] */;
  %504 = cast(%var_2902, dtype="uint16") /* ty=Tensor[(30), uint16] */;
  %505 = reshape(%502, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
  %506 = reshape(%503, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), int32] */;
  %507 = reshape(%504, newshape=[30]) /* ty=Tensor[(30), uint16] */;
  %508 = @func_2779(%505, %506, %507) /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(208), float64], uint16, Tensor[(30), uint16], Tensor[(4, 48), float32], Tensor[(3, ?, 7), bool], Tensor[(21), float32]) */;
  %509 = cast(meta[relay.Constant][31] /* ty=Tensor[(45), float64] */, dtype="float64") /* ty=Tensor[(45), float64] */;
  %510 = reshape(%509, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
  %511 = @func_2292(%510) /* ty=(Tensor[(3, 5, 3), float64],) */;
  %512 = cast(%var_2894, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
  %513 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %514 = cast(%497, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %516 = subtract(%500, %501) /* ty=Tensor[(12, 5, 12), int16] */;
  %517 = %508.1;
  %518 = %511.0;
  %519 = equal(%514, %515) /* ty=Tensor[(12, 5, 12), bool] */;
  (%516, %517, %var_2902, %518, meta[relay.Constant][31] /* ty=Tensor[(45), float64] */, %519)
}

def @func_5264() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64]) {
  %520 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %521 = @func_3390() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %522 = %521.0;
  %523 = cast(%522, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %524 = %520.0;
  %525 = acos(%523) /* ty=Tensor[(12, 5, 12), float64] */;
  (%524, %525)
}

def @func_3854(%var_3853: Tensor[(14, 13, 4), float32]) -> (Tensor[(14, 13, 4), float32], Tensor[(12, 5, 12), float32]) {
  %533 = fn (%var_3814: Tensor[(14, 13, 4), float32]) -> (Tensor[(14, 13, 4), float32], Tensor[(12, 5, 12), float32]) {
    %526 = cast(%var_3814, dtype="float32") /* ty=Tensor[(14, 13, 4), float32] */;
    %527 = tan(%526) /* ty=Tensor[(14, 13, 4), float32] */;
    %528 = cast(%527, dtype="float32") /* ty=Tensor[(14, 13, 4), float32] */;
    %529 = @func_3755() /* ty=Tensor[(12, 5, 12), uint64] */;
    %530 = cast(%529, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
    %531 = asinh(%528) /* ty=Tensor[(14, 13, 4), float32] */;
    %532 = log10(%530) /* ty=Tensor[(12, 5, 12), float32] */;
    (%531, %532)
  };
  %533(%var_3853) /* ty=(Tensor[(14, 13, 4), float32], Tensor[(12, 5, 12), float32]) */
}

def @func_965(%var_962: Tensor[(16, 13, 1), float64], %var_963: Tensor[(192, 1), float32], %var_964: Tensor[(16, 13, 1), float64]) -> (Tensor[(12, 2, 8), float32], Tensor[(192, 1), float32], Tensor[(16, 13, ?), float64]) {
  %550 = fn (%var_931: Tensor[(16, 13, 1), float64], %var_946: Tensor[(192, 1), float32], %var_949: Tensor[(16, 13, 1), float64]) -> (Tensor[(12, 2, 8), float32], Tensor[(192, 1), float32], Tensor[(16, 13, ?), float64]) {
    %534 = cast(%var_946, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
    %535 = reshape(%534, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
    %536 = @func_401(%535) /* ty=(Tensor[(12, 2, 8), float32],) */;
    %537 = cast(%var_931, dtype="float64") /* ty=Tensor[(16, 13, 1), float64] */;
    %538 = cosh(%537) /* ty=Tensor[(16, 13, 1), float64] */;
    %539 = cast(%var_949, dtype="float64") /* ty=Tensor[(16, 13, 1), float64] */;
    %540 = shape_of(%538, dtype="int32") /* ty=Tensor[(3), int32] */;
    %541 = cast(%538, dtype="float64") /* ty=Tensor[(16, 13, 1), float64] */;
    %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %543 = floor_mod(%541, %542) /* ty=Tensor[(16, 13, ?), float64] */;
    %544 = cast(%var_949, dtype="float64") /* ty=Tensor[(16, 13, 1), float64] */;
    %545 = shape_of(%543, dtype="int32") /* ty=Tensor[(3), int32] */;
    %546 = cast(%543, dtype="float64") /* ty=Tensor[(16, 13, ?), float64] */;
    %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %548 = %536.0;
    %549 = floor_divide(%546, %547) /* ty=Tensor[(16, 13, ?), float64] */;
    (%548, %var_946, %549)
  };
  %550(%var_962, %var_963, %var_964) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(192, 1), float32], Tensor[(16, 13, ?), float64]) */
}

def @func_4306(%var_4301: Tensor[(18), uint8], %var_4302: Tensor[(650, 3), int8], %var_4303: Tensor[(208), float64], %var_4304: Tensor[(21, 1), float32], %var_4305: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(192), float32], Tensor[(14, 14, 5), bool], Tensor[(6, 13, 15), float64], Tensor[(18), uint8], Tensor[(180, 1), uint8], Tensor[(650, 3), int8], Tensor[(208), float64], Tensor[(21, 1), float32], Tensor[(1170), float64]) {
  @func_4299(%var_4301, %var_4302, %var_4303, %var_4304, %var_4305) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(192), float32], Tensor[(14, 14, 5), bool], Tensor[(6, 13, 15), float64], Tensor[(18), uint8], Tensor[(180, 1), uint8], Tensor[(650, 3), int8], Tensor[(208), float64], Tensor[(21, 1), float32], Tensor[(1170), float64]) */
}

def @func_4597() -> Tensor[(12, 5, 12), bool] {
  %557 = fn () -> Tensor[(12, 5, 12), bool] {
    %551 = @func_3944() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %552 = %551.0;
    %553 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 5, 12), float64] */, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
    %554 = shape_of(%552, dtype="int32") /* ty=Tensor[(3), int32] */;
    %555 = cast(%552, dtype="bool") /* ty=Tensor[(12, 5, 12), bool] */;
    %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%555, %556) /* ty=Tensor[(12, 5, 12), bool] */
  };
  %557() /* ty=Tensor[(12, 5, 12), bool] */
}

def @func_5266() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64]) {
  @func_5264() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64]) */
}

def @func_8870(%var_8867: Tensor[(11, 13, 13), int8], %var_8868: Tensor[(11, 13, 13), int8], %var_8869: Tensor[(11, 13, 13), int8]) -> (Tensor[(11, 13, 13), bool], Tensor[(12, 5, 12), bool], Tensor[(330), int8], Tensor[(11, 13, 13), int32]) {
  %577 = fn (%var_8778: Tensor[(11, 13, 13), int8], %var_8779: Tensor[(11, 13, 13), int8], %var_8798: Tensor[(11, 13, 13), int8]) -> (Tensor[(11, 13, 13), bool], Tensor[(12, 5, 12), bool], Tensor[(330), int8], Tensor[(11, 13, 13), int32]) {
    %558 = cast(%var_8779, dtype="bool") /* ty=Tensor[(11, 13, 13), bool] */;
    %559 = shape_of(%var_8778, dtype="int32") /* ty=Tensor[(3), int32] */;
    %560 = cast(%var_8778, dtype="bool") /* ty=Tensor[(11, 13, 13), bool] */;
    %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %562 = @func_7319() /* ty=(Tensor[(12, 5, 12), bool],) */;
    %563 = @func_8420() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(6, 11, 5), bool], Tensor[(330), int8]) */;
    %564 = cast(%var_8798, dtype="int64") /* ty=Tensor[(11, 13, 13), int64] */;
    %565 = shape_of(%var_8778, dtype="int32") /* ty=Tensor[(3), int32] */;
    %566 = cast(%var_8778, dtype="int64") /* ty=Tensor[(11, 13, 13), int64] */;
    %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %568 = subtract(%566, %567) /* ty=Tensor[(11, 13, 13), int64] */;
    %569 = cast(%568, dtype="int32") /* ty=Tensor[(11, 13, 13), int32] */;
    %570 = shape_of(%var_8779, dtype="int32") /* ty=Tensor[(3), int32] */;
    %571 = cast(%var_8779, dtype="int32") /* ty=Tensor[(11, 13, 13), int32] */;
    %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %573 = less_equal(%560, %561) /* ty=Tensor[(11, 13, 13), bool] */;
    %574 = %562.0;
    %575 = %563.2;
    %576 = bitwise_and(%571, %572) /* ty=Tensor[(11, 13, 13), int32] */;
    (%573, %574, %575, %576)
  };
  %577(%var_8867, %var_8868, %var_8869) /* ty=(Tensor[(11, 13, 13), bool], Tensor[(12, 5, 12), bool], Tensor[(330), int8], Tensor[(11, 13, 13), int32]) */
}

def @func_7344() -> Tensor[(12, 5, 12), float32] {
  @func_7342() /* ty=Tensor[(12, 5, 12), float32] */
}

def @func_6187() -> Tensor[(12, 5, 12), float64] {
  @func_3920() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_1238(%var_1220: float32, %var_1221: Tensor[(3, 1, 7), float32]) -> (Tensor[(3, 1, 7), bool], Tensor[(3, ?, 7), bool]) {
  %578 = cast(%var_1220, dtype="bool") /* ty=bool */;
  %579 = cast(%var_1221, dtype="bool") /* ty=Tensor[(3, 1, 7), bool] */;
  %580 = cast(%var_1220, dtype="int16") /* ty=int16 */;
  %581 = cast(%var_1221, dtype="int16") /* ty=Tensor[(3, 1, 7), int16] */;
  %582 = subtract(%580, %581) /* ty=Tensor[(3, 1, 7), int16] */;
  %583 = cast(%var_1221, dtype="bool") /* ty=Tensor[(3, 1, 7), bool] */;
  %584 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%582, dtype="bool") /* ty=Tensor[(3, 1, 7), bool] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %587 = not_equal(%578, %579) /* ty=Tensor[(3, 1, 7), bool] */;
  %588 = less_equal(%585, %586) /* ty=Tensor[(3, ?, 7), bool] */;
  (%587, %588)
}

def @func_7365() -> (Tensor[(3, 5, 3), float64], Tensor[(12, 5, 12), uint64]) {
  @func_7363() /* ty=(Tensor[(3, 5, 3), float64], Tensor[(12, 5, 12), uint64]) */
}

def @func_3756() -> Tensor[(12, 5, 12), uint64] {
  %595 = fn () -> Tensor[(12, 5, 12), uint64] {
    %589 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %590 = %589.0;
    %591 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 5, 12), float64] */, dtype="uint64") /* ty=Tensor[(12, 5, 12), uint64] */;
    %592 = shape_of(%590, dtype="int32") /* ty=Tensor[(3), int32] */;
    %593 = cast(%590, dtype="uint64") /* ty=Tensor[(12, 5, 12), uint64] */;
    %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_and(%593, %594) /* ty=Tensor[(12, 5, 12), uint64] */
  };
  %595() /* ty=Tensor[(12, 5, 12), uint64] */
}

def @func_7714() -> (Tensor[(12, 5, 12), float64],) {
  %598 = fn () -> (Tensor[(12, 5, 12), float64],) {
    %596 = @func_7025() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %597 = %596.0;
    (%597,)
  };
  %598() /* ty=(Tensor[(12, 5, 12), float64],) */
}

def @func_5946() -> Tensor[(12, 5, 12), float32] {
  %602 = fn () -> Tensor[(12, 5, 12), float32] {
    %599 = @func_4757() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(12, 2, 8), float32], uint8) */;
    %600 = %599.0;
    %601 = cast(%600, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
    exp(%601) /* ty=Tensor[(12, 5, 12), float32] */
  };
  %602() /* ty=Tensor[(12, 5, 12), float32] */
}

def @func_6665(%var_6662: Tensor[(192), float32], %var_6663: Tensor[(18), uint8], %var_6664: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(1, 1170), float64], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), bool]) {
  @func_6660(%var_6662, %var_6663, %var_6664) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1, 1170), float64], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), bool]) */
}

def @func_9015() -> (Tensor[(45), float64], Tensor[(12, 5, 12), float32]) {
  %603 = @func_8064() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(45), float64]) */;
  %604 = @func_6128() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %605 = %603.1;
  %606 = %604.0;
  (%605, %606)
}

def @func_3355(%var_3316: Tensor[(1170), float64], %var_3322: Tensor[(7, 5), float64], %var_3349: Tensor[(52, 4), float64], %var_3350: Tensor[(192, 1), float32], %var_3351: float32, %var_3352: Tensor[(21), float32]) -> (Tensor[(12, 5, 12), float64], Tensor[(6, 15, 16), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(5, 7, 12), float32], Tensor[(7, 5), float64], Tensor[(420), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 2, 8), float32], Tensor[(1950, 1), int8], Tensor[(52, 4), float64], Tensor[(192, 1), float32], float32, Tensor[(21), float32]) {
  %607 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %608 = cast(%var_3316, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %609 = reshape(%608, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %610 = @func_1686(%609) /* ty=(Tensor[(6, 15, 16), float32], Tensor[(6, 13, 15), float64], Tensor[(1170), float64]) */;
  %611 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %612 = cast(%var_3322, dtype="float64") /* ty=Tensor[(7, 5), float64] */;
  %613 = cast(meta[relay.Constant][34] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %614 = reshape(%612, newshape=[5, 7, 1]) /* ty=Tensor[(5, 7, 1), float64] */;
  %615 = reshape(%613, newshape=[5, 7, 12]) /* ty=Tensor[(5, 7, 12), float64] */;
  %616 = @func_2348(%614, %615) /* ty=(Tensor[(5, 7, 12), float32],) */;
  %617 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %618 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %619 = @func_3185() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %620 = cast(meta[relay.Constant][35] /* ty=Tensor[(1950, 1), int8] */, dtype="int8") /* ty=Tensor[(1950, 1), int8] */;
  %621 = cast(%var_3349, dtype="float64") /* ty=Tensor[(52, 4), float64] */;
  %622 = cast(%var_3350, dtype="float32") /* ty=Tensor[(192, 1), float32] */;
  %623 = cast(%var_3351, dtype="float32") /* ty=float32 */;
  %624 = cast(%var_3352, dtype="float32") /* ty=Tensor[(21), float32] */;
  %625 = cast(meta[relay.Constant][35] /* ty=Tensor[(1950, 1), int8] */, dtype="int8") /* ty=Tensor[(1950, 1), int8] */;
  %626 = cast(%var_3349, dtype="float32") /* ty=Tensor[(52, 4), float32] */;
  %627 = reshape(%620, newshape=[13, 15, 10]) /* ty=Tensor[(13, 15, 10), int8] */;
  %628 = reshape(%621, newshape=[104, 2]) /* ty=Tensor[(104, 2), float64] */;
  %629 = reshape(%622, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %630 = reshape(%623, newshape=[]) /* ty=float32 */;
  %631 = reshape(%624, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %632 = reshape(%625, newshape=[13, 15, 10]) /* ty=Tensor[(13, 15, 10), int8] */;
  %633 = reshape(%626, newshape=[104, 2]) /* ty=Tensor[(104, 2), float32] */;
  %634 = @func_1331(%627, %628, %629, %630, %631, %632, %633) /* ty=(Tensor[(16, 13, ?), float64], Tensor[(192), float32], Tensor[(3, ?, 7), bool], float32, Tensor[(21), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(13, 15, 10), int16], Tensor[(104, 2), uint32], Tensor[(12, 2, 8), float32], Tensor[(14, 14, 5), float64]) */;
  %635 = %607.0;
  %636 = %610.0;
  %637 = %611.0;
  %638 = %616.0;
  %639 = %617.1;
  %640 = %618.0;
  %641 = %619.0;
  %642 = %634.5;
  (%635, %636, %var_3316, %637, %638, %var_3322, meta[relay.Constant][34] /* ty=Tensor[(420), float64] */, %639, %640, %641, %642, meta[relay.Constant][35] /* ty=Tensor[(1950, 1), int8] */, %var_3349, %var_3350, %var_3351, %var_3352)
}

def @func_6963(%var_6951: Tensor[(18), uint8], %var_6952: Tensor[(180, 1), uint8], %var_6953: Tensor[(192), float32], %var_6955: Tensor[(208), float64], %var_6957: Tensor[(1170), float64], %var_6961: Tensor[(1260), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(11, 13, 13), int8], Tensor[(1859, 1), int8], Tensor[(12, 2, 8), float32], Tensor[(18), uint8], Tensor[(180, 1), uint8], Tensor[(192), float32], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(1260), float64]) {
  %643 = @func_5264() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64]) */;
  %644 = cast(meta[relay.Constant][36] /* ty=Tensor[(1859, 1), int8] */, dtype="int8") /* ty=Tensor[(1859, 1), int8] */;
  %645 = cast(meta[relay.Constant][36] /* ty=Tensor[(1859, 1), int8] */, dtype="int8") /* ty=Tensor[(1859, 1), int8] */;
  %646 = reshape(%644, newshape=[11, 13, 13]) /* ty=Tensor[(11, 13, 13), int8] */;
  %647 = reshape(%645, newshape=[11, 13, 13]) /* ty=Tensor[(11, 13, 13), int8] */;
  %648 = cast(%var_6951, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %649 = cast(%var_6952, dtype="uint8") /* ty=Tensor[(180, 1), uint8] */;
  %650 = cast(%var_6953, dtype="float32") /* ty=Tensor[(192), float32] */;
  %651 = cast(meta[relay.Constant][37] /* ty=Tensor[(1950), int8] */, dtype="int8") /* ty=Tensor[(1950), int8] */;
  %652 = cast(%var_6955, dtype="float64") /* ty=Tensor[(208), float64] */;
  %653 = cast(meta[relay.Constant][38] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %654 = cast(%var_6957, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %655 = reshape(%648, newshape=[3, 1, 6]) /* ty=Tensor[(3, 1, 6), uint8] */;
  %656 = reshape(%649, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), uint8] */;
  %657 = reshape(%650, newshape=[8, 24]) /* ty=Tensor[(8, 24), float32] */;
  %658 = reshape(%651, newshape=[1950]) /* ty=Tensor[(1950), int8] */;
  %659 = reshape(%652, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %660 = reshape(%653, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %661 = reshape(%654, newshape=[5, 234]) /* ty=Tensor[(5, 234), float64] */;
  %662 = @func_1816(%655, %656, %657, %658, %659, %660, %661) /* ty=(Tensor[(3, 10, 6), uint8], Tensor[(14, 14, 5), float64], Tensor[(8, 24), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(1950), int8], Tensor[(208), float64], float32, Tensor[(21), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(6, 13, 15), float64], Tensor[(5, 234), float64]) */;
  %663 = cast(%var_6961, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %664 = reshape(%663, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
  %665 = @func_5984(%664) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(1260), float64]) */;
  %666 = %643.0;
  %667 = @func_2616(%646, %647) /* ty=Tensor[(11, 13, 13), int8] */;
  %668 = %662.4;
  %669 = %665.3;
  (%666, %667, meta[relay.Constant][36] /* ty=Tensor[(1859, 1), int8] */, %668, %var_6951, %var_6952, %var_6953, meta[relay.Constant][37] /* ty=Tensor[(1950), int8] */, %var_6955, meta[relay.Constant][38] /* ty=Tensor[(21), float32] */, %var_6957, %669, %var_6961)
}

def @func_7754(%var_7748: Tensor[(1260), float64]) -> (Tensor[(11, 13, 13), int8], Tensor[(448), uint64], Tensor[(1260), float64], Tensor[(12, 5, 12), float32]) {
  %670 = @func_7487() /* ty=(uint8, Tensor[(11, 13, 13), int8], Tensor[(13, 143), uint64]) */;
  %671 = cast(%var_7748, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %672 = cast(%var_7748, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %673 = reshape(%671, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float64] */;
  %674 = reshape(%672, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float64] */;
  %675 = @func_5473(%673, %674) /* ty=(Tensor[(14, 9, 10), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64]) */;
  %676 = @func_5075() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %677 = %670.1;
  %678 = %675.3;
  %679 = %676.0;
  (%677, %678, %var_7748, %679)
}

def @func_7924(%var_7904: Tensor[(7, 1, 1), float32]) -> (Tensor[(7, 1, 1), float32], Tensor[(21), float32], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), float64]) {
  %680 = cast(%var_7904, dtype="float32") /* ty=Tensor[(7, 1, 1), float32] */;
  %681 = cast(meta[relay.Constant][39] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %682 = cast(meta[relay.Constant][40] /* ty=Tensor[(18), uint8] */, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %683 = cast(meta[relay.Constant][41] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %684 = reshape(%681, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %685 = reshape(%682, newshape=[18]) /* ty=Tensor[(18), uint8] */;
  %686 = reshape(%683, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), float64] */;
  %687 = @func_3146(%684, %685, %686) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */;
  %688 = sigmoid(%680) /* ty=Tensor[(7, 1, 1), float32] */;
  %689 = %687.8;
  (%688, %689, meta[relay.Constant][39] /* ty=Tensor[(192), float32] */, meta[relay.Constant][40] /* ty=Tensor[(18), uint8] */, meta[relay.Constant][41] /* ty=Tensor[(1170), float64] */)
}

def @func_5282() -> Tensor[(2, 8, 6), float32] {
  @func_5280() /* ty=Tensor[(2, 8, 6), float32] */
}

def @func_8956(%var_8954: Tensor[(45), float64]) -> (Tensor[(4, 14, 14), uint32], Tensor[(12, 5, 12), float64], Tensor[(45), float64], Tensor[(12, 16, 1), float64], Tensor[(2, 104), uint8]) {
  @func_8953(%var_8954) /* ty=(Tensor[(4, 14, 14), uint32], Tensor[(12, 5, 12), float64], Tensor[(45), float64], Tensor[(12, 16, 1), float64], Tensor[(2, 104), uint8]) */
}

def @func_9500() -> (Tensor[(12, 5, 12), float64], Tensor[(1260), float64], Tensor[(1260), float64]) {
  %695 = fn () -> (Tensor[(12, 5, 12), float64], Tensor[(1260), float64], Tensor[(1260), float64]) {
    %690 = cast(meta[relay.Constant][42] /* ty=Tensor[(1260), float64] */, dtype="float64") /* ty=Tensor[(1260), float64] */;
    %691 = reshape(%690, newshape=[1260]) /* ty=Tensor[(1260), float64] */;
    %692 = @func_7754(%691) /* ty=(Tensor[(11, 13, 13), int8], Tensor[(448), uint64], Tensor[(1260), float64], Tensor[(12, 5, 12), float32]) */;
    %693 = @func_3920() /* ty=Tensor[(12, 5, 12), float64] */;
    %694 = %692.2;
    (%693, %694, meta[relay.Constant][42] /* ty=Tensor[(1260), float64] */)
  };
  %695() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1260), float64], Tensor[(1260), float64]) */
}

def @func_3697(%var_3694: Tensor[(12, 5, 12), float64], %var_3695: Tensor[(192), float32], %var_3696: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(3, 6), uint8], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(1170), float64]) {
  %713 = fn (%var_3657: Tensor[(12, 5, 12), float64], %var_3669: Tensor[(192), float32], %var_3670: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(3, 6), uint8], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(1170), float64]) {
    %696 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %697 = %696.0;
    %698 = cast(%var_3657, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
    %699 = shape_of(%697, dtype="int32") /* ty=Tensor[(3), int32] */;
    %700 = cast(%697, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
    %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %702 = cast(meta[relay.Constant][43] /* ty=Tensor[(702), uint32] */, dtype="uint32") /* ty=Tensor[(702), uint32] */;
    %703 = cast(meta[relay.Constant][43] /* ty=Tensor[(702), uint32] */, dtype="uint32") /* ty=Tensor[(702), uint32] */;
    %704 = cast(%var_3669, dtype="float32") /* ty=Tensor[(192), float32] */;
    %705 = cast(%var_3670, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %706 = reshape(%702, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), uint32] */;
    %707 = reshape(%703, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), uint32] */;
    %708 = reshape(%704, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %709 = reshape(%705, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %710 = @func_3282(%706, %707, %708, %709) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 6), uint8], Tensor[(1170), float64], Tensor[(13, 6, 9), float32], Tensor[(13, 6, 9), int32]) */;
    %711 = divide(%700, %701) /* ty=Tensor[(12, 5, 12), float32] */;
    %712 = %710.2;
    (%711, %712, meta[relay.Constant][43] /* ty=Tensor[(702), uint32] */, %var_3669, %var_3670)
  };
  %713(%var_3694, %var_3695, %var_3696) /* ty=(Tensor[(12, 5, 12), float32], Tensor[(3, 6), uint8], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(1170), float64]) */
}

def @func_1824(%var_1817: Tensor[(3, 1, 6), uint8], %var_1818: Tensor[(3, 10, 6), uint8], %var_1819: Tensor[(8, 24), float32], %var_1820: Tensor[(1950), int8], %var_1821: Tensor[(208), float64], %var_1822: Tensor[(21), float32], %var_1823: Tensor[(5, 234), float64]) -> (Tensor[(3, 10, 6), uint8], Tensor[(14, 14, 5), float64], Tensor[(8, 24), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(1950), int8], Tensor[(208), float64], float32, Tensor[(21), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(6, 13, 15), float64], Tensor[(5, 234), float64]) {
  %758 = fn (%var_1725: Tensor[(3, 1, 6), uint8], %var_1726: Tensor[(3, 10, 6), uint8], %var_1753: Tensor[(8, 24), float32], %var_1767: Tensor[(1950), int8], %var_1768: Tensor[(208), float64], %var_1770: Tensor[(21), float32], %var_1811: Tensor[(5, 234), float64]) -> (Tensor[(3, 10, 6), uint8], Tensor[(14, 14, 5), float64], Tensor[(8, 24), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(1950), int8], Tensor[(208), float64], float32, Tensor[(21), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(6, 13, 15), float64], Tensor[(5, 234), float64]) {
    %714 = cast(%var_1725, dtype="uint8") /* ty=Tensor[(3, 1, 6), uint8] */;
    %715 = cast(%var_1726, dtype="uint8") /* ty=Tensor[(3, 10, 6), uint8] */;
    %716 = cast(%var_1753, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
    %717 = reshape(%716, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %718 = @func_574(%717) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
    %719 = cast(%var_1726, dtype="float32") /* ty=Tensor[(3, 10, 6), float32] */;
    %720 = exp(%719) /* ty=Tensor[(3, 10, 6), float32] */;
    %721 = cast(%var_1726, dtype="float32") /* ty=Tensor[(3, 10, 6), float32] */;
    %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
    %723 = cast(%720, dtype="float32") /* ty=Tensor[(3, 10, 6), float32] */;
    %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %725 = cast(%var_1753, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
    %726 = reshape(%725, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
    %727 = @func_401(%726) /* ty=(Tensor[(12, 2, 8), float32],) */;
    %728 = cast(%var_1767, dtype="int8") /* ty=Tensor[(1950), int8] */;
    %729 = cast(%var_1768, dtype="float64") /* ty=Tensor[(208), float64] */;
    %730 = %727.0;
    %731 = cast(%730, dtype="float32") /* ty=Tensor[(12, 2, 8), float32] */;
    %732 = cast(-8.47495f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %733 = cast(%var_1770, dtype="float32") /* ty=Tensor[(21), float32] */;
    %734 = cast(%var_1767, dtype="int8") /* ty=Tensor[(1950), int8] */;
    %735 = cast(%var_1768, dtype="float32") /* ty=Tensor[(208), float32] */;
    %736 = reshape(%728, newshape=[13, 15, 10]) /* ty=Tensor[(13, 15, 10), int8] */;
    %737 = reshape(%729, newshape=[104, 2]) /* ty=Tensor[(104, 2), float64] */;
    %738 = reshape(%731, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %739 = reshape(%732, newshape=[]) /* ty=float32 */;
    %740 = reshape(%733, newshape=[21]) /* ty=Tensor[(21), float32] */;
    %741 = reshape(%734, newshape=[13, 15, 10]) /* ty=Tensor[(13, 15, 10), int8] */;
    %742 = reshape(%735, newshape=[104, 2]) /* ty=Tensor[(104, 2), float32] */;
    %743 = @func_1331(%736, %737, %738, %739, %740, %741, %742) /* ty=(Tensor[(16, 13, ?), float64], Tensor[(192), float32], Tensor[(3, ?, 7), bool], float32, Tensor[(21), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(13, 15, 10), int16], Tensor[(104, 2), uint32], Tensor[(12, 2, 8), float32], Tensor[(14, 14, 5), float64]) */;
    %744 = cast(%720, dtype="float32") /* ty=Tensor[(3, 10, 6), float32] */;
    %745 = cast(%var_1753, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
    %746 = reshape(%745, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
    %747 = @func_401(%746) /* ty=(Tensor[(12, 2, 8), float32],) */;
    %748 = cast(%var_1811, dtype="float64") /* ty=Tensor[(5, 234), float64] */;
    %749 = reshape(%748, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %750 = @func_1686(%749) /* ty=(Tensor[(6, 15, 16), float32], Tensor[(6, 13, 15), float64], Tensor[(1170), float64]) */;
    %751 = logical_xor(%714, %715) /* ty=Tensor[(3, 10, 6), uint8] */;
    %752 = %718.0;
    %753 = divide(%723, %724) /* ty=Tensor[(3, 10, 6), float32] */;
    %754 = %743.6;
    %755 = sigmoid(%744) /* ty=Tensor[(3, 10, 6), float32] */;
    %756 = %747.0;
    %757 = %750.1;
    (%751, %752, %var_1753, %753, %730, %754, %var_1767, %var_1768, -8.47495f /* ty=float32 */, %var_1770, %755, %756, %757, %var_1811)
  };
  %758(%var_1817, %var_1818, %var_1819, %var_1820, %var_1821, %var_1822, %var_1823) /* ty=(Tensor[(3, 10, 6), uint8], Tensor[(14, 14, 5), float64], Tensor[(8, 24), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(1950), int8], Tensor[(208), float64], float32, Tensor[(21), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(6, 13, 15), float64], Tensor[(5, 234), float64]) */
}

def @func_2779(%var_2742: Tensor[(12, 5, 12), float64], %var_2748: Tensor[(12, 5, 12), int32], %var_2755: Tensor[(30), uint16]) -> (Tensor[(12, 5, 12), uint64], Tensor[(208), float64], uint16, Tensor[(30), uint16], Tensor[(4, 48), float32], Tensor[(3, ?, 7), bool], Tensor[(21), float32]) {
  %759 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %760 = %759.0;
  %761 = cast(%var_2742, dtype="int32") /* ty=Tensor[(12, 5, 12), int32] */;
  %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%760, dtype="int32") /* ty=Tensor[(12, 5, 12), int32] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %765 = logical_xor(%763, %764) /* ty=Tensor[(12, 5, 12), int32] */;
  %766 = cast(%var_2748, dtype="uint64") /* ty=Tensor[(12, 5, 12), uint64] */;
  %767 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %768 = cast(%765, dtype="uint64") /* ty=Tensor[(12, 5, 12), uint64] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %770 = cast(meta[relay.Constant][44] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %771 = cast(%var_2755, dtype="uint16") /* ty=Tensor[(30), uint16] */;
  %772 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 48), float32] */, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %773 = reshape(%770, newshape=[]) /* ty=uint16 */;
  %774 = reshape(%771, newshape=[1, 15, 2]) /* ty=Tensor[(1, 15, 2), uint16] */;
  %775 = reshape(%772, newshape=[4, 48]) /* ty=Tensor[(4, 48), float32] */;
  %776 = @func_2199(%773, %774, %775) /* ty=(Tensor[(1, 15, 2), uint16], Tensor[(192, 1), float32], Tensor[(208), float64], Tensor[(4, 48), float32]) */;
  %777 = cast(meta[relay.Constant][44] /* ty=uint16 */, dtype="float32") /* ty=float32 */;
  %778 = cast(meta[relay.Constant][46] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %779 = reshape(%777, newshape=[]) /* ty=float32 */;
  %780 = reshape(%778, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %781 = @func_1238(%779, %780) /* ty=(Tensor[(3, 1, 7), bool], Tensor[(3, ?, 7), bool]) */;
  %782 = bitwise_xor(%768, %769) /* ty=Tensor[(12, 5, 12), uint64] */;
  %783 = %776.2;
  %784 = %781.1;
  (%782, %783, meta[relay.Constant][44] /* ty=uint16 */, %var_2755, meta[relay.Constant][45] /* ty=Tensor[(4, 48), float32] */, %784, meta[relay.Constant][46] /* ty=Tensor[(21), float32] */)
}

def @func_8546(%var_8545: Tensor[(45), float64]) -> (Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), float64], Tensor[(45), float64]) {
  %795 = fn (%var_8513: Tensor[(45), float64]) -> (Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), float64], Tensor[(45), float64]) {
    %785 = cast(%var_8513, dtype="float64") /* ty=Tensor[(45), float64] */;
    %786 = reshape(%785, newshape=[3, 5, 3]) /* ty=Tensor[(3, 5, 3), float64] */;
    %787 = @func_2292(%786) /* ty=(Tensor[(3, 5, 3), float64],) */;
    %788 = @func_5191() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(4, 48), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(702), float32], Tensor[(12, 5, 12), float64]) */;
    %789 = %788.0;
    %790 = cast(%789, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
    %791 = @func_5381() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(45), float64], Tensor[(10, 3), uint16]) */;
    %792 = %787.0;
    %793 = atanh(%790) /* ty=Tensor[(12, 5, 12), float64] */;
    %794 = %791.2;
    (%792, %var_8513, %793, %794)
  };
  %795(%var_8545) /* ty=(Tensor[(3, 5, 3), float64], Tensor[(45), float64], Tensor[(12, 5, 12), float64], Tensor[(45), float64]) */
}

def @func_7377(%var_7371: Tensor[(117, 2), float32]) -> (Tensor[(12, 5, 12), float32], uint8, Tensor[(117, 2), float32]) {
  %796 = @func_6830() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %797 = cast(%var_7371, dtype="float32") /* ty=Tensor[(117, 2), float32] */;
  %798 = reshape(%797, newshape=[2, 13, 9]) /* ty=Tensor[(2, 13, 9), float32] */;
  %799 = @func_3597(%798) /* ty=(Tensor[(2, 13, 9), int32], Tensor[(2, 13, 9), float64], Tensor[(14, 14, 5), float64], uint8, Tensor[(192), uint8], Tensor[(12, 2, 8), float32], Tensor[(2, 8, 6), float32], Tensor[(1, 96), float32]) */;
  %800 = %796.0;
  %801 = %799.3;
  (%800, %801, %var_7371)
}

def @func_4628(%var_4626: Tensor[(192), float32], %var_4627: Tensor[(130, 9), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(130, 9), float32]) {
  %817 = fn (%var_4618: Tensor[(192), float32], %var_4621: Tensor[(130, 9), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(130, 9), float32]) {
    %802 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
    %803 = %802.1;
    %804 = cast(%803, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
    %805 = cast(%var_4618, dtype="float32") /* ty=Tensor[(192), float32] */;
    %806 = cast(meta[relay.Constant][47] /* ty=Tensor[(130, 9), float64] */, dtype="float64") /* ty=Tensor[(130, 9), float64] */;
    %807 = reshape(%804, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
    %808 = reshape(%805, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %809 = reshape(%806, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %810 = @func_3693(%807, %808, %809) /* ty=(Tensor[(12, 5, 12), float32], Tensor[(3, 6), uint8], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(1170), float64]) */;
    %811 = cast(%var_4621, dtype="float32") /* ty=Tensor[(130, 9), float32] */;
    %812 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(130, 9), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %813 = cast(meta[relay.Constant][47] /* ty=Tensor[(130, 9), float64] */, dtype="float32") /* ty=Tensor[(130, 9), float32] */;
    %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %815 = %810.2;
    %816 = floor_mod(%813, %814) /* ty=Tensor[(130, 9), float32] */;
    (%803, %815, %var_4618, %816)
  };
  %817(%var_4626, %var_4627) /* ty=(Tensor[(12, 5, 12), float32], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(130, 9), float32]) */
}

def @func_5403() -> Tensor[(12, 5, 12), float64] {
  %818 = fn () -> Tensor[(12, 5, 12), float64] {
    @func_3091() /* ty=Tensor[(12, 5, 12), float64] */
  };
  %818() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_6189() -> Tensor[(12, 5, 12), float64] {
  @func_6187() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_3093() -> Tensor[(12, 5, 12), float64] {
  @func_3091() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_4227() -> (Tensor[(12, 5, 12), float64], Tensor[(2, 13, 9), float64], Tensor[(234), float32], Tensor[(1, 96), float32], Tensor[(2, 8, 6), float32]) {
  @func_4225() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 13, 9), float64], Tensor[(234), float32], Tensor[(1, 96), float32], Tensor[(2, 8, 6), float32]) */
}

def @func_6639(%var_6629: Tensor[(702), float32]) -> (Tensor[(702), uint16],) {
  %819 = @func_5191() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(4, 48), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(702), float32], Tensor[(12, 5, 12), float64]) */;
  %820 = %819.4;
  %821 = cast(%var_6629, dtype="uint16") /* ty=Tensor[(702), uint16] */;
  %822 = shape_of(%820, dtype="int32") /* ty=Tensor[(1), int32] */;
  %823 = cast(%820, dtype="uint16") /* ty=Tensor[(702), uint16] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %825 = logical_xor(%823, %824) /* ty=Tensor[(702), uint16] */;
  (%825,)
}

def @func_6893() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32]) {
  %832 = fn () -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32]) {
    %826 = @func_6093() /* ty=Tensor[(12, 5, 12), float32] */;
    %827 = cast(%826, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
    %828 = @func_4095() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(1, 192), float32], Tensor[(12, 5, 12), float32]) */;
    %829 = @func_3920() /* ty=Tensor[(12, 5, 12), float64] */;
    %830 = sqrt(%827) /* ty=Tensor[(12, 5, 12), float64] */;
    %831 = %828.2;
    (%829, %830, %831)
  };
  %832() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32]) */
}

def @func_8280(%var_8270: Tensor[(702), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(702), int64], Tensor[(12, 5, 12), float32], Tensor[(1950), int8], Tensor[(192), float32], Tensor[(18), uint8], Tensor[(1170), float64], Tensor[(702), bool]) {
  %833 = @func_5191() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(4, 48), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(702), float32], Tensor[(12, 5, 12), float64]) */;
  %834 = %833.4;
  %835 = cast(meta[relay.Constant][48] /* ty=Tensor[(702), float32] */, dtype="int64") /* ty=Tensor[(702), int64] */;
  %836 = shape_of(%834, dtype="int32") /* ty=Tensor[(1), int32] */;
  %837 = cast(%834, dtype="int64") /* ty=Tensor[(702), int64] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?), int64] */;
  %839 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %840 = cast(meta[relay.Constant][49] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %841 = cast(meta[relay.Constant][50] /* ty=Tensor[(18), uint8] */, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %842 = cast(meta[relay.Constant][51] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %843 = reshape(%840, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %844 = reshape(%841, newshape=[18]) /* ty=Tensor[(18), uint8] */;
  %845 = reshape(%842, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), float64] */;
  %846 = @func_3146(%843, %844, %845) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */;
  %847 = cast(%834, dtype="float64") /* ty=Tensor[(702), float64] */;
  %848 = sinh(%847) /* ty=Tensor[(702), float64] */;
  %849 = cast(%var_8270, dtype="bool") /* ty=Tensor[(702), bool] */;
  %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(1), int32] */;
  %851 = cast(%848, dtype="bool") /* ty=Tensor[(702), bool] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?), bool] */;
  %853 = @func_6941() /* ty=Tensor[(12, 5, 12), float32] */;
  %854 = left_shift(%837, %838) /* ty=Tensor[(702), int64] */;
  %855 = %839.0;
  %856 = %846.6;
  %857 = greater_equal(%851, %852) /* ty=Tensor[(702), bool] */;
  (%853, %854, %855, %856, meta[relay.Constant][49] /* ty=Tensor[(192), float32] */, meta[relay.Constant][50] /* ty=Tensor[(18), uint8] */, meta[relay.Constant][51] /* ty=Tensor[(1170), float64] */, %857)
}

def @func_4693() -> Tensor[(12, 5, 12), float64] {
  @func_3091() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_404(%var_402: Tensor[(12, 2, 8), float32]) -> (Tensor[(12, 2, 8), float32],) {
  @func_401(%var_402) /* ty=(Tensor[(12, 2, 8), float32],) */
}

def @func_2619(%var_2617: Tensor[(11, 13, 13), int8], %var_2618: Tensor[(11, 13, 13), int8]) -> Tensor[(11, 13, 13), int8] {
  %862 = fn (%var_2608: Tensor[(11, 13, 13), int8], %var_2609: Tensor[(11, 13, 13), int8]) -> Tensor[(11, 13, 13), int8] {
    %858 = cast(%var_2609, dtype="int8") /* ty=Tensor[(11, 13, 13), int8] */;
    %859 = shape_of(%var_2608, dtype="int32") /* ty=Tensor[(3), int32] */;
    %860 = cast(%var_2608, dtype="int8") /* ty=Tensor[(11, 13, 13), int8] */;
    %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    logical_xor(%860, %861) /* ty=Tensor[(11, 13, 13), int8] */
  };
  %862(%var_2617, %var_2618) /* ty=Tensor[(11, 13, 13), int8] */
}

def @func_8445() -> (Tensor[(12, 5, 12), float64],) {
  %863 = @func_8315() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %864 = %863.0;
  (%864,)
}

def @func_7342() -> Tensor[(12, 5, 12), float32] {
  @func_6941() /* ty=Tensor[(12, 5, 12), float32] */
}

def @func_8929() -> (Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), uint64]) {
  %865 = @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */;
  %866 = @func_5525() /* ty=Tensor[(12, 5, 12), float32] */;
  %867 = @func_6008() /* ty=Tensor[(12, 5, 12), float32] */;
  %868 = %865.0;
  (%866, %867, %868)
}

def @func_6095() -> Tensor[(12, 5, 12), float32] {
  @func_6093() /* ty=Tensor[(12, 5, 12), float32] */
}

def @func_1689(%var_1687: Tensor[(1170), float64]) -> (Tensor[(6, 15, 16), float32], Tensor[(6, 13, 15), float64], Tensor[(1170), float64]) {
  @func_1686(%var_1687) /* ty=(Tensor[(6, 15, 16), float32], Tensor[(6, 13, 15), float64], Tensor[(1170), float64]) */
}

def @func_7551(%var_7528: Tensor[(15, 5, 1), uint32], %var_7529: Tensor[(15, 5, 13), uint32]) -> (Tensor[(15, 5, 13), uint32], Tensor[(12, 5, 12), float64]) {
  %869 = cast(%var_7528, dtype="uint32") /* ty=Tensor[(15, 5, 1), uint32] */;
  %870 = cast(%var_7529, dtype="uint32") /* ty=Tensor[(15, 5, 13), uint32] */;
  %871 = @func_5137() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 8, 6), float32]) */;
  %872 = right_shift(%869, %870) /* ty=Tensor[(15, 5, 13), uint32] */;
  %873 = %871.0;
  (%872, %873)
}

def @func_3392() -> (Tensor[(12, 5, 12), float64],) {
  @func_3390() /* ty=(Tensor[(12, 5, 12), float64],) */
}

def @func_4095() -> (Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(1, 192), float32], Tensor[(12, 5, 12), float32]) {
  %874 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %875 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 192), float32] */, dtype="float32") /* ty=Tensor[(1, 192), float32] */;
  %876 = reshape(%875, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %877 = @func_574(%876) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
  %878 = @func_3944() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %879 = %878.0;
  %880 = cast(%879, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %881 = %874.0;
  %882 = %877.0;
  %883 = sigmoid(%880) /* ty=Tensor[(12, 5, 12), float32] */;
  (%881, %882, meta[relay.Constant][52] /* ty=Tensor[(1, 192), float32] */, %883)
}

def @func_7321() -> (Tensor[(12, 5, 12), bool],) {
  @func_7319() /* ty=(Tensor[(12, 5, 12), bool],) */
}

def @func_5476(%var_5474: Tensor[(14, 9, 10), float64], %var_5475: Tensor[(14, 9, 10), float64]) -> (Tensor[(14, 9, 10), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64]) {
  %894 = fn (%var_5453: Tensor[(14, 9, 10), float64], %var_5454: Tensor[(14, 9, 10), float64]) -> (Tensor[(14, 9, 10), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64]) {
    %884 = cast(%var_5454, dtype="float64") /* ty=Tensor[(14, 9, 10), float64] */;
    %885 = shape_of(%var_5453, dtype="int32") /* ty=Tensor[(3), int32] */;
    %886 = cast(%var_5453, dtype="float64") /* ty=Tensor[(14, 9, 10), float64] */;
    %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %888 = @func_5137() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(2, 8, 6), float32]) */;
    %889 = cast(meta[relay.Constant][53] /* ty=Tensor[(448), uint64] */, dtype="uint64") /* ty=Tensor[(448), uint64] */;
    %890 = reshape(%889, newshape=[4, 14, 8]) /* ty=Tensor[(4, 14, 8), uint64] */;
    %891 = floor_mod(%886, %887) /* ty=Tensor[(14, 9, 10), float64] */;
    %892 = %888.0;
    %893 = @func_5089(%890) /* ty=Tensor[(4, 14, 8), uint64] */;
    (%891, %892, %893, meta[relay.Constant][53] /* ty=Tensor[(448), uint64] */)
  };
  %894(%var_5474, %var_5475) /* ty=(Tensor[(14, 9, 10), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64]) */
}

def @func_9102() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) {
  %895 = @func_7767() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %896 = @func_3783() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */;
  %897 = %895.0;
  %898 = @func_3755() /* ty=Tensor[(12, 5, 12), uint64] */;
  %899 = %896.0;
  (%897, %898, %899)
}

def @func_9070() -> (Tensor[(3, 5, 3), float64], Tensor[(12, 5, 12), float64]) {
  %905 = fn () -> (Tensor[(3, 5, 3), float64], Tensor[(12, 5, 12), float64]) {
    %900 = @func_7363() /* ty=(Tensor[(3, 5, 3), float64], Tensor[(12, 5, 12), uint64]) */;
    %901 = %900.0;
    %902 = cast(%901, dtype="float64") /* ty=Tensor[(3, 5, 3), float64] */;
    %903 = sinh(%902) /* ty=Tensor[(3, 5, 3), float64] */;
    %904 = @func_3629() /* ty=Tensor[(12, 5, 12), float64] */;
    (%903, %904)
  };
  %905() /* ty=(Tensor[(3, 5, 3), float64], Tensor[(12, 5, 12), float64]) */
}

def @func_8175() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) {
  %909 = fn () -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) {
    %906 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
    %907 = %906.0;
    %908 = @func_3629() /* ty=Tensor[(12, 5, 12), float64] */;
    (%907, %908)
  };
  %909() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */
}

def @func_5527() -> Tensor[(12, 5, 12), float32] {
  @func_5525() /* ty=Tensor[(12, 5, 12), float32] */
}

def @func_2679() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) {
  %910 = cast(meta[relay.Constant][54] /* ty=Tensor[(12, 5, 12), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %911 = cast(meta[relay.Constant][54] /* ty=Tensor[(12, 5, 12), float64] */, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %912 = cosh(%910) /* ty=Tensor[(12, 5, 12), float64] */;
  %913 = cos(%911) /* ty=Tensor[(12, 5, 12), float32] */;
  (%912, %913)
}

def @func_7555(%var_7553: Tensor[(15, 5, 1), uint32], %var_7554: Tensor[(15, 5, 13), uint32]) -> (Tensor[(15, 5, 13), uint32], Tensor[(12, 5, 12), float64]) {
  @func_7551(%var_7553, %var_7554) /* ty=(Tensor[(15, 5, 13), uint32], Tensor[(12, 5, 12), float64]) */
}

def @func_9598() -> (Tensor[(12, 5, 12), uint64],) {
  @func_9596() /* ty=(Tensor[(12, 5, 12), uint64],) */
}

def @func_5610() -> (Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(30), uint16]) {
  @func_5608() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(3, 5, 3), float64], Tensor[(30), uint16]) */
}

def @func_739(%var_737: uint8, %var_738: Tensor[(12, 16, 1), uint8]) -> (Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(12, 16, 1), float64]) {
  %927 = fn (%var_702: uint8, %var_703: Tensor[(12, 16, 1), uint8]) -> (Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(12, 16, 1), float64]) {
    %914 = cast(%var_703, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
    %915 = reshape(%914, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %916 = @func_574(%915) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
    %917 = cast(%var_702, dtype="bool") /* ty=bool */;
    %918 = cast(%var_703, dtype="bool") /* ty=Tensor[(12, 16, 1), bool] */;
    %919 = greater(%917, %918) /* ty=Tensor[(12, 16, 1), bool] */;
    %920 = cast(%919, dtype="float32") /* ty=Tensor[(12, 16, 1), float32] */;
    %921 = reshape(%920, newshape=[12, 2, 8]) /* ty=Tensor[(12, 2, 8), float32] */;
    %922 = @func_401(%921) /* ty=(Tensor[(12, 2, 8), float32],) */;
    %923 = cast(%919, dtype="float64") /* ty=Tensor[(12, 16, 1), float64] */;
    %924 = %916.0;
    %925 = %922.0;
    %926 = cos(%923) /* ty=Tensor[(12, 16, 1), float64] */;
    (%924, %925, %926)
  };
  %927(%var_737, %var_738) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(12, 16, 1), float64]) */
}

def @func_8661() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(104, 2), uint8]) {
  @func_8659() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(104, 2), uint8]) */
}

def @func_9392() -> Tensor[(12, 5, 12), float64] {
  %929 = fn () -> Tensor[(12, 5, 12), float64] {
    %928 = @func_8445() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %928.0
  };
  %929() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_6067() -> (Tensor[(12, 5, 12), uint64],) {
  %932 = fn () -> (Tensor[(12, 5, 12), uint64],) {
    %930 = @func_4232() /* ty=(Tensor[(12, 5, 12), uint64],) */;
    %931 = %930.0;
    (%931,)
  };
  %932() /* ty=(Tensor[(12, 5, 12), uint64],) */
}

def @func_9596() -> (Tensor[(12, 5, 12), uint64],) {
  %933 = @func_4199() /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(12, 5, 12), float64]) */;
  %934 = %933.0;
  (%934,)
}

def @func_7299(%var_7298: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(1170), float64], Tensor[(192), float32], Tensor[(12, 5, 12), float32], Tensor[(14, 9, 10), float64], Tensor[(1260, 1170), float32], Tensor[(702), float32]) {
  %961 = fn (%var_7226: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(1170), float64], Tensor[(192), float32], Tensor[(12, 5, 12), float32], Tensor[(14, 9, 10), float64], Tensor[(1260, 1170), float32], Tensor[(702), float32]) {
    %935 = @func_5687() /* ty=(Tensor[(12, 5, 12), float32],) */;
    %936 = %935.0;
    %937 = cast(%936, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
    %938 = cast(meta[relay.Constant][55] /* ty=Tensor[(702), uint32] */, dtype="uint32") /* ty=Tensor[(702), uint32] */;
    %939 = cast(meta[relay.Constant][55] /* ty=Tensor[(702), uint32] */, dtype="uint32") /* ty=Tensor[(702), uint32] */;
    %940 = cast(meta[relay.Constant][56] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
    %941 = cast(%var_7226, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %942 = reshape(%938, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), uint32] */;
    %943 = reshape(%939, newshape=[13, 6, 9]) /* ty=Tensor[(13, 6, 9), uint32] */;
    %944 = reshape(%940, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %945 = reshape(%941, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
    %946 = @func_3282(%942, %943, %944, %945) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 6), uint8], Tensor[(1170), float64], Tensor[(13, 6, 9), float32], Tensor[(13, 6, 9), int32]) */;
    %947 = cast(meta[relay.Constant][57] /* ty=Tensor[(1260, 1), float64] */, dtype="float64") /* ty=Tensor[(1260, 1), float64] */;
    %948 = cast(meta[relay.Constant][57] /* ty=Tensor[(1260, 1), float64] */, dtype="float64") /* ty=Tensor[(1260, 1), float64] */;
    %949 = reshape(%947, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float64] */;
    %950 = reshape(%948, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float64] */;
    %951 = @func_5473(%949, %950) /* ty=(Tensor[(14, 9, 10), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64]) */;
    %952 = cast(meta[relay.Constant][57] /* ty=Tensor[(1260, 1), float64] */, dtype="float32") /* ty=Tensor[(1260, 1), float32] */;
    %953 = cast(%var_7226, dtype="float32") /* ty=Tensor[(1170), float32] */;
    %954 = cast(meta[relay.Constant][55] /* ty=Tensor[(702), uint32] */, dtype="float32") /* ty=Tensor[(702), float32] */;
    %955 = asin(%937) /* ty=Tensor[(12, 5, 12), float64] */;
    %956 = %946.3;
    %957 = @func_6008() /* ty=Tensor[(12, 5, 12), float32] */;
    %958 = %951.0;
    %959 = multiply(%952, %953) /* ty=Tensor[(1260, 1170), float32] */;
    %960 = cos(%954) /* ty=Tensor[(702), float32] */;
    (%955, %956, meta[relay.Constant][56] /* ty=Tensor[(192), float32] */, %957, %958, %959, %960)
  };
  %961(%var_7298) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1170), float64], Tensor[(192), float32], Tensor[(12, 5, 12), float32], Tensor[(14, 9, 10), float64], Tensor[(1260, 1170), float32], Tensor[(702), float32]) */
}

def @func_7884(%var_7874: Tensor[(12, 5, 12), float32]) -> Tensor[(12, 5, 12), int64] {
  %962 = @func_5525() /* ty=Tensor[(12, 5, 12), float32] */;
  %963 = cast(%var_7874, dtype="int64") /* ty=Tensor[(12, 5, 12), int64] */;
  %964 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%962, dtype="int64") /* ty=Tensor[(12, 5, 12), int64] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  multiply(%965, %966) /* ty=Tensor[(12, 5, 12), int64] */
}

def @func_2606(%var_2605: Tensor[(2, 8, 6), float32]) -> (Tensor[(2, 8, 6), float32],) {
  %969 = fn (%var_2600: Tensor[(2, 8, 6), float32]) -> (Tensor[(2, 8, 6), float32],) {
    %967 = cast(%var_2600, dtype="float32") /* ty=Tensor[(2, 8, 6), float32] */;
    %968 = cos(%967) /* ty=Tensor[(2, 8, 6), float32] */;
    (%968,)
  };
  %969(%var_2605) /* ty=(Tensor[(2, 8, 6), float32],) */
}

def @func_7669(%var_7668: Tensor[(96), float32]) -> (Tensor[(12, 5, 12), float64], Tensor[(1170), float64], Tensor[(96), float32], Tensor[(12, 5, 12), float64]) {
  %979 = fn (%var_7642: Tensor[(96), float32]) -> (Tensor[(12, 5, 12), float64], Tensor[(1170), float64], Tensor[(96), float32], Tensor[(12, 5, 12), float64]) {
    %970 = @func_4557() /* ty=Tensor[(12, 5, 12), float64] */;
    %971 = cast(%970, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
    %972 = cast(%var_7642, dtype="float32") /* ty=Tensor[(96), float32] */;
    %973 = reshape(%971, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
    %974 = reshape(%972, newshape=[96]) /* ty=Tensor[(96), float32] */;
    %975 = @func_4527(%973, %974) /* ty=(Tensor[(6, 13, 15), float64], Tensor[(390, 3), float64], Tensor[(12, 5, 12), float32], Tensor[(1170), float64], Tensor[(234, 3), uint32], Tensor[(192), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(2, 8, 6), float32], Tensor[(234), float32]) */;
    %976 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %977 = %975.3;
    %978 = %976.0;
    (%970, %977, %var_7642, %978)
  };
  %979(%var_7668) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1170), float64], Tensor[(96), float32], Tensor[(12, 5, 12), float64]) */
}

def @func_7319() -> (Tensor[(12, 5, 12), bool],) {
  %980 = @func_4596() /* ty=Tensor[(12, 5, 12), bool] */;
  (%980,)
}

def @func_4737(%var_4721: Tensor[(4, 13, 4), uint8]) -> (Tensor[(12, 5, 12), float64], Tensor[(12, 16, 1), float64], Tensor[(4, 48), uint8], Tensor[(4, 13, 4), bool]) {
  %981 = cast(meta[relay.Constant][58] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %982 = cast(meta[relay.Constant][59] /* ty=Tensor[(4, 48), uint8] */, dtype="uint8") /* ty=Tensor[(4, 48), uint8] */;
  %983 = reshape(%981, newshape=[]) /* ty=uint8 */;
  %984 = reshape(%982, newshape=[12, 16, 1]) /* ty=Tensor[(12, 16, 1), uint8] */;
  %985 = @func_736(%983, %984) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(12, 16, 1), float64]) */;
  %986 = cast(meta[relay.Constant][58] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %987 = cast(%var_4721, dtype="bool") /* ty=Tensor[(4, 13, 4), bool] */;
  %988 = @func_3920() /* ty=Tensor[(12, 5, 12), float64] */;
  %989 = %985.2;
  %990 = less(%986, %987) /* ty=Tensor[(4, 13, 4), bool] */;
  (%988, %989, meta[relay.Constant][59] /* ty=Tensor[(4, 48), uint8] */, %990)
}

def @func_6295(%var_6294: Tensor[(7, 5, 13), float64]) -> (Tensor[(7, 5, 13), float64],) {
  %993 = fn (%var_6278: Tensor[(7, 5, 13), float64]) -> (Tensor[(7, 5, 13), float64],) {
    %991 = cast(%var_6278, dtype="float64") /* ty=Tensor[(7, 5, 13), float64] */;
    %992 = asinh(%991) /* ty=Tensor[(7, 5, 13), float64] */;
    (%992,)
  };
  %993(%var_6294) /* ty=(Tensor[(7, 5, 13), float64],) */
}

def @func_3363(%var_3357: Tensor[(1170), float64], %var_3358: Tensor[(7, 5), float64], %var_3359: Tensor[(52, 4), float64], %var_3360: Tensor[(192, 1), float32], %var_3361: float32, %var_3362: Tensor[(21), float32]) -> (Tensor[(12, 5, 12), float64], Tensor[(6, 15, 16), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(5, 7, 12), float32], Tensor[(7, 5), float64], Tensor[(420), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 2, 8), float32], Tensor[(1950, 1), int8], Tensor[(52, 4), float64], Tensor[(192, 1), float32], float32, Tensor[(21), float32]) {
  @func_3355(%var_3357, %var_3358, %var_3359, %var_3360, %var_3361, %var_3362) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(6, 15, 16), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(5, 7, 12), float32], Tensor[(7, 5), float64], Tensor[(420), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 2, 8), float32], Tensor[(1950, 1), int8], Tensor[(52, 4), float64], Tensor[(192, 1), float32], float32, Tensor[(21), float32]) */
}

def @func_8659() -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(104, 2), uint8]) {
  %994 = @func_7767() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %995 = cast(meta[relay.Constant][60] /* ty=Tensor[(104, 2), uint8] */, dtype="uint8") /* ty=Tensor[(104, 2), uint8] */;
  %996 = reshape(%995, newshape=[4, 13, 4]) /* ty=Tensor[(4, 13, 4), uint8] */;
  %997 = @func_4737(%996) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 16, 1), float64], Tensor[(4, 48), uint8], Tensor[(4, 13, 4), bool]) */;
  %998 = %994.0;
  %999 = %997.0;
  (%998, %999, meta[relay.Constant][60] /* ty=Tensor[(104, 2), uint8] */)
}

def @func_6971(%var_6965: Tensor[(18), uint8], %var_6966: Tensor[(180, 1), uint8], %var_6967: Tensor[(192), float32], %var_6968: Tensor[(208), float64], %var_6969: Tensor[(1170), float64], %var_6970: Tensor[(1260), float64]) -> (Tensor[(12, 5, 12), float32], Tensor[(11, 13, 13), int8], Tensor[(1859, 1), int8], Tensor[(12, 2, 8), float32], Tensor[(18), uint8], Tensor[(180, 1), uint8], Tensor[(192), float32], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(1260), float64]) {
  @func_6963(%var_6965, %var_6966, %var_6967, %var_6968, %var_6969, %var_6970) /* ty=(Tensor[(12, 5, 12), float32], Tensor[(11, 13, 13), int8], Tensor[(1859, 1), int8], Tensor[(12, 2, 8), float32], Tensor[(18), uint8], Tensor[(180, 1), uint8], Tensor[(192), float32], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1170), float64], Tensor[(1260), float64], Tensor[(1260), float64]) */
}

def @func_5193() -> (Tensor[(12, 5, 12), float32], Tensor[(4, 48), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(702), float32], Tensor[(12, 5, 12), float64]) {
  @func_5191() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(4, 48), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(702), float32], Tensor[(12, 5, 12), float64]) */
}

def @func_4324() -> (Tensor[(12, 5, 12), float32],) {
  @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */
}

def @func_7487() -> (uint8, Tensor[(11, 13, 13), int8], Tensor[(13, 143), uint64]) {
  %1000 = @func_4757() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(12, 2, 8), float32], uint8) */;
  %1001 = cast(meta[relay.Constant][61] /* ty=Tensor[(13, 143), int8] */, dtype="int8") /* ty=Tensor[(13, 143), int8] */;
  %1002 = cast(meta[relay.Constant][61] /* ty=Tensor[(13, 143), int8] */, dtype="int8") /* ty=Tensor[(13, 143), int8] */;
  %1003 = reshape(%1001, newshape=[11, 13, 13]) /* ty=Tensor[(11, 13, 13), int8] */;
  %1004 = reshape(%1002, newshape=[11, 13, 13]) /* ty=Tensor[(11, 13, 13), int8] */;
  %1005 = cast(meta[relay.Constant][62] /* ty=Tensor[(13, 143), int8] */, dtype="uint64") /* ty=Tensor[(13, 143), uint64] */;
  %1006 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(13, 143), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1007 = cast(meta[relay.Constant][61] /* ty=Tensor[(13, 143), int8] */, dtype="uint64") /* ty=Tensor[(13, 143), uint64] */;
  %1008 = dyn.reshape(%1005, %1006, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1009 = %1000.3;
  %1010 = @func_2616(%1003, %1004) /* ty=Tensor[(11, 13, 13), int8] */;
  %1011 = bitwise_xor(%1007, %1008) /* ty=Tensor[(13, 143), uint64] */;
  (%1009, %1010, %1011)
}

def @func_3150(%var_3147: Tensor[(192), float32], %var_3148: Tensor[(18), uint8], %var_3149: Tensor[(1, 1170), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) {
  %1034 = fn (%var_3126: Tensor[(192), float32], %var_3130: Tensor[(18), uint8], %var_3135: Tensor[(1, 1170), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) {
    %1012 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %1013 = cast(%var_3126, dtype="float32") /* ty=Tensor[(192), float32] */;
    %1014 = reshape(%1013, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %1015 = @func_574(%1014) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
    %1016 = cast(%var_3130, dtype="uint8") /* ty=Tensor[(18), uint8] */;
    %1017 = cast(meta[relay.Constant][63] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %1018 = cast(%var_3126, dtype="float32") /* ty=Tensor[(192), float32] */;
    %1019 = cast(meta[relay.Constant][64] /* ty=Tensor[(1950), int8] */, dtype="int8") /* ty=Tensor[(1950), int8] */;
    %1020 = cast(meta[relay.Constant][65] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
    %1021 = cast(meta[relay.Constant][66] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
    %1022 = cast(%var_3135, dtype="float64") /* ty=Tensor[(1, 1170), float64] */;
    %1023 = reshape(%1016, newshape=[3, 1, 6]) /* ty=Tensor[(3, 1, 6), uint8] */;
    %1024 = reshape(%1017, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), uint8] */;
    %1025 = reshape(%1018, newshape=[8, 24]) /* ty=Tensor[(8, 24), float32] */;
    %1026 = reshape(%1019, newshape=[1950]) /* ty=Tensor[(1950), int8] */;
    %1027 = reshape(%1020, newshape=[208]) /* ty=Tensor[(208), float64] */;
    %1028 = reshape(%1021, newshape=[21]) /* ty=Tensor[(21), float32] */;
    %1029 = reshape(%1022, newshape=[5, 234]) /* ty=Tensor[(5, 234), float64] */;
    %1030 = @func_1816(%1023, %1024, %1025, %1026, %1027, %1028, %1029) /* ty=(Tensor[(3, 10, 6), uint8], Tensor[(14, 14, 5), float64], Tensor[(8, 24), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(1950), int8], Tensor[(208), float64], float32, Tensor[(21), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(6, 13, 15), float64], Tensor[(5, 234), float64]) */;
    %1031 = %1012.0;
    %1032 = %1015.0;
    %1033 = %1030.0;
    (%1031, %1032, %var_3126, %1033, %var_3130, meta[relay.Constant][63] /* ty=Tensor[(180), uint8] */, meta[relay.Constant][64] /* ty=Tensor[(1950), int8] */, meta[relay.Constant][65] /* ty=Tensor[(208), float64] */, meta[relay.Constant][66] /* ty=Tensor[(21), float32] */, %var_3135)
  };
  %1034(%var_3147, %var_3148, %var_3149) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */
}

def @func_2199(%var_2164: uint16, %var_2165: Tensor[(1, 15, 2), uint16], %var_2196: Tensor[(4, 48), float32]) -> (Tensor[(1, 15, 2), uint16], Tensor[(192, 1), float32], Tensor[(208), float64], Tensor[(4, 48), float32]) {
  %1035 = cast(%var_2164, dtype="uint16") /* ty=uint16 */;
  %1036 = cast(%var_2165, dtype="uint16") /* ty=Tensor[(1, 15, 2), uint16] */;
  %1037 = cast(meta[relay.Constant][67] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1038 = cast(%var_2196, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %1039 = cast(meta[relay.Constant][67] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1040 = reshape(%1037, newshape=[16, 13, 1]) /* ty=Tensor[(16, 13, 1), float64] */;
  %1041 = reshape(%1038, newshape=[192, 1]) /* ty=Tensor[(192, 1), float32] */;
  %1042 = reshape(%1039, newshape=[16, 13, 1]) /* ty=Tensor[(16, 13, 1), float64] */;
  %1043 = @func_961(%1040, %1041, %1042) /* ty=(Tensor[(12, 2, 8), float32], Tensor[(192, 1), float32], Tensor[(16, 13, ?), float64]) */;
  %1044 = add(%1035, %1036) /* ty=Tensor[(1, 15, 2), uint16] */;
  %1045 = %1043.1;
  (%1044, %1045, meta[relay.Constant][67] /* ty=Tensor[(208), float64] */, %var_2196)
}

def @func_9017() -> (Tensor[(45), float64], Tensor[(12, 5, 12), float32]) {
  @func_9015() /* ty=(Tensor[(45), float64], Tensor[(12, 5, 12), float32]) */
}

def @func_3091() -> Tensor[(12, 5, 12), float64] {
  %1046 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %1046.0
}

def @func_4299(%var_4292: Tensor[(18), uint8], %var_4294: Tensor[(650, 3), int8], %var_4295: Tensor[(208), float64], %var_4296: Tensor[(21, 1), float32], %var_4297: Tensor[(1170), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(192), float32], Tensor[(14, 14, 5), bool], Tensor[(6, 13, 15), float64], Tensor[(18), uint8], Tensor[(180, 1), uint8], Tensor[(650, 3), int8], Tensor[(208), float64], Tensor[(21, 1), float32], Tensor[(1170), float64]) {
  %1047 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %1048 = cast(meta[relay.Constant][68] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1049 = reshape(%1048, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1050 = @func_574(%1049) /* ty=(Tensor[(14, 14, 5), float64], Tensor[(12, 2, 8), float32], Tensor[(192), float32]) */;
  %1051 = %1050.0;
  %1052 = cast(meta[relay.Constant][69] /* ty=Tensor[(14, 14, 5), float64] */, dtype="bool") /* ty=Tensor[(14, 14, 5), bool] */;
  %1053 = shape_of(%1051, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1054 = cast(%1051, dtype="bool") /* ty=Tensor[(14, 14, 5), bool] */;
  %1055 = dyn.reshape(%1052, %1053, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1056 = cast(%var_4292, dtype="uint8") /* ty=Tensor[(18), uint8] */;
  %1057 = cast(meta[relay.Constant][70] /* ty=Tensor[(180, 1), uint8] */, dtype="uint8") /* ty=Tensor[(180, 1), uint8] */;
  %1058 = cast(meta[relay.Constant][68] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %1059 = cast(%var_4294, dtype="int8") /* ty=Tensor[(650, 3), int8] */;
  %1060 = cast(%var_4295, dtype="float64") /* ty=Tensor[(208), float64] */;
  %1061 = cast(%var_4296, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %1062 = cast(%var_4297, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %1063 = reshape(%1056, newshape=[3, 1, 6]) /* ty=Tensor[(3, 1, 6), uint8] */;
  %1064 = reshape(%1057, newshape=[3, 10, 6]) /* ty=Tensor[(3, 10, 6), uint8] */;
  %1065 = reshape(%1058, newshape=[8, 24]) /* ty=Tensor[(8, 24), float32] */;
  %1066 = reshape(%1059, newshape=[1950]) /* ty=Tensor[(1950), int8] */;
  %1067 = reshape(%1060, newshape=[208]) /* ty=Tensor[(208), float64] */;
  %1068 = reshape(%1061, newshape=[21]) /* ty=Tensor[(21), float32] */;
  %1069 = reshape(%1062, newshape=[5, 234]) /* ty=Tensor[(5, 234), float64] */;
  %1070 = @func_1816(%1063, %1064, %1065, %1066, %1067, %1068, %1069) /* ty=(Tensor[(3, 10, 6), uint8], Tensor[(14, 14, 5), float64], Tensor[(8, 24), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(3, ?, 7), bool], Tensor[(1950), int8], Tensor[(208), float64], float32, Tensor[(21), float32], Tensor[(3, 10, 6), float32], Tensor[(12, 2, 8), float32], Tensor[(6, 13, 15), float64], Tensor[(5, 234), float64]) */;
  %1071 = %1047.0;
  %1072 = not_equal(%1054, %1055) /* ty=Tensor[(14, 14, 5), bool] */;
  %1073 = %1070.12;
  (%1071, meta[relay.Constant][68] /* ty=Tensor[(192), float32] */, %1072, %1073, %var_4292, meta[relay.Constant][70] /* ty=Tensor[(180, 1), uint8] */, %var_4294, %var_4295, %var_4296, %var_4297)
}

def @func_5191() -> (Tensor[(12, 5, 12), float32], Tensor[(4, 48), float32], Tensor[(1170), float64], Tensor[(12, 5, 12), float32], Tensor[(702), float32], Tensor[(12, 5, 12), float64]) {
  %1074 = @func_3430() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %1075 = @func_3878() /* ty=(Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), int16], Tensor[(30), uint16]) */;
  %1076 = %1075.0;
  %1077 = cast(%1076, dtype="float32") /* ty=Tensor[(12, 5, 12), float32] */;
  %1078 = %1074.0;
  %1079 = cast(%1078, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
  %1080 = cast(meta[relay.Constant][71] /* ty=Tensor[(4, 48), float32] */, dtype="float32") /* ty=Tensor[(4, 48), float32] */;
  %1081 = cast(meta[relay.Constant][72] /* ty=Tensor[(1170), float64] */, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %1082 = reshape(%1079, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
  %1083 = reshape(%1080, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %1084 = reshape(%1081, newshape=[1170]) /* ty=Tensor[(1170), float64] */;
  %1085 = @func_3693(%1082, %1083, %1084) /* ty=(Tensor[(12, 5, 12), float32], Tensor[(3, 6), uint8], Tensor[(702), uint32], Tensor[(192), float32], Tensor[(1170), float64]) */;
  %1086 = %1085.2;
  %1087 = cast(%1086, dtype="float32") /* ty=Tensor[(702), float32] */;
  %1088 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %1089 = erf(%1077) /* ty=Tensor[(12, 5, 12), float32] */;
  %1090 = tan(%1087) /* ty=Tensor[(702), float32] */;
  %1091 = %1088.0;
  (%1078, meta[relay.Constant][71] /* ty=Tensor[(4, 48), float32] */, meta[relay.Constant][72] /* ty=Tensor[(1170), float64] */, %1089, %1090, %1091)
}

def @func_7027() -> (Tensor[(12, 5, 12), float64],) {
  @func_7025() /* ty=(Tensor[(12, 5, 12), float64],) */
}

def @func_8065() -> (Tensor[(12, 5, 12), float64], Tensor[(45), float64]) {
  %1095 = fn () -> (Tensor[(12, 5, 12), float64], Tensor[(45), float64]) {
    %1092 = @func_5381() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(45), float64], Tensor[(10, 3), uint16]) */;
    %1093 = @func_3629() /* ty=Tensor[(12, 5, 12), float64] */;
    %1094 = %1092.2;
    (%1093, %1094)
  };
  %1095() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(45), float64]) */
}

def @func_2979() -> (Tensor[(12, 5, 12), float64],) {
  @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */
}

def @func_3921() -> Tensor[(12, 5, 12), float64] {
  %1097 = fn () -> Tensor[(12, 5, 12), float64] {
    %1096 = @func_3783() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64]) */;
    %1096.1
  };
  %1097() /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_6616(%var_6614: Tensor[(1170), float64], %var_6615: Tensor[(8, 24), float32]) -> (Tensor[(12, 5, 12), uint64], Tensor[(208), float64], Tensor[(18), uint8], Tensor[(1170), float64], Tensor[(8, 24), bool], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(1950), int8], Tensor[(234, 3), uint32], Tensor[(96), float32], Tensor[(8, 24), bool]) {
  %1140 = fn (%var_6505: Tensor[(1170), float64], %var_6605: Tensor[(8, 24), float32]) -> (Tensor[(12, 5, 12), uint64], Tensor[(208), float64], Tensor[(18), uint8], Tensor[(1170), float64], Tensor[(8, 24), bool], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(1950), int8], Tensor[(234, 3), uint32], Tensor[(96), float32], Tensor[(8, 24), bool]) {
    %1098 = @func_6066() /* ty=(Tensor[(12, 5, 12), uint64],) */;
    %1099 = cast(meta[relay.Constant][73] /* ty=Tensor[(8, 24), float32] */, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
    %1100 = cast(meta[relay.Constant][74] /* ty=Tensor[(18), uint8] */, dtype="uint8") /* ty=Tensor[(18), uint8] */;
    %1101 = cast(%var_6505, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %1102 = reshape(%1099, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %1103 = reshape(%1100, newshape=[18]) /* ty=Tensor[(18), uint8] */;
    %1104 = reshape(%1101, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), float64] */;
    %1105 = @func_3146(%1102, %1103, %1104) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */;
    %1106 = cast(meta[relay.Constant][75] /* ty=Tensor[(8, 24), float32] */, dtype="bool") /* ty=Tensor[(8, 24), bool] */;
    %1107 = shape_of(meta[relay.Constant][73] /* ty=Tensor[(8, 24), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1108 = cast(meta[relay.Constant][73] /* ty=Tensor[(8, 24), float32] */, dtype="bool") /* ty=Tensor[(8, 24), bool] */;
    %1109 = dyn.reshape(%1106, %1107, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1110 = @func_3944() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %1111 = @func_2977() /* ty=(Tensor[(12, 5, 12), float64],) */;
    %1112 = @func_4757() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(12, 2, 8), float32], uint8) */;
    %1113 = logical_and(%1108, %1109) /* ty=Tensor[(8, 24), bool] */;
    %1114 = cast(%1113, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
    %1115 = cast(meta[relay.Constant][74] /* ty=Tensor[(18), uint8] */, dtype="uint8") /* ty=Tensor[(18), uint8] */;
    %1116 = cast(%var_6505, dtype="float64") /* ty=Tensor[(1170), float64] */;
    %1117 = reshape(%1114, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %1118 = reshape(%1115, newshape=[18]) /* ty=Tensor[(18), uint8] */;
    %1119 = reshape(%1116, newshape=[1, 1170]) /* ty=Tensor[(1, 1170), float64] */;
    %1120 = @func_3146(%1117, %1118, %1119) /* ty=(Tensor[(12, 5, 12), float64], Tensor[(14, 14, 5), float64], Tensor[(192), float32], Tensor[(3, 10, 6), uint8], Tensor[(18), uint8], Tensor[(180), uint8], Tensor[(1950), int8], Tensor[(208), float64], Tensor[(21), float32], Tensor[(1, 1170), float64]) */;
    %1121 = %1110.0;
    %1122 = cast(%1121, dtype="float64") /* ty=Tensor[(12, 5, 12), float64] */;
    %1123 = cast(meta[relay.Constant][76] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %1124 = reshape(%1122, newshape=[12, 5, 12]) /* ty=Tensor[(12, 5, 12), float64] */;
    %1125 = reshape(%1123, newshape=[96]) /* ty=Tensor[(96), float32] */;
    %1126 = @func_4527(%1124, %1125) /* ty=(Tensor[(6, 13, 15), float64], Tensor[(390, 3), float64], Tensor[(12, 5, 12), float32], Tensor[(1170), float64], Tensor[(234, 3), uint32], Tensor[(192), float32], Tensor[(2, 8, 6), float32], Tensor[(96), float32], Tensor[(2, 8, 6), float32], Tensor[(234), float32]) */;
    %1127 = cast(meta[relay.Constant][73] /* ty=Tensor[(8, 24), float32] */, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
    %1128 = atan(%1127) /* ty=Tensor[(8, 24), float32] */;
    %1129 = cast(%var_6605, dtype="bool") /* ty=Tensor[(8, 24), bool] */;
    %1130 = shape_of(%1128, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1131 = cast(%1128, dtype="bool") /* ty=Tensor[(8, 24), bool] */;
    %1132 = dyn.reshape(%1129, %1130, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1133 = %1098.0;
    %1134 = %1105.7;
    %1135 = %1111.0;
    %1136 = %1112.1;
    %1137 = %1120.6;
    %1138 = %1126.4;
    %1139 = equal(%1131, %1132) /* ty=Tensor[(8, 24), bool] */;
    (%1133, %1134, meta[relay.Constant][74] /* ty=Tensor[(18), uint8] */, %var_6505, %1113, %1121, %1135, %1136, %1137, %1138, meta[relay.Constant][76] /* ty=Tensor[(96), float32] */, %1139)
  };
  %1140(%var_6614, %var_6615) /* ty=(Tensor[(12, 5, 12), uint64], Tensor[(208), float64], Tensor[(18), uint8], Tensor[(1170), float64], Tensor[(8, 24), bool], Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float64], Tensor[(1, 192), float32], Tensor[(1950), int8], Tensor[(234, 3), uint32], Tensor[(96), float32], Tensor[(8, 24), bool]) */
}

def @func_5984(%var_5981: Tensor[(1260), float64]) -> (Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32], Tensor[(12, 5, 12), float64], Tensor[(1260), float64]) {
  %1141 = @func_3944() /* ty=(Tensor[(12, 5, 12), float64],) */;
  %1142 = @func_4322() /* ty=(Tensor[(12, 5, 12), float32],) */;
  %1143 = cast(%var_5981, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %1144 = cast(%var_5981, dtype="float64") /* ty=Tensor[(1260), float64] */;
  %1145 = reshape(%1143, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float64] */;
  %1146 = reshape(%1144, newshape=[14, 9, 10]) /* ty=Tensor[(14, 9, 10), float64] */;
  %1147 = @func_5473(%1145, %1146) /* ty=(Tensor[(14, 9, 10), float64], Tensor[(12, 5, 12), float64], Tensor[(4, 14, 8), uint64], Tensor[(448), uint64]) */;
  %1148 = %1141.0;
  %1149 = %1142.0;
  %1150 = %1147.1;
  (%1148, %1149, %1150, %var_5981)
}

def @func_2204(%var_2201: uint16, %var_2202: Tensor[(1, 15, 2), uint16], %var_2203: Tensor[(4, 48), float32]) -> (Tensor[(1, 15, 2), uint16], Tensor[(192, 1), float32], Tensor[(208), float64], Tensor[(4, 48), float32]) {
  @func_2199(%var_2201, %var_2202, %var_2203) /* ty=(Tensor[(1, 15, 2), uint16], Tensor[(192, 1), float32], Tensor[(208), float64], Tensor[(4, 48), float32]) */
}

def @func_7055(%var_7053: Tensor[(12, 5, 12), float64]) -> Tensor[(12, 5, 12), float64] {
  @func_7052(%var_7053) /* ty=Tensor[(12, 5, 12), float64] */
}

def @func_2977() -> (Tensor[(12, 5, 12), float64],) {
  %1151 = @func_2679() /* ty=(Tensor[(12, 5, 12), float64], Tensor[(12, 5, 12), float32]) */;
  %1152 = %1151.0;
  (%1152,)
}

def @func_1686(%var_1684: Tensor[(1170), float64]) -> (Tensor[(6, 15, 16), float32], Tensor[(6, 13, 15), float64], Tensor[(1170), float64]) {
  %1153 = cast(meta[relay.Constant][77] /* ty=Tensor[(6, 15, 16), float64] */, dtype="float64") /* ty=Tensor[(6, 15, 16), float64] */;
  %1154 = acos(%1153) /* ty=Tensor[(6, 15, 16), float64] */;
  %1155 = cast(%1154, dtype="float32") /* ty=Tensor[(6, 15, 16), float32] */;
  %1156 = cast(%var_1684, dtype="float64") /* ty=Tensor[(1170), float64] */;
  %1157 = reshape(%1156, newshape=[6, 13, 15]) /* ty=Tensor[(6, 13, 15), float64] */;
  %1158 = acosh(%1155) /* ty=Tensor[(6, 15, 16), float32] */;
  %1159 = @func_1471(%1157) /* ty=Tensor[(6, 13, 15), float64] */;
  (%1158, %1159, %var_1684)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen489/build/output.py:2867: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen489/build/output.py", line 2872, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_asinh_kernel0(double* __restrict__ T_asinh, double* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1344) {
    T_asinh[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = asinh(placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


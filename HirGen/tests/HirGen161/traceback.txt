==========mod==========
#[version = "0.0.5"]
def @func_4114() -> (Tensor[(660, 2), bool],) {
  %0 = @func_3677() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */;
  %1 = %0.0;
  (%1,)
}

def @func_3677() -> (Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) {
  %2 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
  %3 = %2.2;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(660, 2), float64] */, dtype="bool") /* ty=Tensor[(660, 2), bool] */;
  %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(2), int32] */;
  %6 = cast(%3, dtype="bool") /* ty=Tensor[(660, 2), bool] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %8 = @func_2740() /* ty=(int8,) */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(660, 2), float64] */, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %10 = reshape(%9, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %11 = @func_2116(%10) /* ty=(Tensor[(660, 2), float64],) */;
  %12 = logical_or(%6, %7) /* ty=Tensor[(660, 2), bool] */;
  %13 = %8.0;
  %14 = %11.0;
  (%12, %13, %14)
}

def @func_2116(%var_2080: Tensor[(660, 2), float64]) -> (Tensor[(660, 2), float64],) {
  %15 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
  %16 = %15.2;
  %17 = cast(%var_2080, dtype="bool") /* ty=Tensor[(660, 2), bool] */;
  %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(2), int32] */;
  %19 = cast(%16, dtype="bool") /* ty=Tensor[(660, 2), bool] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %21 = greater_equal(%19, %20) /* ty=Tensor[(660, 2), bool] */;
  %22 = cast(%var_2080, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %23 = rsqrt(%22) /* ty=Tensor[(660, 2), float64] */;
  %24 = cast(%23, dtype="bool") /* ty=Tensor[(660, 2), bool] */;
  %25 = shape_of(%21, dtype="int32") /* ty=Tensor[(2), int32] */;
  %26 = cast(%21, dtype="bool") /* ty=Tensor[(660, 2), bool] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %28 = less_equal(%26, %27) /* ty=Tensor[(660, 2), bool] */;
  %29 = cast(%28, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %30 = cos(%29) /* ty=Tensor[(660, 2), float64] */;
  (%30,)
}

def @func_3511() -> (Tensor[(4, 11, 16), float32], int8) {
  %31 = @func_1201() /* ty=(Tensor[(4, 11, 16), float32],) */;
  %32 = @func_2740() /* ty=(int8,) */;
  %33 = %31.0;
  %34 = %32.0;
  (%33, %34)
}

def @func_801() -> (Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) {
  %35 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
  %36 = cast(%35, dtype="float64") /* ty=Tensor[(10, 13, 11), float64] */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %39 = cast(meta[relay.Constant][2] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %40 = reshape(%37, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %41 = reshape(%38, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %42 = reshape(%39, newshape=[]) /* ty=int8 */;
  %43 = @func_600(%40, %41, %42) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) */;
  %44 = %43.2;
  %45 = cast(%44, dtype="float32") /* ty=Tensor[(704), float32] */;
  %46 = cast(%44, dtype="float32") /* ty=Tensor[(704), float32] */;
  %47 = cast(meta[relay.Constant][2] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %48 = cast(meta[relay.Constant][3] /* ty=Tensor[(143, 15), int8] */, dtype="int8") /* ty=Tensor[(143, 15), int8] */;
  %49 = reshape(%45, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), float32] */;
  %50 = reshape(%46, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), float32] */;
  %51 = reshape(%47, newshape=[]) /* ty=int8 */;
  %52 = reshape(%48, newshape=[2145, 1]) /* ty=Tensor[(2145, 1), int8] */;
  %53 = @func_536(%49, %50, %51, %52) /* ty=(Tensor[(4, 11, 16), float32], Tensor[(2145, 1), int8], Tensor[(15, 11, 13), bool]) */;
  %54 = tan(%36) /* ty=Tensor[(10, 13, 11), float64] */;
  %55 = %53.0;
  (%54, %44, meta[relay.Constant][1] /* ty=Tensor[(1320), float64] */, meta[relay.Constant][2] /* ty=int8 */, %55, meta[relay.Constant][3] /* ty=Tensor[(143, 15), int8] */)
}

def @func_6065() -> (int8,) {
  %56 = @func_3195() /* ty=(int8, int8) */;
  %57 = %56.0;
  (%57,)
}

def @func_6220(%var_6215: Tensor[(15, 12, 2), int8]) -> (Tensor[(15, 11, 13), int8], Tensor[(15, 12, 2), int8]) {
  %58 = @func_1703() /* ty=(int8, Tensor[(15, 11, 13), int8], Tensor[(2145), int8], Tensor[(3, 10, 13), float32], Tensor[(390), int16]) */;
  %59 = @func_2851() /* ty=(int8,) */;
  %60 = %59.0;
  %61 = cast(%60, dtype="int8") /* ty=int8 */;
  %62 = cast(%var_6215, dtype="int8") /* ty=Tensor[(15, 12, 2), int8] */;
  %63 = %58.1;
  %64 = bitwise_xor(%61, %62) /* ty=Tensor[(15, 12, 2), int8] */;
  (%63, %64)
}

def @func_4244() -> (Tensor[(10, 13, 11), float64], Tensor[(4, 11, 16), float32]) {
  %65 = @func_3121() /* ty=Tensor[(10, 13, 11), float64] */;
  %66 = cast(%65, dtype="float64") /* ty=Tensor[(10, 13, 11), float64] */;
  %67 = @func_1201() /* ty=(Tensor[(4, 11, 16), float32],) */;
  %68 = sigmoid(%66) /* ty=Tensor[(10, 13, 11), float64] */;
  %69 = %67.0;
  (%68, %69)
}

def @func_6503(%var_6480: Tensor[(10, 13, 11), float64]) -> (Tensor[(10, 13, 11), int8],) {
  %70 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
  %71 = cast(%var_6480, dtype="int8") /* ty=Tensor[(10, 13, 11), int8] */;
  %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(%70, dtype="int8") /* ty=Tensor[(10, 13, 11), int8] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %75 = left_shift(%73, %74) /* ty=Tensor[(10, 13, 11), int8] */;
  (%75,)
}

def @func_4820(%var_4781: uint8) -> (Tensor[(2, 15, 14), uint8], Tensor[(2145), int8], Tensor[(1320), uint64], Tensor[(660, 2), float64], Tensor[(15, 11, 13), bool], Tensor[(1320), float64]) {
  %76 = cast(%var_4781, dtype="uint8") /* ty=uint8 */;
  %77 = cast(meta[relay.Constant][4] /* ty=Tensor[(2, 15, 14), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 14), uint8] */;
  %78 = @func_1703() /* ty=(int8, Tensor[(15, 11, 13), int8], Tensor[(2145), int8], Tensor[(3, 10, 13), float32], Tensor[(390), int16]) */;
  %79 = @func_3057() /* ty=(int8, Tensor[(1320), float64]) */;
  %80 = %79.0;
  %81 = @func_3902() /* ty=(Tensor[(1320), float64], Tensor[(1320), float64]) */;
  %82 = %81.1;
  %83 = cast(%80, dtype="uint64") /* ty=uint64 */;
  %84 = cast(%82, dtype="uint64") /* ty=Tensor[(1320), uint64] */;
  %85 = cast(%82, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %86 = reshape(%85, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %87 = @func_2116(%86) /* ty=(Tensor[(660, 2), float64],) */;
  %88 = add(%83, %84) /* ty=Tensor[(1320), uint64] */;
  %89 = cast(%88, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %90 = cast(%88, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %91 = cast(%var_4781, dtype="int8") /* ty=int8 */;
  %92 = reshape(%89, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %93 = reshape(%90, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %94 = reshape(%91, newshape=[]) /* ty=int8 */;
  %95 = @func_600(%92, %93, %94) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) */;
  %96 = @func_2039() /* ty=(Tensor[(10, 13, 11), bool], Tensor[(15, 11, 13), int8], Tensor[(1280), float64], int8, Tensor[(1320), float64]) */;
  %97 = subtract(%76, %77) /* ty=Tensor[(2, 15, 14), uint8] */;
  %98 = %78.2;
  %99 = %87.0;
  %100 = %95.1;
  %101 = %96.4;
  (%97, %98, %88, %99, %100, %101)
}

def @func_2851() -> (int8,) {
  %102 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %103 = %102.3;
  (%103,)
}

def @func_6524() -> (Tensor[(10, 13, 11), float64],) {
  %104 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %105 = %104.0;
  (%105,)
}

def @func_5198(%var_5166: Tensor[(7, 10, 10), float64]) -> (Tensor[(7, 10, 10), float64], Tensor[(10, 13, 11), bool], Tensor[(4, 11, 16), float64], int8, Tensor[(10, 13, 11), float64]) {
  %106 = cast(%var_5166, dtype="float64") /* ty=Tensor[(7, 10, 10), float64] */;
  %107 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(7, 10, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 10, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 10), float64] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %110 = @func_3159() /* ty=(int8,) */;
  %111 = @func_3623() /* ty=(Tensor[(10, 13, 11), float64],) */;
  %112 = floor_mod(%108, %109) /* ty=Tensor[(7, 10, 10), float64] */;
  %113 = @func_1973() /* ty=Tensor[(10, 13, 11), bool] */;
  %114 = @func_2272() /* ty=Tensor[(4, 11, 16), float64] */;
  %115 = %110.0;
  %116 = %111.0;
  (%112, %113, %114, %115, %116)
}

def @func_1703() -> (int8, Tensor[(15, 11, 13), int8], Tensor[(2145), int8], Tensor[(3, 10, 13), float32], Tensor[(390), int16]) {
  %117 = @func_1434() /* ty=(int8,) */;
  %118 = %117.0;
  %119 = cast(%118, dtype="int8") /* ty=int8 */;
  %120 = cast(meta[relay.Constant][6] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %121 = reshape(%119, newshape=[]) /* ty=int8 */;
  %122 = reshape(%120, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %123 = cast(meta[relay.Constant][7] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
  %124 = cast(meta[relay.Constant][7] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
  %125 = @func_148(%121, %122) /* ty=Tensor[(15, 11, 13), int8] */;
  %126 = cast(%125, dtype="int8") /* ty=Tensor[(15, 11, 13), int8] */;
  %127 = reshape(%123, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %128 = reshape(%124, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %129 = reshape(%126, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
  %130 = @func_1499(%127, %128, %129) /* ty=(Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) */;
  %131 = %130.2;
  (%118, %125, meta[relay.Constant][6] /* ty=Tensor[(2145), int8] */, %131, meta[relay.Constant][7] /* ty=Tensor[(390), int16] */)
}

def @func_5738() -> (Tensor[(1280), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(2145), float64]) {
  %132 = @func_2039() /* ty=(Tensor[(10, 13, 11), bool], Tensor[(15, 11, 13), int8], Tensor[(1280), float64], int8, Tensor[(1320), float64]) */;
  %133 = cast(meta[relay.Constant][8] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %134 = cast(meta[relay.Constant][9] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %135 = reshape(%133, newshape=[]) /* ty=int8 */;
  %136 = reshape(%134, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %137 = cast(meta[relay.Constant][9] /* ty=Tensor[(2145), int8] */, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %138 = %132.2;
  %139 = @func_148(%135, %136) /* ty=Tensor[(15, 11, 13), int8] */;
  %140 = log10(%137) /* ty=Tensor[(2145), float64] */;
  (%138, %139, meta[relay.Constant][8] /* ty=int8 */, %140)
}

def @func_4677(%var_4652: Tensor[(15, 15, 6), float64], %var_4672: Tensor[(1470), float32]) -> (Tensor[(15, 15, 6), float64], Tensor[(40, 2), bool], Tensor[(2145), int8], Tensor[(1470), float32]) {
  %141 = cast(%var_4652, dtype="float64") /* ty=Tensor[(15, 15, 6), float64] */;
  %142 = asin(%141) /* ty=Tensor[(15, 15, 6), float64] */;
  %143 = cast(%142, dtype="float64") /* ty=Tensor[(15, 15, 6), float64] */;
  %144 = @func_1902() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(40, 2), bool], Tensor[(1320), float64], Tensor[(40, 2), bool], Tensor[(10, 13, 11), float64]) */;
  %145 = cast(%var_4672, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %146 = reshape(%145, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %147 = @func_2153(%146) /* ty=(Tensor[(7, 14, 15), float32], int8, Tensor[(2145), int8]) */;
  %148 = log2(%143) /* ty=Tensor[(15, 15, 6), float64] */;
  %149 = %144.1;
  %150 = %147.2;
  (%148, %149, %150, %var_4672)
}

def @func_3695() -> (Tensor[(10, 13, 11), float64],) {
  %151 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %152 = %151.0;
  (%152,)
}

def @func_1648(%var_1525: int16, %var_1526: Tensor[(4, 3, 1), int16], %var_1587: Tensor[(4, 3, 13), bool]) -> (Tensor[(4, 3, 1), int16], Tensor[(40), float32], Tensor[(11, 195), bool], Tensor[(4, 3, ?), float32], Tensor[(4, 3, 13), bool], Tensor[(4, 3, ?), uint16], Tensor[(1320), float64], Tensor[(11, 8, 15), float64], Tensor[(4, 3, 40), int32]) {
  %153 = cast(%var_1525, dtype="int16") /* ty=int16 */;
  %154 = cast(%var_1526, dtype="int16") /* ty=Tensor[(4, 3, 1), int16] */;
  %155 = cast(meta[relay.Constant][10] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %156 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 195), bool] */, dtype="bool") /* ty=Tensor[(11, 195), bool] */;
  %157 = reshape(%155, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %158 = reshape(%156, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), bool] */;
  %159 = @func_1088(%157, %158) /* ty=(Tensor[(10, 13, 11), float64], Tensor[(40), float32], int8, Tensor[(15, 11, 13), bool]) */;
  %160 = cast(%var_1526, dtype="float64") /* ty=Tensor[(4, 3, 1), float64] */;
  %161 = rsqrt(%160) /* ty=Tensor[(4, 3, 1), float64] */;
  %162 = cast(%161, dtype="float32") /* ty=Tensor[(4, 3, 1), float32] */;
  %163 = atan(%162) /* ty=Tensor[(4, 3, 1), float32] */;
  %164 = cast(%163, dtype="bool") /* ty=Tensor[(4, 3, 1), bool] */;
  %165 = cast(%var_1525, dtype="bool") /* ty=bool */;
  %166 = less_equal(%164, %165) /* ty=Tensor[(4, 3, 1), bool] */;
  %167 = cast(%166, dtype="float64") /* ty=Tensor[(4, 3, 1), float64] */;
  %168 = atanh(%167) /* ty=Tensor[(4, 3, 1), float64] */;
  %169 = cast(%161, dtype="float32") /* ty=Tensor[(4, 3, 1), float32] */;
  %170 = shape_of(%168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %171 = cast(%168, dtype="float32") /* ty=Tensor[(4, 3, 1), float32] */;
  %172 = dyn.reshape(%169, %170, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %173 = cast(%166, dtype="bool") /* ty=Tensor[(4, 3, 1), bool] */;
  %174 = cast(%var_1587, dtype="bool") /* ty=Tensor[(4, 3, 13), bool] */;
  %175 = cast(%166, dtype="bool") /* ty=Tensor[(4, 3, 1), bool] */;
  %176 = shape_of(%168, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(%168, dtype="bool") /* ty=Tensor[(4, 3, 1), bool] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %179 = logical_or(%177, %178) /* ty=Tensor[(4, 3, ?), bool] */;
  %180 = cast(%var_1525, dtype="uint16") /* ty=uint16 */;
  %181 = cast(%179, dtype="uint16") /* ty=Tensor[(4, 3, ?), uint16] */;
  %182 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
  %183 = cast(%168, dtype="float64") /* ty=Tensor[(4, 3, 1), float64] */;
  %184 = log10(%183) /* ty=Tensor[(4, 3, 1), float64] */;
  %185 = cast(%184, dtype="int16") /* ty=Tensor[(4, 3, 1), int16] */;
  %186 = cast(meta[relay.Constant][10] /* ty=Tensor[(40), float32] */, dtype="int16") /* ty=Tensor[(40), int16] */;
  %187 = add(%185, %186) /* ty=Tensor[(4, 3, 40), int16] */;
  %188 = cast(%187, dtype="float32") /* ty=Tensor[(4, 3, 40), float32] */;
  %189 = sin(%188) /* ty=Tensor[(4, 3, 40), float32] */;
  %190 = cast(%168, dtype="float64") /* ty=Tensor[(4, 3, 1), float64] */;
  %191 = acos(%190) /* ty=Tensor[(4, 3, 1), float64] */;
  %192 = cast(%189, dtype="int32") /* ty=Tensor[(4, 3, 40), int32] */;
  %193 = cast(%191, dtype="int32") /* ty=Tensor[(4, 3, 1), int32] */;
  %194 = maximum(%153, %154) /* ty=Tensor[(4, 3, 1), int16] */;
  %195 = %159.1;
  %196 = mod(%171, %172) /* ty=Tensor[(4, 3, ?), float32] */;
  %197 = less_equal(%173, %174) /* ty=Tensor[(4, 3, 13), bool] */;
  %198 = bitwise_xor(%180, %181) /* ty=Tensor[(4, 3, ?), uint16] */;
  %199 = @func_1235() /* ty=Tensor[(1320), float64] */;
  %200 = %182.1;
  %201 = left_shift(%192, %193) /* ty=Tensor[(4, 3, 40), int32] */;
  (%194, %195, meta[relay.Constant][11] /* ty=Tensor[(11, 195), bool] */, %196, %197, %198, %199, %200, %201)
}

def @func_3534() -> (Tensor[(40, 2), bool], Tensor[(40, 2), float32]) {
  %202 = @func_1902() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(40, 2), bool], Tensor[(1320), float64], Tensor[(40, 2), bool], Tensor[(10, 13, 11), float64]) */;
  %203 = @func_2921() /* ty=(Tensor[(40, 2), bool],) */;
  %204 = %203.0;
  %205 = cast(%204, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
  %206 = %202.3;
  %207 = acos(%205) /* ty=Tensor[(40, 2), float32] */;
  (%206, %207)
}

def @func_2331(%var_2308: Tensor[(10, 13, 11), bool]) -> (Tensor[(10, 13, 11), int64], Tensor[(15, 11, 13), int8], Tensor[(715, 3), int8]) {
  %208 = @func_1973() /* ty=Tensor[(10, 13, 11), bool] */;
  %209 = cast(%var_2308, dtype="int64") /* ty=Tensor[(10, 13, 11), int64] */;
  %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(%208, dtype="int64") /* ty=Tensor[(10, 13, 11), int64] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %213 = cast(meta[relay.Constant][12] /* ty=Tensor[(715, 3), int8] */, dtype="int8") /* ty=Tensor[(715, 3), int8] */;
  %214 = reshape(%213, newshape=[715, 3]) /* ty=Tensor[(715, 3), int8] */;
  %215 = @func_1422(%214) /* ty=(Tensor[(10, 13, 11), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(715, 3), int8], Tensor[(15, 11, 13), int8]) */;
  %216 = maximum(%211, %212) /* ty=Tensor[(10, 13, 11), int64] */;
  %217 = %215.4;
  (%216, %217, meta[relay.Constant][12] /* ty=Tensor[(715, 3), int8] */)
}

def @func_1422(%var_1410: Tensor[(715, 3), int8]) -> (Tensor[(10, 13, 11), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(715, 3), int8], Tensor[(15, 11, 13), int8]) {
  %218 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %219 = cast(meta[relay.Constant][13] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %220 = cast(%var_1410, dtype="int8") /* ty=Tensor[(715, 3), int8] */;
  %221 = reshape(%219, newshape=[]) /* ty=int8 */;
  %222 = reshape(%220, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %223 = cast(meta[relay.Constant][13] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %224 = @func_148(%221, %222) /* ty=Tensor[(15, 11, 13), int8] */;
  %225 = cast(%224, dtype="int8") /* ty=Tensor[(15, 11, 13), int8] */;
  %226 = reshape(%223, newshape=[]) /* ty=int8 */;
  %227 = reshape(%225, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %228 = %218.0;
  %229 = @func_148(%226, %227) /* ty=Tensor[(15, 11, 13), int8] */;
  (%228, %224, meta[relay.Constant][13] /* ty=int8 */, %var_1410, %229)
}

def @func_4123() -> (Tensor[(660, 2), float64],) {
  %230 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
  %231 = %230.2;
  (%231,)
}

def @func_2039() -> (Tensor[(10, 13, 11), bool], Tensor[(15, 11, 13), int8], Tensor[(1280), float64], int8, Tensor[(1320), float64]) {
  %232 = cast(meta[relay.Constant][14] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %233 = cast(meta[relay.Constant][15] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %234 = reshape(%232, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), float64] */;
  %235 = reshape(%233, newshape=[]) /* ty=int8 */;
  %236 = @func_1296(%234, %235) /* ty=(Tensor[(10, 16, 8), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(2145), int8], int8) */;
  %237 = @func_1973() /* ty=Tensor[(10, 13, 11), bool] */;
  %238 = %236.1;
  %239 = @func_1235() /* ty=Tensor[(1320), float64] */;
  (%237, %238, meta[relay.Constant][14] /* ty=Tensor[(1280), float64] */, meta[relay.Constant][15] /* ty=int8 */, %239)
}

def @func_1973() -> Tensor[(10, 13, 11), bool] {
  %240 = @func_1434() /* ty=(int8,) */;
  %241 = %240.0;
  %242 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
  %243 = cast(%241, dtype="bool") /* ty=bool */;
  %244 = cast(%242, dtype="bool") /* ty=Tensor[(10, 13, 11), bool] */;
  equal(%243, %244) /* ty=Tensor[(10, 13, 11), bool] */
}

def @func_5463() -> int8 {
  %245 = @func_2740() /* ty=(int8,) */;
  %245.0
}

def @func_536(%var_466: Tensor[(4, 11, 16), float32], %var_467: Tensor[(4, 11, 16), float32], %var_495: int8, %var_496: Tensor[(2145, 1), int8]) -> (Tensor[(4, 11, 16), float32], Tensor[(2145, 1), int8], Tensor[(15, 11, 13), bool]) {
  %246 = cast(%var_467, dtype="float32") /* ty=Tensor[(4, 11, 16), float32] */;
  %247 = shape_of(%var_466, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%var_466, dtype="float32") /* ty=Tensor[(4, 11, 16), float32] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %250 = cast(%var_495, dtype="int8") /* ty=int8 */;
  %251 = cast(%var_496, dtype="int8") /* ty=Tensor[(2145, 1), int8] */;
  %252 = reshape(%250, newshape=[]) /* ty=int8 */;
  %253 = reshape(%251, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %254 = @func_148(%252, %253) /* ty=Tensor[(15, 11, 13), int8] */;
  %255 = cast(%254, dtype="bool") /* ty=Tensor[(15, 11, 13), bool] */;
  %256 = cast(%var_495, dtype="bool") /* ty=bool */;
  %257 = power(%248, %249) /* ty=Tensor[(4, 11, 16), float32] */;
  %258 = equal(%255, %256) /* ty=Tensor[(15, 11, 13), bool] */;
  (%257, %var_496, %258)
}

def @func_6251() -> (int8,) {
  %259 = @func_6228() /* ty=int8 */;
  (%259,)
}

def @func_1088(%var_1069: Tensor[(40), float32], %var_1072: Tensor[(15, 11, 13), bool]) -> (Tensor[(10, 13, 11), float64], Tensor[(40), float32], int8, Tensor[(15, 11, 13), bool]) {
  %260 = cast(%var_1069, dtype="float32") /* ty=Tensor[(40), float32] */;
  %261 = cast(meta[relay.Constant][16] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %262 = reshape(%260, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float32] */;
  %263 = reshape(%261, newshape=[]) /* ty=int8 */;
  %264 = @func_983(%262, %263) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(1320), float64], Tensor[(8, 5, 1), int8], Tensor[(8, 5, ?), bool], Tensor[(704), float32]) */;
  %265 = %264.0;
  %266 = cast(%var_1072, dtype="bool") /* ty=Tensor[(15, 11, 13), bool] */;
  %267 = shape_of(%265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(%265, dtype="bool") /* ty=Tensor[(15, 11, 13), bool] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %270 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
  %271 = greater(%268, %269) /* ty=Tensor[(15, 11, 13), bool] */;
  (%270, %var_1069, meta[relay.Constant][16] /* ty=int8 */, %271)
}

def @func_600(%var_584: Tensor[(11, 8, 15), float64], %var_585: Tensor[(11, 8, 15), float64], %var_592: int8) -> (Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) {
  %272 = cast(%var_585, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
  %273 = shape_of(%var_584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(%var_584, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %276 = cast(meta[relay.Constant][17] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %277 = cast(meta[relay.Constant][17] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %278 = cast(%var_592, dtype="int8") /* ty=int8 */;
  %279 = cast(meta[relay.Constant][18] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %280 = reshape(%276, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), float32] */;
  %281 = reshape(%277, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), float32] */;
  %282 = reshape(%278, newshape=[]) /* ty=int8 */;
  %283 = reshape(%279, newshape=[2145, 1]) /* ty=Tensor[(2145, 1), int8] */;
  %284 = @func_536(%280, %281, %282, %283) /* ty=(Tensor[(4, 11, 16), float32], Tensor[(2145, 1), int8], Tensor[(15, 11, 13), bool]) */;
  %285 = mod(%274, %275) /* ty=Tensor[(11, 8, 15), float64] */;
  %286 = %284.2;
  (%285, %286, meta[relay.Constant][17] /* ty=Tensor[(704), float32] */, %var_592, meta[relay.Constant][18] /* ty=Tensor[(2145), int8] */)
}

def @func_5282() -> (int8, int8) {
  %287 = @func_3057() /* ty=(int8, Tensor[(1320), float64]) */;
  %288 = @func_2740() /* ty=(int8,) */;
  %289 = %287.0;
  %290 = %288.0;
  (%289, %290)
}

def @func_6308(%var_6286: Tensor[(1470), float32]) -> (Tensor[(1470), float32], Tensor[(2, 13, 2145), int16]) {
  %291 = cast(%var_6286, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %292 = reshape(%291, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %293 = @func_2153(%292) /* ty=(Tensor[(7, 14, 15), float32], int8, Tensor[(2145), int8]) */;
  %294 = %293.2;
  %295 = @func_4280() /* ty=Tensor[(2, 13, 1), float64] */;
  %296 = cast(%294, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %297 = cast(%295, dtype="int16") /* ty=Tensor[(2, 13, 1), int16] */;
  %298 = bitwise_and(%296, %297) /* ty=Tensor[(2, 13, 2145), int16] */;
  (%var_6286, %298)
}

def @func_2894(%var_2879: Tensor[(8, 7, 13), float32]) -> (Tensor[(8, 7, 13), float32],) {
  %299 = cast(%var_2879, dtype="float32") /* ty=Tensor[(8, 7, 13), float32] */;
  %300 = tan(%299) /* ty=Tensor[(8, 7, 13), float32] */;
  (%300,)
}

def @func_983(%var_952: Tensor[(8, 5, 1), float32], %var_961: int8) -> (Tensor[(15, 11, 13), bool], Tensor[(1320), float64], Tensor[(8, 5, 1), int8], Tensor[(8, 5, ?), bool], Tensor[(704), float32]) {
  %301 = cast(meta[relay.Constant][19] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %302 = cast(meta[relay.Constant][19] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %303 = cast(%var_961, dtype="int8") /* ty=int8 */;
  %304 = reshape(%301, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %305 = reshape(%302, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %306 = reshape(%303, newshape=[]) /* ty=int8 */;
  %307 = @func_600(%304, %305, %306) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) */;
  %308 = cast(%var_952, dtype="float32") /* ty=Tensor[(8, 5, 1), float32] */;
  %309 = atan(%308) /* ty=Tensor[(8, 5, 1), float32] */;
  %310 = cast(%309, dtype="float64") /* ty=Tensor[(8, 5, 1), float64] */;
  %311 = asinh(%310) /* ty=Tensor[(8, 5, 1), float64] */;
  %312 = cast(%311, dtype="int8") /* ty=Tensor[(8, 5, 1), int8] */;
  %313 = cast(%var_961, dtype="int8") /* ty=int8 */;
  %314 = cast(%var_952, dtype="bool") /* ty=Tensor[(8, 5, 1), bool] */;
  %315 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%311, dtype="bool") /* ty=Tensor[(8, 5, 1), bool] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %318 = cast(meta[relay.Constant][19] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %319 = cast(meta[relay.Constant][19] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %320 = cast(%var_961, dtype="int8") /* ty=int8 */;
  %321 = reshape(%318, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %322 = reshape(%319, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %323 = reshape(%320, newshape=[]) /* ty=int8 */;
  %324 = @func_600(%321, %322, %323) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) */;
  %325 = %307.1;
  %326 = add(%312, %313) /* ty=Tensor[(8, 5, 1), int8] */;
  %327 = equal(%316, %317) /* ty=Tensor[(8, 5, ?), bool] */;
  %328 = %324.2;
  (%325, meta[relay.Constant][19] /* ty=Tensor[(1320), float64] */, %326, %327, %328)
}

def @func_2272() -> Tensor[(4, 11, 16), float64] {
  %329 = @func_1201() /* ty=(Tensor[(4, 11, 16), float32],) */;
  %330 = %329.0;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(4, 11, 16), float64] */;
  acosh(%331) /* ty=Tensor[(4, 11, 16), float64] */
}

def @func_4195() -> (Tensor[(390), int16],) {
  %332 = @func_3551() /* ty=(Tensor[(390), int16],) */;
  %333 = %332.0;
  (%333,)
}

def @func_6228() -> int8 {
  %334 = @func_1434() /* ty=(int8,) */;
  %334.0
}

def @func_2740() -> (int8,) {
  %335 = @func_1434() /* ty=(int8,) */;
  %336 = %335.0;
  (%336,)
}

def @func_1169() -> (Tensor[(10, 13, 11), float64],) {
  %337 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
  (%337,)
}

def @func_6178() -> (Tensor[(715, 3), int8], Tensor[(390), int16], Tensor[(660, 2), int16], Tensor[(10, 13, 11), float32], Tensor[(2145), bool]) {
  %338 = cast(meta[relay.Constant][20] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
  %339 = cast(meta[relay.Constant][20] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
  %340 = cast(meta[relay.Constant][21] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %341 = reshape(%338, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %342 = reshape(%339, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %343 = reshape(%340, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
  %344 = @func_1499(%341, %342, %343) /* ty=(Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) */;
  %345 = @func_3677() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */;
  %346 = %345.0;
  %347 = cast(%346, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %348 = asinh(%347) /* ty=Tensor[(660, 2), float64] */;
  %349 = @func_3195() /* ty=(int8, int8) */;
  %350 = %349.1;
  %351 = cast(%348, dtype="int16") /* ty=Tensor[(660, 2), int16] */;
  %352 = cast(%350, dtype="int16") /* ty=int16 */;
  %353 = @func_6118() /* ty=(Tensor[(10, 13, 11), bool],) */;
  %354 = %353.0;
  %355 = cast(%354, dtype="float32") /* ty=Tensor[(10, 13, 11), float32] */;
  %356 = cast(meta[relay.Constant][21] /* ty=Tensor[(2145), int8] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %357 = cast(%350, dtype="bool") /* ty=bool */;
  %358 = %344.3;
  %359 = add(%351, %352) /* ty=Tensor[(660, 2), int16] */;
  %360 = acos(%355) /* ty=Tensor[(10, 13, 11), float32] */;
  %361 = not_equal(%356, %357) /* ty=Tensor[(2145), bool] */;
  (%358, meta[relay.Constant][20] /* ty=Tensor[(390), int16] */, %359, %360, %361)
}

def @func_5812(%var_5803: Tensor[(2145), int8], %var_5807: Tensor[(135, 10), float64]) -> (Tensor[(135, 10), float32], Tensor[(1, 2145), int8], Tensor[(2145), int8], Tensor[(135, 10), uint8]) {
  %362 = @func_4622() /* ty=(int8, Tensor[(5, 78), int16], Tensor[(11, 195), float32], Tensor[(15, 15, 6), float64], Tensor[(135, 10), float64], Tensor[(11, 195), bool], Tensor[(660, 2), float64]) */;
  %363 = %362.4;
  %364 = cast(%363, dtype="float32") /* ty=Tensor[(135, 10), float32] */;
  %365 = cast(%var_5803, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %366 = reshape(%365, newshape=[1, 2145]) /* ty=Tensor[(1, 2145), int8] */;
  %367 = @func_4169(%366) /* ty=(int8, Tensor[(4, 11, 16), float32], Tensor[(704), float32], Tensor[(1, 2145), int8]) */;
  %368 = cast(%var_5807, dtype="uint8") /* ty=Tensor[(135, 10), uint8] */;
  %369 = shape_of(%363, dtype="int32") /* ty=Tensor[(2), int32] */;
  %370 = cast(%363, dtype="uint8") /* ty=Tensor[(135, 10), uint8] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %372 = asin(%364) /* ty=Tensor[(135, 10), float32] */;
  %373 = %367.3;
  %374 = bitwise_or(%370, %371) /* ty=Tensor[(135, 10), uint8] */;
  (%372, %373, %var_5803, %374)
}

def @func_4622() -> (int8, Tensor[(5, 78), int16], Tensor[(11, 195), float32], Tensor[(15, 15, 6), float64], Tensor[(135, 10), float64], Tensor[(11, 195), bool], Tensor[(660, 2), float64]) {
  %375 = @func_1434() /* ty=(int8,) */;
  %376 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 78), int16] */, dtype="int16") /* ty=Tensor[(5, 78), int16] */;
  %377 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 78), int16] */, dtype="int16") /* ty=Tensor[(5, 78), int16] */;
  %378 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 195), int8] */, dtype="int8") /* ty=Tensor[(11, 195), int8] */;
  %379 = reshape(%376, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %380 = reshape(%377, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %381 = reshape(%378, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
  %382 = @func_1499(%379, %380, %381) /* ty=(Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) */;
  %383 = %382.3;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(715, 3), float32] */;
  %385 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(11, 195), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %386 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 195), int8] */, dtype="float32") /* ty=Tensor[(11, 195), float32] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %388 = cast(meta[relay.Constant][24] /* ty=Tensor[(135, 10), float64] */, dtype="float64") /* ty=Tensor[(135, 10), float64] */;
  %389 = reshape(%388, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), float64] */;
  %390 = @func_2431(%389) /* ty=(Tensor[(15, 15, 6), float64],) */;
  %391 = cast(%383, dtype="bool") /* ty=Tensor[(715, 3), bool] */;
  %392 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(11, 195), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %393 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 195), int8] */, dtype="bool") /* ty=Tensor[(11, 195), bool] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %395 = @func_3752() /* ty=(Tensor[(10, 13, 11), int32], Tensor[(660, 2), float64]) */;
  %396 = %375.0;
  %397 = divide(%386, %387) /* ty=Tensor[(11, 195), float32] */;
  %398 = %390.0;
  %399 = not_equal(%393, %394) /* ty=Tensor[(11, 195), bool] */;
  %400 = %395.1;
  (%396, meta[relay.Constant][22] /* ty=Tensor[(5, 78), int16] */, %397, %398, meta[relay.Constant][24] /* ty=Tensor[(135, 10), float64] */, %399, %400)
}

def @func_5600(%var_5596: Tensor[(15, 8, 11), float32]) -> (Tensor[(15, 8, 11), float32],) {
  %401 = cast(%var_5596, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
  %402 = cos(%401) /* ty=Tensor[(15, 8, 11), float32] */;
  (%402,)
}

def @func_5973(%var_5957: Tensor[(8, 10, 16), int32], %var_5968: Tensor[(8, 10, 16), int8]) -> (Tensor[(8, 10, 16), bool], Tensor[(8, 10, 16), uint64]) {
  %403 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 10, 16), int32] */, dtype="bool") /* ty=Tensor[(8, 10, 16), bool] */;
  %404 = shape_of(%var_5957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%var_5957, dtype="bool") /* ty=Tensor[(8, 10, 16), bool] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %407 = cast(%var_5957, dtype="int8") /* ty=Tensor[(8, 10, 16), int8] */;
  %408 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(8, 10, 16), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(meta[relay.Constant][25] /* ty=Tensor[(8, 10, 16), int32] */, dtype="int8") /* ty=Tensor[(8, 10, 16), int8] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %411 = multiply(%409, %410) /* ty=Tensor[(8, 10, 16), int8] */;
  %412 = cast(%var_5968, dtype="uint64") /* ty=Tensor[(8, 10, 16), uint64] */;
  %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%411, dtype="uint64") /* ty=Tensor[(8, 10, 16), uint64] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %416 = greater(%405, %406) /* ty=Tensor[(8, 10, 16), bool] */;
  %417 = logical_xor(%414, %415) /* ty=Tensor[(8, 10, 16), uint64] */;
  (%416, %417)
}

def @func_3577() -> Tensor[(10, 13, 11), int32] {
  %418 = @func_1973() /* ty=Tensor[(10, 13, 11), bool] */;
  %419 = @func_3511() /* ty=(Tensor[(4, 11, 16), float32], int8) */;
  %420 = %419.1;
  %421 = cast(%418, dtype="int32") /* ty=Tensor[(10, 13, 11), int32] */;
  %422 = cast(%420, dtype="int32") /* ty=int32 */;
  bitwise_and(%421, %422) /* ty=Tensor[(10, 13, 11), int32] */
}

def @func_4404(%var_4340: Tensor[(390), int16], %var_4341: Tensor[(2145), int8]) -> (Tensor[(10, 13, 11), bool], Tensor[(390), int16], Tensor[(2145), bool], Tensor[(715, 3), bool], Tensor[(660, 2), float32]) {
  %423 = @func_2851() /* ty=(int8,) */;
  %424 = %423.0;
  %425 = cast(%var_4341, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %426 = cast(%424, dtype="bool") /* ty=bool */;
  %427 = cast(%var_4340, dtype="int16") /* ty=Tensor[(390), int16] */;
  %428 = cast(%var_4340, dtype="int16") /* ty=Tensor[(390), int16] */;
  %429 = cast(%var_4341, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %430 = reshape(%427, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %431 = reshape(%428, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %432 = reshape(%429, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
  %433 = @func_1499(%430, %431, %432) /* ty=(Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) */;
  %434 = %433.3;
  %435 = cast(%434, dtype="bool") /* ty=Tensor[(715, 3), bool] */;
  %436 = cast(%424, dtype="bool") /* ty=bool */;
  %437 = @func_3677() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */;
  %438 = %437.0;
  %439 = cast(%438, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
  %440 = @func_2685() /* ty=Tensor[(10, 13, 11), bool] */;
  %441 = logical_or(%425, %426) /* ty=Tensor[(2145), bool] */;
  %442 = not_equal(%435, %436) /* ty=Tensor[(715, 3), bool] */;
  %443 = exp(%439) /* ty=Tensor[(660, 2), float32] */;
  (%440, %var_4340, %441, %442, %443)
}

def @func_5774() -> int8 {
  %444 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %444.3
}

def @func_2431(%var_2400: Tensor[(15, 15, 6), float64]) -> (Tensor[(15, 15, 6), float64],) {
  %445 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 15, 6), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 6), float64] */;
  %446 = shape_of(%var_2400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%var_2400, dtype="float64") /* ty=Tensor[(15, 15, 6), float64] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %449 = divide(%447, %448) /* ty=Tensor[(15, 15, 6), float64] */;
  %450 = cast(%449, dtype="float64") /* ty=Tensor[(15, 15, 6), float64] */;
  %451 = log10(%450) /* ty=Tensor[(15, 15, 6), float64] */;
  (%451,)
}

def @func_6553() -> (int8, Tensor[(2145), bool]) {
  %452 = @func_3511() /* ty=(Tensor[(4, 11, 16), float32], int8) */;
  %453 = @func_6178() /* ty=(Tensor[(715, 3), int8], Tensor[(390), int16], Tensor[(660, 2), int16], Tensor[(10, 13, 11), float32], Tensor[(2145), bool]) */;
  %454 = %452.1;
  %455 = %453.4;
  (%454, %455)
}

def @func_6406(%var_6386: Tensor[(10, 14, 14), float32]) -> (Tensor[(10, 14, 14), float32],) {
  %456 = cast(%var_6386, dtype="float32") /* ty=Tensor[(10, 14, 14), float32] */;
  %457 = atan(%456) /* ty=Tensor[(10, 14, 14), float32] */;
  (%457,)
}

def @func_1296(%var_1262: Tensor[(10, 16, 8), float64], %var_1280: int8) -> (Tensor[(10, 16, 8), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(2145), int8], int8) {
  %458 = cast(%var_1262, dtype="float64") /* ty=Tensor[(10, 16, 8), float64] */;
  %459 = cast(%var_1280, dtype="int8") /* ty=int8 */;
  %460 = cast(meta[relay.Constant][27] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %461 = reshape(%459, newshape=[]) /* ty=int8 */;
  %462 = reshape(%460, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %463 = @func_1055() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(8, 5, ?), bool], Tensor[(40, 1), float32], int8) */;
  %464 = log2(%458) /* ty=Tensor[(10, 16, 8), float64] */;
  %465 = @func_148(%461, %462) /* ty=Tensor[(15, 11, 13), int8] */;
  %466 = %463.3;
  (%464, %465, %var_1280, meta[relay.Constant][27] /* ty=Tensor[(2145), int8] */, %466)
}

def @func_5870(%var_5854: Tensor[(2145), int8]) -> (Tensor[(10, 13, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(2145), int8]) {
  %467 = cast(%var_5854, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %468 = reshape(%467, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
  %469 = @func_3007(%468) /* ty=(Tensor[(2145), uint64], Tensor[(8, 7, 13), float32], Tensor[(728), float32], int8, Tensor[(2145), float64], Tensor[(1320), float64], Tensor[(2145), float64], Tensor[(15, 11, 13), int8], Tensor[(1430, 1), bool]) */;
  %470 = @func_3121() /* ty=Tensor[(10, 13, 11), float64] */;
  %471 = %469.1;
  (%470, %471, %var_5854)
}

def @func_2729(%var_2715: Tensor[(7, 14), float32]) -> (Tensor[(7, 14), float32], Tensor[(15, 11, 13), int8], int8, Tensor[(1, 2145), int8]) {
  %472 = cast(%var_2715, dtype="float32") /* ty=Tensor[(7, 14), float32] */;
  %473 = cast(meta[relay.Constant][28] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %474 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 2145), int8] */, dtype="int8") /* ty=Tensor[(1, 2145), int8] */;
  %475 = reshape(%473, newshape=[]) /* ty=int8 */;
  %476 = reshape(%474, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %477 = sinh(%472) /* ty=Tensor[(7, 14), float32] */;
  %478 = @func_148(%475, %476) /* ty=Tensor[(15, 11, 13), int8] */;
  (%477, %478, meta[relay.Constant][28] /* ty=int8 */, meta[relay.Constant][29] /* ty=Tensor[(1, 2145), int8] */)
}

def @func_148(%var_141: int8, %var_142: Tensor[(15, 11, 13), int8]) -> Tensor[(15, 11, 13), int8] {
  %479 = cast(%var_141, dtype="int8") /* ty=int8 */;
  %480 = cast(%var_142, dtype="int8") /* ty=Tensor[(15, 11, 13), int8] */;
  logical_xor(%479, %480) /* ty=Tensor[(15, 11, 13), int8] */
}

def @func_4989() -> (Tensor[(15, 15, 6), float64],) {
  %481 = @func_4622() /* ty=(int8, Tensor[(5, 78), int16], Tensor[(11, 195), float32], Tensor[(15, 15, 6), float64], Tensor[(135, 10), float64], Tensor[(11, 195), bool], Tensor[(660, 2), float64]) */;
  %482 = %481.3;
  (%482,)
}

def @func_5525(%var_5509: Tensor[(11, 195), int8]) -> (Tensor[(8, 5, ?), bool], Tensor[(15, 11, 13), int8], int8, Tensor[(11, 195), int8], Tensor[(15, 11, 13), int8]) {
  %483 = @func_1055() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(8, 5, ?), bool], Tensor[(40, 1), float32], int8) */;
  %484 = cast(meta[relay.Constant][30] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %485 = cast(%var_5509, dtype="int8") /* ty=Tensor[(11, 195), int8] */;
  %486 = reshape(%484, newshape=[]) /* ty=int8 */;
  %487 = reshape(%485, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %488 = @func_2039() /* ty=(Tensor[(10, 13, 11), bool], Tensor[(15, 11, 13), int8], Tensor[(1280), float64], int8, Tensor[(1320), float64]) */;
  %489 = %483.1;
  %490 = @func_148(%486, %487) /* ty=Tensor[(15, 11, 13), int8] */;
  %491 = %488.1;
  (%489, %490, meta[relay.Constant][30] /* ty=int8 */, %var_5509, %491)
}

def @func_3902() -> (Tensor[(1320), float64], Tensor[(1320), float64]) {
  %492 = @func_1235() /* ty=Tensor[(1320), float64] */;
  %493 = @func_1235() /* ty=Tensor[(1320), float64] */;
  (%492, %493)
}

def @func_6118() -> (Tensor[(10, 13, 11), bool],) {
  %494 = @func_2685() /* ty=Tensor[(10, 13, 11), bool] */;
  (%494,)
}

def @func_2153(%var_2137: Tensor[(7, 14, 15), float32]) -> (Tensor[(7, 14, 15), float32], int8, Tensor[(2145), int8]) {
  %495 = cast(%var_2137, dtype="float32") /* ty=Tensor[(7, 14, 15), float32] */;
  %496 = cast(meta[relay.Constant][31] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %497 = reshape(%496, newshape=[715, 3]) /* ty=Tensor[(715, 3), int8] */;
  %498 = @func_1422(%497) /* ty=(Tensor[(10, 13, 11), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(715, 3), int8], Tensor[(15, 11, 13), int8]) */;
  %499 = acosh(%495) /* ty=Tensor[(7, 14, 15), float32] */;
  %500 = %498.2;
  (%499, %500, meta[relay.Constant][31] /* ty=Tensor[(2145), int8] */)
}

def @func_2395() -> (Tensor[(40, 2), bool],) {
  %501 = @func_1902() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(40, 2), bool], Tensor[(1320), float64], Tensor[(40, 2), bool], Tensor[(10, 13, 11), float64]) */;
  %502 = %501.3;
  (%502,)
}

def @func_3159() -> (int8,) {
  %503 = @func_2740() /* ty=(int8,) */;
  %504 = %503.0;
  (%504,)
}

def @func_5411() -> Tensor[(1280), float64] {
  %505 = @func_2039() /* ty=(Tensor[(10, 13, 11), bool], Tensor[(15, 11, 13), int8], Tensor[(1280), float64], int8, Tensor[(1320), float64]) */;
  %505.2
}

def @func_5481(%var_5476: Tensor[(390), int16]) -> (Tensor[(40, 2), bool], Tensor[(390), int16], Tensor[(390), int16], Tensor[(2145), int8]) {
  %506 = @func_2921() /* ty=(Tensor[(40, 2), bool],) */;
  %507 = cast(%var_5476, dtype="int16") /* ty=Tensor[(390), int16] */;
  %508 = cast(meta[relay.Constant][32] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %509 = reshape(%507, newshape=[390]) /* ty=Tensor[(390), int16] */;
  %510 = reshape(%508, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
  %511 = @func_4404(%509, %510) /* ty=(Tensor[(10, 13, 11), bool], Tensor[(390), int16], Tensor[(2145), bool], Tensor[(715, 3), bool], Tensor[(660, 2), float32]) */;
  %512 = %506.0;
  %513 = %511.1;
  (%512, %513, %var_5476, meta[relay.Constant][32] /* ty=Tensor[(2145), int8] */)
}

def @func_4954() -> (Tensor[(10, 13, 11), float64], Tensor[(660, 2), bool]) {
  %514 = @func_3695() /* ty=(Tensor[(10, 13, 11), float64],) */;
  %515 = @func_3677() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */;
  %516 = %514.0;
  %517 = %515.0;
  (%516, %517)
}

def @func_3121() -> Tensor[(10, 13, 11), float64] {
  %518 = @func_1169() /* ty=(Tensor[(10, 13, 11), float64],) */;
  %518.0
}

def @func_1499(%var_1452: Tensor[(3, 10, 13), int16], %var_1453: Tensor[(3, 10, 13), int16], %var_1493: Tensor[(2145), int8]) -> (Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) {
  %519 = cast(%var_1453, dtype="int16") /* ty=Tensor[(3, 10, 13), int16] */;
  %520 = shape_of(%var_1452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%var_1452, dtype="int16") /* ty=Tensor[(3, 10, 13), int16] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %523 = cast(%var_1453, dtype="float32") /* ty=Tensor[(3, 10, 13), float32] */;
  %524 = asin(%523) /* ty=Tensor[(3, 10, 13), float32] */;
  %525 = cast(%524, dtype="float32") /* ty=Tensor[(3, 10, 13), float32] */;
  %526 = cast(%524, dtype="float32") /* ty=Tensor[(3, 10, 13), float32] */;
  %527 = cast(%var_1493, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %528 = reshape(%527, newshape=[715, 3]) /* ty=Tensor[(715, 3), int8] */;
  %529 = @func_1422(%528) /* ty=(Tensor[(10, 13, 11), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(715, 3), int8], Tensor[(15, 11, 13), int8]) */;
  %530 = multiply(%521, %522) /* ty=Tensor[(3, 10, 13), int16] */;
  %531 = exp(%525) /* ty=Tensor[(3, 10, 13), float32] */;
  %532 = erf(%526) /* ty=Tensor[(3, 10, 13), float32] */;
  %533 = %529.3;
  (%530, %531, %532, %533, %var_1493)
}

def @func_6019(%var_6012: Tensor[(2, 9, 9), uint8], %var_6013: Tensor[(2, 9, 9), uint8]) -> (Tensor[(2, 9, 9), uint8],) {
  %534 = cast(%var_6013, dtype="uint8") /* ty=Tensor[(2, 9, 9), uint8] */;
  %535 = shape_of(%var_6012, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%var_6012, dtype="uint8") /* ty=Tensor[(2, 9, 9), uint8] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %538 = maximum(%536, %537) /* ty=Tensor[(2, 9, 9), uint8] */;
  (%538,)
}

def @func_5236() -> (Tensor[(10, 13, 11), float64],) {
  %539 = @func_1169() /* ty=(Tensor[(10, 13, 11), float64],) */;
  %540 = %539.0;
  (%540,)
}

def @func_1235() -> Tensor[(1320), float64] {
  %541 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %541.2
}

def @func_5453() -> (Tensor[(10, 13, 11), int16], int8) {
  %542 = @func_4854() /* ty=(int8, Tensor[(10, 13, 11), int32]) */;
  %543 = %542.1;
  %544 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 13, 11), int32] */, dtype="int16") /* ty=Tensor[(10, 13, 11), int16] */;
  %545 = shape_of(%543, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%543, dtype="int16") /* ty=Tensor[(10, 13, 11), int16] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %548 = @func_5282() /* ty=(int8, int8) */;
  %549 = minimum(%546, %547) /* ty=Tensor[(10, 13, 11), int16] */;
  %550 = %548.1;
  (%549, %550)
}

def @func_2921() -> (Tensor[(40, 2), bool],) {
  %551 = @func_2395() /* ty=(Tensor[(40, 2), bool],) */;
  %552 = %551.0;
  (%552,)
}

def @func_3850(%var_3828: Tensor[(3, 6, 6), int32], %var_3838: Tensor[(126), float64]) -> (Tensor[(3, 6, 6), int32], Tensor[(6, 7, 3), float64], Tensor[(126), float64], Tensor[(3, 6, 6), float32], Tensor[(4, 11, 16), float32]) {
  %553 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 6, 6), int32] */, dtype="int32") /* ty=Tensor[(3, 6, 6), int32] */;
  %554 = shape_of(%var_3828, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%var_3828, dtype="int32") /* ty=Tensor[(3, 6, 6), int32] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %557 = cast(%var_3838, dtype="float64") /* ty=Tensor[(126), float64] */;
  %558 = reshape(%557, newshape=[6, 7, 3]) /* ty=Tensor[(6, 7, 3), float64] */;
  %559 = cast(%var_3828, dtype="float32") /* ty=Tensor[(3, 6, 6), float32] */;
  %560 = @func_1201() /* ty=(Tensor[(4, 11, 16), float32],) */;
  %561 = bitwise_or(%555, %556) /* ty=Tensor[(3, 6, 6), int32] */;
  %562 = @func_3475(%558) /* ty=Tensor[(6, 7, 3), float64] */;
  %563 = exp(%559) /* ty=Tensor[(3, 6, 6), float32] */;
  %564 = %560.0;
  (%561, %562, %var_3838, %563, %564)
}

def @func_3581() -> Tensor[(10, 13, 11), int32] {
  @func_3577() /* ty=Tensor[(10, 13, 11), int32] */
}

def @func_1201() -> (Tensor[(4, 11, 16), float32],) {
  %565 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %566 = %565.4;
  (%566,)
}

def @main(%var_6577: Tensor[(40, 2), bool]) -> Tensor[(40, 2), bool] {
  %567 = @func_2921() /* ty=(Tensor[(40, 2), bool],) */;
  %568 = %567.0;
  %569 = cast(%var_6577, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
  %570 = shape_of(%568, dtype="int32") /* ty=Tensor[(2), int32] */;
  %571 = cast(%568, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  greater_equal(%571, %572) /* ty=Tensor[(40, 2), bool] */
}

def @func_3551() -> (Tensor[(390), int16],) {
  %573 = @func_1703() /* ty=(int8, Tensor[(15, 11, 13), int8], Tensor[(2145), int8], Tensor[(3, 10, 13), float32], Tensor[(390), int16]) */;
  %574 = %573.4;
  (%574,)
}

def @func_759() -> Tensor[(10, 13, 11), float64] {
  %575 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 11), float64] */;
  cosh(%575) /* ty=Tensor[(10, 13, 11), float64] */
}

def @func_4280() -> Tensor[(2, 13, 1), float64] {
  %576 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 13, 1), float64] */, dtype="float64") /* ty=Tensor[(2, 13, 1), float64] */;
  %577 = log10(%576) /* ty=Tensor[(2, 13, 1), float64] */;
  %578 = cast(%577, dtype="float64") /* ty=Tensor[(2, 13, 1), float64] */;
  rsqrt(%578) /* ty=Tensor[(2, 13, 1), float64] */
}

def @func_1329() -> (int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) {
  %579 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %580 = cast(meta[relay.Constant][37] /* ty=Tensor[(660, 2), float64] */, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %581 = cast(meta[relay.Constant][37] /* ty=Tensor[(660, 2), float64] */, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %582 = %579.3;
  %583 = cast(%582, dtype="int8") /* ty=int8 */;
  %584 = reshape(%580, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %585 = reshape(%581, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %586 = reshape(%583, newshape=[]) /* ty=int8 */;
  %587 = @func_600(%584, %585, %586) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) */;
  %588 = %587.0;
  %589 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
  (%582, %588, meta[relay.Constant][37] /* ty=Tensor[(660, 2), float64] */, %589)
}

def @func_3623() -> (Tensor[(10, 13, 11), float64],) {
  %590 = @func_1169() /* ty=(Tensor[(10, 13, 11), float64],) */;
  %591 = %590.0;
  (%591,)
}

def @func_4169(%var_4166: Tensor[(1, 2145), int8]) -> (int8, Tensor[(4, 11, 16), float32], Tensor[(704), float32], Tensor[(1, 2145), int8]) {
  %592 = @func_2851() /* ty=(int8,) */;
  %593 = cast(meta[relay.Constant][38] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %594 = cast(meta[relay.Constant][38] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %595 = %592.0;
  %596 = cast(%595, dtype="int8") /* ty=int8 */;
  %597 = cast(%var_4166, dtype="int8") /* ty=Tensor[(1, 2145), int8] */;
  %598 = reshape(%593, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), float32] */;
  %599 = reshape(%594, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), float32] */;
  %600 = reshape(%596, newshape=[]) /* ty=int8 */;
  %601 = reshape(%597, newshape=[2145, 1]) /* ty=Tensor[(2145, 1), int8] */;
  %602 = @func_536(%598, %599, %600, %601) /* ty=(Tensor[(4, 11, 16), float32], Tensor[(2145, 1), int8], Tensor[(15, 11, 13), bool]) */;
  %603 = %602.0;
  (%595, %603, meta[relay.Constant][38] /* ty=Tensor[(704), float32] */, %var_4166)
}

def @func_1055() -> (Tensor[(10, 13, 11), float64], Tensor[(8, 5, ?), bool], Tensor[(40, 1), float32], int8) {
  %604 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
  %605 = cast(%604, dtype="float64") /* ty=Tensor[(10, 13, 11), float64] */;
  %606 = cast(meta[relay.Constant][39] /* ty=Tensor[(40, 1), float32] */, dtype="float32") /* ty=Tensor[(40, 1), float32] */;
  %607 = cast(meta[relay.Constant][40] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %608 = reshape(%606, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float32] */;
  %609 = reshape(%607, newshape=[]) /* ty=int8 */;
  %610 = @func_983(%608, %609) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(1320), float64], Tensor[(8, 5, 1), int8], Tensor[(8, 5, ?), bool], Tensor[(704), float32]) */;
  %611 = cos(%605) /* ty=Tensor[(10, 13, 11), float64] */;
  %612 = %610.3;
  (%611, %612, meta[relay.Constant][39] /* ty=Tensor[(40, 1), float32] */, meta[relay.Constant][40] /* ty=int8 */)
}

def @func_5022() -> Tensor[(4, 11, 16), float32] {
  %613 = @func_1201() /* ty=(Tensor[(4, 11, 16), float32],) */;
  %613.0
}

def @func_3195() -> (int8, int8) {
  %614 = @func_3159() /* ty=(int8,) */;
  %615 = @func_3159() /* ty=(int8,) */;
  %616 = %614.0;
  %617 = %615.0;
  (%616, %617)
}

def @func_2685() -> Tensor[(10, 13, 11), bool] {
  @func_1973() /* ty=Tensor[(10, 13, 11), bool] */
}

def @func_3817(%var_3761: Tensor[(6, 8, 14), uint64], %var_3762: Tensor[(6, 8, 14), uint64]) -> (Tensor[(6, 8, 14), bool], Tensor[(7, 14, 15), float32], Tensor[(1470), float32], Tensor[(660, 2), float64], Tensor[(390), int16]) {
  %618 = cast(%var_3761, dtype="float64") /* ty=Tensor[(6, 8, 14), float64] */;
  %619 = asinh(%618) /* ty=Tensor[(6, 8, 14), float64] */;
  %620 = cast(%var_3762, dtype="bool") /* ty=Tensor[(6, 8, 14), bool] */;
  %621 = shape_of(%var_3761, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%var_3761, dtype="bool") /* ty=Tensor[(6, 8, 14), bool] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %624 = greater_equal(%622, %623) /* ty=Tensor[(6, 8, 14), bool] */;
  %625 = cast(%624, dtype="bool") /* ty=Tensor[(6, 8, 14), bool] */;
  %626 = shape_of(%619, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(%619, dtype="bool") /* ty=Tensor[(6, 8, 14), bool] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %629 = cast(meta[relay.Constant][41] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %630 = reshape(%629, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %631 = @func_2153(%630) /* ty=(Tensor[(7, 14, 15), float32], int8, Tensor[(2145), int8]) */;
  %632 = @func_3677() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */;
  %633 = @func_3551() /* ty=(Tensor[(390), int16],) */;
  %634 = greater(%627, %628) /* ty=Tensor[(6, 8, 14), bool] */;
  %635 = %631.0;
  %636 = %632.2;
  %637 = %633.0;
  (%634, %635, meta[relay.Constant][41] /* ty=Tensor[(1470), float32] */, %636, %637)
}

def @func_3752() -> (Tensor[(10, 13, 11), int32], Tensor[(660, 2), float64]) {
  %638 = @func_3677() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */;
  %639 = @func_3581() /* ty=Tensor[(10, 13, 11), int32] */;
  %640 = %638.2;
  (%639, %640)
}

def @func_1902() -> (Tensor[(10, 13, 11), float64], Tensor[(40, 2), bool], Tensor[(1320), float64], Tensor[(40, 2), bool], Tensor[(10, 13, 11), float64]) {
  %641 = cast(meta[relay.Constant][42] /* ty=Tensor[(40, 2), float32] */, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
  %642 = log(%641) /* ty=Tensor[(40, 2), float64] */;
  %643 = @func_1055() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(8, 5, ?), bool], Tensor[(40, 1), float32], int8) */;
  %644 = %643.2;
  %645 = cast(%644, dtype="int32") /* ty=Tensor[(40, 1), int32] */;
  %646 = cast(meta[relay.Constant][42] /* ty=Tensor[(40, 2), float32] */, dtype="int32") /* ty=Tensor[(40, 2), int32] */;
  %647 = bitwise_xor(%645, %646) /* ty=Tensor[(40, 2), int32] */;
  %648 = cast(%647, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
  %649 = shape_of(%642, dtype="int32") /* ty=Tensor[(2), int32] */;
  %650 = cast(%642, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %652 = cast(%642, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
  %653 = cast(%644, dtype="bool") /* ty=Tensor[(40, 1), bool] */;
  %654 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
  %655 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
  %656 = greater(%650, %651) /* ty=Tensor[(40, 2), bool] */;
  %657 = @func_1235() /* ty=Tensor[(1320), float64] */;
  %658 = logical_and(%652, %653) /* ty=Tensor[(40, 2), bool] */;
  %659 = %654.3;
  (%655, %656, %657, %658, %659)
}

def @func_3007(%var_2943: Tensor[(2145), int8]) -> (Tensor[(2145), uint64], Tensor[(8, 7, 13), float32], Tensor[(728), float32], int8, Tensor[(2145), float64], Tensor[(1320), float64], Tensor[(2145), float64], Tensor[(15, 11, 13), int8], Tensor[(1430, 1), bool]) {
  %660 = @func_1703() /* ty=(int8, Tensor[(15, 11, 13), int8], Tensor[(2145), int8], Tensor[(3, 10, 13), float32], Tensor[(390), int16]) */;
  %661 = %660.2;
  %662 = cast(%var_2943, dtype="uint64") /* ty=Tensor[(2145), uint64] */;
  %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(1), int32] */;
  %664 = cast(%661, dtype="uint64") /* ty=Tensor[(2145), uint64] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %666 = cast(meta[relay.Constant][43] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %667 = reshape(%666, newshape=[8, 7, 13]) /* ty=Tensor[(8, 7, 13), float32] */;
  %668 = @func_2894(%667) /* ty=(Tensor[(8, 7, 13), float32],) */;
  %669 = @func_1434() /* ty=(int8,) */;
  %670 = cast(%var_2943, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %671 = sigmoid(%670) /* ty=Tensor[(2145), float32] */;
  %672 = cast(%671, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %673 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %674 = cast(%661, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %675 = rsqrt(%674) /* ty=Tensor[(2145), float64] */;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %677 = cast(meta[relay.Constant][44] /* ty=Tensor[(1430, 1), bool] */, dtype="bool") /* ty=Tensor[(1430, 1), bool] */;
  %678 = reshape(%677, newshape=[10, 13, 11]) /* ty=Tensor[(10, 13, 11), bool] */;
  %679 = @func_2331(%678) /* ty=(Tensor[(10, 13, 11), int64], Tensor[(15, 11, 13), int8], Tensor[(715, 3), int8]) */;
  %680 = bitwise_xor(%664, %665) /* ty=Tensor[(2145), uint64] */;
  %681 = %668.0;
  %682 = %669.0;
  %683 = sin(%672) /* ty=Tensor[(2145), float64] */;
  %684 = %673.2;
  %685 = asinh(%676) /* ty=Tensor[(2145), float64] */;
  %686 = %679.1;
  (%680, %681, meta[relay.Constant][43] /* ty=Tensor[(728), float32] */, %682, %683, %684, %685, %686, meta[relay.Constant][44] /* ty=Tensor[(1430, 1), bool] */)
}

def @func_3475(%var_3468: Tensor[(6, 7, 3), float64]) -> Tensor[(6, 7, 3), float64] {
  %687 = cast(%var_3468, dtype="float64") /* ty=Tensor[(6, 7, 3), float64] */;
  log2(%687) /* ty=Tensor[(6, 7, 3), float64] */
}

def @func_5496(%var_5494: Tensor[(2145), int8]) -> (Tensor[(10, 13, 11), int32], Tensor[(2145), int8], Tensor[(390), int16], Tensor[(2145), int8]) {
  %688 = cast(meta[relay.Constant][45] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
  %689 = cast(meta[relay.Constant][45] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
  %690 = cast(%var_5494, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %691 = reshape(%688, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %692 = reshape(%689, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %693 = reshape(%690, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
  %694 = @func_1499(%691, %692, %693) /* ty=(Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) */;
  %695 = @func_3577() /* ty=Tensor[(10, 13, 11), int32] */;
  %696 = %694.4;
  (%695, %696, meta[relay.Constant][45] /* ty=Tensor[(390), int16] */, %var_5494)
}

def @func_1434() -> (int8,) {
  %697 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
  %698 = %697.0;
  (%698,)
}

def @func_4854() -> (int8, Tensor[(10, 13, 11), int32]) {
  %699 = @func_2740() /* ty=(int8,) */;
  %700 = %699.0;
  %701 = @func_3581() /* ty=Tensor[(10, 13, 11), int32] */;
  (%700, %701)
}

def @func_4541(%var_4475: int8, %var_4476: Tensor[(2145), int8]) -> (Tensor[(11, 8, 15), float64], Tensor[(6, 7, 3), float64], Tensor[(108), int32], Tensor[(126), float64], int8, Tensor[(2145), float32], Tensor[(390), int16], Tensor[(10, 13, 11), bool]) {
  %702 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
  %703 = cast(meta[relay.Constant][46] /* ty=Tensor[(108), int32] */, dtype="int32") /* ty=Tensor[(108), int32] */;
  %704 = cast(meta[relay.Constant][47] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %705 = reshape(%703, newshape=[3, 6, 6]) /* ty=Tensor[(3, 6, 6), int32] */;
  %706 = reshape(%704, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %707 = @func_3850(%705, %706) /* ty=(Tensor[(3, 6, 6), int32], Tensor[(6, 7, 3), float64], Tensor[(126), float64], Tensor[(3, 6, 6), float32], Tensor[(4, 11, 16), float32]) */;
  %708 = cast(%var_4475, dtype="int8") /* ty=int8 */;
  %709 = cast(%var_4476, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %710 = reshape(%708, newshape=[]) /* ty=int8 */;
  %711 = reshape(%709, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %712 = @func_148(%710, %711) /* ty=Tensor[(15, 11, 13), int8] */;
  %713 = cast(%712, dtype="float32") /* ty=Tensor[(15, 11, 13), float32] */;
  %714 = shape_of(%var_4476, dtype="int32") /* ty=Tensor[(1), int32] */;
  %715 = cast(%var_4476, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?), float32] */;
  %717 = @func_3551() /* ty=(Tensor[(390), int16],) */;
  %718 = %702.1;
  %719 = %707.1;
  %720 = divide(%715, %716) /* ty=Tensor[(2145), float32] */;
  %721 = %717.0;
  %722 = @func_1973() /* ty=Tensor[(10, 13, 11), bool] */;
  (%718, %719, meta[relay.Constant][46] /* ty=Tensor[(108), int32] */, meta[relay.Constant][47] /* ty=Tensor[(126), float64] */, %var_4475, %720, %721, %722)
}

def @func_3057() -> (int8, Tensor[(1320), float64]) {
  %723 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
  %724 = @func_1902() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(40, 2), bool], Tensor[(1320), float64], Tensor[(40, 2), bool], Tensor[(10, 13, 11), float64]) */;
  %725 = %723.0;
  %726 = %724.2;
  (%725, %726)
}

def @func_5671(%var_5655: Tensor[(1320), float64]) -> (int8, Tensor[(4, 11, 16), float64], Tensor[(660, 2), float64], Tensor[(1320), float64], Tensor[(15, 11, 13), bool], Tensor[(40), float32]) {
  %727 = @func_5282() /* ty=(int8, int8) */;
  %728 = cast(%var_5655, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %729 = reshape(%728, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %730 = @func_2116(%729) /* ty=(Tensor[(660, 2), float64],) */;
  %731 = cast(meta[relay.Constant][48] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %732 = %727.0;
  %733 = cast(%732, dtype="int8") /* ty=int8 */;
  %734 = reshape(%731, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float32] */;
  %735 = reshape(%733, newshape=[]) /* ty=int8 */;
  %736 = @func_983(%734, %735) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(1320), float64], Tensor[(8, 5, 1), int8], Tensor[(8, 5, ?), bool], Tensor[(704), float32]) */;
  %737 = @func_2272() /* ty=Tensor[(4, 11, 16), float64] */;
  %738 = %730.0;
  %739 = %736.0;
  (%732, %737, %738, %var_5655, %739, meta[relay.Constant][48] /* ty=Tensor[(40), float32] */)
}

def @func_4748(%var_4736: Tensor[(10, 13, 11), int8]) -> Tensor[(10, 13, 11), float32] {
  %740 = @func_3577() /* ty=Tensor[(10, 13, 11), int32] */;
  %741 = cast(meta[relay.Constant][49] /* ty=Tensor[(10, 13, 11), int32] */, dtype="int8") /* ty=Tensor[(10, 13, 11), int8] */;
  %742 = shape_of(%740, dtype="int32") /* ty=Tensor[(3), int32] */;
  %743 = cast(%740, dtype="int8") /* ty=Tensor[(10, 13, 11), int8] */;
  %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %745 = add(%743, %744) /* ty=Tensor[(10, 13, 11), int8] */;
  %746 = cast(%var_4736, dtype="float32") /* ty=Tensor[(10, 13, 11), float32] */;
  %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
  %748 = cast(%745, dtype="float32") /* ty=Tensor[(10, 13, 11), float32] */;
  %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%748, %749) /* ty=Tensor[(10, 13, 11), float32] */
}

def @func_3460(%var_3386: Tensor[(660, 2), float64], %var_3439: Tensor[(9, 11, 15), float64]) -> (Tensor[(660, 2), float64], Tensor[(660, 2), float64], int8, Tensor[(1280), float64], int8, Tensor[(10, 13, 11), float64], Tensor[(9, 11, 15), bool], Tensor[(9, 11, 15), float64]) {
  %750 = cast(%var_3386, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %751 = reshape(%750, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %752 = @func_2116(%751) /* ty=(Tensor[(660, 2), float64],) */;
  %753 = cast(meta[relay.Constant][50] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %754 = cast(meta[relay.Constant][51] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %755 = reshape(%753, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), float64] */;
  %756 = reshape(%754, newshape=[]) /* ty=int8 */;
  %757 = @func_1296(%755, %756) /* ty=(Tensor[(10, 16, 8), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(2145), int8], int8) */;
  %758 = @func_1055() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(8, 5, ?), bool], Tensor[(40, 1), float32], int8) */;
  %759 = cast(meta[relay.Constant][52] /* ty=Tensor[(9, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(9, 11, 15), float64] */;
  %760 = cos(%759) /* ty=Tensor[(9, 11, 15), float64] */;
  %761 = cast(%var_3439, dtype="bool") /* ty=Tensor[(9, 11, 15), bool] */;
  %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%760, dtype="bool") /* ty=Tensor[(9, 11, 15), bool] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %765 = cast(meta[relay.Constant][52] /* ty=Tensor[(9, 11, 15), float64] */, dtype="bool") /* ty=Tensor[(9, 11, 15), bool] */;
  %766 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%760, dtype="bool") /* ty=Tensor[(9, 11, 15), bool] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %769 = greater_equal(%767, %768) /* ty=Tensor[(9, 11, 15), bool] */;
  %770 = cast(%769, dtype="float64") /* ty=Tensor[(9, 11, 15), float64] */;
  %771 = acosh(%770) /* ty=Tensor[(9, 11, 15), float64] */;
  %772 = cast(%771, dtype="float64") /* ty=Tensor[(9, 11, 15), float64] */;
  %773 = %752.0;
  %774 = %757.2;
  %775 = %758.0;
  %776 = not_equal(%763, %764) /* ty=Tensor[(9, 11, 15), bool] */;
  %777 = rsqrt(%772) /* ty=Tensor[(9, 11, 15), float64] */;
  (%773, %var_3386, %774, meta[relay.Constant][50] /* ty=Tensor[(1280), float64] */, meta[relay.Constant][51] /* ty=int8 */, %775, %776, %777)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_1056() -> (Tensor[(10, 13, 11), float64], Tensor[(8, 5, ?), bool], Tensor[(40, 1), float32], int8) {
  %9 = fn () -> (Tensor[(10, 13, 11), float64], Tensor[(8, 5, ?), bool], Tensor[(40, 1), float32], int8) {
    %0 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
    %1 = cast(%0, dtype="float64") /* ty=Tensor[(10, 13, 11), float64] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(40, 1), float32] */, dtype="float32") /* ty=Tensor[(40, 1), float32] */;
    %3 = cast(meta[relay.Constant][1] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %4 = reshape(%2, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float32] */;
    %5 = reshape(%3, newshape=[]) /* ty=int8 */;
    %6 = @func_983(%4, %5) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(1320), float64], Tensor[(8, 5, 1), int8], Tensor[(8, 5, ?), bool], Tensor[(704), float32]) */;
    %7 = cos(%1) /* ty=Tensor[(10, 13, 11), float64] */;
    %8 = %6.3;
    (%7, %8, meta[relay.Constant][0] /* ty=Tensor[(40, 1), float32] */, meta[relay.Constant][1] /* ty=int8 */)
  };
  %9() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(8, 5, ?), bool], Tensor[(40, 1), float32], int8) */
}

def @func_3536() -> (Tensor[(40, 2), bool], Tensor[(40, 2), float32]) {
  @func_3534() /* ty=(Tensor[(40, 2), bool], Tensor[(40, 2), float32]) */
}

def @func_3753() -> (Tensor[(10, 13, 11), int32], Tensor[(660, 2), float64]) {
  %13 = fn () -> (Tensor[(10, 13, 11), int32], Tensor[(660, 2), float64]) {
    %10 = @func_3677() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */;
    %11 = @func_3581() /* ty=Tensor[(10, 13, 11), int32] */;
    %12 = %10.2;
    (%11, %12)
  };
  %13() /* ty=(Tensor[(10, 13, 11), int32], Tensor[(660, 2), float64]) */
}

def @func_3534() -> (Tensor[(40, 2), bool], Tensor[(40, 2), float32]) {
  %14 = @func_1902() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(40, 2), bool], Tensor[(1320), float64], Tensor[(40, 2), bool], Tensor[(10, 13, 11), float64]) */;
  %15 = @func_2921() /* ty=(Tensor[(40, 2), bool],) */;
  %16 = %15.0;
  %17 = cast(%16, dtype="float32") /* ty=Tensor[(40, 2), float32] */;
  %18 = %14.3;
  %19 = acos(%17) /* ty=Tensor[(40, 2), float32] */;
  (%18, %19)
}

def @func_760() -> Tensor[(10, 13, 11), float64] {
  %21 = fn () -> Tensor[(10, 13, 11), float64] {
    %20 = cast(meta[relay.Constant][2] /* ty=Tensor[(10, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(10, 13, 11), float64] */;
    cosh(%20) /* ty=Tensor[(10, 13, 11), float64] */
  };
  %21() /* ty=Tensor[(10, 13, 11), float64] */
}

def @func_2685() -> Tensor[(10, 13, 11), bool] {
  @func_1973() /* ty=Tensor[(10, 13, 11), bool] */
}

def @func_801() -> (Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) {
  %22 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
  %23 = cast(%22, dtype="float64") /* ty=Tensor[(10, 13, 11), float64] */;
  %24 = cast(meta[relay.Constant][3] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %25 = cast(meta[relay.Constant][3] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %26 = cast(meta[relay.Constant][4] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %27 = reshape(%24, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %28 = reshape(%25, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %29 = reshape(%26, newshape=[]) /* ty=int8 */;
  %30 = @func_600(%27, %28, %29) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) */;
  %31 = %30.2;
  %32 = cast(%31, dtype="float32") /* ty=Tensor[(704), float32] */;
  %33 = cast(%31, dtype="float32") /* ty=Tensor[(704), float32] */;
  %34 = cast(meta[relay.Constant][4] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %35 = cast(meta[relay.Constant][5] /* ty=Tensor[(143, 15), int8] */, dtype="int8") /* ty=Tensor[(143, 15), int8] */;
  %36 = reshape(%32, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), float32] */;
  %37 = reshape(%33, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), float32] */;
  %38 = reshape(%34, newshape=[]) /* ty=int8 */;
  %39 = reshape(%35, newshape=[2145, 1]) /* ty=Tensor[(2145, 1), int8] */;
  %40 = @func_536(%36, %37, %38, %39) /* ty=(Tensor[(4, 11, 16), float32], Tensor[(2145, 1), int8], Tensor[(15, 11, 13), bool]) */;
  %41 = tan(%23) /* ty=Tensor[(10, 13, 11), float64] */;
  %42 = %40.0;
  (%41, %31, meta[relay.Constant][3] /* ty=Tensor[(1320), float64] */, meta[relay.Constant][4] /* ty=int8 */, %42, meta[relay.Constant][5] /* ty=Tensor[(143, 15), int8] */)
}

def @func_3010(%var_3008: Tensor[(2145), int8]) -> (Tensor[(2145), uint64], Tensor[(8, 7, 13), float32], Tensor[(728), float32], int8, Tensor[(2145), float64], Tensor[(1320), float64], Tensor[(2145), float64], Tensor[(15, 11, 13), int8], Tensor[(1430, 1), bool]) {
  @func_3007(%var_3008) /* ty=(Tensor[(2145), uint64], Tensor[(8, 7, 13), float32], Tensor[(728), float32], int8, Tensor[(2145), float64], Tensor[(1320), float64], Tensor[(2145), float64], Tensor[(15, 11, 13), int8], Tensor[(1430, 1), bool]) */
}

def @func_1201() -> (Tensor[(4, 11, 16), float32],) {
  %43 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %44 = %43.4;
  (%44,)
}

def @func_3821(%var_3819: Tensor[(6, 8, 14), uint64], %var_3820: Tensor[(6, 8, 14), uint64]) -> (Tensor[(6, 8, 14), bool], Tensor[(7, 14, 15), float32], Tensor[(1470), float32], Tensor[(660, 2), float64], Tensor[(390), int16]) {
  @func_3817(%var_3819, %var_3820) /* ty=(Tensor[(6, 8, 14), bool], Tensor[(7, 14, 15), float32], Tensor[(1470), float32], Tensor[(660, 2), float64], Tensor[(390), int16]) */
}

def @func_1974() -> Tensor[(10, 13, 11), bool] {
  %50 = fn () -> Tensor[(10, 13, 11), bool] {
    %45 = @func_1434() /* ty=(int8,) */;
    %46 = %45.0;
    %47 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
    %48 = cast(%46, dtype="bool") /* ty=bool */;
    %49 = cast(%47, dtype="bool") /* ty=Tensor[(10, 13, 11), bool] */;
    equal(%48, %49) /* ty=Tensor[(10, 13, 11), bool] */
  };
  %50() /* ty=Tensor[(10, 13, 11), bool] */
}

def @func_4404(%var_4340: Tensor[(390), int16], %var_4341: Tensor[(2145), int8]) -> (Tensor[(10, 13, 11), bool], Tensor[(390), int16], Tensor[(2145), bool], Tensor[(715, 3), bool], Tensor[(660, 2), float32]) {
  %51 = @func_2851() /* ty=(int8,) */;
  %52 = %51.0;
  %53 = cast(%var_4341, dtype="bool") /* ty=Tensor[(2145), bool] */;
  %54 = cast(%52, dtype="bool") /* ty=bool */;
  %55 = cast(%var_4340, dtype="int16") /* ty=Tensor[(390), int16] */;
  %56 = cast(%var_4340, dtype="int16") /* ty=Tensor[(390), int16] */;
  %57 = cast(%var_4341, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %58 = reshape(%55, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %59 = reshape(%56, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %60 = reshape(%57, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
  %61 = @func_1499(%58, %59, %60) /* ty=(Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) */;
  %62 = %61.3;
  %63 = cast(%62, dtype="bool") /* ty=Tensor[(715, 3), bool] */;
  %64 = cast(%52, dtype="bool") /* ty=bool */;
  %65 = @func_3677() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */;
  %66 = %65.0;
  %67 = cast(%66, dtype="float32") /* ty=Tensor[(660, 2), float32] */;
  %68 = @func_2685() /* ty=Tensor[(10, 13, 11), bool] */;
  %69 = logical_or(%53, %54) /* ty=Tensor[(2145), bool] */;
  %70 = not_equal(%63, %64) /* ty=Tensor[(715, 3), bool] */;
  %71 = exp(%67) /* ty=Tensor[(660, 2), float32] */;
  (%68, %var_4340, %69, %70, %71)
}

def @func_4195() -> (Tensor[(390), int16],) {
  %72 = @func_3551() /* ty=(Tensor[(390), int16],) */;
  %73 = %72.0;
  (%73,)
}

def @func_2687() -> Tensor[(10, 13, 11), bool] {
  @func_2685() /* ty=Tensor[(10, 13, 11), bool] */
}

def @func_1203() -> (Tensor[(4, 11, 16), float32],) {
  @func_1201() /* ty=(Tensor[(4, 11, 16), float32],) */
}

def @func_3059() -> (int8, Tensor[(1320), float64]) {
  @func_3057() /* ty=(int8, Tensor[(1320), float64]) */
}

def @func_5024() -> Tensor[(4, 11, 16), float32] {
  @func_5022() /* ty=Tensor[(4, 11, 16), float32] */
}

def @func_4281() -> Tensor[(2, 13, 1), float64] {
  %77 = fn () -> Tensor[(2, 13, 1), float64] {
    %74 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 13, 1), float64] */, dtype="float64") /* ty=Tensor[(2, 13, 1), float64] */;
    %75 = log10(%74) /* ty=Tensor[(2, 13, 1), float64] */;
    %76 = cast(%75, dtype="float64") /* ty=Tensor[(2, 13, 1), float64] */;
    rsqrt(%76) /* ty=Tensor[(2, 13, 1), float64] */
  };
  %77() /* ty=Tensor[(2, 13, 1), float64] */
}

def @func_6525() -> (Tensor[(10, 13, 11), float64],) {
  %80 = fn () -> (Tensor[(10, 13, 11), float64],) {
    %78 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
    %79 = %78.0;
    (%79,)
  };
  %80() /* ty=(Tensor[(10, 13, 11), float64],) */
}

def @func_4172(%var_4170: Tensor[(1, 2145), int8]) -> (int8, Tensor[(4, 11, 16), float32], Tensor[(704), float32], Tensor[(1, 2145), int8]) {
  @func_4169(%var_4170) /* ty=(int8, Tensor[(4, 11, 16), float32], Tensor[(704), float32], Tensor[(1, 2145), int8]) */
}

def @func_5525(%var_5509: Tensor[(11, 195), int8]) -> (Tensor[(8, 5, ?), bool], Tensor[(15, 11, 13), int8], int8, Tensor[(11, 195), int8], Tensor[(15, 11, 13), int8]) {
  %81 = @func_1055() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(8, 5, ?), bool], Tensor[(40, 1), float32], int8) */;
  %82 = cast(meta[relay.Constant][7] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %83 = cast(%var_5509, dtype="int8") /* ty=Tensor[(11, 195), int8] */;
  %84 = reshape(%82, newshape=[]) /* ty=int8 */;
  %85 = reshape(%83, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %86 = @func_2039() /* ty=(Tensor[(10, 13, 11), bool], Tensor[(15, 11, 13), int8], Tensor[(1280), float64], int8, Tensor[(1320), float64]) */;
  %87 = %81.1;
  %88 = @func_148(%84, %85) /* ty=Tensor[(15, 11, 13), int8] */;
  %89 = %86.1;
  (%87, %88, meta[relay.Constant][7] /* ty=int8 */, %var_5509, %89)
}

def @func_3903() -> (Tensor[(1320), float64], Tensor[(1320), float64]) {
  %92 = fn () -> (Tensor[(1320), float64], Tensor[(1320), float64]) {
    %90 = @func_1235() /* ty=Tensor[(1320), float64] */;
    %91 = @func_1235() /* ty=Tensor[(1320), float64] */;
    (%90, %91)
  };
  %92() /* ty=(Tensor[(1320), float64], Tensor[(1320), float64]) */
}

def @func_2331(%var_2308: Tensor[(10, 13, 11), bool]) -> (Tensor[(10, 13, 11), int64], Tensor[(15, 11, 13), int8], Tensor[(715, 3), int8]) {
  %93 = @func_1973() /* ty=Tensor[(10, 13, 11), bool] */;
  %94 = cast(%var_2308, dtype="int64") /* ty=Tensor[(10, 13, 11), int64] */;
  %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%93, dtype="int64") /* ty=Tensor[(10, 13, 11), int64] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %98 = cast(meta[relay.Constant][8] /* ty=Tensor[(715, 3), int8] */, dtype="int8") /* ty=Tensor[(715, 3), int8] */;
  %99 = reshape(%98, newshape=[715, 3]) /* ty=Tensor[(715, 3), int8] */;
  %100 = @func_1422(%99) /* ty=(Tensor[(10, 13, 11), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(715, 3), int8], Tensor[(15, 11, 13), int8]) */;
  %101 = maximum(%96, %97) /* ty=Tensor[(10, 13, 11), int64] */;
  %102 = %100.4;
  (%101, %102, meta[relay.Constant][8] /* ty=Tensor[(715, 3), int8] */)
}

def @func_2334(%var_2332: Tensor[(10, 13, 11), bool]) -> (Tensor[(10, 13, 11), int64], Tensor[(15, 11, 13), int8], Tensor[(715, 3), int8]) {
  @func_2331(%var_2332) /* ty=(Tensor[(10, 13, 11), int64], Tensor[(15, 11, 13), int8], Tensor[(715, 3), int8]) */
}

def @func_6022(%var_6020: Tensor[(2, 9, 9), uint8], %var_6021: Tensor[(2, 9, 9), uint8]) -> (Tensor[(2, 9, 9), uint8],) {
  %108 = fn (%var_6012: Tensor[(2, 9, 9), uint8], %var_6013: Tensor[(2, 9, 9), uint8]) -> (Tensor[(2, 9, 9), uint8],) {
    %103 = cast(%var_6013, dtype="uint8") /* ty=Tensor[(2, 9, 9), uint8] */;
    %104 = shape_of(%var_6012, dtype="int32") /* ty=Tensor[(3), int32] */;
    %105 = cast(%var_6012, dtype="uint8") /* ty=Tensor[(2, 9, 9), uint8] */;
    %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %107 = maximum(%105, %106) /* ty=Tensor[(2, 9, 9), uint8] */;
    (%107,)
  };
  %108(%var_6020, %var_6021) /* ty=(Tensor[(2, 9, 9), uint8],) */
}

def @func_4990() -> (Tensor[(15, 15, 6), float64],) {
  %111 = fn () -> (Tensor[(15, 15, 6), float64],) {
    %109 = @func_4622() /* ty=(int8, Tensor[(5, 78), int16], Tensor[(11, 195), float32], Tensor[(15, 15, 6), float64], Tensor[(135, 10), float64], Tensor[(11, 195), bool], Tensor[(660, 2), float64]) */;
    %110 = %109.3;
    (%110,)
  };
  %111() /* ty=(Tensor[(15, 15, 6), float64],) */
}

def @func_4125() -> (Tensor[(660, 2), float64],) {
  @func_4123() /* ty=(Tensor[(660, 2), float64],) */
}

def @func_5870(%var_5854: Tensor[(2145), int8]) -> (Tensor[(10, 13, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(2145), int8]) {
  %112 = cast(%var_5854, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %113 = reshape(%112, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
  %114 = @func_3007(%113) /* ty=(Tensor[(2145), uint64], Tensor[(8, 7, 13), float32], Tensor[(728), float32], int8, Tensor[(2145), float64], Tensor[(1320), float64], Tensor[(2145), float64], Tensor[(15, 11, 13), int8], Tensor[(1430, 1), bool]) */;
  %115 = @func_3121() /* ty=Tensor[(10, 13, 11), float64] */;
  %116 = %114.1;
  (%115, %116, %var_5854)
}

def @func_6554() -> (int8, Tensor[(2145), bool]) {
  %121 = fn () -> (int8, Tensor[(2145), bool]) {
    %117 = @func_3511() /* ty=(Tensor[(4, 11, 16), float32], int8) */;
    %118 = @func_6178() /* ty=(Tensor[(715, 3), int8], Tensor[(390), int16], Tensor[(660, 2), int16], Tensor[(10, 13, 11), float32], Tensor[(2145), bool]) */;
    %119 = %117.1;
    %120 = %118.4;
    (%119, %120)
  };
  %121() /* ty=(int8, Tensor[(2145), bool]) */
}

def @func_6310(%var_6309: Tensor[(1470), float32]) -> (Tensor[(1470), float32], Tensor[(2, 13, 2145), int16]) {
  %130 = fn (%var_6286: Tensor[(1470), float32]) -> (Tensor[(1470), float32], Tensor[(2, 13, 2145), int16]) {
    %122 = cast(%var_6286, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %123 = reshape(%122, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
    %124 = @func_2153(%123) /* ty=(Tensor[(7, 14, 15), float32], int8, Tensor[(2145), int8]) */;
    %125 = %124.2;
    %126 = @func_4280() /* ty=Tensor[(2, 13, 1), float64] */;
    %127 = cast(%125, dtype="int16") /* ty=Tensor[(2145), int16] */;
    %128 = cast(%126, dtype="int16") /* ty=Tensor[(2, 13, 1), int16] */;
    %129 = bitwise_and(%127, %128) /* ty=Tensor[(2, 13, 2145), int16] */;
    (%var_6286, %129)
  };
  %130(%var_6309) /* ty=(Tensor[(1470), float32], Tensor[(2, 13, 2145), int16]) */
}

def @func_5873(%var_5871: Tensor[(2145), int8]) -> (Tensor[(10, 13, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(2145), int8]) {
  @func_5870(%var_5871) /* ty=(Tensor[(10, 13, 11), float64], Tensor[(8, 7, 13), float32], Tensor[(2145), int8]) */
}

def @func_3460(%var_3386: Tensor[(660, 2), float64], %var_3439: Tensor[(9, 11, 15), float64]) -> (Tensor[(660, 2), float64], Tensor[(660, 2), float64], int8, Tensor[(1280), float64], int8, Tensor[(10, 13, 11), float64], Tensor[(9, 11, 15), bool], Tensor[(9, 11, 15), float64]) {
  %131 = cast(%var_3386, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %132 = reshape(%131, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %133 = @func_2116(%132) /* ty=(Tensor[(660, 2), float64],) */;
  %134 = cast(meta[relay.Constant][9] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %135 = cast(meta[relay.Constant][10] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %136 = reshape(%134, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), float64] */;
  %137 = reshape(%135, newshape=[]) /* ty=int8 */;
  %138 = @func_1296(%136, %137) /* ty=(Tensor[(10, 16, 8), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(2145), int8], int8) */;
  %139 = @func_1055() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(8, 5, ?), bool], Tensor[(40, 1), float32], int8) */;
  %140 = cast(meta[relay.Constant][11] /* ty=Tensor[(9, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(9, 11, 15), float64] */;
  %141 = cos(%140) /* ty=Tensor[(9, 11, 15), float64] */;
  %142 = cast(%var_3439, dtype="bool") /* ty=Tensor[(9, 11, 15), bool] */;
  %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%141, dtype="bool") /* ty=Tensor[(9, 11, 15), bool] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %146 = cast(meta[relay.Constant][11] /* ty=Tensor[(9, 11, 15), float64] */, dtype="bool") /* ty=Tensor[(9, 11, 15), bool] */;
  %147 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%141, dtype="bool") /* ty=Tensor[(9, 11, 15), bool] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %150 = greater_equal(%148, %149) /* ty=Tensor[(9, 11, 15), bool] */;
  %151 = cast(%150, dtype="float64") /* ty=Tensor[(9, 11, 15), float64] */;
  %152 = acosh(%151) /* ty=Tensor[(9, 11, 15), float64] */;
  %153 = cast(%152, dtype="float64") /* ty=Tensor[(9, 11, 15), float64] */;
  %154 = %133.0;
  %155 = %138.2;
  %156 = %139.0;
  %157 = not_equal(%144, %145) /* ty=Tensor[(9, 11, 15), bool] */;
  %158 = rsqrt(%153) /* ty=Tensor[(9, 11, 15), float64] */;
  (%154, %var_3386, %155, meta[relay.Constant][9] /* ty=Tensor[(1280), float64] */, meta[relay.Constant][10] /* ty=int8 */, %156, %157, %158)
}

def @func_3057() -> (int8, Tensor[(1320), float64]) {
  %159 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
  %160 = @func_1902() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(40, 2), bool], Tensor[(1320), float64], Tensor[(40, 2), bool], Tensor[(10, 13, 11), float64]) */;
  %161 = %159.0;
  %162 = %160.2;
  (%161, %162)
}

def @func_4123() -> (Tensor[(660, 2), float64],) {
  %163 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
  %164 = %163.2;
  (%164,)
}

def @func_1903() -> (Tensor[(10, 13, 11), float64], Tensor[(40, 2), bool], Tensor[(1320), float64], Tensor[(40, 2), bool], Tensor[(10, 13, 11), float64]) {
  %184 = fn () -> (Tensor[(10, 13, 11), float64], Tensor[(40, 2), bool], Tensor[(1320), float64], Tensor[(40, 2), bool], Tensor[(10, 13, 11), float64]) {
    %165 = cast(meta[relay.Constant][12] /* ty=Tensor[(40, 2), float32] */, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
    %166 = log(%165) /* ty=Tensor[(40, 2), float64] */;
    %167 = @func_1055() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(8, 5, ?), bool], Tensor[(40, 1), float32], int8) */;
    %168 = %167.2;
    %169 = cast(%168, dtype="int32") /* ty=Tensor[(40, 1), int32] */;
    %170 = cast(meta[relay.Constant][12] /* ty=Tensor[(40, 2), float32] */, dtype="int32") /* ty=Tensor[(40, 2), int32] */;
    %171 = bitwise_xor(%169, %170) /* ty=Tensor[(40, 2), int32] */;
    %172 = cast(%171, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
    %173 = shape_of(%166, dtype="int32") /* ty=Tensor[(2), int32] */;
    %174 = cast(%166, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
    %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %176 = cast(%166, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
    %177 = cast(%168, dtype="bool") /* ty=Tensor[(40, 1), bool] */;
    %178 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
    %179 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
    %180 = greater(%174, %175) /* ty=Tensor[(40, 2), bool] */;
    %181 = @func_1235() /* ty=Tensor[(1320), float64] */;
    %182 = logical_and(%176, %177) /* ty=Tensor[(40, 2), bool] */;
    %183 = %178.3;
    (%179, %180, %181, %182, %183)
  };
  %184() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(40, 2), bool], Tensor[(1320), float64], Tensor[(40, 2), bool], Tensor[(10, 13, 11), float64]) */
}

def @func_3581() -> Tensor[(10, 13, 11), int32] {
  @func_3577() /* ty=Tensor[(10, 13, 11), int32] */
}

def @func_5455() -> (Tensor[(10, 13, 11), int16], int8) {
  @func_5453() /* ty=(Tensor[(10, 13, 11), int16], int8) */
}

def @func_4748(%var_4736: Tensor[(10, 13, 11), int8]) -> Tensor[(10, 13, 11), float32] {
  %185 = @func_3577() /* ty=Tensor[(10, 13, 11), int32] */;
  %186 = cast(meta[relay.Constant][13] /* ty=Tensor[(10, 13, 11), int32] */, dtype="int8") /* ty=Tensor[(10, 13, 11), int8] */;
  %187 = shape_of(%185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%185, dtype="int8") /* ty=Tensor[(10, 13, 11), int8] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %190 = add(%188, %189) /* ty=Tensor[(10, 13, 11), int8] */;
  %191 = cast(%var_4736, dtype="float32") /* ty=Tensor[(10, 13, 11), float32] */;
  %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%190, dtype="float32") /* ty=Tensor[(10, 13, 11), float32] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%193, %194) /* ty=Tensor[(10, 13, 11), float32] */
}

def @func_3623() -> (Tensor[(10, 13, 11), float64],) {
  %195 = @func_1169() /* ty=(Tensor[(10, 13, 11), float64],) */;
  %196 = %195.0;
  (%196,)
}

def @func_541(%var_537: Tensor[(4, 11, 16), float32], %var_538: Tensor[(4, 11, 16), float32], %var_539: int8, %var_540: Tensor[(2145, 1), int8]) -> (Tensor[(4, 11, 16), float32], Tensor[(2145, 1), int8], Tensor[(15, 11, 13), bool]) {
  %210 = fn (%var_466: Tensor[(4, 11, 16), float32], %var_467: Tensor[(4, 11, 16), float32], %var_495: int8, %var_496: Tensor[(2145, 1), int8]) -> (Tensor[(4, 11, 16), float32], Tensor[(2145, 1), int8], Tensor[(15, 11, 13), bool]) {
    %197 = cast(%var_467, dtype="float32") /* ty=Tensor[(4, 11, 16), float32] */;
    %198 = shape_of(%var_466, dtype="int32") /* ty=Tensor[(3), int32] */;
    %199 = cast(%var_466, dtype="float32") /* ty=Tensor[(4, 11, 16), float32] */;
    %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %201 = cast(%var_495, dtype="int8") /* ty=int8 */;
    %202 = cast(%var_496, dtype="int8") /* ty=Tensor[(2145, 1), int8] */;
    %203 = reshape(%201, newshape=[]) /* ty=int8 */;
    %204 = reshape(%202, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
    %205 = @func_148(%203, %204) /* ty=Tensor[(15, 11, 13), int8] */;
    %206 = cast(%205, dtype="bool") /* ty=Tensor[(15, 11, 13), bool] */;
    %207 = cast(%var_495, dtype="bool") /* ty=bool */;
    %208 = power(%199, %200) /* ty=Tensor[(4, 11, 16), float32] */;
    %209 = equal(%206, %207) /* ty=Tensor[(15, 11, 13), bool] */;
    (%208, %var_496, %209)
  };
  %210(%var_537, %var_538, %var_539, %var_540) /* ty=(Tensor[(4, 11, 16), float32], Tensor[(2145, 1), int8], Tensor[(15, 11, 13), bool]) */
}

def @func_2740() -> (int8,) {
  %211 = @func_1434() /* ty=(int8,) */;
  %212 = %211.0;
  (%212,)
}

def @func_2273() -> Tensor[(4, 11, 16), float64] {
  %216 = fn () -> Tensor[(4, 11, 16), float64] {
    %213 = @func_1201() /* ty=(Tensor[(4, 11, 16), float32],) */;
    %214 = %213.0;
    %215 = cast(%214, dtype="float64") /* ty=Tensor[(4, 11, 16), float64] */;
    acosh(%215) /* ty=Tensor[(4, 11, 16), float64] */
  };
  %216() /* ty=Tensor[(4, 11, 16), float64] */
}

def @func_3477(%var_3476: Tensor[(6, 7, 3), float64]) -> Tensor[(6, 7, 3), float64] {
  %218 = fn (%var_3468: Tensor[(6, 7, 3), float64]) -> Tensor[(6, 7, 3), float64] {
    %217 = cast(%var_3468, dtype="float64") /* ty=Tensor[(6, 7, 3), float64] */;
    log2(%217) /* ty=Tensor[(6, 7, 3), float64] */
  };
  %218(%var_3476) /* ty=Tensor[(6, 7, 3), float64] */
}

def @func_1435() -> (int8,) {
  %221 = fn () -> (int8,) {
    %219 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
    %220 = %219.0;
    (%220,)
  };
  %221() /* ty=(int8,) */
}

def @func_3583() -> Tensor[(10, 13, 11), int32] {
  @func_3581() /* ty=Tensor[(10, 13, 11), int32] */
}

def @func_6505(%var_6504: Tensor[(10, 13, 11), float64]) -> (Tensor[(10, 13, 11), int8],) {
  %228 = fn (%var_6480: Tensor[(10, 13, 11), float64]) -> (Tensor[(10, 13, 11), int8],) {
    %222 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
    %223 = cast(%var_6480, dtype="int8") /* ty=Tensor[(10, 13, 11), int8] */;
    %224 = shape_of(%222, dtype="int32") /* ty=Tensor[(3), int32] */;
    %225 = cast(%222, dtype="int8") /* ty=Tensor[(10, 13, 11), int8] */;
    %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %227 = left_shift(%225, %226) /* ty=Tensor[(10, 13, 11), int8] */;
    (%227,)
  };
  %228(%var_6504) /* ty=(Tensor[(10, 13, 11), int8],) */
}

def @func_5775() -> int8 {
  %230 = fn () -> int8 {
    %229 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
    %229.3
  };
  %230() /* ty=int8 */
}

def @func_6179() -> (Tensor[(715, 3), int8], Tensor[(390), int16], Tensor[(660, 2), int16], Tensor[(10, 13, 11), float32], Tensor[(2145), bool]) {
  %255 = fn () -> (Tensor[(715, 3), int8], Tensor[(390), int16], Tensor[(660, 2), int16], Tensor[(10, 13, 11), float32], Tensor[(2145), bool]) {
    %231 = cast(meta[relay.Constant][14] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
    %232 = cast(meta[relay.Constant][14] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
    %233 = cast(meta[relay.Constant][15] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
    %234 = reshape(%231, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
    %235 = reshape(%232, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
    %236 = reshape(%233, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
    %237 = @func_1499(%234, %235, %236) /* ty=(Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) */;
    %238 = @func_3677() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */;
    %239 = %238.0;
    %240 = cast(%239, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
    %241 = asinh(%240) /* ty=Tensor[(660, 2), float64] */;
    %242 = @func_3195() /* ty=(int8, int8) */;
    %243 = %242.1;
    %244 = cast(%241, dtype="int16") /* ty=Tensor[(660, 2), int16] */;
    %245 = cast(%243, dtype="int16") /* ty=int16 */;
    %246 = @func_6118() /* ty=(Tensor[(10, 13, 11), bool],) */;
    %247 = %246.0;
    %248 = cast(%247, dtype="float32") /* ty=Tensor[(10, 13, 11), float32] */;
    %249 = cast(meta[relay.Constant][15] /* ty=Tensor[(2145), int8] */, dtype="bool") /* ty=Tensor[(2145), bool] */;
    %250 = cast(%243, dtype="bool") /* ty=bool */;
    %251 = %237.3;
    %252 = add(%244, %245) /* ty=Tensor[(660, 2), int16] */;
    %253 = acos(%248) /* ty=Tensor[(10, 13, 11), float32] */;
    %254 = not_equal(%249, %250) /* ty=Tensor[(2145), bool] */;
    (%251, meta[relay.Constant][14] /* ty=Tensor[(390), int16] */, %252, %253, %254)
  };
  %255() /* ty=(Tensor[(715, 3), int8], Tensor[(390), int16], Tensor[(660, 2), int16], Tensor[(10, 13, 11), float32], Tensor[(2145), bool]) */
}

def @func_2896(%var_2895: Tensor[(8, 7, 13), float32]) -> (Tensor[(8, 7, 13), float32],) {
  %258 = fn (%var_2879: Tensor[(8, 7, 13), float32]) -> (Tensor[(8, 7, 13), float32],) {
    %256 = cast(%var_2879, dtype="float32") /* ty=Tensor[(8, 7, 13), float32] */;
    %257 = tan(%256) /* ty=Tensor[(8, 7, 13), float32] */;
    (%257,)
  };
  %258(%var_2895) /* ty=(Tensor[(8, 7, 13), float32],) */
}

def @func_2852() -> (int8,) {
  %261 = fn () -> (int8,) {
    %259 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
    %260 = %259.3;
    (%260,)
  };
  %261() /* ty=(int8,) */
}

def @func_1705() -> (int8, Tensor[(15, 11, 13), int8], Tensor[(2145), int8], Tensor[(3, 10, 13), float32], Tensor[(390), int16]) {
  @func_1703() /* ty=(int8, Tensor[(15, 11, 13), int8], Tensor[(2145), int8], Tensor[(3, 10, 13), float32], Tensor[(390), int16]) */
}

def @func_5237() -> (Tensor[(10, 13, 11), float64],) {
  %264 = fn () -> (Tensor[(10, 13, 11), float64],) {
    %262 = @func_1169() /* ty=(Tensor[(10, 13, 11), float64],) */;
    %263 = %262.0;
    (%263,)
  };
  %264() /* ty=(Tensor[(10, 13, 11), float64],) */
}

def @func_1235() -> Tensor[(1320), float64] {
  %265 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %265.2
}

def @func_605(%var_602: Tensor[(11, 8, 15), float64], %var_603: Tensor[(11, 8, 15), float64], %var_604: int8) -> (Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) {
  @func_600(%var_602, %var_603, %var_604) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) */
}

def @func_5483(%var_5482: Tensor[(390), int16]) -> (Tensor[(40, 2), bool], Tensor[(390), int16], Tensor[(390), int16], Tensor[(2145), int8]) {
  %274 = fn (%var_5476: Tensor[(390), int16]) -> (Tensor[(40, 2), bool], Tensor[(390), int16], Tensor[(390), int16], Tensor[(2145), int8]) {
    %266 = @func_2921() /* ty=(Tensor[(40, 2), bool],) */;
    %267 = cast(%var_5476, dtype="int16") /* ty=Tensor[(390), int16] */;
    %268 = cast(meta[relay.Constant][16] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
    %269 = reshape(%267, newshape=[390]) /* ty=Tensor[(390), int16] */;
    %270 = reshape(%268, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
    %271 = @func_4404(%269, %270) /* ty=(Tensor[(10, 13, 11), bool], Tensor[(390), int16], Tensor[(2145), bool], Tensor[(715, 3), bool], Tensor[(660, 2), float32]) */;
    %272 = %266.0;
    %273 = %271.1;
    (%272, %273, %var_5476, meta[relay.Constant][16] /* ty=Tensor[(2145), int8] */)
  };
  %274(%var_5482) /* ty=(Tensor[(40, 2), bool], Tensor[(390), int16], Tensor[(390), int16], Tensor[(2145), int8]) */
}

def @func_1422(%var_1410: Tensor[(715, 3), int8]) -> (Tensor[(10, 13, 11), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(715, 3), int8], Tensor[(15, 11, 13), int8]) {
  %275 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %276 = cast(meta[relay.Constant][17] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %277 = cast(%var_1410, dtype="int8") /* ty=Tensor[(715, 3), int8] */;
  %278 = reshape(%276, newshape=[]) /* ty=int8 */;
  %279 = reshape(%277, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %280 = cast(meta[relay.Constant][17] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %281 = @func_148(%278, %279) /* ty=Tensor[(15, 11, 13), int8] */;
  %282 = cast(%281, dtype="int8") /* ty=Tensor[(15, 11, 13), int8] */;
  %283 = reshape(%280, newshape=[]) /* ty=int8 */;
  %284 = reshape(%282, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %285 = %275.0;
  %286 = @func_148(%283, %284) /* ty=Tensor[(15, 11, 13), int8] */;
  (%285, %281, meta[relay.Constant][17] /* ty=int8 */, %var_1410, %286)
}

def @func_5200(%var_5199: Tensor[(7, 10, 10), float64]) -> (Tensor[(7, 10, 10), float64], Tensor[(10, 13, 11), bool], Tensor[(4, 11, 16), float64], int8, Tensor[(10, 13, 11), float64]) {
  %298 = fn (%var_5166: Tensor[(7, 10, 10), float64]) -> (Tensor[(7, 10, 10), float64], Tensor[(10, 13, 11), bool], Tensor[(4, 11, 16), float64], int8, Tensor[(10, 13, 11), float64]) {
    %287 = cast(%var_5166, dtype="float64") /* ty=Tensor[(7, 10, 10), float64] */;
    %288 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(7, 10, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %289 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 10, 10), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 10), float64] */;
    %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %291 = @func_3159() /* ty=(int8,) */;
    %292 = @func_3623() /* ty=(Tensor[(10, 13, 11), float64],) */;
    %293 = floor_mod(%289, %290) /* ty=Tensor[(7, 10, 10), float64] */;
    %294 = @func_1973() /* ty=Tensor[(10, 13, 11), bool] */;
    %295 = @func_2272() /* ty=Tensor[(4, 11, 16), float64] */;
    %296 = %291.0;
    %297 = %292.0;
    (%293, %294, %295, %296, %297)
  };
  %298(%var_5199) /* ty=(Tensor[(7, 10, 10), float64], Tensor[(10, 13, 11), bool], Tensor[(4, 11, 16), float64], int8, Tensor[(10, 13, 11), float64]) */
}

def @func_4956() -> (Tensor[(10, 13, 11), float64], Tensor[(660, 2), bool]) {
  @func_4954() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(660, 2), bool]) */
}

def @func_987(%var_985: Tensor[(8, 5, 1), float32], %var_986: int8) -> (Tensor[(15, 11, 13), bool], Tensor[(1320), float64], Tensor[(8, 5, 1), int8], Tensor[(8, 5, ?), bool], Tensor[(704), float32]) {
  @func_983(%var_985, %var_986) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(1320), float64], Tensor[(8, 5, 1), int8], Tensor[(8, 5, ?), bool], Tensor[(704), float32]) */
}

def @func_2039() -> (Tensor[(10, 13, 11), bool], Tensor[(15, 11, 13), int8], Tensor[(1280), float64], int8, Tensor[(1320), float64]) {
  %299 = cast(meta[relay.Constant][19] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %300 = cast(meta[relay.Constant][20] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %301 = reshape(%299, newshape=[10, 16, 8]) /* ty=Tensor[(10, 16, 8), float64] */;
  %302 = reshape(%300, newshape=[]) /* ty=int8 */;
  %303 = @func_1296(%301, %302) /* ty=(Tensor[(10, 16, 8), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(2145), int8], int8) */;
  %304 = @func_1973() /* ty=Tensor[(10, 13, 11), bool] */;
  %305 = %303.1;
  %306 = @func_1235() /* ty=Tensor[(1320), float64] */;
  (%304, %305, meta[relay.Constant][19] /* ty=Tensor[(1280), float64] */, meta[relay.Constant][20] /* ty=int8 */, %306)
}

def @func_2923() -> (Tensor[(40, 2), bool],) {
  @func_2921() /* ty=(Tensor[(40, 2), bool],) */
}

def @func_4169(%var_4166: Tensor[(1, 2145), int8]) -> (int8, Tensor[(4, 11, 16), float32], Tensor[(704), float32], Tensor[(1, 2145), int8]) {
  %307 = @func_2851() /* ty=(int8,) */;
  %308 = cast(meta[relay.Constant][21] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %309 = cast(meta[relay.Constant][21] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %310 = %307.0;
  %311 = cast(%310, dtype="int8") /* ty=int8 */;
  %312 = cast(%var_4166, dtype="int8") /* ty=Tensor[(1, 2145), int8] */;
  %313 = reshape(%308, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), float32] */;
  %314 = reshape(%309, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), float32] */;
  %315 = reshape(%311, newshape=[]) /* ty=int8 */;
  %316 = reshape(%312, newshape=[2145, 1]) /* ty=Tensor[(2145, 1), int8] */;
  %317 = @func_536(%313, %314, %315, %316) /* ty=(Tensor[(4, 11, 16), float32], Tensor[(2145, 1), int8], Tensor[(15, 11, 13), bool]) */;
  %318 = %317.0;
  (%310, %318, meta[relay.Constant][21] /* ty=Tensor[(704), float32] */, %var_4166)
}

def @func_2729(%var_2715: Tensor[(7, 14), float32]) -> (Tensor[(7, 14), float32], Tensor[(15, 11, 13), int8], int8, Tensor[(1, 2145), int8]) {
  %319 = cast(%var_2715, dtype="float32") /* ty=Tensor[(7, 14), float32] */;
  %320 = cast(meta[relay.Constant][22] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %321 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 2145), int8] */, dtype="int8") /* ty=Tensor[(1, 2145), int8] */;
  %322 = reshape(%320, newshape=[]) /* ty=int8 */;
  %323 = reshape(%321, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %324 = sinh(%319) /* ty=Tensor[(7, 14), float32] */;
  %325 = @func_148(%322, %323) /* ty=Tensor[(15, 11, 13), int8] */;
  (%324, %325, meta[relay.Constant][22] /* ty=int8 */, meta[relay.Constant][23] /* ty=Tensor[(1, 2145), int8] */)
}

def @func_2921() -> (Tensor[(40, 2), bool],) {
  %326 = @func_2395() /* ty=(Tensor[(40, 2), bool],) */;
  %327 = %326.0;
  (%327,)
}

def @func_5528(%var_5526: Tensor[(11, 195), int8]) -> (Tensor[(8, 5, ?), bool], Tensor[(15, 11, 13), int8], int8, Tensor[(11, 195), int8], Tensor[(15, 11, 13), int8]) {
  @func_5525(%var_5526) /* ty=(Tensor[(8, 5, ?), bool], Tensor[(15, 11, 13), int8], int8, Tensor[(11, 195), int8], Tensor[(15, 11, 13), int8]) */
}

def @func_6253() -> (int8,) {
  @func_6251() /* ty=(int8,) */
}

def @func_2396() -> (Tensor[(40, 2), bool],) {
  %330 = fn () -> (Tensor[(40, 2), bool],) {
    %328 = @func_1902() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(40, 2), bool], Tensor[(1320), float64], Tensor[(40, 2), bool], Tensor[(10, 13, 11), float64]) */;
    %329 = %328.3;
    (%329,)
  };
  %330() /* ty=(Tensor[(40, 2), bool],) */
}

def @func_2119(%var_2117: Tensor[(660, 2), float64]) -> (Tensor[(660, 2), float64],) {
  @func_2116(%var_2117) /* ty=(Tensor[(660, 2), float64],) */
}

def @func_3552() -> (Tensor[(390), int16],) {
  %333 = fn () -> (Tensor[(390), int16],) {
    %331 = @func_1703() /* ty=(int8, Tensor[(15, 11, 13), int8], Tensor[(2145), int8], Tensor[(3, 10, 13), float32], Tensor[(390), int16]) */;
    %332 = %331.4;
    (%332,)
  };
  %333() /* ty=(Tensor[(390), int16],) */
}

def @main(%var_6577: Tensor[(40, 2), bool]) -> Tensor[(40, 2), bool] {
  %334 = @func_2923() /* ty=(Tensor[(40, 2), bool],) */;
  %335 = %334.0;
  %336 = cast(%var_6577, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
  %337 = shape_of(%335, dtype="int32") /* ty=Tensor[(2), int32] */;
  %338 = cast(%335, dtype="bool") /* ty=Tensor[(40, 2), bool] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  greater_equal(%338, %339) /* ty=Tensor[(40, 2), bool] */
}

def @func_151(%var_149: int8, %var_150: Tensor[(15, 11, 13), int8]) -> Tensor[(15, 11, 13), int8] {
  %342 = fn (%var_141: int8, %var_142: Tensor[(15, 11, 13), int8]) -> Tensor[(15, 11, 13), int8] {
    %340 = cast(%var_141, dtype="int8") /* ty=int8 */;
    %341 = cast(%var_142, dtype="int8") /* ty=Tensor[(15, 11, 13), int8] */;
    logical_xor(%340, %341) /* ty=Tensor[(15, 11, 13), int8] */
  };
  %342(%var_149, %var_150) /* ty=Tensor[(15, 11, 13), int8] */
}

def @func_4197() -> (Tensor[(390), int16],) {
  @func_4195() /* ty=(Tensor[(390), int16],) */
}

def @func_4623() -> (int8, Tensor[(5, 78), int16], Tensor[(11, 195), float32], Tensor[(15, 15, 6), float64], Tensor[(135, 10), float64], Tensor[(11, 195), bool], Tensor[(660, 2), float64]) {
  %369 = fn () -> (int8, Tensor[(5, 78), int16], Tensor[(11, 195), float32], Tensor[(15, 15, 6), float64], Tensor[(135, 10), float64], Tensor[(11, 195), bool], Tensor[(660, 2), float64]) {
    %343 = @func_1434() /* ty=(int8,) */;
    %344 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 78), int16] */, dtype="int16") /* ty=Tensor[(5, 78), int16] */;
    %345 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 78), int16] */, dtype="int16") /* ty=Tensor[(5, 78), int16] */;
    %346 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 195), int8] */, dtype="int8") /* ty=Tensor[(11, 195), int8] */;
    %347 = reshape(%344, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
    %348 = reshape(%345, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
    %349 = reshape(%346, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
    %350 = @func_1499(%347, %348, %349) /* ty=(Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) */;
    %351 = %350.3;
    %352 = cast(%351, dtype="float32") /* ty=Tensor[(715, 3), float32] */;
    %353 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(11, 195), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %354 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 195), int8] */, dtype="float32") /* ty=Tensor[(11, 195), float32] */;
    %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %356 = cast(meta[relay.Constant][26] /* ty=Tensor[(135, 10), float64] */, dtype="float64") /* ty=Tensor[(135, 10), float64] */;
    %357 = reshape(%356, newshape=[15, 15, 6]) /* ty=Tensor[(15, 15, 6), float64] */;
    %358 = @func_2431(%357) /* ty=(Tensor[(15, 15, 6), float64],) */;
    %359 = cast(%351, dtype="bool") /* ty=Tensor[(715, 3), bool] */;
    %360 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(11, 195), int8] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %361 = cast(meta[relay.Constant][25] /* ty=Tensor[(11, 195), int8] */, dtype="bool") /* ty=Tensor[(11, 195), bool] */;
    %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %363 = @func_3752() /* ty=(Tensor[(10, 13, 11), int32], Tensor[(660, 2), float64]) */;
    %364 = %343.0;
    %365 = divide(%354, %355) /* ty=Tensor[(11, 195), float32] */;
    %366 = %358.0;
    %367 = not_equal(%361, %362) /* ty=Tensor[(11, 195), bool] */;
    %368 = %363.1;
    (%364, meta[relay.Constant][24] /* ty=Tensor[(5, 78), int16] */, %365, %366, meta[relay.Constant][26] /* ty=Tensor[(135, 10), float64] */, %367, %368)
  };
  %369() /* ty=(int8, Tensor[(5, 78), int16], Tensor[(11, 195), float32], Tensor[(15, 15, 6), float64], Tensor[(135, 10), float64], Tensor[(11, 195), bool], Tensor[(660, 2), float64]) */
}

def @func_5498(%var_5497: Tensor[(2145), int8]) -> (Tensor[(10, 13, 11), int32], Tensor[(2145), int8], Tensor[(390), int16], Tensor[(2145), int8]) {
  %379 = fn (%var_5494: Tensor[(2145), int8]) -> (Tensor[(10, 13, 11), int32], Tensor[(2145), int8], Tensor[(390), int16], Tensor[(2145), int8]) {
    %370 = cast(meta[relay.Constant][27] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
    %371 = cast(meta[relay.Constant][27] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
    %372 = cast(%var_5494, dtype="int8") /* ty=Tensor[(2145), int8] */;
    %373 = reshape(%370, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
    %374 = reshape(%371, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
    %375 = reshape(%372, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
    %376 = @func_1499(%373, %374, %375) /* ty=(Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) */;
    %377 = @func_3577() /* ty=Tensor[(10, 13, 11), int32] */;
    %378 = %376.4;
    (%377, %378, meta[relay.Constant][27] /* ty=Tensor[(390), int16] */, %var_5494)
  };
  %379(%var_5497) /* ty=(Tensor[(10, 13, 11), int32], Tensor[(2145), int8], Tensor[(390), int16], Tensor[(2145), int8]) */
}

def @func_3695() -> (Tensor[(10, 13, 11), float64],) {
  %380 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %381 = %380.0;
  (%381,)
}

def @func_5453() -> (Tensor[(10, 13, 11), int16], int8) {
  %382 = @func_4854() /* ty=(int8, Tensor[(10, 13, 11), int32]) */;
  %383 = %382.1;
  %384 = cast(meta[relay.Constant][28] /* ty=Tensor[(10, 13, 11), int32] */, dtype="int16") /* ty=Tensor[(10, 13, 11), int16] */;
  %385 = shape_of(%383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %386 = cast(%383, dtype="int16") /* ty=Tensor[(10, 13, 11), int16] */;
  %387 = dyn.reshape(%384, %385, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %388 = @func_5282() /* ty=(int8, int8) */;
  %389 = minimum(%386, %387) /* ty=Tensor[(10, 13, 11), int16] */;
  %390 = %388.1;
  (%389, %390)
}

def @func_4408(%var_4406: Tensor[(390), int16], %var_4407: Tensor[(2145), int8]) -> (Tensor[(10, 13, 11), bool], Tensor[(390), int16], Tensor[(2145), bool], Tensor[(715, 3), bool], Tensor[(660, 2), float32]) {
  @func_4404(%var_4406, %var_4407) /* ty=(Tensor[(10, 13, 11), bool], Tensor[(390), int16], Tensor[(2145), bool], Tensor[(715, 3), bool], Tensor[(660, 2), float32]) */
}

def @func_1331() -> (int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) {
  @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */
}

def @func_2155(%var_2154: Tensor[(7, 14, 15), float32]) -> (Tensor[(7, 14, 15), float32], int8, Tensor[(2145), int8]) {
  %397 = fn (%var_2137: Tensor[(7, 14, 15), float32]) -> (Tensor[(7, 14, 15), float32], int8, Tensor[(2145), int8]) {
    %391 = cast(%var_2137, dtype="float32") /* ty=Tensor[(7, 14, 15), float32] */;
    %392 = cast(meta[relay.Constant][29] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
    %393 = reshape(%392, newshape=[715, 3]) /* ty=Tensor[(715, 3), int8] */;
    %394 = @func_1422(%393) /* ty=(Tensor[(10, 13, 11), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(715, 3), int8], Tensor[(15, 11, 13), int8]) */;
    %395 = acosh(%391) /* ty=Tensor[(7, 14, 15), float32] */;
    %396 = %394.2;
    (%395, %396, meta[relay.Constant][29] /* ty=Tensor[(2145), int8] */)
  };
  %397(%var_2154) /* ty=(Tensor[(7, 14, 15), float32], int8, Tensor[(2145), int8]) */
}

def @func_4677(%var_4652: Tensor[(15, 15, 6), float64], %var_4672: Tensor[(1470), float32]) -> (Tensor[(15, 15, 6), float64], Tensor[(40, 2), bool], Tensor[(2145), int8], Tensor[(1470), float32]) {
  %398 = cast(%var_4652, dtype="float64") /* ty=Tensor[(15, 15, 6), float64] */;
  %399 = asin(%398) /* ty=Tensor[(15, 15, 6), float64] */;
  %400 = cast(%399, dtype="float64") /* ty=Tensor[(15, 15, 6), float64] */;
  %401 = @func_1902() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(40, 2), bool], Tensor[(1320), float64], Tensor[(40, 2), bool], Tensor[(10, 13, 11), float64]) */;
  %402 = cast(%var_4672, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %403 = reshape(%402, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %404 = @func_2153(%403) /* ty=(Tensor[(7, 14, 15), float32], int8, Tensor[(2145), int8]) */;
  %405 = log2(%400) /* ty=Tensor[(15, 15, 6), float64] */;
  %406 = %401.1;
  %407 = %404.2;
  (%405, %406, %407, %var_4672)
}

def @func_4855() -> (int8, Tensor[(10, 13, 11), int32]) {
  %411 = fn () -> (int8, Tensor[(10, 13, 11), int32]) {
    %408 = @func_2740() /* ty=(int8,) */;
    %409 = %408.0;
    %410 = @func_3581() /* ty=Tensor[(10, 13, 11), int32] */;
    (%409, %410)
  };
  %411() /* ty=(int8, Tensor[(10, 13, 11), int32]) */
}

def @func_3697() -> (Tensor[(10, 13, 11), float64],) {
  @func_3695() /* ty=(Tensor[(10, 13, 11), float64],) */
}

def @func_2116(%var_2080: Tensor[(660, 2), float64]) -> (Tensor[(660, 2), float64],) {
  %412 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
  %413 = %412.2;
  %414 = cast(%var_2080, dtype="bool") /* ty=Tensor[(660, 2), bool] */;
  %415 = shape_of(%413, dtype="int32") /* ty=Tensor[(2), int32] */;
  %416 = cast(%413, dtype="bool") /* ty=Tensor[(660, 2), bool] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %418 = greater_equal(%416, %417) /* ty=Tensor[(660, 2), bool] */;
  %419 = cast(%var_2080, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %420 = rsqrt(%419) /* ty=Tensor[(660, 2), float64] */;
  %421 = cast(%420, dtype="bool") /* ty=Tensor[(660, 2), bool] */;
  %422 = shape_of(%418, dtype="int32") /* ty=Tensor[(2), int32] */;
  %423 = cast(%418, dtype="bool") /* ty=Tensor[(660, 2), bool] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %425 = less_equal(%423, %424) /* ty=Tensor[(660, 2), bool] */;
  %426 = cast(%425, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %427 = cos(%426) /* ty=Tensor[(660, 2), float64] */;
  (%427,)
}

def @func_1648(%var_1525: int16, %var_1526: Tensor[(4, 3, 1), int16], %var_1587: Tensor[(4, 3, 13), bool]) -> (Tensor[(4, 3, 1), int16], Tensor[(40), float32], Tensor[(11, 195), bool], Tensor[(4, 3, ?), float32], Tensor[(4, 3, 13), bool], Tensor[(4, 3, ?), uint16], Tensor[(1320), float64], Tensor[(11, 8, 15), float64], Tensor[(4, 3, 40), int32]) {
  %428 = cast(%var_1525, dtype="int16") /* ty=int16 */;
  %429 = cast(%var_1526, dtype="int16") /* ty=Tensor[(4, 3, 1), int16] */;
  %430 = cast(meta[relay.Constant][30] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %431 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 195), bool] */, dtype="bool") /* ty=Tensor[(11, 195), bool] */;
  %432 = reshape(%430, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %433 = reshape(%431, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), bool] */;
  %434 = @func_1088(%432, %433) /* ty=(Tensor[(10, 13, 11), float64], Tensor[(40), float32], int8, Tensor[(15, 11, 13), bool]) */;
  %435 = cast(%var_1526, dtype="float64") /* ty=Tensor[(4, 3, 1), float64] */;
  %436 = rsqrt(%435) /* ty=Tensor[(4, 3, 1), float64] */;
  %437 = cast(%436, dtype="float32") /* ty=Tensor[(4, 3, 1), float32] */;
  %438 = atan(%437) /* ty=Tensor[(4, 3, 1), float32] */;
  %439 = cast(%438, dtype="bool") /* ty=Tensor[(4, 3, 1), bool] */;
  %440 = cast(%var_1525, dtype="bool") /* ty=bool */;
  %441 = less_equal(%439, %440) /* ty=Tensor[(4, 3, 1), bool] */;
  %442 = cast(%441, dtype="float64") /* ty=Tensor[(4, 3, 1), float64] */;
  %443 = atanh(%442) /* ty=Tensor[(4, 3, 1), float64] */;
  %444 = cast(%436, dtype="float32") /* ty=Tensor[(4, 3, 1), float32] */;
  %445 = shape_of(%443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %446 = cast(%443, dtype="float32") /* ty=Tensor[(4, 3, 1), float32] */;
  %447 = dyn.reshape(%444, %445, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %448 = cast(%441, dtype="bool") /* ty=Tensor[(4, 3, 1), bool] */;
  %449 = cast(%var_1587, dtype="bool") /* ty=Tensor[(4, 3, 13), bool] */;
  %450 = cast(%441, dtype="bool") /* ty=Tensor[(4, 3, 1), bool] */;
  %451 = shape_of(%443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%443, dtype="bool") /* ty=Tensor[(4, 3, 1), bool] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %454 = logical_or(%452, %453) /* ty=Tensor[(4, 3, ?), bool] */;
  %455 = cast(%var_1525, dtype="uint16") /* ty=uint16 */;
  %456 = cast(%454, dtype="uint16") /* ty=Tensor[(4, 3, ?), uint16] */;
  %457 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
  %458 = cast(%443, dtype="float64") /* ty=Tensor[(4, 3, 1), float64] */;
  %459 = log10(%458) /* ty=Tensor[(4, 3, 1), float64] */;
  %460 = cast(%459, dtype="int16") /* ty=Tensor[(4, 3, 1), int16] */;
  %461 = cast(meta[relay.Constant][30] /* ty=Tensor[(40), float32] */, dtype="int16") /* ty=Tensor[(40), int16] */;
  %462 = add(%460, %461) /* ty=Tensor[(4, 3, 40), int16] */;
  %463 = cast(%462, dtype="float32") /* ty=Tensor[(4, 3, 40), float32] */;
  %464 = sin(%463) /* ty=Tensor[(4, 3, 40), float32] */;
  %465 = cast(%443, dtype="float64") /* ty=Tensor[(4, 3, 1), float64] */;
  %466 = acos(%465) /* ty=Tensor[(4, 3, 1), float64] */;
  %467 = cast(%464, dtype="int32") /* ty=Tensor[(4, 3, 40), int32] */;
  %468 = cast(%466, dtype="int32") /* ty=Tensor[(4, 3, 1), int32] */;
  %469 = maximum(%428, %429) /* ty=Tensor[(4, 3, 1), int16] */;
  %470 = %434.1;
  %471 = mod(%446, %447) /* ty=Tensor[(4, 3, ?), float32] */;
  %472 = less_equal(%448, %449) /* ty=Tensor[(4, 3, 13), bool] */;
  %473 = bitwise_xor(%455, %456) /* ty=Tensor[(4, 3, ?), uint16] */;
  %474 = @func_1235() /* ty=Tensor[(1320), float64] */;
  %475 = %457.1;
  %476 = left_shift(%467, %468) /* ty=Tensor[(4, 3, 40), int32] */;
  (%469, %470, meta[relay.Constant][31] /* ty=Tensor[(11, 195), bool] */, %471, %472, %473, %474, %475, %476)
}

def @func_5671(%var_5655: Tensor[(1320), float64]) -> (int8, Tensor[(4, 11, 16), float64], Tensor[(660, 2), float64], Tensor[(1320), float64], Tensor[(15, 11, 13), bool], Tensor[(40), float32]) {
  %477 = @func_5282() /* ty=(int8, int8) */;
  %478 = cast(%var_5655, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %479 = reshape(%478, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
  %480 = @func_2116(%479) /* ty=(Tensor[(660, 2), float64],) */;
  %481 = cast(meta[relay.Constant][32] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %482 = %477.0;
  %483 = cast(%482, dtype="int8") /* ty=int8 */;
  %484 = reshape(%481, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float32] */;
  %485 = reshape(%483, newshape=[]) /* ty=int8 */;
  %486 = @func_983(%484, %485) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(1320), float64], Tensor[(8, 5, 1), int8], Tensor[(8, 5, ?), bool], Tensor[(704), float32]) */;
  %487 = @func_2272() /* ty=Tensor[(4, 11, 16), float64] */;
  %488 = %480.0;
  %489 = %486.0;
  (%482, %487, %488, %var_5655, %489, meta[relay.Constant][32] /* ty=Tensor[(40), float32] */)
}

def @func_3007(%var_2943: Tensor[(2145), int8]) -> (Tensor[(2145), uint64], Tensor[(8, 7, 13), float32], Tensor[(728), float32], int8, Tensor[(2145), float64], Tensor[(1320), float64], Tensor[(2145), float64], Tensor[(15, 11, 13), int8], Tensor[(1430, 1), bool]) {
  %490 = @func_1703() /* ty=(int8, Tensor[(15, 11, 13), int8], Tensor[(2145), int8], Tensor[(3, 10, 13), float32], Tensor[(390), int16]) */;
  %491 = %490.2;
  %492 = cast(%var_2943, dtype="uint64") /* ty=Tensor[(2145), uint64] */;
  %493 = shape_of(%491, dtype="int32") /* ty=Tensor[(1), int32] */;
  %494 = cast(%491, dtype="uint64") /* ty=Tensor[(2145), uint64] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %496 = cast(meta[relay.Constant][33] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %497 = reshape(%496, newshape=[8, 7, 13]) /* ty=Tensor[(8, 7, 13), float32] */;
  %498 = @func_2894(%497) /* ty=(Tensor[(8, 7, 13), float32],) */;
  %499 = @func_1434() /* ty=(int8,) */;
  %500 = cast(%var_2943, dtype="float32") /* ty=Tensor[(2145), float32] */;
  %501 = sigmoid(%500) /* ty=Tensor[(2145), float32] */;
  %502 = cast(%501, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %503 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %504 = cast(%491, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %505 = rsqrt(%504) /* ty=Tensor[(2145), float64] */;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %507 = cast(meta[relay.Constant][34] /* ty=Tensor[(1430, 1), bool] */, dtype="bool") /* ty=Tensor[(1430, 1), bool] */;
  %508 = reshape(%507, newshape=[10, 13, 11]) /* ty=Tensor[(10, 13, 11), bool] */;
  %509 = @func_2331(%508) /* ty=(Tensor[(10, 13, 11), int64], Tensor[(15, 11, 13), int8], Tensor[(715, 3), int8]) */;
  %510 = bitwise_xor(%494, %495) /* ty=Tensor[(2145), uint64] */;
  %511 = %498.0;
  %512 = %499.0;
  %513 = sin(%502) /* ty=Tensor[(2145), float64] */;
  %514 = %503.2;
  %515 = asinh(%506) /* ty=Tensor[(2145), float64] */;
  %516 = %509.1;
  (%510, %511, meta[relay.Constant][33] /* ty=Tensor[(728), float32] */, %512, %513, %514, %515, %516, meta[relay.Constant][34] /* ty=Tensor[(1430, 1), bool] */)
}

def @func_1170() -> (Tensor[(10, 13, 11), float64],) {
  %518 = fn () -> (Tensor[(10, 13, 11), float64],) {
    %517 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
    (%517,)
  };
  %518() /* ty=(Tensor[(10, 13, 11), float64],) */
}

def @func_4115() -> (Tensor[(660, 2), bool],) {
  %521 = fn () -> (Tensor[(660, 2), bool],) {
    %519 = @func_3677() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */;
    %520 = %519.0;
    (%520,)
  };
  %521() /* ty=(Tensor[(660, 2), bool],) */
}

def @func_5815(%var_5813: Tensor[(2145), int8], %var_5814: Tensor[(135, 10), float64]) -> (Tensor[(135, 10), float32], Tensor[(1, 2145), int8], Tensor[(2145), int8], Tensor[(135, 10), uint8]) {
  %535 = fn (%var_5803: Tensor[(2145), int8], %var_5807: Tensor[(135, 10), float64]) -> (Tensor[(135, 10), float32], Tensor[(1, 2145), int8], Tensor[(2145), int8], Tensor[(135, 10), uint8]) {
    %522 = @func_4622() /* ty=(int8, Tensor[(5, 78), int16], Tensor[(11, 195), float32], Tensor[(15, 15, 6), float64], Tensor[(135, 10), float64], Tensor[(11, 195), bool], Tensor[(660, 2), float64]) */;
    %523 = %522.4;
    %524 = cast(%523, dtype="float32") /* ty=Tensor[(135, 10), float32] */;
    %525 = cast(%var_5803, dtype="int8") /* ty=Tensor[(2145), int8] */;
    %526 = reshape(%525, newshape=[1, 2145]) /* ty=Tensor[(1, 2145), int8] */;
    %527 = @func_4169(%526) /* ty=(int8, Tensor[(4, 11, 16), float32], Tensor[(704), float32], Tensor[(1, 2145), int8]) */;
    %528 = cast(%var_5807, dtype="uint8") /* ty=Tensor[(135, 10), uint8] */;
    %529 = shape_of(%523, dtype="int32") /* ty=Tensor[(2), int32] */;
    %530 = cast(%523, dtype="uint8") /* ty=Tensor[(135, 10), uint8] */;
    %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %532 = asin(%524) /* ty=Tensor[(135, 10), float32] */;
    %533 = %527.3;
    %534 = bitwise_or(%530, %531) /* ty=Tensor[(135, 10), uint8] */;
    (%532, %533, %var_5803, %534)
  };
  %535(%var_5813, %var_5814) /* ty=(Tensor[(135, 10), float32], Tensor[(1, 2145), int8], Tensor[(2145), int8], Tensor[(135, 10), uint8]) */
}

def @func_5412() -> Tensor[(1280), float64] {
  %537 = fn () -> Tensor[(1280), float64] {
    %536 = @func_2039() /* ty=(Tensor[(10, 13, 11), bool], Tensor[(15, 11, 13), int8], Tensor[(1280), float64], int8, Tensor[(1320), float64]) */;
    %536.2
  };
  %537() /* ty=Tensor[(1280), float64] */
}

def @func_1092(%var_1090: Tensor[(40), float32], %var_1091: Tensor[(15, 11, 13), bool]) -> (Tensor[(10, 13, 11), float64], Tensor[(40), float32], int8, Tensor[(15, 11, 13), bool]) {
  @func_1088(%var_1090, %var_1091) /* ty=(Tensor[(10, 13, 11), float64], Tensor[(40), float32], int8, Tensor[(15, 11, 13), bool]) */
}

def @func_4245() -> (Tensor[(10, 13, 11), float64], Tensor[(4, 11, 16), float32]) {
  %543 = fn () -> (Tensor[(10, 13, 11), float64], Tensor[(4, 11, 16), float32]) {
    %538 = @func_3121() /* ty=Tensor[(10, 13, 11), float64] */;
    %539 = cast(%538, dtype="float64") /* ty=Tensor[(10, 13, 11), float64] */;
    %540 = @func_1201() /* ty=(Tensor[(4, 11, 16), float32],) */;
    %541 = sigmoid(%539) /* ty=Tensor[(10, 13, 11), float64] */;
    %542 = %540.0;
    (%541, %542)
  };
  %543() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(4, 11, 16), float32]) */
}

def @func_1329() -> (int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) {
  %544 = @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */;
  %545 = cast(meta[relay.Constant][35] /* ty=Tensor[(660, 2), float64] */, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %546 = cast(meta[relay.Constant][35] /* ty=Tensor[(660, 2), float64] */, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
  %547 = %544.3;
  %548 = cast(%547, dtype="int8") /* ty=int8 */;
  %549 = reshape(%545, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %550 = reshape(%546, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %551 = reshape(%548, newshape=[]) /* ty=int8 */;
  %552 = @func_600(%549, %550, %551) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) */;
  %553 = %552.0;
  %554 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
  (%547, %553, meta[relay.Constant][35] /* ty=Tensor[(660, 2), float64] */, %554)
}

def @func_6251() -> (int8,) {
  %555 = @func_6228() /* ty=int8 */;
  (%555,)
}

def @func_3512() -> (Tensor[(4, 11, 16), float32], int8) {
  %560 = fn () -> (Tensor[(4, 11, 16), float32], int8) {
    %556 = @func_1201() /* ty=(Tensor[(4, 11, 16), float32],) */;
    %557 = @func_2740() /* ty=(int8,) */;
    %558 = %556.0;
    %559 = %557.0;
    (%558, %559)
  };
  %560() /* ty=(Tensor[(4, 11, 16), float32], int8) */
}

def @func_4822(%var_4821: uint8) -> (Tensor[(2, 15, 14), uint8], Tensor[(2145), int8], Tensor[(1320), uint64], Tensor[(660, 2), float64], Tensor[(15, 11, 13), bool], Tensor[(1320), float64]) {
  %587 = fn (%var_4781: uint8) -> (Tensor[(2, 15, 14), uint8], Tensor[(2145), int8], Tensor[(1320), uint64], Tensor[(660, 2), float64], Tensor[(15, 11, 13), bool], Tensor[(1320), float64]) {
    %561 = cast(%var_4781, dtype="uint8") /* ty=uint8 */;
    %562 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 15, 14), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 14), uint8] */;
    %563 = @func_1703() /* ty=(int8, Tensor[(15, 11, 13), int8], Tensor[(2145), int8], Tensor[(3, 10, 13), float32], Tensor[(390), int16]) */;
    %564 = @func_3057() /* ty=(int8, Tensor[(1320), float64]) */;
    %565 = %564.0;
    %566 = @func_3902() /* ty=(Tensor[(1320), float64], Tensor[(1320), float64]) */;
    %567 = %566.1;
    %568 = cast(%565, dtype="uint64") /* ty=uint64 */;
    %569 = cast(%567, dtype="uint64") /* ty=Tensor[(1320), uint64] */;
    %570 = cast(%567, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %571 = reshape(%570, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
    %572 = @func_2116(%571) /* ty=(Tensor[(660, 2), float64],) */;
    %573 = add(%568, %569) /* ty=Tensor[(1320), uint64] */;
    %574 = cast(%573, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %575 = cast(%573, dtype="float64") /* ty=Tensor[(1320), float64] */;
    %576 = cast(%var_4781, dtype="int8") /* ty=int8 */;
    %577 = reshape(%574, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
    %578 = reshape(%575, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
    %579 = reshape(%576, newshape=[]) /* ty=int8 */;
    %580 = @func_600(%577, %578, %579) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) */;
    %581 = @func_2039() /* ty=(Tensor[(10, 13, 11), bool], Tensor[(15, 11, 13), int8], Tensor[(1280), float64], int8, Tensor[(1320), float64]) */;
    %582 = subtract(%561, %562) /* ty=Tensor[(2, 15, 14), uint8] */;
    %583 = %563.2;
    %584 = %572.0;
    %585 = %580.1;
    %586 = %581.4;
    (%582, %583, %573, %584, %585, %586)
  };
  %587(%var_4821) /* ty=(Tensor[(2, 15, 14), uint8], Tensor[(2145), int8], Tensor[(1320), uint64], Tensor[(660, 2), float64], Tensor[(15, 11, 13), bool], Tensor[(1320), float64]) */
}

def @func_5283() -> (int8, int8) {
  %592 = fn () -> (int8, int8) {
    %588 = @func_3057() /* ty=(int8, Tensor[(1320), float64]) */;
    %589 = @func_2740() /* ty=(int8,) */;
    %590 = %588.0;
    %591 = %589.0;
    (%590, %591)
  };
  %592() /* ty=(int8, int8) */
}

def @func_3160() -> (int8,) {
  %595 = fn () -> (int8,) {
    %593 = @func_2740() /* ty=(int8,) */;
    %594 = %593.0;
    (%594,)
  };
  %595() /* ty=(int8,) */
}

def @func_6229() -> int8 {
  %597 = fn () -> int8 {
    %596 = @func_1434() /* ty=(int8,) */;
    %596.0
  };
  %597() /* ty=int8 */
}

def @func_1425(%var_1423: Tensor[(715, 3), int8]) -> (Tensor[(10, 13, 11), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(715, 3), int8], Tensor[(15, 11, 13), int8]) {
  @func_1422(%var_1423) /* ty=(Tensor[(10, 13, 11), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(715, 3), int8], Tensor[(15, 11, 13), int8]) */
}

def @func_3625() -> (Tensor[(10, 13, 11), float64],) {
  @func_3623() /* ty=(Tensor[(10, 13, 11), float64],) */
}

def @func_3817(%var_3761: Tensor[(6, 8, 14), uint64], %var_3762: Tensor[(6, 8, 14), uint64]) -> (Tensor[(6, 8, 14), bool], Tensor[(7, 14, 15), float32], Tensor[(1470), float32], Tensor[(660, 2), float64], Tensor[(390), int16]) {
  %598 = cast(%var_3761, dtype="float64") /* ty=Tensor[(6, 8, 14), float64] */;
  %599 = asinh(%598) /* ty=Tensor[(6, 8, 14), float64] */;
  %600 = cast(%var_3762, dtype="bool") /* ty=Tensor[(6, 8, 14), bool] */;
  %601 = shape_of(%var_3761, dtype="int32") /* ty=Tensor[(3), int32] */;
  %602 = cast(%var_3761, dtype="bool") /* ty=Tensor[(6, 8, 14), bool] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %604 = greater_equal(%602, %603) /* ty=Tensor[(6, 8, 14), bool] */;
  %605 = cast(%604, dtype="bool") /* ty=Tensor[(6, 8, 14), bool] */;
  %606 = shape_of(%599, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%599, dtype="bool") /* ty=Tensor[(6, 8, 14), bool] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %609 = cast(meta[relay.Constant][37] /* ty=Tensor[(1470), float32] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %610 = reshape(%609, newshape=[7, 14, 15]) /* ty=Tensor[(7, 14, 15), float32] */;
  %611 = @func_2153(%610) /* ty=(Tensor[(7, 14, 15), float32], int8, Tensor[(2145), int8]) */;
  %612 = @func_3677() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */;
  %613 = @func_3551() /* ty=(Tensor[(390), int16],) */;
  %614 = greater(%607, %608) /* ty=Tensor[(6, 8, 14), bool] */;
  %615 = %611.0;
  %616 = %612.2;
  %617 = %613.0;
  (%614, %615, meta[relay.Constant][37] /* ty=Tensor[(1470), float32] */, %616, %617)
}

def @func_1653(%var_1650: int16, %var_1651: Tensor[(4, 3, 1), int16], %var_1652: Tensor[(4, 3, 13), bool]) -> (Tensor[(4, 3, 1), int16], Tensor[(40), float32], Tensor[(11, 195), bool], Tensor[(4, 3, ?), float32], Tensor[(4, 3, 13), bool], Tensor[(4, 3, ?), uint16], Tensor[(1320), float64], Tensor[(11, 8, 15), float64], Tensor[(4, 3, 40), int32]) {
  @func_1648(%var_1650, %var_1651, %var_1652) /* ty=(Tensor[(4, 3, 1), int16], Tensor[(40), float32], Tensor[(11, 195), bool], Tensor[(4, 3, ?), float32], Tensor[(4, 3, 13), bool], Tensor[(4, 3, ?), uint16], Tensor[(1320), float64], Tensor[(11, 8, 15), float64], Tensor[(4, 3, 40), int32]) */
}

def @func_5022() -> Tensor[(4, 11, 16), float32] {
  %618 = @func_1201() /* ty=(Tensor[(4, 11, 16), float32],) */;
  %618.0
}

def @func_1300(%var_1298: Tensor[(10, 16, 8), float64], %var_1299: int8) -> (Tensor[(10, 16, 8), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(2145), int8], int8) {
  @func_1296(%var_1298, %var_1299) /* ty=(Tensor[(10, 16, 8), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(2145), int8], int8) */
}

def @func_2742() -> (int8,) {
  @func_2740() /* ty=(int8,) */
}

def @func_6222(%var_6221: Tensor[(15, 12, 2), int8]) -> (Tensor[(15, 11, 13), int8], Tensor[(15, 12, 2), int8]) {
  %626 = fn (%var_6215: Tensor[(15, 12, 2), int8]) -> (Tensor[(15, 11, 13), int8], Tensor[(15, 12, 2), int8]) {
    %619 = @func_1703() /* ty=(int8, Tensor[(15, 11, 13), int8], Tensor[(2145), int8], Tensor[(3, 10, 13), float32], Tensor[(390), int16]) */;
    %620 = @func_2851() /* ty=(int8,) */;
    %621 = %620.0;
    %622 = cast(%621, dtype="int8") /* ty=int8 */;
    %623 = cast(%var_6215, dtype="int8") /* ty=Tensor[(15, 12, 2), int8] */;
    %624 = %619.1;
    %625 = bitwise_xor(%622, %623) /* ty=Tensor[(15, 12, 2), int8] */;
    (%624, %625)
  };
  %626(%var_6221) /* ty=(Tensor[(15, 11, 13), int8], Tensor[(15, 12, 2), int8]) */
}

def @func_600(%var_584: Tensor[(11, 8, 15), float64], %var_585: Tensor[(11, 8, 15), float64], %var_592: int8) -> (Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) {
  %627 = cast(%var_585, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
  %628 = shape_of(%var_584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%var_584, dtype="float64") /* ty=Tensor[(11, 8, 15), float64] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %631 = cast(meta[relay.Constant][38] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %632 = cast(meta[relay.Constant][38] /* ty=Tensor[(704), float32] */, dtype="float32") /* ty=Tensor[(704), float32] */;
  %633 = cast(%var_592, dtype="int8") /* ty=int8 */;
  %634 = cast(meta[relay.Constant][39] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %635 = reshape(%631, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), float32] */;
  %636 = reshape(%632, newshape=[4, 11, 16]) /* ty=Tensor[(4, 11, 16), float32] */;
  %637 = reshape(%633, newshape=[]) /* ty=int8 */;
  %638 = reshape(%634, newshape=[2145, 1]) /* ty=Tensor[(2145, 1), int8] */;
  %639 = @func_536(%635, %636, %637, %638) /* ty=(Tensor[(4, 11, 16), float32], Tensor[(2145, 1), int8], Tensor[(15, 11, 13), bool]) */;
  %640 = mod(%629, %630) /* ty=Tensor[(11, 8, 15), float64] */;
  %641 = %639.2;
  (%640, %641, meta[relay.Constant][38] /* ty=Tensor[(704), float32] */, %var_592, meta[relay.Constant][39] /* ty=Tensor[(2145), int8] */)
}

def @func_4544(%var_4542: int8, %var_4543: Tensor[(2145), int8]) -> (Tensor[(11, 8, 15), float64], Tensor[(6, 7, 3), float64], Tensor[(108), int32], Tensor[(126), float64], int8, Tensor[(2145), float32], Tensor[(390), int16], Tensor[(10, 13, 11), bool]) {
  %663 = fn (%var_4475: int8, %var_4476: Tensor[(2145), int8]) -> (Tensor[(11, 8, 15), float64], Tensor[(6, 7, 3), float64], Tensor[(108), int32], Tensor[(126), float64], int8, Tensor[(2145), float32], Tensor[(390), int16], Tensor[(10, 13, 11), bool]) {
    %642 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
    %643 = cast(meta[relay.Constant][40] /* ty=Tensor[(108), int32] */, dtype="int32") /* ty=Tensor[(108), int32] */;
    %644 = cast(meta[relay.Constant][41] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %645 = reshape(%643, newshape=[3, 6, 6]) /* ty=Tensor[(3, 6, 6), int32] */;
    %646 = reshape(%644, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %647 = @func_3850(%645, %646) /* ty=(Tensor[(3, 6, 6), int32], Tensor[(6, 7, 3), float64], Tensor[(126), float64], Tensor[(3, 6, 6), float32], Tensor[(4, 11, 16), float32]) */;
    %648 = cast(%var_4475, dtype="int8") /* ty=int8 */;
    %649 = cast(%var_4476, dtype="int8") /* ty=Tensor[(2145), int8] */;
    %650 = reshape(%648, newshape=[]) /* ty=int8 */;
    %651 = reshape(%649, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
    %652 = @func_148(%650, %651) /* ty=Tensor[(15, 11, 13), int8] */;
    %653 = cast(%652, dtype="float32") /* ty=Tensor[(15, 11, 13), float32] */;
    %654 = shape_of(%var_4476, dtype="int32") /* ty=Tensor[(1), int32] */;
    %655 = cast(%var_4476, dtype="float32") /* ty=Tensor[(2145), float32] */;
    %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?), float32] */;
    %657 = @func_3551() /* ty=(Tensor[(390), int16],) */;
    %658 = %642.1;
    %659 = %647.1;
    %660 = divide(%655, %656) /* ty=Tensor[(2145), float32] */;
    %661 = %657.0;
    %662 = @func_1973() /* ty=Tensor[(10, 13, 11), bool] */;
    (%658, %659, meta[relay.Constant][40] /* ty=Tensor[(108), int32] */, meta[relay.Constant][41] /* ty=Tensor[(126), float64] */, %var_4475, %660, %661, %662)
  };
  %663(%var_4542, %var_4543) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(6, 7, 3), float64], Tensor[(108), int32], Tensor[(126), float64], int8, Tensor[(2145), float32], Tensor[(390), int16], Tensor[(10, 13, 11), bool]) */
}

def @func_3464(%var_3462: Tensor[(660, 2), float64], %var_3463: Tensor[(9, 11, 15), float64]) -> (Tensor[(660, 2), float64], Tensor[(660, 2), float64], int8, Tensor[(1280), float64], int8, Tensor[(10, 13, 11), float64], Tensor[(9, 11, 15), bool], Tensor[(9, 11, 15), float64]) {
  @func_3460(%var_3462, %var_3463) /* ty=(Tensor[(660, 2), float64], Tensor[(660, 2), float64], int8, Tensor[(1280), float64], int8, Tensor[(10, 13, 11), float64], Tensor[(9, 11, 15), bool], Tensor[(9, 11, 15), float64]) */
}

def @func_983(%var_952: Tensor[(8, 5, 1), float32], %var_961: int8) -> (Tensor[(15, 11, 13), bool], Tensor[(1320), float64], Tensor[(8, 5, 1), int8], Tensor[(8, 5, ?), bool], Tensor[(704), float32]) {
  %664 = cast(meta[relay.Constant][42] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %665 = cast(meta[relay.Constant][42] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %666 = cast(%var_961, dtype="int8") /* ty=int8 */;
  %667 = reshape(%664, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %668 = reshape(%665, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %669 = reshape(%666, newshape=[]) /* ty=int8 */;
  %670 = @func_600(%667, %668, %669) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) */;
  %671 = cast(%var_952, dtype="float32") /* ty=Tensor[(8, 5, 1), float32] */;
  %672 = atan(%671) /* ty=Tensor[(8, 5, 1), float32] */;
  %673 = cast(%672, dtype="float64") /* ty=Tensor[(8, 5, 1), float64] */;
  %674 = asinh(%673) /* ty=Tensor[(8, 5, 1), float64] */;
  %675 = cast(%674, dtype="int8") /* ty=Tensor[(8, 5, 1), int8] */;
  %676 = cast(%var_961, dtype="int8") /* ty=int8 */;
  %677 = cast(%var_952, dtype="bool") /* ty=Tensor[(8, 5, 1), bool] */;
  %678 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %679 = cast(%674, dtype="bool") /* ty=Tensor[(8, 5, 1), bool] */;
  %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %681 = cast(meta[relay.Constant][42] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %682 = cast(meta[relay.Constant][42] /* ty=Tensor[(1320), float64] */, dtype="float64") /* ty=Tensor[(1320), float64] */;
  %683 = cast(%var_961, dtype="int8") /* ty=int8 */;
  %684 = reshape(%681, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %685 = reshape(%682, newshape=[11, 8, 15]) /* ty=Tensor[(11, 8, 15), float64] */;
  %686 = reshape(%683, newshape=[]) /* ty=int8 */;
  %687 = @func_600(%684, %685, %686) /* ty=(Tensor[(11, 8, 15), float64], Tensor[(15, 11, 13), bool], Tensor[(704), float32], int8, Tensor[(2145), int8]) */;
  %688 = %670.1;
  %689 = add(%675, %676) /* ty=Tensor[(8, 5, 1), int8] */;
  %690 = equal(%679, %680) /* ty=Tensor[(8, 5, ?), bool] */;
  %691 = %687.2;
  (%688, meta[relay.Constant][42] /* ty=Tensor[(1320), float64] */, %689, %690, %691)
}

def @func_1503(%var_1500: Tensor[(3, 10, 13), int16], %var_1501: Tensor[(3, 10, 13), int16], %var_1502: Tensor[(2145), int8]) -> (Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) {
  %707 = fn (%var_1452: Tensor[(3, 10, 13), int16], %var_1453: Tensor[(3, 10, 13), int16], %var_1493: Tensor[(2145), int8]) -> (Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) {
    %692 = cast(%var_1453, dtype="int16") /* ty=Tensor[(3, 10, 13), int16] */;
    %693 = shape_of(%var_1452, dtype="int32") /* ty=Tensor[(3), int32] */;
    %694 = cast(%var_1452, dtype="int16") /* ty=Tensor[(3, 10, 13), int16] */;
    %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %696 = cast(%var_1453, dtype="float32") /* ty=Tensor[(3, 10, 13), float32] */;
    %697 = asin(%696) /* ty=Tensor[(3, 10, 13), float32] */;
    %698 = cast(%697, dtype="float32") /* ty=Tensor[(3, 10, 13), float32] */;
    %699 = cast(%697, dtype="float32") /* ty=Tensor[(3, 10, 13), float32] */;
    %700 = cast(%var_1493, dtype="int8") /* ty=Tensor[(2145), int8] */;
    %701 = reshape(%700, newshape=[715, 3]) /* ty=Tensor[(715, 3), int8] */;
    %702 = @func_1422(%701) /* ty=(Tensor[(10, 13, 11), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(715, 3), int8], Tensor[(15, 11, 13), int8]) */;
    %703 = multiply(%694, %695) /* ty=Tensor[(3, 10, 13), int16] */;
    %704 = exp(%698) /* ty=Tensor[(3, 10, 13), float32] */;
    %705 = erf(%699) /* ty=Tensor[(3, 10, 13), float32] */;
    %706 = %702.3;
    (%703, %704, %705, %706, %var_1493)
  };
  %707(%var_1500, %var_1501, %var_1502) /* ty=(Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) */
}

def @func_1088(%var_1069: Tensor[(40), float32], %var_1072: Tensor[(15, 11, 13), bool]) -> (Tensor[(10, 13, 11), float64], Tensor[(40), float32], int8, Tensor[(15, 11, 13), bool]) {
  %708 = cast(%var_1069, dtype="float32") /* ty=Tensor[(40), float32] */;
  %709 = cast(meta[relay.Constant][43] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %710 = reshape(%708, newshape=[8, 5, 1]) /* ty=Tensor[(8, 5, 1), float32] */;
  %711 = reshape(%709, newshape=[]) /* ty=int8 */;
  %712 = @func_983(%710, %711) /* ty=(Tensor[(15, 11, 13), bool], Tensor[(1320), float64], Tensor[(8, 5, 1), int8], Tensor[(8, 5, ?), bool], Tensor[(704), float32]) */;
  %713 = %712.0;
  %714 = cast(%var_1072, dtype="bool") /* ty=Tensor[(15, 11, 13), bool] */;
  %715 = shape_of(%713, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(%713, dtype="bool") /* ty=Tensor[(15, 11, 13), bool] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %718 = @func_759() /* ty=Tensor[(10, 13, 11), float64] */;
  %719 = greater(%716, %717) /* ty=Tensor[(15, 11, 13), bool] */;
  (%718, %var_1069, meta[relay.Constant][43] /* ty=int8 */, %719)
}

def @func_6066() -> (int8,) {
  %722 = fn () -> (int8,) {
    %720 = @func_3195() /* ty=(int8, int8) */;
    %721 = %720.0;
    (%721,)
  };
  %722() /* ty=(int8,) */
}

def @func_5602(%var_5601: Tensor[(15, 8, 11), float32]) -> (Tensor[(15, 8, 11), float32],) {
  %725 = fn (%var_5596: Tensor[(15, 8, 11), float32]) -> (Tensor[(15, 8, 11), float32],) {
    %723 = cast(%var_5596, dtype="float32") /* ty=Tensor[(15, 8, 11), float32] */;
    %724 = cos(%723) /* ty=Tensor[(15, 8, 11), float32] */;
    (%724,)
  };
  %725(%var_5601) /* ty=(Tensor[(15, 8, 11), float32],) */
}

def @func_4681(%var_4679: Tensor[(15, 15, 6), float64], %var_4680: Tensor[(1470), float32]) -> (Tensor[(15, 15, 6), float64], Tensor[(40, 2), bool], Tensor[(2145), int8], Tensor[(1470), float32]) {
  @func_4677(%var_4679, %var_4680) /* ty=(Tensor[(15, 15, 6), float64], Tensor[(40, 2), bool], Tensor[(2145), int8], Tensor[(1470), float32]) */
}

def @func_2732(%var_2730: Tensor[(7, 14), float32]) -> (Tensor[(7, 14), float32], Tensor[(15, 11, 13), int8], int8, Tensor[(1, 2145), int8]) {
  @func_2729(%var_2730) /* ty=(Tensor[(7, 14), float32], Tensor[(15, 11, 13), int8], int8, Tensor[(1, 2145), int8]) */
}

def @func_3123() -> Tensor[(10, 13, 11), float64] {
  @func_3121() /* ty=Tensor[(10, 13, 11), float64] */
}

def @func_5977(%var_5975: Tensor[(8, 10, 16), int32], %var_5976: Tensor[(8, 10, 16), int8]) -> (Tensor[(8, 10, 16), bool], Tensor[(8, 10, 16), uint64]) {
  @func_5973(%var_5975, %var_5976) /* ty=(Tensor[(8, 10, 16), bool], Tensor[(8, 10, 16), uint64]) */
}

def @func_6408(%var_6407: Tensor[(10, 14, 14), float32]) -> (Tensor[(10, 14, 14), float32],) {
  %728 = fn (%var_6386: Tensor[(10, 14, 14), float32]) -> (Tensor[(10, 14, 14), float32],) {
    %726 = cast(%var_6386, dtype="float32") /* ty=Tensor[(10, 14, 14), float32] */;
    %727 = atan(%726) /* ty=Tensor[(10, 14, 14), float32] */;
    (%727,)
  };
  %728(%var_6407) /* ty=(Tensor[(10, 14, 14), float32],) */
}

def @func_2433(%var_2432: Tensor[(15, 15, 6), float64]) -> (Tensor[(15, 15, 6), float64],) {
  %736 = fn (%var_2400: Tensor[(15, 15, 6), float64]) -> (Tensor[(15, 15, 6), float64],) {
    %729 = cast(meta[relay.Constant][44] /* ty=Tensor[(15, 15, 6), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 6), float64] */;
    %730 = shape_of(%var_2400, dtype="int32") /* ty=Tensor[(3), int32] */;
    %731 = cast(%var_2400, dtype="float64") /* ty=Tensor[(15, 15, 6), float64] */;
    %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %733 = divide(%731, %732) /* ty=Tensor[(15, 15, 6), float64] */;
    %734 = cast(%733, dtype="float64") /* ty=Tensor[(15, 15, 6), float64] */;
    %735 = log10(%734) /* ty=Tensor[(15, 15, 6), float64] */;
    (%735,)
  };
  %736(%var_2432) /* ty=(Tensor[(15, 15, 6), float64],) */
}

def @func_3196() -> (int8, int8) {
  %741 = fn () -> (int8, int8) {
    %737 = @func_3159() /* ty=(int8,) */;
    %738 = @func_3159() /* ty=(int8,) */;
    %739 = %737.0;
    %740 = %738.0;
    (%739, %740)
  };
  %741() /* ty=(int8, int8) */
}

def @func_5738() -> (Tensor[(1280), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(2145), float64]) {
  %742 = @func_2039() /* ty=(Tensor[(10, 13, 11), bool], Tensor[(15, 11, 13), int8], Tensor[(1280), float64], int8, Tensor[(1320), float64]) */;
  %743 = cast(meta[relay.Constant][45] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %744 = cast(meta[relay.Constant][46] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %745 = reshape(%743, newshape=[]) /* ty=int8 */;
  %746 = reshape(%744, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %747 = cast(meta[relay.Constant][46] /* ty=Tensor[(2145), int8] */, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %748 = %742.2;
  %749 = @func_148(%745, %746) /* ty=Tensor[(15, 11, 13), int8] */;
  %750 = log10(%747) /* ty=Tensor[(2145), float64] */;
  (%748, %749, meta[relay.Constant][45] /* ty=int8 */, %750)
}

def @func_1237() -> Tensor[(1320), float64] {
  @func_1235() /* ty=Tensor[(1320), float64] */
}

def @func_3578() -> Tensor[(10, 13, 11), int32] {
  %756 = fn () -> Tensor[(10, 13, 11), int32] {
    %751 = @func_1973() /* ty=Tensor[(10, 13, 11), bool] */;
    %752 = @func_3511() /* ty=(Tensor[(4, 11, 16), float32], int8) */;
    %753 = %752.1;
    %754 = cast(%751, dtype="int32") /* ty=Tensor[(10, 13, 11), int32] */;
    %755 = cast(%753, dtype="int32") /* ty=int32 */;
    bitwise_and(%754, %755) /* ty=Tensor[(10, 13, 11), int32] */
  };
  %756() /* ty=Tensor[(10, 13, 11), int32] */
}

def @func_5463() -> int8 {
  %757 = @func_2740() /* ty=(int8,) */;
  %757.0
}

def @func_4751(%var_4749: Tensor[(10, 13, 11), int8]) -> Tensor[(10, 13, 11), float32] {
  @func_4748(%var_4749) /* ty=Tensor[(10, 13, 11), float32] */
}

def @func_4954() -> (Tensor[(10, 13, 11), float64], Tensor[(660, 2), bool]) {
  %758 = @func_3695() /* ty=(Tensor[(10, 13, 11), float64],) */;
  %759 = @func_3677() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */;
  %760 = %758.0;
  %761 = %759.0;
  (%760, %761)
}

def @func_1703() -> (int8, Tensor[(15, 11, 13), int8], Tensor[(2145), int8], Tensor[(3, 10, 13), float32], Tensor[(390), int16]) {
  %762 = @func_1434() /* ty=(int8,) */;
  %763 = %762.0;
  %764 = cast(%763, dtype="int8") /* ty=int8 */;
  %765 = cast(meta[relay.Constant][47] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %766 = reshape(%764, newshape=[]) /* ty=int8 */;
  %767 = reshape(%765, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %768 = cast(meta[relay.Constant][48] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
  %769 = cast(meta[relay.Constant][48] /* ty=Tensor[(390), int16] */, dtype="int16") /* ty=Tensor[(390), int16] */;
  %770 = @func_148(%766, %767) /* ty=Tensor[(15, 11, 13), int8] */;
  %771 = cast(%770, dtype="int8") /* ty=Tensor[(15, 11, 13), int8] */;
  %772 = reshape(%768, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %773 = reshape(%769, newshape=[3, 10, 13]) /* ty=Tensor[(3, 10, 13), int16] */;
  %774 = reshape(%771, newshape=[2145]) /* ty=Tensor[(2145), int8] */;
  %775 = @func_1499(%772, %773, %774) /* ty=(Tensor[(3, 10, 13), int16], Tensor[(3, 10, 13), float32], Tensor[(3, 10, 13), float32], Tensor[(715, 3), int8], Tensor[(2145), int8]) */;
  %776 = %775.2;
  (%763, %770, meta[relay.Constant][47] /* ty=Tensor[(2145), int8] */, %776, meta[relay.Constant][48] /* ty=Tensor[(390), int16] */)
}

def @func_3678() -> (Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) {
  %790 = fn () -> (Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) {
    %777 = @func_1329() /* ty=(int8, Tensor[(11, 8, 15), float64], Tensor[(660, 2), float64], Tensor[(10, 13, 11), float64]) */;
    %778 = %777.2;
    %779 = cast(meta[relay.Constant][49] /* ty=Tensor[(660, 2), float64] */, dtype="bool") /* ty=Tensor[(660, 2), bool] */;
    %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(2), int32] */;
    %781 = cast(%778, dtype="bool") /* ty=Tensor[(660, 2), bool] */;
    %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %783 = @func_2740() /* ty=(int8,) */;
    %784 = cast(meta[relay.Constant][49] /* ty=Tensor[(660, 2), float64] */, dtype="float64") /* ty=Tensor[(660, 2), float64] */;
    %785 = reshape(%784, newshape=[660, 2]) /* ty=Tensor[(660, 2), float64] */;
    %786 = @func_2116(%785) /* ty=(Tensor[(660, 2), float64],) */;
    %787 = logical_or(%781, %782) /* ty=Tensor[(660, 2), bool] */;
    %788 = %783.0;
    %789 = %786.0;
    (%787, %788, %789)
  };
  %790() /* ty=(Tensor[(660, 2), bool], int8, Tensor[(660, 2), float64]) */
}

def @func_5465() -> int8 {
  @func_5463() /* ty=int8 */
}

def @func_5973(%var_5957: Tensor[(8, 10, 16), int32], %var_5968: Tensor[(8, 10, 16), int8]) -> (Tensor[(8, 10, 16), bool], Tensor[(8, 10, 16), uint64]) {
  %791 = cast(meta[relay.Constant][50] /* ty=Tensor[(8, 10, 16), int32] */, dtype="bool") /* ty=Tensor[(8, 10, 16), bool] */;
  %792 = shape_of(%var_5957, dtype="int32") /* ty=Tensor[(3), int32] */;
  %793 = cast(%var_5957, dtype="bool") /* ty=Tensor[(8, 10, 16), bool] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %795 = cast(%var_5957, dtype="int8") /* ty=Tensor[(8, 10, 16), int8] */;
  %796 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(8, 10, 16), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(meta[relay.Constant][50] /* ty=Tensor[(8, 10, 16), int32] */, dtype="int8") /* ty=Tensor[(8, 10, 16), int8] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %799 = multiply(%797, %798) /* ty=Tensor[(8, 10, 16), int8] */;
  %800 = cast(%var_5968, dtype="uint64") /* ty=Tensor[(8, 10, 16), uint64] */;
  %801 = shape_of(%799, dtype="int32") /* ty=Tensor[(3), int32] */;
  %802 = cast(%799, dtype="uint64") /* ty=Tensor[(8, 10, 16), uint64] */;
  %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %804 = greater(%793, %794) /* ty=Tensor[(8, 10, 16), bool] */;
  %805 = logical_xor(%802, %803) /* ty=Tensor[(8, 10, 16), uint64] */;
  (%804, %805)
}

def @func_3853(%var_3851: Tensor[(3, 6, 6), int32], %var_3852: Tensor[(126), float64]) -> (Tensor[(3, 6, 6), int32], Tensor[(6, 7, 3), float64], Tensor[(126), float64], Tensor[(3, 6, 6), float32], Tensor[(4, 11, 16), float32]) {
  %818 = fn (%var_3828: Tensor[(3, 6, 6), int32], %var_3838: Tensor[(126), float64]) -> (Tensor[(3, 6, 6), int32], Tensor[(6, 7, 3), float64], Tensor[(126), float64], Tensor[(3, 6, 6), float32], Tensor[(4, 11, 16), float32]) {
    %806 = cast(meta[relay.Constant][51] /* ty=Tensor[(3, 6, 6), int32] */, dtype="int32") /* ty=Tensor[(3, 6, 6), int32] */;
    %807 = shape_of(%var_3828, dtype="int32") /* ty=Tensor[(3), int32] */;
    %808 = cast(%var_3828, dtype="int32") /* ty=Tensor[(3, 6, 6), int32] */;
    %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %810 = cast(%var_3838, dtype="float64") /* ty=Tensor[(126), float64] */;
    %811 = reshape(%810, newshape=[6, 7, 3]) /* ty=Tensor[(6, 7, 3), float64] */;
    %812 = cast(%var_3828, dtype="float32") /* ty=Tensor[(3, 6, 6), float32] */;
    %813 = @func_1201() /* ty=(Tensor[(4, 11, 16), float32],) */;
    %814 = bitwise_or(%808, %809) /* ty=Tensor[(3, 6, 6), int32] */;
    %815 = @func_3475(%811) /* ty=Tensor[(6, 7, 3), float64] */;
    %816 = exp(%812) /* ty=Tensor[(3, 6, 6), float32] */;
    %817 = %813.0;
    (%814, %815, %var_3838, %816, %817)
  };
  %818(%var_3851, %var_3852) /* ty=(Tensor[(3, 6, 6), int32], Tensor[(6, 7, 3), float64], Tensor[(126), float64], Tensor[(3, 6, 6), float32], Tensor[(4, 11, 16), float32]) */
}

def @func_2041() -> (Tensor[(10, 13, 11), bool], Tensor[(15, 11, 13), int8], Tensor[(1280), float64], int8, Tensor[(1320), float64]) {
  @func_2039() /* ty=(Tensor[(10, 13, 11), bool], Tensor[(15, 11, 13), int8], Tensor[(1280), float64], int8, Tensor[(1320), float64]) */
}

def @func_6119() -> (Tensor[(10, 13, 11), bool],) {
  %820 = fn () -> (Tensor[(10, 13, 11), bool],) {
    %819 = @func_2685() /* ty=Tensor[(10, 13, 11), bool] */;
    (%819,)
  };
  %820() /* ty=(Tensor[(10, 13, 11), bool],) */
}

def @func_3121() -> Tensor[(10, 13, 11), float64] {
  %821 = @func_1169() /* ty=(Tensor[(10, 13, 11), float64],) */;
  %821.0
}

def @func_803() -> (Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) {
  @func_801() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(704), float32], Tensor[(1320), float64], int8, Tensor[(4, 11, 16), float32], Tensor[(143, 15), int8]) */
}

def @func_5674(%var_5672: Tensor[(1320), float64]) -> (int8, Tensor[(4, 11, 16), float64], Tensor[(660, 2), float64], Tensor[(1320), float64], Tensor[(15, 11, 13), bool], Tensor[(40), float32]) {
  @func_5671(%var_5672) /* ty=(int8, Tensor[(4, 11, 16), float64], Tensor[(660, 2), float64], Tensor[(1320), float64], Tensor[(15, 11, 13), bool], Tensor[(40), float32]) */
}

def @func_5740() -> (Tensor[(1280), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(2145), float64]) {
  @func_5738() /* ty=(Tensor[(1280), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(2145), float64]) */
}

def @func_1296(%var_1262: Tensor[(10, 16, 8), float64], %var_1280: int8) -> (Tensor[(10, 16, 8), float64], Tensor[(15, 11, 13), int8], int8, Tensor[(2145), int8], int8) {
  %822 = cast(%var_1262, dtype="float64") /* ty=Tensor[(10, 16, 8), float64] */;
  %823 = cast(%var_1280, dtype="int8") /* ty=int8 */;
  %824 = cast(meta[relay.Constant][52] /* ty=Tensor[(2145), int8] */, dtype="int8") /* ty=Tensor[(2145), int8] */;
  %825 = reshape(%823, newshape=[]) /* ty=int8 */;
  %826 = reshape(%824, newshape=[15, 11, 13]) /* ty=Tensor[(15, 11, 13), int8] */;
  %827 = @func_1055() /* ty=(Tensor[(10, 13, 11), float64], Tensor[(8, 5, ?), bool], Tensor[(40, 1), float32], int8) */;
  %828 = log2(%822) /* ty=Tensor[(10, 16, 8), float64] */;
  %829 = @func_148(%825, %826) /* ty=Tensor[(15, 11, 13), int8] */;
  %830 = %827.3;
  (%828, %829, %var_1280, meta[relay.Constant][52] /* ty=Tensor[(2145), int8] */, %830)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

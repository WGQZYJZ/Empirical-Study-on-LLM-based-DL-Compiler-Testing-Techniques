import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_141 = relay.var("var_141", dtype = "int8", shape = ())#candidate|141|()|var|int8
var_142 = relay.var("var_142", dtype = "int8", shape = (15, 11, 13))#candidate|142|(15, 11, 13)|var|int8
bop_143 = relay.logical_xor(var_141.astype('int8'), var_142.astype('int8')) # shape=(15, 11, 13)
output = bop_143
output2 = bop_143
func_148 = relay.Function([var_141,var_142,], output)
mod['func_148'] = func_148
mod = relay.transform.InferType()(mod)
var_149 = relay.var("var_149", dtype = "int8", shape = ())#candidate|149|()|var|int8
var_150 = relay.var("var_150", dtype = "int8", shape = (15, 11, 13))#candidate|150|(15, 11, 13)|var|int8
output = func_148(var_149,var_150,)
func_151 = relay.Function([var_149,var_150,], output)
mutated_mod['func_151'] = func_151
mutated_mod = relay.transform.InferType()(mutated_mod)
var_466 = relay.var("var_466", dtype = "float32", shape = (4, 11, 16))#candidate|466|(4, 11, 16)|var|float32
var_467 = relay.var("var_467", dtype = "float32", shape = (4, 11, 16))#candidate|467|(4, 11, 16)|var|float32
bop_468 = relay.power(var_466.astype('float32'), relay.reshape(var_467.astype('float32'), relay.shape_of(var_466))) # shape=(4, 11, 16)
func_148_call = mod.get_global_var('func_148')
func_151_call = mutated_mod.get_global_var('func_151')
var_495 = relay.var("var_495", dtype = "int8", shape = ())#candidate|495|()|var|int8
var_496 = relay.var("var_496", dtype = "int8", shape = (2145, 1))#candidate|496|(2145, 1)|var|int8
call_494 = func_148_call(relay.reshape(var_495.astype('int8'), []), relay.reshape(var_496.astype('int8'), [15, 11, 13]), )
call_497 = func_148_call(relay.reshape(var_495.astype('int8'), []), relay.reshape(var_496.astype('int8'), [15, 11, 13]), )
bop_519 = relay.equal(call_494.astype('bool'), var_495.astype('bool')) # shape=(15, 11, 13)
bop_522 = relay.equal(call_497.astype('bool'), var_495.astype('bool')) # shape=(15, 11, 13)
output = relay.Tuple([bop_468,var_496,bop_519,])
output2 = relay.Tuple([bop_468,var_496,bop_522,])
func_536 = relay.Function([var_466,var_467,var_495,var_496,], output)
mod['func_536'] = func_536
mod = relay.transform.InferType()(mod)
var_537 = relay.var("var_537", dtype = "float32", shape = (4, 11, 16))#candidate|537|(4, 11, 16)|var|float32
var_538 = relay.var("var_538", dtype = "float32", shape = (4, 11, 16))#candidate|538|(4, 11, 16)|var|float32
var_539 = relay.var("var_539", dtype = "int8", shape = ())#candidate|539|()|var|int8
var_540 = relay.var("var_540", dtype = "int8", shape = (2145, 1))#candidate|540|(2145, 1)|var|int8
output = func_536(var_537,var_538,var_539,var_540,)
func_541 = relay.Function([var_537,var_538,var_539,var_540,], output)
mutated_mod['func_541'] = func_541
mutated_mod = relay.transform.InferType()(mutated_mod)
var_584 = relay.var("var_584", dtype = "float64", shape = (11, 8, 15))#candidate|584|(11, 8, 15)|var|float64
var_585 = relay.var("var_585", dtype = "float64", shape = (11, 8, 15))#candidate|585|(11, 8, 15)|var|float64
bop_586 = relay.mod(var_584.astype('float64'), relay.reshape(var_585.astype('float64'), relay.shape_of(var_584))) # shape=(11, 8, 15)
func_536_call = mod.get_global_var('func_536')
func_541_call = mutated_mod.get_global_var('func_541')
const_591 = relay.const([4.964001,1.640053,9.329098,-7.383415,6.220473,0.566409,5.171509,-1.631496,-3.819124,1.218621,8.781092,-4.966757,4.618122,3.109830,-9.282068,-7.434024,5.275057,-0.040028,3.675507,0.188998,-1.497854,3.566482,-1.202807,9.513038,0.631112,4.277302,-6.187302,-8.022537,1.726968,3.118934,-6.658668,7.312530,5.544444,-0.950880,4.398232,7.424486,-4.672935,6.767093,7.068166,4.462808,9.711733,7.945996,-8.705365,2.585133,9.841742,7.132277,5.873833,-8.606644,-6.014937,6.387312,-8.386628,7.809261,6.107449,4.240057,-4.424181,-7.091705,5.472934,2.098344,6.593986,6.383079,9.056247,1.146663,-7.221338,5.127510,-9.414568,-1.405045,-5.410678,-0.938750,-5.166647,-7.522364,-7.768707,3.400355,-6.784163,-6.869785,7.763898,3.685597,-8.815483,3.333532,-8.358882,-4.663236,-3.847519,3.924842,-4.718883,-9.151892,6.814981,7.282261,7.222876,-5.857737,-8.483042,-9.866180,-0.658466,-9.470989,-3.689692,4.349317,4.125264,2.395976,-7.652629,-1.700268,-7.041554,-1.876192,4.185607,-9.388467,-6.197283,-4.129213,9.614211,-3.355882,-1.444860,-1.432455,3.931456,7.392800,5.930911,-6.778498,5.076275,2.896264,6.310835,-2.168701,1.555577,-2.999073,3.644750,-2.591405,7.533567,-0.467823,-9.402129,-6.520441,7.850347,-1.088320,-1.083173,-1.049164,4.935392,-9.711864,8.372531,7.226969,6.608572,-2.018804,-0.313967,5.928958,-5.833381,-8.125255,-1.668728,-1.802855,-8.023547,2.265715,9.231188,9.140782,1.122761,5.902833,-8.377810,6.064319,-2.348919,-7.964405,4.312880,-0.486172,3.717495,-0.604255,9.732536,1.089812,6.705655,4.669897,1.701479,1.387597,-3.014710,5.041828,9.059276,-2.601952,8.031968,-7.588165,-1.947313,-2.638937,7.991445,9.254140,6.646931,0.880811,8.548497,1.520510,0.971718,4.413713,0.282699,-8.207729,-6.787838,4.238590,2.229751,-4.217009,-3.802407,5.113528,2.616228,5.081583,-0.935534,1.954299,3.480228,-4.872029,0.433465,-0.171520,-4.957814,6.596024,0.730533,-8.961811,-9.121728,-9.882141,6.474910,5.954838,-9.802696,9.204953,5.407538,0.801619,4.371524,6.958148,0.493737,-4.267096,-8.649993,-8.059491,-7.364846,-5.883856,4.612707,1.686205,-7.818409,0.922722,0.120376,2.540566,2.036400,5.812952,-4.918816,7.459118,-6.832413,-4.934465,0.034778,-0.766376,0.605604,8.203866,9.686981,-4.542234,7.455418,8.342161,-5.791772,9.829808,5.079493,2.152867,8.653092,6.800657,-1.179757,-1.962054,7.651132,2.884507,6.809896,0.790890,8.580901,-6.649706,-0.956113,-6.306021,8.910817,-5.864610,-6.246968,-6.398650,6.056067,-1.665407,9.081675,2.667881,4.189491,-3.728997,6.356361,-4.188439,3.880981,7.173899,-6.831875,-4.455167,6.376483,-1.372779,-2.686074,6.471419,-5.614129,0.264228,-2.802355,-3.491621,2.768813,-9.351907,8.824157,-1.930107,-5.596546,-9.601833,8.450989,-3.639635,8.254685,-0.396894,8.014784,9.865062,4.069904,-6.289161,-4.449135,-9.298744,7.343990,-6.206403,2.124527,0.292747,4.763736,-3.190948,-8.099814,4.473592,3.009911,-5.922852,-7.359887,-7.023183,-6.246570,8.484205,-4.604139,0.388127,4.362323,-6.003336,-1.684121,-1.101912,3.703632,-3.465067,5.516644,7.967239,4.677470,8.332112,-9.547725,-1.673313,-5.561954,2.463430,9.314363,-1.945160,-9.321372,9.713166,-1.438711,-7.229824,-8.460389,-1.959730,5.855424,-0.331835,6.765472,-1.957657,7.211022,-0.688158,-8.953655,-8.040580,-6.092435,-4.436143,4.959896,7.874257,1.159341,6.949956,-9.077004,8.657744,-3.926769,8.030657,-2.908015,9.481558,-8.935367,5.862583,5.911546,-7.678543,2.599509,-7.452167,-4.774711,-5.846369,-7.892451,3.865826,0.694610,-0.510114,-2.678496,9.456788,7.541964,-7.757998,0.315895,-3.220279,-9.840548,-2.009399,-2.581341,-3.275789,1.570424,-5.418884,9.383737,-6.904756,5.549146,-9.113501,-4.769188,-0.913895,-2.428308,8.435543,-7.042903,-8.061781,-0.522404,-9.151323,2.120730,3.692892,-5.625447,-7.601391,6.843580,-0.334092,1.415467,-2.406493,3.833562,6.238544,-6.607302,1.963947,5.755709,4.381206,-4.324202,-4.647298,-4.731499,-2.887299,8.330032,-2.338704,-9.485653,9.041684,5.478220,1.355340,-9.138029,-5.759163,-1.435838,-6.699624,8.995198,5.265583,3.890680,-3.259088,-3.887301,-3.822671,3.028155,-5.870796,-6.511303,-5.984945,-1.949066,-1.606762,-8.116588,4.359486,-6.374514,-2.462372,1.295919,2.249907,5.991899,-9.417495,1.206782,-0.066186,-4.461094,-3.647673,-1.844734,-0.985161,-0.154702,-7.720858,-6.860091,5.357525,5.493373,-6.533455,-4.062056,9.917632,2.499718,1.639535,3.264909,-0.019126,-3.436332,-9.541176,8.372009,6.216057,0.211799,-0.676131,4.913591,-9.471518,-9.864774,0.049917,-7.889966,-6.477584,0.926373,-8.533656,5.085499,-3.379549,5.237105,3.369550,4.982212,6.127287,-7.670132,-3.051584,8.564552,-5.958691,-2.057019,-9.286769,-0.850516,-4.108003,-8.611319,-0.183749,9.398238,-8.484671,5.368965,3.396095,-6.260235,8.939150,0.097780,2.393281,-2.289085,-1.481334,1.982747,-8.790853,7.557350,2.524287,3.038241,-5.435274,-3.135038,-6.817440,-7.597879,8.994903,-3.706887,9.782732,-5.906750,-0.755619,-4.202250,4.682675,-7.797329,3.773562,4.978681,8.424855,9.182712,2.574195,-2.817152,7.382680,-1.836359,-9.228244,-1.179713,-5.595712,-6.849906,9.173808,1.763461,-2.666596,-0.426388,9.918234,7.645235,0.404786,-6.960009,-6.256405,-8.472232,4.339626,-5.901036,1.318984,0.261323,-2.095430,-8.222853,-3.771639,-5.115586,9.541086,9.271188,-6.396620,-1.946007,9.495724,6.378094,3.854858,4.229899,-9.918620,-2.754135,-4.131140,9.521376,6.311743,6.984079,5.863450,7.043140,-3.220562,1.935873,1.517484,-0.626789,0.687144,-4.326731,4.396248,9.316553,-3.097934,0.611505,-9.900718,2.396517,3.234434,7.971310,-4.283441,4.664825,0.774459,-4.230129,-6.433800,9.647595,-1.483752,6.699447,-7.799453,0.563158,-4.547384,8.704926,1.638391,2.569080,8.002529,9.431247,0.559223,6.139545,2.044896,1.434847,-7.571199,1.234912,-3.607418,4.758472,-2.214565,1.152890,7.021789,6.422465,6.583144,8.773621,5.633617,0.647306,-3.132568,-8.576591,-4.045219,4.702713,-3.535113,5.634395,3.914653,6.531286,8.941820,0.559418,-1.772725,6.572932,9.231044,-9.503538,8.666224,1.477950,-9.970198,1.851634,5.899226,-4.505417,-9.256261,-8.729510,-2.976264,6.770616,6.538554,-9.383713,4.478735,1.530793,0.654423,4.976447,0.586985,-8.851258,-4.908135,-4.592991,-9.887893,-3.246704,-0.885015,9.083585,-8.051892,-4.034502,9.099961,1.337621,-6.699193,6.034097,3.965206,-8.144090,3.824470,-8.238684,1.829992,3.749587,1.873390,-7.962863,-1.025611,-7.552686,-4.849154,-3.072425,-5.089504,-1.162428,8.912875,-7.239559,-0.845709,1.038362,4.130726,-0.036110,8.148541,-1.074095,4.883505,-2.573911,-7.345107,-5.049590,-9.853752,-6.580224,9.002202,6.752245,-7.247971,2.716926,3.314185,-5.181943,-2.355449,5.356533,-5.403301,0.953613,-0.772693,-0.158156,-0.975524,9.569445,1.380093,2.060834,-6.959485,1.772406,-3.731015,3.778408,-7.337673,-8.959138,-1.364294,-8.321559,-9.199780,-2.862219,6.020827,7.129156,-5.056239,-8.375692,9.861288,-4.313981,6.405060,-8.250638,-5.112975], dtype = "float32")#candidate|591|(704,)|const|float32
var_592 = relay.var("var_592", dtype = "int8", shape = ())#candidate|592|()|var|int8
const_593 = relay.const([1,-8,-9,1,9,1,-6,7,-9,-10,5,-6,5,7,-6,1,-4,-4,-5,5,1,-2,-8,7,-1,-6,2,3,-1,9,-5,-9,-1,-2,-10,-10,4,9,2,9,-4,-4,-8,6,-7,7,7,-1,-10,7,-1,-2,3,-6,9,10,10,-2,1,8,-4,10,-2,10,-5,2,5,10,5,-5,-1,8,1,2,9,-1,-4,2,3,7,-2,5,-3,7,1,2,9,5,-3,1,4,3,-5,5,-1,-8,-3,2,8,-6,1,2,10,-9,4,-5,2,-8,4,-6,8,-10,9,-7,-3,-7,-2,6,8,-7,3,-1,-1,-3,2,2,5,1,5,-2,-2,5,-10,8,-4,8,-8,-6,8,3,-1,10,-10,4,8,6,-5,-3,-9,10,-5,-3,-9,-1,-10,-7,-1,1,-5,-7,-10,-4,-1,7,8,-5,8,-8,-1,-4,-3,-4,-7,6,-7,-6,3,2,-6,5,-8,9,-2,-5,-5,-4,9,5,-10,-9,-3,5,-6,3,8,6,-10,-6,-3,5,-1,8,-6,7,5,6,10,5,10,7,-6,6,9,10,2,-10,6,-2,-3,10,-2,6,-8,9,9,-4,1,10,-9,-2,10,3,-1,8,-1,-2,5,-8,-10,-10,2,-1,3,3,-4,4,-6,-9,1,1,-8,-6,2,7,-2,-1,1,9,5,-8,4,4,9,7,3,-4,4,7,6,9,10,-4,2,-3,-5,8,2,-1,7,3,-7,-2,-8,6,2,-4,3,-1,1,-4,6,-6,-3,-1,5,10,-2,-3,-3,6,4,6,-8,-4,3,-5,-9,-9,-6,-5,-6,-4,-9,-1,-6,8,9,-9,10,-7,-3,-4,-1,-9,1,9,10,8,-8,4,5,6,-5,-10,2,2,8,-10,-6,8,-4,7,-10,-7,-1,6,4,-10,9,-6,7,-8,3,-8,10,6,-4,-10,-9,7,-8,8,5,1,-9,-8,-6,-3,-6,-7,6,-8,8,7,7,-9,-4,-8,-4,6,-7,-10,-9,-1,-4,1,2,10,-9,9,-8,-10,-5,3,7,-5,-4,-9,-9,-9,-9,-3,-10,-2,10,7,-2,-2,5,-8,-5,-1,9,-3,10,-1,2,1,5,-3,7,-2,-8,5,10,-8,-10,7,8,-8,-1,7,-3,7,4,-4,9,9,2,3,-1,10,-9,-1,-4,7,-9,1,5,-3,-8,-1,7,-4,-7,-3,-7,10,-8,7,1,1,8,-4,-8,3,8,-2,-3,-1,5,-9,-7,-10,-9,10,1,-9,-1,-4,-4,4,-3,4,-5,8,-1,2,-5,4,1,3,-3,-3,-9,-3,5,4,4,-4,5,8,-9,5,-5,10,-2,10,-7,-2,-1,9,4,4,3,6,-1,5,7,8,10,-9,-10,10,1,6,-6,-10,10,8,-5,3,-1,8,8,-9,3,-1,-7,10,2,4,3,-8,-9,8,3,9,-8,1,4,-4,-9,10,7,-6,8,-7,-3,3,1,3,1,-9,1,-6,-9,-10,7,-6,1,-3,3,9,-5,7,4,-2,-4,-7,-1,9,-5,-10,-10,9,10,8,2,-9,-10,2,6,10,-7,4,9,-9,2,-9,8,4,1,-1,-9,-9,5,-4,7,1,-2,3,-8,-8,-4,5,-6,-9,-2,8,-9,2,-8,4,-2,-1,-10,6,7,-8,-10,10,-3,2,9,7,-9,-1,7,6,2,4,2,-8,1,-9,-1,8,9,-9,4,-8,7,3,7,-3,-9,-1,-6,-1,6,-9,-10,-1,1,-9,8,-9,7,8,3,2,-10,-10,-3,3,-10,6,-1,9,9,-8,-5,1,-1,5,4,-4,2,1,7,-3,-8,9,10,-3,7,-5,8,-2,8,-1,-7,-7,10,-2,-3,4,-6,9,2,-4,-3,9,6,10,-1,8,-7,6,-2,4,3,-7,2,6,7,-3,10,4,5,4,7,5,5,-3,10,-4,-7,6,6,3,4,8,10,-2,5,3,7,8,-9,-1,-8,4,8,5,1,-9,-6,9,-6,10,-8,-5,-1,7,4,1,-4,7,2,-6,-2,8,-2,1,-9,-1,-6,-3,1,-8,-9,9,3,-5,-10,10,6,7,6,-7,-10,3,7,2,-6,-7,9,-8,3,-9,-6,2,-6,9,-8,-8,-7,4,-9,-3,7,9,5,-10,3,-1,8,-1,4,-6,-8,-3,-7,8,3,10,1,-6,9,5,3,10,-9,6,5,-8,-8,8,5,-1,9,-8,1,9,10,-1,-9,-6,6,-4,6,3,-2,-3,-1,5,4,-10,-7,-4,-2,2,7,-2,10,5,-5,-3,-1,3,-9,-2,6,-7,-1,-2,7,6,9,-9,1,4,2,4,4,-5,-10,5,9,8,4,-4,-3,-4,-8,1,7,-7,5,-2,3,-1,2,-8,9,-10,-8,-1,-5,-3,-10,-4,4,-5,5,9,7,-10,7,10,5,-8,-8,-4,-7,-8,5,-3,-3,9,8,-7,-1,3,-8,5,-7,-6,3,-8,1,5,-7,-7,1,-10,8,-3,6,-7,3,8,5,6,8,-8,1,-6,-4,-9,-3,-3,8,-9,5,1,-10,-1,4,2,-3,-2,-4,3,3,2,-2,-6,2,-7,3,-7,8,7,5,-4,10,3,4,1,-7,-3,9,-1,9,9,7,-7,4,-5,-3,-7,6,-8,-5,8,-1,3,4,-10,4,-5,5,-4,-5,-10,-9,-3,9,5,-10,8,-6,3,4,3,5,9,-7,1,-1,2,1,6,7,-4,6,10,4,4,-1,8,-4,-7,9,4,-10,3,-2,-1,-10,-7,8,8,5,2,8,1,6,-4,-4,6,-5,-5,-7,7,1,4,3,3,-6,3,4,8,10,4,10,-9,-8,1,3,3,-2,-5,-10,5,1,2,4,5,1,9,1,4,4,-7,3,-3,6,2,-6,4,6,3,3,3,7,-5,10,10,-5,5,6,3,-5,9,-3,-1,6,-9,1,-5,2,9,-9,9,5,-4,-3,-2,-3,2,-2,4,-6,-9,5,-9,3,-2,-8,-6,7,1,-6,-8,4,4,-2,5,1,9,9,-4,8,3,-7,9,9,-1,5,-6,1,6,-10,5,7,9,2,6,-7,5,2,-7,-8,-7,-10,-3,-3,-8,1,6,7,-4,9,8,1,-10,-9,-3,7,-9,3,10,2,10,-1,-9,-2,-5,3,8,1,6,-7,9,10,-1,-2,8,-10,5,-7,-8,-9,1,-10,-7,-7,1,3,7,7,-4,-10,-3,5,10,4,2,-2,-7,-1,3,7,-3,-1,-4,10,-9,2,-9,-10,10,8,9,-4,2,1,7,-7,-10,3,-1,2,1,2,3,-10,7,-5,-8,5,6,5,-5,6,-5,7,-9,-5,-5,10,-8,2,-8,4,-6,6,-4,-7,-3,4,1,-3,-2,-1,-5,6,-1,1,-5,-5,-3,-5,4,-5,7,7,3,-6,-8,2,8,-7,6,10,2,-2,-10,1,1,1,7,5,7,5,-8,9,4,-9,-3,-2,6,-9,1,10,-7,-9,6,4,-5,9,5,1,5,10,9,-2,-5,3,2,-7,2,-3,10,-4,-6,8,2,-1,-1,4,2,-7,8,5,1,8,8,4,1,-10,-2,6,-10,-8,7,-1,9,-8,-7,-6,4,4,5,9,7,-3,-8,10,8,-10,-1,6,10,4,8,8,3,-6,-1,6,-4,6,10,1,7,4,6,-5,-7,-4,10,-9,-5,5,9,5,-2,5,-10,-1,10,2,-5,-2,7,-7,1,1,-2,3,10,5,8,4,-8,4,10,6,4,-10,-6,-9,-5,-5,7,-8,-4,8,3,-2,9,-9,-10,6,2,5,3,7,4,-6,-7,-9,7,5,-1,9,10,9,-2,4,-1,2,-4,-3,-8,-1,-3,-8,-10,-10,-7,-1,6,7,-2,-2,3,-6,-10,5,-8,-4,1,-1,4,-1,10,-10,-9,6,9,6,-9,-8,1,-10,-4,-2,-8,-3,6,-5,-4,-5,-1,6,-9,1,5,1,-5,-7,-7,1,3,10,-9,-8,-10,-8,3,1,4,-2,-5,5,3,-8,-4,-8,6,8,2,8,8,3,8,3,-9,-3,9,-4,-3,-3,-3,3,8,3,-7,4,-7,-7,2,-10,-7,3,2,-8,-10,-1,-3,-10,-6,-3,-6,-8,-1,-9,-7,3,-2,9,6,9,8,8,-4,2,-3,-5,-9,1,8,-4,1,-10,-8,8,-6,-9,-9,-6,7,-3,3,9,-10,4,2,-6,7,-7,3,-8,-4,-3,-6,-6,-7,1,-8,1,-3,-10,3,10,-10,-7,-4,-3,-4,3,-5,10,1,-3,-4,-9,-9,1,-2,4,-10,6,7,-6,6,-8,-2,5,4,2,-2,6,-7,5,-10,3,1,-5,9,-7,3,-7,8,8,-8,1,-9,-3,-5,-8,-7,-8,4,-7,7,9,-3,-4,-6,4,-3,6,-3,-8,7,-5,1,-5,7,8,-9,-5,-3,3,3,7,-2,8,2,-4,-6,-5,4,-1,-3,-6,-8,-5,2,-2,7,3,-2,7,-6,5,1,10,10,-6,-10,7,5,-9,-2,-4,-10,-8,-7,-6,-5,-7,-3,-10,6,-7,-10,6,-6,2,8,7,-10,-10,-10,-10,-9,1,-3,6,9,-8,10,4,-1,-6,-10,-6,-9,-9,-5,6,-9,-8,2,-2,1,-1,5,9,-10,6,-9,4,9,7,-6,9,-9,-6,3,1,-1,5,8,4,10,-9,2,-4,-9,-4,3,-8,10,-3,-3,5,9,-10,3,-4,-3,9,-6,-6,-4,-10,4,1,-2,-5,1,1,-9,8,6,-2,-4,-6,-5,-7,-5,-8,-5,-10,-3,3,4,-5,-6,4,4,-5,-8,1,5,4,7,8,-1,8,-5,10,-7,-4,-10,7,6,-2,-4,8,3,9,6,-1,-8,-4,1,4,-1,-1,9,-4,-3,-9,-9,6,1,-3,7,-7,-2,9,5,1,4,-8,1,9,-6,1,-7,1,-6,-8,-8,-7,-4,-4,-10,8,9,8,-5,4,-5,-1,3,2,-6,-10,5,-5,-4,9,-5,9,-2,4,5,-1,4,-5,-3,6,-9,-2,-6,3,-9,5,1,8,2,-1,9,-7,3,1,9,3,-6,2,5,5,2,-8,3,-8,-7,1,-2,-10,-8,-1,10,7,-3,9,8,2,3,5,-5,2,4,7,-2,1,9,9,9,5,-8,-2,10,8,-3,1,8,9,9,-7,4,-10,-3,-10,8,-6,10,3,-1,3,-6,1,10,-5,7,-1,-4,-2,2,9,7,-6,-1,-7,10,6,4,9,9,-6,-7,-7,-8,8,-3,9,2,9,4,6,5,1,3,-5,5,-1,6,3,-1,5,-8,5,10,3,-7,-10,-5,4,-1,10,-10,-8,1,2,4,5,2,2,-4,-7,-6,-5,-8,-6,-8,6,-9,6,-8,1,6,4,6,9,10,2,3,-4,-6,1,-9,2,1,-10,-8,1,-7,-3,10,4,10,-6,3,3,2,-5,-10,1,-7,-2,-1,1,1,-4,6,1,-6,-8,-6,-10,6,9,2,-9,10,6,-6,1,10,8,-3,-3,-5,10,1,-10,-5,3,9,-10,3,10,2,-9,-5,10,6,-9,-4,4,8,2,-3,5,-7,10,-1,-1,2,-7,7,-6,-1,-5,5,10,-3,9,7,9,8,-4,-2,2], dtype = "int8")#candidate|593|(2145,)|const|int8
call_590 = relay.TupleGetItem(func_536_call(relay.reshape(const_591.astype('float32'), [4, 11, 16]), relay.reshape(const_591.astype('float32'), [4, 11, 16]), relay.reshape(var_592.astype('int8'), []), relay.reshape(const_593.astype('int8'), [2145, 1]), ), 2)
call_594 = relay.TupleGetItem(func_541_call(relay.reshape(const_591.astype('float32'), [4, 11, 16]), relay.reshape(const_591.astype('float32'), [4, 11, 16]), relay.reshape(var_592.astype('int8'), []), relay.reshape(const_593.astype('int8'), [2145, 1]), ), 2)
output = relay.Tuple([bop_586,call_590,const_591,var_592,const_593,])
output2 = relay.Tuple([bop_586,call_594,const_591,var_592,const_593,])
func_600 = relay.Function([var_584,var_585,var_592,], output)
mod['func_600'] = func_600
mod = relay.transform.InferType()(mod)
mutated_mod['func_600'] = func_600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_600_call = mutated_mod.get_global_var('func_600')
var_602 = relay.var("var_602", dtype = "float64", shape = (11, 8, 15))#candidate|602|(11, 8, 15)|var|float64
var_603 = relay.var("var_603", dtype = "float64", shape = (11, 8, 15))#candidate|603|(11, 8, 15)|var|float64
var_604 = relay.var("var_604", dtype = "int8", shape = ())#candidate|604|()|var|int8
call_601 = func_600_call(var_602,var_603,var_604,)
output = call_601
func_605 = relay.Function([var_602,var_603,var_604,], output)
mutated_mod['func_605'] = func_605
mutated_mod = relay.transform.InferType()(mutated_mod)
const_744 = relay.const([[[-8.497581,-3.182643,7.520711,4.275854,4.833060,-4.219226,-0.115239,4.323417,7.244771,9.345421,-2.381411],[8.803890,-5.223318,4.693941,-9.463268,-8.457766,7.244067,-4.957530,8.820806,-0.120292,-3.359686,9.877373],[-3.225849,7.676761,-4.107782,-2.207776,8.851393,2.088614,-3.332930,8.557110,0.051597,4.071153,-0.916812],[-9.961477,2.712412,1.186219,8.262760,2.785779,3.530022,8.634707,3.794219,-7.361425,3.358201,-7.085694],[-4.054769,-3.053710,-1.792770,-7.319607,-7.137792,-1.948343,8.185627,9.245374,8.290287,9.269257,-4.564641],[-6.729163,-2.423797,-6.956039,-3.394743,-4.224190,-6.205836,-4.307116,-8.635846,-0.350465,9.714458,9.697324],[-1.677229,7.164098,5.815898,-7.569072,-7.240317,3.096188,2.672386,-7.613082,2.688234,6.358159,-3.770783],[-6.531529,-6.303280,6.308495,6.809243,2.608447,8.951418,5.711434,9.874064,-6.536704,-4.754033,-8.791377],[7.571183,4.881629,2.127735,6.692587,3.982548,3.778067,-8.577447,1.504157,6.140553,6.725529,-2.271398],[3.807837,-9.723540,0.182816,6.414521,-3.662740,-2.795106,9.818087,-2.671200,9.640326,-6.674758,-2.092714],[3.441537,5.997332,-0.134508,-1.184565,7.384375,-3.102644,9.803669,3.852726,4.547716,-4.253563,9.059241],[-2.468411,-2.155880,3.850254,-6.141982,8.916768,-9.833849,-2.774499,6.884328,8.906568,-6.179857,-9.463674],[2.959628,-4.357265,3.968174,-6.723700,1.034305,7.660590,1.050781,-1.990722,-3.069847,3.203642,-2.945410]],[[8.010809,-9.846197,2.112447,-2.185431,5.727154,4.605029,-4.416650,-4.813015,1.022821,7.616293,9.268627],[-6.170377,-3.547315,9.689843,5.633896,0.022165,2.440217,8.879279,-6.637285,-9.451614,6.858194,-7.712579],[-3.468659,-8.080511,-0.403700,-9.675450,-6.416752,3.648210,0.743808,9.691930,9.945911,1.278051,-6.138533],[0.903523,-0.458414,-6.661426,7.134136,-0.098461,7.035186,9.652622,-0.230649,0.029266,-6.038111,-8.145150],[8.135891,-8.469278,-8.335724,7.137020,-9.003504,-2.469881,-4.157612,-2.148210,7.638263,-4.961214,-9.238973],[-2.330937,9.389632,5.572020,-1.868622,-3.158730,0.449941,-6.817463,-3.615969,7.805323,-5.031924,-4.281012],[-6.244041,-1.441158,8.993236,6.171447,7.395274,-6.105205,0.985106,-0.537888,7.413781,-5.683263,-9.623940],[5.390785,-6.378154,4.110720,-7.388123,-0.834791,9.237260,-3.193870,5.284133,-1.096824,7.093653,1.551697],[-0.077293,-8.428016,-0.529405,1.370939,-9.565479,-5.721954,6.993684,1.022396,5.288825,-0.436559,5.714874],[1.403498,-9.884324,5.402523,-9.412478,6.019263,-4.374401,1.111025,-9.346286,2.547591,3.492156,4.999640],[-1.650040,-4.747879,-2.475858,-9.243729,4.322193,-1.786551,3.104981,0.382045,1.776543,-7.063000,-4.573250],[-7.847923,-6.215500,4.096932,6.288049,-3.581172,-3.830679,8.722228,-0.210941,-6.726498,2.377862,8.307576],[-3.261950,5.916321,5.016641,3.865664,4.673403,-5.662370,-6.419971,3.710694,2.434147,1.067213,-8.006448]],[[-8.310121,-1.172984,-2.891621,-0.202170,-0.077748,-4.905599,-7.039721,0.437837,1.558136,1.212890,3.031799],[-5.625152,-0.301202,-7.483161,3.167685,-6.703086,9.744811,-7.922699,2.817867,-6.034921,4.101257,9.813799],[-9.165577,4.935272,4.128694,-8.940093,-7.669347,5.042655,-5.031623,-0.858799,-5.592106,3.555919,3.003802],[4.937844,-9.608738,-4.017043,-3.652534,5.046957,3.587179,-2.881752,-4.294851,0.107661,7.685971,0.171174],[-2.788482,7.671271,-3.690226,3.911734,-4.054260,-9.771668,-8.304893,-4.372296,-0.935888,5.057683,0.638962],[-4.618357,-2.609298,-0.378513,-9.373136,6.065542,-6.915150,9.120866,-9.432532,-8.820890,9.245698,7.747945],[-8.439130,-7.206543,-4.948528,-2.371083,-4.034520,0.901707,-5.170683,-9.855442,2.725830,9.613414,6.383185],[-4.944865,5.126488,-2.176693,-0.372461,-7.089041,-7.624903,1.411720,7.739566,-5.180714,7.735811,-1.823925],[6.288660,-3.579727,1.642963,-9.333236,2.504591,-8.258253,-4.817809,8.593371,-5.442268,1.561075,6.205628],[1.103863,-8.531522,-0.867691,6.495905,8.826274,1.193378,1.874805,6.844487,7.998472,8.304208,-2.933543],[7.720565,-7.498253,1.758100,-4.565472,-4.112985,3.615679,3.365801,-4.153208,6.381306,5.423161,-9.400666],[5.833605,3.457410,-3.409094,-9.287214,-1.025120,-4.038678,4.188628,-4.441257,-7.925629,-9.120925,9.655124],[0.845936,-6.897005,2.567515,-3.477318,4.724955,5.800047,-0.939646,8.838107,-0.275943,-3.790624,-3.214026]],[[3.890836,4.494634,2.574590,9.355295,4.073238,7.756833,4.275646,-7.040664,-6.655502,1.216664,-1.636785],[5.777624,-3.598912,7.692416,-1.529774,3.447260,-3.818620,-1.455241,-5.507620,-1.631558,-1.442143,5.922427],[-5.778958,1.107701,8.283031,-5.912212,0.064710,0.318882,-6.340187,-7.481448,-4.857237,-2.276984,2.906308],[6.882921,-3.964787,0.039532,2.746571,1.068989,-4.407315,-3.013904,5.244585,8.380657,-1.881768,5.107485],[3.848759,9.767817,9.501847,-2.330558,-5.758803,-0.324271,5.262661,-7.012504,-6.704266,-8.567918,-8.984992],[1.644843,-5.262966,-8.661187,2.260619,5.919975,-0.509165,1.656666,-6.319065,-9.538871,9.500887,2.301474],[-2.122990,4.642822,2.798916,-5.713587,-9.089745,-9.238325,-2.193713,5.593061,-5.379541,7.906434,6.721118],[-4.076491,-2.132237,6.659412,5.699907,4.845118,-7.236935,-3.617142,-5.621929,5.363154,-7.288134,0.844678],[6.052142,8.893791,0.619704,-2.672932,5.711691,-3.588494,1.422544,3.212806,1.049062,-0.772840,5.703686],[6.345879,4.866300,-4.454241,-1.913416,0.576908,-2.543049,5.163854,3.476448,-1.573220,-3.128028,-0.800009],[-7.130196,-6.590023,-9.102219,1.608093,-4.975342,-4.854201,-5.989381,9.241980,-5.117546,-4.058451,8.658176],[3.462746,1.590046,9.809348,-8.175130,9.924926,3.777050,-0.023993,-9.007484,7.645082,3.402532,9.397582],[-8.709088,-7.726215,5.266778,0.558225,8.358250,5.133521,5.063845,-2.848624,-9.701234,-2.084947,-5.191537]],[[-9.465382,2.874798,2.069810,3.947916,-2.675541,3.857678,-3.310024,3.413646,-9.332430,-5.945092,4.889315],[-0.903117,-8.609700,5.659235,1.684995,0.473446,-5.849778,1.215921,4.507736,-5.591663,5.085586,7.724387],[-1.054700,9.821416,2.008899,-1.499422,9.389213,-2.071467,-8.149363,8.090684,8.054691,4.606659,7.018501],[4.227323,9.457511,-7.201588,-3.041754,-6.228287,-9.366314,5.071805,-9.213234,-0.418681,-5.923533,6.991073],[-9.025628,-4.561639,4.021197,8.156243,5.927264,-5.018207,6.767125,1.793321,-0.081070,-8.663479,9.390685],[-1.765816,-8.391824,-8.757725,9.190517,9.114127,-8.919410,-6.988824,5.890635,-1.299899,-0.261136,6.008493],[7.088183,0.423765,-9.764164,-5.127123,0.540246,4.012173,0.638202,8.911605,7.400038,-1.488154,-5.050894],[-1.022815,-5.616690,-9.731092,8.639418,-5.535194,-5.539790,-0.640577,-1.930523,2.437521,7.219054,1.806466],[-0.926637,4.456667,3.839313,9.805460,-3.116383,4.070929,-2.103278,-8.679583,2.305510,-7.299269,-1.480844],[-1.069496,4.539090,3.822163,8.711063,1.971238,1.926102,3.793914,-0.310296,-1.321887,-6.501866,2.923597],[-3.572370,-1.307012,2.167166,5.534473,4.674390,-1.132187,3.835580,7.648571,-9.783090,-9.494741,-7.329524],[-1.078313,-3.126523,8.264415,-7.467469,1.433075,-0.792721,-0.687107,-4.543825,-2.045772,4.503745,-5.586548],[-9.121685,2.572408,-4.575213,-3.743039,-7.364003,3.827059,7.004644,8.434958,-3.342205,-6.174741,2.799507]],[[-4.946394,7.698540,3.862368,3.522792,6.105447,-9.501227,-9.418520,1.181780,3.190382,7.844647,-7.068557],[6.976200,-0.449071,1.188417,8.864205,4.917039,-1.948038,-2.823495,9.323800,-6.359779,3.834025,-9.029169],[0.905603,-7.452619,4.281604,-8.177585,-7.750576,2.764686,5.497265,-4.652136,4.770230,-1.795388,-8.573938],[-4.151219,-7.573049,-9.985645,1.713898,7.570734,-4.235521,8.475482,5.279319,-7.977960,3.118510,-7.846241],[-6.600473,5.745201,-1.238923,2.950394,-3.295676,-8.575050,-0.118956,-9.055652,5.067353,9.696804,3.776389],[5.724643,-6.894757,6.375889,-8.678077,-5.154891,-7.719287,-9.406203,6.414140,1.904667,0.889673,-8.976315],[-1.241214,2.379742,-9.074578,-2.462967,1.045422,-0.950733,2.046295,-8.139806,4.820156,-8.537955,-8.628313],[-6.458786,-2.222327,-6.070189,7.200856,-0.006139,9.286881,-7.161411,-5.730566,-4.475674,-7.718005,2.123014],[-4.293177,9.885908,-7.829240,0.202263,6.704389,-8.062016,6.362490,0.995907,9.789869,-5.827234,-4.579999],[-9.032454,8.081597,-7.252803,2.110702,6.109889,0.554327,5.270737,-8.658112,1.420053,-8.188551,-4.185730],[-5.938086,-5.165922,6.753476,-2.489399,2.239720,-1.558847,1.955243,5.572074,-5.570721,-2.133774,2.039206],[9.714217,-5.766174,0.957079,-9.848906,-9.355159,-8.989668,-8.289791,-3.017930,9.412066,9.376403,-2.275040],[-0.272906,0.246979,3.988130,3.894738,8.168109,-7.946383,0.300598,-7.199796,5.320094,-4.892888,5.447599]],[[2.472088,8.300152,-0.934284,-6.159743,-6.550799,-4.302837,3.731371,0.142577,-2.428986,9.548199,6.768595],[9.429336,-9.156888,-8.880042,-0.807546,2.822669,5.724168,-2.994293,6.010145,1.368486,7.676209,3.534683],[1.520233,5.239641,5.826631,-7.115347,1.806048,-5.996380,0.065476,-6.779059,4.762293,4.696358,8.789422],[-4.169301,9.939950,-8.179764,1.310647,6.040833,-5.820046,-7.936905,-5.781206,-4.285952,-6.178770,3.260059],[-9.080006,5.436899,-4.769881,-8.216076,-4.986401,-0.342359,-0.438325,1.803910,8.352747,-6.545743,8.615293],[5.546658,-7.591984,-9.683651,6.948828,-6.029678,1.158248,1.472504,-2.995849,7.819381,-4.333822,-4.785671],[-5.582679,-3.427042,4.634830,-1.215579,9.169065,-8.035338,4.762653,0.318350,-9.926672,-1.465970,5.096673],[6.913899,-5.271275,4.657268,1.339688,0.372506,4.950257,3.370343,5.036064,4.748234,9.689309,-0.390156],[-9.221302,1.914138,5.495041,8.140348,7.459424,-2.124966,0.385653,-6.007053,-5.856879,3.477228,3.736815],[-3.436379,-6.406658,-8.144629,4.612857,-6.572034,-5.605269,-8.048923,-3.238328,-3.912737,0.340894,3.374543],[-2.328819,3.986170,7.769269,-4.934805,5.284392,5.630898,2.154113,6.695776,-7.545589,-3.713779,-7.488866],[-6.779016,-2.018857,-9.322950,-0.881740,8.685875,-3.010043,4.453392,2.014334,-9.664830,-7.690474,-7.043169],[3.314998,-9.230317,5.058437,-2.062714,1.437643,-0.881702,-7.854875,7.341248,-1.850043,2.418613,8.627617]],[[6.219341,2.960343,5.102153,7.301484,7.960381,-7.074692,9.611428,-5.956524,0.160175,-8.466570,-3.073131],[-6.788480,9.508352,-8.351102,7.403741,2.400805,-3.203558,4.970040,-9.742133,4.605847,7.917611,6.000962],[6.710221,8.931401,-1.442508,3.911126,-2.272891,-2.187668,-3.787759,-9.002662,7.732879,-2.835079,-4.296647],[8.806024,6.151972,-8.414287,-7.940428,8.276498,-7.769114,-6.496369,-4.859124,9.141018,-3.537763,7.485674],[-1.715691,-1.423116,3.831144,3.645167,-1.225033,3.545610,1.294621,9.803800,5.599163,3.461211,1.562127],[-3.632970,3.403509,-6.264420,-1.805651,1.800165,8.694659,-1.619772,-3.064793,3.059243,-4.127821,-9.012821],[-9.092053,-3.130526,-1.746427,7.697377,2.087338,-2.495968,9.709121,-2.597702,-4.142231,-0.165401,-3.283230],[-1.981142,-3.048502,8.081586,-8.060308,-7.501427,8.116727,5.399434,1.864969,8.628842,-7.096952,4.895077],[-7.450696,3.995931,4.683423,5.288067,-8.035823,3.763908,9.279139,-6.451501,-0.639980,-2.714128,4.645476],[-0.079325,6.327145,4.261162,8.845080,8.289142,8.575456,-3.752693,3.872912,-7.496864,6.020943,-1.204680],[-3.137376,5.814450,-3.577026,7.120151,0.691585,-1.485345,9.918243,-9.782454,-4.306165,8.227419,3.870179],[2.116910,8.663916,-4.942844,2.667530,5.012433,8.571323,-2.052414,-6.595647,6.759747,5.371919,-7.165923],[-9.120644,1.442720,1.676717,-1.653714,-2.403655,8.336316,6.799473,6.373383,-1.192495,-2.141421,0.549872]],[[7.342377,-9.998874,3.392280,-5.942191,6.431264,-4.561573,-4.798842,5.356248,-0.583686,-2.335954,3.721200],[-9.919697,-3.904772,9.241450,-5.893210,1.268532,-4.377482,9.867416,-9.876968,-2.190931,-2.969380,-5.524458],[-0.675033,6.125585,-0.527161,-4.289360,3.375494,-9.945689,2.713541,-1.450180,-6.756043,-0.358408,-0.007208],[-9.946582,4.926002,-2.802472,8.270655,-9.588294,-3.431618,2.742754,3.438762,-3.432143,-4.266562,-5.879143],[-9.539381,6.541631,5.565865,2.419986,5.139894,-6.069003,-7.575172,-3.598170,2.093233,8.871058,-4.142428],[-7.097720,-9.773509,-1.431891,9.624467,3.542185,-1.643694,-7.124962,-6.297778,9.981490,7.497988,-3.337670],[-0.451268,-1.662754,-2.447488,0.686069,-9.406090,-7.400800,-6.454577,5.526861,-7.247985,3.825608,8.721267],[-7.677397,5.937795,-7.437144,5.393742,3.905217,1.807021,4.899462,1.873512,5.929272,3.239109,3.863919],[-9.735445,9.054494,5.222035,1.951167,0.363381,-3.271686,0.417989,0.233732,4.063337,-0.249073,-6.150931],[-3.084903,-2.374774,4.566231,-9.463230,9.845853,4.790726,9.315378,6.731095,-0.446355,-3.951276,-9.048461],[1.924462,-6.631357,-0.093475,6.103857,-4.197490,-4.056831,6.215564,-8.675679,-5.926056,4.596413,0.652568],[-5.216951,5.214627,8.506299,1.423719,-1.026731,7.916888,-6.487125,3.372829,9.794631,1.281887,0.594456],[6.141268,-7.627520,7.962142,-1.299804,-7.629762,-2.815113,3.383304,4.210417,8.265090,5.866316,-8.582973]],[[-7.283970,5.125470,-8.268112,5.573838,-9.425949,9.076794,7.785345,-2.206932,0.681063,-4.316968,-8.989446],[7.636917,6.340751,3.519316,-1.142542,-4.852441,-9.601641,-7.368442,-8.884691,-8.623879,-5.558898,-2.632460],[-2.386329,2.024030,2.547426,7.523160,1.417371,-5.059520,2.815321,5.291404,3.410445,-9.740485,-2.307458],[-6.658096,6.780966,0.590320,3.287848,6.476201,-4.538583,3.427170,-4.070379,4.548833,-3.234219,-9.511672],[-1.110658,6.914084,1.556725,3.976191,-5.476556,7.673097,-7.149188,4.588085,-8.497206,2.536580,-6.639607],[-2.544234,-3.851786,-1.118004,8.288685,-7.054922,0.241513,-5.908254,-4.305382,-0.317974,7.585751,-2.239591],[-0.416275,0.277992,-8.019296,5.179325,-5.066259,8.489939,9.485145,7.097935,6.105163,-6.948370,0.234680],[7.160994,-4.891391,-1.703797,7.685005,4.442552,-5.083621,-2.303840,-7.478259,8.926063,-9.368454,8.968476],[9.911197,-8.500254,-0.510852,0.114962,7.169976,3.670261,-0.822499,-5.249054,-7.352924,5.426183,-9.518930],[9.224611,0.001002,1.474828,-2.767002,9.917827,5.668648,-3.874881,4.657419,2.896034,-0.407568,-5.694247],[-3.243353,4.411001,9.943266,-1.125674,-6.362645,-6.750451,-5.729491,5.842864,-6.406275,-5.533162,0.404885],[7.819996,-7.566498,7.759896,-9.082116,4.203204,-9.453878,3.374253,6.839288,-0.595921,-5.798250,7.490453],[-8.273672,6.307193,-1.551466,5.249293,-5.569550,-2.753392,5.877844,5.558474,5.511399,3.821457,2.771241]]], dtype = "float64")#candidate|744|(10, 13, 11)|const|float64
uop_745 = relay.cosh(const_744.astype('float64')) # shape=(10, 13, 11)
output = uop_745
output2 = uop_745
func_759 = relay.Function([], output)
mod['func_759'] = func_759
mod = relay.transform.InferType()(mod)
output = func_759()
func_760 = relay.Function([], output)
mutated_mod['func_760'] = func_760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_771 = func_759_call()
call_772 = func_759_call()
uop_774 = relay.tan(call_771.astype('float64')) # shape=(10, 13, 11)
uop_776 = relay.tan(call_772.astype('float64')) # shape=(10, 13, 11)
func_600_call = mod.get_global_var('func_600')
func_605_call = mutated_mod.get_global_var('func_605')
const_793 = relay.const([-2.508167,-3.820837,0.822565,-2.632843,2.484613,0.961058,-3.726446,-1.682261,1.832804,-0.559120,2.546799,-9.755922,0.432446,6.985456,1.378100,8.185100,-8.433233,2.433167,9.435044,1.922102,2.439920,-2.350066,2.575389,-2.470921,8.483055,7.565277,7.872620,4.948292,-5.352575,5.817527,-3.084520,-0.591589,-5.004734,-1.986514,0.888620,-8.781927,-6.619900,-2.993755,0.603857,1.777416,-8.747857,-7.364221,-4.424317,-7.021149,-8.456576,-3.166607,-7.688269,7.007300,8.134314,-0.762445,6.282970,3.920680,9.509880,-3.920319,-6.935992,9.461187,-0.813980,-0.324092,-0.277067,2.788090,-7.383025,4.635020,-8.935953,-9.854068,1.055225,5.485232,4.654984,-2.842421,-7.904379,-2.724225,-6.645348,3.682808,7.847922,-4.807392,-7.169397,-3.002925,4.854448,0.240825,-2.683517,9.178568,-2.458007,7.439546,8.700839,-9.922977,-2.816981,-7.536783,4.332696,1.484642,4.804416,-9.087257,4.090795,0.987646,-1.016858,1.066201,-3.579117,-8.374137,6.582760,-9.458750,-4.673186,-2.954720,4.173063,6.342882,5.159392,1.214371,-8.300209,-3.566797,-7.896910,0.524860,6.783330,-6.902559,6.968456,-6.623956,-2.512460,-9.838849,-7.330122,6.362751,3.844770,-9.717723,3.920032,-0.142740,4.324122,9.263521,-8.603891,-1.842994,7.235768,1.605898,-0.769060,1.330403,-6.578534,5.453916,8.837246,9.832096,0.604615,0.811801,0.497907,3.620137,-5.192377,4.422890,2.618809,-6.546849,-7.111655,9.192633,-4.971476,2.344512,-9.949848,4.403031,0.122434,2.481874,-0.192002,6.850553,-8.185581,-0.079921,7.603509,5.979849,3.401828,-6.241387,8.319933,-2.149084,-0.364976,-5.559422,-6.159433,-2.816555,-6.200517,5.584832,-7.698354,1.499311,3.812756,-2.212287,4.383662,2.546090,7.430027,-5.375539,5.186520,-8.332437,-9.069523,2.578355,-7.525238,-7.162933,9.195088,4.946590,-5.590094,-9.046095,-3.066638,-0.653128,-3.709400,0.180578,1.792084,-1.591673,-5.289632,0.188468,4.082537,-6.982934,-1.310635,9.812034,-3.096708,-3.164852,5.522117,-0.026609,0.526137,3.494817,-3.140956,4.361269,-9.276192,-9.147924,2.112163,8.523536,-7.294266,-3.561480,-0.115631,-2.984298,7.815349,7.330398,5.008300,-5.417542,-8.003173,-7.144904,-5.376983,0.019919,0.377609,-0.990402,5.937361,-0.651946,4.216879,-2.917625,-8.777817,-1.665356,4.236341,-0.233222,9.886795,7.940748,-5.574213,-4.320858,-7.868523,4.355494,1.661722,-7.202585,1.403784,1.177175,0.823480,-5.088221,-2.444724,7.192085,-1.523584,9.882580,1.388800,3.894888,-8.082087,-0.970424,3.163138,1.433463,4.043147,9.683194,-8.580397,9.734785,2.271377,2.264406,-2.868072,3.003263,-6.757592,-1.551782,-2.131360,0.907971,5.437165,2.368078,1.361244,-1.124073,-6.568455,2.678841,-6.632635,-4.185874,-4.939362,7.392191,3.559508,1.258730,5.757437,8.175600,6.975285,3.633950,-9.851347,-4.671508,6.287752,8.392348,-3.531003,-8.451077,6.008806,-1.740904,-1.164329,0.645693,9.355208,7.952524,-3.246511,-1.519351,5.369904,8.369335,-2.099364,4.607338,-8.497586,7.229573,0.160012,9.688750,-7.915488,-1.232365,9.079119,-0.947638,-6.329385,-8.355028,-4.113635,-8.187921,-7.976487,-8.527470,2.209427,-4.878778,-5.559201,8.188503,1.512895,-4.555221,-5.202024,-9.571373,-9.246119,-8.776819,-6.802890,-8.902876,3.354272,-7.411471,-4.694476,-7.990167,-1.989990,2.831363,-0.701317,-7.630420,6.227806,-9.819165,3.832035,1.169486,7.653454,-4.770023,-9.541534,4.379886,6.810589,2.503784,-6.788446,-3.938769,-7.466632,2.424228,-0.792458,-1.738690,-6.647289,3.875401,8.923682,-1.649735,1.427290,-3.181187,5.012641,6.996438,1.385056,-7.989395,5.506397,-9.535901,-2.110361,-9.260070,4.152605,-5.205598,2.044408,0.841215,-4.830601,-2.548240,-4.351886,-9.737986,-5.676906,4.623729,-8.839633,1.347167,-3.863017,-9.186874,9.684412,5.968383,3.267275,-8.883684,2.221824,-3.397495,2.309900,1.726708,6.600504,1.538951,-2.239817,-5.325265,-1.162810,-5.039611,9.037354,1.633286,5.822013,-9.142719,-9.651218,-5.352267,-0.322361,-2.124120,3.628040,-3.846193,4.345667,-2.669763,-9.677899,-8.188415,-4.238464,8.538475,6.552436,-7.983220,2.594160,-4.469617,8.081189,8.452805,2.010828,-4.806593,-6.771630,9.250931,-6.127183,7.978072,-8.225508,-0.328028,-3.085290,4.690782,-3.813561,-3.851102,-6.940005,-0.841196,6.645088,5.467761,4.676217,8.771454,-6.503004,5.906577,-0.314733,1.138153,-6.699659,8.429890,6.309782,8.208935,-8.951999,2.619778,-9.435973,4.022186,-5.067900,-4.168770,-3.409266,0.582907,-2.657086,3.024478,4.842774,-1.969092,-0.397619,-2.435647,-4.793335,-0.631583,6.870310,2.329046,5.402291,-9.916054,1.042479,1.903568,-7.214295,7.626504,3.590446,-3.423628,3.857583,-7.803512,-7.081786,-8.651144,-9.466841,-1.712596,-3.118795,7.620397,-6.109795,5.108984,-7.154412,5.393889,8.848659,-1.790444,9.546603,1.258109,7.052126,4.353536,-5.255194,-1.906349,-4.682691,2.211491,-3.374728,-2.453050,-6.829915,-5.799984,-2.628926,3.774561,-2.143281,-7.698250,-2.607954,5.656765,2.475849,-4.592450,-8.807022,6.222650,6.048159,3.473966,8.736996,-9.790201,-7.865645,5.052984,-4.556197,-3.414975,-4.607457,-9.879506,4.966692,-4.168718,-0.932205,-6.659682,6.871797,0.890281,-5.625001,-8.353055,-1.338474,5.483307,4.980932,8.007879,-2.925466,9.161840,-8.110875,7.744781,7.589230,9.466461,-2.504571,-7.232895,7.904208,-4.879879,-4.214688,1.064964,8.788856,3.262539,9.608340,-6.629696,7.682057,-1.852315,-4.026106,6.086299,4.373064,0.490816,-4.080003,5.586939,-1.642371,-8.179727,-3.761380,1.498063,-8.659566,2.891580,-7.779590,6.875002,7.789723,1.389508,-6.451762,2.038837,5.247473,3.281612,-5.624112,3.768399,5.885427,8.568171,-9.117954,7.010592,-6.158450,-7.878250,7.852659,-4.734754,-7.032350,-1.384222,-0.195170,-2.494939,-5.992097,6.044336,4.932558,7.292170,-0.014604,-2.818859,-3.761383,-6.138381,-7.716361,9.927391,-7.787364,-9.537471,8.001664,3.211868,-9.423969,-1.753967,-2.699378,5.070067,-8.117066,-2.874795,-4.956345,8.824686,-8.497845,2.448266,1.579093,-3.624552,-7.661283,-4.033184,8.466049,4.506652,6.342269,3.599265,1.029517,1.303278,2.349729,0.168876,7.220529,-4.668962,-1.745455,-7.387425,-7.510261,2.897134,-8.416419,5.222296,-8.101552,2.390746,-6.620089,0.394634,-6.664510,1.269766,-7.071409,6.013678,-2.213313,6.396464,9.300049,-2.828903,2.486646,-1.639624,8.406119,0.702253,-4.372476,3.415870,3.521385,-7.678166,-4.237962,-2.063775,-0.923977,-1.949390,1.974002,0.940263,5.372958,8.743255,-1.312669,-8.348551,5.794838,2.024712,9.425095,-1.952149,0.299009,-7.404121,-1.552335,-4.294864,-6.997826,0.156228,-4.477368,-5.606467,-4.159802,-2.558438,2.547056,-1.439176,1.928856,-3.706997,4.517310,2.755936,1.006248,-3.609235,-9.768708,1.104643,8.721819,9.066151,1.579541,6.220702,0.760511,-3.975405,3.829826,2.987398,-8.561017,6.277653,-5.230326,-2.136005,-2.694729,4.758113,7.423648,7.959142,-6.285461,8.151354,-8.492652,1.281956,-0.464549,-6.689863,6.622605,-8.153682,4.641093,5.730618,2.866513,5.208963,-1.911331,-2.720705,9.408705,-6.296948,-8.983862,-1.456455,-2.888115,-4.772165,7.612710,-7.080144,-1.619069,8.881898,-0.036931,6.958983,-5.524808,0.793888,-3.831142,6.659941,0.652730,0.514250,6.238006,-5.900821,6.583591,-6.905080,8.922460,7.405005,-1.310427,6.717806,4.489144,-5.927344,-4.286836,-7.861623,7.972365,-3.175269,0.996586,0.798911,9.743387,4.826853,-9.309755,-5.667255,-8.391007,-4.320578,-4.616156,-1.627958,-9.538213,8.106541,-1.584955,8.934221,7.897307,6.411862,7.237569,1.107783,-1.674821,-8.253972,7.503168,1.795941,-6.077381,-1.894596,1.494560,7.204125,0.838861,-0.460232,-1.796214,9.399843,-5.426434,3.187413,1.161550,-0.192131,4.264122,7.971486,9.063013,-4.101664,-0.196287,-3.287610,5.978572,4.008883,3.271640,2.576466,-2.072184,1.002067,4.823088,-8.714922,-4.699183,-9.266925,3.636689,-2.450397,-0.097240,5.609127,6.899981,8.002964,5.989630,4.854400,-1.668444,-4.685692,3.182827,2.880469,-1.226864,-6.617521,7.124726,-3.395432,-5.415284,9.844066,-3.451367,3.851242,9.934557,-7.339131,9.160196,4.084940,-8.628426,-2.187289,9.055010,-4.568592,-5.456042,-8.177585,-4.223359,-6.966362,3.552784,3.278200,-0.076312,5.043327,9.340689,-0.972976,8.626769,4.407711,-5.402055,-9.120320,5.225143,5.543925,2.365929,1.685289,8.999718,-6.804174,-3.989276,-0.729261,-4.592726,-9.395626,7.259227,-4.409013,-1.669696,6.830413,-4.992096,-3.513769,-4.091035,4.953786,-4.834092,8.378545,-7.623677,-7.379211,-5.157026,-7.745534,8.328175,-1.977862,0.883592,4.061535,-3.685778,-5.298578,-1.797356,4.766226,7.405398,-3.337772,3.111179,8.907268,2.324355,-2.136758,-1.759020,-0.019577,5.637694,-9.890335,-6.321766,-5.898909,-6.804126,3.316582,-0.487543,-9.856355,1.310016,5.009696,-2.120733,-3.621920,-5.394984,9.197952,6.359763,-1.397730,0.474504,-2.031774,7.283321,-8.755791,4.817998,-2.497153,-1.170698,3.365072,-1.533945,4.569399,2.001730,-7.897818,-4.460040,-2.988280,-1.352398,6.541980,-9.695947,6.925505,-0.748052,6.815232,2.567393,3.823760,-2.964706,3.108373,9.152963,-6.310424,-9.122358,2.903626,-3.337083,3.597763,-5.142540,-8.158335,-9.749794,-6.464281,-2.649136,-5.781665,-6.815872,6.532133,3.822321,1.642600,4.750618,8.393058,-8.745153,8.093678,0.466997,2.316081,3.602208,-7.771560,8.318913,-3.622461,-5.623612,4.234876,4.526664,-3.392414,6.326777,1.512029,9.996978,3.245254,3.381838,-1.629661,9.141978,4.561167,-4.753366,-0.116460,-1.230407,0.359414,9.777124,5.772500,7.589184,6.418917,8.824789,-5.228315,-2.323745,0.325641,-4.595901,-5.815812,6.023721,-9.398007,0.181705,-3.807310,6.610631,-5.620877,-0.946135,0.043186,8.000384,6.128736,-0.574008,4.500749,5.711444,-4.506502,6.406673,4.400386,-1.272388,-6.378714,-6.969016,-2.805968,-3.012736,-8.917363,-4.339509,-1.961498,3.836502,4.133604,2.976222,-2.497026,0.115925,-4.185359,0.036445,8.270694,7.041400,7.480764,-7.326242,-2.633528,-8.189020,-6.500217,-2.093005,1.026464,-7.339304,0.310326,4.806528,-9.217605,8.525781,9.461811,-6.898582,-3.743848,-8.859532,7.514053,6.828872,0.449224,-1.371252,9.896525,9.196489,-5.801421,6.257478,5.054560,6.964878,0.745620,7.882312,6.848182,9.782833,8.622556,0.577227,8.294963,-8.906478,8.552428,-0.727223,-2.179966,9.005712,7.723579,-5.682446,2.873686,-4.854206,-4.570486,-5.543070,2.132565,-5.546391,0.838371,3.849022,-3.903706,-0.960448,-0.282205,-2.128942,-8.311113,-9.492774,-1.939880,-2.426599,-7.871972,-7.598277,-6.375565,2.434639,9.975366,6.776967,3.285309,3.013327,-1.686051,7.450863,-8.257046,8.524744,9.694871,-7.456438,2.636414,-6.133067,0.313787,-8.356679,1.014155,5.992339,6.744851,5.987918,4.704282,2.104791,-0.919825,-7.093915,-7.144600,3.639757,9.349429,-0.915356,6.118595,0.626304,3.332179,-8.493739,4.205800,4.169546,-2.717009,2.278335,6.959476,-4.814249,-5.909801,-4.987400,-6.781183,-2.354306,4.242710,-1.423403,6.960849,6.231576,-4.359931,9.888923,6.476987,-5.239159,-3.474044,6.072914,-5.299155,6.244721,0.046830,-3.836230,-2.998699,7.328060,0.973877,-2.961608,2.985399,0.554707,9.860325,3.960347,-8.998758,0.982361,-3.651076,-2.620525,-2.765081,4.932266,-1.792318,6.104052,-7.374802,-2.899542,9.180096,5.230180,0.863885,-1.738605,9.935102,6.710284,6.281877,-3.357230,-7.279215,7.953713,4.896225,-3.824880,-6.015370,-6.511802,-3.143503,-6.849498,6.404599,5.988461,-3.239786,8.798992,6.365356,9.792973,5.203556,-6.169396,0.428753,-1.073255,-0.644525,-4.283206,6.755359,-8.891674,2.689276,9.228621,-5.688931,0.027883,-4.349448,-5.404606,-5.197737,-1.869022,-8.582913,3.570573,-2.263485,-8.047930,-1.440013,2.732438,6.993697,0.322074,-7.450953,8.031976,9.415595,-1.045235,6.646101,-8.244099,-3.229008,-0.194730,3.552581,-7.723984,8.481399,3.723848,5.740864,4.760529,-7.181454,-2.169707,6.814837,3.435342,-3.376803,-1.694244,-0.375987,4.514327,-4.656865,3.540827,3.978230,2.175841,-4.623832,-6.152084,-0.840121,-2.036800,9.693531,9.313534,-0.583700,0.934098,-0.792622,4.284748,-1.071544,-0.875097,-7.205202,5.635275,0.045009,-2.991268,0.464624,-7.374953,4.721895,-6.259908,9.832709,9.803324,-2.412236,-5.619582,4.783006,4.034579,1.199901,-2.994480,-7.413614,8.457825,-3.487923,1.427942,0.936448,4.251515,7.167357,4.068552,-9.165473,-0.995035,6.106615,1.919946,-1.845610,3.251400,-0.442741,4.199763,5.595413,7.432819,1.133415,3.650727,-1.943836,4.444741,-0.807518,-0.110360,2.139727,3.843612,7.787943,9.392989,4.613775,5.910354,-6.078997,-2.831162,-3.356222,-6.563358,5.364280,-0.671507,-5.909316,2.683007,-8.955272,0.483911,-4.603849,-6.358260,-0.206193,-9.718869,-3.211959,6.918023,-1.829135,-0.330693,6.159421,-5.913976,-4.912606,-1.290183,-7.048706,4.796194,6.443827,3.167341,9.634499,-0.372289,6.825098,-2.070432,-5.286626,5.223859,4.959088,9.044427,-1.468004,0.029035,-7.975978,3.250715,6.558980,1.315673,-1.239589,3.485894,3.464724,4.761612,-4.835378,-2.568408,7.847914,7.742732,-1.917123,-4.662433,6.527683,1.241541,6.096467,-0.956146,-5.635578,-8.810293,-3.236735,-0.693014,3.636512,4.621384,1.308088,-3.718539,5.007340,-6.175653,2.417649,-1.992608,-4.779520,-5.960807,-5.592944], dtype = "float64")#candidate|793|(1320,)|const|float64
const_794 = relay.const(9, dtype = "int8")#candidate|794|()|const|int8
call_792 = relay.TupleGetItem(func_600_call(relay.reshape(const_793.astype('float64'), [11, 8, 15]), relay.reshape(const_793.astype('float64'), [11, 8, 15]), relay.reshape(const_794.astype('int8'), []), ), 2)
call_795 = relay.TupleGetItem(func_605_call(relay.reshape(const_793.astype('float64'), [11, 8, 15]), relay.reshape(const_793.astype('float64'), [11, 8, 15]), relay.reshape(const_794.astype('int8'), []), ), 2)
func_536_call = mod.get_global_var('func_536')
func_541_call = mutated_mod.get_global_var('func_541')
const_798 = relay.const([[10,-8,1,6,-10,8,-5,7,2,9,6,-8,-5,-7,-6],[-6,-5,9,-6,6,3,-7,-6,-8,10,-8,3,7,6,3],[-1,10,3,-9,-8,2,1,-10,4,5,-7,10,-8,10,-1],[8,1,-9,9,3,5,7,-7,-2,6,4,-10,-5,-1,4],[7,-3,2,-5,2,-6,-5,2,1,2,-1,5,1,10,7],[2,-8,4,-9,-10,-9,7,-9,-6,2,2,-4,-3,-6,-7],[-8,9,-5,7,4,-8,-4,-6,3,5,-2,9,5,3,6],[4,-10,-2,-6,1,-6,2,4,-5,2,4,-9,1,4,5],[3,-4,4,8,-6,-9,-9,-2,-1,-2,7,6,-1,-1,-9],[5,-6,5,-6,10,-3,6,-2,-7,-7,5,-6,-1,-7,2],[-9,-10,-5,-4,9,4,-3,-3,1,9,10,-2,-6,-3,-7],[9,-1,8,-3,10,-6,-3,7,7,6,5,-1,-4,4,-8],[-2,5,-7,3,7,1,8,-4,1,-2,-7,-5,-6,3,-6],[-10,-9,4,-10,-5,10,2,-9,-2,8,-7,3,-3,-1,-8],[9,-5,-3,-6,6,1,7,-4,10,9,2,-4,10,-3,-6],[-7,-10,-7,3,-7,-5,7,-2,2,-6,9,-9,-2,-2,1],[5,5,2,10,5,4,-6,2,1,9,7,7,2,-6,-4],[2,-6,-7,-9,4,6,2,1,1,9,1,-9,1,-10,8],[5,5,9,2,1,-1,-5,9,8,8,-10,-5,-9,-2,7],[-3,2,-6,10,-8,-3,9,2,6,8,1,-4,10,-7,2],[-4,6,1,-6,9,5,3,-4,2,8,5,-1,-8,-2,-3],[8,-7,3,8,2,-5,3,-1,-4,-6,-4,-2,10,3,-4],[6,6,-10,-5,8,10,-4,-3,10,5,-10,5,-3,-3,-6],[-5,-2,-8,-9,3,-10,-3,3,-7,-5,-9,3,-8,-10,3],[9,2,6,-6,-5,-4,-9,9,-5,7,1,5,-1,-8,-6],[-8,-8,8,10,-1,-10,-10,-2,-5,7,6,-7,2,4,10],[3,-4,-8,-5,4,-5,-10,7,6,-10,-3,3,-5,-9,-6],[-8,-7,-8,-5,-5,-8,7,-5,-2,4,6,-6,7,-1,-2],[-5,6,5,9,6,2,6,1,-4,4,3,-7,-6,-2,-3],[4,7,2,-3,-3,-6,-2,-6,6,6,-8,-8,1,1,3],[-10,-2,8,-10,-6,1,-1,6,7,-5,-10,5,-10,-3,10],[5,-2,6,8,10,-2,-7,5,-10,3,-7,-2,2,7,-3],[1,6,4,5,1,-7,8,5,5,-6,-1,-3,5,7,3],[8,9,-9,-5,4,-4,8,4,7,-9,10,-6,-4,-8,-3],[-10,-7,3,1,-4,2,7,10,-3,3,-10,5,5,6,-10],[-6,-8,-9,-1,-8,5,-1,-2,-6,-7,-9,1,4,-3,9],[7,-4,-8,-7,5,-4,-5,-5,-5,2,-7,1,-6,3,-5],[-3,-10,9,-1,-9,-10,-9,5,4,4,-5,8,10,-3,1],[7,-10,2,5,8,2,-4,-4,6,2,-3,-2,5,5,4],[5,2,8,-7,-7,-8,2,9,-2,4,-4,3,8,-7,5],[8,7,-5,4,-10,6,10,-10,6,4,10,-6,4,-10,-8],[-6,-2,8,8,9,3,-7,-5,-1,-3,-8,-5,-3,-2,-1],[7,-9,-2,8,1,9,-5,8,-3,9,-6,-8,-5,9,5],[8,-1,1,-5,5,-8,-9,-1,3,6,2,2,2,-1,3],[-4,8,-9,9,9,8,-6,-4,-6,3,-10,-3,-4,-10,-7],[-1,-5,6,-9,7,-7,-9,6,2,-10,-3,1,-5,-2,-2],[-9,9,3,9,10,-1,-3,-2,4,10,-10,-4,-10,5,-3],[10,-9,7,6,-3,-2,-3,-7,-5,-10,4,-7,-10,7,-6],[2,4,8,-5,-7,-3,5,5,3,-2,4,-3,-6,7,-8],[-4,2,-4,-9,-7,7,9,-7,5,-6,-3,5,-3,-8,-2],[3,7,-8,-6,-9,-5,-2,-8,9,-1,10,-5,-9,-4,9],[3,6,7,-2,10,5,-10,2,-10,-1,5,-4,-8,1,9],[-2,1,-4,-1,-1,-10,8,7,-7,-10,7,-2,8,-3,-4],[8,-7,-3,7,-9,-4,-9,10,4,-3,10,10,9,3,-8],[4,-2,-4,2,-8,-4,-2,7,-8,-1,-7,-9,4,6,9],[4,-9,2,1,9,-5,-2,-3,-10,3,-2,-4,-7,8,-4],[7,-2,-4,4,-10,-5,-3,3,7,8,7,-10,10,9,-1],[9,-3,-8,5,4,-4,-10,7,4,-7,4,4,-6,1,6],[-10,-2,4,-4,2,4,-9,3,-6,-10,3,8,9,-6,1],[2,7,-8,6,1,10,-5,8,2,7,10,5,-7,-1,-5],[-5,6,5,-6,-6,10,-2,6,3,5,-2,-9,-2,3,3],[8,7,1,-7,-4,4,8,10,-6,-4,4,8,2,4,-5],[-3,5,6,3,-3,-6,-2,-2,2,7,1,-9,9,-10,7],[1,10,-2,-2,-2,4,1,-6,-10,1,2,3,2,5,6],[-9,5,-3,-8,4,1,9,5,6,-4,7,10,1,1,-6],[-9,-3,6,3,-10,-3,-6,2,-8,9,5,9,-5,7,-6],[4,-10,2,-5,-10,-2,4,5,-1,4,4,7,7,6,1],[-9,-7,-4,-4,4,3,-7,5,-5,-5,-8,10,-4,9,-1],[2,-7,-8,8,9,-8,-5,9,4,-6,-5,-8,2,-2,-2],[3,-4,10,1,-5,-9,5,5,4,10,-8,6,1,-8,9],[7,-3,-2,2,1,8,-10,4,8,7,-1,6,1,-5,10],[8,-6,8,-3,3,-10,6,5,9,1,3,1,9,-7,-10],[8,6,-8,-4,-9,-7,-10,-10,4,-10,5,6,5,5,-8],[10,-2,10,3,1,2,10,10,9,-1,-6,4,-10,7,-2],[-2,-1,-9,4,-6,3,-10,2,-2,1,-1,10,1,6,-7],[3,3,4,6,5,3,-1,-10,1,5,-7,-1,4,7,9],[10,-7,-7,-4,-1,6,8,4,-2,2,-9,6,6,-3,9],[10,6,-2,-8,-6,7,10,-9,3,-1,1,-4,1,8,-4],[10,8,-9,8,9,6,-6,-1,-1,6,-1,-4,-7,-4,1],[-4,10,-6,4,-6,-8,9,9,8,-8,3,-3,-2,-4,-5],[-4,5,-1,-5,-6,8,-5,7,10,-5,-2,-6,5,-5,-6],[-5,1,6,-2,-7,-4,-4,3,-3,9,-9,-6,5,-5,-2],[3,1,7,8,-10,10,1,3,7,6,5,6,10,-5,-4],[-8,-4,2,8,-5,-4,-4,-10,6,-4,5,8,3,5,-7],[-4,-5,-3,4,-7,-2,5,-4,5,-4,4,10,-3,4,-10],[-4,-3,5,-5,7,-9,3,-5,8,-10,-8,-4,-8,1,2],[10,-6,-6,-1,1,5,9,3,-6,3,-5,-10,-1,-5,-8],[-4,4,3,2,-1,2,-2,-3,-4,-7,-4,-1,-3,-1,-7],[-7,1,-2,1,8,4,7,10,2,-10,-4,3,-7,10,-5],[10,9,-3,-6,2,6,4,3,-5,10,5,-8,-1,-3,6],[7,9,-7,-6,5,-9,-5,6,6,4,5,-2,-8,-1,-4],[-8,-4,9,-9,6,-3,7,-5,8,4,-9,-1,-3,4,9],[-2,-8,-6,-8,2,-3,9,4,2,-9,-6,-7,-9,-8,-6],[-8,-6,5,-5,-10,-8,-1,2,-3,9,-1,10,2,10,-4],[-8,5,1,7,2,3,8,-7,1,-5,1,5,-5,5,-8],[-2,-1,10,6,8,-5,-7,4,3,3,-6,-5,-10,-10,8],[1,-4,-8,4,2,-3,2,-9,-4,-2,2,3,-10,10,7],[-10,1,-3,-8,4,-9,-8,6,5,-2,7,8,-3,-5,10],[4,-2,-4,3,-2,-6,3,1,-3,-9,5,1,8,-2,1],[-6,-4,8,-5,-1,-8,-7,-1,10,5,1,7,-5,-9,9],[1,-3,-6,-2,-3,-10,-10,-4,7,6,-3,-4,-2,5,-6],[-9,2,1,-2,10,3,-6,9,7,4,-8,2,-9,-2,6],[-1,-6,-7,-10,7,-6,-2,-7,-4,6,8,7,7,4,2],[-9,5,5,-2,10,-9,-4,-1,-9,-5,-3,9,3,-5,7],[-9,10,4,5,-4,-7,-3,1,2,-9,7,10,-9,3,-3],[3,9,-7,1,-8,1,8,-8,8,-1,9,-8,-5,5,2],[8,-2,-9,7,3,6,3,-7,-5,3,1,-5,2,-7,7],[4,5,2,5,5,-7,1,9,2,-3,1,8,5,7,6],[-1,9,8,-9,3,2,-7,1,-1,9,10,9,7,8,8],[-9,-6,-3,2,-9,8,-6,-4,-10,-1,-8,10,-1,-3,-2],[-2,-8,-1,-3,4,7,-1,6,1,-10,-6,7,8,-4,4],[-4,9,5,4,3,9,-10,5,8,4,10,8,8,3,1],[-10,-8,-6,10,-2,-7,-3,1,-5,-3,9,-8,1,7,10],[3,-2,10,5,-7,3,6,-3,3,8,-4,9,5,10,4],[-1,-9,-10,-10,-10,-10,1,8,-4,9,-5,10,6,4,9],[-5,4,3,6,-9,-10,-9,6,4,-8,-4,9,9,-1,-3],[-10,1,6,-10,-5,9,9,-6,-7,6,5,-10,-6,-10,-1],[-5,3,5,-10,-2,-3,10,-10,6,7,3,-4,6,2,-4],[1,2,-7,-3,-1,2,7,7,-6,-5,6,7,-10,9,9],[5,-5,3,-5,9,-1,-9,2,-6,-8,3,8,6,-1,4],[-8,-1,7,5,10,7,6,2,3,-6,8,6,7,5,-5],[-9,7,6,-4,5,8,7,-9,3,6,4,-9,9,-2,-6],[-5,-10,7,-8,10,8,7,-3,6,-10,-5,6,5,-2,2],[-4,6,-3,1,-5,7,10,-1,-4,-6,9,9,5,-1,-8],[4,-1,-5,3,-6,-8,4,-8,-8,-9,-7,6,-4,-7,-8],[7,7,4,2,8,6,10,-4,4,-3,6,1,-5,5,-7],[8,-4,-4,5,-6,4,10,3,-6,-6,7,-8,-6,-3,-6],[-1,-6,7,5,-8,6,-4,-9,10,3,-4,-8,1,7,4],[-4,-8,-1,-4,9,-9,3,-3,10,8,9,-6,-4,4,10],[-5,-2,7,-7,4,-3,1,6,-10,7,-2,10,7,4,5],[7,10,-2,7,-10,-3,3,10,-8,-8,8,3,-9,-2,-2],[-8,-7,-10,-9,-8,7,-3,7,-2,6,2,-1,2,7,-4],[10,-8,4,6,5,4,9,-4,3,-3,-7,2,2,-9,-5],[8,7,-2,1,6,-6,-10,10,-1,-2,-1,-9,-9,5,10],[1,7,3,2,-9,-2,1,-10,-9,-3,5,-2,-4,-5,-8],[-1,4,-10,-7,-1,-1,3,-6,-2,-4,-8,8,3,-10,3],[7,9,-9,-8,-1,5,5,-3,-1,-8,9,-5,-5,-9,9],[4,-5,7,2,-2,-8,5,5,4,7,2,-7,3,5,6],[-5,10,-3,-5,4,-8,-6,-4,4,-8,10,-7,7,9,-3],[6,5,-9,2,-3,-1,9,-3,8,-10,8,-6,-7,2,-5],[-10,4,-8,4,-7,6,-8,-3,5,8,-8,7,9,7,1],[8,-6,9,-5,1,1,-10,-2,10,6,5,4,10,-8,-9],[-2,2,-1,-9,7,-10,9,5,-3,-9,3,-5,-7,-4,-3]], dtype = "int8")#candidate|798|(143, 15)|const|int8
call_797 = relay.TupleGetItem(func_536_call(relay.reshape(call_792.astype('float32'), [4, 11, 16]), relay.reshape(call_792.astype('float32'), [4, 11, 16]), relay.reshape(const_794.astype('int8'), []), relay.reshape(const_798.astype('int8'), [2145, 1]), ), 0)
call_799 = relay.TupleGetItem(func_541_call(relay.reshape(call_792.astype('float32'), [4, 11, 16]), relay.reshape(call_792.astype('float32'), [4, 11, 16]), relay.reshape(const_794.astype('int8'), []), relay.reshape(const_798.astype('int8'), [2145, 1]), ), 0)
output = relay.Tuple([uop_774,call_792,const_793,const_794,call_797,const_798,])
output2 = relay.Tuple([uop_776,call_795,const_793,const_794,call_799,const_798,])
func_801 = relay.Function([], output)
mod['func_801'] = func_801
mod = relay.transform.InferType()(mod)
mutated_mod['func_801'] = func_801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_801_call = mutated_mod.get_global_var('func_801')
call_802 = func_801_call()
output = call_802
func_803 = relay.Function([], output)
mutated_mod['func_803'] = func_803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_952 = relay.var("var_952", dtype = "float32", shape = (8, 5, 1))#candidate|952|(8, 5, 1)|var|float32
uop_953 = relay.atan(var_952.astype('float32')) # shape=(8, 5, 1)
func_600_call = mod.get_global_var('func_600')
func_605_call = mutated_mod.get_global_var('func_605')
const_960 = relay.const([7.747204,6.341068,0.221786,-1.008239,1.298129,-7.448773,-1.577042,-8.916826,-0.656197,-4.148571,1.949628,-1.111444,8.208968,3.830067,-4.761385,8.325529,-0.716716,-7.386375,-2.415167,9.839235,-9.140582,1.062267,-9.602452,-6.819085,4.041037,-1.922765,8.185987,-5.216100,-2.890566,0.145215,5.455655,0.688890,-1.922340,6.287726,-8.805749,-6.109305,-5.904618,-2.608597,4.169999,2.857788,5.561319,-3.402508,-5.247502,-4.765497,-3.403919,0.679418,-5.465868,2.821910,5.514057,6.089238,2.576371,-6.828783,7.802347,-2.433775,-1.871500,8.571752,1.022872,-0.727569,-9.897432,5.688202,0.832984,-0.865923,3.794822,-3.573677,-7.144940,-6.495978,2.083453,1.019976,0.827343,-2.258725,6.536824,-3.297187,1.390113,-7.026294,4.637692,-5.656658,6.642079,-5.045226,-2.625138,8.780122,-3.963074,-5.224919,-8.600130,0.276760,8.613163,7.542826,2.160142,-2.032354,8.064095,8.789033,-3.021898,2.859004,-3.333334,-9.909776,-3.274860,-0.586112,6.388446,-9.404493,-0.250222,-3.693060,1.238687,6.052555,7.848844,4.497016,-0.305596,0.684351,-8.000844,-0.489942,-0.148564,3.847915,-0.331951,4.620966,-4.322499,-7.512540,3.161860,5.403953,-7.483010,-0.446029,-5.472568,-4.489089,-3.624386,9.416295,-3.269391,7.570551,-0.971036,5.944048,-7.338430,-9.663522,6.868049,-0.140631,4.662815,7.239831,-7.827252,5.991803,-5.265851,1.359910,2.264780,0.377855,6.566343,-1.024019,-8.130264,-5.938601,5.748227,5.653640,3.138754,3.870141,9.550196,0.140348,-2.163259,-7.288467,-6.553798,2.295556,-2.910038,-0.391301,-7.945144,3.789568,-3.926804,4.155080,5.752954,-4.967076,-5.649728,8.334219,1.919889,8.662022,-6.783436,-7.603682,-4.603096,-0.095825,-9.935079,-6.607694,-0.781057,3.471522,8.627816,-3.900547,-2.822489,-5.907427,-7.142935,-7.359438,-1.813826,-0.324133,-2.161101,3.656374,-2.711426,2.257518,-5.803171,7.405201,-4.617980,-5.287021,-2.132452,-3.293021,1.275281,0.374365,-3.753044,9.101534,-1.992475,0.623025,-3.423183,2.308907,0.925485,-1.641607,-4.923109,-4.638267,-6.766461,-9.602123,0.356261,2.542904,3.552312,-4.547058,8.813560,-3.893925,1.250719,-3.540374,7.415350,3.802224,-2.946579,-8.758835,0.620164,0.920045,8.643958,-2.799274,-0.702812,-9.328739,1.372708,-7.352056,-7.056781,-6.548678,-7.604728,-1.749711,-8.196178,-2.704490,2.558839,6.662408,3.223060,-4.300677,-1.553917,4.250918,4.621292,7.582766,2.305675,3.370389,-5.210146,9.162857,-5.288435,-4.454579,5.445457,6.128021,-9.488087,-6.009222,-6.380312,-7.752488,3.355624,4.400819,1.713131,2.069564,-8.220520,0.043203,-7.416879,-9.393011,-1.914902,8.941810,5.449959,-8.625690,2.870745,-2.257223,6.226167,0.232218,-3.285556,5.056891,6.128146,-5.623091,6.202547,-8.014798,7.610534,-9.412028,-0.404009,5.129596,0.060263,4.863657,-7.422932,-8.401716,-6.877727,3.674397,-5.470071,4.825885,6.466710,-2.825759,4.505428,6.691386,2.423098,-7.183352,5.979269,1.482042,2.861331,-9.714362,-8.115276,2.294469,-8.428034,-3.608534,-5.841747,-2.058679,3.015842,-6.923392,1.936868,3.877835,-6.442922,-2.667764,-0.561422,-5.726062,-3.613431,4.565828,3.553733,-9.989880,0.960905,-8.514777,-5.837425,-3.237942,1.605802,-8.610390,-1.941846,6.521430,1.009187,-1.925642,-1.777302,9.980207,8.273293,9.539938,5.034852,-2.546559,-7.329865,-3.145915,9.129343,5.929758,-7.844810,-9.680894,3.022047,1.884711,6.348701,-1.121231,-7.011115,8.036679,6.911710,-9.938057,-3.235464,9.817733,9.761149,9.284128,-7.132626,-7.197893,-4.099696,3.245568,-2.462431,-1.374313,1.802917,8.251724,-8.200923,4.194288,-3.772625,-0.883265,7.662825,9.777325,-4.320878,3.753372,5.803023,0.625027,-9.239748,-8.137949,5.897475,2.314739,4.257732,-6.028565,9.066330,1.766431,8.987745,-3.976205,-0.361933,9.601671,-8.955388,6.219892,-2.504413,1.397314,-3.172464,-7.565035,-0.034449,-6.689275,-5.466072,8.606035,-4.373966,4.844984,-0.932375,-0.857097,-3.000331,3.038310,2.134764,-7.003989,7.751534,-2.911603,7.131376,8.761818,-6.849748,-0.400611,-1.269388,-7.269793,-1.428063,-8.449269,5.299590,4.413915,6.419439,-3.237296,-0.753440,-4.325349,-3.449100,8.209194,4.477927,3.838472,-1.125063,8.085148,7.964855,8.204842,5.048905,1.306639,4.581172,-9.105792,6.132388,9.935760,-7.531612,-9.343294,-8.441584,-7.509141,-2.957026,-4.029592,1.708746,-6.371045,1.879634,5.900983,1.144208,-2.454434,7.439235,7.028525,1.664896,-0.050038,3.405873,7.489455,-8.613460,7.817445,3.436365,7.664130,7.622747,-7.503767,-9.702623,-7.350357,-0.455536,-9.448651,6.948791,-8.824419,-2.493410,-8.363167,8.709837,4.538278,-9.184623,1.877822,-8.485834,-5.215760,-2.203144,6.010003,-2.064241,-8.533090,-1.281720,5.540090,9.625224,-6.791028,-3.464253,4.002506,-6.002659,-0.171481,9.614740,8.601684,-8.107846,-3.374653,-6.341522,7.989820,6.427423,0.719328,-3.927861,1.597087,-0.048550,9.758930,7.335095,3.432317,-5.006920,-5.806402,0.203993,9.635677,9.202742,-0.172534,4.718578,2.559604,5.387885,-7.540685,0.022804,5.967486,-7.572265,-2.641509,1.979979,3.549943,2.016666,-1.606254,6.078631,7.982347,2.415542,-4.428688,3.026632,7.880778,-1.217152,2.773210,0.932284,-1.990653,3.369428,9.935431,-6.139319,-9.357291,-8.177807,-7.311504,1.153835,1.558484,5.276399,6.378273,4.548030,9.836479,3.222148,7.288947,-4.959820,-1.755798,-3.326124,-2.724478,-7.662771,7.536505,3.379648,5.197910,4.229780,7.428216,-6.974633,2.422348,3.159159,-3.850820,9.107361,-7.878151,7.769505,-2.089889,-2.384537,-2.622896,3.329700,-3.131831,6.965790,7.978691,-2.379709,8.283186,-3.221611,-3.719150,8.399121,-7.938578,-0.206709,-4.301874,6.474008,1.795341,-8.157658,-1.541957,6.739745,-9.942704,-0.304650,7.681906,3.129648,-0.021834,-3.222260,7.841703,7.404171,-4.790093,-9.712289,8.050436,2.560469,-4.554158,-0.201271,-9.852543,0.167167,-3.661271,-2.922465,-3.930736,-9.331857,3.728656,0.415476,-9.267779,-2.594510,-9.978183,-5.145190,-7.539065,-6.745802,2.988433,-8.070566,8.453111,-4.419993,9.913840,2.343990,-5.620825,-5.318887,-8.328157,6.024294,-9.144962,-1.240343,-8.723896,-9.813888,-4.012103,7.639000,2.958174,6.115368,0.556447,-6.635616,3.692937,-9.941113,9.850898,2.398385,-0.824164,6.960286,9.161793,9.203397,-4.689304,-2.376438,6.070765,-7.134634,2.978838,5.040598,2.018791,-8.663234,1.925532,0.309962,4.992484,4.129069,6.462793,1.566431,-8.939601,-4.931523,-3.191570,9.779763,5.876574,5.139388,-6.602680,1.199436,-1.337814,-4.126609,7.136929,4.721814,-2.964247,-0.025069,8.979680,-7.323213,9.589940,-5.983628,-1.686693,1.823873,1.965643,-0.905665,2.572437,2.140995,0.698531,1.851279,0.649080,-9.336057,5.593089,3.797828,-4.532771,-6.957026,7.826956,4.678359,4.045859,9.884472,8.055566,-5.366577,3.592828,8.740941,9.818211,4.568348,3.188856,-5.429679,0.150541,0.121584,-6.745022,9.973327,-7.035173,0.569505,3.713235,-4.128745,-1.313829,2.182327,-9.454143,7.818751,3.372699,3.750276,-4.806285,-9.319545,5.352981,3.150268,8.897515,7.630517,4.986784,6.815762,9.155956,-2.257669,-5.079152,-1.838497,-1.870333,-3.952542,-2.810723,-0.934166,-0.476335,-9.397036,-9.686890,3.044644,-8.639106,2.620239,4.492676,-6.721325,-8.290055,-4.070153,-2.062305,1.227224,-3.566301,1.751224,9.533290,8.930631,-9.420737,-6.725836,3.275626,-1.751063,-8.327753,-8.753454,4.944864,1.414669,5.255207,-3.040109,-2.761283,-6.244515,-4.853626,2.731761,1.668366,6.734480,6.944877,-5.800485,4.595122,-8.912396,-3.390101,5.274892,-7.358585,9.407235,-4.484729,7.590646,7.112931,-7.843053,2.887101,-7.035905,-2.414895,-7.058589,4.621314,8.381944,-7.454351,-2.165869,-8.222571,-9.176138,-0.938550,-3.950851,7.148929,7.744142,7.431332,-4.195143,-2.683690,5.861578,-9.767469,-7.371550,-5.961603,-9.835474,6.520810,9.443166,-5.588158,-8.166486,1.562447,-1.104367,8.237577,0.817715,8.330678,7.730970,-8.817342,-1.400975,5.327722,-1.864788,-3.602838,-1.825916,-0.492165,6.985435,7.731666,9.175560,-0.609269,9.006327,-6.107860,-8.103929,5.952912,2.129865,-7.559247,-5.647611,-0.032339,9.792481,-2.586567,-1.708098,6.237661,2.198238,-2.904281,7.556615,-1.139606,-8.541574,-0.929552,-6.249706,-9.317140,5.048712,-8.456764,-9.702195,8.879825,1.486866,5.805490,-8.119575,-5.361143,5.711819,-7.590220,1.783049,-4.870105,5.206807,8.950133,-7.155193,2.492412,-4.706405,2.462126,-4.304259,6.410911,-4.355598,-2.546655,3.879667,9.465151,1.077694,-3.628142,-2.091490,-9.313186,2.371529,-8.471982,3.518977,9.366925,6.352507,0.079210,1.986550,5.630541,0.256987,-9.985892,-4.373903,-8.366920,-1.039905,3.752973,4.319922,-2.021136,7.720650,-0.141340,8.943720,-5.963540,-8.300711,-9.218478,-5.333947,-3.137296,4.727128,7.395798,-6.344263,2.984786,-1.887031,0.427304,-6.038915,-7.088031,-9.993479,8.604391,-2.825379,-5.611019,5.902579,9.576537,9.190797,7.974821,-5.935303,-2.094506,-2.406670,0.008512,-4.048066,-9.257287,6.999022,-0.533755,8.290158,4.580347,-3.768838,9.066743,-0.207717,5.393794,-9.624260,6.072000,3.499352,7.560305,5.205965,-5.905765,2.503032,4.769172,5.660433,6.722479,3.270099,1.731402,-9.639598,2.415643,6.217176,-3.841512,4.892015,-4.605683,-5.856843,0.179567,9.751242,7.846475,-2.889429,3.607708,2.958689,8.308127,5.200533,-2.245982,5.918135,-2.012983,-9.233573,-8.941723,-8.485873,1.189268,-1.835776,3.320364,-3.624082,-5.552433,7.134343,2.174341,-7.151199,2.173352,4.772346,-8.119842,9.944034,3.177356,6.874973,1.587731,-9.711274,-4.208544,4.419374,-9.613774,9.218596,9.672032,-9.997743,5.438719,0.242991,-7.538612,-0.268590,3.000642,-0.365961,1.400466,-2.513572,5.640539,7.536526,7.055801,6.623852,2.949458,-5.810928,3.225771,7.560764,-1.670276,4.366759,2.910374,6.693195,8.252323,7.067265,3.132034,-1.792990,-6.471236,6.810402,-2.440582,-4.948556,5.435256,-6.478446,2.853181,4.992921,-8.856403,0.395509,-5.508081,-2.247816,-1.234097,-0.855742,1.107046,-9.142893,9.198155,3.983889,2.745785,1.781907,5.599747,5.089861,1.600858,-7.322062,-6.123625,7.936692,-8.567627,-2.415342,7.631682,-6.230248,7.151394,-2.260914,-9.390870,7.092007,3.101533,-7.443497,-3.340953,-0.679956,-2.589303,-9.855127,-6.048141,7.637203,2.645305,8.387434,9.323772,-6.404520,-5.878369,3.389926,-7.976273,-3.106387,1.334725,-8.774661,0.256412,9.690280,3.186103,-4.539898,5.232615,-6.488611,1.346228,9.106933,-7.188926,-7.802275,-1.298331,3.479720,-0.152201,5.708446,9.619846,3.329352,-2.611675,-7.007360,-3.712878,5.828625,7.004953,2.928531,8.425554,9.040499,-5.133035,-1.768748,8.043041,3.672029,-1.733893,1.314547,2.780874,-4.247146,8.471682,0.512951,1.646729,5.533248,5.592016,0.163512,8.791071,-3.521457,-4.414703,-3.267803,-6.453569,2.984912,-3.732177,-7.903682,-5.913352,8.116417,-7.614551,8.338114,4.173079,-5.373954,4.573376,2.426192,-6.036831,-0.755369,9.213404,-2.241137,8.588448,-0.688489,-5.470962,4.404060,0.268281,-8.370330,9.618082,6.706822,-0.666212,9.089658,3.161996,-3.090535,-4.165580,7.274482,8.330743,-9.932748,2.641710,0.628018,0.960339,-0.373549,7.769998,-6.381904,4.721877,-6.225518,7.808885,1.684822,-2.491357,-3.750404,9.681326,-9.751451,4.773084,5.760819,0.884506,-7.882983,2.842869,2.993353,2.539026,5.533154,4.673464,-9.894950,-8.170645,-9.272146,9.671058,7.256515,-9.320061,-0.619351,-9.004860,-4.747238,-5.155632,5.414660,-5.369549,-6.700262,-3.843427,-3.938618,7.454687,5.890226,-5.472467,2.894595,-5.034547,-3.758533,-8.873597,8.259376,-4.049161,1.641315,-2.307390,-0.439745,7.136341,1.747439,7.046053,-7.565385,-7.183286,-9.600118,7.301263,1.287161,-0.287276,-0.112667,-6.675165,-4.092327,1.330152,8.082747,-8.470048,-6.396852,-8.215548,7.004617,0.944300,2.858222,6.771494,3.289314,0.021066,6.663104,-9.390124,-4.986581,4.306375,-8.871347,-7.685867,-7.798780,8.003223,9.648851,-0.917498,0.291532,-8.006888,-1.606614,-2.422298,-1.357432,-3.035112,-6.722979,8.655912,2.524201,0.464948,9.952616,6.358282,-8.445701,6.250284,-2.156426,-7.092276,3.312979,-6.028739,7.337530,7.575695,-4.268589,5.512244,2.194308,-5.941963,1.495089,-9.829913,6.165560,-5.571414,-3.312752,5.301859,-7.816275,0.582866,-3.688872,1.639950,-6.070124,5.656487,-4.881005,4.514148,5.682001,-8.382922,5.962626,-2.478807,-7.836443,-6.934859,-0.732206,9.612927,-4.487325,-5.422557,1.201843,-1.336500,4.528383,-0.750279,-7.289842,2.302952,3.928936,-8.721648,-3.140174,-3.127627,5.189755,5.399009,-0.295193,-8.423142,2.316857,-2.817009,-7.911573,4.034489,-1.742731,6.471591,7.048156,0.047630,-3.574382,-9.253053,-5.926094,9.412906,8.808629,0.527212,-5.323047,-1.510078,-3.724497,-0.675317,7.188353,-6.481213,0.639777,-6.178389,-8.832919,-7.315585,0.126175,1.204336,0.154579,-3.034630,-1.136415,-8.967342,4.972028,-8.941929,5.752637,8.658416,-2.675122,7.884885,9.260476,4.886922,5.486762,9.832368,-8.102568,-4.780803,6.504700,-9.931756,-6.775632,-7.251403,-9.755116,9.228479,3.562814,-3.875658,1.902572,-0.497036,-4.496526,-3.678768,5.849838,-3.197036,3.498023,5.433099,1.385227,-5.646434,-6.084333,-0.376544,0.631098,7.132116,-0.425022,4.431910,4.792622,-5.818648,5.101389,8.292743], dtype = "float64")#candidate|960|(1320,)|const|float64
var_961 = relay.var("var_961", dtype = "int8", shape = ())#candidate|961|()|var|int8
call_959 = relay.TupleGetItem(func_600_call(relay.reshape(const_960.astype('float64'), [11, 8, 15]), relay.reshape(const_960.astype('float64'), [11, 8, 15]), relay.reshape(var_961.astype('int8'), []), ), 1)
call_962 = relay.TupleGetItem(func_605_call(relay.reshape(const_960.astype('float64'), [11, 8, 15]), relay.reshape(const_960.astype('float64'), [11, 8, 15]), relay.reshape(var_961.astype('int8'), []), ), 1)
uop_963 = relay.asinh(uop_953.astype('float64')) # shape=(8, 5, 1)
bop_971 = relay.add(uop_963.astype('int8'), var_961.astype('int8')) # shape=(8, 5, 1)
bop_974 = relay.equal(uop_963.astype('bool'), relay.reshape(var_952.astype('bool'), relay.shape_of(uop_963))) # shape=(8, 5, 1)
func_600_call = mod.get_global_var('func_600')
func_605_call = mutated_mod.get_global_var('func_605')
call_981 = relay.TupleGetItem(func_600_call(relay.reshape(const_960.astype('float64'), [11, 8, 15]), relay.reshape(const_960.astype('float64'), [11, 8, 15]), relay.reshape(var_961.astype('int8'), []), ), 2)
call_982 = relay.TupleGetItem(func_605_call(relay.reshape(const_960.astype('float64'), [11, 8, 15]), relay.reshape(const_960.astype('float64'), [11, 8, 15]), relay.reshape(var_961.astype('int8'), []), ), 2)
output = relay.Tuple([call_959,const_960,bop_971,bop_974,call_981,])
output2 = relay.Tuple([call_962,const_960,bop_971,bop_974,call_982,])
func_983 = relay.Function([var_952,var_961,], output)
mod['func_983'] = func_983
mod = relay.transform.InferType()(mod)
mutated_mod['func_983'] = func_983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_983_call = mutated_mod.get_global_var('func_983')
var_985 = relay.var("var_985", dtype = "float32", shape = (8, 5, 1))#candidate|985|(8, 5, 1)|var|float32
var_986 = relay.var("var_986", dtype = "int8", shape = ())#candidate|986|()|var|int8
call_984 = func_983_call(var_985,var_986,)
output = call_984
func_987 = relay.Function([var_985,var_986,], output)
mutated_mod['func_987'] = func_987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_1038 = func_759_call()
call_1039 = func_759_call()
uop_1045 = relay.cos(call_1038.astype('float64')) # shape=(10, 13, 11)
uop_1047 = relay.cos(call_1039.astype('float64')) # shape=(10, 13, 11)
func_983_call = mod.get_global_var('func_983')
func_987_call = mutated_mod.get_global_var('func_987')
const_1051 = relay.const([[-9.401892],[-3.515308],[-0.645253],[8.214631],[4.105807],[-9.354052],[-7.857155],[0.319121],[6.649469],[-9.722172],[-0.418391],[9.294597],[6.266785],[9.987176],[6.728832],[2.260189],[-5.526892],[-6.513555],[4.266590],[9.444889],[-6.081799],[-3.036317],[-9.495989],[-4.118511],[2.276204],[6.542692],[0.863466],[4.169827],[1.068865],[1.696427],[9.467655],[-1.505821],[-6.186913],[-3.140597],[6.800021],[5.317511],[4.904202],[-8.988047],[4.512310],[-3.727218]], dtype = "float32")#candidate|1051|(40, 1)|const|float32
const_1052 = relay.const(-4, dtype = "int8")#candidate|1052|()|const|int8
call_1050 = relay.TupleGetItem(func_983_call(relay.reshape(const_1051.astype('float32'), [8, 5, 1]), relay.reshape(const_1052.astype('int8'), []), ), 3)
call_1053 = relay.TupleGetItem(func_987_call(relay.reshape(const_1051.astype('float32'), [8, 5, 1]), relay.reshape(const_1052.astype('int8'), []), ), 3)
output = relay.Tuple([uop_1045,call_1050,const_1051,const_1052,])
output2 = relay.Tuple([uop_1047,call_1053,const_1051,const_1052,])
func_1055 = relay.Function([], output)
mod['func_1055'] = func_1055
mod = relay.transform.InferType()(mod)
output = func_1055()
func_1056 = relay.Function([], output)
mutated_mod['func_1056'] = func_1056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_1057 = func_759_call()
call_1058 = func_759_call()
func_983_call = mod.get_global_var('func_983')
func_987_call = mutated_mod.get_global_var('func_987')
var_1069 = relay.var("var_1069", dtype = "float32", shape = (40,))#candidate|1069|(40,)|var|float32
const_1070 = relay.const(-2, dtype = "int8")#candidate|1070|()|const|int8
call_1068 = relay.TupleGetItem(func_983_call(relay.reshape(var_1069.astype('float32'), [8, 5, 1]), relay.reshape(const_1070.astype('int8'), []), ), 0)
call_1071 = relay.TupleGetItem(func_987_call(relay.reshape(var_1069.astype('float32'), [8, 5, 1]), relay.reshape(const_1070.astype('int8'), []), ), 0)
var_1072 = relay.var("var_1072", dtype = "bool", shape = (15, 11, 13))#candidate|1072|(15, 11, 13)|var|bool
bop_1073 = relay.greater(call_1068.astype('bool'), relay.reshape(var_1072.astype('bool'), relay.shape_of(call_1068))) # shape=(15, 11, 13)
bop_1076 = relay.greater(call_1071.astype('bool'), relay.reshape(var_1072.astype('bool'), relay.shape_of(call_1071))) # shape=(15, 11, 13)
output = relay.Tuple([call_1057,var_1069,const_1070,bop_1073,])
output2 = relay.Tuple([call_1058,var_1069,const_1070,bop_1076,])
func_1088 = relay.Function([var_1069,var_1072,], output)
mod['func_1088'] = func_1088
mod = relay.transform.InferType()(mod)
mutated_mod['func_1088'] = func_1088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1088_call = mutated_mod.get_global_var('func_1088')
var_1090 = relay.var("var_1090", dtype = "float32", shape = (40,))#candidate|1090|(40,)|var|float32
var_1091 = relay.var("var_1091", dtype = "bool", shape = (15, 11, 13))#candidate|1091|(15, 11, 13)|var|bool
call_1089 = func_1088_call(var_1090,var_1091,)
output = call_1089
func_1092 = relay.Function([var_1090,var_1091,], output)
mutated_mod['func_1092'] = func_1092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_1165 = func_759_call()
call_1166 = func_759_call()
output = relay.Tuple([call_1165,])
output2 = relay.Tuple([call_1166,])
func_1169 = relay.Function([], output)
mod['func_1169'] = func_1169
mod = relay.transform.InferType()(mod)
output = func_1169()
func_1170 = relay.Function([], output)
mutated_mod['func_1170'] = func_1170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
call_1181 = relay.TupleGetItem(func_801_call(), 4)
call_1182 = relay.TupleGetItem(func_803_call(), 4)
output = relay.Tuple([call_1181,])
output2 = relay.Tuple([call_1182,])
func_1201 = relay.Function([], output)
mod['func_1201'] = func_1201
mod = relay.transform.InferType()(mod)
mutated_mod['func_1201'] = func_1201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mutated_mod.get_global_var('func_1201')
call_1202 = func_1201_call()
output = call_1202
func_1203 = relay.Function([], output)
mutated_mod['func_1203'] = func_1203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
call_1216 = relay.TupleGetItem(func_801_call(), 2)
call_1217 = relay.TupleGetItem(func_803_call(), 2)
output = call_1216
output2 = call_1217
func_1235 = relay.Function([], output)
mod['func_1235'] = func_1235
mod = relay.transform.InferType()(mod)
mutated_mod['func_1235'] = func_1235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mutated_mod.get_global_var('func_1235')
call_1236 = func_1235_call()
output = call_1236
func_1237 = relay.Function([], output)
mutated_mod['func_1237'] = func_1237
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1262 = relay.var("var_1262", dtype = "float64", shape = (10, 16, 8))#candidate|1262|(10, 16, 8)|var|float64
uop_1263 = relay.log2(var_1262.astype('float64')) # shape=(10, 16, 8)
func_148_call = mod.get_global_var('func_148')
func_151_call = mutated_mod.get_global_var('func_151')
var_1280 = relay.var("var_1280", dtype = "int8", shape = ())#candidate|1280|()|var|int8
const_1281 = relay.const([-10,-5,-4,-2,5,-5,7,3,8,-5,10,1,7,-10,7,-3,6,7,-2,10,7,6,-5,-4,-8,3,4,-1,6,-8,-5,-9,-7,-5,-7,8,-2,10,1,2,2,-7,-1,-7,-4,-9,-6,-3,7,3,3,-10,4,-4,-3,-6,4,-1,-4,4,-5,-8,-5,5,-9,6,8,8,-5,8,-9,-2,8,9,-2,-9,-10,-8,-7,5,-9,-7,8,-10,-8,-2,3,-9,7,-4,-5,-6,1,9,8,4,-6,6,-8,10,7,2,-6,-2,3,2,8,-2,-5,-8,5,-2,-5,-7,-7,1,-9,-7,-4,-7,-6,4,10,-4,4,-8,4,-2,-8,-3,7,2,-7,-10,9,-7,-8,-8,6,5,-2,1,-3,-6,-3,8,5,6,1,2,-3,3,-9,-2,-3,-4,-10,-4,9,3,-10,-2,3,8,3,-3,10,-10,9,5,8,8,6,10,1,-9,-8,-8,10,6,8,2,5,9,5,-5,-5,3,-2,-9,8,-6,1,-7,1,-4,3,9,9,2,-3,-7,10,10,-2,-7,-4,-7,6,-6,9,8,-10,-2,6,-1,2,5,-5,-6,-1,7,5,-2,10,-9,-10,1,-3,-8,-8,8,-4,-10,8,-6,-8,-6,-7,-5,8,3,1,9,8,7,-4,-6,7,-7,-1,-6,6,-3,2,-9,1,10,8,10,-5,-4,9,7,-7,3,-1,-6,-2,-1,6,-7,-2,9,-4,-9,-3,10,-4,-9,5,-8,10,-3,-4,9,4,5,2,-7,-2,-7,-1,8,-6,-6,-7,-7,-8,-1,5,-2,-7,7,10,8,-2,8,6,9,-1,2,9,8,10,-2,3,-5,1,-2,6,5,-8,1,9,3,7,1,-5,-7,-10,1,3,4,8,6,-7,-3,-4,-7,6,-4,-7,9,3,8,-5,7,-5,-3,-6,-10,-2,5,7,10,4,-8,-8,-5,-5,6,-2,-9,3,-1,-2,1,-3,-9,-2,8,2,9,3,3,-6,7,2,-6,-9,-4,-9,-5,5,5,-5,-3,6,-9,5,6,-2,3,10,-9,-8,10,-9,-10,-10,-2,-7,-2,-7,6,6,7,-7,-2,-10,8,3,5,-2,8,9,5,-5,3,-1,-5,-2,-4,3,-8,6,-8,3,-3,-8,4,-1,7,9,7,10,-6,-4,-1,-6,-9,4,-3,1,-1,9,8,6,5,7,7,5,10,-6,6,10,6,3,1,7,4,-7,7,10,-3,7,-4,3,-2,7,-1,-5,2,-6,3,5,1,-2,9,2,10,-10,-2,10,-2,-3,-3,7,6,8,-7,7,-9,8,-2,10,10,6,-4,7,5,-8,6,-4,9,2,-9,5,7,-5,-4,10,-4,-9,7,4,-3,10,8,-2,10,-4,-2,-6,-4,9,-6,5,7,10,-7,-6,7,-10,4,3,-3,-2,7,3,10,1,-10,8,10,5,-2,-8,9,-7,7,8,6,6,-9,-7,10,7,-6,-1,-2,-2,7,7,-5,10,4,-5,-9,6,-9,-9,2,-10,10,5,-8,-6,6,-3,-6,6,-3,2,9,4,-2,-6,10,5,9,-1,6,4,-1,-6,3,8,-10,-10,8,-6,8,7,9,-7,1,-5,-5,2,7,-4,-7,-6,5,-9,-1,-5,8,-8,-5,5,-3,4,1,-6,3,1,-4,-10,-5,2,-3,-7,-9,8,-10,-10,7,-4,2,-9,10,7,-6,-3,-4,-7,1,8,8,4,2,4,-9,-8,-6,6,-4,2,-7,-1,1,10,3,-4,5,-1,-3,4,3,3,-8,7,-3,4,-7,3,-2,-10,10,-7,3,1,3,7,9,7,-10,-1,-5,-5,9,-10,10,7,-5,6,-2,-1,-6,3,10,-5,4,5,1,10,9,-3,10,-10,2,-1,5,-9,2,-6,-2,5,9,3,-10,-1,3,-8,2,9,4,-8,4,9,1,-8,-8,-1,3,-8,9,3,-5,-6,-9,-3,-5,-1,2,6,-5,8,-9,2,-5,6,4,-5,-10,-6,-5,1,1,2,-2,-9,-5,4,-8,-8,9,-4,-3,1,-1,2,7,-10,5,-4,-10,-8,1,-3,-8,-9,-6,9,-3,3,-9,-2,8,9,-1,4,5,10,-2,3,3,7,7,9,8,4,8,-6,-5,2,7,1,6,7,4,9,6,-7,4,2,9,-1,-1,3,-3,6,-1,-1,-8,-6,-2,2,-1,-10,-6,-6,8,1,-6,7,-1,7,-10,10,1,-10,3,1,-10,8,1,10,3,1,8,-7,9,-1,-6,-6,-9,10,-8,-5,-1,-6,-8,4,-10,1,10,-6,-5,7,8,-10,10,6,-2,8,-5,-6,1,-6,-2,8,6,3,3,-3,-5,-7,-3,-5,-5,6,5,2,-1,-6,5,7,10,-1,1,-3,6,-1,2,-2,7,6,2,-8,6,10,-8,1,6,-2,-7,-1,-2,2,8,-10,3,-7,-3,2,8,1,6,7,-5,10,3,-2,6,8,7,-9,3,-9,-2,6,-10,8,-8,-1,4,-4,3,-2,2,-2,-10,-1,-8,1,-1,10,5,-1,-2,5,-2,-3,-7,-3,-4,7,-6,9,1,2,9,5,-9,-9,9,-7,5,7,4,10,-4,4,-9,4,4,-4,-9,9,5,8,-1,6,-8,7,-10,-10,6,-6,6,5,-5,5,9,-1,3,10,-8,-10,-7,8,6,4,1,-8,-10,-9,3,-1,9,9,-5,5,-5,-10,6,2,8,-5,-5,-8,-8,-2,-4,-3,6,6,-1,7,-8,8,6,5,5,-3,-4,7,-9,-1,1,5,-8,-1,1,-4,-4,4,-4,2,-10,-2,-7,6,-10,-8,-3,-10,-3,9,-8,7,-7,2,2,1,-10,-8,-3,-2,9,6,2,-2,-9,-2,-4,-9,-2,10,-4,5,5,-10,8,-3,-9,-1,-7,7,-4,2,-10,8,-1,-5,1,-10,5,-5,9,2,-7,10,-5,-1,-8,6,-6,-1,5,4,7,-2,-4,-5,-9,1,-9,-1,10,3,4,9,6,-9,-5,8,-8,4,1,5,8,5,8,2,-7,9,6,3,5,6,-6,-2,7,8,-9,8,-10,-5,-9,10,3,9,-5,-5,4,-2,6,-7,-2,-2,10,8,-5,10,-1,-1,-10,-8,-3,-5,6,7,3,-6,-1,-8,10,-10,-1,10,1,-8,4,-5,-1,-3,-10,-9,-6,-10,5,7,5,2,-8,-10,4,1,6,-4,-6,3,9,1,-9,4,10,-1,9,-3,-4,5,2,5,-1,6,5,-5,1,2,8,6,-7,5,8,2,-2,1,4,2,4,5,7,-6,6,2,3,-2,-5,-8,-6,7,1,3,-6,3,5,1,-7,-2,-4,9,-2,-2,9,-2,-4,4,-8,3,2,-6,-5,8,-4,7,7,-9,-6,-8,3,-9,-10,2,-9,-2,10,-5,4,9,4,-8,-1,-1,-8,-3,10,5,4,-8,2,-4,-7,-1,2,9,-7,8,3,-6,-8,-1,-10,8,6,9,-5,4,9,3,5,-7,10,-10,-5,-4,-5,1,5,-1,5,-1,-10,2,-10,3,8,8,7,9,-4,5,9,-5,5,-5,6,1,-3,-7,10,8,10,-4,-6,9,7,9,1,-2,10,9,5,1,-4,1,-8,10,7,-5,6,-2,9,10,-5,-6,-10,-2,4,-1,2,10,2,-8,-3,-3,8,-3,7,4,-6,9,-5,10,-4,10,4,-8,2,-7,-10,6,-6,-4,4,6,-10,7,8,9,-2,-10,8,5,3,-7,-4,10,1,4,-3,7,-7,-3,6,7,-10,4,-4,-10,-3,-7,-9,1,-2,-7,-7,-10,-3,-7,4,6,-10,4,9,10,-10,-1,5,-10,6,2,6,-8,-3,-7,-1,-1,-3,-7,-8,6,-4,-6,10,-4,5,-10,5,1,2,-7,1,6,-10,4,-7,-5,-9,8,10,6,9,8,3,-4,-5,8,6,10,6,-5,6,2,2,5,-5,9,6,-7,-7,3,-9,-10,6,2,-3,5,-8,7,10,-4,-10,6,-2,-6,-2,-1,-2,8,2,-2,-9,-6,-7,-9,-2,9,-5,9,-7,-6,-4,2,9,-7,-1,6,7,9,5,-10,-10,-1,5,-2,-5,-3,-5,-8,-6,7,-4,-9,7,7,-5,-8,-8,-10,1,5,-10,6,5,4,-8,1,4,-7,10,-10,2,2,9,3,5,5,-10,5,-6,7,7,-8,-9,-1,-10,6,1,2,-9,7,6,-1,4,2,-2,5,-8,-2,9,-8,6,-1,-1,6,-1,-5,-6,5,-10,-1,-7,-4,1,-4,9,9,5,2,-6,-9,1,4,-8,-9,-8,-3,-9,10,2,2,7,9,-3,9,9,-6,9,10,-1,-10,-3,3,-1,-4,8,-6,-7,-6,-6,-10,2,7,-6,-1,-8,-5,5,5,-1,-8,-2,4,9,-10,5,-2,-5,-8,-6,9,9,6,-4,-9,7,5,-2,-1,-9,10,10,-10,-10,8,-7,-1,3,-2,8,1,9,-7,3,3,-6,7,-4,-10,7,-10,7,3,-9,-4,-6,-2,-10,-5,-4,6,-1,7,2,-8,7,3,7,3,-1,-3,-3,2,-2,8,-5,-8,-9,-10,4,8,-5,-5,-7,10,-5,-6,6,2,5,5,-4,8,10,4,7,-5,-3,7,-1,9,-8,4,3,3,8,1,1,-5,7,-4,1,5,2,-5,8,8,-1,3,2,3,4,-2,-1,-7,-8,3,2,5,-1,-6,-6,-7,1,-2,-6,3,-9,8,-3,10,-5,3,2,-3,10,-4,-6,-5,2,9,2,-9,-6,3,-1,-3,8,8,-5,3,-2,2,-9,-4,6,-9,7,1,7,5,9,-8,5,8,-5,-5,-9,5,-8,7,6,4,7,7,1,6,1,8,-8,-7,-9,-1,3,-4,-7,-5,-10,4,-2,3,-2,-5,3,-10,2,-3,2,-7,10,-6,-6,-1,7,6,-8,-5,8,-5,3,-1,7,-6,-9,-5,-6,-7,-9,-9,-6,8,-5,-8,2,3,1,2,9,-8,-1,-7,-2,-1,5,-1,-6,8,-1,4,10,-1,-3,-10,3,1,10,2,4,-7,5,3,5,5,-8,1,8,2,7,6,-1,-3,-6,-5,10,1,-9,9,8,2,-2,-5,-7,4,8,-5,8,1,4,-4,7,-10,-2,2,10,7,9,4,8,1,9,-6,-3,-1,-3,9,-4,8,-7,-7,4,-1,-5,-8,-3,10,4,-9,5,2,-8,-1,2,-10,10,8,-1,-7,-1,1,6,8,-1,7,-8,5,-3,-8,-6,4,6,-9,10,-5,-1,-7,-10,-8,-1,-9,5,-4,-2,3,-1,-3,-8,3,-6,-9,7,-5,10,-9,8,1,-6,4,-9,6,-4,8,1,2,-10,-6,6,5,7,-10,-4,2,7,-7,-3,-10,-4,-10,8,4,-2,6,-6,-7,-4,9,9,-7,-7,7,-7,-8,-3,-6,2,-10,2,4,6,-10,8,8,1,6,-10,-8,9,-10,6,-3,7,3,-1,7,10,-8,5,8,3,-3,-8,-2,1,-7,-9,5,6,-5,-7,-4,8,-7,-10,-10,-10,8,8,-5,3,5,-4,5,-10,-7,-3,-8,-3,-5,-10,9,-1,-8,-8,-7,-4,-2,5,-8,-10,-6,6,-5,6,5,6,-6,1,-8,-4,4,9,6,-5,-9,-9,-9,6,7,5,-10], dtype = "int8")#candidate|1281|(2145,)|const|int8
call_1279 = func_148_call(relay.reshape(var_1280.astype('int8'), []), relay.reshape(const_1281.astype('int8'), [15, 11, 13]), )
call_1282 = func_148_call(relay.reshape(var_1280.astype('int8'), []), relay.reshape(const_1281.astype('int8'), [15, 11, 13]), )
func_1055_call = mod.get_global_var('func_1055')
func_1056_call = mutated_mod.get_global_var('func_1056')
call_1291 = relay.TupleGetItem(func_1055_call(), 3)
call_1292 = relay.TupleGetItem(func_1056_call(), 3)
output = relay.Tuple([uop_1263,call_1279,var_1280,const_1281,call_1291,])
output2 = relay.Tuple([uop_1263,call_1282,var_1280,const_1281,call_1292,])
func_1296 = relay.Function([var_1262,var_1280,], output)
mod['func_1296'] = func_1296
mod = relay.transform.InferType()(mod)
mutated_mod['func_1296'] = func_1296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1296_call = mutated_mod.get_global_var('func_1296')
var_1298 = relay.var("var_1298", dtype = "float64", shape = (10, 16, 8))#candidate|1298|(10, 16, 8)|var|float64
var_1299 = relay.var("var_1299", dtype = "int8", shape = ())#candidate|1299|()|var|int8
call_1297 = func_1296_call(var_1298,var_1299,)
output = call_1297
func_1300 = relay.Function([var_1298,var_1299,], output)
mutated_mod['func_1300'] = func_1300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
call_1308 = relay.TupleGetItem(func_801_call(), 3)
call_1309 = relay.TupleGetItem(func_803_call(), 3)
func_600_call = mod.get_global_var('func_600')
func_605_call = mutated_mod.get_global_var('func_605')
const_1316 = relay.const([[-5.505113,8.320848],[-6.094618,6.557431],[-5.020372,-2.813964],[-4.346917,-3.017106],[-3.034316,-5.363341],[4.645047,-3.282483],[3.302557,9.353863],[0.910085,-2.953439],[2.120452,3.895874],[-9.579092,-2.447824],[-2.211060,2.058151],[-4.229014,3.967237],[-0.007949,-5.688134],[7.250857,7.136732],[-8.204226,-2.810204],[-0.640595,-9.582804],[-9.070728,9.913903],[-7.654523,8.098402],[-2.477769,-2.654158],[-3.508591,-0.957552],[9.547157,3.958710],[5.623774,-3.025192],[1.474255,0.175015],[6.750627,0.526662],[-2.827286,9.837505],[-2.299008,6.710465],[3.691488,-0.799237],[-9.839763,-5.581829],[6.102320,-2.422094],[3.667331,-1.449923],[-5.171781,-7.646823],[5.721450,0.344281],[-6.989696,8.670755],[-8.525870,-0.985081],[-1.134786,8.910606],[0.659362,-3.872102],[5.925988,4.115849],[8.303382,1.515705],[8.438811,-4.902710],[6.803870,-6.192674],[-6.975387,4.193580],[4.075536,-3.704983],[-1.481201,-4.296086],[9.356365,-1.659365],[1.720592,3.243813],[1.086302,-2.749358],[-5.570165,-3.002716],[8.774507,-6.671999],[-6.706063,-8.032088],[6.420365,2.874753],[-5.208195,1.686795],[-3.468848,8.183804],[3.668115,2.136442],[1.667199,4.210339],[-1.337692,-6.737453],[8.971608,5.600449],[-1.505493,1.821930],[-1.345824,6.323744],[-8.517482,-9.802457],[-3.668903,-1.518286],[4.322201,-2.899996],[-8.857908,-3.275993],[2.409870,-7.578221],[6.858091,-3.780787],[7.421345,4.670224],[-4.307060,-2.379918],[1.275816,-8.653555],[-3.265109,9.716065],[-6.363914,0.803626],[-1.438738,9.459397],[-7.870984,-0.054262],[5.651821,5.916600],[-9.912659,-8.647148],[1.198483,8.083222],[2.455169,-2.991471],[-9.080827,1.468471],[7.507831,3.910635],[6.317673,-9.393002],[-6.215194,7.516458],[8.276684,-9.176146],[-9.773001,0.885902],[-4.827772,-7.617793],[-1.902101,8.405119],[4.015650,0.210126],[6.026012,-7.119442],[0.154891,-6.073951],[5.114195,6.212304],[-8.327912,-2.987346],[-2.805178,-3.175934],[-2.275232,-0.720783],[7.216825,5.809676],[8.961711,-9.650011],[-6.225405,6.628489],[0.020194,7.650179],[2.585803,4.284836],[9.167810,-3.555879],[5.481106,-3.073959],[-0.367365,-8.213217],[-7.622502,-1.370207],[-5.272488,3.136083],[6.926124,-0.755915],[-3.651234,3.786681],[-5.930137,-3.830701],[-1.156206,0.457988],[9.415355,8.282770],[5.840362,-5.784326],[2.471923,7.133280],[2.880942,-0.742404],[9.196971,1.059411],[6.862089,4.432311],[0.031250,3.016926],[2.318426,-1.690289],[-4.802158,-2.492007],[2.084060,7.493407],[0.355470,9.128904],[8.768487,5.647542],[-0.421054,4.244061],[2.760412,-6.323156],[-9.374301,-9.526875],[-0.272555,-5.595077],[-1.292274,-0.917467],[3.648432,-2.126516],[-8.432845,9.346890],[-2.917394,-4.874264],[2.212903,-7.672455],[9.179918,-2.724009],[-7.371857,5.126711],[3.779099,9.682892],[-8.510069,9.219879],[5.690808,-5.321500],[6.610907,-5.657466],[-3.204652,0.835429],[-3.388607,-8.509900],[-4.368770,5.433764],[5.059551,4.187865],[-6.786070,-3.730469],[2.601299,1.458726],[1.409472,-5.039474],[9.272674,-4.381190],[-0.457930,-2.674770],[1.688517,-6.983637],[7.317209,-7.476147],[-2.356601,4.404060],[-1.973295,8.700357],[6.254946,2.596217],[-1.500477,-7.893640],[-8.732596,3.796869],[-3.640401,6.219513],[-4.522272,0.040669],[6.046697,-7.877272],[7.510501,-7.652360],[3.989230,1.363638],[-6.566079,1.634801],[8.251239,2.012802],[8.413795,-0.686383],[-6.603360,7.741690],[6.494157,-5.062385],[2.758140,-8.829531],[-6.741131,-0.994824],[-8.725022,-9.017264],[-0.653684,0.809740],[3.045743,5.218596],[9.876370,-9.943639],[4.694579,-2.182105],[-8.824422,1.102916],[6.724882,1.685791],[3.383412,6.690377],[7.136735,-2.525608],[3.314191,6.640833],[-8.620335,4.767364],[-7.514150,8.278965],[-4.384222,-7.101740],[-0.446474,-3.503293],[0.276540,9.229800],[5.950337,-9.084141],[1.760891,3.509067],[-6.056925,5.588327],[9.103753,-3.270159],[1.202937,-4.559543],[9.053576,-7.392070],[-3.291518,0.759189],[-6.598482,-8.889141],[6.958552,3.411300],[-2.060132,-0.963876],[6.424548,4.900548],[-8.267982,7.028946],[-9.741451,7.017526],[-4.552199,5.397461],[-8.197175,7.543813],[-2.034136,0.892291],[-6.710488,-9.668944],[3.323874,-9.966749],[-1.443115,7.918065],[6.390302,-5.550388],[-0.884158,-1.251857],[-5.988630,-1.101151],[-8.139523,2.068523],[2.076946,2.866062],[0.956197,-0.150712],[-2.460394,-8.593413],[4.367166,3.050691],[-9.674076,-5.169425],[-3.044495,8.999340],[-8.765523,5.810733],[0.031896,4.421954],[2.175779,7.263388],[-7.273702,9.538873],[-9.339837,-2.422289],[-6.206159,-1.177739],[4.202287,7.875414],[2.810124,-3.315347],[-3.921935,3.514797],[7.451644,3.907962],[2.489071,3.327322],[-6.074196,-7.209587],[-3.184137,-7.869733],[-5.677585,5.237853],[7.945424,6.383260],[-6.515289,4.773346],[-4.964627,-1.181542],[4.460358,-0.034056],[-1.182600,0.626965],[0.677664,1.574496],[-7.958701,-5.678404],[8.415002,-3.496071],[-1.465952,5.270343],[-0.014804,-2.249263],[8.206150,-0.541487],[-6.535324,0.570822],[-2.530339,9.536908],[-0.012003,-0.372895],[4.569820,-9.533373],[-7.082482,4.917836],[-4.483312,8.168332],[6.050982,4.470104],[3.156410,-8.500011],[7.655507,-6.462424],[-7.415202,2.431775],[8.178856,2.602280],[-0.458693,2.245858],[-3.170432,6.728261],[5.045344,5.955345],[-4.945070,-3.585364],[-8.815139,5.117017],[-8.287943,-4.433328],[-6.850519,-3.991977],[3.512609,-2.160810],[9.411910,-8.753684],[-2.010902,-4.415078],[7.583793,0.957684],[3.650516,5.166567],[-3.842495,0.888424],[-1.089699,0.111521],[3.600916,-3.147365],[1.291123,-5.795577],[-0.344735,-0.896912],[-5.037358,3.005032],[3.946283,-9.548464],[-9.992563,-9.463269],[-3.845168,9.066524],[8.570748,8.533063],[-3.936298,9.249648],[-4.458616,-0.179753],[8.674780,-3.051982],[-0.418673,0.586251],[-3.527887,-1.333991],[7.411388,3.243270],[-5.273077,-9.711002],[6.902139,-5.438104],[-2.337601,3.552949],[7.485451,4.151213],[-0.680185,-7.921576],[6.399722,-5.259284],[7.429068,-5.633265],[-1.375357,0.984809],[8.094403,-5.722044],[1.089462,-0.286833],[3.260055,1.005332],[-7.491073,4.226600],[-0.029427,7.311342],[0.283518,9.969614],[-5.428773,5.346331],[0.091689,3.394835],[-2.614046,0.572349],[-4.587559,1.837693],[0.508113,-6.062194],[-1.515590,-6.506562],[2.516576,-8.601636],[-1.355574,-8.805152],[-3.520286,5.881783],[-6.228634,-9.021524],[-9.125106,-4.674327],[4.847277,-0.745451],[-3.463665,-4.475982],[-5.720870,2.431871],[-8.477289,-5.781151],[2.567804,0.353908],[-7.688272,4.116029],[1.507270,-3.185114],[9.670963,-9.914495],[-7.034708,6.692668],[6.687340,0.421302],[7.321931,-9.866919],[6.318508,-4.253693],[0.229106,-4.237118],[-8.821525,-5.685703],[4.959735,6.200395],[4.904657,8.793660],[9.720791,5.433232],[6.054564,-3.104606],[1.677462,-2.879818],[-1.480847,-8.986442],[0.161927,5.262221],[-3.987278,5.321452],[-7.393606,4.773384],[7.924556,-0.808417],[6.803117,6.721634],[-9.290451,6.239956],[-3.068700,-7.753838],[-8.900049,-9.761801],[2.848440,8.460020],[4.096673,0.839142],[-5.808246,-2.179546],[-0.170779,-2.468794],[-7.289381,-5.478043],[1.869534,-5.091578],[4.820440,-0.188523],[9.270306,2.735755],[3.953900,3.266344],[-0.558937,-4.268780],[7.554245,-4.469822],[3.076115,1.535263],[-1.541602,1.920824],[-1.804055,-6.910556],[-4.071172,7.176502],[5.998008,1.346863],[-1.027204,-1.855278],[1.532970,5.322026],[8.590634,-5.282825],[-5.200094,-5.492189],[9.408140,-9.107222],[1.077854,-2.239275],[-3.563780,-1.875941],[-9.596678,-2.816307],[-7.473794,7.556293],[8.809266,-2.349926],[-2.879451,-5.011357],[-5.339213,-1.771187],[-1.015184,7.478547],[9.845158,7.129595],[-4.525749,1.819495],[7.551045,7.239254],[-6.858310,-4.089917],[5.093556,-1.512761],[2.892861,-5.710325],[7.263588,-7.046556],[3.957567,-8.916139],[9.372548,-9.928122],[1.730953,-2.645739],[1.118706,-8.521787],[5.726830,-0.300140],[3.324154,-7.865018],[9.824312,-1.527799],[7.583084,-4.017672],[5.401089,6.628347],[-5.240692,-0.499343],[-4.990525,8.543499],[-9.447147,6.367830],[-2.784601,-3.211874],[0.208157,-3.126720],[3.397617,2.433016],[0.098604,0.581035],[-6.847655,6.877979],[1.279501,-4.003425],[0.565196,0.643882],[3.117262,5.780227],[-4.390601,3.818562],[-9.719707,-2.399851],[2.015930,8.058598],[9.248741,6.496598],[7.514891,4.272116],[-7.814865,-6.329675],[0.058874,4.076975],[2.644543,-7.608248],[-0.415228,7.492280],[0.255653,-2.063806],[3.905967,-5.774555],[-8.764020,7.811345],[-3.773690,-5.946001],[-3.674251,-4.130296],[2.012698,0.876296],[-9.640035,-7.417759],[4.649780,-8.694223],[-8.637586,9.270228],[-7.150216,-2.806821],[9.292783,-3.413409],[-1.354960,-8.354244],[-7.908659,-0.232110],[-3.210043,-0.481816],[3.060988,7.536181],[-1.568654,-7.907119],[-4.041718,-1.360688],[2.463258,-6.065971],[-3.275784,-8.204545],[5.878644,-1.574080],[-4.410300,4.472965],[-4.955784,6.624667],[7.680775,-3.476991],[-3.123349,-4.278949],[0.436658,3.287841],[5.683455,3.595833],[4.162797,8.526785],[3.161987,-0.090983],[-7.081950,-8.633645],[2.032983,1.667264],[0.700372,-3.470248],[-1.150003,-0.683919],[8.112128,-4.846574],[4.238989,7.275432],[5.409654,-8.820669],[-4.132903,-5.113242],[-9.678594,6.879077],[9.879855,-1.562201],[-2.708811,-4.953342],[9.942563,-6.968424],[8.985728,-1.679114],[3.267205,3.860828],[-7.458000,0.374466],[-5.850409,6.816184],[-7.217085,-5.056187],[2.297868,-6.025558],[3.450241,-5.319388],[-6.456229,8.011758],[3.435360,-4.784555],[3.230783,-2.639941],[0.846409,-9.916426],[1.749934,7.634443],[-1.744598,5.763592],[-1.192853,-8.074573],[6.721937,3.569179],[8.289933,9.134816],[-0.654772,1.924727],[9.817915,2.148051],[1.879800,-8.954208],[3.606297,0.894660],[5.359159,-2.889799],[-6.465842,7.617991],[8.495391,9.679650],[1.902448,-9.786085],[9.409470,-1.191449],[5.257712,1.110597],[9.689478,3.726695],[8.284445,1.619107],[-6.184057,2.811147],[-0.125540,-4.565292],[2.565211,-5.527339],[-5.376568,-5.838019],[0.822344,-6.549815],[-7.118079,4.092261],[2.832486,-4.662887],[0.091244,0.123423],[0.686633,3.474182],[4.562332,-0.440595],[5.981498,4.908049],[6.333452,9.071748],[-7.860020,9.281356],[-9.596196,5.746807],[3.950645,-2.580607],[7.601012,-5.236802],[-1.141329,-0.430753],[7.946436,-2.303848],[6.853334,-2.526330],[0.058890,8.685440],[1.068342,-0.756745],[-3.762789,1.672788],[-9.484774,-6.783899],[6.943734,-6.846440],[-9.083939,1.128139],[2.700024,0.490531],[-1.779811,0.893813],[5.567052,5.434113],[7.448159,-5.790240],[3.695402,-6.017016],[-3.505499,9.025239],[0.657084,6.491977],[-9.028178,-3.141734],[9.164419,9.801348],[7.278978,1.462527],[9.256066,-1.105819],[8.443428,-1.998506],[-3.051699,-9.183507],[-5.257154,9.663827],[0.781667,2.278607],[3.326472,-3.683848],[2.485840,-9.031142],[-1.469285,-5.450126],[5.450363,9.637520],[5.232844,7.125861],[-1.803108,-3.962828],[-7.274161,-7.857296],[8.275016,3.304581],[4.685403,6.290562],[1.570142,-7.346808],[3.138416,-4.854652],[5.756918,8.280242],[0.055789,-6.994843],[-9.961438,-6.893969],[-0.225807,7.092889],[3.615963,6.539825],[-0.327608,3.381362],[-8.916594,1.098116],[-1.218118,-2.057669],[2.175619,6.692840],[0.857498,-4.171787],[-9.956185,-0.353656],[-2.153353,-2.079287],[-7.405534,-8.509371],[-4.594542,4.150669],[4.232178,6.575609],[-2.107551,1.048411],[2.339121,-9.298629],[0.403155,9.324858],[-5.374669,-6.498108],[1.402057,-1.151936],[-0.226088,-0.932284],[-4.100102,-2.628407],[-9.486917,-4.628466],[9.236038,0.712716],[-2.059270,1.763195],[-7.248944,2.401789],[-1.885255,6.538842],[5.823541,-2.663007],[5.625251,-5.117907],[-2.565353,7.500531],[-8.033583,0.269521],[-5.602857,5.900371],[-3.452009,-1.319128],[7.587641,2.093093],[7.941318,0.137167],[-8.227840,9.229645],[-4.229752,-9.395515],[-8.104226,9.072035],[0.515418,-0.528871],[9.310554,-8.412655],[4.906257,9.134926],[-0.535058,-2.772964],[1.655247,-1.047499],[2.008401,6.081792],[-0.188288,-0.024518],[-2.993486,1.467466],[-3.992512,2.037021],[4.041097,-6.406331],[-0.533358,6.316029],[-5.966296,-7.510932],[1.184982,-1.929737],[-0.825595,-0.052805],[9.896891,1.024391],[5.653224,8.664477],[9.122832,8.135595],[-7.540372,2.411368],[8.360119,8.365658],[-4.676624,-3.905135],[6.842117,2.904972],[-8.372008,-4.446056],[-9.059785,2.848317],[-1.292908,-0.802282],[4.707022,8.979756],[5.970117,-5.157616],[3.790035,-1.317372],[-6.292631,-4.789558],[2.203372,0.833458],[5.158361,6.530523],[-2.265622,7.968530],[4.234564,-5.772108],[-2.819527,-6.871117],[-4.888569,-4.085097],[2.431604,5.718659],[8.919189,6.469277],[0.769537,9.666824],[-6.238774,1.614972],[5.237752,6.938808],[-1.152290,-2.347801],[0.588101,-8.562176],[2.241074,-6.045925],[5.621535,-8.658595],[2.075995,-5.025408],[7.494505,1.672616],[-0.402624,-7.967716],[-0.797016,1.777377],[5.805237,7.887735],[-8.360909,-0.522543],[-4.221698,-8.284058],[-0.936024,5.971239],[-9.319319,9.341209],[5.536780,5.477432],[2.195246,6.765909],[-4.233142,-2.135607],[-4.112630,-2.509621],[0.660177,5.417040],[7.496649,3.243363],[-9.156110,6.257171],[-7.438375,-8.395054],[-4.950607,-7.345876],[6.444473,9.900269],[-5.442239,3.602263],[7.065586,4.778128],[-0.710475,-9.650813],[7.579168,-8.143745],[-3.431715,-4.274693],[-3.634383,-6.833499],[2.804462,-4.428052],[4.418641,-7.940442],[7.741046,-5.323392],[3.432730,7.794796],[-5.576899,-8.880398],[3.685987,-0.707129],[-1.862501,3.979270],[2.291946,9.588306],[-3.461631,-1.650554],[1.442421,1.040727],[-7.449237,7.600797],[7.676089,-7.317114],[1.783298,5.974570],[6.186074,-2.277373],[1.338554,-3.025569],[-6.441967,7.959148],[3.648497,-9.108354],[-3.645714,8.204199],[6.010121,-6.210813],[5.923913,6.022653],[9.096268,1.235344],[-3.913485,8.949865],[2.413229,-2.883648],[6.715256,-8.183721],[5.984992,-0.945420],[-6.304873,6.037075],[-7.730754,2.252988],[-6.932461,-6.454282],[0.743220,-9.243576],[-7.928842,0.359594],[4.249531,9.696955],[4.080344,0.018656],[-1.410429,-5.221849],[2.123453,-9.844749],[-7.695660,0.474796],[-4.109146,-6.862438],[4.952309,4.437509],[-0.820006,-0.080524],[8.567646,3.374163],[3.995498,2.986944],[-3.081574,0.765497],[3.442324,4.462601],[2.415988,-6.091560],[9.021647,0.577192],[2.776735,-1.445806],[-6.687845,4.166795],[-6.934456,-0.758482],[3.114557,4.406810],[-3.350357,2.330330],[-1.627435,2.419505]], dtype = "float64")#candidate|1316|(660, 2)|const|float64
call_1315 = relay.TupleGetItem(func_600_call(relay.reshape(const_1316.astype('float64'), [11, 8, 15]), relay.reshape(const_1316.astype('float64'), [11, 8, 15]), relay.reshape(call_1308.astype('int8'), []), ), 0)
call_1317 = relay.TupleGetItem(func_605_call(relay.reshape(const_1316.astype('float64'), [11, 8, 15]), relay.reshape(const_1316.astype('float64'), [11, 8, 15]), relay.reshape(call_1308.astype('int8'), []), ), 0)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_1318 = func_759_call()
call_1319 = func_759_call()
output = relay.Tuple([call_1308,call_1315,const_1316,call_1318,])
output2 = relay.Tuple([call_1309,call_1317,const_1316,call_1319,])
func_1329 = relay.Function([], output)
mod['func_1329'] = func_1329
mod = relay.transform.InferType()(mod)
mutated_mod['func_1329'] = func_1329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1329_call = mutated_mod.get_global_var('func_1329')
call_1330 = func_1329_call()
output = call_1330
func_1331 = relay.Function([], output)
mutated_mod['func_1331'] = func_1331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
call_1404 = relay.TupleGetItem(func_801_call(), 0)
call_1405 = relay.TupleGetItem(func_803_call(), 0)
func_148_call = mod.get_global_var('func_148')
func_151_call = mutated_mod.get_global_var('func_151')
const_1409 = relay.const(9, dtype = "int8")#candidate|1409|()|const|int8
var_1410 = relay.var("var_1410", dtype = "int8", shape = (715, 3))#candidate|1410|(715, 3)|var|int8
call_1408 = func_148_call(relay.reshape(const_1409.astype('int8'), []), relay.reshape(var_1410.astype('int8'), [15, 11, 13]), )
call_1411 = func_148_call(relay.reshape(const_1409.astype('int8'), []), relay.reshape(var_1410.astype('int8'), [15, 11, 13]), )
func_148_call = mod.get_global_var('func_148')
func_151_call = mutated_mod.get_global_var('func_151')
call_1418 = func_148_call(relay.reshape(const_1409.astype('int8'), []), relay.reshape(call_1408.astype('int8'), [15, 11, 13]), )
call_1419 = func_148_call(relay.reshape(const_1409.astype('int8'), []), relay.reshape(call_1408.astype('int8'), [15, 11, 13]), )
output = relay.Tuple([call_1404,call_1408,const_1409,var_1410,call_1418,])
output2 = relay.Tuple([call_1405,call_1411,const_1409,var_1410,call_1419,])
func_1422 = relay.Function([var_1410,], output)
mod['func_1422'] = func_1422
mod = relay.transform.InferType()(mod)
mutated_mod['func_1422'] = func_1422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1423 = relay.var("var_1423", dtype = "int8", shape = (715, 3))#candidate|1423|(715, 3)|var|int8
func_1422_call = mutated_mod.get_global_var('func_1422')
call_1424 = func_1422_call(var_1423)
output = call_1424
func_1425 = relay.Function([var_1423], output)
mutated_mod['func_1425'] = func_1425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
call_1432 = relay.TupleGetItem(func_1329_call(), 0)
call_1433 = relay.TupleGetItem(func_1331_call(), 0)
output = relay.Tuple([call_1432,])
output2 = relay.Tuple([call_1433,])
func_1434 = relay.Function([], output)
mod['func_1434'] = func_1434
mod = relay.transform.InferType()(mod)
output = func_1434()
func_1435 = relay.Function([], output)
mutated_mod['func_1435'] = func_1435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1452 = relay.var("var_1452", dtype = "int16", shape = (3, 10, 13))#candidate|1452|(3, 10, 13)|var|int16
var_1453 = relay.var("var_1453", dtype = "int16", shape = (3, 10, 13))#candidate|1453|(3, 10, 13)|var|int16
bop_1454 = relay.multiply(var_1452.astype('int16'), relay.reshape(var_1453.astype('int16'), relay.shape_of(var_1452))) # shape=(3, 10, 13)
uop_1470 = relay.asin(var_1453.astype('float32')) # shape=(3, 10, 13)
uop_1477 = relay.exp(uop_1470.astype('float32')) # shape=(3, 10, 13)
uop_1480 = relay.erf(uop_1470.astype('float32')) # shape=(3, 10, 13)
func_1422_call = mod.get_global_var('func_1422')
func_1425_call = mutated_mod.get_global_var('func_1425')
var_1493 = relay.var("var_1493", dtype = "int8", shape = (2145,))#candidate|1493|(2145,)|var|int8
call_1492 = relay.TupleGetItem(func_1422_call(relay.reshape(var_1493.astype('int8'), [715, 3])), 3)
call_1494 = relay.TupleGetItem(func_1425_call(relay.reshape(var_1493.astype('int8'), [715, 3])), 3)
output = relay.Tuple([bop_1454,uop_1477,uop_1480,call_1492,var_1493,])
output2 = relay.Tuple([bop_1454,uop_1477,uop_1480,call_1494,var_1493,])
func_1499 = relay.Function([var_1452,var_1453,var_1493,], output)
mod['func_1499'] = func_1499
mod = relay.transform.InferType()(mod)
var_1500 = relay.var("var_1500", dtype = "int16", shape = (3, 10, 13))#candidate|1500|(3, 10, 13)|var|int16
var_1501 = relay.var("var_1501", dtype = "int16", shape = (3, 10, 13))#candidate|1501|(3, 10, 13)|var|int16
var_1502 = relay.var("var_1502", dtype = "int8", shape = (2145,))#candidate|1502|(2145,)|var|int8
output = func_1499(var_1500,var_1501,var_1502,)
func_1503 = relay.Function([var_1500,var_1501,var_1502,], output)
mutated_mod['func_1503'] = func_1503
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1525 = relay.var("var_1525", dtype = "int16", shape = ())#candidate|1525|()|var|int16
var_1526 = relay.var("var_1526", dtype = "int16", shape = (4, 3, 1))#candidate|1526|(4, 3, 1)|var|int16
bop_1527 = relay.maximum(var_1525.astype('int16'), var_1526.astype('int16')) # shape=(4, 3, 1)
uop_1545 = relay.rsqrt(var_1526.astype('float64')) # shape=(4, 3, 1)
uop_1559 = relay.atan(uop_1545.astype('float32')) # shape=(4, 3, 1)
bop_1569 = relay.less_equal(uop_1559.astype('bool'), var_1525.astype('bool')) # shape=(4, 3, 1)
func_1088_call = mod.get_global_var('func_1088')
func_1092_call = mutated_mod.get_global_var('func_1092')
const_1574 = relay.const([-1.140188,1.910028,-7.497747,7.355446,5.460209,8.953042,8.791095,3.381965,2.328815,-5.498676,2.602646,4.375319,8.121027,0.780312,9.217898,5.043037,-5.973301,3.291820,-0.442434,6.007461,7.242928,-9.030885,-8.693160,-9.942914,-8.577185,1.283315,2.755786,4.121891,-0.324133,6.385441,4.961024,-8.650521,3.681655,-4.623805,-9.047507,6.711617,-2.582720,-6.203845,8.151928,-9.579673], dtype = "float32")#candidate|1574|(40,)|const|float32
const_1575 = relay.const([[False,True,False,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,True,False,False,True,False],[True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True],[True,True,True,False,False,False,True,True,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,False,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,False,True,False,True,False,True],[False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,True],[False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,True,False,True,False,False,True,True,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False,False,True],[False,True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False],[False,True,True,True,True,False,False,True,True,False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,True],[True,True,True,True,False,False,False,False,False,False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,True,True,False,False,False,False,True,True,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,True,False,True],[False,True,True,True,False,False,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,True,False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,False,True,True,True,False,False,False,True,True,False,False,False,True,True,False],[False,True,False,True,False,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,False,True,True,True,False,True,True,True],[False,False,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,True,False,False,False]], dtype = "bool")#candidate|1575|(11, 195)|const|bool
call_1573 = relay.TupleGetItem(func_1088_call(relay.reshape(const_1574.astype('float32'), [40,]), relay.reshape(const_1575.astype('bool'), [15, 11, 13]), ), 1)
call_1576 = relay.TupleGetItem(func_1092_call(relay.reshape(const_1574.astype('float32'), [40,]), relay.reshape(const_1575.astype('bool'), [15, 11, 13]), ), 1)
uop_1578 = relay.atanh(bop_1569.astype('float64')) # shape=(4, 3, 1)
bop_1584 = relay.mod(uop_1578.astype('float32'), relay.reshape(uop_1545.astype('float32'), relay.shape_of(uop_1578))) # shape=(4, 3, 1)
var_1587 = relay.var("var_1587", dtype = "bool", shape = (4, 3, 13))#candidate|1587|(4, 3, 13)|var|bool
bop_1588 = relay.less_equal(bop_1569.astype('bool'), var_1587.astype('bool')) # shape=(4, 3, 13)
bop_1593 = relay.logical_or(uop_1578.astype('bool'), relay.reshape(bop_1569.astype('bool'), relay.shape_of(uop_1578))) # shape=(4, 3, 1)
bop_1596 = relay.bitwise_xor(var_1525.astype('uint16'), bop_1593.astype('uint16')) # shape=(4, 3, 1)
uop_1613 = relay.log10(uop_1578.astype('float64')) # shape=(4, 3, 1)
bop_1627 = relay.add(uop_1613.astype('int16'), const_1574.astype('int16')) # shape=(4, 3, 40)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_1630 = func_1235_call()
call_1631 = func_1235_call()
uop_1633 = relay.acos(uop_1578.astype('float64')) # shape=(4, 3, 1)
uop_1636 = relay.sin(bop_1627.astype('float32')) # shape=(4, 3, 40)
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
call_1642 = relay.TupleGetItem(func_1329_call(), 1)
call_1643 = relay.TupleGetItem(func_1331_call(), 1)
bop_1644 = relay.left_shift(uop_1636.astype('int32'), uop_1633.astype('int32')) # shape=(4, 3, 40)
output = relay.Tuple([bop_1527,call_1573,const_1575,bop_1584,bop_1588,bop_1596,call_1630,call_1642,bop_1644,])
output2 = relay.Tuple([bop_1527,call_1576,const_1575,bop_1584,bop_1588,bop_1596,call_1631,call_1643,bop_1644,])
func_1648 = relay.Function([var_1525,var_1526,var_1587,], output)
mod['func_1648'] = func_1648
mod = relay.transform.InferType()(mod)
mutated_mod['func_1648'] = func_1648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1648_call = mutated_mod.get_global_var('func_1648')
var_1650 = relay.var("var_1650", dtype = "int16", shape = ())#candidate|1650|()|var|int16
var_1651 = relay.var("var_1651", dtype = "int16", shape = (4, 3, 1))#candidate|1651|(4, 3, 1)|var|int16
var_1652 = relay.var("var_1652", dtype = "bool", shape = (4, 3, 13))#candidate|1652|(4, 3, 13)|var|bool
call_1649 = func_1648_call(var_1650,var_1651,var_1652,)
output = call_1649
func_1653 = relay.Function([var_1650,var_1651,var_1652,], output)
mutated_mod['func_1653'] = func_1653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1434_call = mod.get_global_var('func_1434')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_1690 = relay.TupleGetItem(func_1434_call(), 0)
call_1691 = relay.TupleGetItem(func_1435_call(), 0)
func_148_call = mod.get_global_var('func_148')
func_151_call = mutated_mod.get_global_var('func_151')
const_1695 = relay.const([3,2,-4,-7,6,2,3,-3,-2,2,3,1,-4,4,-8,-4,6,9,4,7,-10,-9,10,-5,-1,4,-6,5,-4,4,8,4,-5,-2,-1,-10,-7,3,2,-2,6,7,10,3,-1,-5,4,-10,4,-9,-2,5,1,9,-9,-6,-8,8,7,4,-8,-6,10,-3,-10,9,-5,-1,4,10,2,10,-3,8,10,7,-10,-10,8,5,6,-10,-10,-7,-3,-8,5,5,-8,7,2,6,6,4,-9,-2,5,-6,-6,-9,-2,-4,-7,-4,-1,-3,-4,6,-4,3,-3,8,8,-5,7,-3,-3,5,-7,6,-1,-2,-9,4,-1,7,-4,4,-9,8,2,-6,-2,8,-1,7,7,-6,8,-10,-10,4,9,8,6,-5,-7,5,3,9,2,-5,-5,-3,-4,-1,9,-8,3,6,2,-10,-4,8,-10,1,-5,9,9,5,7,8,3,-4,-2,8,4,2,-2,-5,-1,4,-3,6,-9,5,-8,1,1,-8,6,6,1,-9,-10,5,1,5,-4,-5,-5,8,5,3,-5,-8,8,-2,-2,3,-7,1,-10,1,-1,-7,-9,10,-2,-2,5,-9,-4,3,4,-7,-4,1,7,8,-10,-4,7,5,-6,-8,8,5,10,7,-2,7,3,2,9,7,4,-8,-7,2,-1,6,10,1,-9,-6,-5,9,-8,-7,10,6,-9,-4,-9,-10,9,-2,-5,-10,3,5,8,3,4,5,-6,-7,5,-1,-6,-7,-5,5,-1,-6,3,-10,7,9,5,-7,-6,8,-4,8,-10,-6,-1,8,-7,6,-8,-3,10,-8,7,-8,10,4,6,5,-4,-10,-3,9,-3,-2,-1,-5,8,-8,1,-7,3,-6,-3,5,-3,6,-5,7,-2,-8,5,-6,9,9,-1,2,10,-2,-8,-2,-4,-6,-5,-7,-2,-10,10,-2,-1,2,9,-5,-1,-2,8,9,-4,2,-6,6,6,6,3,7,-9,5,3,7,-1,-3,4,-2,7,-8,3,-2,10,-4,-6,-9,2,-2,-6,-10,-7,7,-7,10,2,-6,9,-1,5,-6,-10,5,8,6,-6,2,-1,5,-9,1,-10,-4,4,2,5,-8,10,5,-1,-4,1,-10,-9,10,9,-7,6,-10,1,10,9,-8,-3,8,8,-1,-10,-1,6,-6,1,-4,7,9,-5,1,-9,2,4,6,-4,10,9,-4,3,2,3,2,9,5,10,-7,-7,-3,-8,4,7,7,-7,3,-9,1,10,-2,-5,-2,-3,6,-7,-10,9,9,9,-1,9,4,10,9,-1,8,8,-2,10,-10,8,-6,-3,2,2,-6,-9,8,8,-1,10,6,1,8,10,2,9,7,-4,-4,4,9,2,5,7,-10,7,-7,-6,2,5,3,4,8,9,-4,3,8,-3,9,1,8,-7,-6,4,-8,4,4,3,5,1,-7,-5,2,-10,-7,-10,6,-2,10,-2,4,2,-3,-10,-9,8,-7,-2,10,-10,2,-1,-7,3,-8,6,1,2,2,-2,2,6,-4,8,10,-10,2,-3,6,-8,2,-8,1,9,-1,4,-3,-5,-9,-3,-3,-3,6,-3,3,1,-5,-8,-1,2,8,-7,8,-9,5,8,-7,-4,-7,9,10,5,9,4,2,1,-5,2,10,-2,5,4,1,7,7,-9,-6,-2,10,2,-3,-2,3,2,5,-10,-4,-4,-4,-6,-7,-10,1,-5,-8,-3,-1,-1,-10,10,7,-8,8,-7,-1,5,-7,-10,-7,-1,5,7,-2,-2,9,8,4,8,-5,6,9,-7,-6,-7,3,7,-4,4,1,8,10,8,1,-7,3,6,5,-10,-10,2,-5,-1,-3,4,-3,-6,8,8,-1,8,8,-6,5,2,3,9,2,8,5,9,-4,-10,10,2,2,-5,-3,-1,-9,6,-8,-1,-6,-6,-10,-8,2,7,-7,3,-10,-10,-3,3,-6,5,5,4,4,-2,-9,-1,10,2,10,7,-6,-2,9,-1,6,7,-4,1,-3,4,-3,2,6,1,1,-3,6,-6,-3,-8,-2,8,-9,4,4,-5,-5,-2,-3,5,2,1,-7,3,-1,-7,-7,9,-6,10,-2,-8,-2,-8,-3,8,-2,3,3,7,6,-9,3,-9,-2,10,1,-9,-6,7,9,-5,4,10,2,3,3,1,9,-6,8,-5,4,4,-2,-9,6,-3,10,8,-1,9,3,4,9,-5,6,6,5,-9,-2,-9,10,9,-5,3,-9,4,4,6,-5,-2,10,-10,9,1,8,8,-9,-10,-7,2,7,10,1,-7,-4,9,7,8,-9,-5,-8,-4,3,3,9,8,1,-9,3,-1,5,2,1,7,-10,6,-9,-4,6,-4,5,9,1,10,-4,-2,3,2,-5,-6,5,-10,-4,-7,-6,-3,5,6,-2,2,9,8,10,-8,10,8,7,10,-6,2,-9,2,-9,-2,5,10,9,-8,7,-2,3,2,1,3,-10,1,2,-5,-2,-3,-4,2,10,-10,7,3,5,-10,-7,4,-8,9,8,10,-3,-6,-7,-10,-8,3,6,5,-1,-6,8,6,-6,-3,-8,-4,-9,10,9,-2,-4,-2,10,10,2,10,9,-3,10,1,2,-3,-6,-6,4,-1,4,-7,-9,-8,4,-1,5,-7,-2,6,-4,5,-9,6,-9,-2,-8,-7,-7,-10,-4,-1,4,5,6,2,-8,9,-9,3,-2,3,5,9,-7,-2,-9,-2,-2,-1,-8,-8,3,8,-4,2,-7,8,-6,-7,-7,6,3,-8,-6,-1,3,3,-9,-8,3,9,-6,5,3,9,-10,-3,-4,5,-2,-6,-8,-3,-1,9,4,5,2,-3,1,-2,-8,1,-10,2,7,-8,-7,3,3,-2,-10,8,7,9,-3,9,10,3,-10,-1,-3,1,2,-7,-8,2,6,-1,1,-10,-5,-8,-1,-4,-6,-8,-3,-8,-5,-10,4,10,-1,-2,5,1,-3,4,9,-6,10,-5,-3,8,8,8,1,1,-10,-6,-6,-4,5,-6,-3,-3,-6,-8,1,-4,5,2,-1,9,7,8,-4,4,-8,6,-3,-6,7,-8,1,9,6,-3,-4,2,-10,7,-1,-3,-1,2,-8,-5,-2,3,-4,1,-6,1,-9,-3,1,2,1,3,-8,8,-3,1,5,-1,8,3,6,-6,-4,3,7,9,5,-1,-9,9,1,9,5,9,2,9,-5,-3,2,-8,3,8,-1,1,8,-4,-1,7,5,-1,-9,4,-3,-6,-5,5,-2,-10,-4,3,-2,-10,-1,8,4,-10,-8,-8,-5,8,-7,-10,8,1,2,1,-10,4,10,5,3,-7,-4,-4,9,9,-4,4,10,3,9,3,-7,-3,2,10,-5,-6,2,-8,-1,7,-5,-7,-6,6,-4,-7,7,-5,5,-4,-4,1,-10,7,3,9,4,-4,4,-6,-10,-9,-2,-8,2,9,-4,-2,-9,-8,-2,2,-2,-8,8,-7,8,7,-2,7,9,-8,6,7,-8,8,3,7,6,-4,-9,1,6,-7,3,10,8,4,9,-9,-8,8,7,-9,-3,5,1,-1,-6,-3,10,2,5,-4,-9,1,2,-1,7,1,-10,-3,-4,7,-1,-2,8,-9,-10,-7,-7,-6,-10,-5,-4,8,-5,-6,5,1,-6,9,5,-4,2,-3,10,8,-6,-10,1,6,-10,5,6,3,6,-3,-1,-7,-10,2,2,3,-6,10,-2,-3,1,-10,-3,6,-7,2,9,1,-4,1,-6,5,5,7,-6,-10,8,1,-4,-1,-9,9,6,7,-4,7,-1,9,-10,5,-9,-2,-6,-8,-1,9,6,7,-7,-4,-3,8,5,-3,-6,-2,3,1,6,-10,-10,6,7,8,10,-5,-2,8,-2,4,-9,-2,8,-2,3,-1,10,-9,-3,-3,8,5,-10,-9,3,-2,-8,5,-10,-10,10,7,9,9,2,4,-9,-4,-1,1,6,6,-10,10,9,-10,-3,9,3,-5,-1,9,-7,6,5,2,3,-7,-1,10,9,9,8,-6,-9,10,-8,-7,-1,3,-2,-9,-6,-9,-5,7,10,-6,5,1,-10,1,9,3,2,-10,-2,1,-7,-5,9,4,7,10,-3,7,4,-3,7,-7,-3,-5,-5,-5,7,3,-1,7,-1,3,10,7,-7,8,-6,2,9,-6,-4,-7,10,-8,10,-2,-2,5,2,-7,2,-4,-10,10,4,8,-9,-8,6,2,1,7,9,-7,-3,2,4,6,2,5,-1,3,-9,-1,-7,1,8,-3,-7,10,7,-5,-9,6,4,9,-6,7,3,8,-10,-10,-6,-7,-3,3,10,2,-7,-5,10,10,6,1,5,1,-10,-6,-4,-9,10,9,-10,-3,9,-9,2,5,7,9,-7,7,-1,-2,-6,2,-3,-7,-1,-9,8,1,7,8,-2,-6,-7,-6,6,5,-1,7,1,-6,-4,-5,6,10,2,9,-7,4,-8,4,8,-7,10,2,9,4,-4,-6,4,6,-6,-9,10,6,-4,3,4,1,-5,7,-1,-9,-9,7,-1,-9,-8,1,-4,5,1,-9,9,9,3,9,-7,2,1,1,-4,2,-1,-7,2,-10,-9,6,-1,3,-2,-9,-1,7,2,-8,10,-6,3,-3,-7,-5,-4,-6,7,10,-4,-10,-9,6,7,-8,4,-8,-9,-9,6,3,-5,6,10,3,4,-8,-2,-6,8,8,8,-8,-8,1,3,5,-7,-1,-8,1,-10,7,-3,3,-5,-5,6,9,-2,-8,-8,-4,8,2,-10,10,-9,-3,1,4,-6,8,2,-8,10,9,10,3,-9,-4,5,2,-2,-6,9,-9,-1,-9,-6,9,-2,6,-4,-10,1,3,-9,-1,7,3,9,5,1,-3,10,5,-10,5,-9,6,-10,-7,3,-1,-5,-10,-8,-2,-8,6,-7,-1,-3,1,-3,1,6,-4,7,-1,2,7,-6,-9,-6,-6,7,9,6,-1,7,-4,-1,1,-6,10,-6,7,8,10,-2,-6,-4,8,-5,8,-8,-4,-3,-7,-9,-8,-6,9,-3,-7,-5,-4,9,8,-9,-7,-1,8,-10,-4,3,-6,-8,-2,-5,-6,3,-7,1,10,4,-9,-10,10,3,9,-7,-5,-1,6,6,-4,3,5,9,-6,-5,-9,-1,7,2,-9,2,-3,-1,-8,-2,-7,-8,-1,-8,-9,1,9,6,5,1,-6,-10,-7,8,7,10,7,6,4,-4,-8,2,6,-3,-3,-6,1,-7,-6,-4,7,7,-1,-1,-9,-9,-9,-6,6,-7,-6,-9,9,-5,-3,6,-2,-3,7,9,10,-5,-6,7,2,2,-6,-7,7,8,1,-9,10,-8,-7,-3,7,-7,8,-7,-7,-8,-10,-8,7,8,-3,-2,6,-7,9,9,9,8,-1,8,6,2,3,4,7,7,-8,10,1,8,-9,-5,-4,-6,10,4,1,3,-6,-5,10,3,-1,3,-2,1,7,-10,10,7,-9,7,8,8,-10,9,5,9,6,-9,10,-10,7,-9,3,9,10,-5,-10,6,-4,-10,-8,-6,-1,-1,-6,-10,-10,-1,7,-6,-8,7,4,7,-10,-8,6,-1,2,9,-4,2,-10,-6,5,-5,-2,2,-8,3,-6,6,-6,10,-2,5,-8,9,-10,-6,-8,-9,-7,-8,7,-3,-4,-6,8,10,3,-4,-4,10,2,10,-8,2,-7,-10,-2,9,2], dtype = "int8")#candidate|1695|(2145,)|const|int8
call_1694 = func_148_call(relay.reshape(call_1690.astype('int8'), []), relay.reshape(const_1695.astype('int8'), [15, 11, 13]), )
call_1696 = func_148_call(relay.reshape(call_1690.astype('int8'), []), relay.reshape(const_1695.astype('int8'), [15, 11, 13]), )
func_1499_call = mod.get_global_var('func_1499')
func_1503_call = mutated_mod.get_global_var('func_1503')
const_1701 = relay.const([7,-10,4,10,7,1,1,2,10,1,-3,-6,-8,-7,2,-8,3,6,9,-5,9,10,9,-9,9,7,-10,5,3,7,-7,4,5,1,7,10,1,-7,-3,3,8,-2,-4,8,-10,-3,-2,-10,1,10,-7,-6,-2,3,9,7,-6,6,9,-7,1,-7,9,1,-9,7,-1,6,-6,-9,5,-2,7,10,6,-5,7,1,7,5,-2,4,5,-9,9,8,5,4,10,10,-1,-2,-4,6,2,1,-4,-9,3,2,5,-5,-9,-4,2,6,8,-4,10,6,-1,-8,-2,-6,5,8,-5,4,-1,-5,-2,-6,9,-3,-10,-3,-9,-10,7,5,-3,4,7,3,6,-1,-1,9,9,-8,-4,-3,-9,-4,-8,-10,4,-10,2,9,5,6,-8,-3,10,9,-2,7,-7,10,9,-8,-4,4,-6,-3,2,5,4,-1,1,8,-6,9,-5,-1,-10,9,-9,-9,-5,-4,-2,1,8,2,-3,5,7,-3,2,1,4,8,-5,8,1,-9,2,-1,-3,4,-7,-5,4,1,3,9,-3,1,-4,-10,-1,-8,-8,-5,-5,-8,9,-9,3,-8,3,4,-2,4,3,1,-2,7,9,2,3,6,-3,-3,-6,-3,-8,-3,-3,8,-10,10,-9,3,-10,-4,2,5,7,-2,-10,-10,-3,1,-1,-1,-10,-4,-9,9,-9,-4,-10,-8,8,-10,6,-5,4,-6,6,7,-10,5,7,9,-4,8,-2,3,-8,-8,-4,5,10,-2,-3,-2,-1,2,-10,3,-8,10,-7,9,7,-2,-2,-8,10,-9,-10,-6,6,6,-3,-10,9,-10,-4,-4,8,-3,-2,-3,10,7,-10,10,3,4,6,-6,5,-3,-6,-3,4,-5,6,1,9,-7,-1,7,-4,9,-6,-6,10,3,8,-10,-1,-1,4,-2,-1,4,-5,-5,3,-8,10,9,3,8,7,6,-5,-4,10,-4,6,-3,8,-9,-4,9,10,4,9,7,-9,5,-1,-5,-6,3,6,4,-4,6,-9,-1,-10,-10], dtype = "int16")#candidate|1701|(390,)|const|int16
call_1700 = relay.TupleGetItem(func_1499_call(relay.reshape(const_1701.astype('int16'), [3, 10, 13]), relay.reshape(const_1701.astype('int16'), [3, 10, 13]), relay.reshape(call_1694.astype('int8'), [2145,]), ), 2)
call_1702 = relay.TupleGetItem(func_1503_call(relay.reshape(const_1701.astype('int16'), [3, 10, 13]), relay.reshape(const_1701.astype('int16'), [3, 10, 13]), relay.reshape(call_1694.astype('int8'), [2145,]), ), 2)
output = relay.Tuple([call_1690,call_1694,const_1695,call_1700,const_1701,])
output2 = relay.Tuple([call_1691,call_1696,const_1695,call_1702,const_1701,])
func_1703 = relay.Function([], output)
mod['func_1703'] = func_1703
mod = relay.transform.InferType()(mod)
mutated_mod['func_1703'] = func_1703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1703_call = mutated_mod.get_global_var('func_1703')
call_1704 = func_1703_call()
output = call_1704
func_1705 = relay.Function([], output)
mutated_mod['func_1705'] = func_1705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_1780 = func_759_call()
call_1781 = func_759_call()
func_1055_call = mod.get_global_var('func_1055')
func_1056_call = mutated_mod.get_global_var('func_1056')
call_1819 = relay.TupleGetItem(func_1055_call(), 2)
call_1820 = relay.TupleGetItem(func_1056_call(), 2)
const_1857 = relay.const([[6.504277,-1.500755],[-9.946706,4.700076],[2.366830,0.832667],[5.843245,-1.905439],[2.692168,-3.955334],[-6.287663,8.816535],[-0.368178,5.294848],[8.332832,6.912248],[-2.698850,5.329868],[6.002237,7.537794],[-1.115794,0.192983],[3.271312,-4.609158],[1.682272,4.310121],[-9.642662,-0.300429],[4.921946,-3.727506],[3.539314,5.474551],[3.196020,-6.052990],[2.933518,6.597234],[-8.880831,5.451961],[6.980000,-0.143703],[3.031719,-6.997863],[6.906563,-4.586076],[5.480166,8.971764],[-2.223758,-7.929021],[-1.787223,-9.006383],[-4.523383,0.708596],[-3.638293,-1.546701],[-3.768587,-7.777498],[-5.113643,2.232453],[-2.928926,-7.795018],[-0.363713,-4.590947],[-1.310029,5.596913],[0.757618,-4.757379],[8.865970,-2.744173],[-3.024113,2.868087],[-4.343749,-0.569010],[1.296567,-1.801381],[5.266751,1.373979],[-8.360624,-0.923745],[-2.552063,8.954012]], dtype = "float32")#candidate|1857|(40, 2)|const|float32
bop_1858 = relay.bitwise_xor(call_1819.astype('int32'), const_1857.astype('int32')) # shape=(40, 2)
bop_1861 = relay.bitwise_xor(call_1820.astype('int32'), const_1857.astype('int32')) # shape=(40, 2)
uop_1863 = relay.log(const_1857.astype('float64')) # shape=(40, 2)
bop_1866 = relay.greater(uop_1863.astype('bool'), relay.reshape(bop_1858.astype('bool'), relay.shape_of(uop_1863))) # shape=(40, 2)
bop_1869 = relay.greater(uop_1863.astype('bool'), relay.reshape(bop_1861.astype('bool'), relay.shape_of(uop_1863))) # shape=(40, 2)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_1878 = func_1235_call()
call_1879 = func_1235_call()
bop_1881 = relay.logical_and(uop_1863.astype('bool'), call_1819.astype('bool')) # shape=(40, 2)
bop_1884 = relay.logical_and(uop_1863.astype('bool'), call_1820.astype('bool')) # shape=(40, 2)
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
call_1887 = relay.TupleGetItem(func_1329_call(), 3)
call_1888 = relay.TupleGetItem(func_1331_call(), 3)
output = relay.Tuple([call_1780,bop_1866,call_1878,bop_1881,call_1887,])
output2 = relay.Tuple([call_1781,bop_1869,call_1879,bop_1884,call_1888,])
func_1902 = relay.Function([], output)
mod['func_1902'] = func_1902
mod = relay.transform.InferType()(mod)
output = func_1902()
func_1903 = relay.Function([], output)
mutated_mod['func_1903'] = func_1903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_1925 = func_759_call()
call_1926 = func_759_call()
func_1434_call = mod.get_global_var('func_1434')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_1933 = relay.TupleGetItem(func_1434_call(), 0)
call_1934 = relay.TupleGetItem(func_1435_call(), 0)
bop_1967 = relay.equal(call_1933.astype('bool'), call_1925.astype('bool')) # shape=(10, 13, 11)
bop_1970 = relay.equal(call_1934.astype('bool'), call_1926.astype('bool')) # shape=(10, 13, 11)
output = bop_1967
output2 = bop_1970
func_1973 = relay.Function([], output)
mod['func_1973'] = func_1973
mod = relay.transform.InferType()(mod)
output = func_1973()
func_1974 = relay.Function([], output)
mutated_mod['func_1974'] = func_1974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1973_call = mod.get_global_var('func_1973')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2012 = func_1973_call()
call_2013 = func_1973_call()
func_1296_call = mod.get_global_var('func_1296')
func_1300_call = mutated_mod.get_global_var('func_1300')
const_2017 = relay.const([-2.159839,4.837417,-4.841461,3.892973,-2.309844,-2.854377,9.982181,-8.590166,8.277968,1.763471,7.879540,3.163307,9.792807,9.449274,6.608015,-6.204570,-2.440646,-5.010895,7.118494,-3.848738,3.502578,3.457877,-5.733348,-0.679621,-6.686268,-7.454874,-6.126833,9.805790,3.023359,5.077998,0.721928,-2.731362,5.431300,4.484338,-0.755485,1.386825,-2.112812,4.070780,-8.488312,-6.569698,9.592186,-6.200356,-1.568478,9.247916,-8.240860,4.352818,-1.689684,-9.250661,-8.975338,-0.754007,7.096307,-8.494929,-5.985080,-2.905907,-7.407319,-7.577609,-5.815001,3.340891,-5.209329,-7.630207,1.071484,8.051065,3.704080,-7.991678,8.370489,0.974535,-6.743206,-6.786694,3.013252,1.267114,3.160134,6.853149,0.003384,-0.928944,-5.309774,-9.701049,-5.530175,2.079653,6.995529,6.237225,6.707266,1.963330,6.190015,-6.298601,5.024744,-5.093665,2.697858,-3.905583,-0.940092,8.157208,6.053502,7.668013,9.530206,8.675201,-0.905680,3.923855,0.195242,3.922618,-8.094397,0.227538,5.310960,-3.075562,-6.439094,4.032073,8.409224,0.971180,6.375639,5.171616,4.209392,9.881954,2.834822,5.848243,-2.068531,2.095130,2.969909,-9.444742,-7.496413,7.250841,9.871423,-2.417836,4.158985,3.672188,-2.691103,6.776278,1.034211,8.061484,3.393585,-2.647045,4.759026,-9.139936,-5.656079,7.266766,4.008531,7.481229,-6.018952,-8.805166,3.344275,-7.169501,-2.463054,-4.025672,-2.157102,-8.807290,-5.069872,4.076839,5.228542,-0.027105,-2.446098,-2.326475,4.099683,-1.435009,7.586413,8.294591,-6.520624,-5.709832,-4.890354,6.897103,-7.040891,-4.284767,-8.379810,-6.233949,-7.568517,9.813391,9.036503,-6.651039,-2.933271,-5.605938,2.787550,-0.811228,7.060160,-2.743774,2.696217,-9.591649,-5.991291,7.367721,6.067760,-9.817325,-4.199473,-2.186451,2.151032,-8.151501,-4.680757,-2.004835,3.807849,1.574134,0.463150,-0.125340,5.767401,1.293001,7.233322,-1.445154,-3.400653,-8.516058,8.426685,-7.481627,-8.299713,-5.066578,9.060788,-7.320739,1.416391,1.370226,-9.658753,-9.468929,7.827978,6.204226,-2.112937,4.539614,-4.695774,2.043376,-0.615561,-1.366264,0.399547,7.659188,5.097414,0.304114,-5.984664,-8.686889,-7.324682,-4.953822,-6.556616,-2.039684,-0.617263,0.191948,-3.767205,-6.093073,0.233149,6.644395,8.502825,4.268379,-3.406541,5.581670,-9.539994,4.099572,-1.657281,-6.488419,2.948273,4.138902,-3.872635,-0.265261,-0.380214,4.861299,-4.207344,-8.269045,-0.068172,-7.703626,-8.907296,3.224682,4.200472,2.862093,-0.357892,-4.851103,-4.989470,9.427391,6.983008,4.207882,-9.206876,4.158292,9.922304,-0.432663,1.598068,9.551055,4.332159,-5.203036,1.240265,-6.177186,7.899359,-5.297642,2.177811,-5.854143,3.840555,-7.793129,2.396817,-2.073911,3.518613,-9.442233,-0.982524,-5.498477,-7.810508,-2.123476,-7.474572,5.315387,-7.731365,8.853986,-2.860230,-5.458107,-4.832033,5.589615,-0.684838,-6.004992,2.830791,-6.733295,-1.205773,4.395993,-8.176271,2.125246,-7.876341,-2.159466,-5.369066,-6.792373,-9.123756,-2.024694,8.972746,-5.060253,-6.700545,7.889259,6.342032,0.361500,-1.002386,-8.222078,-6.916954,5.138010,-8.293008,4.715956,-5.725111,6.383165,-5.827946,2.934094,-7.637342,5.765468,-1.367119,-4.477104,8.643696,-8.074492,-4.227475,-1.174367,-2.857565,3.484232,8.832619,4.090613,7.988038,-7.661736,-5.082282,7.187120,8.359620,2.471905,-0.367737,4.824495,3.590526,1.436801,-5.384763,7.647110,-1.583771,-9.780659,2.998678,4.826764,-1.834695,4.650909,3.158035,7.828131,7.297400,-8.629189,-7.022973,8.018561,0.681348,1.221611,-4.987907,-8.732157,-0.770591,2.638630,-0.194119,-0.971836,-1.619116,-3.820284,-6.342803,4.453734,-6.904238,7.433816,1.543891,4.643113,-4.961583,1.043281,8.456032,8.464256,-9.979713,7.644209,1.166877,9.690489,4.908464,6.532879,-6.755466,-5.299781,-8.973854,0.679675,-6.763342,5.266876,-6.277129,-7.355711,-9.314630,6.184497,-0.904065,-7.084310,-2.712574,0.010527,6.565459,2.794477,7.103106,-0.869275,-0.967345,-5.711349,-8.028890,1.211912,-3.164744,-7.786612,6.057571,6.257195,6.393894,3.590173,6.259936,0.521475,4.280208,-4.068064,-1.872422,-1.913105,0.493024,-4.521271,-7.049009,-7.616307,8.314254,-9.424730,-5.959414,-9.946784,1.993972,4.577671,-7.769704,3.475798,5.085643,7.407024,-6.666985,-8.692501,-1.954444,-9.249081,-4.694250,8.193736,8.939163,-8.482098,0.841665,5.610756,-5.896491,6.306260,-6.318320,-4.443410,7.083188,1.931351,-1.348966,0.160101,-9.594523,2.176351,-2.770338,-0.130848,-0.063513,5.458345,4.608108,-2.322266,6.944996,4.788159,-2.958749,6.528664,7.591283,-0.621969,0.448342,-3.032932,1.894066,-7.892314,-4.409152,8.415465,-4.322335,-4.880794,-4.159484,8.250313,-1.777877,7.237973,4.856839,-3.954571,1.520904,-3.317807,-8.547995,8.872100,-3.594365,2.730592,-7.896742,-2.893234,1.948743,8.308400,2.637631,9.542796,9.948570,3.416223,-1.836509,4.676632,-1.366687,-7.394579,-8.412238,-3.443466,6.011613,8.064997,-6.867685,-9.780295,-3.623551,2.772082,2.910685,3.760145,3.622625,5.250446,0.639531,-5.385575,-6.049218,-4.519807,-6.612757,4.870055,4.408193,8.182863,-0.295870,7.230586,1.119736,7.816468,-2.888899,0.582899,4.122877,9.276927,2.299657,-3.876856,-4.081195,-3.129259,6.671534,-0.479285,-2.330295,-4.448141,-1.976269,3.291385,7.929989,-5.615939,-1.535313,0.454712,-2.807641,-6.138663,-6.292364,2.455291,4.698409,6.328489,3.613083,8.971233,-9.595859,7.509415,-0.711577,-3.959391,1.497978,5.468462,3.197362,8.830692,7.839128,8.929088,-2.535905,-4.186035,4.361362,-9.117033,0.357070,-1.273652,9.066008,-7.104654,0.838703,9.055186,7.568653,-0.521991,-2.950449,-3.823044,5.409867,6.586786,-3.132684,6.890591,-7.667032,5.627398,-8.541500,3.685013,3.907145,9.280312,-4.369485,4.101847,0.590736,-6.547268,7.767940,1.815636,3.681370,-6.440993,-1.438650,3.820535,5.434976,-7.397612,-4.025555,9.849669,-4.947094,-8.963552,-7.840991,-1.690669,6.226262,8.259074,-9.292545,2.533379,1.002769,7.579329,-5.155517,-4.930918,5.916922,0.737652,-3.340108,6.083189,0.765716,-3.462762,3.806690,5.693567,5.551463,9.559663,9.534304,0.567893,-3.327539,-7.670070,3.216796,-0.307410,8.942665,5.862376,0.877007,-2.707442,-4.122822,-3.139637,-4.216158,6.523962,-5.136573,9.806037,6.508220,-2.688904,4.813307,-9.861164,-9.705981,-0.056306,-4.464525,1.637080,-9.458037,-0.676435,-3.877625,8.560504,-0.946861,0.621257,9.327764,-4.987862,0.370754,8.242959,0.287416,-8.098469,-5.045250,-2.116637,-0.913203,-3.136689,3.158440,7.496937,7.745092,-5.055007,2.718702,-1.310404,-8.321322,-8.602462,-4.944668,6.386834,0.410888,6.870886,-9.602129,4.420726,3.830512,6.894029,-9.901661,1.602722,3.964621,-0.840111,9.168143,-1.761384,5.443062,2.191547,-8.856522,-2.094655,-4.664065,1.728800,5.430179,1.526765,3.661130,3.632453,-3.219394,1.484699,9.946237,-5.403417,7.681350,-0.315040,2.160349,-1.489318,-6.503007,-9.415582,-2.564980,4.197820,-0.256136,-8.549267,-8.537104,2.302057,-3.238484,-3.115401,-3.778713,-4.111759,0.626437,4.859444,0.222374,-5.513103,-0.708142,-5.588621,0.847816,-0.371226,3.599317,5.851591,-4.150597,-6.824539,7.326011,-0.760750,8.323834,2.692751,-8.187092,-1.686015,-5.578139,0.208374,5.788202,1.948305,-8.923173,-3.640577,0.202034,2.652440,-8.927717,-7.343164,-4.437326,-5.488203,-3.460800,9.601497,-7.070198,-1.912192,-1.547618,9.666474,1.072956,-6.992839,-4.200752,3.514571,-6.571713,7.081433,-1.634528,1.232983,3.279780,5.336308,0.361956,-2.943470,-2.627428,8.280454,-7.641308,-9.551342,4.416489,2.362300,0.792557,6.362232,1.666784,-1.697572,3.215348,2.577903,7.145682,-8.463110,2.815043,-7.217098,8.847869,-9.575348,-7.043605,3.209986,-0.022541,9.917397,-3.623064,8.047686,-3.915404,8.984771,7.667258,-4.854790,9.946956,-5.186369,0.840463,-3.185890,-3.372617,-7.243221,7.537371,-5.326901,5.483797,6.674920,5.464208,8.558746,5.900571,8.659732,2.440522,5.190157,-6.699919,4.906039,5.514861,-0.490983,5.158216,-2.519851,-9.416624,-9.026515,9.920267,0.908141,-7.194119,-3.269997,-5.293251,3.961580,1.173228,-2.381032,-1.274129,4.574553,-8.373199,0.041887,-2.418324,-0.942039,-2.583138,-1.578481,2.837926,-9.345909,1.754722,7.400525,-1.320450,0.121686,2.847438,5.460529,-0.170347,3.735603,-0.085677,-0.817959,5.752286,-1.596405,4.661489,5.535355,-3.168460,-3.321747,-1.717679,2.394148,-8.264075,-9.628068,8.519040,7.732386,-3.992559,-5.748239,5.968068,7.613242,4.111848,4.694102,1.691784,8.500678,-5.936947,9.993741,8.222719,-8.745156,4.863528,-1.554105,-8.439398,-8.665641,-5.625899,-8.225226,4.817458,-1.256767,8.520145,4.769679,-5.190410,-1.261310,4.530822,2.728301,7.327424,-3.814194,-9.421170,9.050481,9.737205,9.703698,-7.927589,8.573709,-9.548816,-5.148535,0.486732,-8.038117,9.049192,2.282539,-8.333499,7.929589,-2.208788,-4.601036,-7.894792,0.067852,-3.624399,-3.638738,-7.650608,-3.829144,1.803370,-0.100523,7.585494,3.885938,-6.871225,0.950567,7.448856,-6.077552,-2.378934,7.668200,-1.831316,-6.719982,7.919236,7.703924,0.356305,-5.863493,-2.220950,6.539287,2.406678,-0.164842,6.061827,-4.366577,0.055515,-4.788538,-9.114540,-9.266084,9.677836,3.180941,2.108350,-5.829048,-6.528368,-8.946810,-6.418665,-0.910461,-8.034948,0.059461,-9.673428,-3.688881,-2.071802,-5.244466,-1.258934,9.926116,2.111307,0.341537,3.616940,8.482947,-7.960905,-0.235093,-9.631801,3.325320,-9.516846,-7.086903,-9.089226,-7.709649,-8.689813,3.713613,7.093586,-6.846891,4.650743,-6.604525,7.290182,0.871738,3.739764,-0.626072,-6.063069,-8.725028,-7.148718,-3.827648,2.512391,9.912760,5.639299,9.413047,4.015947,7.655156,2.992288,7.696350,-3.414680,-3.209255,3.526593,5.514445,-2.671916,-2.474913,-9.394552,-0.955895,8.578894,0.116477,-7.736305,3.157858,-5.656261,0.721011,-1.676664,1.358485,2.789709,-1.580680,-0.199059,-9.580402,4.965708,-1.714306,6.146487,-8.825126,-6.344638,9.554129,-0.689089,6.152260,-9.779230,-9.588649,0.687380,3.947478,6.965944,3.010736,1.866991,7.564796,-9.258560,-5.441529,-4.304992,-3.764177,6.087422,4.289432,6.765628,-6.050132,6.776377,-7.348477,-1.036592,0.611223,-2.369548,-3.886515,7.200006,-2.123445,2.400378,3.400938,1.010613,-6.774604,-0.966073,-5.238592,-8.109120,4.876361,6.281136,9.735032,1.541349,-1.353938,3.479244,9.138772,-7.441925,2.131359,-3.825076,8.437139,-9.470956,-3.988344,2.884345,-6.615353,-0.164620,-2.957889,-6.410772,8.615973,-1.188161,2.203598,-4.471103,-1.708973,-3.242259,-1.828069,7.801507,1.269975,-6.726322,-4.772989,-5.663259,3.629498,-3.686159,7.265116,5.652573,-1.049217,-8.097030,-0.461290,-2.234603,1.118800,-2.180434,3.225961,4.306246,5.879353,9.986244,3.420905,8.006472,-2.881543,-6.289033,-2.074770,-6.238090,-1.346910,-2.917179,-9.432043,8.757201,6.190583,7.357206,6.581570,4.101924,-5.545486,-5.867566,7.011786,5.895577,6.223537,8.303059,6.955566,-2.344236,-8.480705,-9.023469,7.546404,-1.113448,6.859301,-4.401114,-9.333404,-1.031498,-3.556520,-4.765763,-6.935437,2.836949,-5.885133,8.805331,-4.774418,7.749854,-0.773087,8.953138,7.389482,-9.595408,-9.063225,-2.935523,8.978325,6.172804,3.420824,5.720597,8.018583,-4.581384,5.359038,-4.384058,0.572324,-8.615538,9.342204,-3.848265,4.493340,-3.446569,7.545763,-0.946360,7.371275,-4.817660,9.259892,-0.495004,-1.785478,-4.356285,-1.795114,2.468651,-7.147554,8.078026,-9.457179,7.822771,-9.605697,7.167885,-6.860277,-5.445347,1.557157,-9.436207,-2.399617,-6.491054,0.449338,-2.979302,2.397433,-5.529705,2.380953,6.928958,7.198841,2.243263,-5.219548,7.812769,-0.501244,-1.665327,-2.083742,7.734810,7.832771,7.377222,-1.858750,-7.876463,6.300497,-5.960290,-0.401898,-7.925212,-1.679382,-8.389239,-9.939550,3.421908,3.106759,4.731200,-9.897722,9.925462,-3.027990,3.109364,-2.164157,-5.904838,-7.555349,7.837718,-7.209392,-1.781158,1.149370,-0.384978,-2.037722,9.534788,3.312394,0.594359,3.627860,-5.222709,8.445248,-8.561353,5.094011,7.286570,6.909211,4.593147,7.052486,-3.291460,-8.087385,-9.034550,-7.327542,-2.488763,-7.247254,-5.835069,-2.413055,0.827029,-7.377647,-2.245519,-4.798947,2.019411,-8.398337,-2.579083,-9.847751,-3.175085,2.792755,8.420738,-6.823937,9.054157,7.711572,-9.413655,-2.782258,5.496254,-4.843845,9.469121,1.601638,-8.962230,7.915399,4.353272,-9.330665,-7.631623,4.696547,5.341286,0.354485,-1.707698,-8.519525,8.254461,2.246332,0.119405,-6.628804,-8.819874,7.785505,5.410566,1.155495,-0.430831,-9.864445,2.426041,-7.348618,-7.747596,-3.820424,-5.819077,2.445041,9.206270,-9.459469,-0.789277,8.295008,7.900708,-6.370801,5.349128,4.897071,2.001694,-8.768634,8.145849,2.678391,1.315274,8.260589,0.141673,8.655651,0.822224,0.300844,-0.835801,-4.257071,-4.242479,-8.467248], dtype = "float64")#candidate|2017|(1280,)|const|float64
const_2018 = relay.const(5, dtype = "int8")#candidate|2018|()|const|int8
call_2016 = relay.TupleGetItem(func_1296_call(relay.reshape(const_2017.astype('float64'), [10, 16, 8]), relay.reshape(const_2018.astype('int8'), []), ), 1)
call_2019 = relay.TupleGetItem(func_1300_call(relay.reshape(const_2017.astype('float64'), [10, 16, 8]), relay.reshape(const_2018.astype('int8'), []), ), 1)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_2032 = func_1235_call()
call_2033 = func_1235_call()
output = relay.Tuple([call_2012,call_2016,const_2017,const_2018,call_2032,])
output2 = relay.Tuple([call_2013,call_2019,const_2017,const_2018,call_2033,])
func_2039 = relay.Function([], output)
mod['func_2039'] = func_2039
mod = relay.transform.InferType()(mod)
mutated_mod['func_2039'] = func_2039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2039_call = mutated_mod.get_global_var('func_2039')
call_2040 = func_2039_call()
output = call_2040
func_2041 = relay.Function([], output)
mutated_mod['func_2041'] = func_2041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
call_2074 = relay.TupleGetItem(func_1329_call(), 2)
call_2075 = relay.TupleGetItem(func_1331_call(), 2)
var_2080 = relay.var("var_2080", dtype = "float64", shape = (660, 2))#candidate|2080|(660, 2)|var|float64
bop_2081 = relay.greater_equal(call_2074.astype('bool'), relay.reshape(var_2080.astype('bool'), relay.shape_of(call_2074))) # shape=(660, 2)
bop_2084 = relay.greater_equal(call_2075.astype('bool'), relay.reshape(var_2080.astype('bool'), relay.shape_of(call_2075))) # shape=(660, 2)
uop_2095 = relay.rsqrt(var_2080.astype('float64')) # shape=(660, 2)
bop_2097 = relay.less_equal(bop_2081.astype('bool'), relay.reshape(uop_2095.astype('bool'), relay.shape_of(bop_2081))) # shape=(660, 2)
bop_2100 = relay.less_equal(bop_2084.astype('bool'), relay.reshape(uop_2095.astype('bool'), relay.shape_of(bop_2084))) # shape=(660, 2)
uop_2113 = relay.cos(bop_2097.astype('float64')) # shape=(660, 2)
uop_2115 = relay.cos(bop_2100.astype('float64')) # shape=(660, 2)
output = relay.Tuple([uop_2113,])
output2 = relay.Tuple([uop_2115,])
func_2116 = relay.Function([var_2080,], output)
mod['func_2116'] = func_2116
mod = relay.transform.InferType()(mod)
mutated_mod['func_2116'] = func_2116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2117 = relay.var("var_2117", dtype = "float64", shape = (660, 2))#candidate|2117|(660, 2)|var|float64
func_2116_call = mutated_mod.get_global_var('func_2116')
call_2118 = func_2116_call(var_2117)
output = call_2118
func_2119 = relay.Function([var_2117], output)
mutated_mod['func_2119'] = func_2119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2137 = relay.var("var_2137", dtype = "float32", shape = (7, 14, 15))#candidate|2137|(7, 14, 15)|var|float32
uop_2138 = relay.acosh(var_2137.astype('float32')) # shape=(7, 14, 15)
func_1422_call = mod.get_global_var('func_1422')
func_1425_call = mutated_mod.get_global_var('func_1425')
const_2150 = relay.const([-8,-6,-3,9,-10,7,-8,7,-8,3,7,5,-4,-7,-7,-4,3,1,8,9,4,3,-4,-6,-1,8,4,-2,-6,-9,-7,-6,-10,6,7,-5,3,5,-10,-10,1,-1,-3,3,1,-10,6,9,-3,5,2,2,-10,3,-9,3,4,7,8,-7,-6,7,5,10,-3,-9,-7,-8,-10,-10,-7,1,8,9,1,-5,2,-9,-10,-6,-5,7,6,2,-8,4,-7,7,6,1,1,-4,-10,10,3,-2,-1,-4,-6,-4,9,10,-5,-1,-4,-8,-8,7,-3,-7,-3,7,-10,2,7,10,3,2,-10,9,-5,6,7,-1,-10,-1,9,-6,8,5,-3,-1,-7,-6,-8,-9,-4,-6,10,-5,6,-3,1,2,-1,-5,1,3,-3,-3,4,3,8,-10,7,-9,9,-5,-5,-2,-5,-1,6,-4,-2,9,-10,-3,2,-9,9,3,3,-10,7,5,10,-10,-1,-5,-3,9,7,-4,-7,9,10,-4,1,1,8,2,3,6,8,9,6,-5,-1,-3,9,-6,3,1,-4,4,8,1,7,9,9,-7,5,-9,10,-7,-5,9,3,-3,-2,-10,-2,6,-8,-5,3,3,3,-6,-5,3,4,-9,-3,5,-9,8,5,1,8,-10,9,1,-7,-8,-10,6,2,-2,-8,-10,1,10,-1,7,8,-2,-3,2,2,6,-8,7,-8,7,-5,4,-5,9,-5,9,6,-2,-6,10,-4,-9,9,-4,-4,-10,10,-4,8,2,4,7,-5,-8,3,9,6,-2,8,9,-9,-3,-5,-3,-4,4,-8,-5,-2,-4,-3,-4,4,2,-2,-4,-2,-7,5,7,8,-7,-6,9,-7,5,-9,9,-5,-5,-3,-7,9,-3,-7,-4,-4,1,-3,-10,-5,-2,-3,10,-3,-6,-6,-5,-10,-9,-9,-10,-6,-4,3,-1,6,3,-4,1,7,-6,-4,-10,-7,9,-4,8,-4,-2,6,-3,7,-6,-8,8,6,-10,7,3,9,-10,5,-4,2,-3,-9,3,-4,-7,-5,8,1,2,-6,-1,-8,-9,-3,-1,-8,5,1,-3,8,7,-7,7,-5,-5,3,-7,9,2,-8,8,7,5,-3,5,8,-5,9,4,-10,-4,-7,1,-6,9,-8,-1,-10,5,7,-5,1,2,3,-5,-5,5,1,-7,3,-2,2,-7,2,-4,-1,-3,-8,-6,1,3,10,7,7,10,-9,-10,10,3,-1,-2,-5,-7,-2,-5,2,-8,-9,-6,6,-4,-2,7,-4,-5,-7,-7,2,9,-7,-4,4,5,-6,10,9,-8,-10,5,5,-1,7,-7,4,-2,10,-1,-9,-8,7,6,3,9,10,1,1,10,-10,6,2,-4,-3,9,-9,-6,6,-2,-7,4,4,5,-7,-5,3,-10,9,-1,9,6,-6,4,-4,3,-9,1,4,1,2,-8,-7,-3,-4,-1,-2,-1,-9,4,-3,-7,4,6,-3,-9,2,3,8,8,-10,-7,5,-3,-6,10,-4,4,2,-7,-6,3,6,9,-1,7,5,-6,-3,7,-5,-9,-1,-8,2,1,2,9,-1,3,7,-5,-8,-5,9,-2,-10,-3,5,-5,7,-8,1,8,-6,-5,-4,5,9,-5,-3,-5,10,-3,9,2,5,6,5,-9,-8,-6,-5,4,-3,4,-6,1,7,10,4,-4,2,-7,6,2,2,-6,-8,-1,-1,-9,4,-4,-3,-6,6,8,-2,7,-4,-9,4,1,8,-5,7,-6,1,9,-4,-5,-7,-10,-9,-6,-5,-7,-2,3,10,-7,-9,5,4,-7,3,9,-4,-8,6,-6,-8,-2,-1,8,-2,-8,9,4,-9,2,-3,-1,-1,-2,2,-10,10,9,-6,5,-4,-2,8,8,6,-9,-2,8,9,10,5,-2,-1,-8,-9,-6,8,8,3,3,-6,8,3,9,5,5,-9,-7,-7,-9,10,7,-5,-3,-1,-8,9,4,4,-5,-5,1,7,-6,4,9,3,1,-3,6,1,2,4,3,1,8,-10,10,6,-2,-3,2,8,-4,10,-6,8,2,-6,-9,-6,-3,-6,4,10,2,-6,7,-10,5,-5,-2,1,-2,-2,3,9,-2,10,-9,-1,-2,-5,-3,2,-8,10,-9,-7,-9,-3,5,-10,-9,5,9,-8,7,1,-2,-7,-9,2,2,-8,-6,-5,5,10,-6,-1,-2,-5,4,-6,-1,7,-4,8,6,-6,7,5,-7,-7,9,7,8,-10,-9,1,3,-10,6,-2,-3,9,10,-1,9,9,5,9,9,6,-10,-8,4,8,5,6,-8,8,-7,2,-7,3,-6,-7,-6,5,-1,-8,10,-7,-8,4,8,-2,1,10,-7,-3,-9,-10,-3,-10,-7,-9,4,5,-1,-6,9,3,-5,9,7,-9,-2,1,3,10,-10,10,-7,6,1,4,-1,9,1,10,-10,6,9,7,-1,-3,-8,-6,5,2,3,6,-4,-2,7,-2,-2,-10,8,-4,-6,1,-9,8,7,1,-7,-6,6,-3,3,-1,-6,5,-8,-4,-5,8,-1,9,6,10,1,-4,5,1,5,-2,-10,-6,7,5,-2,-7,9,1,-7,9,-8,-6,-2,-2,8,-7,-2,-9,10,10,-4,7,2,-1,10,9,-4,-2,2,1,-7,-8,-1,7,-10,-5,1,-10,-9,-3,2,6,7,-10,3,10,-2,-10,-7,6,3,6,5,-8,8,5,3,3,1,-10,-9,-4,-9,5,1,-5,-5,10,-6,6,2,-3,-5,7,-4,-8,-7,3,7,4,-1,4,-2,8,5,-4,-5,1,5,-6,3,9,8,-8,2,-5,-2,9,-3,4,10,4,4,5,-3,8,5,-8,1,-8,-7,-6,-1,-3,-3,-2,-2,10,2,-5,8,-1,-1,6,4,-7,-8,-7,9,5,6,4,-4,4,-2,10,-4,-3,-9,-9,4,1,-8,-4,10,-8,9,-4,8,10,9,-10,-3,8,-3,-5,2,2,8,-4,5,5,-3,8,7,1,-8,-8,5,2,-4,8,5,-5,-6,-1,10,7,-5,7,3,-7,-1,1,-3,-8,2,-3,4,9,-7,-2,-8,-10,-4,-4,-7,7,8,-5,-10,7,9,-8,8,-4,10,1,7,-1,-10,-7,6,4,1,-6,-4,-5,-5,-7,-2,7,1,2,-1,8,-7,-8,-10,-8,6,1,9,3,9,-6,-5,5,-10,3,-9,5,-7,-3,-7,-7,7,1,4,-7,-7,3,5,-5,4,-8,-10,-3,6,-5,6,-4,-10,8,-2,-8,-7,1,1,-1,-6,10,-4,5,8,2,4,7,-2,9,-10,-5,7,3,1,-3,-2,5,7,-5,1,-8,-5,8,-2,3,3,-8,-3,-8,-4,-3,5,2,9,-8,-5,5,5,-7,-2,6,-8,6,7,8,-7,8,1,6,7,2,4,2,-3,-4,-9,8,7,1,-10,-5,-9,8,3,10,2,2,9,3,2,7,-10,-1,9,-2,10,-5,-10,-1,-9,-3,-4,6,8,7,7,-9,7,5,-1,-6,-2,-2,-3,7,3,-4,-4,10,10,-10,-9,3,1,5,-4,-3,-1,-1,7,10,-6,6,-5,-2,6,-1,10,-3,1,-1,9,3,10,-6,-2,6,1,7,-10,8,-10,-1,2,-9,3,9,-7,-4,4,5,-6,-3,-5,-10,1,3,8,2,-9,2,5,6,4,9,1,4,-7,4,-1,-8,-4,-6,4,-2,-10,-7,-6,5,4,-7,-9,4,-10,-7,5,-5,-4,-1,8,-3,10,1,4,7,3,-5,-7,-8,5,7,-1,-9,3,5,-7,-8,-8,-2,-9,10,-3,4,-2,-6,-8,-9,7,-5,-9,-2,9,-1,10,-9,4,-1,-4,6,9,-5,7,7,-1,6,5,6,7,10,5,-6,-9,-6,6,-1,6,-4,-9,8,-5,1,10,3,7,5,-5,8,2,8,-6,2,4,-4,7,4,6,-4,-3,6,-2,-9,-3,-2,-3,-2,-7,2,8,-6,-9,9,-4,-4,9,4,-2,-10,-3,2,3,6,6,-3,5,-1,8,10,4,8,3,-7,-6,-9,-1,5,-5,-6,-1,7,-8,8,2,-9,-1,10,-10,10,7,-5,2,-2,4,-10,-9,-9,-7,5,5,6,1,-2,4,-7,3,9,5,-4,1,2,-1,7,7,7,-5,10,8,7,7,-3,7,8,5,-10,4,-8,-4,2,6,5,-2,-9,8,4,-9,6,1,9,5,-4,-3,3,7,9,7,-7,9,-3,10,-2,6,-9,1,-3,-7,-7,-9,-8,-8,-10,-10,-5,-10,4,6,1,4,-9,7,-3,-8,7,-3,-4,1,-7,8,10,2,8,-1,-10,-10,-2,-2,3,7,7,-6,-2,-2,8,3,-8,1,5,-6,9,-5,-4,5,-6,1,4,-4,-4,5,8,1,3,1,-6,-2,-4,-3,3,-8,-4,-2,-6,-5,3,-4,8,-7,7,-8,5,-7,8,-9,-2,7,8,4,-4,-4,-9,-9,4,-7,-4,-4,-6,9,-3,-2,-5,-8,-8,9,-1,2,1,-4,-7,-6,7,-3,-2,-6,1,7,7,-1,10,-9,-2,9,-2,10,6,-4,7,6,10,-4,10,-8,-1,-3,8,-1,5,-6,5,-10,-2,-3,-2,10,-1,-4,10,-7,1,-1,4,-1,-2,-5,1,-9,10,3,3,5,-2,2,-10,-2,-10,2,-4,10,8,-6,-3,-3,9,6,-1,-5,-1,-4,7,-4,8,-1,-10,10,-8,-8,-1,3,-9,3,1,5,-6,-5,-5,-10,-6,5,3,6,4,-10,5,7,4,5,8,7,9,7,-2,4,9,6,9,-3,5,9,9,-5,-6,10,2,-7,1,2,-2,-3,-10,-3,10,1,9,5,-8,3,-3,-7,2,4,10,9,4,3,1,-2,-3,-4,5,-2,-2,-6,-10,7,-8,5,9,-2,-6,-5,-2,-7,2,-9,3,-9,-10,9,9,-2,-9,7,-3,-8,-3,-5,2,1,-3,10,-6,2,-3,6,7,10,-6,-1,-5,7,4,2,2,-1,-8,5,-9,9,-8,-5,-4,-10,-10,-9,-1,-3,-6,2,-10,7,5,3,-10,7,9,2,5,-6,-2,1,3,8,-1,-1,7,-1,1,8,8,9,7,3,-3,10,5,-9,-5,8,-1,-9,7,1,-3,9,-6,9,8,-9,2,-6,-3,5,-4,-6,-4,-3,4,-8,5,-8,-6,8,10,6,-7,1,9,-7,-9,-10,-7,-3,-1,10,10,8,-7,-1,4,-1,2,-10,-7,6,2,-10,-2,-2,6,8,-9,4,-3,-5,2,7,-9,5,-7,-4,10,8,7,-3,-1,10,7,6,-7,-6,-10,-5,1,-6,2,7,-4,-3,4,-5,-7,5,-9,6,3,-6,-5,3,-10,6,9,-5,-8,-7,4,-9,6,-7,-4,-2,-2,-9,9,7,-1,3,-6,-4,-5,-7,2,10,-10,5,-9,-1,5,-10,-2,-6,-9,4,5,10,-10,9,-4,1,7,8,-7,6,10,8,4,6,1,1,-7,-8,-9,-10,7,9,-9,9,-9,-10,3,-1,-10,-2,-7,8,5,3,-2,-9,4,2,-6,-1,-6,-3,7,-5,3,1,-2,3,5,-3,9,-6,1,-6,9,-3,-6,-3,10,-1,7,2,1,7,3,2,2,-3,-8,-10,-6,-1,9,7,-1,-2,-10,-8,-2,-6,-4,7,8,7,-8], dtype = "int8")#candidate|2150|(2145,)|const|int8
call_2149 = relay.TupleGetItem(func_1422_call(relay.reshape(const_2150.astype('int8'), [715, 3])), 2)
call_2151 = relay.TupleGetItem(func_1425_call(relay.reshape(const_2150.astype('int8'), [715, 3])), 2)
output = relay.Tuple([uop_2138,call_2149,const_2150,])
output2 = relay.Tuple([uop_2138,call_2151,const_2150,])
func_2153 = relay.Function([var_2137,], output)
mod['func_2153'] = func_2153
mod = relay.transform.InferType()(mod)
var_2154 = relay.var("var_2154", dtype = "float32", shape = (7, 14, 15))#candidate|2154|(7, 14, 15)|var|float32
output = func_2153(var_2154)
func_2155 = relay.Function([var_2154], output)
mutated_mod['func_2155'] = func_2155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_2248 = relay.TupleGetItem(func_1201_call(), 0)
call_2249 = relay.TupleGetItem(func_1203_call(), 0)
uop_2263 = relay.acosh(call_2248.astype('float64')) # shape=(4, 11, 16)
uop_2265 = relay.acosh(call_2249.astype('float64')) # shape=(4, 11, 16)
output = uop_2263
output2 = uop_2265
func_2272 = relay.Function([], output)
mod['func_2272'] = func_2272
mod = relay.transform.InferType()(mod)
output = func_2272()
func_2273 = relay.Function([], output)
mutated_mod['func_2273'] = func_2273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1973_call = mod.get_global_var('func_1973')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2298 = func_1973_call()
call_2299 = func_1973_call()
var_2308 = relay.var("var_2308", dtype = "bool", shape = (10, 13, 11))#candidate|2308|(10, 13, 11)|var|bool
bop_2309 = relay.maximum(call_2298.astype('int64'), relay.reshape(var_2308.astype('int64'), relay.shape_of(call_2298))) # shape=(10, 13, 11)
bop_2312 = relay.maximum(call_2299.astype('int64'), relay.reshape(var_2308.astype('int64'), relay.shape_of(call_2299))) # shape=(10, 13, 11)
func_1422_call = mod.get_global_var('func_1422')
func_1425_call = mutated_mod.get_global_var('func_1425')
const_2324 = relay.const([[6,5,2],[-8,3,1],[3,9,2],[-3,10,10],[3,-6,6],[8,-3,5],[9,10,-7],[5,2,-7],[9,-5,6],[-2,7,-7],[-9,-7,10],[-8,7,10],[-10,7,8],[6,4,6],[-5,8,6],[7,2,10],[5,-10,7],[-8,4,-10],[-9,-2,6],[-2,-6,-4],[-8,10,4],[4,9,4],[6,4,9],[-4,10,1],[4,8,-6],[2,3,7],[-1,9,-9],[-5,-6,6],[-3,-4,-8],[9,-10,2],[9,-1,-6],[-10,-3,7],[1,-4,-1],[10,3,-8],[-9,-1,-6],[-7,8,5],[-8,1,3],[3,9,1],[-8,-5,5],[1,10,6],[-4,-1,1],[-6,-3,2],[6,2,-3],[-9,-3,3],[8,5,4],[6,-2,-2],[-2,-4,7],[1,-9,3],[3,4,-6],[6,-9,-2],[10,-4,-2],[7,-7,9],[7,1,4],[-10,6,4],[1,4,1],[-4,5,-5],[-6,-2,-3],[9,4,8],[4,6,-3],[9,-10,-3],[-10,-4,-7],[-3,9,-6],[-8,-4,4],[10,-1,-7],[-9,-8,1],[2,2,-8],[4,2,9],[-8,4,9],[6,-8,-10],[-3,1,-7],[-7,-4,6],[-8,3,6],[1,-9,7],[-4,1,-2],[-9,9,-10],[-2,7,8],[8,-4,7],[5,3,4],[5,-5,-2],[-9,-3,10],[-7,2,8],[9,-5,9],[4,-1,-1],[9,5,-2],[10,-9,-10],[-10,-1,10],[2,7,2],[-9,-1,3],[7,8,5],[-2,-1,-2],[10,-7,2],[-2,7,-2],[-5,-5,-3],[-8,10,4],[-6,-2,7],[-10,-6,10],[4,-4,9],[-10,-7,1],[-3,10,-7],[-1,-3,9],[-9,-7,-6],[4,-6,1],[-4,-10,-5],[-1,-1,2],[-9,10,7],[10,-10,2],[-3,-8,-7],[-6,9,2],[-8,10,7],[-7,6,6],[9,-1,4],[-5,-4,-6],[1,1,-10],[1,7,-9],[-5,1,-6],[-7,7,-3],[3,-8,10],[-7,-7,-10],[1,-7,5],[5,2,3],[4,-4,8],[-2,5,10],[-3,8,-7],[-7,2,-9],[9,8,1],[-1,9,-8],[3,10,9],[5,6,3],[4,2,-3],[-2,6,-6],[-1,-3,-2],[-7,-10,-3],[6,-2,1],[-8,5,-10],[4,3,-2],[-6,-7,3],[-2,4,-7],[1,-7,10],[8,3,-9],[-2,-7,-2],[3,1,-10],[9,7,4],[-2,-9,-9],[9,8,-9],[-6,-1,-5],[3,-4,-7],[-9,4,10],[1,-2,5],[1,7,7],[-6,10,-8],[-2,-2,-5],[9,-5,-1],[-1,-9,3],[4,-7,3],[10,8,9],[-4,9,5],[7,10,-9],[7,3,4],[-1,10,-3],[3,-4,-5],[1,2,-5],[3,-5,4],[-4,-5,-8],[-5,-9,-8],[-9,8,-5],[6,2,7],[-9,9,-3],[-7,5,-6],[-10,3,-5],[4,5,-9],[4,-8,5],[4,-6,-5],[10,-8,3],[10,-4,-5],[-6,-4,10],[3,9,2],[7,-8,-1],[-1,-5,5],[-2,1,8],[6,-6,4],[6,-2,9],[10,10,-8],[-1,1,10],[3,-9,-10],[4,-10,8],[6,1,2],[-2,5,-10],[-4,-2,8],[10,-3,-8],[7,-9,-2],[-3,5,-8],[4,-9,3],[-10,10,-1],[1,10,2],[7,1,8],[-6,-4,5],[-8,-2,-5],[-8,-2,-6],[-9,-4,-3],[8,-10,9],[-6,1,8],[4,4,-4],[-10,8,1],[7,-3,8],[9,-9,8],[-1,4,6],[9,-9,5],[3,-4,-9],[7,6,7],[9,1,-7],[5,-3,9],[3,9,-2],[-5,-10,-8],[-5,-3,6],[-4,-5,2],[-4,-1,7],[8,9,-2],[-10,6,8],[-6,-10,2],[10,8,1],[-9,-6,-3],[4,5,-9],[-4,5,-8],[5,-4,5],[-8,5,10],[5,-2,2],[6,-7,9],[9,2,3],[-7,-3,5],[10,-3,-1],[-9,-2,9],[-6,-10,-5],[8,2,10],[-1,-6,-7],[-4,-4,1],[10,2,-3],[-8,6,-2],[8,-7,-2],[-6,3,7],[4,-8,-8],[4,1,4],[8,2,1],[-7,6,9],[-10,-8,8],[-4,7,-9],[-10,-5,-10],[4,-2,-2],[-10,3,-2],[3,7,6],[9,6,-1],[-2,-1,-2],[7,-8,10],[-1,-6,8],[7,1,-3],[9,-6,-9],[-3,8,10],[-2,-3,6],[-10,-6,3],[6,5,4],[-4,-3,10],[-7,-5,-7],[-2,1,-1],[1,-8,-10],[2,3,-7],[9,-1,-2],[-4,-6,-4],[3,-3,-3],[3,-8,4],[-4,-5,-6],[-5,6,5],[1,-6,8],[1,8,-6],[-8,7,-2],[3,-7,-4],[-3,-8,-4],[-6,4,-1],[4,2,6],[2,-8,10],[-10,-5,-3],[10,5,6],[4,-6,4],[1,-9,-9],[-2,1,-10],[8,-3,-8],[2,-4,-7],[8,-2,10],[-4,-5,3],[-10,-7,-4],[9,8,7],[-10,-4,-7],[3,-4,2],[1,4,-10],[2,-3,8],[-7,-1,1],[-2,8,5],[9,-3,-5],[7,-2,3],[-8,-2,5],[10,9,10],[-9,10,8],[-3,3,2],[-2,5,-9],[-7,-5,-8],[7,4,-9],[-5,-7,-6],[-10,4,4],[3,-4,-3],[7,8,7],[10,-5,-9],[9,3,-10],[-10,5,-4],[-1,-8,-5],[6,10,-2],[3,10,-8],[-2,-4,-4],[-1,5,-10],[6,7,-4],[6,-4,5],[1,10,6],[2,-9,-1],[3,7,8],[8,-9,-2],[9,5,4],[1,-10,9],[-3,1,9],[2,6,9],[-9,1,-6],[-2,-1,-8],[9,-2,-2],[-2,-2,-6],[-7,-3,10],[-8,-3,-6],[2,-1,7],[9,1,-2],[2,8,8],[-5,4,9],[-1,2,8],[2,10,-6],[-5,10,8],[-8,7,-4],[-2,2,-8],[10,10,5],[4,9,-1],[8,9,1],[-1,8,9],[-2,3,-6],[5,-4,2],[6,-7,7],[-9,5,4],[-5,-8,-2],[7,7,8],[-2,-3,-9],[-6,-8,-9],[2,-3,-5],[-6,1,-5],[1,7,-3],[3,-9,2],[1,4,-2],[6,10,-4],[8,7,-5],[2,-6,6],[-5,5,-5],[-1,-6,6],[7,-1,-3],[4,-6,-1],[-7,5,-6],[-3,9,-5],[4,1,-3],[7,10,1],[-4,7,7],[-8,-2,8],[-5,-1,8],[9,3,1],[6,8,-5],[-1,3,8],[7,6,1],[9,4,10],[-5,-3,8],[6,1,2],[-2,-6,3],[9,-2,-9],[-9,-6,-8],[5,5,2],[2,-1,-2],[1,-8,-1],[3,-10,4],[-5,-8,8],[-1,-9,-10],[2,-9,-5],[6,4,-2],[-4,6,-7],[5,-5,-7],[1,5,4],[1,5,9],[-10,5,10],[3,-2,9],[-1,-3,9],[9,-8,10],[-8,-10,-2],[5,5,-9],[7,10,-9],[9,5,-6],[2,4,2],[3,-8,4],[-1,3,-9],[2,2,-3],[3,3,-4],[2,-6,7],[2,-7,3],[10,10,-2],[6,5,8],[-1,10,6],[-2,-7,7],[-8,3,9],[9,-4,3],[-10,-1,-6],[-2,7,10],[-3,4,-5],[-5,-1,-10],[-6,10,-8],[5,-1,-2],[5,-6,6],[-8,2,-9],[4,-10,4],[-3,-9,-2],[5,6,6],[-5,-1,-5],[-8,-6,-4],[7,-10,-3],[7,7,-9],[2,8,2],[-5,5,7],[-5,-3,-3],[-5,-7,7],[1,5,1],[-7,-10,10],[-9,8,-5],[5,7,-10],[-5,1,1],[-1,4,-8],[-10,8,10],[-3,-7,4],[-5,9,-7],[4,-3,3],[5,-6,-9],[-3,-1,-10],[-3,1,-5],[9,4,-6],[8,-2,-7],[4,-10,-2],[-5,8,8],[-7,5,10],[-5,-4,8],[1,-9,6],[9,-9,-10],[-7,-6,1],[7,6,9],[3,-6,2],[-6,1,-5],[3,-6,-4],[3,-3,8],[-4,5,-8],[5,-6,-10],[-4,-1,-4],[-1,2,-1],[-8,-8,3],[7,3,-5],[-6,-2,-1],[3,1,-2],[2,-3,-3],[-1,-7,1],[4,-7,-2],[8,3,10],[-4,-1,7],[-9,-9,3],[7,2,-2],[-5,-3,-5],[-3,10,-5],[-1,-3,2],[-10,-7,5],[10,4,5],[-6,-4,1],[3,2,-3],[4,-6,10],[7,10,6],[5,-7,-7],[7,-5,2],[2,-3,9],[-1,-9,1],[6,-7,3],[-2,-1,-9],[5,4,9],[-7,1,5],[-5,-6,3],[4,-5,-6],[6,7,10],[8,4,-7],[-7,-1,-4],[10,-3,4],[4,-7,-10],[-7,2,-6],[2,10,-5],[8,-1,10],[-7,7,-7],[-8,-10,9],[-8,6,4],[6,5,3],[-3,2,2],[-1,4,-1],[-10,3,-1],[-2,3,-1],[-10,-5,3],[5,-1,-1],[-8,-3,2],[-5,-10,4],[3,10,-4],[2,-8,-10],[-5,6,-3],[10,-9,6],[-7,-6,1],[8,-6,1],[3,-5,-10],[-3,-2,-4],[6,-6,7],[8,5,10],[-2,10,-1],[7,4,-7],[8,3,9],[-5,-1,1],[5,1,1],[-7,-4,-2],[-8,10,-2],[-10,5,10],[-1,8,-8],[-10,-8,4],[-4,4,-8],[4,-5,9],[1,8,3],[1,-3,-3],[-10,3,-4],[7,7,-8],[10,-2,8],[2,1,7],[-8,-5,9],[-1,3,-7],[10,-6,7],[-2,10,2],[5,9,-6],[9,7,6],[-4,-5,10],[5,-7,-6],[7,-3,-2],[-4,1,-5],[10,-4,2],[4,-6,4],[-2,5,-9],[6,-9,-2],[-4,-1,2],[3,-2,10],[6,9,-3],[-7,1,4],[2,-8,9],[-3,-6,9],[10,1,-6],[7,5,3],[10,-2,-9],[-3,-8,-2],[-10,-1,1],[6,9,-5],[-8,-6,-10],[-10,-8,-1],[1,-10,6],[-8,-8,5],[-9,1,10],[-3,-10,-1],[10,9,8],[-5,-8,7],[-6,10,-4],[-5,8,10],[-4,6,4],[4,-1,-1],[7,-7,10],[8,-1,-2],[-7,-7,-5],[-3,-2,2],[-6,-1,1],[7,10,10],[-10,-10,1],[5,10,-1],[10,3,2],[-9,2,-9],[-4,1,-10],[5,-1,8],[-6,-10,-6],[-1,-6,10],[10,8,1],[-6,-4,10],[8,-2,2],[-1,-5,-7],[3,-9,2],[8,-1,5],[4,1,-6],[1,-8,-3],[5,3,6],[-2,7,7],[-3,3,-1],[-9,8,4],[1,-8,-8],[-1,4,4],[-3,-6,-8],[-2,-7,-8],[-3,-5,5],[5,-7,-4],[1,-10,9],[-4,10,5],[-2,-10,1],[-9,-5,5],[6,-3,-2],[-9,-2,7],[-3,-6,-10],[3,-9,3],[1,6,8],[5,3,6],[4,-8,4],[-10,6,-2],[-8,-10,-7],[8,-7,-3],[6,-9,-5],[2,-2,-10],[6,5,-7],[-10,-1,-3],[-3,6,3],[-5,9,-10],[8,-8,4],[7,7,4],[9,10,-4],[8,-1,-9],[6,-7,-5],[3,-9,-4],[-8,-3,-2],[-8,2,-1],[-2,8,-5],[-10,-1,8],[-4,-1,-2],[5,5,5],[-8,-6,-3],[-9,-8,-8],[3,4,7],[-2,-4,3],[8,-8,-8],[8,-7,6],[-3,-5,-1],[-4,3,10],[3,-2,-3],[-5,-4,3],[7,10,6],[-2,-3,2],[1,10,-7],[5,-2,-8],[-1,7,-7],[9,-2,6],[5,8,6],[-3,7,5],[8,3,9],[7,4,7],[-4,5,-3],[3,10,7],[-1,-7,8],[10,3,5],[3,-4,-8],[10,7,-6],[-6,-10,10],[6,-2,8],[4,7,1],[9,-6,5],[-4,-3,-10],[-1,10,7],[-1,-1,-4],[4,-9,5],[-2,8,-7],[-1,-7,2],[-5,-6,-4],[-7,3,-9],[-1,7,3],[1,-6,3],[-1,-6,9],[6,1,-1],[2,-10,-9],[4,-2,-9],[-2,-10,1],[-4,10,-3],[-10,-6,-2],[5,-6,10],[6,5,-4],[-4,-9,7],[-10,6,-2],[10,9,-2],[3,-4,-6],[6,8,-3],[8,-9,2],[8,-6,3],[-3,-2,8],[-1,3,4],[10,5,-1],[-10,-4,9],[4,9,2],[-10,6,9],[-5,-7,-8],[10,-10,5],[3,-2,6],[-4,-9,-2],[6,7,-3],[-6,-9,-9],[-5,-4,-5],[-6,-6,-7]], dtype = "int8")#candidate|2324|(715, 3)|const|int8
call_2323 = relay.TupleGetItem(func_1422_call(relay.reshape(const_2324.astype('int8'), [715, 3])), 4)
call_2325 = relay.TupleGetItem(func_1425_call(relay.reshape(const_2324.astype('int8'), [715, 3])), 4)
output = relay.Tuple([bop_2309,call_2323,const_2324,])
output2 = relay.Tuple([bop_2312,call_2325,const_2324,])
func_2331 = relay.Function([var_2308,], output)
mod['func_2331'] = func_2331
mod = relay.transform.InferType()(mod)
mutated_mod['func_2331'] = func_2331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2332 = relay.var("var_2332", dtype = "bool", shape = (10, 13, 11))#candidate|2332|(10, 13, 11)|var|bool
func_2331_call = mutated_mod.get_global_var('func_2331')
call_2333 = func_2331_call(var_2332)
output = call_2333
func_2334 = relay.Function([var_2332], output)
mutated_mod['func_2334'] = func_2334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_2391 = relay.TupleGetItem(func_1902_call(), 3)
call_2392 = relay.TupleGetItem(func_1903_call(), 3)
output = relay.Tuple([call_2391,])
output2 = relay.Tuple([call_2392,])
func_2395 = relay.Function([], output)
mod['func_2395'] = func_2395
mod = relay.transform.InferType()(mod)
output = func_2395()
func_2396 = relay.Function([], output)
mutated_mod['func_2396'] = func_2396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2400 = relay.var("var_2400", dtype = "float64", shape = (15, 15, 6))#candidate|2400|(15, 15, 6)|var|float64
const_2401 = relay.const([[[8.067157,-7.335397,4.550312,1.312370,-8.452395,-6.239132],[5.459000,-4.201584,-8.779828,4.433919,0.806308,-1.930222],[9.400016,4.770364,0.446889,-9.284699,2.429792,-7.268638],[-9.327621,-8.539881,9.361093,-3.895083,-4.450855,-1.510868],[1.348067,8.681624,-7.627438,8.116696,-5.696292,-8.632738],[0.633037,6.257469,0.009083,8.013396,2.621838,-4.681255],[-8.327230,-8.407925,-6.842346,-5.782434,-7.064924,-8.081351],[6.255194,-0.798271,-1.961152,2.995505,0.780878,-1.693564],[-9.681919,-9.033086,-7.838065,3.406354,-4.169966,5.189860],[-0.721643,-6.453462,-8.858017,-9.652384,-6.877268,9.104502],[1.025456,-7.812206,0.556068,-1.390589,-3.111709,-2.462858],[8.040046,-1.919459,8.612061,-6.208339,1.644469,-8.537142],[2.047133,9.585017,1.743389,6.807437,-6.139545,2.699378],[-3.537649,6.701262,-5.430652,7.650127,8.107299,3.462137],[-6.588759,8.128163,-8.369897,5.810528,-5.952694,6.531530]],[[5.562523,-4.539690,-8.533066,-0.407824,6.342291,-1.724227],[7.981153,-4.531107,5.871320,4.917240,8.169693,3.800304],[-1.690277,-9.880416,6.151938,-2.540236,-4.391826,-7.520324],[-8.732224,5.359774,0.554791,3.341687,-4.036639,9.999060],[-2.616125,8.010554,3.599739,3.081579,9.380236,-4.122793],[-7.574186,9.624623,-3.292633,8.848838,-4.813365,-2.550786],[-0.438795,-4.645794,4.854844,-1.993172,-8.079141,-6.624549],[-7.761938,8.679502,7.337717,1.186067,-6.417874,-1.046600],[-6.564196,9.487692,-1.530777,-6.132333,-9.707635,2.484321],[7.324533,1.735253,6.699240,6.784453,0.507117,1.274700],[9.908705,-6.451460,-4.119273,-7.929982,7.074748,2.329430],[8.953245,-3.298535,0.048555,-6.810975,-2.540120,-1.626071],[2.624998,4.098288,4.963589,8.916317,8.454859,-2.158518],[-1.852432,1.687445,7.685372,3.948350,-8.531000,-0.154408],[-3.905511,-6.296750,-0.890948,-3.291608,2.723115,-9.572381]],[[2.487314,6.378281,-4.942828,-0.282737,-9.165310,-7.204908],[-2.360402,-8.793627,8.430883,-6.052684,2.190596,-0.664505],[-8.708423,1.225918,4.859631,-7.105792,0.726733,9.798106],[3.331074,-5.302956,8.686510,6.279590,9.001877,3.417529],[-3.813439,-4.745356,-4.697372,6.188764,6.379630,-6.704525],[0.801494,8.348880,-4.560249,-1.189880,-5.954220,2.155907],[4.532513,-9.716016,2.291035,0.496931,4.304140,2.533977],[6.047557,-1.406172,-5.400281,9.658112,4.619897,-4.983082],[9.860445,-1.580254,-1.806793,-1.012865,-8.079141,-4.986872],[-0.372420,-0.924032,1.931842,7.293107,-0.550052,5.235833],[3.742301,-1.044001,-8.472458,-7.775160,8.243698,8.928623],[0.570967,7.162133,-2.760357,5.588837,-0.394767,3.309099],[3.423319,-8.003753,-0.509642,-8.880230,-4.152175,9.874552],[-4.137234,-6.109683,-8.096148,9.707056,3.269469,0.892970],[-9.304769,-5.650871,-1.085948,-4.587264,4.223731,-6.463841]],[[-0.316125,3.547111,8.475840,1.831570,-6.665054,-3.012544],[-7.875198,-1.691057,-9.192596,9.882556,-4.848146,2.412619],[1.921962,6.531049,-5.934259,2.760105,-2.701073,1.763148],[8.007365,4.049435,1.151621,-9.403729,0.647398,8.413920],[-2.224907,-7.584511,1.706210,-6.748658,5.148256,1.645039],[3.041928,3.972046,8.809962,4.706476,0.650029,-6.500486],[-9.546732,-8.938280,-2.877133,-9.170997,3.922215,6.767033],[-0.706374,2.026474,0.825334,-0.269179,6.161726,9.662397],[-9.374753,7.772611,2.063120,-0.475534,-2.146981,-6.144796],[1.515409,-9.302585,2.741805,8.449303,3.465216,-6.997716],[5.948962,1.696032,-6.899399,9.565385,1.314157,-1.533060],[-8.303623,3.299420,-3.194371,5.874786,-0.642022,-0.346887],[-7.685790,4.776961,-1.351539,-1.704329,-3.664041,6.875618],[-0.414207,-7.120979,9.569319,5.400592,1.418587,4.693723],[-2.049320,7.284575,-6.064993,-6.170145,7.143917,-0.455430]],[[4.397933,1.484441,-5.623531,-8.971360,9.886732,-1.843044],[-8.991118,6.460519,-1.593339,2.897372,3.474474,9.386839],[-3.476082,-6.747199,-2.155581,7.973994,-6.148935,6.941285],[3.881548,9.689092,-3.928679,-6.771011,6.197502,8.754864],[-3.314445,-1.998974,4.610929,4.798283,-5.375754,-4.068325],[-6.635471,-1.333296,-6.896146,6.642397,-5.397432,6.291832],[-9.151698,7.547812,2.066865,-1.960952,5.125008,6.957775],[-5.668580,-6.927398,3.813437,0.784887,-8.301821,-9.924712],[-8.121383,6.498615,-7.956719,5.388079,-6.755500,1.998683],[5.317966,2.980552,-4.077466,-3.855797,5.573264,8.450809],[6.658499,-2.385159,7.366528,-8.670791,-2.156965,-1.056670],[-7.777178,8.756642,-9.766348,-8.807987,-7.610247,-0.093456],[5.095965,-4.945919,2.540135,1.878384,-5.405437,-1.410546],[-7.923096,4.516449,-4.282395,0.574712,-8.086306,5.382691],[6.917346,-9.119643,5.444397,7.374717,3.037386,7.203856]],[[2.283809,0.793243,-7.915122,7.921232,2.508360,8.059258],[-4.265446,-3.689397,-1.049246,1.518485,-0.937120,1.226299],[-1.437672,-6.396567,-8.148806,-9.971170,-4.625502,-9.345700],[-8.629522,2.706607,-3.854127,3.107476,1.045835,2.392651],[-9.829726,-3.340328,5.115401,-3.090535,-7.392969,6.829975],[6.809718,-5.395293,-2.950888,-2.337379,1.927776,-4.114008],[1.357296,-1.762118,8.218531,-4.527540,7.330951,-8.830913],[-5.794505,-0.254127,7.541299,-3.114556,-0.825620,-3.426140],[3.108104,6.227663,-2.507905,-4.176937,5.280846,4.286704],[7.263327,-5.819984,-8.997662,1.829418,-4.826122,1.747244],[1.940288,-4.302198,-1.002909,-4.098376,4.094619,-8.548304],[8.338340,9.580845,-6.739315,-2.890909,-1.437104,-5.773636],[3.607104,-9.501031,3.885232,-5.433188,2.939434,-8.057290],[7.769343,9.134438,-3.678564,7.255699,-3.433056,5.983978],[9.386563,-3.113031,-3.268007,-0.621690,-2.382407,0.431040]],[[-0.007006,3.345259,-4.854279,3.406466,-5.570450,1.506961],[7.086901,4.139991,4.749285,-1.242345,-7.784236,4.537928],[1.710629,-0.312096,-4.628765,2.767246,9.205430,-7.059766],[2.675667,-3.153148,-1.313752,-4.001379,-4.471235,0.334916],[-3.610689,-9.004761,1.740731,-9.670666,7.248185,-2.682083],[-8.367448,-2.909472,-5.715170,-7.674958,-7.838813,-0.487857],[-1.485467,-3.522275,-2.033206,-0.804640,3.716469,1.173402],[-2.559560,4.164351,-4.385351,5.477564,-1.846651,5.558033],[-9.873390,-0.260703,-0.922258,8.456735,3.855402,5.834872],[-6.995526,2.126491,-2.440665,-5.128348,-3.142310,-4.007176],[7.604383,7.635370,6.767901,8.225519,-8.264106,-6.633625],[-2.896670,1.230285,-2.985419,2.150880,6.074056,-6.815134],[2.372750,-5.235016,4.252350,-2.996187,1.210849,-6.776731],[-7.719336,-4.135993,3.103362,6.993538,9.512241,0.535467],[3.874633,-8.728398,0.442418,-8.762522,4.004746,-5.314086]],[[0.592496,9.600020,0.678240,6.653266,6.224652,-3.045285],[5.956133,-1.005979,0.675716,-3.949601,-6.271940,5.290032],[5.383854,-8.372951,-9.023100,0.144971,-3.949533,-8.206575],[-4.074743,0.008973,-0.650303,-3.482137,-8.207743,-7.462892],[1.423920,-2.679986,6.044070,3.661139,-6.094859,6.177775],[3.772654,-5.385765,1.009382,1.616314,8.300387,-3.494100],[-0.411402,6.141134,5.217318,-3.778370,-5.177314,0.770661],[-4.324254,-8.829428,-8.659221,-3.761853,5.234669,2.486934],[1.989789,-5.676784,-1.291463,-3.369271,-2.869317,9.795759],[1.050327,-4.086992,-9.978947,9.445697,-5.193097,5.121918],[9.347588,-3.789340,7.733609,-3.145062,-7.672289,2.316187],[1.072103,-1.065467,9.056001,7.385163,1.534969,-7.968739],[2.801684,2.349957,6.255501,7.058057,-3.404217,9.499618],[8.268230,-4.796874,1.992668,-7.654692,-0.718276,-4.587585],[-3.428138,-0.692316,2.232453,-9.523390,7.937904,-3.015285]],[[-9.135812,4.019024,-1.902996,-1.602232,-7.437527,4.033589],[-7.909175,-2.987644,-7.891204,-8.696612,8.328264,2.042276],[2.842155,8.129400,8.024805,-9.210131,2.493471,-0.337365],[-5.254235,-2.222255,6.583778,-5.822481,9.289164,-5.497462],[1.378646,8.540985,-2.352247,6.641220,-7.754709,-8.396575],[2.870629,5.330866,-6.585812,-9.542978,0.654793,-8.424964],[-4.627138,-0.264791,5.135649,-3.126714,-6.029938,4.762340],[-4.934655,-1.803642,-5.391196,-7.017040,3.662507,-5.379671],[1.259048,5.256784,7.231020,3.357644,-2.380884,-9.622334],[6.864564,0.652041,-6.961138,-7.021258,9.932618,5.828621],[7.467871,3.609956,7.555534,-8.672918,-6.196368,9.660249],[0.932116,-3.804862,5.762883,-8.646385,0.687188,-7.597073],[-5.991904,-8.089274,4.555818,6.526684,9.471013,-9.398977],[7.232030,7.010521,-0.684222,5.218398,0.034844,0.292760],[-2.987128,2.168831,4.276235,5.762001,-3.112476,-9.174695]],[[1.004058,-8.388276,-0.790038,-7.181395,-4.640441,-7.978679],[-2.481785,-6.703496,2.676936,-2.477456,4.662771,0.240493],[5.148263,0.551037,-7.849984,-2.109741,8.676410,-2.672141],[3.512372,8.114544,-8.470048,-8.644991,-7.203297,-6.337292],[-1.477098,1.110793,7.810833,6.593406,-6.158177,-2.647159],[-5.792612,-2.058372,-4.242176,4.710450,0.878525,1.961517],[-8.659523,9.037449,-3.618361,-4.464904,-2.567493,9.372665],[-2.602018,7.190373,0.872145,4.867725,-1.145446,7.518635],[-7.960453,-5.171402,-3.893778,3.852511,4.967620,0.063368],[3.856238,-0.856307,3.188541,4.613619,-2.805869,-1.107295],[-2.925716,9.285749,-3.768050,8.201039,-6.600262,-6.755858],[4.374586,2.070182,-5.769608,4.388573,4.091654,-6.142304],[0.335725,-4.505688,-8.541813,5.809028,9.452358,5.547985],[7.753703,-7.134539,-5.094759,-7.639521,2.280006,-6.384328],[-1.592295,3.569215,1.257902,6.377005,1.047961,5.698624]],[[-1.188973,-2.322424,6.437363,6.107689,0.798640,-1.721400],[6.846919,0.219948,1.631102,-8.208367,3.734788,5.720320],[2.028042,9.629298,-5.937687,-4.576180,2.917422,-1.883302],[-4.957012,-0.387049,-0.734080,1.565585,8.450349,-8.597219],[-0.330614,1.766488,-8.878214,0.966964,1.900983,-5.553051],[1.950551,-3.953568,4.401303,8.342480,4.175969,9.827602],[2.466477,8.390388,-5.431516,3.267001,-5.931602,-7.488705],[3.279267,4.682669,8.630097,-5.576082,-1.793724,3.287251],[-2.771352,-1.392098,-9.027822,7.826254,-2.827784,8.926532],[-3.062854,-2.394261,8.057551,0.522332,-2.714491,4.246711],[-3.135388,-0.804099,-4.977339,-2.047414,-7.680075,-3.113372],[8.181841,-5.530062,-8.096340,-5.809645,-2.544116,-3.503414],[2.373746,-8.464181,-7.850968,8.193923,-0.411206,1.188928],[-9.042358,3.473533,-8.551235,5.182142,1.860715,-3.595069],[2.545768,-3.029677,3.065956,5.041323,-4.391016,-7.060969]],[[8.546632,9.038812,1.205985,9.541245,-7.987104,-6.816983],[-7.704508,-7.700927,-9.391082,-5.257461,3.325540,7.510681],[3.495803,-4.394759,2.598533,-8.824773,-3.898597,-9.409726],[-3.565967,8.706690,-6.699213,-3.050982,-9.511611,-5.109887],[3.770999,-8.944867,7.083008,9.251740,3.107060,-7.336464],[-5.459027,9.004652,-2.253297,-1.267348,6.356854,6.006702],[3.205979,4.237053,1.662509,-9.221593,-7.809453,6.561941],[0.013100,-9.617888,-6.424204,2.305476,9.758234,-5.093235],[-6.048591,-5.872511,-2.804446,9.447382,9.856561,2.357656],[-2.489354,6.295858,9.979786,-8.527973,7.733518,7.147665],[2.069196,-6.746923,2.455015,-4.991368,7.351715,-0.329790],[-4.767488,-1.866977,-0.122487,-3.296990,7.406398,6.749324],[5.604187,4.017134,-2.978666,-6.936661,3.737690,-0.287728],[3.854683,-1.912745,6.065472,1.475447,-8.634050,-0.780098],[2.259498,7.024729,-8.838372,3.094595,-2.480420,2.078596]],[[4.727606,-1.994318,-3.242755,-0.622733,7.421963,4.123602],[5.033468,8.404877,-1.976139,-7.609104,-1.643361,-2.543363],[-1.205398,-9.897778,3.935220,0.403879,-3.313161,8.470067],[-7.291972,-3.642751,8.434098,-9.565418,-5.032205,-5.407258],[1.398100,7.655771,9.414724,7.289437,1.266405,-0.646003],[1.424105,-2.349158,-7.940293,-8.356212,7.616316,-1.014496],[-7.967664,3.524106,-7.515330,2.571538,-7.290004,-4.307552],[8.460510,7.548012,5.785974,6.127986,1.066198,-1.752507],[1.893480,-0.344052,-6.426909,5.480235,6.590566,9.013168],[4.552153,-8.604520,2.050092,5.936765,-3.823029,-2.420285],[-3.180209,-7.741245,1.029763,2.079415,1.709476,2.287477],[6.199205,5.577051,8.167855,-3.996173,4.150381,-8.458027],[7.119184,2.303427,-9.684865,-4.353433,6.355114,-8.282432],[5.594897,-3.592303,7.544561,-8.000515,-0.102596,9.684827],[2.174331,-0.513195,-6.362308,3.060238,-6.091326,8.648153]],[[-9.269502,-9.913838,-2.956440,-1.104381,-3.395605,8.035318],[-3.249279,-1.380392,8.561713,-6.749161,-3.047148,9.987669],[8.402284,-8.630169,-4.197844,-1.485237,1.907253,-5.077392],[0.315393,-9.562547,2.800612,6.185642,8.767578,6.751556],[-5.937462,6.021761,-4.678114,8.040977,-7.827771,-0.388409],[-9.605319,5.499865,0.140373,9.187692,0.879959,-6.883160],[5.150840,-9.070855,-4.287280,2.473848,-8.077219,3.198619],[-6.930442,-5.372423,-3.270455,0.172894,-9.094778,1.927132],[-5.166585,-1.820066,-3.801510,5.802423,3.714934,-2.047866],[8.834159,-2.681693,8.942797,-6.083071,-3.807334,-3.386532],[4.666008,2.059173,-4.398240,5.079659,-1.337290,-2.643225],[0.025590,-5.278844,-1.762003,-9.051657,6.496011,1.045120],[-2.570012,-9.920524,-6.200145,4.610013,-7.312951,3.290196],[3.336526,2.000852,2.112461,-7.700134,2.868882,3.407575],[-2.433970,1.294297,-8.822815,-3.812144,9.048949,6.670231]],[[7.386188,5.291409,-6.708395,-2.270334,-5.652293,2.499597],[-0.588511,-9.924153,-1.151279,3.816860,0.817318,-1.704386],[4.501189,-7.474291,9.188225,-4.826198,-1.118392,-5.706567],[9.833689,6.001149,2.689000,2.854063,-6.733923,7.467522],[9.146401,6.936773,-4.922738,-1.763124,-5.986411,-0.794708],[-1.456255,-9.288719,-8.278783,0.449933,-3.945643,1.172500],[2.459030,4.940556,-8.879974,9.151067,2.367608,-9.978110],[-3.622985,5.894395,3.919326,9.657979,-3.914796,5.988891],[-7.267675,-7.432326,4.976579,-7.048755,-5.523179,-0.427608],[5.030851,-6.628482,7.836665,-1.830308,4.456230,-6.489407],[2.596053,2.836579,-0.744812,-8.979987,8.658317,8.721870],[5.958904,-7.520144,0.790828,-9.076062,-4.151986,3.465237],[-8.939725,0.602766,4.457734,-0.160108,5.471603,-0.870688],[-5.697012,6.865189,-7.545924,-7.666880,-8.709809,6.263360],[-9.378972,-5.917994,8.701333,-2.074501,4.470870,7.792462]]], dtype = "float64")#candidate|2401|(15, 15, 6)|const|float64
bop_2402 = relay.divide(var_2400.astype('float64'), relay.reshape(const_2401.astype('float64'), relay.shape_of(var_2400))) # shape=(15, 15, 6)
uop_2406 = relay.log10(bop_2402.astype('float64')) # shape=(15, 15, 6)
output = relay.Tuple([uop_2406,])
output2 = relay.Tuple([uop_2406,])
func_2431 = relay.Function([var_2400,], output)
mod['func_2431'] = func_2431
mod = relay.transform.InferType()(mod)
var_2432 = relay.var("var_2432", dtype = "float64", shape = (15, 15, 6))#candidate|2432|(15, 15, 6)|var|float64
output = func_2431(var_2432)
func_2433 = relay.Function([var_2432], output)
mutated_mod['func_2433'] = func_2433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1973_call = mod.get_global_var('func_1973')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2676 = func_1973_call()
call_2677 = func_1973_call()
output = call_2676
output2 = call_2677
func_2685 = relay.Function([], output)
mod['func_2685'] = func_2685
mod = relay.transform.InferType()(mod)
mutated_mod['func_2685'] = func_2685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2685_call = mutated_mod.get_global_var('func_2685')
call_2686 = func_2685_call()
output = call_2686
func_2687 = relay.Function([], output)
mutated_mod['func_2687'] = func_2687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2715 = relay.var("var_2715", dtype = "float32", shape = (7, 14))#candidate|2715|(7, 14)|var|float32
uop_2716 = relay.sinh(var_2715.astype('float32')) # shape=(7, 14)
func_148_call = mod.get_global_var('func_148')
func_151_call = mutated_mod.get_global_var('func_151')
const_2719 = relay.const(10, dtype = "int8")#candidate|2719|()|const|int8
const_2720 = relay.const([[-6,-8,3,-4,2,-1,-4,10,1,3,8,-2,9,9,-1,-6,-4,-10,6,3,-3,-2,9,5,3,-1,1,1,-3,9,5,-3,-10,7,-6,-3,-5,7,6,-3,10,-9,7,3,10,6,-9,-4,3,-6,-10,-9,3,-8,-8,5,4,10,-6,1,-5,9,9,3,-5,-2,-8,-9,-7,-10,-7,-2,1,-2,3,2,2,3,7,3,7,-6,-4,-7,-3,5,-4,-10,-9,3,-8,3,6,-9,-2,-2,8,3,4,-5,5,-6,-9,5,1,-1,2,-6,9,-1,2,7,3,3,8,-4,-8,-3,9,4,-5,-6,10,-5,-1,-8,-10,-2,5,-2,-3,-7,9,7,-7,5,-7,-8,4,4,10,10,-6,-4,-8,-3,5,4,-9,9,2,-7,6,6,1,-9,1,-2,2,10,-4,-2,3,4,-7,-8,-8,9,-2,-6,-4,-3,-4,6,3,-7,10,-8,5,7,-5,-4,1,9,-8,-6,9,1,-4,-7,-2,-4,4,-5,3,3,-6,1,2,-1,-4,-7,6,-4,5,-7,-8,1,-2,2,-10,-3,4,6,-3,-6,-3,8,1,2,-5,-6,10,4,-6,9,-3,-6,6,3,-8,6,2,-1,-10,-10,1,-8,3,-7,10,9,-6,-10,-5,-4,2,4,-8,8,9,-2,3,-3,4,7,4,5,9,6,8,8,-2,5,-9,-7,-10,9,1,-10,-2,6,5,9,9,-9,-5,-1,1,-8,-1,-9,6,-6,9,-1,-5,8,2,-3,1,2,-8,5,-10,-10,-8,2,6,-10,-6,-8,1,10,-3,4,4,2,-8,-3,-7,-9,-1,-8,1,-4,10,7,-5,-5,-1,-2,7,-8,10,5,-8,2,-7,8,10,-6,-1,-4,-1,7,-7,6,-3,-1,10,10,-10,7,3,-7,5,-5,-6,5,7,-1,10,-8,-4,8,5,-1,-10,-2,4,-6,-3,-7,2,-8,5,3,7,-10,2,-6,-6,4,5,-9,-7,10,-7,-1,-1,8,-8,-3,4,-7,-3,-3,-10,-5,5,6,10,-2,-2,-8,1,9,6,-6,7,-7,6,9,9,3,-9,-3,-4,8,7,-7,1,-8,9,-9,7,7,6,-1,2,-8,-2,2,6,-10,-3,3,-4,-2,5,1,7,-5,-6,7,-10,-10,6,8,9,6,6,7,10,-5,3,7,4,3,6,-7,-7,-9,-7,6,7,-10,-1,5,10,-6,-5,-1,3,-8,-5,7,2,-4,5,6,2,-2,-5,-4,-6,8,-1,2,-2,-7,5,-9,-10,-5,3,-6,9,7,5,-9,-10,-4,-5,-9,7,5,9,-9,9,5,-5,-6,-9,8,-4,6,-5,9,7,8,3,5,9,3,8,-1,-9,7,10,3,-4,8,-9,9,4,-9,-3,10,-6,2,-1,7,10,9,1,5,-8,7,1,-3,-5,3,5,-2,6,-7,4,8,-9,-5,-6,-10,-3,-2,-4,9,-9,9,-4,7,4,-7,-7,4,2,8,10,-2,4,-7,-1,10,-9,-6,-2,4,-8,-6,-8,2,-10,5,8,-2,3,3,-8,-4,5,-3,-4,3,-10,6,9,-9,10,-8,-1,-1,2,8,8,-8,-3,-10,-7,-6,3,-6,-2,1,9,10,-10,6,-6,1,-6,7,-1,6,-9,5,-8,4,6,-2,7,-6,-5,-10,-7,-7,1,4,-10,-9,5,-10,-5,-3,-4,-7,-8,-7,-3,6,-7,3,-6,9,9,4,2,-5,2,9,4,4,-6,7,-9,1,5,-5,3,6,2,6,-3,2,-10,1,6,5,8,3,-4,-3,-10,-9,-4,5,-4,1,-1,-5,5,-2,-1,5,9,-9,4,-2,-2,-5,4,4,10,-7,8,9,-6,-4,-10,-8,-9,-1,-1,-7,-4,1,4,-7,-9,-5,-4,2,-7,-1,-7,7,-8,-1,3,-1,-10,-4,6,-9,6,3,8,4,-2,-4,3,-7,4,-9,-3,4,3,-10,-9,-5,2,-7,-5,-8,5,8,-5,-9,2,-6,8,-2,7,-1,10,-3,6,-5,-2,-8,6,3,2,2,9,10,-7,-6,4,-3,3,-9,8,2,8,7,7,-7,1,4,7,-7,4,-1,3,5,3,-7,-9,-3,10,-10,9,5,-7,1,-2,-10,-4,-5,6,2,-3,10,-9,-8,2,-5,7,10,10,-10,2,9,3,-2,5,8,-5,9,-1,5,6,4,-10,1,-10,2,-3,5,-6,-4,-2,-8,-1,3,5,9,5,-9,10,7,-3,9,2,3,-2,1,-9,1,8,-6,-1,8,-6,3,7,5,10,9,1,-2,-8,9,1,-9,-5,4,8,1,9,4,-5,7,5,9,-7,-3,5,-2,5,5,-6,5,1,10,4,-5,2,-6,9,5,8,10,-1,10,-4,5,6,-4,9,-6,-7,-2,6,-6,-3,10,10,-7,-4,8,-3,-8,6,-5,-5,8,5,-8,7,-3,-6,6,-5,-10,9,7,-4,1,6,-5,-9,2,4,-3,6,5,-3,10,3,6,-8,4,-7,-2,-2,-3,-3,-5,5,-9,-7,10,5,-7,2,10,6,3,-10,-6,3,1,4,-4,5,-7,10,-2,9,-5,5,-10,1,6,-8,2,-4,7,1,5,7,-10,-1,-3,-4,-1,4,-1,5,-6,10,4,3,1,5,3,10,-8,-8,1,-9,-10,-4,-8,8,9,2,-1,-9,10,-10,5,-4,9,5,-3,-10,7,-6,10,1,-2,-7,7,-7,9,7,5,10,-5,-4,9,-3,-8,3,3,-1,4,-7,-3,7,-10,-7,-8,-1,-2,-1,-8,7,-5,6,-4,-10,5,1,-2,2,-5,-8,-8,5,-3,10,3,7,-10,6,2,-4,3,-6,8,-10,-9,-5,9,-6,8,-4,-3,-9,-6,7,-10,4,8,2,-10,-8,-1,7,-3,-2,8,2,-1,-4,-7,-4,2,2,-9,-6,7,9,7,9,10,-8,9,2,10,-6,7,-4,9,-10,4,-7,-2,-10,4,-8,3,3,-6,4,10,-5,-2,-7,8,-9,-7,-3,5,-9,-3,3,3,-7,-10,-8,-1,-9,-3,3,-4,-2,-1,2,-8,-6,8,-6,7,1,-4,-10,-4,-9,-5,-6,7,2,5,-5,-2,4,2,10,-3,7,-2,4,5,-2,-8,-9,-8,-4,-4,-6,9,8,-1,-1,3,-4,4,-10,-3,-9,-3,-5,-1,4,7,-4,1,10,-2,8,8,10,-2,-2,5,8,-10,-8,2,-6,3,7,-2,6,9,-9,8,10,-2,-6,2,4,7,-4,-6,-9,-2,1,-5,-8,-2,3,8,9,4,8,9,9,-6,4,3,10,-4,-9,-9,5,-8,3,-10,8,8,-1,2,1,-2,1,-2,3,2,-7,3,-4,10,8,10,5,4,4,-5,5,4,7,4,2,-5,7,-2,-8,-8,4,2,7,5,-3,6,2,-1,6,10,-3,8,3,-3,-2,-7,1,6,-5,-9,3,-6,5,-5,-5,10,2,-10,-10,5,-3,10,10,-2,-7,5,6,7,9,2,-9,-3,-2,5,5,-6,2,2,2,-9,5,-10,-3,2,-1,9,-9,-2,-7,-5,-6,-1,-8,10,-7,8,-3,2,-5,2,-9,7,-3,-10,-7,3,9,2,6,-7,3,4,-4,-3,-3,7,6,-1,-5,1,8,-5,-7,4,3,6,-7,-3,1,9,3,-5,2,-9,-6,8,2,1,-2,-5,-8,-2,-3,5,-1,7,2,2,-7,10,-1,5,4,5,5,-1,-10,8,-8,-9,-9,4,8,7,8,9,8,3,2,-7,5,-9,-3,-8,10,-1,-4,2,2,9,7,-7,4,6,-7,2,-5,5,-8,10,-10,8,-7,-10,-10,-6,7,-1,-5,-6,3,2,-10,7,-2,7,9,10,6,2,-8,-2,-4,-5,-3,9,10,-6,-10,8,2,-8,1,-9,-5,-2,1,-10,-8,-6,-6,6,8,-8,-7,-2,2,-1,7,9,-3,7,-4,3,-1,-4,3,5,-4,-2,9,-9,4,-3,4,-5,2,2,-8,-1,-3,-6,-5,-10,5,-9,5,-5,-9,-2,-10,-1,8,10,8,4,4,-2,2,7,3,4,-5,-1,-7,7,-9,-2,2,2,3,5,-8,8,8,-9,-3,-1,10,-3,4,-6,10,9,-8,-4,-6,10,-6,4,-4,-5,6,5,7,-4,-10,1,8,2,2,9,-6,4,5,-6,-2,8,-4,-3,3,-1,8,2,3,-2,-1,2,9,-9,-5,7,-5,-3,-10,-1,4,5,-3,9,-1,10,-3,-9,-10,9,5,-1,1,-1,-2,3,6,9,-4,-5,9,-7,10,5,8,5,7,6,-10,8,-1,8,-8,-7,3,-7,9,-5,4,9,3,7,-10,8,4,-3,-9,-2,-10,-1,-3,7,6,3,3,4,-7,-6,6,10,1,4,-6,7,7,9,8,-4,-10,-4,8,-7,-9,-4,6,-2,7,7,2,9,5,1,-6,8,1,-8,-10,-6,9,-1,-1,-4,-8,-10,-6,-10,-7,-4,6,-10,4,6,5,2,-1,1,-7,-10,5,-3,-9,3,4,10,1,-6,9,10,3,8,-4,-6,3,4,-6,-2,-4,4,6,7,-3,2,-5,6,4,-4,4,-9,-7,-6,4,9,-4,-5,6,-8,4,-3,-2,-1,-2,5,6,-4,9,-6,-9,-10,-6,5,-4,1,3,-9,2,3,6,1,-4,-2,4,-5,-3,-7,-7,-10,-5,2,-4,5,2,1,6,7,6,2,-9,2,1,10,-10,-10,9,3,5,-1,-5,-3,2,-10,3,-8,-8,-4,-10,6,3,6,-10,-7,-8,1,1,-6,-6,-1,10,-1,10,7,8,-1,-3,-4,6,7,-2,-7,4,5,-10,9,8,8,5,-9,3,5,6,9,3,-6,-6,-7,6,10,-10,8,9,7,3,9,7,2,-3,5,-8,-2,-6,3,-3,-10,2,-3,3,-6,-10,-2,1,10,4,-2,10,5,5,10,10,2,-9,4,-7,-8,-7,3,4,-2,1,-1,9,7,-3,-1,8,-7,-8,-8,-1,-3,-7,-6,4,-9,5,-7,5,8,2,5,3,-6,-10,8,-1,2,1,-10,8,-9,-1,-5,2,-8,-3,4,-2,-6,7,8,7,7,-7,-3,6,6,-10,-6,6,-7,-7,-8,-5,3,-8,-9,10,3,1,-2,7,8,1,-10,-8,-10,1,-3,-2,-6,7,7,1,5,-7,-1,-5,4,3,-6,2,-7,6,9,6,10,1,3,9,-4,-4,-3,-5,8,-2,10,-2,10,7,-4,5,8,-3,-7,-8,-1,9,-5,2,4,-8,1,-3,6,10,-5,-5,-8,4,1,10,6,7,-4,5,-6,-6,2,7,9,9,-10,-9,-5,8,6,-9,5,-4,-4,9,-1,-6,-4,3,2,-9,8,-3,-10,-8,-6,9,-2,2,-3,7,-8,6,-8,9,-1,-2,-6,-2,5,5,9,-7,-8,-9,2,4,1,-3,-1,8,-1,-10,7,-7,6,-6,-5,-5,1,-1,-10,-4,7,9,-10,-9,-9,-9,-5,-9,-6,3,9,4,4,5,-4,-6,-8,8,-3,-8,8,-7,4,3,10,-5,5,-8,-7,-2,4,2,2,10,9,-6,-7,-1,10,3,9,8,7,3,-3,-7,-3,-8,10,-10,6,-7,10,4,-3,9,-6,6]], dtype = "int8")#candidate|2720|(1, 2145)|const|int8
call_2718 = func_148_call(relay.reshape(const_2719.astype('int8'), []), relay.reshape(const_2720.astype('int8'), [15, 11, 13]), )
call_2721 = func_148_call(relay.reshape(const_2719.astype('int8'), []), relay.reshape(const_2720.astype('int8'), [15, 11, 13]), )
output = relay.Tuple([uop_2716,call_2718,const_2719,const_2720,])
output2 = relay.Tuple([uop_2716,call_2721,const_2719,const_2720,])
func_2729 = relay.Function([var_2715,], output)
mod['func_2729'] = func_2729
mod = relay.transform.InferType()(mod)
mutated_mod['func_2729'] = func_2729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2730 = relay.var("var_2730", dtype = "float32", shape = (7, 14))#candidate|2730|(7, 14)|var|float32
func_2729_call = mutated_mod.get_global_var('func_2729')
call_2731 = func_2729_call(var_2730)
output = call_2731
func_2732 = relay.Function([var_2730], output)
mutated_mod['func_2732'] = func_2732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1434_call = mod.get_global_var('func_1434')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_2734 = relay.TupleGetItem(func_1434_call(), 0)
call_2735 = relay.TupleGetItem(func_1435_call(), 0)
output = relay.Tuple([call_2734,])
output2 = relay.Tuple([call_2735,])
func_2740 = relay.Function([], output)
mod['func_2740'] = func_2740
mod = relay.transform.InferType()(mod)
mutated_mod['func_2740'] = func_2740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2740_call = mutated_mod.get_global_var('func_2740')
call_2741 = func_2740_call()
output = call_2741
func_2742 = relay.Function([], output)
mutated_mod['func_2742'] = func_2742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
call_2837 = relay.TupleGetItem(func_801_call(), 3)
call_2838 = relay.TupleGetItem(func_803_call(), 3)
output = relay.Tuple([call_2837,])
output2 = relay.Tuple([call_2838,])
func_2851 = relay.Function([], output)
mod['func_2851'] = func_2851
mod = relay.transform.InferType()(mod)
output = func_2851()
func_2852 = relay.Function([], output)
mutated_mod['func_2852'] = func_2852
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2879 = relay.var("var_2879", dtype = "float32", shape = (8, 7, 13))#candidate|2879|(8, 7, 13)|var|float32
uop_2880 = relay.tan(var_2879.astype('float32')) # shape=(8, 7, 13)
output = relay.Tuple([uop_2880,])
output2 = relay.Tuple([uop_2880,])
func_2894 = relay.Function([var_2879,], output)
mod['func_2894'] = func_2894
mod = relay.transform.InferType()(mod)
var_2895 = relay.var("var_2895", dtype = "float32", shape = (8, 7, 13))#candidate|2895|(8, 7, 13)|var|float32
output = func_2894(var_2895)
func_2896 = relay.Function([var_2895], output)
mutated_mod['func_2896'] = func_2896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2395_call = mod.get_global_var('func_2395')
func_2396_call = mutated_mod.get_global_var('func_2396')
call_2912 = relay.TupleGetItem(func_2395_call(), 0)
call_2913 = relay.TupleGetItem(func_2396_call(), 0)
output = relay.Tuple([call_2912,])
output2 = relay.Tuple([call_2913,])
func_2921 = relay.Function([], output)
mod['func_2921'] = func_2921
mod = relay.transform.InferType()(mod)
mutated_mod['func_2921'] = func_2921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2921_call = mutated_mod.get_global_var('func_2921')
call_2922 = func_2921_call()
output = call_2922
func_2923 = relay.Function([], output)
mutated_mod['func_2923'] = func_2923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_2941 = relay.TupleGetItem(func_1703_call(), 2)
call_2942 = relay.TupleGetItem(func_1705_call(), 2)
var_2943 = relay.var("var_2943", dtype = "int8", shape = (2145,))#candidate|2943|(2145,)|var|int8
bop_2944 = relay.bitwise_xor(call_2941.astype('uint64'), relay.reshape(var_2943.astype('uint64'), relay.shape_of(call_2941))) # shape=(2145,)
bop_2947 = relay.bitwise_xor(call_2942.astype('uint64'), relay.reshape(var_2943.astype('uint64'), relay.shape_of(call_2942))) # shape=(2145,)
uop_2959 = relay.rsqrt(call_2941.astype('float64')) # shape=(2145,)
uop_2961 = relay.rsqrt(call_2942.astype('float64')) # shape=(2145,)
uop_2962 = relay.sigmoid(var_2943.astype('float32')) # shape=(2145,)
func_2894_call = mod.get_global_var('func_2894')
func_2896_call = mutated_mod.get_global_var('func_2896')
const_2969 = relay.const([1.132211,1.560166,-5.547553,2.900739,-9.055112,0.191370,8.391371,6.445966,-5.213360,-1.096463,8.501606,3.347970,-8.380875,-4.515394,2.968901,8.396868,6.270529,4.421362,4.959935,-6.084928,-1.927806,-8.791656,0.658478,1.383205,-4.935215,-0.971506,-8.658961,2.947871,-2.059625,6.074872,1.192602,-1.432142,7.112054,-3.039098,-1.457329,0.598513,-0.699074,-7.005621,1.671205,9.844986,0.048406,4.714352,6.421077,3.588643,-2.271021,-3.595740,1.708889,0.617340,-3.174739,-9.946587,-6.436277,1.950174,9.351196,-3.581366,-5.931081,-7.471172,3.365622,3.988054,-9.549097,-8.966396,8.231414,-4.445172,4.016721,-1.056192,3.407191,-6.606415,-3.358732,-8.897007,0.307009,-5.431222,4.954512,-1.952784,1.152168,8.170539,-5.818139,-0.555231,-8.266002,-9.603207,-9.062010,-7.293113,6.725677,4.245486,-8.646412,5.585144,-3.561014,5.688716,1.113973,9.454849,-0.291503,-9.177304,-1.654681,-3.378672,-7.766024,1.923265,7.580534,-2.174552,-6.779264,-4.395440,-3.428183,3.623050,-7.930431,-2.593876,-3.224138,-1.690419,-8.386642,1.663050,3.222006,-8.020117,-2.861065,3.895879,1.789272,6.052412,6.968628,-6.531407,4.826185,4.158469,2.112440,3.533970,7.379977,-9.215743,2.264145,-2.608203,1.959931,-7.117626,-0.931957,-9.817908,3.489908,-6.981983,7.522368,-0.732130,-1.040856,-7.217227,2.771739,7.041513,4.335824,8.834575,8.161293,-9.393149,-4.987673,-2.271133,-0.561469,-9.443281,-3.050572,-1.076518,9.795753,7.459274,-4.035785,9.857750,6.966867,-1.820491,-1.452139,3.327446,-8.411534,5.959289,-1.113626,5.849116,-5.430073,2.537720,-0.445079,-9.903441,-3.106020,8.149763,-9.352953,8.133009,5.120316,-1.897036,7.400958,1.065377,4.511274,-3.945263,5.030070,-3.674627,3.623570,-6.001991,-6.361698,5.874529,-0.295293,7.783132,-4.405765,2.268335,9.056775,3.591164,1.941684,-4.241768,5.254022,3.269658,-9.710866,-7.478169,0.378394,-5.284360,-5.338912,-3.620294,-9.120005,0.516018,-5.087183,9.369535,-0.766905,-8.665912,3.974726,1.608352,4.568894,7.362208,-2.686437,5.527746,9.834701,6.129244,-8.450194,-2.067453,-3.397007,6.905822,-5.753876,-7.138446,1.219173,2.204987,2.734329,-1.449182,9.366507,-1.755929,8.275449,8.725017,4.997657,-2.464326,-1.372352,6.594957,-4.348847,-4.732632,0.172448,-2.065617,0.784139,3.281018,-6.850743,-6.490731,-9.507020,1.262276,-6.016437,-6.403309,-3.131933,4.151103,0.510083,0.257003,8.245214,4.713855,-2.665259,-6.576474,6.148644,-6.139496,3.701724,1.405299,8.055226,8.677437,8.388760,-4.784267,0.036016,-8.502105,-2.151159,-5.724497,4.902178,-0.217144,4.866794,-5.282777,-0.055277,-1.750712,3.377971,1.806411,4.166439,-0.650934,-6.693277,-3.201130,9.137331,9.779995,-5.485561,4.116191,0.240230,8.388127,-0.861392,8.085430,-6.236608,-4.273122,0.773368,-8.949523,4.195952,5.459069,5.724863,9.804801,-9.616555,-3.318751,-2.785839,5.344028,3.976030,8.467193,-2.555287,9.988975,-1.975285,-2.604653,7.067944,-1.272506,5.591479,3.904712,1.956454,8.256319,8.580723,-3.036644,-3.399886,7.439821,-3.715227,8.514629,5.830432,2.651028,7.280179,1.867329,9.460741,9.533210,3.755454,7.442292,9.824675,-1.112140,4.571093,-5.648517,-3.507988,4.871822,-0.883560,9.220336,3.641261,-8.996051,-1.548769,-9.377789,8.528874,2.427868,-2.869104,-2.196286,8.857610,-5.754974,4.973456,-1.690792,-3.872757,4.430795,2.767077,-1.189864,0.411497,9.318808,-8.448861,3.654419,7.291609,-8.491351,-6.790868,5.995412,0.162904,-7.147537,-3.083369,5.014492,-3.908359,-4.138684,8.330275,5.376174,0.066775,7.889939,-6.230809,0.238268,4.634335,2.030235,-6.352302,3.276250,-4.021691,7.354383,7.502691,3.423314,4.023913,9.483098,-5.223541,2.552756,1.031821,6.191505,-8.293253,9.242779,-9.433562,4.128576,4.053850,-8.314257,-9.163656,-3.280078,-5.215637,6.166597,4.539486,7.945381,7.992945,9.234297,1.139201,-8.914690,-8.477616,2.590629,-9.112522,6.624170,3.420926,9.573436,7.973718,9.670195,2.875442,7.927716,7.313292,-0.383138,-6.723627,5.432057,-3.776829,8.023594,0.852166,1.030008,1.251737,2.588320,7.673912,-4.971990,5.202747,-2.798792,-1.609956,2.090896,-1.310596,1.467621,-8.219311,-2.850392,-9.107032,4.079960,-2.619380,-1.537298,9.283203,4.869381,-2.335673,-9.095989,9.786655,8.245127,-1.304865,-5.177194,-8.126426,9.754511,-4.706795,-2.187137,3.752420,3.838605,-5.481955,0.871567,2.523818,-8.634622,-4.651082,8.897585,-4.261102,-7.526860,-4.882289,0.133227,-9.562105,0.085466,1.153896,8.809950,4.269351,-2.162874,-4.578803,2.315574,-0.021991,-5.713140,-2.529074,1.756355,-0.597635,-5.382955,-4.553748,3.869947,-0.060067,4.968147,-3.951545,7.069580,7.967640,-0.287085,5.477175,-6.325051,0.841753,9.444699,-8.159504,-8.617885,-3.270225,0.953481,7.813970,5.749981,8.157818,4.460726,5.651602,2.711605,-6.649763,3.029409,-5.089110,-6.053131,-1.115179,3.020671,-0.267110,0.185916,-8.490601,8.664491,9.667118,-9.437854,3.891015,2.931625,-8.394681,-3.885517,-5.241181,-4.835274,0.869899,-5.073989,-6.014434,-7.722041,-0.354661,3.218892,6.240553,-3.589373,5.101341,5.773740,-4.287961,-2.404751,-0.512166,2.181595,-1.725871,4.333263,-7.798328,6.995031,0.713407,2.576567,9.092822,3.139362,1.278612,9.195863,-6.582012,-4.090036,3.247713,1.785660,7.950457,-9.409673,-5.099208,6.327175,-3.515241,-9.731066,-5.723301,7.212488,-4.989587,-3.305037,-1.418013,7.284900,6.714726,3.838749,-1.647589,-8.171712,9.967724,4.717351,-3.334546,5.201591,1.406546,-1.089612,5.217580,3.380966,-6.658467,-5.824413,9.505886,6.788868,8.185199,-5.304368,4.813571,4.750569,5.074848,7.986853,6.697402,-5.863608,-6.755450,-0.681513,-1.886580,2.468392,-5.631159,7.513913,9.869136,-5.576404,8.042781,-6.872052,0.293981,-0.908294,-3.725900,-3.393478,-0.658725,-6.308857,8.854029,-0.488924,-9.887680,4.345984,7.831802,7.305660,0.867488,7.444042,-2.599340,-5.263177,7.116380,-2.506314,-6.502645,4.608315,-2.274270,5.185532,4.770863,2.369986,8.338626,-6.743965,-0.179909,-5.449314,4.736707,-6.604910,9.732706,1.413723,7.569841,7.957611,-8.720944,-5.776201,-6.250126,-7.897113,-8.761767,-3.593937,-1.282996,-9.803172,-9.261395,5.232520,9.871430,4.656779,-7.379587,3.828736,-0.965340,5.169409,-2.399557,0.852154,3.175655,-1.411693,-5.968768,9.803006,3.313562,7.987933,-8.262459,2.277974,-6.080826,1.946754,1.300139,8.178367,3.717129,-9.513536,-5.730208,-5.956452,4.891926,6.031914,4.604032,1.964646,3.210171,-0.609785,5.761811,8.040975,-0.374330,-2.376875,0.794162,-2.464243,-4.217611,-4.336247,-0.672221,-5.909955,7.568564,1.571206,-0.153808,2.946380,7.112369,-9.119785,3.318888,1.269238,-5.908857,6.370102,3.469697,-0.766967,-0.749206,-2.672744,4.107603,8.268355,1.194773,-2.686942,3.734595,5.283106,4.036653,4.260474,0.594612,2.706619,-6.315144,8.669800,-9.250762,1.075273,6.236556,7.608766,-2.792665,7.226479,-2.873430,5.169592,-6.496249,-4.176118,-0.118476,-2.674579,-2.023069,3.295289,0.093769,-2.753105,-3.089157,-5.487316,-2.468135,8.646730,-4.213659,-8.863854,-7.601852,-6.324995,-3.377740,-0.694680,-4.325777,-2.472768,-6.277747,2.107328,-6.801258,2.462525,4.681741,-2.661990,-5.716206,-2.878309,1.730934,7.350401,1.228395,-3.303733,-5.046820,-4.545928,1.126737,-6.973493], dtype = "float32")#candidate|2969|(728,)|const|float32
call_2968 = relay.TupleGetItem(func_2894_call(relay.reshape(const_2969.astype('float32'), [8, 7, 13])), 0)
call_2970 = relay.TupleGetItem(func_2896_call(relay.reshape(const_2969.astype('float32'), [8, 7, 13])), 0)
func_1434_call = mod.get_global_var('func_1434')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_2982 = relay.TupleGetItem(func_1434_call(), 0)
call_2983 = relay.TupleGetItem(func_1435_call(), 0)
uop_2988 = relay.sin(uop_2962.astype('float64')) # shape=(2145,)
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
call_2990 = relay.TupleGetItem(func_801_call(), 2)
call_2991 = relay.TupleGetItem(func_803_call(), 2)
uop_2992 = relay.asinh(uop_2959.astype('float64')) # shape=(2145,)
uop_2994 = relay.asinh(uop_2961.astype('float64')) # shape=(2145,)
func_2331_call = mod.get_global_var('func_2331')
func_2334_call = mutated_mod.get_global_var('func_2334')
const_3004 = relay.const([[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[True],[True],[True],[False],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[True],[True],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[False],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[True],[True],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[False],[True],[False],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[True],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[True],[False],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[False],[True],[False],[False],[True],[True],[True],[False],[True],[False],[True],[True],[False],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[True],[False],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[True],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[False],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[True],[True],[True],[False],[False],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[False],[True],[True],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[True],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[True],[True],[True],[True],[True],[False],[True],[True],[False],[False],[False],[False],[True],[False],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[True],[False],[False],[False],[False],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[False],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[False],[False],[True],[False],[True],[True],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[True],[True],[True],[True],[False],[True],[True],[True],[False],[True],[False],[False],[False],[True],[True],[True],[True],[False],[True],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[True],[False],[True],[False],[True],[False],[False],[False],[False],[True],[True],[False],[False],[False],[True],[True],[True],[False],[True],[False],[False],[True],[False],[True],[False],[True],[True],[True],[True],[False],[False],[False],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[False],[False],[False],[False],[False],[False],[False],[True],[True],[False],[False],[True],[True],[True],[False],[False],[True],[True],[False],[False],[False],[False],[False],[True],[False],[False],[True],[True],[False],[True],[True],[False],[False],[True],[False],[False],[True],[False],[True],[True],[False],[True],[False],[True],[False],[False],[True],[False],[False],[True],[False],[False],[True],[False],[True],[True],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[True],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[True],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[True],[False],[False],[False],[False],[True],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[True],[False],[True],[True],[False],[False],[True],[True],[False],[True],[True],[False],[False],[False],[True],[False],[False],[False],[False],[False],[False],[True],[False],[False],[False],[True],[False],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[True],[False],[False],[True],[True],[False],[True],[False],[True],[True],[False],[False],[True],[False],[False],[False],[False],[False],[False]], dtype = "bool")#candidate|3004|(1430, 1)|const|bool
call_3003 = relay.TupleGetItem(func_2331_call(relay.reshape(const_3004.astype('bool'), [10, 13, 11])), 1)
call_3005 = relay.TupleGetItem(func_2334_call(relay.reshape(const_3004.astype('bool'), [10, 13, 11])), 1)
output = relay.Tuple([bop_2944,call_2968,const_2969,call_2982,uop_2988,call_2990,uop_2992,call_3003,const_3004,])
output2 = relay.Tuple([bop_2947,call_2970,const_2969,call_2983,uop_2988,call_2991,uop_2994,call_3005,const_3004,])
func_3007 = relay.Function([var_2943,], output)
mod['func_3007'] = func_3007
mod = relay.transform.InferType()(mod)
mutated_mod['func_3007'] = func_3007
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3008 = relay.var("var_3008", dtype = "int8", shape = (2145,))#candidate|3008|(2145,)|var|int8
func_3007_call = mutated_mod.get_global_var('func_3007')
call_3009 = func_3007_call(var_3008)
output = call_3009
func_3010 = relay.Function([var_3008], output)
mutated_mod['func_3010'] = func_3010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
call_3044 = relay.TupleGetItem(func_1329_call(), 0)
call_3045 = relay.TupleGetItem(func_1331_call(), 0)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_3047 = relay.TupleGetItem(func_1902_call(), 2)
call_3048 = relay.TupleGetItem(func_1903_call(), 2)
output = relay.Tuple([call_3044,call_3047,])
output2 = relay.Tuple([call_3045,call_3048,])
func_3057 = relay.Function([], output)
mod['func_3057'] = func_3057
mod = relay.transform.InferType()(mod)
mutated_mod['func_3057'] = func_3057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3057_call = mutated_mod.get_global_var('func_3057')
call_3058 = func_3057_call()
output = call_3058
func_3059 = relay.Function([], output)
mutated_mod['func_3059'] = func_3059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1169_call = mod.get_global_var('func_1169')
func_1170_call = mutated_mod.get_global_var('func_1170')
call_3109 = relay.TupleGetItem(func_1169_call(), 0)
call_3110 = relay.TupleGetItem(func_1170_call(), 0)
output = call_3109
output2 = call_3110
func_3121 = relay.Function([], output)
mod['func_3121'] = func_3121
mod = relay.transform.InferType()(mod)
mutated_mod['func_3121'] = func_3121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3121_call = mutated_mod.get_global_var('func_3121')
call_3122 = func_3121_call()
output = call_3122
func_3123 = relay.Function([], output)
mutated_mod['func_3123'] = func_3123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2740_call = mod.get_global_var('func_2740')
func_2742_call = mutated_mod.get_global_var('func_2742')
call_3153 = relay.TupleGetItem(func_2740_call(), 0)
call_3154 = relay.TupleGetItem(func_2742_call(), 0)
output = relay.Tuple([call_3153,])
output2 = relay.Tuple([call_3154,])
func_3159 = relay.Function([], output)
mod['func_3159'] = func_3159
mod = relay.transform.InferType()(mod)
output = func_3159()
func_3160 = relay.Function([], output)
mutated_mod['func_3160'] = func_3160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3159_call = mod.get_global_var('func_3159')
func_3160_call = mutated_mod.get_global_var('func_3160')
call_3168 = relay.TupleGetItem(func_3159_call(), 0)
call_3169 = relay.TupleGetItem(func_3160_call(), 0)
func_3159_call = mod.get_global_var('func_3159')
func_3160_call = mutated_mod.get_global_var('func_3160')
call_3174 = relay.TupleGetItem(func_3159_call(), 0)
call_3175 = relay.TupleGetItem(func_3160_call(), 0)
output = relay.Tuple([call_3168,call_3174,])
output2 = relay.Tuple([call_3169,call_3175,])
func_3195 = relay.Function([], output)
mod['func_3195'] = func_3195
mod = relay.transform.InferType()(mod)
output = func_3195()
func_3196 = relay.Function([], output)
mutated_mod['func_3196'] = func_3196
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3370 = relay.const([[[-5.555794,4.349056,9.651790,1.799361,7.715297,-4.241257,-6.574307,-4.657218,-5.235427,-8.450111,-0.184751,7.525191,-7.492983,3.205909,-8.530410],[-0.054131,9.704848,7.641406,-0.341034,-8.977935,1.922026,-6.866576,-5.761143,6.819033,0.551680,-0.437178,-6.860177,-7.889887,-8.206990,-5.219179],[-2.663300,7.987105,-2.742906,-0.802517,8.255228,-1.022398,6.888400,-5.255836,3.928412,-7.688998,-3.135943,0.121295,-0.651419,1.775565,7.358252],[0.599909,7.050025,4.328483,-0.291821,-0.407282,-4.947411,-7.602394,-4.721835,3.092095,-5.059527,-4.707624,-6.068002,9.253669,2.482762,5.997178],[-2.557437,-6.632030,2.987914,2.246854,2.861573,-7.863793,-9.650222,9.147054,2.039797,8.648050,-4.999648,-2.015262,1.414585,2.259696,6.431966],[5.223146,-9.486072,1.245755,-9.070281,1.775630,-4.174351,8.864388,-5.078689,9.686220,-5.679033,7.801403,6.173177,8.062915,5.264768,2.766797],[-3.218442,-7.683555,0.944177,-6.814388,-4.253399,3.992472,8.526408,5.113673,-0.782191,-1.055863,7.348230,7.939779,1.863666,0.727722,-9.262110],[6.557240,-3.655876,8.017389,3.152613,8.699126,5.027236,0.018448,6.115196,-4.506833,9.352877,-9.034711,-4.841984,9.567750,7.757352,-7.501543],[-3.338559,-3.574729,6.443713,-1.246925,3.447264,-7.636993,-6.597055,-9.362126,-5.221260,6.139101,4.155296,1.811117,-0.022837,0.373011,9.101293],[0.462794,-4.097180,-0.882340,0.821389,-5.419730,-1.874230,4.177212,-0.161939,2.286962,-3.312846,1.210511,-3.166451,5.427312,7.314339,-6.749364],[-2.098362,-5.528872,0.343046,-7.757088,8.218297,-0.781802,8.644293,6.074325,7.653568,-2.219851,8.123327,4.319537,-5.737044,-9.333015,2.862812]],[[2.392912,-1.449735,-1.254003,-7.007589,-6.758933,-3.893270,-0.319682,-1.658683,5.954443,-0.883168,9.878625,5.554260,6.623595,1.785344,-7.594904],[8.069218,-5.059220,3.403374,2.317791,4.167798,-0.436579,-9.748491,5.636481,-0.749220,-6.772085,6.995524,-0.746249,-9.823851,-8.293516,-0.810464],[4.591621,-6.082720,9.844243,-1.286091,-3.718344,5.924651,8.087255,6.708905,-6.472442,-7.127804,-7.030515,3.729662,-5.472905,-7.862973,0.569592],[4.676263,-0.527785,4.554404,-4.547507,4.621737,0.937402,6.769884,-1.557761,-0.910719,-8.577308,-6.387349,-9.442941,1.786580,8.771784,9.592887],[-2.919559,7.267422,3.845766,4.186500,6.072569,-4.590669,4.008213,0.981361,-7.439604,-3.436289,-2.220711,6.411880,-9.597115,-4.694213,-1.285044],[2.586031,-7.965746,-0.896403,5.561152,9.366668,-4.371851,8.036939,3.451440,0.200060,-4.264205,-4.347205,-5.094144,0.426361,3.785204,6.329790],[-8.167937,-0.949167,6.404702,-5.943767,-1.025321,3.421241,0.199339,-4.526069,-1.300693,-7.414729,-8.434646,5.897204,-6.287449,0.737625,-6.548162],[2.815235,0.526460,-2.997114,-4.293234,8.153281,-5.724783,0.220791,-0.166542,7.124502,-8.258921,5.425808,-2.951586,2.989318,-7.166081,-5.271771],[8.439282,1.120911,-7.504519,-8.958096,-3.745162,3.076577,-1.104954,-3.983097,3.015963,5.268060,2.771915,-6.288593,-4.979062,-6.780188,-1.527327],[7.758289,-2.348382,4.525471,-3.920719,-4.305253,3.005841,-4.008841,-6.392015,-3.078512,-3.566121,7.864291,4.437315,8.435583,-0.868898,-9.110559],[7.895282,-2.212704,-6.082996,-1.310240,2.448915,6.622200,-8.213694,3.123629,-1.684129,-8.527073,6.798769,-5.632793,4.439691,-5.403794,4.825534]],[[0.169835,0.349840,-9.748227,9.310808,-6.099613,5.550599,2.062872,6.984232,4.265402,6.997195,-5.370100,9.906067,0.718975,8.676609,-0.029437],[-7.246571,7.064349,-8.433992,0.024757,-3.706467,-7.426085,6.527737,4.284726,-0.669954,-8.754113,0.967075,1.602646,3.032464,2.184270,-3.601621],[9.007559,0.985447,-0.720992,-5.710765,2.734701,-0.199705,8.925743,-2.768840,-6.719768,8.015950,-2.922359,-0.691104,3.665112,-1.763735,-3.176538],[0.205493,8.999777,-8.619339,-8.566807,3.671483,4.215228,9.781277,0.565340,9.984818,2.193139,-8.092129,2.684046,0.032125,-9.639544,-2.952077],[-1.080328,-1.410393,-3.400876,-1.797595,8.533100,0.767547,3.977018,9.068078,-8.267228,-9.554117,4.944056,1.233760,4.679891,-0.335239,-3.164914],[-4.110973,-7.774404,-1.167233,7.202360,8.971368,-1.653537,4.576443,5.551025,-2.263005,-0.753958,3.280405,2.734923,-2.334742,8.382219,-8.562593],[8.113935,3.354866,8.696630,4.344835,-4.662182,1.563335,4.797148,-3.514283,-9.281610,-8.196756,9.859295,-4.527589,-4.442593,-9.779596,3.083962],[1.471024,6.754184,-8.413299,-9.801705,-0.854778,-0.311271,8.250120,-7.239362,3.203951,-6.984210,9.451539,1.239771,-6.919332,9.007603,-3.330396],[8.458398,0.561573,-0.410679,9.249827,0.093946,0.814175,3.081745,2.219198,-6.211322,-8.267275,-2.299957,-0.791216,-8.691028,9.703557,7.744731],[-5.736983,0.463922,-6.625325,-5.253130,-3.948305,9.167924,4.046643,-0.633328,-4.709076,6.912857,5.712491,0.850794,-9.908216,-7.597841,3.957484],[4.552461,-5.504490,0.086843,-9.103028,-8.871997,-5.871233,-5.120198,6.563583,-8.136370,3.141323,-1.005146,-4.586495,-6.874597,1.493955,-9.812937]],[[3.754131,6.217582,3.358941,-0.728957,-7.048164,-8.853227,-1.160303,-9.065161,-6.959042,5.666891,9.109810,-1.670086,4.711526,-3.775901,-9.413995],[2.081846,-1.053999,7.371886,-4.762337,6.011549,1.986748,8.269095,-1.496152,1.303664,-5.150539,-9.198792,-9.172720,5.432488,6.623709,3.735488],[4.556465,4.681360,0.075054,2.704213,-3.554004,-4.865113,-9.898481,7.692346,6.079862,2.131354,-4.471048,2.573244,6.201936,-7.739558,-7.750885],[-8.458651,7.146981,1.009573,-1.939774,-6.898905,5.751373,-1.567609,-9.508035,-1.855866,-3.232171,5.268728,7.753203,-8.991201,-9.019123,-3.458032],[-0.088427,-0.762671,-7.353135,-7.389522,-5.330453,-3.309022,8.037625,5.101423,-0.843006,9.320672,-7.911508,9.812376,-2.408151,-3.845805,3.382298],[6.908116,2.584975,5.219743,-2.852143,-2.079023,-4.274988,-0.667385,-3.726241,9.865830,-3.371976,7.966958,8.894486,-1.899650,-9.792254,-1.289034],[6.114119,0.895522,9.193171,5.091090,-0.082563,-0.769399,-3.644912,-9.942653,8.984232,0.691012,1.260387,-0.729148,-0.479020,-9.850489,4.915076],[-1.273738,-9.702994,8.363147,-5.599344,9.301269,-8.860705,9.911918,4.670166,7.612712,3.369495,-1.871824,-2.432143,7.596386,3.898921,3.738385],[6.520497,-0.680189,-7.298024,8.578914,-4.210859,7.288860,5.576333,2.855837,1.825016,0.978699,9.992618,9.246250,-7.160908,-8.815112,-4.213137],[-1.068739,1.146902,5.716197,-7.398232,-9.012699,-9.487377,7.555772,-3.808602,-3.600251,-4.575664,-1.301763,5.814232,9.152681,4.911510,9.705839],[9.997110,8.353765,-7.990678,-2.721455,8.070501,0.587304,4.479890,6.387366,0.565732,8.918871,9.208104,-6.946785,6.046688,-7.337198,6.722552]],[[-8.426584,1.488314,-3.081854,-0.492702,-6.243317,2.295768,1.793593,4.496486,9.884306,-6.012234,-3.369761,-5.936538,-9.819727,-9.515131,-0.154942],[2.874034,-3.623042,-1.125565,-5.487713,-4.593599,4.803581,7.739767,-7.992953,1.501916,3.205425,-1.099983,-9.068089,-3.586195,-9.592206,1.599171],[5.407747,1.732906,-3.014260,-2.488236,-4.639165,4.497143,-3.215176,5.493237,7.604399,-3.392863,-1.921687,-8.900515,-5.697866,-3.527972,3.560982],[3.445165,-5.587129,2.842574,9.814241,9.632190,-5.118653,2.804862,5.307128,9.117763,7.739340,-0.778860,-0.854957,-5.842579,8.272700,7.670879],[1.353021,8.189122,9.883212,-9.251961,-1.616486,-7.636489,-5.494972,-9.350793,-9.441459,6.671780,0.267411,-1.220564,-9.687934,-6.550242,8.573289],[3.725706,5.878584,-1.975870,4.917978,1.219536,-8.811267,-3.092864,9.053078,5.035057,-6.417599,5.567984,-8.427114,2.997293,4.932486,-3.055954],[5.116565,3.923854,7.510734,5.298765,-7.404843,-6.580217,-6.713847,1.539597,1.998155,-8.767309,7.956766,-1.655523,5.458964,0.233524,6.344062],[1.624139,4.360992,8.814224,-7.593089,6.132539,0.494800,0.849667,-7.012994,5.336945,8.089259,4.783211,-4.353109,-4.941231,8.960069,-1.965469],[-1.868367,3.142170,-1.283444,-6.420540,0.864655,5.550079,3.517317,-5.852475,2.440979,-1.185638,3.836084,-7.299010,0.196409,9.365039,-2.556120],[2.909945,4.319924,-4.427405,-1.123479,-3.919556,-3.583485,-0.358414,5.529586,1.118555,9.633589,5.542309,5.532491,-7.949442,9.964419,4.544304],[8.897748,-0.606666,8.218408,-1.250735,9.410800,5.610669,-4.790659,7.189863,-9.222255,-7.926890,-0.199230,1.020416,0.939442,-5.911062,5.006717]],[[-6.880161,7.130546,-9.109490,5.901601,-8.577014,9.167234,-0.185811,0.789355,9.241044,-8.988285,5.007483,-3.753604,-6.294026,-3.217659,-9.479587],[-9.048534,-5.946565,4.304781,-4.170602,9.238489,4.387188,-0.297768,-3.721072,0.688076,-6.883200,-2.006599,4.234673,-3.048916,-7.180948,-6.376206],[-5.709181,-8.539713,-7.318758,8.299471,-8.279403,5.506655,-9.813024,-4.624427,-1.595369,-7.719179,2.244369,-7.276831,3.518173,8.505019,-8.164751],[-7.232390,-0.965623,2.846265,-0.094634,-3.321454,-4.647615,-9.487855,4.784438,1.753487,9.940967,-9.158919,-9.288257,7.415167,7.639869,-0.314043],[-0.741969,5.260819,3.826129,-9.426890,0.608402,-7.530773,-1.944048,-5.864555,9.104757,3.254652,-3.881037,-7.384670,7.973168,-0.872549,-4.148690],[-0.648027,-2.460542,1.141015,-3.072743,8.552162,-6.975398,2.576245,1.654037,8.863966,-5.033388,4.583287,-4.271274,1.383981,9.094918,6.215448],[-4.431057,-2.036867,5.688469,-1.552806,3.056447,3.754099,-6.703663,2.826910,2.146175,-2.837560,4.667263,-2.741482,9.026250,3.260992,3.772548],[-2.834091,-4.245294,-8.510549,6.758214,-3.630112,4.126910,-5.206565,-7.357818,6.538723,-1.172896,7.724152,4.489005,-9.025924,-6.928966,0.528498],[-8.361626,4.455961,-9.411558,-6.843134,8.173024,4.204476,-0.808592,-4.956641,5.493813,-0.666720,6.151203,6.345382,8.811878,-7.683942,-9.089054],[-6.210661,0.099364,1.973886,8.005735,6.210877,-0.869174,7.138483,0.684069,-4.829521,2.457186,-3.754179,-2.454777,6.532266,9.671434,0.705224],[5.256871,-0.256731,-3.772053,1.188967,9.181153,-3.933900,9.525391,9.541495,1.952368,0.621657,-3.172899,8.762792,2.696808,2.114461,-5.501883]],[[-6.794062,-2.708391,0.801827,2.480403,-2.154497,3.538848,-5.044510,4.957688,0.031579,1.378798,2.434343,9.095916,8.275027,-4.418862,4.477175],[9.164530,-1.013261,5.621361,-6.713542,-2.419414,3.834426,6.603979,-1.083225,2.895407,4.308993,-3.281377,6.017465,-9.561066,7.311786,2.996264],[5.851685,-5.009602,-8.403543,2.124259,-7.003003,8.389510,-3.876662,-2.110758,3.306739,-0.747886,-8.549362,-1.319563,-4.514330,-0.127798,1.120552],[7.760731,5.716182,-5.910515,6.977950,-6.959914,-9.570938,2.765537,4.606018,6.065892,-0.102737,4.569910,8.996247,-4.631626,-7.299672,0.890558],[-8.780912,1.642997,-2.408908,4.090692,2.341563,-8.335786,1.159669,-6.812618,8.484280,-4.444692,-5.608448,-4.416623,4.424167,4.046908,-2.893618],[5.608408,8.849935,-6.029162,-0.777990,0.362124,1.423649,1.213597,-1.941614,0.575012,-5.107105,0.741822,-3.601976,-5.541769,-2.980947,5.271290],[-7.307610,5.526249,2.948998,1.074059,9.573170,-7.471062,-4.438829,5.817102,6.717489,-6.809142,-7.383150,-8.630987,-7.005927,-1.805442,2.263688],[5.695722,-9.221432,9.056177,-7.454683,-9.799158,-3.144978,-6.334722,-9.160540,8.866221,0.776814,1.430114,3.377056,-2.368915,-6.742835,-7.198444],[-5.661823,1.590146,-3.362654,4.120511,-2.953197,-1.041915,-0.022059,9.134325,-9.622473,-2.238251,8.065078,-6.070980,-7.556145,-5.893818,0.553995],[-2.683499,-6.053388,6.559475,-0.735808,5.673048,-6.656624,1.605407,-3.377571,3.625374,7.042384,-0.205133,-8.503492,8.916746,0.370256,3.375769],[-5.504018,7.049734,-7.703339,6.308467,3.873862,3.201714,-6.535085,-1.959701,9.767727,-0.324657,5.533384,2.846287,1.700475,-4.640720,-2.166824]],[[7.641424,8.783259,4.985861,2.400914,6.865614,3.124631,-2.810312,6.178549,1.652248,0.618735,-5.478636,-6.718445,-3.592519,-4.790994,1.148237],[-7.470186,-1.793740,6.438376,0.862410,-9.970612,2.819843,8.089441,-7.272014,-5.897511,-8.570572,4.613742,-7.420361,-3.348037,9.760740,-4.411324],[-3.002103,2.372154,-2.707514,-2.293581,-3.708059,-3.010153,3.680817,6.293909,3.204597,1.033175,9.884913,-4.363677,-0.773478,-8.380341,8.463002],[-8.760984,-8.735332,-1.510883,-6.349171,-8.602574,-5.570369,-1.828672,1.152458,9.788317,8.875627,-3.100413,0.795922,3.558009,8.430759,6.477468],[-3.515761,-9.500165,1.269795,4.400668,-4.388802,-2.964570,3.912113,-1.409947,8.939575,9.949791,-0.738536,9.355588,-9.157969,7.782445,2.507507],[-3.691676,0.224773,-8.760830,-9.031686,-9.374198,9.980652,2.360044,-9.313351,7.110138,2.474648,-3.190013,-1.677322,3.537302,-2.886384,8.993013],[5.782245,5.063891,-7.687069,7.907433,-5.556886,0.458833,7.155725,-3.158806,-0.549045,4.529726,-7.866754,7.622782,2.019295,1.996668,-3.754135],[6.546264,-7.885996,-5.066637,-7.546227,7.264120,2.142745,1.488710,0.860835,-7.904616,6.308083,1.941792,-1.887975,5.804624,4.778957,3.859320],[2.326175,7.377026,-3.392451,-1.053246,-1.957206,1.140372,2.887436,-3.635426,-0.272006,-8.587949,-8.001044,4.889972,6.799721,-1.106460,9.342573],[-1.789968,3.116055,-9.999055,1.784511,-7.835745,1.852736,2.140196,-8.704005,9.182012,0.444575,3.434087,-6.908248,-2.626263,4.108333,-3.537926],[-1.175423,7.191972,2.334448,5.479799,-7.557788,-6.169326,4.233284,-5.491152,2.657145,-5.571221,-7.427871,-1.765048,-6.700486,-8.341103,0.393570]],[[-7.987301,2.627852,7.314622,-4.529931,0.741073,2.471096,-8.304075,0.267350,-7.920340,-0.196210,9.265299,-0.416786,2.419659,-6.031021,-0.660623],[0.017606,-1.953207,-6.345763,2.760071,-0.405519,-6.794313,-9.544693,9.651156,1.751852,-4.658957,-5.616429,-1.005378,0.351365,-3.506383,4.096111],[6.173843,3.593131,0.403546,-2.265655,-2.318367,5.635354,-4.139673,1.029180,-1.316138,7.476705,4.334085,-7.967576,3.125024,4.638941,-4.966987],[-5.981691,6.295482,8.067252,-9.112599,7.878084,-8.352486,4.087649,-7.690187,-8.941826,8.752984,3.853744,-4.242858,1.941913,4.521687,9.696951],[7.761794,-1.321685,6.631760,-7.712672,8.839010,0.340498,-6.814296,-6.999887,7.196709,0.360722,-5.327170,7.232747,8.721649,-6.407657,-8.805128],[-3.864379,-0.404284,-5.618833,-4.863432,2.093953,9.141314,0.844818,6.026316,-2.250193,6.096593,5.965795,2.517432,-0.810548,0.729726,8.608444],[-9.123706,-5.142755,-5.232925,-2.019321,3.440728,-0.205954,-3.173013,-0.501770,8.492459,9.374346,1.873524,0.596928,9.706692,3.530981,-6.615934],[-5.602919,-5.185135,0.099427,-8.142574,9.168203,8.766741,-7.522616,0.176732,1.241791,6.027113,1.952035,-5.887275,8.075737,-7.207928,-9.709973],[-8.958081,7.039388,6.541360,1.392807,8.409158,3.253722,9.232669,-3.228723,6.231801,4.701246,-5.610816,7.795427,7.238375,4.013192,1.143343],[1.679987,-7.398525,-4.890502,6.820557,6.148208,-0.283670,-6.213456,-6.614479,-3.680069,-1.745657,2.234160,6.468419,7.913189,2.196313,-4.324418],[8.943598,-5.757086,9.599999,5.204757,8.290984,8.895915,-3.487038,2.779731,-9.645801,-1.946401,9.343767,-8.983256,-3.098792,-6.470227,-2.437785]]], dtype = "float64")#candidate|3370|(9, 11, 15)|const|float64
uop_3371 = relay.cos(const_3370.astype('float64')) # shape=(9, 11, 15)
func_2116_call = mod.get_global_var('func_2116')
func_2119_call = mutated_mod.get_global_var('func_2119')
var_3386 = relay.var("var_3386", dtype = "float64", shape = (660, 2))#candidate|3386|(660, 2)|var|float64
call_3385 = relay.TupleGetItem(func_2116_call(relay.reshape(var_3386.astype('float64'), [660, 2])), 0)
call_3387 = relay.TupleGetItem(func_2119_call(relay.reshape(var_3386.astype('float64'), [660, 2])), 0)
bop_3400 = relay.greater_equal(uop_3371.astype('bool'), relay.reshape(const_3370.astype('bool'), relay.shape_of(uop_3371))) # shape=(9, 11, 15)
func_1296_call = mod.get_global_var('func_1296')
func_1300_call = mutated_mod.get_global_var('func_1300')
const_3410 = relay.const([3.534633,9.599999,2.644612,-0.729102,4.464240,5.050986,1.342077,4.325095,-2.743577,6.027196,0.077079,-6.375803,7.117345,6.330619,-8.467286,0.745364,2.057758,3.509671,-9.370543,-4.394141,-8.943181,-5.881061,-3.399862,-9.243325,3.083611,5.540149,-6.016879,-1.917893,-4.480486,-5.427899,-3.462543,5.674897,0.579894,-1.669549,-1.158049,7.417576,4.647443,2.974437,1.004716,-4.044525,5.190234,-5.859862,4.843987,7.606974,-7.004911,4.677692,9.636778,8.218453,4.023598,-5.292235,-6.688056,-2.972357,2.458539,8.840831,4.655276,1.494422,9.440295,-0.013171,-7.904210,5.391588,-3.438188,8.241910,4.189215,-3.132831,7.305000,-6.623346,-3.421975,6.885912,-4.924400,-9.778601,-9.522666,-6.478497,3.674694,-0.078465,-7.071578,4.405945,-5.198899,-6.676413,1.351649,-2.830990,4.788161,-2.869328,-9.631308,4.321859,4.415661,-7.692059,1.301639,8.583082,-4.967757,-1.071881,3.451730,9.001449,3.717049,8.456256,-0.450633,5.000954,9.258670,7.917234,2.027872,-3.739946,-6.136235,-0.168974,-1.519980,2.862855,8.923294,9.220737,5.214011,8.832399,1.655629,6.364577,-9.041036,4.440158,-8.574945,8.597741,-1.844839,-6.777349,9.908391,-0.842119,8.764456,-9.652198,-5.996856,2.453196,-7.660460,-5.981018,-9.007989,0.618763,-9.220170,-8.621284,4.354538,-5.641878,0.081091,-1.428038,8.846818,-0.163113,-4.460311,2.863251,4.675263,-8.787505,0.581784,5.738450,-9.458643,7.649172,7.240643,-6.898576,1.508078,-8.808979,2.234337,0.763769,-9.170765,1.328115,-7.100939,9.505635,-2.401386,4.781186,-3.359784,9.448601,7.178530,9.125257,-1.930195,8.748240,-7.354936,-3.497514,1.915389,-8.348790,-1.205566,-2.812393,-3.482526,-3.051717,-8.450119,6.668602,-4.883316,2.514852,9.777209,-5.384323,-1.460118,3.431183,-2.020822,3.368510,-2.556634,6.124543,8.452213,3.395199,1.567683,-9.965903,-2.113832,-5.820368,-4.049898,-0.304445,-9.521132,4.892310,2.590511,9.654453,5.460990,9.481327,-7.202578,-6.045058,-6.821823,9.705611,6.181209,8.148372,3.356613,-1.165689,-0.759540,2.253125,5.629567,4.444105,-6.683767,-3.875057,0.677661,9.594766,-1.365389,-8.973031,1.166196,-6.875989,9.307234,-3.950967,5.565928,6.698129,-1.006335,-0.278016,6.847708,-2.842349,-9.437476,1.078591,-9.701946,0.161584,-3.936151,5.572610,-9.691130,-7.936656,-1.436527,-7.999791,4.211540,2.421656,0.454487,-3.263275,0.779805,-2.923733,1.074320,-8.577332,-8.619502,3.141118,0.403372,-8.097193,-9.434949,8.854923,-8.940873,5.763440,6.694865,0.329144,-7.694453,-9.369036,-6.400118,-1.704025,-9.436224,7.043198,-9.000585,-3.873242,6.368967,5.195279,4.059922,-4.057990,2.466706,-2.686236,-6.134474,4.854063,0.325325,4.709025,-5.153009,2.916641,-3.062366,6.987977,9.570707,-7.714299,-8.720071,6.248040,-9.592326,4.681113,8.599087,7.000484,4.985660,-8.980331,-3.969406,-3.968385,4.296222,6.667166,-3.145694,3.113560,-6.721977,2.914567,8.782031,6.952323,-5.306323,0.484825,-6.466751,-0.601140,0.662799,-0.990863,-6.456752,-8.855136,-3.622470,6.401135,-2.305327,8.930356,-4.766424,-4.444389,4.782223,0.537888,-2.172389,5.254770,4.794576,0.098880,-2.064219,-3.325071,-5.740201,0.518297,7.739086,-2.775448,0.537967,-6.630983,-2.550075,1.086222,-3.987182,6.947632,-9.845542,9.740647,-0.643423,-2.997932,-6.662426,2.549057,-2.508107,-6.268141,1.880664,8.340723,-8.699839,-9.509458,-9.097247,-5.863600,4.505829,-5.743938,-3.167201,8.461139,-8.999156,5.624485,3.793552,5.493390,8.801323,5.546349,-7.847116,1.178874,-2.418503,0.734432,-5.315596,-2.452249,-6.929716,8.680311,-1.947745,9.562165,-5.463878,-3.676415,-0.598021,2.728195,5.805785,-1.863733,-1.192230,-7.597085,-8.371128,3.756351,5.064778,-3.971357,-0.689555,-2.303223,-2.476660,8.106115,-2.610167,-8.534295,-3.595004,3.690924,-7.504371,9.349841,3.339597,-2.661628,-7.721273,-8.801351,1.548080,6.249481,-3.245932,-8.287567,2.720758,-2.924765,8.134472,-8.455055,-5.558015,1.510434,-7.778343,4.984192,-7.344982,3.475950,-3.941134,-2.387367,-0.442503,6.631941,3.997018,0.545150,-0.027183,2.377239,7.266482,1.037777,0.765809,-2.001366,8.956788,0.686986,5.742394,-5.196286,4.755825,5.412029,-0.229968,-0.364281,2.577991,0.261784,4.106704,8.241892,-2.449734,1.044828,-7.018809,4.905786,1.071137,2.206953,3.623325,-4.594997,2.594478,-2.921532,1.009647,1.441118,5.386666,-2.107380,2.386635,4.998487,-1.088020,3.079728,-8.329624,-3.705275,-7.586286,6.430804,-9.423661,-8.362556,9.919153,4.493661,4.145094,1.804923,8.786846,-6.518193,-5.290853,8.042953,-5.273360,7.417919,0.123023,-1.466841,2.711478,-1.890610,-4.066736,6.228116,5.466093,-5.043200,-3.889487,6.929220,3.426837,-7.870747,7.588723,-2.636208,4.660068,8.274645,8.801701,-3.621739,6.440708,-9.299246,1.121079,2.142168,7.033981,5.488984,-6.245013,3.869906,-9.517202,8.195665,7.998820,9.000232,1.736766,-2.660075,5.506910,3.471236,5.914361,-9.529843,-6.555479,6.372006,1.129292,1.584081,-6.127011,0.110525,-0.613927,-0.001090,-6.137348,-0.244041,-0.523719,-8.332434,1.670838,-2.953953,-0.282449,3.458004,6.909871,-5.063681,-1.242717,-9.925314,-5.546466,0.399618,-1.213915,3.030429,-6.377600,-8.775296,-3.199851,-9.890117,-9.444652,-1.536706,7.243254,3.422179,-5.623397,3.686615,7.690121,8.944590,1.096061,6.105247,1.731845,-0.798251,-6.962913,-0.402078,6.147641,2.757428,-2.813957,-8.750282,2.043067,-6.188906,8.154066,-0.425871,9.302066,9.904573,7.888256,-7.591891,0.600293,-6.763752,3.123249,-8.108213,3.126326,-0.759960,4.458468,2.928794,4.429759,-6.428446,9.570521,0.763155,8.720175,4.075746,3.791328,7.917822,-9.350030,4.807896,-8.160592,-5.211893,9.521717,7.554052,-2.409299,2.199587,-5.152011,-0.009426,4.162789,-8.158852,-4.726906,6.266163,7.255517,-8.990557,-2.959925,7.680627,7.528139,-7.152301,3.001052,3.799962,-7.209879,7.063970,9.262618,-3.928443,1.962996,9.465083,-8.214781,-3.588785,0.104240,0.379580,-5.948408,-5.029521,-7.032751,-3.937187,8.727888,5.332845,-7.861371,-4.786910,3.998041,-4.635510,-0.862092,-4.947341,-0.818615,-1.433040,-8.955156,5.552542,9.300426,-0.185189,-9.974857,0.191192,4.066408,8.323256,1.041295,3.014036,-2.145482,2.337325,4.882251,4.841944,-2.205870,6.065653,9.733204,4.974825,-1.425414,3.748346,-0.771684,-1.699216,2.208934,-3.035273,-7.033868,3.973809,1.170120,9.584439,8.042354,3.430232,-9.128146,-8.855211,5.693034,-0.246779,5.881916,5.263744,-1.301070,8.831033,4.306247,-6.351058,7.141111,9.095557,5.103587,3.604148,4.917539,-4.207141,8.228295,-4.884191,9.458443,3.425767,-0.847703,-0.498293,-9.322297,-1.604373,6.207367,9.375249,4.972196,-2.526103,4.668027,4.568170,-8.052375,2.519886,-8.135644,-7.488265,-8.559590,-7.875156,-2.173799,-8.228330,4.140931,2.275899,3.775699,3.668015,4.211941,9.831932,-0.444032,2.007638,8.771421,-6.147002,-6.753825,7.082045,-3.163642,0.935584,-3.473000,-6.621957,0.821770,0.581626,-6.463026,7.910219,-0.837711,3.098994,9.442703,8.673194,1.167190,-8.332059,-7.757043,-0.960232,7.132607,-1.093889,1.558033,0.228633,-1.928214,-1.715946,-3.162935,-7.368791,-9.525723,6.903098,-0.016160,-6.491732,-8.056999,-9.973060,-1.835089,-1.404455,-9.680751,-7.804135,6.666405,-0.427046,-9.739545,-3.503010,-5.405431,9.653585,-1.556134,-1.841704,7.277192,-7.519590,2.580766,-1.603791,-2.984149,-3.336608,0.183634,-0.304458,-3.286104,-4.297570,5.662770,5.288867,5.535419,5.950445,0.478468,8.161504,-5.374250,7.765096,-2.794968,-4.027249,-1.767249,7.999906,0.464012,-6.877607,6.550444,-0.935133,4.945151,-9.506725,-7.638863,0.924412,-7.381160,-5.685982,-4.820310,-6.310129,3.238898,8.229536,6.089924,-7.212414,9.422286,5.281967,3.283413,7.074646,0.136953,-9.055131,9.959146,-8.138268,-3.648183,9.982780,-7.655414,0.257542,-4.224561,9.633809,7.568855,-9.355772,-0.931580,3.373521,3.618111,-4.942836,7.904377,-1.102031,-6.405427,-5.130373,9.130648,-1.732507,4.332096,8.871507,-2.077683,-6.607366,-8.423301,-7.669797,-7.097320,5.760719,1.728783,-7.991284,-0.391131,0.741037,2.445235,1.877941,8.987018,-3.558189,6.619374,-3.815394,-3.357273,6.913658,5.229940,9.767229,-6.615612,5.631533,4.367987,-4.682787,-7.753707,-3.556377,3.943838,-8.522948,8.911536,2.647266,2.252815,6.078818,-0.009889,-7.354172,-7.432623,5.112263,-6.071127,-7.280921,6.090188,5.150390,9.772105,9.553792,5.308797,8.108844,5.343947,1.162078,9.506523,-8.547747,-9.903931,6.117332,3.197384,0.240848,-9.634166,8.818060,-3.469121,2.175888,-7.155239,-4.361902,8.071245,9.429445,-3.124252,6.266340,0.591676,-9.712883,-5.451576,-4.045238,-2.461914,-4.239035,-9.209794,-6.908100,-4.816628,-5.097236,7.250972,1.695596,-3.036987,1.247049,4.695465,-8.686198,-6.223026,-8.429978,8.300388,-6.309577,-0.711962,-0.288731,-7.214017,0.016347,-6.720383,-2.751427,-3.002007,-9.518364,-8.945426,-3.974194,-4.667637,-2.664755,3.052017,-8.353448,2.238774,-8.556052,4.239558,-1.613403,-3.212549,-6.545908,9.551674,-2.729375,-3.298009,4.821441,-3.472357,4.525876,-6.387067,1.582615,-5.245903,-2.542827,4.948009,-6.790322,0.261320,-4.138692,-6.105945,5.123594,2.956222,-9.262144,-5.326209,-0.403367,1.041834,-6.219638,1.530908,9.651247,6.469006,-1.039669,-7.162259,9.528073,9.884561,8.191630,-5.152321,-1.222782,-0.170710,-0.661460,-6.145994,8.103157,-5.437679,9.030151,-1.022195,1.993331,7.108470,-0.674684,-5.733750,6.549241,7.363115,-1.536162,1.375856,-9.552396,2.192961,9.149430,7.649004,7.967684,-9.498531,-3.067572,0.642830,-2.869564,9.621146,-1.899522,-6.940592,0.632551,9.342578,5.317024,-0.544751,-9.226538,-9.329892,0.994798,9.144636,4.943356,-1.528074,-2.880979,-1.929495,-4.745111,6.427711,1.439847,-2.210092,3.433974,-5.430381,1.603484,-1.486761,-4.476026,6.953062,2.810163,-4.281021,-6.093999,-2.889279,-2.371545,3.991020,-8.155976,-2.260487,-1.651608,-6.507395,-1.340312,-5.924798,-4.714415,9.554018,-3.253546,-4.410232,1.395408,-1.728894,4.405871,-4.370601,1.450561,-6.521221,-9.781438,-6.566591,-0.630646,0.504839,3.767261,-2.655017,-7.795070,5.834561,-1.032562,-7.127280,-8.351197,3.289767,7.337234,-9.182264,2.995044,-7.232308,3.638782,-6.814987,-9.568683,-3.313637,0.571088,9.416277,-1.028541,-7.638155,-4.323303,4.791287,-5.020139,0.154497,-2.956127,-2.855650,-2.586668,-1.122461,1.512401,4.801492,-7.333648,-8.129718,-2.195482,4.269709,-0.201750,8.923696,9.981430,3.786444,4.853615,0.158050,-3.170891,4.773483,1.422521,-9.826998,-3.941183,-5.424938,5.199344,7.137885,-9.275652,0.891842,-2.939138,2.840389,4.468703,7.453420,6.445421,-9.269427,8.542853,6.543776,3.857764,9.297566,5.441942,-8.467200,-3.175130,0.329386,8.142819,8.139548,4.498315,5.312055,-5.528555,-1.940846,9.820219,4.500853,-7.700865,9.412294,0.171504,-2.749759,-2.236055,0.437163,-0.780698,7.208382,0.635477,9.070483,-2.599649,9.767771,-1.697214,-1.744626,1.874037,-4.143105,-5.918051,5.188330,-8.135068,5.362734,0.011935,-0.530771,2.088569,5.132647,-9.883639,0.491008,2.083630,3.340310,-3.188378,0.290598,-4.773247,-1.683479,-2.346995,-7.276008,9.066413,2.329461,-7.509746,-9.362456,-8.843807,8.135246,-5.822853,8.454003,3.581564,4.818626,-9.248983,1.514494,-3.831504,-7.999727,-3.758065,-5.085541,-0.485905,-9.492544,3.548824,-8.603086,-4.267310,-8.891775,-0.296986,-8.940814,1.598202,-1.868184,-7.489807,-2.525309,4.780048,3.269976,0.711600,0.446068,-3.886811,-5.662866,-6.155770,9.536523,-6.068681,8.964305,4.535428,5.834545,-0.621704,-4.716600,1.035751,1.117835,4.362572,-8.892190,-3.557194,-3.361334,9.132911,-1.137760,1.657659,-9.182369,-7.723401,0.801159,0.573035,-1.610008,-4.104173,5.297480,2.789494,-1.656777,5.428895,0.708821,-9.886163,-2.136511,-1.519629,1.108873,-8.667192,-8.234961,6.524436,-4.082566,-8.421767,-1.441620,-1.205098,-4.391392,5.047715,-7.024183,-6.473754,-9.526488,-5.985949,-3.016228,-1.995705,-5.360400,-2.557166,9.807365,-1.271030,-7.520718,-4.828301,9.037168,-2.711630,-6.536109,-3.568583,8.164769,-0.148328,9.788989,-9.710856,2.906054,0.909656,-3.807749,-3.747860,-8.158267,9.342166,5.806706,5.920481,-7.559856,2.650776,1.668349,-7.513545,-8.069302,4.475500,4.501936,3.946397,-5.160629,-7.877037,-5.136278,-5.322941,-4.544512,-6.452130,8.312521,-1.994419,1.931717,-5.501714,-7.896717,5.195800,7.874852,-7.506139,6.580673,1.427159,7.952228,-1.878256,2.091332,-7.519416,-9.437015,1.800823,-5.382011,-9.953035,5.768050,8.864310,4.581158,-4.875227,1.117338,2.876833,5.579192,-3.298402,-6.859943,-2.873813,3.018365,7.464476,5.388819,3.941436,6.034478,-0.860693,-7.479015,-4.604756,-3.421777,-9.726272,5.071641,-0.740427,-7.340527,7.939488,9.715524,-6.150031,-5.896768,9.934467,2.255824,-3.364745,-3.811992,3.000626,-6.330063,-8.092193], dtype = "float64")#candidate|3410|(1280,)|const|float64
const_3411 = relay.const(-4, dtype = "int8")#candidate|3411|()|const|int8
call_3409 = relay.TupleGetItem(func_1296_call(relay.reshape(const_3410.astype('float64'), [10, 16, 8]), relay.reshape(const_3411.astype('int8'), []), ), 2)
call_3412 = relay.TupleGetItem(func_1300_call(relay.reshape(const_3410.astype('float64'), [10, 16, 8]), relay.reshape(const_3411.astype('int8'), []), ), 2)
func_1055_call = mod.get_global_var('func_1055')
func_1056_call = mutated_mod.get_global_var('func_1056')
call_3427 = relay.TupleGetItem(func_1055_call(), 0)
call_3428 = relay.TupleGetItem(func_1056_call(), 0)
uop_3433 = relay.acosh(bop_3400.astype('float64')) # shape=(9, 11, 15)
var_3439 = relay.var("var_3439", dtype = "float64", shape = (9, 11, 15))#candidate|3439|(9, 11, 15)|var|float64
bop_3440 = relay.not_equal(uop_3371.astype('bool'), relay.reshape(var_3439.astype('bool'), relay.shape_of(uop_3371))) # shape=(9, 11, 15)
uop_3448 = relay.rsqrt(uop_3433.astype('float64')) # shape=(9, 11, 15)
output = relay.Tuple([call_3385,var_3386,call_3409,const_3410,const_3411,call_3427,bop_3440,uop_3448,])
output2 = relay.Tuple([call_3387,var_3386,call_3412,const_3410,const_3411,call_3428,bop_3440,uop_3448,])
func_3460 = relay.Function([var_3386,var_3439,], output)
mod['func_3460'] = func_3460
mod = relay.transform.InferType()(mod)
mutated_mod['func_3460'] = func_3460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3460_call = mutated_mod.get_global_var('func_3460')
var_3462 = relay.var("var_3462", dtype = "float64", shape = (660, 2))#candidate|3462|(660, 2)|var|float64
var_3463 = relay.var("var_3463", dtype = "float64", shape = (9, 11, 15))#candidate|3463|(9, 11, 15)|var|float64
call_3461 = func_3460_call(var_3462,var_3463,)
output = call_3461
func_3464 = relay.Function([var_3462,var_3463,], output)
mutated_mod['func_3464'] = func_3464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3468 = relay.var("var_3468", dtype = "float64", shape = (6, 7, 3))#candidate|3468|(6, 7, 3)|var|float64
uop_3469 = relay.log2(var_3468.astype('float64')) # shape=(6, 7, 3)
output = uop_3469
output2 = uop_3469
func_3475 = relay.Function([var_3468,], output)
mod['func_3475'] = func_3475
mod = relay.transform.InferType()(mod)
var_3476 = relay.var("var_3476", dtype = "float64", shape = (6, 7, 3))#candidate|3476|(6, 7, 3)|var|float64
output = func_3475(var_3476)
func_3477 = relay.Function([var_3476], output)
mutated_mod['func_3477'] = func_3477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_3502 = relay.TupleGetItem(func_1201_call(), 0)
call_3503 = relay.TupleGetItem(func_1203_call(), 0)
func_2740_call = mod.get_global_var('func_2740')
func_2742_call = mutated_mod.get_global_var('func_2742')
call_3508 = relay.TupleGetItem(func_2740_call(), 0)
call_3509 = relay.TupleGetItem(func_2742_call(), 0)
output = relay.Tuple([call_3502,call_3508,])
output2 = relay.Tuple([call_3503,call_3509,])
func_3511 = relay.Function([], output)
mod['func_3511'] = func_3511
mod = relay.transform.InferType()(mod)
output = func_3511()
func_3512 = relay.Function([], output)
mutated_mod['func_3512'] = func_3512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2921_call = mod.get_global_var('func_2921')
func_2923_call = mutated_mod.get_global_var('func_2923')
call_3515 = relay.TupleGetItem(func_2921_call(), 0)
call_3516 = relay.TupleGetItem(func_2923_call(), 0)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_3520 = relay.TupleGetItem(func_1902_call(), 3)
call_3521 = relay.TupleGetItem(func_1903_call(), 3)
uop_3527 = relay.acos(call_3515.astype('float32')) # shape=(40, 2)
uop_3529 = relay.acos(call_3516.astype('float32')) # shape=(40, 2)
output = relay.Tuple([call_3520,uop_3527,])
output2 = relay.Tuple([call_3521,uop_3529,])
func_3534 = relay.Function([], output)
mod['func_3534'] = func_3534
mod = relay.transform.InferType()(mod)
mutated_mod['func_3534'] = func_3534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3534_call = mutated_mod.get_global_var('func_3534')
call_3535 = func_3534_call()
output = call_3535
func_3536 = relay.Function([], output)
mutated_mod['func_3536'] = func_3536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_3540 = relay.TupleGetItem(func_1703_call(), 4)
call_3541 = relay.TupleGetItem(func_1705_call(), 4)
output = relay.Tuple([call_3540,])
output2 = relay.Tuple([call_3541,])
func_3551 = relay.Function([], output)
mod['func_3551'] = func_3551
mod = relay.transform.InferType()(mod)
output = func_3551()
func_3552 = relay.Function([], output)
mutated_mod['func_3552'] = func_3552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1973_call = mod.get_global_var('func_1973')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_3564 = func_1973_call()
call_3565 = func_1973_call()
func_3511_call = mod.get_global_var('func_3511')
func_3512_call = mutated_mod.get_global_var('func_3512')
call_3567 = relay.TupleGetItem(func_3511_call(), 1)
call_3568 = relay.TupleGetItem(func_3512_call(), 1)
bop_3569 = relay.bitwise_and(call_3564.astype('int32'), call_3567.astype('int32')) # shape=(10, 13, 11)
bop_3572 = relay.bitwise_and(call_3565.astype('int32'), call_3568.astype('int32')) # shape=(10, 13, 11)
output = bop_3569
output2 = bop_3572
func_3577 = relay.Function([], output)
mod['func_3577'] = func_3577
mod = relay.transform.InferType()(mod)
output = func_3577()
func_3578 = relay.Function([], output)
mutated_mod['func_3578'] = func_3578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3577_call = mod.get_global_var('func_3577')
func_3578_call = mutated_mod.get_global_var('func_3578')
call_3579 = func_3577_call()
call_3580 = func_3577_call()
output = call_3579
output2 = call_3580
func_3581 = relay.Function([], output)
mod['func_3581'] = func_3581
mod = relay.transform.InferType()(mod)
mutated_mod['func_3581'] = func_3581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3581_call = mutated_mod.get_global_var('func_3581')
call_3582 = func_3581_call()
output = call_3582
func_3583 = relay.Function([], output)
mutated_mod['func_3583'] = func_3583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1169_call = mod.get_global_var('func_1169')
func_1170_call = mutated_mod.get_global_var('func_1170')
call_3621 = relay.TupleGetItem(func_1169_call(), 0)
call_3622 = relay.TupleGetItem(func_1170_call(), 0)
output = relay.Tuple([call_3621,])
output2 = relay.Tuple([call_3622,])
func_3623 = relay.Function([], output)
mod['func_3623'] = func_3623
mod = relay.transform.InferType()(mod)
mutated_mod['func_3623'] = func_3623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3623_call = mutated_mod.get_global_var('func_3623')
call_3624 = func_3623_call()
output = call_3624
func_3625 = relay.Function([], output)
mutated_mod['func_3625'] = func_3625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
call_3650 = relay.TupleGetItem(func_1329_call(), 2)
call_3651 = relay.TupleGetItem(func_1331_call(), 2)
const_3663 = relay.const([[2.842113,-5.500322],[6.551496,-2.994544],[-3.593583,-1.850685],[-1.736834,3.913811],[3.015628,-5.206781],[-1.910321,-4.032282],[7.199177,-9.201220],[-6.094326,8.506774],[-3.198469,3.882955],[4.560227,-7.160597],[-2.065144,-4.988614],[-9.817496,-2.410448],[1.229011,5.508152],[-8.689701,-8.006066],[-4.168298,-3.129945],[-8.172087,-2.113198],[-6.364323,-2.754344],[5.503150,9.668711],[-5.973997,-4.208150],[2.390589,-8.343136],[1.263800,-5.248963],[6.290894,9.111796],[-8.575765,5.543168],[-4.164182,1.752384],[6.931465,-8.912726],[-1.610227,-6.612923],[8.495034,9.060212],[7.663276,8.407107],[-2.990234,-9.578565],[-5.816168,2.096580],[-8.596458,0.152453],[-6.614488,8.982645],[-7.793695,-2.490558],[2.672772,5.194398],[-6.513584,-3.294990],[-7.081394,-1.530432],[8.422248,1.537734],[9.812331,-7.227113],[6.275213,-5.048346],[9.832235,5.542185],[1.036572,-1.870717],[0.100787,8.416186],[3.692309,8.759194],[2.190375,-5.770191],[9.177885,-9.552422],[-0.724656,-5.322960],[-0.388477,8.417821],[-4.763743,9.969823],[-2.778525,-3.646243],[-5.640041,3.610353],[4.484300,3.212095],[1.825204,-9.378884],[4.196112,3.888159],[6.141254,1.807595],[-3.399810,7.730696],[-2.835184,-0.917885],[1.675469,-3.156416],[-5.664253,6.186023],[-1.539460,-6.352807],[-8.056088,-9.890426],[2.452404,0.006694],[1.211691,-6.828106],[7.180158,-5.360605],[-7.132276,-7.792065],[-6.534286,8.794379],[3.258167,-8.242317],[-3.597236,1.786452],[4.522925,-2.875264],[0.203499,-4.088160],[2.367219,-8.190791],[-1.567161,-6.408244],[1.987156,-2.341006],[3.970910,-5.811722],[-6.196589,-9.630952],[8.689474,1.391627],[-9.832991,7.541416],[5.731425,-9.494036],[-9.560569,8.570342],[-2.602447,2.496117],[1.069361,8.173908],[-9.410840,1.486536],[-9.149985,4.890599],[4.062313,6.078578],[-3.027130,8.702835],[-7.096802,-7.984795],[-4.436132,3.817722],[3.591109,-0.607908],[2.619942,3.789858],[5.626388,-1.464602],[0.711015,7.348089],[8.687233,-8.949557],[4.231347,1.717577],[2.173512,-2.024145],[-6.724480,-1.585056],[-2.672238,-0.787802],[-4.711599,0.685220],[-8.736429,-7.785821],[6.237088,-8.846297],[-3.026912,3.692274],[-2.454811,6.366348],[-4.208897,4.610007],[6.819648,3.067454],[-8.226266,3.371513],[1.583327,-5.158811],[4.510010,9.695158],[-7.447492,8.488395],[-5.331066,-1.552404],[7.776653,3.147830],[5.328591,-0.748752],[-5.971406,-8.947888],[0.088405,-5.530375],[3.697726,-9.069342],[8.863659,5.218700],[6.745833,-9.563271],[1.754968,-5.457472],[-5.924225,9.846956],[-0.782875,-8.330680],[2.848794,2.288548],[2.083211,9.817550],[-4.843174,3.238600],[-2.202117,9.375686],[9.312592,7.488797],[-2.352011,1.482989],[6.051678,-5.227561],[8.774115,7.915460],[-0.460011,1.033849],[-9.663860,-9.637273],[1.080513,-8.553692],[-2.189308,3.994245],[7.791394,8.430006],[0.254312,-5.866388],[0.928241,-6.108692],[4.589174,4.001098],[8.535505,0.171383],[7.243171,-1.079490],[0.755929,-8.730161],[0.164328,9.856073],[5.288427,-6.794886],[-2.570770,5.870429],[-7.937056,-3.932122],[6.165013,2.879454],[-1.854985,-5.273486],[-3.042141,-8.093741],[2.532280,9.980365],[7.037531,5.476980],[3.246077,0.979499],[-0.962054,6.411203],[-6.157241,4.376764],[4.525541,-8.033039],[4.628938,-3.483130],[-9.730023,-5.046776],[1.633570,-3.568751],[-6.491721,9.355566],[0.837409,8.973244],[-8.501488,-0.687380],[-7.564491,-2.271499],[-2.031485,-5.746386],[-5.452208,6.592452],[9.679240,-3.374395],[-3.333453,7.375574],[8.591880,-8.210127],[0.579216,-8.775174],[9.940201,3.383603],[-2.542006,4.477732],[-4.606929,8.647140],[-6.072388,9.578454],[-0.971098,8.943759],[-9.937685,1.733425],[4.303195,3.872335],[-1.602574,-4.328583],[-2.133734,2.178888],[-2.711100,-7.872660],[-5.519059,6.329262],[-2.106814,2.534176],[-1.970469,4.701318],[8.907744,-6.572475],[8.269570,-5.637624],[-1.454175,3.972131],[-5.937471,9.216253],[5.457763,2.889717],[3.088576,1.149221],[-2.959213,-9.293865],[6.083491,1.658404],[6.732015,5.722351],[2.790217,-0.476223],[7.463727,8.836262],[-2.308884,-6.188484],[-3.606224,-6.747130],[-1.636511,0.701140],[-6.758360,0.591627],[-1.372122,-4.493842],[5.533024,-0.928138],[7.726099,-4.613428],[-3.262866,-0.917104],[-6.020937,-7.352186],[7.825259,2.434693],[-1.413301,-1.455769],[-1.466664,-6.697005],[-1.180932,-5.574645],[0.547369,6.271468],[6.256936,9.858603],[5.147157,1.133043],[-2.409721,-0.186100],[-8.605944,7.970962],[-5.190347,6.508688],[2.097911,6.583331],[-1.138958,9.449883],[-3.252401,6.998149],[-6.768762,5.145690],[-3.689429,-0.472683],[8.521244,-0.362912],[-9.868669,-0.926945],[9.128831,5.915717],[-6.553935,0.861569],[7.538004,-6.773373],[2.136338,7.064528],[-4.955804,8.208304],[0.622204,2.803833],[-3.490807,-6.451247],[9.951467,9.983642],[-1.431300,5.239075],[-9.516771,-0.982415],[-9.774597,7.906654],[-6.045797,3.918258],[-7.431374,7.670068],[-6.822223,-5.258611],[9.179236,3.750907],[0.170702,2.645397],[-3.098252,-5.699005],[8.455945,-6.236320],[6.317814,7.233946],[-2.241739,-9.490315],[7.188679,1.186522],[-4.249209,-2.550438],[-1.990682,-1.197453],[6.995007,-0.883756],[1.054979,-3.453850],[6.542502,-8.222690],[-4.034063,-3.173333],[-0.145324,7.105191],[-5.074093,-6.561459],[-6.304951,-2.631874],[-3.872456,4.085262],[3.049486,7.231699],[-1.194736,7.627982],[-3.411936,1.854514],[-2.750999,-7.961546],[-3.245964,-9.257329],[-3.321821,-1.893240],[-5.223344,4.353106],[4.563328,-8.383532],[-4.381693,8.582413],[9.168232,-0.540060],[-0.516571,-6.791194],[6.147634,-3.014864],[4.823526,6.126865],[2.135664,-2.330237],[-0.196941,-4.919335],[-5.872226,-0.658611],[9.362182,-7.487326],[9.662031,-2.266690],[-0.455452,-4.216584],[3.755547,4.523048],[0.010749,-8.321102],[-8.380752,-3.498754],[8.121136,7.064589],[9.076067,-4.876799],[5.136160,0.627510],[-5.257172,7.606743],[2.926959,-1.766469],[-3.688481,0.964715],[-9.903709,-4.811288],[-6.165539,-4.078547],[5.809797,-2.073445],[0.295957,1.068258],[1.899489,2.403882],[6.663026,-0.273314],[-3.064689,7.568931],[-6.974038,9.338390],[6.167280,-4.344853],[-8.507458,1.286960],[-1.151598,0.201468],[-0.916482,-3.369245],[2.711455,8.763053],[-5.322876,7.306289],[9.962910,8.462032],[5.181022,-2.280181],[-0.290502,1.021639],[1.292486,8.717799],[-5.940075,-2.670322],[3.236146,-6.863647],[-5.885237,0.404890],[3.540270,-0.741457],[-8.189131,-4.746569],[-9.614699,-0.187833],[9.093113,2.986838],[-5.361709,-7.810444],[5.906990,4.159032],[-0.490865,-0.714272],[-8.102323,3.985703],[-5.392853,-8.635762],[-5.053760,2.471960],[0.051050,6.886188],[9.649031,-8.660933],[1.624485,-0.043374],[7.134323,-7.246517],[4.567669,-0.702179],[-8.687154,1.325951],[4.653110,5.876914],[-2.308629,-2.150685],[-9.565817,7.500609],[6.566251,4.301876],[-3.672419,5.444704],[-5.030316,4.498848],[-4.927625,1.207192],[-1.783373,-6.057058],[-7.726230,9.224883],[-8.272752,-3.685771],[6.730557,-0.854010],[3.131629,-4.509708],[9.674848,7.077783],[2.150706,5.780093],[7.096334,-9.336564],[1.888378,1.308284],[5.114816,-9.854334],[3.775189,-8.228821],[-8.756268,5.514416],[0.924833,-5.937768],[2.739736,-6.597072],[-7.448258,4.067624],[-9.878668,0.526143],[-7.565966,6.271478],[3.590698,5.740162],[-8.720588,-8.052197],[-4.534283,5.589105],[5.177663,-7.494889],[5.724814,4.947441],[-9.525577,4.637458],[-3.662216,-6.911536],[-7.305223,-3.831174],[3.696986,-9.019311],[-6.577045,3.872661],[-7.418852,-7.703610],[-5.137378,-1.863252],[5.172113,9.972139],[-2.027003,-8.616476],[-4.081723,4.921794],[-4.998027,-5.588295],[2.423780,8.111952],[4.240494,-4.276562],[2.529445,8.425548],[2.291960,-7.726888],[8.080464,-8.130092],[-6.959397,0.433342],[6.110782,8.933521],[-1.553250,-3.045504],[-4.166006,4.971192],[-7.132840,4.678880],[-6.847271,3.250025],[8.179535,-7.829071],[7.557938,-3.731208],[4.670438,-6.923357],[2.273720,-5.471465],[-4.077778,6.276237],[7.549360,-4.052337],[9.105585,2.695497],[7.439854,7.737561],[-4.246615,8.318925],[7.043847,-5.213403],[7.470833,3.961096],[-9.655162,1.691494],[-8.705340,-7.253064],[0.997287,1.058948],[-1.804860,9.960223],[9.457413,-9.327837],[-2.164251,-9.583103],[-3.776430,8.296810],[7.819454,-1.755280],[-2.208122,-4.118269],[-9.205171,-8.450976],[-4.526851,-0.358297],[3.969922,-8.780078],[9.144163,-5.606154],[-7.083661,6.503584],[1.495534,8.044687],[7.689360,3.345583],[5.547646,8.484141],[-1.806930,7.437379],[7.273966,9.250061],[0.716982,-9.512944],[6.654552,1.761414],[8.200579,-8.054264],[4.960280,6.730187],[5.606154,-4.848044],[4.417774,-5.185916],[-2.484041,-3.847917],[-2.196596,-5.879000],[5.240522,-2.828114],[5.989059,-1.004724],[-0.801080,-0.657701],[-9.853470,-3.645609],[-4.004817,-2.316795],[-6.976941,9.703904],[4.556309,4.836498],[8.913880,9.970491],[-9.820103,3.516842],[2.293675,-1.152877],[-5.856394,7.387065],[-9.173629,-3.601882],[8.792206,-5.697833],[-1.921169,-5.890567],[0.151795,0.616910],[4.796485,8.060737],[-0.670628,6.378295],[6.206672,7.976588],[-3.560447,-5.238537],[-7.576769,7.132243],[-2.471588,-7.343771],[0.205618,-6.672903],[-6.999969,-9.210507],[-4.710193,3.806804],[-3.023016,0.953592],[-8.160715,-2.491028],[2.859366,4.976383],[8.189434,5.479461],[0.865341,-8.231557],[-8.814160,3.394259],[-2.139664,-5.455413],[-9.670884,9.575828],[7.946837,-9.662226],[4.161985,-4.037777],[8.371303,0.907956],[6.152446,-7.378270],[-0.569440,6.163969],[6.027255,1.956392],[-8.538554,9.703155],[1.402059,-8.823675],[9.550108,-8.782290],[9.184909,1.054588],[-1.647063,3.717650],[-6.344633,-9.223642],[3.858621,6.358562],[4.300170,-5.722493],[2.542524,-3.229981],[4.159161,3.470454],[2.757261,0.331546],[-1.298048,1.882554],[1.585248,-2.789690],[1.218645,-4.339507],[8.506326,6.414513],[-6.764194,-9.786968],[9.041999,-4.302128],[1.895953,6.660098],[9.119346,9.329549],[-6.097184,1.014255],[-5.074947,0.149567],[-3.199302,-8.101949],[0.847922,-5.309638],[3.233146,6.912265],[1.274146,8.170634],[9.583239,6.608100],[-8.744222,3.013238],[-3.972883,-7.151228],[-3.150264,-9.829592],[-4.948228,-8.397502],[-0.222698,2.126371],[-4.262697,9.745526],[8.693661,-2.654205],[0.198878,8.247483],[1.666153,-8.612014],[5.228077,-1.554330],[-3.507787,4.858782],[3.612638,6.573575],[-6.486802,6.574130],[2.647112,3.169413],[-4.571809,-9.223759],[2.098714,9.959766],[-1.274553,-3.070720],[-5.739798,0.593573],[0.933275,3.621528],[8.624808,5.390806],[-4.324137,-3.905839],[0.615443,-2.835380],[2.881872,9.336826],[-4.999594,3.394209],[3.656239,0.293425],[-4.732581,-1.621432],[8.321108,-7.687877],[-7.170305,-7.841838],[6.242131,3.689757],[-2.174724,-4.604709],[-8.999863,0.762607],[-6.569420,6.196955],[-7.080264,7.921247],[2.307670,0.898720],[-2.647414,7.311597],[8.575130,2.648306],[-9.300821,1.746335],[-3.129070,5.551196],[8.747849,0.975959],[4.546153,9.073966],[8.135904,4.460777],[3.263033,7.750171],[-3.569841,-5.809387],[8.795493,-7.314417],[-4.033006,-9.038463],[2.442853,7.579069],[-2.477689,-7.961580],[6.620213,-9.574290],[5.013362,-5.992160],[-4.656142,-0.667677],[-9.607905,-0.552689],[-0.365498,-7.330109],[-0.289657,8.221990],[-5.322172,-5.027314],[9.709272,-4.549648],[3.393869,-7.289494],[-1.419096,1.359602],[-6.628977,-6.091313],[-7.553921,-9.852411],[3.009981,-8.895819],[-7.136926,-4.519575],[-3.001311,9.439357],[4.398920,3.194805],[-3.202227,9.871260],[-2.498043,4.600158],[-9.235493,9.596822],[-8.048579,1.487248],[-8.432182,9.297269],[9.699385,4.551326],[7.626396,-0.008432],[9.815539,3.690878],[6.844113,-9.014907],[9.947413,-5.281710],[8.430680,-6.580547],[-5.484562,-0.777047],[2.762711,7.539764],[2.201312,5.954695],[4.808093,4.217939],[0.276654,1.636550],[-4.100502,-9.751182],[1.882452,2.213105],[-7.286320,7.071325],[-8.295294,-9.341656],[2.863533,-2.513842],[-4.369131,2.359894],[0.359509,-7.918255],[6.924131,5.571692],[-4.189090,0.907887],[9.572202,-5.508911],[1.496198,-9.363463],[8.916738,4.703136],[-8.232892,1.966262],[6.073731,-2.203330],[-6.078517,9.281895],[-5.188412,5.476234],[-4.890362,4.402422],[2.024552,-1.932720],[0.950589,-6.449186],[1.264127,6.652449],[-6.763054,-5.233597],[-5.172288,-3.128604],[-5.595679,-4.254601],[5.157915,4.243282],[2.082626,9.425804],[-3.526331,9.782373],[-6.818682,4.100868],[7.110491,7.057460],[8.117800,-9.509048],[-1.283091,-2.600000],[-5.992739,-9.510561],[-8.002613,-9.099352],[-6.055363,1.523579],[8.978315,-4.034938],[-7.765578,3.762815],[-7.744996,8.638877],[-0.579735,3.322206],[8.666555,2.853543],[9.582788,1.787490],[5.659790,2.724363],[7.566012,5.613029],[0.486149,-7.780438],[5.711203,2.298415],[-6.451396,0.044708],[-0.649462,5.454065],[1.062054,-8.622561],[-7.605077,-8.408651],[7.750988,3.404893],[-2.063090,1.010841],[-9.219209,-3.842136],[3.834039,-7.837368],[-7.123169,-6.230763],[-2.039522,-6.345774],[7.600132,-0.997672],[-5.998456,0.515354],[-2.082110,-3.035099],[3.196873,-3.497965],[7.526192,3.750722],[9.955883,-6.013712],[-2.841961,-4.012091],[3.489986,-0.189460],[2.537402,-3.791079],[2.716565,4.367634],[1.590167,5.068774],[8.224601,-2.901175],[-6.132060,4.030128],[0.365016,8.315000],[2.010395,4.825934],[4.903375,7.045387],[-4.046641,-4.375621],[9.463754,-9.993064],[-3.724270,-5.994872],[6.016799,-2.685046],[-1.296083,5.231773],[-4.898161,2.029104],[6.378566,-0.146314],[-0.293135,4.461779],[3.258748,4.471008],[-7.677723,4.583144],[8.532789,-5.862871],[0.122887,-4.274825],[4.851411,1.406614],[-0.547949,6.058716],[1.947059,-9.740194],[9.438329,6.857977],[-7.187596,1.280218],[-7.345224,9.119320],[-2.881884,-4.719109],[-7.041603,-0.037614],[1.730509,2.102944],[-0.780753,0.448594],[-3.801932,-5.756580],[7.211363,2.375228],[-8.299702,-2.635353],[1.129146,-6.311068],[-4.206644,3.614838],[8.897723,-3.631957],[-1.843608,-3.814146],[-1.222392,-7.701294],[-6.004389,-4.109468],[-9.383572,3.015011],[-4.897489,5.200997],[9.654667,-9.104435],[5.392492,-3.318480],[8.715139,9.830986],[3.825329,-9.831303],[1.315828,-2.547525],[9.691383,6.851584],[-4.019959,-0.379869],[7.085379,5.347313],[4.898571,-1.893824],[1.454973,2.006110],[3.690542,-5.166783],[1.316459,-1.323857],[-6.491715,-1.534526],[8.909517,5.140613],[-5.509764,-1.900691],[-3.102227,-7.470396],[1.305694,-0.687947],[5.040921,2.631857]], dtype = "float64")#candidate|3663|(660, 2)|const|float64
bop_3664 = relay.logical_or(call_3650.astype('bool'), relay.reshape(const_3663.astype('bool'), relay.shape_of(call_3650))) # shape=(660, 2)
bop_3667 = relay.logical_or(call_3651.astype('bool'), relay.reshape(const_3663.astype('bool'), relay.shape_of(call_3651))) # shape=(660, 2)
func_2740_call = mod.get_global_var('func_2740')
func_2742_call = mutated_mod.get_global_var('func_2742')
call_3670 = relay.TupleGetItem(func_2740_call(), 0)
call_3671 = relay.TupleGetItem(func_2742_call(), 0)
func_2116_call = mod.get_global_var('func_2116')
func_2119_call = mutated_mod.get_global_var('func_2119')
call_3673 = relay.TupleGetItem(func_2116_call(relay.reshape(const_3663.astype('float64'), [660, 2])), 0)
call_3674 = relay.TupleGetItem(func_2119_call(relay.reshape(const_3663.astype('float64'), [660, 2])), 0)
output = relay.Tuple([bop_3664,call_3670,call_3673,])
output2 = relay.Tuple([bop_3667,call_3671,call_3674,])
func_3677 = relay.Function([], output)
mod['func_3677'] = func_3677
mod = relay.transform.InferType()(mod)
output = func_3677()
func_3678 = relay.Function([], output)
mutated_mod['func_3678'] = func_3678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
call_3679 = relay.TupleGetItem(func_801_call(), 0)
call_3680 = relay.TupleGetItem(func_803_call(), 0)
output = relay.Tuple([call_3679,])
output2 = relay.Tuple([call_3680,])
func_3695 = relay.Function([], output)
mod['func_3695'] = func_3695
mod = relay.transform.InferType()(mod)
mutated_mod['func_3695'] = func_3695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3695_call = mutated_mod.get_global_var('func_3695')
call_3696 = func_3695_call()
output = call_3696
func_3697 = relay.Function([], output)
mutated_mod['func_3697'] = func_3697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3581_call = mod.get_global_var('func_3581')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_3717 = func_3581_call()
call_3718 = func_3581_call()
func_3677_call = mod.get_global_var('func_3677')
func_3678_call = mutated_mod.get_global_var('func_3678')
call_3747 = relay.TupleGetItem(func_3677_call(), 2)
call_3748 = relay.TupleGetItem(func_3678_call(), 2)
output = relay.Tuple([call_3717,call_3747,])
output2 = relay.Tuple([call_3718,call_3748,])
func_3752 = relay.Function([], output)
mod['func_3752'] = func_3752
mod = relay.transform.InferType()(mod)
output = func_3752()
func_3753 = relay.Function([], output)
mutated_mod['func_3753'] = func_3753
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3761 = relay.var("var_3761", dtype = "uint64", shape = (6, 8, 14))#candidate|3761|(6, 8, 14)|var|uint64
var_3762 = relay.var("var_3762", dtype = "uint64", shape = (6, 8, 14))#candidate|3762|(6, 8, 14)|var|uint64
bop_3763 = relay.greater_equal(var_3761.astype('bool'), relay.reshape(var_3762.astype('bool'), relay.shape_of(var_3761))) # shape=(6, 8, 14)
uop_3772 = relay.asinh(var_3761.astype('float64')) # shape=(6, 8, 14)
bop_3778 = relay.greater(uop_3772.astype('bool'), relay.reshape(bop_3763.astype('bool'), relay.shape_of(uop_3772))) # shape=(6, 8, 14)
func_2153_call = mod.get_global_var('func_2153')
func_2155_call = mutated_mod.get_global_var('func_2155')
const_3786 = relay.const([-9.689867,4.555610,-4.051617,0.010249,-1.707576,4.498289,8.291769,5.987337,-2.640730,4.841444,8.864182,6.492063,6.713858,4.814872,6.819744,5.674151,4.303437,-6.076168,8.438460,-6.458166,9.277117,-6.999217,9.665784,6.326000,1.122123,-0.760071,8.682605,7.845818,-0.381825,0.200049,-7.236998,5.899088,-2.452295,6.885500,2.100417,3.413757,1.054925,8.474696,6.243195,-8.608733,2.942008,4.918495,5.635278,0.789981,9.011410,1.201288,-5.085412,-0.874667,-2.263242,-5.950089,9.827363,9.551481,-2.015051,2.164688,2.108204,-7.674704,-3.830091,8.400753,-1.468305,7.938070,2.544124,8.529933,2.873242,-9.712941,2.949661,6.578668,7.070602,5.407238,-4.007348,0.169955,3.625089,-0.194394,-6.264268,9.034194,0.622073,-1.425264,4.830771,-7.468672,4.498205,3.123483,2.723545,5.128260,9.083752,-9.607442,8.256768,8.094320,8.068071,-9.150219,7.022787,2.835132,-9.535853,5.425978,5.923113,-5.286985,3.186076,-2.626461,9.085825,7.748555,-8.150430,-1.923667,0.814165,-0.947045,1.567508,-7.497086,-1.735523,0.672870,-6.714085,9.918038,-2.790182,-9.335635,2.528763,7.859931,9.858925,8.738986,-5.507558,9.693199,0.506004,2.328293,9.414935,3.583129,0.274381,-5.569619,0.258655,5.807753,-9.745378,1.212868,-1.337165,-9.893412,9.098965,-2.188513,6.349990,-3.956441,8.789342,7.160014,6.231789,2.146121,-0.906616,-1.970094,9.007143,2.384370,-5.698066,1.670372,2.930211,-6.408145,0.003645,4.536601,-5.673567,8.646778,5.307675,-8.560306,6.645563,0.794427,-8.272056,7.582211,1.732756,7.604764,-1.564084,8.844411,-7.163511,-9.227889,-4.123699,-7.248280,1.659172,-8.844198,-6.532310,-1.384166,-2.296372,2.675397,8.560883,-9.249649,-3.176953,-9.523872,-1.604488,-0.845094,5.967257,-7.727366,-7.065492,4.694760,-3.606277,-4.477822,-0.653937,-4.005863,-1.947210,0.234906,6.452183,8.214385,8.148800,-9.544751,6.996691,-4.577652,1.880941,-5.912804,3.479683,-8.055777,2.653482,6.633680,2.745189,2.650730,4.332643,8.206245,-7.984387,-9.987457,3.681409,-6.215689,-4.768124,1.845970,1.519916,1.376675,4.585219,0.135017,4.245641,2.643540,-1.035340,-1.050459,6.400545,-8.877162,-5.508960,-3.242422,7.138322,-3.440663,9.119277,-7.071567,9.250424,-9.342110,6.069287,-1.793304,-6.260501,5.740079,-9.971619,-6.965474,4.852594,1.251366,-4.296793,2.603052,-7.806714,6.277378,-8.728223,7.171890,9.378780,-0.873963,4.607370,5.511949,-8.690869,-6.853286,1.593749,7.673121,-3.244821,-0.565928,-8.011726,-6.547271,-8.233027,-4.989940,7.506902,-7.508080,5.700985,4.574954,8.763481,-4.193816,2.638592,-3.656256,-9.843820,-9.333959,6.141889,8.964632,-9.188675,-2.104023,9.086090,7.596452,-0.217486,3.101326,7.714889,-6.605793,-4.718324,-5.939667,-9.550975,-0.390971,-0.016527,8.366569,4.855255,7.520552,-3.434284,-1.905933,0.828130,2.828403,-8.432444,8.972088,5.954245,-1.934275,2.579772,-0.377667,-1.389162,-0.392947,4.432665,-8.158756,-4.017516,-8.960118,9.968911,-3.949775,2.362724,1.099447,-2.888054,1.867094,-2.844752,7.360455,-1.632604,0.026148,-0.086645,-0.779686,7.717855,4.828918,-4.811061,6.569757,-9.044475,-3.824979,2.139898,2.029912,7.364454,1.196782,0.644279,0.424347,-1.330395,-2.283475,-4.020314,-3.769411,9.711710,4.258712,-0.727704,8.890935,-7.125663,-7.973529,0.270153,5.413440,-5.708135,4.298355,-5.358559,0.285100,8.121989,0.017686,-2.668150,-1.247476,1.056400,-1.489415,-6.401673,3.039223,9.124961,-8.284531,8.567780,9.949267,-3.025584,4.687932,3.018979,-2.129132,-2.231705,-4.849006,0.340556,-1.483632,-5.563567,-0.243696,2.795327,7.441973,9.414141,1.770157,-1.666045,-0.225156,3.663624,3.160813,4.419559,-7.799879,0.726735,-0.480513,7.599371,-9.707311,4.940562,-2.614469,-9.521241,-0.321948,2.118807,-0.062491,-5.515271,-0.028176,8.779148,7.405058,0.117252,-2.759384,-1.646222,-0.957595,-8.690982,-7.261317,9.908644,-0.370809,-4.566197,-4.814372,-1.203517,6.885708,8.189296,3.952632,1.889921,0.609039,-1.203772,-2.432427,3.627949,-0.283511,5.545707,6.283380,4.582416,-9.975827,-0.092258,5.939718,3.009062,-5.202578,-2.221686,7.024907,-3.829632,1.515482,0.482689,0.920183,-1.997202,-3.909248,-0.887068,-5.649158,8.592393,-6.624107,6.966049,-6.939019,-1.283904,-7.507710,-8.478941,6.901316,-1.420581,2.388519,-4.360517,-9.514456,-9.593140,-8.267990,1.857973,-8.538784,9.541392,-7.509942,-1.185384,2.366575,4.060461,-0.117077,-4.838287,-2.714659,-1.505426,-3.004924,8.008406,8.967233,8.545024,-6.504068,-3.970154,7.926336,6.955795,5.956175,-1.205772,7.280251,-4.482122,-7.977533,3.206295,9.586213,-9.985244,-6.499348,8.641027,-9.489550,6.190795,5.555027,7.576384,7.265674,-8.177405,2.646276,2.866033,5.365392,-9.166016,-6.191966,-3.615789,8.205206,4.651055,-7.134089,5.676279,0.098170,-6.910389,-1.532085,9.930403,-9.534323,-7.042176,4.395781,-0.396337,9.991347,-3.064002,-1.429751,-1.857153,5.987511,3.710571,-5.387199,-2.301400,2.930362,-2.457669,7.519572,7.659636,6.996447,9.877412,-7.971308,9.431715,-1.065330,8.318506,2.176949,-7.566530,-7.508548,-4.263548,-8.641922,-5.980899,9.793859,1.003637,9.968615,5.162970,8.637753,9.039097,-1.119265,4.808291,-3.150958,-5.465454,-4.342844,-4.182452,-8.454607,6.840735,-5.628738,1.438454,-0.127212,-2.999170,0.035080,4.472667,-1.895527,-9.600076,2.071530,1.394361,1.992427,4.722292,-0.349160,-2.809483,4.541448,0.470076,0.454786,7.826181,8.509133,3.387323,9.383495,6.040397,3.034086,0.988297,-9.956713,-2.438772,-2.986906,2.098694,-2.842954,3.417291,-4.082166,9.255791,4.409608,7.716505,-8.523642,-5.826138,1.204358,6.818545,7.056012,-2.371920,7.134532,9.974849,-6.163487,-7.296409,-9.941224,-7.672911,-1.462776,9.447813,5.446087,-7.501639,8.891951,5.337248,0.969360,-2.770695,3.199997,-5.042035,7.184156,-5.878654,-3.437178,-0.523110,2.964424,4.064231,-5.653797,2.632424,-5.826539,2.476410,-2.594786,-9.103438,0.871032,2.752874,7.310578,7.205956,2.441295,0.059150,-8.895721,8.797380,-1.830880,0.092776,0.161806,-7.467969,8.119341,6.775817,1.049158,1.668819,-0.802330,0.113819,-9.618087,5.997943,0.221946,0.553235,-7.997102,7.411491,-9.719272,-8.495315,1.215535,7.136581,-7.583272,0.047880,-0.740610,5.466726,9.307607,2.495161,7.397979,2.183533,1.207130,6.831227,3.831860,-8.768867,4.737598,3.007074,-9.457850,1.391805,-3.275139,-9.050099,7.709452,3.389301,-3.947120,-2.886118,8.776359,-7.360020,0.880815,5.030838,-8.194638,-3.037115,-8.101374,5.637489,-5.688091,4.066134,4.525875,3.535378,6.447383,7.502846,2.978148,-7.024359,4.678844,5.713359,-7.333282,-5.955081,5.443657,-9.908547,-1.701737,-2.556262,6.443331,0.844624,2.496463,2.093913,-9.700074,-1.078067,3.160083,-1.872238,-5.089984,5.023159,-5.546449,9.696723,-6.863767,4.855385,4.629857,3.544403,-6.294049,3.876518,4.534371,-1.335898,6.249574,-3.103732,2.253175,-1.795649,-9.520045,-2.310413,7.396361,-0.167078,-7.785066,-8.719088,2.619075,-7.895398,9.996216,1.539198,-3.839865,-2.390281,0.520719,-0.603405,3.536599,-9.409519,-9.058859,5.661496,-2.140513,7.960839,1.799936,7.959441,5.429975,-1.818807,0.350226,-8.679330,-2.328437,-0.604822,0.269201,-8.100797,3.382855,-4.791513,-6.947680,6.533688,-3.777120,5.477554,-1.495560,-4.663442,-5.409107,-8.036878,4.014006,1.601315,2.869764,7.761161,9.006851,-5.344019,-1.048138,-2.987692,-2.513350,5.139046,5.627094,-9.892246,9.079422,0.665270,-1.942074,-4.358813,-7.673267,8.699647,9.959635,-7.623737,-9.485934,4.171699,-1.640754,2.206635,9.207546,0.978945,4.615398,-0.525555,-3.536866,-9.888162,-0.321616,-5.460858,2.732512,-7.332569,-2.619532,4.484728,9.912776,1.314551,-2.469722,-1.812774,-5.363508,-3.270795,-5.037049,-0.685245,8.130671,9.358794,7.600151,-8.807721,0.586717,4.087398,-9.005096,-2.870352,5.768138,5.339425,1.306700,9.983250,5.403252,7.541517,7.801335,-6.819011,3.148925,-0.068772,-1.615541,1.732484,3.069279,9.814354,6.186112,-9.438999,-5.823252,-8.863590,1.230098,3.704062,-7.527061,-5.611765,-6.593801,-8.573501,-6.064870,4.327726,8.927703,-8.032917,5.412099,-5.336520,-1.822539,-3.668031,-7.107731,-2.098056,-6.685111,-9.570582,-7.837936,-6.602775,-8.880866,-6.213334,0.252383,7.602695,-7.808418,-9.143219,3.258647,-5.800489,0.172248,-2.634681,-9.610787,4.788903,-0.509171,9.282281,0.912866,-2.494839,-5.868049,-4.543712,-6.594294,-5.691220,-5.807853,-2.973609,-0.521575,1.767557,8.584324,4.451344,-1.874919,2.274292,0.676375,8.219942,-2.199941,-9.886052,1.910740,1.661321,-3.088893,-6.200260,-5.159792,-3.970341,-5.389117,-6.172615,-6.798099,4.881345,-9.128252,5.164910,8.534118,-2.513055,-8.613459,-0.833204,-3.430608,7.809280,9.202895,6.673748,7.808408,-1.577452,3.871031,8.571345,4.012239,-1.055111,7.220933,0.604194,-2.355872,7.332966,-4.881452,-3.055591,5.847263,8.188422,-5.904039,-6.782800,-4.208424,6.782406,4.160090,5.571037,4.480111,-0.414505,-2.908949,2.159514,-1.163556,7.084572,-2.011324,3.329871,-0.683434,-2.403648,2.579758,-1.056704,-8.929111,2.761821,-2.203989,-4.265955,-0.074138,9.119727,-8.174655,7.613648,4.369159,5.610873,7.704234,5.429892,1.734245,-3.974025,-7.544097,-0.740766,-1.552867,-4.902215,9.284267,-0.724531,9.463141,-8.477209,-9.188676,-9.270637,-3.252695,7.335697,-1.295258,0.576407,-6.364639,-0.029136,-1.275276,9.268129,-0.321388,-7.056071,-1.123509,7.649500,-7.629795,7.117822,-2.382931,-0.062887,7.070181,-7.131089,-8.521112,9.786370,1.023266,9.210972,4.546504,-2.199813,-7.561888,1.306799,2.958879,-9.032515,-6.636218,-4.956478,-9.657368,6.925842,-8.891315,2.934716,-4.539972,0.290204,1.358166,0.783976,-3.215528,-3.602165,-8.553440,3.226810,9.506482,3.457005,-8.037626,-5.887816,-2.146026,-8.498276,1.724422,4.564444,1.120981,8.137154,0.344274,3.848928,-5.663941,-8.273741,2.461593,-1.282220,-7.885563,-3.830766,0.357707,6.918072,-9.488111,-5.937451,1.888891,3.805073,-3.980132,7.792128,-2.834657,1.154809,3.032962,9.844007,-3.727798,7.900860,-7.006151,3.186254,-7.122172,7.456060,-4.446575,-1.217828,-5.015365,-4.935361,-2.627822,-2.133080,-9.839561,2.407822,-7.758870,-7.638300,-7.588378,9.831734,3.481206,-5.194415,7.958054,8.301078,2.965106,0.831126,4.515886,-9.775099,-0.633049,-3.472944,3.313798,-1.235296,0.287748,-9.786386,-7.907574,-6.630339,-4.024079,1.618932,-5.435969,0.250679,-8.496505,9.511655,9.332983,5.048367,0.494278,-8.454071,7.463856,-2.583099,-3.385302,-3.682428,-5.123992,-5.468040,1.768867,-5.204501,-5.352669,2.438950,-2.363588,6.144694,-7.716122,0.904621,-6.642717,-5.136202,-7.977430,-0.627907,6.344058,5.421943,0.660171,-6.313052,8.819917,3.881630,5.759737,-6.931696,9.988928,0.788992,-3.660215,7.856359,-7.701033,-0.256204,-0.471430,1.484053,4.376235,2.959371,2.659320,3.041583,-5.658643,-3.338731,1.408783,-5.870126,-6.640497,9.572632,-5.640569,-1.830693,-2.714713,-9.057540,0.413756,7.198507,-3.408824,-5.548937,-6.849617,8.337697,-2.201306,-1.092197,-5.142915,-5.413356,-4.860221,-6.083942,0.818559,-8.357609,1.025463,-7.335754,-9.469373,-4.228827,5.533990,-2.919046,-3.183217,-1.576467,-9.373975,2.267239,3.162881,2.460257,9.647544,7.862414,-2.151863,-2.537000,-1.962461,1.382465,-0.074037,2.077711,-2.586163,-2.274124,1.509132,4.808578,2.380105,8.339677,-2.762607,1.867862,-2.114340,-7.374343,-3.222897,-6.499618,-4.446903,7.351590,5.707584,-6.198555,0.096209,2.614948,1.685083,-8.129427,8.804387,-0.994603,-9.842221,0.674462,-5.423443,-3.123283,-8.613305,2.604286,-8.372618,-7.654350,9.428020,2.144063,5.003042,-6.681305,4.605987,9.269467,-1.081030,-9.225328,9.320271,3.043871,-3.274380,-5.307569,-9.632780,6.503450,5.620213,7.883972,-0.620053,5.678886,0.891469,-4.119857,-6.582438,6.926500,9.255570,9.834612,6.345444,-2.699031,-3.826249,-3.701267,-5.090080,5.229655,0.579774,7.443270,6.551157,7.025480,-6.152614,8.272811,-4.571712,3.368872,2.748698,-7.775909,5.021711,-7.735927,-1.930239,-0.303706,-0.718705,-0.919650,-2.203995,5.961087,-7.960595,-4.602471,-8.637884,8.720811,-8.632517,5.125091,2.129986,-3.259636,-7.931036,2.485330,-5.246469,-2.267604,4.305952,-9.307090,-5.406935,-8.005908,6.750142,7.993774,-6.609051,-8.319408,6.003662,-1.605029,8.429299,5.037456,7.169247,-8.694726,-2.948620,-9.212037,3.444029,-6.314412,-7.847546,-0.909702,8.643144,-9.979617,-8.827990,2.157413,-9.401215,5.465758,-0.608612,4.015251,6.263805,4.385032,-3.890282,4.559067,5.413136,6.240928,-2.827652,9.412272,1.306720,-7.256711,-2.380152,7.397303,9.343607,-9.417310,2.000294,-0.886631,-9.736229,7.622704,1.353860,-6.772340,-2.675828,5.903609,-1.558105,-7.418113,-6.072835,6.844904,-5.569306,3.727165,2.472376,-6.459352,3.048158,0.786431,-2.285901,0.391412,-6.593648,-9.290390,5.625776,5.911260,-2.963639,-3.621060,-7.522152,0.758724,-5.808410,5.276911,4.826340,6.213783,-2.198807,-2.322360,4.184715,-2.289974,2.600129,-3.756204,-1.576936,-5.351413,3.992782,3.513688,0.789911,9.530546,1.063084,7.240735,-6.108345,-5.910740,-3.212946,6.478824,-2.833831,3.726323,5.372957,-2.161481,5.268986,-8.219662,9.609867,4.173242,8.511217,6.294691,5.982622,7.815645,8.659939,-1.515044,-7.803298,8.308570,8.395806,-5.894601,-5.910420,6.093004,-2.096239,-2.819226,4.621465,-1.131572,-3.645680,-3.021435,-8.655986,3.143665,4.817020,6.679615,-5.950608,-9.864877,5.243034,-3.466645,9.554943,-8.535527,4.656120,-7.442151,-1.234517,9.747228,-0.219973,-7.379252,8.517849,-4.251261,7.546037,-5.762578,-8.577288,7.515935,-2.690466,9.020634,1.339874,6.662477,-8.554682,-0.436815,-2.835472,-7.068362,4.792021,9.606431,-0.529038,9.274556,-8.192258,6.945622,-3.049746,-1.586538,-5.593933,-1.015495,8.575356,9.876789,0.797361,-7.450851,1.449735,-7.489281,6.469314,-7.084775,1.592393,6.262742,4.316232,-2.605920,-3.788868,-8.109789,-1.284408,-5.104976,-9.315914,-5.487897,0.213290,8.222515,7.003164,9.629714,-6.618266,-1.687358,0.519740,1.894068,3.380720,-1.515946,-1.337642,-1.269814,-6.535592,9.925096,-7.939600,-9.792791,-6.262529,9.247736,-7.068267,0.415708,-4.941248,-8.703833,8.761657,-7.325151,-3.764198,-9.986130,-2.535187,1.563876,-6.523902,2.825807,-7.239061,-0.011792,-9.912758,-5.489085,3.190339,7.479548,-7.629854,9.140004,0.319573,-4.929291,5.847239,-2.206412,5.263079,-6.665770,-5.786697,4.016914,9.536188,-5.033420,9.832877,-4.674498,-8.330700,-7.708198,-1.694155,-2.980652,6.992024,5.825034,-6.268925,-4.941051,1.034880,3.150517,4.505052,4.386771,-3.400282,-9.324467,-2.582435,-7.262934,-5.086338,4.343190,1.506620,-7.599764,-9.178347,7.759512,0.765740,6.164481,-0.092008,3.329242,9.324986], dtype = "float32")#candidate|3786|(1470,)|const|float32
call_3785 = relay.TupleGetItem(func_2153_call(relay.reshape(const_3786.astype('float32'), [7, 14, 15])), 0)
call_3787 = relay.TupleGetItem(func_2155_call(relay.reshape(const_3786.astype('float32'), [7, 14, 15])), 0)
func_3677_call = mod.get_global_var('func_3677')
func_3678_call = mutated_mod.get_global_var('func_3678')
call_3789 = relay.TupleGetItem(func_3677_call(), 2)
call_3790 = relay.TupleGetItem(func_3678_call(), 2)
func_3551_call = mod.get_global_var('func_3551')
func_3552_call = mutated_mod.get_global_var('func_3552')
call_3805 = relay.TupleGetItem(func_3551_call(), 0)
call_3806 = relay.TupleGetItem(func_3552_call(), 0)
output = relay.Tuple([bop_3778,call_3785,const_3786,call_3789,call_3805,])
output2 = relay.Tuple([bop_3778,call_3787,const_3786,call_3790,call_3806,])
func_3817 = relay.Function([var_3761,var_3762,], output)
mod['func_3817'] = func_3817
mod = relay.transform.InferType()(mod)
mutated_mod['func_3817'] = func_3817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3817_call = mutated_mod.get_global_var('func_3817')
var_3819 = relay.var("var_3819", dtype = "uint64", shape = (6, 8, 14))#candidate|3819|(6, 8, 14)|var|uint64
var_3820 = relay.var("var_3820", dtype = "uint64", shape = (6, 8, 14))#candidate|3820|(6, 8, 14)|var|uint64
call_3818 = func_3817_call(var_3819,var_3820,)
output = call_3818
func_3821 = relay.Function([var_3819,var_3820,], output)
mutated_mod['func_3821'] = func_3821
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3828 = relay.var("var_3828", dtype = "int32", shape = (3, 6, 6))#candidate|3828|(3, 6, 6)|var|int32
const_3829 = relay.const([[[-8,9,9,6,3,-6],[9,-2,-1,1,-4,-5],[-2,-4,4,8,-4,4],[6,-9,-1,2,2,-10],[-2,2,-5,1,-4,4],[5,-1,-8,2,6,-3]],[[-6,-1,-10,-5,2,-8],[-6,6,6,-7,-1,-1],[5,3,5,-2,-2,1],[-4,4,-6,2,-3,-10],[-10,1,-7,-10,-6,-6],[10,3,-1,-2,3,-8]],[[8,10,10,-10,7,4],[2,8,9,-10,-2,-9],[-9,5,-6,-10,-6,-6],[10,-9,-5,-3,-8,-6],[5,-6,-9,9,7,-10],[8,9,-2,-10,-9,3]]], dtype = "int32")#candidate|3829|(3, 6, 6)|const|int32
bop_3830 = relay.bitwise_or(var_3828.astype('int32'), relay.reshape(const_3829.astype('int32'), relay.shape_of(var_3828))) # shape=(3, 6, 6)
func_3475_call = mod.get_global_var('func_3475')
func_3477_call = mutated_mod.get_global_var('func_3477')
var_3838 = relay.var("var_3838", dtype = "float64", shape = (126,))#candidate|3838|(126,)|var|float64
call_3837 = func_3475_call(relay.reshape(var_3838.astype('float64'), [6, 7, 3]))
call_3839 = func_3475_call(relay.reshape(var_3838.astype('float64'), [6, 7, 3]))
uop_3841 = relay.exp(var_3828.astype('float32')) # shape=(3, 6, 6)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_3843 = relay.TupleGetItem(func_1201_call(), 0)
call_3844 = relay.TupleGetItem(func_1203_call(), 0)
output = relay.Tuple([bop_3830,call_3837,var_3838,uop_3841,call_3843,])
output2 = relay.Tuple([bop_3830,call_3839,var_3838,uop_3841,call_3844,])
func_3850 = relay.Function([var_3828,var_3838,], output)
mod['func_3850'] = func_3850
mod = relay.transform.InferType()(mod)
var_3851 = relay.var("var_3851", dtype = "int32", shape = (3, 6, 6))#candidate|3851|(3, 6, 6)|var|int32
var_3852 = relay.var("var_3852", dtype = "float64", shape = (126,))#candidate|3852|(126,)|var|float64
output = func_3850(var_3851,var_3852,)
func_3853 = relay.Function([var_3851,var_3852,], output)
mutated_mod['func_3853'] = func_3853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_3880 = func_1235_call()
call_3881 = func_1235_call()
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_3884 = func_1235_call()
call_3885 = func_1235_call()
output = relay.Tuple([call_3880,call_3884,])
output2 = relay.Tuple([call_3881,call_3885,])
func_3902 = relay.Function([], output)
mod['func_3902'] = func_3902
mod = relay.transform.InferType()(mod)
output = func_3902()
func_3903 = relay.Function([], output)
mutated_mod['func_3903'] = func_3903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3677_call = mod.get_global_var('func_3677')
func_3678_call = mutated_mod.get_global_var('func_3678')
call_4109 = relay.TupleGetItem(func_3677_call(), 0)
call_4110 = relay.TupleGetItem(func_3678_call(), 0)
output = relay.Tuple([call_4109,])
output2 = relay.Tuple([call_4110,])
func_4114 = relay.Function([], output)
mod['func_4114'] = func_4114
mod = relay.transform.InferType()(mod)
output = func_4114()
func_4115 = relay.Function([], output)
mutated_mod['func_4115'] = func_4115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
call_4116 = relay.TupleGetItem(func_1329_call(), 2)
call_4117 = relay.TupleGetItem(func_1331_call(), 2)
output = relay.Tuple([call_4116,])
output2 = relay.Tuple([call_4117,])
func_4123 = relay.Function([], output)
mod['func_4123'] = func_4123
mod = relay.transform.InferType()(mod)
mutated_mod['func_4123'] = func_4123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4123_call = mutated_mod.get_global_var('func_4123')
call_4124 = func_4123_call()
output = call_4124
func_4125 = relay.Function([], output)
mutated_mod['func_4125'] = func_4125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2851_call = mod.get_global_var('func_2851')
func_2852_call = mutated_mod.get_global_var('func_2852')
call_4153 = relay.TupleGetItem(func_2851_call(), 0)
call_4154 = relay.TupleGetItem(func_2852_call(), 0)
func_536_call = mod.get_global_var('func_536')
func_541_call = mutated_mod.get_global_var('func_541')
const_4165 = relay.const([-8.304134,2.031903,9.611148,-6.066778,8.293499,4.339274,1.657738,-3.127269,4.953626,8.391480,-7.501045,-3.156575,-0.793700,0.170661,-8.981698,4.081049,-2.108946,1.953073,-3.538202,5.295715,4.091371,-1.783844,-1.464312,4.051464,-7.668504,0.664765,8.326085,0.183945,-2.623560,6.007937,5.783520,7.691924,6.285722,6.611176,-4.516711,8.026853,7.316312,9.841691,8.706065,-4.759139,8.586592,-6.592051,6.274938,-5.465460,-3.210303,-5.476935,-3.635182,5.823068,7.108676,1.897934,-2.374970,1.273860,-3.213815,7.021945,5.479918,1.245798,-5.959009,3.893938,3.710683,0.146218,-6.223490,3.967973,9.210880,-4.525917,4.082353,-3.730507,5.516170,-0.607467,-6.897858,0.150453,7.382435,-1.968120,-7.983432,7.906949,3.655306,5.678677,7.470169,-5.718263,-1.519836,4.374974,2.022285,1.138953,4.362390,-2.900279,3.452903,-3.216288,4.065411,-6.498722,-8.532970,8.919286,-4.813910,5.767409,-2.945509,-3.590995,1.312293,-1.048068,-0.505828,6.874513,7.324510,6.916189,4.411729,1.457057,6.142376,-8.778093,-8.105763,7.328575,-9.351795,-0.228482,3.330645,0.721272,-1.490919,8.001261,5.309627,-8.545792,-3.859941,-2.495346,3.045454,-3.489748,4.874466,3.152646,6.100894,8.976319,9.959543,-9.824412,-5.715113,3.268596,9.901069,6.460771,5.069074,-2.902016,-2.558062,3.965547,-2.399011,-8.763623,-8.952504,0.590295,-8.967107,-4.265198,-2.848770,-8.736929,-8.468021,2.207386,-6.252226,4.211806,5.610224,-8.036926,-7.454682,1.464026,0.855205,-6.050629,9.840537,1.936491,-3.110654,-6.396435,-1.166203,-5.601738,-1.300635,8.269879,-7.738455,8.759041,-2.533175,4.160764,2.472307,4.127605,-7.617882,9.378248,-1.760810,-2.830447,-1.218343,2.029442,4.650012,0.205114,-9.997878,0.484365,7.278400,-1.149277,-0.660455,-7.266622,-2.418180,-0.231755,-6.978744,2.106989,1.513332,8.078912,-4.758111,-2.865493,-7.058150,0.060209,-9.086024,-0.617183,0.725687,7.960613,-5.521435,-0.048611,-7.245588,-4.633576,-1.887455,0.026049,7.640033,2.546460,9.544493,5.749573,2.657740,-7.773726,0.509113,-0.003763,3.856059,-8.213575,5.735940,7.781183,-9.903786,-3.626651,1.634051,-0.058294,4.713271,-0.562044,8.657380,-9.577925,-2.405099,0.587026,8.573387,2.153624,2.649989,6.313168,-3.991047,-1.116869,-6.471737,0.147940,-3.666533,-7.647701,7.955834,5.300777,-9.668716,8.072718,-6.407727,5.327301,-8.959521,1.994023,-1.583966,3.472268,3.617780,9.749402,-5.645733,4.999004,-7.490568,-4.267035,-4.780105,9.739704,-4.867815,9.646674,1.578966,-2.511573,2.609850,1.511908,-7.471625,-9.781975,3.645648,0.148266,-8.647748,-1.578990,-3.152356,-0.993827,-3.526248,-4.295527,7.846629,-3.239406,-8.433281,-9.610706,-5.029578,0.146809,-1.126828,-3.451974,-2.586233,-2.035082,-0.699047,1.566673,2.495415,7.536231,7.029279,-6.263657,2.684324,5.298896,-0.479330,-5.579933,-1.044118,5.465649,8.198248,-9.114654,-6.253264,8.377505,8.531898,8.087865,-4.567332,1.286592,-4.628823,-4.194928,-5.560886,9.466770,-7.127272,6.082225,-5.286327,3.405961,-3.188708,2.998132,-8.359112,8.974179,1.631663,9.151050,0.915988,-6.281203,-5.210325,5.911333,-2.390897,2.928048,-2.539859,6.808137,-6.481849,0.138013,-2.704915,1.944134,2.512886,9.109709,7.908326,-4.684353,5.887581,7.955232,-1.008779,-8.376723,3.294715,0.396317,-0.256946,-0.054776,7.861026,2.634593,-6.395030,9.039437,3.212687,3.944020,6.558235,1.080380,-2.193461,-7.598604,9.650989,1.709273,2.236787,6.763870,-5.128437,-0.824876,7.278872,7.634440,-1.305135,1.253868,5.555536,-5.017346,-4.900774,2.585371,-9.197720,5.641072,-8.462558,9.893545,4.290687,8.587346,-3.065476,-0.657010,3.263534,-2.938954,-7.846915,1.416598,-9.695560,-4.138529,2.116548,4.679975,3.647747,-2.348163,7.993502,5.566437,-7.791136,-0.507376,-3.162087,-0.245445,1.083469,0.475899,-8.135658,6.651233,7.416155,9.762244,-9.413130,-4.479742,-5.991166,4.981166,-5.119631,-2.617549,-7.221981,-6.405564,5.845501,-8.859597,4.959951,-4.971083,5.571953,-1.741092,4.595465,5.879920,-4.595310,-4.929016,-2.912921,-1.471491,-6.667408,6.731849,-1.205991,-8.269486,-6.430233,-1.997740,-6.737385,0.166827,-5.388346,-0.728505,-5.430192,0.905382,-4.233731,6.370676,-8.528427,0.608803,-9.489676,2.025351,-1.561222,3.195946,-3.758382,-6.763713,-0.890125,-6.185855,5.876164,7.780578,1.345977,-8.252695,-2.259441,-7.306606,-7.638475,2.521462,7.596936,4.971496,-6.421368,-7.824063,-1.529384,-0.842849,2.803191,7.134587,7.278537,-3.967951,-7.848774,-6.193579,-4.602821,9.056376,0.275127,2.950511,6.795382,-8.241732,1.229107,-6.466797,-6.650811,2.279927,-4.736270,-4.754601,9.349186,-3.126571,-2.181220,-8.827918,4.721789,3.784253,-8.496452,1.576850,4.002093,-6.285508,7.055721,-2.608606,3.020285,6.117528,-2.396032,4.055640,-6.740068,8.225578,8.792440,0.476592,6.699467,4.769210,5.828960,5.521436,-3.359803,-7.263725,1.088054,2.200295,-6.037994,-1.487366,0.527524,-3.021899,0.224085,-4.334000,0.714611,7.362261,-3.280210,-4.581422,-4.082024,-3.874901,7.866380,-1.410198,3.851370,8.871076,-0.097936,-9.805481,-1.487269,7.790433,1.572158,-9.265800,2.876504,7.052777,-4.336947,7.955013,-8.971298,9.856792,-0.859714,-7.097384,-0.395181,7.302608,3.942361,-5.350273,-4.072233,8.462607,1.448168,-1.871990,7.818095,-1.990433,-4.829876,-5.360244,7.455153,-8.851319,6.474145,9.718031,9.720044,-5.391002,-8.697710,-2.085950,-8.357907,-9.256956,2.940393,-8.855460,0.082949,-3.584959,4.449379,-6.922855,-2.958023,-9.882587,8.807042,1.574509,9.914721,7.398114,-4.923953,-8.875200,6.022398,-7.422684,-7.326999,1.754274,5.203490,0.396223,2.684808,9.819482,-6.500841,9.117350,6.827521,-7.623522,3.072042,5.777353,7.319672,-9.063145,-9.716946,2.830562,-0.668016,-6.692851,-7.661971,-5.785414,8.350588,-7.256620,6.346931,4.513845,-9.769402,5.553633,3.969774,-3.059531,1.408682,7.879678,0.291515,-0.023257,-9.338944,-3.498947,-1.756742,-2.729073,-9.399382,1.888202,-8.169461,4.351634,5.723684,-6.124540,7.588207,7.123827,-8.347944,-2.036706,-2.561592,5.390397,-7.813477,9.734855,-5.714293,-0.210154,-2.770635,-9.307974,2.890481,-2.759332,3.052728,1.610201,7.523074,0.220184,-4.022597,7.831529,-4.101357,9.345867,-7.932572,9.264113,-0.737206,-9.561247,7.616556,7.918470,-3.397319,4.900038,6.446772,-9.700205,-0.626806,-8.132499,1.140865,2.515303,-3.372427,-1.301470,6.910945,0.620735,-6.426260,7.471134,-9.787502,-7.980304,-3.003245,-5.238457,-7.349628,-8.851443,-0.570638,9.147045,-4.585168,1.360549,5.856192,-4.116827,7.401645,-2.767208,4.178407,-6.819809,6.830860,-1.416184,-4.315794,6.652167,5.642020,3.274313,-5.569350,5.775992,5.144951,7.295918,0.339236,-3.432625,4.085909,-5.142422,-4.568003,-4.006990,4.589289,9.144174,-7.264212,-9.727031,-0.915459,7.935033,6.516735,7.271180,-7.519869,2.731876,-0.706925,-6.444608,8.035644,-9.085470,5.772126,5.583710,2.146894,0.945751,7.029978,2.162765,3.795821,-3.233202,-2.070768,-0.347561,-4.450139,-6.775313,7.545993,-8.590176,7.521976,-0.821196], dtype = "float32")#candidate|4165|(704,)|const|float32
var_4166 = relay.var("var_4166", dtype = "int8", shape = (1, 2145))#candidate|4166|(1, 2145)|var|int8
call_4164 = relay.TupleGetItem(func_536_call(relay.reshape(const_4165.astype('float32'), [4, 11, 16]), relay.reshape(const_4165.astype('float32'), [4, 11, 16]), relay.reshape(call_4153.astype('int8'), []), relay.reshape(var_4166.astype('int8'), [2145, 1]), ), 0)
call_4167 = relay.TupleGetItem(func_541_call(relay.reshape(const_4165.astype('float32'), [4, 11, 16]), relay.reshape(const_4165.astype('float32'), [4, 11, 16]), relay.reshape(call_4153.astype('int8'), []), relay.reshape(var_4166.astype('int8'), [2145, 1]), ), 0)
output = relay.Tuple([call_4153,call_4164,const_4165,var_4166,])
output2 = relay.Tuple([call_4154,call_4167,const_4165,var_4166,])
func_4169 = relay.Function([var_4166,], output)
mod['func_4169'] = func_4169
mod = relay.transform.InferType()(mod)
mutated_mod['func_4169'] = func_4169
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4170 = relay.var("var_4170", dtype = "int8", shape = (1, 2145))#candidate|4170|(1, 2145)|var|int8
func_4169_call = mutated_mod.get_global_var('func_4169')
call_4171 = func_4169_call(var_4170)
output = call_4171
func_4172 = relay.Function([var_4170], output)
mutated_mod['func_4172'] = func_4172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3551_call = mod.get_global_var('func_3551')
func_3552_call = mutated_mod.get_global_var('func_3552')
call_4189 = relay.TupleGetItem(func_3551_call(), 0)
call_4190 = relay.TupleGetItem(func_3552_call(), 0)
output = relay.Tuple([call_4189,])
output2 = relay.Tuple([call_4190,])
func_4195 = relay.Function([], output)
mod['func_4195'] = func_4195
mod = relay.transform.InferType()(mod)
mutated_mod['func_4195'] = func_4195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4195_call = mutated_mod.get_global_var('func_4195')
call_4196 = func_4195_call()
output = call_4196
func_4197 = relay.Function([], output)
mutated_mod['func_4197'] = func_4197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3121_call = mod.get_global_var('func_3121')
func_3123_call = mutated_mod.get_global_var('func_3123')
call_4219 = func_3121_call()
call_4220 = func_3121_call()
uop_4224 = relay.sigmoid(call_4219.astype('float64')) # shape=(10, 13, 11)
uop_4226 = relay.sigmoid(call_4220.astype('float64')) # shape=(10, 13, 11)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_4232 = relay.TupleGetItem(func_1201_call(), 0)
call_4233 = relay.TupleGetItem(func_1203_call(), 0)
output = relay.Tuple([uop_4224,call_4232,])
output2 = relay.Tuple([uop_4226,call_4233,])
func_4244 = relay.Function([], output)
mod['func_4244'] = func_4244
mod = relay.transform.InferType()(mod)
output = func_4244()
func_4245 = relay.Function([], output)
mutated_mod['func_4245'] = func_4245
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4251 = relay.const([[[9.748342],[-7.192937],[9.307730],[-9.105462],[-9.329855],[4.719960],[1.752167],[9.858326],[9.334967],[7.224096],[6.392841],[5.053149],[4.531462]],[[-5.439941],[8.608529],[4.503502],[-0.879222],[8.021648],[3.765574],[-8.689015],[-1.025950],[-9.061355],[-3.529965],[5.196062],[2.357799],[-3.597193]]], dtype = "float64")#candidate|4251|(2, 13, 1)|const|float64
uop_4252 = relay.log10(const_4251.astype('float64')) # shape=(2, 13, 1)
uop_4266 = relay.rsqrt(uop_4252.astype('float64')) # shape=(2, 13, 1)
output = uop_4266
output2 = uop_4266
func_4280 = relay.Function([], output)
mod['func_4280'] = func_4280
mod = relay.transform.InferType()(mod)
output = func_4280()
func_4281 = relay.Function([], output)
mutated_mod['func_4281'] = func_4281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2685_call = mod.get_global_var('func_2685')
func_2687_call = mutated_mod.get_global_var('func_2687')
call_4301 = func_2685_call()
call_4302 = func_2685_call()
func_2851_call = mod.get_global_var('func_2851')
func_2852_call = mutated_mod.get_global_var('func_2852')
call_4326 = relay.TupleGetItem(func_2851_call(), 0)
call_4327 = relay.TupleGetItem(func_2852_call(), 0)
func_1499_call = mod.get_global_var('func_1499')
func_1503_call = mutated_mod.get_global_var('func_1503')
var_4340 = relay.var("var_4340", dtype = "int16", shape = (390,))#candidate|4340|(390,)|var|int16
var_4341 = relay.var("var_4341", dtype = "int8", shape = (2145,))#candidate|4341|(2145,)|var|int8
call_4339 = relay.TupleGetItem(func_1499_call(relay.reshape(var_4340.astype('int16'), [3, 10, 13]), relay.reshape(var_4340.astype('int16'), [3, 10, 13]), relay.reshape(var_4341.astype('int8'), [2145,]), ), 3)
call_4342 = relay.TupleGetItem(func_1503_call(relay.reshape(var_4340.astype('int16'), [3, 10, 13]), relay.reshape(var_4340.astype('int16'), [3, 10, 13]), relay.reshape(var_4341.astype('int8'), [2145,]), ), 3)
bop_4350 = relay.logical_or(var_4341.astype('bool'), call_4326.astype('bool')) # shape=(2145,)
bop_4353 = relay.logical_or(var_4341.astype('bool'), call_4327.astype('bool')) # shape=(2145,)
bop_4357 = relay.not_equal(call_4339.astype('bool'), call_4326.astype('bool')) # shape=(715, 3)
bop_4360 = relay.not_equal(call_4342.astype('bool'), call_4327.astype('bool')) # shape=(715, 3)
func_3677_call = mod.get_global_var('func_3677')
func_3678_call = mutated_mod.get_global_var('func_3678')
call_4379 = relay.TupleGetItem(func_3677_call(), 0)
call_4380 = relay.TupleGetItem(func_3678_call(), 0)
uop_4381 = relay.exp(call_4379.astype('float32')) # shape=(660, 2)
uop_4383 = relay.exp(call_4380.astype('float32')) # shape=(660, 2)
output = relay.Tuple([call_4301,var_4340,bop_4350,bop_4357,uop_4381,])
output2 = relay.Tuple([call_4302,var_4340,bop_4353,bop_4360,uop_4383,])
func_4404 = relay.Function([var_4340,var_4341,], output)
mod['func_4404'] = func_4404
mod = relay.transform.InferType()(mod)
mutated_mod['func_4404'] = func_4404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4404_call = mutated_mod.get_global_var('func_4404')
var_4406 = relay.var("var_4406", dtype = "int16", shape = (390,))#candidate|4406|(390,)|var|int16
var_4407 = relay.var("var_4407", dtype = "int8", shape = (2145,))#candidate|4407|(2145,)|var|int8
call_4405 = func_4404_call(var_4406,var_4407,)
output = call_4405
func_4408 = relay.Function([var_4406,var_4407,], output)
mutated_mod['func_4408'] = func_4408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1329_call = mod.get_global_var('func_1329')
func_1331_call = mutated_mod.get_global_var('func_1331')
call_4453 = relay.TupleGetItem(func_1329_call(), 1)
call_4454 = relay.TupleGetItem(func_1331_call(), 1)
func_3850_call = mod.get_global_var('func_3850')
func_3853_call = mutated_mod.get_global_var('func_3853')
const_4469 = relay.const([5,10,-9,6,10,2,-8,-3,6,-5,7,-2,6,5,10,-10,-5,5,-1,-5,-2,-8,-3,-9,3,6,10,8,-7,3,6,-2,-4,-4,5,7,4,10,-6,-8,4,9,-3,-10,-4,10,8,1,-9,8,4,-3,-3,-8,3,10,-2,-1,-7,-7,-6,1,9,8,4,-1,-3,9,-7,-9,-4,6,-9,1,10,7,7,9,-9,-3,5,3,8,8,-10,-6,5,10,-10,9,1,5,-5,3,3,9,1,8,6,5,-2,-2,-4,10,-5,4,-7,5], dtype = "int32")#candidate|4469|(108,)|const|int32
const_4470 = relay.const([-0.036794,-4.351658,7.337184,-5.600337,-5.025893,-8.901977,-0.784963,5.817339,-6.702373,5.399843,0.936937,-6.626952,-7.875577,-6.557664,0.157551,7.035743,8.498182,-3.766168,-8.908904,-7.412429,-1.701651,5.602769,-7.336786,9.419278,2.091264,-4.579930,6.935456,-0.412079,-1.783193,7.130177,-8.755964,9.248609,-5.351261,2.948402,-1.402156,-5.778516,-6.133879,-4.971271,-4.132859,9.024066,-8.823043,3.502357,-6.763776,8.320546,-9.154603,-7.698340,-9.237896,8.916624,7.790893,1.813654,-5.800888,-8.841601,1.260067,0.106059,3.502300,-4.924129,-5.961786,5.144299,6.171306,-5.611884,4.118739,-5.895038,-1.181644,3.790450,-5.759673,-5.600130,-2.580986,5.330878,5.115959,4.085066,8.218804,-6.917954,9.656564,-0.766441,2.624342,6.873733,4.985495,-9.513718,9.774259,9.669746,-5.748981,-5.778310,7.468594,6.771041,5.777351,3.793025,-5.312819,-5.586225,2.994770,-7.276609,6.754829,6.608855,7.545221,7.225869,4.245507,5.412105,-8.044963,-5.335605,0.141960,-8.121349,9.965455,-6.193857,8.768133,4.671809,3.656142,0.548842,1.523422,-8.927668,-6.059646,9.240048,-7.984342,-4.531097,0.300225,-6.115083,-4.445778,5.797395,-7.662375,4.522843,-8.050667,-6.057766,-5.042469,3.693577,2.484199,-0.619141,0.170671,0.103122], dtype = "float64")#candidate|4470|(126,)|const|float64
call_4468 = relay.TupleGetItem(func_3850_call(relay.reshape(const_4469.astype('int32'), [3, 6, 6]), relay.reshape(const_4470.astype('float64'), [126,]), ), 1)
call_4471 = relay.TupleGetItem(func_3853_call(relay.reshape(const_4469.astype('int32'), [3, 6, 6]), relay.reshape(const_4470.astype('float64'), [126,]), ), 1)
func_148_call = mod.get_global_var('func_148')
func_151_call = mutated_mod.get_global_var('func_151')
var_4475 = relay.var("var_4475", dtype = "int8", shape = ())#candidate|4475|()|var|int8
var_4476 = relay.var("var_4476", dtype = "int8", shape = (2145,))#candidate|4476|(2145,)|var|int8
call_4474 = func_148_call(relay.reshape(var_4475.astype('int8'), []), relay.reshape(var_4476.astype('int8'), [15, 11, 13]), )
call_4477 = func_148_call(relay.reshape(var_4475.astype('int8'), []), relay.reshape(var_4476.astype('int8'), [15, 11, 13]), )
bop_4496 = relay.divide(var_4476.astype('float32'), relay.reshape(call_4474.astype('float32'), relay.shape_of(var_4476))) # shape=(2145,)
bop_4499 = relay.divide(var_4476.astype('float32'), relay.reshape(call_4477.astype('float32'), relay.shape_of(var_4476))) # shape=(2145,)
func_3551_call = mod.get_global_var('func_3551')
func_3552_call = mutated_mod.get_global_var('func_3552')
call_4501 = relay.TupleGetItem(func_3551_call(), 0)
call_4502 = relay.TupleGetItem(func_3552_call(), 0)
func_1973_call = mod.get_global_var('func_1973')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_4525 = func_1973_call()
call_4526 = func_1973_call()
output = relay.Tuple([call_4453,call_4468,const_4469,const_4470,var_4475,bop_4496,call_4501,call_4525,])
output2 = relay.Tuple([call_4454,call_4471,const_4469,const_4470,var_4475,bop_4499,call_4502,call_4526,])
func_4541 = relay.Function([var_4475,var_4476,], output)
mod['func_4541'] = func_4541
mod = relay.transform.InferType()(mod)
var_4542 = relay.var("var_4542", dtype = "int8", shape = ())#candidate|4542|()|var|int8
var_4543 = relay.var("var_4543", dtype = "int8", shape = (2145,))#candidate|4543|(2145,)|var|int8
output = func_4541(var_4542,var_4543,)
func_4544 = relay.Function([var_4542,var_4543,], output)
mutated_mod['func_4544'] = func_4544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1434_call = mod.get_global_var('func_1434')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_4585 = relay.TupleGetItem(func_1434_call(), 0)
call_4586 = relay.TupleGetItem(func_1435_call(), 0)
func_1499_call = mod.get_global_var('func_1499')
func_1503_call = mutated_mod.get_global_var('func_1503')
const_4600 = relay.const([[-5,8,9,6,3,8,3,-1,-5,8,-7,-8,10,1,-3,8,-4,-4,2,-4,4,-6,-7,9,7,2,4,-8,7,8,-2,7,-1,-8,-1,-2,4,1,-3,1,-6,4,4,-4,-3,10,7,9,8,-4,10,3,-4,-3,-5,-8,9,10,-6,-4,-7,4,2,5,-1,-9,5,-4,6,-7,-4,-3,1,-6,-10,-7,5,-10],[-5,6,-3,8,7,-8,-1,-6,-2,-8,4,1,4,-10,9,5,6,3,-6,-9,5,8,2,9,-2,-8,-10,-10,-7,5,-10,-10,-2,6,-4,-3,-2,-4,-4,10,-1,4,-9,8,-5,-2,5,-3,-6,7,6,10,-10,2,-9,-9,3,2,10,-8,4,1,-3,-8,-5,-1,-6,9,-7,-7,-3,7,-2,8,10,6,-7,5],[3,-10,-10,-1,4,-10,9,9,6,10,6,9,-5,2,-9,-1,-2,-3,2,9,-2,-8,10,6,3,3,3,7,-6,7,8,10,-9,-4,-4,10,6,10,-5,-2,-2,10,-9,-3,-6,10,10,-3,2,-3,-2,4,-1,2,9,-6,10,-6,3,-6,2,2,-6,5,2,-4,-1,10,1,7,7,2,-3,10,10,4,2,7],[1,-7,8,-7,10,-10,-1,-2,4,10,4,1,6,7,-1,7,4,5,5,-2,9,-5,-9,-9,-3,-8,8,5,7,3,6,-2,-4,-6,-8,4,-8,-8,-8,-2,7,-1,1,1,8,8,4,6,-8,8,1,-3,-3,-10,1,3,1,-5,10,2,1,-1,1,-6,-2,-7,6,-5,-3,9,6,2,-6,10,6,-1,4,-4],[1,-6,-2,-9,-2,-7,-9,1,-8,3,-1,-7,6,3,-2,-7,-5,-10,-7,-7,-3,-4,-1,-10,-9,1,7,-6,-8,5,6,-2,6,-9,-1,1,-9,8,9,6,-10,-7,-7,-10,-4,4,6,10,-8,-4,-3,4,-10,-3,8,-9,8,-5,-1,-9,-9,-4,9,-8,2,7,-7,-9,-3,7,2,10,-4,-7,10,-9,-9,4]], dtype = "int16")#candidate|4600|(5, 78)|const|int16
const_4601 = relay.const([[-6,-5,-3,-9,7,-8,4,10,-2,10,-1,1,-1,-7,-10,4,3,8,-4,-2,5,-9,-7,4,4,-3,2,-6,-2,-9,-3,8,-4,1,3,6,-1,-4,2,10,-1,-2,1,-7,10,-5,1,-8,-2,-1,-10,3,-2,4,7,1,-8,-5,10,2,-8,-2,2,3,10,-9,3,-4,10,-10,-1,-7,3,-8,3,-4,10,-9,-7,-6,-8,-9,-8,-7,-2,-7,7,2,7,-6,3,-1,-7,5,7,-3,8,-8,-7,-5,2,-2,8,-3,-7,5,-9,10,1,2,-7,-2,8,-1,5,-4,10,7,9,4,9,5,-8,-5,-10,-4,5,2,-6,-8,1,-9,7,8,8,-3,1,-8,-3,-7,-2,-2,9,-10,-6,-9,2,7,-5,-9,-9,1,-2,-1,2,10,9,2,-5,-6,-3,-10,-2,-8,4,-10,-2,2,-10,9,-1,7,-2,-9,-1,9,-9,-1,-8,5,-6,6,8,10,-3,1,9,-5,6,7,10,-3,7,-7,5],[-8,7,-7,-3,2,-9,9,10,8,-9,-7,-2,-5,6,-3,-6,-10,-4,9,-7,3,-5,-3,-6,2,5,-4,10,6,-3,-7,-10,3,7,1,-2,-7,7,-3,10,-10,-5,-3,-8,-2,-8,2,-9,1,-7,-7,7,8,-5,-8,-6,-3,-5,-7,5,-3,-10,2,10,-3,-4,-5,-8,4,4,10,10,-1,10,-7,-9,10,5,-9,3,-1,-4,-9,-1,-6,5,-5,9,-10,-3,-4,7,-2,-5,-5,-4,-7,-3,3,-9,9,6,1,-1,2,9,-8,9,-7,2,-3,8,-7,6,7,8,3,1,9,6,7,9,-10,-7,3,10,-6,-7,1,2,1,5,5,-10,9,-6,-1,-4,-3,9,2,1,-8,-2,2,-5,5,-8,8,-5,-4,-5,-3,-6,-2,2,4,6,4,9,4,-10,5,-9,8,10,-2,6,6,4,9,-5,-3,-5,9,-4,9,1,-6,9,-4,-5,-5,-6,5,2,7,-6,-8,-9,4,-9,-1,-7,3],[-10,-6,-5,-8,-4,10,6,5,2,-3,-2,8,2,-4,-6,-6,5,-3,-4,1,5,-6,-3,-5,4,-5,6,8,3,-8,8,-7,-5,3,-3,-7,-8,-9,4,3,3,2,1,9,1,-3,1,-4,-2,6,-1,-4,-8,7,9,7,10,-5,-1,-5,2,-3,-7,1,-4,-5,-2,4,-3,1,5,-8,-9,-3,7,-3,5,-4,-3,-2,-2,1,-5,5,10,-4,3,-7,4,3,10,-4,3,7,-3,-2,5,2,-2,2,10,-6,-7,-7,7,-4,-7,-1,-6,-8,-7,-7,-6,4,3,-2,9,8,-5,9,-5,6,-3,4,-5,-2,5,-5,-8,10,3,6,2,-2,-9,8,5,-7,2,2,6,-10,-3,1,-3,5,-5,-2,5,3,-4,-7,6,9,-7,-5,-5,3,1,-9,7,2,5,10,-7,-3,5,-8,-3,-8,8,-5,-8,10,4,-6,5,4,4,-9,8,-10,1,-3,4,9,5,-2,-2,-4,2,-9,10,7,7],[2,10,-8,9,9,3,3,10,10,-10,8,6,8,-1,7,3,-3,1,-7,-5,2,-4,5,-4,6,9,5,3,1,-10,-2,-8,-7,-10,-9,-1,-2,-8,9,-10,-4,-2,8,2,-9,-8,5,-8,6,7,3,-6,2,-10,6,7,2,-8,-3,10,3,3,-5,-2,-8,-6,-6,-6,6,9,-7,-1,4,-9,-2,-8,-6,-2,-3,2,3,4,10,-8,-5,10,5,-3,3,-7,3,-9,-8,10,5,-5,-1,10,7,10,6,6,-1,10,2,-8,-5,-6,8,-4,-9,3,-8,-1,-10,-8,3,8,4,-8,5,3,-3,-3,-4,-5,-8,1,1,8,5,10,10,1,-5,-2,7,10,-2,-2,-2,7,5,-3,-4,-8,8,6,-5,4,10,-2,-1,8,5,-8,-4,6,-7,-6,1,9,-1,9,-5,-7,1,9,-10,-3,-6,-4,8,-2,9,5,1,1,-10,-9,3,8,-3,-6,-6,10,2,4,5,4,-3,8,-2,7,9],[-6,2,-8,3,-2,3,-2,-7,4,4,10,6,3,-4,1,-8,6,3,7,-8,-6,10,-5,-6,-2,6,8,-7,1,1,5,-10,-9,6,8,6,4,-4,6,-5,-2,8,4,-9,7,8,-9,-2,1,8,-2,5,-2,-5,3,-7,-3,-3,10,-2,3,-8,8,3,-10,1,5,7,7,6,-4,-4,-7,5,-10,6,-9,-6,-6,6,-7,-9,-3,10,10,1,-10,-2,2,8,-4,-5,-1,-10,7,-5,3,9,-10,-9,8,6,-4,8,-6,8,-1,3,-4,-8,-8,-7,7,-8,-6,9,6,-3,4,6,6,-7,9,-8,2,-5,-9,1,10,-2,6,-2,7,-3,-7,-10,-5,1,-9,-8,-6,-1,-7,2,-4,6,8,-2,-5,5,-6,-4,-3,6,7,5,10,10,-8,7,-9,-2,2,1,1,-9,2,-7,-2,9,10,3,-9,7,9,9,-8,-4,-7,8,-10,4,-4,-7,7,-6,-9,6,5,-5,-9,10,-9,8,9],[5,-4,-1,1,5,-5,4,-9,2,-8,-8,-5,-4,5,2,7,3,-6,10,-4,5,5,3,-4,9,4,-8,-8,-3,4,6,1,-5,-6,4,9,7,-1,-9,5,-6,7,-6,-8,-7,4,-6,-5,-2,5,10,5,9,10,-2,5,-4,2,7,-10,-2,10,-9,-6,-5,-9,6,-2,2,2,7,-2,2,-2,3,5,-6,3,9,6,-2,-9,-1,-3,5,6,5,-2,1,-7,-5,2,-7,-7,-6,-10,-10,-9,2,-3,-1,10,7,4,7,4,6,-3,1,-9,7,-7,10,7,2,-10,10,-9,-1,9,-6,10,-9,5,5,8,5,8,-5,-7,8,10,-7,-7,3,6,8,-9,9,8,-8,-7,-6,-8,9,-8,5,4,-8,-10,-8,-8,4,-5,3,-8,-2,6,9,8,9,6,-5,-6,3,2,4,-8,-1,-3,6,7,-6,5,5,3,3,-10,10,-9,-5,4,5,8,-5,-10,2,-9,8,-2,-1,-1,-6,1,8],[-1,-5,2,7,5,3,-2,-3,-3,-7,8,-2,10,-7,-4,-5,7,9,9,9,9,9,5,2,-5,-5,-7,-1,6,2,-4,-6,6,-8,3,-10,9,4,5,4,-7,4,-7,-2,2,3,-10,5,-4,4,-2,8,6,-7,-7,3,-9,7,10,9,5,8,-10,-5,7,2,4,3,1,2,-9,4,-10,6,-2,1,-8,5,1,-4,9,-10,-5,4,-10,-6,1,-1,-10,-2,1,-2,-2,8,-6,4,6,10,-6,9,-3,9,6,-7,-6,-1,-2,-7,-9,-8,5,2,-7,-5,7,2,-9,-3,8,1,7,-2,-4,-3,-4,-10,6,-10,-2,-7,9,8,8,-2,1,2,-7,7,1,-6,5,-4,8,4,-1,1,-10,-7,-10,7,-6,9,1,-7,-8,-9,-9,-1,-9,6,-6,9,6,4,-8,-7,-10,-8,-10,7,-7,10,1,2,-8,3,7,-2,9,1,9,-2,2,-1,-4,-2,-5,7,-6,10,-1,-10,5,3,9],[1,-2,6,4,8,-6,-9,5,-8,6,6,9,8,-9,-7,-7,-6,-5,2,-2,5,3,8,1,10,6,-7,-4,-8,-7,3,7,-4,-4,10,-9,5,-1,9,-10,1,4,10,4,5,7,7,9,-4,8,-10,-3,8,-9,7,-5,-5,6,-9,5,2,-1,-6,8,5,6,-4,2,2,-8,-9,7,2,-1,-4,4,-10,4,-7,-8,2,-10,4,8,-1,6,9,-6,-9,-5,-5,10,6,-3,-8,-7,-6,7,-7,7,1,-8,7,5,-2,8,9,-3,1,10,-9,-10,-2,-5,1,-6,5,7,9,7,-4,9,2,10,1,3,-9,-5,9,9,-1,-6,-3,8,7,-5,10,-6,-7,-6,-6,-8,-3,5,2,3,3,10,4,-7,-3,4,6,6,6,-4,10,-9,-7,-6,-10,-2,10,-8,10,-9,-10,6,3,-1,-1,-1,-9,5,-5,-4,-10,8,10,6,3,-5,-8,-9,1,8,-7,7,9,3,-3,-9,-7,4,-4],[9,6,2,-5,5,-3,1,1,-9,2,-2,-10,7,-9,5,3,-3,-10,-3,8,-4,-8,-4,-3,-9,4,9,4,1,8,9,4,10,-6,8,10,6,6,-9,2,5,1,2,-3,1,1,-3,-1,-8,6,3,-9,-4,-9,-8,-10,7,-9,9,3,3,9,8,1,-6,-5,4,8,-1,-2,-7,1,6,-2,2,-4,-1,1,10,7,-10,7,-6,-4,9,3,-8,2,2,8,1,-9,4,2,-3,-2,-1,6,1,2,6,9,-10,10,7,6,-10,10,6,-8,1,1,-10,-1,9,-4,-9,-10,4,-2,8,6,-4,1,-10,-8,-10,5,10,-10,9,5,-7,-8,-7,-9,-10,-2,-3,4,-4,4,-3,-4,7,3,10,-6,5,5,6,-4,10,1,-10,9,-9,-8,6,-9,-7,-8,10,-5,8,4,5,2,-5,3,10,-9,-6,5,-8,4,-5,-6,6,10,1,-10,2,-4,-5,-2,10,3,-8,-8,1,6,2,-2,3],[-2,6,1,-4,-6,-3,-3,4,8,4,-10,8,4,-8,-10,-8,5,6,3,2,-8,-2,7,7,-7,3,-8,5,-1,-8,-4,-3,2,5,-9,9,-4,-8,-8,-8,8,6,10,-9,4,2,-6,9,4,7,2,9,-10,7,-2,7,-6,-7,4,-7,-5,-8,-6,1,2,-1,8,10,-7,-6,-4,10,-5,6,2,10,4,10,-7,-8,-1,-5,9,6,4,6,6,6,2,1,-5,3,8,-9,-6,-6,-6,-7,8,-2,7,8,3,-5,6,-10,6,2,7,-3,-10,2,-1,2,2,2,3,1,6,2,-3,-4,-6,-6,-10,7,-9,-8,8,2,8,-7,5,-7,-7,4,-9,-10,-7,-1,-5,-10,9,-7,-10,7,4,-6,-4,-10,2,-1,-4,-8,-7,-9,9,-9,7,-5,6,4,-6,6,5,-8,-2,8,10,-5,4,1,5,-2,-9,-9,9,-2,-8,-4,8,2,3,-4,-5,-1,-4,4,4,2,-3,8,-8,6,1],[-1,-3,9,-10,-8,1,-5,2,4,3,9,9,-9,-8,-3,6,9,4,5,10,-10,-3,-8,2,2,10,-3,-9,-5,1,7,1,-9,4,10,7,5,-3,-6,-4,2,2,-2,10,-7,5,-10,-9,-3,1,7,1,2,2,1,-8,10,10,8,-1,-5,-8,5,2,-8,-1,-2,6,10,-4,6,6,2,9,-10,-7,-7,7,-10,-1,-3,5,7,-1,-1,-8,7,-4,1,-10,-4,-7,-10,4,-5,-2,9,6,-1,3,-4,-9,-6,-1,-4,10,-8,10,1,-1,1,7,-3,6,-1,-3,9,-7,5,-3,-1,-9,-10,-8,-5,9,4,-7,-8,8,1,4,3,6,1,7,2,2,6,-5,1,-8,10,10,10,9,9,-3,7,2,-9,-4,6,-5,8,-5,1,-1,-1,-1,1,2,5,4,-5,4,9,6,-1,-10,-10,7,-8,-4,-1,8,7,2,5,6,6,5,7,1,-4,-7,5,6,4,2,7,7,-2,-7,-9]], dtype = "int8")#candidate|4601|(11, 195)|const|int8
call_4599 = relay.TupleGetItem(func_1499_call(relay.reshape(const_4600.astype('int16'), [3, 10, 13]), relay.reshape(const_4600.astype('int16'), [3, 10, 13]), relay.reshape(const_4601.astype('int8'), [2145,]), ), 3)
call_4602 = relay.TupleGetItem(func_1503_call(relay.reshape(const_4600.astype('int16'), [3, 10, 13]), relay.reshape(const_4600.astype('int16'), [3, 10, 13]), relay.reshape(const_4601.astype('int8'), [2145,]), ), 3)
bop_4605 = relay.divide(const_4601.astype('float32'), relay.reshape(call_4599.astype('float32'), relay.shape_of(const_4601))) # shape=(11, 195)
bop_4608 = relay.divide(const_4601.astype('float32'), relay.reshape(call_4602.astype('float32'), relay.shape_of(const_4601))) # shape=(11, 195)
func_2431_call = mod.get_global_var('func_2431')
func_2433_call = mutated_mod.get_global_var('func_2433')
const_4610 = relay.const([[7.063514,4.590380,0.925485,-6.017157,-1.008099,1.659211,2.414872,-4.295107,-9.831275,0.321972],[9.247889,-0.522873,-2.428505,2.128843,1.097192,-1.518870,7.458926,-4.038232,-9.486374,-1.109048],[7.034334,5.519818,-5.145752,-6.096161,3.098003,0.409882,-6.455212,6.293609,2.045763,5.152160],[3.457408,-5.258036,0.145339,9.409456,6.658379,2.595348,5.743446,0.996653,-0.110197,1.449994],[3.378827,-0.314230,-7.790509,7.048009,8.403772,-5.976453,-5.585036,4.653234,2.714288,-3.042630],[1.656211,8.658918,-9.240671,-8.133529,-8.548778,-0.310753,-0.083933,-9.128932,-3.907607,0.950816],[-7.795893,-8.909228,-6.432332,4.830131,5.755686,-8.884146,2.065604,7.644121,-5.752566,-4.759814],[0.253137,3.147127,-6.512341,-2.100522,7.952584,-3.999337,-6.193268,-4.453249,-1.000857,-1.334356],[8.746642,-7.389639,5.540396,-3.083887,-0.602895,-2.501701,6.608750,6.370718,4.667406,-7.635566],[1.656379,2.279667,-8.027577,-7.693277,6.374339,-9.610149,9.061995,4.958652,-7.457696,3.027300],[-2.286334,5.080720,7.130217,3.065481,-2.056019,0.907712,-4.410819,1.934999,-0.043502,-1.959517],[5.628156,4.005683,7.002349,8.417989,-8.708780,-7.515878,-2.919906,9.235097,9.383332,5.692754],[-2.060381,3.635847,7.001499,6.966479,9.539472,3.827303,-9.582498,0.897636,9.902742,-3.008194],[0.988998,-2.799499,-4.975191,0.745460,8.149199,5.911732,5.684341,-8.856986,-0.634515,8.010844],[3.511612,-2.781016,6.498422,-5.225265,-6.231564,-4.923525,5.461515,2.726885,-0.188565,4.441936],[2.531072,-5.073053,-8.127706,8.671205,-9.872374,-8.021761,4.737440,-6.341597,-9.870903,5.104934],[2.682886,4.571738,2.986308,-1.387388,3.488973,7.273414,-8.950397,-8.704282,-4.709686,7.055194],[-5.544149,5.295337,-7.074799,-4.487838,-1.228395,7.255311,2.852345,-7.840878,-7.722789,2.046909],[4.320229,-2.990385,-7.968658,-9.420632,6.575045,2.007321,9.008931,1.798493,-9.480433,-1.189232],[-7.020129,-8.771362,-3.541461,-2.882416,5.380182,5.069332,-5.968653,5.606683,-0.091827,1.754586],[3.653458,2.004360,3.627859,5.088467,-1.289839,-2.491899,1.570797,-2.304792,-9.689686,-3.805840],[-1.312794,-5.435956,-0.585311,5.149976,3.116993,-5.099892,-1.699761,5.220036,-6.690398,9.123928],[-6.884111,4.446768,8.513977,-0.994222,-6.819383,3.446005,-9.136985,3.450222,8.834603,7.873367],[-0.187958,-5.211603,2.924992,-7.989897,-8.750418,-7.237516,-9.001397,-6.496142,8.454106,5.766808],[-5.607603,3.006287,-4.288624,1.989609,8.802212,-4.898583,-5.433441,-1.559101,-1.058210,2.087488],[2.212346,1.184421,-9.245803,3.587055,-4.162628,8.213558,8.909196,6.103296,-2.012684,-3.179788],[8.292567,5.131072,1.006025,2.983377,-9.538902,-2.653474,-8.452033,3.378629,3.940032,3.877445],[9.544206,-2.476064,2.997346,-8.514441,-4.806676,1.917324,2.298362,7.126866,4.816929,-2.449165],[-3.279707,8.327984,4.654402,2.732677,3.161213,-3.953350,1.677944,9.754682,9.904136,-5.447810],[-6.671726,7.462506,-2.022123,-0.914780,-1.965925,-6.528010,0.519786,5.601084,-6.550121,-2.561059],[2.498143,2.417690,8.697399,7.840303,-2.401383,5.021062,-8.325392,5.221820,8.732687,-9.087918],[-8.223735,-1.435210,-0.189850,-6.161523,-8.323001,-8.204021,-4.589363,1.690245,-7.891410,-3.591539],[-2.163814,-9.756528,-7.914403,-8.525163,1.715007,0.144418,1.702403,-8.952427,-3.933586,-1.082908],[6.099312,-5.046519,-3.274209,8.872843,0.476918,-9.989238,7.219737,-6.463317,-5.987859,-4.181226],[5.252284,4.300968,2.416950,-6.122804,5.239567,1.797466,1.834441,-9.956404,8.336586,-9.655172],[1.683875,-3.291378,3.465131,-6.962845,4.826904,-1.550855,7.128538,5.283064,9.901818,-6.192599],[0.335232,7.396329,2.509446,-2.395760,4.070577,9.806683,2.576469,-3.042289,-7.916989,-6.407555],[2.601621,-0.815039,6.771092,2.503573,0.878927,3.875254,4.017632,7.022144,-2.018024,6.386397],[8.604532,-5.642476,2.238909,2.866999,1.998664,6.944839,-7.079744,9.468643,-3.117360,-9.690048],[-4.433718,-2.210026,-5.236983,6.949913,3.178249,7.668786,1.730270,-7.432238,-2.987691,8.146129],[3.132861,-6.371740,-5.778492,2.617742,-3.147381,4.647483,9.705642,2.146754,2.835456,-0.734044],[6.844544,8.129063,7.940722,1.564282,-2.050961,-2.106651,-3.830081,6.982507,-7.675016,5.305149],[9.266313,-5.463915,-3.430644,-3.948235,-8.536045,-8.148618,-4.218654,-0.481306,7.904384,8.629688],[-9.566661,-2.192697,-2.709915,-2.304511,-2.110340,-7.307465,-4.279923,6.983148,-0.567785,-7.667564],[-8.189067,-0.089400,2.344797,6.602108,2.826480,-6.402488,-6.113360,-6.562087,-5.969736,1.509608],[-5.967412,-0.139667,-9.066296,4.629065,-0.797865,8.119059,-4.875497,6.155594,5.969421,5.329351],[-5.460194,-2.137030,-7.443539,9.156163,5.133278,0.588126,-6.223603,-5.681808,9.095289,5.594131],[-7.915146,4.192800,0.491479,-8.259700,5.673732,0.340473,7.643303,-7.851200,-8.333871,-5.867363],[-0.360365,0.805792,-7.550036,-0.314327,1.567999,4.612180,-6.785048,-0.830438,2.698845,-8.245072],[-1.884165,-7.879760,-5.920735,0.259724,8.378048,-1.618475,-3.725407,-8.111873,-2.639170,-7.633494],[1.397181,0.360125,-4.630979,0.440465,-3.377573,-1.377336,8.645565,-2.106010,1.377895,-2.952916],[2.682426,9.425365,-3.129615,-7.479796,-1.695851,-8.181639,-4.365040,6.588450,1.118876,1.450435],[9.069395,3.854471,-9.187722,-5.435032,1.317736,-4.037371,3.902914,-1.354938,-6.762682,-8.002343],[-1.899297,-0.715937,-8.690893,2.263912,-6.795009,1.476859,0.680995,-8.140381,-2.728874,0.909240],[5.090106,3.840323,7.877478,-7.575271,-2.336636,-0.419103,7.627765,-9.118728,2.934178,7.124782],[-9.765769,3.960038,9.166801,9.529558,-8.627095,-7.074167,9.406212,-1.334660,3.678503,-1.864170],[-1.446942,-8.831080,9.331476,0.280223,6.572336,-1.992116,-2.863855,4.308508,7.904157,9.402940],[4.481162,9.293040,5.000200,-8.848771,-7.332754,1.742562,9.359593,-4.823023,-7.165914,7.045647],[-8.240185,1.129161,5.558676,5.932726,9.323565,-7.395663,-9.533675,1.808775,-9.012326,-1.085740],[-0.141746,0.519270,-8.625534,-3.362141,3.318502,-9.750883,9.824361,-6.530327,-0.183371,2.759383],[0.367768,-0.184866,2.903339,1.490215,3.215298,-6.362840,6.412034,-8.189202,7.869967,-3.287557],[-8.440565,4.171333,-4.225519,2.771190,1.836146,6.483321,-6.630637,-2.997867,5.293481,6.966811],[6.361551,9.211870,8.748516,-8.105411,-5.491485,-1.789293,1.103671,9.830878,9.210079,-6.436655],[3.419151,5.401354,-2.028455,-8.843348,-9.830690,-5.637594,1.417997,-1.482564,5.310450,-6.122346],[-2.826098,2.969782,-8.509181,9.169850,7.192686,-9.120257,7.483821,-2.969596,9.929877,-6.752924],[9.417735,2.040103,-5.621617,9.384077,0.307280,5.318816,-2.480546,8.642211,0.860673,3.655062],[9.207776,-6.894410,3.097646,-9.046394,6.537912,-3.984327,3.251211,9.369944,-6.638980,-1.094415],[-1.467313,1.589913,-1.571365,7.009774,7.072252,-3.243922,-8.725910,-7.378196,5.652252,-3.323081],[3.789716,6.614565,3.402600,-3.534871,-7.779196,1.726758,-7.715724,9.677929,3.510021,6.985249],[6.100524,3.361992,-1.761861,-6.641395,-3.352929,-3.785005,6.702102,1.705087,-5.876595,-9.669285],[-0.037530,-6.512743,-9.639348,3.785315,-3.645497,1.939257,-4.269241,-0.975742,-6.910537,-4.245434],[0.915583,-3.251292,5.919078,2.231643,0.319522,-1.828690,9.673720,-3.845346,-7.048198,-6.761381],[-8.759138,4.619514,-4.396329,5.164606,-3.373697,-3.997082,-8.936763,-2.934227,-4.802008,-3.793746],[-0.877767,3.327138,0.718958,8.931372,7.151972,-0.469284,0.433142,-8.873887,5.575495,-5.766000],[4.349496,-9.657722,8.444694,0.152242,-9.546547,8.855879,-3.522858,2.849163,1.315604,-6.713811],[-7.085788,-0.066869,-1.418845,4.935890,7.899484,2.253884,-5.404215,-1.602012,-5.259207,7.746916],[7.152164,7.122536,0.889467,4.167297,-8.732574,2.366962,6.362895,-5.307539,-3.506459,3.923268],[-2.212471,5.337318,-1.334026,-6.586908,5.173102,-1.180061,0.135366,7.749560,-2.172540,2.534208],[-0.018173,6.533316,-1.858800,3.367569,1.637860,-6.296588,7.862132,8.988927,-1.050904,-8.145734],[6.684824,-1.614841,9.050873,-6.657799,7.892625,-1.139834,-5.767953,5.648336,8.658327,-9.711817],[5.880147,-8.520164,-4.363005,5.945255,-7.837512,-7.189695,-5.571729,-3.368931,-0.893802,8.249210],[-1.556021,1.851200,2.362484,7.192214,1.931188,4.223558,8.732931,0.109841,4.314453,-3.285368],[3.692789,-1.442698,9.405676,6.057720,0.694538,7.822902,-9.432990,-8.611222,8.835881,-5.500699],[1.970332,-2.790849,-7.478394,-0.796439,-1.248488,3.749676,-7.498415,8.430663,-1.094996,8.458524],[8.643547,8.712050,-8.757102,3.254294,8.251108,-1.354290,1.809169,9.053537,4.477941,-6.797725],[-7.223931,5.864188,6.340677,9.147735,4.574618,8.757988,7.094867,-2.996683,-8.783371,-0.984440],[3.321669,8.020107,0.800990,-8.824085,-8.470164,-3.626011,-3.326305,3.088452,-7.318930,7.284905],[-0.562297,-9.349158,9.423239,7.171799,-6.822965,-1.872603,-4.554746,-2.357541,-4.701517,-7.079845],[9.316524,-4.616090,-7.804043,7.496146,-9.495083,-0.864190,0.677439,-2.150107,4.334576,1.318513],[6.000109,-7.466516,6.765483,0.988457,1.114971,-2.547671,-7.628985,4.841585,9.706709,5.949624],[4.928390,-1.873441,-4.564999,-6.392863,-9.691425,0.383866,6.954489,4.359510,1.773254,-9.156785],[5.061255,1.885940,9.824512,-6.726571,-0.556286,-3.689855,-6.122905,-6.584568,-6.601129,-6.830963],[-4.538734,-6.883286,5.519408,-6.312735,3.206252,-5.736872,-8.738629,-5.154682,-1.772258,-4.222374],[6.108758,-4.371919,8.895380,-0.692975,3.146481,-7.769653,4.635303,9.546187,-8.358034,4.185019],[4.436855,-4.111301,9.034033,7.633185,-5.682527,-8.499444,0.151875,8.594328,-5.447904,-1.560073],[-7.868190,7.711406,6.076784,3.691384,0.822493,7.348786,-9.655642,-1.429431,1.285113,5.918747],[2.282226,7.425781,-8.863063,7.034180,-6.153959,4.733393,-0.436740,-5.217659,0.278350,1.921954],[-2.889440,7.045553,4.180626,5.361173,-7.433519,-6.921837,-5.150759,-2.557665,-0.154652,7.844901],[5.791513,7.772572,-0.912135,3.606408,6.546350,-0.127847,-5.320531,-1.028671,1.686033,-2.077013],[-7.112568,0.376895,-8.398213,-2.679783,5.291838,5.523734,-4.414918,-7.105578,1.905155,-9.392712],[-0.100558,-3.348033,9.277522,-8.207728,-8.549772,-0.389821,8.667189,-9.009535,9.299763,-7.418975],[-8.760131,6.934364,2.566781,1.229762,4.505953,3.991780,-5.184344,-7.292783,6.661404,-1.982996],[7.217968,-2.390451,-5.254699,-9.060120,5.607657,-9.913999,1.189375,-6.094453,5.955452,4.866423],[-7.185197,7.315362,-9.447506,-2.789118,-3.132949,-9.144956,8.594324,3.884942,4.311485,5.178887],[-5.664896,-1.937904,9.963317,-2.328408,1.086619,2.342316,8.953951,-3.470664,6.725645,5.683964],[-6.332542,0.009659,-5.452356,0.062335,3.743273,1.805338,8.260696,0.263353,-5.584438,8.057677],[3.948271,8.862491,3.025041,-4.289050,-5.809036,4.056994,8.237002,-0.799363,7.568989,5.747774],[-7.610640,-1.981481,3.662033,-2.106899,-1.441008,3.779091,9.911044,-2.013058,-6.399585,2.337190],[-5.261978,8.506913,2.016843,5.967419,-3.814206,5.403984,3.201595,-7.202908,3.465063,4.575149],[-9.080743,2.741979,7.340840,3.516059,3.308882,2.930187,7.740569,7.803983,-4.440018,2.807778],[-0.889719,-4.727148,-3.321521,-8.606557,7.878681,2.439766,-7.839748,0.284783,-9.424564,3.827934],[7.924045,9.659527,-2.582636,-3.856494,-8.584976,3.464777,-5.084011,-8.386051,-6.792632,3.780616],[-8.832298,2.495400,1.665847,8.114876,3.562683,5.078996,0.524924,2.713770,-7.475917,-1.532367],[0.775278,2.002973,6.651811,5.322950,-0.864717,-7.426333,8.540304,0.077566,-8.225164,0.196555],[4.792249,4.341993,4.920421,-9.975603,-1.769116,-1.603224,-6.498156,6.292170,-0.624187,7.164034],[7.206095,3.503362,-3.480650,-2.216017,0.466791,-3.212855,-5.659901,1.047020,6.311112,3.254998],[4.660322,6.921171,0.219465,4.747787,0.278227,-0.692809,-4.462594,-9.119591,-9.797343,-6.568820],[-9.007269,7.691332,-8.883713,-0.068025,-5.832544,1.768066,-4.703872,-7.674564,5.567035,8.025471],[-9.981531,-4.799768,6.705774,2.160966,6.805962,-5.304230,1.753868,-1.650968,-1.237757,3.960548],[5.838024,-3.504358,7.993953,2.281942,2.669064,-8.449198,3.310538,-8.926873,6.918731,-7.433284],[0.587785,-0.231256,-1.824948,-8.320928,9.156906,-9.829565,-5.991402,-1.511494,3.511069,9.046874],[-9.148828,-0.888908,-4.531877,7.251620,1.441387,-5.821454,-0.338026,2.908335,3.518674,3.595809],[4.553410,9.489265,9.646766,5.955082,-0.997145,2.532079,-3.393653,-2.889053,-4.343728,-3.374503],[0.976891,7.997232,3.981067,6.547545,-5.274891,-4.221253,-7.771348,-3.096301,2.216644,-3.413213],[-0.401546,7.478595,3.590780,9.118415,9.544151,4.707716,-6.291510,-6.365991,2.301128,-0.351226],[-9.401676,2.970994,9.297912,-4.507545,-3.470725,-3.340556,-0.664187,7.979836,6.572840,-1.387350],[4.948959,4.991491,-2.469346,6.755912,4.029927,6.369983,-1.768961,-8.296514,-1.423367,8.449203],[5.135446,4.788034,0.646480,-8.735491,0.510236,1.469378,-6.868333,-0.774031,-0.056786,7.680989],[-8.061012,2.070150,9.969946,-3.975216,3.119997,-8.717707,8.386936,-1.905255,5.097805,9.406650],[7.241591,0.403224,8.952614,-4.643920,8.424088,-3.672392,3.124917,5.231745,5.793263,-2.158638],[4.941748,-9.463942,6.074776,8.106427,2.299383,7.648562,5.857945,-0.329584,1.506561,-1.112510],[-5.921349,-6.266424,-3.449025,5.755353,1.524681,-3.942442,-3.519452,5.777927,-5.222109,-8.952313],[1.073446,-2.042075,-1.117223,9.057317,-5.040355,1.353928,-3.236715,-5.580986,9.774135,7.381418],[7.480462,9.287646,-1.470696,4.172504,9.743374,-8.592637,-5.027513,6.397713,9.916120,-8.245918],[-8.027450,5.360907,0.398322,4.181508,0.272323,4.298959,8.229438,-0.986036,2.209791,-6.923527]], dtype = "float64")#candidate|4610|(135, 10)|const|float64
call_4609 = relay.TupleGetItem(func_2431_call(relay.reshape(const_4610.astype('float64'), [15, 15, 6])), 0)
call_4611 = relay.TupleGetItem(func_2433_call(relay.reshape(const_4610.astype('float64'), [15, 15, 6])), 0)
bop_4612 = relay.not_equal(const_4601.astype('bool'), relay.reshape(call_4599.astype('bool'), relay.shape_of(const_4601))) # shape=(11, 195)
bop_4615 = relay.not_equal(const_4601.astype('bool'), relay.reshape(call_4602.astype('bool'), relay.shape_of(const_4601))) # shape=(11, 195)
func_3752_call = mod.get_global_var('func_3752')
func_3753_call = mutated_mod.get_global_var('func_3753')
call_4618 = relay.TupleGetItem(func_3752_call(), 1)
call_4619 = relay.TupleGetItem(func_3753_call(), 1)
output = relay.Tuple([call_4585,const_4600,bop_4605,call_4609,const_4610,bop_4612,call_4618,])
output2 = relay.Tuple([call_4586,const_4600,bop_4608,call_4611,const_4610,bop_4615,call_4619,])
func_4622 = relay.Function([], output)
mod['func_4622'] = func_4622
mod = relay.transform.InferType()(mod)
output = func_4622()
func_4623 = relay.Function([], output)
mutated_mod['func_4623'] = func_4623
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4652 = relay.var("var_4652", dtype = "float64", shape = (15, 15, 6))#candidate|4652|(15, 15, 6)|var|float64
uop_4653 = relay.asin(var_4652.astype('float64')) # shape=(15, 15, 6)
uop_4656 = relay.log2(uop_4653.astype('float64')) # shape=(15, 15, 6)
func_1902_call = mod.get_global_var('func_1902')
func_1903_call = mutated_mod.get_global_var('func_1903')
call_4660 = relay.TupleGetItem(func_1902_call(), 1)
call_4661 = relay.TupleGetItem(func_1903_call(), 1)
func_2153_call = mod.get_global_var('func_2153')
func_2155_call = mutated_mod.get_global_var('func_2155')
var_4672 = relay.var("var_4672", dtype = "float32", shape = (1470,))#candidate|4672|(1470,)|var|float32
call_4671 = relay.TupleGetItem(func_2153_call(relay.reshape(var_4672.astype('float32'), [7, 14, 15])), 2)
call_4673 = relay.TupleGetItem(func_2155_call(relay.reshape(var_4672.astype('float32'), [7, 14, 15])), 2)
output = relay.Tuple([uop_4656,call_4660,call_4671,var_4672,])
output2 = relay.Tuple([uop_4656,call_4661,call_4673,var_4672,])
func_4677 = relay.Function([var_4652,var_4672,], output)
mod['func_4677'] = func_4677
mod = relay.transform.InferType()(mod)
mutated_mod['func_4677'] = func_4677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4677_call = mutated_mod.get_global_var('func_4677')
var_4679 = relay.var("var_4679", dtype = "float64", shape = (15, 15, 6))#candidate|4679|(15, 15, 6)|var|float64
var_4680 = relay.var("var_4680", dtype = "float32", shape = (1470,))#candidate|4680|(1470,)|var|float32
call_4678 = func_4677_call(var_4679,var_4680,)
output = call_4678
func_4681 = relay.Function([var_4679,var_4680,], output)
mutated_mod['func_4681'] = func_4681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3577_call = mod.get_global_var('func_3577')
func_3578_call = mutated_mod.get_global_var('func_3578')
call_4722 = func_3577_call()
call_4723 = func_3577_call()
const_4728 = relay.const([[[9,-9,-3,6,9,-6,8,-9,4,8,8],[-1,-8,2,-8,-8,-8,-5,9,4,1,9],[1,-2,6,2,-3,-8,4,1,-8,6,-9],[-7,-6,8,-3,9,-5,-1,-1,4,6,7],[9,9,-8,-3,9,7,1,3,4,-7,10],[-9,-1,-9,2,6,-3,-3,1,9,-8,-5],[4,4,-9,7,1,2,-9,-8,6,-6,-8],[-1,-5,-10,7,-1,-3,-8,-7,2,3,9],[-7,-4,-10,4,-1,10,-3,8,-6,-2,-5],[-3,-7,10,1,1,6,-2,8,-6,-1,3],[-7,-6,4,-3,-8,1,1,5,-1,-1,2],[3,9,6,-6,-4,2,5,7,4,4,1],[9,9,-2,4,4,-1,7,-5,-6,5,8]],[[-5,9,2,-7,1,9,-3,-10,5,6,-9],[3,5,2,9,-9,-6,-6,-2,-1,6,-2],[-3,9,6,-1,-6,10,4,-1,-3,9,-9],[-10,-5,-5,-3,3,-1,3,8,4,-8,7],[-6,9,9,1,-1,2,-1,1,5,-1,8],[4,8,10,-2,-10,-5,8,-6,-5,-9,7],[3,-6,-3,7,-1,-5,-10,-4,6,-9,-4],[-7,7,9,9,7,-5,-4,-10,-10,-3,9],[-2,6,-9,-8,-3,5,-9,5,2,1,5],[-6,8,7,10,5,-8,-1,5,2,-6,-7],[1,4,1,3,-3,-2,-6,10,-6,-2,-5],[1,-4,-7,8,-7,5,-6,-9,4,-1,-10],[-7,5,-7,-8,-9,4,2,8,-5,-10,-8]],[[-9,-7,-8,-9,-5,3,10,8,4,-6,3],[-10,-7,7,7,6,-2,-9,3,-3,4,10],[-5,1,8,-8,3,-3,4,10,5,7,8],[10,-4,2,8,-4,-2,4,2,4,-1,8],[9,7,1,-1,-2,2,5,-5,-8,10,2],[4,8,-1,-5,4,-6,-7,-9,-8,1,-8],[-6,1,-10,5,-7,-7,-5,5,7,3,4],[-10,8,5,-10,8,-6,9,10,-9,3,3],[4,9,7,7,-3,4,7,-3,-2,2,-7],[-3,6,-5,8,8,-8,-3,10,8,-7,7],[4,10,10,-6,-2,6,-3,-7,-3,-2,4],[5,5,9,6,7,-7,-7,-8,4,2,-10],[-4,-5,-3,-5,-2,1,4,3,-8,-1,5]],[[10,9,-5,-5,-9,1,-6,-10,-1,3,-4],[-4,8,-5,-6,5,6,-1,8,-8,-5,-10],[5,-3,-6,10,5,5,7,2,-2,1,-4],[1,-8,-8,9,-5,-2,3,-7,6,-9,5],[2,-1,-6,-2,-3,-2,-3,-4,-10,9,9],[10,4,-6,-8,9,10,-4,-2,-5,-1,-8],[9,1,2,3,-9,-5,-8,6,-4,6,6],[-10,-8,3,-4,-6,-2,-2,6,-4,-8,-7],[-2,4,9,1,2,4,-6,9,-6,1,-3],[-2,8,-3,-7,-5,-5,-6,-1,-2,6,-2],[10,2,-8,6,8,8,4,-4,-4,-1,-8],[-5,-1,1,-2,-2,4,-2,1,-4,6,6],[-5,-2,-7,-8,-9,3,4,9,-7,-10,-7]],[[3,-10,6,7,7,-2,1,-3,6,5,-2],[-3,5,-4,-1,7,10,9,3,-9,9,9],[-3,-10,4,8,4,-9,-3,4,-5,-8,-10],[2,-4,-4,-4,-5,-7,6,2,-9,7,-7],[-2,-4,6,3,-8,7,-8,7,6,-9,-8],[-6,10,9,5,8,9,-4,6,10,6,8],[-10,8,-6,3,-3,-4,-4,10,9,7,-2],[4,2,-1,-3,4,3,-3,10,-1,-5,-6],[8,-8,-6,6,8,5,5,-8,-5,4,-4],[-7,3,9,-2,6,-1,-8,9,-6,-3,-7],[-6,-9,-7,9,9,6,-5,-9,10,-9,-2],[-9,-1,10,-3,-4,-1,-10,-5,-10,6,-8],[8,9,5,-10,-5,7,-3,1,5,-5,-8]],[[5,-7,-10,10,5,5,8,4,-6,7,4],[-2,6,-10,-4,-9,2,3,-10,-7,-2,10],[4,-8,-2,6,4,1,-5,-4,-9,-9,10],[10,6,-6,-4,10,2,-6,4,-10,-10,-10],[-4,-4,-9,4,7,-9,3,-1,2,3,-9],[8,-3,-4,1,-9,-10,8,8,-7,5,-7],[-1,-5,2,-9,-1,6,7,-10,-6,3,-2],[5,4,4,-10,-10,-1,-6,-5,4,1,-3],[-2,7,9,-5,-3,-2,4,6,9,5,-1],[3,-5,3,10,4,-8,-9,-1,8,5,-2],[-8,-5,6,-6,-2,-4,-9,2,-4,9,-5],[7,-5,3,8,10,-6,2,-4,9,-9,-2],[-2,6,-9,6,-5,4,-1,-1,2,5,-6]],[[-2,-5,-8,-5,-3,-3,3,-5,-7,-5,2],[8,4,-5,-10,6,-3,4,-5,10,-8,-8],[6,-1,8,4,9,-5,1,-2,3,4,8],[5,-1,-5,9,-9,9,-8,5,8,3,8],[5,9,-7,2,-3,3,4,-4,-1,8,4],[-10,-9,2,4,-7,2,-7,-9,6,-7,-7],[-7,4,5,-2,7,7,-10,9,10,3,4],[-1,-8,-6,-8,-8,5,6,3,8,-2,7],[3,-6,-3,-5,8,9,-4,2,9,10,-1],[5,-6,3,7,10,5,-5,6,5,-5,-1],[-9,-5,-3,4,3,8,-2,7,-3,1,2],[8,5,1,8,-1,7,7,2,5,-3,-5],[8,-4,7,-10,-1,-9,4,6,-4,-2,4]],[[-2,-5,2,-4,2,-6,-2,4,-4,-2,9],[2,1,4,-8,5,5,-1,-5,-3,-4,5],[-4,7,2,-10,9,-10,-10,4,-3,10,-8],[-4,-3,-1,-7,-2,-5,-8,10,2,2,10],[4,-9,-6,6,9,8,-6,8,5,-4,-1],[-9,-10,10,3,-3,-7,-6,1,-6,10,2],[-3,1,2,-2,8,4,4,-10,-8,-4,7],[-8,9,-9,-10,-9,3,4,-7,-6,10,5],[-6,1,-9,-8,4,-5,2,6,-4,6,6],[1,-8,10,-9,-2,-9,-8,7,-5,4,5],[-3,-9,-9,4,-8,-1,-6,-4,4,-9,-6],[-3,2,5,-7,3,5,-7,-8,-10,-8,3],[-9,-8,-1,-8,-3,-4,-7,5,1,-4,-10]],[[1,-3,-6,-9,4,4,-1,-8,-5,-9,10],[-8,-2,10,5,8,-2,6,-2,7,-3,10],[7,4,-1,-1,-1,-3,-9,-10,7,-10,-10],[4,-1,10,3,9,-7,4,-8,-8,-5,3],[-8,-8,-2,1,-7,4,8,-4,-3,3,-8],[10,3,4,-3,-1,1,-3,10,-4,2,4],[1,1,1,-6,10,-4,5,10,-6,-8,-2],[1,-6,-6,-1,8,-10,-6,2,9,-7,6],[4,10,7,-8,-9,-1,-4,-3,9,8,2],[-2,7,10,-6,-8,2,-2,-5,10,-9,-9],[7,-7,5,8,9,-4,3,2,10,-2,5],[-1,-4,4,-1,-6,7,7,-9,3,-6,6],[-1,-9,-6,3,-4,-4,5,-10,1,5,9]],[[3,-8,8,3,1,4,-7,2,-4,4,3],[-5,8,-10,7,-6,9,-5,5,-5,-4,-10],[-7,-10,-9,10,8,6,3,-10,5,-1,7],[5,5,-10,-7,7,3,7,-4,3,-2,7],[-4,6,-10,-6,-2,-2,-1,6,-3,1,2],[9,5,-7,10,2,10,5,-4,10,-4,-5],[-5,10,-3,5,1,1,-7,-4,-4,-2,6],[-6,-10,8,-7,6,3,-9,1,4,-9,9],[-5,4,1,6,3,10,8,-7,3,6,-3],[4,2,-5,7,8,9,3,-8,-1,-9,-6],[1,2,9,1,7,-6,-7,2,9,6,-10],[9,-6,-10,-1,3,-8,-7,-5,8,8,-2],[7,7,-2,5,1,-1,-4,3,-5,-9,-1]]], dtype = "int32")#candidate|4728|(10, 13, 11)|const|int32
bop_4729 = relay.add(call_4722.astype('int8'), relay.reshape(const_4728.astype('int8'), relay.shape_of(call_4722))) # shape=(10, 13, 11)
bop_4732 = relay.add(call_4723.astype('int8'), relay.reshape(const_4728.astype('int8'), relay.shape_of(call_4723))) # shape=(10, 13, 11)
var_4736 = relay.var("var_4736", dtype = "int8", shape = (10, 13, 11))#candidate|4736|(10, 13, 11)|var|int8
bop_4737 = relay.floor_divide(bop_4729.astype('float32'), relay.reshape(var_4736.astype('float32'), relay.shape_of(bop_4729))) # shape=(10, 13, 11)
bop_4740 = relay.floor_divide(bop_4732.astype('float32'), relay.reshape(var_4736.astype('float32'), relay.shape_of(bop_4732))) # shape=(10, 13, 11)
output = bop_4737
output2 = bop_4740
func_4748 = relay.Function([var_4736,], output)
mod['func_4748'] = func_4748
mod = relay.transform.InferType()(mod)
mutated_mod['func_4748'] = func_4748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4749 = relay.var("var_4749", dtype = "int8", shape = (10, 13, 11))#candidate|4749|(10, 13, 11)|var|int8
func_4748_call = mutated_mod.get_global_var('func_4748')
call_4750 = func_4748_call(var_4749)
output = call_4750
func_4751 = relay.Function([var_4749], output)
mutated_mod['func_4751'] = func_4751
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4781 = relay.var("var_4781", dtype = "uint8", shape = ())#candidate|4781|()|var|uint8
const_4782 = relay.const([[[1,-8,1,-5,-10,7,-7,9,8,7,-4,-9,10,-7],[-5,10,-7,1,8,-8,-8,-8,6,10,-1,7,-7,10],[-2,-8,8,-3,10,-4,-1,-7,-9,-5,-2,2,3,1],[-4,9,-5,-2,-9,-9,8,-7,6,-9,1,-4,2,-8],[-3,-5,9,-4,-3,9,-1,2,2,10,3,4,7,7],[-4,-4,-6,-6,5,1,-4,1,-3,-7,-10,2,8,7],[6,7,-1,-8,8,-1,-2,10,-7,3,3,4,7,-9],[5,-2,-2,-10,-8,9,2,10,4,-2,-2,-2,3,2],[-1,-4,-9,-7,5,-3,8,10,1,4,9,-10,-10,-8],[8,2,-1,8,-3,10,-4,1,-6,-4,1,4,-5,-1],[-9,-8,8,-6,6,-10,1,-9,4,9,-2,-7,-2,-3],[7,1,-4,3,-9,-3,-5,6,-3,-10,-4,7,3,-9],[4,3,-5,-7,5,2,-1,1,-10,-1,-1,-1,2,-10],[-9,2,-10,-7,3,-5,6,-4,-6,2,-1,10,3,-8],[-7,-2,9,2,-2,6,4,4,1,-8,5,3,-2,10]],[[4,2,6,10,9,3,-10,7,-10,-6,10,-10,-4,3],[-7,3,8,-1,-1,-10,-2,4,-3,9,-3,-8,1,-2],[-10,10,7,-9,1,1,-2,2,5,-7,6,-4,1,6],[10,6,10,-9,1,1,-7,-4,5,-2,-10,9,-5,7],[-4,7,-10,6,-10,8,-3,5,-3,-9,-5,-9,2,-2],[-10,2,-1,-2,3,-2,2,-8,1,7,4,-2,-8,3],[8,6,4,6,8,-8,-5,-8,2,-4,-1,7,-8,2],[2,8,1,-10,6,10,-5,7,-1,-8,10,6,-4,7],[-5,-2,4,-9,-5,-10,6,-5,10,-10,6,4,2,9],[4,-2,5,-6,-5,6,5,-3,5,3,-1,-6,2,4],[9,-2,9,4,9,5,-4,-3,4,-1,3,6,-6,10],[-4,4,10,-8,1,3,1,-3,6,5,4,-2,-9,-1],[-3,-5,-7,-2,-4,-6,-2,4,-8,10,4,5,-5,-7],[7,1,10,9,-4,6,3,2,2,1,-4,-3,10,8],[-7,10,-2,-6,-7,-2,7,-1,-10,8,-1,-2,-9,5]]], dtype = "uint8")#candidate|4782|(2, 15, 14)|const|uint8
bop_4783 = relay.subtract(var_4781.astype('uint8'), const_4782.astype('uint8')) # shape=(2, 15, 14)
func_3902_call = mod.get_global_var('func_3902')
func_3903_call = mutated_mod.get_global_var('func_3903')
call_4790 = relay.TupleGetItem(func_3902_call(), 1)
call_4791 = relay.TupleGetItem(func_3903_call(), 1)
func_3057_call = mod.get_global_var('func_3057')
func_3059_call = mutated_mod.get_global_var('func_3059')
call_4795 = relay.TupleGetItem(func_3057_call(), 0)
call_4796 = relay.TupleGetItem(func_3059_call(), 0)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_4797 = relay.TupleGetItem(func_1703_call(), 2)
call_4798 = relay.TupleGetItem(func_1705_call(), 2)
bop_4803 = relay.add(call_4795.astype('uint64'), call_4790.astype('uint64')) # shape=(1320,)
bop_4806 = relay.add(call_4796.astype('uint64'), call_4791.astype('uint64')) # shape=(1320,)
func_2116_call = mod.get_global_var('func_2116')
func_2119_call = mutated_mod.get_global_var('func_2119')
call_4809 = relay.TupleGetItem(func_2116_call(relay.reshape(call_4790.astype('float64'), [660, 2])), 0)
call_4810 = relay.TupleGetItem(func_2119_call(relay.reshape(call_4790.astype('float64'), [660, 2])), 0)
func_600_call = mod.get_global_var('func_600')
func_605_call = mutated_mod.get_global_var('func_605')
call_4813 = relay.TupleGetItem(func_600_call(relay.reshape(bop_4803.astype('float64'), [11, 8, 15]), relay.reshape(bop_4803.astype('float64'), [11, 8, 15]), relay.reshape(var_4781.astype('int8'), []), ), 1)
call_4814 = relay.TupleGetItem(func_605_call(relay.reshape(bop_4803.astype('float64'), [11, 8, 15]), relay.reshape(bop_4803.astype('float64'), [11, 8, 15]), relay.reshape(var_4781.astype('int8'), []), ), 1)
func_2039_call = mod.get_global_var('func_2039')
func_2041_call = mutated_mod.get_global_var('func_2041')
call_4817 = relay.TupleGetItem(func_2039_call(), 4)
call_4818 = relay.TupleGetItem(func_2041_call(), 4)
output = relay.Tuple([bop_4783,call_4797,bop_4803,call_4809,call_4813,call_4817,])
output2 = relay.Tuple([bop_4783,call_4798,bop_4806,call_4810,call_4814,call_4818,])
func_4820 = relay.Function([var_4781,], output)
mod['func_4820'] = func_4820
mod = relay.transform.InferType()(mod)
var_4821 = relay.var("var_4821", dtype = "uint8", shape = ())#candidate|4821|()|var|uint8
output = func_4820(var_4821)
func_4822 = relay.Function([var_4821], output)
mutated_mod['func_4822'] = func_4822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2740_call = mod.get_global_var('func_2740')
func_2742_call = mutated_mod.get_global_var('func_2742')
call_4840 = relay.TupleGetItem(func_2740_call(), 0)
call_4841 = relay.TupleGetItem(func_2742_call(), 0)
func_3581_call = mod.get_global_var('func_3581')
func_3583_call = mutated_mod.get_global_var('func_3583')
call_4851 = func_3581_call()
call_4852 = func_3581_call()
output = relay.Tuple([call_4840,call_4851,])
output2 = relay.Tuple([call_4841,call_4852,])
func_4854 = relay.Function([], output)
mod['func_4854'] = func_4854
mod = relay.transform.InferType()(mod)
output = func_4854()
func_4855 = relay.Function([], output)
mutated_mod['func_4855'] = func_4855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3695_call = mod.get_global_var('func_3695')
func_3697_call = mutated_mod.get_global_var('func_3697')
call_4941 = relay.TupleGetItem(func_3695_call(), 0)
call_4942 = relay.TupleGetItem(func_3697_call(), 0)
func_3677_call = mod.get_global_var('func_3677')
func_3678_call = mutated_mod.get_global_var('func_3678')
call_4947 = relay.TupleGetItem(func_3677_call(), 0)
call_4948 = relay.TupleGetItem(func_3678_call(), 0)
output = relay.Tuple([call_4941,call_4947,])
output2 = relay.Tuple([call_4942,call_4948,])
func_4954 = relay.Function([], output)
mod['func_4954'] = func_4954
mod = relay.transform.InferType()(mod)
mutated_mod['func_4954'] = func_4954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4954_call = mutated_mod.get_global_var('func_4954')
call_4955 = func_4954_call()
output = call_4955
func_4956 = relay.Function([], output)
mutated_mod['func_4956'] = func_4956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4622_call = mod.get_global_var('func_4622')
func_4623_call = mutated_mod.get_global_var('func_4623')
call_4977 = relay.TupleGetItem(func_4622_call(), 3)
call_4978 = relay.TupleGetItem(func_4623_call(), 3)
output = relay.Tuple([call_4977,])
output2 = relay.Tuple([call_4978,])
func_4989 = relay.Function([], output)
mod['func_4989'] = func_4989
mod = relay.transform.InferType()(mod)
output = func_4989()
func_4990 = relay.Function([], output)
mutated_mod['func_4990'] = func_4990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1201_call = mod.get_global_var('func_1201')
func_1203_call = mutated_mod.get_global_var('func_1203')
call_4991 = relay.TupleGetItem(func_1201_call(), 0)
call_4992 = relay.TupleGetItem(func_1203_call(), 0)
output = call_4991
output2 = call_4992
func_5022 = relay.Function([], output)
mod['func_5022'] = func_5022
mod = relay.transform.InferType()(mod)
mutated_mod['func_5022'] = func_5022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5022_call = mutated_mod.get_global_var('func_5022')
call_5023 = func_5022_call()
output = call_5023
func_5024 = relay.Function([], output)
mutated_mod['func_5024'] = func_5024
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5165 = relay.const([[[2.856282,5.244823,9.362751,4.579431,-1.461891,0.680087,-8.141922,0.200655,-0.822075,-0.623887],[-1.897998,0.800799,4.260688,8.096424,-6.498499,-0.430108,-2.164285,8.231909,-9.349852,7.177438],[3.754790,8.135048,4.095706,-1.876179,-9.957232,-7.409037,5.633961,-6.546656,0.906690,-4.393395],[-1.874674,-4.879017,9.319917,-8.311585,-7.636148,-7.224589,1.684830,6.871967,-9.119442,-8.252411],[9.502243,6.120193,-4.916171,1.765190,9.287750,7.552919,-0.541830,-4.465349,6.372184,-2.941674],[5.770841,-8.882952,-8.712043,8.295040,7.428810,2.311300,-6.312784,3.222603,-7.040844,8.458423],[-4.921984,7.219163,-4.153654,-8.745220,-2.997731,3.549864,0.357734,-2.586895,-9.774227,-5.317791],[-5.915637,-4.767235,-5.907923,3.095705,-9.630494,7.205088,-0.457880,2.753750,-2.012273,-3.265896],[-7.872095,-4.010945,1.440186,1.609535,3.907035,9.549051,0.799044,-3.709972,2.012658,-7.509629],[-0.488174,6.357245,-5.208876,1.306834,-2.382596,-3.504335,-6.537463,3.086826,7.697416,6.903056]],[[-1.644641,-4.924207,-9.587576,-5.869885,2.536820,4.303850,-3.285312,-9.727221,2.642843,7.216291],[4.701176,2.259974,8.157040,-5.467490,8.993496,7.312667,-5.299177,-0.682015,-2.906918,4.728476],[0.858991,-7.934035,2.380686,2.121978,-3.978388,-1.878996,-5.870977,0.189668,-6.491853,-9.955237],[9.994450,-1.580536,-8.281382,-2.953534,2.550233,-3.782168,-2.796780,-2.575620,6.938669,6.032251],[-0.784370,1.112778,5.819428,-0.579756,-7.526324,1.910735,-3.190928,-9.805709,-5.971129,-9.407978],[-0.234302,9.706704,5.391466,-1.465377,3.333597,-2.826801,7.073296,-2.838838,6.218276,0.738628],[4.169472,7.743889,-0.556027,-4.864132,3.918139,-0.350477,9.888584,-4.157841,1.576802,9.783452],[-3.013083,-9.489437,-0.622936,-8.470306,-6.180563,9.911917,0.669382,9.478438,-8.230851,-5.129027],[-6.818214,9.327192,-8.294030,-5.532776,-4.343866,-8.928459,-3.291627,1.729302,0.548986,-4.566094],[6.051953,-7.236097,-9.159331,-0.394115,9.497195,-2.087552,9.103681,-9.177807,-4.118148,0.881499]],[[-2.859652,3.751183,-7.309334,2.005445,1.666691,6.292796,-4.512522,3.725665,-4.728673,1.605753],[-4.188091,0.700151,-8.323737,-8.521231,5.869205,4.572855,9.838298,-2.398247,1.103622,-5.219125],[6.725129,2.437059,8.494803,-4.990268,-9.967043,0.595374,-7.786573,-6.291842,-2.673882,5.381491],[-1.900899,-5.434677,6.385634,-1.369923,-8.746313,1.747885,-9.547284,4.334272,0.384536,1.020456],[-0.093831,0.283360,-9.192428,5.602521,-3.482969,-8.883986,9.095828,-1.600170,7.321070,-6.559053],[3.956408,6.944340,-4.034417,0.078878,-8.929626,-6.587000,-6.691061,7.490150,4.064502,5.372044],[6.444258,7.677725,-3.318853,-5.981268,-5.482412,-6.176408,-4.514474,9.030297,-1.499029,7.731987],[-8.411054,6.130491,6.407948,9.634247,7.066542,-7.424393,-9.250513,-2.973330,2.647247,-0.763365],[6.620713,-8.920313,-9.867322,-1.603676,-8.163184,5.309763,6.780127,4.511985,-3.078942,-2.902304],[-1.701600,-7.578372,-0.580690,8.452456,2.205067,2.235773,-3.230195,3.996248,1.802466,-9.375948]],[[4.287551,-4.843709,-1.620601,9.274279,-7.714066,2.515954,-1.566767,0.491756,-7.130131,-4.863835],[-6.452697,-1.345502,5.674390,9.069374,8.693502,3.930661,-3.625893,-9.995024,2.638917,7.251467],[3.788234,-3.102813,-5.080692,-3.249715,8.048149,8.853536,-1.530785,-1.492925,1.656043,-3.812933],[1.977135,8.391114,-4.687635,7.508470,7.824105,7.407692,2.323582,-2.776458,-6.172134,-9.994756],[5.338560,7.390883,6.749124,-2.967637,-0.173607,1.315810,-5.610883,0.075238,-2.357139,-5.447831],[2.860614,-9.637127,-0.681080,-9.886230,0.648605,-2.130709,-1.271204,-1.112987,0.417872,-1.912063],[-0.597171,-4.341631,-5.126574,6.786017,-3.747834,-6.586166,2.669338,-1.165888,2.516858,-8.833445],[2.390682,-8.688762,3.599362,1.258068,0.454244,-6.319842,7.667699,-7.611392,-2.359525,7.159235],[6.212143,-4.899890,-4.193807,-4.961211,3.484346,8.640218,2.644193,8.509684,-0.740021,-9.481851],[-2.388264,8.912712,8.496354,-0.857796,6.444612,-2.611461,7.790521,-3.158762,0.947176,-3.838921]],[[0.196336,0.792431,4.482890,2.492409,4.674172,5.308249,-1.223887,4.373142,-2.202461,6.948942],[2.440008,-4.393103,-2.566377,4.041022,-4.329552,0.369295,2.644354,-6.665536,4.289811,-8.223359],[3.644653,-9.037940,6.225705,4.128675,8.327807,0.056413,-0.528292,-9.257524,-0.839294,-3.067482],[7.661377,7.650103,-0.251511,9.543051,4.458591,-2.123522,8.630381,4.252368,8.982490,-9.489746],[3.516449,4.341404,4.032700,3.465582,6.533793,-7.197153,9.140490,6.982895,-7.742506,3.151556],[8.000693,-1.572746,-2.343238,4.809336,3.525270,8.496978,6.563264,-5.431316,-7.265624,7.388446],[-1.995414,-6.438300,4.266563,1.713204,-8.880952,2.626546,4.456955,-3.348882,5.743512,3.962543],[3.057913,-4.960350,9.409360,9.069535,-6.903718,-7.427983,0.247235,-5.002938,-4.271360,-9.792855],[-9.183629,-9.914241,0.069738,0.461967,-2.467850,1.489732,4.404451,8.584886,3.365466,-1.052681],[9.981591,-7.592628,2.828945,0.625991,-8.286247,-9.577189,1.368369,-9.265038,8.287975,-9.723160]],[[-7.989964,8.148325,6.296066,7.674292,-2.755827,-7.903120,-0.730563,-8.338722,0.363899,5.749094],[9.041439,-1.848481,0.497038,5.419075,-5.244920,-4.417950,-2.330776,5.518986,-5.521549,-4.083215],[-4.102519,-9.426216,7.278073,0.242278,-3.167881,-9.803921,-2.625137,5.798527,-9.804560,6.014656],[-4.103047,4.014972,3.940249,-0.535746,3.625060,-8.280261,7.697533,-3.734120,1.244160,4.234512],[6.856906,6.238984,-1.429985,3.546359,-0.388935,4.407376,-4.196580,6.275176,5.915965,-0.182093],[-3.189478,2.749285,6.240125,-5.240232,0.601678,1.138461,6.094145,-4.289978,4.131113,-0.688490],[-1.002836,-8.209133,7.464886,9.239566,4.473708,1.108074,-9.638361,1.269778,2.601943,6.897333],[7.497545,5.617102,2.982375,-3.728936,2.904321,-1.806352,-3.455426,-9.423566,-0.351254,9.698899],[6.780649,4.440273,1.793623,-4.758722,-3.593770,5.258586,-1.761372,9.382822,-6.302849,-0.150751],[-8.592233,-2.925898,5.472023,-4.026143,-5.335555,1.784562,3.093537,0.241899,7.193453,4.178202]],[[9.204434,8.961451,1.091182,-6.912960,-0.644031,8.897809,3.502016,9.308070,-8.840215,7.768949],[4.269141,7.639662,0.358763,3.125222,-1.501181,4.662331,5.763772,0.455769,8.879015,2.665993],[-3.517941,-3.988261,-1.157060,-8.234855,-4.675912,5.810157,-7.815979,-3.371292,3.480547,-0.346724],[-6.496325,-0.747030,-4.004321,-1.997813,9.573070,3.824269,-3.310499,0.851055,3.419750,5.131305],[5.268495,-4.671702,3.353803,-6.213752,-5.278210,-7.368594,-4.422677,6.234528,-3.394089,-7.127829],[6.420619,9.323712,6.223339,-4.219967,-3.637342,-1.479171,-1.127517,4.854199,8.190114,-3.830664],[-6.639720,-9.666573,4.641951,7.378137,4.778494,5.376816,6.137082,-1.615453,-6.293818,-8.628102],[8.243506,-5.459107,7.836664,4.442710,2.776938,-9.157811,0.510941,-8.812973,-5.171214,-0.266249],[8.135316,-9.911410,6.011244,-0.740036,5.845707,-0.290202,5.504087,-2.509017,6.240081,-2.852357],[-8.722660,-8.333598,1.931758,-1.717811,6.460107,-5.060019,0.978092,2.504713,2.007120,-6.595729]]], dtype = "float64")#candidate|5165|(7, 10, 10)|const|float64
var_5166 = relay.var("var_5166", dtype = "float64", shape = (7, 10, 10))#candidate|5166|(7, 10, 10)|var|float64
bop_5167 = relay.floor_mod(const_5165.astype('float64'), relay.reshape(var_5166.astype('float64'), relay.shape_of(const_5165))) # shape=(7, 10, 10)
func_1973_call = mod.get_global_var('func_1973')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_5174 = func_1973_call()
call_5175 = func_1973_call()
func_2272_call = mod.get_global_var('func_2272')
func_2273_call = mutated_mod.get_global_var('func_2273')
call_5177 = func_2272_call()
call_5178 = func_2272_call()
func_3159_call = mod.get_global_var('func_3159')
func_3160_call = mutated_mod.get_global_var('func_3160')
call_5192 = relay.TupleGetItem(func_3159_call(), 0)
call_5193 = relay.TupleGetItem(func_3160_call(), 0)
func_3623_call = mod.get_global_var('func_3623')
func_3625_call = mutated_mod.get_global_var('func_3625')
call_5194 = relay.TupleGetItem(func_3623_call(), 0)
call_5195 = relay.TupleGetItem(func_3625_call(), 0)
output = relay.Tuple([bop_5167,call_5174,call_5177,call_5192,call_5194,])
output2 = relay.Tuple([bop_5167,call_5175,call_5178,call_5193,call_5195,])
func_5198 = relay.Function([var_5166,], output)
mod['func_5198'] = func_5198
mod = relay.transform.InferType()(mod)
var_5199 = relay.var("var_5199", dtype = "float64", shape = (7, 10, 10))#candidate|5199|(7, 10, 10)|var|float64
output = func_5198(var_5199)
func_5200 = relay.Function([var_5199], output)
mutated_mod['func_5200'] = func_5200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1169_call = mod.get_global_var('func_1169')
func_1170_call = mutated_mod.get_global_var('func_1170')
call_5223 = relay.TupleGetItem(func_1169_call(), 0)
call_5224 = relay.TupleGetItem(func_1170_call(), 0)
output = relay.Tuple([call_5223,])
output2 = relay.Tuple([call_5224,])
func_5236 = relay.Function([], output)
mod['func_5236'] = func_5236
mod = relay.transform.InferType()(mod)
output = func_5236()
func_5237 = relay.Function([], output)
mutated_mod['func_5237'] = func_5237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3057_call = mod.get_global_var('func_3057')
func_3059_call = mutated_mod.get_global_var('func_3059')
call_5238 = relay.TupleGetItem(func_3057_call(), 0)
call_5239 = relay.TupleGetItem(func_3059_call(), 0)
func_2740_call = mod.get_global_var('func_2740')
func_2742_call = mutated_mod.get_global_var('func_2742')
call_5250 = relay.TupleGetItem(func_2740_call(), 0)
call_5251 = relay.TupleGetItem(func_2742_call(), 0)
output = relay.Tuple([call_5238,call_5250,])
output2 = relay.Tuple([call_5239,call_5251,])
func_5282 = relay.Function([], output)
mod['func_5282'] = func_5282
mod = relay.transform.InferType()(mod)
output = func_5282()
func_5283 = relay.Function([], output)
mutated_mod['func_5283'] = func_5283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2039_call = mod.get_global_var('func_2039')
func_2041_call = mutated_mod.get_global_var('func_2041')
call_5404 = relay.TupleGetItem(func_2039_call(), 2)
call_5405 = relay.TupleGetItem(func_2041_call(), 2)
output = call_5404
output2 = call_5405
func_5411 = relay.Function([], output)
mod['func_5411'] = func_5411
mod = relay.transform.InferType()(mod)
output = func_5411()
func_5412 = relay.Function([], output)
mutated_mod['func_5412'] = func_5412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4854_call = mod.get_global_var('func_4854')
func_4855_call = mutated_mod.get_global_var('func_4855')
call_5413 = relay.TupleGetItem(func_4854_call(), 1)
call_5414 = relay.TupleGetItem(func_4855_call(), 1)
const_5424 = relay.const([[[7,7,9,-6,-7,1,4,-8,-7,4,3],[-1,8,2,1,9,3,10,9,5,9,-6],[7,-2,6,-6,3,6,1,5,2,-2,10],[-5,9,7,-9,3,-8,2,-4,-4,6,-6],[-8,1,-5,-4,-8,-7,2,-7,8,7,-8],[1,7,-6,-5,-2,-7,4,-7,-8,9,1],[9,2,-1,-3,-8,-8,-10,-10,1,10,6],[-10,4,7,3,-7,-8,-10,-10,8,7,-6],[2,-2,9,-3,-5,7,10,5,2,8,2],[10,10,3,4,6,5,-1,9,-9,-6,8],[-10,3,-4,5,8,-10,-1,-8,2,1,4],[-2,-5,-9,-7,10,9,-3,-4,-1,-2,-3],[-3,8,-8,3,-2,-5,5,-9,-1,2,-2]],[[-5,3,-1,8,-10,8,6,-8,6,-3,-6],[-4,-3,-5,7,1,-6,-9,-1,-2,9,8],[3,-6,3,-7,10,-5,-6,-7,10,6,-2],[4,3,-4,-3,8,8,5,5,-2,3,5],[10,4,-10,7,-7,-5,4,-3,-2,4,-6],[3,1,6,5,-7,5,-6,-4,-9,3,-1],[5,-7,-6,-9,10,-8,9,8,7,-2,7],[-1,2,-1,-8,-5,8,-2,-3,-9,-4,5],[-10,9,6,-4,-9,5,-5,-8,9,-5,-5],[3,7,10,-8,-5,8,10,5,-9,8,-8],[10,-5,-9,-6,-9,-2,-3,-10,-7,-1,-10],[9,4,-2,1,5,-7,-10,5,1,-9,10],[3,-2,4,-5,6,-2,3,-3,5,8,10]],[[-6,-8,-9,-10,-6,9,-5,-1,9,-6,8],[-6,-6,8,-1,-1,-5,6,5,-3,10,7],[8,6,7,-8,-3,-3,5,2,4,-5,-2],[3,8,8,-1,-3,-5,6,-3,7,9,5],[-3,-10,-2,-6,-9,-4,6,-4,9,5,8],[-7,6,-7,4,-8,10,-6,6,-7,-2,1],[2,-4,-3,-6,10,10,-5,-10,-2,8,8],[-6,-7,-1,-5,4,6,-8,-8,-9,-8,-4],[-7,-4,3,-3,-7,7,-2,-2,1,-4,-5],[-5,9,-1,5,1,-8,-3,10,-3,-2,10],[1,1,-7,10,-9,7,8,-4,3,-5,2],[-3,-3,-9,1,1,3,-5,-8,6,-9,-5],[9,2,-7,-5,6,-1,-6,-5,4,-8,-9]],[[9,7,5,8,-5,-9,1,5,-5,1,9],[8,4,-10,-1,7,-8,-5,2,-3,10,-5],[8,-6,10,-10,-5,-5,-2,-3,-5,3,7],[-4,-3,8,-9,-6,-5,-1,-10,-6,-1,7],[-7,6,-3,5,9,2,6,-7,5,5,6],[6,7,2,-2,-3,9,9,10,-3,3,3],[5,8,3,-1,9,4,9,6,-5,8,-8],[-8,-3,9,8,9,2,-5,-1,4,4,-6],[4,-4,-10,-6,3,9,7,-4,-8,8,10],[-4,2,1,-6,10,-8,10,7,8,-10,-6],[5,-1,4,-2,5,-5,4,4,4,9,-6],[-2,6,5,-7,4,2,4,5,10,5,-6],[3,8,-1,1,-9,4,-3,3,1,-3,-3]],[[1,-6,-7,-8,8,2,-1,5,2,-5,1],[-5,-9,4,-3,8,6,-7,-2,5,-10,-10],[-1,3,10,10,-7,6,5,-5,-6,4,-8],[4,-8,2,7,9,8,3,-9,9,-2,-9],[4,5,10,1,-2,9,-5,8,-4,2,-6],[-10,-8,10,-6,8,6,2,-5,-5,10,-5],[-5,-7,-9,-3,-3,-1,-1,-2,-3,-9,-4],[-6,-5,-5,6,-10,-4,-2,-5,7,7,1],[-10,-7,5,-1,-8,-9,-1,8,4,-8,4],[-9,-6,-6,-4,-3,2,-7,-7,-6,-7,-7],[-9,6,2,4,-6,4,-1,5,9,-2,-9],[10,7,-10,-2,5,-4,7,-6,10,3,-4],[-4,10,8,-6,10,2,3,4,-10,7,1]],[[-8,2,-1,-3,9,-5,-3,-10,-1,-7,8],[4,3,4,-8,3,-1,5,10,-8,-5,8],[7,9,8,8,5,-9,-8,8,9,-1,8],[4,-3,-7,-5,-6,-2,-10,-10,6,2,4],[10,3,7,2,9,-3,8,1,-2,-6,4],[5,-4,-1,-8,-4,9,10,3,-9,-7,3],[2,-9,-2,1,8,-10,-6,-9,-6,-5,-2],[10,8,-8,-2,10,-6,10,-1,2,4,-6],[-2,7,9,4,-8,7,-4,10,-7,-1,9],[-8,2,-2,3,7,2,-5,7,-4,-4,10],[7,3,2,4,-7,2,4,4,-1,-5,8],[-5,1,-9,-10,10,-10,-1,9,4,8,3],[-1,1,1,-6,-8,-3,10,-2,10,-8,-9]],[[7,-4,3,-8,-8,-7,-10,5,-7,-8,-1],[-10,-9,-9,5,7,5,4,7,-8,10,2],[-4,-7,-1,1,5,7,4,-4,3,2,5],[5,7,-7,-9,-8,-7,3,-1,-1,6,2],[-3,10,8,-3,-9,6,-4,-2,3,5,6],[-9,-2,5,10,7,-2,1,-2,-4,5,-6],[3,1,9,-8,-3,2,-7,3,-4,3,9],[7,-8,-2,-1,1,6,9,-7,-10,4,-6],[-9,-10,-9,-9,7,-2,5,8,-2,-9,3],[6,5,-10,10,-1,5,1,2,-4,6,-6],[2,10,-4,-4,6,-5,-10,1,-1,8,-2],[1,3,-7,-3,-3,-6,1,-9,-5,9,-10],[-4,-8,3,-2,6,-1,3,7,8,3,10]],[[-1,10,-8,5,7,-8,6,-10,-6,-6,-7],[-4,6,-6,-7,-4,-7,-6,5,-2,-3,-7],[2,9,-6,-3,-5,7,1,2,-10,-6,-3],[4,4,-8,8,5,-5,-6,-1,-3,-7,8],[6,4,6,-4,2,7,-6,2,2,-4,2],[-7,-8,-7,-1,-3,-5,-4,8,-2,-6,6],[-3,7,-4,2,10,8,10,-5,2,-9,-6],[10,10,2,-10,-9,-5,-10,-9,4,4,9],[7,8,-3,-6,9,-1,-9,-5,3,4,4],[6,8,3,4,-7,-6,-2,-1,8,-6,9],[3,-4,1,4,-4,7,4,6,-1,-1,-8],[-8,1,1,6,-5,-7,7,9,-3,4,4],[1,-4,-3,-3,-7,-3,8,8,-5,7,3]],[[8,-5,-2,-3,5,-8,-8,7,5,-2,-4],[2,8,-6,7,-9,9,8,-3,2,2,-10],[-3,2,10,-4,-6,-8,-2,-9,2,-6,4],[-4,2,6,6,-6,2,4,-4,8,-7,-6],[9,-9,-7,-3,8,7,-3,-6,8,7,2],[4,4,-7,8,-9,3,9,-5,-1,2,-3],[-1,-8,-2,1,-8,1,-8,-2,-6,-3,-1],[8,-9,-8,-7,7,-1,6,-10,1,-1,10],[5,-6,-3,9,-5,9,-8,-2,8,-10,4],[6,3,2,2,-5,-1,5,2,-7,2,9],[-1,-2,2,-1,10,-8,5,-8,1,-3,4],[6,3,-1,7,5,-2,-10,1,-9,-9,3],[-9,2,-2,-2,-2,-2,-2,-9,4,-9,-1]],[[9,10,-2,-8,-4,5,7,-10,6,9,-8],[1,-2,-3,1,1,7,-1,10,-5,-6,-10],[-10,4,-6,-3,8,4,-1,2,-1,6,-4],[-1,6,-9,-8,5,-3,3,-4,4,4,-3],[-4,-1,-7,7,3,8,-3,2,-7,-1,-8],[10,3,-5,1,-2,-10,-4,-9,2,8,-1],[-6,4,2,4,10,-1,7,9,-1,-6,5],[1,2,6,-3,3,-4,5,-10,3,4,-2],[9,10,4,2,-6,3,-6,8,-10,9,5],[9,4,7,7,6,1,-7,-1,-4,3,5],[-8,1,3,1,5,-5,-1,4,2,-3,7],[9,2,7,3,-7,8,-9,7,10,10,-10],[8,9,5,4,-6,1,6,-3,3,-2,-7]]], dtype = "int32")#candidate|5424|(10, 13, 11)|const|int32
bop_5425 = relay.minimum(call_5413.astype('int16'), relay.reshape(const_5424.astype('int16'), relay.shape_of(call_5413))) # shape=(10, 13, 11)
bop_5428 = relay.minimum(call_5414.astype('int16'), relay.reshape(const_5424.astype('int16'), relay.shape_of(call_5414))) # shape=(10, 13, 11)
func_5282_call = mod.get_global_var('func_5282')
func_5283_call = mutated_mod.get_global_var('func_5283')
call_5440 = relay.TupleGetItem(func_5282_call(), 1)
call_5441 = relay.TupleGetItem(func_5283_call(), 1)
output = relay.Tuple([bop_5425,call_5440,])
output2 = relay.Tuple([bop_5428,call_5441,])
func_5453 = relay.Function([], output)
mod['func_5453'] = func_5453
mod = relay.transform.InferType()(mod)
mutated_mod['func_5453'] = func_5453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5453_call = mutated_mod.get_global_var('func_5453')
call_5454 = func_5453_call()
output = call_5454
func_5455 = relay.Function([], output)
mutated_mod['func_5455'] = func_5455
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2740_call = mod.get_global_var('func_2740')
func_2742_call = mutated_mod.get_global_var('func_2742')
call_5458 = relay.TupleGetItem(func_2740_call(), 0)
call_5459 = relay.TupleGetItem(func_2742_call(), 0)
output = call_5458
output2 = call_5459
func_5463 = relay.Function([], output)
mod['func_5463'] = func_5463
mod = relay.transform.InferType()(mod)
mutated_mod['func_5463'] = func_5463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5463_call = mutated_mod.get_global_var('func_5463')
call_5464 = func_5463_call()
output = call_5464
func_5465 = relay.Function([], output)
mutated_mod['func_5465'] = func_5465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2921_call = mod.get_global_var('func_2921')
func_2923_call = mutated_mod.get_global_var('func_2923')
call_5469 = relay.TupleGetItem(func_2921_call(), 0)
call_5470 = relay.TupleGetItem(func_2923_call(), 0)
func_4404_call = mod.get_global_var('func_4404')
func_4408_call = mutated_mod.get_global_var('func_4408')
var_5476 = relay.var("var_5476", dtype = "int16", shape = (390,))#candidate|5476|(390,)|var|int16
const_5477 = relay.const([9,-9,-6,7,4,-6,10,-4,7,-1,8,-4,-6,7,2,-7,-9,-7,-7,-2,8,-3,2,-9,3,-1,-2,7,1,-1,-4,-6,-7,10,9,6,-8,6,-8,-8,4,2,-6,5,-3,-10,5,9,-9,7,-1,-5,-3,8,7,4,5,9,-7,9,-9,8,-5,5,8,-1,-4,-7,-1,-10,-10,2,-10,-9,7,8,4,-9,3,-2,5,-9,4,-8,8,5,-10,-5,10,-9,1,3,3,6,-8,-6,-6,4,8,6,9,6,-10,2,-7,9,10,7,5,-7,4,8,10,-1,-3,6,8,-1,-7,10,-6,3,-10,9,-4,8,2,9,9,10,-8,-4,-10,-5,-2,10,4,5,-4,9,1,-7,5,-4,-7,-6,1,-1,7,-8,3,-8,-1,-2,5,4,-9,10,-10,-10,-7,2,-6,-6,3,3,-2,-4,4,-2,7,7,-9,-2,9,6,8,-3,4,-9,-5,-4,3,-2,6,-6,-1,9,-9,-9,-4,-4,4,9,7,7,-2,9,-9,-2,6,-7,2,9,8,-10,4,9,1,7,7,10,-3,7,-1,-8,-1,-3,1,-4,9,-3,8,-2,1,-7,-3,10,-5,1,-7,2,-2,-9,-9,3,-7,-3,-8,5,6,8,6,-9,-4,-4,9,-9,3,5,-2,-1,5,-5,-1,-4,10,-10,1,-7,10,-8,-9,4,-4,5,-7,5,10,-9,-2,-10,7,1,1,-5,-1,-2,9,-2,4,10,-4,5,7,-9,-7,1,10,3,10,-2,2,-1,9,7,3,-7,2,-4,-6,-8,-1,8,-1,-3,-1,-1,-9,8,-8,-1,10,-9,-10,1,-4,-10,8,-8,-8,-9,4,-4,2,10,6,-10,-9,-9,10,6,9,-10,-3,3,9,-2,1,5,7,3,9,10,-10,9,-8,-5,1,1,6,-5,7,-8,-5,-4,-10,-6,10,-9,6,2,4,-9,5,-9,6,-5,-3,-3,-6,1,-4,3,6,6,-9,-3,8,-10,-4,3,4,4,9,-8,-2,10,-7,-10,4,-2,-4,8,9,-6,-6,2,7,9,-3,2,7,1,-5,-8,7,-4,7,3,-9,-8,8,-8,7,-2,6,6,-5,7,8,-1,-7,5,8,-9,-9,-3,-10,3,-10,-8,10,-10,-2,7,2,4,4,3,-7,8,-1,2,-3,9,-9,-10,2,6,-6,-4,2,10,-5,-7,-5,-10,-7,10,-9,-5,-7,-9,-2,-2,7,-7,-4,-4,-9,-5,7,5,-10,-6,-3,7,-6,8,9,-6,-8,5,1,-2,2,7,3,-3,-6,-9,-10,8,3,5,7,-8,8,8,-7,-2,-8,-6,10,1,8,4,6,-7,-7,1,-6,9,-6,-5,-7,-10,3,-3,7,8,6,5,-3,3,5,-4,-4,-6,1,-3,-8,1,-1,6,-10,3,-8,10,-1,1,-6,10,9,-2,9,7,8,-9,-6,-9,1,4,2,-1,6,10,7,4,6,-6,-1,2,-3,-10,-6,-7,1,-8,-5,6,3,7,-8,7,9,8,-6,-1,1,-8,-10,-8,6,4,5,5,7,-9,5,8,-7,3,-7,2,4,9,-5,-5,-2,-2,-8,-4,-9,8,9,7,2,-9,2,1,3,2,-4,9,-7,-3,-8,-9,-2,-2,-5,-6,10,-8,-9,10,8,8,-10,-7,7,-1,-9,-5,-7,3,-7,9,-4,-10,5,-3,-4,6,-9,3,5,5,2,6,-9,1,5,5,-8,-4,-9,-7,-9,8,-6,-4,-3,-4,10,-6,6,-7,9,4,-9,2,5,-10,2,2,9,8,6,-10,-9,-5,6,-10,4,-4,-10,8,8,2,5,10,2,9,10,-4,6,6,1,-10,-9,7,-3,-7,-2,2,2,5,-2,2,2,10,7,-3,-1,-5,-7,10,-7,10,-5,-9,8,9,-8,1,8,1,7,-6,-5,1,-3,-10,7,10,-6,-6,-4,-4,7,4,7,1,-9,6,-5,-4,7,9,-7,7,1,-10,10,9,1,3,1,4,8,-2,7,1,1,10,-8,-5,-2,-4,-1,10,-6,-10,4,5,-5,4,4,-8,3,6,4,-10,4,-9,-7,-7,-3,-2,-2,-10,7,-9,-9,-7,-4,6,2,-6,-2,-3,5,5,-6,6,5,7,10,-10,-2,3,-10,5,7,-10,8,9,5,1,1,1,3,-8,3,-2,-7,-2,4,-10,-1,-9,4,-10,3,2,1,10,1,-7,-5,1,1,-8,-3,5,9,-10,-3,-3,4,-10,9,10,-5,-6,3,-4,-3,9,-3,9,-8,6,-1,-8,6,-3,6,-7,-8,5,4,-6,-4,-4,-9,8,4,-9,-4,-2,-2,7,6,-1,9,-8,5,-10,8,7,-7,-5,10,-5,-8,5,2,10,-6,-4,6,9,-5,2,5,1,6,-4,-9,-1,6,8,9,-7,8,-1,-3,-8,1,4,-1,7,-2,-4,-10,1,-10,-5,7,-4,-7,-9,-7,-1,-9,2,1,-7,-2,5,5,-9,4,-4,10,-6,-4,7,2,-10,2,-2,3,7,10,7,-9,2,2,4,7,7,3,-3,-2,7,-6,9,8,-5,10,-6,2,-2,-6,-6,-6,-4,-9,-5,1,6,-1,-7,3,-7,-7,3,3,-4,6,3,5,3,6,4,2,-7,9,3,-7,6,-5,5,-8,6,9,6,-7,-7,-6,2,-4,-2,2,-4,6,-5,3,-9,-9,5,-4,-3,9,-6,4,3,-9,-1,-10,2,-7,7,6,-10,-10,-2,-3,9,-6,7,5,8,-6,-4,5,4,-2,-1,6,-1,4,3,2,-9,9,8,7,7,-6,2,7,-3,-7,-5,-6,1,4,7,-8,-4,-6,10,-10,-9,-7,10,-8,-3,7,-10,-6,3,7,-6,10,-3,-2,-10,-9,3,-9,-2,-5,-4,4,-5,4,-2,2,7,10,8,2,-8,-6,-1,-1,-2,9,-9,9,-7,6,6,-9,-9,5,-3,-5,10,-10,-6,5,7,3,8,2,5,-7,5,5,5,1,-7,-8,6,9,9,10,-9,-4,7,4,-5,4,-7,1,-9,1,-9,-2,-7,6,6,-3,-3,5,4,-3,-2,-6,5,10,-2,-9,-8,-7,-3,-2,-1,7,-4,3,2,7,-2,-3,-4,1,4,8,-5,8,8,-1,6,4,-10,10,-2,8,-1,10,-3,-3,5,10,6,7,9,4,6,5,-4,8,1,-9,6,-10,-2,-8,4,-4,6,-6,-9,-10,10,-1,-2,2,4,8,3,-8,10,-10,2,7,-7,-4,-3,1,2,10,10,7,-5,3,2,-3,-7,-9,6,8,-8,2,-7,-9,-5,-2,2,9,6,-5,3,-3,10,-9,9,-2,10,-2,-6,-7,-9,6,-10,-7,8,5,10,10,-9,6,6,6,-9,6,-7,-6,4,6,-10,-10,-6,8,4,-8,8,-2,-2,-4,-5,8,-5,-8,10,-5,-10,-9,-4,4,8,1,-6,2,-1,2,-9,10,7,-5,4,7,8,10,-4,8,-8,8,3,-5,8,-10,8,-1,8,1,-7,-3,8,-5,-2,4,3,4,-4,10,-6,9,8,8,7,7,-2,8,-6,2,-9,7,-10,8,2,6,-8,-2,6,-2,1,-8,2,3,-1,5,1,2,3,-5,-9,10,5,-4,4,-3,-7,-8,-7,6,-7,-7,-1,2,-8,8,8,-3,-2,6,-6,10,2,-4,-10,6,-1,6,10,7,-4,5,3,-7,-8,-10,3,-10,8,5,-4,5,-4,9,-8,-3,-9,6,-8,-6,7,-1,-6,7,-4,-1,-3,-6,-9,2,9,-2,6,2,-5,10,-6,4,9,5,-6,-2,7,6,2,3,-5,-2,7,5,-4,-5,6,-10,3,-8,6,-7,-5,6,3,9,-8,-1,6,-8,2,1,-5,1,-8,8,-9,6,-10,-3,4,10,-4,-1,-6,-1,4,-6,-4,-8,8,-8,-3,-2,7,-3,-7,4,-6,4,-4,2,-8,7,-7,-4,-5,1,5,10,-7,4,7,-7,-5,-5,-5,-6,-5,-5,-2,-7,-1,4,2,-9,-8,-6,3,10,-4,6,1,-2,-9,-1,6,-7,-8,5,8,10,-7,2,10,9,-6,5,8,-6,-6,7,4,-1,8,4,-1,1,3,-9,3,8,2,-7,-3,-9,-9,-3,2,-7,1,8,6,-10,-3,1,-7,-7,2,-1,-8,-4,-7,-4,-2,-3,2,2,1,8,-1,1,-8,8,4,-7,-10,-3,-9,-7,-8,1,-2,-2,7,8,-9,-7,-7,8,-6,6,-7,4,6,4,-4,5,-2,-10,9,8,-4,6,3,5,-1,5,9,-4,1,-8,5,-10,2,-5,-7,-8,1,4,-8,-1,-1,-6,6,-3,10,-1,-7,-1,4,-2,2,-3,2,4,8,10,4,10,-8,6,-6,-4,-1,-4,2,5,5,-6,7,8,7,-5,-6,8,9,3,-2,-10,1,-7,9,-8,10,-1,5,-2,-7,-1,3,-6,-5,8,5,2,2,-10,3,-3,-3,-10,4,-1,1,4,1,-6,9,6,2,4,9,-4,4,-5,-2,7,1,6,8,-7,10,-9,-9,-4,5,6,-2,6,8,4,10,-5,-9,-4,9,-10,-7,7,-4,-9,-1,-2,-5,-10,2,10,-7,-3,-6,-5,-6,-1,4,9,10,-6,2,3,-6,8,-7,10,-5,-2,7,5,4,8,-5,5,-6,-8,9,-6,6,-1,-6,9,-3,2,8,-5,3,-10,2,-6,6,-7,-5,10,-10,-6,-3,6,6,5,-5,-6,-6,7,-4,4,-6,7,-5,5,-1,10,6,9,5,-3,6,9,8,8,10,5,5,9,10,-5,-7,-4,-4,2,-9,-2,-6,7,-8,9,-10,-5,-6,-7,10,-7,9,-9,-4,-4,6,8,-6,10,-3,-5,-1,8,-5,-4,-6,-4,-2,-8,4,9,-8,5,-5,2,-4,-1,-7,4,3,-9,-9,-6,7,-7,-7,-2,5,-1,-2,8,-9,-1,-9,8,-3,3,-1,-4,4,-9,10,-8,-9,-7,1,7,6,6,-2,-9,3,-10,-2,3,8,9,-5,4,5,9,9,-7,3,-10,8,-4,1,7,8,1,4,-3,6,-7,1,8,1,2,-9,-10,2,-9,-6,8,8,10,-9,3,2,-8,-5,10,-4,-9,-9,-9,3,-5,6,-4,1,8,-7,-7,10,-2,4,10,-6,-10,-10,-5,-8,-1,-2,-9,-9,4,8,4,9,-5,-8,10,8,9,8,10,-4,10,-7,2,-8,1,10,-5,1,-1,-9,-5,10,4,7,3,4,-1,4,7,2,7,-3,-10,-4,-5,1,-9,-3,-8,-4,6,-4,-9,10,2,3,-1,-4,3,1,1,8,-2,3,-3,-9,-7,6,5,1,6,-9,-10,-10,-10,-3,-3,-3,3,-3,4,-7,-8,6,-9,-1,1,-3,-2,4,-6,-7,9,3,7,-2,9,2,4,-9,3,7,-9,-4,5,-4,-6,-1,-10,-1,-10,8,4,-7,5,1,-7,3,1,8,5,9,5,-10,-4,-4,4,4,-9,6,8,-4,-6,-2,4,4,-3,3,-5,-5,-4,3,-10,-5,1,-2,9,-5,-5,-3,-10,8,-4,-3,6,9,-6,7,3,-4,-7,5,-6,-2,-9,10,4,3,1,-8,-4,6,-9,-8,8,7,2,-1,2,9,-8,1,7,9,-1], dtype = "int8")#candidate|5477|(2145,)|const|int8
call_5475 = relay.TupleGetItem(func_4404_call(relay.reshape(var_5476.astype('int16'), [390,]), relay.reshape(const_5477.astype('int8'), [2145,]), ), 1)
call_5478 = relay.TupleGetItem(func_4408_call(relay.reshape(var_5476.astype('int16'), [390,]), relay.reshape(const_5477.astype('int8'), [2145,]), ), 1)
output = relay.Tuple([call_5469,call_5475,var_5476,const_5477,])
output2 = relay.Tuple([call_5470,call_5478,var_5476,const_5477,])
func_5481 = relay.Function([var_5476,], output)
mod['func_5481'] = func_5481
mod = relay.transform.InferType()(mod)
var_5482 = relay.var("var_5482", dtype = "int16", shape = (390,))#candidate|5482|(390,)|var|int16
output = func_5481(var_5482)
func_5483 = relay.Function([var_5482], output)
mutated_mod['func_5483'] = func_5483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3577_call = mod.get_global_var('func_3577')
func_3578_call = mutated_mod.get_global_var('func_3578')
call_5485 = func_3577_call()
call_5486 = func_3577_call()
func_1499_call = mod.get_global_var('func_1499')
func_1503_call = mutated_mod.get_global_var('func_1503')
const_5493 = relay.const([-3,-9,1,10,10,10,5,8,-9,-3,7,10,1,-4,-6,-3,9,10,4,6,1,1,-5,-9,-7,-9,-2,4,1,-2,4,-5,-5,-5,-4,-4,-4,10,7,-6,-6,1,-3,3,4,2,9,2,-2,-7,-5,1,8,-1,-5,-9,1,8,6,10,7,9,7,1,10,8,-9,-7,2,-1,-4,-7,2,-8,9,10,8,-3,3,-8,4,-8,-3,-1,4,2,-4,-4,-4,-5,-10,8,-4,-7,-5,-10,9,1,5,-10,3,9,-3,-4,-5,2,3,7,1,6,9,6,-6,-1,-10,-1,5,10,5,4,4,7,-6,-7,-8,-4,1,-4,-8,7,10,-10,-10,-10,6,-6,10,6,-10,2,7,5,-7,-2,-8,10,1,-10,10,-7,-3,-5,-6,8,5,4,-7,10,9,-8,3,4,8,4,-5,-4,-3,3,3,7,-1,-2,1,-2,-3,9,8,9,-7,-6,3,-1,1,8,-5,-4,8,-7,-9,1,-1,8,-2,-5,-2,-1,3,1,-6,-9,-6,9,2,-2,5,3,-2,5,-9,-4,3,6,-1,-9,-8,10,-3,7,-3,6,-2,5,-9,-9,1,9,-3,2,-4,1,-1,-5,9,10,2,-1,-5,8,7,2,3,3,-6,9,6,-3,2,1,-1,5,-9,8,3,7,7,7,3,-7,-5,-1,10,-7,-2,-6,-3,6,7,5,-4,-9,4,-1,8,-7,6,-3,10,9,-2,4,-5,-7,-8,4,9,-3,9,-1,3,9,6,6,-6,9,-1,3,-5,2,-7,7,10,-10,-3,-6,-8,8,9,-9,2,-2,1,10,-10,-1,-7,-2,8,5,-2,2,6,-4,-3,-9,-1,7,-10,7,-9,6,9,-4,1,-2,10,5,-1,2,-1,10,-4,1,-4,-4,1,1,-10,-8,-4,-6,-2,2,-9,9,5,-2,-6,3,-5,5,6,5,10,-7,-4,1,-3,9,-5,-1,-8,9,8,-4,-8,-7,4,8,-7,-10,-7,5,4,-1,-4,9,-7,-6,10,-8], dtype = "int16")#candidate|5493|(390,)|const|int16
var_5494 = relay.var("var_5494", dtype = "int8", shape = (2145,))#candidate|5494|(2145,)|var|int8
call_5492 = relay.TupleGetItem(func_1499_call(relay.reshape(const_5493.astype('int16'), [3, 10, 13]), relay.reshape(const_5493.astype('int16'), [3, 10, 13]), relay.reshape(var_5494.astype('int8'), [2145,]), ), 4)
call_5495 = relay.TupleGetItem(func_1503_call(relay.reshape(const_5493.astype('int16'), [3, 10, 13]), relay.reshape(const_5493.astype('int16'), [3, 10, 13]), relay.reshape(var_5494.astype('int8'), [2145,]), ), 4)
output = relay.Tuple([call_5485,call_5492,const_5493,var_5494,])
output2 = relay.Tuple([call_5486,call_5495,const_5493,var_5494,])
func_5496 = relay.Function([var_5494,], output)
mod['func_5496'] = func_5496
mod = relay.transform.InferType()(mod)
var_5497 = relay.var("var_5497", dtype = "int8", shape = (2145,))#candidate|5497|(2145,)|var|int8
output = func_5496(var_5497)
func_5498 = relay.Function([var_5497], output)
mutated_mod['func_5498'] = func_5498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1055_call = mod.get_global_var('func_1055')
func_1056_call = mutated_mod.get_global_var('func_1056')
call_5503 = relay.TupleGetItem(func_1055_call(), 1)
call_5504 = relay.TupleGetItem(func_1056_call(), 1)
func_148_call = mod.get_global_var('func_148')
func_151_call = mutated_mod.get_global_var('func_151')
const_5508 = relay.const(-8, dtype = "int8")#candidate|5508|()|const|int8
var_5509 = relay.var("var_5509", dtype = "int8", shape = (11, 195))#candidate|5509|(11, 195)|var|int8
call_5507 = func_148_call(relay.reshape(const_5508.astype('int8'), []), relay.reshape(var_5509.astype('int8'), [15, 11, 13]), )
call_5510 = func_148_call(relay.reshape(const_5508.astype('int8'), []), relay.reshape(var_5509.astype('int8'), [15, 11, 13]), )
func_2039_call = mod.get_global_var('func_2039')
func_2041_call = mutated_mod.get_global_var('func_2041')
call_5512 = relay.TupleGetItem(func_2039_call(), 1)
call_5513 = relay.TupleGetItem(func_2041_call(), 1)
output = relay.Tuple([call_5503,call_5507,const_5508,var_5509,call_5512,])
output2 = relay.Tuple([call_5504,call_5510,const_5508,var_5509,call_5513,])
func_5525 = relay.Function([var_5509,], output)
mod['func_5525'] = func_5525
mod = relay.transform.InferType()(mod)
mutated_mod['func_5525'] = func_5525
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5526 = relay.var("var_5526", dtype = "int8", shape = (11, 195))#candidate|5526|(11, 195)|var|int8
func_5525_call = mutated_mod.get_global_var('func_5525')
call_5527 = func_5525_call(var_5526)
output = call_5527
func_5528 = relay.Function([var_5526], output)
mutated_mod['func_5528'] = func_5528
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5596 = relay.var("var_5596", dtype = "float32", shape = (15, 8, 11))#candidate|5596|(15, 8, 11)|var|float32
uop_5597 = relay.cos(var_5596.astype('float32')) # shape=(15, 8, 11)
output = relay.Tuple([uop_5597,])
output2 = relay.Tuple([uop_5597,])
func_5600 = relay.Function([var_5596,], output)
mod['func_5600'] = func_5600
mod = relay.transform.InferType()(mod)
var_5601 = relay.var("var_5601", dtype = "float32", shape = (15, 8, 11))#candidate|5601|(15, 8, 11)|var|float32
output = func_5600(var_5601)
func_5602 = relay.Function([var_5601], output)
mutated_mod['func_5602'] = func_5602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5282_call = mod.get_global_var('func_5282')
func_5283_call = mutated_mod.get_global_var('func_5283')
call_5604 = relay.TupleGetItem(func_5282_call(), 0)
call_5605 = relay.TupleGetItem(func_5283_call(), 0)
func_2272_call = mod.get_global_var('func_2272')
func_2273_call = mutated_mod.get_global_var('func_2273')
call_5631 = func_2272_call()
call_5632 = func_2272_call()
func_2116_call = mod.get_global_var('func_2116')
func_2119_call = mutated_mod.get_global_var('func_2119')
var_5655 = relay.var("var_5655", dtype = "float64", shape = (1320,))#candidate|5655|(1320,)|var|float64
call_5654 = relay.TupleGetItem(func_2116_call(relay.reshape(var_5655.astype('float64'), [660, 2])), 0)
call_5656 = relay.TupleGetItem(func_2119_call(relay.reshape(var_5655.astype('float64'), [660, 2])), 0)
func_983_call = mod.get_global_var('func_983')
func_987_call = mutated_mod.get_global_var('func_987')
const_5662 = relay.const([3.245579,-3.477948,0.600709,-4.490026,-1.651794,4.025368,5.137913,1.388947,-5.036188,-7.689763,-2.533384,-6.281255,-0.760384,1.045848,9.009685,-9.718665,-8.419704,-8.857023,7.409195,-0.876015,1.554474,6.872903,0.442741,-3.415445,5.844892,5.706039,-6.986121,-0.800805,-2.152668,-6.786385,8.691322,-1.942588,-2.964071,0.806465,-5.051448,8.074396,8.968653,-0.438819,8.265226,-7.705365], dtype = "float32")#candidate|5662|(40,)|const|float32
call_5661 = relay.TupleGetItem(func_983_call(relay.reshape(const_5662.astype('float32'), [8, 5, 1]), relay.reshape(call_5604.astype('int8'), []), ), 0)
call_5663 = relay.TupleGetItem(func_987_call(relay.reshape(const_5662.astype('float32'), [8, 5, 1]), relay.reshape(call_5604.astype('int8'), []), ), 0)
output = relay.Tuple([call_5604,call_5631,call_5654,var_5655,call_5661,const_5662,])
output2 = relay.Tuple([call_5605,call_5632,call_5656,var_5655,call_5663,const_5662,])
func_5671 = relay.Function([var_5655,], output)
mod['func_5671'] = func_5671
mod = relay.transform.InferType()(mod)
mutated_mod['func_5671'] = func_5671
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5672 = relay.var("var_5672", dtype = "float64", shape = (1320,))#candidate|5672|(1320,)|var|float64
func_5671_call = mutated_mod.get_global_var('func_5671')
call_5673 = func_5671_call(var_5672)
output = call_5673
func_5674 = relay.Function([var_5672], output)
mutated_mod['func_5674'] = func_5674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2039_call = mod.get_global_var('func_2039')
func_2041_call = mutated_mod.get_global_var('func_2041')
call_5716 = relay.TupleGetItem(func_2039_call(), 2)
call_5717 = relay.TupleGetItem(func_2041_call(), 2)
func_148_call = mod.get_global_var('func_148')
func_151_call = mutated_mod.get_global_var('func_151')
const_5731 = relay.const(-5, dtype = "int8")#candidate|5731|()|const|int8
const_5732 = relay.const([-9,3,-3,2,-8,5,7,-3,9,-5,4,2,-4,-5,10,-1,8,-6,10,10,8,2,-7,2,7,-3,-9,8,-1,-4,-4,-8,8,-5,2,10,9,5,7,2,-5,6,9,9,8,9,-10,-6,2,9,-5,4,-1,1,-6,-3,-5,7,4,4,-1,3,9,-2,-1,5,-9,1,5,9,5,2,-2,4,5,7,-10,-9,-10,-9,3,-8,-2,4,10,-1,-5,7,-4,-3,-10,6,1,-8,-8,1,-3,-6,7,-6,-3,-4,-2,4,-1,-4,7,10,7,8,-6,-9,-9,6,4,7,-7,-6,1,4,8,4,9,-5,1,-4,-4,6,9,-1,3,2,8,-10,9,2,1,-5,9,9,-5,9,-7,5,8,-2,-6,3,-4,5,-7,1,5,8,-7,-6,-9,2,-3,-3,4,3,2,6,-7,9,9,3,7,-8,10,5,-10,-7,-5,-3,8,1,-2,-5,-7,4,-6,10,8,-8,-1,-10,-1,5,9,-4,-5,-8,1,5,-2,6,6,1,-1,4,1,4,-3,7,8,-1,-10,8,-6,1,-4,4,-2,-7,4,-6,7,9,10,2,-9,1,-3,1,5,-5,-1,-10,6,6,9,6,-4,8,1,4,-4,-1,7,6,6,-3,-4,9,-10,-1,7,-5,-4,-4,2,7,4,-2,-2,3,4,6,-8,-8,-10,-7,8,-5,-6,9,9,-5,6,4,-8,7,-4,9,-9,-10,8,3,1,8,9,5,-3,-2,10,8,-4,9,9,-2,5,-7,-1,-10,-10,-2,-8,-8,-9,-2,6,-6,-5,10,5,4,6,-4,2,3,-4,3,-4,-3,-1,2,4,-8,7,7,-2,3,-2,8,10,-8,-6,6,-3,-3,-7,2,4,-2,-9,-2,-10,10,-1,8,10,8,8,-8,-7,5,-9,-5,8,6,8,8,-3,4,9,-7,-9,-6,3,9,-8,-3,-3,10,10,7,-5,8,5,4,-5,2,-8,-2,-4,-2,-7,-9,-7,-10,-6,5,-5,-9,-4,-4,-6,2,7,-6,6,5,-4,2,5,6,-2,-5,3,-7,9,-5,-10,-8,2,-7,-3,-10,9,8,-7,-7,7,-3,-10,-7,-4,5,-3,10,-8,-4,1,7,7,4,-10,-2,-7,-7,-7,-7,1,6,4,1,-3,2,-10,-6,2,2,4,-3,9,7,6,-9,-5,-3,1,10,9,-9,-1,-6,6,-9,10,-9,-1,6,-2,6,-10,-6,-3,6,-8,-10,2,4,-4,6,2,-6,4,8,-9,-3,3,1,-8,7,1,-7,-5,-1,-1,-4,4,5,2,-4,-10,-9,8,1,6,-4,-7,-10,-1,1,7,4,-5,-7,-2,7,2,7,5,-6,5,-8,10,-3,8,-2,9,-4,6,-3,-6,2,-6,8,6,2,3,-4,-7,-5,-2,8,4,8,-5,10,-3,7,-3,3,-8,-3,-7,5,5,-9,-8,10,8,4,1,5,10,3,7,-5,3,6,-4,-1,3,-5,6,-5,-5,10,-4,-10,-4,-8,-1,6,10,1,2,-2,-4,6,-2,6,9,-3,-10,-7,-6,-5,-9,-8,-10,-2,4,9,-9,-10,5,8,4,7,2,8,9,4,4,-7,-4,-9,1,8,5,2,-6,4,-2,3,4,-4,5,-3,4,5,8,-6,-4,-10,-2,8,5,-7,-2,-2,2,-1,6,7,-3,7,6,10,-10,8,-5,2,-8,-6,1,-7,4,1,-2,-9,1,-6,-3,-9,-9,9,-3,3,-1,-2,-4,7,-6,7,9,1,-6,-6,-3,4,-2,-5,3,4,4,-8,4,-8,6,-6,-3,-4,6,-8,5,-3,4,-1,4,2,-3,8,-6,8,4,-6,5,-6,9,9,5,-2,10,5,-9,3,5,-9,-10,6,3,10,1,-8,-1,8,-1,-4,-4,-4,-4,-6,8,4,4,-1,2,-4,9,-7,1,8,-6,10,1,-4,10,-6,5,6,9,-8,-3,4,-6,-4,-4,6,5,1,-9,1,-5,10,6,-1,5,4,4,2,8,-7,-10,-4,1,1,10,-1,-8,7,7,6,7,-2,9,3,1,10,2,-6,-1,3,8,6,-5,7,1,5,-5,-3,2,2,3,-5,-9,-8,-6,2,6,-10,-3,4,2,3,6,-4,1,2,-9,1,-5,-6,3,-7,-8,-2,3,6,-7,5,-7,2,4,-2,-10,-10,-3,8,-6,6,1,6,6,-3,3,6,6,7,-3,-2,-3,8,9,-3,2,-1,-9,-10,9,10,1,9,6,-7,5,4,2,-6,-9,-7,10,5,-3,6,8,3,2,7,7,10,3,-2,7,7,-6,-8,-10,-8,10,6,-10,9,10,3,-8,-1,-7,6,-10,-10,7,7,-3,-2,-8,2,7,3,5,-7,9,6,3,-7,-6,3,7,3,-4,-2,7,-2,3,-4,-1,5,-10,-5,-4,-8,-3,4,-9,-7,-5,-5,1,7,-5,6,1,-8,-2,-6,9,-7,-4,-2,9,6,-6,-6,-2,-5,-3,5,-2,-7,-7,-3,6,1,-10,-3,-2,-6,-1,7,3,-10,-5,-2,-9,-3,9,-5,3,-3,8,-5,4,-9,4,-10,-10,-5,7,-1,-4,3,8,10,-5,-8,8,5,5,-1,-4,7,-5,-8,-8,9,3,7,3,5,-10,-4,6,-4,-5,-1,-8,-4,9,-5,3,2,7,7,7,-9,7,-9,3,6,-10,9,-3,1,5,10,-2,-1,-4,-1,4,-9,-3,4,4,6,-4,4,-7,1,2,7,-6,5,1,-10,-7,-6,1,-8,1,-1,-8,4,1,-7,-9,-7,7,6,9,4,8,6,-1,4,-8,-9,-9,6,-10,-3,9,5,-3,5,8,-5,1,-4,8,6,-5,6,8,6,-5,9,10,-2,-7,-2,-6,9,-10,2,5,4,5,-5,-2,-2,-1,-10,7,1,-7,-6,2,2,2,-10,6,-6,5,-5,-4,3,10,-4,3,8,10,5,-1,4,3,-2,-1,9,2,3,10,9,7,-4,1,-10,-8,-5,-4,-6,-4,-5,7,-10,-7,-2,9,9,-9,8,-7,-2,-3,-7,5,-5,10,-3,5,5,-6,-3,10,-3,-4,-8,-9,-7,-7,-1,-8,9,-8,4,-6,7,7,9,9,6,-2,6,7,6,-8,6,3,5,-10,5,9,1,10,-3,3,4,-8,-9,-6,10,-1,-9,6,8,-4,-3,4,8,6,-5,-3,-8,-1,-7,-3,-10,-5,-1,-4,6,-1,-10,-5,-9,2,-3,6,7,8,6,-2,6,-7,8,-5,3,3,8,-4,10,2,-2,-5,-8,2,4,10,1,6,-3,2,-6,-1,-5,-1,2,8,-4,2,6,5,8,-10,7,8,9,-7,-7,7,-3,8,-4,9,9,-9,5,-5,-3,4,2,-9,-4,-6,-5,4,5,-5,-10,8,-4,-4,-3,2,5,6,-7,-10,3,3,-3,8,-1,-9,-5,-10,-4,-8,3,-4,7,6,5,9,6,-8,9,6,-10,10,-2,6,5,2,7,6,6,-10,-2,10,10,-6,5,10,-9,-3,-3,4,5,7,3,-6,7,-9,4,6,9,-3,-4,-2,-5,3,-5,7,-2,-4,8,-4,-7,-4,4,6,-10,8,4,-8,-6,-9,7,-5,-10,5,-10,-3,-4,1,-4,9,-6,1,-8,8,-1,7,5,-8,2,3,4,2,-2,4,-7,-2,-2,4,-4,-6,-1,3,-6,1,6,-9,-1,-8,3,8,7,-5,-3,-8,1,-1,8,10,-9,-9,6,-7,10,-9,9,3,7,4,-6,10,8,-2,7,8,3,-3,9,4,-7,-2,-2,2,-4,-3,1,-10,5,5,1,10,-5,3,-2,3,1,6,4,-3,6,-1,-9,8,-2,-6,10,-9,8,9,8,-1,-9,10,-7,-2,-1,2,5,-4,6,-9,5,-1,7,-4,10,-4,4,-4,9,4,10,-9,-7,-1,-10,-9,-10,1,8,4,3,-1,-2,-6,1,-10,-5,6,-2,6,9,9,6,7,-7,6,-9,-5,-9,3,-10,-1,-1,-8,3,-7,9,-10,-7,-1,-9,2,-1,8,-7,-10,-3,-1,-7,9,3,10,3,-9,8,5,-4,-5,6,-6,4,2,-6,-2,-4,-3,-9,10,-5,-2,-8,10,6,8,-9,-6,10,-10,1,-1,5,1,-7,5,10,4,-6,2,2,-3,6,-3,7,7,9,2,-10,-9,-6,8,4,7,-10,2,-1,-2,6,7,3,1,10,6,-8,8,9,-3,-1,1,-9,3,7,9,3,7,8,7,-3,9,-6,-7,-6,-6,-9,6,1,8,-7,9,10,7,4,-7,5,-8,6,7,-8,-7,-1,6,4,-10,-10,-2,-7,-10,3,7,7,2,-5,-3,2,-9,-7,-7,-9,-4,5,1,7,2,3,9,-9,3,-9,-6,-10,-6,-9,8,9,9,9,4,3,5,7,8,-6,9,-9,8,9,-6,8,-8,-7,-1,-9,10,10,10,3,5,-10,7,-1,-1,-3,-1,-3,8,-10,-4,-3,-2,4,-4,1,8,-4,-3,2,-7,2,-7,-9,-5,-5,9,-7,-3,-5,10,6,7,3,-5,5,1,10,-2,-5,9,8,-8,-8,-8,9,9,3,3,8,-2,-10,10,-3,10,-1,-7,-6,6,9,-7,9,2,-3,-10,3,-6,5,4,10,5,4,2,9,5,1,6,9,-2,1,5,-5,10,7,-7,9,-10,-8,-2,-10,4,-9,1,-8,-10,6,4,4,-1,-9,10,4,10,10,-8,-7,2,-3,-1,8,2,5,-5,-2,-2,7,-9,-1,1,-1,4,1,3,10,7,-5,10,-4,3,-1,9,6,-9,8,-8,8,6,-9,5,5,5,-2,-4,-2,-4,-1,-3,2,-3,3,-1,5,-2,8,-2,-1,5,-4,2,5,8,-1,-4,-2,-5,-2,6,4,2,7,-7,2,2,10,-1,1,2,10,-5,6,-9,-6,6,5,4,-3,-10,2,9,9,-8,9,10,-9,-4,-7,-1,-10,-3,-6,-8,-7,-2,-2,2,2,2,1,3,-9,4,1,-6,-4,-7,7,7,-4,6,3,7,-9,1,1,9,2,-5,-9,-6,-4,-3,-8,7,-3,-8,-1,4,-6,-10,-8,8,-4,-2,5,-8,-1,-10,-3,-1,-9,5,-7,-10,3,-1,-10,-2,3,-7,-2,-7,-6,-1,5,-5,4,8,8,-4,9,3,-8,4,-9,-10,-4,3,8,-8,8,1,3,3,7,-4,7,-6,2,-4,10,1,5,-5,10,7,-9,1,-8,-3,4,-3,-7,-3,10,-10,-5,6,5,-4,7,4,-2,9,-9,-4,2,-3,-6,-7,-6,-7,-8,-3,-8,-9,-8,2,9,-9,4,3,-1,-4,-3,-3,8,9,5,-10,-9,-8,5,7,1,-2,9,10,2,-9,3,-3,4,-8,6,-1,-10,-3,1,8,-8,-7,-6,9,9,4,-9,-4,10,1,-1,-2,5,5,-9,-10,-3,-6,-3,10,4,-7,-8,-6,-4,-6,-3,-5,8,-4,5,4,2,9,-4,9,-3,-2,5,1,7,4,10,8,-1,4,10,-4,-5,-6,-3,8,-1,-7,8,-6,9,-7,-3,-6,-1,10,6,2,10,4,-4,9,3,-2,6,-10,-1,-4,3,-9,-10,-4,5,-10,7,-8,6,-6,5,-4,5,-8], dtype = "int8")#candidate|5732|(2145,)|const|int8
call_5730 = func_148_call(relay.reshape(const_5731.astype('int8'), []), relay.reshape(const_5732.astype('int8'), [15, 11, 13]), )
call_5733 = func_148_call(relay.reshape(const_5731.astype('int8'), []), relay.reshape(const_5732.astype('int8'), [15, 11, 13]), )
uop_5735 = relay.log10(const_5732.astype('float64')) # shape=(2145,)
output = relay.Tuple([call_5716,call_5730,const_5731,uop_5735,])
output2 = relay.Tuple([call_5717,call_5733,const_5731,uop_5735,])
func_5738 = relay.Function([], output)
mod['func_5738'] = func_5738
mod = relay.transform.InferType()(mod)
mutated_mod['func_5738'] = func_5738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mutated_mod.get_global_var('func_5738')
call_5739 = func_5738_call()
output = call_5739
func_5740 = relay.Function([], output)
mutated_mod['func_5740'] = func_5740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
call_5757 = relay.TupleGetItem(func_801_call(), 3)
call_5758 = relay.TupleGetItem(func_803_call(), 3)
output = call_5757
output2 = call_5758
func_5774 = relay.Function([], output)
mod['func_5774'] = func_5774
mod = relay.transform.InferType()(mod)
output = func_5774()
func_5775 = relay.Function([], output)
mutated_mod['func_5775'] = func_5775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4622_call = mod.get_global_var('func_4622')
func_4623_call = mutated_mod.get_global_var('func_4623')
call_5779 = relay.TupleGetItem(func_4622_call(), 4)
call_5780 = relay.TupleGetItem(func_4623_call(), 4)
uop_5783 = relay.asin(call_5779.astype('float32')) # shape=(135, 10)
uop_5785 = relay.asin(call_5780.astype('float32')) # shape=(135, 10)
func_4169_call = mod.get_global_var('func_4169')
func_4172_call = mutated_mod.get_global_var('func_4172')
var_5803 = relay.var("var_5803", dtype = "int8", shape = (2145,))#candidate|5803|(2145,)|var|int8
call_5802 = relay.TupleGetItem(func_4169_call(relay.reshape(var_5803.astype('int8'), [1, 2145])), 3)
call_5804 = relay.TupleGetItem(func_4172_call(relay.reshape(var_5803.astype('int8'), [1, 2145])), 3)
var_5807 = relay.var("var_5807", dtype = "float64", shape = (135, 10))#candidate|5807|(135, 10)|var|float64
bop_5808 = relay.bitwise_or(call_5779.astype('uint8'), relay.reshape(var_5807.astype('uint8'), relay.shape_of(call_5779))) # shape=(135, 10)
bop_5811 = relay.bitwise_or(call_5780.astype('uint8'), relay.reshape(var_5807.astype('uint8'), relay.shape_of(call_5780))) # shape=(135, 10)
output = relay.Tuple([uop_5783,call_5802,var_5803,bop_5808,])
output2 = relay.Tuple([uop_5785,call_5804,var_5803,bop_5811,])
func_5812 = relay.Function([var_5803,var_5807,], output)
mod['func_5812'] = func_5812
mod = relay.transform.InferType()(mod)
var_5813 = relay.var("var_5813", dtype = "int8", shape = (2145,))#candidate|5813|(2145,)|var|int8
var_5814 = relay.var("var_5814", dtype = "float64", shape = (135, 10))#candidate|5814|(135, 10)|var|float64
output = func_5812(var_5813,var_5814,)
func_5815 = relay.Function([var_5813,var_5814,], output)
mutated_mod['func_5815'] = func_5815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3121_call = mod.get_global_var('func_3121')
func_3123_call = mutated_mod.get_global_var('func_3123')
call_5847 = func_3121_call()
call_5848 = func_3121_call()
func_3007_call = mod.get_global_var('func_3007')
func_3010_call = mutated_mod.get_global_var('func_3010')
var_5854 = relay.var("var_5854", dtype = "int8", shape = (2145,))#candidate|5854|(2145,)|var|int8
call_5853 = relay.TupleGetItem(func_3007_call(relay.reshape(var_5854.astype('int8'), [2145,])), 1)
call_5855 = relay.TupleGetItem(func_3010_call(relay.reshape(var_5854.astype('int8'), [2145,])), 1)
output = relay.Tuple([call_5847,call_5853,var_5854,])
output2 = relay.Tuple([call_5848,call_5855,var_5854,])
func_5870 = relay.Function([var_5854,], output)
mod['func_5870'] = func_5870
mod = relay.transform.InferType()(mod)
mutated_mod['func_5870'] = func_5870
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5871 = relay.var("var_5871", dtype = "int8", shape = (2145,))#candidate|5871|(2145,)|var|int8
func_5870_call = mutated_mod.get_global_var('func_5870')
call_5872 = func_5870_call(var_5871)
output = call_5872
func_5873 = relay.Function([var_5871], output)
mutated_mod['func_5873'] = func_5873
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5957 = relay.var("var_5957", dtype = "int32", shape = (8, 10, 16))#candidate|5957|(8, 10, 16)|var|int32
const_5958 = relay.const([[[-3,-9,-8,8,-2,-8,-9,-5,-9,-10,-5,1,9,7,-8,-7],[-2,5,-9,-8,7,-1,10,-1,8,4,-6,-9,4,8,3,-4],[4,-4,4,1,8,10,-9,-9,-2,2,7,3,-7,5,6,6],[-3,-10,-2,10,6,-10,-3,-4,1,5,7,-9,-6,-6,-6,-2],[-3,-5,5,7,-7,6,5,5,6,-3,-7,-9,9,-7,6,-3],[2,-3,3,-10,-8,-8,-6,10,4,-7,8,-6,-9,-1,2,3],[-9,-3,-8,-3,-9,1,6,7,7,-1,-10,-3,9,6,-7,5],[7,10,-1,4,-4,7,-8,-1,10,1,10,9,-7,1,3,-2],[4,-8,5,-6,8,-8,-8,1,-3,-8,-6,4,-1,9,-1,-6],[3,3,-5,4,2,8,-2,-8,1,10,4,-1,9,10,-1,8]],[[-10,9,-9,1,-6,3,-9,-7,-8,8,-2,-8,-10,-2,7,-4],[-2,4,-7,-5,3,-5,1,-3,-10,3,-1,-3,-1,4,7,-5],[-3,10,-2,-7,3,7,3,-4,-10,-4,-8,-4,4,-7,7,1],[8,4,-8,-7,2,-6,-4,7,-7,-5,-8,4,-6,-2,-2,5],[-6,-2,-9,-5,2,5,4,-8,-2,6,3,-1,-2,3,8,5],[-8,-8,7,5,7,-5,-3,1,-7,5,-8,8,9,-5,-1,1],[-7,-4,4,-4,-1,-1,-2,-10,-1,9,-1,-9,-10,9,5,1],[-3,-6,8,8,-9,-6,3,-1,10,4,-9,-4,-7,4,-7,6],[2,4,4,-1,-5,5,2,-2,6,-6,9,7,6,-10,6,10],[-9,-10,-10,-5,10,3,-6,8,3,8,-5,9,-4,-4,-6,10]],[[1,-6,5,-6,-1,-10,-3,8,4,7,-1,-1,-9,7,1,1],[-9,3,-10,2,-5,10,-1,-4,-4,-4,-1,-10,-2,-6,-4,5],[1,9,4,-5,-4,-8,3,7,7,2,8,6,7,-3,6,6],[5,-1,7,-9,-10,3,1,1,-3,3,5,1,3,4,-1,9],[4,-4,-9,-3,2,-2,-7,-10,-8,-2,-4,6,9,9,8,6],[1,4,-5,-8,-2,1,-5,-10,5,7,-6,-9,1,-5,-5,1],[-2,-3,-2,3,3,-3,-4,1,-8,-9,9,9,5,9,4,-5],[4,3,-10,2,-2,-10,-2,6,-1,-4,4,-2,-9,8,-2,-2],[-10,4,3,1,-3,-4,6,-4,-6,1,2,-8,6,-6,6,5],[-3,7,-7,1,-1,-4,6,6,-6,3,-10,-1,-6,5,5,9]],[[-10,-3,-5,6,9,5,-8,7,-9,2,-1,6,-9,9,-2,1],[-5,9,-9,7,5,-5,-6,4,5,5,-8,3,-3,-1,-1,6],[-7,5,2,-3,-8,9,-3,7,1,-3,-6,-8,9,5,2,-7],[8,4,-5,-6,-7,5,10,-9,-8,1,1,3,1,-9,9,3],[-7,5,5,-5,6,4,5,-6,6,-5,9,6,-5,-4,-10,-10],[-3,2,-6,-2,-8,8,-10,6,-4,-4,2,4,6,2,6,-6],[8,-8,-5,-9,-7,-8,-1,-6,9,9,-1,-7,-2,4,10,6],[-5,4,-5,5,-10,-2,7,-8,-7,8,-2,4,3,-2,7,2],[-2,-4,-7,-10,1,-8,9,7,-4,3,-9,10,8,-6,7,9],[-4,8,-3,10,10,6,-5,5,-9,5,-9,1,-4,2,-7,-3]],[[-5,2,-9,6,10,9,7,5,6,8,-5,-3,-6,-2,-6,-3],[8,-3,-8,6,-10,-5,1,-5,-10,-2,-1,-5,10,1,-4,8],[-10,9,-7,7,-2,-6,-10,1,3,-6,8,1,-1,-3,7,-9],[2,4,-2,9,-3,10,4,-5,7,-1,-7,5,7,4,-1,10],[10,-5,6,8,-6,3,2,-9,1,3,4,-5,6,-4,2,-2],[-9,5,-8,-5,3,-8,-5,-1,-9,-6,4,6,1,-9,-8,-5],[6,4,-5,2,-6,1,7,2,10,-1,-9,4,-8,5,6,5],[-10,-7,8,4,-8,-9,-9,-3,9,3,4,8,-2,8,-2,1],[-1,-8,-8,3,7,2,-3,7,2,9,-7,8,9,9,-8,-5],[9,-8,-8,-2,4,-3,1,-8,7,-9,-4,8,-2,7,7,10]],[[7,-2,10,-2,-10,-1,2,-5,9,-7,-8,10,-2,-9,1,5],[-7,5,-3,-4,-9,-5,6,-3,-4,10,3,-2,-7,6,-10,7],[9,7,-8,-4,-5,9,-9,-8,3,4,10,-1,-7,-6,-7,6],[-7,-8,3,-4,-1,4,7,2,2,6,-2,-8,5,7,10,-7],[-8,2,9,2,10,9,-7,-7,-8,10,1,2,5,9,-5,-2],[3,4,1,1,3,-1,2,-1,5,4,-1,-4,-6,-10,9,-3],[6,-4,5,-10,-7,1,3,2,3,-3,-2,1,-8,-8,2,9],[9,7,-1,4,-10,-7,-1,10,-7,-8,-10,7,-9,6,4,-1],[1,9,-5,-7,-2,-7,-7,6,-7,-3,5,-6,-4,-8,-8,-5],[5,8,-9,-4,-1,-3,-7,2,-5,-3,-6,-5,-1,-1,1,7]],[[-10,-7,-2,-1,1,3,4,4,-10,-10,-5,-9,7,5,-5,-4],[-7,-5,2,-4,-1,3,-2,-5,-5,1,1,8,9,5,-8,-3],[2,6,6,-8,-6,-2,-1,3,3,6,3,1,-9,-7,7,-2],[8,2,-9,-10,-5,-5,1,-2,9,6,2,-3,-6,-8,8,2],[7,9,6,2,2,-8,3,-7,8,6,3,-10,8,9,-7,4],[-7,-1,10,6,1,5,6,8,-5,5,-2,4,3,9,-6,-6],[-4,6,2,-8,-6,7,-4,5,7,-7,4,-10,7,-1,-2,8],[5,2,5,-10,-2,2,-2,-5,-8,-10,4,-3,1,5,-10,1],[-6,5,-4,2,-4,2,-5,6,9,-8,-8,-5,-3,-4,3,8],[-10,-1,-10,10,7,-1,-9,8,5,-1,4,-3,6,10,7,-9]],[[1,-1,2,4,-5,4,1,4,-5,-10,10,-8,5,8,-5,8],[6,8,3,9,-8,4,4,-7,4,10,3,2,5,7,-8,8],[6,-4,-8,9,-8,5,-10,5,-10,-9,4,-8,-3,8,1,5],[-10,6,-4,3,-7,-5,3,-2,4,5,-3,6,-9,7,-10,7],[1,-9,-6,6,3,10,-1,8,-4,-3,7,4,4,7,-2,-6],[-8,8,1,9,5,-1,-4,2,-3,6,4,9,-9,-6,1,-6],[8,6,9,-5,-7,-3,-7,-8,1,2,3,-5,-8,-7,-4,-1],[-8,4,-10,-4,-7,-7,-1,5,-10,7,-10,8,-7,8,-6,4],[4,1,-6,3,1,8,-7,-4,-3,8,7,-3,1,-4,10,2],[5,-2,-8,6,4,-3,-10,8,10,-7,2,-3,-1,1,-6,-7]]], dtype = "int32")#candidate|5958|(8, 10, 16)|const|int32
bop_5959 = relay.greater(var_5957.astype('bool'), relay.reshape(const_5958.astype('bool'), relay.shape_of(var_5957))) # shape=(8, 10, 16)
bop_5963 = relay.multiply(const_5958.astype('int8'), relay.reshape(var_5957.astype('int8'), relay.shape_of(const_5958))) # shape=(8, 10, 16)
var_5968 = relay.var("var_5968", dtype = "int8", shape = (8, 10, 16))#candidate|5968|(8, 10, 16)|var|int8
bop_5969 = relay.logical_xor(bop_5963.astype('uint64'), relay.reshape(var_5968.astype('uint64'), relay.shape_of(bop_5963))) # shape=(8, 10, 16)
output = relay.Tuple([bop_5959,bop_5969,])
output2 = relay.Tuple([bop_5959,bop_5969,])
func_5973 = relay.Function([var_5957,var_5968,], output)
mod['func_5973'] = func_5973
mod = relay.transform.InferType()(mod)
mutated_mod['func_5973'] = func_5973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5973_call = mutated_mod.get_global_var('func_5973')
var_5975 = relay.var("var_5975", dtype = "int32", shape = (8, 10, 16))#candidate|5975|(8, 10, 16)|var|int32
var_5976 = relay.var("var_5976", dtype = "int8", shape = (8, 10, 16))#candidate|5976|(8, 10, 16)|var|int8
call_5974 = func_5973_call(var_5975,var_5976,)
output = call_5974
func_5977 = relay.Function([var_5975,var_5976,], output)
mutated_mod['func_5977'] = func_5977
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6012 = relay.var("var_6012", dtype = "uint8", shape = (2, 9, 9))#candidate|6012|(2, 9, 9)|var|uint8
var_6013 = relay.var("var_6013", dtype = "uint8", shape = (2, 9, 9))#candidate|6013|(2, 9, 9)|var|uint8
bop_6014 = relay.maximum(var_6012.astype('uint8'), relay.reshape(var_6013.astype('uint8'), relay.shape_of(var_6012))) # shape=(2, 9, 9)
output = relay.Tuple([bop_6014,])
output2 = relay.Tuple([bop_6014,])
func_6019 = relay.Function([var_6012,var_6013,], output)
mod['func_6019'] = func_6019
mod = relay.transform.InferType()(mod)
var_6020 = relay.var("var_6020", dtype = "uint8", shape = (2, 9, 9))#candidate|6020|(2, 9, 9)|var|uint8
var_6021 = relay.var("var_6021", dtype = "uint8", shape = (2, 9, 9))#candidate|6021|(2, 9, 9)|var|uint8
output = func_6019(var_6020,var_6021,)
func_6022 = relay.Function([var_6020,var_6021,], output)
mutated_mod['func_6022'] = func_6022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3195_call = mod.get_global_var('func_3195')
func_3196_call = mutated_mod.get_global_var('func_3196')
call_6049 = relay.TupleGetItem(func_3195_call(), 0)
call_6050 = relay.TupleGetItem(func_3196_call(), 0)
output = relay.Tuple([call_6049,])
output2 = relay.Tuple([call_6050,])
func_6065 = relay.Function([], output)
mod['func_6065'] = func_6065
mod = relay.transform.InferType()(mod)
output = func_6065()
func_6066 = relay.Function([], output)
mutated_mod['func_6066'] = func_6066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2685_call = mod.get_global_var('func_2685')
func_2687_call = mutated_mod.get_global_var('func_2687')
call_6085 = func_2685_call()
call_6086 = func_2685_call()
output = relay.Tuple([call_6085,])
output2 = relay.Tuple([call_6086,])
func_6118 = relay.Function([], output)
mod['func_6118'] = func_6118
mod = relay.transform.InferType()(mod)
output = func_6118()
func_6119 = relay.Function([], output)
mutated_mod['func_6119'] = func_6119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6118_call = mod.get_global_var('func_6118')
func_6119_call = mutated_mod.get_global_var('func_6119')
call_6126 = relay.TupleGetItem(func_6118_call(), 0)
call_6127 = relay.TupleGetItem(func_6119_call(), 0)
func_3677_call = mod.get_global_var('func_3677')
func_3678_call = mutated_mod.get_global_var('func_3678')
call_6133 = relay.TupleGetItem(func_3677_call(), 0)
call_6134 = relay.TupleGetItem(func_3678_call(), 0)
uop_6139 = relay.asinh(call_6133.astype('float64')) # shape=(660, 2)
uop_6141 = relay.asinh(call_6134.astype('float64')) # shape=(660, 2)
func_3195_call = mod.get_global_var('func_3195')
func_3196_call = mutated_mod.get_global_var('func_3196')
call_6142 = relay.TupleGetItem(func_3195_call(), 1)
call_6143 = relay.TupleGetItem(func_3196_call(), 1)
func_1499_call = mod.get_global_var('func_1499')
func_1503_call = mutated_mod.get_global_var('func_1503')
const_6145 = relay.const([-4,-6,1,-1,-8,1,9,-8,7,5,8,-3,10,-8,-8,4,-9,-6,-2,3,10,-2,8,-10,-4,9,4,8,5,-7,-3,3,-3,4,8,5,-9,-8,9,-4,-3,-6,-4,1,2,-10,-10,1,-4,9,10,1,-1,8,9,10,4,-8,-10,-8,8,-1,3,-4,-5,-10,-6,-8,-3,4,8,-3,2,3,-2,-8,6,-1,-9,5,-7,-3,-7,-10,7,2,2,10,-7,-9,3,-9,7,8,-6,-2,-10,-8,5,-7,5,-8,7,2,2,-4,7,3,-5,9,-8,4,7,-6,9,-5,-5,1,2,5,-5,8,-2,7,4,9,-9,9,-3,8,-8,-8,5,-4,-5,2,10,3,3,-9,7,6,-9,2,9,7,5,2,-7,9,-9,-3,5,9,7,4,6,-10,4,-10,-3,2,-4,-8,-5,4,-9,3,4,-1,-1,-5,-4,3,-6,-3,-2,5,-3,7,-9,2,-8,4,-6,-5,10,4,-2,4,-2,4,-5,-9,1,6,5,-10,2,6,-10,5,-10,8,9,-9,10,-4,4,3,9,7,-7,8,-2,-5,7,6,10,9,-5,-10,-4,2,-10,-3,-4,5,-7,1,7,-4,8,4,-4,-9,1,-4,6,3,10,-6,-6,6,-2,-3,-4,7,-6,2,-2,-7,-10,10,-8,1,10,-2,8,8,-6,-1,7,-2,7,-1,5,-3,-10,3,7,5,3,2,5,1,10,-2,10,-7,10,-7,9,-1,5,6,8,-1,-9,10,2,5,-3,-10,1,-1,7,-5,10,-5,2,10,5,10,-2,-7,-4,-10,-9,2,-8,-10,-3,-3,-3,-9,-10,-4,8,-10,-6,9,-1,-7,-9,-2,-3,4,-9,10,-5,-8,8,1,-8,10,-8,-4,-10,-3,1,10,10,-2,2,3,-3,-4,7,-10,-6,8,1,-5,2,-2,3,-1,-7,-2,-6,-4,-9,1,4,10,-2,-6,-10,-6,10,7,9,6,2,-2,-6,7,-7,-3,2,2,2,6,8,-2,9,4,9,3], dtype = "int16")#candidate|6145|(390,)|const|int16
const_6146 = relay.const([-7,8,4,8,-10,-6,1,10,-2,5,1,6,7,4,-6,-8,-9,-9,-6,-8,7,9,-7,1,10,-5,5,-10,7,-10,-6,-7,7,-7,-4,-9,-7,2,7,-7,-1,-9,4,-7,-5,3,7,6,10,7,6,-7,-6,1,2,10,2,10,-1,4,-5,-5,1,-4,-5,-4,-9,-4,-10,8,-4,-5,-10,-10,-1,-6,5,7,-3,8,-4,-8,5,-9,8,-7,8,9,-5,8,5,-2,-5,8,-2,7,9,10,-7,9,6,8,-5,1,-5,-6,5,3,-7,-10,-7,4,10,2,-4,-3,-4,-4,9,9,-8,-6,-2,-3,-2,-7,-7,9,-8,-7,9,-3,-2,-1,4,-4,-4,-5,1,-7,-8,6,-9,5,3,8,-1,-4,-9,3,-5,-8,-9,-7,-1,-7,-1,6,-7,7,-10,-3,-5,-5,2,-10,7,5,-10,-10,7,8,10,9,-5,-9,-1,-8,-9,-3,-1,5,-8,5,5,7,-5,-1,10,-4,6,2,6,-4,-4,-6,-7,-4,3,4,-7,9,7,6,-10,6,4,1,-9,6,1,8,-5,4,-4,-6,-9,-2,7,-8,10,2,2,-5,8,2,-5,9,3,-8,2,-7,-2,-9,-6,-5,9,-2,1,-9,1,10,4,-6,3,-3,1,-7,-8,2,-1,2,-4,-10,4,-4,5,-10,3,5,1,2,7,-7,-6,-2,-5,9,-1,-4,10,-1,-2,-3,1,5,-7,6,-6,10,-1,1,9,7,8,-8,-9,-5,-1,8,-8,4,9,9,4,-9,4,-2,9,4,9,6,-10,-9,-1,5,-9,3,10,5,-1,-8,4,9,-7,1,-4,6,-9,-9,3,8,-2,9,-2,5,-1,-10,2,8,-2,-7,-7,-2,-7,7,-4,1,-7,-7,7,4,-4,-2,-4,6,-1,-2,-8,-7,5,5,10,-5,-6,-5,4,-10,-6,7,-5,3,7,-4,-2,-10,-6,8,10,-10,8,1,9,-2,-4,-4,-1,-4,-4,3,-1,5,-7,3,8,6,-1,10,8,4,1,2,-6,-10,7,6,-6,5,-6,3,-4,-10,5,6,1,7,9,-4,6,-5,9,2,4,1,8,4,2,-6,5,2,1,6,1,-2,5,-1,-1,-2,-2,7,-8,9,-8,-8,-6,-6,2,-6,-3,-1,8,-3,-4,-7,7,-6,6,6,10,-6,-6,3,4,2,-10,6,-4,-8,-3,7,-9,-6,8,-1,-7,7,7,3,1,-1,-6,-8,5,1,9,1,-10,-4,-10,-9,2,-2,7,-4,-9,-9,1,7,1,5,7,9,4,6,-10,3,-2,-3,-10,-7,-10,-8,-4,-9,5,5,2,9,-9,10,-9,-9,7,10,-9,-10,3,-1,3,2,-6,1,-2,3,-5,-9,5,-7,-2,-2,4,-1,10,-6,4,2,-6,9,3,-7,5,3,6,4,7,-10,-6,1,-4,8,6,1,4,10,-4,-4,-5,-10,-8,-2,10,9,-4,3,-7,8,-2,-5,-1,-2,2,-3,-6,9,-7,1,2,5,-10,3,-9,1,10,-8,9,-5,7,-9,10,6,-10,9,9,-7,10,6,-1,-3,-3,1,2,-4,-3,-1,-4,4,-8,-3,5,-3,9,8,-6,-10,-3,-2,8,-5,2,6,5,-7,3,9,9,-6,-3,8,-7,-10,-9,7,-10,-10,8,-8,8,-5,5,-2,8,-5,-2,10,-1,-2,-3,-2,9,7,8,10,3,8,1,-4,-7,8,4,-1,-8,-9,-1,-8,-1,-10,2,-6,5,-3,-1,5,-10,7,1,-10,2,2,8,-6,4,-9,-5,-1,6,-9,3,-7,7,6,6,8,3,1,-9,2,2,2,-6,-10,-9,3,10,-2,6,6,-3,-9,-4,10,9,9,-3,1,-5,4,-7,-5,-7,-6,6,4,-4,-6,3,-4,-9,-4,-5,2,5,6,-10,-10,10,9,-8,7,-6,-2,10,1,-8,-2,1,5,-9,-1,3,-8,-9,-3,10,9,-3,-2,5,-4,10,8,-9,9,-7,9,-2,-5,1,-8,-7,6,-7,5,-6,9,-5,7,-1,2,-7,-9,7,1,-3,-1,-7,-2,-9,-8,-6,-9,5,6,2,-5,-8,-1,-10,5,1,-4,4,5,-3,-6,-2,-1,-3,-3,5,-6,-2,-10,-9,-8,10,1,7,7,10,2,-2,-9,10,-10,9,9,-4,8,5,-4,-5,1,2,4,5,4,-9,-10,4,-5,7,8,7,5,-9,9,7,-8,9,-10,9,10,6,10,-2,-7,-3,2,-1,1,9,6,9,-4,-7,3,-8,-8,4,6,-5,7,-8,-5,8,-6,8,-3,-5,7,1,2,4,-6,7,4,-5,-7,10,1,-2,6,-9,6,8,-10,5,10,9,6,10,-8,-1,-9,9,-10,6,-10,7,-1,-1,-5,2,-6,3,-8,3,9,3,6,5,4,2,-8,-9,-3,1,-9,-5,-3,8,-3,-9,7,-8,5,-9,-5,-2,9,4,-4,-1,-6,-9,-7,4,9,2,-5,-1,4,-9,10,-1,-3,-2,-10,1,1,6,-6,-10,4,-5,2,9,-3,-4,8,-1,-10,9,5,-5,9,-6,4,3,8,6,1,6,4,8,-5,4,-1,-7,-2,-3,-6,9,7,-7,-8,-6,10,5,-2,-5,-2,-4,9,-7,4,3,1,9,4,4,10,-2,-2,4,2,2,-6,6,8,8,5,1,5,-5,-7,-2,-9,-9,3,-6,3,-10,-4,6,-2,-3,8,-5,3,4,9,1,2,10,5,2,-3,9,-9,-9,-1,-9,6,4,6,-3,3,4,6,-3,-9,1,9,1,-4,10,5,-4,3,-4,5,-3,-3,-6,-2,-10,-5,-5,10,4,-8,-1,2,-6,3,-4,-7,-9,-6,9,-7,9,1,-8,-9,7,5,-10,3,-3,-8,-7,6,7,-4,-9,5,-2,-3,-9,3,10,6,-6,-10,9,6,2,1,-3,6,-5,2,-9,-8,-7,-6,8,1,-3,10,6,8,-9,7,-6,-6,4,-8,4,1,4,10,-9,5,3,-6,3,-9,2,4,9,-9,-1,5,-1,-7,-4,-9,2,-9,-9,-4,-6,3,-8,-6,-1,9,-1,7,3,-7,3,-3,9,-9,-4,9,5,10,2,-10,2,-5,6,-5,4,-7,7,3,2,4,-5,8,6,-3,7,-1,5,-3,6,1,9,10,-9,-4,2,-7,-1,-7,4,-7,-3,1,4,2,-2,-1,-2,7,-1,2,-8,-2,-5,-10,-9,3,5,2,8,7,-9,-10,-9,-4,-9,6,9,-8,7,5,-5,9,-2,7,-7,1,5,8,-8,6,1,5,-10,-6,3,4,-2,9,-4,-6,-3,6,6,-1,8,-2,-9,-9,-3,7,-6,5,-2,2,1,8,4,-1,7,5,-9,-4,-5,9,-8,4,-5,-4,3,6,3,-7,7,-7,10,-10,2,-7,-7,-5,-3,2,9,-9,-1,6,7,3,1,-8,6,10,-2,-5,3,7,-2,-4,-5,5,7,2,-5,8,6,7,-4,10,-3,-6,-6,2,9,8,10,10,5,1,-6,7,5,-4,10,6,8,2,2,-1,-2,5,-2,-9,-6,8,9,3,-1,4,10,9,-1,-1,4,6,-1,-8,-7,-2,7,-6,-7,-2,-8,4,-8,6,-1,-2,1,1,-10,-6,3,-1,-8,-7,-8,3,-5,5,-9,3,-10,-5,3,-4,2,-10,-8,5,10,8,1,5,10,9,3,-9,5,5,-7,-10,8,4,-3,-9,1,10,-3,-7,-4,-4,6,-9,7,-10,-4,-5,-2,-8,10,-5,-9,4,-7,6,-7,8,4,-6,-3,7,-9,-10,3,-4,-9,7,-4,-9,2,-4,-8,4,-2,-4,9,2,4,-8,2,-4,-3,-9,2,1,5,-4,-10,4,-1,8,-10,7,-4,2,9,9,9,-2,-7,-6,10,5,10,-3,10,8,-4,3,-2,-8,-3,2,8,-4,6,-7,-9,6,6,10,-3,-3,5,-8,2,-7,-6,8,2,-7,1,-5,-10,10,4,-9,8,5,9,10,1,10,-6,-9,2,1,4,4,8,-8,-5,9,-1,7,-10,-3,6,-10,4,5,7,-7,-1,-5,-6,1,-1,5,7,-6,-2,-9,4,3,9,2,-1,9,4,10,8,-3,2,-3,-1,5,9,4,-1,1,-4,-8,-6,6,10,9,-5,-6,-10,7,9,-7,-6,-4,-7,-9,-8,5,-3,-3,6,2,2,-10,9,6,-9,-8,3,2,-5,-2,-7,8,-7,-4,2,-6,-3,7,-4,-10,5,8,8,-9,-10,-9,-7,8,7,-8,-7,3,1,-2,4,-9,-1,-6,-8,3,5,4,8,-5,5,4,-8,-2,9,-5,7,2,3,-9,3,9,-4,10,-7,9,-10,2,9,8,-9,1,-9,5,10,-2,-8,3,-6,-5,9,4,6,7,1,5,8,-7,-8,-8,-8,5,3,-7,-2,3,8,-9,3,-10,-1,4,1,-6,-8,9,-7,2,-4,-1,3,6,-9,-6,2,7,-10,-5,-6,2,-7,10,5,6,-2,6,10,9,-8,4,-2,5,3,5,-3,3,-5,-4,4,-2,6,4,-9,-7,-9,-6,3,-2,-3,6,-1,-4,2,1,-7,-4,10,-8,4,-5,-8,3,4,10,2,1,-6,4,-2,-6,7,-1,10,9,7,-7,6,-8,7,8,-5,5,-4,9,-3,7,7,-10,-7,2,-2,1,-1,8,9,7,5,-5,-10,-6,-1,4,1,6,-2,6,-9,4,7,8,-8,-2,-7,-3,-3,-2,2,-6,-2,4,3,10,6,2,3,-1,-4,-5,2,-10,9,-1,7,-5,-2,-3,-9,-6,6,-8,9,2,-4,6,7,1,5,-6,-1,-3,9,7,10,3,-5,-7,-2,-10,7,10,-2,-9,-5,3,-7,-9,2,-6,-1,-8,-2,3,-5,-10,-8,8,3,1,4,6,-8,-2,2,3,-7,-2,-6,-2,-7,-3,3,7,1,-4,1,8,4,10,-8,-9,-5,-3,-5,4,-5,7,10,-4,3,8,9,-3,-8,8,7,-2,-10,5,-9,-7,8,4,7,9,-7,4,-4,8,-2,-7,-6,1,-3,-1,-5,-1,-10,1,5,1,-10,8,4,6,-2,2,2,-4,-10,-9,1,10,-5,1,2,3,-9,-5,-7,-6,6,9,-3,-4,5,-2,5,10,-2,1,-4,-7,3,3,-3,-3,9,8,4,-7,-7,-7,-10,2,9,7,8,-6,5,5,10,-8,9,-3,8,-3,-10,7,9,-3,5,-4,1,5,1,6,7,4,-2,8,8,6,6,-9,5,5,-9,6,-1,10,1,5,1,-4,8,-2,-7,-6,4,-6,-7,-10,10,-10,8,-4,5,-7,-1,-1,4,5,4,2,7,6,1,-10,-3,-5,-10,10,-8,-4,-7,-8,-8,4,-4,-9,-6,-5,-10,-1,7,4,3,-5,-10,-2,5,9,4,-7,-10,3,9,5,5,4,2,-1,3,-7,-6,9,-10,-7,4,7,10,9,8,-1,-2,8,5,8,-7,1,4,7,10,2,-7,7,-1,-7,2,3,-4,-7,-2,9,8,3,1,9,3,5,-10,-5,1,-1,9,9,7,-4,-9,-8,-2,2,-2,-5,10,-5,6,-3,-4,-4,-8,-8,-8,-4,5,5,-3,-3,8,10,-1,2,6], dtype = "int8")#candidate|6146|(2145,)|const|int8
call_6144 = relay.TupleGetItem(func_1499_call(relay.reshape(const_6145.astype('int16'), [3, 10, 13]), relay.reshape(const_6145.astype('int16'), [3, 10, 13]), relay.reshape(const_6146.astype('int8'), [2145,]), ), 3)
call_6147 = relay.TupleGetItem(func_1503_call(relay.reshape(const_6145.astype('int16'), [3, 10, 13]), relay.reshape(const_6145.astype('int16'), [3, 10, 13]), relay.reshape(const_6146.astype('int8'), [2145,]), ), 3)
bop_6156 = relay.add(uop_6139.astype('int16'), call_6142.astype('int16')) # shape=(660, 2)
bop_6159 = relay.add(uop_6141.astype('int16'), call_6143.astype('int16')) # shape=(660, 2)
uop_6162 = relay.acos(call_6126.astype('float32')) # shape=(10, 13, 11)
uop_6164 = relay.acos(call_6127.astype('float32')) # shape=(10, 13, 11)
bop_6165 = relay.not_equal(const_6146.astype('bool'), call_6142.astype('bool')) # shape=(2145,)
bop_6168 = relay.not_equal(const_6146.astype('bool'), call_6143.astype('bool')) # shape=(2145,)
output = relay.Tuple([call_6144,const_6145,bop_6156,uop_6162,bop_6165,])
output2 = relay.Tuple([call_6147,const_6145,bop_6159,uop_6164,bop_6168,])
func_6178 = relay.Function([], output)
mod['func_6178'] = func_6178
mod = relay.transform.InferType()(mod)
output = func_6178()
func_6179 = relay.Function([], output)
mutated_mod['func_6179'] = func_6179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2851_call = mod.get_global_var('func_2851')
func_2852_call = mutated_mod.get_global_var('func_2852')
call_6194 = relay.TupleGetItem(func_2851_call(), 0)
call_6195 = relay.TupleGetItem(func_2852_call(), 0)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_6212 = relay.TupleGetItem(func_1703_call(), 1)
call_6213 = relay.TupleGetItem(func_1705_call(), 1)
var_6215 = relay.var("var_6215", dtype = "int8", shape = (15, 12, 2))#candidate|6215|(15, 12, 2)|var|int8
bop_6216 = relay.bitwise_xor(call_6194.astype('int8'), var_6215.astype('int8')) # shape=(15, 12, 2)
bop_6219 = relay.bitwise_xor(call_6195.astype('int8'), var_6215.astype('int8')) # shape=(15, 12, 2)
output = relay.Tuple([call_6212,bop_6216,])
output2 = relay.Tuple([call_6213,bop_6219,])
func_6220 = relay.Function([var_6215,], output)
mod['func_6220'] = func_6220
mod = relay.transform.InferType()(mod)
var_6221 = relay.var("var_6221", dtype = "int8", shape = (15, 12, 2))#candidate|6221|(15, 12, 2)|var|int8
output = func_6220(var_6221)
func_6222 = relay.Function([var_6221], output)
mutated_mod['func_6222'] = func_6222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1434_call = mod.get_global_var('func_1434')
func_1435_call = mutated_mod.get_global_var('func_1435')
call_6226 = relay.TupleGetItem(func_1434_call(), 0)
call_6227 = relay.TupleGetItem(func_1435_call(), 0)
output = call_6226
output2 = call_6227
func_6228 = relay.Function([], output)
mod['func_6228'] = func_6228
mod = relay.transform.InferType()(mod)
output = func_6228()
func_6229 = relay.Function([], output)
mutated_mod['func_6229'] = func_6229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6228_call = mod.get_global_var('func_6228')
func_6229_call = mutated_mod.get_global_var('func_6229')
call_6248 = func_6228_call()
call_6249 = func_6228_call()
output = relay.Tuple([call_6248,])
output2 = relay.Tuple([call_6249,])
func_6251 = relay.Function([], output)
mod['func_6251'] = func_6251
mod = relay.transform.InferType()(mod)
mutated_mod['func_6251'] = func_6251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6251_call = mutated_mod.get_global_var('func_6251')
call_6252 = func_6251_call()
output = call_6252
func_6253 = relay.Function([], output)
mutated_mod['func_6253'] = func_6253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4280_call = mod.get_global_var('func_4280')
func_4281_call = mutated_mod.get_global_var('func_4281')
call_6280 = func_4280_call()
call_6281 = func_4280_call()
func_2153_call = mod.get_global_var('func_2153')
func_2155_call = mutated_mod.get_global_var('func_2155')
var_6286 = relay.var("var_6286", dtype = "float32", shape = (1470,))#candidate|6286|(1470,)|var|float32
call_6285 = relay.TupleGetItem(func_2153_call(relay.reshape(var_6286.astype('float32'), [7, 14, 15])), 2)
call_6287 = relay.TupleGetItem(func_2155_call(relay.reshape(var_6286.astype('float32'), [7, 14, 15])), 2)
bop_6290 = relay.bitwise_and(call_6285.astype('int16'), call_6280.astype('int16')) # shape=(2, 13, 2145)
bop_6293 = relay.bitwise_and(call_6287.astype('int16'), call_6281.astype('int16')) # shape=(2, 13, 2145)
output = relay.Tuple([var_6286,bop_6290,])
output2 = relay.Tuple([var_6286,bop_6293,])
func_6308 = relay.Function([var_6286,], output)
mod['func_6308'] = func_6308
mod = relay.transform.InferType()(mod)
var_6309 = relay.var("var_6309", dtype = "float32", shape = (1470,))#candidate|6309|(1470,)|var|float32
output = func_6308(var_6309)
func_6310 = relay.Function([var_6309], output)
mutated_mod['func_6310'] = func_6310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6386 = relay.var("var_6386", dtype = "float32", shape = (10, 14, 14))#candidate|6386|(10, 14, 14)|var|float32
uop_6387 = relay.atan(var_6386.astype('float32')) # shape=(10, 14, 14)
output = relay.Tuple([uop_6387,])
output2 = relay.Tuple([uop_6387,])
func_6406 = relay.Function([var_6386,], output)
mod['func_6406'] = func_6406
mod = relay.transform.InferType()(mod)
var_6407 = relay.var("var_6407", dtype = "float32", shape = (10, 14, 14))#candidate|6407|(10, 14, 14)|var|float32
output = func_6406(var_6407)
func_6408 = relay.Function([var_6407], output)
mutated_mod['func_6408'] = func_6408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_759_call = mod.get_global_var('func_759')
func_760_call = mutated_mod.get_global_var('func_760')
call_6461 = func_759_call()
call_6462 = func_759_call()
var_6480 = relay.var("var_6480", dtype = "float64", shape = (10, 13, 11))#candidate|6480|(10, 13, 11)|var|float64
bop_6481 = relay.left_shift(call_6461.astype('int8'), relay.reshape(var_6480.astype('int8'), relay.shape_of(call_6461))) # shape=(10, 13, 11)
bop_6484 = relay.left_shift(call_6462.astype('int8'), relay.reshape(var_6480.astype('int8'), relay.shape_of(call_6462))) # shape=(10, 13, 11)
output = relay.Tuple([bop_6481,])
output2 = relay.Tuple([bop_6484,])
func_6503 = relay.Function([var_6480,], output)
mod['func_6503'] = func_6503
mod = relay.transform.InferType()(mod)
var_6504 = relay.var("var_6504", dtype = "float64", shape = (10, 13, 11))#candidate|6504|(10, 13, 11)|var|float64
output = func_6503(var_6504)
func_6505 = relay.Function([var_6504], output)
mutated_mod['func_6505'] = func_6505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_801_call = mod.get_global_var('func_801')
func_803_call = mutated_mod.get_global_var('func_803')
call_6518 = relay.TupleGetItem(func_801_call(), 0)
call_6519 = relay.TupleGetItem(func_803_call(), 0)
output = relay.Tuple([call_6518,])
output2 = relay.Tuple([call_6519,])
func_6524 = relay.Function([], output)
mod['func_6524'] = func_6524
mod = relay.transform.InferType()(mod)
output = func_6524()
func_6525 = relay.Function([], output)
mutated_mod['func_6525'] = func_6525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3511_call = mod.get_global_var('func_3511')
func_3512_call = mutated_mod.get_global_var('func_3512')
call_6537 = relay.TupleGetItem(func_3511_call(), 1)
call_6538 = relay.TupleGetItem(func_3512_call(), 1)
func_6178_call = mod.get_global_var('func_6178')
func_6179_call = mutated_mod.get_global_var('func_6179')
call_6549 = relay.TupleGetItem(func_6178_call(), 4)
call_6550 = relay.TupleGetItem(func_6179_call(), 4)
output = relay.Tuple([call_6537,call_6549,])
output2 = relay.Tuple([call_6538,call_6550,])
func_6553 = relay.Function([], output)
mod['func_6553'] = func_6553
mod = relay.transform.InferType()(mod)
output = func_6553()
func_6554 = relay.Function([], output)
mutated_mod['func_6554'] = func_6554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2921_call = mod.get_global_var('func_2921')
func_2923_call = mutated_mod.get_global_var('func_2923')
call_6557 = relay.TupleGetItem(func_2921_call(), 0)
call_6558 = relay.TupleGetItem(func_2923_call(), 0)
var_6577 = relay.var("var_6577", dtype = "bool", shape = (40, 2))#candidate|6577|(40, 2)|var|bool
bop_6578 = relay.greater_equal(call_6557.astype('bool'), relay.reshape(var_6577.astype('bool'), relay.shape_of(call_6557))) # shape=(40, 2)
bop_6581 = relay.greater_equal(call_6558.astype('bool'), relay.reshape(var_6577.astype('bool'), relay.shape_of(call_6558))) # shape=(40, 2)
output = bop_6578
output2 = bop_6581
F = relay.Function([var_6577,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6577,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
